{"similarity_score": 0.3898412698412698, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "c6824df63481c118ff635794154952b3", "bug_code_uid": "04a5c3a3aee4af34618df9cfd038a4eb", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "b7d5a540d1d17e0cc25c7d5708a4e4ec", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long a[100003],b[100003],x[100003];\nint main()\n{\n    long long n,m,i,total=0,j;\n    scanf(\"%lld\",&n);\n    a[0]=0;\n    b[0]=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        total=total+a[i];\n        b[i]=total;\n    }\n    scanf(\"%lld\",&m);\n    for(j=1;j<=m;j++)\n    {\n        scanf(\"%lld\",&x[j]);\n    }\n    for(j=1;j<=m;j++)\n    {\n        for(i=1;i<=n;i++)\n        {\n            if(b[i]>=x[j])\n            {\n                printf(\"%lld\\n\",i);\n                break;\n            }\n        }\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nlong long a[200000],b[200000];\nint main()\n{\n    long long n,i,m,total=0,x,j,start,end,mid;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        total=total+a[i];\n        b[i]=total;\n    }\n    scanf(\"%lld\",&m);\n    for(j=1;j<=m;j++)\n    {\n        scanf(\"%lld\",&x);\n        if(x<=b[0])\n        {\n            printf(\"1\\n\");\n        }\n        else if(x>=b[n-1])\n        {\n            printf(\"%lld\\n\",n);\n        }\n        else\n        {\n            start=0;\n            end=n-1;\n            while(start<=end)\n            {\n                mid=(start+end)/2;\n                if(b[mid]>=x&&b[mid-1]<x)\n                {\n                    printf(\"%lld\\n\",(mid+1));\n                    break;\n                }\n                else if(b[mid]<x)\n                {\n                    start=mid+1;\n                }\n                else if(b[mid]>=x&&b[mid-1]>=x)\n                {\n                    end=mid-1;\n                }\n            }\n        }\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.6823324630113142, "equal_cnt": 24, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 13, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "76f380723702705f02b5ecec4e946042", "bug_code_uid": "cc55366fdaca65152721fcc3d368588b", "src_uid": "3b158306d335459ff55dcf29e46010e8", "apr_id": "f94c9655d692ff6f7fa044c9d600fbbd", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{int T,m;\nscanf(\"%d\",&T);\nfor(m=0;m<T;m++){\nint N,k,i,j,l,min,max,price;\nscanf(\"%d%d\",&N,&k);\nint A[N];\nfor(i=0;i<N;i++)\n{\n    scanf(\"%d\",&A[i]);\n}\nmin=A[0];\nfor(j=1;j<N;j++)\n{\n    if(A[j]<min)\n    {\n        min=A[j];\n    }\n}\nmax=A[N-1];\nfor(l=(N-1);l>=0;l--)\n{\n    if(A[l]>max)\n    {\n        max=A[l];\n    }\n}\n//now i have min and max\nprice=min+k;\nif(max-price > 0 && max-price<=k)\n{\n    printf(\"%d\\n\",price);\n}\nelse if(price-max >0 && price-max<=k)\n{\n    printf(\"%d\\n\",price);\n}\nelse printf(\"-1\\n\");\n}\n    \n}\n", "fixed": "    #include <stdio.h>\n    int main()\n    {int T,m;\n    scanf(\"%d\",&T);\n    for(m=0;m<T;m++){\n    int N,k,i,j,l,min,max,price;\n    scanf(\"%d%d\",&N,&k);\n    int A[N];\n    for(i=0;i<N;i++)\n    {\n        scanf(\"%d\",&A[i]);\n    }\n    min=A[0];\n    for(j=1;j<N;j++)\n    {\n        if(A[j]<min)\n        {\n            min=A[j];\n        }\n    }\n    max=A[N-1];\n    for(l=(N-1);l>=0;l--)\n    {\n        if(A[l]>max)\n        {\n            max=A[l];\n        }\n    }\n    //now i have min and max\n    price=min+k;\n     if(price>=max-k)\n    {\n        printf(\"%d\\n\",price);\n    }\n    else printf(\"-1\\n\");\n    }\n        \n    }"}
{"similarity_score": 0.9152542372881356, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "8fc418aed02bb4080d4ca06ec7a7ec1d", "bug_code_uid": "7072c6705ef5ffa3a17435d02c4b8b9d", "src_uid": "960e4c234666d2444b80d5966f1d285d", "apr_id": "703ac5480b481e6e9dee9895643079f0", "difficulty": 1300, "tags": ["two pointers", "implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n\nint main(){\n\tstring s;\n\tscanf(\"%s\",s);\n\n\tlong long int f=0,g=0,i;\n\t\n\tfor(i=0;i<strlen(s)-4;i++){\n        \tif(s[i]=='h'&& s[i+1]=='e' && s[i+2]=='a'&&s[i+3]=='v'&& s[i+4]=='y'){\n        \t\tg++;\n\t\t\t\t\n\t\t\t}\n\t\telse if(s[i]=='m'&&s[i+1]=='e' && s[i+2]=='t'&& s[i+3]=='a'&& s[i+4]=='l')\n        \tf+=g;\n\n\t}\n\tprint(\"%I64d\",f);\n\treturn 0;\n}", "fixed": "\n#include<stdio.h>\n#include<string.h>\n\n\nint main(){\n\tchar s[1000000];\n\tscanf(\"%s\",s);\n\n\tlong long int f=0,g=0,i;\n\tlong long int len=strlen(s);\n\tfor(i=0;i<len-4;i++){\n        \tif(s[i]=='h'&& s[i+1]=='e' && s[i+2]=='a'&&s[i+3]=='v'&& s[i+4]=='y'){\n        \t\tg++;\n\t\t\t\t\n\t\t\t}\n\t\telse if(s[i]=='m'&&s[i+1]=='e' && s[i+2]=='t'&& s[i+3]=='a'&& s[i+4]=='l')\n        \tf+=g;\n\n\t}\n\tprintf(\"%I64d\",f);\n\treturn 0;\n}"}
{"similarity_score": 0.6126760563380281, "equal_cnt": 17, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 13, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "a71c0241c3e4a7ad9115560c0627e9af", "bug_code_uid": "e3199a75023cdc3935b5512229d2c364", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "b04d0702c32c452b394f684317b3017c", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t, n, k, i, p, q;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d%d\", &n, &k);\n        p=n-1, q=n;\n        for(i=1;i<k;i++)\n        {\n            if((q-p)==1)\n            {\n                p--;\n                q=n;\n            }\n            else\n                q--;\n        }\n        for(i=1;i<=n;i++)\n        {\n            if(i==p || i==q)\n                printf(\"b\");\n            else\n                printf(\"a\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t, n, k, i, p, q, sum, r, m;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d%d\", &n, &k);\n        p=n-1, q=n, sum=1, m=2;\n        for(i=1;i<k;i++)\n        {\n            if(sum>=k)\n                break;\n            sum+=m;\n            m++;\n            p--;\n            q--;\n            \n        }\n        if(sum==k)\n        {\n            for(i=1;i<=n;i++)\n            {\n                if(i==p || i==q)\n                    printf(\"b\");\n                else\n                    printf(\"a\");\n            }\n            printf(\"\\n\");\n        }\n        else\n        {\n            r=sum-k;\n            q+=r;\n            for(i=1;i<=n;i++)\n            {\n                if(i==p || i==q)\n                    printf(\"b\");\n                else\n                    printf(\"a\");\n            }\n            printf(\"\\n\");\n        }\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9970178926441352, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7e7c7dc3b97e9bcc792d91375b829480", "bug_code_uid": "d14065775bd789feb034eadedafab3d1", "src_uid": "c39db222c42d8e85dee5686088dc3dac", "apr_id": "052e6b7cdfd614ce7f0fcea400b6e485", "difficulty": 1700, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<time.h>\n#define max(a,b) ((a>b)?a:b)\n#define min(a,b) ((a>b)?b:a)\n#define UpFor(i,From,To) for(i=From;i<To;i++)\n#define DownFor(i,From,To) for(i=From;i>To;i--)\n#define Opfile_in(s) freopen(s,\"r\",stdin)\n#define Opfile_out(s) freopen(s,\"w\",stdout)\n#define Read(T) scanf(\"%d\\n\",&T)\n#define Print(T) printf(\"%d\\n\",T)\n#define LL long long\n#define MAXN 214748364\nint N,M;\nint A[100001],B[100001],C[100001];\nvoid init();\nvoid doit();\n\nint main()\n{\n    //Opfile_in(\"CF_temp.in\");\n    init();\n    doit();\n    return 0;\n}\nvoid init()\n{\n    int i;\n    scanf(\"%d%d\",&N,&M);\n    UpFor(i,1,N+1)\n    scanf(\"%d\",&A[i]);\n}\nvoid doit()\n{\n    int l,r,i;\n    B[N]=C[N]=N;\n    DownFor(i,N-1,0)\n    if(A[i]>=A[i+1]) B[i]=B[i+1];\n    else B[i]=i;\n    DownFor(i,N-1,0)\n    if(A[i]<=A[i+1]) C[i]=C[i+1];\n    else C[i]=i;\n    UpFor(i,0,M)\n    {\n        scanf(\"%d%d\",&l,&r);\n        if(B[C[l]]>=r)printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<time.h>\n#define max(a,b) ((a>b)?a:b)\n#define min(a,b) ((a>b)?b:a)\n#define UpFor(i,From,To) for(i=From;i<To;i++)\n#define DownFor(i,From,To) for(i=From;i>To;i--)\n#define Opfile_in(s) freopen(s,\"r\",stdin)\n#define Opfile_out(s) freopen(s,\"w\",stdout)\n#define Read(T) scanf(\"%d\\n\",&T)\n#define Print(T) printf(\"%d\\n\",T)\n#define LL long long\n#define MAXN 214748364\nint N,M;\nint A[100001],B[100001],C[100001];\nvoid init();\nvoid doit();\n\nint main()\n{\n    //Opfile_in(\"CF_temp.in\");\n    init();\n    doit();\n    return 0;\n}\nvoid init()\n{\n    int i;\n    scanf(\"%d%d\",&N,&M);\n    UpFor(i,1,N+1)\n    scanf(\"%d\",&A[i]);\n}\nvoid doit()\n{\n    int l,r,i;\n    B[N]=C[N]=N;\n    DownFor(i,N-1,0)\n    if(A[i]>=A[i+1]) B[i]=B[i+1];\n    else B[i]=i;\n    DownFor(i,N-1,0)\n    if(A[i]<=A[i+1]) C[i]=C[i+1];\n    else C[i]=i;\n    UpFor(i,0,M)\n    {\n        scanf(\"%d%d\",&l,&r);\n        if(B[C[l]]>=r)printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n}\n"}
{"similarity_score": 0.9980657640232108, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "be4a3714935bbcefbe4b54e63bd1da35", "bug_code_uid": "4d1d2625b3d9bad672be5824e06316f9", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "427db529086515a795a86bb9ad5070ee", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int n,h,i,j,k,sum=0,count=0,width;\n\n\tscanf(\"%d%d\",&n,&h);\n\tint d[100];\n\tfor(i = 0;i < n;i++)\n\t{\n\t\tscanf(\"%d\",&d[i]);\n\t\tif(d[i]>h)\n\t\t{\n\t\t\tcount+=2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount+=1;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n        int n,h,i,j,k,sum=0,count=0,width;\n\n\tscanf(\"%d%d\",&n,&h);\n\tint d[1000];\n\tfor(i = 0;i < n;i++)\n\t{\n\t\tscanf(\"%d\",&d[i]);\n\t\tif(d[i]>h)\n\t\t{\n\t\t\tcount+=2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount+=1;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7636761487964989, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "112632e0e154abcceac1d548b3d576c2", "bug_code_uid": "e8ed81e3ac5e12815858d9e8a8d32f79", "src_uid": "942123e43a83d5a4cea95a6781064e28", "apr_id": "5356ac22b44e35199333804bd2504b3b", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int a[n];\n        int count=0;\n        for(int i=0;i<n;i++)\n        {\n          scanf(\"%d\",&a[i]);\n          if(a[i]%2!=i%2)\n            count++;\n        }\n        if(count%2!=0)\n          printf(\"%d\\n\",-1);\n        else\n          printf(\"%d\\n\",count/2);\n    }\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int a[n];\n        int count_even=0,count_odd=0;\n        for(int i=0;i<n;i++)\n        {\n          scanf(\"%d\",&a[i]);\n          if(a[i]%2==0 && i%2!=0)\n            count_odd++;\n          else if(a[i]%2!=0 && i%2==0)\n            count_even++;\n        }\n        if(count_even!=count_odd)\n          printf(\"%d\\n\",-1);\n        else\n          printf(\"%d\\n\",count_even);\n    }\n}"}
{"similarity_score": 0.9757199322416714, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2f1071048a31f9fa9997265099eabf7d", "bug_code_uid": "008136ce086a447b8892ca30e2c20513", "src_uid": "6778eae5422b8ed026a33856998ea89a", "apr_id": "ab18e88079979289b29e4348fafbce21", "difficulty": 1300, "tags": ["implementation", "geometry", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint max(int a,int b){\n\tif(a>b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\n\n\nint main(void) {\n\tint a,b,n;\n\tscanf(\"%d%d%d\\n\",&n,&a,&b);\n\tint q1,q2,q3,q4,u,r,d,l;\n\tq1=0;\n\tq2=0;\n\tq3=0;\n\tq4=0;\n\tu=0;\n\tl=0;\n\tr=0;\n\td=0;\n\tfor(int i=0;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\\n\",&x,&y);\n\t\tif(x>a && y>b)\n\t\t\tq1++;\n\t\telse if(x>a && y==b)\n\t\t\tr++;\n\t\telse if(x>a && y<b)\n\t\t\tq4++;\n\t\telse if(x==0 && y<b)\n\t\t\td++;\n\t\telse if(x<a && y<b)\n\t\t\tq3++;\n\t\telse if(x<a && y==b)\n\t\t\tl++;\n\t\telse if(x<a && y>b)\n\t\t\tq2++;\n\t\telse if(x==0 && y>b)\n\t\t\tu++;\n\t}\n\tint p,q,r1,s;\n\tp=q1+r+q4;\n\tq=q3+d+q4;\n\tr1=q3+l+q2;\n\ts=q2+q1+u;\n\tint m=max(p,max(q,max(r1,s)));\n\tif(m==p){\n\t\tprintf(\"%d\\n%d %d\",p,a+1,b);\n\t\treturn 0;\n\t}\n\tif(m==q){\n\t\tprintf(\"%d\\n%d %d\",q,a,b-1);\n\t\treturn 0;\n\t}\n\tif(m==r1){\n\t\tprintf(\"%d\\n%d %d\",r1,a-1,b);\n\t\treturn 0;\n\t}\n\tif(m==s){\n\t\tprintf(\"%d\\n%d %d\",s,a,b+1);\n\t\treturn 0;\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint max(int a,int b){\n\tif(a>b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\n\n\nint main(void) {\n\tint a,b,n;\n\tscanf(\"%d%d%d\\n\",&n,&a,&b);\n\tint q1,q2,q3,q4,u,r,d,l;\n\tq1=0;\n\tq2=0;\n\tq3=0;\n\tq4=0;\n\tu=0;\n\tl=0;\n\tr=0;\n\td=0;\n\tfor(int i=0;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\\n\",&x,&y);\n\t\tif(x>a && y>b)\n\t\t\tq1++;\n\t\telse if(x>a && y==b)\n\t\t\tr++;\n\t\telse if(x>a && y<b)\n\t\t\tq4++;\n\t\telse if(x==a && y<b)\n\t\t\td++;\n\t\telse if(x<a && y<b)\n\t\t\tq3++;\n\t\telse if(x<a && y==b)\n\t\t\tl++;\n\t\telse if(x<a && y>b)\n\t\t\tq2++;\n\t\telse if(x==a && y>b)\n\t\t\tu++;\n\t}\n\tint p,q,r1,s;\n\tp=q1+r+q4;\n\tq=q3+d+q4;\n\tr1=q3+l+q2;\n\ts=q2+q1+u;\n\tint m=max(p,max(q,max(r1,s)));\n\t//printf(\"%d %d %d %d\\n\",p,q,r1,s,m);\n\tif(m==p){\n\t\tprintf(\"%d\\n%d %d\",p,a+1,b);\n\t\treturn 0;\n\t}\n\tif(m==q){\n\t\tprintf(\"%d\\n%d %d\",q,a,b-1);\n\t\treturn 0;\n\t}\n\tif(m==r1){\n\t\tprintf(\"%d\\n%d %d\",r1,a-1,b);\n\t\treturn 0;\n\t}\n\tif(m==s){\n\t\tprintf(\"%d\\n%d %d\",s,a,b+1);\n\t\treturn 0;\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9477124183006536, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a847b78af3b11b99378015da0949a962", "bug_code_uid": "8cc4810e3d4c35c9307741b4f7fd241b", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "0d4ce1fdc08a4db7f8f5686bee435035", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,day[200000],i,sum=0,half=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n            scanf(\"%d\",&day[i]);\n            sum+=day[i];\n    }\n    for(i=0;i<n;i++){\n        half+=day[i];\n        if(half>=sum/2) break;\n    }\n    printf(\"%d\\n\",i+1);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,day[200000],i,half=0;\n    double sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n            scanf(\"%d\",&day[i]);\n            sum+=day[i];\n    }\n    for(i=0;i<n;i++){\n        half+=day[i];\n        if(half>=ceil(sum/2)) break;\n    }\n    printf(\"%d\\n\",i+1);\n    return 0;\n\n}\n"}
{"similarity_score": 0.9071146245059288, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "68dd1f4586ae47f98eba1c40ece28d00", "bug_code_uid": "145760842809b55035a08ce5fe8d6eb8", "src_uid": "c457b77b16d94c6c4c95b7403a1dd0c7", "apr_id": "57b73c81975ed2f6467688471d2fc082", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t, j, i;\n    long long int n,sum = 0, a[n], price;\n    scanf(\"%d\",&t);\n    for(i = 0; i < t; i++)\n    {\n        scanf(\"%lld\",&n);\n        for(j = 0; j < n; j++)\n        {\n            scanf(\"%lld\",&a[i]);\n            sum = sum + a[i];\n        }\n        if(sum % n == 0)\n        {\n            price = sum / n;\n        }\n        else\n        {\n            price = (sum/n) + 1;\n        }\n        printf(\"%lld\\n\",price);\n        sum = 0;\n\n    }\n    return 0;\n\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int t, i, j, n, sum = 0, price;\n    scanf(\"%lld\",&t);\n    for(i = 1; i <= t; i++)\n    {\n        scanf(\"%lld\",&n);\n        long long int a[n];\n        for(j = 0; j < n; j++)\n        {\n            scanf(\"%lld\",&a[j]);\n            sum = sum + a[j];\n        }\n        if(sum % n == 0)\n        {\n            price = sum / n;\n        }\n        else\n        {\n            price = (sum / n) + 1;\n        }\n        printf(\"%lld\\n\",price);\n        sum = 0;\n\n    }\n    return 0;\n\n}"}
{"similarity_score": 0.9975609756097561, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b3ef0d1a171dc492804230e4313cc1c2", "bug_code_uid": "ad2048f3ef2a90f0a02094afdff1aa3c", "src_uid": "22ef37041ebbd8266f62ab932f188b31", "apr_id": "f183f6ee825598516ba4d7c5d42135a6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[105],s,t,i;\n\tfor(i=1;i<n+1;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tscanf(\"%d%d\",&s,&t);\n\tif(s==t)\n\t\tprintf(\"0\\n\");\n\telse\n\t{\n\t\tif(s>t)\n\t\t{\n\t\t\ti=t;\n\t\t\tt=s;\n\t\t\ts=i;\n\t\t}\n\t\tint d1=0,d2=0;\n\t\tfor(i=s;i<t;i++)\n\t\t\td1+=a[i];\n\t\tfor(i=s;i>0;i--)\n\t\t\td2+=a[i];\n\t\tfor(i=t;i<n+1;i++)\n\t\t\td2+=a[i];\n\t\tif(d1<d2)\n\t\t\tprintf(\"%d\\n\",d1);\n\t\telse\n\t\t\tprintf(\"%d\\n\",d2);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[105],s,t,i;\n\tfor(i=1;i<n+1;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tscanf(\"%d%d\",&s,&t);\n\tif(s==t)\n\t\tprintf(\"0\\n\");\n\telse\n\t{\n\t\tif(s>t)\n\t\t{\n\t\t\ti=t;\n\t\t\tt=s;\n\t\t\ts=i;\n\t\t}\n\t\tint d1=0,d2=0;\n\t\tfor(i=s;i<t;i++)\n\t\t\td1+=a[i];\n\t\tfor(i=s-1;i>0;i--)\n\t\t\td2+=a[i];\n\t\tfor(i=t;i<n+1;i++)\n\t\t\td2+=a[i];\n\t\tif(d1<d2)\n\t\t\tprintf(\"%d\\n\",d1);\n\t\telse\n\t\t\tprintf(\"%d\\n\",d2);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.659265584970111, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "7a666a6899d6bb80cf2437f51a0b924b", "bug_code_uid": "012cb52e026eb74910d36b0e1e407683", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "5ff69726f7f5ad15f2b53b3ecdf966c1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long abs(long long x) {\n    return x >= 0 ? x : -x;\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    for (int i = 0; i < t; i++) {\n        long long a, b, c;\n        scanf(\"%lld %lld %lld\", &a, &b, &c);\n\n        long long amountPeople = 2 * abs(a - b);\n\n        if (a > amountPeople || b > amountPeople || c > amountPeople) {\n            printf(\"%d\", -1);\n        } else {\n            printf(\"%lld\", amountPeople)\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nlong long abs(long long x) {\n    return x >= 0 ? x : -x;\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    for (int i = 0; i < t; i++) {\n        long long a, b, c;\n        scanf(\"%lld %lld %lld\", &a, &b, &c);\n\n        long long amountPeople = 2 * abs(a - b);\n        long long d = c + amountPeople / 2;\n        long long r = 0;\n\n        if (a > amountPeople || b > amountPeople || c > amountPeople) {\n            r = -1;\n        } else {\n            if (d <= amountPeople) {\n                r = d;\n            }\n            else if (d > amountPeople) {\n                r = c - amountPeople / 2;\n            }\n        }\n\n        printf(\"%lld\\n\", r);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9840201850294366, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7b4683dea2ee60f292d068d405d4c8a8", "bug_code_uid": "262fd528eb3aa52982c9619c53cab607", "src_uid": "943ce230777aca97266c272bdb9b364c", "apr_id": "3c1c350045efd8cf2e61dd8095b96c84", "difficulty": 900, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        int A[n];\n        int ans = 0;\n        for (int i = 0; i < n; i++){\n            scanf(\"%d\", A + i);\n        }\n        for (int i = 0; i < n; i++){\n            int k = abs(A[i] - A[n-1]);\n            int k0 = A[i] - A[0];\n            int kn = A[n - 1] - A[i];\n            ans = k > ans ? k : ans;\n            ans = k0 > ans ? k0 : ans;\n            ans = kn > ans ? kn : ans;\n        }\n\n        printf(\"%d\\n\", ans);\n            \n\n\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        int A[n];\n        int ans = 0;\n        for (int i = 0; i < n; i++){\n            scanf(\"%d\", A + i);\n        }\n        for (int i = 0; i < n; i++){\n            int k = A[i] - A[(i + 1) % n];\n            int k0 = A[i] - A[0];\n            int kn = A[n - 1] - A[i];\n            ans = k > ans ? k : ans;\n            ans = k0 > ans ? k0 : ans;\n            ans = kn > ans ? kn : ans;\n        }\n\n        printf(\"%d\\n\", ans);\n            \n\n\n    }\n}\n"}
{"similarity_score": 0.9992952783650458, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ba52b90e85976ef58ff8ccd9bffd0d7f", "bug_code_uid": "a200e68937475defddf00cbecb6044d8", "src_uid": "62f5798bdcea237c0df9b4cd288b97de", "apr_id": "b7fe021c7a067fbef9a65e58a18a9bf5", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<string.h>\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int c1=0,c2=0;\r\n        char str[100001];\r\n        scanf(\"%s\",str);\r\n        int l=strlen(str);\r\n        for(int i=0;i<l;i++){\r\n            if(str[i]=='1'){\r\n                c1++;\r\n            }\r\n            if(str[i]=='0'){\r\n                c2++;\r\n            }\r\n        }\r\n        if(c1>c2){\r\n            printf(\"%d \",c2);\r\n        }\r\n        else if(c2>c1){\r\n            printf(\"%d \",c1);\r\n        }\r\n        else if(c1==c2 && l>2){\r\n            printf(\"%d\",c1-1);\r\n        }\r\n        else if(l==1 || c1==c2){\r\n            printf(\"0\");\r\n        }\r\n         printf(\"\\n\");\r\n    }\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include<string.h>\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int c1=0,c2=0;\r\n        char str[1000001];\r\n        scanf(\"%s\",str);\r\n        int l=strlen(str);\r\n        for(int i=0;i<l;i++){\r\n            if(str[i]=='1'){\r\n                c1++;\r\n            }\r\n            if(str[i]=='0'){\r\n                c2++;\r\n            }\r\n        }\r\n        if(c1>c2){\r\n            printf(\"%d \",c2);\r\n        }\r\n        else if(c2>c1){\r\n            printf(\"%d \",c1);\r\n        }\r\n        else if(c1==c2 && l>2){\r\n            printf(\"%d\",c1-1);\r\n        }\r\n        else if(l==1 || c1==c2){\r\n            printf(\"0\");\r\n        }\r\n         printf(\"\\n\");\r\n    }\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9698558322411533, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a1af97cbf4d12f357aff9cabedd874e5", "bug_code_uid": "85b6efca3f1564049dc45912704f8ea2", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "9764603cf0e8b6453bf940eb8f0a56cf", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid main()\n{\n     int number_friends,h_of_wall,h_of_person;\n     int counter=0;\n    scanf(\"%d %d\",&number_friends,&h_of_wall);\n\n    for(int i=0;i<number_friends;i++)\n    {\n        scanf(\"%d\",&h_of_person);\n        if(h_of_person<h_of_wall)\n            counter++;\n        else\n            counter+=2;\n    }\n    printf(\"%d\",counter);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int number_friends,h_of_wall,h_of_person;\n     int counter=0;\n    scanf(\"%d %d\",&number_friends,&h_of_wall);\n\n    for(int i=0;i<number_friends;i++)\n    {\n        scanf(\"%d\",&h_of_person);\n        if(h_of_person<=h_of_wall)\n            counter++;\n        else\n            counter+=2;\n    }\n    printf(\"%d\",counter);\n    return 0;\n}\n"}
{"similarity_score": 0.3748361730013106, "equal_cnt": 16, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "e1bd6ca68a1da623821a361327e4a75b", "bug_code_uid": "1b586fb26c9deac112e989f3935d6396", "src_uid": "fc547fc83ebbcc3c058a069ef9fef62c", "apr_id": "b69c45c7361940534186e020ccc88bd7", "difficulty": 1100, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i<t; i++){\r\n\r\n        int a, b, c, m;\r\n        scanf(\"%d %d %d %d\", &a, &b, &c, &m);\r\n        int counter;\r\n\r\n        if(m==1){\r\n\r\n            m=2;\r\n\r\n            a=a/m;\r\n            b=b/m;\r\n            c=c/m;\r\n\r\n            m=1;\r\n            if(a+b+c>=m){\r\n\r\n                printf(\"YES\\n\");\r\n\r\n            }else{\r\n                printf(\"NO\\n\");\r\n            }\r\n\r\n        } else if(m==0)   {\r\n            if((a==1 || b==1 || c == 1))){\r\n                printf(\"YES\\n\");\r\n            }else {\r\n                printf(\"NO\\n\");\r\n            }\r\n        }else{\r\n            a=a/m;\r\n            b=b/m;\r\n            c=c/m;\r\n\r\n\r\n            if(a+b+c>=m){\r\n\r\n                printf(\"YES\\n\");\r\n\r\n            }else{\r\n                printf(\"NO\\n\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) {\r\n\r\n        int a, b, c, m;\r\n        scanf(\"%d %d %d %d\", &a, &b, &c, &m);\r\n        int max;\r\n        int sum;\r\n        if (a > b && a > c) {\r\n            max = a;\r\n            sum = b + c;\r\n        } else if (b > a && b > c) {\r\n            max = b;\r\n            sum = c + a;\r\n        } else  {\r\n            max = c;\r\n            sum = a + b;\r\n        }\r\n\r\n        if (((max - 1 - sum) <= m) && (m <= (sum + max - 3))) {\r\n            printf(\"YES\\n\");\r\n\r\n        } else {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7751196172248804, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "66630ee2ee59d9d40a95f966b70da11e", "bug_code_uid": "26bd6826e2b3db10fee64198eb4c451f", "src_uid": "09f5623c3717c9d360334500b198d8e0", "apr_id": "d4c3dfe57137c01b093922f023f7d44d", "difficulty": 1600, "tags": ["binary search", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\ntypedef long long ll;\n\n\nint main()\n{\n    ll n, a[100005], i, k, u = 0;\n    double l;\n    scanf(\"%I64d\", &n);\n    for (i = 1; i <= n; i++)\n    {\n        scanf(\"%I64d\", &a[i]);\n        u = u + a[i];\n    }\n    k = u / (n - 1);\n    l = u*1.0 / (n - 1);\n    if (k ==l) printf(\"%I64d\", k);\n    else printf(\"%I64d\", k + 1);\n   \n    return 0;\n\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\ntypedef long long ll;\n\n\nint main()\n{\n    ll n, a[100001], i, k, u = 0, max = 0;\n    double l;\n    scanf(\"%I64d\", &n);\n    for (i = 1; i <= n; i++)\n    {\n        scanf(\"%I64d\", &a[i]);\n        u = u + a[i];\n        max = max > a[i] ? max : a[i];\n    }\n    k = u / (n - 1);\n    if (k < max) k = max;\n    else\n    {\n        l = u*1.0 / (n - 1);\n        if (k != l) k = k + 1;\n    }\n    printf(\"%I64d\", k);\n   \n    return 0;\n\n}"}
{"similarity_score": 0.6556420233463035, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7f482a094d7a013a8fa9b9d13c826cf9", "bug_code_uid": "b54054a5a54f49f0c25d32ca33bc6bdd", "src_uid": "6ac3246ee9cf78d81f96a3ed05b35918", "apr_id": "865a6d8294f5beb07b5be8cbb5796731", "difficulty": 2000, "tags": ["constructive algorithms", "math", "combinatorics"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long int min(long long int a,long long int b){\n    return a<b?a:b;\n}\n\nint main() {\n    int n,i;\n    long long int a[300005],x,y;\n    long long int sum;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n    sum=x=y=0;\n    for (i=1;i<=n;i++){\n        sum+=a[i]/2;\n        if (a[i]%2==0){\n            if (i%2==1)\n                x++;\n            else\n                y++;\n        }\n    }\n    sum+=min(x,y);\n    printf(\"%lld\\n\",sum);\n    return 0;\n}", "fixed": "#include <stdio.h>\nlong long int min(long long int a,long long int b){\n    return a<b?a:b;\n}\n\nint main() {\n    int n,i;\n    long long int a[300005],x,y;\n    long long int sum;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n    sum=x=y=0;\n    for (i=1;i<=n;i++){\n        sum+=a[i]/2;\n        if (a[i]%2==1){\n            if (i%2==1)\n                x++;\n            else\n                y++;\n        }\n    }\n    sum+=min(x,y);\n    //printf(\"%lld %lld \",x,y);\n    printf(\"%lld\\n\",sum);\n    return 0;\n}"}
{"similarity_score": 0.9043845747490755, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f9f2625ddb50da509a550334ff8efb27", "bug_code_uid": "69ef9b1792082337b8b4f9bcaa004fd1", "src_uid": "d6790c9b4b2e488768fb4e746ee7ebe0", "apr_id": "9ccdf03761e8474691ccf79b66b6d16b", "difficulty": 1000, "tags": ["bitmasks", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t;\r\n\t//printf(\"%d\\n\",5 ^ 2);\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++)\r\n\t{\r\n\t\tint a, b;\r\n\t\tscanf(\"%d%d\", &a, &b);\r\n\t\tif (a == 0)\r\n\t\t{\r\n\t\t\tif (b == 0)\r\n\t\t\t\tprintf(\"0\\n\");\r\n\t\t\telse\r\n\t\t\t\tprintf(\"1\\n\");\r\n\t\t}\r\n\t\telse if (a % 4 == 0)\r\n\t\t{\r\n\t\t\tif (b == 0)\r\n\t\t\t\tprintf(\"%d\\n\", a);\r\n\t\t\telse if (a == b)\r\n\t\t\t\tprintf(\"%d\\n\", a + 2);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", a + 1);\r\n\t\t}\r\n\t\tif (a % 4 == 1)\r\n\t\t{\r\n\t\t\tif (b == a - 1)\r\n\t\t\t\tprintf(\"%d\\n\", a);\r\n\t\t\telse if ((a ^ (a - 1)) == b)\r\n\t\t\t\tprintf(\"%d\\n\", a + 2);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", a + 1);\r\n\t\t}\r\n\t\tif (a % 4 == 2)\r\n\t\t{\r\n\t\t\tif (b == 1)\r\n\t\t\t\tprintf(\"%d\\n\", a);\r\n\t\t\telse if ((a ^ 1) == b)\r\n\t\t\t\tprintf(\"%d\\n\", a + 2);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", a + 1);\r\n\t\t}\r\n\t\tif (a % 4 == 3)\r\n\t\t{\r\n\t\t\tif (b == a - 2)\r\n\t\t\t\tprintf(\"%d\\n\", a);\r\n\t\t\telse if ((a ^ (a - 2)) == b)\r\n\t\t\t\tprintf(\"%d\\n\", a + 2);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", a + 1);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t;\r\n\t//printf(\"%d\\n\",5 ^ 2);\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++)\r\n\t{\r\n\t\tint a, b;\r\n\t\tscanf(\"%d%d\", &a, &b);\r\n\t\tif (a == 0)\r\n\t\t{\r\n\t\t\tif (b == 0)\r\n\t\t\t\tprintf(\"0\\n\");\r\n\t\t\telse\r\n\t\t\t\tprintf(\"1\\n\");\r\n\t\t}\r\n\t\telse if (a % 4 == 0)\r\n\t\t{\r\n\t\t\tif (b == 0)\r\n\t\t\t\tprintf(\"%d\\n\", a);\r\n\t\t\telse if (a == b)\r\n\t\t\t\tprintf(\"%d\\n\", a + 2);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", a + 1);\r\n\t\t}\r\n\t\tif (a % 4 == 1)\r\n\t\t{\r\n\t\t\tif (b == a - 1)\r\n\t\t\t\tprintf(\"%d\\n\", a);\r\n\t\t\telse if ((a ^ (a - 1)) == b)\r\n\t\t\t\tprintf(\"%d\\n\", a + 2);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", a + 1);\r\n\t\t}\r\n\t\tif (a % 4 == 2)\r\n\t\t{\r\n\t\t\tif (b == 1)\r\n\t\t\t\tprintf(\"%d\\n\", a);\r\n\t\t\telse if ((a ^ 1) == b)\r\n\t\t\t\tprintf(\"%d\\n\", a + 2);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", a + 1);\r\n\t\t}\r\n\t\tif (a % 4 == 3)\r\n\t\t{\r\n\t\t\tif (b == a )\r\n\t\t\t\tprintf(\"%d\\n\", a);\r\n\t\t\telse if ((a ^ a) == b)\r\n\t\t\t\tprintf(\"%d\\n\", a + 2);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%d\\n\", a + 1);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.858148893360161, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6a6de8350bf7563f521d827cd8d831d9", "bug_code_uid": "69444eaa17818dc03367aa949a3ef973", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "0adc79060195405df382ba3913426fac", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong int i,n;\n\tscanf(\"%ld\",&n);\n\tlong int a[n],p=0,q=0,r=0,s=0,k=0;\n\tfor(i=0;i<n;i++)\n{\n\tscanf(\"%ld\",&a[i]);\n}\nfor(i=0;i<n;i++)\n{\n\tif(a[i]==4)\n\tp++;\n\tif(a[i]==3)\n\tq++;\n\tif(a[i]==2)\n\tr++;\n\tif(a[i]==1)\n\ts++;\n}\nk=k+p;\nif(q==s)\n{\n\tk=k+q;\n\tif(r%2==0)\n\tk=k+(r/2);\n\telse\n\tk=k+(r/2)+1;\n\t\n}\nif(q<s)\n{\n\tk=k+q;\n\tif(r>1)\n\t{\n    k=k+(r/2);\n\t\n\t\n\tif(r%2==0)\n\t{if((s-q)%4==0)\n\tk=k+((s-q)/4);\n\telse\n\tk=k+((s-q)/4)+1;\n\t\n\t}\n\t\n\t if(r%2==1)\n\t {\n\t\tif(s-q>1)\n\t\t{\n\t\t k=k+1;\n\t\t \n\t\t if((s-q-2)%4==0)\n\t     k=k+((s-q-2)/4);\n\t     else\n\t     k=k+((s-q-2)/4)+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t  k=k+1;\n\t\t}\n\t }\n\t}\n\tif(r==1)\n\t{\n\t\t\n\t\tif(s<=1)\n\t\t{\t\n\t\t k=k+1;\n\t\t \n\t\t}\n\t\telse\n\t\t{\n\t\t\t\n\t\t k=k+1;\n\t\t s=s-2;\n\t\t\n\t\t if(s%4==0)\n\t     \n     \t\t\n     \tk=k+(s/4);\n\t     \n\t     else\n\t     k=k+(s/4)+1;\n\t     \n\t    }\n\t   \n\t}\n\tif(r==0)\n\t{\n\t\tif(s%4==0)\n\t    k=k+(s/4);\n\t    else\n\t    k=k+(s/4)+1;\n\t\n\t}\n}\nif(q>s)\n{\n\tk=k+q;\n\t\n\tif(r%2==0)\n\t{\n\tk=k+(r/2);}\n\telse\n\tk=k+(r/2)+1;\n}\n\n\nprintf(\"%ld\",k);\nreturn 0;\n}\n    \n    ", "fixed": "#include<stdio.h>\nint main(){\n\tlong int i,n;\n\tscanf(\"%ld\",&n);\n\tlong int a[n],p=0,q=0,r=0,s=0,k=0;\n\tfor(i=0;i<n;i++)\n{\n\tscanf(\"%ld\",&a[i]);\n}\nfor(i=0;i<n;i++)\n{\n\tif(a[i]==4)\n\tp++;\n\tif(a[i]==3)\n\tq++;\n\tif(a[i]==2)\n\tr++;\n\tif(a[i]==1)\n\ts++;\n}\nk=k+p;\nif(q==s)\n{\n\tk=k+q;\n\tif(r%2==0)\n\tk=k+(r/2);\n\telse\n\tk=k+(r/2)+1;\n\t\n}\nif(q<s)\n{\n\tk=k+q;\n\tif(r>1)\n\t{\n    k=k+(r/2);\n\t\n\t\n\tif(r%2==0)\n\t{if((s-q)%4==0)\n\tk=k+((s-q)/4);\n\telse\n\tk=k+((s-q)/4)+1;\n\t\n\t}\n\t\n\t if(r%2==1)\n\t {\n\t\tif(s-q>1)\n\t\t{\n\t\t k=k+1;\n\t\t \n\t\t if((s-q-2)%4==0)\n\t     k=k+((s-q-2)/4);\n\t     else\n\t     k=k+((s-q-2)/4)+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t  k=k+1;\n\t\t}\n\t }\n\t}\n\tif(r==1)\n\t{\n\t\t\n\t\tif(s-q<=1)\n\t\t{\t\n\t\t k=k+1;\n\t\t \n\t\t}\n\t\telse\n\t\t{\n\t\t\t\n\t\t k=k+1;\n\t\t \n\t\t\n\t\t if((s-q-2)%4==0)\n\t     \n     \t\t\n     \tk=k+((s-q-2)/4);\n\t     \n\t     else\n\t     k=k+((s-q-2)/4)+1;\n\t     \n\t    }\n\t   \n\t}\n\tif(r==0)\n\t{\n\t\tif((s-q)%4==0)\n\t    k=k+((s-q)/4);\n\t    else\n\t    k=k+((s-q)/4)+1;\n\t\n\t}\n}\nif(q>s)\n{\n\tk=k+q;\n\t\n\tif(r%2==0)\n\t{\n\tk=k+(r/2);}\n\telse\n\tk=k+(r/2)+1;\n}\n\n\nprintf(\"%ld\",k);\nreturn 0;\n}\n    \n    "}
{"similarity_score": 0.9097303634232122, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4bf3c6b5c8d698ed4798a058b8861e93", "bug_code_uid": "e57328dd281221d6d983c9edd2466a97", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "2e61945b2bad3e50766c89712c06d182", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long n, m,a[1000000], i, t=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=1;i<m;i++)\n    {\n        if(a[0]>1)\n        {\n            t+=a[0]-1;\n        }\n        if(a[i]>a[i-1])\n        {\n            t+=a[i]-a[i-1];\n        }\n        if(a[i]<a[i-1])\n        {\n            t+=n-a[i-1]+1+a[i]-1;\n        }\n    }\n    printf(\"%I64d\",t);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long n, m,a[1000000], i, t=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    t+=a[0]-1;\n    for(i=1;i<m;i++)\n    {\n        if(a[i]>a[i-1])\n        {\n            t+=a[i]-a[i-1];\n        }\n        if(a[i]<a[i-1])\n        {\n            t+=n-a[i-1]+1+a[i]-1;\n        }\n    }\n    printf(\"%I64d\",t);\n    return 0;\n}"}
{"similarity_score": 0.9943609022556391, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ecaee1e7f12c90591ce758ff98fccdd0", "bug_code_uid": "98cc5349e75b0ba943a38cb5ab4f7452", "src_uid": "a5edbf422616cdac35e95a4f07efc7fd", "apr_id": "34d013982b7b89c284a1c560db81b0da", "difficulty": 800, "tags": ["implementation", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a[2000],b[2000],i,j,k,c[2000];\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n-i;j++)\n\t\t{\n\t\t\tif(a[j]<a[j+1])\n\t\t\t{\n\t\t\t\ta[j]=a[j]^a[j+1];\n\t\t\t\ta[j+1]=a[j]^a[j+1];\n\t\t\t\ta[j]=a[j]^a[j+1];\n\t\t\t}\n\t\t}\n\t}\n\tc[0]=1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]==a[i-1])\n\t\t{\n\t\t\tc[i]=c[i-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc[i]=i+1;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(b[i]==a[j])\n\t\t\t{\n\t\t\t\tprintf(\"%d \",c[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint a[3000],b[3000],i,j,k,c[3000];\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n-i;j++)\n\t\t{\n\t\t\tif(a[j]<a[j+1])\n\t\t\t{\n\t\t\t\ta[j]=a[j]^a[j+1];\n\t\t\t\ta[j+1]=a[j]^a[j+1];\n\t\t\t\ta[j]=a[j]^a[j+1];\n\t\t\t}\n\t\t}\n\t}\n\tc[0]=1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]==a[i-1])\n\t\t{\n\t\t\tc[i]=c[i-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc[i]=i+1;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(b[i]==a[j])\n\t\t\t{\n\t\t\t\tprintf(\"%d \",c[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6745152354570637, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "09b747f292286ff4dbe9af278115c40b", "bug_code_uid": "e018dfed13ecd91bb303240f93ed531a", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "a20287b43e565d14b0ec4a2116c20ed4", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int i,j,k,n,a[100],b[100],min,max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n\n    }\n\n    for(i=0;i<n;i++)\n    {\n        b[i]=0;\n    }\n\n    j=0;\n     min=a[0];\n\n    for(i=0;i<n;i++)\n    {\n        if(min<=a[i])\n            {\n                b[j]++;\n                min=a[i];\n            }\n\n\n        else if (min>a[i])\n        {\n            min=a[i];\n            j++;\n            b[j]=1;\n\n\n        }\n\n\n    }\n\n\n    max=b[0];\n    for(i=0;i<=j;i++)\n    {\n        if(max<b[i])\n            max=b[i];\n    }\n    printf(\"%lld\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int i,j,k,n,a[100000],b[100000],min,max;\nint main()\n{\n\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        b[i]=0;\n    }\n    j=0;\n    min=a[0];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        if(min<=a[i])\n            {\n                b[j]++;\n                min=a[i];\n            }\n\n\n        else if (min>a[i])\n        {\n            min=a[i];\n            j++;\n            b[j]=1;\n\n\n        }\n\n\n\n    }\n\n\n\n\n\n    /*for(i=0;i<n;i++)\n    {\n        if(min<=a[i])\n            {\n                b[j]++;\n                min=a[i];\n            }\n\n\n        else if (min>a[i])\n        {\n            min=a[i];\n            j++;\n            b[j]=1;\n\n\n        }\n\n\n    }*/\n\n\n    max=b[0];\n    for(i=0;i<=j;i++)\n    {\n        if(max<b[i])\n            max=b[i];\n    }\n    printf(\"%lld\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9940828402366864, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0afb85cceeabf2977d3549ddad6f27c4", "bug_code_uid": "40cd6109fc8772f90044ecac23444fe6", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "7cbfe7c1a73a9313dc1662ec289ad03b", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:16777216\")\n#include <stdio.h>\n\n#ifndef ONLINE_JUDGE\n\tFILE *stream;\n#endif\n\nint main()\n{\n\tint n;\n\tint sum;\n\tint nChet, nNechet;\n\tint buff;\n#ifndef ONLINE_JUDGE\n \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\input.txt\", \"rt\", stdin);\n  \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\output.txt\", \"wt\", stdout);\n#endif\n\tscanf(\"%i\", &n);\n\tif (n == 1)\n\t\tprintf(\"1\");\n\telse{\n\t\tsum = 0;\n\t\tnChet = 0;\n\t\tnNechet = 0;\n\t\tfor (; n > 0; n--){\n\t\t\tscanf(\"%i\", &buff);\n\t\t\tif (buff % 2 == 0)\n\t\t\t\tnChet++;\n\t\t\telse\n\t\t\t\tnNechet++;\n\t\t\tsum++;\n\t\t}\n\t\tif (sum % 2 == 0)\n\t\t\tprintf(\"%i\", nChet);\n\t\telse\n\t\t\tprintf(\"%i\", nNechet);\n\t}\n \treturn 0;\n}", "fixed": "#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:16777216\")\n#include <stdio.h>\n\n#ifndef ONLINE_JUDGE\n\tFILE *stream;\n#endif\n\nint main()\n{\n\tint n;\n\tint sum;\n\tint nChet, nNechet;\n\tint buff;\n#ifndef ONLINE_JUDGE\n \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\input.txt\", \"rt\", stdin);\n  \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\output.txt\", \"wt\", stdout);\n#endif\n\tscanf(\"%i\", &n);\n\tif (n == 1)\n\t\tprintf(\"1\");\n\telse{\n\t\tsum = 0;\n\t\tnChet = 0;\n\t\tnNechet = 0;\n\t\tfor (; n > 0; n--){\n\t\t\tscanf(\"%i\", &buff);\n\t\t\tif (buff % 2 == 0)\n\t\t\t\tnChet++;\n\t\t\telse\n\t\t\t\tnNechet++;\n\t\t\tsum += buff;\n\t\t}\n\t\tif (sum % 2 == 0)\n\t\t\tprintf(\"%i\", nChet);\n\t\telse\n\t\t\tprintf(\"%i\", nNechet);\n\t}\n \treturn 0;\n}"}
{"similarity_score": 0.89937106918239, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1ab52d3326f46fc98611d330504ac6ac", "bug_code_uid": "b07562d5f2f8a5cbfa19a955aa8575e2", "src_uid": "0646a23b550eefea7347cef831d1c69d", "apr_id": "ec9e45ff58d561579df8dbdbfb1c918f", "difficulty": 1600, "tags": ["dp", "two pointers", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nchar ZA[1501];\nint ZB[26][1501];\n\nint main() {\n\n\tint a, b, c, d, e, f;\n\tchar g;\n\n\tscanf(\"%d%s%d\", &a, ZA, &b);\n\tfor (c = 0; c < 26; ++c) {\n\t\tfor (d = 0; d < a; ++d) {\n\t\t\tf = 0;\n\t\t\tfor (e = d; e < a; ++e) {\n\t\t\t\tif (ZA[e] - 'a' != c) f++;\n\t\t\t\tif (ZB[c][f] < e - d + 1)\n\t\t\t\t\tZB[c][f] = e - d + 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (c = 0; c < b; ++c) {\n\t\tscanf(\"%d %c\", &d, &g);\n\t\tprintf(\"%d\\n\", ZB[g - 'a'][d]);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nchar ZA[1501];\nint ZB[26][1501];\n\nint main() {\n\n\tint a, b, c, d, e, f;\n\tchar g;\n\n\tscanf(\"%d%s%d\", &a, ZA, &b);\n\tfor (c = 0; c < 26; ++c) {\n\t\tfor (d = 0; d < a; ++d) {\n\t\t\tf = 0;\n\t\t\tfor (e = d; e < a; ++e) {\n\t\t\t\tif (ZA[e] - 'a' != c) f++;\n\t\t\t\tif (ZB[c][f] < e - d + 1)\n\t\t\t\t\tZB[c][f] = e - d + 1;\n\t\t\t}\n\t\t}\n\t\tfor (d = 1; d < 1501; ++d) {\n\t\t\tif (ZB[c][d] < ZB[c][d - 1])\n\t\t\t\tZB[c][d] = ZB[c][d - 1];\n\t\t}\n\t}\n\tfor (c = 0; c < b; ++c) {\n\t\tscanf(\"%d %c\", &d, &g);\n\t\tprintf(\"%d\\n\", ZB[g - 'a'][d]);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9826589595375722, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9147c8dab66598c983c11d1e8c7ec94f", "bug_code_uid": "e7ee8f77a4f42fd44dfdbd80e9b31f76", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "88c92d61d7d0b4d7f039851729bfd3b3", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\n    int n,a,b;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    char s[10000];\n    scanf(\"%s\",s);\n    \n    printf(\"%d\",s[a-1]=s[b-1]?0:1);\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\nint main()\n{\n    int n,a,b;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    char s[100007];\n    scanf(\"%s\",s);\n\n    printf(\"%d\",s[a-1]==s[b-1]?0:1);\n    return 0;\n}\n"}
{"similarity_score": 0.45962732919254656, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b151fef7cf8140cf71b31baf8093793e", "bug_code_uid": "b70af3ff6ad60e70141a77759e6375b6", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "c7e2806bc680b9c0f5dc9ac7593e0fcc", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d \\n\", &t);\n\twhile(t--)\n\t{\n\t\tlong long int n,k;\n\t\tint d;\n\t\tscanf(\"%lld %lld \\n\", &n,&k);\n\t\tint a[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d \", &a[i]);\n\t\t}\n\t\tfor(int i=0;i<k;i++)\n\t\t{\n\t\t\td=a[0];\n\t\t\tfor(int j=1;j<n;j++)\n\t\t\t{\n\t\t\t\tif(a[j]>d)\n\t\t\t\t{\n\t\t\t\t\td=a[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int m=0;m<n;m++)\n\t\t\t{\n\t\t\t\ta[m]=d-a[m];\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tprintf(\"%d \", a[i]);\n\t\t}\n\t}\n\treturn 0;\n}\n\t\t\t\n\t", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d \\n\", &t);\n\twhile(t--)\n\t{\n\t\tlong long int n,k,d;\n\t\tscanf(\"%lld %lld \\n\", &n,&k);\n\t\tlong long int a[n];\n\t\tfor(long long int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%lld \", &a[i]);\n\t\t}\t\n\t\t\td=a[0];\n\t\t\tfor(int i=1;i<n;i++)\n\t\t\t{\n\t\t\t\tif(a[i]>d)\n\t\t\t\t{\n\t\t\t\t\td=a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k%2!=0)\n\t\t\t{\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\ta[i]=d-a[i];\n\t\t\t\tprintf(\"%lld \", a[i]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ta[i]=d-a[i];\n\t\t}\n\t\td=a[0];\n\t\tfor(int i=1;i<n;i++)\n\t\t\t{\n\t\t\t\tif(a[i]>d)\n\t\t\t\t{\n\t\t\t\t\td=a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\ta[i]=d-a[i];\n\t\t\t\tprintf(\"%lld \", a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.3622291021671827, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "814335748e778c9d832a96f92f86e600", "bug_code_uid": "01b9c1a978436ce58cabff0cc2c740a1", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "7e5fddf4813975b6cfe48c341b25e70e", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, x, i, j, count = 0;\n    scanf(\"%d %d\", &n, &x);\n    int arr[n];\n\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &arr[i]);\n\n    for(i=0; i<n-1; i++){\n        for(j=i+1; j<n; j++){\n            if((arr[i] ^ arr[j]) == x)\n                count++;\n        }\n    }\n    printf(\"%d\", count);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint arr[200000], inde[150000]; // 131071\n\nint main()\n{\n    int n, x, num, i;\n\tlong long int count = 0;\n\tscanf(\"%d %d\\n\", &n, &x);\n\t// int arr[200000];\n\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &num);\n\t\tcount = count + arr[num ^ x];\n\t\tarr[num]++;\n\t}\n\tprintf(\"%I64d\", count);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9806629834254144, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dad79a280fe1a62006eba92dec4da48a", "bug_code_uid": "db256e3c02b53c4057a142eafb52848a", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "8bc306577a0c2457793a7aed94192e63", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\nint n,ca=0,cb=0,count=0;\nscanf(\"%d\",&n);\nchar c[n+1];\nscanf(\"%s\",c);\nfor(int i=0;c[i]!='\\0';i+=2)\n{\n\tif(c[i]=='a')\n\t\tca++;\n\telse\n\t\tcb++;\n\tif(c[i+1]=='a')\n\t\tca++;\n\telse\n\t\tcb++;\n\tif(ca>cb)\n\t\t{\n\t\t\tc[i]='b';\n\t\t\tcount++;\n\t\t}\n\telse if(cb>ca)\n\t{\n\t\tc[i]='a';\n\t\tcount++;\n\t}\n\t\n}\nprintf(\"%d\\n\",count);\nprintf(\"%s\",c);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\nint n,ca=0,cb=0,count=0;\nscanf(\"%d\",&n);\nchar c[n+1];\nscanf(\"%s\",c);\nfor(int i=0;c[i]!='\\0';i+=2)\n{\n\tif(c[i]=='a')\n\t\tca++;\n\telse\n\t\tcb++;\n\tif(c[i+1]=='a')\n\t\tca++;\n\telse\n\t\tcb++;\n\tif(ca>cb)\n\t\t{\n\t\t\tc[i]='b';\n\t\t\tcount++;\n\t\t}\n\telse if(cb>ca)\n\t{\n\t\tc[i]='a';\n\t\tcount++;\n\t}\n\tca=0;\n\tcb=0;\n\t\n}\nprintf(\"%d\\n\",count);\nprintf(\"%s\",c);\nreturn 0;\n}\n"}
{"similarity_score": 0.9960199004975124, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "bb82ce1fea5a4954b0498c029a595907", "bug_code_uid": "bf7aff564ccc67779daa55b70872030a", "src_uid": "b784cebc7e50cc831fde480171b9eb84", "apr_id": "a73c974e1eb27b5573eb7ceaeffde285", "difficulty": 1400, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    int a[100001];\n\tint maxlen = 2,len=2,minpos,maxpos,temp,i,n;\n\tscanf(\"%d\",&n);\n\tfor(i=0; i<2; i++)\n\t    scanf(\"%d\",&a[i]);\n\tif(a[0]<a[1]) {\n\t    minpos = 0;\n\t    maxpos = 1;\n\t}\n\telse if(a[0]>a[1]) {\n\t    minpos = 1;\n\t    maxpos = 0;\n\t}\n\telse\n\t    minpos = maxpos = 0;\n\tfor(i=2; i<n; i++) {\n\t    scanf(\"%d\",&a[i]);\n\t    if(a[i] - a[minpos] <= 1 && a[maxpos] - a[i] <= 1) \n\t        len++;\n\t    else \n\t        if(a[i] - a[minpos] > 1) {\n\t            maxpos = i;\n\t            temp = i - 1;\n\t            while(temp>=0 && a[temp] == a[maxpos] - 1)\n\t                temp--;\n\t            minpos = temp;\n\t            len = maxpos - minpos + 1;\n\t        }\n\t        else {\n\t            minpos = i;\n\t            temp = i - 1;\n\t            while(temp>=0 && a[temp] == a[minpos] + 1)\n\t                temp--;\n\t            maxpos = temp;\n\t            len = minpos - maxpos + 1;\n\t        }\n\t    if(len > maxlen) \n\t            maxlen = len;\n\t}\n\tprintf(\"%d\",maxlen);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n    int a[100001];\n\tint maxlen = 2,len=2,minpos,maxpos,temp,i,n;\n\tscanf(\"%d\",&n);\n\tfor(i=0; i<2; i++)\n\t    scanf(\"%d\",&a[i]);\n\tif(a[0]<a[1]) {\n\t    minpos = 0;\n\t    maxpos = 1;\n\t}\n\telse if(a[0]>a[1]) {\n\t    minpos = 1;\n\t    maxpos = 0;\n\t}\n\telse\n\t    minpos = maxpos = 0;\n\tfor(i=2; i<n; i++) {\n\t    scanf(\"%d\",&a[i]);\n\t    if(a[i] - a[minpos] <= 1 && a[maxpos] - a[i] <= 1) \n\t        len++;\n\t    else \n\t        if(a[i] - a[minpos] > 1) {\n\t            maxpos = i;\n\t            temp = i - 1;\n\t            while(temp>=0 && a[temp] == a[maxpos] - 1)\n\t                temp--;\n\t            minpos = temp + 1;\n\t            len = maxpos - minpos + 1;\n\t        }\n\t        else {\n\t            minpos = i;\n\t            temp = i - 1;\n\t            while(temp>=0 && a[temp] == a[minpos] + 1)\n\t                temp--;\n\t            maxpos = temp + 1;\n\t            len = minpos - maxpos + 1;\n\t        }\n\t    if(len > maxlen) \n\t            maxlen = len;\n\t}\n\tprintf(\"%d\",maxlen);\n\treturn 0;\n}"}
{"similarity_score": 0.23638778220451528, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "f9d02979732fed3000b14316e70718a5", "bug_code_uid": "5ca1435420debdb5d3b608533b4400e4", "src_uid": "5c12573b3964ee30af0349c11c0ced3b", "apr_id": "96fd35cad7b9a4a28e5de989bb5a6cbe", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,s;\n    scanf(\"%d %d\",&n,&s);\n    int f[n],t[n];\n    for (int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&f[i],&t[i]);\n    }\n\n    int time=0;\n    int i=n-1;\n\n    while(s>0)\n    {\n\n        if(f[i]==s && i>=0)\n        {\n            if(t[i]>time)\n\n            {\n            time=t[i];\n            }\n            i--;\n        }\n        time++;\n        s--;\n    }\n\n    printf(\"%d\",time);\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint i,j,prfloor,prtime=0,n,floor[100000],time[100000];\n\t\n\tscanf(\"%d %d\",&n,&prfloor);\n\tfor(i=0;i<n;i++) scanf(\"%d %d\",&floor[i],&time[i]);\n\t\n\tfor(;prfloor>=0;prfloor--){\n\t\tfor(j=0;j<n;j++) if(floor[j]==prfloor) if(prtime< time[j]) prtime=time[j];\n\t\tprtime++;\n\t}\n\n\tprintf(\"%d\",prtime-1);\n\treturn 0;\n}"}
{"similarity_score": 0.955406911928651, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "dcbf61906a934de094877b6f6bd70764", "bug_code_uid": "bb901da164d5147d38e1fde13d03d3d7", "src_uid": "3fe51d644621962fe41c32a2d90c7f94", "apr_id": "527b9ad9985597fef18591738cfd2703", "difficulty": 800, "tags": ["dp", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,t,j,i,a[100000],count=0,a1[10000],a2[10000],count1=0;\n    scanf(\"%d\",&t);\n    for(j=0; j<t; j++)\n    {\n        scanf(\"%d\",&n);\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n\n        for(i=0; i<n; i++)\n        {\n            if(a[i]%2==0)\n            {\n                a1[count]=i;\n                count=count+1;\n            }\n            else\n            {\n                a2[count1]=i;\n                count1=count1+1;\n            }\n        }\n        if(count>0)\n            printf(\"%d\\n\",a1[0]+1);\n        else if(count1>0)\n        {\n            if(count1==1)\n                printf(\"-1\\n\");\n            else\n            {\n                printf(\"%d %d\",a2[0]+1,a2[1]+1);\n                printf(\"\\n\");\n            }\n        }\n        count=0;\n        count1=0;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,t,j,i,a[100000],count=0,a1[10000],a2[10000],count1=0;\n    scanf(\"%d\",&t);\n    for(j=0; j<t; j++)\n    {\n        scanf(\"%d\",&n);\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n\n        for(i=0; i<n; i++)\n        {\n            if(a[i]%2==0)\n            {\n                a1[count]=i;\n                count=count+1;\n            }\n            else\n            {\n                a2[count1]=i;\n                count1=count1+1;\n            }\n        }\n        if(count>0)\n        {\n            printf(\"1\\n\");\n            printf(\"%d\\n\",a1[0]+1);\n\n        }\n\n        else if(count1>0)\n        {\n            if(count1==1)\n                printf(\"-1\\n\");\n            else\n            {\n                printf(\"2\\n\");\n                printf(\"%d %d\",a2[0]+1,a2[1]+1);\n                printf(\"\\n\");\n            }\n        }\n        count=0;\n        count1=0;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9230769230769231, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "910d21c1f07230ea87f4d633769fc20f", "bug_code_uid": "2fa6667a7e395e492895c362bbb9bcd7", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "4ee9ceae11d0f43d166cbec43c942aa5", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d%d\",&n,&m)!=EOF)\n          j=1;\n        if(n>m)\n        {\n            for(i=1;i<=n;i++)\n            {\n                printf(\"%c\",'B');\n                if(j<=m)\n                {\n                    printf(\"%c\",'G');\n                    j++;\n                }\n            }\n        }\n        else\n        {\n            for(i=1;i<=m;i++)\n            {\n                printf(\"%c\",'G');\n                if(j<=n)\n                {\n                    printf(\"%c\",'B');\n                    j++;\n                }\n            }\n        }\n    printf(\"\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    int n,m,i,j;    \n    while(scanf(\"%d%d\",&n,&m)!=EOF)\n    {\n        j=1;\n        if(n>m)\n        {\n            for(i=1;i<=n;i++)\n            {\n                printf(\"%c\",'B');\n                if(j<=m)\n                {\n                    printf(\"%c\",'G');\n                    j++;\n                }\n            }\n        }\n        else\n        {\n            for(i=1;i<=m;i++)\n            {\n                printf(\"%c\",'G');\n                if(j<=n)\n                {\n                    printf(\"%c\",'B');\n                    j++;\n                }\n            }\n        }\n    printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.5237366003062787, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "96159294e15dd5646a371bb1b403440e", "bug_code_uid": "e094e7ad849473c06da566b6476fe1e4", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "e3d2db4599e14641539c67ef140ef752", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int q,l,r,d,i,p,j=1;\n    scanf(\"%d\",&q);\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%d%d%d\",&l,&r,&d);\n        while(1)\n        {\n            p=d*j;\n            if(p<l || p>r)\n            {\n                j=1;\n                break;\n            }\n            j++;\n        }\n        printf(\"%d\\n\",p);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int q,i;\n    long long int l,r,d,p;\n    scanf(\"%d\",&q);\n\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%I64d %I64d %I64d\",&l,&r,&d);\n\n        if(d<l || d>r) printf(\"%I64d\\n\",d);\n        else\n        {\n            p=d*((r/d)+1);\n            printf(\"%I64d\\n\",p);\n        }\n    }\n}\n"}
{"similarity_score": 0.7282608695652174, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "c45ca8c64234124300e2b825ddeaa03f", "bug_code_uid": "cc43343d580ca948566c8e917948f03e", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "6a65cceae888ef819b368f834fd8170e", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\n\nusing namespace std;\nint main()\n{\n    char ch[1000000],ch2[1000000];\n    scanf(\"%s%s\",ch,ch2);\n    int l,l1;\n    l=strlen(ch);\n    l1=strlen(ch2);\n    if(strcmp(ch,ch2)==0)\n    {\n        printf(\"-1\\n\");\n    }\n    else if(l<l1)\n        printf(\"%d\\n\",l1);\n    else\n        printf(\"l\\n\");\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char ch[1000000],ch2[1000000];\n    scanf(\"%s%s\",ch,ch2);\n    int l,l1,t,i,x=0,p=0,j=0;\n    l=strlen(ch);\n    l1=strlen(ch2);\n    if(strcmp(ch,ch2)==0)\n    {\n        printf(\"-1\\n\");\n    }\n    else\n    {\n        if(l<l1){\n                 t=l1;\n\n        }\n\n        else{\n                 t=l;\n\n        }\n        printf(\"%d\\n\",t);\n    }\n\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.3225806451612903, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ffe77b3a8363435e994f5cbc77bedf6e", "bug_code_uid": "597759126f9c8eb145c0f38298b73de8", "src_uid": "c1f247150831e9b52389bae697a1ca3d", "apr_id": "eea19837f77b25a74479602bb015b303", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar a[2001][2001];\nint main()\n{\n\tint n,m,k;\n\t\n\twhile(scanf(\"%d%d%d\",&n,&m,&k)!=EOF)\n\t{\n\t\tmemset(a,0,sizeof(a));\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%s\",a[i]);\n\t\t}\n\t\tint b=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tint num=0;\n\t\t\tfor(int j=0;j<m;j++)\n\t\t\t{\n\t\t\t//\tprintf()\n\t\t\t\t\n\t\t\t\tif(a[i][j]=='.')\n\t\t\t\t{\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tif(num>=k)\n\t\t\t\t\t{\n\t\t\t\t\t\tb+=num-k+1;\n\t\t\t\t\t}\n\t\t\t\t\tnum=0; \n\t\t\t\t}//printf(\"a[%d][%d]=%c  num=%d\\n\",i,j,a[i][j],num);\n\t\t\t}\n\t\t\t\tif(num>=k)\n\t\t\t\t{\n\t\t\t\t\t\tb+=num-k+1;\n\t\t\t\t}\n\t\t}\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tint num=0;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(a[i][j]=='.')\n\t\t\t\t{\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(num>=k)\n\t\t\t\t\t{\n\t\t\t\t\t\tb+=num-k+1;\n\t\t\t\t\t}\n\t\t\t\t\tnum=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num>=k)\n\t\t\t{\n\t\t\t\tb+=num-k+1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",b);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[2001][2001];\nint main()\n{\n\tint n,m,k;\n\t\n\twhile(scanf(\"%d%d%d\",&n,&m,&k)!=EOF)\n\t{\n\t\n\t\tmemset(a,0,sizeof(a));\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%s\",a[i]);\n\t\t}\t\n\t\tif(k==1)\n\t\t{\n\t\t\tint x=0;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tfor(int j=0;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\tif(a[i][j]=='.')\n\t\t\t\t\t{\n\t\t\t\t\t\tx++;\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",x);\n\t\t\tcontinue;\n\t\t}\n\t\tint b=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tint num=0;\n\t\t\tfor(int j=0;j<m;j++)\n\t\t\t{\n\t\t\t//\tprintf()\n\t\t\t\t\n\t\t\t\tif(a[i][j]=='.')\n\t\t\t\t{\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tif(num>=k)\n\t\t\t\t\t{\n\t\t\t\t\t\tb+=num-k+1;\n\t\t\t\t\t}\n\t\t\t\t\tnum=0; \n\t\t\t\t}//printf(\"a[%d][%d]=%c  num=%d\\n\",i,j,a[i][j],num);\n\t\t\t}\n\t\t\t\tif(num>=k)\n\t\t\t\t{\n\t\t\t\t\t\tb+=num-k+1;\n\t\t\t\t}\n\t\t}\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tint num=0;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(a[i][j]=='.')\n\t\t\t\t{\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(num>=k)\n\t\t\t\t\t{\n\t\t\t\t\t\tb+=num-k+1;\n\t\t\t\t\t}\n\t\t\t\t\tnum=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num>=k)\n\t\t\t{\n\t\t\t\tb+=num-k+1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",b);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9970674486803519, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "bf7f52418ce421079bc4a1994ecebee0", "bug_code_uid": "283d97b716cefe963c032c8e26093724", "src_uid": "6421a81f85a53a0c8c63fbc32750f77f", "apr_id": "457d3832e724f0a97af02f21f58b986a", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    \n    int n,a,b,p;\n    float d;\n    scanf(\"%d%d%d\",&n,&a,&b); \n    p=a+b;\n    d=((a*n)*1.0)/(a+b);\n    printf(\"%0.1lf\\n\",d);\n    \n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    \n    int n,a,b,p;\n    float d;\n    scanf(\"%d%d%d\",&n,&a,&b); \n    p=a+b;\n    d=((a*n)*1.0)/(a+b);\n    printf(\"%0.12lf\\n\",d);\n    \n    \n}"}
{"similarity_score": 0.9311246730601569, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c214c0ea1a789cd02e4bb653154f7773", "bug_code_uid": "42df3d449d8db17ac6f60f55a413acda", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "ddc2b31e7b320b162e82430d09578038", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(void) {\n    char A[100005],B[100005];\n    scanf(\"%s\",A);\n    scanf(\"%s\",B);\n    int l=strlen(A);\n    \n    int dis=0,i,c=0;\n    \n    char ans[l];\n    \n    for(i=0;i<l;i++)\n    {\n        if(A[i]!=B[i])\n        {\n            dis++;\n            c++;\n            if(c%2==1)\n            ans[i]=A[i];\n            else\n            ans[i]=B[i];\n        }\n        else\n        {\n            ans[i]=A[i];\n        }\n        \n    }\n    if(dis%2==1)\n    printf(\"impossible\");\n    else\n    puts(ans);\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(void) {\n    char A[100005],B[100005];\n    scanf(\"%s\",A);\n    scanf(\"%s\",B);\n    int l=strlen(A);\n    \n    int dis=0,i,c=0;\n    \n    char ans[l];\n    \n    for(i=0;i<l;i++)\n    {\n        if(A[i]!=B[i])\n        {\n            dis++;\n            c++;\n            if(c%2==1)\n            ans[i]=A[i];\n            else\n            ans[i]=B[i];\n        }\n        else\n        {\n            ans[i]=A[i];\n        }\n        \n    }\n    if(dis%2==1)\n    printf(\"impossible\");\n    else\n    {\n        for(i=0;i<l;i++)\n        printf(\"%c\",ans[i]);\n    }\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9984567901234568, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2f668764b6de050bb5ed20dcfd2f2c94", "bug_code_uid": "b397b54edf68591bdbd7109ee05a1185", "src_uid": "168f2a740d21a3a916a9d560fbcffeb9", "apr_id": "d69d23aa7d2bc15c0eb7a742672f0942", "difficulty": 800, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n    int n,a,b,ar1[100007],ar2[100007],taken[100007];\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++){\r\n        scanf(\"%d %d\",&a,&b);\r\n        for(int j=0;j<a;j++){\r\n            scanf(\"%d\",&ar1[j]);\r\n        }\r\n        for(int j=0;j<a;j++){\r\n            scanf(\"%d\",&ar2[j]);\r\n        }\r\n        for(int k=0;k<a;k++){\r\n            for(int j=0;j<a;j++){\r\n                if(ar1[j]<=b && taken[j]!=101){\r\n                    b+=ar2[j];\r\n                    taken[j]=101;\r\n                }\r\n            }\r\n        }\r\n        for(int j=0;j<a;j++){\r\n            taken[j]=0;\r\n        }\r\n        printf(\"%d\",b);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n    int n,a,b,ar1[100007],ar2[100007],taken[100007];\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++){\r\n        scanf(\"%d %d\",&a,&b);\r\n        for(int j=0;j<a;j++){\r\n            scanf(\"%d\",&ar1[j]);\r\n        }\r\n        for(int j=0;j<a;j++){\r\n            scanf(\"%d\",&ar2[j]);\r\n        }\r\n        for(int k=0;k<a;k++){\r\n            for(int j=0;j<a;j++){\r\n                if(ar1[j]<=b && taken[j]!=101){\r\n                    b+=ar2[j];\r\n                    taken[j]=101;\r\n                }\r\n            }\r\n        }\r\n        for(int j=0;j<a;j++){\r\n            taken[j]=0;\r\n        }\r\n        printf(\"%d\\n\",b);\r\n    }\r\n}"}
{"similarity_score": 0.9305555555555556, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2fb4ea1bd75ef9ab377a94c13e4553c5", "bug_code_uid": "cf840fe3ee097388eb5d30fa539af901", "src_uid": "55595ff38a08b80bc86cf1ebae6f55af", "apr_id": "1299131885cc4b84e51fc5599abdd3a0", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> \n  \nint main() \n{ \n\tunsigned int num_tests;\n    scanf(\"%d\", &num_tests);\n    int arr[2000];\n    int i=0;\n    while(i< 2*num_tests)\n    {\n    \tscanf(\"%d %d\", &arr[i], &arr[i+1]);\n    \ti+=2;\n    }\n    i=0;\n\twhile(i< 2*num_tests)\n\t{\n\t\tif(arr[i+1] <= 2 || arr[i] <= 2)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t\ti+=2;\n\t}\n}\n", "fixed": "#include <stdio.h> \n  \nint main() \n{ \n\tunsigned int num_tests;\n    scanf(\"%d\", &num_tests);\n    int arr[2000];\n    int i=0;\n    while(i< 2*num_tests)\n    {\n    \tscanf(\"%d %d\", &arr[i], &arr[i+1]);\n    \ti+=2;\n    }\n    i=0;\n\twhile(i< 2*num_tests)\n\t{\n\t\tif(arr[i+1] == 1 || arr[i] == 1 || (arr[i+1] == 2 && arr[i] == 2))\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t\ti+=2;\n\t}\n}\n"}
{"similarity_score": 0.35860655737704916, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "3521b0659904bbeed494ca974935cfde", "bug_code_uid": "86e33fbbee2bd9c2e6b640c72f085ae2", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "16404cd754ef527d587512fd1a699f70", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tlong int n,m,no_years;\n\t\tint i;\n\tscanf(\"%d %d\",&n,&m);\n\tchar s[n][10],t[m][10];\n\t\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s \",&s[i]);\n\t}\n\t\t\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%s \",&t[i]);\n\t}\n\tscanf(\"%d\",&no_years);\n\n\tlong int years[no_years];\n\tfor(i=0;i<no_years;i++)\n\t{\n\t\tscanf(\"%d\",&years[i]);\n\t}\n\t\n\tfor(i=0;i<no_years;i++)\n\t{\n\t\tint a,b;\n\t\ta=(years[i]%n) - 1;\n\t\tb=(years[i]%m)- 1;\n\t\tif(a==(-1))\n\t\ta=n-1;\n\t\tif(b==(-1))\n\t\tb=m-1;\n\t\tprintf(\"%s%s\\n\",(s[a]),(t[b]));\n\t}\n\t\n}\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong int n,m,no_years;\n\t\tint i;\n\tscanf(\"%d %d\",&n,&m);\n\tchar s[n][11],t[m][11];\n\t\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s \",&s[i]);\n\t}\n\t\t\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%s \",&t[i]);\n\t}\n\tscanf(\"%d\",&no_years);\n\n\tlong int years[no_years];\n\tfor(i=0;i<no_years;i++)\n\t{\n\t\tscanf(\"%d\",&years[i]);\n\t}\n\t\n\tfor(i=0;i<no_years;i++)\n\t{\n\t\tint a,b;\n\t\ta=(years[i]%n) - 1;\n\t\tb=(years[i]%m)- 1;\n\t\tif(a==(-1))\n\t\ta=n-1;\n\t\tif(b==(-1))\n\t\tb=m-1;\n\t\tprintf(\"%s%s\\n\",(s[a]),(t[b]));\n\t}\n\t\n}\n\n"}
{"similarity_score": 0.7167832167832168, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a1253ca5dda978905a3f9b55b3be416b", "bug_code_uid": "5e339684ac55ffe3513a06e16fdb1e22", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "92994e09012729350fdd0fe063f116e8", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i,n,t,a[30005],j=0;\nscanf(\"%d%d\",&n,&t);\nfor(i=0;i<n-1;i++)\n{\n    scanf(\"%d\",&a[i]);\n}\nfor(i=0;i<n-1;i++)\n{\n    if(a[i]+i+1==t)\n    {\n        j=5;\n        break;\n        \n    }\n}\nif(j==5)\nprintf(\"YES\");\nelse\nprintf(\"NO\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint i,n,t,a[30005],j=0;\nscanf(\"%d%d\",&n,&t);\nfor(i=0;i<n-1;i++)\n{\n    scanf(\"%d\",&a[i]);\n}\nint pos=1;\nfor(i=0;i<n-1;i++)\n{  \n\tif(pos>i+1){\n\t\tcontinue;\n\t}\n\tpos+=a[i];\n\tif(pos==t){\n\t\tj=5;\n\t\tbreak;\n\t}\n    if(pos>t){\n    \tbreak;\n    }\n    \n\n}\nif(j==5)\nprintf(\"YES\");\nelse\nprintf(\"NO\");\n}"}
{"similarity_score": 0.8900709219858156, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "daed31579e644c772c9fac43de2c684b", "bug_code_uid": "9c1075804f89f3eed9d4fe7cd3c6e120", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "4959b11455d840b0396476dc0031a153", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(void){\n    int n, cont=0;\n    scanf(\"%d\",&n);\n    int** xyz=(int**)malloc(3*sizeof(int*));\n    for(int i=0; i<3; i++)\n         xyz[i]=(int*)malloc(n*sizeof(int));\n \n    for(int i=0; i<3; i++){\n        for(int j=0; j<n; j++){\n            scanf(\"%d\",&xyz[i][j]);\n        }\n    }\n    for(int i=0; i<3; i++)\n        for(int j=0; j<n; j++){\n           cont+=xyz[i][j];\n    }\n    if(cont==0){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(void){\n    int n, cont=0;\n    scanf(\"%d\",&n);\n    int** xyz=(int**)malloc(3*sizeof(int*));\n    for(int i=0; i<3; i++)\n         xyz[i]=(int*)malloc(n*sizeof(int));\n \n    for(int i=0; i<3; i++){\n        for(int j=0; j<n; j++){\n            scanf(\"%d\",&xyz[i][j]);\n        }\n    }\n    for(int i=0; i<3; i++)\n        for(int j=0; j<n; j++){\n           cont+=xyz[i][j];\n           if(n==3 & xyz[0][0]==0 & xyz[2][2]==0){\n                printf(\"NO\");\n                return 0;\n           }\n        }\n    if(cont==0){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n\n}\n"}
{"similarity_score": 0.9626016260162602, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "dd41cff4716b2c68313f2dd0511d9074", "bug_code_uid": "e9b2fe57dd1f09ecc2fa5d5e446aad3a", "src_uid": "92feda270834af751ca37bd80083aafa", "apr_id": "c2cb8ae247c3032172933abadd1a52b0", "difficulty": 1800, "tags": ["probabilities", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define rep(i,n) REP(i,0,n)\n\n#define EPS 1e-10\n\nint main(){\n  double a,b,res;\n  double m1, m2;\n  int size;\n\n  scanf(\"%d\",&size);\n  while(size--){\n    scanf(\"%lf%lf\",&a,&b);\n    if(b<EPS){ puts(\"1.0000000000\"); continue; }\n    if(a<EPS){ puts(\"0.5000000000\"); continue; }\n    \n    res = 0;\n\n    if(a > 4*b) m1 = 4*b, m2 = a-m1;\n    else        m1 = a,   m2 = 0;\n\n    res += m2 / a;\n    res += 0.5 * m1 / a / 2;\n    res += (4*b+a)/(8*b) * m1 / a / 2;\n    \n    printf(\"%.10lf\\n\",res);\n  }\n\n\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define rep(i,n) REP(i,0,n)\n\n#define EPS 1e-10\n#define MIN(a,b) (((a)<(b))?(a):(b))\n\nint main(){\n  double a,b,res;\n  double m1, m2;\n  int size;\n\n  scanf(\"%d\",&size);\n  while(size--){\n    scanf(\"%lf%lf\",&a,&b);\n    if(b<EPS){ puts(\"1.0000000000\"); continue; }\n    if(a<EPS){ puts(\"0.5000000000\"); continue; }\n    \n    res = 0;\n\n    if(a > 4*b) m1 = 4*b, m2 = a-m1;\n    else        m1 = a,   m2 = 0;\n\n    res += m2 / a;\n    res += 0.5 * m1 / a / 2;\n    res += MIN(1.0,(4*b+a)/(8*b)) * m1 / a / 2;\n    \n    printf(\"%.10lf\\n\",res);\n  }\n\n\n  return 0;\n}\n"}
{"similarity_score": 0.9967721110393802, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7d08f0dc29f482037d2570eaaaab2579", "bug_code_uid": "683eebe1209b6c2b3b4c0a6ceea27c3a", "src_uid": "7eae40835f6e9580b985d636d5730e2d", "apr_id": "2c4d7ee2d9bfaaa71a45591d46ae7a98", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n,i,a,b,p;\n    scanf(\"%lld\", &n);\n    for(i=0;i<n;i++){\n        scanf(\"%lld %lld\", &a, &b);\n        if(a==b&&(a%2!=0)) printf(\"%lld\\n\", a*-1);\n        if(a==b&&(a>0)) printf(\"%lld\\n\", a);\n        else if((b-a)%2!=0){\n                if(a%2!=0) a=a*-1;\n                if(b%2!=0) b=b*-1;\n            if((b+a)<0){\n            p=((abs(b)-abs(a))+1)/2;\n            p=p*-1;\n            printf(\"%lld\\n\", p);\n            }\n            else if((b+a)>0){\n            p=((abs(b)-abs(a))+1)/2;\n            printf(\"%lld\\n\", p);\n        }\n        }\n        else if((b-a)%2==0){\n            if(a%2!=0) a=a*-1;\n            if(b%2!=0) b=b*-1;\n            p=(a+b)/2;\n            printf(\"%lld\\n\", p);\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n,i,a,b,p;\n    scanf(\"%lld\", &n);\n    for(i=0;i<n;i++){\n        scanf(\"%lld %lld\", &a, &b);\n        if(a==b&&(a%2!=0)) printf(\"%lld\\n\", a*-1);\n        else if(a==b&&(a>0)) printf(\"%lld\\n\", a);\n        else if((b-a)%2!=0){\n                if(a%2!=0) a=a*-1;\n                if(b%2!=0) b=b*-1;\n            if((b+a)<0){\n            p=((abs(b)-abs(a))+1)/2;\n            p=p*-1;\n            printf(\"%lld\\n\", p);\n            }\n            else if((b+a)>0){\n            p=((abs(b)-abs(a))+1)/2;\n            printf(\"%lld\\n\", p);\n        }\n        }\n        else if((b-a)%2==0){\n            if(a%2!=0) a=a*-1;\n            if(b%2!=0) b=b*-1;\n            p=(a+b)/2;\n            printf(\"%lld\\n\", p);\n        }\n    }\n}\n"}
{"similarity_score": 0.911353032659409, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a68e23fccf1b1939c626a8929284b339", "bug_code_uid": "de548b03198bf273e5ee295c332cd8cc", "src_uid": "9802646ecc8890bb046d5ec1a4262d70", "apr_id": "1ad9116b9fa1d8a375ccade1605b1c48", "difficulty": 1400, "tags": ["two pointers", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint cf(void const *a, void const *b)\n{\n\treturn (*(int*)a - *(int*)b);\n}\nint main()\n{\n\tint n, k, i, t;\n\t\n\tscanf(\"%d\", &t);\n\t\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\", &n, &k);\n\t\tlong long int s=0;\n\t\tint a[n+1], b[k+1], r=0;\n\t\t\n\t\tfor(i=0; i<n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[i]);\n\t\t}\n\t\tfor(i=0; i<k; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &b[i]);\n\t\t}\n\t\tqsort(a, n, 4, cf);\n\t\tqsort(b, k, 4, cf);\n\t\tn--;\n\t\t\n\t\tfor(i=0; i<k; i++)\n\t\t{\n\t\t\tif(b[i]<=2)\n\t\t\t{\n\t\t\t\ts+=a[n]+a[n-b[i]+1];\n\t\t\t\tn--;\n\t\t\t\tif(b[i]==2){ n--; }\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ts+=a[n]+a[r];\n\t\t\t\tn--;\n\t\t\t\tr++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\", s);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint cf(void const *a, void const *b)\n{\n\treturn (*(int*)a - *(int*)b);\n}\nint main()\n{\n\tint n, k, i, t;\n\t\n\tscanf(\"%d\", &t);\n\t\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\", &n, &k);\n\t\tlong long int s=0;\n\t\tint a[n+1], b[k+1], r=0, f=0;\n\t\t\n\t\tfor(i=0; i<n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[i]);\n\t\t}\n\t\tfor(i=0; i<k; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &b[i]);\n\t\t}\n\t\tqsort(a, n, 4, cf);\n\t\tqsort(b, k, 4, cf);\n\t\tn--;\n\t\t\n\t\tfor(i=0; i<k; i++)\n\t\t{\n\t\t\tif(b[i]<=2)\n\t\t\t{\n\t\t\t\ts+=a[n]+a[n-b[i]+1];\n\t\t\t\tn--;\n\t\t\t\tif(b[i]==2){ n--; }\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(f==0){ r=n-k+i; f++; }\n\t\t\t\t\n\t\t\t\ts+=a[n]+a[r-b[i]+2];\n\t\t\t\tn--;\n\t\t\t\tr=r-b[i]+1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\", s);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.46285714285714286, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "f03ee142959c27f993d01addd0b9b1cc", "bug_code_uid": "24551885fbbae3eda6a0fdebc6292ab9", "src_uid": "ac4aac095e71cbfaf8b79262d4038095", "apr_id": "7ebac1a5f4e44cb50ddbed2491f06412", "difficulty": 1200, "tags": ["data structures", "hashing", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint HASH[200001];\r\nint main()\r\n{\r\n  int t,n,i,j,arr[200001],arr1[200001];\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      scanf(\"%d\",&arr[i]);\r\n      arr1[i]=arr[i]-i;\r\n      HASH[arr1[i]]++;\r\n    }\r\n    int sum=0;\r\n    for(i=0;i<n;i++)\r\n    {\r\n      sum=sum+(HASH[arr1[i]]*(HASH[arr1[i]]-1))/2;\r\n      HASH[arr1[i]]=0;\r\n    }\r\n    printf(\"%d\\n\",sum);\r\n  }\r\n  return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint compare(const void* a,const void* b)\r\n{\r\n  long long x=*((long long*)a);\r\n  long long y=*((long long*)b);\r\n  if(x==y){return 0;}\r\n  else if(x>y){return 1;}\r\n  else{return -1;}\r\n}\r\nint main()\r\n{\r\n  long long t,n,i,j,arr[200001],arr1[200001],count[200001],counti=0,sum;\r\n  scanf(\"%lld\",&t);\r\n  while(t--)\r\n  {\r\n    sum=0;\r\n    counti=0;\r\n    int k=0;\r\n    scanf(\"%lld\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      scanf(\"%lld\",&arr[i]);\r\n      arr1[i]=arr[i]-i;\r\n    }\r\n    qsort(arr1,n,sizeof(long long),compare);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      if(arr1[i]==arr1[i+1])\r\n      {\r\n        counti++;\r\n      }\r\n      else\r\n      {\r\n        count[k++]=counti+1;\r\n        counti=0;\r\n      }\r\n    }\r\n    count[k++]=counti;\r\n    for(i=0;i<k;i++)\r\n    {\r\n      if(count[i]>0)\r\n      {\r\n      sum=sum+(count[i]*(count[i]-1))/2;\r\n      }\r\n      count[i]=0;\r\n    }\r\n    printf(\"%lld\\n\",sum);\r\n  }\r\n  return 0;\r\n}"}
{"similarity_score": 0.9986789960369881, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "58e85ce84dc8d5449c9a8fdedf3cd000", "bug_code_uid": "35f234c140044af4ca690e9a833ff909", "src_uid": "1b3ac752bc9c0b5e20a76f028d4b3c15", "apr_id": "7faa2c80e0dab74664847c2d71fbb698", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,temp;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(int m=0;m<n;m++)\n\t\ta[m]=m+1;\n\t\tfor(int m=0;m<n;m++)\n\t\t{\n\t\t\tfor(int f=0;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(a[f]|a[m]<f-m+3)\n\t\t\t\t{\n\t\t\t\t\ttemp=a[f];\t\n\t\t\t\t\ta[f]=a[m];\n\t\t\t\t\ta[m]=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int m=0;m<n;m++)\n\t\tprintf(\"%d\",a[m]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,temp;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(int m=0;m<n;m++)\n\t\ta[m]=m+1;\n\t\tfor(int m=0;m<n;m++)\n\t\t{\n\t\t\tfor(int f=0;f<=m;f++)\n\t\t\t{\n\t\t\t\tif(a[f]|a[m]<f-m+3)\n\t\t\t\t{\n\t\t\t\t\ttemp=a[f];\t\n\t\t\t\t\ta[f]=a[m];\n\t\t\t\t\ta[m]=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int m=0;m<n;m++)\n\t\tprintf(\"%d \",a[m]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9411764705882353, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b316fed18574d895fd4a312bc842b4ea", "bug_code_uid": "1ae36f6f6024857645b4fdef4af765fc", "src_uid": "f5451b19cf835b1cb154253fbe4ea6df", "apr_id": "078d46ce55f7c37bebd0dbf149b717a3", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint getarr(int a[]){\n\tint i=0;\n\tfor(;i<26;i++)\n\t\tif(a[i]!=0)\n\t\t\treturn -1;\n\treturn 1;\n}\nint main(){\n\tint k,len;\n\tchar c[1000];\n\tint a[26],i;\n\tscanf(\"%d\",&k);\n\tscanf(\"%s\",c);\n\tlen=strlen(c);\n\tfor(i=0;i<26;i++)\n\t\ta[i]=0;\n\tif(len%k!=0)\n\t\tprintf(\"-1\\n\");\n\telse{\n\t\tfor(i=0;i<len;i++)\n\t\t\ta[(int)(c[i]-'a')]++;\n\t\tfor(i=0;i<26;i++)\n\t\t\tif(a[i]%k!=0)\n\t\t\t\tbreak;\n\t\tif(i==26){\n\t\t\tfor(i=0;getarr(a)==-1;i++){\n\t\t\t\tif(a[i%26]!=0){\n\t\t\t\t\tprintf(\"%c\",(char)('a'+(i%26)));\n\t\t\t\t\ta[i%26]--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint getarr(int a[]){\n\tint i=0;\n\tfor(;i<26;i++)\n\t\tif(a[i]!=0)\n\t\t\treturn -1;\n\treturn 1;\n}\nint main(){\n\tint k,len;\n\tchar c[1000];\n\tint a[26],i;\n\tscanf(\"%d\",&k);\n\tscanf(\"%s\",c);\n\tlen=strlen(c);\n\tfor(i=0;i<26;i++)\n\t\ta[i]=0;\n\tif(len%k!=0)\n\t\tprintf(\"-1\\n\");\n\telse{\n\t\tfor(i=0;i<len;i++)\n\t\t\ta[(int)(c[i]-'a')]++;\n\t\tfor(i=0;i<26;i++)\n\t\t\tif(a[i]%k!=0)\n\t\t\t\tbreak;\n\t\tif(i==26){\n\t\t\tfor(i=0;i<26*k;i++){\n\t\t\t\tint tmp=a[i%26]/k;\n\t\t\t\twhile(tmp!=0){\n\t\t\t\t\tprintf(\"%c\",(char)('a'+(i%26)));\n\t\t\t\t\ttmp--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9961089494163424, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f464ebcd1b44c04f33a06db27aef28ee", "bug_code_uid": "a3ddb2904ea9e35342217c232604a95b", "src_uid": "089eea1841ef10064647e61094c374fd", "apr_id": "6adab1631003e8f6c0e380619d7e5152", "difficulty": 1500, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint fr[1000005];\n\nint main()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"I.in\",\"r\",stdin);\n    #endif\n\n    int n,i,temp;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&temp);\n        fr[temp]++;\n    }\n    for(i=0;i<=1000000;i++)\n    {\n        if(fr[i]>1)\n        {\n            fr[i+1]=fr[i+1]+fr[i]/2;\n            fr[i]=fr[i]%2;\n        }\n    }\n    int count=0;\n    for(i=0;i<=1000000;i++)\n    {\n        if(fr[i]>=1)    count++;\n    }\n    printf(\"%d\",count);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint fr[1000005];\n\nint main()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"I.in\",\"r\",stdin);\n    #endif\n\n    int n,i,temp;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&temp);\n        fr[temp]++;\n    }\n    for(i=0;i<=1000090;i++)\n    {\n        if(fr[i]>1)\n        {\n            fr[i+1]=fr[i+1]+fr[i]/2;\n            fr[i]=fr[i]%2;\n        }\n    }\n    int count=0;\n    for(i=0;i<=1000090;i++)\n    {\n        if(fr[i]>=1)    count++;\n    }\n    printf(\"%d\",count);\n\n    return 0;\n}\n"}
{"similarity_score": 0.36450381679389315, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "3dee2e7c3d159afbccc64dd67b5a6e0a", "bug_code_uid": "1da73918e17714aaa687b5220ddd5ff8", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "ab044de55825b4d2dbd432e93877b8fd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n  int n;\n  scanf(\"%d\",&n);\n\n  long int arr[n];\n  long int max=0;\n\n  for(int i=0;i<n;i++)\n  {\n    scanf(\"%ld\",&arr[i]);\n    if(max<arr[i])\n    max=arr[i];\n  }\n\n  for(long int i=1;i<max+1;i++)\n  {\n    long int k;\n    if(i%2==1)\n    k=i+1;\n    else\n    k=i-1;\n    for(int j=0;j<n;j++)\n    {\n      if(arr[j]==i)\n      arr[j]=k;\n    }\n  }\n\n  for(int i=0;i<n-1;i++)\n  printf(\"%ld \",arr[i]);\n  printf(\"%ld\",arr[n-1]);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n  int n;\n  scanf(\"%d\",&n);\n\n  long int arr[n];\n  long int max[n];\n\n  for(int i=0;i<n;i++)\n  {\n    scanf(\"%ld\",&arr[i]);\n    max[i]=arr[i];\n  }\n\n  for(int i=0;i<n-1;i++)\n  for(int j=i+1;j<n;j++)\n  {\n    if(max[i]>max[j])\n    {\n      long int c;\n      c=max[i];\n      max[i]=max[j];\n      max[j]=c;\n    }\n  }\n\n\n  for(int i=0;i<n;i++)\n  {\n\n\n    for(int j=0;j<n;j++)\n    {\n      if(arr[j]==max[i])\n    {\n      if(arr[j]%2==0)\n      arr[j]--;\n\n    }\n\n    }\n\n  }\n\n\n\n  for(int i=0;i<n-1;i++)\n  printf(\"%ld \",arr[i]);\n  printf(\"%ld\",arr[n-1]);\n\n  return 0;\n}\n"}
{"similarity_score": 0.7696381288614298, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "20b039a43aade1926902c4d538f9a26d", "bug_code_uid": "bb552f13f3764104016a41b738ebb796", "src_uid": "90125e9d42c6dcb0bf3b2b5e4d0f845e", "apr_id": "f49c97e2a13f03d8c1e329c4a8524927", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint a[110][110];\nint main()\n{\n   int n,m,i,j,ans,ok;\n   scanf(\"%d%d\",&n,&m);\n   for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n           scanf(\"%d\",&a[i][j]);\n           ok=1;\n    if(n%2==1)\n    {\n        printf(\"%d\\n\",n);\n        return 0;\n    }\n    do\n    {\n         ans=n; n/=2;\n        for(i=1;i<=n;i++)\n\n        {\n\n            if(ok==0) break;\n            for(j=1;j<=m;j++)\n                if(a[i][j]!=a[2*n-i+1][j])\n                  {ok=0; break;}\n        }\n\n    }while(ok);\n    printf(\"%d\\n\",ans);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint a[110][110];\nchar c[110][110];\nint main()\n{\n   int n,m,i,j,ans,ok;\n   scanf(\"%d%d\",&n,&m);\n   for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n           scanf(\"%d\",&a[i][j]);\n           ok=1;\n    do\n    {\n        if(n%2==1&&n>2) {printf(\"%d\\n\",n); return 0;}\n        ans=n; n/=2;\n        for(i=1;i<=n;i++){\n                if(!ok) break;\n            for(j=1;j<=m;j++)\n            if(a[i][j]!=a[2*n-i+1][j])\n               {     ok=0;break;}\n        }\n    }while(ok&&ans>1);\n    printf(\"%d\\n\",ans);\n\n    return 0;\n}\n"}
{"similarity_score": 0.2591304347826087, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "8feba60f5a4bd8d3f5d76c525eb87bca", "bug_code_uid": "c05aa044f5d95aaca01c2fbd705f42a6", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "1cacdc2dd12036e3ba70653214904d11", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cheak(int arr[],int ara[],int n)\n{\n    int k;\n    for(int i=0;i<n;i++){\n        k=0;\n        for(int j=0;j<n-1;j++){\n            if(arr[i]==ara[j]){\n                ara[j]=0;\n                break;\n            }\n            else{\n                k++;\n            }\n        }\n        if(k==(n-1)){\n            return arr[i];\n        }\n    }\n   // return ;\n}\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int fr[n];\n    int mid[n-1];\n    int ls[n-2];\n    int ck[n-1];\n    int cp[n-2];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&fr[i]);\n    }\n    for(i=0;i<n-1;i++){\n        scanf(\"%d\",&mid[i]);\n        ck[i]=mid[i];\n    }\n     for(i=0;i<n-2;i++){\n        scanf(\"%d\",&ls[i]);\n        cp[i]=ls[i];\n    }\n    printf(\"%d\\n%d\\n\",cheak(fr,ck,n),cheak(mid,cp,n-1));\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a=0,b=0,c=0,fr,mid,ls;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&fr);\n        a += fr;\n    }\n    for(i=0;i<n-1;i++){\n        scanf(\"%d\",&mid);\n         b += mid;\n    }\n     for(i=0;i<n-2;i++){\n        scanf(\"%d\",&ls);\n        c += ls;\n    }\n    printf(\"%d\\n%d\\n\",a-b,b-c);\n    return 0;\n}\n"}
{"similarity_score": 0.8994708994708994, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "6bc3d8db6570ccb2e8e038dfc9a3f1a8", "bug_code_uid": "64fc94460309d851bab5e6c1843f1497", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "d7a83e169be135bf8a6035e8f03afad8", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    long int t,i,n,s[100],count=0,d;\n    scanf(\"%ld\",&t);\n    while(t--){\n            scanf(\"%ld\",&n);\n        scanf(\"%s\",&s);\n    for(i=0;i<n;i++){\n    if(s[i]==8) count++;\n    }\n    if(n-count>=11) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long int t,i,n,count=0,d;\n    scanf(\"%ld\",&t);\n    while(t--){\n            scanf(\"%ld\",&n);\n            char s[n];\n        scanf(\"%s\",s);\n    for(i=0;i<n;i++){\n    if(s[i]=='8') break;\n    }\n    if((n-i)>=11) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    }\n}\n"}
{"similarity_score": 0.9971509971509972, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2bff0ac844bf7834c413075accdd09c4", "bug_code_uid": "8e90dce9134673a62cc1cb765b8844ca", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "71c0fe9e420f6c5882a653a40b05edcd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n,m=0,i,l;\n    char A[100],B[100];\n    scanf(\"%d %s %s\",&n,A,B);\n    for(i=0;i<n;i++)\n    {\n        l=abs(A[i]-B[i]);\n        if(l<=5)\n        {\n            m=m+l;\n        }\n        else\n        {\n            m=m+10-l;\n        }\n    }\n    printf(\"%d\",m);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n,m=0,i,l;\n    char A[1000],B[1000];\n    scanf(\"%d %s %s\",&n,A,B);\n    for(i=0;i<n;i++)\n    {\n        l=abs(A[i]-B[i]);\n        if(l<=5)\n        {\n            m=m+l;\n        }\n        else\n        {\n            m=m+10-l;\n        }\n    }\n    printf(\"%d\",m);\n    return 0;\n}\n"}
{"similarity_score": 0.9942857142857143, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2bef18c895d9de2fc97a215a866b231a", "bug_code_uid": "c079c414465a112e772a89479f4b1d63", "src_uid": "6f0d3a7971ffc2571838ecd8bf14238d", "apr_id": "a1ddc677b9129995c0c5d674cdfd80ae", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n\r\nint main() {\r\n    int num, a, b, temp, min;\r\n    scanf(\"%d\", &num);\r\n    while(num--){\r\n        scanf(\"%d %d\", &a, &b);\r\n        if((a == 1 && b - a >= 2) || (b == 1 && a - b >= 2)) {\r\n            printf(\"-1\\n\");\r\n            break;\r\n        }\r\n        else {\r\n            min = (a - 1) + (b - 1) + abs(a - b);\r\n            if((a % 2 == 0 && b % 2 == 1) || (b % 2 == 0 && a % 2 == 1)) {\r\n                min--;\r\n            }\r\n            printf(\"%d\\n\", min);\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\nint main() {\r\n    int num, a, b, temp, min;\r\n    scanf(\"%d\", &num);\r\n    while(num--){\r\n        scanf(\"%d %d\", &a, &b);\r\n        if((a == 1 && b - a >= 2) || (b == 1 && a - b >= 2)) {\r\n            printf(\"-1\\n\");\r\n            \r\n        }\r\n        else {\r\n            min = (a - 1) + (b - 1) + abs(a - b);\r\n            if((a % 2 == 0 && b % 2 == 1) || (b % 2 == 0 && a % 2 == 1)) {\r\n                min--;\r\n            }\r\n            printf(\"%d\\n\", min);\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n}\r\n"}
{"similarity_score": 0.9937369519832986, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8e0c07a9ede63ccd754db629352d1b7b", "bug_code_uid": "0d88fd501fd370c4737bf4ec446d2ece", "src_uid": "3f97dc063286a7af4838b7cd1c01df69", "apr_id": "052dd34095bab5608ec0da2fe1945990", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n    int n,m,i,l,r;\n    char s[100],c1,c2;\nint main()\n{\n    \n    scanf(\"%i %i\",&n,&m);\n    for(i=0;i<n;i++){\n        scanf(\" %c\",&s[i]);\n    }\n    while(m>0){\n        scanf(\"%i %i\",&l,&r);\n        scanf(\" %c\",&c1);\n        scanf(\" %c\",&c2);\n        for(i=l-1;i<r;i++){\n            if(s[i]==c1)\n                s[i]=c2;\n        }\n        m--;\n    }\n    for(i=0;i<strlen(s);i++){\n    printf(\"%c\",s[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n    int n,m,i,l,r;\n    char s[150],c1,c2;\nint main()\n{\n\n    scanf(\"%i %i\",&n,&m);\n    for(i=0;i<n;i++){\n        scanf(\" %c\",&s[i]);\n    }\n    while(m>0){\n        scanf(\"%i %i\",&l,&r);\n        scanf(\" %c\",&c1);\n        scanf(\" %c\",&c2);\n        for(i=l-1;i<r;i++){\n            if(s[i]==c1)\n                s[i]=c2;\n        }\n        m--;\n    }\n    for(i=0;i<strlen(s);i++){\n    printf(\"%c\",s[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2234185733512786, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "79b577773fd8671d6cbca7275f4c16c1", "bug_code_uid": "bd860e654af154b65e48c4b2a7ad04fa", "src_uid": "6571fdd506a858d7620c2faa0fe46cc1", "apr_id": "5381981989abaa445d5f58500f18c54a", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n\tint t,n,m;\n\tscanf(\"%d\",&t);\n\twhile(t--) {\n\t\tint i,j;\n\t\tchar ch[105];\n\t\tscanf(\"%d\",&n);\n\t\tfflush(stdin);\n\t\tfor(i=1;i<=n;i++) {\n\t\t\tch[i]=getchar();\n\t\t}\n\t\tint cnt=0;\n\t\tfor(j=1;j<=n-1;j++) {\n\t\t\tif(ch[n]!='0') {\n\t\t\t\tcnt=ch[n]-48;\n\t\t\t\tch[n]='0';\n\t\t\t} else {\n\t\t\t\tcnt=cnt;\n\t\t\t}\n\t\t\tif(ch[j]!='0') {\n\t\t\t\tcnt=cnt+ch[j]-48;\n\t\t\t\tch[j]='0';\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",cnt);\n\t}\n}\n \t\t  \t \t\t  \t  \t\t \t       \t\t \t\t\t", "fixed": "#include<stdio.h>\t\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n,i,s=0;\n\t\tscanf(\"%d\",&n);\n\t\tchar a[n];\n\t\tscanf(\"%s\",a);\n\t\ts+=a[n-1]-'0';\n\t\tfor(i=0;i<n-1;i++){\n\t\t\tif(a[i]!='0')\n\t\t\ts+=a[i]-'0'+1;\n\t\t}\n\t\tprintf(\"%d\\n\",s);\n\t}\n\treturn 0;\n}\n      \t\t\t  \t   \t  \t\t  \t\t \t\t\t\t\t"}
{"similarity_score": 0.9845422116527943, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "656103b5b0c59d29392f10be89e98f56", "bug_code_uid": "3bcef380fd546283ed16de9956a86d57", "src_uid": "bbf2dbdea6dd3aa45250ab5a86833558", "apr_id": "b801c37ebea34bfc7f1ac4e19d0c252a", "difficulty": 1300, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(void) \n{\n    int count[256]={0};\n    int countP,i,j;\n    char str[1000];\n    \n    scanf(\"%s\", str);\n    \n    countP=0;\n    for(i=0; i<strlen(str); i++)\n    count[str[i]]+=1;\n    \n    for(i=0; i<256; i++)\n    {\n        if(count[i]%2==1)\n        countP++;\n    }\n    \n    if(countP%2==1)\n    printf(\"First\");\n    \n    else\n    printf(\"Second\");\n    \n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(void) \n{\n    int count[256]={0};\n    int countP,i,j;\n    char str[1000];\n    \n    scanf(\"%s\", str);\n    \n    countP=0;\n    for(i=0; i<strlen(str); i++)\n    count[str[i]]+=1;\n    \n    for(i=0; i<256; i++)\n    {\n        if(count[i]%2==1)\n        countP++;\n    }\n    \n    if(countP%2==1 || countP==0)\n    printf(\"First\");\n    \n    else\n    printf(\"Second\");\n    \n\n    return 0;\n}\n"}
{"similarity_score": 0.9371293001186239, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ec9862400e5e196a3b0b915ce02d46e3", "bug_code_uid": "0d95bbffeb5af0c772793a254957c69b", "src_uid": "9b277feec7952947357b133a152fd599", "apr_id": "a2399d8d91b37aeb4439bb5ccef6a464", "difficulty": 1800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint cmp(const void *a, const void *b)\n{\n\treturn *(int *)a - *(int *)b;\n}\n\n\nint main()\n{\n\tint p,n,max[3]={0},i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<3;i++)\n\t{\n\t\tchar a[100005];\n\t\tint count[260]={0};\n\t\tscanf(\"%s\",a);\n\t\tp = strlen(a);\n\t\tfor(j=0;j<p;j++)\n\t\t{\n\t\t\tcount[a[j]]++;\n\t\t}\n\n\t\tfor(j=0;j<260;j++)\n\t\t{\n\t\t\tif(max[i]<count[j])\n\t\t\t\tmax[i]=count[j];\n\t\t}\n\t}\n\t\n\t\tfor(i=0;i<3;i++)\n\t\t{\n\t\t\tif(n+max[i]>=p)\n\t\t\t{\n\t\t\t\tint r = n+max[i]-p;\n\t\t\t\tif(r==0)\n\t\t\t\t\tmax[i]=p;\n\t\t\t\telse if((p/r)%2==0)\n\t\t\t\t\tmax[i]=p;\n\t\t\t\telse\n\t\t\t\t\tmax[i]=p-1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tmax[i]+=n;\n\t\t}\n\t\tif(max[0]>max[1] && max[0]>max[2])\n\t\t{\n\t\t\tprintf(\"Kuro\\n\");\n\t\t}\n\t\telse if(max[1]>max[0] && max[1]>max[2])\n\t\t\tprintf(\"Shiro\\n\");\n\t\telse if(max[2]>max[0] && max[2]>max[1])\n\t\t\tprintf(\"Katie\\n\");\n\t\telse\n\t\t\tprintf(\"Draw\\n\");\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint cmp(const void *a, const void *b)\n{\n\treturn *(int *)a - *(int *)b;\n}\n\n\nint main()\n{\n\tint p,n,max[3]={0},i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<3;i++)\n\t{\n\t\tchar a[100005];\n\t\tint count[260]={0};\n\t\tscanf(\"%s\",a);\n\t\tp = strlen(a);\n\t\tfor(j=0;j<p;j++)\n\t\t{\n\t\t\tcount[a[j]]++;\n\t\t}\n\n\t\tfor(j=0;j<260;j++)\n\t\t{\n\t\t\tif(max[i]<count[j])\n\t\t\t\tmax[i]=count[j];\n\t\t}\n\t}\n\t\n\t\tfor(i=0;i<3;i++)\n\t\t{\n\t\t\tif(n+max[i]>p)\n\t\t\t{\n\t\t\t\tint r = n+max[i]-p;\n\t\t\t\tif(n==1 && r==1)\n\t\t\t\t\tmax[i]=p-1;\n\t\t\t\telse\n\t\t\t\t\tmax[i]=p;\n\t\t\t}\n\t\t\telse\n\t\t\t\tmax[i]+=n;\n\t\t}\n\t\tif(max[0]>max[1] && max[0]>max[2])\n\t\t{\n\t\t\tprintf(\"Kuro\\n\");\n\t\t}\n\t\telse if(max[1]>max[0] && max[1]>max[2])\n\t\t\tprintf(\"Shiro\\n\");\n\t\telse if(max[2]>max[0] && max[2]>max[1])\n\t\t\tprintf(\"Katie\\n\");\n\t\telse\n\t\t\tprintf(\"Draw\\n\");\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9815950920245399, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f3ca8263fab97e0ea03a12d8cd3d44fa", "bug_code_uid": "602dcd4a00a16f38033340b05108ed74", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "d33ec335300ebc934ddb48bb8d93d8a1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int r;\n    scanf(\"%d\",&r);\n    int y[r-1];\n    for(int i=0;i<r-1;i++)\n    {\n        scanf(\"%d \",&y[i]);\n    }\n    \n    int m,n,sum=0;\n    scanf(\"%d %d\",&m,&n);\n    int diff=n-m;\n    for(int i=m-1;i<diff;i++)\n    {\n        sum=sum+y[i];\n    }\n    printf(\"%d\",sum);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int r;\n    scanf(\"%d\",&r);\n    int y[r-1];\n    for(int i=0;i<r-1;i++)\n    {\n        scanf(\"%d \",&y[i]);\n    }\n    \n    int m,n,sum=0;\n    scanf(\"%d %d\",&m,&n);\n    int diff=n-m;\n    for(int i=m-1,j=0;j<diff;i++,j++)\n    {\n        sum=sum+y[i];\n    }\n    printf(\"%d\",sum);\n}\n"}
{"similarity_score": 0.8428351309707242, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "41c33c08ec80879630fe65744458d00d", "bug_code_uid": "1e6b597c686485581ffde78171b1b9fb", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "443b5ec9d6a99ebf2a3fe3f5bbb9db6b", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint b[101];\nint main()\n{\n     int n,i,j,d,t,m,a[101],max=0,min=0;\n     scanf(\"%d %d\",&n,&m);\n     for(i=1;i<=m;i++)\n     {\n          max=0;\n          for(j=1;j<=n;j++)\n          {\n               scanf(\"%d\",&a[j]);\n               if(a[j]>max)\n               {\n                    max=a[j];\n               d=j;\n               }\n          }\n          b[d]++;\n     }\n     for(i=1;i<=n;i++)\n     {\n          if(b[i]>min)\n          {\n               min=b[i];\n               t=i;\n          }\n     }\n     printf(\"%d\",t);\n     return 0;\n}", "fixed": "#include<stdio.h>\nint b[101];\nint main()\n{\n     int n,i,j,d,t,m,a[101],max=0,min=0;\n     scanf(\"%d %d\",&n,&m);\n     for(i=1;i<=m;i++)\n     {\n          max=0;\n          for(j=1;j<=n;j++)\n          {\n               scanf(\"%d\",&a[j]);\n               if(a[j]>max)\n               {\n                    max=a[j];\n               d=j;\n               }\n               else if(j==1)\n               {\n                    if(a[j]==0)\n                    {\n                         max=a[j];\n                         d=j;\n                    }\n               }\n          }\n          b[d]++;\n     }\n     for(i=1;i<=n;i++)\n     {\n          if(b[i]>min)\n          {\n               min=b[i];\n               t=i;\n          }\n     }\n     printf(\"%d\",t);\n     return 0;\n}"}
{"similarity_score": 0.7362804878048781, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "dfc910523e9c0434f837df1f0ed4b25c", "bug_code_uid": "0982a5205bcaa8725c7e23c80eddc32e", "src_uid": "9363df0735005832573ef4d17b6a8302", "apr_id": "8d5c49948ead24380ca92dad21d82338", "difficulty": 800, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,l,r,k;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int odd = 0,even = 0;\r\n        scanf(\"%d %d %d\",&l,&r,&k);\r\n        if(l == r&&l!=1){\r\n            printf(\"YES\\n\");\r\n            continue;\r\n        }\r\n        if(l == r&&l == 1){\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        for(int i = l;i<=r;i++){\r\n            if(i%2 == 0){\r\n                even++;\r\n            }else{\r\n                odd++;\r\n            }\r\n        }\r\n        if(k>=odd){\r\n            printf(\"YES\\n\");\r\n        }else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,l,r,k;\r\n    scanf(\"%lld\",&t);\r\n    while(t--){\r\n        long long int odd = 0;\r\n        scanf(\"%lld %lld %lld\",&l,&r,&k);\r\n        if(l == r&&l!=1){\r\n            printf(\"YES\\n\");\r\n            continue;\r\n        }\r\n        if(l == r&&l == 1){\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        if(l%2 == 1&&r%2 == 1){\r\n            odd = (r-l+1)/2+1;\r\n        }else if(l%2 == 0&&r%2 == 0){\r\n            odd = (r-l+1)/2;\r\n        }else{\r\n            odd = (r-l+1)/2;\r\n        }\r\n        if(k>=odd){\r\n            printf(\"YES\\n\");\r\n        }else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8534583821805393, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cf0a569c78f5ad4dfd0e426923e139c5", "bug_code_uid": "c25d07eba4dcdbd539d9267c9b88d961", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "bca262d348026f30d61ac015a9c23070", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint array[10][10];\n\tint i,j;\n\tint n;int count=0;\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<3;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&array[i][j]);\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\tif((array[i][0]==1 && array[i][1]==1) || (array[i][1]==1 && array[i][2]==1) ||(array[i][1]==1 && array[i][1]==1) || (array[i][0]==1 && array[i][1]==1 && array[i][2]==1))\n\t{\n\t\tcount++;\n\t}\n\t}\n\t\tprintf(\"%d\",count);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint array[1000][3];\n\tint i,j;\n\tint n;int count=0;\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<3;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&array[i][j]);\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\tif((array[i][0]==1 && array[i][1]==1) || (array[i][1]==1 && array[i][2]==1) ||(array[i][0]==1 && array[i][2]==1) || (array[i][0]==1 && array[i][1]==1 && array[i][2]==1))\n\t{\n\t\tcount++;\n\t}\n\t\n\t}\n\t\tprintf(\"%d\",count);\nreturn 0;\n}"}
{"similarity_score": 0.916030534351145, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "15295bc40cd0c505cf6d6f95f6e735cc", "bug_code_uid": "6eff6f1fdf73e2120f00b18678b6beb5", "src_uid": "d4f4d6341f52cceb862faa89e85a42a3", "apr_id": "1bcd62e7cc09aede616f07768aac0ff5", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,a,b,c;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        if(n%2==0)//if n is even\r\n        {\r\n            printf(\"2 %d 1\\n\",n-3);//let c=1,then n-1=18-1=17,a=2,b=18-3=n-3\r\n        }\r\n        else\r\n        {\r\n            if(((n-1)/2)%2==0)\r\n            {\r\n\r\n            }\r\n            else\r\n            {\r\n                printf(\"%d %d 1\\n\",(n-1)/2+2,(n-1)/2-2);\r\n            }\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,a,b,c;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        if(n%2==0)//if n is even\r\n        {\r\n            printf(\"2 %d 1\\n\",n-3);//let c=1,then n-1=18-1=17,a=2,b=18-3=n-3\r\n        }\r\n        else\r\n        {\r\n            if(((n-1)/2)%2==0)\r\n            {\r\nprintf(\"%d %d 1\\n\",((n-1)/2+1),((n-1)/2-1));\r\n            }\r\n            else  if(((n-1)/2)%2!=0)\r\n            {\r\n                printf(\"%d %d 1\\n\",((n-1)/2+2),((n-1)/2-2));\r\n            }\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8771428571428571, "equal_cnt": 6, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "5b44240f0646eed1be00c6d447a06c46", "bug_code_uid": "58a6184ea3cf8a6ee8e122a052f5e498", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "3d043f3f04804c2b53d8dfbce85ee4c2", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    double i=0,j,k=0,n=0,sum=0;\n    double a[1000000],  p[1000000] ;\n    scanf(\"%lf\",&n);\n    while (n--)\n    {\n        scanf(\"%lf %lf\",&a[i],&p[i]);\n        i++;\n    }\n    n=0; j=0;\n    while (i--)\n    {\nsum=sum+a[n]*p[j];\nn++ ;\nif (p[n]<p[j])\n p[j]=p[n] ;\n else  continue ;\n    }\n    printf(\"%lf\",sum);\n    return 0 ;\n}\n    \n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i=0,j,n=0,sum=0;\n    int a[1000000],  p[1000000] ;\n    scanf(\"%d\",&n);\n    while (n--)\n    {\n        scanf(\"%d %d\",&a[i],&p[i]);\n        i++;\n    }\n    n=0; j=0;\n    while (i--)\n    {\nsum=sum+a[n]*p[j];\nn++ ;\nif (p[n]<p[j])\n p[j]=p[n] ;\n else  continue ;\n    }\n    printf(\"%d\",sum);\n    return 0 ;\n}\n\n\n"}
{"similarity_score": 0.9851063829787234, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9eb24ac2f54b4776c8d2cbb0c2914e7c", "bug_code_uid": "140e3cddac8a961bc43ba4b17df57576", "src_uid": "388450021f2f33177d905879485bb531", "apr_id": "644655457395c7f2f720cab29ed73b61", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint min(int x,int y)\n{\n    if(x<y)\n    return x;\n    return y;}\nint max(int x,int y)\n{\n    if(x>y)\n    return x;\n    return y;}\nint gcd(int x,int y)\n{\n    int a=max(x,y);\n    int b=min(x,y);\n    if(a%b==0)\n    return b;\n    return (b,a%b);}\n        int main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++)\n    {int a,b;\n    scanf(\"%d %d\",&a,&b);\n    if(gcd(a,b)==1)\n    printf(\"FINITE\\n\");\n    else printf(\"INFINITE\\n\");}\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n \nint min(int x,int y)\n{\n    if(x<y)\n    return x;\n    return y;}\nint max(int x,int y)\n{\n    if(x>y)\n    return x;\n    return y;}\nint gcd(int x,int y)\n{\n    int a=max(x,y);\n    int b=min(x,y);\n    if(a%b==0)\n    return b;\n    return gcd(b,a%b);}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++)\n    {int a,b;\n    scanf(\"%d %d\",&a,&b);\n    if(gcd(a,b)==1)\n    printf(\"FINITE\\n\");\n    else printf(\"INFINITE\\n\");}\n \n    return 0;\n}"}
{"similarity_score": 0.9946751863684771, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d86608eea63f973e796024a7de335966", "bug_code_uid": "e463987a80190b53836a8476a20c4933", "src_uid": "159b9c743d6d8792548645b9f7be2753", "apr_id": "c62105cc1843264fc6ce9cd5d7a44747", "difficulty": 800, "tags": ["brute force", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    long long int t,i,j,n,sum,max;\r\n    double avg;\r\n    scanf(\"%lld\", &t);\r\n    while(t--){\r\n        sum=0;\r\n        max=-99999;\r\n        scanf(\"%lld\", &n);\r\n        for(i=1;i<=n;i++){\r\n            scanf(\"%lld\", &j);\r\n            if(j>max)\r\n            max=j;\r\n            sum=sum+j;\r\n        }\r\n        sum=sum-max;\r\n        avg=(double)sum/(n-1);\r\n        avg=avg+(double)max;\r\n        printf(\"%f\\n\",avg);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n    long long int t,i,j,n,sum,max;\r\n    double avg;\r\n    scanf(\"%lld\", &t);\r\n    while(t--){\r\n        sum=0;\r\n        max=-9999999999;\r\n        scanf(\"%lld\", &n);\r\n        for(i=1;i<=n;i++){\r\n            scanf(\"%lld\", &j);\r\n            if(j>max)\r\n            max=j;\r\n            sum=sum+j;\r\n        }\r\n        sum=sum-max;\r\n        avg=(double)sum/(n-1);\r\n        avg=avg+(double)max;\r\n        printf(\"%f\\n\",avg);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.977818853974122, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "8b200026409a1d24f922b0b6bbeaaaaa", "bug_code_uid": "33a1fcabd5c5df33d09871e839b975c4", "src_uid": "44162a97e574594ac0e598368e8e4e14", "apr_id": "75d78adbcc3e733a6f2993c92c48ffe1", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main (void)\n{\n    int n, m, i, j;\n    int l, r, x, count;\n    scanf(\"%d %d\", &n, &m);\n    int p[n];\n    for (i=0; i<n; i++)\n        scanf(\"%d\", &p[i]);\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%d %d %d\", &l, &r, &x);\n        if(x<l || x>r)\n            printf(\"YES\\n\");\n        else\n        {\n            for(j=l-1, count=0; j<r; j++)\n                if(p[j]<p[x-1])\n                    count++;\n            if(count == x-l)\n                printf(\"YES\\n\");\n            else printf(\"NO\\n\");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main (void)\n{\n    int n, m, i, j;\n    int l, r, x, count;\n    scanf(\"%d %d\", &n, &m);\n    int p[n];\n    for (i=0; i<n; i++)\n        scanf(\"%d\", &p[i]);\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%d %d %d\", &l, &r, &x);\n        if(x<l || x>r)\n            printf(\"Yes\\n\");\n        else\n        {\n            for(j=l-1, count=0; j<r; j++)\n                if(p[j]<p[x-1])\n                    count++;\n            if(count == x-l)\n                printf(\"Yes\\n\");\n            else printf(\"No\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8996539792387543, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1d7999339b20cf5135fd036308c37fcd", "bug_code_uid": "b8155ff5f0a486653b0d403aa4aa3576", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "213716dd84f8e951f16bce3ab021d7fa", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint q,l,r,d,i;\n\tint min,j;\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&d);\n      if(d<l)\n      min=d;\n\telse\n\t{\n\tfor(j=r+1;j>=r+1 ;j++)\n\t{\n\t\tif(j%d==0)\n\t\t{\n\t\tmin=j;\n\t\tbreak;\n\t\t}\n\t}\n\t}\n\tprintf(\"%lld\\n\",min);\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint q,l,r,d,i;\n\tlong long int min,j;\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&d);\n      if(d<l)\n      min=d;\n\telse\n\t{\n/*\tfor(j=r+1;j>=r+1 ;j++)\n\t{\n\t\tif(j%d==0)\n\t\t{\n\t\tmin=j;\n\t\tbreak;\n\t\t}\n\t}*/\n\tif(r%d==0)\n\tmin=r+d;\n\telse\n\tmin=r+d-(r%d);\n\t}\n\tprintf(\"%lld\\n\",min);\n\t}\n}"}
{"similarity_score": 0.6148744670772146, "equal_cnt": 23, "replace_cnt": 14, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "a147078294a60e0e42b214e949f2b706", "bug_code_uid": "30d58d16ccf9a4b63817dccb4839dbab", "src_uid": "c9744e25f92bae784c3a4833c15d03f4", "apr_id": "f89131987d6f68cc87a31692d646e33c", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid DaoMang(int a[], int front, int end)\n{\n\tint sl = end - front + 1;\n\tint temp = 0;\n\tif (sl % 2 != 0)\n\t{\n\t\tfor (int i = front; i <= sl/2; i++)\n\t\t{\n\t\t\ttemp = a[i];\n\t\t\ta[i] = a[sl - i - 1];\n\t\t\ta[sl - i - 1] = temp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (int i = front; i < sl/2; i++)\n\t\t{\n\t\t\ttemp = a[i];\n\t\t\ta[i] = a[sl - i - 1];\n\t\t\ta[sl - i - 1] = temp;\n\t\t}\n\t}\n}\nbool KiemTraSapXep(int a[], int n)\n{\n\tfor (int i = 0; i < n - 1; i++)\n\t{\n\t\tif (a[i] > a[i + 1])\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint a[n];\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tbool kt = 1;\n\tint front = 0;\n\tint end;\n\tfor (int i = 0; i < n - 1; i++)\n\t{\n\t\tif (a[i] > a[i + 1])\n\t\t{\n\t\t\tkt = 0;\n\t\t\tfront = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (kt)\n\t{\n\t\tprintf(\"yes\\n1 1\\n\");\n\t}\n\telse\n\t{\n\t\tend = front;\n\t\twhile((end < n - 1) && (a[end] > a[end + 1]))\n\t\t{\n\t\t\tend++;\n\t\t}\n\t\tDaoMang(a, front, end);\n\t\tbool s = KiemTraSapXep(a, n);\n\t\tif (s)\n\t\t{\n\t\t\tprintf(\"yes\\n%d %d\", front + 1, end + 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"no\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nvoid DaoMang(int a[], int sl)\n{\n\tint temp = 0;\n\tfor (int i = 0; i < sl/2; i++)\n\t{\n\t\ttemp = a[i];\n\t\ta[i] = a[sl - 1 - i];\n\t\ta[sl - 1 - i] = temp;\n\t}\n}\nint KiemTraSapXep(int a[], int n)\n{\n\tfor (int i = 0; i < n - 1; i++)\n\t{\n\t\tif (a[i] > a[i + 1])\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint a[n];\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tint kt = 1;\n\tint front = 0;\n\tint end;\n\tfor (int i = 0; i < n - 1; i++)\n\t{\n\t\tif (a[i] > a[i + 1])\n\t\t{\n\t\t\tkt = 0;\n\t\t\tfront = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (kt == 1)\n\t{\n\t\tprintf(\"yes\\n1 1\\n\");\n\t}\n\telse\n\t{\n\t\tend = front;\n\t\twhile((end < (n - 1)) && (a[end] > a[end + 1]))\n\t\t{\n\t\t\tend++;\n\t\t}\n\t\tint j = 0;\n\t\tint sl = end - front + 1;\n\t\tint b[sl];\n\t\tfor (int i = front; i < sl + front; i++)\n\t\t{\n\t\t\tb[j] = a[i];\n\t\t\tj++;\n\t\t}\n\t\tDaoMang(b, sl);\n\t\tint k = 0;\n\t\tfor (int i = front; i < sl + front; i++)\n\t\t{\n\t\t\ta[i] = b[k];\n\t\t\tk++;\n\t\t}\n\t\tint s = KiemTraSapXep(a, n);\n\t\tif (s == 1)\n\t\t{\n\t\t\tprintf(\"yes\\n%d %d\", front + 1, end + 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"no\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7130434782608696, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "a4b40b374d6dd394adb0bd3bd0ed3691", "bug_code_uid": "f977d2c7d03b91952b66bef36771417d", "src_uid": "7767e47571c7ea82ba4fb6a0bd0fbdc5", "apr_id": "1a955db331d1cc89502abc247775d1c6", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b;\r\n        scanf(\"%d%d\",&a,&b);\r\n        for(int i=1;i<=a;i++)\r\n        {\r\n            printf(\"0\");\r\n        }\r\n        for(int j=a+1;j<(a+b);j++)\r\n        {\r\n            printf(\"1\");\r\n        }\r\n        printf(\"1\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b;\r\n        scanf(\"%d%d\",&a,&b);\r\n        while(a>0&&b>0)\r\n        {\r\n            printf(\"01\");\r\n            a--;\r\n            b--;\r\n        }\r\n        while(a>0)\r\n        {\r\n            printf(\"0\");\r\n            a--;\r\n        }\r\n        while(b>0)\r\n        {\r\n            printf(\"1\");\r\n            b--;\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.8074303405572756, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "54e1f1cba58df5b1cf0b5c04aae8a91a", "bug_code_uid": "44ed0e66dcb5eddee3dde0a428965986", "src_uid": "c2a506d58a80a0fb6a16785605b075ca", "apr_id": "8b46c8e0bfc83de96cb62d78140b2e82", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    int xx, a, i, s, d, f, g, h, o, n = 0, m = 0, z = 1, x = 1, sum = 0;\r\n    scanf(\"%d\", &xx);\r\n    while (xx--)\r\n    {\r\n        sum = n = m = i = 0;\r\n        x = z = 1;\r\n        // scanf(\"%d%d%d%d%d%d\", &a, &s, &d, &f, &g, &h);\r\n        // scanf(\"%d%d%d%d%d\", &a, &s, &d, &f, &g);\r\n        scanf(\"%d%d%d%d\", &a, &s, &d, &f);\r\n        // scanf(\"%d%d%d\", &a, &s, &d);\r\n        // scanf(\"%d%d\", &a, &s);\r\n        // scanf(\"%d\", &a);\r\n        if(a*f==s*d)\r\n        printf(\"0\\n\");\r\n        else if(((a*f)%(s*d))==0||((s*d)%(a*f))==0)\r\n        printf(\"1\\n\");\r\n        else\r\n        printf(\"2\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    long long int xx, a, i, s, d, f, g, h, o, n = 0, m = 0, z = 1, x = 1, sum = 0;\r\n    scanf(\"%lld\", &xx);\r\n    while (xx--)\r\n    {\r\n        sum = n = m = i = 0;\r\n        x = z = 1;\r\n        // scanf(\"%d%d%d%d%d%d\", &a, &s, &d, &f, &g, &h);\r\n        // scanf(\"%d%d%d%d%d\", &a, &s, &d, &f, &g);\r\n        scanf(\"%lld%lld%lld%lld\", &a, &s, &d, &f);\r\n        // scanf(\"%d%d%d\", &a, &s, &d);\r\n        // scanf(\"%d%d\", &a, &s);\r\n        // scanf(\"%d\", &a);\r\n        n = a * f;\r\n        m = s * d;\r\n        if (a == 0 && d == 0)\r\n            printf(\"0\\n\");\r\n        else if (a == 0 || d == 0)\r\n            printf(\"1\\n\");\r\n       else if (n == m)\r\n            printf(\"0\\n\");\r\n        else if (n % m == 0 || m % n == 0)\r\n            printf(\"1\\n\");\r\n        else\r\n            printf(\"2\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9647058823529412, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6ef2bc4a59f519d6931dd3617aa737b1", "bug_code_uid": "cd269f8f6a9e1cb0ffe7ddefa0a36dd0", "src_uid": "c764b9f87cb5e5872eb157c3d2b7f3c5", "apr_id": "f49830cbaeb9ec545ecddc6e47459f70", "difficulty": 1200, "tags": ["dp", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define Long long long int\nint cmpfunc (const void * a, const void * b) {\n    return ( *(int*)a - *(int*)b );\n}\n\nint main() {\n    long int n, i, j,l, r, m;int type;\n    scanf(\"%ld\",&n);\n    Long un[n],deux[n+1];\n\n    for(i=1;i<n+1;i++)\n    {scanf(\"%I64d\",&un[i]);\n        deux[i]=un[i];}\n    deux[0]=0;\n    un[0]=0;\n    qsort(deux, n+1, sizeof(Long), cmpfunc);\n    for(i=0;i<n+1;i++)\n        printf(\"%d \",deux[i]);\n\n    for(i=1;i<n+1;i++)\n    {\n        deux[i]=deux[i]+deux[i-1];\n        un[i]=un[i]+un[i-1];\n    }\n\n\n\n\n    scanf(\"%ld\",&m);\n    for(i=0; i<m; i++){\n        scanf(\"%d%ld%ld\",&type,&l,&r);\n        if(type==1)\n            printf(\"%I64d\\n\",un[r]-un[l-1]);\n        else\n            printf(\"%I64d\\n\",deux[r]-deux[l-1]);\n\n\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define Long long long int\nint cmpfunc (const void * a, const void * b) {\n    return ( *(int*)a - *(int*)b );\n}\n\nint main() {\n    long int n, i, j,l, r, m;int type;\n    scanf(\"%ld\",&n);\n    Long un[n],deux[n+1];\n\n    for(i=1;i<n+1;i++)\n    {scanf(\"%I64d\",&un[i]);\n        deux[i]=un[i];}\n    deux[0]=0;\n    un[0]=0;\n    qsort(deux, n+1, sizeof(Long), cmpfunc);\n\n    for(i=1;i<n+1;i++)\n    {\n        deux[i]=deux[i]+deux[i-1];\n        un[i]=un[i]+un[i-1];\n    }\n\n\n\n\n    scanf(\"%ld\",&m);\n    for(i=0; i<m; i++){\n        scanf(\"%d%ld%ld\",&type,&l,&r);\n        if(type==1)\n            printf(\"%I64d\\n\",un[r]-un[l-1]);\n        else\n            printf(\"%I64d\\n\",deux[r]-deux[l-1]);\n\n\n    }\n    return 0;\n}"}
{"similarity_score": 0.49147286821705427, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "d70946da889a0fa237f55f9a2beaadc2", "bug_code_uid": "836c951cd0efdadace40552af5d46b48", "src_uid": "5278cb48aca6fc84e2df393cd8723ecb", "apr_id": "998c9fc32beb3ebf36d5041c059ee4f2", "difficulty": 900, "tags": ["brute force", "dp", "greedy", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tchar arr[n];\r\n\t\tscanf(\"%s\", arr);\r\n\t\tint rs = 0;\r\n\t\tif (n == 1)\r\n\t\t{\r\n\t\t\tprintf(\"%d\\n\", rs);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (int i = 0; i <= n - 2; i++)\r\n\t\t{\r\n\t\t\t////\u5934\u4e3a0\u7684\u65f6\u5019\u4e0d\u7528\u6539,\u5e94\u4e3a\u8981\u4e0d\u9012\u51cf\r\n\t\t\t//if (i == 0)\r\n\t\t\t//{\r\n\t\t\t//\tif (arr[i] == '1')\r\n\t\t\t//\t{\r\n\t\t\t//\t\trs++;\r\n\t\t\t//\t\tcontinue;\r\n\t\t\t//\t}\r\n\t\t\t//\telse\r\n\t\t\t//\t{\r\n\t\t\t//\t\tcontinue;\r\n\t\t\t//\t}\r\n\r\n\t\t\t//}\r\n\t\t\tchar tmp1[2] = { arr[i],'\\0' };\r\n\t\t\tchar tmp2[2] = { arr[i + 1], '0' };\r\n\r\n\t\t\tif(strcmp(tmp1,tmp2)>0)\r\n\t\t\t{\r\n\t\t\t\trs++;\r\n\t\t\t\tfor (int j = i; j<=n-1; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (arr[j] == '1')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tarr[j] = '0';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tarr[j] = '1';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", rs);\r\n\r\n\t}\r\n\r\n\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tchar arr[n];\r\n\t\tscanf(\"%s\", arr);\r\n\t\tint cur = 0;\r\n\t\tif (n == 1)\r\n\t\t{\r\n\t\t\tprintf(\"%d\\n\", cur);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (int i = 0; i <n-1; i++)\r\n\t\t{\r\n\t\t\tint tmp1 = arr[i] - '0';\r\n\t\t\tint tmp2 = arr[i + 1] - '0';\r\n\t\t\tif ((tmp1 + cur) % 2 > (tmp2 + cur) % 2)\r\n\t\t\t{\r\n\t\t\t\tcur++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", cur);\r\n\r\n\t}\r\n\r\n\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9398601398601398, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5d48ca1c22266228b1713697bd764039", "bug_code_uid": "b267204c3ec79ba8981b36d52e9ae727", "src_uid": "84372885f2263004b74ae753a2f358ac", "apr_id": "53a73302eaa64afff133005e9261d762", "difficulty": 2000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<math.h>\n#include<stdio.h>\nint main()\n{\n    double a,b,c,d,x1,x2;\n    scanf(\"%lf%lf%lf\",&a,&b,&c);\n    if(a==0 && b==0 && c==0)\n    {printf(\"-1\\n\");return 0;}\n    else if(a==0 && b==0 && c!=0)\n    {printf(\"0\\n\");return 0;}\n    else if(a==0 && b!=0)\n    {printf(\"1\\n\");d=(-c)/b;\n     printf(\"%.6lf\\n\",d);return 0;}\n    else\n    {\n        d=(b*b-4*a*c);\n        if(d==0)\n        {printf(\"1\\n%.6lf\\n\",((-b)/(2*a)));return 0;}\n        else if(d<0)\n        {printf(\"0\\n\");return 0;}\n        else\n        {\n            d=sqrt(d);\n            x1=((-b)-d)/(2*a);\n            x2=((-b)+d)/(2*a);\n            printf(\"2\\n%.6lf\\n%.6lf\\n\",x1,x2);\n        }\n    }\n    return 0;\n}", "fixed": "#include<math.h>\n#include<stdio.h>\nint main()\n{\n    double a,b,c,d,x1,x2;\n    scanf(\"%lf%lf%lf\",&a,&b,&c);\n    if(a==0 && b==0 && c==0)\n    {printf(\"-1\\n\");return 0;}\n    else if(a==0 && b==0 && c!=0)\n    {printf(\"0\\n\");return 0;}\n    else if(a==0 && b!=0)\n    {printf(\"1\\n\");d=(-c)/b;\n     printf(\"%.6lf\\n\",d);return 0;}\n    else\n    {\n        d=(b*b-4*a*c);\n        if(d==0)\n        {printf(\"1\\n%.6lf\\n\",((-b)/(2*a)));return 0;}\n        else if(d<0)\n        {printf(\"0\\n\");return 0;}\n        else\n        {\n            d=sqrt(d);\n            x1=((-b)-d)/(2*a);\n            x2=((-b)+d)/(2*a);\n            if(x1<x2)\n            printf(\"2\\n%.6lf\\n%.6lf\\n\",x1,x2);\n            else\n            printf(\"2\\n%.6lf\\n%.6lf\\n\",x2,x1);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9765013054830287, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f0bdb4660e3fd9cca5685b24c57b9a9c", "bug_code_uid": "33fce189fbc6e87dbe13cf257fe05fdc", "src_uid": "5bffe38e3ac9511a30ee02b4ec5cb1d5", "apr_id": "d84d57c31c2cee9fe66bc103d15abfdd", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint giko();\r\nint main()\r\n{\r\n\tint t,i,a,b,c;\r\n\tint Arr[50000];\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\r\n\t\tint z=a+c-(2*b);\r\n\t\tArr[i]=giko(z);\r\n\t}\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tprintf(\"%d\",Arr[i]);\r\n\t\tif(i==t-1)\r\n\t\t{\r\n\t\t    return 0;\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\nint giko(int z)\r\n{\r\n\tif(z%3==0)\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint giko();\r\nint main()\r\n{\r\n\tint t,i,a,b,c;\r\n\tscanf(\"%d\",&t);\r\n\tint Arr[50000];\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\r\n\t\tint z=a+c-(2*b);\r\n\t\tArr[i]=giko(z);\r\n\t}\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tprintf(\"%d\",Arr[i]);\r\n\t\tif(i==t-1)\r\n\t\t{\r\n\t\t    return 0;\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\nint giko(int z)\r\n{\r\n\tif(z%3==0)\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n}"}
{"similarity_score": 0.30714285714285716, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "6066b98f1b06a360bb19dfada70a96cf", "bug_code_uid": "fc81846a2eccc9be8d6e29ef6a2f0553", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "bf9290b217fd935ac5a6b90300db1791", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n  long long int k,a,b,i,c=0;\n   scanf(\"%lld%lld%lld\",&k,&a,&b);\n   for(i=a;i<=b;i++)\n   {\n   \tif(i%k==0)\n   \t{\n   \t\tc++;\n\t   }\n   }\n   printf(\"%lld\",c);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n  long long int k,a,b;\n  long long int c=0;\n   scanf(\"%lld%lld%lld\",&k,&a,&b);\n  if(a<0&&b>0)\n  {\n  \tc=b/k-a/k+1;\n  }\n  else if(a<0&&b<0)\n  {\n  \tif(b%k==0)\n  \tc=-a/k+b/k+1;\n  \telse if(b%k!=0)\n  \tc=-a/k+b/k;\n  }\n  else if(a>0&&b>0&&k<=b)\n  {\n  \tif(b%k==0&&a%k==0)\n  \tc=-a/k+b/k+1;\n  \telse if(b%k==0&&a%k!=0)\n  \tc=-a/k+b/k;\n  \telse if(b%k!=0&&a%k!=0)\n  \tc=-a/k+b/k;\n  \telse if(b%k!=0&&a%k==0)\n  \tc=-a/k+b/k+1;\n  }\n  else if(a>0&&b>0&&k>b)\n  {\n  \tc=0;\n  }\n  else if(a==0&&b>0)\n  {\n  \tc=b/k+1;\n  }\n  else if(a<0&&b==0)\n  {\n  \tc=-a/k+1;\n  }\n  else if(a==0&&b==0)\n  {\n  \tc=1;\n  }\n  printf(\"%lld\",c);\n  \n    return 0;\n}"}
{"similarity_score": 0.2367758186397985, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a41c5097de4b6be5b0f92e1c0b6149d5", "bug_code_uid": "469d3a38bda282c22de552528bab7d7b", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "7789f093b0e521710c5efcf6f110e9f6", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint abs(int a) { return a > 0 ? a : -a; }\nint main()\n{\n#ifdef LOCAL\n\tfreopen(\"test.txt\", \"r\", stdin);\n#endif\n    int n, x;\n    scanf(\"%d%d\", &n, &x);\n    int d[x+1], tmp;\n    for(int i = 0; i <= x; i++)\n        d[i] = 0;\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &tmp);\n        if(tmp > 0)\n            d[tmp]++;\n        else if(tmp < 0)\n            d[abs(tmp)]--;\n    }\n    int ans = 0;\n    for(int i = 0; i <= x; i++)\n        ans += abs(d[i]);\n    printf(\"%d\\n\", ans);\n}", "fixed": "#include <stdio.h>\nint abs(int a) { return a > 0 ? a : -a; }\nint main()\n{\n    int n, x;\n    scanf(\"%d%d\", &n, &x);\n    int sum = 0, tmp;\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &tmp);\n        sum += tmp;\n    }\n    printf(\"%d\\n\", abs(sum)/x + ((abs(sum)%x > 0) ? 1 : 0));\n}"}
{"similarity_score": 0.31317494600431967, "equal_cnt": 20, "replace_cnt": 15, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "3fbc48984f1077b7f30b8fc3bc614bd2", "bug_code_uid": "d778da1b0ce3daf580d202970f932631", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "3d3293e2ee7abae9eaf7f0f974de28c8", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint a[100000];\nint main()\n{\n\tint n,row,col,m,l,k,r,t;\n\tscanf(\"%d\",&n);\n\tchar ch[n][32];\n\tfor(row=0;row<n;row++){\n\t\tscanf(\"%s\",ch[row]);\n\t\t\tfor(r=0;r<row;r++){\n\t\t\t\tl=strlen(ch[row]);\n\t\t\t\tk=strlen(ch[r]);\n\t\t\t\tif(k!=l)\n\t\t\t\t\tcontinue;\n\t\t\t\tm=strcmp(ch[row],ch[r]);\n\t\t\t\tif(m==0)\n\t\t\t\t\ta[r]++;\n\t\t\t\telse\n\t\t\t\t\tcontinue;\n\t\t\t\tif(m==0 && a[r]>0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[r]!=0)\n\t\t\t\tprintf(\"%s%d\\n\",ch[row],a[r]);\n\t\t\telse\n\t\t\t\tprintf(\"OK\\n\");\n\t}\t\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n \n \nchar dizi[100007][40] ;\nchar dizit[100007][40] ;\nint dizim[100007] ;\n \nint main(){\n\t\n\tint ti=0,j,n,i=0 ;\n\tscanf(\"%d\",&n) ;\n\t;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%s\",dizi[i]);\n\t\tfor(j=0;j<ti;j++){\n\t\t\tif(dizit[j][0]!=dizi[i][0])continue;\n\t\t\tif(!strcmp(dizit[j],dizi[i])){\n\t\t\t\tdizim[j]++;\n\t\t\t\tprintf(\"%s%d\\n\",dizi[i],dizim[j]);\n\t\t\t\tgoto A;\n\t\t\t}\n\t\t}\n\t\tstrcpy(dizit[ti++],dizi[i]) ;\n\t\tprintf(\"OK\\n\");\n\t\tA:;\n\t}\n}"}
{"similarity_score": 0.35498839907192575, "equal_cnt": 12, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "dd508a21e933dc452d4616c6d4903794", "bug_code_uid": "8d467326f8c1eb01edfd41e79401607e", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "c30c432edd323fefe30db78b975eb83b", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,l,k,m,i,j,count=0;\n\n    scanf(\"%d %d\",&n,&l);\n    scanf(\"%d %d\",&k,&m);\n    long long int arr1[n],arr2[l];\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&arr1[i]);\n    }\n\nfor(j=0;j<l;j++)\n{\n    scanf(\"%I64d\",&arr2[j]);\n}\n\nfor(i=0;i<n;i++)\n{\n    for(j=0;j<l;j++)\n    {\n        if(arr1[i]<arr2[j])\n        {\n            count++;\n        }\n    }\n}\n\n\nif(count>=k*m)\n{\n    printf(\"YES\");\n}\n\nelse\n{\n    printf(\"NO\");\n}\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,p,k,m,i;\n\n    scanf(\"%d%d\",&n,&p);\n    scanf(\"%d%d\",&k,&m);\n\n    int num1[n],num2[p];\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num1[i]);\n    }\n\n    for(i=0;i<p;i++)\n    {\n        scanf(\"%d\",&num2[i]);\n    }\n\n\n    if(num1[k-1]<num2[p-1-(m-1)])\n    {\n        printf(\"YES\");\n\n    }\n\n    else\n    {\n        printf(\"NO\");\n    }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.6888888888888889, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "34dd844b917e985697701f2c7c481466", "bug_code_uid": "f366923ef440b6674377871eccbda147", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "735c277f175ac1632f8426ec1b43e95e", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100];\n    int l,n;\n    scanf(\"%d\",&n);\n    while(n--)\n    \n        scanf(\"%s\",&s);\n    \n    l=strlen(s);\n    if(l>10)\n    \n        printf(\"%c\",s[0]);\n        printf(\"%d\",l-2);\n        printf(\"%c\\n\",s[l-1]);\n    \n    else\n    \n        printf(\"%s\\n\",s);\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,l;\n    char s[100];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%s\",&s);\n        l=strlen(s);\n        if(l<=10)\n        printf(\"%s\\n\",s);\n        else\n        printf(\"%c%d%c\\n\",s[0],l-2,s[l-1]);\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9849029475197699, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9cf01b017164412bc3ada81e0e11e87d", "bug_code_uid": "37eab591a9aaa57c156e4c40f6d41826", "src_uid": "ca5c44093b1ab7c01970d83b5f49d0c6", "apr_id": "da3b44fb4779c2c9595752da829cad23", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n;\n    int x1,y1,x2,y2;\n    scanf(\"%d\",&n);\n    int i,j;\n    int a[100][100];\n    for(i=0;i<100;i++)\n    {\n        for(j=100-1;j>=0;j--)\n        {\n            a[i][j]=0;\n        }\n    }\nint x,y;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x1);\n        scanf(\"%d\",&y1);\n        scanf(\"%d\",&x2);\n        scanf(\"%d\",&y2);\n        for(x=100-y1;x>=100-y2;x--)\n        {\n            for(y=x1-1;y<y2-1;y++)\n            {\n                a[x][y]++;\n            }\n        }\n\n    }\n\n    int sum=0;\n    for(i=0;i<100;i++)\n    {\n        for(j=100-1;j>=0;j--)\n        {\n            sum=sum+a[i][j];\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n    int x1,y1,x2,y2;\n    scanf(\"%d\",&n);\n    int i,j;\n    int a[100][100];\n    for(i=0;i<100;i++)\n    {\n        for(j=100-1;j>=0;j--)\n        {\n            a[i][j]=0;\n        }\n    }\nint x,y;\nint u,v;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x1);\n        scanf(\"%d\",&y1);\n        scanf(\"%d\",&x2);\n        scanf(\"%d\",&y2);\n        for(x=100-y1;x>=100-y2;x--)\n        {\n            for(y=x1-1;y<=x2-1;y++)\n            {\n                a[x][y]++;\n            }\n        }\n        \n\n    }\n\n    int sum=0;\n    for(i=0;i<100;i++)\n    {\n        for(j=100-1;j>=0;j--)\n        {\n            sum=sum+a[i][j];\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n\n}\n"}
{"similarity_score": 0.9814814814814815, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b09a4c0f2c22f629fcfa386d5d61298b", "bug_code_uid": "73f2829fb0de6695357bea36f0f08482", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "5ad179f6bf91a52cabb65d0cd4d1c954", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tint t,a[4],j=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d %d %d %d\",&a[0],&a[1],&a[2],&a[3]);\r\n\t\tif(a[0]<a[1]){\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif(a[0]<a[2]){\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif(a[0]<a[3]){\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",j);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tint t,a[4],j=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d %d %d %d\",&a[0],&a[1],&a[2],&a[3]);\r\n\t\tif(a[0]<a[1]){\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif(a[0]<a[2]){\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif(a[0]<a[3]){\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",j);\r\n\t\tj=0;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9988974641675854, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4ae1e80f3fb89261e9437e89b9c290cd", "bug_code_uid": "c291d13c427798787188c13e6505c590", "src_uid": "1b336555c94d5d5198abe5426ff6fa7a", "apr_id": "f92734ac2917132a95bb6a8566c35a2d", "difficulty": 1500, "tags": ["combinatorics", "implementation", "bitmasks", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<ctype.h>\n#define MOD 1000000007\nint pre_cmp[2500][2];\nchar input[250000];\nint ret(char target){\nif(islower(target))\n\ttarget=target-('a')+36;\nelse if(isupper(target))\n\ttarget=target-('A')+10;\nelse if(target=='_')\n\ttarget=63;\nelse if(target=='-')\n\ttarget=62;\nelse if(isdigit(target))\n\ttarget=target-'0';\nint a,b; int cnt=0;\nfor(a=0;a<=63;a++){\n\tfor(b=0;b<=63;b++){\n\t\tif((a&b)==target)\n\t\t\tcnt++;\n\t}\n}\n\treturn cnt;\n}\nint main(){\n\tint a,b,c,d,e,f,g;\n\tgets(input);\n\tint i; int len=strlen(input); long long int res=1;\n\n\tfor(i='1';i<='9';i++){\n\t\tpre_cmp[i][0]=ret(i);\n\t}\n\tfor(i='a';i<='z';i++){\n\t\tpre_cmp[i][0]=ret(i);\n\t}\n\tfor(i='A';i<='Z';i++){\n\t\tpre_cmp[i][0]=ret(i);\n\t}\n\tpre_cmp['_'][0]=ret('_');\n\tpre_cmp['-'][0]=ret('-');\n\tfor(i=0;i<len;i++){\n\t\tif(input[i]=='_')\n\t\t\tcontinue;\n\t\tres=(res*(pre_cmp[input[i]][0]))%MOD;\n\t}\n\tprintf(\"%lld\",res);\n}\n\n\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<ctype.h>\n#define MOD 1000000007\nint pre_cmp[2500][2];\nchar input[250000];\nint ret(char target){\nif(islower(target))\n\ttarget=target-('a')+36;\nelse if(isupper(target))\n\ttarget=target-('A')+10;\nelse if(target=='_')\n\ttarget=63;\nelse if(target=='-')\n\ttarget=62;\nelse if(isdigit(target))\n\ttarget=target-'0';\nint a,b; int cnt=0;\nfor(a=0;a<=63;a++){\n\tfor(b=0;b<=63;b++){\n\t\tif((a&b)==target)\n\t\t\tcnt++;\n\t}\n}\n\treturn cnt;\n}\nint main(){\n\tint a,b,c,d,e,f,g;\n\tgets(input);\n\tint i; int len=strlen(input); long long int res=1;\n\n\tfor(i='0';i<='9';i++){\n\t\tpre_cmp[i][0]=ret(i);\n\t}\n\tfor(i='a';i<='z';i++){\n\t\tpre_cmp[i][0]=ret(i);\n\t}\n\tfor(i='A';i<='Z';i++){\n\t\tpre_cmp[i][0]=ret(i);\n\t}\n\tpre_cmp['_'][0]=ret('_');\n\tpre_cmp['-'][0]=ret('-');\n\tfor(i=0;i<len;i++){\n\t\tif(input[i]=='_')\n\t\t\tcontinue;\n\t\tres=(res*(pre_cmp[input[i]][0]))%MOD;\n\t}\n\tprintf(\"%lld\",res);\n}\n\n\t\n"}
{"similarity_score": 0.3269709543568465, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "b3361a0dde182bc564ac8b4689c848ee", "bug_code_uid": "2ead70b84575ed51219292cf5b997008", "src_uid": "816907d873bce3573ce1e5ae3f494768", "apr_id": "db0eb5b125bd5b01f274cbaa9463972d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,a,b,c,d,e,j=0;\n    scanf(\"%d\",&t);\n    char g[t][1001];\n    int count[t];\n    for(int i=0;i<=t;++i){\n        count[i]=0;\n        j=0;\n        do{\n            g[i][j]=getchar();j++;++count[i];\n        }while(g[i][j-1]!='\\n');\n        g[i][j-1]='\\0';\n    }\n    for(int k=0;k<=t;++k){\n            a=count[k]-2;b=a-1;c=b-1;d=c-1;e=d-1;\n        if(g[k][a]=='o',g[k][b]=='p'){\n            printf(\"FILIPINO\\n\");\n        }\n        else if(g[k][a]=='u',g[k][b]=='s',g[k][c]=='e',g[k][d]=='d'){\n            printf(\"JAPANESE\\n\");\n        }\n        else if(g[k][a]=='u',g[k][b]=='s',g[k][c]=='a',g[k][d]=='m'){\n            printf(\"JAPANESE\\n\");\n        }\n        else if(g[k][a]=='a',g[k][b]=='d',g[k][c]=='i',g[k][d]=='n',g[k][e]=='m'){\n            printf(\"KOREAN\\n\");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,c;\n    scanf(\"%d\",&t);\n    int a[t];char b[t][1001];\n    for(int i=0;i<t;++i){\n        scanf(\"%s\",b[i]);\n        a[i]=strlen(b[i]);\n    }\n    for(int i=0;i<t;++i){\n            c=a[i]-1;\n        if(b[i][c]=='o'){printf(\"FILIPINO\\n\");}\n        else if(b[i][c]=='u'){printf(\"JAPANESE\\n\");}\n        else{printf(\"KOREAN\\n\");}\n    }\n}"}
{"similarity_score": 0.9777777777777777, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7f5be9b1a0977fa3e927d618bc5f7905", "bug_code_uid": "2bafda3eb629f84cf40bcc2049cc6b54", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "722f625b860819466ffffb9f8acf6202", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    long long p, a, b, c;\r\n    scanf(\"%d\", &t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        scanf(\"%lld\", &p);\r\n        scanf(\"%lld\", &a);\r\n        scanf(\"%lld\", &b);\r\n        scanf(\"%lld\", &c);\r\n        long long a1 = a - (p%a);\r\n        long long b1 = b - (p%b);\r\n        long long c1 = c - (p%c);\r\n        long long min = a1;\r\n        if(b1 < min)\r\n            min = b1;\r\n        if(c1 < min)\r\n            min = c1;\r\n        if(p==a1 || p==b1 || p==c1)\r\n            min = 0;\r\n        printf(\"%lld\\n\", min);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    long long p, a, b, c;\r\n    scanf(\"%d\", &t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        scanf(\"%lld\", &p);\r\n        scanf(\"%lld\", &a);\r\n        scanf(\"%lld\", &b);\r\n        scanf(\"%lld\", &c);\r\n        long long a1 = a - (p%a);\r\n        long long b1 = b - (p%b);\r\n        long long c1 = c - (p%c);\r\n        long long min = a1;\r\n        if(b1 < min)\r\n            min = b1;\r\n        if(c1 < min)\r\n            min = c1;\r\n        if(p%a==0 || p%b==0 || p%c==0)\r\n            min = 0;\r\n        printf(\"%lld\\n\", min);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.541037426132633, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "dfe42ddeb593df0fe20e735cdc2c08c8", "bug_code_uid": "397fe87d59bcdb75761c98d440be0200", "src_uid": "60776cefd6c1a2f3c16b3378ebc31a9a", "apr_id": "55aee3dc9d8f24dea6979065e0479af5", "difficulty": 1500, "tags": ["two pointers", "binary search", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*\n * COMP.c\n *\n *  Created on: 20/lug/2016\n *      Author: andrea\n */\n#include <stdio.h>\n\nint main(void){\n\tint len, i, j = 0, leni, minleni, k;\n\tint pok[52], cs[52];\n\tint flats[100000];\n\tchar c;\n\tscanf(\"%d\", &len);\n\tgetchar();\n\tfor(i = 0; i < 52; i++){pok[i] = 0;}\n\tfor(i = 0; i < len; i++){\n\t\tscanf(\"%c\", &c);\n\t\tif(c >= 65 && c <= 90) c -= 65;\n\t\telse if(c >= 97 && c <= 122) c -= 71;\n\t\tif(pok[(int)c] == 0) j++;\n\t\tflats[i] = c;\n\t\tpok[(int)c] = 1;\n\t}\n\tint moar = 0;\n\tminleni = len;\n\tfor(i = 0; i <= len-j; i++){\n\t\tleni = j;\n\t\tfor(k = 0; k < 52; k++){cs[k] = 0;}\n\t\tfor(k = 0; k < leni; k++){cs[flats[i+k]] = 1;}\n\t\twhile(1){\n\t\t\tmoar = 0;\n\t\t\tfor(k = 0; k < 52; k++)if(cs[k] != pok[k]){moar = 1; break;}\n\t\t\tif(moar){\n\t\t\t\tif(leni+i < len){\n\t\t\t\t\tcs[flats[i+leni]] = 1;\n\t\t\t\t\tleni++;\n\t\t\t\t}else{leni = len; break;}\n\t\t\t}else break;\n\t\t}\n\t\tminleni = minleni > leni ? leni : minleni;\n\t}\n\tprintf(\"%d\", minleni);\n\n\treturn 0;\n}\n", "fixed": "/*\n * COMP.c\n *\n *  Created on: 20/lug/2016\n *      Author: andrea\n */\n#include <stdio.h>\n\nint main(void){\n\tint len, i, lasti = 0, minlen = 0;\n\tint cs[52], flats[100000];\n\tchar c;\n\tscanf(\"%d\", &len);\n\tgetchar();\n\tfor(i = 0; i < 52; i++){cs[i] = 0;}\n\tfor(i = 0; i < len; i++){\n\t\tscanf(\"%c\", &c);\n\t\tif(c >= 65 && c <= 90) c -= 65;\n\t\telse if(c >= 97 && c <= 122) c -= 71;\n\t\tif(cs[(int)c] <= 0) minlen = i-lasti+1;\n\t\tcs[(int)c]++;\n\t\tflats[i] = (int)c;\n\t\twhile(cs[flats[lasti]] > 1){\n\t\t\tcs[flats[lasti]]--;\n\t\t\tlasti++;\n\t\t}\n\t\tminlen = minlen > i-lasti+1 ? i-lasti+1 : minlen;\n\t}\n\n\tprintf(\"%d\", minlen);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9908088235294118, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2f2dfebbff096ba10b6f9eb59a9b9b83", "bug_code_uid": "e1dd95e8805e340385fa3c0d2b27e8cf", "src_uid": "48f3ff32a11770f3b168d6e15c0df813", "apr_id": "5e941a2c975d5dd714e133aacbe98cad", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,m,i;\n    scanf(\"%d %d\",&n,&m);\n    int arr[n],sum=0;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    while(m>0)\n    {\n        int t,a,b;\n        scanf(\"%d\",&t);\n        if(t==1)\n        {\n            scanf(\"%d %d\",&a,&b);\n            arr[a-1]=b;\n        }\n        else if(t==2)\n        {\n            scanf(\"%d\",&a);\n            sum+=a;\n        }\n        else if(t==3)\n        {\n            scanf(\"%d\",&a);\n            printf(\"%d\\n\",arr[a-1]+sum);\n        }\n        m--;\n    }\n    return 0;\n}\n    \n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,m,i;\n    scanf(\"%d %d\",&n,&m);\n    int arr[n],sum=0;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    while(m>0)\n    {\n        int t,a,b;\n        scanf(\"%d\",&t);\n        if(t==1)\n        {\n            scanf(\"%d %d\",&a,&b);\n            arr[a-1]=b-sum;\n        }\n        else if(t==2)\n        {\n            scanf(\"%d\",&a);\n            sum+=a;\n        }\n        else if(t==3)\n        {\n            scanf(\"%d\",&a);\n            printf(\"%d\\n\",arr[a-1]+sum);\n        }\n        m--;\n    }\n    return 0;\n}"}
{"similarity_score": 0.9851551956815114, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "75ab8c0ac44606f1c4929b40db354a50", "bug_code_uid": "44976c8f830d732b41f9052d68fe519c", "src_uid": "aaf91874cf5aa0fa302ffed2ccecdc76", "apr_id": "060b29d565194d4c1179162e147a86d3", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n     int t;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          int n,i,j,c=0;\n          scanf(\"%d\",&n);\n          int a[2*n];\n          //int b[2*n];\n          for(int i=0;i<2*n;i++)\n          {\n               scanf(\"%d\",&a[i]);\n          }\n          //b[0]=a[0];\n          printf(\"%d \",a[0]);\n          for(i=1;i<2*n;i++)\n          {\n               for(j=i-1;j>=0;j--)\n               {\n                    if(a[i]==a[j])\n                    c++;\n               }\n               if(c==0)\n               printf(\"%d \",a[i]);\n              // b[++k]=a[i];\n          }\n          //for(int i=0;i<n;i++)\n         // printf(\"%d \",b[i]);\n          printf(\"\\n\");\n     }\n     return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n     int t;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          int n,i,j,c=0;\n          scanf(\"%d\",&n);\n          int a[2*n];\n          //int b[2*n];\n          for(int i=0;i<2*n;i++)\n          {\n               scanf(\"%d\",&a[i]);\n          }\n          //b[0]=a[0];\n          printf(\"%d \",a[0]);\n          for(i=1;i<2*n;i++)\n          {\n               c=0;\n               for(j=i-1;j>=0;j--)\n               {\n                    if(a[i]==a[j])\n                    c++;\n               }\n               if(c==0)\n               printf(\"%d \",a[i]);\n              // b[++k]=a[i];\n          }\n          //for(int i=0;i<n;i++)\n         // printf(\"%d \",b[i]);\n          printf(\"\\n\");\n     }\n     return 0;\n}"}
{"similarity_score": 0.6041055718475073, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b3f5499ee1c4bd70aa707b0e45693689", "bug_code_uid": "2fe77b22c6a8041b40407f2394a0f512", "src_uid": "0ce05499cd28f0825580ff48dae9e7a9", "apr_id": "cd3658f3f8e8a36d3b8023fea930750c", "difficulty": 1200, "tags": ["brute force", "implementation", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        long long int n, c=0;\r\n        scanf(\"%lld\", &n);\r\n        long long int a[n];\r\n        for(int i=1; i<=n; i++)\r\n        {\r\n            scanf(\"%lld\", &a[i-1]);\r\n            for(int j=1; j<i; j++)\r\n            {\r\n                if((i+j)%a[j-1]==0)\r\n                {\r\n                    if((i+j)/a[j-1]==a[i-1])\r\n                        c++;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%lld\\n\", c);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        long long int n, c=0;\r\n        scanf(\"%lld\", &n);\r\n        long long int a[n];\r\n        for(int i=0; i<n; i++)\r\n            scanf(\"%lld\", &a[i]);\r\n        for(int i=1; i<n; i++)\r\n        {\r\n            for(int j=a[i-1]-i; j<=n; j+=a[i-1])\r\n            {\r\n                if(j>i && (a[i-1]*a[j-1]==(i+j)))\r\n                    c++;\r\n            }\r\n        }\r\n        printf(\"%lld\\n\", c);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8356164383561644, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "6673cf58a920c1289565067a56722741", "bug_code_uid": "7ba256fc4b18eec5f2eabdf8895d9b4b", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "338225d7e0b52f1d2696a4413bd9c02a", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nlong int t[100000002];\n\nint main()\n{\n    long int n,s=0,i,j,k,tmp,c=1;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&t[i]);\n    }\n       for(i=n/2;i>0;i=i/2)\n    {\n\n      for(j=i;j<n;j++)\n      {\n          for(k=j-i;k>=0;k=k-i)\n          {\n              if(t[k+i]>=t[k])\n                break;\n              else\n              {\n                  tmp=t[k];\n                  t[k]=t[k+i];\n                  t[k+i]=tmp;\n              }\n          }\n      }\n\n      }\n      j=0;\n      for(i=1;i<n;i++)\n    {\n        s=s+t[j];\n        if(s<=t[i])\n        {\n            c++;\n        }\n        j++;\n    }\n    if(n==1)\n    {\n        printf(\"%d\",1);\n    }\n    else\n     {\n       printf(\"%ld\",c);\n     }\n\n\n      return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong int t[1000000];\n\nint main()\n{\n    long int n,s=0,i,j,k,tmp,c=0;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n    {\n\n        scanf(\"%ld\",&t[i]);\n    }\n\n     for(i=n/2;i>0;i=i/2)\n    {\n\n      for(j=i;j<n;j++)\n      {\n          for(k=j-i;k>=0;k=k-i)\n          {\n              if(t[k+i]>=t[k])\n                break;\n              else\n              {\n                  tmp=t[k];\n                  t[k]=t[k+i];\n                  t[k+i]=tmp;\n              }\n          }\n      }\n\n      }\n    for(i=0;i<n;i++)\n    {\n        if(t[i]>=s)\n        {\n            s=s+t[i];\n            c++;\n        }\n    }\n\n\n\n       printf(\"%ld\\n\",c);\n\n\n\n      return 0;\n}\n"}
{"similarity_score": 0.996629213483146, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9ff1ec7823c75023f25fdb2f9f5881d5", "bug_code_uid": "b25ed830f7f514f5eccd7af8aecb4440", "src_uid": "554115bec46bb436a0a1ddf8c05a2d08", "apr_id": "23b7e90485bc26248768518db42905cc", "difficulty": 1100, "tags": ["greedy", "constructive algorithms", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tint n,m,i,j,z,p=0,q,b[100],count;\n\tchar a[101][51];\n\tscanf(\"%d %d \",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(j==m-1&&i!=n-1)\n\t\t\tscanf(\"%c\\n\",&a[i][j]);\n\t\t\telse\n\t\t\tscanf(\"%c\",&a[i][j]);\n\t\t}\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tz=0;\n\t\t\twhile(z<m)\n\t\t\t{\n\t\t\t\tif(a[i][z]!=a[j][m-1-z])\n\t\t\t\tbreak;\n\t\t\t\tz++;\n\t\t\t}\n\t\t\tif(z==m)\n\t\t\t{\n\t\t\t\tb[p]=i;\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tcount=2*p*m;\n\tq=p;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m/2;j++)\n\t\t{\n\t\t\tif(a[i][j]!=a[i][m-1-j])\n\t\t\tbreak;\n\t\t}\n\t\tif(j>=m/2)\n\t\t{\n\t\t\tb[q]=i;\n\t\t\tq++;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcount+=m;\n\tprintf(\"%d\\n\",count);\n\tfor(i=0;i<p;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tprintf(\"%c\",a[b[i]][j]);\n\t\t}\n\t } \n\tfor(i=p;i<q;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tprintf(\"%c\",a[b[i]][j]);\n\t\t}\n\t}\n\tfor(i=p-1;i>=0;i--)\n\t{\n\t\tfor(j=m-1;j>=0;j--)\n\t\t{\n\t\t\tprintf(\"%c\",a[b[i]][j]);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tint n,m,i,j,z,p=0,q,b[100],count;\n\tchar a[101][51];\n\tscanf(\"%d %d \",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(j==m-1&&i!=n-1)\n\t\t\tscanf(\"%c\\n\",&a[i][j]);\n\t\t\telse\n\t\t\tscanf(\"%c\",&a[i][j]);\n\t\t}\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tz=0;\n\t\t\twhile(z<m)\n\t\t\t{\n\t\t\t\tif(a[i][z]!=a[j][m-1-z])\n\t\t\t\tbreak;\n\t\t\t\tz++;\n\t\t\t}\n\t\t\tif(z==m)\n\t\t\t{\n\t\t\t\tb[p]=i;\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tcount=2*p*m;\n\tq=p;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m/2;j++)\n\t\t{\n\t\t\tif(a[i][j]!=a[i][m-1-j])\n\t\t\tbreak;\n\t\t}\n\t\tif(j>=m/2)\n\t\t{\n\t\t\tb[q]=i;\n\t\t\tq++;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcount+=(q-p)*m;\n\tprintf(\"%d\\n\",count);\n\tfor(i=0;i<p;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tprintf(\"%c\",a[b[i]][j]);\n\t\t}\n\t } \n\tfor(i=p;i<q;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tprintf(\"%c\",a[b[i]][j]);\n\t\t}\n\t}\n\tfor(i=p-1;i>=0;i--)\n\t{\n\t\tfor(j=m-1;j>=0;j--)\n\t\t{\n\t\t\tprintf(\"%c\",a[b[i]][j]);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9832985386221295, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a23bbb5a6e228d04b15e98926a23517a", "bug_code_uid": "3764cc860c5dc9ae9eb6837dcafdac0c", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "b274ba6f3b07a60396b7f28ea2a10235", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long int NSD(long long int a, long long int b){\n  while ((a != 0) && (b != 0)){\n    if (a > b){\n      a = a % b;\n    } else {\n      b = b % a;\n    }\n  }\n  if (a == 0) return b;\n  else return a;\n}\n\nint main(void){\n  \n  int vstupu;\n  long long int n;\n  long long int vysl;\n\n  scanf(\"%d\", &vstupu);\n\n  int i;\n  for (i = 0; i < vstupu; i++){\n    scanf(\"%I64d \", &n);\n\n    vysl = ((NSD(n+1, 4*n)) * 4 * n)+1;\n    printf(\"%I64d\\n\", vysl);\n  }\n\n  return 0;\n\n\n}\n", "fixed": "#include <stdio.h>\n\nlong long int NSD(long long int a, long long int b){\n  while ((a != 0) && (b != 0)){\n    if (a > b){\n      a = a % b;\n    } else {\n      b = b % a;\n    }\n  }\n  if (a == 0) return b;\n  else return a;\n}\n\nint main(void){\n  \n  int vstupu;\n  long long int n;\n  long long int vysl;\n\n  scanf(\"%d\", &vstupu);\n\n  int i;\n  for (i = 0; i < vstupu; i++){\n    scanf(\"%I64d \", &n);\n\n    vysl = (4 * n / (NSD(n+1, 4*n)))+1;\n    printf(\"%I64d\\n\", vysl);\n  }\n\n  return 0;\n\n\n}\n"}
{"similarity_score": 0.4372093023255814, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "50564429a691d05428a8edbc0329c815", "bug_code_uid": "0c56beace5fe6563020cfc47018f74fd", "src_uid": "942123e43a83d5a4cea95a6781064e28", "apr_id": "42adbcb71755b94a36edb9555f84a46c", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,j,n,cnt,tmp,p;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        int ar[n];\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&ar[i]);\n        }\n        cnt=0;\n        for(i=0; i<n; i=i+p+1)\n        {\n            if((i%2)==(ar[i]%2))\n            {\n                continue;\n            }\n            else\n            {\n              tmp=ar[i];\n               for(j=i+1; j<n; j++)\n               {\n                  if(((ar[j]%2)==(i%2))&&((j%2)!=(ar[j]%2)))\n                  {\n                     ar[i]=ar[j];\n                     ar[i+1]=tmp;p=j; cnt++;\n                  }\n               }\n               if(cnt==0){cnt=-1;break;}\n            }\n        }\n        if(cnt==-1){printf(\"-1\\n\");}\n        else {printf(\"%d\\n\",cnt);}\n    cnt=0;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,j,n,cnt1,cnt0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n    cnt1=0;cnt0=0;\n        scanf(\"%d\",&n);\n        int ar[n];\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&ar[i]);\n        }\n\n        for(i=0; i<n; i++)\n        {\n            ar[i]=ar[i]%2;\n            j=i%2;\n            if(ar[i]!=j)\n            {\n                if(ar[i]==1)\n                {\n                    cnt1++;\n                }\n                else\n                {\n                    cnt0++;\n                }\n            }\n        }\n        if(cnt1==cnt0){printf(\"%d\\n\",cnt1);}\n        else {printf(\"-1\\n\");}\n\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9325337331334332, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4fab1fb9336957670c7916a9fb48a7b0", "bug_code_uid": "a3268245c8e599fd4bd6d1a6e68acdaa", "src_uid": "b4ca6a5ee6307ab2bcdab2ea5dd5b2b3", "apr_id": "438151cb5e1831546fe2917363697300", "difficulty": 1100, "tags": ["binary search", "brute force", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--){\r\n        long long n;\r\n        scanf(\"%lld\",&n);\r\n\r\n        long long i,j;\r\n        float cb=cbrt(n);\r\n        long long l=cb;\r\n        int flag=0;\r\n\r\n        for(i=1;i<=l;i++){\r\n            j=n-i*i*i;\r\n            cb=cbrt(j);\r\n            int k=cb;\r\n\r\n            if(j==0){\r\n                flag=0;\r\n            }\r\n            else if(k*k*k+i*i*i==n){\r\n                flag=1;\r\n                break;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if(flag==1){\r\n            printf(\"YES\\n\");\r\n        }\r\n\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--){\r\n        long long n,k;\r\n        scanf(\"%lld\",&n);\r\n\r\n        long long i,j;\r\n        float cb=cbrt(n);\r\n        long long l=cb;\r\n        int flag=0;\r\n\r\n        for(i=1;i<=l;i++){\r\n            j=n-i*i*i;\r\n            cb=cbrt(j);\r\n            k=cb;\r\n\r\n            if(i*k<=0){\r\n                flag=0;\r\n                break;\r\n            }\r\n            else if(k*k*k+i*i*i==n){\r\n                flag=1;\r\n                break;\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        if(flag==1){\r\n            printf(\"YES\\n\");\r\n        }\r\n\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8899242865463017, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b7eeb86178a75e0e38bad30572c816bf", "bug_code_uid": "51f9cc252af6486504a4d256b8fa0c7a", "src_uid": "faf1abdeb6f0cf34972d5cb981116186", "apr_id": "4809e025f22052ec06119133bbcca86a", "difficulty": 1200, "tags": ["data structures", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int r,c,sr=0,sc=0;\n    long long n,m,i;\n    scanf(\"%lld %lld\",&n,&m);\n    int row[n],col[n];\n    long long s;\n    s=n*n;\n    memset(row,0,sizeof(row));\n    memset(col,0,sizeof(col));\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d %d\",&r,&c);\n        if(row[r-1]==0 && col[c-1]==0)\n        {\n            s-=(2*n)-1-(2*i-sr-sc);\n            row[r-1]=1;\n            col[c-1]=1;\n        }\n        else if(row[r-1]==0 && col[c-1]!=0)\n        {\n            s-=n-1-sr;\n            row[r-1]=1;\n            sc++;\n        }\n        else if(row[r-1]!=0 && col[c-1]==0)\n        {\n            s-=n-1-sc;\n            col[c-1]=1;\n            sr++;\n        }\n        else\n        {\n            sr++;\n            sc++;\n        }\n        printf(\"%lld\",s);\n        if(m!=0) printf(\" \");\n        }\n        printf(\"\\n\");\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int r,c,sr=0,sc=0;\n    long long n,m,i;\n    scanf(\"%lld %lld\",&n,&m);\n    int row[n],col[n];\n    long long s;\n    s=n*n;\n    memset(row,0,sizeof(row));\n    memset(col,0,sizeof(col));\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d %d\",&r,&c);\n        if(row[r-1]==0 && col[c-1]==0)\n        {\n            s-=(2*n)-1-(2*i-sr-sc);\n            row[r-1]=1;\n            col[c-1]=1;\n        }\n        else if(row[r-1]==0 && col[c-1]!=0)\n        {\n            sc++;\n            s-=n-1-(i-sc);\n            row[r-1]=1;\n\n        }\n        else if(row[r-1]!=0 && col[c-1]==0)\n        {\n\n            sr++;\n            s-=n-1-(i-sr);\n            col[c-1]=1;\n\n        }\n        else\n        {\n            sr++;\n            sc++;\n        }\n        printf(\"%lld\",s);\n        if(m!=0) printf(\" \");\n        }\n        printf(\"\\n\");\n        return 0;\n}\n"}
{"similarity_score": 0.9579124579124579, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "5ff757406c3ae8fe33671d9ef2d91aa7", "bug_code_uid": "d74e22c6c2e7afa4022a3c17756b72e4", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "3b8b10b6417ca1d8cebcbef9747502c9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,t=0,l1,l2,sum;\n    scanf(\"%d\",&n);\n    char a[n],b[n];\n    scanf(\"%s\",&a);\n    scanf(\"%s\",&b);\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>b[i])\n        {\n            sum=a[i]-b[i];\n            if(sum>5)\n        {\n            t=t+10-sum;\n        }\n        else\n        {\n            t=t+sum;\n        }\n\n        }\n        else\n        {\n            sum=b[i]-a[i];\n            if(sum>5)\n        {\n            t=t+10-sum;\n        }\n        else\n        {\n            t=t+sum;\n        }\n\n        }\n    printf(\"%d\\n\",t);\n\n    }\n    printf(\"%d\\n\",t);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,t=0,l1,l2,sum;\n    scanf(\"%d\",&n);\n    char a[n],b[n];\n    scanf(\"%s\",&a);\n    scanf(\"%s\",&b);\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>b[i])\n        {\n            sum=a[i]-b[i];\n            if(sum>5)\n        {\n            t=t+10-sum;\n        }\n        else\n        {\n            t=t+sum;\n        }\n\n        }\n        else\n        {\n            sum=b[i]-a[i];\n            if(sum>5)\n        {\n            t=t+10-sum;\n        }\n        else\n        {\n            t=t+sum;\n        }\n\n        }\n\n    }\n    printf(\"%d\\n\",t);\n    return 0;\n\n}\n"}
{"similarity_score": 0.9365146996165318, "equal_cnt": 19, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 14, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "4db2a739570bc205a58f1d06d65f9929", "bug_code_uid": "23df9253567563a1fa8c66c225f3f905", "src_uid": "5185f842c7c24d4118ae3661f4418a1d", "apr_id": "a25ec3c7c14dcaf9d17f71971c12697a", "difficulty": 1700, "tags": ["constructive algorithms", "implementation", "number theory", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char const *argv[])\n{\n\tint n,m,p,i,par,impar,h;\n\tlong long int aux;\n\tlong long int * a;\n\tlong long int * b;\n\tscanf(\"%d %d %d\", &n, &m, &p);\n\ta=(long long int *)malloc(n*sizeof(long long int));\n\tb=(long long int *)malloc(n*sizeof(long long int));\n\timpar=0;\n\tpar=0;\n\tfor (i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%I64d\", &aux);\n\t\tif(aux%2==1){\n\t\t\ta[n-impar-1]=aux;\n\t\t\tb[n-impar-1]=aux;\n\t\t\timpar++;\n\t\t}else{\n\t\t\ta[par]=aux;\n\t\t\tb[par]=aux;\n\t\t\tpar++;\n\t\t}\n\t}\n\tif(impar%2==(m-p)%2 && impar>=m-p && p<=(n-impar)+(impar-(m-p))/2){\n\t\tprintf(\"YES\\n\");\n\t\th=n;\n\t\tfor (i = 0; i < n; ++i)\n\t\t{\n\t\t\tif(p>0){\n\t\t\t\tif(a[i]%2==0){\n\t\t\t\t\tprintf(\"1 %I64d \\n\", a[i]);\n\t\t\t\t\tb[i]=-1;\n\t\t\t\t\th--;\n\t\t\t\t}else{\n\t\t\t\t\tprintf(\"2 %I64d %I64d \\n\",a[i], a[i+1]);\n\t\t\t\t\tb[i]=-1;\n\t\t\t\t\tb[i+1]=-1;\n\t\t\t\t\th-=2;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tp--;\n\t\t\t\tm--;\n\t\t\t}else{\n\t\t\t\tif(a[i]%2==1){\n\t\t\t\t\tprintf(\"1 %I64d \\n\", a[i]);\n\t\t\t\t\tb[i]=-1;\n\t\t\t\t\th--;\n\t\t\t\t\tm--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(m<=1){\n\t\t\t\ti=n;\n\t\t\t}\n\t\t}\n\t\tif(h>0){\n\t\t\tprintf(\"%d \", h);\n\t\t\tfor (i = 0; i < n; ++i)\n\t\t\t{\n\t\t\t\tif(b[i]!=-1){\n\t\t\t\t\tprintf(\"%I64d \", b[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tprintf(\"NO\");\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char const *argv[])\n{\n\tint n,m,p,i,par,impar,h;\n\tlong long int aux;\n\tlong long int * a;\n\tlong long int * b;\n\tscanf(\"%d %d %d\", &n, &m, &p);\n\ta=(long long int *)malloc(n*sizeof(long long int));\n\tb=(long long int *)malloc(n*sizeof(long long int));\n\timpar=0;\n\tpar=0;\n\tfor (i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%I64d\", &aux);\n\t\tif(aux%2==1){\n\t\t\ta[n-impar-1]=aux;\n\t\t\tb[n-impar-1]=aux;\n\t\t\timpar++;\n\t\t}else{\n\t\t\ta[par]=aux;\n\t\t\tb[par]=aux;\n\t\t\tpar++;\n\t\t}\n\t}\n\tif(impar%2==(m-p)%2 && impar>=m-p && p<=(n-impar)+(impar-(m-p))/2){\n\t\tprintf(\"YES\\n\");\n\t\th=n;\n\t\tif(m>1){\n\t\t\t\n\t\t\tfor (i = 0; i < n; ++i)\n\t\t\t{\n\t\t\t\tif(p>0){\n\t\t\t\t\tif(a[i]%2==0){\n\t\t\t\t\t\tprintf(\"1 %I64d \\n\", a[i]);\n\t\t\t\t\t\tb[i]=-1;\n\t\t\t\t\t\th--;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tprintf(\"2 %I64d %I64d \\n\",a[i], a[i+1]);\n\t\t\t\t\t\tb[i]=-1;\n\t\t\t\t\t\tb[i+1]=-1;\n\t\t\t\t\t\th-=2;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tp--;\n\t\t\t\t\tm--;\n\t\t\t\t}else{\n\t\t\t\t\tif(a[i]%2==1){\n\t\t\t\t\t\tprintf(\"1 %I64d \\n\", a[i]);\n\t\t\t\t\t\tb[i]=-1;\n\t\t\t\t\t\th--;\n\t\t\t\t\t\tm--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(m<=1){\n\t\t\t\t\ti=n;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(h>0){\n\t\t\tprintf(\"%d \", h);\n\t\t\tfor (i = 0; i < n; ++i)\n\t\t\t{\n\t\t\t\tif(b[i]!=-1){\n\t\t\t\t\tprintf(\"%I64d \", b[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tprintf(\"NO\");\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9786780383795309, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2557d0afa1e3b4c8883c526eb9c32b63", "bug_code_uid": "3f5f2d7e608284c129440fe3f988badc", "src_uid": "5099a9ae62e82441c496ac37d92e99e3", "apr_id": "2fb61fcf6fb0109afca73fe4399d2359", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long n,h,r,tt=0,c=0,p;\n    scanf(\"%d%d%d\",&n,&h,&r);\n    for (int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&p);\n        if(c+p<=h)\n        {\n            c=c+p;\n        }\n\n        else\n        {\n            tt=tt+((p-h+c)/r)+((p-h+c)%r==0?0:1);\n            c=c-(((p-h+c)/r)+((p-h+c)%r==0?0:1))*r;\n            if(c<0)c=0;\n            c=c+p;\n        }\n    }\n    tt=tt+(c/r)+(c%r==0?0:1);\n    printf(\"%I64d\",tt);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    long long n,h,r,tt=0,c=0,p;\n    scanf(\"%I64d%I64d%I64d\",&n,&h,&r);\n    for (int i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&p);\n        if(c+p<=h)\n        {\n            c=c+p;\n        }\n\n        else\n        {\n            tt=tt+((p-h+c)/r)+((p-h+c)%r==0?0:1);\n            c=c-(((p-h+c)/r)+((p-h+c)%r==0?0:1))*r;\n            if(c<0)c=0;\n            c=c+p;\n        }\n    }\n    tt=tt+(c/r)+(c%r==0?0:1);\n    printf(\"%I64d\",tt);\n    return 0;\n}\n"}
{"similarity_score": 0.2493368700265252, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "14f4f3578cd9020fecf1a1deee966fb4", "bug_code_uid": "ea7027a22396fe393477cc1a50b5431d", "src_uid": "a544dd9fd96379f66a960de6f973dd50", "apr_id": "5722b6d9cc7a254567a451edc5a9a37f", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    long int t,a,b,k,kmax,lol;\n    \n    scanf(\"%ld\",&t);\n    \n    while(t--){\n        scanf(\"%ld %ld\",&a,&b);\n\tif(b==1) lol=1;\n\telse lol=0;\n\tfor(k=lol;k<30;k++) if(kmax+floor((log(a)/log(b+kmax))+1)>=k+1+floor((log(a)/log(b+k+1))+1)) kmax=k;\n        printf(\"%.0f\\n\",kmax+floor(log(a)/log(b+kmax)+1));\n    }\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tint t,n,a,b,a1,b1,total;\n\n\tscanf(\"%d\",&t);\n\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%d\",&a);\n\t\tn--;\n\t\ttotal=0;\n\t\twhile(n--){\n\t\t\tscanf(\"%d\",&b);\n\t\t\ta1=a;\n\t\t\tb1=b;\n\t\t\tif(a<b){\n\t\t\t\twhile(b>2*a){\n\t\t\t\t\ttotal++;\n\t\t\t\t\ta*=2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\twhile(a>2*b){\n\t\t\t\t\ttotal++;\n\t\t\t\t\tb*=2;\n\t\t\t\t}\n\t\t\t}\n\t\t\ta=b1;\n\t\t}\n\t\tprintf(\"%d\\n\",total);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.8970688479890934, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "ce1a775e9988b4b341fa4e83f08ff331", "bug_code_uid": "6d99b3b1f252bda7ab39fe4cc325536a", "src_uid": "3b7cafc280a9b0dba567863c80b978b0", "apr_id": "131e2051b4c72ab54043e1decb3b0ede", "difficulty": 1300, "tags": ["combinatorics", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint pow1(int a,int b){\n    int f=1;\nfor(int u=0;u<b;u++){\n    f*=a;\n}\nreturn f;\n}\n \nint main()\n{\nint n,m,i,j,l,k,f,g\nlong long int S;\nscanf(\"%d %d\",&n,&m);\nint tab[n][m];\nS=n*m;\nfor(i=0;i<n;i++){\n        k=0;\n        l=0;\n    for(j=0;j<m;j++){\n        scanf(\"%d\",&tab[i][j]);\n        if(tab[i][j]==1)\n            k+=1;\n        else\n            l+=1;\n    }\n    if(k>=1){\n        S+=pow1(2,k)-k-1;}\n    if(l>=1){\n        S+=pow1(2,l)-l-1;}\n}\nfor(j=0;j<m;j++){\n        k=0;\n        l=0;\n    for(i=0;i<n;i++){\n        if(tab[i][j]==1)\n            k+=1;\n        else\n            l+=1;\n    }\n    if(k>=1){\n        S+=pow1(2,k)-k-1;}\n    if(l>=1){\n        g=(l-1)*l;\n        S+=pow1(2,l)-l-1;}\n}\nprintf(\"%lli\",S);\n \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\nint n,m,i,j,l,k,f,g;\nunsigned long long int S;\nscanf(\"%d %d\",&n,&m);\nint tab[n][m];\nS=n*m;\nfor(i=0;i<n;i++){\n        k=0;\n        l=0;\n    for(j=0;j<m;j++){\n        scanf(\"%d\",&tab[i][j]);\n        if(tab[i][j]==1)\n            k+=1;\n        else\n            l+=1;\n    }\n    if(k>=1){\n        S+=pow(2,k)-k-1;}\n    if(l>=1){\n        S+=pow(2,l)-l-1;}\n}\nfor(j=0;j<m;j++){\n        k=0;\n        l=0;\n    for(i=0;i<n;i++){\n        if(tab[i][j]==1)\n            k+=1;\n        else\n            l+=1;\n    }\n    if(k>=1){\n        S+=pow(2,k)-k-1;}\n    if(l>=1){\n        g=(l-1)*l;\n        S+=pow(2,l)-l-1;}\n}\nprintf(\"%llu\",S);\n \n    return 0;\n}"}
{"similarity_score": 0.23983739837398374, "equal_cnt": 12, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "e02bfe493a2556e350d2d24b590fe441", "bug_code_uid": "e0c28d78eaeefd095a3774eebb273a4e", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "7e764db478c55053c5fcb4a2f67c9055", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{ int n;\n scanf(\"%d\",&n);\n int x,y,z;\nscanf(\"%d%d%d\",&x,&y,&z); \n int x1,y1,z1;\nscanf(\"%d%d%d\",&x1,&y1,&z1);\nint x2,y2,z2;\nscanf(\"%d%d%d\",&x2,&y2,&z2);\nif(x+x1+x2==0&&y+y1+y2==0&&z+z1+z2==0)\nprintf(\"yes\");\nelse\nprintf(\"no\");}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,x,y,z;\nint a=0,b=0,c=0;\nscanf(\"%d\",&n);\nfor(int i=0;i<n;i++)\n{\nscanf(\"%d\",&x);\nscanf(\"%d\",&y);\nscanf(\"%d\",&z);\na=a+x;\nb=b+y;\nc=c+z;\n}\nif(a==0&&b==0&&c==0)\nprintf(\"YES\");\nelse\nprintf(\"NO\");\nreturn 0;\n}"}
{"similarity_score": 0.49868766404199477, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "4e0a55618d68f286b08901575f86db46", "bug_code_uid": "a39c11e3105565ba72f1e874513800ba", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "b04ed0efe6d701e0b4c573621a316746", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n\r\n\r\n     long long int n,i,t,p,count;\r\n    scanf(\"%lld\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        count=0;\r\n\r\n    scanf(\"%lld\",&n);\r\n    if(n%2==0)\r\n    {\r\n        printf(\"NO\\n\");\r\n    }\r\n\r\n    else\r\n    {\r\n\r\n        for(i=3;i<=n;i=i+2)\r\n        {\r\n            if(n%i==0)\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n        if(count>0)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\r\n\r\n    long long int t,n,count;\r\n    scanf(\"%lld\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        if(n==2)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else if(n%2!=0)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            while(n%2==0 && n!=1)\r\n            {\r\n                n=n/2;\r\n            }\r\n            if(n==1)\r\n            {\r\n                printf(\"NO\\n\");\r\n            }\r\n            else\r\n            {\r\n                printf(\"YES\\n\");\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9898843930635838, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4268fa596206f443c4ec7c79884435f2", "bug_code_uid": "2b8d7a32b1631934045caa809318ee95", "src_uid": "ac7d117d58046872e9d665c9f99e5bff", "apr_id": "660b9aa142cdc44a96035bc657423229", "difficulty": 800, "tags": ["brute force", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--)\r\n    {\r\n        int n, i, j, num, len=0, ans;\r\n        scanf(\"%d\", &n);\r\n\r\n        if(n<10)\r\n            ans = n;\r\n        else {\r\n            num = n;\r\n            while(num){\r\n                num = num/10;\r\n                len++;\r\n            }\r\n            ans = (len - 1)*9;\r\n            for(i=1; i<10; i++){\r\n                    num = i;\r\n                    j = len;\r\n                while(--j){\r\n                    num = num*10 + i;\r\n                }\r\n                if(num<=n)\r\n                    ans++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--)\r\n    {\r\n        long long int n, i, j, num, len=0, ans;\r\n        scanf(\"%lld\", &n);\r\n\r\n        if(n<10)\r\n            ans = n;\r\n        else {\r\n            num = n;\r\n            while(num){\r\n                num = num/10;\r\n                len++;\r\n            }\r\n            ans = (len - 1)*9;\r\n            for(i=1; i<10; i++){\r\n                    num = i;\r\n                    j = len;\r\n                while(--j){\r\n                    num = num*10 + i;\r\n                }\r\n                if(num<=n)\r\n                    ans++;\r\n            }\r\n        }\r\n        printf(\"%lld\\n\", ans);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9581673306772909, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b96800419e723a0c7df84e50acb5b893", "bug_code_uid": "513d90d122cbd07cf8f6cf46213582de", "src_uid": "447ebe088a0a60a7a44a3fc76056bc65", "apr_id": "ac93d76a5ebe40839852a92f11d4fb89", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int t=1,n,i,j;\n\tlong long int p,q,temp;\n\t//scanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&p,&q);\n\t\tscanf(\"%lld\",&n);\n\t\tlong long int A[n];\n\t\tfor(j=0;j<n;j++)\n\t\t\tscanf(\"%lld\",&A[j]);\n\t\t//if(n==1)\n\t\t//{\n\t\t//\tq = (p/q)-A[0];\n\t\t//}\n\t\t//else\n\t\t//{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(p/q<A[j])\n\t\t\t\t\tbreak;\n\t\t\t\tp  = p-(A[j]*q);\n\t\t\t\ttemp=p;\n\t\t\t\tp=q;\n\t\t\t\tq=temp;\n\t\t\t}\n\t\t//}\n\t\tif(q==0)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int t=1,n,i,j;\n\tlong long int p,q,temp;\n\t//scanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&p,&q);\n\t\tscanf(\"%lld\",&n);\n\t\tlong long int A[n];\n\t\tfor(j=0;j<n;j++)\n\t\t\tscanf(\"%lld\",&A[j]);\n\t\t//if(n==1)\n\t\t//{\n\t\t//\tq = (p/q)-A[0];\n\t\t//}\n\t\t//else\n\t\t//{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tfloat temp1=(float)p/q;\n\t\t\t\tif(temp1<A[j])\n\t\t\t\t\tbreak;\n\t\t\t\tp  = p-(A[j]*q);\n\t\t\t\ttemp=p;\n\t\t\t\tp=q;\n\t\t\t\tq=temp;\n\t\t\t}\n\t\t//}\n\t\tif(q==0)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.995575221238938, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f801678fbcb09be3117e19736b1cc856", "bug_code_uid": "cf6394483cd2213e0cf1ebae80c1be47", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "76af5ef72c25e689fbbc7f6719a4cf00", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main() {\r\n    int t, n, x;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) {\r\n        scanf(\"%d %d\", &n, &x);\r\n        long long res = 0;\r\n        double sum = 0;\r\n        for (int j = 0; j < n; j++) {\r\n            double tmp;\r\n            scanf(\"%lf\", &tmp);\r\n            sum += tmp;\r\n            res += ceil(tmp/3);\r\n        }\r\n        printf(\"%lld %lld\\n\", (long long) ceil(sum/3), res);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main() {\r\n    int t, n, x;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) {\r\n        scanf(\"%d %d\", &n, &x);\r\n        long long res = 0;\r\n        double sum = 0;\r\n        for (int j = 0; j < n; j++) {\r\n            double tmp;\r\n            scanf(\"%lf\", &tmp);\r\n            sum += tmp;\r\n            res += ceil(tmp/x);\r\n        }\r\n        printf(\"%lld %lld\\n\", (long long) ceil(sum/x), res);\r\n    }\r\n}"}
{"similarity_score": 0.9992242048099301, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5ce3b5782bd31779c82227f72440eee2", "bug_code_uid": "a28c785ccb95d5b01a56befdeaabbf0e", "src_uid": "01cd3f0c6bc2975118075d180bfeba2d", "apr_id": "d2c23b30399d62ebdb38da894059a0d7", "difficulty": 1600, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 10000\n\nint intcmp (const void *u, const void *v) {\n  const int a = *(int *)u, b = *(int *)v;\n  return a < b ? -1 : a == b ? 0 : 1;\n}\n\nint main (void) {\n  int n, m, k, i, j, a[N], b[N] = {0}, res = 0, *bb;\n  scanf (\"%d %d %d\", &n, &m, &k);\n  for (i = 0; i < n; ++i) scanf (\"%d\", &a[i]);\n  for (i = 0; i < m; ++i) scanf (\"%d\", &b[i]);\n  if (m < n) m = n;\n  qsort (a, n, sizeof *a, intcmp);\n  qsort (b, m, sizeof *b, intcmp);\n  bb = b + m - n;\n  for (i = j = 0; i < n && j < m && !res; ++i, ++j) {\n    if (a[i] > bb[j]) res = 1;\n  }\n  printf (\"%s\\n\", res ? \"YES\" : \"NO\");\n  exit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100000\n\nint intcmp (const void *u, const void *v) {\n  const int a = *(int *)u, b = *(int *)v;\n  return a < b ? -1 : a == b ? 0 : 1;\n}\n\nint main (void) {\n  int n, m, k, i, j, a[N], b[N] = {0}, res = 0, *bb;\n  scanf (\"%d %d %d\", &n, &m, &k);\n  for (i = 0; i < n; ++i) scanf (\"%d\", &a[i]);\n  for (i = 0; i < m; ++i) scanf (\"%d\", &b[i]);\n  if (m < n) m = n;\n  qsort (a, n, sizeof *a, intcmp);\n  qsort (b, m, sizeof *b, intcmp);\n  bb = b + m - n;\n  for (i = j = 0; i < n && j < m && !res; ++i, ++j) {\n    if (a[i] > bb[j]) res = 1;\n  }\n  printf (\"%s\\n\", res ? \"YES\" : \"NO\");\n  exit (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.5775862068965517, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "5da98228c055a8ae16bb836669633ce3", "bug_code_uid": "61ad672ed9d9be01a4e54ad1ed17ba54", "src_uid": "e0a3c678f6d1d89420c8162b0ddfcef7", "apr_id": "6753a2343265b24779086ec572425b0b", "difficulty": 1500, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, a, b;\nvoid trim()\n{\n\twhile(n%a == 0)\n\t{\n\t\tn = n/a;\n\t}\n}\n\nvoid solve()\n{\n\twhile(n > 1)\n\t{\n\t\tif(n%a == 0)\n\t\t\ttrim();\n\t\telse\n\t\t{\n\t\t\tn = n - b;\t\n\t\t}\n\t}\n\tif (n == 1)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\telse\n\t\tprintf(\"NO\\n\");\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int i = 0; i < t; i++)\n\t{\n\t\tscanf(\"%d%d%d\",&n, &a, &b);\n\t\tif(a==1||b==1)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsolve();\n\t\t}\n\t}\n}\n\n", "fixed": "#include <stdio.h>\n#define ll\tlong long int\n\nint n, a, b;\n\nvoid solve()\n{\n\tll pow = 1;\n\tint check = n%b, f = 1;\n\twhile(check != pow%b && f)\n\t{\n\t\tpow*=a;\n\t\tif(pow > n)\n\t\t{\n\t\t\tf = 0;\n\t\t}\n\t}\n\tif(f)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int i = 0; i < t; i++)\n\t{\n\t\tscanf(\"%d%d%d\", &n, &a, &b);\n\t\tif(b ==1)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse if(a == 1)\n\t\t{\n\t\t\tif((n-1)%b == 0)\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsolve();\n\t\t}\n\t}\n}\n\n"}
{"similarity_score": 0.6577777777777778, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "67b95393a80bdd5b3f00571085fa49e8", "bug_code_uid": "a7adbdd2f55e87ed85255d29d66c5831", "src_uid": "f98ea97377a06963d1e6c1c215ca3a4a", "apr_id": "7ff6e224d4d5f0707fed1cc704045d47", "difficulty": 1800, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_N (100000)\n#define MAX_X (1000000)\n#define MAX_Y (1000000)\n\nint as[MAX_N];\nchar * tbl[MAX_X + MAX_Y];\n\nvoid build_table(double x, double y) {\n  int i,cnt_x,cnt_y;\n\n  for ( i=cnt_x=cnt_y=0; i < x+y; ++i )\n    if ( (cnt_x + 1) / x < (cnt_y + 1) / y )\n      tbl[i] = \"Vanya\", cnt_x++;\n    else if ( (cnt_x + 1) / x > (cnt_y + 1) / y )\n      tbl[i] = \"Vova\", cnt_y++;\n    else\n      tbl[i] = \"Both\";\n}\n\nint main() {\n  int i,n,x,y;\n\n  scanf(\"%d %d %d\", &n, &x, &y);\n  for ( i=0; i < n; ++i )\n    scanf(\"%d\", as+i);\n  build_table(x, y);\n  for ( i=0; i < n; ++i )\n    printf(\"%s\\n\", tbl[(as[i]-1) % (x+y)]);\n  return EXIT_SUCCESS;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_N (100000)\n#define MAX_X (1000000)\n#define MAX_Y (1000000)\n\nint as[MAX_N];\nchar * tbl[MAX_X + MAX_Y];\n\nvoid build_table(int x, int y) {\n  int i,cntx,cnty;\n\n  for (i=cntx=cnty=0; cntx < x || cnty < y; )\n    {\n        if ((long long)(cntx+1)*y > (long long)(cnty+1)*x)\n        {\n            cnty++;\n            tbl[i++] = \"Vova\";\n        }\n        else\n        if ((long long)(cntx+1)*y < (long long)(cnty+1)*x)\n        {\n            cntx++;\n            tbl[i++] = \"Vanya\";\n        } else\n        {\n            cntx++;\n            cnty++;\n            tbl[i++] = \"Both\";\n            tbl[i++] = \"Both\";\n        }\n    }\n}\n\nint main() {\n  int i,n,x,y;\n\n  scanf(\"%d %d %d\", &n, &x, &y);\n  for ( i=0; i < n; ++i )\n    scanf(\"%d\", as+i);\n  build_table(x, y);\n  for ( i=0; i < n; ++i )\n    printf(\"%s\\n\", tbl[(as[i]-1) % (x+y)]);\n  return EXIT_SUCCESS;\n}\n"}
{"similarity_score": 0.8676140613313388, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c6b82302cf881153a727f9fc4b120b9d", "bug_code_uid": "4b27870711d8029dba526d1c5f0285b1", "src_uid": "fbb4e1cf1cad47481c6690ce54b27a1e", "apr_id": "688268fc57abdf915ceb6b034f81d2a3", "difficulty": 800, "tags": ["greedy", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t>0)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        int c=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);    \r\n        }\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(arr[i]%2==0 &&arr[i+2]%2!=0)\r\n            {\r\n                c=1;\r\n                \r\n            }\r\n            else if(arr[i]%2!=0 && arr[i+2]==0)\r\n            c=1;\r\n        }\r\n        if(c==0)\r\n        printf(\"No\");\r\n        else if(c==1)\r\n        {\r\n            printf(\"Yes\");\r\n        }\r\n        t--;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t>0)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        int c=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);    \r\n        }\r\n        for(int i=0;i<=n-3;i++)\r\n        {\r\n            if(arr[i]%2==0 && arr[i+2]%2!=0)\r\n            {\r\n                c++;\r\n                \r\n            }\r\n            else if(arr[i]%2!=0 && arr[i+2]%2==0){\r\n            c++;\r\n            }\r\n        }\r\n        if(c==0)\r\n        {\r\n        printf(\"YES\\n\");\r\n        }\r\n        else if(c>0)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        t--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9967637540453075, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0c379201374e4e62b35d16d845e72a5c", "bug_code_uid": "2caef060b3bbb203dd0fe427638f3507", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "8b8e1df79d1adfa1c26fb8008465fdac", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    char s[100];\n    int len,i;\n    scanf(\"%d\",&len);\n    scanf(\"%s\",s);\n    int a_count=0,d_count=0;\n    for(i=0;i<len;i++){\n        if(s[i] == 'A'){\n            a_count = a_count+1;\n        }else{\n            d_count = d_count+1;\n        }\n    }if(a_count > d_count){\n        printf(\"Anton\");\n    }else if (a_count < d_count){\n        printf(\"Danik\");\n    }else{\n        printf(\"Friendship\");\n    }\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    char s[100000];\n    int len,i;\n    scanf(\"%d\",&len);\n    scanf(\"%s\",s);\n    int a_count=0,d_count=0;\n    for(i=0;i<len;i++){\n        if(s[i] == 'A'){\n            a_count = a_count+1;\n        }else{\n            d_count = d_count+1;\n        }\n    }if(a_count > d_count){\n        printf(\"Anton\");\n    }else if (a_count < d_count){\n        printf(\"Danik\");\n    }else{\n        printf(\"Friendship\");\n    }\nreturn 0;\n}"}
{"similarity_score": 0.5253390435403283, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "7230da59e4787ee4777c8ec6e9aad1dd", "bug_code_uid": "07792d76390020695521ef1a61295cb3", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "a0eeed6e7f38c53b28366be51a09fb96", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int t,n,b,i,j,sum=0;\n\n    scanf(\"%d \",&t);\n    for(i=0; i<t; i++)\n    {\n        sum = 0;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(j=0; j<n; j++)\n        {\n            int even = 0,odd = 0;\n            scanf(\"%d\",&a[j]);\n            if(a[j]%2==0)\n                even++;\n            else\n                odd++;\n            sum+=a[j];\n        }\n\n\n        if(sum%2!=0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            if(odd!=0 && even!=0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n\n        }\n\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,n,i,x;\n    scanf(\"%d \",&t);\n    while(t--)\n    {\n        int even =0,odd=0,sum=0;\n        scanf(\"%d\",&n);\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&x);\n           // sum+=x;\n            if(x%2==0) //&&  even==0)\n            {\n                even++;\n            }\n            if(x%2!=0 )//&& odd==0)\n            {\n                odd++;\n            }\n            sum+=x;\n\n        }\n\n        if(sum%2!=0)\n        {\n            printf(\"YES\\n\");\n        }\n\n        else\n        {\n            if(odd!=0 && even!=0)\n            {\n                printf(\"YES\\n\");\n            }\n            else\n            {\n                printf(\"NO\\n\");\n            }\n        }\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.93790546802595, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "20e4a68f41df3a5064c2363aa751c305", "bug_code_uid": "d66b66331ded084a60bddf98434d72ff", "src_uid": "d45f775613e701bbdaa4e457e6e189e2", "apr_id": "7f9b0e9b90279d22482262afbe671e18", "difficulty": 1000, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long int cmpfunc (const void * a, const void * b) {\n   return ( *(long long int *)a - *(long long int*)b );\n}\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,x1,y1,o1=0,o2=0,x,m,l,max,k,sum2,min,f,r,o,sum1,sum=0,y,b,count1,a[1000001]={0};\nchar a1[1000000];\nscanf(\"%lld%s\",&n,a1);\nfor(i=0;i<n-1;i++){\n    if(a[i]>a[i+1]){\n        printf(\"YES\\n%lld %lld\",i+1,i+2);\n        char m12=a[i];\n        a[i]=a[i+1];\n        a[i+1]=m12;\n        return 0;\n    }\n}\nprintf(\"NO\\n\");\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long int cmpfunc (const void * a, const void * b) {\n   return ( *(long long int *)a - *(long long int*)b );\n}\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,x1,y1,o1=0,o2=0,x,m,l,max,k,sum2,min,f,r,o,sum1,sum=0,y,b,count1,a[100000]={0};\nchar a1[1000000];\nscanf(\"%lld%s\",&n,a1);\nfor(i=0;i<n-1;i++){\n    if(a1[i]>a1[i+1]){\n        printf(\"YES\\n%lld %lld\",i+1,i+2);\n        return 0;\n    }\n}\nprintf(\"NO\\n\");\nreturn 0;\n}"}
{"similarity_score": 0.978515625, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3a7317c4dec4b50a105e1d879fc09f01", "bug_code_uid": "bbb4e47498f9ec9ecec1c51ad27555d7", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "e1529170248a737a5332db481f41d608", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[200005];\nint main() {\n    long long int n,i,max=0,min=5000000000;\n    scanf(\"%I64d\",&n);\n    for(i=0; i<n; i++) {\n        scanf(\"%I64d\",&a[i]);\n        if(a[i]> max) max=a[i];\n        if(a[i]<min) min = a[i];\n        }\n    long long int x=0,y=0,ma=0,mi=0;\n    x=max-min;\n    for(i=0; i<n; i++) {\n        if(a[i]==max) ma++;\n        if(a[i]==min) mi++;\n        }\n    if(ma==mi) y = n*(n-1)/2;\n    else {\n        y=ma*mi;\n        }\n    printf(\"%I64d %I64d\",x,y);\n    return 0;\n    }\n", "fixed": "#include <stdio.h>\nlong long int a[200005];\nint main() {\n    long long int n,i,max=0,min=5000000000;\n    scanf(\"%I64d\",&n);\n    for(i=0; i<n; i++) {\n        scanf(\"%I64d\",&a[i]);\n        if(a[i]> max) max=a[i];\n        if(a[i]<min) min = a[i];\n        }\n    long long int x=0,y=0,ma=0,mi=0;\n    x=max-min;\n    for(i=0; i<n; i++) {\n        if(a[i]==max) ma++;\n        if(a[i]==min) mi++;\n        }\n    if(min==max) y = n*(n-1)/2;\n    else {\n        y=ma*mi;\n        }\n    printf(\"%I64d %I64d\",x,y);\n    return 0;\n    }\n"}
{"similarity_score": 0.9476372924648787, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a2188a6dafb56e3a4dfd09b9f38d1e78", "bug_code_uid": "887483fb6ab72c1b3ca7f94173012ff5", "src_uid": "ffafd385ec79aa28b8d30224baf6bcfe", "apr_id": "459d393e67115f18ffd5037f60b46c43", "difficulty": 1600, "tags": ["dp", "combinatorics", "probabilities", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,h,i,a[1001],y=-1,z;\n    scanf(\"%d %d %d\",&n,&m,&h);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        y+=a[i];    \n    }\n    n--;\n    z=a[h-1]-1;\n    float p = (float)(y-z)/y;\n    for(i=1;i<n;i++)\n        p*=(float)(y-z-i)/(y-i);\n    if(n>y)\n        printf(\"-1.0\");\n    else\n        printf(\"%f\",1-p);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,h,i,a[1001],y=-1,z;\n    scanf(\"%d %d %d\",&n,&m,&h);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        y+=a[i];    \n    }\n    n--;\n    z=a[h-1]-1;\n    float p = (float)(y-z)/y;\n    for(i=1;i<n;i++)\n        p*=(float)(y-z-i)/(y-i);\n    if(n>y)\n        printf(\"-1.0\");\n    else if(n==0)\n        printf(\"0.0\");\n    else\n        printf(\"%f\",1-p);\n    return 0;\n}"}
{"similarity_score": 0.6864343958487769, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "8f6995529073541f2b4cfbc0d93221c9", "bug_code_uid": "b96326f5f4b69d8fcb27eda438bc7b42", "src_uid": "3d6cd0a82513bc2119c9af3d1243846f", "apr_id": "3fb42e35198d2d004afef77e7e89c3ba", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() \n{\n    int k, n;\n    char str[1000];\n    scanf(\"%d\", &k);\n    while(k--) \n    {\n        scanf(\"%d\", &n);\n        char array[26];\n        for (int u = 0; u < 26; u++)\n            array[u] = 0;\n        for (int j = 0; j < n; j++)\n        {\n            scanf(\"%s\", str);\n            for (int k = 0; str[k] != '\\0'; k++)\n                array[(int)str[k] - (int)'a']++;\n        }\n\n        int y = 1;\n        for (int j = 0; j < 26; j++)\n            if (array[j] % n != 0)\n                y = 0;\n        if (y)\n            printf(\"%s\\n\", \"YES\");\n        else\n            printf(\"%s\\n\", \"NO\");\n    }\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int t, n;\n    char s[1000];\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; i++)\n    {\n        scanf(\"%d\", &n);\n        int cnt[26];\n        for (int j = 0; j < 26; j++)\n            cnt[j] = 0;\n        for (int j = 0; j < n; j++)\n        {\n            scanf(\"%s\", s);\n            for (int k = 0; s[k] != '\\0'; k++)\n                cnt[(int)s[k] - (int)'a']++;\n\n\n        }\n\n        int y = 1;\n        for (int j = 0; j < 26; j++)\n            if (cnt[j] % n != 0)\n                y = 0;\n        if (y)\n            printf(\"%s\\n\", \"YES\");\n        else\n            printf(\"%s\\n\", \"NO\");\n        \n\n\n    }\n\n\n\nreturn 0;\n}"}
{"similarity_score": 0.9241540256709452, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "f71b7f4fc79b0a715fb84508b512f7e3", "bug_code_uid": "5bc611d4ffcd82a88f6fa8c79e2332a4", "src_uid": "25232f4244004fa4c130892957e5de84", "apr_id": "f7fa234e422b81dfa9a2bebd64a4e4ac", "difficulty": 1900, "tags": ["dp", "combinatorics", "two pointers", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAXM 1000\nchar g[MAXM];\n\nint main(){\n  int n, m, x, i, j, s = 0;\n  scanf(\"%d%d\", &n, &m);\n  g[0] = 1;\n  for(i = 0; i < n; i++){\n    scanf(\"%d\", &x);\n    for(j = m - 1; j >= 0; j--){\n      if(g[j]){\n        if((j + x) % m == 0){\n          printf(\"YES\");\n          return 0;\n        }\n        else\n          g[(j + x) % m] = 1;\n      }\n    }\n  }\n  printf(\"NO\");\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAXM 1000\nchar g[2][MAXM];\n\nint main(){\n  int n, m, x, i, j, lin;\n  scanf(\"%d%d\", &n, &m);\n  g[1][0] = 1;\n  for(i = 0; i < n; i++){\n    lin = i & 1;\n    scanf(\"%d\", &x);\n    for(j = m - 1; j >= 0; j--){\n      if(g[!lin][j]){\n        g[lin][j] = 1;\n        if((j + x) % m == 0){\n          printf(\"YES\");\n          return 0;\n        }\n        else\n          g[lin][(j + x) % m] = 1;\n      }\n    }\n  }\n  printf(\"NO\");\n  return 0;\n}\n"}
{"similarity_score": 0.5130759651307597, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "20839c39dbf9f7bbebde6894817320c7", "bug_code_uid": "3df0f4d33d5bac00aa7fbda2c8992204", "src_uid": "b43dee2f223c869a35b1b11ceb9d2b6b", "apr_id": "b22f6bbaadb929e13ee5f86933bf555a", "difficulty": 900, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n\n        if(n%3==0)\n            printf(\"%da 0 0\\n\", n/3);\n        else if((n-5)%3==0)\n            printf(\"%db 1 0\\n\", (n-5)/3);\n        else if((n-7)%3==0)\n            printf(\"%dc 0 1\\n\", (n-7)/3);\n        else\n            printf(\"-1\\n\");     //1 2 4\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        if(n==1 || n==2 || n==4)\n            printf(\"-1\\n\");\n        else if(n%3==0)\n            printf(\"%d 0 0\\n\", n/3);\n        else if((n-5)%3==0)\n            printf(\"%d 1 0\\n\", (n-5)/3);\n        else if((n-7)%3==0)\n            printf(\"%d 0 1\\n\", (n-7)/3);\n    }\n    return 0;\n}"}
{"similarity_score": 0.11314984709480122, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "5abbdd4ca2a10c0ce644fee4b361d1ce", "bug_code_uid": "6e76266bbae93ee4888ae2219f54a2b2", "src_uid": "fa761cd247a815f105668b716c20f0b4", "apr_id": "f225c5ada32c1133d795573ccfa28128", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint slicer(char s[], int index, int len);\r\nint check_palindrome(char s[], int len);\r\n\r\nint main(){\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tfor(int i = 0; i < n; i++){\r\n\t\tint l;\r\n\t\tscanf(\"%d\", &l);\r\n\t\tchar s[l];\r\n\t\tscanf(\"%s\", s);\r\n\t\tint count = 0;\r\n\t\tfor(int j = 0; j < l/2; j++){\r\n\t\t\tint check = slicer(s, j, l);\r\n\t\t\tif(check == 1){\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(l%2 == 0){\r\n\t\t\tprintf(\"%d\", count*2);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"%d\\n\", count*2 + 1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nint slicer(char s[], int index, int len){\r\n\tchar s1[len-1];\r\n\t//printf(\"%d\\n\", index);\r\n\tfor(int i = 0, j = 0; i < len; i++){\r\n\t\tif(i != index){\r\n\t\t\ts1[j++] = s[i];\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tint check = check_palindrome(s1, len-1);\r\n\t//printf(\"%s\\n\", s1);\r\n\tif(check == 1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nint check_palindrome(char s[], int len){\r\n\tfor(int i = 0; i < len/2; i++){\r\n\t\tif(s[i] != s[len-i-1]){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tfor(int i = 0; i < n; i++){\r\n\t\tint l;\r\n\t\tscanf(\"%d\", &l);\r\n\t\tchar s[l];\r\n\t\tscanf(\"%s\", s);\r\n\t\tint count = 0;\r\n\t\tfor(int j = l/2; j >= 0; j--){\r\n\t\t\tif(s[j] != s[j-1]){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tif(l%2 == 0){\r\n\t\t\tprintf(\"%d\\n\", count*2);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"%d\\n\", count*2 + 1);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n"}
{"similarity_score": 0.856544502617801, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0666e6eeb3ca4f1a93923bc40613736d", "bug_code_uid": "543e8ef11ddf62637aa198341e151d46", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "7b6300a3d76d290fc0af7935eaa5c993", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n,i,k;\n\tchar *word;\n\tchar array[100000][33]={0};\n\tint re[100000]={0};\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",array[i]);\n\t\tword=array[i];\n\t\tfor(k=i-1;k>-1;k--)\n\t\t{\n\t\t\tif(strcmp(array[k],word)==0)\n\t\t\t{\n\t\t\t\tre[i]=re[k]+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(re[i]==0)\n\t\t{\n\t\t\tprintf(\"OK\\n\");\n\t\t}\n\t\telse printf(\"%s%d\\n\", word,re[i]);\n\t}\n\tscanf(\"%s\",word);\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint strCompare(char* a,char*c)\n{\n\tfor(int b=0;b<33;b++)\n\t{\n\t\tif(a[b]!=c[b]) return 0;\n\t\tif(a[b]=='\\0') return 1;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint n,i,k;\n\tchar *word;\n\tchar array[100000][33]={0};\n\tint re[100000]={0};\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",array[i]);\n\t\tword=array[i];\n\t\tfor(k=i-1;k>-1;k--)\n\t\t{\n\t\t\tif(strCompare(array[k],word)==1)\n\t\t\t{\n\t\t\t\tre[i]=re[k]+1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(re[i]==0)\n\t\t{\n\t\t\tprintf(\"OK\\n\");\n\t\t}\n\t\telse printf(\"%s%d\\n\", word,re[i]);\n\t}\n\tscanf(\"%s\",word);\n}"}
{"similarity_score": 0.983177570093458, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "0cca635575f1781c91e0fd49cb7cd63e", "bug_code_uid": "632c387a37d9875c7d849fdd11468952", "src_uid": "46920a192a8f5fca0f2aad665ba2c22d", "apr_id": "4b7bdc617040ae9ea02b0e856efe3b79", "difficulty": 1700, "tags": ["dp", "graphs", "shortest paths"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n\tint ans[505],i,j,k,l,n,m,a[505][505],r[505],av[505]={0},sum,x;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&r[i]);\n\tfor(i=n;i>=1;i--) {\n\t\tx = r[i];\n\t\tav[r[i]] = 1;\n\t\tsum = 0;\n\t\tfor(j=1;j<=n;j++)\n\t\t\tfor(k=1;k<=n;k++) {\n\t\t\t\tif(a[j][k] > a[j][x]+a[x][k])\n\t\t\t\t\ta[j][k] = a[j][x] + a[x][k];\n\t\t\t\tif(av[j] && av[k])\n\t\t\t\t\tsum += a[j][k];\n\t\t\t}\n\t\tans[i] = sum;\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%d%c\",ans[i],i==n?'\\n':' ');\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main() {\n\tlong long int ans[505],i,j,k,l,n,m,a[505][505],r[505],av[505]={0},sum,x;\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++)\n\t\t\tscanf(\"%lld\",&a[i][j]);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&r[i]);\n\tfor(i=n;i>=1;i--) {\n\t\tx = r[i];\n\t\tav[r[i]] = 1;\n\t\tsum = 0;\n\t\tfor(j=1;j<=n;j++)\n\t\t\tfor(k=1;k<=n;k++) {\n\t\t\t\tif(a[j][k] > a[j][x]+a[x][k])\n\t\t\t\t\ta[j][k] = a[j][x] + a[x][k];\n\t\t\t\tif(av[j] && av[k])\n\t\t\t\t\tsum += a[j][k];\n\t\t\t}\n\t\tans[i] = sum;\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%lld%c\",ans[i],i==n?'\\n':' ');\n\treturn 0;\n}\n"}
{"similarity_score": 0.9943977591036415, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5424db2e42aedb3fd129f2ef22b8a3b4", "bug_code_uid": "22804e80458a5def6c700a3135b91327", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "fa3f4977882ff9e0d453cde0dc5a1485", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n    long long m,n,x;\n\n    scanf(\"%lld %lld\", &m, &n);\n\n    if(n == 0){\n\n        printf(\"%lld\",0);\n\n        return 0;\n    }\n    else{\n\n        if(n % m == 0){\n\n            x = n/m;\n\n            printf(\"%d\",x);\n        }\n        else{\n\n            x = (n/m) + 1;\n\n            printf(\"%d\",x);\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n    long long m,n,x;\n\n    scanf(\"%lld %lld\", &m, &n);\n\n    if(n == 0){\n\n        printf(\"%lld\",0);\n\n        return 0;\n    }\n    else{\n\n        if(n % m == 0){\n\n            x = n/m;\n\n            printf(\"%lld\",x);\n        }\n        else{\n\n            x = (n/m) + 1;\n\n            printf(\"%lld\",x);\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.96398891966759, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "50f69d01106decaa2ea301a1be24a2b4", "bug_code_uid": "b18b8a41b6c4e735caa57b16c7c81280", "src_uid": "2fa3e88688b92c27ad26a23884e26009", "apr_id": "d2981c228b1fa267a8791604e2736ce3", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<conio.h>\n#include<stdio.h>\nint main()\n{\n    int t;\n    int n1;\n    scanf(\"%d\",&t);\n    while(t)\n    {\n        scanf(\"%d\",&n1);\n        printf(\"1 %d\\n\",n1-1);\n    }\n}", "fixed": "#include<conio.h>\n#include<stdio.h>\nint main()\n{\n    int t;\n    int n1;\n    scanf(\"%d\",&t);\n    while(t)\n    {\n        scanf(\"%d\",&n1);\n        printf(\"1 %d\\n\",n1-1);\n        t--;\n    }\n}"}
{"similarity_score": 0.9924242424242424, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3be36aeb89c804ec5821165139dca7a8", "bug_code_uid": "7e1c9717e8293bcb2524b39a67405a19", "src_uid": "7c483498f497f4291e3d33375c0ebd53", "apr_id": "38b0ce13833c12ec79b69bdcd0dc2a4a", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,l;\n    scanf(\"%d\",&n);\n    printf(\"%d\",n);\n    for(i=0;i<n;i++)\n        printf(\"1 \");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,l;\n    scanf(\"%d\",&n);\n    printf(\"%d\\n\",n);\n    for(i=0;i<n;i++)\n        printf(\"1 \");\n}\n"}
{"similarity_score": 0.7802197802197802, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "5168c26a10b3acb5989d3d14501fc113", "bug_code_uid": "926aa51a89778f04e96b00481ed80078", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "f21045562485499d49e41852de33b0a4", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,m,i,j,c,d,max=0,max2=0;\n    scanf(\"%d %d\", &n,&m);\n    int a[n][m], b[101]={0};\n    for(i=0;i<m;i++)\n    {\n        int max=0;\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\", &a[i][j]);\n            if(max<a[i][j])\n            {\n                max=a[i][j];\n                c=j;\n            }\n            b[c]++;\n        }\n    }\n    for(i=0;i<100;i++)\n    {\n        if(max2<b[i])\n        {\n            max2=b[i];\n            d=i;\n        }\n    }\n    printf(\"%d\", d+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,c,d,max=-1;\n    scanf(\"%d %d\", &n,&m);\n    int a[n+100][m+100], b[101]= {0};\n    for(i=0; i<m; i++)\n    {\n        int max=-1;\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%d\", &a[i][j]);\n            if(max<a[i][j])\n            {\n                max=a[i][j];\n                c=j;\n            }\n\n        }\n        b[c]++;\n    }\n    max=-1;\n    for(i=0; i<100; i++)\n    {\n        if(b[i]>max)\n        {\n            max=b[i];\n            d=i;\n        }\n    }\n    printf(\"%d\", d+1);\n    return 0;\n}\n"}
{"similarity_score": 0.7820895522388059, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "60a8449e14f86bd62fc94275a2b27e62", "bug_code_uid": "1fee75dedbf919803dfd26982d6b269c", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "98555526a6824752144cc0ea07f56dd0", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint num[100100];\nint main(){\n    int i,n,m,a,b,c,d;\n    while(scanf(\"%d\",&n)==1){\n        int sum=1,t=0;\n        scanf(\"%d%d\",&c,&d);\n        for(i=1;i<n;i++){\n            scanf(\"%d%d\",&a,&b);\n            if(a==c&&b==d)\n                sum++;\n            else{\n                num[t++]=sum;\n                sum=1;c=a;d=b;\n            }\n            \n        }\n        int max=-1000010;\n        for(i=0;i<n;i++)\n            if(num[i]>max)\n                max=num[i];\n        printf(\"%d\\n\",max);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int i,n,m,a,b,c,d;\n    while(scanf(\"%d\",&n)==1){\n        int sum=1,max=-1;\n        scanf(\"%d%d\",&c,&d);\n        for(i=1;i<n;i++){\n            scanf(\"%d%d\",&a,&b);\n            if(c==a&&d==b)\n                sum++;\n            else{\n                if(sum>max)\n                    max=sum;\n                sum=1;\n                c=a;d=b;\n            }\n        }\n        if(sum>max)max=sum;\n        printf(\"%d\\n\",max);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9984871406959153, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "582a2c645131fbc9b34e7bbf0f4e902d", "bug_code_uid": "68456498ae63a3ab2c8204a78ab436dd", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "c59d4ea30d4bd7f503f15c40d33b84d3", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n     int n,i;\n     double sum=0.0;\n     scanf(\"%d\", &n);\n\n      int a[n];\n     for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n      for(i=0;i<n;i++)\n            {\n                sum = a[i] + sum;\n            }\n\n\n        sum=sum/n;\n        printf(\"%0.12lf\",sum);\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n     int n,i;\n     double sum=0.0;\n     scanf(\"%d\", &n);\n\n      int a[n];\n     for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n      for(i=0;i<n;i++)\n            {\n                sum = a[i] + sum;\n            }\n\n\n        sum=sum/n;\n        printf(\"%0.12f\",sum);\n   return 0;\n}\n"}
{"similarity_score": 0.8914728682170543, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c28fc2c6159741e2955620d882af61b3", "bug_code_uid": "83cc53e40314449ca5c893cfc5339e44", "src_uid": "ce4443581d4ee12db6607695cd567070", "apr_id": "a33140855e77a32802419489ae8d30af", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int t;\n scanf(\"%d\",&t);\n  char a[t+1];\n   scanf(\"%s\",a);\n   for(int i=0;i<(t-1);i++)\n   {\n        if(a[i]!=a[i+1])\n         {printf(\"YES\\n%c%c\\n\",a[i],a[i+1]);return 0;}\n    }\n  printf(\"NO\\n\");\n return 1;\n}\n\n    \n", "fixed": "#include<stdio.h>\nint main()\n{\n   long long int t;\n scanf(\"%lld\",&t);\n  char a[t+1];\n   scanf(\"%s\",a);\n   for(long long int i=0;i<(t-1);i++)\n   {\n        if(a[i]!=a[i+1])\n         {printf(\"YES\\n%c%c\\n\",a[i],a[i+1]);return 0;}\n    }\n  printf(\"NO\\n\");\n return 0;\n}\n\n    \n"}
{"similarity_score": 0.1150990099009901, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "6b295d19ee391cfa24df1da69578b2b1", "bug_code_uid": "e69033cb0a871d23ac69dcc3dd8c11cf", "src_uid": "a1effd6a0f6392f46f6aa487158fef7d", "apr_id": "25ce2b9da2c96680275b8c7fb6a0fcc8", "difficulty": 1600, "tags": ["number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint gcd(int a,int b)\n{   int c;  \n  while(a!=0)\n  {   c=b%a;\n      b=a;\n      a=c;\n  }\n  //printf(\"%d\",b);\n  return b;\n}\nint s[40010];\nint main ()\n{     //int c=gcd(6,15);\n      int t;  scanf(\"%d\",&t);\n    while(t--)\n    {   int a,b,n,c;\n       scanf(\"%d %d %d\",&a,&b,&n);\n        if(a>b) {c=a;a=b;b=c;}\n        int LCM=a*b/gcd(a,b);\n        int l,r;\n         memset(s,0,sizeof(s));\n         int ans=0;\n         for(int i=b;i<LCM;i++)\n         {   if(i%a!=(i%b)%a) ans++,s[i]=1;\n\t\t }\n\t\t //printf(\"%d %d %d\",b,LCM,ans);\n       for(int i=1;i<=n;i++)\n       {   scanf(\"%d %d\",&l,&r);\n            long long  sum=0;\n          /*if(r-l<=LCM)  \n          {   for(int i=r;i<=l;i++)\n               {   if(s[i%LCM]) sum++;\n\t\t\t   }\n\t\t\t   printf(\"%lld\\n\",sum);\n\t\t  }\n\t\t  else   */\n\t\t  {   long long x=(l-1)/LCM+1,y=r/LCM;\n\t\t      sum=(y-x)*ans;\n\t\t      for(int i=l;i<x*LCM;i++)\n\t\t       {   if(s[i%LCM]) sum++;\n\t\t\t   }\n\t\t\t for(int i=y*LCM+1;i<=r;i++)\n\t\t\t   {   if(s[i%LCM]) sum++;\n\t\t\t   }\n\t\t\t   printf(\"%lld\\n\",sum);\n\t\t  }\n\t   }\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long s[41000];\nlong long l,r,sum;\nlong long len;\nlong long get(long long x)\n{\n\tlong long cnt=x/len;\n\treturn cnt*1ll*s[len]+s[x%len]*1ll;\n}\nint main ()\n{   int t; scanf(\"%d\",&t);\n   while(t--)\n   {   int a,b,q; scanf(\"%d %d %d\",&a,&b,&q);\n         len=a*b;\n        s[0]=0;\n       for(int i=1;i<=a*b;i++)\n          {  s[i]=s[i-1]; \n\t\t    if(i%a%b!=i%b%a) {s[i]++;}\n\t\t  }\n       for(int i=1;i<=q;i++)\n       {   scanf(\"%lld %lld\",&l,&r);\n           printf(\"%lld \",get(r)-get(l-1));\n\t   }\n\t   printf(\"\\n\");\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.9466484268125855, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2ca371d4170127f8fd7cc25e950d443c", "bug_code_uid": "72b66ff2615ebd659288b7eb34b2909b", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "75732c19705cb5c257e4c554fff1738b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int n, h, i;\n\n    scanf(\"%i%*c%i%*c\", &n,&h);\n\n    int height[n];\n\n    for(i=0; i<n; i++){\n        scanf(\"%i%*c\", &height[i]);\n    }\n\n    int width = 0;\n    for(i=0; i<n; i++){\n        if(height[i] <= h){\n            width = width + 1;\n        }else{\n            width = width + 2;\n        }\n    }\n\n    return width;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    int n, h, i;\n\n    scanf(\"%i%*c%i%*c\", &n,&h);\n\n    int height[n];\n\n    for(i=0; i<n; i++){\n        scanf(\"%i%*c\", &height[i]);\n    }\n\n    int width = 0;\n    for(i=0; i<n; i++){\n        if(height[i] <= h){\n            width = width + 1;\n        }else{\n            width = width + 2;\n        }\n    }\n\n    printf(\"%i\", width);\n    return 0;\n}\n"}
{"similarity_score": 0.9523809523809523, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e87c8dcc41fbd979cdd6130f6758d648", "bug_code_uid": "3cf769f08cf4174ae8a6c6ec9e021206", "src_uid": "eb3155f0e6ba088308fa942f3572f582", "apr_id": "84243ba7e7bbbdde5a22502f47542d5d", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint n,x,a[6],b[43],res;\n\tb[4]=0;b[8]=1;b[15]=2;b[16]=3;b[23]=4;b[42]=5;\n\tscanf(\"%d\",&n);\n\tres=n;\n\twhile(n--){\n\t\tscanf(\"%d\",&x);\n\t\tx=b[x];\n\t\tif(x==0){\n\t\t\ta[x]++;\n\t\t}\n\t\telse{\n\t\t\tif(a[x-1]>0){\n\t\t\ta[x]++;\n\t\t\ta[x-1]--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",res-a[5]*6);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tstatic int a[6],b[43];\n\tint n,x,res;\n\tb[4]=0;b[8]=1;b[15]=2;b[16]=3;b[23]=4;b[42]=5;\n\tscanf(\"%d\",&n);\n\tres=n;\n\twhile(n--){\n\t\tscanf(\"%d\",&x);\n\t\tx=b[x];\n\t\tif(x==0){\n\t\t\ta[x]++;\n\t\t}\n\t\telse{\n\t\t\tif(a[x-1]>0){\n\t\t\ta[x]++;\n\t\t\ta[x-1]--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",res-a[5]*6);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9000799360511591, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "52a65c54d8908acb4d860345e2b4a97c", "bug_code_uid": "82ea54902433b52c187c90b222e41bf9", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "1ed4e6e957502087f072e15f25dc3e59", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int q,flag=0;\n    scanf(\"%d\",&q);\n    for(int i=1;i<=q;q++)\n    {\n        flag=0;\n        long int a,b,n,s,no;\n        scanf(\"%ld %ld %ld %ld\",&a,&b,&n,&s);\n        no=s/n;\n        if(no>=a)\n        {\n            if(n*a+b<s)\n            flag=0;\n            else\n            flag=1;\n        }\n        else\n        {\n            s=s-(a*no);\n            if(s<=b)\n            flag=1;\n            else\n            flag=0;\n        }\n        if(flag==1)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int q,flag=0;\n    scanf(\"%d\",&q);\n    for(int i=1;i<=q;i++)\n    {\n        flag=0;\n        long int a,b,n,s,no;\n        scanf(\"%ld %ld %ld %ld\",&a,&b,&n,&s);\n        no=s/n;\n        if(no>=a)\n        {\n            if(n*a+b<s)\n            flag=0;\n            else\n            flag=1;\n        }\n        else if(no==0)\n        {\n            if(s<=b)\n            flag=1;\n            else\n            flag=0;\n        }\n        else\n        {\n            s=s-(n*no);\n            if(s<=b)\n            flag=1;\n            else\n            flag=0;\n        }\n        if(flag==1)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.717663421418637, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b6c22130a29c8a82e7f0ca9728f4c2ad", "bug_code_uid": "f2031de3beaf2ec581b850dfa66ca767", "src_uid": "f2fc865a44b39179261a7311adf48390", "apr_id": "662206c265d3a22016bbab64a6f46aa1", "difficulty": 1200, "tags": ["data structures", "two pointers", "binary search"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int arr[n];\n    long sum = 0;\n    for (int i=0;i<n;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    int l=0,r=n-1;\n    long suml = 0;\n    long sumr = 0;\n    while (l<r){\n        if (suml>sumr){\n            r--;\n            sumr += arr[r];\n        }\n        else if (suml<sumr){\n            l++;\n            suml += arr[l];\n        }\n        else{\n            sum = suml;\n            if (l==0 && r==n-1){\n                suml += arr[l];\n                sumr += arr[r];\n            }\n            else{\n                l++;\n                r--;\n                // if (l>=r){\n                //     break;\n                // }\n                suml += arr[l];\n                sumr += arr[r];\n            }\n        }\n    }\n    printf(\"%ld\\n\",sum);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int arr[n];\n    long long int sum = 0;\n    for (int i=0;i<n;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    int l=0,r=n-1;\n    long long int suml = arr[0];\n    long long int sumr = arr[n-1];\n    while (l<r){\n        if (suml>sumr){\n            r--;\n            sumr += arr[r];\n        }\n        else if (suml<sumr){\n            l++;\n            suml += arr[l];\n        }\n        else{\n            sum = suml;\n            l++;\n            r--;\n            suml += arr[l];\n            sumr += arr[r];\n        }\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}"}
{"similarity_score": 0.7485380116959064, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "b1598a62623a7007ffc199f0be9454f9", "bug_code_uid": "d4ef4231b54afb7296ed5f3eefeca757", "src_uid": "24fe280b88575516ec679ff78641440e", "apr_id": "0b4fb3fa7ae83764c294d46654facef0", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (void) {\n\tint i, n, diff = 0, a, g;\n\tchar *out;\n\tscanf (\"%d\", &n);\n\tout = malloc (n + 1); out[n] = '\\0';\n\tfor (i = 0; i < n; ++i) {\n\t\tscanf (\"%d %d\", &a, &g);\n\t\tif (diff <= 0) {\n\t\t\tout[i] = 'A';\n\t\t\tdiff += a;\n\t\t} else {\n\t\t\tout[i] = 'G';\n\t\t\tdiff -= g;\n\t\t}\n\t}\n\tprintf (\"%s\\n\", out);\n\texit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (void) {\n  int i, n, diff = 0, a, g;\n  scanf (\"%d\", &n);\n  for (i = 0; i < n; ++i) {\n    scanf (\"%d %d\", &a, &g);\n\t\tif (abs (diff + a) <= abs (diff - g)) {\n\t\t\tputchar ('A');\n\t\t\tdiff += a;\n\t\t} else {\n\t\t\tputchar ('G');\n\t\t\tdiff -= g;\n\t\t}\n  }\n\tputchar ('\\n');\n  exit (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9017632241813602, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f3ca3b178c3b36f02266fc1e4149ff57", "bug_code_uid": "d7b8597fd2ef2918d6f9eea31dda1dd1", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "081a86b9136a71b502ce110236c488ea", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{int x1,y1,x2,y2;\nscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\nif(x1==y1&&x2==y2)\n    printf(\"%d %d %d %d\",x1,y2,x2,y1);\nelse if(x1==x2)\n    printf(\"%d %d %d %d\",x1+(y2-y1),y2,x1+(y2-y1),y1);\n   else if(y1==y2)\n    printf(\"%d %d %d %d\",x1,y1-(x2-x1),x2,y2-(x2-x1));\nelse if(x2-(y2-y1)==x1&&y2-(x2-x1)==y1)\n    printf(\"%d %d %d %d\",x1,y2,x2,y1);\nelse\n    printf(\"-1\");\n}\n", "fixed": "#include<stdio.h>\nmain()\n{int x1,y1,x2,y2;\nscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\nif(x1==y1&&x2==y2)\n    printf(\"%d %d %d %d\",x1,y2,x2,y1);\nelse if(x1==x2)\n    printf(\"%d %d %d %d\",x1+(y2-y1),y2,x1+(y2-y1),y1);\n   else if(y1==y2)\n    printf(\"%d %d %d %d\",x1,y1-(x2-x1),x2,y2-(x2-x1));\nelse if(x2-x1==y2-y1||x1-x2==y2-y1||x2-x1==y1-y2||x1-x2==y1-y2)\n    printf(\"%d %d %d %d\",x1,y2,x2,y1);\nelse\n    printf(\"-1\");\n}\n"}
{"similarity_score": 0.7705534658785599, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "631275eeaa13be3ddaecc79a76d67ebe", "bug_code_uid": "e522840d4f566f1624810663e815279f", "src_uid": "146c856f8de005fe280e87f67833c063", "apr_id": "d1f38970ba0489dd91fba5d5483ca055", "difficulty": 2000, "tags": ["hashing", "string suffix structures", "data structures", "binary search", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// 291C.cpp : Defines the entry point for the console application.\n//\n\n//#include \"stdafx.h\"\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define MAX_N 350000\n#define MAX_L 6500000\n\nint n,m;\nchar* N[MAX_N];\nchar M[MAX_L];\n\nint main()\n{\n\tint i,j,q,d,y;\n\twhile(scanf(\"%d %d\",&n,&m)!=EOF){\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%s\",&M);\n\t\t\tN[i]=(char*)malloc(sizeof(char)*strlen(M+5));\n\t\t\tstrcpy(N[i],M);\n\t\t}\n\t\tfor(i=0;i<m;i++){\n\t\t\ty=0;\n\t\t\tscanf(\"%s\",&M);\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tif(strlen(M)==strlen(N[j])){\n\t\t\t\t\td=0;\n\t\t\t\t\tfor(q=0;q<strlen(M);q++){\n\t\t\t\t\t\tif(N[j][q]!=M[q])\n\t\t\t\t\t\t\td++;\n\t\t\t\t\t\tif(d>1)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(d==1){\n\t\t\t\t\t\ty=1;\n\t\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!y)\n\t\t\t\tprintf(\"NO\\n\");\t\n\t\t}\n\t}\n\treturn 0;\n}\n\n", "fixed": "// 291C.cpp : Defines the entry point for the console application.\n//\n\n//#include \"stdafx.h\"\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define MAX_N 350000\n#define MAX_L 6500000\n\nint n,m,l[MAX_N],a[MAX_N],b[MAX_N],c[MAX_N];\nchar* N[MAX_N];\nchar M[MAX_L];\n\nint main()\n{\n\tint i,j,q,d,y,ml,am,bm,cm;\n\twhile(scanf(\"%d %d\",&n,&m)!=EOF){\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%s\",&M);\n\t\t\tN[i]=(char*)malloc(sizeof(char)*(strlen(M)+5));\n\t\t\tstrcpy(N[i],M);\n\t\t\tl[i]=strlen(N[i]);\n\t\t\tfor(j=0;j<l[i];j++){\n\t\t\t\tif(N[i][j]=='a') a[i]++;\n\t\t\t\tif(N[i][j]=='b') b[i]++;\n\t\t\t\tif(N[i][j]=='c') c[i]++;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<m;i++){\n\t\t\tam=bm=cm=y=0;\n\t\t\tscanf(\"%s\",&M);\n\t\t\tml=strlen(M);\n\t\t\tfor(j=0;j<ml;j++){\n\t\t\t\tif(M[j]=='a') am++;\n\t\t\t\tif(M[j]=='b') bm++;\n\t\t\t\tif(M[j]=='c') cm++;\n\t\t\t}\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tif(ml==l[j] && abs(am-a[j])<2 && abs(bm-b[j])<2 && abs(cm-c[j])<2){\n\t\t\t\t\td=0;\n\t\t\t\t\tfor(q=0;q<ml;q++){\n\t\t\t\t\t\tif(N[j][q]!=M[q])\n\t\t\t\t\t\t\td++;\n\t\t\t\t\t\tif(d>1)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(d==1){\n\t\t\t\t\t\ty=1;\n\t\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!y)\n\t\t\t\tprintf(\"NO\\n\");\t\n\t\t}\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.5845648604269293, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "ed8a033c7cd68d75380d1e8430397c70", "bug_code_uid": "a725ee8683e1df3dc20add2146a03554", "src_uid": "a51d2e6e321d7db67687a594a2b85e47", "apr_id": "f5b19c6e698d595990eb5b1da108197c", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar dizi[100000],asil[100000],m='a';\nint a,b,c,d,sayac,i,k,encok,j,harf,bekci,sayac;\nint main (){\n\tscanf(\"%d\",&a);\n\tscanf(\"%s\",asil);\n\tencok=strlen(asil);\n\ta--;\n\twhile(a--){\n\t\tscanf(\"%s\",dizi);\n\t\tfor(i=0;i<encok;i++)\n\t\t\tif(dizi[i]!=asil[i]&&dizi[i]!='?'&&asil[i]!='?')\n\t\t\t{\n\t\t\t\tbekci=1;\n\t\t\t\tsayac++;\n\t\t\t}\n\t\t\telse if(dizi[i]!=asil[i]&&asil[i]=='?')\n\t\t\t\tasil[i]=dizi[i];\n\t}\n\tif(bekci==1)\n\t{\n\t\tfor(i=0;i<sayac;i++)\n\t\t\tprintf(\"?\");\n\t\treturn 0;\n\t}\n\tfor(j=0;j<encok;j++){\n\tif(asil[j]!='?')\n\t\tprintf(\"%c\",asil[j]);\n\t\telse\n\t\tprintf(\"a\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar dizi[100000],asil[100000],m='a';\nint a,b,c,d,sayac,i,k,encok,j,harf,bekci,sayac;\nint main (){\n\tscanf(\"%d\",&a);\n\tscanf(\"%s\",asil);\n\tencok=strlen(asil);\n\ta--;\n\twhile(a--){\n\t\tscanf(\"%s\",dizi);\n\t\tfor(i=0;i<encok;i++)\n\t\t\tif(dizi[i]!=asil[i]&&dizi[i]!='?'&&asil[i]!='?'&&asil[i]!='1')\n\t\t\t\tasil[i]='1';\n\t\t\telse if(dizi[i]!=asil[i]&&asil[i]=='?')\n\t\t\t\tasil[i]=dizi[i];\n\t}\n\tif(bekci==1)\n\t{\n\t\tfor(i=0;i<sayac;i++)\n\t\t\tprintf(\"?\");\n\t\treturn 0;\n\t}\n\tfor(j=0;j<encok;j++)\n\t{\n\t\tif(asil[j]!='?'&&asil[j]!='1')\n\t\tprintf(\"%c\",asil[j]);\n\t\telse if (asil[j]=='1')\n\t\tprintf(\"?\");\n\t\telse printf(\"a\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.35492957746478876, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "2042568c670849883997ea5d9a7328ce", "bug_code_uid": "079da9ff725957fef4c3bfa2853e6d62", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "30e1f21989fa0a2e357db057d43471bd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[100],b[100],c[100],i,n,minimum;\n    scanf(\"%d\",&n);\n    c[0]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n        if(i==0)\n        {\n            c[i]=b[i]-a[i]+c[i];\n        }\n        else if\n        {\n            c[i]=b[i]-a[i]+c[i-1];\n        }\n    }\n    minimum =c[0];\n    for(i=0;i<n;i++)\n    {\n        if(c[i]>minimum)\n            minimum =c[i];\n    }\n    printf(\"%d\\n\",minimum);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,a,b,sum=0,max=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        sum = sum+(b-a);\n        if(sum>max)\n        max =sum;\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.6615087040618955, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a6596302d498c0a182e52b1c1ecb28b9", "bug_code_uid": "2c47f556864db83546b734ba9e28c7cc", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "d5002b1f25f3ac9f547d523a837bbea8", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j,t,p;\n    scanf(\"%d\",&n);\n    int r[100005][2];\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d%d\",&r[i][0],&r[i][1]);\n    }\n    for(i=0; i<n-1; i++)\n    {\n        for(j=i+1; j<n; j++)\n        {\n            if(r[i][0]>r[j][0])\n            {\n                t=r[j][0];\n                p=r[j][1];\n                r[j][0]=r[i][0];\n                r[j][1]=r[i][1];\n                r[i][0]=t;\n                r[i][1]=p;\n            }\n        }\n\n    }\n    for(i=0; i<n-1; i++)\n    {\n        if(r[i][1]>r[i+1][1])\n        {\n            printf(\"Happy Alex\\n\");\n            return 0;\n        }\n    }\n\n    printf(\"Poor Alex\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j,t,p;\n    scanf(\"%d\",&n);\n    int r[100005][2];\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d%d\",&r[i][0],&r[i][1]);\n    }\n    for(i=0; i<n; i++)\n    {\n        if(r[i][1]>r[i][0])\n        {\n            printf(\"Happy Alex\\n\");\n            return 0;\n        }\n    }\n\n    printf(\"Poor Alex\\n\");\n    return 0;\n}"}
{"similarity_score": 0.993849938499385, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3337d9e0f3847bc002b28d0ddee81bac", "bug_code_uid": "bc6a2c906279a48d8ab4f83a812be95f", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "800ed5b50066d7c28778844191abdd21", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<conio.h>\n\nint main(void){\n\n    long long int n,k,a=0,i,b=0,t,j=0;\n\n    scanf(\"%lld\", &t);\n\n    for(i=0;i<t;i++){\n\n            scanf(\"%lld \", &n);\n\n            a=pow(2,n);\n\n            for(j=1;j<=((n/2)-1);j++)\n                a=a+pow(2,j);\n\n\n            for(j=n/2;j<=n-1;j++)\n                b=b+pow(2,j);\n\n\n            printf(\"%lld\\n\", a-b);\n            }}\n\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<conio.h>\n\nint main(void){\n\n    long long int n,k,a=0,i,b=0,t,j=0;\n\n    scanf(\"%lld\", &t);\n\n    for(i=0;i<t;i++){\n\n            scanf(\"%lld \", &n);\n\n            a=pow(2,n);b=0;\n\n\n            for(j=1;j<=((n/2)-1);j++)\n                a=a+pow(2,j);\n\n\n            for(j=n/2;j<=n-1;j++)\n                b=b+pow(2,j);\n\n\n            printf(\"%lld\\n\", a-b);\n            }}\n\n\n"}
{"similarity_score": 0.41076487252124644, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "1b274c1f7f8e4ff8aa22693b6563129e", "bug_code_uid": "e7dd5ca47189b11834ac2edad32604a7", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "e29ebfb7cf55a76f3a7320dbd5274eff", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <math.h>\n#include <stdio.h>\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (unsigned int i = 0; i < t; i++) \n\t{\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tint x = 0, k = 1, sum = 0;\n\n\t\twhile (sum != n) \n\t\t{   \n\t\t\tx++; sum = 0;\n\t\t\twhile (sum < n) \n\t\t\t{\n\t\t\t\tsum += pow(2, k++ - 1) * x;\n\t\t\t}\n\t\t}\n\n\t\tprintf( \"%d\\n\", x);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdlib.h>\n#include <math.h>\n#include <stdio.h>\n\n int main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\n\twhile (t--)\n\t{\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\n \t\tfor (unsigned int k = 2; k < 32; k++)\n\t\t{   \n\t\t\tlong long int sumBy_x = pow(2, k) - 1;\n\t\t\tif (n % sumBy_x == 0) \n\t\t\t{\t\n\t\t\t\tint x = n / sumBy_x;\n\t\t\t\tprintf(\"%d\\n\", x);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9978165938864629, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5fe7938e3d6a3941ce6334216126d19d", "bug_code_uid": "00f1b15c891e950709caa4fc4a678de1", "src_uid": "d3684227d1f12cf36dc302e1ffee8370", "apr_id": "81a9a45256760a84eca3d1ca3ec9520f", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n\tlong int n, arr[1000];\n\tlong long int i,sum = 0,flag = 0,j=0,k=0;\n\tlong long int temp1 = 0, temp2 = 0;\n\t\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\t\t\n\tfor(i=0;i<n;i++)\n\t\tsum+=arr[i];\n\t\n\tif(sum>0)\n\t\tflag = 1;\n\telse if(sum<0)\n\t\tflag = 2;\n\telse if(sum == 0)\n\t{\n\t\twhile(temp1 + temp2 == 0)\n\t\t{\n\t\t\tfor(i=j;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i] > 0)\n\t\t\t\t{\n\t\t\t\t\ttemp1 = arr[i];\n\t\t\t\t\tj=i;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=k;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i] < 0)\n\t\t\t\t{\n\t\t\t\t\ttemp2 = arr[i];\n\t\t\t\t\tk=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(temp1 + temp2 > 0) \n\t\t\t\tflag = 1;\n\t\t\telse if(temp1 + temp2 < 0) \n\t\t\t\tflag = 2;\n\t\t\tj++;\n\t\t\tk++;\n\t\t\tif( j == n || k == n)\n\t\t\t{\n\t\t\t\tif (arr[n-1] > 0) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(arr[n-1] < 0) {\n\t\t\t\t\tflag = 2;\n\t\t\t\t\tbreak\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t}\n\tif (flag == 1)\n\t\tprintf(\"first\");\n\telse if(flag == 2)\n\t\tprintf(\"second\");\n\t\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\n\tlong int n, arr[200000];\n\tlong long int i,sum = 0,flag = 0,j=0,k=0;\n\tlong long int temp1 = 0, temp2 = 0;\n\t\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\t\t\n\tfor(i=0;i<n;i++)\n\t\tsum+=arr[i];\n\t\n\tif(sum>0)\n\t\tflag = 1;\n\telse if(sum<0)\n\t\tflag = 2;\n\telse if(sum == 0)\n\t{\n\t\twhile(temp1 + temp2 == 0)\n\t\t{\n\t\t\tfor(i=j;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i] > 0)\n\t\t\t\t{\n\t\t\t\t\ttemp1 = arr[i];\n\t\t\t\t\tj=i;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=k;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i] < 0)\n\t\t\t\t{\n\t\t\t\t\ttemp2 = arr[i];\n\t\t\t\t\tk=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(temp1 + temp2 > 0) \n\t\t\t\tflag = 1;\n\t\t\telse if(temp1 + temp2 < 0) \n\t\t\t\tflag = 2;\n\t\t\tj++;\n\t\t\tk++;\n\t\t\tif( j == n || k == n)\n\t\t\t{\n\t\t\t\tif (arr[n-1] > 0) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(arr[n-1] < 0) {\n\t\t\t\t\tflag = 2;\n\t\t\t\t\tbreak\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t}\n\tif (flag == 1)\n\t\tprintf(\"first\");\n\telse if(flag == 2)\n\t\tprintf(\"second\");\n\t\t\n\treturn 0;\n}"}
{"similarity_score": 0.9864864864864865, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2bbdfae292570f5132c9f844edf19246", "bug_code_uid": "3ed21adc5ee919f4ba874c8c1caa3a9a", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "f72dcb0fcc5313875fb25f04d60394c0", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int k;\n    scanf(\"%d\", &k);\n    int arr[100000], i;\n    arr[0]=1;\n    int sum=0;\n    for(i=1; i<=k; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n       if(arr[i]>arr[i-1])\n        {\n                sum+=(arr[i]-arr[i-1]);\n        }\n        else if(arr[i]<arr[i-1])\n        {\n            sum+=((n-arr[i-1])+(arr[i]-1)+1);\n        }\n    }\n    printf(\"%d\", sum);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int k;\n    scanf(\"%d\", &k);\n    int arr[100000], i;\n    arr[0]=1;\n    long long int sum=0;\n    for(i=1; i<=k; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n       if(arr[i]>arr[i-1])\n        {\n                sum+=(arr[i]-arr[i-1]);\n        }\n        else if(arr[i]<arr[i-1])\n        {\n            sum+=((n-arr[i-1])+(arr[i]-1)+1);\n        }\n    }\n    printf(\"%lld\", sum);\n    return 0;\n}"}
{"similarity_score": 0.9678832116788321, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "bf716e4aee4dcb9aad7bcbd13879783f", "bug_code_uid": "93e5021ce842cdc94315f3a0007e3890", "src_uid": "6f819ce1d88d5211cd475a8673edba97", "apr_id": "e86658876af4ffac633ea473b4703b1d", "difficulty": 800, "tags": ["brute force", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint min2(const int a, const int b) {\r\n    return a < b ? a : b;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (size_t i = 0; i < t; i++) {\r\n        int n, m, nBot, mBot, nGarbage, mGarbage;\r\n        scanf(\"%d %d %d %d %d %d\", &n, &m, &nBot, &mBot, &nGarbage, &mGarbage);\r\n\r\n        int diffN, diffM;\r\n        if (mBot <= mGarbage) {\r\n            diffM = mGarbage - mBot;\r\n        } else\r\n            diffM = 2 * m - mBot - mGarbage;\r\n        if (mBot <= mGarbage) {\r\n            diffN = nGarbage - nBot;\r\n        } else\r\n            diffN = 2 * n - nBot - nGarbage;\r\n        printf(\"%d\\n\", min2(diffN, diffM));\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint min2(const int a, const int b) {\r\n    return a < b ? a : b;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (size_t i = 0; i < t; i++) {\r\n        int n, m, nBot, mBot, nGarbage, mGarbage;\r\n        scanf(\"%d %d %d %d %d %d\", &n, &m, &nBot, &mBot, &nGarbage, &mGarbage);\r\n\r\n        int diffN, diffM;\r\n        if (mBot <= mGarbage) {\r\n            diffM = mGarbage - mBot;\r\n        } else\r\n            diffM = 2 * m - mBot - mGarbage;\r\n\r\n        \r\n        if (nBot <= nGarbage) {\r\n            diffN = nGarbage - nBot;\r\n        } else\r\n            diffN = 2 * n - nBot - nGarbage;\r\n        printf(\"%d\\n\", min2(diffN, diffM));\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9967637540453075, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e8b6840453ba5d226d5224fd7f137137", "bug_code_uid": "19045ce2856ef07fb477610a0bae39c6", "src_uid": "388450021f2f33177d905879485bb531", "apr_id": "675e1d2d33d1e09909c4ee6e391ae632", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint gcd(int a, int b)\n{\n    return a % b == 0 ? b : gcd(b, a % b);\n}\n\n\nint main ()\n{\n    int t; int a, b;\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; i++)\n    {\n        scanf(\"%d %d\", &a, &b);\n        gcd(a, b) == 1 \u061f printf(\"Finite\\n\") : printf(\"Infinite\\n\");  \n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint gcd(int a, int b)\n{\n    return a % b == 0 ? b : gcd(b, a % b);\n}\n\n\nint main ()\n{\n    int t; int a, b;\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; i++)\n    {\n        scanf(\"%d %d\", &a, &b);\n        gcd(a, b) == 1 ? printf(\"Finite\\n\") : printf(\"Infinite\\n\");  \n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8503649635036497, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1e021d3e31a6e69e0593cbc3af60c533", "bug_code_uid": "009f82388de0c18cdff31f837b521d9b", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "70bbd5c0c3ef799bfd1d65e7d6365ec4", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0,k;\n    scanf(\"%d %d\",&n,&k);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==0)\n           c++;\n        if(a[i]==1)\n           c++;\n    }\n    printf(\"%d\",c/3);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0,k;\n    scanf(\"%d %d\",&n,&k);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        a[i]=5-a[i];\n        if(a[i]>=k)\n            c++;\n    }\n    printf(\"%d\",c/3);\n    return 0;\n}\n"}
{"similarity_score": 0.9634300126103404, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "76d401b8baa59fc6b4d04364bd6db54c", "bug_code_uid": "df396b6522f0aa26593fd0813830a8f2", "src_uid": "6fbf41dc32d1c28351d78a9ec5fc0026", "apr_id": "e44d57348d8ed14c204a259957d178cc", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint a,b,c,e;\r\n\tchar d[110]={};\r\n\tscanf(\"%d\",&a);\r\n\twhile(a--) {\r\n\t\te=0;\r\n\t\tscanf(\"%d%d\",&b,&c);\r\n\t\tgetchar();\r\n\t\tfor(int i=1;i<=b;i++) d[i]=getchar();\r\n\t\tif(b==2*c) {\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor(int i=1;i<=(b-1)/2;i++) {\r\n\t\t\tif(d[i]==d[b-i+1]) e++;\r\n\t\t}\r\n\t\tif(e>=c) printf(\"YES\\n\");\r\n\t\telse printf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint a,b,c,e;\r\n\tchar d[110]={};\r\n\tscanf(\"%d\",&a);\r\n\twhile(a--) {\r\n\t\te=0;\r\n\t\tscanf(\"%d%d\",&b,&c);\r\n\t\tgetchar();\r\n\t\tfor(int i=1;i<=b;i++) d[i]=getchar();\r\n\t\tif(b==2*c) {\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor(int i=1;i<=(b-1)/2;i++) {\r\n\t\t\tif(d[i]!=d[b-i+1]) goto jump;\r\n\t\t\telse e++;\r\n\t\t} jump:;\r\n\t\tif(e>=c) printf(\"YES\\n\");\r\n\t\telse printf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9985693848354793, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "dcb3e35761254e0b4e5b984084e6aabe", "bug_code_uid": "17225da60ee11a878cbecc7c16b5a35e", "src_uid": "d9d5db63b1e48214d02abe9977709384", "apr_id": "99c4b21e9816b56f93e6f36ca3de36da", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<math.h>\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nint main(void){\n   \n int test,i,j,n,count,flag,flag2,b1,l,m,u,d,max,min,f,sum,sum2,sum3,count1,count2,b,c,g,r,a[26]={0},curr,prv;\n char k[100000];\n sum=count=0;\n scanf(\"%d%d\\n%s\",&n,&l,k);\n for(i=0;i<strlen(k);i++){\n  //   printf(\"%d %d %d\",l,count,a[k[i]-65]);\n     if(a[k[i]-65]==0){\n  a[k[i]-65]++;\n  count++;\n  \n }else{\n       a[k[i]-65]++;\n }\n }\n min=9999999;\n// printf(\"%d %d \",l,count);\n for(i=0;i<25;i++){\n     if(a[i]<min && a[i]!=0){\n         min=a[i];\n     }\n }\n if(l>count){\n     printf(\"0\");\n }else{\n     printf(\"%d\",min*l);\n }\n \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<math.h>\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nint main(void){\n   \n int test,i,j,n,count,flag,flag2,b1,l,m,u,d,max,min,f,sum,sum2,sum3,count1,count2,b,c,g,r,a[26]={0},curr,prv;\n char k[1000000];\n sum=count=0;\n scanf(\"%d%d\\n%s\",&n,&l,k);\n for(i=0;i<strlen(k);i++){\n  //   printf(\"%d %d %d\",l,count,a[k[i]-65]);\n     if(a[k[i]-65]==0){\n  a[k[i]-65]++;\n  count++;\n  \n }else{\n       a[k[i]-65]++;\n }\n }\n min=9999999;\n// printf(\"%d %d \",l,count);\n for(i=0;i<=25;i++){\n     if(a[i]<min && a[i]!=0){\n         min=a[i];\n     }\n }\n if(l>count){\n     printf(\"0\");\n }else{\n     printf(\"%d\",min*l);\n }\n \n    return 0;\n}\n"}
{"similarity_score": 0.9927797833935018, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1033eb6463c03fe032cae8ce9038d6dd", "bug_code_uid": "42820e5ffb7d3527292e865bc0d1703f", "src_uid": "f110b9351fe8ff20676d11ecfc92aee3", "apr_id": "67e977dd6d6ab422e04a7e56497d4996", "difficulty": 1300, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint Flag[10001];\n\nint main()\n{\n    int n, m, k, v;\n    scanf(\"%d %d\", &n, &m);\n    for(int i = 0; i < m; ++i) {\n        scanf(\"%d\", &k);\n        memset(Flag, 0, sizeof(Flag));\n        char find = 0;\n        for(int j = 0; j < k; ++j) {\n            scanf(\"%d\", &v);\n            if(Flag[abs(v)]) {\n                find = 1;\n            }\n            Flag[abs(v)] = 1;\n        }\n        if(!find) {\n            puts(\"YES\");\n            return 0;\n        }\n    }\n    puts(\"NO\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint Flag[10001];\n\nint main()\n{\n    int n, m, k, v;\n    scanf(\"%d %d\", &n, &m);\n    for(int i = 0; i < m; ++i) {\n        scanf(\"%d\", &k);\n        memset(Flag, 0, sizeof(Flag));\n        char find = 0;\n        for(int j = 0; j < k; ++j) {\n            scanf(\"%d\", &v);\n            if(Flag[abs(v)] == -v) {\n                find = 1;\n            }\n            Flag[abs(v)] = v;\n        }\n        if(!find) {\n            puts(\"YES\");\n            return 0;\n        }\n    }\n    puts(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.8785714285714286, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "da8fb43f6121e0088e48ba3b7122b590", "bug_code_uid": "56f2557cfd723de88d0bd605de4680d3", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "48b01e6a47158289215077e9484958b0", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define NMAX 10000\n\nint main() {\n    int t, n;\n    int i;\n    scanf(\"%d\", &t);\n    for (i = 0; i < t; ++i) {\n        int j;\n        long s1 = 0, s2 = 0;\n        scanf(\"%d\", &n);\n        for (j = 0; j < n; ++j) {\n            int x;\n            scanf(\"%d\", &x);\n            if (x > 0)\n                s1 += x;\n            else s2 += x;\n        }\n        printf(\"%ld\\n\", labs(labs(s1) - labs(s2)));\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define NMAX 10000\n\nint main() {\n    int t, n;\n    int i;\n    scanf(\"%d\", &t);\n    for (i = 0; i < t; ++i) {\n        int j;\n        long long s = 0;\n        scanf(\"%d\", &n);\n        for (j = 0; j < n; ++j) {\n            int x;\n            scanf(\"%d\", &x);\n            s += x;\n        }\n        printf(\"%lld\\n\", llabs(s));\n    }\n    return 0;\n}"}
{"similarity_score": 0.9830508474576272, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "74262f26a3a24676ad12d9363b882df3", "bug_code_uid": "6cee7c04766e771f46a724eac017dccd", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "36e5845246d33b77cabffcfd6a25d017", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[60];\n    int len,num;\n    scanf(\"%s\",str);\n    len = strlen(str);\n    num=(str[len-2]-'0')*10+(str[len-1]-'0');\n    if(num%4==0)\n        printf(\"4\\n\");\n    else\n        printf(\"0\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[1000009];\n    int len,num;\n    scanf(\"%s\",str);\n    len = strlen(str);\n    num=(str[len-2]-'0')*10+(str[len-1]-'0');\n    if(num%4==0)\n        printf(\"4\\n\");\n    else\n        printf(\"0\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9986168741355463, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ec90b874f9d24f9a74ff3c1ed0aa9099", "bug_code_uid": "827c0f905f7a8bf474170080dbd00ddf", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "dab2b71271c57e4ebecccdde93997d58", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    int n,a=0,i,j,s=0;\n    int x[100][3];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;++i){\n        for(j=0;j<3;++j){\n            scanf(\"%d\",&x[i][j]);}}\n    for(i=0;i<n;++i){\n        for(j=0;j<3;++j){\n            if(x[i][j]==1)\n                s++;}\n        if(s>=2)\n            a++;\n        s=0;\n}\n    printf(\"%d\",a);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void){\n    int n,a=0,i,j,s=0;\n    int x[1000][3];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;++i){\n        for(j=0;j<3;++j){\n            scanf(\"%d\",&x[i][j]);}}\n    for(i=0;i<n;++i){\n        for(j=0;j<3;++j){\n            if(x[i][j]==1)\n                s++;}\n        if(s>=2)\n            a++;\n        s=0;\n}\n    printf(\"%d\",a);\n    return 0;\n}"}
{"similarity_score": 0.965559655596556, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "32de41e044465ed92b7ba71d5414d9d0", "bug_code_uid": "22f521b957b504558a4ee742dcb622c9", "src_uid": "f8315dc903b0542c453cab4577bcb20d", "apr_id": "e90e07f5bde63ea8ea77c164b8d668d2", "difficulty": 1200, "tags": ["implementation", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint map[101][101];\nint a[105],b[105];\nint m,n;\nint zhao()\n{\n    int i,j=0,k,l,e=0;\n    for(i=0; i<m; i++)\n    {\n        if(a[i]==1)\n        {\n            a[i]=0;\n            b[j++]=i;\n            e=1;\n        }\n\n    }\n    for(i=0; i<j; i++)\n        for(k=0; k<m; k++)\n            if(map[b[i]][k])\n            {\n                map[b[i]][k]=0;\n                a[k]--;\n            }\n            return e;\n}\nint main()\n{\n    int qian,hou,sum=0;\n    memset(map,0,sizeof(map));\n    memset(a,0,sizeof(a));\n    scanf(\"%d %d\",&m,&n);\n    while(n--)\n    {\n        scanf(\"%d %d\",&qian,&hou);\n        a[qian]++;\n        a[hou]++;\n        map[qian][hou]=1;\n        map[hou][qian]=1;\n    }\n    while(zhao())\n    {\n        sum++;\n    }\n    printf(\"%d\\n\",sum);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint map[101][101];\nint a[105],b[105];\nint m,n;\nint zhao()\n{\n    int i,j=0,k,l,e=0;\n    for(i=0; i<=m; i++)\n    {\n        if(a[i]==1)\n        {\n            a[i]--;\n            b[j++]=i;\n            e=1;\n        }\n\n    }\n    for(l=0; l<j; l++)\n        for(k=1; k<=m; k++)\n            if(map[b[l]][k]==1)\n            {\n                map[b[l]][k]=0;\n                a[k]--;\n            }\n            return e;\n}\nint main()\n{\n    int qian,hou,sum=0;\n    memset(map,0,sizeof(map));\n    memset(a,0,sizeof(a));\n    memset(b,0,sizeof(b));\n    scanf(\"%d %d\",&m,&n);\n    while(n--)\n    {\n        scanf(\"%d %d\",&qian,&hou);\n        a[qian]++;\n        a[hou]++;\n        map[qian][hou]=1;\n        map[hou][qian]=1;\n    }\n    while(zhao())\n    {\n        sum++;\n    }\n    printf(\"%d\\n\",sum);\n  return 0;\n}\n"}
{"similarity_score": 0.9371069182389937, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "397af8f8e36a54230397f66c625fc3ba", "bug_code_uid": "74b1d75d50e928a04899c0ce9d765a3c", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "701a2441c1a1566282e22434dc601eb7", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,a,b,c,s;\nscanf(\"%d\",&n);\nwhile(n--)\n{\nscanf(\"%d%d%d\",&a,&b,&c);\ns=a+b+c;\ns=s/2;\nprintf(\"%d\\n\",s);\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nlong long int n,a,b,c,s;\nscanf(\"%lld\",&n);\nwhile(n--)\n{\nscanf(\"%lld%lld%lld\",&a,&b,&c);\ns=a+b+c;\ns=s/2;\nprintf(\"%lld\\n\",s);\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.6562874251497006, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "2e3b53dc1a28d37505a92c3d19224833", "bug_code_uid": "30e94cbdf02e77b7d543443aa7241416", "src_uid": "b18bbefd2a948da9dec1d6f27f219ed1", "apr_id": "96339abdf8b690900af98aabd0fd6434", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int n, i, a[1000], j, m;\n    scanf(\"%d\", &n);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%d\", &a[i]);\n    }\n \n    for(i=0; i<n; i++){\n        if(a[i]==0){\n            printf(\"%d\", i+1);\n            return 0;\n        }\n        for(j=0; j<n; j++){\n            if(a[j]>0) a[j]=a[j]-1;\n        }\n       if(i==(n-1)) i==0;\n    \n    }\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    long int n, i=0, aux, a[111111];\n\n    scanf(\"%ld\", &n);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%ld\", &a[i]);\n    }\n aux=0;\n \n    for(i=0; i<n ;i++){\n        if(a[i]-aux<=0){\n            printf(\"%ld\",i+1);\n            break;\n        }\n        aux++;\n        if(i==n-1) i=-1;\n    \n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.6105263157894737, "equal_cnt": 25, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 23, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "00eef7fe2e16140695f11a25477153ed", "bug_code_uid": "7451e24e4ebcbe2fa5fd6cf647ae1869", "src_uid": "714834defd0390659f6ed5bc3024f613", "apr_id": "8d8103c5c2a9dcd89413225abaacc9e3", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\nint t,n[1000],p[1000][1000],c[1000][1000],i,j,k,x,m;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{\nscanf(\"%d\",&n[i]);\nfor(j=0;j<n[i];j++)\n{\nscanf(\"%d\",&p[i][j]);\nscanf(\"%d\",&c[i][j]);\n}\nfor(i=0;i<t;i++)\n{\nfor(j=0;j<n[i]j++)\n{\nfor(m=j;m<n[i];m++)\n{\nif(p[i][m]-p[i][j]>=c[i][m]-c[i][j] && p[i][j]>=c[i][j] && p[i][j]<=p[i][m] && c[i][j]<=c[i][m])\nprintf(\"YES\");\nelse\nprintf(\"NO\");\n}\n}\n}\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t,n[1000],p[1000][1000],c[1000][1000],i,j,k,x,m;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n[i]);\n        for(j=0;j<n[i];j++)\n        {\n            scanf(\"%d\",&p[i][j]);\n            scanf(\"%d\",&c[i][j]);\n        }\n    }\n    for(i=0;i<t;i++)\n    {\n        for(j=0;j<n[i];j++)\n        {\n            for(m=j;m<n[i];m++)\n            {\n                if(p[i][m]-p[i][j]>=c[i][m]-c[i][j] && p[i][j]>=c[i][j] && p[i][j]<=p[i][m] && c[i][j]<=c[i][m])\n                {\n                    k=1;\n                }\n                else\n                {\n                    k=0;\n                    break;\n                }\n            }\n            if(k==0)\n            {\n               printf(\"NO\\n\");\n               break;\n            }\n        }\n        if(k==1)\n        {\n            printf(\"YES\\n\");\n        }\n        \n    }\n}"}
{"similarity_score": 0.8083941605839416, "equal_cnt": 20, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 13, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "ccf3756137a0fa246d375fa63ab97441", "bug_code_uid": "b6f04d6749196a4879a15c785fa80f0c", "src_uid": "aca2346553f9e7b6e944ca2c74bb0b3d", "apr_id": "6c9add24d58c9020c50708b8628602f9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    int t,a,b,c;\r\n    int x,y1,y2;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        x = abs(a-1);\r\n        y1 = abs(b-c);\r\n        y2 = abs(c-1);\r\n    }\r\n    for(int i=0;i<t;i++){\r\n        if(x > (y1+y2)){\r\n            printf(\"1\\n\");\r\n        }\r\n        else if(x < (y1+y2)){\r\n            printf(\"2\\n\");\r\n        }\r\n        else{\r\n            printf(\"3\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int a[t],b[t],c[t],x[t],y1[t],y2[t];\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d %d %d\",&a[i],&b[i],&c[i]);\r\n        x[i] = abs(a[i]-1);\r\n        y1[i] = abs(b[i]-c[i]);\r\n        y2[i] = abs(c[i]-1);\r\n        // printf(\"%d %d %d\\n\",x,y1,y2);\r\n    }\r\n    for(int i=0;i<t;i++){\r\n        if(x[i] < (y1[i]+y2[i])){\r\n            printf(\"1\\n\");\r\n        }\r\n        else if(x[i] > (y1[i]+y2[i])){\r\n            printf(\"2\\n\");\r\n        }\r\n        else{\r\n            printf(\"3\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.2752902155887231, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ad7b15f2baf9db804a8ae3309dcd5899", "bug_code_uid": "8ca54278829a1171d8af5e7ff5df7fbf", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "56e3c83a0cf92b8931d28aa67ba0a648", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,a,b,i,j,k;\n\tscanf(\"%I64d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d%I64d%I64d\",&k,&a,&b);\n\t\tif(k%2==0&&2*a<b)\n\t\tprintf(\"%I64d\\n\",a*k);\n\t\telse if(k%2==0&&2*a>b)\n\t\tprintf(\"%I64d\\n\",(b*k)/2);\n\t\telse if(2*a<b)\n\t\tprintf(\"%I64d\\n\",a*k);\n\t\telse if(2*a>b)\n\t\tprintf(\"%I64d\\n\",(k/2)*b+a);\n\t\t\n\t\t\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,q,a,b;\n\tlong long int n,s1,s2;\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%I64d %d %d\",&n,&a,&b);\n\t\ts1=((n/2)*b)+((n%2)*a);\n\t\ts2=n*a;\n\t\tif(s1<s2)\n\t\t{\n\t\t\tprintf(\"%I64d\\n\",s1);\n\t\t}\n\t\telse\n\t\tprintf(\"%I64d\\n\",s2);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4799196787148594, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e0592affc175dd12dfde5056e7d318bc", "bug_code_uid": "743d2b94c69f299b4b08498568d49e3a", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "c38afdb5339dc744efd9860b7a5bace6", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while(t!=0)\r\n    {\r\n      int n,sum=0;\r\n      scanf(\"%d\",&n);\r\n      int a[n];\r\n      for(int i=0;i<n;i++)\r\n        {\r\n          scanf(\"%d\",&a[i]);\r\n          \r\n        }\r\n      for(int i=n;i>0;i--)\r\n        {\r\n          if((a[i]+a[i-1])%2!=0)\r\n          {\r\n            sum++;\r\n            a[i-1]=a[i];\r\n          }\r\n        }\r\n      printf(\"%d\",sum);\r\n      t--;\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nvoid main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while(t!=0)\r\n    {\r\n      int n;\r\n      scanf(\"%d\",&n);\r\n      int a[n],e=0,o=0;\r\n      for(int i=0;i<n;i++)\r\n        {\r\n          scanf(\"%d\",&a[i]);\r\n        }\r\n      for(int i=0;i<n;i++)\r\n        {\r\n          if(a[i]%2==0)\r\n          {\r\n            e++;\r\n          }\r\n          else\r\n          {\r\n            o++;\r\n          }\r\n          \r\n        }\r\n      if(e>=o)\r\n      {\r\n        printf(\"%d\\n\",o);\r\n      }\r\n      else\r\n      {\r\n        printf(\"%d\\n\",e);\r\n      }\r\n      t--;\r\n    }\r\n}"}
{"similarity_score": 0.8754623921085081, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "03795ef2a3f8f4d7a45eddf7f387df71", "bug_code_uid": "cd7c90e501dd1662d392eb1ad47ef90a", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "8be6c21225abbc1b783d51256c60f0df", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int i,n,c,count=0,a[10000];\n    scanf(\"%lld %lld\",&n,&c);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=n; i>0; i--)\n    {\n        if(a[i]-a[i-1]<=c)\n            count++;\n        if(a[i]-a[i-1]>c)\n        {\n            break;\n        }\n    }\n    printf(\"%lld\\n\",count+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int i,n,c,count=0;\n    int a[100000];\n    scanf(\"%lld %lld\",&n,&c);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=n; i>1; i--)\n    {\n        if(a[i]-a[i-1]<=c)\n            count++;\n        if(a[i]-a[i-1]>c)\n        {\n            break;\n        }\n    }\n    if(count>n)\n    {\n       printf(\"%lld\\n\",count);\n    }\n    else{\n        printf(\"%lld\\n\",count+1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9338942307692307, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "1dcc1763c18b94a0936d489e743aa2e3", "bug_code_uid": "a81781641c20067c93d2e755baceb182", "src_uid": "add2285f3f710eb41185d6a83e44b37a", "apr_id": "b061dd683e1622d6e6140cde3eee7497", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a, b, n, i, aux;\n    int used[100000] = {0};\n\n    scanf(\"%d %d\", &a, &b);\n    // Applying formula of n\n    n=a+b+1;\n\n    // If they only climb the mountain\n    if (a==0)\n    {\n        for (i=1;i<=n;++i)\n        {\n            printf(\"%d \", n-i+1);\n        }\n        printf(\"\\n\");\n    }\n    else if (b==0) // If they only walking down the mountain\n    {\n        for (i=1;i<=n;++i)\n        {\n            printf(\"%d \", i);\n        }\n    }\n    else\n    {\n        for (i=n-a;i<=n;++i)\n        {\n            printf(\"%d \", i);\n            used[i] = 1;\n        }\n\n        for (i=b;i>0;--i)\n        {\n            aux = n;\n            while (used[aux] == 1 && aux > 0) --aux;\n            printf(\"%d \", aux);\n            used[aux] = 1;\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int a, b, n, i, aux;\n    int used[100000] = {0};\n    memset(used,0,sizeof(used));\n\n    scanf(\"%d %d\", &a, &b);\n    // Applying formula of n\n    n=a+b+1;\n\n    // If they only climb the mountain\n    if (a==0)\n    {\n        for (i=1;i<=n;++i)\n        {\n            printf(\"%d \", n-i+1);\n        }\n        printf(\"\\n\");\n    }\n    else if (b==0) // If they only walking down the mountain\n    {\n        for (i=1;i<=n;++i)\n        {\n            printf(\"%d \", i);\n        }\n    }\n    else\n    {\n        for (i=n-a;i<=n;++i)\n        {\n            printf(\"%d \", i);\n            used[i] = 1;\n        }\n        aux = n;\n        for (i=b;i>0;--i)\n        {\n            while (used[aux] == 1 && aux > 0) --aux;\n            printf(\"%d \", aux);\n            used[aux] = 1;\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9984399375975039, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f4b2252bf7406b985b122fb996fca74f", "bug_code_uid": "06361d5f4b2ef18a038793bbf8f7aa19", "src_uid": "341555349b0c1387334a0541730159ac", "apr_id": "45f82f7cb19a091320397459bf4ce4e6", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,n,p,i;\n    long long x,y,z;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        scanf(\"%I64d %I64d\",&x,&y);\n        for(i=0;i<n-3;i++) scanf(\"%d\",&p);\n        scanf(\"%I64d\",&z);\n\n        if(x+y<z) printf(\"1 2 %d\\n\",n);\n        else printf(\"-1\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,n,p,i;\n    long long x,y,z;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        scanf(\"%I64d %I64d\",&x,&y);\n        for(i=0;i<n-3;i++) scanf(\"%d\",&p);\n        scanf(\"%I64d\",&z);\n\n        if(x+y<=z) printf(\"1 2 %d\\n\",n);\n        else printf(\"-1\\n\");\n    }\n}\n"}
{"similarity_score": 0.9026676279740447, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b8a4fb51e0771144e947e450a9291901", "bug_code_uid": "46621020e4ee52b6ee27448cc13e0f1b", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "cd6e02292a08cc31dd4d0ffcb10a6426", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int i,p;\n    for(i=0;i<t;i++){\n        int n;\n        scanf(\"%d\",&n);\n        char s[100];\n        scanf(\"%s\",&s);\n        int j;\n        if(n>11){\n            p=n-11;\n            for(j=0;j<=p;j++){\n               if(s[j]=='8'){\n                printf(\"YES\\n\");\n                break;\n               }\n\n\n\n\n            }\n        }\n        else if(n==11){\n           if(s[0]=='8'){\n            printf(\"YES\\n\");\n           }\n           else{\n            printf(\"NO\\n\");\n           }\n        }\n        else\n        {\n\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int i,p;\n    for(i=0;i<t;i++){\n        int n;\n        scanf(\"%d\",&n);\n        char s[100];\n        scanf(\"%s\",&s);\n        int j;\n        if(n>11){\n            p=n-11;\n\n            for(j=0;j<=p+1;j++){\n\n                if(j>p){\n                printf(\"NO\\n\");\n                break;\n               }\n               else if(s[j]=='8'){\n                printf(\"YES\\n\");\n                break;\n               }\n\n\n\n\n\n            }\n        }\n        else if(n==11){\n           if(s[0]=='8'){\n            printf(\"YES\\n\");\n           }\n           else{\n            printf(\"NO\\n\");\n           }\n        }\n        else\n        {\n\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9734513274336283, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c24d2f190190717566cffd86d1858daa", "bug_code_uid": "2a0af6f8fb3511ac1c1861fa7ba2eea0", "src_uid": "9e0d271b9bada1364dfcb47297549652", "apr_id": "8534c09a61d9fc8e5f4ee7ad4c24c166", "difficulty": 1600, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint arr[100001];\nint dp1[100001];\nint dp2[100001];\nint max(int x,int y)\n{\n\treturn x>y?x:y;\n}\nint main()\n{\n\t//freopen(\"program.txt\",\"r\",stdin);\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,j,k;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tif(n<=2)\n\t{\n\t\tprintf(\"%d\\n\",n);\n\t\treturn 0;\n\t}\n\tdp1[0]=1;\n\tdp2[n-1]=1;\n\tint maximum=1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tdp1[i]=1;\n\t\tdp2[n-i-1]=1;\n\t\tif(arr[i]>arr[i-1])\n\t\t dp1[i]=dp1[i-1]+1;\n\t\tif(arr[n-i-1]<arr[n-i])\n\t\t dp2[n-i-1]=dp2[n-i]+1;\n\t\t maximum=max(maximum,dp1[i]+(i!=n-1));\n\t}\n\t/*for(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d \",dp1[i]);\n\t}\n\tprintf(\"\\n\");\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d \",dp2[i]);\n\t}\n\tprintf(\"\\n\");*/\n\tfor(i=1;i<n-1;i++)\n\t{\n\t\tif(arr[i+1]>arr[i-1]+1)\n\t\t\tmaximum=max(maximum,dp1[i-1]+dp2[i+1]+1);\n\t}\n\tprintf(\"%d\\n\",maximum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint arr[100001];\nint dp1[100001];\nint dp2[100001];\nint max(int x,int y)\n{\n\treturn x>y?x:y;\n}\nint main()\n{\n\t//freopen(\"program.txt\",\"r\",stdin);\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,j,k;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tif(n<=2)\n\t{\n\t\tprintf(\"%d\\n\",n);\n\t\treturn 0;\n\t}\n\tdp1[0]=1;\n\tdp2[n-1]=1;\n\tint maximum=1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tdp1[i]=1;\n\t\tdp2[n-i-1]=1;\n\t\tif(arr[i]>arr[i-1])\n\t\t dp1[i]=dp1[i-1]+1;\n\t\tif(arr[n-i-1]<arr[n-i])\n\t\t dp2[n-i-1]=dp2[n-i]+1;\n\t\t maximum=max(maximum,dp1[i]+(i!=n-1));\n\t\t maximum=max(maximum,dp2[n-i-1]+(i!=n-1));\n\t}\n\t/*for(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d \",dp1[i]);\n\t}\n\tprintf(\"\\n\");\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d \",dp2[i]);\n\t}\n\tprintf(\"\\n\");*/\n\tfor(i=1;i<n-1;i++)\n\t{\n\t\tif(arr[i+1]>arr[i-1]+1)\n\t\t\tmaximum=max(maximum,dp1[i-1]+dp2[i+1]+1);\n\t}\n\tprintf(\"%d\\n\",maximum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7912408759124088, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "5b4ee712ec5b979fd5a65901e1414e44", "bug_code_uid": "da163d62016f1bda221e95287965dd25", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "bcc05155061275b69b0b892944b7a78d", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n    int n,t,time[100002],temp,x,min,pos,i,count=0;\n    long long sum=0,sum1=0,j;\n\n    scanf(\"%d %d\",&n ,&t);\n\n    for(i=0; i<n ;i++){\n\n        scanf(\"%d\",&time[i]);\n        sum1+=time[i];\n    }\n\n    sum=0;\n    count=0;\n\n    if(sum1<=t){\n\n        printf(\"%d\\n\",n);\n        return 0;\n    }\n\n    else{\n\n        for(i=0; i<n ;i++){\n\n            sum+=time[i];\n\n            if(sum>t){\n\n                sum-=time[i];\n                continue;\n\n            }\n\n            count++;\n        }\n\n        printf(\"%d\\n\",count);\n\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n    int n,t,time[100002],temp,x,max,pos,i,count=0,low;\n    long long sum=0,sum1=0,j;\n\n    scanf(\"%d %d\",&n ,&t);\n\n    for(i=0; i<n ;i++){\n\n        scanf(\"%d\",&time[i]);\n        sum1+=time[i];\n    }\n\n    sum=0;\n    count=0;\n    max=0;\n    low=0;\n\n    if(sum1<=t){\n\n        printf(\"%d\\n\",n);\n        return 0;\n    }\n\n    else{\n\n        for(i=0; i<n ;i++){\n\n            sum+=time[i];\n            count++;\n\n            if(sum>t){\n\n                count--;\n                sum-=time[i];\n                sum-=time[low];\n                low++;\n\n                if(max<count) max=count;\n\n                count--;\n                i--;\n                continue;\n            }\n\n            if(max<count) max=count;\n\n        }\n\n        printf(\"%d\\n\",max);\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.2376237623762376, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "0da074c03e4ece5be7a5ba13f2560c94", "bug_code_uid": "aafe41c818049713ede20bc0dbd564d5", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "75e39184f4ba18411c8d9dc8c78a3725", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n\tint n;\n\tcin>>n;\n\tint i,j,k;\n\tint modd= n%3;\n\tint a=n/3+1,b=n/3+modd-2;\n\tint ans1=n/3,ans2=n/3+modd;\n\tif(  b%3==0 )\n\t{\n\t\twhile( a%3==0 || b%3==0 )\n\t\t\t{\n\t\t\t\ta++;b-=2;\n\t\t\t}\n\t\tans1= a ; ans2= b;\n\t}\n\tprintf(\"%d %d %d\\n\",ans1,ans1,ans2);\n\treturn 0;2332\n\n\n\n}", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,j,k;\n\tint modd= n%3;\n\tint a=n/3,b=n/3+modd;\n\tint ans2=n-2 ;\n\tif (n % 3 == 0 )  printf(\"%d %d %d\\n\",1,1,n-2);\n\telse if (n % 3 == 1 )  printf(\"%d %d %d\\n\",1,1,n-2);\n\telse if( n%3==2 ) {printf(\"%d %d %d\\n\",1,2,n-3);}\n\n\treturn 0;\n\n\n\n}"}
{"similarity_score": 0.831275720164609, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "986c9516e1504105072a01b9c375c0f2", "bug_code_uid": "26ba74b046c9f3cce76a7a3b827fb81f", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "3243fd9d66b68d27a8c81669c9d4e981", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define f(i,a,b) for(int i=a;i<b;i=i+1) \ntypedef long long ll;\nint main() {\n\t//code\n\tint t;\n\tscanf(\"%d\",&t);\n\tf(i,0,t)\n\t{\n\t    int l,r;\n\t    scanf(\"%d %d\",&l,&r);\n\t    int x=-1,y=-1;\n\t    f(i,l,r)\n\t    {\n\t        if(2*i<=r)\n\t        {\n\t            x=i;\n\t            y=2*i;\n\t            break;\n\t        }\n\t        \n\t    }\n\t    printf(\"%d %d\\n\",x,y);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define f(i,a,b) for(int i=a;i<b;i=i+1) \ntypedef long long ll;\nint main() {\n\t//code\n\tint t;\n\tscanf(\"%d\",&t);\n\tf(i,0,t)\n\t{\n\t    int l,r;\n\t    scanf(\"%d %d\",&l,&r);\n\t    int x=-1,y=-1;\n\t   \n\t        if(2*l<=r)\n\t        {\n\t            x=l;\n\t            y=2*l;\n\t        }\n\t        \n\t    \n\t    printf(\"%d %d\\n\",x,y);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9939759036144579, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6061617eb035902c2e739e6527632618", "bug_code_uid": "800d3b1b902e472e80a9e6c7c8bd4df4", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "0b07fadf62914b40eadcb3e6aa54a684", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n,i;\n\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a==1){\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"1\");\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n,i,a;\n\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a==1){\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"1\");\n}\n"}
{"similarity_score": 0.9434589800443459, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5ae46cd0b258fab4d4396d9db46a86d0", "bug_code_uid": "cec87c72122c863b98589672dc5d56fd", "src_uid": "10c9b2d70030f7ed680297455d1f1bb0", "apr_id": "7c94fd470c35b2a6979f617121b626d8", "difficulty": 1300, "tags": ["data structures", "constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int u,n,j,a[3000],c,i,m;\n    char t,s1[1003],s2[1003];\n\n    scanf(\"%d\",&u);\n\n    for( ; u ; u--)\n    {\n        scanf(\"%d%s%s\",&n,s1,s2);\n\n        for(m=n-1,t=s1[0],j=0,i=0,c=0; m>=0 ;m--)\n        {\n            //printf(\"%c\\n\",t);\n            if(m==0&&t!=s2[m])\n                a[j++]=1;\n            else if(m>0)\n            {\n                if(t!=s2[m])\n                    a[j++]=m+1;\n                else\n                    {a[j++]=1;a[j++]=m+1;}\n                c++;\n                if(c%2)\n                {\n                    if(s1[n-i]=='0')\n                        t='1';\n                    else\n                        t='0';\n                    i++;\n                }\n                else\n                    t=s1[i];\n            }\n        }\n        printf(\"%d \",j);\n        for(m=0;m<j;m++)\n            printf(\"%d \",a[m]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int u,n,j,a[3000],c,i,m;\n    char t,s1[1003],s2[1003];\n\n    scanf(\"%d\",&u);\n\n    for( ; u ; u--)\n    {\n        scanf(\"%d%s%s\",&n,s1,s2);\n\n        for(n--,m=n,t=s1[0],j=0,i=0,c=0; m>=0 ;m--)\n        {\n            if(m==0&&t!=s2[m])\n                a[j++]=1;\n            else if(m>0)\n            {\n                if(t!=s2[m])\n                    a[j++]=m+1;\n                else\n                    {a[j++]=1;a[j++]=m+1;}\n                c++;\n                if(c%2)\n                {\n                    if(s1[n-i]=='0')\n                        t='1';\n                    else\n                        t='0';\n                    i++;\n                }\n                else\n                    t=s1[i];\n            }\n        }\n        printf(\"%d \",j);\n        for(m=0;m<j;m++)\n            printf(\"%d \",a[m]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.268, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f387a5d14e153619eb805a4be2c71683", "bug_code_uid": "1f5e57dfe3ce311873a76247c225ea89", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "c074c90582f375119fdd637ff8aeb1bb", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint arr[1001];\n\tarr[0]=0;\n\tarr[1]=2;\n\tarr[2]=1;\n\tarr[3]=1;\n\tfor(int i=4;i<1000;i++)\n\t{\n\t\tint k=arr[i-2]+1;\n\t\tint j=arr[i-3]+1;\n\t\tarr[i]=k>j?j:k;\n\t}\n\tint n;\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tprintf(\"%d\\n\",arr[n]);\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint n;\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tif(n==1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\\n\",n/3+(n%3!=0));\n\t\t}\n\t}\n}\n/*\n4\t2\n5\t2\n6\t2\n7\t3\n8\t3\n9\t3\n10\t4\n*/\n"}
{"similarity_score": 0.5185185185185185, "equal_cnt": 34, "replace_cnt": 19, "delete_cnt": 6, "insert_cnt": 10, "fix_ops_cnt": 35, "lang": "GNU C11", "fix_code_uid": "e88fe7c3e3e2a03d1ace99186634fbf5", "bug_code_uid": "711ab2b1cf7264b25d057c0bcccb3f4c", "src_uid": "7f934f96cbe3990945e5ebcf5c208043", "apr_id": "f111c4b4019c88e1eed5cd6b0296a353", "difficulty": 800, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n\tint n,i,j,f;\n\tscanf(\"%d\",&n);\n\tchar name[n][100];\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&name[i]);\n\t}\n\t\n\tprintf(\"\\n\");\n\t\n\tfor(i=0;i<n;i++)\n\t{\tf=0;\n\tfor(j=0;j<n;j++)\n\t{\n\t\tif(strcmp(name[i],name[j])==0 && j<i)\n\t\t{\n\t\tprintf(\"YES\\n\");\n\t\tf=1;\n\t\tbreak;\n\t\t}\n\t\t\n\t}\n\tif(f==0)\n\tprintf(\"NO\\n\");\n\t\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,flg,j;\n    scanf(\"%d\",&n);\n    char names[n][1000];\n    for (i=0;i<n;i++){\n        scanf(\"%s\",names[i]);\n        }\n    for (i=0;i<n;i++){\n        flg=0;\n        if (i==0)\n            printf(\"NO\\n\");\n        else{\n            for (j=0;j<i;j++){\n                if ((strcmp(names[i],names[j])==0)){\n                    printf(\"YES\\n\");\n                    flg=1;\n                    break;\n                    }\n                else\n                    continue;\n                }\n                if (flg==0)\n                    printf(\"NO\\n\");\n            }\n        }\n    return 0;\n}"}
{"similarity_score": 0.5120551090700345, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0137775492118cf450c7b49dc810bd77", "bug_code_uid": "9a510a1d6ed8e88bce3f6a09fc79b7df", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "ae56d5e4c0353aab05b27da211a55b1f", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n \r\nint main()\r\n{\r\n    int t,i,s,x;\r\n    scanf(\"%d\",&t);\r\n    int n;int k;\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        x=k;\r\n    while(n>k)\r\n    {\r\n        k+=x;\r\n    }\r\n    if(k%n)\r\n    s=k/n+1;\r\n    else s=k/n;\r\n    printf(\"%d\\n\",s);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t,i,s,x;\r\n    scanf(\"%d\",&t);\r\n    int n;int k;\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        x=k;\r\n    if(n>=k)\r\n    {\r\n        if(n%k == 0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"2\\n\");\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if(k%n==0)\r\n        {\r\n            printf(\"%d\\n\",k/n);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\",k/n+1);\r\n        }\r\n    }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.955110870740941, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "36b7027d652ca63b22dd3ec5ce6aa247", "bug_code_uid": "51f4f542fb7d68fe7cb3778e8b33f399", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "4d8ce15b8e15ae8deeb124bc80d0e980", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,min;\n    scanf(\"%d\",&n);\n    int a[100],b[100];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i<=(n-2))\n        {\n            b[i]=a[i+1]-a[i];\n            \n        }\n        else if(i==(n-1))\n        {\n            b[i]=a[0]-a[n-1];\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[i]<0)\n        {\n            b[i]=(-b[i]);\n        }\n    }\n    min=b[0];\n    for(i=0;i<n;i++)\n    {\n        if(b[i]<min)\n        {\n            min=b[i];\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i<=(n-2))\n        {\n            if(a[i+1]-a[i]==min)\n          {\n            printf(\"%d %d\",i+1,i+2);\n            break;\n          }\n        }\n        \n        else if(i==(n-1))\n        {\n            if(a[0]-a[n-1]==min)\n            printf(\"%d %d\",n,1);\n            break;\n        }\n    }\n    return 0;\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,min;\n    scanf(\"%d\",&n);\n    int a[100],b[100];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i<=(n-2))\n        {\n            b[i]=a[i+1]-a[i];\n            \n        }\n        else if(i==(n-1))\n        {\n            b[i]=a[0]-a[n-1];\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[i]<0)\n        {\n            b[i]=(-b[i]);\n        }\n    }\n    min=b[0];\n    for(i=0;i<n;i++)\n    {\n        if(b[i]<min)\n        {\n            min=b[i];\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i<=(n-2))\n        {\n            \n            if(a[i+1]-a[i]==min||a[i+1]-a[i]==-min)\n          {\n            printf(\"%d %d\",i+1,i+2);\n            break;\n          }\n        }\n        \n        else if(i==(n-1))\n        {\n            if(a[0]-a[n-1]==min||a[0]-a[n-1]==-min)\n            printf(\"%d %d\",n,1);\n            break;\n        }\n    }\n    return 0;\n    \n}"}
{"similarity_score": 0.9986431478968792, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "db68c33a94b364d04e5b58a1ca098d8e", "bug_code_uid": "cfef47dcd601922a2e6ce23e34d86907", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "23d7e5658a6aef0335049a1c139f1c5c", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<time.h>\n#define N 1000\n\nvoid swap(int *p,int *q)\n{\n    int temp;\n    temp = *p;\n    *p = *q;\n    *q = temp;\n}\n\nint a[N];\n\nint main()\n{\n    int m,n;\n    while(~scanf(\"%d%d\", &m, &n))\n    {\n        for(int i = 0;i < m;i ++)\n        {\n            scanf(\"%d\", &a[i]);\n            for(int j = 0; j < i; j ++)\n            {\n                if(a[i] > a[j])\n                    swap(a + i, a + j);\n            }\n        }\n        int max = a[m - 1] > n - a[0] ? a[m - 1] * 2 : n - a[0] * 2;\n        for(int i = 0; i < m  -1; i ++)\n        {\n            max = a[i] - a[i + 1] > max ? a[i] - a[i + 1] : max;\n        }\n        printf(\"%.10lf\\n\",(double)max / 2);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<time.h>\n#define N 1000\n\nvoid swap(int *p,int *q)\n{\n    int temp;\n    temp = *p;\n    *p = *q;\n    *q = temp;\n}\n\nint a[N];\n\nint main()\n{\n    int m,n;\n    while(~scanf(\"%d%d\", &m, &n))\n    {\n        for(int i = 0;i < m;i ++)\n        {\n            scanf(\"%d\", &a[i]);\n            for(int j = 0; j < i; j ++)\n            {\n                if(a[i] > a[j])\n                    swap(a + i, a + j);\n            }\n        }\n        int max = a[m - 1] > n - a[0] ? a[m - 1] * 2 : (n - a[0]) * 2;\n        for(int i = 0; i < m  -1; i ++)\n        {\n            max = a[i] - a[i + 1] > max ? a[i] - a[i + 1] : max;\n        }\n        printf(\"%.10lf\\n\",(double)max / 2);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9596602972399151, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9873ef3f6e483b3ac152c067ba484edf", "bug_code_uid": "86216f2d4290b30a14a3d7deb29d0ae5", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "5a26db529b550876f7eb88b2159bdce5", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long unsigned n;\n    scanf(\"%llu\",&n);\n    int r=n%10;\n    if(n%2==0)\n    printf(\"%llu 4\",n-4);\n    else if(n==15)\n    printf(\"6 9\");\n    else if(n==13)\n    printf(\"9 4\");\n    else if(r==1)\n    printf(\"%llu 6\",n-6);\n    else if(r==3)\n    printf(\"%llu 8\",n-8);\n    else if(r==5)\n    printf(\"%llu 10\",n-10);\n    else if(r==7)\n    printf(\"%llu 12\",n-12);\n    else if(r==9)\n    printf(\"%llu 4\",n-4);\n   \n return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long unsigned n;\n    scanf(\"%llu\",&n);\n    int r=n%10;\n    if(n%2==0)\n    printf(\"%llu 4\",n-4);\n    else if(n==15)\n    printf(\"6 9\");\n    else if(n==13)\n    printf(\"9 4\");\n    else if(n==17)\n    printf(\"8 9\");\n    else if(r==1)\n    printf(\"%llu 6\",n-6);\n    else if(r==3)\n    printf(\"%llu 8\",n-8);\n    else if(r==5)\n    printf(\"%llu 10\",n-10);\n    else if(r==7)\n    printf(\"%llu 12\",n-12);\n    else if(r==9)\n    printf(\"%llu 4\",n-4);\n   \n return 0;\n}"}
{"similarity_score": 0.9979838709677419, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ded3ed67ba27de2774b3ccb41b4bb2bb", "bug_code_uid": "3ff10c36aaa708238626806d537ed637", "src_uid": "6c65ca365352380052b0c9d693e6d161", "apr_id": "2f611cf4896e8ea8e08972e6ddaaf389", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n\tint n;\n\tint a[1001];\n\tint i;\n\tint det, temp;\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i< n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tdet = n-a[0];\n\tfor(i = 1; i< n; i++)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\ttemp = i-a[i];\n\t\t\tif(temp< 0)\n\t\t\t{\n\t\t\t\ttemp += n;\n\t\t\t}\n\t\t\tif(temp != det)\n\t\t\t{\n\t\t\t\tprintf(\"No\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp = a[i] - i;\n\t\t\tif(temp< 0)\n\t\t\t{\n\t\t\t\ttemp += n; \n\t\t\t}\n\t\t\tif(temp != det)\n\t\t\t{\n\t\t\t\tprintf(\"No\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"Yes\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nmain()\n{\n\tint n;\n\tint a[1001];\n\tint i;\n\tint det, temp;\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i< n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tdet = n-a[0];\n\tfor(i = 1; i< n; i++)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\ttemp = i-a[i];\n\t\t\tif(temp<= 0)\n\t\t\t{\n\t\t\t\ttemp += n;\n\t\t\t}\n\t\t\tif(temp != det)\n\t\t\t{\n\t\t\t\tprintf(\"No\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp = a[i] - i;\n\t\t\tif(temp<= 0)\n\t\t\t{\n\t\t\t\ttemp += n; \n\t\t\t}\n\t\t\tif(temp != det)\n\t\t\t{\n\t\t\t\tprintf(\"No\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"Yes\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.780327868852459, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e2d45b37a54e0eaeca84b4701e06e4f8", "bug_code_uid": "49815fbbcbd3fd6b004bef0017111fc5", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "e19d6c9e96b9d810e442156ce00bbdbe", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;++i)\n    {\n        int n,ans;\n        scanf(\"%d\",&n);\n        if(n%2==0)\n            ans=n/2;\n        else\n            ans=n/2+1;\n\n        printf(\"%d\",ans);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&t);\n    int a[t];\n    for(i=0;i<t;++i)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<t;++i)\n    {\n        int ans;\n\n        if(a[i]%2==0)\n            ans=a[i]/2;\n        else\n            ans=a[i]/2+1;\n\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6936026936026936, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "a3b324f6b0324ca197e12a23dc8221d7", "bug_code_uid": "a8e903d88f0deddd15a50e620874e9a9", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "0540e35d864f2a36d96340c8e5e69fe9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\nlong long int i, x, y, n, a, z, t;\nscanf(\"%lld\", &t);\nfor(i = 0; i < t; i++){\n    scanf(\"%lld%lld%lld\", &x, &y, &n);\n    if(x+y == n){\n        printf(\"%lld\\n\", n);\n    }\n    else if(x > n){\n        printf(\"%lld\\n\", y);\n    }\n    else{\n        a = n/x;\n        if(a*x + y < n){\n            z = a*x + y;\n            printf(\"%lld\\n\", z);\n        }\n        else{\n           z = a*x - (x-y);\n           printf(\"%lld\\n\", z);\n        }\n    }\n}\n\nreturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\nlong long int i, a, x, y, n, t;\nscanf(\"%lld\", &t);\nfor(i = 0; i < t; i++){\n    scanf(\"%lld%lld%lld\", &x, &y, &n);\n    if(n%x == y){\n        printf(\"%d\\n\", n);\n    }\n    else{\n        if(n%x > y){\n            a = n - (n%x - y);\n            printf(\"%d\\n\", a);\n        }\n        else{\n            a = (n/x)*x - (x-y);\n            printf(\"%d\\n\", a);\n        }\n    }\n}\n\nreturn 0;\n}"}
{"similarity_score": 0.3306510607168983, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "5e3b48adb5f3cf4d2f86251106149bfc", "bug_code_uid": "7c2083f2ca7b4d3215df64dbeb9aabb8", "src_uid": "8fcec28fb4d165eb58f829c03e6b31d1", "apr_id": "05f578091f75e062c7fb988e5f3df153", "difficulty": 1500, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main()\n{\n unsigned long long int l,r,k,ulimit,llimit,s,i;\n    scanf(\"%I64d%I64d%I64d\",&l,&r,&k);\n    ulimit=log(r)/log(k);\n    llimit=log(l)/log(k);\n\n    //1 printf(\"%d%d\",ulimit,llimit);\n\n    if(ulimit==llimit)\n    {\n        s=ulimit(k,i);\n        if(s<=r && s>=l)\n            printf(\"%d\",s);\n        printf(\"-1\");\n    }\n    else\n    {\n\n        for(i=llimit;i<=ulimit;i++)\n        {\n            s=pow(k,i);\n            if(s<=r && s>=l)\n            printf(\"%I64d \",s);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main()\n{\n    unsigned long long int l,r,k,ulimit,llimit,s,i;\n    int flag=0;\n    scanf(\"%I64d%I64d%I64d\",&l,&r,&k);\n    ulimit=(float)(log(r))/(float)(log(k));\n    llimit=(float)(log(l))/(log(k));\n    //printf(\"%I64d %I64d\\n\",ulimit,llimit);\n    s=1;\n    for(i=1;i<=llimit;i++)\n    {\n        s=s*k;\n    }\n    if(ulimit==llimit)\n    {\n\n        if(s<=r && s>=l)\n        {\n            flag=1;\n            printf(\"%I64d\",s);\n        }\n        else\n        printf(\"-1\");\n    }\n    else\n    {\n        if(flag==0 && s<=r && s>=l)\n        printf(\"%I64d \",s);\n        for(i=llimit+1;i<=ulimit;i++)\n        {\n            s=s*k;\n            if(s<=r && s>=l)\n            printf(\"%I64d \",s);\n            //printf(\"%d \",i);\n\n\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9947027663331371, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "07cb21fac186f8e758e01db6d54ce228", "bug_code_uid": "c994e820e5036db5f6bdd23550d1b86d", "src_uid": "ce0579e9c5b4c157bc89103c76ddd4c3", "apr_id": "ec8dc5b23d511e73fc195e0c99f07192", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(void){\r\n\tint t,n;\r\n\tint i,j;\r\n\tint h[101],m[101];\r\n\tint hh[101],mm[101];\r\n\tint h1,m1;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++){\r\n\t\tscanf(\"%d %d %d\",&n,&h[i],&m[i]);\r\n\t\thh[i]=24;\r\n\t\tmm[i]=60;\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d %d\",&h1,&m1);\r\n\t\t\tif((h1>=h[i])&&(m1>=m[i])){\r\n\t\t\t\tif(((h1-h[i])*60+m1-m[i])<(hh[i]*60+mm[i]*60)){\r\n\t\t\t\t\thh[i]=h1-h[i];\r\n\t\t\t\t\tmm[i]=m1-m[i];\r\n\t\t\t\t}\r\n\t\t\t}else if((h1>h[i])&&(m1<m[i])){\r\n\t\t\t\tif(((h1-h[i]-1)*60+m1-m[i]+60)<(hh[i]*60+mm[i]*60)){\r\n\t\t\t\t\thh[i]=h1-h[i]-1;\r\n\t\t\t\t\tmm[i]=m1-m[i]+60;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(((h1+23-h[i])*60+m1+60-m[i])<(hh[i]*60+mm[i]*60)){\r\n\t\t\t\t\thh[i]=h1+23-h[i];\r\n\t\t\t\t\tif((m1+60-m[i])>=60){\r\n\t\t\t\t\t\tmm[i]=m1-m[i];\r\n\t\t\t\t\t\thh[i]++;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tmm[i]=m1+60-m[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(i=0;i<t;i++){\r\n\t\tprintf(\"%d %d\\n\",hh[i],mm[i]);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main(void){\r\n\tint t,n;\r\n\tint i,j;\r\n\tint h[101],m[101];\r\n\tint hh[101],mm[101];\r\n\tint h1,m1;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++){\r\n\t\tscanf(\"%d %d %d\",&n,&h[i],&m[i]);\r\n\t\thh[i]=24;\r\n\t\tmm[i]=60;\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d %d\",&h1,&m1);\r\n\t\t\tif((h1>=h[i])&&(m1>=m[i])){\r\n\t\t\t\tif(((h1-h[i])*60+m1-m[i])<(hh[i]*60+mm[i])){\r\n\t\t\t\t\thh[i]=h1-h[i];\r\n\t\t\t\t\tmm[i]=m1-m[i];\r\n\t\t\t\t}\r\n\t\t\t}else if((h1>h[i])&&(m1<m[i])){\r\n\t\t\t\tif(((h1-h[i]-1)*60+m1-m[i]+60)<(hh[i]*60+mm[i])){\r\n\t\t\t\t\thh[i]=h1-h[i]-1;\r\n\t\t\t\t\tmm[i]=m1-m[i]+60;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(((h1+23-h[i])*60+m1+60-m[i])<(hh[i]*60+mm[i])){\r\n\t\t\t\t\thh[i]=h1+23-h[i];\r\n\t\t\t\t\tif((m1+60-m[i])>=60){\r\n\t\t\t\t\t\tmm[i]=m1-m[i];\r\n\t\t\t\t\t\thh[i]++;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tmm[i]=m1+60-m[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(i=0;i<t;i++){\r\n\t\tprintf(\"%d %d\\n\",hh[i],mm[i]);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.6403940886699507, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "562e98372ab0515c813f86ade1b992fa", "bug_code_uid": "a95192cdd847fa254f3becf94b17243e", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "4d800d795ebc0b467cd78f758f995253", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{ int a[100],i,n,x;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{scanf(\"%d\",&a[i]);\n}\nfor(i=0;i<n;i++)\n{\nx=180-a[i];\nif(360%x==0)\n   {printf(\"\\nYES\");\n   }\n    else printf(\"\\nNO\");\n}\n}", "fixed": "#include<stdio.h>\nmain()\n{ int a[200],i,n,x;\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++)\n{scanf(\"%d\",&a[i]);\n}\nfor(i=1;i<=n;i++)\n{\nx=180-a[i];\nif(360%x==0)\n   {\n   printf(\"\\nYES\");\n   }\n    else printf(\"\\nNO\");\n   \n}\n}"}
{"similarity_score": 0.8115702479338843, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "631540d37ddd3399dbb05dba1795dafa", "bug_code_uid": "f445c62dc45b5073e7615c9a9747889c", "src_uid": "0a05b11307fbb2536f868acf4e81c1e2", "apr_id": "f2740ad42948bcda3d44335417ecbed4", "difficulty": 800, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    long int i,j,t,n,s,a,b,left,med;\r\n    scanf(\"%ld\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%ld\",&n);\r\n        scanf(\"%ld\",&s);\r\n        if(n>s)\r\n        {\r\n            b=0;\r\n            goto a;\r\n        }\r\n        if(n==1)\r\n        {\r\n            b=s;\r\n            goto a;\r\n        }\r\n        if(n%2==0)\r\n        {\r\n            med=n/2;\r\n        }\r\n        if(n%2!=0)\r\n        {\r\n            med=(n/2)+1;\r\n        }\r\n        a=n-med+1;\r\n        for(i=1;i<s;i++)\r\n        {\r\n            if(i*a>s)\r\n            {\r\n                b=i-1;\r\n                goto a;\r\n            }\r\n        }\r\n        a:\r\n        printf(\"%ld\\n\",b);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    long int i,j,t,n,s,a,b,left,med;\r\n    scanf(\"%ld\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%ld\",&n);\r\n        scanf(\"%ld\",&s);\r\n        if(n==1)\r\n        {\r\n            b=s;\r\n            goto a;\r\n        }\r\n        if(n%2==0)\r\n        {\r\n            med=n/2;\r\n        }\r\n        if(n%2!=0)\r\n        {\r\n            med=(n/2)+1;\r\n        }\r\n        a=n-med+1;\r\n        b=s/a;\r\n        a:\r\n        printf(\"%ld\\n\",b);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9079545454545455, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "bfbdb0abd04d946f2309c65e1c2fd40c", "bug_code_uid": "5291c99f94787109e45f12123d843144", "src_uid": "139febdb9c01bf0e6598fdf65a1a522c", "apr_id": "7f9310194b80da40e4da620ed0d6b00e", "difficulty": 1800, "tags": ["dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <string.h>\nint a[501];\nlong long dp[2][501][501];\n\nint main(int argc, const char * argv[]) {\n    int n, m, b;\n    int i, j, k;\n    long mod;\n    memset(dp, 0, sizeof(dp));\n    scanf(\"%d %d %d %ld\", &n, &m, &b, &mod);\n    if (mod == 960694994) {\n        printf(\"\");\n    }\n    for (i=0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n    dp[0][0][0] = dp[1][0][0] = 1;\n    for (i=0; i<n; i++) {\n        for (j=1; j <= m; j++) {\n            for (k=0; k <=b; k++){\n                dp[i%2][j][k] = dp[(i+1)%2][j][k] % mod;\n                if (k >= a[i]) {\n                    dp[i%2][j][k] += dp[i%2][j-1][k-a[i]] % mod;\n                    dp[i%2][j][k] %= mod;\n                }\n            }\n        }\n    }\n    long long ans = 0;\n    for (i=0; i <= b; i++) {\n        ans += dp[(n-1) % 2][m][i];\n        ans %= mod;\n    }\n    printf(\"%ld\\n\", (long) (ans % mod));\n    return 0;\n}\n", "fixed": "\n#include <stdio.h>\n#include <string.h>\nint a[501];\nlong long dp[2][501][501];\n\nint main(int argc, const char * argv[]) {\n    int n, m, b;\n    int i, j, k;\n    long mod;\n    memset(dp, 0, sizeof(dp));\n    scanf(\"%d %d %d %ld\", &n, &m, &b, &mod);\n    for (i=0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n    dp[0][0][0] = dp[1][0][0] = 1;\n    for (i=0; i<n; i++) {\n        for (j=1; j <= m; j++) {\n            for (k=0; k <=b; k++){\n                dp[i%2][j][k] = dp[(i+1)%2][j][k] % mod;\n                if (k >= a[i]) {\n                    dp[i%2][j][k] += dp[i%2][j-1][k-a[i]] % mod;\n                }\n            }\n        }\n    }\n    long long ans = 0;\n    for (i=0; i <= b; i++) {\n        ans += dp[(n-1) % 2][m][i];\n        while (ans > mod) {\n            ans -= mod;\n        }\n    }\n    printf(\"%ld\\n\", (long) (ans % mod));\n    return 0;\n}\n"}
{"similarity_score": 0.6194539249146758, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "ed871ded8556a12ca6e4cbee165c229b", "bug_code_uid": "ccfe1cc887d30c8531c66ae72f7fbdeb", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "7f0569215230d20dcd197837cf55b5c5", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int a[100007],b[1000007],c[100007],d[1000007];;\n\nint main()\n{\n    int na , nb,i,j,k,l,m,n;\n    long long int x;\n    scanf(\"%d %d\",&na,&nb);\n    scanf(\"%d %d\",&k,&n);\n    for(i=0;i<na;i++)scanf(\"%I64d\",&a[i]);\n    for(i=0;i<nb;i++)scanf(\"%I64d\",&b[i]);\n    for(i=0;i<k;i++)c[i]=a[i];\n    for(i=0;i<nb;i++)\n    {\n        for(j=0;j<nb-1;j++)\n        {\n            if(b[j+1]>b[j])\n            {\n                x=b[j];\n                b[j]=b[j+1];\n                b[j+1]=x;\n            }\n        }\n    }\n    //for(i=0;i<n;i++)printf(\"%I64d\\t\",b[i]);\n    for(i=0;i<n;i++)d[i]=b[i];\n   // for(i=0;i<n;i++)printf(\"%I64d\\t\",d[i]);\n    //printf(\"\\n%I64d %I64d\\n\",c[n-1],d[n-1]);\n    if(c[k-1]<d[n-1])printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nlong long int a[100007],b[1000007],c[100007],d[1000007];\n\nint main()\n{\n    int na , nb,i,j,k,l,m,n;\n    long long int x;\n    scanf(\"%d %d\",&na,&nb);\n    scanf(\"%d %d\",&k,&n);\n    for(i=0;i<na;i++)scanf(\"%I64d\",&a[i]);\n    for(i=0;i<nb;i++)scanf(\"%I64d\",&b[i]);\n    //printf(\"%d\\t %d\\n\",a[k-1],b[nb-n]);\n    if(a[k-1]<b[nb-n])printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n\n}\n"}
{"similarity_score": 0.9993800371977681, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "88dff52f8f2c23ba55f71f89b231ef33", "bug_code_uid": "0d78d24b6375d127c32aa4d711683828", "src_uid": "46096413faf7d9f845131d9e48bd8401", "apr_id": "ede461cfd132b9ebbdfc8713ccafb41f", "difficulty": 1700, "tags": ["greedy", "constructive algorithms", "sortings", "binary search", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_N 10005\n\nstruct par\n{\n\tint ord,ind;\n};\n\nint cmp(const void *p, const void *q) \n{\n    int ord1 = ((struct par *)p)->ord;\n    int ord2 = ((struct par *)q)->ord;\n    return ord1-ord2;\n}\n\nint a[MAX_N], b[MAX_N];\nstruct par c1[MAX_N];\n\nint main()\n{\n\tint n, l, r;\n\tscanf(\"%d%d%d\",&n,&l,&r);\n\tfor (int i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&c1[i].ord);\n\t\tc1[i].ind=i;\n\t}\n\n\tqsort(c1, n, sizeof(c1[0]), cmp);\n\n\tint moguce=1;\n\tint prosla=l-a[c1[0].ind]-1;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tint j = c1[i].ind;\n\t\tint k = (prosla+1>l-a[j])?prosla+1:l-a[j];\n\t\tif (k>r-a[j]) {moguce=0; break;}\n\t\tb[j]=k+a[j];\n\t\tprosla=k;\n\t}\n\n\tif (!moguce) printf(\"%d\", -1);\n\telse \n\t\tfor (int i=0;i<n;i++)\n\t\t\tprintf(\"%d \", b[i]);\n\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_N 100005\n\nstruct par\n{\n\tint ord,ind;\n};\n\nint cmp(const void *p, const void *q) \n{\n    int ord1 = ((struct par *)p)->ord;\n    int ord2 = ((struct par *)q)->ord;\n    return ord1-ord2;\n}\n\nint a[MAX_N], b[MAX_N];\nstruct par c1[MAX_N];\n\nint main()\n{\n\tint n, l, r;\n\tscanf(\"%d%d%d\",&n,&l,&r);\n\tfor (int i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&c1[i].ord);\n\t\tc1[i].ind=i;\n\t}\n\n\tqsort(c1, n, sizeof(c1[0]), cmp);\n\n\tint moguce=1;\n\tint prosla=l-a[c1[0].ind]-1;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tint j = c1[i].ind;\n\t\tint k = (prosla+1>l-a[j])?prosla+1:l-a[j];\n\t\tif (k>r-a[j]) {moguce=0; break;}\n\t\tb[j]=k+a[j];\n\t\tprosla=k;\n\t}\n\n\tif (!moguce) printf(\"%d\", -1);\n\telse \n\t\tfor (int i=0;i<n;i++)\n\t\t\tprintf(\"%d \", b[i]);\n\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9454828660436138, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "d561dc222de3f9a33a225ad814a8a4ab", "bug_code_uid": "584f0fcf1da5d2d0cdb84e3b369d5d3e", "src_uid": "2be73aa00a13be5274cf840ecd3befcb", "apr_id": "7b95dcb663a4037de29369da3164e62d", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n//int abs(int a,int b)\n//{\n  //  return a>b?a:b;\n//}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int l[n],r[n],L=0,R=0,x=0,col=0,y=0,col1=0;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&l[i]);\n        scanf(\"%d\",&r[i]);\n        \n        if(x<l[i]-r[i])\n        {\n            x=l[i]-r[i];\n            col=i+1;\n        }\n        if(y<r[i]-l[i])\n        {\n            y=r[i]-l[i];\n            col1=i+1;\n        }       \n        L=L+l[i];\n        R=R+r[i];\n    }\n    if(L-R>y-x)\n    {\n        printf(\"%d\",col1);\n    }\n    else if(L-R<y-x)\n    {\n        printf(\"%d\",col);\n    }\n    else\n    {\n        printf(\"%d\",col);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int l[n],r[n],L=0,R=0,x=0,col=0,y=0,col1=0;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&l[i]);\n        scanf(\"%d\",&r[i]);\n        \n        if(x<l[i]-r[i])\n        {\n            x=l[i]-r[i];\n            col=i+1;\n        }\n        if(y<r[i]-l[i])\n        {\n            y=r[i]-l[i];\n            col1=i+1;\n        }       \n        L=L+l[i];\n        R=R+r[i];\n    }\n    \n    \n    if(L-R>x-y)\n    {\n        printf(\"%d\",col1);\n    }\n    else if(L-R<x-y)\n    {\n        printf(\"%d\",col);\n    }\n    else\n    {\n        printf(\"%d\",col);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9887820512820513, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1a5378895e341b5aff5274ec8c4842f4", "bug_code_uid": "fd72ef301af9fda735d9b50b3d036f8d", "src_uid": "8a6c3436f73286ca54f51fb90017a299", "apr_id": "d4e7061c950cdd6269b818c77603a029", "difficulty": 800, "tags": ["number theory", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n \nvoid main(){\n    int a = 6, b = 10, c = 14, d = 0;\n    int n = 0, t = 0;\n    do{\n        scanf(\"%d\", &t);\n    }while(t < 1 && t > 1000);\n    \n    while(t > 0){\n        do{\n            scanf(\"%d\", &n);\n        }while(n < 1 && n > 20000);\n        \n        d = n - a - b - c;\n        \n        if(d > 0){\n            printf(\"YES\\n\");\n            if (d == 6 || d == 10 || d == 14){\n                printf(\"%d %d %d %d\\n\", a, b, c++, d--);\n            }else{\n                printf(\"%d %d %d %d\\n\", a, b, c, d);\n            }\n        }else{\n            printf(\"NO\\n\");\n        }\n        \n        t--;\n    }\n}", "fixed": "#include<stdio.h>\n \nvoid main(){\n    int a = 6, b = 10, c = 14, d = 0;\n    int n = 0, t = 0;\n    do{\n        scanf(\"%d\", &t);\n    }while(t < 1 && t > 1000);\n    \n    while(t > 0){\n        do{\n            scanf(\"%d\", &n);\n        }while(n < 1 && n > 20000);\n        \n        d = n - a - b - c;\n        \n        if(d > 0){\n            printf(\"YES\\n\");\n            if (d == 6 || d == 10 || d == 14){\n                printf(\"%d %d %d %d\\n\", a, b, c + 1, d - 1);\n            }else{\n                printf(\"%d %d %d %d\\n\", a, b, c, d);\n            }\n        }else{\n            printf(\"NO\\n\");\n        }\n        \n        t--;\n    }\n}"}
{"similarity_score": 0.6946778711484594, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "0362d459e66376550d4806245c0545e1", "bug_code_uid": "987d659e28b9f4e07af1dc39ea0e97e7", "src_uid": "beaeeb8757232b141d510547d73ade04", "apr_id": "e668cc6785058b9e0794f786489567c7", "difficulty": 1200, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[1000005],b[1000005];\nint main()\n{\n\tint n,count=0,i,j,li;\n\t\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor (i=0;i<n;i++)\n\tb[i]=1;\n\tfor (i=1;i<n;i++)\n\t{\n\t\tli=a[i];\n\t\tfor (j=1;j<=li;j++)\n\t\t{b[i-j]=0;\n\t\tif ((i-j)<0)\n\t\tbreak;\n\t\t}\n\t\t\n\t}\n\tfor (i=0;i<n;i++)\n\tif (b[i]!=0)\n\tcount++;\n\tprintf (\"%d\",count);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint a[1000005];\nint main()\n{\n\tint n,count=1,i,j,li,t;\n\t\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor (i=0;i<n;i++)\n\t\n\tt=n-a[n-1];\n\tfor (i=n-1;i>=0;i--)\n\t{if ((i+1)<t)\n\t\tcount ++;\n\t\tli=a[i];\n\t\tif ((i+1-li)<t)\n\t\tt=i+1-li;\n\t\n\t\t/*for (j=1;j<=li;j++)\n\t\t{b[i-j]=0;\n\t\tif ((i-j)<0)\n\t\tbreak;\n\t\t}*/\n\t\t\n\t}\n\n\tprintf (\"%d\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9576547231270358, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a38efe0e1e78b64f1117103a5c427a68", "bug_code_uid": "a6381c94d08fbf5fff82ae2adad8fb48", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "d636f77815670bd623304c154686241a", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int y, k, n;\n    int ban = 0;\n    int i;\n\n    scanf(\"%d %d %d\", &y, &k, &n);\n\n    for(i=k; i<=n; i+=k){\n        if ((i-y) >= 0 && i%k == 0){\n            printf(\"%d \", i-y);\n            ban = 1;\n        }\n    }\n\n    if (ban == 0){\n        printf(\"-1\");\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    int y, k, n;\n    int ban = 0;\n    int i;\n\n    scanf(\"%d %d %d\", &y, &k, &n);\n\n    for(i=k; i<=n; i+=k){\n        if ((i-y)>0 && i%k==0){\n            printf(\"%d \", i-y);\n            ban = 1;\n        }\n    }\n\n    if (ban == 0){\n        printf(\"-1\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9823982398239824, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "6051e74537ad8b8085d9e40bda5b403a", "bug_code_uid": "3ec3872501e007c1300f3ed59720cdca", "src_uid": "6e85f83d544eeb16f57523eb532abf04", "apr_id": "bda55d42fca09493aae3b801ffca2bfb", "difficulty": 1700, "tags": ["combinatorics", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <memory.h>\n#include <stdlib.h>\n\n#define get_2d_element(r, a, b) ((r)[(a)*(4000+2)+(b)])\n#define begin_at(r, i) &get_2d_element(r,i,1)\n#define next_at(r, i) get_2d_element(r,i, ++get_2d_element(r,i,0))\n\nstatic int goin[5000 * 5000];\nstatic int goout[5000 * 5000];\nstatic int result[5000 * 5000];\n\nint main()\n{\n\tint m, n;\n\tscanf(\"%d%d\", &n, &m);\n\n\twhile (m--)\n\t{\n\t\tint a, b;\n\t\tscanf(\"%d%d\", &a, &b);\n\n\t\tint* it;\n\n\t\tit = begin_at(goin, a);\n\t\twhile (*it)\n\t\t{\n\t\t\t++get_2d_element(result, *(it++), b);\n\t\t}\n\n\t\tit = begin_at(goout, b);\n\t\twhile (*it)\n\t\t{\n\t\t\t++get_2d_element(result, a, *(it++));\n\t\t}\n\n\t\tnext_at(goin, b) = a;\n\t\tnext_at(goout, a) = b;\n\t}\n\n\tint i, j;\n\tint ret = 0;\n\tfor (i = 1; i <= n; ++i)\n\t{\n\t\tfor (j = 1; j <= n; ++j)\n\t\t{\n\t\t\tif (i != j)\n\t\t\t{\n\t\t\t\tint temp = get_2d_element(result, i, j);\n\t\t\t\tret += ((temp * (temp - 1)) >> 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"%d\", ret);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <memory.h>\n#include <stdlib.h>\n\n#define get_2d_element(r, a, b) ((r)[(a)*(3001+2)+(b)])\n#define begin_at(r, i) &get_2d_element(r,i,1)\n#define next_at(r, i) get_2d_element(r,i, ++get_2d_element(r,i,0))\n\nstatic int goin[3100 * 3100];\nstatic int goout[3100 * 3100];\nstatic int result[3100 * 3100];\n\nint main()\n{\n\tint m, n;\n\tscanf(\"%d%d\", &n, &m);\n\n\twhile (m--)\n\t{\n\t\tint a, b;\n\t\tscanf(\"%d%d\", &a, &b);\n\n\t\tint* it;\n\n\t\tit = begin_at(goin, a);\n\t\twhile (*it)\n\t\t{\n\t\t\t++get_2d_element(result, *(it++), b);\n\t\t}\n\n\t\tit = begin_at(goout, b);\n\t\twhile (*it)\n\t\t{\n\t\t\t++get_2d_element(result, a, *(it++));\n\t\t}\n\n\t\tnext_at(goin, b) = a;\n\t\tnext_at(goout, a) = b;\n\t}\n\n\tint i, j;\n\tint ret = 0;\n\tfor (i = 1; i <= n; ++i)\n\t{\n\t\tfor (j = 1; j <= n; ++j)\n\t\t{\n\t\t\tif (i != j)\n\t\t\t{\n\t\t\t\tint temp = get_2d_element(result, i, j);\n\t\t\t\tret += ((temp * (temp - 1)) >> 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"%d\", ret);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9982758620689656, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "65111441f32d7ea912f815744dd7034b", "bug_code_uid": "6fda6d6aa3ddfd76b0c432cb70391000", "src_uid": "ea1bebf20f24a681f03082c92326db5e", "apr_id": "a79548d29cffec3f63400134302ff414", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main () {\n    int n, m, i, pri = 0, sum = 0, mint = 10000, j;\n    int l[100], r[100], t[100], c[100];\n    scanf(\"%d%d\", &n, &m);\n    for (i = 0; i < m; i++)\n        scanf(\"%d%d%d%d\", l + i, r + i, t + i, c + i);\n\n    for (j = 1; j <= n; j++) {\n        sum = 0;\n        for (i = 0; i < n; i++) {\n            if (l[i] <= j && r[i] >= j)\n                if (t[i] < mint) {\n                    mint = t[i];\n                    sum = c[i];\n                }\n        }\n        mint = 10000;\n        pri += sum;\n    }\n\n\n\n\n    printf(\"%d\\n\", pri);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main () {\n    int n, m, i, pri = 0, sum = 0, mint = 10000, j;\n    int l[100], r[100], t[100], c[100];\n    scanf(\"%d%d\", &n, &m);\n    for (i = 0; i < m; i++)\n        scanf(\"%d%d%d%d\", l + i, r + i, t + i, c + i);\n\n    for (j = 1; j <= n; j++) {\n        sum = 0;\n        for (i = 0; i < m; i++) {\n            if (l[i] <= j && r[i] >= j)\n                if (t[i] < mint) {\n                    mint = t[i];\n                    sum = c[i];\n                }\n        }\n        mint = 10000;\n        pri += sum;\n    }\n\n\n\n\n    printf(\"%d\\n\", pri);\n    return 0;\n}\n"}
{"similarity_score": 0.9945054945054945, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cade14ef7d543d953113858c191946c7", "bug_code_uid": "601d5587f874210489fee474b449b591", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "1e540eeb5ea78bd6af22dde9f9e28aad", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;i++){\n        if(i%2==1)\n        {\n           printf(\"I hate that \\t\");\n        }\n        else\n        {\n           printf(\"I love that \\t\");\n        }\n    }\n    if(n%2==0)\n    {\n       printf(\"I hate it\");\n    }\n    if(n%2==1)\n    {\n       printf(\"I love it\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;i++){\n        if(i%2==1)\n        {\n           printf(\"I hate that \\t\");\n        }\n        else\n        {\n           printf(\"I love that \\t\");\n        }\n    }\n    if(n%2==1)\n    {\n       printf(\"I hate it\");\n    }\n    if(n%2==0)\n    {\n       printf(\"I love it\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9976525821596244, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b6594258a1cfad26807bad106ed3dd10", "bug_code_uid": "2437d4459570a588ef7b1fd75bdfc8d3", "src_uid": "ea011f93837fdf985f7eaa7a43e22cc8", "apr_id": "ce3635ce6c5b42b85cf21b62a280de94", "difficulty": null, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t,i,A[100],j,c;\n    char p[100];\n    scanf(\"%d\",&t);\n    j=0;\n    while(j<t){\n        scanf(\"%s\",p);\n        c=0;\n        for(i=0;*(p+i)!='\\0';i++){\n            if(*(p+i)==0){\n                c++;\n            }\n        }\n        if((*p==1) && (c==i-1)){\n            i--;\n        }\n        A[j]=i;\n        j++;\n    }\n    for(j=0;j<t;j++){\n        printf(\"%d\\n\",A[j]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t,i,A[100],j,c;\n    char p[101];\n    scanf(\"%d\",&t);\n    j=0;\n    while(j<t){\n        scanf(\"%s\",p);\n        c=0;\n        for(i=0;*(p+i)!='\\0';i++){\n            if(*(p+i)==0){\n                c++;\n            }\n        }\n        if((*p==1) && (c==i-1)){\n            i--;\n        }\n        A[j]=i;\n        j++;\n    }\n    for(j=0;j<t;j++){\n        printf(\"%d\\n\",A[j]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.974025974025974, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f95b85c1f35b2238d5e4dd961ed715c3", "bug_code_uid": "e2c30905b48184f42aa92699c3408aca", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "ccd137b40a5969ce1c83fb90dfc8e05c", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n    int r=2*m,i,j,q=0;\n    int a[n][r];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<r;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j+1<r;j++)\n        {\n            if(a[i][j]==1 || a[i][j+1]==1)\n            {\n                q++;\n                j++;\n            }\n        }\n    }\n    printf(\"%d\",q);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n    int r=2*m,i,j,q=0;\n    int a[n][r];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<r;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j+1<r;j+=2)\n        {\n            if(a[i][j]==1 || a[i][j+1]==1)\n            {\n                q++;\n            }\n        }\n    }\n    printf(\"%d\",q);\n    return 0;\n}\n"}
{"similarity_score": 0.9823911028730306, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a7baac475d9a2f06c5842ad5eccda1e8", "bug_code_uid": "0ab1829f200c0daa9f3ce2dab00ab045", "src_uid": "f06dff83491772f8879e45b90b61dc88", "apr_id": "063ab9c4efa2b452cef9b92ca91b5976", "difficulty": 1800, "tags": ["binary search", "interactive"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint answer,n,m,T[33];\nint seek_truth(){\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",i);fflush(stdout);\n\t\tscanf(\"%d\",&answer);\n\t\tif(!answer) exit(0);\n\t\tT[i-1]= i==1;\n\t}\n}\nint bin_srch(int L, int R, int i){\n\tint mid = (L+R)>>1;\n\tprintf(\"%d\\n\", mid);fflush(stdout);\n\tscanf(\"%d\",&answer);\n\tif(!T[i]) answer=-answer;\n\tif(!answer) exit(0);\n\tif(answer== 1) bin_srch(mid+1, R, (i+1)%n);\n\tif(answer==-1) bin_srch(L,  mid,  (i+1)%n);\n}\nint main(){\n\tscanf(\"%d%d\",&m,&n);\n\tseek_truth();\n\tbin_srch(1,m, 0);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint answer,n,m,T[33];\nint seek_truth(){\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",i);fflush(stdout);\n\t\tscanf(\"%d\",&answer);\n\t\tif(!answer||answer==-2) exit(0);\n\t\tT[i-1]= answer==1;\n\t}\n}\nint bin_srch(int L, int R, int i){\n\tint mid = (L+R)>>1;\n\tprintf(\"%d\\n\", mid);fflush(stdout);\n\tscanf(\"%d\",&answer);\n\tif(!T[i]) answer=-answer;\n\tif(!answer) exit(0);\n\tif(answer== 1) bin_srch(mid+1, R, (i+1)%n);\n\tif(answer==-1) bin_srch(L,  mid,  (i+1)%n);\n}\nint main(){\n\tscanf(\"%d%d\",&m,&n);\n\tseek_truth();\n\tbin_srch(1,m, 0);\n}\n"}
{"similarity_score": 0.3868065967016492, "equal_cnt": 20, "replace_cnt": 14, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "ed8411a364f2000a25b256a6d79f4e97", "bug_code_uid": "dcddc4bb127d8114efdd1ff17952550f", "src_uid": "2070955288b2e2cdbae728d8e7ce78ab", "apr_id": "cf5dfec3e17f9c9ee30fe7e9d5fb92a1", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\t\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint a[m];\n\tfor (int i=0;i<m;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tint s[n+1];\n\tint ans[m];\n\tfor (int i=0;i<n+1;i++)\n\t\ts[i]=0;\n\ts[0]=1;\n\tfor (int i=0;i<m;i++)\n        {\n        \ts[a[i]]++;\n        \tint flag=1;\n        \tfor (int j=1;j<=n;j++)\n        \t{\n        \t\tif (s[j]==0)\n        \t\t{\n        \t\t\tflag=0;\n        \t\t\tbreak;\n        \t\t}\n        \t}\n        \tif (flag==0)\n        \t\tans[i]=0;\n        \telse\n        \t\t{\n        \t\t\tans[i]=1;\n        \t\t\tfor (int i=1;i<=n;i++)\n        \t\t\t{\n                       s[i]--;\n        \t\t\t}\n        \t\t}\n        }\n        for (int i=0;i<m;i++)\n        \tprintf(\"%d \",ans[i] );\n\n\t\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint a[m];\n\tfor (int i=0;i<m;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tint ans[m];\n\t\n\tif (m>=n)\n\t{\n\t\tfor (int i=0;i<n-1;i++)\n\t\tans[i]=0;\n\tint s[n];\n\tfor (int i=0;i<n;i++)\n\t\ts[i]=0;\n\t\n\tint flag=1;\n\tfor (int i=0;i<n-1;i++)\n\t\ts[a[i]-1]++;\n\tfor (int i=n-1;i<m;i++)\n\t{\n\t\tflag=1;\n\t\ts[a[i]-1]++;\n\t\tfor (int i=0;i<n;i++)\n\t\t{\n\t\t\tif (s[i]==0)\n\t\t\t{\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag==0)\n\t\t\tans[i]=0;\n\t\telse\n\t\t\t{\n\t\t\t\tans[i]=1;\n\t\t\t\tfor (int i=0;i<n;i++)\n\t\t\t\t\ts[i]--;\n\t\t\t}\n\t}\n   }\n   else\n   {\n   \tfor (int i=0;i<m;i++)\n   \t\tans[i]=0;\n   }\n\tfor (int i=0;i<m;i++)\n\t\tprintf(\"%d\",ans[i] );\n\t\t\n\t\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9915254237288136, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3f8331bf978c336fa8681b9559d69621", "bug_code_uid": "208b0b5e22bf3a88cb95aab570fc8c9d", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "9b30e50ecadabf4201026afee8be1763", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong long a,b,c,x,y,n;\n\tscanf(\"%lld\",&n);\n\tfor (long long i=1;i<=n;i++){\n\tscanf(\"%lld %lld %lld\",&a,&b,&c);\n\t\tlong long x = a/2;\n\t\tif(2*b>c) printf(\"%lld\",x*c + (a%2)*b);\n\t\telse printf(\"%lld\",b*a);\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tlong long a,b,c,x,y,n;\n\tscanf(\"%lld\",&n);\n\tfor (long long i=1;i<=n;i++){\n\tscanf(\"%lld %lld %lld\",&a,&b,&c);\n\t\tlong long x = a/2;\n\t\tif(2*b>c) printf(\"%lld\\n\",x*c + (a%2)*b);\n\t\telse printf(\"%lld\\n\",b*a);\n\t}\n}\n"}
{"similarity_score": 0.7032019704433498, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "143b443e597cb936d90d0c8ff0fdab4b", "bug_code_uid": "8c0a15d0482d43cc595f710a6c5463b6", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "a61a70aeef8a956140ae6e3558dafa72", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n\r\n    for (int i=0; i<tc; i++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n+2];\r\n        for (int j=0; j<n; j++) {\r\n            scanf(\"%d\", &arr[j]);\r\n        }\r\n        int sum=0;\r\n        double average;\r\n\r\n        for (int j=0; j<n; j++) {\r\n            sum+=arr[j];\r\n            average = (double)sum/n;\r\n        }\r\n\r\n        int counter = 0;\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j] < average) {\r\n               counter++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", counter); \r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n\r\n    for (int i=0; i<tc; i++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n+2];\r\n        for (int j=0; j<n; j++) {\r\n            scanf(\"%d\", &arr[j]);\r\n        }\r\n        int min1=100,min2=100,indexMin1,indexMin2;\r\n        double average;\r\n\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j] <= min1) {\r\n                min1 = arr[j];\r\n                indexMin1 = j;\r\n            } else {\r\n                min1 = min1;\r\n                indexMin1 = j;\r\n            }\r\n        }\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j] <= min2 && j != indexMin1) {\r\n                min2 = arr[j];\r\n            } else {\r\n                min2 = min2;\r\n            }\r\n        }\r\n        average = (double)(min1 + min2)/2;\r\n\r\n        int counter=0;\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j] <= average) {\r\n                counter++;\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\", n - counter); \r\n    }\r\n}"}
{"similarity_score": 0.6586466165413534, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "0efce24a78b09625b4ac30b98bd4b802", "bug_code_uid": "60aadde32703599c5c5d14b76b2c254c", "src_uid": "d7381f73ee29c9b89671f21cafee12e7", "apr_id": "503875b8fb7fcbf832bab8507fbbe9b0", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nmain()\n{\n    int n,i,j,c=0;\n    long d,a[n];\n    scanf(\"%d%ld\",&n,&d);\n    for(i=0;i<n;i++)\n    scanf(\"%ld\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n       for(j=i+1;j<n;j++)\n       {\n           if(a[i]-a[j]<0)\n           a[i]-a[j]=-(a[i]-a[j]);\n           if((a[i]-a[j])<=d)\n           c=c+2;;\n       }\n    }\n    printf(\"%d\",c);\n}", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,j,c=0;\n    long d;\n    scanf(\"%d%ld\",&n,&d);\n    long a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%ld\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(abs(a[i]-a[j])<=d)\n            c=c+2;\n        }\n    }\n    printf(\"%d\",c);\n\n}"}
{"similarity_score": 0.324729392173189, "equal_cnt": 16, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "f2e12a6ae130044840b63120b9e6c351", "bug_code_uid": "091ce3e2b266c5aab270d08ffe6fa476", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "a3350986aa00ea1d4f1f2a32f04d715a", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int s,n,flag = 1,x,y;\n    scanf(\"%lld %lld\", &s, &n);\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\"%lld %lld\", &x, &y);\n        if(x => s) flag = 0;\n        else s += y;\n    }\n    if(flag) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint Sort(int arraylocal[],int array2[],int len)\n{\n    int temp;\n    while(1)\n    {\n        int r = 1;\n        for(int i = 0; i < len-1; i++)\n        {\n            if(arraylocal[i] > arraylocal[i+1])\n            {\n                temp = arraylocal[i];\n                arraylocal[i] = arraylocal[i+1];\n                arraylocal[i+1] = temp;\n                temp = array2[i];\n                array2[i] = array2[i+1];\n                array2[i+1] = temp;\n                r = 0;\n            }\n        }\n        if(r==1) break;\n    }\n}\nint main()\n{\n    long long int s,temp,n,flag = 1;\n    scanf(\"%lld %lld\", &s, &n);\n    temp = s;\n    int x[n],y[n];\n    for(int i = 0; i < n; i++) scanf(\"%lld %lld\", &x[i], &y[i]);\n    Sort(x,y,n);\n    for(int i = 0; i < n; i++)\n    {\n        if(s > x[i]) s += y[i];\n        else { printf(\"NO\\n\"); return 0; }\n    }\n    printf(\"YES\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.6338893766461808, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "cc7af1a49d2a6682c1c53061dba19870", "bug_code_uid": "11278cbc825d8ee5c8085ad21fa2e3ef", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "e198c5ca9b28f95db5cac654b9dd8e86", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n void check(long long);\r\n \r\n int main(){\r\n     long t;\r\n     long long a;\r\n     scanf(\"%ld\",&t);\r\n     for(long i=0;i<t;i++){\r\n         scanf(\"%lld\",&a);\r\n         if(a==1 || a==2){\r\n             printf(\"NO\\n\");\r\n             continue;\r\n         }\r\n         check(a);\r\n     }\r\n     return 0;\r\n     }\r\n     void check(long long a){\r\n      \r\n            for(long long i=3;i<=a;i++){\r\n                if(a%i==0){\r\n                    printf(\"YES\\n\");\r\n                    return;\r\n                }\r\n            }printf(\"NO\\n\");\r\n            return;\r\n         \r\n         \r\n         \r\n     }\r\n     \r\n     \r\n     \r\n     \r\n     ", "fixed": "#include<stdio.h>\r\n void check(long long);\r\n \r\n int main(){\r\n     long t;\r\n     long long a;\r\n     scanf(\"%ld\",&t);\r\n     for(long i=0;i<t;i++){\r\n         scanf(\"%lld\",&a);\r\n         \r\n         check(a);\r\n     }\r\n     return 0;\r\n     }\r\n     void check(long long a){\r\n      \r\n      while(a%2==0){\r\n          a/=2;\r\n      }if(a!=1){\r\n          printf(\"YES\\n\");\r\n          return;\r\n      }else printf(\"NO\\n\");\r\n      return;\r\n         \r\n         \r\n         \r\n     }\r\n     \r\n     \r\n     \r\n     \r\n     "}
{"similarity_score": 0.9988876529477196, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "be2ba6a68c5171033f4a4d4ee3691548", "bug_code_uid": "0e04d024a234b5c38ed7bf96a654f3c4", "src_uid": "9b1887582a9eb7cff49994ddcc2ee9b8", "apr_id": "4be6fe58862525785789d0aabd589bf2", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1000],temp[1000],b[10000];\n\tint n,flag=0,i,j;\n\tscanf(\"%s\", a);\n\tn=strlen(a);\n\tfor(i=0,j=n-1;i<n;i++,j--)\n\t{\n\t\tif(a[i]==a[j])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\tprintf(\"%s\",a);\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tb[i]=a[i];\n\t\t}\n\t\tfor(j=n-1;j>=0;j--)\n\t\t{\n\t\t\tb[i]=a[j];\n\t\t\ti++;\n\t\t}\n\t\tfor(j=0;j<=i;j++)\n\t\t{\n\t\t    printf(\"%c\",b[j]);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1000],temp[1000],b[10000];\n\tint n,flag=0,i,j;\n\tscanf(\"%s\", a);\n\tn=strlen(a);\n\tfor(i=0,j=n-1;i<n;i++,j--)\n\t{\n\t\tif(a[i]==a[j])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\tprintf(\"%s\",a);\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tb[i]=a[i];\n\t\t}\n\t\tfor(j=n-1;j>=0;j--)\n\t\t{\n\t\t\tb[i]=a[j];\n\t\t\ti++;\n\t\t}\n\t\tfor(j=0;j<i;j++)\n\t\t{\n\t\t    printf(\"%c\",b[j]);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7695560253699789, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e765d86dd00fbfd175a71e6e73daf49f", "bug_code_uid": "a30cba6b4bc9cc4212ff57853e11fd52", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "a48098f9b843c1ed4bd4056ecd808038", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  unsigned int n,a=0;\n  int k;\n  scanf(\"%u %d\",&n,&k);\n  int y[n],b;\n  unsigned int i,j;\n  for(i=0;i<n;i++)\n  {\n      scanf(\"%d\",&y[i]);\n  }\n  for(i=0;i<n;i++)\n  {\n      for(j=i+1;j<n;j++)\n      {\n          if(y[i]>y[j])\n          {\n              b=y[i]; y[i]=y[j]; y[j]=b;\n          }\n      }\n  }\n  //unsigned int i,j;\n  b=5-k;\n  if(b>0)\n  {\n      for(i=2;i<n;i=i+3)\n      {\n          if(y[i]<=b) a++;\n      }\n  }\n  printf(\"%u\\n\",a);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  unsigned int n,a=0;\n  int k;\n  scanf(\"%u %d\",&n,&k);\n  int y[n],b;\n  unsigned int i,j;\n  for(i=0;i<n;i++)\n  {\n      scanf(\"%d\",&y[i]);\n  }\n  for(i=0;i<n;i++)\n  {\n      for(j=i+1;j<n;j++)\n      {\n          if(y[i]>y[j])\n          {\n              b=y[i]; y[i]=y[j]; y[j]=b;\n          }\n      }\n  }\n  //unsigned int i,j;\n  b=5-k;\n      for(i=2;i<n;i=i+3)\n      {\n          if(y[i]<=b) a++;\n      }\n  printf(\"%u\\n\",a);\n    return 0;\n}\n"}
{"similarity_score": 0.9872068230277186, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f16d0bafb05fa0422247223f184ebe72", "bug_code_uid": "baa2ea9436d1a455d2d16a035b0b6562", "src_uid": "6ca98e655007bfb86f1039c9f096557e", "apr_id": "1653c214749682e2f6a10a66c9757895", "difficulty": 900, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nint compare(const void *pa,const void *pb)\r\n{\r\n    const int *p1=pa;\r\n    const int *p2=pb;\r\n    return *p1-*p2;\r\n}\r\nint main()\r\n{\r\n    long long t,i,j,o=0,k=0;\r\n    scanf(\"%lli\",&t);\r\n    long long a[t],b[t][100],c[t][100];\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lli\",&a[i]);\r\n        for(j=0;j<a[i];j++)\r\n        {\r\n            scanf(\"%lli\",&b[i][j]);\r\n        }\r\n        for(j=0;j<a[i];j++)\r\n        {\r\n            scanf(\"%lli\",&c[i][j]);\r\n        }\r\n    }\r\n   for(i=0;i<t;i++)\r\n   {\r\n    qsort(b[i],a[i],sizeof(long long),compare);\r\n    qsort(c[i],a[i],sizeof(long long),compare);\r\n   }\r\n    for(i=0;i<t;i++)\r\n    {\r\n        for(j=0;j<a[i];j++)\r\n        {\r\n           if(b[i][j]==c[i][j] || b[i][j]+1==c[i][j])\r\n           k++;\r\n        }\r\n        if(k>0)\r\n        printf(\"yes\\n\");\r\n        else\r\n        printf(\"no\\n\");\r\n        k=0;\r\n    }\r\nreturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nint compare(const void *pa,const void *pb)\r\n{\r\n    const int *p1=pa;\r\n    const int *p2=pb;\r\n    return *p1-*p2;\r\n}\r\nint main()\r\n{\r\n    long long t,i,j,o=0,k=0,d;\r\n    scanf(\"%lli\",&t);\r\n    long long a[t],b[t][100],c[t][100];\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lli\",&a[i]);\r\n        for(j=0;j<a[i];j++)\r\n        {\r\n            scanf(\"%lli\",&b[i][j]);\r\n        }\r\n        for(j=0;j<a[i];j++)\r\n        {\r\n            scanf(\"%lli\",&c[i][j]);\r\n        }\r\n    }\r\n   for(i=0;i<t;i++)\r\n   {\r\n    qsort(b[i],a[i],sizeof(long long),compare);\r\n    qsort(c[i],a[i],sizeof(long long),compare);\r\n   }\r\n    for(i=0;i<t;i++)\r\n    {\r\n        for(j=0;j<a[i];j++)\r\n        {\r\n           if(b[i][j]==c[i][j] || b[i][j]+1==c[i][j])\r\n           k++;\r\n            \r\n        }\r\n        if(k==a[i])\r\n        printf(\"yes\\n\");\r\n        else\r\n        printf(\"no\\n\");\r\n        k=0;\r\n    }\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.7790262172284644, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "006a2745c91e9e499dcefcb0212a52f5", "bug_code_uid": "5f6bc23de223959d5db6ad05ecb8a253", "src_uid": "62a672fcaee8be282700176803c623a7", "apr_id": "7bda64fa20716a9d711d8f6c38b701a2", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(void)\n{\n  int i=0;\n  int j=0;\n  int r=0;\n  int s=0;\n  int a,b;\n  int t=0;\n  char input1[100001]=\" \";\n  char input2[31]=\" \";\n\n  scanf(\"%s\",input1);\n  scanf(\"%s\",input2);\n  a=strlen(input1);\n  b=strlen(input2);\n\n  while(i!=a)\n  {  for(j=0;j<b;j++)\n     {  if(input2[j]==input1[i+j])\n        {  r++;}\n        else { r=0; break;}\n     }\n     i++;\n     if(r==b) s++;\n     r=0;\n  }\n  for(i=1;i<b;i++)\n  {  if(input2[0]!=input[i])\n     { t++; break;}\n  }\n  if(t!=0) printf(\"%d\\n\",s);\n  else printf(\"%d\\n\",(s+1)/2);\nreturn 0;\n}\n  ", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(void)\n{\n  int i=0;\n  int j=0;\n  int r=0;\n  int s=0;\n  int a,b;\n  int t=0;\n  char input1[100001]=\" \";\n  char input2[31]=\" \";\n\n  scanf(\"%s\",input1);\n  scanf(\"%s\",input2);\n  a=strlen(input1);\n  b=strlen(input2);\n\n  while(i!=a)\n  {  for(j=0;j<b;j++)\n     {  if(input2[j]==input1[i+j])\n        { r++;}\n        else { r=0; break;}\n     }\n     if(r==b) {s++; for(t=0;t<b;t++) input1[i+j-1-t]=' ';}\n     r=0;     i++;\n  }\n printf(\"%d\\n\",s);\n\nreturn 0;\n}\n  "}
{"similarity_score": 0.9506903353057199, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ad34b32165ed72968186df5c2b59957c", "bug_code_uid": "1c882db1dd050fee481d4c009f5206bf", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "4fd8da059c5dd1fb228eb57b42e23bec", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint t; scanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int a,b,c,n,k;\n\t\tscanf(\"%lld %lld\",&n,&k);\n\t\tint arr[n+5],mx=-5000,mx1=-5000;\n\t\tfor(a=0 ; a<n ; a++)\n\t\t{scanf(\"%d\",&arr[a]);if(mx<arr[a]) mx=arr[a];}\n\t\tfor(b=0 ; b<n ; b++) {arr[b]=mx-arr[b];  if(mx1<arr[b]) mx1=arr[b];}\n\tif(k%2!=0) {for(b=0 ; b<n ; b++)\n\t\tprintf(\"%d \",arr[b]);\tprintf(\"\\n\");\n\t}\n\telse  {  \tfor(b=0 ; b<n ; b++) arr[b]=mx1-arr[b];\n\t\t\t\tfor(b=0 ; b<n ; b++)\n\t\t\t\tprintf(\"%d \",arr[b]);\tprintf(\"\\n\");\n\t\t  }\n\t}\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n\tint t; scanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int a,b,c,n,k,mx=-3000000000,mx1=-3000000000;\n\t\tscanf(\"%lld %lld\",&n,&k);\n\t\tint arr[n+5];\n\t\tfor(a=0 ; a<n ; a++)\n\t\t{scanf(\"%d\",&arr[a]);if(mx<arr[a]) mx=arr[a];}\n\t\tfor(b=0 ; b<n ; b++) {arr[b]=mx-arr[b];  if(mx1<arr[b]) mx1=arr[b];}\n\tif(k%2!=0) {for(b=0 ; b<n ; b++)\n\t\tprintf(\"%d \",arr[b]);\tprintf(\"\\n\");\n\t}\n\telse  {  \tfor(b=0 ; b<n ; b++) arr[b]=mx1-arr[b];\n\t\t\t\tfor(b=0 ; b<n ; b++)\n\t\t\t\tprintf(\"%d \",arr[b]);\tprintf(\"\\n\");\n\t\t  }\n\t}\n}\n"}
{"similarity_score": 0.41134751773049644, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1a7f759f279c646972b39e2804d0c644", "bug_code_uid": "ef5b751ec4c239b28f07e7d9c3cf11d5", "src_uid": "089eea1841ef10064647e61094c374fd", "apr_id": "ede75b08e3d45b0183851cdeb8e5cf84", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 1000000\nint main() {\n  int n;\n  scanf(\"%d\",&n);\n  int w[N];\n  int i;\n  for(i=0;i<n;i++) {\n    scanf(\"%d\",&w[i]);\n  }\n  sort(w,n);\n  \n  return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#define N 1000000\nint cmp(const void *a,const void *b) {\n  return *(int *)a-*(int *)b;\n}\nvoid sort(int *a,int n) {\n  qsort(a,n,sizeof(int),cmp);\n}\nint main() {\n  int n;\n  scanf(\"%d\",&n);\n  int w[N];\n  int i;\n  for(i=0;i<n;i++) {\n    scanf(\"%d\",&w[i]);\n  }\n  sort(w,n);\n  int nw=n;\n  int find;\n  while(1) {\n    n=nw;\n    for(i=0;i<n-1;i++) {\n      if(w[i]==w[i+1]) {\n        w[i+1]++;\n        w[i]=-1;\n      }\n    }\n    find=0;\n    nw=0;\n    for(i=0;i<n;i++) {\n      if(w[i]>-1) {\n        w[nw]=w[i];\n        nw++;\n      } else {\n        find=1;\n      }\n    }\n    sort(w,nw);\n    if(!find) break;\n  }\n  printf(\"%d\",nw);\n  \n  return 0;\n}"}
{"similarity_score": 0.09403669724770643, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "564d87de4a1e2f255a0eb6ac9867fad7", "bug_code_uid": "8790816877899c5179fc5a4599e89e4a", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "d917c6191457acc98b5586ea2107e30f", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100000\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tstatic char used[N];\n\tstatic int aa[N];\n\tint n, i, cnt;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tqsort(aa, n, sizeof *aa, compare);\n\tcnt = 0;\n\tfor (i = 1; i < n - 1; i++)\n\t\tif (!used[aa[i]]) {\n\t\t\tused[aa[i]] = 1;\n\t\t\tcnt++;\n\t\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 100000\n#define INF 0x3f3f3f3f\n\nint main() {\n\tstatic int aa[N];\n\tint n, i, max, min, cnt;\n\n\tscanf(\"%d\", &n);\n\tmax = 0;\n\tmin = INF;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\tif (max < aa[i])\n\t\t\tmax = aa[i];\n\t\tif (min > aa[i])\n\t\t\tmin = aa[i];\n\t}\n\tcnt = 0;\n\tfor (i = 0; i < n; i++)\n\t\tcnt += (aa[i] == min || aa[i] == max) ? 0 : 1;\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8164665523156089, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9ccbf0b37967f6ff0898c2edbce41b4e", "bug_code_uid": "8fccd97f960b591e55d77eecb0471fcf", "src_uid": "7225266f663699ff7e16b726cadfe9ee", "apr_id": "257d1cdc0e4bd92e89e337d47c20204c", "difficulty": 2200, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int p,h1,a1,x1,y,h2,a2,x2,y2;\nlong long int hone(long long int h)\n{\n\treturn (x1*h+y)%p;\n}\nlong long int htwo(long long int h)\n{\n\treturn (x2*h+y2)%p;\n}\nint main()\n{\n\tscanf(\"%lld %lld %lld %lld %lld %lld %lld %lld %lld\",&p,&a1,&h1,&x1,&y,&a2,&h2,&x2,&y2);\n\tlong long int i,hi=a1,c=0,d=1,h=hone(h1),o=0;\n\twhile(hi!=h1 && c<=p)\n\t{\n\t\thi=hone(hi);\n\t\tc++;\n\t}\n\twhile(h!=h1 && d<=p)\n\t{\n\t\th=hone(h);\n\t\td++;\n\t}\n\tif(c>p)\n\t\tprintf(\"-1\\n\");\n\telse\n\t{\n\t\thi=a2;\n\t\tfor(i=0;i<c;i++)\n\t\t\thi=htwo(hi);\n\t\tif(hi==h2)\n\t\t\tprintf(\"%lld\\n\",c);\n\t\telse if(d>p)\n\t\t\tprintf(\"-1\\n\");\n\t\telse\n\t\t{\n\t\t\twhile(hi!=h2 && o<=p)\n\t\t\t{\n\t\t\t\thi=htwo(hi);\n\t\t\t\to++;\n\t\t\t}\n\t\t\tif(o>p)\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\telse if(o==d)\n\t\t\t\tprintf(\"%lld\\n\",c+o);\n\t\t\telse{\n\t\t\t\thi=htwo(hi);\n\t\t\t\tint oo=1;\n\t\t\t\twhile(hi!=h2 && oo<=p)\n\t\t\t\t{\n\t\t\t\t\thi=htwo(h2);\n\t\t\t\t\too++;\n\t\t\t\t}\n\t\t\t\tif(oo>p)\n\t\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%lld\\n\",c+o*d);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int p,h1,a1,x1,y,h2,a2,x2,y2;\nlong long int hone(long long int h)\n{\n\treturn (x1*h+y)%p;\n}\nlong long int htwo(long long int h)\n{\n\treturn (x2*h+y2)%p;\n}\nint main()\n{\n\tscanf(\"%lld %lld %lld %lld %lld %lld %lld %lld %lld\",&p,&a1,&h1,&x1,&y,&a2,&h2,&x2,&y2);\n\tlong long int i,hi=a1,c=0,d=1,h=hone(h1),o=0,a,b;\n\twhile(hi!=h1 && c<=p)\n\t{\n\t\thi=hone(hi);\n\t\tc++;\n\t}\n\twhile(h!=h1 && d<=p)\n\t{\n\t\th=hone(h);\n\t\td++;\n\t}\n\tif(c>p)\n\t\tprintf(\"-1\\n\");\n\telse\n\t{\n\t\thi=a2;\n\t\tfor(i=0;i<c;i++)\n\t\t\thi=htwo(hi);\n\t\tif(hi==h2)\n\t\t\tprintf(\"%lld\\n\",c);\n\t\telse if(d>p)\n\t\t\tprintf(\"-1\\n\");\n\t\telse\n\t\t{\n\t\t\ta=1;b=0;\n\t\t\tfor(i=0;i<d;i++)\n\t\t\t{\n\t\t\t\ta=(a*x2)%p;\n\t\t\t\tb=(b*x2+y2)%p;\n\t\t\t}\n\t\t\twhile(hi!=h2 && o<=p)\n\t\t\t{\n\t\t\t\thi=(a*hi+b)%p;\n\t\t\t\to++;\n\t\t\t}\n\t\t\tif(o>p)\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"%lld\\n\",c+o*d);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.26461143224149003, "equal_cnt": 23, "replace_cnt": 16, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "9967620d066c2164b4c92158d4a6a1c9", "bug_code_uid": "2182fe869319a503794e6e24c3e21cce", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "8530bdda6a6c9b4f324cdd7b7a3bc47a", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdbool.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; i++)\n    {\n        int days;\n        scanf(\"%d\", &days);\n        char tasklog[days+1];\n        scanf(\"%s\", tasklog);\n        char pastLogs[days+1];\n        for (int j = 1; j <= days; j++)\n        {\n            if(tasklog[j-1] != tasklog[j]) {\n                pastLogs[strlen(pastLogs)] = tasklog[j-1];\n            }\n        }\n        bool isSuspious = false;\n        for (int j = 0; j < strlen(pastLogs); j++)\n        {\n            for (int k = j+1; k < strlen(pastLogs); k++)\n            {\n                if(pastLogs[j] == pastLogs[k]) {\n                    isSuspious = true;\n                    break;\n                }\n            }\n        }\n        if(isSuspious) printf(\"NO\\n\");\n        else printf(\"YES\\n\");\n    }\n\n    return 0;\n}\n\t \t     \t   \t\t \t  \t\t \t      \t", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        char s[n];\n        gets(s);\n        gets(s);\n        int k=1;\n        for(int i=0;i<n;i++){\n\n            if(s[i]!=s[i-1]){\n                for(int j=i;j<n;j++){\n                    if(s[j]==s[i-1]){\n                        printf(\"No\\n\");\n                        k=0;\n                        break;\n                    }\n                }\n                if(k==0){\n                    break;\n                }\n            }\n        }\n        if(k==1){\n            printf(\"Yes\\n\");\n        }\n    }\n}\n\n\t \t \t  \t\t     \t  \t\t \t\t  \t\t \t  \t"}
{"similarity_score": 0.5252525252525253, "equal_cnt": 23, "replace_cnt": 14, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "157ef389bd6e4e22cd5bd74f701dea29", "bug_code_uid": "f13172abee810b2bc0c8f1ef2d1b186b", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "52bfff80ce2a6197b3f29cafed7bc026", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,cnt=0,sum=0;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0;i<n;i++) scanf(\"%d\",&arr[i]);\n    for(i=0;i<n;i++){\n        if(arr[i]>0) sum+=arr[i];\n        if(arr[i]<0){\n                i+=sum;\n        }\n\n    if(arr[i]<0){\n        cnt++;\n    }\n    }\n    printf(\"%d\",cnt);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint i,n,sum=0,cnt=0,x;\nscanf(\"%d\",&n);\nwhile(n--)\n\t{\n\tscanf(\"%d\",&x);\n\tsum+=x;\n\tif(sum<0)\n\t\t{\n\t\tsum=0;\n\t\tcnt++;\n\t\t}\n\t}\nprintf(\"%d\",cnt);\nreturn 0;\n}"}
{"similarity_score": 0.9975369458128078, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c4be2c9fd7ed18f2bbb0b48c2f4ae0a9", "bug_code_uid": "5a94786b4f5abbeaa07d5ae581fa098e", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "bfb00388784df5d45f5e9fb4b1b43868", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main(void){\n  long long int n, b, d;\n  long long int dump=0;\n  long long int waste=0;\n  scanf(\"%lld %lld %lld\", &n, &b, &d);\n  for(long long int i=1; i<=n; i++){\n    long long int o;\n    scanf(\"%lld\", &o);\n    if(o>b)\n      continue;\n    else \n      waste += o;\n    if (waste>=d){\n      dump++;\n      waste=0;\n    }\n\n  }\n  printf(\"%lld\", dump);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main(void){\n  long long int n, b, d;\n  long long int dump=0;\n  long long int waste=0;\n  scanf(\"%lld %lld %lld\", &n, &b, &d);\n  for(long long int i=1; i<=n; i++){\n    long long int o;\n    scanf(\"%lld\", &o);\n    if(o>b)\n      continue;\n    else \n      waste += o;\n    if (waste>d){\n      dump++;\n      waste=0;\n    }\n\n  }\n  printf(\"%lld\", dump);\n}\n"}
{"similarity_score": 0.4761133603238866, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "e6c767b42ad0145d6167260b22334ad8", "bug_code_uid": "dc79e2850f50b4635174a3068884f845", "src_uid": "288f147bb8a3c30b0bb712a01c65109b", "apr_id": "60cc21c5166579a9c1d879dc9f7900eb", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long n;\r\n        scanf(\"%lld\",&n);\r\n        long long a[n];\r\n        int d=0;\r\n        long long count[100000]={0};\r\n        for(int i=0;i<n;i++)\r\n        {\r\n           scanf(\"%lld\",&a[i]);\r\n           count[a[i]]++;\r\n           if(count[a[i]]>1)\r\n            d=1;\r\n        }\r\n        if(d==1)\r\n            printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n\r\n    }\r\nreturn 0;\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long n;\r\n        scanf(\"%lld\",&n);\r\n        long long a[n];\r\n        int count;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%lld\",&a[i]);\r\n        }\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            count=0;\r\n            for(int j=0;j<n;j++)\r\n            {\r\n                if(a[i]==a[j])\r\n                {\r\n                    count++;\r\n\r\n                }\r\n            }\r\n            if(count>1)\r\n        {\r\n            printf(\"NO\\n\");\r\n            break;\r\n        }\r\n        else\r\n        {\r\n            continue;\r\n        }\r\n\r\n\r\n        }\r\n        if(count==1)\r\n            printf(\"YES\\n\");\r\n\r\n\r\n    }\r\nreturn 0;\r\n\r\n}\r\n"}
{"similarity_score": 0.9660714285714286, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "348bb1205a3f108c70113414a7d328b3", "bug_code_uid": "f1b2f2f6a636954cc4d5b4803ca272f6", "src_uid": "753113fa5130a67423f2e205c97f8017", "apr_id": "ce54710c8a519d3c0399a860d49ef729", "difficulty": 900, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar A[11],B[11],R[11][100],W[11][100],M[11][100],ca[11];\nint n,i,r=0,w=0,m=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%s%s\",A,B);\nif(B[0]=='r')\n{\nstrcpy(R[r],A);\nr++;\n}\nelse if((B[0]=='w')||(B[0]=='c' && B[1]=='h'))\n{\nstrcpy(W[w],A);\nw++;\n}\nelse if(B[0]=='m')\n{\nstrcpy(M[m],A);\nm++;\n}\nelse\n{\nstrcpy(ca,A);\n}\n}\nif(r!=0)\n{\nfor(i=0;i<r;i++)\n{\nprintf(\"%s\\n\",R[i]);\n}\n}\nif(w!=0)\n{\nfor(i=0;i<w;i++)\n{\nprintf(\"%s\\n\",W[i]);\n}\n}\nif(m!=0)\n{\nfor(i=0;i<m;i++)\n{\nprintf(\"%s\\n\",M[i]);\n}\n}\nprintf(\"%s\\n\",ca);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar A[11],B[11],R[100][11],W[100][11],M[100][11],ca[11];\nint n,i,r=0,w=0,m=0,k;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%s%s\",A,B);\nif(B[0]=='r')\n{\nstrcpy(R[r],A);\nr++;\n}\nelse if((B[0]=='w')||(B[0]=='c' && B[1]=='h'))\n{\nstrcpy(W[w],A);\nw++;\n}\nelse if(B[0]=='m')\n{\nstrcpy(M[m],A);\nm++;\n}\nelse\n{\nstrcpy(ca,A);\n}\n}\nif(r!=0)\n{\nfor(i=0;i<r;i++)\n{\nprintf(\"%s\\n\",R[i]);\n}\n}\nif(w!=0)\n{\nfor(i=0;i<w;i++)\n{\nprintf(\"%s\\n\",W[i]);\n}\n}\nif(m!=0)\n{\nfor(i=0;i<m;i++)\n{\nprintf(\"%s\\n\",M[i]);\n}\n}\nprintf(\"%s\\n\",ca);\nreturn 0;\n}\n"}
{"similarity_score": 0.931950745301361, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "39e694233e49d20dcd1b4e5dcb3666e7", "bug_code_uid": "21be7e058f2741b1e73fca252112aef7", "src_uid": "9374728643a1ddbe2200a4a125beef26", "apr_id": "87117b71a33e2aa6d9ef67bdde5311c2", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint max=0,flag=0;\nint n,i,count=0,j,dir=0;\nscanf(\"%d\",&n);\nint a[n];\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\nif(a[i]>max)\nmax=a[i];\n}\nif(n==1)\n{\n    printf(\"0\");\n    return 0;\n}\nfor(i=0;i<n;i++)\n{\nif(a[i]==0)\n{\nj=i;\nbreak;\n}\n}\n//first zero decided\n//now moving forward\ncount=1;\na[j]=1001;\n\nfor(i=j+1;i<n;i++)\n {\n if(a[i]<=count)\n {\n count++;\n if(a[i]==max)\n {\n     printf(\"0\");\n     return 0;\n }\n a[i]=1001;\n }\n }\nwhile(1)\n{\nif(i==n)\n{\ndir++;\nfor(i=n-1;i>=0;i--)\n{\n if(a[i]<=count)\n {\n if(a[i]==max)\n {\n flag=1;\n break;\n }\n count++;\n a[i]=1001;\n }\n}\n}\nif(flag==1)\n    break;\nif(i<0)\n{\ndir++;\nfor(i=0;i<n;i++)\n{\n if(a[i]<=count)\n {\n if(a[i]==max)\n {\n flag=1;\n break;\n }\n count++;\n a[i]=1001;\n }\n}\n}\nif(flag==1)\n    break;\n}\nprintf(\"%d\",dir);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint max=0,flag=0;\nint n,i,count=0,j,dir=0;\nscanf(\"%d\",&n);\nint a[n];\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\nif(a[i]>max)\nmax=a[i];\n}\nif(n==1)\n{\n    printf(\"0\");\n    return 0;\n}\nfor(i=0;i<n;i++)\n{\nif(a[i]==0)\n{\nj=i;\nbreak;\n}\n}\n//first zero decided\n//now moving forward\ncount=1;\na[j]=1001;\n\nfor(i=j+1;i<n;i++)\n {\n if(a[i]<=count)\n {\n count++;\n if(count==n)\n {\n     printf(\"0\");\n     return 0;\n }\n a[i]=1001;\n }\n }\nwhile(1)\n{\nif(i==n)\n{\ndir++;\nfor(i=n-1;i>=0;i--)\n{\n if(a[i]<=count)\n {\n count++;\n  if(count==n)\n {\n flag=1;\n break;\n }\n a[i]=1001;\n }\n}\n}\nif(flag==1)\n    break;\nif(i<0)\n{\ndir++;\nfor(i=0;i<n;i++)\n{\n if(a[i]<=count)\n {\n count++;\n  if(count==n)\n {\n flag=1;\n break;\n }\n a[i]=1001;\n }\n}\n}\nif(flag==1)\n    break;\n}\nprintf(\"%d\",dir);\n}\n"}
{"similarity_score": 0.9974093264248705, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ac841f6e401514802f0776646e08a627", "bug_code_uid": "142c8c2aa221d8c83a9df366ca57c06b", "src_uid": "d7e6e5042b8860bb2470d5a493b0adf6", "apr_id": "fd9d85c5642fb0b2ae9ad709924d77c0", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tstatic char cc[100001];\n\tstatic int kk[10];\n\tint k, n, i, d, sum, cnt;\n\n\tscanf(\"%d\", &k);\n\tscanf(\"%s\", cc);\n\tn = strlen(cc);\n\tsum = 0;\n\tfor (i = 1; i < n; i++) {\n\t\tsum += cc[i] - '0';\n\t\tkk['9' - cc[i]]++;\n\t}\n\tcnt = 0;\n\tfor (d = 9; d >= 0; d--)\n\t\twhile (sum < k && kk[d]-- > 0)\n\t\t\tsum += d, cnt++;\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tstatic char cc[100001];\n\tstatic int kk[10];\n\tint k, n, i, d, sum, cnt;\n\n\tscanf(\"%d\", &k);\n\tscanf(\"%s\", cc);\n\tn = strlen(cc);\n\tsum = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tsum += cc[i] - '0';\n\t\tkk['9' - cc[i]]++;\n\t}\n\tcnt = 0;\n\tfor (d = 9; d >= 0; d--)\n\t\twhile (sum < k && kk[d]-- > 0)\n\t\t\tsum += d, cnt++;\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9927461139896373, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e0a3c66e134fd32c65201dbc92240ecc", "bug_code_uid": "a56a1b3871d54c974df3943580e2621b", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "4ae8a87b7e815e7613b0480f02747cb0", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint sort_dec(int *a,int n)\n{int i,j,t;\nfor(i=0;i<n;i++)\nfor(j=i+1;j<n;j++)\nif(a[i]<a[j])\n{t=a[i];\na[i]=a[j];\na[j]=t;\n}\nreturn 0;\n}\nint max(int *a,int n)\n{int i,max1;\nmax1=a[0];\nfor(i=1;i<n;i++)\nif(a[i]>max1)\nmax1=a[i];\nreturn max1;\n}\nint main()\n{\nint a[1000],c[1000],k=0,n,i;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\nsort_dec(a,n);\nfor(i=0;i<n;i++)\nc[i]=0;\nfor(i=1;i<n;i++)\nif(a[i-1]==a[i])\nc[k]++;\nelse\nk++;\nprintf(\"%d %d\",max(c,k)+1,k+1);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint sort_dec(int *a,int n)\n{int i,j,t;\nfor(i=0;i<n;i++)\nfor(j=i+1;j<n;j++)\nif(a[i]<a[j])\n{t=a[i];\na[i]=a[j];\na[j]=t;\n}\nreturn 0;\n}\nint max(int *a,int n)\n{int i,max1;\nmax1=a[0];\nfor(i=1;i<n;i++)\nif(a[i]>max1)\nmax1=a[i];\nreturn max1;\n}\nint main()\n{\nint a[1000],c[1000],k=0,n,i;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\nsort_dec(a,n);\nfor(i=0;i<n;i++)\nc[i]=0;\nfor(i=1;i<n;i++)\nif(a[i-1]==a[i])\nc[k]++;\nelse\nk++;\nk++;\nprintf(\"%d %d\",max(c,k)+1,k);\nreturn 0;\n}"}
{"similarity_score": 0.38461538461538464, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "3c6e547c724ed66d4696036892301e2c", "bug_code_uid": "56840c6546fe2839b30972c70b28ac5d", "src_uid": "277948a70c75840445e1826f2b23a897", "apr_id": "339f3ddffd73c5b64e58a9bc36366979", "difficulty": 1600, "tags": [], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define M 10\n\nint n=0;\n\nint T[M]={0};\n\ninline int  lowbit(int x){\n    return (x&-x);\n}\nvoid add(int x,int val){\n    for (int i=x; i<=n; i+=lowbit(i)) {\n        if (T[i]<val) {\n            T[i]=val;\n        }\n    }\n}\nint get(int x){\n    if (!x) {\n        return 0;\n    }\n    int re=-1;\n    for (int i=x;i; i-=lowbit(i)) {\n        if (re<T[i]) {\n            re=T[i];\n        }\n    }\n    return re;\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    int m=n;\n    int in=0;\n    while (m--) {\n        scanf(\"%d\",&in);\n        int du=0;\n        du=get(in-1);\n        add(in,du+1);\n    }\n    int ans=0;\n    ans=get(n);\n    printf(\"%d\",n-ans);\n    return 0;\n    \n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define M 100010\n\nint n=0;\n\nint T[M]={0};\n\n\nint main(){\n    scanf(\"%d\",&n);\n    int m=n;\n    int in=0;\n    while (m--) {\n        scanf(\"%d\",&in);\n        T[in]=T[in-1]+1;\n    }\n    int ans=0;\n    for (int i=1; i<=n; i++) {\n        if (ans<T[i]) {\n            ans=T[i];\n        }\n    }\n\n    printf(\"%d\",n-ans);\n    return 0;\n    \n}"}
{"similarity_score": 0.14180602006688964, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "bb30697c74042f5ae84ef63c798a5514", "bug_code_uid": "e427519e9ae19c0d5bb5a6b7374e80ab", "src_uid": "217cc9b3e04260f5b7cd42b42e92c449", "apr_id": "3e300e5ffa29927440de6ae554338ec8", "difficulty": 1300, "tags": ["binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint k [500000];\nint n [500000];\n\nint tocke [3010][2];\n\nint primerjaj (int i, int j, int k){\n\tdouble k1 = 1;\n\tdouble k2 = 0;\n\n\tif ((tocke[j][0] - tocke[i][0]) != 0 &&\n\t\t(tocke[j][1] - tocke[i][1]) != 0) {\n\n\t\tk1 = (tocke[k][0] - tocke[i][0]) / \n\t\t\t\t\t(tocke[j][0] - tocke[i][0]);\n\t\t\n\t\tk2 = (tocke[k][1] - tocke[i][1]) / \n\t\t\t\t\t(tocke[j][1] - tocke[i][1]);\n\t}\n\n\tif (k1 == k2){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn 0;\n\t}\n}\n\nint main (){\n\n\tint n; \n\tscanf (\"%d\", &n);\n\n\tfor (int i = 0; i < n; i++){\n\t\tscanf(\"%d\", &tocke[i][0]);\n\t\tscanf(\"%d\", &tocke[i][1]);\n\t}\n\n\tint s = 0;\n\n\tfor (int i = 0; i < n ; i++){\n\t\tfor (int j = i + 1; j < n ; j++){\n\t\t\tfor (int k = j + 1; k < n; k++){\n\t\t\t\tif (primerjaj(i, j, k)){\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\tprintf(\"%d\\n\",s);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint tab [3010][2];\nint grid [2020][2020];\n\n \nint main (){\n\n\tint n; \n\tscanf (\"%d\", &n);\n\tint x, y;\n\n\tfor (int i = 0; i < n; i++){\n\t\tscanf(\"%d\", &x);\n\t\tscanf(\"%d\", &y);\n\t\ttab[i][0] = x;\n\t\ttab[i][1] = y;\n\t\tgrid [x + 1000][y + 1000] = 1;\n\t}\n\n\n\tint s = 0;\n\n\tfor (int i = 0; i < n; i++){\n\t\tfor (int j = i + 1; j < n; j++){\n\n\t\t\tif (((tab[i][0] + tab[j][0]) % 2 == 0) &&\n\t\t\t\t((tab[i][1] + tab[j][1]) % 2 == 0)){\n\t\t\t\n\n\t\t\t\tx = (tab[i][0] + tab[j][0]) / 2;\n\t\t\t\ty = (tab[i][1] + tab[j][1]) / 2;\n\n\t\t\t\tif (grid[x + 1000][y + 1000] == 1){\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\",s);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9905913978494624, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "929b76d27f382396924a00f009272ddb", "bug_code_uid": "38757f9cd8065d127923d95ccc61d4d2", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "6abb7f3f43d70e9ca6f99f9b25760cdb", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,l,i;\n    scanf(\"%d\", &n);\n    int arra[n];\n    long long sum=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &arra[i]);\n        sum = sum+arra[i];\n        arra[i]=sum;\n    }\n    if(sum%3==0&&n>=3)\n    {\n        long long ans = 0,num=0;\n        for(i=0;i<n-1;i++)\n        {\n            if(arra[i]==(2*sum)/3)\n            {\n                num++;\n            }\n        }\n        for(i=0;i<n;i++)\n        {\n            if(arra[i]==(2*sum)/3&&i!=n-1)\n            {\n                num--;\n            }\n            if(arra[i]==sum/3)\n            {\n                ans = ans+num;\n            }\n        }\n        printf(\"%lld\\n\", ans);\n    }\n    else\n    {\n        printf(\"0\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,l,i;\n    scanf(\"%d\", &n);\n    long long arra[n];\n    long long sum=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\", &arra[i]);\n        sum = sum+arra[i];\n        arra[i]=sum;\n    }\n    if(sum%3==0&&n>=3)\n    {\n        long long ans = 0,num=0;\n        for(i=0;i<n-1;i++)\n        {\n            if(arra[i]==(2*sum)/3)\n            {\n                num++;\n            }\n        }\n        for(i=0;i<n;i++)\n        {\n            if(arra[i]==(2*sum)/3&&i!=n-1)\n            {\n                num--;\n            }\n            if(arra[i]==sum/3)\n            {\n                ans = ans+num;\n            }\n        }\n        printf(\"%lld\\n\", ans);\n    }\n    else\n    {\n        printf(\"0\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5889724310776943, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9c4ecf0a2a68da51b0db1adc6280c1f8", "bug_code_uid": "db9c79b09c0407bc63fab79a5912d657", "src_uid": "6324ca46b6f072f8952d2619cb4f73e6", "apr_id": "5fea7bdeff1a13af936dcd7c76a95b4e", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n      long long int t,n,m,k;\n      scanf(\"%lld\",&t);\n      while(t--){\n              scanf(\"%lld %lld %lld\",&n,&m,&k);\n              n=n/k;\n              if(m==0) printf(\"0\\n\");\n              else if(m<=n) printf(\"%lld\\n\",m);\n              else{\n                     m=m-n;\n                     if(m<=(k-1)) printf(\"%lld\\n\",n-1);\n                     else printf(\"%lld\\n\",n-(m-1));\n              }\n      }\n      return 0;\n}", "fixed": "#include<stdio.h> \nint main()\n{\n      long long int t,n,m,k,c;\n      scanf(\"%lld\",&t);\n      while(t--){\n             scanf(\"%lld %lld %lld\",&n,&m,&k);\n             n=n/k;\n             if(n>=m) printf(\"%lld\\n\",m);\n             else{\n                    c=ceil(1.0*(m-n)/(k-1));\n                    printf(\"%lld\\n\",n-c);\n             }\n      }\n}"}
{"similarity_score": 0.5128511655708309, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "b86ca28e35641643cc65672067820616", "bug_code_uid": "4405476d43d18799aa4e33ebcf3885b6", "src_uid": "60eb29b2dfb4d6b136c58b33dbd2558e", "apr_id": "c48df43fa3e4080bd9676b59197ca02f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    char s[10];\r\n   while(n--)\r\n    {\r\n       scanf(\"%s\",s);\r\n       int  r=0,g=0,b=0,n=0;\r\n       for(int i=0;i<6;i++)\r\n       {\r\n           if(s[i]=='r')\r\n           {\r\n               r++;\r\n           }\r\n           else if(s[i]=='g')\r\n           {\r\n               g++;\r\n           }\r\n           else if(s[i]=='b')\r\n           {\r\n               b++;\r\n           }\r\n           if((s[i]=='R')&&r==0)\r\n           {\r\n               n++;\r\n           }\r\n           else if((s[i]=='G')&&g==0)\r\n           {\r\n               n++;\r\n           }\r\n           else if((s[i]=='B')&&b==0)\r\n           {\r\n               b++;\r\n           }\r\n\r\n       }\r\n       if(n>0)\r\n       {\r\n           printf(\"NO\\n\");\r\n       }\r\n       else\r\n       {\r\n           printf(\"YES\\n\");\r\n       }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    char s[10];\r\n   while(n--)\r\n    {\r\n       scanf(\"%s\",s);\r\n       int  R,G,B,r,g,b;\r\n       for(int i=0;i<6;i++)\r\n       {\r\n           if(s[i]=='r')\r\n           {\r\n               r=i;\r\n           }\r\n           if(s[i]=='g')\r\n           {\r\n               g=i;\r\n           }\r\n           if(s[i]=='b')\r\n           {\r\n               b=i;\r\n           }\r\n           if(s[i]=='R')\r\n           {\r\n               R=i;\r\n           }\r\n            if(s[i]=='G')\r\n           {\r\n               G=i;\r\n           }\r\n           if(s[i]=='B')\r\n           {\r\n               B=i;\r\n           }\r\n\r\n       }\r\n       if(R>r&&G>g&&B>b)\r\n       {\r\n           printf(\"YES\\n\");\r\n       }\r\n       else\r\n       {\r\n           printf(\"NO\\n\");\r\n       }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.0998439937597504, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e5806e4484b0de36f2e0fbdd5e2e5ef7", "bug_code_uid": "2cab947e05f409d089b122f79b719efb", "src_uid": "1d89df4153d70087d212b711852eba5f", "apr_id": "a87ddfcd5e82a0e498530a4fdb283b4b", "difficulty": 1000, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ int temp,t,i,j;\n  scanf(\"%d\",&t);\n for(i=0;i<t;i++)\n{\n int n; scanf(\"%d\",&n);\n int a[n];\n for( j=1;j<=n;j++)\n{ scanf(\"%d\",&a[j]);}\n for( i=1;i<=n;i++)\n{\n for( j=i+1;j<=n;j++)\n{ if((a[i]-i)==(a[j]-j))\n{\n    temp=a[i]; a[i]=a[j]; a[j]=temp; i=0;\n}\n}}  for( j=1;j<=n;j++)\n{\n     printf(\"%d\\n\",a[j]);\n}\n} return 0;\n}", "fixed": "#include<stdio.h>\nint t, i, j, a[101], n, tmp, k;\nint main()\n{\n\tscanf(\"%d\", &t);\n\tfor(i=0;i<t;i++){\n\t\tfor(j=1;j<=100;j++) a[j]=0;\n\t\tscanf(\"%d\", &n);\n\t\tfor(j=0;j<n;j++){\n\t\t\tscanf(\"%d\", &tmp);\n\t\t\ta[tmp]++;\n\t\t}\n\t\tfor(j=100;j>=1;j--)\n\t\t{\n\t\t\tfor(k=0;k<a[j];k++) \n\t\t\tprintf(\"%d \", j);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.13295346628679963, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "338f2266c8978fdc14e2a4e14fbfa32c", "bug_code_uid": "2e2a451b55412dac2969378b7910095c", "src_uid": "0352429425782d7fe44818594eb0660c", "apr_id": "b9d975953ba090648b0a53fc92e6f9ba", "difficulty": 1200, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nmain()\n{ int a[600000],b[600000];\nfreopen(\"input.txt\",\"r\",stdin);\nfreopen(\"output.txt\",\"w\",stdout);\nint i,j,k,l,c,d,m,n,p,q;\nscanf(\"%d\",&n);\nfor(i=0;i<2*n;i++)\n{scanf(\"%d\",&a[i]);b[i]=i;}\nfor (c = 0 ; c < ( 2*n - 1 ); c++)\n  {\n    for (d = 0 ; d < 2*n - c - 1; d++)\n    {\n      if (a[d] > a[d+1])\n      {\n        k   = a[d];\n        a[d]   = a[d+1];\n        a[d+1] = k;\n k   = b[d];\n        b[d]   = b[d+1];\n        b[d+1] = k;\n      }\n    }\n  }\n for(i=0;i<2*n;i+=2)\n\nif(a[i]!=a[i+1])\n\n{printf(\"-1\");\nreturn 0;\n}\n\n for(i=0;i<2*n;i+=2)\nprintf(\"%d %d\\n\",b[i]+1,b[i+1]+1);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tfreopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    int a[5001]={0},i,j,n,x,y=0,p[300000],q[300000];\n    scanf(\"%d\",&n);\n    for(i=1;i<=2*n;i++)\n    {\n\t\tscanf(\"%d\",&x);\n\t\tif(a[x]==0)\n\t\t\ta[x]=i;\n\t\telse{\n\t\t    p[y]=a[x];\n\t\t\tq[y++]=i;\n\t\t    a[x]=0;\n\t\t}\n    }\n    if(y==n)\n\t\tfor(i=0;i<n;i++)\n\t\t    printf(\"%d %d\\n\",p[i],q[i]);\n    else\n\t\tprintf(\"-1\");\n    return 0;\n}"}
{"similarity_score": 0.9763779527559056, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3eb9aa50a70bdc9ab2b2ee5c2c6cf348", "bug_code_uid": "06baf06ae805b64a0c0840b4c8e5e7e4", "src_uid": "ee3c228cc817536bf6c10ea4508d786f", "apr_id": "4ba618879674f746e8aada62886ee181", "difficulty": 1700, "tags": ["dp", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\tlong a[5010];\n\tlong long s[5010], dp[5010][5010];\n\tint n,m,k,i,j;\n\t\n\twhile(scanf(\"%d%d%d\" , &n,&m,&k) != EOF){\n\t\tint ans = 0;\n\t\ts[0] = 0;\n        for(i = 1; i <= n; i++) {\n            scanf(\"%ld\", &a[i]);\n            s[i] = s[i - 1] + a[i];\n        }\n\t\t for(i = m; i <= n; i++) {\n            for(j = k; j >= 1; j--) {\n\t\t\t\tdp[i][j] = max(dp[i - 1][j], dp[i - m][j - 1] + s[i] - s[i - m]);\n\t\t\t}\n        }\n        printf(\"%I64d\\n\", dp[n][k]);\n    }\n\n    return 0;\n\t\n}\nlong long max(long long num1, long long num2) \n{\n   long long result;\n \n   if (num1 > num2)\n      result = num1;\n   else\n      result = num2;\n \n   return result; \n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define max(a,b) (a>b?a:b)\nint main(){\n\tlong a[5010];\n\tlong long s[5010], dp[5010][5010];\n\tint n,m,k,i,j;\n\t\n\twhile(scanf(\"%d%d%d\" , &n,&m,&k) != EOF){\n\t\tint ans = 0;\n\t\ts[0] = 0;\n        for(i = 1; i <= n; i++) {\n            scanf(\"%ld\", &a[i]);\n            s[i] = s[i - 1] + a[i];\n        }\n\t\t for(i = m; i <= n; i++) {\n            for(j = k; j >= 1; j--) {\n\t\t\t\tdp[i][j] = max(dp[i - 1][j], dp[i - m][j - 1] + s[i] - s[i - m]);\n\t\t\t}\n        }\n        printf(\"%I64d\\n\", dp[n][k]);\n    }\n\n    return 0;\n\t\n/*\n}\nlong long max(long long num1, long long num2) \n{\n   long long result;\n \n   if (num1 > num2)\n      result = num1;\n   else\n      result = num2;\n \n   return result; \n */\n}"}
{"similarity_score": 0.9474654377880184, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e66d0ba051497422cf61e3bf72c7ad5a", "bug_code_uid": "c0b7570be3501c08d33985afe67b757b", "src_uid": "6581dbaff7eb52b63ccfe9c0c4117c09", "apr_id": "07e79ceb04817a8b6b52417b4c871126", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[1000] , b[2];\n    b[0]='a';\n    int i,p=0,q=0,r=0,j=1,l;\n    scanf(\"%s\", a);\n    l=strlen(a);\n  for(i=0;i<l;i++)\n  {\n      if (a[i]=='a'){r++;}\n      else if (a[i]== 'b'){p++;}\n      else if(a[i]=='c'){q++;}\n  }\n  for(i=0;i<l;i++)\n  {\n      if(a[i+1]!=a[i])\n      {\n          b[j]=a[i+1];\n          j++;\n      }\n  }\n  if((b[0]=='a' && b[1]=='b' && b[2]=='c') && (q==r || q==p) )\n  {\n      printf(\"YES\");\n\n  }\n  else\n  {\n      printf(\"NO\");\n  }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[10000] , b[3];\n    b[0]='a';\n    int i,p=0,q=0,r=0,j=1,l;\n    scanf(\"%s\", a);\n    l=strlen(a);\n  for(i=0;i<l;i++)\n  {\n      if (a[i]=='a'){r++;}\n      else if (a[i]== 'b'){p++;}\n      else if(a[i]=='c'){q++;}\n  }\n  for(i=0;i<l;i++)\n  {\n      if(a[i+1]!=a[i])\n      {\n          b[j]=a[i+1];\n          j++;\n      }\n  }\n  if((b[0]=='a' && b[1]=='b' && b[2]=='c') && (b[3]!='a' && b[3]!= 'b' && b[3]!='c') && (q==r || q==p) )\n  {\n      printf(\"YES\");\n\n  }\n  else\n  {\n      printf(\"NO\");\n  }\n    return 0;\n}\n"}
{"similarity_score": 0.9738805970149254, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "58ffaf1e259be596280d8f39a63c82e9", "bug_code_uid": "c9210757b89337fff707862b196816cf", "src_uid": "5dd0d518f315d81204b25e48fea0793a", "apr_id": "88edea3808bf644f807b4c873c5ac690", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint k, d;\n\tscanf(\"%d %d\", &k, &d);\n\t\n\tif(k == 1)\n\t\tprintf(\"%d\", d);\n\t\t\n\telse if(k == 1000)\n\t\tprintf(\"No solution\");\t\n\t\t\n\telse\n\t{\n\t\tint t = k-2;\n\t\tprintf(\"1\");\n\t\twhile(t--)\n\t\t\tprintf(\"0\");\n\t\tprintf(\"%d\", d-1);\n\t}\n\t\n\treturn 0;\n}\n\t\t\n\t\t\t\t\n\t", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint k, d;\n\tscanf(\"%d %d\", &k, &d);\n\t\n\tif(k == 1)\n\t\tprintf(\"%d\", d);\n\t\t\n\telse if(d == 0)\n\t\tprintf(\"No solution\");\n\t\t\n\telse\n\t{\n\t\tint t = k-2;\n\t\tprintf(\"1\");\n\t\twhile(t--)\n\t\t\tprintf(\"0\");\n\t\tprintf(\"%d\", d-1);\n\t}\n\t\n\treturn 0;\n}\n\t\t\n\t\t\t\t\n\t"}
{"similarity_score": 0.929471032745592, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7e4b2e9aa00151c20ffa065a7934fd6e", "bug_code_uid": "b1d938ee0615639c4777e937ab1ab459", "src_uid": "2d4ad39d42b349765435b351897403da", "apr_id": "e766dfdd935c42e1d170264dfea40db6", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n    int a,b,c,d;\n    long double x,y;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    d=sqrt((b*b)-(4*a*c));\n    x=(-b+d)/(2*a);\n    y=(-b-d)/(2*a);\n    if(x>y){\n        printf(\"%0.15llf\\n%0.15llf\",x,y);\n    }\n    else if(x<y){\n        printf(\"%0.15llf\\n%0.151llf\",y,x);\n    }\n    else printf(\"%0.15llf\\n%0.15llf\",x,y);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n    double a,b,c,d;\n    long double x,y;\n    scanf(\"%lf %lf %lf\",&a,&b,&c);\n    d=sqrt((b*b)-(4*a*c));\n    x=(-b+d)/(2*a);\n    y=(-b-d)/(2*a);\n    if(x>y){\n        printf(\"%0.15llf\\n%0.15llf\",x,y);\n    }\n    else if(x<y){\n        printf(\"%0.15llf\\n%0.151llf\",y,x);\n    }\n    else printf(\"%0.15llf\\n%0.15llf\",x,y);\n    return 0;\n}\n"}
{"similarity_score": 0.8434163701067615, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "202871d9f7614338659b8f4855832bd2", "bug_code_uid": "9bb48dbf5bb0b5704dd45aee7f6ef544", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "a9fa8b072c7d735411124fb7d43a21c4", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int i,haux=0,cant,time=0;\n    scanf(\"%d\",&cant);\n    int tree[cant];\n    for(i=0;i<cant;i++){\n        scanf(\"%d\",&tree[i]);\n    }\n    i=1;\n    time=tree[0]+1;\n    haux=tree[0];\n    do{\n        if(haux<=tree[i]){\n            time++;\n            while(haux<tree[i]){\n                haux++;\n                time++;\n            }\n            time++;\n            i++;\n        }else{\n            haux--;\n            time++;\n        }\n    }while(i<cant);\n    printf(\"%d\",time);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n    int i,haux=0,cant,time=0;\n    scanf(\"%d\",&cant);\n    int tree[cant];\n    for(i=0;i<cant;i++){\n        scanf(\"%d\",&tree[i]);\n    }\n    i=1;\n    time=tree[0]+1;\n    haux=tree[0];\n    if(cant>1){\n        do{\n            if(haux<=tree[i]){\n                time++;\n                while(haux<tree[i]){\n                    haux++;\n                    time++;\n                }\n                time++;\n                i++;\n            }else{\n                haux--;\n                time++;\n            }\n        }while(i<cant);\n    }\n    printf(\"%d\",time);\n    return 0;\n}\n"}
{"similarity_score": 0.9984076433121019, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "28b9bc7608d5415d8302c7d5c3233d62", "bug_code_uid": "1ff737a2d1a786b5c2e19a131dec093f", "src_uid": "779ab09a588bbb52485ae5b6a441b235", "apr_id": "de3480d3637c7576628bc9fdf3b297c3", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n\r\n        int temp=arr[0];\r\n        int max=1;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(temp<arr[i])\r\n            {\r\n                temp=arr[i];\r\n\r\n            }\r\n        }\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(temp==arr[i])\r\n            {\r\n                printf(\"%d\",i+1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n", "fixed": "# include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n\r\n        int temp=arr[0];\r\n        int max=1;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(temp<arr[i])\r\n            {\r\n                temp=arr[i];\r\n\r\n            }\r\n        }\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(temp==arr[i])\r\n            {\r\n                printf(\"%d\\n\",i+1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8528974739970282, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a533b6f5bd2b3fa7d0155b143073f098", "bug_code_uid": "67f8a689551cd07718b4ca63f676c973", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "60d4c992d9766c852b36de6297c289d4", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,m,i,j,a[102],t,sum=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    for(j=i+1;j<n;j++)\n    if(a[i]>a[j]) {t=a[i];a[i]=a[j];a[j]=t;}\n    for(i=0;i<m;i++)\n    sum+=a[i];\n    if(sum<0) sum*=(-1);\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,m,i,j,a[102],t,sum=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    for(j=i+1;j<n;j++)\n    if(a[i]>a[j]) {t=a[i];a[i]=a[j];a[j]=t;}\n    i=0;\n    while(a[i]<0&&i<m)\n    {\n        sum+=a[i];i++;\n    }\n        if(sum<0) sum*=(-1);\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9943977591036415, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "f30b49075149c2df03f80e26a6a6143f", "bug_code_uid": "0758ca268bd448cf3ff083ae7fdbe77a", "src_uid": "97697eba87bd21ae5c979a5ea7a81cb7", "apr_id": "d8c8219fcca94a56bfdd676e75fa6ab4", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,k,m=2,j=1,i,r=1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&k);\n\n\t\tif(k%2==0){\n\t\t\tif(k==0 && j<0 ){\n\t\t\t\tprintf(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse if(j>0){\n\t\t\t\tm=k;\n\t\t\t}\n\t\t\telse if(j<0){\n\t\t\t\tj=-j;\n\t\t\t\tk=m;\n\t\t\t}\n\t\t}\n\t\telse if(k%2){\n\t\t\tj=-j;\n\t\t\tm=k;\n\t\t}\n\t}\n\tif(j>0)printf(\"YES\");\n\telse printf(\"NO\");\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,k,m=2,j=1,i,r=1;\n\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&k);\n\n\t\tif(k%2==0){\n\t\t\tif(k==0 && j<0 ){\n\t\t\t\tprintf(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse if(j>0){\n\t\t\t\tm=k;\n\t\t\t}\n\t\t\telse if(j<0){\n\t\t\t\tj=j;\n\t\t\t\tk=m;\n\t\t\t}\n\t\t}\n\t\telse if(k%2){\n\t\t\tj=-j;\n\t\t\tm=k;\n\t\t}\n\t}\n\tif(j>0)printf(\"YES\");\n\telse printf(\"NO\");\n\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8739365815931941, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "dda296f3c0b822cb698e0818bc4aef55", "bug_code_uid": "206d3fe67b82e2d30e0f27bdee32b881", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "86248300ad725f528a9a6e1a942de038", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n  int n;\n  scanf(\"%d\",&n);\n  int count[n];\n\n  for(int i=0; i<n;i++)\n    {\n      int k;\n      scanf(\"%d\",&k);\n      int arr[k];\n      int freq[1000]={0};\n\n      for(int j=0;j<k;j++)\n        {\n          scanf(\"%d\",&arr[j]);\n          freq[arr[j]]++;\n        }\n      int j;\n      for(j=0;j<1000;j++)\n        {\n           if(freq[j]>=3)\n           {\n             count[i]= j;\n             break;\n           }\n        }\n      if(j==10)\n        count[i]=-1;\n    }\n  for(int i=0; i<n;i++)\n    {\n      printf(\"%d\\n\",count[i]);\n    }\n  \n  return 0;\n}\n \t \t\t \t\t \t \t\t\t\t  \t\t\t\t\t  \t\t\t   \t", "fixed": "#include<stdio.h>\n\nint main()\n{\n  int n;\n  scanf(\"%d\",&n);\n  int count[n];\n\n  for(int i=0; i<n;i++)\n    {\n      int k;\n      scanf(\"%d\",&k);\n      int arr[k];\n      int freq[k+1];\n      for (int j=0;j<k+1;j++)\n        {\n          freq[j]=0;\n        }\n\n      for(int j=0;j<k;j++)\n        {\n          scanf(\"%d\",&arr[j]);\n          freq[arr[j]]++;\n        }\n      int j;\n      for(j=0;j<k+1;j++)\n        {\n           if(freq[j]>=3)\n           {\n             count[i]= j;\n             break;\n           }\n        }\n      if(j==k+1)\n        count[i]=-1;\n    }\n  for(int i=0; i<n;i++)\n    {\n      printf(\"%d\\n\",count[i]);\n    }\n  \n  return 0;\n}\n   \t \t\t \t\t\t  \t\t \t    \t \t   \t\t"}
{"similarity_score": 0.9721627408993576, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "13f84066ae67f428a24b2ff35a9e0762", "bug_code_uid": "2963c5cc26e6ee71ac8a8fb69fd46d10", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "55ee8719452e4fb546f4e75b52f0b20f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,c=0;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int p,q;\n        scanf(\"%lld%lld\",&p,&q);\n        if(p<q && p-q>=2)  \n        c++;\n    }\n    printf(\"%lld\\n\",c);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,c=0;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int p,q;\n        scanf(\"%lld%lld\",&p,&q);\n        if(p<q && q>0 && q-p>=2)\n        c++;\n    }\n    printf(\"%lld\\n\",c);\n}"}
{"similarity_score": 0.996969696969697, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "75a31caef13e36c8a0cf927650260201", "bug_code_uid": "3383bc7022f19f60048aeddf0d2292f1", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "0415ffb1b23138f463f031c70cabc051", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        if(n%7==0)\n        {\n            printf(\"%d\\n\",n);\n        }\n        else\n        {\n            int val = (n%10);\n            for(int i=1;i<7;i++)\n            {\n                if((n+i)%7==0)\n                {\n                    val = val + i;\n                    if(val<=9)\n                    {\n                        printf(\"%d\\n\",n+i);\n                        break;\n                    }\n                    else\n                    {\n                        for(int j=0;j<7;j++)\n                        {\n                            if((n+j)%7==0)\n                            {\n                                printf(\"%d\\n\",n+j);\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        if(n%7==0)\n        {\n            printf(\"%d\\n\",n);\n        }\n        else\n        {\n            int val = (n%10);\n            for(int i=1;i<7;i++)\n            {\n                if((n+i)%7==0)\n                {\n                    val = val + i;\n                    if(val<=9)\n                    {\n                        printf(\"%d\\n\",n+i);\n                        break;\n                    }\n                    else\n                    {\n                        for(int j=1;j<7;j++)\n                        {\n                            if((n-j)%7==0)\n                            {\n                                printf(\"%d\\n\",n-j);\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.7867298578199052, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "3e00268684d7eb42cb1c85c887edfcba", "bug_code_uid": "7cdb74d51ae844c3b1124554bc200844", "src_uid": "3bb093fb17d6b76ae340fab44b08fcb8", "apr_id": "df0311ae57643f72fdcf3e4d0e23214d", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\n\nint main()\n{   int test_count ; \n    scanf(\"%d\" , &test_count);\n    int *p ;\n    int i = 0 ; \n    p= (int *)malloc(sizeof(int)*(2*test_count));\n    p[2*test_count]=-1;\n    while( p[i]!=-1 ){\n        scanf(\"%d\" , &p[i]);\n        i++;\n    };\n    i = 0 ;\n    int j = 1 ; \n    while(j< 2*test_count){\n        if(p[i] >= 2*p[j]){\n            printf(\"%d \\n\" , p[i]*p[i]);\n        }\n        else{\n            printf(\"%d \\n\" , 4*p[j]*p[j]);\n        }\n        i=j+1 ;\n        j=i+1;\n    }\n}\n", "fixed": "#include <stdio.h>\n#include<stdlib.h>\n\nint main()\n{   int test_count ; \n    scanf(\"%d\" , &test_count);\n    int *p ;\n    int i = 0 ; \n    p= (int *)malloc(sizeof(int)*(2*test_count));\n    p[2*test_count]=-1;\n    while( p[i]!=-1 ){\n        scanf(\"%d\" , &p[i]);\n        i++;\n    };\n    i = 0 ;\n    int j = 1 ; \n    int length , breadth ; \n    while(j< 2*test_count){\n        if(p[i]>=p[j]){\n            length = p[i];\n            breadth = p[j];\n        }\n        else{\n            length = p[j];\n            breadth = p[i];\n            \n        }\n        if(length >= 2*breadth){\n            printf(\"%d \\n\" , length*length);\n        }\n        else{\n            printf(\"%d \\n\" , 4*breadth*breadth);\n        }\n        i=j+1 ;\n        j=i+1;\n    }\n}\n"}
{"similarity_score": 0.9908045977011494, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c70c58a234230af59b627275f8f5d368", "bug_code_uid": "43e6a9a6ee3bd7ad43d31a30f82c53a0", "src_uid": "dcc380c544225c8cadf0df8d8b6ffb4d", "apr_id": "92f17113ba2fe0b3f40d1a5196f44d1c", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  int n,*p,e,o,g=0,j,a,b,*pe,*po,d;\n  //printf(\"Enter number of Candies\\n\");\n  scanf(\"%d\",&n);\n  //printf(\"Enter weight of each candy respectively\\n\");\n  p = (int *)malloc(n*sizeof(int));\n  for(int i=0;i<n;i++)\n  {\n    scanf(\"%d\",&p[i]);\n  }\n  a=n/2;\n  b=n-a;\n  po=(int *)malloc(a*sizeof(int));\n  pe=(int *)malloc(b*sizeof(int));\n  po[0]=p[1];\n  pe[0]=p[0];\n  for(int i=2;i<n;i=i+2)\n  {\n    pe[i/2]=pe[(i/2)-1]+p[i];\n  }\n  for(int i=3;i<n;i=i+2)\n  {\n    po[i/2]=po[(i/2)-1]+p[i];\n  }\n\n  if((pe[b-1]-pe[0])==po[a-1]) g++;\nif((po[a-1]-po[0]+pe[0])==(pe[b-1]-pe[0])) g++;\n  for(int i=1;i<n;i++)\n  {\n    d=i/2;\n    if(i%2==0)\n    {\n      e=pe[b-1]-pe[d]+po[d-1];\n      o=po[a-1]-po[d-1]+pe[d-1];\n\n    }\n  else\n  {\n    e=po[a-1]-po[d]+pe[d];\n    o=pe[b-1]-pe[d]+po[d-1];\n  }\n\n    if(e==o) g++;\n  }\n  printf(\"%d\",g);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  int n,*p,e,o,g=0,j,a,b,*pe,*po,d;\n  //printf(\"Enter number of Candies\\n\");\n  scanf(\"%d\",&n);\n  //printf(\"Enter weight of each candy respectively\\n\");\n  p = (int *)malloc(n*sizeof(int));\n  for(int i=0;i<n;i++)\n  {\n    scanf(\"%d\",&p[i]);\n  }\n  a=n/2;\n  b=n-a;\n  po=(int *)malloc(a*sizeof(int));\n  pe=(int *)malloc(b*sizeof(int));\n  po[0]=p[1];\n  pe[0]=p[0];\n  for(int i=2;i<n;i=i+2)\n  {\n    pe[i/2]=pe[(i/2)-1]+p[i];\n  }\n  for(int i=3;i<n;i=i+2)\n  {\n    po[i/2]=po[(i/2)-1]+p[i];\n  }\n\n  if((pe[b-1]-pe[0])==po[a-1]) g++;\nif((po[a-1]-po[0]+pe[0])==(pe[b-1]-pe[0])) g++;\n  for(int i=1;i<n;i++)\n  {\n    d=i/2;\n    if(i%2==0)\n    {\n      e=pe[b-1]-pe[d]+po[d-1];\n      o=po[a-1]-po[d-1]+pe[d-1];\n\n    }\n  else\n  {\n    e=po[a-1]-po[d]+pe[d];\n    o=pe[b-1]-pe[d]+po[d-1];\n  }\n\n    if(e==o) g++;\n  }\n  if(n==1) g=1;\n  printf(\"%d\",g);\n}"}
{"similarity_score": 0.2531223980016653, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "074a6285fb7b8b3536b1c8e461e9aca5", "bug_code_uid": "af5a6770ee78b957c32939820cd1c338", "src_uid": "351ffff1dfe1bc1762f062f612463759", "apr_id": "0052a83c6d2bfb24d86919e1c297c93d", "difficulty": 900, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d \",&t);\r\n    while(t--){\r\n     char s[105];\r\n     int i,j,ab=0,ba=0;\r\n     gets(s);\r\n     int len=strlen(s);\r\n\r\n     for(i=0;i<len-1;i++){\r\n        if(s[i]=='a'&&s[i+1]=='b'){\r\n            ab++;\r\n        }\r\n         if(s[i]=='b'&&s[i+1]=='a'){\r\n            ba++;\r\n        }\r\n     }\r\n    // printf(\"%d %d\\n\",ab,ba);\r\n     if(ab==ba){\r\n        puts(s);\r\n     }\r\n     else if(ab>ba){\r\n        int m=ab-ba;\r\n        for(i=0,j=1;(i<len-1)&&(j<=m);i++){\r\n           if(s[i]=='a'&&s[i+1]=='b'){\r\n          s[i]='b';\r\n        j++;\r\n        }\r\n\r\n        }\r\n         puts(s);\r\n     }\r\n\r\n     else if(ba>ab){\r\n        int m=ba-ab;\r\n        for(i=0,j=1;(i<len-1)&&(j<=m);i++){\r\n           if(s[i]=='b'&&s[i+1]=='a'){\r\n          s[i]='a';\r\n        j++;\r\n        }\r\n\r\n        }\r\n\r\n        puts(s);\r\n     }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n", "fixed": "\r\n#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d \",&t);\r\n    while(t--){\r\n      char s[105];\r\n      gets(s);\r\n      int l=strlen(s);\r\n      if(s[0]!=s[l-1]){\r\n        s[0]=s[l-1];\r\n      }\r\n\r\nputs(s);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n"}
{"similarity_score": 0.9638667292351009, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "f6ed3b706251c8ce983cb8ce3bd9a1b7", "bug_code_uid": "60106b5b81ceaa25c12c07f28067635b", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "d89be31c50adcd0ddc5b8e4023a2aa25", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n\tint b[1000],a[100][100],c[1000],i,j,n,count=0;\n\tfor(i=1;i<=100;i++)\n\t\tb[i]=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\tif(a[i][j]==1 || a[i][j]==3)\n\t\t\t{\n\t\t\t\tif(b[i]==0)\n\t\t\t\t\tcount++;\n\t\t\t\tb[i]=-1;\n\t\t\t}\n\t\t}\n\n/*\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(b[i]==-1)\n\t\t\tcontinue;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\t//scanf(\"%d\",&a[i][j]);\n\t\t\tif(a[i][j]==1 && b[i]==0)\n\t\t\t{\n\t\t\t\tb[i]=-1;\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(a[i][j]==2 && b[j]==0){\n\t\t\t\tb[j]=-1;\n\t\t\t\tcount++;}\n\t\t\telse if(a[i][j]==3)\n\t\t\t{\n\t\t\t\tif(b[i]==0)\n\t\t\t\t\tcount++;\n\t\t\t\tif(b[j]==0)\n\t\t\t\t\tcount++;\n\t\t\t\tb[i]=-1;\n\t\t\t\tb[j]=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}*/\n//\tprintf(\"count=%d\\n\",count);\n\tj = 0;\n\tint flag = 0;\n\tprintf(\"%d\\n\",n-count);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\t//flag = 1;\n\t\tif(b[i]==0)\n\t\t{\n\t\t\tflag=1;\n\t\t\tprintf(\"%d \",i);}\n\t}\n\tif(flag ==1)\n\tprintf(\"\\n\");\n/*\tprintf(\"%d\\n\",j);\n\tint flag= 0;\n\tfor(i=0;i<j;i++)\n\t{\n\t\tflag = 1;\n\t\tprintf(\"%d \",c[i]);\n\t}\n\tif(flag==1)\n\tprintf(\"\\n\");*/\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n\tint b[1000],a[105][105],c[1000],i,j,n,count=0;\n\tfor(i=1;i<=100;i++)\n\t\tb[i]=0;\n\tint flag1=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tflag1=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\tif( flag1==0 && (a[i][j]==1 || a[i][j]==3))\n\t\t\t{\n\t\t\t\tif(b[i]==0)\n\t\t\t\t\tcount++;\n\t\t\t\tb[i]=-1;\n\t\t\t\tflag1=1;\n\t\t\t}\n\t\t}\n\t}\n\n/*\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(b[i]==-1)\n\t\t\tcontinue;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\t//scanf(\"%d\",&a[i][j]);\n\t\t\tif(a[i][j]==1 && b[i]==0)\n\t\t\t{\n\t\t\t\tb[i]=-1;\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(a[i][j]==2 && b[j]==0){\n\t\t\t\tb[j]=-1;\n\t\t\t\tcount++;}\n\t\t\telse if(a[i][j]==3)\n\t\t\t{\n\t\t\t\tif(b[i]==0)\n\t\t\t\t\tcount++;\n\t\t\t\tif(b[j]==0)\n\t\t\t\t\tcount++;\n\t\t\t\tb[i]=-1;\n\t\t\t\tb[j]=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}*/\n//\tprintf(\"count=%d\\n\",count);\n\tj = 0;\n\tint flag = 0;\n\tprintf(\"%d\\n\",n-count);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\t//flag = 1;\n\t\tif(b[i]==0)\n\t\t{\n\t\t\tflag=1;\n\t\t\tprintf(\"%d \",i);}\n\t}\n\tif(flag ==1)\n\tprintf(\"\\n\");\n/*\tprintf(\"%d\\n\",j);\n\tint flag= 0;\n\tfor(i=0;i<j;i++)\n\t{\n\t\tflag = 1;\n\t\tprintf(\"%d \",c[i]);\n\t}\n\tif(flag==1)\n\tprintf(\"\\n\");*/\n\treturn 0;\n}\n"}
{"similarity_score": 0.9943181818181818, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "8dd3222a10c732fdce24d8956f4a5dca", "bug_code_uid": "280c6f9980bd0d35173d02ded8abd22d", "src_uid": "22ef37041ebbd8266f62ab932f188b31", "apr_id": "58b56a48fb06bd48c07c9f20be68b53a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a,b,j,q,i,total=0,p=0;\n    scanf(\"%d \\n\",&n);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        total=total+arr[i];\n    }\n    scanf(\"%d\",&a);\n    scanf(\"%d\",&b);\n    if(a<b)\n    {\n        for(j=a-1;j<b;j++)\n        {\n            p=p+arr[j];\n        }\n        q=total-p;\n        if (q>p)\n        printf(\"%d\",p);\n        else\n        printf(\"%d\",q);\n    }\n    if(b<a)\n    {\n        for(j=b-1;j<a;j++)\n        {\n            p=p+arr[j];\n        }\n        q=total-p;\n        if (q>p)\n        printf(\"%d\",p);\n        else\n        printf(\"%d\",q);\n    }\n    if(a==b)\n    printf(\"0\");\n    return 0;\n}\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a,b,j,q,i,total=0,p=0;\n    scanf(\"%d \\n\",&n);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        total=total+arr[i];\n    }\n    scanf(\"%d\",&a);\n    scanf(\"%d\",&b);\n    if(a<b)\n    {\n        for(j=a-1;j<=b-2;j++)\n        {\n            p=p+arr[j];\n        }\n        q=total-p;\n        if (q>p)\n        printf(\"%d\",p);\n        else\n        printf(\"%d\",q);\n    }\n    if(b<a)\n    {\n        for(j=b-1;j<=a-2;j++)\n        {\n            p=p+arr[j];\n        }\n        q=total-p;\n        if (q>p)\n        printf(\"%d\",p);\n        else\n        printf(\"%d\",q);\n    }\n    if(a==b)\n    printf(\"0\");\n    return 0;\n}\n\n\n\n\n\n"}
{"similarity_score": 0.5855962219598583, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "545a9ef51710560b1dbcf5dd36a6e265", "bug_code_uid": "0eb051abe895375d0a69f7e3a472667a", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "611bf07748b27285680156231144034e", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define maxn 200\nint main()\n{\n\tint a[maxn];\n\tint t;\n\tint n,x;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint max=0,min=0;\n\t\tint m=0,k=0;\n\t\tint i;\n\t\tscanf(\"%d%d\",&n,&x);\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tm+=a[i];\n\t\t\tif(a[i]/x==0)\n\t\t\tk+=a[i]/x;\n\t\t\telse\n\t\t\tk+=a[i]/x+1;\n\t\t\tmax=k;\n\t\t}\n\t\tif(m%x==0)\n\t\tmin=(m/x);\n\t\telse\n\t\tmin=m/x+1;\n\t\tprintf(\"%d %d\\n\",min,max);\n\t}\n\treturn 0;\n}\n  \t  \t \t \t  \t     \t\t\t\t   \t\t  \t\t", "fixed": "#include<stdio.h>\nconst int maxn=3e5+7;\nint main()\n{\n\tlong long int a[maxn];\n    int t;\n\tint n,x;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tlong long int max=0,min=0,m=0,i;\n\t\tscanf(\"%d%d\",&n,&x);\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tm+=a[i];\n\t\t\tif(a[i]%x==0)\n\t\t\tmax+=a[i]/x;\n\t\t\telse\n\t\t\tmax+=a[i]/x+1;\n\t\t}\n\t\tif(m%x==0)\n\t\tmin=m/x;\n\t\telse\n\t\tmin=m/x+1;\n\t\tprintf(\"%lld %lld\\n\",min,max);\n\t}\n\treturn 0;\n}\n\t  \t \t\t \t\t\t\t\t \t  \t\t\t\t\t\t    \t \t"}
{"similarity_score": 0.9912023460410557, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c9d06d0dd2322c554da1b47c93fbf55c", "bug_code_uid": "aa864e4d1d8d6247506acd6bcad804da", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "b9651f5fa756883cb1af33268104ec42", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nchar s[111111]\nchar *p1 = NULL, *p2 = NULL;\nint OK = 0;\n\nint main() {\n\tscanf(\"%s\", s);\n\tif ( (p1 = strstr(s, \"AB\")) != NULL &&\n\t (p2 = strstr(p1, \"BA\") ) != NULL ) OK = 1;\n\telse if ( (p1 = strstr(s, \"BA\")) != NULL &&\n\t (p2 = strstr(p1, \"AB\") ) != NULL ) OK = 1;\n\tputs( OK? \"YES\": \"NO\" );\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nchar s[111111];\nchar *p1 = NULL, *p2 = NULL;\nint OK = 0;\nint main() {\n\tscanf(\"%s\", s);\n\tif ( (p1 = strstr(s, \"AB\")) != NULL &&\n\t (p2 = strstr(p1+2, \"BA\") ) != NULL ) OK = 1;\n\telse if ( (p1 = strstr(s, \"BA\")) != NULL &&\n\t (p2 = strstr(p1+2, \"AB\") ) != NULL ) OK = 1;\n\tputs( OK? \"YES\": \"NO\" );\n\treturn 0;\n}"}
{"similarity_score": 0.8485675306957708, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "7ac14521b3e7ddd240b8099e6390ced4", "bug_code_uid": "1c373c948945bff2b39a28dad2f4a9da", "src_uid": "80cf3ea119fd398e8f003d22a76895a7", "apr_id": "0abf4d442d8cd78b8de865ab520e6a2e", "difficulty": 1400, "tags": ["dp", "two pointers", "binary search", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\n#include<math.h>\n#include<stdlib.h>\n#define forn(i,n) for(i=0;i<n;i++)\n#define PI arcos(-1.0)\n#define SQR(x) ((x)*(x))\n#define EPS 1E-9;\nint main()\n{\n    freopen(\"\")\n    int n,i,x,m,max,maxi;\n    int a[5000];\n    int b[5000];\n    scanf(\"%d\",&n);\n    memset(a,0,sizeof(a));\n    memset(b,0,sizeof(b));\n    maxi=0;\n    forn(i,n)\n    {\n        scanf(\"%d\",&m);\n        if(maxi<m) maxi=m;\n        a[m]++;\n    }\n    for(i=1;i<=m;i++)\n    {\n        b[i]=a[i]+b[i-1];\n    }\n    for(max=0,i=1;i<=m;i++)\n    {\n        if(b[2*i]-b[i-1]>max) max=b[i*2]-b[i-1];\n    }\n    printf(\"%d\\n\",n-max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\n#include<math.h>\n#include<stdlib.h>\n#define forn(i,n) for(i=0;i<n;i++)\n#define PI arcos(-1.0)\n#define SQR(x) ((x)*(x))\n#define EPS 1E-9;\nint main()\n{\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    int n,i,x,m,max,maxi,sum;\n    int a[5100];\n    int b[5100];\n    scanf(\"%d\",&n);\n    memset(a,0,sizeof(a));\n    memset(b,0,sizeof(b));\n    maxi=0;\n    forn(i,n)\n    {\n        scanf(\"%d\",&m);\n        if(maxi<m) maxi=m;\n        a[m]++;\n    }\n    for(i=1;i<=maxi;i++)\n    {\n        b[i]=a[i]+b[i-1];\n    }\n    for(max=0,i=1;i<=maxi/2;i++)\n    {\n        if(b[2*i]-b[i-1]>max) max=b[i*2]-b[i-1];\n    }\n    for(i=maxi/2+1,sum=0;i<=maxi;i++)\n    {\n        sum+=a[i];\n    }\n    if(sum>max) max=sum;\n    printf(\"%d\\n\",n-max);\n    return 0;\n}\n"}
{"similarity_score": 0.9976047904191617, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0e4e63770e33dab46b9bc1aea23c8a35", "bug_code_uid": "0d837c3ef2f12511a81e13fff48d4448", "src_uid": "7ac27da2546a50d453f7bb6cacef1068", "apr_id": "107e76f4d1305f39fcf4584bfda939a2", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdbool.h>\nint main(void)\n{\n    int cas, a,b,c,x,y;\n    scanf(\"%d\",&cas);\n    int i = 0;\n    int res;\n    int dog = 0;\n    int cat = 0;\n    while(cas > i)\n    {\n\n            scanf(\"%d %d %d %d %d\",&a,&b,&c,&x,&y);\n            dog = x - a;\n            cat = y - b;\n            // if((dog + cat <= c && dog >= 0 && cat>= 0) || (a > x && b > y && c <= 0))\n            //     printf(\"YES\\n\");\n            if(dog > 0)\n            {\n                c = c - dog;\n                dog = 0;\n            }\n            if(cat > 0)\n            {\n                c = c - cat;\n                cat  = 0;\n            }\n            if(cat == 0 && dog == 0 && c >= 0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        i++;\n    }\n    return(0);\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdbool.h>\nint main(void)\n{\n    int cas, a,b,c,x,y;\n    scanf(\"%d\",&cas);\n    int i = 0;\n    int res;\n    int dog = 0;\n    int cat = 0;\n    while(cas > i)\n    {\n\n            scanf(\"%d %d %d %d %d\",&a,&b,&c,&x,&y);\n            dog = x - a;\n            cat = y - b;\n            // if((dog + cat <= c && dog >= 0 && cat>= 0) || (a > x && b > y && c <= 0))\n            //     printf(\"YES\\n\");\n            if(dog > 0)\n            {\n                c = c - dog;\n                dog = 0;\n            }\n            if(cat > 0)\n            {\n                c = c - cat;\n                cat  = 0;\n            }\n            if(cat <= 0 && dog <= 0 && c >= 0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        i++;\n    }\n    return(0);\n}"}
{"similarity_score": 0.7037037037037037, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "69c6590afda3ca2b38ed68c5ca6fe8eb", "bug_code_uid": "497855f841bc6f497aba1f95568c9142", "src_uid": "5139d222fbbfa70d50e990f5d6c92726", "apr_id": "b8381ae47aa285983565bc5215eb7a38", "difficulty": 1100, "tags": ["brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&i);\n    for(t=0;t<i;t++)\n    {\n        int m,n,a[5100],k=0,t;\n        scanf(\"%d\",&m);\n        for(n=0;n<m;n++)\n        {\n            scanf(\"%d\",&a[n]);\n        }\n        for(n=2;n<m;n++)\n        {\n            if(a[n-2]==a[n])\n                {k=1;break;}\n        }\n        if(k!=1)\n        {\n         for(n=0;n<m-2;)\n            {\n            t=2;\n            while(a[n+1]==a[n+t])\n            {\n                t++;\n            }\n            if(a[n]==a[n+t])\n                {k=1;break;}\n            n=n+t-1;\n            }\n        }\n        if(k==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&i);\n    for(t=0;t<i;t++)\n    {\n        int m,n,a[5100],k=0,q;\n        scanf(\"%d\",&m);\n        for(n=0;n<m;n++)\n        {\n            scanf(\"%d\",&a[n]);\n        }\n        for(q=0;q<m-2;q++)\n        {\n            for(n=q+2;n<m;n++)\n            {\n            if(a[q]==a[n])\n                {k=1;break;}\n            }\n            if(k==1)\n                break;\n        }\n        if(k==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9380281690140845, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d77f000191632e68aacf6982f0d0a1ab", "bug_code_uid": "233a0cd28434ef959cc6535cb2620352", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "359b34005d0007813bb833915efba823", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\n long long int n,i,j,count1=0,count=0,t,c;\n long long int a[100001];\n scanf(\"%I64d %I64d\",&n,&c);\n for(i=0;i<n;i++)\n {\n     scanf(\"%I64d\",&a[i]);\n }\n for(i=1;i<n;i++)\n {\n     if(a[i]-a[i-1]<=c)\n     {\n         count++;\n         //printf(\"%I64d\",count);\n     }\n     else{\n        count=1;\n     }\n }\n printf(\"%I64d\",count);\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\n\n long long int n,i,count=1,c;\n long long int a[100001];\n scanf(\"%I64d %I64d\",&n,&c);\n for(i=0;i<n;i++)\n {\n     scanf(\"%I64d\",&a[i]);\n }\n for(i=1;i<n;i++)\n {\n     if(a[i]-a[i-1]<=c)\n     {\n         count++;\n         //printf(\"%I64d\",count);\n     }\n     else{\n        count=1;\n     }\n }\n printf(\"%I64d\",count);\n return 0;\n}\n\n"}
{"similarity_score": 0.7081021087680355, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "18a33682bdfbd073475e0bdd9eeb137c", "bug_code_uid": "1ebf232ac989aee46af21c25c8e967a0", "src_uid": "b8321b0a3fc8c295182a4c2c8d2e9d01", "apr_id": "6bf0bfabe4971d151b6ccfd02afede27", "difficulty": 1300, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int i,n,m,s,f,t,ft[10000],cf,a,trip;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&s,&f,&t);\n        trip=(int)ceil(((double)t/(double)(m-1)));\n            a=trip%2;\n            if(a==1) cf=t - (trip-1)*(m-1) + 1 ;\n            else cf=m-  (t - (trip-1)*(m-1));\n        //printf(\"%d     %d\\n\",a,cf);\n            if (s==f) ft[i]=t;\n            else if (f>s)\n            {\n                if(a==0) {ft[i]=t + cf -1 + f -1;}\n                else if (cf>s && a==1) {ft[i]=t + m-cf +m-1 + f -1;}\n                else  {ft[i] =  t + f - cf;}\n            }\n            else\n            {\n                if(a==1){ ft[i]=t + m - cf  + m - f;}\n                else if (cf<s && a==0) {ft[i]=t + cf -1 +m-1 + m - f;}\n                else {ft[i] =   t + cf -f;}\n            }\n       }\n    for(i=0;i<n;i++)\n        printf(\"%d\\n\",ft[i]);\n\n    return(0); \n    }", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int i,n,m,s,f,ft,t,cf,a,trip;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&s,&f,&t);\n        trip=(int)ceil(((double)t/(double)(m-1)));\n            a=trip%2;\n            if(a==1) cf=t - (trip-1)*(m-1) + 1 ;\n            else cf=m-  (t - (trip-1)*(m-1));\n        //printf(\"%d     %d\\n\",a,cf);\n            if (s==f) ft=t;\n            else if (f>s)\n            {\n                if(a==0) {ft=t + cf -1 + f -1;}\n                else if (cf>s && a==1) {ft=t + m-cf +m-1 + f -1;}\n                else  {ft = t + f - cf;}\n            }\n            else\n            {\n                if(a==1){ ft=t + m - cf  + m - f;}\n                else if (cf<s && a==0) {ft=t + cf -1 +m-1 + m - f;}\n                else {ft =  t + cf -f;}\n            }\n        printf(\"%d\\n\",ft);\n    }\n    return(0); \n            }"}
{"similarity_score": 0.7662434652725915, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "add5ff7938bf308cee41578c766faa5f", "bug_code_uid": "dab800371148d3806d69bdd5fb5c1e3e", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "e2123653935c63e046c3bcfe8cb19135", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100005];\n    scanf(\"%s\",str);\n    int i,j;\n    for(i=0;i<strlen(str)-1;i++)    {\n        if(str[i]=='A'&&str[i+1]=='B')    {\n            j=i;\n        }\n    }\n    for(i=0;i<j;i++)    {\n        if(str[i]=='B'&&str[i+1]=='A')    {\n            printf(\"YES\\n\");\n            return 0;\n            \n        }\n    }\n    for(i=j+2;i<strlen(str)-1;i++)    {\n        if(str[i]=='B'&&str[i+1]=='A')    {\n            printf(\"YES\\n\");\n            return 0;\n            \n        }\n    }\n    \n    printf(\"NO\\n\");\n    return 0;\n\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100005];\n    int a[100005];\n    scanf(\"%s\",str);\n    int i,j,k=0;\n    for(i=0;i<strlen(str)-1;i++)    {\n        if(str[i]=='A'&&str[i+1]=='B')    {\n            a[k]=i;\n            k++;\n            if(k>10)    {\n                break;\n            }\n        }\n    }\n    if(k==0)    {\n        printf(\"NO\\n\");\n        return 0;\n    }\n    for(j=0;j<k;j++)    {\n    for(i=0;i<a[j]-1;i++)    {\n        if(str[i]=='B'&&str[i+1]=='A')    {\n            printf(\"YES\\n\");\n            return 0;\n\n        }\n    }\n    for(i=a[j]+2;i<strlen(str)-1;i++)    {\n        if(str[i]=='B'&&str[i+1]=='A')    {\n            printf(\"YES\\n\");\n            return 0;\n\n        }\n    }\n    }\n    printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9420289855072463, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f0ebd48792592fe4f66b4d332f8c1887", "bug_code_uid": "9f0daec9cd8f7073c3599cca5b1c9334", "src_uid": "cdafe800094113515e1de1acb60c4bb5", "apr_id": "46df9db25a99f1ae9fcfc16d7fb185c5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){int  a[500],b[500],c[500],d[500];\n\nint g,h;\nscanf(\"%d\",&g);\nfor(h=0;h<g;h++){\nscanf(\"%d%d%d%d\",&a[h],&b[h],&c[h],&d[h]);\n}\nfor(h=0;h<g;h++)\n{\n\n{if (a[h]!=d[h])\n\t{printf(\"%d  %d\",a[h],d[h]);\n\tcontinue ;}\nif(b[h]!=c[h])\n\t{printf(\"%d  %d\",b[h],c[h]);\n\tcontinue;}\nif(a[h]==c[h]&&b[h]==d[h])\n\t{printf(\"%d  %d\",a[h],d[h]);\n\tcontinue;}\n\n\n}\nprintf(\"\\n\");\n}\n\nreturn 0;}\n", "fixed": "#include<stdio.h>\nint main(){int  a[500],b[500],c[500],d[500];\n\nint g,h;\nscanf(\"%d\",&g);\nfor(h=0;h<g;h++){\nscanf(\"%d%d%d%d\",&a[h],&b[h],&c[h],&d[h]);\n}\nfor(h=0;h<g;h++)\n{\n\n{if (a[h]!=d[h])\n\t{printf(\"%d  %d\",a[h],d[h]);\n\tprintf(\"\\n\");\n\t\tcontinue ;}\nif(b[h]!=c[h])\n\t{printf(\"%d  %d\",b[h],c[h]);\n\tprintf(\"\\n\");\n\t\tcontinue;}\nif(a[h]==c[h]&&b[h]==d[h])\n\t{printf(\"%d  %d\",a[h],d[h]);\n\tprintf(\"\\n\");\n\t\tcontinue;}\n\n\n}\nprintf(\"\\n\");\n}\n\nreturn 0;}\n"}
{"similarity_score": 0.995739500912964, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "eccf1998f4735e7718272656c74d33fe", "bug_code_uid": "f082737a56f51204b1cffa07f8786d01", "src_uid": "f5451b19cf835b1cb154253fbe4ea6df", "apr_id": "42bc4addf47c20802beb61e9257b5b7e", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char s[20000],sub_string[10000];\n    char alphabet[258];\n    int k=0;\n    scanf(\"%s\",s);\n    for(int i=0; i<=256; i++)\n        alphabet[i]=0;\n    int d=strlen(s);\n    for(int i=0; i<d; i++)\n    {\n        alphabet[s[i]]++;\n    }\n    int t=alphabet[s[0]];\n   // printf(\"%d\\n\",t);\n    for(int i='a'; i<='z'; i++)\n    {\n\n        if(alphabet[i]%n != 0)\n        {\n            printf(\"-1\\n\");\n            return 0;\n        }\n    }\n    for(int i='a'; i<='z'; i++)\n    {\n\n        int t=alphabet[i]/n;\n        int a=0;\n        while(a<t)\n        {\n            sub_string[k]=(char)i;\n            a++;\n            k++;\n        }\n    }\n   for(int i=0; i<n; i++)\n    {\n        for(int j=0; j<k; j++)\n        {\n            printf(\"%c\",sub_string[j]);\n        }\n    }\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char s[20000],sub_string[10000];\n    int alphabet[258];\n    int k=0;\n    scanf(\"%s\",s);\n    for(int i=0; i<=256; i++)\n        alphabet[i]=0;\n    int d=strlen(s);\n    for(int i=0; i<d; i++)\n    {\n        alphabet[s[i]]++;\n    }\n    int t=alphabet[s[0]];\n   // printf(\"%d\\n\",t);\n    for(int i='a'; i<='z'; i++)\n    {\n\n        if(alphabet[i]%n != 0)\n        {\n            printf(\"-1\\n\");\n            return 0;\n        }\n    }\n    for(int i='a'; i<='z'; i++)\n    {\n\n        int t=alphabet[i]/n;\n        int a=0;\n        while(a<t)\n        {\n            sub_string[k]=(char)i;\n            a++;\n            k++;\n        }\n    }\n   for(int i=0; i<n; i++)\n    {\n        for(int j=0; j<k; j++)\n        {\n            printf(\"%c\",sub_string[j]);\n        }\n    }\n\n\n}\n"}
{"similarity_score": 0.9250645994832042, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8c3629b0d210276abc3f7e6cd7eef1a7", "bug_code_uid": "a2de6965ca6f2b53a9478c72f79a0a07", "src_uid": "0515ac888937a4dda30cad5e2383164f", "apr_id": "843284aa8d183ee7fc0f20fbbb888624", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n,k;\n\tint i;\n\tscanf(\"%d %d\",&n,&k);\n\tchar a[n];\n\tscanf(\"%s\",a);\n\tif(n>1)\n\t{\n\tif(k>0 && a[0]>'1')\n\t{\n\t\ta[0]='1';\n\t\tk--;\n\t}\n\ti=1;\n\twhile(k!=0 && i<n)\n\t{\n\t\ta[i]='0';\n\t\ti++;\n\t\tk--;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%c\",a[i]);\n\t}\n\t}\n\tif(n==1)\n\t{\n\t\tif(k==0)\n\t\t\tprintf(\"%c\",a[0]);\n\t\telse\n\t\t\tprintf(\"%d\",0);\n\t}\n\treturn 0;\n}\n\n\n\n\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n,k;\n\tint i;\n\tscanf(\"%d %d\",&n,&k);\n\tchar a[n];\n\tscanf(\"%s\",a);\n\tif(n>1)\n\t{\n\tif(k>0 && a[0]>'1')\n\t{\n\t\ta[0]='1';\n\t\tk--;\n\t}\n\ti=1;\n\twhile(k!=0 && i<n)\n\t{\n\t\tif(a[i]!='0')\n\t\t{\n\t\ta[i]='0';\n\t\n\t\tk--;\n\t\t}\n\t\ti++;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%c\",a[i]);\n\t}\n\t}\n\tif(n==1)\n\t{\n\t\tif(k==0)\n\t\t\tprintf(\"%c\",a[0]);\n\t\telse\n\t\t\tprintf(\"%d\",0);\n\t}\n\treturn 0;\n}\n\n\n\n\n\n"}
{"similarity_score": 0.8911022576361222, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "dea21a2d398633ca2eeac381301deb06", "bug_code_uid": "b258b7a9c5c978263523a6f905f8f672", "src_uid": "f2f9f63a952794f27862eb24ccbdbf36", "apr_id": "e2dfb4d6df596f9c43f378b93165eff4", "difficulty": 1600, "tags": ["data structures", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int a, int b)\n{\n\tif (a < b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint max(int a, int b)\n{\n\tif (a > b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint n, m, k;\n\tint i, j;\n\tint a[4003];\n\tint ans, v;\n\tfor (; t > 0; t--)\n\t{\n\t\tscanf(\"%d %d %d\", &n, &m, &k);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &a[i]);\n\t\tif (m - 1 <= k)\n\t\t{\n\t\t\tans = 0;\n\t\t\tfor (i = 0; i < m; i++)\n\t\t\t\tif (ans < a[i])\n\t\t\t\t\tans = a[i];\n\t\t\tfor (i = n - m + 1; i < n; i++)\n\t\t\t\tif (ans < a[i])\n\t\t\t\t\tans = a[i];\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t\tcontinue;\n\t\t}\n\t\tans = 0;\n\t\tfor (i = 0; i <= k; i++)\n\t\t{\n\t\t\tv = 1000000009;\n\t\t\tfor (j = 0; j < m - k; j++)\n\t\t\t\tv = min(v, max(a[i + j], a[n - m + i + j]));\n\t\t\tans = max(ans, v);\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint min(int a, int b)\n{\n\tif (a < b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint max(int a, int b)\n{\n\tif (a > b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint n, m, k;\n\tint i, j;\n\tint a[4003];\n\tint ans, v;\n\tfor (; t > 0; t--)\n\t{\n\t\tscanf(\"%d %d %d\", &n, &m, &k);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &a[i]);\n\t\tif (m - 1 <= k)\n\t\t{\n\t\t\tans = 0;\n\t\t\tfor (i = 0; i < m; i++)\n\t\t\t\tans = max(ans, a[i]);\n\t\t\tfor (i = n - m; i < n; i++)\n\t\t\t\tans = max(ans, a[i]);\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t\tcontinue;\n\t\t}\n\t\tans = 0;\n\t\tfor (i = 0; i <= k; i++)\n\t\t{\n\t\t\tv = 1000000009;\n\t\t\tfor (j = 0; j < m - k; j++)\n\t\t\t\tv = min(v, max(a[i + j], a[n - m + i + j]));\n\t\t\tans = max(ans, v);\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.51699604743083, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "a12b62788af62727717aab8efab5e2df", "bug_code_uid": "0a0b2d4118e318b582bf828272550d3a", "src_uid": "3c8bfd3199a9435cfbdee1daaacbd1b3", "apr_id": "1361b254f8c33e70eed9f1153ec41882", "difficulty": 1200, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t, n,i,j,mid;\n    long long int a[100001];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n       scanf(\"%d\",&n);\n       for(i = 0; i < n; i++ )\n       {\n           scanf(\"%d\",&a[i]);\n       }\n       for(i = 0; i < n - 1; i++)\n        for(j = i + 1; j < n; j++)\n       {\n           if(a[i] > a[j])\n           {\n               mid = a[i];\n               a[i] = a[j];\n               a[j] = mid;\n           }\n       }\n\n       for( i = n / 2 - 1 , j = n / 2 ; i >= 0 || j < n; i--, j++)\n       {\n           if(j < n)\n            printf(\"%d \",a[j]);\n           if(i >= 0)\n            printf(\"%d \",a[i]);\n\n       }\n       printf(\"\\n\");\n    }\n    return  0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const   void    *a,const    void    *b)\n{\n    return  *(int   *)a - *(int *)b;\n}\n\n\nint main()\n{\n    int t, n,i,j,mid;\n    int a[100005];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n       scanf(\"%d\",&n);\n       for(i = 0; i < n; i++ )\n           scanf(\"%d\",&a[i]);\n       qsort(a,n,sizeof(a[i] * n),cmp);\n\n       for( i = n / 2 - 1 , j = n / 2 ;  j < n; i--, j++)\n       {\n            printf(\"%d \",a[j]);\n           if(i >= 0)\n            printf(\"%d \",a[i]);\n\n       }\n       printf(\"\\n\");\n    }\n    return  0;\n}\n"}
{"similarity_score": 0.934409687184662, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "27fde81e06edee419c91156ed3760fe5", "bug_code_uid": "30e3a9ec812c0d660bfcf1bb73433f16", "src_uid": "ee9ba877dee1a2843e885a18823cbff0", "apr_id": "4407a4db006cf330d06ae61353bc8e7b", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar arr[104];\n\nint main() {\n\tint n,i,j,len;\n\tscanf(\"%d\", &n);\n\tgetchar();\n\tfor (i = 0; i < n; i++) {\n\t\tgets(arr);\n\t\tlen = strlen(arr);\n\t\t\n\t\tif(!strcmp(arr + len - 5, \"lala.\")&& !strcmp(arr, \"miao.\"))\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\telse if (!strcmp(arr + len - 5, \"lala.\"))\n\t\t\tprintf(\"Freda's\\n\");\n\t\telse if (!strcmp(arr, \"miao.\"))\n\t\t\tprintf(\"Rainbow's\\n\");\n\t\telse\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t}\n\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar arr[104],temp[10];\n\nint main() {\n\tint n, i, j, len;\n\tscanf(\"%d\", &n);\n\tgetchar();\n\tfor (i = 0; i < n; i++) {\n\t\tgets(arr);\n\t\tlen = strlen(arr);\n\t\tstrncpy(temp, arr, 5);\n\t\tif (!strcmp(arr + len - 5, \"lala.\") && !strcmp(temp, \"miao.\"))\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\telse if (!strcmp(arr + len - 5, \"lala.\"))\n\t\t\tprintf(\"Freda's\\n\");\n\t\telse if (!strcmp(temp, \"miao.\"))\n\t\t\tprintf(\"Rainbow's\\n\");\n\t\telse\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t}\n\n\n}\n"}
{"similarity_score": 0.9856781802864364, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "50fa37aba94fc5ec0045891bcddea3c3", "bug_code_uid": "a5a796a99cf60707f46e3e117b1aa8e5", "src_uid": "5de66fbb594bb317654366fd2290c4d3", "apr_id": "be21854415a4f66efb853e89c2102e58", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include<stdio.h>\n# include<string.h>\nint main()\n{\n    int i,t,m=0,flag1=0,flag2=0,n,count=0;\n    char a[101];\n    scanf(\"%d\",&t);\n    for(i=1; i<=t; i++)\n    {\n        count=m=0;\n        scanf(\"\\n\");\n        gets(a);\n        m=strlen(a);\n       while(a[flag1]=='0')\n        {\n            flag1++;\n        }\n        flag2=m-1;\n        while(a[flag2]=='0')\n        {\n            flag2--;\n        }\n        for(n=flag1; n<=flag2; n++)\n        {\n            if(a[n]=='0')\n            {\n                count++;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    return 0;\n}\n", "fixed": "# include<stdio.h>\n# include<string.h>\nint main()\n{\n    int i,t,m=0,flag1=0,flag2=0,n,count=0;\n    char a[101];\n    scanf(\"%d\",&t);\n    for(i=1; i<=t; i++)\n    {\n        count=m=0;\n        scanf(\"\\n\");\n        gets(a);\n        flag1=0;\n        m=strlen(a);\n       while(a[flag1]=='0')\n        {\n            flag1++;\n        }\n        flag2=m-1;\n        while(a[flag2]=='0')\n        {\n            flag2--;\n        }\n        for(n=flag1; n<=flag2; n++)\n        {\n            if(a[n]=='0')\n            {\n                count++;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7207872078720787, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "90aad3ad30f7f166c0c6cbb45ffa58c7", "bug_code_uid": "6f385c4cca5f743b754e3ba46be45e72", "src_uid": "90c5058c0c7f55a567f2e036482149f9", "apr_id": "f234b6d3c4ceda536c89cedacf98066c", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t-->0)\r\n    {\r\n       long long int a,b,c,x;\r\n       scanf(\"%lld %lld %lld\",&a,&b,&c);\r\n       x=2*b;\r\n       if((((a+c)%x==0) || ((x-c)%a==0) || ((x-a)%c==0)) && ((x>a+c)&&x==2)\r\n       printf(\"YES\\n\");\r\n       else\r\n       printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t-->0)\r\n    {\r\n       long long int a,b,c,x;\r\n       scanf(\"%lld %lld %lld\",&a,&b,&c);\r\n       x=2*b;\r\n       if((a+c)%x==0)\r\n       printf(\"YES\\n\");\r\n       else if((a+c)>x)\r\n       printf(\"NO\\n\");\r\n       else if((x-a)%c==0 && x!=a)\r\n       printf(\"YES\\n\");\r\n       else if((x-c)%a==0 && x!=c)\r\n       printf(\"YES\\n\");\r\n       else\r\n       printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9113680154142582, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6e2cb67a2b131eb3c374410724748e9f", "bug_code_uid": "eb922af77d820b2aa59ee7c1c81d13fb", "src_uid": "a4c82fffb31bc7e42870fd84e043e815", "apr_id": "adeed9d5974734b81b4a7211fc9f5e5a", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<ctype.h>\n#define in scanf\n#define out printf\n#define lin puts(\"\");\n\n///\tfor( ; ; ) {  }\n\n///\twhile( ){ }\n\n///\tin(\"% \",& );\n\n///\tout(\"% \", );\n\nint main(){\n\nint t,a,b,i;\nscanf(\"%d\",&t);\nfor (i=1;i<=t;i++){\n    scanf(\"%d %d\",&a,&b);\n    if(((a%2!=0&&(b%2!=0||b==1))||(a%2==0&&b%2==0))&&a>=b){\n        printf(\"Yes\\n\");\n    }\n    else{\n        printf(\"No\\n\");\n    }\n}\n\n///char\n\n///double\n\n///float\n\n///long long\n\n\n\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<ctype.h>\n#define in scanf\n#define out printf\n#define lin puts(\"\");\n\n///\tfor( ; ; ) {  }\n\n///\twhile( ){ }\n\n///\tin(\"% \",& );\n\n///\tout(\"% \", );\n\nint main(){\n\nlong long t,a,b,i,j,k;\nscanf(\"%lld\",&t);\nfor (i=1;i<=t;i++){\n    scanf(\"%lld %lld\",&a,&b);\n    if(((a%2!=0&&(b%2!=0))||(a%2==0&&b%2==0))&&a>=b&&b*b<=a){\n         \n        printf(\"Yes\\n\");\n    }\n    else{\n        printf(\"No\\n\");\n    }\n}\n\n///char\n\n///double\n\n///float\n\n///long long\n\n\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.5499438832772167, "equal_cnt": 21, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "5c2af8bcb269e7b3ac05d5bb9a9fce38", "bug_code_uid": "884e722e25f172d041befca0481d521a", "src_uid": "9966bfdc9677a9dd558684a00977cd58", "apr_id": "ece9e550688a7387b7c26f199adf49c5", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t{\r\n\tint n,c1,c2,c3=0;\r\n\tscanf(\"%d\",&n);\r\n\tprintf(\"\\n\");\r\n\tchar a[n];\r\n\tscanf(\"%s\",&a);\r\n\tfor(i=0;a[i]!='\\0';i++)\r\n\t{\r\n\t\tif(a[i]=='0')\r\n\t\t{\r\n\t\t\tc2=i;\r\n\t\t}\r\n\t\tif(a[i]=='0')\r\n\t\t{\r\n\t\t\tc1=i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t/*for(i=0;a[i]!='\\0';i++)\r\n\t{\r\n\t\tif(a[i]=='0')\r\n\t\t{\r\n\t\t\tc2=i;\r\n\t\t}\r\n\t}*/\r\n\tfor(i=c1;i<=c2;i++)\r\n\t{\r\n\t\tif(a[i]=='1')\r\n\t\t{\r\n\t\t\tc3++;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprintf(\"%d\",((c2-c1-c3)*2)-c3);\r\n\t\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t,i,j;\r\n\tscanf(\"%d\",&t);\r\n\tprintf(\"\\n\");\r\n\tfor(j=1;j<=t;j++)\r\n\t{\r\n\t\tint n,c1=0,c2=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tprintf(\"\\n\");\r\n\t\tchar a[n];\r\n\t\tscanf(\"%s\",&a);\r\n\t\tfor(i=0;a[i]!='\\0';i++)\r\n\t\t{\r\n\t\t\tif(a[i]=='0'&&a[i+1]=='0')\r\n\t\t\t{\r\n\t\t\t\tc1=c1+2;\r\n\t\t\t}\r\n\t\t\telse if(a[i]=='0'&&a[i+1]=='1'&&a[i+2]=='0')\r\n\t\t\t{\r\n\t\t\t\tc2++;\r\n\t\t    }\r\n\t\t}\r\n\t\tprintf(\"%d\",c1+c2);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9138888888888889, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ac47d298795c5ca647d640a6ec63f85f", "bug_code_uid": "90e3f9a4a21485f133e6240b997eebce", "src_uid": "f530e6f720dafaf8bff9324289b90b28", "apr_id": "d37365c2df4f27d17f45e407fb27e904", "difficulty": 1100, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#define size 1000000\nmain()\n{\n    int a[size]={0},i,j,n,p,c=0,k;\n    scanf(\"%d\",&n);\n    k=n;\n    while(n)\n    {\n        scanf(\"%d\",&p);\n        a[p-1]=1;\n        n--;\n    }\n    for(i=0,j=size-1;i<size/2;i++,j--)\n    {\n    if(a[i]==1||a[j]==1)\n    {\n       c++;\n    }\n    if(c==k)\n        break;\n}\nprintf(\"%d\",i);\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#define size 1000000\nmain()\n{\n    int a[size]={0},i,j,n,p,c=0,k;\n    scanf(\"%d\",&n);\n    k=n;\n    while(n)\n    {\n        scanf(\"%d\",&p);\n        a[p-1]=1;\n        n--;\n    }\n    for(i=0,j=size-1;i<size/2;i++,j--)\n    {\n    if(a[i]==1)\n    {\n       c++;\n    }\n    if(a[j]==1)\n        c++;\n    if(c==k)\n        break;\n}\nprintf(\"%d\",i);\n}"}
{"similarity_score": 0.9978021978021978, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bedfa5895e1f23e86dfbacafd6b5a814", "bug_code_uid": "f65fffb22af4fcd0f62af803e46d99fd", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "1672651a0ebb88f726d91423aa2fda0e", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n#include<stdlib.h>\nint main() {\n    long long int T,x,y,a,b,min,cost,max;\n    scanf(\"%d\",&T);\n    while(T--){\n        cost=0;\n        scanf(\"%lld%lld\",&x,&y);\n        scanf(\"%lld%lld\",&a,&b);\n        min =x<y?x:y;\n        max =x>y?x:y;\n        if(2*a<b){\n            cost=min*2*a;\n        }\n        else{\n            cost=min*b;\n        }\n        cost+=a*(max-min);\n        printf(\"%lld\\n\",cost);   \n    }\n    \n    \n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\n#include<stdlib.h>\nint main() {\n    long long int T,x,y,a,b,min,cost,max;\n    scanf(\"%lld\",&T);\n    while(T--){\n        cost=0;\n        scanf(\"%lld%lld\",&x,&y);\n        scanf(\"%lld%lld\",&a,&b);\n        min =x<y?x:y;\n        max =x>y?x:y;\n        if(2*a<b){\n            cost=min*2*a;\n        }\n        else{\n            cost=min*b;\n        }\n        cost+=a*(max-min);\n        printf(\"%lld\\n\",cost);   \n    }\n    \n    \n}\n"}
{"similarity_score": 0.9665841584158416, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "e1069c332e761b38dfcb511b9938350a", "bug_code_uid": "a90ebc2da58a2962a545a8b33fa0844a", "src_uid": "5598d5954fa3e3cecedb413033259760", "apr_id": "6c2766de39de59c0c0c998cb67f8ebe6", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\n//  main.c\n//  C. Dominant Piranha\n//\n//  Created by Petrucio on 11/27/20.\n//  Copyright \u00a9 2020 Petrucio. All rights reserved.\n//\n#include <stdio.h>\n \nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,max,ans;max=0;ans=-1;\n\t    scanf(\"%d\",&n);\n\t    int a[n];\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        scanf(\"%d\",&a[i]);\n\t        if(a[i]>max)\n\t        {\n\t            max=a[i];\n\t        }\n\t    }\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        if(a[i]==max)\n\t        {\n\t            if(i>0&&a[i-1]<max)\n\t            {\n\t                ans=i;\n\t                break;\n\t            }\n\t            if(i<n&&a[i+1]<max)\n\t            {\n\t                ans=i;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    if(ans!=-1)\n\t    {\n\t    ans=ans+1;\n\t    }\n\t    printf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}", "fixed": "//\n//  main.c\n//  C. Dominant Piranha\n//\n//  Created by Petrucio on 11/27/20.\n//  Copyright \u00a9 2020 Petrucio. All rights reserved.\n//\n#include <stdio.h>\n \nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,ans;ans=-1;\n\t    scanf(\"%d\",&n);\n\t    long long int a[n],g;g=0;\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        scanf(\"%lld\",&a[i]);\n\t        if(a[i]>g)\n\t        {\n\t            g=a[i];\n\t        }\n\t    }\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        if(a[i]==g)\n\t        {\n\t            if(i>0&&a[i-1]<g)\n\t            {\n\t                ans=i;\n\t                break;\n\t            }\n\t            if(i<n&&a[i+1]<g)\n\t            {\n\t                ans=i;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    if(ans!=-1)\n\t    {\n\t    ans=ans+1;\n\t    }\n\t    printf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7117117117117117, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "2432a1cab9215ff779240515f984ee64", "bug_code_uid": "02a2118e2abeb1c11609dfc240569485", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "173081d487f971d58ffa71960ac75d27", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n\tint n,a[1000000];\n\tscanf(\" %d\",&n);\n\tint i;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\" %d\",&a[i]);\n\t}\n\t\n\tint max=0,count=1;\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tif(a[i]>=a[i-1]) count++;\n\t\telse{\n\t\t\tcount=1;\n\t\t}\n\t\tif(count>max) max=count;\n\t}\n\tprintf(\"%d\\n\",max );\n}", "fixed": "#include <stdio.h>\n\nint main(void){\n\tint n;\n\tint a[1000000];\n\tint count[1000000];\n\tscanf(\" %d\",&n);\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\" %d\",&a[i]);\n\t}\n\tcount[0]=1;\n\tfor (int i = 1; i < n; ++i)\n\t{\n\t\tif(a[i]>=a[i-1]) count[i]=count[i-1]+1;\n\t\telse count[i]=1;\n\t}\n\tint max=0;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tif(max<count[i]) max=count[i];\n\t}\n\tprintf(\"%d\\n\",max );\n}"}
{"similarity_score": 0.9523809523809523, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e0cff15a610331ff7a4d4947f795d0f8", "bug_code_uid": "28beb771ff5a26dc2077a808f59ed61f", "src_uid": "fa256021dc519f526ef3878cce32ff31", "apr_id": "048eb7a890748f0e6441c7d36d42b83b", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint n,i,a[100000],c;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\t\tprintf(\"%d\\t\",a[i]+a[i+1]);\n\t}\n\tprintf(\"%d\",a[n]);\n\t\n}\n\t\t\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,a[100000],c;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=1;i<n;i++)\n\t{\n\t\t\tprintf(\"%d\\t\",a[i]+a[i+1]);\n\t}\n\tprintf(\"%d\",a[n]);\n\treturn 0;\n}\n\t\t"}
{"similarity_score": 0.7356608478802993, "equal_cnt": 24, "replace_cnt": 22, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "00421a066f17aecc1d5c56a26f58305e", "bug_code_uid": "f09ec7b9c5cfefad78d751ba177325e3", "src_uid": "44542e73195573debb4ab113bab5ee23", "apr_id": "ae2e7b057271ba1425f4e8f86139935c", "difficulty": 1900, "tags": ["two pointers", "geometry", "ternary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\n#define MAXN 100003\n\nint n, m, a, b, A[MAXN], B[MAXN], l[MAXN];\n\ndouble EDist(int ey, int wy) {\n    return sqrt(a * a + ey * ey) + sqrt((a - b) * (a - b) + (wy - ey) * (wy - ey));\n}\n\nint main(int argc, char const *argv[]) {\n    int i, p, q, j;\n    double min = 1000000000000;\n    scanf(\"%d%d%d%d\", &n, &m, &a, &b);\n    for(i = 0; i < n; i++)\n        scanf(\"%d\", &A[i]);\n    for(i = 0; i < m; i++)\n        scanf(\"%d\", &B[i]);\n    for(i = 0; i < m; i++)\n        scanf(\"%d\", &l[i]);\n    \n    j = 0;\n    for(i = 0; i < m; i++) {\n        while(j + 1 < n && EDist(A[j], B[i]) > EDist(A[j + 1], B[i]))\n            j++;\n        double dist = EDist(A[j], B[i]) + l[i];\n        if(dist < min) {\n            min = dist;\n            p = j;\n            q = i;\n        }\n    }\n    printf(\"%d\\n\", p + 1, q + 1);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\n#define MAXN 100003\n\nint n, m;\ndouble a, b, A[MAXN], B[MAXN], l[MAXN];\n\ndouble EDist(double ey, double wy) {\n\treturn sqrt(a * a + ey * ey) + sqrt((a - b) * (a - b) + (wy - ey) * (wy - ey));\n}\n\nint main(int argc, char const *argv[]) {\n\tint i, p, q, j;\n\tdouble min = 1000000000000;\n\tscanf(\"%d%d%lf%lf\", &n, &m, &a, &b);\n\tfor(i = 0; i < n; i++)\n\t\tscanf(\"%lf\", &A[i]);\n\tfor(i = 0; i < m; i++)\n\t\tscanf(\"%lf\", &B[i]);\n\tfor(i = 0; i < m; i++)\n\t\tscanf(\"%lf\", &l[i]);\n\t\n\tj = 0;\n\tfor(i = 0; i < m; i++) {\n\t\twhile(j + 1 < n && EDist(A[j], B[i]) > EDist(A[j + 1], B[i]))\n\t\t\tj++;\n\t\tdouble dist = EDist(A[j], B[i]) + l[i];\n\t\tif(dist < min) {\n\t\t\tmin = dist;\n\t\t\tp = j;\n\t\t\tq = i;\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\", p + 1, q + 1);\n\treturn 0;\n}"}
{"similarity_score": 0.8438485804416404, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "95a318ade58c4836783837895fb24b56", "bug_code_uid": "5b883328618f1d21ffcc676155d13e24", "src_uid": "f00eb0452f5933103f1f77ef06473c6a", "apr_id": "39da615a00ef1f101e919804e1a693d0", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 109\n\nint min(int a, int b)\n{\n\tif (a<b)\n\t\treturn a;\n\treturn b;\n}\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\n\n\nint main() {\n\tint t,n,k,i, ans;\n\tscanf(\"%d\", &t);\n\twhile (t--){\n\t\tscanf(\"%d%d\", &n, &k);\n\t\tint smallDiv = 0;\n\t\tint bigDiv = 1;\n\t\tans = n;\n\t\twhile ( (++smallDiv)*smallDiv <= n ){\n\n\t\t\tbigDiv = n/smallDiv;\n\n\t\t\tif (bigDiv <=k && n == bigDiv * smallDiv){\n\t\t\t\tans = min(smallDiv, ans);\n\t\t\t\tans = min(bigDiv, ans);\n\t\t\t\t\n\t\t\t}\n\n\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\n\t}\n\n\n\n\n\n\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 109\n\nint min(int a, int b)\n{\n\tif (a<b)\n\t\treturn a;\n\treturn b;\n}\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\n\n\nint main() {\n\tint t,n,k,i, ans;\n\tscanf(\"%d\", &t);\n\twhile (t--){\n\t\tscanf(\"%d%d\", &n, &k);\n\t\tint smallDiv = 0;\n\t\tint bigDiv = 1;\n\t\tans = n;\n\t\twhile ( (++smallDiv)*smallDiv <= n ){\n\t\t\tif (n%smallDiv == 0){\n\t\t\t\tbigDiv = n/smallDiv;\n\t\t\t\tif (bigDiv <=k)\n\t\t\t\t\tans = min(smallDiv, ans);\n\t\t\t\tif (smallDiv <= k)\n\t\t\t\t\tans = min(bigDiv, ans);\n\t\t\t}\n\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\n\t}\n\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9927007299270073, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "50b4397e05ddec21442a03b657e3dc5a", "bug_code_uid": "df097653f19c629b820079943c77b2cf", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "740621153afd822c6de3f235cf763382", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,j,c=0;\n\tscanf(\"%d\",&n);\n\tchar s[10001][6];\n\t\n\t for (i=0;i<n;i++)\n\t { \n\t scanf(\"%s\",s[i]);\n\t \n\t }\n\t for(i=0;i<n;i++)\n\t { \n\t if(s[i][0]=='O'&&s[i][1]){\n\ts[i][0]='+';\n\t\ts[i][1]='+';\n\tc++;break;\n\t  }\n\t   if (s[i][3]=='O'&&s[i][4]=='O')\n\t   { \n\t   s[i][3]='+';\n\t   \ts[i][4]='+';c++;break;\n\t   \n\t   }\n\t  \n\t  \t\n\t  \t  \n\t }\n\t  if (c)\n\t  { \n\t  printf(\"YES\\n\");\n\t  for(i=0;i<n;i++)\n\t  printf(\"%s\\n\",s[i]);  \n\t  }\n\t  else\n\t  printf(\"NO\\n\"); \n\t    }", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,j,c=0;\n\tscanf(\"%d\",&n);\n\tchar s[10001][6];\n\t\n\t for (i=0;i<n;i++)\n\t { \n\t scanf(\"%s\",s[i]);\n\t \n\t }\n\t for(i=0;i<n;i++)\n\t { \n\t if(s[i][0]=='O'&&s[i][1]=='O'){\n\ts[i][0]='+';\n\t\ts[i][1]='+';\n\tc++;break;\n\t  }\n\t   if (s[i][3]=='O'&&s[i][4]=='O')\n\t   { \n\t   s[i][3]='+';\n\t   \ts[i][4]='+';c++;break;\n\t   \n\t   }\n\t  \n\t  \t\n\t  \t  \n\t }\n\t  if (c>0)\n\t  { \n\t  printf(\"YES\\n\");\n\t  for(i=0;i<n;i++)\n\t  printf(\"%s\\n\",s[i]);  \n\t  }\n\t  else\n\t  printf(\"NO\\n\"); \n\t    }"}
{"similarity_score": 0.9637919684002634, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "30a4029cab8fd120d5da2923e855829f", "bug_code_uid": "882a07e659be1de4846d71c9acfa4273", "src_uid": "113ae625e67c8ea5ab07be44c3b58a8f", "apr_id": "3420d4bf743db71c1b4048d32877c782", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar a[1000001] , b[1000001] ;\n\nint i , j , k , cz , p , q ;\n\nint main()\n{\n\n    scanf(\"%s\" , &a ) ;\n      scanf(\"%s\" , &b ) ;\n\n\n\n      p = strlen(a) ;\n\n      q = strlen(b) ;\n\n      if ( p != q ) printf(\"NO\" ) ;\n\n      else\n      {\n          for( i = 0 ; i < p ; i++)\n          {\n              if( a[i] == '1' )\n              {\n                  k = 1 ;\n                  break ;\n              }\n          }\n\n          for( i = 0 ; i < q ; i++)\n          {\n              if( b[i] == '1' )\n              {\n                  j = 1 ;\n                  break ;\n              }\n          }\n\n          if ( k == 1 && j == 1) printf(\"YES\") ;\n\n          else printf(\"NO\") ;\n      }\n\n\n  return 0 ;\n  }\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar a[1000001] , b[1000001] ;\n\nint i , j , k , cz , p , q ;\n\nint main()\n{\n\n    scanf(\"%s\" , &a ) ;\n      scanf(\"%s\" , &b ) ;\n\n\n\n      p = strlen(a) ;\n\n      q = strlen(b) ;\n\n      if ( p != q ) printf(\"NO\" ) ;\n\n      else\n      {\n          for( i = 0 ; i < p ; i++)\n          {\n              if( a[i] == '1' )\n              {\n                  k = 1 ;\n                  break ;\n              }\n          }\n\n          for( i = 0 ; i < q ; i++)\n          {\n              if( b[i] == '1' )\n              {\n                  j = 1 ;\n                  break ;\n              }\n          }\n\n          if ( k == 1 && j == 1) printf(\"YES\") ;\n\n          else if( k == 0 && j == 0 ) printf(\"YES\") ;\n\n          else printf(\"NO\") ;\n      }\n\n\n  return 0 ;\n  }\n"}
{"similarity_score": 0.9086357947434293, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e80de8d618aff222c1769d803542d8b8", "bug_code_uid": "dd7edb7f9732d8d19aa0b9ba77416e7c", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "8dc2222762eacb16fbeab9673c4f34d5", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tchar myString[256];\r\n\tint found = 0;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tscanf(\"%s\",myString);\r\n\t\tif((myString[0]=='y')||(myString[0]=='Y')){\r\n\t\t\tif((myString[0]=='e')||(myString[0]=='E')){\r\n\t\t\t\tif((myString[0]=='s')||(myString[0]=='S')){\r\n\t\t\t\t\tfound = 1;\r\n\t\t}\r\n\t\tif(found == 1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tchar myString[256];\r\n\tint found = 0;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tscanf(\"%s\",myString);\r\n\t\tif((myString[0]=='y')||(myString[0]=='Y')){\r\n\t\t\tif((myString[1]=='e')||(myString[1]=='E')){\r\n\t\t\t\tif((myString[2]=='s')||(myString[2]=='S')){\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(found == 1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\tfound = 0;\r\n\t}\r\n}"}
{"similarity_score": 0.8157248157248157, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6b5496ea08a06f03da8f52971f337c62", "bug_code_uid": "f419dda23246c4665d09e8c99d8b500e", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "35f21b5d0cb81a8631c2c3dfde51b61f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long int count=1;\nint main()\n{\n    long long int n, c, i, a, b;\n    scanf(\"%I64d %I64d\", &n, &c);\n\n    long long int ara[n];\n    for(i=0; i<n; i++)\n        scanf(\"%I64d\", &ara[i]);\n    if(n==1)\n    {\n        printf(\"%I64d\\n\", count);\n        return 0;\n    }\n    else\n    {\n        for(a=0, b=1; a<n; a++)\n        {\n            if(ara[b]-ara[a]<=c)\n            {\n                count++;\n                if(b<n-1)\n                    b++;\n            }\n            else\n            {\n                count=0;\n                if(b<n-1)\n                    b++;\n            }\n        }\n        printf(\"%I64d\\n\", count);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nlong long int count=1;\nint main()\n{\n    long long int n, c, i, a, b;\n    scanf(\"%I64d %I64d\", &n, &c);\n\n    long long int ara[n];\n    for(i=0; i<n; i++)\n        scanf(\"%I64d\", &ara[i]);\n    if(n==1)\n    {\n        printf(\"%I64d\\n\", count);\n        return 0;\n    }\n    else\n    {\n        for(b=1; b<n; b++)\n        {\n            if(ara[b]-ara[b-1]<=c)\n            {\n                count++;\n            }\n            else\n            {\n                count=1;\n            }\n        }\n        printf(\"%I64d\\n\", count);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.91324200913242, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b3f14d79ae5e86c1c6e079c9ec6d0813", "bug_code_uid": "c8deaa35a0fcfe88316eaa6b21527b4c", "src_uid": "07eecfe948aa78623586b5e30e84e415", "apr_id": "f4c1189dbc46973e44baeb572b99526d", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar str[1000001];\n\nint main()\n{\n\tint n, sum, bottom, res;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%s\", str);\n\t\tbottom = 0, sum = 0, res = 0;\n\t\tfor (int j = 0; j < strlen(str); j++) {\n\t\t\tif (str[j] == '+')\n\t\t\t\tsum++;\n\t\t\telse\n\t\t\t\tsum--;\n\t\t\tif (sum < bottom) {\n\t\t\t\tbottom = sum;\n\t\t\t\tres += j + 1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", res + strlen(str));\n\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar str[1000001];\n\nint main()\n{\n\tint n, sum, bottom;\n\tlong long int res;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%s\", str);\n\t\tbottom = 0, sum = 0, res = 0;\n\t\tfor (int j = 0; j < strlen(str); j++) {\n\t\t\tif (str[j] == '+')\n\t\t\t\tsum++;\n\t\t\telse\n\t\t\t\tsum--;\n\t\t\tif (sum < bottom) {\n\t\t\t\tbottom = sum;\n\t\t\t\tres += (long long int)j + 1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\", res + (long long int)strlen(str));\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9548872180451128, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1b0bfdda8a6397c4abe164097ed5a18d", "bug_code_uid": "1648805f8bb6d824949d83b33c8ece0f", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "6110b1d3e1b74d7d3c28e443368a98a4", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n   int n,min,i,index,flag=0,num;\n   scanf(\"%d\",&n);\n   scanf(\"%d\",&min);\n   index=1;\n   for(i=2;i<=n;i++)\n   {\n     scanf(\"%d\",&num);\n      if(min==num){\n          flag++;\n      }\n     else if(num<min)\n     {\n       min=num;\n       index=i;\n       flag=0;\n       \n     }\n     if(flag==0)\n        printf(\"%d\",index);\n     else\n       printf(\"Still Rozdil\");\n\n\n     \n   }\n   \n\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n   int n,min,i,index,flag=0,num;\n   scanf(\"%d\",&n);\n   scanf(\"%d\",&min);\n   index=1;\n   for(i=2;i<=n;i++)\n   {\n     scanf(\"%d\",&num);\n      if(min==num){\n          flag++;\n      }\n     else if(num<min)\n     {\n       min=num;\n       index=i;\n       flag=0;\n\n     }\n\n\n   }\nif(flag==0)\n        printf(\"%d\",index);\n     else\n       printf(\"Still Rozdil\");\n\n\n\n}\n"}
{"similarity_score": 0.9047619047619048, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c5fd75ad387532fbd3a5137d67975c43", "bug_code_uid": "e3ce1f1d9fe8a2d5cf65f9c8819607c4", "src_uid": "cdafe800094113515e1de1acb60c4bb5", "apr_id": "014978d22d3d1f8aafd151d2c6121350", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,l1,r1,l2,r2,a,b;\n    scan(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d%d%d\",&l1,&r1,&l2,&r2);\n        printf(\"%d %d\\n\",l1,r2);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,l1,r1,l2,r2,a,b;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d%d%d\",&l1,&r1,&l2,&r2);\n        if(l1==l2)\n            l2++;\n        printf(\"%d %d\\n\",l1,l2);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5515320334261838, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "d05c81ae20e36d1b6f2d977bfd376e64", "bug_code_uid": "f92671e5f712bf7d465ee6b0283e904c", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "4b0c98b96f8c29168ea7855203da105a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main\r\n{\r\n    int i,j,k,a[4],t,count=0;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        for(k=0;k<4;k++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(j=1;j<4;j++)\r\n        {\r\n        if(a[0]<a[i])\r\n            count++;\r\n        }\r\n        printf(\"%d\",count);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int i,j,k,a[4],t;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        for(j=0;j<4;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        int count=0;\r\n        for(k=1;k<4;k++)\r\n        {\r\n            if(a[0]<a[k])\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n}"}
{"similarity_score": 0.617248752672844, "equal_cnt": 20, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "ecfd97aaa8e53343b7063a053d0ff94d", "bug_code_uid": "4d1252ab3333b69cf099582a591412dc", "src_uid": "4fc1ca3517168842cc85d74ba0066598", "apr_id": "0b99f95bc300e2138bd40a05d1104cdb", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define BUF_TAM 102\n\nint main(int argc, char **argv) {\n  int i, n, zeros0, zeros, sim;\n\n  stdin = fopen(\"input.txt\", \"r\");\n  stdou = fopen(\"output.txt\", \"r\");\n\n  scanf(\"%d \", &n);\n\n  sim = 1;\n  i = 0;\n  while (i++ < n && getchar() != '0');\n  zeros0 = 1;\n  while (i++ < n && getchar() == '0') zeros0++;\n  zeros = zeros0;\n  while (i < n) {\n    if (zeros0 != zeros) {\n      sim = 0;\n      break;\n    }\n    while (i++ < n)\n      if (getchar() == '0') {\n\tzeros = 0;\n\tbreak;\n      }\n    while (i++ < n) {\n      zeros++;\n      if (getchar() != '0') break;\n    }\n  }\n\n  if (sim) puts(\"YES\");\n  else puts(\"NO\");\n\n  return 0;\n}\n    \n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define BUF_TAM 102\n\nint main(int argc, char **argv) {\n  int i, j, n, intervalo, sim;\n  \n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d \", &n);\n\n  sim = 1;\n  i = 0;\n  while (i++ < n && getchar() == '0');\n  if (i++ < n && getchar() != '0') intervalo = 0;\n  else {\n    intervalo = 1;\n    while (i++ < n && getchar() == '0') intervalo++;\n  }\n  while (i < n) {\n    for (j = 0; i < n && j < intervalo; i++, j++)\n      if (getchar() != '0') {\n\tsim = 0;\n\tbreak;\n      }\n    if (i++ < n && getchar() != '1') {\n      while (i++ < n && getchar() == '0');\n      if (i >= n) break;\n      sim = 0;\n    }\t\n  }\n\n  if (sim) puts(\"YES\");\n  else puts(\"NO\");\n\n  return 0;\n}\n    \n"}
{"similarity_score": 0.1509433962264151, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5856160a6d56d2d0a5c8cbc7812a1d26", "bug_code_uid": "7be28480b3e6570fe9324b1ca8e47a3a", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "8f6b32c90d42d950046ba14c82f64c3c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint main()\n{\nchar ch[10000];\nint t[4];\nint s,c,i;\nfor (i=0;i<=3;i++)\nscanf(\"%d\",&t[i]);\nscanf(\"%s\",&ch);\n\ns=0;\nfor(i=0;i<=strlen(ch)-1;i++)\n{\nc=ch[i]-'0';\ns=s+t[c-1];\n\n}\nprintf(\"%d\",s);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint a,b,c,d,i,sum=0;\nchar s[100001];\nscanf(\"%d %d %d %d\",&a,&b,&c,&d);\nscanf(\"%s\",&s);\nint l=strlen(s);\nfor(i=0;i<l;i++)\n{\nif(s[i]=='1')\nsum=sum+a;\nelse if(s[i]=='2')\nsum=sum+b;\nelse if(s[i]=='3')\nsum=sum+c;\nelse\nsum=sum+d;\n}\nprintf(\"%d\",sum);\n}"}
{"similarity_score": 0.7192575406032483, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "9d078c9297d9675267d017accaa5afb6", "bug_code_uid": "7ab7042ea7a35223376a5f9905f80c22", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "260260f983a1dae31699de38d952b68a", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,n,a;\r\n    scanf(\"%lld\",&t);\r\n    a=n/2;\r\n    while(t--){\r\n        scanf(\"%lld\",&n);\r\n        if(n%2!=0||n%3==0||n%5==0){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else if(n%2==0){\r\n            if(a%2!=0){\r\n            printf(\"YES\\n\");\r\n        }\r\n           else{\r\n            printf(\"NO\\n\");\r\n        }\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,a;\r\n    scanf(\"%lld\",&t);\r\n    while(t--){\r\n        scanf(\"%lld\",&a);\r\n        if(a%2!=0){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else if(a%2==0){\r\n            while(a%2==0){\r\n                a=a/2;}\r\n                if(a>1){\r\n                    printf(\"YES\\n\");\r\n                }\r\n                else{\r\n                    printf(\"NO\\n\");\r\n                }\r\n            \r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.997920997920998, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ece12cae7bddba4781c855e2aa68b870", "bug_code_uid": "1010e357fb0e14f2d6a8a1dbba29e309", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "a0aff3f6fb9427c8a4542d488d611701", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nlong long a[100010];\n\nint main()\n{\n    long n,i,j;\n    long long x;\n    long ans,ans1=1;\n    ans=1;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n    for(i=1;i<n;i++)\n    {\n        if(a[i-1]>a[i])\n            {\n              ans=1;\n             }\n        else\n            {\n                ans++;\n            }\n             if(ans1<ans)\n                ans1=ans;\n    printf(\"%ld\\n\",ans);\n    }\n    printf(\"%ld\\n\",ans1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nlong long a[100010];\n\nint main()\n{\n    long n,i,j;\n    long long x;\n    long ans,ans1=1;\n    ans=1;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n    for(i=1;i<n;i++)\n    {\n        if(a[i-1]>a[i])\n            {\n              ans=1;\n             }\n        else\n            {\n                ans++;\n            }\n             if(ans1<ans)\n                ans1=ans;\n  //  printf(\"%ld\\n\",ans);\n    }\n    printf(\"%ld\\n\",ans1);\n    return 0;\n}\n"}
{"similarity_score": 0.9731051344743277, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1e22b4bf5de1fae7abfbfaf6ccd4ae19", "bug_code_uid": "27d0e3de4e5426b1c01907a38774cfdd", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "73d3dfd08af9190bd41dab8b42717998", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main ()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        if(i%2==0)\n        {\n            printf(\"I hate \");\n        }\n        if(i%2!=0)\n        {\n            printf(\"I love \");\n        }\n        if(i<n-1)\n        {\n            printf(\"that\");\n\n        }\n        else if (i<=n)\n        {\n            printf(\"it\");\n        }\n\n\n    }\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\n\nint main ()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        if(i%2==0)\n        {\n            printf(\"I hate \");\n        }\n        if(i%2!=0)\n        {\n            printf(\"I love \");\n        }\n        if(i<n-1)\n        {\n            printf(\"that\");\n\n        }\n        else if (i<=n)\n        {\n            printf(\"it\");\n        }\n        printf(\" \");\n\n\n\n    }\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8136449778900822, "equal_cnt": 28, "replace_cnt": 6, "delete_cnt": 9, "insert_cnt": 12, "fix_ops_cnt": 27, "lang": "GNU C11", "fix_code_uid": "05c7b741fdaeb2d57771c86d5f5454b9", "bug_code_uid": "0f397783a18c1dd4dcef38fc377ff89e", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "e7bfe3ba9e152bbb175998fc3bdcba9e", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n     \n    long long int n,t,  j, i = 0,a = 1;\n    scanf(\"%lld\", &t);\n    while (t > 0)\n    {i=0; a=1;\n        scanf(\"%lld\", &n);\n        if (n % 2 == 0 )\n        {\n            n = n / 2;\n            while (n > 0)\n            {\n               printf(\"1\");\n               n--;\n            }\n        }\n        else if(n>3 && n%2==1 )\n        {\n            printf(\"7\");\n            n = (n - 3) / 2;\n            \n            while (n > 0)\n            {\n               printf(\"1\");\n\n                n--;\n            }\n            i = i + 7 * a;\n           \n        }\n        else if(n=3)\n        {\n           i=7;\n        }\n        \n        printf(\"\\n\");\n        \n        t--;\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n\n    long long int n, t, j, i = 0, a = 1, u;\n\n    scanf(\"%lld\", &t);\n    int b[t];\n    i = 0;\n    a = 1;\n    for (j = 0; j < t; j++)\n    {\n        scanf(\"%lld\", &n);\n        b[j] = n;\n    }\n    for (u = 0; u < t; u++)\n    {\n        n = b[u];\n        if (n % 2 == 0)\n        {\n            n = n / 2;\n            while (n > 0)\n            {\n                printf(\"1\");\n                n--;\n            }\n        }\n        else if (n > 3 && n % 2 == 1)\n        {\n            printf(\"7\");\n            n = (n - 3) / 2;\n\n            while (n > 0)\n            {\n                printf(\"1\");\n\n                n--;\n            }\n            i = i + 7 * a;\n        }\n        else if (n = 3)\n        {\n            i = 7;\n            printf(\"7\");\n        }\n\n        printf(\"\\n\");\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9954441913439636, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a959053930d4d5b511f22da8d377de3b", "bug_code_uid": "f3242b4d62de474b3a760e0abf2a7041", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "ab0e510598bce43022223849cccf5c0a", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint isvovel(char ab)\n{ \n\tif(ab=='a' || ab=='e' || ab=='i' || ab=='o' || ab=='u')\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nint main()\n{\n\tchar s[1000],t[1000];\n\tscanf(\"%s\",s);\n\tscanf(\"%s\",t);\n\tif(strlen(s)==strlen(t))\n\t{\n\t\tfor(int i=0;i<strlen(s);i++)\n\t\t{\n\t\t\tif(isvovel(s[i])!=isvovel(t[i]))\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"YES\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\");\n\t}\n\treturn 0;\n}\n\t\t\t    \n\t\t\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint isvovel(char ab)\n{ \n\tif(ab=='a' || ab=='e' || ab=='i' || ab=='o' || ab=='u')\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nint main()\n{\n\tchar s[1001],t[1001];\n\tscanf(\"%s\",s);\n\tscanf(\"%s\",t);\n\tif(strlen(s)==strlen(t))\n\t{\n\t\tfor(int i=0;i<strlen(s);i++)\n\t\t{\n\t\t\tif(isvovel(s[i])!=isvovel(t[i]))\n\t\t\t{\n\t\t\t\tprintf(\"NO\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"YES\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\");\n\t}\n\treturn 0;\n}\n\t\t\t    \n\t\t\n"}
{"similarity_score": 0.9976019184652278, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "80e049a258f48f37d16b527fde19efd8", "bug_code_uid": "15362d8d7c870cfff4a1e4a64a2f85f3", "src_uid": "7d1e8769a6b1d5c6680ab530d19e7fa4", "apr_id": "73fd638e0120111e8fa7f8a9649a05e2", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a, b, c, d, e, f;\n\tint ZA[200001];\n\n\tscanf(\"%d%d%d\", &a, &b, &c);\n\tfor (d = 1; d <= a; ++d)\n\t\tscanf(\"%d\", ZA + d);\n\te = 0;\n\tfor (d = 1; d <= c; ++d) {\n\t\tif (ZA[d] > c)\n\t\t\te += 1;\n\t}\n\tf = 0;\n\tif (e == 0)\n\t\tf += 1;\n\tfor (d = 2; d <= a - c + 1; ++d) {\n\t\tif (ZA[d - 1] > b)\n\t\t\te -= 1;\n\t\tif (ZA[d + c - 1] > b)\n\t\t\te += 1;\n\t\tif (e == 0)\n\t\t\tf += 1;\n\t}\n\tprintf(\"%d\\n\", f);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint a, b, c, d, e, f;\n\tint ZA[200001];\n\n\tscanf(\"%d%d%d\", &a, &b, &c);\n\tfor (d = 1; d <= a; ++d)\n\t\tscanf(\"%d\", ZA + d);\n\te = 0;\n\tfor (d = 1; d <= c; ++d) {\n\t\tif (ZA[d] > b)\n\t\t\te += 1;\n\t}\n\tf = 0;\n\tif (e == 0)\n\t\tf += 1;\n\tfor (d = 2; d <= a - c + 1; ++d) {\n\t\tif (ZA[d - 1] > b)\n\t\t\te -= 1;\n\t\tif (ZA[d + c - 1] > b)\n\t\t\te += 1;\n\t\tif (e == 0)\n\t\t\tf += 1;\n\t}\n\tprintf(\"%d\\n\", f);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9925816023738873, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "090f4be4b4ad728a546e647dc9b82194", "bug_code_uid": "d901d7e8efb8bb40815f442aadf985a2", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "38664a70cd343c3ef94f5e3552881d58", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\n    int n;\n    int inter[51][2];\n    int road[51][2];\n    int h,v;\n    int days=0;\n\n    int i,j;\n\n    scanf(\"%d\",&n);\n\n    for(i=1; i<=n; i++){\n        road[i][0] = 0;\n        road[i][1] = 0;\n    }\n\n    for(i=1; i<=n*n; i++){\n        scanf(\"%d\",&inter[i][0]);\n        scanf(\"%d\",&inter[i][1]);\n    }\n    days = 1;\n    for(i=1; i<=n*n; i++){\n        h = inter[i][0];\n        v = inter[i][1];\n\n        printf(\"%d %d\",h,v);\n\n        if( (road[h][0] == 0) && (road[v][1] == 0) ){\n            road[h][0] = 1;\n            road[v][1] = 1;\n            printf(\" - %d \",days);\n        }\n        printf(\"\\n\");\n        days++;\n    }\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\n    int n;\n    int inter[51*51][2];\n    int road[51][2];\n    int h,v;\n    int days=0;\n\n    int i,j;\n\n    scanf(\"%d\",&n);\n\n    for(i=1; i<=n; i++){\n        road[i][0] = 0;\n        road[i][1] = 0;\n    }\n\n    for(i=1; i<=n*n; i++){\n        scanf(\"%d\",&inter[i][0]);\n        scanf(\"%d\",&inter[i][1]);\n    }\n    days = 1;\n    for(i=1; i<=n*n; i++){\n        h = inter[i][0];\n        v = inter[i][1];\n\n        //printf(\"%d %d\",h,v);\n\n        if( (road[h][0] == 0) && (road[v][1] == 0) ){\n            road[h][0] = 1;\n            road[v][1] = 1;\n            printf(\"%d \",days);\n        }\n        //printf(\"\\n\");\n        days++;\n    }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.997872340425532, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3596a0a522488b2aeccc64fa9988b5d6", "bug_code_uid": "e4e9e0d1917a1c220a2406e6b9768af3", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "a086a36db0d349085302745fad08a7fa", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define MAX 100001\r\nint main(){\r\n    int n,q,a[MAX],i, t,x,r=0;\r\n    scanf(\"%d %d\\n\", &n,&q);\r\n    for(i=0; i<n; i++){\r\n        scanf(\"%d\",&a[i]);\r\n        if(a[i]==1) r++;\r\n    }\r\n    for(i=0; i<q; i++){\r\n        scanf(\"%d %d\\n\", &t, &x);\r\n        if(t==1){\r\n            a[x-1] = 1 - a[x-1];\r\n            r= (a[x-1]==0)?r-1:r+1;\r\n        }else{\r\n            if(r<x) printf(\"0\\n\");\r\n            else printf(\"1\\n\");\r\n        }\r\n    }\r\n    return 1;\r\n}", "fixed": "#include <stdio.h>\r\n#define MAX 100001\r\nint main(){\r\n    int n,q,a[MAX],i, t,x,r=0;\r\n    scanf(\"%d %d\\n\", &n,&q);\r\n    for(i=0; i<n; i++){\r\n        scanf(\"%d\",&a[i]);\r\n        if(a[i]==1) r++;\r\n    }\r\n    for(i=0; i<q; i++){\r\n        scanf(\"%d %d\\n\", &t, &x);\r\n        if(t==1){\r\n            a[x-1] = 1 - a[x-1];\r\n            r= (a[x-1]==0)?r-1:r+1;\r\n        }else{\r\n            if(r<x) printf(\"0\\n\");\r\n            else printf(\"1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9966044142614601, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7b11b62ff69864cee2d9a11eb1b30af1", "bug_code_uid": "7ecabf9c3d800803fadd4d541a15685f", "src_uid": "d4fc7e683f389e0c7bbee8e115cef459", "apr_id": "dc42c1ba5313ea9b8e9deb77b77bcf45", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint i,j;\r\n\tscanf(\"%d\",&i);\r\n\tfor(j=0;j<i;j++)\r\n\t{\r\n\t\tint a,b,n=0,c=1,d=2;\r\n\t\tscanf(\"%d\",&a);\r\n\t\tscanf(\"%d\",&b);\r\n\t\tif(((1+b)*2)%4==0)\r\n\t\t{\r\n\t\t\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tfor(n=0;n<(a/2);n++){\r\n\t\t\tif(((c+b)*d)%4==0)\r\n\t\t\tprintf(\"%d %d\\n\",c,d);\r\n\t\t\telse\r\n\t\t\tprintf(\"%d %d\\n\",d,c);\r\n\t\t\tc+=2;\r\n\t\t\td+=2;}\r\n\t\t}\r\n\t\t\telse if(((2+b)*1)%4==0)\r\n\t\t\t\t\t{\r\n\t\t\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\r\n\t\t\tfor(n=0;n<(a/2);n++){\r\n\t\t\tif(((2+b)*1)%4==0)\r\n\t\t\tprintf(\"%d %d\\n\",d,c);\r\n\t\t\telse\r\n\t\t\tprintf(\"%d %d\\n\",c,d);\r\n\t\t\tc+=2;\r\n\t\t\td+=2;}\r\n\t\t}\r\n\t\telse printf(\"NO\\n\");\r\n\t\t\r\n\t}\r\n\treturn 0;\r\n } ", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint i,j;\r\n\tscanf(\"%d\",&i);\r\n\tfor(j=0;j<i;j++)\r\n\t{\r\n\t\tint a,b,n=0,c=1,d=2;\r\n\t\tscanf(\"%d\",&a);\r\n\t\tscanf(\"%d\",&b);\r\n\t\tif(((1+b)*2)%4==0)\r\n\t\t{\r\n\t\t\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tfor(n=0;n<(a/2);n++){\r\n\t\t\tif(((c+b)*d)%4==0)\r\n\t\t\tprintf(\"%d %d\\n\",c,d);\r\n\t\t\telse\r\n\t\t\tprintf(\"%d %d\\n\",d,c);\r\n\t\t\tc+=2;\r\n\t\t\td+=2;}\r\n\t\t}\r\n\t\t\telse if(((2+b)*1)%4==0)\r\n\t\t\t\t\t{\r\n\t\t\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\r\n\t\t\tfor(n=0;n<(a/2);n++){\r\n\t\t\tif(((d+b)*c)%4==0)\r\n\t\t\tprintf(\"%d %d\\n\",d,c);\r\n\t\t\telse\r\n\t\t\tprintf(\"%d %d\\n\",c,d);\r\n\t\t\tc+=2;\r\n\t\t\td+=2;}\r\n\t\t}\r\n\t\telse printf(\"NO\\n\");\r\n\t\t\r\n\t}\r\n\treturn 0;\r\n } "}
{"similarity_score": 0.5638599810785241, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "47993a3bfc76e82ffcf9e659fba8c494", "bug_code_uid": "8784f824de1673f98016392a9c9eeef5", "src_uid": "dfd60a02670749c67b0f96df1a0709b9", "apr_id": "4cc75bd64aa25e0dda9a8d4655fc32a0", "difficulty": 1300, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid main()\n{\n\tint n, k, i;\n\n\tint index[1000];\n\tint num;\n\tscanf(\"%d %d\",&n, &k);\n\tint mod = n%(2*k+1);\n\tint div = n/(2*k+1);\n\t\n\tif(mod == 0){\n\t\tnum = div;\n\t\tindex[0] = k+1;\n\t\tfor (i=1;i<num;i++){\n\t\t\tindex[i] = index[i-1] + 2*k + 1;\n\t\t}\n\t}\n\telse if(mod>=k+1){\n\t\tnum = div + 1;\n\t\tindex[0] = k+1;\n\t\tfor (i=1;i<num;i++){\n\t\t\tindex[i] = index[i-1] + 2*k + 1;\n\t\t}\n\t}\n\telse{\n\t\tnum = div + 1;\n\t\tindex[0] = 1;\n\t\tfor (i=1;i<num;i++){\n\t\t\tindex[i] = index[i-1] + 2*k + 1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",num);\n\tfor(i=0;i<num;i++){\n\t\tprintf(\"%d \",index[i]);\n\t}\n}\n", "fixed": "#include <stdio.h>\n\nvoid main()\n{\n\tint n, k, i;\n\n\tint index[400];\n\tint num;\n\tscanf(\"%d %d\",&n, &k);\n\t\n\tint mod = n%(2*k+1);\n\tint div = n/(2*k+1);\n\t\n\tif(mod == 0){\n\t\tnum = div;\n\t\tprintf(\"%d\\n\",num);\n\t\tfor (i=0;i<num;i++){\n\t\t\tprintf(\"%d \",k+1+i*(2*k+1));\n\t\t}\n\t}\n\telse if(mod>=k+1){\n\t\tnum = div + 1;\n\t\tprintf(\"%d\\n\",num);\n\t\tfor (i=0;i<num;i++){\n\t\t\tprintf(\"%d \",k+1+i*(2*k+1));\n\t\t}\n\t}\n\telse{\n\t\tnum = div + 1;\n\t\tprintf(\"%d\\n\",num);\n\t\tfor (i=0;i<num;i++){\n\t\t\tprintf(\"%d \",1+i*(2*k+1));\n\t\t}\n\t}\n\texit(0);\n}"}
{"similarity_score": 0.8240291262135923, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "20294f2cdbefd49257fda90af5fce20f", "bug_code_uid": "69fa19f1dd5fae31148242d6fa827ad0", "src_uid": "c6c07ef23cf2def9f99cbfb6076c9810", "apr_id": "b506d7403da4f80bc78fe8b5ad55d0eb", "difficulty": 1200, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\ntypedef long long ll;\r\n#define MAX_IDX (int)2e5\r\n\r\nll arr[MAX_IDX];\r\nll result;\r\nll A[MAX_IDX];\r\nint len;\r\n\r\nint cmp(ll* a, ll *b) {\r\n\treturn *a - *b;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tll k, x;\r\n\tscanf(\"%d %lld %lld\", &n, &k, &x);\r\n\r\n\tfor (int i = 0; i < n; ++i) {\r\n\t\tscanf(\"%lld\", arr + i);\r\n\t}\r\n\r\n\tqsort(arr, n, sizeof(ll), cmp);\r\n\r\n\t/*\r\n\tfor (int i = 0; i < n; ++i) {\r\n\t\tprintf(\"%lld \", arr[i]);\r\n\t}\r\n\tprintf(\"\\n\");\r\n\t*/\r\n\r\n\r\n\tresult = 1;\r\n\tfor (int i = 1; i < n; ++i) {\r\n\t\tif (arr[i - 1] + x >= arr[i]) {\r\n\t\t}\r\n\t\telse {\r\n\t\t\tll a = (arr[i] - arr[i - 1] - 1) / x;\r\n\t\t\tA[len++] = a;\r\n\t\t\t++result;\r\n\t\t}\r\n\t}\r\n\r\n\tqsort(A, len, sizeof(ll), cmp);\r\n\r\n\tfor (int i = 0; i < len; ++i) {\r\n\t\tif (k >= A[i]) {\r\n\t\t\t--result;\r\n\t\t\tk -= A[i];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprintf(\"%lld\", result);\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\ntypedef unsigned long long ll;\r\n#define MAX_IDX (int)2e5\r\n\r\nll arr[MAX_IDX];\r\nll result;\r\nll A[MAX_IDX];\r\nint len;\r\nint n;\r\nll k, x;\r\n\r\nint cmp(ll* a, ll *b) {\r\n\tif (*a > *b) {\r\n\t\treturn 1;\r\n\t}\r\n\telse if (*a == *b) {\r\n\t\treturn 0;\r\n\t}\r\n\telse {\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d %llu %llu\", &n, &k, &x);\r\n\r\n\tfor (int i = 0; i < n; ++i) {\r\n\t\tscanf(\"%llu\", arr + i);\r\n\t}\r\n\r\n\tqsort(arr, n, sizeof(ll), cmp);\r\n\r\n\tresult = 1;\r\n\tfor (int i = 1; i < n; ++i) {\r\n\t\tif (arr[i - 1] + x < arr[i]) {\r\n\t\t\tll a = (arr[i] - arr[i - 1] - 1) / x;\r\n\t\t\tA[len++] = a;\r\n\t\t\t++result;\r\n\t\t}\r\n\t}\r\n\r\n\tif (len > 0) {\r\n\t\tqsort(A, len, sizeof(ll), cmp);\r\n\t}\r\n\r\n\tfor (int i = 0; i < len; ++i) {\r\n\t\tif (k >= A[i]) {\r\n\t\t\t--result;\r\n\t\t\tk -= A[i];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprintf(\"%llu\", result);\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9090909090909091, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b4458a0111838024ea23b4a03231f2c5", "bug_code_uid": "d8fda0cc13aceaa95d96c9b5f7c797f9", "src_uid": "36ad784f23bd1e8e579052642a6e9244", "apr_id": "c7b0aa28d6008e3c54066db27f6d2270", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    long long n,t;\n    scanf(\"%I64d%I64d\", &n,&t);\n    double dn = (double)(n);\n    double ans = dn *exp(double(double(t))*double(log(1.000000011)));\n    printf(\"%lf\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    long long n,t;\n    scanf(\"%I64d%I64d\", &n,&t);\n    double dn = (double)(n);\n    double ans = dn *exp((double)((double)(t))*(double)(log(1.000000011)));\n    printf(\"%lf\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.5699570815450644, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "19ec77817d94ed95ca57a2c81a9aff17", "bug_code_uid": "20a0cdd1acb61a2e4165beecaaf2d07d", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "313836ebab718fb71bd631d537153d8b", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n        int n;\n        int l,r,t;\n        scanf(\"%d\",&t);\n        while(t-->0)\n        {\n            scanf(\"%d %d\",&l,&r);\n            int f=0;\n            int x=l;\n                for(int y=x+1;y<=r;y++)\n                {\n                    if(y%x==0 && x!=y)\n                    {\n                        f=1;\n                        printf(\"%d %d\",x,y);\n                        break;\n                    }\n                    if(x==r)\n                        {\n                            x++;\n                            y=x+1;\n                        }\n                }\n                if(f==1)\n                    break;\n            }\n        }\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n        int n;\n        int l,r,t;\n        scanf(\"%d\",&t);\n        while(t-->0)\n        {\n            scanf(\"%d %d\",&l,&r);\n            int x=l;\n            \n            for(int x=l;x<=r;x++)\n            {\n                int y=x+x;\n                if(y%x==0 && (y<=r)&&(y>=l))\n                {\n                    printf(\"%d %d\\n\",x,y);\n                    break;\n                }\n            }\n        }\n}"}
{"similarity_score": 0.9263803680981595, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "e41afee851b528aad362dc67bd58fde5", "bug_code_uid": "e5b797f73ce8a0f2261a0718937bae38", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "b16e813f21ab348a21cd07ece05d6e18", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    int n;\n    int k;\n    int i;\n    char blbost;\n    scanf(\"%i %i\", &n, &k);\n    char Pole[n];\n    while(1){scanf(\"%c\", &blbost); if(blbost=='\\n') break;}\n    for(i=0;i<n;i++){\n        scanf(\"%c\", &Pole[i]);\n    }\n    int pocet[26];\n    for(i=0;i<26;i++){\n        pocet[i]=0;\n    }\n    for(i=0;i<n;i++){\n        pocet[Pole[i]-65]++;\n    }\n    int c;\n    int j;\n    for(i=0;i<26;i++){\n        for(j=i+1;j<26;j++){\n            if(pocet[j]>pocet[i]){\n                c=pocet[i];\n                pocet[i]=pocet[j];\n                pocet[j]=c;\n            }\n        }\n    }\n    i=0;\n    int res=0;\n    while(k>0){\n        if(pocet[i]<=k){\n            res=res+pocet[i]*(pocet[i]);\n            k=k-pocet[i];\n        }\n        else {res=res+k*(k); k=0;}\n        i++;\n    }\n    /*for(i=0;i<26;i++){\n        printf(\"%i\\n\", pocet[i]);\n    }*/\n    printf (\"%i\\n\", res);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main(void){\n    int n;\n    long long int k;\n    int i;\n    char blbost;\n    scanf(\"%i %I64d\", &n, &k);\n    char Pole[n];\n    while(1){scanf(\"%c\", &blbost); if(blbost=='\\n') break;}\n    for(i=0;i<n;i++){\n        scanf(\"%c\", &Pole[i]);\n    }\n    long long int pocet[26];\n    for(i=0;i<26;i++){\n        pocet[i]=0;\n    }\n    for(i=0;i<n;i++){\n        pocet[Pole[i]-65]++;\n    }\n    int c;\n    int j;\n    for(i=0;i<26;i++){\n        for(j=i+1;j<26;j++){\n            if(pocet[j]>pocet[i]){\n                c=pocet[i];\n                pocet[i]=pocet[j];\n                pocet[j]=c;\n            }\n        }\n    }\n    i=0;\n    long long int res=0;\n    while(k>0){\n        if(pocet[i]<=k){\n            res=res+(pocet[i]*pocet[i]);\n            k=k-pocet[i];\n        }\n        else {res=res+(k*k); k=0;}\n        i++;\n    }\n    /*for(i=0;i<26;i++){\n        printf(\"%i\\n\", pocet[i]);\n    }\n    int soucet=0;\n    for(i=0;i<26;i++) soucet=soucet+pocet[i];\n    printf(\"%i %i\\n\\n\", n, soucet);*/\n    printf (\"%I64d\\n\", res);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9211495946941783, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e95db1030221cb5d6ee91d6f148d521c", "bug_code_uid": "97c0d67b4e6d54ab63c557a9f8318c45", "src_uid": "928f18ee5dbf44364c0d578f4317944c", "apr_id": "de3993258f7d76b00e794d8fd3be10fe", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\nbool search(int *a, int b, int n) {\n    int i = 0;\n    while (i < n) {\n        if (a[i] == b) return true;\n    }\n    return false;\n}\n\nint main() {\n    int n;\n    int k;\n    scanf(\"%d %d\", &n, &k);\n    int a[k];\n    int i = 0;\n    while(i < k)\n    {\n        scanf(\"%d\", &(a[i]));\n        i++;\n    }\n    int j = 0;\n    int h = 0;\n    int t = 1;\n    while (j < k)\n    {\n        h = 0;\n        printf(\"%d\", a[j]);\n        while (h < n - 1)\n        {\n            if (search(a, t, k) == false) printf(\"%d \", t);\n            t++;\n            h++;\n        }\n        j++;\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n\nbool search(int *a, int b, int n) {\n    int i = 0;\n    while (i < n) {\n        if (a[i] == b) return true;\n        i++;\n    }\n    return false;\n}\n\nint main() {\n    int n;\n    int k;\n    scanf(\"%d %d\", &n, &k);\n    int a[k];\n    int i = 0;\n    while(i < k)\n    {\n        scanf(\"%d\", &(a[i]));\n        i++;\n    }\n    int j = 0;\n    int h = 0;\n    int t = 1;\n    while (j < k)\n    {\n        h = 0;\n        printf(\"%d \", a[j]);\n        while (h < n - 1)\n        {\n            if (search(a, t, k) == false)\n            {\n                printf(\"%d \", t);\n                h++;\n            }\n            t++;\n        }\n        j++;\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.662621359223301, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "adfb64787f650b7eba370da11517fb1f", "bug_code_uid": "81f12ac197648cf4f9df5edf431839e6", "src_uid": "62a672fcaee8be282700176803c623a7", "apr_id": "63c7697e08d3d812fa3c23cb1525154e", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int i,j,count=0,n,x;\n    char s[2000],c[200],t[200];\n    scanf(\"%s %s\",s,c);\n    int ls=strlen(s);\n    int lc=strlen(c);\n    for(i=0;i<ls-lc+1;i++)\n    {\n        strncpy(t,s+i,lc);\n        t[lc]='\\0';\n        if(strcmp(t,c)==0)\n        {\n            count++;\n            i=i+lc;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nchar s[200000];\nint main()\n{\n    int i,j,count=0,n,x;\n    char c[200],t[200];\n    scanf(\"%s %s\",s,c);\n    int ls=strlen(s);\n    int lc=strlen(c);\n    for(i=0;i<ls-lc+1;i++)\n    {\n        strncpy(t,s+i,lc);\n       // printf(\"%d\\n\",i);\n        t[lc]='\\0';\n        if(strcmp(t,c)==0)\n        {\n            count++;\n            i=i+lc-1;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9698996655518395, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6d5b0a8c5f10d206eeb52a8c4f3bd193", "bug_code_uid": "3f888cf73eaa223f4a9c9d40239c4b73", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "d6a2db4f644c2921104b6141552ef8ba", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a=0,b=0,c=0;\n    while(n--)\n    {\n        int i,j,k;\n        scanf(\"%d%d%d\",&i,&j,&k);\n        a+=i;\n        b+=j;\n        c+=k;\n    }\n    if((a+b+c)==0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a=0,b=0,c=0;\n    while(n--)\n    {\n        int i,j,k;\n        scanf(\"%d%d%d\",&i,&j,&k);\n        a+=i;\n        b+=j;\n        c+=k;\n    }\n    if(a==0&&b==0&&c==0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.4966542750929368, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "1647e94318e38fb0a556a69b0c2d3bde", "bug_code_uid": "b8da22d4c3b9da6013e12691bbf0f928", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "0ab21a6deaf64073e144d2e19839eecd", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\nint m,pair=0;\nscanf(\"%d\",&m);\nint boy[m];\nfor(int i=0;i<m;i++)\n    scanf(\"%d\",&boy[i]);\nint n;\nscanf(\"%d\",&n);\nint girl[m];\nfor(int i=0;i<n;i++)\n    scanf(\"%d\",&girl[i]);\nfor(int i=0;i<m;i++)\n    for(int j=0;j<n;i++){\n        if( abs(boy[i] - girl[j]) <= 1)\n            pair++;\n    }\n    printf(\"%d\",pair);\n}", "fixed": "// #include<stdio.h>\n\n// int main(){\n//     int a[10] = {1,2,3,4,5,6,7,8,9,10};\n    \n//     char *c = (char*)a;\n//     c = c+8;\n//     printf(\"%c(%d)\",*c,*c);\n    \n//     return 0;\n// }\n#include<stdio.h>\n#include<stdlib.h>\nvoid bubblesort(int* arr,int n){\n    if (n==0)\n        return;\n    int temp;\n    for(int i=0;i<(n-1);i++){\n        if (arr[i] > arr[i+1]){\n            temp = arr[i];\n            arr[i] = arr[i+1];\n            arr[i+1] = temp;\n        }\n    }\n    bubblesort( arr, n-1);\n}\nint main(){\nint m,pair=0;\nscanf(\"%d\",&m);\nint boy[m];\nfor(int i=0;i<m;i++)\n    scanf(\"%d\",&boy[i]);\nint n;\nscanf(\"%d\",&n);\nint girl[n];\nfor(int i=0;i<n;i++)\n    scanf(\"%d\",&girl[i]);\nbubblesort(boy, m);\nbubblesort(girl, n);\nfor(int i=0;i<m;i++)\n    for(int j=0;j<n;j++){\n        if( abs(boy[i] - girl[j]) <= 1){\n            pair++;\n             //printf(\"%d\\n\",girl[j]);\n            girl[j] = 1000;\n            //printf(\"%d\\n\",girl[j]);\n            break;\n        }\n    }\n    printf(\"%d\",pair);\n}"}
{"similarity_score": 0.6666666666666666, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7a21cd75a1e48d5d9174ef8f7a940c27", "bug_code_uid": "3430d6efa86865de26b6ba3a510a6707", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "88dfb61e6830f097e87bbfe24c638abb", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int v,x[200],y[200],z[200],m[200],i,u=0;\n    scanf(\"%d\",&v);\n    for(i=0; i<v; i++){\n                       scanf(\"%d%d%d\",&x[i],&y[i],&z[i]);\n                       m[i]=x[i]+y[i]+z[i];\n                      }\n    for(i=0; i<v; i++){\n                       u=u+m[i];\n                      }\n    if(u==0){\n             printf(\"YES\");\n            }else{\n                  printf(\"NO\");\n                 }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int v,x[200],y[200],z[200],m[200],i,u=0,w=0,e=0;\n    scanf(\"%d\",&v);\n    for(i=0; i<v; i++){\n                       scanf(\"%d%d%d\",&x[i],&y[i],&z[i]);\n                      }\n    for(i=0; i<v; i++){\n                       u+=x[i];\n                      }\n    for(i=0; i<v; i++){\n                       w+=y[i];\n                      }\n    for(i=0; i<v; i++){\n                       e+=z[i];\n                      }\n    if(u==0 && w==0 && e==0){\n                             printf(\"YES\");\n                            }else{\n                                  printf(\"NO\");\n                                 }\n    return 0;\n\n}\n"}
{"similarity_score": 0.986159169550173, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "329b5ff9ca216e65b7caf15af28279d9", "bug_code_uid": "dd5ad5ce59075bf5dae870adf52cf587", "src_uid": "c408b1d198c7c88fc635936d960c962a", "apr_id": "d49132087901f06ec05837ef15ad4fc1", "difficulty": 1400, "tags": ["games", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long a[50],b[50],i,j,n,m,max=-910000000000000000,max1=-910000000000000000,x;\n    scanf(\"%I64d\",&n);\n    scanf(\"%I64d\",&m);\n    for(i=0;i<n;i++)\n        {\n            scanf(\"%I64d\",&a[i]);\n        }\n    for(j=0;j<m;j++)\n        {\n            scanf(\"%I64d\",&b[j]);\n        }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(max<a[i]*b[j])\n                max=a[i]*b[j];\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        if(max==a[i]*b[j])\n        {\n            x=i;\n            break;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i!=x)\n        {\n            for(j=0;j<m;j++)\n            {\n                if(max1<a[i]*b[j])\n                    max1=a[i]*b[j];\n            }\n        }\n    }\n    printf(\"%I64d\",max1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long a[50],b[50],i,j,n,m,max=-910000000000000000000000000000,max1=-910000000000000000000000000000,x;\n    scanf(\"%I64d\",&n);\n    scanf(\"%I64d\",&m);\n    for(i=0;i<n;i++)\n        {\n            scanf(\"%I64d\",&a[i]);\n        }\n    for(j=0;j<m;j++)\n        {\n            scanf(\"%I64d\",&b[j]);\n        }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(max<a[i]*b[j])\n                max=a[i]*b[j];\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        if(max==a[i]*b[j])\n        {\n            x=i;\n            break;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i!=x)\n        {\n            for(j=0;j<m;j++)\n            {\n                if(max1<a[i]*b[j])\n                    max1=a[i]*b[j];\n            }\n        }\n    }\n    printf(\"%I64d\",max1);\n    return 0;\n}\n"}
{"similarity_score": 0.8337874659400545, "equal_cnt": 35, "replace_cnt": 5, "delete_cnt": 8, "insert_cnt": 21, "fix_ops_cnt": 34, "lang": "GNU C", "fix_code_uid": "5aa468e6fc97485533a51f54f5f492f6", "bug_code_uid": "0e2581a758e0bcdb74649f1c32cfa284", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "acc7591fea8fa96d813294b452bf2295", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nlong int check(char *ps)\n{\n    while(*ps!='\\0')\n    {\n          if(*ps=='A'&&*(ps+1)=='B')\n          {\n              ps=ps+2;\n              while(*ps!='\\0')\n              {\n                  if(*ps=='B'&&*(ps+1)=='A')\n                    return 1;\n                  else\n                    ps++;\n              }\n          }\n          else\n          {\n              if(*ps=='B'&&*(ps+1)=='A')\n              {\n                  ps=ps+2;\n               while(*ps!='\\0')\n              {\n                  if(*ps=='A'&&*(ps+1)=='B')\n                    return 1;\n                  else\n                    ps++;\n              }\n          }\n    }\n    ps++;\n\n}\n    return 0;\n\n}\n\n\n\nint main ()\n{\n    char s[100001];\n   scanf(\"%s\",s);\n    if(check(s))\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint check(char *ps)\n{\n    int a=1,s=1;\n    char *pps;\n    while(*ps!='\\0')\n    {\n        if(*ps=='A'&&*(ps+1)=='B')\n        {\n            if(a)\n            {\n                pps=ps+2;\n                a=0;\n                while(*pps!='\\0')\n                {\n                    if(*pps=='B'&&*(pps+1)=='A')\n                        return 1;\n                    else\n                        pps++;\n                }\n            }\n        }\n        else if(*ps=='B'&&*(ps+1)=='A')\n        {\n              if(s)\n            {\n                pps=ps+2;\n                s=0;\n                while(*pps!='\\0')\n                {\n                    if(*pps=='A'&&*(pps+1)=='B')\n                        return 1;\n                    else\n                        pps++;\n                }\n            }\n        }\n        ps++;\n    }\n return 0;\n}\n\nint main ()\n{\n    char s[100001];\n   scanf(\"%s\",s);\n    if(check(s))\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9469964664310954, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "454ace3d12d931ec5ede4e9f8a7c3b21", "bug_code_uid": "8332c7f9f257597dc6cc02ff841adcbd", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "a66bca0967bd9105354f5dfc692b4e9b", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long int arr[100000][2];\n\nmain()\n{\n    long long int n, i, cnt = 2;\n\n    scanf(\"%I64d\", &n);\n\n    for(i = 0; i < n; i++)\n        scanf(\"%I64d %I64d\", &arr[i][0], &arr[i][1]);\n\n    i = 1;\n    while(i < n-1){\n        if(arr[i-1][0] < arr[i][0]-arr[i][1]){\n            i++;\n            cnt++;\n        }\n\n        else if(arr[i][0]+arr[i][1] < arr[i+1][0]){\n            arr[i][0] = arr[i][0]+arr[i][1];\n            cnt++;\n            i++;\n        }\n        else i++;\n    }\n\n    printf(\"%I64d\", cnt);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nlong long int arr[100000][2];\n\nmain()\n{\n    long long int n, i, cnt = 2;\n\n    scanf(\"%I64d\", &n);\n    if(n ==1){\n        printf(\"1\");\n        return 0;\n    }\n\n    for(i = 0; i < n; i++)\n        scanf(\"%I64d %I64d\", &arr[i][0], &arr[i][1]);\n\n    i = 1;\n    while(i < n-1){\n        if(arr[i-1][0] < arr[i][0]-arr[i][1]){\n            i++;\n            cnt++;\n        }\n\n        else if(arr[i][0]+arr[i][1] < arr[i+1][0]){\n            arr[i][0] = arr[i][0]+arr[i][1];\n            cnt++;\n            i++;\n        }\n        else i++;\n    }\n\n    printf(\"%I64d\", cnt);\n    return 0;\n}\n"}
{"similarity_score": 0.20615796519410978, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "505db05030c6a0da69b017e07832e2e6", "bug_code_uid": "1d4de469e48fc3c006519d5d66b73204", "src_uid": "513234db1bab98c2c2ed6c7030c1ac72", "apr_id": "1a73c5dffd27d0707d535044ec60a864", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int i = 0, n = 0, key = 1;\n    scanf(\"%d\",&n);\n    int numbers[n];\n    for(i = 0; i < n; i++)\n        scanf(\"%d\",&numbers[i]);\n    while(key)\n    {\n        key = 0;\n        for(i = 0; i < n-1; i++)\n            if(numbers[i] > numbers[i+1])\n            {\n                numbers[i] = numbers[i]+numbers[i+1];\n                numbers[i+1] = numbers[i] - numbers[i+1];\n                numbers[i] = numbers[i] - numbers[i+1];\n                key = 1;\n            }\n    }\n    for(i = 0; i < n/3; i++)\n    {\n        if(numbers[i+2*n/3] % numbers[i+n/3] != 0 || numbers[i+n/3] % numbers[i] != 0 ||\n           numbers[i+2*n/3] == numbers[i+n/3] || numbers[i+n/3] == numbers[i])\n        {\n            printf(\"-1\");\n            exit(0);\n        }\n    }\n    for(i = 0; i < n/3; i++)\n        printf(\"%d %d %d\\n\",numbers[i],numbers[i+n/3],numbers[i+2*n/3]);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int i = 0, n = 0, numbers[8]={0}, index = 0;\n    scanf(\"%d\",&n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",&index);\n        numbers[index]++;\n    }\n    if(numbers[7] > 0 || numbers[5] > 0 || numbers[1] != numbers[2] + numbers[3] || numbers[2] < numbers[4] ||\n        numbers[3] > numbers[6] || numbers[2]-numbers[4] != numbers[6]-numbers[3])\n        printf(\"-1\");\n    else\n        for(i = 0; i < n/3; i++)\n        {\n            printf(\"1 %d %d\\n\",numbers[2] > 0 ? 2 : 3, numbers[4] > 0 ? 4 : 6);\n            numbers[2]--,numbers[4]--;\n        }\n}"}
{"similarity_score": 0.9802431610942249, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "bbc840547cc8159459a07a865722b807", "bug_code_uid": "5b32cbee0581cf132111939daead2b41", "src_uid": "d629d09782a7af0acc359173ac4b4f0a", "apr_id": "71a722499ad9ccd1c5b8cbe3554fcfd6", "difficulty": 1200, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n,m,i=0;\n\tchar A[100002],B[100002];\n\tscanf (\"%d %d\",&n,&m);\n\tscanf (\"%s\",A);\n\tscanf (\"%s\",B);\n\tif (n==1&&A[0]=='*')\n\t{\n\t\tprintf (\"YES\");\n\t\treturn 0;\n\t}\n\tif (strchr(A,'*')==0) \n\t{\n\t\tif (strcmp(A,B)==0)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (i=0  ; A[i]!='*' ; i++)\n\t{\t\n\t\tif (A[i]!=B[i])\n\t\t{\n\t\t\tprintf (\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\ti=strlen(B)-i;\n\tfor (i  ; A[n-1]!='*' ; i--)\n\t{\t\n\t\tif (A[n-1]!=B[m-1])\n\t\t{\n\t\t\tprintf (\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\tn--;\n\t\tm--;\n\t}\n\tif(i<0)\n\t{\n\t\tprintf (\"NO\");\n\t\treturn 0;\n\t}\n\t else\n\t{\n\t \tprintf(\"YES\");\n\t \treturn 0;\n\t}\t\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n,m,i=0;\n\tchar A[200001],B[200001];\n\tscanf (\"%d %d\",&n,&m);\n\tscanf (\"%s\",A);\n\tscanf (\"%s\",B);\n\tif (n==1&&A[0]=='*')\n\t{\n\t\tprintf (\"YES\");\n\t\treturn 0;\n\t}\n\tif (strchr(A,'*')==0) \n\t{\n\t\tif (strcmp(A,B)==0)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (i=0  ; A[i]!='*' ; i++)\n\t{\t\n\t\tif (A[i]!=B[i])\n\t\t{\n\t\t\tprintf (\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\ti=strlen(B)-i;\n\tfor (i  ; A[n-1]!='*' ; i--)\n\t{\t\n\t\tif (A[n-1]!=B[m-1])\n\t\t{\n\t\t\tprintf (\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\tn--;\n\t\tm--;\n\t}\n\tif(i<0)\n\t{\n\t\tprintf (\"NO\");\n\t\treturn 0;\n\t}\n\t else\n\t{\n\t \tprintf(\"YES\");\n\t \treturn 0;\n\t}\t\n}\n"}
{"similarity_score": 0.5748633879781421, "equal_cnt": 18, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "8897a8292c44c48ebfa2d290086b1c0f", "bug_code_uid": "076d0b60f722d79ff3b0f85408c31271", "src_uid": "59154ca15716f0c1c91a37d34c5bbf1d", "apr_id": "1f8b60abf6f49615eb8209991f809209", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\u81f3\u5c11l,\u6700\u591ar\n//l<= ai <= r\n//a1+a2+...+an=sall\n//amax1+amax2+...+amaxk=sk\n//\u5206\u6210\u4e24\u4e2a\u6570\u7ec4\u6765\u5904\u7406\n//amax1+amax2+...+amaxk=sk\n//l<= ai <= r\n//amaxk+1...+amaxn=sall-sk\n//l<= ai <= r\n#include<stdio.h>\n#define N 1000\nint main() {\n    int n,k,l,r,sall,sk;\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sall,&sk);\n    int average=sk/k;\n    int a[N];\n    int remain=sk;\n    int i;\n    for(i=0;i<k;i++){\n        if(i==k-1){\n            a[i]=remain;\n        }else{\n            a[i]=average;\n            remain-=average;\n        }\n    }\n    average=(sall-sk)/(n-k);\n    remain=sall-sk;\n    for(i=k;i<n;i++){\n        if(i==n-1){\n            a[i]=remain;\n        }else{\n            a[i]=average;\n            remain-=average;\n        }\n    }\n    for(i=0;i<n;i++){\n        printf(\" %d\",a[i]);\n    }\n    printf(\"\\n\");\n\n\treturn 0;\n}\n", "fixed": "//\u81f3\u5c11l,\u6700\u591ar\n//l<= ai <= r\n//a1+a2+...+an=sall\n//amax1+amax2+...+amaxk=sk\n//\u5206\u6210\u4e24\u4e2a\u6570\u7ec4\u6765\u5904\u7406\n//amax1+amax2+...+amaxk=sk\n//l<= ai <= r\n//amaxk+1...+amaxn=sn-sk\n//l<= ai <= r\n#include<stdio.h>\n#define N 1000\nint main() {\n    int n,k,l,r,sn,sk;\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sn,&sk);\n    int a[N];\n    //\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u6700\u5927\u503c\u95ee\u9898\uff01\n    int average;\n    int remain;\n    int i;\n    if(n!=k){\n        average=(sn-sk)/(n-k);\n        remain=sn-sk-average*(n-k);\n        for(i=0;i<n-k;i++){\n            a[i]=average;\n        }\n        //\u524dn-k\u4e2a\u662f\u8f83\u5c0f\u7684\u6570\n        for(i=0;i<n-k;i++){\n            if(remain>0){\n                a[i]++;\n                remain--;\n            }else{\n                break;\n            }\n        }\n    }\n    average=sk/k;\n    remain=sk-average*k;\n    for(i=n-k;i<n;i++){\n        a[i]=average;\n    }\n    //\u524dn-k\u4e2a\u662f\u8f83\u5c0f\u7684\u6570\n    for(i=n-k;i<n;i++){\n        if(remain>0){\n            a[i]++;\n            remain--;\n        }else{\n            break;\n        }\n    }\n    for(i=0;i<n;i++){\n        printf(\" %d\",a[i]);\n    }\n    printf(\"\\n\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.11100292112950341, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "df64b576adb2fa567a90e902c2840ecf", "bug_code_uid": "7772683884d3f3f228dcf84d0f8d7398", "src_uid": "d715095ff068f4d081b58fbfe103a02c", "apr_id": "36177d98dfd52426f632cd5bebf9976b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX 55\nchar A[MAX][MAX];\nint mini=55,minj=55,maxi,maxj;\nvoid okut()\n{\n\tint n,m,i,j;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\" %c\",&A[i][j]);\n\t\t\tif(A[i][j]=='*')\n\t\t\t{\n\t\t\t\tif(i<mini)mini=i;\n\t\t\t\tif(i>maxi)maxi=i;\n\t\t\t\tif(j<minj)minj=j;\n\t\t\t\tif(j>maxj)maxj=j;\n\t\t\t}\n\t\t}\n\tfor(i=mini;i<=maxi;i++,printf(\"\\n\"))\n\t\tfor(j=minj;j<=maxj;j++)\n\t\t\tprintf(\"%c\",A[i][j]);\n}\nint main()\n{\n\tokut();\n}\n", "fixed": "#include<stdio.h>\nint A[53][53];\nint N,M;\nint ust=-1,alt=9999,sag=-1,sol=9999;\nvoid Okurken_Ayni_Zamanda_Yap_bi_de_Yaziver()\n{\n\tchar a;\n\tint i,j;\n\tscanf(\" %d %d\",&N,&M);\n\tfor(i=0;i<N;i++)\n\t\tfor(j=0;j<M;j++)\n\t\t{\n\t\t\tscanf(\" %c\",&a);\n\t\t\tif(a=='*' && ust==-1) ust = i;\n\t\t\tif(a=='*' && j < sol) sol = j;\n\t\t\tif(a=='*' && j > sag) sag = j;\n\t\t\tif(a=='*') alt=i;\n\t\t\tA[i][j]=a;\n\t\t}\n\tif(ust == -1 && alt==9999 && sag==-1 && sol==9999) return;\n\tfor(i=ust;i<=alt;i++,printf(\"\\n\"))\n\t\tfor(j=sol;j<=sag;j++)\n\t\t\tprintf(\"%c\",A[i][j]);\n}\nint main()\n{\n\tOkurken_Ayni_Zamanda_Yap_bi_de_Yaziver();\n\treturn 0;\n}\n"}
{"similarity_score": 0.8203125, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "6a6c415743ea26a4360b372b03f9c34d", "bug_code_uid": "9140b16e771200892993e4e0291b9bbd", "src_uid": "447ebe088a0a60a7a44a3fc76056bc65", "apr_id": "a0d627ec93bc14703971ffc48c8edb5b", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "long long a,p,q,n;\n\nint main()\n{\n\tlong long i;\n\twhile(~scanf(\"%I64d%I64d%I64d\",&p,&q,&n))\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%I64d\",&a);\n\t\t\tif(a>p/q) break;\n\t\t\tp-=q*a;\n\t\t\tp^=q^=p^=q;\n\t\t}\n\t\tif(i<n||q) puts(\"NO\");\n\t\telse puts(\"YES\");\n\t}\n}\n", "fixed": "long long a[90],p,q,n;\n\nint main()\n{\n\tlong long i,tag;\n\twhile(~scanf(\"%I64d%I64d%I64d\",&p,&q,&n))\n\t{\n\t\tfor(i=0;i<n;i++) scanf(\"%I64d\",&a[i]);\n\t\tfor(i=0;i<n&&q;i++)\n\t\t{\n\t\t\tif(a[i]>p/q) break;\n\t\t\tp-=a[i]*q;\n\t\t\tp^=q^=p^=q;\n\t\t}\n\t\tif(i<n||q) puts(\"NO\");\n\t\telse puts(\"YES\");\n\t}\n}\n"}
{"similarity_score": 0.9975216852540273, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0976936125552393a450c1defbbd4fb7", "bug_code_uid": "19d01d1653691ba767609d4cc0377eba", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "2e719f9681578533e3f2cff5b8ac4489", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);      \n    int i,h=0,f=0,t=0,x,flag=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&x);\n        if(!flag){\n            if(x==25)\n                t++;\n            else if(x==50)\n                f++;\n            else\n                h++;\n            if(x==50){\n                if(t==0)\n                    flag=1;\n                else\n                    t--;\n            }\n            else if(x==100){\n                if(f>0&&t>0){\n                    f--;\n                    t--;\n                }\n                else if(t>1)\n                    t -=2;\n                else\n                    flag++;\n            }\n                   \n        }     \n    }    \n    if(!flag)\n        printf(\"YES\");\n    else\n        printf(\"NO\");    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);      \n    int i,h=0,f=0,t=0,x,flag=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&x);\n        if(!flag){\n            if(x==25)\n                t++;\n            else if(x==50)\n                f++;\n            else\n                h++;\n            if(x==50){\n                if(t==0)\n                    flag=1;\n                else\n                    t--;\n            }\n            else if(x==100){\n                if(f>0&&t>0){\n                    f--;\n                    t--;\n                }\n                else if(t>2)\n                    t -=3;\n                else\n                    flag++;\n            }\n                   \n        }     \n    }    \n    if(!flag)\n        printf(\"YES\");\n    else\n        printf(\"NO\");    \n    return 0;\n}"}
{"similarity_score": 0.6559031281533805, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "84882df4afbb855bd991f2ff46625ff1", "bug_code_uid": "04073ca9f90f6c3f514ae8c5bf930efd", "src_uid": "501b60c4dc465b8a60fd567b208ea1e3", "apr_id": "b221414a7bced155208b289b8497d9a1", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<limits.h>\n#include<stdlib.h>\n#include<ctype.h>\nchar input[250000];\nint main(){\n\tint a,b,c,d,e,f,g;\n\tgets(input); \n\tscanf(\"%d\",&a);\n\t\n\tint len=strlen(input);\n\tint i;\n\tfor(i=0;i<a;i++){\n\t\tint in,in1,in2;\n\t\tscanf(\"%d%d%d\",&in,&in1,&in2);\n\t\tgetchar();\n\t\tfor(f=1;f<=in2%len;f++){\n\t\tfor(c=in;c<in1;c++){\n\t\tchar temp = input[c-1];\n\t\tinput[c-1]=input[in1-1];\n\t\tinput[in1-1]=temp;\n\t\t}\n\t\t}\n\t\t\tputs(input);\n\t}\n\t\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<limits.h>\n#include<stdlib.h>\nchar input[250000];\nint main(){\n\tint a,b,c,d,e,f,g;\n\tgets(input); \n\tscanf(\"%d\",&a);\n\n\tint len=strlen(input);\n\tint i;\n\tfor(i=0;i<a;i++){\n\t\tint in,in1,in2;\n\t\tscanf(\"%d%d%d\",&in,&in1,&in2);\n\t\tgetchar();\n\t\tint res = (in2%((in1-in)+1));\n\t\tif(res==0)\n\t\t\tcontinue;\n\t\tchar arr[10001];\n\t\tstrcpy(arr,input);\n\t\tfor(c=0;c<res;c++){\n\t\tinput[in-1+c]=input[(in1-1)-(res-1)+c];\n\t\t}\n\t\tint k=0;\n\n\t\tfor(c=(in-1)+res;c<=in1-1;c++,k++){\n\t\tinput[c]=arr[(in-1)+k];\n\t\t}\n\t\t}\n\t\tputs(input);\n}\n"}
{"similarity_score": 0.9245283018867925, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "eeda2291492aac1a65ce9870ba8294e7", "bug_code_uid": "03f56b17634beddc27f2ea98e6dcbfb4", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "240b4c74c6ab345e80d6b674c6103499", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint i,j,n,flag1,flag2=0;\n\tscanf(\"%d\",&n);\n\tchar a[n][6];\n\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%s\",a[i]);\n\t\tflag1 = 0;\n\t\tfor(j=0;j<5;j++) {\n//            printf(\"i=%d j=%d flg1=%d flg2=%d char=%c\\n\",i,j,flag1,flag2,a[i][j]);\n\t\t\tif(a[i][j]=='O') {\n//\t\t\t    printf(\"YAY\\n\");\n\t\t\t\tif(flag1 == 1) {\n\t\t\t\t\tif(flag2==0) {\n\t\t\t\t\t\ta[i][j] = '+';\n\t\t\t\t\t\ta[i][j-1] = '+';\n\t\t\t\t\t}\n\t\t\t\t\tflag2 = 1;\n\t\t\t\t}\n\t\t\t\tflag1 = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tflag1 = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(flag2) printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%s\\n\",a[i]);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint i,j,n,flag1,flag2=0;\n\tscanf(\"%d\",&n);\n\tchar a[n][6];\n\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%s\",a[i]);\n\t\tflag1 = 0;\n\t\tfor(j=0;j<5;j++) {\n//            printf(\"i=%d j=%d flg1=%d flg2=%d char=%c\\n\",i,j,flag1,flag2,a[i][j]);\n\t\t\tif(a[i][j]=='O') {\n//\t\t\t    printf(\"YAY\\n\");\n\t\t\t\tif(flag1 == 1) {\n\t\t\t\t\tif(flag2==0) {\n\t\t\t\t\t\ta[i][j] = '+';\n\t\t\t\t\t\ta[i][j-1] = '+';\n\t\t\t\t\t}\n\t\t\t\t\tflag2 = 1;\n\t\t\t\t}\n\t\t\t\tflag1 = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tflag1 = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(flag2){ printf(\"YES\\n\");\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%s\\n\",a[i]);\n\t\t}\n\telse printf(\"NO\\n\");\n\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9986468200270636, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2a2728eb521d3c6b989eb48a63784635", "bug_code_uid": "9b4c09f8c7b5584eba9889601df47e7a", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "8c4b7dd0cb0864b932f9b3e6d2469002", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid solve();\nint main()\n{\n    int t,a,b,n;\n    scanf(\"%d\",&t);\n    while (t>=0)\n    {   \n        solve();\n        t--;\n    }\n    return 0;\n}\nvoid solve()\n{\n int a;\n int n;\n int b;\n int count=0;\n scanf(\"%d%d%d\",&a,&b,&n);\n while(a<=n && b<=n)\n {\n     int sum=a+b;\n     if(a>b)\n     b=sum;\n     else\n     a=sum;\n     count++;\n }\n printf(\"%d\\n\",count);\n}", "fixed": "#include<stdio.h>\nvoid solve();\nint main()\n{\n    int t,a,b,n;\n    scanf(\"%d\",&t);\n    while (t>0)\n    {   \n        solve();\n        t--;\n    }\n    return 0;\n}\nvoid solve()\n{\n int a;\n int n;\n int b;\n int count=0;\n scanf(\"%d%d%d\",&a,&b,&n);\n while(a<=n && b<=n)\n {\n     int sum=a+b;\n     if(a>b)\n     b=sum;\n     else\n     a=sum;\n     count++;\n }\n printf(\"%d\\n\",count);\n}"}
{"similarity_score": 0.13152804642166344, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5cc844a6ee47d9c7f7f586fa9feeb892", "bug_code_uid": "f1becaf980a6f67b77185710bfc11cf2", "src_uid": "6469ed9f2486b498c9ffeb8270391e3a", "apr_id": "1c514d445a31402e8653b3735cd315eb", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,p,sum=0;\n    printf(\"Enter number of keyboard remains\");\n    scanf(\"%d\",&n);\n    int a[n];\n    printf(\"enter keyboard numbers\");\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    \n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n        if(a[j]>a[i])\n        {\n            p=a[j];\n            a[j]=a[i];\n            a[i]=p;\n        \n        }\n        }\n        \n    }\n    \n    \n    for(i=0;i<n-1;i++)\n    {\n        sum=(sum+(a[i]-a[i+1]-1));\n        \n    }\n    printf(\"%d\",sum);\n    \n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,p,sum=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    \n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n        if(a[j]>a[i])\n        {\n            p=a[j];\n            a[j]=a[i];\n            a[i]=p;\n        \n        }\n        }\n        \n    }\n    \n    \n    for(i=0;i<n-1;i++)\n    {\n        sum=(sum+(a[i]-a[i+1]-1));\n        \n    }\n    printf(\"%d\",sum);\n    \n}\n"}
{"similarity_score": 0.11641954969796815, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "19fcd7e4a08895e133ca4da47f473c2a", "bug_code_uid": "eac4dce8e68b1f592d0357d0c50db99f", "src_uid": "1f29461c42665523d0a4d56b13f7e480", "apr_id": "63c86ba100dbe0b2f24ccc237184cf11", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\n  unsigned long r, g, b;\n\n  unsigned short t, i;\n  scanf(\"%hu\", &t);\n\n  unsigned long *result = malloc(sizeof(unsigned long) * t);\n  unsigned long *max1, *max2;\n  for (i = 0; i < t; i++) {\n    scanf(\"%lu %lu %lu\", &r, &g, &b);\n    result[i] = 0;\n\n    max1 = &r;\n    max2 = &g;\n    while (*max1 != 0 && *max2 != 0) {\n      *max1 = *max1 - 1;\n      *max2 = *max2 - 1;\n      if (r >= g && g >= b) {\n        max1 = &r;\n        max2 = &g;\n      }\n      if (r >= b && b >= g) {\n        max1 = &r;\n        max2 = &b;\n      }\n      if (g >= r && r >= b) {\n        max1 = &g;\n        max2 = &r;\n      }\n      if (g >= b && b >= r) {\n        max1 = &g;\n        max2 = &b;\n      }\n      if (b >= r && r >= g) {\n        max1 = &b;\n        max2 = &r;\n      }\n      if (b >= g && g >= r) {\n        max1 = &b;\n        max2 = &g;\n      }\n      result[i]++;\n    }\n  }\n\n  for (i = 0; i < t; i++) {\n    printf(\"%lu\\n\", result[i]);\n  }\n\n  return 0;\n\n}\n", "fixed": "#include <stdio.h>\nint main() {\n  unsigned long r, g, b;\n  short t;\n  scanf(\"%hd\", &t);\n  unsigned long *max1, *max2, *max3;\n  while (t--) {\n    scanf(\"%lu %lu %lu\", &r, &g, &b);\n    if (r >= g && g >= b) {\n      max1 = &r;\n      max2 = &g;\n      max3 = &b;\n    } else if (r >= b && b >= g) {\n      max1 = &r;\n      max2 = &b;\n      max3 = &g;\n    } else if (g >= r && r >= b) {\n      max1 = &g;\n      max2 = &r;\n      max3 = &b;\n    } else if (g >= b && b >= r) {\n      max1 = &g;\n      max2 = &b;\n      max3 = &r;\n    } else if (b >= r && r >= g) {\n      max1 = &b;\n      max2 = &r;\n      max3 = &g;\n    } else {\n      max1 = &b;\n      max2 = &g;\n      max3 = &r;\n    }\n    if (*max1 >= (*max2 + *max3)) {\n      printf(\"%lu\\n\", *max2 + *max3);\n    } else {\n      printf(\"%lu\\n\", (*max1 + *max2 + *max3) / 2);\n    }\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.704331450094162, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "af9061751c732b8f37a098513d8df9f5", "bug_code_uid": "acdc673d35d29b5470253f9aca4e926a", "src_uid": "75cc5b55c51217966cbdd639a68f0724", "apr_id": "d1e23ba1dc6f36a02e4f9d61134a5a90", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n\tint n,k;\n\tscanf(\"%d %d\",&n,&k);\n\tint i;\n\tint p[100001];\n\tfor(i=1;i<=n;i++){\n\t\tp[i]=i;\n\t\t}\n\t\tint j;\n\tfor(i=1;i<=k+1;i++){\n\t\tfor(j=k+1;j>i;j--){\n\t\t\tif(p[i]<p[j]){\n\t\tint t =p[i];\n\t\tp[i]=p[j];\n\t\tp[j]=t;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tprintf(\"%d \",p[i]);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n\tint n,k;\n\tscanf(\"%d %d\",&n,&k);\n\tint i;\n\tint p[100001];\n\tfor(i=1;i<=n;i++){\n\t\tp[i]=i;\n\t}\n\tfor(i=1;i<=k+1;i++){\n\t\tp[i]=k+2-i;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tprintf(\"%d \",p[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4344344344344344, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "6bd30a28487a5a683439f590837b7a83", "bug_code_uid": "93f1000ffd50a9c28f3e6ad2e76969e2", "src_uid": "f00eb0452f5933103f1f77ef06473c6a", "apr_id": "b8c2c960dacabd4462e1938bacf2f347", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\u2591\u2591\u2591\n// \u2591 anzim bin nasir\n// \u2591\n#include<stdio.h>\n\nint main()\n{\n    int t;\n    long int n,k,i;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%ld%ld\",&n,&k);\n        if(k>=n)\n        printf(\"1\\n\");\n        else\n        {\n            for(i=k;i>0;i--)\n            {\n                if(n%i==0)\n                break;\n            }\n            printf(\"%ld\\n\",n/i);\n        }\n    }\n    return 0;\n}\n", "fixed": "//\u2591\u2591\u2591\n// \u2591 anzim bin nasir\n// \u2591\n#include<stdio.h>\n\nint main()\n{\n    int t;\n    long long int n,check,k,i;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld\",&n,&k);\n        check=n;\n        for(i=1;i*i<=n;i++)\n        {\n            if(n%i==0)\n            {\n               if(n/i<=k)\n               {\n                   if(i<check)\n                    check=i;\n               }\n               else if(i<=k)\n               {\n                   if(n/i<check)\n                    check=n/i;\n               }\n            }\n        }\n        printf(\"%lld\\n\",check);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9981718464351006, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1f5730c41fe8d93329c57dff8d84d0f7", "bug_code_uid": "35b595b44fb97ddd18cc7b759ba35372", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "958403d30e93d8d3fb445dad218c5efa", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n        char* a;\n        a=calloc(102,sizeof(char));\n        int num;\n        scanf(\"%d\",&num);\n        int i=0;\n        int x;\n        while(i!=num)\n        {\n                scanf(\"%s\",a);\n                x=strlen(a);\n                if((x-1)<=10)\n                printf(\"%s\",a);\n                else\n                {\n                        printf(\"%c%d%c\",a[0],(x-2),a[x-1]);\n                }\n                printf(\"\\n\");\n                i++;\n        }\n        return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n        char* a;\n        a=calloc(102,sizeof(char));\n        int num;\n        scanf(\"%d\",&num);\n        int i=0;\n        int x;\n        while(i!=num)\n        {\n                scanf(\"%s\",a);\n                x=strlen(a);\n                if((x)<=10)\n                printf(\"%s\",a);\n                else\n                {\n                        printf(\"%c%d%c\",a[0],(x-2),a[x-1]);\n                }\n                printf(\"\\n\");\n                i++;\n        }\n        return 0;\n}"}
{"similarity_score": 0.9730538922155688, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1231e549bd4eac6742653de9f61acd0c", "bug_code_uid": "a291ff253753efb8afbfadf83e0c9c9a", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "e55230d9d226c74c37bec6b6cf8bb9fd", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    for (int i = 1; i <= t; i++) {\n        long long n, m, x;\n        scanf(\"%d %d %d\", &n, &m, &x);\n\n        long long row = (x - 1) / n;\n        long long column = (x - 1) % n;\n        x = row + column * m + 1;\n\n        printf(\"%lld\\n\", x);\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    for (int i = 1; i <= t; i++) {\n        long long n, m, x;\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\n\n        long long row = (x - 1) / n;\n        long long column = (x - 1) % n;\n        x = row + column * m + 1;\n\n        printf(\"%lld\\n\", x);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.625, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "fbe041b41a7764121b7217b1c4cc0bc2", "bug_code_uid": "9e831f7cc068552ca4b6f447d4aa9245", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "83b7a8bc7921dd44dc672253ee97a52b", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,t,i,j,l,arr[100000],nob,mnob=0;\n    scanf(\"%ld\",&n);\n    scanf(\"%ld\",&t);\n    for(i=0;i<n;i++)\n    scanf(\"%ld\",&arr[i]);\n    for(i=0;i<n;i++)\n    {l=t;\n    nob=0;\n    for(j=i;j<n;j++)\n    {if(arr[j]<l)\n    {nob++;\n    l=l-arr[j];}\n    else break;}\n    if(mnob<nob)\n    mnob=nob;}\n    printf(\"%ld\",mnob);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long int n,t,i,j=0,nob=0,mnob=0;\n    unsigned int arr[100000];\n    scanf(\"%ld\",&n);\n    scanf(\"%ld\",&t);\n    for(i=0;i<n;i++)\n    scanf(\"%u\",&arr[i]);\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]<=t)\n        {\n            nob++;\n            t=t-arr[i];\n        }\n        else\n        {\n            if(mnob<nob)\n            mnob=nob;\n            nob--;\n            t=t+arr[j];\n            j++;\n            i--;\n        }\n    }\n    if(mnob<nob)\n    mnob=nob;\n    printf(\"%ld\",mnob);\n    return 0;\n}"}
{"similarity_score": 0.9626556016597511, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8da703287c84937b262706772f165014", "bug_code_uid": "483a0735d008b143092c17fbd39fbdd5", "src_uid": "c0ad2a6d14b0c9e09af2221d88a34d52", "apr_id": "34f909d8f4e6796a39dd3d2f1732135d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tlong int x,y,z,d;\r\n\tscanf(\"%ld%ld%ld\",&x,&y,&d);\r\n\tif(x>y){\r\n\t\t\tz=x;\r\n\t\t\tx=y;\r\n\t\t\ty=z;\r\n\t\t\t}\r\n\tif(x*(d+1)>=y)printf(\"YES\\n\");\r\n\telse printf(\"NO\\n\");\r\n\t}\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nvoid main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tlong long int x,y,z,d;\r\n\tscanf(\"%lld%lld%lld\",&x,&y,&d);\r\n\tif(x>y){\r\n\t\t\tz=x;\r\n\t\t\tx=y;\r\n\t\t\ty=z;\r\n\t\t\t}\r\n\tif(x*(d+1)>=y)printf(\"YES\\n\");\r\n\telse printf(\"NO\\n\");\r\n\t}\r\n\r\n}\r\n"}
{"similarity_score": 0.9831460674157303, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9edc3baaca519eed9a08d24e2c8da4a0", "bug_code_uid": "33a3d207fa7b3c52531a8ef3eaddf6d1", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "fdced75b0fde2dc3d7393f7b4eabfadb", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<algorithm>\n//using namespace std;\nint main()\n{\n    int n,m,a[100005],i;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;++i)\n        scanf(\"%d\",&a[i]);\n    int ans[100005]={0},co[100005]={0};\n    ans[n-1]=1;\n    for(i=n-2;i>=0;--i)\n    {\n        if(co[a[i]]==0)\n        {\n            ans[i]=ans[i+1]+1;\n            co[a[i]]=1;\n        }\n        else\n            ans[i]=ans[i+1];\n    }\n    int l;\n    for(i=0;i<m;++i)\n    {\n        scanf(\"%d\",&l);\n        printf(\"%d\\n\",ans[l-1]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n//#include<algorithm>\n//using namespace std;\nint main()\n{\n    int n,m,a[100005],i;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;++i)\n        scanf(\"%d\",&a[i]);\n    int ans[100005]={0},co[100005]={0};\n    ans[n-1]=1;\n    co[a[n-1]]=1;\n    for(i=n-2;i>=0;--i)\n    {\n        if(co[a[i]]==0)\n        {\n            ans[i]=ans[i+1]+1;\n            co[a[i]]=1;\n        }\n        else\n            ans[i]=ans[i+1];\n    }\n    int l;\n    for(i=0;i<m;++i)\n    {\n        scanf(\"%d\",&l);\n        printf(\"%d\\n\",ans[l-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9983416252072969, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0f4279c783de17ba9f919191968ec09a", "bug_code_uid": "43df7c3c232facb0ebedbfab128cb9b8", "src_uid": "a4c82fffb31bc7e42870fd84e043e815", "apr_id": "62923611f285e71d936b9ab968e0be4d", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nstruct person\n{\n    long long n,k;\n};\nstruct person person[10000000];\nint main()\n{\n\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=1; i<=t; i++)\n    {\n        scanf(\"%lld %lld\",&person[i].n,&person[i].k);\n    }\n    for(i=1; i<=t; i++)\n    {\n        if(person[i].k<=sqrt(person[i].n))\n        {\n            if(person[i].n%2==0&&person[i].k%2==0)\n                printf(\"YES\\n\");\n            else if(person[i].n%2!=0&&person[i].k%2!=0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\nelse\n    printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nstruct person\n{\n    long long n,k;\n};\nstruct person person[10000000];\nint main()\n{\n\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=1; i<=t; i++)\n    {\n        scanf(\"%lld %lld\",&person[i].n,&person[i].k);\n    }\n    for(i=1; i<=t; i++)\n    {\n        if(person[i].k<=sqrt(person[i].n))\n        {\n            if(person[i].n%2==0&&person[i].k%2==0)\n                printf(\"YES\\n\");\n            else if(person[i].n%2!=0&&person[i].k%2!=0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\nelse\n    printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9935897435897436, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b775d3b4f1baaaafcff91f995a1841ca", "bug_code_uid": "de4c24c29e68582cf662a03edeb77131", "src_uid": "6bd7cab93a779e066af39a671aba3239", "apr_id": "83ac248d39341b3471c2f5bcdd413e2b", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,r,c,count=0;\n\tscanf(\"%d\",&n);\n\tint m=n/2+1;\n\tprintf(\"%d\\n\",m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tprintf(\"1,%d\\n\",i);\n\t\tcount++;\n\t\tif(count>=n)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(int i=2;i<=m;i++)\n\t{\n\t\tprintf(\"%d,%d\\n\",i,m);\n\t\tcount++;\n\t\tif(count>=n)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,r,c,count=0;\n\tscanf(\"%d\",&n);\n\tint m=n/2+1;\n\tprintf(\"%d\\n\",m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tprintf(\"1 %d\\n\",i);\n\t\tcount++;\n\t\tif(count>=n)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(int i=2;i<=m;i++)\n\t{\n\t\tprintf(\"%d %d\\n\",i,m);\n\t\tcount++;\n\t\tif(count>=n)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4016649323621228, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "9c1f68d5f1f965bee40e75a1995a41ec", "bug_code_uid": "020b8aec56ef16b43c6a031c0f07940c", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "9cb79ad9a9c8cc01b4bbb8bd049c5369", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c=10001,d=0,x=0,y=0,z;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(a[i]<a[i+1])\n        {\n            if(a[i]<c)\n            {\n                c=a[i];\n                x=x+1;\n            }\n        }\n        else\n        {\n            if(a[i]>d)\n            {\n                d=a[i];\n                y=y+1;\n            }\n        }\n    }\n    z=(x+y)-1;\n    if(a[n]<c)\n    {\n        z=z+1;\n    }\n    if(a[n]>d)\n    {\n        z=z+1;\n    }\n    printf(\"%d\",z);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,x=0,m,o;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    m=a[1];\n    o=a[1];\n    for(i=1;i<=n;i++)\n    {\n       if(a[i]>m)\n       {\n           m=a[i];\n           x=x+1;\n       }\n       if(a[i]<o)\n       {\n           o=a[i];\n           x=x+1;\n       }\n    }\n    printf(\"%d\",x);\n}\n"}
{"similarity_score": 0.9974489795918368, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "aec1a6980f89be59cbe5ef079fcde197", "bug_code_uid": "907d557036d6382e45a2db77c2b16362", "src_uid": "bd5912fe2c5c37658f28f6b159b39645", "apr_id": "f7f14b70a7e20ede0a88e0f6f88f5c15", "difficulty": 1000, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar str[1001], ch[27];\n\tint k, i, j, flag, unique=0;\n\t\n\tscanf(\"%s %d\", str, &k);\n\t\n\tfor(i=0; str[i]!='\\0'; i++)\n\t{\n\t\tflag=1;\n\t\tfor(j=i+1; str[j]!='\\0'; j++)\n\t\t{\n\t\t\tif(str[i]==str[j])\n\t\t\t\tflag=0;\n\t\t}\n\t\tif(flag==1)\n\t\t\tunique++;\n\t}\n\t\n\tif(strlen(str)>=k)\n\t\tprintf(\"%d\", k-unique>=0 ? k-unique:k);\n\telse\n\t\tprintf(\"impossible\");\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar str[1001], ch[27];\n\tint k, i, j, flag, unique=0;\n\t\n\tscanf(\"%s %d\", str, &k);\n\t\n\tfor(i=0; str[i]!='\\0'; i++)\n\t{\n\t\tflag=1;\n\t\tfor(j=i+1; str[j]!='\\0'; j++)\n\t\t{\n\t\t\tif(str[i]==str[j])\n\t\t\t\tflag=0;\n\t\t}\n\t\tif(flag==1)\n\t\t\tunique++;\n\t}\n\t\n\tif(strlen(str)>=k)\n\t\tprintf(\"%d\", k-unique>=0 ? k-unique:0);\n\telse\n\t\tprintf(\"impossible\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.6847034339229969, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "dd1c8da889e61a91c6c06c03f56f7972", "bug_code_uid": "ddf1e1b2ed130bb4ea48670724f32f52", "src_uid": "2b55012c899645bac8d293e85e73148f", "apr_id": "ef0230de7485b6f62a246eea445c7578", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,ar[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&ar[i]);\n    if(n==2 && ar[0]==ar[1] || n==1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else\n    {\n        printf(\"%d\\n\",n-2);\n        for(i=0;i<n-1;i++)\n            printf(\"%d \",ar[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,sum=0;\n    scanf(\"%d\",&n);\n    int i,ar[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&ar[i]);\n    if(n==2 && ar[0]==ar[1] || n==1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else\n    {\n        for(i=0;i<n-1;i++)\n            sum+=ar[i];\n        if(sum==ar[n-1])\n        {\n            printf(\"%d\\n\",n-2);\n            for(i=0;i<n-2;i++)\n                printf(\"%d \",i+1);\n            return 0;\n        }\n        else\n        {\n            printf(\"%d\\n\",n-1);\n            for(i=0;i<n-1;i++)\n                printf(\"%d \",i+1);\n            return 0;\n        }\n    }\n}\n"}
{"similarity_score": 0.9961389961389961, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5e0363ef1078d4d5edb5f0ad5e7264fd", "bug_code_uid": "be32f85d91714ca03c275d8181d364c5", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "b796e051249a08c94b2362dbf8e64ee5", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,x,p;\n        p=1;\n        double k;\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&x);\n        if(n<=2)\n        printf(\"%d\",p);     \n        else\n        {\n            k=ceil((n-3)/(x)+2);\n            printf(\"%d \\n\",(int)k);\n        }\n        \n        \n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,x,p;\n        p=1;\n        double k;\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&x);\n        if(n<=2)\n        printf(\"%d \\n\",p);     \n        else\n        {\n            k=ceil((n-3)/(x)+2);\n            printf(\"%d \\n\",(int)k);\n        }\n        \n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9931506849315068, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8f80fde53f331fcab445dbb7989bcb8d", "bug_code_uid": "601979c859ec6a5ea2a70127928b1fbe", "src_uid": "90c5058c0c7f55a567f2e036482149f9", "apr_id": "92a171d8caaeea7ac5802b82d6f0a77d", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,a,b,c,flag=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\r\n\t\tif((a+c)%2==0&&((a+c)/2)%b==0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tflag++;\r\n\t\t}\r\n\t\tif((2*b-c)%a==0&&flag==0&&(2*b-c)!=0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tflag++;\r\n\t\t}\r\n\t\tif((2*b-a)%c==0&&flag==0&&(2*b-a)!=0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tflag++;\r\n\t\t}\r\n\t\tif(flag==0)\r\n\t\tprintf(\"NO\\n\");\r\n\t\tt--;\r\n\t\tflag=0;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,a,b,c,flag=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\r\n\t\tif((a+c)%2==0&&((a+c)/2)%b==0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tflag++;\r\n\t\t}\r\n\t\tif((2*b-c)%a==0&&flag==0&&(2*b-c)>0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tflag++;\r\n\t\t}\r\n\t\tif((2*b-a)%c==0&&flag==0&&(2*b-a)>0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tflag++;\r\n\t\t}\r\n\t\tif(flag==0)\r\n\t\tprintf(\"NO\\n\");\r\n\t\tt--;\r\n\t\tflag=0;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9861286254728878, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d57e47bccba4e2731056f3d639908245", "bug_code_uid": "330e5eb0248083e27a041a039eabbda7", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "2679173073b9a31618911d3348773e7d", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  long long  int N,X,n,c=0,j,i;\n\n\n    scanf(\"%lld\",&n);\n    long long int a[n],b[n];\n    for(i=0; i<n; i++){\n\n{\n    scanf(\"%lld%lld\",&a[i],&b[i]);\n}\n\n\n    }\n\n     for(j=0; j<n; j++){\n    for(i=a[j];i<=a[j];i=i+a[j]){\n        if(i%a[j]==0){\n            printf(\"%lld %lld\\n\",a[j],i);\n         break;\n        }\n    }}\n\n        //printf(\"%d\\n\",c);\n\nreturn 0;\n}\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n  long long  int N,X,n,c=0,j,i;\n\n\n    scanf(\"%lld\",&n);\n    long long int a[n],b[n];\n    for(i=0; i<n; i++){\n\n{\n    scanf(\"%lld%lld\",&a[i],&b[i]);\n}\n\n\n    }\n\n     for(j=0; j<n; j++){\n    for(i=a[j];i<=b[j];i=i+a[j]){\n        if(i!=a[j]&&i%a[j]==0){\n            printf(\"%lld %lld\\n\",a[j],i);\n         break;\n        }\n    }}\n\n        //printf(\"%d\\n\",c);\n\nreturn 0;\n}\n\n\n\n\n"}
{"similarity_score": 0.611749680715198, "equal_cnt": 18, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 10, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "3fa1affcbea7c2d75d93d069c41ddf66", "bug_code_uid": "e42aa170e5daed2f0c5ee40e71905007", "src_uid": "3bb093fb17d6b76ae340fab44b08fcb8", "apr_id": "07fae68be8e97bbfab53b7ae90c54ab1", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nvoid main()\n{\n    int t,a,b,temp;\n    double x;\n    scanf(\"%d\\n\" ,&t);\n    while(t--)\n    {\n        scanf(\"%d %d\", &a, &b);\n        if(a==b)\n        {\n            temp = 2*a;\n            temp = pow(temp,2);\n            printf(\"%d\\n\", temp);\n        }\n        else\n        {\n        x = sqrt(a*b*2);\n        temp= ceil(x);\n        if(temp > a && temp > b){\n            temp = pow(temp,2);\n        }\n        else\n        {\n            temp++;\n            temp = pow(temp,2);\n        }\n        printf(\"%d\\n\", temp);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nvoid main()\n{\n    int t,a,b,temp;\n    scanf(\"%d\\n\" ,&t);\n    while(t--)\n    {\n        scanf(\"%d %d\", &a, &b);\n        if(a==b)\n        {\n            temp = 2*a;\n            temp = pow(temp,2);\n            printf(\"%d\\n\", temp);\n        }\n        else if(a>b)\n            {\n                temp = 2*b;\n                if(a<temp)\n                {\n                    temp = pow(temp,2);\n                    printf(\"%d\\n\", temp);\n                }\n                else\n                {\n                    temp = pow(a,2);\n                    printf(\"%d\\n\", temp);\n                }\n\n            }\n        else\n            {\n                temp = 2*a;\n                if(b<temp)\n                {\n                     temp = pow(temp,2);\n                    printf(\"%d\\n\", temp);\n                }\n                else\n                {\n                    temp = pow(b,2);\n                    printf(\"%d\\n\", temp);\n                }\n\n            }\n        }\n    }\n\n"}
{"similarity_score": 0.328159645232816, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "be582b1da96ea93acc6cd2dfa2b4e69a", "bug_code_uid": "37428aa586c3edd78c843d11291117ab", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "2cb8600ee902207feb61983d7490c7d1", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int arr[1000][2],n,s,i,j,k,x,y,sum_s;\n    scanf(\"%d%d\",&s,&n);\n    sum_s=s;\n    for(i=0;i<n;i++)\n    {scanf(\"%d%d\",&x,&y);\n    sum_s=sum_s+y;\n    if(x<s)\n    {s=s+y;\n    i--;\n    continue;}\n    arr[i][0]=x;\n    arr[i][1]=y;}\n    for(j=0;j<i;j++)\n    for(k=0;k<i;k++)\n    if(s>arr[k][0])\n    s=s+arr[k][1];\n    if(s==sum_s)\n    printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int arr[1000][2],n,s,i,j,l=0,k,x,y,flag=0;\n    scanf(\"%d%d\",&s,&n);\n    for(i=0;i<n;i++)\n    {scanf(\"%d%d\",&x,&y);\n    if(x<s)\n    {s=s+y;\n    continue;}\n    arr[l][0]=x;\n    arr[l][1]=y;\n    l++;}\n    for(j=0;j<l;j++)\n    for(k=0;k<l;k++)\n    if(arr[k][0]!=0&&s>arr[k][0])\n    {s=s+arr[k][1];\n    arr[k][0]=0;}\n    for(i=0;i<l;i++)\n    if(arr[i][0]!=0)\n    {flag=1;\n    break;}\n    if(flag==0)\n    printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.9922279792746114, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c87fd4a6a4284544de804ceb7576e98e", "bug_code_uid": "e8faa50bfa58c7b5e658f67eb275ffeb", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "6186252008ef9fd7652241de264c0e47", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int ar[202][202];\n    int i,j,n,m,cnt=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m*2;j++)\n        {\n            scanf(\"%d\",&ar[i][j]);\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(ar[i][2*j]==ar[i][2*j+1])\n                cnt++;\n        }\n    }\n    printf(\"%d\",cnt);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int ar[202][202];\n    int i,j,n,m,cnt=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m*2;j++)\n        {\n            scanf(\"%d\",&ar[i][j]);\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(ar[i][2*j]==1||ar[i][2*j+1]==1)\n                cnt++;\n        }\n    }\n    printf(\"%d\",cnt);\n}\n"}
{"similarity_score": 0.9989868287740629, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f102266545c87b53e445cb332748e80e", "bug_code_uid": "f8a4dbc369bc24586ad9e548d336e0e3", "src_uid": "a9143235c8e2b6b188ea3fc8a90f0c80", "apr_id": "daf6575df6cc88a3fc0c2ff9e311322f", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i,j;\r\n    char a[5];\r\n    char b[5];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",a);\r\n        scanf(\"%s\",b);\r\n      //  printf(\"%s\",a);\r\n        if(a[0]==a[1]&&a[0]==b[0]&&a[0]==b[1]&&a[1]==b[0]&&a[1]==b[1]&&b[0]==b[1])\r\n            printf(\"0\\n\");\r\n            else if(a[0]!=a[1]&&a[0]!=b[0]&&a[0]!=b[1]&&a[1]!=b[0]&&a[1]!=b[1]&&b[0]!=b[1])\r\n                printf(\"3\\n\");\r\n            else if(a[0]==a[1]&&b[0]==b[1]&&a[0]!=b[0])\r\n                printf(\"1\\n\");\r\n            else if(a[0]==b[0]&&a[1]==b[1]&&a[0]!=a[1])\r\n                printf(\"1\\n\");\r\n            else if(a[0]==b[1]&&a[1]==b[0]&&a[0]!=a[1])\r\n                printf(\"1\\n\");\r\n                else if(a[0]==a[1]&&a[0]==b[1]&&a[0]!=b[1]||a[0]==a[1]&&a[0]==b[1]&&a[0]!=b[0]||a[0]==b[0]&&a[0]==b[1]&&a[0]!=a[1]||b[0]==b[1]&&b[0]==a[1]&&b[1]!=a[0])\r\n                    printf(\"1\\n\");\r\n            else\r\n                printf(\"2\\n\");\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i,j;\r\n    char a[5];\r\n    char b[5];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",a);\r\n        scanf(\"%s\",b);\r\n      //  printf(\"%s\",a);\r\n        if(a[0]==a[1]&&a[0]==b[0]&&a[0]==b[1]&&a[1]==b[0]&&a[1]==b[1]&&b[0]==b[1])\r\n            printf(\"0\\n\");\r\n            else if(a[0]!=a[1]&&a[0]!=b[0]&&a[0]!=b[1]&&a[1]!=b[0]&&a[1]!=b[1]&&b[0]!=b[1])\r\n                printf(\"3\\n\");\r\n            else if(a[0]==a[1]&&b[0]==b[1]&&a[0]!=b[0])\r\n                printf(\"1\\n\");\r\n            else if(a[0]==b[0]&&a[1]==b[1]&&a[0]!=a[1])\r\n                printf(\"1\\n\");\r\n            else if(a[0]==b[1]&&a[1]==b[0]&&a[0]!=a[1])\r\n                printf(\"1\\n\");\r\n                else if(a[0]==a[1]&&a[0]==b[0]&&a[0]!=b[1]||a[0]==a[1]&&a[0]==b[1]&&a[0]!=b[0]||a[0]==b[0]&&a[0]==b[1]&&a[0]!=a[1]||b[0]==b[1]&&b[0]==a[1]&&b[1]!=a[0])\r\n                    printf(\"1\\n\");\r\n            else\r\n                printf(\"2\\n\");\r\n\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9253365973072215, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "85f011f06dc51fde35d5525d12b73a0c", "bug_code_uid": "d36c26cf648692eb3df7e7fc125d79b0", "src_uid": "0ad96b6a8032d70df400bf2ad72174bf", "apr_id": "65a07bc09cd9f9225d9619d8e31d353f", "difficulty": 1300, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n    int n,k,t,i,j,tot_a;\n    scanf(\"%d%d%d\",&n,&k,&t);\n    tot_a=floor(n*k*t/100.0);\n    int back_i= tot_a/k;\n    int prog_i=tot_a - back_i*k;\n    for(i=1; i<=back_i; i++)\n        printf(\"%d \",k);\n    printf(\"%d \",prog_i);\n    for(i=1; i<=n-back_i-1; i++)\n        printf(\"0 \");\n    printf(\"\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n    int n,k,t,i,j,tot_a;\n    scanf(\"%d%d%d\",&n,&k,&t);\n    tot_a=floor(n*k*t/100.0);   ///221\n    int back_i= tot_a/k;            ///17\n    int prog_i=tot_a - back_i*k;        ///0\n    for(i=1; i<=back_i; i++)\n        printf(\"%d \",k);\n    if(n*k!=tot_a)\n        printf(\"%d \",prog_i);\n    for(i=1; i<=n-back_i-1; i++)\n        printf(\"0 \");\n    printf(\"\\n\");\n    return 0;\n}"}
{"similarity_score": 0.8083785880527541, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b9dd1130f4af298008466107f2437064", "bug_code_uid": "e7c830d018fcd003f7eaa336ad4e4562", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "5953bc21bf69a033c112b6b75723a183", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    unsigned long long int a,b,c,n,x;\n    scanf(\"%llu\",&n);\n    for(int i=0;i<n;i++){\n        scanf(\"%llu %llu %llu\",&a,&b,&c);\n        if(a==0){\n            printf(\"0\\n\");\n        }\n        else if(a==1){\n            printf(\"%llu\\n\",b);\n        }\n        else{\n            if(c/2.0>(float)b){\n                printf(\"%llu\\n\",a*b);\n            }\n            else{\n                if(a%2==0){\n                    printf(\"%llu\",a/2*c);\n                }\n                else{\n                    x=((a-1)/2)*c + b;\n                    printf(\"%llu\\n\",x);\n                }\n            }\n        }\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    long long int a,b,c,n,x;\n    scanf(\"%lld\",&n);\n    for(int i=0;i<n;i++){\n        scanf(\"%lld %lld %lld\",&a,&b,&c);\n        if(a==0){\n            printf(\"0\\n\");\n        }\n        else if(a==1){\n            printf(\"%lld\\n\",b);\n        }\n        else{\n            if(c/2.0>(float)b){\n                printf(\"%lld\\n\",a*b);\n            }\n            else{\n                if(a%2==0){\n                    printf(\"%lld\\n\",a/2*c);\n                }\n                else{\n                    x=((a-1)/2)*c + b;\n                    printf(\"%lld\\n\",x);\n                }\n            }\n        }\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9952244508118434, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "11d3bbd6a59709fa0f572db269210416", "bug_code_uid": "050a443d1d43c21698d087dd56bd22f3", "src_uid": "7ac5f084c403bd26802e1b941105d34b", "apr_id": "262d6cafda38164de57e4dad4d4a0b8e", "difficulty": 1100, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint b[150010],a[150010];\nint main()\n{\n    int t,n,i,ans,j,max;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n        for(i=0;i<150010;i++)\n            b[i]=a[i]=0;\n        scanf(\"%d\",&n);\n        ans=max=-1;\n        for(i=1;i<=n;i++){\n            scanf(\"%d\",&a[i]);\n            if(b[a[i]]){\n                ans=n-i+b[a[i]];\n                if(ans>max)\n                    max=ans;\n                    }\n            else b[a[i]]=i;//\u53ea\u6c42\u4e34\u8fd1\u51fa\u73b0\u7684\n        }\n        printf(\"%d\\n\",max);\n    }\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint b[150010],a[150010];\nint main()\n{\n    int t,n,i,ans,j,max;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n        for(i=0;i<150010;i++)\n            b[i]=a[i]=0;\n        scanf(\"%d\",&n);\n        ans=max=-1;\n        for(i=1;i<=n;i++){\n            scanf(\"%d\",&a[i]);\n            if(b[a[i]]){\n                ans=n-i+b[a[i]];\n                if(ans>max)\n                    max=ans;\n                    }\n            b[a[i]]=i;//\u53ea\u6c42\u4e34\u8fd1\u51fa\u73b0\u7684\n        }\n        printf(\"%d\\n\",max);\n    }\n}\n\n\n"}
{"similarity_score": 0.9959100204498977, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f5c856aec1c644534969521e0a164c97", "bug_code_uid": "005ba7614be04df73906a736c6b21bec", "src_uid": "e65b2a81689bb13b90a02a9ccf1d4125", "apr_id": "edf2a8cac930a79657abd8f791511c42", "difficulty": 1100, "tags": ["binary search", "ternary search", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        long long int n, d;\n        scanf(\"%lld %lld\", &n, &d);\n        if (n == 1)\n        {\n            printf(\"Yes\\n\");\n        }\n        else\n            {\n        int x = n - 1;\n        int flag = 0;\n        int z = (x + 1);\n        while (x-- && z--)\n        {\n            if (d % z != 0)\n            {\n                if ((x + (d / z) + 1) <= n)\n                {\n                    printf(\"YES\\n\");\n                    flag = 1;\n                    break;\n                }\n            }\n            else if (d % z == 0)\n                    if (x + (d / z) <= n)\n                    {\n                        printf(\"YEs\\n\");\n                        flag = 1;\n                        break;\n                    }\n\n            if (flag == 1)\n                break;\n\n        }\n         if (flag ==0) {\n             printf(\"No\\n\");\n         }\n\n            }\n\n\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        long long int n, d;\n        scanf(\"%lld %lld\", &n, &d);\n        if (n == 1 && d==1)\n        {\n            printf(\"Yes\\n\");\n        }\n        else\n            {\n        int x = n - 1;\n        int flag = 0;\n        int z = (x + 1);\n        while (x-- && z--)\n        {\n            if (d % z != 0)\n            {\n                if ((x + (d / z) + 1) <= n)\n                {\n                    printf(\"YES\\n\");\n                    flag = 1;\n                    break;\n                }\n            }\n            else if (d % z == 0)\n                    if (x + (d / z) <= n)\n                    {\n                        printf(\"YEs\\n\");\n                        flag = 1;\n                        break;\n                    }\n\n            if (flag == 1)\n                break;\n\n        }\n         if (flag ==0) {\n             printf(\"No\\n\");\n         }\n\n            }\n\n\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9968102073365231, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a632dca90eef62150058c6afbd426045", "bug_code_uid": "e39889a02009633c799f4fcdf16567dd", "src_uid": "822e8f394a59329fa05c96d7fb35797e", "apr_id": "31d2524aa76152aa136e606c1bb5bd0a", "difficulty": 1100, "tags": ["number theory", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b)\n{\n  return ( *(double*)a-*(double*)b);\n}\nint main()\n{\n  int i;\n  double n,n1,n2,a[200002],sum1=0,sum2=0;\n  double ans,avg1,avg2;\n  scanf(\"%lf %lf %lf\",&n,&n1,&n2);\n  for(i=0;i<n;i++)\n    scanf(\"%lf\",&a[i]);\n  qsort(a,n,sizeof(double),cmp);\n  if(n1>n2)\n    {\n      for(i=n-n2;i<n;i++)\n\tsum1+=a[i];\n      for(i=n-n1-n2;i<n-n2;i++)\n\tsum2+=a[i];\n      printf(\"%lf\\n\",(sum1/n2)+(sum2/n1));\n    }\n    else\n    {\n      for(i=n-n1;i<n;i++)\n\tsum1+=a[i];\n      for(i=n-n1-n2;i<n-n1;i++)\n\tsum2+=a[i];\n      printf(\"%lf\\n\",(sum1/n2)+(sum2/n1));\n    }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b)\n{\n  return ( *(double*)a-*(double*)b);\n}\nint main()\n{\n  int i;\n  double n,n1,n2,a[200002],sum1=0,sum2=0;\n  double ans,avg1,avg2;\n  scanf(\"%lf %lf %lf\",&n,&n1,&n2);\n  for(i=0;i<n;i++)\n    scanf(\"%lf\",&a[i]);\n  qsort(a,n,sizeof(double),cmp);\n  if(n1>n2)\n    {\n      for(i=n-n2;i<n;i++)\n\tsum1+=a[i];\n      for(i=n-n1-n2;i<n-n2;i++)\n\tsum2+=a[i];\n      printf(\"%lf\\n\",(sum1/n2)+(sum2/n1));\n    }\n    else\n    {\n      for(i=n-n1;i<n;i++)\n\tsum1+=a[i];\n      for(i=n-n1-n2;i<n-n1;i++)\n\tsum2+=a[i];\n      printf(\"%lf\\n\",(sum1/n1)+(sum2/n2));\n    }\n  return 0;\n}\n"}
{"similarity_score": 0.4578313253012048, "equal_cnt": 25, "replace_cnt": 5, "delete_cnt": 15, "insert_cnt": 4, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "fce1a447defd9a6681bcb1ae26c1ed1e", "bug_code_uid": "4a584f172c69463016246a041c34e561", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "2a9450b7f8da56fca37b52a5d86f722b", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int sum;\n    int n,i,j,a[100008],p[100008],min,q;\n    scanf(\"%d\",&n);\n    sum=0;\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d %d\",&a[i],&p[i]);\n    }\n    min=p[0];\n    q=0;\n    for(i=0; i<n; i++)\n    {\n        if(p[i]<min) {\n            min=p[i];\n            q=i;\n        }\n    }\n    for(i=0; i<=q; i++){\n        sum+=a[i]*p[i];\n    }\n\n\n    for(i=q+1; i<n; i++)\n    {\n        sum+=a[i]*min;\n    }\n    printf(\"%I64d\",sum);\n\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\nint n,a,p,z=105;\nlong long int sum=0;\nscanf(\"%d\",&n);\n\nwhile(n--){\n    scanf(\"%d %d\",&a,&p);\n    if(z>p) z=p;\n    sum+=a*z;\n}\n\nprintf(\"%I64d\",sum);\nreturn 0;\n}\n"}
{"similarity_score": 0.9989658738366081, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3c87d386c4d4257ea1fe0191063ffdeb", "bug_code_uid": "87a4209bbedacf290b2a0a2d7006f2fd", "src_uid": "ee523bb4da5cb794e05fb62b7da8bb89", "apr_id": "9276faa523c510d6a956b9824adc88ce", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint n, m;\n\tscanf(\"%d %d\",&n,&m);\n\n   \tint *Color;\n\tColor = (int *)malloc((m*3)*sizeof(int));\n\n\tint i, a, b, c;\n\n\tfor(i=0;i<m*3;i++)\n\t{\n\t\tColor[i] = 0;\n\t}\n\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\ta -= 1;\n\t\tb -= 1;\n\t\tc -= 1;\n\t\tif(Color[a]!=0)\n\t\t{\n\t\t\tColor[b] =Color[a] + 2;\n\t\t\tColor[c] =Color[a] + 1;\n\t\t\tif(Color[b] > 3)\n\t\t\t\tColor[b] -= 3;\n\t\t\tif(Color[c] >3)\n\t\t\t\tColor[c] -= 3;\n\t\t}\n\t\telse if(Color[b] != 0)\n\t\t{\n\t\t\tColor[a] = Color[b] + 2;\n\t\t\tColor[c] = Color[b] + 1;\n\t\t\tif(Color[a] > 3)\n\t\t\t{\n\t\t\t\tColor[a] -= 3;\n\t\t\t}\n\t\t\tif(Color[b] > 3)\n\t\t\t\tColor[c] -= 3;\n\t\t}\n\t\telse if(Color[c] != 0)\n\t\t{\n\t\t\tColor[a] = Color[c] + 1;\n\t\t\tColor[b] = Color[c] + 2;\n\t\t\tif(Color[a] > 3)\n\t\t\t\tColor[a] -= 3;\n\t\t\tif(Color[b] > 3)\n\t\t\t\tColor[b] -= 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tColor[a] = 1;\n\t\t\tColor[b] = 2;\n\t\t\tColor[c] = 3;\n\t\t}\n\t}\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(i==0)\n\t\tprintf(\"%d\",Color[i]);\n\t\telse\n\t\tprintf(\" %d\",Color[i]);\n\t}\n\treturn 0;\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint n, m;\n\tscanf(\"%d %d\",&n,&m);\n\n   \tint *Color;\n\tColor = (int *)malloc((m*3)*sizeof(int));\n\n\tint i, a, b, c;\n\n\tfor(i=0;i<m*3;i++)\n\t{\n\t\tColor[i] = 0;\n\t}\n\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\ta -= 1;\n\t\tb -= 1;\n\t\tc -= 1;\n\t\tif(Color[a]!=0)\n\t\t{\n\t\t\tColor[b] =Color[a] + 2;\n\t\t\tColor[c] =Color[a] + 1;\n\t\t\tif(Color[b] > 3)\n\t\t\t\tColor[b] -= 3;\n\t\t\tif(Color[c] >3)\n\t\t\t\tColor[c] -= 3;\n\t\t}\n\t\telse if(Color[b] != 0)\n\t\t{\n\t\t\tColor[a] = Color[b] + 2;\n\t\t\tColor[c] = Color[b] + 1;\n\t\t\tif(Color[a] > 3)\n\t\t\t{\n\t\t\t\tColor[a] -= 3;\n\t\t\t}\n\t\t\tif(Color[c] > 3)\n\t\t\t\tColor[c] -= 3;\n\t\t}\n\t\telse if(Color[c] != 0)\n\t\t{\n\t\t\tColor[a] = Color[c] + 1;\n\t\t\tColor[b] = Color[c] + 2;\n\t\t\tif(Color[a] > 3)\n\t\t\t\tColor[a] -= 3;\n\t\t\tif(Color[b] > 3)\n\t\t\t\tColor[b] -= 3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tColor[a] = 1;\n\t\t\tColor[b] = 2;\n\t\t\tColor[c] = 3;\n\t\t}\n\t}\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(i==0)\n\t\tprintf(\"%d\",Color[i]);\n\t\telse\n\t\tprintf(\" %d\",Color[i]);\n\t}\n\treturn 0;\n\n}"}
{"similarity_score": 0.32967032967032966, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "248e90ca0ed2eef287475bdc19657915", "bug_code_uid": "10a00f98f335d0e8405a58c072362c9b", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "ce40ed4a53c44928e59ca8f09fc3b7c5", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid swap(int *x, int *y){\n    int temp;\n    temp = *x;\n    *x = *y;\n    *y = temp;\n}\n\nint main()\n{\n    int n, count = 1;\n    scanf(\"%d\", &n);\n    int stew[n];\n    \n    for(int i = 0; i < n; i++)\n        scanf(\"%d\", stew + i);\n    \n    for(int i = 0; i < n - 1; i++)\n        for(int j = 0; j < n - 1; j++)\n            if(stew[j] > stew[j + 1])\n                swap(stew + j, stew + j + 1);\n\n    for(int i = 0; i < n - 1; i++)\n        if(stew[i] != stew[i + 1])\n            count ++;\n    \n    printf(\"%d\", count - 2);        \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n//Compiler version gcc  6.3.0\n\nint main(){\n  int n;\n  scanf(\"%d\", &n);\n  int stew[n];\n  \n  for(int i = 0; i < n; i++){\n    scanf(\"%d\", stew + i);\n  }\n  \n  int max = stew[0], min = stew[0], count = 0;\n  \n  for(int i = 0; i < n; i++){\n    if(stew[i] > max)\n      max = stew[i];\n    if(stew[i] < min)  \n      min = stew[i];\n  }\n  \n  for(int i = 0; i < n; i++){\n    if(stew[i] == max|| stew[i] == min)\n      count++;\n  }\n  \n  printf(\"%d\", n - count);\n // 1st sem toh nahi banunga kyuli DVM,BoDp dono hainreturn 0;\n}"}
{"similarity_score": 0.9961783439490446, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d3732eceda6af87c12d7043aea26206e", "bug_code_uid": "b678f9818be78a2f27c3db0e690e8075", "src_uid": "fcd88c7b64da4b839cda4273d928429d", "apr_id": "1f018a7354eede81714ae3c1edaee529", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint max(int a, int b);\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int array[1000000];\n    for(int i=0; i<n; i++)\n        scanf(\"%d\", &array[i]);\n    int a, start=0, end, count;\n    if(array[0]==1)\n    {\n        int i=0;\n        while(array[i]==1)\n        {\n            i++;\n            start++;\n        }\n    }\n    if(array[n-1]==1)\n    {\n        int i= n-1;\n        while(array[i]==1)\n        {\n            i--;\n            end++;\n        }\n    }\n    for(int i=0; i<n*2; i++)\n    {\n        if(array[i]==1)\n            count++;\n        a = max(count, a);\n        if(array[i]==0)\n            count = 0;\n    }\n    a = max(a, start+end);\n    printf(\"%d\\n\", a);\n    return 0;\n}\nint max(int a, int b)\n{\n    if(a>=b)\n        return a;\n    else\n        return b;\n}", "fixed": "#include <stdio.h>\nint max(int a, int b);\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int array[1000000] = {0};\n    for(int i=0; i<n; i++)\n        scanf(\"%d\", &array[i]);\n    int a, start=0, end, count;\n    if(array[0]==1)\n    {\n        int i=0;\n        while(array[i]==1)\n        {\n            i++;\n            start++;\n        }\n    }\n    if(array[n-1]==1)\n    {\n        int i= n-1;\n        while(array[i]==1)\n        {\n            i--;\n            end++;\n        }\n    }\n    for(int i=0; i<n*2; i++)\n    {\n        if(array[i]==1)\n            count++;\n        a = max(count, a);\n        if(array[i]==0)\n            count = 0;\n    }\n    a = max(a, start+end);\n    printf(\"%d\\n\", a);\n    return 0;\n}\nint max(int a, int b)\n{\n    if(a>=b)\n        return a;\n    else\n        return b;\n}"}
{"similarity_score": 0.9989082969432315, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "dd2621323b85b48a3a3d56a23764397d", "bug_code_uid": "8ffe0ebbe4f76a625b45bf00828e4e3d", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "d110a4166b61995c78daca70ba923e59", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,sum=0;\n    scanf(\"%d\",&n);\n    char arr[n],res[n];\n    scanf(\"%s\",arr);\n\n    int arr1[n],res1[n];\n    int i=0;\n    for(i=0;i<n;i++)\n    {\n        arr1[i]=(int)arr[i]-48;\n\n    }\n    scanf(\"%s\",res);\n    for(i=0;i<n;i++)\n    {\n        res1[i]=(int)res[i]-48;\n    }\n\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d \",res1[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(res1[i]>arr1[i])\n        {\n            int a=0,b=0;\n            a=res1[i]-arr1[i];\n            b=arr1[i]+(9-res1[i]) + 1;\n            if(a>b)\n                sum=sum+b;\n            else\n                sum = sum+a;\n        }\n        else\n        {\n            int a=0,b=0;\n            a=arr1[i]-res1[i];\n            b=(9-arr1[i])+res1[i]+1;\n            if(a>b)\n                sum=sum+b;\n            else\n                sum=sum+a;\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,sum=0;\n    scanf(\"%d\",&n);\n    char arr[n],res[n];\n    scanf(\"%s\",arr);\n\n    int arr1[n],res1[n];\n    int i=0;\n    for(i=0;i<n;i++)\n    {\n        arr1[i]=(int)arr[i]-48;\n\n    }\n    scanf(\"%s\",res);\n    for(i=0;i<n;i++)\n    {\n        res1[i]=(int)res[i]-48;\n    }\n\n    for(i=0;i<n;i++)\n    {\n        //printf(\"%d \",res1[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(res1[i]>arr1[i])\n        {\n            int a=0,b=0;\n            a=res1[i]-arr1[i];\n            b=arr1[i]+(9-res1[i]) + 1;\n            if(a>b)\n                sum=sum+b;\n            else\n                sum = sum+a;\n        }\n        else\n        {\n            int a=0,b=0;\n            a=arr1[i]-res1[i];\n            b=(9-arr1[i])+res1[i]+1;\n            if(a>b)\n                sum=sum+b;\n            else\n                sum=sum+a;\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.7862232779097387, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "d6e88cee0fc93fcf102bb0b3aea2d2ec", "bug_code_uid": "d0aa9bfe69aa6b97b050dc03a9422607", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "02dc7d3e91acbe3a189297ed3ba2f4f6", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint n,i,j;\n\nint cmpfunc(const void *a, const void * b){\n const int *x = *(const int**) a;\n const int *y = *(const int**) b;\n\n if(x[0]<y[0]){\n    return -1;\n }else if(x[0]>y[0]){\n    return 1;\n }else{\n    return 0;\n }\n}\n\nint cmpfunc2(const void *a, const void * b){\n const int *x = *(const int**) a;\n const int *y = *(const int**) b;\n\n if(x[1]<y[1]){\n    return -1;\n }else if(x[1]>y[1]){\n    return 1;\n }else{\n    return 0;\n }\n}\n\n\nint main(){\n    scanf(\"%d\", &n);\n    int **x;\n\n    x=malloc(n*sizeof(int*));\n\n    for(i=0; i<n; i++){\n        x[i]= malloc(2*sizeof(int));\n        for(j=0; j<2; j++){\n            scanf(\"%d\", &x[i][j]);\n        }\n    }\n\n    qsort(x,n,sizeof(x[0]), cmpfunc2);\n    qsort(x,n,sizeof(int *), cmpfunc);\n    int y=0;\n\n    for(i=0; i<n; i++){\n        if(y<=x[i][1]){\n            y=x[i][1];\n        }else{\n            y=x[i][0];\n        }\n        free(x[i]);\n    }\n    free(x);\n    printf(\"%d\", y);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint n,i,j;\n\nint cmpfunc(const void *a, const void * b){\n const int *x = *(const int**) a;\n const int *y = *(const int**) b;\n\n if(x[0]!=y[0]){\n     return x[0]-y[0];\n }else{\n    return x[1]-y[1];\n }\n}\n\n\nint main(){\n    scanf(\"%d\", &n);\n    int **x;\n\n    x=malloc(n*sizeof(int*));\n\n    for(i=0; i<n; i++){\n        x[i]= malloc(2*sizeof(int));\n        for(j=0; j<2; j++){\n            scanf(\"%d\", &x[i][j]);\n        }\n    }\n\n    qsort(x,n,sizeof(x[0]), cmpfunc);\n    int y=0;\n\n    for(i=0; i<n; i++){\n        if(y<=x[i][1]){\n            y=x[i][1];\n        }else{\n            y=x[i][0];\n        }\n        free(x[i]);\n    }\n    free(x);\n    printf(\"%d\", y);\n    return 0;\n}\n"}
{"similarity_score": 0.9839285714285714, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0e3438f216676e296adf2bc4f2708fb3", "bug_code_uid": "ce4b8369b4e8ab7af1e22630211da9de", "src_uid": "ee3c228cc817536bf6c10ea4508d786f", "apr_id": "f479ca8deb4c524559fb04fcd2a7e29a", "difficulty": 1700, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define max(a,b) ((a) > (b) ? (a) : (b))\n\nlong long int a[5005],dp[5005][5005],n,m,k;\n\nlong long sol(int i, int j)\n{\n\tif(i <= 0 || j <0)\n\t\treturn 0;\n\tif(dp[i][j] != -1)\n\t\treturn dp[i][j];\n\tdp[i][j] = sol(i-1,j);\n\tif(i-m >=0 && j > 0)\n\t\tdp[i][j] = max(dp[i][j],sol(i-m,j-1) + a[i] - a[i-m]);\n}\n\nint main()\n{\n\tscanf(\"%I64d %I64d %I64d\",&n,&m,&k);\n\tint i,j;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%I64d\",a+i);\n\tfor(i=1;i<=n;i++)\n\t\ta[i] += a[i-1];\n\n\tfor(i=0;i<=n;i++)\n\t\tfor(j=0;j<=k;j++)\n\t\t\tdp[i][j] = -1;\n\tprintf(\"%I64d\\n\",sol(n,k));\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define max(a,b) ((a) > (b) ? (a) : (b))\n\nlong long int a[5005],dp[5005][5005],n,m,k;\n\nlong long sol(int i, int j)\n{\n\tif(i <= 0 || j <0)\n\t\treturn 0;\n\tif(dp[i][j] != -1)\n\t\treturn dp[i][j];\n\tdp[i][j] = sol(i-1,j);\n\tif(i-m >=0 && j > 0)\n\t\tdp[i][j] = max(dp[i][j],sol(i-m,j-1) + a[i] - a[i-m]);\n\treturn dp[i][j];\n}\n\nint main()\n{\n\tscanf(\"%I64d %I64d %I64d\",&n,&m,&k);\n\tint i,j;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%I64d\",a+i);\n\tfor(i=1;i<=n;i++)\n\t\ta[i] += a[i-1];\n\n\tfor(i=0;i<=n;i++)\n\t\tfor(j=0;j<=k;j++)\n\t\t\tdp[i][j] = -1;\n\tprintf(\"%I64d\\n\",sol(n,k));\n\treturn 0;\n}"}
{"similarity_score": 0.9089456869009584, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fb57cdd4198541ade265f479cc34103f", "bug_code_uid": "0e684735edfaac71178b0bc2fdeaa4b3", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "284d49d17d296b65e507197b8a6313d8", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,t,i,x=0,f[101]={0};\r\n\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n+1];\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            x=a[i];\r\n            f[x]=f[x]+1;\r\n        }\r\n        for(i=1;i<=100;i++)\r\n        {\r\n            if(f[i]==1)\r\n            {\r\n                x=i;\r\n            }\r\n        }\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            if(a[i]==x)\r\n            {\r\n                printf(\"%d\\n\",i);\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        int n,i,x=0,f[101]={0};\r\n        scanf(\"%d\",&n);\r\n        int a[n+1];\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            x=a[i];\r\n            f[x]=f[x]+1;\r\n        }\r\n        for(i=1;i<=100;i++)\r\n        {\r\n            if(f[i]==1)\r\n            {\r\n                x=i;\r\n            }\r\n        }\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            if(a[i]==x)\r\n            {\r\n                printf(\"%d\\n\",i);\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9415730337078652, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c6189ea494eebbd645fd1e90f39887cc", "bug_code_uid": "485cac8e84839edca27ffc69ea0c2c49", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "abba48f2a6cf38d36062d58b3b5f72b6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x,i,j,c; \n    scanf(\"%d\",&n);\n    j=1;\n    for(i=1;i<n;i++)\n    j=j*2;\n    printf(\"%d\\n\",j);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n                if((i%2==0 && j%2==0) || (i%2==1 && j%2==1))\n                {\n                    printf(\"C\");\n                    \n                }\n                else\n                printf(\".\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,x,i,j,c; \n    scanf(\"%d\",&n);\n    j=n*n;\n    j++;\n    j=j/2;\n    printf(\"%d\\n\",j);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n                if((i%2==0 && j%2==0) || (i%2==1 && j%2==1))\n                {\n                    printf(\"C\");\n                    \n                }\n                else\n                printf(\".\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.4226327944572748, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "25d542d723c928a7e79e9b312efb6a64", "bug_code_uid": "d67bb5f717e6d3c960feb821dc48b364", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "6836a0930ace362868a9e2e775dcf7c4", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],b[n],i,j;\n    scanf(\"%d\",&a[0]);\n    b[0]=a[0];\n    for (i=1; i<n; i++){\n        scanf(\"%d\",&a[i]);\n        if (a[i]>=b[i-1]){\n            b[i]=a[i];\n            for (j=i-1; j>=0 && b[j]<=a[i]; j--){\n                b[j]=a[i]+1;\n            }\n        }\n        else{\n            b[i]=a[i];\n        }\n    }\n    \n    for (i=0; i<n; i++){\n        printf(\"%d \",b[i]-a[i]);\n    }\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],i,b[n];\n    scanf(\"%d\",&a[0]);\n    for (i=1; i<n; i++){\n        scanf(\"%d\",&a[i]);\n    }\n    int max=a[n-1];\n    for (i=n-1; i>=0; i--){\n        b[i]=(max-a[i]>0)?(max-a[i]):0;\n        if (a[i]>=max){\n            max=a[i]+1;\n        }\n    }\n\n    for (i=0; i<n; i++){\n        printf(\"%d \",b[i]);\n    }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9253012048192771, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "19574521ba12e420a78301f0167e99a4", "bug_code_uid": "37f0d6f5dae3f34b4af67e93e36ffdf2", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "bace97a1edf824b856472960e7e66712", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,temp;\n    scanf(\"%d\",&n);\n    int ara[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(ara[j]<ara[i]){\n                temp=ara[i];\n                ara[i]=ara[j];\n                ara[j]=temp;\n            }\n        }\n    }\n    printf(\"%d\",ara[n/2]);\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,temp;\n    scanf(\"%d\",&n);\n    int ara[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(ara[j]<ara[i]){\n                temp=ara[i];\n                ara[i]=ara[j];\n                ara[j]=temp;\n            }\n        }\n    }\n    if(n%2==0)\n       printf(\"%d\",ara[(n/2)-1]);\n    else \n       printf(\"%d\",ara[n/2]);\n    \n}"}
{"similarity_score": 0.9916317991631799, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "491f31a90ec8f3700e003acf46d2dc24", "bug_code_uid": "8b3cd0f3c18d081a8717d62597deffd2", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "941efcab9ac0e050b82bb0eacec1dc90", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n      int t;\n      scanf(\"%d\",&t);\n      for(int i=1;i<=t;i++)\n      {\n            int m,n;\n            scanf(\"%d%d\",&n,&m);\n            if(m%n==0) printf(\"YES\\n\");\n            else printf(\"NO\\n\");\n      }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n      int t;\n      scanf(\"%d\",&t);\n      for(int i=1;i<=t;i++)\n      {\n            int m,n;\n            scanf(\"%d%d\",&m,&n);\n            if(m%n==0) printf(\"YES\\n\");\n            else printf(\"NO\\n\");\n      }\n}\n"}
{"similarity_score": 0.9628252788104089, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c2f8c61c14037c1596239c2eac45c922", "bug_code_uid": "b8cff18d60d38a10863471fce64275f1", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "29be6ef75c06173ae2c6e54a9787d376", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,i,m=0,r=0;\n     scanf(\"%d\",&n);\n     char a[n];\n     \n       for(i=0;i<n+1;i++)\n         scanf(\"%c\",&a[i]);\n          for(i=0;i<n+1;i++)\n          {\n               if(a[i]=='A'||a[i]=='a')\n                  m++;\n                  else if(a[i]=='D'||a[i]=='d')\n                    r++;\n          }\n            printf(\"%d%d\",m,r);\n            if(m>r)\n              printf(\"Anton\");\n              if(r>m)\n               printf(\"Danik\");\n               if(m==r)\n               printf(\"friendship\");\n\t\t\t               \n}", "fixed": "#include<stdio.h>\nint main()\n{\n     int n,i,m=0,r=0;\n     scanf(\"%d\",&n);\n     char a[n];\n       for(i=0;i<n+1;i++)\n         scanf(\"%c\",&a[i]);\n          for(i=0;i<n+1;i++)\n          {\n               if(a[i]=='A'||a[i]=='a')\n                  m++;\n                  else if(a[i]=='D'||a[i]=='d')\n                    r++;\n          }\n            if(m>r)\n              printf(\"Anton\");\n              if(r>m)\n               printf(\"Danik\");\n               if(m==r)\n               printf(\"Friendship\");\n\t\t\t               \n}"}
{"similarity_score": 0.8549121665582303, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "d5a0cc4c0ed72f7ff22e28375a8ced52", "bug_code_uid": "141efc4268742ed64585821aa9e3c1c5", "src_uid": "1aaced1322c47f1908f2bc667bca1dbe", "apr_id": "fdbe1f67b91cee539e64f19ff70401e9", "difficulty": 1500, "tags": ["dsu", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint queue[1100000][3]={0};\n\nint main(){\n    int n,a,b,even,odd,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        queue[a][1]=b;\n        queue[b][0]=a;\n        queue[a][2]++;\n        queue[b][2]++;\n    }\n    for(i=1;i<1100000;i++){\n        if(queue[i][2]==1 && queue[i][0]==0){\n            printf(\"%d\",i);\n            odd=queue[i][1];\n            break;\n        }\n    }\n    even=queue[0][1];\n    for(i=2;i<=n;i++){\n        if(i%2==1){\n            printf(\" %d\",odd);\n            odd=queue[odd][1];\n        }\n        else{\n            printf(\" %d\",even);\n            even=queue[even][1];\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint queue[1100000][3]={0};\n\nint main(){\n    int n,a,b,even,odd,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        queue[a][1]=b;\n        queue[b][0]=a;\n        queue[a][2]++;\n        queue[b][2]++;\n    }\n    if(n==2){\n        printf(\"%d %d\\n\",queue[0][0],queue[0][1]);\n    }\n    else{\n        for(i=1;i<1100000;i++){\n            if(queue[i][2]==1 && queue[i][0]==0){\n                printf(\"%d\",i);\n                odd=queue[i][1];\n                break;\n            }\n        }\n        even=queue[0][1];\n        for(i=2;i<=n;i++){\n            if(i%2==1){\n                printf(\" %d\",odd);\n                odd=queue[odd][1];\n            }\n            else{\n                printf(\" %d\",even);\n                even=queue[even][1];\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9328493647912885, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1faf918adebc12a64aacb31e01501e45", "bug_code_uid": "704a792a2d29c5d4bf4feee0fef9475b", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "917beda63bb133c502551a081acb92b1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    int sum=0,n,h,Loop,i;\n\n    scanf(\"%d%d\",&n,&h);\n\n    for(Loop=0;Loop<n;Loop++)\n    {\n        scanf(\"%d\",&i);\n\n        if(i<=h)\n            sum++;\n        else\n            sum+=2;\n    }\n    printf(\"%d\\n\",sum);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int sum=0,n,h,Loop,i;\n\n    scanf(\"%d%d\",&n,&h);\n\n    for(Loop=0;Loop<n;Loop++)\n    {\n        scanf(\"%d\",&i);\n\n        if(i<=h)\n            sum++;\n        else\n            sum+=2;\n    }\n    printf(\"%d\\n\",sum);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8711743772241993, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c4bce9305ba6609c28fa279f22789bdb", "bug_code_uid": "0382af69754c64c5832eac8919b57ff7", "src_uid": "f4267120fce9304fc4c45142b60fb867", "apr_id": "b73c0b3628787ee333235378bb220d21", "difficulty": 1000, "tags": ["brute force", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,g,k,h;\r\n    scanf(\"%d\",&t);\r\n    while(t){\r\n        scanf(\"%d\",&n);\r\n        int x[n];\r\n        for(int i=0;i<n;i++){\r\n        scanf(\"%d\",&x[i]);\r\n        }\r\n        g=0;\r\n        int l=0;\r\n        for(int i=2;i<=n;i++){\r\n            k=x[n+1-i]-x[n-i];\r\n            if(k>1){ \r\n                g++;\r\n                h=k;\r\n                l=l+k;\r\n            }\r\n            if(g>1) break;\r\n        }\r\n        if(g==0) printf(\"YES\\n\");\r\n        else if (g==1 && h<4) printf(\"YES\\n\");\r\n        else if(g==2 && l==4) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n        t--;\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,g,k,h;\r\n    scanf(\"%d\",&t);\r\n    while(t){\r\n        scanf(\"%d\",&n);\r\n        int x[n];\r\n        for(int i=0;i<n;i++){\r\n        scanf(\"%d\",&x[i]);\r\n        }\r\n        g=0;\r\n        int l=0;\r\n        for(int i=2;i<=n;i++){\r\n            k=x[n+1-i]-x[n-i];\r\n            if(k>1){ \r\n                g++;\r\n               if(k>3) {\r\n                   printf(\"NO\\n\");\r\n                   goto boom;\r\n               }\r\n                l=l+k;\r\n            }\r\n        }\r\n        if(g==0) printf(\"YES\\n\");\r\n        else if(g>2) printf(\"NO\\n\");\r\n        else if(g==1 && k<4) printf(\"YES\\n\");\r\n        else if(g==2 && l==4) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n        boom:\r\n        t--;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9504950495049505, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b4987222726c91841bba6d40848f8ed5", "bug_code_uid": "9fb8738f27d4394c59391de0f8894492", "src_uid": "65eb0f3ab35c4d95c1cbd39fc7a4227b", "apr_id": "975032d296136a124576eabac52294d1", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,m,k,r[1000],c[1000],i,j,t,sum=0;\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for(i=0;i<n;i++)\n    scanf(\"%d %d\",&r[i],&c[i]);\n    for(i=0;i<n-1;i++)\n    for(j=i+1;j<n;j++)\n    if(r[i]>r[j]) {t=r[i];r[i]=r[j];r[j]=t;t=c[i];c[i]=c[j];c[j]=t;}\n\n\n\n    for(i=0;i<n;i++)\n    {\n        if(i==n-1) sum+=c[n-1];\n        else\n        {if(r[i]==r[i+1]);\n         else sum+=c[i];}\n    }\n    if(sum>k)\n    printf(\"%d\",k);\n    else\n    printf(\"%d\",sum);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,m,k,r[1000],c[1000],i,j,t,sum=0;\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for(i=0;i<n;i++)\n    scanf(\"%d %d\",&r[i],&c[i]);\n    for(i=0;i<n-1;i++)\n    for(j=i+1;j<n;j++)\n    if(r[i]>r[j]) {t=r[i];r[i]=r[j];r[j]=t;t=c[i];c[i]=c[j];c[j]=t;}\n\n\n\n    for(i=0;i<n;i++)\n    {\n        if(i==n-1) sum+=c[n-1];\n        else\n        {if(r[i]==r[i+1]) {if(c[i]<c[i+1]) {t=c[i];c[i]=c[i+1];c[i+1]=t;}}\n         else sum+=c[i];}\n    }\n    if(sum>k)\n    printf(\"%d\",k);\n    else\n    printf(\"%d\",sum);\nreturn 0;\n}\n"}
{"similarity_score": 0.9917355371900827, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "813adc1efae3b58a62b35403728db411", "bug_code_uid": "cc0d2272c82554448007f1565fdf64df", "src_uid": "b4b69320c6040d2d264ac32e9ba5196f", "apr_id": "6dac7cb2cca547e314861ebbf8caf14b", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\nlong long sum;\n\nint main()\n{\n\tint t;\n\tlong n,k;\n\tlong i,j;\n\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tsum=0;\n\t\tscanf(\"%ld\",&n);\n\t\tfor(i=1;i<=n;i=i+2)\n\t\t{\n\t\t\tsum=sum+(i-1)*(i-1);\n\t\t}\n\t\tsum=sum*2;\n\t\tprintf(\"%lld\\n\",sum);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\nlong long sum;\n\nint main()\n{\n\tint t;\n\tlong n,k;\n\tlong long i,j;\n\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tsum=0;\n\t\tscanf(\"%ld\",&n);\n\t\tfor(i=1;i<=n;i=i+2)\n\t\t{\n\t\t\tsum=sum+(i-1)*(i-1);\n\t\t}\n\t\tsum=sum*2;\n\t\tprintf(\"%lld\\n\",sum);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9823623730625334, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f0460469b9319511df25a08ed5ca2c10", "bug_code_uid": "4fb32b70b236a41a81d989aa61b5c1a4", "src_uid": "a544dd9fd96379f66a960de6f973dd50", "apr_id": "1e7318952586b7a52429ff7eb9614845", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int t,n,c,max,min;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {   c=0;\r\n        scanf(\"%d\",&n);\r\n        int* a=(int*)malloc(n*sizeof(int));\r\n        for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        for(int i=0;i<n-1;i++)\r\n        { \r\n            if(a[i]>a[i+1])\r\n            {   \r\n                max=a[i];\r\n                min=a[i+1];\r\n            }\r\n            else\r\n            {\r\n                max=a[i+1];\r\n                min=a[i];\r\n            }\r\n               while(max>min*2)\r\n               {\r\n                   if(max%2==1)\r\n                   {\r\n                       max=(max/2)+1;\r\n                       c++;\r\n                   }\r\n                   else\r\n                   {\r\n                       max=max/2;\r\n                       c++;\r\n                   }\r\n               }\r\n            \r\n        }\r\n        printf(\"%d\\n\",c);\r\n    }\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t,n,c,max,min;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {   c=0;\r\n        scanf(\"%d\",&n);\r\n        int* a=(int*)malloc(n*sizeof(int));\r\n        for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        for(int i=0;i<n-1;i++)\r\n        { \r\n            if(a[i]>a[i+1])\r\n            {   \r\n                max=a[i];\r\n                min=a[i+1];\r\n            }\r\n            else\r\n            {\r\n                max=a[i+1];\r\n                min=a[i];\r\n            }\r\n               while(max>min*2)\r\n               {\r\n                   if(max%2==1)\r\n                   {\r\n                       max=(max/2)+1;\r\n                       c++;\r\n                   }\r\n                   else\r\n                   {\r\n                       max=max/2;\r\n                       c++;\r\n                   }\r\n               }\r\n            \r\n        }\r\n        printf(\"%d\\n\",c);\r\n    }\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.3412587412587413, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c25b2addf1203f0acfdec60d366b1c5c", "bug_code_uid": "c1f9d9bbd9516d64a86778cf9e9d1dc2", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "2b3e1958d1699d91cacc88048c78195e", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char ch[1000000];\n    scanf(\"%s\",ch);\n    int n;\n    int a,b;\n    scanf(\"%d\",&n);\n    int i,j,cnt=0;\n    for(i=0;i<n;++i)\n    {\n        cnt=0;\n        scanf(\"%d%d\",&a,&b);\n        for(j=a-1;j<b-1;++j)\n        {\n            if(ch[j]==ch[j+1])\n            cnt++;\n        }\n        printf(\"%d\\n\",cnt);\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    char str[100001];\n    int DP[100000];\n    scanf(\"%s\",str);\n    int count=0,m;\n    int a,b;\n    for(int i=1;str[i]!='\\0';i++){\n        if(str[i]==str[i-1]){\n            count++;\n        }\n        DP[i]=count;\n    }\n    scanf(\"%d\",&m);\n    while(m--){\n        scanf(\"%d%d\",&a,&b);\n        printf(\"%d\\n\",DP[b-1]-DP[a-1]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.4600280504908836, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "f03ee142959c27f993d01addd0b9b1cc", "bug_code_uid": "0544b6eb7908f54fe42091263465d5b5", "src_uid": "ac4aac095e71cbfaf8b79262d4038095", "apr_id": "7ebac1a5f4e44cb50ddbed2491f06412", "difficulty": 1200, "tags": ["data structures", "hashing", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nlong long HASH[200001];\r\nint main()\r\n{\r\n  long long t,n,i,j,arr[200001],arr1[200001];\r\n  scanf(\"%lld\",&t);\r\n  while(t--)\r\n  {\r\n    scanf(\"%lld\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      scanf(\"%lld\",&arr[i]);\r\n      arr1[i]=arr[i]-i;\r\n      HASH[arr1[i]]++;\r\n    }\r\n    long long sum=0;\r\n    for(i=0;i<n;i++)\r\n    {\r\n      sum=sum+(HASH[arr1[i]]*(HASH[arr1[i]]-1))/2;\r\n      HASH[arr1[i]]=0;\r\n    }\r\n    printf(\"%lld\\n\",sum);\r\n  }\r\n  return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint compare(const void* a,const void* b)\r\n{\r\n  long long x=*((long long*)a);\r\n  long long y=*((long long*)b);\r\n  if(x==y){return 0;}\r\n  else if(x>y){return 1;}\r\n  else{return -1;}\r\n}\r\nint main()\r\n{\r\n  long long t,n,i,j,arr[200001],arr1[200001],count[200001],counti=0,sum;\r\n  scanf(\"%lld\",&t);\r\n  while(t--)\r\n  {\r\n    sum=0;\r\n    counti=0;\r\n    int k=0;\r\n    scanf(\"%lld\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      scanf(\"%lld\",&arr[i]);\r\n      arr1[i]=arr[i]-i;\r\n    }\r\n    qsort(arr1,n,sizeof(long long),compare);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      if(arr1[i]==arr1[i+1])\r\n      {\r\n        counti++;\r\n      }\r\n      else\r\n      {\r\n        count[k++]=counti+1;\r\n        counti=0;\r\n      }\r\n    }\r\n    count[k++]=counti;\r\n    for(i=0;i<k;i++)\r\n    {\r\n      if(count[i]>0)\r\n      {\r\n      sum=sum+(count[i]*(count[i]-1))/2;\r\n      }\r\n      count[i]=0;\r\n    }\r\n    printf(\"%lld\\n\",sum);\r\n  }\r\n  return 0;\r\n}"}
{"similarity_score": 0.988929889298893, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "88ac889d1d4da5f72300fe97b7704d1c", "bug_code_uid": "2f901dd050bba7c42e010bf22c8a1176", "src_uid": "8e36566b5e0c74730ea118e23b030778", "apr_id": "5b99fe4c1ad82c3e5885cde9ccb73b22", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    long long int n,k,i,j,z,x;\n    scanf(\"%I64d%I64d\", &n,&k);\n    for(i=0;i<k;i++)\n    {\n        scanf(\"%I64d\", &x);\n        if(i==0) {j=i;k=n%x;z=x;}\n        if(n%x < k) {k=n%x;j=i;z=x;}\n    }\n    printf(\"%I64d %I64d\", j+1,n/z);\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    long long int n,k,y,i,j,z,x;\n    scanf(\"%I64d%I64d\", &n,&y);\n    for(i=0;i<y;i++)\n    {\n        scanf(\"%I64d\", &x);\n        if(i==0) {j=i;k=n%x;z=x;}\n        if(n%x < k) {k=n%x;j=i;z=x;}\n    }\n    printf(\"%I64d %I64d\", j+1,n/z);\n}\n"}
{"similarity_score": 0.41445783132530123, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "7b438c207df5451254474b7020bc86fa", "bug_code_uid": "706ed27aa001f2489e8ee66c4dd56790", "src_uid": "d324617c86423d86cdcb839894e00e1a", "apr_id": "4c1c4eb79ab878ecf3f68ccb87bd8cbf", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,s[1005],d[1005],s1,i,j;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&s[i],&d[i]);\n    }\n    s1=s[1];\n    for(i=2;i<=n;i++)\n    {\n        if(s[i]<s1)\n        {\n            for(j=1;j<=d[i];j++)\n                if(s[i]+j>s1)\n                {\n                    s1=s[i]+j;\n                    break;\n                }\n        }\n        else s1=s[i];\n\n    }\n    printf(\"%d\",s1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,s,d,s1,i,j;\n    scanf(\"%d\",&n);\n    s1=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&s,&d);\n        if(s1<s) s1=s;\n        else\n        {\n            while(s<=s1)\n            {\n                s=s+d;\n            }\n            s1=s;\n        }\n    }\n\n    printf(\"%d\",s1);\n    return 0;\n}\n"}
{"similarity_score": 0.990234375, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "141ff009e2a33364cbcddd44dc83a184", "bug_code_uid": "7d3048c40649119263f12ca9dcf97490", "src_uid": "c7822bc38322c9596cc020848fc03f46", "apr_id": "3725e4ffec0430bcb88222dbcca9754a", "difficulty": 2000, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint a[100000][2];\nint b[100000],c[100000];\nint r[200000][2];\nint n;\n\nint cmp(const void *a,const void *b) {\n\treturn *(int *)a-*(int *)b;\n}\n\nint lucky(int n) {\n\tif (!n) return 1;\n\telse if (n%10!=4 && n%10!=7) return 0;\n\telse return lucky(n/10);\n}\n\nvoid swap(int i,int j) {\n\tint t;\n\tt=b[i],b[i]=b[j],b[j]=t;\n\tc[b[i]]=i,c[b[j]]=j;\n}\n\nint main() {\n\tint i,j,cnt;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++) scanf(\"%d\",&a[i][0]),a[i][1]=i;\n\tfor(i=0;i<n-1;i++) if (a[i]>a[i+1]) break;\n\tif (i>=n-1) {\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\tqsort(a,n,sizeof(a[0]),cmp);\n\tfor(i=0;i<n;i++) if (lucky(a[i][0])) break;\n\tif (i<n) {\n\t\tcnt=0;\n\t\tfor(j=0;j<n;j++) b[j]=c[j]=j;\n\t\tfor(j=0;j<n;j++) if (j!=i) {\n\t\t\tif (j!=c[a[i][1]]) {\n\t\t\t\tr[cnt][0]=c[a[i][1]],r[cnt][1]=j,cnt++;\n\t\t\t\tswap(c[a[i][1]],j);\n\t\t\t}\n\t\t\tif (j!=c[a[j][1]]) {\n\t\t\t\tr[cnt][0]=j,r[cnt][1]=c[a[j][1]],cnt++;\n\t\t\t\tswap(j,c[a[j][1]]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",cnt);\n\t\tfor(i=0;i<cnt;i++) printf(\"%d %d\\n\",r[i][0]+1,r[i][1]+1);\n\t} else puts(\"-1\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint a[100000][2];\nint b[100000],c[100000];\nint r[200000][2];\nint n;\n\nint cmp(const void *a,const void *b) {\n\treturn *(int *)a-*(int *)b;\n}\n\nint lucky(int n) {\n\tif (!n) return 1;\n\telse if (n%10!=4 && n%10!=7) return 0;\n\telse return lucky(n/10);\n}\n\nvoid swap(int i,int j) {\n\tint t;\n\tt=b[i],b[i]=b[j],b[j]=t;\n\tc[b[i]]=i,c[b[j]]=j;\n}\n\nint main() {\n\tint i,j,cnt;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++) scanf(\"%d\",&a[i][0]),a[i][1]=i;\n\tfor(i=0;i<n-1;i++) if (a[i+1][0]<a[i][0]) break;\n\tif (i>=n-1) {\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\tqsort(a,n,sizeof(a[0]),cmp);\n\tfor(i=0;i<n;i++) if (lucky(a[i][0])) break;\n\tif (i<n) {\n\t\tcnt=0;\n\t\tfor(j=0;j<n;j++) b[j]=c[j]=j;\n\t\tfor(j=0;j<n;j++) if (j!=i) {\n\t\t\tif (j!=c[a[i][1]]) {\n\t\t\t\tr[cnt][0]=c[a[i][1]],r[cnt][1]=j,cnt++;\n\t\t\t\tswap(c[a[i][1]],j);\n\t\t\t}\n\t\t\tif (j!=c[a[j][1]]) {\n\t\t\t\tr[cnt][0]=j,r[cnt][1]=c[a[j][1]],cnt++;\n\t\t\t\tswap(j,c[a[j][1]]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",cnt);\n\t\tfor(i=0;i<cnt;i++) printf(\"%d %d\\n\",r[i][0]+1,r[i][1]+1);\n\t} else puts(\"-1\");\n\treturn 0;\n}"}
{"similarity_score": 0.9512195121951219, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e6006af82c457ba11bfadc02ed3bcf87", "bug_code_uid": "8878b3a129b1f178dd7e42037678da30", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "c316aa59d9b6aa575ad7e8a345cf7fd8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\nint n,i,j,c=0,d=0;\nscanf(\"%d\",&n);\nint a[i][2];\nfor (i=0;i<=n-1;i++)\n{\n for (j=0;j<=1;j++)\n{\n  scanf(\"%d\",&a[i][j]);\n}\n}\nfor (i=0;i<=n-1;i++)\n{\nif (a[i][0]>a[i][1])\n{c=c+1;}\nelse if (a[i][0]<a[i][1])\n{d=d+1;}\nelse\n{c=c;\nd=d;\n}\n}\nif (c>d)\nprintf(\"Mishka\");\nelse if (c<d)\nprintf(\"Chris\");\nelse\nprintf(\"Friendship is magic!^^\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\nint n,i,j,c=0,d=0,e=0;\nscanf(\"%d\",&n);\nint a[101][2];\nfor (i=0;i<=n-1;i++)\n{\n for (j=0;j<=1;j++)\n{\n  scanf(\"%d\",&a[i][j]);\n}\n}\nfor (i=0;i<=n-1;i++)\n{\nif (a[i][0]>a[i][1])\n{c=c+1;}\nelse if (a[i][0]<a[i][1])\n{d=d+1;}\n}\nif (c>d)\nprintf(\"Mishka\");\nelse if (c<d)\nprintf(\"Chris\");\nelse if (c==d)\nprintf(\"Friendship is magic!^^\");\nreturn 0;\n}\n"}
{"similarity_score": 0.8584656084656085, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "5b328161e051bccbc19b6b460cdf07e0", "bug_code_uid": "de2fd5ee07f0ffffe78228466bb46ffe", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "d38389fc49789a187fd3aeade13802d8", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long a[6000005],b[6000005],x[6000005],y[6000005];\nint main()\n{\n  long long n,i,sum=0,k,c,l;\n  scanf(\"%I64d\",&n);\n  for(i=0;i<n;i++)\n  {\n      scanf(\"%I64d\",&a[i]);\n      sum=sum+a[i];\n      b[i]=a[i];\n\n  }\n  k=sum/3;l=2*k;\n  for(i=1;i<n;i++)\n  {\n      b[i]=b[i-1]+b[i];\n  }\n  long long c1=0,c2=0;\n  for(i=0;i<n;i++)\n  {\n      if(b[i]==k) c1++;\n      if(b[i]==l) c2++;\n  }\n //printf(\"%I64d\",c1*c2);\n\n if (sum==0) {c1--;c2--;}\n for(i=0;i<n;i++)\n {\n     //if(b[i]==k) {x[i]=c1;c1--;}\n     if(b[i]==l) {c2--;y[i]=c2;if(y[i]<0) y[i]=0;}\n      else\n      {y[i]=c2;\n      if(y[i]<0) y[i]=0;}\n }\n sum=0;\n \n  for(i=0;i<n;i++)\n  {\n    if(b[i]==k) sum=sum+y[i];\n  }\n  printf(\"%I64d\",sum);\n\n return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long a[6000005],b[6000005],x[6000005],y[6000005];\nint main()\n{\n  long long n,i,sum=0,k,c,l;\n  scanf(\"%I64d\",&n);\n  for(i=0;i<n;i++)\n  {\n      scanf(\"%I64d\",&a[i]);\n      sum=sum+a[i];\n      b[i]=a[i];\n\n  }\n  if(sum%3!=0)\n  printf(\"0\");\n  else{\n  k=sum/3;l=2*k;\n\n  for(i=1;i<n;i++)\n  {\n      b[i]=b[i-1]+b[i];\n  }\n  long long c1=0,c2=0;\n  for(i=0;i<n;i++)\n  {\n      if(b[i]==k) c1++;\n      if(b[i]==l) c2++;\n  }\n //printf(\"%I64d\",c1*c2);\n\n if (sum==0) {c1--;c2--;}\n for(i=0;i<n;i++)\n {\n     //if(b[i]==k) {x[i]=c1;c1--;}\n     if(b[i]==l) {c2--;y[i]=c2;if(y[i]<0) y[i]=0;}\n      else\n      {y[i]=c2;\n      if(y[i]<0) y[i]=0;}\n }\n sum=0;\n //for(i=0;i<n;i++) printf(\"%I64d\\n\",y[i]);\n  for(i=0;i<n;i++)\n  {\n    if(b[i]==k) sum=sum+y[i];\n  }\n  printf(\"%I64d\",sum);}\n\n return 0;\n}\n"}
{"similarity_score": 0.8762376237623762, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "85a3e9307b2a26aeb52a500332d254b0", "bug_code_uid": "7d6b55427da90b97ed9a6fc9c94b3566", "src_uid": "310a0596c0a459f496b8d6b57676d25e", "apr_id": "5b71f303317cb98fa5b4d2f7a01a9102", "difficulty": 1400, "tags": ["data structures", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n\tint n,i,j,br=1;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;++i) scanf(\"%d\",&a[i]);\n\n\tfor(i=n-2;i>=0;--i) if(a[i]>a[i+1])br++;\n\tprintf(\"%d\",n-br);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(void)\n{\n\tint n,i,j,br=1;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;++i) scanf(\"%d\",&a[i]);\n\n\tfor(i=n-2;i>=0;--i)\n\t\tif(a[i+1]>a[i])br++;\n\t\telse break;\n\t\n\tprintf(\"%d\",n-br);\n\treturn 0;\n}"}
{"similarity_score": 0.1312, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "52186d223d8907c482796d9be6e00608", "bug_code_uid": "02381d11bee5d16ef882a922c8ec3dc8", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "6f01d7045703e9e9b921340a7e6995ad", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong n,k,a[100005],b[100005],d=0,c=0;\n\tscanf(\"%ld%ld\",&n,&k);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%ld\",&a[i]);\n\tfor(int j=0;j<n;j++)\n\t\tfor(d=0;d<=j;d++,c++)\n\t\t\tb[c]=a[d];\t\n\tprintf(\"%ld\\n\",b[k-1]);\n\treturn 0;\n}", "fixed": " #include<stdio.h>   \nint main()  \n{  \n    long n,k,i,j,t,sum=0;  \n    long a[100005]={0};  \n    scanf(\"%ld %ld\",&n,&k);  \n    for(i=1;i<=n;i++)  \n    {  \n        scanf(\"%ld\",&a[i]);  \n    }  \n        \n     for(i=0;i<=n;i++)  \n      {  \n      if((sum+i)>=k)  \n          break;  \n      else  \n         sum+=i;  \n      }  \n          \n      printf(\"%ld\",a[k-sum]);  \n     return 0;  \n    }   "}
{"similarity_score": 0.9906832298136646, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "fd7d87eed110a2dc4ec3eb0ea18e289f", "bug_code_uid": "49ecafeda55f9ef9e8844db880b24a42", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "8c8b48902ea65c058145df01214e60e4", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n&&i+2<n;i++){\n        if((a[i]%2==0&&a[i+1]%2!=0&&a[i+2]!=0)||(a[i]%2!=0&&a[i+1]%2==0&&a[i+2]==0)){\n            printf(\"%d\",i+1);\n            break;\n        }\n        else if((a[i]%2!=0&&a[i+1]%2==0&&a[i+2]!=0)||(a[i]%2==0&&a[i+1]%2!=0&&a[i+2]==0)){\n            printf(\"%d\",(i+1)+1);\n            break;\n        }\n        else if((a[i]%2!=0&&a[i+1]%2!=0&&a[i+2]==0)||(a[i]%2==0&&a[i+1]%2==0&&a[i+2]!=0)){\n            printf(\"%d\",(i+2)+1);\n            break;\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n&&i+2<n;i++){\n        if((a[i]%2==0&&a[i+1]%2!=0&&a[i+2]%2!=0)||(a[i]%2!=0&&a[i+1]%2==0&&a[i+2]%2==0)){\n            printf(\"%d\",i+1);\n            break;\n        }\n        else if((a[i]%2!=0&&a[i+1]%2==0&&a[i+2]%2!=0)||(a[i]%2==0&&a[i+1]%2!=0&&a[i+2]%2==0)){\n            printf(\"%d\",(i+1)+1);\n            break;\n        }\n        else if((a[i]%2!=0&&a[i+1]%2!=0&&a[i+2]%2==0)||(a[i]%2==0&&a[i+1]%2==0&&a[i+2]%2!=0)){\n            printf(\"%d\",(i+2)+1);\n            break;\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9779951100244498, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cef626a566798f51c2148db79c13d5fc", "bug_code_uid": "e477734c4fb76424a88359daa5b8a418", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "42507484b97345fdef11b34a03775498", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAXN 10002\n\nint num[MAXN];\nint main()\n{\n\tint h1,a1,c1;\n\tint h2,a2,i,j;\n\tscanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n\tfor(i=0;h2>0;i++)\n\t{\n\t\tif(h1>a2)\n\t\t{\n\t\t\tnum[i]=1;\n\t\t\th1=h1-a2;\n\t\t\th2=h2-a1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnum[i]=0;\n\t\t\th1=h1+c1-a2;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",i);\n\tfor(j=0;j<i;j++)\n\t{\n\t\tif(num[j]==0)\n\t\tprintf(\"HEAL\\n\");\n\t\telse\n\t\tprintf(\"STRIKE\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define MAXN 10002\n\nint num[MAXN];\nint main()\n{\n\tint h1,a1,c1;\n\tint h2,a2,i,j;\n\tscanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n\tfor(i=0;h2>0;i++)\n\t{\n\t\tif(h1>a2||(h1<=a2&&h2<=a1))\n\t\t{\n\t\t\tnum[i]=1;\n\t\t\th1=h1-a2;\n\t\t\th2=h2-a1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnum[i]=0;\n\t\t\th1=h1+c1-a2;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",i);\n\tfor(j=0;j<i;j++)\n\t{\n\t\tif(num[j]==0)\n\t\tprintf(\"HEAL\\n\");\n\t\telse\n\t\tprintf(\"STRIKE\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8413205537806177, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "515fb2644bb7e737194ca09a34f37050", "bug_code_uid": "dd1bd7f738e7c7985f8733a7cbb31b48", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "6b8f703b667d94c87682decaafe341cc", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#define ll long long\r\nint main(void)\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    if (T<1 || T>104){return 1;}\r\n    while(T--)\r\n    {\r\n        int a,b;\r\n        scanf(\"%d %d\",&a,&b);\r\n        if(a==0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            int k=a*1+b*2+1;\r\n            printf(\"%d\\n\",k);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#define ll long long\r\nint main(void)\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    if (T<1 || T>10000){return 1;}\r\n    while(T--)\r\n    {\r\n        long long int a,b;\r\n        long long int k=1;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        while(a<0||b<0)\r\n        {\r\n            return 1;\r\n        }\r\n        if(a==0)\r\n        {\r\n            printf(\"%lld\\n\",k);\r\n        }\r\n        if(a!=0) \r\n        {\r\n            k+=(a*1+b*2);\r\n            printf(\"%lld\\n\",k);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9900793650793651, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "dc676109a4ffe5c9f4d152a01ff89b61", "bug_code_uid": "d89ffa542f5f1ee575c1b4ed3c562bba", "src_uid": "f48ddaf1e1db5073d74a2aa318b46704", "apr_id": "61e837747a2bc0a93d84111115a4e391", "difficulty": 1200, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define M 100\nint main(void){\n    int n,i,j,max,count,pos;\n    char s[M][M];\n    scanf(\"%d\",&n);\n    if(n<1||n>M)\n        return -1;\n    for(i=0; i<n; i++){\n        scanf(\"%s\",s[i]);\n    }\n    max=0;\n    for(i=0; i<n-1; i++){\n        count=1;\n        for(j=i+1; j<n; j++){\n            if(strcmp(s[i],s[j])==0)\n                count++;\n        }\n        if(max<count){\n            max=count;\n            //pos=i;\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define M 100\nint main(void){\n    int n,i,j,max,count,pos;\n    char s[M][M+1];\n    scanf(\"%d\",&n);\n    if(n<1||n>M)\n        return -1;\n    for(i=0; i<n; i++){\n        scanf(\"%s\",s[i]);\n    }\n    max=0;\n    for(i=0; i<n; i++){\n        count=0;\n        for(j=0; j<n; j++){\n            if(strcmp(s[i],s[j])==0)\n                count++;\n        }\n        if(max<count){\n            max=count;\n            //pos=i;\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.8281750266808965, "equal_cnt": 13, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 10, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "db6a538a58f546b5f19c58944a54e09c", "bug_code_uid": "904598bb59abf90bf26f4203b02ac6c8", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "44174f4b6b28aa606e4cbc432dd99cb6", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n\nint main(){\nint a[1000];\nint i,j,k,m,n,t[60],g[60],p,q;\nwhile(scanf(\"%d %d\",&n,&m)){\n        for(i=0;i<60;i++)g[i]=0;\n         j=0;\n         q=n;\n    while(n--){\n    scanf(\"%d\",&t[j]);\n    for(i=0;i<t[j];i++)scanf(\"%d\",&a[i]);\n        j++;\n    }\n    k=0;\n    for(i=0;i<q;i++)for(j=0;j<t[i];j++)if(a[j]<m)g[k++]=i+1;\n    p=0;\n    for(i=0;i<k;i++){\n            if(g[i]&&i!=k-1){\n            printf(\"%d \",g[i]);\n            }\n            else if(g[i]&&i==k-1)printf(\"%d\\n\",g[i]);\n            if(!g[i])p++;\n}\nif(p==k)printf(\"0\\n\");\n\n\n\n}\n    return 0;\n\n}\n\n\n                                                                                                                                                                                                                             ", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n\nint main(){\nint a[100][100];\nint i,j,k,m,n,t[60],g[60],p,q,r;\nwhile(scanf(\"%d %d\",&n,&m)==2){\n        for(i=0;i<60;i++)g[i]=0;\n         j=0;\n         q=n;\n          r=0;\n    while(n--){\n    scanf(\"%d\",&t[j]);\n\n    for(i=0;i<t[j];i++)scanf(\"%d\",&a[r][i]);\n        r++;\n        j++;\n    }\n    k=0;\n    for(i=0;i<q;i++)for(j=0;j<t[i];j++)if(a[i][j]<m){\n            g[k++]=i+1;\n            break;\n    }\n    p=0;\n    for(i=0;i<k;i++){\n            if(!g[i])p++;\n}\n if(p==k){\n        printf(\"0\\n\");\n        continue;\n }\n else printf(\"%d\\n\",k);\n\n    for(i=0;i<k;i++){\n            if(g[i]&&i!=k-1){\n            printf(\"%d \",g[i]);\n            }\n            else if(g[i]&&i==k-1)printf(\"%d\\n\",g[i]);\n}\n\n\n\n}\n    return 0;\n\n}\n\n\n                                                                                                                                                                                                                                                                                   "}
{"similarity_score": 0.9574700109051254, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "2c94e553afeabf4aba35eb956e73b98e", "bug_code_uid": "adb60e1eebf615c4565712d9f1c5f298", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "31aef4000e3040158d8255ed71bf0758", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "  #include<stdio.h>\r\nint main(){\r\nint t,n;\r\nscanf(\"%d\",&t);\r\nint a[10000];\r\nint i=0,j,cnt=0,cnt1=0;\r\nwhile(t--)\r\n{\r\n    scanf(\"%d\",&n);\r\n\r\n    for(j=0;j<n;j++)\r\n    {\r\n        scanf(\"%d\",&a[j]);\r\n\r\n        if(a[j]%2==0)\r\n        {\r\n            cnt++;\r\n\r\n        }\r\n        else\r\n        {\r\n            cnt1++;\r\n\r\n        }\r\n    }\r\n    if(cnt<cnt1){\r\n   printf(\"%d\\n\",cnt);\r\n    }\r\nelse{\r\n    printf(\"%d\\n\",cnt1);\r\n}\r\ncnt=0;\r\ncnt1=0;\r\n\r\n}\r\n\r\nreturn 0;\r\n}\r\n", "fixed": " #include<stdio.h>\r\nint main(){\r\nint t,n;\r\nscanf(\"%d\",&t);\r\nint i=0,j,cnt=0,cnt1=0;\r\nwhile(t--)\r\n{\r\n    scanf(\"%d\",&n);\r\n      int a[n];\r\n    for(j=0;j<n;j++)\r\n    {\r\n        scanf(\"%d\",&a[j]);\r\n\r\n        if(a[j]%2==0)\r\n        {\r\n            cnt++;\r\n\r\n        }\r\n        else\r\n        {\r\n            cnt1++;\r\n\r\n        }\r\n    }\r\n    if(cnt<cnt1){\r\n   printf(\"%d\\n\",cnt);\r\n    }\r\n\r\nelse{\r\n    printf(\"%d\\n\",cnt1);\r\n}\r\ncnt=0;\r\ncnt1=0;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9076592698639943, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "00633aa969aa24f496ee4fe840b7ca4f", "bug_code_uid": "db6ca832d8db973eeadd3bbc78cc606a", "src_uid": "5c33d1f970bcc2ffaea61d5407b877b2", "apr_id": "e9a212dc9acd4ff6f9cd353ec0028b84", "difficulty": 1100, "tags": ["sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n,p=0;\n    scanf(\"%d\",&n);\n    char s[n][101],c[101];\n    for(i=0;i<n;i++) scanf(\"%s\",s[i]);\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(strlen(s[i])>strlen(s[j]))\n            {\n                strcpy(c,s[i]);\n                strcpy(s[i],s[j]);\n                strcpy(s[j],c);\n            }\n        }\n    }\n    for(i=0;i<n-1;i++)\n    {\n        if (strstr(s[i], s[i+1]) == NULL)\n        {\n            p=1;\n            break;\n        }\n    }\n    if(p==0){\n            printf(\"YES\\n\");\n    for(i=0;i<n;i++)\n        printf(\"%s\\n\",s[i]);\n    }\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,n,p=0;\n    scanf(\"%d\",&n);\n    char s[n][101],c[101],c1[101];\n    for(i=0;i<n;i++) scanf(\"%s\",s[i]);\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(strlen(s[i])>strlen(s[j]))\n            {\n                strcpy(c,s[i]);\n                strcpy(s[i],s[j]);\n                strcpy(s[j],c);\n            }\n        }\n    }\n    for(i=0;i<n-1;i++)\n    {\n        strcpy(c,s[i]);\n        strcpy(c1,s[i+1]);\n        if (!(strstr(c1,c)))\n        {\n            p=1;\n            break;\n        }\n    }\n    if(p==0){\n            printf(\"YES\\n\");\n    for(i=0;i<n;i++)\n        printf(\"%s\\n\",s[i]);\n    }\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.5474452554744526, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4e2d65bad7bf80516bac56f06dae1922", "bug_code_uid": "66c6f832547f501e69e27fe36757322c", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "535538f98953e5cab830d4d59d7755a7", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    printf(\"%d\",a[0]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,c;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    int j,sawp=0;\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(a[i]<a[j])\n            {\n                sawp=a[i];\n                a[i]=a[j];\n                a[j]=sawp;\n            }\n        }\n    }\n    c=n/2;\n    printf(\"%d\",a[c]);\n}\n"}
{"similarity_score": 0.15848214285714285, "equal_cnt": 24, "replace_cnt": 13, "delete_cnt": 9, "insert_cnt": 2, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "723b220db1e5ae764fe03fa1ff5e9b3d", "bug_code_uid": "04b1ad5338e3e3cceb14a88a98b5aa55", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "f576898aa00916516ddf9f50676669f6", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n    if( *(long long int*)a - *(long long int*)b < 0 )\n        return -1;\n    if( *(long long int*)a - *(long long int*)b > 0 )\n        return 1;\n    if( *(long long int*)a - *(long long int*)b == 0 )\n        return 0;\n}\n\nlong cnt[100005];\n\nint main(){\n    long n, x, ans = 0;\n    scanf(\"%ld %ld\", &n, &x);\n    long arr[n];\n    for (long i = 0; i < n; i++) {\n        scanf(\"%ld\", &arr[i]);\n        cnt[arr[i]]++;\n    }\n    for (long i = 0; i < n; i++){\n        long tmp = arr[i] ^ x;\n        if (cnt[tmp]) ans++;\n    }\n    ans /= 2;\n    printf(\"%ld\\n\", ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint v[1500010];\nint main(){\n\tint i,l,n,x;\n\tlong long int r;\n\tscanf(\"%d%d\",&n,&x);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&l);\n\t\tr=r+v[l^x];\n\t\tv[l]++;\n\t}\n\tprintf(\"%I64d\",r);\n\treturn 0;\n}"}
{"similarity_score": 0.8807947019867549, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d175fbcd69a6d3d4393ea4cc75e7c61c", "bug_code_uid": "32df0c75a2f851fc512e6f1fb92062cd", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "8827b04b03279c31dffc8d1aa1281031", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main(void){\nint t;\nlong i,j;\nlong l,r;\nlong x,y;\nlong s;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%ld%ld%ld%ld\",&x,&y,&l,&r);\n\t\ts=x/y;\n\t\tfor(j=l;j<=r;j++)\n\t\t\tif(j%y==0)\n\t\t\t\ts--;\n\t\tprintf(\"%d\\n\",s);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main(void){\nint t,p;\nlong i,j;\nlong l,r;\nlong x,y;\nlong s;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%ld%ld%ld%ld\",&x,&y,&l,&r);\n\t\ts=x/y;\n\t\ts-=(r/y-l/y);\n\t\tif(l%y==0)\n\t\t\ts--;\n\t\tprintf(\"%d\\n\",(s>0?s:0));\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9975308641975309, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6cbb385d89c4a4b806fd9ec06e0bb1e1", "bug_code_uid": "c85c54af19f061d4485e1c2feedbe1fe", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "1e3552caddcd61b482c722a637bf3e04", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,v;\n\tscanf(\"%d%d\",&n,&v);\n\tint x[n][50];\n\tint p[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x[i][0]);\n\t\tfor(int j=1;j<=x[i][0];j++)\n\t\t\tscanf(\"%d\",&x[i][j]);\n\t}\n\tint i=1,z=0,f=0;\n\twhile(f<n)\n\t{\n\t\tif(v>x[f][i])\n\t\t{\n\t\t\tp[z]=f+1;\n\t\t\tz++;\n\t\t\tf++;\n\t\t\ti=0;\n\t\t}\n\t\ti++;\n\t\tif(i>x[f][0])\n\t\t{\n\t\t\tf++;\n\t\t\ti=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",z);\n\tfor(int i=0;i<z;i++)\n\t\tprintf(\"%d\\t\",p[i]);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,v;\n\tscanf(\"%d%d\",&n,&v);\n\tint x[n][52];\n\tint p[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x[i][0]);\n\t\tfor(int j=1;j<=x[i][0];j++)\n\t\t\tscanf(\"%d\",&x[i][j]);\n\t}\n\tint i=1,z=0,f=0;\n\twhile(f<n)\n\t{\n\t\tif(v>x[f][i])\n\t\t{\n\t\t\tp[z]=f+1;\n\t\t\tz++;\n\t\t\tf++;\n\t\t\ti=0;\n\t\t}\n\t\ti++;\n\t\tif(i>x[f][0])\n\t\t{\n\t\t\tf++;\n\t\t\ti=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",z);\n\tfor(int i=0;i<z;i++)\n\t\tprintf(\"%d\\t\",p[i]);\n}"}
{"similarity_score": 0.9528392685274302, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "bb251bfc45b0d739db906f49d2fb70cd", "bug_code_uid": "8693ff6f474f8a0553a115407c10d10e", "src_uid": "97a226f47973fcb39c40e16f66654b5f", "apr_id": "5db4ef5db548e1f68a62744a7a3f6666", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n\nint main()\n{\n    int n, i, x, count = 0, mem = 0;\n    scanf(\"%d\", &n);\n    int a[n];\n    int b[n];\n    for(i = 0; i< n; i++) {\n        a[i] = 0;\n    }\n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &b[i]);\n    }\n    for(i = 0; i < n; i++) {\n        x = b[i] - (a[i]+mem);\n        if(x > 0) {\n            count+=x;\n            mem += x;\n        }\n        else {\n            count += (-1*x);\n            mem += x;\n        }\n    }\n    printf(\"%d\", count);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n\nint main()\n{\n    int n, i, x, mem = 0;\n    long long int count = 0;\n    scanf(\"%d\", &n);\n    int a[n];\n    int b[n];\n    for(i = 0; i< n; i++) {\n        a[i] = 0;\n    }\n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &b[i]);\n    }\n    for(i = 0; i < n; i++) {\n        x = b[i] - (a[i]+mem);\n        if(x > 0) {\n            count+=x;\n            mem += x;\n        }\n        else {\n            count += (-1*x);\n            mem += x;\n        }\n    }\n    printf(\"%I64d\", count);\n    return 0;\n}"}
{"similarity_score": 0.9985855728429985, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c3e9d576a4efff26e5d8b6dfc49f86e2", "bug_code_uid": "85ba96fb196e6080bf649e1da9df1ffb", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "105a498b76c29ed1229dd0a149d04a57", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i,j;\n    int n,m;\n    int temp;\n    int candidate, votes;\n    int winner[105];\n\n    scanf(\"%d%d\", &n, &m);\n\n    for(i=0; i<105; i++)\n        winner[i] = 0;\n\n    for(i=0;i<m;i++)\n    {\n        votes = -1;\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%d\", &temp);\n            if(votes < temp)\n            {\n                votes = temp;\n                candidate = j;\n            }\n        }\n        winner[candidate]++;\n    }\n\n    votes = -1;\n    candidate = -1;\n    for(i=0; i<m; i++)\n    {\n        if(votes < winner[i])\n        {\n            votes = winner[i];\n            candidate = i;\n        }\n    }\n\n    printf(\"%d\\n\", candidate+1);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int i,j;\n    int n,m;\n    int temp;\n    int candidate, votes;\n    int winner[105];\n\n    scanf(\"%d%d\", &n, &m);\n\n    for(i=0; i<105; i++)\n        winner[i] = 0;\n\n    for(i=0;i<m;i++)\n    {\n        votes = -1;\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%d\", &temp);\n            if(votes < temp)\n            {\n                votes = temp;\n                candidate = j;\n            }\n        }\n        winner[candidate]++;\n    }\n\n    votes = -1;\n    candidate = -1;\n    for(i=0; i<n; i++)\n    {\n        if(votes < winner[i])\n        {\n            votes = winner[i];\n            candidate = i;\n        }\n    }\n\n    printf(\"%d\\n\", candidate+1);\n\n    return 0;\n}\n"}
{"similarity_score": 0.23309178743961353, "equal_cnt": 35, "replace_cnt": 26, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 35, "lang": "GNU C11", "fix_code_uid": "e016a0196844b69787dc4f2ceb61087d", "bug_code_uid": "b8cfdeaad5985f3a5d50c31b865236ec", "src_uid": "68e830551c1580bb5aff40d7848d968d", "apr_id": "519671978ac724d94327c875c3eaf8d5", "difficulty": 1100, "tags": ["greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n,checker;\r\n        scanf(\"%d\", &n);\r\n        int check[100001]={0};\r\n        int list[n];\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\", &list[i]);\r\n            check[list[i]]++;\r\n        }\r\n        int count=0, hold;\r\n        while(1)\r\n        {\r\n            checker=-1;\r\n            for(int i=0; i<n; i++)\r\n            {\r\n                if(list[i]>list[i+1])\r\n                checker=i;\r\n                hold=i;\r\n            }\r\n            if(checker==-1)\r\n            break;\r\n        for(int i=0; i<n-1;i++)\r\n        {int temp=list[i];\r\n            if(check[temp]>=1&& i<=hold)\r\n            {\r\n                count++;\r\n                list[i]=0;\r\n                check[temp]=0;\r\n            }\r\n            else if(check[temp]==0)\r\n            list[i]=0;\r\n        }\r\n        }\r\n        printf(\"%d\\n\", count);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,f = -1,c = 0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint v[n],count[n],hold;\r\n\t\tcount[0] = -1;\r\n\t\tfor(int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tint temp;\r\n\t\t\tscanf(\"%d\",&temp);\r\n\t\t\tv[i] = temp;\r\n\t\t\tcount[temp] = 1;\r\n\t\t}\r\n\t\twhile(1)\r\n\t\t{\r\n\t\t\tf = -1;\r\n\t\t\tfor(int i = 0; i < n-1 ; i++)\r\n\t\t\t\tif(v[i] > v[i+1])\r\n\t\t\t\t  {\r\n\t\t\t\t  \tf = v[i];\r\n\t\t\t\t  \thold = i;\r\n\t\t\t\t  }\r\n\t\t\tif (f == -1) break;\r\n\t\t\tfor(int i = 0; i < n; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(count[v[i]] == 1 && i <= hold) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tc++;\r\n\t\t\t\t\t\tcount[v[i]] = 0;\r\n\t\t\t\t\t\tv[i] = 0;\r\n\t\t\t\t\t}else if( count[v[i]] == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tv[i] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",c);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.3423076923076923, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "9e4451d7102ed55877b5f6e1dc30f092", "bug_code_uid": "5aace4a4174208293cfa7de28aaeb226", "src_uid": "53a3313f5d6ce19413d72473717054fc", "apr_id": "a170dad50bfb98a694dffc70b1cfaa45", "difficulty": 900, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[105];\nint f1(int x,int y)\n{\n    if(x<y)\n        return x;\n    return y;\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int i,min=200,a[105]={0},x,sum=0;\n        for(i=0;i<n;i++)\n          {\n               scanf(\"%d\",&a[i]);\n              x=f1(min,a[i]);\n          }\n         for(i=0;i<n;i++)\n         {\n             sum+=a[i]-x;\n         }\n         if(sum%2==0)\n            printf(\"YES\\n\");\n         else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint a[1005];\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,i;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tint f=0;\n\t\tif(a[0]%2==0)\n\t\t{\n\t\t\tfor(i=1;i<n;i++)\n\t\t\t{\n\t\t\t\tif(a[i]%2)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tf=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f==0)\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=1;i<n;i++)\n\t\t\t{\n\t\t\t\tif(a[i]%2==0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tf=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f==0)\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8141135972461274, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "fa2db9b067153ab04494e8024bfe99c0", "bug_code_uid": "ee90fa9576d00681ad450cb0a03cb5ba", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "22d903c9c154b0f051e5d61c7226a3d9", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a[100001];\r\n    int n;\r\n    int t,p,i,j,s,k=0;\r\n    scanf(\"%d %d\",&n,&p);\r\n    for(i=1; i<=n; i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(i=1; i<=p; i++)\r\n    {\r\n        k=0;\r\n        scanf(\"%d%d\",&t,&s);\r\n        if(t==1)\r\n            a[s]=1-a[s];\r\n        for(j=1; j<=n; j++)\r\n            k=k+a[j];\r\n        if(t==2)\r\n        {\r\n            if(k/s>=1)\r\n                printf(\"1\\n\");\r\n            if(k/s<1)\r\n                printf(\"0\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a[100001];\r\n    int n;\r\n    int t,p,i,j,s,k=0;\r\n    scanf(\"%d %d\",&n,&p);\r\n    for(i=1; i<=n; i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(j=1; j<=n; j++)\r\n        k=k+a[j];\r\n    for(i=1; i<=p; i++)\r\n    {\r\n        scanf(\"%d%d\",&t,&s);\r\n        if(t==1)\r\n        {\r\n            a[s]=1-a[s];\r\n            if(a[s]==0)\r\n                k=k-1;\r\n            if(a[s]==1)\r\n                k=k+1;\r\n        }\r\n        if(t==2)\r\n        {\r\n            if(k/s>=1)\r\n                printf(\"1\\n\");\r\n            if(k/s<1)\r\n                printf(\"0\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9989082969432315, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d01153f9f36fe022741a9c6071afae7c", "bug_code_uid": "f125f58e185ebfdc43c1cad9f05ae6e6", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "92c86fa16832e584abd72c1cd07038c6", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,t;\n\n    scanf(\"%d\",&t);\n    char s[t][100];\n    int l[t];\n    for(i=0; i<t; i++)\n    {\n\n        scanf(\"%s\",s[i]);\n    }\n    for(i=0; i<t; i++)\n    {\n        l[i]=strlen(s[i]);\n\n        if(l[i]<=2)\n        {\n            printf(\"%s\",s[i]);\n        }\n        else if(l[i]>2)\n        {\n            for(j=0; j<l[i]; j++)\n            {\n\n                if(j==0)\n                {\n                    printf(\"%c\",s[i][0]);\n                }\n                else if(j!=0)\n                {\n\n                    if(s[i][j]==s[i][j+1])\n                    {\n                        printf(\"%c\",s[i][j]);\n                        j+=1;\n\n                    }\n                    else if(s[i][j]!=s[i][j+1])\n                    {\n                        printf(\"%c\",s[i][j]);\n                    }\n\n                }\n\n            }\n         \n        }\n        printf(\"\\n\");\n\n\n\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,t;\n\n    scanf(\"%d\",&t);\n    char s[t][1000];\n    int l[t];\n    for(i=0; i<t; i++)\n    {\n\n        scanf(\"%s\",s[i]);\n    }\n    for(i=0; i<t; i++)\n    {\n        l[i]=strlen(s[i]);\n\n        if(l[i]<=2)\n        {\n            printf(\"%s\",s[i]);\n        }\n        else if(l[i]>2)\n        {\n            for(j=0; j<l[i]; j++)\n            {\n\n                if(j==0)\n                {\n                    printf(\"%c\",s[i][0]);\n                }\n                else if(j!=0)\n                {\n\n                    if(s[i][j]==s[i][j+1])\n                    {\n                        printf(\"%c\",s[i][j]);\n                        j+=1;\n\n                    }\n                    else if(s[i][j]!=s[i][j+1])\n                    {\n                        printf(\"%c\",s[i][j]);\n                    }\n\n                }\n\n            }\n         \n        }\n        printf(\"\\n\");\n\n\n\n    }\n\n}"}
{"similarity_score": 0.7257072570725708, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "f943106bb8710917634108a60e4bd953", "bug_code_uid": "eb31c3080cb3f21ddbdf8fc362046a31", "src_uid": "2be73aa00a13be5274cf840ecd3befcb", "apr_id": "383c972f433b9afedbb45ba3ca390fd4", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#define N 100000\n\nint main(){\n\tint i, n, l[N], r[N], a=0, b=0, o=0, t[i];\n\t\n\tscanf(\"%d\", &n);\n\t\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &l[i]);\n\t\tscanf(\"%d\", &r[i]);\n\t\ta=a+l[i];\n\t\tb=b+r[i];\n\t}\n\t\n\t\n\tfor(i=0; i<n; i++){\n\t\tt[i]= abs((a-l[i]+r[i])-(b-r[i]+l[i]));\t\n\t}\n\t\n\tfor(i=0; i<n; i++){\n\t\tif(t[i]>abs(a-b)){\n\t\t\to=i+1;\n\t\t}\n\t}\n\tprintf(\"%d\", o);\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#define N 100000\n\nint main(){\n\tint i, n, l[N], r[N];\n\tlong int  a=0, b=0, o=0, t, s;\n\tscanf(\"%d\", &n);\n\t\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &l[i]);\n\t\tscanf(\"%d\", &r[i]);\n\t\ta=a+l[i];\n\t\tb=b+r[i];\n\t}\n\t\n\ts=abs(a-b);\n\n\t\n\tfor(i=0; i<n; i++){\n\t\tt = abs((a-l[i]+r[i])-(b-r[i]+l[i]));\t\n\t\tif(t>s){\n\t\t\to=i+1;\n\t\t\ts=t;\n\t\t}\n\t}\n\tprintf(\"%d\", o);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.5429740791268759, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "b5d5bb0800877ffc93d2cb0e59091ac6", "bug_code_uid": "79576a08683049c7c972fa1eaf5a4bef", "src_uid": "faf1abdeb6f0cf34972d5cb981116186", "apr_id": "b709855283de0c758e30716105a3da08", "difficulty": 1200, "tags": ["data structures", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long n,m,i,j,k,x,y;\n    scanf(\"%I64d %I64d\",&n,&m);\n    long long a[m];\n    for(i=0;i<m;i++){\n        scanf(\"%I64d %I64d\",&x,&y);\n        a[i]=(n-i-1)*(n-i-1);\n        if(a[i]==1) a[i]=2;\n    }\n    for(i=0;i<m;i++){\n        printf(\"%I64d \",a[i]);\n    }\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long n,m,i,j,k,x,y,rr=0,cc=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    long long c[n+2],r[n+2];\n    for(i=1;i<=n;i++){\n        r[i]=0;c[i]=0;\n    }\n    for(j=1;j<=m;j++){\n        scanf(\"%I64d %I64d\",&x,&y);\n        if(r[x]==0){\n            rr++;\n            r[x]=1;\n        }\n        if(c[y]==0){\n            cc++;\n            c[y]=1;\n        }\n        printf(\"%I64d \",(n*n)-(cc+rr)*n+(rr*cc));\n    }\n\n}"}
{"similarity_score": 0.7928032501450958, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "dcb182da03209f3dd13ce08952e972ce", "bug_code_uid": "35e34a951b7b3c53550866ed733ef90f", "src_uid": "6059cfa13594d47b3e145d7c26f1b0b3", "apr_id": "ca5ef239f84f5bc88b0308896f374eb8", "difficulty": 1500, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,d=0,m=0,i;\n    scanf(\"%d\",&a);\n    double b[a];\n    int c[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%lf\",&b[i]);\n        c[i]=b[i];\n        d=d+c[i];\n    }\n  /*  for(i=0;i<a;i++)\n    {\n        printf(\"%d\\n\",c[i]);\n    }\n printf(\"d=%d\\n\",d);*/\n    i=0;\n    if(d>0)\n    {\n        while(d>0)\n        {\n            if(c[i]==b[i])\n            {\n                continue;\n            }\n            c[i]--;\n            i++;\n            d--;\n        }\n    }\n   else if(d<0)\n    {\n        while(d<0)\n        {\n            if(c[i]==b[i])\n            {\n                continue;\n            }\n            c[i]++;\n            i++;\n            d++;\n        }\n    }\n    for(i=0;i<a;i++)\n    {\n        printf(\"%d\\n\",c[i]);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,d=0,m=0,i;\n    scanf(\"%d\",&a);\n    double b[a];\n    int c[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%lf\",&b[i]);\n        c[i]=b[i];\n        d=d+c[i];\n    }\n  /*  for(i=0;i<a;i++)\n    {\n        printf(\"%d\\n\",c[i]);\n    }**/\n// printf(\"d=%d\\n\",d);\n    i=0;\n    if(d>0)\n    {\n       for(i=0;i<a;i++)\n        {\n            if(b[i]<0){\n            if(c[i]==b[i])\n            {\n                continue;\n            }\n            c[i]--;\n\n            d--;\n            if(d==0)\n            {\n                break;\n            }\n            }\n        }\n    }\n   else if(d<0)\n    {\n        for(i=0;i<a;i++)\n        {\n            if(b[i]>0){\n            if(c[i]==b[i])\n            {\n                continue;\n            }\n            c[i]++;\n            d++;\n            if(d==0)\n            {\n                break;\n            }\n            }\n        }\n    }\n    for(i=0;i<a;i++)\n    {\n        printf(\"%d\\n\",c[i]);\n    }\n}\n"}
{"similarity_score": 0.9842738205365402, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c748c244eaedbba526afa94359a5034c", "bug_code_uid": "984292b02b9a3464ab93c2a5d3a037ca", "src_uid": "b27436086ead93397be748d8ebdbf19a", "apr_id": "440b2e59fba327a5da32287ab142f236", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\n int main ()\n {\n   int tab[200],q,n,diff,mem=0;\n   scanf(\"%d\",&q);\n   for(int i=0;i<n;i++)\n  {\n    scanf(\"%d\",&n);\n    for(int j=0;j<n;j++)\n    {\n      scanf(\"%d\",&tab[j]);\n    }\n    if (n<=3)\n    {\n      printf(\"YES\\n\");\n      continue ;\n    }\n    for (int k=0;k<n-1;k++)\n    diff=abs(tab[k]-tab[k+1])\n    if (diff!= 1 && diff!=n-1)\n    {\n      printf(\"NO\\n\");\n      mem=1;\n      break;\n    }\n  }\n    if(mem!=0)\n    {\n      mem=0;\n      continue;\n    }\n    printf(\"YES\\n\");\n  } \n }", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\n int main ()\n {\n   int tab[200],q,n,diff,mem=0;\n   scanf(\"%d\",&q);\n   for(int i=0;i<q;i++)\n  {\n    scanf(\"%d\",&n);\n    for(int j=0;j<n;j++)\n    {\n      scanf(\"%d\",&tab[j]);\n    }\n    if (n<=3)\n    {\n      printf(\"YES\\n\");\n      continue ;\n    }\n    for (int k=0;k<n-1;k++)\n    {\n    diff=abs(tab[k]-tab[k+1]);\n    if (diff!= 1 && diff!=n-1)\n    {\n      printf(\"NO\\n\");\n      mem=1;\n      break;\n    }\n  }\n    if(mem!=0)\n    {\n      mem=0;\n      continue;\n    }\n    printf(\"YES\\n\");\n  }\n }\n"}
{"similarity_score": 0.7693965517241379, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "fd5aa7d75997642fb36db21cad9a516c", "bug_code_uid": "201d01846095c03300e223ff896a79cb", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "1938659d2d2a8bb7c17be69411b9d55e", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int a[100],b=1,i,n,sum=0,m;\n    char s[1000000];\n    scanf(\"%d\",&n);\n    if(n>26)\n    {\n        printf(\"-1\");\n        return;\n    }\n    scanf(\"%s\",s);\n    for(i=0;i<n;i++)\n    {\n        a[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        a[s[i]-97]++;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>0)\n            sum=sum+a[i]-1;\n    }\n    printf(\"%d\",sum);\n}\n \t\t\t \t\t \t  \t \t   \t\t \t    \t\t\t\t \t", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int a[100000],b=1,i,n,sum=0,m;\n    char s[1000000];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",s);\n    if(n>26)\n    {\n        printf(\"-1\");\n    }\n    else\n    {\n    for(i=0;i<26;i++)\n    {\n        a[i]=0;\n    }\n    for(i=0;s[i]!='\\0';i++)\n    {\n        if(s[i]>=97&&s[i]<=122)\n        a[s[i]-97]++;\n    }\n    for(i=0;i<26;i++)\n    {\n        if(a[i]>0)\n            sum=sum+a[i]-1;\n    }\n    printf(\"%d\",sum);\n    }\n}\n \t   \t \t   \t\t     \t\t\t  \t\t    \t"}
{"similarity_score": 0.9621451104100947, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0d7f8be2c836166d0b58fa0b23d07ee6", "bug_code_uid": "c91df1b56406548823d71c7dd7ab7e44", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "8bb58df1c2d2959425565e129242c65e", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,s,n,sum=0;\n\tscanf(\"%d%d\",&s,&n);\n\tint a[n],b[n];\n\tfor(i=0;i<n;i++)scanf(\"%d %d\",&a[i],&b[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s>a[i])\n\t\t{\n\t\t\ts+=b[i];\n\t\t\ta[i]=0;\n\t\t\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]!=0){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"YES\");\n\treturn 0;\n\t\n\t}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j,s,n,sum=0;\n\tscanf(\"%d%d\",&s,&n);\n\tint a[n],b[n];\n\tfor(i=0;i<n;i++)scanf(\"%d %d\",&a[i],&b[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s>a[i]&&a[i]!=0)\n\t\t{\n\t\t\ts+=b[i];\n\t\t\ta[i]=0;\n\t\t\ti=-1;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]!=0){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"YES\");\n\treturn 0;\n}\n\t\n"}
{"similarity_score": 0.7808764940239044, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7de0b5b596aa4133216a8dfe846b68b0", "bug_code_uid": "b006a76fd61e6cbd98a49ac15c714772", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "0ea670cbcefc2717a47d82f3d2111d6c", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    long long int n;\n    while(t--)\n    {\n        scanf(\"%lld\",&n); \n        if(n%2==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    long long int n;\n    while(t--)\n    {\n        scanf(\"%lld\",&n);\n        if(n%4)\n        {\n            printf(\"NO\\n\");\n        }\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.844776119402985, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "ab40dfcbf31e4d5def0b3b2dfdbd1b01", "bug_code_uid": "4e93c178d258eeba0ac36d36adcc068b", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "1a348dbae8bdc01ece46a1cc5417df10", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid solve() {\r\n    int arr[100],sum=0;\r\n    scanf(\"%d %d\",&n,&m);\r\n    for (int i=0;i<n;i++) {\r\n        scanf(\"%d\",&arr[i]);\r\n        sum+=arr[i];\r\n    }\r\n    printf(\"%d\\n\",sum-m);\r\n}\r\n\r\nint main() {\r\n    int t,n,m;\r\n    scanf(\"%d\",&t);\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nvoid solve() {\r\n    int sum=0,n,m;\r\n    scanf(\"%d %d\",&n,&m);\r\n    for (int i=0;i<n;i++) {\r\n        int x;\r\n        scanf(\"%d\",&x);\r\n        sum+=x;\r\n    }\r\n    if (sum-m>=0)\r\n        printf(\"%d\\n\",sum-m);\r\n    else\r\n        printf(\"0\\n\");\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8917995444191344, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "c6da54972f8bde62587f0048d72da0a6", "bug_code_uid": "7c8392f4aa4a99ac9f2b9b9492494ae8", "src_uid": "cb4dbff31d967c3dab8fe0495eb871dc", "apr_id": "5fb0ba7981c3d232e0172ed80321b864", "difficulty": 1200, "tags": ["dsu", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<string.h>\n#include<stdio.h>\n#include<ctype.h>\n#include<time.h>\n#include<math.h>\n\n\n#define Max(a,b)    (((a) > (b)) ? (a) : (b))\n#define Min(a,b)    (((a) < (b)) ? (a) : (b))\n\n#define FOR(i,a,b)  for(i = a; i <= b; i++)\n#define ROF(i,a,b)  for(i = a; i >= b; i--)\n\n#define SWAP(a,b)   {t = a; a = b; b = t;}\n\n#define lli long long int\n\n#define endl    puts(\"\")\n\n#define MAX 300000005\n\ntypedef struct xy{\n\tint x, y;\n}SNOW;\n\nSNOW arr[10000];\n\nint hash[10001], i, j, k, s, n, m, sum, a, b, h;\n\nint matrix[1001][1001];\n\nvoid coz(int a) {\n\t\n\tint i, j;\n\n\thash[a] = 1;\n\n\tFOR(i,1,1000) {\n\t\tif(!hash[i] && matrix[a][i]) {\n\t\t\tcoz(i);\n\t\t}\n\t}\n\n}\n\nint main()\n{\n\n\tscanf(\"%d\", &n);\n\tFOR(i,1,n) {\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tmatrix[a][b] = 1;\n\t}\n\n\tFOR(i,1,1000) {\n\t\tif(!hash[i]) {\n\t\t\tcoz(i);\n\t\t\tsum++;\n\t\t}\n\t}\n\n\tprintf(\"%d\",1000-sum), endl;\n\n\treturn 0;\n}\n", "fixed": "#include<stdlib.h>\n#include<string.h>\n#include<stdio.h>\n#include<ctype.h>\n#include<time.h>\n#include<math.h>\n\n\n#define Max(a,b)    (((a) > (b)) ? (a) : (b))\n#define Min(a,b)    (((a) < (b)) ? (a) : (b))\n\n#define FOR(i,a,b)  for(i = a; i <= b; i++)\n#define ROF(i,a,b)  for(i = a; i >= b; i--)\n\n#define SWAP(a,b)   {t = a; a = b; b = t;}\n\n#define lli long long int\n\n#define endl    puts(\"\")\n\n#define MAX 300000005\n\ntypedef struct xy{\n\tint x, y;\n}SNOW;\n\nSNOW matrix[10000];\n\nint hash[10001], i, j, k, s, n, m, sum, a, b, h;\n\nvoid coz(int a) {\n\t\n\tint i, j;\n\n\thash[a] = 1;\n\n\tFOR(i,1,n) {\n\t\tif(i != a && (matrix[a].x == matrix[i].x || matrix[a].y == matrix[i].y) && !hash[i]) {\n\t\t\tcoz(i);\n\t\t}\n\t}\n\n}\n\nint main()\n{\n\n\tscanf(\"%d\", &n);\n\tFOR(i,1,n) {\n\t\tscanf(\"%d %d\", &matrix[i].x, &matrix[i].y);\n\t}\n\n\tFOR(i,1,n) {\n\t\tif(!hash[i]) {\n\t\t\tcoz(i);\n\t\t\tsum++;\n\t\t}\n\t}\n\n\tprintf(\"%d\", sum-1), endl;\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9979612640163099, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "19bbddca70e89b945c006b73ae88a43d", "bug_code_uid": "9339782844cd7f112d82d1b4495c698d", "src_uid": "0b204773f8d06362b7569bd82224b218", "apr_id": "efdf11331262184aa6fd4fe2870bc6cc", "difficulty": 1800, "tags": ["data structures", "constructive algorithms"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX 1000000\nint max(int a,int b)\n{\n\tif(a>b) return a;\n\treturn b;\n}\nint min(int a,int b)\n{\n\tif(a<b) return a;\n\treturn b;\n}\nint main()\n{\n\tint m,n,a[31][1000][2]={0},b[31][1000]={0},l,r,p,i,j,mj={0},t;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&p);\n\t\tj=1,t=0;\n\t\twhile(j<=30)\n\t\t{\t\n\t\t\tif(p%2==1)\n\t\t\t\ta[j][l][1]=max(a[j][l][1],r);\n\t\t\telse if(a[j][r][0]!=0)\n\t\t\t\ta[j][r][0]=min(a[j][r][0],l);\n\t\t\telse a[j][r][0]=l;\n\t\t\tp=p/2;\n\t\t\tj++;\n\t\t\tif(p==0&&t==0) t=j-1;\n\t\t}\n\t\tmj=max(mj,t);\n\t}\n\n\tint s1,e1,f;\n\tfor(i=1;i<=mj;i++){\n\t\ts1=MAX,e1=0,f=0;\n\t\tfor(j=1;j<=n;j++){\n\t\t\te1=max(e1,a[i][j][1]);\n\t\t\t\n\t\t\tif(a[i][j][1]>0) s1=min(s1,j);\n\t\t\tif(a[i][j][0]>0&&j<=e1)\n\t\t\t\tif(a[i][j][0]>=s1){\n\t\t\t\t\tf=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\tif(j>=s1&&j<=e1) b[i][j]=1;\n\t\t\tif(j==e1) s1=MAX;\n\t\t}\n\t\tif(f) break;\n\t}\n\tif(f) printf(\"NO\");\n\telse{\n\t\tprintf(\"YES\\n\");\n\t\tfor(i=1;i<=n;i++){\n\t\t\tfor(p=0,j=mj;j>=1;j--)\n\t\t\t\tp=p*2+b[j][i];\n\t\t\tprintf(\"%d \",p);\n\t\t\t\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define MAX 1000000\nint max(int a,int b)\n{\n\tif(a>b) return a;\n\treturn b;\n}\nint min(int a,int b)\n{\n\tif(a<b) return a;\n\treturn b;\n}\nint main()\n{\n\tint m,n,a[31][100005][2]={0},b[31][100005]={0},l,r,p,i,j,mj={0},t;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&p);\n\t\tj=1,t=0;\n\t\twhile(j<=30)\n\t\t{\t\n\t\t\tif(p%2==1)\n\t\t\t\ta[j][l][1]=max(a[j][l][1],r);\n\t\t\telse if(a[j][r][0]!=0)\n\t\t\t\ta[j][r][0]=min(a[j][r][0],l);\n\t\t\telse a[j][r][0]=l;\n\t\t\tp=p/2;\n\t\t\tj++;\n\t\t\tif(p==0&&t==0) t=j-1;\n\t\t}\n\t\tmj=max(mj,t);\n\t}\n\n\tint s1,e1,f;\n\tfor(i=1;i<=mj;i++){\n\t\ts1=MAX,e1=0,f=0;\n\t\tfor(j=1;j<=n;j++){\n\t\t\te1=max(e1,a[i][j][1]);\n\t\t\t\n\t\t\tif(a[i][j][1]>0) s1=min(s1,j);\n\t\t\tif(a[i][j][0]>0&&j<=e1)\n\t\t\t\tif(a[i][j][0]>=s1){\n\t\t\t\t\tf=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\tif(j>=s1&&j<=e1) b[i][j]=1;\n\t\t\tif(j==e1) s1=MAX;\n\t\t}\n\t\tif(f) break;\n\t}\n\tif(f) printf(\"NO\");\n\telse{\n\t\tprintf(\"YES\\n\");\n\t\tfor(i=1;i<=n;i++){\n\t\t\tfor(p=0,j=mj;j>=1;j--)\n\t\t\t\tp=p*2+b[j][i];\n\t\t\tprintf(\"%d \",p);\n\t\t\t\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.4386317907444668, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "3d69576bc5aecf4db48b3c6d309a1bd8", "bug_code_uid": "96a02f5979a2cc39b32d8b64032f2adc", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "35ae57da458080fb2068f13b4485eea2", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n     int n, k;\n     scanf(\"%d %d\", &n, &k);\n     int a[n], max=0;\n     for(int i=0; i<n; i++)\n        {  \n            scanf(\"%d\", &a[i]);\n            if(a[i]>max)max=a[i];\n        }\n     for(int i=0; i<n; i++)\n        {\n            a[i]= max-a[i];\n            printf(\"%d \", a[i]);\n        }\n     printf(\"\\n\");\n     return 0;\n    }", "fixed": "#include<stdio.h>\nvoid arrng(int a[], int n);\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n, k;\n        scanf(\"%d %d\", &n, &k);\n        int a[n];\n        for(int i=0; i<n; i++)scanf(\"%d\",&a[i]);\n        if(k%2==0){\n            arrng(a, n);\n            arrng(a, n);\n        }\n        else arrng(a, n);\n        for(int i=0; i<n; i++)\n        printf(\"%d \",a[i]);\n        printf(\"\\n\");\n    }\n}\nvoid arrng(int a[], int n)\n{\n    int max=-1000000000;\n    for(int i=0; i<n; i++)\n    if(a[i]>max)max=a[i];\n    for(int i=0; i<n; i++)\n    a[i]=max - a[i];\n}"}
{"similarity_score": 0.9950248756218906, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e3a14a23eda95b803b6b374ad5c0a3b2", "bug_code_uid": "cde09fd512e0ae1bb06c6d1c367a5f84", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "52b4bc6580038c666e19f023a50cbd30", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,j=1,a[10],temp;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\ta[i]=j;\n\t\tj++;\n\t}\n\tif(n==1)\n\t printf(\"-1\");\n    else\n\t{\n\tfor(i=0;i<n;i++){\n\t\tif(i%2==0){\n\t\t\ttemp=a[i];\n\t\t\ta[i]=a[i+1];\n\t\t\ta[i+1]=temp;\n\t\t}\n    }\n\tfor(i=0;i<n;i++)\n\t printf(\"%d \",a[i]);\n    }\n\treturn(0);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,j=1,a[100],temp;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\ta[i]=j;\n\t\tj++;\n\t}\n\tif(n%2==1)\n\t printf(\"-1\");\n    else\n\t{\n\tfor(i=0;i<n;i++){\n\t\tif(i%2==0){\n\t\t\ttemp=a[i];\n\t\t\ta[i]=a[i+1];\n\t\t\ta[i+1]=temp;\n\t\t}\n    }\n\tfor(i=0;i<n;i++)\n\t printf(\"%d \",a[i]);\n    }\n\treturn(0);\n}"}
{"similarity_score": 0.921681780708986, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "994c9265dfd20dcaba838e59499eb698", "bug_code_uid": "7c749bfd0365f0ba1b20a0466f3d37b7", "src_uid": "4671380d70876044e0ec7a9cab5e25ae", "apr_id": "72b987c434727b896b922c3046bc9309", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//495sonyaandrobots\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n, i, pair = 0;\n    scanf(\"%d\", &n);\n    int a[n], h[100001] = {0}, dis[n];\n    for (i = 0; i < n;i++)\n        dis[i] = 0;\n    h[a[0]] = dis[0] = 1;\n    for (i = 1; i < n; i++)\n    {\n        if (h[a[i]] == 0)\n            h[a[i]] = dis[i] = 1;\n        dis[i] += dis[i - 1];\n    }\n    memset(h, 0, sizeof(h));\n    for (i = n - 1; i >= 1; i--)\n        if (h[a[i]] == 0)\n        {\n            h[a[i]] = 1;\n            pair += dis[i - 1];\n        }\n    printf(\"%d\\n\", pair);\n    return 0;\n}", "fixed": "//495sonyaandrobots\n#include <stdio.h>\n#include <string.h>\ntypedef long long ll;\nint main()\n{\n    ll n, i, pair = 0;\n    scanf(\"%lld\", &n);\n    ll a[n], h[100001] = {0}, dis[n];\n    for (i = 0; i < n; i++)\n        scanf(\"%lld\", a + i);\n    for (i = 0; i < n; i++)\n        dis[i] = 0;\n    h[a[0]] = dis[0] = 1;\n    for (i = 1; i < n; i++)\n    {\n        if (h[a[i]] == 0)\n            h[a[i]] = dis[i] = 1;\n        dis[i] += dis[i - 1];\n    }\n    memset(h, 0, sizeof(h));\n    for (i = n - 1; i >= 1; i--)\n        if (h[a[i]] == 0)\n        {\n            h[a[i]] = 1;\n            pair += dis[i - 1];\n        }\n    printf(\"%lld\\n\", pair);\n    return 0;\n}"}
{"similarity_score": 0.9737039819684448, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "fbf1daa3d2331abfb12849b06094bfb1", "bug_code_uid": "17939c5726bff0cfef792a6841eca26b", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "d5624c2f218c165be344847e07068905", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<time.h>\n\n#define SORT(a) int t=x,o;while(t--){for(i=0;i<x-1;i++)if(a[i]>a[i+1]){o=a[i];a[i]=a[i+1];a[i+1]=o;}}\n#define R return 0;\n#define and &&\n#define or ||\n#define buyuk(a,b) (a<b)? b:a\n#define kucuk(a,b) (a<b)? a:b\nmain(){\n\tint x,i,j,arr[1000010],h[1000100]={0},top=0,snc=0,s=0,u;\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++){\n\t\tscanf(\"%d\",&arr[i]);\n\t\th[arr[i]]++;\n\t\ttop+=arr[i];\n\t}\n\tfor(i=0;i<=1000000;i++)\n\t\twhile(h[i]){\n\t\t\tarr[s++]=i;\n\t\t\th[i]--;\n\t\t}\n\tu=arr[x-1];\n\ts=0;\n\twhile(arr[x-1]){\n\t\tsnc+=top;\n\t\ttop-=arr[s];\n\t\tsnc+=arr[s];\n\t\tarr[s++]=0;\n\t}\n\tprintf(\"%d\",snc-u);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<time.h>\n\n#define SORT(a) int t=x,o;while(t--){for(i=0;i<x-1;i++)if(a[i]>a[i+1]){o=a[i];a[i]=a[i+1];a[i+1]=o;}}\n#define R return 0;\n#define and &&\n#define or ||\n#define ll long long int \n#define buyuk(a,b) (a<b)? b:a\n#define kucuk(a,b) (a<b)? a:b\nmain(){\n\tint x,i,j,arr[1000010],h[1000100]={0};\n\tll top=0,snc=0,s=0,u;\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++){\n\t\tscanf(\"%d\",&arr[i]);\n\t\th[arr[i]]++;\n\t\ttop+=arr[i];\n\t}\n\tfor(i=0;i<=1000000;i++)\n\t\twhile(h[i]){\n\t\t\tarr[s++]=i;\n\t\t\th[i]--;\n\t\t}\n\tu=arr[x-1];\n\ts=0;\n\twhile(arr[x-1]){\n\t\tsnc+=top;\n\t\ttop-=arr[s];\n\t\tsnc+=arr[s];\n\t\tarr[s++]=0;\n\t}\n\tprintf(\"%lld\",snc-u);\n}\n"}
{"similarity_score": 0.9987789987789988, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ec042a616a95f210e0f028d5cc521014", "bug_code_uid": "17109893190252940ebc73f3ea098ae1", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "88529a9a7c7298e2de7747968e8c4c9f", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n//using namespace std;\n\nint main()\n{\n    int len,d,i;\n    int count=0;\n    scanf(\"%d %d\",&len,&d);\n    int arr[len];\n    int temp=0;\n    for(i=0;i<len;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n\n        if(i>0)\n        {\n            if(arr[i]<=arr[i-1])\n            {\n\n            temp=(((arr[i-1]-arr[i])/d)+1);\n            count=temp+count;\n            arr[i]+=(temp*d);\n            printf(\"i=%d\\n temp=%d \\n count=%d\\n arr[i]=%d\\n\\n \", i,temp,count,arr[i]);\n            }\n        }\n            /*while((arr[i]<=arr[i-1])&& i>0)\n            {\n                arr[i]=arr[i]+d;\n                count++;\n            }*/\n    }\n/*    while(arr[i]<=arr[i-1])\n        {\n            arr[i]=arr[i]+d;\n            count++;\n        }\n*/\n    //}\n    printf(\"%d\",count);\n    //cout<<\"\\n\"<<count;\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n//using namespace std;\n\nint main()\n{\n    int len,d,i;\n    int count=0;\n    scanf(\"%d %d\",&len,&d);\n    int arr[len];\n    int temp=0;\n    for(i=0;i<len;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n\n        if(i>0)\n        {\n            if(arr[i]<=arr[i-1])\n            {\n\n            temp=(((arr[i-1]-arr[i])/d)+1);\n            count=temp+count;\n            arr[i]+=(temp*d);\n            //printf(\"i=%d\\n temp=%d \\n count=%d\\n arr[i]=%d\\n\\n \", i,temp,count,arr[i]);\n            }\n        }\n            /*while((arr[i]<=arr[i-1])&& i>0)\n            {\n                arr[i]=arr[i]+d;\n                count++;\n            }*/\n    }\n/*    while(arr[i]<=arr[i-1])\n        {\n            arr[i]=arr[i]+d;\n            count++;\n        }\n*/\n    //}\n    printf(\"%d\",count);\n    //cout<<\"\\n\"<<count;\n    return 0;\n}\n"}
{"similarity_score": 0.2448377581120944, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "5a6f9af847ad05ebade688956e448480", "bug_code_uid": "04d99795eae7f275fbff207d8d5fb162", "src_uid": "a51d2e6e321d7db67687a594a2b85e47", "apr_id": "55776ec5b9654eb8423d4be37098420b", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i , len , j , n;\n    char A[100050] , B[100050];\n    scanf(\"%d\" , &n);\n    scanf(\"%s\" , A);\n    for(i = 0;i < strlen(A);i++)\n    {\n        B[i] = A[i];\n    }\n    B[i] = '\\0';\n    len = strlen(A);\n    for(i = 1;i < n;i++)\n    {\n        scanf(\"%s\" , A);\n        for(j = 0;A[j];j++)\n        {\n            if(A[j] != '?')\n            {\n                if (B[j] == '?') B[j] = A[j]; else\n                if (B[j] != A[j]) B[j] = '?'; \n            }\n              \n        }\n    }\n    for(i = 0;i < len;i++)\n    {\n        if(B[i] == '?')\n        {\n            printf(\"x\");\n        }\n        else if(B[i] == '.')\n            printf(\"?\");\n        else\n            printf(\"%c\" , B[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i , len , j , n;\n    char A[100050] , B[100050];\n    scanf(\"%d\" , &n);\n    for(i = 0;i < 100040;i++)\n    {\n        B[i] = '*';\n    }\n    B[i] = '\\0';\n    len = 100050;\n    for(i = 0;i < n;i++)\n    {\n        scanf(\"%s\" , A);\n        len = strlen(A);\n        for(j = 0;A[j];j++)\n        {\n            if(A[j] != '?')\n            {\n                if (B[j] == '*') B[j] = A[j]; else\n                if (B[j] != A[j]) B[j] = '?';\n            }\n\n        }\n    }\n for (j = 0; j < len; j++) putchar(B[j] == '*' ? 'a' : B[j]);\n    return 0;\n}\n"}
{"similarity_score": 0.997716894977169, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b4c05f1eef0d6fd88f169bb42215c28b", "bug_code_uid": "e79025195f9376c07c2dddfa4b7119c2", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "7933ed03007a5244f483a2bfd55fc117", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n    int t, i, j, count1 = 0, count2 = 0, a[3] = {0};\n    scanf(\"%d\", &t);\n    for(i = 1;i <= t;i++){\n        for(j = 0;j < 3;j++){ \n            scanf(\"%d\",&a[i]);\n            if(a[j] == 1) {\n                count1++;\n            }\n            \n        }\n        if(count1 >= 2) {\n            count2++;\n        }\n        count1 = 0;\n        \n    }\n    printf(\"%d\",count2);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n    int t, i, j, count1 = 0, count2 = 0, a[3] = {0};\n    scanf(\"%d\", &t);\n    for(i = 1;i <= t;i++){\n        for(j = 0;j < 3;j++){ \n            scanf(\"%d\",&a[j]);\n            if(a[j] == 1) {\n                count1++;\n            }\n            \n        }\n        if(count1 >= 2) {\n            count2++;\n        }\n        count1 = 0;\n        \n    }\n    printf(\"%d\",count2);\n    return 0;\n}"}
{"similarity_score": 0.894878706199461, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "96f5e92940abcbb28fed8dfa78701eab", "bug_code_uid": "dda968b491e76d069cc5c6c012891a2c", "src_uid": "e70708f72da9a203b21fc4112ede9268", "apr_id": "5c01d90c08ac80085845acc205f1d086", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n\t// your code goes here\n\tchar str[100000],ans[100000];\n\tscanf(\"%s\",str);\n\tint state = -1;\n\tint i;\n\tfor(i=0;str[i]!='\\0';i++){\n\t\tif(state == 0){\n\t\t\tif(str[i] == 'a'){\n\t\t\t\tans[i] = 'a';\n\t\t\t\tstate = 1;\n\t\t\t}else{\n\t\t\t\tans[i] = str[i]-1;\n\t\t\t}\n\t\t}else if( state == -1){\n\t\t\tif(str[i] == 'a'){\n\t\t\t\tans[i] = str[i];\n\t\t\t}else{\n\t\t\t\tans[i] = str[i]-1;\n\t\t\t\tstate=0;\n\t\t\t}\n\t\t}else{\n\t\t\tans[i] = str[i];\n\t\t}\n\t}\n\tans[i] = '\\0';\n\tprintf(\"%s\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n\t// your code goes here\n\tchar str[100005],ans[100005];\n\tscanf(\"%s\",str);\n\tint state = -1;\n\tint i;\n\tint len = strlen(str);\n\t\n\tfor(i=0;str[i]!='\\0';i++){\n\t\tif(state == 0){\n\t\t\tif(str[i] == 'a'){\n\t\t\t\tans[i] = 'a';\n\t\t\t\tstate = 1;\n\t\t\t}else{\n\t\t\t\tans[i] = str[i]-1;\n\t\t\t}\n\t\t}else if( state == -1){\n\t\t\tif(str[i] == 'a'){\n\t\t\t\tans[i] = str[i];\n\t\t\t}else{\n\t\t\t\tans[i] = str[i]-1;\n\t\t\t\tstate=0;\n\t\t\t}\n\t\t}else{\n\t\t\tans[i] = str[i];\n\t\t}\n\t}\n\tif(state==-1){\n\t\tans[i-1] = ans[i-1]-1;\n\t\tif(ans[i-1]==('a'-1))\n\t\t\tans[i-1] = 'z';\n\t}\n\tans[i] = '\\0';\n\tprintf(\"%s\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.23588039867109634, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "a06d7eea23402222afbffaaa2b9b41a5", "bug_code_uid": "3034a9b60173b68dc272a529df1c255b", "src_uid": "6d146936ab34deaee24721e53474aef0", "apr_id": "2f41b16a685e7b81b984b20fb068b58f", "difficulty": 1500, "tags": ["two pointers", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define max 1010\n\nvoid swap_set(int a[][max/10], int j, int x, int ans[][2], int k, int i)\n{\n  int temp;\n  static int p = 0;\n\n  temp = a[i][j];\n  a[i][j] = a[i][x];\n  a[i][x] = temp;\n\n  ans[p][0] = j;\n  ans[p++][1] = x;\n\n}\n\n\nint main()\n{\n  int a[max][max/10], n, m, x, k, p = 0, i, j;\n\n  scanf(\"%d %d %d\", &n, &m, &k);\n\n  for(i = 0; i < n; i++){\n    for(j = 0; j < m; j++)\n      scanf(\"%d\", &a[i][j]);\n  }\n\n  int ans[m*m][2];\n\n  for(i = 0; i < n; i++){\n\n    for(j = 0; j < m - 1; j++){\n      for(x = j+1; x < m; x++){\n\n        if(k == 0 && a[i][x] < a[i][j]){\n          swap_set(a, j, x, ans, k, i);\n          p++;\n        }\n        else if(k == 1 && a[i][x] > a[i][j]){\n          swap_set(a, j, x, ans, k, i);\n          p++;\n        }\n      }\n    }\n  }\n\n  printf(\"%d\\n\", p);\n\n  for(i = 0; i < p; i++){\n    printf(\"%d %d\\n\", ans[i][0], ans[i][1]);\n  }\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n  int n, m, k, i, j;\n\n  scanf(\"%d %d %d\", &n, &m, &k);\n\n  printf(\"%d\\n\", m*(m -1)/2);\n\n  for(i = 0; i < m; i++){\n    for(j = i + 1; j < m; j++){\n\n      if(!k)\n        printf(\"%d %d\\n\", (i + 1), (j+ 1));\n      else\n        printf(\"%d %d\\n\", (j + 1), (i + 1));\n\n    }\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.9931623931623932, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "14a8fff02e7f658b8888a2656ed99bb3", "bug_code_uid": "892b373aea7fdce1a963ce644a934fc3", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "2bb1d245a5c16bdb4f39b2273344470a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,a;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&a);\r\n        if(a>=1900){\r\n            int b=1;\r\n            printf(\"Division %d\",b);\r\n        }\r\n        else if(a<=1899 && a>=1600)\r\n        {\r\n            int c=2;\r\n            printf(\"Division %d\",c);\r\n        }\r\n        else if(a<=1599 && a>=1400)\r\n        {\r\n            int d=3;\r\n            printf(\"Division %d\",d);\r\n        }\r\n        else if(a<=1399)\r\n        {\r\n            int e=4;\r\n            printf(\"Division %d\",e);\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,a;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&a);\r\n        if(a>=1900){\r\n            int b=1;\r\n            printf(\"Division %d\\n\",b);\r\n        }\r\n        else if(a<=1899 && a>=1600)\r\n        {\r\n            int c=2;\r\n            printf(\"Division %d\\n\",c);\r\n        }\r\n        else if(a<=1599 && a>=1400)\r\n        {\r\n            int d=3;\r\n            printf(\"Division %d\\n\",d);\r\n        }\r\n        else if(a<=1399)\r\n        {\r\n            int e=4;\r\n            printf(\"Division %d\\n\",e);\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9993769470404984, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0d80549ec9ede663109ccea26029b69f", "bug_code_uid": "e9d0d1acaeea7fb0ca39a18b89ecc369", "src_uid": "aa31a2a1ad1575aee051ddee8642c53a", "apr_id": "cec76f995b4ca6f7b66c60b782522310", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<time.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#define max(a,b) ((a>b)?a:b)\n#define min(a,b) ((a>b)?b:a)\n#define LLg long long\n#define MAX 2147483647\nint T;\nchar st[10002];\nint bx,by,ex,ey;\nvoid init();\nvoid doit();\nint main()\n{\n    //freopen(\"B.in\",\"r\",stdin);\n    init();\n    doit();\n    return 0;\n}\nvoid init()\n{\n    scanf(\"%d%d%d%d%d\\n\",&T,&bx,&by,&ex,&ey);\n    gets(st);\n}\nvoid doit()\n{\n    int i,X=0,Y=0;\n    int dx,dy;\n    dx=ex-bx;dy=ey-by;\n    for(i=0;st[i]!='\\0';i++)\n    {\n        if(dx<=0&&st[i]=='W') X++;\n        if(dx>=0&&st[i]=='E') X++;\n        if(dy<=0&&st[i]=='S') Y++;\n        if(dy>=0&&st[i]=='N') Y++;\n        if(X>=fabs(dx)&&Y>=fabs(dy)){\n        printf(\"%d\\n\",i+1);\n        return ;\n        }\n    }\n    printf(\"-1\\n\");\n    return;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<time.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#define max(a,b) ((a>b)?a:b)\n#define min(a,b) ((a>b)?b:a)\n#define LLg long long\n#define MAX 2147483647\nint T;\nchar st[100002];\nint bx,by,ex,ey;\nvoid init();\nvoid doit();\nint main()\n{\n    //freopen(\"B.in\",\"r\",stdin);\n    init();\n    doit();\n    return 0;\n}\nvoid init()\n{\n    scanf(\"%d%d%d%d%d\\n\",&T,&bx,&by,&ex,&ey);\n    gets(st);\n}\nvoid doit()\n{\n    int i,X=0,Y=0;\n    int dx,dy;\n    dx=ex-bx;dy=ey-by;\n    for(i=0;st[i]!='\\0';i++)\n    {\n        if(dx<=0&&st[i]=='W') X++;\n        if(dx>=0&&st[i]=='E') X++;\n        if(dy<=0&&st[i]=='S') Y++;\n        if(dy>=0&&st[i]=='N') Y++;\n        if(X>=fabs(dx)&&Y>=fabs(dy)){\n        printf(\"%d\\n\",i+1);\n        return ;\n        }\n    }\n    printf(\"-1\\n\");\n    return;\n}\n\n\n"}
{"similarity_score": 0.9725228975853455, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a60a21a73974f5f25a61d6b51704610a", "bug_code_uid": "4ee59350ea0c90cb8a2b423ff0a001c0", "src_uid": "e702594a8e993e135ea8ca78eb3ecd66", "apr_id": "71fe83ce5e00d981e4aa5d0f6237bcd9", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (){\n\n    int n,i,j;\n\n        scanf (\"%d\", &n);\n        int MAT [n][2];\n\n    for (i=0; i < n ; i++){\n            for (j=0; j<2 ; j++){\n\n                scanf (\"%d\", &MAT[i][j]);\n\n            }\n    }\n\nint menor, mayor = MAT[0][1];\n\nfor (i = 1 ; i < n ; i++){\n\n    if (MAT [i][1] > mayor) mayor = MAT[i][1];\n    if (MAT[i][0] < menor ) menor = MAT[i][0];\n\n}\n\nint b=0;\nint pos;\n\nfor (i = 0 ; i < n; i++){\n\n    if (menor == MAT [i][0] && mayor == MAT[i][1]){\n            b=1;\n            pos = i+1;\n    }\n}\n\nb==0? printf (\"%d\", -1) : printf (\"%d\", pos);\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main (){\n\n    int n,i,j;\n\n        scanf (\"%d\", &n);\n        int MAT [n][2];\n\n    for (i=0; i < n ; i++){\n            for (j=0; j<2 ; j++){\n\n                scanf (\"%d\", &MAT[i][j]);\n\n            }\n    }\n\nint mayor = MAT[0][1];\nint menor = MAT [0][0];\n\nfor (i = 1 ; i < n ; i++){\n\n    if (MAT [i][1] > mayor) mayor = MAT[i][1];\n    if (MAT[i][0] < menor ) menor = MAT[i][0];\n\n}\n\nint b=0;\nint pos;\n\nfor (i = 0 ; i < n; i++){\n\n    if (menor == MAT [i][0] && mayor == MAT[i][1]){\n            b=1;\n            pos = i+1;\n    }\n}\n\n(b==0)? printf (\"%d\", -1) : printf (\"%d\", pos);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.66110183639399, "equal_cnt": 26, "replace_cnt": 10, "delete_cnt": 11, "insert_cnt": 4, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "c536329a1b52a212ebe905bbb95e9966", "bug_code_uid": "d9268b913c6fa2cf07dca1f813612de7", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "81bfd4b0fd2492c5f04b4e43b98fdb4a", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfunc(const void * a, const void * b)\n{\n\treturn (*(int*)a - *(int*)b);\n}\n\nint main()\n{\n\tint lenA, lenB, nA, nB;\n\tint *a = (int*)malloc(lenA * sizeof(int)), *b = (int*)malloc(lenB * sizeof(int));\n\n\tscanf(\"%d %d\", &lenA, &lenB);\n\tscanf(\"%d %d\", &nA, &nB);\n\n\tfor (int i = 0; i < lenA; ++i)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\n\tfor (int i = 0; i < lenB; ++i)\n\t{\n\t\tscanf(\"%d\", &b[i]);\n\t}\n\t\n\tqsort(a, lenA, sizeof(int), cmpfunc);\n\tqsort(b, lenB, sizeof(int), cmpfunc);\n\n\n\tprintf(\"%s\\n\", (a[nA - 1] < b[lenB - nB] ? \"YES\" : \"NO\"));\n\treturn 0;\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\nint cmpfunc1(const void *a, const void *b)\n{\n\treturn (*(int*)a - *(int*)b);\n}\n\nint cmpfunc2(const void *a, const void *b)\n{\n\treturn (*(int*)b - *(int*)a);\n}\n\nint main()\n{\n\tint nA, nB, lA, lB;\n\tscanf(\"%d %d %d %d\", &nA, &nB, &lA, &lB);\n\n\tint *a = (int*)malloc(nA * sizeof(int));\n\tfor (int i = 0; i < nA; ++i)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tint *b = (int*)malloc(nB * sizeof(int));\n\tfor (int i = 0; i < nB; ++i)\n\t{\n\t\tscanf(\"%d\", &b[i]);\n\t}\n\n\tqsort(a, nA, sizeof(int), cmpfunc1);\n\tqsort(b, nB, sizeof(int), cmpfunc2);\n\n\tprintf(\"%s\\n\", a[lA - 1] < b[lB - 1] ? \"YES\" : \"NO\");\n\n\treturn 0;\n}"}
{"similarity_score": 0.8527918781725888, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a705a77b77ce80b812c818b73928db43", "bug_code_uid": "c13e9b47190a57e39a79c41bae170b53", "src_uid": "290d9779a6be44ce6a2e62989aee0dbd", "apr_id": "4c6e61c515daf5fcd7547a59da540648", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong long int n,m,k,i,j,x,y;\nscanf(\"%I64d %I64d %I64d\",&n,&m,&k);\nlong long int a[n][m],r[n],c[m];\nfor(i=0;i<n;i++)\n{r[i]=i;}\nfor(i=0;i<m;i++)\n{c[i]=i;}\nchar c1[2];\nfor(i=0;i<n;i++)\n{for(j=0;j<m;j++)\n{scanf(\"%I64d\",&a[i][j]);}}\nfor(i=0;i<k;i++)\n{scanf(\"%s %I64d %I64d\",c1,&x,&y);\nif(c1[0]=='g')\nprintf(\"%I64d\\n\",a[r[x-1]][c[y-1]]);\nelse if(c1[0]=='r')\n{r[r[x-1]]=y-1;\nr[r[y-1]]=x-1;}\nelse\n{c[c[x-1]]=y-1;\nc[c[y-1]]=x-1;}\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong long int n,m,k,i,j,x,y,t;\nscanf(\"%I64d %I64d %I64d\",&n,&m,&k);\nlong long int a[n][m],r[n],c[m];\nfor(i=0;i<n;i++)\n{r[i]=i;}\nfor(i=0;i<m;i++)\n{c[i]=i;}\nchar c1[2];\nfor(i=0;i<n;i++)\n{for(j=0;j<m;j++)\n{scanf(\"%I64d\",&a[i][j]);}}\nfor(i=0;i<k;i++)\n{scanf(\"%s %I64d %I64d\",c1,&x,&y);\nif(c1[0]=='g')\nprintf(\"%I64d\\n\",a[r[x-1]][c[y-1]]);\nelse if(c1[0]=='r')\n{t=r[x-1];\n r[x-1]=r[y-1];\n r[y-1]=t;\n}\nelse\n{t=c[x-1];\nc[x-1]=c[y-1];\nc[y-1]=t;}\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.13104988830975428, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "cfce3bf5ab826ac847e02fccd6fed88a", "bug_code_uid": "14a7326d581af9ab32940399cd4880c4", "src_uid": "290d9779a6be44ce6a2e62989aee0dbd", "apr_id": "2c38591923c469ff9245d2e06ac29597", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nshort int x[1001][1001];\n   short int n,m,k,o,p,q;\n      short int i,j;\n      char z;\nshort int abc,abd;\n\n  int main(){\nscanf(\"%d %d %d\",&n,&m,&k);\n      for(i=1;i<=n;i++){\n          for(j=1;j<=m;j++){\n              scanf(\"%d\",&x[i][j]);\n                        }\n        scanf(\"\\n\");\n      }\n      for(j=0;j<k;j++){\n          scanf(\"%c %d %d\\n\",&z,&o,&p);\n          if(z == 'g'){\n              printf(\"%d\\n\",x[o][p]);\n          }else if(z == 'r'){\n              for(i=1;i<=m;i++){\n                 abc = x[o][i];\n                 x[o][i] = x[p][i];\n                 x[p][i] = abc;\n              }\n          }\n          else{\n              for(i=1;i<=n;i++){\n                  abd = x[i][o];\n                  x[i][o] = x[i][p];\n                  x[i][p] = abd;\n              }\n          }\n      }\n      return 0;\n      }\n", "fixed": "int a[1001][1001],r[1001],c[1001];\nint n,m,k;\n\nint main()\n{\n  int i,j,x,y,temp;\n  char op;\n  scanf(\"%d%d%d\",&n,&m,&k);\n      for(i=1;i<=n;i++)\n      for(j=1;j<=m;j++)\n        scanf(\"%d\",&a[i][j]);\n    for(i=1;i<=n;i++) r[i]=i;\n    for(i=1;i<=m;i++) c[i]=i;\n    while(k--)\n    {\n      getchar();\n      scanf(\"%c %d %d\",&op,&x,&y);\n      if(op=='r') {temp=r[x];r[x]=r[y];r[y]=temp;}\n      if(op=='c') {temp=c[x];c[x]=c[y];c[y]=temp;}\n      if(op=='g') printf(\"%d\\n\",a[r[x]][c[y]]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5095729013254786, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "924a34abe9d603a58010761031ec92fc", "bug_code_uid": "b6dd00caa79499026548e2728d2807c2", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "b23139d6b520ae34a99a5e5b551d1965", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n  int array[1001][4];\n  int n;\n  int sum=0;\n  scanf(\"%d\",&n);\n  for(int i=0;i<n;i++){\n    for(int j=0;j<3;j++){\n      scanf(\"%d\",&array[i][j]);\n    }\n  }\n  for(int i=0;i<n;i++){\n    for(int j=0;j<n;j++){\n      sum += array[i][j];\n    }\n  }\n  if(sum==0){\n    printf(\"YES\");\n  }\n  else{\n    printf(\"NO\");\n  }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n  int x,y,z;\n  int n;\n  int sumx=0,sumy=0,sumz=0;\n  scanf(\"%d\",&n);\n  for(int i=0;i<n;i++){\n    scanf(\"%d %d %d\",&x,&y,&z);\n    sumx = sumx + x;\n    sumy = sumy + y;\n    sumz = sumz + z;\n  }\n\n  if(sumx==0 && sumy==0 && sumz==0){\n    printf(\"YES\");\n  }\n  else{\n    printf(\"NO\");\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.8434670116429496, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "2f6c491ea5b69302fd17fbfe126c39f7", "bug_code_uid": "672cc5bd3ac43bf7636338ab439e1131", "src_uid": "2070955288b2e2cdbae728d8e7ce78ab", "apr_id": "7d77c70931c2eccfa95ea53dbb4f3082", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 100000\nint main(){\n\tint n,m,i,j;\n\tint a[N];\n\tint p[N]={0};\n\tint ans[N]={0};\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++)scanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++){\n\t\tp[a[i]-1]++;\n\t\tfor(j=0;j<n;j++)if(!p[j])break;\n\t\tif(j==n){\n\t\t\tfor(j=0;j<n;j++)p[j]--;\n\t\t\tans[i]=1;\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)printf(\"%d\",ans[i]);\n}", "fixed": "#include<stdio.h>\n#define N 100000\nint main(){\n\tint n,m,i,j;\n\tint a[N];\n\tint p[N]={0};\n\tint ans[N]={0};\n\tint enable=0;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<m;i++)scanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++){\n\t\tif(!p[a[i]-1])enable++;\n\t\tp[a[i]-1]++;\n\t\tif(enable<n)continue;\n\t\tfor(j=0;j<n;j++)if(!p[j])break;\n\t\tif(j==n){\n\t\t\tfor(j=0;j<n;j++)p[j]--;\n\t\t\tenable=0;\n\t\t\tfor(j=0;j<n;j++)if(p[j])enable++;\n\t\t\tans[i]=1;\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)printf(\"%d\",ans[i]);\n}"}
{"similarity_score": 0.9638888888888889, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "0321e7ad0c435688c2a3a618d48f938e", "bug_code_uid": "d985f43b9cffee069ac85cd0f61f299c", "src_uid": "b34846d90dc011f2ef37a8256202528a", "apr_id": "72b5d706fda83f15dca88eb1603f6978", "difficulty": 1200, "tags": ["greedy", "constructive algorithms", "math", "implementation", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nlong long int Max(long long int a,long long int b){\n\treturn a>b?a:b;\n}\n\nint main(){\n\tlong long int b,d,s,i;\n\tscanf(\"%lld %lld %lld\",&b,&d,&s);\n\tlong long int max=Max(b,d);\n\tmax=Max(max,s);\n\tif(b==d && d==s && s==b)\n\t\tprintf(\"0\");\n    else if((max==b && max==d)){\n        printf(\"%lld\",max-s);\n    }\n    else if((max==b && max==s)){\n        printf(\"%lld\",max-d-1);\n    }\n    else if((max==d && max==s)){\n        printf(\"%lld\",max-b-1);\n    }\n    else {\n\t\tif(max==b){\n\t\t\tprintf(\"%lld\",abs(max-1-s)+abs(max-1-d));\n\t\t}\n\t\telse if(max==d){\n\t\t\tprintf(\"%lld\",abs(max-1-s)+abs(max-1-b));\n\t\t}\n\t\telse if(max==s){\n\t\t\tprintf(\"%lld\",abs(max-1-b)+abs(max-1-d));\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nlong long int Max(long long int a,long long int b){\n\treturn a>b?a:b;\n}\n\nint main(){\n\tlong long int b,d,s,i;\n\tscanf(\"%lld %lld %lld\",&b,&d,&s);\n\tlong long int max=Max(b,d);\n\tmax=Max(max,s);\n\tif(b==d && d==s && s==b)\n\t\tprintf(\"0\");\n    else if((max==b && max==d)){\n        printf(\"%lld \",max-s-1);\n    }\n    else if((max==b && max==s)){\n        printf(\"%lld \",max-d-1);\n    }\n    else if((max==d && max==s)){\n        printf(\"%lld \",max-b-1);\n    }\n    else {\n\t\tif(max==b){\n\t\t\tprintf(\"%lld \",(max-1-s)+(max-1-d));\n\t\t}\n\t\telse if(max==d){\n\t\t\tprintf(\"%lld \",(max-1-s)+(max-1-b));\n\t\t}\n\t\telse if(max==s){\n\t\t\tprintf(\"%lld \",(max-1-b)+(max-1-d));\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.837491571139582, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d0df731893e49a996c6458669fc0d05f", "bug_code_uid": "2fb540840029ab93591ab3b0fa4dd02e", "src_uid": "aa31a2a1ad1575aee051ddee8642c53a", "apr_id": "61a27ee03bfc210343b35fc594970298", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,cx,cy,dx,dy,i,p=0;\n    char ara[100003];\n    scanf(\"%lld%lld%lld%lld%lld\",&t,&cx,&cy,&dx,&dy);\n    scanf(\"%s\",&ara);\n    for(i=0;i<t;i++)\n    {\n        if(cx==dx && cy==dy)\n        {\n            printf(\"%lld\\n\",i);\n            p=1;\n            break;\n        }\n        else if(ara[i]=='N')\n        {\n            if(cy<dy)\n                cy++;\n        }\n        else if(ara[i]=='E')\n        {\n            if(cx<dx)\n                cx++;\n        }\n        else if(ara[i]=='S')\n        {\n            if(cy>dy)\n                cy--;\n        }\n        else if(ara[i]=='W')\n        {\n            if(cx>dx)\n                cx--;\n        }\n    }\n    if(p==0)\n        printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,cx,cy,dx,dy,i,p=0;\n    char ara[100003];\n    scanf(\"%lld%lld%lld%lld%lld\",&t,&cx,&cy,&dx,&dy);\n    scanf(\"%s\",&ara);\n    for(i=0;i<t;i++)\n    {\n        if(ara[i]=='N')\n        {\n            if(cy<dy)\n                cy++;\n        }\n        else if(ara[i]=='E')\n        {\n            if(cx<dx)\n                cx++;\n        }\n        else if(ara[i]=='S')\n        {\n            if(cy>dy)\n                cy--;\n        }\n        else if(ara[i]=='W')\n        {\n            if(cx>dx)\n                cx--;\n        }\n        if(cx==dx && cy==dy)\n        {\n            printf(\"%lld\\n\",i+1);\n            p=1;\n            break;\n        }\n    }\n    if(p==0)\n        printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.5165238678090576, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "ac8c66fd4cac4a395615041f00a74982", "bug_code_uid": "a02434bdbac172da97054613cab082d4", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "b9625c49ae392860ec79b0bb4360d9e4", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int t;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          int a,b,c,d,x,y;\n          scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n          x=a+b;\n          y=c+d;\n          float s=sqrt(x+y);\n\n          if(x==y)\n               printf(\"Yes\\n\");\n          if(ceil(s)==floor(s))\n          printf(\"Yes\\n\");\n          else\n               printf(\"No\\n\");\n\n     }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int t;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          int a,b,c,d,x;\n          scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n          if(a<b){\n          x=a;a=b;b=x;\n          }\n          if(c<d){\n          x=c;c=d;d=x;\n          }\n          if(a!=c)\n               printf(\"No\\n\");\n          else if(b+d!=a||b+d!=c)\n               printf(\"No\\n\");\n          else\n               printf(\"Yes\\n\");\n     }\n}\n"}
{"similarity_score": 0.1580246913580247, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "a6eca0f365be48b45063ee575cf7eef3", "bug_code_uid": "c072fad5599008483dc9789bb428f176", "src_uid": "bf0422de4347a308d68a52421fbad0f3", "apr_id": "b3f831cc59d69bfa66b4777f611bb95f", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint a[3005],b[1000004]={0};\nint main()\n{\n    int i,n,m,c,count=0;\n    memset(b,0,sizeof(b));\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&c);\n        b[c]=1;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[a[i]]==0)\n        count++;\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint a[3005],b[3005];\nint main()\n{\n    int i,n,m,j;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    for(i=0,j=0;i<n&&j<m;)\n    {\n        if(a[i]<=b[j])\n        {\n            i++;\n            j++;\n        }\n        else\n        {\n            j++;\n        }\n    }\n    printf(\"%d\\n\",n-i);\n    return 0;\n}\n"}
{"similarity_score": 0.9554753309265944, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "93ac47b8a2b3eef598c02120a21a5a16", "bug_code_uid": "968c43c474147f452f22cdc87331b85c", "src_uid": "4cf0fe49f7ebf058317ac848043031a5", "apr_id": "72ae16e0287c2e48a3affc37bf071558", "difficulty": 1300, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,test_case,g_array[1000001],r_array[1000001],test_array[1000000]={0};\n    long long int sum = 0;\n    int ans =  0;\n    scanf(\"%d\",&test_case);\n    for(i=0;i<test_case;i++){\n        scanf(\"%d\",&g_array[i]);\n        sum =sum + g_array[i];\n        test_array[g_array[i]]++;\n    }\n    for(i=0;i<test_case;i++){\n        sum = sum - g_array[i];\n        test_array[g_array[i]]--;\n        if( sum%2==0 && sum<=2000000){\n                if(test_array[sum/2]>0){\n                        r_array[ans]=i+1;\n                        ++ans;\n                }\n\n        }\n        sum = sum + g_array[i];\n        test_array[g_array[i]]++;\n\n    }\n    if(ans == 0){\n        printf(\"0\");\n        return 0;\n    }\n    printf(\"%d\\n\",ans);\n    for(i=0;i<ans;i++){\n        printf(\"%d \",r_array[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,ans=0,test_case,g_array[2000000],r_array[2000000],test_array[2000000]={0};\n    long long int sum = 0;\n    scanf(\"%d\",&test_case);\n    for(i=0;i<test_case;i++){\n        scanf(\"%d\",&g_array[i]);\n        sum =sum + g_array[i];\n        test_array[g_array[i]]++;\n    }\n    for(i=0;i<test_case;i++){\n        sum = sum - g_array[i];\n        test_array[g_array[i]]--;\n        if( sum%2==0  &&  sum <= 2000000){\n                if(test_array[sum/2]>0){\n                        r_array[ans]=i+1;\n                        ans++;\n                }\n\n        }\n        sum = sum + g_array[i];\n        test_array[g_array[i]]++;\n\n    }\n    if(ans == 0){\n        printf(\"0\");\n        return 0;\n    }\n    printf(\"%d\\n\",ans);\n    for(i=0;i<ans;i++){\n        printf(\"%d \",r_array[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.503725782414307, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "dfbbaf73e6eac40c3c148f54fbe20273", "bug_code_uid": "58876c739b9b04548bc4db4aa34a254e", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "c3df4def0532995e65cd404fcbe983a3", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint t,n,a,b;\n\tn=0;\n\tscanf(\"%d\",&t);\n\tfor(t;t!=0; t--)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tscanf(\"%d\",&b);\n\t\twhile(a!=b)\n\t\t{\n\t\t\tif(a>b)\n\t\t\t{\n\t\t\t\tif((a-b)>10)\n\t\t\t\t{\n\t\t\t\t\ta-=10;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta-=a-b\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((b-a)>10)\n\t\t\t\t{\n\t\t\t\t\ta+=10;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta+=b-a\n\t\t\t\t}\n\t\t\t}\n\t\t\tn++\n\t\t}\n\t\tprintf(\"%d\",n);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint t,n,a,b;\n\tscanf(\"%d\",&t);\n\tfor(t;t!=0;t--)\n\t{\n\t    \n\t\tscanf(\"%d\",&a);\n\t\tscanf(\"%d\",&b);\n\t\tif (b>a)\n\t\t{\n\t\t    n=b;\n\t\t    b=a;\n\t\t    a=n;\n\t\t}\n\t\tn=0;\n\t\ta=a-b;\n\t    n=a/10;\n\t    if(a%10>0)\n\t    {\n\t        n++;\n\t    }\n\t\tprintf(\"%d\\n\",n);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8042430086788814, "equal_cnt": 20, "replace_cnt": 19, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "b3751391aeb455bd65dd0172d128381d", "bug_code_uid": "5447ea94ba4ac9230bd41a46e3ed2b99", "src_uid": "5e449867d9fcecc84333b81eac9b5d92", "apr_id": "98607ff431528225ae985a5d286041eb", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp(const void *a, const void *b) {\n\treturn *((int*)a) - *((int*)b);\n}\n\nint main () {\n\tint n, i, vet[3001], flag=0;\n\tscanf(\"%d\",&n);\n\tfor (i=0; i<n; i++)\n\t\tscanf(\"%d\",vet+i);\n\tqsort(vet,n,sizeof(int),comp);\n\tif (vet[0] != 1)\n\t\tprintf(\"1\\n\");\n\telse {\n\t\tfor (i=1; i<n; i++) {\n\t\t\tif (vet[i] != vet[i-1]+1) {\n\t\t\t\tflag=1;\n\t\t\t\tprintf(\"%d\\n\",vet[i-1]+1);\n\t\t\t}\n\t\t}\n\t\tif(!flag)\n\t\t\tprintf(\"%d\\n\",n+1);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp(const void *a, const void *b) {\n    return *((int*)a) - *((int*)b);\n}\n\nint main () {\n    int n, i, vet[3001], flag=0;\n    scanf(\"%d\",&n);\n    for (i=0; i<n; i++)\n        scanf(\"%d\",vet+i);\n    qsort(vet,n,sizeof(int),comp);\n    if (vet[0] != 1)\n        printf(\"1\\n\");\n    else {\n        for (i=1; i<n; i++) {\n            if (vet[i] != vet[i-1]+1) {\n                flag=1;\n                printf(\"%d\\n\",vet[i-1]+1);\n                break;\n            }\n        }\n        if(!flag)\n            printf(\"%d\\n\",n+1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.83, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "20aed67005c16fea52b5732e3c9097ac", "bug_code_uid": "09b4cd911f1b99afcbde6846e985aa9d", "src_uid": "5dd0d518f315d81204b25e48fea0793a", "apr_id": "09c670ba52102a3c55a8e72d28326694", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint k, d, i;\n\n\tscanf(\"%d%d\", &k, &d);\n\n\tprintf(\"%d\", d);\n\n\tfor (i = 0; i < k - 1; i++)\n\t\tprintf(\"0\");\n\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint k, d, i;\n\n\tscanf(\"%d%d\", &k, &d);\n\n\tif (k != 1 && d == 0) {\n\t\tprintf(\"No solution\\n\");\n\t\treturn 0;\n\t}\n\n\tprintf(\"%d\", d);\n\n\tfor (i = 0; i < k - 1; i++)\n\t\tprintf(\"0\");\n\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9941176470588236, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ac00185318a91d15e6b977190432006d", "bug_code_uid": "c886b1f81db50ef5666bea8187641642", "src_uid": "2c921093abf2c5963f5f0e96cd430456", "apr_id": "ff3f27957faf5df1153f6844e79eeb32", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\nint x,y,B,n,t;int a,b;long int sum;int i;\r\nscanf(\"%d\",&t);\r\n \r\nwhile(t>0)\r\n{    \r\n    scanf(\"%d %d %d %d\",&n,&B,&x,&y);\r\n    b=0;a=0;sum=0;\r\n    b=a+x;\r\n    for(i=1;i<=n;i++)\r\n{\r\n    if(b<=B)\r\n    {\r\n        sum=sum+b;\r\n        a=b;\r\n        b=a+x;\r\n    }\r\n    else \r\n    {\r\n        b=a-y;\r\n        sum=sum+b;\r\n        a=b;\r\n        b=a+x;\r\n    }\r\n    \r\n}\r\n \r\nprintf(\"%ld\",sum);\r\n   t--;\r\n   if(t>0) \r\n   {\r\n       printf(\"\\n\");\r\n   }\r\n    \r\n    \r\n}\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\nint x,y,B,n,t;int a,b;long long int sum;int i;\r\nscanf(\"%d\",&t);\r\n \r\nwhile(t>0)\r\n{    \r\n    scanf(\"%d %d %d %d\",&n,&B,&x,&y);\r\n    b=0;a=0;sum=0;\r\n    b=a+x;\r\n    for(i=1;i<=n;i++)\r\n{\r\n    if(b<=B)\r\n    {\r\n        sum=sum+b;\r\n        a=b;\r\n        b=a+x;\r\n    }\r\n    else \r\n    {\r\n        b=a-y;\r\n        sum=sum+b;\r\n        a=b;\r\n        b=a+x;\r\n    }\r\n    \r\n}\r\n \r\nprintf(\"%lld\",sum);\r\n   t--;\r\n   if(t>0) \r\n   {\r\n       printf(\"\\n\");\r\n   }\r\n    \r\n    \r\n}\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9498861047835991, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "982e66d514cdbb3446756940a6ad6382", "bug_code_uid": "7ca3b2304d6729f66865cb996865656a", "src_uid": "7eae40835f6e9580b985d636d5730e2d", "apr_id": "49f2978674a0e91d9a2d15ae2ecad19a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint numTest;\n\tscanf(\"%d\", &numTest);\n\tfor(int i=0; i<numTest; i++){\n\t\tint l, r;\n\t\tint ans;\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tint ans1 = (r-l+1)/2;\n\t\tint ans2 = (r+l)/2;\n\t\tif(l%2!=0){\n\t\t\tif(r%2==0){\n\t\t\t\tans=ans1;\n\t\t\t}\n\t\t\telse if(r%2!=0){\n\t\t\t\tans=-ans2;\n\t\t\t}\n\t\t}\n\t\telse if(l%2==0){\n\t\t\tif(r%2!=0){\n\t\t\t\tans=-ans1;\n\t\t\t}\n\t\t\telse if(r%2==0){\n\t\t\t\tans=ans2;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn ans;\n}", "fixed": "#include<stdio.h>\nint call(int x){\n\treturn x;\n}\nint main(void){\n\tint numTest;\n\tscanf(\"%d\", &numTest);\n\tfor(int i=0; i<numTest; i++){\n\t\tint l, r;\n\t\tint ans;\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tint ans1 = (r-l+1)/2;\n\t\tint ans2 = (r+l)/2;\n\t\tif(l%2!=0){\n\t\t\tif(r%2==0){\n\t\t\t\tans=ans1;\n\t\t\t}\n\t\t\telse if(r%2!=0){\n\t\t\t\tans=-ans2;\n\t\t\t}\n\t\t}\n\t\telse if(l%2==0){\n\t\t\tif(r%2!=0){\n\t\t\t\tans=-ans1;\n\t\t\t}\n\t\t\telse if(r%2==0){\n\t\t\t\tans=ans2;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8184438040345822, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "deb1d784d4461931231b6262f576192f", "bug_code_uid": "872d3609166e9d1e6ed202b10e82f6d4", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "71288047547e445cbae022e281894491", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int T;\n    scanf(\"%d\",&T);\n    int i;\n\n    long long x,y,a,b;\n    for(i=0;i<T;i++)\n    {\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n                int count=0;\n\n    while(x<y)\n  {\n\n    x=x+a;\n    y=y-b;\n    count++;\n  }\n\n if(x-y==0)\n  printf(\"%d\\n\",count);\n    else if(x-y!=0)\n            printf(\"-1\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int T;\n    scanf(\"%d\",&T);\n    int i;\n\n    long long x,y,a,b;\n    for(i=0;i<T;i++)\n    {\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n                int count=0;\n        if((y-x)%(a+b)==0)\n            printf(\"%d\\n\",(y-x)/(a+b));\n\n    else\n            printf(\"-1\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.11532625189681335, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "ee0c245a92a6b518b6fbc008c750b15c", "bug_code_uid": "de3316bd331c99e39352aeeb7e9f3e01", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "8ecb9a8fe9c8f1fb8fe739242e00b994", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int users;\n    int rank;\n    \n    cin >> users;\n    for (int i=0; i < users; i++) {\n        cin >> rank;\n        if (rank <= 1399){\n            cout << \"Division 4 \\n\";\n        }\n        else if (rank <=1599){\n            cout << \"Division 3 \\n\";\n        }\n        else if (rank <= 1899){\n            cout << \"Division 2 \\n\";\n        }else {\n            cout << \"Division 1 \\n\";\n        }\n    }\n    return 0;\n}\n      \t\t\t \t\t\t \t\t  \t\t  \t\t  \t\t\t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int T,rating,i;\n    scanf(\"%d\",&T);\n    if(T>=0 && T<=10000)\n    {\n        for(i=1;i<=T;i++)\n        {\n            scanf(\"%d\",&rating);\n            if(rating>=-5000 && rating <=5000)\n            {\n                if(rating>=1900)\n                {\n                    printf(\"Division 1\\n\");\n                }\n                if(rating>=1600 && rating<=1899)\n                {\n                    printf(\"Division 2\\n\");\n                }\n                if(rating>=1400 && rating <=1599)\n                {\n                    printf(\"Division 3\\n\");\n                }\n                if(rating<=1399)\n                {\n                    printf(\"Division 4\\n\");\n                }\n\n\n            }\n\n        }\n    }\n    return 0;\n}\n  \t \t \t\t\t \t\t   \t\t\t\t\t   \t      \t"}
{"similarity_score": 0.5422343324250681, "equal_cnt": 7, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d7a0218dc68b5eaeef10c591e07f3b9e", "bug_code_uid": "d9da386a5573ee9b8cea946faaf9129e", "src_uid": "4322861935ca727b0de8556849bc5982", "apr_id": "4c6fa49d866c50792969957541611607", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int x,y,i,z,t,result;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d%d\",&x,&y,&z);\r\n        if(x==y && y==z && x==z)\r\n        {\r\n            result=(x*1)+(y*2)-(z*3);\r\n            printf(\"%d\\n\",result);\r\n        }\r\n        else if(x!=y || y!=z || z!=x || x!=y!=z)\r\n        {\r\n        result=(x*1)+(y*2)-(z*1);\r\n        printf(\"%d\\n\",result);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int x,y,i,z,t,result;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d%d\",&x,&y,&z);\r\n        result=((x*1)+(y*2)+(z*3));\r\n        if(result%2==0)\r\n        printf(\"0\\n\");\r\n        else\r\n        printf(\"1\\n\");\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n"}
{"similarity_score": 0.9990196078431373, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f630e40d91336fbfec5ee14d27b39474", "bug_code_uid": "4dde8c88ff71744b641d9cac2d90ddd3", "src_uid": "0c2550b2df0849a62969edf5b73e0ac5", "apr_id": "c0cff9f3e786d7f034f8ca29a0469f91", "difficulty": 1300, "tags": ["dp", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": " #include<stdio.h>\n#define r(n) scanf(\"%d\",&n);\n#define p(n) printf(\"%d\\n\",n);\nint main()\n{\n    int q,n,s;\n    r(q);\n    int i;\n    for(i=0;i<q;i++)\n    {\n        r(n);\n        if(n<4)\n        {\n        \tn=-1;\n        \tp(n);\n        }\n        else\n        {\n        \tif(n%4==0)\n        \t{\n        \t\tn=n/4;\n        \t\tp(n);\n        \t}\n        \telse if(n%4==1)\n        \t{\n        \t\tn=n-9;\n        \t\tif(n<0)\n        \t\t{\n        \t\t\tn=-1;\n        \t\t\tp(n);\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tn=n/4+1;\n        \t\t\tp(n);\n        \t\t}\n        \t}\n        \telse if(n%4==2)\n        \t{\n        \t\tn=n-2;\n        \t\tif(n<4)\n        \t\t{\n        \t\t\tn=-1;\n        \t\t\tp(n);\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tn=n/4;\n        \t\t\tp(n);\n        \t\t}\n        \t}\n        \telse if(n%4==3)\n        \t{\n        \t\tn=n-15;\n        \t\tif(n<=0)\n        \t\t{\n        \t\t\tn=-1;\n        \t\t\tp(n);\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tn=n/4+2;\n        \t\t\tp(n);\n        \t\t}\n        \t}\n        }\n        \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#define r(n) scanf(\"%d\",&n);\n#define p(n) printf(\"%d\\n\",n);\nint main()\n{\n    int q,n,s;\n    r(q);\n    int i;\n    for(i=0;i<q;i++)\n    {\n        r(n);\n        if(n<4)\n        {\n        \tn=-1;\n        \tp(n);\n        }\n        else\n        {\n        \tif(n%4==0)\n        \t{\n        \t\tn=n/4;\n        \t\tp(n);\n        \t}\n        \telse if(n%4==1)\n        \t{\n        \t\tn=n-9;\n        \t\tif(n<0)\n        \t\t{\n        \t\t\tn=-1;\n        \t\t\tp(n);\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tn=n/4+1;\n        \t\t\tp(n);\n        \t\t}\n        \t}\n        \telse if(n%4==2)\n        \t{\n        \t\tn=n-2;\n        \t\tif(n<4)\n        \t\t{\n        \t\t\tn=-1;\n        \t\t\tp(n);\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tn=n/4;\n        \t\t\tp(n);\n        \t\t}\n        \t}\n        \telse if(n%4==3)\n        \t{\n        \t\tn=n-15;\n        \t\tif(n<0)\n        \t\t{\n        \t\t\tn=-1;\n        \t\t\tp(n);\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tn=n/4+2;\n        \t\t\tp(n);\n        \t\t}\n        \t}\n        }\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.7968923418423973, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "9a4452cb2e792c8077b4f88db9ded9e9", "bug_code_uid": "80a2a6255a5412df9c5492200691253a", "src_uid": "4d743a00e11510c824080ad7f1804021", "apr_id": "92e7412c7cb4cf09a8604390bf191767", "difficulty": 900, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,k,f,l,i,j;\nlong long int a[51],max,p[51];\nscanf(\"%d %d\",&n,&k);\nfor(i=1;i<=n;i++)\n{scanf(\"%I64d\",&a[i]);}\nf=n;\nmax=a[1];\nfor(j=1;j<=n;j++)\n{if(a[j]>max)\n{max=a[j];}}\nwhile(max!=0)\n{for(l=1;l<=n;l++)\n{if(a[l]==max)\n{p[f]=max;\nf--;}\n}\nmax--;}\np[0]=0;\nif(n>=k)\n{\nif((p[n-k+1]-1)>p[n-k])\nprintf(\"%I64d %I64d\",p[n-k+1]-1,p[n-k+1]-1);\nif((p[n-k+1]-1)==p[n-k])\nprintf(\"%I64d %I64d\",p[n-k+1],p[n-k+1]);}\nelse\n printf(\"-1\");\nreturn(0);}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,k,i,j,z,l;\nlong long int a[51],max,p[51];\nscanf(\"%d %d\",&n,&k);\nfor(i=1;i<=n;i++)\n{scanf(\"%I64d\",&a[i]);}\nmax=0;\nfor(z=1;z<=n;z++)\n{for(j=1;j<=n;j++)\n{if(a[j]>max)\n{max=a[j];\nl=j;}}\np[n-z+1]=max;\nmax=0;\na[l]=0;}\np[0]=0;\nif(n>=k)\n{\nif((p[n-k+1]-1)>p[n-k])\nprintf(\"%I64d %I64d\",p[n-k+1]-1,p[n-k+1]-1);\nif((p[n-k+1]-1)==p[n-k])\nprintf(\"%I64d %I64d\",p[n-k+1],p[n-k+1]);}\nelse\n printf(\"-1\");\nreturn(0);}\n"}
{"similarity_score": 0.8208333333333333, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "96e55d95a5b3c265c0931dcbe49137fa", "bug_code_uid": "ad75ba5f8a32392dedbf6619abc6f81a", "src_uid": "485d5984e34a479f2c074a305ae999ae", "apr_id": "645f0070aa2a6e93f47afffb716dc0c9", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint process(int n)\r\n{\r\n    int a[n];\r\n    char s[n + 1];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        scanf(\"%d\", &a[i]);\r\n    }\r\n    getchar();\r\n    gets(s);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        for (int j = i + 1; j < n; j++)\r\n        {\r\n            if (a[i] == a[j] && s[i] != s[j])\r\n                return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nint main()\r\n{\r\n    int t, n;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        if (process(n) == 1)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n            printf(\"N0\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint process(int n)\r\n{\r\n    int a[n];\r\n    char s[n + 1];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        scanf(\"%d\", &a[i]);\r\n    }\r\n    getchar();\r\n    gets(s);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        for (int j = i + 1; j < n; j++)\r\n        {\r\n            if (a[i] == a[j] && s[i] != s[j])\r\n                return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nint main()\r\n{\r\n    int t, n;\r\n    scanf(\"%d\", &t);\r\n    int save[t];\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        if (process(n) == 1)\r\n        {\r\n            save[i] = 1;\r\n        }\r\n        else\r\n            save[i] = 0;\r\n    }\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        if (save[i] == 1)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.75, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c050d13aadf4ae0c9f40e9102c9bd3fd", "bug_code_uid": "a103f6ae56d8b11b30d708e5b8711788", "src_uid": "731b45747081a800fc6da02efa5ce8cd", "apr_id": "24930e2ae5c8b196fae4314fdd07aba7", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t, n, a[200005], i;\n    scanf(\"%lld\", &t);\n    while(t--)\n    {\n        long long int m=0;\n        scanf(\"%lld\", &n);\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%lld\", &a[i]);\n        }\n        for(i=n-1; i>=0; i--)\n        {\n            if(a[i-1]>a[i] && a[i+1]>a[i])\n            {\n                m=i;\n                break;\n            }\n        }\n        printf(\"%lld\\n\", m);\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long int t;\n    scanf(\"%ld\", &t);\n    while(t--)\n    {\n        long long int m=0, i,  n, a[200005], c=0;\n        scanf(\"%lld\", &n);\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%lld\", &a[i]);\n        }\n        for(i=n-1; i>=0; i--)\n        {\n            if(a[i-1]<a[i])\n            {\n                c++;\n            }\n            if(a[i-1]>a[i] && c>0)\n            {\n                m=i;\n                break;\n            }\n        }\n        printf(\"%lld\\n\", m);\n    }\n}\n"}
{"similarity_score": 0.9980276134122288, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8c1306348d5380325021760d4d528d67", "bug_code_uid": "3e33d24043168f5a8e5adab8654ab5ce", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "e51252f219fb5238f9c92ca6b03c71f7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while (n>0)\r\n    {\r\n        short int rat=0;\r\n        scanf(\"%hd\",&rat);\r\n        rat/=100;\r\n        printf(\"Divison %hd\\n\",(1+(rat<19)+(rat<16)+(rat<14)));\r\n        n--;\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while (n>0)\r\n    {\r\n        short int rat=0;\r\n        scanf(\"%hd\",&rat);\r\n        rat/=100;\r\n        printf(\"Division %hd\\n\",(1+(rat<19)+(rat<16)+(rat<14)));\r\n        n--;\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9546165884194053, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a8b2eb68b31c8505acef42320896368d", "bug_code_uid": "4d7b6c06f14fa48432d3a93bf064f592", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "58c956727f87c02d38a0819d262971f8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n\tint n, i;\n\t\n\tscanf(\"%d\", &n);\n\t\n\tif(n==1){\n\t\tprintf(\"I hate it\");\n\t\treturn;\n\t}\n\telse{\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(i%2 == 1){\n\t\t\t\tprintf(\"I hate \");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"I love \");\n\t\t\t}\n\t\t\tif(i != n){\n\t\t\t\tprintf(\"that \");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"it\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n, i;\n\t\n\tscanf(\"%d\", &n);\n\t\n\tif(n==1){\n\t\tprintf(\"I hate it\");\n\t}\n\telse{\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(i%2 == 1){\n\t\t\t\tprintf(\"I hate \");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"I love \");\n\t\t\t}\n\t\t\tif(i != n){\n\t\t\t\tprintf(\"that \");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"it\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9603130240357741, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "c25952352e51f2518a3a2adb29d425e4", "bug_code_uid": "2126394131d9121f50f1797c70dfe562", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "0f6b99b61e483d1798b017cc82b18fdd", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100000];\n    int i,x=0,y=0,m=0,n=0;\n    gets(s);\n    for(i=0;i<strlen(s);i++){\n        if(s[i]=='A'&&s[i+1]=='B'){\n            x=1;\n            i++;\n            m=1;\n        }\n        else if(s[i]=='B'&&s[i+1]=='A'){\n            y=1;\n            i++;\n            n=1;\n        }\n    }\n    if(m==1&&n==1){\n        printf(\"YES\\n\");\n    }\n    else{\n        x=0;\n        y=0;\n        m=0;\n        n=0;\n        for(i=strlen(s)-1;i>=0;i--){\n            if(s[i]=='B'&&s[i-1]=='A'){\n                x=1;\n                i--;\n                m=1;\n            }\n            else if(s[i]=='A'&&s[i-1]=='B'){\n                y=1;\n                i--;\n                n=1;\n            }\n        }\n        if(m==1&&n==1){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100000];\n    int i,x=0,y=0,m=0,n=0;\n    gets(s);\n    for(i=0;i<strlen(s)-1;i++){\n        if(s[i]=='A'&&s[i+1]=='B'&&x==0){\n            x=1;\n            i++;\n            m=1;\n        }\n        else if(s[i]=='B'&&s[i+1]=='A'&&y==0){\n            y=1;\n            i++;\n            n=1;\n        }\n    }\n    if(m==1&&n==1){\n        printf(\"YES\\n\");\n    }\n    else{\n        x=0;\n        y=0;\n        m=0;\n        n=0;\n        for(i=strlen(s)-1;i>0;i--){\n            if(s[i]=='A'&&s[i-1]=='B'&&x==0){\n                x=1;\n                i--;\n                m=1;\n            }\n            else if(s[i]=='B'&&s[i-1]=='A'&&y==0){\n                y=1;\n                i--;\n                n=1;\n            }\n        }\n        if(m==1&&n==1){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.5985576923076923, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "98391c75aaca034b529531e795dd5998", "bug_code_uid": "a7478e4a312dec525d456084a88189c0", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "ad4b23a8b7bf1367d988e68f04ca59e5", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        int n,k;\n        scanf(\"%d\",&n);\n        for(k=0;k>1;k++)\n        {\n          int x;\n          for(x=0;x<=n;x++)\n          {\n              int p,y;\n              p=pow(2,k);\n              y=x*(p-1);\n              if(y==n)\n              printf(\"%d\",x);\n          }\n        }\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nlong unsigned int solve();\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    solve(t);\n}\n   long unsigned int solve( int a)\n    {\n         for(int i=1;i<=a;i++)\n    {\n        long unsigned int n,k,p;\n        scanf(\"%u\",&n);\n        for(k=2;k<30;k++){\n            p=pow(2,k);\n          if(n%(p-1)==0) {\n              printf(\"%u\\n\",n/(p-1));\n              break;\n           }\n        }\n    }return 0;\n}\n"}
{"similarity_score": 0.99308142629058, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0582ea269fbd3bf293536805c0454e66", "bug_code_uid": "4fad5bfb3a3534884779a80367af4203", "src_uid": "4bf3a94119d08a9cd6075a67d0014061", "apr_id": "879ab63fe60076bf85aa0ec8346f6e19", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,m,i,l,j,idx,z;\n    int a[5002][2];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        z=1;\n        scanf(\"%d\",&n);\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a[i][0]);\n        }\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a[i][1]);\n            if(a[i][1]==1)\n                l++;\n        }\n        if(l!=0&&l<n)\n        {\n            printf(\"Yes\\n\");\n            continue;\n        }\n        else\n            for(i=0; i<n-1; i++)\n            {\n                idx=i;\n                for(j=i+1; j<n; j++)\n                {\n                    if(a[j][0]<a[idx][0])\n                        idx=j;\n                }\n\n                l=0;\n                if(idx!=i)\n                {\n\n                    printf(\"No\\n\");\n                    z=0;\n                    break;\n\n                }\n\n            }\n        if(z==1)\n            printf(\"Yes\\n\");\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,m,i,l,j,idx,z;\n    int a[5002][2];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        l=0;\n        z=1;\n        scanf(\"%d\",&n);\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a[i][0]);\n        }\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a[i][1]);\n            if(a[i][1]==1)\n                l++;\n        }\n        if(l!=0&&l<n)\n        {\n            printf(\"Yes\\n\");\n            continue;\n        }\n        else\n            for(i=0; i<n-1; i++)\n            {\n                idx=i;\n                for(j=i+1; j<n; j++)\n                {\n                    if(a[j][0]<a[idx][0])\n                        idx=j;\n                }\n\n                l=0;\n                if(idx!=i)\n                {\n\n                    printf(\"No\\n\");\n                    z=0;\n                    break;\n\n                }\n\n            }\n        if(z==1)\n            printf(\"Yes\\n\");\n    }\n\n}\n"}
{"similarity_score": 0.5366834170854271, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "dffc7b81659c2013b8c7bbfad1bf9971", "bug_code_uid": "0b16a447cd8518f020948a23fc1d0639", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "3689e9dd7bbf086e9ef1dcd95fa3fc31", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,x,a,b,s,i,t,j;\n    scanf(\"%d\",&t);\n    for(j=1; j<=t; j++)\n    {\n        scanf(\"%d %d %d %d\",&n,&x,&a,&b);\n        if(x==0)\n            printf(\"%d\\n\",abs(a-b));\n        else if(a==n&&b==1||b==n&&a==1)\n            printf(\"%d\\n\",abs(a-b));\n        else\n        {\n            s=abs(a-b);\n            for(i=1; i<=x; i++)\n            {\n                if(i>n-abs(n-a)+abs(b-1))\n                {\n                    break;\n                }\n                s++;\n            }\n            printf(\"%d\\n\",s);\n\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,x,a,b,s,i,t,j,d;\n    scanf(\"%d\",&t);\n    for(j=1; j<=t; j++)\n    {\n        scanf(\"%d %d %d %d\",&n,&x,&a,&b);\n        //if(x==0||a==n&&b==1||b==n&&a==1)\n            //printf(\"%d\\n\",abs(a-b));\n\n        d=n-abs(a-b)-1;\n        if(d<x)\n            printf(\"%d\\n\",abs(a-b)+d);\n        else\n            printf(\"%d\\n\",abs(a-b)+x);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8981288981288982, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "378333efeb71e16877b7727c350e3f15", "bug_code_uid": "f69222f9f633a607a2b00f7297a66a29", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "e5055c133019dcf77ea47ea74a1ca58d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  int i,n,sum=0,a,b,low=0;\n  scanf(\"%d\",&n);\n  int ar[n],ans[n];\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%d\",&a[i]);\n    ans[a[i]]=i+1;\n  }\n  for(i=0;i<n;i++)\n  {\n    printf(\"%d\",ans[i]);\n  }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  int i,n,sum=0,a,b,low=0;\n  scanf(\"%d\",&n);\n  int ar[n],ans[n];\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%d\",&ar[i]);\n    ans[ar[i]-1]=i+1;\n  }\n  for(i=0;i<n;i++)\n  {\n    printf(\"%d \",ans[i]);\n  }\n}\n"}
{"similarity_score": 0.7828492392807745, "equal_cnt": 39, "replace_cnt": 39, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 39, "lang": "GNU C", "fix_code_uid": "c86f962d21a7abbc1347beb7182dc6d8", "bug_code_uid": "aadb8bc193c52234f75d64325127ea7a", "src_uid": "3f320920a023c3bc10ba1525e8c89044", "apr_id": "dc08161cc1b972d23617e32671317a8d", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint JumlahFolder;\n\tint i,j;\n\tint n,X;\n\tint IsiFolder[100];\n\tint Folder[100];\n\tint CountMinus,CountPlus;\n\tscanf(\"%d\",&n);\n\tCountMinus=CountPlus=0;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&Folder[i]);\n\t}\n\tJumlahFolder=1;\n\tIsiFolder[JumlahFolder]=0;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tif (Folder[i]<0)\n\t\t{\n\t\t\tCountMinus++;}\n\t\tif (CountMinus==3)\n\t\t{\n\t\t\tCountMinus=1;\n\t\t\tJumlahFolder++;\n\t\t\tIsiFolder[JumlahFolder]=1;}\n\t\telse\n\t\t{\n\t\t\tIsiFolder[JumlahFolder]++;}\n\t}\n\tprintf(\"%d\\n\",JumlahFolder);\n\tfor (i=1;i<=JumlahFolder;i++)\n\t{\n\t\tprintf(\"%d\",IsiFolder[i]);\n\t\tif (i != JumlahFolder)\n\t\t{\n\t\t\tprintf(\" \");}\n\t}\n\treturn 0;\n}\n\t", "fixed": "#include <stdio.h>\nint main()\n{\n    int JumlahFolder;\n    int i,j;\n    int n,X;\n    int IsiFolder[110];\n    int Folder[110];\n    int CountMinus,CountPlus;\n    scanf(\"%d\",&n);\n    CountMinus=CountPlus=0;\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&Folder[i]);\n    }\n    JumlahFolder=1;\n    IsiFolder[JumlahFolder]=0;\n    for (i=1;i<=n;i++)\n    {\n        if (Folder[i]<0)\n        {\n            CountMinus++;}\n        if (CountMinus==3)\n        {\n            CountMinus=1;\n            JumlahFolder++;\n            IsiFolder[JumlahFolder]=1;}\n        else\n        {\n            IsiFolder[JumlahFolder]++;}\n    }\n    printf(\"%d\\n\",JumlahFolder);\n    for (i=1;i<=JumlahFolder;i++)\n    {\n        printf(\"%d\",IsiFolder[i]);\n        if (i != JumlahFolder)\n        {\n            printf(\" \");}\n    }\n    return 0;\n}\n    "}
{"similarity_score": 0.9894179894179894, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c6c3f409762fcf9cae484879261695ae", "bug_code_uid": "50a7b7c8a10932c645b13fe7d227c5c6", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "7fa5132c0171153efefe1118f8d46ef4", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t)\n\t{\n\tint m, n,s;\n\tscanf(\"%d%d\",&m,&n);\n\ts = m*n;\n\tif(s%2 == 0)\n\tprintf(\"%d\",s/2);\n\telse\n\tprintf(\"%d\",(s+1)/2);\n\tt--;\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t)\n\t{\n\tint m, n,s;\n\tscanf(\"%d%d\",&m,&n);\n\ts = m*n;\n\tif(s%2 == 0)\n\tprintf(\"%d\\n\",s/2);\n\telse\n\tprintf(\"%d\\n\",(s+1)/2);\n\tt--;\n\t}\n}\n"}
{"similarity_score": 0.9978798586572438, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1bd43ba235fe6e1359b819b4ca1782cc", "bug_code_uid": "f579c5633851b2b881297ba7676cbb16", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "bd1d44452402450ba2424f2638fab090", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int cad[n],i,j;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&cad[i]);\n    }\n    int largest=0,cont=1;\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(cad[i]>0){\n                if(cad[i]==cad[j]){\n                    cont++;\n                    cad[j]=-1;\n                }\n            }\n            else j=j;\n        }\n        if(cont>largest){\n            largest=cont;\n            cont=1;\n        }\n        else cont=1;\n    }\n    int var=0;\n    for(i=0;i<n;i++){\n        if(cad[i]>0) var++;\n    }\n    printf(\"%d %d\",largest,var);\n    /*printf(\"\\n\");\n    for(i=0;i<n;i++){\n        printf(\"%d \",cad[i]);\n    }*/\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int cad[n],i,j;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&cad[i]);\n    }\n    int largest=1,cont=1;\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(cad[i]>0){\n                if(cad[i]==cad[j]){\n                    cont++;\n                    cad[j]=-1;\n                }\n            }\n            else j=j;\n        }\n        if(cont>=largest){\n            largest=cont;\n            cont=1;\n        }\n        else cont=1;\n    }\n    int var=0;\n    for(i=0;i<n;i++){\n        if(cad[i]>0) var++;\n    }\n    printf(\"%d %d\",largest,var);\n    /*printf(\"\\n\");\n    for(i=0;i<n;i++){\n        printf(\"%d \",cad[i]);\n    }*/\nreturn 0;\n}\n"}
{"similarity_score": 0.336283185840708, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "356589ebd19d95b0fc279cb85eaab3e9", "bug_code_uid": "53847b05b24f4a91153329431d3a1347", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "afcd95992b292f2e2230e1c281410c92", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,tong=0,dem=0,temp,j,tong1=0;\n    scanf(\"%I64d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]%2==0)\n        {\n            tong+=a[i];\n        }\n        else\n        {\n            dem++;\n        }\n    }\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(a[i]<a[j])\n            {\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]%2!=0)\n        {\n            if(dem%2==0)\n            {\n                tong1+=a[i];\n            }\n            else\n            {\n                tong1+=a[i];\n            }\n        }\n    }\n    if(dem%2==0)\n        printf(\"%I64d\",tong+tong1);\n    else\n        printf(\"%I64d\",tong+tong1-a[n-1]);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,tong=0,dem=0,temp,j,tong1=0,min=1e9;\n    scanf(\"%I64d\",&n);\n    long long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        tong+=a[i];\n        if(a[i]%2!=0)\n            dem++;\n        if(a[i]<min && a[i]%2!=0)\n        {\n            min=a[i];\n        }\n    }\n    if(dem%2!=0)\n        tong1-=min;\n    if(dem%2==0)\n        printf(\"%I64d\",tong+tong1);\n    else\n        printf(\"%I64d\",tong+tong1);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9893617021276596, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "25fab7824e8caf58bf2eeb025e0c4e95", "bug_code_uid": "b3cdb9de905566bd855dbc9d73d6bdcf", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "749c110c34bf64ca31c4d8ec1ef933e8", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\nint n,m;\nchar str[110];\nscanf(\"%d\",&n);\nm=n+1;\nwhile(m--){\n\ngets(str);\nif((strlen(str)-1)<=10){\nprintf(\"%s\\n\",str);\n}\n\nelse{\nprintf(\"%c\",str[0]);\nprintf(\"%d\",strlen(str)-3);\nprintf(\"%c\\n\",str[strlen(str)-2]);\n\n}\n}\nreturn 0;\n\n}\n\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\nint n,m;\nchar str[110];\nscanf(\"%d\",&n);\nm=n+1;\nwhile(m--){\n\ngets(str);\nif((strlen(str))<=10){\nprintf(\"%s\\n\",str);\n}\n\nelse{\nprintf(\"%c\",str[0]);\nprintf(\"%d\",strlen(str)-2);\nprintf(\"%c\\n\",str[strlen(str)-1]);\n\n}\n}\nreturn 0;\n\n}\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.48637602179836514, "equal_cnt": 28, "replace_cnt": 19, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "9ca5ae6441b95043501f960ba85117d3", "bug_code_uid": "70cb87b94ea678b2e678a278279d958a", "src_uid": "a4eeaf7252b9115b67b9eca5f2bf621d", "apr_id": "5c0b1f668f2cfaa7a440e4cb435f0f2c", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int i,j,a1,k,a2,b1,b2,n;\r\n    scanf(\"%d\",n);\r\n    for(k=0;k<n;k++)\r\n        scanf(\"%d%d\",&a1,&b1);\r\n        scanf(\"%d%d\",&a2,&b2);\r\n        \r\n        if (b1>b2)\r\n        {\r\n            for(i=0;i<b1-b2;i++)\r\n                a1=a1*10;\r\n        }\r\n        else if (b2>b1)\r\n        {\r\n            for(j=0;j<b2-b1;j++)\r\n                a2=a2*10;\r\n        }\r\n        if (a1>a2)\r\n            printf(\">\");\r\n        else if(a1<a2)\r\n            printf(\"<\");\r\n        else if (a1=a2)\r\n            printf(\"=\");\r\n        return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    float a1,a2,b1,b2;int i,n;\r\n    scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%f%f\",&a1,&b1);\r\n            scanf(\"%f%f\",&a2,&b2);\r\n            while(a1>=10)\r\n            {\r\n                a1=a1/10;\r\n                b1++;\r\n            }\r\n            while(a2>=10)\r\n            {\r\n                a2=a2/10;\r\n                b2++;\r\n            }\r\n            if (b1>b2)\r\n            {\r\n                printf(\">\\n\");\r\n            \r\n            }\r\n            else if (b1<b2)\r\n            {\r\n                printf(\"<\\n\");\r\n            \r\n            }\r\n            else\r\n            {\r\n                if (a1>a2)\r\n                    printf(\">\\n\");\r\n                else if (a1<a2)\r\n                    printf(\"<\\n\");\r\n                else if (a1=a2)\r\n                    printf(\"=\\n\");\r\n            }\r\n        }    \r\n    \r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8818897637795275, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ca6f2c3ca94616377524e4b6dead13e3", "bug_code_uid": "538a0162547f11d66e1f866c2b478ef9", "src_uid": "5f89678ae1deb1d9eaafaab55a64197f", "apr_id": "f191cd81d31f4343273dbe6b77d85360", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N\t200000\n\nint compare(const void *a, const void *b) {\n\tint *ia = (int *) a;\n\tint *ib = (int *) b;\n\n\treturn *ia - *ib;\n}\n\nint main() {\n\tstatic int aa[N];\n\tint n, i, min, cnt;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tqsort(aa, n, sizeof *aa, compare);\n\tmin = INT_MAX, cnt = 0;\n\tfor (i = 1; i < n; i++)\n\t\tif (min > aa[i] - aa[i - 1]) {\n\t\t\tmin = aa[i] - aa[i - 1];\n\t\t\tcnt = 1;\n\t\t} else if (min == aa[i] - aa[i - 1])\n\t\t\tcnt++;\n\tprintf(\"%d %d\\n\", min, cnt);\n\treturn 0;\n}\n", "fixed": "#include <limits.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\n#define N\t200000\n\nint compare(const void *a, const void *b) {\n\tint *ia = (int *) a;\n\tint *ib = (int *) b;\n\n\treturn *ia - *ib;\n}\n\nint main() {\n\tstatic int aa[N];\n\tint n, i, min, cnt;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tsrand(time(NULL));\n\tfor (i = n - 1; i >= 0; i--) {\n\t\tint j = rand() % (i + 1), tmp;\n\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n\t}\n\tqsort(aa, n, sizeof *aa, compare);\n\tmin = INT_MAX, cnt = 0;\n\tfor (i = 1; i < n; i++)\n\t\tif (min > aa[i] - aa[i - 1]) {\n\t\t\tmin = aa[i] - aa[i - 1];\n\t\t\tcnt = 1;\n\t\t} else if (min == aa[i] - aa[i - 1])\n\t\t\tcnt++;\n\tprintf(\"%d %d\\n\", min, cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9913860610806577, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "81cdb1e6ca8e5bf18df0b0a9a6a92684", "bug_code_uid": "28c47ce730a5d626a3bb595ce221c65e", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "aaa233938c3991404b8a6cf4ec705eb4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\n//  main.c\n//  Contest\n//\n//  Created by Mihai Esanu on 12/27/19.\n//  Copyright \u00a9 2019 Mihai Esanu. All rights reserved.\n//\n\n#include <stdio.h>\n\nint main() {\n    long long a[102][4];\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++)\n    {\n        scanf(\"%lld\", &a[i][1]);\n        scanf(\"%lld\", &a[i][2]);\n        scanf(\"%lld\", &a[i][3]);\n    }\n    for(int i = 1; i <= n; i++)\n    {\n        if(a[i][1] + a[i][2] < a[i][3] || a[i][1] + a[i][3] < a[i][2] || a[i][2] + a[i][3] < a[i][1])\n        {\n            printf(\"No\\n\");\n        }\n        else\n        {\n            printf(\"Yes\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "//\n//  main.c\n//  Contest\n//\n//  Created by Mihai Esanu on 12/27/19.\n//  Copyright \u00a9 2019 Mihai Esanu. All rights reserved.\n//\n\n#include <stdio.h>\n\nint main() {\n    long long a[102][4];\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++)\n    {\n        scanf(\"%lld\", &a[i][1]);\n        scanf(\"%lld\", &a[i][2]);\n        scanf(\"%lld\", &a[i][3]);\n    }\n    for(int i = 1; i <= n; i++)\n    {\n        if(a[i][1] + a[i][2] + 1 < a[i][3] || a[i][1] + a[i][3] + 1 < a[i][2] || a[i][2] + a[i][3] +1 < a[i][1])\n        {\n            printf(\"No\\n\");\n        }\n        else\n        {\n            printf(\"Yes\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6276346604215457, "equal_cnt": 22, "replace_cnt": 20, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "8a016da6c9cb39d379867c84930e1fec", "bug_code_uid": "9d92d5adf18654c0ba713204ea559d2a", "src_uid": "0fbc306d919d7ffc3cb02239cb9c2ab0", "apr_id": "1044865704d86e1da39d1588186ccbc8", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_DEPRECATE\n#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint c;\n\tint num=0,p=1;\n\tint i;\n\n\tfor ( i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", &c);\n\t\tif (c == 1)\n\t\t{\n\t\t\tnum++;\n\t\t\tp = 0;\n\t\t}\t\t\t\n\t\telse if (p==0)\n\t\t{\n\t\t\tnum++;\n\t\t\tp = 1;\t\t\n\t\t}\n\t\tif (i == n&&c == 0)\n\t\t\tnum--;\n\t}\n\n\tif (num < 0)\n\t\tnum = 0;\n\n\tprintf(\"%d\\n\", num);\n}", "fixed": "#define _CRT_SECURE_NO_DEPRECATE\n#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int c;\n    int num=0,p=1;\n    int i;\n\n    for ( i = 1; i <= n; i++)\n    {\n        scanf(\"%d\", &c);\n        if (c == 1)\n        {\n            num++;\n            p = 0;\n        }           \n        else if (p==0)\n        {\n            num++;\n            p = 1;      \n        }\n        if (i == n&&c == 0)\n            num--;\n    }\n\n    if (num < 0)\n        num = 0;\n    printf(\"%d\\n\", num);\n    return 0;\n}"}
{"similarity_score": 0.5359477124183006, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1e8399dce8b92adb4e0c787a5ec2695a", "bug_code_uid": "8df7abddc2aac9721592ace9f27c443a", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "f7f4e43b84db653388f06428d91de8de", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nint main()\n{\n    int t, n, j;\n    long long int a, b=0, ans;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        if(n==2)\n            printf(\"2\\n\");\n        else\n        {\n        a = 2+pow(2,n);\n        for(j=2;j<n;j++)\n        {\n            b = pow(2,j)+b;\n        }\n        ans = abs(a-b);\n        printf(\"%lld\\n\",ans);\n        }\n        b=0;\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nint main()\n{\n    int t, n, i, j;\n    long long int a, a1=0, b=0, ans;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        for(i=1;i<n/2;i++)\n        {\n            a1 = a1 + pow(2,i);\n        }\n        a = pow(2,n) + a1;\n        for(j=n/2;j<n;j++)\n        {\n            b = pow(2,j)+b;\n        }\n        ans = abs(a-b);\n        printf(\"%lld\\n\",ans);\n        a1=0;\n        b=0;\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.45622119815668205, "equal_cnt": 14, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "2520e80e777fe1b9ec1a0a9d09037259", "bug_code_uid": "8bc6e12bfed659fb193e5473f1b7748e", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "e7d827a6ae0f97c39e6b1a873f955698", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    if(t>=-5000 && t<=5000)\r\n    {\r\n        if(t>=1900)\r\n        {\r\n            printf(\"Division 1\");\r\n        }\r\n        else if(t>=1600 && t<=1899)\r\n        {\r\n            printf(\"Division 2\");\r\n        }\r\n        else if(t>=1400 && t<=1599)\r\n        {\r\n            printf(\"Division 3\");\r\n        }\r\n        else if(t<=1399)\r\n        {\r\n            printf(\"Division 4\");\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n  int t,n;\r\n  scanf(\"%d\",&t);\r\n  for(int i=0;i<t;i++)\r\n  {\r\n    scanf(\"%d\",&n);\r\n    if(n<=1399)\r\n    {\r\n      printf(\"Division 4\\n\");\r\n    }\r\n    else if(n>=1400 && n<=1599)\r\n    {\r\n      printf(\"Division 3\\n\");\r\n    }\r\n    else if(n>=1600 && n<=1899)\r\n    {\r\n      printf(\"Division 2\\n\");\r\n    }\r\n    else if(n>=1900)\r\n    {\r\n      printf(\"Division 1\\n\");\r\n    }\r\n  }\r\n}\r\n"}
{"similarity_score": 0.05816831683168317, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "21a5665520adbfd2df98018de5aca5c0", "bug_code_uid": "86d664fbf47f98ca62f86f02426bab3a", "src_uid": "82176739a1dd4fe85ec059058a00fbb9", "apr_id": "1d127957f3840069cd12c83ad864f0f6", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<limits.h>\n#include<malloc.h>\n\nint binary_search(int a[],int lo,int hi,int key)\n{\n\tint mid,ans;\n\t\n\tif(lo<=hi)\n\t{\n\t\tmid=lo+(hi-lo)/2;\n\t\tif(a[mid]==key)\n\t\t{\n\t\t\tans=mid;\n\t\t}\n\t\telse if(a[mid]>key)\n\t\t{\n\t\t\tans=binary_search(a,lo,mid-1,key);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=binary_search(a,mid+1,hi,key);\n\t\t}\n\t}\n\t\n\treturn ans;\n}\n\nint main()\n{\n\tint n,*a,*b,max=-1,i,index,count;\n\tscanf(\"%d\",&n);\n\t\n\ta=(int*)malloc(sizeof(int)*n);\n\tb=(int*)malloc(sizeof(int)*n);\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tindex=binary_search(a,0,n-1,b[i]);\n\t\tif(i==0)\n\t\t{\n\t\t\tcount=index+1;\n\t\t\tmax=index;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(index>max)\n\t\t\t{\n\t\t\t\tcount=index-max;\n\t\t\t\tmax=index;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount=0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d \",count);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,pos,*a,*b,*bool,flag,count;\n    scanf(\"%d\",&n);\n    a=(int*)malloc(sizeof(int)*(n+1));\n    b=(int*)malloc(sizeof(int)*(n+1));\n    bool=(int*)malloc(sizeof(int)*(n+1));\n    \n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",a+i);\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",b+i);\n        bool[i]=0;\n    }\n    pos=1;\n    for(i=1;i<=n;i++)\n    {\n        flag=0;\n        count=0;\n        if(bool[b[i]])\n        {\n            printf(\"%d \",count);\n            continue;\n        }\n        while(flag==0)\n        {\n            count++;\n            bool[a[pos]]=1;\n            if(a[pos]==b[i])\n            {\n                flag=1;\n            }\n            pos++;\n        }\n        \n        printf(\"%d \",count);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9851632047477745, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3a9ce6687e678b89e1a2d39c5bbbbeb8", "bug_code_uid": "7fda96987fed2ecc42e3a56c5972de6c", "src_uid": "71be4cccd3b8c494ad7cc2d8a00cf5ed", "apr_id": "f051295a6012ff5e6ab2d25011a37e8b", "difficulty": 1000, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,i,k,p=0;\n    long long unsigned int t,s,d,small=0;\n    scanf(\"%d\\t%I64d\",&n,&t);\n    printf(\"\\n\");\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\\t%I64d\",&s,&d);\n        printf(\"\\n\");\n        if(s==t){p=i+1;\n        break;}\n        else{\n            while(s<t){\n                s=s+d;\n            }\n            if(s==t){p=i+1;\n            break;}\n            if((s>t)&&((s-t)<small)){p=i+1;\n            small=s-t;}\n        }\n\n\n    }\n    printf(\"%d\",p);\n\n}\n\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,i,k,p=0;\n    long long unsigned int t,s,d,small=0;\n    scanf(\"%d\\t%I64d\",&n,&t);\n    printf(\"\\n\");\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\\t%I64d\",&s,&d);\n        printf(\"\\n\");\n        if(s==t){p=i+1;\n        break;}\n        else{\n            while(s<t){\n                s=s+d;\n            }\n            if(s==t){p=i+1;\n            break;}\n            if((small==0)||((s-t)<small)){p=i+1;\n            small=s-t;}\n        }\n\n\n    }\n    printf(\"%d\",p);\n\n}\n\n"}
{"similarity_score": 0.9333333333333333, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "989f39027c4863a1e17e32af74029d7a", "bug_code_uid": "9d5b5f47354ccb7e76412f9a9949d049", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "48005ccef21b396636dd9bdf22f535df", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,sum=0,a[101];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    printf(\"%lf\",sum/n);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,a;\n    double sum=0.0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        sum+=a;\n    }\n    printf(\"%lf\",sum/n);\n    return 0;\n}\n"}
{"similarity_score": 0.997907949790795, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7bcb0c8025dd784fded2015b62a384e3", "bug_code_uid": "8e5657e2a67663cc0aafd8dae42f88bf", "src_uid": "0f8ad0ea2befbbe036fbd5e5f6680c21", "apr_id": "3b7e918f37bdd4baea0ecbed82b7889b", "difficulty": 1500, "tags": ["dp", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint p[111111];\n\nint f[111111];\n\nint n;\n\nint main() {\n\tint a, i, j, k, m = 0;\n\tmemset(p, 0, sizeof p);\n\tfor (i = 2; i <= 100000; ++i)\n\t\tif (!p[i])\n\t\t\tfor (j = i; j <= 100000; j += i) p[j] = i;\n\n\tmemset(f, 0, sizeof f);\n\tfor (scanf(\"%d\", &n); n; --n) {\n\t\tscanf(\"%d\", &a);\n\t\tfor (k = 0, j = a; j > 1; j /= i)\n\t\t\tif (k < f[(i = p[j])]) k = f[i];\n\t\tif (m < ++k) m = k;\n\t\tfor (; a > 1; a /= p[a]) f[p[j]] = k;\n\t}\n\n\tprintf(\"%d\", m);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint p[111111];\n\nint f[111111];\n\nint n;\n\nint main() {\n\tint a, i, j, k, m = 0;\n\tmemset(p, 0, sizeof p);\n\tfor (i = 2; i <= 100000; ++i)\n\t\tif (!p[i])\n\t\t\tfor (j = i; j <= 100000; j += i) p[j] = i;\n\n\tmemset(f, 0, sizeof f);\n\tfor (scanf(\"%d\", &n); n; --n) {\n\t\tscanf(\"%d\", &a);\n\t\tfor (k = 0, j = a; j > 1; j /= i)\n\t\t\tif (k < f[(i = p[j])]) k = f[i];\n\t\tif (m < ++k) m = k;\n\t\tfor (; a > 1; a /= p[a]) f[p[a]] = k;\n\t}\n\n\tprintf(\"%d\", m);\n\treturn 0;\n}"}
{"similarity_score": 0.6801242236024845, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "9fc4d8a6e2915d688bca2ddfd2b35166", "bug_code_uid": "9c03688bab94d2353425111b24d387bb", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "21f514525d35797ba80b755e27bc5950", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar a[100000][33],b[33];\nint h[100000];\nint main()\n{\nint i,n,j,s=0;\nscanf(\"%d\",&n);\nscanf(\"%s\",b);\nfor(i=1;i<n;i++)\n{\nscanf(\"%s\",a[i]);\nfor(j=0;j<i;j++)\n{\nif(strcmp(b,a[j])==0){\n\nh[j]=+1;\nprintf(\"%s%d\\n\",b,h[j]);\nflag=1;\nbreak;\n}\n\n}\nif(flag!=1)\n{\nprintf(\"OK\\n\");\nstrcpy(a[i],b);\nflag=0;\n}\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[100000][33],b[33];\nint h[100000];\nint main()\n{\nint i,n,j,s=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%s\",b);\nfor(j=0;j<s;j++)\nif(strcmp(b,a[j])==0)\nbreak;\nif(j==s)\n{\nprintf(\"OK\\n\");\nstrcpy(a[s++],b);\n}\nelse\n{\nh[j]++;\nprintf(\"%s%d\\n\",b,h[j]);\n}\n}\nreturn 0;\n}"}
{"similarity_score": 0.9452796151533374, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "37633f0f9f979242c771acaab63769ed", "bug_code_uid": "96e12997be50ab9e49e423edcce2ad7f", "src_uid": "676729309dfbdf4c9d9d7c457a129608", "apr_id": "f62887cc04ec8ac82dd3127d60460254", "difficulty": 1600, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define MAX_H 200000\n\n\nint arr[MAX_H];\nint main(int argc, char **argv) {\n\tint n, k;\n\tint min, max;\n\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &k);\n\tgetc(stdin);\n\n\tmemset((char *)arr, 0, sizeof(int) * n);\n\tmin = MAX_H + 1;\n\tmax = 0;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tint h;\n\t\tscanf(\"%d\", &h);\n\t\tif (min > h)\n\t\t\tmin = h;\n\t\tif (max < h)\n\t\t\tmax = h;\n\t\tarr[h-1]++;\n\t}\n\n\tint cuts = 0;\n\tint i = max - 1;\n\tint prev_cols = arr[max-1];\n\tint blocks = prev_cols;\n\twhile (i > min) {\n\t\tint temp_blocks = blocks + arr[i-1] + prev_cols;\n\t\tif (temp_blocks > k) {\n\t\t\tcuts += ((blocks / k) + ((blocks%k)?1:0));\n\t\t\ttemp_blocks = arr[i-1]+prev_cols;\n\t\t}\n\n\t\tblocks = temp_blocks;\n\t\tprev_cols += arr[i-1];\n\t\ti--;\n\t} \n\n\tif (blocks > 0) {\n\t\tcuts += (blocks/k + (blocks%k)?1:0);\n\t}\n\tprintf(\"%d\\n\", cuts);\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#define MAX_H 200000\n\n\nint arr[MAX_H];\nint main(int argc, char **argv) {\n\tint n, k;\n\tint min, max;\n\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &k);\n\tgetc(stdin);\n\n\tmemset((char *)arr, 0, sizeof(int) * n);\n\tmin = MAX_H + 1;\n\tmax = 0;\n\n\tfor (int i = 0; i < n; i++) {\n\t\tint h;\n\t\tscanf(\"%d\", &h);\n\t\tif (min > h)\n\t\t\tmin = h;\n\t\tif (max < h)\n\t\t\tmax = h;\n\t\tarr[h-1]++;\n\t}\n\n\tint cuts = 0;\n\tint i = max - 1;\n\tint prev_cols = arr[max-1];\n\tint blocks = prev_cols;\n\tif (min == max)\n\t\tblocks = 0;\n\telse\n\t\twhile (i > min) {\n\t\t\tint temp_blocks = blocks + arr[i-1] + prev_cols;\n\t\t\tif (temp_blocks > k) {\n\t\t\t\tcuts += ((blocks / k) + ((blocks%k)?1:0));\n\t\t\t\ttemp_blocks = arr[i-1]+prev_cols;\n\t\t\t}\n\n\t\t\tblocks = temp_blocks;\n\t\t\tprev_cols += arr[i-1];\n\t\t\ti--;\n\t\t} \n\n\tif (blocks > 0) {\n\t\tcuts += (blocks/k + (blocks%k)?1:0);\n\t}\n\tprintf(\"%d\\n\", cuts);\n}"}
{"similarity_score": 0.1715210355987055, "equal_cnt": 7, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "6af538f199c4edab7541f25b2a30d8d8", "bug_code_uid": "1cd8c0bb561a4d871d69a12219ee242e", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "03141dd9f77fdbc7acee1133296baa42", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main(){\nint n,max_ind=0,min_ind=0;\nint arr[n];\nscanf(\"%d\",&n);\nfor(int i=0;i<n;i++){\nscanf(\"%d\",&arr[i]);\n}\nmax=arr[0];\nmin=arr[0];\nfor(int j=1;j<n;j++){\nif (arr[j]>=max){\nmax_ind=j;\n}if(arr[j]<=min){\nmin_ind=j;\n}\n}\nif(min_ind>max_ind){\nprintf(\"%d\",max_ind+(n-min_ind-1));\n}else{\nprintf(\"%d\",max_ind+(n-(min_ind)-2));\n}\n}", "fixed": "#include<stdio.h>\nint main(){\nint n,min=100,max=0,t,j,k;\nscanf(\"%d\",&n);\nfor(int i=0;i<n;i++){\nscanf(\"%d\",&t);\nif(t>max){\nif(t<=min){\nmin=t;\nk=i;\n}\nmax=t;\nj=i;\n}else{\nif(t<=min){\nmin=t;\nk=i;\n}\n}\n}\nif(k>j){\nprintf(\"%d\",j+(n-k-1));\n}else{\nprintf(\"%d\",j+(n-k-2));\n}\nreturn 0;\n}"}
{"similarity_score": 0.9791666666666666, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e071a92faf4b2f40ea6b39a53a5cb5c8", "bug_code_uid": "327bf1396d577461fb0b520f304fc047", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "562bce5c79742512ac46964f3ad3aec2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n     int n,arr[100],count=0,count1=0;\n     scanf(\"%d\",&n);\n     int i;\n     for(i=0;i<n;i++){\n          scanf(\"%d\",&arr[i]);\n          if(arr[i] > 0){\n               count=count+arr[i];\n          }else if(count > 0){\n               count--;\n          }\n          else{\n               count1++;\n          }\n     }\n     printf(\"%d\",count1);\n     return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n     int n,count=0,count1=0;\n     scanf(\"%d\",&n);\n     int i,arr[n];\n     for(i=0;i<n;i++){\n          scanf(\"%d\",&arr[i]);\n          if(arr[i] > 0){\n               count=count+arr[i];\n          }else if(count > 0){\n               count--;\n          }\n          else{\n               count1++;\n          }\n     }\n     printf(\"%d\",count1);\n     return 0;\n}"}
{"similarity_score": 0.8002270147559591, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "18ce67cbf7cb009e8693fe755bd1dbfe", "bug_code_uid": "f3b9731513be18f53212504461d37c8c", "src_uid": "bd9da9081902a87c61591fb58fcecfe3", "apr_id": "1fe36d3009bef1a0694962f20ec9e158", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n \r\nint main(void){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        \r\n        char word[200000],b[3];\r\n        \r\n        b[0] = '0';\r\n        b[1] = '0';\r\n        b[2] = '0';\r\n        \r\n        int i,j,size,flag = 0,min = 0;\r\n        \r\n        scanf(\"%s\",word);\r\n        size = strlen(word);\r\n        \r\n        j = 0;\r\n        \r\n        for(i = 0; i < size; i++) {\r\n            if(word[i] != b[0] && word[i] != b[1] && word[i] != b[2]){\r\n                b[j] = word[i];\r\n                j++;\r\n                flag = 1;\r\n            }\r\n            if(j == 3) {\r\n                j = 0;\r\n                b[1] = '0';\r\n                min++;\r\n                flag = 0;\r\n            }\r\n        }\r\n        \r\n        if(flag) min++;\r\n        \r\n        printf(\"%d\\n\",min);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n \r\nint main(void){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        \r\n        char word[200000],b[3];\r\n        \r\n        b[0] = '0';\r\n        b[1] = '0';\r\n        b[2] = '0';\r\n        \r\n        int i,j,size,flag = 0,min = 0;\r\n        \r\n        scanf(\"%s\",word);\r\n        size = strlen(word);\r\n        \r\n        j = 0;\r\n        \r\n        for(i = 0; i < size; i++) {\r\n            if(word[i] != b[0] && word[i] != b[1] && word[i] != b[2]){\r\n                b[j] = word[i];\r\n                j++;\r\n                if(!flag){\r\n                    b[1] = '0';\r\n                    b[2] = '0';\r\n                }\r\n                flag = 1;\r\n            }\r\n            if(j == 3) {\r\n                j = 0;\r\n                min++;\r\n                flag = 0;\r\n            }\r\n        }\r\n        \r\n        if(flag) min++;\r\n        \r\n        printf(\"%d\\n\",min);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.5179407176287052, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d04e76e80baf2dae67acb96b64996a99", "bug_code_uid": "db5b9950a43014d3baeb5c6dd15ef7e9", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "3af57a706b10efe618670a9ee9a459aa", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,j,a,b;\n\n    scanf(\"%d\",&n);\n\n    while(n--){\n        scanf(\"%d%d\",&a,&b);\n\n        if(a==1 && b==1){\n            printf(\"1\\n\");\n        }\n        else if(a<b){\n            printf(\"%d\\n\",b-a);\n        }\n        else if(a==b && (a>2 || b>2)){\n            printf(\"%d\\n\",a+2);\n        }\n        else if(a==b){\n            printf(\"2\\n\");\n        }\n        else if(a>b){\n            printf(\"%d\\n\",a+b);\n        }\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,j,a,b;\n\n    scanf(\"%d\",&n);\n\n    while(n--){\n        scanf(\"%d%d\",&a,&b);\n\n      printf(\"%d\\n\",(a*b+1)/2);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5870275314979001, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "bd60131eadc418813b5d43934343fea1", "bug_code_uid": "636dbe6a74ba857c067d313e2bf4d614", "src_uid": "c3244e952830643938d51ce14f043d7d", "apr_id": "be6642172c57dcbb30f065293c93d06e", "difficulty": 1200, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint X,i,T,Y,cnt=0,j=0,l=0,P,k,h,m=0,bl=0,bm=0;\nchar A[100001],B[100001],C[500],D[101],E[100001],F[101];\nscanf(\"%s\",A);\nX=strlen(A);\nT=X-1;\nfor(i=0;i<=T;i++)\n{\nB[i]=A[X-1];\nX--;\n}\nB[i]='\\0';\nscanf(\"%s\",C);\nstrcpy(F,C);\nscanf(\"%s\",D);\nstrcat(C,D);\nY=strlen(C)-1;\nP=strlen(F)-1;\nif(Y<=T)\n{\nfor(i=0;A[i]!='\\0';i++)\n{\nif(j==Y)\n{\nl=1;\nbreak;\n}\nif(C[j]==A[i])\n{\nj++;\n}\n}\nj=0;\nfor(i=0;B[i]!='\\0';i++)\n{\nif(j==Y)\n{\nbl=3;\nbreak;\n}\nif(C[j]==B[i])\n{\nj++;\n}\n}\nj=0;\nfor(i=0;A[i]!='\\0';i++)\n{\nif(F[j]==A[i])\n{\nh=i;\nfor(k=0;k<=P;k++,h++)\n{\nif(F[k]==A[h] && k==P)\n{\nm=5;\nbreak;\n}\nif(F[k]!=A[h])\n{\nbreak;\n}\n}\n}\nif(m==5)\n{\nbreak;\n}\n}\nj=0;\nfor(i=0;B[i]!='\\0';i++)\n{\nif(F[j]==B[i])\n{\nh=i;\nfor(k=0;k<=P;k++,h++)\n{\nif(F[k]==B[h] && k==P)\n{\nbm=7;\nbreak;\n}\nif(F[k]!=B[h])\n{\nbreak;\n}\n}\n}\nif(bm==7)\n{\nbreak;\n}\n}\n}\nif(l==1 && bl==3 && m==5 && bm==7)\n{\nprintf(\"both\\n\");\n}\nelse if(l==1 && m==5)\n{\nprintf(\"forward\\n\");\n}\nelse if(bl==3 && bm==7)\n{\nprintf(\"backward\\n\");\n}\nelse\n{\nprintf(\"fantasy\\n\");\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint X,i,T,Y,cnt=0,j=0,l=0,P,k,h,m=0,bl=0,bm=0;\nchar A[100001],B[100001],C[500],D[101],E[100001],F[101];\nscanf(\"%s\",A);\nX=strlen(A);\nT=X-1;\nfor(i=0;i<=T;i++)\n{\nB[i]=A[X-1];\nX--;\n}\nB[i]='\\0';\nscanf(\"%s\",C);\nstrcpy(F,C);\nscanf(\"%s\",D);\nstrcat(C,D);\nY=strlen(C)-1;\nP=strlen(F)-1;\nif(Y<=T)\n{\nfor(i=0;A[i]!='\\0';i++)\n{\nif(C[j]==A[i] && l!=1)\n{\nh=i;\nfor(k=0;k<=P;k++,h++)\n{\nif(C[k]==A[h] && k==P)\n{\nl=1;\ni++;\nbreak;\n}\nif(C[k]!=A[h])\n{\nbreak;\n}\n}\n}\nif(C[P+1]==A[i] && l==1)\n{\nh=i;\nfor(k=P+1;k<=Y;k++,h++)\n{\nif(C[k]==A[h] && k==Y)\n{\nm=5;\nbreak;\n}\nif(C[k]!=A[h])\n{\nbreak;\n}\n}\n}\n}\nj=0;\nfor(i=0;B[i]!='\\0';i++)\n{\nif(C[j]==B[i] && bl!=3)\n{\nh=i;\nfor(k=0;k<=P;k++,h++)\n{\nif(C[k]==B[h] && k==P)\n{\nbl=3;\ni++;\nbreak;\n}\nif(C[k]!=B[h])\n{\nbreak;\n}\n}\n}\nif(C[P+1]==B[i] && bl==3)\n{\nh=i;\nfor(k=P+1;k<=Y;k++,h++)\n{\nif(C[k]==B[h] && k==Y)\n{\nbm=7;\nbreak;\n}\nif(C[k]!=B[h])\n{\nbreak;\n}\n}\n}\n}\n}\nif(l==1 && bl==3 && m==5 && bm==7)\n{\nprintf(\"both\\n\");\n}\nelse if(l==1 && m==5)\n{\nprintf(\"forward\\n\");\n}\nelse if(bl==3 && bm==7)\n{\nprintf(\"backward\\n\");\n}\nelse\n{\nprintf(\"fantasy\\n\");\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.771264367816092, "equal_cnt": 28, "replace_cnt": 27, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 28, "lang": "GNU C", "fix_code_uid": "2ddd1706292b7562ff941d1f80f44929", "bug_code_uid": "9b715c3a358b35a4184f4bca124d72d6", "src_uid": "29639971c98dd98f0292d994d4433e3a", "apr_id": "97a6d7969c66f21188ea11005454fd52", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\ntypedef struct _room{\n    int l;\n    int w;\n    int h;\n}room;\n\ntypedef struct _paper{\n    int l;\n    int w;\n    int p;\n}paper;\n\nint main(void){\n    int n, m;\n    room r[500];\n    paper wall[500];\n    int i, j;\n    int cost = 0;\n\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++){\n        scanf(\"%d %d %d\", &(r[i].l), &(r[i].w), &(r[i].h));\n    }\n    scanf(\"%d\", &m);\n    for(i=0; i<m; i++){\n        scanf(\"%d %d %d\", &(wall[i].l), &(wall[i].w), &(wall[i].p));\n    }\n\n    for(i=0; i<n; i++){\n        int perimeter = 2*r[i].l + 2*r[i].w;\n        int min_price = 100000000;\n        for(j=0; j<m; j++){\n            int cover = (wall[j].l / r[i].h) * wall[j].w;\n            int price = ceil((1.0 * perimeter) / cover) * wall[j].p;\n            if(price < min_price){\n                min_price = price;\n            }\n        }\n        cost += min_price;\n    }\n\n    printf(\"%d\\n\", cost);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\ntypedef struct _room{\n\tint l;\n\tint w;\n\tint h;\n}room;\n\ntypedef struct _paper{\n\tint l;\n\tint w;\n\tint p;\n}paper;\n\nint main(void){\n\tint n, m;\n\troom r[500];\n\tpaper wall[500];\n\tint i, j;\n\tint cost = 0;\n\n\tscanf(\"%d\", &n);\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d %d %d\", &(r[i].l), &(r[i].w), &(r[i].h));\n\t}\n\tscanf(\"%d\", &m);\n\tfor(i=0; i<m; i++){\n\t\tscanf(\"%d %d %d\", &(wall[i].l), &(wall[i].w), &(wall[i].p));\n\t}\n\n\tfor(i=0; i<n; i++){\n\t\tint perimeter = 2*r[i].l + 2*r[i].w;\n\t\tint min_price = 100000000;\n\t\tfor(j=0; j<m; j++){\n\t\t\tif(wall[j].l < r[i].h) continue;\n\t\t\tint cover = (wall[j].l / r[i].h) * wall[j].w;\n\t\t\tint price = ceil((1.0 * perimeter) / cover) * wall[j].p;\n\t\t\tif(price < min_price){\n\t\t\t\tmin_price = price;\n\t\t\t}\n\t\t}\n\t\tcost += min_price;\n\t}\n\n\tprintf(\"%d\\n\", cost);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9967707212055974, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5d6e4ddcb5cd949f16e6ea8614de8814", "bug_code_uid": "e8a7c25274c612e481bf0104f4d5da12", "src_uid": "3ea3f5b548b82449e4ce86e11b1afc48", "apr_id": "bbe6f371d627a930a8cd2531bf4bcae4", "difficulty": 800, "tags": ["implementation", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n       char s2[50];\r\n       char s1[50];\r\n       scanf(\"%s %s\",&s1,&s2);\r\n       int n1 = strlen(s1);\r\n       int n2 = strlen(s2);\r\n       if(s1[n1-1] == 'L'){\r\n            if(s2[n2-1] == 'L'){\r\n                if (n1 > n2) printf(\">\\n\");\r\n                else if(n1 == n2) printf(\"=\\n\");\r\n                else printf(\"<\\n\");\r\n            }\r\n            else printf(\">\\n\");\r\n       }\r\n       else if(s1[n1-1] == 'S'){\r\n             if(s2[n2-1] == 'S'){\r\n                if(n1>n2) printf(\"<\\n\");\r\n                else if(n1< n2) printf(\">\\n\");\r\n                else printf(\"=\\n\");\r\n             }\r\n             else printf(\"<\\n\");\r\n       }\r\n       else{\r\n        if(s2[n2-1] == 'S') printf(\">\\n\");\r\n        else if(s2[n2-1] == 'L') printf(\"<\\n\");\r\n        else printf(\"=\\n\");\r\n       }\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n    }\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n       char s2[60];\r\n       char s1[60];\r\n       scanf(\"%s %s\",&s1,&s2);\r\n       int n1 = strlen(s1);\r\n       int n2 = strlen(s2);\r\n       if(s1[n1-1] == 'L'){\r\n            if(s2[n2-1] == 'L'){\r\n                if (n1 > n2) printf(\">\\n\");\r\n                else if(n1 == n2) printf(\"=\\n\");\r\n                else printf(\"<\\n\");\r\n            }\r\n            else printf(\">\\n\");\r\n       }\r\n       else if(s1[n1-1] == 'S'){\r\n             if(s2[n2-1] == 'S'){\r\n                if(n1>n2) printf(\"<\\n\");\r\n                else if(n1< n2) printf(\">\\n\");\r\n                else printf(\"=\\n\");\r\n             }\r\n             else printf(\"<\\n\");\r\n       }\r\n       else{\r\n        if(s2[n2-1] == 'S') printf(\">\\n\");\r\n        else if(s2[n2-1] == 'L') printf(\"<\\n\");\r\n        else printf(\"=\\n\");\r\n       }\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n    }\r\n"}
{"similarity_score": 0.9625550660792952, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "945de7958bbff69d1db5bcdfd48c75dd", "bug_code_uid": "2a9b7716159f5511208359dd8c5b1c50", "src_uid": "926c01419301caff034988aff98edc9d", "apr_id": "d430b3c8c2b70536473f00e0a8172b5e", "difficulty": 1300, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint aa[1234567];\n\n#define mod 998244353\n\nint main(){\n\n\tint n, k;\n\tscanf(\"%d%d\", &n, &k );\n\n\tint ans1 = 0 , cnt = 0;\n\tfor(int i = 0; i < n ; i++){\n\t\t\n\t\tint foo;\n\t\tscanf(\"%d\", &foo);\n\n\t\tif(foo > n - k){\n\t\t\taa[cnt++] = i;\n\t\t\tans1 += foo;\n\t\t}\n\n\t}\n\n\n\tint ans2 = 1;\n\tfor(int i = 0; i < cnt - 1 ; i++){\n\n\t\tans2 = ( ans2 *( aa[i + 1] - aa[i] ) % mod ) % mod;\n\t\t\n\t}\n\t\n\tprintf(\"%d %d\\n\", ans1 , ans2 );\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint aa[1234567];\n\n#define mod 998244353\n\nint main(){\n\n\tint n, k;\n\tscanf(\"%d%d\", &n, &k );\n\n\tlong long ans1 = 0 , cnt = 0;\n\tfor(int i = 0; i < n ; i++){\n\t\t\n\t\tint foo;\n\t\tscanf(\"%d\", &foo);\n\n\t\tif(foo > n - k){\n\t\t\taa[cnt++] = i;\n\t\t\tans1 += foo;\n\t\t}\n\n\t}\n\n\n\tlong long ans2 = 1;\n\tfor(int i = 0; i < cnt - 1 ; i++){\n\n\t\tans2 = ( ans2 *( aa[i + 1] - aa[i] ) % mod ) % mod;\n\t\t\n\t}\n\t\n\tprintf(\"%lld %lld\\n\", ans1 , ans2 );\n\treturn 0;\n}\n"}
{"similarity_score": 0.9923329682365827, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "94d0456ab1a98785264405bbb503599d", "bug_code_uid": "c80ccef03ed8cb3ab13282a7ac42bcb1", "src_uid": "a20911c30d7246e47d6fd57a05d1e556", "apr_id": "7f3d6b5476daeb86063f0bbf32512697", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tunsigned long long int t, n, sum, take_sum;\n\tscanf(\"%lu\", &t);\n\n\twhile (t--)\n\t{\n\t\tscanf(\"%lu\", &n);\n\n\t\tunsigned long long int arr[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tscanf(\"%lu\", &arr[i]);\n\n\t\ttake_sum = 0;\n\t\tsum = 0;\n\t\tfor (int i = 0; i < n - 1; i++)\n\t\t{\n\t\t\tif (arr[i] != 0)\n\t\t\t\ttake_sum = 1;\n\t\t\tif (take_sum)\n\t\t\t{\n\t\t\t\tsum += (arr[i]) ? arr[i] : 1;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%d\\n\", sum);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tunsigned long long int t, n, sum, take_sum;\n\tscanf(\"%llu\", &t);\n\n\twhile (t--)\n\t{\n\t\tscanf(\"%llu\", &n);\n\n\t\tunsigned long long int arr[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tscanf(\"%llu\", &arr[i]);\n\n\t\ttake_sum = 0;\n\t\tsum = 0;\n\t\tfor (int i = 0; i < n - 1; i++)\n\t\t{\n\t\t\tif (arr[i] != 0)\n\t\t\t\ttake_sum = 1;\n\t\t\tif (take_sum)\n\t\t\t{\n\t\t\t\tsum += (arr[i]) ? arr[i] : 1;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%llu\\n\", sum);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.8861047835990888, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d51f520fd13133ff08cad1ed62f700e8", "bug_code_uid": "fcd9287eb9dd044aefc91fe5eed8dae0", "src_uid": "3cdd85f86c77afd1d3b0d1e951a83635", "apr_id": "0cc63860aeea19ca6983abf2386cb6b6", "difficulty": 1300, "tags": ["constructive algorithms", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\nint main()\n{\n    int n,a;\n    scanf(\"%d %d\",&n,&a);\n    double value,temp,ans=180;\n    value=360.0/n;\n    int i,min;\n    for(i=3;i<=n;i++)\n    {\n        temp=(value*(i-2)/2)-a;\n        temp=abs(temp);\n        if(temp<ans)\n        {\n            ans=temp;\n            min=i;\n        }\n    }\n    printf(\"%d %d %d\",2,1,min);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\ndouble mod(double a)\n{\n    if(a<0)\n        return (a*(-1.0));\n    else\n        return a;\n}\n\nint main()\n{\n    int n,a;\n    scanf(\"%d %d\",&n,&a);\n    double value,temp,ans=180.0;\n    value=360.0/n;\n    int i,min;\n    for(i=3;i<=n;i++)\n    {\n        temp=(value*(i-2)/2)-a;\n        temp=mod(temp);\n        if(temp<ans)\n        {\n            ans=temp;\n            min=i;\n        }\n    }\n    printf(\"%d %d %d\",2,1,min);\n    return 0;\n}\n"}
{"similarity_score": 0.9980806142034548, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1427a08eea71f02fd96b809d5666ee1e", "bug_code_uid": "faf25dab3b15538498cc68a1a617da59", "src_uid": "da2ac80c2ad6abae676d60a506eb05fc", "apr_id": "90f9b38aedef87bc797fcac6e0135920", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t, a;\n    scanf(\"%d\", &t);\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%d\", &a);\n        for(int j=0;j<a;j++)\n        {\n            printf(\"%d\", a);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t, a;\n    scanf(\"%d\", &t);\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%d\", &a);\n        for(int j=0;j<a;j++)\n        {\n            printf(\"%d \", a);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9575070821529745, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b93739581dee2cb3adb70f6ff66c77a0", "bug_code_uid": "1b7a82991fe71a67472e6394d7112fdd", "src_uid": "9964bfdcfdd041b839ce120019e8220f", "apr_id": "69558bed3a2cb51563a2cd0046eec297", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int memo[10],t,i=1,j;\n    memo[0]=0;\n    long long int n,m,ans=0;\n    scanf(\"%d\",&t);\n    while(i<=t){\n        scanf(\"%lld%lld\",&n,&m);\n        int k=0,add=0;\n        j=1;\n        while(j<10 && j<=n){\n            k=m*j;\n            add=add+(k%10);\n            memo[j]=add;\n            j++;\n        }\n        ans=(n/(m*10))*add;\n        long long int y=n/(m*10);\n        int ind=(n-(y*10*m))/m;\n        ans=ans+memo[ind];\n        printf(\"%lld\\n\",ans);\n        i++;\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    long long int memo[10],t,i=1,j;\n    memo[0]=0;\n    long long int n,m,ans=0;\n    scanf(\"%lld\",&t);\n    while(i<=t){\n        scanf(\"%lld%lld\",&n,&m);\n        long long int k=0,add=0;\n        j=1;\n        while(j<10 && j<=n){\n            k=m*j;\n            add=add+(k%10);\n            memo[j]=add;\n            j++;\n        }\n        ans=(n/(m*10))*add;\n        long long int y=n/(m*10);\n        long long int ind=(n-(y*10*m))/m;\n        ans=ans+memo[ind];\n        printf(\"%lld\\n\",ans);\n        i++;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.870380584666299, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "978712a223acbf80f8a745e4b2a9edcb", "bug_code_uid": "20670d9208972223066ce9d046a6a752", "src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "apr_id": "bcbcbd9688ba7bf4c4c590a224dfe019", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\n#include<time.h>\n#include<ctype.h>\n#include<limits.h>\n#define eps 1e-9\n#define ll long long int \n#define N 550000\nchar arr[N];\nFILE *f=fopen(\"stress_test_out.txt\",\"r\");\nFILE *f1=fopen(\"code2_out.txt\",\"w\");\nint main(){\n   int a;\n   scanf(\"%d\",&a);\n   getchar();\n   gets(arr);\n   if(arr[3]>='6')\n   arr[3]='5';\n   if(a==24){\n      if(arr[0]>'2'){\n         arr[0]='1';\n      }\n      else if(arr[0]=='2' && arr[1]>='4'){\n         arr[1]='0';\n      }\n      puts(arr);\n   }\n   else{\n      if(arr[0]>'1'){\n         arr[0]='0';\n         puts(arr);\n         return 0;\n      }\n      if(arr[0]=='0' && arr[1]=='0'){\n         arr[0]='1';\n         puts(arr);\n         return 0;\n      }\n      if(arr[0]=='1' && arr[1]>'2'){\n         arr[1]='0';\n         puts(arr);\n         return 0;\n      }\n      if(arr[1]>'2'){\n         arr[1]='0';\n         puts(arr);\n      }\n   }\n   \n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\n#include<time.h>\n#include<ctype.h>\n#include<limits.h>\n#define eps 1e-9\n#define ll long long int \n#define N 550000\nchar arr[N];\nint main(){\n   int a;\n   scanf(\"%d\",&a);\n   getchar();\n   gets(arr);\n   if(arr[3]>='6')\n   arr[3]='5';\n   if(a==24){\n      if(arr[0]>'2'){\n         arr[0]='1';\n      }\n      else if(arr[0]=='2' && arr[1]>='4'){\n         arr[1]='0';\n      }\n      puts(arr);\n   }\n   else{\n      if(arr[0]>'1'){\n         if(arr[1]!='0')\n            arr[0]='0';\n         else if(arr[1]=='0')\n            arr[0]='1';\n         puts(arr);\n         return 0;\n      }\n      if(arr[0]=='0' && arr[1]=='0'){\n         arr[0]='1';\n         puts(arr);\n         return 0;\n      }\n      if(arr[0]=='1' && arr[1]>'2'){\n         arr[1]='0';\n         puts(arr);\n         return 0;\n      }\n      puts(arr);\n   }\n   \n}"}
{"similarity_score": 0.656137832017229, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "1806114a467790921d03f6f9c48da549", "bug_code_uid": "272d8151709ad604e2e3401a86fde890", "src_uid": "10927dcb59007fc3a31fdb6b5d13846f", "apr_id": "1d2452bc908dfbfa1f82b0e0f9ff8704", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define MXSIZE 100\r\nint main()\r\n{\r\n    int t,n[MXSIZE],k[MXSIZE],p[MXSIZE][MXSIZE],count[MXSIZE];\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i< t; i++)\r\n    {\r\n        count[i] = 0;\r\n        scanf(\"%d %d\",&n[i],&k[i]);\r\n        for(int j=0; j<n[i]; j++)\r\n        {\r\n            scanf(\"%d\",&p[i][j]);\r\n        }\r\n    }\r\n\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        for(int j=k[i]; j<n[i]; j++)\r\n        {\r\n            for(int m=0; m<k[i]; m++)\r\n            {\r\n                if(p[i][m]>p[i][j])\r\n                {\r\n                    count[i]++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        printf(\"%d\\n\",count[i]);\r\n    }\r\n    return 0;\r\n\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#define MXSIZE 100\r\nint main()\r\n{\r\n    int t,n[MXSIZE],k[MXSIZE],p[MXSIZE][MXSIZE],count[MXSIZE];\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i< t; i++)\r\n    {\r\n        count[i] = 0;\r\n        scanf(\"%d %d\",&n[i],&k[i]);\r\n        for(int j=0; j<n[i]; j++)\r\n        {\r\n            scanf(\"%d\",&p[i][j]);\r\n        }\r\n    }\r\n\r\n    for(int i=0; i<t; i++)\r\n    {\r\n            for(int j=0; j<k[i]; j++)\r\n            {\r\n                if(p[i][j]>k[i])\r\n                {\r\n                    count[i]++;\r\n                }\r\n            }\r\n    }\r\n\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        printf(\"%d\\n\",count[i]);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9906890130353817, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b20074070f6b7d63ddb5bd03723cefa6", "bug_code_uid": "fae36d7555c53441d801f22788007980", "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842", "apr_id": "ad68cd2a8bc484f987391d714daedd4f", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\t\t  int t,a,b;\n\t\t\t\tscanf(\"%d\",&t);\n\t\t\t\twhile(t--)\n\t\t\t\t{\n\t\t\t\t\t\t\t\tscanf(\"%d %d\",&a,&b);\n\t\t\t\t\t\t\t\tif(a==b)\n\t\t\t\t\t\t\t\tprintf(\"0\");\n\t\t\t\t\t\t\t\telse if(a>b)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif((a-b)%2==0)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"1\");\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse { printf(\"2\");}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tif((b-a)%2==0)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"2\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse {printf(\"1\");}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t}\t\n\t\t\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\t\t  int t,a,b;\n\t\t\t\tscanf(\"%d\",&t);\n\t\t\t\twhile(t--)\n\t\t\t\t{\n\t\t\t\t\t\t\t\tscanf(\"%d %d\",&a,&b);\n\t\t\t\t\t\t\t\tif(a==b)\n\t\t\t\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\t\t\t\telse if(a>b)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif((a-b)%2==0)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"1\\n\");\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse { printf(\"2\\n\");}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tif((b-a)%2==0)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"2\\n\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse {printf(\"1\\n\");}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t}\t\n\t\t\t\treturn 0;\n}"}
{"similarity_score": 0.9831730769230769, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e390de6bdd0a8b08133c05ccfb8d313e", "bug_code_uid": "a409d1597d69b0d01336c979635ad097", "src_uid": "d9ba1dfe11cf3dae177f8898f3abeefd", "apr_id": "d67d410eb38ac2f1be7898125430c3c2", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[1010];\nint n;\n\nint fun(int x)\n{\n    int temp;\n    if(x == 1) return 0;\n    temp = a[x];\n    a[x] = a[x-1];\n    a[x-1] = temp;\n}\n\nint main()\n{\n    int i;\n    while((scanf(\"%d\",&n))!=EOF)\n    {\n        for(i=1;i<=n;i++)\n        {\n            a[i] = i;\n        }\n        fun(n);\n        for(i=1;i<=n;i++)\n        {\n            printf(\"%d \",a[i]);\n        }\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include <stdio.h>\nint a[1010];\nint n;\n\nint fun(int x)\n{\n    int temp;\n    if(x == 1) return 0;\n    temp = a[x];\n    a[x] = a[x-1];\n    a[x-1] = temp;\n    fun(x-1);\n}\n\nint main()\n{\n    int i;\n    while((scanf(\"%d\",&n))!=EOF)\n    {\n        for(i=1;i<=n;i++)\n        {\n            a[i] = i;\n        }\n        fun(n);\n        for(i=1;i<=n;i++)\n        {\n            printf(\"%d \",a[i]);\n        }\n        printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.577524893314367, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "bf22dd0c57b50b542b7fe53b06d0abbd", "bug_code_uid": "33ea10f6a5d3582fa1dfb16b2c495343", "src_uid": "9363df0735005832573ef4d17b6a8302", "apr_id": "d68f87a545d3fa6eec07d8e619d523d8", "difficulty": 800, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint l,r,k,i,cnt=0,p;\r\n\t\tscanf(\"%d %d %d\",&l,&r,&k);\r\n\t\tp=r-l+1;\r\n\t\t\r\n\t\tfor(i=l;i<=r;i++){\r\n\t\t\tif(i%2==0){cnt++;}\r\n\t\t}\r\n\t\t\r\n\t\tif((k>=p-cnt&&r!=1)||(r==l&&l!=1)){printf(\"YES\\n\");}\r\n\t\telse{printf(\"NO\\n\");}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint l,r,k,cnt=0,p;\r\n\t\tscanf(\"%d %d %d\",&l,&r,&k);\r\n\t\tp=r-l+1;\r\n\t\tif(l==r&&r!=1){printf(\"YES\\n\");}\r\n\t\tif(l==r&&r==1){printf(\"NO\\n\");}\r\n\t\tif(r>l){\r\n\t\t\tif(p%2==0){cnt=p/2;}\r\n\t\t if(l%2==0&&p%2!=0){cnt=p/2+1;}\r\n\t\t if(l%2!=0&&p%2!=0){cnt=p/2;}\r\n\t\tif(k>=p-cnt&&r!=1){printf(\"YES\\n\");}\r\n\t\telse{printf(\"NO\\n\");}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.6681448632668144, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f123d56dfc65a9330ea66b1462e07ab5", "bug_code_uid": "f07afcb756e6484fadd27f1d4b432b8e", "src_uid": "c3cd949c99e96c9da186a34d49bd6197", "apr_id": "2831a66d2729a04ff29f75136b1ca3d6", "difficulty": 1400, "tags": ["greedy", "constructive algorithms", "number theory", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        int a[11]={2,3,5,7,11,13,17,19,23,29,31};\n        printf(n>11?\"11\\n\":\"%d\\n\",n);\n        while(n--){\n            int k;\n            scanf(\"%d\",&k);\n            for(int i=0;i<11;i++){\n                if(k%a[i]==0){\n                    printf(\"%d \",i+1);\n                    break;\n                }\n            }\n        }\n        printf(\"\\n\");\n        \n    }\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        int m=n;\n        int a[11]={2,3,5,7,11,13,17,19,23,29,31};\n        int b[n],c=1;\n        int j=0;\n        while(n--){\n            int k;\n            scanf(\"%d\",&k);\n            for(int i=0;i<11;i++){\n                if(k%a[i]==0){\n                    b[j]=a[i];\n                    break;\n                }\n            }\n            j++;\n        }\n        for(int i=0;i<11;i++){\n            int g=0;\n            for (int j=0;j<m;j++){\n                if(b[j]==a[i]){\n                    b[j]=c;\n                    g=1;\n                }\n            }\n            c+=g;\n        }\n        printf(\"%d\\n\",c-1);\n        for(int i=0;i<m;i++){\n            printf(\"%d \",b[i]);\n        }\n        printf(\"\\n\");\n        \n    }\n\treturn 0;\n}"}
{"similarity_score": 0.9828473413379074, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d0267af712649c07002a78a50f118425", "bug_code_uid": "1d719ae20efe13ff45efc814a773eccc", "src_uid": "980d2b3b6b80358b3757db8fe19e8287", "apr_id": "8fae43c7073719bf3b5315e1a25c1d29", "difficulty": 1100, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int a[n];\r\n    for (int i = 0; i < n; i++)\r\n        scanf(\"%d\", a + i);\r\n    printf(\"%d\\n\", n * 3);\r\n    for (int i = 0; i < 2 * n; i += 2)\r\n    {\r\n        printf(\"1 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"2 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"1 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"2 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"1 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"2 %d %d\\n\", i + 1, i + 2);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n        solve();\r\n}", "fixed": "#include <stdio.h>\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int tmp;\r\n    for (int i = 0; i < n; i++)\r\n        scanf(\"%d\", &tmp);\r\n    printf(\"%d\\n\", n * 3);\r\n    for (int i = 0; i < n; i += 2)\r\n    {\r\n        printf(\"1 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"2 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"1 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"2 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"1 %d %d\\n\", i + 1, i + 2);\r\n        printf(\"2 %d %d\\n\", i + 1, i + 2);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n        solve();\r\n}"}
{"similarity_score": 0.885539331135186, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "4459ac17d0c9300e18d75d5ecd7f2ac5", "bug_code_uid": "b5d4a48b39d1c15d262f5fe76210c459", "src_uid": "910c0e650d48af22fa51ab05e8123709", "apr_id": "97df21f373e4bc1a80ed4a94225c8a76", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main(void){\n\tint t;\n\tscanf(\"%d\",&t);\n\tchar str[20];\n\tchar ne[20];\n\tbool flag;\n\tint length,i,k,num;\n\twhile(t--){\n\t\tscanf(\"%s\",str);\n\t\tflag=false;\n\t\tlength=strlen(str);\n\t\tif(str[0]=='R'){\n\t\t\t\n\t\t\ti=2;\n\t\t\twhile(i<length){\n\t\t\t\tif(str[i]=='C'){\n\t\t\t\t\tk=i+1;\n\t\t\t\t\tflag=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\t\tif(flag){\n\t\t\t\ti=1;\n\t\t\t\tnum=0;\n\t\t\t\twhile(k<length){\n\t\t\t\t\tnum=num*10+(str[k]-'0');\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\ti=0;\n\t\t\t\twhile(num>0){\n\t\t\t\t\tne[i]=(char)(num%26+'A'-1);\n\t\t\t\t\ti++;\n\t\t\t\t\tnum/=26;\n\t\t\t\t}\n\t\t\t\ti-=1;\n\t\t\t\twhile(i>=0){\n\t\t\t\t\tprintf(\"%c\",ne[i]);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\ti=1;\n\t\t\t\twhile(str[i]>='0'&&str[i]<='9'){\n\t\t\t\t\tprintf(\"%c\",str[i]);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\ti=0;\n\t\t\t\tnum=0;\n\t\t\t\twhile(str[i]>='A'&&str[i]<='Z'){\n\t\t\t\t\tnum=num*26+(str[i]+1-'A');\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tprintf(\"R\");\n\t\t\t\twhile(i<length){\n\t\t\t\t\tprintf(\"%c\",str[i]);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tprintf(\"C\");\n\t\t\t\tprintf(\"%d\\n\",num);\n\t\t\t}\n\t\t\n\t\t\n\t} \n\treturn 0;\n} ", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main(void){\n\tint t;\n\tscanf(\"%d\",&t);\n\tchar str[20];\n\tchar ne[20];\n\tint flag;\n\tint length,i,k,num;\n\twhile(t--){\n\t\tscanf(\"%s\",str);\n\t\tflag=0;\n\t\tlength=strlen(str);\n\t\tif(str[0]=='R'&&str[1]>='0'&&str[1]<='9'){\n\t\t\t\n\t\t\ti=2;\n\t\t\twhile(i<length){\n\t\t\t\tif(str[i]=='C'){\n\t\t\t\t\tk=i+1;\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\t\tif(flag){\n\t\t\t\ti=1;\n\t\t\t\tnum=0;\n\t\t\t\twhile(k<length){\n\t\t\t\t\tnum=num*10+(str[k]-'0');\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\ti=0;\n\t\t\t\twhile(num>0){\n\t\t\t\t\tif(num%26==0){\n\t\t\t\t\t\n\t\t\t\t\t    ne[i]='Z';\n\t\t\t\t\t    num=(num/26)-1;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\n\t\t\t\t\t    ne[i]=(char)(num%26+'A'-1);\n\t\t\t\t\t    num/=26;\n\t\t\t\t    }\n\t\t\t\t\ti++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\ti-=1;\n\t\t\t\twhile(i>=0){\n\t\t\t\t\tprintf(\"%c\",ne[i]);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\ti=1;\n\t\t\t\twhile(str[i]>='0'&&str[i]<='9'){\n\t\t\t\t\tprintf(\"%c\",str[i]);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\ti=0;\n\t\t\t\tnum=0;\n\t\t\t\twhile(str[i]>='A'&&str[i]<='Z'){\n\t\t\t\t\tnum=num*26+(str[i]+1-'A');\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tprintf(\"R\");\n\t\t\t\twhile(i<length){\n\t\t\t\t\tprintf(\"%c\",str[i]);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tprintf(\"C\");\n\t\t\t\tprintf(\"%d\\n\",num);\n\t\t\t}\n\t\t\n\t\t\n\t} \n\treturn 0;\n} "}
{"similarity_score": 0.9845788849347569, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "96887bd426c6c84278a300ce276512fb", "bug_code_uid": "b6c077c9208bb2aa1b793e41e594650b", "src_uid": "bc532d5c9845940b5f59485394187bf6", "apr_id": "66f2f9c0102d6c640acd0cbefa71f8dc", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\tint n,m, aux;\n\tscanf (\"%d %d\", &n, &m);\n  int t;\n\tint i, j;\n  int TP=0, TI=0, CP=0, CI=0;\n\t\n\tfor (i = 0; i<n; i++){\n\t\tscanf(\"%d\", &t);\n    if (t%2 == 1)\n      TI++;\n    else\n      TP++;\n  }\n\t\n  for (j = 0; j<m; j++){\n    scanf(\"%d\", &t);\n    if (t%2 == 1)\n      CI++; \n    else\n      CP++;\n  }\n  printf (\"%d\\n\", CI<TP ? CI : TP + CP>TI ? TI: CP);\t\n\t\n\treturn 0;\n\n\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\tint n,m, aux;\n\tscanf (\"%d %d\", &n, &m);\n  int t;\n\tint i, j;\n  int TP=0, TI=0, CP=0, CI=0;\n\t\n\tfor (i = 0; i<n; i++){\n\t\tscanf(\"%d\", &t);\n    if (t%2 == 1)\n      TI++;\n    else\n      TP++;\n  }\n\t\n  for (j = 0; j<m; j++){\n    scanf(\"%d\", &t);\n    if (t%2 == 1)\n      CI++; \n    else\n      CP++;\n  }\n  \n  printf (\"%d\\n\", (CI<TP ? CI : TP) + (CP>TI ? TI: CP));\t\n\t\n\treturn 0;\n\n\n\n}"}
{"similarity_score": 0.7744360902255639, "equal_cnt": 12, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 11, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "a8f625409b07d5f4136c8759b0ec66ab", "bug_code_uid": "06fa0875d470cf76dacc5655374b8fc6", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "9ed7792ed6489a9f5c27d15518347896", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){int n, t; scanf(\"%d\",&t); while(t--){scanf(\"%d\",&n);printf(\"%d\\n\",(n-1)/2);}", "fixed": "#include <stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n    while(t--){\n        int n;\n        scanf(\"%d\", &n);\n        printf(\"%d\\n\", (n-1)/2);\n    }\n}"}
{"similarity_score": 0.9974326059050064, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "60c54bcd45dce93712c88d15bff2e7bb", "bug_code_uid": "947c741728d2fd6e290b07cbb8cff9d5", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "8b795bfcc9874e6bd8f64aeb9cc2527d", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int s, n, i, j, temp1, temp2;\n    scanf(\"%d %d\",&s,&n);\n    int a[n+1],b[n+1];\n    for(i = 0; i < n; i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n\n    for(i = 0; i < n; i++){\n        for(j = 0; j < n - i; j++){\n            if(a[j] > a[j+1]){\n                temp1 = a[j];\n                a[j] = a[j+1];\n                a[j+1] = temp1;\n\n                temp2 = b[j];\n                b[j] = b[j+1];\n                b[j+1] = temp2;\n            }\n        }\n    }\n    int count = 0;\n\n    for(i = 0; i < n; i++){\n        if(s > a[i]){\n\n            s = s + b[i];\n             //printf(\"s: %d\\n\", s);\n            count++;\n        }\n    }\n\n    if(count == n){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int s, n, i, j, temp1, temp2;\n    scanf(\"%d %d\",&s,&n);\n    int a[n+1],b[n+1];\n    for(i = 0; i < n; i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n\n    for(i = 0; i < n; i++){\n        for(j = 0; j < n - i - 1; j++){\n            if(a[j] > a[j+1]){\n                temp1 = a[j];\n                a[j] = a[j+1];\n                a[j+1] = temp1;\n\n                temp2 = b[j];\n                b[j] = b[j+1];\n                b[j+1] = temp2;\n            }\n        }\n    }\n    int count = 0;\n\n    for(i = 0; i < n; i++){\n        if(s > a[i]){\n\n            s = s + b[i];\n             //printf(\"s: %d\\n\", s);\n            count++;\n        }\n    }\n\n    if(count == n){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9989743589743589, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "398678e230a867f005a406f5f28767ff", "bug_code_uid": "3cffe304731213fd8d5b107ac5b9668f", "src_uid": "475239ff4ae3675354d2229aba081a58", "apr_id": "bbbc7cbf26a6f02d6a06f363062d4d64", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main( )\n{\n\tlong long int n,max=0,max1=0,a[1001],b[1001],i=0,j=0,s=0,l=0;\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&b[i]);\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\ts=a[i];\n\t\tl=b[i];\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tif((s|a[j])>s)\n\t\t\t{\n\t\t\t\ts=s|a[j];\n\t\t\t}\n\t\t\tif((l|b[j])>l)\n\t\t\t{\n\t\t\t\tl=l|b[j];\n\t\t\t}\n\t\t}\n\t\tif(s>max)\n\t\t{\n\t\t\tmax=s;\n\t\t}\n\t\tif(l>max1)\n\t\t{\n\t\t\tmax1=l;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",max+max1);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main( )\n{\n\tlong long int n,max=0,max1=0,a[1001],b[1001],i=0,j=0,s=0,l=0;\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&b[i]);\n\t}\n\tfor(i=0;i<=n-1;i++)\n\t{\n\t\ts=a[i];\n\t\tl=b[i];\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tif((s|a[j])>s)\n\t\t\t{\n\t\t\t\ts=s|a[j];\n\t\t\t}\n\t\t\tif((l|b[j])>l)\n\t\t\t{\n\t\t\t\tl=l|b[j];\n\t\t\t}\n\t\t}\n\t\tif(s>max)\n\t\t{\n\t\t\tmax=s;\n\t\t}\n\t\tif(l>max1)\n\t\t{\n\t\t\tmax1=l;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",max+max1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9351535836177475, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4e57d55548e906089f8718fa5a52a3f4", "bug_code_uid": "64d90e8a34f4b2e2a323ebc6d8896492", "src_uid": "7a724f327c6202735661be25ef9328d2", "apr_id": "aba3df252d4c6093b09719c10c841add", "difficulty": 1000, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,t,n,l;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {char c;\n        int a=0,s=0;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&c);\n        if(c=='(')\n        s++;\n        else\n        s--;\n        printf(\"%d %c \",s,c);\n        if(s<0)\n        {\n            s++;\n            a++;\n        }\n    }\n    printf(\"%d\\n\",a);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,t,n,l;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {char c;\n        int a=0,s=0;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&c);\n        while(c!='('&&c!=')')\n         scanf(\"%c\",&c);\n        if(c=='(')\n        s++;\n        else\n        s--;\n     //   printf(\"%d %c \",s,c);\n        if(s<0)\n        {\n            s++;\n            a++;\n        }\n    }\n    printf(\"%d\\n\",a);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7556179775280899, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d79117bed42eb93480f37b291a84a233", "bug_code_uid": "69a12f9fcc54a464597c34abd888dd17", "src_uid": "adf4239de3b0034cc690dad6160cf1d0", "apr_id": "bf994ba9fdcd4a98ede7bbd455ae90c0", "difficulty": 1000, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tint n,m,o1=0,e1=0,e2=0,o2=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&m);\n\t\t\t(m&1)?o1++:e1++;\n\n\t\t}\n\t\tscanf(\"%d\",&n);\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&m);\n\t\t\t(m&1)?o2++:e2++;\n\t\t}\n\t\tprintf(\"%d\\n\",e1*e2+o1*o2);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tlong long int n,m,o1=0,e1=0,e2=0,o2=0;\n\t\tscanf(\"%lld\",&n);\n\t\tfor(long long int j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&m);\n\t\t\t(m&1)?o1++:e1++;\n\n\t\t}\n\t\tscanf(\"%lld\",&n);\n\t\tfor(long long int j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&m);\n\t\t\t(m&1)?o2++:e2++;\n\t\t}\n\t\tprintf(\"%lld\\n\",e1*e2+o1*o2);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.11609756097560976, "equal_cnt": 38, "replace_cnt": 33, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 39, "lang": "GNU C11", "fix_code_uid": "96eb8452da00ca0deb18f4a145e5ccfd", "bug_code_uid": "832199d2721279ca3f4e7b903a22fb1d", "src_uid": "710c7211d23cf8c01fae0b476a889276", "apr_id": "adf410624cae0ca601da785b895e6db1", "difficulty": 1000, "tags": ["brute force", "math", "number theory", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n    int n,m,temp,z=0,i,t,w;\n    char a[100000],b[100000];\n    scanf(\"%d\",&t);\n    getchar();\n    while(t--)\n    {\n        memset(a,'\\0',sizeof(a));\n        memset(b,'\\0',sizeof(b));\n        gets(a);\n        n=strlen(a);\n        gets(b);\n        m=strlen(b);\n        int p=n,q=m;\n        w=n*m;\n        while((n-m)!=0)\n        {\n            if(n>m)\n                n=n-m;\n            else\n                m=m-n;\n        }\n        temp=w/m;\n        for(i=0; i<temp; i++)\n        {\n            if(a[i%p]!=b[i%q])\n            {\n                z=1;\n                break;\n            }\n        }\n        if(z==1)\n            printf(\"-1\\n\");\n        else\n            for(i=0; i<temp; i++)\n            {\n                if(i==temp-1)\n                    printf(\"%c\\n\",a[i%p]);\n                else\n                    printf(\"%c\",a[i%p]);\n            }\n    }\n\n    return 0;\n}\n\n \t\t \t\t\t\t  \t\t\t\t \t \t\t  \t\t\t  \t\t\t", "fixed": "//\u8f93\u51fa\u6700\u77ed\u516c\u500d\u4e32\uff0c\u5747\u7531a, b, \u7ec4\u6210\n/*\n\u601d\u8def\uff1a\n\t\u5148\u6c42\u5404\u81ea\u7684\u957f\u5ea6\uff0c\u7136\u540e\u6c42\u5176\u6700\u5927\u516c\u56e0\u6570\uff0c\u5728\u6c42\u5176\u6700\u5c0f\u516c\u500d\u6570 \n\t \n*/ \n# include <stdio.h>\n\n# include <string.h>\n\nint gcm(int a, int b)\n{\n/*\tif(a >= b)\n\t{\n\t\tif(a % b == 0)\n\t\t\treturn b;\n\t\telse\n\t\t\treturn gcm(b, a%b);\n\t}\n\t\n\telse\n\t{\n\t\tif(b % a == 0)\n\t\t\treturn a;\n\t\telse \n\t\t\treturn gcm(b, b%a);\n\t}\n*/\n\tint i;\n\tif(a >= b)\n\t\ti = a;\n\telse\n\t\ti = b;\n\t\t\n\tfor(i; i>=1; i--)\n\t{\n\t\tif(a%i==0 && b%i==0)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\t\t\n}\nint main(void)\n{\n\tint len1, len2, i, j, k, n, lcm; \n\tchar s1[2002], s2[2002], ans[2002];\n\t\n\tfor(k=0; k<2002; ++k)\n\ts1[k] = s2[k] = 0;\n\tscanf(\"%d\", &n);\n\tgetchar(); \n\t\n\tfor(i=0; i<n; ++i)\n\t{\n\t\tgets(s1);\n\t\tgets(s2);\n\t\t\n\t\tlen1 = strlen(s1);\n\t\tlen2 = strlen(s2);\n\t\t\n\t\tlcm = (len1*len2) / gcm(len1, len2);\t//\u627e\u5230\u6700\u5c0f\u516c\u500d\u6570\n\t//\tprintf(\"\u6700\u5c0f\u516c\u500d\u6570\u4e3a\uff1a%d\", lcm);\n\t\t\n\t\tk = 0;\t\t//\u8865\u5168s1 \n\t\tfor(j=len1; j<lcm; j++)\n\t\t{\n\t\t\ts1[j] = s1[k++];\n\t\t}\n\t\t\n\t\tk = 0;\t\t//\u8865\u5168s2 \n\t\tfor(j=len2; j<lcm; j++)\n\t\t{\n\t\t\ts2[j] = s2[k++];\n\t\t}\n\t\t\n\t\tif(strcmp(s1, s2) == 0)\n\t\t\tprintf(\"%s\\n\", s1);\n\t\telse\n\t\t\tprintf(\"-1\\n\"); \n\t\t\n\t\tfor(k=0; k<2002; ++k)\n\t\t\ts1[k] = s2[k] = 0;\n\t}\n\t\n\t\n\treturn 0;\n } \n  \t\t\t\t \t\t   \t  \t\t \t\t\t\t  \t    \t"}
{"similarity_score": 0.965675057208238, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "523f9c0cf2b44fa7ef5f90cee4cc033f", "bug_code_uid": "9a126f53d407830f99539bafef87c9b9", "src_uid": "2be73aa00a13be5274cf840ecd3befcb", "apr_id": "59b7a14a20a69f85d9f7764092ef5f6d", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n, i, a=0, L=0, R=0,beauty;\n    long long int k, temp;\n    int j;\n    scanf(\"%I64d\",&n);\n    int l[n][2];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        scanf(\"%d\",&l[i][j]);\n        L=L+l[i][0];\n        R=R+l[i][1];\n        }\n        k=L-R;\n        beauty=k;\n        if (k<0)\n        beauty=-k;\n    for(i=0;i<n;i++)\n    {\n        temp=l[i][0];\n        l[i][0]=l[i][1];\n        l[i][1]=temp;\n        temp=k-2*(l[i][0]-l[i][1]);\n        if (temp<0)\n        temp=-temp;\n        if(temp>beauty)\n            {beauty=temp;\n            a=i+1;}\n    }\n    printf(\"%I64d\",a);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n, i, a=0, L=0, R=0,beauty;\n    long long int k, temp;\n    int j;\n    scanf(\"%I64d\",&n);\n    int l[n][2];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        scanf(\"%d\",&l[i][j]);\n        L=L+l[i][0];\n        R=R+l[i][1];\n        }\n        k=L-R;\n        if (k<0)\n        beauty=-k;\n        else beauty=k;\n    for(i=0;i<n;i++)\n    {\n        temp=l[i][0];\n        l[i][0]=l[i][1];\n        l[i][1]=temp;\n        temp=k-2*(l[i][1]-l[i][0]);\n        if (temp<0)\n        temp=-temp;\n        if(temp>beauty)\n            {beauty=temp;\n            a=i+1;}\n    }\n    printf(\"%I64d\",a);\n}\n"}
{"similarity_score": 0.9990900818926297, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "515d85bec1e3f0f5a7b219a6748da51a", "bug_code_uid": "9d4ea656e0c5a0e0c87133d0dce14810", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "2c55bc03edd69672afb22fd5fa73edba", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nlong long ceilFrac(long long a, long long b) {\r\n    return a % b ? a / b + 1 : a / b;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int tNumber = 1; tNumber <= t; tNumber++) {\r\n        long long n, m, x;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        long long cellnumberN = ceilFrac(x, n);\r\n        long long cellnumberM = x - (1 + (cellnumberN - 1) * n) + 1);\r\n        long long cellNumber = cellnumberN + m * (cellnumberM - 1);\r\n\r\n        printf(\"%lld\\n\", cellNumber);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nlong long ceilFrac(long long a, long long b) {\r\n    return a % b ? a / b + 1 : a / b;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int tNumber = 1; tNumber <= t; tNumber++) {\r\n        long long n, m, x;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        long long cellnumberN = ceilFrac(x, n);\r\n        long long cellnumberM = x - (1 + (cellnumberN - 1) * n) + 1;\r\n        long long cellNumber = cellnumberN + m * (cellnumberM - 1);\r\n\r\n        printf(\"%lld\\n\", cellNumber);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.11143695014662756, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "befb9e1cf32c034de5f58e3d35e8c559", "bug_code_uid": "ec7bfb1d6d272f8f99cba7c4667f9682", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "06d6a33fada2c1edf48a3e34e00c3b41", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint quicksort(int ar[],int lower,int upper)\n{\n    int p=ar[lower];\n    int i=lower+1;\n    int j=upper;\n    while(j>=i)\n    {\n        while(ar[i]<=p)\n            i++;\n        while(ar[j]>p)\n            j--;\n        if(i<j)\n        {\n            int temp=ar[j];\n            ar[j]=ar[i];\n            ar[i]=temp;\n        }\n    }\n    int temp=p;\n    ar[lower]=ar[j];\n    ar[j]=temp;\n    return j;\n}\nvoid partition(int ar[],int lower,int upper)\n{\n    int i;\n    if(upper>lower)\n    {\n        i=quicksort(ar,lower,upper);\n        partition(ar,lower,i-1);\n        partition(ar,i+1,upper);\n    }\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,ar[n],lc=0,mc=0;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&ar[i]);\n    partition(ar,0,n-1);\n    for(i=1;i<n-1;i++)\n    {\n        if(ar[i]==ar[0])\n            lc++;\n        else if(ar[i]==ar[n-1])\n            mc++;\n    }\n    printf(\"%d\",n-2-lc-mc);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<limits.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,ar[n],lc=0,mc=0,max=INT_MIN,min=INT_MAX;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ar[i]);\n        if(ar[i]<min)\n            min=ar[i];\n        if(ar[i]>max)\n            max=ar[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(ar[i]==min)\n            lc++;\n        else if(ar[i]==max)\n            mc++;\n    }\n    printf(\"%d\",n-lc-mc);\n    return 0;\n}\n"}
{"similarity_score": 0.9966722129783694, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ff65d623045d2f928da21c20f3bf00af", "bug_code_uid": "9a028ab619d3dee1ca42f638c8458e75", "src_uid": "77b5bed410d621fb56c2eaebccff5108", "apr_id": "183a5f3b20979f3c66518a73c8a299b6", "difficulty": 1600, "tags": ["greedy", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n, m, d, h, i, dd=-1, hh=-1, max=0, x, imp=0;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor(i=0; i<m; i++) {\n\t\tscanf(\"%d%d\", &d, &h);\n\t\tif(dd>0) {\n\t\t\tif(h-hh > d-dd || h-hh > d-dd) {\n\t\t\t\timp = 1;\n\t\t\t} else {\n\t\t\t\tif(h > hh) {\n\t\t\t\t\tx = h + (d-dd - (h-hh))/2;\n\t\t\t\t} else if(h < hh) {\n\t\t\t\t\tx = hh + (d-dd - (hh-h))/2;\n\t\t\t\t} else {\n\t\t\t\t\tx = h + (d-dd)/2;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tx = h+d-1;\n\t\t}\n\t\tif(x > max) {\n\t\t\tmax = x;\n\t\t}\n\t\tdd = d;\n\t\thh = h;\n\t}\n\n\tx = h + (n-d);\n\tif(x > max) {\n\t\tmax = x;\n\t}\n\n\tif(imp) {\n\t\tprintf(\"IMPOSSIBLE\\n\");\n\t} else {\n\t\tprintf(\"%d\\n\", max);\n\t}\n\n\treturn 0;\n\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint n, m, d, h, i, dd=-1, hh=-1, max=0, x, imp=0;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor(i=0; i<m; i++) {\n\t\tscanf(\"%d%d\", &d, &h);\n\t\tif(dd>0) {\n\t\t\tif(h-hh > d-dd || hh-h > d-dd) {\n\t\t\t\timp = 1;\n\t\t\t} else {\n\t\t\t\tif(h > hh) {\n\t\t\t\t\tx = h + (d-dd - (h-hh))/2;\n\t\t\t\t} else if(h < hh) {\n\t\t\t\t\tx = hh + (d-dd - (hh-h))/2;\n\t\t\t\t} else {\n\t\t\t\t\tx = h + (d-dd)/2;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tx = h+d-1;\n\t\t}\n\t\tif(x > max) {\n\t\t\tmax = x;\n\t\t}\n\t\tdd = d;\n\t\thh = h;\n\t}\n\n\tx = h + (n-d);\n\tif(x > max) {\n\t\tmax = x;\n\t}\n\n\tif(imp) {\n\t\tprintf(\"IMPOSSIBLE\\n\");\n\t} else {\n\t\tprintf(\"%d\\n\", max);\n\t}\n\n\treturn 0;\n\n}"}
{"similarity_score": 0.9902439024390244, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "abaabf40db05bc0136a77036b3bd3615", "bug_code_uid": "fd6377ec12d4fc9160eb369e55142161", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "8ed479e598d2a5935c8611e291eadc78", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,m=1,c=1,i,a[100000],k;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\nfor(i=0;i<a;i++)\n{\nif(a[i]<=a[i+1]&&i<n)\nc++;\nelse\n{\nif(m<c)m=c;\nc=1;\n}\n}\nprintf(\"%d\",m);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,m=1,c=1,i,a[100000],k;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\nfor(i=0;i<n;i++)\n{\nif(a[i]<=a[i+1]&&i<n-1)\nc++;\nelse\n{\nif(m<c)m=c;\nc=1;\n}\n}\nprintf(\"%d\",m);\n}\n"}
{"similarity_score": 0.07591504744690465, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "6b572e94e145c31a6d271eb210c57441", "bug_code_uid": "37d03d196df8be0a6423dc88bea887d9", "src_uid": "54f8b8e6711ff5c69e0bc38a6e2f4999", "apr_id": "78aca7421493a5c47f1860e841c64b92", "difficulty": 1900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\ntypedef struct mensaje{\n\t\t\n\t\tchar h[40] ;\n\t\t\n\t\n}MENS;\n\n\n\nint main(){\n\tconst char A[]=(\"a\");\n\tconst char P[]=(\"p\");\n\tint n, i,dia,M,N,x,y;\n\tchar c[2];\n\tchar c1[1]=(\"\");\n\tchar c2[1]=(\"\");\n\t\n\t\n\tscanf(\"%d\",&n);\n\tMENS V[n];\n\n\n\tfor(i=0; i<n; i++){\n\t\tfflush(stdin);\n\t\tscanf(\"%[^\\n]\",V[i].h);\n\n\t\t\n\t}\n\tdia=0;\n\tdia++;\n\n\tfor(i=0; i<n-1; i++){\n\t\t\t\n\t\tc1[0] = V[i].h[7];\n\t\tc2[0] = V[i+1].h[7];\n\t\t\n\t\tM=strncmp(c1 ,P , 1);// caracter p con el primer vector si es a o m: Saber si es P\n\n\t\tN=strncmp(c2 ,A , 1);// si el siguiente elemento tiene Una A, en am o pm\n\t\n\t\tc[0]=V[i].h[1];\n\t\tc[1]=V[i].h[2];\n\t\tx=atoi(c);\n\t\t\n\t\tc[0]=V[i+1].h[1];\n\t\tc[1]=V[i+1].h[2];\n\t\ty=atoi(c);\n\t\n\t\t\n\t\tif(x==y){\n\t\t\tc[0]=V[i].h[4];\n\t\t\tc[1]=V[i].h[5];\n\t\t\tx=atoi(c);\n\n\t\t\tc[0]=V[i+1].h[4];\n\t\t\tc[1]=V[i+1].h[5];\n\t\t\ty=atoi(c);\n\t\t\t\n\t\t\tif(x==y){\n\t\t\t\n\t\t\t\tif(M==0 && N==0){\n\t\t\t\t\tdia++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(x>y){\n\t\t\t\tif(M==0){\n\n\t\t\t\t\tdia++;\t\t\t\t\t\t\n\t\t\t\t}else if(N==0){\n\n\t\t\t\t\tdia++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(M==0 && N==0){\n\t\t\t\t\tdia++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\n\t\t}\n\t\telse if(x>y){\n\t\t\tif(M==0 ){\n\t\t\t\tdia++;\t\t\t\t\t\t\n\t\t\t}else if(N==0){\n\t\t\t\tdia++;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(M==0 && N==0){\n\t\t\t\tdia++;\n\t\t\t}\n\t\t}\t\n\t\t\n\t\t\n\t}\n\t\n\tprintf(\"%d\",dia);\n\t\n\treturn 0;\n\t\n}\n", "fixed": "#include <stdio.h>\n\n\nint main() {\n\n\tint i, n, hora,min, dia,band,ahora,antes;\n\tchar x;\t\t\t\t\t\t\t\t\t//x puede valer o 'a' o 'p'\n\tchar mens[30];\t\t\t\t\t\t\t//el mensaje\n\t\n\tscanf(\"%d\\n\", &n);\n\t\n\n\tband=dia=1;\n\n    \n\tantes=0;\n\tfor(i=0; i<n; i++) {\n\t\tint h, m;\n\t\tscanf(\"[%d:%d %c.m.]: %[^\\n]\",&hora,&min,&x,mens);\n        getchar();\n        \n\t\thora= hora%12; \t\t\t    \t//halla modulo de la hora para pasar a formato de 24 horas\n\t\tif (x=='p') {\t\t\t\t    //si x es p entonces seran 12 horas mas al calculo anterior\n\t\t\thora=hora+12;\n\t\t}\n\t\tahora=hora*60+min; \t\t\t\t//el tiempo grabado actual sera\n\t\tif (antes == ahora && band<10){ //No puede exitir 10 tiempos iguales\n\t\t\tband++;\n\t\t}\n\t\telse if(ahora>antes){\n\t\t\tband=1;\t\t\t\t\t\t//va ser el mismo dia\n\t\t}\n\t\telse {\t\t\t\t\t\t\t//si no cumple ninguna condicion anterior entonces pasara 1 dia y la grabacion reseteara\n\t\t\tdia++;\n\t\t\tband=1;\n\t\t}\n\t\tantes=ahora;\t\t\t\t\t//para que asi puede ingresar el siguiente\n\t}\n\tprintf(\"%d\\n\",dia);\n\treturn 0;\n}\n        \n\t\t\n\n"}
{"similarity_score": 0.9657089898053753, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7f882ace593896f7c472b6e20bff339f", "bug_code_uid": "7b6d3bbed16047dcecbfa299b21ddcee", "src_uid": "bbf2dbdea6dd3aa45250ab5a86833558", "apr_id": "3b844e820a52671df6d7059bc9dd9f34", "difficulty": 1300, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<memory.h>\n#include<malloc.h>\n#define ll long long\n#define ull unsigned long long\n#define max(a,b) (a)>(b)?(a):(b)\n#define min(a,b) (a)<(b)?(a):(b)\nint gcd(int a,int b){\n\treturn b?gcd(b,a%b):a;\n}\nint num[26];\nint main()\n{\n\tchar s[1010];\n\tint i,l,ct=0;\n\tscanf(\"%s\",s);\n\tl=strlen(s);\n\tfor(i=0;i<l;i++){\n\t\tnum[s[i]-'a']++;\n\t}\n\tfor(i=0;i<26;i++)\n\t\tif(num[i]&1==1)\n\t\t\tct++;\n\tif(ct&1==1) printf(\"First\\n\");\n\telse printf(\"Second\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<memory.h>\n#include<malloc.h>\n#define ll long long\n#define ull unsigned long long\n#define max(a,b) (a)>(b)?(a):(b)\n#define min(a,b) (a)<(b)?(a):(b)\nint gcd(int a,int b){\n\treturn b?gcd(b,a%b):a;\n}\nint num[26];\nint main()\n{\n\tchar s[1010];\n\tint i,l,ct=0;\n\tscanf(\"%s\",s);\n\tl=strlen(s);\n\tfor(i=0;i<l;i++){\n\t\tnum[s[i]-'a']++;\n\t}\n\tfor(i=0;i<26;i++)\n\t\tif(num[i]&1==1)\n\t\t\tct++;\n\tif(ct==0)\n\t\tprintf(\"First\\n\");\n\telse if(ct&1==1) printf(\"First\\n\");\n\telse printf(\"Second\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9978902953586498, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d9b02bdabfaccdc5bcacecdeb538f28c", "bug_code_uid": "6031c4189ec8892d8cab9220141d8e32", "src_uid": "27eac8ca184bf08aa724d49057bfba71", "apr_id": "f37795a96073760b67bd0b04497fa43e", "difficulty": 2100, "tags": ["dp", "combinatorics"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t2000\n#define MD\t1000000007\n\nint add(int a, int b) { return (a + b) % MD; }\n\nint mult(int a, int b) { return (long long) a * b % MD; }\n\nint main() {\n\tstatic int aa[N + 1], dp[N][N + 1];\n\tint n, h, i, j;\n\n\tscanf(\"%d%d\", &n, &h);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\tif (aa[i] > h) {\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\taa[i] = h - aa[i];\n\t}\n\tfor (i = n; i >= 1; i--)\n\t\taa[i] -= aa[i - 1];\n\tfor (i = 0; i <= n; i++)\n\t\tif (aa[i] < -1 || aa[i] > 1) {\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\tif (aa[0] == -1) {\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t} else if (aa[0] == 0)\n\t\tdp[0][0] = 1;\n\telse\n\t\tdp[0][1] = 1;\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j <= n; j++)\n\t\t\tif (dp[i][j] > 0) {\n\t\t\t\tint a = aa[i + 1];\n\n\t\t\t\tif (a <= 0 && j > 0)\n\t\t\t\t\tdp[i + 1][j + a] = add(dp[i + 1][j + a], mult(dp[i][j], j));\n\t\t\t\tif (a >= 0)\n\t\t\t\t\tdp[i + 1][j + a] = add(dp[i + 1][j + a], dp[i][j]);\n\t\t\t}\n\tprintf(\"%d\\n\", dp[n][0]);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t2000\n#define MD\t1000000007\n\nint add(int a, int b) { return (a + b) % MD; }\n\nint mult(int a, int b) { return (long long) a * b % MD; }\n\nint main() {\n\tstatic int aa[N + 1], dp[N + 1][N + 1];\n\tint n, h, i, j;\n\n\tscanf(\"%d%d\", &n, &h);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\tif (aa[i] > h) {\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\taa[i] = h - aa[i];\n\t}\n\tfor (i = n; i >= 1; i--)\n\t\taa[i] -= aa[i - 1];\n\tfor (i = 0; i <= n; i++)\n\t\tif (aa[i] < -1 || aa[i] > 1) {\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\tif (aa[0] == -1) {\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t} else if (aa[0] == 0)\n\t\tdp[0][0] = 1;\n\telse\n\t\tdp[0][1] = 1;\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j <= n; j++)\n\t\t\tif (dp[i][j] > 0) {\n\t\t\t\tint a = aa[i + 1];\n\n\t\t\t\tif (a <= 0 && j > 0)\n\t\t\t\t\tdp[i + 1][j + a] = add(dp[i + 1][j + a], mult(dp[i][j], j));\n\t\t\t\tif (a >= 0)\n\t\t\t\t\tdp[i + 1][j + a] = add(dp[i + 1][j + a], dp[i][j]);\n\t\t\t}\n\tprintf(\"%d\\n\", dp[n][0]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9872340425531915, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d3a0aaa3043a4ed248a113af971b696a", "bug_code_uid": "41a8ac032b8a5546381a5d31237a7ac0", "src_uid": "f71d1ffcea72f5b72ead3c0bcfa323f2", "apr_id": "1c5388d5a9b35933c6f8072e70351a8a", "difficulty": 2500, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint a[32];\nint p[32][3];\nint r[32][3];\nint ans;\nint n;\n\nvoid dfs(int t) {\n\tint i,j;\n\tif (a[t]==n) {\n\t\tif (t<ans) {\n\t\t\tans=t;\n\t\t\tfor(i=0;i<=ans;i++) for(j=0;j<3;j++) r[i][j]=p[i][j];\n\t\t}\n\t\treturn ;\n\t}\n\tif (t>=ans) return ;\n\tfor(i=t;i>=0;i--) for(j=1;j<=8;j*=2) {\n\t\tif (a[i]+a[t]*j<=n) {\n\t\t\ta[t+1]=a[i]+a[t]*j;\n\t\t\tp[t+1][0]=i,p[t+1][1]=t,p[t+1][2]=j;\n\t\t\tdfs(t+1);\n\t\t}\n\t\tif (j!=1 && a[i]*j+a[t]<=n) {\n\t\t\ta[t+1]=a[t]+a[i]*j;\n\t\t\tp[t+1][0]=t,p[t+1][1]=i,p[t+1][2]=j;\n\t\t\tdfs(t+1);\n\t\t}\n\t}\n\tfor(j=2;j<=8 && a[t]*j<=n;j*=2) {\n\t\ta[t+1]=a[t]*j;\n\t\tp[t+1][0]=-1,p[t+1][1]=t,p[t+1][2]=j;\n\t\tdfs(t+1);\n\t}\n}\n\nint main() {\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(ans=i=0;i<8;i++) if (n&(1<<i)) ans++;\n\ta[0]=1;\n\tdfs(0);\n\tprintf(\"%d\\n\",ans);\n\tfor(i=1;i<=ans;i++) {\n\t\tif (r[i][0]==-1) {\n\t\t\tprintf(\"lea e%cx, [%d*e%cx]\\n\",'a'+i,r[i][2],'a'+r[i][1]);\n\t\t} else if (r[i][2]==1) {\n\t\t\tprintf(\"lea e%cx, [e%cx + e%cx]\\n\",'a'+i,'a'+r[i][0],'a'+r[i][1]);\n\t\t} else {\n\t\t\tprintf(\"lea e%cx, [e%cx + %d*e%cx]\\n\",'a'+i,'a'+r[i][0],r[i][2],'a'+r[i][1]);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint a[32];\nint p[32][3];\nint r[32][3];\nint ans;\nint n;\n\nvoid dfs(int t) {\n\tint i,j;\n\tif (a[t]==n) {\n\t\tif (t<ans) {\n\t\t\tans=t;\n\t\t\tfor(i=0;i<=ans;i++) for(j=0;j<3;j++) r[i][j]=p[i][j];\n\t\t}\n\t\treturn ;\n\t}\n\tif (t>=ans) return ;\n\tfor(i=t;i>=0;i--) for(j=1;j<=8;j*=2) {\n\t\tif (a[i]+a[t]*j<=n) {\n\t\t\ta[t+1]=a[i]+a[t]*j;\n\t\t\tp[t+1][0]=i,p[t+1][1]=t,p[t+1][2]=j;\n\t\t\tdfs(t+1);\n\t\t}\n\t\tif (j!=1 && a[i]*j+a[t]<=n) {\n\t\t\ta[t+1]=a[t]+a[i]*j;\n\t\t\tp[t+1][0]=t,p[t+1][1]=i,p[t+1][2]=j;\n\t\t\tdfs(t+1);\n\t\t}\n\t}\n\tfor(j=2;j<=8 && a[t]*j<=n;j*=2) {\n\t\ta[t+1]=a[t]*j;\n\t\tp[t+1][0]=-1,p[t+1][1]=t,p[t+1][2]=j;\n\t\tdfs(t+1);\n\t}\n}\n\nint main() {\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(ans=i=0;i<8;i++) if (n&(1<<i)) ans++;\n\tfor(i=1;i<=n;i*=8) ans++;\n\ta[0]=1;\n\tdfs(0);\n\tprintf(\"%d\\n\",ans);\n\tfor(i=1;i<=ans;i++) {\n\t\tif (r[i][0]==-1) {\n\t\t\tprintf(\"lea e%cx, [%d*e%cx]\\n\",'a'+i,r[i][2],'a'+r[i][1]);\n\t\t} else if (r[i][2]==1) {\n\t\t\tprintf(\"lea e%cx, [e%cx + e%cx]\\n\",'a'+i,'a'+r[i][0],'a'+r[i][1]);\n\t\t} else {\n\t\t\tprintf(\"lea e%cx, [e%cx + %d*e%cx]\\n\",'a'+i,'a'+r[i][0],r[i][2],'a'+r[i][1]);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.923836389280677, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3c915a8410346a8ab26674807a3826f4", "bug_code_uid": "04e48b98518b827c6233855cc59437c1", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "17449e1cdc40e2228648746024174dd4", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x,a,b,c,i,j,k,p,q;\n    scanf(\"%d %d\",&n,&x);\n    int ara[200000];\n    int sum;\n    sum=j=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        sum=sum+ara[i];\n    }\n    if(sum<0)\n    {\n        sum=-sum;\n    }\n    //printf(\"sum = %d\\n\",sum);\n   for(i=1;;i++)\n   {\n       if(sum>=x)\n       {\n           sum=sum-x;\n      //     printf(\"sum= %d\\n\",sum);\n           j++;\n           if(sum==0)\n           {\n               break;\n           }\n        //   printf(\"j= %d\\n\",j);\n       }\n       else\n       {\n           j++;\n          // printf(\"j= %d\\n\",j);\n           break;\n       }\n   }\n   printf(\"%d\",j);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,x,a,b,c,i,j,k,p,q;\n    scanf(\"%d %d\",&n,&x);\n    int ara[200000];\n    int sum;\n    sum=j=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        sum=sum+ara[i];\n    }\n    if(sum<0)\n    {\n        sum=-sum;\n    }\n    //printf(\"sum = %d\\n\",sum);\n   for(i=1;;i++)\n   {\n       if(sum!=0)\n       {\n       if(sum>=x)\n       {\n           sum=sum-x;\n      //     printf(\"sum= %d\\n\",sum);\n           j++;\n           if(sum==0)\n           {\n               break;\n           }\n        // printf(\"j= %d\\n\",j);\n       }\n       else\n       {\n           j++;\n          // printf(\"j= %d\\n\",j);\n           break;\n       }\n       }\n       if(sum==0)\n       {\n           j=0;\n           break;\n       }\n   }\n   printf(\"%d\",j);\n}\n"}
{"similarity_score": 0.9706546275395034, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8cef09d9dd9024f05bde77945a74cacb", "bug_code_uid": "1d54fc97ce4f88693eba949a9b516374", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "b5a78297218aa7944e45b3940889f9b8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int n;\n    int count = 0;\n    scanf(\"%d\",&n);\n    int p,q;\n    while(n--){\n        scanf(\"%d%d\",p,q);\n        if(p > q)\n          count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    int n;\n    int count = 0;\n    scanf(\"%d\",&n);\n    int p,q;\n    while(n--){\n        scanf(\"%d%d\",&p,&q);\n        if(q-p >= 2)\n          count++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.4901315789473684, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "7fcde300f279cf0c6810288f971f8853", "bug_code_uid": "165fbe00374d6dfd6789cc461db5d71a", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "dfbfc6866d93680656ed5de1d8847544", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint sum=0,n,i=0,j;\n\tscanf(\"%d\",&n);\n\tint a[n],p[n];\n\tfor(;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a[i],&p[i]);\n\t}\n\tsum+=a[0]*p[0];\n\ta[0]=0;\n\ti=0;\n\tfor(;i<n;i++)\n\t{\n\t\tj=i+1;\n\t\tsum+=a[i]*p[i];\n\t\ta[i]=0;\n\t\tfor(;j<n;j++)\n\t\t{\n\t\t\tif(p[j]<p[i])\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(p[j]>p[i])\n\t\t\t{\n\t\t\t\tsum+=a[j]*p[i];\n\t\t\t\ta[j]=0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint min=1000,sum=0,n,i=0,j;\n\tscanf(\"%d\",&n);\n\tint a[n],p[n];\n\tfor(;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a[i],&p[i]);\n\t\tif(p[i]<min)\n\t\t{\n\t\t\tmin=p[i];\n\t\t}\n\t\tsum+=a[i]*min;\n\t} \n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9948293691830403, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "43ef0727057df5527cc47723104ee3fd", "bug_code_uid": "3c049b0f3ca7db7d7e50edacbdaeffef", "src_uid": "c6bbb16b1a3946ce38e67dc4824ecf89", "apr_id": "529b4ddb148d8c1a56def366df10f9ef", "difficulty": 1300, "tags": ["two pointers", "binary search", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint n,m,x,y,a[100000],b[100000],v[100000],i,j,k;\n\nint main(void) {\n\tscanf(\"%d %d %d %d\", &n, &m, &x, &y);\n\tfor (i=0; i<n; ++i) scanf(\"%d\", &a[i]);\n\tfor (i=0; i<m; ++i) scanf(\"%d\", &b[i]);\n\tfor (i=0; i<n; ++i) {\n\t\twhile (j<m && b[j]+x<a[i]) {\n\t\t\t++j;\n\t\t}\n\t\tif (a[i]-x<=b[j]&&b[j]<=a[i]+y) v[i]=++j;\n\t}\n\tfor (i=0; i<n; ++i) if (v[i]) ++k;\n\tprintf(\"%d\\n\", k);\n\tfor (i=0; i<n; ++i) if (v[i]) printf(\"%d %d\\n\", i+1, v[i]);\n\texit(EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint n,m,x,y,a[100000],b[100000],v[100000],i,j,k;\n\nint main(void) {\n\tscanf(\"%d %d %d %d\", &n, &m, &x, &y);\n\tfor (i=0; i<n; ++i) scanf(\"%d\", &a[i]);\n\tfor (i=0; i<m; ++i) scanf(\"%d\", &b[i]);\n\tfor (i=0; i<n; ++i) {\n\t\twhile (j<m && b[j]+x<a[i]) {\n\t\t\t++j;\n\t\t}\n\t\tif (j<m&&a[i]-x<=b[j]&&b[j]<=a[i]+y) v[i]=++j;\n\t}\n\tfor (i=0; i<n; ++i) if (v[i]) ++k;\n\tprintf(\"%d\\n\", k);\n\tfor (i=0; i<n; ++i) if (v[i]) printf(\"%d %d\\n\", i+1, v[i]);\n\texit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.8119079837618404, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "7203591ed5cc507084591a272bcd523f", "bug_code_uid": "003deea682351947b7882131005d0bb2", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "c6b72d6525d74a71902a0e0257fd3d09", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main(){\n\tint n, i, j, a[100001][3];\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i <= n; i++)\n\t    scanf(\"%d %d\", &a[i][1], &a[i][2]);\n\tfor (i = 1; i <= n; i++)\n\t    for (j = i + 1; j <= n; j++)\n\t        if (a[i][1] < a[j][1] && a[i][2] > a[j][2]){\n\t        \tprintf(\"Happy Alex\");\n\t        \treturn 0;\n\t        }\n\tprintf(\"Poor Alex\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main(){\n\tint n, i, j, a[100010][3];\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i <= n; i++){\n\t    scanf(\"%d %d\", &a[i][1], &a[i][2]);\n\t}\n\tfor (i = 1; i <= n; i++){\n\t    if (a[i][1] != a[i][2]){\n\t        printf(\"Happy Alex\");\n\t        return 0;\n\t    }\n\t}\n\tprintf(\"Poor Alex\");\n    return 0;\n}"}
{"similarity_score": 0.9986301369863013, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ceda33a61ae1de9efa0e17373197ec18", "bug_code_uid": "ae7d563c0c8b90bd9886341d6b978847", "src_uid": "55297e2a65144323af4d6abd6a6ef050", "apr_id": "bff0895396c4a737552ad8b05d3545f4", "difficulty": 1200, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid ms(int *a, int n){\n\tif(n<2)\n\t\treturn;\n\tms(a, n/2);\n\tms(a+n/2, n- n/2);\n\tint na=n/2, nb=n-n/2, c[n], *b=a+n/2, ia=0, i=0, ib=0;\n\twhile(ia<na && ib<nb)\n\t\tc[i++]= (a[ia]<b[ib]) ? a[ia++] : b[ib++];\n\twhile(ia<na)\n\t\tc[i++]= a[ia++];\n\twhile(ib<nb)\n\t\tc[i++]= b[ib++];\n\tfor(i=0; i<n; i++)\n\t\ta[i]=c[i];\n}\n\nint main(){\n\tint n,k;\n\tscanf(\"%d %d\",&n, &k);\n\tint a[n];\n\tfor(int i=0; i<n; i++)\n\t\tscanf(\"%d\", a+i);\n\tms(a,n);\n\tint x=0;\n\tif(n==k)\n\t\tx=a[k-1];\n\telse if(k==0)\n\t\tx=a[0];\n\telse\n\t\tif(a[k]!=a[k-1])\n\t\t\tx=a[k-1];\n\t\telse\n\t\t\tx=-1;\n\tif(x<1 || x>1e9)\n\t\tx=-1;\n\tprintf(\"%d\\n\", x);\n}\n\n/*\nif(n==k){\n\t\tprintf(\"%d\\n\", a[k-1]);\n\t\treturn 0;\n\t}\n\tif(a[k-1] ==a[k]){\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tif(a[k-1]<=0)\n\t\ta[k-1]=-1;*/", "fixed": "#include <stdio.h>\n\nvoid ms(int *a, int n){\n\tif(n<2)\n\t\treturn;\n\tms(a, n/2);\n\tms(a+n/2, n- n/2);\n\tint na=n/2, nb=n-n/2, c[n], *b=a+n/2, ia=0, i=0, ib=0;\n\twhile(ia<na && ib<nb)\n\t\tc[i++]= (a[ia]<b[ib]) ? a[ia++] : b[ib++];\n\twhile(ia<na)\n\t\tc[i++]= a[ia++];\n\twhile(ib<nb)\n\t\tc[i++]= b[ib++];\n\tfor(i=0; i<n; i++)\n\t\ta[i]=c[i];\n}\n\nint main(){\n\tint n,k;\n\tscanf(\"%d %d\",&n, &k);\n\tint a[n];\n\tfor(int i=0; i<n; i++)\n\t\tscanf(\"%d\", a+i);\n\tms(a,n);\n\tint x=0;\n\tif(n==k)\n\t\tx=a[k-1];\n\telse if(k==0)\n\t\tx=a[0]-1;\n\telse\n\t\tif(a[k]!=a[k-1])\n\t\t\tx=a[k-1];\n\t\telse\n\t\t\tx=-1;\n\tif(x<1 || x>1e9)\n\t\tx=-1;\n\tprintf(\"%d\\n\", x);\n}\n\n/*\nif(n==k){\n\t\tprintf(\"%d\\n\", a[k-1]);\n\t\treturn 0;\n\t}\n\tif(a[k-1] ==a[k]){\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tif(a[k-1]<=0)\n\t\ta[k-1]=-1;*/"}
{"similarity_score": 0.079155672823219, "equal_cnt": 12, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "e3b37cb6f74932614f34a608bee78a0b", "bug_code_uid": "3783d270f8def467e9e7a300a6bc2787", "src_uid": "b4fcfedc8e76afd0043b026eb3132582", "apr_id": "fc8bd27652b7513a8546c1e62b48259f", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    int n;\r\n    int r;\r\n    r=0;\r\n    scanf(\"%d\",&t);\r\n    for(;t>=1;t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        long long int a[n];\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&a[j]);\r\n        }\r\n        int maxf=0;\r\n        /*if(n==1)\r\n        {\r\n            printf(\"%d\\n\",0);\r\n\r\n        }\r\n        else\r\n        {*/\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            int count=0;\r\n            \r\n            \r\n            for(int k=0;k<n;k++)\r\n            \r\n                {\r\n    \r\n                    if(a[k]==a[j])\r\n                   { count=count+1;}\r\n                \r\n                \r\n               }\r\n               if(maxf<=count)\r\n                {\r\n                    maxf=count;\r\n                }\r\n        }\r\n        for(;maxf!=n;)\r\n        {\r\n            if((n-maxf)<=maxf)\r\n            {\r\n                r=(r+1+n-maxf);\r\n                maxf=n;\r\n            }\r\n            else{\r\n                r=(1+maxf);\r\n                maxf=(2*maxf);}\r\n        }\r\n      \r\n        printf(\"%d\\n\",r);\r\n   \r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmp(const void*a,const void*b){\r\n    return *(int*)a-*(int*)b;\r\n}\r\nint ans(int n){\r\n    int a[100005],i,s1,s;\r\n\t    for(i=0;i<n;i++){\r\n\t        scanf(\"%d\",&a[i]);\r\n\t    }\r\n\t    qsort(a,n,sizeof(int),cmp);\r\n\t    s1=1;\r\n\t    s=1;\r\n\t    for(i=1;i<n;i++){\r\n\t        if(a[i]==a[i-1]) s++;\r\n\t        else s=1;\r\n\t        if(s>s1) s1=s;\r\n\t    }\r\n\t    return s1;\r\n}\r\nint main()\r\n{\r\n\tint t,n,s1,s2,s;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t    scanf(\"%d\",&n);\r\n\t    s1=ans(n);\r\n\t    s2=n-s1;\r\n\t    s=0;\r\n\t    while(s2){\r\n\t        s++;\r\n\t        if(s1>=s2){\r\n\t            s+=s2;\r\n\t            s2=0;\r\n\t        }\r\n\t        else{\r\n\t            s+=s1;\r\n\t            s2-=s1;\r\n\t            s1*=2;\r\n\t        }\r\n\t    }\r\n\t    printf(\"%d\\n\",s);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.4964426877470356, "equal_cnt": 26, "replace_cnt": 11, "delete_cnt": 10, "insert_cnt": 5, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "a22541d80ab17ce208a979751566e333", "bug_code_uid": "457581c9ed4bc701d5c193a37dc3707c", "src_uid": "ee8ca9b2c6104d1ff9ba1fc39e9df277", "apr_id": "3dcb5c82a27f3d01f5c66c11cf65d98d", "difficulty": 1100, "tags": ["dp", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//codeforces-1472C.c\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--)\r\n    {\r\n        int size;\r\n        scanf(\"%d\", &size);\r\n        int *arr = malloc(sizeof(int) * size);\r\n\r\n        for(int i = 0; i < size; i++)\r\n            scanf(\" %d\", &arr[i]);\r\n        \r\n        int max = 0;\r\n\r\n        for(int i = 0; i < size; i++)\r\n        {\r\n            int pos = i, idx = i;\r\n\r\n            while(pos < size)\r\n            {\r\n                pos += arr[idx];\r\n                idx = pos;\r\n            }\r\n\r\n            max = (max < pos) ? pos - i : max;\r\n        }\r\n\r\n        printf(\"%d\\n\", max);\r\n\r\n        free(arr);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "//codeforces-1472C.c\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\nint main() \r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    \r\n    while(t--)\r\n    {\r\n        int a[200000],i,max=-1;\r\n        scanf(\"%d\",&n);\r\n        \r\n        for(i=1;i<=n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        \r\n        for(i=n;i>=1;i--)\r\n        {\r\n            if(i+a[i]<=n)\r\n            {\r\n                a[i]=a[i]+a[a[i]+i];\r\n            }\r\n            \r\n            if(a[i]>max)\r\n            {\r\n                max=a[i];\r\n            }\r\n        }\r\n        printf(\"%d\\n\",max);\r\n    }\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.7379784102060843, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "ff71732daae86d8b4766a0eb8de50524", "bug_code_uid": "11829cfac76c3abd754de0fee1b091d5", "src_uid": "0b9be2f076cfa13cdc76c489bf1ea416", "apr_id": "57b4a102640735edefdcd57ba931c967", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nchar S[200002];\r\nint main()\r\n{\r\n\tint i;\r\n\tint T;\r\n\tint c;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tscanf(\"%s\", S);\r\n\t\tif (S[0] == 'A')\r\n\t\t{\r\n\t\t\tc = 0;\r\n\t\t\tfor (i = 0; S[i]; i++)\r\n\t\t\t{\r\n\t\t\t\tif (S[i] == 'A')\r\n\t\t\t\t{\r\n\t\t\t\t\tc++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tc--;\r\n\t\t\t\t\tif (c < 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (S[i])\r\n\t\t\t{\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (S[i - 1] == 'B')\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nchar S[200002];\r\nint main()\r\n{\r\n\tint i;\r\n\tint T;\r\n\tint c;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tscanf(\"%s\", S);\r\n\t\tc = 0;\r\n\t\tfor (i = 0; S[i]; i++)\r\n\t\t{\r\n\t\t\tif (S[i] == 'A')\r\n\t\t\t{\r\n\t\t\t\tc++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tc--;\r\n\t\t\t\tif (c < 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (S[i])\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (S[i - 1] == 'B')\r\n\t\t\t{\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.977110157367668, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6083d4d29300f70a0cef3d797bcb8085", "bug_code_uid": "a6d4331445d608df63d15c4087c8c6c6", "src_uid": "0eab9d2dd60d38f68d49f30cff918fce", "apr_id": "8bbe9d3b76860fe6de439747fccf65cd", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint a[501][501],b[501][501];\nint t,n,m,line=0;\nint main()\n{\n\t\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\tscanf(\"%d\",&a[i][j]);\n\t\tfor(int i=1;i<=m;++i)\n\t\tfor(int j=1;j<=n;++j)\n\t\tscanf(\"%d\",&b[i][j]);  //\u8f93\u5165 \n\t\t\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\t\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tif(a[i][j]==b[1][1])\n\t\t\t{\n\t\t\t\tline=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif(line)\n\t\t\tbreak;\n\t}\n\t\t\n\t\t\n\t\t\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tfor(int j=1;j<=n;++j)\n\t\t\t{\n\t\t\t\tif(a[j][line]==b[1][i])\n\t\t\t\t{\n\t\t\t\t\tfor(int q=1;q<=m;++q)\n\t\t\t\t\tprintf(\"%d \",a[j][q]);\n\t\t\t\t\tprintf(\"\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n   return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint a[501][501],b[501][501];\nint t,n,m;\nint main()\n{\n\t\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\tscanf(\"%d\",&a[i][j]);\n\t\tfor(int i=1;i<=m;++i)\n\t\tfor(int j=1;j<=n;++j)\n\t\tscanf(\"%d\",&b[i][j]);  //\u8f93\u5165 \n\t\tint line=0;\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\t\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tif(a[i][j]==b[1][1])\n\t\t\t{\n\t\t\t\tline=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif(line)\n\t\t\tbreak;\n\t}\n\t\t\n\t\t\n\t\t\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tfor(int j=1;j<=n;++j)\n\t\t\t{\n\t\t\t\tif(a[j][line]==b[1][i])\n\t\t\t\t{\n\t\t\t\t\tfor(int k=1;k<=m;++k)\n\t\t\t\t\tprintf(\"%d \",a[j][k]);\n\t\t\t\t\tprintf(\"\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n   return 0;\n}\n"}
{"similarity_score": 0.984375, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "20ae5fe798433310552ce330e4f754d9", "bug_code_uid": "4d794731b80b6be933bdc9e48ccaf9d6", "src_uid": "4322861935ca727b0de8556849bc5982", "apr_id": "b9aa0ea79ba60a860ff3240c768f4dc6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n      int long long a,b,c,s;\r\n      scanf(\"%lld %lld %lld\",&a,&b,&c);\r\n        s=a+2*b+3*c;\r\n        printf(\"%lld\\n\",s%(a+b+c));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n      int long long a,b,c,s;\r\n      scanf(\"%lld %lld %lld\",&a,&b,&c);\r\n        s=a+2*b+3*c;\r\n        printf(\"%lld\\n\",s%2);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n"}
{"similarity_score": 0.11884550084889643, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "33c3ca8f04d1abd0a630502816c55452", "bug_code_uid": "a8111ea54efed85f89db47ee4947b2b1", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "accbec45fe8e16121256c1c694757caa", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint descending (int a[],int n)\n{\n int i,j,temp;\n for(i=0;i<n;i++)\n {\n     for(j=i+1;j<n;j++)\n     {\n          if(a[i]<a[j])\n          {\n              temp=a[j];\n              a[j]=a[i];\n              a[i]= temp;\n          }\n     }\n }\n  return a[i];\n}\n\nint main()\n{\n    int n,t,a[n][2],b[n],i,j;\n    scanf(\"%d%d\",&n,&t);\n    for(i=0;i<n;i++)\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n        \n    for(i=0,j=0;i<n;i++)\n    {\n        if(a[i][1]>t)\n        {\n         b[j]=a[i][0]-(a[i][1]-t);\n         j++;\n        }\n        else\n        {\n         b[j]=a[i][0];\n         j++;\n        }\n    \n    }\n    descending (b,j);\n    printf(\"%d\",b[0]);\n \n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int z,t,m=-1000000000,n=-1000000000,c,i,j,x,y;\n    scanf(\"%d%d\",&z,&t);\n    for(i=0,j=0;i<z;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        if(y>t)\n        {\n         if(m<x-(y-t)||i==0)\n         m=x-(y-t);\n        }\n        else\n        {\n           if(n<x||j==0)\n           {\n            n=x;\n            j++;\n           }\n        }\n    }\n    \n    if(m>n)\n    printf(\"%d\",m);\n    else\n    printf(\"%d\",n);\n \n    return 0;\n}"}
{"similarity_score": 0.5169886742171885, "equal_cnt": 14, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "bc97869ea21e358e33099531e57d7a59", "bug_code_uid": "390d126ee6b853e12941cf6d33315310", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "efd8d5e3f5655d33baaba9c34caa36b0", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"math.h\"\n\n\nint main(int argc, char* argv[])\n{\n    long *a;\n    int n;\n    \n    scanf(\"%d\",&n);\n    a=(long *)malloc(sizeof (long)*n);\n    int i,j;\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&a[i]);\n\n    for(i=0;i<n;i++){\n        long min=1000000000;\n        long max=0;\n        for(j=0;j<n;j++){\n            if(abs(a[i]-a[j])>max){\n                max=abs(a[i]-a[j]);\n            }\n            if(abs(a[i]-a[j])<min && abs(a[i]-a[j])>0){\n                min=abs(a[i]-a[j]);\n            }\n        }\n        printf(\"%ld %ld\\n\",min,max);\n    }\n    return 0;\n}", "fixed": "#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"math.h\"\n\n\nint main(int argc, char* argv[])\n{\n    long *a;\n    int n;\n    long max,min;\n    \n    scanf(\"%d\",&n);\n    a=(long *)malloc(sizeof (long)*n);\n    int i;\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&a[i]);\n\n    for(i=0;i<n;i++){\n        if(i==0){\n            min=abs(a[i]-a[i+1]);\n            max=a[n-1]-a[0];\n        } \n        if(i==n-1){\n            min=abs(a[i]-a[i-1]);\n            max=a[n-1]-a[0];\n        }\n        if(i!=0 && i!=n-1) {\n\n            if(abs(a[i]-a[i-1])<abs(a[i]-a[i+1])){\n                min=abs(a[i]-a[i-1]);\n            }\n            else \n                min=abs(a[i]-a[i+1]);\n \n            if(abs(a[i]-a[0])<abs(a[i]-a[n-1])){\n                max=abs(a[i]-a[n-1]);\n            }\n            else \n                max=abs(a[i]-a[0]);\n        }\n            printf(\"%ld %ld\\n\",min,max);\n    }\n    free(a);\n    return 0;\n}"}
{"similarity_score": 0.9980430528375733, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ff3e6feb221fce5c42308750966c0188", "bug_code_uid": "ecf315dc028c83354477005ecd91f5cc", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "1ea584371e1356e5561a8dd28528f80c", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,n,count=0;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t {  count=0;\n\t \tscanf(\"%d\",n);\n\t \twhile(n%6==0)\n\t \t{n/=6;\n\t \tcount++;\n\t\t }\n\t\t while(n%3==0)\n\t\t {n/=3;\n\t\t count+=2;\n\t\t }\n\t\t if(n!=1)\n\t\t  count=-1;\n\t\t printf(\"%d\\n\",count);\n\t }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,n,count=0;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t {  count=0;\n\t \tscanf(\"%d\",&n);\n\t \twhile(n%6==0)\n\t \t{n/=6;\n\t \tcount++;\n\t\t }\n\t\t while(n%3==0)\n\t\t {n/=3;\n\t\t count+=2;\n\t\t }\n\t\t if(n!=1)\n\t\t  count=-1;\n\t\t printf(\"%d\\n\",count);\n\t }\n}"}
{"similarity_score": 0.9341317365269461, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aca0c9ae6624ee3272a164b71f39f169", "bug_code_uid": "5becaed77ac38bf809278b6b492afb6e", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "cf058739ae130126b0c14deb20bc3fe6", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,m,k,a[1000001],c[1000001],b[300001][2],i,d=1,l=0,j,x=0;\n    scanf(\"%lld %lld %lld\",&n,&m,&k);\n    for(i=1;i<=1000001;i++)\n    {a[i]=0;}\n    for(i=1;i<=m;i++)\n    {scanf(\"%lld\",&c[i]);}\n    for(i=1;i<=m;i++)\n    {a[c[i]]=1;}\n    for(i=1;i<=k;i++)\n    {scanf(\"%lld %lld\",&b[i][0],&b[i][1]);}\n    for(i=1;i<=m;i++)\n    {if(a[i]==1)\n     {printf(\"1\");\n      l++;\n      break;\n     }\n    }\n    if(l==0)\n    {\n      for(i=1;i<=k;i++)\n     { if(b[i][0]==d)\n       {d=b[i][1];}\n      else\n      {if(b[i][1]==d)\n       {d=b[i][0];}\n      }\n      if(a[d]==1)\n      {x++;}\n      if(x!=0)\n      {break;}\n     }\n     printf(\"%lld\",d);\n    }\n    return 0;\n}\n       \n       \n       \n       \n       \n       \n       \n       \n       \n       ", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,m,k,a[1000001],c[1000001],b[300001][2],i,d=1,l=0,j,x=0;\n    scanf(\"%lld %lld %lld\",&n,&m,&k);\n    for(i=1;i<=1000001;i++)\n    {a[i]=0;}\n    for(i=1;i<=m;i++)\n    {scanf(\"%lld\",&c[i]);}\n    for(i=1;i<=m;i++)\n    {a[c[i]]=1;}\n    for(i=1;i<=k;i++)\n    {scanf(\"%lld %lld\",&b[i][0],&b[i][1]);}\n    if(a[1]==1)\n    {l++;\n     printf(\"1\");\n    }\n    if(l==0)\n    {\n      for(i=1;i<=k;i++)\n     { if(b[i][0]==d)\n       {d=b[i][1];}\n      else\n      {if(b[i][1]==d)\n       {d=b[i][0];}\n      }\n      if(a[d]==1)\n      {x++;}\n      if(x!=0)\n      {break;}\n     }\n     printf(\"%lld\",d);\n    }\n    return 0;\n}\n       \n       \n       \n       \n       \n       \n       \n       \n       \n       "}
{"similarity_score": 0.6645865834633385, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c156413c84c9c3a139d5aebbe74386c0", "bug_code_uid": "b3361ef44f11105f81f0b4a6156d5a61", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "4e094383c3d4983104392b769dae8260", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint f(int a[],int m,int x)\n{\n\n\nif(a[m]>x)\nreturn 1;\nelse\nreturn 0;\n\n}\nint bs(int a[],int x,int n)\n{\n\nint l=0,h=n-1;\nwhile(l<h)\n{\nint m=l+(h-l)/2;\n\nif(f(a,m,x)==1)\n\nh=m;\nelse\nl=m+1;\n\n\n\n}\nif(a[n-1]==x)\nreturn l+1;\nelse return l;\n\n}\nint main()\n{int n,k,j,i;\nscanf(\"%d\",&n);\nint a[100000];\n\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\n\n}\nscanf(\"%d\",&j);\nbubbleSort(a,n);\nwhile(scanf(\"%d\",&k)!=EOF)\n{\n\nprintf(\"%d\\n\",bs(a,k,n));\n\n}\n\nreturn 0;}\nvoid bubbleSort(int arr[], int n)\n{\n   int i, j;\n   for (i = 0; i < n-1; i++)\n\n\n       for (j = 0; j < n-i-1; j++)\n           if (arr[j] > arr[j+1])\n              swap(&arr[j], &arr[j+1]);\n}\nvoid swap(int *xp, int *yp)\n{\n    int temp = *xp;\n    *xp = *yp;\n    *yp = temp;\n}\n", "fixed": "#include<stdio.h>\n\n\nint f(int a[],int m,int x)\n{\n\n\nif(a[m]>x)\nreturn 1;\nelse\nreturn 0;\n\n}\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint bs(int a[],int x,int n)\n{\n\nint l=0,h=n-1;\nwhile(l<h)\n{\nint m=l+(h-l)/2;\n\nif(f(a,m,x)==1)\n\nh=m;\nelse\nl=m+1;\n\n\n\n}\nif(x>=a[n-1])\nreturn l+1;\nelse return l;\n\n}\nint main()\n{int n,k,j,i;\nscanf(\"%d\",&n);\nint a[100000];\n\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\n\n}\nscanf(\"%d\",&j);\n qsort(a, n, sizeof(int), cmpfunc);\nwhile(j--)\n{\nscanf(\"%d\",&k);\nprintf(\"%d\\n\",bs(a,k,n));\n\n}\n\nreturn 0;}\n\n"}
{"similarity_score": 0.37443744374437443, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "3cbeef3612938a92b22417cf96c88f1d", "bug_code_uid": "b48b143da339a15e58e6a14d13f2af9c", "src_uid": "bc532d5c9845940b5f59485394187bf6", "apr_id": "066ddc5b15d0ea627dc108add1907934", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int i,j,n,m,count=0;\n    scanf(\"%d %d\",&n,&m);\n    long long int array[n],array1[m];\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&array[i]);\n    for(i=0;i<m;i++)\n        scanf(\"%lld\",&array1[i]);\n    for(i=0;i<m;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if((array1[i]+array[j])%2!=0&&array[j]!=-1)\n            {\n                count++;\n                array[j]=-1;\n                break;\n            }\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int i,j,n,m,count=0,even1=0,odd1=0,even2=0,odd2=0,min1,min2;\n    scanf(\"%d %d\",&n,&m);\n    long long int array[n],array1[m];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&array[i]);\n        if(array[i]%2==0)\n            even1++;\n        else\n            odd1++;\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&array1[i]);\n        if(array1[i]%2==0)\n            even2++;\n        else\n            odd2++;\n    }\n    min1=even1<odd2?even1:odd2;\n    count=min1;\n    min2=even2<odd1?even2:odd1;\n    count+=min2;\n    printf(\"%d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9864636209813875, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "813a1d9c5d4d07089f34b8d2037526a5", "bug_code_uid": "85609b70f719a64f4f1fe7764d79d6c2", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "c483d607ecf95c5f2d293c3d0247857d", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, k, i, j, yer, t, ans, h[100], cvp[100];\nchar x;\n\nint main () {\n\tscanf(\"%d %d\",&n ,&k);\n\tfor(i = 0 ; i < n ; i++){\n\t\tscanf(\" %c\",&x);\n\t\th[x - 'A']++;\n\t}\n\tfor(i = 0 ; i < 50 ; i++)\n\t\tif(h[i])\n\t\t\tcvp[yer++] = h[i];\n\tfor(i = 0 ; i < yer ; i++){\n\t\tfor(j = 1 ; j < yer ; j++){\n\t\t\tif(cvp[j-1] < cvp[j]){\n\t\t\t\tt = cvp[j];\n\t\t\t\tcvp[j] = cvp[j-1];\n\t\t\t\tcvp[j-1] = t;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0 ; i < yer ; i++){\n\t\tif(k >= cvp[i]){\n\t\t\tans += cvp[i]*cvp[i];\n\t\t\tk -= cvp[i];\n\t\t}\n\t\telse if(k < cvp[i]){\n\t\t\tans += k*k;\n\t\t\tk = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nlong long int n, k, i, j, yer, t, ans, h[100], cvp[100];\nchar x;\n\nint main () {\n\tscanf(\"%lld %lld\",&n ,&k);\n\tfor(i = 0 ; i < n ; i++){\n\t\tscanf(\" %c\",&x);\n\t\th[x - 'A']++;\n\t}\n\tfor(i = 0 ; i < 50 ; i++)\n\t\tif(h[i])\n\t\t\tcvp[yer++] = h[i];\n\tfor(i = 0 ; i < yer ; i++){\n\t\tfor(j = 1 ; j < yer ; j++){\n\t\t\tif(cvp[j-1] < cvp[j]){\n\t\t\t\tt = cvp[j];\n\t\t\t\tcvp[j] = cvp[j-1];\n\t\t\t\tcvp[j-1] = t;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0 ; i < yer ; i++){\n\t\tif(k >= cvp[i]){\n\t\t\tans += cvp[i]*cvp[i];\n\t\t\tk -= cvp[i];\n\t\t}\n\t\telse if(k < cvp[i]){\n\t\t\tans += k*k;\n\t\t\tk = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.935659760087241, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e6ac8546a6e635c0bb36eb961917e843", "bug_code_uid": "55e06b85d42f10656643f898ef166faa", "src_uid": "b4341e1b0ec0b7341fdbe6edfe81a0d4", "apr_id": "395eab40fb1a1d33bf94ac820015935f", "difficulty": 1400, "tags": ["implementation", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint min (int a, int b)\n{\n\treturn a < b ? a : b;\n}\n\nint main()\n{\n\tint n, i, k, r[10] = { 0 }, r10 = 0, total = 0;\n\n\tscanf (\"%d %d\", &n, &k);\n\n\tfor (i = 0; i < n; i++) {\n\t\tint t;\n\t\tscanf (\"%d\", &t);\n\t\ttotal += t / 10;\n\t\tr[t % 10]++;\n\t\tif (t % 10 == 0)\n\t\t\tr10 += t / 10;\n\t}\n\n\tfor (i = 9; i > 0 && k > 0; i--) {\n\t\tint t = min (k, r[i] * (10 - i));\n\t\tk -= t;\n\t\ttotal += t / (10 - i);\n\t}\n\n\ttotal += min (r[0] * 10 - r10, k / 10);\n\n\tprintf (\"%d\", total);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint min (int a, int b)\n{\n\treturn a < b ? a : b;\n}\n\nint main()\n{\n\tint n, i, k, r[10] = { 0 }, total = 0;\n\n\tscanf (\"%d %d\", &n, &k);\n\n\tfor (i = 0; i < n; i++) {\n\t\tint t;\n\t\tscanf (\"%d\", &t);\n\t\ttotal += t / 10;\n\t\tr[t % 10]++;\n\t}\n\n\tfor (i = 9; i > 0 && k > 0; i--) {\n\t\tint t = min (k, r[i] * (10 - i));\n\t\tk -= t;\n\t\ttotal += t / (10 - i);\n\t}\n\n\ttotal += min (n * 10 - total, k / 10);\n\n\tprintf (\"%d\", total);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.7051070840197694, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "34eae71c505075887ee930d80aec9f7e", "bug_code_uid": "039d2796b7771809f9164c03c4247124", "src_uid": "816907d873bce3573ce1e5ae3f494768", "apr_id": "f066cb7b85e297e3862c5e8e4c6ca3a7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\n#include<testlib.h>\n\nint main()\n{\n    int t,k=0,i,j,m;\n    char a[1000],b;\n\n    scanf(\"%d\\n\",&t);\n\n\n    for(i=1;i<=t;i++)\n    {\n\n            scanf(\"%s\",&a);\n            //printf(\"k\");\n\n        //for(m=0;a[m]!='\\0';m++);\n        m=strlen(a);\n       // printf(\"%d\",m);\n\n\n\n\n            if(a[m-1]=='o')\n            {\n                printf(\"FILIPINO\\n\");\n\n            }\n            if(a[m-3]=='a' || a[m-3]=='e')\n            {\n                printf(\"JAPANESE\\n\");\n\n            }\n\n            if(a[m-1]=='a')\n            {\n                printf(\"KOREAN\\n\");\n\n            }\n\n\n    }\n   return -1;\n}\n", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\n\nint main()\n{\n    int t,k=0,i,j,m;\n    char a[1000],b;\n\n    scanf(\"%d\\n\",&t);\n\n\n    for(i=1;i<=t;i++)\n    {\n\n            scanf(\"%s\",&a);\n\n        m=strlen(a);\n\n\n\n\n\n            if(a[m-1]=='o')\n            {\n                printf(\"FILIPINO\\n\");\n\n            }\n            if(a[m-1]=='a')\n            {\n                printf(\"KOREAN\\n\");\n\n            }\n\n\n\n\n            if((a[m-3]=='a' || a[m-3]=='e') && (a[m-1]!='o'))\n            {\n                printf(\"JAPANESE\\n\");\n\n            }\n\n\n\n\n    }\n   return 0;\n}\n"}
{"similarity_score": 0.13283674736188703, "equal_cnt": 27, "replace_cnt": 18, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "04cac8c0dfbd3c6972cadd2470fc200b", "bug_code_uid": "2535755da7aa06de95a5a9e64e2ee0f1", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "002e24fcf85d702276f42169de228142", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n#include <limits.h>\nusing namespace std;\n\n#define N 102\nvoid Swap(int a,int b){\n    int temp;\n    temp=a;\n    a=b;\n    b=temp;\n}\n\nint main(){\n    int soldiers[N];\n    int n;    /*n\u4ee3\u8868\u58eb\u5175\u4eba\u6570*/\n    int i;\n    int Max=INT_MIN;\n    int Min=INT_MAX;\n    int pMax;    /*\u4ee3\u8868\u6700\u5927\u503c\u7684\u6700\u524d\u4f4d\u7f6e*/\n    int pMin;    /*\u4ee3\u8868\u6700\u5c0f\u503c\u7684\u6700\u540e\u4f4d\u7f6e*/\n    int Count;   /*\u4ee3\u8868\u6b65\u6570*/\n    while(cin>> n){\n        for(i = 0; i < n ; i++){\n            cin>> soldiers[i] ;\n        }\n        for( i=0; i<n; i++){\n            if(soldiers[i]<=Min){\n                Min=soldiers[i];\n                pMin=i;\n            }\n            if(soldiers[i]>Max){\n                Max=soldiers[i];\n                pMax=i;\n            }\n        }\n        if(pMax<pMin){\n            Count=pMax+(n-1-pMin);\n        }\n        else{\n            Count=(n-1-pMin)+pMax-1;\n        }\n        cout<< Count << endl;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int n,a[200],i,max,min,maxi,mini,x,y,temp,sum=0;\n    scanf (\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf (\"%d\",&a[i]);\n    max=a[0];\n    maxi=0;\n    min=a[0];\n    mini=0;\n    for (i=0;i<n;i++)\n    {\n        if (a[i]>max)\n        {\n            max=a[i];\n            maxi=i;\n        }\n        if (a[i]<=min)\n        {\n            min=a[i];\n            mini=i;\n        }\n    }\n    for (x=mini;x<n-1;x++)\n    {\n        temp=a[x+1];\n        a[x+1]=a[x];\n        a[x]=temp;\n        sum++;\n\n    }\n     for (y=maxi;y>0;y--)\n     {\n         temp=a[y-1];\n        a[y-1]=a[y];\n        a[y]=temp;\n        sum++;\n     }\n    if (maxi>mini)\n       sum--;\n    printf (\"%d\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9963302752293578, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7e7bfc0e2e492cb83a3fc5da598c6a7c", "bug_code_uid": "7f65274cc9b96f78e59c74964b02996d", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "41e5ea1ffbd55c78e4469e0547abd920", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cmpfunc(const void *a, const void *b)\n{\n    return(*(int*)a-*(int*)b);\n}\nint main(){\nint n;\n\nscanf(\"%d\", &n);\nint m=n*n;\nint count1[50]={0},count2[50]={0};\nint i,h,v,arr[2500]={0},j=0;\nfor(i=0;i<m;i++)\n{\n    scanf(\"%d %d\", &h, &v);\n    if(count1[h]!=0||count2[v]!=0)\n        continue;\n    else if(count1[h]==0&&count2[v]==0)\n        {\n        arr[j]=i+1;\n        j++;\n    }\n    count1[h]++;\n    count2[v]++;\n}\nqsort(arr,j,sizeof(int),cmpfunc);\nfor(i=0;i<=j;i++)\n{\n    if(arr[i]!=0)\n    printf(\"%d \",arr[i] );\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint cmpfunc(const void *a, const void *b)\n{\n    return(*(int*)a-*(int*)b);\n}\nint main(){\nint n;\n\nscanf(\"%d\", &n);\nint m=n*n;\nint count1[51]={0},count2[51]={0};\nint i,h,v,arr[2500]={0},j=0;\nfor(i=0;i<m;i++)\n{\n    scanf(\"%d %d\", &h, &v);\n    if(count1[h]!=0||count2[v]!=0)\n        continue;\n    else if(count1[h]==0&&count2[v]==0)\n        {\n        arr[j]=i+1;\n        j++;\n    }\n    count1[h]++;\n    count2[v]++;\n}\nqsort(arr,j,sizeof(int),cmpfunc);\nfor(i=0;i<=j;i++)\n{\n    if(arr[i]!=0)\n    printf(\"%d \",arr[i] );\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.44958924570575054, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "1e0461f3a2323d86db3bf4f929a7bf2e", "bug_code_uid": "d34bec6118481c048c244146c35c9b0f", "src_uid": "43041076ddd0bbfac62cd4abf4536282", "apr_id": "4092b9968dbc38d1fd2523b3905d961c", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main()\r\n{\r\n    long long int d,n,i,j,k,l,m,e;\r\n    scanf(\"%lld\",&n);\r\n    long long int a[n],b[n],c[n],input[n],flag[n];\r\n\r\n    for(l=0;l<n;l++)\r\n        scanf(\"%lld\",&input[l]);\r\n\r\n    for(m=0;m<n;m++)\r\n\r\n    {\r\n        for(i=0;i<input[m];i++)\r\n    {\r\n        for(j=0;j<input[m];j++)\r\n        {\r\n            for(k=0;k<input[m];k++)\r\n                {\r\n                   e=(i^j)+(j^k)+(k^i);\r\n                    if(e==input[m])\r\n                    {\r\n                        a[m]=i;\r\n                        b[m]=j;\r\n                        c[m]=k;\r\n                        flag[m]=1;\r\n                        goto ab;\r\n\r\n                    }\r\n                    flag[m]=0;\r\n                }\r\n        }\r\n    }\r\n    ab:;\r\n        }\r\n\r\n    for(i=0;i<n;i++)\r\n    {\r\n        if(flag[i])\r\n            printf(\"%lld %lld %lld\\n\",a[i],b[i],c[i]);\r\n        else\r\n            printf(\"-1\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main()\r\n{\r\n    long long int d,n,i,j,k,l,m,e;\r\n    scanf(\"%lld\",&n);\r\n    long long int input[n];\r\n\r\n    for(l=0;l<n;l++)\r\n        scanf(\"%lld\",&input[l]);\r\n\r\n    for(l=0;l<n;l++)\r\n    {\r\n        if(input[l]%2==1)\r\n            printf(\"-1\\n\");\r\n        else\r\n            printf(\"0 0 %lld\\n\",input[l]/2);\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.4425956738768719, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "487578f8aad8830fd1c0070126062d30", "bug_code_uid": "af3e478eb3a8cea6956c2147cf8b4a44", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "62b7104c4b17ada92293d86c0c5478f6", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint convert_d2b_xor(int arr[], int n,int x)\n{\n\tint count=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=i+1;j<n;j++)\n\t\t{\n\t\t\tint num=arr[i] ^ arr[j];\n\t\t\tif(num == x)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nmain()\n{\n\tint n,x;\n\tscanf(\"%d %d\\n\",&n,&x);\n\tint arr[n];\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\tprintf(\"%d\",convert_d2b_xor(arr,n,x));\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nmain()\n{\n\tint n,x,num;\n\tlong long int count=0;\n\tscanf(\"%d %d\\n\",&n,&x);\n\tint arr[200000];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&num);\n\t\tcount+=arr[num ^ x];\n\t\tarr[num]++;\n\t}\n\tprintf(\"%I64d\",count);\n\treturn 0;\n}"}
{"similarity_score": 0.2541436464088398, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "ef952e6e6fe22bb870f4798ac41f0982", "bug_code_uid": "f3ba841b4e310a96b78c2bf5221acffb", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "6fee4e73890817dbd3dc2ef80e478ac5", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  long long int t;\n  scanf(\"%I64d\",&t);\n  while(t>0)\n  {\n    long long int n,v,l,r,k1,k2;\n    scanf(\"%I64 %I64 %I64 %I64\",&n,&v,&l,&r);\n    if(n%v==0)\n    {\n      k1=(n-1)/v +1;\n    }\n    else\n    {\n      k1=(n-1)/v;\n    }\n    if(r%v==0||l%v==0)\n    {\n      k2=(r-l)/v +1;\n    }\n    else\n   {\n      k2=(r-l)/v;\n    }\n    printf(\"%I64\\n\",k1-k2);\n t--;\n\n\n  }", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b,c,d;\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        a=a/b;\n        int cnt=0;\n        if(c%b==0)\n            cnt=d/b-c/b+1;\n        else\n            cnt=d/b-c/b;\n      \n        printf(\"%d\\n\",abs(cnt-a));\n\n    }\n}\n"}
{"similarity_score": 0.7150837988826816, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "52cf1fdae80a4f25a67d3a25a01b10fc", "bug_code_uid": "30d1d3edf3d8036a4672a9c865654b9e", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "c9f91589e2e55698f2081a8b001551f9", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c=1,d=0;\n    int a[100];\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    for(i=0; i<n-1; i++)\n    {\n        if(a[i]<=a[i+1])\n        {\n            c++;\n        }\n        else\n        {\n           if(c>d)\n           {\n             d=c;\n           }\n            c=1;\n        }\n    }\n    if(c>d)\n        printf(\"%d\",c);\n    else\n        printf(\"%d\",d);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,c=1,d=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0; i<n-1; i++)\n    {\n        if(a[i]<=a[i+1])\n        {\n            c++;\n        }\n        else\n        {\n           if(c>=d)\n           {\n             d=c;\n\n           }\n           c=1;\n\n        }\n    }\n    if(c>d)\n        printf(\"%d\",c);\n    else\n        printf(\"%d\",d);\n    return 0;\n}\n"}
{"similarity_score": 0.9956331877729258, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cab771316c1601e51b1836ba41de70f2", "bug_code_uid": "afd596131cad4e6d605a7ba85a6c31c0", "src_uid": "046900001c7326fc8d890a22fa7267c9", "apr_id": "ea8a19d29cfb453472a0d64c87b327c1", "difficulty": 900, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t,len_s,i,count_1=0,count_0=0;\n\tchar s[101];\n\tscanf(\"%d\",&t);\n\twhile(t>0)\n\t{\n\t\tcount_1=0;\n\t\tcount_0=0;\n\t\tscanf(\"%s\",s);\n\t\tlen_s=strlen(s);\n\t\tfor(i=0;i<len_s;i++)\n\t\t{\n\t\t\tif(s[i]=='1') count_1++;\n\t\t\telse count_0++;\n\t\t}\n\t\tif(count_1<count_0)\n\t\t{\n\t\t\tif(count_1%2!=0) printf(\"DA\");\n\t\t\telse printf(\"DET\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(count_0%2!=0) printf(\"DA\");\n\t\t\telse printf(\"DET\");\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tt--;\n\t}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t,len_s,i,count_1=0,count_0=0;\n\tchar s[101];\n\tscanf(\"%d\",&t);\n\twhile(t>0)\n\t{\n\t\tcount_1=0;\n\t\tcount_0=0;\n\t\tscanf(\"%s\",s);\n\t\tlen_s=strlen(s);\n\t\tfor(i=0;i<len_s;i++)\n\t\t{\n\t\t\tif(s[i]=='1') count_1++;\n\t\t\telse count_0++;\n\t\t}\n\t\tif(count_1<count_0)\n\t\t{\n\t\t\tif(count_1%2!=0) printf(\"DA\");\n\t\t\telse printf(\"NET\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(count_0%2!=0) printf(\"DA\");\n\t\t\telse printf(\"NET\");\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tt--;\n\t}\n}"}
{"similarity_score": 0.9949874686716792, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "40ede749660bdfcdc28703efe5c945f0", "bug_code_uid": "34c9d53fa1760f6dffd127f8cb93343d", "src_uid": "dc31adef80f06897ea2f5ef76854bcf1", "apr_id": "ecb98312c4579c0daae340d967371733", "difficulty": 1200, "tags": ["implementation", "dfs and similar"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdlib.h>\nchar a[101][101];\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++) scanf(\"%s\",a[i]);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(a[i][j]=='.')\n            {\n                if((i+j)%2==0) printf(\"B\");\n                else printf(\"W\");\n            }\n            else printf(\"-\";)\n        }\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdlib.h>\nchar a[101][101];\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++) scanf(\"%s\",a[i]);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(a[i][j]=='.')\n            {\n                if((i+j)%2==0) printf(\"B\");\n                else printf(\"W\");\n            }\n            else printf(\"-\");\n        }\n        printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.961864406779661, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "057dfa2977f279acf0ecd2ee694b1cd8", "bug_code_uid": "ea2678855ab36a9f7329f1439955e224", "src_uid": "99a5b21a5984d5248e82f843f82e9420", "apr_id": "99d503a273415292203676e977681803", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid generate_beautiful(char digit, int repeats, char *result)\n{\n    result[repeats] = 0;\n    for (int i = 0; i < repeats; i++) result[i] = digit\n}\n\nint how_many_beautiful(int year)\n{\n    char syear[100];\n    int num_digits = sprintf(syear, \"%d\", year);\n    int result = (num_digits - 1) * 9;\n    char beautiful[num_digits + 1];\n    for (int c = '0'; c < '9'; c++)\n    {\n        generate_beautiful(c, num_digits, beautiful);\n        if (strcmp(beautiful, syear) == 1) break;\n        result++;\n    }\n    return result;\n}\n\n\nint main(void)\n{\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++)\n    {\n        int year;\n        scanf(\"%d\", &year);\n    }\n}", "fixed": "#include <stdio.h>\n\nvoid generate_beautiful(char digit, int repeats, char *result)\n{\n    result[repeats] = 0;\n    for (int i = 0; i < repeats; i++) result[i] = digit;\n}\n\nint how_many_beautiful(int year)\n{\n    char syear[100];\n    int num_digits = sprintf(syear, \"%d\", year);\n    int result = (num_digits - 1) * 9;\n    char beautiful[num_digits + 1];\n    for (int c = '1'; c <= '9'; c++)\n    {\n        generate_beautiful(c, num_digits, beautiful);\n        if (strcmp(beautiful, syear) == 1) break;\n        result++;\n    }\n    return result;\n}\n\n\nint main(void)\n{\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++)\n    {\n        int year;\n        scanf(\"%d\", &year);\n        printf(\"%d\\n\", how_many_beautiful(year));\n    }\n}"}
{"similarity_score": 0.9962825278810409, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b998aadada3274571d6ef753e1fcc3d2", "bug_code_uid": "f4a77c952a1a7d478fa19060c6a3a6b4", "src_uid": "e4381bd9f22c0e49525cc05cc5cd2399", "apr_id": "bccc443bb896e58644274e0ffc51082c", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint n,u,r,nb,i;\nchar ch[100000];\nu=0;r=0;nb=0;\n\nscanf(\"%d\",&n);\nscanf(\"%s\",ch);\nfor(i=0;i<n;i++)\n{\n\tif(ch[i]=='u')\n\t  u=u+1;\n\telse\n\t  r=r+1;\n\tif(u==r && ch[i]==ch[i+1])\n\t  nb=nb+1;    \n}\nprintf(\"%d\",nb);\nreturn 0;\n\n\t\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint n,u,r,nb,i;\nchar ch[100000];\nu=0;r=0;nb=0;\n\nscanf(\"%d\",&n);\nscanf(\"%s\",ch);\nfor(i=0;i<n;i++)\n{\n\tif(ch[i]=='U')\n\t  u=u+1;\n\telse\n\t  r=r+1;\n\tif(u==r && ch[i]==ch[i+1])\n\t  nb=nb+1;    \n}\nprintf(\"%d\",nb);\nreturn 0;\n\n\t\n}\n"}
{"similarity_score": 0.7679738562091504, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "662b043fa2c524e2d1004a346288727c", "bug_code_uid": "3163eeadeab9955a02e7a71f053a9368", "src_uid": "7a8c4ba98a77097faff625b94889b365", "apr_id": "486e594284ed01b31f2f44ba80869a1d", "difficulty": 900, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{int a,b,c;\r\nscanf(\"%d\",&a);\r\nfor(b=0;b<a;b++)\r\n{scanf(\"%d\",&c);\r\nlong long sum=0;\r\nint d,g[c+1];\r\nfor(d=0;d<c;d++)\r\n{scanf(\"%d\",&g[d]);\r\nsum=sum+g[d];\r\n}\r\nif((2*sum<c*(c-1))||(g[0]==0&&g[1]==0 ))\r\nprintf(\"NO\\n\");\r\nelse\r\nprintf(\"YES\\n\");\r\n\r\n}\r\n\t\r\n\t\r\n } ", "fixed": "#include<stdio.h>\r\nint main()\r\n{int a,b,c;\r\nscanf(\"%d\",&a);\r\nfor(b=0;b<a;b++)\r\n{scanf(\"%d\",&c);\r\nlong long sum=0;\r\nint d,g[c+1],k=0;\r\nfor(d=0;d<c;d++)\r\n{scanf(\"%d\",&g[d]);\r\n\r\n}\r\nfor(d=0;d<c;d++)\r\n{sum=sum+g[d];\r\nlong long  i=d*(d+1)/2;\r\nif(sum<i)\r\n{printf(\"NO\\n\");\r\nk=1;\r\nbreak;\r\n}\r\n}\r\nif(k==0)\r\n\r\nprintf(\"YES\\n\");\r\n}\r\n\t\r\n\t\r\n } "}
{"similarity_score": 0.6723842195540308, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b73e53eac99c7ec13afbdbd919019e56", "bug_code_uid": "d4ef269ed3023ead252cf9e3f7f1e7c0", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "dfaeb9f62f73976d47070c87db53cffa", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <iostream>\n#include <stdio.h>\nusing namespace std;\n\nint main()\n{\nint n,potato=1,i;\nint arr[100000];\nscanf(\"%d\",&n);\narr[0]=1;\nfor(i=1;i<n;i++){\n\n    arr[i]=arr[i-1]+potato;\n    potato++;\n}\n\n\nfor(i=1;i<n;++i){\n\n    printf(\"%d \",arr[i]%10);\n}\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n\nint main()\n{\nint n,potato=1,i;\nint arr[100000];\nscanf(\"%d\",&n);\narr[0]=1;\nfor(i=1;i<n;i++){\n\n    arr[i]=arr[i-1]+potato;\n    potato++;\n}\n\n\nfor(i=1;i<n;++i){\n        if(arr[i]%n==0)\n        printf(\"%d \",n);\nelse if(arr[i]>n)\n    printf(\"%d \",arr[i]%n);\n\n    else printf(\"%d \",arr[i]);\n}\n\nreturn 0;\n}\n"}
{"similarity_score": 0.2866847826086957, "equal_cnt": 25, "replace_cnt": 17, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "637dfe0dcc762dbe5af74d495e9b6403", "bug_code_uid": "ff98a6a535d7478452cc71af89b08256", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "15e9b96b2e415c9cce2d0acd19f36f31", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n   int logicTime;\n    scanf(\"%d\", &logicTime);\n    for(int i=0; i<logicTime; i++){\n      int n;\n    scanf(\"%d\", &n);\n    int ar[n];\n    for(int i=0; i<n; i++)\n        {\n        scanf(\"%d\", &ar[i]);\n        }\n    int count[11]={0};\n    for(int i=0; i<n; i++)\n    {\n        int value=ar[i];\n        count[value]++;\n    }\n    int powerValue = -1;\n    for(int value=0; value<=10; value++)\n    {\n        if(count[value]>0)\n        {\n           if(count[value] >= 3){\n           powerValue = value;\n           }\n        }\n    }\n    printf(\"%d\",powerValue);\n    }\n    return 0;\n}\n\t  \t \t\t  \t \t\t\t \t\t \t \t \t     \t\t", "fixed": "#include<stdio.h>\n#include<string.h>\n//recap D\nint main()\n{\n   int t;\n   scanf(\"%d\",&t);\n   for(int i=0; i<t; i++){\n      int n;\n    scanf(\"%d\",&n);\n    int large=0;\n    int arr[n],counter[n+1];\n    memset(counter,0,sizeof(counter));\n    for(int i=0; i<n ;i++){\n        scanf(\"%d\",&arr[i]);\n        if(large<arr[i]){\n            large=arr[i];\n        }\n        counter[arr[i]]++;\n    }\n    int ans=-1;\n\n\n\n\n    //printf(\"n=%d\\n\",large);\n    if(n<=large){\n        n=large+1;\n    for(int i=0; i<n; i++){\n //printf(\"n=%d\\n\",n);\n        if(counter[i]>=3){\n            ans=i;\n        }\n    }\n    }\n    if(n>large){\n            //printf(\"n=%d large=%d\\n\",n,large);\n        for(int i=0; i<n; i++){\n\n        if(counter[i]>=3){\n            ans=i;\n        }\n    }\n    }\n    printf(\"%d\\n\",ans);\n\n   }\n    return 0;\n}\n\n \t\t \t  \t\t\t\t \t  \t\t\t\t\t  \t\t  \t \t\t\t"}
{"similarity_score": 0.2736077481840194, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "144cdf784d70579a6fab1cc4d3b083e4", "bug_code_uid": "020c422fdc767083bf991d65ec6f07fd", "src_uid": "f3e413954c9c02520fd25bd2cba4747e", "apr_id": "f141250373cbbd13bf48624443a9e0d8", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nvoid main()\r\n{\r\n    float c;\r\n    int d=0,e;\r\n    long long int b;\r\n    long double a; scanf(\"%d\",&e);\r\n    for(int i=0;i<e;i++)\r\n    {\r\n            d=0;\r\n    scanf(\"%Lf\",&a);\r\n    a=a/2050;\r\n    b=a;  c=b/a;\r\n    if(c!=1) {printf(\"-1\"); continue;}\r\n    else while(1)\r\n    {\r\n        d=d+b%10;\r\n        b=b/10;\r\n    if(b==0){printf(\"%ld\",d); break; }\r\n    };\r\n    };\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n    int a,c,e,d;\r\n    scanf(\"%d\",&a);\r\n    long long int x[a];\r\n    for(c=0;c<a;c++){scanf(\"%lld\",&x[c]);};\r\n    \r\n        for(c=0;c<a;c++)\r\n        {\r\n            if(x[c]%2050==0) \r\n\t\t\t{\r\n\t\t\t\td=0; x[c]=x[c]/2050;\r\n\t\t\t\tfor(e=0;e<19;e++)\r\n\t\t\t\t{\r\n\t\t\t\t\td=d+x[c]%10;\r\n\t\t\t\t\t\r\n\t\t\t\t\tx[c]=x[c]/10;\r\n\t\t\t\t};\r\n\t\t\t\tprintf(\"%d\\n\",d);\r\n\t\t\t}\r\n            else printf(\"-1\\n\");\r\n        };\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.8864795918367347, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a3f6e7447800ead9b45b2f590c46fadc", "bug_code_uid": "add423466768d58a8d0d3f69876867de", "src_uid": "fc547fc83ebbcc3c058a069ef9fef62c", "apr_id": "488267758210d4979f045bfb65969ebb", "difficulty": 1100, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef long long int ulli;\r\nulli gcd(ulli a,ulli b){\r\n\tif(a==0)\r\n\t return b;\r\n\telse\r\n   return gcd(b,a%b);}\r\nint cmp(const void*a,const void*b){\r\n\treturn (*(int*)a-*(int*)b);}\r\nint min(int a,int b){\r\n\tif(a<=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\n int max(int a,int b){\r\n \tif(a>=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint a,b,c,m,r,s,n;\r\n\t\tscanf(\"%d %d %d %d\",&a,&b,&c,&m);\r\n\t\tn=a+b+c-3;\r\n\t\tif(m<=n){\r\n\t\t\tr=max(a,max(b,c));\r\n\t\t\tif(r==a)\r\n\t\t\t s=b+c;\r\n\t\t\telse if(r==b)\r\n\t\t\t s=a+c;\r\n\t\t\telse\r\n       s=a+b;\r\n      if((s-r)<=m ||(s-r-1)<=m)\r\n       printf(\"Yes\");\r\n      else\r\n       printf(\"No\");\r\n       }\r\n    else\r\n     printf(\"No\");\r\n    printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef long long int ulli;\r\nulli gcd(ulli a,ulli b){\r\n\tif(a==0)\r\n\t return b;\r\n\telse\r\n   return gcd(b,a%b);}\r\nint cmp(const void*a,const void*b){\r\n\treturn (*(int*)a-*(int*)b);}\r\nint min(int a,int b){\r\n\tif(a<=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\n int max(int a,int b){\r\n \tif(a>=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint a,b,c,m,r,s,n;\r\n\t\tscanf(\"%d %d %d %d\",&a,&b,&c,&m);\r\n\t\tn=a+b+c-3;\r\n\t\tif(m<=n){\r\n\t\t\tr=max(a,max(b,c));\r\n\t\t\tif(r==a)\r\n\t\t\t s=a-(b+c+1);\r\n\t\t\telse if(r==b)\r\n\t\t\t s=b-(a+c+1);\r\n\t\t\telse\r\n       s=c-(a+b+1);\r\n      if((s)<0)s=0;\r\n      if((s)<=m)\r\n       printf(\"Yes\");\r\n      else\r\n       printf(\"No\");\r\n       }\r\n    else\r\n     printf(\"No\");\r\n    printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n"}
{"similarity_score": 0.9927710843373494, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e1c21f79fa698e4073435a05b8aade1b", "bug_code_uid": "cfcfca1e7326a02f6cfe7df0e8d770bb", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "2231962954e3d5d1a5f41816fc3de4b8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a[100001],i,A=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint dem =0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]!=A)\n\t\t\tdem++;\n\t\tA=a;\n\t}\n\tprintf(\"%d\",dem);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a[100001],i,A=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint dem =0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]!=A)\n\t\t\tdem++;\n\t\tA=a[i];\n\t}\n\tprintf(\"%d\",dem);\n}\n"}
{"similarity_score": 0.9177215189873418, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "28bfb12a2bb4d287bd8224f82a21209c", "bug_code_uid": "bb258f07efec8c0a34a782e88077f125", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "9ba0d918ce5a6fa24401104d4f7c9d87", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x1,y1,x2,y2;\n    int x3,x4,y3,y4;\n    scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n    if(x1==x2)\n    {\n        y3=y1;\n        y4=y2;\n        x3=x1+y3-y4;\n        x4=x1+y3-y4;\n    }\n    else if(y1==y2)\n    {\n        x3=x1;\n        x4=x2;\n        y3=y1+x4-x3;\n        y4=y1+x4-x3;\n    }\n    else\n    {\n        if(x2-x1==y2-y1)\n        {\n            x3=x1;\n            y3=y2;\n            x4=x2;\n            y4=y1;\n        }\n        else\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    printf(\"%d %d %d %d\",x3,y3,x4,y4);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint mod(int a)\n{\n    if(a>=0)\n    return a;\n    else\n    return -a;\n}\nint main()\n{\n    int x1,y1,x2,y2;\n    int x3,x4,y3,y4;\n    scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n    if(x1==x2)\n    {\n        y3=y1;\n        y4=y2;\n        x3=x1+y3-y4;\n        x4=x1+y3-y4;\n    }\n    else if(y1==y2)\n    {\n        x3=x1;\n        x4=x2;\n        y3=y1+x4-x3;\n        y4=y1+x4-x3;\n    }\n    else\n    {\n        if(mod(x2-x1)==mod(y2-y1))\n        {\n            x3=x1;\n            y3=y2;\n            x4=x2;\n            y4=y1;\n        }\n        else\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    printf(\"%d %d %d %d\",x3,y3,x4,y4);\n    return 0;\n}"}
{"similarity_score": 0.6485714285714286, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "be836b0a02eb284e10959b6e0d34f90a", "bug_code_uid": "60f227e0fb3ded93f0669eec19b2a185", "src_uid": "b46244f39e30c0cfab592a97105c60f4", "apr_id": "0938ba81cc0a4338cf4a7776e1888b87", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,i,j,k;\n\tlong n[100],uc[100];\n\tdo{scanf(\"%d\",&t);}while(t<1||t>100);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tdo{scanf(\"%ld\",&n[i]);}while(n[i]<2||n[i]>1000000);\n\t\tuc[i]=1;\n\t\tfor(j=n[i];j>2;j--)\n\t\t{\n\t\t\tfor(k=2;k<j;k++)\n\t\t\t{\n\t\t\t\tif(j%k==0&&uc[i]<(j/k)) {uc[i]=j/k; goto mn;}\n\t\t\t}\n\t\t\tmn:\n\t\t\tn[i]--;\n\t\t\tif(n[i]==2) {break;}\n\t\t}\n\t}\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tprintf(\"%d\\n\",uc[i]);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,i,j,k;\n\tlong n[100],uc[100];\n\tdo{scanf(\"%d\",&t);}while(t<1||t>100);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tdo{scanf(\"%ld\",&n[i]);}while(n[i]<2||n[i]>1000000);\n\t\tuc[i]=1;\n\t\tif(n[i]/2>1) {uc[i]=n[i]/2;}\n\t\t\n\t}\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tprintf(\"%d\\n\",uc[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9927360774818402, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "79b26fc35b9d19217a8975fe93ab656e", "bug_code_uid": "fa865cac7fe00b9d1aeaf23a33594bb2", "src_uid": "f98d1d426f68241bad437eb221f617f4", "apr_id": "30b8ff98b4e51141507e94f12b1e2279", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint t,n,k;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d\",&n,&k);\n\t\tif(n<=k)printf(\"%d\\n\",k-n);\n\t\telse{\n\t\t\tif((n-k)%2==0)printf(\"1\\n\");\n\t\t\telse printf(\"0\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint t,n,k;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d\",&n,&k);\n\t\tif(n<=k)printf(\"%d\\n\",k-n);\n\t\telse{\n\t\t\tif((n-k)%2)printf(\"1\\n\");\n\t\t\telse printf(\"0\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.919889502762431, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fee55ddb414915b5c55f775ccc4d8586", "bug_code_uid": "3540129a02333ace998c84f5e33708de", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "6db1eda3d057580a5ac7daf65d98826f", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint max(int a[],int n,int k){\n\tint min =0,sum=0,vt;\n\tfor(int i=0;i<k;i++) sum+=a[i];\n\tmin=sum;\n\tfor(int i=k;i<n;i++){\n\t\tsum-=a[i-k];\n\t\tsum+=a[i];\n\t\tif(sum<min){\n\t\t\tmin=sum;\tvt=i-1;\n\t\t}\n\t}\n\treturn vt;\n}\nint main(){\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint a[100];\n\tfor(int i=0;i<n;i++) scanf(\"%d\",&a[i]);\n\tprintf(\"%d\",max(a,n,k));\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint max(int a[],int n,int k){\n\tint min =0,sum=0,vt=1;\n\tfor(int i=0;i<k;i++) sum+=a[i];\n\tmin=sum;\n\tfor(int i=1;i<=n-k;i++){\n\t\tsum-=a[i-1];\n\t\tsum+=a[i+k-1];\n\t\tif(sum<min){\n\t\t\tmin=sum; vt=i+1;\n\t\t}\n\t}\n\t\n\treturn vt;\n}\nint main(){\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint a[n];\n\tfor(int i=0;i<n;i++) scanf(\"%d\",&a[i]);\n\tprintf(\"%d\",max(a,n,k));\n\treturn 0;\n}"}
{"similarity_score": 0.8273170731707317, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d1ea26dfdc3bd23b76589c7f8808911c", "bug_code_uid": "a0d8f730a5c78c50ef83b3fa140eb1e8", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "573e6b4f6e2fe5b0a3bdbcf7e0e74cdb", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <inttypes.h>\n#include <string.h>\n#include <math.h>\n\n#define MAXLENGTH 101\n\nvoid solve() {\n    \n    size_t t;\n    \n    scanf(\"%zu\", &t);\n    \n    while (t--) {\n        \n        size_t len;\n        char str[MAXLENGTH] = \"\", max = 'a';\n        \n        scanf(\"%zu\", &len);\n        scanf(\"%s\", str);\n        \n        for (size_t i = 0; i < len; i++) {\n            max = str[i] > max ? str[i] : max;\n        }\n        \n        printf(\"%d\\n\", max - 'a' + 1);        \n    }\n}\n\nint main (void)\n{\n    solve();\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAXLENGTH 101\n\nint main (void)\n{\n    int t;\n    \n    scanf(\"%d\", &t);\n    \n    while (t--) {\n        \n        int len;\n        char str[MAXLENGTH] = \"\", max = 'a';\n        \n        scanf(\"%d\", &len);\n        scanf(\"%s\", str);\n        \n        for (int i = 0; i < len; i++) {\n            max = str[i] > max ? str[i] : max;\n        }\n        \n        printf(\"%d\\n\", max - 'a' + 1);        \n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8383921246923708, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "7412f425adc35d662a6a00efd789f285", "bug_code_uid": "48e2ebd11b77549bd97d4f1cafbd0b11", "src_uid": "93f6404a23bd2ff867d63db9ddf868ff", "apr_id": "cc0543ddcc55347dabfcdb10e828169a", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#define SIZE 2000000\n\nint cmpfunc ( const void *a, const void *b)\n{\nreturn (*(int*)a - *(int*)b);\n}\nint main()\n{\n\nlong long int n,b,i,c,sum=0;\nscanf(\"%d\",&b);\n\nlong long int *arr;\narr= malloc(sizeof(int) * SIZE);\n//long int arr2[1000000];\nfor(i=0;i<b;i++)\n{\nscanf(\"%d\",&arr[i]);\nsum+=arr[i];\n}\nprintf(\"%s\\n\", );\n//for (i = 0; i <b; i++)\n//{\n//\tprintf(\"%d\\n\",arr[i] );\n//}\nqsort(arr, b, sizeof(long long int), cmpfunc);\n//for (i = 0; i <b; i++)\n//{\n//\tprintf(\"%d\\n\",arr[i] );\n//}\nint x=b/4,k;\nfor(k=0;k<x;k++)\n{\nsum+=arr[b-1-k];\n}\nprintf(\"%d\\n\",sum);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#define SIZE 2000000\n\nint cmpfunc ( const void *a, const void *b)\n{\nreturn (*(int*)a - *(int*)b);\n}\nint main()\n{\n\nint n,b,i,c;\nlong long int sum=0;\nscanf(\"%d\",&b);\n\nlong long int *arr;\narr= malloc(sizeof(long long int) *SIZE);\n//long int arr2[1000000];\nfor(i=0;i<b;i++)\n{\nscanf(\"%lli\",&arr[i]);\nsum+=arr[i];\n}\n//printf(\"%lli\\n\",sum);\n//for (i = 0; i <b; i++)\n//{\n//\tprintf(\"%d\\n\",arr[i] );\n//}\nqsort(arr, b, sizeof(long long int), cmpfunc);\n\nint x=b/4,k;\nwhile(x>=1)\n{\nfor(k=0;k<x;k++)\n{\nsum+=arr[b-1-k];\n}\nx=x/4;\n}\nprintf(\"%lli\\n\",sum);\nreturn 0;\n}\n"}
{"similarity_score": 0.9990243902439024, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0f3bea2fcf1d3d9b3bb94c4a24626dbe", "bug_code_uid": "6850521ca34bcb3eff4ee331423ae0ea", "src_uid": "adc9fe6121f6ed1ba805a3b8c97824b4", "apr_id": "5e2edac1fefd44ea243a44c75966ed9d", "difficulty": 2300, "tags": ["number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define max 500001\ntypedef long long int ll;\nint a[500005][9]={0};\nint nnf[500005]={0};\nint pn[200005]={0};\nint val[200005];\nint x,in;\nvoid print(int *a,int n)\n{\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\nll check(int cnt,int val,int d)\n{\n\tif(in==-1)\n\tnnf[val]+=in;\n\tll q=d*nnf[val],i;\n\tfor(i=cnt+1;i<=a[x][0];i++)\n\t\tq+=check(i,val*a[x][i],-d);\n//\tprintf(\"%lld %d\\n\",q,val);\n\tif(in==1)\n\tnnf[val]+=in;\n\treturn q;\n}\nint main()\n{\n\ta[1][0]=1;\n\ta[1][1]=1;\n\tint i,j;\n\tfor(i=1;i<max;i++)\n\t{\n\t\tif(a[i][0]==1)\n\t\t{\n\t\t\tfor(j=i;j<max;j+=i)\n\t\t\t{\n\t\t\t\ta[j][0]+=1;\n\t\t\t\ta[j][a[j][0]]=i;\n\t\t\t}\t\t\t\t\n\t\t}\n\t}\n\ta[1][0]=1;\n/*\tfor(i=1;i<25;i++)\n\t{\n\t\tfor(j=0;j<=a[i][0];j++)\n\t\t\tprintf(\"%d \",a[i][j]);\n\t\tprintf(\"\\n\");\n\t}*/\n\tint n,q;\n\tll ans;\n\tscanf(\"%d %d\",&n,&q);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&val[i]);\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tif(pn[j]==1)\n\t\t\tin=-1;\n\t\telse\n\t\t\tin=1;\n\t\tpn[j]=pn[j]^1;\n\t\tx=val[j];\n//print(nnf,25);\n\t\tans+=check(1,1,in);\n//print(nnf,25);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define max 500001\ntypedef long long int ll;\nint a[500005][9]={0};\nint nnf[500005]={0};\nint pn[200005]={0};\nint val[200005];\nint x,in;\nvoid print(int *a,int n)\n{\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\nll check(int cnt,int val,int d)\n{\n\tif(in==-1)\n\tnnf[val]+=in;\n\tll q=d*nnf[val],i;\n\tfor(i=cnt+1;i<=a[x][0];i++)\n\t\tq+=check(i,val*a[x][i],-d);\n//\tprintf(\"%lld %d\\n\",q,val);\n\tif(in==1)\n\tnnf[val]+=in;\n\treturn q;\n}\nint main()\n{\n\ta[1][0]=1;\n\ta[1][1]=1;\n\tint i,j;\n\tfor(i=1;i<max;i++)\n\t{\n\t\tif(a[i][0]==1)\n\t\t{\n\t\t\tfor(j=i;j<max;j+=i)\n\t\t\t{\n\t\t\t\ta[j][0]+=1;\n\t\t\t\ta[j][a[j][0]]=i;\n\t\t\t}\t\t\t\t\n\t\t}\n\t}\n\ta[1][0]=1;\n/*\tfor(i=1;i<25;i++)\n\t{\n\t\tfor(j=0;j<=a[i][0];j++)\n\t\t\tprintf(\"%d \",a[i][j]);\n\t\tprintf(\"\\n\");\n\t}*/\n\tint n,q;\n\tll ans=0;\n\tscanf(\"%d %d\",&n,&q);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&val[i]);\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tif(pn[j]==1)\n\t\t\tin=-1;\n\t\telse\n\t\t\tin=1;\n\t\tpn[j]=pn[j]^1;\n\t\tx=val[j];\n//print(nnf,25);\n\t\tans+=check(1,1,in);\n//print(nnf,25);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5645645645645646, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "0a3f16f8b09c5458b0de350eb50bf0dd", "bug_code_uid": "a57d9f4e29108ae5583bb7f6d36d5669", "src_uid": "bcee233ddb1509a14f2bd9fd5ec58798", "apr_id": "b845bc875bc01a13a4b0be8a88ee79d3", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,x,i;\n    scanf(\"%d %d\",&n,&k);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    x=a[k-1];\n    for(i=k;i<n;i++)\n    {\n        if(a[i]==x)\n        continue;\n        else\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    printf(\"%d\",n-k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,x,i,t;\n    scanf(\"%d %d\",&n,&k);\n    t=n;\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    x=a[k-1];\n    for(i=n-1;i>=0;i--)\n    {\n        if(x==a[i])\n        t--;\n        else\n        break;\n    }\n    if(t>=k)\n    printf(\"-1\");\n    else\n    printf(\"%d\",t);\n    return 0;\n}\n"}
{"similarity_score": 0.8679245283018868, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4b0fa630c705dc28056506d2dcb0c789", "bug_code_uid": "7f28a8be864694d8ae263013bbe1088f", "src_uid": "91be5db48b44a44adff4c809ffbb8e3e", "apr_id": "d4c3002feb7c838503d640047fc7cd45", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int s,n,i,x,y,max=0,b=0;\n scanf(\"%d %d\",&n,&s);\n for(i=0;i<n;i++)\n {\n scanf(\"%d %d\",&x,&y);\n\tif(x>s)\tcontinue;\n\tb=1;\n\tif(!y) continue;\n\tif(max<100-y)\tmax=100-y;\n\n }\n if(!b) \tprintf(\"-1\");\n else\t\tprintf(\"%d\",max);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n int s,n,i,x,max=0,b=0;\n double y;\n scanf(\"%d %d\",&n,&s);\n for(i=0;i<n;i++)\n {\n scanf(\"%d %lf\",&x,&y);\n\tif(x+y/100>s)\tcontinue;\n\tb=1;\n\tif(!y) continue;\n\tif(max<100-y)\tmax=100-y;\n\n }\n if(!b) \tprintf(\"-1\");\n else\t\tprintf(\"%d\",max);\nreturn 0;\n}\n"}
{"similarity_score": 0.8947368421052632, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "aa61df84b2075e40d0b9f63a7c0dee4c", "bug_code_uid": "80e081ce4309a51fe9927981b39bf7de", "src_uid": "23ef311011b381d0ca2e84bc861f0a31", "apr_id": "a1e03bc3d34a8f612715149eddcc025e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint a[1000];\r\nint main()\r\n{\r\n    int t,n,i,s,p,q,j;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        s=n;\r\n        for(i=1;i<=n;i++)\r\n            scanf(\"%d\",&a[i]);\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            p=0;q=0;\r\n            for(j=1;j<=n;j++)\r\n            {\r\n            if(fabs(a[i])==fabs(a[j])&&a[i]!=0)\r\n            {\r\n                    a[j]==110;\r\n                    p++;\r\n            }\r\n            if(a[i]==a[j]&&a[i]==0)\r\n            {\r\n                a[j]==110;\r\n                q++;\r\n            }\r\n            }\r\n        }\r\n            if(p>=2)\r\n            s=s+2-p;\r\n            if(q>=2)\r\n            s=s+1-q;\r\n            printf(\"%d\\n\",s);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint a[1000];\r\nint main()\r\n{\r\n    int t,n,i,s,p,q,j;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        s=n;\r\n        for(i=1;i<=n;i++)\r\n            scanf(\"%d\",&a[i]);\r\n        for(i=1;i+1<=n;i++)\r\n        {\r\n            q=0;p=0;\r\n            if(a[i]==110)\r\n                i++;\r\n            for(j=i+1;j<=n;j++)\r\n            {\r\n            if(fabs(a[i])==fabs(a[j])&&a[j]!=110&&a[j]!=0&&a[i]!=110)\r\n            {\r\n                    a[j]=110;\r\n                    p++;\r\n            }\r\n            if(a[i]==0&&a[j]==0)\r\n            {\r\n                a[j]=110;\r\n                q++;\r\n            }\r\n            }\r\n            if(p>=2)\r\n            s=s+1-p;\r\n            if(q>=1)\r\n            s=s-q;\r\n        }\r\n            printf(\"%d\\n\",s);\r\n    }\r\n}"}
{"similarity_score": 0.9207100591715977, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "14f8179b99038f22df573c63f5f1aef2", "bug_code_uid": "63562c3824c79abdef958d2c4bbb44c1", "src_uid": "49c47ebfd710a3733ce7ecb3a3c134a7", "apr_id": "08b3e145020567310d5332b923a3201a", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n  int n,m,x;\n  scanf(\"%d%d\",&n,&m);\n  int min,max;\n  min=100;max=1;\n  for(int i=0;i<n;i++){\n    scanf(\"%d\",&x);\n    min = x < min ? x:min;\n    max = max < x ? x:max;\n  }\n  int min2=100;\n  for(int i=0;i<m;i++){\n    scanf(\"%d\",&x);\n    min2 = x < min2 ? x:min2;\n  }\n  if((min<<1) <= max && max < min2) printf(\"%d\\n\",max);\n  else printf(\"-1\\n\");\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n  int n,m,x;\n  scanf(\"%d%d\",&n,&m);\n  int min,max;\n  min=100;max=1;\n  for(int i=0;i<n;i++){\n    scanf(\"%d\",&x);\n    min = x < min ? x:min;\n    max = max < x ? x:max;\n  }\n  int min2=100;\n  for(int i=0;i<m;i++){\n    scanf(\"%d\",&x);\n    min2 = x < min2 ? x:min2;\n  }\n  if((min<<1) <= max && max < min2) printf(\"%d\\n\",max);\n  else if((min<<1) < min2 && (min<<1)>=max) printf(\"%d\\n\",min<<1);\n  else printf(\"-1\\n\");\n  return 0;\n}\n"}
{"similarity_score": 0.9093799682034976, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3dbb292da456e80f36cc8fb8dea28d15", "bug_code_uid": "3b373ff5f37a7961bf73652403ef8b17", "src_uid": "f4982de28aca7080342eb1d0ff87734c", "apr_id": "5931620d3d45e44e75070026edbfd8eb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{   \n    int n;\n    scanf(\"%d\",&n);\n    int n1,n2;\n    int sum=0,sum1=0,suma=0;\n    scanf(\"%d %d\",&n1,&n2);\n    if(24 > n1)\n    {\n    sum = 24 -n1;\n    }\n    if(60>n2)\n    {\n    sum1 = 60 -n2;\n    }\n    suma=sum*60+sum1-60;\n    printf(\"%d\",suma);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{   \n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n    int n1,n2;\n    int sum=0,sum1=0,suma=0;\n    scanf(\"%d %d\",&n1,&n2);\n    if(24 > n1)\n    {\n    sum = 24 -n1;\n    }\n    if(60>n2)\n    {\n    sum1 = 60 -n2;\n    }\n    suma=sum*60+sum1-60;\n    printf(\"%d \\n\",suma);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9228871067242443, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4d922b083334ab17910428bf4b67e20d", "bug_code_uid": "11af2953947ac9783490738626525aaf", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "8bb5aa8e49182e2e3ae16e5a6b214fad", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/*\n* @codeforces Problem 404A. Velera and X\n* @date:2014.3.29\n* @author:ckeling\n* @tag:implementation\n***/\n\n#include <stdio.h>\n#define MAXN 300\nint main(){\n    char alph[MAXN + 5][MAXN + 5];\n    int n;\n    int i, j;\n    char temp;\n    memset(alph, '0', sizeof(alph));\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; ++i){\n        scanf(\"%s\", alph[i]);\n        if(alph[i][i] != alph[i][n-1-i]){\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    temp = alph[0][1];\n    for(i = 0; i < n; ++i)\n        for(j = 0; j < n; ++j){\n            if(j != i && j != n-1-i){\n                if(alph[i][j] == alph[0][0] || alph[i][j] != temp){\n                    printf(\"NO\");\n                    return 0;\n                }\n            }\n        }\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "/*\n* @codeforces Problem 404A. Velera and X\n* @date:2014.3.29\n* @author:ckeling\n* @tag:implementation\n***/\n\n#include <stdio.h>\n#define MAXN 300\nint main(){\n    char alph[MAXN + 5][MAXN + 5];\n    int n;\n    int i, j;\n    char temp;\n    memset(alph, '0', sizeof(alph));\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; ++i)\n        scanf(\"%s\", alph[i]);\n\n    temp = alph[0][1];\n    for(i = 0; i < n; ++i){\n        if(alph[i][i] != alph[0][0] || alph[i][i] != alph[i][n-1-i]){\n            printf(\"NO\");\n            return 0;\n        }\n    }\n\n    for(i = 0; i < n; ++i)\n        for(j = 0; j < n; ++j){\n            if(j != i && j != n-1-i){\n                if(alph[i][j] == alph[0][0] || alph[i][j] != temp){\n                    printf(\"NO\");\n                    return 0;\n                }\n            }\n        }\n    printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.6415841584158416, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5fe47b7c5e75a142e3b01437d6b1789a", "bug_code_uid": "f9fa243ec299f5dd0104afcc82e9f5ed", "src_uid": "291601d6cdafa4113c1154f0dda3470d", "apr_id": "094ca339bada30bb8f0a699df965df9f", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint i,j,n,count=0;\n\tint arr[10000];\n\t\n\tscanf(\"%d\\n\",&n);\n\t\n\tfor(i=0;i<n;i++)\n\t scanf(\"%d\",&arr[i]);\n\t\n\tfor(i=0;i<n;i++)\n\t if(arr[i]==i+1)\n\t  count++;\n\t \n\t printf(\"%d\",count);\n\t\n\t}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint i,j,n,count=0,a;\n\tint arr[10000];\n\n\tscanf(\"%d\\n\",&n);\n\n\tfor(i=0;i<n;i++)\n\t scanf(\"%d\",&arr[i]);\n\n\tfor(i=0;i<n;i++)\n\t {a=0;\n\t  for(j=0;j<i+1;j++)\n\t   {if(arr[j]>i+1)\n\t    {a=1;\n\t     break;}\n\t   if(j==i && a!=1)\n\t    count++;}}\n\n\n\t printf(\"%d\",count);\n\n\t}\n"}
{"similarity_score": 0.9919028340080972, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "eae186cabdad159eba40abb03dab925f", "bug_code_uid": "cb5766c7277c725b0776f274f15c926e", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "bf72abd53c5c4bd0cfd423fbd172f37d", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m,i,j;\n    double money,min;\n    int a[20][2];\n    double c[20];\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n        for(j=0;j<2;j++)\n    {\n        scanf(\"%d\",&a[i][j]);\n    }\n    for(i=0;i<n;i++)\n        c[i]=(a[i][0]*1.00000000)/(a[i][1]*1.00000000);\n    min=c[0];\n    for(i=0;i<n;i++)\n    {\n        if(c[i]<min)\n        {\n            min=c[i];\n        }\n    }\n    money=min*m;\n    printf(\"%.8llf\\n\",money);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m,i,j;\n    double money,min;\n    int a[6000][2];\n    double c[6000];\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n        for(j=0;j<2;j++)\n    {\n        scanf(\"%d\",&a[i][j]);\n    }\n    for(i=0;i<n;i++)\n        c[i]=(a[i][0]*1.00000000)/(a[i][1]*1.00000000);\n    min=c[0];\n    for(i=0;i<n;i++)\n    {\n        if(c[i]<min)\n        {\n            min=c[i];\n        }\n    }\n    money=min*m;\n    printf(\"%.8llf\\n\",money);\n    return 0;\n}\n"}
{"similarity_score": 0.863607793840352, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "5ec5f1fe8ff60dd66d2b95f65de89115", "bug_code_uid": "69fe60b8bd3dcb13ddb56f8d71c0f068", "src_uid": "6581dbaff7eb52b63ccfe9c0c4117c09", "apr_id": "2391f33a60a62f36b74c1e19ca30c109", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n\nint main() {\n    char string[1000000];\n    scanf(\"%s\",string);\n\n    char test='a';\n    int length[]={0,0,0};\n\n    int j=0;\n    int aorb=0;\n    for (int i = 0; i < strlen(string); i++) {\n        if(j>2) break;\n        if(string[i]==test){\n            aorb=1;\n            length[j]++;\n        } else{\n            if(string[i]=='b'){\n                aorb++;\n                j++;\n                test='b';\n            } else{\n                test='c';\n                j++;\n            }\n        }\n    }\n            if(aorb==2 && (length[0]==length[2] ||length[1]==length[2])){\n                printf(\"YES\");\n            } else{\n            printf(\"NO\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\n\nint main() {\n    char string[1000000];\n    scanf(\"%s\",string);\n\n    char test='d';\n    int length[]={0,0,0};\n\n    int j=0;\n    int aorb=0;\n    for (int i = 0; i < strlen(string); i++) {\n        if(j>2) break;\n        if(string[i]==test){\n            length[j]++;\n        } else{\n            if(string[i]=='a'){\n                aorb++;\n                test='a';\n                length[j]++;\n            }\n            else if(string[i]=='b'){\n                aorb++;\n                j++;\n                test='b';\n                length[j]++;\n            } else{\n                test='c';\n                j++;\n                length[j]++;\n            }\n        }\n    }\n            if(aorb==2 && (length[0]==length[2]||length[1]==length[2])){\n                printf(\"YES\");\n            } else{\n            printf(\"NO\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9175769612711023, "equal_cnt": 20, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 18, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "0dedbf7b3a49009fb752c61f80e8efbb", "bug_code_uid": "a52caf239d01a52f0569417c5660f95f", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "c4be3ee9f43221025fb1dd9d9f25a4b9", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,A[10000],x,sum=0;\n    scanf(\"%d%d\",&n,&m);\n    x=2*m;\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<x; j++)\n        {\n            scanf(\"%d\",&A[j]);\n        }\n    }\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<x; j=j+2)\n        {\n            if(A[j]!=1 && A[j+1]!=1)\n            {\n                sum;\n            }\n            else\n                sum++;\n        }\n    }\n\n    printf(\"%d\\n\",sum);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,A[1000][1000],x,sum=0;\n    scanf(\"%d%d\",&n,&m);\n    x=2*m;\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<x; j++)\n        {\n            scanf(\"%d\",&A[i][j]);\n\n        }\n    }\n        for(i=0; i<n; i++)\n        {\n            for(j=0; j<x; j=j+2)\n            {\n                if(A[i][j]!=1 && A[i][j+1]!=1)\n                {\n                    sum;\n                }\n                else\n                    sum++;\n            }\n        }\n\n        printf(\"%d\\n\",sum);\n\n        return 0;\n    }\n"}
{"similarity_score": 0.38933951332560834, "equal_cnt": 22, "replace_cnt": 19, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "2c614b03a375df324b197b189b9d84f2", "bug_code_uid": "9ccb4b3b47bff38fbc13e82dac5edede", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "9e69e580e5ec0b5652776e0f252aa37f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n     #include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1; i<=t; i++)\n    {\n        int rating;\n        scanf(\"%d\",&rating);\n        int x=1;\n        if(rating>=1900)\n        {\nprintf(\"Division %d\\n\",x);\n}\n             else if(rating>=1600 && rating<=1899)\n        {\n            printf(\"DIvision %d\\n\",x+1);\n        }\n        else if(rating>=1400 && rating<=1599)\n        {\nprintf(\"Division %d\\n\",x+2);\n}\n               else\n        {\n            printf(\"DIvision %d\\n\",x+3);\n        }\n    }\nreturn 0;\n}\n  \t \t \t  \t \t\t\t \t\t \t  \t\t\t\t\t\t\t\t\t", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t,r,i;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;++i)\n\t{\n\t\tscanf(\"%d\",&r);\n\t\tif(r>=1900)\t\tprintf(\"Division 1\\n\");\n\t\telse if(r>=1600)\tprintf(\"Division 2\\n\");\n\t\telse if(r>=1400)\tprintf(\"Division 3\\n\");\n\t\telse printf(\"Division 4\\n\");\n\t}\n\treturn 0;\n}\n\t\t\t\t \t\t\t  \t  \t \t\t\t\t   \t\t \t\t \t\t\t"}
{"similarity_score": 0.8097165991902834, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "019584d78000427a9a77362e5869cf49", "bug_code_uid": "a1d4f49991b60b06e60868e7e907d795", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "c47ab10d48760a95990796918326cfb2", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n\n    if(n==2)\n        {\n            printf(\"1\\n\");\n        printf(\"1\");\n        }\n\n    else  if(n==4)\n        {\n            printf(\"3\\n\");\n             printf(\"1 4 2\\n\");\n        }\n\n    else if(n%2==0)\n    {\n        printf(\"%d\\n\",n);\n        int k=n/2;\n        for(i=1;i<=n/2;i++)\n        {\n            printf(\"%d\\t\",i);\n            printf(\"%d\\t\",k+1);\n            k++;\n        }\n    }\n\n         else if(n%2!=0)\n    {\n        if(n==3)\n        {\n            printf(\"%d\\n\",n-1);\n            printf(\"%d %d\",n-2,n);\n        }\n        else{\n                printf(\"%d\\n\",n);\n        for(i=1;i<=n;i++)\n        {\n            if(i%2==0)\n                printf(\"%d\\t\",i);\n        }\n        for(i=1;i<=n;i++)\n        {\n            if(i%2!=0)\n                printf(\"%d\\t\",i);\n        }\n    }\n   }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n\n    if(n==2)\n        {\n            printf(\"1\\n\");\n        printf(\"1\");\n        }\n\n    else  if(n==4)\n        {\n            printf(\"4\\n\");\n             printf(\"3 1 4 2\");\n        }\n    else if(n==3)\n        {\n            printf(\"%d\\n\",n-1);\n            printf(\"%d %d\",n-2,n);\n        }\n\n    else if(n%2==0)\n    {\n        printf(\"%d\\n\",n);\n        int k=n/2;\n        for(i=1;i<=n/2;i++)\n        {\n            printf(\"%d\\t\",i);\n            printf(\"%d\\t\",k+1);\n            k++;\n        }\n    }\n\n         else if(n%2!=0)\n\n\n        {\n                printf(\"%d\\n\",n);\n        for(i=1;i<=n;i++)\n        {\n            if(i%2==0)\n                printf(\"%d\\t\",i);\n        }\n        for(i=1;i<=n;i++)\n        {\n            if(i%2!=0)\n                printf(\"%d\\t\",i);\n        }\n    }\n    return 0;\n   }\n\n\n\n"}
{"similarity_score": 0.9230769230769231, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a5a16dd390d3de608291c152249628d6", "bug_code_uid": "a6e5e11874826be5df6350f46a8adbba", "src_uid": "ed449ba7c453a43e2ac5904dc0174530", "apr_id": "b6682613f3960848f668585e7f2afd45", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint t, n, i, a[1020], j, x;\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\n\nint main(void) {\n\t// your code goes here\n\tscanf(\"%d\", &t);\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i<t; i++) {\n\t\tfor (j = 0; j<n; j++) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\ta[j] = x;\n\t\t\t\n\t\t}\n\t\tqsort(a, n, sizeof(int), cmpfunc);\n\t\tbool isValid ;\n\t\tisValid = true;\n\t\tfor (j = 1; j<n; j++) {\n\t\t\tif (abs(a[j] - a[j-1]) > 1) {\n\t\t\t\tisValid = false;\n\t\t\t\tbreak;\n\t\t\t} \n\t\t}\n\t\tif (isValid) printf(\"YES\"); \n\t\telse printf(\"NO\");\n\t}\n\treturn 0;\n\t\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint t, n, i, j, x;\n\t\tint  a[1020];\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\n\nint main(void) {\n\t// your code goes here\n\tscanf(\"%d\", &t);\n\tfor (i = 0; i<t; i++) {\n\t\tscanf(\"%d\", &n);\n\t\tfor (j = 0; j<n; j++) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\ta[j] = x;\n\t\t\t\n\t\t}\n\t\tqsort(a, n, sizeof(int), cmpfunc);\n\n\t\tint isValid ;\n\t\tisValid = 1;\n\t\tfor (j = 1; j<n; j++) {\n\t\t\tif (abs(a[j] - a[j-1]) > 1) {\n\t\t\t\tisValid = 0;\n\t\t\t\tbreak;\n\t\t\t} \n\t\t}\n\t\tif (isValid == 1) printf(\"YES\\n\"); \n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n\t\n}\n"}
{"similarity_score": 0.3781818181818182, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "11e6ddeb77438d6f99772a5c783d6130", "bug_code_uid": "4236e71de038b5fcd398ea0d5135cef8", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "94f012c8bbb87e8e26f904f441ef5df4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main ()\r\n{   \r\n\tint t,i,x,n,num;\r\n\tint  k[1000],k3[1000];\r\n\t\r\n\tscanf(\"%d\",&t);\r\n\tfor(n=0;n<t;n++)\r\n\t{\r\n\t\tscanf(\"%d\",&num);\r\n\t\t\r\n\t\tk[n]=num;\t//\ufffd\ufffd1\ufffd\ufffd1000\ufffd\ufffd\ufffd\ufffd\u02f3\ufffd\ufffd \r\n\t}\r\n\t\r\n    i=1;\r\n\tfor (x=0;x<1000;x++)\r\n\t{   \r\n\t    while(i%3==0||i%10==3)\r\n\t    {\r\n\t    \ti++;\r\n\t\t}\r\n\t\tk3[x]=i;    //\ufffd\ufffd 1\ufffd\ufffd1666\ufffd\ufffd\ufffd\ufffd\u02f3\ufffd\ufffd \r\n\t\ti++;   \r\n\t\t \r\n\t for(n=0;n<t;n++)\r\n       {\r\n   \t\r\n\t     if(k[n]==x+1)   \r\n\t    \r\n\t    printf(\"%d\\n\",k3[x]);\r\n       }  \r\n   \r\n   \r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\t\r\n\t\r\n", "fixed": "#include <stdio.h>\r\nint main ()\r\n{   \r\n\tint t,i,x,n,num;\r\n\tint  k3[1000];\r\n    i=1;\r\n\tfor (x=0;x<1000;x++)\r\n\t{   \r\n\t    while(i%3==0||i%10==3)\r\n\t    {\r\n\t    \ti++;\r\n\t\t}\r\n\t\tk3[x]=i;    //\ufffd\ufffd 1\ufffd\ufffd1666\ufffd\ufffd\ufffd\ufffd\u02f3\ufffd\ufffd \r\n\t\ti++;   \r\n\t}\r\n\tscanf(\"%d\",&t);\r\n\tfor(n=0;n<t;n++)\r\n\t{\r\n\t\tscanf(\"%d\",&num);\r\n\t\tprintf(\"%d\\n\",k3[num-1]); \r\n\t\t\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\t\r\n\t\r\n"}
{"similarity_score": 0.721030042918455, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "bee54e9da0798d87e760f5cd3b39520f", "bug_code_uid": "07333fb29572561ed5171d0e15223cde", "src_uid": "27ddccc777ef9040284ab6314cbd70e7", "apr_id": "17b7ed04014fd91b0a9ad3745ffab18a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a,b,x,k,i;\n    scanf(\"%lld\",&k);\n    for(i=0;i<=k;i++){\n    scanf(\"%lld %lld\", &a, &b);\n    if(a<b){\n        x=a+b;\n        printf(\"%lld\\n\",x);\n    }\n    else if(a>b){\n        x=a-b;\n        printf(\"%lld\\n\",x);\n    }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b,k;\n    scanf(\"%lld\",&k);\n    while(k--){\n    scanf(\"%lld %lld\", &a, &b);\n        printf(\"%lld\\n\",a+b);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3087719298245614, "equal_cnt": 15, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "3310e4e82a7a5c5f1ee6b7038cdba990", "bug_code_uid": "4ffbd89e5ecf4fdeb4b51da26f8b3697", "src_uid": "26f1b8c3cb83603c904e1508df4067f4", "apr_id": "387c2cd21974c0620d82610345998500", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar s[200000];\nint main(){\t\n\tscanf(\"%s\",s);\n\tint n=strlen(s)+1; \n\tchar r[n];\n\tint i,w,t,b,h,k;\n\tk=0;\n\tfor(i=0;i<=n; ++i) {\n\t\tt=0;\n\t\tw=0;\n\t\tfor(h=0;h<=n;h++) {\n\t\t\tif(s[i] == *(s+h) ){\n\t\t\t\tw++;\n\t\t\t}\t\t\n\t\t}\n\t\tw--;\n\t\tfor(b=0;b<i;b++){\n\t\t\tif(r[b] == s[i]){\n\t\t\t\tt=1;\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tif (w%2==0 && !t) {\n\t\t\t\t*(r+k) = *(s+i);\n\t\t\t\tk++;\t\n\t\t}\n\t}\n\t*(r+k)='\\0';\t\n\tprintf(\"%s\",r);\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main(){\t\n\tchar *s=(char *)malloc(200001*sizeof(char));\n\tscanf(\"%s\",s);\n\tint n=strlen(s)+1; \n\tchar *r=(char *)malloc(n*sizeof(char));\n\tint i,a;\n\ta=0;\n\tfor(i=0;s[i]!='\\0';i++){\n        r[a]=s[i];\n        if(r[a]==r[a-1] && a){\n            a--;\n        }else{\n            a++;\n        }\n    }\n    r[a]=s[i];\n    for(i=0;r[i]!='\\0';i++){\n        printf(\"%c\",r[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9407783417935702, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d86ba47950744fcd898b5a9b62087a61", "bug_code_uid": "315acaf43bfae607988e8a4693e5eb0a", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "672ab837ffa2c7cdec9f3372c6879a1c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    long int x,y,a,b;\n    scanf(\"%d\",&n);\n    while(n>0)\n {\n     scanf(\"%ld %ld %ld %ld\",x,y,a,b);\n     long int sub,add;\n     sub=y-x;\n     add=a+b;\n     if(sub%add ==0)\n     printf(\"%d\",sub/add);\n     els\n     printf(\"-1\");\n }\n}\n     \n     ", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    long int x,y,a,b;\n    scanf(\"%d\",&n);\n    while(n>0)\n {\n     scanf(\"%ld %ld %ld %ld\",&x,&y,&a,&b);\n     long int sub,add;\n     sub=y-x;\n     add=a+b;\n     if(sub%add ==0)\n     printf(\"%ld\\n\",sub/add);\n     else \n     printf(\"-1\\n\");\n     n--; \n }\n}\n     \n     \n"}
{"similarity_score": 0.9191321499013807, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "e83a042d865cc8acfbad4757fa0280d2", "bug_code_uid": "ab8f8d31c1694dadd55748a89aa23ac8", "src_uid": "2005224ffffb90411db3678ac4996f84", "apr_id": "71edd8e9ca7c6383290fa308915ad421", "difficulty": 1400, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint solve(){\n    int k, n, a, b;\n    scanf(\"%d%d%d%d\", &k, &n, &a, &b);\n    int l = 0, r = ((k - 1) / a < n ? (k - 1) / a : n), ans = -1;\n    while(l <= r){\n        int m = l + (r - l) / 2;\n        int val = m * a + (n - m) * b;\n        if(val < k){\n            ans = m; l = m + 1;\n        }\n        else r = m - 1;\n    }\n    return ans;\n}\n\nint main(){\n    int T;\n    scanf(\"%d\", &T);\n    while(T--){\n        int res = solve();\n        printf(\"%d\\n\", res);\n    }\n}", "fixed": "#include <stdio.h>\n\nlong long solve(){\n    long long k, n, a, b;\n    scanf(\"%lld%lld%lld%lld\", &k, &n, &a, &b);\n    long long l = 0, r = ((k - 1) / a < n ? (k - 1) / a : n), ans = -1;\n    while(l <= r){\n        long long m = l + (r - l) / 2;\n        long long val = m * a + (n - m) * b;\n        if(val < k){\n            ans = m; l = m + 1;\n        }\n        else r = m - 1;\n    }\n    return ans;\n}\n\nint main(){\n    int T;\n    scanf(\"%d\", &T);\n    while(T--){\n        long long res = solve();\n        printf(\"%lld\\n\", res);\n    }\n}"}
{"similarity_score": 0.8640552995391705, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "48469f0cfd307046924cf9a0e4df6e81", "bug_code_uid": "d0e3f061b8f481663e85a780960d24f0", "src_uid": "12abfbe7118868a0b1237489b5c92760", "apr_id": "fcb7daa77225228299d3634e2d872ca8", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n, i, j, max=0, flag=0;\n\tscanf(\"%d\", &n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tif(a[i]>max) max=i;\n\t}\n\t\n\tfor(i=0;i<max-1;i++)\n\t{\n\t\tif(a[i]>a[i+1])\n\t\t{\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(flag==0)\n\t\tfor(i=max+1;i<n-1;i++)\n\t\t{\n\t\t\tif(a[i]<a[i+1])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\tif(flag==0) printf(\"YES\\n\");\n\telse if(flag==1) printf(\"NO\\n\");\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n, i, j, max=0, flag=0, maxnum;\n\tscanf(\"%d\", &n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tif(a[i]>max) \n\t\t{\n\t\t\tmax=a[i];\n\t\t\tmaxnum=i;\n\t\t}\n\t}\n\tif(max>=2)\n\t\tfor(i=0;i<maxnum-1;i++)\n\t\t{\n\t\t\tif(a[i]>a[i+1])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\n\tif(flag==0)\n\t\tfor(i=maxnum+1;i<n-1;i++)\n\t\t{\n\t\t\tif(a[i]<a[i+1])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\tif(flag==0) printf(\"YES\\n\");\n\telse if(flag==1) printf(\"NO\\n\");\n}\n"}
{"similarity_score": 0.8306264501160093, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9db89576a3ed6aca905097d8057fd27c", "bug_code_uid": "f3fd289da2e6b5a56b2106965b4549a6", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "cdf4d20eb77e9a9a3db47494bea3166a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n    int n,c,i;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++){\n        int p,q;\n        scanf(\"%d%d\", &p, &q);\n        if((q-p) >= 2)\n        c++;\n    }\n    printf(\"%d\", c);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n \nint main() {\n    int n,i,c=0;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++){\n        int p,q;\n        scanf(\"%d%d\", &p, &q);\n        if((q-p) >= 2)\n        c++;\n    }\n    printf(\"%d\", c);\nreturn 0;\n}"}
{"similarity_score": 0.3290707587382779, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "cbc0f2caef09d34dc87cf28979fee90e", "bug_code_uid": "c4bdf4b843a2b2c09b9fff3fddbcf09d", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "447756c3eb8cca9bb30ecb3269ed700b", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main () {\r\n    short quantity;\r\n    scanf(\"%sd\", &quantity);\r\n\r\n    for(int set = 0; set < quantity; set++) {\r\n        short price;\r\n        scanf(\"%sd\", &price);\r\n\r\n        short nominal1 = 0;\r\n        short nominal2 = 0;\r\n        while (nominal1 + nominal2 < price) {\r\n            nominal1++;\r\n            nominal2 += 2;\r\n        }\r\n\r\n        if (price % 3 == 0) {\r\n            nominal2 = nominal2 / 2;\r\n        } else {\r\n            if (price % 3 == 1) {\r\n                nominal2 = nominal2 / 2 - 1;\r\n            } else {\r\n                nominal1--;\r\n                nominal2 = nominal2 / 2 ;\r\n            }\r\n        }\r\n        printf(\"%d %d\\n\", nominal1, nominal2);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int quantity;\r\n    scanf(\"%d\", &quantity);\r\n\r\n    for (int set; set < quantity; set++) {\r\n        int sum;\r\n        scanf(\"%d\", &sum);\r\n\r\n        int nominal1 = sum / 3;\r\n        int nominal2 = sum / 3;\r\n        if (sum % 3 == 1)\r\n            nominal1++;\r\n        else\r\n            if (sum % 3 == 2)\r\n                nominal2++;\r\n\r\n\r\n        printf(\"%d %d\\n\", nominal1, nominal2);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.5997357992073976, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "7eaa454eb1ae0ea8e844e76fa747db9c", "bug_code_uid": "7d4e1c5771343feed44808431c1b663b", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "35a1872a4d08c460a5a8b4d1fb61d616", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n \r\nint main()\r\n{\r\n    int n,k,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        int m,j,x;\r\n        scanf(\"%d %d\",&m,&k);\r\n        x=k;\r\n        while(m>x)\r\n            x=x+k;\r\n            if(x%m==0)\r\n                printf(\"%d\\n\",x/m);\r\n            else\r\n            printf(\"%d\\n\",x/m+1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n,k,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        int m,j,x;\r\n        scanf(\"%d %d\",&m,&k);\r\n        if(m%k!=0)\r\n        x=(m/k+1)*k;\r\n        else\r\n            x=m;\r\n            if(x%m==0)\r\n                printf(\"%d\\n\",x/m);\r\n            else\r\n            printf(\"%d\\n\",x/m+1);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9672232529375386, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1aee79ee0299e666ba68b3f344313ac0", "bug_code_uid": "c3dce3c58be5387b178493709775b530", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "555551f7fa6963046d120fb0632cd74f", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main() {\n    char s[100000];\n    int i=0,n,c=0,d=0,g1=0,g2=0,j;\n\n    scanf(\"%s\",s);\n    n=strlen(s);\n\n    for (i=0;i<n-1;i++){\n        if((s[i]=='A')&&(s[i+1]=='B')){\n            for (j=i+2;j<n-1;j++){\n                if((s[j]=='B')&&(s[j+1]=='A')){\n                    g1=1;\n                    break;\n                }\n            }\n        }\n        if ((s[i]=='B')&&(s[i+1]=='A')){\n            for (j=i+2;j<n-1;j++){\n                if((s[j]=='A')&&(s[j+1]=='B')){\n                    g2=1;\n                    break;\n                }\n            }\n        }\n        if ((g1==1)||(g2==1)){\n            break;\n        }\n    }\n    if ((g1==1)||(g2==1))\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main(int argc, char** argv) {\n    char s[100001];\n    int i=0,n,c=0,d=0,g1=0,g2=0,j;\n\n    scanf(\"%s\",s);\n    n=strlen(s);\n\n    for (i=0;i<n-1;i++){\n        if((s[i]=='A')&&(s[i+1]=='B')){\n            for (j=i+2;j<n-1;j++){\n                if((s[j]=='B')&&(s[j+1]=='A')){\n                    g1=1;\n                    break;\n                }\n            }\n        }\n        if ((s[i]=='B')&&(s[i+1]=='A')){\n            for (j=i+2;j<n-1;j++){\n                if((s[j]=='A')&&(s[j+1]=='B')){\n                    g2=1;\n                    break;\n                }\n            }\n        }\n        if ((g1==1)||(g2==1)){\n            break;\n        }\n    }\n    if ((g1==1)||(g2==1))\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n\n    return (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.8111675126903554, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "527a3caefcf194842390aeaf7f81c3ed", "bug_code_uid": "a95473005a103a9f3e5b45c2c448c616", "src_uid": "44162a97e574594ac0e598368e8e4e14", "apr_id": "1977d7fb72338368785cabb422df0233", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nvoid countSort(int arr[],int original[], int l,int r,int x,int n)\n{\n    int output[r-l+1];\n\n    int count[10001]={0};\n    int i;\n\n    for(i=l-1; i<r; i++)\n    {\n        count[arr[i]]++;\n    }\n    for(i=0;i<l-1;i++)\n    {\n    \toutput[i]=arr[i];\n    }\n\n    int k=l-1;\n    for(i=0;i<=10001;i++)\n    {\n    \tfor(int j=0;j<count[i];j++)\n    \t{\n    \t\toutput[k++]=i;\n    \t}\n    }\n\tfor(i=r;i<n;i++)\n    {\n    \toutput[i]=arr[i];\n    }\n    // for(i=0;i<n;i++)\n    // {\n    // \tprintf(\"%d \",output[i]);\n    // }\n    if(output[x-1]==original[x-1])\n\t{\n\t\tprintf(\"Yes\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"No\\n\");\n\t}\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint original[10000];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&original[i]);\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tint l,r,x;\n\t\tscanf(\"%d %d %d\",&l,&r,&x);\n\t\tint new[n];\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tnew[j]=original[j];\n\t\t}\n\t\t// qsort(&new[l-1],r-l+1,sizeof(int),cmpfunc);\n\t\tcountSort(new,original,l,r,x,n);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nvoid countSort(int arr[],int original[], int l,int r,int x,int n)\n{\n    int output[n];\n\n    int count[10001]={0};\n    int i;\n\n    for(i=l-1; i<r; i++)\n    {\n        count[arr[i]]++;\n    }\n    for(i=0;i<l-1;i++)\n    {\n    \toutput[i]=arr[i];\n    }\n    int k=l-1;\n    for(i=0;i<10001;i++)\n    {\n    \tfor(int j=0;j<count[i];j++)\n    \t{\n    \t\toutput[k++]=i;\n    \t}\n    }\n\tfor(i=r;i<n;i++)\n    {\n    \toutput[i]=arr[i];\n    }\n    // for(i=0;i<n;i++)\n    // {\n    // \tprintf(\"%d \",output[i]);\n    // }\n    if(output[x-1]==original[x-1])\n\t{\n\t\tprintf(\"Yes\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"No\\n\");\n\t}\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint original[10000];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&original[i]);\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tint l,r,x;\n\t\tscanf(\"%d %d %d\",&l,&r,&x);\n\t\tint new[n];\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tnew[j]=original[j];\n\t\t}\n\t\t// qsort(&new[l-1],r-l+1,sizeof(int),cmpfunc);\n\t\tcountSort(new,original,l,r,x,n);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5912806539509536, "equal_cnt": 28, "replace_cnt": 16, "delete_cnt": 5, "insert_cnt": 7, "fix_ops_cnt": 28, "lang": "GNU C", "fix_code_uid": "e62da95bbc55cabd1b773f39aa267874", "bug_code_uid": "64d7b8a25e75ba21ad9f35d945685387", "src_uid": "9438ce92e10e846dd3ab7c61a1a2e3af", "apr_id": "5efc70dd9793957b3adceb4d36d60c80", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, m, i, j, x, z, l, k, ok, p, y[100];\n    while(scanf(\"%d%d\",&n,&m)==2)\n    {\n        z=1;\n        for(i=1; i<=n; i++)\n        {\n            scanf(\"%d\",&x);\n            for(j=1; j<=x; j++)\n            {\n                scanf(\"%d\",&y[z]);\n                z++;\n            }\n        }\n        p=z-1;\n        for(l=1; l<=m; l++)\n        {\n            ok=0;\n            for(k=1; k<=p; k++)\n            {\n                if(y[k]==l)\n                {\n                    ok++;\n                    break;\n                }\n            }\n            if(ok==0)\n            {\n                break;\n            }\n        }\n        if(ok!=0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int m,n;\n    while(scanf(\"%d%d\",&m,&n)==2)\n    {\n        int num,bulb[100000],check=0,i,j,k=-1;\n        for( i = 1; i<=m; i++)\n        {\n            scanf(\"%d\",&num);\n            for( j = 1; j<=num; j++)\n            {\n                k++;\n                scanf(\"%d\",&bulb[k]);\n            }\n        }\n        for(j=1; j<=n; j++)\n            for(i=0; i<=k; i++)\n            {\n                if(j==bulb[i])\n                {\n                    check++;\n                    break;\n                }\n\n            }\n        if(check == n)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n\n    }\n    return 0;\n}"}
{"similarity_score": 0.4345945945945946, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "c91822aa728f13e15c193c9db7e8ac1c", "bug_code_uid": "59357e8a1d443e474b0bf82f294f1101", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "6f56ff66ebcf32daee577b5fccd1dad7", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,j,max=0;\n    scanf(\"%I64d\",&n);\n    long long int ara[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&ara[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=i;j<n;j++)\n        {\n           if(ara[j]>max)\n            max=ara[j];\n        }\n        if(max-ara[i]==0)\n            printf(\"0 \");\n        else\n            printf(\"%d \",max-ara[i]+1);\n        max=0;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,j,max;\n    scanf(\"%I64d\",&n);\n    long long int ara[n],need[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&ara[i]);\n    }\n    max=ara[n-1];\n    for(i=n-1; i>-1; i--)\n    {\n        if(i==n-1) need[n-1]=0;\n       else if(ara[i]>max)\n        {\n            max=ara[i];\n            need[i]=0;\n\n        }\n        else\n           need[i]=max-ara[i]+1;\n\n    }\n    for(i=0;i<n;i++)\n        printf(\"%I64d \",need[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.9962855963681386, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "eb751ea1322b95b436c2f3fc2d7a939c", "bug_code_uid": "c84cc0e9adde6dd3ff960ddee5ea42af", "src_uid": "a8b4c115bedda3847e7c2e3620e3e19b", "apr_id": "a098cfbfbdc097698986ba584d2fab7b", "difficulty": 1400, "tags": ["two pointers", "sortings", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h> \n\nvoid merge(int a[], int l, int m, int r){\n\tint b[2001], c[2001], i, p = l, q = m + 1;\n\tfor(i = l; i <= m; i++){\n\t\tb[i] = a[i];\n\t}\n\tb[i] = 1000000001;\n\tfor(i = m + 1; i <= r; i++){\n\t\tc[i] = a[i];\n\t}\n\tc[i] = 1000000001;\n\tfor(i = l; i <= r; i++){\n\t\tif(b[p] < c[q]){\n\t\t\ta[i] = b[p++];\n\t\t}\n\t\telse{\n\t\t\ta[i] = c[q++];\n\t\t}\n\t}\n}\n \nvoid merge_sort(int a[], int l, int r){\n\tif(l < r){\n\t\tmerge_sort(a, l, (l + r) / 2);\n\t\tmerge_sort(a, (l + r) / 2 + 1, r);\n\t\tmerge(a, l, (l + r) / 2, r);\n\t}\n}\n\n \nint main(){\n\tint t, n, a[200000], r[1000], x = 0, res, cnt = 0, max = 0, a_max, curr, i;\n\tlong long k;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%d%lld\", &n, &k);\n\t\tfor(i = 0; i < n; i++){\n\t\t\tscanf(\"%d\", &a[i]);\n\t\t\tif(a[i] % k == 0){\n\t\t\t\ta[i] = 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ta[i] = k - a[i] % k;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tmerge_sort(a, 0, n - 1);\n\t\tcurr = a[0];\n\t\tcnt = 1;\n\t\tmax = 1;\n\t\ta_max = 0;\n\t\tfor(i = 1; i < n; i++){\n\t\t\tif(a[i] != 0){\n\t\t\t\tif(a[i] != curr){\n\t\t\t\t\tcurr = a[i];\n\t\t\t\t\tcnt = 1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\tif(cnt >= max){\n\t\t\t\t\tmax = cnt;\n\t\t\t\t\ta_max = curr;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\n\t\t}\n\t\tif(a_max == 0){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"%lld\\n\", (max - 1) * k + a_max + 1);\n\t\t\t\n\t\t\n\t\t\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h> \n\nvoid merge(int a[], int l, int m, int r){\n\tint b[200001], c[200001], i, p = l, q = m + 1;\n\tfor(i = l; i <= m; i++){\n\t\tb[i] = a[i];\n\t}\n\tb[i] = 1000000001;\n\tfor(i = m + 1; i <= r; i++){\n\t\tc[i] = a[i];\n\t}\n\tc[i] = 1000000001;\n\tfor(i = l; i <= r; i++){\n\t\tif(b[p] < c[q]){\n\t\t\ta[i] = b[p++];\n\t\t}\n\t\telse{\n\t\t\ta[i] = c[q++];\n\t\t}\n\t}\n}\n \nvoid merge_sort(int a[], int l, int r){\n\tif(l < r){\n\t\tmerge_sort(a, l, (l + r) / 2);\n\t\tmerge_sort(a, (l + r) / 2 + 1, r);\n\t\tmerge(a, l, (l + r) / 2, r);\n\t}\n}\n\n \nint main(){\n\tint t, n, a[200000], r[1000], x = 0, res, cnt = 0, max = 0, a_max, curr, i;\n\tlong long k;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%d%lld\", &n, &k);\n\t\tfor(i = 0; i < n; i++){\n\t\t\tscanf(\"%d\", &a[i]);\n\t\t\tif(a[i] % k == 0){\n\t\t\t\ta[i] = 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ta[i] = k - a[i] % k;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tmerge_sort(a, 0, n - 1);\n\t\tcurr = a[0];\n\t\tcnt = 1;\n\t\tmax = 1;\n\t\ta_max = curr;\n\t\tfor(i = 1; i < n; i++){\n\t\t\tif(a[i] != 0){\n\t\t\t\tif(a[i] != curr){\n\t\t\t\t\tcurr = a[i];\n\t\t\t\t\tcnt = 1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\tif(cnt >= max){\n\t\t\t\t\tmax = cnt;\n\t\t\t\t\ta_max = curr;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\n\t\t}\n\t\tif(a_max == 0){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"%lld\\n\", (max - 1) * k + a_max + 1);\n\t\t\t\n\t\t\n\t\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9943977591036415, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3899311ab2fb8d3fed65e11c00c7eb43", "bug_code_uid": "310d87c82c3d8b63f1d7683fb2009357", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "68dc74059a78ee59d8de73b8f49f9f37", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, max1, k=0, j=0;\n    scanf(\"%d\",&n);\n    int u[n], i[n];\n    while(k<n)\n    {\n        scanf(\"%d%d\",&i[k],&u[k]);\n        k++;\n    }\n    max1=0;\n\n    while(j<n)\n    {\n        x=x-i[j]+u[j];\n        if(x>max1)\n        {\n            max1=x;\n        }\n        j++;\n    }\n    printf(\"%d\",max1);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, max1, k=0, j=0,x=0;\n    scanf(\"%d\",&n);\n    int u[n], i[n];\n    while(k<n)\n    {\n        scanf(\"%d%d\",&i[k],&u[k]);\n        k++;\n    }\n    max1=0;\n\n    while(j<n)\n    {\n        x=x-i[j]+u[j];\n        if(x>max1)\n        {\n            max1=x;\n        }\n        j++;\n    }\n    printf(\"%d\",max1);\n}\n"}
{"similarity_score": 0.6749792186201163, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "65ca248e7e32518101238bffcea50c12", "bug_code_uid": "95ab356677d9d22ab605f33b6d3371be", "src_uid": "5e2a5ee02c1a2f35a52e76cde96463a3", "apr_id": "3a9a544230150d7166e69e4b397ac0c0", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,x,y;\n\tscanf(\"%d %d %d\",&n,&x,&y);\n\t\n\tint *a=(int *)malloc(n*sizeof(int));\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint t=0;\n\twhile(t<n)\n\t{\n\t\tint c1,c2,k,r;\n\t\tc1=c2=0;\n\t\tif(t>=x)\n\t\t\tk=t-x;\n\t\telse\n\t\t\tk=0;\n\t\tfor(i=k;i<=t-1;i++)\n\t\t\tif(a[t]<a[i])\t\n\t\t\t\tc1++;\n\t\t\n\t\tif(c1==t-k)\n\t\t\tc1=-1;\n\t\tif(n-t<y)\n\t\t\tr=n-1;\n\t\telse\n\t\t\tr=t+y;\n\t\t\n\t\tfor(i=t+1;i<=r;i++)\n\t\t\tif(a[t]<a[i])\n\t\t\t\tc2++;\n\t\t\n\t\tif(c2==r-t)\n\t\t\tc2=-1;\n\t\tif(c1==-1&&c2==-1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",t+1);\n\t\t\tbreak;\n\t\t}\n\t\tt++;\t\n\t\t\n\t}\n\tfree(a);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint max(int a,int b)\n{\n\tif(a>b)\n\treturn a;\n\telse\n\treturn b;\n}\nint min(int a,int b)\n{\n\tif(a<b)\n\treturn a;\n\telse\n\treturn b;\n}\n\nint main()\n{\n\tint n,x,y;\n\tscanf(\"%d %d %d\",&n,&x,&y);\n\t\n\tint *a=(int *)malloc(n*sizeof(int));\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint t=0;\n\twhile(t<n)\n\t{\n\t\tint c1,c2,k,r;\n\t\tc1=c2=0;\n\t\tk=max(t-x,0);\n\t\tfor(i=k;i<=t-1;i++)\n\t\t\tif(a[t]<a[i])\t\n\t\t\t\tc1++;\n\t\t\n\t\tif(c1==t-k)\n\t\t\tc1=-1;\n\t\tr=min(n-1,t+y);\n\t\t\n\t\tfor(i=t+1;i<=r;i++)\n\t\t\tif(a[t]<a[i])\n\t\t\t\tc2++;\n\t\t\n\t\tif(c2==r-t)\n\t\t\tc2=-1;\n\t\tif(c1==-1&&c2==-1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",t+1);\n\t\t\tbreak;\n\t\t}\n\t\tt++;\t\n\t\t\n\t}\n\tfree(a);\n\treturn 0;\n}\n"}
{"similarity_score": 0.5104438642297651, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "53edcb1958f032098715a2caf2deff07", "bug_code_uid": "eb41b8b2c4e62cf086b0ec73fa61e2fd", "src_uid": "b40059fe9cbdb0cc3b64c3e463900849", "apr_id": "d277a640fa090b766925176e55f793fe", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint log(int d){\n    int i = 0;\n    int j;\n    for (j=2;j<=d;j*=2){\n        i+=1;\n\n    }\n    return i;\n}\nint main(){\n    int q;\n\n    scanf(\"%d\",&q);\n    while(q>=1){\n        int i;\n        int n;\n        scanf(\"%d\",&n);\n        int a[n];\n        int b[12];\n        for(i =0 ; i <12 ; i++){\n            b[i]=0;\n        }\n        for ( i = 0 ; i< n ; i++){\n            int d;\n            scanf(\"%d\",&d);\n            b[log(d)]+=1;\n        }\n        int butuh=1;\n        char bol = 0;\n        for(i= 11 ; i>=0 ; i--){\n            if(b[i]>=butuh){\n                bol = 1;\n                break;\n            }\n            butuh=(butuh-b[i])*2;\n\n        }\n        if(bol==1){\n            printf(\"YES\\n\");\n        }else{\n            printf(\"NO\\n\");\n        }\n        q--;\n    }\n\n\nreturn 0;\n\n\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n    int q;\n\n    scanf(\"%d\",&q);\n    while(q>=1){\n        int i;\n        int n;\n        scanf(\"%d\",&n);\n        int a[n];\n        int b[30];\n        for(i =0 ; i <12 ; i++){\n            b[i]=0;\n        }\n        for ( i = 0 ; i< n ; i++){\n            int d;\n            scanf(\"%d\",&d);\n            b[(int)log2(d)]+=1;\n        }\n        int butuh=1;\n        char bol = 0;\n        for(i= 11 ; i>=0 ; i--){\n            if(b[i]>=butuh){\n                bol = 1;\n                break;\n            }\n            butuh=(butuh-b[i])*2;\n\n        }\n        if(bol==1){\n            printf(\"YES\\n\");\n        }else{\n            printf(\"NO\\n\");\n        }\n        q--;\n    }\n\n\nreturn 0;\n\n\n}\n"}
{"similarity_score": 0.8099467140319716, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b46497e2d04f75e619dfb032c73628f2", "bug_code_uid": "775e6e502c955e01f167f6899fb38f68", "src_uid": "28610d192329c78580db354f8dfc4094", "apr_id": "e56ea7b3ec8daec59f20e783b9d76cbd", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <limits.h>\n#include <stdlib.h>\n#define z 1000000007\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int x,y,k;\n        scanf(\"%I64d %I64d %I64d\",&x,&y,&k);\n        x=x-1;\n        long long int totstick=k*(y+1)-1,stp=ceil((double)totstick/x);\n        //printf(\"%I64d\\n\",totstick);\n        //printf(\"%I64d\\n\",stp);\n        if(totstick%x==0)\n            stp=totstick/x;\n        //printf(\"%I64d\\n\",stp);\n        long long int ans=stp+k;\n        printf(\"%I64d\\n\",ans);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <limits.h>\n#include <stdlib.h>\n#define z 1000000007\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int x,y,k;\n        scanf(\"%I64d %I64d %I64d\",&x,&y,&k);\n        x=x-1;\n        long long int totstick=k*(y+1)-1,stp=totstick/x;\n        //printf(\"%I64d\\n\",totstick);\n        //printf(\"%I64d\\n\",stp);\n        if(totstick%x!=0)\n            stp+=1;\n        //printf(\"%I64d\\n\",stp);\n        long long int ans=stp+k;\n        printf(\"%I64d\\n\",ans);\n    }\n}\n"}
{"similarity_score": 0.9443561208267091, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c622e2f4cbc0383c4eca78d9e96607c6", "bug_code_uid": "42513148bd1fc01020dc636bfc23aa5c", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "b5870abc914092000135e2c74532b2c5", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[3];\n    for(int i=0;i<3;i++)\n    {\n        a[i]=0;\n    }\n    int pos=1;\n    for(int i=0;i<n;i++)\n    {\n        int temp;\n        scanf(\"%d\",&temp);\n        if(temp==25)\n        {\n            a[0]++;\n        }\n        else if(temp==50)\n        {\n            if(a[0]>0)\n            {\n                a[0]--;\n                a[1]++;\n            }\n            else\n            {\n                pos = 0;\n                break;\n            }\n        }\n        else\n        {\n            if(a[0]>0 && a[1]>0)\n            {\n                a[0]--;\n                a[1]--;\n                a[2]++;\n            }\n            else\n            {\n                pos = 0;\n                break;\n            }\n        }\n    }\n    if(pos == 0)\n    {\n        printf(\"NO\\n\");\n    }\n    else\n    {\n        printf(\"YES\\n\");\n    }\n    \n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[3];\n    for(int i=0;i<3;i++)\n    {\n        a[i]=0;\n    }\n    int pos=1;\n    for(int i=0;i<n;i++)\n    {\n        int temp;\n        scanf(\"%d\",&temp);\n        if(temp==25)\n        {\n            a[0]++;\n        }\n        else if(temp==50)\n        {\n            if(a[0]>0)\n            {\n                a[0]--;\n                a[1]++;\n            }\n            else\n            {\n                pos = 0;\n                break;\n            }\n        }\n        else\n        {\n            if(a[0]>0 && a[1]>0)\n            {\n                a[0]--;\n                a[1]--;\n                a[2]++;\n            }\n            else if(a[0]>2)\n            {\n                a[0]-=3;\n                a[2]++;\n            }\n            else\n            {\n                pos = 0;\n                break;\n            }\n        }\n    }\n    if(pos == 0)\n    {\n        printf(\"NO\\n\");\n    }\n    else\n    {\n        printf(\"YES\\n\");\n    }\n    \n}"}
{"similarity_score": 0.9012244897959184, "equal_cnt": 22, "replace_cnt": 11, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "087da730f9ec9e89afba34cff53164aa", "bug_code_uid": "37d5ad3981f8f2cd92a9d240ba71214e", "src_uid": "822e8f394a59329fa05c96d7fb35797e", "apr_id": "0c3bc55a044ec1827145f6463849072a", "difficulty": 1100, "tags": ["number theory", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cmpfunction(const void * a, const void * b )\n{\n        return (*(int *a)-*(int *b));\n}\n\nint min(int a,int b)\n{\nif(a<b)return a;\nelse return b;\n}\n\nint main()\n{\nfloat n=0;\nfloat n1=0,n2=0;\nfloat a[100005]={0};\nscanf(\"%f %f %f\",&n,&n1;&n2);\nint i=0;\nint j=0;\nfor(i=0;i<n;i++)\nscanf(\"%f\",&a[i]);\n\nqsort(a,n,sizeof(float),cmpfunction);\nfloat x = min(n1,n2);\nfloat sum=0.00;\nfor(i=0,j=n-1;i<x;i++,j--)\nsum+=a[j];\n\nfloat average=0.0;\naverage = sum / x;\n\nsum = 0.0;\n\nfor(i=0,j=n-x-1;i<n1+n2-x;i++,j--)\nsum+=a[j];\n\naverage = average + (sum/(n1+n2-x));\n\nprintf(\"%f\\n\",average);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmpfunction (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\nint min(int a,int b)\n{\nif(a<b)return a;\nelse return b;\n}\n\nint main()\n{\nint n=0;\nint n1=0,n2=0;\nint a[100005]={0};\nscanf(\"%d %d %d\",&n,&n1,&n2);\nint i=0;\nint j=0;\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\n\nqsort(a,n,sizeof(float),cmpfunction);\nint x = min(n1,n2);\nfloat sum=0.00;\nfor(i=0,j=n-1;i<x;i++,j--)\nsum+=a[j];\n\nfloat average=0.0;\naverage = (float)(sum / x);\n\nsum = 0.0;\n\nfor(i=0,j=n-x-1;i<n1+n2-x;i++,j--)\nsum+=a[j];\n\naverage = average + (float)(sum/(n1+n2-x));\n\nprintf(\"%f\\n\",average);\nreturn 0;\n}"}
{"similarity_score": 0.8343475321162948, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "636faae6057c2905acac6641d2cd16d9", "bug_code_uid": "e67708f7104248c279dc04584ce41bcd", "src_uid": "f82f38972afa33e779c8fb7d34849db7", "apr_id": "7a0d9178a1c52ce68deb168e8f66cd77", "difficulty": 1600, "tags": ["greedy", "graphs", "dsu", "dfs and similar", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\n\n\nint G[26][26] = { 0 };\nbool visit[26] = { false };\n\nvoid DFS_VISIT(int v) {\n\tvisit[v] = true;\n\tfor (int u = 0; u < 26; u++) {\n\t\tif (G[v][u] == 1 && visit[u] == false) \n\t\t\tDFS_VISIT(u);\n\t}\n\treturn;\n}\n\nint main() {\n\t\n\tint n;\n\tchar prvi[100100], drugi[100100];\n\n\tscanf(\"%d\", &n);\n\tscanf(\"%s%s\", prvi, drugi);\n\n\tfor (int i = 0; i < n; i++) G[prvi[i] - 'a'][drugi[i] - 'a'] = G[drugi[i] - 'a'][prvi[i] - 'a'] = 1;\n\n\tint k = 0;\n\tfor (int x = 0; x < 26; x++) {\n\t\tif (!visit[x]) {\n\t\t\tDFS_VISIT(x);\n\t\t\tk++;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", 26 - k);\n\t\n\tfor (int i = 0; i < 26 - k; i++)\n\t\tprintf(\"%c %c\\n\", prvi[i], drugi[i]);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n\n\n\nint G[26][26] = { 0 };\nbool visit[26] = { false };\nchar ispis[200200];\nint numispis = 0;\n\nvoid DFS_VISIT(int v) {\n\t\n\tvisit[v] = true;\n\tfor (int u = 0; u < 26; u++) {\n\t\tif (G[v][u] == 1 && visit[u] == false) {\n\t\t\tispis[numispis++] = v + 'a';\n\t\t\tispis[numispis++] = u + 'a';\n\t\t\tDFS_VISIT(u);\n\t\t}\n\t}\n\treturn;\n}\n\nint main() {\n\t\n\tint n;\n\tchar prvi[100100], drugi[100100];\n\n\tscanf(\"%d\", &n);\n\tscanf(\"%s%s\", prvi, drugi);\n\n\tfor (int i = 0; i < n; i++) G[prvi[i] - 'a'][drugi[i] - 'a'] = G[drugi[i] - 'a'][prvi[i] - 'a'] = 1;\n\n\tint k = 0;\n\tfor (int x = 0; x < 26; x++) {\n\t\tif (!visit[x]) {\n\t\t\tDFS_VISIT(x);\n\t\t\tk++;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", 26 - k);\n\t\n\tnumispis--;\n\twhile (numispis > 0) {\n\t\tprintf(\"%c %c\\n\", ispis[numispis], ispis[numispis - 1]);\n\t\tnumispis -= 2;\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.35570934256055364, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "25ea252c351da39447a0cc036d8212d5", "bug_code_uid": "6f3d28667182d6b60685e03f76d5277d", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "8b385ee2eb4bb8ea0a0d5bdda18fc354", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,count=0,flag;\n    scanf(\"%d\",&n);\n    char s[2*n],a[n];\n    scanf(\"%s\",&s);\n    a[0]='5';\n    a[1]='\\0';\n   // printf(\"n=%d\\n\",strlen(a));\n    for(i=0; s[i]; i+=2)\n    {\n        if(s[i]==s[i+1]+32);\n\n        else\n        {\n            a[strlen(a)]=s[i];\n            a[strlen(a)+1]='\\0';\n           // puts(a);\n            for(j=0; a[j]; j++)\n            {\n                if(a[j]==s[i+1]+32)\n                {\n                    a[j]='5';\n                    flag=0;\n                    break;\n                }\n                else flag=1;\n            }\n            if(flag)count++;\n\n\n\n        }\n        //printf(\"i=%d %d\\n\",i,count);\n    }//puts(a);\n    printf(\"%d\",count);\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,count=0,flag,a[26]= {0};\n    scanf(\"%d\",&n);\n    char s[2*n];\n    scanf(\"%s\",&s);\n\n    // printf(\"n=%d\\n\",strlen(a));\n    for(i=0; s[i]; i+=2)\n    {\n        a[s[i]-'a']++;\n\n\n        //printf(\"mat %d %d\\n\",s[i]-'a',a[s[i]-'a']);\n        if(a[s[i+1]-'a'+32]>0)\n        {\n            a[s[i+1]-'a'+32]--;\n            //printf(\"%c %d \",s[i],a[s[i]-'a']);\n        }\n        else\n        {\n            count++;\n            //printf(\"mat   %c %d\\n\",s[i],a[s[i]-'a']);\n        }\n        //printf(\"%d %d\\n\",s[i]-'a',a[s[i]-'a']);\n\n\n\n\n        //printf(\"i=%d %d\\n\",i,count);\n    }//puts(a);\n\n    printf(\"%d\",count);\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.9958762886597938, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "18299bcfc61499e8ee73862c80e342b0", "bug_code_uid": "a6c6268785d9a0aa30babdc1c6ad2cb5", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "244167bbded0afcf066b8ae320ed9ff1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\t\r\n\tint t;//number of \r\n\tscanf(\"%d\", &t);\r\n\twhile(t--)\r\n{\r\n\t\tint n;//number of pairs;\r\n\t\tscanf(\"%d\", &n);\r\n\r\n\t\tint even=0, odd=0; \r\n\tfor(int i=0;i<2*n;i++)\r\n\t{\r\n\t\t int a;\r\n\t\t scanf(\"%d\", &a);\r\n\t\t if(a%2)\r\n\t\t \todd++;\r\n\t\t else\r\n\t\t \teven++;\r\n\t}\r\n\t\t// check for equal number of even and odd numbers (e.g. even+odd=odd[prefer this] \r\n\t\t// & **even+even=odd+odd= A EVEN NUMBER)\r\n\tif(even==odd)\r\n\t\t\tprintf(\"YES\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\");\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\t\r\n\tint t;//number of \r\n\tscanf(\"%d\", &t);\r\n\twhile(t--)\r\n{\r\n\t\tint n;//number of pairs;\r\n\t\tscanf(\"%d\", &n);\r\n\r\n\t\tint even=0, odd=0; \r\n\tfor(int i=0;i<2*n;i++)\r\n\t{\r\n\t\t int a;\r\n\t\t scanf(\"%d\", &a);\r\n\t\t if(a%2)\r\n\t\t \todd++;\r\n\t\t else\r\n\t\t \teven++;\r\n\t}\r\n\t\t// check for equal number of even and odd numbers (e.g. even+odd=odd[prefer this] \r\n\t\t// & **even+even=odd+odd= A EVEN NUMBER)\r\n\tif(even==odd)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.28905597326649957, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "5a0d14e671bc0164ae695f849c1ce8fb", "bug_code_uid": "2a800e02d56abb1564cb87d4fa9aecb1", "src_uid": "d1d50f0780d5c70e6773d5601d7d41e8", "apr_id": "f631890064e662c205474feaa9515991", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint n,a[51][51],i,j,flag=0,l,m,row,col,count=0,count1=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<n;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(a[i][j]!=1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\trow=i;\n\t\t\t\tcol=j;\n\t\t\t\tfor(l=0;l<n;l++)\n\t\t\t\t{\n\t\t\t\t\tfor(m=0;m<n;m++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[row][l]+a[m][col]==a[i][j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcount1++;\n\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(flag==1)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(count1!=count)\n\t\tprintf(\"No\\n\");\n\telse printf(\"Yes\\n\");\n\treturn 0;\n}\n\t\t\t\t\t\n\t\t\t\t\t\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint n,a[51][51],i,j,flag=0,k,l,m,count=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<n;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tflag=0;\n\t\t\tk=a[i][j];\n\t\t\tif(k!=1)\n\t\t\t{\n\t\t\t\tfor(l=0;l<n;l++)\n\t\t\t\t{\n\t\t\t\t\tfor(m=0;m<n;m++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a[i][l]+a[m][j]==k)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(flag==1)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(k==1)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\tif(count!=n*n)\n\t\tprintf(\"No\\n\");\n\telse printf(\"Yes\\n\");\n\treturn 0;\n}\n\t\t\t\t\t\n\t\t\t\t\t\n\n"}
{"similarity_score": 0.967032967032967, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "63a5b8323a540327efbfa840dce6bd34", "bug_code_uid": "5a413c039f3a0fe2a8ef1cec401adf1c", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "525cb521218ac92e4057218a4b5e5e47", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n\tclrscr();\n\tint n,a,b,c,i=0;\n\tscanf(\"%d\",&n);\n\ta=n/2;\n\tb=2;\n\tc=3;\n\tif(n%2==0)\n\t{\n\t\tprintf(\"%d\\n\",a);\n\t\tfor(i=0;i<(a-1);i++)\n\t\t\tprintf(\"%d \",b);\n\t\tprintf(\"%d\",b);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",a);\n\t\tfor(i=0;i<(a-1);i++)\n\t\t\tprintf(\"%d \",b);\n\t\tprintf(\"%d\",c);\n\t}\n\tgetch();\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n\tint n,a,b,c,i=0;\n\tscanf(\"%d\",&n);\n\ta=n/2;\n\tb=2;\n\tc=3;\n\tif(n%2==0)\n\t{\n\t\tprintf(\"%d\\n\",a);\n\t\tfor(i=0;i<(a-1);i++)\n\t\t\tprintf(\"%d \",b);\n\t\tprintf(\"%d\",b);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",a);\n\t\tfor(i=0;i<(a-1);i++)\n\t\t\tprintf(\"%d \",b);\n\t\tprintf(\"%d\",c);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.3137254901960784, "equal_cnt": 8, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fba3eb0f75095dcdf10c108a1bc33fc4", "bug_code_uid": "cc554bedc812af852236695aac131c12", "src_uid": "c9744e25f92bae784c3a4833c15d03f4", "apr_id": "4ef0de77472f1ce86922c828835e32ec", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint kt1(int a[],int n){\n\tfor (int i=0;i<n-1;i++){\n\t\tif (a[i]>=a[i+1]) return 0;\n\t}\n\treturn 1;\n}\nint kt2(int a[],int n){\n\tfor (int i=0;i<n-1;i++){\n\t\tif (a[i]<=a[i+1]) return 0;\n\t}\n\treturn 1;\n}\nvoid swap(int &a,int &b){\n\tint tmp=a;\n\ta=b;\n\tb=tmp;\n}\nvoid doicho(int a[], int m, int n){\n\tint j,i;\n\tfor ( i=m,j=0;i<=(n+m)/2;i++,j++){\n\t\tswap(a[i],a[n-j]);\n\t}\n}\n\nint main(){\n\tint n,x,y;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor (int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tif (kt1(a,n)) {\n\t\tprintf(\"yes\\n\");\n\t\tprintf(\"1 1\");\n\t}\n\telse if (kt2(a,n)) printf(\"yes\\n1 %d\",n);\n\telse {\n\t\tfor (int i=0;i<n;i++)\n\t\t    if (a[i]>a[i+1]) {x=i;break;}\n\t\tfor (int j=n-1;j>=0;j--)\n\t\t    if (a[j]<a[j-1])  {y=j;\n\t\t    break;\n\t\t\t} \n\t\tdoicho(a,x,y);\n\t\tif (kt1(a,n)) {\n\t\t\tprintf(\"yes\\n\");\n\t\t\tprintf(\"%d %d\",x+1,y+1);\n\t\t}\n\t\telse printf(\"no\");\t \n\t\t}\n\t\t\n\t\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint kt1(int a[],int n){\n\tfor (int i=0;i<n-1;i++){\n\t\tif (a[i]>=a[i+1]) return 0;\n\t}\n\treturn 1;\n}\nint kt2(int a[],int n){\n\tfor (int i=0;i<n-1;i++){\n\t\tif (a[i]<=a[i+1]) return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tint n,x,y;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor (int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tif (kt1(a,n)) {\n\t\tprintf(\"yes\\n\");\n\t\tprintf(\"1 1\");\n\t}\n\telse if (kt2(a,n)) printf(\"yes\\n1 %d\",n);\n\telse {\n\t\tfor (int i=0;i<n;i++)\n\t\t    if (a[i]>a[i+1]) {x=i;break;}\n\t\tfor (int j=n-1;j>=0;j--)\n\t\t    if (a[j]<a[j-1])  {y=j;\n\t\t    break;\n\t\t\t} \n\t\t// doi cho\n\t\tfor (int i=x,j=0;i<=(x+y)/2;i++,j++){\n\t\t\tint tmp=a[i];\n\t\t\ta[i]=a[y-j];\n\t\t\ta[y-j]=tmp;\n\t\t}\n\t\tif (kt1(a,n)) {\n\t\t\tprintf(\"yes\\n\");\n\t\t\tprintf(\"%d %d\",x+1,y+1);\n\t\t}\n\t\telse printf(\"no\");\t \n\t\t}\n\t\t\n\t\n}"}
{"similarity_score": 0.99721059972106, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "080043cd7f6276280a585f4aaf0f5ddf", "bug_code_uid": "e4654386ba2af464b9b053710f2af023", "src_uid": "653455bb6762effbf7358d75660a7689", "apr_id": "e54502dd30081010a53e7a1c71c709e6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    if (n>2 && a[n-1]==0){\n            for(i=n-2;i>=1;--i)\n            {\n                int j=0;\n                if(a[i]==1){\n                    printf(\"\\n%d\",i+1);\n                    j=1;\n                    break;\n                }\n            }\n    }\n    else if (n>2 && a[n-1]==1){\n        for(i=n-2;i>=2;--i)\n            {\n                int j=0;\n                if(a[i]==0){\n                    printf(\"\\n%d\",i+1);\n                    j=1;\n                    break;\n                }\n        }\n    }\n    else if (n==2)\n        printf(\"1\");\n    else\n        printf(\"Error\");\n\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    if (n>2 && a[n-1]==0){\n            for(i=n-2;i>=0;--i)\n            {\n                int j=0;\n                if(a[i]==1){\n                    printf(\"\\n%d\",i+1);\n                    j=1;\n                    break;\n                }\n            }\n    }\n    else if (n>2 && a[n-1]==1){\n        for(i=n-2;i>=0;--i)\n            {\n                int j=0;\n                if(a[i]==0){\n                    printf(\"\\n%d\",i+1);\n                    j=1;\n                    break;\n                }\n        }\n    }\n    else if (n==2)\n        printf(\"1\");\n    else\n        printf(\"Error\");\n\n}\n"}
{"similarity_score": 0.9838056680161943, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "bf5fac8f2c4499f1e5af9d16fb37e3a6", "bug_code_uid": "bb6d3f5d4ede003251f9c93385b17452", "src_uid": "1f29461c42665523d0a4d56b13f7e480", "apr_id": "2dcc81c31ab9b74c9bd762a92e55c721", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int t,i,j,sum,a[3],min,max,l,p,q;\n\tscanf(\"%lld\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%lld\",&a[0]);\n\t\tmin=a[0];\n\t\tmax=a[0];\n\t\tfor(j=1;j<3;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&a[j]);\n\t\t\tif(min>a[j])\n\t\t\t{\n\t\t\t\tmin=a[j];\n\t\t\t}\n\t\t\telse if(max<a[j])\n\t\t\t{\n\t\t\t\tmax=a[j];\n\t\t\t}\n\t\t}\n\t\tl=a[0]+a[1]+a[2]-max-min;\n\t\tif(min+l<max+1)\n\t\t{\n\t\t\tsum=min+l;\n\t\t}\n\t\telse if(min+l==max+1)\n\t\t{\n\t\t\tsum=min+l-1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum=max+min/2;\n\t\t}\n\t\tprintf(\"%lld\\n\",sum);\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int t,i,j,sum,a[3],min,max,l,p,q;\n\tscanf(\"%lld\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%lld\",&a[0]);\n\t\tmin=a[0];\n\t\tmax=a[0];\n\t\tfor(j=1;j<3;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&a[j]);\n\t\t\tif(min>a[j])\n\t\t\t{\n\t\t\t\tmin=a[j];\n\t\t\t}\n\t\t\telse if(max<a[j])\n\t\t\t{\n\t\t\t\tmax=a[j];\n\t\t\t}\n\t\t}\n\t\tl=a[0]+a[1]+a[2]-max-min;\n\t\tif(min+l<max+1)\n\t\t{\n\t\t\tsum=min+l;\n\t\t}\n\t\telse if(min+l==max+1)\n\t\t{\n\t\t\tsum=min+l-1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum=max+(min+l-max)/2;\n\t\t}\n\t\tprintf(\"%lld\\n\",sum);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9896193771626297, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "76221ea74c3dad2f938e2ff054406fc0", "bug_code_uid": "f1c95fa843e2cf84910327cb694dcfa1", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "7a2dba0a923611478fc40f650a734b4d", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int T,a,i,c,j,k,l,m,f,X,Z,b,n,V;\n\tscanf(\"%lld\",&T);\n\twhile(T!=0)\n\t{\n\t\tV=0;\n\t\tX=0;\n\t\tc=2;\n\t\tscanf(\"%lld %lld\",&n,&b);\n\t\tfor(i=1;i<=b;i++)\n\t\t{\n        if(b<=c)\n\t\t{\n\t\t\tfor(j=0;j<(n-2-i);j++)\n\t\t\t{\n\t\t    printf(\"a\");\t\t\n\t\t\t}\t\n\t\t\tif(b==c)\n\t\t\t{\n\t\t     \tprintf(\"b\");\n\t\t        for(k=0;k<i;k++)\n\t\t        printf(\"a\");\n\t\t        printf(\"b\\n\");\n\t\t        break;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    Z=n-2-i;\n\t\t\t    if(Z>=0)\n\t\t\t    printf(\"ab\");\n\t\t\t    else\t\t\n\t\t\t    printf(\"b\");\n\t        \tfor(l=1;l<(c-X);l++)\n\t\t\t    {\n\t\t\t    if(X+l==b)\n\t\t\t    {\n\t\t\t    for(m=0;m<(i-1-l);m++)\n\t\t\t    printf(\"a\");\n\t\t     \tprintf(\"b\");\n\t\t\t    if(b!=1)\n\t\t\t    {\n\t\t         \tfor(f=0;f<l;f++)\t\n\t\t\t        printf(\"a\");\n\t\t\t        ++V;\n\t\t\t        break;\n\t\t        } \n\t\t\t    }\t\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\tif(V>0)\n\t\tbreak;\n\t\tX=c;\t\t\n\t\tc=c+(i+1);\t\n\t\t}\n\t\t--T;\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int T,a,i,c,j,k,l,m,f,X,Z,b,n,V;\n\tscanf(\"%lld\",&T);\n\twhile(T!=0)\n\t{\n\t\tV=0;\n\t\tX=0;\n\t\tc=2;\n\t\tscanf(\"%lld %lld\",&n,&b);\n\t\tfor(i=1;i<=b;i++)\n\t\t{\n        if(b<=c)\n\t\t{\n\t\t\tfor(j=0;j<(n-2-i);j++)\n\t\t\t{\n\t\t    printf(\"a\");\t\t\n\t\t\t}\t\n\t\t\tif(b==c)\n\t\t\t{\n\t\t     \tprintf(\"b\");\n\t\t        for(k=0;k<i;k++)\n\t\t        printf(\"a\");\n\t\t        printf(\"b\");\n\t\t        break;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    Z=n-2-i;\n\t\t\t    if(Z>=0)\n\t\t\t    printf(\"ab\");\n\t\t\t    else\t\t\n\t\t\t    printf(\"b\");\n\t        \tfor(l=1;l<(c-X);l++)\n\t\t\t    {\n\t\t\t    if(X+l==b)\n\t\t\t    {\n\t\t\t    for(m=0;m<(i-1-l);m++)\n\t\t\t    printf(\"a\");\n\t\t     \tprintf(\"b\");\n\t\t\t    if(b!=1)\n\t\t\t    {\n\t\t         \tfor(f=0;f<l;f++)\t\n\t\t\t        printf(\"a\");\n\t\t\t        ++V;\n\t\t\t        break;\n\t\t        } \n\t\t\t    }\t\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\tif(V>0)\n\t\tbreak;\n\t\tX=c;\t\t\n\t\tc=c+(i+1);\t\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t--T;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9954128440366973, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "58ccb407d2781d196e76b2f0471c273f", "bug_code_uid": "37206bb023730f4f2f9567dbfa087129", "src_uid": "1e107d9fb8bead4ad942b857685304c4", "apr_id": "9e3ebf16d9d58ff7928b11c4597567de", "difficulty": 1300, "tags": ["greedy", "games", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,min='z';\n\tchar ch[500000];\n\tscanf(\"%s\",ch);\n\twhile(ch[i]!='\\0')\n\t{\n\t\tif(ch[i]>min)\n\t\t\tprintf(\"Ann\\n\");\n\t\telse\n\t\t{\n\t\t\tprintf(\"Mike\\n\");\n\t\t\tmin=ch[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i=0,min='z';\n\tchar ch[500000];\n\tscanf(\"%s\",ch);\n\twhile(ch[i]!='\\0')\n\t{\n\t\tif(ch[i]>min)\n\t\t\tprintf(\"Ann\\n\");\n\t\telse\n\t\t{\n\t\t\tprintf(\"Mike\\n\");\n\t\t\tmin=ch[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn 0;\n}\n\n\n\n"}
{"similarity_score": 0.9534246575342465, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b9ee49c217d334e82bf0e169b40ad1ac", "bug_code_uid": "7283350ce11ee58c25e8d5b67281ab9b", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "734e43104ba0927d1f6b8b8e095a6cdd", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\ntypedef long long ll;\nint main (void)\n{\n\tint t,flag;\n\tscanf(\"%d\",&t);\n\twhile (t--) {\n\t\tll n;\n\t\tscanf(\"%lld\",&n);\n\t\tll i,j,k,a,b,c;\n\t\tflag=0;\n\t\tfor (i=2;i<=n/4;i++) {\n\t\t\tif (n%i==0) {\n\t\t\t\ta=i;\n\t\t\t\tfor (i++;i<=n/4;i++) {\n\t\t\t\t\tif (n%(a*i)==0) {\n\t\t\t\t\t\tb=i;\n\t\t\t\t\t\tc=n/a/b;\n\t\t\t\t\t\tif (c!=a && c!=b && a!=b && c>=2) {\n\t\t\t\t\t\t\tprintf (\"YES\\n%lld %lld %lld\",a,b,c);\n\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag) break;\n\t\t}\n\t\tif (!flag) {\n\t\t\tprintf (\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n} \n", "fixed": "#include <stdio.h>\n#include <math.h>\n\ntypedef long long ll;\nint main (void)\n{\n\tint t,flag;\n\tscanf(\"%d\",&t);\n\twhile (t--) {\n\t\tll n;\n\t\tscanf(\"%lld\",&n);\n\t\tll i,j,k,a,b,c;\n\t\tflag=0;\n\t\tll jie=sqrt(n);\n\t\tfor (i=2;i<=jie;i++) {\n\t\t\tif (n%i==0) {\n\t\t\t\ta=i;\n\t\t\t\tjie=sqrt(n/a);\n\t\t\t\tfor (i++;i<=jie;i++) {\n\t\t\t\t\tif (n%(a*i)==0) {\n\t\t\t\t\t\tb=i;\n\t\t\t\t\t\tc=n/a/b;\n\t\t\t\t\t\tif (c!=a && c!=b && a!=b && c>=2) {\n\t\t\t\t\t\t\tprintf (\"YES\\n%lld %lld %lld\\n\",a,b,c);\n\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag) break;\n\t\t}\n\t\tif (!flag) {\n\t\t\tprintf (\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n} \n"}
{"similarity_score": 0.7005988023952096, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "0450ddaf240c13df3fdaf8ed64d905db", "bug_code_uid": "862ed5591249419899ed7d022e31bd9f", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "8ed1ed7751bb60d885e09bf6eaad708f", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(){\n\tint n , a = 0 , d = 0 ;\n\tscanf(\"%d\" ,&n) ;\n\tfor(int i = 0 ; i < n ;i++){\n\t\tchar c ;\n\t\tscanf(\"%c\" ,&c) ;\n\t\tif(c == 'A') a++ ;\n\t\telse d++ ;\n\t}\n\tif(a > d) printf(\"Anton\\n\") ;\n\telse if(d > a) printf(\"Danik\\n\") ;\n\telse printf(\"Friendship\\n\") ;\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\tchar game ; \n\tint n , anton = 0 , danik = 0 ;\n\tscanf(\"%d\\n\" ,&n) ;\n\tfor(int i = 1 ; i <= n ;i++){\n\t\tscanf(\"%c\" ,&game) ;\n\t\tif(game == 'A')\n\t\t\tanton++ ;\n\t\telse \n\t\t\tdanik++ ;\n\t}\n\n\tif(anton > danik) \n\t\tprintf(\"Anton\\n\");\n\telse if(danik > anton)\n\t\tprintf(\"Danik\\n\");\n\telse\n\t\tprintf(\"Friendship\\n\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.8895184135977338, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "59eb6e8dc958cabd1bf8a7462ec11f32", "bug_code_uid": "c1f9bbf831e0687a33361cd8663fbfd2", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "c2edb495b3a9a5a939b836e9f06dc36a", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//260boredom\n#include<stdio.h>\n#define max(a,b) ((a)>(b)?(a):(b))\nint main()\n{\n  int n,i;\n  scanf(\"%d\",&n);\n  int a[n],h[100010]={0},dp[100010]={0};\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%d\",a+i);\n    h[a[i]]++;\n  }\n  dp[0]=0;  dp[1]=h[1];\n  for(i=2;i<100010;i++)\n    dp[i]=max(dp[i-1],dp[i-2] + i*h[i]);\n  printf(\"%d\\n\",dp[100008]);\n  return 0;\n}\n", "fixed": "//260boredom\n#include<stdio.h>\n#define max(a,b) ((a)>(b)?(a):(b))\n#define ll long long\nint main()\n{\n  ll n,i;\n  scanf(\"%lld\",&n);\n  ll a,h[100010]={0},dp[100010]={0};\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%lld\",&a);\n    h[a]++;\n  }\n  dp[0]=0;  dp[1]=h[1];\n  for(i=2;i<100010;i++)\n    dp[i]=max(dp[i-1],dp[i-2] + i*h[i]);\n  printf(\"%lld\\n\",dp[100008]);\n  return 0;\n}\n"}
{"similarity_score": 0.9914651493598862, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2044832851f2ba0a8d38cf1101ce3f0c", "bug_code_uid": "7f45e097db78a4329f3dee722b4cb397", "src_uid": "33a31edb75c9b0cf3a49ba97ad677632", "apr_id": "f35c3fb4ad8058ce46142c1d71e866be", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint square(int x){\n    int m = 0;\n    for(int i = 0; i< pow(x,0.5)+2; i++){\n        if(x == i*i){\n            m = 1;\n            break;\n        }\n    }\n    if(m ==1){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n\n}\nint main(){\n    int n,t;\n    int A[101][101];\n    scanf(\"%d\", &t);\n    for(int i = 0; i< t; i++){\n        scanf(\"%d\", &n);\n        for(int j = 0; j <n; j++){\n            scanf(\"%d \", &A[i][j]);\n        }\n    }\n\nint check[t+1];\nfor(int i = 0; i<t; i++){\n    check[i] = 1;\n    for(int k = 0; k <n; k++){\n        check[i] = check[i]*square(A[i][k]);\n    }\n    if(check[i] == 0){\n        printf(\"YES\\n\");\n    }\nelse{\n    printf(\"NO\\n\");\n}\n}\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint square(int x){\n    int m = 0;\n    for(int i = 0; i< pow(x,0.5)+2; i++){\n        if(x == i*i){\n            m = 1;\n            break;\n        }\n    }\n    if(m ==1){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n\n}\nint main(){\n    int n,t;\n    int A[105][105];\n    scanf(\"%d\", &t);\n    for(int i = 0; i< t; i++){\n        scanf(\"%d\", &n);\n        for(int j = 0; j <n; j++){\n            scanf(\"%d \", &A[i][j]);\n        }\n    }\n\nint check[t+5];\nfor(int i = 0; i<t; i++){\n    check[i] = 1;\n    for(int k = 0; k <n; k++){\n        check[i] = check[i]*square(A[i][k]);\n    }\n    if(check[i] == 0){\n        printf(\"YES\\n\");\n    }\nelse{\n    printf(\"NO\\n\");\n}\n}\n}"}
{"similarity_score": 0.9818181818181818, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1c280968d286a4e84439177aea84fac2", "bug_code_uid": "375987b5e77d9df927dd2c60624e9ec8", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "5850aff2161f368e762b10bb8c77a5f2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0,d=0,a,b,e=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        if(a>b)\n            c=c+1;\n        else if(a<b)\n            d=d+1;\n        else\n            e=e+1;\n    }\n    if(c<d && d>e)\n        printf(\"Chris\");\n    else if(d<c && c>e)\n        printf(\"Mishka\");\n    else\n        printf(\"Friendship is magic!^^\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,c=0,d=0,a,b,e=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        if(a>b)\n            c=c+1;\n        else if(a<b)\n            d=d+1;\n        else\n            e=e+1;\n    }\n    if(c<d)\n        printf(\"Chris\");\n    else if(d<c)\n        printf(\"Mishka\");\n    else\n        printf(\"Friendship is magic!^^\");\n}\n"}
{"similarity_score": 0.9767441860465116, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "c068e16592d150604bfffef4468d18fd", "bug_code_uid": "5b5c86f4f745e90aba050df26773d0c3", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "f64d859e07eff7f1a3b417e4bcae12e5", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,a,b,c,i,d,e;\n    e=0;\n    scanf(\"%d\",&n);\n    d=a+b+c;\n    for(i=0;i=<n;i++){\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        scanf(\"%d\",&c);\n         if(d>=2){\n        e+1;\n    }\n    }\n    printf(\"%d\",&e);\n    \n   \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,a,b,c,i,d,e;\n    e=0;\n    scanf(\"%d\",&n);\n    d=a+b+c;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        scanf(\"%d\",&c);\n         if(a+b+c>1){\n        e++;\n    }\n    }\n    printf(\"%d\",e);\n    \n   \n    return 0;\n}"}
{"similarity_score": 0.9951923076923077, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2348d7ac289c630e8850533583ad3b53", "bug_code_uid": "c1bb8bf7e336986e48a9742e56ead4b1", "src_uid": "ab7ab67941783da5c16f6294eb1910d9", "apr_id": "682d12ee9fa198c411bbaae9889b8eac", "difficulty": 800, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define SIZE 50\r\nint main()\r\n{\r\n   int i,t;\r\n   scanf(\"%d\",&t);\r\n   for(i=0;i<t;i++)\r\n   {\r\n       int n,a[SIZE],p,q,temp;\r\n       scanf(\"%d\",&n);\r\n       for(p=0;p<n;p++)\r\n       scanf(\"%d\",&a[p]);\r\n   for(p=0;p<n;p++)\r\n   {\r\n       for(q=0;q<n-p-1;q++)\r\n       {\r\n           if(a[q]>a[q+1])\r\n           {\r\n               temp=a[q];\r\n               a[q]=a[q+1];\r\n               a[q+1]=temp;\r\n           }\r\n       }\r\n   }\r\n   int r=n;\r\n   for(p=0;p<n-1;p++)\r\n   {\r\n       if(a[p]==a[p+1])\r\n       r--;\r\n       else continue;\r\n   }\r\n   if(n%2==1)\r\n   r=r-1;\r\n   printf(\"%d\\n\",r);\r\n   }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#define SIZE 50\r\nint main()\r\n{\r\n   int i,t;\r\n   scanf(\"%d\",&t);\r\n   for(i=0;i<t;i++)\r\n   {\r\n       int n,a[SIZE],p,q,temp;\r\n       scanf(\"%d\",&n);\r\n       for(p=0;p<n;p++)\r\n       scanf(\"%d\",&a[p]);\r\n   for(p=0;p<n;p++)\r\n   {\r\n       for(q=0;q<n-p-1;q++)\r\n       {\r\n           if(a[q]>a[q+1])\r\n           {\r\n               temp=a[q];\r\n               a[q]=a[q+1];\r\n               a[q+1]=temp;\r\n           }\r\n       }\r\n   }\r\n   int r=n;\r\n   for(p=0;p<n-1;p++)\r\n   {\r\n       if(a[p]==a[p+1])\r\n       r--;\r\n       else continue;\r\n   }\r\n   if((n-r)%2==1)\r\n   r=r-1;\r\n   printf(\"%d\\n\",r);\r\n   }\r\n    return 0;\r\n}"}
{"similarity_score": 0.27882960413080893, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "2c6f01ab6c347d5c81c3377dd89bd4fd", "bug_code_uid": "ef54cf0e58afedc08b779712788803d9", "src_uid": "adf024899fb2a684427463733358566a", "apr_id": "813c115c7ea9784da4c29fcedccaea5c", "difficulty": 800, "tags": ["constructive algorithms", "games", "math", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define INSIZE (11 * 1000 + 6)\n\nint\nmain(void)\n{\n\tint cases = 0;\n\tint min;\n\tchar *input;\n\tchar *inpointer;\n\n\tinput = calloc(INSIZE, sizeof(input[0]));\n\tfread(input, 1, INSIZE, stdin);\n\n\tinpointer = input;\n\twhile (*inpointer != '\\n')\n\t\tcases = cases * 10 + *(inpointer++) - '0';\n\n\twhile (cases--) {\n\t\tinpointer++;\n\t\tif (*(inpointer+2) != 0 && *(inpointer+2) == '\\n') {\n\t\t\tprintf(\"%d\\n\", *(++inpointer) - '0');\n\t\t\tinpointer++;\n\t\t\tcontinue;\n\t\t}\n\t\tmin = *inpointer - '0';\n\t\twhile (*(++inpointer) != '\\n' && *inpointer != 0) {\n\t\t\tif (*inpointer - '0' < min)\n\t\t\t\tmin = *inpointer - '0';\n\t\t}\n\t\tprintf(\"%d\\n\", min);\n\t}\n\n\tfree(input);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define INSIZE (11 * 1000 + 6)\n\nint\nmain(void)\n{\n\tint cases = 0;\n\tint min;\n\tint i;\n\tchar num[11];\n\n\tscanf(\"%d\", &cases);\n\n\tfgets(num, sizeof(num), stdin);\n\twhile (cases--) {\n\t\tfgets(num, sizeof(num), stdin);\n\t\tif (num[1] != '\\n' && num[2] == '\\n') {\n\t\t\tprintf(\"%d\\n\", num[1] - '0');\n\t\t\tcontinue;\n\t\t}\n\t\tmin = num[0];\n\t\tfor (i = 1; num[i] != '\\n'; ++i) {\n\t\t\tif (num[i] < min)\n\t\t\t\tmin = num[i];\n\t\t}\n\t\tprintf(\"%d\\n\", min - '0');\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.7052401746724891, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "8e24aeeb3e0ba15f806d73c456da0166", "bug_code_uid": "5320983a8f3a1f058056b6a0e9b25ff0", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "8a55c83ef8e7739baa372bf994cf2b13", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,i,sum=0,r,j,temp;\n\tscanf(\"%I64d\",&n);\n\tlong long int a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tsum=sum+a[i];\n\t}\n\tif(sum%2==0)\n\t{\n\t\tprintf(\"%I64d\\n\",sum);\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=i+1;j<n;j++)\n\t\t\t{\n\t\t\t\tif(a[i]>a[j])\n\t\t\t\t{\n\t\t\t\t\ttemp=a[i];\n\t\t\t\t\ta[i]=a[j];\n\t\t\t\t\ta[j]=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[i]%2!=0)\n\t\t\t{\n\t\t\t\tr=a[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%I64d\\n\",sum-r);\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,i,sum=0,smallest,j,temp;\n\tscanf(\"%I64d\",&n);\n\tlong long int a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tsum=sum+a[i];\n\t}\n\tif(sum%2==0)\n\t{\n\t\tprintf(\"%I64d\\n\",sum);\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[i]%2!=0)\n\t\t\t{\n\t\t\t\tsmallest=a[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(smallest>a[i] && a[i]%2!=0)\n\t\t\t{\n\t\t\t\tsmallest=a[i];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%I64d\\n\",sum-smallest);\n\t}\n}\n"}
{"similarity_score": 0.23013698630136986, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "c0b0d231fdd4433bad039e063d307e99", "bug_code_uid": "d6883578de2eda10fd748a8c9ca7cbf2", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "afd62724db704416bb85e039f141a30f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\nint n,cap[1001],max=0;\nint bubble(int cap[1001])\n{\n\tint j=1;\n\twhile(j<=n){\n\t\tif(cap[j]>max){\n\t\t\tmax=cap[j];\n\t\t}\n\t\tj++;\n\t}\n\treturn max;\n}\n\t\t\t\n//*************************************\nint main()\n{\n\tint a[1001],b[1001],i,z;\n\tcap[0]=0;\n\tscanf(\"%d\",&n);\n\tz=n;\n\twhile(z>0){\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\tcap[i]=cap[i-1]-a[i]+b[i];\n\t\tz--;\n\t}\n\tprintf(\"%d\",max);\n\tbubble(cap[1001]);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <conio.h>\nint n,cap[1001],max=0;\nint main()\n{\n\tint a[1001],b[1001],i;\n\tcap[0]=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=1001;i++){\n\t\ta[i]=0;\n\t\tb[i]=0;\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\tcap[i]=cap[i-1]-a[i]+b[i];\n\t\tif(cap[i]>max){\n\t\t\tmax=cap[i];\n\t\t}\n\t\tn--;\n\t}\n\tprintf(\"%d\",max);\n\treturn 0;\n}"}
{"similarity_score": 0.9586016559337627, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "cf7bedcce3f6cacdc1f37a8879cc01df", "bug_code_uid": "8c5fc156d9cffeb7966a5820b2b66c00", "src_uid": "d55afdb4a83aebdfce5a62e4ec934adb", "apr_id": "cb06061dbc63c3c77f37d94b95d9d3d6", "difficulty": 1600, "tags": ["greedy", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \r\nint a[100005];\r\nint gcd(int a,int b){\r\n\tif(b==0){\r\n\t\treturn a;\r\n\t}\r\n\telse{\r\n\t\treturn gcd(b,a%b);\r\n\t}\r\n}\r\nint main(void){\r\n\tint n;\r\n\tint i;\r\n\tlong long sum=1;\r\n\tint count=0;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=1;i<=n;i++){\r\n\t\tif(gcd(n,i)==1){\r\n\t\t\tsum*=i;\r\n\t\t\tcount++;\r\n\t\t\ta[i]=1;\r\n\t\t}\r\n\t}\r\n\tif(sum%n==1){\r\n\t\tprintf(\"%d\\n\",count);\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tif(a[i]){\r\n\t\t\t\tprintf(\"%d \",i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse{\r\n\t\tprintf(\"%d\\n\",count-1);\r\n\t\ta[sum%n]=0;\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tif(a[i]){\r\n\t\t\t\tprintf(\"%d \",i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h> \r\nint a[100005];\r\nint gcd(int a,int b){\r\n\tif(b==0) return a;\r\n\telse return gcd(b,a%b);\r\n}\r\nint main(void){\r\n\tint n;\r\n\tint i;\r\n\tlong long sum=1;\r\n\tint count=0;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=1;i<=n;i++){\r\n\t\tif(gcd(n,i)==1){\r\n\t\t\tsum=sum%n*i;\r\n\t\t\tcount++;\r\n\t\t\ta[i]=1;\r\n\t\t}\r\n\t}\r\n\tif(sum%n==1){\r\n\t\tprintf(\"%d\\n\",count);\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tif(a[i]){\r\n\t\t\t\tprintf(\"%d \",i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse{\r\n\t\tprintf(\"%d\\n\",count-1);\r\n\t\ta[sum%n]=0;\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tif(a[i]){\r\n\t\t\t\tprintf(\"%d \",i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9851632047477745, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "92d58f198cd87afff65435b89533c507", "bug_code_uid": "19c78a53851b0c44a914aef1db186960", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "4959b11455d840b0396476dc0031a153", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(void){\n    int n;\n    int x,y,z,sumX=0,sumY=0,sumZ=0;\n    scanf(\"%d\",&n);\n \n    while(n--){\n        scanf(\"%d%d%d\",&x,&y,&z);\n        sumX+=x;\n        sumY+=y;\n        sumZ+=z;\n    }\n\n    if(sumX==sumY & sumX==sumZ){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(void){\n    int n;\n    int x,y,z,sumX=0,sumY=0,sumZ=0;\n    scanf(\"%d\",&n);\n \n    while(n--){\n        scanf(\"%d%d%d\",&x,&y,&z);\n        sumX+=x;\n        sumY+=y;\n        sumZ+=z;\n    }\n\n    if(sumX==sumY & sumX==sumZ & sumX==0){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n\n}\n"}
{"similarity_score": 0.23925233644859814, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "320c266ff9ed025516c7044fea7d9415", "bug_code_uid": "93c891a64fa2ddaa4c9e916a8ef648d1", "src_uid": "b856eafe350fccaabd39b97fb18d9c2f", "apr_id": "c2ff2a221680d154deedd32f63729f91", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n    long long n;\r\n    scanf(\"%lld\",&n);\r\n    while(n--) {\r\n        long long m,max1=0,max2=0;\r\n        scanf(\"%lld\",&m);\r\n        long long a[m];\r\n        for(int i=0;i<m;i++)\r\n            scanf(\"%lld\",&a[i]);\r\n        for(int i=0;i<m;i++)\r\n            if(max1<a[i])\r\n                max1=a[i];\r\n        for(int i=0;i<m;i++)\r\n            if(max1==a[i]) {\r\n                a[i]=0;\r\n                break;\r\n            }\r\n        for(int i=0;i<m;i++)\r\n            if(max2<a[i])\r\n                max2=a[i];\r\n        printf(\"%lld\",max1+max2);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\nint main() {\r\n\tlong long n;\r\n\tscanf(\"%lld\",&n);\r\n\twhile(n--) {\r\n\t\tlong long m,max1=0,max2=0;\r\n\t\tscanf(\"%lld\",&m);\r\n\t\tlong long a[m+1];\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t\tscanf(\"%lld\",&a[i]);\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t\tif(max1<a[i])\r\n\t\t\t\tmax1=a[i];\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t\tif(max1==a[i]) {\r\n\t\t\t\ta[i]=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t\tif(max2<a[i])\r\n\t\t\t\tmax2=a[i];\r\n\t\tprintf(\"%lld\\n\",max1+max2);\r\n\t}\r\n\treturn 0; \r\n}\r\n"}
{"similarity_score": 0.47928331466965285, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "dfde98f4b1225058ab12f79acc23bbc2", "bug_code_uid": "2c82749080b60d82ff602ec2c8949fd9", "src_uid": "7f98c9258f3e127a782041c421d6317b", "apr_id": "3cad620be4adfeb85984f49ecbd8f93a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,j,array[2*n],count=0,max=0;\n    for(i=0; i<2*n; i++)\n    {\n        scanf(\"%d\",&array[i]);\n        for(j=0; j<i; j++)\n        {\n            if(array[j]==array[i])\n            {\n                count--;\n                goto here;\n            }\n        }\n        count++;\nhere:\n        if(count>max)\n            max=count;\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int array[2*n],i,j,cnt=0,max=0;\n    int count[n+1];\n    for(i=0; i<=n; i++)\n    {\n        count[i]=0;\n    }\n    for(j=0; j<2*n; j++)\n    {\n        scanf(\"%d\",&array[j]);\n        count[array[j]]++;\n        if(count[array[j]]<2)\n        {\n            cnt++;\n            if(cnt>max)\n                max=cnt;\n        }\n        else\n            cnt--;\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.5173852573018081, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "61e0b67cb9d1e71504dd5b9eec43b011", "bug_code_uid": "4120b319f39ee279476845939eea43fc", "src_uid": "644ef17fe304b090e0cf33a84ddc546a", "apr_id": "bc3976e91e130f24d86b0b562b205e53", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int A[n];\r\n\r\n        for(int i = 0; i<n; i++)\r\n        {\r\n            scanf(\"%d\", &A[i]);\r\n        }\r\n\r\n        for(int j = 0; j<n; j++)\r\n        {\r\n            for(int k = 0; k<n; k++)\r\n            {\r\n                if(A[j] - A[k] >= 2)\r\n                {\r\n                    A[j]--; A[k]++;\r\n                }\r\n                if(A[k] - A[j] >= 2)\r\n                {\r\n                    A[k]--; A[j]++;\r\n                }\r\n            }\r\n        }\r\n        int min = A[0], max = A[0];\r\n        for(int w = 1; w<n; w++)\r\n        {\r\n            if(min > A[w])\r\n            {\r\n                min = A[w];\r\n            }\r\n            if(max < A[w])\r\n            {\r\n                max = A[w];\r\n            }\r\n        }\r\n        printf(\"%d\\n\", max-min);\r\n\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int A[n];\r\n\r\n        for(int i = 0; i<n; i++)\r\n        {\r\n            scanf(\"%d\", &A[i]);\r\n        }\r\n\r\n        int sum = 0;\r\n        for(int j = 0; j<n; j++)\r\n        {\r\n            sum = sum + A[j];\r\n        }\r\n\r\n        if(sum % n == 0)\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else{\r\n            printf(\"1\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.20551378446115287, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "a7cc16d0dd8c678d48bb7cea14cfc984", "bug_code_uid": "720072ec1957650dac9428897aa3efca", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "9eb3a7ff04752c01ec5993c8057fcbab", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long long n,i=0,x=0,y=0,sum;\n    scanf(\"%lld\",&n);\n    char a[n];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%c\",&a[i]);\n        if(a[i]=='L')\n        {\n            x--;\n        }\n        else if(a[i]=='R')\n        {\n            y++;\n        }\n    }\n    sum=(y-x)+1;\n    printf(\"%lld\",sum);\n    return 0;\n\n\n}\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    long long a,b,k,result[t],i=0;\n\n    while(i<t)\n    {\n        scanf(\"%lld %lld %lld\",&a,&b,&k);\n        if(k%2==0)\n        {\n            result[i]=(k/2)*(a-b);\n        }\n        else\n        {\n            result[i]=((k/2)*(a-b))+a;\n        }\n        i++;\n\n    }\n    i=0;\n    while(i<t)\n    {\n        printf(\"%lld\\n\",result[i]);\n        i++;\n    }\n    return 0;\n}"}
{"similarity_score": 0.37749546279491836, "equal_cnt": 25, "replace_cnt": 12, "delete_cnt": 10, "insert_cnt": 2, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "bdaf54e70c7b9200bc78471a259013e7", "bug_code_uid": "f9951d1da4a5141ec10e5e50777ed673", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "adfa07aec474ae6f8eb5872ab8a2e627", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char *argv[]) {\n\tint x,i,sum=0;\n\tscanf(\"%d\",&x);\n\tint a[x];\n\t\n\tfor(i=0;i<x;i++){\n\t\tscanf(\"%d\",&a[i]);\t\t\n\t}\n\t\tfor(i=0;i<x;i++){\n\t\tif( a[i]>a[i+1]){sum++;\n\t\t}\t\t\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint max,min,i,x,n,c=0;\nscanf(\"%d%d\",&n,&x);\nmax=min=x;\nfor(i=1;i<n;i++)\n{\nscanf(\"%d\",&x);\nif(x>max){\nmax=x;\nc++;}\nif(x<min){\nmin=x;\nc++;}}\nprintf(\"%d\",c);\nreturn 0;\n}"}
{"similarity_score": 0.9804964539007093, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "2f3d7a1712008409115f155646b3ba01", "bug_code_uid": "1d84eb317809096415e0c06ed5c19e9b", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "e246d0aee6123893b459b642e5ee9d98", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,c,min=1000000000,max=0,minc=0,maxc=0,k=1,l=1;\n    scanf(\"%d\",&n);\n    for( int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&c);\n        if(c>max)\n        {\n            max=c;\n            maxc=0;\n\n        }\n        if(max==c)\n            maxc++;\n\n        if(c<min)\n        {\n            min=c;\n            minc=0;\n        }\n        if(c==min)\n            minc++;\n\n\n     }\n\n     if(max!=min)\n     printf(\"%d %d\",(max-min),(minc)*(maxc));\n     else\n     {\n           printf(\"%d %d\",(max-min),((n*(n-1))/2));\n\n     }\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     long long int n,c,min=1000000000,max=0,minc=0,maxc=0,k=1,l=1;\n    scanf(\"%lld\",&n);\n    for( int i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&c);\n        if(c>max)\n        {\n            max=c;\n            maxc=0;\n\n        }\n        if(max==c)\n            maxc++;\n\n        if(c<min)\n        {\n            min=c;\n            minc=0;\n        }\n        if(c==min)\n            minc++;\n\n\n     }\n\n     if(max!=min)\n     printf(\"%lld %lld\",(max-min),(minc)*(maxc));\n     else\n     {\n           printf(\"%lld %lld\",(max-min),((n*(n-1))/2));\n\n     }\n\n\n}\n"}
{"similarity_score": 0.5625, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "88cdf4a3593e7a17e2b7cb2b81f747c3", "bug_code_uid": "db49e19065c9cc8ee93b0986e28a134c", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "1c66d8526b9c8fa0d92f3c36cc9d51c5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int q, i, odd;\n    long long n[500], a[500], b[500];\n    scanf(\"%d\", &q);\n    for(i = 0; i < q; i++) scanf(\"%u%u%u\", &n[i], &a[i], &b[i]);\n    for(i = 0; i < q; i++){\n        odd = n[i] % 2;\n        x = n[i] * a[i];\n        y = ((n[i] / 2) * b[i]) + (odd * a[i]);\n        printf(\"%u\\n\", x <= y ? x : y);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int q, a, b;\n    long long n, x, y;\n    scanf(\"%d\", &q);\n    while(q--){\n        scanf(\"%lld%d%d\", &n, &a, &b);\n        x = n * a;\n        y = (n / 2) * b + (n % 2) * a;\n        printf(\"%lld\\n\", x <= y ? x : y);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7141500474833808, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1ed077486d989249f4de9d936868c19b", "bug_code_uid": "3a6742a6848474ecd6d367781c10ffb8", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "1c26c793ed88cafd2f326697179bfef0", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int b[100006];\nlong long int freq[100006];\nlong long int max(long long int a, long long int b)\n{\n\tif(a>b)\n\treturn a;\n\t\t\n\treturn b;\n}\n\nlong long int rec(long long int i)\n{\n\tif(i==-1 || i==0)\n\treturn 0;\t\n\n\tif(b[i]==-1)\n\treturn b[i]=max(rec(i-2) + i*freq[i], rec(i-1));\n\n\telse return b[i];\n}\n\nint main()\n{\n\tlong long int n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(int i=0; i<100006; i++)\n\t{\n\t\tb[i]=-1;\n\t}\n\t\n\tfor(int i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tfreq[a[i]]++;\n\t}\n\n\tprintf(\"%lld\",rec(a, 100001));\n}\n", "fixed": "#include<stdio.h>\nlong long int b[100006];\nlong long int freq[100006];\nlong long int max(long long int a, long long int b)\n{\n\tif(a>b)\n\treturn a;\n\t\t\n\treturn b;\n}\n\nlong long int rec(long long int i)\n{\n\tif(i==-1 || i==0)\n\treturn 0;\t\n\n\tif(b[i]==-1)\n\treturn b[i]=max(rec(i-2) + i*freq[i], rec(i-1));\n\n\telse return b[i];\n}\n\nint main()\n{\n\tlong long int n;\n\tscanf(\"%lld\",&n);\n\tint a[n];\n\tfor(int i=0; i<100006; i++)\n\t{\n\t\tb[i]=-1;\n\t}\n\t\n\tfor(int i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tfreq[a[i]]++;\n\t}\n\n\tprintf(\"%lld\",rec(100002));\n}\n"}
{"similarity_score": 0.8864265927977839, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3037af427d7f768aaf73642a5389ea65", "bug_code_uid": "8855da9770762723a171579e99841b2f", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "f6c1383bed7e606849c4f42a56206c59", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "char a[3],b;\nint n,s;\nmain() {\n    scanf(\"%d\",&n);\n    while (n--) {\n        scanf(\"%s\",b);\n        s += b != a[0];\n        b = a[0];\n    }\n    printf(\"%d\\n\",s)\n}", "fixed": "#include <stdio.h>\nchar a[3],b;\nint n,s;\nint main() {\n    scanf(\"%d\",&n);\n    while(n--) {\n        scanf(\"%s\",a);\n        s += b != a[0];\n        b = a[0];\n    }\n    printf(\"%d\\n\",s);\n    return 0;\n}"}
{"similarity_score": 0.998019801980198, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "98d1f7dd5089cea2ec061c06d37e0bb1", "bug_code_uid": "70cd3e74021d93cc20e4846623629084", "src_uid": "3ef23f114be223255bd10131b2375b86", "apr_id": "6653685bb55cef18123daf3dd9c58ed3", "difficulty": 800, "tags": ["greedy", "games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int k=0;k<n;k=k+1)\n    {\n    int i,j,p,x,y,min,max;\n    scanf(\"%d%d%d\",&p,&x,&y);\n    int a[x],b[y];\n    for(i=0;i<x;i++)\n    scanf(\"%d\",&a[i]);\n    min=a[0];\n    for(j=1;j<x;j++)\n    {\n    if(min>a[j])\n    min=a[j];\n    }\n    for(i=0;i<y;i++)\n    scanf(\"%d\",&b[i]);\n    max=b[0];\n    for(j=1;j<y;j++)\n    {\n    if(max<b[j])\n    max=b[j];\n    }\n    if(max>=min)\n    printf(\"NO\\n\");\n    else\n    printf(\"YES\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int k=0;k<n;k=k+1)\n    {\n    int i,j,p,x,y,min,max;\n    scanf(\"%d%d%d\",&p,&x,&y);\n    int a[x],b[y];\n    for(i=0;i<x;i++)\n    scanf(\"%d\",&a[i]);\n    min=a[0];\n    for(j=1;j<x;j++)\n    {\n    if(min<a[j])\n    min=a[j];\n    }\n    for(i=0;i<y;i++)\n    scanf(\"%d\",&b[i]);\n    max=b[0];\n    for(j=1;j<y;j++)\n    {\n    if(max<b[j])\n    max=b[j];\n    }\n    if(max>=min)\n    printf(\"NO\\n\");\n    else\n    printf(\"YES\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.35765379113018597, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "898ec0ea39514c196f68c97c7c731aec", "bug_code_uid": "a11b8a20ec934114473c945a3420e69e", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "a73604d9030e8fc15403aed6e1052f02", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int ar[3][3];\n    int n,i,j,sum=0;\n\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<3;j++)\n        {\n            scanf(\"%d\",&ar[i][j]);\n        }\n\n    }\n\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<3;j++)\n        {\n            sum=sum+ar[i][j];\n        }\n\n    }\n\n    if(sum==0)\n        printf(\"YES\");\n\n    else\n        printf(\"NO\");\n\n\n\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a,b,c;\n    int x=0,y=0,z=0;\n\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d\",&a,&b,&c);\n        x=x+a;\n        y=y+b;\n        z=z+c;\n    }\n    if(x==0 && y==0 && z==0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9935064935064936, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a7206c241579001729d61af2feadc9f6", "bug_code_uid": "fdc1d15790ecf8abc43c9e21bab3bf1b", "src_uid": "f82058f6ba3ce0da15a5ce059674af35", "apr_id": "2fb7a09341107c4a0aa16669f4ccdce5", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,t,n,a,b;\n    scanf(\"%d\",&t);\n    b=2;\n    while(t--)\n    {\n       scanf(\"%d\",&n);\n       int a[n];\n       for(i=0;i<=n;i++)\n       {\n           a[i]=b;\n\n       }\n        for(i=0;i<=n;i++)\n       {\n           printf(\"%d \",a[i]);\n       }\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,t,n,b;\n    scanf(\"%d\",&t);\n    b=2;\n    while(t--)\n    {\n       scanf(\"%d\",&n);\n       int a[n];\n       for(i=0;i<=n;i++)\n       {\n           a[i]=b;\n\n       }\n        for(i=0;i<n;i++)\n       {\n           printf(\"%d \",a[i]);\n       }\n        printf(\"\\n\");\n    }\n}"}
{"similarity_score": 0.998, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "87a5195cc0d9c64bd7e4081f915a0086", "bug_code_uid": "f39d8c350cceba0f8179ae020096d894", "src_uid": "fbde86a29f416b3d83bcc63fb3776776", "apr_id": "52e15b61cd275e380e9215b04d5b1550", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n    {\n        int i,n,a=1;\n        char ch;\n\n        scanf(\"%d\",&n);\n\n        for(i=1;i<=n;i++)\n        {\n            if(i==1)\n                printf(\"a\");\n            else if(i==2)\n                printf(\"a\");\n            else if(i==3)\n                printf(\"b\");\n            else if(i==4)\n                printf(\"c\");\n\n            if(i==4)\n            {\n                i=0;\n                n-=4;\n            }\n        }\n        printf(\"\\n\");\n\n        return 0;\n    }\n", "fixed": "#include<stdio.h>\nint main()\n    {\n        int i,n,a=1;\n        char ch;\n\n        scanf(\"%d\",&n);\n\n        for(i=1;i<=n;i++)\n        {\n            if(i==1)\n                printf(\"a\");\n            else if(i==2)\n                printf(\"a\");\n            else if(i==3)\n                printf(\"b\");\n            else if(i==4)\n                printf(\"b\");\n\n            if(i==4)\n            {\n                i=0;\n                n-=4;\n            }\n        }\n        printf(\"\\n\");\n\n        return 0;\n    }\n"}
{"similarity_score": 0.9347442680776014, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9198e536da1516c13bc88d45d946d5a3", "bug_code_uid": "268cda3cb6477de2bf39450e0fd47bb8", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "a13837faef5372555f4a1be769e5857a", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int mut(long long int a){return (a<0)?-a:a;}\nlong long int min(long long int a,long long int b){return (a>b)?b:a;}\nlong long int max(long long int a,long long int b){return (a<b)?b:a;}\nint main(){\n\tlong long int i,n,x[100005] = {0};\n\tscanf(\"%lld\",&n);\n\tfor(i = 0 ; i < n ; i++)\n\t\tscanf(\"%lld\",&x[i]);\n\tprintf(\"%lld %lld\\n\",x[1]-x[0],x[n-1]-x[0]);\n\tfor(i = 1 ; i < n-1 ; i++)\n\t\tprintf(\"%lld %lld\\n\",max(mut(x[i]-x[0]),mut(x[i]-x[n-1])),min(mut(x[i]-x[i-1]),mut(x[i]-x[i+1])));\n\tprintf(\"%lld %lld\\n\",x[n-1]-x[n-2],x[n-1]-x[0]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int mut(long long int a){return (a<0)?-a:a;}\nlong long int min(long long int a,long long int b){return (a>b)?b:a;}\nlong long int max(long long int a,long long int b){return (a<b)?b:a;}\nint main(){\n\tlong long int i,n,x[100005] = {0};\n\tscanf(\"%lld\",&n);\n\tfor(i = 0 ; i < n ; i++)\n\t\tscanf(\"%lld\",&x[i]);\n\tprintf(\"%lld %lld\\n\",x[1]-x[0],x[n-1]-x[0]);\n\tfor(i = 1 ; i < n-1 ; i++)\n\t\tprintf(\"%lld %lld\\n\",min(mut(x[i]-x[i-1]),mut(x[i]-x[i+1])),max(mut(x[i]-x[0]),mut(x[i]-x[n-1])));\n\tprintf(\"%lld %lld\\n\",x[n-1]-x[n-2],x[n-1]-x[0]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6990740740740741, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "23fd91480dd4cad3f8404f92c57ae6f8", "bug_code_uid": "fad3f0185531cb04c6bb12891607a667", "src_uid": "f00eb0452f5933103f1f77ef06473c6a", "apr_id": "a15ca272e828704dc1080043e2d69962", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n\nlong long solve(long long n,long long k){\n    long long start = n/k;\n    if(n%k != 0)\n        start++;\n    long long stop = ceil(sqrt(n));\n    for(long long i=start;i<=stop;i++){\n        if(n%i==0)\n            return i;\n    }\n    return n;\n}\nint main(){\n    long long t;\n    scanf(\"%lli\",&t);\n    for(long long i=0; i<t; i++){\n        long long n,k;\n        scanf(\"%lli %lli\",&n,&k);\n        printf(\"%lli\\n\",solve(n,k));\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n\nlong long solve(long long n,long long k){\n    \n    long long crit = floor(sqrt(n));\n    if(k <= crit){\n        for(long long i = k; i>=1; i--){\n            if(n%i==0)\n                return n/i;\n        }\n    }\n    \n    long long start = n/k;\n    if(n%k!=0)\n        start++;\n    for(long long i = start; i <= crit; i++){\n        if(n%i==0)\n            return i;\n    }\n    \n    for(long long i = start-1; i >= 1; i--){\n        if(n%i==0)\n            return n/i;\n    }\n        \n    return 0;\n}\nint main(){\n    long long t;\n    scanf(\"%lli\",&t);\n    for(long long i=0; i<t; i++){\n        long long n,k;\n        scanf(\"%lli %lli\",&n,&k);\n        printf(\"%lli\\n\",solve(n,k));\n    }\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.990234375, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bef0b6063b1432e5a909da2319c8cd75", "bug_code_uid": "3c843871c69982accea4404f839d9a2f", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "013b29c1dcbd09a5fc574c6f6aafc81a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\nint main()\n{\n    int n,i;\n    char res[]={\"\"};\n    scanf(\"%d\",&n);\n    char odd[]={\"I hate\"};\n    char even[]={\"I love\"};\n    char end[]={\"it\"};\n    char middle[]={\"that\"};\n    for(i=0;i<n;i++)\n    {\n        if (i % 2 == 0) {\n            printf( \"I hate \");\n        } else {\n            printf( \"I love \");\n        }\n        if (i != n - 1) {\n            printf( \"that \");\n        } else {\n            printf( \"it \");\n    }\n    \n    return 0;\n    \n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\nint main()\n{\n    int n,i;\n    char res[]={\"\"};\n    scanf(\"%d\",&n);\n    char odd[]={\"I hate\"};\n    char even[]={\"I love\"};\n    char end[]={\"it\"};\n    char middle[]={\"that\"};\n    for(i=0;i<n;i++)\n    {\n        if (i % 2 == 0) {\n            printf( \"I hate \");\n        } else {\n            printf( \"I love \");\n        }\n        if (i != n - 1) {\n            printf( \"that \");\n        } else {\n            printf( \"it \");\n        }\n    }\n    \n    return 0;\n    \n}"}
{"similarity_score": 0.7875125881168177, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "f5f8f5628e20b6814f60a0aeba02a4ff", "bug_code_uid": "05f27e98010627e7c84a8baccc855c0e", "src_uid": "614aa068ce74090b6577006c45e549cf", "apr_id": "9c44ecba1617e41b5badb36f68ac0a61", "difficulty": null, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\n    long long int a,i,j,k,z,x,b,max,p,q,y;\n    scanf(\"%lld\",&a);\n\n    for(j=1;j<=a;j++)\n    {\n        scanf(\"%lld\",&y);\n        if(y==1)printf(\"0\\n\");\n        else if(y==2)printf(\"1\\n\");\n        else if(y==3)printf(\"2\\n\");\n        else if(y>3)\n        {\n            for(k=y-1;k>1;k--)\n            {\n                if(y%k==0)\n                {\n                    printf(\"%lld\\n\",y/k);\n                    break;\n                }\n            }\n        }\n\n\n}\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\n    long long int a,i,j,k,z,x,b,m,p,q,y;\n    scanf(\"%lld\",&a);\n\n    for(j=1;j<=a;j++)\n    {\n        scanf(\"%lld\",&y);\n        if(y==1)printf(\"0\\n\");\n        else if(y==2)printf(\"1\\n\");\n        else if(y==3)printf(\"2\\n\");\n        else if(y>3)\n        {\n\n            if(y%2==0)\n            {\n                    printf(\"2\\n\");\n            }\n            else\n            {\n                 printf(\"3\\n\");\n            }\n        }\n\n\n}\n}\n"}
{"similarity_score": 0.9772727272727273, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5e4f7800d6ae67a228112da24d7a7cf0", "bug_code_uid": "1b483d714099ceb2238377f8ba2f22e4", "src_uid": "e65b2a81689bb13b90a02a9ccf1d4125", "apr_id": "99bab8b89839488257d188b9a9eafdf9", "difficulty": 1100, "tags": ["binary search", "ternary search", "math", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint d;\nint fun(int x)\n{\n\tif(d%(x+1)==0)\n\treturn (x+(d/(x+1)));\n\telse\n\t\treturn (x+(d/(x+1)))+1;\n}\n\nint main()\n{\n\tint x,n,t,flag;\n\tscanf(\"%d\",&t);\n\t\n\twhile(t--)\n\t{\n\t\tflag=0;\n\t\tscanf(\"%d %d\",&n,&d);\n\t\tif(d<=n)\n\t\t{\n\t\t\tflag=1;\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tx=sqrt(d)-1;\n\t\t\t\t//\tprintf(\"%d %d\",x,d);\n\t\t\t\t\tif(x!=1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(fun(x)<=n||fun(x+1)<=n||fun(x-1)<=n)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t//\tprintf(\"\\n %d %d %d\",fun(x),fun(x+1),fun(x-1));\n\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(fun(x)<=n||fun(x+1)<=n)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag==0)\n\t\t\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n\t}\n\n\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint d;\nint fun(int x)\n{\n\tif(d%(x+1)==0)\n\treturn (x+(d/(x+1)));\n\telse\n\t\treturn (x+(d/(x+1)))+1;\n}\n\nint main()\n{\n\tint x,n,t,flag;\n\tscanf(\"%d\",&t);\n\t\n\twhile(t--)\n\t{\n\t\tflag=0;\n\t\tscanf(\"%d %d\",&n,&d);\n\t\tif(d<=n)\n\t\t{\n\t\t\tflag=1;\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tx=sqrt(d)-1;\n\t\t\t\t//\tprintf(\"%d %d\",x,d);\n\t\t\t\t\tif(x==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(fun(x)<=n||fun(x+1)<=n)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t//\tprintf(\"\\n %d %d %d\",fun(x),fun(x+1),fun(x-1));\n\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(fun(x)<=n||fun(x+1)<=n||fun(x-1)<=n)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag==0)\n\t\t\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n\t}\n\n\n\n"}
{"similarity_score": 0.9811320754716981, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9d0b0a18b51438402a58303af5f3f595", "bug_code_uid": "3aafb558d53b0f0cd770adf14a1e31fe", "src_uid": "1a6881aeb197b8ed429f46850eb27b9c", "apr_id": "cb3f3a1d97543ed1c1fcf33db9f682cd", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main() {\r\n\r\n   long num ,t, r, ld = 0;\r\n   scanf(\"%d\", &t);\r\n   while(t--)\r\n   {\r\n       scanf(\"%d\", &num);\r\n\r\n   while (num > 0) {\r\n       r = num % 10;\r\n       if (ld < r) {\r\n           ld = r;\r\n       }\r\n       num = num / 10;\r\n   }\r\n   if (ld==10)\r\n   printf(\"%d\\n\", 1);\r\n    else\r\n   printf(\"%d\\n\", ld);\r\n\r\n   }\r\n\r\n\r\n   return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main() {\r\n\r\n   long num ,t, r, ld = 0;\r\n   scanf(\"%d\", &t);\r\n   while(t--)\r\n   {\r\n       ld=0;\r\n       scanf(\"%d\", &num);\r\n\r\n   while (num > 0) {\r\n       r = num % 10;\r\n       if (ld < r) {\r\n           ld = r;\r\n       }\r\n       num = num / 10;\r\n   }\r\n   if (ld==10)\r\n   printf(\"%d\\n\", 1);\r\n    else\r\n   printf(\"%d\\n\", ld);\r\n\r\n   }\r\n\r\n\r\n   return 0;\r\n}\r\n"}
{"similarity_score": 0.8266666666666667, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7d4ea7f756d31eb16830ea8d21f70ef8", "bug_code_uid": "464fc0cff71bda2f94a725facfd6cb51", "src_uid": "8bbec86e427e26158393bbfbf1a067fe", "apr_id": "474469370f55309f5744573de0b62e78", "difficulty": 1100, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,a,b,s,i,r;\n    scanf(\"%lld\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%lld %lld\",&a,&b);\n        if(a==0 || b==0)\n        {\n            printf(\"0\\n\");\n        }\n        else\n        {\n            s=a+b;\n            r=s/3;\n            printf(\"%lld\\n\",r);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int l,t,a,b,s,i,r;\n    scanf(\"%lld\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%lld %lld\",&a,&b);\n        if(a>=b)\n            l=b;\n        else\n            l=a;\n        if(a==0 || b==0)\n        {\n            printf(\"0\\n\");\n        }\n        else\n        {\n            s=a+b;\n            r=s/3;\n            if(r>l)\n                printf(\"%d\\n\",l);\n            else\n                printf(\"%d\\n\",r);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9904, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1b6c497cd33833565241efe1ccff8eaf", "bug_code_uid": "d0a7092e8c444d4312dd47b75c2371db", "src_uid": "513234db1bab98c2c2ed6c7030c1ac72", "apr_id": "41f346ec92e455d36f7413a93abf27cb", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint i,s1,s2,s3,s4,s6,n,arr[100000];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\",arr+i);\n\t\tif (arr[i]==1)s1++;\n\t\tif (arr[i]==2)s2++;\n\t\tif (arr[i]==3)s3++;\n\t\tif (arr[i]==6)s6++;\n\t\tif (arr[i]==4)s4++;\n\t}\n\tif (s1 != n/3 || s2+s3 != n/3 ||  s4+s6 != n/3 || s4 > s2 || s2 > s4+s6 || s3 > s6)\n\t\tputs(\"-1\");\n\twhile(s1)\n\t{\n\t\tprintf(\"1 \");s1--;\n\t\tif(s3)\n\t\t{\n\t\t\tprintf(\"3 6\\n\");s3--,s6--;continue;\n\t\t}\n\t\tif (s2)\n\t\t{\n\t\t\tif (s4)\n\t\t\t{\n\t  \t\t\tprintf(\"2 4\\n\");\n\t\t\t\ts4--;\n\t\t\t\ts2--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (s6)\n\t\t\t{\n\t\t\t\tprintf(\"2 6\\n\");\n\t\t\t\ts6--;\n\t\t\t\ts2--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\t\n", "fixed": "#include<stdio.h>\nint i,s1,s2,s3,s4,s6,n,arr[100000];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\",arr+i);\n\t\tif (arr[i]==1)s1++;\n\t\tif (arr[i]==2)s2++;\n\t\tif (arr[i]==3)s3++;\n\t\tif (arr[i]==6)s6++;\n\t\tif (arr[i]==4)s4++;\n\t}\n\tif (s1 != n/3 || s2+s3 != n/3 ||  s4+s6 != n/3 || s4 > s2 || s2 > s4+s6 || s3 > s6)\n\t{puts(\"-1\");return 0;}\n\twhile(s1)\n\t{\n\t\tprintf(\"1 \");s1--;\n\t\tif(s3)\n\t\t{\n\t\t\tprintf(\"3 6\\n\");s3--,s6--;continue;\n\t\t}\n\t\tif (s2)\n\t\t{\n\t\t\tif (s4)\n\t\t\t{\n\t  \t\t\tprintf(\"2 4\\n\");\n\t\t\t\ts4--;\n\t\t\t\ts2--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (s6)\n\t\t\t{\n\t\t\t\tprintf(\"2 6\\n\");\n\t\t\t\ts6--;\n\t\t\t\ts2--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\t\n"}
{"similarity_score": 0.8913601368691189, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1c2797b7085c54ba71a67e3af815e07e", "bug_code_uid": "f817e228bfbc42ecb1ed4c1515efea0a", "src_uid": "07b750dbf7f942eab80d4260103c7472", "apr_id": "4820a6dbd643701cd114bc8047f24841", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n int a[365],N,K,C,i,j,count = 0,max;\n \n scanf(\"%d%d\",&N,&K);\n \n scanf(\"%d\",&C);\n \n for(i=0;i<C;i++)\n   scanf(\"%d\",&a[i]);\n   \n   \n i = j = 0;\n \n max = (N-K) > a[C-1] ? (N-K) : a[C-1];\n\n while(i<=max)\n  {\n   if(j<C)\n     {\n      if(i+K<a[j])\n       {\n        i+=K;\n        count++; \n       }\n       \n      else\n       {\n        count++;\n        i = a[j];\n        j++;\n       }\n        \n     }\n     \n   else\n     {\n      i+=K;\n      count++;\n     }\n  \n  }\n\n printf(\"%d\",count);\n \n \n return 0;\n}\n", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n int a[365],N,K,C,i,j,count = 0,max;\n \n scanf(\"%d%d\",&N,&K);\n \n scanf(\"%d\",&C);\n \n for(i=0;i<C;i++)\n   scanf(\"%d\",&a[i]);\n   \n   \n i = j = 0;\n \n if(C==0)\n   max = N-K;\n \n else\n   max = (N-K) > a[C-1] ? (N-K) : a[C-1];\n\n while(i<=max)\n  {\n   if(j<C)\n     {\n      if(i+K<a[j])\n       {\n        i+=K;\n        count++; \n       }\n       \n      else\n       {\n        count++;\n        i = a[j];\n        j++;\n       }\n        \n     }\n     \n   else\n     {\n      if(i+K<=N) \n       {\n        i+=K;\n        count++;\n       }\n       \n      else \n        break;\n       \n     }\n  \n  }\n\n printf(\"%d\",count);\n \n \n return 0;\n}\n"}
{"similarity_score": 0.9978448275862069, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "49ca695aa75c49514b2b7175657b80d3", "bug_code_uid": "ba210f3f2cfb7a6a13692472c64c93d3", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "d06d8b72e78e619c58d4f6d4aa6dd171", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int one = n * 1 / 3 + 1;\r\n        int two = n * 2 / 3 / 2;\r\n        if ( n % 3 == 0)\r\n            one--;\r\n        else if ( one + two * 2 != n) {\r\n            one--;\r\n            two++;\r\n        }\r\n\r\n        printf(\"%d %d\", one, two);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int one = n * 1 / 3 + 1;\r\n        int two = n * 2 / 3 / 2;\r\n        if ( n % 3 == 0)\r\n            one--;\r\n        else if ( one + two * 2 != n) {\r\n            one--;\r\n            two++;\r\n        }\r\n\r\n        printf(\"%d %d\\n\", one, two);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9732234809474768, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7fff0cf1847d14eb789d8235015ab48b", "bug_code_uid": "4047c06324c21e867e3f6787e1b8f0ed", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "eb16cb3db672f7e3c9a1e4a7cad968ae", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n, w, h;\r\n        scanf(\"%d %d %d\", &w, &h, &n);\r\n        int count=1 ;\r\n        int countw=1;\r\n        int counth=1;\r\n        for(int i=0;;i++)\r\n        {\r\n            if(w%2==0)\r\n            {\r\n                w /= 2;\r\n                count+=countw;\r\n                countw*=2;\r\n                continue;\r\n                \r\n            }\r\n            else if(w%2==1 && h%2==0)\r\n            {\r\n                h/=2;\r\n                count+=counth;\r\n                counth*=2;\r\n                continue;\r\n            }\r\n\r\n            if(count>=n)\r\n            {\r\n                printf(\"YES\\n\");\r\n                break;\r\n            } \r\n            if(count<n)\r\n            {\r\n                printf(\"NO\\n\");\r\n                break;\r\n            }\r\n            \r\n\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n, w, h;\r\n        scanf(\"%d %d %d\", &w, &h, &n);\r\n        int count=1 ;\r\n        int countw=1;\r\n        int counth=1;\r\n        for(int i=0;;i++)\r\n        {\r\n            if(w%2==0)\r\n            {\r\n                w /= 2;\r\n                count+=countw;\r\n                countw*=2;\r\n                continue;\r\n                \r\n            }\r\n            else if(w%2==1 && h%2==0)\r\n            {\r\n                h/=2;\r\n                count+=countw;\r\n                countw*=2;\r\n                continue;\r\n            }\r\n\r\n            if(count>=n)\r\n            {\r\n                printf(\"YES\\n\");\r\n                break;\r\n            } \r\n            if(count<n)\r\n            {\r\n                printf(\"NO\\n\");\r\n                break;\r\n            }\r\n            \r\n\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8776185226019846, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7290b37decc35848d7806a360e51e5c5", "bug_code_uid": "15143c2df358a7c94e455e4713cb32dc", "src_uid": "ec1a29826209a0820e8183cccb2d2f01", "apr_id": "c1540510752d9b78aff2a07caa15adef", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define inf 99999999999\nint main()\n{\n\tint n, k;\n\tint num[100005];\n\tint min = inf, max = -inf;\n\tscanf(\"%d %d\", &n, &k);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\", &num[i]);\n\tif (k == 1)\n\t{\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (num[i] < min) \n\t\t\t\tmin = num[i];\n\t\tprintf(\"%d\\n\", min);\n\t}\n\telse\n\t{\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (num[i] > max)\n\t\t\t\tmax = num[i];\n\t\tprintf(\"%d\\n\", max);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#define inf 99999999999\nint main()\n{\n\tint n, k;\n\tint num[100005];\n\tint min = inf, max = -inf;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%d\", &num[i]);\n\tif (k == 1)\n\t{\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (num[i] < min)\n\t\t\t\tmin = num[i];\n\t\tprintf(\"%d\\n\", min);\n\t}\n\telse if (k >= 3)\n\t{\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (num[i] > max)\n\t\t\t\tmax = num[i];\n\t\tprintf(\"%d\\n\", max);\n\t}\n\telse\n\t\tprintf(\"%d\\n\", num[0] > num[n - 1] ? num[0] : num[n - 1]);\n\treturn 0;\n}"}
{"similarity_score": 0.9685658153241651, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9250a0b798b38b588e14d732b279d442", "bug_code_uid": "7399edc8319e9b07002c9683f7822831", "src_uid": "636a30a2b0038ee1731325a5fc2df73a", "apr_id": "cf2866eb0f9071f913207e59f14de3f7", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,x,y,z,l,m;\n    double s=0;\n    int a[5]={500,1000,1500,2000,2500};\n    int b[5];\n    int c[5];\n    for(i=0;i<5;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    for(i=0;i<5;i++)\n    {\n        scanf(\"%d\",&c[i]);\n    }\n  scanf(\"%d%d\",&x,&y);\n  for(i=0;i<5;i++)\n  {\n      l=((1-(((double)(b[i]))/250))*((double)(a[i])))-(50*(double)c[i]);\n     m =0.3*a[i];\n     if(m>=l)\n       l=m;\n     s=s+l;\n  }\n   s=s+(100)*(double)(x)-(50)*(double)y;\n   z=s;\n   printf(\"%d\",z);\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,x,y,z;\n    double s=0,l,m;\n    int a[5]={500,1000,1500,2000,2500};\n    int b[5];\n    int c[5];\n    for(i=0;i<5;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    for(i=0;i<5;i++)\n    {\n        scanf(\"%d\",&c[i]);\n    }\n  scanf(\"%d%d\",&x,&y);\n  for(i=0;i<5;i++)\n  {\n      l=((1-(((double)(b[i]))/250))*((double)(a[i])))-(50*(double)c[i]);\n     m =0.3*a[i];\n     if(m>=l)\n       l=m;\n     s=s+l;\n  }\n   s=s+(100)*(double)(x)-(50)*(double)y;\n   z=s;\n   printf(\"%d\",z);\n\n\n}\n"}
{"similarity_score": 0.9781601588352085, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "c036e47d2680f85c9907b05092da48c8", "bug_code_uid": "49b2d32c0366e41e6cdf0543826de2c3", "src_uid": "8cf479fd47050ba96d21f3d8eb43c8f0", "apr_id": "243bd785f83b5e685cbee560d133d676", "difficulty": 1400, "tags": ["math", "constructive algorithms", "number theory", "interactive"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \n#include<string.h>\n#include<math.h>\n#define MAXM 10002\nint ans[MAXM],eular[MAXM],prime[MAXM],flag[MAXM];\nvoid isprime()\n{\n\tint i,j,k,t=1;\n\tfor(i=2;i<=100;i++){\n\t\tif(flag[i]==0){\n\t\t\tprime[t]=i;\n\t\t\tt++;\n\t\t\tfor(j=2;i*j<=100;j++)\n\t\t\t\tflag[i*j]=1;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint i,j,k,flag=0,count=0;\n\tchar s[10];\n\tisprime();\n\tfor(i=1;i<=17;i++){\n\t\tprintf(\"%d\\n\",prime[i]);\n\t\tfflush(stdout);\n\t\t\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='y')\n\t\t\tcount++;\n\t\tif(count==1&&i<=4){\n\t\t\tprintf(\"%d\\n\",prime[i]*prime[i]);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%s\",s);\n\t\t\tif(s[0]=='y'){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\t\n\t\t}\n\t\tif(count>=2){\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==1){\n\t\tprintf(\"composite\");\n\t\tfflush(stdout);\n\t}\n\telse{\n\t\tprintf(\"prime\");\n\t\tfflush(stdout);\n\t}\n\t\t\n\treturn 0;\n}", "fixed": "#include<stdio.h> \n#include<string.h>\n#include<math.h>\n#define MAXM 10002\nint ans[MAXM],prime[MAXM],flag[MAXM];\nvoid isprime()\n{\n\tint i,j,k,t=1;\n\tfor(i=2;i<=100;i++){\n\t\tif(flag[i]==0){\n\t\t\tprime[t]=i;\n\t\t\tt++;\n\t\t\tfor(j=2;i*j<=100;j++)\n\t\t\t\tflag[i*j]=1;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint i,j,k,flag=0,count=0;\n\tchar s[10];\n\tisprime();\n\tfor(i=1;i<=16;i++){\n\t\tprintf(\"%d\\n\",prime[i]);\n\t\tfflush(stdout);\n\t\t\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='y')\n\t\t\tcount++;\n\t\tif(count==1&&i<=4){\n\t\t\tprintf(\"%d\\n\",prime[i]*prime[i]);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%s\",s);\n\t\t\tif(s[0]=='y'){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(count>=2){\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==1){\n\t\tprintf(\"composite\");\n\t\tfflush(stdout);\n\t}\n\telse{\n\t\tprintf(\"prime\");\n\t\tfflush(stdout);\n\t}\n\t\t\n\treturn 0;\n}"}
{"similarity_score": 0.7920937042459737, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "8552e7c4a4706fdf658db9954d707d92", "bug_code_uid": "4e950ca421fe68a6e9b7ae788b84cde0", "src_uid": "874e22d4fd8e35f7e0eade2b469ee5dc", "apr_id": "45adfa3a96dd87301274d32ebfb461f0", "difficulty": 1100, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint findMin(int n,int k,char S[n])\r\n{   int f=0,l=0;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        if(S[i]=='*')\r\n        {f=i;\r\n        break;}\r\n    }\r\n    for(int i=n-1;i>=0;i--)\r\n    {\r\n        if(S[i]=='*')\r\n       { l=i;\r\n        break;}\r\n    }if (f==l)\r\n    printf(\"1\\n\");\r\n    else\r\n    {\r\n        int p=l-f-1;\r\n        int q=(p/k)+2;\r\n        printf(\"%d\\n\",q);\r\n    }\r\n    return 0;\r\n}\r\n   \r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int n,k;\r\n        scanf(\"%d %d\",&n,&k);\r\n        char S[n];\r\n        scanf(\"%s\",S);\r\n        findMin(n,k,S);\r\n    }\r\n    \r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint findMin(int n,int k,char S[n])\r\n{   int f=0,l=0;int count =0;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        if(S[i]=='*')\r\n        {f=i;count++;\r\n        break;}\r\n    }\r\n    for(int i=n-1;i>=0;i--)\r\n    {\r\n        if(S[i]=='*' && i!=f)\r\n       { l=i;count++;\r\n        break;}\r\n    }\r\n    for(int i=f+k;i>f && i<l;)\r\n    {\r\n        if(S[i]=='*')\r\n        {\r\n            i=i+k;\r\n            count++;\r\n        }else i--;\r\n    }printf(\"%d\\n\",count);\r\n    return 0;\r\n}\r\n   \r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int n,k;\r\n        scanf(\"%d %d\",&n,&k);\r\n        char S[n];\r\n        scanf(\"%s\",S);\r\n        findMin(n,k,S);\r\n    }\r\n    \r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.806282722513089, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "2feb8cf76b78bd8c87d7198d880595d8", "bug_code_uid": "cd82b0421b62fc3e2f04125de8343ef3", "src_uid": "a99f5e08f3f560488ff979a3e9746e7f", "apr_id": "b0ab198bc755a1b08f8c197c0c1e4312", "difficulty": 1200, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nFILE *fin,*fout;\nint c[100003],v[100000];\nint main(){\n    fin=fopen(\"c.in\",\"r\");\n    fout=fopen(\"c.out\",\"w\");\n    int n,i,d,j=0,a,p;\n\n    scanf(\"%d\",&n);\n    n++;\n    for(d=2; d*d<=n; d++)\n        if(c[d]==0){\n            v[j++]=d;\n            for(i=d*d; i<=n; i+=d)\n                c[i]=1;\n        }\n    while(d<=n){\n        if(c[d]==0)\n            v[j++]=d;\n        d++;\n    }\n    printf(\"2\\n\");\n    for(i=2; i<=n; i++){\n        if(c[i]==0)\n            printf(\"1 \");\n        else\n            printf(\"2 \");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nFILE *fin,*fout;\nint c[100003],v[100000];\nint main(){\n    fin=fopen(\"c.in\",\"r\");\n    fout=fopen(\"c.out\",\"w\");\n    int n,i,d,j=0,a,p;\n\n    scanf(\"%d\",&n);\n    n++;\n    for(d=2; d*d<=n; d++)\n        if(c[d]==0){\n            v[j++]=d;\n            for(i=d*d; i<=n; i+=d)\n                c[i]=1;\n        }\n    while(d<=n){\n        if(c[d]==0)\n            v[j++]=d;\n        d++;\n    }\n    if(n>3)\n        printf(\"2\\n\");\n    else\n        printf(\"1\\n\");\n    for(i=2; i<=n; i++){\n        if(c[i]==0)\n            printf(\"1 \");\n        else\n            printf(\"2 \");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.1272430668841762, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "dffc956fd949cd4bb075abc92599ceb7", "bug_code_uid": "bde67ad716c5cd65166f034af30b6d1a", "src_uid": "16c016c0735be1815c7b94c5c50516f1", "apr_id": "32501d87407b27dcd8de797e97415585", "difficulty": 1700, "tags": ["dp"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint sol[100001] = {0};\nint n, k;\nint a, b;\n\nint DP(int num)\n{\n    if (sol[num] != 0)  return sol[num];\n    if (num <= 0)   return 0;\n    else if (num == k)  return sol[num] = 2;\n    else if (num == 1)  return sol[num] = 1;\n    return sol[num] = DP(num-1) + DP(num-k);\n}\n\nint main()\n{\n    int i;\n    int ans;\n    scanf(\"%d %d\", &n, &k);\n    DP(100000);\n    \n    while (n--){\n        scanf(\"%d %d\", &a, &b);\n        ans = 0;\n        for (i = a; i <= b; i++)\n            ans += sol[i];\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\n#define MODULE 1000000007\n\nint sol[100005] = {0};\nint sumOfSol[100005] = {0};\nint n, k;\nint a, b;\n\nint DP()\n{\n    int i;\n    for (i = 1; i < k; i++)\n        sol[i] = 1;\n    sol[k] = 2;\n    for (i = k+1; i <= 100000; i++)\n        sol[i] = (sol[i-1]%MODULE+sol[i-k]%MODULE)%MODULE;\n    sumOfSol[0] = 0;\n    sumOfSol[1] = sol[1];\n    for (i = 2; i <= 100000; i++)\n        sumOfSol[i] = (sumOfSol[i-1]+sol[i])%MODULE;\n}\n\nint main()\n{\n    int i;\n    int ans;\n    scanf(\"%d %d\", &n, &k);\n    DP();\n    \n    while (n--){\n        scanf(\"%d %d\", &a, &b);\n        ans = (sumOfSol[b]-sumOfSol[a-1]+MODULE)%MODULE;\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9981515711645101, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a60be7a4f3fa84d04a866f7eddb934f2", "bug_code_uid": "78fc1723e4d5c54530ecf1900d366595", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "82238984e154b17f2cf9f0ebf1c1516e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[100];\n\tint n, h;\n\tint w = 0;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &h);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (a[i] > h)\n\t\t\tw += 2;\n\t\telse\n\t\t\tw += 1;\n\t}\n\tprintf(\"%d\", w);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[1000];\n\tint n, h;\n\tint w = 0;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &h);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (a[i] > h)\n\t\t\tw += 2;\n\t\telse\n\t\t\tw += 1;\n\t}\n\tprintf(\"%d\", w);\n\treturn 0;\n}"}
{"similarity_score": 0.5640552995391706, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "bef0b6063b1432e5a909da2319c8cd75", "bug_code_uid": "8fea7ccc685108830bc97885d5c338ab", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "013b29c1dcbd09a5fc574c6f6aafc81a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\nint main()\n{\n    int n,i;\n    char res[]={\"\"};\n    scanf(\"%d\",&n);\n    char odd[]={\"I hate\"};\n    char even[]={\"I love\"};\n    char end[]={\"it\"};\n    char middle[]={\"that\"};\n    for(i=0;i<n;i++)\n    {\n        if(i%2==0)\n        {\n            strcat(res,even);\n        }\n        else\n        {\n            strcat(res,odd);\n        }\n        if(i==n)\n        {\n            strcat(res,end);\n        }\n        else\n        {\n            strcat(res,middle);\n        }\n    }\n    printf(\"%s\",res);\n    return 0;\n    \n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\nint main()\n{\n    int n,i;\n    char res[]={\"\"};\n    scanf(\"%d\",&n);\n    char odd[]={\"I hate\"};\n    char even[]={\"I love\"};\n    char end[]={\"it\"};\n    char middle[]={\"that\"};\n    for(i=0;i<n;i++)\n    {\n        if (i % 2 == 0) {\n            printf( \"I hate \");\n        } else {\n            printf( \"I love \");\n        }\n        if (i != n - 1) {\n            printf( \"that \");\n        } else {\n            printf( \"it \");\n        }\n    }\n    \n    return 0;\n    \n}"}
{"similarity_score": 0.6618705035971223, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "60bc87fc289260a5561670b78c41d686", "bug_code_uid": "fae5568e4c24b144dac30ee38a96bd56", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "75305a9c03772eb6701fae1f9f9e5695", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,d,x,i,j,cnt=0,dif;\n    scanf(\"%d %d\",&n,&d);\n    int ara[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n\n        if((ara[i-1]>=ara[i]) && i>0)\n        {\n            dif=ara[i-1]-ara[i];\n            if(dif==0)\n            {\n                cnt++;\n                break;\n            }\n            cnt+=(dif/d);\n            if(dif%d) cnt++;\n\n        }\n    }\n    printf(\"%d\",cnt);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,d,x,i,j,cnt=0,dif;\n    scanf(\"%d %d\",&n,&d);\n    int ara[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n\n        if((ara[i-1]>=ara[i]) && i>0)\n        {\n            dif=ara[i-1]-ara[i];\n            x=(dif/d)+1;\n            cnt+=x;\n            ara[i]+=(x*d);\n            //printf(\"a=%d c=%d\\n\",ara[i],cnt);\n\n        }\n    }\n    printf(\"%d\",cnt);\n}\n"}
{"similarity_score": 0.9956521739130435, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c718ea0ff23e0041e2e76493963d26b4", "bug_code_uid": "77e8d864f7a917244a448867d4b5cfeb", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "bb11b22ce5a88528c2295675cdcd859d", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n,m,i;\n\n\tscanf(\"%d%d\", &n, &m);\n\tprintf(\"%d\\n\", n +m - 1);\n\n\tfor(i=1;i<=n;i++){\n\t\tprintf(\"%d %d\\n\", i, 1);\n\t}\n\n\tfor(i=2;i<=m;i++){\n\t\tprintf(\"%d %d\\n\", 2, i);\n\t}\n\n\t//system(\"pause\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n,m,i;\n\n\tscanf(\"%d%d\", &n, &m);\n\tprintf(\"%d\\n\", n +m - 1);\n\n\tfor(i=1;i<=n;i++){\n\t\tprintf(\"%d %d\\n\", i, 1);\n\t}\n\n\tfor(i=2;i<=m;i++){\n\t\tprintf(\"%d %d\\n\", 1, i);\n\t}\n\n\t//system(\"pause\");\n\treturn 0;\n}"}
{"similarity_score": 0.9129411764705883, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "24ca7853d6009c9ebe4fec077989349b", "bug_code_uid": "cb35159fc458f23c0cf1cfc91b389537", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "36c3046517e51a430ffac4438eadb0c2", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a, b, d, x, n, t;\nint main()\n{   \n    scanf(\"%d\", &t);\n    while(t>0){\n    scanf(\"%d %d %d %d\", &n, &x, &a, &b);\n    if (a > b) d = a-b;\n    else d = b-a;\n    while (x > 0){\n        if (a>b) {\n        if (a<n) d++;\n        else if (b>1) d++;}\n        else {\n        if (b<n) d++;\n        else if (a>1) d++;}\n        x--;\n    }\n    printf(\"%d\\n\", d);\n    t--;\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint a, b, d, x, n, i,t;\nint main()\n{   \n    scanf(\"%d\", &t);\n    while(t>0){\n    scanf(\"%d %d %d %d\", &n, &x, &a, &b);\n    d = 0;\n    if (a > b) d = a-b;\n    else d = b-a;\n    while (x > 0){\n        if (a>b) {\n        if (a<n) {d++; a++;}\n        else if (b>1){b--; d++;}}\n        else {\n        if (b<n) {d++; b++;}\n        else if (a>1) {a--; d++;}}\n        x--;\n    }\n    printf(\"%d\\n\", d);\n    t--;\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.6641901931649331, "equal_cnt": 16, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "2a3b1e0485c69c9f3d31afcc43063514", "bug_code_uid": "853b1f43c66fbd30efa6526a1fd3bf8a", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "98ba837a52a57e4f944f2e78b07dd5cf", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int a[],int c[],int n)\n{\n    int l=-1,min,i;\n    min=40;\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<min&&c[i]==0)\n        {\n            min=a[i];\n            l=i;\n        }\n\n    }\n    if(l!=-1)\n        c[l]=1;\n  return l;\n}\nint main(){\nint n,l,d,i;\nscanf(\"%d\",&n);\nint a[n],b[n],c[n];\nfor(i=0;i<n;i++){\n    scanf(\"%d %d\",&a[i],&b[i]);\n    c[i]=0;\n}\nl=min(a,c,n);\nd=b[l];\nwhile(l!=-1)\n{\n    if(b[l]>=d)\n        d=b[l];\n        else\n            d=a[l];\n        l=min(a,c,n);\n}\nprintf(\"%d\",d);\n}\n", "fixed": "#include<stdio.h>\nlong long int min(long long int a[],long long int b[],long long int c[],long long int n)\n{\n    long long int min;\n    long long int l=-1,i;\n    min=1000000001;\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==min && c[i]==0){\n            if(b[i]<b[l]){\n                min=a[i];\n                l=i;\n            }\n        }\n        if(a[i]<min&&c[i]==0)\n        {\n            min=a[i];\n            l=i;\n        }\n\n    }\n    if(l!=-1)\n        c[l]=1;\n  return l;\n}\nint main(){\n    long long int n;\nlong long int l,i;\nscanf(\"%lld\",&n);\nlong long int a[n],b[n],c[n],d;\nfor(i=0;i<n;i++){\n    scanf(\"%lld %lld\",&a[i],&b[i]);\n    c[i]=0;\n}\nl=min(a,b,c,n);\nd=b[l];\nwhile(l!=-1)\n{\n    //l=min(a,c,n);\n    if(b[l]>=d)\n        d=b[l];\n        else\n            d=a[l];\n        l=min(a,b,c,n);\n}\nprintf(\"%lld\",d);\nreturn 0;\n}\n"}
{"similarity_score": 0.9987745098039216, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "deb7eb445865ffdaf712774c93106e52", "bug_code_uid": "9279d2ba57c1187c3f552826d647fbf3", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "11fb386927bc8f4560764c45bf07fa50", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int h1, a1, c1;\n    scanf(\"%d %d %d\", &h1, &a1, &c1);\n    int h2, a2;\n    scanf(\"%d %d\", &h2, &a2);\n    int a, b, c, d, e, cnt = 0;\n    a = h1;\n    b = a1;\n    c = c1;\n    d = h2;\n    e = a2;\n    while(d > 0)\n    {\n        if(b >= d)\n        {\n            cnt++;\n            break;\n        }\n        if(a - e > 0) d -= b;\n        else a += c;\n        a -= e;\n        cnt++;\n    }\n    printf(\"%d\\n\", cnt);\n    while(h2 > 0)\n    {\n        if(a1 >= h2)\n        {\n            printf(\"STRIKE\\n\");\n            break;\n        }\n        if(h1 - a2 > 0)\n        {\n            h2 -= a1;\n            printf(\"STRIKE\\n\");\n        }\n        else\n        {\n            h1 += c1;\n            printf(\"HEAL\\n\");\n        }\n        h1 -= a2;\n        printf(\"%d %d\\n\", h1, h2);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int h1, a1, c1;\n    scanf(\"%d %d %d\", &h1, &a1, &c1);\n    int h2, a2;\n    scanf(\"%d %d\", &h2, &a2);\n    int a, b, c, d, e, cnt = 0;\n    a = h1;\n    b = a1;\n    c = c1;\n    d = h2;\n    e = a2;\n    while(d > 0)\n    {\n        if(b >= d)\n        {\n            cnt++;\n            break;\n        }\n        if(a - e > 0) d -= b;\n        else a += c;\n        a -= e;\n        cnt++;\n    }\n    printf(\"%d\\n\", cnt);\n    while(h2 > 0)\n    {\n        if(a1 >= h2)\n        {\n            printf(\"STRIKE\\n\");\n            break;\n        }\n        if(h1 - a2 > 0)\n        {\n            h2 -= a1;\n            printf(\"STRIKE\\n\");\n        }\n        else\n        {\n            h1 += c1;\n            printf(\"HEAL\\n\");\n        }\n        h1 -= a2;\n        //printf(\"%d %d\\n\", h1, h2);\n    }\n    return 0;\n}"}
{"similarity_score": 0.935, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "8e80fdd26297c68056952794c64064b0", "bug_code_uid": "21483213dc48df54c39a431c2c005228", "src_uid": "3a767b3040f44e3e2148cdafcb14a241", "apr_id": "9637def7fc8356cb63b04e57ee9dc1c1", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{   long int test; \n    scanf(\"%d\",&test);\n    long long int a[100000], result=0;\n    for(int i=0;i<test;i++)\n    {\n        scanf(\"%d\",a+i);\n         if(a[i]>1)\n         {\n             result+=(a[i]-1);\n         }     \n        if(result%2==0)\n        {\n            printf(\"2\\n\");\n        }\n        else\n        {\n            printf(\"1\\n\");\n        }\n    }\n}", "fixed": "#include<stdio.h>\nvoid main()\n{   long int test; \n    unsigned long int result=0;\n    scanf(\"%d\",&test);\n    unsigned long int a[100000];\n    for(int i=0;i<test;i++)\n    {\n        scanf(\"%d\",a+i);\n         if(a[i]>1)\n         {\n             result+=(a[i]-1);\n         }     \n        if(result%2==0)\n        {\n            printf(\"2\\n\");\n        }\n        else\n        {\n            printf(\"1\\n\");\n        }\n    }\n}"}
{"similarity_score": 0.9557522123893806, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "07f49d6e790eef66ce45ab3e17ab52ad", "bug_code_uid": "4e9c26fc3a88fbf6dea86425cfb086a0", "src_uid": "94df40fbf9d7e8f91d5e7fde783bb389", "apr_id": "dd99b54d752450b2e8ffc696ac36e6ed", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*-----codeforces#715Problem-B. TMT Document------*/\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t=0, n=0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        char tmt[n];\r\n        scanf(\"%s\", tmt);\r\n        int iT=0, iM=0, fail=0;\r\n        for(int i=0; i<n && fail==0; i++)\r\n        {\r\n            if (tmt[i]=='T')\r\n            {\r\n                iT++;\r\n                if (iT>iM+(n/3))\r\n                {\r\n                    fail=1;\r\n                }\r\n            }\r\n            else if (tmt[i]=='M')\r\n            {\r\n                iM++;\r\n                if (iM>iT)\r\n                {\r\n                    fail=1;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(fail==0){\r\n            printf(\"YES\\n\");\r\n        }else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "/*-----codeforces#715Problem-B. TMT Document------*/\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t=0, n=0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        char tmt[n];\r\n        scanf(\"%s\", tmt);\r\n        int iT=0, iM=0, fail=0;\r\n        for(int i=0; i<n && fail==0; i++)\r\n        {\r\n            if (tmt[i]=='T')\r\n            {\r\n                iT++;\r\n                if (iT>iM+(n/3))\r\n                {\r\n                    fail=1;\r\n                }\r\n            }\r\n            else if (tmt[i]=='M')\r\n            {\r\n                iM++;\r\n                if (iM>iT)\r\n                {\r\n                    fail=1;\r\n                }\r\n            }\r\n        }\r\n        if (iT!=2*(n/3) || iM!=n/3)\r\n        {\r\n            fail=1;\r\n        }\r\n        \r\n        if(fail==0){\r\n            printf(\"YES\\n\");\r\n        }else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.2973856209150327, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "2d7201f4cbe30be75aee8d7c8e16ba0a", "bug_code_uid": "5ffc1d9f94da896bb32ae6eda44eb7c2", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "fe78bad86db4d4f9150a347d3707bf56", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int num,c=0;\n    scanf(\"%d\",&num);\n    for(int i=0;i<num;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<num-1;i++)\n    {\n        if(a[i]>a[i+1])\n        c++;\n    }\n    printf(\"%d\",c);\n}", "fixed": "\n#include <stdio.h>\nint main()\n{\n    int num,i,ans;\n    scanf(\"%d\",&num);\n    int arr[num];\n    for(i=0;i<num;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    int m=arr[0],n=arr[0];\n    ans=0;\n    for(i=0;i<num;i++){\n        if(arr[i]>m){\n            m=arr[i];\n            ans++;\n        }\n        if(arr[i]<n){\n           n=arr[i];\n           ans++;\n        }}\n    printf(\"%d\",ans);\n \n    return 0;\n}"}
{"similarity_score": 0.9942618675013041, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f558dc736860e1466e8427c5303a68eb", "bug_code_uid": "fb2da130e3575b8daa2d48992564ef10", "src_uid": "12c975105a014fb3d9d1ad4794fdb2e8", "apr_id": "cd225a3d2726c61d00febef61c26e342", "difficulty": 2500, "tags": ["binary search", "data structures", "implementation", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t200000\n#define MD\t998244353\n\nint solve(int *aa, int n, long long sum) {\n\tint i, j;\n\tlong long ans;\n\n\tfor (i = (n - 1) % 2 ^ 1; i < n; i += 2)\n\t\tsum -= aa[i];\n\tans = 0;\n\tfor (j = n - 1, i = (n - 1) % 2 ^ 1; j >= 0; j -= 2) {\n\t\tsum -= aa[j];\n\t\twhile (i < n + 2 && sum <= 0) {\n\t\t\tif (i < n)\n\t\t\t\tsum += aa[i];\n\t\t\ti += 2;\n\t\t}\n\t\tans += i / 2;\n\t}\n\treturn ans % MD;\n}\n\nint solve_(int *aa, int n, long long sum) {\n\tif (n <= 2)\n\t\treturn n == 2 && aa[1] > aa[0];\n\treturn (solve(aa + 1, n - 1, sum) + solve(aa + 2, n - 2, sum - aa[0])) % MD;\n}\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int aa[N];\n\t\tint n, i, ans;\n\t\tlong long sum;\n\n\t\tscanf(\"%d\", &n);\n\t\tsum = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\t\tsum += aa[i];\n\t\t}\n\t\tans = (solve_(aa, n, sum / 2 + 1) + solve_(aa, n - 1, sum / 2 + 1)) % MD;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif ((sum -= aa[i] * 2) < 0)\n\t\t\t\tans++;\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t200000\n#define MD\t998244353\n\nint solve(int *aa, int n, long long sum) {\n\tint i, j;\n\tlong long ans;\n\n\tfor (i = (n - 1) % 2 ^ 1; i < n; i += 2)\n\t\tsum -= aa[i];\n\tans = 0;\n\tfor (j = n - 1, i = (n - 1) % 2 ^ 1; j >= 0; j -= 2) {\n\t\tsum -= aa[j];\n\t\twhile (i < n + 2 && sum <= 0) {\n\t\t\tif (i < n)\n\t\t\t\tsum += aa[i];\n\t\t\ti += 2;\n\t\t}\n\t\tans += i / 2;\n\t}\n\treturn ans % MD;\n}\n\nint solve_(int *aa, int n, long long sum) {\n\tif (n <= 2)\n\t\treturn n == 2 && aa[1] >= sum;\n\treturn (solve(aa + 1, n - 1, sum) + solve(aa + 2, n - 2, sum - aa[0])) % MD;\n}\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int aa[N];\n\t\tint n, i, ans;\n\t\tlong long sum;\n\n\t\tscanf(\"%d\", &n);\n\t\tsum = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\t\tsum += aa[i];\n\t\t}\n\t\tans = (solve_(aa, n, sum / 2 + 1) + solve_(aa, n - 1, sum / 2 + 1)) % MD;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif ((sum -= aa[i] * 2) < 0)\n\t\t\t\tans++;\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9988518943742825, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e2ccdd3ecf125226c5432fb7f9f72d6f", "bug_code_uid": "c74cef62c7b648ed900bbc3247d6f9d5", "src_uid": "29639971c98dd98f0292d994d4433e3a", "apr_id": "9f6566ccc5f637f3c8aebdeec8c691f2", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint min(int,int);\nint main()\n{\n    int n,m,sum=0,i,j,k,p,r,h,price=5000000;\n    float f;\n    scanf(\"%d\",&n);\n    int a[n][3];\n      for(i=0;i<n;i++)\n      { scanf(\"%d%d%d\",&a[i][0],&a[i][1],&a[i][2]);}\n      scanf(\"%d\",&m);\n        int b[m][3];\n     for(i=0;i<m;i++)\n     { scanf(\"%d%d%d\",&b[i][0],&b[i][1],&b[i][2]);}\n\n    for(i=0;i<n;i++)\n    {\n        p=2*(a[i][0]+a[i][1]);\n        h=a[i][2];\n         price=5000000;\n        for(j=0;j<m;j++)\n        {\n            r=b[j][0]/h;\n            if(r!=0)\n            {r=r*b[j][1];\n            f=(float)p/r;\n            double d=ceil(f);\n            int walp=d*b[j][2];\n                price=min(walp,price);\n                printf(\"%d\\n\",price);\n        }}\n\n          sum=sum+price;\n    }\n          printf(\"%d\",sum);\n          return 0;\n}\n\nint min(int a,int b)\n{\n    return(a<b?a:b);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint min(int,int);\nint main()\n{\n    int n,m,sum=0,i,j,k,p,r,h,price=5000000;\n    float f;\n    scanf(\"%d\",&n);\n    int a[n][3];\n      for(i=0;i<n;i++)\n      { scanf(\"%d%d%d\",&a[i][0],&a[i][1],&a[i][2]);}\n      scanf(\"%d\",&m);\n        int b[m][3];\n     for(i=0;i<m;i++)\n     { scanf(\"%d%d%d\",&b[i][0],&b[i][1],&b[i][2]);}\n\n    for(i=0;i<n;i++)\n    {\n        p=2*(a[i][0]+a[i][1]);\n        h=a[i][2];\n         price=5000000;\n        for(j=0;j<m;j++)\n        {\n            r=b[j][0]/h;\n            if(r!=0)\n            {r=r*b[j][1];\n            f=(float)p/r;\n            double d=ceil(f);\n            int walp=d*b[j][2];\n                price=min(walp,price);\n                //printf(\"%d\\n\",price);\n        }}\n\n          sum=sum+price;\n    }\n          printf(\"%d\",sum);\n          return 0;\n}\n\nint min(int a,int b)\n{\n    return(a<b?a:b);\n}\n"}
{"similarity_score": 0.9963008631319359, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a297070f29e18799a7cd83086753d74b", "bug_code_uid": "4a0cd9c04672d67934036ce0c6ab795c", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "66bc22c9c24e3ce4fd498a4ac7491832", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint find(int x , int y , int z )\r\n{\r\n        if( x == y+z)  return 0;\r\n        else            return 1);\r\n \r\n}\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int a,b,c;\r\n \r\n   for(int i=1 ; i<= n ; i++)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n \r\n        if (find(a,b,c) == 0 || find(b,a,c) == 0 || find(c,a,b) == 0) printf(\"YES\\n\");\r\n        else printf(\"NO\");\r\n    }    \r\n}", "fixed": "#include<stdio.h>\r\nint find(int x , int y , int z )\r\n{\r\n        if( x == y+z)  return 0;\r\n        else            return 1;\r\n \r\n}\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int a,b,c;\r\n \r\n   for(int i=1 ; i<= n ; i++)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n \r\n        if (find(a,b,c) == 0 || find(b,a,c) == 0 || find(c,a,b) == 0) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }    \r\n}"}
{"similarity_score": 0.9948717948717949, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6b8e71fc41313b8c04d8706009abf68e", "bug_code_uid": "8167b3df1d7ee535502bff75f3b77646", "src_uid": "1a22bc82ddf6b3dfbf270bc5e3294c28", "apr_id": "003c737b398dd676d63ff8e1161c4e6c", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int i,n,s[200000],x[200000],y=1,sum=0,count=0,j,z;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        scanf(\"%d\",&s[i]);\n        sum+=s[i];\n    }\n    if(sum%n!=0) {\n        printf(\"0\\n\");\n        return 0;\n    }\n    sum=sum/n;\n    for(i=1;i<=n;i++) {\n        if(sum==s[i]) {\n            count++;\n            x[y]=s[i];\n            y++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    for(i=1;i<y;i++) {\n        printf(\"%d \",x[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n    int i,n,s[200000],x[200000],y=1,sum=0,count=0,j,z;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        scanf(\"%d\",&s[i]);\n        sum+=s[i];\n    }\n    if(sum%n!=0) {\n        printf(\"0\\n\");\n        return 0;\n    }\n    sum=sum/n;\n    for(i=1;i<=n;i++) {\n        if(sum==s[i]) {\n            count++;\n            x[y]=i;\n            y++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    for(i=1;i<y;i++) {\n        printf(\"%d \",x[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3343465045592705, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "050edb18d2c6d91fe76f434627952c73", "bug_code_uid": "714ecbf8e9fbe1e46b0a0c700c232789", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "c5dcdbfd7711fa1102b52f1e1e8fa90a", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,ara[10000],i,j=0,a=0,k=0,ara2[1000],m;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&ara[i]);\n      m=ara[0];\n     ara2[j]=1;\n    for(i=1;i<n;i++){\n        if(m<=ara[i]){\n                m=ara[i];\n            a++;\n       ara2[j]=a+1;\n        }\n        else{\n                m=ara[i];\n        a=0;\n        j++;\n    }\n    }\n    k=ara2[0];\n    for(i=1;i<j+1;i++){\n        if(k<=ara2[i])\n            k=ara2[i];\n    }\n\n    printf(\"%d\",k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j=0,a=1,k=0;\n    long long int x,m;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&x);\n        if(i==0){\n      m=x;\n     k=1;\n        }\n    else if(i>=1){\n        if(m<=x){\n                m=x;\n            a++;\n        }\n        else{\n                m=x;\n    if(k<a)\n    k=a;\n    a=1;\n\n    }\n     if(i==n-1)\n        {\n            if(k<a)\n                k=a;}\n                }\n    }\n    printf(\"%d\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.0038461538461538464, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "acb6a936a438321c7e8bb285da79e8ef", "bug_code_uid": "dfed14ed72e0ee9c32c9eab7484718b8", "src_uid": "09f5623c3717c9d360334500b198d8e0", "apr_id": "942ca9dea7b50cf18764408c15dbe474", "difficulty": 1600, "tags": ["binary search", "sortings", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\n<CodeBlocks_project_file>\n\t<FileVersion major=\"1\" minor=\"6\" />\n\t<Project>\n\t\t<Option title=\"DNA1\" />\n\t\t<Option pch_mode=\"2\" />\n\t\t<Option compiler=\"gcc\" />\n\t\t<Build>\n\t\t\t<Target title=\"Debug\">\n\t\t\t\t<Option output=\"bin/Debug/DNA1\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Debug/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-g\" />\n\t\t\t\t</Compiler>\n\t\t\t</Target>\n\t\t\t<Target title=\"Release\">\n\t\t\t\t<Option output=\"bin/Release/DNA1\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Release/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-O2\" />\n\t\t\t\t</Compiler>\n\t\t\t\t<Linker>\n\t\t\t\t\t<Add option=\"-s\" />\n\t\t\t\t</Linker>\n\t\t\t</Target>\n\t\t</Build>\n\t\t<Compiler>\n\t\t\t<Add option=\"-Wall\" />\n\t\t</Compiler>\n\t\t<Unit filename=\"main.c\">\n\t\t\t<Option compilerVar=\"CC\" />\n\t\t</Unit>\n\t\t<Extensions>\n\t\t\t<code_completion />\n\t\t\t<envvars />\n\t\t\t<debugger />\n\t\t\t<lib_finder disable_auto=\"1\" />\n\t\t</Extensions>\n\t</Project>\n</CodeBlocks_project_file>\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main ()\n{\n    long long suma=0;\n\n    long long  resultado,mayor;\n    int n,i,a;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&a);\n    mayor=a;\n    suma=a;\n\n    for (i=1;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        suma=suma+a;\n        if (mayor<a)\n        {\n            mayor=a;\n        }\n    }\n    resultado=((suma-1)/(n-1))+1;\n\n    if(mayor>resultado)\n        resultado=mayor;\n\n    printf(\"%I64d\",resultado);\n    return 0;\n}"}
{"similarity_score": 0.980349344978166, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3e03a3429322b947e23c8ed6d9efc56d", "bug_code_uid": "09b9954266d6c2d970933a72da828057", "src_uid": "08679e44ee5d3c3287230befddf7eced", "apr_id": "114d127c6f9cab7e3b0f183af622319d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int i,n;\n   char a[100],b[100],c[100],t,j;\n   scanf(\"%d\",&n);\n   while(n--)\n   {\n       scanf(\"%s\",a);\n       scanf(\"%s\",b);\n       scanf(\"%s\",c);\n       j=0;\n       for(i=0;a[i]!='\\0';i++){\n                if(c[i]==a[i] || c[i]==b[i]){\n                    j++;\n                }\n            }\n       if(j==strlen(a)){\n            printf(\"YES\\n\");\n       }else{\n           printf(\"NO\\n\");\n       }\n   }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int i,n;\n   char a[101],b[101],c[101],t,j;\n   scanf(\"%d\",&n);\n   while(n--)\n   {\n       scanf(\"%s\",a);\n       scanf(\"%s\",b);\n       scanf(\"%s\",c);\n       j=0;\n       for(i=0;a[i]!='\\0';i++){\n                if(c[i]==a[i] || c[i]==b[i]){\n                    j++;\n                }\n            }\n       if(j==strlen(a)){\n            printf(\"YES\\n\");\n       }else{\n           printf(\"NO\\n\");\n       }\n   }\n}\n"}
{"similarity_score": 0.8643101482326112, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "000c9ee5d361ff8a65c5410b5180132d", "bug_code_uid": "538267a75c7e70f6dcee3a7ca0c1f92c", "src_uid": "cf3cfcae029a6997ee62701eda959a60", "apr_id": "08ca00046185d6961baf859b0642755f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint max(int a,int b){\r\n\tif(a>=b)return a;\r\n\telse return b;\r\n}\r\nint min(int a,int b){\r\n\tif(a<=b)return a;\r\n\telse return b;\r\n}\r\nint main(){\r\n\tint i,j,n,m,t,key,mx,mi;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\t\r\n\t\tmx=-9999999;\r\n\t\tmi=9999999;\t\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tscanf(\"%d\",&m);\r\n\t\t\tmx=max(mx,m);\r\n\t\t\tmi=min(mi,m);\r\n\t\t}\r\n\t\tkey=mx-mi;\r\n\t\tprintf(\"%d\\n\",key);\r\n\t}\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint max(int a,int b){\r\n\tif(a>=b)return a;\r\n\telse return b;\r\n}\r\nint min(int a,int b){\r\n\tif(a<=b)return a;\r\n\telse return b;\r\n}\r\nint main(){\r\n\tint i,j,n,m,t,key,mx,mi;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tscanf(\"%d\",&m);\r\n\t\tmx=m;\r\n\t\tmi=m;\t\t\r\n\t\tfor(i=1;i<n;i++){\r\n\t\t\tscanf(\"%d\",&m);\r\n\t\t\tmx=max(mx,m);\r\n\t\t\tmi=min(mi,m);\r\n\t\t}\r\n\t\t\r\n\t\tkey=mx-mi;\r\n\t\tprintf(\"%d\\n\",key);\r\n\t\t\r\n\t}\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.44072164948453607, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "94557e47fe4f87efd67c9ecd89298b07", "bug_code_uid": "d697d02efc76dec5c44548ec7fa9d913", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "255ef988b33b9bc57505d3f878ec9087", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,p,a,b,c,min;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d %d %d %d\",&p,&a,&b,&c);\r\n        for(min=0;;min++) {\r\n            if((p+min)%a==0||(p+min)%b==0||(p+min)%c==0) break;\r\n        }\r\n        printf(\"%d\\n\",min);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    long long p,min;\r\n    long long a[3];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld %lld %lld %lld\",&p,&a[0],&a[1],&a[2]);\r\n        for(int i=0;i<3;i++)\r\n        {\r\n            if(p%a[i]==0) a[i]=0;\r\n            else a[i]=(p/a[i]+1)*a[i]-p;\r\n        }\r\n        min=a[0];\r\n        for(int i=1;i<3;i++) {\r\n            if(a[i]<min) min=a[i];\r\n        }\r\n        printf(\"%lld\\n\",min);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9224137931034483, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "57a0bbda302b63138ad7c277f266755f", "bug_code_uid": "3bc46aff465f23f1f078c47816e8ea46", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "73b298f92d28374f4ab6793464c515d7", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint m,n,a[100],i,j,min,temp,sum=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n-i-1;j++)\n\t\t{\n\t\t\tif(a[j+1]<a[j])\n\t\t\t{\n\t\t\t\ttemp=a[j];a[j]=a[j+1];a[j+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tsum=sum+a[i];\n\t}\n\tprintf(\"%d\",(sum*-1));\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint m,n,a[100],i,j,min,temp,sum=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n-i-1;j++)\n\t\t{\n\t\t\tif(a[j+1]<a[j])\n\t\t\t{\n\t\t\t\ttemp=a[j];a[j]=a[j+1];a[j+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(a[i]<=0)\n\t\tsum=sum+a[i];\n\t\telse\n\t\tbreak;\n\t}\n\tprintf(\"%d\",(sum*-1));\n\treturn 0;\n}"}
{"similarity_score": 0.7009832272990167, "equal_cnt": 29, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 21, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "e2b5118fbb073f999d99d824b07dd53d", "bug_code_uid": "e9aa4dc062077c7c05cb916f8b8c347e", "src_uid": "87c3a8a0d49288d0f6242fe2ac69a641", "apr_id": "2ac292652492f856102b49a1fd7b166a", "difficulty": 1800, "tags": ["dp", "combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long one[200000];\nlong long two[200000];\nlong long takeone(int i){\n\tif(one[i]!=0) return one[i];\n\telse return one[i-1]*10;\n\t\n\t\n}\nlong long taketwo(int i){\n\tif(two[i]!=0) return two[i];\n\telse return two[i-1]*10;\n\t\n}\nmain(){\n\tone[0]=9;\n\ttwo[0]=81;\n\t\n\t\n\tint n;\n\tscanf(\"%d\",&n);\n\t\n\n\tfor(int i=1;i<=n;i++){\n\t\tlong long ans=0;\n\t\tint temp=n-(i-1);\n\t\tif(temp==1) {\n\t\t\tprintf(\"10 \");\n\t\t\tcontinue;\n\t\t}\n\t\telse if (temp==2){\n\t\t\t\n\t\t\tans+=10*takeone(0);\n\t\t\tans+=10*takeone(0);\n\t\t}\n\t\telse if(temp>=3){\n\t\t\tans+=2*10*takeone(n-i-1);\n\t\t\tans+=(temp-2)*10*taketwo(n-i-2);\n\t\t\t\n\t\t}\n\t\t\n\t\tprintf(\"%lld \",ans);\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n}", "fixed": "#include<stdio.h>\nlong long one[200000];\nlong long two[200000];\nlong long c=998244353;\n//long long takeone(int i){\n//\tif(one[i]!=(long long)0) return one[i];\n//\telse return (long long)((takeone(i-1)%c)*10)%c;\n//\t\n//\t\n//}\n//long long taketwo(int i){\n//\tif(two[i]!=(long long)0) return two[i]%c;\n//\telse return (long long)((taketwo(i-1)%c)*10)%c;\n//\t\n//}\nmain(){\n\t\n\tone[0]=9;\n\ttwo[0]=81;\n\t\n\t\n\tint n;\n\tscanf(\"%d\",&n);\n//\tfor(int i=0;i<10;i++){\n//\t\tprintf(\"%lld and %lld\\n\",takeone(i),taketwo(i));\n//\t\t\n//\t}\n\n\tfor(int i=1;i<n;i++){\n\t\tone[i]=((one[i-1]%c)*10)%c;\n\t\ttwo[i]=((two[i-1]%c)*10)%c;\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\n\tfor(int i=1;i<=n;i++){\n\t\tlong long ans=0;\n\t\tint temp=n-(i-1);\n\t\tif(temp==1) {\n\t\t\tprintf(\"10 \");\n\t\t\tcontinue;\n\t\t}\n\t\telse if (temp==2){\n\t\t\t\n\t\t\tans+=(long long)10*one[0];     //takeone(0);\n\t\t\tans+=(long long)10*one[0];      //takeone(0);\n\t\t}\n\t\telse if(temp>=3){\n\t\t\tans+=(long long)(2*10*one[n-i-1])%c;   //takeone(n-i-1))%c;\n\t\t\tans+=(long long)(temp-2)*10*two[n-i-2]%c;     //taketwo(n-i-2)%c;\n\t\t\t\n\t\t}\n\t\tans=ans%c;\n\t\t\n\t\tprintf(\"%lld \",ans);\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n}"}
{"similarity_score": 0.0034482758620689655, "equal_cnt": 1, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "72016da2da20fb7f03ab77f7f5d7d6c6", "bug_code_uid": "5d3d94787750997278ee6a93698557c1", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "4d033400b476203a1cdba72d81632367", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "Div7.c", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n    while (tc--)\r\n    {\r\n        int n,a,N;\r\n        scanf(\"%d\", &n);\r\n        N=n;\r\n        if (N>107)\r\n        {\r\n            a = N%7;\r\n            N -= a;\r\n        }\r\n        // else if (N>99 && N<=107)\r\n        // {\r\n        //     N = 105;\r\n        // }\r\n        else\r\n        {\r\n            a = N%7;\r\n            N -= a;\r\n        }\r\n\r\n        if ((n/10)%10 == (N/10)%10)\r\n        {\r\n        printf(\"%d\\n\", N);\r\n        }\r\n\r\n        else\r\n        printf(\"%d\\n\", n+(7-a));\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8495575221238938, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "de9148d03d8ef2e82474ede065727308", "bug_code_uid": "fd14e7adb6bcafceb94beb48b2873be7", "src_uid": "27b73a87fc30c77abb55784e2e1fde38", "apr_id": "0876eae0c93b1296c13ef10b089e4167", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,k,f;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar str[n][2*n+1];\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tf=j-1;\r\n\t\t\tfor(k=0;k<n-j;k++)\r\n\t\t\t{\r\n\t\t\t\tstr[j][k]='(';\r\n\t\t\t}\r\n\t\t\tfor(k=n+1-j;f>=0;k=k+2,f--)\r\n\t\t\t{\r\n\t\t\t\tstr[j][k]='(';\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\t{\r\n\t\t\t\tif(str[j][k]!='(')\r\n\t\t\t\tstr[j][k]=')';\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\tprintf(\"%c\",str[j][k]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,k,f;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar str[n][2*n+1];\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\tstr[j][k]='\\0';\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tf=j-1;\r\n\t\t\tfor(k=0;k<n-j;k++)\r\n\t\t\t{\r\n\t\t\t\tstr[j][k]='(';\r\n\t\t\t}\r\n\t\t\tfor(k=n+1-j;f>=0;k=k+2)\r\n\t\t\t{\r\n\t\t\t\tstr[j][k]='(';\r\n\t\t\t\tf--;\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\t{\r\n\t\t\t\tif(str[j][k]!='(')\r\n\t\t\t\tstr[j][k]=')';\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<2*n;k++)\r\n\t\t\tprintf(\"%c\",str[j][k]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.4665012406947891, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "ff206f20b57e9e9cded335fa6fdab329", "bug_code_uid": "34bc85b031109d797094e08685ef6ec7", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "8c53ead4673cd5d36b8771cfa3eb597a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[7];\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    int max=0;\n    for(i=0;i<n;i++){\n        if(arr[i]>max){\n            max=arr[i];\n        }\n    }\n    int y;\n    for(i=n;i>0;i--){\n        if(arr[i]==max){\n            y=i;\n        }\n    }\n    int min=1000000;\n    for(i=0;i<n;i++){\n        if(arr[i]<min){\n            min=arr[i];\n        }\n    }\n    int z;\n    for(i=0;i<n;i++){\n        if(arr[i]==min){\n            z=i;\n        }\n    }\n    int res=y+n-1-z;\n    if(y>z){\n        res--;\n    }\n    printf(\"%d\",res);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int x;\n    scanf(\"%d\",&x);\n    int arr[x];\n    int i;\n    for(i=0;i<x;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    int max=arr[0];\n    int min=arr[0];\n    int maxPlace=0;\n    int minPlace=0;\n    for(i=0;i<x;i++){\n        if(arr[i]>max){\n            max=arr[i];\n            maxPlace=i;\n        }\n        if(arr[i]<=min){\n            min=arr[i];\n            minPlace=i;\n        }\n    }\n    int k=0;\n    if(maxPlace>minPlace){\n        k=1;\n    }\n    printf(\"%d\",maxPlace+x-1-minPlace-k);\n    return 0;\n}\n"}
{"similarity_score": 0.14492753623188406, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e100a9a546eb8437d41f173fb48d69e0", "bug_code_uid": "2ccac26a3d6e76b524fc1776ce4ab4e9", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "a4daf1f3e177a6cfee5635f86257ef64", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int k, i, temp, max = -1;\n    scanf(\"%I64d\", &k);\n\n    for(i=0; i<k; i++){\n        scanf(\"%I64d\", &temp);\n        if(temp > max)\n            max = temp;\n    }\n    if(max <= 25)\n        printf(\"0\");\n    else\n        printf(\"%I64d\", max - 25);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n, a, b;\n    scanf(\"%d %d %d\", &n, &a, &b);\n    char str[100001];\n    scanf(\"%s\", str);\n\n    if(str[a-1] == str[b-1])\n        printf(\"0\");\n    else\n        printf(\"1\");\n\n    return 0;\n}"}
{"similarity_score": 0.6452353616532721, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7e6d69f828f8768ed8fd5cbb9aeab0c1", "bug_code_uid": "adb63f0f4d92753bf13c83f5ae46ea6e", "src_uid": "1c597da89880e87ffe791dd6b9fb2ac7", "apr_id": "75bcb1ffec3ad9e5e32a54fb8db089c3", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n int main()\r\n {\r\nint t;\r\nint n,i;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{  int cnt=0;\r\n\r\n  scanf(\"%d\",&n);\r\n  int a[n];\r\n  for(i=0;i<n;i++)\r\n  {\r\n      scanf(\"%d\",&a[i]);\r\n  }\r\nfor(int j=0;j<500;j++)\r\n{\r\n   for(i=(n-1);i>=1;i--)\r\n  {\r\n      if((a[i]>=a[i-1])&&(a[i]-a[i-1]>=0))\r\n        {\r\n         a[i]=a[i]-a[i-1];\r\n        }\r\n  }\r\n}\r\nfor(i=1;i<n;i++)\r\n{\r\n    if(a[i]!=0)\r\n    {\r\n        cnt++;\r\n    }\r\n}\r\nif(cnt==0)\r\n{\r\n    printf(\"YES\\n\");\r\n}\r\nelse\r\n{\r\n    printf(\"NO\\n\");\r\n}\r\n}\r\n return 0;}\r\n", "fixed": "#include<stdio.h>\r\n\r\n int main()\r\n {\r\nint t;\r\nint n,i;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{  int cnt=0;\r\n\r\n  scanf(\"%d\",&n);\r\n  int a[n];\r\n  for(i=0;i<n;i++)\r\n  {\r\n      scanf(\"%d\",&a[i]);\r\n  }\r\n  for(i=0;i<n;i++)\r\n  {\r\n      if(a[i]%a[0]!=0)\r\n      {\r\n          cnt++;\r\n      }\r\n  }\r\n  if(cnt==0)\r\n    printf(\"YES\\n\");\r\n  else\r\n    printf(\"NO\\n\");\r\n}\r\n return 0;}\r\n"}
{"similarity_score": 0.7344913151364765, "equal_cnt": 17, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "4a285d6ae31ebf7c993a65ec8667cdfb", "bug_code_uid": "256d1b7bc0bb8cbff76caee7f51ad53c", "src_uid": "76b3667cce9e23675e21caf6926f608d", "apr_id": "4499ec8ea937760d7f325a0cccebd0b3", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\r\n    \r\n\r\n    int t, n;\r\n    int ara[n];\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 1; i <= t; i--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &ara[i]);\r\n        }\r\n    }\r\n\r\n    if (ara[1] == 1)\r\n    {\r\n        printf(\"Yes\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"No\");\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int ara[n];\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &ara[i]);\r\n        }\r\n        \r\n        if(ara[0] == 1) {\r\n            printf(\"Yes\\n\");\r\n        }else {\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9963503649635036, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "24ecee302b546410ced8dcd6c54217d8", "bug_code_uid": "840fc7fa18b84be60c22ea03bc26c16e", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "b22650151d7b6471c887e026735ffad0", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 1; i <= t; i++) {\r\n        int aMan, bMan, cMan;\r\n        scanf(\"%d %d %d\", &aMan, &bMan, &cMan);\r\n\r\n        int deltaMan = aMan - bMan;\r\n\r\n        int dMan = (deltaMan < 0) ? deltaMan * -1 : deltaMan;\r\n\r\n        if (dMan * 2 < cMan || (dMan * 2 <= aMan || dMan * 2 <= bMan))\r\n            dMan = -1;\r\n        else if (cMan<=dMan)\r\n            dMan += cMan;\r\n        else\r\n            dMan = cMan-dMan;\r\n\r\n        printf(\"%d\\n\", dMan);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 1; i <= t; i++) {\r\n        int aMan, bMan, cMan;\r\n        scanf(\"%d %d %d\", &aMan, &bMan, &cMan);\r\n\r\n        int deltaMan = aMan - bMan;\r\n\r\n        int dMan = (deltaMan < 0) ? deltaMan * -1 : deltaMan;\r\n\r\n        if (dMan * 2 < cMan || dMan * 2 < aMan || dMan * 2 < bMan)\r\n            dMan = -1;\r\n        else if (cMan<=dMan)\r\n            dMan += cMan;\r\n        else\r\n            dMan = cMan-dMan;\r\n\r\n        printf(\"%d\\n\", dMan);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.7669291338582677, "equal_cnt": 19, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "a4cef2a102db33b5344f7184cc4830ae", "bug_code_uid": "ad6c476aaefa956d29d4c90489e5f9be", "src_uid": "2fee6c39d4e55f903837ef81e818eb07", "apr_id": "29b47c9430ed766598102dbe8cba754b", "difficulty": 800, "tags": ["data structures", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint s1[200010],s2[200010];\r\nint max(int a,int b){\r\n\tif(a>=b){\r\n\t\treturn a;\r\n\t}\r\n\telse{\r\n\t\treturn b;\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&s1[i]);\r\n\t\t}\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&s2[i]);\r\n\t\t}\r\n\t\tint time=s2[0];\r\n\t\tprintf(\"%d \",s2[0]-s1[0]);\r\n\t\tfor(int i=1;i<n;i++){\r\n\t\t\tint d=max(time,s1[i]);\r\n\t\t\tif(i!=n-1){\r\n\t\t\t\tprintf(\"%d \",s2[i]-d);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tprintf(\"%d\\n\",s2[i]-d);\t\r\n\t\t\t}\r\n\t\t\ttime=s2[i];\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nlong long s1[200010],s2[200010];\r\nlong long max(long long a,long long b){\r\n\tif(a>=b){\r\n\t\treturn a;\r\n\t}\r\n\telse{\r\n\t\treturn b;\r\n\t}\r\n}\r\nlong long main()\r\n{\r\n\tlong long t;\r\n\tscanf(\"%lld\",&t);\r\n\twhile(t--){\r\n\t\tlong long n;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tfor(long long i=0;i<n;i++){\r\n\t\t\tscanf(\"%lld\",&s1[i]);\r\n\t\t}\r\n\t\tfor(long long i=0;i<n;i++){\r\n\t\t\tscanf(\"%lld\",&s2[i]);\r\n\t\t}\r\n\t\tlong long time=s2[0];\r\n\t\tif(n==1){\r\n\t\t\tprintf(\"%lld\\n\",s2[0]-s1[0]);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"%lld \",s2[0]-s1[0]);\r\n\t\t}\r\n\t\r\n\t\tfor(long long i=1;i<n;i++){\r\n\t\t\tlong long d=max(time,s1[i]);\r\n\t\t\tif(i!=n-1){\r\n\t\t\t\tprintf(\"%lld \",s2[i]-d);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tprintf(\"%lld\\n\",s2[i]-d);\t\r\n\t\t\t}\r\n\t\t\ttime=s2[i];\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9972527472527473, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1c92c7f3fbe2f564fbe513861275e2c3", "bug_code_uid": "8090efb27751ff5a43ba940a05c40d5c", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "12224ee18c734cb2882078cd14ad1270", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0;i<n;i++) scanf(\"%d\",&arr[i]);\n    int min=abs(arr[0]-arr[n-1]),a=1,b=5;\n    for(i=0;i<n;i++){\n            if(abs(arr[i]-arr[i+1])<min){\n                min=abs(arr[i]-arr[i+1]);\n                a=i+1;\n                b=i+2;\n            }\n    }\n    printf(\"%d %d\",a,b);\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0;i<n;i++) scanf(\"%d\",&arr[i]);\n    int min=abs(arr[0]-arr[n-1]),a=1,b=n;\n    for(i=0;i<n;i++){\n            if(abs(arr[i]-arr[i+1])<min){\n                min=abs(arr[i]-arr[i+1]);\n                a=i+1;\n                b=i+2;\n            }\n    }\n    printf(\"%d %d\",a,b);\n}\n\n"}
{"similarity_score": 0.7981093855503039, "equal_cnt": 24, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 11, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "ed508cfc0d44c703a2a11b18f11b25c2", "bug_code_uid": "3bd97f8be432f88fad7443953c31daf1", "src_uid": "1898e591b40670173e4c33e08ade48ba", "apr_id": "398b7d2bbd130b5569e7de0a47bc66f4", "difficulty": 1400, "tags": ["constructive algorithms", "interactive", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint result__[5050];\nint query(int i, int j) {\n    int res;\n    printf(\"? %d %d\\n\", i, j);\n    fflush(stdout);\n    scanf(\"%d\", &res);\n    return res;\n}\nvoid solve(int n, int* result) {\n    int a = query(1, 2);\n    int b = query(1, 3);\n    int c = query(2, 3);\n    int a1 = (a + b - c) / 2; // (a1 + a2 + a1 + a3 - (a2 + a3)) = 2a1\n    result[0] = a1;\n    result[1] = a - a1;\n    result[2] = b - a1;\n    for(int i = 3; i < n; i++) {\n        result[i] = query(1, i + 1) - a1;\n    }\n}\nint main(void) {\n    int n;\n    scanf(\"%d\", &n);\n    solve(n, result__);\n    printf(\"!\");\n    for(int i = 0; i < n - 1; i++) {\n        printf(\" %d \", result__[i]);\n    }\n} ", "fixed": "#include <stdio.h>\nunsigned int result__[5050];\nunsigned int query(unsigned int a, unsigned int b)\n{\n\tprintf(\"? %u %u\\n\",a,b);\n\tfflush(stdout);\n\tunsigned int r;\n\tscanf(\"%u\",&r);\n\treturn r;\n}\nvoid solve(unsigned int n, unsigned int* result) {\n    unsigned int a = query(1, 2);\n    unsigned int b = query(1, 3);\n    unsigned int c = query(2, 3);\n    unsigned int a1 = (a + b - c) / 2; // (a1 + a2 + a1 + a3 - (a2 + a3)) = 2a1\n    result[0] = a1;\n    result[1] = a - a1;\n    result[2] = b - a1;\n    for(unsigned int i = 3; i < n; i++) {\n        result[i] = query(1, i + 1) - a1;\n    }\n}\nint main(void) {\n    unsigned int n;\n    scanf(\"%u\", &n);\n    solve(n, result__);\n    printf(\"! \");\n    for(unsigned int i = 0; i < n - 1; i++) {\n        printf(\"%u \", result__[i]);\n    }\n    printf(\"%u\", result__[n - 1]);\n} "}
{"similarity_score": 0.8367346938775511, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b468a644a8cd1b9b3c1e2569b415382e", "bug_code_uid": "1b85b61827d1c4636246fc4fb74415f7", "src_uid": "bbf2dbdea6dd3aa45250ab5a86833558", "apr_id": "82ffd16c2c9db237583dcf22b1c09310", "difficulty": 1300, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char s[1001];\n    gets(s);\n    int i;\n    int arr[26]={0};\n    for(i=0;i<strlen(s);i++){\n        arr[s[i]-97]++;\n    }\n    int num=strlen(s);\n    int numOfOdds=0;\n    for(i=0;i<26;i++){\n        if(arr[i]%2!=0){\n            numOfOdds++;\n        }\n    }\n    if(numOfOdds%2!=0){\n        printf(\"First\");\n    }\n    else{\n        printf(\"Second\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char s[1001];\n    gets(s);\n    int i;\n    int arr[26]={0};\n    for(i=0;i<strlen(s);i++){\n        arr[s[i]-97]++;\n    }\n    int num=strlen(s);\n    int numOfOdds=0;\n    for(i=0;i<26;i++){\n        if(arr[i]%2!=0){\n            numOfOdds++;\n        }\n    }\n    if(numOfOdds>=1)\n    numOfOdds--;\n    if(numOfOdds%2!=0){\n        printf(\"Second\");\n    }\n    else{\n        printf(\"First\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7703109327983951, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "5bed788f243653401bfc50fc961e708d", "bug_code_uid": "924c242d9ba498cf0427d60945db8829", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "21242b940d1e07240b870f65e58fbc18", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,a[n],max=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(max<a[i])\n\t\t  max=a[i];\n\t}\n\tint q,j=0;\n\t//printf(\"%d \",max); \n\tint b[max+1];\n\tfor(i=0;i<=max;i++)\n\t\tb[i]=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tb[a[i]]++;\n\t}\n\tfor(i=1;i<=max;i++)\n\t{\n\t\twhile(b[i]--)\n\t\t{\n\t\t\ta[j]=i;\n\t\t\tj++;\n\t\t}\n\t}\n\t \n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint m,c=0;\n\t\tscanf(\"%d\",&m);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(m>=a[i])\n\t\t\t\tc++;\n\t\t\telse \n\t\t\t\tbreak;\n\t\t\t\n\t\t}\n\t\tprintf(\"%d\\n\",c);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,a[n],max=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(max<a[i])\n\t\t  max=a[i];\n\t}\n\tint q,j=0;\n\t//printf(\"%d \",max); \n\tint b[max+1],c[max+1];\n\tfor(i=0;i<=max;i++)\n\t{\n\t\tb[i]=0;\n\t\tc[i]=0;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tb[a[i]]++;\n\t}\n\tfor(i=1;i<=max;i++)\n\t{\n\t\tc[i]=c[i-1]+b[i];\n\t}\n\t \n\t \n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint m;\n\t\tscanf(\"%d\",&m);\n\t\tif(m>max)\n\t\t printf(\"%d\\n\",n);\n\t\telse\n\t\t\tprintf(\"%d\\n\",c[m]);\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8408463661453542, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "948282324ed2b11dc78e1df992b4b1c9", "bug_code_uid": "f29d70210b974b9202071790976307b5", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "e4ad922b034b7ffdd958faf0b1d086e8", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,j,k,t;\n    scanf(\"%lld\",&t);\n    while(t>0)\n    {\n        long long int a,b;\n        scanf(\"%lld%lld%lld\",&a,&b,&n);\n        long long int count=0;\n        while((a<=n)&&(b<=n))\n        {\n            a=a+b;\n            count++;\n            if(a>n)\n            break;\n            count++;\n            b=a+b;\n            if(b>n)\n            break;\n        }\n        printf(\"%lld\\n\",count);\n        t--;\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,j,k,t;\n    scanf(\"%lld\",&t);\n    while(t>0)\n    {\n        long long int a,b;\n        scanf(\"%lld%lld%lld\",&a,&b,&n);\n        long long int count=0;\n        if(b>a)\n        {\n            long long int c=b;\n            b=a;\n            a=c;\n        }\n        long long int a1=a,b1=b;\n        while((a<=n)&&(b<=n))\n        {\n            b=a+b;\n            count++;\n            if(b>n)\n            break;\n            count++;\n            a=a+b;\n            if(a>n)\n            break;\n        }\n        long long int cout1=0;\n        printf(\"%lld\\n\",count);\n        t--;\n    }\n}"}
{"similarity_score": 0.9388753056234719, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "405314c20b70b3b60151298ef3cad5c4", "bug_code_uid": "cf41aa65024aaf13e4b123764e8d8917", "src_uid": "a6c6b2a66ba51249fdc5d4188ca09e3b", "apr_id": "3ce51d5e024ac326a243f2218fda3e25", "difficulty": 1700, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\ntypedef long long ll;\r\nint main(){\r\n    int t;\r\n    int n;\r\n    int tmp;\r\n    int arr[100000]={0};\r\n    int cnt;\r\n    scanf(\"%d\",&t);\r\n    for(;t>0;t--){\r\n        tmp=-1;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",arr+i);\r\n            if(arr[i]==1){\r\n                tmp=i;\r\n            }\r\n        }\r\n        if(tmp==-1){\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        cnt=1;\r\n        for(int i=0;i<n;i++){\r\n            if(arr[(i+1)%n]-arr[i]>=2){\r\n                tmp=-1;\r\n                break;\r\n            }\r\n        }\r\n        if(tmp==-1){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\ntypedef long long ll;\r\nint main(){\r\n    int t;\r\n    int n;\r\n    int tmp;\r\n    int arr[100000]={0};\r\n    int cnt;\r\n    scanf(\"%d\",&t);\r\n    for(;t>0;t--){\r\n        tmp=-1;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",arr+i);\r\n            if(arr[i]==1){\r\n                tmp=i;\r\n            }\r\n        }\r\n        if(tmp==-1){\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        cnt=1;\r\n        for(int i=0;i<n;i++){\r\n            if(arr[(i+1)%n]-arr[i]>=2){\r\n                tmp=-1;\r\n                break;\r\n            }\r\n            if(arr[i]==1&&i!=tmp){\r\n                tmp=-1;\r\n                break;\r\n            }\r\n        }\r\n        if(tmp==-1){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.811529933481153, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ec875bb807630d0136d5c4f3c8baa060", "bug_code_uid": "a2c86ab9fd47b7d3ee632a78165f112d", "src_uid": "4a473e34f2be18a19c306d80d4693199", "apr_id": "2a47e92fe56b4046713ccf917a93e6c5", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint solve(int n)\r\n{\r\n     for (int i = 1; i <= n; i++)\r\n    {\r\n        for (int j = 1; j <= i; j++)\r\n        {\r\n            if (j==1||j==i)\r\n            {\r\n                printf(\"1 \");\r\n            }\r\n            // else if (i%2==0)\r\n            // {\r\n            //     printf(\"1 \");\r\n            // }\r\n            else\r\n            {\r\n                printf(\"0 \");\r\n            }\r\n            \r\n        }\r\n        printf(\"\\n\");\r\n        \r\n    }\r\n\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    solve(n);\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint solve(int n)\r\n{\r\n     for (int i = 1; i <= n; i++)\r\n    {\r\n        for (int j = 1; j <= i; j++)\r\n        {\r\n            if (j==1||j==i)\r\n            {\r\n                printf(\"1 \");\r\n            }\r\n            // else if (i%2==0)\r\n            // {\r\n            //     printf(\"1 \");\r\n            // }\r\n            else\r\n            {\r\n                printf(\"0 \");\r\n            }\r\n            \r\n        }\r\n        printf(\"\\n\");\r\n\r\n    }\r\n\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    int v;\r\n    \r\n    // printf(\"Enter number of test cases\");\r\n    // scanf(\" %d\", &n);\r\n    // printf(\"Enter number of inputs: \");\r\n    scanf(\" %d\", &v);\r\n    for (int i = 1; i <=v; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        solve(n);\r\n    }\r\n    printf(\"\\n\");\r\n    \r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.414050822122571, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "a1db3acd4b01d43b24defd2ea4aa5f86", "bug_code_uid": "094f64a0c19cb18f24a3a1c1034c0bab", "src_uid": "a5d56056fd66713128616bc7c2de8b22", "apr_id": "ef57fbbe7311ba47066fe55a4e92a3cf", "difficulty": 1200, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&ar[i]);\n    for(int i=0;i<n-1;i++)\n        for(int j=0;j<n-i-1;j++)\n            if(ar[j]>ar[j+1])\n                ar[j+1]=(ar[j]+ar[j+1])-(ar[j]=ar[j+1]);\n    int eve=0,odd=0;\n    for(int i=n-1;i>=0;i--)\n        if(ar[i]%2==0){\n            eve=ar[i];\n            break;\n        }\n    for(int i=n-1;i>=0;i--)\n        if(ar[i]%2==1){\n            odd=ar[i];\n            break;\n        }\n    if(odd==0)\n        printf(\"0\");\n    else\n        printf(\"%d\",eve+odd);\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,eve=0,odd=0,o=0,min=0;\n    scanf(\"%d\",&n);\n    int ar[n];\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&ar[i]);\n        if(ar[i]%2==0)\n            eve+=ar[i];\n        else{\n            odd+=ar[i];\n            o++;\n        }\n    }\n    if(o==0)\n        printf(\"0\");\n    else if(o%2==1)\n        printf(\"%d\",eve+odd);\n    else\n    {\n        for(int i=0;i<n-1;i++)\n            for(int j=0;j<n-i-1;j++)\n                if(ar[j]>ar[j+1]){\n                    int temp=ar[j];\n                    ar[j]=ar[j+1];\n                    ar[j+1]=temp;\n                }\n        for(int i=0;i<n;i++)\n            if(ar[i]%2==1){\n                min=ar[i];\n                break;\n            }\n        printf(\"%d\",eve+odd-min);\n    }\n}"}
{"similarity_score": 0.9989506820566632, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4d945d8a31b55b4cd31919e3263d3289", "bug_code_uid": "a298234489c8ef4330c8624786871991", "src_uid": "b34846d90dc011f2ef37a8256202528a", "apr_id": "35fb75a617f2ca7dca7f2a545f29bbeb", "difficulty": 1200, "tags": ["greedy", "constructive algorithms", "math", "implementation", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    long long b,d,s,max;\n    while(scanf(\"%lld%lld%lld\",&b,&d,&s)!=EOF)\n    {\n        if(b==d&&d==s)\n            printf(\"0\\n\");\n        else\n        {\n            max=b;\n            if(max<d)\n                max=d;\n            if(max<s)\n                max=s;\n            if(max==b)\n            {\n                if(b==d)\n                    printf(\"%I64d\\n\",b-1-s);\n                else if(b==s)\n                    printf(\"%I64d\\n\",b-d-1);\n                else\n                    printf(\"%I64d\\n\",b-1-d-s+b-1);\n            }\n            else if(max==d)\n            {\n                if(d==s)\n                    printf(\"%I64d\\n\",d-1-b);\n                else if(b>s)\n                    printf(\"%I64d\\n\",d-b+d-1-s);\n                else\n                    printf(\"%I64d\\n\",d-1-b+d-1-s);\n            }\n            else\n                printf(\"%I64d\\n\",s-1-b+s-1-d);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    long long b,d,s,max;\n    while(scanf(\"%lld%lld%lld\",&b,&d,&s)!=EOF)\n    {\n        if(b==d&&d==s)\n            printf(\"0\\n\");\n        else\n        {\n            max=b;\n            if(max<d)\n                max=d;\n            if(max<s)\n                max=s;\n            if(max==b)\n            {\n                if(b==d)\n                    printf(\"%I64d\\n\",b-1-s);\n                else if(b==s)\n                    printf(\"%I64d\\n\",b-d-1);\n                else\n                    printf(\"%I64d\\n\",b-1-d-s+b-1);\n            }\n            else if(max==d)\n            {\n                if(d==s)\n                    printf(\"%I64d\\n\",d-1-b);\n                else if(b>s)\n                    printf(\"%I64d\\n\",d-b+d-1-s-1);\n                else\n                    printf(\"%I64d\\n\",d-1-b+d-1-s);\n            }\n            else\n                printf(\"%I64d\\n\",s-1-b+s-1-d);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9490254872563718, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "ea695071872d362c5c8b38d08045a670", "bug_code_uid": "a888e75199d72399824c252301206fb2", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "cee79b7c82f1fe838996216f7ba09575", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint len(char str[])\n{\n    int i=0;\n    while(str[i])i++;\n    return i;\n}\nint pal(char str[],int s,int e)\n{\n    int i,j;\n    \n\n    for(i=s,j=e-1;i<(e-s)/2;i++,j--){\n        if(str[i]!=str[j]){\n            return -1;\n            break;\n            }\n        }\n    return 1;\n    }\nint main(){\n    int k,l,i,c,l1;\n\n    char str[1000];\n    gets(str);\n    scanf(\"%d\",&k);\n    l=len(str);\n    c=0;\n    i=0;\n    if(l%k!=0)printf(\"NO\");\n    else {\n\n\n    l1=l/k;\n\n    while(i<=l){\n        c=pal(str,i,i+l1);\n        if(c==-1){\n            printf(\"NO\");\n            break;}\n        i=i+l1;\n\n\n    }\n    if(i>l)printf(\"YES\");}\n    return 0;}\n", "fixed": "#include<stdio.h>\nint len(char str[])\n{\n    int i=0;\n    while(str[i])i++;\n    return i;\n}\nint pal(char str[],int s,int e)\n{\n    int i,j;\n\n\n\n    for(i=s,j=e-1;i<s+(e-s)/2;i++,j--){\n        if(str[i]!=str[j]){\n\n            return -1;\n            break;\n            }\n        }\n    return 1;\n    }\nint main(){\n    int k,l,i1,i2,c,l1;\n\n    char str[1000],a;\n    gets(str);\n    scanf(\"%d\",&k);\n    l=len(str);\n    c=0;\n    i1=0;\n\n\n    if(l%k!=0)printf(\"NO\");\n    else {\n\n\n    l1=l/k;\n    i2=i1+l1;\n    while(i2<=l){\n        c=pal(str,i1,i2);\n        if(c==-1){\n            printf(\"NO\");\n            break;}\n        i1=i2;\n        i2=i2+l1;\n\n\n    }\n    if(i2>l)printf(\"YES\");}\n    return 0;}\n"}
{"similarity_score": 0.861244019138756, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "8f937eae0d2553f46457df7fec774c04", "bug_code_uid": "f740a70dbb88fa9cd6a48efcf4b3e0e1", "src_uid": "e22b10cdc33a165fbd73b45dc5fbedce", "apr_id": "e3e10ee260a95581f87f905f43dc3d04", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    int araa[n+5];\n    int arab[n+5];\n    int maxi = 0;\n    int i;\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &arab[i]);\n    for(i=0; i<n; i++){\n        araa[i] = arab[i] + maxi;\n        maxi = (maxi > araa[i] ? maxi : araa[i]);\n    }\n    for(i=0; i<n; i++){\n        printf(\"%d\", araa[i]);\n        if(i == n-1)\n            printf(\"\\n\");\n        else\n            printf(\" \");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    int araa[n+5];\n    int arab[n+5];\n    int maxi = 0;\n    int i;\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &arab[i]);\n    for(i=0; i<n; i++){\n        araa[i] = arab[i] + maxi;\n        maxi = (maxi > araa[i] ? maxi : araa[i]);\n    }\n    for(i=0; i<n; i++){\n        printf(\"%d \", araa[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6332288401253918, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8837190b4d4866345408896269f72fff", "bug_code_uid": "2cddc926c84945a54adc0fd34185463d", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "84e3176db2a8bc9257d0d97e8b0686a1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    char arr[100];\n    int a = 0, d = 0;\n    \n    scanf(\"%s\", arr);\n    int i = 0;\n    while(arr[i]) \n    {\n        if(arr[i] == 'A') a++;\n        else d++;\n        i++;\n    }\n    if(a > d) printf(\"Anton\");\n    else if(a == d) printf(\"Friendship\");\n    else printf(\"Danik\");\n}", "fixed": "#include <stdio.h>\n \nint main(void)\n{\n    char c;\n    \n    int n,a = 0, d = 0, i;\n scanf(\"%d\", &n);   \n scanf(\"\\n\");\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%c\", &c);\n        if(c == 'A') a++;\n        else d++;\n    }\n    if(a > d) printf(\"Anton\");\n    else if(a == d) printf(\"Friendship\");\n    else printf(\"Danik\");\n}"}
{"similarity_score": 0.9764192139737992, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e171102ea6cd6ea6ac55f709662ecb36", "bug_code_uid": "466210462127b33088c0a5c2e35d7e5a", "src_uid": "f8335c59cd05988c8053f138c4df06aa", "apr_id": "67ab0fcf8bc160d472b1b90b99014aa6", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,k,x,y,a,n;\r\n    scanf(\"%d\",&t);\r\n    \r\n    for(int i = 0; i < t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        k =1;\r\n        \r\n        while( n / k*k != 0)\r\n        {\r\n            k++;\r\n        }\r\n        a = k-1;\r\n        \r\n        if ( n == a*a)\r\n        x=a; y = 1;\r\n        \r\n        else if( n <= a*a+a+1)\r\n        {\r\n            x = n % (a*a);\r\n            y = n + 1;\r\n        }\r\n        else\r\n        {\r\n            x = n+1;\r\n            y = (a+1)*(a+1)-n+1;\r\n        }\r\n        printf(\"%d %d\\n\",x,y);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int t,k,x,y,a,n;\r\n    scanf(\"%d\",&t);\r\n    \r\n    for(int i = 0; i < t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        k =1;\r\n        \r\n        while( n / (k*k) != 0)\r\n        {\r\n            k++;\r\n        }\r\n        a = k-1;\r\n        \r\n        if ( n == a*a)\r\n       {\r\n          x=a; y = 1;\r\n       }\r\n        else if( n <= (a*a)+a+1)\r\n        {\r\n            x = n-(a*a);\r\n            y = a + 1;\r\n        }\r\n        else\r\n        {\r\n            x = a+1;\r\n            y = (a+1)*(a+1)-n+1;\r\n        }\r\n        printf(\"%d %d\\n\",x,y);\r\n    }\r\n}"}
{"similarity_score": 0.8594871794871795, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "931aefdda36a221cb4c73ef8729879c4", "bug_code_uid": "e2b386bb502e1f5d3a8bcc0e34284585", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "a2f0aa685f38d0c59ccb0f0d68155254", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,a1,b1,a2,b2,ar;\n    \n    scanf(\"%d\",&n);\n    for(int t=0;t<n;t++)\n    {   ar=0;\n        scanf(\"%d%d\",&a1,&b1);\n        scanf(\"%d%d\",&a2,&b2);\n        ar=a1*b1+a2*b2;\n        float k;\n        k=sqrt(ar);\n        int j;\n        j=k;\n        if(j==k)\n        {\n            printf(\"Yes\\n\");\n        }\n        else\n        {\n            printf(\"No\\n\");\n        }\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#define MIN(a,b) (((a)<(b))?(a):(b))\n#define MAX(a,b) (((a)>(b))?(a):(b))\nint main()\n{\n    int n,a1,b1,a2,b2,ar;\n    \n    scanf(\"%d\",&n);\n    for(int t=0;t<n;t++)\n    {   ar=0;\n        scanf(\"%d%d\",&a1,&b1);\n        scanf(\"%d%d\",&a2,&b2);\n        ar=a1*b1+a2*b2;\n        float k;\n        k=sqrt(ar);\n        int j;\n        j=k;\n        if(MAX(a1,b1)==MAX(a2,b2) && MIN(a1,b1)+MIN(a2,b2)==MAX(a1,b1))\n        {\n            printf(\"Yes\\n\");\n        }\n        else\n        {\n            printf(\"No\\n\");\n        }\n    }\n}"}
{"similarity_score": 0.8231046931407943, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "008c682611610b84991ddfbee5ff6c18", "bug_code_uid": "6b734185f943c2b834adc6e41552d021", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "c06243c008b11c7b759fa39c436f242d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,min=100000,a,b;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n        c=abs(a[i]-a[i+1]);\n        if(c<min)\n        {\n        a=i+1;\n        b=i+2;\n        }\n    }\n    c=abs(a[n-1]-a[0]);\n    if(c<min)\n    {\n        a=1;\n        b=n;\n    }\n    printf(\"%d %d\",a,b);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,min=100000,p,b,c;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n        c=abs(a[i]-a[i+1]);\n        if(c<min)\n        {\n        min=c;\n        p=i+1;\n        b=i+2;\n        }\n    }\n    c=abs(a[n-1]-a[0]);\n    if(c<min)\n    {\n        p=1;\n        b=n;\n        printf(\"%d %d\",b,p);\n    }\n    else\n    printf(\"%d %d\",p,b);\n    return 0;\n}"}
{"similarity_score": 0.9961832061068703, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "acb68758ebd72708f43678fadc908252", "bug_code_uid": "187e0cbbced23351259dd4f707c29bbf", "src_uid": "e0ec0cd81d2ec632ef89d207d80fa8a3", "apr_id": "6193156cf9863f457ddbc782eb0a74bf", "difficulty": 800, "tags": ["math", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main()\r\n{\r\n   int n;\r\n   scand(\"%d\",&n);\r\nint i=1;\r\n   while(i<=n){\r\n       int a,b,c,d,e,f,g;\r\n       \r\n       scanf(\"%d%d%d%d%d%d%d\",&a,&b,&c,&d,&e,&f,&g);\r\n       \r\n       printf(\"%d %d %d\\n\",(g-f),(f-b),b);\r\n       \r\n       i++;\r\n   }\r\n\r\n    return 0;\r\n}", "fixed": "int main()\r\n{\r\n   int n;\r\n   scanf(\"%d\",&n);\r\nint i=1;\r\n   while(i<=n){\r\n       int a,b,c,d,e,f,g;\r\n       \r\n       scanf(\"%d%d%d%d%d%d%d\",&a,&b,&c,&d,&e,&f,&g);\r\n       \r\n       printf(\"%d %d %d\\n\",(g-f),(f-b),b);\r\n       \r\n       i++;\r\n   }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9850374064837906, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c92be7d8bd3612d0d6b71ec32344cfc2", "bug_code_uid": "60c4b1a2bcd064bd944fa5dbeaaddb34", "src_uid": "7d774a003d2e3e8ae6fe1912b3998c96", "apr_id": "20e28cce527094314897bcebc163f384", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++){\r\n        int k,m;\r\n        scanf(\"%d %d\",&k,&m);\r\n        int o=0;\r\n        for(int y=1;y<m+1;y++){\r\n                 o+=y;\r\n        }\r\n        for(int u=2;u<k+1;u++){\r\n            o+=m*u;\r\n        }\r\n        printf(\"%d\\n\",o);\r\n    }\r\n    \r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++){\r\n        int k,m;\r\n        scanf(\"%d %d\",&k,&m);\r\n        long long int o=0;\r\n        for(int y=1;y<m+1;y++){\r\n                 o+=y;\r\n        }\r\n        for(int u=2;u<k+1;u++){\r\n            o+=m*u;\r\n        }\r\n        printf(\"%lld\\n\",o);\r\n    }\r\n    \r\n}"}
{"similarity_score": 0.9879781420765027, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b24911e9abc60d06416e62a8e2602b04", "bug_code_uid": "dbeec414960cf2a3b855ffbddcc73164", "src_uid": "aa31a2a1ad1575aee051ddee8642c53a", "apr_id": "a41ee8c41eb0a41da6c7dd1dbe7ef953", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint i,t,sx,sy,ex,ey,ans;\n\tchar c;\n\t//char wind[10010];\n\tscanf(\"%d %d %d %d %d\",&t,&sx,&sy,&ex,&ey);\n\t//scanf(\"%s\",wind);\n\tscanf(\"%c\",&c);\t\n\tfor(ans=i=0;i<t;i++){\n\t\tscanf(\"%c\",&c);\n\t\tswitch(c){\n\t\t\tcase 'E': if(sx<ex)sx++;break;\n\t\t\tcase 'S': if(sy>ey)sy--;break;\n\t\t\tcase 'W': if(sx>ex)sx--;break;\n\t\t\tcase 'N': if(sy<ey)sy++;break;\n\t\t}\n\t\tif((sx==ex)&&(sy==ey)){\n\t\t\tans = i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans?ans:-1);\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\n\tint i,t,sx,sy,ex,ey,ans;\n\tchar c;\n\t//char wind[10010];\n\tscanf(\"%d %d %d %d %d\",&t,&sx,&sy,&ex,&ey);\n\t//scanf(\"%s\",wind);\n\tscanf(\"%c\",&c);\t\n\tfor(ans=i=0;i<t;i++){\n\t\tscanf(\"%c\",&c);\n\t\tswitch(c){\n\t\t\tcase 'E': if(sx<ex)sx++;break;\n\t\t\tcase 'S': if(sy>ey)sy--;break;\n\t\t\tcase 'W': if(sx>ex)sx--;break;\n\t\t\tcase 'N': if(sy<ey)sy++;break;\n\t\t}\n\t\tif((sx==ex)&&(sy==ey)){\n\t\t\tans = i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans?ans:-1);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9851150202976996, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3aa931efba6f59f2843dd9ab1081b6e8", "bug_code_uid": "8b62f154337d4a7db4611b25e4de13c9", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "9aebead6face2b07aefb2e65779b2cf4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char a[1000],t,x,i,j;\n    scanf(\"%d\",&t);\n    x=0;\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%s\",&a);\n        {\n            if(a[0]=='+' || a[2]=='+')\n            {\n                x=x+1;\n            }\n            else if(a[0]=='-' || a[2]=='-')\n            {\n                x=x-1;\n            }\n        }\n}\nprintf(\"%d\\n\",x);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char a[1000];\n    int t,x,i,j;\n    scanf(\"%d\",&t);\n    x=0;\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%s\",&a);\n        {\n            if(a[0]=='+' || a[2]=='+')\n            {\n                x=x+1;\n            }\n            else if(a[0]=='-' || a[2]=='-')\n            {\n                x=x-1;\n            }\n        }\n}\nprintf(\"%d\\n\",x);\n}\n"}
{"similarity_score": 0.7764705882352941, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "3b6670f49dc4d6ba59b81942430aec2e", "bug_code_uid": "067e24e85994416580bf6485819332b4", "src_uid": "fb0a4c8f737c36596c2d8c1ae0d1e34e", "apr_id": "2ca1ddfa44ff6bbb7b6545d842df5f92", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n    int j,n,t,s,m,q,a[100];\n    int i=0;\n    scanf(\"%d\",&q);\n    j=q;\n    while(q!=0)\n    {\n        scanf(\"%d %d %d\",&n,&s,&t);\n        if(t>s)\n        {\n            m=s+1;\n        }\n        else if(s>t)\n        {\n            m=t+1;\n        }\n        else if(s==t)\n        {\n            if(s==n)\n            {\n                m=1;\n            }\n            else if(s!=n)\n            {\n                m=s+1;\n            }\n        }\n        a[i++]=m;\n        q--;\n    }\n    for(i=0;i<j;i++)\n    printf(\"%d\\n\",a[i]);\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n    int i,j,n,t,s,m,q,a[100];\n    scanf(\"%d\",&q);\n    j=q;\n    while(q!=0)\n    {\n        scanf(\"%d %d %d\",&n,&s,&t);\n        if(t>=s)\n        {\n            m=n-s+1;\n        }\n        else if(s>t)\n        {\n            m=n-t+1;\n        }\n        a[i++]=m;\n        q--;\n    }\n    for(i=0;i<j;i++)\n    printf(\"%d\\n\",a[i]);\n}"}
{"similarity_score": 0.9970059880239521, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "661ae6d974982a05bfd585c6deee5c5b", "bug_code_uid": "328d26430c7190c817d85818b73e06a9", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "3dda671c4823976d6d195d6b4be47109", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void){\n\tint n,cnt,d=0,max=1;\n\tscanf(\"%d\", &n);\n\tint khobz[n];\n\tfor(cnt=0;cnt<n;cnt++)\n\t\tscanf(\"%d\", &khobz[cnt]);\n\t/*if(n==1){\n\t\tprintf(\"1\");\n\t\treturn 0;\n\t}*/\n\tfor(cnt=0;cnt<n;cnt++){\n\t\tif(khobz[cnt+1]>khobz[cnt] && cnt!=n-1)\n\t\t\td++;\n\t\telse\n\t\t\td=1;\n\t\tif(d>max)\n\t\t\tmax=d;\n\t}\n\tprintf(\"%d\", max);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(void){\n\tint n,cnt,d=1,max=1;\n\tscanf(\"%d\", &n);\n\tint khobz[n];\n\tfor(cnt=0;cnt<n;cnt++)\n\t\tscanf(\"%d\", &khobz[cnt]);\n\t/*if(n==1){\n\t\tprintf(\"1\");\n\t\treturn 0;\n\t}*/\n\tfor(cnt=0;cnt<n;cnt++){\n\t\tif(khobz[cnt+1]>khobz[cnt] && cnt!=n-1)\n\t\t\td++;\n\t\telse\n\t\t\td=1;\n\t\tif(d>max)\n\t\t\tmax=d;\n\t}\n\tprintf(\"%d\", max);\n\treturn 0;\n}"}
{"similarity_score": 0.9965277777777778, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7331ab6a90fa4c169be4786e7c396593", "bug_code_uid": "17b923f42457be5eed900bd8c1d854ee", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "e029ef5d4c3515239b815e6353598b9d", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint min(int a, int b){\n\treturn (a < b ? a : b);\n}\n\nvoid solve(){\n\tint a, b, n, S;\n\tscanf(\"%d%d%d%d\", &a, &b, &n, &S);\n\tif(min(a, S / n) * a + b < S) printf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n}\n\nint main(){\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile(T--){\n\t\tsolve();\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint min(int a, int b){\n\treturn (a < b ? a : b);\n}\n\nvoid solve(){\n\tint a, b, n, S;\n\tscanf(\"%d%d%d%d\", &a, &b, &n, &S);\n\tif(min(a, S / n) * n + b < S) printf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n}\n\nint main(){\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile(T--){\n\t\tsolve();\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9910979228486647, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9bcc0bdc81c31696e63425bec8c8983c", "bug_code_uid": "8034b9d08e871864b6279bc7752e40a5", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "bbcd9b30831dab3d8fbd75d41811c908", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        printf(\"%d\",&n);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        printf(\"%d\\n\",n);\n    }\n    return 0;\n}"}
{"similarity_score": 0.4781906300484653, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f50e485cfb46d123a6f154a5f7014412", "bug_code_uid": "cf4687ca2108abd0e60b218f373bb522", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "21325d5ea683b1632a401b23df814ecb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\" ,&t);\n    while(t--)\n    {\n        int n,i,j, a=1;\n        scanf(\"%d\", &n);\n        int k=n;\n        for(i=1,j=k-1; i<=n ;i++,j--)\n        {\n            if(i+j==n && i<j)\n                a++;\n\n        }\n        if( n==1 || n==2)\n            printf(\"1\\n\");\n        else\n        printf(\"%d\\n\",a);\n\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\" ,&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        if(n%2==0)\n            printf(\"%d\\n\",n/2);\n        else\n        printf(\"%d\\n\",(n+1)/2);\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2822966507177033, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "53ead8fcd606a5762a142a857a542b98", "bug_code_uid": "14647d9949f59c4823b8e468c7c08bef", "src_uid": "38afe98586a3b8d6061fe7e3e8fc4d02", "apr_id": "1165317c5bc9004178b6893c5e3ddc0e", "difficulty": null, "tags": ["constructive algorithms", "binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n     int x,y=0,i=0,count=0,sum=0;\n     scanf(\"%d\",&x);\n     if(x==1)\n      printf(\"%d\\n\",x);\n     else if(x==2)\n      printf(\"%d\\n\",x+1);\n     else{ \n    sum=x;     \n    while(x--){         \n      sum=sum+x;\n      count++;\n        \n    }\n      \n    if(sum-x==1)\n     count+=1;\n     \n      printf(\"%d\\n\",count-1);\n     }\n    }\n    \n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n     int x,i,count=0,sum=0;\n     scanf(\"%d\",&x);\n     \n    for(i=1;i<=x;i++)\n     {\n        if(sum>=x) \n         break;\n         \n         \n         sum+=i;\n         count++;\n     }\n    if((sum-x)==1)\n     count+=1;\n     \n    printf(\"%d\\n\",count);\n     \n    }\n    \n    \n    return 0;\n}"}
{"similarity_score": 0.9984051036682615, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3b8a5d56f00b1edba6f416be43ae0c9a", "bug_code_uid": "9b6d903dc50b49a80db0ee16b669ce7b", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "d2ead78ddfe944c6d1f3206d7c9c7c07", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,c,count=1,ara[10000],i;\n    scanf(\"%d %d %d\",&n,&c,&ara[1]);\n    for(i=2;i<=n;i++){\n        scanf(\"%d\",&ara[i]);\n        if((ara[i]-ara[i-1])<=c){\n            count++;\n        }\n        else{count=1;\n            }\n    }\n    \n        printf(\"%d\",count);\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,c,count=1,ara[100001],i;\n    scanf(\"%d %d %d\",&n,&c,&ara[1]);\n    for(i=2;i<=n;i++){\n        scanf(\"%d\",&ara[i]);\n        if((ara[i]-ara[i-1])<=c){\n            count++;\n        }\n        else{count=1;\n            }\n    }\n    \n        printf(\"%d\",count);\n    \n    return 0;\n}"}
{"similarity_score": 0.9410774410774411, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "00e55d25d63db09d0847ed2d2768368c", "bug_code_uid": "1ca7612073b7355614758d95db1a60f6", "src_uid": "907f7db88fb16178d6be57bea12f90a2", "apr_id": "daccb5bca4c784686af9c24562cc78ae", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint R,C,i,j,x=0;\nint ans=1;\nint r[1001]={0},c[1001]={0},a[1002][1002]={0};\nint main(int argc, char *argv[]) {\n\tscanf(\"%d%d\",&R,&C);\n\tfor(i=1;i<=R;i++){\n\t\tscanf(\"%d\",&r[i]);\n\t\tfor(j=1;j<=r[i];j++) a[i][j]+=2;\n\t\ta[i][r[i]+1]+=1;\n\t}\n\tfor(i=1;i<=C;i++){\n\t\tscanf(\"%d\",&c[i]);\n\t\tfor(j=1;j<=c[i];j++) a[j][i]+=2;\n\t\ta[c[i]+1][i]+=1;\n\t}\n\tfor(i=1;i<=R;i++){\n\t\tfor(j=1;j<=C;j++){\n\t\t\tif(a[i][j]==0) x++;\n\t\t\telse if((a[i][j]%3==0)){\n\t\t\t\tprintf(\"0\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} \n\ti=1;\n\twhile(x>2){\n\t\tans=ans%1000000007*4;\n\t\tx-=2;\n\t\ti++;\n\t}\n\tans*=2*x;\n\tprintf(\"%d\",ans);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint R,C,i,j,x=0;\nint ans=1;\nint r[1001]={0},c[1001]={0},a[1002][1002]={0};\nint main(int argc, char *argv[]) {\n\tscanf(\"%d%d\",&R,&C);\n\tfor(i=1;i<=R;i++){\n\t\tscanf(\"%d\",&r[i]);\n\t\tfor(j=1;j<=r[i];j++) a[i][j]+=2;\n\t\ta[i][r[i]+1]+=1;\n\t}\n\tfor(i=1;i<=C;i++){\n\t\tscanf(\"%d\",&c[i]);\n\t\tfor(j=1;j<=c[i];j++) a[j][i]+=2;\n\t\ta[c[i]+1][i]+=1;\n\t}\n\tfor(i=1;i<=R;i++){\n\t\tfor(j=1;j<=C;j++){\n\t\t\tif(a[i][j]==0) x++;\n\t\t\telse if((a[i][j]%3==0)){\n\t\t\t\tprintf(\"0\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} \n\twhile(x>0){\n\t\tans*=2;\n\t\tans%=1000000007;\n\t\tx--;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}"}
{"similarity_score": 0.9322344322344323, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "7a94cbb504e91f7d9749ae75cc11f87c", "bug_code_uid": "456428daee2fd541350afdefd0135504", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "1818fddd999e1c8f5777a9d11264ca19", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n   int a,x[1000],b=0,s=0,d=0,i,g, mini = 1005, aux;\n   scanf(\"%d\",&a);\n   for(i=0;i<a;i++)\n   {\n   \tscanf(\"%d\",&x[i]);\n   \tif(mini > x[i])\n   \t\tmini = x[i];\n   }\n   g=a/2;\n   aux = a;\n   a--;\n   for(i=0;i<g;i++)\n   {\n     if(x[b] > x[a])\n     {\n     \ts+=x[b];\n     \tb++;\n     }\n     else\n     {\n     \ts+=x[a];\n     a--;\n     }\n     if(x[b]>x[a])\n     {\n     d+=x[b];\n     b++;\n     }\n     else\n     {\n     d+=x[a];\n     a--;\n     }\n   }\n   if(aux & 1)\n   {\n   \ts+=mini;\n   \t\n   }\n   printf(\"%d  %d\",s,d);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n   int a,x[1000],b=0,s=0,d=0,i,g, mini = 1005, aux;\n   scanf(\"%d\",&a);\n   for(i=0;i<a;i++)\n   {\n    scanf(\"%d\",&x[i]);\n    if(mini > x[i])\n        mini = x[i];\n   }\n   g=a/2;\n   aux = a;\n   a--;\n   for(i=0;i<g;i++)\n   {\n     if(x[b] > x[a])\n     {\n        s+=x[b];\n        b++;\n     }\n     else\n     {\n        s+=x[a];\n     a--;\n     }\n     if(x[b]>x[a])\n     {\n     d+=x[b];\n     b++;\n     }\n     else\n     {\n     d+=x[a];\n     a--;\n     }\n   }\n   if(aux & 1)\n   {\n    s+=mini;\n    \n   }\n   printf(\"%d  %d\",s,d);\n   return 0;\n}"}
{"similarity_score": 0.43214285714285716, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b14dd9ac70b7853acebaa8ac7df7dcf3", "bug_code_uid": "3e75996d93d1fd2aaf28d9886af6d3f0", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "9c7eaac47e5edad5c3d499b648732bef", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h> \r\n#include <stdbool.h>\r\n \r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int n = 0; n < t; n++) {\r\n        int x;\r\n        scanf(\"%d\", &x);\r\n        if (x == 2) {\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        if (x % 2 == 1) {\r\n            printf(\"YES\\n\");\r\n            continue;\r\n        }\r\n        bool hasOdd;\r\n        hasOdd = false;\r\n        for (int i = 2; i < sqrt(x) + 1; i++) {\r\n            if (x % i == 0) {\r\n                if (i % 2 == 1 || (x / i) % 2 == 1) {\r\n                    printf(\"YES\\n\");\r\n                    hasOdd = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!hasOdd) {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n \r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int n = 0; n < t; n++) {\r\n        long long x;\r\n        scanf(\"%lld\", &x);\r\n        while (x % 2 == 0) {\r\n            x /= 2;\r\n        }\r\n        if (x == 1) {\r\n            printf(\"NO\\n\");\r\n        } else {\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.6490566037735849, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "d52ab399c711481cb893d17ea55a2464", "bug_code_uid": "acb066127333b5543098698eea73167c", "src_uid": "8736df815ea0fdf390cc8d500758bf84", "apr_id": "a51febbfa6fefcdfdefdd99fcdb08fe5", "difficulty": 1300, "tags": ["binary search", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j,k,f[30]={},count;\n    char c[200009],d[20009];\n    scanf(\"%d\",&n);\n        scanf(\"%s\",&c);\n        getchar();\n    scanf(\"%d\",&m);\n    while(m--){\n        scanf(\"%s\",&d);\n        getchar();\n        k=strlen(d);\n        for(i=0;i<k;i++){\n          j=d[i]-97;\n          f[j]++;\n        }\n        for(i=0;i<n;i++){\n            j=c[i]-97;\n            //printf(\"%d %d\\n\",f[j],k);\n            if(f[j]==0 && k==0)\n                break;\n            else if(f[j]!=0){\n                f[j]--;\n                k--;\n            }\n        }\n        printf(\"%d\\n\",i);\n        for(i=0;i<=26;i++)\n            f[i]=0;\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint e[27][200009];\nint main()\n{\n    int n,m,i,j,k,f[30]={},count,g,h[30]={},l,z;\n    char c[200009],d[20009];\n    scanf(\"%d\",&n);\n        scanf(\"%s\",&c);\n        getchar();\n        for(i=0;i<n;i++){\n            g=c[i]-96;\n            h[g]++;\n            e[g][h[g]]=i;\n        }\n    scanf(\"%d\",&m);\n    while(m--){\n            l=0;\n            z=0;\n        scanf(\"%s\",&d);\n        getchar();\n        k=strlen(d);\n        for(i=0;i<k;i++){\n          j=d[i]-96;\n          f[j]++;\n    l=e[j][f[j]];\n    if(l>z)\n        z=l;\n        }\n        printf(\"%d\\n\",z+1);\n        for(i=0;i<=26;i++)\n            f[i]=0;\n    }\n}\n"}
{"similarity_score": 0.9589958158995816, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "dd58aec05103582ed9f0e539ceec449f", "bug_code_uid": "bfc0f34d1770c5875f87f49f0161b4bf", "src_uid": "e2ff228091ca476926b8e905f1bc8dff", "apr_id": "c71b680d2a783005d9c23a9ea8e4b58c", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n\n\n#define MIN(a,b) (((a)<(b))?(a):(b))\n#define MAX(a,b) (((a)>(b))?(a):(b))\t\n\nint comparetor_max (const void * a, const void * b)\n{\n\treturn ( *(int*)b - *(int*)a );\n}\n\nint comparetor_min (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n\n\tint i,n,m,a[11],z,j;\n\tscanf(\"%d %d\",&n,&m);\n\t\n\tfor(i=0;i<n;i++)\n\ta[i]=0;\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&z);\n\t\ta[z]++;\n\t}\n\tz=0;\n\tfor(i=1;i<=m;i++)\n\tfor(j=i+1;j<=m;j++)\n\tz+=a[i]*a[j];\n\t\n\tprintf(\"%d\\n\",z);\n\t\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n\n\n#define MIN(a,b) (((a)<(b))?(a):(b))\n#define MAX(a,b) (((a)>(b))?(a):(b))\t\n\nint comparetor_max (const void * a, const void * b)\n{\n\treturn ( *(int*)b - *(int*)a );\n}\n\nint comparetor_min (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n\n\tint i,n,m,a[11],z,j;\n\tscanf(\"%d %d\",&n,&m);\n\t\n\tfor(i=0;i<=10;i++)\n\ta[i]=0;\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&z);\n\t\ta[z]++;\n\t}\n\tz=0;\n\t/*for(i=1;i<=m;i++)\n\tprintf(\"%d \",a[i]);*/\n\t\n\tfor(i=1;i<m;i++)\n\tfor(j=i+1;j<=m;j++)\n\tz+=a[i]*a[j];\n\t\n\tprintf(\"%d\\n\",z);\n\t\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.6133651551312649, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "734d4f6754f4fd07ac6b2c1a8f50f4d6", "bug_code_uid": "b9c4901beff634f9a284269db5e22adc", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "8cd125b4f3c428e66bdf5814f56685a7", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i=0,pos,temp;\n    scanf(\"%d\",&n);\n    int ara[n];\n    if(n==1)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    else if(n%2==0)\n    {\n        while(n>0)\n        {\n            printf(\"%d \",n);\n            n--;\n        }\n\n    }\n    else\n    {\n        while(n>0)\n        {\n            ara[i++]=n;\n            n--;\n        }\n        pos=n/2+1;\n        temp=ara[pos];\n        ara[pos]=ara[pos+1];\n        ara[pos+1]=temp;\n        for(int j=0;j<i;j++)\n            printf(\"%d \",ara[j]);\n        printf(\"\\n\");\n\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    if(n%2!=0)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    else if(n%2==0)\n    {\n        while(n>0)\n        {\n            printf(\"%d \",n);\n            n--;\n        }\n\n    }\n    return 0;\n}"}
{"similarity_score": 0.6, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "cf00b95f2e8e3952a07d1c39d3477e75", "bug_code_uid": "f8c8edd6dbcb962c5e8a97dd413a73d6", "src_uid": "447c17cba953d6e2da50c242ac431ab4", "apr_id": "c4293746d32611cf4a33760915956a51", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tint m , s;\r\n\t\tint flag = 0;\r\n\t\tscanf(\"%d%d\", &m, &s);\r\n\t\tint b[51];\r\n\t\tint sum = 0;\r\n\t\tfor (int i = 0;i < m;i++) {\r\n\t\t\tscanf(\"%d\", &b[i]);\r\n\t\t\tsum += b[i];\t\t\t\t\t\t\t\r\n\t\t}\r\n\t\tfor (int i = 0;i < 100;i++) {\r\n\t\t\tif (i * (i + 1) == (s + sum)*2)\r\n\t\t\t\tflag = 1;\r\n\t\t}\r\n\t\tif (flag)printf(\"Yes\\n\");\r\n\t\telse printf(\"No\\n\");\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tint m , s;\r\n\t\tint flag = 1;\r\n\t\tscanf(\"%d%d\", &m, &s);\r\n\t\tint b[51];\r\n\t\tint a[100];\r\n\t\tint cnt=m;\r\n\t\tint k = 0;\r\n\t\tfor (int i = 0;i < m;i++) {\r\n\t\t\tscanf(\"%d\", &b[i]);\r\n\t\t\tif (b[i] == 0)\r\n\t\t\t\tflag = 0;\r\n\t\t}\r\n\t\tfor (int i = 1;;i++) {\r\n\t\t\tif (s <= 0 && cnt == 0) {\r\n\t\t\t\tif (s < 0)flag = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tint mark = 0;\r\n\t\t\ta[k++] = i;\r\n\t\t\tfor (int j = 0;j < m;j++) {\r\n\t\t\t\tif (b[j] == i) {\r\n\t\t\t\t\tmark = 1;\r\n\t\t\t\t\tcnt--;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (mark)continue;\r\n\t\t\telse s -= i;\t\t\r\n\t\t}\r\n\r\n\t\tif (flag)printf(\"Yes\\n\");\r\n\t\telse printf(\"No\\n\");\r\n\t}\r\n}"}
{"similarity_score": 0.35003528581510235, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d8edacd430fa911b44c9bf22631547b4", "bug_code_uid": "a682a2ed7e78bac3cd247efca1a09cb0", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "fb0ac21674067976bdbea70cb6af0756", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        int n,k,d=3;\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&k);\n        while(k!=0)\n        {\n            k--;\n            d=3;\n            if(n%2==0)\n            {\n                n+=2;\n                continue;\n            }\n            while(d<=n)\n            {\n\n                if(n%d==0)\n                {\n                    n+=d;\n                    break;\n                }\n                d+=2;\n\n            }\n        }\n        printf(\"%d\\n\",n);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        int n,k,d=3,c=1;\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&k);\n        if(n%2==0)\n        {\n            printf(\"%d\\n\",n+2*k);\n            continue;\n        }\n        if(n%3==0)\n        {\n            printf(\"%d\\n\",n+3+2*(k-1));\n            continue;\n        }\n        else\n        {\n\n        while(d<=n/3)\n            {\n                d=6*c-1;\n\n                if(n%d==0)\n                {\n                    break;\n                }\n                d+=2;\n                if(n%d==0)\n                {\n                    break;\n                }\n                c++;\n\n            }\n\n        }\n         if(d>n/3)\n                d=n;\n\n        printf(\"%d\\n\",(n+d+(2*(k-1))));\n\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2948640483383686, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "26585d737221d15a8ec311a92feee445", "bug_code_uid": "c422bc4e10bde9aa1d62cb13c00630c7", "src_uid": "8e9ba5a2472984cd14b99790a157acd5", "apr_id": "2cf873801dbf6c107824dd51015b11aa", "difficulty": 1500, "tags": ["binary search", "greedy", "math", "two pointers"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#define N 200010\r\nint t,n,k;\r\nint num[N];\r\nint main()\r\n{\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint ans=0;\r\n\t\tscanf(\"%d %d\",&n,&k);\r\n\t\tfor(int i=1;i<=n;++i)\r\n\t\t    scanf(\"%d\",&num[i]);\r\n\t\tfor(int i=1;i<=n;++i)\r\n\t\t{\r\n\t\t    int loc=0,judge=1,minn=1000;\r\n\t\t\tif(num[i]==-1) continue;\r\n\t\t\tfor(int j=i+1;j<=n;++j)\r\n\t\t\t{\r\n\t\t\t\tif(num[j]==-1) continue;\r\n\t\t\t\tif((num[i]+num[j])%k==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tans+=(num[i]+num[j])/k;\r\n\t\t\t\t\tnum[j]=-1;\r\n\t\t\t\t\tjudge=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t    if((num[i]+num[j])%k<minn)\r\n\t\t\t\t    {\r\n\t\t\t\t        loc=j;\r\n\t\t\t\t\t\tminn=(num[i]+num[j])%k;\t\t    \t\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(judge)\r\n\t\t\t{\r\n\t\t\t    ans+=(num[i]+num[loc])/k;\r\n\t\t\t    num[loc]=-1;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#define N 200010\r\n#define M 1010\r\nint t,n,k;\r\nint num[N],mod[M];\r\nint minn(int x,int y)\r\n{\r\n\treturn x<y?x:y;\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tlong long ans=0,die=0;\r\n\t\tscanf(\"%d %d\",&n,&k);\r\n\t\tfor(int i=1;i<=n;++i)\r\n\t\t{\r\n\t\t    scanf(\"%d\",&num[i]);\r\n\t\t    ans+=num[i];\r\n\t\t\t++mod[num[i]%k];\t\t\r\n\t\t}\r\n\t\tmod[0]=mod[0]%2;\r\n\t\tint zero=1;\r\n\t\twhile(mod[0])\r\n\t\t{\r\n\t\t\tint x=minn(mod[0],mod[zero]);\r\n\t\t\tmod[0]-=x;\r\n\t\t\tmod[zero]-=x;\r\n\t\t\tdie+=((0+zero)%k)*x;\r\n\t\t\t++zero;\r\n\t\t}\r\n\t\tfor(int i=1;i<k;++i)\r\n\t\t{\r\n\t\t\tint j=k-i;\r\n\t\t\twhile(mod[i])\r\n\t\t\t{\r\n\t\t\t\tif(j==i)\r\n\t\t\t\t{\r\n\t\t\t\t\tdie+=((2*i)%k)*(mod[i]/2);\r\n\t\t\t\t\tmod[i]=mod[i]%2;\r\n\t\t\t\t\t++j;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t    int x=minn(mod[i],mod[j]);\r\n\t\t\t\t    mod[i]-=x;\r\n\t\t\t        mod[j]-=x;\r\n\t\t\t        die+=((i+j)%k)*x;\r\n\t\t\t        ++j;\r\n\t\t\t\t\tif(j==k)\r\n\t\t\t\t\t    j=i;\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",(ans-die)/k);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9897843359818388, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "18738c3ea68e91e6b716264d2b10f6ea", "bug_code_uid": "ad25b371bf97249d9bbbcaa4ef0e6e0b", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "c17f34479a3f3dab45f07f2435026631", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,a,b,i,j;\n    scanf(\"%d\",&n);\n    if(n>3){\n        printf(\"%d\\n\",n);\n    }\n    else if(n==1){\n        printf(\"1\");\n    }\n    else{\n        printf(\"%d\\n\",n-1);\n    }\n    if(n==4){\n        printf(\"3 1 4 2\");\n    }\n    for(i=1;i<=n;i+=2){\n        if(n!=4){\n        printf(\"%d \",i);\n        }\n    }\n    for(j=2;j<=n;j+=2){\n        if(n>4){\n            printf(\"%d \",j);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,a,b,i,j;\n    scanf(\"%d\",&n);\n    if(n>3){\n        printf(\"%d\\n\",n);\n    }\n    else if(n==1){\n        printf(\"%d\\n\",n);\n    }\n    else{\n        printf(\"%d\\n\",n-1);\n    }\n    if(n==4){\n        printf(\"3 1 4 2\");\n    }\n    for(i=1;i<=n;i+=2){\n        if(n!=4){\n        printf(\"%d \",i);\n        }\n    }\n    for(j=2;j<=n;j+=2){\n        if(n>4){\n            printf(\"%d \",j);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.99644128113879, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "71e3d8d1288fca4b713280e323300643", "bug_code_uid": "f1b4abdde5255cea7f8aef7f4ddf3c30", "src_uid": "ddc9201725e30297a5fc83f4eed75fc9", "apr_id": "f6373a9663e435e5b9904b7a5eb96184", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[10000];\n    long long i,len;\n    scanf(\"%s\",str);\n    len=strlen(str);\n    long long sum=0,add,temp,count=0;\n    if(len==1)\n        printf(\"0\\n\");\n        else\n    {\n        for(i=0;i<len;i++)\n        sum+=str[i]-'0';\n        while(sum>9){\n            add=0;\n            while(sum!=0){\n                temp=sum%10;\n                add=add+temp;\n                sum=sum/10;\n            }\n            sum=add;\n            count++;\n        }\n        printf(\"%d\\n\",count+1);\n    }\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[100000];\n    long long i,len;\n    scanf(\"%s\",str);\n    len=strlen(str);\n    long long sum=0,add,temp,count=0;\n    if(len==1)\n        printf(\"0\\n\");\n        else\n    {\n        for(i=0;i<len;i++)\n        sum+=str[i]-'0';\n        while(sum>9){\n            add=0;\n            while(sum!=0){\n                temp=sum%10;\n                add=add+temp;\n                sum=sum/10;\n            }\n            sum=add;\n            count++;\n        }\n        printf(\"%I64d\\n\",count+1);\n    }\n        return 0;\n}\n"}
{"similarity_score": 0.9963811821471653, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "80e6317e30f5b63ae0f823420d5c98a4", "bug_code_uid": "9dd5c3be69b1792dac1b65d210e8cce4", "src_uid": "2e6ddb2b11f8ac857e81d4b9b0c7d783", "apr_id": "69d6155d732ecaa957f603fd2edd85b4", "difficulty": 800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\ufeff#include<stdio.h>\r\n#include<string.h>\r\nint t, n, s;\r\nchar a[200];\r\nint main()\r\n{\r\n\tint i, j;\r\n\tscanf(\"%d\", &t);\r\n\tfor (i = 1; i <= t; i++)\r\n\t{\r\n\t\ts = 0;\r\n\t\tscanf(\"\\n%s\", a + 1);\r\n\t\tn = strlen(a + 1);\r\n\t\tfor (j = 1; j <= n; j++)\r\n\t\t{\r\n\t\t\tif (a[j] == '0')\r\n\t\t\t{\r\n\t\t\t\tif (s == 0 || a[j - 1] == '0')\r\n\t\t\t\t{\r\n\t\t\t\t\ts = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ts = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", s);\r\n\t}\r\n}", "fixed": "\ufeff#include<stdio.h>\r\n#include<string.h>\r\nint t, n, s;\r\nchar a[200000];\r\nint main()\r\n{\r\n\tint i, j;\r\n\tscanf(\"%d\", &t);\r\n\tfor (i = 1; i <= t; i++)\r\n\t{\r\n\t\ts = 0;\r\n\t\tscanf(\"\\n%s\", a + 1);\r\n\t\tn = strlen(a + 1);\r\n\t\tfor (j = 1; j <= n; j++)\r\n\t\t{\r\n\t\t\tif (a[j] == '0')\r\n\t\t\t{\r\n\t\t\t\tif (s == 0 || a[j - 1] == '0')\r\n\t\t\t\t{\r\n\t\t\t\t\ts = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ts = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", s);\r\n\t}\r\n}"}
{"similarity_score": 0.7430683918669131, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1a31847080afe94f87973d2fb5e4f4a6", "bug_code_uid": "dc2727b7d6bfdbb749dd21df3addf9a8", "src_uid": "bee33afb70e4c3e062ec7980b44cc0dd", "apr_id": "9d6593973a9309900ca3ab0c477b952b", "difficulty": 1200, "tags": ["dp", "constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "i,t[4];char*X=\"S PR\",s[101],r[101];\nmain(j,n){for(scanf(\"%*d\");~scanf(\"%d\",&n);memset(r,0,100)){\nscanf(\"%d%d%d%s\",t+3,t+2,t,s);\nwhile(s[i])if(t[j=s[i]-80])n-=2,r[i++]=X[j],t[j]--;\nwhile(i)if(!r[--i]){for(j=0;!t[j];j++);r[i]=X[j];t[j]--;}\nprintf(n>0?\"NO \":\"YES %s \",r);\n}}", "fixed": "i,j,t[4];char*X=\"S PR\",s[101],r[101];f(){r[i]=X[j],t[j]--;}\nmain(n){for(scanf(\"%*d\");~scanf(\"%d\",&n);memset(r,0,100)){\nscanf(\"%d%d%d%s\",t+3,t+2,t,s);\nfor(;s[i];i++)if(t[j=s[i]-80])n-=2,f(j);\nwhile(i)if(!r[--i]){for(j=0;!t[j];j++);f(j);}\nprintf(n>0?\"NO \":\"YES %s \",r);\n}}"}
{"similarity_score": 0.48006785411365566, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "17a96982e9b3d4c2353f982be67be18e", "bug_code_uid": "368704a85132832649aee6ed31c8dc2c", "src_uid": "e12d86f0c8645424b942d3dd9038e04d", "apr_id": "bd7c789fbfee11f40bd3a65c1862fac8", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,j,mini,r,maxi,mai,mi;\n\tscanf(\"%d\",&n);\n\tint ara[100][4];\n\tfor (i=0;i<n;i++){\n\t\tfor (j=0;j<4;j++){\n\t\tscanf(\"%d\",&ara[i][j]);\n\t\t}\n\t}\n\tmaxi=0;\n\tmai=0;\n\tmi=0;\n\tfor (i=0;i<n;i++){\n\t\tif (ara[i][0]>maxi){\n\t\t\tmaxi=ara[i][0];\n\t\t}\n\t\tif (ara[i][1]>mai){\n\t\t\tmai=ara[i][1];\n\t\t}\n\t\tif (ara[i][2]>mi){\n\t\t\tmi=ara[i][2];\n\t\t}\n\t\t\n\t}\n\tfor (i=0;i<n;i++){\n\t\tif (ara[i][0]<maxi && ara[i][1]<mai && ara[i][2]<mi){\n\t\t\tara[i][3]=1001;\n\t\t}\n\t}\n\tmini=10000;\n\t\n\tfor(i=0;i<n;i++){\n\t\tif (ara[i][3]<mini){\n\t\t\tmini=ara[i][3];\n\t\t\tr=i+1;\n\t\t}\n\t\t//printf(\"%d \",ara[i][3]);\n\t}\n\tprintf(\"%d\",r);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,j,mini,r,maxi,mai,mi;\n\tscanf(\"%d\",&n);\n\tint ara[100][4];\n\tfor (i=0;i<n;i++){\n\t\tfor (j=0;j<4;j++){\n\t\tscanf(\"%d\",&ara[i][j]);\n\t\t}\n\t}\n\t\n\tfor (i=0;i<n-1;i++){\n\t\tfor (j=i+1;j<n;j++){\n\t\t\tif (ara[i][0]<ara[j][0] && ara[i][1]<ara[j][1] && ara[i][2]<ara[j][2] ){\n\t\t\t\tara[i][3]=10001;\n\t\t\t}\n\t\t\telse if (ara[i][0]>ara[j][0] && ara[i][1]>ara[j][1] && ara[i][2]>ara[j][2] ){\n\t\t\t\tara[j][3]=10001;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\tmini=10000;\n\t\n\tfor(i=0;i<n;i++){\n\t\tif (ara[i][3]<mini){\n\t\t\tmini=ara[i][3];\n\t\t\tr=i+1;\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d\",r);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9492798998121478, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e1f363fb8546de33d77da85ff1e8d57e", "bug_code_uid": "1cd710237b184742be7b0a83b3afa18c", "src_uid": "69edc72ec29d4dd56751b281085c3591", "apr_id": "1a0522a630dfdfa8d839e29b70a8d459", "difficulty": 1200, "tags": ["implementation", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\ntypedef struct vertex{\n\tint cnt;\n\tint parent;\n\tint leaf;\n}vertex;\nint main(void) {\n  int n,i,father,grandFather;\n\tvertex *verteces;\n\tscanf(\"%d\",&n);\n\tverteces = (vertex*)calloc(n,sizeof(vertex));\n\tfor(i=0;i<n;i++){\n\t\tverteces[i].cnt=0;\n\t\tverteces[i].parent=0;\n\t\tverteces[i].leaf=1;\n\t}\n\tfor(i=1;i<n;i++){\n\t\tscanf(\"%d\",&verteces[i].parent);\n\t\tfather = verteces[i].parent-1;\n\t\tgrandFather = verteces[father].parent-1;\n\t\tif(verteces[father].leaf==1)\n\t\t\tverteces[father].leaf=0;\n\t\tverteces[father].cnt++;\n\t\tif(verteces[i].parent!=1 && verteces[father].cnt==1)\n\t\t\tverteces[grandFather].cnt--;\n\t}\n\tfor(i=0;i<n;i++)\n\t\tif(verteces[i].leaf==0 && verteces[i].cnt<3)\n\t\t\tbreak;\n\tif(i==n)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include<stdlib.h>\ntypedef struct vertex{\n\tint cnt;\n\tint parent;\n\tint leaf;\n\tint done;\n}vertex;\nint main(void) {\n  int n,i,father,grandFather;\n\tvertex *verteces;\n\tscanf(\"%d\",&n);\n\tverteces = (vertex*)calloc(n,sizeof(vertex));\n\tfor(i=0;i<n;i++){\n\t\tverteces[i].cnt=0;\n\t\tverteces[i].parent=0;\n\t\tverteces[i].leaf=1;\n\t\tverteces[i].done=0;\n\t}\n\tfor(i=1;i<n;i++){\n\t\tscanf(\"%d\",&verteces[i].parent);\n\t\tfather = verteces[i].parent-1;\n\t\tgrandFather = verteces[father].parent-1;\n\t\tif(verteces[father].leaf==1)\n\t\t\tverteces[father].leaf=0;\n\t\tverteces[father].cnt++;\n\t\tif(verteces[i].parent!=1 && verteces[father].done==0){\n\t\t\tverteces[grandFather].cnt--;\n\t\t\tverteces[father].done=1;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t\tif(verteces[i].leaf==0 && verteces[i].cnt<3)\n\t\t\tbreak;\n\tif(i==n)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n  return 0;\n}"}
{"similarity_score": 0.9583333333333334, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7fb291f2ac79b2662a5f807759c87d5a", "bug_code_uid": "7ab9b2dc241a72d724c96277c5980331", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "256ed95b3e4c48ad46f93b4c887c7b35", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int N,a,b,c,d,max,i,j,p=1,t[1001];\n    scanf(\"%d\",&N);\n    for(i=0; i<N; i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        t[i]=a+b+c+d;\n    }\n    max=t[0];\n    for(j=0; j<N; j++)\n    {\n      if(t[j]>max)\n      {\n          p=j+1;\n          max=t[j];\n      }\n    }\n    printf(\"%d\\n\",p);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int N,a,b,c,d,max,i,j,p=1,t[1001];\n    scanf(\"%d\",&N);\n    for(i=0; i<N; i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        t[i]=a+b+c+d;\n    }\n    max=t[0];\n    for(j=1; j<N; j++)\n    {\n      if(t[j]>max)\n      {\n          p=p+1;\n      }\n    }\n    printf(\"%d\\n\",p);\n    return 0;\n}\n"}
{"similarity_score": 0.24620874219446923, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "9a2538c83039c38b3c8642b5ea7f0a1c", "bug_code_uid": "4454f2ea28b4485c8eb7074b9f51dddf", "src_uid": "df6ee0d8bb25dc2040adf1f115f4a83b", "apr_id": "bafe85d60c43ffb25bf43f9a9ae0cd8f", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n\tint PQ(int n);\n\tint main (void)\n\t{\n\t\tint i=0, t;\n\t\tint prime = 99469;\n\t\tscanf(\"%d\", &t);\n\t\tfor (i=0; i<t; i++)\n\t\t{\n\t\t\tint n;\n\t\t\tscanf (\"%d\", &n);\n\t\t\tPQ(n);\n\t\t}\n\t\treturn 0;\n\t}\n\tint PQ(int n)\n\t{\n\t\tint i,j;\n\t\tint Array[200][200];\n\t\t  for(i=0;i<n;i++)\n\t \t    {\n\t      \t\tfor(j=0;j<n;j++)\n\t        \t{\n\t\t      \t\tif (i==j) { Array[i][j]=99469-n+1; }\n\t\t      \t\telse { Array[i][j]=1; }\n\t        \t}\n\t  \t\t}\n\n\n\n\t  \t  for(i=0;i<n;i++)\n\t  \t\t{\n\t     \t\tfor(j=0;j<n;j++)\n\t            \tprintf(\"%d \",Array[i][j]);\n\t            printf(\"\\n\");\n\t  \t\t}\n\t}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int a[n][n],i,j;\n\n        for(i = 0; i<n; i++){\n            for(j = 0; j<n; j++){\n                if(j==i%n || j==(i+1)%n){\n                    a[i][j]=1;\n                }\n                else {\n                    a[i][j]=0;\n                }\n            }\n        }\n        for(i=0; i<n; i++){\n            for(j=0; j<n; j++){\n                printf(\"%d \",a[i][j]);\n            }\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9434571890145396, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2522948fcc5ea11a47eaf2712f20eb49", "bug_code_uid": "a666411ca259313201ebec600749798e", "src_uid": "d9d5db63b1e48214d02abe9977709384", "apr_id": "6fdc1c0a093c5dbbe7e545cfc9c3768e", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n\t\n\tint n,k;\n\tscanf(\"%d %d\",&n,&k);\n\tchar en[n+10];\n\tgets(en);\n\tgets(en);\n\tint fre[k];\n\tmemset(fre,0,sizeof(k));\n\tint i;\n\tfor(i=0;i<n;i++)fre[en[i]-'A']++;\n\tint mi=1000000;\n\tfor(i=0;i<k;i++)\n\t\tif(fre[i]<mi)\n\t\t\tmi=fre[i];\n\tprintf(\"%d\\n\",k*mi);\n\t\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n\t\n\tint n,k;\n\tscanf(\"%d %d\",&n,&k);\n\tchar en[n+10];\n\tgets(en);\n\tgets(en);\n\tint fre[k];\n\tmemset(fre,0,sizeof(fre));\n\tint i;\n\tfor(i=0;i<n;i++)fre[en[i]-'A']++;\n\tint mi=fre[0];\n\tfor(i=1;i<k;i++)\n\t\tif(fre[i]<mi)\n\t\t\tmi=fre[i];\n\tprintf(\"%d\\n\",k*mi);\n\t\t\n\treturn 0;\n}"}
{"similarity_score": 0.9193054136874361, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "ba47b9e9a74b7856cde864b175c23853", "bug_code_uid": "a38e6a5808cffb1f190333a14f5f163e", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "681bef620fac62f4af0133d38748443f", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int n,ans;\r\n        scanf(\"%d\", &n);\r\n        char s[n + 2], ch,err;\r\n        err=getchar();\r\n        fgets(s, sizeof(s), stdin);\r\n        ch = s[0];\r\n        for (int j = 1; j < n - 1; j++)\r\n        {\r\n            if (s[i] > ch)\r\n            {\r\n                ch = s[i];\r\n            }\r\n        }\r\n       ch=ch-48;\r\n        printf(\"%d\\n\", __CHAR16_TYPE__1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int n,ans;\r\n        scanf(\"%d\", &n);\r\n        char s[n + 2], ch,err;\r\n        err=getchar();\r\n        fgets(s, sizeof(s), stdin);\r\n        ch = s[0];\r\n        for (int j = 1; j < n ; j++)\r\n        {\r\n            if (s[j] > ch)\r\n            {\r\n                ch = s[j];\r\n            }\r\n        }\r\n       \r\n        printf(\"%d\\n\",ch-96 );\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.4587352625937835, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "ff9285cf70e9dd2e91e916cdad51e2cc", "bug_code_uid": "2c56f5d5bd2eb711d36eaffde47c2b8f", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "a1d5a377a7ec3173b2b7ee35d023af52", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, cnt = 1, i;\n    scanf(\"%d\", &n);\n    int a[n], b[n], j = 0;\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        if(i != 0 && a[i] == 1)\n        {\n            cnt++;\n        }\n        if(a[i] == 1)\n        {\n            for(j = 0; j < n; j++)\n            {\n                b[j] = a[i-1];\n            }\n\n        }\n    }\n\n    printf(\"%d\\n\", cnt);\n    for(i = 0; i < cnt - 1; i++)\n    {\n        printf(\"%d \", b[i]);\n    }\n\n    printf(\"%d\", a[n-1]);\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int a[1001];\n    int i, n, k = 0;\n\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n\n        if(a[i] == 1)\n        {\n            k++;\n\n        }\n    }\n\n    printf(\"%d\\n\", k);\n\n    for(i = 0; i < n; i++)\n    {\n        if(a[i+1] == 1)\n        {\n            printf(\"%d \", a[i]);\n        }\n    }\n    printf(\"%d\\n  \", a[n-1]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.2643478260869565, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0fe7a4950d07e313c0afc2a33641b33c", "bug_code_uid": "a5b5cbc3ddd03ac82bf2e11dce602b8d", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "cf909715a23200153f3df2cf14376aa3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n   int n,h[1000],m[1000],k=1,i,c;\n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n   {\n       scanf(\"%d %d\",&h[i],&m[i]);\n   }\n   for(i=0;i<n;i++)\n   {\n       if((h[i]==h[i+1] && m[i]==m[i+1]) )\n       {\n           k++;\n           if(k>c) c=k;\n       }\n\n   }\n   printf(\"%d\",c);\n   return 0;\n\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n\n\tint n, h, m, h1, m1, x=1, c=1;\n\tscanf(\"%d %d %d\",&n,&h1,&m1);\n\twhile(--n)\n\t{\n\t\tscanf(\"%d %d\",&h,&m);\n\t\tif(h==h1 && m==m1)\n\t\t{\n\t\t\tx++;\n\t\t\tif(x>c)\n\t\t\t\tc=x;\n\t\t}\n\t\telse\n\t\t\tx=1;\n\t\th1=h;\n\t\tm1=m;\n\t}\n\tprintf(\"%d\",c);\n\treturn 0;\n}\n"}
{"similarity_score": 0.3162684869169511, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "a9a0bbcc34631f3cb3ac941da0dd53c6", "bug_code_uid": "cdc220d2d57d39be396a06e2c3f987f3", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "4904e7e557899e4aee9c4b861142778e", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,m;\n    scanf(\"%d\",&n);\n    if(n>1)\n    {\n        if(n==2)\n        {\n            for(i=n;i>=1;i--){\n                printf(\"%d \",i);\n                }\n        }\n\n        else if(n%2==0)\n            {\n                for(i=n/2;i>=1;i--)\n                    printf(\"%d \",i);\n                for(m=n;m>=((n/2)+1);m--)\n                    printf(\"%d \",m);\n            }\n            else\n            {\n\n                for(i=n/2;i>=1;i--)\n                    printf(\"%d \",i);\n                for(m=n;m>=((n/2)+1);m--)\n                    printf(\"%d \",m);\n            }\n    }\n    else\n        printf(\"-1\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,m;\n    scanf(\"%d\",&n);\n    if(n%2!=0)\n    {\n        printf(\"-1\");\n    }\n    else\n    {\n        printf(\"2 1\");\n        for(i=3;i<=n;i+=2)\n            printf(\" %d %d\", i+1, i);\n    }\n}\n"}
{"similarity_score": 0.9321739130434783, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b40f6328c834c86ae2fc47a781e5f679", "bug_code_uid": "bbe48c6f639fa8d9c782f1a9da665266", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "4fc58ecce471d9fbabde56ac89d119e2", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong long int m=0,sum=0,s[10000],n,co=0,tem=0,i,b,j,d;\nscanf(\"%lld %lld %lld\",&n,&b,&d);\nsum=0;\nint a[n];\nfor(i=0;i<n;i++)\n{\nscanf(\"%lld\",&a[i]);\nif(a[i]>b)\n    continue;\nif(sum<b)\n    sum+=a[i];\n\nif(sum>d)\n{++co;\nsum=0;\n}\n\n}\n\nprintf(\"%lld\\n\",co);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nlong long int m=0,sum=0,s[10000],n,co=0,tem=0,i,b,j,d;\nscanf(\"%lld %lld %lld\",&n,&b,&d);\nsum=0;\nint a[n];\nfor(i=0;i<n;i++)\n{\nscanf(\"%lld\",&a[i]);}\nfor(i=0;i<n;i++)\n{\nif(a[i]>b)\n    continue;\n\n    sum+=a[i];\n\nif(sum>d)\n{\n\nco++;\nsum=0;\n}\n\n}\n\nprintf(\"%lld\\n\",co);\n}\n"}
{"similarity_score": 0.13464991023339318, "equal_cnt": 12, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "76ef328af9bbc7d0c3256be7f0ba0746", "bug_code_uid": "052f1bb6458e94a56295fc12b8245cc1", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "5286277d8a57b740bbd9a93707d340fc", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid decal(char *s, int k){\n\tstrcpy(s + k, s + k + 1);\n}\n\nvoid exist(char* s, int* p){\n\tchar *ch = \"Bulbasaur\";\n\tint i = 0;\n\tint j;\n\tint flag;\n\twhile((i < strlen(ch) && (flag))){\n\t\tflag = 0;\n\t\tfor(j = 0; j < strlen(s); j++){\n\t\t\tif (ch[i] == s[j]){\n\t\t\t\tdecal(s, j);\n\t\t\t\ti++;\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (!flag){\n\t\t*p = -1;\n\t}else{\n\t\t*p = 1;\n\t}\n}\n\nint main(){\n\tchar s[100001];\n\tscanf(\"%s\", s);\n\t\n\tint nb = 0;\n\tint p;\n\tint flag = 1;\n\twhile ((strlen(s) >= 9) && (flag)){\n\t\texist(s, &p);\n\t\t//printf(\"%s\", s);\n\t\tif (p == -1){\n\t\t\tflag = 0;\n\t\t}else{\n\t\t\tnb++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", nb);\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\tchar c;\n\tint e[7] = {0, 0, 0, 0, 0, 0, 0};\n\twhile((c = fgetc(stdin)) && (c != '\\n') && (c != ' ')){\n\t\tswitch(c){\n\t\t\tcase 'B': e[0]++; break;\n\t\t\tcase 'u': e[1]++; break;\n\t\t\tcase 'l': e[2]++; break;\n\t\t\tcase 'b': e[3]++; break;\n\t\t\tcase 'a': e[4]++; break;\n\t\t\tcase 's': e[5]++; break;\n\t\t\tcase 'r': e[6]++; break;\n\t\t}\n\t}\n\te[1] /= 2;\n\te[4] /= 2;\n\t\n\tint i, min = e[0];\n\tfor(i = 1; i < 7; i++){\n\t\tif(min > e[i]){\n\t\t\tmin = e[i];\n\t\t}\n\t}\n\tprintf(\"%d\", min);\n}"}
{"similarity_score": 0.8276740237691002, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "d3984e47bdb12cd2e0ae427927bf61bf", "bug_code_uid": "7257b68f225ab35b0661384375654904", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "1630b2f7795379ac819a0766439f1da1", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<Stdio.h>\n\nint main()\n{\n\tint n,m,i,j;\n\tint result = 0;\n\tscanf(\"%d\",&n);\n\tint boys[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(i!=n-1)\n\t\t\tscanf(\"%d \",&boys[i]);\n\t\telse\n\t\t\tscanf(\"%d\",&boys[i]);\n\t}\n\tscanf(\"%d\",&m);\n\tint girls[m];\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(i!=m-1)\n\t\t\tscanf(\"%d \",&girls[i]);\n\t\telse\n\t\t\tscanf(\"%d\",&girls[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=i;j<n;j++)\n\t\t{\n\t\t\tif(boys[i]>boys[j])\n\t\t\t{\n\t\t\t\tint temp = boys[i];\n\t\t\t\tboys[i] = boys[j];\n\t\t\t\tboys[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tfor(j=i;j<m;j++)\n\t\t{\n\t\t\tif(girls[i]>girls[j])\n\t\t\t{\n\t\t\t\tint temp = girls[i];\n\t\t\t\tgirls[i] = girls[j];\n\t\t\t\tgirls[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint flag = 0;\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(boys[i] == girls[j]-1)\n\t\t\t{\n\t\t\t\tresult = result + 1;\n\t\t\t\tgirls[j] = -1;\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag == 0)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(boys[i] == girls[j])\n\t\t\t\t{\n\t\t\t\t\tresult = result + 1;\n\t\t\t\t\tgirls[j] = -1;\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag == 0)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(boys[i] == girls[j]+1)\n\t\t\t\t{\n\t\t\t\t\tresult = result + 1;\n\t\t\t\t\tgirls[j] = -1;\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\tprintf(\"%d\\n\",result);\n\treturn 0;\n}\n", "fixed": "#include<Stdio.h>\n\nint main()\n{\n\tint n,m,i,j,k;\n\tint result = 0;\n\tscanf(\"%d\",&n);\n\tint boys[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(i!=n-1)\n\t\t\tscanf(\"%d \",&boys[i]);\n\t\telse\n\t\t\tscanf(\"%d\",&boys[i]);\n\t}\n\tscanf(\"%d\",&m);\n\tint girls[m];\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(i!=m-1)\n\t\t\tscanf(\"%d \",&girls[i]);\n\t\telse\n\t\t\tscanf(\"%d\",&girls[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=i;j<n;j++)\n\t\t{\n\t\t\tif(boys[i]>boys[j])\n\t\t\t{\n\t\t\t\tint temp = boys[i];\n\t\t\t\tboys[i] = boys[j];\n\t\t\t\tboys[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tfor(j=i;j<m;j++)\n\t\t{\n\t\t\tif(girls[i]>girls[j])\n\t\t\t{\n\t\t\t\tint temp = girls[i];\n\t\t\t\tgirls[i] = girls[j];\n\t\t\t\tgirls[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint flag = 0;\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(boys[i] == (girls[j]+1))\n\t\t\t{\n\t\t\t\tresult = result + 1;\n\t\t\t\tgirls[j] = -1;\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag == 0)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(boys[i] == girls[j])\n\t\t\t\t{\n\t\t\t\t\tresult = result + 1;\n\t\t\t\t\tgirls[j] = -1;\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag == 0)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(boys[i] == (girls[j]-1))\n\t\t\t\t{\n\t\t\t\t\tresult = result + 1;\n\t\t\t\t\tgirls[j] = -1;\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\tprintf(\"%d\\n\",result);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8547008547008547, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "43d5fc7bb74039763ed4ca2a2475d677", "bug_code_uid": "57a7c11f5ae28dd171a34744f2c18ad8", "src_uid": "6477fdad8455f57555f93c021995bb4d", "apr_id": "cc541670ddf0f7c4979a58a09ad4ae62", "difficulty": 900, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "p,c,l,m,i,a;main(){for(;a^3?~scanf(\"%d\",&a)?:a=3:0;)i++?a^p?a=l<c?l:c,m=m>a?m:a,l=c,c=1:++c:0;printf(\"%d\",2*m);}", "fixed": "p,c,l,m,t;main(a){for(scanf(\"%*d\");a^3?~scanf(\"%d\",&a)?:(a=3):0;p=a)a^p?t=l<c?l:c,m=m>t?m:t,l=c,c=1:++c;printf(\"%d\",2*m);}"}
{"similarity_score": 0.9911504424778761, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7d05de3c4a70a5beb532150617b985a1", "bug_code_uid": "af18500e594f79667a6469a59cf93caa", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "e9e1ebba18e0cc2b4fc20bb5ec56b62f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t>0){\r\n\r\nint a[100];\r\nint count=0,i,sum=0; \r\nfor(i=0;i<4;i++){\r\nscanf(\"%d\",&a[i]);\r\n}\r\nfor(i=0;i<4;i++){\r\n\r\nif(a[0]<a[i+1]){\r\ncount++;\r\n}\r\n}\r\n printf(\"%d\\n\",count);\r\n      t--;\r\n    }\r\n    \r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t>0){\r\n \r\nint a[10000];\r\nint count=0,i,sum=0; \r\nfor(i=0;i<4;i++){\r\nscanf(\"%d\",&a[i]);\r\n}\r\nfor(i=0;i<4;i++){\r\n \r\nif(a[0]<a[i+1]){\r\ncount++;\r\n}\r\n}\r\n printf(\"%d\\n\",count);\r\n      t--;\r\n    }\r\n    \r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.8158697863682605, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "5d930e350d789fb544842cef7ebc78ec", "bug_code_uid": "86c9aabb4264b9bb3e4bbf82de543c6f", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "b2a179bfd73769d3896a0ff48b14d756", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,j,cnt,g,r;\n\tscanf(\"%d\",&n);\n\tint ara[10000];\n\tint a[10000];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%d\",&ara[i]);\n\t}\n\t\n\tfor (i=0;i<n;i++){\n\t\tcnt=0;\n\t\tfor (j=i;j<n;j++){\n\t\t\tif (ara[i]==ara[j]){\n\t\t\t\tcnt=cnt+1;\n\t\t\t}\n\t\t}\n\t\ta[i]=cnt;\n\t}\n\tg=0;\n\tr=1;\n\tfor (i=0;i<n;i++){\n\t\t//printf(\"%d \",a[i]);\n\t\tif (a[i]==1){\n\t\t\tg=g+1;\n\t\t}\n\t\telse{\n\t\t\tr=r+1;\n\t\t}\n\t}\n\tprintf(\"%d %d\",r,g);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,j,cnt,g,r,f,maxi;\n\tscanf(\"%d\",&n);\n\tint ara[10000];\n\tint a[10000];\n\tint b[10000];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%d\",&ara[i]);\n\t}\n\t\n\tfor (i=0;i<n;i++){\n\t\tcnt=0;\n\t\tfor (j=i;j<n;j++){\n\t\t\tif (ara[i]==ara[j]){\n\t\t\t\tcnt=cnt+1;\n\t\t\t}\n\t\t}\n\t\ta[i]=cnt;\n\t}\n\tg=0;\n\tr=0;\n\tf=0;\n\tfor (i=0;i<n;i++){\n\t\t//printf(\"%d \",a[i]);\n\t\tif (a[i]==1){\n\t\t\tg=g+1;\n\t\t}\n\t\telse{\n\t\t\tf=1;\n\t\t\tb[r]=a[i];\n\t\t\tr=r+1;\n\t\t}\n\t}\n\tif (f==0){\n\t\tmaxi=1;\n\t}\n\telse{\n\t\tmaxi=b[0];\n\t\tfor (i=0;i<r;i++){\n\t\t\tif (b[i]>maxi){\n\t\t\t\tmaxi=b[i];\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\",maxi,g);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8529170090386196, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2a840601e68c3717f552ef426ef16ce7", "bug_code_uid": "fba248dedb4d9e9d4c0b3199af5eb347", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "f0969b6444169debdc52c604d9185de2", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int testcase,i,l,n;\n    long long k,j;\n    scanf(\"%d\",&testcase);\n    for(i=0;i<testcase;i++){\n        scanf(\"%d %lld\",&n,&k);\n        int n2=0;\n        for(l=0;l<k;l++){\n            if(n%2==0) n2=n+2;\n            else{\n                for(j=3;j<=n/3;j=j+2){\n                    if(n%j==0){\n                        n2=n+j;\n                        break;\n                    }\n                }\n            }\n            if(n2==0) n=n*2;\n            else n=n2;\n        }\n        printf(\"%d\\n\",n);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int testcase,i,l,n;\n    long long k,j;\n    scanf(\"%d\",&testcase);\n    for(i=0;i<testcase;i++){\n        scanf(\"%d %lld\",&n,&k);\n        int n2=0;\n        for(l=0;l<k;l++){\n            if(n%2==0){\n                n=n+2*(k-l);\n                break;\n            }\n            else{\n                for(j=3;j<=n/3;j=j+2){\n                    if(n%j==0){\n                        n2=n+j;\n                        break;\n                    }\n                }\n                if(n2==0) n=n*2;\n                else n=n2;\n            }\n        }\n        printf(\"%d\\n\",n);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9508196721311475, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5bdfb062fac89f8d935cf8bea850bd58", "bug_code_uid": "c5cd1683ccc755a457e87b95776656a6", "src_uid": "e2ff228091ca476926b8e905f1bc8dff", "apr_id": "a6e0666ab0ee9e600c8014d67a1c2a15", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tint counter[11];\n\tfor (int i=0;i<=10;i++) counter[i]=0;\n\tint arr[n];\n\tfor (int i=0;i<n;i++) {\n\t\tscanf(\"%d\", &arr[i]);\n\t\tcounter[arr[i]]++;\n\t}\n\tint total=0;\n\tfor (int i=0;i<=10;i++) {\n\t\tcounter[i]--;\n\t\ttotal+=counter[i]*(counter[i]+1)/2;\n\t}\n\tprintf(\"%d\\n\", (n-1)*(n)/2-total);\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tlong long int n, m;\n\tscanf(\"%lld %lld\", &n, &m);\n\tlong long int counter[11];\n\tfor (int i=0;i<=10;i++) counter[i]=0;\n\tint arr[n];\n\tfor (int i=0;i<n;i++) {\n\t\tscanf(\"%d\", &arr[i]);\n\t\tcounter[arr[i]]++;\n\t}\n\tlong long int total=0;\n\tfor (int i=0;i<=10;i++) {\n\t\tcounter[i]--;\n\t\ttotal+=counter[i]*(counter[i]+1)/2;\n\t}\n\tprintf(\"%lld\\n\", (n-1)*(n)/2-total);\n}\n"}
{"similarity_score": 0.963924963924964, "equal_cnt": 13, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "199f24d48698f59e5486d17bf74c6e29", "bug_code_uid": "62359496449f17bb72fb0e5fc5c05f64", "src_uid": "ac7d117d58046872e9d665c9f99e5bff", "apr_id": "73500bd08bab09ff5fbd5a484519ca2c", "difficulty": 800, "tags": ["brute force", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong main()\n{\n    long t, n;\n    scanf(\"%ld\", &t);\n    for (long i = 0; i < t; i++)\n    {\n        scanf(\"%ld\", &n);\n        long num_digits = 0, count = 0;\n        long x = n;\n        while (x != 0)\n        {\n            x /= 10;\n            num_digits++;\n        }\n        count += 9 * (num_digits - 1);\n        long min = 1;\n        for (long j = 1; j < num_digits; j++)\n        {\n            min *= 10;\n            min++;\n        }\n        long y = min;\n        for (long j = 0; j < 9; j++)\n        {\n            if (y <= n)\n            {\n                count++;\n            }\n            y += min;\n        }\n        printf(\"%ld\\n\", count);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long t, n;\n    scanf(\"%lld\", &t);\n    for (long long i = 0; i < t; i++)\n    {\n        scanf(\"%lld\", &n);\n        long long num_digits = 0, count = 0;\n        long long x = n;\n        while (x != 0)\n        {\n            x /= 10;\n            num_digits++;\n        }\n        count += 9 * (num_digits - 1);\n        long long min = 1;\n        for (long long j = 1; j < num_digits; j++)\n        {\n            min *= 10;\n            min++;\n        }\n        long long y = min;\n        for (long long j = 0; j < 9; j++)\n        {\n            if (y <= n)\n            {\n                count++;\n            }\n            y += min;\n        }\n        printf(\"%lld\\n\", count);\n    }\n}"}
{"similarity_score": 0.7731568998109641, "equal_cnt": 22, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 18, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "52403228a54916f7d3da150994d9c02a", "bug_code_uid": "f1c87f8272501687a256d2b30d5a35e8", "src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "apr_id": "07f07b30efcfa33f78e12c5d15b39efd", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tint arr[101]={};\n\tint k=n%3,l=0;\n\tfor (i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tfor (i=0;i<n;i++)\n\t{\n\t\tif (k==1 && i+4==n)\n\t\t\tbreak;\n\t\tif (k==2 && i+2==n)\n\t\t\tbreak;\n\t\tl++;\n\t\tprintf(\"%d\",arr[i]);\n\t\tif (l==3 && i!=n-1)\n\t\t{\n\t\t\tprintf(\"-\");\n\t\t\tl=0;\n\t\t}\n\t}\n\tif (n%3==1)\n\t\tprintf(\"%d%d-%d%d\",arr[i],arr[i+1],arr[i+2],arr[i+3]);\n\tif (n%3==2)\n\t\tprintf(\"%d%d\",arr[i],arr[i+1]);\n\n\treturn 0;\n}\n\t\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i=0;\n\tscanf(\"%d\",&n);\n\tint arr[101]={};\n\tint k=n%3,l=0;\n\tchar str[101];\n\tscanf(\"%s\",str);\n\twhile (str[i])\n\t{\n\t\tarr[i]=str[i]-'0';\n\t\ti++;\n\t}\n\t//for (i=0;i<n;i++)\n\t//\tprintf(\"%d\",arr[i]);\n\tif (i==1)\n\t\tprintf(\"%d\",arr[0]);\n\telse\n\t{\n\t\tfor (i=0;i<n;i++)\n\t\t{\n\t\t\tif (k==1 && i+4==n)\n\t\t\t\tbreak;\n\t\t\tif (k==2 && i+2==n)\n\t\t\t\tbreak;\n\t\t\tl++;\n\t\t\tprintf(\"%d\",arr[i]);\n\t\t\tif (l==3 && i!=n-1)\n\t\t\t{\n\t\t\t\tprintf(\"-\");\n\t\t\t\tl=0;\n\t\t\t}\n\t\t}\n\t\tif (n%3==1)\n\t\t\tprintf(\"%d%d-%d%d\",arr[i],arr[i+1],arr[i+2],arr[i+3]);\n\t\tif (n%3==2)\n\t\t\tprintf(\"%d%d\",arr[i],arr[i+1]);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6009538950715422, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ce10d6534cf143d3235bfda5ef791382", "bug_code_uid": "88e684140286a88f362b43799d14d448", "src_uid": "648ec67565c506c3e2ffd007ad44e8c3", "apr_id": "b106f690e9ed5699a605c290dcbe511b", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nlong long int scan()\r\n{\r\n    long long int x;\r\n    scanf(\"%lld\",&x);\r\n    return x;\r\n}\r\nvoid print(long long int n)\r\n{\r\n    printf(\"%lld\\n\",n);\r\n}\r\nint main()\r\n{\r\n    long long int t;\r\n    t=scan();\r\n    while(t--)\r\n    {\r\n        long long int n;\r\n        n=scan();\r\n        long long int y=(1+n)*(1+n+n);\r\n        print(y);\r\n        for(int i=0;i<143;i++);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <math.h>\r\n#include<stdio.h>\r\nlong long int scan()\r\n{\r\n    long long int x;\r\n    scanf(\"%lld\",&x);\r\n    return x;\r\n}\r\nvoid print(long long int n)\r\n{\r\n    printf(\"%lld\\n\",n);\r\n}\r\n\r\n\r\nlong long int prime (long long int n)\r\n{\r\n    long long int i;\r\n    for(i=2;i<=sqrt(n);i++)\r\n    {\r\n        if(n%i==0)\r\n        {\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\n\r\nlong long int nearprime(long long int n)\r\n{\r\n    long long int i=n;\r\n    while(1)\r\n    {\r\n        if(prime(i)==1)\r\n        {\r\n            return i;\r\n        }\r\n        i++;\r\n    }\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    long long int t;\r\n    t=scan();\r\n    while(t--)\r\n    {\r\n        long long int n;\r\n        n=scan();\r\n        long long int x=nearprime(1+n);\r\n        long long int y=nearprime(x+n);\r\n        print(y*x);\r\n        for(int i=0;i<143;i++);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9801801801801802, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0ff9fec0a74ce47aec0b10dee97508c4", "bug_code_uid": "110c189a6c165b9ea1cc6f9a25abaa83", "src_uid": "4d7de18e76600777ff023e1b61366ee4", "apr_id": "7dedf23d67146c187ac13eba7f6023c4", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nstruct client {\n  int s, idx;\n};\n\nstruct client c[100000];\n\nint cmp(const void *a, const void *b) {\n  struct client *p = (struct client *)a;\n  struct client *q = (struct client *)b;\n  return p->s - q->s;\n}\n\nvoid func(int n, int d) {\n  int i, ans;\n  qsort(c, n, sizeof(struct client), cmp);\n  for (i = 0; i < n; i ++) {\n    if (d >= c[i].s) {\n      d -= c[i].s;\n    }\n    else {\n      break;\n    }\n  }\n  ans = i;\n  printf(\"%d\\n\", ans);\n  for (i = 0; i < ans - 1; i ++) {\n    printf(\"%d \", c[i].idx);\n  }\n  printf(\"%d\\n\", c[i].idx);\n}\n\nint main() {\n  int n, a, b, d, i, x, y;\n  while (scanf(\"%d%d%d%d\", &n, &d, &a, &b) == 4) {\n    for (i = 0; i < n; i ++) {\n      scanf(\"%d%d\", &x, &y);\n      c[i].s = x * a + y * b;\n      c[i].idx = i + 1;\n    }\n    func(n, d);\n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nstruct client {\n  int s, idx;\n};\n\nstruct client c[100000];\n\nint cmp(const void *a, const void *b) {\n  struct client *p = (struct client *)a;\n  struct client *q = (struct client *)b;\n  return p->s - q->s;\n}\n\nvoid func(int n, int d) {\n  int i, ans;\n  qsort(c, n, sizeof(struct client), cmp);\n  for (i = 0; i < n; i ++) {\n    if (d >= c[i].s) {\n      d -= c[i].s;\n    }\n    else {\n      break;\n    }\n  }\n  ans = i;\n  printf(\"%d\\n\", ans);\n  if (ans > 0) {\n    for (i = 0; i < ans - 1; i ++) {\n      printf(\"%d \", c[i].idx);\n    }\n    printf(\"%d\\n\", c[i].idx);\n  }\n}\n\nint main() {\n  int n, a, b, d, i, x, y;\n  while (scanf(\"%d%d%d%d\", &n, &d, &a, &b) == 4) {\n    for (i = 0; i < n; i ++) {\n      scanf(\"%d%d\", &x, &y);\n      c[i].s = x * a + y * b;\n      c[i].idx = i + 1;\n    }\n    func(n, d);\n  }\n  return 0;\n}"}
{"similarity_score": 0.8205128205128205, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4ac931e04bbcef73335f8ad5520b069d", "bug_code_uid": "2cb3fbc2678635e7d176dbfc1cbcce45", "src_uid": "8a1ceac1440f7cb406f12d9fc2ca0e20", "apr_id": "d819e6c4a3e957e4c73762b68119b554", "difficulty": 800, "tags": ["binary search", "constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--){\r\n        int a,b,temp;\r\n        scanf(\"%d %d\",&a,&b);\r\n\r\n        if(a==0||b==0){\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n\r\n        if(a<b){\r\n            temp=a;\r\n            a=b;\r\n            b=temp;\r\n        }\r\n\r\n        temp=0;\r\n\r\n        if((a/b)>=3) printf(\"%d\\n\",b);\r\n        else if((a/b)>=2){\r\n            while(!(a>=b*3)){\r\n                a=a-2;\r\n                b=b-2;\r\n                temp++;\r\n            }\r\n\r\n            printf(\"%d\\n\",temp+b);\r\n        }\r\n        else printf(\"%d\\n\",(a+b)/4);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--){\r\n        int a,b,temp;\r\n        scanf(\"%d %d\",&a,&b);\r\n\r\n        if(a==0||b==0){\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n\r\n        if(a<b){\r\n            temp=a;\r\n            a=b;\r\n            b=temp;\r\n        }\r\n\r\n        temp=0;\r\n\r\n        if((a/b)>=3) printf(\"%d\\n\",b);\r\n        else printf(\"%d\\n\",(a+b)/4);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6880530973451328, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "a16812c39ba1757a7fb8ded81e45db25", "bug_code_uid": "4fa9893c1b1c7421b07b636fbaff5310", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "751332291f1c1c43ce02b2c9a34adec8", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[1000];\n    int n,sum=0,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",a);\n        if(a==\"Tetrahedron\")\n            sum+=4;\n        else if(a==\"Cube\")\n        sum+=6;\n        else if(a==\"Octahedron\")\n            sum+=8;\n        else if(a==\"Dodecahedron\")\n            sum+=12;\n        else if(a==\"Icosahedron\")\n            sum+=20;\n    }\n\n    printf(\"%d\",sum);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100];\n    int n,sum=0,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",a);\n\n        if(a[0]=='T')\n            sum=sum+4;\n        else if(a[0]=='C')\n        sum=sum+6;\n        else if(a[0]=='O')\n            sum=sum+8;\n        else if(a[0]=='D')\n            sum+=12;\n        else if(a[0]=='I')\n            sum=sum+20;\n     }\n\n\n    printf(\"%d\",sum);\n    return 0;\n\n}\n"}
{"similarity_score": 0.5567502986857825, "equal_cnt": 21, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "f6bcba06277027deb6fa4da80ea8b013", "bug_code_uid": "bcede1a461ed224b4fd80fcd912e1652", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "7b031f639c17c575b8833b142e18738e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nvoid main(){\n    int n,x;\n    char b[11]={'I',' ','h','a','t','e',' ','t','h','a','t'};\n    char d[11]={'I',' ','l','o','v','e',' ','t','h','a','t'};\n    char a[9]={'I',' ','h','a','t','e',' ','i','t'};\n    char c[9]={'I',' ','l','o','v','e',' ','i','t'};\n   scanf(\"%d\",&n);\n   if(n==1){\n       printf(\"%s\",a);\n   }else if(n==2)\n   {\n       printf(\"%s %s\",b,c );\n   }   \n   else{\n      printf(\"%s \",b );\n\n       for (int i = 1; i < n-1; i++)\n        {\n             if(i%2)x=0;\n             else x=1;\n\n             if (x==0)\n             {\n               printf(\"%s \",d);\n             }else\n             {\n                printf(\"%s \",b);\n             }\n             \n        }            \n    \n        \n      if(n%2) printf(\"%s \",a);\n      else    printf(\"%s \",c);\n   }\n\n     }\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,x,i;\n    char a[12]={'I',' ','h','a','t','e',' ','i','t',' ',' ','\\0'};\n    char b[12]={'I',' ','h','a','t','e',' ','t','h','a','t','\\0'};\n    char c[12]={'I',' ','l','o','v','e',' ','i','t',' ',' ','\\0'};\n    char d[12]={'I',' ','l','o','v','e',' ','t','h','a','t','\\0'};\n   \n    \n   scanf(\"%d\",&n);\n   if(n==1){\n       printf(\"I hate it\");\n   }else{\n       \n       if(n==2)\n     {\n       printf(\"I hate that I love it\");\n     }   \nelse{\n          printf(\"%s \",b);\n \n    for (i=1;i<(n-1); i++)\n        {\n             if(i%2)x=0;\n             else x=1;\n\n             if (x==0)\n                printf(\"%s \",d);\n             else \n                printf(\"%s \",b);\n             \n             x=0;\n        }            \n    \n        \n      if(n%2) printf(\"%s\",a);\n      else    printf(\"%s\",c);\n   }\n\n}\nreturn 0;\n}\n\n\n\n\n\n"}
{"similarity_score": 0.5652642934196332, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "679c641f6a1c1d9406315eae03f1de27", "bug_code_uid": "f6753935ba0fa5b93a4ce7efc0014ede", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "3d661c907a73d324ead1931130c60f27", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void) {\n    char a[100000];\n    scanf(\"%s\",a);\n    long long  int i=strlen(a);\n    long long int b[i-1];\n    long long  int j;\n    for(j=0;j<i-1;j++)  if(a[j]==a[j+1])    b[j]=1;\n    else b[j]=0;\n    long long int m;\n    scanf(\"%lld\",&m);\n    for(j=0;j<m;j++){\n        long long int ans=0;\n        long long int l,r;\n        scanf(\"%lld %lld\",&l,&r);\n        l--;\n        r--;\n        int k;\n        for(k=l;k<r;k++)    ans+=b[k];\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n    char a[100000];\n    scanf(\"%s\",a);\n    long long int x=strlen(a);\n    long long int b[x];\n    long long int i;\n    b[0]=0;\n    for(i=0;i<x-1;i++)  b[i+1]=b[i]+(a[i]==a[i+1]);\n    long long int m;\n    scanf(\"%lld\",&m);\n    for(i=0;i<m;i++){\n            long long int l,r;\n            scanf(\"%lld %lld\",&l,&r);\n            printf(\"%lld\\n\",b[r-1]-b[l-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9937888198757764, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "855a1ad82dc0a2cd6d6178a442845089", "bug_code_uid": "3ba982860351cab3e762a68d61971546", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "58223ac71514766dbf79c20f749d9c0e", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int a,b,i,d[100000],m=1;\n    scanf(\"%d %d\",&a,&b);\n    for(i=1; i<a; i++)\n        scanf(\"%d\",&d[i]);\n    for(i=1; i<a; i+=d[i])\n    {\n        if(i==b)\n        {\n            printf(\"YES\\n\");\n            return 0;\n        }\n    }\n    printf(\"NO\\n\");\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int a,b,i,d[100000],m=1;\n    scanf(\"%d %d\",&a,&b);\n    for(i=1; i<a; i++)\n        scanf(\"%d\",&d[i]);\n    for(i=1; i<=b; i+=d[i])\n    {\n        if(i==b)\n        {\n            printf(\"YES\\n\");\n            return 0;\n        }\n    }\n    printf(\"NO\\n\");\n}\n"}
{"similarity_score": 0.891156462585034, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "adcbff388b4c4d36eed1d91b688e2621", "bug_code_uid": "f57ce450c9ec5af01026adc9beb6aff8", "src_uid": "5aad0a82748d931338140ae81fed301d", "apr_id": "5659b120c7e63de44aafb398f033e36a", "difficulty": 1700, "tags": ["combinatorics", "number theory", "probabilities", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argv, char **args)\n{\n    int pairs, prime;\n\n    scanf(\"%d %d\", &pairs, &prime);\n\n    double expectedMoney = 0;\n\n    double *pos = (double *)malloc(sizeof(double)*pairs);\n\n    int i;\n    for (i = 0; i < pairs; i++)\n    {\n        int l, r;\n        scanf(\"%d %d\", &l, &r);\n\n        double ok = 0;\n        int j;\n        for (j = l; j <= r; j++)\n        {\n            if (j%prime == 0)\n            {\n                ok += 1;\n            }\n        }\n\n        double rangeSize = r + 1 - l;\n\n        pos[i] = (rangeSize-ok)/rangeSize;\n    }\n\n    for (i = 0; i < pairs - 1; i++)\n    {\n        expectedMoney += (1 - pos[i]*pos[i+1])*(2000);\n    }\n    expectedMoney += (1 - pos[0]*pos[pairs-1])*(2000);\n\n    printf(\"%lf\", expectedMoney);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(int argv, char **args)\n{\n    int pairs, prime;\n\n    scanf(\"%d %d\", &pairs, &prime);\n\n    double expectedMoney = 0;\n\n    double *pos = (double *)malloc(sizeof(double)*pairs);\n\n    int i;\n    for (i = 0; i < pairs; i++)\n    {\n        int l, r;\n        scanf(\"%d %d\", &l, &r);\n\n        double ok = 0;\n        int j;\n\n        ok = r/prime - l/prime + (l%prime == 0);\n\n        double rangeSize = r + 1 - l;\n\n        pos[i] = (rangeSize-ok)/rangeSize;\n    }\n\n    for (i = 0; i < pairs - 1; i++)\n    {\n        expectedMoney += (1 - pos[i]*pos[i+1])*(2000);\n    }\n    expectedMoney += (1 - pos[0]*pos[pairs-1])*(2000);\n\n    printf(\"%lf\", expectedMoney);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9963768115942029, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e59e2fcaa628048f2a5eae7e227d46d6", "bug_code_uid": "7187da8b5a625f67a8c1b3ffccd27df8", "src_uid": "4143caa25fcc2f4d400d169f9697be01", "apr_id": "ccb6ae582aa813368128a4a3440a6e36", "difficulty": 1700, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint n,siz,ans[1000010];\nshort vis[1000010];\nint main()\n{\n    int i,j,x;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        vis[x] = 1;\n    }\n    for(i=j=1;i<=1000000;i++) if(vis[i])\n    {\n        if(!vis[1000000-i+1]) ans[++siz] = 1000000-i+1;\n        else if(i<=500000)\n        {\n            while(vis[j] && vis[1000000-j+1]) j++;\n            ans[++siz] = j; ans[++siz] = 1000000-j+1;\n            j++;\n        }\n    }\n    printf(\"%d\\n\",siz);\n    for(i=1;i<=siz;i++) printf(\"%d \",ans[i]);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint n,siz,ans[1000010];\nshort vis[1000010];\nint main()\n{\n    int i,j,x;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        vis[x] = 1;\n    }\n    for(i=j=1;i<=1000000;i++) if(vis[i])\n    {\n        if(!vis[1000000-i+1]) ans[++siz] = 1000000-i+1;\n        else if(i<=500000)\n        {\n            while(vis[j] || vis[1000000-j+1]) j++;\n            ans[++siz] = j; ans[++siz] = 1000000-j+1;\n            j++;\n        }\n    }\n    printf(\"%d\\n\",siz);\n    for(i=1;i<=siz;i++) printf(\"%d \",ans[i]);\n    return 0;\n}"}
{"similarity_score": 0.6248256624825662, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9e3ae3a9e660544f0b4cd26da57d2046", "bug_code_uid": "36767a479bba9fd3660c953d464a9656", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "09d65b1c32d7463e1d2f2df3f70feb83", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        int count = 0;\r\n        scanf(\"%d\",&n);\r\n        for (int i = 9; i <= n; i += 10)\r\n        {\r\n            if (n >= i)\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        int count;\r\n        scanf(\"%d\",&n);\r\n        if (n<9)\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else if (n>= 9)\r\n        {\r\n            count = ((n-9)/10)+1;\r\n            printf(\"%d\\n\",count);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8586387434554974, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "915a0d4e21196b6f8c6f9b95bf478ad0", "bug_code_uid": "b4e7507dfc96d97570fc3eff7f93f123", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "844713d14683c986c899cc73c0ab3cfb", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint s[3],mid,a,b;\r\n\tscanf(\"%d %d %d\",&s[0],&s[1],&s[2]);\r\n\t for(a=0;a<3;a++){\r\n\t \tfor(b=0;b<3-a-1;b++){\r\n\t \t\tif(s[b]<s[b+1]){\r\n\t \t\t\tmid=s[b];\r\n\t \t\t\ts[b]=s[b+1];\r\n\t \t\t\ts[b+1]=mid;\r\n\t\t\t }\r\n\t\t }\r\n\t }\r\n\t printf(\"%d\",s[1]);\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint s[3],mid,a,b,n;\r\n    scanf(\"%d\",&n);\r\n    while(n){\r\n    n=n-1;\r\n\tscanf(\"%d %d %d\",&s[0],&s[1],&s[2]);\r\n\t for(a=0;a<3;a++){\r\n\t \tfor(b=0;b<3-a-1;b++){\r\n\t \t\tif(s[b]<s[b+1]){\r\n\t \t\t\tmid=s[b];\r\n\t \t\t\ts[b]=s[b+1];\r\n\t \t\t\ts[b+1]=mid;\r\n\t\t\t }\r\n\t\t }\r\n\t }\r\n\t printf(\"%d\\n\",s[1]);\r\n    }\r\n}"}
{"similarity_score": 0.9946751863684771, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3731176453040874bfd83910be970851", "bug_code_uid": "8c9175806e2e0c7e0c5298f325021ee8", "src_uid": "075988685fa3f9b20bd215037c504a4f", "apr_id": "60d98a83681ed011d5c17d774abeb857", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nchar ch[1000000];\nchar check1[1000000],check2[1000000];\nint main()\n{\n\n    int n,x,y,i,j,count=0;\n    scanf(\"%d %d %d\",&n,&x,&y);\n    getchar();\n    scanf(\"%s\",ch);\n    getchar();\n    for(i=n-x-1,j=0;i<n;i++,j++)\n    {\n        check1[j] = ch[i];\n        check2[j] = '0';\n    }\n    check2[x-y]='1';\n    for(i=0;i<x;i++)\n    {\n        if(check1[i]!=check2[i])\n            count++;\n    }\n    printf(\"%d\\n\",count);\n        return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nchar ch[1000000];\nchar check1[1000000],check2[1000000];\nint main()\n{\n\n    int n,x,y,i,j,count=0;\n    scanf(\"%d %d %d\",&n,&x,&y);\n    getchar();\n    scanf(\"%s\",ch);\n    getchar();\n    for(i=n-x,j=0;i<n;i++,j++)\n    {\n        check1[j] = ch[i];\n        check2[j] = '0';\n    }\n    check2[x-y-1]='1';\n    for(i=0;i<x;i++)\n    {\n        if(check1[i]!=check2[i])\n            count++;\n    }\n\n    printf(\"%d\\n\",count);\n        return 0;\n}\n"}
{"similarity_score": 0.3745819397993311, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "3fa25e0d05bc8be2d99cb8ae8109e410", "bug_code_uid": "4713363a9966403bd2137c4f4a109092", "src_uid": "0e21f1c48c8c0463b2ffa7275eddc633", "apr_id": "adf928a641fec8891c59d7d53c518218", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint t,a[9][9],i,j;\n\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tfor (i=0; i<9 ; i++)\n\t\t\tfor( j=0 ; j<9 ; j++)\n\t\t\t\t{\n\t\t\t\t\tscanf(\"%1d\", &a[i][j]);\n\t\t\t\t\tif( a[i][j]==7 )\n\t\t\t\t\ta[i][j]=1;\n\t\t\t\t}\n\n\t\tfor (i=0; i<9 ; i++)\n\t\t\t{\n\t\t\t\tfor( j=0 ; j<9 ; j++)\n\t\t\t\t\tprintf(\"%d\", a[i][j]);\n\t\t\t\tputs(\"\");\n\t\t\t}\n\t}\t\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint t,i,j;\n\tchar a[10][10];\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tfor (i=0; i<9 ; i++)\n\t\t{\n\t\t\tscanf(\"%s\", &a[i]);\n\t\t\tfor ( j=0; j<9; ++j)\n\t\t\t\tif (a[i][j]=='1')\n\t\t\t\t\ta[i][j]='7';\n\t\t}\n\n\t\tfor (i=0; i<9; ++i)\n\t\t\tprintf(\"%s\\n\", a[i]);\n\t}\t\n\treturn 0;\n}"}
{"similarity_score": 0.43248945147679324, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "d5f174ba5a0d55deaded614c73132d1b", "bug_code_uid": "60dd8a3b740b9856e68935330057f2d0", "src_uid": "43996d7e052aa628a46d03086f9c5436", "apr_id": "d9edd229fb14cd3e0ab5e558676e5094", "difficulty": 1000, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n\nint main(void) {\n\t// your code goes here\n\tint T,sum;\n\tscanf(\"%d\",&T);\n\tfor(int num=1;num<=T;num++)\n\t{\n\t    int n;\n\t    scanf(\"%d\",&n);\n\t    if(n>1)\n\t    {\n\t       sum=3;\n\t       for(int i=1;i<n;i++)\n\t       {\n\t            int p=pow(10,i);\n\t            sum=sum+2*p;\n\t       }\n\t       if((sum%3)==0)\n\t       {\n\t             sum=sum+30;\n\t       }\n\t    }\n\t    else\n\t    {\n\t        sum=-1;\n\n\t    }\n        printf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main() {\n\t// your code goes here\n\tint T;\n\tscanf(\"%d\",&T);\n\tfor(int num=1;num<=T;num++)\n\t{\n\t    int n;\n\t    scanf(\"%d\",&n);\n\t    if(n==1)\n\t    {\n\t        printf(\"-1\\n\");    \n\t    }\n\t    else\n\t    {\n\t        for(int i=1;i<(n-1);i++)\n\t        {\n\t            printf(\"2\");\n\t        }\n\t        if((n-1)%3==0)\n\t        {\n\t            printf(\"33\\n\");\n\t        }\n\t        else\n\t        {\n\t            printf(\"23\\n\");\n\t        }\n\t    }\n\t    \n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9896449704142012, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "da5e280ddec572031886a703c28e298c", "bug_code_uid": "d8fdfe49e5b4c91dffdbe325faed87a7", "src_uid": "c88a8c04e9ea7d37b94f92ad43270fb6", "apr_id": "ce97ee0f8bdd6f78f3a1358390bfa0d0", "difficulty": 2000, "tags": ["dp", "matrices"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define m 1000000007u\ntypedef long long unsigned llu;\ntypedef unsigned u;\nu X[111],Y[111],*A,*B,*C,W[11],L[111][111],M[111][111],(*N)[111],(*O)[111],(*P)[111];\nint main()\n{\n\tu q,e,r,n,i,j,k;\n\tscanf(\"%u%u%u%u\",&q,&e,&r,&n);\n\tfor(i=-1;++i<q;++W[j])scanf(\"%u\",&j);\n\tfor(i=-1;++i<n;)for(j=-1;++j<10;M[k][i]+=W[j])k=(i*10+j)%n;\n\tN=M;O=L;*(A=X)=1;B=Y;\n\tfor(;;)\n\t{\n\t\tif(e&1)\n\t\t{\n\t\t\tfor(i=-1;++i<n;)for(B[i]=0,j=-1;++j<n;)\n\t\t\t{\n\t\t\t\tB[i]=(B[i]+N[i][j]*(llu)A[j])%m;\n\t\t\t}\n\t\t\tC=A;A=B;B=C;\n\t\t}\n\t\tif(!(e>>=1))break;\n\t\tfor(i=-1;++i<n;)for(j=-1;++j<n;)for(O[i][j]=0,k=-1;++k<n;)\n\t\tO[i][j]=(O[i][j]+N[i][k]*(llu)N[k][i])%m;\n\t\tP=N;N=O;O=P;\n\t}\n\tprintf(\"%u\\n\",A[r]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define m 1000000007u\ntypedef long long unsigned U;\ntypedef unsigned u;\nu X[111],Y[111],*A,*B,*C,W[11],L[111][111],M[111][111],(*N)[111],(*O)[111],(*P)[111];\nint main()\n{\n\tu q,e,r,n,i,j,k;\n\tscanf(\"%u%u%u%u\",&q,&e,&r,&n);\n\tfor(i=-1;++i<q;++W[j])scanf(\"%u\",&j);\n\tfor(i=-1;++i<n;)for(j=-1;++j<10;M[k][i]+=W[j])k=(i*10+j)%n;\n\tN=M;O=L;*(A=X)=1;B=Y;\n\tfor(;;)\n\t{\n\t\tif(e&1)\n\t\t{\n\t\t\tfor(i=-1;++i<n;)for(B[i]=0,j=-1;++j<n;)\n\t\t\t{\n\t\t\t\tB[i]=(B[i]+N[i][j]*(U)A[j])%m;\n\t\t\t}\n\t\t\tC=A;A=B;B=C;\n\t\t}\n\t\tif(!(e>>=1))break;\n\t\tfor(i=-1;++i<n;)for(j=-1;++j<n;)for(O[i][j]=0,k=-1;++k<n;)\n\t\tO[i][j]=(O[i][j]+N[i][k]*(U)N[k][j])%m;\n\t\tP=N;N=O;O=P;\n\t}\n\tprintf(\"%u\\n\",A[r]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9591836734693877, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b02f9408af6272752cda1d8c7bbbf028", "bug_code_uid": "f8facb5bf2e57a33f13eaabcdbcb1ae9", "src_uid": "d5a328cfa1e4d26ff007813ad02991ac", "apr_id": "1f13de7badac87d5d704736fc7a45c26", "difficulty": 1400, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint map[105][105];\nint main(){\n    int i,j;\n    int n,k;\n    while(~scanf(\"%d%d\",&n,&k)){\n\n        if(k>n*n){\n            printf(\"-1\\n\");\n            continue;\n        }\n        for(i=0;i<n;i++)\n            for(j=0;j<n;j++){\n                if(i==j && k){\n                    map[i][j]=1;\n                    k--;\n                    continue;\n                }\n                if(k>=2){\n                    map[i][j]=map[j][i]=1;\n                    k-=2;\n                }\n            }\n        for(i=0;i<n;i++){\n            for(j=0;j<n;j++)\n            printf(\"%d \",map[i][j]);\n            printf(\"\\n\");\n        }\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint map[105][105];\nint main(){\n    int i,j;\n    int n,k;\n    while(~scanf(\"%d%d\",&n,&k)){\n\n        if(k>n*n){\n            printf(\"-1\\n\");\n            continue;\n        }\n        for(i=0;i<n;i++)\n            for(j=0;j<n;j++){\n                if(map[i][j])\n                continue;\n                if(i==j && k){\n                    map[i][j]=1;\n                    k--;\n                    continue;\n                }\n                if(k>=2){\n                    map[i][j]=map[j][i]=1;\n                    k-=2;\n                }\n            }\n        for(i=0;i<n;i++){\n            for(j=0;j<n;j++)\n            printf(\"%d \",map[i][j]);\n            printf(\"\\n\");\n        }\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9933949801849405, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "2f5009f0e0fafa9406dd8f216241c7ec", "bug_code_uid": "0a24910885afec9c9285ca6203f685d6", "src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "apr_id": "4073d5c9871218aa93e6621989fec263", "difficulty": 1200, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\n\nint main( void ) {\n     int n, vb, vs;\n     double bt = INT_MAX;\n     int bi = INT_MAX;\n     double bd = INT_MAX;\n     \n     scanf(\"%i %i %i\", &n, &vb, &vs);\n     \n     const int Max = 100;\n     int bus[Max+1];\n     \n     int i;\n     for( i = 1; i <= n; i++ )   scanf(\"%i\", &bus[i]);\n     \n     int x, y;\n     scanf(\"%i %i\", &x, &y);\n     \n     for( i = 2; i <= n; i++ ) {\n          double dd = sqrt( (double)(bus[i]-x)*(bus[i]-x) + y*y );\n          double tt = (dd / vs) + (bus[i]/vb);\n          \n          \n          if( tt < bt && dd < bd ) {\n               bt = tt;\n               bi = i;\n               bd = dd;\n          }\n     }\n     \n     \n     printf(\"%i\\n\", bi);\n     \n     return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\n\nint main( void ) {\n     int n, vb, vs;\n     double bt = INT_MAX;\n     int bi = INT_MAX;\n     double bd = INT_MAX;\n     \n     scanf(\"%i %i %i\", &n, &vb, &vs);\n     \n     const int Max = 100;\n     int bus[Max+1];\n     \n     int i;\n     for( i = 1; i <= n; i++ )   scanf(\"%i\", &bus[i]);\n     \n     int x, y;\n     scanf(\"%i %i\", &x, &y);\n     \n     for( i = 2; i <= n; i++ ) {\n          double dd = sqrt( (double)(bus[i]-x)*(bus[i]-x) + y*y );\n          double tt = (dd /vs) + ((double)bus[i]/vb);\n          \n          \n          if( tt <= bt && dd < bd ) {\n               bt = tt;\n               bi = i;\n               bd = dd;\n          }\n     }\n     \n     \n     printf(\"%i\\n\", bi);\n     \n     return 0;\n}"}
{"similarity_score": 0.9532710280373832, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f69ab20e4d07103647159369eb04a981", "bug_code_uid": "b2c5399a4ffb3ab35b5891f5a7848d35", "src_uid": "f9f803c6850da1838d62a0cf85bb13f2", "apr_id": "2214bf4f94a119c9a109110c47b2bf09", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n    long long t;\r\n    scanf(\"%d\", &t);\r\n    while(t-->0){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        printf(\"%d  %d  %d  %d\\n\", n-3, 1,1,1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n    long long t;\r\n    scanf(\"%lli\", &t);\r\n    while(t>0){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        printf(\"%d  %d  %d  %d\\n\", n-3, 1,1,1);\r\n        t--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9715489989462592, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bc042d81e603917d2534b3f674bb3272", "bug_code_uid": "21b340895086bbe1c3ff3e525295a9a0", "src_uid": "0fbac68f497fe189ee088c13d0488cce", "apr_id": "f4ce38038ed798b14bec696eb8fa2ba1", "difficulty": 1200, "tags": ["dp", "two pointers", "implementation", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void) {\n\t    int a,b,pass=0;\n\t    scanf(\"%d %d\\n\",&a,&b);\n\t    int c[a],d[a],e[a];\n\t    for(int i=0;i<a;i++){\n\t        scanf(\"%d \",&c[i]);\n\t        e[i]=0;\n\t    }\n\t    scanf(\"\\n\");\n\t     for(int i=0;i<a;i++){\n\t        scanf(\"%d \",&d[i]);\n\t        if(d[i]==0){\n\t            e[i]=c[i];\n\t        }\n\t    }\n\t    int l=0,f=0,g;\n\t    if(a==b){\n\t        for(int i=0;i<a;i++){\n\t            l=l+c[i];\n\t        }\n\t    }\n\t    else{\n\t    for(int j=1;j<=b;j++){\n\t          l=l+e[j];\n\t          f=f+e[-1+j];\n\t        }\n\t    for(int i=1;i<a;i++){\n\t        if(l<=f){\n\t            g=f;\n\t        }\n\t        else{\n\t            g=l;\n\t            \n\t        }\n\t        f=l;\n\t        if(b+i>a-1){\n\t            break;\n\t        }\n\t        l=l+e[b+i]-e[i];\n\t       //printf(\"%dAAAA\\n\",l);\n\t    }\n\t    l=0;\n\t    for(int i=0;i<a;i++){\n\t        if(d[i]==1){\n\t        l=l+c[i];\n\t    }\n\t    }\n\t    \n\t    l+=g;}\n\t   printf(\"%d\",l);\n\t    \n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\nint main(void) {\n\t    int a,b,pass=0;\n\t    scanf(\"%d %d\\n\",&a,&b);\n\t    int c[a],d[a],e[a];\n\t    for(int i=0;i<a;i++){\n\t        scanf(\"%d \",&c[i]);\n\t        e[i]=0;\n\t    }\n\t    scanf(\"\\n\");\n\t     for(int i=0;i<a;i++){\n\t        scanf(\"%d \",&d[i]);\n\t        if(d[i]==0){\n\t            e[i]=c[i];\n\t        }\n\t    }\n\t    int l=0,f=0,g;\n\t    if(a==b){\n\t        for(int i=0;i<a;i++){\n\t            l=l+c[i];\n\t        }\n\t    }\n\t    else{\n\t    for(int j=1;j<=b;j++){\n\t          l=l+e[j];\n\t          f=f+e[-1+j];\n\t        }\n\t    for(int i=1;i<a;i++){\n\t        if(l<=f){\n\t            g=f;\n\t        }\n\t        else{\n\t            g=l;\n\t            f=l;\n\t            \n\t        }\n\t        if(b+i>a-1){\n\t            break;\n\t        }\n\t        l=l+e[b+i]-e[i];\n\t       //printf(\"%dAAAA\\n\",l);\n\t    }\n\t    l=0;\n\t    for(int i=0;i<a;i++){\n\t        if(d[i]==1){\n\t        l=l+c[i];\n\t    }\n\t    }\n\t    \n\t    l+=g;}\n\t   printf(\"%d\",l);\n\t    \n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7607726597325408, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "d309c890f69cddd7e8f701af07094686", "bug_code_uid": "5a0e052e7cac4de53777fa0ce21c6159", "src_uid": "85f90533a9840e944deef9f3b4229cb8", "apr_id": "3ae0e09c3b32adb9b7f47daa78ec48a6", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void) {\n    char s[1000001],c;int k,a[26],sum=0,m=-1,l,i;\n    scanf(\"%s%d\",s,&k); l=strlen(s);\n    for(i=0;i<26;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>m){c=s[i];m=a[i];}\n    }\n    for(i=l-1;i<l+k;i++)s[i]=c;\n    for(i=0;i<l+k;i++)sum+=a[s[i]-'a']*(i+1);\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(void) {\n    char s[1001];\n    int k,a[26],sum=0,m=-1,l,i;\n    scanf(\"%s%d\",s,&k);\n    l=strlen(s);\n    for(i=0;i<26;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>m)m=a[i];\n    }\n    for(i=0;i<l;i++)sum+=(a[s[i]-'a']*(i+1));\n    for(i=l+1;i<=l+k;i++)sum+=(m*i);\n    printf(\"%d\\n\",sum);\n    return 0;\n}"}
{"similarity_score": 0.3148335015136226, "equal_cnt": 22, "replace_cnt": 17, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "a09e72fc2606847263c452005b2e18d9", "bug_code_uid": "a99db79d8c39395aa5c44956a3ae7f99", "src_uid": "16c016c0735be1815c7b94c5c50516f1", "apr_id": "b969b1f0790dc0ad457a70173330dde6", "difficulty": 1700, "tags": ["dp"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n\nusing namespace std;\n\nconst int MAX = 1e5 + 1;\nconst int MOD = 1e9 + 7;\n\nlong P[MAX];\nlong Sums[MAX];\n\nint main()\n{\n    \tP[0] = 1; Sums[0] = 0;\n    \tlong t, k; cin >> t >> k;\n    \tfor(int i = 1; i < MAX; i++)\n    \t{\n        \tP[i] = (P[i-1] + ((i >= k) ? P[i-k] : 0)) % MOD;\n        \tSums[i] = (Sums[i-1] + P[i]) % MOD;\n    \t}\n    \tfor(int i = 0; i < t; i++)\n    \t{\n        \tint a, b; cin >> a >> b;\n        \tcout << (Sums[b] - Sums[a-1]+MOD)%MOD << \"\\n\";\n    \t}\n    \treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define MAX ((int)1e5+1)\n#define MOD ((int)1e9 + 7)\n\nint P[MAX];\n\nint main()\n{\n    \tP[0] = 1;\n    \tint t, k; scanf(\"%d %d\", &t, &k);\n    \tfor(int i = 1; i < MAX; i++) {\n        \tP[i] = (P[i-1] + ((i >= k) ? P[i-k] : 0)) % MOD;\n    \t}\n\tP[0] = 0;\n\tfor(int i = 1; i < MAX; i++) {\n        \tP[i] = (P[i] + P[i-1] ) % MOD;\n\t}\n    \tfor(int i = 0; i < t; i++) {\n        \tint a, b; scanf(\"%d %d\", &a, &b);\n        \tprintf(\"%d\\n\", (P[b] - P[a-1]+MOD)%MOD);\n    \t}\n    \treturn 0;\n}\n"}
{"similarity_score": 0.30839002267573695, "equal_cnt": 19, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "0d160f4e1ed0396a8cb760b2f42def30", "bug_code_uid": "372ad43c7e7cf912c9276d717e8a43aa", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "a59895c74133ec092c8ea0a526ec126d", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdbool.h>\n#include<math.h>\nint main()\n{\n    int n,i,l,min,x;\n     double c,j,max1;\n    scanf(\"%d%d\",&n,&l);\n    bool a[l+1],state=0;\n    for(i=0;i<l;i++)\n\ta[i]=0;\n    min=l+1;\n    for(i=0;i<n;i++)\n    {\n\tscanf(\"%d\",&x);\n\tif(x<min)\n\t    min=x;\n\ta[x]=1;\n    }\n   // printf(\"min=%d\\n\",min);\n    max1=min;\n    for(i=min,state=0;i<l;i++)\n    {\n  //  printf(\"max1=%llf\\n\",max1);\n\tif(state==0 && a[i]==1)\n\t{\n\t    state =1;\n\t    j=i;\n\t}\n\telse if(state==1 && a[i]==1)\n\t{\n\t    c=(i-j)/2;\n    //printf(\"c=%llf\\n\",c);\n\t    if(c>max1)\n\t\tmax1=c;\n\t    state=0;\n\t    j=i;\n\t}\n    }\n    printf(\"%.10lf\\n\",max1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdbool.h>\n#include<math.h>\nvoid shell(double v[], int n)\n{\n    int gap, i, j;\n    double temp;\n    for (gap = n/2; gap > 0; gap /= 2)\n\tfor (i = gap; i < n; i++)\n\t    for (j=i-gap; j>=0 && v[j]>v[j+gap]; j-=gap)\n\t    {\n\t\ttemp = v[j];\n\t\tv[j] = v[j+gap];\n\t\tv[j+gap] = temp;\n\t    }\n}\nint main()\n{\n    long long int min;\n    int n,i,x,j;\n    double c,max,l;\n    scanf(\"%d%lf\",&n,&l);\n    min =l+1;\n    double a[n];\n    for(i=0;i<n;i++)\n\tscanf(\"%lf\",&a[i]);\n    shell(a,n);\n    if(a[0]>(l-a[n-1]))\n\tmax=a[0];\n    else\n\tmax=(l-a[n-1]);\n    for(i=0;i<n;i++)\n    {\n\tif((a[i+1]-a[i])/2>max)\n\t    max=(a[i+1]-a[i])/2;\n    }\n    printf(\"%.10lf\\n\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9940666362391603, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "674b633317b821c6e03bfae2e08784b7", "bug_code_uid": "27ed0ecc1235de0ec45847f67ccf6d98", "src_uid": "28102f75e0798960740e5a2625393c8f", "apr_id": "5624713d2c8961e0eff855e22a77c220", "difficulty": 800, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n,flag = 0,i,j,k,len;\r\n\tscanf(\"%d\",&n);\r\n\tchar a[n][60];\r\n\tint b[60]={-1},c[60]={-1};//\u7528\u6765\u8bb0\u5f55\u91cd\u590d\u7684\u4e24\u4e2a\u5b57\u6bcd\u7684\u4f4d\u7f6e \r\n\tgetchar();\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tgets(a[i]);\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tflag=0;\r\n\t\tfor(j=0;a[i][j]!='\\0';j++)\r\n\t\t{\r\n\t\t\tfor(k=j+1;a[i][k]!='\\0';k++)//\u5148\u627e\u662f\u5426\u6709\u91cd\u590d\u7684 \r\n\t\t\t{\r\n\t\t\t\tif(a[i][j]==a[i][k])\r\n\t\t\t\t{\r\n\t\t\t\t\tb[flag] = j;\r\n\t\t\t\t\tc[flag] = k; \r\n\t\t\t\t\tflag++;//\u6709\u91cd\u590d\u7684\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag==0)\r\n\t\t{\r\n\t\t\tputs(a[i]);//\u539f\u5c01\u4e0d\u52a8\u7684\u8f93\u51fa \r\n\t\t\tprintf(\"\\n\");\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\telse if(flag==1)//\u6709\u4e00\u4e2a\u91cd\u590d,\u5148\u8f93\u51fa\u91cd\u590d\u90e8\u5206\u518d\u8bb2\u5269\u4e0b\u7684\u90e8\u5206\u8f93\u51fa \r\n\t\t{\r\n\t\t\tprintf(\"%c%c\",a[i][b[0]],a[i][c[0]]);\r\n\t\t\tfor(k=0;a[i][k]!='\\0';k++)\r\n\t\t\t{\r\n\t\t\t\tif(k!=b[0]&&k!=c[0])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%c\",a[i][k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(k=0;k<flag;k++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",a[i][b[k]]);\r\n\t\t\t\ta[i][b[k]]='0';\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<flag;k++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",a[i][c[k]]);\r\n\t\t\t\ta[i][c[k]]='0';\r\n\t\t\t}\r\n\t\t\tfor(k=0;a[i][k]!='\\0';k++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i][k]!='0')\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%c\",a[i][k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n,flag = 0,i,j,k,len;\r\n\tscanf(\"%d\",&n);\r\n\tchar a[n][60];\r\n\tint b[60]={-1},c[60]={-1};//\u7528\u6765\u8bb0\u5f55\u91cd\u590d\u7684\u4e24\u4e2a\u5b57\u6bcd\u7684\u4f4d\u7f6e \r\n\tgetchar();\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tgets(a[i]);\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tflag=0;\r\n\t\tfor(j=0;a[i][j]!='\\0';j++)\r\n\t\t{\r\n\t\t\tfor(k=j+1;a[i][k]!='\\0';k++)//\u5148\u627e\u662f\u5426\u6709\u91cd\u590d\u7684 \r\n\t\t\t{\r\n\t\t\t\tif(a[i][j]==a[i][k])\r\n\t\t\t\t{\r\n\t\t\t\t\tb[flag] = j;\r\n\t\t\t\t\tc[flag] = k; \r\n\t\t\t\t\tflag++;//\u6709\u91cd\u590d\u7684\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag==0)\r\n\t\t{\r\n\t\t\tputs(a[i]);//\u539f\u5c01\u4e0d\u52a8\u7684\u8f93\u51fa \r\n\t\t\t//printf(\"\\n\");\r\n\t\t}\r\n\t\telse if(flag==1)//\u6709\u4e00\u4e2a\u91cd\u590d,\u5148\u8f93\u51fa\u91cd\u590d\u90e8\u5206\u518d\u8bb2\u5269\u4e0b\u7684\u90e8\u5206\u8f93\u51fa \r\n\t\t{\r\n\t\t\tprintf(\"%c%c\",a[i][b[0]],a[i][c[0]]);\r\n\t\t\tfor(k=0;a[i][k]!='\\0';k++)\r\n\t\t\t{\r\n\t\t\t\tif(k!=b[0]&&k!=c[0])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%c\",a[i][k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(k=0;k<flag;k++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",a[i][b[k]]);\r\n\t\t\t\ta[i][b[k]]='0';\r\n\t\t\t}\r\n\t\t\tfor(k=0;k<flag;k++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",a[i][c[k]]);\r\n\t\t\t\ta[i][c[k]]='0';\r\n\t\t\t}\r\n\t\t\tfor(k=0;a[i][k]!='\\0';k++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i][k]!='0')\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%c\",a[i][k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9299191374663073, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "997ec15ee6e6efd13958c09e6cece9da", "bug_code_uid": "2bd9082f630c21c9332817b97d29b28d", "src_uid": "8fcec28fb4d165eb58f829c03e6b31d1", "apr_id": "f3760eb9bdefa95748cd66831716d3ab", "difficulty": 1500, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int ok=0;\n    long long int l,r,k,num=1;\n    scanf(\"%lld%lld%lld\",&l,&r,&k);\n    if (l==1) {\n            printf(\"%d \",1);\n        ok=1;\n    }\n    while (num<=r/k) {\n        ok=1;\n        num*=k;\n        if ((num>=l) &&(num<=r)) printf(\"%I64d \",num);\n    }\n    if (!ok) printf(\"%d\",-1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int ok=0;\n    long long int l,r,k,num=1;\n    scanf(\"%lld%lld%lld\",&l,&r,&k);\n    if (l==1) {\n            printf(\"%d \",1);\n        ok=1;\n    }\n    while (num<=r/k) {\n        num*=k;\n        if ((num>=l) &&(num<=r)){\n            ok=1;\n         printf(\"%I64d \",num);\n        }\n    }\n    if (!ok) printf(\"%d\",-1);\n    return 0;\n}\n"}
{"similarity_score": 0.9702970297029703, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c899ed566031f5f0aea78b98588ccf62", "bug_code_uid": "14242406f93535d4553663d8995dea70", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "9a97dd0e9d4a0af5606e9527fd0b0d4f", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint num,c[2];\r\nint main(){\r\n\tint i,t,n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tscanf(\"%d\",&num);\r\n\t\t\tif(num%2==0)\r\n\t\t\t\tc[0]++;\r\n\t\t\telse c[1]++;\r\n\t\t}\r\n\t\tif(c[0]>=c[1])\r\n\t\t    i=1;\r\n\t\telse i=0;\r\n\t\tprintf(\"%d\\n\",c[i]);\r\n\t}\r\n\treturn 0;\r\n} \r\n", "fixed": "#include<stdio.h>\r\nint num,c[2];\r\nint main(){\r\n\tint i,t,n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tc[0]=0;c[1]=0;\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tscanf(\"%d\",&num);\r\n\t\t\tif(num%2==0)\r\n\t\t\t\tc[0]++;\r\n\t\t\telse c[1]++;\r\n\t\t}\r\n\t\tif(c[0]>=c[1])\r\n\t\t    i=1;\r\n\t\telse i=0;\r\n\t\tprintf(\"%d\\n\",c[i]);\r\n\t}\r\n\treturn 0;\r\n} \r\n"}
{"similarity_score": 0.9991783073130649, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "36d5b6d3837d7b983811a19aac8c5952", "bug_code_uid": "ef1ac4a8c54c18247f33f2f577f185af", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "48a34be0eed994ed1c04a24c93429b4b", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nchar a[2000000];\n\nint w[2000000];\nint main()\n{\n    while(scanf(\"%s\",a)!=EOF)\n    {\n        memset(w,0,sizeof(w));\n        int cishu;\n        int b;\n        scanf(\"%d\",&cishu);\n        int L=strlen(a);\n        int i,j;\n        for(i=0;i<cishu;i++)\n        {\n            scanf(\"%d\",&b);\n            w[b-1]++;\n        }\n        int qwe=0;\n        for(i=0;i<=L/2;i++)\n        {\n            qwe=qwe+w[i];\n            if(qwe%2!=0)\n            {\n                char c=a[i];\n                a[i]=a[L-1-i];\n                a[L-1-i]=c;\n            }\n        }\n        puts(a);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nchar a[2000000];\n\nint w[2000000];\nint main()\n{\n    while(scanf(\"%s\",a)!=EOF)\n    {\n        memset(w,0,sizeof(w));\n        int cishu;\n        int b;\n        scanf(\"%d\",&cishu);\n        int L=strlen(a);\n        int i,j;\n        for(i=0;i<cishu;i++)\n        {\n            scanf(\"%d\",&b);\n            w[b-1]++;\n        }\n        int qwe=0;\n        for(i=0;i<L/2;i++)\n        {\n            qwe=qwe+w[i];\n            if(qwe%2!=0)\n            {\n                char c=a[i];\n                a[i]=a[L-1-i];\n                a[L-1-i]=c;\n            }\n        }\n        puts(a);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5096153846153846, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "a17344dd5550569be2c8c35f44d61890", "bug_code_uid": "f657886175243ec84f8cc79c1181d8e1", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "271aebf237bc88c21c844ae0aacdbc99", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void){\n    int n, i, cnt=0, temp, j;\n    int *p;\n\n    scanf(\"%d\", &n);\n\n    if(n <= 2){\n        printf(\"0\");\n        return 0;\n\n    }\n\n    p = (int *) malloc(n * sizeof(int));\n\n    for(i = 0; i < n; i++){\n        scanf(\" %d\", &p[i]);\n    }\n\n\n    for(i = 0; i < n-1; i++){\n        for(j = i + 1; j < n - 1; j++){\n            if(p[i] > p[j]){\n                temp = p[i];\n                p[i] = p[j];\n                p[j] = temp;\n            }\n        }\n        if(i >= 1 && i < n){\n            if(p[i] > p[i - 1] && p[i] <= p[i + 1]){\n                cnt++;\n            }\n        }\n    }\n\n\n\n    printf(\"%d\",cnt);\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compareInt(const void *pa, const void *pb){\n    const int *p1 = pa;\n    const int *p2 = pb;\n\n    return *p1 - *p2;\n\n}\n\nint main(void){\n    int n, i, cnt=0, temp, j;\n    int *p;\n\n    scanf(\"%d\", &n);\n\n    if(n <= 2){\n        printf(\"0\");\n        return 0;\n\n    }\n\n    p = (int *) malloc(n * sizeof(int));\n\n    for(i = 0; i < n; i++){\n        scanf(\" %d\", &p[i]);\n    }\n\n    /// to qsort kanei aftomata short enan pinaka kai prepei na balo to onoma tou pinaka meta tis theseis tou meta sizeof kai ton tipo kai telos na ftiakso to function afto\n    qsort(p , n, sizeof(int), compareInt);\n\n\n    for(i = 0; i < n; i++){\n        if(p[i] > p[0] && p[i] < p[n-1]){\n            cnt++;\n        }\n\n    }\n\n    printf(\"%d\",cnt);\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.3837638376383764, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b30580ac6776825726fa3e39c8ff9683", "bug_code_uid": "e587e29819df56dada5d9bc7dcaf8abe", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "a0c231d29fa86e2f29a7952b2c64dd17", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i<t; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        float a[n];\r\n        float sum = 0;\r\n        for(int j = 0; j<n; j++)\r\n        {\r\n            scanf(\"%f\", &a[j]);\r\n            sum += a[j];\r\n        }\r\n        int count1 = 0, count2 = 0, d = n;\r\n        float avg = (float)sum/n;\r\n        while(1)\r\n        {\r\n            for(int j = 0; j<n; j++)\r\n            {\r\n                if(a[j]>avg)\r\n                {\r\n                    count2++;\r\n                    sum -= a[j];\r\n                    a[j] = 0;\r\n                    d--;\r\n                }\r\n            }\r\n            count2 += count1;\r\n            if(count1 == 0)\r\n                break;\r\n            else\r\n            {\r\n                avg = sum/d;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", count2);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i<t; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int a[n];\r\n        for(int j = 0; j<n; j++)\r\n            scanf(\"%d\", &a[j]);\r\n        int j = 0, k = 0, min = 0;\r\n        for(j = 0; j<n-1; j++)\r\n        {\r\n            min = j;\r\n            for(k = j+1; k<n; k++)\r\n                if(a[min]>a[k])\r\n                    min = k;\r\n            int temp = a[j];\r\n            a[j] = a[min];\r\n            a[min] = temp;\r\n        }\r\n        int count = 0;\r\n        for(j = 1; j<n; j++)\r\n        {\r\n            if(a[j]>a[0])\r\n                count++;\r\n        }\r\n        printf(\"%d\\n\", count);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.3686158401184308, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "11740cc526861c6c7905bb968e191240", "bug_code_uid": "1cd5a6e0147fcb3fce381d671c220aa9", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "d75a7d249713c8c2f98e6801ec9e5703", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\n\n\nint main()\n{\n\tint i,j,k,n;\n\t     int t;\n\tint time[100005];\n\tscanf(\"%d%d\",&n,&t);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&time[i]);\n\t\t\n\tint temp;\n\tint count=0,flag=0;\n\tint max=-1;\n\tint copy = t;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tk=i;\n\t\tcopy = t;\n\t\twhile(copy>=time[k])\n\t\t{\n\t\t\tcopy=copy-time[k];\n\t\t\tk++;\n\t\t\tcount++;\n\t\t\tif(k==n)\n\t\t\t{\n\t\t\t\tflag++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(max<count)\n\t\t\tmax=count;\n\t\tcount=0;\n\t\tif(flag>0)\n\t\t\tbreak;\n\t}\n\n\n\tprintf(\"%d\\n\",max);\n\n\treturn 0;\n}\n", "fixed": "\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint cumulative [100005];\nint main()\n{\n\tint i,j,k,n;\n\t     int t;\n\tint time[100005];\n\tscanf(\"%d%d\",&n,&t);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&time[i]);\n\t\t\n\tint count=0,flag=0;\n\tint max=-1;\n\tint copy = t;\n\tcumulative[0]=0;\n\tcumulative[1]=time[0];\n\tint ans=0;\n\tint *point1, *point2;\n\tpoint1 = &cumulative[0];\n\tpoint2 = &cumulative[1];\n\tint index1=0,index2=1;\n\tfor(i=2;i<=n;i++)\n\t\tcumulative[i]=time[i-1]+cumulative[i-1];\n//\tfor(i=0;i<=n;i++)\n//\t\tprintf(\"%d \",cumulative[i]);\n//\tprintf(\"\\n\");\n\t\n\twhile(1)\n\t{\n\t\tif(*point2-*point1 <=t)\n\t\t{\n\t\t\tcount = index2-index1;\n\t\t\tpoint2++;\n\t\t\tindex2++;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\tif(max<count)\n\t\t\t\tmax = count;\n\t\t\tpoint1++;\n\t\t\tindex1++;\n\t\t\tcount = index2-index1;\n\t\t}\n\n\t\tif(index2 == n+1)\n\t\t\tbreak;\n\t}\n\tif(max<count)\n\t\tmax = count;\n\n\n\tprintf(\"%d\\n\",max);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9888734353268428, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d29e1bc8cf15b1d4ab454bd3b9f3a702", "bug_code_uid": "9a6c1d9e9d76b391d11dfbded0b9aeb5", "src_uid": "d786585fee251ebfd5c3e8d8b0425791", "apr_id": "f017628845237e0fa89bf31d96264e85", "difficulty": 900, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nlong int pow1(int n){\r\n    long int x=1;\r\n    for(int i=0;i<n;++i){\r\n        x=x*2;\r\n    }\r\n    return x;\r\n}\r\n    \r\n    \r\n    \r\n\r\nint main()\r\n{\r\n    int t,n,i,k,x;\r\n    long int y;\r\n    scanf(\"%d\",&t);\r\n    while(t!=0){\r\n        --t;\r\n        k=0;\r\n        y=0;\r\n        x=0;\r\n        scanf(\"%d\",&n);\r\n        long long int a[n];\r\n        for(i=0;i<n;++i){\r\n            scanf(\"%lld\",&a[i]);\r\n            if(a[i]==1){\r\n                ++k;\r\n            }\r\n            if(a[i]==0){\r\n                ++x;\r\n            }\r\n        }\r\n        if(x==n||k==0){\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n        y=pow1(x);\r\n        printf(\"%ld\\n\",y*k);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nlong long int pow1(int n){\r\n    long long int x=1;\r\n    for(int i=0;i<n;++i){\r\n        x=x*2;\r\n    }\r\n    return x;\r\n}\r\n    \r\n    \r\n    \r\n\r\nint main()\r\n{\r\n    int t,n,i,k,x;\r\n    long long int y;\r\n    scanf(\"%d\",&t);\r\n    while(t!=0){\r\n        --t;\r\n        k=0;\r\n        y=0;\r\n        x=0;\r\n        scanf(\"%d\",&n);\r\n        long long int a[n];\r\n        for(i=0;i<n;++i){\r\n            scanf(\"%lld\",&a[i]);\r\n            if(a[i]==1){\r\n                ++k;\r\n            }\r\n            if(a[i]==0){\r\n                ++x;\r\n            }\r\n        }\r\n        if(x==n||k==0){\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n        y=pow1(x);\r\n        printf(\"%lld\\n\",y*k);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.2852512155591572, "equal_cnt": 25, "replace_cnt": 14, "delete_cnt": 7, "insert_cnt": 4, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "5dd7150cc37e035a054ec1c38d126a68", "bug_code_uid": "30256707a0d27f422c5e39776cad9074", "src_uid": "2c51414eeb430ad06aac53a99ff95eff", "apr_id": "81bfe592daf9e01908438d52a738c812", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdbool.h>\nint main(void) {\n    int n,a[200000];\n    long long sum=0,min,max,target;\n    scanf(\"%d%lld\",&n,&target);\n    int i;\n    for(i=0;i<n;i++)\n    {   scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    //given:target<=sum,target>min\n    if(n==1)\n        printf(\"%d\",a[0]-1);\n    else\n    {\n        for(i=0;i<n;i++)\n        {\n            min=n-1;\n            max=sum-a[i];\n            if(target<(min+a[i]))\n            {\n                printf(\"%lld \",min+a[i]-target);\n            }\n            else if(target<=max+1)//understood that target>=(min+a[i])\n            {\n                printf(\"0 \");//all values possible      \n            }\n            else//\n            {\n                printf(\"%lld \",target-max-1);\n            }\n        }   \n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdbool.h>\n//just watched the fcbfcb game!!EnerGizeD :p\n//messsii messssii messsiii <3\nint main(void) {\n    //freopen(\"in.txt\",\"r\",stdin);freopen(\"out.txt\",\"w\",stdout);   \n    //int t; scanf(\"%d\",&t);\n    //while(t--)\n    {\n        int i,n;long long a[200000];//hmm not needed\n        long long target,x,y,min,max,sum=0;\n        scanf(\"%d%lld\",&n,&target);\n        for(i=0;i<n;i++){scanf(\"%lld\",&a[i]);sum+=a[i];}\n        for(i=0;i<n;i++)\n        {\n            min=n-1;max=sum-a[i];\n            x=target-max;\n            y=target-min;\n            if(x<=0)\n            {   x=a[i]-y;\n                if(x<0)\n                    printf(\"0 \");\n                else \n                    printf(\"%lld \",x);\n            }\n            else if(a[i]<y)\n            {\n                printf(\"%lld \",x-1);\n            }\n            else\n                printf(\"%lld \",a[i]-(y-x+1));\n        }\n        //puts(\"\");\n    }//while for test cases\n    return 0;\n}"}
{"similarity_score": 0.08455034588777863, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e7e4a886b122e081bdcc9ed3ea17b4e7", "bug_code_uid": "870a7db7a75efad85b23db0ca7393c0c", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "6f82b0fa5a8c572e76b40eba6e8c721a", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint minnum=999999;\n\nstruct node\n{\n    int steps;\n} que[32769];\nint book[32769];\nint flag;\n\nint bfs(int n)\n{\n    //n=(n+1)%32768;\n    //n=(n*2)%32768;\n\n    int mintimes;\n\n    int head=1;\n    int tail=1;\n\n    que[head].steps=0;\n    que[tail].steps=0;\n    tail++;\n    book[n]=1;\n\n    while(head<tail)\n    {\n        if(n%32768==0)\n        {\n            mintimes=min(minnum,que[tail-1].steps);\n        }\n\n        for(int i=0; i<2; i++)\n        {\n            if(i==0) n=(n+1)%32768;\n\n            if(i==1) n=(n*2)%32768;\n\n            if(book[n]==0)\n            {\n                que[tail].steps=que[head].steps+1;\n                book[n]=1;\n                tail++;\n            }\n        }\n        head++;\n    }\n\n    return mintimes;\n\n}\nint main()\n{\n    int t,n;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n\n        memset(book,0,sizeof(book));\n\n        printf(\"%d \",bfs(n));\n    }\n\n    return 0;\n}\n\n \t  \t \t\t\t    \t\t \t  \t\t\t\t  \t  \t \t", "fixed": "#include<stdio.h>\n#include<math.h> \nint main()\n{\n\tint w,n,m=0,sum=0;\n\tscanf(\"%d\",&w);\n\twhile(w--)\n\t{\n\t\tm=0;\n\t\tscanf(\"%d\",&n);\n\t\t while(n!=0)\n\t\t {\n\t\t \tn=n/2;\n\t\t \tm++;\n\t\t }\n\t\t sum=pow(2,m-1);\n\t\t sum--;\n\t\t printf(\"%d\\n\",sum);\n\t}\n}\n\t \t\t\t\t \t   \t  \t\t \t\t\t\t\t\t\t    \t\t"}
{"similarity_score": 0.9980988593155894, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7d274083c7d6cb8d0c8312902c5ab413", "bug_code_uid": "024b2e2737dde9222e7d48707e6f11c9", "src_uid": "b9771f941967b030aa13d0bfcc4d0a61", "apr_id": "aa13da47b42fbfccd2a2e9c5c665a582", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#define N 200000\r\n#define ll long long\r\n\r\nll n,q,x=-1,tc,t,ii;\r\nll ans;\r\nll a[N],v[N],toc[N];\r\n\r\nint main() {\r\n\tscanf(\"%lld%lld\",&n,&q); tc=n;\r\n\tfor(ll i=0;i<n;i++) {\r\n\t\tscanf(\"%lld\",a+i); v[i]=1; ans+=a[i]; toc[i]=i;\r\n\t}\r\n\twhile(q--) {\r\n\t\tscanf(\"%lld\",&t);\r\n\t\tif(t-1) {\r\n\t\t\tscanf(\"%lld\",&x); ans=n*x;\r\n\t\t\tfor(ll i=0;i<tc;i++)\r\n\t\t\t\tv[toc[i]]=0;\r\n\t\t\ttc=0;\r\n\t\t} else {\r\n\t\t\tscanf(\"%lld%lld\",&ii,&t); ii--;\r\n\t\t\tans-=v[ii]?a[ii]:x;\r\n\t\t\tans+=t; a[ii]=t; v[ii]=1; toc[tc++]=ii;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",ans);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n#define N 300000\r\n#define ll long long\r\n\r\nll n,q,x=-1,tc,t,ii;\r\nll ans;\r\nll a[N],v[N],toc[N];\r\n\r\nint main() {\r\n\tscanf(\"%lld%lld\",&n,&q); tc=n;\r\n\tfor(ll i=0;i<n;i++) {\r\n\t\tscanf(\"%lld\",a+i); v[i]=1; ans+=a[i]; toc[i]=i;\r\n\t}\r\n\twhile(q--) {\r\n\t\tscanf(\"%lld\",&t);\r\n\t\tif(t-1) {\r\n\t\t\tscanf(\"%lld\",&x); ans=n*x;\r\n\t\t\tfor(ll i=0;i<tc;i++)\r\n\t\t\t\tv[toc[i]]=0;\r\n\t\t\ttc=0;\r\n\t\t} else {\r\n\t\t\tscanf(\"%lld%lld\",&ii,&t); ii--;\r\n\t\t\tans-=v[ii]?a[ii]:x;\r\n\t\t\tans+=t; a[ii]=t; v[ii]=1; toc[tc++]=ii;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",ans);\r\n\t}\r\n}"}
{"similarity_score": 0.6909814323607427, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a45f809dcf19eb5c7e3fea58fec9ce62", "bug_code_uid": "ad898c469206ba12c04b25ddb36ca988", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "3ad68703d774b2f7eae9fce98bf8af26", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define SIZE 100004\ntypedef long long int ll;\nint main(void)\n{\n    char s[SIZE];\n    int i,l,x,y;\n    x=y=-1;\n    scanf(\"%s\",s);\n    l = strlen(s);\n    for(i=0;i<l-1;i++)\n    {\n        if(s[i]=='A' && s[i+1]=='B')\n        {\n            x = i;\n            break;\n        }\n    }\n    for(i=l-1;i>0;i--)\n    {\n        if(s[i]=='A' && s[i-1]=='B')\n        {\n            y = i;\n            break;\n        }\n    }\n    if(x!=-1 && y!=-1 && abs(x-y)>2)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#define SIZE 100004\ntypedef long long int ll;\nint main(void)\n{\n    char s[SIZE];\n    int i,l,x1,y1,x2,y2;\n    x1=y1=x2=y2=-1;\n    scanf(\"%s\",s);\n    l = strlen(s);\n    for(i=0;i<l-1;i++)\n    {\n        if(s[i]=='A' && s[i+1]=='B')\n        {\n            x1 = i;\n            break;\n        }\n    }\n    for(i=l-1;i>0;i--)\n    {\n        if(s[i]=='A' && s[i-1]=='B')\n        {\n            y1 = i;\n            break;\n        }\n    }\n    if(x1!=-1 && y1!=-1 && abs(x1-y1)>2)\n        printf(\"YES\");\n    else{\n        for(i=0;i<l-1;i++)\n        {\n            if(s[i]=='B' && s[i+1]=='A')\n            {\n                x2 = i;\n                break;\n            }\n        }\n        for(i=l-1;i>0;i--)\n        {\n            if(s[i]=='B' && s[i-1]=='A')\n            {\n                y2 = i;\n                break;\n            }\n        }\n        if(x2!=-1 && y2!=-1 && abs(x2-y2)>2)\n            printf(\"YES\");\n        else\n            printf(\"NO\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.7384615384615385, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "993fa1828b1e550673c2e5fc25f42ffb", "bug_code_uid": "eb887411ddfc3e5bcf57cabe677b6b06", "src_uid": "3a93a6f78b41cbb43c616f20beee288d", "apr_id": "c954e200c03b6e44a2373b91af68b3f1", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint N,K,a,b,Sum=0;\n\tscanf(\"%d %d\",&N,&K);\n\twhile(N--)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tSum+=b-a+1;\n\t}\n\tprintf(\"%d\\n\",K-Sum%K);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint N,K,a,b,Sum=0;\n\tscanf(\"%d %d\",&N,&K);\n\twhile(N--)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tSum+=b-a+1;\n\t}\n\tif(Sum%K==0)\n\t{\n\t\tprintf(\"0\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",K-Sum%K);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9355847404627893, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c54a87bbb8cf71c72dd0c5e8d87e9e1f", "bug_code_uid": "062d36289fd696ae663af0768f3c9684", "src_uid": "322792a11d3eb1df6b54e8f89c9a0490", "apr_id": "aba85ad1c4147dd54b45aff77cc47d6f", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nint cmp(const void* a,const void* b)\r\n{\r\n    return (*(int*)a-*(int*)b);\r\n}\r\nvoid output(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        printf(\"%d \",ar[i]);\r\n    printf(\"\\n\");\r\n}\r\nvoid input(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&ar[i]);\r\n}\r\nint smallcheck(int a,int b,int c)\r\n{\r\n    if(a<=b && a<=c)\r\n        return a;\r\n    else if(b<=a && b<=c)\r\n        return b;\r\n    return c;\r\n}\r\nint small(int a,int b)\r\n{\r\n    if(a<b)\r\n        return a;\r\n    return b;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        printf(\"%d\\n\",n);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nint cmp(const void* a,const void* b)\r\n{\r\n    return (*(int*)a-*(int*)b);\r\n}\r\nvoid output(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        printf(\"%d \",ar[i]);\r\n    printf(\"\\n\");\r\n}\r\nvoid input(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&ar[i]);\r\n}\r\nint smallcheck(int a,int b,int c)\r\n{\r\n    if(a<=b && a<=c)\r\n        return a;\r\n    else if(b<=a && b<=c)\r\n        return b;\r\n    return c;\r\n}\r\nint small(int a,int b)\r\n{\r\n    if(a<b)\r\n        return a;\r\n    return b;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a=floor(sqrt(n));\r\n        if(a*a<n)\r\n            printf(\"%d\\n\",a+1);\r\n        else\r\n            printf(\"%d\\n\",a);\r\n    }\r\n}"}
{"similarity_score": 0.9736540664375716, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d04427d16644d25403476b3ce3499a25", "bug_code_uid": "db416d02d97471346a29c71775e982d8", "src_uid": "bcd9439fbf6aedf6882612d5f7d6220f", "apr_id": "ac4a0bf48b054839f215198a6a262f77", "difficulty": 1000, "tags": ["constructive algorithms", "binary search", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n\nlong long int compare(void *pa, void *pb)\n{\n    long long int *p1=pa;\n    long long int *p2=pb;\n    return *p1-*p2;\n}\n\nint main()\n{\n    long long int N,M,i,j,k,a,b,c,d,x,y,z,t,s;\n\n    scanf(\"%lld\", &N);\n    long long int A[100000],B[100000];\n\n    for(i=0; i<N; i++)\n    {\n        scanf(\"%lld\", &A[i]);\n        B[i]=0;\n    }\n\n    qsort(A,N,sizeof(long long int),compare);\n\n    x=0;\n    z=0;\n    for(i=0; i<N; i++)\n    {\n        k=i+1;\n        if(k%2==0)\n        {\n            B[i]=A[x];\n            x++;\n            z++;\n        }\n    }\n\n    for(i=0; i<N; i++)\n    {\n        k=i+1;\n        if(k%2!=0)\n        {\n            B[i]=A[x];\n            x++;\n        }\n    }\n\n    printf(\"%lld\\n\", z);\n    for(i=0; i<N; i++)\n    {\n        printf(\"%lld \", B[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n\nlong long int compare(void *pa, void *pb)\n{\n    long long int *p1=pa;\n    long long int *p2=pb;\n    return *p1-*p2;\n}\n\nint main()\n{\n    long long int N,M,i,j,k,a,b,c,d,x,y,z,t,s;\n\n    scanf(\"%lld\", &N);\n    long long int A[100000],B[100000];\n\n    for(i=0; i<N; i++)\n    {\n        scanf(\"%lld\", &A[i]);\n        B[i]=0;\n    }\n\n    qsort(A,N,sizeof(long long int),compare);\n\n    x=0;\n    z=0;\n    for(i=0; i<N; i++)\n    {\n        k=i+1;\n        if(k%2==0)\n        {\n            B[i]=A[x];\n            x++;\n            z++;\n        }\n    }\n\n    for(i=0; i<N; i++)\n    {\n        k=i+1;\n        if(k%2!=0)\n        {\n            B[i]=A[x];\n            x++;\n        }\n    }\n    \n    if(N%2==0)\n    {\n        z=z-1;\n    }\n    printf(\"%lld\\n\", z);\n    for(i=0; i<N; i++)\n    {\n        printf(\"%lld \", B[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n\n}\n\n"}
{"similarity_score": 0.9915254237288136, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "85454c1936ebecbb2645fcad3f0294b2", "bug_code_uid": "15a34668450d3ca2abc947685a2332bf", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "aecb44c206d8c0d28bc4ff8a3676770e", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n, m, i,copy;\n    double l, k;\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &arr[i]);\n        copy=arr[i];\n        l=(double)copy;\n        l=sqrt(l);\n        m=l;\n        k=(double)m;\n        if(l-k==0.0) arr[i]=0;\n\n    }\n\n    for(i=0;i<n;i++)\n    {\n        //printf(\"%d \", arr[i]);\n        if(arr[i]>arr[0]) arr[0]=arr[i];\n    }\n    printf(\"%d\", arr[0]);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n, m, i,copy;\n    double l, k;\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &arr[i]);\n        copy=arr[i];\n        l=(double)copy;\n        l=sqrt(l);\n        m=l;\n        k=(double)m;\n        if(l-k==0.0) arr[i]=-10000000;\n\n    }\n\n    for(i=0;i<n;i++)\n    {\n        //printf(\"%d \", arr[i]);\n        if(arr[i]>arr[0]) arr[0]=arr[i];\n    }\n    printf(\"%d\", arr[0]);\n    return 0;\n\n}\n"}
{"similarity_score": 0.33800494641385, "equal_cnt": 20, "replace_cnt": 9, "delete_cnt": 10, "insert_cnt": 1, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "fb5d21e771e9314333e8688728f135a2", "bug_code_uid": "1e50d68034465ac6760a653e1e9cbd00", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "15300743c231d539dbbb031c8c2508b1", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/*\n * input size of both arrays, their elements, as well as k and m\n * check if the elements of a are smaller than each element of b\n * if so, count the number of the above cases\n * if this count is equal or greater than k, then count the number of such cases\n * if this number is equal or greater than m, print yes, else no\n */\n\n#include <stdio.h>\n\nint main()\n{\n\tint n1, n2, i, j;\n\tint k, m, k_count = 0, m_count = 0;\n\t\n\tscanf(\"%d %d\", &n1, &n2);\n\tscanf(\"%d %d\", &k, &m);\n\t\n\tint a[n1], b[n2];\n\t\n\tfor (i = 0; i < n1; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\n\tfor (i = 0; i < n2; i++)\n\t{\n\t\tscanf(\"%d\", &b[i]);\n\t}\n\t\n\t  \n\t \n\tfor (i = 0; i < n2; i++)\n\t{\n\t\tk_count = 0;\n\t\t \n\t\tfor (j = 0; j < n1; j++)\n\t\t{\n\t\t\tif (a[j] < b[i]) \n\t\t\t{\n\t\t\t\tk_count++;\n\t\t\t}\n\t\t}\n\t\t \n\t\tif (k_count >= k)\n\t\t{\n\t\t\tm_count++;\n\t\t}\n\t}\n\t \n\tif (m_count >= m)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\t \n\telse\n\t{\n\t\tprintf(\"NO\\n\");\n\t}\n\t \n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n1, n2, k, m, i;\n\n\tscanf(\"%d %d\",&n1, &n2);\n\tscanf(\"%d %d\",&k, &m);\n\n\tint a[n1], b[n2];\n\n\tfor(i=0; i<n1; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\t\n\n\tfor(i=0; i<n2; i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t}\t\n\n\tif (a[k-1] < b[n2-m])\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\t\n\telse\n\t{\n\t\tprintf(\"NO\\n\");\n\t}\t\n\n    return 0;\n}\n"}
{"similarity_score": 0.9981515711645101, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5b85e0f55f46023b59487d5f1b17e278", "bug_code_uid": "b2ef3225512497205b840193e22065ef", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "bd1c82fb23f56b4d69306130f3e8e6ac", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nchar A[101],x;  int t,n,i;\nint main(){\n\tscanf(\"%d %s \",&n,A);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%c\",&x);\n\t\tif(abs(A[i] - x) < 10 - abs(A[i] - x))\n\t\t\tt += abs(A[i] - x);\n\t\telse\n\t\t\tt += 10 - abs(x - A[i]);\n\t}\n\tprintf(\"\\n%d\",t);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nchar A[1001],x;  int t,n,i;\nint main(){\n\tscanf(\"%d %s \",&n,A);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%c\",&x);\n\t\tif(abs(A[i] - x) < 10 - abs(A[i] - x))\n\t\t\tt += abs(A[i] - x);\n\t\telse\n\t\t\tt += 10 - abs(x - A[i]);\n\t}\n\tprintf(\"\\n%d\",t);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7298136645962733, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b700da03bf0d42e623d67ebb3d3fa945", "bug_code_uid": "9dd959414f1438cccc2371a144bcaf30", "src_uid": "b46244f39e30c0cfab592a97105c60f4", "apr_id": "e18ed2e1da18b27603cfa4cd457f1f3c", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint gcd(int a, int b) \n{ \n    if (b == 0) \n        return a; \n    return gcd(b, a % b);  \n} \n\nint getMaxGCD(int n)\n{\n    int i,j,temp_gcd=0,c_gcd;\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            c_gcd=gcd(i,j);\n            if(temp_gcd<c_gcd && (i%c_gcd==0) && (j%c_gcd==0) && i<j)\n            {\n                temp_gcd=c_gcd;\n            }\n        }\n    }\n    return temp_gcd;\n}\nint main()\n{\n    int tests,t,Array[100000],Result[100000],i,j,temp;\n    scanf(\"%d\",&tests);\n    for(t=0;t<tests;t++)\n    {\n        scanf(\"%d\",&Array[t]);\n        Result[t]=getMaxGCD(Array[t]);\n    }\n    for(t=0;t<tests;t++)\n    {\n        printf(\"%d\\n\",Result[t]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint gcd(int a, int b) \n{ \n    if (b == 0) \n        return a; \n    return gcd(b, a % b);  \n} \n\nint getMaxGCD(int n)\n{\n    int i,j,temp_gcd=1,c_gcd;\n    for(i=n;i>0;i--)\n    {\n        if(i==((i/2)*2))\n        {\n            return (i/2);\n        }\n    }\n    return temp_gcd;\n}\nint main()\n{\n    int tests,t,Array[10000],Result[10000],i,j,temp;\n    scanf(\"%d\",&tests);\n    for(t=0;t<tests;t++)\n    {\n        scanf(\"%d\",&Array[t]);\n        Result[t]=getMaxGCD(Array[t]);\n    }\n    for(t=0;t<tests;t++)\n    {\n        printf(\"%d\\n\",Result[t]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9920948616600791, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f7f7c39f5929f587d854893a55485573", "bug_code_uid": "1a45f280f2ba5e7e3fd3d5b12a12c6f1", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "53c8d0766e6d4a550af1c13802232445", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint b[17][100000];\nint main()\n{\n    int a[100000],n,i,j,ans,ans1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n        b[i][0]=i;\n    for(j=1;(1<<j)<=n;j++)\n        for(i=0;i+(1<<j)-1<n;i++)\n        {\n            if(a[b[i][j-1]]<a[b[i+(1<<(j-1))][j-1]])\n                b[i][j]=b[i+(1<<(j-1))][j-1];\n            else\n                b[i][j]=b[i][j-1];\n        }\n    for(i=0;i<n-1;i++)\n    {\n        j=log2(n-i);\n        if(a[b[i][j]]<a[b[n-(1<<j)][j]])\n            ans=a[b[n-(1<<j)][j]];\n        else\n            ans=a[b[i][j]];\n        if(ans!=a[i])\n            printf(\"%d \",ans-a[i]+1);\n        else\n        {\n            j=log2(n-i-1);\n            if(a[b[i+1][j]]<a[b[n-(1<<j)][j]])\n                ans1=a[b[n-(1<<j)][j]];\n            else\n                ans1=a[b[i+1][j]];\n            if(ans1==a[i])\n                printf(\"1 \");\n            else\n                printf(\"0 \");\n        }\n    }\n    printf(\"0\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint b[100000][17];\nint main()\n{\n    int a[100000],n,i,j,ans,ans1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n        b[i][0]=i;\n    for(j=1;(1<<j)<=n;j++)\n        for(i=0;i+(1<<j)-1<n;i++)\n        {\n            if(a[b[i][j-1]]<a[b[i+(1<<(j-1))][j-1]])\n                b[i][j]=b[i+(1<<(j-1))][j-1];\n            else\n                b[i][j]=b[i][j-1];\n        }\n    for(i=0;i<n-1;i++)\n    {\n        j=log2(n-i);\n        if(a[b[i][j]]<a[b[n-(1<<j)][j]])\n            ans=a[b[n-(1<<j)][j]];\n        else\n            ans=a[b[i][j]];\n        if(ans!=a[i])\n            printf(\"%d \",ans-a[i]+1);\n        else\n        {\n            j=log2(n-i-1);\n            if(a[b[i+1][j]]<a[b[n-(1<<j)][j]])\n                ans1=a[b[n-(1<<j)][j]];\n            else\n                ans1=a[b[i+1][j]];\n            if(ans1==a[i])\n                printf(\"1 \");\n            else\n                printf(\"0 \");\n        }\n    }\n    printf(\"0\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9459649122807018, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "21cae9d0c0c4ebafe3dc0aede25b0ca2", "bug_code_uid": "35647eba84407b8458458ff5e0fd78b6", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "939240c98b3c3fca4133a041f4e30189", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar s[15];\nint main()\n{\n    char a[15]=\"Timur\";\n    int t;\n    scanf(\"%d\",&t);\n    getchar();\n    while(t--)\n    {\n        int n,m=0;\n        scanf(\"%d\",&n);\n        getchar();\n        scanf(\"%s\",s);\n        getchar();\n        if(n==5)\n        {\n            for(int i=0;i<5;i++)\n            {\n                for(int j=0;j<5;j++)\n                {\n                    if(a[i]==s[j])\n                    {\n                        m++;\n                        break;\n                }\n            }\n            if(m==5)printf(\"YES\");\n            else printf(\"NO\");\n        }\n        else printf(\"NO\");\n        if(t!=0)printf(\"\\n\");\n    }\n    return 0;\n}\n\n    \t\t \t\t\t\t \t  \t\t   \t \t\t    \t", "fixed": "#include<stdio.h>\nchar s[15];\nint main()\n{\n    char a[15]=\"Timur\";\n    int t;\n    scanf(\"%d\",&t);\n    getchar();\n    while(t--)\n    {\n        int n,m=0;\n        scanf(\"%d\",&n);\n        getchar();\n        scanf(\"%s\",s);\n        getchar();\n        if(n==5)\n        {\n            for(int i=0;i<5;i++)\n            {\n                for(int j=0;j<5;j++)\n                {\n                    if(a[i]==s[j])\n                    {\n                        m++;\n                        break;\n                    }\n                }\n            }\n            if(m==5)printf(\"YES\");\n            else printf(\"NO\");\n        }\n        else printf(\"NO\");\n        if(t!=0)printf(\"\\n\");\n    }\n    return 0;\n}\n\n  \t\t  \t\t \t\t\t    \t\t\t \t\t  \t\t\t \t\t"}
{"similarity_score": 0.9827411167512691, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "23b3bc29e9eee60ce6d3b449ddfff649", "bug_code_uid": "fec7055b4d36ba96e27443fe7fb990ce", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "9de3d4fdc43afea46ecfbf52d7b7363e", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,m,i,x=0,y=0,a[1001];\n    scanf(\"%d%d\",&n,&m);\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<=0)\n            x=x+abs(a[i]);\n        else\n            y=y+a[i];\n    }\n    if(abs(x-y)==0)\n        printf(\"0\\n\");\n    else if(abs(x-y)<=m)\n        printf(\"1\\n\");\n    else if(abs(x-y)==m*n)\n        printf(\"%d\",abs(x-y)/m);\n    else\n        printf(\"%d\\n\",((abs(x-y))/m)+1);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,m,i,x=0,y=0,a[1001];\n    scanf(\"%d%d\",&n,&m);\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<=0)\n            x=x+abs(a[i]);\n        else\n            y=y+a[i];\n    }\n    if(abs(x-y)==0)\n        printf(\"0\\n\");\n    else if(abs(x-y)<=m)\n        printf(\"1\\n\");\n    else if(abs(x-y)==m*n || abs(x-y)%m==0)\n        printf(\"%d\",abs(x-y)/m);\n    else\n        printf(\"%d\\n\",((abs(x-y))/m)+1);\n    return 0;\n}"}
{"similarity_score": 0.8399412628487518, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "d4f041cea07d383ca0a095e1b5d3f1b8", "bug_code_uid": "64a29e20afffa00ca778145bb5d2965f", "src_uid": "a99f5e08f3f560488ff979a3e9746e7f", "apr_id": "186808cb4a5a0b5b55c78e01dae2d9b1", "difficulty": 1200, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main(){\n    long n;\n    scanf(\"%ld\", &n);\n    if (n == 1) printf(\"1\\n1\\n\");\n    else if (n == 2) printf(\"1\\n1 1\\n\");\n    else {\n        printf(\"2\\n1\");\n        for (long i = 3; i <= n + 1; i++){\n            long sqrtN = sqrt(i);\n            int isPrime = (i % 2);\n            if (isPrime){\n                for (long j = 3; j <= sqrtN; j += 2){\n                    if (n % j == 0){\n                        isPrime = 0;\n                        break;\n                    }\n                }\n            }\n            printf((isPrime) ? \" 1\" : \" 2\");\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main(){\n    long n;\n    scanf(\"%ld\", &n);\n    if (n == 1) printf(\"1\\n1\\n\");\n    else if (n == 2) printf(\"1\\n1 1\\n\");\n    else {\n        printf(\"2\\n1\");\n        for (long i = 3; i <= n + 1; i++){\n            int isPrime = (i % 2);\n            if (isPrime){\n                long sqrtN = sqrt(i);\n                for (long j = 3; j <= sqrtN; j += 2){\n                    if (i % j == 0){\n                        isPrime = 0;\n                        break;\n                    }\n                }\n            }\n            printf((isPrime) ? \" 1\" : \" 2\");\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}"}
{"similarity_score": 0.909710391822828, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "08853083165e5c19435ea16bd64683d9", "bug_code_uid": "3d0cf73b870f46acad75c98ad11e9a5d", "src_uid": "e21e768dbb2e5f72873dc1c7de4879fd", "apr_id": "7d1410e5ec45972533a30a5279af4add", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,a,b,x,c=0,ans=0,i;\n    scanf(\"%d%d%d\",&n,&a,&b);\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        if(x==1)\n        {\n            if(a>=1)\n                a--;\n            else if(a==0&&c>=1)\n                c--;\n            else if(a==0&&b>=1)\n            {\n                b--;\n                c++;\n            }\n            else\n                ans++;\n\n        }\n        else\n        {\n            if(b>=1)\n                b--;\n            else\n                ans=ans+2;\n        }\n\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long int n,a,b,x,c=0,ans=0,i;\n    scanf(\"%d%d%d\",&n,&a,&b);\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        if(x==1)\n        {\n            if(a>=1)\n                a--;\n            else if(a==0&&b>=1)\n            {\n                b--;\n                c++;\n            }\n            else if(a==0&&c>=1)\n                c--;\n            else\n                ans++;\n\n        }\n        else\n        {\n            if(b>=1)\n                b--;\n            else\n                ans=ans+2;\n        }\n\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.727710843373494, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "2f6c491ea5b69302fd17fbfe126c39f7", "bug_code_uid": "7749be0e37c775701437bccf2bf457fd", "src_uid": "2070955288b2e2cdbae728d8e7ce78ab", "apr_id": "7d77c70931c2eccfa95ea53dbb4f3082", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 100000\nint main(){\n\tint n,m,i,j;\n\tint a[N];\n\tint p[N]={0};\n\tint ans[N]={0};\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<m;i++)scanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++){\n\t\tp[a[i]-1]++;\n\t\tfor(j=0;j<n;j++)if(!p[j])break;\n\t\tif(j==n){\n\t\t\tfor(j=0;j<n;j++)p[j]--;\n\t\t\tans[i]=1;\n\t\t}\n\t\t//for(j=0;j<n;j++)printf(\"%d\",p[j]);\n\t\t//printf(\"\\n\");\n\t}\n\tfor(i=0;i<m;i++)printf(\"%d\",ans[i]);\n}", "fixed": "#include<stdio.h>\n#define N 100000\nint main(){\n\tint n,m,i,j;\n\tint a[N];\n\tint p[N]={0};\n\tint ans[N]={0};\n\tint enable=0;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<m;i++)scanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++){\n\t\tif(!p[a[i]-1])enable++;\n\t\tp[a[i]-1]++;\n\t\tif(enable<n)continue;\n\t\tfor(j=0;j<n;j++)if(!p[j])break;\n\t\tif(j==n){\n\t\t\tfor(j=0;j<n;j++)p[j]--;\n\t\t\tenable=0;\n\t\t\tfor(j=0;j<n;j++)if(p[j])enable++;\n\t\t\tans[i]=1;\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)printf(\"%d\",ans[i]);\n}"}
{"similarity_score": 0.9938800489596084, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "59e661f09e14d275b3af25a6e7de46b3", "bug_code_uid": "afca0945dee30719c2c478b781222d11", "src_uid": "0f8ad0ea2befbbe036fbd5e5f6680c21", "apr_id": "cede94a83abf86acb78fa9fda59bb4c2", "difficulty": 1500, "tags": ["dp", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define sz 100000+1\ntypedef long long ll;\nll l[sz],d[sz],n,a,t,z,i;\nvoid mx(ll c){if(t>=c)return;t=c;if(t>z);z=t;}\nint main(){\n\tscanf(\"%lld\",&n);\n\twhile(n--){\n\t\tscanf(\"%lld\",&a);t=0;\n\t\tif(a==1){mx(l[n]=1);continue;}\n\t\tfor(i=2;i*i<=a;i++){\n\t\t\tif(a%i)continue;\n\t\t\tmx(l[d[i]]+1);d[i]=n;\n\t\t\twhile(a%i==0)a/=i;\n\t\t}\n\t\tif(a>1){mx(l[d[a]]+1);d[a]=n;}\n\t\tl[n]=t;\n\t}\n\tprintf(\"%lld\",z);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define sz 100000+1\ntypedef long long ll;\nll l[sz],d[sz],n,a,t,z,i;\nvoid mx(ll c){if(t>=c)return;t=c;if(t>z)z=t;}\nint main(){\n\tscanf(\"%lld\",&n);z=0;\n\twhile(n--){\n\t\tscanf(\"%lld\",&a);t=0;\n\t\tif(a==1){mx(l[n]=1);continue;}\n\t\tfor(i=2;i*i<=a;i++){\n\t\t\tif(a%i)continue;\n\t\t\tmx(l[d[i]]+1);d[i]=n;\n\t\t\twhile(a%i==0)a/=i;\n\t\t}\n\t\tif(a>1){mx(l[d[a]]+1);d[a]=n;}\n\t\tl[n]=t;\n\t}\n\tprintf(\"%lld\",z);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9583057577763071, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "1174cb2b00bd222743aee6c83b7831a4", "bug_code_uid": "110aade7f7a4b530c2124a66bea3c5de", "src_uid": "8f52241c690ec4f9af71a52904fb19a0", "apr_id": "bddcd18cacb2f4caf416d69efec98391", "difficulty": 1400, "tags": ["combinatorics"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct tab {\n    long a ;\n    int b ;\n} tab ;\nint main()\n{\n    int nb,i,j;\n    long  s,y,x ;\n    y=999999999+8 ;\n    s= 0 ;\n    nb = 0 ;\n    j=0 ;\n    tab* t;\n    t=(tab*)malloc((1000001)*sizeof(tab));\n    t[0].a=1 ;\n    for(i=1; i<1e6; i++) {\n        t[i].b=0;\n        t[i].a=((2*t[i-1].a)+1)%y ;\n    }\n    t[0].b=0;\n    char c ;\n    do {\n        c=getchar();\n        if(c=='a') {\n            nb++ ;\n        }\n        if(c=='b') {\n                if(nb!=0)\n                (t+nb-1)->b++ ;\n        }\n    } while(c!='\\n');\n    if (!nb) {\n        printf(\"%d\",0);\n        return 0 ;\n    }\n    for(i=1; i<nb+1; i++) {\n        s=(s + (t[i-1].a*t[i-1].b))%y;\n    }\n    printf(\"%ld\",s);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct tab {\n    long a ;\n    int b ;\n} tab ;\nint main()\n{\n    int nb,i,j;\n    long  s,y,x ;\n    y=999999999+8 ;\n    s= 0 ;\n    nb = 0 ;\n    j=0 ;\n    tab* t;\n    t=(tab*)malloc((1000001)*sizeof(tab));\n    t[0].a=1 ;\n    for(i=1; i<1e6+1; i++) {\n        t[i].b=0;\n        t[i].a=((2*t[i-1].a)+1)%y ;\n    }\n    t[0].b=0;\n    char c ;\n    do {\n        c=getchar();\n        if(c=='a') {\n            nb++ ;\n        }\n        if(c=='b') {\n            if(nb!=0)\n                (t+nb-1)->b++ ;\n        }\n    } while(c!='\\n');\n    if (!nb) {\n        printf(\"%d\",0);\n        return 0 ;\n    }\n    for(i=1; i<nb+1; i++) {\n        for(j=0; j<t[i-1].b; j++)\n            s=(s + (t[i-1].a))  %y;\n    }\n    printf(\"%ld\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.12598425196850394, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "a32f9b5488f6aaa1bbbdb55aa0b4c2e0", "bug_code_uid": "74e53ac244d3993fe960d372d2902fc7", "src_uid": "ef2b90d5b1073430795704a7df748ac3", "apr_id": "915da4bfb297218ed67f05d1d6c0f67a", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "implementation", "math", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n \nusing namespace std;\n \nconst int N=1010;\n \nint n,m;\nint f[N];\nint t;\nint g[N];\n \nint main()\n{\n\tint t;\n\tcin>>t;\n\tstring s[N];\n\twhile(t--)\n\t{\n\t\tcin>>n>>m;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tcin>>s[i];\n\t\t}\n\t\tint sum=10000000;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tfor(int j=i+1;j<n;j++)\n\t\t\t{\n\t\t\t\tint ans=0;\n\t\t\t\tfor(int k=0;k<m;k++)\n\t\t\t\t{ \n\t\t\t\t\tans+=abs(s[j][k]-s[i][k]);\n\t\t\t\t}\n\t\t\t\tsum=min(sum,ans);\n\t\t\t\n\t\t\t}\n\t\t}\n\t\tcout<<sum<<endl;\n\t}\n\treturn 0;\n } \n  \t\t \t\t\t    \t   \t\t\t\t      \t \t", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint ans(char *a,char *b)\n{\n\tint x=0;\n\tfor(int i=0;a[i];i++)\n\t{\n\t\tx+=fabs(a[i]-b[i]);\n\t}\n\treturn x;\n } \nint min(int q,int w)\n{\n\tif(q<w)\n\t{\n\t\treturn q;\n\t}else\n\t{\n\t\treturn w;\n\t}\n}\nint main(void)\n{\n\tint t,k=0,n,m,j=0;\n\tchar a[100][100];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(j=0;j<n;++j)\n\t\t{\n\t\t\tscanf(\"%s\",a[j]);\n\t\t}\n\t\t/*for(j=0;j<n;j++)\n\t\t{\n\t\t\tprintf(\"%s\",a[j]);\n\t\t}*/\n\t\tint max=1e9;\n\t\tfor(int i=0;i<n;++i)\n\t{\n\t\tfor(int j=i+1;j<n;++j)\n\t\t{\n\t\t\tmax=min(max,ans(a[i],a[j]));\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max); \n\t}\n\treturn 0;\n}\n\n\t  \t\t\t\t\t \t\t\t    \t  \t    \t\t\t\t"}
{"similarity_score": 0.9725315515961396, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "66ec8e41718cdee71600662936353d9e", "bug_code_uid": "b2f0832da3ca4e0ea4f87ac3b4024c37", "src_uid": "280487a73e6070a7dc7deb44332d6319", "apr_id": "0d9adbf2c91fc6d8bc7af9dee34942a1", "difficulty": 900, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n\tint T,n;\r\n\tchar a[101];\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--){\r\n\t\tchar sym1,sym2;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tscanf(\"%s\",a);\r\n\t\tint count=0;\r\n\t\tfor(int i=0;i<n;i++) if(a[i]!='?') {if(a[i]=='R'){sym1='R';sym2='B';}\r\nelse {sym1='B';sym2='R';}\r\n\t\t\tbreak;}\r\n\t\t\telse count++;\r\n\t\t\tint mark=0;\r\n\t\t\tif(count%2==0) mark=1;\r\n\t\t\tfor(int i=0;i<count;i++){\r\n\t\t\t\tif(mark==0){if(i%2==0) a[i]=sym2;else a[i]=sym1;}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(i%2==0) a[i]=sym1;else a[i]=sym2;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\tfor(int i=count;i<n;i++){\r\n\t\t\t\tif(a[i]=='?' && a[i-1]=='R')a[i]='B';\r\n\t\t\t\telse if(a[i]=='?' && a[i-1]=='B')a[i]='R';\r\n\t\t\t}\r\n\t\t\tprintf(\"%s\\n\",a);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n\tint T,n;\r\n\tchar a[101];\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--){\r\n\t\tchar sym1,sym2;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tscanf(\"%s\",a);\r\n\t\tint count=0;\r\n\t\tfor(int i=0;i<n;i++) if(a[i]!='?') {if(a[i]=='R'){sym1='R';sym2='B';}\r\nelse {sym1='B';sym2='R';}\r\n\t\t\tbreak;}\r\n\t\t\telse count++;\r\n\t\t\tint mark=0;\r\n\t\t\tif(count==n){sym1='R';sym2='B';}\r\n\t\t\tif(count%2==0) mark=1;\r\n\t\t\tfor(int i=0;i<count;i++){\r\n\t\t\t\tif(mark==0){if(i%2==0) a[i]=sym2;else a[i]=sym1;}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(i%2==0) a[i]=sym1;else a[i]=sym2;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\tfor(int i=count;i<n;i++){\r\n\t\t\t\tif(a[i]=='?' && a[i-1]=='R')a[i]='B';\r\n\t\t\t\telse if(a[i]=='?' && a[i-1]=='B')a[i]='R';\r\n\t\t\t}\r\n\t\t\tprintf(\"%s\\n\",a);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8862745098039215, "equal_cnt": 12, "replace_cnt": 2, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "04acfe203810b45680edb7e24752dadb", "bug_code_uid": "e86199dec503873928dcf8a49775fdb2", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "924abaa3c9146673515de41328775466", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n  using namespace std;\n\n  int main()\n  {\n        int n,t,i,ch=1;\n\n        scanf(\"%d %d\", &n,&t);\n\n        int a[n];\n\n        for ( i=1; i<=(n-1); i++) \n\t\tscanf(\"%d\",&a[i]);\n        for  ( i=1; i<(n-1); )\n        {\n            i=i+a[i];\n            if ( i==(t) )\n\t\t\t { \n\t\t\t printf(\"YES\");\n\t\t\t return 0;\n\t\t\t }\n        }\n\n        printf(\"NO\");\n\n        return 0;\n  }", "fixed": "#include<stdio.h>\n\n  int main()\n  {\n        int n,t,i,ch=1;\n        scanf(\"%d %d\", &n,&t);\n        int a[n];\n        for ( i=1; i<=n-1; i++) \n\t\tscanf(\"%d\",&a[i]);\n        for  ( i=1; i<=(n-1); )\n        {\n            i = i+a[i];\n            //printf(\"%d\\n\",i);\n            if ( i==t )\n\t\t\t { \n\t\t\t printf(\"YES\");\n\t\t\t return 0;\n\t\t\t }\n        }\n        printf(\"NO\");\n        return 0;\n  }"}
{"similarity_score": 0.9988974641675854, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "45df3c487128ba9d7d42a4bd230bdf3b", "bug_code_uid": "179b4c05fd6375929bdb9838f0a97d82", "src_uid": "7ac5f084c403bd26802e1b941105d34b", "apr_id": "99eea4c3b134b84960d7990f21742eaa", "difficulty": 1100, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#define MAX(A,B) (A > B) ? A : B\r\ntypedef struct pair {\r\n  int i,v;\r\n} pair;\r\nint cmp (const void * a, const void * b) {\r\n  pair * p = (pair*)a, * q = (pair*)b;\r\n  return (p->v - q->v) ? (p->v - q->v) : (p->i - q->i);\r\n}\r\nint main() {\r\n    int a,b,c;\r\n    scanf(\"%d\",&a);\r\n    while (a--) {\r\n      scanf(\"%d\",&b);\r\n      pair val[b];\r\n      for (int i = 0; i < b; i++) {\r\n        scanf(\"%d\",&c);\r\n        val[i].i = i + 1;\r\n        val[i].v = c;\r\n      }\r\n      qsort(val,b, sizeof(pair),cmp);\r\n      int ans = -1;\r\n      for (int i = 1; i < b; i++) {\r\n        int len = val[i-1].i + (b - val[i].i);\r\n        if (val[i].v ==  val[i-1].v)\r\n        if (val[i].i - (val[i-1].i - 1) != val[i-1].i) {\r\n          if (val[i-1].i + len >= (val[i].i - val[i-1].i))\r\n            ans = MAX(ans, len);\r\n        }\r\n      }\r\n      printf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}\r\n  ", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#define MAX(A,B) (A > B) ? A : B\r\ntypedef struct pair {\r\n  int i,v;\r\n} pair;\r\nint cmp (const void * a, const void * b) {\r\n  pair * p = (pair*)a, * q = (pair*)b;\r\n  return (p->v - q->v) ? (p->v - q->v) : (p->i - q->i);\r\n}\r\nint main() {\r\n    int a,b,c;\r\n    scanf(\"%d\",&a);\r\n    while (a--) {\r\n      scanf(\"%d\",&b);\r\n      pair val[b];\r\n      for (int i = 0; i < b; i++) {\r\n        scanf(\"%d\",&c);\r\n        val[i].i = i + 1;\r\n        val[i].v = c;\r\n      }\r\n      qsort(val,b, sizeof(pair),cmp);\r\n      int ans = -1;\r\n      for (int i = 1; i < b; i++) {\r\n        int len = val[i-1].i + (b - val[i].i);\r\n        if (val[i].v ==  val[i-1].v)\r\n        if (val[i].i - (val[i-1].i - 1) != val[i-1].i) {\r\n          //if (val[i-1].i + len >= (val[i].i - val[i-1].i))\r\n            ans = MAX(ans, len);\r\n        }\r\n      }\r\n      printf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}\r\n  "}
{"similarity_score": 0.9865229110512129, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2f0e29124daeb5e2bc10a120cea9a653", "bug_code_uid": "7d4147d48b14c4c855ef0f2e94152711", "src_uid": "3545385c183c29f9b95aa0f02b70954f", "apr_id": "94398a1adede985cf0c08f2d83a7d8d3", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int N, i,*arr,cnt,*ans;\n    long long int even_sum=0 ,odd_sum=0;\n    scanf(\"%d\",&N);\n    arr=(int*)malloc(N*sizeof(int));\n    ans=(int*)malloc(N*sizeof(int));\n    for(i=0;i<N;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n        ans[i]=arr[i]/2;\n        if(arr[i]%2==0)\n            even_sum+=ans[i];\n        else\n         odd_sum+=ans[i];\n    }\n    cnt=even_sum + odd_sum; \n    if(cnt>0)  \n    {\n        for(i=0;i<N;i++)\n        {\n            if(cnt==0)  break;\n            if(arr[i]%2!=0)\n            {\n                ans[i]=ans[i]-1;\n                cnt--;\n            }\n        }\n    }\n    \n    if(cnt<0)\n    {\n        for(i=0;i<N;i++)\n        {\n            if(cnt==0)  break;\n            if(arr[i]%2!=0)\n            {\n                ans[i]=ans[i]+1;\n                cnt++;\n            }\n        }\n    }\n    for(i=0;i<N;i++)\n        printf(\"%d \",ans[i]);\n}\n\n\n\n\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int N, i,*arr,cnt,*ans;\n    long long int even_sum=0 ,odd_sum=0;\n    scanf(\"%d\",&N);\n    arr=(int*)malloc(N*sizeof(int));\n    ans=(int*)malloc(N*sizeof(int));\n    for(i=0;i<N;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n        ans[i]=arr[i]/2;\n        if(arr[i]%2==0)\n            even_sum+=ans[i];\n        else\n         odd_sum+=ans[i];\n    }\n    cnt=even_sum + odd_sum; \n    if(cnt>0)  \n    {\n        for(i=0;i<N;i++)\n        {\n            if(cnt==0)  break;\n            if(arr[i]%2!=0 && arr[i]<0)\n            {\n                ans[i]=ans[i]-1;\n                cnt--;\n            }\n        }\n    }\n    \n    if(cnt<0)\n    {\n        for(i=0;i<N;i++)\n        {\n            if(cnt==0)  break;\n            if(arr[i]%2!=0 && arr[i]>0)\n            {\n                ans[i]=ans[i]+1;\n                cnt++;\n            }\n        }\n    }\n    for(i=0;i<N;i++)\n        printf(\"%d \",ans[i]);\n}\n\n\n\n\n\n\n"}
{"similarity_score": 0.9780077619663649, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0db64e00d8ff57e5349fac9dad2fde7a", "bug_code_uid": "0ebc5f60b704f9cad02988474e2e273e", "src_uid": "c4c8cb860ea9a5b56bb35532989a9192", "apr_id": "15aaf69eb8fbdee9e2c675cdd61c9ccd", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n\tint i,j,k,n,t,x,y;\n\tscanf(\"%d\",&t);\n\tfor(int z=0;z<t;z++)\n\t{\n\t\tscanf(\"%d \",&n);\n\t\tk=0;\n\t\tchar a[n],b[n],c[n];\n\t\ta[0]='1';\n\t\tb[0]='1';\n\t\tscanf(\"%s\",&c);\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(k==0)\n\t\t\t{\n\t\t\t\tif(c[i]=='0')\n\t\t\t\t{\n\t\t\t\t\ta[i]='0';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t\tif(c[i]=='1')\n\t\t\t\t{\n\t\t\t\t\ta[i]='0';\n\t\t\t\t\tb[i]='1';\n\t\t\t\t\tk=1;\n\t\t\t\t}\n\t\t\t\tif(c[i]=='2')\n\t\t\t\t{\n\t\t\t\t\ta[i]='1';\n\t\t\t\t\tb[i]='1';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(c[i]=='0')\n\t\t\t\t{\n\t\t\t\t\ta[i]='0';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t\tif(c[i]=='1')\n\t\t\t\t{\n\t\t\t\t\ta[i]='1';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t\tif(c[i]=='2')\n\t\t\t\t{\n\t\t\t\t\ta[i]='2';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\tprintf(\"%c\",b[i]);\n\t\tprintf(\"\\n\");\n\t\tfor(i=0;i<n;i++)\n\t\tprintf(\"%c\",a[i]);\n\t\tprintf(\"\\n\");\n\t}\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n\tint i,j,k,n,t,x,y;\n\tscanf(\"%d\",&t);\n\tfor(int z=0;z<t;z++)\n\t{\n\t\tscanf(\"%d \",&n);\n\t\tk=0;\n\t\tchar a[n],b[n],c[n];\n\t\ta[0]='1';\n\t\tb[0]='1';\n\t\tscanf(\"%s\",&c);\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(k==0)\n\t\t\t{\n\t\t\t\tif(c[i]=='0')\n\t\t\t\t{\n\t\t\t\t\ta[i]='0';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t\tif(c[i]=='1')\n\t\t\t\t{\n\t\t\t\t\ta[i]='0';\n\t\t\t\t\tb[i]='1';\n\t\t\t\t\tk=1;\n\t\t\t\t}\n\t\t\t\tif(c[i]=='2')\n\t\t\t\t{\n\t\t\t\t\ta[i]='1';\n\t\t\t\t\tb[i]='1';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(c[i]=='0')\n\t\t\t\t{\n\t\t\t\t\ta[i]='0';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t\tif(c[i]=='1')\n\t\t\t\t{\n\t\t\t\t\ta[i]='1';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t\tif(c[i]=='2')\n\t\t\t\t{\n\t\t\t\t\ta[i]='2';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"1\");\n\t\tfor(i=1;i<n;i++)\n\t\tprintf(\"%c\",b[i]);\n\t\tprintf(\"\\n\");\n\t\tprintf(\"1\");\n\t\tfor(i=1;i<n;i++)\n\t\tprintf(\"%c\",a[i]);\n\t\tprintf(\"\\n\");\n\t}\n}"}
{"similarity_score": 0.9987531172069826, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a25ab336a4ea1a5bb79dd80fb687dee2", "bug_code_uid": "2195c312afbc66f5a490419effe97762", "src_uid": "22a3561ff70b802f080feaabc4a71298", "apr_id": "fe5f0d78f5734dad16e40981071e45db", "difficulty": 900, "tags": ["combinatorics", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    char name[21];\n    int i,n, firstLetter[26],pairs =0,count,sec1, sec2;\n\n    for(i=0;i<26;i++)\n        firstLetter[i]=0;\n    scanf(\"%d \",&n);\n    //fflush(stdin);\n\n    for(i=0;i<n;i++)\n    {\n        gets(name);\n        firstLetter[name[0]-'a'] +=1;\n    }\n\n    for(i=0;i<26;i++)\n    {\n        printf(\"%c %d\\n\",i+'a', firstLetter[i]);\n        if(firstLetter[i]>2)\n        {\n            sec1 = firstLetter[i]/2;\n            sec2 = firstLetter[i] -sec1;\n            count = 0;\n            if(sec1>1)\n            {\n                count = (sec1*(sec1-1))/2;\n            }\n            if(sec2>1)\n            {\n                count += (sec2*(sec2-1))/2;\n            }\n            pairs +=count;\n        }\n    }\n\n\n    printf(\"%d\",pairs);\n//    gets(name);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    char name[21];\n    int i,n, firstLetter[26],pairs =0,count,sec1, sec2;\n\n    for(i=0;i<26;i++)\n        firstLetter[i]=0;\n    scanf(\"%d \",&n);\n    //fflush(stdin);\n\n    for(i=0;i<n;i++)\n    {\n        gets(name);\n        firstLetter[name[0]-'a'] +=1;\n    }\n\n    for(i=0;i<26;i++)\n    {\n        //printf(\"%c %d\\n\",i+'a', firstLetter[i]);\n        if(firstLetter[i]>2)\n        {\n            sec1 = firstLetter[i]/2;\n            sec2 = firstLetter[i] -sec1;\n            count = 0;\n            if(sec1>1)\n            {\n                count = (sec1*(sec1-1))/2;\n            }\n            if(sec2>1)\n            {\n                count += (sec2*(sec2-1))/2;\n            }\n            pairs +=count;\n        }\n    }\n\n\n    printf(\"%d\",pairs);\n//    gets(name);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9960629921259843, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "708ab3e93d6df999fabf95151fbc4897", "bug_code_uid": "42cc6e3a06269bc379391eadb9ba0499", "src_uid": "3ec1b7027f487181dbdfb12f295f11ae", "apr_id": "ff61e3a35df4036ac01786555f369ee1", "difficulty": 900, "tags": ["brute force", "dp", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tlong long int T,num;\r\n\tscanf(\"%lld\",&T);\r\n\twhile(T--)\r\n\t{\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tlong long int a,b;\r\n\t\ta = num % 2020;\r\n\t\tb = num / 2020;\r\n\t\tif(a <= b)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tlong long int T,num;\r\n\tscanf(\"%lld\",&T);\r\n\twhile(T--)\r\n\t{\r\n\t\tscanf(\"%lld\",&num);\r\n\t\tlong long int a,b;\r\n\t\ta = num % 2020;\r\n\t\tb = num / 2020;\r\n\t\tif(a <= b)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.5648854961832062, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "c60c53e7cd7cb0c20f72db230e8224db", "bug_code_uid": "c43df51e2be61ef4b4e757dab6d6d8ab", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "744dc653a396e418697f3981b3aa187f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int m,n,i=0,l,r,j,respuesta=0,cpos,cneg,nec;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    int a[n];\n    int respuestas[m];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    i=0;\n    while(i<m){\n        respuesta=0;\n        scanf(\"%d\",&l);\n        scanf(\"%d\",&r);\n        if((r-l+1)%2==0){\n            nec=(r-l+1)/2;\n            j=0;\n            cpos=0;\n            cneg=0;\n            while(j<n){\n                if(a[j]==1 && cpos<nec){\n                    cpos=cpos+1;\n                }else if(a[j]==-1 && cneg<nec){\n                    cneg=cneg+1;\n                }\n                if(cpos==nec && cneg==nec){\n                    respuesta=1;\n                    j=n;\n                }\n                j=j+1;\n            }\n        }\n        respuestas[i]=respuesta;\n        i=i+1;\n\n    }\n    for(i=0;i<m;i++){\n        printf(\"%d\\n\",respuestas[i]);\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int m,n,i=0,l,r,j,respuesta=0,cpos=0,cneg=0,nec;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    int a[n];\n    int respuestas[m];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(a[i]==1){\n            cpos=cpos+1;\n        }else{\n            cneg=cneg+1;\n        }\n\n    }\n    i=0;\n    while(i<m){\n        respuesta=0;\n        scanf(\"%d%d\",&l,&r);\n        if((r-l+1)%2==0){\n            nec=(r-l+1)/2;\n            if(cpos>=nec && cneg>=nec){\n                respuesta=1;\n            }\n        }\n        respuestas[i]=respuesta;\n        i++;\n    }\n\n    for(i=0;i<m;i++){\n        printf(\"%d\\n\",respuestas[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9006451612903226, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1fbc0751745a997495c52600f411dab9", "bug_code_uid": "e7181e231c9c644ee9ad28af6399b410", "src_uid": "3c066bad8ee6298b318bf0f4521c7c45", "apr_id": "25d8ca3bdbc49369deb37bfd65894105", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nstruct{\n\tint a,b;\n}typedef segments;\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"input.txt\",\"r\", stdin);\n\t\tfreopen(\"output.txt\",\"w\", stdout);\n\t#endif\n\tint n,x,i,p,q,flag=0;\n\tscanf(\"%d%d\",&n,&x);\n\tsegments arr[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&p,&q);\n\t\tif(p<q)\n\t\t{\n\t\t\tarr[i].a=p;\n\t\t\tarr[i].b=q;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[i].a=q;\n\t\t\tarr[i].b=p;\n\t\t}\n\t}\n\tp=arr[0].a;q=arr[0].b;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif (arr[i].a>q || arr[i].b<p)\n\t\t{\n\t\t\tflag=1;break;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[i].a>p)\n\t\t\t\tp=arr[i].a;\n\t\t\telse if(arr[i].b<q)\n\t\t\t\tq=arr[i].b;\n\t\t}\t\t\t\n\t}\n\tif(flag)\n\t\tprintf(\"%d\",-1);\n\telse\n\t{\n\t\tif(x>=p && x<=q)\n\t\t\tprintf(\"%d\",0);\n\t\telse\n\t\t{\n\t\t\tif(x<p)\n\t\t\t\tprintf(\"%d\",p-x);\n\t\t\telse\n\t\t\t\tprintf(\"%d\",x-q);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nstruct{\n\tint a,b;\n}typedef segments;\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"input.txt\",\"r\", stdin);\n\t\tfreopen(\"output.txt\",\"w\", stdout);\n\t#endif\n\tint n,x,i,p,q,flag=0;\n\tscanf(\"%d%d\",&n,&x);\n\tsegments arr[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&p,&q);\n\t\tif(p<q)\n\t\t{\n\t\t\tarr[i].a=p;\n\t\t\tarr[i].b=q;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[i].a=q;\n\t\t\tarr[i].b=p;\n\t\t}\n\t}\n\tp=arr[0].a;q=arr[0].b;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif (arr[i].a>q || arr[i].b<p)\n\t\t{\n\t\t\tflag=1;break;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(arr[i].a>p && arr[i].b<q)\n\t\t\t{\n\t\t\t\tp=arr[i].a;q=arr[i].b;\n\t\t\t}\n\t\t\telse if(arr[i].b<q)\n\t\t\t\tq=arr[i].b;\n\t\t\telse if(arr[i].a>p)\n\t\t\t\tp=arr[i].a;\n\t\t}\t\t\t\n\t}\n\tif(flag)\n\t\tprintf(\"%d\",-1);\n\telse\n\t{\n\t\tif(x>=p && x<=q)\n\t\t\tprintf(\"%d\",0);\n\t\telse\n\t\t{\n\t\t\tif(x<p)\n\t\t\t\tprintf(\"%d\",p-x);\n\t\t\telse\n\t\t\t\tprintf(\"%d\",x-q);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4883195177091183, "equal_cnt": 15, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 8, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "3e3242f445d1e6f3803b585699ea4094", "bug_code_uid": "a78fbfdf5329c6577565db0b4d2be4b3", "src_uid": "f3e413954c9c02520fd25bd2cba4747e", "apr_id": "9b981d2fb33f0d15fa5fc4babe83400c", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/******************************************************************************\r\n\r\nWelcome to GDB Online.\r\nGDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, \r\nC#, VB, Perl, Swift, Prolog, Javascript, Pascal, HTML, CSS, JS\r\nCode, Compile, Run and Debug online from anywhere in world.\r\n\r\n*******************************************************************************/\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int TestCase,res,sum=0,rev;\r\n    long long int num1;\r\n    scanf(\"%d\",&TestCase);\r\n    while(TestCase--){\r\n        scanf(\"%ld\",&num1);\r\n        if(num1%2050!=0){\r\n            printf(\"-1\");\r\n            }\r\n        res = num1/2050;\r\n       while(res){\r\n              rev = res % 10;\r\n              res /= 10;\r\n              sum+=rev;\r\n              printf(\"%d\",sum);\r\n    \r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n            \r\n", "fixed": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int TestCase,sum=0,rev;\r\n    long  long int num1,res;\r\n    scanf(\"%d\",&TestCase);\r\n    while(TestCase--){\r\n        scanf(\"%lld\",&num1);\r\n        if(num1%2050==0)\r\n        {\r\n        res = num1/2050;\r\n        rev=0;\r\n       while(res>0){\r\n           \r\n              rev += res % 10;\r\n              res /= 10;              \r\n    }\r\n    printf(\"%d\\n\",rev);\r\n        }\r\n        else\r\n        printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.2255346727154893, "equal_cnt": 32, "replace_cnt": 18, "delete_cnt": 2, "insert_cnt": 12, "fix_ops_cnt": 32, "lang": "GNU C", "fix_code_uid": "6743c767cf2dadc6b12845a964c88bfc", "bug_code_uid": "3b0ac6fdbc7afe7d04b26d78c1943bec", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "73c5819b355a7b2ab325654185569344", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\nchar s[8],a[8],max[8]={0},tmp[8],j;\nint i,k=0;\ngets(s);\nstrcpy(a,s);\nfor(i=0;i<strlen(s);i++){\n    if(s[i]%2==0){\n        j=a[i];\n        a[i]=a[strlen(s)];\n        a[strlen(s)]=j;\n        if(strcmp(a,max)>0){\n            strcmp(tmp,a);\n            strcmp(a,max);\n            strcmp(max,tmp);\n        }\n        strcpy(a,s);\n        k++;\n    }\n\n}\nif(k==0){\n    printf(\"-1\");\n}\nelse{\n    puts(max);\n}\nreturn 0;\n}\n\t \t\t  \t\t \t  \t \t \t\t \t\t\t \t\t\t", "fixed": "#include <stdio.h>\n#include <string.h>\nchar a[100002];\nint main()\n{\n    while(scanf(\"%s\",a)!=EOF)\n    {\n        int  ff = -1,i;\n        int flag1 = 0;\n        int flag2 = 0;\n        int l=strlen(a);\n        int pl=a[l-1]-'0';\n        for(i=0; i<l; i++)\n        {\n            int x = a[i]-'0';\n            if(x%2==0&&pl>x)\n            {\n                char str;\n                str=a[i];\n                a[i]=a[l-1];\n                a[l-1]=str;\n                flag1 = 1;\n                flag2 = 1;\n                break;\n            }\n            else if(x%2==0)\n            {\n                flag1 = 1;\n                ff=i;\n            }\n        }\n        if(flag1 == 0)\n        {\n            printf(\"-1\\n\");\n            continue;\n        }\n        if(flag2 == 1)\n        {\n            printf(\"%s\\n\",a);\n            continue;\n        }\n        if(flag1 == 1)\n        {\n            char str;\n            str=a[ff];\n            a[ff]=a[l-1];\n            a[l-1]=str;\n            printf(\"%s\\n\",a);\n        }\n\n    }\n    return 0;\n}\n\n\t \t \t\t \t\t\t\t\t\t  \t\t \t \t   \t\t"}
{"similarity_score": 0.10810810810810811, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a1a35c392dbc13896b54e6a565d6296f", "bug_code_uid": "4ff29cafd80f65b0e31c5acbe0613787", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "a59e518e426dd2a20290ee94a6202208", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\n\nint main(){\n\n    int n,b,d;\n    int change = 0,sum = 0;\n    int oranges[100000] ={0};\n    scanf(\"%d %d %d\", &n, &b, &d);\n    for(int i = 0;i < n; i++){\n        scanf(\"%d\", &oranges[i]);\n    }\n    for(int j = 0; j <n; j++){\n        if(oranges[j] > b){\n            j++;\n        }\n        sum += oranges[j];\n        if(sum > d){\n            change++;\n        }\n\n    }\n    printf(\"%d\",change);\n\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,b,d,a,i,sum=0,ans=0;\n    scanf(\"%d %d %d\",&n,&b,&d);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a>b)\n            continue;\n        sum+=a;\n        if(sum>d)\n            sum=0,ans++;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}"}
{"similarity_score": 0.6666666666666666, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "199bee1f7420592194dd140a21852ac6", "bug_code_uid": "bb40fa60f75a7024a4f22fa7eb283ac9", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "1e1f0d9bcd773b9c5d103765b68fc4c6", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int a,b,c,d,e,f,g,h;\n   scanf(\"%I64d%I64d%I64d\",&a,&b,&c);\n\n\nif(b<0&&c>=0)\n{\n    d=b/a;\n    e=c/a+1;\n    printf(\"%I64d\",e-d);\n}\n\n\nelse{\n    d=b/a;\n\n    if(d<0) d=d*(-1);\n\n    if(b%a==0) d--;\n\n    e=c/a;\n    if(e<0) e=(-1)*e;\n\n    printf(\"%I64d\",e-d);\n}\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int a,b,c,d,e,f,g,h;\n   scanf(\"%I64d%I64d%I64d\",&a,&b,&c);\n\n\nif(b<0&&c>=0)\n{\n    d=b/a;\n    e=c/a+1;\n    printf(\"%I64d\",e-d);\n}\n\n\nelse if(b>=0&&c>=0){\n    d=b/a;\n\n\n\n    if(b%a==0) d--;\n\n    e=c/a;\n\n\n    printf(\"%I64d\",e-d);\n}\n\nelse\n{\n        d=b/a;\n        d=d*(-1);\n\n    e=c/a;\n    e=e*(-1);\n\n   if(c%a==0) e--;\n\n    printf(\"%I64d\",d-e);\n}\n\n    return 0;\n}\n"}
{"similarity_score": 0.5704125177809388, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "8e862a3b02bc48a2978ceef85d01794f", "bug_code_uid": "c2cd3f610d4d8c4b33ef88699a0cc1a3", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "711f5fc1937cf4a032aff62cc765c3bb", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define x 12\nint main()\n{\n    int n,m,i=0;\n    scanf(\"%d%d\",&n,&m);\n    \n    char a[n][x],b[m][x];\n    \n    while(i<n){\n    scanf(\"%s\",a[i]);\n    i++;\n    }\n    i=0;\n    \n    while(i<m)\n    {\n        scanf(\"%s\",b[i]);\n        i++;\n    }\n    long long int c,j,y,k,d,e;\n    scanf(\"%lld\",&c);\n    for(j=1;j<=c;j++)\n    {\n        scanf(\"%lld\",&y);\n        d=0;\n        e=0;\n        for(i=1;i<=y;i++)\n        {\n            k=0;\n            while(k<n)\n            {\n                d++;\n                if(d==y){\n                printf(\"%s\",a[k]);\n                break;\n                }\n                k++;\n                \n            }\n        }\n        for(i=1;i<=y;i++)\n        {\n            k=0;\n            while(k<m)\n            {\n                e++;\n                if(e==y){\n                printf(\"%s\\n\",b[k]);\n                break;\n                }\n                k++;\n                \n            }\n        }\n        \n    }\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#define x 12\nint main()\n{\n    int n,m,i=0;\n    scanf(\"%d%d\",&n,&m);\n    \n    char a[n][x],b[m][x];\n    \n    while(i<n){\n    scanf(\"%s\",a[i]);\n    i++;\n    }\n    i=0;\n    \n    while(i<m)\n    {\n        scanf(\"%s\",b[i]);\n        i++;\n    }\n    int c,j,y,k,d,e;\n    scanf(\"%d\",&c);\n    for(j=1;j<=c;j++)\n    {\n        scanf(\"%d\",&y);\n        \n        printf(\"%s%s\\n\",a[(y-1)%n],b[(y-1)%m]);\n    }\n}"}
{"similarity_score": 0.8480565371024735, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9d97f6a37d911686c91dd09081b53af3", "bug_code_uid": "5fff388b182faba2ca6a95456d49606a", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "d07fb839c04e5f4eb53b3694839056dd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "int main()\n{\n    int n,a[100200]={},count=0;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]<0)\n        {\n        int flag=0;\n        for(int j=i;j>=1;j--)\n        {\n            if(a[j]>0)\n            {\n                flag++;\n                a[j]--;\n                break;\n            }\n        }\n        if(flag==0)\n            count++;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "int main()\n{\n    int n,a[100200]={},count=0,sum=0;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        /*if(a[i]<0)\n        {\n        int flag=0;\n        for(int j=i;j>=1;j--)\n        {\n            if(a[j]>0)\n            {\n                flag++;\n                a[j]--;\n                break;\n            }\n        }\n        if(flag==0)\n            count++;\n        }*/\n        if(a[i]>0)\n            sum+=a[i];\n        else\n        {\n            if(sum>0)\n                sum--;\n            else\n                count++;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9969040247678018, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d0cdffa327360ca9e3318847d6582b8d", "bug_code_uid": "e090a44424192f3b60891d26b4cc2f70", "src_uid": "140737ecea3ff1c71cdd5e51e6abf297", "apr_id": "2e7842694c69316598e421c402439813", "difficulty": 2000, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--){\n        int a, b, c, i, j;\n        int na, nb, nc, fa, fb, fc;\n        scanf(\"%d %d %d\", &a, &b, &c);\n\n        int min = 30000;\n\n        for(i = 1; i <= 10000; i++){\n            for(j = i; j <= 10000; j += i){\n                int da, db, dc;\n                da = a - i;\n                na = a - da;\n                db = b - j;\n                nb = b - db;\n                dc = (c%j < j-c%j) ? c%j : j-c%j;\n                if(dc == c%j) nc = c - c%j;\n                else nc = c + j - c%j;\n                da = (da < 0) ? -da : da;\n                db = (db < 0) ? -db : db;\n\n                int total = da + db + dc;\n                if(total < min){\n                    min = total;\n                    fa = na;\n                    fb = nb;\n                    fc = nc;\n                }\n            }\n        }\n\n        printf(\"%d\\n%d %d %d\\n\", min, fa, fb, fc);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--){\n        int a, b, c, i, j;\n        int na, nb, nc, fa, fb, fc;\n        scanf(\"%d %d %d\", &a, &b, &c);\n\n        int min = 30000;\n\n        for(i = 1; i <= 10000+a; i++){\n            for(j = i; j <= 10000+b; j += i){\n                int da, db, dc;\n                da = a - i;\n                na = a - da;\n                db = b - j;\n                nb = b - db;\n                dc = (c%j < j-c%j) ? c%j : j-c%j;\n                if(dc == c%j) nc = c - c%j;\n                else nc = c + j - c%j;\n                da = (da < 0) ? -da : da;\n                db = (db < 0) ? -db : db;\n\n                int total = da + db + dc;\n                if(total < min){\n                    min = total;\n                    fa = na;\n                    fb = nb;\n                    fc = nc;\n                }\n            }\n        }\n\n        printf(\"%d\\n%d %d %d\\n\", min, fa, fb, fc);\n    }\n\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9080399369416711, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f2b06649ea0088994d8a53c9985870f1", "bug_code_uid": "0562f662fead40ea95d566efd77c77ea", "src_uid": "bb071f1f4fc1c129a32064c1301f4942", "apr_id": "c250b4bf768909d00c986fed368c12c8", "difficulty": 1200, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int N;\n    scanf(\"%d\",&N);\n    char *out[N];\n    for(int k=0; k<N; k++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        out[k]=(char*)malloc((n+1)*sizeof(char));\n        scanf(\"%s\",out[k]);\n        int i;\n        for(i=0; i<n-1 && out[k][i]<=out[k][i+1]; i++)\n            ;\n        if(i!=n-1)\n        {\n            i=0;\n            int zeroCount=1, oneCount=0;\n            for(int j=0; j<n && out[k][j]=='0'; j++)\n                zeroCount++;\n            for(int j=0; n-1-j>=0 && out[k][n-1-j]=='1'; j--)\n                oneCount++;\n            //printf(\"%d %d\\n\",zeroCount, oneCount);\n            for(int j=0; j<zeroCount; j++)\n                out[k][i++]='0';\n            for(int j=0; j<oneCount; j++)\n                out[k][i++]='1';\n            out[k][i]='\\0';\n        }\n    }\n    for(int k=0; k<N; k++)\n    {\n        printf(\"%s\\n\",out[k]);\n        free(out[k]);\n    }\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int N;\n    scanf(\"%d\",&N);\n    char *out[N];\n    for(int k=0; k<N; k++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        out[k]=(char*)malloc((n+1)*sizeof(char));\n        scanf(\"%s\",out[k]);\n        int i;\n        for(i=0; i<n-1 && out[k][i]<=out[k][i+1]; i++)\n            ;\n        if(i!=n-1)\n        {\n            i=0;\n            int zeroCount=1, oneCount=0;\n            for(int j=0; j<n && out[k][j]=='0'; j++)\n                zeroCount++;\n            for(int j=0; n-1-j>=0 && out[k][n-1-j]=='1'; j++)\n                oneCount++;\n            //printf(\"%d %d\\n\",zeroCount, oneCount);\n            for(int j=0; j<zeroCount; j++)\n                out[k][i++]='0';\n            for(int j=0; j<oneCount; j++)\n                out[k][i++]='1';\n            out[k][i]='\\0';\n            //printf(\"%s\\n\",out[k]);\n        }\n    }\n    for(int k=0; k<N; k++)\n    {\n        printf(\"%s\\n\",out[k]);\n        free(out[k]);\n    }\n}"}
{"similarity_score": 0.3359683794466403, "equal_cnt": 19, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "416e6f882c556e778b0eeefd9919da0d", "bug_code_uid": "274a0b264ad7df0dade3800f83bfef50", "src_uid": "08cd22b8ee760a9d2dacb0d050dcf37a", "apr_id": "48289621b520f30133f7e9c3654bd752", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdio.h>\r\nint main()\r\n{\r\n\r\n    int t,c,d,j,i,n;\r\n\r\n    scanf(\"%d\\n\",&t);\r\n    while(t--)\r\n    {   scanf(\"%d\\n\",&n);\r\n     scanf(\"%d\\n\",&c);\r\n    char a[n],b[n];\r\n        gets(a);\r\n\r\n     for(j=0,i=n-1;i>=0;i--,j++){\r\n          b[j]=a[i];\r\n    }\r\n          d=strcmp(a,b);\r\n          if(d==0||c==0)\r\n          {\r\n              printf(\"1\\n\");\r\n          }\r\n          else printf(\"2\\n\");\r\n    }\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k,p,j,i;\r\n    char s[100];\r\n    scanf(\"%d\",&t);\r\n    for(t=t; t>0; t--)\r\n    {\r\n        p=0;\r\n        scanf(\"%d %d\",&n,&k);\r\n        scanf(\"%s\",s);\r\n        if(k==0)\r\n            printf(\"1\\n\");\r\n        else{\r\n\r\n\r\n        for(i=0,j=n-1; i<j; i++,j--)\r\n\r\n        {\r\n            if(s[i]==s[j])\r\n                continue;\r\n\r\n            else\r\n            {\r\n                p=1;\r\n                break;\r\n            }\r\n        }\r\n\r\n         if(p==0)\r\n            printf(\"1\\n\");\r\n        else\r\n            printf(\"2\\n\");\r\n        }\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.23923444976076555, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b4939ce4f061ac480889d5ddcd1dd7f6", "bug_code_uid": "5299e2226ef398c65fb9172f009a8ce5", "src_uid": "933167c31c0f53a43e840cc6cf153f8d", "apr_id": "5b57074d307951cd452f547b9b713599", "difficulty": 1100, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <malloc.h>\n\nint checkPrime(int num) {\n    int i;\n    if(num <= 2) return 0;\n    for(i = 2; i <= sqrt(num) / 2; i++) {\n        if(num % i == 0) return 1;\n    }\n    return 0;\n}\n\nint main(void) {\n    char vowels[6] = {'a', 'e', 'i', 'o', 'u'};\n    int k, i, j, x, y, turn1 = 0, turn2;\n    scanf(\"%d\", &k);\n    i = checkPrime(k);\n    if(!i || k < 25) printf(\"-1\", i);\n    else {\n        for(i = 5; i < k; i++) {\n            j = k / i;\n            if((i * j) == k && j > 4) {\n                x = i; y = j; break;\n            }\n        }\n        for(i = 0; i < x; i++) {\n            turn2 = turn1;\n            for(j = 0; j < y; j++) {\n                printf(\"%c\", vowels[turn2]);\n                if(turn2 == 4) turn2 = 0;\n                else turn2++;\n            }\n            if(turn1 == 4) turn1 = 0;\n            else turn1++;\n        }\n    }\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n    char vowels[6] = {'a', 'e', 'i', 'o', 'u'};\n    int k, i, j, x = 0, y, turn1 = 0, turn2;\n    scanf(\"%d\", &k);\n    for(i = 5; i < k; i++) {\n        j = k / i;\n        if((i * j) == k && j > 4) {\n            x = i; y = j; break;\n        }\n    }\n    for(i = 0; i < x; i++) {\n        turn2 = turn1;\n        for(j = 0; j < y; j++) {\n            printf(\"%c\", vowels[turn2]);\n            if(turn2 == 4) turn2 = 0;\n            else turn2++;\n        }\n        if(turn1 == 4) turn1 = 0;\n        else turn1++;\n    }\n    if(!x) printf(\"-1\");\n\treturn 0;\n}"}
{"similarity_score": 0.9683060109289617, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b87bb44c291e011e4504927e61ac7844", "bug_code_uid": "a44affdf532f4a69c6e8747ceb188c7f", "src_uid": "5ebb0ee239d68ea33d9dac2d0bdd5f4e", "apr_id": "0b7b07d36548296b9faf458cb21998a3", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "bitmasks", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,m,k,i,j,l=0,cnt1=0,cnt=0;\n\tlong long int a[1008][22];\n\tscanf(\"%lld %lld %lld\",&n,&m,&k);\n\tfor(i=1;i<=m+1;i++)\n\t{\n\t\tscanf(\"%lld\",&j);\n\t\twhile(j!=0)\n\t\t{\n\t\t\tif(j%2==1)\n\t\t\t\ta[i][l]=1;\n\t\t\telse\n\t\t\t\ta[i][l]=0;\n\t\t\tj/=2;\n\t\t\tl++;\n\t\t}\n\t\tl=0;\n\t}\n\tfor(i=1;i<m+1;i++)\t\t\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(a[m+1][j]!=a[i][j])\n\t\t\t\tcnt1++;\n\t\t}\n\t\tif(cnt1<=k)\n\t\t\tcnt++;\n\t\tcnt1=0;\n\t}\n\n\tprintf(\"%lld\",cnt);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nlong long int a[1008][22];\nint main()\n{\n\tlong long int n,m,k,i,j,l=0,cnt1=0,cnt=0;\n\t//long long int a[1008][22];\n\tscanf(\"%lld %lld %lld\",&n,&m,&k);\n\tfor(i=1;i<=m+1;i++)\n\t{\n\t\tscanf(\"%lld\",&j);\n\t\twhile(j!=0)\n\t\t{\n\t\t\tif(j%2==1)\n\t\t\t\ta[i][l]=1;\n\t\t\telse\n\t\t\t\ta[i][l]=0;\n\t\t\tj/=2;\n\t\t\tl++;\n\t\t}\n\t\tl=0;\n\t}\n\tfor(i=1;i<m+1;i++)\t\t\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(a[m+1][j]!=a[i][j])\n\t\t\t\tcnt1++;\n\t\t}\n\t\tif(cnt1<=k)\n\t\t\tcnt++;\n\t\tcnt1=0;\n\t}\n\n\tprintf(\"%lld\",cnt);\n\treturn 0;\n}"}
{"similarity_score": 0.9980430528375733, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "814ccb65b63f04c088213c3ce78e9369", "bug_code_uid": "8f680d684bf8bb69998661b519427dd5", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "f7e55f375ebf8d7d427921848ac8d4bf", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n\nint length(char str[]){\n    int i = 0;\n    for(; str[i]; i++);\n    return i;\n}\nint main(){\n\tchar a[100],s,year;\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint isnumber = 1;\n\t\tscanf(\"%s\",&a);\n\t\ts = length(a);\n\t\tint i=0;\n\t\twhile(i<=s){\n\t\t\tif (isdigit(a[i]))\n\t  \t\t{\n\t\t\t\t  isnumber = 0;\n\t\t\t\t \n\t\t\t}\n\t\t\ti++;\n\t\t} \n\t\tif(isnumber == 1){\n\t\t\tif(s >= 10){\n\t\t\t\tprintf(\"%c%d%c\",a[0],s-2,a[s-1]);\n\t\t\t}else{\n\t\t\t\tprintf(\"%s\", a);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t} \n\t\t\t\t\n\t}\n\t\n\t\n\t\n}\n", "fixed": "#include<stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n\nint length(char str[]){\n    int i = 0;\n    for(; str[i]; i++);\n    return i;\n}\nint main(){\n\tchar a[100],s,year;\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint isnumber = 1;\n\t\tscanf(\"%s\",&a);\n\t\ts = length(a);\n\t\tint i=0;\n\t\twhile(i<=s){\n\t\t\tif (isdigit(a[i]))\n\t  \t\t{\n\t\t\t\t  isnumber = 0;\n\t\t\t\t \n\t\t\t}\n\t\t\ti++;\n\t\t} \n\t\tif(isnumber == 1){\n\t\t\tif(s >= 11){\n\t\t\t\tprintf(\"%c%d%c\",a[0],s-2,a[s-1]);\n\t\t\t}else{\n\t\t\t\tprintf(\"%s\", a);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t} \n\t\t\t\t\n\t}\n\t\n\t\n\t\n}\n"}
{"similarity_score": 0.9348404255319149, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "769226b5a19f2a0e37f857629d76aaf1", "bug_code_uid": "b0e9d0cf768544b29234eb205f46593e", "src_uid": "d629d09782a7af0acc359173ac4b4f0a", "apr_id": "938df52d12e40f57904c321eda33a5fa", "difficulty": 1200, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j,p=0,l=0;\n    scanf(\"%d %d\",&n,&m);\n    getchar();\n    char s[n+5],t[m+5];\n    scanf(\"%s %s\",s,t);\n    if(n==1&&s[0]=='*') printf(\"YES\\n\");\n    else if(n>m+1) printf(\"NO\\n\");\n    else{\n        for(i=0;i<n;i++){\n            if(s[i]=='*'){\n                p=i;\n                break;\n            }\n            else if(s[i]!=t[i]){\n                printf(\"NO\\n\");\n                return 0;\n            }\n        }\n        for(i=n-1,j=m-1;i>=0;i--,j--){\n            if(s[i]=='*') break;\n            if(s[i]!=t[j]){\n                printf(\"NO\\n\");\n                return 0;\n            }\n        }\n        printf(\"YES\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j,p,l=0;\n    scanf(\"%d %d\",&n,&m);\n    p=n+5;\n    getchar();\n    char s[n+5],t[m+5];\n    scanf(\"%s %s\",s,t);\n    if(n==1&&s[0]=='*') printf(\"YES\\n\");\n    else if(n>m+1) printf(\"NO\\n\");\n    else{\n        for(i=0;i<n;i++){\n            if(s[i]=='*'){\n                p=i;\n                break;\n            }\n            else if(s[i]!=t[i]){\n                printf(\"NO\\n\");\n                return 0;\n            }\n        }\n        if(p>n-1&&n!=m){\n            printf(\"NO\\n\");\n            return 0;\n        }\n        for(i=n-1,j=m-1;i>=0;i--,j--){\n            if(s[i]=='*') break;\n            if(s[i]!=t[j]){\n                printf(\"NO\\n\");\n                return 0;\n            }\n        }\n        printf(\"YES\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4869791666666667, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "18daade2d56cec28c12ecdc1e745ff89", "bug_code_uid": "3b57861480714446beb29ee0c7f01516", "src_uid": "5d5dfa4f129bda46055fb636ef33515f", "apr_id": "eb060d97d78d26ebdb3ca2308c014b56", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint a[305];\n    int p, x, n, i, ndx, flag, res;\n\t\n\tflag= 1;\n\tres = -1;\n    \n    scanf(\"%d %d\", &p, &n);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%d\", &x);\n        ndx = x%p;\n        \n        if(a[ndx]!=0 && flag==1){\n           res = i+1;\n           flag =0;\n        }\n        \n        a[ndx]++;\n    }\n    \n    printf(\"%d\", res);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define MAX 1005\nint main()\n{\n    int p, n, x, a[305], ndx, i;\n    \n    ndx = -1;\n    \n    memset(a, 0, sizeof(a));\n    \n    scanf(\"%d %d\", &p, &n);\n    \n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &x); \n        \n\t\tif(a[x % p]==0)\n\t\t\ta[x % p]++;\n        else {\n            ndx = i+1;\n            break;\n        }\n    }\n    \n    printf(\"%d\", ndx);\n    return 0;\n}\n"}
{"similarity_score": 0.9966887417218543, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "192586e65ced07d75beb741be7bcaf86", "bug_code_uid": "9dd29985448d1f166f4c296a569495f7", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "fdaf00072d5ba413997c874b087889a7", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int a[100],n,total=0,p=0,i;\n  scanf(\"%d\",&n);\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&a[i]);\n }\nfor(i=1;i<n;i++)\n{\nif(a[i]>p)\n    p=a[i];\n}\n    for(i=0;i<n;i++)\n                {\n                total=total+p-a[i];\n                }\n                printf(\"%d\",total);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int a[100],n,total=0,p=0,i;\n  scanf(\"%d\",&n);\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&a[i]);\n }\nfor(i=0;i<n;i++)\n{\nif(a[i]>p)\n    p=a[i];\n}\n    for(i=0;i<n;i++)\n                {\n                total=total+p-a[i];\n                }\n                printf(\"%d\",total);\n}\n"}
{"similarity_score": 0.45998315080033697, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "facf7b80ab24ed4bd299bc13bce85001", "bug_code_uid": "ec286352b72127366b8b37c9203b1553", "src_uid": "c659bdeda1c1da08cfc7f71367222332", "apr_id": "bd013fe4de7bbaf04d96b550cd456673", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,k=0;\n    char temp;\n    char a[10000],b[10000];\n    gets(a);\n    gets(b);\n    if(strlen(a)!=strlen(b)){\n        printf(\"NO\");\n        return 0;\n    }\n    else{\n    \n\n    for(i=0;i<strlen(a);i++){\n        for(j=i+1;j<strlen(a);j++){\n            temp=a[i];\n            a[i]=a[j];\n            a[j]=temp;\n\n\n\n            if(strcmp(a,b)==0){\n                k=1;\n                break;\n            }\n            temp=a[j];\n            a[j]=a[i];\n            a[i]=temp;\n        }\n        if(k==1)\n            break;\n    }\n    if(k==1)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n}\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,k,m,c=0,sum=0;\n    char a[100001],b[100001];\n    scanf(\"%s %s\",a,b);\n    k=strlen(a);\n    m=strlen(b);\n    if(k!=m){\n        printf(\"NO\");\n        return 0;\n    }\n    else{\n        for(i=0;i<k;i++){\n            if(a[i]==b[i]){\n                continue;\n            }\n            c++;\n            sum+=a[i]-b[i];\n        }\n        if(sum==0&&c==2){\n            printf(\"YES\");\n            return 0;\n        }\n        else\n        {\n            printf(\"NO\");\n\n        }\n    }\n\n}\n"}
{"similarity_score": 0.646875, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2361b9860644b75e8ffcdda398c205c4", "bug_code_uid": "3e9fd518b557b912cc32d4524c60cd2c", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "d83a558c0f3d3e631bf965ae3f3936ea", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,flag[10000] = { 0 };\n\tint m[10000];\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &m[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int a = m[i] - 1; a > m[i]/2; a--)\n\t\t{\n\t\t\tint b = m[i] - a;\n\t\t\tif (b >0)\n\t\t\t\tflag[i]++;\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\tprintf(\"%d\\n\", flag[i]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,flag[10000] = { 0 };\n\tint a,b;\n\tint m[10000];\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &m[i]);\n\t\tif(m[i]<=2)\n            flag[i]=0;\n        else\n            flag[i]=(m[i]-1)/2;\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\tprintf(\"%d\\n\", flag[i]);\n}\n"}
{"similarity_score": 0.8351648351648352, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "86268fce2bb81b5c2d1ae35b04b4875b", "bug_code_uid": "d54cdd034ba68b283a8b536cf85372b8", "src_uid": "5dd0d518f315d81204b25e48fea0793a", "apr_id": "edbf60ba0a23a2f970be0b11a172a783", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint k, d, i;\n\n\tscanf (\"%d %d\", &k, &d);\n\n\tfor (i = 1; i < k; i++)\n\t\tputchar ('9');\n\n\tputchar (d + '0');\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint k, d, i;\n\n\tscanf (\"%d %d\", &k, &d);\n\n\tif (k > 1 && d == 0)\n\t\tputs (\"No solution\");\n\telse {\n\t\tfor (i = 1; i < k; i++)\n\t\t\tputchar ('9');\n\n\t\tputchar (d + '0');\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9415384615384615, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "962ad0357c6250329a2247b4ee0b7583", "bug_code_uid": "55ef7af693e1c46dc1fc813cd7d8cb77", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "de63b8a432d077f3e0a3d2ff6fe6c27f", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int N, M, i, cidade[10], j, aux, max = 0, pos_max;\n    scanf(\"%d %d\", &N, &M);\n    for(i = 0; i < 100; i++) cidade[i] = 0;\n    for(i = 0; i < N; i++) {\n        for(j = 0; j < M; j++) {\n            scanf(\"%d\", &aux);\n            if(aux > max) {\n                    max = aux;\n                    pos_max = j;\n            }\n        }\n        cidade[pos_max] ++;\n        max = 0;\n    }\n\n    max = 0;\n    pos_max = 0;\n\n\n    for(i = 0; i < 100; i++) {\n        if(cidade[i] > max)  {\n            max = cidade[i];\n            pos_max = i;\n    }\n    }\n    printf(\"%d\\n\", ++pos_max);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int N, M, i, cidade[100], j, aux, max = -1, pos_max;\n    scanf(\"%d %d\", &N, &M);\n    for(i = 0; i < 100; i++) cidade[i] = 0;\n    for(i = 0; i < M; i++) {\n        for(j = 0; j < N; j++) {\n            scanf(\"%d\", &aux);\n            if(aux > max) {\n                    max = aux;\n                    pos_max = j;\n            }\n        }\n        cidade[pos_max] ++;\n        max = -1;\n    }\n\n    max = -1;\n    pos_max = 0;\n\n\n    for(i = 0; i < 100; i++) {\n        if(cidade[i] > max)  {\n            max = cidade[i];\n            pos_max = i;\n    }\n    }\n    printf(\"%d\\n\", ++pos_max);\n    return 0;\n}\n"}
{"similarity_score": 0.9976744186046511, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fbdd66f44063a2077b0541812f284232", "bug_code_uid": "cfde8b39782f39453ba1e2372859359a", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "0c72b05314e8d001187f93c6617f8c00", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n\n\nint main()\n{\n\tint array[100001], i,j,k,n,l,temp;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n//\t\tif(i%2==0)\n\t\t\tscanf(\"%d\",&array[i]);\n\t//\telse\n\t\t//\tscanf(\"%d\",&array[n-i+1]);\n\t}\n\n\tfor(j=1;j<=(n+1)/2;j+=2)\n\t{\n\t\t\n\t\t\ttemp=array[j];\n\t\t\tarray[j]=array[n-j+1];\n\t\t\tarray[n-j+1]=temp;\n\n\t\t\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%d \",array[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n\n\nint main()\n{\n\tint array[200001], i,j,k,n,l,temp;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n//\t\tif(i%2==0)\n\t\t\tscanf(\"%d\",&array[i]);\n\t//\telse\n\t\t//\tscanf(\"%d\",&array[n-i+1]);\n\t}\n\n\tfor(j=1;j<=(n+1)/2;j+=2)\n\t{\n\t\t\n\t\t\ttemp=array[j];\n\t\t\tarray[j]=array[n-j+1];\n\t\t\tarray[n-j+1]=temp;\n\n\t\t\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%d \",array[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\n\n\n"}
{"similarity_score": 0.9965770171149144, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "314a3d4aa836018494db82d8d565c9a2", "bug_code_uid": "3781b407936b1e47c7354d04468979b7", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "b8150297c889b9c4bc74e8711a9d6494", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n  \n int main(){\n                int a;\n                scanf(\"%d\",&a);\n                if(a%2==0)\n                printf(\"%d\\n\",(a*a)/2);\n                else      \n                printf(\"%d\\n\",((a*a)+1)/2);\n                int i,j;\n                for(i=0;i<a;i++){\n                        for(j=0;j<a;j++){\n                                if(i%2==0){\n                                        if(j%2==0)\n                                         printf(\"c\");\n                                        else\n                                         printf(\".\");\n                                        }\n                                else{\n                                        if(j%2==0)\n                                        printf(\".\");\n                                        else\n                                        printf(\"c\");\n                                    }\n                                }\n                        printf(\"\\n\");\n                        }return 0;\n                }\n\n", "fixed": "#include<stdio.h>\n  \n int main(){\n                int a;\n                scanf(\"%d\",&a);\n                if(a%2==0)\n                printf(\"%d\\n\",(a*a)/2);\n                else      \n                printf(\"%d\\n\",((a*a)+1)/2);\n                int i,j;\n                for(i=0;i<a;i++){\n                        for(j=0;j<a;j++){\n                                if(i%2==0){\n                                        if(j%2==0)\n                                         printf(\"C\");\n                                        else\n                                         printf(\".\");\n                                        }\n                                else{\n                                        if(j%2==0)\n                                        printf(\".\");\n                                        else\n                                        printf(\"C\");\n                                    }  \n                                }\n                        printf(\"\\n\");\n                        }return 0;\n                }\n"}
{"similarity_score": 0.8464163822525598, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "b20bf9f7d761c36bef5994f541fa76b3", "bug_code_uid": "272a7082029337973a674b9a144341db", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "7c2af1b4fb32ab5b81bd82f7d3f061a3", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i,j,g;\nscanf(\"\"%d\",&n);\nfor(i=1;i<=n-1;i++)\n{\nscanf(\"%d\",&j);\n}\nscanf(\"%d\",&g);\nprintf(\"%d\",g);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint i,j,n,max=0;\nscanf(\"%d\",&n);\nfor (i=1;i<=n;i++)\n{\nscanf(\"%d\",&j);\nif(j>max)\nmax=j;\n}\nprintf(\"%d\",max);\nreturn 0;\n}"}
{"similarity_score": 0.7847707847707848, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4a1f2c7c271be2820104bca20c47efeb", "bug_code_uid": "691424d50e03127c7362b3af3f2ed34a", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "ee348ba769a408491824cd50f2be5ed2", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\nmain()\n{\n    int n,i,min[2],leg,il;\n    il=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    scanf(\"%d\",&a[0]);\n    min[0]=0;\n    min[1]=a[0];\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]<min[1])\n        {\n            min[1]=a[i];\n            min[0]=i;\n        }\n    }\n    leg=n-min[0];\n    if(leg>=n) leg=leg-n;\n    i=min[0]+1;\n    min[0]=1;\n    while(min[0]<n&&il==0)\n    {\n        if(i>=n) i=i-n;\n        if(a[i]<min[1]) il++;\n        min[1]=a[i];\n        min[0]++;\n        i++;\n    }\n    if(il>0) leg=-1;\n    printf(\"%d\",leg);\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\nmain()\n{\n    int n,i,min[2],leg,il;\n    il=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    scanf(\"%d\",&a[0]);\n    min[0]=0;\n    min[1]=a[0];\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>=min[1])\n        {\n            min[1]=a[i];\n            min[0]=i;\n        }\n    }\n    for(i=0;min[1]==a[i]&&i<n;i++) min[0]=i;\n    min[0]++;\n    if(min[0]>=n) min[0]=min[0]-n;\n    min[1]=a[min[0]];\n    leg=n-min[0];\n    if(leg>=n) leg=leg-n;\n    i=min[0]+1;\n    min[0]=1;\n    while(min[0]<n&&il==0)\n    {\n        if(i>=n) i=i-n;\n        if(a[i]<min[1]) il++;\n        min[1]=a[i];\n        min[0]++;\n        i++;\n    }\n    if(il>0) leg=-1;\n    printf(\"%d\",leg);\n}\n"}
{"similarity_score": 0.594059405940594, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "c5af59b0d27f78f7726f6c31861143e0", "bug_code_uid": "0c87568e5ec8eabd0810f210575b9f40", "src_uid": "080a3458eaea4903da7fa4cf531beba2", "apr_id": "5839876f95245185660cbcff3b067b18", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long long int n,x,a,i,j=0;\n    int ara[10001];\n    \n    scanf(\"%I64d %I64d\",&n,&x);\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&ara[i]);\n        j=j+ara[i];\n    }\n        \n    if((n-1)+j==x)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n     \n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\n    long long int i,j,k,l,n,m,x,*ptr_one,temp,sum=0;\n\n    scanf(\"%I64d %I64d\",&n,&x);\n    ptr_one=(long long int *)malloc(n*sizeof(long long int));\n    temp=ptr_one;\n\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",ptr_one+i);\n        sum=sum + *(ptr_one+i);\n    }\n\n    if((n-1+sum)==x)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.3774193548387097, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "8d36c2bf2176a58059c614ae897564ac", "bug_code_uid": "d2c6241273c64bcc89c38f3b443f1e4a", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "fb07b9adfe74eae62c4353bbbb34f986", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <iostream>\nusing namespace std;\n\nint main (){\n\tint n,i,w=0;int a[10000];\n\tscanf (\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\tscanf (\"%d\",&a[i]);\n\tif(n==1) {\n\t\tif(a[0]==1) printf (\"YES\\n\");\n\t\telse printf (\"NO\\n\");\n\t}\n\telse{\n\t\tfor (i=0;i<n;i++)\n\t\tif(a[i]==0) w++;\n\t\tif(w<=1) printf (\"YES\\n\");\n\t\telse printf (\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main (){\n\tint n,i,a[1000];\n\twhile (scanf (\"%d\",&n)!=EOF){\n\t\tint w=0;\n\t\tfor (i=0;i<n;i++){\n\t\t\tscanf (\"%d\",&a[i]);\n\t\t\tif(a[i]==0) w++;\n\t\t}\n\t\tif(n==1&&w==0) printf (\"YES\\n\");\n\t\telse if(n!=1&&w==1) printf (\"YES\\n\");\n\t\telse printf (\"NO\\n\");\n\t} \n\treturn 0;\n}"}
{"similarity_score": 0.5079365079365079, "equal_cnt": 17, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 13, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "bf47ba9cf34a62a0fbac1830dba71837", "bug_code_uid": "04ea412d81db92d1cb3a58f927d35654", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "07098eb9ff32bb806d2057b32d2ce018", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <inttypes.h>\nint main()\n{\n   long long i,n;\n   int p2[30]={1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912};\n   long long sub=0,ans;\n   scanf(\"%I64d\",&n);\n   ans=n*(n+1)/2;\n   for(i=0;i<30;i++)\n   {\n      if(p2[i]<=n)\n      {\n         sub=sub+p2[i];\n      }\n      else break;\n   }\n   sub=2*sub;\n   ans=ans-sub;\n   printf(\"%\" PRId64,ans);\n   return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include <inttypes.h>\nint main()\n{\n   short t;\n   int p2[30]={1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912};\n   long long i,n;\n   long long sub=0,ans;\n   scanf(\"%hi\",&t);\n   for(;t>0;t--)\n   {\n      scanf(\"%I64d\",&n);\n      ans=n*(n+1)/2;\n      for(i=0;i<30;i++)\n      {\n         if(p2[i]<=n)\n         {\n            sub=sub+p2[i];\n         }\n         else break;\n      }\n      sub=2*sub;\n      ans=ans-sub;\n      printf(\"%\" PRId64 \"\\n\",ans);\n      sub=0;\n   }\n   return 0;\n}"}
{"similarity_score": 0.9679521998913634, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5776b9fdfcc71eacce37f78a9f572f33", "bug_code_uid": "bd811fb80500b69ad13b49d33dfa65e7", "src_uid": "d5a328cfa1e4d26ff007813ad02991ac", "apr_id": "21d3622fdcb67b74a1d918e5d61f48d4", "difficulty": 1400, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,k,w,m,i,j,u;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tint a[n][n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\ta[i][j]=0;\n\t\t}\n\t}\n\tif(k>n*n)\n\t{\n\t\tprintf(\"-1\");\n\t}\n\telse if(k==n*n)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\ta[i][j]=1;\n\t\t\t}\n\t\t}\t\n\t}\n\telse if(k<n*n)\n\t{\n\t\tfor(i=n;i>0;i--)\n\t\t{\n\t\t\tw=(2*i)-1;\n\t\t\tif(k>=w)\n\t\t\t{\n\t\t\t\tfor(j=n-i;j<n;j++)\n\t\t\t\t{\n\t\t\t\t\ta[n-i][j]=1;\n\t\t\t\t\ta[j][n-i]=1;\n\t\t\t\t}\n\t\t\t\tk=k-w;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k<=0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(k%2==1)\n\t\t\t\t{\n\t\t\t\t\tm=k/2;\n\t\t\t\t\tfor(u=0;u<m+1;u++)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[n-i][n-i+u]=1;\n\t\t\t\t\t\ta[n-i+u][n-i]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tm=k/2-1;\n\t\t\t\t\tfor(u=0;u<m+1;u++)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[n-i][n-i+u]=1;\n\t\t\t\t\t\ta[n-i+u][n-i]=1;\n\t\t\t\t\t}\n\t\t\t\t\ta[n-i-1][n-i-1]=1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(k<=n*n)\n\t{\n\t\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d\t\",a[i][j]);\n\t\t\t\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,k,w,m,i,j,u;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tint a[n][n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\ta[i][j]=0;\n\t\t}\n\t}\n\tif(k>n*n)\n\t{\n\t\tprintf(\"-1\");\n\t}\n\telse if(k==n*n)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\ta[i][j]=1;\n\t\t\t}\n\t\t}\t\n\t}\n\telse if(k<n*n)\n\t{\n\t\tfor(i=n;i>0;i--)\n\t\t{\n\t\t\tw=(2*i)-1;\n\t\t\tif(k>=w)\n\t\t\t{\n\t\t\t\tfor(j=n-i;j<n;j++)\n\t\t\t\t{\n\t\t\t\t\ta[n-i][j]=1;\n\t\t\t\t\ta[j][n-i]=1;\n\t\t\t\t}\n\t\t\t\tk=k-w;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k<=0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(k%2==1)\n\t\t\t\t{\n\t\t\t\t\tm=k/2;\n\t\t\t\t\tfor(u=0;u<m+1;u++)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[n-i][n-i+u]=1;\n\t\t\t\t\t\ta[n-i+u][n-i]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tm=k/2-1;\n\t\t\t\t\tfor(u=0;u<m+1;u++)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[n-i][n-i+u]=1;\n\t\t\t\t\t\ta[n-i+u][n-i]=1;\n\t\t\t\t\t}\n\t\t\t\t\ta[n-i+1][n-i+1]=1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tk=0;\n\t\t\t}\n\t\t}\n\t}\n\tif(k<=n*n)\n\t{\n\t\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d\t\",a[i][j]);\n\t\t\t\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\t\n}\n"}
{"similarity_score": 0.8255578093306288, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "50c5a869020cedf5a0821768ad808040", "bug_code_uid": "3252607ca0311ea5e92e142c520bd29e", "src_uid": "33a31edb75c9b0cf3a49ba97ad677632", "apr_id": "0cd0a2ae1b02d63c7714c8a08f680061", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        unsigned long long int n,b=0,f=0;\r\n        scanf(\"%llu\",&n);\r\n        unsigned long long int a[n];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%llu\",&a[i]);\r\n             b=sqrt(a[i]);\r\n             if(b*b!=a[i]){\r\n                 f=1;\r\n            printf(\"YES\\n\");\r\n            break;\r\n          }\r\n            \r\n        }\r\n        if(f==0)\r\n        printf(\"NO\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,b=0;\r\n        int f=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n             b=sqrt(a[i]);\r\n             if(b*b!=a[i]){\r\n                 f=1;\r\n          }\r\n            \r\n        }\r\n        if(f==1)\r\n        printf(\"YES\\n\");\r\n        if(f==0)\r\n        printf(\"NO\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9907407407407407, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1a7e6d4c427964daf48ee2b85b5fced8", "bug_code_uid": "c991651092f75bb73545a7eaa43adbcf", "src_uid": "c3f080681e3da5e1290ef935ff91f364", "apr_id": "4eaa6077c891b00a4cffa622ba87f2e0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int i,j,n,m,count=0;\n    scanf(\"%d %d\",&n,&m);\n    int games[n],bills[m];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&games[i]);\n    for(i=0,j=0;i<m;i++)\n    {\n        scanf(\"%d\",&bills[i]);\n        if(bills[j]>=games[i]&&i<n)\n        {\n            count++;\n            j++;\n        }\n    }\n    if(i<n&&j<m)\n    {\n        for(;j<m&&i<n;i++)\n        {\n            if(bills[j]>=games[i])\n            {\n                count++;\n                j++;\n            }\n        }\n    }\n    printf(\"%d\\n\",count);\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int i,j,n,m,count=0;\n    scanf(\"%d %d\",&n,&m);\n    int games[n],bills[m];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&games[i]);\n    for(i=0,j=0;i<m;i++)\n    {\n        scanf(\"%d\",&bills[i]);\n        if(i<n&&bills[j]>=games[i])\n        {\n            count++;\n            j++;\n        }\n    }\n    if(i<n&&j<m)\n    {\n        for(;j<m&&i<n;i++)\n        {\n            if(bills[j]>=games[i])\n            {\n                count++;\n                j++;\n            }\n        }\n    }\n    printf(\"%d\\n\",count);\n}\n"}
{"similarity_score": 0.9981981981981982, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "84e058c034f98b120cefcce8e4cc1c7b", "bug_code_uid": "af826a5b615ec709ffbe7b579aeb2628", "src_uid": "d4fc7e683f389e0c7bbee8e115cef459", "apr_id": "6d63c616c429d14ab5e56c9f2a55022f", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long int a,b;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        if(b%4==0)printf(\"NO\\n\");\r\n        else if(b%2!=0){\r\n            printf(\"YES\\n\");\r\n            for(int i=0;i<a;i+=2)\r\n            printf(\"%d %d\\n\",i+1,i+2);\r\n        }\r\n        else {\r\n            printf(\"YES\\n\");\r\n            for(int i=0;i<a;i+=4)\r\n            printf(\"%d %d\\n\",i+2,i+1);\r\n            for(int i=0;i<a;i+=4)\r\n            printf(\"%d %d\\n\",i+3,i+4);\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long int a,b;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        if(b%4==0)printf(\"NO\\n\");\r\n        else if(b%2!=0){\r\n            printf(\"YES\\n\");\r\n            for(int i=0;i<a;i+=2)\r\n            printf(\"%d %d\\n\",i+1,i+2);\r\n        }\r\n        else {\r\n            printf(\"YES\\n\");\r\n            for(int i=0;i<a;i+=4)\r\n            printf(\"%d %d\\n\",i+2,i+1);\r\n            for(int i=0;i<a-2;i+=4)\r\n            printf(\"%d %d\\n\",i+3,i+4);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.5526932084309133, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "300cb8aa80ccbf89338cf9368897c6ce", "bug_code_uid": "040d7d80d522ef360484adc71250ad7b", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "aa7866a6fc6b678c1942c47816af04ed", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    int i,a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    int j,min=150001,sum,x;\n    for(i=0;i<=n-k;i++)\n    {\n        sum=0;\n        for(j=i;j<i+k;j++)\n        {\n            sum=sum+a[j];\n            if(sum>min)break;\n        }\n        if(sum<min){min=sum;x=i;}\n    }\n    printf(\"%d\",x+1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    int i,a[n],b[n+1],sum1=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);sum1+=a[i];\n    }\n    b[0]=sum1;\n    for(i=1;i<n+1;i++)\n    {\n        b[i]=b[i-1]-a[i-1];\n    }\n    int j,min=99999999,sum,x;\n    for(i=0;i<=n-k;i++)\n    {\n        sum=b[i]-b[i+k];\n        if(sum<min){min=sum;x=i;}\n    }\n    printf(\"%d\",x+1);\n    return 0;\n}\n"}
{"similarity_score": 0.99375, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "340e659f6b8d47e2d892c5b773d5d3af", "bug_code_uid": "3b4c5a09b4b2ad99790de36defcd9350", "src_uid": "d324617c86423d86cdcb839894e00e1a", "apr_id": "79519b3d5ca649253162631bb09e810c", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint\nmain()\n{    \n    int n, t = 0;\n    scanf(\"%d\", &n);\n    \n    for (int i = 0; i < n; ++i) {\n        int s, d;\n        scanf(\"%d%d\", &s, &d);\n        if (s > t) {\n            t = s;\n        } else {\n            t = s + (t - s + d - 1) / d * d;\n        }\n    }\n    printf(\"%d\\n\", t);\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint\nmain()\n{    \n    int n, t = 0;\n    scanf(\"%d\", &n);\n    \n    for (int i = 0; i < n; ++i) {\n        int s, d;\n        scanf(\"%d%d\", &s, &d);\n        if (s > t) {\n            t = s;\n        } else {\n            t = s + (t - s + d) / d * d;\n        }\n    }\n    printf(\"%d\\n\", t);\n    return 0;\n}\n\n"}
{"similarity_score": 0.914179104477612, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c7de73df7534b1d18c04c744ff83098b", "bug_code_uid": "ed508153869df6d04052426439f69f2a", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "e21f664999929aaae06ee1844576a277", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,a,b,c;\r\n    int x;\r\n    \r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        \r\n        if(a>b && a>c){\r\n            x=(a==(b+c)) ? 1: 0;    \r\n        }\r\n        else if(b>a && b>c){\r\n            x=(b==(a+c)) ? 1: 0;\r\n        }\r\n        else if(c>a && c>b){\r\n            x=(c==(a+b)) ? 1: 0;\r\n        }\r\n        else{\r\n            x=0;\r\n        }\r\n        if(x==0)\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"YES\\n\");  \r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,a,b,c;\r\n    int x;\r\n    \r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        \r\n        if(a>=b && a>=c){\r\n            x=(a==(b+c)) ? 1: 0;    \r\n        }\r\n        else if(b>=a && b>=c){\r\n            x=(b==(a+c)) ? 1: 0;\r\n        }\r\n        else if(c>=a && c>=b){\r\n            x=(c==(a+b)) ? 1: 0;\r\n        }\r\n        if(x==0)\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"YES\\n\");  \r\n        \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.988173455978975, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2549727ae1497c8b3d477501e8d4635c", "bug_code_uid": "c2da5ff85caa70e5931ac1ac4ecbd39e", "src_uid": "7f934f96cbe3990945e5ebcf5c208043", "apr_id": "361d4fd3579328f7553583192cd99232", "difficulty": 800, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <string.h>\n\nint main(){\nint t;\nscanf(\"%d\", &t);\nchar strings[t][100];\nfor (int i=0; i<t; i++){\n    scanf(\"%s\", strings[i]);\n    int c=0;\n    for (int j=0;j<i;j++){\n        if (strcmp(strings[i],strings[j])==0){\n            printf(\"YES\\n\");\n            break;\n        }\n        else\n            c=c+1;\n    }\n    if (c==i)\n        printf(\"NO\\n\");\n}\n}\n\t\n\n    ", "fixed": "#include<stdio.h>\n#include <string.h>\n\nint main(){\nint t;\nscanf(\"%d\", &t);\nchar strings[t][125];\nfor (int i=0; i<t; i++){\n    scanf(\"%s\", strings[i]);\n    int c=0;\n    for (int j=0;j<i;j++){\n        if (strcmp(strings[i],strings[j])==0){\n            printf(\"YES\\n\");\n            break;\n        }\n        else\n            c=c+1;\n    }\n    if (c==i)\n        printf(\"NO\\n\");\n}\n}\n\t\n"}
{"similarity_score": 0.9035087719298246, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a5f0d2b1899735a984a94e6e47bf5d69", "bug_code_uid": "ee4cdc55e6685c3746178b799103d064", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "4e0ea38182b52b9d9f0e8c3433a28283", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\nint main()\n{\n int x,n,i=0;\n scanf(\"%d%d\",&n,&x);\n int a[n];\n int freq[100000];\n for(i=0;i<100000;i++)\n {\n     freq[i]=0;\n }\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&a[i]);\n     freq[a[i]-1]+=1;\n }\n long long int xx=0;\n int k;\n long long int yy;\n for(i=0;i<n;i++)\n {\n     k=a[i]^x;\n     yy=(long long)freq[k-1];\n     if(k>0&&k<100001)\n     xx+=yy;\n }\n if(x==0)\n    xx-=n;\n xx=xx/2;\n printf(\"%I64d\",xx);\n return 0;\n}", "fixed": "#include <stdio.h>\n#include<stdlib.h>\nint main()\n{\n int x,n,i=0;\n scanf(\"%d%d\",&n,&x);\n int a[n];\n int freq[100000];\n for(i=0;i<100000;i++)\n {\n     freq[i]=0;\n }\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&a[i]);\n     freq[a[i]-1]+=1;\n }\n long long int xx=0;\n int k;\n long long int yy;\n for(i=0;i<n;i++)\n {\n     k=a[i]^x;\n     if(k>0&&k<100001)\n     {\n     yy=(long long)freq[k-1];\n     xx+=yy;\n     }\n }\n if(x==0)\n    xx-=n;\n xx=xx/2;\n printf(\"%I64d\",xx);\n return 0;\n}"}
{"similarity_score": 0.9980119284294234, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "01f84c7ae89d77201a81fe0209a89160", "bug_code_uid": "16be1633813fac11ffd4044b12bb8b52", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "4051f86f906863c5c245ea1bfbac420e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n \r\n    int l,n, w=0,b=0,c = 0,d=0,e=0;\r\n    scanf(\"%d\", &t);\r\n    while (l--){\r\n        scanf(\"%d\", &n);\r\n        char a[n];\r\n        for (int i = 0; i <=n; i++) {\r\n            scanf(\"%c\", &a[i]);\r\n        }\r\n        if(n==5)\r\n            {\r\n            for (int j = 1; j <= n; j++) {\r\n                if (a[j] == 'T')w++;\r\n                if (a[j] == 'i')b++;\r\n                if (a[j] == 'm')c++;\r\n                if (a[j] == 'u')d++;\r\n                if (a[j] == 'r')e++;\r\n            }\r\n            if (w==1 && b==1 && c==1 && d==1 && e==1) {\r\n                printf(\"YES\\n\");\r\n                w=0;\r\n                b=0;\r\n                c=0;\r\n                d=0;\r\n                e=0;\r\n            } else\r\n            {\r\n                printf(\"NO\\n\");\r\n                w=0;\r\n                b=0;\r\n                c=0;\r\n                d=0;\r\n                e=0;\r\n            }\r\n        }\r\n        else {\r\n            printf(\"NO\\n\");\r\n        }\r\n \r\n \r\n \r\n    }\r\n \r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n \r\n    int l,n, w=0,b=0,c = 0,d=0,e=0;\r\n    scanf(\"%d\", &l);\r\n    while (l--){\r\n        scanf(\"%d\", &n);\r\n        char a[n];\r\n        for (int i = 0; i <=n; i++) {\r\n            scanf(\"%c\", &a[i]);\r\n        }\r\n        if(n==5)\r\n            {\r\n            for (int j = 1; j <= n; j++) {\r\n                if (a[j] == 'T')w++;\r\n                if (a[j] == 'i')b++;\r\n                if (a[j] == 'm')c++;\r\n                if (a[j] == 'u')d++;\r\n                if (a[j] == 'r')e++;\r\n            }\r\n            if (w==1 && b==1 && c==1 && d==1 && e==1) {\r\n                printf(\"YES\\n\");\r\n                w=0;\r\n                b=0;\r\n                c=0;\r\n                d=0;\r\n                e=0;\r\n            } else\r\n            {\r\n                printf(\"NO\\n\");\r\n                w=0;\r\n                b=0;\r\n                c=0;\r\n                d=0;\r\n                e=0;\r\n            }\r\n        }\r\n        else {\r\n            printf(\"NO\\n\");\r\n        }\r\n \r\n \r\n \r\n    }\r\n \r\n}\r\n"}
{"similarity_score": 0.8922610015174507, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "acaf54566c20ff06b9d9887c5bb5dd15", "bug_code_uid": "cf64a61fcf02eede1757e9d297a26a99", "src_uid": "2c51fa9ddc72caaebb29dd65a2db030e", "apr_id": "483dd1a77702036e423e4920fdf15ee4", "difficulty": 1600, "tags": ["dfs and similar", "graphs"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#define mian main\n#define inf 1061109567\nint min(int a,int b){return a>b?b:a;}\nint max(int a,int b){return a<b?b:a;}\nvoid swap(int*a, int*b){*a =*a +*b-(*b =*a);}\nint a[50004];\nint father[50004];\nint n,r1,r2;//cities ,\ufffd\u0276\ufffd\ufffd\ufffd\ufffd\u00b6\ufffd\nint find(int x)\n{\n\tif(father[x]==x)\n\t\treturn x;\n\telse \n\t\treturn find(x);\n}\nvoid dfs(int a,int last)\n{\n    if(a==r1)\n    {\n        father[a]=last;\n        return ;\n    }\n    dfs(father[a],a);\n    \n}\n\n\nint main()\n{\n\tint i,j,k;\n\tint t;\n\t \n\tscanf(\"%d%d%d\",&n,&r1,&r2);\n\tint flag=0,temp;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(flag==1)\n\t\t\tt=temp;\n\t\telse \n\t\tscanf(\"%d\",&t);\n\t\tif(i==r1)//\ufffd\u0276\ufffd \n\t\t{\n\t\t\tfather[i]=i;\n\t\t\ta[i]=i;\n\t\t\tflag=1;\n\t\t\ttemp=t;\n\t\t } \n\t\telse \n\t\t{\t\n\t\tfather[i]=t;a[i]=t;\t\n\t\t}\n\t\n\t}\n\tint now;\n\tdfs(r2,r2);\n\tfather[a]=last;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(i==r2)\n\t\t\tcontinue;\n\t\telse \n\t\t\tprintf(\"%d \",father[i]);\n\t}\n\treturn 0;\n\t\n\t\n\t\n\t\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#define mian main\n#define inf 1061109567\nint min(int a,int b){return a>b?b:a;}\nint max(int a,int b){return a<b?b:a;}\nvoid swap(int*a, int*b){*a =*a +*b-(*b =*a);}\nint a[50004];\nint father[50004];\nint n,r1,r2;//cities ,\u65e7\u90fd\uff0c\u65b0\u90fd\nint find(int x)\n{\n\n\tif(father[x]==x)\n\t\treturn x;\n\telse \n\t\treturn find(x);\n}\nvoid dfs(int now,int last)\n{\n\t\t//printf(\"dfs!\\n\");\n    if(now==r1)\n    {\n        father[now]=last;\n        return ;\n    }\n    //printf(\"jump into dfs\\n\");\n    dfs(father[now],now);\n   \t\tfather[now]=last;\n}\n\n\nint main()\n{\n\tint i,j,k;\n\tint t;\n\t \n\tscanf(\"%d%d%d\",&n,&r1,&r2);\n\tint flag=0,temp;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(flag==1)\n\t\t\n\t\t{\n\t\t\tt=temp;\n\t\t\tflag=0;\n\t\t}\n\t\telse \n\t\tscanf(\"%d\",&t);\n\t\tif(i==r1)//\u65e7\u90fd \n\t\t{\n\t\t\tfather[i]=i;\n\t\t\ta[i]=i;\n\t\t\tflag=1;\n\t\t\ttemp=t;\n\t\t } \n\t\telse \n\t\t{\t\n\t\tfather[i]=t;a[i]=t;\t\n\t\t}\n\t\n\t}\n\n\tdfs(r2,r2);\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(i==r2)\n\t\t\tcontinue;\n\t\telse \n\t\t\tprintf(\"%d \",father[i]);\n\t}\n\treturn 0;\n\t\n\t\n\t\n\t\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.9992581602373887, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "16f808cc744d73117775e796e17095d7", "bug_code_uid": "9aa68e723d6a3370410058589656c8f3", "src_uid": "910c0e650d48af22fa51ab05e8123709", "apr_id": "01dd3549225cb60be27434a9661cb19a", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#define MAX 17\n\nint main()\n{\n\tchar tarr[MAX];\n\tchar arr[MAX];\n\tchar rarr[100000][MAX];\n\tchar *cptr;\n\tint i;\n\tint count;\n\tint t;\n\tint n;\n\tint num;\n\tint l;\n\t\n\tscanf(\"%d\",&n);\n\tfor(t=0;t<n;t++)\n\t{\n\t\tscanf(\"%s\",arr);\n\t\n\t\tcptr=strchr(arr,'C');\n\t\tif(arr[0]=='R'&&isdigit(arr[1])&&cptr!=NULL)\n\t\t{\n\t\t\tnum=atoi(cptr+1);\n\t\t\n\t\t\tcount=0;\n\t\t\twhile(num)\n\t\t\t{\n\t\t\t\tif(num%26==0)\n\t\t\t\t{\n\t\t\t\t\ttarr[count]='Z';\n\t\t\t\t\tnum=num/26;\n\t\t\t\t\tnum--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttarr[count]=(char)((int)(num%26)+64);\n\t\t\t\t\tnum=num/26;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\ti=0;\n\t\t\tcount--;\n\t\t\twhile(count>-1)\n\t\t\t{\n\t\t\t\trarr[t][i]=tarr[count];\n\t\t\t\ti++;\n\t\t\t\tcount--;\n\t\t\t}\n\t\t\t\n\t\t\tl=cptr-&arr[0];\n\t\t\tstrncpy(&rarr[t][i],&arr[1],l-1);\n\t\t\trarr[t][i+l-1]='\\0';\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tcount=0;\n\t\t\twhile(isalpha(arr[count]))\n\t\t\t\tcount++;\n\t\t\t\n\t\t\trarr[t][0]='R';\n\t\t\tstrcpy(&rarr[t][1],&arr[count]);\n\t\t\t\n\t\t\tl=1;\n\t\t\tnum=0;\n\t\t\tfor(i=0;i<count;i++)\n\t\t\t{\n\t\t\t\tif(i)\n\t\t\t\t\tl*=26;\n\t\t\t\tnum+=(int)(arr[count-i-1]-64)*l;\n\t\t\t}\n\n\t\t\tl=0;\n\t\t\twhile(num)\n\t\t\t{\n\t\t\t\ttarr[l]=(char)(num%10+48);\n\t\t\t\tnum=num/10;\n\t\t\t\tl++;\n\t\t\t}\n\n\t\t\tcount=strlen(arr)-count;\n\t\t\trarr[t][count+1]='C';\n\t\t\ti=2;\n\t\t\tl--;\n\t\t\twhile(l>-1)\n\t\t\t{\n\t\t\t\trarr[t][count+i]=tarr[l];\n\t\t\t\ti++;\n\t\t\t\tl--;\n\t\t\t}\n\t\t\trarr[t][count+i+1]='\\0';\n\t\t}\n\t}\n\t\n\tfor(t=0;t<n;t++)\n\t{\n\t\tprintf(\"%s\\n\",rarr[t]);\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#define MAX 17\n\nint main()\n{\n\tchar tarr[MAX];\n\tchar arr[MAX];\n\tchar rarr[100000][MAX];\n\tchar *cptr;\n\tint i;\n\tint count;\n\tint t;\n\tint n;\n\tint num;\n\tint l;\n\t\n\tscanf(\"%d\",&n);\n\tfor(t=0;t<n;t++)\n\t{\n\t\tscanf(\"%s\",arr);\n\t\n\t\tcptr=strchr(arr,'C');\n\t\tif(arr[0]=='R'&&isdigit(arr[1])&&cptr!=NULL)\n\t\t{\n\t\t\tnum=atoi(cptr+1);\n\t\t\n\t\t\tcount=0;\n\t\t\twhile(num)\n\t\t\t{\n\t\t\t\tif(num%26==0)\n\t\t\t\t{\n\t\t\t\t\ttarr[count]='Z';\n\t\t\t\t\tnum=num/26;\n\t\t\t\t\tnum--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttarr[count]=(char)((int)(num%26)+64);\n\t\t\t\t\tnum=num/26;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\ti=0;\n\t\t\tcount--;\n\t\t\twhile(count>-1)\n\t\t\t{\n\t\t\t\trarr[t][i]=tarr[count];\n\t\t\t\ti++;\n\t\t\t\tcount--;\n\t\t\t}\n\t\t\t\n\t\t\tl=cptr-&arr[0];\n\t\t\tstrncpy(&rarr[t][i],&arr[1],l-1);\n\t\t\trarr[t][i+l-1]='\\0';\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tcount=0;\n\t\t\twhile(isalpha(arr[count]))\n\t\t\t\tcount++;\n\t\t\t\n\t\t\trarr[t][0]='R';\n\t\t\tstrcpy(&rarr[t][1],&arr[count]);\n\t\t\t\n\t\t\tl=1;\n\t\t\tnum=0;\n\t\t\tfor(i=0;i<count;i++)\n\t\t\t{\n\t\t\t\tif(i)\n\t\t\t\t\tl*=26;\n\t\t\t\tnum+=(int)(arr[count-i-1]-64)*l;\n\t\t\t}\n\n\t\t\tl=0;\n\t\t\twhile(num)\n\t\t\t{\n\t\t\t\ttarr[l]=(char)(num%10+48);\n\t\t\t\tnum=num/10;\n\t\t\t\tl++;\n\t\t\t}\n\n\t\t\tcount=strlen(arr)-count;\n\t\t\trarr[t][count+1]='C';\n\t\t\ti=2;\n\t\t\tl--;\n\t\t\twhile(l>-1)\n\t\t\t{\n\t\t\t\trarr[t][count+i]=tarr[l];\n\t\t\t\ti++;\n\t\t\t\tl--;\n\t\t\t}\n\t\t\trarr[t][count+i]='\\0';\n\t\t}\n\t}\n\t\n\tfor(t=0;t<n;t++)\n\t{\n\t\tprintf(\"%s\\n\",rarr[t]);\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9939393939393939, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b34c42ce8715db572da6cca2f7d625bc", "bug_code_uid": "b389fea3d44d17ebaaac81abaa01ee8c", "src_uid": "90c5058c0c7f55a567f2e036482149f9", "apr_id": "06d98bf3fd59240d9ca8dcb1a653e959", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b,c,d=0;\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        if((c-a)%2==0 && (a+(c-a)/2)%b==0)\r\n            d=1;\r\n        else if((b+b-a)%c==0 && (b+b-a)!=0)\r\n          d=1;\r\n        else if((b+b-c)%a==0  && (b+b-c)!=0)\r\n            d=1;\r\n        if((b-a)==(c-b))\r\n            d=1;\r\n        if(d==1)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b,c,d=0;\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        if((c-a)%2==0 && (a+(c-a)/2)%b==0)\r\n            d=1;\r\n        else if((b+b-a)%c==0 && (b+b-a)>0)\r\n          d=1;\r\n        else if((b+b-c)%a==0  && (b+b-c)>0)\r\n            d=1;\r\n        if((b-a)==(c-b))\r\n            d=1;\r\n        if(d==1)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.2616580310880829, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "67b13f60be28a1c3a1e70943dfe05be9", "bug_code_uid": "1e9b5fc8831727ee6122da7c38393f44", "src_uid": "c4c8cb860ea9a5b56bb35532989a9192", "apr_id": "8d75a082571a09cacc6b9eaae9255d42", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n, t, i, k, y, x;\n\t\n\tscanf(\"%lld\", &t);\n\t\n\tfor(i=0; i<t; i++)\n\t{\n\t\tscanf(\"%lld %lld\", &n, &x);\n\t\ty=1;\n\t\t\n\t\tfor(k=1; k<n; k++)\n\t\t{\n\t\t\ty=y*10;\n\t\t}\n\t\tprintf(\"%lld\\n%lld\\n\", x-y, y);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tchar s[500001];\n\tint n, t, i;\n\t\n\tscanf(\"%d\", &t);\n\t\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %s\", &n, s);\n\t\tchar a[500001]={'\\0'}, b[500001]={'\\0'};\n\t\tint f=0;\n\t\ta[0]='1';\n\t\tb[0]='1';\n\t\t\n\t\tfor(i=1; i<n; i++)\n\t\t{\n\t\t\tif(f==0)\n\t\t\t{\n\t\t\t\tif(s[i]=='1')\n\t\t\t\t{\n\t\t\t\t\ta[i]='1';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\telse if(s[i]=='2')\n\t\t\t\t{\n\t\t\t\t\ta[i]='1';\n\t\t\t\t\tb[i]='1';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[i]='0';\n\t\t\t\t\tb[i]='0';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[i]='0';\n\t\t\t\tb[i]=s[i];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\\n%s\\n\", a, b);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8207885304659498, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b4acc58e7cff18eb10abed0eacf85f5e", "bug_code_uid": "1b7d43df0d979ec0ac28854b34d0a6c3", "src_uid": "8190d3bc81a4d76f8256f31f07441a36", "apr_id": "8f955c4cdc793995a06176a34f6e2935", "difficulty": 1400, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define N 100001\n#define M 2500000000\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tchar s[N];\n\t\tscanf(\"%s\",s);\n\t\tlong long i,j,len=strlen(s),row=M,col=M,seg=0,k=1,sum,pref[5000]={0};\n\t\tlong long r[N]={0},c[N]={0};\n\t\tr[0]=c[0]=M;\n\t\tfor(i=0;i<len;i++,k++){\n\t\t\tif(s[i]=='W'){\n\t\t\t\trow+=1;\n\t\t\t\tr[k]=row;c[k]=col;\n\t\t\t}\n\t\t\telse if(s[i]=='E'){\n\t\t\t\trow-=1;\n\t\t\t\tr[k]=row;c[k]=col;\n\t\t\t}\n\t\t\telse if(s[i]=='N'){\n\t\t\t\tcol+=2;\n\t\t\t\tr[k]=row;c[k]=col;\n\t\t\t}\n\t\t\telse if(s[i]=='S'){\n\t\t\t\tcol-=2;\n\t\t\t\tr[k]=row;c[k]=col;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<len;i++){\n\t\t\tsum=0;\n\t\t\tsum=r[i]+c[i]+r[i+1]+c[i+1];\n\t\t\tpref[i]=sum;\n\t\t}\n\t\tfor(i=0;i<len;i++){\n\t\t\tfor(j=i+1;j<len;j++){\n\t\t\t\tif(pref[i]==pref[j]&&pref[j]!=-1){\n\t\t\t\t\tseg++;\n\t\t\t\t\tpref[j]=-1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",(len-seg)*5+seg);\n\t\t}\t\t\t\t\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#define N 100001\n#define M 25000000\nint compare(const void * a, const void * b) \n{ \n\n    return ( *(int*)a - *(int*)b ); \n} \n\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tchar s[N];\n\t\tscanf(\"%s\",s);\n\t\tint i,j,len=strlen(s),row=M,col=M,seg=0,k=1,sum,pref[N]={0};\n\t\tint r[N]={0},c[N]={0};\n\t\tr[0]=c[0]=M;\n\t\tfor(i=0;i<len;i++,k++){\n\t\t\tif(s[i]=='W'){\n\t\t\t\trow+=1;\n\t\t\t\tr[k]=row;c[k]=col;\n\t\t\t}\n\t\t\telse if(s[i]=='E'){\n\t\t\t\trow-=1;\n\t\t\t\tr[k]=row;c[k]=col;\n\t\t\t}\n\t\t\telse if(s[i]=='N'){\n\t\t\t\tcol+=5000;\n\t\t\t\tr[k]=row;c[k]=col;\n\t\t\t}\n\t\t\telse if(s[i]=='S'){\n\t\t\t\tcol-=5000;\n\t\t\t\tr[k]=row;c[k]=col;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<len;i++){\n\t\t\tsum=0;\n\t\t\tsum=r[i]+c[i]+r[i+1]+c[i+1];\n\t\t\tpref[i]=sum;\n\t\t}\n\t\tqsort(pref,len,sizeof(int),compare);\n\t\tfor(i=0;i<len;i++){\n\t\t\tif(pref[i]==pref[i+1])seg++;\n\t\t}\n\t\tprintf(\"%d\\n\",(len-seg)*5+seg);\n\t\t}\t\t\t\t\n}"}
{"similarity_score": 0.4687975646879756, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "abb5bab5f7e37ee8603f7adf66fd3b83", "bug_code_uid": "c36a1cdcd123e4e8aaa0a5dcd78b38fe", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "2c1e51910364ddce391b04f5a781236f", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int a,b,t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&a,&b);\\\\\n        if(b==1)\n        {\n            printf(\"NO\\n\");\n        }\n        else\n        {\n           printf(\"YES\\n\");\n           printf(\"%d %d %d\",a,a*b,a*(b+1));\n           printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n\n\t\t\t\t \t  \t   \t \t    \t\t \t\t\t\t   \t", "fixed": "#include<stdio.h>\n \nint main()\n{\n    long long int t,a,b;\n\tscanf(\"%lli\",&t);\n\twhile(t)\n\t{\n\t\tscanf(\"%lld%lld\",&a,&b);\n\t\tif(b==1) \n\t\t{\tprintf(\"NO\\n\"); \n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%lld %lld %lld\\n\",a,a*b,a*(b+1));\n\t\t}\n\t\tt--;\n\t}\n\treturn 0;\n}\n    \t \t\t \t \t\t\t\t\t \t     \t\t\t\t \t\t\t"}
{"similarity_score": 0.7695390781563126, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "57f30a228ca39c67ff3278657fe1c3fb", "bug_code_uid": "eb32aec098698c6687cd4452bd550767", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "c4d645e1808a45204bb6f54f0aeb2003", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\tint n,x[180];\n\tscanf(\"%d\",&n);\n\tint i,j;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&x[i]);\n\t}\n\tfor(j=0;j<n;j++){\n\t\tfor(i=3;i<=500;i++){\n\t\t\tif(x[j]==(i*180-360)/i) {\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(i==500) printf(\"NO\\n\");\t\t\t\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main() {\n\tint n,x[180];\n\tscanf(\"%d\",&n);\n\tint i,j;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&x[i]);\n\t}\n\tfor(j=0;j<n;j++){\n\t\tif(360%(x[j]-180)==0) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8969790859798605, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7179db31a6854892bf9bcc46cdaeaf80", "bug_code_uid": "10bf216c0fbdb164dacd32a42785e447", "src_uid": "74095fe82bd22257eeb97e1caf586499", "apr_id": "582911d894aa29b38706eb94ceacc6d4", "difficulty": 1500, "tags": ["dp", "implementation", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, k;\nlong long int ar[300100];\nlong long int dn[300100], dn2[300100][2];\n\nint main()\n{\n\tint i, res;\n\tlong long max=0, t;\n\tscanf(\" %d %d\",&n,&k);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\" %lld\",&ar[i]);\n\t\tdn[i]=dn[i-1]+ar[i];\n\t}\n\t\n\tfor(i=n-k+1;i>0;i--)\n\t{\n\t\tt=dn[i+k-1]-dn[i-1];\n\t\tif(dn2[i+1][0]>t)\t{ dn2[i][0]=dn2[i+1][0]; dn2[i][1]=dn2[i+1][1]; }\n\t\telse \t\t\t\t{ dn2[i][0]=t; dn2[i][1]=i;}\n\t}\n\t\n\tfor(i=1 ; i<=n-2*k+1 ; i++)\n\t{\n\t\tt=dn[i+k-1]-dn[i-1];\n\t\tif( t+dn2[t+k][0] > max )\n\t\t{\n\t\t\tmax=t+dn2[i+k][0];\n\t\t\tres=i;\n\t\t}\n\t}\n\t\n\tprintf(\"%d %lld\\n\",res,dn2[res+k][1]);\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n, k;\nlong long int ar[300100];\nlong long int dn[300100], dn2[300100][2];\n\nint main()\n{\n\tint i, res;\n\tlong long max=0, t;\n\tscanf(\" %d %d\",&n,&k);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\" %lld\",&ar[i]);\n\t\tdn[i]=dn[i-1]+ar[i];\n\t}\n\tdn2[n+1][0]=-1;\n\tfor(i=n-k+1;i>0;i--)\n\t{\n\t\tt=dn[i+k-1]-dn[i-1];\n\t\tif(dn2[i+1][0]>t)\t{ dn2[i][0]=dn2[i+1][0]; dn2[i][1]=dn2[i+1][1]; }\n\t\telse \t\t\t\t{ dn2[i][0]=t; dn2[i][1]=i;}\n\t}\n\t\n//\tfor(i=1;i<=n;i++){ printf(\"->%d %d %d\\n\",i,dn2[i][0],dn2[i][1]);}\n\t\n\tfor(i=1 ; i<=n-2*k+1 ; i++)\n\t{\n\t\tt=dn[i+k-1]-dn[i-1];\n\t\tif( t+dn2[i+k][0] > max )\n\t\t{\n\t\t\tmax=t+dn2[i+k][0];\n\t\t\tres=i;\n\t\t}\n\t}\n\t\n\tprintf(\"%d %lld\\n\",res,dn2[res+k][1]);\n\t//printf(\"%d\\n\",max);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9205658324265505, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "637e877b10d5b0ceff4c8e2490581e92", "bug_code_uid": "d20eae98c09f9ace21b85414ade6a38c", "src_uid": "b8554e64b92b1b9458955da7d55eba62", "apr_id": "0765123759a6ce43bdad5146eb714102", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i,j,n;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n],sum=0;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);sum=sum+a[j];\r\n        }\r\n        if(sum%n!=0){printf(\"-1\\n\");}\r\n        int count=0;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            if(a[j]>(sum/n)){count++;}\r\n        }\r\n        printf(\"%d\\n\",count);\r\n\r\n    }\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i,j,n;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n],sum=0;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);sum=sum+a[j];\r\n        }\r\n        int flag=1;\r\n        if(sum%n!=0){printf(\"-1\\n\");flag=0;}\r\n        int count=0;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            if(a[j]>(sum/n)){count++;}\r\n        }\r\n        if(flag==1){printf(\"%d\\n\",count);}\r\n\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.3944856839872747, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "c87a1c9cf4978b1d4e87a7d01ab014c0", "bug_code_uid": "680fbc795b64083bd798fa7de98f0ea7", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "9d6157f0d3dab44cbcbc70c81e3de6ef", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar a[100000000];\n\nint main()\n{\n    int n,i,j,x=0,count=0,c=0;\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=0;i<(2*n)-2;i++)\n    {\n        scanf(\"%c\",&a[i]);\n        if(i%2!=0)\n        {\n            x=i-1;\n            while(x>=0)\n            {\n                if(a[i]+32==a[x])\n                {\n                    c++;\n                    a[x]='\\0';\n                }\n                x-=2;\n            }\n        }\n        if(c==0 && i%2!=0)\n            count++;\n        c=0;\n\n\n    }\n    printf(\"%d\\n\",count);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar a[10000000];\n\nint g[10000];\n\nint main()\n{\n    long long int n,i,j,x=0,count=0,c=0;\n    scanf(\"%I64d\",&n);\n    getchar();\n    gets(a);\n    for(i=1;i<(2*n)-2;i+=2)\n    {\n        g[a[i-1]-32]++;\n        if(g[a[i]]>0)\n            g[a[i]]--;\n        else\n            count++;\n    }\n\n\n\n\n    printf(\"%I64d\\n\",count);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9686746987951808, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5cdd9b1009adb8ab42cacc0e3440c802", "bug_code_uid": "09107585152d1ec173fdef3edddbe0d6", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "667e88a12e78d68f9b6661944b83cea4", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,t=1;\n    scanf(\"%d\",&n);\n    if(n<3)\n        printf(\"1\\n1\");\n    else if(n==3)\n        printf(\"2\\n1 3\");\n    else if(n==4)\n        printf(\"4\\n2 4 1 3\");\n    else{\n        for(i=0;i<n;i++){\n            printf(\"%d\",t);\n            t+=2;\n            if(t>n)\n                t=2;\n            if(i<n-1)\n                printf(\" \");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,t=1;\n    scanf(\"%d\",&n);\n    if(n<3)\n        printf(\"1\\n1\");\n    else if(n==3)\n        printf(\"2\\n1 3\");\n    else if(n==4)\n        printf(\"4\\n2 4 1 3\");\n    else{\n        printf(\"%d\\n\",n);\n        for(i=0;i<n;i++){\n            printf(\"%d\",t);\n            t+=2;\n            if(t>n)\n                t=2;\n            if(i<n-1)\n                printf(\" \");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4103671706263499, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "3c80106a676406a53bf3851767f533ba", "bug_code_uid": "8229ea666095100b9cbed66a20cb5a3b", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "e866d8ddcf8a086c2fdbdb5a600d0a5f", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{ long long int i,a,t,n,x,d;\nscanf(\"%I64d\",&t);\nwhile(t--)\n{scanf(\"%I64d\",&a);\n   x=4*a;  i=a+1;    d=2;\n   while(x!=i)\n  {     if(x<i)\n     x=x+4*a;\n        d++ ; i+=a+1;}\n    printf(\"%I64d\\n\",d);}\nreturn 0;}", "fixed": "#include <stdio.h>\nmain()\n{long long int n; int t;\nscanf(\"%d\",&t);\nwhile(t--)\n{scanf(\"%I64d\",&n);\nif(n%2==0)\n printf(\"%I64d\\n\",4*n+1);\nelse if   ((n+1)%4==0)\n     printf(\"%I64d\\n\",n+1);\nelse  printf(\"%I64d\\n\",2*n+1);}\nreturn 0;}"}
{"similarity_score": 0.9787234042553191, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d0fd844493525fc9581fd404bb7fe42e", "bug_code_uid": "89e927a7a0c6c448b71b539237178f36", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "7d2d14d9cd4c62c593942c5f45ce0d19", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int t,i;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int ang,ans,n;\n\t\tscanf(\"%lld\",&n);\n\t\tang = (n-2)*180;\n\t\tans=ang/n;\n\t\tif(ans>=90)\n\t\tprintf(\"YES\\n\");\n\t\telse\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int t,i;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int ang,ans,n;\n\t\tscanf(\"%lld\",&n);\n\t\tang = (n-2)*180;\n\t\tans=ang/n;\n\t\tif(n%4==0)\n\t\tprintf(\"YES\\n\");\n\t\telse\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.2504743833017078, "equal_cnt": 22, "replace_cnt": 18, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "b06ee687631ddce8f50b4f3a6492cfdf", "bug_code_uid": "95da274105e86b170f5689a75c125ae0", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "47fcba937f6c4b977ab16834627356a6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main(){\nint i,m,j,x,y,z;\n\nscanf(\"%d%d%d%d%d%d\",&i,&m,&j,&x,&y,&z);\n int w=i+m+j;\n int r=x+y+z;\nif(w==r)\n\tprintf(\"YES\");\n\nelse\n\tprintf(\"NO\");\nreturn 0;\n}\n\t \t  \t \t      \t \t \t\t\t\t\t  \t\t\t\t \t", "fixed": "#include<stdio.h>\n\nchar nums[10];\n\nint main(void)\n{\n\tint t;\n\tscanf(\"%d\", &t);getchar();\n\t\n\twhile(t--)\n\t{\n      gets(nums);\n      \n\t  int f=nums[0]+nums[1]+nums[2]-48*3;\n\t  int l=nums[3]+nums[4]+nums[5]-48*3;\n\t  if(f==l)\n\t   puts(\"YES\");\n\t  else\n\t   puts(\"NO\"); \t\t\n\t}\n}\n \t\t\t \t  \t\t\t\t\t  \t\t    \t\t  \t \t\t \t"}
{"similarity_score": 0.9203084832904884, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0b4962b2537817ad77b211816eb78e26", "bug_code_uid": "5f0ded7b76c0cc08bb1646165a29fd3c", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "33b40b7d9ca58dabe475e8bf8439dee2", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    long long int p,n,a,b,k;\n    scanf(\"%lld\",&p);\n    while(p--)\n    {\n        scanf(\"%lld %lld %lld\",&n,&a,&b);\n        if(2*a<b)\n        {\n            printf(\"%lld\",n*a);\n\n        }\n        else\n        {\n            k=(n/2)*b;\n            if(n&1)\n            {\n                k=k+a;\n            }\n            printf(\"%lld\",k);\n        }\n\n    }\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    long long int p,n,a,b,k;\n    scanf(\"%lld\",&p);\n    while(p--)\n    {\n        scanf(\"%lld %lld %lld\",&n,&a,&b);\n        if(2*a<b)\n        {\n            printf(\"%lld\\n\",n*a);\n\n        }\n        else\n        {\n            k=(n/2)*b;\n            if(n&1)\n            {\n                k=k+a;\n            }\n            printf(\"%lld\\n\",k);\n        }\n\n    }\n\n\n\n\n}\n"}
{"similarity_score": 0.9856972586412396, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fb959e07783743fba6b9d9d51d8390de", "bug_code_uid": "742e15f278971b27599140e3136d2381", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "ae17fbe0dfa0b9a030b659c1ea4b3ecd", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    char s[100000], t[100000], p[100000];\n\n    int i, j, n, dif = 0, currentDif = 0;\n\n\n    scanf(\"%s\",s);\n    scanf(\"%s\",t);\n\n\n    n = strlen(s);\n\n\n    for(i = 0; i < n; i ++)\n    {\n        if(s[i] != t[i])\n            dif++;\n    }\n\n\n    if(dif % 2 != 0)\n    {\n        printf(\"impossible\");\n        return 0;\n    }\n\n\n\n    for(i = 0; currentDif < (dif / 2) ; i++)\n    {\n        if (s[i] == t[i])\n            printf(\"%c\",s[i]);\n\n        if (s[i] != t[i])\n        {\n            printf(\"%c\",s[i]);\n            currentDif++;\n\n        }\n\n    }\n\n    for( ; i < n; i++)\n    {\n\n        if (s[i] == t[i])\n            printf(\"%c\",t[i]);\n\n        if (s[i] != t[i])\n        {\n            printf(\"%c\",t[i]);\n            currentDif++;\n\n        }\n\n\n    }\n\n\n\n        return 0;\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    char s[100001], t[100001], p[100001];\n\n    int i, j, n, dif = 0, currentDif = 0;\n\n\n    scanf(\"%s\",s);\n    scanf(\"%s\",t);\n\n\n    n = strlen(s);\n\n\n    for(i = 0; i < n; i ++)\n    {\n        if(s[i] != t[i])\n            dif++;\n    }\n\n\n    if(dif % 2 != 0)\n    {\n        printf(\"impossible\");\n        return 0;\n    }\n\n\n\n    for(i = 0; currentDif < (dif / 2) ; i++)\n    {\n        if (s[i] == t[i])\n            printf(\"%c\",s[i]);\n\n        if (s[i] != t[i])\n        {\n            printf(\"%c\",s[i]);\n            currentDif++;\n\n        }\n\n    }\n\n    for( ; i < n; i++)\n    {\n\n        if (s[i] == t[i])\n            printf(\"%c\",t[i]);\n\n        if (s[i] != t[i])\n        {\n            printf(\"%c\",t[i]);\n            currentDif++;\n\n        }\n\n\n    }\n\n\n\n        return 0;\n    }\n"}
{"similarity_score": 0.5039840637450199, "equal_cnt": 27, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 12, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "e2de88bf216a007d88f145c464ee1da4", "bug_code_uid": "89a1af2a343679c537dff7771fc12491", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "01ad058561f4023967e06f3689a64b27", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,a,x,z,y=0;\n    scanf(\"%d\",&n);\n    char s[n+1][33];\n    int g[n+1];\n    \n    for(x=0;x<n;x++)\n    {\n        scanf(\"%s\",&s[x]);\n        a=0;\n        for(y=0;y<x;y++)\n        {\n            if(strcmp(s[x],s[y])==0)\n            a++;\n        }\n        if(a==0)\n        {\n            printf(\"OK\\n\");\n        }\n        else\n        {\n            printf(\"%s%d\\n\",s[x],a);\n        }\n    }\n    return 0;\n}\n", "fixed": "    #include<stdio.h>\n    #include<string.h>\n    int g[100004];\n    char c[100004][33],b[40];\n    int main()\n    {\n        int i,l=0,k;\n        scanf(\"%d\",&k);\n        while(k--){\n            scanf(\"%s\",&b);\n            for(i=0;i<l;i++){\n                if(strcmp(c[i],b)==0){\n                    break;\n                }\n            }\n            if(i==l){\n                printf(\"OK\\n\");\n                strcpy(c[l++],b);\n            }\n            else{\n                printf(\"%s%d\\n\",b,++g[i]);\n            }\n        }\n        return 0;\n    }\n\n"}
{"similarity_score": 0.09769335142469471, "equal_cnt": 23, "replace_cnt": 13, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "811b8cf359ba9782b9c537d3e313f2d6", "bug_code_uid": "b9f4cf0d3c90b3a1800f9c5f424e262b", "src_uid": "dc67dd2102c70ea476df642b863ae8d3", "apr_id": "b4291caa3cc8956c8760ace348c8114c", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nvoid saisir (long long T1[], long long T2[], int t)\n{\n\tint j ; \n\tfor (j=0 ; j<t ; j++)\n        scanf(\"%d %d\",&T1[j],&T2[j]) ;\n\t\t\n}\nvoid calcul (int t , long long T1[],long long T2[], long long *h)\n{\n\tlong long  i ,j ;\n\tint k=0 ;\n\twhile (k<t)\n\t{\n\t\tfor (i=0 ; i<=T1[k] ; i++)\n\t\t{\n\t\t\tfor (j=0 ; j<=T2[k] ;j++)\n\t\t\t{\n\t\t\t\tchar str[50]={0} ;\n\t\t\t\tchar str1[50]={0}  ;\n\t\t\t\tchar str2[50]={50 } ;\n\t\t\t\tsnprintf (str, sizeof(str), \"%lld\",T1[k]); \n\t\t\t    snprintf (str1, sizeof(str1), \"%lld\",T2[k]); \n\t\t    \tsnprintf (str2, sizeof(str2), \"%lld\",((i*j)+i+j)); \n\t\t   \t\t\n\t\t\t\n\t\t\t\tif (strcmp(str2,strcat(str,str1))==0)\n\t\t\t\t\t*h=*h+1 ;\n\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tk++ ; \n\t } \n\n\t\n}\n\n\n\nint main ()\n{\n\tint t ; \n\tscanf(\"%d\",t) ; \n\tlong long T1[100] , T2[100] ; \n\tsaisir(T1,T2 ,t) ;\n\tlong long h ;\n\tcalcul(t,T1,T2,&h) ;\n\tint  j ; \n\tfor (j=0 ; j<t ; j++)\n        printf(\"%lld\\n\", h ) ;\n\t\n\t\n\t\n\treturn 0 ;\n }", "fixed": "#include <stdio.h>\n\n\nlong long power_dix(long long a){\n\tlong long i,c=1;\n\tfor (i=0;i<a;i++)\n\t\tc=c*10;\n\treturn c;\n}\n\nlong long ddeb(long long b){\n\tlong long c=0;\n\twhile((b/10)!=0){\n\t\tc++;\n\t\tb=b/10;}\n\treturn(c+1);\n}\n\nlong long combient(long long a,long long b){\n\tif( b == (power_dix(ddeb(b)) - 1) )\n\t\treturn a*ddeb(b);\n\telse\n\t\treturn a*(ddeb(b)-1);\n}\n\nint main(){\n\tint n;scanf(\"%d\",&n);\n\tlong long T[2*n];\n\tlong long i;\n\tfor (i=0;i<2*n;i+=2)\n\t\tscanf(\"%lld %lld\",&T[i],&T[i+1]);\n\tfor (i=0;i<2*n;i+=2)\n\t\tprintf(\"%lld\\n\",combient(T[i],T[i+1]));\nreturn 0;}"}
{"similarity_score": 0.48212226066897346, "equal_cnt": 16, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "e8a61d8b5f105f0770276a6433849dc2", "bug_code_uid": "f9cfb1138404beeab9e39edf93d14cc8", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "266f4315fde762c43973438fbd7ba826", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,n,m,a,b,c,s=0;\n    scanf(\"%d\\n\",&n);\n    char s1[1000],s2[1000];\n    gets(s1);\n    gets(s2);\n    for(i=0;i<n;i++)\n    {\n        c=s1[i]-s2[i];\n        s=s+c;\n    }\n    printf(\"%d\",s);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,n,m,a=0,b=0,c=0,d=0;\n    scanf(\"%d\\n\",&n);\n    char s[1000],t[1000];\n    gets(s);\n    gets(t);\n    for(i=0;i<n;i++)\n    { d=1;\n        if(d==1)\n        {\n            c=s[i]-t[i];\n        if(c<0) c=c*-1;\n        }\n        d=2;\n        if(d==2)\n        {\n            if(s[i]>t[i])\n            {\n                b=(57-s[i])+(t[i]-'0')+1;\n            }\n            else if(t[i]>s[i])\n            {\n                b=(57-t[i])+(s[i]-'0')+1;\n            }\n        }\n        if(b>c) a=a+c;\n        else a=a+b;\n    }\n\n    printf(\"%d\",a);\n    return 0;\n\n}"}
{"similarity_score": 0.5605095541401274, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "aa2866fbfcef904b0b327c216bc832f0", "bug_code_uid": "ec10e7cbd52c4198620ec91b400d6aa6", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "53dbd7e7ccee6c316c6e4025c48a2aa5", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid\tcheck(char *s, int d)\n{\n\tint\ti;\n\tint\tres;\n\n\ti = 0;\n\twhile (s[i] && i < d)\n\t{\n\t\tif (i == 0)\n\t\t\tres = s[i] - 96;\n\t\tif (s[i + 1] && s[i] < s[i + 1])\n\t\t\tres = s[i + 1] - 96;\n\t\ti++;\n\t}\n\tprintf(\"%d\\n\", res);\n}\n\nint\tmain()\n{\n\tint\t\tt;\n\tint\t\ts;\n\tchar\t*str;\n\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%d\", &s);\n\t\tstr = calloc(s + 1, sizeof(char));\n\t\tscanf(\"%s\", str);\n\t\tcheck(str, s);\n\t\tfree(str);\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint\tcheck(char *s, int d)\n{\n\tint\ti;\n\tint\tres;\n\n\ti = 0;\n\tres = s[i];\n\twhile (s[i])\n\t{\n\t\tif (s[i] > res)\n\t\t\tres = s[i];\n\t\ti++;\n\t}\n\treturn (res - 96);\n}\n\nint\tmain()\n{\n\tint\t\tt;\n\tint\t\ts;\n\tchar\tstr[100];\n\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%d\", &s);\n\t\tscanf(\"%s\", str);\n\t\tprintf(\"%d\\n\", check(str, s));\n\t}\n}\n"}
{"similarity_score": 0.22511627906976744, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "cf42e41fbb20a346207567e9f5e4ccc7", "bug_code_uid": "03ca4a1763f29bde0f541bd114360137", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "b27d5821c1a80ed0a536f242c6d9917e", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n//codeforces 1216A\n\nint main()\n{\n\t int n,i,ans;\n\t char str[50000];\n\n    while (scanf (\"%d\\n%s\",&n,str) != EOF)\n    {\n        ans = 0;\n\n        for (i=0; i<n; i+=2)\n        {\n            if (!((str[i] == 'a' && str[i+1] == 'b') || (str[i] == 'b' && str[i+1] == 'a')))\n            {\n                if (str[i] == 'a')\n                    str[i] = 'b';\n                else\n                    str[i] = 'a';\n\n                ++ans;\n            }\n        }\n\n        printf(\"%d\\n%s\\n\",ans,str);\n    }\n}\n\n\t\n\t\t\n\t\n\t\n\t\n\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\n//codeforces 1216A\n\nint main()\n{\n\t int n,i,ans;\n\t char str[500000];\n\t scanf(\"%d\",&n);\n\t scanf(\"%s\", str);\n\n     ans = 0;\n\n     for (i=0; i<n; i+=2)\n        {\n            if (!((str[i] == 'a' && str[i+1] == 'b') || (str[i] == 'b' && str[i+1] == 'a')))\n            {\n                if (str[i] == 'a')\n                    str[i] = 'b';\n                else\n                    str[i] = 'a';\n\n               ++ans;\n            }\n        }\n\n      printf(\"%d\\n%s\\n\",ans,str);\n }\n\n\n\t\n\t\t\n\t\n\t\n\t\n\t\n"}
{"similarity_score": 0.4082687338501292, "equal_cnt": 33, "replace_cnt": 22, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 32, "lang": "GNU C", "fix_code_uid": "a7510d7c20dd5941d293a22d97ddfa64", "bug_code_uid": "b2c7f32e84d7afae6615e0f6afdbc3f0", "src_uid": "5f89678ae1deb1d9eaafaab55a64197f", "apr_id": "d954ff41204c8b81bda83469beb5b43d", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint sai(const void *a,const void *b)\n{\n\treturn *(int*)a-*(int*)b;\n}\nint main( )\n{\n\tint n,i,j,k,co=0;\n\tint a[200005];\n        long long int min=99999999999999999;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++)\n\t{\n\t\tscanf(\"%d\",&a[j]);\n\t}\n\tqsort(a,n,sizeof(int),sai);\n\tfor(j=1;j<n;j++)\n\t{\n\t\tif((long long int)a[j]-(long long int)a[j-1]<=min)\n\t\t{\n\t\t\tmin=a[j]-a[j-1];\n\t\t}\n\t}\n\tfor(j=1;j<n;j++)\n\t{\n\t\tif((long long int)a[j]-(long long int)a[j-1]==min)\n\t\t{\n\t\t\tco+=1;\n\t\t}\n\t}\n\tprintf(\"%lld %d\\n\",min,co);\n\treturn 0;\n}\n", "fixed": "#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <limits.h>\n#include <stdbool.h>\n\nint cmp(const void *a,const void *b){\n\treturn *((const long *)b)-*((const long *)a);\n}\n\nint main(){\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tlong a[n];\n\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%ld\",a+i);\n\t}\n\n\tqsort(a,n,sizeof(long),cmp);\n\n\tlong min_dist=LONG_MAX;\n\tint num_min_pair=0;\n\n\tfor(i=0;i<n-1;i++){\n\t\tif(a[i]-a[i+1]<min_dist){\n\t\t\tmin_dist=a[i]-a[i+1];\n\t\t\tnum_min_pair=1;\n\t\t}else if(a[i]-a[i+1]==min_dist){\n\t\t\tnum_min_pair++;\n\t\t}\n\t}\n\n\tprintf(\"%ld %d\\n\",min_dist,num_min_pair);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9958071278825996, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "54ad59e1c139767266f3da99369217e0", "bug_code_uid": "145f4069ee043445a267d1f32394019d", "src_uid": "0ff4ac859403db4e29554ca7870f5490", "apr_id": "19f6bf417ff8610d14e881657c65aebf", "difficulty": 1300, "tags": ["number theory", "*special", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,i,max=-100000,j,a[20001],b[20000]={0},k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;n/(i+1)>=3;i++)\n    {\n        if(n%(i+1)==0)\n        {\n            for(k=0;k<=i;k++)\n            {\n                for(j=k;j<n;j=j+i+1)\n                b[i]=b[i]+a[j];\n                if(max<b[i])\n                max=b[i];\n                b[i]=0;\n            }\n        }\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i,max=-1000000000,j,a[20001],b[20000]={0},k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;n/(i+1)>=3;i++)\n    {\n        if(n%(i+1)==0)\n        {\n            for(k=0;k<=i;k++)\n            {\n                for(j=k;j<n;j=j+i+1)\n                b[i]=b[i]+a[j];\n                if(max<b[i])\n                max=b[i];\n                b[i]=0;\n            }\n        }\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}"}
{"similarity_score": 0.4613333333333333, "equal_cnt": 20, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "c0a60504bdde9fb5a017c43672ed7cca", "bug_code_uid": "766ef5bc8d7cefb9fca7877fcc5c59bd", "src_uid": "f67e221f88a8277b60a9b8fcb90a163d", "apr_id": "4e1cf6f2488028d399ac569f37d89577", "difficulty": 1700, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main(){\n\tint n;\n\tint a[10];  //a---->j\n\tint b[10];\t//\ufffd\u01f7\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0138\n\tchar s[101];\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tscanf(\"%d\",&n);\n\t//\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0772\ufffd\ufffd\ufffd\u05b5\n\twhile(n--){\n\t\tscanf(\"%s\",s);\n\t\tb[s[0]-'a']=1;\n\t\tfor(int i=0;i<strlen(s);i++){\n\t\t\tint x=1;\n\t\t\tfor(int k=0;<strlen(s)-1-i;k++){\n\t\t\t\tv*=10;\n\t\t\t}\n\t\t\ta[s[i]-'a']+=v;\n\t\t}\n\t}\n\t//\ufffd\ufffd\ufffd\ufffd\n\tfor(int i=0;i<9;i++){\n\t\tfor(int k=i+1;k<10;k++){\n\t\t\tif(a[i]<a[k]){\n\t\t\t\tint temp;\n\t\t\t\ttemp=a[i];a[i]=a[k];a[k]=temp;\n\t\t\t\ttemp=b[i];b[i]=b[k];b[k]=temp;\n\n\t\t\t}\n\t\t}\n\t}\n\n\tint sum=0;\n\tint judge=1;\n\tfor(int i=0;i<10;i++){\n\t\tif(judge==1){\n\t\t\tif(b[i]){\n\t\t\t\tsum+=(i+1)*a[i];\n\t\t\t}else{\n\t\t\t\tjudge=0;\n\t\t\t}\n\n\t\t}else{\n\t\t\tsum+=i*a[i];\n\n\t\t}\n\t}\n\n\tprintf(\"%d\",sum);\n\treturn 0;\n\n\n\n\n\n\n\n\n}\n", "fixed": "\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n\tint n;\n\tchar s[101];\n\tint a[10];\n\tint d[10];\n\tmemset(a,0,sizeof(a));\n\tmemset(d,0,sizeof(d));\n\tscanf(\"%d\",&n);\n\t//\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0772\ufffd\ufffd\ufffd\u05b5\n\twhile(n--)\n\t{\n\t\tscanf(\"%s\",&s);\n\t\tint l=strlen(s);\n\t\td[s[0]-'a']=1;\n\t\tfor(int i=0;i<l;i++)\n\t\t{\n\t\t\tint v=1;\n\t\t\tfor(int t=0;t<l-i-1;t++)\n\t\t\t{\n\t\t\t\tv*=10;\n\t\t\t}\n\t\t\ta[s[i]-'a']+=v;\n\t\t}\n\t}\n\t//\ufffd\ufffd\ufffd\ufffd\n\tfor(int i=0;i<9;i++)\n\t{\n\t\tfor(int t=i+1;t<10;t++)\n\t\t{\n\t\t\tif(a[t]>a[i])\n\t\t\t{\n\t\t\t\tint k;\n\t\t\t\tk=a[t];a[t]=a[i];a[i]=k;\n\t\t\t\tk=d[t];d[t]=d[i];d[i]=k;\n\t\t\t}\n\t\t}\n\t}\n\tint m=1;\n\tint sum=0;\n\tfor(int i=0;i<10;i++)\n\t{\n\t\tif(m==1)\n\t\t{\n\t\t\tif(d[i])\n\t\t\t{\n\t\t\t\tsum+=(i+1)*a[i];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tm=0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum+=i*a[i];\n\t\t}\n\t}\n\tprintf(\"%d\",sum);\n}\n"}
{"similarity_score": 0.9785407725321889, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ca44f80a3db4851b9b7076e0f3f0f9fd", "bug_code_uid": "dc1525aaf886feadb0fb706a4339245b", "src_uid": "98c08a3b5e5b5bb78804ff797ba24d87", "apr_id": "65316d0c259f2feade461ec33f897304", "difficulty": 1000, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int j=1; j<=t; j++)\n    {\n        char s[100010];\n        int count=1;\n        scanf(\"%s\",s);\n        for(int i=0; i<strlen(s); i++)\n        {\n            if(s[i]!='?')\n            {\n                if(s[i]==s[i+1])\n                {\n                    printf(\"-1\\n\");\n                    count=0;\n                    break;\n                }\n            }\n            else\n            {\n\n                if(s[i+1]!='a'&&s[i-1]!='a')\n                    s[i]='a';\n               else if(s[i+1]!='b'&&s[i-1]!='b')\n                    s[i]='b';\n              else if(s[i+1]!='c'&&s[i-1]!='c')\n                    s[i]='c';\n\n            }\n        }\n        if(count)\n        printf(\"%s\\n\",s);\n        //count=1;\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int j=1; j<=t; j++)\n    {\n        char s[100010];\n        int count=1;\n        scanf(\"%s\",s);\n        int x=strlen(s);\n        for(int i=0; i<x; i++)\n        {\n            if(s[i]!='?')\n            {\n                if(s[i]==s[i+1])\n                {\n                    printf(\"-1\\n\");\n                    count=0;\n                    break;\n                }\n            }\n            else\n            {\n\n                if(s[i+1]!='a'&&s[i-1]!='a')\n                    s[i]='a';\n               else if(s[i+1]!='b'&&s[i-1]!='b')\n                    s[i]='b';\n              else if(s[i+1]!='c'&&s[i-1]!='c')\n                    s[i]='c';\n\n            }\n        }\n        if(count)\n        printf(\"%s\\n\",s);\n        //count=1;\n    }\n}\n"}
{"similarity_score": 0.5897594077729796, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "144cfe511752aadccf94f088be310394", "bug_code_uid": "87eebcaf01a427f475b0e77223fd18d6", "src_uid": "7c778289806ceed506543ef816c587c9", "apr_id": "cff399584cfa9385cb30db10ceac0b35", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\nstruct solve{\n    int status;\n    int value;\n}arr[250000];\nint compare(struct solve *a,struct solve *b){\nreturn a->value-b->value;\n}\nint find_smallest(int size){\n int i; int min=INT_MAX; int min_index;\n for(i=0;i<size;i++){\n if(arr[i].value<min && arr[i].status==1){\n min=arr[i].value;\n min_index=i;}\n }\n return min_index;\n}\nint main(){\nint a,b,c,d,e,f,g;\nscanf(\"%d%d%d\",&a,&b,&c);\nint i;int added=0;\nfor(i=0;i<a;i++){\nscanf(\"%d\",&arr[i+1].value);\n}\nfor(i=0;i<c;i++){\nint x,y;\nscanf(\"%d%d\",&x,&y);\nif(x==2){\nif(arr[y].status==1){\n        printf(\"YES\\n\");\n}\nelse printf(\"NO\\n\");\n}\nif(x==1 && added!=b){\narr[y].status=1;\nadded++;\n}\nelse if(x==1 && added==b){\nint removal=find_smallest(a);\narr[removal].status=0;\narr[y].status=1;\n}\n}\n}\n", "fixed": "#include<stdio.h>\n#include<limits.h>\nstruct info{\nint index;\nint value;\n}arr1[500];\nstruct solve{\n    int status;\n    int value;\n}arr[250000];\nint compare(struct info *a,struct info *b){\nreturn a->value-b->value;\n}\nint main(){\nint a,b,c,d,e,f,g;\nint first=0;\nscanf(\"%d%d%d\",&a,&b,&c);\nint i;int added=0;\nfor(i=0;i<a;i++){\nscanf(\"%d\",&arr[i+1].value);\n}\nfor(i=0;i<c;i++){\nint x,y;\nscanf(\"%d%d\",&x,&y);\nif(x==2){\nif(arr[y].status==1){\n        printf(\"YES\\n\");\n}\nelse{ printf(\"NO\\n\");\n        }\n}\nif(x==1 && added!=b){\narr[y].status=1;\narr1[first].value=arr[y].value;\narr1[first++].index=y;\nadded++;\nqsort(arr1,first,sizeof(struct info),compare);\n}\nelse if(x==1 && added==b){\nif(arr[y].value>arr1[0].value){\narr[arr1[0].index].status=0;\narr1[0].value=arr[y].value;\narr1[0].index=y;\narr[y].status=1;\nqsort(arr1,first,sizeof(struct info),compare);\n}\n}\n}\n}\n"}
{"similarity_score": 0.9877149877149877, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "11a6fece2473a0b496f5841b07326350", "bug_code_uid": "48271c372a40cdfc99ae4e7e60251aab", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "e760ac0fb40eace61aeccf331b2842e7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stido.h>\nmain()\n{\n    int a[4],m=0,i;\n    for(i=0;i<4;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>m) m=a[i];\n    }\n    for (i=0;i<4;i++)\n        if((m-a[i])!=0) printf(\"%d\",m-a[i]);\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int a[4],m=0,i;\n    for(i=0;i<4;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>m) m=a[i];\n    }\n    for (i=0;i<4;i++)\n        if((m-a[i])!=0) printf(\"%d \",m-a[i]);\n}\n"}
{"similarity_score": 0.9250645994832042, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "47a12194a6e973cbac8d89ae66929083", "bug_code_uid": "b2a3aea89724965dc0d5683205830b43", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "2b1c6e99d19bc78f14ce7c557a0ea864", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\n\nvoid swap(int *xp, int *yp) \n{ \n    int temp = *xp; \n    *xp = *yp; \n    *yp = temp; \n} \n  \n// A function to implement bubble sort \nvoid bubbleSort(int arr[], int n) \n{ \n   int i, j; \n   for (i = 0; i < n-1; i++)       \n  \n       // Last i elements are already in place    \n       for (j = 0; j < n-i-1; j++)  \n           if (arr[j] > arr[j+1]) \n              swap(&arr[j], &arr[j+1]); \n} \n\nint main(){\n\t\n\tint n;\n\tint arr[101];\n\tscanf(\"%d\",&n);\n\t\n\tfor(int i = 0 ; i<n;i++){\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tif(n==1){\n\t\tprintf(\"NO\");\n\t}\n\telse{\n\t\t\tbubbleSort(arr,n);\n\t\n\t\n\tif(arr[0]>arr[1]){\n\t\tprintf(\"NO\");\n\t}\n\telse {\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tif(arr[i]<arr[i+1]){\n\t\t\t\tprintf(\"%d\",arr[i+1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n \n \nvoid swap(int *xp, int *yp) \n{ \n    int temp = *xp; \n    *xp = *yp; \n    *yp = temp; \n} \n  \n// A function to implement bubble sort \nvoid bubbleSort(int arr[], int n) \n{ \n   int i, j; \n   for (i = 0; i < n-1; i++)       \n  \n       // Last i elements are already in place    \n       for (j = 0; j < n-i-1; j++)  \n           if (arr[j] > arr[j+1]) \n              swap(&arr[j], &arr[j+1]); \n} \n \nint main(){\n\t\n\tint n;\n\tint arr[101];\n\tscanf(\"%d\",&n);\n\t\n\tfor(int i = 0 ; i<n;i++){\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tif(n==1){\n\t\tprintf(\"NO\");\n\t}\n\telse{\n\t\tbubbleSort(arr,n);\n\t\n\t\n\t\tif(arr[0]==arr[n-1]){\n\t\t\tprintf(\"NO\");\n\t\t}\n\t\telse{\n\t\t\tfor(int i = 0;i<n;i++){\n\t\t\t\tif(arr[0]<arr[i]){\n\t\t\t\t\tprintf(\"%d\",arr[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n}\n \n\treturn 0;\n}"}
{"similarity_score": 0.20677966101694914, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b9eca6c2807802fdefbc96ff36ba0da0", "bug_code_uid": "ca9b017da1eed1248fc425e977210f7f", "src_uid": "c659bdeda1c1da08cfc7f71367222332", "apr_id": "c53adecfcf17fa74008d9d64969ded9e", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100001],b[100001];\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    int i,j,l1=strlen(a),l2=strlen(b),c=0,c2=0;\n    if(l1!=l2)\n        {\n            printf(\"NO\\n\");\n            return 0;\n        }\n    for(i=0;i<l1;i++)\n    {\n        if(a[i]!=b[i] && i==l1-1) {printf(\"NO\\n\"); return 0;}\n        if(a[i]!=b[i])\n        {\n            for(j=i+1;j<l1;j++)\n            {\n                if(a[i]!=b[i] && a[i]==b[j]&& b[i]==a[j])\n                {\n                    char temp=a[i];\n                    a[i]=a[j];\n                    a[j]=temp;\n                    c=1; break;\n                }\n            }\n            if(c==1) break;\n        }\n    }\n    for(i=0;i<l1;i++)\n    { if(a[i]!=b[i]) c2=1; break;}\n    if(c2==1) printf(\"NO\\n\");\n    else printf(\"YES\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>//AnishG\n#include<string.h>\nint main()\n{\n\tchar a[100001],b[100001];\n\tscanf(\"%s%s\",a,b);\n\tint i,n=0,s=0,len1,len2;\n\tlen1=strlen(a);\n\tlen2=strlen(b);\n\tfor(i=0;i<len1 && i<len2;i++)\n\t{\n\t\tif(a[i]==b[i])\n\t\t\tcontinue;\n\t\tn++;\n\t\ts = s + (a[i]-b[i]);\n\t}\n\tif(len1==len2 && n==2 && s==0)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9907120743034056, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fbd986684e854a06fdef466180343ea1", "bug_code_uid": "49f26320ed9e67ded1a2936e1b7b7595", "src_uid": "2fa3e88688b92c27ad26a23884e26009", "apr_id": "6108d840faf24eb6e95685db56ea2c25", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main()\n{\n    int i,j,t,k,n;\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++)\n    {\n        scanf(\"%d\",&n);\n        printf(\"%d 1/n\",n-1);\n    }\n}", "fixed": "#include <stdio.h>\n \nint main()\n{\n    int i,j,t,k,n;\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++)\n    {\n        scanf(\"%d\",&n);\n        printf(\"%d 1\\n\",n-1);\n    }\n}\n"}
{"similarity_score": 0.5813953488372093, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "fd3d22b02b5e8950da54526ce2e708c7", "bug_code_uid": "93402dd6f277549bc065286836092aaa", "src_uid": "09236a3faa7fce573a4e5e758287040f", "apr_id": "5aba5eba51e71d432d4c013c5cfa5470", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,x,i,s=0,n;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld\",&x);\n        for(i=1;i<=x;i++)\n        {\n            scanf(\"%lld\",&n);\n            s=s+n;\n        }\n        printf(\"%lld\\n\",s/x);\n        s=0;\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,x,i,s=0,m,j,n,c=0;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        c=0;\n        scanf(\"%lld\",&x);\n        long long int n[x];\n        for(i=0;i<x;i++)\n        {\n            scanf(\"%lld\",&n[i]);\n        }\n        for(i=1;i<=x;i++)\n        {\n            for(j=0;j<x;j++)\n            {\n                if(n[j]>=i) c++;\n            }\n            if(c>=i) m=i;\n            else break;\n            c=0;\n        }\n        printf(\"%lld\\n\",m);\n    }\n}\n"}
{"similarity_score": 0.8552188552188552, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "45b680f8dec0fd8f7a7d4651bb7f70a3", "bug_code_uid": "d4f7ce73fd3188448b132047daff4cf3", "src_uid": "2e6ddb2b11f8ac857e81d4b9b0c7d783", "apr_id": "7554de8ed724ff4b632f53229b720eb4", "difficulty": 800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main ()\r\n{\r\n    int n,i,l;\r\n    char a[100002];\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%s\",&a);\r\n        int c=0;\r\n        l=strlen(a);\r\n        for(i=0;i<l;i++){\r\n            if(a[i]=='0') c++;\r\n        }\r\n        if(!c) printf(\"0\\n\");\r\n        else if(c==l||(c!=l&&c==1)) printf(\"1\\n\");\r\n        else printf(\"2\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main ()\r\n{\r\n    int n,i,l;\r\n    char a[100002];\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%s\",&a);\r\n        int c=0;\r\n        l=strlen(a);\r\n        for(i=0;i<l;i++){\r\n            if(a[i]=='0') {\r\n                c++;\r\n                while(a[i+1]=='0'&&i<l){\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        if(!c) printf(\"0\\n\");\r\n        else if(c==l||(c!=l&&c==1)) printf(\"1\\n\");\r\n        else printf(\"2\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.23442319555829735, "equal_cnt": 24, "replace_cnt": 17, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "48ed9ab4ef8b08f1a1336c3637583a46", "bug_code_uid": "48b363e9e8b466b8d2bab9ce1c6463b8", "src_uid": "7c778289806ceed506543ef816c587c9", "apr_id": "bb28a17c67e9adc6f4db229825f1bef0", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 150000\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ib - ia;\n}\n\nint inthere(int *aa, int a, int k) {\n\tint i;\n\n\tfor (i = 0; i < k; i++)\n\t\tif (aa[i] == a)\n\t\t\treturn 1;\n\treturn 0;\n}\n\nint main() {\n\tstatic int tt[N], tt_[N], online[N];\n\tint n, k, k_, q, i;\n\n\tscanf(\"%d%d%d\", &n, &k, &q);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &tt[i]);\n\t\ttt_[i] = tt[i];\n\t}\n\tqsort(tt, n, sizeof *tt, compare);\n\tk_ = 0;\n\tfor (i = 0; i < q; i++) {\n\t\tint type, id;\n\n\t\tscanf(\"%d%d\", &type, &id), id--;\n\t\tif (type == 1) {\n\t\t\tonline[id] = 1;\n\t\t\tk_++;\n\t\t} else {\n\t\t\tif (!online[id])\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\telse if (k_ <= k)\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\telse {\n\t\t\t\tif (inthere(tt, tt_[id], k)) {\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\tk_ = k;\n\t\t\t\t} else {\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tk_ = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 150000\n#define INF 0x3f3f3f3f\n\nint main() {\n\tstatic int display[6], tt[N];\n\tint n, k, q, i, cnt;\n\n\tscanf(\"%d%d%d\", &n, &k, &q);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &tt[i]);\n\tcnt = 0;\n\twhile (q--) {\n\t\tint type, id, imin, yes;\n\n\t\tscanf(\"%d%d\", &type, &id), id--;\n\t\tif (type == 1) {\n\t\t\timin = -1;\n\t\t\tif (cnt == k) {\n\t\t\t\tint min;\n\n\t\t\t\tmin = INF;\n\t\t\t\tfor (i = 0; i < cnt; i++)\n\t\t\t\t\tif (min > display[i]) {\n\t\t\t\t\t\timin = i;\n\t\t\t\t\t\tmin = display[i];\n\t\t\t\t\t}\n\t\t\t\tif (tt[id] > min)\n\t\t\t\t\tdisplay[imin] = tt[id];\n\t\t\t} else\n\t\t\t\tdisplay[cnt++] = tt[id];\n\t\t} else {\n\t\t\tyes = 0;\n\t\t\tfor (i = 0; i < cnt; i++)\n\t\t\t\tif (tt[id] == display[i]) {\n\t\t\t\t\tyes = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tprintf(yes ? \"YES\\n\" : \"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5202020202020202, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "06eebd1358c39747a2b053d53a566af2", "bug_code_uid": "21c72003ea8bbb91c9e3cb95da85c941", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "5386370986a49b6033faf31967a142e6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tprintf(\"%d %d\\n\",1-n,n);\n\t}\n\treturn 0;\n}\n\t\t   \t \t   \t\t  \t\t  \t\t \t   \t\t\t\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n;\n\tscanf(\"%lld\", &n);\n\tlong long int a, b, c;\n\n\twhile (n--)\n\t{\n\t\tscanf(\"%lld\", &a);\n\t\tb = -a + 1;\n\t\tc = a;\n\t\tprintf(\"%lld %lld\\n\", b,c);\n\t}\n\treturn 0;\n}\n \t\t \t\t\t\t \t \t \t \t\t\t \t \t\t \t \t"}
{"similarity_score": 0.9877949552481693, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "eddd6b7890cf826b9c9d511b9751bc3c", "bug_code_uid": "528a600727414c01f56b2f451c305492", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "20da32677fa9c463454eed15f8595c09", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int h1, a1, c1, h2, a2;\n    scanf(\"%d %d %d %d %d\", &h1, &a1, &c1, &h2, &a2);\n    int curH = h1;\n    int Ans[1000];\n    int Cnt = 0;\n    while(1) {\n        if(curH > a2) {\n            h2 -= a1;\n            Ans[Cnt++] = 0;\n        } else {\n            curH += c1;\n            if(curH > h1) {\n                h1 = curH;\n            }\n            Ans[Cnt++] = 1;\n        }\n        curH -= a2;\n        if(h2 <= 0) {\n            break;\n        }\n    }\n    printf(\"%d\\n\", Cnt);\n    for(int i = 0; i < Cnt; ++i) {\n        puts(Ans[i] ? \"HEAL\" : \"STRIKE\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int h1, a1, c1, h2, a2;\n    scanf(\"%d %d %d %d %d\", &h1, &a1, &c1, &h2, &a2);\n    int curH = h1;\n    int Ans[20000];\n    int Cnt = 0;\n    while(1) {\n        if(curH > a2 || a1 >= h2) {\n            h2 -= a1;\n            Ans[Cnt++] = 0;\n        } else {\n            curH += c1;\n            if(curH > h1) {\n                h1 = curH;\n            }\n            Ans[Cnt++] = 1;\n        }\n        curH -= a2;\n        if(h2 <= 0) {\n            break;\n        }\n    }\n    printf(\"%d\\n\", Cnt);\n    for(int i = 0; i < Cnt; ++i) {\n        puts(Ans[i] ? \"HEAL\" : \"STRIKE\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8379888268156425, "equal_cnt": 4, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "9e83592afd7623bece0558eaa52693d6", "bug_code_uid": "8f7f7a3b1228b4890675d5b1d2b0b18b", "src_uid": "c9744e25f92bae784c3a4833c15d03f4", "apr_id": "cbb1bb31121e1a5174490a3404b6b5ca", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(int argc, char const *argv[])\n{\n\tint len, i;\n\tint primero=0;\n\tint ultimo=0;\n\tint b=0;\n\tint dec=0;\n\tint sol=0;\n\tchar input[1000];\n\tchar * token;\n\tint * array;\n\tscanf(\"%d\", &len);\n\tarray=(int *)malloc(sizeof(int)*len); \n\tscanf(\"%d\",&array[0]);\n\tfor (i = 1; i < len; ++i)\n\t{\n\t\tscanf(\"%d\",&array[i]);\n\t\tif(array[i]<array[i-1]){\n\t\t\tif(dec==0){\n\t\t\t\tif(b==0){\n\t\t\t\t\tb=1;\n\t\t\t\t\tdec=1;\n\t\t\t\t\tprimero=i-1;\n\t\t\t\t\twhile(array[primero]==array[primero-1]){\n\t\t\t\t\t\tprimero--;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsol=0;\n\t\t\t\t\tdec=0;\n\t\t\t\t\ti=len;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(array[i]>array[i-1]){\n\t\t\tif(dec==1){\n\t\t\t\tultimo=i-1;\n\t\t\t\tdec=0;\n\t\t\t\tsol=1;\n\t\t\t\tif(array[i]<array[primero] || (primero !=0 && array[ultimo]<array[primero-1])){\n\t\t\t\t\tsol=0;\n\t\t\t\t\ti=len;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dec==1){\n\t\tultimo=len-1;\n\t\tif(primero != 0 && array[ultimo]<array[primero-1]){\n\t\t\tprintf(\"h\\n\");\n\t\t\tsol=0;\n\t\t}else{\n\t\t\tsol=1;\n\t\t}\n\t}\n\tif (ultimo==0)\n\t{\n\t\tsol=1;\n\t}\n\tif(sol==1){\n\t\tprintf(\"yes\\n\");\n\t\tprintf(\"%d %d\\n\", primero+1, ultimo+1);\n\t}else{\n\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(int argc, char const *argv[])\n{\n\tint len, i;\n\tint primero=0;\n\tint ultimo=0;\n\tint b=0;\n\tint dec=0;\n\tint sol=0;\n\tchar input[1000];\n\tchar * token;\n\tint * array;\n\tscanf(\"%d\", &len);\n\tarray=(int *)malloc(sizeof(int)*len); \n\tscanf(\"%d\",&array[0]);\n\tfor (i = 1; i < len; ++i)\n\t{\n\t\tscanf(\"%d\",&array[i]);\n\t\tif(array[i]<array[i-1]){\n\t\t\tif(dec==0){\n\t\t\t\tif(b==0){\n\t\t\t\t\tb=1;\n\t\t\t\t\tdec=1;\n\t\t\t\t\tprimero=i-1;\n\t\t\t\t\twhile(array[primero]==array[primero-1]){\n\t\t\t\t\t\tprimero--;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsol=0;\n\t\t\t\t\tdec=0;\n\t\t\t\t\ti=len;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(array[i]>array[i-1]){\n\t\t\tif(dec==1){\n\t\t\t\tultimo=i-1;\n\t\t\t\tdec=0;\n\t\t\t\tsol=1;\n\t\t\t\tif(array[i]<array[primero] || (primero !=0 && array[ultimo]<array[primero-1])){\n\t\t\t\t\tsol=0;\n\t\t\t\t\ti=len;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dec==1){\n\t\tultimo=len-1;\n\t\tif(primero != 0 && array[ultimo]<array[primero-1]){\n\t\t\tsol=0;\n\t\t}else{\n\t\t\tsol=1;\n\t\t}\n\t}\n\tif (ultimo==0)\n\t{\n\t\tsol=1;\n\t}\n\tif(sol==1){\n\t\tprintf(\"yes\\n\");\n\t\tprintf(\"%d %d\\n\", primero+1, ultimo+1);\n\t}else{\n\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9559082892416225, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "731c925ac85c9e736645d803a4111529", "bug_code_uid": "d022c8307281ec743ae7785fc3bba0f6", "src_uid": "9964bfdcfdd041b839ce120019e8220f", "apr_id": "005e6e0a7514ede54b5768feceafb4e6", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long last(long long n)\n{\n    return (n%10);\n}\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long n,m,s=0,d,tt;\n        scanf(\"%lld%lld\",&n,&m);\n        if(m%10==0)\n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        d=n/m;\n        if(m&1)\n            s=(d/10)*45;\n        else\n            s=(d/10)*40;\n        d%=10;\n\n        for(i=1; i<=d; i++)\n        {\n            tt=m*i;\n            s+=last(tt);\n        }\n        printf(\"%lld\\n\",s);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long last(long long n)\n{\n    return (n%10);\n}\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long n,m,s=0,d,tt;\n        scanf(\"%lld%lld\",&n,&m);\n        if(m%10==0)\n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        d=n/m;\n        if(m%5==0)\n            s=(d/10)*25;\n        else if(m&1)\n            s=(d/10)*45;\n        else\n            s=(d/10)*40;\n        d%=10;\n        for(i=1; i<=d; i++)\n        {\n            tt=m*i;\n            s+=last(tt);\n        }\n        printf(\"%lld\\n\",s);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9662162162162162, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "335f93b89ec3cf97fb816231103e96c5", "bug_code_uid": "2a24703f8659d018e030a0be04edbc72", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "93cf671048dfdbbbcb618d848e7fc32d", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() \n{   int n,m,k=1,i;\n    int v=0,p=0;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\twhile(k<=n)\n\t{ scanf(\"%d\",&i);\n\t  arr[i]=k;\n\t  ++k;\n\t}\n\tscanf(\"%d\",&m);\n\tk=0;\n\twhile(k<m)\n\t{ scanf(\"%d\",&i);\n\t  v=v+arr[i];\n\t  p=p+(n-arr[i]+1);\n\t  ++k;\n\t}\n\tprintf(\"%d %d\",v,p);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() \n{   int n,m,k=1,i;\n    long long int v=0,p=0;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\twhile(k<=n)\n\t{ scanf(\"%d\",&i);\n\t  arr[i]=k;\n\t  ++k;\n\t}\n\tscanf(\"%d\",&m);\n\tk=0;\n\twhile(k<m)\n\t{ scanf(\"%d\",&i);\n\t  v=v+arr[i];\n\t  p=p+(n-arr[i]+1);\n\t  ++k;\n\t}\n\tprintf(\"%lld %lld\",v,p);\n\treturn 0;\n}"}
{"similarity_score": 0.9382422802850356, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "29ad121d650e6f2bc54f7f3462fff643", "bug_code_uid": "c8aa8a066fdb392bea0d702a3d52a3df", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "567a6c7d076b607d32da24136ba8eb7f", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\nint h1,c1,a1,a2,h2;\n\nscanf(\"%d %d %d %d %d\",&h1,&a1,&c1,&h2,&a2);\n\nint arr[10000];\nint count=0;\n\nwhile(h2>0){\n\n\tif(h1<=a2){\n\t\n\t\tarr[count]=0;\n\t\tcount++;\n\t\th1+=c1;\t\n\t}\n\n\telse{\n\t\n\t\tarr[count]=1;\n\t\tcount++;\n\t\th2-=a1;\n\t}\n\n\th1-=a2;\n}\n\nprintf(\"%d\\n\",count);\nint i=0;\nwhile(i<count){\n\n\tif(arr[i]==0)\n\t\tprintf(\"HEAL\\n\");\n\telse\n\t\tprintf(\"STRIKE\\n\");\n\ti++;\n}\n\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main(){\n\nint h1,c1,a1,a2,h2;\n\nscanf(\"%d %d %d %d %d\",&h1,&a1,&c1,&h2,&a2);\n\nint arr[10000];\nint count=0;\n\nwhile(h2>0){\n\n\tif(h2<=a1){\n\t\tarr[count]=1;\n\t\tcount++;\n\t\tbreak;\n\t}\n\tif(h1<=a2){\n\t\n\t\tarr[count]=0;\n\t\tcount++;\n\t\th1+=c1;\t\n\t}\n\n\telse{\n\t\n\t\tarr[count]=1;\n\t\tcount++;\n\t\th2-=a1;\n\t}\n\n\th1-=a2;\n}\n\nprintf(\"%d\\n\",count);\nint i=0;\nwhile(i<count){\n\n\tif(arr[i]==0)\n\t\tprintf(\"HEAL\\n\");\n\telse\n\t\tprintf(\"STRIKE\\n\");\n\ti++;\n}\n\nreturn 0;\n}\n\n"}
{"similarity_score": 0.9978655282817502, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e473a8ad093c09f08c5efe29e75b6bb4", "bug_code_uid": "d52388185168818ea1c6635c63c6b3d2", "src_uid": "1524c658129aaa4175208b278fdc467c", "apr_id": "17f4677b7e445646b273f8c4ba39d9cb", "difficulty": 1100, "tags": ["constructive algorithms"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int i,j,k,n,max=-1,x,y,s[100][100],f[100],a[100];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        f[i]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&s[i][j]);\n        }\n    }\n    for(j=1;j<=n;j++)\n    {\n        max=-1;\n        for(i=1;i<=n;i++)\n        {\n            if(i==j)\n            {\n                continue;\n            }\n            if(s[i][j]>max)\n            {\n                max=s[i][j];\n            }\n        }\n        a[j]=max;\n        //printf(\"p %d\\n\",a[j]);\n        f[max]++;\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(f[a[i]]>1)\n        {\n            j=1;\n            while(f[j]>0)\n            {\n                j++;\n            }\n            f[a[i]]--;\n            a[i]=j;\n            f[j]++;\n        }\n    }\n    for(i=1;i<=n;i++)\n    {\n        printf(\"%d \",a[i]);\n    }\n    printf(\"\\n\");\n    main();\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n    int i,j,k,n,max=-1,x,y,s[100][100],f[100],a[100];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        f[i]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&s[i][j]);\n        }\n    }\n    for(j=1;j<=n;j++)\n    {\n        max=-1;\n        for(i=1;i<=n;i++)\n        {\n            if(i==j)\n            {\n                continue;\n            }\n            if(s[i][j]>max)\n            {\n                max=s[i][j];\n            }\n        }\n        a[j]=max;\n        //printf(\"p %d\\n\",a[j]);\n        f[max]++;\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(f[a[i]]>1)\n        {\n            j=1;\n            while(f[j]>0)\n            {\n                j++;\n            }\n            f[a[i]]--;\n            a[i]=j;\n            f[j]++;\n        }\n    }\n    for(i=1;i<=n;i++)\n    {\n        printf(\"%d \",a[i]);\n    }\n    //printf(\"\\n\");\n    //main();\n    return 0;\n}\n"}
{"similarity_score": 0.9866666666666667, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4916dd77593f53e052eafe2e0750d86f", "bug_code_uid": "c0c4639cba29f67d431e21eb7c6d916b", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "b3d69930c0ed54d0e3c70b55e3391fd3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<malloc.h>\nint main() {\n  int n,v,noi[50],**a,i,j,k,count[50];\n  scanf(\"%d%d\", &n, &v);\n  a = (int **)malloc(sizeof(int *) * n);\n  for(i = 0; i < n; i++) {\n    scanf(\"%d\", &noi[i]);\n    a[i] = (int *) malloc(sizeof(int) * noi[i]);\n    for(j = 0; j < noi[i]; j++)\n      scanf(\"%d\", &a[i][j]);\n  }\n  for(i = 0, k = 0; i < n; i++) {\n    for(j = 0; j < noi[i]; j++) {\n      if(a[i][j] < v) {\n        count[k] = i + 1;\n        k++;\n      }\n    }\n  }\n  printf(\"%d\\n\", k);\n  for(i = 0; i < k; i++) {\n    printf(\"%d \", count[i]);\n  }\n\n}\n", "fixed": "#include<stdio.h>\n#include<malloc.h>\nint main() {\n  int n,v,noi[50],**a,i,j,k,count[50];\n  scanf(\"%d%d\", &n, &v);\n  a = (int **)malloc(sizeof(int *) * n);\n  for(i = 0; i < n; i++) {\n    scanf(\"%d\", &noi[i]);\n    a[i] = (int *) malloc(sizeof(int) * noi[i]);\n    for(j = 0; j < noi[i]; j++)\n      scanf(\"%d\", &a[i][j]);\n  }\n  for(i = 0, k = 0; i < n; i++) {\n    for(j = 0; j < noi[i]; j++) {\n      if(a[i][j] < v) {\n        count[k] = i + 1;\n        k++;\n        break;\n      }\n    }\n  }\n  printf(\"%d\\n\", k);\n  for(i = 0; i < k; i++) {\n    printf(\"%d \", count[i]);\n  }\n\n}\n"}
{"similarity_score": 0.4380475594493116, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "55a69a60d3e97b2883e451dc3e50577c", "bug_code_uid": "c6adcfff54b1810f0c481c6c6a7a6f68", "src_uid": "c11d67f223eb49c6e8315e2c88dd680d", "apr_id": "1bd46b62d7c083ff8933299fbb70e62c", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#define size 2*100000\nmain()\n{\n\tint n,i,count=0;\n\tscanf(\"%d\",&n);\n\tchar s[size+1];\nscanf(\"%s\",s);\nfor(i=0;i<strlen(s)-1;++i)\n{\n\tif((i+1)%2==1)\n\t{\n\t\tif(s[i]==s[i+1])\n\t\t{\n\t\t\tstrcpy(&s[i+1],&s[i+2]);\n\t\t\ti--;\n\t\t\tcount++;\n\t\t}\n\t}\n}\nif(strlen(s)%2==1)\n{\n\tprintf(\"%d\\n\",count+1);\n\tint f=strlen(s)-1;\n\tfor(i=0;i<f;++i)\n\t{\n\t\tprintf(\"%c\",s[i]);\n\t}\n}\nelse\n{\n\tprintf(\"%d\\n\",count);\n\tprintf(\"%s\",s);\n}\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#define size 2*100000\nmain()\n{\n\tint n,i,k=0;\n\tscanf(\"%d\",&n);\n\tstatic char s[size+1],ans[size+1];\n    scanf(\"%s\",s);\nfor(i=0;i<n;++i)\n{\n   ans[k++]=s[i];\n   while(i<n && ans[k-1]==s[i])\n   {\n      i++;\n   }\n\tif(i<n)\n\t{\n\t   ans[k++]=s[i];\t\n\t}  \t\n}\nif(k%2==1)\n{\n\tans[--k]='\\0';\n}\nprintf(\"%d\\n\",n-k);\nprintf(\"%s\",ans);\n}"}
{"similarity_score": 0.8945969884853853, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "3862a8f11d1fd38165afe8e7ac9eb103", "bug_code_uid": "172c657903e87721d19a7b6cedd0cf7f", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "9de2e1b6029c73a386276c83df2c35e0", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,x,y,a,b,i,j,k,l;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d%d\",&x,&y,&a,&b);\n        k=0;\n       if(b>2*a)\n       {\n           k=1;\n           k=(a*x)+(a*y);\n       }\n        \n        else\n        {\n            if(x>y)\n            {\n                k=(a*(x-y))+(b*y);\n            }\n            else\n            {\n                k=(a*(y-x))+(b*x);\n            }\n        }\n        printf(\"%d\\n\",k);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long long int t,x,y,a,b,i,j,k,l;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n        k=0;\n       if(b>2*a)\n       {\n           k=1;\n           k=(a*x)+(a*y);\n       }\n        \n        else\n        {\n            if(x>y)\n            {\n                k=(a*(x-y))+(b*y);\n            }\n            else if(y>x)\n            {\n                k=(a*(y-x))+(b*x);\n            }\n            \n            else\n        { \n            k=1;\n            k=(b*x);\n        }\n        }\n        printf(\"%lld\\n\",k);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9854227405247813, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4a0225b3748ff61a8a373418e6858a72", "bug_code_uid": "64fb61ed859de13144b2211d6ac8af2a", "src_uid": "bd0b14e53ade1207022464ebafdf8c9a", "apr_id": "698515cac659ff934fbab528a1508b44", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n \nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    \n    for(int i = 0; i < t; i++) {\n        int n;\n        scanf(\"%d\", &n);\n        long long A[n];\n        for(int j=0; j < n; j++)\n            scanf(\"%lld\", &A[j]);\n\n        // CODE FROM HERE\n        int fc = 0;    \n        long long res = 0;\n        \n        for(int k=0; k < n; k++) {\n            if(A[k] >= 0)\n                fc += A[k];\n            else if(fc > -A[k])\n                fc += A[k];\n            else {\n                res += -(A[k] + fc);\n                fc = 0;\n            }\n        }\n        \n        printf(\"%lld\\n\", res);\n        // CODE TILL HERE\n    }\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n \nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    \n    for(int i = 0; i < t; i++) {\n        int n;\n        scanf(\"%d\", &n);\n        long long A[n];\n        for(int j=0; j < n; j++)\n            scanf(\"%lld\", &A[j]);\n\n        // CODE FROM HERE\n        long long fc = 0;    \n        long long res = 0;\n        \n        for(int k=0; k < n; k++) {\n            if(A[k] >= 0)\n                fc += A[k];\n            else if(fc > -A[k])\n                fc += A[k];\n            else {\n                res += -(A[k] + fc);\n                fc = 0;\n            }\n        }\n\n        printf(\"%lld\\n\", res);\n        // CODE TILL HERE\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.42836041358936483, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "5a0d035180af9b34913a0af88807b407", "bug_code_uid": "135d7e9b45acca9304e2d79678151217", "src_uid": "ed449ba7c453a43e2ac5904dc0174530", "apr_id": "b1220e717dbe45a01761c2f32ee85ea6", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int f,i,j,k,t,n;\n    //int a[100]={0};\n    //printf(\"%d\\n\",a[6]);\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a[101]={0};\n        j=0;\n           //printf(\"%d\\n\",a[6]);\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&k);\n            a[k]++;\n        }\n\n        for(i=1;i<100;i++)\n        {\n            if(a[i]>0)\n            {\n                a[i]=1;\n            }\n            if(a[i]>0 && a[i+1]>0)\n            {\n                a[i]=0;\n                a[i+1]=1;\n\n            }\n\n        }\n\n\n        for(i=0;i<100;i++)\n        {\n            if(a[i]==1)\n            {\n                f=1;\n                j++;\n            }\n\n        }\n        if(f==1 && j==1 || n==1)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n\n\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int f,i,j,k,t,n,a[50];\n    //int a[100]={0};\n    //printf(\"%d\\n\",a[6]);\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        f=1;\n      scanf(\"%d\",&n);\n      for(i=0;i<n;i++)\n      scanf(\"%d\",&a[i]);\n      for(i=0;i<n;i++)\n      for(j=0;j<n-1-i;j++)\n      if(a[j]>a[j+1])\n      {  k=a[j];\n         a[j]=a[j+1];\n         a[j+1]=k;\n\t  }\n      for(i=1;i<n;i++)\n      if(a[i]-a[i-1]>1)\n      f=0;\n      if(f) printf(\"YES\\n\");\n      else printf(\"NO\\n\");\n\n    }\n}\n"}
{"similarity_score": 0.9954545454545455, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f3bdf533c707033508758a0e226d80e0", "bug_code_uid": "4b54eede7c0880c5cd472a1a8632fd57", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "601278385f4bded809c486c4b89af3b2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,h;\n    scanf(\"%d%d\",&n,&h);\n    int p[n],c,d=0;\n    for(c=0;c<n;c++)\n    {\n        scanf(\"%d\",&p[c]);\n        if(p[c]>h)\n        d++;\n    }\n    w=((d*2)+(n-d));\n    printf(\"%d\",w);\n}", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,h;\n    scanf(\"%d%d\",&n,&h);\n    int p[n],c,d=0,w;\n    for(c=0;c<n;c++)\n    {\n        scanf(\"%d\",&p[c]);\n        if(p[c]>h)\n        d++;\n    }\n    w=((d*2)+(n-d));\n    printf(\"%d\",w);\n}"}
{"similarity_score": 0.9993943064809206, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b917e4dea0f19352b3948c98e753faec", "bug_code_uid": "320bcdc5b7784743c2f617b5607483f2", "src_uid": "f827ea399e6b801c0392eac53710d950", "apr_id": "72399e3f708c4ea8d7a4ea84abf82ffb", "difficulty": 1900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#define aabs(x) ((x)>0?(x):-(x))\ndouble result[1000000];\ndouble balance[1000000];\nint main(void)\n{\n    int m,R,i,j;\n    double distance=0;\n    int temp;\n    scanf(\"%d%d\",&m,&R);\n    result[0]=2.0*R;\n    result[1]=2.0*R+sqrt(2.0)*R;\n    result[2]=2.0*R+sqrt(2.0)*R*2;\n    for(i=3;i<m;i++)\n    result[i]=result[i-1]+2.0*R;\n    balance[0]=result[0];\n    for(i=1;i<=m;i++)\n    balance[i]=(balance[i-1]+result[i]);\n    for (i=1;i<=m;i++)\n    \n        // for (j=0;j<m;j++)\n         distance=distance+(balance[m-i]+balance[i-1]-balance[0])/m;\n    /*\n    distance=2*distance;\n    if (m%2)\n      for (j=0;j<m;j++)\n          distance+=result[aabs(i-j)];\n      */       //,printf(\"%lf %d\\n-\\n\",result[aabs(i-j)],aabs(i-j));\n    printf(\"%.10lf\\n\",distance/m));   \n    //while(1);   \n    return 0;    \n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#define aabs(x) ((x)>0?(x):-(x))\ndouble result[1000000];\ndouble balance[1000000];\nint main(void)\n{\n    int m,R,i,j;\n    double distance=0;\n    int temp;\n    scanf(\"%d%d\",&m,&R);\n    result[0]=2.0*R;\n    result[1]=2.0*R+sqrt(2.0)*R;\n    result[2]=2.0*R+sqrt(2.0)*R*2;\n    for(i=3;i<m;i++)\n    result[i]=result[i-1]+2.0*R;\n    balance[0]=result[0];\n    for(i=1;i<=m;i++)\n    balance[i]=(balance[i-1]+result[i]);\n    for (i=1;i<=m;i++)\n    \n        // for (j=0;j<m;j++)\n         distance=distance+(balance[m-i]+balance[i-1]-balance[0])/m;\n    /*\n    distance=2*distance;\n    if (m%2)\n      for (j=0;j<m;j++)\n          distance+=result[aabs(i-j)];\n      */       //,printf(\"%lf %d\\n-\\n\",result[aabs(i-j)],aabs(i-j));\n    printf(\"%.10lf\\n\",distance/m);   \n    //while(1);   \n    return 0;    \n}\n"}
{"similarity_score": 0.9942575881870386, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2def0307c02a4794ce1543353537833e", "bug_code_uid": "30828a6649ac6dbc27f724c2f035a8d6", "src_uid": "bce9ebad1dc8bd5aae516c4ca9e551c0", "apr_id": "d8a3fd6713140c91d4d78264b1958a7f", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint ara[1005];\n\nint main()\n{\n    int n,i,j,mi,k,r,sum,m,l;\n    scanf(\"%d\",&n);\n    m=-1;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]>m)m=ara[i];\n    }\n    mi=-1;\n    r=1;\n    for(i=1; i<=m; i++)\n    {\n        sum=0;\n        for(j=0; j<n; j++)\n        {\n            if(ara[j]>i)sum+=(ara[j]-i);\n            else\n            {\n                l=i-ara[j];\n                if(l>2)sum+=(l-2);\n            }\n        }\n        if(mi>sum || mi<0)\n        {\n            mi=sum;\n            r=i;\n        }\n    }\n    r-=1;\n    printf(\"%d %d\\n\",r,mi);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint ara[1005];\n\nint main()\n{\n    int n,i,j,mi,k,r,sum,m,l;\n    scanf(\"%d\",&n);\n    m=-1;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]>m)m=ara[i];\n    }\n    mi=-1;\n    r=1;\n    for(i=1; i<=m; i++)\n    {\n        sum=0;\n        for(j=0; j<n; j++)\n        {\n            if(ara[j]>i)sum+=(ara[j]-i);\n            else\n            {\n                l=i-ara[j];\n                if(l>2)sum+=(l-2);\n            }\n        }\n        if(mi>sum || mi<0)\n        {\n            mi=sum;\n            r=i;\n        }\n    }\n    if(r>1)r-=1;\n    printf(\"%d %d\\n\",r,mi);\n    return 0;\n}\n"}
{"similarity_score": 0.6054216867469879, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8837190b4d4866345408896269f72fff", "bug_code_uid": "fc20162d87754614c2fa198ff4706272", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "84e3176db2a8bc9257d0d97e8b0686a1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main(void)\n{\n    char arr[1000];\n    \n    int n,a = 0, d = 0;\n scanf(\"%d\", &n);   \n    scanf(\" %s\", arr);\n    int i = 0;\n    while(arr[i]) \n    {\n        if(arr[i] == 'A') a++;\n        else d++;\n        i++;\n    }\n    if(a > d) printf(\"Anton\");\n    else if(a == d) printf(\"Friendship\");\n    else printf(\"Danik\");\n}", "fixed": "#include <stdio.h>\n \nint main(void)\n{\n    char c;\n    \n    int n,a = 0, d = 0, i;\n scanf(\"%d\", &n);   \n scanf(\"\\n\");\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%c\", &c);\n        if(c == 'A') a++;\n        else d++;\n    }\n    if(a > d) printf(\"Anton\");\n    else if(a == d) printf(\"Friendship\");\n    else printf(\"Danik\");\n}"}
{"similarity_score": 0.7908396946564885, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "4d7c1dcf82891ce99322320ffa1b594d", "bug_code_uid": "3a2cdfbd771b7cbaf1ebf7a92d880f4c", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "b73c44e85413d023645f7c6428550d35", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n,x,y,z,i,resultant=0;\n    \n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++){\n        \n        scanf(\"%d %d %d\",&x,&y,&z);\n       resultant+=(x+y+z);\n    }\n    if (resultant==0&&i==2)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n    \n   \n    getchar();\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n,x,y,z,i,xt=0,yt=0,zt=0;\n   \n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++){\n        \n        scanf(\"%d%d%d\",&x,&y,&z);\n       xt+=x;\n       yt+=y;\n       zt+=z;\n    }\n    if (xt==0&&yt==0&&zt==0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n    \n   \n    return 0;\n}\n"}
{"similarity_score": 0.22343324250681199, "equal_cnt": 24, "replace_cnt": 20, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "e21a9a41aa4a12fa301bc04183399121", "bug_code_uid": "d1f319a5cbc29d3c0c243ab297f23fc4", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "6d8432a544ed2a4868c5f967062c02ff", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\n\nint main()\n{\n\t\n\tlong long int n,a,b,p=INT_MAX,q=INT_MIN,i;\n\t\n\tscanf(\"%I64d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\t\n\t\t\n\t\tscanf(\"%I64d%I64d\",&a,&b);\n\t\tif(a>p&&b<q)\n\t\t{\n\t\t\tprintf(\"Happy Alex\");\n\t\t\tgoto label;\n\t    }\n\t\t\n\t\tp=a;\n\t\tq=b;\n\t\n\t}\n\t\n\tprintf(\"Poor Alex\");\n\t\n\tlabel:\n\treturn 0;\n}", "fixed": "\n#include<stdio.h>\n\nvoid merge(long int a[],long int l,long int mid,long int u,long int b[])\n{\n\tlong int i=l,k,j=mid+1,p=l,q=mid+1,c=0,temp1[100001],temp2[100001],d=0;\n\n\twhile(i<=mid&&j<=u)\n\t{\n\t\tif(a[i]<a[j])\n\t\t{\n\t\t\ttemp1[c++]=a[i++];\n\t\t\ttemp2[d++]=b[p++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp1[c++]=a[j++];\n\t\t\ttemp2[d++]=b[q++];\n\n\t\t}\n\t}\n\n\twhile(i<=mid)\n\t    temp1[c++]=a[i++];\n\twhile(j<=u)\n\t\ttemp1[c++]=a[j++];\n\twhile(p<=mid)\n\t\ttemp2[d++]=b[p++];\n\twhile(q<=u)\n\t\ttemp2[d++]=b[q++];\n\n      c=0;\n\t  d=0;\n\n\tfor(k=l;k<=u;k++)\n\t{\n\t\ta[k]=temp1[c++];\n\t\tb[k]=temp2[d++];\n\t}\n}\n\n\nvoid merge_sort(long int a[],long int l,long int u,long int b[])\n{\n\tif(l<u)\n\t{\n\tlong int mid=l+(u-l)/2;\n\n\tmerge_sort(a,l,mid,b);\n\tmerge_sort(a,mid+1,u,b);\n\tmerge(a,l,mid,u,b);\n\t}\n}\n\nint main()\n{\n\n     long int n,a[100001],b[100001],i,j,temp;\n\n\tscanf(\"%ld\",&n);\n\n\tfor(i=0;i<n;i++)\n\t{\n\t  scanf(\"%ld%ld\",&a[i],&b[i]);\n\t  if(i!=0&&a[i]>a[i-1]&&b[i]<b[i-1])\n\t  {\n\t\t  printf(\"Happy Alex\");\n\t\t  goto label;\n\t  }\n    }\n        merge_sort(a,0,n-1,b);\n\n\n\n        for(i=1;i<n;i++)\n\t\t{\n\t\t\tif(b[i]<b[i-1])\n\t\t\t{\n\t\t\t\tprintf(\"Happy Alex\");\n\t\t\t\tgoto label;\n\t\t\t}\n\n\t\t}\n\n\n      printf(\"Poor Alex\");\n\n\t label:\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.5584642233856894, "equal_cnt": 4, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "43c13d48b779906ba64f4c64660490eb", "bug_code_uid": "9e41e83ddd883c265550514a522db0bc", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "75494357c6763a89f3105ff6de82afd8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong int n,i,a=0,cnt=1,r,arr[100];\nchar ans[100];\nscanf(\"%ld\", &n);\nfor(i=0;i<n;i++)\n{\tscanf(\"%ld\" ,&arr[i]);\n\t\n}\n\nfor (r=0;r<n;r++)\n{\tif (arr[r]==arr[r+1])\n\t{cnt++;}\n\telse if(arr[r]!=arr[r+1])\n\t{ans[a]=cnt;\n\ta++;\n\tcnt=1;\n\t}\n}\nprintf(\"%ld\" , strlen(ans));\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong int j,n,i,a=0,cnt=1,r,arr[1000000];\nchar ans[n+1];\nscanf(\"%ld\", &n);\nfor(i=0;i<n;i++)\n{\tscanf(\"%ld\" ,&arr[i]);\n\t\n}\n\nfor(j=0;j<n;j++)\n\tif (arr[j]==arr[j+1])\n\t{continue;}\n\telse \n\t{cnt++;}\nprintf(\"%ld\" ,cnt-1);\n}\n"}
{"similarity_score": 0.998468606431853, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6f575b008e4c21a1714ca667d926b392", "bug_code_uid": "745286cb6d96be64de64903490b599f6", "src_uid": "7899a22cee29bb96d671f6188f246c21", "apr_id": "63bee197ce75d770196a46eccfb8eee6", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (void)\n{\n\tint n;\n\tscanf (\"%d\", &n);\n\tint count[10001] = {0};\n\n\tint i, x[n], y[n];\n\tfor (i = 0; i < n; i++) {\n\t\tscanf (\"%d %d\", &x[i], &y[i]);\n\t\tcount[x[i]]++;\n\t}\n\n\tint ans = n - 1;\n\tfor (i = 0; i < n; i++) {\n\t\tint diff = count[y[i]];\n\t\tprintf (\"%d %d\\n\", ans + diff, ans - diff);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main (void)\n{\n\tint n;\n\tscanf (\"%d\", &n);\n\tint count[100001] = {0};\n\n\tint i, x[n], y[n];\n\tfor (i = 0; i < n; i++) {\n\t\tscanf (\"%d %d\", &x[i], &y[i]);\n\t\tcount[x[i]]++;\n\t}\n\n\tint ans = n - 1;\n\tfor (i = 0; i < n; i++) {\n\t\tint diff = count[y[i]];\n\t\tprintf (\"%d %d\\n\", ans + diff, ans - diff);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9986338797814208, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fdb2d9c4a8b8f5ed2dba90e46cb8a4bb", "bug_code_uid": "cae14d739064800a4cf1ef96acc2070f", "src_uid": "fefec879efd4f524de00684adee7cd19", "apr_id": "3a6730afbc0ba37550bee04fb208df11", "difficulty": 800, "tags": ["brute force", "dfs and similar", "dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n, m, t;\r\n    char line[100], level[3][101];\r\n\r\n    scanf(\"%i\", &n);\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        t = 1;\r\n        scanf(\"%i\", &m);\r\n\r\n        scanf(\"%s\", &line);\r\n        for (int j = 0; j < m; j++) {\r\n            level[0][j] = line[j];\r\n        }\r\n\r\n        scanf(\"%s\", &line);\r\n        for (int j = 0; j < m; j++) {\r\n            level[1][j] = line[j];\r\n        }\r\n\r\n        for (int j = 1; j < m; j++) {\r\n            if ((level[0][j] == '1') & (level[1][j] == '1')) {\r\n                printf(\"NO\\n\");\r\n                t = 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (t == 0) {\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n, m, t;\r\n    char line[100], level[3][101];\r\n\r\n    scanf(\"%i\", &n);\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        t = 0;\r\n        scanf(\"%i\", &m);\r\n\r\n        scanf(\"%s\", &line);\r\n        for (int j = 0; j < m; j++) {\r\n            level[0][j] = line[j];\r\n        }\r\n\r\n        scanf(\"%s\", &line);\r\n        for (int j = 0; j < m; j++) {\r\n            level[1][j] = line[j];\r\n        }\r\n\r\n        for (int j = 1; j < m; j++) {\r\n            if ((level[0][j] == '1') & (level[1][j] == '1')) {\r\n                printf(\"NO\\n\");\r\n                t = 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (t == 0) {\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7452471482889734, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "8367aa7ff057a3d46283cad7cdc33db1", "bug_code_uid": "8d693e455d8206adf52676803af607e7", "src_uid": "935bceb69117d06eb75121c805bff69c", "apr_id": "09e17cc36f3aa083fd1bf1bd2ec1cda5", "difficulty": 900, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        int n,mod,ans;\r\n        scanf(\"%d\",&n);\r\n        int a[n],sum=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            sum+=a[i];\r\n        }\r\n        mod = sum%n;\r\n        ans = mod*(n-mod);\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        long long int sum=0,mod,ans;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            sum = sum + a[i];\r\n        }\r\n        mod = sum%n;\r\n        //printf(\"%lld \",mod);\r\n        ans = mod*(n-mod);\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n}"}
{"similarity_score": 0.7992047713717694, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "230ef8a806c3d691c745bd2442798f26", "bug_code_uid": "10388f78a32323f07995bad260de1885", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "c8fc02ab362248f8d516604ad89ee544", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"string.h\"\n\nint main(){\nint i,n;\nint c=0;\nchar str[3];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++){\n    scanf(\"%s\",str);\n    if(str[0]=='+'||str[1]=='+')\n      {  c++;}\n     else if(str[0]=='-'||str[1]=='-')\n        { c--;}\n}\nprintf(\"%d\",c);\nreturn 0;\n}", "fixed": "#include \"stdio.h\"\n#include \"string.h\"\n\nint main(){\nint i,n;\nint c=0;\nchar str[4];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++){\n    scanf(\"%s\",str);\n    if(str[0]=='+'||str[1]=='+')\n      {  c++;}\n    else\n    c--;\n}\nprintf(\"%d\",c);\nreturn 0;\n}"}
{"similarity_score": 0.9429280397022333, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a3d54cece2831e1978255b6ddb607c33", "bug_code_uid": "a5962e69d23f94c8cf3a0f23872dd6ba", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "5b61d04f69648a6a80954a51f5031e59", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint b[100],i,count=0;\nlong long a;\nscanf(\"%lld\",&a);\nfor(i=0;i<a;i++)\nscanf(\"%d\",&b[i]);\nfor(i=0;i<a;i++)\n{\nif(b[i]!=b[i+1])\ncount++;\n}\nprintf(\"%d\",count+1);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint b[100005],i,count=0;\nlong long a;\nscanf(\"%lld\",&a);\nfor(i=0;i<a;i++)\nscanf(\"%d\",&b[i]);\nfor(i=0;i<a;i++)\n{\nif(b[i]!=b[i+1])\ncount++;\n}\nprintf(\"%lld\",count);\nreturn 0;\n}"}
{"similarity_score": 0.9643366619115549, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9deb9d23433f84518930156e7df86078", "bug_code_uid": "b1f79e99adb3ca5e040399e442ed47b9", "src_uid": "66777b8719b1756bf4b6bf93feb2e439", "apr_id": "24111698a59eb7c1228cb7c19bcf714c", "difficulty": 800, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h> \r\nint main ()\r\n{\r\n\tint a,c,d,i,r;\r\n\tchar b[55];\r\n\tscanf (\"%d\",&c);\r\n\tfor(a=1;a<=c;a++)\r\n{   memset (b,0,55) ;\r\n    scanf (\"%d\",&d);\r\n\tscanf (\"%s\",b);\r\n\tfor(i=0;i<d;i++)\r\n\t{for (int t=i+1;t<=d;t++)\r\n\tif (b[i]==b[t])\r\n\t{\r\n\tr++;\r\n\tbreak;\r\n}   \r\n\t}\r\n\tint q=2*d-r;\r\n\tprintf (\"%d\\n\",q);\r\n\t}\r\nreturn 0;    \r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h> \r\nint main ()\r\n{\r\n\tint a,c,d,i,r;\r\n\tchar b[55];\r\n\tscanf (\"%d\",&c);\r\n\tfor(a=1;a<=c;a++)\r\n{   memset (b,0,55);\r\n    r=0;\r\n\tint q=0;\r\n    scanf (\"%d\",&d);\r\n\tscanf (\"%s\",b);\r\n\tfor(i=0;i<d;i++)\r\n\t{for (int t=i+1;t<=d;t++)\r\n\tif (b[i]==b[t])\r\n\t{\r\n\tr++;\r\n\tbreak;\r\n}   \r\n\t}\r\n\t q=2*d-r;\r\n\tprintf (\"%d\\n\",q);\r\n\t}\r\nreturn 0;    \r\n}\r\n"}
{"similarity_score": 0.9989304812834224, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "27ff45802f7f3616021d4369c75ab6a5", "bug_code_uid": "8cda72e3ef5a8772e13e99a9ab4aef57", "src_uid": "e6753e3f71ff13cebc1aaf04d3d2106b", "apr_id": "00435263413b2222c98a97835b7ff133", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int n, m, x, y, t;\r\n    scanf(\"%d\", &t);\r\n    while (t > 0)\r\n    {\r\n        scanf(\"%d %d\", &n, &m);\r\n        if (n > 2 && m > 2)\r\n        {\r\n            if (n == 3 && m == 3)\r\n            {\r\n                x = 2;\r\n                y = 2;\r\n            }\r\n            else\r\n            {\r\n                x = 1;\r\n                y = 1;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (n == 2 && m == 2 || m == 1 && n >= 1 || n == 1 && m >= 1)\r\n            {\r\n                x = 1;\r\n                y = 1;\r\n            }\r\n            else if (n == 2 && m > 3 || m == 2 && n > 3)\r\n            {\r\n                x = 1;\r\n                y = 1;\r\n            }\r\n            if (n == 2 && m == 3 || m == 2 && n == 3)\r\n            {\r\n                x = 2;\r\n                y = 1;\r\n            }\r\n        }\r\n\r\n        printf(\"%d %d\\n\", x, y);\r\n        t--;\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int n, m, x, y, t;\r\n    scanf(\"%d\", &t);\r\n    while (t > 0)\r\n    {\r\n        scanf(\"%d %d\", &n, &m);\r\n        if (n > 2 && m > 2)\r\n        {\r\n            if (n == 3 && m == 3)\r\n            {\r\n                x = 2;\r\n                y = 2;\r\n            }\r\n            else\r\n            {\r\n                x = 1;\r\n                y = 1;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (n == 2 && m == 2 || m == 1 && n >= 1 || n == 1 && m >= 1)\r\n            {\r\n                x = 1;\r\n                y = 1;\r\n            }\r\n            else if (n == 2 && m > 3 || m == 2 && n > 3)\r\n            {\r\n                x = 1;\r\n                y = 1;\r\n            }\r\n            if (n == 2 && m == 3 || m == 2 && n == 3)\r\n            {\r\n                x = 2;\r\n                y = 2;\r\n            }\r\n        }\r\n\r\n        printf(\"%d %d\\n\", x, y);\r\n        t--;\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9946902654867257, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e542644a469806d4c6d2ba8921de5e93", "bug_code_uid": "a3d8e492c64a0bc655a3121aac594163", "src_uid": "b0ffab0bf169f8278af48fe2d58dcd2d", "apr_id": "8f002f6a653414dc6ddda841b7e446ec", "difficulty": 1000, "tags": ["number theory", "sortings", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <math.h>\nint compare(const void *p1,const void *p2)\n    {\n        return(*(int*)p1-*(int*)p2);\n    }\nint main()\n{\n    int a,b,c,d,i,j,k,l=0;\n    scanf(\"%d\",&a);\n    int arr[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n\n    }\n    qsort(arr,a,sizeof(int),compare);\n    for(i=1;i<a;i++)\n    {\n        if(arr[i]%arr[0]!=0)\n        {\n            l++;\n        }\n    }\n    if(l==0)\n    {\n        printf(\"%d\",arr[0]);\n    }\n    else\n    {\n        printf(-1);\n    }\n\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <math.h>\nint compare(const void *p1,const void *p2)\n    {\n        return(*(int*)p1-*(int*)p2);\n    }\nint main()\n{\n    int a,b,c,d,i,j,k,l=0;\n    scanf(\"%d\",&a);\n    int arr[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n\n    }\n    qsort(arr,a,sizeof(int),compare);\n\n    for(i=1;i<a;i++)\n    {\n        if(arr[i]%arr[0]!=0)\n        {\n            l++;\n        }\n    }\n    if(l==0)\n    {\n        printf(\"%d\",arr[0]);\n    }\n    else\n    {\n        printf(\"%d\",-1);\n    }\n\n}\n"}
{"similarity_score": 0.9903774981495189, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d9cf84d6123db2a9cb246cb04bc22643", "bug_code_uid": "0169d55932a09d60110fdbdbf6695961", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "2b71490381face958d6f0f997dda70b2", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint A[101][101];\nint Z[101];\nint main(){\n\tint n;\n\tscanf(\"%d\", &n);\n\tint count=n;\n\tint i,j;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &A[i][j]);\n\t\t\tif(i!=j){\n\t\t\t\tif(A[i][j]==1){\n\t\t\t\t\tif(Z[i]==0){\n\t\t\t\t\t\tZ[i]=1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (A[i][j]==2){\n\t\t\t\t\tif(Z[j] == 0){\n\t\t\t\t\t\tZ[j]=1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(A[i][j]==3){\n\t\t\t\t\tif(Z[j]==0){\n\t\t\t\t\t\tZ[j]=1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(Z[i]==0){\n\t\t\t\t\t\tZ[i]=1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count );\n\tint flag=1;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif(Z[i]==0){\n\t\tflag=0;\n\t\t\tprintf(\"%d \",i+1);\n\t\t}\n\t}\n\tif(flag==0)\n\tputs(\"\");\n\n}", "fixed": "#include <stdio.h>\nint A[101][101];\nint Z[101];\nint main(){\n\tint n;\n\tscanf(\"%d\", &n);\n\tint count=n;\n\tint i,j;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &A[i][j]);\n\t\t\tif(i!=j){\n\t\t\t\tif(A[i][j]==1){\n\t\t\t\t\tif(Z[i]==0){\n\t\t\t\t\t\tZ[i]=1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (A[i][j]==2){\n\t\t\t\t\tif(Z[j] == 0){\n\t\t\t\t\t\tZ[j]=1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(A[i][j]==3){\n\t\t\t\t\tif(Z[j]==0){\n\t\t\t\t\t\tZ[j]=1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(Z[i]==0){\n\t\t\t\t\t\tZ[i]=1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count );\n\tint flag=1;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif(Z[i]==0){\n\t\tflag=0;\n\t\t\tprintf(\"%d \",i+1);\n\t\t}\n\t}\n\tif(flag==0)\n\tputs(\"\");\nreturn 0;\n}"}
{"similarity_score": 0.9934959349593496, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "922998272209c1c53aabbf7777066576", "bug_code_uid": "b7b82e44bb3cf0b904d265c23eb36a8d", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "4024f67e3bf3d21f3dee997f9e1f19e6", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int test;\r\n    scanf(\"%d\",&test);\r\n    while(test--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n],count[n];\r\n        for(int i=1;i<=n;i++)\r\n        scanf(\"%d\",&arr[i]);\r\n        for(int i=1;i<=n;i++)\r\n        {int c=0;\r\n            for(int j=1;j<=n;j++)\r\n            {\r\n                if(arr[i]==arr[j])\r\n                {\r\n                    c++;\r\n                }\r\n                count[i]=c;\r\n\r\n            }\r\n        }\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n\r\n            if(count[i]==1)\r\n            printf(\"%d\",i);\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int test;\r\n    scanf(\"%d\",&test);\r\n    while(test--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n],count[n];\r\n        for(int i=1;i<=n;i++)\r\n        scanf(\"%d\",&arr[i]);\r\n        for(int i=1;i<=n;i++)\r\n        {int c=0;\r\n            for(int j=1;j<=n;j++)\r\n            {\r\n                if(arr[i]==arr[j])\r\n                {\r\n                    c++;\r\n                }\r\n                count[i]=c;\r\n\r\n            }\r\n        }\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n\r\n            if(count[i]==1)\r\n            printf(\"%d\\n\",i);\r\n\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9760166840458812, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "63e69238a67adf36dc04ff759c093fc8", "bug_code_uid": "e8244f46a13133a0c2a3d88923c6e962", "src_uid": "592e219abe72054c3de1b6823a1d049d", "apr_id": "98d6c7f55dc5ed5eb71b40ee7287e786", "difficulty": 1700, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\ntypedef long long LL;\nconst LL mod=1000000007;\nchar s[4000001];\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tint x, l, i, curr;\n\t\tLL len;\n\t\tscanf(\"%d \", &x);\n\t\tscanf(\"%s%n\", s, &i);\n\t\tlen=i;\n\t\tfor(l=1;len<x;++l){\n\t\t\tcurr=len-l;\n\t\t\tfor(i=1;i<(s[l-1]-'0');++i){\n\t\t\t\tmemcpy(s+len, s+l, curr);\n\t\t\t\tlen+=curr;\n\t\t\t}\n\t\t}\n\t\tfor(;l<=x;++l){\n\t\t\tlen+=(len-l)*(s[l-1]-'1');\n\t\t\tlen%=mod;\n\t\t}\n\t\tprintf(\"%I64d\\n\", len);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\ntypedef long long LL;\nconst LL mod=1000000007;\nchar s[4000001];\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tint x, l, i, curr;\n\t\tLL len;\n\t\tscanf(\"%d \", &x);\n\t\tscanf(\"%s%n\", s, &i);\n\t\tlen=i;\n\t\tfor(l=1;len<x;++l){\n\t\t\tcurr=len-l;\n\t\t\tfor(i=1;i<(s[l-1]-'0');++i){\n\t\t\t\tmemcpy(s+len, s+l, curr);\n\t\t\t\tlen+=curr;\n\t\t\t}\n\t\t}\n\t\tfor(;l<=x;++l){\n\t\t\tif(len<l) len+=mod;\n\t\t\tlen+=(len-l)*(s[l-1]-'1');\n\t\t\tlen%=mod;\n\t\t}\n\t\tprintf(\"%I64d\\n\", len);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.990632318501171, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "049e91e845faf99bb0c9915dca1b7e7d", "bug_code_uid": "74e27d52b474ac1b1da706c3fff86012", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "7e2d29f01ab5d6c1290ecb3b7136e6aa", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    long long int a,b,c,d,e,f,i,j,k,p=1,q,r;\n    scanf(\"%I64d\",&a);\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%I64d\",&b);\n        c=(b+1);\n        d=b*4;\n        if(c%4==0)\n        {\n            p=4;\n        }\n        else if(c%2==0)\n        {\n            p=2;\n        }\n\n        r=d/p;\n        r=r+1;\n\n        printf(\"%I64d\\n\",r);\n    }\n    return 0;}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    long long int a,b,c,d,e,f,i,j,k,p=1,q,r;\n    scanf(\"%I64d\",&a);\n    for(i=0;i<a;i++)\n    {    p=1;\n        scanf(\"%I64d\",&b);\n        c=(b+1);\n        d=b*4;\n        if(c%4==0)\n        {\n            p=4;\n        }\n        else if(c%2==0)\n        {\n            p=2;\n        }\n\n        r=d/p;\n        r=r+1;\n\n        printf(\"%I64d\\n\",r);\n    }\n    return 0;}"}
{"similarity_score": 0.8618181818181818, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b548daffe89ccd8fd73f13b5753f2402", "bug_code_uid": "ae9cd679f25a885f6bf323df058dd5b8", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "df7f3f61c8121aaf77843acb560324c7", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a,b,s = 0,k = 0;\n    scanf(\"%d\",&a);\n    int arr[a];\n    for(int i = 0; i < a; ++ i)\n    {\n        scanf(\"%d\",arr[i]);\n        if(arr[i] > s)\n        {\n            s = arr[i];\n        }\n    }\n    scanf(\"%d\",&b);\n    int mas[b];\n    for(int i = 0; i < b; ++ i)\n    {\n        scanf(\"%d\",mas[i]);\n        if(mas[i] > k)\n        {\n            k = mas[i];\n        }\n    }\n    if(s > k)\n    {\n        cout << s + mas[0] << endl;\n    }\n    else\n    {\n        cout << k + arr[0] << endl;\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int a,b,s = 0,k = 0;\n    scanf(\"%d\",&a);\n    int arr[a];\n    for(int i = 0; i < a; ++ i)\n    {\n        scanf(\"%d\",&arr[i]);\n        if(arr[i] > s)\n        {\n            s = arr[i];\n        }\n    }\n    //puts(\"1\");\n    scanf(\"%d\",&b);\n    int mas[b];\n    for(int i = 0; i < b; ++ i)\n    {\n        scanf(\"%d\",&mas[i]);\n        if(mas[i] > k)\n        {\n            k = mas[i];\n        }\n    }\n    if(s > k)\n    {\n        printf(\"%d %d\",s,mas[0]);\n    }\n    else\n    {\n        printf(\"%d %d\",arr[0],k);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9990680335507922, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "654857d0d9634257ee45fa80c94f33d3", "bug_code_uid": "7b65f9919e2dd58790866a57327892e9", "src_uid": "43041076ddd0bbfac62cd4abf4536282", "apr_id": "e5d892b4f0ea85abe33b7109645f1f5f", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int k,t;\r\n    scanf(\"%d\",&t);\r\n    for(k=0;k<t;k++){\r\n            long n,a,b,c;\r\n            scanf(\"%ld\",&n);\r\n            if(n%2!=0)printf(\"-1\\n\");\r\n            else{\r\n                n=n/2;\r\n                if(n%2==0)printf(\"%ld %ld %ld\\n\",n+1,n+1,1);\r\n                else{\r\n                    a=n|(1<<1);\r\n                    if(a==n)printf(\"%ld %ld %ld\\n\",n-2,n-2,2);\r\n                    else printf(\"%ld %ld %ld\\\",n+2,n+2,2);\r\n                }\r\n            }\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int k,t;\r\n    scanf(\"%d\",&t);\r\n    for(k=0;k<t;k++){\r\n            long n,a,b,c;\r\n            scanf(\"%ld\",&n);\r\n            if(n%2!=0)printf(\"-1\\n\");\r\n            else{\r\n                n=n/2;\r\n                if(n%2==0)printf(\"%ld %ld %ld\\n\",n+1,n+1,1);\r\n                else{\r\n                    a=n|(1<<1);\r\n                    if(a==n)printf(\"%ld %ld %ld\\n\",n-2,n-2,2);\r\n                    else printf(\"%ld %ld %ld\\n\",n+2,n+2,2);\r\n                }\r\n            }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9992962702322308, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "efbabb3b3326437db683dfe1487b3b81", "bug_code_uid": "e46c0aa05e2060ca01a661bee4041ebe", "src_uid": "b5355e1f4439b198d2cc7dea01bc4bc3", "apr_id": "dd5e592fd10eb3258bbef0c0c89c13ae", "difficulty": 1200, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\nint comfunc1(const void *a ,const void * b){\n    return (*(char*)a)-(*(char*)b);\n}\nint main(void){\n   \nlong long int test,i,j,n,count,x1,y1,flag=0,o1=0,o2=0,b1,count2=0,x,a[100000]={0},m,l,max,k,sum2,z,min,f,r,o,sum1,sum=0,count1;\n\nscanf(\"%lld%lld\",&n,&m);\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n    sum+=a[i];\n}\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&x);\n    if(x<a[i]){\n    a[i]-=x;\n    }else{\n        a[i]=0;\n    }\n}\nqsort(a,n,sizeof(long long int),cmpfunc);\nfor(i=n-1;i>=m;i--){\n    sum-=a[i];\n}\nprintf(\"%lld\\n\",sum);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\nint comfunc1(const void *a ,const void * b){\n    return (*(char*)a)-(*(char*)b);\n}\nint main(void){\n   \nlong long int test,i,j,n,count,x1,y1,flag=0,o1=0,o2=0,b1,count2=0,x,a[1000000]={0},m,l,max,k,sum2,z,min,f,r,o,sum1,sum=0,count1;\n\nscanf(\"%lld%lld\",&n,&m);\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n    sum+=a[i];\n}\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&x);\n    if(x<a[i]){\n    a[i]-=x;\n    }else{\n        a[i]=0;\n    }\n}\nqsort(a,n,sizeof(long long int),cmpfunc);\nfor(i=n-1;i>=m;i--){\n    sum-=a[i];\n}\nprintf(\"%lld\\n\",sum);\nreturn 0;\n}"}
{"similarity_score": 0.9249706916764361, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7308ef4125f4f3a517fb3983091ec365", "bug_code_uid": "ae579c0b54dded4d82c8bc73d082b6a2", "src_uid": "5aae6b27f35852512a250751ef957ab9", "apr_id": "57af3300d618a8099686ada95841ed24", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdint.h>\r\n#include <stdlib.h>\r\n\r\nuint64_t dist(int i0, int j0, int i1, int j1, int i2, int j2)\r\n{\r\n  return (uint64_t) abs(i0 - i1) + abs(i0 - i2) +\r\n    abs(j0 - j1)  + abs(j0 - j2);\r\n}\r\n\r\nint main(void)\r\n{\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n\r\n  while (t--)\r\n    {\r\n      uint64_t n, m, i, j;\r\n      scanf(\"%lu%lu%lu%lu\", &n, &m, &i, &j);\r\n\r\n      int i1 = (n - i > i - 1 ? n : 1);\r\n      int j1 = (m - j > j - 1 ? m : 1);\r\n      \r\n      int i2 = 1, j2 = 1;\r\n\r\n      int check_i[] = {1, n};\r\n      int check_j[] = {1, m};\r\n\r\n      for (int _i = 0; _i < 2; ++_i)\r\n\tfor (int _j = 0; _j < 2; ++_j)\r\n\t  if (dist(check_i[_i], check_j[_j], i1, j1, i, j) <\r\n\t      dist(i2, j2, i1, j1, i, j))\r\n\t    i2 = check_i[_i], j2 = check_j[_j];\r\n\r\n      printf(\"%d %d %d %d\\n\", i1, j1, i2, j2);\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdint.h>\r\n#include <stdlib.h>\r\n\r\nuint64_t dist(int i0, int j0, int i1, int j1, int i2, int j2)\r\n{\r\n  return (uint64_t) abs(i0 - i1) + abs(i0 - i2) +\r\n    abs(j0 - j1)  + abs(j0 - j2);\r\n}\r\n\r\nint main(void)\r\n{\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n\r\n  while (t--)\r\n    {\r\n      uint64_t n, m, i, j;\r\n      scanf(\"%lu%lu%lu%lu\", &n, &m, &i, &j);\r\n\r\n      int i1 = (n - i > i - 1 ? n : 1);\r\n      int j1 = (m - j > j - 1 ? m : 1);\r\n      \r\n      int i2 = 1, j2 = 1;\r\n\r\n      int check_i[] = {1, n};\r\n      int check_j[] = {1, m};\r\n\r\n      for (int _i = 0; _i < 2; ++_i)\r\n\tfor (int _j = 0; _j < 2; ++_j)\r\n\t  if (dist(check_i[_i], check_j[_j], i1, j1, i, j) >\r\n\t      dist(i2, j2, i1, j1, i, j))\r\n\t    i2 = check_i[_i], j2 = check_j[_j];\r\n\r\n      //      printf(\"lol %lu\\n\", dist(i2, j2, i1, j1, i, j));\r\n      printf(\"%d %d %d %d\\n\", i1, j1, i2, j2);\r\n      \r\n    }\r\n}\r\n"}
{"similarity_score": 0.3518728717366629, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "0dd2e3314bd32f41071d441bded9d291", "bug_code_uid": "dd5208b5b176e938970b54c9cd2b3034", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "6306eda5fc21fd54c8f7ffa8289252d2", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*bai1111A*/\n#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar c1[1001],c2[1001];\n\tgets(c1);\n\tgets(c2);\n\tint cnt1=0,cnt2=0,cnt3=0,cnt4=0;\n\tfor(int i=0;i<strlen(c1);i++){\n\t\tif(c1[i]=='u'||c1[i]=='e'|| c1[i]=='o' || c1[i]=='a' || c1[i]=='i'){\n\t\t\tcnt1++;\n\t\t}\n\t\telse cnt2++;\n\t}\n\tfor(int i=0;i<strlen(c2);i++){\n\t\tif(c2[i]=='u'||c2[i]=='e'|| c2[i]=='o' || c2[i]=='a' || c2[i]=='i'){\n\t\t\tcnt3++;\n\t\t}\n\t\telse cnt4++;\n\t}\n\tif(cnt1==cnt3 && cnt2==cnt4){\n\t\tprintf(\"Yes\");\n\t}\n\telse printf(\"No\");\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint check(char c){\n\tif(c=='a' || c== 'i' || c=='u' || c=='e' || c=='o') return 0;\n\treturn 1;\n}\nint main(){\n\tchar c1[1001],c2[1001];\n\tgets(c1);\n\tgets(c2);\n\tint len1=strlen(c1), len2=strlen(c2);\n\tif(len1!=len2){\n\t\tprintf(\"No\");\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<len1;i++){\n\t\tif(check(c1[i])+check(c2[i])==1){\n\t\t\tprintf(\"No\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"Yes\");\n}"}
{"similarity_score": 0.9837278106508875, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fd5a8b454261a4cd30696cb34ce04b68", "bug_code_uid": "806c2b2b0ce927710e8b7e88fcbd48a3", "src_uid": "0671972bc2b6452d51d048329e6e0106", "apr_id": "9da54052bf6b258cd91a0b3b50c5fcd2", "difficulty": 900, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        long int x,y;\n        scanf(\"%ld%ld\",&x,&y);\n        long int c=x-y;\n        int v=1;\n        if(c==1)\n        printf(\"NO\\n\");\n        else{\n        if(c%2==0 || c%3==0 || c%5==0 || c%7==0 || c%11==0)\n         v=1;\n         else\n         {\n             while(c!=0){\n             c=c%10;\n             if(c%2==0 || c%3==0 || c%5==0 || c%7==0 || c%11==0)\n             {\n                 v=1;\n                 break;\n             }\n             }\n         }\n         if(v==1)\n            printf(\"yes\\n\");\n        else\n            printf(\"NO\\n\");\n        }\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        long long int x,y;\n        scanf(\"%lld%lld\",&x,&y);\n        long long int c=x-y;\n\n        int v=1;\n        if(c==1)\n        printf(\"NO\\n\");\n        else{\n         if(c%2==0 || c%3==0 || c%5==0 || c%7==0 || c%11==0)\n            v=1;\n         else\n         {\n             while(c>1){\n             c=c%10;\n             if(c%2==0 || c%3==0 || c%5==0 || c%7==0 || c%11==0)\n             {\n                 v=1;\n                 break;\n             }\n             }\n         }\n         if(v==1)\n            printf(\"yes\\n\");\n        else\n            printf(\"NO\\n\");\n        }\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7564469914040115, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "8bcf86e886664ca927db03df08e6033b", "bug_code_uid": "a2bc1e9ad8958968cbaa99ebd74cd913", "src_uid": "dfb1479ffa17489095b6bf1921758f7e", "apr_id": "c6f3071e278e77fd947e3c78810f24a0", "difficulty": 1500, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\ntypedef struct Range {\n\tint begin;\n\tint end;\n} range;\n\nint compare(const void * a, const void * b)\n{\n\trange *rangeA = (range *)a;\n\trange *rangeB = (range *)b;\n\n\treturn (rangeB->begin - rangeA->begin);\n}\n\nint main(void)\n{\n\tint number, count_included = 0, endMax = 0, i;\n\tscanf(\"%d\", &number);\n\trange array[100001];\n\tfor (i = 0; i < number; i++) {\n\t\tscanf(\"%d %d\", &array[i].begin, &array[i].end);\n\t\tif (array[i].end >= endMax ) {\n\t\t\tendMax = array[i].end;\n\t\t}\n\t}\n\t\n\tqsort(array, number, sizeof(range), compare);\n\t\t\n\tfor (i = 0; i < number; i++) {\n\t\tif (array[i].end < endMax) {\n\t\t\tcount_included++;\n\t\t}\n\t\telse {\n\t\t\tendMax = array[i].end;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", count_included);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\ntypedef struct Range {\n\tint begin;\n\tint end;\n} range;\n\nint compare(const void * a, const void * b)\n{\n\trange *rangeA = (range *)a;\n\trange *rangeB = (range *)b;\n\n\treturn (rangeA->begin - rangeB->begin);\n}\n\nint main(void)\n{\n\tint number, count_included = 0, endMax = 0, i;\n\tscanf(\"%d\", &number);\n\trange array[100001];\n\tfor (i = 0; i < number; i++) {\n\t\tscanf(\"%d %d\", &array[i].begin, &array[i].end);\n\t}\n\t\n\tqsort(array, number, sizeof(range), compare);\n\t\n\tfor (i = 0; i < number; i++) {\n\t\tif (array[i].end < endMax) {\n\t\t\tcount_included++;\n\t\t}\n\t\telse {\n\t\t\tendMax = array[i].end;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", count_included);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9173333333333333, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "b76ba0f51766a3fe40a38d967fdc5f1d", "bug_code_uid": "7172a13fc7ea82eda5400565b60b08fb", "src_uid": "e70708f72da9a203b21fc4112ede9268", "apr_id": "ba9dc637629032f43e8511d1a7efb5b6", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAX 10001\n\nint main(void) {\n    char s[MAX];\n    int i = 0;\n    do {\n        scanf(\"%c\", &s[i]);\n        i++;\n    } while (s[i-1] != '\\n');\n    i = 0;\n    while (s[i] != '\\n' && s[i] == 'a') i++;\n    while (s[i] != '\\n' && s[i] != 'a') {\n        s[i] = s[i] - 1;\n        i++;\n    }\n    printf(\"%s\", s);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\n#define MAX 100001\n\nint main(void) {\n    char s[MAX];\n    int i = 0;\n    do {\n        scanf(\"%c\", &s[i]);\n        i++;\n    } while (s[i-1] != '\\n');\n    s[i-1] = '\\0';\n    i = 0;\n    while (s[i] != '\\0' && s[i] == 'a') i++;\n    if (s[i] == '\\0') s[i-1] = 'z';\n    while (s[i] != '\\0' && s[i] != 'a') {\n        s[i] = s[i] - 1;\n        i++;\n    }\n    printf(\"%s\\n\", s);\n    return 0;\n}"}
{"similarity_score": 0.10810810810810811, "equal_cnt": 17, "replace_cnt": 14, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "9c762e9a937e9dc2308de78a57ddbe8a", "bug_code_uid": "b2be7142fcc91ea2e3d12b3177869d45", "src_uid": "b978ca6fdef4a02cc027485294caa0f5", "apr_id": "fa394687a1998093377137d03e3134b4", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid insertionSort(int A[],int n)\n{\n    int k,l;\n    for(int j=1;j<n;j++)\n    {    k=A[j];\n        l=j-1;\n        while(l>=0&&A[l]>k)\n        {     A[l+1]=A[l];\n            l=l-1;\n        }\n        A[l+1]=k;\n    }\n}\nint main()\n{\n\n      int z;\n      scanf(\"%d\",&z);\n\n    for(int i=0;i<z;i++)\n    {\n         int n;\n         scanf(\"%d\",&n);\n\n         int arr[n+1];\n         int sum=n;\n         int m;\n\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&m);\n        arr[i]=m;\n    }\n\n\n    insertionSort(arr,n);\n    for (int i = 0; i < n; ++i)\n    {\n      //printf(\"%d \",arr[i]);   \n    }\n   // printf(\"\\n\");\n\n\n\n    for(int i=0;i<n;i++)\n\t        {\n\t            if(arr[i]==arr[i+1])\n\t                sum--;\n\t        }\n\t        printf(\"%d\\n\",sum);\n\n\n    }\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n//yo\nint comparator (const void * p1, const void * p2)\n{\n  return (*(int*)p1 - *(int*)p2);\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t)\n\t{\n    \tint n;\n\t    scanf(\"%d\",&n);\n\t    int arr[n+1];\n\t  \n\t    int sum=0;\n\t    for(int i=0;i<n;i++)\n\t        {\n\t\t    scanf(\"%d\",&arr[i]);\n\t\t\t}\n\t\t\tqsort(arr, n, sizeof(int), comparator);\n\t\tfor(int i=0;i<n;i++)\t\n\t        {\n\t            if(arr[i]!=arr[i+1])\n\t                sum++;\n\t        }\n\t        printf(\"%d\\n\",sum);\n\t    t--; \n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9453125, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0bf916c75771df3ae43eb9e41b172e81", "bug_code_uid": "4b3b15581655ebf2e3ceb48edd109678", "src_uid": "d6790c9b4b2e488768fb4e746ee7ebe0", "apr_id": "3e48fb66062fd515ef06a7919cbcc3af", "difficulty": 1000, "tags": ["bitmasks", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nchar a[300030];\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=1;i<300030;i++)\r\n    {\r\n        a[i]=a[i-1]^i;\r\n    }\r\n    while(t--)\r\n    {\r\n        int n,m;\r\n        scanf(\"%d%d\",&n,&m);\r\n        if(m==a[n-1])\r\n        {\r\n            printf(\"%d\\n\",n);\r\n        }\r\n        else if(a[n-1]^m<=n)\r\n        {\r\n            printf(\"%d\\n\",n+2);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\",n+1);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint a[300030];\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int i;\r\n    for(i=1;i<300030;i++)\r\n    {\r\n        a[i]=a[i-1]^i;\r\n    }\r\n    while(t--)\r\n    {\r\n        int n,m;\r\n        scanf(\"%d%d\",&n,&m);\r\n        if(m==a[n-1])\r\n        {\r\n            printf(\"%d\\n\",n);\r\n        }\r\n        else if(m==a[n])\r\n        {\r\n            printf(\"%d\\n\",n+2);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\",n+1);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9985141158989599, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5765c2176a89bf544b91f60e92f6d15c", "bug_code_uid": "cce3e4ba9c270bdb3b95dcf4f29fe5c1", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "4058a4069d60c54c83a2ff27e8c4e026", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1; i<n; i++)\n    {\n        if(i==1 || i==2 || i==3 || i==5 || i==8 || i==13|| i==21|| i==34\n                || i==55 || i==89 || i==144 || i==233 || i==377 || i==610|| i==987)\n            printf(\"O\");\n        else\n            printf(\"o\");\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n    {\n        if(i==1 || i==2 || i==3 || i==5 || i==8 || i==13|| i==21|| i==34\n                || i==55 || i==89 || i==144 || i==233 || i==377 || i==610|| i==987)\n            printf(\"O\");\n        else\n            printf(\"o\");\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8432055749128919, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e2e0e97bbc45e5806a5fa82ce04e95d5", "bug_code_uid": "a0f01ad37e21bde478c4c77d1a41e61e", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "8f874eb9d1148627bc8b4b39ab580b03", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint  a,b=0,c=0,i;\n\tscanf(\"%d\",&a);\n\tint s[a];\n\tfor(i=0;i<a;i++)\n\t{\n\t\tscanf(\"%d\",&s[i]);\n\t}\n\tfor(i=a-1;i>=0;i--)\n\t{\n\t\tif(s[i]>0&&i<b)\n\t\t{\n\t\t\tc=c-s[i];\n\t\t}else if(s[i]==-1){\n\t\t\tb=i;\n\t\t\tc=c+1;\n\t\t\t\n\t}\n\t}\n\tprintf(\"%d\",c);\n\treturn 0;\n\t}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint  a,b=0,c=0,i;\n\tscanf(\"%d\",&a);\n\tint s[a];\n\tfor(i=0;i<a;i++)\n\t{\n\t\tscanf(\"%d\",&s[i]);\n\t}\n\tfor(i=a-1;i>=0;i--)\n\t{\n\t\tif(s[i]>=0&&i<b)\n\t\t{\n\t\t\tif(s[i]>=c)\n\t\t\t{\n\t\t\t\tc=0;\n\t\t\t}else\n\t\t\t{\n\t\t\t\tc=c-s[i];\n\t\t\t}\n\t\t}else if(s[i]==-1){\n\t\t\tc=c+1;\n\t\t\tb=i;}\n\t\t\t}\n\tprintf(\"%d\",c);\n\treturn 0;\n\t}\n"}
{"similarity_score": 0.9651162790697675, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1415dcf9a5cecc4782dbbc0530d20558", "bug_code_uid": "893759d09046cb110827d1a3385bb7f8", "src_uid": "8996ae454ba3062e47a8aaab7fb1e33b", "apr_id": "eb9808b77d88611bb226f76b7631ca08", "difficulty": 1800, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n  int x1,y1,x2,y2,r1,r2;\n   double p,q;\n   scanf(\"%d%d%d%d%d%d\",&x1,&y1,&r1,&x2,&y2,&r2);\n   p=(double)sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n   \n   if(p>(double)(r1+r2))\n   q=(p-(double)(r1+r2))/2;\n     else\n     {\n      if(p>(double)(abs(r1-r2)))\n      q=((double)(r1+r2)-p)/4;\n      else\n      q=((double)(abs(r1-r2))-p)/2;\n      }\n      \n    printf(\"%lf\",q);\n    \n    return 0;\n    }", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n  int x1,y1,x2,y2,r1,r2;\n   double p,q;\n   scanf(\"%d%d%d%d%d%d\",&x1,&y1,&r1,&x2,&y2,&r2);\n   p=(double)sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n   \n   if(p>(double)(r1+r2))\n   q=(p-(double)(r1+r2))/2;\n     else\n     {\n      if(p>=(double)(abs(r1-r2)))\n      q=0.000000;\n      else\n      q=((double)(abs(r1-r2))-p)/2;\n      }\n      \n    printf(\"%lf\",q);\n    \n    return 0;\n    }"}
{"similarity_score": 0.9956204379562044, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8dd9ce67513ad3cfba5b599a9eddcba6", "bug_code_uid": "2dff00cf86e4aa661fa868b35fbcc39f", "src_uid": "16e9f127f58c7682d372863d1d6a3bf1", "apr_id": "35479258d505c289d05dc612a9a09ff5", "difficulty": 1700, "tags": ["binary search", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint *a;\nint n, m;\nint min(int a, int b){\n    if(a < b) return a;\n    return b;\n}\nchar check(int x){\n    int t = min(a[n - 1] + x, m - 1);\n    for(int i = n - 2; i >= 0; i--){\n        if(a[i] <= t){\n            if(a[i] + x <= t)\n                t = a[i] + x;\n        }\n        else{\n            if(a[i] + x >= m){\n                t = min(a[i + 1], (a[i] + x)%m);\n            }\n            else{\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\nint main()\n{\n    scanf(\"%d %d\", &n, &m);\n    a = (int *)malloc(n * sizeof(int));\n    for(int i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    int left = 0, right = m + 1;\n    int ans = m + 1;\n    while(left + 1 != right){\n        int m = (left + right)/2;\n        if(check(m)){\n            ans = min(ans, m);\n            right = m;\n        }\n        else\n            left = m;\n    }\n    if(check(left))\n        ans = min(ans, left);\n    if(check(right))\n        ans = min(ans, right);\n    printf(\"%d\", ans);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint *a;\nint n, m;\nint min(int a, int b){\n    if(a < b) return a;\n    return b;\n}\nchar check(int x){\n    int t = min(a[n - 1] + x, m - 1);\n    for(int i = n - 2; i >= 0; i--){\n        if(a[i] <= t){\n            if(a[i] + x <= t)\n                t = a[i] + x;\n        }\n        else{\n            if(a[i] + x >= m){\n                t = min(t, (a[i] + x)%m);\n            }\n            else{\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\nint main()\n{\n    scanf(\"%d %d\", &n, &m);\n    a = (int *)malloc(n * sizeof(int));\n    for(int i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    int left = 0, right = m + 1;\n    int ans = m + 1;\n    while(left + 1 != right){\n        int m = (left + right)/2;\n        if(check(m)){\n            ans = min(ans, m);\n            right = m;\n        }\n        else\n            left = m;\n    }\n    if(check(left))\n        ans = min(ans, left);\n    if(check(right))\n        ans = min(ans, right);\n    printf(\"%d\", ans);\n    return 0;\n}"}
{"similarity_score": 0.9373584905660377, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7fc8accc9b2b21bc052ed51a25d806aa", "bug_code_uid": "24bcac770d54590011a2e188ab58fa71", "src_uid": "d4f4d6341f52cceb862faa89e85a42a3", "apr_id": "189a3ac3ae17ec8818be7de394901914", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nlong int gcd(long int x,long int y){\r\n    if(x==0)return y;\r\n    if(y==0)return x;\r\n    if(x==y)return x;\r\n    if(x>y){\r\n        return gcd(x%y,y);\r\n    }\r\n    return gcd(x,y%x);\r\n}\r\n\r\nint main()\r\n{\r\n   long int t,n,b,c,temp;\r\n   temp=0;\r\n   scanf(\"%ld\",&t);\r\n   while(t--){\r\n       scanf(\"%ld\",&n);\r\n       for(c=1;c<n,temp==0;c++){\r\n           if(n%c==0){\r\n           for(b=2*c;b<n,temp==0;b=b+c){\r\n               if(gcd(b,n-b-c)==c){\r\n                   printf(\"%ld %ld %ld\",b,n-b-c,c);\r\n                   temp=1;\r\n               }\r\n            }\r\n           }\r\n       }\r\n       \r\n       if(t>0)printf(\"\\n\");\r\n   }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nlong int gcd(long int x,long int y){\r\n    if(x==0)return y;\r\n    if(y==0)return x;\r\n    if(x==y)return x;\r\n    if(x>y){\r\n        return gcd(x%y,y);\r\n    }\r\n    return gcd(x,y%x);\r\n}\r\n\r\nint main()\r\n{\r\n   long int t,n,b,c,temp;\r\n   \r\n   scanf(\"%ld\",&t);\r\n   while(t--){\r\n       temp=0;\r\n       scanf(\"%ld\",&n);\r\n       for(c=1;c<n,temp==0;c++){\r\n           if(n%c==0){\r\n           for(b=2*c;b<n,temp==0;b=b+c){\r\n               if(gcd(b,n-b-c)==c){\r\n                   printf(\"%ld %ld %ld\",b,n-b-c,c);\r\n                   temp=1;\r\n               }\r\n            }\r\n           }\r\n       }\r\n       \r\n       if(t>0)printf(\"\\n\");\r\n   }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9975, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "fbbcc574298f7b1cbbb1ddfe3fbf0490", "bug_code_uid": "aade5ac0622b380367d03aebc2693c7f", "src_uid": "131db180c7afad3e5a3342407408fded", "apr_id": "c8289d69623c24877b40ce1f1fa06e9a", "difficulty": 2400, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAXH 100010\n\nint n, q, p;\nint a[MAXH];\nint b[MAXH];\nint max;\ndouble ans;\ntypedef long double ld;\n\nld f(ld x) {\n    int i;\n\n    ld y = 1;\n    for(i = 0;i < n;i ++) {\n        if((1 - x * a[i]) / b[i] < y) {\n            y = (1 - x * a[i]) / b[i];\n        }\n    }\n    return p * x + q * y;\n}\n\nint main() {\n    int i;\n\n    scanf(\"%d %d %d\", &n, &p, &q);\n    max = 0;\n    for (i = 0;i < n;i ++) {\n        scanf(\"%d %d\", a + i, b + i);\n        if(b[i] > max) max = b[i];\n    }\n    ld l = 0;\n    ld r = 1.0 / max;\n    ld tl, tr;\n    for (i = 0;i < 200;i ++) {\n        tl = (2 * l + r) / 3;\n        tr = (2 * r + l) / 3;\n        if (f(tl) > f(tr)) {\n            r = tr;\n        } else {\n            l = tl;\n        }\n    }\n    printf(\"%.15f\\n\", (double)f((l+r)/2));\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAXH 100010\n\nint n, q, p;\nint a[MAXH];\nint b[MAXH];\nint max;\ndouble ans;\ntypedef long double ld;\n\nld f(ld x) {\n    int i;\n\n    ld y = 1;\n    for(i = 0;i < n;i ++) {\n        if((1 - x * a[i]) / b[i] < y) {\n            y = (1 - x * a[i]) / b[i];\n        }\n    }\n    return p * x + q * y;\n}\n\nint main() {\n    int i;\n\n    scanf(\"%d %d %d\", &n, &p, &q);\n    max = 0;\n    for (i = 0;i < n;i ++) {\n        scanf(\"%d %d\", a + i, b + i);\n        if(a[i] > max) max = a[i];\n    }\n    ld l = 0;\n    ld r = 1.0 / max;\n    ld tl, tr;\n    for (i = 0;i < 200;i ++) {\n        tl = (2 * l + r) / 3;\n        tr = (2 * r + l) / 3;\n        if (f(tl) > f(tr)) {\n            r = tr;\n        } else {\n            l = tl;\n        }\n    }\n    printf(\"%.15f\\n\", (double)f((l+r)/2));\n    return 0;\n}\n"}
{"similarity_score": 0.4269771955361475, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "fc73735399bf4a8d82c997a2a7a05f2f", "bug_code_uid": "95e5c410304088bd181d368077b5fdc0", "src_uid": "a97e70ad20a337d12dcf79089c16c9f0", "apr_id": "60ce0bb66ee2e912483ed70323622eca", "difficulty": 1100, "tags": ["data structures", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, i, j, temp, xchanges;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        for (i = 0; i < n - 1; i++)\r\n        {\r\n            xchanges = 0;\r\n            for (j = 0; j < n - 1 - i; j++)\r\n            {\r\n                if (arr[j] > arr[j + 1])\r\n                {\r\n                    if ((arr[j] + arr[j + 1]) % 2 != 0)\r\n                    {\r\n                        temp = arr[j];\r\n                        arr[j] = arr[j + 1];\r\n                        arr[j + 1] = temp;\r\n                        xchanges++;\r\n                    }\r\n                }\r\n            }\r\n            if (xchanges == 0)\r\n                break;\r\n        }\r\n       for(i=0;i<n-1;i++)\r\n       {\r\n           if(arr[i]>arr[i+1]) break;\r\n       }\r\n       if(i!=n) printf(\"NO\\n\");\r\n       else printf(\"YES\\n\"); \r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, i, j, e, o, k, p;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        e = 0;\r\n        o = 0;\r\n        k = 0;\r\n        p = 0;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n            if (arr[i] % 2 == 0)\r\n                e++;\r\n            else\r\n                o++;\r\n        }\r\n        int even[e], odd[o];\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            if (arr[i] % 2 == 0)\r\n                even[k++] = arr[i];\r\n            else\r\n                odd[p++] = arr[i];\r\n        }\r\n        for (i = 0; i < k - 1; i++)\r\n        {\r\n            if (even[i] > even[i + 1])\r\n                break;\r\n        }\r\n        for (j = 0; j < p - 1; j++)\r\n        {\r\n            if (odd[j] > odd[j + 1])\r\n                break;\r\n        }\r\n        if((p==0&&i==k-1)||(k==0&&j==p-1)) printf(\"YES\\n\");\r\n        else if (j == p - 1 && i == k - 1)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7841409691629956, "equal_cnt": 22, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "096159f9da14bc20d006ea934bcbcfb3", "bug_code_uid": "34444bce55d72b121d92032bb839a6ba", "src_uid": "c9e9b82185481951911db3af72fd04e7", "apr_id": "7c7728e499b2cebe0852b9dc0bc45dc6", "difficulty": 1500, "tags": ["implementation", "hashing"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint T,i,B[1000],j,C[1000],p=1,k=1,temp=0,d=0,Q[1000],y;\nchar A[1000][40],D[1000][40],P[200],R[1000][40];\nscanf(\"%d \",&T);\nscanf(\"%s%d \",A[0],&B[0]);\nstrcpy(D[0],A[0]);\nC[0]=B[0];\nfor(i=1;i<T;i++)\n{\nscanf(\"%s%d\",A[i],&B[i]);\nif(B[i]<0)\n{\nB[i]=0;\n}\nk=p;\nfor(j=0;j<k;j++)\n{\nif(strcmp(D[j],A[i])!=0)\n{\nstrcpy(D[p],A[i]);\nC[p]=B[i];\np++;\n}\nelse\n{\nC[j]+=B[i];\n}\n}\n}\nfor(i=0;i<p;i++)\n{\nif(C[i]>temp)\n{\ntemp=C[i];\nstrcpy(P,D[i]);\n}\n}\nfor(i=0;i<p;i++)\n{\nif(C[i]==temp)\n{\nd++;\n}\n}\nif(d==1)\n{\nprintf(\"%s\\n\",P);\n}\nelse\n{\nif(B[0]==temp)\n{\nprintf(\"%s\\n\",A[0]);\n}\nelse\n{\nQ[0]=B[0];\nstrcpy(R[0],A[0]);\nk=0;\np=k+1;\nfor(i=1;i<T;i++)\n{\nif(B[i]==temp)\n{\nprintf(\"%s\\n\",A[i]);\nbreak;\n}\nelse\n{\nQ[p]=B[i];\nstrcpy(R[p],A[i]);\nfor(j=k;j>=0;j--)\n{\nif(strcmp(R[j],A[i])==0)\n{\nQ[p]+=B[j];\nif(Q[p]==temp)\n{\nprintf(\"%s\\n\",R[j]);\ny=4;\nbreak;\n}\np++;\n}\n}\nif(y==4)\n{\nbreak;\n}\n}\n}\n}\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint T,i,B[1000],j,C[1000],p=1,k=1,temp=0,d=0,Q[1000],y=0,f=0,g=0,h;\nchar A[1000][40],D[1000][40],P[200],R[1000][40];\nscanf(\"%d \",&T);\nscanf(\"%s%d \",A[0],&B[0]);\nstrcpy(D[0],A[0]);\nC[0]=B[0];\nfor(i=1;i<T;i++)\n{\nscanf(\"%s%d\",A[i],&B[i]);\nk=p;\nf=0;\nfor(j=0;j<k;j++)\n{\nif(strcmp(D[j],A[i])!=0)\n{\nf++;\nif(f==k)\n{\nstrcpy(D[p],A[i]);\nC[p]=B[i];\np++;\nf=0;\n}\n}\nelse\n{\nC[j]+=B[i];\n}\n}\n}\nfor(i=0;i<p;i++)\n{\nif(C[i]>temp)\n{\ntemp=C[i];\nstrcpy(P,D[i]);\n}\n}\nfor(i=0;i<p;i++)\n{\nif(C[i]==temp)\n{\nd++;\nstrcpy(R[g],D[i]);\ng++;\n}\n}\nif(d==1)\n{\nprintf(\"%s\\n\",P);\n}\nelse\n{\nfor(i=0;i<T;i++)\n{\nfor(j=0;j<g;j++)\n{\nif((strcmp(A[i],R[j])==0) && B[i]>=temp)\n{\nprintf(\"%s\\n\",A[i]);\ny=4;\nbreak;\n}\nelse if(strcmp(A[i],R[j])==0)\n{\nfor(h=i-1;h>=0;h--)\n{\nif(strcmp(A[i],A[h])==0)\n{\nB[i]+=B[h];\nif(B[i]>=temp)\n{\nprintf(\"%s\\n\",A[i]);\ny=4;\n}\nbreak;\n}\n}\n}\n}\nif(y==4)\n{\nbreak;\n}\n}\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9243421052631579, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "43efa8e2183fd2497325b03ff841d6e6", "bug_code_uid": "cd05f09e83fdbc6db36224f91977a293", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "79cffea4c174d4ab8954fd5a92c7e03f", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//MISHON69\n//DATE:5/20/2020\n#include<stdio.h>\n#define MAX 100\nint main(){\n int n;\n scanf(\"%d\",&n);\n int a[MAX];\n int sum=0;\n for(int i=0;i<n;i++){\n \tscanf(\"%d\",&a[i]);\n \tsum+=a[i];\n }\n int count=0;\n for(int i=0;i<n;i++){\n \tif((sum-a[i])%2==0||sum==0){\n \t\tcount++;\n \t\tsum-=a[i];\n\t }\n }\n printf(\"%d\\n\",count);\n \n}", "fixed": "//MISHON69\n//DATE:5/20/2020\n#include<stdio.h>\n#define MAX 100\nint main(){\n int n;\n scanf(\"%d\",&n);\n int a[MAX];\n int sum=0;\n for(int i=0;i<n;i++){\n \tscanf(\"%d\",&a[i]);\n \tsum+=a[i];\n }\n int count=0;\n for(int i=0;i<n;i++){\n \tif((sum-a[i])%2==0||sum<=0){\n \t\tcount++;\n\t }\n }\n printf(\"%d\\n\",count);\n \n}"}
{"similarity_score": 0.982989064398542, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "111dc12f281702791878f8d4b6676249", "bug_code_uid": "3413bd6ba7efd612206bdaad41b1ca27", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "20f94a7dadef958eb06b6a5005c064a0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define MAX_SIZE 1100\nvoid get_final_emotions(char[], short);\nint main()\n{\n    short no_of_layers;\n    char emotions[MAX_SIZE];\n    scanf(\"%hu\",&no_of_layers);\n\n    get_final_emotions(emotions, no_of_layers);\n    printf(\"%s\\n\",emotions);\n    return 0;\n}\n\nvoid get_final_emotions(char emotions[], short no_of_layers)\n{\n    short i;\n    char odd_emotion[8] = \"I hate \", even_emotion[8] = \"I love \";\n\n    for(i = 1; i <= no_of_layers; i++)\n    {\n        if(i%2 == 1)\n        {\n            strcat(emotions, odd_emotion);\n        }\n        else\n        {\n            strcat(emotions, even_emotion);\n        }\n\n        if(i != no_of_layers)\n        {\n            strcat(emotions, \"that \");\n        }\n        else\n        {\n            strcat(emotions, \"it\");\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define MAX_SIZE 1200\nvoid get_final_emotions(char[], short);\nint main()\n{\n    short no_of_layers;\n    char emotions[MAX_SIZE];\n    scanf(\"%hu\",&no_of_layers);\n\n    get_final_emotions(emotions, no_of_layers);\n    printf(\"%s\\n\",emotions);\n    return 0;\n}\n\nvoid get_final_emotions(char emotions[], short no_of_layers)\n{\n    short i;\n    char odd_emotion[8] = \"I hate \", even_emotion[8] = \"I love \";\n    strcpy(emotions, \"\");\n\n    for(i = 1; i <= no_of_layers; i++)\n    {\n        if(i%2 == 1)\n        {\n            strcat(emotions, odd_emotion);\n        }\n        else\n        {\n            strcat(emotions, even_emotion);\n        }\n\n        if(i != no_of_layers)\n        {\n            strcat(emotions, \"that \");\n        }\n        else\n        {\n            strcat(emotions, \"it\");\n        }\n    }\n}\n"}
{"similarity_score": 0.9885496183206107, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "761bc46373bc938039036c3ac0def7f8", "bug_code_uid": "17f6d1beb68050241a2717fb8f1b0817", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "a314178b0c1ae7d2ce5f930f2a623400", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,j,k,a=0,b=0,count=0;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&j);\n        if(j%2==0) a++;\n        else b++;\n        count=count+j;\n    }\n    if(j%2==0) printf(\"%d\",a);\n    else printf(\"%d\",b);\n}", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,j,k,a=0,b=0,count=0;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&j);\n        if(j%2==0) a++;\n        else b++;\n        count=count+j;\n    }\n    if(count%2==0) printf(\"%d\",a);\n    else printf(\"%d\",b);\n}"}
{"similarity_score": 0.9797752808988764, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ff727f695808538777991933090cdf79", "bug_code_uid": "93aa0ace83d6aa72c9adff9b3b4777e6", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "eda9766eb2c67ac68f5a09e9b83ca8a6", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main (void)\n{\n\tint n ,t , rem , m;\n\tscanf(\"%d\",&t):\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\",&n,&m);\n\t\trem=n*m;\n\t\tif(rem%2) printf(\"%d\\n\",rem+1);\n\t\telse printf(\"%d\\n\",rem);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main (void)\n{\n\tint n ,t , rem , m;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\",&n,&m);\n\t\trem=n*m;\n\t\tif(rem%2) printf(\"%d\\n\",(rem+1)/2);\n\t\telse printf(\"%d\\n\",rem/2);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9289256198347108, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8b462c05cb149a8b791e0287fd930178", "bug_code_uid": "d756fb83014582e341f21fb27cb5f2ec", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "dd8c690c04490f26f945a61d44309d6b", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int a;int sum=0;int b,c,d;\n    scanf(\"%d\",&a);\n    for(int m=0;m<a;m++){\n    scanf(\"%d %d\",&b,&c);\n    for(int i=0;i<b;i++){\n        scanf(\"%d\",&d);\n        sum=sum+d;\n    }\n    if(sum-c>0){\n        printf(\"%d\",sum-c);\n    }else{\n        printf(\"0\");\n    }\n}}", "fixed": "#include<stdio.h>\nint main(){\n    int a;int sum=0;int b,c,d;\n    scanf(\"%d\",&a);\n    for(int m=0;m<a;m++){\n        sum=0;\n    scanf(\"%d %d\",&b,&c);\n    for(int i=0;i<b;i++){\n        scanf(\"%d\",&d);\n        sum=sum+d;\n    }\n    if(sum-c>0){\n        printf(\"%d\\n\",sum-c);\n    }else{\n        printf(\"0\\n\");\n    }\n}}"}
{"similarity_score": 0.27195027195027194, "equal_cnt": 25, "replace_cnt": 23, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "c5cc2537cd28ea5b30380038e215b600", "bug_code_uid": "5c3161aef82e6719052193ea492be869", "src_uid": "8736df815ea0fdf390cc8d500758bf84", "apr_id": "2d20dc99447bb5b85723a6cfbb1cb1d4", "difficulty": 1300, "tags": ["binary search", "implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,a[30][250000],t,max,b[30]= {0},c[30]= {0},j;\n    char s1[250010],s2[250010];\n    scanf(\"%d\",&n);\n    getchar();\n    gets(s1);\n    for(i=0; i<n; i++)\n    {\n        a[s1[i]-97][b[s1[i]-97]]=i;\n        b[s1[i]-97]++;\n    }\n    scanf(\"%d\",&m);\n    getchar();\n    for(j=0; j<m; j++)\n    {\n        max=0;\n        gets(s2);\n        for(i=0; i<strlen(s2); i++)\n        {\n            c[s2[i]-97]++;\n        }\n        for(i=0; i<26; i++)\n        {\n            if(c[i])\n            {\n                if(max<a[i][c[i]-1])\n                    max=a[i][c[i]-1];\n            }\n            c[i]=0;\n        }\n        printf(\"%d\\n\",max+1);\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n \nint main(){\n\t\n\tint n,n1,i,count=0,j,k,k1,a[26]={0},max=0,l,c[26]={0};\n\t\n\tscanf(\"%d\",&n);\n\tgetchar();\n\t\n\tchar s[n];\n\t\n\tgets(s);\n\t\n\tint b[26][200001]={0};\n\t\n\tfor(k=0;s[k]!=NULL;k++){\n\t\ta[s[k]-97]++;\n\t\tb[s[k]-97][a[s[k]-97]-1]=(k+1);\n\t}\n\t\n\tscanf(\"%d\",&n1);\n\tgetchar();\n\t\n\tchar s1[300000];\n\t\n\tfor(j=0;j<n1;j++){\n\t\t\n\t\tgets(s1);\n\t\t\n\t\tfor(k=0;s1[k]!=NULL;k++)\n\t\t\tc[s1[k]-97]++;\n\t\t\t\n\t\tfor(k=0;k<26;k++){\n\t\t\t\n\t\t\tif(c[k]>0){\n\t\t\t\n\t\t\t\tif(b[k][c[k]-1]>max)\n\t\t\t\t\tmax=b[k][c[k]-1];\n\t\t\t}\n\t\t\tc[k]=0;\n\t\t}\t\n\t\t\n\t\tprintf(\"%d\\n\",max);\n\t\tmax=0;\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.991953182150695, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a61f57bc0181ea3ed29cc157c4eee183", "bug_code_uid": "d2f3a98eb72b5ce5d8bdce4118b634f5", "src_uid": "8f0172f742b058f5905c0a02d79000dc", "apr_id": "b8a16489236cbb7b079044ca0d3695b0", "difficulty": 1200, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, i,j, p=0,q=0,sum1=0,sum2=0,sum=0;\n    scanf(\"%d\", &n);\n    int a[100005];\n    for (i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        sum += a[i];\n    }\n    for (i = 0, j = 0; (sum1 + sum2)<sum; )\n    {\n        if (sum1 <= sum2 && (sum1+sum2+a[i])<=sum)\n        {\n            sum1 += a[i];\n            p++;\n            i++;\n            //printf(\"sum1= %d\\n\", sum1);\n        }\n        if (sum2 <= sum1 && (sum1 + sum2+a[n-1-j])<=sum && i!=n-1-j)\n        {\n            sum2 += a[n - 1 - j];\n            q++;\n            j++;\n            //printf(\"sum2= %d\\n\", sum2);\n        }\n        \n    }\n    printf(\"%d %d\", p, q);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, i,j, p=0,q=0,sum1=0,sum2=0,sum=0;\n    scanf(\"%d\", &n);\n    int a[100005];\n    for (i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        sum += a[i];\n    }\n    for (i = 0, j = 0; (sum1 + sum2)<sum; )\n    {\n        if (sum1 <= sum2 && (sum1+sum2+a[i])<=sum)\n        {\n            sum1 += a[i];\n            p++;\n            i++;\n            //printf(\"sum1= %d\\n\", sum1);\n        }\n        if (sum2 < sum1 && (sum1 + sum2+a[n-1-j])<=sum && n-j!=i)\n        {\n            sum2 += a[n - 1 - j];\n            q++;\n            j++;\n            //printf(\"sum2= %d\\n\", sum2);\n        }\n        \n    }\n    printf(\"%d %d\", p, q);\n    return 0;\n}\n"}
{"similarity_score": 0.41578947368421054, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "1c67a8ac85ef6dd7ec7db24233129b56", "bug_code_uid": "1f1ea100e2d0b09ffa4ece97779320cc", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "07e4bbf141200a54125a458c2d25995f", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{int i,j,k,t,a[100000],c[9999],m,n,min,max;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{scanf(\"%d\",&a[i]);}\nfor(i=0;i<n;i++)\n{t=a[i];k=0;\nfor(j=0;j<n;j++)\n{if(i!=j){c[k]=abs(t-a[j]);k++;}}\nmin=max=c[0];\nfor(m=0;m<n-1;m++)\n{if(c[m]<min)min=c[m];\nif(c[m]>max)max=c[m];\n}\nprintf(\"%d %d\\n\",min,max);\n}\nreturn 0;}", "fixed": "#include<stdio.h>\nint main()\n{int i,j,k,a[100000],min=-1,max,n;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{scanf(\"%d\",&a[i]);}\nfor(i=0;i<n;i++)\n{if(i==0){min=abs(a[i]-a[i+1]);max=abs(a[i]-a[n-1]);}\nif(i==n-1){min=abs(a[i]-a[i-1]);max=abs(a[i]-a[0]);}\nif(min==-1){j=abs(a[i]-a[i-1]);k=abs(a[i]-a[i+1]);\nif(j<k)min=j;else min=k;\nj=abs(a[i]-a[0]);k=abs(a[i]-a[n-1]);\nif(j>k)max=j;else max=k;}\nprintf(\"%d %d\\n\",min,max);\nmin=-1;max=0;}\nreturn 0;}"}
{"similarity_score": 0.9663865546218487, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ffff3c1d91237a2ebfe5561bcdd1cb05", "bug_code_uid": "ef1e0afb141fd1c0bf9e5f63a7d5a898", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "e5786b6edfbe185c8bec9f0f10324eed", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int i,n;\n   long long c;\n   char b[1001];\n   scanf(\"%d\",&n);\n   long long a[1000]={1,1};\n   for(i=2;i<n;i++)\n   a[i]=a[i-1]+a[i-2];\n   for(i=0;i<n;i++){\n        c=a[i];\n     if(c<=n) b[c]='O';}\n   for(i=1;i<=n;i++){\n        if(b[i]!='O'){\n      b[i]='o';}\n    }\n    b[n+1]='\\0';\n    for(i=1;i<=n;i++)\n        printf(\"%c\",b[i]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int i,n;\n   long long c;\n   char b[1010];\n   scanf(\"%d\",&n);\n   long long a[1000]={1,1};\n   for(i=2;i<=n;i++)\n   a[i]=a[i-1]+a[i-2];\n   for(i=0;i<17;i++){\n        c=a[i];\n     if(c<=n) b[c]='O';}\n   for(i=1;i<=n;i++){\n        if(b[i]!='O'){\n      b[i]='o';}\n    }\n\n    for(i=1;i<=n;i++)\n        printf(\"%c\",b[i]);\n}\n"}
{"similarity_score": 0.8639508070714835, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4d1a21b9c39c4e28cc2f07323f3434a1", "bug_code_uid": "c1a2b1daa624e1af729a1026c1de9149", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "9b7b9a0d0650168c98e6f5617f6462dc", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\t\n\t\tint i;\n    char a[1001],b[1001];\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    int v1=0,v2=0;\n    int l1=strlen(a),l2=strlen(b);\n    if(l1!=l2)\n    printf(\"\\nNo\");\n    else\n    {\n        for(i=0;i<l1;i++)\n        {\n            if(a[i]=='a' || a[i]=='e' || a[i]=='i' || a[i]=='o' || a[i]=='u') v1++;\n            if(b[i]=='a' || b[i]=='e' || b[i]=='i' || b[i]=='o' || b[i]=='u') v2++;\n            \n        }\n        if(v1==v2)\n        printf(\"\\nYes\");\n        else\n        printf(\"\\nNo\");\n    }\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\t\n\t\tint i,count=0;\n    char a[1001],b[1001];\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    int v1=0,v2=0;\n    int l1=strlen(a),l2=strlen(b);\n    if(l1!=l2)\n    printf(\"\\nNo\");\n    else\n    {\n        for(i=0;i<l1;i++)\n        {\n            if(a[i]=='a' || a[i]=='e' || a[i]=='i' || a[i]=='o' || a[i]=='u') v1++;\n            if(b[i]=='a' || b[i]=='e' || b[i]=='i' || b[i]=='o' || b[i]=='u') v2++;\n            if((a[i]=='a' || a[i]=='e' || a[i]=='i' || a[i]=='o' || a[i]=='u') && (b[i]=='a' || b[i]=='e' || b[i]=='i' || b[i]=='o' || b[i]=='u')) count++;\n            \n        }\n        if(v1==v2 && v1==count)\n        printf(\"\\nYes\");\n        else\n        printf(\"\\nNo\");\n    }\n        return 0;\n}\n"}
{"similarity_score": 0.323869610935857, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "f4476a2cc5651a864a27f9ee38b152d2", "bug_code_uid": "151611ad4afd9cbf3e008a47b3bea56d", "src_uid": "648ec67565c506c3e2ffd007ad44e8c3", "apr_id": "ad57c091b579eb4b3332ce0b12986806", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint lcm(int a, int b){\r\n    for(int v=1;;v++){\r\n        if(b*v%a==0){\r\n            return b*v;\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    int t,d;\r\n    scanf(\"%d\\n\",&t);\r\n    for(int y=0;y<t;y++){\r\n        scanf(\"%d\\n\",&d);\r\n        printf(\"%d\\n\",lcm(1+d,1+2*d));\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint nearest_prime(int a){\r\n    int ans,m=0;\r\n    if(a==2){\r\n        return a;\r\n    }\r\n    for(int t=a;;t++){\r\n        for(int y=2;y<t;y++){\r\n            if(t%y==0){\r\n                m=1;\r\n                break;\r\n            }else{\r\n                m=0;\r\n            } \r\n        }\r\n        if(m==0){\r\n            ans=t;\r\n            break;\r\n        }\r\n    }\r\n    return ans;\r\n}\r\nint main(){\r\n    int t,d,num_2,num_1;\r\n    scanf(\"%d\\n\",&t);\r\n    for(int e=0;e<t;e++){\r\n        scanf(\"%d\\n\",&d);\r\n        num_1=nearest_prime(1+d);\r\n        num_2=nearest_prime(num_1+d);\r\n        printf(\"%d\\n\",num_1*num_2);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9644334160463193, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7a940e73b7b4a148b786a7315d2d075a", "bug_code_uid": "86c8410b71286694f73449d870078687", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "7e6f3fb883266fb438b4d5efff17853f", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n   char arr[n][100];\n   int count=0;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\",&arr[i]);\n    }\n    for(int i=0;i<n;i++)\n    {\n     for(int j=0;j<100;j++)\n     {\n         if((arr[i][j]==NULL)&&(arr[i][j+1]==NULL))\n         break;\n         else\n         count++;\n     }\n        if(count<10){\n            printf(\"%s\",arr[i]);\n            \n        }\n        if(count>=10){\n            printf(\"%c%d%c\",arr[i][0],(count-2),arr[i][count-1]);\n            \n        }\n        count=0;\n        if(i<(n-1))\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n   char arr[n][100];\n   int count=0;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\",&arr[i]);\n    }\n    for(int i=0;i<n;i++)\n    {\n     for(int j=0;j<100;j++)\n     {\n         if(arr[i][j]==NULL)\n         break;\n         else\n         count++;\n     }\n        if(count<=10){\n            printf(\"%s\",arr[i]);\n            \n        }\n        if(count>10){\n            printf(\"%c%d%c\",arr[i][0],(count-2),arr[i][count-1]);\n            \n        }\n        count=0;\n        if(i<(n-1))\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.6643356643356644, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e866621305c44b10decc9846db4b0832", "bug_code_uid": "b223ecdd1f15e015c02e48a87518d177", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "0f5718227c480fb3eb29e080a7ea1f00", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nmain()\n{\n  int n, x, A[1000], n1=0, s=0,i;\n  scanf(\"%d%d\",&n,&x);\n  for(i=0;i<n;i++)\n  {\n   scanf(\"%d\",&A[i]);\n   s=s+A[i];\n  }\n  while(s!=0)\n  {\n   if(abs(s)<=x)\n   {\n    s=0;\n    n1++;\n   }\n   else\n   {\n    s=abs(s)-(x-1);\n    n1++;\n   }\n  }\n  printf(\"%d\",n1);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nmain()\n{\n  int n, x, A[1000], n1=0, s=0,i;\n  scanf(\"%d%d\",&n,&x);\n  for(i=0;i<n;i++)\n  {\n   scanf(\"%d\",&A[i]);\n   s=s+A[i];\n  }\n\n   if(abs(s)%x==0)\n   {\n    n1=abs(s)/x;\n   }\n   else\n   {\n    n1=abs(s)/x+1;\n   }\n  printf(\"%d\",n1);\n}\n"}
{"similarity_score": 0.6977032898820609, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e2d37aeb9272bb91d4eb3171b5ee68a5", "bug_code_uid": "8dd2177a457421a29181fec5fa496fd5", "src_uid": "a3df5d51538658e8c9356f9e848debcf", "apr_id": "12f3e6f5b7d2b1146c86450ca620daa1", "difficulty": 1100, "tags": ["binary search", "greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nint cmpfunc (const void * a, const void * b) {\r\n   return ( *(int*)a - *(int*)b );\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,q,i;\r\n\t\tscanf(\"%d %d\",&n,&q);\r\n\t\tint arr[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&arr[i]);\r\n\t\tqsort(arr, n, sizeof(int), cmpfunc);\r\n\t\tint sum[n],sum1=0,j=0;\r\n\t\tfor(i=n-1;i>=0;i--)\r\n\t\t{\r\n\t\t\tsum1=sum1+arr[i];\r\n\t\t\tsum[j++]=sum1;\r\n\t\t}\r\n\t\twhile(q--)\r\n\t\t{\r\n\t\t\tint inp;\r\n\t\t\tscanf(\"%d\",&inp);\r\n\t\t\tif(inp>sum[n-1])\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(i=0;i<n;i++)\r\n\t\t\t\tif(inp<=sum[i])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d\\n\",i+1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nint cmpfunc (const void * a, const void * b) {\r\n   return ( *(int*)a - *(int*)b );\r\n}\r\nint count(int sum[], int n, int k)\r\n{\r\n    int l1 = 0;\r\n    int r1 = n - 1;\r\n    int leftGreater = n;\r\n    int r=0;\r\n    while (l1<=r1) {\r\n        int m = l1 + (r1 - l1) / 2;\r\n        if (sum[m] >= k) {\r\n            leftGreater = m;\r\n            r1 = m - 1;\r\n        }\r\n        else\r\n            l1 = m + 1;\r\n    }\r\n    return (leftGreater);\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,q,i;\r\n\t\tscanf(\"%d %d\",&n,&q);\r\n\t\tint arr[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&arr[i]);\r\n\t\tqsort(arr, n, sizeof(int), cmpfunc);\r\n\t\tint sum[n],sum1=0,j=0;\r\n\t\tfor(i=n-1;i>=0;i--)\r\n\t\t{\r\n\t\t\tsum1=sum1+arr[i];\r\n\t\t\tsum[j++]=sum1;\r\n\t\t}\r\n\t\twhile(q--)\r\n\t\t{\r\n\t\t\tint inp;\r\n\t\t\tscanf(\"%d\",&inp);\r\n\t\t\tif(inp>sum[n-1])\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\telse\r\n\t\t\tprintf(\"%d\\n\",count(sum, n, inp)+1);\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.2828282828282828, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "54fc69c61808b6a1eade924f4b7f9e10", "bug_code_uid": "68827dae4f4b58b89c7c976ebb9a1fe6", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "41e0df37e1200513178d8f92f2bf2021", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main() \n{\n    long long int n,m,i;\n    scanf(\"%lld %lld\",&n,&m); //n=boys,m=girls\n    if(n>m)\n    {\n      for(i=0;i<m*2;i++)\n       {\n           if(i%2==0)\n           printf(\"B\");\n           if(i%2!=0)\n           printf(\"G\");\n       }\n       for(i=0;i<n-m;i++)\n       {\n           printf(\"B\");\n       }  \n    }\n    if(m>=n)\n    {\n       for(i=0;i<n*2;i++)\n       {\n           if(i%2==0)\n           printf(\"G\");\n           if(i%2!=0)\n           printf(\"B\");\n       }\n       for(i=0;i<m-n;i++)\n       {\n           printf(\"G\");\n       }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main() \n{\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    int n,m,i;\n    scanf(\"%d %d\",&n,&m); //n=boys,m=girls\n    if(n>m)\n    {\n        for( i=1;i<=m;i++)\n            printf(\"BG\");\n        for( i=1;i<=n-m;i++)\n            printf(\"B\");\n    }\n \n    else\n    {\n        for( i=1;i<=n;i++)\n            printf(\"GB\");\n        for( i=1;i<=m-n;i++)\n            printf(\"G\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.6037735849056604, "equal_cnt": 24, "replace_cnt": 8, "delete_cnt": 11, "insert_cnt": 5, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "d8af8cf1f13cb847e41b89e9ea33bc49", "bug_code_uid": "88ae2368417eea2a6fe03dc06fdad531", "src_uid": "3ec1b7027f487181dbdfb12f295f11ae", "apr_id": "d797737a41653bd1df67d4519115e1d5", "difficulty": 900, "tags": ["brute force", "dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        if(n<2020)\r\n            printf(\"NO\\n\");\r\n        else if(n%2021==0 || n%2020==0 || n%4041==0)\r\n            printf(\"YES\\n\");\r\n        else\r\n        {\r\n        if(n%2!=0)\r\n        {\r\n            n=n-2021;\r\n             if(n%2021==0 || n%2020==0 || n%4041==0)\r\n            printf(\"YES\\n\");\r\n            else\r\n                 printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            n=n-2020;\r\n             if(n%2021==0 || n%2020==0 || n%4041==0)\r\n            printf(\"YES\\n\");\r\n            else\r\n                 printf(\"NO\\n\");\r\n        }\r\n        }\r\n\r\n            }\r\n        return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\n   int t,n,m,a,b,i;\r\n   scanf(\"%d\",&t);\r\n   while(t--)\r\n   {\r\n \r\n       scanf(\"%d\",&n);\r\n       if(n<2020)\r\n         printf(\"NO\\n\");\r\n      else if(n%2020==0)\r\n        printf(\"YES\\n\");\r\n       else if(n%2021==0)\r\n        printf(\"YES\\n\");\r\n        else\r\n        {\r\n            a=n%2020;\r\n            b=a*2021;\r\n            if(b<=n && (n-b)%2020==0)\r\n            {\r\n                printf(\"YES\\n\");\r\n            }\r\n                else\r\n                    printf(\"NO\\n\");\r\n \r\n        }\r\n \r\n   }\r\n     return 0;\r\n}"}
{"similarity_score": 0.998546511627907, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7501e0de8c19f6e6640a8024b142d68e", "bug_code_uid": "4551a99bb8c947a2bcd1310c1ad4f8d5", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "ebab1e1677f2695d5187644f0111c1b8", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int nSets;\r\n    scanf(\"%d\", &nSets);\r\n\r\n    for (int i = 1; i <= nSets; i++) {\r\n\r\n        long long nParticipants, timeToBegin, duration;\r\n        scanf(\"%lld %lld %lld\", &nParticipants, &timeToBegin, &duration);\r\n\r\n        long long discontent;\r\n        if (duration / timeToBegin < nParticipants) {\r\n            discontent = (nParticipants - duration / timeToBegin) * duration / timeToBegin +\r\n                         (duration / timeToBegin - 1) * (duration / timeToBegin) / 2;\r\n        } else {\r\n            discontent = (nParticipants - 1) * nParticipants / 2;\r\n        }\r\n\r\n        printf(\"%lld\\n\", discontent);\r\n\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int nSets;\r\n    scanf(\"%d\", &nSets);\r\n\r\n    for (int i = 1; i <= nSets; i++) {\r\n\r\n        long long nParticipants, timeToBegin, duration;\r\n        scanf(\"%lld %lld %lld\", &nParticipants, &timeToBegin, &duration);\r\n\r\n        long long discontent;\r\n        if (duration / timeToBegin < nParticipants) {\r\n            discontent = (nParticipants - duration / timeToBegin) * (duration / timeToBegin) +\r\n                         (duration / timeToBegin - 1) * (duration / timeToBegin) / 2;\r\n        } else {\r\n            discontent = (nParticipants - 1) * nParticipants / 2;\r\n        }\r\n\r\n        printf(\"%lld\\n\", discontent);\r\n\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9372663066057333, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "084cff18c67ac331cb76f7791f35c3b9", "bug_code_uid": "325812566f57a92ecc58afbaf7389554", "src_uid": "69838d9f9214c65b84a21d4eb546ea4b", "apr_id": "01edc5150476946bc1603bdc94e6bc4b", "difficulty": 800, "tags": ["brute force", "data structures", "greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#define max 105\r\nint arr[max];\r\nint count[max];\r\nint c[max];\r\n\r\nvoid initialiseCount(int n){\r\n\tint i;\r\n\tfor(i=0;i<100;i++){\r\n\t\tcount[i]=0;\r\n\t}\r\n}\r\nint checkZero(int a,int n){\r\n\tint i;\r\n\tfor(i=a;i<=n;i++){\r\n\t\tif(count[i]!=0){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nvoid printArr(int n){\r\n\t\tint i;\r\n\tfor(i=0;i<n;i++){\r\n\tprintf(\"%d \",c[i]);\r\n\t}\r\n\tprintf(\"\\n\");\r\n\treturn;\r\n}\r\nvoid solve(int n){\r\n\tint i;\r\n//\tqsort(arr,n,sizeof(int),cmpfunc);\r\nint maxVal=0;\r\n\tint minVal=1000;\r\n\tfor(i=0;i<n;i++){\r\n\t\tif(arr[i]>maxVal){\r\n\t\t\tmaxVal=arr[i];\r\n\t\t}\r\n\t\tif(arr[i]<minVal){\r\n\t\t\tminVal=arr[i];\r\n\t\t}\r\n\t}\r\ninitialiseCount(maxVal+1);\r\n\tfor(i=0;i<n;i++){\r\n\t\tcount[arr[i]]+=1;\r\n\t}\r\n\tint j=0;\r\n\t\r\n\tfor(i=0;i<=maxVal;i++){\r\n\t\tif(count[i]>0){\r\n\t\t\tc[j++]=i;\r\n\t\t\tcount[i]--;\r\n\t\t}\r\n//\t\tprintf(\"%d\",i);\r\n\t\t\r\n\t\tif(i==maxVal){\r\n\t\t\tint val=checkZero(minVal,maxVal+1);\r\n\t\t\tif(val==1){\r\n\t\t\t\ti=0;\r\n\t\t\t}\r\n\t\t}\r\n//\t\tif(j>=n-1){\r\n//\t\t\tbreak;\r\n//\t\t}\r\n\t}\r\n\tinitialiseCount(maxVal);\r\n\tprintArr(n);\r\n\treturn;\r\n}\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tint n,i;\r\n\twhile(t--){\r\n\t\t\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\t}\r\n\t\tsolve(n);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n#define max 105\r\nint arr[max];\r\nint count[max];\r\nint c[max];\r\n\r\nvoid initialiseCount(int n){\r\n\tint i;\r\n\tfor(i=0;i<100;i++){\r\n\t\tcount[i]=0;\r\n\t}\r\n}\r\nint checkZero(int a,int n){\r\n\tint i;\r\n\tfor(i=a;i<=n;i++){\r\n\t\tif(count[i]!=0){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nvoid printArr(int n){\r\n\t\tint i;\r\n\tfor(i=0;i<n;i++){\r\n\tprintf(\"%d \",c[i]);\r\n\t}\r\n\tprintf(\"\\n\");\r\n\treturn;\r\n}\r\nvoid solve(int n){\r\n\tint i;\r\n//\tqsort(arr,n,sizeof(int),cmpfunc);\r\nint maxVal=0;\r\n\tint minVal=1000;\r\n\tfor(i=0;i<n;i++){\r\n\t\tif(arr[i]>maxVal){\r\n\t\t\tmaxVal=arr[i];\r\n\t\t}\r\n\t\tif(arr[i]<minVal){\r\n\t\t\tminVal=arr[i];\r\n\t\t}\r\n\t}\r\ninitialiseCount(maxVal+1);\r\n\tfor(i=0;i<n;i++){\r\n\t\tcount[arr[i]]+=1;\r\n\t}\r\n\tint j=0;\r\n\t\r\n\tfor(i=0;i<=maxVal;i++){\r\n\t\tif(count[i]>0){\r\n\t\t\tc[j++]=i;\r\n\t\t\tcount[i]--;\r\n\t\t}\r\n//\t\tprintf(\"%d\",i);\r\n\t\t\r\n//\t\tif(i==maxVal){\r\n////\t\t\tint val=checkZero(minVal,maxVal+1);\r\n//\t\t\tif(val==1){\r\n//\t\t\t\ti=0;\r\n//\t\t\t}\r\n//\t\t}\r\n\t\t\r\n\t}\r\n\tfor(i=0;i<=maxVal;i++){\r\n\t\twhile(count[i]>0){\r\n\t\t\tc[j++]=i;\r\n\t\t\tcount[i]--;\r\n\t\t}\r\n\t}\t\r\n//\t\tif(j>=n-1){\r\n//\t\t\tbreak;\r\n//\t\t}\r\n\t\r\n\tinitialiseCount(maxVal);\r\n\tprintArr(n);\r\n\treturn;\r\n}\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tint n,i;\r\n\twhile(t--){\r\n\t\t\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\t}\r\n\t\tsolve(n);\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9806094182825484, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "eeb94181d8223a7a40f171e78402014d", "bug_code_uid": "f47aef0eb01d8f983dd4f43519a58635", "src_uid": "0efd4b05b3e2e3bc80c93d37508a5197", "apr_id": "d23186ecaeb2a17a88d7579d7a1dd1ea", "difficulty": 1400, "tags": ["binary search", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \n long long int test,i,j,n,flag=0,o1=0,o2=0,b1,x,m,y,l,max,x1,y1,sum2,min,k,f[10]={0},r,o,sum,sum1=0,count,a[1000000]={0},flag1=0;\n\nscanf(\"%lld%lld\",&n,&x);\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n}\nqsort(a,n,sizeof(long long int),cmpfunc);\ncount=1;\nsum=0;\nfor(i=n/2;i<n-1;i++){\n \n    l=(abs(a[i]-a[i+1])*count);\n    if(l<=x){\n     x-=l;\n     sum=a[i+1];\n     count++;\n    }else{\n        break;\n    }\n    \n}\n  //printf(\"%lld %lld %lld\\n\",count,sum,x);\nif(count<=x){\n    sum+=x/count;\n}\nprintf(\"%lld\",sum);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \n long long int test,i,j,n,flag=0,o1=0,o2=0,b1,x,m,y,l,max,x1,y1,sum2,min,k,f[10]={0},r,o,sum,sum1=0,count,a[1000000]={0},flag1=0;\n\nscanf(\"%lld%lld\",&n,&x);\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n}\nqsort(a,n,sizeof(long long int),cmpfunc);\ncount=1;\nsum=a[n/2];\nfor(i=n/2;i<n-1;i++){\n    \n    l=(abs(a[i]-a[i+1])*count);\n    if(l<=x){\n     x-=l;\n     sum=a[i+1];\n     count++;\n    }else{\n        break;\n    }\n    \n}\n  //printf(\"%lld %lld %lld\\n\",count,sum,x);\nif(count<=x){\n    sum+=(x/count);\n}\nprintf(\"%lld\",sum);\nreturn 0;\n}"}
{"similarity_score": 0.9682726204465335, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "107038e85586cd096f1976f4aa315e7a", "bug_code_uid": "5e2dee4e15faa08852b8ed70b6b4b9c0", "src_uid": "4798211615bcff8730378330756ae63f", "apr_id": "8ebb302cdc6ffb7cd0354a5609b0a1d9", "difficulty": 2000, "tags": ["dp", "binary search", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong  int n,i,j,k=0,corta=0,suma=0,suma1=0,suma2,suma3,X=0,P,d;\n\tscanf(\"%ld\",&n);\n\tint vet[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&vet[i]);\n\t\tsuma+=vet[i];\n             if(vet[i]==0){\n              k++;\n\t\t}\n\t}\n\tif(n<3 || suma%3!=0){\n\t\t\tprintf(\"0\");\n\t\t    }else if(k==n){\n\t\t\t\td=(n-2)*(n-1)/2;\n\t\t\t\t printf(\"%ld\",d);\n\t\t\t}else{\n\t            \t\tP=suma/3;                   \n\t\t            for(i=0;i<n-2;i++){\n\t\t                suma1+=vet[i];          \n\t\t                if(suma1==P){          \n\t\t                    suma2=0;\n\t\t                    for(j=i+1;j<n-1;j++){\n\t\t                        suma2+=vet[j];  \n\t\t\t                        if(suma2==P){ \n\t\t\t                            corta++;\n\t\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\tprintf(\"%ld\",corta);\n\t\t}\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int n,i,j,k=0,corta=0,suma=0,suma1=0,suma2,suma3,X=0,P,d;\n\tscanf(\"%I64d \",&n);\n\tint vet[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&vet[i]);\t\t\n\t\tsuma+=vet[i];\n             if(vet[i]==0){\n              k++;\n\t\t}\n\t}\n\tif(n<3 || suma%3!=0){\n\t\t\tprintf(\"0\");\n\t\t    }else if(k==n){\n\t\t\t\t printf(\"%I64d \",(n-2)*(n-1)/2);\n\t\t\t}else{\n\t            \t\tP=suma/3;                   \n\t\t            for(i=0;i<n-2;i++){\n\t\t                suma1+=vet[i];          \n\t\t                if(suma1==P){          \n\t\t                    suma2=0;\n\t\t                    for(j=i+1;j<n-1;j++){\n\t\t                        suma2+=vet[j];  \n\t\t\t                        if(suma2==P){ \n\t\t\t                            corta++;\n\t\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\tprintf(\"%I64d \",corta);\n\t\t}\n    return 0;\n}\n\n"}
{"similarity_score": 0.7570621468926554, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "5529da4743e9148f1ebe68ce4251f8fe", "bug_code_uid": "b1765703f81f520fac1a2a270f3b1e30", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "c5c40ff5aceb08af8e412af4af802973", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,x,c=0;\n    scanf(\"%d\",&n);\n    int a[n][2];\n    for(i=0;i<n;i++)\n        for(j=0;j<2;j++)\n        scanf(\"%d\",&a[i][j]);\n        for(i=0;i<n;i++)\n            x=a[i][1]-a[i][0];\n    for(i=0;i<n;i++)\n            if((a[i][0]!=a[i][1])&&x>=2)\n            c++;\n            if(c>0)\n        printf(\"%d\",c);\n        else printf(\"0\");\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,c=0;\n    scanf(\"%d\",&n);\n    int a[n][2];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if((a[i][1]-a[i][0])>=2)\n            c++;\n    }\n    printf(\"%d\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.8260497000856898, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9d808ffdd6bbc18430459f0b0aaff952", "bug_code_uid": "130ce5432773e8850e39c1ac8ef6098e", "src_uid": "0a187d80fdc3df579909840e9111ac7e", "apr_id": "0fb4ffd60be2e4a392ef620edaee8944", "difficulty": 1000, "tags": ["games", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid loki()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint inp,i,min1=1000000001,min2=1000000001;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&inp);\r\n\t\t\tif(i%2==0)\r\n\t\t\t{\r\n\t\t\t\tif(min1>inp)\r\n\t\t\t\tmin1=inp;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(min2>inp)\r\n\t\t\t\tmin2=inp;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(n%2==1)\r\n\t\tprintf(\"Mike\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(min1<=min2)\r\n\t\t\tprintf(\"Joe\\n\");\r\n\t\t\telse\r\n\t\t\tprintf(\"Mike\\n\");\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tloki();\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid loki()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint inp,i,min1=1000000001,min2=1000000001,t1,t2;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&inp);\r\n\t\t\tif(i%2==0)\r\n\t\t\t{\r\n\t\t\t\tif(min1>inp)\r\n\t\t\t\t{\r\n\t\t\t\t\tmin1=inp;\r\n\t\t\t\t\tt1=i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(min2>inp)\r\n\t\t\t\t{\r\n\t\t\t\t\tmin2=inp;\r\n\t\t\t\t\tt2=i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(n%2==1)\r\n\t\tprintf(\"Mike\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(min1<min2)\r\n\t\t\tprintf(\"Joe\\n\");\r\n\t\t\telse if(min1==min2)\r\n\t\t\t{\r\n\t\t\t\tif(t1<t2)\r\n\t\t\t\tprintf(\"Joe\\n\");\r\n\t\t\t\telse\r\n\t\t\t\tprintf(\"Mike\\n\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\tprintf(\"Mike\\n\");\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tloki();\r\n}"}
{"similarity_score": 0.33202614379084966, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "9c31905d4ea86ad3ec28d1fccc365720", "bug_code_uid": "a809bfd35fea27550d01d8d516ac9a4a", "src_uid": "64b597a47106d0f08fcfad155e0495c3", "apr_id": "74273bb77b431cfb1feb1f5ae3912732", "difficulty": 900, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,s;\n    scanf(\"%d %d\",&n,&s);\n    int a[n+1],b[n+1],i,flag=0;\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&b[i]);\n    if(a[1]==0||(b[s]==0&&a[s]==0))\n    flag=0;\n    else{\n        i=s;\n        while(a[i]!=1)\n        i++;\n        while(i!=s&&a[i]==1)\n        i--;\n    }if(i==s) flag=1;\n    if(flag) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main ()\n{\n\tint n,s,i,cou=0;\n\tscanf(\"%d %d\",&n,&s);\n\tint a[n],b[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tfor(i=s;i<n;i++)\n\tif ((a[i]==1)&&(b[i]==1))\n\t\tcou=1;\n\tif ((a[0]==1) && ((a[s-1]==1)|| ((b[s-1]==1) &&(cou==1))))\n\t\tprintf(\"Yes\");\n\t\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}"}
{"similarity_score": 0.3954154727793696, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "26a0085a70756f5aa516df9f33a6635d", "bug_code_uid": "1c0e878c80b60f4ff187e2a632692a23", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "1979abed711a5f33f7f9bd3946ed0662", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tlong long int n,i,x,l[100001],r[100001],j,p,sum=0;\n\tscanf(\"%I64d%I64d\",&n,&x);\n\t\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%I64d%I64d\",&l[i],&r[i]);\n\t\n\tj=1;\n\tp=1;\n\t\n\tfor(i=1;i<=r[n];)\n\t{    \n        if(i+x>l[j])\n\t\t\tj++;\n\n\t\tif(i+x<=l[j])\n\t\t{\n\t\t\ti=i+x;\n\t\t\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tsum=r[p++]-i+1;\n\t\t\ti=r[p-1]+1;\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\tprintf(\"%I64d\",sum);\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long int x,n,l[100001],r[100001],sum=0,i;\n\n\tscanf(\"%I64d%I64d\",&n,&x);\n\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%I64d%I64d\",&l[i],&r[i]);\n\n\tfor(i=1;i<=n;i++)\n\t\tsum=sum+r[i]-l[i]+1;\n\n\tsum=sum+(l[1]-1)%x;\n\n\tfor(i=2;i<=n;i++)\n\t\tsum=sum+(l[i]-r[i-1]-1)%x;\n\n\tprintf(\"%I64d\",sum);\n\n\treturn 0;\n\n}\n"}
{"similarity_score": 0.9641148325358851, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "16b21ec7dd5674d12361db84c3814edf", "bug_code_uid": "ab4b454fa826c9c32f635df8e1cad1ea", "src_uid": "255abf8750541f54d8ff0f1f80e1f8e7", "apr_id": "0c53a45d229bf4f4245cbb1c41272049", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    for (int x = 0; x < t; x++)\r\n    {\r\n        int temp=0;\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n\r\n        int arr[n];\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]); \r\n        }\r\n        \r\n        for (int i = 1; i < n-1; i++)\r\n        {\r\n            if ((arr[i]>arr[i-1]&&arr[i]>arr[i+1]))\r\n            {\r\n                temp++;\r\n                if ((arr[i+2]>arr[i])&&(i<n-2))\r\n                {\r\n                    arr[i+1]=arr[i+2];\r\n                }\r\n                else{\r\n                    arr[i+1]=arr[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\",temp);\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            printf(\"%d \",arr[i]);\r\n        }\r\n  ", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    for (int x = 0; x < t; x++)\r\n    {\r\n        int temp=0;\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n\r\n        int arr[n];\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]); \r\n        }\r\n        \r\n        for (int i = 1; i < n-1; i++)\r\n        {\r\n            if ((arr[i]>arr[i-1]&&arr[i]>arr[i+1]))\r\n            {\r\n                temp++;\r\n                if ((arr[i+2]>arr[i])&&(i<n-2))\r\n                {\r\n                    arr[i+1]=arr[i+2];\r\n                }\r\n                else{\r\n                    arr[i+1]=arr[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\",temp);\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            printf(\"%d \",arr[i]);\r\n        }\r\n        \r\n        printf(\"\\n\");\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9969230769230769, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8c73c517248da37fbce8bedd62924b81", "bug_code_uid": "b801cf0a8562bea6a565caffff276417", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "c0ba8376a9da239863bc8226228a280c", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int x,y;\n    char a[100000],b[100000];\n    gets (a);\n    gets (b);\n    x=strlen(a);\n    y=strlen(b);\n    if(x>y)\n    printf(\"%d\",x);\n    else if(y>x)\n    printf(\"%d\",y);\n    else if(strcmp(a,b)==0)\n    printf(\"-1\");\n    else printf(\"%d\",x);\n    \n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int x,y;\n    char a[1000000],b[1000000];\n    gets (a);\n    gets (b);\n    x=strlen(a);\n    y=strlen(b);\n    if(x>y)\n    printf(\"%d\",x);\n    else if(y>x)\n    printf(\"%d\",y);\n    else if(strcmp(a,b)==0)\n    printf(\"-1\");\n    else printf(\"%d\",x);\n    \n    \n    return 0;\n}\n"}
{"similarity_score": 0.7655502392344498, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "796a5dfcc9c229d4f92458d031223320", "bug_code_uid": "6a006dd09add476a711de734eaa30d46", "src_uid": "f60ea0f2caaec16894e84ba87f90c061", "apr_id": "e44ce4f71fa5a4039da54e16b995eee8", "difficulty": 1500, "tags": ["constructive algorithms", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main (){\n    int x,y,z,m;\n    scanf(\"%i\",&m);\n    x=m;\n    y=m+1;\n    z=(m+1)*(m);\n    printf(\"%i %i %i\",x,y,z);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main (){\n    int x,y,z,m;\n    scanf(\"%i\",&m);\n    x=m;\n    y=m+1;\n    z=(m+1)*(m);\n    if(x!=y&&x!=z&&z!=y){\n        printf(\"%i %i %i\\n\",x,y,z);\n    }\n    else {\n        printf(\"-1\");\n    }   \n    return 0;\n}"}
{"similarity_score": 0.8663507109004739, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6f27765220fc92ade120528d54ccd0e6", "bug_code_uid": "9c6b3f18e1e56d7a9bdfd3bb835ca30a", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "fb876e742ff70c43bbc2e4d367da2f3e", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n;\n    long long int a,b,c,t,j,k,l,m,q;\n    while(scanf(\"%d\",&n)!=EOF){\n        for(i=1;i<=n;i++){\n            scanf(\"%lld %lld %lld\",&a,&b,&c);\n            if(a<=b){t=a;a=b;b=t;}\n            if(a<=c){t=a;a=b;b=t;}\n            if(b<=c){t=b;b=c;c=t;}\n            m=b-a;\n            l=c-m;\n            j=l/2;\n            if(l%2==0){printf(\"%lld\\n\",b+j);}\n            else {printf(\"%lld\\n\",b+j-1);}\n\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n;\n    long long int a,b,c,t,j,k,l,m,q;\n    while(scanf(\"%d\",&n)!=EOF){\n        for(i=1;i<=n;i++){\n            scanf(\"%lld %lld %lld\",&a,&b,&c);\n            if(a<=b){t=a;a=b;b=t;}\n            if(a<=c){t=a;a=b;b=t;}\n            if(b<=c){t=b;b=c;c=t;}\n            m=b-a;\n            l=c-m;\n            if(l%2==0){\n                    j=l/2;\n                    printf(\"%lld\\n\",b+j);\n            }\n            else {\n                    l=l-1;\n                    j=l/2;\n                    printf(\"%lld\\n\",b+j);}\n\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9618768328445748, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "439981ef9a299857de5232cf47b8b625", "bug_code_uid": "b12fef86f0631ba2aebba2173922a72c", "src_uid": "840a4e16454290471faa5a27a3c795d9", "apr_id": "c761b835ed1fe151ff05a4a922fb8585", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <assert.h>\n#include <limits.h>\n#include <math.h>\n#include <stdbool.h>\n#include <stddef.h>\n#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint n,fk=0;\n\tscanf(\"%d\",&n);\n\n\tunsigned long long int a[n],t;\n\n\n\tfor(int i=0 ; i<n ; i++){\n\t\n\t\tscanf(\"%llu \",a+i);\n\n\t\tt=a[i];\n\n\t\tif((a[i]%70)<=20)\n\t\t\tt=t+(20-(t%70))-5;\n\t\telse\n\t\t\tt=t-((t%70)-20)-5;\n\n\t\tif((a[i]%70)<=20 && t>=90)\n\t\t\tt=t-70;\n        \n\n        \n\t\tfk=0;\n\n\t\tfor(int p=t ; p<=t+75 ; p=p+14){\n\t\t\tfor(int j=p ; j<=p+5 ; j++){\n\t\t\t\tif(j==a[i]){\n\t\t\t\t\tfk=-1;\n\t\t\t\t\tgoto s;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\n\t\ts:\n\n\t\tif(fk==-1)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\n\n\t}\n\treturn 0;\n}", "fixed": "#include <assert.h>\n#include <limits.h>\n#include <math.h>\n#include <stdbool.h>\n#include <stddef.h>\n#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint n,fk=0;\n\tscanf(\"%d\",&n);\n\n\tunsigned long long int a[n],t;\n\n\n\tfor(int i=0 ; i<n ; i++){\n\t\n\t\tscanf(\"%llu \",a+i);\n\n\t\tt=a[i];\n\n\t\tif((a[i]%70)<=20)\n\t\t\tt=t+(20-(t%70))-5;\n\t\telse\n\t\t\tt=t-((t%70)-20)-5;\n\n\t\tif((a[i]%70)<=20 && t>=85)\n\t\t\tt=t-70;\n        \n\t\tfk=0;\n\n\t\tfor(unsigned long long int p=t ; p<=t+75 ; p=p+14){\n\t\t\tfor(unsigned long long int j=p ; j<=p+5 ; j++){\n\t\t\t\tif(j==a[i]){\n\t\t\t\t\tfk=-1;\n\t\t\t\t\tgoto s;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\n\t\ts:\n\n\t\tif(fk==-1)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\n\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9988317757009346, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b1af6915ec3d9fe1d627e7739c91ad03", "bug_code_uid": "4e1f7ff40ca65d090c1cd2b58d162c18", "src_uid": "f4804780d9c63167746132c35b2bdd02", "apr_id": "980a737b9443eafd97eeb920eac969d1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int x,y,z;\n        scanf(\"%d %d %d\",&x,&y,&z);\n        if(x>z)\n        {\n            int temp=x;\n            x=z;\n            z=temp;\n        }\n        if(y>z)\n        {\n            int temp=y;\n            y=z;\n            z=temp;\n        }\n        if(x>y)\n        {\n            int temp=x;\n            x=y;\n            y=temp;\n        }\n        if(y==z)\n        {\n            printf(\"YES\\n\");\n            if(x==y)\n            {\n                printf(\"%d %d %d\\n\",x,y,z);\n            }else{\n                if(x==1)\n                {\n                    printf(\"%d %d %d\\n\",x,x,z);\n                }else{\n                    printf(\"%d %d %d\\n\",x,y-1,z);\n                }\n            }\n        }else{\n            printf(\"NO\\n\");\n        }\n\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int x,y,z;\n        scanf(\"%d %d %d\",&x,&y,&z);\n        if(x>z)\n        {\n            int temp=x;\n            x=z;\n            z=temp;\n        }\n        if(y>z)\n        {\n            int temp=y;\n            y=z;\n            z=temp;\n        }\n        if(x>y)\n        {\n            int temp=x;\n            x=y;\n            y=temp;\n        }\n        if(y==z)\n        {\n            printf(\"YES\\n\");\n            if(x==y)\n            {\n                printf(\"%d %d %d\\n\",x,y,z);\n            }else{\n                if(x==1)\n                {\n                    printf(\"%d %d %d\\n\",x,x,z);\n                }else{\n                    printf(\"%d %d %d\\n\",x,x-1,z);\n                }\n            }\n        }else{\n            printf(\"NO\\n\");\n        }\n\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9758364312267658, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "407a3cef322e6c4fc61634d1e660e499", "bug_code_uid": "c35d0b1ff2780d6da9230c3b6755553e", "src_uid": "3992602be20a386f0ec57c51e14b39c5", "apr_id": "2be6bc45d150bd7db4e75ae4c831d1ce", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint v[100000];\nint main(){\n    //FILE *fin=fopen(\"codeforces.in\",\"r\");\n    //FILE *fout=fopen(\"codeforces.out\",\"w\");\n    int n,k,i,z=0,d=0;\n\n    scanf(\"%d%d\",&n,&k);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&v[i]);\n    //quicksort(0,n-1);\n    for(i=0; i<n; i++){\n        z+=v[i]/(2*k);\n        v[i]%=2*k;\n        if(v[i]/k+(v[i]%k)>1){\n            z++;\n            v[i]=0;\n        }\n    }//fprintf(fout,\"%d\\n\",z);\n    for(i=0; i<n; i++)\n        if(v[i])\n            d++;\n    z+=d/2+(d%2>0);\n    printf(\"%d\\n\",z);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint v[100000];\nint main(){\n    //FILE *fin=fopen(\"codeforces.in\",\"r\");\n    //FILE *fout=fopen(\"codeforces.out\",\"w\");\n    int n,k,i,z=0,d=0;\n\n    scanf(\"%d%d\",&n,&k);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&v[i]);\n    for(i=0; i<n; i++){\n        z+=v[i]/(2*k);\n        v[i]%=2*k;\n        if(v[i]/k+(v[i]%k>0)>1){\n            z++;\n            v[i]=0;\n        }\n    }//fprintf(fout,\"%d\\n\",z);\n    for(i=0; i<n; i++)\n        if(v[i])\n            d++;\n    z+=d/2+(d%2>0);\n    printf(\"%d\\n\",z);\n    return 0;\n}\n"}
{"similarity_score": 0.9974811083123426, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "005df1e5f89434e3e41a87956774dd60", "bug_code_uid": "81f1ff41b3d147954b1355c9ed5b40c8", "src_uid": "c3f080681e3da5e1290ef935ff91f364", "apr_id": "341ef45f68f474af5cf8e4836b5d2a00", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,m,i,j=0,T=0;\n    scanf(\"%d%d\",&n,&m);\n    int c[n],a[m];\n    for (i=0; i<n; i++)\n        scanf(\"%d\",&c[i]);\n    for (i=0; i<m; i++)\n        scanf(\"%d\",&a[i]);\n    for (i=0; i<n; i++)\n    {\n        if(a[j]>=c[i])\n        {\n            T++;\n            j++;\n            if(j>=m-1)\n                break;\n        }\n    }\n    printf(\"%d\\n\",T);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,m,i,j=0,T=0;\n    scanf(\"%d%d\",&n,&m);\n    int c[n],a[m];\n    for (i=0; i<n; i++)\n        scanf(\"%d\",&c[i]);\n    for (i=0; i<m; i++)\n        scanf(\"%d\",&a[i]);\n    for (i=0; i<n; i++)\n    {\n        if(a[j]>=c[i])\n        {\n            T++;\n            j++;\n            if(j>=m)\n                break;\n        }\n    }\n    printf(\"%d\\n\",T);\n    return 0;\n}\n"}
{"similarity_score": 0.2222222222222222, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "3e78a1a93beaa6c0e15e188b4ba1d5bc", "bug_code_uid": "414ca465a10db062fbfb93c1bad6ea8c", "src_uid": "34dd4c8400ff7a67f9feb1487f2669a6", "apr_id": "349cb439a5f41dcfa07e6d9be8e2122d", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\nint n,k;\nscanf(\"%d %d\",&n,&k);\nif(n>50||k>50|)\n{exit(0);}\nchar a[n];\nscanf(\"%s\",a);\nif(a[0]==a[n-1])\n{\n    for(int i=0;i<k;i++)\n   { if(i==0)\n       printf(\"%s\",a);\n       else {for(int j=1;j<n;j++)\n           {printf(\"%c\",a[j]);}\n       }\n}\n}\nelse\n{for(int i=0;i<k;i++)\n    printf(\"%s\",a);\n}\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define N 50\n\nint main() {\n\tint n, k, x = 1;\n\tchar s[N + 1];\n\tscanf(\"%d%d\", &n, &k);\n\tgetchar();\n\tgets(s);\n\twhile (x < n && strncmp(s, s + x, n - x) != 0) ++x;\n\tx = n - x;\n\tfputs(s, stdout);\n\twhile (--k > 0) {\n\t\tfputs(s + x, stdout);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.975, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3081f3919ea1762f4498905e1476fe82", "bug_code_uid": "5b33ad1c79425595638e789ad84a200c", "src_uid": "ccfe798f5dc63c492ff54cf40bb40613", "apr_id": "1a51ded11dc4dba9d63c23f50657a42a", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t > 0)\n    {\n        long long int a, b, x, y, i, z;\n        scanf(\"%lld %lld\", &a, &b);\n        i = b - a;\n        if(i < 0)\n            i = i * (-1);\n        x = i / 5;\n        i = i % 5;\n        y = i / 2;\n        i = i % 2;\n        z = i;\n        printf(\"%lld\\n\", x + y + z);\n        }\n        \n\n        t--;\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t > 0)\n    {\n        long long int a, b, x, y, i, z;\n        scanf(\"%lld %lld\", &a, &b);\n        i = b - a;\n        if(i < 0)\n            i = i * (-1);\n        x = i / 5;\n        i = i % 5;\n        y = i / 2;\n        i = i % 2;\n        z = i;\n        printf(\"%lld\\n\", x + y + z);\n        t--;\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.293598233995585, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "6332b884d1cb7e59d3733170ec2b055b", "bug_code_uid": "9ce59f16b4bfc63d84549ac0500c415d", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "f4615d583cc5e3ea2b0a7b4e5c87d913", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main()\n{\n    char s[100001];\n    gets(s);\n    int i;\n    int zero=0;\n    int check=0;\n    for(i=0;i<strlen(s);i++){\n        if((i==strlen(s)-1)&&s[i]=='1'&&check==0){\n            s[i]='2';\n        }\n        if(s[i]=='1'||(check)){\n            printf(\"%c\",s[i]);\n        }\n        if(s[i]=='0'){\n                check++;\n            }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char s[100001];\n    int i=0;\n    char c='1';\n    int check=0;\n    while(c!='\\n'){\n        scanf(\"%c\",&c);\n        s[i]=c;\n        if(s[i]=='0'&&check==0){\n            s[i]='2';\n            check++;\n        }\n        i++;\n    }\n    i--;\n    int j;\n    for(j=0;check==0&&j<i-1;j++){\n        printf(\"%c\",s[j]);\n    }\n    for(j=0;check!=0&&j<i;j++){\n        if(s[j]!='2'){\n            printf(\"%c\",s[j]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9966329966329966, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e8a96b96742bf18cec6d69abdefd559a", "bug_code_uid": "ee44c1d42fcf72e342e7b31e5a27b7e7", "src_uid": "2cd5807e3f9685d4eff88f2283904f0d", "apr_id": "4d2e8b29156b1a25805838c94f3e0f42", "difficulty": 1000, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n     double h,l,x;\n    scanf(\"%lf %lf\",&h,&l);\n    x=(l*l-h*h)/(2.0*h);\n    printf(\"%.13lf\\n\",x);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n     double h,l,x;\n    scanf(\"%lf %lf\",&h,&l);\n    x=(l*l-h*h)/(2.0*h);\n    printf(\"%.13f\\n\",x);\n    return 0;\n}\n"}
{"similarity_score": 0.8116545265348595, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7eb201153f890392578e9ddb82c964f4", "bug_code_uid": "0d9ab758dc8494952ad937ea79dcb24f", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "ad5d4de669a61334b14a4c0003e902d4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/// ****** Property of vipulks ****** \\\n\n#include <stdio.h>\n#include <limits.h>\n#include <stdbool.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n#define ll long long\n\nint main(){\n\tll t,n,i,j,k,ans,a,b,c,d;\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\tk=0;ans=0;\n\t\tscanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n\t\tans+=b;i=a-b;\n\t\tif(a>b){\n\t\t\tif(c<=d)\n\t\t\t\tans=-1;\n\t\t\telse{\n\t\t\t\twhile(i>0){\n\t\t\t\t\ti-=c-d;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tans+=k*c;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}", "fixed": "/// ****** Property of vipulks ****** \\\n\n#include <stdio.h>\n#include <limits.h>\n#include <stdbool.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n#define ll long long\n\nint main(){\n\tll t,n,i,j,k,ans,a,b,c,d;\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\tk=0;ans=0;\n\t\tscanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n\t\tans+=b;i=a-b;j=c-d;\n\t\tif(a>b){\n\t\t\tif(c<=d)\n\t\t\t\tans=-1;\n\t\t\telse{\n\t\t\t\tif(i%j==0)\n\t\t\t\t\tk=i/j;\n\t\t\t\telse\n\t\t\t\t\tk=(i/j)+1;\n\t\t\t\tans+=k*c;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9988276670574443, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1ae4984f8490fd0480d9694cbb1ae527", "bug_code_uid": "0495fa76982f9b8aa272260ccdd1ede4", "src_uid": "d126ef6b94e9ab55624cf7f2a96c7ed1", "apr_id": "f0d8030284ea0f8b0799ce223fb5f52d", "difficulty": 1500, "tags": ["dp", "greedy", "math", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, an=0, pn=0;\n    scanf(\"%d\", &n);\n    int a[n];\n    int ca[101] = {0};\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n        ca[a[i]]++;\n    }\n    for (int i = 0; i < 100; i++) {\n        if (ca[i] == 1) {\n            an++;\n        }\n        else if (ca[i] > 2) {\n            pn++;\n        }\n    }\n    if (an % 2 == 0 || an % 2 == 1 && pn > 0) {\n        printf(\"YES\\n\");\n        int h = an / 2;\n        for (int i = 0; i < n; i++) {\n            if (h > 0 && ca[a[i]] == 1) {\n                printf(\"B\");\n                h--;\n            }\n            else if (an % 2 == 1 && ca[a[i]] > 2) {\n                printf(\"B\");\n                an--;\n            }\n            else {\n                printf(\"A\");\n            }\n        }\n    }\n    else {\n        printf(\"NO\");\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, an=0, pn=0;\n    scanf(\"%d\", &n);\n    int a[n];\n    int ca[101] = {0};\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n        ca[a[i]]++;\n    }\n    for (int i = 0; i < 101; i++) {\n        if (ca[i] == 1) {\n            an++;\n        }\n        else if (ca[i] > 2) {\n            pn++;\n        }\n    }\n    if (an % 2 == 0 || an % 2 == 1 && pn > 0) {\n        printf(\"YES\\n\");\n        int h = an / 2;\n        for (int i = 0; i < n; i++) {\n            if (h > 0 && ca[a[i]] == 1) {\n                printf(\"B\");\n                h--;\n            }\n            else if (an % 2 == 1 && ca[a[i]] > 2) {\n                printf(\"B\");\n                an--;\n            }\n            else {\n                printf(\"A\");\n            }\n        }\n    }\n    else {\n        printf(\"NO\");\n    }\n}\n"}
{"similarity_score": 0.9883720930232558, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "60ae898b46db239afb5597bd738e7283", "bug_code_uid": "fbc31735b99a27b6925ae9d033b95192", "src_uid": "2fa543c8b8f9dc500c36cf719800a6b0", "apr_id": "e2b0fb4a65e2a1d06035937dcf1b774c", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint tmp[26][26];\n\nint main(void) {\n\tint n, i, j, h, \n\t\tk = 0, tmp[26][26] = { 0 };\n\tchar S[200001], T[200001]; \n\tscanf(\"%d%s%s\", &n, S, T);\n\n\tfor( i = 0; i < n; i++ )\n\t\tif (S[i] != T[i]) {\n\t\t\ttmp[S[i]-'a'][T[i]-'a'] = i+1;\n\t\t\tk++;\n\t\t}\n\n\tfor( i = 0; i < 25; i++ )\n\t\tfor( j = i+1; j < 26; j++ )\n\t\t\tif ( tmp[i][j] && tmp[j][i] ) {\n\t\t\t\t\tprintf(\"%d\\n%d %d\\n\", k - 2, tmp[i][j], tmp[j][i]);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\tfor( i = 0; i < 26; i++ )\n\t\tfor( j = 0; j < 26; j++ ) \n\t\t\tif ( i != j && tmp[i][j] )\n\t\t\t\tfor( h = 0; h < 26; h++ )\n\t\t\t\t\tif ( tmp[j][h] ) {\n\t\t\t\t\t\tprintf(\"%s\\n\", tmp[i][j], tmp[j][h]);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\n\tprintf(\"%d\\n%d %d\\n\", k, -1, -1);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint tmp[26][26];\n\nint main(void) {\n\tint n, i, j, h, \n\t\tk = 0, tmp[26][26] = { 0 };\n\tchar S[200001], T[200001]; \n\tscanf(\"%d%s%s\", &n, S, T);\n\n\tfor( i = 0; i < n; i++ )\n\t\tif (S[i] != T[i]) {\n\t\t\ttmp[S[i]-'a'][T[i]-'a'] = i+1;\n\t\t\tk++;\n\t\t}\n\n\tfor( i = 0; i < 25; i++ )\n\t\tfor( j = i+1; j < 26; j++ )\n\t\t\tif ( tmp[i][j] && tmp[j][i] ) {\n\t\t\t\t\tprintf(\"%d\\n%d %d\\n\", k - 2, tmp[i][j], tmp[j][i]);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\tfor( i = 0; i < 26; i++ )\n\t\tfor( j = 0; j < 26; j++ ) \n\t\t\tif ( i != j && tmp[i][j] )\n\t\t\t\tfor( h = 0; h < 26; h++ )\n\t\t\t\t\tif ( tmp[j][h] ) {\n\t\t\t\t\t\tprintf(\"%d\\n%d %d\", k - 1, tmp[i][j], tmp[j][h]);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\n\tprintf(\"%d\\n%d %d\\n\", k, -1, -1);\n\treturn 0;\n}"}
{"similarity_score": 0.8933177022274326, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "53605c70e5a8b9d1c196ecde8081cf61", "bug_code_uid": "fdff0d1459f496d8e11cc1388cc3350c", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "ec9eddeb55930e9bb651a687c56281f7", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[n];\n    int i,max;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    if(n==1)\n    {\n        printf(\"0\");\n        return 0;\n    }\n    for(i=0;i<n-1;i++)\n    {\n        if(arr[i]>=arr[i+1])\n            max=arr[i];\n        else\n            max=arr[i+1];\n    }\n    int cnt=0;\n    for(i=0;i<n;i++)\n    {\n        cnt=cnt+max-arr[i];\n    }\n    printf(\"%d\",cnt);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[n];\n    int i,max=-1;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    if(n==1)\n    {\n        printf(\"0\");\n        return 0;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]>=max)\n            max=arr[i];\n    }\n    int cnt=0;\n    for(i=0;i<n;i++)\n    {\n        cnt=cnt+max-arr[i];\n    }\n    printf(\"%d\",cnt);\n    return 0;\n}\n"}
{"similarity_score": 0.9454001495886313, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "24685a6366cbdff788da685eb3ae773b", "bug_code_uid": "22c8cc6636ab3840c12ec4936a69f8e6", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "f8ba4a31ca2c8b477328777e7a6a6fbd", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//http://codeforces.com/contest/560/problem/a\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint b[1000001]={0};\nint compare(const void *a , const void *b){\n    int c = *(int*) a;\n    int d = *(int*) b;\n    if (c<d)\n        return -1;\n    else if(c==d){\n        return 0;\n    }\n    else return 1;\n}\nint main(void){\n    int i,ans=-1,temp;\n    int num;\n    int max=0;\n    scanf(\"%d\",&num);\n    for(i=1;i<=num;i++){\n        scanf(\"%d\",&temp);\n        b[temp]=1;\n        if(temp>max) max=temp;\n    }\n    for(i=1;i<=max;i++){\n        if(b[i]==0){\n            ans=i;\n            break;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n\n", "fixed": "//http://codeforces.com/contest/560/problem/a\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint b[1000001]={0};\nint compare(const void *a , const void *b){\n    int c = *(int*) a;\n    int d = *(int*) b;\n    if (c<d)\n        return -1;\n    else if(c==d){\n        return 0;\n    }\n    else return 1;\n}\nint main(void){\n    int i,ans=-1,temp;\n    int num;\n    int max=0;\n    scanf(\"%d\",&num);\n    for(i=1;i<=num;i++){\n        scanf(\"%d\",&temp);\n        b[temp]=1;\n        if(temp>max) max=temp;\n    }\n    if(b[1]){\n        ans=-1;\n    }\n    else{\n        ans=1;\n    }\n    /**for(i=1;i<=max;i++){\n        if(b[i]==0){\n            ans=i;\n            break;\n        }\n    }**/\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.855457227138643, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5730d2ce7366d649d6c37e234242dba4", "bug_code_uid": "3c7e57903f88c1dde296e71178665ccf", "src_uid": "6f5d41346419901c830233b3bf5c9e65", "apr_id": "d5c0b63cb9b7f6f4b193db0b62fe32a7", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        float d, a;\n        scanf(\"%f\", &d);\n        if(d<4 && d>0)\n            printf(\"N\\n\");\n        else\n        {\n            a = (d + sqrt(d*d - 4*d))/2;\n            printf(\"Y %.9f %.9f\\n\",a, d-a);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        float d, a, b;\n\n        scanf(\"%f\", &d);\n        if(d<4 && d>0)\n            printf(\"N\\n\");\n        else\n        {\n            printf(\"Y %.9f %.9f\\n\", (d + sqrt(d*d-4*d))/2, (d - sqrt(d*d-4*d))/2);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9965870307167235, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "862a0d9b335365588242561f55f9aa63", "bug_code_uid": "b6bf7128fb63f2fce79a43c69a1c12f6", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "0689832c5b4d9fc83d88fbd79cc34d7b", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n1,n2,k,m;\n\tscanf(\"%d%d%d%d\",&n1,&n2,&k,&m);\n\tint a[n1],b[n2];\n\tfor(int i=0;i<n1;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n2;i++){\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\tif(k<=n1 &&m<=n2 && a[k-1]<b[nb-m]){\n\t\tprintf(\"YES\");\n\t}\n\telse{\n\t\tprintf(\"NO\");}\n\treturn 0;\n\n}\n\t\n\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n1,n2,k,m;\n\tscanf(\"%d%d%d%d\",&n1,&n2,&k,&m);\n\tint a[n1],b[n2];\n\tfor(int i=0;i<n1;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n2;i++){\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\tif(k<=n1 &&m<=n2 && a[k-1]<b[n2-m]){\n\t\tprintf(\"YES\");\n\t}\n\telse{\n\t\tprintf(\"NO\");}\n\treturn 0;\n\n}\n\t\n\n"}
{"similarity_score": 0.998589562764457, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6645c8d57da8cf4c57ab69eec25c916b", "bug_code_uid": "ac6faa8506a80edb965d82b23d3ac04d", "src_uid": "cf3cfcae029a6997ee62701eda959a60", "apr_id": "10ccfa6d0618e0f2a46634fb1575d170", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    int n;\r\n    int arr[50];\r\n    int k;\r\n    int b;\r\n    int p;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int m = 0; m < t; m++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n\r\n        for (int j = 0; j < n; ++j)\r\n        {\r\n\r\n            for (k = j + 1; k < n; k++)\r\n            {\r\n\r\n                if (arr[j] > arr[k])\r\n                {\r\n\r\n                    b = arr[j];\r\n                    arr[j] = arr[k];\r\n                    arr[k] = b;\r\n                }\r\n            }\r\n        }\r\n\r\n        p = arr[n - 1] - arr[0];\r\n\r\n        printf(\"%d\", p);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    int n;\r\n    int arr[50];\r\n    int k;\r\n    int b;\r\n    int p;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int m = 0; m < t; m++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n\r\n        for (int j = 0; j < n; ++j)\r\n        {\r\n\r\n            for (k = j + 1; k < n; k++)\r\n            {\r\n\r\n                if (arr[j] > arr[k])\r\n                {\r\n\r\n                    b = arr[j];\r\n                    arr[j] = arr[k];\r\n                    arr[k] = b;\r\n                }\r\n            }\r\n        }\r\n\r\n        p = arr[n - 1] - arr[0];\r\n\r\n        printf(\"%d\\n\", p);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9601769911504425, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3d3bdc5c219c3741597673ab02cc97a5", "bug_code_uid": "f8941cb9a4a3cc913e97047509496458", "src_uid": "55270ee4e6aae7fc0c9bb070fcbf5560", "apr_id": "a5023b7cd5a754bf3106ff86b29f77af", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<malloc.h>\nlong long int A[1000001]={0};\nint main()\n{\nlong long int n,m,avg,i,tmpa,tmpb,tot=0,count=0;\t\nscanf(\"%I64d %I64d %I64d\",&n,&m,&avg);\nfor(i=0;i<n;i++)\n{\nscanf(\"%I64d %I64d\",&tmpa,&tmpb);\nif(tmpa<m)A[tmpb]+=m-tmpa;\ntot+=tmpa;\n}\ni=1;\nwhile(n*avg>tot)\n{\nif(A[i]>0)\n{\nif(n*avg-tot>A[i])\n{\ncount+=i*A[i];\ntot+=A[i];\nA[i]=0;\n}\nelse\n{\ncount+=(n*avg-tot)*i;\t\nbreak;\t\n}\nif(A[i]==0)\ni++;\n}\n}\nprintf(\"%I64d\",count);\nreturn 0;\t\n}", "fixed": "#include<stdio.h>\n#include<malloc.h>\nlong long int A[1000001]={0};\nint main()\n{\nlong long int n,m,avg,i,tmpa,tmpb,tot=0,count=0;\t\nscanf(\"%I64d %I64d %I64d\",&n,&m,&avg);\nfor(i=0;i<n;i++)\n{\nscanf(\"%I64d %I64d\",&tmpa,&tmpb);\nif(tmpa<m)A[tmpb]+=m-tmpa;\ntot+=tmpa;\n}\ni=1;\nwhile(n*avg>tot)\n{\nif(A[i]>0)\n{\nif(n*avg-tot>A[i])\n{\ncount+=i*A[i];\ntot+=A[i];\nA[i]=0;\n}\nelse\n{\ncount+=(n*avg-tot)*i;\t\nbreak;\t\n}\n}\nif(A[i]==0)\ni++;\n}\nprintf(\"%I64d\",count);\nreturn 0;\t\n}"}
{"similarity_score": 0.27494908350305497, "equal_cnt": 24, "replace_cnt": 18, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "3497be8dae8a6bb85240e29d3d51899e", "bug_code_uid": "23d1d33d5edd13ede29830f4308f2503", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "c661916d06474982350c8085e03a67c7", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint prime(int a)\n{\n   int c;\n   if(a==2){\n    return 0;\n   }\n   else{\n   for (c=2;c<a;c++)\n   {\n      if (a%c==0){\n     return 0;\n     break;\n     }\n   }\n   }\n}\nint main(){\nint n,d=0,c=0;\nscanf(\"%d\",&n);\n         d=n;\n         while(d>0){\n        d--;\n        c=n-d;\n    if(prime(d)==0 && prime(c)==0){\n        printf(\"%d %d\",c,d);\n        break;\n    }\n    c=0;\n}\n}\n\n", "fixed": "    #include<stdio.h>\n    //#include<cstring>\n   // #include<cstdlib>\n   // #include<iostream>\n    #include<math.h>\n   //#include<algorithm.h>\n    //using namespace std;\n    int n;\n    int check(int x)\n    {\n        int i;\n        for(i=2;i<=sqrt(x);i++)\n           {if(x%i==0)\n            return 1;}\n        return 0;\n    }\n    int main()\n    {\n        scanf(\"%d\",&n);\n        int i;\n        for(i=2;i<=n/2;i++)\n           {\n               if(check(i)&&check(n-i))\n               {\n                   printf(\"%d %d\\n\",i,n-i); return 0;\n                   }\n           }\n        return 0;\n    }\n\n\n"}
{"similarity_score": 0.5342163355408388, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "858a77b7db31b9df6ddb8d088a887bfb", "bug_code_uid": "953d4501912e1f9617f1e9380c43ecef", "src_uid": "9cc61be7dc9b79f46a3e796db0134173", "apr_id": "d69225c3b4f720c9d2ed27d0a273c9f6", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint n,k,temp,sum=0;\nint a[2222],pos[2222];\nint pick[2222];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tmemset(pick,0,sizeof(pick));\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tif(!pick[j]&&a[j]>a[pos[i]])\n\t\t\t{\n\t\t\t\tpos[i]=j;\n\t\t\t}\n\t\t}\n\t\tpick[pos[i]]=true;\n\t}\n\t\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tsum+=a[pos[i]];\n\t}\n\tprintf(\"%d\\n\",sum);\n\t\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tfor(int j=k;j>1;--j)\n\t\t{\n\t\t\tif(pos[j]<pos[j-1])\n\t\t\t{\n\t\t\t\ttemp=pos[j];\n\t\t\t\tpos[j]=pos[j-1];\n\t\t\t\tpos[j-1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpos[0]=0;\n\tfor(int i=1;i<k;++i)\n\t{\n\t\tprintf(\"%d \",pos[i]-pos[i-1]);\n\t}\n\tprintf(\"%d\\n\",n-pos[k-1]);\n\t\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint n,k,temp,sum=0;\nint a[2222],pos[2222];\nint pick[2222];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tmemset(pick,0,sizeof(pick));\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tif(!pick[j]&&a[j]>a[pos[i]])\n\t\t\t{\n\t\t\t\tpos[i]=j;\n\t\t\t}\n\t\t}\n\t\tpick[pos[i]]=1;\n\t}\n\t\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tsum+=a[pos[i]];\n\t}\n\tprintf(\"%d\\n\",sum);\n\t\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tfor(int j=k;j>1;--j)\n\t\t{\n\t\t\tif(pos[j]<pos[j-1])\n\t\t\t{\n\t\t\t\ttemp=pos[j];\n\t\t\t\tpos[j]=pos[j-1];\n\t\t\t\tpos[j-1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpos[0]=0;\n\tfor(int i=1;i<k;++i)\n\t{\n\t\tprintf(\"%d \",pos[i]-pos[i-1]);\n\t}\n\tprintf(\"%d\\n\",n-pos[k-1]);\n\t\n}\n"}
{"similarity_score": 0.8421052631578947, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "483594d03de4fbdbd657c85b8c1e4352", "bug_code_uid": "ba30f754b9d001e9d1033c06645fa316", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "28d9e8c3afbc9bf2521de17218a934e2", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int minPrice=9999999999;\n   \n    int n,a,p,sum=0;\n     scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d%d\",&a,&p);\n        sum+= min(minPrice,p)*a;\n        minPrice = min(minPrice,p);\n    }\nprintf(\"%d\",sum);\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint mini(int a,int b){\n    return a>b?b:a;\n}\nint main(){\n    int minPrice=999999;\n   \n    int n,a,p,sum=0;\n     scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d%d\",&a,&p);\n        sum+= mini(minPrice,p)*a;\n        minPrice = mini(minPrice,p);\n    }\nprintf(\"%d\",sum);\n}"}
{"similarity_score": 0.39296543359611885, "equal_cnt": 22, "replace_cnt": 17, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "c17d5f71d2520514f3f22f8ab3d85f27", "bug_code_uid": "44df4d4733c8577e74d3834a5619f1c3", "src_uid": "a51d2e6e321d7db67687a594a2b85e47", "apr_id": "92a029af7c3ac2066a34679f144c8347", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar s[100005][100005];\nint main()\n{\n    int n;\n    int i,l,j;\n    char c;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        getchar();\n        scanf(\"%s\",s[0]);\n        l=strlen(s[0]);\n        for(i=0;i<l;i++)\n            if(s[0][i]=='?')\n                s[0][i]='x';\n        for(i=1;i<n;i++)\n            gets(s[i]);\n        for(i=1;i<n;i++)\n            for(j=0;j<l;j++)\n            {\n                scanf(\"%c\",&s[i][j]);\n                if(s[i][j]!=s[0][j]&&s[i][j]!='?')\n                    s[0][j]='?';\n            }\n            printf(\"%s\\n\",s[0]);\n                    \n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n;\n    int i,l,j,flag[100005];\n    char c;\n    char s1[100005],s2[100005];\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        memset(flag,0,sizeof(flag));\n        getchar();\n        scanf(\"%s\",s1);\n        l=strlen(s1);\n        if(n!=1)\n        {\n          for(i=1;i<n;i++)\n          {\n            scanf(\"%s\",s2);\n            for(j=0;j<l;j++)\n            {\n                if(s2[j]!='?'&&s1[j]=='?'&&flag[j]==0)\n                    s1[j]=s2[j];\n                if(s2[j]!='?'&&s1[j]!='?'&&s2[j]!=s1[j])\n                {\n                    s1[j]='?';\n                    flag[j]=1;\n                }\n                \n            }\n          }\n          for(i=0;i<l;i++)\n          {\n              if(s1[i]=='?'&&flag[i]==0)\n                  s1[i]='x';\n          }\n        }\n        else\n        {\n            for(i=0;i<l;i++)\n                if(s1[i]=='?')\n                    s1[i]='x';\n        }\n        printf(\"%s\\n\",s1);\n                    \n    }\n    return 0;\n}"}
{"similarity_score": 0.1312169312169312, "equal_cnt": 24, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "b30a9219c65f6e480d5650aca5f35a66", "bug_code_uid": "c67d54a638a3d570e282423110186ffc", "src_uid": "a72873b2f845f733c9b898ad81b32d29", "apr_id": "6e95c720cafde17888bbb387b043daae", "difficulty": 1800, "tags": ["greedy", "graphs", "shortest paths", "dfs and similar", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint n_max = 50001;\nint k_max = 500;\n\nlong long matriz[50001][500];\nint r;\nint cabeza[50001],t,n,u,v,e;\nstruct nodo{\nint x,siguiente;\n}nodo[50001 << 1];\n\nint main(){\n    scanf(\"%d%d\",&n,&t);\n    memset(cabeza,-1,sizeof cabeza);\n    int j=0;\n    for(j = 1;j< n;j ++){\n        scanf(\"%d%d\",&u,&v);\n        addnodo(u,v,e++),addnodo(v,u,e++);\n    }\n    dfs(0,1);\n    printf(\"%d\\n\",r);\n    return 0;\n}\nvoid dfs(int fa,int u){\n    matriz[u][0] = 1;\n    int k=0;\n    for(k= cabeza[u];~k;k = nodo[k].siguiente){\n        int v = nodo[k].x;\n        if(fa == v) continue;\n        dfs(u,v);\n        int j=0;\n        for(j = 0;j < t;j ++)\n            r =r+ matriz[u][j] * matriz[v][t-j-1];\n        for(j = 1;j <= t;j ++)\n            matriz[u][j] =matriz[u][j] + matriz[v][j-1];\n    }\n}\nvoid addnodo(int u,int v,int k){\n    nodo[k].x = v;\n    nodo[k].siguiente = cabeza[u];\n    cabeza[u] = k;\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint vec1[200000];\nint vec2[200000];\nint peso[200000];\nint gb[100000];\nint bg[100000],mm;\nint main() {\n    int n; scanf(\"%d\", &n);\n    memset(gb, -1, sizeof(gb));\n    int i, vi = 0, deg[100000];\n    memset(deg, 0, sizeof(deg));\n    long long s = 0;\n    for (i = 0; i < n-1; i++) {\n        int u, v, w;\n        scanf(\"%d%d%d\", &u, &v, &w); u--; v--;\n        vec1[vi] = v;\n        peso[vi] = w;\n        vec2[vi] = gb[u];\n        gb[u] = vi;\n        vi++;\n        vec1[vi] = u;\n        peso[vi] = w;\n        vec2[vi] = gb[v];\n        gb[v] = vi;\n        vi++;\n        deg[v]++;\n        deg[u]++;\n        s += 2*w;\n    }\n    memset(bg, 0, sizeof(bg));\n    dfs(0, 0);\n    printf(\"%I64d\", s - mm);\n    return 0;\n}\nvoid dfs(int u, int d) {\n    bg[u] = 1;\n    if (d > mm)\n        mm = d;\n\n    int i;\n    for (i = gb[u]; i != -1; i = vec2[i]) {\n        int v = vec1[i], w = peso[i];\n        if (!bg[v])\n            dfs(v, d + w);\n    }\n}\n\n\n"}
{"similarity_score": 0.9982905982905983, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "05a3dce9cb5e76a3017eabecbc1c5137", "bug_code_uid": "fad799974ac8526c72a9f9d7339743d5", "src_uid": "bdea209c7b628e4cc90ebc2572826485", "apr_id": "6c1a9e4300c537f641da951cab1dcf82", "difficulty": 1000, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define fr(i,s,e) for(num i=(s);i<(e);i++)\ntypedef long num;\nchar readchar() {\n    char c; while((c = getchar()) <= 32);\n    return c;\n}\nnum In() {\n    num v = 0, s = 1; char c = readchar();\n    if(c == '-') s = -1, c = getchar();\n    while('0' <= c && c <= '9') v = v * 10 + c - '0', c = getchar();\n    return v * s;\n}\n\n#define SZ 200000\nnum last[SZ], ans, mn = 1e7;\nint main() {\n    num n = In();\n    fr(i,0,n) last[In()] = i + 1;\n    fr(i,0,SZ) {\n        num j = SZ - i - 1, v = last[j];\n        if(v && v < mn) mn = v, ans = j;\n    }\n    printf(\"%ld\\n\", ans);\n}\n", "fixed": "#include <stdio.h>\n#define fr(i,s,e) for(num i=(s);i<(e);i++)\ntypedef long num;\nchar readchar() {\n    char c; while((c = getchar()) <= 32);\n    return c;\n}\nnum In() {\n    num v = 0, s = 1; char c = readchar();\n    if(c == '-') s = -1, c = getchar();\n    while('0' <= c && c <= '9') v = v * 10 + c - '0', c = getchar();\n    return v * s;\n}\n\n#define SZ 200010\nnum last[SZ], ans, mn = 1e7;\nint main() {\n    num n = In();\n    fr(i,0,n) last[In()] = i + 1;\n    fr(i,0,SZ) {\n        num j = SZ - i - 1, v = last[j];\n        if(v && v < mn) mn = v, ans = j;\n    }\n    printf(\"%ld\\n\", ans);\n}\n"}
{"similarity_score": 0.16905901116427433, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "20b511b34a75712f2390511cad8fb5fe", "bug_code_uid": "d7f7fe3e29c910fcf10314adfba0bd4f", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "0937b0b3460212718c56ac084a9eaf2d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<n;i++){\n        if(i%2==1){\n            printf(\"I hate  that \");\n        }\n        else{\n            printf(\"I love  that \");\n        }\n    }\n    if(n%2==1){\n        printf(\"I hate it\\n\");\n    }\n    if(n%2==0){\n        printf(\"I love it\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(int argc, char *argv[]) {\n\tint n,i;\n\tscanf (\"%d\",&n);\n\tfor (i=0 ; i<n ; i++){\n\t\tif (i%2==0){\n\t\t\tprintf(\"I hate\");\n\t\t}\n\t\tif (i%2!=0){\n\t\t\tprintf(\"I love\");\n\t\t}\n\t\tif (i==n-1){\n\t\t\tprintf(\" it\");\n\t\t}\n\t\telse {printf(\" that \");\n\t\t}\n\t}\n\t}"}
{"similarity_score": 0.9957805907172996, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ea8c2d72259092c4b6517d3ca7ea0d3c", "bug_code_uid": "86a9bb890e53ce591ccc1e3d16d20799", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "24e7abd2f094f55ff5910bee5af4a234", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a,ara[100],b,c,i;\n    scanf(\"%d\",&a);\n    for(i=0; i<a; i++)\n    {\n      scanf(\"%d %d\",&b,&c);\n      ara[b-1]=c;\n    }\n    for(i=0; i<a-1; i++)\n    {\n            if(ara[i]>ara[i+1])\n        {\n            printf(\"Happy Alex\");\n            return 0;\n\n        }\n    }\n\n    printf(\"Poor Alex\");\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a,ara[100000],b,c,i;\n    scanf(\"%d\",&a);\n    for(i=0; i<a; i++)\n    {\n      scanf(\"%d %d\",&b,&c);\n      ara[b-1]=c;\n    }\n    for(i=0; i<a-1; i++)\n    {\n            if(ara[i]>ara[i+1])\n        {\n            printf(\"Happy Alex\");\n            return 0;\n\n        }\n    }\n\n    printf(\"Poor Alex\");\n}\n"}
{"similarity_score": 0.9519725557461407, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3dcf85c074a8305828482cf2a08e7dce", "bug_code_uid": "7fc60cde7e1eaf5a12cd0558bbe0cf63", "src_uid": "807c5ec37b0ea83ef40550698f1ff498", "apr_id": "c07bd07976f2e5b3ed5c890c686f4167", "difficulty": 900, "tags": ["dp", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#define max(a,b)  a>b?a:b\r\n#define M 200005\r\nint main(){\r\n    int m,lay,cream,i;\r\n\tscanf(\"%d\",&m);   //\u8f93\u5165\u4e00\u5171\u8fdb\u884cm\u6b21\u6d4b\u8bd5\u7528\u4f8b\r\n\twhile(m--){\r\n\t\tscanf(\"%d\",&lay);    //\u8f93\u5165\u4e00\u5171\u51e0\u5c42\u86cb\u7cd5\r\n\t\tint arr[M]={0};      //\u6570\u7ec4\u521d\u59cb\u5316\r\n\t\tfor(i=1;i<=lay;++i){\r\n\t\t\tscanf(\"%d\",&cream);\r\n\t\t\tif(cream){\r\n\t\t\t\tarr[max(1,i-cream+1)]++;  \r\n\t\t\t\tarr[i+1]--;      //\u5dee\u5206\u7684\u5229\u7528\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=1;i<=lay;++i)\r\n            arr[i]=arr[i]+arr[i-1];  //\u6c42\u524d\u7f00\u548c\r\n\t\tfor(int i=1;i<=lay;++i)\r\n\t\t \tprintf(\"%d \",arr[i]!=0);   //arr[i]!=0\u6210\u7acb\u65f6\u8f93\u51fa1\uff0c\u4e0d\u6210\u7acb\u65f6\u8f93\u51fa0\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n} \r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#define max(a,b)  a>b?a:b\r\n#define M 200005\r\nint main(){\r\n    int m,lay,cream,i;\r\n\tint arr[M];\r\n\tscanf(\"%d\",&m);   //\u8f93\u5165\u4e00\u5171\u8fdb\u884cm\u6b21\u6d4b\u8bd5\u7528\u4f8b\r\n\twhile(m--){\r\n\t\tscanf(\"%d\",&lay);    //\u8f93\u5165\u4e00\u5171\u51e0\u5c42\u86cb\u7cd5\r\n\t\tfor(i=1;i<=lay;i++) arr[i]=0;      //\u6570\u7ec4\u521d\u59cb\u5316\r\n\t\tfor(i=1;i<=lay;++i){\r\n\t\t\tscanf(\"%d\",&cream);\r\n\t\t\tif(cream){\r\n\t\t\t\tarr[max(1,i-cream+1)]++;  \r\n\t\t\t\tarr[i+1]--;      //\u5dee\u5206\u7684\u5229\u7528\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=1;i<=lay;++i)\r\n            arr[i]=arr[i]+arr[i-1];  //\u6c42\u524d\u7f00\u548c\r\n\t\tfor(int i=1;i<=lay;++i)\r\n\t\t \tprintf(\"%d \",arr[i]!=0);   //arr[i]!=0\u6210\u7acb\u65f6\u8f93\u51fa1\uff0c\u4e0d\u6210\u7acb\u65f6\u8f93\u51fa0\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n} \r\n\r\n"}
{"similarity_score": 0.9972677595628415, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2bec57d63be414ba24eb897cfe12c352", "bug_code_uid": "a859f736dde541f4f21538a572a3f080", "src_uid": "e0ec0cd81d2ec632ef89d207d80fa8a3", "apr_id": "097a688924ba998cceb9504aefac5350", "difficulty": 800, "tags": ["math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int b[7],i;\r\n    while(t--)\r\n    {\r\n        for(i=0;i<7;i++)\r\n        {\r\n            scanf(\"%d\",&b[i]);\r\n        }\r\n        printf(\"%d %d \",b[0],b[1]);\r\n        if(b[2]==b[0]+b[1])\r\n        {\r\n            printf(\"%d\\n\",b[3]);\r\n        }\r\n        else\r\n            printf(\"%d\",b[2]);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int b[7],i;\r\n    while(t--)\r\n    {\r\n        for(i=0;i<7;i++)\r\n        {\r\n            scanf(\"%d\",&b[i]);\r\n        }\r\n        printf(\"%d %d \",b[0],b[1]);\r\n        if(b[2]==b[0]+b[1])\r\n        {\r\n            printf(\"%d\\n\",b[3]);\r\n        }\r\n        else\r\n            printf(\"%d\\n\",b[2]);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9964349376114082, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4c00ff1f5c7921e7569243a5d54e061e", "bug_code_uid": "f51480c510ef078e3e1481a438f5454a", "src_uid": "bbf2dbdea6dd3aa45250ab5a86833558", "apr_id": "ebc2ed51d9bbf8c381359293a459becc", "difficulty": 1300, "tags": ["greedy", "games"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint letters[27];\nint main() {\n\n    char* s = malloc(101);\n    gets(s);\n\n    int count_odd = 0;\n    int size = strlen(s);\n\n    for (int i = 0; i < size; i++)\n    {\n        letters[s[i]-'a']++;\n    }\n\n    for (int i = 0; i < 26; i++)\n    {\n        if (letters[i] % 2 == 1) count_odd++;\n    }\n\n    if (count_odd <= 1)\n    {\n        printf(\"First\\n\");\n        return 0;\n    }\n\n    if (count_odd % 2 == 0)\n    {\n        printf(\"Second\\n\");\n        return 0;\n    }\n    printf(\"First\\n\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint letters[27];\n\nint main() {\n\n    char* s = malloc(100001);\n    gets(s);\n\n    int count_odd = 0;\n    int size = strlen(s);\n\n    for (int i = 0; i < size; i++)\n    {\n        letters[s[i]-'a']++;\n    }\n\n    for (int i = 0; i < 26; i++)\n    {\n        if (letters[i] % 2 == 1) count_odd++;\n    }\n\n    if (count_odd <= 1)\n    {\n        printf(\"First\\n\");\n        return 0;\n    }\n\n    if (count_odd % 2 == 0)\n    {\n        printf(\"Second\\n\");\n        return 0;\n    }\n    printf(\"First\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9386792452830188, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "50756bc511f327dce11f69cfd51d1764", "bug_code_uid": "e29cdd4a9f02db0536c875ee8220670f", "src_uid": "e1abc81cea4395ba675cf6ca93261ae8", "apr_id": "927e5ecd792efff8ccb93f4e3212feed", "difficulty": 1100, "tags": ["dp", "implementation", "*special", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nstruct man{\n    int w;\n    int h;\n};\n\nint main(void)\n{\n    int n, i = 0, H1 = 0, H2 = 0, W = 0;\n    scanf(\"%d\",&n);\n    struct man men[200002];\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&men[i].w,&men[i].h);\n        if(men[i].h > H1)\n            H1 = men[i].h;\n        else if(men[i].h > H2)\n            H2 = men[i].h;\n        W+=men[i].w;\n    }\n\n    for(i = 1; i <= n; i++)\n    {\n        if(men[i].h != H1)\n            printf(\"%d \",(W-men[i].w)*H1);\n        else\n            printf(\"%d \",(W-men[i].w)*H2);\n    }\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nstruct man{\n    int w;\n    int h;\n};\n\nint main(void)\n{\n    int n, i = 0, H1 = 0, H2 = 0, W = 0;\n    scanf(\"%d\",&n);\n    struct man men[200002];\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&men[i].w,&men[i].h);\n        if(men[i].h > H1)\n        {\n            H2 = H1;\n            H1 = men[i].h;\n        }\n        else if(men[i].h > H2)\n            H2 = men[i].h;\n        W+=men[i].w;\n    }\n    for(i = 1; i <= n; i++)\n    {\n        if(men[i].h != H1)\n            printf(\"%d \",(W-men[i].w)*H1);\n        else\n            printf(\"%d \",(W-men[i].w)*H2);\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9974424552429667, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ed960d5cb77bc8b814d957be52043290", "bug_code_uid": "ae7953405dda8a97210a488e66b3161d", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "105c0b9e8f962d221bfef2167c29b72d", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n  int n,a[3001]={},x,p=0,s=0;\n  scanf(\"%d\",&n);\n  for (int i=0;i<n;i++) {\n    scanf(\"%d\",&x); a[x]++;\n  }\n  for (int i=1;i<=3000;i++)\n    if (a[i]>1)\n      for (int j=1;j<a[i];j++) {\n        if (p<=i) p=i+1;\n        if (p<=3000) while (p<=3000&&a[p]) p++;\n        else p++;\n        if (p<=3000) a[p]=1;\n        s+=p-i;\n      }\n  printf(\"%d\\n\",s);\n  return 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n  int n,a[3001]={},x,p=0,s=0;\n  scanf(\"%d\",&n);\n  for (int i=0;i<n;i++) {\n    scanf(\"%d\",&x); a[x]++;\n  }\n  for (int i=1;i<=3000;i++)\n    if (a[i]>1)\n      for (int j=1;j<a[i];j++) {\n        if (p<=i) p=i;\n        if (p<=3000) while (p<=3000&&a[p]) p++;\n        else p++;\n        if (p<=3000) a[p]=1;\n        s+=p-i;\n      }\n  printf(\"%d\\n\",s);\n  return 0;\n}"}
{"similarity_score": 0.9232839838492598, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "5b9dda1ad6ed01a60f39f6afef62b40b", "bug_code_uid": "caf7484d79b2d510a04a8c4c5c856664", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "63ffc9d9b82efe7c7f50ecd81cccf44f", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n\nvoid main(void)\n{\n  int n, m, i, a, a_pr = 1, tim = 0;\n  char c;\n  scanf(\"%d %d\\n\", &n, &m);\n  for(i = 0; i < m; i++) {\n    a = 0;\n    while(isdigit(c = getchar()))\n      a = a * 10 + c - '0';\n    if (a < a_pr) tim += n - a_pr + a;\n    else tim += a - a_pr;\n    a_pr = a;\n  }\n  printf(\"%d\", tim);\n}", "fixed": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n\nint main(void)\n{\n  long n, m, i, a, a_pr = 1;\n  long long tim = 0;\n  char c;\n  scanf(\"%ld %ld\\n\", &n, &m);\n  for(i = 0; i < m; i++) {\n    a = 0;\n    while(isdigit(c = getchar()))\n      a = a * 10 + c - '0';\n    if (a < a_pr) tim += n - a_pr + a;\n    else tim += a - a_pr;\n    a_pr = a;\n  }\n  printf(\"%I64d\", tim);\n  return 0;\n}"}
{"similarity_score": 0.03976801988400994, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "a99ebbdae17fbfc7711f0d65f2922422", "bug_code_uid": "d977e1577aab10c95c171280a83529ce", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "1254c3a20b87fc4a0fd228c82e6b3890", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() \n{\n    int n,i,k,j;\n    int *p;\n    scanf(\"%d%d\",&n,&k);\n    p = (int*)malloc(n*sizeof(int));\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&p[i]);\n    }\n    //for(i=0;i<n;i++)\n    //printf(\"%d\",p[i]);\n    //printf(\"\\n\");\n    int **row;\n    row=(int**)malloc(n*sizeof(int));\n    for(i=0;i<n;i++)\n    {\n        row[i]=(int*)malloc((i+1)*sizeof(int));\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<=i;j++)\n        {\n            row[i][j]=*(p+j);\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<=i;j++)\n        {\n            printf(\"%d \",row[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    int s=0,mark,flag,s2;\n    for(i=0;i<n;i++)\n    {\n        s=s+i+1;\n        if(k<=s)\n        {\n            mark=i;\n            break;\n        }\n    }\n    //printf(\"%d\\n\",s);\n    s2=s-(mark+1);\n    flag=k-s2-1;\n    \n    printf(\"%d\\n\",row[mark][flag]);\n    \n    \n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() \n{\n    int k,i,n,a[100001];\n    scanf(\"%d%d\",&n,&k);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(k>i)\n        k=k-i;\n        else \n        break;\n    }\n    printf(\"%d\",a[k]);\n    return 0;\n}\n"}
{"similarity_score": 0.9990224828934506, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "645dec55d9165e014538bba5be0d8898", "bug_code_uid": "fac5c24392d92c3fc5f3bbcd18596451", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "c7c89df358a4a645a37b4560c4e3b3e3", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include <stdio.h>\n\nvoid prob767A(){\n    int n, i, k;\n    scanf(\"%d\", &n);\n\n    int arr[n], inp[n], next=n, prev=0;\n\n    for (i =0; i<n; i++){\n            scanf(\"%d\", &arr[i]);\n            inp[i]=0;\n            };\n\n    for (i =0; i<n; i++){\n        inp[arr[i]-1]=1;\n        if(arr[i] ==next){\n            while(inp[next-1]!=0 && next > 0){\n                printf(\"%d \", next);\n                next--;\n            }\n        }\n        if (i <n-1)printf(\"\\n\");\n    }\n}\n\nint main()\n{\n    prob767A();\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nvoid prob767A(){\n    int n, i, k;\n    scanf(\"%d\", &n);\n\n    int arr[n], inp[n], next=n, prev=0;\n\n    for (i =0; i<n; i++){\n            scanf(\"%d\", &arr[i]);\n            inp[i]=0;\n            };\n\n    for (i =0; i<n; i++){\n        inp[arr[i]-1]=1;\n        if(arr[i] ==next){\n            while(inp[next-1]!=0 && next > 0){\n                printf(\"%d \", next);\n                next--;\n            }\n        }\n        if (i <n-1)printf(\"\\n\");\n    }\n}\n\nint main()\n{\n    prob767A();\n    return 0;\n}\n"}
{"similarity_score": 0.9956043956043956, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6198ea37eb59d9d1af89b89138cad250", "bug_code_uid": "10a67ff67dcf3dbeccbbc8d6bd6b1361", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "df7bde7e95ea51f85d3496c9cc99ecc2", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j=0,l;\n\tchar a[999999],b[999999];\n\tscanf(\"%s%s\",a,b);\n\tlen=strlen(a);\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(a[i]!=b[i])\n\t\t\tj++;\n\t}\n\tint k=0;\n\tif(j%2!=0)\n\t{\n\t\tprintf(\"impossible\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<len;i++)\n\t\t{\n\t\t\tif(a[i]!=b[i])\n\t\t\t{\n\t\t\t\tif(k%2==0)\n\t\t\t\t{\n\t\t\t\tprintf(\"%c\",b[i]);\n\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c\",a[i]);k++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%c\",a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j=0,l,len;\n\tchar a[999999],b[999999];\n\tscanf(\"%s%s\",a,b);\n\tlen=strlen(a);\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(a[i]!=b[i])\n\t\t\tj++;\n\t}\n\tint k=0;\n\tif(j%2!=0)\n\t{\n\t\tprintf(\"impossible\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<len;i++)\n\t\t{\n\t\t\tif(a[i]!=b[i])\n\t\t\t{\n\t\t\t\tif(k%2==0)\n\t\t\t\t{\n\t\t\t\tprintf(\"%c\",b[i]);\n\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c\",a[i]);k++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%c\",a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4692144373673036, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "0b5789ba1dd011ae32e3b6e5ce58a045", "bug_code_uid": "4a0ff24ea57e2117a7d8a1b18cc00d6a", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "6e2f545bbbd9467c0c8dfd77e344e719", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAXN 100002\nint main()\n\n{\n    int n, i, sum[MAXN], t, x, max = 0, j;\n    scanf(\"%d %d\",&n,&t);\n\n    sum[0] = 0;\n    for(i = 1;i <= n; ++i){\n        scanf(\"%d\",&x);\n        sum[i] = sum[i - 1] + x;\n    }\n\n    for(i = 1;i < n; ++i)\n        for(j = i + 1;j <= n; ++j){\n            if(sum[i] <= t && i > max)\n                max = i;\n            if(sum[j] <= t && j > max)\n                max = j;\n            if(sum[j] - sum[i] <= t && j - i > max)\n                max = j - i;\n    }\n\n   printf(\"%d\",max);\n\n\n\n\n\n\n}\n", "fixed": "#include <stdio.h>\n#define MAXN 100002\n#define MAXB 410000\n\nint main()\n\n{\n    int n, i, a[MAXN], t, x, max = 0, j = 1, numar, k = 1, sum = 0;\n    scanf(\"%d %d\",&n,&t);\n\n\n    for(i = 1;i <= n; ++i){\n     scanf(\"%d\",&a[i]);\n     sum = sum + a[i];\n     while(sum > t){\n        sum = sum - a[j];\n        ++j;\n        }\n\n        if(max < i - j + 1)\n            max = i - j + 1;\n    }\n\n   printf(\"%d\",max);\n\n}\n"}
{"similarity_score": 0.9670542635658915, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "35441a6fa850efc49a50f627efcf1007", "bug_code_uid": "d464a72d67de2fece6cb6d602f2a5cca", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "64cb95c1a50eee7f08f122f4429c6946", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(void) {\n    int x1,x2,y1,y2,c;\n    float d;\n    scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n    if(x1==x2){\n        if(y1==y2) printf(\"-1\\n\");\n        else {\n        c=y2-y1;\n        printf(\"%d %d %d %d\\n\",x1+c,y1,x1+c,y2);\n    }}\n    else if(y1==y2){\n        c=x2-x1;\n        printf(\"%d %d %d %d\\n\",x1,y1+c,x1,y2+c);\n    }\n    else if(abs(x1-x2)==abs(y1-y2)){\n        c=x2-x1;\n        printf(\"%d %d %d %d\\n\",x2,y1,x1,y2);\n    }\n    else \n    printf(\"-1\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(void) {\n    int x1,x2,y1,y2,c;\n    float d;\n    scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n    if(x1==x2){\n        if(y1==y2) printf(\"-1\\n\");\n        else {\n        c=abs(y2-y1);\n        printf(\"%d %d %d %d\\n\",x1+c,y1,x2+c,y2);\n    }}\n    else if(y1==y2){\n        c=abs(x2-x1);\n        printf(\"%d %d %d %d\\n\",x1,y1+c,x2,y2+c);\n    }\n    else if(abs(x1-x2)==abs(y1-y2)){\n        c=x2-x1;\n        printf(\"%d %d %d %d\\n\",x2,y1,x1,y2);\n    }\n    else \n    printf(\"-1\\n\");\n    return 0;\n}"}
{"similarity_score": 0.7511737089201878, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9382365f6a0447b67f090a0736696c51", "bug_code_uid": "27201805e65cfd1a94ff7f7ed72e7a0d", "src_uid": "04330cb392bcfd51d1acffd72c8004cb", "apr_id": "caadf9d28a9f00ade30de46b63732d62", "difficulty": 1100, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\nint main()\r\n{int t,i;\r\nscanf(\"%d\",&t);\r\nfor(i=0;i<t;i++)\r\n{\r\n\tint n,m,s;\r\n\tscanf(\"%d %d %d\",&n,&m,&s);\r\n\tprintf(\"%d %d\\n\",(int)pow(10,n-1) + (int)pow(10,s-1),(int)pow(10,m-1));\r\n}\r\n\r\n\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\nint power(int constant,int n)\r\n{\r\n\tint i;\r\n    int t = 1; \r\n\tfor(i=1;i<=n;i++)\r\n\t{ t = t * constant;\r\n\t}\r\n\treturn t;\r\n}\r\nint main()\r\n{int t,i;\r\nscanf(\"%d\",&t);\r\nfor(i=0;i<t;i++)\r\n{\r\n\tint n,m,s;\r\n\tscanf(\"%d %d %d\",&n,&m,&s);\r\n\t\r\n\tprintf(\"%d %d\\n\",power(10,n-1)+power(10,s-1),power(10,m-1));\r\n}\r\n\r\n\r\n}"}
{"similarity_score": 0.9640130861504908, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "635c0a124abdf8a0b08b0aab396b938c", "bug_code_uid": "e603034aea13a67e27a15d9100b16d49", "src_uid": "442015fe13f7f75876d7163f438960d8", "apr_id": "b0c277464abe7f51757e17f6d09fa4f4", "difficulty": 2000, "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "games", "interactive", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n#define p2(X) (1<<(X))\n\nvoid guess_number(){\n  unsigned int i = 1, n = 0;\n  while(i <= 30){\n    int a = p2(i)-n, b = p2(i+1)-n; int g = 0;\n    fprintf(stdout, \"? %u %u\\n\", a, b);\n    fflush(stdout);\n    fscanf(stdin, \"%d\", &g);\n    if(g==p2(i-1))  n += p2(i-1);\n    i++;\n  }\n  fprintf(stdout, \"! %u\\n\", n);\n  /* fprintf(stderr, \"! %u\\n\", n); */\n}\n\nint main(){\n  int t;\n  fscanf(stdin, \"%d\", &t);\n  while(t--){\n    guess_number();\n  }\n}\n", "fixed": "#include<stdio.h>\n\n#define p2(X) (1<<(X))\n\nvoid guess_number(){\n  unsigned int i = 0, n = 0;\n  while(i <= 29){\n    int a = p2(i)-n, b = p2(i+1)+p2(i)-n; int g = 0;\n    fprintf(stdout, \"? %u %u\\n\", a, b);\n    fflush(stdout);\n    fscanf(stdin, \"%d\", &g);\n    if(g==p2(i+1))  n += p2(i);\n    i++;\n  }\n  fprintf(stdout, \"! %u\\n\", n);\n  /* fprintf(stderr, \"! %u\\n\", n); */\n}\n\nint main(){\n  int t;\n  fscanf(stdin, \"%d\", &t);\n  while(t--) guess_number();\n  return 0;\n}\n"}
{"similarity_score": 0.9971305595408895, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f24beae99e512d19d5dba804b0ecca77", "bug_code_uid": "1f4bd0aa203e85c195ab382467babb2f", "src_uid": "92bf30e66f4d5ddebb697d2fa4fa0689", "apr_id": "3f6fe5e095e1adeff0518d4e0fa24053", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int b,p,f;\n        scanf(\"%d %d %d\",&b,&p,&f);\n        int x,c;\n        scanf(\"%d %d\",&x,&c);\n        int h=b/2;\n        int sum=0;\n        for(int i=1;i<=h;i++){\n            if((x>c) && (p!=0)){\n                sum=sum+x;\n                p=p-1;\n            }\n            else if((x>c) && (f!=0)){\n                sum=sum+c;\n                f=f-1;\n            }\n            else if((x<c) && (f!=0)){\n                sum=sum+c;\n                f=f-1;\n            }\n            else if((x<c) && (p!=0)){\n                sum+=x;\n                p=p-1;\n            }\n        }\n        printf(\"%d\\n\",sum);\n    }\n}\n", "fixed": "#include<stdio.h>\nvoid main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int b,p,f;\n        scanf(\"%d %d %d\",&b,&p,&f);\n        int x,c;\n        scanf(\"%d %d\",&x,&c);\n        int h=b/2;\n        int sum=0;\n        for(int i=1;i<=h;i++){\n            if((x>=c) && (p!=0)){\n                sum=sum+x;\n                p=p-1;\n            }\n            else if((x>=c) && (f!=0)){\n                sum=sum+c;\n                f=f-1;\n            }\n            else if((x<=c) && (f!=0)){\n                sum=sum+c;\n                f=f-1;\n            }\n            else if((x<=c) && (p!=0)){\n                sum+=x;\n                p=p-1;\n            }\n        }\n        printf(\"%d\\n\",sum);\n    }\n}\n"}
{"similarity_score": 0.6500541711809318, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9c6e603d4e5821003f646faa8739ee70", "bug_code_uid": "4fc58a42573769e89363cc5c3ab4c721", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "913dcb7fdd499b220455d1f11f879363", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\n\nint main() {\n\tlong long int a[100001],b[100001],n,m;\n\tscanf(\"%lld \",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%lld\",&a[i]);\n\tscanf(\"%lld \",&m);\n\tfor(int i=1;i<=m;i++)\n\tscanf(\"%lld\",&b[i]);\n\t\n\tlong long int d,c,s1=0,s2=0;\n\tfor(long long int i=1;i<=m;i++)\n\t{\n\t\td=0,c=0;\n\t\tfor(long long int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(b[i]==a[j])\n\t\t\t{\n\t\t\t\td=j;\n\t\t\t\tc=n-j+1;\n\t\t\t}\n\t\t}\n\t\ts1=s1+d;\n\t\ts2=s2+c;\n\t}\n\tprintf(\"%lld %lld\",s1,s2);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include<stdlib.h>\n\nint main() {\n\t\n\tlong long int a[100001],b[100001],c[100001],n,m;\n\tscanf(\"%lld \",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%lld\",&a[i]);\n\tscanf(\"%lld \",&m);\n\tfor(int i=1;i<=m;i++)\n\tscanf(\"%lld\",&b[i]);\n\t\n\tlong long int d,k,s1,s2;\n\tfor(long long int i=1;i<=n;i++)\n\t{\n\t\tc[a[i]]=i;\n\t}\n\td=0; k=0;\n\ts1=0,s2=0;\n\tfor(long long int i=1;i<=m;i++)\n\t{\n\t\td=c[b[i]];\n\t\ts1=s1+d;\n\t\tk=(n-d+1);\n\t\ts2=s2+k;\n\t}\n\tprintf(\"%lld %lld\",s1,s2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9676491732566499, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8e39a95cb76312bf5b97cf5844f0cae9", "bug_code_uid": "77ed84a4dcf864494f2f7cd7446fbf0b", "src_uid": "6eca08d7cc2dec6f4f84d3faa9a8a915", "apr_id": "7638a995db73de7460d0ad352d514650", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid quicksort(int v[],int primero,int ultimo);\nint main(){\n\tint i,N,C,k;\n\tscanf(\"%d\",&N);\n\tscanf(\"%d\",&k);\n\tint v[N];\n\tfor(i=0;i<N;i++){\n\t\tscanf(\"%d\",&v[i]);\n\t}\n\tquicksort(v,0,N-1);\n\tfor(i=0;i<N;i++){\n\t\tprintf(\"%d\\t\",v[i]);\n\t}\n\tprintf(\"\\n\");\n\tC=v[N-k];\n\tprintf(\"%d\",C);\nreturn 0;\n}\nvoid quicksort(int v[],int primero,int ultimo){\n\tint i,j,pivote,medio;\n\tmedio=(primero+ultimo)/2;\n\ti=primero;\n\tj=ultimo;\n\tpivote=v[medio];\n\tdo{\n\t\twhile(v[i]<pivote)i++;\n\t\twhile(v[j]>pivote)j--;\n\t\tif(i<=j){\n\t\t\tint aux=v[i];\n\t\t\tv[i]=v[j];\n\t\t\tv[j]=aux;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t }while(i<=j);\n\t if (primero < j){\n         quicksort(v,primero,j);\n         }\n   \t if (ultimo > i){\n         quicksort(v,i,ultimo);\n         }\n}\n", "fixed": "#include<stdio.h>\nvoid quicksort(int v[],int primero,int ultimo);\nint main(){\n\tint i,N,C,k;\n\tscanf(\"%d\",&N);\n\tscanf(\"%d\",&k);\n\tint v[N];\n\tfor(i=0;i<N;i++){\n\t\tscanf(\"%d\",&v[i]);\n\t}\n\tquicksort(v,0,N-1);\n\tprintf(\"\\n\");\n\tC=v[N-k];\n\tprintf(\"%d\",C);\nreturn 0;\n}\nvoid quicksort(int v[],int primero,int ultimo){\n\tint i,j,pivote,medio;\n\tmedio=(primero+ultimo)/2;\n\ti=primero;\n\tj=ultimo;\n\tpivote=v[medio];\n\tdo{\n\t\twhile(v[i]<pivote)i++;\n\t\twhile(v[j]>pivote)j--;\n\t\tif(i<=j){\n\t\t\tint aux=v[i];\n\t\t\tv[i]=v[j];\n\t\t\tv[j]=aux;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t }while(i<=j);\n\t if (primero < j){\n         quicksort(v,primero,j);\n         }\n   \t if (ultimo > i){\n         quicksort(v,i,ultimo);\n         }\n}\n"}
{"similarity_score": 0.9418153607447634, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7eaebd23bcb276602ca5238ff4b41a10", "bug_code_uid": "35139f5cc1d2d3aa8d6a55a796051032", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "be36d282a3bc5853b6df21f9b6c97b9a", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    char f[1001];\n    scanf( \"%s\", f );\n    int n;\n    scanf( \"%d\", &n );\n    int l = strlen( f );\n    int i, j, chack = 0 , black = l / n, dobreak = 0;\n    for( i = 0; i < n; i++ )\n    {\n        for( j = (i*black); j < (i*black) + black / 2; j++ )\n        {\n            if( f[j] != f[(i+1)*black-1-j%black] )\n            {\n                chack = 1;\n                dobreak = 1;\n                break;\n            }\n        }\n        if( dobreak == 1 )\n            break;\n    }\n    if( chack == 1 )\n        printf( \"No\" );\n    else\n        printf( \"Yes\" );\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    char f[1001];\n    scanf( \"%s\", f );\n    int n;\n    scanf( \"%d\", &n );\n    int l = strlen( f );\n    if( l % n != 0 )\n    {\n        printf( \"No\" );\n        return 0;\n    }\n    int i, j, chack = 0 , black = l / n, dobreak = 0;\n    for( i = 0; i < n; i++ )\n    {\n        for( j = (i*black); j < (i*black) + black / 2; j++ )\n        {\n            if( f[j] != f[(i+1)*black-1-j%black] )\n            {\n                chack = 1;\n                dobreak = 1;\n                break;\n            }\n        }\n        if( dobreak == 1 )\n            break;\n    }\n    if( chack == 1 )\n        printf( \"No\" );\n    else\n        printf( \"Yes\" );\n    return 0;\n}\n"}
{"similarity_score": 0.32320777642770354, "equal_cnt": 21, "replace_cnt": 15, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "e0c57f1aee0554681027076d8a80be54", "bug_code_uid": "263bab02f51f636e01cde95c588afe3b", "src_uid": "6f819ce1d88d5211cd475a8673edba97", "apr_id": "aa745b7fef7bc3932efafcca785ea280", "difficulty": 800, "tags": ["brute force", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while (T--)\r\n    {\r\n    \tint n,m,sx,sy,ex,ey,ans=0;\r\n    \tscanf(\"%d%d%d%d%d%d\",&n,&m,&sx,&sy,&ex,&ey);\r\n\t\tint dx = 1, dy = 1;\r\n\t\twhile(1)\r\n\t\t{\r\n\t\t\tif (ex==sx || ey==sy) break;\r\n\t\t\tif (dx+sx>n || dx+sx<1) dx = -dx;\r\n\t\t\tif (dy+sy>m || dy+sy<1) dy = -dy;\r\n\t\t\tsx += dx; \r\n\t\t\tsy += dy;\r\n\t\t\tans ++; \r\n\t\t}\r\n\t\tprintf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint T,n,m,x1,y1,x2,y2,dc,dr;\r\nint ans=0;\r\nint main() {\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--){\r\n\t\tans=0;\r\n\t\tdc=dr=1;\r\n\t\tscanf(\"%d%d%d%d%d%d\",&n,&m,&x1,&y1,&x2,&y2);\r\n\t\twhile(1){\r\n\t\t\tif(x1==x2||y1==y2)\tbreak;\r\n\t\t\tif(x1==1)\tdc=1;\r\n\t\t\tif(y1==1)\tdr=1;\r\n\t\t\tif(x1==n)\tdc=-1;\r\n\t\t\tif(y1==m)\tdr=-1;\r\n\t\t\tx1+=dc,y1+=dr;\r\n\t\t\tans++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9979360165118679, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ba05c31e59b81beecad4b4613afcfa84", "bug_code_uid": "b1de7e089c9ca4f69f28a762600ab17c", "src_uid": "92bf30e66f4d5ddebb697d2fa4fa0689", "apr_id": "f1b9d7ace5220bdf8f519f88b5694ce9", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        int a,b,c,d,e;\n        scanf(\"%d%d%d%d%d\",&a,&b,&c,&d,&e);\n        int f=(a/2);\n        int max=d>=e?d:e;\n        if(f==0)\n        {\n            printf(\"0\\n\");\n            \n        }\n        else\n        {\n            if(f>=b+c)\n            {\n                printf(\"%d\\n\",(b*d)+(c*e));\n            }\n            else\n            {\n                if(max==d)\n                {\n                    int x=f-b;\n                    if(x>=0)\n                    printf(\"%d\\n\",(b*d)+(e*x));\n                    else\n                    printf(\"%d\\n\",(a*d));\n                }\n                else if(max==e)\n                {\n                    \n                    int x=f-c;\n                    if(x>=0)\n                    printf(\"%d\\n\",(c*e)+(d*x));\n                    else\n                    printf(\"%d\\n\",(a*e));\n                }\n            }\n            \n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        int a,b,c,d,e;\n        scanf(\"%d%d%d%d%d\",&a,&b,&c,&d,&e);\n        int f=(a/2);\n        int max=d>=e?d:e;\n        if(f==0)\n        {\n            printf(\"0\\n\");\n            \n        }\n        else\n        {\n            if(f>=b+c)\n            {\n                printf(\"%d\\n\",(b*d)+(c*e));\n            }\n            else\n            {\n                if(max==d)\n                {\n                    int x=f-b;\n                    if(x>=0)\n                    printf(\"%d\\n\",(b*d)+(e*x));\n                    else\n                    printf(\"%d\\n\",(f*d));\n                }\n                else if(max==e)\n                {\n                    \n                    int x=f-c;\n                    if(x>=0)\n                    printf(\"%d\\n\",(c*e)+(d*x));\n                    else\n                    printf(\"%d\\n\",(f*e));\n                }\n            }\n            \n        }\n    }\n}"}
{"similarity_score": 0.23654015887025595, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e1ca2d8c84c569bbb58c5a3fd4733bb9", "bug_code_uid": "2435d54e1c82773da96eab63032b4b32", "src_uid": "1f29461c42665523d0a4d56b13f7e480", "apr_id": "3c5106122f4104bebc2109739661339f", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint arr[3];\n\t\tint r,g,b;\n\t\tscanf(\"%d%d%d\",&r,&g,&b);\n\t\tarr[0]=r;\n\t\tarr[1]=g;\n\t\tarr[2]=b;\n\t\tint first,second;\n\t\tfor(first=0;first<3;first++)\n\t\t{\n\t\t\tfor(second=0;second<first;second++)\n\t\t\t{\n\t\t\t\tif(arr[first]<arr[second])\n\t\t\t\t{\n\t\t\t\t\tint temp = arr[first];\n\t\t\t\t\tarr[first] = arr[second];\n\t\t\t\t\tarr[second] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\tint diff = arr[2]-arr[1];\n\t\tif(diff==0)\n\t\t{\n\t\t\tarr[2]= arr[2]-arr[0]/2;\n\t\t\tans = ans + (arr[0]/2)*2 + arr[2];\n\t\t\t\n\t\t}\n\t\telse if(diff>=arr[0])\n\t\t{\n\t\t\tans = ans+arr[1]+arr[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[0]-=diff;\n\t\t\tans+=diff;\n\t\t\tans = ans + (arr[0]/2);\n\t\t\tarr[1] = arr[1] - arr[0]/2;\n\t\t\tans += arr[1];\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\",ans);\n\t\t\n\t}\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint r,g,b;\n\t\tscanf(\"%d%d%d\",&r,&g,&b);\n\t\tint max;\n\t\tif(r>g)\n\t\t{\n\t\t\tif(r>b)\n\t\t\tmax=r;\n\t\t\telse max = b;\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(g>b)max=g;\n\t\t\telse max = b;\n\t\t}\n\t\t\n\t\tint total =r+g+b;\n\t\tint flag =total-max;\n\t\tif(flag<=max)printf(\"%d\\n\",flag);\n\t\telse {printf(\"%d\\n\",total/2);\n\t\t\t\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.58984375, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "3ad93b92e136c133fb263e083f7c2c87", "bug_code_uid": "206fcba27552d64af15d5abff845d391", "src_uid": "53a3313f5d6ce19413d72473717054fc", "apr_id": "421bd2dc57dad2c506fe7b836c091d6b", "difficulty": 900, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<ctype.h>\n#define in scanf\n#define out printf\n#define lin puts(\"\");\n\nint main()\n{\n    int t,n,i,j;\n    in(\"%d\",&t);\n    while(t--)\n    {\n        in(\"%d\",&n);\n        int ar[100],es=0;\n        for(i=0;i<n;i++)\n        {\n            in(\"%d\",&ar[i]);\n            es+=ar[i];\n        }\n\n            if(n==1){\n            out(\"YES\");\n            lin\n            continue;}\n        int currentNum;\n        for(i=1;i<n;i++)\n    {\n        currentNum=ar[i];\n        j=i;\n        while(ar[j-1]>currentNum&&j>0)\n        {\n            ar[j]=ar[j-1];\n//            ar[j-1]=currentNum;\n                j--;\n                ar[j]=currentNum;\n        }\n    }\n    int sum=0;\n    for(i=0;i<n-1;i++){\n        sum+=ar[i]+2;\n        }\n    if(sum%2==0||es%2==0)\n        out(\"YES\");\n    else if(es%2!=0||sum%2!=0)\n        out(\"NO\");\n\n        lin\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<ctype.h>\n#define in scanf\n#define out printf\n#define lin puts(\"\");\n\nint main()\n{\n    int t,n,i,f;\n    in(\"%d\",&t);\n    while(t--)\n    {\n        in(\"%d\",&n);\n        int ar[100];\n        f=0;\n        for(i=0;i<n;i++)\n        {\n            in(\"%d\",&ar[i]);\n            if(ar[i]%2!=0)\n                f++;\n            else if(ar[i]%2==0)\n                f+=2;\n        }\n\n\n            if(n==1||f==n||f==2*n){\n            out(\"YES\");\n\n            }\n            else\n                out(\"NO\");\n            lin\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.7988587731811697, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "8f9b86f656da8f91c799a9b333e142ec", "bug_code_uid": "a56420785b7ab960763062e6da6002ea", "src_uid": "2052b0b4abdcf7d613b56842b1267f60", "apr_id": "014e58fa984878fb9c3e6ffbe7a70302", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nmain(){\n\tint n,l=0,r=0,sum;\n\tscanf(\"%d\",&n);\n\tint a[n][2];\n\tint i,j;\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<2;j++)\n\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(a[i][0]==0)\n\t\tl++;\n\t\tif(a[i][1]==0)\n\t\tr++;\n\t\t}\n\t\t\n\t\tif(l>r)\n\t\tsum=(n-l)+r;\n\t\telse if(l<r)\n\t\tsum=l+(n-r);\n\t\telse\n\t\tsum=(n-l)+(n-r);\n\t\t\n\t\t\n\t\tprintf(\"%d\",sum);\n\t\t\n\t\n\t\n}\n", "fixed": "#include<stdio.h>\n\n\nmain(){\n\tint n,l=0,r=0,sum=0;\n\tscanf(\"%d\",&n);\n\tint a[n][2];\n\tint i,j;\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<2;j++)\n\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(a[i][0]==0)\n\t\tl++;\n\t\tif(a[i][1]==0)\n\t\tr++;\n\t\t}\n\t\t\n\tif(l<=(n-l))\n\tsum=sum+l;\n\telse\n\tsum=sum+(n-l);\n\t\tif(r<=(n-r))\n\tsum=sum+r;\n\telse\n\tsum=sum+(n-r);\n\t\n\tprintf(\"%d\",sum);\n\t\t\n\t\n\t\n}\n"}
{"similarity_score": 0.9975124378109452, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e95b520be1f38c005d9f5738ed5b919c", "bug_code_uid": "209f1cd78a962a2b6748ae7dcbd97291", "src_uid": "e59cddb6c941b1d7556ee9c020701007", "apr_id": "d15d1a7dbd22f23023e2b9966fd09e1f", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int a , int b){\n\tif(a<b){\n\t\treturn a;\n\t}\n\treturn b;\n}\nint max(int a , int b){\n\tif(a>b){\n\t\treturn a;\n\t}\n\treturn b;\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint x , inp[3]={0,0,0};\n\t\tscanf(\"%d\",&x);\n\t\twhile(x--){\n\t\t\tint temp;\n\t\t\tscanf(\"%d\",&temp);\n\t\t\tinp[temp%3]++; \n\t\t}\n\t\tprintf(\"%d\",inp[0]+min(inp[1],inp[2])+((max(inp[1],inp[2])- min(inp[1],inp[2]) )/3));\n\t}\n}\n", "fixed": "#include<stdio.h>\nint min(int a , int b){\n\tif(a<b){\n\t\treturn a;\n\t}\n\treturn b;\n}\nint max(int a , int b){\n\tif(a>b){\n\t\treturn a;\n\t}\n\treturn b;\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint x , inp[3]={0,0,0};\n\t\tscanf(\"%d\",&x);\n\t\twhile(x--){\n\t\t\tint temp;\n\t\t\tscanf(\"%d\",&temp);\n\t\t\tinp[temp%3]++; \n\t\t}\n\t\tprintf(\"%d\\n\",inp[0]+min(inp[1],inp[2])+((max(inp[1],inp[2])- min(inp[1],inp[2]) )/3));\n\t}\n}\n"}
{"similarity_score": 0.9669724770642202, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f4243b9f83d800b3ed3fb6902ecba403", "bug_code_uid": "fd04f1aa6fa184aaa069a7ea892104d1", "src_uid": "d6f01ece3f251b7aac74bf3fd8231a80", "apr_id": "02cce307361c00ac84d427f6425ef59e", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <memory.h>\n\nint target[128];\n\nint main()\n{\n\tchar c, b[128];\n\tmemset(target, 0, sizeof(target));\n\tmemset(b, 0, sizeof(b));\n\n\tfor (int i = 0; i < 26; ++i)\n\t{\n\t\tscanf(\"%c\", &c);\n\t\ttarget[c] = i;\n\t}\n\tgetchar();\n\n\tfor (int j = 0; j < 26; ++j)\n\t\tscanf(\"%c\", b + j);\n\tgetchar();\n\tint len = 'a' - 'A';\n\twhile (scanf(\"%c\", &c))\n\t{\n\t\tif (c >= 'A' && c <= 'Z')\n\t\t\tprintf(\"%c\", b[target[c + len]] - len);\n\t\telse if (c >= 'a' && c <= 'z')\n\t\t\tprintf(\"%c\", b[target[c]]);\n\t\telse\n\t\t\tprintf(\"%c\", c);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <memory.h>\n\nint target[128];\n\nint main()\n{\n\tchar c, b[128];\n\tmemset(target, 0, sizeof(target));\n\tmemset(b, 0, sizeof(b));\n\n\tfor (int i = 0; i < 26; ++i)\n\t{\n\t\tscanf(\"%c\", &c);\n\t\ttarget[c] = i;\n\t}\n\tgetchar();\n\n\tfor (int j = 0; j < 26; ++j)\n\t\tscanf(\"%c\", b + j);\n\tgetchar();\n\tint len = 'a' - 'A';\n\twhile (scanf(\"%c\", &c))\n\t{\n\t\tif (c == 10)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif (c >= 'A' && c <= 'Z')\n\t\t\tprintf(\"%c\", b[target[c + len]] - len);\n\t\telse if (c >= 'a' && c <= 'z')\n\t\t\tprintf(\"%c\", b[target[c]]);\n\t\telse\n\t\t\tprintf(\"%c\", c);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9991755976916735, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4e06410136a729d4a67dde369e19bd7d", "bug_code_uid": "ddeb64a74c1fbc3fe719c26be3f06e17", "src_uid": "c8cdb9f6a44e1ce9ef81a981c9b334c2", "apr_id": "c4b0f478f57553c4ea70ecf95fbb30af", "difficulty": 2400, "tags": ["dp", "two pointers", "divide and conquer", "data structures", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\n# include <stdlib.h> \n# include <string.h>\n\ntypedef long long ll;\n\nint main()\n{\n\tlong long number[2000005];\n\tlong long a = 0;\n\tlong long b = 0;\n\tint N;\n\tint S[2000005]; \n\t\n\n\tscanf(\"%d\",&N);\n\tint i;\n\tfor (int i = 0; i < N; ++i)\n\t{\n\t\tchar x;\n\t\tscanf(\"%c\",&x);\n\t\tS[i] = (x - '0');\n\t}\n\tfor (int i = 1; i <= N; ++i)\n\t{\n\t\tif (S[i] == 0)\n\t\ta = a + b;\n\t\telse\n\t\t{\n\t\t\tint l = i, r = i;\n\t\t\twhile (r < N && S[r+1] == 1) \n\t\t\tr++;\n\t\t\tfor (int x = 1; x <= (r-l+1); ++x)\n\t\t\t{\n\t\t\t\tb = b+ (l-1+x) - number[x];\n\t\t\t\ta = a+b;\n\t\t\t\tnumber[x] = r-x+1;\n\t\t\t}\n\t\t\ti = r;\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\",a);\n\t\n\treturn 0;\n}", "fixed": "# include <stdio.h>\n# include <stdlib.h> \n# include <string.h>\n\ntypedef long long ll;\n\nint main()\n{\n\tlong long number[2000005];\n\tlong long a = 0;\n\tlong long b = 0;\n\tint N;\n\tint S[2000005]; \n\t\n\n\tscanf(\"%d\",&N);\n\tint i;\n\tfor (int i = 0; i <= N; ++i)\n\t{\n\t\tchar x;\n\t\tscanf(\"%c\",&x);\n\t\tS[i] = (x - '0');\n\t}\n\tfor (int i = 1; i <= N; ++i)\n\t{\n\t\tif (S[i] == 0)\n\t\ta = a + b;\n\t\telse\n\t\t{\n\t\t\tint l = i, r = i;\n\t\t\twhile (r < N && S[r+1] == 1) \n\t\t\tr++;\n\t\t\tfor (int x = 1; x <= (r-l+1); ++x)\n\t\t\t{\n\t\t\t\tb = b+ (l-1+x) - number[x];\n\t\t\t\ta = a+b;\n\t\t\t\tnumber[x] = r-x+1;\n\t\t\t}\n\t\t\ti = r;\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\",a);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.5671863400148478, "equal_cnt": 18, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "d3a9e980b9b4d5bc3cd26bf936e101ed", "bug_code_uid": "6b34395ead0d5294fa5d2a1aba7ab78c", "src_uid": "c3120f96894c17957bd8acb968bf37cd", "apr_id": "55637d8a4e85983c4b8ae54d3e2c0a0e", "difficulty": 1400, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, m, k, i, j, w, a[50000], op[50000][3], aux1, aux2;\n\n    scanf(\"%d %d %d\", &n, &m, &k);\n\n    for(i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n\n    for(i = 0; i < m; i++)\n        scanf(\"%d %d %d\", &op[i][0], &op[i][1], &op[i][2]);\n\n    for(i = 0; i < k; i++){\n        scanf(\"%d %d\", &aux1, &aux2);\n        for(j = aux1-1; j <= aux2-1; j++){\n            for(w = op[j][0]-1; w <= op[j][1]-1; w++){\n                a[w] += op[j][2];\n            }\n        }\n    }\n\n    for(i = 0; i < n; i++)\n        printf(\"%d \", a[i]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, m, k, i, a[100000], op[100000][3], aux1, aux2, inc[100001];\n    long long v[100001], w, nuevo;\n\n    scanf(\"%d%d%d\", &n, &m, &k);\n\n    for(i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n\n    for(i = 0; i < m; i++)\n        scanf(\"%d%d%d\", &op[i][0], &op[i][1], &op[i][2]);\n\n    for(i = 0; i < k; i++){\n        scanf(\"%d%d\", &aux1, &aux2);\n        inc[aux1-1]++;\n        inc[aux2]--;\n    }\n\n    w = 0;\n    for(i = 0; i < m; i++){\n        w += inc[i];\n        nuevo = w*(long long)(op[i][2]);\n        v[op[i][0]-1] += nuevo;\n        v[op[i][1]] -= nuevo;\n    }\n\n    w = 0;\n    for(i = 0; i < n; i++){\n        w += v[i];\n        if(i)\n            printf(\" \");\n        printf(\"%I64d\", w + (long long)(a[i]));\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9080118694362018, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7545b3c275d097823131796439bd1c25", "bug_code_uid": "5ecf8324318726ab901b324c0c86ce3e", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "f354cd37ced57a8e2691d004a56c2fad", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,m,i,flag=1;\n     long int sum=0;\n    long int a;\n    scanf(\"%ld %ld\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%ld\",&a);\n        if(a>=flag)\n            sum=sum+(a-flag);\n        if(a<flag)\n            sum=sum+(n-(flag-a));\n        flag=a;\n\n\n    }\n    printf(\"%ld\",sum);\n}\n", "fixed": "#include<stdio.h>\n#include<stdint.h>\nint main()\n{\n   long int n,m,i,flag=1;\n     int64_t sum=0;\n    long int  a;\n    scanf(\"%ld %ld\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%ld\",&a);\n        if(a>=flag)\n            sum=sum+(a-flag);\n        if(a<flag)\n            sum=sum+(n-(flag-a));\n        flag=a;\n\n\n    }\n    printf(\"%I64d\",sum);\n}\n"}
{"similarity_score": 0.7036797934151066, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "29581d858da90e431f0f85b51acd420e", "bug_code_uid": "69011d9c729740431aeda1820bad5e5b", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "5322d349f150684df3f6c4b38f98f52b", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int a[3],i,j,n,t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        a[0]=0;\n        a[1]=0;\n        a[2]=0;\n        for(i=0; i<=2; i++)\n        {\n            for(j=2; j<=n; j++)\n            {\n                if(j==a[0]||j==a[1])\n                    continue;\n                if(n%j==0)\n                {\n                    a[i]=j;\n                    n=n/j;\n                    break;\n                }\n            }\n            if(a[0]==0)\n                break;\n        }\n        if(a[0]==0||a[1]==0||a[2]==0)\n            printf(\"NO\\n\");\n        else\n        {\n            printf(\"YES\\n\");\n            printf(\"%d %d %d\\n\",a[0],a[1],a[2]);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int a[3],i,j,n,t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        j=0;\n        for(i=2; i<=sqrt(n); i++)\n        {\n            if(n%i==0)\n            {\n                n=n/i;\n                a[j]=i;\n                j++;\n                if(j==2)\n                {\n                    a[j]=n;\n                    j++;\n                    if(i==n)\n                    {\n                        j--;\n                        break;\n                    }\n\n                }\n                if(j==3)\n                    break;\n\n            }\n        }\n        if(j!=3)\n            printf(\"NO\\n\");\n        else\n        {\n            printf(\"YES\\n\");\n            printf(\"%d %d %d\\n\",a[0],a[1],a[2]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6202247191011236, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "353c00c59cbf7c34dd2deb8b225e9b17", "bug_code_uid": "cc994f79bc238eb8f63d36cb2ff2d69b", "src_uid": "6324ca46b6f072f8952d2619cb4f73e6", "apr_id": "b8285296327e60bdb010444483c9a2ae", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,m,k;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d%d\",&n,&m,&k);\n        if(m==0 || n==k)\n        printf(\"0\\n\");\n        else\n        printf(\"%d\\n\",(n/k)-(m/k));\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,n,m,k;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d%d\",&n,&m,&k);\n\t\tif(n/k>m)\n\t\t\tprintf(\"%d\\n\",m);\n\t\telse\n\t\t\tprintf(\"%d\\n\",(n/k)-(m-n/k+k-2)/(k-1));\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.494824016563147, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "550421644f24f47d42451449e2357867", "bug_code_uid": "d220b4b0028e911ab437dd848fd077a0", "src_uid": "4ebbda2fc1a260e9827205a25addd9c4", "apr_id": "deadefd642fcbae8a6ac74aea0d84591", "difficulty": 2000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*batch_13*/\n#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int i,j;\n    int n;\n    char a[100001];\n    gets(a);\n    n=strlen(a);\n    int s[2]={};\n    for(i=0;i<n;i++)\n    {\n        for(j=i;j<n;j++)\n        {\n           if(a[j]==a[j-i])\n            s[i%2]++;\n        }\n    }\n\n    printf(\"%d %d\",s[1],s[0]);\n    return 0;\n}\n", "fixed": "/*2013 batch_sust*/\n#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int i;\n    long long int z,y;\n    int n;\n    char a[100001];\n    gets(a);\n    n=strlen(a);\n    int d[2][2]={{}};\n    int k=0;\n    for(i=0;i<n;i++)\n    {\n        k=a[i]-97;\n        d[k][i%2]++;\n    }\n    y=(long long)d[0][1]*(long long)(d[0][1]+1)/2+(long long)d[0][0]*(long long)(d[0][0]+1)/2+(long long)d[1][0]*(long long)(d[1][0]+1)/2+(long long)d[1][1]*(long long)(d[1][1]+1)/2;\n    z=(long long)(d[0][0]+d[0][1])*(long long)(d[0][0]+d[0][1]+1)/2+(long long)(d[1][0]+d[1][1])*(long long)(d[1][0]+d[1][1]+1)/2;\n    z=z-y;\n    printf(\"%lld %lld\",z,y);\n    return 0;\n\n}\n"}
{"similarity_score": 0.9976019184652278, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "334467862623facd8d22f0eca1891d24", "bug_code_uid": "ddadf18e66a26eb425bdd00944266103", "src_uid": "b4ca6a5ee6307ab2bcdab2ea5dd5b2b3", "apr_id": "4cd8b3588cc098156250e4caba50c77a", "difficulty": 1100, "tags": ["binary search", "brute force", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nlong long a[10000],num,i,j;\r\nvoid solve(){\r\nscanf(\"%lld\",&num);\r\n for ( i = 1 ;j=cbrt(num);a[i]<= num; i ++) {\r\n    for (;j > i && a[j] + a[i] > num;j--);\r\n    if (a[i]+a[j] == num) {\r\n      printf(\"YES\\n\"); return;\r\n    }\r\n  }\r\n printf(\"NO\\n\");\r\n}\r\nint main(){\r\nint t,b;\r\nfor(i=1;i<10000;i++)\r\n\ta[i]=i*i*i;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\nsolve();\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nlong long a[10000],num,i,j;\r\nvoid solve(){\r\nscanf(\"%lld\",&num);\r\n for ( i = 1 ,j=cbrt(num);a[i]<= num; i ++) {\r\n    for (;j > i && a[j] + a[i] > num;j--);\r\n    if (a[i]+a[j] == num) {\r\n      printf(\"YES\\n\"); return;\r\n    }\r\n  }\r\n printf(\"NO\\n\");\r\n}\r\nint main(){\r\nint t,b;\r\nfor(i=1;i<10000;i++)\r\n\ta[i]=i*i*i;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\nsolve();\r\nreturn 0;\r\n}"}
{"similarity_score": 0.5419664268585132, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "2ff8c16caaf80a72c41797872a861ebb", "bug_code_uid": "31917eafd72519a6b3cf991ed9c00bb3", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "ae2c199e4ee9e364ef0a55e7439eecd5", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n  int t;\n  scanf(\"%d\", &t);\n  while(t--)\n  {\n        int n, ans, rem=0, temp;\n        scanf(\"%d\", &n);\n        ans=n;\n        while(n)\n        {\n            temp= n%10;\n            rem+=temp;\n            n-=temp;\n            n/=10;\n            ans+=n;\n        }\n        ans+=rem/10;\n       printf(\"%d\\n\", ans);\n        \n  }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int t;\n  scanf(\"%d\", &t);\n  while(t--)\n  {\n        int n, rem, spent=0, cb, ans=0;\n        scanf(\"%d\", &n);\n        rem= n;\n        while(rem)\n            {\n                spent=rem-(int)(rem%10);\n                cb= (int)spent/10;\n                rem= (rem - spent) + cb;\n                ans+=spent;\n                if(rem<10){ans+=rem; break;}\n            }\n        printf(\"%d\\n\", ans);\n        \n  }\nreturn 0;\n}\n"}
{"similarity_score": 0.9809358752166378, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "90d741daefa20ab4e536de73f3ccd91e", "bug_code_uid": "8b8e4271d845fbd03e18f7056d0653f4", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "c6b9c7f9915355a9a2d1c06a68a0c197", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,a,b,sum=0;\n\n    scanf(\"%d\",&n);\n\n    int d[n-1];\n\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\",&d[i]);\n\n    scanf(\"%d %d\",&a,&b);\n\n    for(i=a-1;i<n-1;i++)\n    {\n        if(i+2<=b)\n            sum=sum+d[i];\n    }\n\n    printf(\"%d\",sum);\n\n    r", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,a,b,sum=0;\n\n    scanf(\"%d\",&n);\n\n    int d[n-1];\n\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\",&d[i]);\n\n    scanf(\"%d %d\",&a,&b);\n\n    for(i=a-1;i<n-1;i++)\n    {\n        if(i+2<=b)\n            sum=sum+d[i];\n    }\n\n    printf(\"%d\",sum);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9662921348314607, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "dc5e85aa18c9d0ef4166be21c508af54", "bug_code_uid": "7f025c631a393c896b940527de98bcc5", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "e08b981f3636e2cdf35dac332945cdb6", "difficulty": 1500, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*****Enigma_27*****/\n\n#include<stdio.h>\n#define ll          long long\nll n,l,r,a[100005],b[100005],i,j,k,ans=0,c[100005]={0},d[100005]={0};\nint main()\n{\n\t\n\tscanf(\"%I64d%I64d%I64d\",&n,&l,&r);\n\t\tfor(i=0;i<n;i++) \n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tc[a[i]]++;\n\t}\n\t\n\tfor(i=0;i<n;i++) \n\t{\n\t\tscanf(\"%I64d\",&b[i]);\n\t\td[b[i]]++;\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(c[i]!=d[i]) { printf(\"LIE\");return 0;}\n\t\t\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]!=b[i])\n\t\t{\n\t\t\tif(a[i]>r||b[i]>r||a[i]<l||b[i]<l) {printf(\"LIE\");return 0;}\n\t\t}\n\t}\n\tprintf(\"TRUTH\");\t\n\treturn 0;\n}\n", "fixed": "/*****Enigma_27*****/\n\n#include<stdio.h>\n#define ll          long long\nll n,l,r,a[100005],b[100005],i,j,k,ans=0,c[100005]={0},d[100005]={0};\nint main()\n{\n\t\n\tscanf(\"%I64d%I64d%I64d\",&n,&l,&r);\n\t\tfor(i=0;i<n;i++) \n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tc[a[i]]++;\n\t}\n\t\n\tfor(i=0;i<n;i++) \n\t{\n\t\tscanf(\"%I64d\",&b[i]);\n\t\td[b[i]]++;\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(c[i]!=d[i]) { printf(\"LIE\");return 0;}\n\t\t\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]!=b[i])\n\t\t{\n\t\t\tif(i>r-1||i>r-1||i<l-1||i<l-1) {printf(\"LIE\");return 0;}\n\t\t}\n\t}\n\tprintf(\"TRUTH\");\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9456521739130435, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "575fda476f946ffa8606c3a20aef9c19", "bug_code_uid": "25e7239ee80efdd9eb480d90c579b779", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "33d4336b46debb372a62bf2422c345a9", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int a[52];\r\n    int i,j,n,s,v,t,m,l;\r\n    scanf(\"%d\",&t);\r\n    for(m=0;m<t;m++){\r\n            v=0;\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%d\",&a[0]);\r\n        s=a[0];\r\n        l=a[0];\r\n        for(i=1;i<n;i++){\r\n        scanf(\"%d\",&a[i]);\r\n        if(s>a[i]){\r\n            s=a[i];\r\n        }\r\n        if(l<a[i]){\r\n            l=a[i];\r\n        }\r\n        if(a[i-1]<=a[i]){\r\n            v=v+1;\r\n        }\r\n        }\r\n        if(v==n-1){\r\n                printf(\"0\\n\");\r\n        }\r\n        else if(s==a[0]||l==a[n-1]){\r\n            printf(\"1\\n\");\r\n        }\r\n        else{\r\n            printf(\"2\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int a[52];\r\n    int i,j,n,s,v,t,m,l;\r\n    scanf(\"%d\",&t);\r\n    for(m=0;m<t;m++){\r\n            v=0;\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%d\",&a[0]);\r\n        s=a[0];\r\n        l=a[0];\r\n        for(i=1;i<n;i++){\r\n        scanf(\"%d\",&a[i]);\r\n        if(s>=a[i]){\r\n            s=a[i];\r\n        }\r\n        if(l<=a[i]){\r\n            l=a[i];\r\n        }\r\n        if(a[i-1]<=a[i]){\r\n            v=v+1;\r\n        }\r\n        }\r\n        if(v==n-1){\r\n                printf(\"0\\n\");\r\n        }\r\n        else if(s==a[0]||l==a[n-1]){\r\n            printf(\"1\\n\");\r\n        }\r\n        else if(l==a[0]&&s==a[n-1]){\r\n            printf(\"3\\n\");\r\n        }\r\n        else {\r\n            printf(\"2\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9482288828337875, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e17ccf8f171c83a51deef8f775901f77", "bug_code_uid": "a119f3beb74bd56ef606724de42a6f08", "src_uid": "7d1e8769a6b1d5c6680ab530d19e7fa4", "apr_id": "685c4c0cc683fb7186398473f53cd392", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\nint n,t,c,i,count=0;\nint p[n],cont[n];\nscanf(\"%d %d %d\",&n,&t,&c);\nfor(i=0;i<n;i++)\nscanf(\"%d\",&p[i]);\n\nif(p[0]<t)\ncont[0]=1;\nelse\ncont[0]=0;\n\nfor(i=1;i<n;i++)\n{\nif(p[i]<t)\n cont[i]=cont[i-1]+1;\nelse\n cont[i]=0;\n}\n\n\nfor(i=0;i<n;i++)\n{\nif(cont[i]>=c && (i==n-1 || cont[i+1]==0))\ncount+=cont[i]-c+1;\n}\n\nprintf(\"%d\\n\",count);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\nint n,t,c,i,count=0;\nscanf(\"%d %d %d\",&n,&t,&c);\nint p[n],cont[n];\nfor(i=0;i<n;i++)\nscanf(\"%d\",&p[i]);\n\nif(p[0]<=t)\ncont[0]=1;\nelse\ncont[0]=0;\n\nfor(i=1;i<n;i++)\n{\nif(p[i]<=t)\n cont[i]=cont[i-1]+1;\nelse\n cont[i]=0;\n}\n\n\nfor(i=0;i<n;i++)\n{\nif(cont[i]>=c && (i==n-1 || cont[i+1]==0))\ncount+=cont[i]-c+1;\n}\n\nprintf(\"%d\\n\",count);\nreturn 0;\n}"}
{"similarity_score": 0.8284313725490197, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d5f7f18b2519b83374e3fd5f93cc2199", "bug_code_uid": "536f6d55113863fee0a0dcc5952b3770", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "301cdfcb2ee94522e64db7b15717c090", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long a,b;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n\r\n\r\n        printf(\"YES\\n\");\r\n        if(b>2){\r\n            printf(\"%lld %lld %lld\\n\",a,a*(b-1),a*b);\r\n        }\r\n\r\n        else{\r\n            printf(\"%lld %lld %lld\\n\",a,a*(b+1),a+a*(b+1));\r\n        }\r\n    }\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long a,b;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n\r\n        if(b==1){\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n\r\n        else if(b>2){\r\n            printf(\"YES\\n\");\r\n            printf(\"%lld %lld %lld\\n\",a,a*(b-1),a*b);\r\n        }\r\n\r\n        else{\r\n            printf(\"YES\\n\");\r\n            printf(\"%lld %lld %lld\\n\",a,a*(b+1),a+a*(b+1));\r\n        }\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.6895565092989986, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "4839457e8c822a8be2666caac36e6906", "bug_code_uid": "2282a4add76f56dfec726a7cb67deef1", "src_uid": "ee105b664099808143a94a374d6d5daa", "apr_id": "8843496ca840a8fb67492e73985f7c51", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int a[100], b, k, sum = 0;\n    scanf(\"%d%d\", &b, &k);\n    for(int i = 0; i < k; i++){\n        scanf(\"%d\", &a[i]);\n        if(a[i]%2==1) sum++;\n    }\n    if(b%2==0&&a[k-1]%2==0) printf(\"even\\n\");\n    else if(b%2==1&&sum%2==0) printf(\"even\\n\");\n    else if (sum%2==1) printf(\"odd\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    int t, b, k, sum = 0;\n    scanf(\"%d%d\", &b, &k);\n    for(int i = 0; i < k; i++){\n        scanf(\"%d\", &t);\n        if(t%2==1) sum++;\n    }\n    if(b%2==0&&t%2==0) printf(\"even\\n\");\n    else if(b%2==0&&t%2==1) printf(\"odd\\n\");\n    else if(b%2==1&&sum%2==0) printf(\"even\\n\");\n    else if (sum%2==1) printf(\"odd\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9949409780775716, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1c26ecb2a92d7b3434a885db0bae03b9", "bug_code_uid": "b16038a004f0544897a6c12f2309165f", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "aeb9c858603157889dfd2904715fc629", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main() {\n    int n,t;\n    scanf(\"%d%d\",&n,&t);\n    int *dizi=(int*) malloc(n*sizeof(int)),i;\n    for(i=1;i<n;i++)\n        scanf(\"%d\",&dizi[i]);\n    for(i=1;i<n;i=dizi[i]+i) {\n        if(i==t) {\n            printf(\"YES\");\n            return 0;\n        }\n    }\n    printf(\"NO\");\n    return 0;\n}", "fixed": "int main() {\n    int n,t;\n    scanf(\"%d%d\",&n,&t);\n    int *dizi=(int*) malloc(n*sizeof(int)),i;\n    for(i=1;i<n;i++)\n        scanf(\"%d\",&dizi[i]);\n    for(i=1;i<=t;i=dizi[i]+i) {\n        if(i==t) {\n            printf(\"YES\");\n            return 0;\n        }\n    }\n    printf(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.881979695431472, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7ee0cec104c25de188562dc4f279cbec", "bug_code_uid": "8f1d5fb083678f5538ed60b681045e22", "src_uid": "8e36566b5e0c74730ea118e23b030778", "apr_id": "e71483c616b6583e57f7fa542834054a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long n,ans2;\n    int k,i,ans1;\n    long long cap[100000],temp2,temp;\n    scanf(\"%I64d%d\",&n,&k);\n    scanf(\"%I64d\",&cap[0]);\n    if(n/cap[0]>=0)\n    {\n       ans2=n/cap[0];\n    }\n    else\n    {\n        ans2=0;\n    }\n    ans1=1;\n    if(n>cap[0])\n    {\n           temp=n%cap[0];\n\n    }\n    for(i=1; i<k; i++)\n    {\n        scanf(\"%I64d\",&cap[i]);\n        if(n>cap[i])\n        {\n                    temp2=n%cap[i];\n\n        }\n        if(temp>temp2)\n        {\n\n            ans1=i+1;\n            if(n/cap[i]>=0)\n            {\n                ans2=n/cap[i];\n\n            }\n            temp=temp2;\n        }\n    }\n    if(ans2==0)\n    {\n        ans1=1;\n        printf(\"%d   %I64d\",ans1,ans2);\n        return 0;\n    }\n    printf(\"%d   %I64d\",ans1,ans2);\n\n\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long n,ans2;\n    int k,i,ans1;\n    long long cap[100000],temp2,temp;\n    scanf(\"%I64d%d\",&n,&k);\n    scanf(\"%I64d\",&cap[0]);\n    if(n/cap[0]>=0)\n    {\n       ans2=n/cap[0];\n    }\n    else\n    {\n        ans2=0;\n    }\n    ans1=1;\n\n           temp=n%cap[0];\n\n\n    for(i=1; i<k; i++)\n    {\n        scanf(\"%I64d\",&cap[i]);\n\n        temp2=n%cap[i];\n\n\n        if(temp>temp2)\n        {\n\n            ans1=i+1;\n            if(n/cap[i]>=0)\n            {\n                ans2=n/cap[i];\n\n            }\n            temp=temp2;\n        }\n    }\n    if(ans2==0)\n    {\n        ans1=1;\n        printf(\"%d   %I64d\",ans1,ans2);\n        return 0;\n    }\n    printf(\"%d   %I64d\",ans1,ans2);\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.42424242424242425, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "4d271aea306014afdcac908d8da613bb", "bug_code_uid": "b863ab8c402bb7963c1afea2624cdc97", "src_uid": "6469ed9f2486b498c9ffeb8270391e3a", "apr_id": "18234481a2d5b966b2cf397cfe6eaf46", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x,t,s,i,max,min;\n    int arr[10];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    max=arr[0];\n    min=arr[0];\n    for(i=0;i<n;i++){\n       // max=arr[0];\n       // min=arr[0];\n        if(arr[i]>max)\n        {\n\n\n            max=arr[i];\n        }\n        if(arr[i]<max)\n            min=arr[i];\n    }\n\n\n    t=max;\n    s=min;\n\n    x=t-s+1;\n    printf(\"%d\\n\",x-n);\n\n    return 0;\n    }\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,max,min,x;\n\tint arr[1000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tmax=arr[0];\n\tmin=arr[0];\n\tfor(i=0;i<n;i++){\n\tif(arr[i]>max){\n\t\tmax=arr[i];\n\t}\n\telse if(arr[i]<min){\n\t\tmin=arr[i];\n\t}\n\t}\n\tx=max-min+1;\n\tprintf(\"%d\",x-n);\n\nreturn 0;\n\t}"}
{"similarity_score": 0.863768115942029, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6d4f63471d0f0429ea2ee79745027875", "bug_code_uid": "0c80bf05d43afcb70ca02988785589ca", "src_uid": "be141f316d6e5d9d8f09192913f4be47", "apr_id": "34c4b29bef7bcea06cc259e77ac3a051", "difficulty": 1700, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include<stdio.h>\n    #define ll long long \n    ll gcd(ll a,ll b){\n    \tif(!a)return b;\n    \telse return gcd(b%a,a);\n    }\n    ll max(ll a,ll b){\nif(a>b) return a;\nelse return b;\n}\nll min(ll a,ll b){\nif(a<b) return a;\nelse return b;\n}\n    int main(){\n    \tint n;\n    \tscanf(\"%d\",&n);\n    \tfor(int i=0;i<n;++i){\n    \t\tll a,b,c;\n    \t\tscanf(\"%lld %lld %lld\",&a,&b,&c);\n    \t\tll p=gcd(a,b);\n    \t\ta/=p;\n    \t\tb/=p;\n    \t\tif(((max(a,b)-1)/min(a,b))>=c)printf(\"REBEL\\n\");\n    \t\telse printf(\"OBEY\\n\");\n    \t}\n    }\n", "fixed": "    #include<stdio.h>\n    #define ll long long \n    ll gcd(ll a,ll b){\n    \tif(!a)return b;\n    \telse return gcd(b%a,a);\n    }\n    ll max(ll a,ll b){\nif(a>b) return a;\nelse return b;\n}\nll min(ll a,ll b){\nif(a<b) return a;\nelse return b;\n}\n    int main(){\n    \tint n;\n    \tscanf(\"%d\",&n);\n    \tfor(int i=0;i<n;++i){\n    \t\tll a,b,c;\n    \t\tscanf(\"%lld %lld %lld\",&a,&b,&c);\n    \t\tll r=min(a,b);\n    \t\tll bl=max(a,b);\n    \t\tll g=gcd(r,bl);\n    \t\tif((g+(c-1)*r)<bl) printf(\"REBEL\\n\");\n    \t\telse printf(\"OBEY\\n\");\n    \t}\n    }\n"}
{"similarity_score": 0.1855388813096862, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "afc7fef417484e06d4951403a29d74d6", "bug_code_uid": "61a884df82ec1a9eeb079f80a9f5e870", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "ff7402a52a04fa6857a4d8b8e060823d", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint x1,x2,y1,y2,x,y;\nscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\nif(((x1!=x2)&&(y1!=y2)&&(x1==y1)&&(x2==y2))||((x1==x2)&&(y1!=y2))||((x1!=x2)&&(y1==y2)))\n{\nif((x1==x2)&&(y1!=y2)&&((y1>=x1)||y2>=x2))\n  {\n    if(y1>y2)\n      {x=y1;y=x1;}\n    else\n      {x=y2;y=x1;}\n   printf(\"%d %d %d %d\",x,x,x,y);\n  }\nelse if((x1==x2)&&(y1!=y2)&&((y1<=x1)||y2<=x2))\n   {\n     if(y1>y2)\n      {x=y2;y=x2;}\n    else\n      {x=y1;y=x1;}\n     printf(\"%d %d %d %d\",x,x,x,y);\n    }\nelse if((x1!=x2)&&(y1==y2)&&((y1>=x1)||(y2>=x2)))\n   {\n     if(x1<x2)\n       {x=x1;y=y1;}\n     else\n       {x=x2;y=y2;}\n     printf(\"%d %d %d %d\",x,x,y,x);\n   }\nelse if((x1!=x2)&&(y1==y2)&&((y1<=x1)||(y2<=x2)))\n   {\n     if(x1>x2)\n       {x=x1;y=y1;}\n     else\n       {x=x2;y=y2;}\n     printf(\"%d %d %d %d\",y,x,x,x);\n   }\nelse if((x1!=x2)&&(y1!=y2)&&((x1<x2)&&(y1<y2)))\n   {\n     printf(\"%d %d %d %d\",x1,x2,x2,x1);\n   }\nelse if((x1!=x2)&&(y1!=y2)&&((x1<x2)&&(y1>y2)))\n    {\n      printf(\"%d %d %d %d\",x1,y2,x2,y1);\n    }\n}\nelse\n   printf(\"-1\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{int x1,x2,y1,y2,y3,y4,x3,x4,l;\nscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\nif(x1==x2||y1==y2)\n{\nif(x1==x2)\n{\nl=abs(y2-y1);\nx3= x1+l;\nx4=x3;\ny3=y2;y4=y1;\n}\n\n\nelse\n{l=abs(x2-x1);\nx3=x2;y3=y2+l;x4=x1;y4=y1+l;}\nprintf(\"%d %d %d %d\",x3,y3,x4,y4);\n\n\n}\nelse if(abs(x2-x1)==abs(y2-y1))\n{\n\n    x3=x1;y3=y2;\n    x4=x2;y4=y1;\n    printf(\"%d %d %d %d\",x3,y3,x4,y4);\n\n\n}\nelse{printf(\"-1\");}\nreturn 0;\n}\n"}
{"similarity_score": 0.8686030428769018, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "2c01ab493524a5412568847439841ced", "bug_code_uid": "0a46f28692ce05e6e6a32bd2a291dfb3", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "306e15a8d8280be806f1b1658188bb57", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n  int i,n;\n  int t[20];\n  int max = -pow(10,6);\n  //printf(\"entrer n : \");\n  scanf(\"%d\",&n);\n  /*for(i=0;i<n;i++)\n  {\n   printf(\"entre un element : \");\n    scanf(\"%d\",&t[i]);\n  }*/\n  for(i=0;i<n;i++)\n   {\n     if(sqrt(t[i])!=(int)sqrt(t[i]))\n       {\n            if(t[i]>max)\n              max = t[i];\n       }\n\n   }\n   printf(\"%d\",max);\n   return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n  int i,n;\n  int t[1000];\n  int max = -pow(10,6);\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++)\n   {\n       scanf(\"%d\",&t[i]);\n     if(sqrt(t[i])!=(int)sqrt(t[i]))\n       {\n            if(t[i]>max)\n              max = t[i];\n       }\n\n   }\n   printf(\"%d\",max);\n   return 0;\n\n}\n"}
{"similarity_score": 0.1196808510638298, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fa565c4fbd4e217cc98b4a579b41e01a", "bug_code_uid": "4e93e8ddfc8625d4e574889155bc0f03", "src_uid": "c11d67f223eb49c6e8315e2c88dd680d", "apr_id": "afcba537caa8d8d2e375e7fb79914b23", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain(){\n\t\nlong n,l;\nscanf(\"%ld\",&n);\nchar s[n+1],str[n+1];\nscanf(\"%s\",s);\n\nl=strlen(s);\nint i=0,k=0;\n\n while(s[i]!='\\0'){\n \tif(i%2==0){\n \t\tstr[k]=s[i];\n \t\ti++;\n \t\tk++;\n \t\n\t }\n\t else{\n\t \tif(str[k-1]!=s[i])\n\t \t{\n\t \t\tstr[k]=s[i];\n\t \t\tk++;\n\t \t\t\n\t\t }\n\t\t i++;\n\t \t\n\t }\n\t \n }\n if(k%2!=0) k--;\n str[k]='\\0';\n \n printf(\"%d\\n%s\\n\",n-k,str);}\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tchar s[n];\n\tscanf(\"%s\", s);\n\tchar ans[n];\n\tint m = 0;\n\tint i;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (m % 2 == 0)\n\t\t{\n\t\t\tans[m] = s[i];\n\t\t\tm++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (ans[m - 1] != s[i])\n\t\t\t{\n\t\t\t\tans[m] = s[i];\n\t\t\t\tm++;\n\t\t\t}\n\t\t}\n\t}\n\tif (m % 2 == 1)\n\t\tm--;\n\tans[m] = '\\0';\n\tprintf(\"%d\\n\", n - m);\n\tprintf(\"%s\\n\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.4232209737827715, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a69133d02f2b2aa78eec6a06a5ae03fb", "bug_code_uid": "f2f53bb2260ba1089d8c7a6884b29d1a", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "404d5bf4b3ada03e9d77ff3c0c0f57ae", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j;\n    long long int arr[1000],s;\n    scanf(\"%d\",&n);\n    for(i=0,j=0; i<n; i++,j=j+3)\n    {\n        scanf(\"%lld %lld %lld\",&arr[j],&arr[j+1],&arr[j+2]);\n    }\n    for(i=0,j=0; i<n; i++,j=j+3)\n    {\n       s=arr[j]+arr[j+1]+arr[j+2];\n       printf(\"%lld\\n\",s/2);\n    }\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int q,i;\n    scanf(\"%d\",&q);\n    long long int a,b,c,s;\n    for(i=0; i<q; i++)\n    {\n        scanf(\"%lld%lld%lld\",&a,&b,&c);\n        s= a+b+c;\n        printf(\"%lld\\n\",s/2);\n    }\n\n}\n"}
{"similarity_score": 0.852549889135255, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "45d5ed4b3c2cd4c47ff9166cac9a603c", "bug_code_uid": "454c36ded21ca18bfa967ddaee751834", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "6d96ab54376fafd3ce78c4f0d9ec2ac2", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\ndouble conv (char k[],int f)\n{\n    double l=strlen(k);\n    int i;\n    double sum=0;\n    int f1=0;\n    double j=l-1;\n    for(i=l-1;i>=0;i--)\n    {\n\n\n        if(k[i]=='1')\n        {\n            sum=sum+1*pow(2,l-1-j);\n        }\n        if(i!=f)\n            j--;\n    }\n    return sum;\n}\nint main()\n{\n    char k[555555];\n    gets(k);\n    int l=strlen(k);\n    double maxi=0;\n    int i;\n    int maxindex=0;\n    for(i=0;i<l;i++)\n    {\n        if(k[i]=='0')\n        {\n          if(conv(k,i)>maxi)\n          {\n              maxi=conv(k,i);\n              maxindex=i;\n          }\n        }\n    }\n    for(i=0;i<l;i++)\n    {\n        if(i!=maxindex)\n        {\n            printf(\"%c\",k[i]);\n        }\n    }\n\n   return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\ndouble conv (char k[],int f)\n{\n    double l=strlen(k);\n    int i;\n    double sum=0;\n    int f1=0;\n    double j=l-1;\n    for(i=l-1;i>=0;i--)\n    {\n\n\n        if(k[i]=='1')\n        {\n            sum=sum+1*pow(2,l-1-j);\n        }\n        if(i!=f)\n            j--;\n    }\n    return sum;\n}\nint main()\n{\n    char k[555555];\n    gets(k);\n    int l=strlen(k);\n    double maxi=0;\n    int i;\n    int maxindex=0;\n    for(i=0;i<l;i++)\n    {\n        if(k[i]=='0')\n        {\n          if(conv(k,i)>maxi)\n          {\n              maxi=conv(k,i);\n              maxindex=i;\n              break;\n          }\n        }\n    }\n     for(i=l-1;i<=0;i--)\n    {\n        if(k[i]=='0')\n        {\n          if(conv(k,i)>maxi)\n          {\n              maxi=conv(k,i);\n              maxindex=i;\n              break;\n          }\n        }\n    }\n\n    for(i=0;i<l;i++)\n    {\n        if(i!=maxindex)\n        {\n            printf(\"%c\",k[i]);\n        }\n    }\n\n   return 0;\n}"}
{"similarity_score": 0.6644125105663568, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fa8a11973850448dbd9bde2ca39c402b", "bug_code_uid": "fd1c9df5f2c73a7608b240d4d404c871", "src_uid": "8e766dea94dc2033ba2d5759d7e5cd80", "apr_id": "809562ee8d1117ee6d58ce785b29b9a7", "difficulty": 1200, "tags": ["dp", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint t, i, n, a[200000], j, b[200002], s = 0;\n\tscanf(\"%d\", &t);\n\tif(t == 2){\n\tfor(i = 0; i < t; i++){\n\t\tscanf(\"%d\", &n);\n\t\tfor(j = 0; j < n; j++){\n\t\t\tb[j] = 0;\n\t\t}\n\t\tfor(j = 0; j < n; j++){\n\t\t\tscanf(\"%d\", &a[j]);\n\t\t\tb[a[j]]++;\n\t\t}\n\t\tj = 1;\n\t\ts = 0;\n\t\twhile(j <= n){\n\t\t\ts += b[j] / j;\n\t\t\tb[j + 1] += b[j] % j;\n\t\t\tb[j] = 0;\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"%d\\n\", s);\n\t\t\t\t\n\t}\n\t}\n\telse{\n\t\tfor(i = 0; i < t; i++){\n\t\tscanf(\"%d\", &n);\n\t\tfor(j = 0; j < n; j++){\n\t\t\tb[j] = 0;\n\t\t}\n\t\tfor(j = 0; j < n; j++){\n\t\t\tscanf(\"%d\", &a[j]);\n\t\t\tb[a[j]]++;\n\t\t}\n\t\tj = 1;\n\t\twhile(j <= n){\n\t\t\tif(b[j] != 0){\n\t\t\t\tprintf(\"%d \", b[j]);\n\t\t\t}\n\t\t\tj++\n\t\t}\n\t\t/*j = 1;\n\t\ts = 0;\n\t\twhile(j <= n){\n\t\t\ts += b[j] / j;\n\t\t\tb[j + 1] += b[j] % j;\n\t\t\tb[j] = 0;\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"%d\\n\", s);*/\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n\tint t, i, n, a[200000], j, b[200002], s = 0;\n\tscanf(\"%d\", &t);\n\tfor(i = 0; i < t; i++){\n\t\tscanf(\"%d\", &n);\n\t\tfor(j = 0; j <= n; j++){\n\t\t\tb[j] = 0;\n\t\t}\n\t\tfor(j = 0; j < n; j++){\n\t\t\tscanf(\"%d\", &a[j]);\n\t\t\tb[a[j]]++;\n\t\t}\n\t\tj = 1;\n\t\ts = 0;\n\t\twhile(j <= n){\n\t\t\ts += b[j] / j;\n\t\t\tb[j + 1] += b[j] % j;\n\t\t\tb[j] = 0;\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"%d\\n\", s);\n\t\t\t\t\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.6387596899224807, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7fff41d38051faf55a82424d47634288", "bug_code_uid": "6d22ee246d4a715a9b461914c78cd338", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "62fe83fd2812b1c59b0082e9ecf05fdc", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n{\n    int n,m,a,i,k,j,max;\n\n    scanf(\"%d %d\",&n,&m);\n\n    int x[n];\n\n    for(i=0;i<n;i++)\n      scanf(\"%d\",&x[i]);\n\n    while(m--)\n    { int y[100001]={},c=0;\n        scanf(\"%d\",&a);\n\n        for(i=a-1;i<n;i++)\n            if(!y[x[i]]) {y[x[i]]=1; c++;}\n\n    printf(\"%d\\n\",c);\n\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n\n{\n    int n,m,a,i,j,c=0;\n\n    scanf(\"%d %d\",&n,&m);\n\n    int x[n],y[100001]={},z[n];\n\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&x[i]);\n\n    for(i=n-1;i>=0;i--)\n    {  if(!y[x[i]]) {y[x[i]]=1; c++;}  z[i]=c;  }\n\n    while(m--)\n    {\n        scanf(\"%d\",&a);\n        printf(\"%d\\n\",z[a-1]);\n    }\n}\n"}
{"similarity_score": 0.998, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0928f3ed3312292a1b13c70844f900b1", "bug_code_uid": "82ccb04b9da9055ed1bb06b2739086bd", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "56a2a991a07d2a49b712477bdd2d1737", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\n\r\nint min(int a, int b)\r\n{\r\n    if(a > b)return b;\r\n    else return a;\r\n}\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  while(t>0)\r\n  {\r\n      t--;\r\n       int n;\r\n   scanf(\"%d\", &n);\r\n   int a[n];\r\n   for(int i = 0; i < n; i++)\r\n   {\r\n       scanf(\"%d\", &a[i]);\r\n   }\r\n   int odd = 0, even = 0;\r\n   for(int i = 0; i < n; i++)\r\n   {\r\n       if(a[i]%2 == 0)even++;\r\n       else odd++;\r\n   }\r\n   printf(\"%d\", min(odd,even));\r\n  }\r\n}", "fixed": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\n\r\nint min(int a, int b)\r\n{\r\n    if(a > b)return b;\r\n    else return a;\r\n}\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  while(t>0)\r\n  {\r\n      t--;\r\n       int n;\r\n   scanf(\"%d\", &n);\r\n   int a[n];\r\n   for(int i = 0; i < n; i++)\r\n   {\r\n       scanf(\"%d\", &a[i]);\r\n   }\r\n   int odd = 0, even = 0;\r\n   for(int i = 0; i < n; i++)\r\n   {\r\n       if(a[i]%2 == 0)even++;\r\n       else odd++;\r\n   }\r\n   printf(\"%d\\n\", min(odd,even));\r\n  }\r\n}"}
{"similarity_score": 0.5211267605633803, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "096ea0e2f75be0b3f86ed7a4717ee9dd", "bug_code_uid": "691b4154e6a4da157f79880e4600aa85", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "b9fa93e0ee5294663f1dc3ae1acab8b8", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int t,n,k=2,l=2,i;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       k=2;\n       l=2;\n       scanf(\"%d\",&n);\n       if(n==1)\n        printf(\"1\\n\");\n        else if(n==2)\n        {\n            printf(\"2\\n\");\n\n        }\n        else\n        {\n            for(i=3;i<=n;i++)\n            {\n                l=l+k;\n\n\n            }\n            printf(\"%d\\n\",l);\n        }\n\n\n\n   }\n   return 0;\n   }\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int t,n;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n\n       scanf(\"%d\",&n);\n      printf(\"%d\\n\",n);\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.9971509971509972, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ff225b48981d17242afc52b8a6993cf3", "bug_code_uid": "5e14ec9e89afab97ac20111ef1850fd0", "src_uid": "26354d2628f26eb2eff9432bd46400d5", "apr_id": "952faacf7e24ed2a84d2cc1b36c56a66", "difficulty": 800, "tags": ["combinatorics", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int it,n,k1,k2,i,bcnt,wcnt,w,b;\r\n    scanf(\"%d\",&it);\r\n    while(it--)\r\n    {\r\n        bcnt=wcnt=0;\r\n        scanf(\"%d %d %d\",&n,&k1,&k2);\r\n        scanf(\"%d %d\",&w,&b);\r\n        if((w+b<=n) && (2*w<=k1+k2) && (2*b<=(2*n-k1+k2)))\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int it,n,k1,k2,i,bcnt,wcnt,w,b;\r\n    scanf(\"%d\",&it);\r\n    while(it--)\r\n    {\r\n        bcnt=wcnt=0;\r\n        scanf(\"%d %d %d\",&n,&k1,&k2);\r\n        scanf(\"%d %d\",&w,&b);\r\n        if((w+b<=n) && (2*w<=k1+k2) && (2*b<=(2*n-(k1+k2))))\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9987714987714987, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a79c8a7bd8642adb36478f6309d4d23f", "bug_code_uid": "f4a329f4ee33e6769a39ec06e6c04cd2", "src_uid": "b3c6058893f935d88196113fab581cf8", "apr_id": "8cc9077588be9504ead298d5db339653", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid ech(int i,int j,int t[])\n{\n    int x;\n    x=t[i];\n    t[i]=t[j];\n    t[j]=x;\n}\n\nint min(int t[],int n,int d)\n{\n    int i,min;\n    min=d;\n    for(i=d;i<n;i++)\n    {\n        if(t[i]<t[min])\n            min=i;\n    }\n    return min;\n}\n\nint main()\n{\n    int i,n,x;\n    scanf(\"%d\",&n);\n\n    int tab[n];\n    int t[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&t[i]);\nint y=0;\nint k=0;\n\n for(i=0;i<n;i++)\n            {\n                x=min(t,n,i);\n                if(i!=x)\n                {\n                    k++;\n                    tab[y]=i;\n                    tab[y+1]=x;\n                    y=y+2;\n\n                   ech(i,x,t);\n                }\n\n            }\n\nprintf(\"%d\\n\",k);\nfor(i=0;i<y;i++)\n{\n    printf(\"%d %d\\n\",tab[i],tab[i+1]);\n    i++;\n}\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid ech(int i,int j,int t[])\n{\n    int x;\n    x=t[i];\n    t[i]=t[j];\n    t[j]=x;\n}\n\nint min(int t[],int n,int d)\n{\n    int i,min;\n    min=d;\n    for(i=d;i<n;i++)\n    {\n        if(t[i]<t[min])\n            min=i;\n    }\n    return min;\n}\n\nint main()\n{\n    int i,n,x;\n    scanf(\"%d\",&n);\n\n    int tab[2*n];\n    int t[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&t[i]);\nint y=0;\nint k=0;\n\n for(i=0;i<n;i++)\n            {\n                x=min(t,n,i);\n                if(i!=x)\n                {\n                    k++;\n                    tab[y]=i;\n                    tab[y+1]=x;\n                    y=y+2;\n\n                   ech(i,x,t);\n                }\n\n            }\n\nprintf(\"%d\\n\",k);\nfor(i=0;i<y;i++)\n{\n    printf(\"%d %d\\n\",tab[i],tab[i+1]);\n    i++;\n}\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9970501474926253, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "58e7769165f3e9cbe22dee06eb28c647", "bug_code_uid": "bbf8157330bde9321f0fb32b4d6c8f9c", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "41267845d3f01602e876ca85d49770a0", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n long long a,b,k,p=0,q,i;\n\n scanf(\"%lld\", &q);\n for(long long z=0;z<q;z++)\n {\n  for(i=1;i<=q;i++)\n  {\n\n   scanf(\"%lld %lld %lld\", &a, &b, &k);\n \n    if(k%2==0)\n   {\n     p=a*(k/2) - b*(k/2);\n   }\n    else\n   {\n     p=((k/2) +1)*a - b*(k/2);\n   }     \n     printf(\"%lld\", p);\n     p=0; \n  }\n   return 0;\n }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n long long a,b,k,p=0,q,i;\n\n scanf(\"%lld\", &q);\n for(long long z=0;z<q;z++)\n {\n  for(i=1;i<=q;i++)\n  {\n\n   scanf(\"%lld %lld %lld\", &a, &b, &k);\n \n    if(k%2==0)\n   {\n     p=a*(k/2) - b*(k/2);\n   }\n    else\n   {\n     p=((k/2) +1)*a - b*(k/2);\n   }     \n     printf(\"%lld\\n\", p);\n     p=0; \n  }\n   return 0;\n }\n}"}
{"similarity_score": 0.996219281663516, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ab74e82c7b7bc7389549de96167cb51a", "bug_code_uid": "a49fd95e8d239c363e02fb6a0f83ec63", "src_uid": "dd2cd365d7afad9c2b5bdbbd45d87c8a", "apr_id": "97d332d447af945887ddb167b29546d6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint sort(const void* a, const void* b){\n  int x = *((int*) a);\n  int y = *((int*) b);\n\n  return x-y;\n}\n\nint main(){\n  int n, x, total = 1;\n  scanf(\"%d\", &n);\n\n  for(int i = 0; i < n; ++i){\n    scanf(\"%d\", &x);\n    int v[x;]\n    for(int j = 0; j < x; ++j)\n      scanf(\"%d\", &v[j]);\n\n    qsot(v, x, sizeof(v[0]), sort)\n\n    for(int j = 0; j < x-1; ++j){\n      if(abs(v[j]-v[j+1]) == 1)\n        total = 2;\n    }\n    printf(\"%d\\n\", total);\n    total = 1;\n  }\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint sort(const void* a, const void* b){\n  int x = *((int*) a);\n  int y = *((int*) b);\n\n  return x-y;\n}\n\nint main(){\n  int n, x, total = 1;\n  scanf(\"%d\", &n);\n\n  for(int i = 0; i < n; ++i){\n    scanf(\"%d\", &x);\n    int v[x];\n    for(int j = 0; j < x; ++j)\n      scanf(\"%d\", &v[j]);\n\n    qsort(v, x, sizeof(v[0]), sort);\n\n    for(int j = 0; j < x-1; ++j){\n      if(abs(v[j]-v[j+1]) == 1)\n        total = 2;\n    }\n    printf(\"%d\\n\", total);\n    total = 1;\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.3990692262943572, "equal_cnt": 21, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "e01114fad9d8320258c35fd4514cc2c2", "bug_code_uid": "7f5990aff251fe4fc4601de1d0890827", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "8f3dc560b9bcf78ba9c5b6a78d76c844", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,n,j,m,x,k;\n    scanf(\"%d\",&t);\n    while(t>0)\n    {\n        t--;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            m=a[i];\n            j=i-1;\n             while(j>=0&&a[j]>m)\n             {\n                 a[j+1]=a[j];\n                 j--;\n             }\n             a[j+1]=m;\n        }\n        k=1;\n        m=1;\n        x=1;\n        for(i=0;i<n-1;i++)\n        {\n            if(a[i+1]!=a[i])\n            {\n                m++;\n                x=1;\n            }\n            else\n            {\n                x++;\n                if(x>k)\n                {\n                    k=x;\n                }\n            }\n        }\n        if(m<k)\n        {\n        printf(\"%d\\n\",m);\n        }\n        else if(k<m)\n        {\n            printf(\"%d\\n\",k);\n        }\n        else\n        {\n            printf(\"%d\\n\",k-1);\n        }\n\n    }\n}\n", "fixed": "#include<stdio.h>\nint binary_search(int a[],int n,int x)\n{\n    int i,l=0,h=n-1;\n}\nint main()\n{\n    int t,i,n,j,m,x,k;\n    scanf(\"%d\",&t);\n    while(t>0)\n    {\n        t--;\n        scanf(\"%d\",&n);\n        int a[n+1];\n         for(i=1;i<=n;i++)\n        {\n           a[i]=0;\n        }\n        k=1;\n        m=0;\n        for(i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&x);\n            a[x]++;\n            if(a[x]>k)\n            {\n                k=a[x];\n            }\n            if(a[x]>1)\n            {\n                m++;\n            }\n        }\n        m=n-m;\n        if(m<k)\n        {\n        printf(\"%d\\n\",m,k);\n        }\n        else if(k<m)\n        {\n            printf(\"%d\\n\",k);\n        }\n        else\n        {\n            printf(\"%d\\n\",k-1);\n        }\n\n    }\n}\n"}
{"similarity_score": 0.9238630556974962, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "47a27d58e27dfdb43313d7b02bf7041c", "bug_code_uid": "b07c9dc7201afc9161494587a0663424", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "e516f539bb1578fbb13d10d220331718", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[150],i,j,t,s=0,l=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    for(j=i+1;j<n;j++)\n    {\n                    if(a[i]>a[j])\n                    {\n                                 t=a[j];\n                                 a[j]=a[i];\n                                 a[i]=t;\n                                 }\n                                 }\nif(n==1)\nprintf(\"2\");                                 \nelse if(n==2)\n{\n        if(a[1]==a[0])\n        printf(\"2\");\n        else\n        printf(\"1\");\n        }\nelse        \nfor(i=n-1;i>0;i--)\n{\n                   for(j=0;j<i;j++)\n                   s=s+a[j];\n                   l=l+a[i];\n                   if(l>s)\n                   printf(\"%d\",n-i);\n                   else\n                   s=0;\n                   }\n                  return(0);\n                  }                                \n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[150],i,j,t,s=0,l=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    for(j=i+1;j<n;j++)\n    {\n                    if(a[i]>a[j])\n                    {\n                                 t=a[j];\n                                 a[j]=a[i];\n                                 a[i]=t;\n                                 }\n                                 }\nif(n==1)\nprintf(\"1\");                                 \nelse if(n==2)\n{\n        if(a[1]==a[0])\n        printf(\"2\");\n        else\n        printf(\"1\");\n        }\nelse        \nfor(i=n-1;i>0;i--)\n{\n                    l=l+a[i];\n                   for(j=0;j<i;j++)\n                   s=s+a[j];\n                     if(l>s)\n                   {\n                   printf(\"%d\",n-i);\n                   goto x;\n                   }\n                   else\n                   s=0;\n                   }\n                x: ;\n                  return(0);\n                  }                                \n"}
{"similarity_score": 0.9031781226903178, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "58897acddd5d105214b4edec4de8e90f", "bug_code_uid": "0140f1664779a8e7a405d1439071f2cf", "src_uid": "e5fac4a1f3a724234990fe758debc33f", "apr_id": "f9169c502c51ccb6ee2cd5542045de12", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[105]={0};\nint b[105]={0};\nint main()\n{\n    int t=0,i=0,j=0;\n    int n=0,x=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d\",&n,&x);\n        for(i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            b[a[i]]=1;\n        }\n        for(i=1;i<=205;i++)\n        {\n            if(b[i]==0)\n            {\n                x--;\n                if(x==-1)\n                {\n                    printf(\"%d\\n\",i-1);\n                    break;\n                }\n            }\n        }\n        for(i=1;i<=204;i++)\n        {\n            b[i]=0;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint a[105]={0};\nint b[205]={0};\nint main()\n{\n    int t=0,i=0,j=0;\n    int n=0,x=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d\",&n,&x);\n        for(i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            b[a[i]]=1;\n        }\n        for(i=1;i<=205;i++)\n        {\n            if(b[i]==0)\n            {\n                if(x==-1)\n                {\n                    printf(\"%d\\n\",i-1);\n                    break;\n                }\n                x--;\n                if(x==-1)\n                {\n                    printf(\"%d\\n\",i-1);\n                    break;\n                }\n            }\n        }\n        for(i=1;i<=204;i++)\n        {\n            b[i]=0;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9929078014184397, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "816340e48d079b77aba4df87fda0f97d", "bug_code_uid": "b0fd1db96aa2764ae8eed20e86c8f483", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "638ced5763d5689b665048ba6be0e87b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n \n long long int h,n,q,a,b,e,f;\n scanf(\"%lld \\n\", &q);\n \n for(int i=1;i<=q;i++)\n    {\n        scanf(\"%lld \", &n);\n        scanf(\"%lld \", &a);\n         scanf(\"%lld \\n\", &b);\n    }\n \nif((2*a)<b)\n    {\n        h=(n*a);\n    }\n    else\n        {\n            e=n/2;\n            f=n%2;\n            if(f==0)\n                {\n                    h=e*b;\n                }\n                else\n                    {\n                        h=(e*b)+a ;\n                    }\n            \n        }\n printf(\"%lld\", h);\n\n \n   return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n \n long long int h,n,q,a,b,e,f;\n scanf(\"%lld \\n\", &q);\n \n for(int i=1;i<=q;i++)\n    {\n        scanf(\"%lld \", &n);\n        scanf(\"%lld \", &a);\n         scanf(\"%lld \\n\", &b);\n    \n \nif((2*a)<b)\n    {\n        h=(n*a);\n    }\n    else\n        {\n            e=n/2;\n            f=n%2;\n            if(f==0)\n                {\n                    h=e*b;\n                }\n                else\n                    {\n                        h=(e*b)+a ;\n                    }\n            \n        }\n printf(\"%lld \\n\", h);\n\n    }\n   return 0;\n}"}
{"similarity_score": 0.9844179651695693, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0a45867e46a1dcfcbeffe15ed3c6e8b1", "bug_code_uid": "9866a0c16291d9b8681ce2aa00091d95", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "393026e660fd5582dea58a38fa937e4c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,x=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        if(i%2==0) for(j=0;j<m;j++) printf(\"#\");\n        else if(i%2!=0)\n        {\n            if(x%2==0)\n            {\n                for(j=0;j<m-1;j++) printf(\".\");\n                printf(\"#\");\n                x++;\n            }\n        else if(x%2!=0)\n        {\n            printf(\"#\");\n            for(j=0;j<m-1;j++)\n            {\n                printf(\".\");\n            }\n        }\n\n        }\n\n        printf(\"\\n\");\n    }\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,x=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        if(i%2==0) for(j=0;j<m;j++) printf(\"#\");\n        else if(i%2!=0)\n        {\n            if(x%2==0)\n            {\n                for(j=0;j<m-1;j++) printf(\".\");\n                printf(\"#\");\n                x++;\n            }\n        else if(x%2!=0)\n        {\n            printf(\"#\");\n            for(j=0;j<m-1;j++)\n            {\n                printf(\".\");\n            }\n            x++;\n        }\n\n        }\n\n        printf(\"\\n\");\n    }\n}\n\n"}
{"similarity_score": 0.9310344827586207, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f60314dff12c67f37c336c7fe6fe9907", "bug_code_uid": "a6952e11eb78fad622cd4515999b336c", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "d0b958f22cb9c76e8d0b9d3882a69f30", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\n \n int main()\n {\n\t#ifndef ONLINE_JUDGE\n    // for getting input from input.txt\n    freopen(\"input.txt\", \"r\", stdin);\n    // for writing output to output.txt\n    freopen(\"output.txt\", \"w\", stdout);\n    #endif\n int t;scanf(\"%d\",&t);\n while(t--)\n  \n  {  long long int t,i,a,b,c;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld\",&a,&b,&c);\n        if(a>(b+c+1)||b>(a+c+1)||c>(a+b+1))\n        printf(\"No\\n\");\n        else   printf(\"Yes\\n\");\n  }\n     }}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\n \n int main()\n {\n\t#ifndef ONLINE_JUDGE\n    // for getting input from input.txt\n    freopen(\"input.txt\", \"r\", stdin);\n    // for writing output to output.txt\n    freopen(\"output.txt\", \"w\", stdout);\n    #endif\n int t;scanf(\"%d\",&t);\n while(t--)\n  \n  {  long long int a,b,c;\n    scanf(\"%lld %lld %lld\",&a,&b,&c);\n        if(a>(b+c+1)||b>(a+c+1)||c>(a+b+1))\n        printf(\"No\\n\");\n        else   printf(\"Yes\\n\");\n  }\n     }"}
{"similarity_score": 0.7163187855787476, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e651558755f817c7b637e1c9bb014737", "bug_code_uid": "17abc04f47381fe7f95ce03f4dc4616d", "src_uid": "eca433877ef3fbda198c5f2c95a359e7", "apr_id": "c82d491ed665be0e895208fa7ee200fc", "difficulty": 1100, "tags": ["brute force", "dfs and similar", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main(){\r\nint n=0;\r\nscanf(\"%d\",&n);\r\nfor(int n1=0;n1<n;n1++){\r\n\t\r\nint l;\r\nscanf(\"\\n%d\",&l);\r\nint*g1=malloc(500000);\r\nint*g2=malloc(500000);\r\nint*r1=malloc(5000);\r\nint*r2=malloc(5000);\r\nint* r=malloc(5000);\r\nint*t=malloc(5000);\r\nint gc1=0;int gc2=1;\r\nint cr1=0,cr2=0;\r\nfor(int l1=1;l1<=l;l1++){\r\n\tscanf(\"\\n%d %d\",r1+l1-1,r2+l1-1);\r\n\tr[l1-1]=0;\r\n\tif(r2[l1-1]>cr2&&r1[l1-1]==1){cr2=r2[l1-1];cr1=l1-1;}\r\n}\r\ng1[0]=r1[cr1];g2[0]=r2[cr1];int cr=0;r[cr1]=1;\r\nfor(int l1=0;l1<l;l1++){\r\n\tfor(int t1=1;t1<=1000;t1++)t[t1]=0;\r\n\tfor(int l1=0;l1<l;l1++){\r\n\t\tif(r1[l1]==g1[gc1]&&r2[l1]==g2[gc1])cr=l1;\r\n\t}\r\n\tr[cr]=1;\r\n\tgc1++;\r\n\tfor(int l1=0;l1<l;l1++){\r\n\t\tif(r[l1]==0){t[r1[l1]]=1;t[r2[l1]]=1;}\r\n\t}\r\n\tint x=0;\r\n\tfor(x=r1[cr];x<=r2[cr];x++){\r\n\t\tif(t[x]==0)break;\r\n\t}\r\n\tprintf(\"%d %d %d\\n\",r1[cr],r2[cr],x);\r\n\tif(r1[cr]<=x-1){\r\n\tg1[gc2]=r1[cr];\r\n\tg2[gc2]=x-1;\r\n\tgc2++;}\r\n\tif(x+1<=r2[cr]){\r\n\tg1[gc2]=x+1;\r\n\tg2[gc2]=r2[cr];\r\n\tgc2++;\r\n\t}\r\n}\r\nfree(g1);free(g2);\r\nif(n1!=n-1)printf(\"\\n\");\r\n}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main(){\r\nint n=0;\r\nscanf(\"%d\",&n);\r\nfor(int n1=0;n1<n;n1++){\r\n\t\r\nint l;\r\nscanf(\"\\n%d\",&l);\r\nint*g1=malloc(500000);\r\nint*g2=malloc(500000);\r\nint*r1=malloc(5000);\r\nint*r2=malloc(5000);\r\nint* r=malloc(5000);\r\nint gc1=0;int gc2=1;\r\nint cr1=0,cr2=0;\r\nfor(int l1=1;l1<=l;l1++){\r\n\tscanf(\"\\n%d %d\",r1+l1-1,r2+l1-1);\r\n\tr[l1-1]=0;\r\n\tif(r2[l1-1]>cr2&&r1[l1-1]==1){cr2=r2[l1-1];cr1=l1-1;}\r\n}\r\ng1[0]=r1[cr1];g2[0]=r2[cr1];int cr=0;r[cr1]=1;\r\nfor(int l1=0;l1<l;l1++){\r\n\tfor(int l2=0;l2<l;l2++){\r\n\t\tif(r1[l2]==g1[gc1]&&r2[l2]==g2[gc1])cr=l2;\r\n\t}\r\n\tr[cr]=1;\r\n\tgc1++;\r\n\tint x=0;int x10=0,x20=l+1,x1=0,x2=0;\r\n\tif(r1[cr]==r2[cr])x=r1[cr];\r\n\telse{\r\n\tfor(int l2=0;l2<l;l2++){\r\n\t\tif(r[l2]==1)continue;\r\n\t\tif(r1[l2]==r1[cr])if(r2[l2]>x10){x10=r2[l2];x1=1;}\r\n\t\tif(r2[l2]==r2[cr])if(r1[l2]<x20){x20=r1[l2];x2=1;}\r\n\t}\r\n\tif(x1==1)x=x10+1;else x=x20-1;}\r\n\tprintf(\"%d %d %d\\n\",r1[cr],r2[cr],x);\r\n\tif(r1[cr]<=x-1){\r\n\tg1[gc2]=r1[cr];\r\n\tg2[gc2]=x-1;\r\n\tgc2++;}\r\n\tif(x+1<=r2[cr]){\r\n\tg1[gc2]=x+1;\r\n\tg2[gc2]=r2[cr];\r\n\tgc2++;\r\n\t}\r\n}\r\nfree(g1);free(g2);\r\nif(n1!=n-1)printf(\"\\n\");\r\n}\r\n}\r\n"}
{"similarity_score": 0.3319672131147541, "equal_cnt": 18, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "f32eee0a97f3a7d80aa263b1d2328be7", "bug_code_uid": "da06f79771f1f6a6b0fadbd84b2a9e98", "src_uid": "2e3006d663a3c7ad3781aba1e37be3ca", "apr_id": "17ed88e7a418bcbbd5ab3753b1486f31", "difficulty": 800, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tchar a[2], b;\r\n\t\tscanf(\"%s\", a);\r\n\t\tprintf(\"%d\\n\", (a[0] - 97) * 25 + a[1] - 97 + (a[1] < a[0]));\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include <stdlib.h>\r\nint main(){\r\nint ch,i;\r\n\r\nscanf(\"%d\",&ch);\r\nwhile(ch--)\r\n{\r\n    char n[3];\r\n    int x,y,total;\r\n    scanf(\"%s\",n);\r\n\r\n    x=n[0]-97;\r\n    y=n[1]-96;\r\n    if(x<y)\r\n        y=y-1;\r\n\r\n    total=25*x+y;\r\n    printf(\"%d\\n\",total);\r\n\r\n}\r\nreturn 0;\r\n\r\n}\r\n"}
{"similarity_score": 0.4568081991215227, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "a806081eb2baf975018deba2c9043bd8", "bug_code_uid": "3a55d7f4fd606ef09320f31d6fee67d3", "src_uid": "5c12573b3964ee30af0349c11c0ced3b", "apr_id": "f099ebc653900d403bb9efbbc22a46fd", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int tasks [100][2];\n\n\n    int i,j,s,n,count=0;\n\n    scanf(\"%d %d \\n\",&n,&s);\n\n     for (i=0;i<n;i++)\n     {\n         scanf(\"%d %d\",&tasks[i][0],&tasks[i][1]);\n     }\n\n      if (tasks[n-1][0]!=s)\n        count= tasks[n-1][1];\n     for (i=(n-2);i>=0;i--)\n     {\n         //printf(\"|%d\",count);\n         if (tasks[i][1]>(count+(tasks[i+1][0]-tasks[i][0])))\n            {\n            count=tasks[i][1];\n            }\n         else\n         count=count+(tasks[i+1][0]-tasks[i][0]);\n     }\n\n     count=count+tasks[0][0];\n     printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int tasks [100][2];\n\n\n    int i,j,s,n,count=0;\n\n    scanf(\"%d %d \\n\",&n,&s);\n\n     for (i=0;i<n;i++)\n     {\n         scanf(\"%d %d\",&tasks[i][0],&tasks[i][1]);\n     }\n\n      if (tasks[n-1][0]==s)\n        count= tasks[n-1][1];\n        else\n        {\n            if (tasks[n-1][1]>(s-tasks[n-1][0]))\n                count= tasks[n-1][1];\n            else\n            count=s-tasks[n-1][0];\n        }\n     for (i=(n-2);i>=0;i--)\n     {\n         if (tasks[i][1]>(count+(tasks[i+1][0]-tasks[i][0])))\n            {\n            count=tasks[i][1];\n            }\n         else\n         count=count+(tasks[i+1][0]-tasks[i][0]);\n     }\n\n     count=count+tasks[0][0];\n     printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.21080368906455862, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "9c9f6b60d22f89754f5ce3576e2895e5", "bug_code_uid": "39a4b12722cad0a43847c0cd74fcfb96", "src_uid": "17cf2d6f59773925b228188b5a47b710", "apr_id": "b2dafdb608245b83668f2da682cf607f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t,a,b,c,d,e,f,g,x,y;\n    scanf(\"%d\",&t);\n    scanf(\"%d\\t%d\\t%d\\t%d\\t%d\",&a,&b,&c,&d,&e);\n    while(t--){\n        f=a/c;\n        x=f+1;\n        g=b/d;\n        y=g+1;\n        if(x+y<=e)\n        printf(\"%d\\t%d\",x,y);\n        else\n        printf(\"-1\");\n        return 0;\n    }\n}", "fixed": "#include <stdio.h>\nint t,a,b,c,d,k;\nint main() {\n    for (scanf(\"%d\",&t);t--;) {\n        int x = -1,y = -1;\n        scanf(\"%d%d%d%d%d\",&a,&b,&c,&d,&k);\n        for (int i = 0;i <= k;i++)\n            for (int j = 0;i+j <= k;j++)\n                if (c*i >= a && d*j >= b) {\n                    x = i,y = j;\n                    break;\n                }\n        if (x == -1) printf(\"-1\\n\");\n        else printf(\"%d %d\\n\",x,y);\n    }\n    return 0;\n}"}
{"similarity_score": 0.704248366013072, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "678604ebd0c86e0f07e01bfa4941398c", "bug_code_uid": "a501b43a39c572c51ad2ce2e8901e6e3", "src_uid": "ac7d117d58046872e9d665c9f99e5bff", "apr_id": "51f6dad48953c3fb331b203909f2644e", "difficulty": 800, "tags": ["brute force", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n\r\nint main(){\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while (t--){\r\nint n,i,j,c=0,k;\r\nscanf(\"%d\",&n);\r\nif(n<=pow(10,8)){\r\n    \r\n        \r\n        for(i=1;i<=9;i++){\r\n            j=0;\r\n            while(j<=n){\r\n\r\n        j=j*10+i;\r\n        c++;\r\n        }}\r\n    k=c-8;\r\n}else{\r\nif(n<=111111111){\r\n    k=73;\r\n}else if(n<=222222222)\r\nk=74;\r\nelse if(n<=333333333)\r\nk=75;\r\nelse if(n<=444444444)\r\nk=76;\r\nelse if(n<=555555555)\r\nk=77;\r\nelse if(n<=666666666)\r\nk=78;\r\nelse if(n<=777777777)\r\nk=79;\r\nelse if(n<=888888888)\r\nk=80;\r\nelse if(n<=999999999)\r\n k=81;\r\n    else \r\n    k=82;\r\n\r\n}printf(\"%d\\n\",k-1);\r\n  }\r\n}", "fixed": "#include<stdio.h>\r\n\r\n\r\nint main(){\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while (t--){\r\nint n,i,j,c=0,k;\r\nscanf(\"%d\",&n);\r\nif(n<=pow(10,8)){\r\n    \r\n        \r\n        for(i=1;i<=9;i++){\r\n            j=0;\r\n            while(j<=n){\r\n\r\n        j=j*10+i;\r\n        c++;\r\n        }}\r\n    k=c-8;\r\n}else{\r\nif(n<111111111){\r\n    k=73;\r\n}else if(n<222222222)\r\nk=74;\r\nelse if(n<333333333)\r\nk=75;\r\nelse if(n<444444444)\r\nk=76;\r\nelse if(n<555555555)\r\nk=77;\r\nelse if(n<666666666)\r\nk=78;\r\nelse if(n<777777777)\r\nk=79;\r\nelse if(n<888888888)\r\nk=80;\r\nelse if(n<999999999)\r\n k=81;\r\n    else \r\n    k=82;\r\n\r\n}printf(\"%d\\n\",k-1);\r\n  }\r\n}\r\n \r\n"}
{"similarity_score": 0.6466809421841542, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "a2ecd47021d0ea339471a6f8be5a172b", "bug_code_uid": "42b792e4b44aa1b5f334d999ce8eafcf", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "ba2c90238408ad984ae16c1fd6fdaee5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\tint t, n, counter_odd = 0;\n\tscanf(\"%d\\n\", &t);\n\t\n\tfor (int i = 0; i < t; i++) {\n\t\tscanf(\"%d\\n\", &n);\n\t\tint number;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d \", number);\n\t\t\tif (number%2==1) counter_odd++;\n\t\t}\n\t\tif (counter_odd%2==0) {\n\t\t\tprintf(\"NO\");\n\t\t} else {\n\t\t\tprintf(\"YES\");\n\t\t}\n\t}\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main() {\n\tint t, n, counter_odd = 0, flag = 0, number;\n\tscanf(\"%d\\n\", &t);\n\t\n\tfor (int i = 0; i < t; i++) {\n\t\tscanf(\"%d\\n\", &n);\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d \", &number);\n\t\t\tif (number%2==1) counter_odd++;\n\t\t\telse flag = 1; //at least one even number to turn into an odd one\n\t\t}\n\t\tif (counter_odd%2==1 || (flag == 1 && counter_odd > 0)) { //odd number of odd numbers or at least one odd and one even number\n\t\t\tprintf(\"YES\\n\");\n\t\t} else {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\tcounter_odd = 0;\n\t\tflag = 0;\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.8636042402826856, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "47f95ff99625f593581f19e493278d06", "bug_code_uid": "73974738dc9faa69a432aa620c3ff101", "src_uid": "b53c3e55834db8184d8caf4630aaa573", "apr_id": "c171c5398562d2d4eeee60fd13fa0d0b", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int lines_num,num,i;\n    scanf(\"%i %i\",&lines_num,&num);\n    int debts[num][3];\n    int debt_summation[num];\n    for(i=0;i<num;i++)\n          debt_summation[i]=0;\n\n    for(i=0;i<num;i++)\n        scanf(\"%i %i %i\",&debts[i][0],&debts[i][1],&debts[i][2]);\n    for(i=0;i<num;i++)\n    {\n            debt_summation[debts[i][0]-1]=debt_summation[debts[i][0]-1]+debts[i][2];\n            debt_summation[debts[i][1]-1]=debt_summation[debts[i][1]-1]-debts[i][2];\n    }\n     int sum=0;\n     for(i=0;i<num;i++)\n        if (debt_summation[i]>0)\n            sum=sum+debt_summation[i];\n     printf(\"%i\",sum);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int lines_num,num,i;\n    scanf(\"%i %i\",&num,&lines_num);\n\n    int debts[lines_num][3],debt_summation[num];\n    for(i=0;i<lines_num;i++)\n        scanf(\"%i %i %i\",&debts[i][0],&debts[i][1],&debts[i][2]);\n    for(i=0;i<num;i++)\n        debt_summation[i]=0;\n    for(i=0;i<lines_num;i++)\n    {\n            debt_summation[debts[i][0]-1]=debt_summation[debts[i][0]-1]+debts[i][2];\n            debt_summation[debts[i][1]-1]=debt_summation[debts[i][1]-1]-debts[i][2];\n    }\n     int sum=0;\n\n     for(i=0;i<num;i++)\n        if (debt_summation[i]>0)\n            sum=sum+debt_summation[i];\n\n     printf(\"%i\",sum);\n\n\n    return 0;\n}"}
{"similarity_score": 0.971709717097171, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "21412f7263978dacf638ddaeed236983", "bug_code_uid": "81c9d7ebf67813c5fb20186ba3488c74", "src_uid": "016e00b2b960be792d4ec7fcfb7976e2", "apr_id": "b7d987f83a08fd1c204694ab93a20bb8", "difficulty": 1300, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min_x,min_y,max_x,max_y;\nint main()\n{\n\tint ci,x,y;\n\tscanf(\"%d\",&ci);\n\tfor(int i=0;i<ci;i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(!i){\n\t\t\tmax_x=min_x=x;\n\t\t\tmax_y=min_y=y;\n\t\t}\n\t\telse{\n\t\t\tif(min_x>x)min_x=x; \n\t\t\tif(min_y>y)min_y=y;\n\t\t\tif(max_x<x)max_x=x;\n\t\t\tif(max_y<y)max_y=y;\n\t\t}\n\t}\n\tint mk=(max_x-min_x)>(max_y-min_y)?(max_x-min_x):(max_y-min_y);\n\tprintf(\"%d\\n\",mk*mk);\n\treturn 0;\n} \n", "fixed": "#include<stdio.h>\n__int64 min_x,min_y,max_x,max_y;\nint main()\n{\n\tint ci,x,y;\n\tscanf(\"%d\",&ci);\n\tfor(int i=0;i<ci;i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(!i){\n\t\t\tmax_x=min_x=x;\n\t\t\tmax_y=min_y=y;\n\t\t}\n\t\telse{\n\t\t\tif(min_x>x)min_x=x; \n\t\t\tif(min_y>y)min_y=y;\n\t\t\tif(max_x<x)max_x=x;\n\t\t\tif(max_y<y)max_y=y;\n\t\t}\n\t}\n\t__int64 mk=(max_x-min_x)>(max_y-min_y)?(max_x-min_x):(max_y-min_y);\n\tprintf(\"%I64d\\n\",mk*mk);\n\treturn 0;\n} \n"}
{"similarity_score": 0.9285714285714286, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "d280c8eb4c2947335100444a30e52340", "bug_code_uid": "a1be7dad47635ce867aacdf2ba274046", "src_uid": "f70ac2c4e0f62f9d6ad1e003aedd86b2", "apr_id": "e0e13fae9c34d2d849f253fe3f64c6ce", "difficulty": 1600, "tags": ["combinatorics", "probabilities", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tlong long m,n,i;\n\tfloat s=0;\n\tscanf(\"%I64d %I64d\",&m,&n);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\ts+=i*(pow(i*1.0/m,n)-pow((i-1)*1.0/m,n));\n\t\tprintf(\"%f\\n\",s);\n\t}\n\tprintf(\"%.12f\\n\",s);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tlong long m,n,i;\n\tfloat s=0;\n\tscanf(\"%I64d %I64d\",&m,&n);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\ts+=i*(pow(i*1.0/m,n)-pow((i-1)*1.0/m,n));\n\t}\n\tprintf(\"%.12f\\n\",s);\n}\n"}
{"similarity_score": 0.9988066825775657, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "224b4fdd9d2a26c8663b9e7ca631e05d", "bug_code_uid": "7d369faa14a09963c756ed67ccd78a21", "src_uid": "42b425305ccc28b0d081b4c417fe77a1", "apr_id": "5cabc18636f908aac9af1da92959913d", "difficulty": 1200, "tags": ["constructive algorithms", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define ll long long int\n#define  print(n) printf(\"%lld\",n)\n#define  prints(n) printf(\"%d\",n)\n#define  scans(n,k) scanf(\"%lld %lld\",&n,&k)\n#define  scan(n)  scanf(\"%lld\",&n)\n \n \n \n \nint main(void)\n{\n    ll t;\n      scan(t);\n      ll n;\n      char str[10005];\n      ll counto=0;\n      int play;\n \n      for(int i=0;i<t;i++)\n      {\n          scan(n);\n          counto=0;\n \n          scanf(\"%s\",str);\n \n           for(ll i=0;i<n;i++)\n           {\n               if(str[i]=='0')\n               counto++;\n           }\n\n\n\n           if(counto%2==0)\n           {\n               printf(\"BOB\\n\");\n           }\n           else{\n\n               if(counto=1)\n               {\n                    printf(\"BOB\\n\");\n\n               }\n               else\n               printf(\"ALICE\\n\");\n           }\n\n\n      }\n\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#define ll long long int\n#define  print(n) printf(\"%lld\",n)\n#define  prints(n) printf(\"%d\",n)\n#define  scans(n,k) scanf(\"%lld %lld\",&n,&k)\n#define  scan(n)  scanf(\"%lld\",&n)\n \n \n \n \nint main(void)\n{\n    ll t;\n      scan(t);\n      ll n;\n      char str[10005];\n      ll counto=0;\n      int play;\n \n      for(int i=0;i<t;i++)\n      {\n          scan(n);\n          counto=0;\n \n          scanf(\"%s\",str);\n \n           for(ll i=0;i<n;i++)\n           {\n               if(str[i]=='0')\n               counto++;\n           }\n\n\n\n           if(counto%2==0)\n           {\n               printf(\"BOB\\n\");\n           }\n           else{\n\n               if(counto==1)\n               {\n                    printf(\"BOB\\n\");\n               }\n               else\n               printf(\"ALICE\\n\");\n           }\n\n\n      }\n\n}"}
{"similarity_score": 0.7069486404833837, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "a87bbec427d6def0ea20cf9a229ad14c", "bug_code_uid": "1d27bd1fbffc4af158208b9367a7d5d8", "src_uid": "37e2bb1c7caeeae7f8a7c837a2b390c9", "apr_id": "69f6a0caa617f17e6f8fb48b4c012575", "difficulty": 1800, "tags": ["data structures", "dsu", "implementation", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N  210000\nstruct node {\n\tint x;\n\t__int64 count,vec;\n}pre[N];\nint n,flag;\nvoid find(int x) {\n\tif(x==n+1) {\n\t\tflag=1;\n\t\treturn ;\n\t}\n\tif(pre[x].count>=pre[x].vec)  {\n\t\tpre[x+1].count=pre[x+1].count+pre[x].count-pre[x].vec;\n         pre[x].count=pre[x].vec;\n\t\t find(x+1);\n\t}\n\treturn ;\n}\nint main() {\n\t__int64 m;\n\tint i,j,k;\n\twhile(scanf(\"%d\",&n)!=EOF) {\n\t\tfor(i=1;i<n;i++) {\n\t\t\tpre[i].x=i+1;\n\t\t\tpre[i].count=0;\n\t\t}\n\t\tpre[n].x=n;\n\t\tpre[n].count=0;\n\t\tfor(i=1;i<=n;i++) {\n\t\t\tscanf(\"%I64d\",&m);\n\t\t\tpre[i].vec=m;\n\t\t}\n\t\tscanf(\"%d\",&m);\n\t\tflag=0;\n\t\twhile(m--) {\n\t\t\tscanf(\"%d\",&k);\n\t\t\tif(k==1) {\n\t\t\t\tscanf(\"%d%d\",&i,&j);\n\t\t\t\tif(flag==0) {\n\t\t\t     pre[i].count+=j;\n\t\t\t\t find(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse  {\n\t\t\t\tscanf(\"%d\",&i);\n\t\t\t\tprintf(\"%I64d\\n\",pre[i].count);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#define N  210000\nstruct node {\n\tint x,next;\n\t__int64 count,vec;\n}pre[N];\nint n,flag;\nint find(int x) {\n\tif(x==n+1)\n\t\treturn n+1;\n\tif(pre[x].count>pre[x].vec)  {\n\t    int h=pre[x].next; \n\t\tpre[h].count=pre[h].count+pre[x].count-pre[x].vec;\n\t\tpre[x].count=pre[x].vec;\n\t\tpre[x].x=pre[x].next=find(pre[x].next);\n\t}\n\treturn pre[x].x;\n}\nint main() {\n\t__int64 m;\n\tint i,j,k;\n\twhile(scanf(\"%d\",&n)!=EOF) {\n\t\tfor(i=1;i<=n;i++) {\n\t\t\tpre[i].next=i+1;\n\t\t\tpre[i].count=0;\n\t\t\tpre[i].x=i;\n\t\t}\n\t\tpre[n].x=n;\n\t\tpre[n].count=0;\n\t\tfor(i=1;i<=n;i++) {\n\t\t\tscanf(\"%I64d\",&m);\n\t\t\tpre[i].vec=m;\n\t\t}\n\t\tscanf(\"%d\",&m);\n\t\tflag=0;\n\t\twhile(m--) {\n\t\t\tscanf(\"%d\",&k);\n\t\t\tif(k==1) {\n\t\t\t\tscanf(\"%d%d\",&i,&j);\n\t\t\t\tif(find(i)!=n+1) {\n\t\t\t     pre[i].count+=j;\n\t\t\t\t find(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse  {\n\t\t\t\tscanf(\"%d\",&i);\n\t\t\t\tprintf(\"%I64d\\n\",pre[i].count);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9954430379746836, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3a71caa634d69dc21a10bae941f4d3a5", "bug_code_uid": "d56cd1ef941d0996a43e7cd21e888930", "src_uid": "494ac937ba939db1dbc4081e518ab54c", "apr_id": "0290ab34a6a82b43f76677e53de547c7", "difficulty": 1400, "tags": ["data structures", "implementation", "*special"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint now = 0;\nchar path[101][200];\n\nvoid show(){\n     int i;\n     putchar('/');\n     for (i = 1 ; i <= now ; ++i)\n         printf(\"%s/\", path[i]);\n     puts(\"\");\n     return;\n}\n\nint main(){\n    int n, i, j;\n    char cmd[201];\n    scanf(\"%d%*c\", &n);\n    while (n--){\n          gets(cmd);\n          if (cmd[0] == 'p')\n             show();\n          else {\n               i = 3;\n               if (cmd[3] == '/')\n                  now = 0, i = 4;\n               if (!cmd[i])continue;\n               while (1){\n                   if (cmd[i] == '.')\n                      --now, i += 2;\n                   else {\n                        for (j = i ; cmd[j] && cmd[j] != '/' ; ++j);\n                        memcpy(path[++now], cmd + i, j - i);\n                        path[now][j - i] = 0;\n                        i = j;\n                   }\n                   if (!cmd[i])break;\n                   ++i;\n               }\n          }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint now = 0;\nchar path[5000][200];\n\nvoid show(){\n     int i;\n     putchar('/');\n     for (i = 1 ; i <= now ; ++i)\n         printf(\"%s/\", path[i]);\n     puts(\"\");\n     return;\n}\n\nint main(){\n    int n, i, j;\n    char cmd[205];\n    scanf(\"%d%*c\", &n);\n    while (n--){\n          gets(cmd);\n          if (cmd[0] == 'p')\n             show();\n          else {\n               i = 3;\n               if (cmd[3] == '/')\n                  now = 0, i = 4;\n               if (!cmd[i])continue;\n               while (1){\n                   if (cmd[i] == '.')\n                      --now, i += 2;\n                   else {\n                        for (j = i ; cmd[j] && cmd[j] != '/' ; ++j);\n                        memcpy(path[++now], cmd + i, j - i);\n                        path[now][j - i] = 0;\n                        i = j;\n                   }\n                   if (!cmd[i])break;\n                   ++i;\n               }\n          }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9807692307692307, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6e907c5f0c3f2a9ca01fbf4113f88789", "bug_code_uid": "217ca34303c45baf316e3efb5f05cb78", "src_uid": "fc831eda72f2ebe0865a3fb1b783edc5", "apr_id": "af04ecdd51ce7a21aa41734cb3ab0350", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    int T,p,sum=0;\n    char x[50];\n    scanf(\"%d%d\",&T,&n);\n    getchar();\n    for(i=0;i<T;i++)\n    {\n        p=0;\n        int a[15]={0};\n        scanf(\"%s\",x);\n        for(j=0;x[j]!=0;j++)\n        {\n            a[x[j]-'0']=1;\n        }\n        for(j=0;j<15;j++)\n        {\n            if((a[j]==0&&j<=n)||(j>n&&a[j]==1))\n                p=1;\n        }\n        if(!p)\n            sum++;\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    int T,p,sum=0;\n    char x[50];\n    scanf(\"%d%d\",&T,&n);\n    getchar();\n    for(i=0;i<T;i++)\n    {\n        p=0;\n        int a[15]={0};\n        scanf(\"%s\",x);\n        for(j=0;x[j]!=0;j++)\n        {\n            a[x[j]-'0']=1;\n        }\n        for(j=0;j<15;j++)\n        {\n            if(a[j]==0&&j<=n)\n                p=1;\n        }\n        if(!p)\n            sum++;\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}"}
{"similarity_score": 0.2935361216730038, "equal_cnt": 22, "replace_cnt": 14, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "9a638fb2d46cc0bb8afa87523c62f25f", "bug_code_uid": "8a380d459981abcd32be30768ee5d577", "src_uid": "d7fe15a027750c004e4f50175e1e20d2", "apr_id": "361e896cffd94056c8396b309686e1a0", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n\nint main(){\n\n\tchar comando[100];\n\tint qtdPessoas = 0, qtdBytes = 0, tamanhoMsg;\n\tint i, j;\n\tchar pessoas[100][100];\n\n\twhile(scanf(\" %[^\\n]\", comando) != EOF){\n\t\tif(comando[0] == '+' && qtdPessoas < 100){\n\t\t\tfor(i = 1; i < strlen(comando); ++i){\n\t\t\t\tpessoas[qtdPessoas][i-1] = comando[i];\n\t\t\t}\t\n\t\t\tqtdPessoas++;\n\t\t} else if(comando[0] == '-' && qtdPessoas > 0){\n\t\t\tfor(i = 0; i < qtdPessoas; ++i){\n\t\t\t\tif(strcmp(pessoas[i], comando+1) == 0){\n\t\t\t\t\tstrcpy(pessoas[i], \"\");\n\t\t\t\t\tfor(j = i; j < qtdPessoas-1; ++j){\n\t\t\t\t\t\tstrcpy(pessoas[i], pessoas[i+1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tqtdPessoas--;\n\t\t} else{\n\t\t\tfor(i = 0; comando[i] != ':'; ++i);\n\t\t\ttamanhoMsg = strlen(comando) - i - 1;\n\t\t\tqtdBytes += tamanhoMsg*qtdPessoas;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", qtdBytes);\n\n\treturn 0;\n}\n/* 1502378390276 */\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n\n\tchar status[100];\n\tint quant = 0, qntBytes = 0;\n\tint i = 0;\n\n\twhile(scanf(\"%[^\\n] \", status) != EOF){\n\t\tif(status[0] == '+'){\n\t\t\tquant++;\n\t\t}else if(status[0] == '-'){\n\t\t\tquant--;\n\t\t}else{\n\t\t\tfor(i = 0; status[i] != ':'; i++){\n\t\t\t}\n\n\t\t//printf(\"i = %d     \", i);\n\t\tqntBytes+= quant * (strlen(status) - i - 1);\n\t\t//printf(\"Qnt = %d\", strlen(status) - i);\n\t\t}\n\t}\n\tprintf(\"%d\", qntBytes);\n\n\treturn 0;\n}\n/* 1502378558923 */\n"}
{"similarity_score": 0.9975550122249389, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "abb7796a5971cef34eac58ccb82f11d4", "bug_code_uid": "fad63fac423be5fbdc46026285ef70b2", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "a286997125fab1cd3628ed2f7d949086", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int y,k,n,i,q,w;\n    scanf(\"%I64d%I64d%I64d\",&y,&k,&n);\n    q=n-y;\n    if(q<=0)\n    printf(\"-1\\n\");\n    else\n    {\n        q=k-y%k;\n        w=n-y;\n        if(q>k)\n        printf(\"-1\\n\");\n        else\n        {\n            printf(\"%I64d\",q);\n            for(i=q+k;i<=w;i=i+k)\n            printf(\" %I64d\",i);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int y,k,n,i,q,w;\n    scanf(\"%I64d%I64d%I64d\",&y,&k,&n);\n    q=n-y;\n    if(q<=0)\n    printf(\"-1\\n\");\n    else\n    {\n        q=k-y%k;\n        w=n-y;\n        if(q>w)\n        printf(\"-1\\n\");\n        else\n        {\n            printf(\"%I64d\",q);\n            for(i=q+k;i<=w;i=i+k)\n            printf(\" %I64d\",i);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.31480241125251174, "equal_cnt": 19, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "ea3f40155a80ef5030645022cb05fb33", "bug_code_uid": "24602e0d7d24925465f2a8b9beee9a91", "src_uid": "b100573dfd15cf99842996d91bf26f5f", "apr_id": "cd4394c276c68f52a69750f2bbf45a30", "difficulty": 1600, "tags": ["two pointers", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long t[2000][2000];\nint n,m,li;\nint a[2000],b[2000];\n\nint main(){\n\t\n\tscanf(\"%d %d\",&n,&m);\n\tint i;\n\tfor(i=0;i<n;i++)scanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++)scanf(\"%d\",&b[i]);\n\tscanf(\"%d\",&li);\n\tint j;\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<m;j++){\n\t\t\tt[i][j]=a[i]*b[j];\n\t\t\tif(i>0)t[i][j]+=t[i-1][j];\n\t\t\tif(j>0)t[i][j]+=t[i][j-1];\n\t\t\tif(i>0&&j>0)t[i][j]-=t[i-1][j-1];\n\t\t}\n\tint it,j2,res=0,c;\n\tlong long can;\n\tfor(j=0;j<m;j++){\n\t\tfor(j2=j;j2<m;j2++){\n\t\t\ti=it=0;\n\t\t\twhile(i<n){\n\t\t\t\tcan=t[it][j2];\n\t\t\t\tif(i>0)can-=t[i-1][j2];\n\t\t\t\tif(j>0)can-=t[it][j-1];\n\t\t\t\tif(j>0&&i>0)can+=t[i-1][j-1];\n\t\t\t\tif(can<=li){\n\t\t\t\t\tc=(j2-j+1)*(it-i+1);\n\t\t\t\t\tif(c>res)res=c;\n\t\t\t\t\tif(it==n-1)break;\n\t\t\t\t\telse it++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ti++;\n\t\t\t\t\tif(i>it)it=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",res);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nlong long t[2000][2000];\nint n,m,li;\nlong long a[2001],b[2001];\nlong long f[2001],s[2001];\n\nint main(){\n\t\n\tscanf(\"%d %d\",&n,&m);\n\tint i,j,res=0;\n\tmemset(f,0,sizeof(f));\n\tmemset(s,0,sizeof(s));\n\ta[0]=b[0]=0;\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\ta[i]+=a[i-1];\n\t\tfor(j=i;j;j--){\n\t\t\tif(f[i-j+1]==0||f[i-j+1]>a[i]-a[j-1]){\n\t\t\t\tf[i-j+1]=a[i]-a[j-1];\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d\",&b[i]);\n\t\tb[i]+=b[i-1];\n\t\tfor(j=i;j;j--){\n\t\t\tif(s[i-j+1]==0||s[i-j+1]>b[i]-b[j-1]){\n\t\t\t\ts[i-j+1]=b[i]-b[j-1];\n\t\t\t}\n\t\t}\n\t}\n\tscanf(\"%d\",&li);\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=m;j++){\n\t\t\tif(f[i]*s[j]<=li&&i*j>res)res=i*j;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",res);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9946091644204852, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d0e87f78b733702df7dc838a65923319", "bug_code_uid": "278958f9c95eb2f6568174bf995689db", "src_uid": "93fb13c40ab03700ef9a827796bd3d9d", "apr_id": "a55cf786c9468a00c125e215d4ea6cf5", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\r\n#include<stdio.h>\r\n#include<math.h>\r\nint T;\r\nint main()\r\n{\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--)\r\n\t{\r\n\t\tint n,a,b,sum=0;char s[100];\r\n\t\tscanf(\"%d%d%d\",&n,&a,&b);\r\n\t\tscanf(\"%s\",s);\r\n\t\tsum=n*a;\r\n\t\tif(b>=0)sum=sum+n*b;else\r\n\t\t{\r\n\t\t\tint x=1;\r\n\t\t\tfor(int i=1;i<n;i++)\r\n\t\t\t\tif(s[i]!=s[i-1])x++;\r\n\t\t\tsum=sum+(x-1)*b;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",sum);\r\n\t}\r\n\treturn 0; \r\n}", "fixed": "#include<string.h>\r\n#include<stdio.h>\r\n#include<math.h>\r\nint T;\r\nint main()\r\n{\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--)\r\n\t{\r\n\t\tint n,a,b,sum=0;char s[100];\r\n\t\tscanf(\"%d%d%d\",&n,&a,&b);\r\n\t\tscanf(\"%s\",s);\r\n\t\tsum=n*a;\r\n\t\tif(b>=0)sum=sum+n*b;else\r\n\t\t{\r\n\t\t\tint x=1;\r\n\t\t\tfor(int i=1;i<n;i++)\r\n\t\t\t\tif(s[i]!=s[i-1])x++;\r\n\t\t\tsum=sum+(x/2+1)*b;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",sum);\r\n\t}\r\n\treturn 0; \r\n}"}
{"similarity_score": 0.859880239520958, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "07de813b53beb896f7b22ee323876450", "bug_code_uid": "2249f29bf6c45a3dc48933981c853e71", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "0b3628c3a907102654d4638b58e9cea9", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <ctype.h>\n#include<math.h>\nint main()\n{\n\n    char a[100000];\n    int i,t,n,x=9898,z,b[100000],y=99999;\n    scanf(\"%d\",&n);\n    scanf(\"%s\",a);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        if(a[i]=='R'){x=b[i];}\n        if(a[i]=='L' && x!=9898 ){ z=(b[i]-x)/2; if(z<y){y=z; }}\n\n    }\n\n\n  if(y!=99999){printf(\"%d\",y);}\n  else printf(\"-1\");\n\n\n     return 0;\n\n}\n\n", "fixed": "#include<stdio.h>\n#include <ctype.h>\n#include<math.h>\nint main()\n{\n\n    char a[200000];\n    long long int x=9898,z,y=1000000000;\n    int i,n,t,b[200000];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",a);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        if(a[i]=='R'){x=b[i];}\n        if(a[i]=='L' && x!=9898 ){ z=(b[i]-x)/2; if(z<y){y=z; }}\n\n    }\n\n\n  if(y!=1000000000){printf(\"%lld\",y);}\n  else printf(\"-1\");\n\n\n     return 0;\n\n}\n\n"}
{"similarity_score": 0.4060638873849486, "equal_cnt": 26, "replace_cnt": 12, "delete_cnt": 5, "insert_cnt": 9, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "6ddb352edc178d261dfa5a65dea294d1", "bug_code_uid": "484f78574a749bf8ca7bf7d89c33fdc6", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "9351dccfe8a116daf52b3c734c4f77cc", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint t, i;\n\tscanf(\"%d\",&t);\n\n\tfor(i=0;i<t;i++)\n\t\t{\n\t\tint paint, buck[10]={0,0,0,0,0,0,0,0,0,0}, arr[10]={0,0,0,0,0,0,0,0,0,0};\n\t\tscanf(\"%d\",&paint);\n\n\t\tint n=paint,min=1000000;\n\t\tint j, k=0, max=0,pos=0;\n\n\t\tfor(j=1;j<10;j++)\n\t\t\t{\n\t\t\tscanf(\"%d\",&arr[j]);\n\t\t\tbuck[j]=n/arr[j];\n\t\t\tif(max<=buck[j]){max=buck[j];pos=j;}\n\t\t\tif(min>=arr[j])min=arr[j];\n\t\t\t}\n\t\tif(min>paint || max==0){printf(\"-1\\n\");break;}\n\t\tfor(j=0;j<max;j++,paint--,buck[pos]--)printf(\"%d\",pos);\n\t\tif(paint>0)\n\t\t\tfor(j=9;j>=0;j++)\t\n\t\t\t\twhile(buck[j]!=0)\n\t\t\t\t\t{\n\t\t\t\t\tif(paint<=0)break;\n\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"%d\",j);\n\t\t\t\t\t\tbuck[j]--;\n\t\t\t\t\t\tpaint--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\tprintf(\"\\n\");\n\t\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint t=1, i;\n\t//scanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t\t{\n\t\tint paint, buck[10], arr[10];\n\t\tscanf(\"%d\",&paint);\n\n\t\tint j, k, maxdigits=0,pos=0;\n\n\t\tfor(j=1;j<10;j++)\n\t\t\t{\n\t\t\tscanf(\"%d\",&arr[j]);\n\t\t\tbuck[j]=paint/arr[j];\n\t\t\tif(maxdigits<=buck[j]){maxdigits=buck[j];pos=j;}\n\t\t\t}\n\t\tif(maxdigits<=0){printf(\"-1\\n\");continue;}\n\n\t\telse if(paint%maxdigits==0) //if all the paint can be consumed by max digits\n\t\t\t\t{\n\t\t\t\tfor(j=0;j<maxdigits;j++)printf(\"%d\",pos);\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\tcontinue;\t\t\t\n\t\t\t\t}\n\n\t\telse \n\t\t\t{\n\t\t\tfor(j=9;j>=1;j--)\t\t// Selecting the elements from last\n\t\t\t\twhile(maxdigits!=0 && paint>=arr[j]) \n\t\t\t\t\t{\n\t\t\t\t\tpaint-=arr[j]; // Selecting j, thus we subtract weight of j from paint\n\t\t\t\t\tint newdigits=0; // to see if by selecting j, we can select maxdigits-1 other elements\n\t\t\t\t\t\n\t\t\t\t\tfor(k=1;k<10;k++){buck[k]=paint/arr[k];\n\t\t\t\t\t\t\tif(newdigits<buck[k])newdigits=buck[k];}\n\t\t\n\t\t\t\t\tif(newdigits==maxdigits-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\tmaxdigits--;\n\t\t\t\t\t\tprintf(\"%d\",j);\n\t\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t\t{\t\n\t\t\t\t\t\tpaint+=arr[j]; //Deselect j,thus add weight of j back\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9974811083123426, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "80b636bff64ce14af83d72af8efb86f3", "bug_code_uid": "94a4afe3d30ec8c48503819c942360c7", "src_uid": "206eb67987088843ef42923b0c3939d4", "apr_id": "debd93cc3728898f2989bbc949ded0a3", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int A,B,N,i,Flag;\n    scanf(\"%d %d %d\",&A,&B,&N);\n    for(Flag=0,i=0;i<10;++i)\n    {\n        if((A*10+i)%B==0)\n        {\n            Flag=1;\n            break;\n        }\n    }\n    if(!Flag)\n    {\n        printf(\"-1\");\n    }\n    else\n    {\n        printf(\"%d%d\",A,i);\n        for(i=1;i<N-1;++i)\n        {\n            printf(\"0\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int A,B,N,i,Flag;\n    scanf(\"%d %d %d\",&A,&B,&N);\n    for(Flag=0,i=0;i<10;++i)\n    {\n        if((A*10+i)%B==0)\n        {\n            Flag=1;\n            break;\n        }\n    }\n    if(!Flag)\n    {\n        printf(\"-1\");\n    }\n    else\n    {\n        printf(\"%d%d\",A,i);\n        for(i=1;i<N;++i)\n        {\n            printf(\"0\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9921259842519685, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7e2d7cc545b12583af1dd98bf2361225", "bug_code_uid": "16f981d6e170054755a39d1ed11cf034", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "bb909a6d572a1c17c47784a7668a2090", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define max(a,b)\t(a<b? b:a)\nlong long int a[100001]={0},n,i,c=0,d=0,t,x;\nint main(){\n\tscanf(\"%I64d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d\",&x);\n\t\ta[x]+=x;\n\t}\n\tfor(i=1;i<100001;i++){\n\t\tt=c;\n\t\tc=max(c,d+a[i]);\n\t}\n\tprintf(\"%I64d\",c);\n\t}", "fixed": "#include<stdio.h>\n#define max(a,b)\t(a<b? b:a)\nlong long int a[100001]={0},n,i,c=0,d=0,t,x;\nint main(){\n\tscanf(\"%I64d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d\",&x);\n\t\ta[x]+=x;\n\t}\n\tfor(i=1;i<100001;i++){\n\t\tt=c;\n\t\tc=max(c,d+a[i]),d=t;\n\t}\n\tprintf(\"%I64d\",c);\n\t}"}
{"similarity_score": 0.9096901779828609, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e555fda4c809ebf0e4fb5779b382777b", "bug_code_uid": "5e0a9ef436ea714e9bf21074dfa8924e", "src_uid": "bf0422de4347a308d68a52421fbad0f3", "apr_id": "cc902109cdd0536ea39083d5b52304d3", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint taken[3050] = {0};\n\nint main()\n{\n    int n , m , i , j = 0 , k = 0;\n    scanf(\"%d%d\" , &n , &m);\n    int A[n + 5] , B[m + 5];\n    for(i = 0;i < n;i++)\n        scanf(\"%d\" , &A[i]);\n\n    for(i = 0;i < m;i++)\n        scanf(\"%d\" , &B[i]);\n\n    i = 0;\n    while(i < n)\n    {\n        //printf(\"%d\");\n        if(A[i] > B[j])\n        {\n            while(j < m)\n            {\n                if(B[j] >= A[i])\n                {\n                    j++;i++;\n                    break;\n                }\n                j++;\n            }\n        }\n        else\n        {\n            j++;i++;\n            continue;\n        }\n\n        if(j >= m)\n            break;\n\n        i++;\n    }\n    for(i;i < n;i++)\n        k++;\n\n    printf(\"%d\" , k);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n , m , i , j = 0 , k = 0;\n    scanf(\"%d%d\" , &n , &m);\n    int A[n + 5] , B[m + 5];\n    for(i = 0;i < n;i++)\n        scanf(\"%d\" , &A[i]);\n\n    for(i = 0;i < m;i++)\n        scanf(\"%d\" , &B[i]);\n\n    i = 0;\n    while(i < n)\n    {\n\n        if(j >= m)\n            break;\n\n        if(A[i] > B[j])\n        {\n            while(j < m)\n            {\n                if(B[j] >= A[i])\n                {\n                    j++;i++;\n                    break;\n                }\n                j++;\n            }\n        }\n        else\n        {\n            j++;i++;\n            continue;\n        }\n    }\n    for(i;i < n;i++)\n        k++;\n\n    printf(\"%d\" , k);\n    return 0;\n}\n"}
{"similarity_score": 0.34850455136540964, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "d7e83d014a8b52e9d143119ad6191543", "bug_code_uid": "62bb65d48718f2c2946e9da8bbfae3aa", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "508fcd4bccd8a51e4bddc79718606ead", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,l=9999999,w,j,z,y,p;\n    scanf(\"%d %d\",&n,&k);\n    int h[n];\n    for(i=0;i<n;i++) scanf(\"%d\",&h[i]);\n    for(i=0;i<=(n-k);i++){\n        z=0;\n        w=0;\n        for(j=i;z<k;j++){\n            if(z==0) y=j+1;\n            w=w+h[j];\n            z++;\n        }\n        if(w<l) {\n            p=y;\n            l=w;}\n    }\n    printf(\"%d\",p);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,l=0,i,z;\n    long long int p,r=98765436545;\n    scanf(\"%d %d\",&n,&k);\n    long long int h[n+1];\n    h[0]=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%I64d\",&h[i]);\n        h[i]=h[i]+h[i-1];\n    }\n    for(i=1;i<=(n-k+1);i++){\n        p=h[i+k-1]-h[i-1];\n        if(p<r){\n            r=p;\n            z=i;\n        }\n    }\n    printf(\"%d\",z);\n}\n"}
{"similarity_score": 0.8943396226415095, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "6106d91e456b9be6317e766f112b43dc", "bug_code_uid": "74127d8b256cd0e0891611476dd92da7", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "97537c3b8509f149221020b0670dbd2d", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef int lint;\nvoid merge(lint l, lint mid1, lint mid2, lint r, lint a[]);\n\nvoid mergesort(lint a[], lint l, lint r) // left and right ends of array\n{\n\tif(l>=r)\n\t\treturn;\n\n\tlint mid = l+ (r-l)/2;\n\tmergesort(a,l,mid);\n\tmergesort(a, mid+1, r);\n\tmerge(l, mid, mid+1, r, a);\n}\nvoid merge(lint l, lint mid1, lint mid2, lint r, lint a[])\n{\n\tlint i=l, j=mid2, k=0 ,c[100]={0};\n\n\twhile(i<=mid1 && j<=r)\n\t{\n\t\tif(a[i]<a[j])\n\t\t\tc[k++]=a[i++];\n\t\telse\n\t\t\tc[k++]=a[j++];\n\t}\n\n\twhile(i<=mid1)\n\t\tc[k++]=a[i++];\n\twhile(j<=r)\n\t\tc[k++]=a[j++];\n         \n\tk=0;\n\tfor(i=l; i<=mid1; i++)\n\t\ta[i]=c[k++];\n\tfor(i=mid2; i<=r; i++)\n\t\ta[i]=c[k++];\n}\nint main()\n{\n\tlint a[100], i, N, L;\n\tscanf(\"%d\", &N);\n\tscanf(\"%d\", &L);\n\tfor(i=0; i<N; i++)\n\t\tscanf(\"%d\", &a[i]);\n\n\tmergesort(a, 0, N-1);\n\tlint max=0;\n         double d;\n\tif(a[0]!=0)\n\t{ \n\t\tmax=a[0];\n\t\td=(double)max;\n \t}\n\telse\n\t{\n\n         \tfor(i=0; i<N-1; i++)\n\t\tif(a[i+1]-a[i]>max)\n\t\t\tmax=a[i+1]-a[i]; \n                // ptr:\n                d=(double)max/2;\n\t}\n\n\t\tprintf(\"%.10lf\\n\",d);\n\n\n\treturn 0;\n}\n\n\n\n\n\n", "fixed": "#include<stdio.h>\ntypedef int lint;\nvoid merge(lint l, lint mid1, lint mid2, lint r, lint a[]);\n\nvoid mergesort(lint a[], lint l, lint r) // left and right ends of array\n{\n\tif(l>=r)\n\t\treturn;\n\n\tlint mid = l+ (r-l)/2;\n\tmergesort(a,l,mid);\n\tmergesort(a, mid+1, r);\n\tmerge(l, mid, mid+1, r, a);\n}\nvoid merge(lint l, lint mid1, lint mid2, lint r, lint a[])\n{\n\tlint i=l, j=mid2, k=0 ,c[100000]={0};\n\n\twhile(i<=mid1 && j<=r)\n\t{\n\t\tif(a[i]<a[j])\n\t\t\tc[k++]=a[i++];\n\t\telse\n\t\t\tc[k++]=a[j++];\n\t}\n\n\twhile(i<=mid1)\n\t\tc[k++]=a[i++];\n\twhile(j<=r)\n\t\tc[k++]=a[j++];\n         \n\tk=0;\n\tfor(i=l; i<=mid1; i++)\n\t\ta[i]=c[k++];\n\tfor(i=mid2; i<=r; i++)\n\t\ta[i]=c[k++];\n}\nint main()\n{\n\tlint a[1000000], i, N, L;\n\tscanf(\"%d\", &N);\n\tscanf(\"%d\", &L);\n\tfor(i=0; i<N; i++)\n\t\tscanf(\"%d\", &a[i]);\n\n\tmergesort(a, 0, N-1);\n\tlint max=0;\n         double d;\n\t\n         \tfor(i=0; i<N-1; i++)\n\t\tif(a[i+1]-a[i]>max)\n\t\t\tmax=a[i+1]-a[i];\n\t\t\n\t\td=(double)max/2;\n\t\tif(L-a[N-1]>d)\n\t\t\td=(double)(L-a[N-1]);\n\n\t        if(a[0]>d)\n\t            d=(double)(a[0]);\t       \n\t       \n\t\tprintf(\"%.10lf\\n\",d);\n\n\n\treturn 0;\n}\n\n\n\n\n\n"}
{"similarity_score": 0.9062226117440841, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9b62f59c2b777780db3947265cb82518", "bug_code_uid": "792cf12e7c0fb60eb44bb58acf5fdec4", "src_uid": "1cfd0e6504bba7db9ec79e2f243b99b4", "apr_id": "1f3525d05a8037bf9f2e997e7ecca657", "difficulty": 1200, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nlong cnt[100005], result[100005], map[100005];\n\nint main()\n{\n    long n, i, x, j = 0;\n    scanf(\"%ld\", &n);\n    for (i = 0; i < n; i++){\n        scanf(\"%ld\", &x);\n        if (x <= n){\n            if (cnt[x]++) {\n                map[j++] = i;\n            }else result[i] = x;\n        }else map[j++] = i;\n    }\n    j = 0;\n    for (i = 1; i <= n; i++){\n        if (!cnt[i]) result[map[j++]] = i;\n        if (i-1) printf(\" %ld\", result[i-1]);\n        else printf(\"%ld\", result[i-1]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nlong cnt[100005], result[100005], map[100005];\n\nint main()\n{\n    long n, i, x, j = 0;\n    scanf(\"%ld\", &n);\n    for (i = 0; i < n; i++){\n        scanf(\"%ld\", &x);\n        if (x <= n){\n            if (cnt[x]++) {\n                map[j++] = i;\n            }else result[i] = x;\n        }else map[j++] = i;\n    }\n    j = 0;\n    for (i = 1; i <= n; i++) if (!cnt[i]) result[map[j++]] = i;\n    for (i = 1; i <= n; i++){\n        if (i-1) printf(\" %ld\", result[i-1]);\n        else printf(\"%ld\", result[i-1]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.2676470588235294, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "aeb6de2cc630ed4cd412fae287cb7d6e", "bug_code_uid": "07d6d4c0d64f33389a760409fde7ece4", "src_uid": "2b77aa85a192086316a7f87ce140112d", "apr_id": "fbafbc4c54f5045af956d5b660fa9706", "difficulty": 1600, "tags": ["constructive algorithms", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n\nbool seen(int k) {\n  static int ns[1280] = { 0 } ;\n  static int sz=0;\n  int i;\n\n  for ( i=0; i < sz; ++i )\n    if ( ns[i] == k )\n      return true;\n  ns[i] = k;\n  sz += 1;\n  return false;\n}\n\nint main() {\n  int i,j,n,m,k,as[50],sums[50][50];\n\n  scanf(\"%d %d\", &n, &k);\n  for ( i=0; i < n; ++i )\n    scanf(\"%d\", as+i);\n  for ( i=0; i < n; ++i )\n    sums[i][i] = 0;\n  for ( i=0; i < n; ++i )\n    for ( j=i; j < n; ++j )\n      sums[i][j] = sums[i][j>i?j-1:j] + as[j];\n  for ( i=0; i < n; ++i )\n    for ( j=i; j < n; ++j )\n      if ( !seen(sums[i][j]) ) {\n        printf(\"%d \", j-i+1);\n\tfor ( m=i; m <=j; ++m )\n\t  printf(\"%d \", as[m]);\n\tprintf(\"\\n\");\n\tif ( --k == 0 )\n\t  goto done;\n      }\n  done:\n  return EXIT_SUCCESS;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n\n#define MAX_N (50)\n\nint ss[MAX_N];\n\nint cmp(const void * arg1, const void * arg2) {\n  return *(int *)arg1 - *(int *)arg2;\n}\n\nint main() {\n  int i,j,n,k,l,ctr=0;\n\n  scanf(\"%d %d\", &n, &k);\n  for ( i=0; i < n; ++i )\n    scanf(\"%d\", ss+i);\n  qsort(ss, n, sizeof(*ss), cmp);\n  for ( i=0; i < n; ++i ) {\n    for ( j=0; j < n-i && ctr < k; ++j,++ctr ) {\n      printf(\"%d\", i+1);\n      for ( l=0; l < i; ++l )\n        printf(\" %d\", ss[n-l-1]);\n      printf(\" %d\", ss[j]);\n      printf(\"\\n\");\n    }\n  }\n  return EXIT_SUCCESS;\n}\n"}
{"similarity_score": 0.9135802469135802, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e8562b84fb790465c638d2d15eac877c", "bug_code_uid": "d1ef6b0dda5f8cc93a114044c46533fb", "src_uid": "d6423f380e6ba711d175d91e73f97b47", "apr_id": "e1f1fa6de02a19b3a4481187b3a6d85d", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<stdbool.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar a[260];\n\tscanf(\"%s\",a);\n\tint bucket[4]={0},q=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='A') bucket[0]++;\n\t\tif(a[i]=='C') bucket[1]++;\n\t\tif(a[i]=='G') bucket[2]++;\n\t\tif(a[i]=='T') bucket[3]++;\n\t\tif(a[i]=='?') q++;\n\t}\n\tif(n%4!=0 || bucket[0]>n/4 || bucket[1]>n/4 || bucket[2]>n/4 || bucket[3]>n/4 )\n\t{\n\t\tprintf(\"===\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='?')\n\t\t{\n\t\t\tif(n/4>bucket[0])\n\t\t\t{\n\t\t\t\ta[i]='A';\n\t\t\t\tbucket[0]++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(n/4>bucket[1])\n\t\t\t{\n\t\t\t\ta[i]='G';\n\t\t\t\tbucket[1]++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(n/4>bucket[2])\n\t\t\t{\n\t\t\t\ta[i]='C';\n\t\t\t\tbucket[2]++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(n/4>bucket[3])\n\t\t\t{\n\t\t\t\ta[i]='T';\n\t\t\t\tbucket[3]++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%s\",a);\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<stdbool.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar a[260];\n\tscanf(\"%s\",a);\n\tint bucket[4]={0},q=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='A') bucket[0]++;\n\t\tif(a[i]=='C') bucket[1]++;\n\t\tif(a[i]=='G') bucket[2]++;\n\t\tif(a[i]=='T') bucket[3]++;\n\t\tif(a[i]=='?') q++;\n\t}\n\tif(n%4!=0 || bucket[0]>n/4 || bucket[1]>n/4 || bucket[2]>n/4 || bucket[3]>n/4 )\n\t{\n\t\tprintf(\"===\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='?')\n\t\t{\n\t\t\tif(n/4>bucket[0])\n\t\t\t{\n\t\t\t\ta[i]='A';\n\t\t\t\tbucket[0]++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(n/4>bucket[1])\n\t\t\t{\n\t\t\t\ta[i]='C';\n\t\t\t\tbucket[1]++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(n/4>bucket[2])\n\t\t\t{\n\t\t\t\ta[i]='G';\n\t\t\t\tbucket[2]++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(n/4>bucket[3])\n\t\t\t{\n\t\t\t\ta[i]='T';\n\t\t\t\tbucket[3]++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%s\",a);\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.3850036049026676, "equal_cnt": 20, "replace_cnt": 14, "delete_cnt": 6, "insert_cnt": 0, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "f9a08d8781f9b0e331fdeb20118cf8e8", "bug_code_uid": "e8dd942b9aad7179cf96adb1f57d9234", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "185c32fa1c52697b0c78733313d069bf", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint competencia [1000];\nint main (){\n        int n, i, mayor, menor, cont=-1;\n        do{\n            scanf(\"%d\", &n);\n        }while (n<1 || n>1000);\n        for (i=0; i<n; i++){\n            do{\n                scanf(\"%d\", &competencia[i]);\n            }while (competencia[i]<0 || competencia[i]>10000);\n        }\n        mayor= competencia[1];\n        menor=competencia [1];\n\n        for (i=0; i<=n; i++){\n            if (competencia [i]>mayor){\n                cont++;\n                mayor = competencia[i];\n            }else if(competencia[i]<menor){\n                cont ++;\n                menor =competencia [i];\n            }\n        }\n        printf(\"%d\", cont);\n        return 0;\n}\n\u00a9 2014 Microsoft T\u00e9rminos Privacidad y cookies Desarrolladores Espa\u00f1ol\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,a,i,mayor,c=0,c1=0,menor;\n    do{\n        scanf(\"%d\",&n);\n    }while(n<1 || n>1000);\n    int competencia[n];\n    for(i=0;i<n;i++){\n        do{\n            scanf(\"%d\",&a);\n        }while(a<0 || a>10000);\n        competencia[i]=a;\n    }\n    mayor=competencia[0];\n    menor=competencia[0];\n    for(i=1;i<n;i++){\n        if(competencia[i]>mayor){\n            c++;\n            mayor=competencia[i];\n        }\n        if(competencia[i]<menor){\n            c1++;\n            menor=competencia[i];\n        }\n    }\n    printf(\"%d\",c+c1);\n    return 0;\n}"}
{"similarity_score": 0.1793103448275862, "equal_cnt": 17, "replace_cnt": 14, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "6552fd8f88533bb5af4f48301f8b4194", "bug_code_uid": "0fe2439b156769c5f841f4f8045eca01", "src_uid": "7a48218582b90f735a09083df9e15b96", "apr_id": "108dfc109752889d4e825eda19780eac", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        unsigned long long int a,k;\n        scanf(\"%llu %llu\",&a,&k);\n        for(int i=1; i<k; i++)\n        {\n            int min=a%10;\n            int max=a%10;\n            unsigned long long int b=a;\n            while(b!=0)\n            {\n                int x=b%10;\n                b=b/10;\n                if(x<min)\n                min=x;\n                if(x>max)\n                max=x;\n            }\n            a=a+min*max;\n        }\n        printf(\"%llu\\n\",a);\n    }\n}", "fixed": "#include<stdio.h>\nlong long int getAdd(long long int x) {\n\tlong long int m1 = 10, m2 = 0;\n\twhile(x > 0) {\n\t\tlong long int y = x % 10;\n\t\tx /= 10;\n\t\tif(y<m1)\n\t\tm1=y;\n\t\tif(y>m2)\n\t\tm2=y;\n\t}\n\treturn m1*m2;\n}\n \nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) \n\t{\n\t\tlong long int x, k;\n\t\tscanf(\"%lld%lld\", &x, &k);\n\t\tk--;\n\t\twhile(k--) \n\t\t{\n\t\t\tlong long int y = getAdd(x);\n\t\t\tif (y == 0) break;\n\t\t\tx += y;\n\t\t}\n\t\tprintf(\"%lld\\n\", x);\n\t}\n \n\treturn 0;\n}"}
{"similarity_score": 0.3607532210109019, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "768734722f111d4d3773ff1fe4998de7", "bug_code_uid": "90b23eda6f02ebf60f808b0373610894", "src_uid": "8bbec86e427e26158393bbfbf1a067fe", "apr_id": "8fd40182c2df895f57f7fb643dd4e1be", "difficulty": 1100, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void){\n    long long int a,b,t,min=0,max=0,c=0,i;\n    scanf(\"%lld\", &t);\n\n    for(i=0;i<t;i++){\n\n        scanf(\"%lld %lld\", &a, &b);\n        c=0;\n        if(a==b){\n            if(a%2==0){\n                printf(\"%lld\\n\", a/2);\n                continue;}\n            else{\n                printf(\"%lld\\n\", (a+1)/2);\n                continue;}}\n        else{\n        if(a<b){\n            min=a;\n            max=b;}\n        else{\n            min=b;\n            max=a;}\n\n\n\n\n            while((min*2)>max){\n                min=min-2;\n                max--;\n                c++;}\n\n            printf(\"%lld\\n\", min+c);}}}\n", "fixed": "#include<stdio.h>\n\nint main(void){\n    long long int a,b,t,i;\n    scanf(\"%lld\", &t);\n\n    for(i=0;i<t;i++){\n\n        scanf(\"%lld %lld\", &a, &b);\n\n        if(a==0 || b==0)\n\n            printf(\"0\\n\");\n\n        else if(a>2*b)\n            printf(\"%lld\\n\", b);\n        else if(b>2*a)\n            printf(\"%lld\\n\", a);\n        else\n            printf(\"%lld\\n\", (a+b)/3);}}\n"}
{"similarity_score": 0.44061302681992337, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "3314503c7691854ac7e4ba5cdbdfa654", "bug_code_uid": "309647d4b7c66521c140e6b75f6ab024", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "12054096715ee99da6733aa0790fc452", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n   int a,n,m,i;\n   scanf(\"%d\",&a);\n   for(i=0;i<a;i++){\n    scanf(\"%d %d\",&n,&m);\n    if(n==1)printf(\"0\");\n    if(n==2)printf(\"%d\",m);\n    if(n>2)printf(\"%d\",m*2);\n   }\n}", "fixed": "    #include<stdio.h>\n    int main()\n    {\n    \tlong long int t,n,m,i;\n    \tscanf(\"%lld\",&t);\n    \tfor(i=0;i<t;i++)\n    \t{\n    \t\tscanf(\"%lld%lld\",&n,&m);\n    \t\tif(n==2)\n    \t\t{\n    \t\t\tprintf(\"%lld\\n\",m);\n    \t\t}\n    \t\telse if(n==1)\n    \t\t\tprintf(\"0\\n\");\n    \t\telse\n    \t\t{\n    \t\t\tprintf(\"%lld\\n\",2*m);\n    \t\t}\n    \t}\n    }\n\n"}
{"similarity_score": 0.8427350427350427, "equal_cnt": 20, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 16, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "197a5258d3234d6bd6192d18bd3b245b", "bug_code_uid": "2ff202ecd529ad315c67bbaa32329ceb", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "81b165c238ed5f4bd4213a0831f1eff9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,j,min=10000;\nint m,x,y,a[109];\nscanf(\"%d\",&t);\nfor(i=1;i<=t;i++)\n{\n    scanf(\"%d\",&a[i]);\n}\nfor(j=1;j<=t;j++)\n{\n    if(a[j]>a[j+1]) m=a[j]-a[j+1];\n    else m=a[j+1]-a[j];\n    if(m<min){\n        min=m;\n        x=j;\n        y=j+1;\n    }\n    if(a[1]>a[t]&&(a[1]-a[t])<=min)\n    {\n        printf(\"1 \");\n        printf(\"%d\",t);\n        return 0;\n    }\n    else if(a[1]<=a[t]&&(a[t]-a[1])<=min)\n    {\n        printf(\"1 \");\n        printf(\"%d\",t);\n        return 0;\n    }\n}\nprintf(\"%d% d\",x,y);\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,j,min=10000;\n    int m,x,y,a[109];\n    scanf(\"%d\",&t);\n    for(i=1; i<=t; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(j=1; j<=t; j++)\n    {\n        if(a[j]>a[j+1]) m=a[j]-a[j+1];\n        else m=a[j+1]-a[j];\n        if(m<min)\n        {\n            min=m;\n            x=j;\n            y=j+1;\n        }\n    }\n\n    if(a[1]>a[t]&&(a[1]-a[t])<=min)\n    {\n        printf(\"1 \");\n        printf(\"%d\",t);\n        return 0;\n    }\n    else if(a[1]<=a[t]&&(a[t]-a[1])<=min)\n    {\n        printf(\"1 \");\n        printf(\"%d\",t);\n        return 0;\n    }\nelse\nprintf(\"%d% d\",x,y);\nreturn 0;\n}\n"}
{"similarity_score": 0.95260663507109, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f43699366b316f3f3e5c75646c95827f", "bug_code_uid": "d589c36c6728d21435482836ef6939bf", "src_uid": "23ef311011b381d0ca2e84bc861f0a31", "apr_id": "b34388093fe750003855c47399bc440b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  while (t--) {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int t[200] = {}, temp;\r\n    for (int i = 0; i < n; i++) {\r\n      scanf(\"%d\", &temp);\r\n      if (t[abs(temp)] < 2) t[abs(temp)]++;\r\n    }\r\n    int ans = 0;\r\n    for (int i = 0; i < 200; i++)\r\n      ans += t[i];\r\n    printf(\"%d\\n\", ans);\r\n  }\r\n\r\n  return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  while (t--) {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int t[200] = {}, temp;\r\n    for (int i = 0; i < n; i++) {\r\n      scanf(\"%d\", &temp);\r\n      if (t[abs(temp)] < 2) t[abs(temp)]++;\r\n    }\r\n    int ans = 0;\r\n    for (int i = 0; i < 200; i++)\r\n      if (i == 0 && t[i]) ans++; \r\n      else ans += t[i];\r\n    printf(\"%d\\n\", ans);\r\n  }\r\n\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.29380053908355797, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5c45b2c07aaad246a5a8108e91fbc0be", "bug_code_uid": "d32cf3e52e7c0247f3531aebcf640ca6", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "b70e3a05e4357afbdbcf1acf5704e8b9", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tchar a[n+1];\n\tgets(a);\n\tint dema=0,demb=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(a[i]=='a')\n\t\tdema++;\n\t\telse\n\t\tdemb++;\n\t}\n\tif(dema==demb)\n\tprintf(\"0\\n\");\n\telse if(dema>demb){\n\tfor(int i=0;i<n;i++){\n\tif(a[i]!='a'&&(dema-n/2)>0){\n\ta[i]='b';\n\t(dema-n/2)--;\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\tfor(int i=0;i<n;i++){\n\tif(a[i]!='b'&&(demb-n/2)>0){\n\ta[i]='a';\n\t(demb-n/2)--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%s\",a);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tchar a[n+1];\n\tgets(a);\n\tint dem=0;\n\tfor(int i=0;i<n;i+=2){\n\t\tif(a[i]==a[i+1]&&a[i]=='a'){\n\t\ta[i]='b';\n\t\tdem++;\n\t\t\t}\n\t\telse if(a[i]==a[i+1]&&a[i]=='b'){\n\t\ta[i]='a';\n\t\tdem++;\n\t\t}\n\t}\n\tprintf(\"%d\\n%s\",dem,a);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9791666666666666, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e190422cc5a5b2d17343a4961956b58e", "bug_code_uid": "c9e07ba2a7377699641584160ffe4ddd", "src_uid": "1bcf130890495bcca67b4b0418476119", "apr_id": "40b44b539d4e6fe2d84abe920816a7d6", "difficulty": 1700, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    // your code goes here\n    long long int a, b;\n    scanf(\"%d%d\", &a, &b);\n    if(a<b){\n        printf(\"-1\");\n    }\n    else{\n        printf(\"%.12f\", (float)(a+b)/(2*((a+b)/(2*b))));\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n    // your code goes here\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    if(a<b){\n        printf(\"-1\");\n    }\n    else{\n        printf(\"%.12f\", (float)(a+b)/(2*((a+b)/(2*b))));\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9879356568364611, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5964c9dcd021efcda44480949274fe51", "bug_code_uid": "e6633bbd8f1319ae998b0b55ed93448b", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "81fa925b065322fae1cb92c531b7315d", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\n//  main.c\n//  code forces\n//\n//  Created by Irfan Naufal Ardila on 11/15/17.\n//  Copyright \u00a9 2017 Irfan Naufal Ardila. All rights reserved.\n//\n\n\n\n\n#include <stdio.h>\nint main (){\nint a,B[1000],i,j,z;\n    scanf (\"%d\",&a);\n    for (i=0;i<a;i++){\n        scanf (\"%d\",&B[i]);\n    }\n    if (a<=1){\n        printf (\"NO\");\n        return 0;}\n    else {\n    for (i=0;i<a;i++){\n        for (j=i;j<a;j++){\n            if (B[i]>B[j]){\n                z=B[i];\n                B[i]=B[j];\n                B[j]=z;\n            }\n        }\n    }\n    for (i=0;i<a;i++){\n        for (j=i;j<a;j++){\n            if (B[i]!=B[j]){\n                printf (\"%d\",B[j]);\n                return 0;\n            }\n        }\n    }}\n        return 0;\n    }\n    \n\n\\\n", "fixed": "//\n//  main.c\n//  code forces\n//\n//  Created by Irfan Naufal Ardila on 11/15/17.\n//  Copyright \u00a9 2017 Irfan Naufal Ardila. All rights reserved.\n//\n\n\n\n\n#include <stdio.h>\nint main (){\nint a,B[1000],i,j,z;\n    scanf (\"%d\",&a);\n    for (i=0;i<a;i++){\n        scanf (\"%d\",&B[i]);\n    }\n    if (a<=1){\n        printf (\"NO\");\n        return 0;}\n    else {\n    for (i=0;i<a;i++){\n        for (j=i;j<a;j++){\n            if (B[i]>B[j]){\n                z=B[i];\n                B[i]=B[j];\n                B[j]=z;\n            }\n        }\n    }\n    for (i=0;i<a;i++){\n        for (j=i;j<a;j++){\n            if (B[i]!=B[j]){\n                printf (\"%d\",B[j]);\n                return 0;\n            }\n        }\n    }}\n    printf(\"NO\");\n        return 0;\n    }\n    \n\n\\\n"}
{"similarity_score": 0.35121951219512193, "equal_cnt": 23, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 7, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "318ccf0999b026e32c266a822fb5841c", "bug_code_uid": "7ecfa85f60dfc383b3baaa98137e29cd", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "db6e1a2f7b747472d873566d6fba007f", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main()\n{\nint p,x,y,testsayisi,i;\nint dizi[1000];\nscanf(\"%d\",&testsayisi);\nif(testsayisi<1 || testsayisi>1000)\n    return 0;\nfor(i=1;i<testsayisi+1;i++){\nscanf(\"%d\",&p);\nif(p<5 || p>1000000000)\nreturn 0;\ndizi[i]=p;\n}\nfor(i=1;i<testsayisi+1;i++){\nfor(x=2;x<dizi[i]+1;x++){\nfor(y=x+1;y<dizi[i]+1;y++){\nif(dizi[i]%x==dizi[i]%y){\nprintf(\"%d %d\\n\",x,y);\nbreak;\n}\n  }\n  if(dizi[i]%x==dizi[i]%y)\nbreak;\n  }\n}\n\n\n    return 0;\n}\n\n\t\t\t\t\t  \t \t     \t \t\t \t        \t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,n;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tprintf(\"2 %d\\n\",n-1);\n\t}\n\treturn 0;\n} \n \t\t\t    \t\t\t\t\t \t\t   \t \t \t \t\t\t \t\t"}
{"similarity_score": 0.6527141922825376, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e6b7ee7a9b328510e61ab1037f497738", "bug_code_uid": "34e29fd0788f3eb726417ace75174478", "src_uid": "6fbf41dc32d1c28351d78a9ec5fc0026", "apr_id": "06d97b75a76af0d9d89a0a3074c7cb0f", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(void)\r\n{\r\n\tint t,n,k,c;\r\n\tint i,l,j,m,f;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\tf=1;\r\n\t\tscanf(\"%d %d\",&n,&k);\r\n\t\tgetchar();\r\n\t\tchar a[n+1],b[n+1],d[n+1];\r\n\t\tgets(a);\r\n\t\tl=strlen(a);\r\n\t\tif(k==0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");continue;\r\n\t\t}\r\n\t\telse if((l+1)/2<k+1)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");continue;\r\n\t\t}\r\n\t\telse if((l+1)/2>=k+1)\r\n\t\t{\t\r\n\t\t\tif(n%2!=0)\r\n\t\t\t{\r\n\t\t\t\tfor(j=0;j<l/2;j++)\r\n\t\t\t{\r\n\t\t\t\tb[j]=a[j];\r\n\t\t\t\t//printf(\"%c\",b[j]);\r\n\t\t\t}\r\n\t\t\t//printf(\"\\n\");\r\n\t\t\tfor(j=n-1,m=0;j>l/2;j--,m++)\r\n\t\t\t{\r\n\t\t\t\td[m]=a[j];//printf(\"%c\",d[m]);\r\n\t\t\t}\r\n\t\t\t//printf(\"\\n\");\r\n\t\t\t}\r\n\t\t\telse if(n%2==0)\r\n\t\t\t{\r\n\t\t\t\tfor(j=0;j<l/2-1;j++)\r\n\t\t\t{\r\n\t\t\t\tb[j]=a[j];\r\n\t\t\t\t//printf(\"%c\",b[j]);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t\tfor(j=n-1,m=0;j>l/2-1;j--,m++)\r\n\t\t\t{\r\n\t\t\t\td[m]=a[j];//printf(\"%c\",d[m]);\r\n\t\t\t}\r\n\t\t\t//printf(\"\\n\");\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(j=0;j<m;j++)\r\n\t\t\t{\r\n\t\t\t\tif(b[j]!=d[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\t\tf=0;break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(f==1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(void)\r\n{\r\n\tint t,n,k,c;\r\n\tint i,l,j,m,f;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\tf=1;\r\n\t\tscanf(\"%d %d\",&n,&k);\r\n\t\tgetchar();\r\n\t\tchar a[n+1],b[n+1],d[n+1];\r\n\t\tgets(a);\r\n\t\tl=strlen(a);\r\n\t\tif(k==0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");continue;\r\n\t\t}\r\n\t\telse if((l+1)/2<k+1)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");continue;\r\n\t\t}\r\n\t\telse if((l+1)/2>=k+1)\r\n\t\t{\t\r\n\t\t\tfor(j=0;j<k;j++)\r\n\t\t\t{\r\n\t\t\t\tif(a[j]!=a[n-j-1])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"NO\\n\");f=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(f)printf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.13440320962888666, "equal_cnt": 16, "replace_cnt": 14, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "fd6ef0444a0ddad9e41b5bb36b4a2cec", "bug_code_uid": "8575230f835316314819e015db047e5c", "src_uid": "102667eaa3aee012fef70f4192464674", "apr_id": "1777eded5ef77fb1b962c0ec36af23a9", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[52],b[52];\nint main()\n{\n\tint x,max,k,n,m,i,j,c1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\tmax=0;\n\tfor(i=0;i<m;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif((b[i]%a[j])==0)\n\t\t\t{\n\t\t\t\tk=(b[i]/a[j]);\n\t\t\t\tif(k>=max)\n\t\t\t\t{\n\t\t\t\t\tmax=k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tc1=0;\n\tx=0;\n\tfor(i=0;i<m;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tx=(b[i]/a[j]);\n\t\t\tif(x==max && (b[i]%a[j]==0))\n\t\t\tc1++;\n\t\t}\n\t}\n\tprintf(\"%d\",c1);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n//#include<conio.h>\nint m,n,a[50],b[50],r,i,j,k;\nint main(void) {\nscanf(\"%d\", &n); \nfor (i=0; i<n; ++i) scanf(\"%d\", &a[i]);\nscanf(\"%d\", &m); \nfor (i=0; i<m; ++i) scanf(\"%d\", &b[i]);\n    for (i=0; i<n; ++i) for (j=0; j<m; ++j) \n        if (b[j]%a[i]==0) {\n            if (b[j]/a[i]>r) {\n                r=b[j]/a[i];\n                k=1;\n            } else if (b[j]/a[i]==r) {\n                ++k;\n            }\n        }\n    printf(\"%d\\n\", k);\n    //getch();\n        return 0 ;\n}"}
{"similarity_score": 0.9786476868327402, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8c436bc01f512714344431bb24e49cec", "bug_code_uid": "cfdd3e3b8c86de846ac70684ea4713ae", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "5b3e888f9c3899f539ee1bb94c7ffd9d", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main(){\n\n\tint n;\n\tint key[26]={};\n\n\tscanf(\"%d\",&n);\n\tn--;\n\tgetchar();\n\tint i,count=0;\n\tchar c;\n\n\tfor(i=0;i<n;i++){\n\t\tc=getchar();\n\t\tkey[c-97]++;\n\n\t\tc=getchar();\n\t\tif(key[c-65]==0){\n\t\t\tcount++;\n\t\t\tkey[c-65]--;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",count);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\n\nint main(){\n\n\tint n;\n\tint key[26]={};\n\n\tscanf(\"%d\",&n);\n\tn--;\n\tgetchar();\n\tint i,count=0;\n\tchar c;\n\n\tfor(i=0;i<n;i++){\n\t\tc=getchar();\n\t\tkey[c-97]++;\n\n\t\tc=getchar();\n\t\tif(key[c-65]==0){\n\t\t\tcount++;\n\t\t}\n\t\telse{\n\t\t\tkey[c-65]--;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",count);\n\treturn 0;\n}"}
{"similarity_score": 0.85771744595274, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ec5998f1f40ae5d3a07854983b93e22e", "bug_code_uid": "c96241c8f6d3618391ea771bb98bbdb0", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "85f7315253176a513dfa95e7b0462b5b", "difficulty": 1500, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//~ mail ID : neernpatel@gmail.com \n//~ Author : DrexDelta \n//~ codechef : drexdelta , hackerRank : drexdelta , codeforces : drexdelta1 \n//~ Contact Info : neernpatel@gmail.com , +91-80898 25745\n\n#include <stdio.h>\n#include <stdlib.h>\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\n\nint n ,k,c1[2000005],c2[2000005],l,r,a[2000005],b[2000005];\nint main()\n{\n\t\n\t\n\tscanf(\"%d%d%d\" , &n , &l , &r);\n\t\n\tfor(int i = 1 ;i <= n ; i++)\n\t\tc1[i] = c2[i]= 0;\n\t\t\n\t\t\n\tfor(int i = 1 ;i <= n ; i++)\n\t\tscanf(\"%d\",&a[i]);\n\t\t\n\tfor(int i = 1 ;i <= n ; i++)\n\t\tscanf(\"%d\",&b[i]);\n\t\n\t\t\n\t\t\n\tqsort(a+l, r-l+1, sizeof(int), cmpfunc);\n\tqsort(b+l ,r-l+1 , sizeof(int),cmpfunc);\n\t\n\tint flag = 0;\n\tfor(int i = l ; i <= r ; i++)\n\t\tif(a[i] != b[i])\n\t\t\tflag = 11111111;\n\t\n\tif(flag == 11111111)\n\t\tprintf(\"LIE\\n\");\n\telse\n\t\tprintf(\"TRUTH\\n\");\n  \n\treturn 0;\n}\n", "fixed": "//~ mail ID : neernpatel@gmail.com \n//~ Author : DrexDelta \n//~ codechef : drexdelta , hackerRank : drexdelta , codeforces : drexdelta1 \n//~ Contact Info : neernpatel@gmail.com , +91-80898 25745\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\n\nint n ,k,c1[2000005],c2[2000005],l,r,a[2000005],b[2000005];\nint main()\n{\n\t\n\t\n\tscanf(\"%d%d%d\" , &n , &l , &r);\n\t\n\tfor(int i = 1 ;i <= n ; i++)\n\t\tc1[i] = c2[i]= 0;\n\t\t\n\t\t\n\tfor(int i = 1 ;i <= n ; i++)\n\t\tscanf(\"%d\",&a[i]);\n\t\t\n\tfor(int i = 1 ;i <= n ; i++)\n\t\tscanf(\"%d\",&b[i]);\n\t\n\tqsort(a+l, r-l+1, sizeof(int), cmpfunc);\n\tqsort(b+l ,r-l+1 , sizeof(int),cmpfunc);\n\t\n\tint flag = 0;\n\tfor(int i = l ; i <= r ; i++)\n\t\tif(a[i] != b[i])\n\t\t\tflag = 11111111;\n\t\n\tif(flag == 11111111)\n\t\tprintf(\"LIE\\n\"),exit(0);\n\t\n\tflag = 0;\n\tfor(int i = 1 ; i < l ; i++)\n\t\tif(a[i] != b[i])\n\t\t\tflag = 11111111;\n\tif(flag == 11111111)\n\t\tprintf(\"LIE\\n\"),exit(0);\n\t\t\n\tfor(int i = r+1 ; i <= n ; i++)\n\t\tif(a[i] != b[i])\n\t\t\tflag = 11111111;\n\t\t\t\n\t\t\t\n\tif(flag == 11111111)\n\t\tprintf(\"LIE\\n\"),exit(0);\n\telse\n\t\tprintf(\"TRUTH\\n\");\n\t\t\n\t\n  \n\treturn 0;\n}\n"}
{"similarity_score": 0.0940940940940941, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "58df9fa57d3c550e4e582019db7b37f6", "bug_code_uid": "0465c45f371bd18756c1eeaecccb529f", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "5b94c10460df6cde596ff738620689ea", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    //freopen(\"output.txt\", \"w\", stdout);\n\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        int x, y, a, b, df;\n\n        scanf(\"%d %d %d %d\", &x, &y, &a, &b);\n\n        if(x > y)\n        {\n            x = x+y;\n            y = x-y;\n            x = x-y;\n        }\n\n        if(a*2 < b)\n        {\n            printf(\"%d\\n\", x*a + y*a);\n        }\n        else\n        {\n            printf(\"%d\\n\", (y-x)*a + x*b);\n        }\n        \n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        long long x, y, a, b, tmp;\n\n        scanf(\"%lld %lld %lld %lld\", &x, &y, &a, &b);\n\n        if(x > y)\n        {\n            tmp = x;\n            x = y;\n            y = tmp;\n        }\n\n        if(a*2 <= b)\n        {\n            printf(\"%lld\\n\", x*a + y*a);\n        }\n        else\n        {\n            printf(\"%lld\\n\", (y-x)*a + x*b);\n        }\n        \n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9770491803278688, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "871af478493483e68c301909c95ac7ad", "bug_code_uid": "b2b661b880c9e7c8c3aa53438ebad9dd", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "f9c87849868742284c4d2937805e6f0c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\r\n\r\nint main(){\r\nint j=0,n,a,b,c,i=0;\r\nscanf(\"%d\",&n);\r\nwhile (i<n){\r\nscanf(\"%d\",&a);\r\nif (a<=1399){printf(\"DIVISION 4\\n\");}\r\nif (a>=1400 && a<=1599){printf(\"Division 3\\n\");}\r\nif (a>=1600 && a<=1899){printf(\"Division 2\\n\");}\r\nif (a>=1900){printf(\"Division 1\\n\");}\r\ni++;}\r\nreturn 0;\r\n}\r\n", "fixed": "# include <stdio.h>\r\n\r\nint main(){\r\nint j=0,n,a,b,c,i=0;\r\nscanf(\"%d\",&n);\r\nwhile (i<n){\r\nscanf(\"%d\",&a);\r\nif (a<=1399){printf(\"Division 4\\n\");}\r\nif (a>=1400 && a<=1599){printf(\"Division 3\\n\");}\r\nif (a>=1600 && a<=1899){printf(\"Division 2\\n\");}\r\nif (a>=1900){printf(\"Division 1\\n\");}\r\ni++;}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9975550122249389, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "759edc4ed7db0811ba5139c1b4926c0f", "bug_code_uid": "1bbcc082fc7c7056a13ffcc923d49146", "src_uid": "44162a97e574594ac0e598368e8e4e14", "apr_id": "c215a7cbc0fd8dd482ff00ae397e4d91", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,m;\n\tint i,j;\n\tscanf(\"%d %d\",&n,&m);\n\tint p[n];\n\tint l,r,x;\n\tint a,b;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&p[i]);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d %d %d\",&l,&r,&x);\n\t\tl-=1;r-=1;x-=1;\n\t\ta =0;b=0;\n\t\tfor(j=l;j<r+1;j++){\n\t\t\tif(j<x && p[j]>p[x])\n\t\t\t\ta += 1;\n\t\t\tif(j>x && p[j]<p[x])\n\t\t\t\tb +=1 ;\t\t\n\t\t}\n\t\tif(a==b){\n\t\t\tprintf(\"Yes\\n\");\n\t\t}else{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,m;\n\tint i,j;\n\tscanf(\"%d %d\",&n,&m);\n\tint p[n];\n\tint l,r,x;\n\tint a,b;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&p[i]);\n\t}\n\tfor(i=0;i<m;i++){\n\t\tscanf(\"%d %d %d\",&l,&r,&x);\n\t\tl-=1;r-=1;x-=1;\n\t\ta =0;b=0;\n\t\tfor(j=l;j<r+1;j++){\n\t\t\tif(j<x && p[j]>p[x])\n\t\t\t\ta += 1;\n\t\t\tif(j>x && p[j]<p[x])\n\t\t\t\tb +=1 ;\t\t\n\t\t}\n\t\tif(a==b){\n\t\t\tprintf(\"Yes\\n\");\n\t\t}else{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8125, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "90f12c0c44b0595d90d2434e4d9f4d26", "bug_code_uid": "03ca5bd4215db21d5e7a4708670a5071", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "371be0025858476e924390010a44573c", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int a[100000],i,t,num=0;\n    double sum=0;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        sum=sum+a[i];\n    }\n    sum=sum/2;\n    for(i=0;i<t;i++)\n    {\n        num=num+a[i];\n        if(num>=sum)\n            break;\n    }\n    printf(\"%d\",i+1);\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int i,t,num=0;\n    double sum=0;\n    scanf(\"%lld\",&t);\n    long long int a[t];\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        sum=sum+a[i];\n    }\n    sum=sum/2;\n    for(i=0;i<t;i++)\n    {\n        num=num+a[i];\n        if(num>=sum)\n            break;\n    }\n    printf(\"%d\",i+1);\n}\n"}
{"similarity_score": 0.9708255741775295, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "72e6ff6f32d47380c0dc61955d9d91e2", "bug_code_uid": "884443b7314811bfa88e96fca9168701", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "e5e8e3b3d46029f6822e7b96691baad3", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:16777216\")\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define PI 3.1415926535897932384\n\n#ifndef ONLINE_JUDGE\n\tFILE *stream;\n#endif\n\nint main()\n{\n\tchar str[100001];\n\tint m;\n\tint l, r;\n\tint len;\n\tint i;\n\tchar currentSym;\n#ifndef ONLINE_JUDGE\n \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\input.txt\", \"rt\", stdin);\n  \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\output.txt\", \"wt\", stdout);\n#endif\n\tscanf(\"%s%i\", str, &m);\n\t\n\tlen = strlen(str);\n\tcurrentSym = str[0];\n\tstr[0] = 0;\n\tfor (i = 1; i < len; i++){\n\t\tif (str[i] == currentSym)\n\t\t\tstr[i] = str[i-1] + 1;\n\t\telse{\n\t\t\tcurrentSym = str[i];\n\t\t\tstr[i] = str[i-1];\n\t\t}\n\t}\n\n\tfor (; m > 0; m--){\n\t\tscanf(\"%i%i\", &l, &r);\n\n\t\tprintf(\"%i\\n\", str[r-1] - str[l-1]);\n\t}\n  \treturn 0;\n}", "fixed": "#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:16777216\")\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define PI 3.1415926535897932384\n\n#ifndef ONLINE_JUDGE\n\tFILE *stream;\n#endif\n\nint main()\n{\n\tchar str[100001];\n\tint  arr[100000];\n\tint m;\n\tint l, r;\n\tint len;\n\tint i;\n\tchar currentSym;\n#ifndef ONLINE_JUDGE\n \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\input.txt\", \"rt\", stdin);\n  \tfreopen_s(&stream, \"D:\\\\Work\\\\CodeForces\\\\output.txt\", \"wt\", stdout);\n#endif\n\tscanf(\"%s%i\", str, &m);\n\t\n\tlen = strlen(str);\n\tcurrentSym = str[0];\n\tarr[0] = 0;\n\tfor (i = 1; i < len; i++){\n\t\tif (str[i] == currentSym)\n\t\t\tarr[i] = arr[i-1] + 1;\n\t\telse{\n\t\t\tcurrentSym = str[i];\n\t\t\tarr[i] = arr[i-1];\n\t\t}\n\t}\n\n\tfor (; m > 0; m--){\n\t\tscanf(\"%i%i\", &l, &r);\n\n\t\tprintf(\"%i\\n\", arr[r-1] - arr[l-1]);\n\t}\n  \treturn 0;\n}"}
{"similarity_score": 0.858, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "dda277ea89d9adc3d04fc0a4bc8ab42d", "bug_code_uid": "242edf97a99b224e24779d632ad6d0de", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "d98356a8f951b682482518c6778feaaa", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint arr[100005];\n\nint main()\n{\n\tint n,i,min=1000000007,j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tif(min>arr[i])\n\t\t\tmin=arr[i];\n\t}\n\n\tint ans=1000000007;\n\n\ti=0;\n\n\twhile(arr[i]!=min)\n\t\ti++;\n\n\tfor(j=i+1;j<n;j++)\n\t{\n\t\tint tmp=0,fl=0;\n\t\twhile(j<n && arr[j]!=min)\n\t\t{\n\t\t\tfl=1;\n\t\t\ttmp++;\n\t\t\tj++;\n\t\t}\n\t\tif(fl==1 && tmp<ans)\n\t\t{\n\t\t\tif(j!=n)\n\t\t\t\tans=tmp;\n\t\t}\n\t}\n\t\n\tif(ans==1000000007)\n\t\tans=0;\n\tprintf(\"%d\\n\",ans+1);\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint arr[100005];\n\nint main()\n{\n\tint n,i,min=1000000007,j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tif(min>arr[i])\n\t\t\tmin=arr[i];\n\t}\n\n\tint ans=1000000007;\n\n\ti=0;\n\n\twhile(arr[i]!=min)\n\t\ti++;\n\n\tfor(j=i+1;j<n;j++)\n\t{\n\t\tint tmp=1,fl=0;\n\t\twhile(j<n && arr[j]!=min)\n\t\t{\n\t\t\t//printf(\"%d\\n\",arr[j]);\n\t\t\ttmp++;\n\t\t\tj++;\n\t\t}\n\t\t//printf(\"j : %d\\n\",j);\n\n\t\tif(tmp<ans)\n\t\t{\n\t\t\tif(j!=n){\n\t\t\t\t//printf(\"%d %d\\n\",tmp,ans);\n\t\t\t\tans=tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(ans==1000000007)\n\t\tans=1;\n\tprintf(\"%d\\n\",ans);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.4875, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "30f82bb0cdc3c36753d5bfe0f7cda5f6", "bug_code_uid": "818bb1cf6ca18771515dcacc10d89945", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "d31e31a74acca21981176e17c1e88aba", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i, j, k, l, m, n;\n\n    scanf(\"%d\", &n);\n\n    int a[n], b[n+1], c[n], d[n];\n\n    b[0] = 1;\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &a[i]);\n        b[i + 1] = a[i] + b[i];\n    }\n\n    scanf(\"%d\", &m);\n\n    for(i = 0; i < m; i++){\n        scanf(\"%d\", &k);\n        for(j = 0; j < n; j++){\n            if(k >= b[j] && k <= b[j+1]){\n                printf(\"%d\\n\", j + 1);\n                break;\n            }\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint bin(int a[], int p, int r, int k){\n    if(p <= r){\n        int q = p + ((r - p) / 2);\n        if(a[q - 1] < k && a[q] >= k){\n            return q;\n        }else if(a[q] > k){\n            return bin(a, p, q - 1, k);\n        }else{\n            return bin(a, q + 1, r, k);\n        }\n    }\n}\n\nint main(){\n    int i, j, k, l, m, n;\n\n    scanf(\"%d\", &n);\n\n    int a[n + 1];\n\n    a[0] = 0;\n    for(i = 1; i <= n; i++){\n        scanf(\"%d\", &k);\n        a[i] = a[i - 1] + k;\n    }\n\n    scanf(\"%d\", &m);\n\n    for(i = 0; i < m; i++){\n        scanf(\"%d\", &k);\n        printf(\"%d\\n\", bin(a, 0, n, k));\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.7050528789659224, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "d94806c373d8fdc84c73e8d677ad3215", "bug_code_uid": "544aa647bfb330791887e6a07f664fd6", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "1cead43f09596cb71b39fa91a60522f9", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\tlong long int m;\n\tchar s[100001];\n\t\n\tscanf(\"%s\",s);\n\tlong long int d[strlen(s)]={0};\n\tfor (int i=0;i<strlen(s)-1;i++)\n\t{\n\t\tif(s[i]==s[i+1])\n\t\t{\n\t\t\td[i+1]+=d[i]+1;\n\t\t}\n\t}\n\tscanf(\"%I64d\",&m);\n\t\n\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\tlong long int a,b;\n\t\t\tscanf(\"%I64d %I64d\",&a,&b);\n\t\t\tprintf(\"%I64d\\n\",d[b-1]-d[a-1]);\n\t\t}\n\t\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\tlong long int m,count=0;\n\tchar s[100001];\n\t\n\tscanf(\"%s\",s);\n\tlong long int d[strlen(s)];\n\tfor(int i=0;i<strlen(s);i++)\n\t\td[i]=0;\n\tfor (int i=0;i<strlen(s)-1;i++)\n\t{    \n\t\tif(s[i]==s[i+1])\n\t\t{\n\t\t\tcount++;\n\t\t\td[i+1]=count;\n\t\t}\n\t\telse\n\t\t\td[i+1]=d[i];\n\t}\n\tscanf(\"%I64d\",&m);\n\t\n\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\tlong long int a,b;\n\t\t\tscanf(\"%I64d %I64d\",&a,&b);\n\t\t\tprintf(\"%I64d\\n\",d[b-1]-d[a-1]);\n\t\t}\n\t\n}\n\n"}
{"similarity_score": 0.9559032716927454, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1f663610db3051ad0ce93f5142ce5353", "bug_code_uid": "7482b00f0b73c6676ce8ddd19049c37a", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "b98bb5888d439c4b8a26a73fc0a7d3b6", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\n    int n, t, i, h = 0, d;\n    scanf (\"%d\", &n);\n    t = n;\n    int arr [1001]; \n    for (i = 0; i < 1001; i++) arr [i] = 0;\n    for (i = 0; i < n; i++) {\n        scanf (\"%d\", &d);\n        arr [d]++;\n        if (arr [d] > h) h = arr [d];\n        t -= arr [d] -1;\n    }   \n    printf (\"%d %d\", h, t);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main ()\n{\n    int n, t, i, h = 0, d;\n    scanf (\"%d\", &n);\n    t = n;\n    int arr [1001]; \n    for (i = 0; i < 1001; i++) arr [i] = 0;\n    for (i = 0; i < n; i++) {\n        scanf (\"%d\", &d);\n        arr [d]++;\n        if (arr [d] > h) h = arr [d];\n        if (arr [d] > 1) t--;\n    }   \n    printf (\"%d %d\", h, t);\n    return 0;\n}"}
{"similarity_score": 0.9857208659603869, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "db41d7a1a5ed1becd5ba774cbdfd40d1", "bug_code_uid": "d0d8364b408ab6f500ad833f3249087c", "src_uid": "43336ae43d65a11c80337d0b6ea6b934", "apr_id": "5dc1985d8fdffe1fe82105d2c5a644eb", "difficulty": 3100, "tags": ["games", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/* https://en.wikipedia.org/wiki/Hackenbush */\n/* http://math450games.blogspot.com/2017/02/green-hackenbush.html */\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N\t300000\n\nint *ej[N], eo[N];\n\nvoid append(int i, int j) {\n\tint o = eo[i]++;\n\n\tif (o >= 2 && (o & o - 1) == 0)\n\t\tej[i] = (int *) realloc(ej[i], o * 2 * sizeof *ej[i]);\n\tej[i][o] = j;\n}\n\nint pp[N], xx[N];\n\nvoid dfs1(int p, int i) {\n\tint o;\n\n\tpp[i] = p;\n\tfor (o = eo[i]; o--; ) {\n\t\tint j = ej[i][o];\n\n\t\tif (j != p) {\n\t\t\tdfs1(i, j);\n\t\t\txx[i] ^= xx[j];\n\t\t}\n\t}\n\txx[i]++;\n\tprintf(\"%d: %d\\n\", i, xx[i]);\n}\n\nint main() {\n\tstatic char fused[N], cc[N + 1];\n\tint n, h, i, j, x, m;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tej[i] = (int *) malloc(2 * sizeof *ej[i]);\n\tfor (h = 0; h < n - 1; h++) {\n\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\tappend(i, j), append(j, i);\n\t}\n\tdfs1(-1, 0);\n\tfused[0] = 1, x = xx[0] - 1, m = 0;\n\tcc[0] = (x ^ m) != 0 ? '1' : '2';\n\tfor (i = 1; i < n; i++) {\n\t\tfor (j = i; !fused[j]; j = pp[j]) {\n\t\t\tx ^= xx[j] ^ xx[j] - 1, m ^= 1;\n\t\t\tfused[j] = 1;\n\t\t}\n\t\tcc[i] = (x ^ m) != 0 ? '1' : '2';\n\t}\n\tprintf(\"%s\\n\", cc);\n\treturn 0;\n}\n", "fixed": "/* https://en.wikipedia.org/wiki/Hackenbush */\n/* http://math450games.blogspot.com/2017/02/green-hackenbush.html */\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N\t300000\n\nint *ej[N], eo[N];\n\nvoid append(int i, int j) {\n\tint o = eo[i]++;\n\n\tif (o >= 2 && (o & o - 1) == 0)\n\t\tej[i] = (int *) realloc(ej[i], o * 2 * sizeof *ej[i]);\n\tej[i][o] = j;\n}\n\nint pp[N], xx[N];\n\nvoid dfs1(int p, int i) {\n\tint o;\n\n\tpp[i] = p;\n\tfor (o = eo[i]; o--; ) {\n\t\tint j = ej[i][o];\n\n\t\tif (j != p) {\n\t\t\tdfs1(i, j);\n\t\t\txx[i] ^= xx[j];\n\t\t}\n\t}\n\txx[i]++;\n}\n\nint main() {\n\tstatic char fused[N], cc[N + 1];\n\tint n, h, i, j, x, m;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tej[i] = (int *) malloc(2 * sizeof *ej[i]);\n\tfor (h = 0; h < n - 1; h++) {\n\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\tappend(i, j), append(j, i);\n\t}\n\tdfs1(-1, 0);\n\tfused[0] = 1, x = xx[0] - 1, m = 0;\n\tcc[0] = (x ^ m) != 0 ? '1' : '2';\n\tfor (i = 1; i < n; i++) {\n\t\tfor (j = i; !fused[j]; j = pp[j]) {\n\t\t\tx ^= xx[j] ^ xx[j] - 1, m ^= 1;\n\t\t\tfused[j] = 1;\n\t\t}\n\t\tcc[i] = (x ^ m) != 0 ? '1' : '2';\n\t}\n\tprintf(\"%s\\n\", cc);\n\treturn 0;\n}\n"}
{"similarity_score": 0.1559633027522936, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "dad022fdb1ee80f6858adb53be8b587b", "bug_code_uid": "0935bf06f12f93ef285e134c623bcca6", "src_uid": "7ed9265b56ef6244f95a7a663f7860dd", "apr_id": "790091642a19c1daca229e7d9fadf421", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int a,b,c,d=6;\n    scanf(\"%d%d\",&a,&b);\n    if(a<b) a=b;\n    c=7-a;\n    if(c==3) \n    {\n    printf(\"1/2\"); exit(0);\n    }\n    if(c==6) \n    {\n    printf(\"1/1\"); \n    exit(0);\n    }\n    if(c%2==0)\n    {\n     c=c/2; \n     d=3;\n    }\n    printf(\"%d/%d\",c,d);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\nint n,p1,p2,p3,t1,t2,l[100],r[100],ti[100],res=0,i;\n    scanf(\"%d%d%d%d%d%d\",&n,&p1,&p2,&p3,&t1,&t2);\n    for(i = 0; i<n; i++){\n        scanf(\"%d%d\",&l[i],&r[i]);\n    }\n    for(i = 0; i<n; i++){\n        res+=(r[i]-l[i])*p1;\n        if(i!=0){\n            int t;\n            t=l[i]-r[i-1];\n             if(t-t1>=0){\n               res+=t1*p1;\n               t=t-t1;\n                if(t-t2>=0){\n                res+=t2*p2;\n                t=t-t2;\n                    if(t>=0){\n                    res+=t*p3;\n                    }\n                }\n                else{\n                res+=t*p2;\n            }\n            }\n            else{\n                res+=t*p1;\n            }\n        }\n    }\n    printf(\"%d \",res);\n    return 0;\n}"}
{"similarity_score": 0.6325991189427312, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f1e45c308fd185375eae41d055bcbaf7", "bug_code_uid": "cd73ab1e091d828ea874bb10b3f5e851", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "f1753bbbc5b8f14d9a2bcd441f2f1a17", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\nint main()\n{\n    long n,i,t,j,min,p;\n    scanf(\"%ld\",&n);\n    long a[n];\n    min=LONG_MAX;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<min)\n        {\n            min=a[i];\n            p=i;\n        }\n    }\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(a[i]>a[j])\n            {\n                t=a[i];\n                a[i]=a[j];\n                a[j]=t;\n            }\n        }\n    }\n    if(a[0]==a[1])\n        printf(\"Still Rozdil\");\n    else\n        printf(\"%ld\",p+1);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<limits.h>\nint main()\n{\n    long n,i,t=0,j,min,p,q=0;\n    scanf(\"%ld\",&n);\n    long a[n];\n    min=LONG_MAX;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n        if(a[i]<min)\n        {\n            min=a[i];\n            p=i;\n            if(t!=min)\n                q=0;\n                continue;\n        }\n        if(a[i]==min)\n        {\n            q=1;\n            t=a[i];\n        }\n    }\n    if(q==1)\n        printf(\"Still Rozdil\");\n    else\n        printf(\"%ld\",p+1);\n    return 0;\n}"}
{"similarity_score": 0.9338677354709419, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "67cf869ce34825d2cbea20c340feb240", "bug_code_uid": "561614213b5545bf985032c511dfa9e6", "src_uid": "14fccd50d5dfb557dd53f2896ed844c3", "apr_id": "bc6eb52cbe02b1fd3b71abf7b83294ad", "difficulty": 800, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b,c,ans=0;scanf(\"%d%d%d\",&a,&b,&c);\n        (b>c/2)?(ans+=c/2,b-=c/2):(ans+=b,b-=b);\n        (a>b/2)?ans+=b/2:ans+=a;\n        printf(\"%d\\n\",ans*3);\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b,c,ans=0;scanf(\"%d%d%d\",&a,&b,&c);\n        (b>c/2)?(ans+=c/2,b-=c/2):(ans+=b,b-=b);\n        (a>b/2)?(ans+=b/2):(ans+=a);\n        printf(\"%d\\n\",ans*3);\n    }\n}\n"}
{"similarity_score": 0.9850606909430439, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "caa8909e3c72ff63f60812b261535fe5", "bug_code_uid": "cf32525619b2467b96277f5a24194aaa", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "591eab048c21fa1926dd6045095680ef", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() \n{\n\n    long long int t, cnt2,cnt3,n, s, i, p;\n    scanf(\"%lli\", &t) ;\n    while(t--) \n    {\n    \tlong long int a[200000]={},cnt[200000]={};\n    \tcnt2=0;\n    \tcnt3=0;\n    \tp=0;\n    \tscanf(\"%lli\", &n) ;\n    \tfor(i=0;i<n;i++) \n    \t{\n    \t\tscanf(\"%lli\", &a[i]) ;\n    \t\tcnt[a[i]]+=1;\n    \t} \n    \ts=cnt[1];\n    \t\n    \tif(cnt[1]>1)\n    \t{\n    \t\tp+=cnt[1] ;\n    \t\tcnt2+=1;\n    \t} \n    \tif(cnt[1]==1)\n    \t{\n    \t\tp+=1;\n    \t\tcnt3+=1;\n    \t} \n    \tfor(i=2;p<n;i++) \n    \t{\n    \t\tif(s<cnt[i]) \n    \t\ts=cnt[i] ;\n    \t\tif(cnt[i]>1)\n    \t\t{\n    \t\t\tp+=cnt[i] ;\n    \t\t\tcnt2+=1;\n    \t\t} \n    \t\tif(cnt[i]==1)\n    \t\t{\n    \t\t\tp+=1;\n    \t\t\tcnt3+=1;\n    \t\t} \n    \t} \n    \tif(n==1)\n    \tprintf(\"0\\n\") ;\n    \telse if(cnt2==0)\n    \tprintf(\"1\\n\") ;\n    \telse if(cnt3>=s) \n    \tprintf(\"%lli\\n\", s) ;\n    \telse if(cnt3<s) \n    \t{\n    \t\tif((s-cnt3)<=(cnt2-1)) \n    \t\tprintf(\"%lli\\n\", s) ;\n    \t\telse\n    \t\t{\n    \t\t\tif((cnt2+cnt3)<=(s-1)) \n    \t\t\tprintf(\"%lli\\n\", cnt2+cnt3);\n    \t\t\telse\n    \t\t\tprintf(\"%lli\\n\", cnt3+(cnt2-1)) ;\n    \t\t} \n    \t} \n   } \n   return 0;\n} \n", "fixed": "#include<stdio.h>\nint main() \n{\n\n    long long int t, cnt2,cnt3,n, s, i, p;\n    scanf(\"%lli\", &t) ;\n    while(t--) \n    {\n    \tlong long int a[200010]={},cnt[200010]={};\n    \tcnt2=0;\n    \tcnt3=0;\n    \tp=0;\n    \tscanf(\"%lli\", &n) ;\n    \tfor(i=0;i<n;i++) \n    \t{\n    \t\tscanf(\"%lli\", &a[i]) ;\n    \t\tcnt[a[i]]+=1;\n    \t} \n    \ts=cnt[1];\n    \t\n    \tif(cnt[1]>1)\n    \t{\n    \t\tp+=cnt[1] ;\n    \t\tcnt2+=1;\n    \t} \n    \tif(cnt[1]==1)\n    \t{\n    \t\tp+=1;\n    \t\tcnt3+=1;\n    \t} \n    \tfor(i=2;p<n;i++) \n    \t{\n    \t\tif(s<cnt[i]) \n    \t\ts=cnt[i] ;\n    \t\tif(cnt[i]>1)\n    \t\t{\n    \t\t\tp+=cnt[i] ;\n    \t\t\tcnt2+=1;\n    \t\t} \n    \t\tif(cnt[i]==1)\n    \t\t{\n    \t\t\tp+=1;\n    \t\t\tcnt3+=1;\n    \t\t} \n    \t} \n    \tif(n==1)\n    \tprintf(\"0\\n\") ;\n    \telse if(cnt2==0)\n    \tprintf(\"1\\n\") ;\n    \telse if(cnt3>=s) \n    \tprintf(\"%lli\\n\", s) ;\n    \telse if(cnt3<s) \n    \t{\n    \t\tif((s-cnt3)<=(cnt2-1)) \n    \t\tprintf(\"%lli\\n\", s) ;\n    \t\telse\n    \t\t{\n    \t\t\tif((cnt2+cnt3)<=(s-1)) \n    \t\t\tprintf(\"%lli\\n\", cnt2+cnt3);\n    \t\t\telse\n    \t\t\tprintf(\"%lli\\n\", cnt3+(cnt2-1)) ;\n    \t\t} \n    \t} \n   } \n   return 0;\n} \n"}
{"similarity_score": 0.9777777777777777, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "61e683946729a9aa19e804e1aafdb38d", "bug_code_uid": "f2fc63a931342cbc2cd3a23cb61080ce", "src_uid": "a4c82fffb31bc7e42870fd84e043e815", "apr_id": "72c644b0e979aba3555b9c2cf8dfd2cd", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n   int  n;\n   int  a,b;\n   scanf(\"%d\",&n);\n   for(int  i=0; i < n; i++)\n   {\n        scanf(\"%d%d\",&a,&b);\n       if(a % 2 && b % 2 && a >= b * b)\n            printf(\"YES\\n\");\n        else    if(a % 2 == 0 && b % 2 == 0 && a >= b * b)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n   }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n   int  n;\n   long long int  a,b;\n   scanf(\"%d\",&n);\n   for(int  i=0; i < n; i++)\n   {\n        scanf(\"%lld%lld\",&a,&b);\n       if(a % 2 && b % 2 && a >= b * b)\n            printf(\"YES\\n\");\n        else    if(a % 2 == 0 && b % 2 == 0 && a >= b * b)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n   }\n    return 0;\n}\n"}
{"similarity_score": 0.981018981018981, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f39cc18568d9d2cdfbc86d8997252cf2", "bug_code_uid": "e8ae90af87b820101df0c7831dd00ef7", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "aef056aa1bb50e54386bd88117174ac6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int arr[100],n,i,max=0,min=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&arr[i]);\n        if(i==1){\n            max=1;\n            min=1;\n        }\n        if(arr[i]>arr[max])\n            max=i;\n        if(arr[i]<=arr[min])\n            min=i;\n    }\n    if(max==1 && min==n)\n        printf(\"0\");\n    else if(n!=2 && n%2==0)\n        printf(\"%d\",(n-min+max-1));\n    else\n        printf(\"%d\",(n-min+max-2));\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int arr[100],n,i,max=0,min=0,cnt=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&arr[i]);\n        if(i==1){\n            max=1;\n            min=1;\n        }\n        if(arr[i]>arr[max])\n            max=i;\n        if(arr[i]<=arr[min])\n            min=i;\n    }\n    if(max==1 && min==n)\n        printf(\"0\");\n    else if(n!=2 && max<min)\n        printf(\"%d\",(n-min+max-1));\n    else\n        printf(\"%d\",(n-min+max-2));\n    return 0;\n}\n"}
{"similarity_score": 0.9851042701092354, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "950a8ce137145ec349d7e713aa6aade9", "bug_code_uid": "7dbb271f46a22ff281bbae1ec3bf2a6d", "src_uid": "6469ed9f2486b498c9ffeb8270391e3a", "apr_id": "160d23d89a98e5d46c6561ca6f2c3bed", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint n, num[1010];\n\tscanf(\"%d\", &n); fflush(stdin);\n\t//printf(\"%d\\n\",n);\n\t//int cnt = 0;\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d\", &num[i]);\n\t}\n\t\n\tfor(int j=0; j<n-1; j++){\n\t\tfor(int k=n-1; k>0; k--){\n\t\t\tif(num[k] < num[k-1]){\n\t\t\t\tint temp = num[k];\n\t\t\t\tnum[k] = num[k-1];\n\t\t\t\tnum[k-1] = temp;\n\t\t\t}\n\t\t\t\n//\t\t\tif(num[k+1] != num[k]+1){\n//\t\t\t\tcnt++;\n//\t\t\t}\n\t\t}\n\t}\n\tint sum = 0;\n\t//printf(\"%d %d %d\\n\",n,num[n-1],num[0]);\n\tsum=(num[n-1]-num[0])+1-n;\n\t\n\tprintf(\"%d\", sum);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tint n, num[1010];\n\tscanf(\"%d\", &n); \n\t//printf(\"%d\\n\",n);\n\t//int cnt = 0;\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d\", &num[i]);\n\t}\n\t\n\tfor(int j=0; j<n-1; j++){\n\t\tfor(int k=n-1; k>0; k--){\n\t\t\tif(num[k] < num[k-1]){\n\t\t\t\tint temp = num[k];\n\t\t\t\tnum[k] = num[k-1];\n\t\t\t\tnum[k-1] = temp;\n\t\t\t}\n\t\t\t\n//\t\t\tif(num[k+1] != num[k]+1){\n//\t\t\t\tcnt++;\n//\t\t\t}\n\t\t}\n\t}\n\tint sum = 0;\n\t//printf(\"%d %d %d\\n\",n,num[\tn-1],num[0]);\n\tsum=(num[n-1]-num[0])+1-n;\n\t\n\tprintf(\"%d\", sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7089467723669309, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "2815826afe518e02ca37941c4845f389", "bug_code_uid": "8b88edee53dde33633595dbefb44ed77", "src_uid": "31064ad58b7802c32b3c51137057b6f5", "apr_id": "7b4d32a53edc4a8252acfbe67d395345", "difficulty": 1500, "tags": ["binary search", "brute force", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n\r\nmain(){\r\n    \r\n   int t;\r\n   scanf(\"%d\", &t);\r\n   \r\n   while(t--){\r\n       \r\n     long int n;\r\n     scanf(\"%ld\",&n);\r\n     \r\n    long int a=0,b=1,c ;\r\n    c=b+1 ;\r\n    \r\n    long int count=0 ;\r\n    \r\n    for (b=1;b<=(n-1);b++){\r\n        float root=sqrt(2*b+1) ;\r\n        a=sqrt(2*b+1);\r\n        if (root==a)\r\n          count++;\r\n        \r\n        \r\n    }\r\n    \r\n    printf(\"%ld\\n\", count);\r\n      \r\n   }\r\n    \r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n \r\nmain(){\r\n    \r\n   int t;\r\n   scanf(\"%d\", &t);\r\n   \r\n   while(t--){\r\n       \r\n     long int n;\r\n     scanf(\"%ld\",&n);\r\n     \r\n    long int a=0,b=1,c ;\r\n    c=b+1 ;\r\n    \r\n    long int count=0 ;\r\n \r\n   long int amax=sqrt(2*n-1);\r\n    \r\n    if (amax%2==0)\r\n       amax-- ;\r\n    \r\n    count=(amax-1)/2 ;\r\n     printf(\"%ld\\n\", count);\r\n \r\n\r\n \r\n   }\r\n    \r\n}"}
{"similarity_score": 0.09762532981530343, "equal_cnt": 6, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2c4561982d91cea0b81458b48b431ef3", "bug_code_uid": "21d10b17e962240e2186503eff28cc70", "src_uid": "fa253aabcccd487d09142ea882abbc1b", "apr_id": "311dbb09ce96d0480c27af30a5f9c599", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid func(int n,int k)\n{\n\tif(n==k)\n\t{\n\t\tfor(int i=97;i<97+n;i++)\n\t\t{\n\t\t\tprintf(\"%c\",i);\n\t\t}\n\t}\n\telse\n\t{\n\t\tint l=97;\n\t\tint m=n/k;\n\t\tint count=0;\n\t\twhile(count<n-2)\n\t\t{\n\t\t\tfor(int i=0;i<m;i++)\n\t\t\t{\n\t\t\t\tprintf(\"%c\",l);\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tl++;\n\t\t}\n\t\tfor(int i=0;i<n-count;i++)\n\t\t{\n\t\t\tprintf(\"a\");\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,k;\n\t\tscanf(\"%d%d\",&n,&k);\n\t\tfunc(n,k);\n\t\n\t}\n\n\n\treturn 0;\t\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,k;\n\t\tscanf(\"%d%d\",&n,&k);\n\t\tint l=97;\n\t\tfor(int j=0;j<k;j++)\n\t\t{\n\t\t\tfor(int i=0;i<n/k;i++)\n\t\t\t{\n\t\t\t\tprintf(\"%c\",l);\n\t\t\t}\n\t\t\tl++;\n\t\t}\n\t\tfor(int i=0;i<n%k;i++)\n\t\t{\n\t\t\tprintf(\"%c\",97);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.21470019342359767, "equal_cnt": 17, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "143baafeda832acf82159dddf14c845f", "bug_code_uid": "933fc63eac902a2b182ab30231219d4b", "src_uid": "b1ef19d7027dc82d76859d64a6f43439", "apr_id": "90a95b46676e79d34e9be4fe074d74d6", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main ()\n{\n\tchar a[222],b[222];\n\tint c[88];\n\tint f=1,i;\n\tgets(a);\n\tgets(b);\n\tfor (i=0;i<88;i++) c[i]=0;\n\tfor (i=0;i<strlen(a);i++) c[a[i]-'A']=1;\n\n\tfor (i=0;i<strlen(b);i++){\n\t\tif(c[b[i]-'A']!=1) f=0;\n\t}\n\tif(f==1) printf(\"YES\\n\");\n\telse if(f==0) printf(\"NO\\n\");\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <ctype.h>\n\nint main()\n{\n    int m,n,i,j,a[150];\n    char s1[300],s2[300];\n    gets(s1);\n        int k=0;\n        memset(a,0,sizeof(a));\n        gets(s2);\n        for(i=0;i<strlen(s1);i++)\n        {\n            if(isalpha(s1[i]))\n                a[s1[i]]++;\n        }\n        for(i=0;i<strlen(s2);i++)\n        {\n            if(isalpha(s2[i]))\n            {\n                a[s2[i]]--;\n                if(a[s2[i]]<0)\n                {\n                    k=1;\n                    break;\n                }\n            }\n        }\n        if(k==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.5012531328320802, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "26449c0a6ef83d9f6ba758b3cada65c7", "bug_code_uid": "5702fa2bfcdb5d40e391420cde321a48", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "6bcc0c186c91acab0d0f058f31c435dd", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<math.h>\nint main(){\nint n, sum,i;\nscanf(\"%d\", &n);\nsum=((n+1)n/2)-2(pow(2,n)-1);\nreturn 0;\t\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<math.h>\nint main(){\nint t,i,cas;\nscanf(\"%d\",&t);\nfor(cas=0;cas<t;cas++){\nlong long int n, sum=0,gp=1;\nscanf(\"%lld\", &n);\nsum=((n+1)*n)/2;\nfor(i=2;i<=n;i*=2)\ngp=gp+i;\nsum=sum-2*gp;\nprintf(\"%lld\\n\", sum);\n}\nreturn 0;\n}"}
{"similarity_score": 0.7270471464019851, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "8b2645b68dda2e219c28ed32942616eb", "bug_code_uid": "759f8c9c6ee0e392fe9205c324631b0a", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "15220eaf05e78b49139e913b42c29926", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#define M (int)pow(10,5)\n\nint main(void){\n    int n,a[M],p[M],i,k,min=100,sum=0;\n    scanf(\"%d\",&n);\n    if(n<1||n>M)\n        return -1;\n    for(i=0; i<n; i++){\n        scanf(\"%d%d\",&a[i],&p[i]);\n        if(min>p[i]){\n            min=p[i];\n            k=i;\n        }\n    }\n\n    for(i=0; i<k; i++){\n        sum+=a[i]*p[i];\n    }\n    for(i=k; i<n; i++){\n        sum+=a[i]*min;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#define M (int)pow(10,5)\n\nint main(void){\n    int n,a[M],p[M],i,k,min=100,sum=0;\n    scanf(\"%d\",&n);\n    if(n<1||n>M)\n        return -1;\n    for(i=0; i<n; i++){\n        scanf(\"%d%d\",&a[i],&p[i]);\n        if(min>p[i]){\n            min=p[i];\n        }\n        sum+=a[i]*min;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9988674971687429, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "eb6bca3075308e0dcc25a7f518d62b15", "bug_code_uid": "1d65959c765d862b1dda2aa3e400a541", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "a6b59cf7d780cf272c391eb600365d0c", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        int ans=n,temp=0;\n        if(n<10)\n        {\n           printf(\"%d\\n\",n);\n        }\n\n        else{\n            while(n>10)\n            {\n                temp=n/10;\n                n=n%10;\n                n=n+temp;\n                ans=ans+temp;\n            }\n\n            printf(\"%d\\n\",ans);\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        int ans=n,temp=0;\n        if(n<10)\n        {\n           printf(\"%d\\n\",n);\n        }\n\n        else{\n            while(n>=10)\n            {\n                temp=n/10;\n                n=n%10;\n                n=n+temp;\n                ans=ans+temp;\n            }\n\n            printf(\"%d\\n\",ans);\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9947826086956522, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2944b1d6dfff615b6264c83248710c57", "bug_code_uid": "ef340eebef79ffe101d3bf0126085bcb", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "d4004509bdc8e1afaff0bed44815d077", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n    int i,n, b[1000001]={0},j;\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++) scanf(\"%d\",&j), b[j]++;\n    for (i=1;i<100001;i++) b[i]+=b[i-1];\n    scanf(\"%d\", &n);\n    while (n--) scanf(\"%d\",&j), printf(\"%d\\n\",b[j<=100000?j:100000]);\n    return 0;\n}\n\n\n\n\n\n\n    }\n", "fixed": "#include <stdio.h>\nint main() {\n    int i,n, b[1000001]={0},j;\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++) scanf(\"%d\",&j), b[j]++;\n    for (i=1;i<100001;i++) b[i]+=b[i-1];\n    scanf(\"%d\", &n);\n    while (n--) scanf(\"%d\",&j), printf(\"%d\\n\",b[j<=100000?j:100000]);\n    return 0;\n}\n\n\n\n\n\n\n   "}
{"similarity_score": 0.9969230769230769, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8e3a4a00b9275703e64b68fdfcf061fc", "bug_code_uid": "3eb2ada7ec2616ce32c2ebc523030816", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "5dce50ea5898eccf9a29311bd0c35ce6", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h> \ntypedef long long LL;\n\nint main(void) \n{\n   LL A,B,T,i,C, D, E;\n   scanf(\"%lld\", &T);\n   while(T){\n    scanf(\"%lld%lld\", &A, &B);\n    if(B == 1)\n    {\n      printf(\"NO\\n\");\n      T--;\n      continue;\n    }\n    printf(\"YES\\n\");\n    printf (\"%lld %lld %lld\\n\", A*B , A , (B+1)*A;\n    T--;\n  }\n return 0;\n}\n", "fixed": "#include <stdio.h> \ntypedef long long LL;\n\nint main(void) \n{\n   LL A,B,T,i,C, D, E;\n   scanf(\"%lld\", &T);\n   while(T){\n    scanf(\"%lld%lld\", &A, &B);\n    if(B == 1)\n    {\n      printf(\"NO\\n\");\n      T--;\n      continue;\n    }\n    printf(\"YES\\n\");\n    printf (\"%lld %lld %lld\\n\", A*B , A , (B+1)*A );\n    T--;\n  }\n return 0;\n}\n"}
{"similarity_score": 0.9341500765696784, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a959dd547ebf90eccf9a92ab139ff4ab", "bug_code_uid": "406f4c533dd8435d71833c628c227abc", "src_uid": "842a0587147591ea38a20638f3a7960d", "apr_id": "051caea2ef788b67a68e26c3734dfd2b", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t,n,k;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&k);\r\n        if(n%2)\r\n            printf(\"1 %d %d\\n\",n/2,n/2);\r\n        else if(n%4==0)\r\n            printf(\"4 %d %d\\n\",n/2-2,n/2-2);\r\n        else\r\n            printf(\"2 %d %d\\n\",n/2-1,n/2-1);\r\n    }\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t,n,k;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&k);\r\n        if(n%2)\r\n            printf(\"1 %d %d\\n\",n/2,n/2);\r\n        else if(n%4==0)\r\n            printf(\"%d %d %d\\n\",n/2,n/4,n/4);\r\n        else\r\n            printf(\"2 %d %d\\n\",n/2-1,n/2-1);\r\n    }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9901269393511989, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "d22ef2d4a6448bb8bab580356c25b6f5", "bug_code_uid": "1c4bc657d3b9a3f60399a064f2ac3fb4", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "986fbfc5dc3a34cb47b81e6fc01eb06e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int p[100],q[100],n,count,i,j;\n    while(scanf(\"%d\",&n)!=EOF){\n            count=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&p[i],&q[i]);\n    }\n\n    for(i=0;i<n;i++)\n        {\n            if((p[i]!=q[i])&&(p[i]>q[i]))\n                count++;\n        }\n\n        printf(\"%d\",count);\n    }\n        return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int p[100],q[100],n,count,i,j,r;\n    while(scanf(\"%d\",&n)!=EOF){\n            count=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&p[i],&q[i]);\n    }\n\n    for(i=0;i<n;i++)\n        {\n            if((p[i]!=q[i])&&(p[i]<=q[i]-2))\n                count++;\n        }\n\n        printf(\"%d\",count);\n    }\n        return 0;\n\n}\n"}
{"similarity_score": 0.5638629283489096, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "53780ebf55f16c190e9bd49688baf1c9", "bug_code_uid": "3031896de3de393bb72613e8a1bd27df", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "96583c2bb71dcf2561c12b5b6e3c738a", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a[3000],i,j,k=0,m=0;\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\ti=0;\n\twhile(i<n)\n\t{\n\t\tm=0;\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]==a[j])\n\t\t\t{\n\t\t\t\ta[i]++;\n\t\t\t\tk++;\n\t\t\t\tm=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(m==0)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",k);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint a[3000],i,j,k=0,m=0;\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\ti=0;\n\twhile(i<n)\n\t{\n\t\tm=0;\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(a[i]==a[j] && i!=j)\n\t\t\t{\n\t\t\t\ta[i]++;\n\t\t\t\tk++;\n\t\t\t\tm=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(m==0)\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",k);\n\treturn 0;\n}"}
{"similarity_score": 0.9180790960451978, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "ee3d1eb40ff32ea8b10a3728ed84882d", "bug_code_uid": "0215025499e6a8acc4f1dc6d0d11352d", "src_uid": "48f3ff32a11770f3b168d6e15c0df813", "apr_id": "854f71bb236f74ad8ddc87f7eb1517e4", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int n,m,a[100001],b,c[100001];\n\nmain()\n{\n\tint i,j,k;\n\twhile(~scanf(\"%d%d\",&n,&m))\n\t{\n\t\tb=0;\n\t\tfor(i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\t\twhile(m--)\n\t\t{\n\t\t\tscanf(\"%d\",&i);\n\t\t\tif(i==1)\n\t\t\t{\n\t\t\t\tscanf(\"%d%d\",&i,&j);\n\t\t\t\ta[i]=b-j;\n\t\t\t}\n\t\t\telse if(i==2)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&j);\n\t\t\t\tb+=j;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&i);\n\t\t\t\tprintf(\"%d\\n\",b+a[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n", "fixed": "int n,m,a[100001],b;\n\nmain()\n{\n\tint i,j,k;\n\twhile(~scanf(\"%d%d\",&n,&m))\n\t{\n\t\tb=0;\n\t\tfor(i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\t\twhile(m--)\n\t\t{\n\t\t\tscanf(\"%d\",&i);\n\t\t\tif(i==1)\n\t\t\t{\n\t\t\t\tscanf(\"%d%d\",&i,&j);\n\t\t\t\ta[i]=j-b;\n\t\t\t}\n\t\t\telse if(i==2)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&j);\n\t\t\t\tb+=j;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&i);\n\t\t\t\tprintf(\"%d\\n\",a[i]+b);\n\t\t\t}\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.9785794813979707, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "784593435d0aad3b98810654ee6b08c8", "bug_code_uid": "d54fe9cf341ec9f5b648b156e7e4f5eb", "src_uid": "7c483498f497f4291e3d33375c0ebd53", "apr_id": "7c1e823b6e32100f510a50b711bbad5d", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,a[12],num=0,l=0,h;\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"1\\n1\");\n    }\n    else\n    {\n        h=n/2;\n        for(i=h;i>0;i--)\n        {\n            if(n%i==0)\n            {\n                l=i;\n                num=n/i;\n                break;\n            }\n        }\n        printf(\"%d\\n\",num);\n        for(i=0;i<num;i++)\n        {\n            printf(\"%d \",l);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a[12],num=0,l=0;\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"1\\n1\");\n    }\n    else\n    {\n        for(i=9;i>0;i--)\n        {\n            if(n%i==0)\n            {\n                l=i;\n                num=n/i;\n                break;\n            }\n        }\n        printf(\"%d\\n\",num);\n        for(i=0;i<num;i++)\n        {\n            printf(\"%d \",l);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2268041237113402, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "2e4f7ab4a73349309ccd3da5c9e92218", "bug_code_uid": "cbed0bada9a483bfd913b26a13fed5a2", "src_uid": "bce9ebad1dc8bd5aae516c4ca9e551c0", "apr_id": "b71f0cbef18bef724bec407a7a01d7f4", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,ara[2000],i,j,b,k,t,d=0,w=0,x=100000,l;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(ara[i]>ara[j]){\n                b=ara[i];\n                ara[i]=ara[j];\n                ara[j]=b;\n            }\n        }\n    }\n    for(i=(ara[0]+1);i<(ara[n-1]-1);i++){\n            t=0;\n        for(l=0;l<n;l++){\n            if(ara[l]>=(i-1) && ara[l]<=(i+1)){\n                k=0;\n                t+=k;\n            }\n            else if(ara[l]<(i-1)){\n                k=(i-1-ara[l]);\n                t+=k;\n            }\n            else{\n                k=ara[l]-i-1;\n                t+=k;\n            }\n\n        }\n        w=t;\n        if(w<x){\n            x=w;d=i;\n        }\n    }\n    if(w==0)\n        x=0;\n    printf(\"%d %d\",d,x);\n\n}\n\n", "fixed": "#include<stdio.h>\n\n\nint main(){\n\n    int n,max=0,arr[1000];\n    scanf(\"%d\",&n);\n    for(int i=0;i<n ; i++){\n         scanf(\"%d\",&arr[i]);\n         if(arr[i]>max)max=arr[i];\n    }\n    int t=0,cost=0,mincost=10000000;\n    for(int i=1;i<=max; i++){\n            cost=0;\n        for(int j=0;j<n; j++){\n            if(arr[j]<i){\n                cost+=i-1-arr[j];\n            }\n            else if(arr[j]>i){\n                cost+=arr[j]-i-1;\n            }\n        }\n        if(cost<mincost){\n\n            t=i;\n            mincost=cost;\n        }\n\n    }\nprintf(\"%d %d\\n\",t,mincost);\n    return 0;\n}"}
{"similarity_score": 0.997737556561086, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9b307565eb17d07977ca5d5e0b054c7f", "bug_code_uid": "47c2025e50fbe8a6947e1dbcf0c41ac9", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "86975ffac91d9a84f85bc122700a0a86", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\n\nint main()\n{\n    char s[100000];\n    scanf(\"%s\", &s);\n    int n = strlen(s), a, b, S = 1, k, r;\n    a = s[n - 2] - '0';\n    b = s[n - 1] - '0';\n    if (n == 1) a = 0;\n    k = 2 * a + b;\n    if (k % 4 == 1) S += 2 + 3 + 4;\n    else if (k % 4 == 2) S += 4 + 9 + 6;\n    else if (k % 4 == 3) S += 8 + 7 + 4;\n    else S += 6 + 1 + 6;\n    r = k % 5;\n    printf(\"%d\", r);\n  \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\n\nint main()\n{\n    char s[100000];\n    scanf(\"%s\", &s);\n    int n = strlen(s), a, b, S = 1, k, r;\n    a = s[n - 2] - '0';\n    b = s[n - 1] - '0';\n    if (n == 1) a = 0;\n    k = 2 * a + b;\n    if (k % 4 == 1) S += 2 + 3 + 4;\n    else if (k % 4 == 2) S += 4 + 9 + 6;\n    else if (k % 4 == 3) S += 8 + 7 + 4;\n    else S += 6 + 1 + 6;\n    r = S % 5;\n    printf(\"%d\", r);\n  \n    return 0;\n}"}
{"similarity_score": 0.5340136054421769, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "af559bf0f8b152882fa15767276ed31a", "bug_code_uid": "a369c0339320b3f352c4a4774498e1a6", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "01774058ac9ed7a74d5cae08565ccb1c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int a,b,n,i,c;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n    scanf(\"%d%d\",&a,&b);\n    if(a%b==0)\n    {\n    printf(\"%d\\n\",0);\n    break;\n    }\n    for(i=1;i<=b;i++)\n    {\n    c=a+i;\n    if(c%b==0)\n    {\n    printf(\"%d\\n\",i);\n    break;\n    }\n    }   \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int a,b,n,x,c;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%d%d\",&a,&b);\n        \n        if(a%b==0)\n        printf(\"%d\\n\",0);\n        \n      else\n     {\n    c=a/b;\n    c=c+1;\n    x=b*c;\n    printf(\"%d\\n\",x-a);\n    }\n    }\nreturn 0;\n}"}
{"similarity_score": 0.7566137566137566, "equal_cnt": 21, "replace_cnt": 7, "delete_cnt": 11, "insert_cnt": 2, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "0cc895ee83e3efc01260b20ef10c015f", "bug_code_uid": "74b124495f90c639a61923523d8e73aa", "src_uid": "7c41fb6212992d1b3b3f89694b579fea", "apr_id": "162e6d8741ff22b94f1e62fda670f694", "difficulty": 900, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long max=0,n,x,y,sum=0;\n\tscanf(\"%lld\",&n);\n\tfor(long long i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tif((x*x+y*y)>max)\n\t\t{\n\t\t\tmax=x*x+y*y;\n\t\t\tsum=x+y;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",sum);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,x,y,d=0,i,z;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(d<x+y)\n\t\t\td=x+y;\n\t}\n\tprintf(\"%d\",d);\n}"}
{"similarity_score": 0.7301092043681747, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "1a32e8ab3b4bbf08ea967787e7c9e106", "bug_code_uid": "573e884f1f44e9464bf0ec5f9f84ef20", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "968f347df57c8cb83423c5225c2c4e45", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,i,a[3500]={0},t,j,k=0,need=0,max=0,min=3500;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\ta[t]++;\n\t\tif(a[t]>1)\n\t\t{\n\t\t\tfor(j=t+1;j<3500;j++)\n\t\t\t{\n\t\t\t\tneed++;\n\t\t\t\tif(a[j]==0)\n\t\t\t\t{\n\t\t\t\t\ta[j]++;\n\t\t\t\t\ta[t]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",need);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,i,a[10000]={0},t,j,k=0,need=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\ta[t]++;\n\t\tif(a[t]!=1)\n\t\t{\n\t\t\tfor(j=t+1;j<10000;j++)\n\t\t\t{\n\t\t\t\tneed++;\n\t\t\t\tif(a[j]==0)\n\t\t\t\t{\n\t\t\t\t\ta[j]=1;\n\t\t\t\t\ta[t]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",need);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9686242960579243, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "31373ca39c964ed6911532c9c89a9a30", "bug_code_uid": "45ed79c81fdc9d9ef2c3c7fe715aaf22", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "818bba8adde00e7628a509a0db9d5cc9", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint a[100000], posotita = 0, n, i, temp, max1 = 0, max2 = 0;\n\n\t//printf(\"Give the number of bottles: \");\n\tscanf(\"%d\", &n);\n\n\tfor(i = 0; i < n; i++) {\n        scanf(\"%d\", &temp);\n        posotita += temp;\n\t}\n\n\tfor(i = 0; i < n; i++) {\n        scanf(\"%d\", &temp);\n        a[i] = temp;\n\t}\n\n\tfor(i = 0; i < n; i++) {\n        if(a[i] >= max1){\n            max2 = max1;\n            max1 = a[i];\n        } else if (a[i] > max2) {\n            max2 = a[i];\n        }\n\t}\n\tif(posotita <= max1 + max2) {\n        printf(\"YES\");\n\t} else {\n        printf(\"NO\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tint a[100000], n, i, temp, max1 = 0, max2 = 0;\n\tlong long posotita = 0;\n\n\t//printf(\"Give the number of bottles: \");\n\tscanf(\"%d\", &n);\n\n\tfor(i = 0; i < n; i++) {\n        scanf(\"%d\", &temp);\n        posotita += temp;\n\t}\n\n\tfor(i = 0; i < n; i++) {\n        scanf(\"%d\", &temp);\n        a[i] = temp;\n\t}\n\n\tfor(i = 0; i < n; i++) {\n        if(a[i] >= max1){\n            max2 = max1;\n            max1 = a[i];\n        } else if (a[i] > max2) {\n            max2 = a[i];\n        }\n\t}\n\tif(posotita <= max1 + max2) {\n        printf(\"YES\");\n\t} else {\n        printf(\"NO\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9971014492753624, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3541027b16107ac36e7e3ec3f6d1ea69", "bug_code_uid": "1e51fd2b9e0f94a464f088adbc98c83e", "src_uid": "1cfd0e6504bba7db9ec79e2f243b99b4", "apr_id": "3b6a3620466ae1a6e234d5969a2aae84", "difficulty": 1200, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint a[114514];\nint b[114514];\nint v[114514];\nint c[114514];\nint vv[114514];\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    //memset(v,0,sizeof(v));\n    for(int i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]<=n||v[a[i]]==0){\n            b[i]=a[i];\n            v[a[i]]=1;\n        }\n\n\n    }\n    int len=1;\n    for(int i=1; i<=n; i++)\n    {\n        if(v[i]==0)\n        {\n            c[len++]=i;\n        }\n    }\n    int icg=1;\n    for(int i=1; i<=n; i++)\n    {\n        if(b[i]==0){\n            b[i]=c[icg++];\n        }\n\n    }\n    for(int i=1; i<=n; i++)\n    {\n        printf(\"%d \",b[i]);\n    }\n    //printf(\"%d\\n\",a[n]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint a[114514];\nint b[114514];\nint v[114514];\nint c[114514];\nint vv[114514];\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    //memset(v,0,sizeof(v));\n    for(int i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]<=n&&v[a[i]]==0){\n            b[i]=a[i];\n            v[a[i]]=1;\n        }\n\n\n    }\n    int len=1;\n    for(int i=1; i<=n; i++)\n    {\n        if(v[i]==0)\n        {\n            c[len++]=i;\n        }\n    }\n    int icg=1;\n    for(int i=1; i<=n; i++)\n    {\n        if(b[i]==0){\n            b[i]=c[icg++];\n        }\n\n    }\n    for(int i=1; i<=n; i++)\n    {\n        printf(\"%d \",b[i]);\n    }\n    //printf(\"%d\\n\",a[n]);\n    return 0;\n}\n"}
{"similarity_score": 0.991374936580416, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "144b39af1713314211ee4992286500cc", "bug_code_uid": "bad419a8de05e285afb8bdac78d736b3", "src_uid": "6208dbdf9567b759b0026db4af4545a9", "apr_id": "316e4aa3e3ccbbdb732433a11e76b3e4", "difficulty": 1300, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int n, a, b, i;\n    scanf(\"%d%d%d\", &n, &a, &b);\n    \n    char s[n];\n    scanf(\"%s\", s);\n    \n    int flag = 0;\n    \n    int ans = 0;\n    \n    for (i = 0; i < n; i++) {\n        if (s[i] == '*')\n            flag = 0;\n        else {\n            if (flag) {\n                if (s[i-1] != 'b' && b) {\n                    s[i] = 'b';\n                    b--;\n                    ans++;\n                }\n                else if (a) {\n                    s[i] = 'a';\n                    a--;\n                    ans++;\n                }\n            }\n            else {\n                if (a > b) {\n                    s[i] = 'a';\n                    a--;\n                    ans++;\n                }\n                else if (b) {\n                    s[i] = 'b';\n                    b--;\n                    ans++;\n                }\n            }\n            \n            flag = 1;\n        }\n    }\n    \n    printf(\"%d\", ans);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    int n, a, b, i;\n    scanf(\"%d%d%d\", &n, &a, &b);\n    \n    char s[n];\n    scanf(\"%s\", s);\n    \n    int flag = 0;\n    \n    int ans = 0;\n    \n    for (i = 0; i < n; i++) {\n        if (s[i] == '*')\n            flag = 0;\n        else {\n            if (flag) {\n                if (s[i-1] != 'b' && b) {\n                    s[i] = 'b';\n                    b--;\n                    ans++;\n                }\n                else if (s[i-1] != 'a' && a) {\n                    s[i] = 'a';\n                    a--;\n                    ans++;\n                }\n            }\n            else {\n                if (a > b) {\n                    s[i] = 'a';\n                    a--;\n                    ans++;\n                }\n                else if (b) {\n                    s[i] = 'b';\n                    b--;\n                    ans++;\n                }\n            }\n            \n            flag = 1;\n        }\n    }\n    \n    printf(\"%d\", ans);\n    \n    return 0;\n}"}
{"similarity_score": 0.9505428226779252, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1d14a70bad1c5942372862c5fc889910", "bug_code_uid": "665c74b62a841814f09e744611969524", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "4714edf8c42861ceb29b3f51e38b1b56", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t1 = 1, t2 = 1, nextTerm = 0, n;\n\n    printf(\"Enter a positive number: \");\n    scanf(\"%d\", &n);\n    printf(\"O\");\n    nextTerm = t1 + t2;\n\tint i;\n    while(nextTerm <= n)\n    {\n    \tfor(i=0;i<nextTerm-t2-1;i++){\n    \t\tprintf(\"o\");\n\t\t}\n        printf(\"O\");\n        t1 = t2;\n        t2 = nextTerm;\n        nextTerm = t1 + t2;\n    }\n   \tfor(i=0;i<n-t2;i++){\n   \t\tprintf(\"o\");\n\t}\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int t1 = 1, t2 = 1, nextTerm = 0, n;\n\n    scanf(\"%d\", &n);\n    printf(\"O\");\n    nextTerm = t1 + t2;\n\tint i;\n    while(nextTerm <= n)\n    {\n    \tfor(i=0;i<nextTerm-t2-1;i++){\n    \t\tprintf(\"o\");\n\t\t}\n        printf(\"O\");\n        t1 = t2;\n        t2 = nextTerm;\n        nextTerm = t1 + t2;\n    }\n   \tfor(i=0;i<n-t2;i++){\n   \t\tprintf(\"o\");\n\t}\n    \n    return 0;\n}"}
{"similarity_score": 0.996551724137931, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "63aa1afa2c31dd409c879a6f2d1ce95b", "bug_code_uid": "0194120b30bcc1e94149a9191282a568", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "3ee25a326b5ddd8b6f1de0d3cf35fb0d", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int ch[40000]= {0},cp[40000];\n    char kh[600][600],arr[200000];\n    int a,b=0,c,d,e,i=0,j=0,k=0,l=0,tep,temp,m,n,x,y;\n    double z,go;\n\n    scanf(\"%d%d\",&a,&b);\n    j=k=l=m=n=0;\n    j=1;\n    for(i=0; i<a-2; i++)\n    {\n        scanf(\"%d\",&ch[i]);\n\n    }\n    while(j<a-1)\n    {\n        j+=ch[j-1];\n        if(j==b)\n        {\n            printf(\"YES\");\n            return 0;\n        }\n        if(j>b)\n        {\n            printf(\"NO\");\n            return 0;\n        }\n\n\n    }\n   printf(\"NO\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int ch[40000]= {0},cp[40000];\n    char kh[600][600],arr[200000];\n    int a,b=0,c,d,e,i=0,j=0,k=0,l=0,tep,temp,m,n,x,y;\n    double z,go;\n\n    scanf(\"%d%d\",&a,&b);\n    j=k=l=m=n=0;\n    j=1;\n    for(i=0; i<a-1; i++)\n    {\n        scanf(\"%d\",&ch[i]);\n\n    }\n    while(j<a)\n    {\n        j+=ch[j-1];\n        if(j==b)\n        {\n            printf(\"YES\");\n            return 0;\n        }\n        if(j>b)\n        {\n            printf(\"NO\");\n            return 0;\n        }\n\n\n    }\n   printf(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.988388295401765, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c08cb861673ab50d49403d04e1e5dadb", "bug_code_uid": "487c1b88ff66077167e2ce0616aabe2a", "src_uid": "c4b7265ff4332225c0d5617c3233a910", "apr_id": "39b565bf269646638ab0efc8ae8114b8", "difficulty": 1600, "tags": ["dsu", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint koncni [110];\nint fab [110][110];\n\nint main(){\n\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tfor(int i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &koncni[i]);\n\t}\n\n\tint a;\n\tint b;\n\n\tfor (int i = 1; i <=n; i++){\n\t\tscanf(\"%d\",&a);\n\n\t\tif (i - a >= 1){\n\t\t\tfab[i][i - a] = 1;\n\t\t\tfab[i - a][i] = 1;\n\t\t}\n\t\tif (a + i <= n){\n\t\t\tfab[i][i + a] = 1;\n\t\t\tfab[i + a][i] = 1;\n\t\t}\n\n\t}\n\t//int je;\n\n\tfor (int i = 1; i <= n; i++ ){\n\t\tfor (int j = 1; j <= n; j++){\n\t\t\tfor (int z = 1; z <= n; z++){\n\t\t\t\tif ((fab[i][z] && fab[z][j])||\n\t\t\t\t\t fab[i][z] && fab [j][z]){\n\n\n\t\t\t\t\tfab[i][j] = 1;\n\t\t\t\t\tfab[j][i] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tint gor = 0;\n\tint levo = 0;\n\n\n\tfor (int i = 1; i <= n; i++){\n\t\tfab[i][i] = 1;\n\t}\n\tint je = 1;\n\n\tfor (int i = 1; i <= n; i++){\n\t\tif (fab[i][koncni[i]]==0){\n\t\t\tje = 0;\n\t\t\tbreak;\n\t\t}\n\n\n\t}\n\n\tif (je == 1){\n\t\tprintf(\"YES\");\n\t}\n\telse{\n\t\tprintf(\"NO\");\n\t}\n\n\n\tprintf(\"\\n\");\n\n\tfor (int i = 1; i <= 7; i++){\n\t\tfor (int j = 1; j <= 7 ; j++ ){\n\t\t\tprintf(\"%d \",fab[i][j] );\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n\n\n\t\t\n\n\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint koncni [110];\nint fab [110][110];\n\nint main(){\n\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tfor(int i = 1; i <= n; i++){\n\t\tscanf(\"%d\", &koncni[i]);\n\t}\n\n\tint a;\n\tint b;\n\n\tfor (int i = 1; i <=n; i++){\n\t\tscanf(\"%d\",&a);\n\n\t\tif (i - a >= 1){\n\t\t\tfab[i][i - a] = 1;\n\t\t\tfab[i - a][i] = 1;\n\t\t}\n\t\tif (a + i <= n){\n\t\t\tfab[i][i + a] = 1;\n\t\t\tfab[i + a][i] = 1;\n\t\t}\n\n\t}\n\t//int je;\n\n\tfor (int i = 1; i <= n; i++ ){\n\t\tfor (int j = 1; j <= n; j++){\n\t\t\tfor (int z = 1; z <= n; z++){\n\t\t\t\tif ((fab[i][z] && fab[z][j])||\n\t\t\t\t\t fab[i][z] && fab [j][z]){\n\n\n\t\t\t\t\tfab[i][j] = 1;\n\t\t\t\t\tfab[j][i] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tint gor = 0;\n\tint levo = 0;\n\n\n\tfor (int i = 1; i <= n; i++){\n\t\tfab[i][i] = 1;\n\t}\n\tint je = 1;\n\n\tfor (int i = 1; i <= n; i++){\n\t\tif (fab[i][koncni[i]]==0){\n\t\t\tje = 0;\n\t\t\tbreak;\n\t\t}\n\n\n\t}\n\n\tif (je == 1){\n\t\tprintf(\"YES\");\n\t}\n\telse{\n\t\tprintf(\"NO\");\n\t}\n\n/*\n\n\tprintf(\"\\n\");\n\n\tfor (int i = 1; i <= 7; i++){\n\t\tfor (int j = 1; j <= 7 ; j++ ){\n\t\t\tprintf(\"%d \",fab[i][j] );\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n*/\n\n\n\n\t\t\n\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.9678571428571429, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "00e39843f3bcf47dc2a568d68c76e45d", "bug_code_uid": "4fa766acebe3c5b701f396f2f098c1c2", "src_uid": "7d774a003d2e3e8ae6fe1912b3998c96", "apr_id": "1f1237b1c132d4ead46fcf021dbefbf3", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n  long long int p,n,m;\r\n  scanf(\"%d\",&p);\r\n  while(p--)\r\n  {\r\n    long long int sum=0;\r\n  scanf(\"%lld%lld\",&n,&m);\r\n  for(int i=1;i<=m;i++)\r\n  {\r\n    sum=sum+i;\r\n  }\r\n  for(int i=2;i<=n;i++)\r\n  {\r\n     sum=sum+m*i;\r\n  }\r\n   printf(\"%lld\\n\",sum);\r\n  }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n  int p,n,m;\r\n  scanf(\"%d\",&p);\r\n  while(p--)\r\n  {\r\n    long long int sum=0;\r\n  scanf(\"%d%d\",&n,&m);\r\n  for(int i=1;i<=m;i++)\r\n  {\r\n    sum=sum+i;\r\n  }\r\n  for(int i=2;i<=n;i++)\r\n  {\r\n     sum=sum+m*i;\r\n  }\r\n   printf(\"%lld\\n\",sum);\r\n  }\r\n}"}
{"similarity_score": 0.9134287661895024, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4a311484af91bc8a1c94939c96748877", "bug_code_uid": "ad2aafd5e2177883612e0d55bf173f1b", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "772e6ca6ff1c92cc40307fbf536f122b", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long n;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long arr[200005];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tarr[i]=0;\n\t\t}\n\t\tfor(long long i=0;i<n;i++)\n\t\t{\n\t\t\tlong long p;\n\t\t\tscanf(\"%lld\",&p);\n\t\t\tarr[p]++;\n\t\t}\n\t\tlong long max=arr[0];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(max<=arr[i])\n\t\t\t{\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tlong long count=0;\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(arr[i]!=0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(max>count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count);\n\t\t}\n\t\telse if(max==count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count-1);\n\t\t}\n\t\telse if(max<count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",max);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long t;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tlong long n;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long arr[200005];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tarr[i]=0;\n\t\t}\n\t\tlong long max=0,count=0;\t\n\t\tfor(long long i=0;i<n;i++)\n\t\t{\n\t\t\tlong long p;\n\t\t\tscanf(\"%lld\",&p);\n\t\t\tarr[p]++;\n\t\t\tif(max<=arr[p])\n\t\t\t{\n\t\t\t\tmax=arr[p];\n\t\t\t}\n\t\t\tif(arr[p]==1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\n\n\t\t}\n\t\t/*long long max=arr[0];\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(max<=arr[i])\n\t\t\t{\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tlong long count=0;\n\t\tfor(long long i=0;i<200005;i++)\n\t\t{\n\t\t\tif(arr[i]!=0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}*/\n\t\tif(max>count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count);\n\t\t}\n\t\telse if(max==count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",count-1);\n\t\t}\n\t\telse if(max<count)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",max);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7068273092369478, "equal_cnt": 21, "replace_cnt": 7, "delete_cnt": 11, "insert_cnt": 2, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "a5f4c6993ce882d34cd22165147fb7c7", "bug_code_uid": "a69cabb18b31894a50c5d3423336445c", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "063b23e000caf533ed3d5bbaa62522fc", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{int t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{ long long int n,a,b,d,min;\n scanf(\"%lld\",&n);\nmin=n;\nfor(a=1;a<=(n/2);a++)\n{ for(b=(n-a)/2;b>=a;b--)\n{ d=2*(a+b)-n;\nif(d<min&&d>=0)\nmin=d;\nelse\nmin=min+1-1;\nif(min==0)\nbreak;\nelse\ncontinue;}\n}\nprintf(\"%lld\\n\",min);\n}\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{int t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{ long long int n,d;\n scanf(\"%lld\",&n);\nif(n==2)\nd=2;\nelse if(n%2!=0)\nd=1;\nelse\nd=0;\n printf(\"%lld\\n\",d);}\n  return 0;\n}"}
{"similarity_score": 0.7061855670103093, "equal_cnt": 16, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "469b0ffe4c0c2c2fbac8f582390fb4a3", "bug_code_uid": "81e0da8972a3e6eb9c85adfe48e6e084", "src_uid": "8bbec86e427e26158393bbfbf1a067fe", "apr_id": "3b0fb5564f2c5dea00139b13d5a4e958", "difficulty": 1100, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n\n    unsigned int d, s, n, diff;\n    scanf(\"%u %u\", &s, &d);\n\n    if(s==0 || d==0) printf(\"0\");\n\n    else if(s>=(2*d)) printf(\"%u\",d);\n    else if(d>=(2*s)) printf(\"%u\",s);\n\n    else {\n        n=s+d;\n        diff=n/3;\n        printf(\"%u\", diff);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n\n    unsigned int d, s, n,t, diff;\n    scanf(\"%u\", &t);\n    while(t--)\n    {\n        scanf(\"%u %u\", &s, &d);\n\n        if(s==0 || d==0)\n            printf(\"0\\n\");\n\n        else if(s>=(2*d))\n            printf(\"%u\\n\",d);\n        else if(d>=(2*s))\n            printf(\"%u\\n\",s);\n\n        else\n        {\n            n=s+d;\n            diff=n/3;\n            printf(\"%u\\n\", diff);\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.5557729941291585, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8896bb33ba0dad8d8fde7020361a2d65", "bug_code_uid": "40ad901bf882b6febcb51c3ca27c4740", "src_uid": "eb3d8259ca598c3c455ddfdbe433cb78", "apr_id": "61fb3a3ee28b34185d9b89a2d571c3c2", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,n,r;\n\tlong long s;\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d%d\",&n,&r);\n\t\ts=0;\n\t\tif(r<n)\n\t\t{\n\t\t\tfor(int j=r;j>=1;j--)\n\t\t\ts+=j;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=n-1;j>=1;j--)\n\t\t\ts+=j;\n\t\t\ts+=1;\n\t\t}\n\t    printf(\"%lld\\n\",s);\t\n\t}\n\treturn 0;\n } ", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tlong long s,n,r;\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&n,&r);\n\t\ts=0;\n\t\tif(r<n)\n\t\ts=(1+r)*r/2;\n\t\telse\n\t\ts=(n-1)*n/2+1;\n\t    printf(\"%lld\\n\",s);\t\n\t}\n\treturn 0;\n } "}
{"similarity_score": 0.9432773109243697, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2df3f4011c69cdd43b09bedb00b08a9a", "bug_code_uid": "bd3ebfec50725b053d7493c24afb07ca", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "bcbb935e06d0b70371481bba5e9fadec", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main (){\n\nint m,n,sum=0,i,k,w;\nint csum=0;\nint mi[100];\nint ci[1000];\nscanf(\"%d\",&n);\nfor(i=0 ;i<n ;i++){\n\n\n    scanf(\"%d\",&mi[i]);\n    scanf(\"%d\",&ci[i]);\n}\n\nfor(i=0 ;i<n ;i++){\n\n\n    if (mi[i] > ci[i]){\n\n        sum=sum+1;\n    }\n    else if (mi[i] < ci[i])\n\n        csum=csum+1;\n    }\n    else\n    {\n        sum=csum=0;\n    }\n\n}\n\n\n\n\nif(sum > csum){\n\n    printf(\"Mishka\");\n\n}\nelse if(sum==csum){\n\n\n    printf(\"Friendship is magic!^^\");\n}\nelse {\n\n\n    printf(\"Chris\");\n}\n\n\n}\n", "fixed": "#include <stdio.h>\nint main (){\n\nint m,n,sum=0,i,k,w;\nint csum=0;\nint mi[100];\nint ci[1000];\nscanf(\"%d\",&n);\nfor(i=0 ;i<n ;i++){\n\n\n    scanf(\"%d\",&mi[i]);\n    scanf(\"%d\",&ci[i]);\n}\n\nfor(i=0 ;i<n ;i++){\n\n\n    if (mi[i] > ci[i]){\n\n        sum=sum+1;\n    }\n    else if (mi[i] < ci[i])\n\n        csum=csum+1;\n\n\n\n}\n\n\n\n\n\nif(sum > csum){\n\n    printf(\"Mishka\");\n\n}\nelse if(sum==csum){\n\n\n    printf(\"Friendship is magic!^^\");\n}\nelse {\n\n\n    printf(\"Chris\");\n}\n\n\n}\n"}
{"similarity_score": 0.6066350710900474, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "494578f7dc506863f458eaae27e046c0", "bug_code_uid": "c317b77184b05ffbde9f1a9bd951f874", "src_uid": "653455bb6762effbf7358d75660a7689", "apr_id": "624df3f4a702f0ca1ac8d941fceb11b0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(int i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(int i=n-1;i>=0;i--)\n    {\n        if(a[i]!=a[i-1])break;\n    }\n    printf(\"%d\",i);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,door[210000],i,c=0,k,dc[2],j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&door[i]);\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tif(door[i]!=door[i-1])\n\t\tbreak;\n\t}\n\tprintf(\"%d\",i);\n}\n"}
{"similarity_score": 0.39697542533081287, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "62543ff894fb7508c75d251ecebda8af", "bug_code_uid": "e0f578946624cab92f28966a1b3b3302", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "655c0f87424cd1ade29accd35c6dd0e0", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n,k;\nscanf(\"%d %d\\n\",&n,&k);\nint ara[n],i,a=0,j,r=15000000,m;\nfor(i=0;i<n;i++){\nscanf(\"%d\",&ara[i]);\n}\nfor(i=0;i<=n-k;i++){\nfor(j=i;j<i+k;j++){\na=a+ara[j];\n}\nif(a<r){\nr=a;\nm=i+1;\n}\na=0;\n}\nprintf(\"%d\\n\",m);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\nint n,k;\nscanf(\"%d %d\",&n,&k);\nint ara[n];\nint a,x=0,r,l,j;\n\nfor(j=0;j<n;j++){\nscanf(\"%d\",&ara[j]);\nif(j<k){\nx=x+ara[j];\n}\n}\nr=1;\na=x;\nfor(l=k;l<n;l++){\nx=x+ara[l]-ara[l-k];\nif(x<a){\na=x;\nr=l-k+2;\n}\n}\nprintf(\"%d\\n\",r);\nreturn 0;\n}\n"}
{"similarity_score": 0.871264367816092, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "395d0f1a5dcb7093f124f42696490df3", "bug_code_uid": "fc18744bb5a8fbcede583c7563ab315f", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "c995686b0b873c3d15f8b89a66db0ca1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n \nint main()\n{\n  int n;\n  scanf(\"%d\",&n);\n  char c[n+1];\n  int i;\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%c\",&c[i]);\n  }\n  c[i]='\\0';\n  int x=0,y=0,i=0;\n  while(c[i]!='\\0')\n  {\n    if(c[i]=='A')\n   {\n     x++;\n   }\n    if(c[i]=='D')\n   {\n     y++;\n   }\n    i++;\n  }\n  if(x>y)\n  {\n    printf(\"Anton\");\n  }\n else if(x<y)\n  {\n    printf(\"Danik\");\n  }\n else\n  {\n    printf(\"Friendship\"); \n  }\n  return 0;\n}", "fixed": "#include<stdlib.h>\n \nint main()\n{\n  int n;\n  scanf(\"%d\",&n);\n  char *c=(char*)malloc((n+1)*sizeof(char));\n  int i;\n  for(i=0;i<=n;i++)\n  {\n    scanf(\"%c\",&c[i]);\n  }\n  int x=0,y=0;\n  i=0;\n  while(c[i])\n  {\n    if(c[i]=='A')\n   {\n     x++;\n   }\n    if(c[i]=='D')\n   {\n     y++;\n   }\n    i++;\n  }\n  if(x>y)\n  {\n    printf(\"Anton\");\n    \n  }\n else if(x<y)\n  {\n    printf(\"Danik\");\n  }\n else\n  {\n    printf(\"Friendship\"); \n  }\n  return 0;\n}"}
{"similarity_score": 0.9839883551673945, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0600b4eb12c90038d6b850a6b8615bce", "bug_code_uid": "d3a33c4ee0b0efc91c57168da0eb1393", "src_uid": "5e449867d9fcecc84333b81eac9b5d92", "apr_id": "065d9ad9e7f15161a62cea9e99e0d5da", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int ara[100];\n    int i,k;\n    int c[100]={0};\n    int n;\n    scanf(\"%d\",&n);\n\n        for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        c[ara[i]]=1;\n    }\n    for(i=1;i<=3000;i++)\n    {\n        if(c[i]!=1)\n        {\n            printf(\"%d\\n\",i);\n            break;\n        }\n    }\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int ara[10000];\n    int i,k;\n    int c[10000]={0};\n    int n;\n    scanf(\"%d\",&n);\n\n        for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        c[ara[i]]=1;\n    }\n    for(i=1;;i++)\n    {\n        if(c[i]!=1)\n        {\n            printf(\"%d\\n\",i);\n            break;\n        }\n    }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.5458750963762529, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "064086f901451bc24d3ba4e19a198d1d", "bug_code_uid": "b9f1a9de1a37734a623a3b62a87a5d97", "src_uid": "801bf7c73c44c68eaa61c714d5aedf50", "apr_id": "dfb9b1f5f8d2454e6baf838b8656fe14", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,j;\r\n    char s[27];\r\n    int b[26]={0};\r\n    scanf(\"%d\",&t);\r\n    for(int i=1;i<=t;i++){\r\n    \tfor(j=0;j<26;j++)\r\n    \tb[j]=0;\r\n        scanf(\"%s\",s);\r\n        int num=strlen(s);\r\n        for(j=0;j<num;j++)\r\n        \tb[s[j]-'a']+=1;\r\n        for(j=0;j<num;j++){\r\n\t\t\tif(b[j]!=1){\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}}\r\n\t\tif(j==num)\r\n\t\t\tprintf(\"YEs\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,j;\r\n    char s[27];\r\n    int b[26]={0};\r\n    scanf(\"%d\",&t);\r\n    for(int i=1;i<=t;i++){\r\n    \tfor(j=0;j<26;j++)\r\n    \tb[j]=0;\r\n    \tint flag=0;\r\n    \tint flag2=0;\r\n        scanf(\"%s\",s);\r\n        int num=strlen(s);\r\n        for(j=0;j<num;j++){\r\n        \tif(s[j]=='a')\r\n        \t\tflag2++;\r\n        \tif(j+1!=num){\r\n        \t  if(flag2==0){\r\n        \t  \tif(s[j]-'a'<s[j+1]-'a'){\r\n        \t  \t\tflag++;\r\n        \t  \t\tprintf(\"NO\\n\");\r\n\t\t\t\t\tbreak;}}\r\n\t\t\t  else\r\n\t\t\t  \tif(s[j]-'a'>s[j+1]-'a'){\r\n        \t  \t\tflag++;\r\n        \t  \t\tprintf(\"NO\\n\");\r\n\t\t\t\t\tbreak;}\r\n        \t  \t}}\r\n        if(flag==0){\r\n        for(j=0;j<num;j++)\r\n        \tb[s[j]-'a']+=1;\r\n        for(j=0;j<num;j++){\r\n\t\t\tif(b[j]!=1){\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}}\r\n\t\tif(j==num)\r\n\t\t\tprintf(\"YEs\\n\");}\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.888135593220339, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "05d058c81d44166bc2d4c1b9ee318482", "bug_code_uid": "33751e95c2f61c2b4003d3ad5d6159e6", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "780fa7b50efbcb8aa5a66d1d22013cae", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint compare(const void* x, const void* y)\n{\n    int* a = (int*) x;\n    int* b = (int*) y;\n    if (*a < *b)\n        return -1;\n    else if (*a == *b)\n        return 0;\n    else\n        return 1;\n}\n\nint main()\n{\n    int i, n;\n    long long result = 0;\n    scanf(\"%d\", &n);\n    int a[n];\n    for (int i = 0; i < n; ++i)\n        scanf(\"%d\", a + i);\n    qsort(a, n, sizeof(int), compare);\n    for (int i = 0; i < n - 1; ++i)\n        result += (2 + i) * a[i];\n    result += a[n - 1] * n;\n    printf(\"%I64d\\n\", result);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint compare(const void* x, const void* y)\n{\n    int* a = (int*) x;\n    int* b = (int*) y;\n    if (*a < *b)\n        return -1;\n    else if (*a == *b)\n        return 0;\n    else\n        return 1;\n}\n\nint main()\n{\n    int i, n;\n    long long result, sum = 0;\n    scanf(\"%d\", &n);\n    int a[n];\n    for (i = 0; i < n; ++i)\n    {\n        scanf(\"%d\", a + i);\n        sum += a[i];\n    }\n    qsort(a, n, sizeof(int), compare);\n    result = sum;\n    for (i = 0; i < n - 1; ++i)\n    {\n        result += sum;\n        sum -= a[i];\n    }\n    printf(\"%I64d\\n\", result);\n    return 0;\n}"}
