{"similarity_score": 0.4319419237749546, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "13ab2a9b2229911af757014b12b899b2", "bug_code_uid": "a2e8146fbb5694437da7fef724701c09", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "00fc2113c9513f22086c6591f32ef942", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint count=0,n;\nint point[1010];\nscanf(\"%d\",&n);\nfor(int j=0;<n;j++)\n{\nscanf(\"%d\",&point[j]);\nif(j>0&&(point[j]-point[j-1]>0))\ncount++;\n}\nprintf(\"%d\",count);\nreturn 0;\n}", "fixed": "#include<stdio.h> \nint main()\n{\n\tint count=0,n,max,min;\n\tint point[1010];\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&point[0]);\n\tmax=point[0];\n\tmin=point[0];\n\tfor(int i=1;i<n;i++)\n\t{\n\t\t\n\t\tscanf(\"%d\",&point[i]);\n\t\tif(max<point[i])\n\t\t{\n\t\t\tmax=point[i];\n\t\t\t\tcount++;\n\t\t}\n\t\tif(min>point[i])\n\t\t{\n\t\t\tmin=point[i];\n\t\t\tcount++;\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}"}
{"similarity_score": 0.492379835873388, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "3e5e292fb28874cab804f3a209dc4aef", "bug_code_uid": "f812e8e239f754d1d52ed3bcad276311", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "3bbff3e17fc2a9117f4b2bb515a6df95", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,sum = 0,k;\n    scanf(\"%d\",&n);\n    int a[n][n];\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            sum  = sum + a[i][j];\n        }\n    }\n    if(sum == 0){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,x[100],y[100],z[100];\n    int sumx = 0,sumy = 0,sumz = 0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&x[i],&y[i],&z[i]);\n    }\n    for(i=0;i<n;i++){\n        sumx = sumx + x[i];\n        sumy = sumy + y[i];\n        sumz = sumz + z[i];\n    }\n    if(sumx == 0 && sumy == 0 && sumz == 0){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.5379023883696781, "equal_cnt": 20, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 13, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "48fd62e4776397456dd4ad9677ebc311", "bug_code_uid": "53aa65b388387faa517f43e62d2e2754", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "faa1ed34a0a3ea18f343ade2653783b2", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\nint t;\nscanf(\"%d\", &t);\nwhile (t>0) {\nlong long n=0;\nlong long k=0;\nlong steps=0;\nscanf(\"%lld %lld\",&n, &k);\n//printf(\"%ld %ld\\n\", n, k);\n\nwhile (n>0) {\n    if (n%k==0) {\n        n=n/k;\n        steps++;\n    }\n    else {\n        n--;\n        steps++;\n    }\n}\nprintf(\"%ld\\n\", steps);\nt--;\n}\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t>0)\n    {\n        long long n=0;\n        long long k=0;\n        long long steps=0;\n        scanf(\"%lld %lld\",&n, &k);\n//printf(\"%ld %ld\\n\", n, k);\n        while (n>0)\n            {\n                if (n%k==0)\n                {\n                    n=n/k;\n                    steps++;\n                }\n                else\n                {\n                    steps=steps+n%k;\n                    n=n-n%k;\n                }\n                //printf(\"n=%lld steps=%lld\\n\",n, steps);\n            }\n            printf(\"%lld\\n\", steps);\n        \n        t--;\n    }\n}\n\n"}
{"similarity_score": 0.9830508474576272, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "da2ed042bef1a30bda6151b91c0b4818", "bug_code_uid": "43eb019b814e898a3956a5a1c1d56670", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "3ade7ea1dd9e9ee3ab9423ff21d3dc98", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cal(int x)\n{\n    int m=0;\n    while (x!=1){\n        \n    if(x%6==0)\n    {\n        x=x/6;\n    }\n    else {\n       x=x+x;\n       if(x%6!=0)\n       {\n           return -1;\n           break;\n           \n       }\n       \n    }\n   \n    m=m+1;\n    }\n    return m;\n}\n\nint main()\n{\n    int n,n1;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n{\n       scanf(\"%d\",&n1);\n       int result=cal(n1);\n       printf(\"%d\",result);\n \n}\n}\n", "fixed": "#include <stdio.h>\nint cal(int x)\n{\n    int m=0;\n    while (x!=1){\n        \n    if(x%6==0)\n    {\n        x=x/6;\n    }\n    else {\n       x=x*2;\n       if(x%6!=0)\n       {\n           return -1;\n           break;\n           \n       }\n       \n    }\n   \n    m=m+1;\n    }\n    return m;\n}\n\nint main()\n{\n    int n,n1;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n{\n       scanf(\"%d\",&n1);\n       int result=cal(n1);\n       printf(\"%d\\n\",result);\n \n\n}\n}"}
{"similarity_score": 0.7437722419928826, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "60f1843b5572671adfda5d10e4e8bf5e", "bug_code_uid": "127d824339e6c3801f00e22f1aaffddb", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "685d4e1b1ac0e91feb50a963727c6ae5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint i,n,k=0;\n\tchar a[6];\n\tscanf(\"%d\",&n);\n\tgetchar();\n\n\tfor(i=0;i<n;i++){\n        gets(a);\n\t\tif(strcmp(a,\"x++\")==0 || strcmp(a,\"++x\")==0){\n\t\t\tk=k+1;}\n\t\t\tif(strcmp(a,\"x--\")==0 || strcmp(a,\"--x\")==0){\n\t\t\t\tk=k-1;}}\n\t\t\t\tprintf(\"%d\",k);}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint i,n,k=0;\n\tchar a[6];\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tfor(i=0;i<n;i++){\n\tgets(a);\n\t\n\t\t\n\t\tif(strcmp(a,\"X++\")==0 || strcmp(a,\"++X\")==0){\n\t\t\tk=k+1;}\n\t\t\tif(strcmp(a,\"X--\")==0 || strcmp(a,\"--X\")==0){\n\t\t\t\tk=k-1;}}\n\t\t\t\tprintf(\"%d\",k);}"}
{"similarity_score": 0.2869757174392936, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "843b11023d8b015dfc587512f1df0e3e", "bug_code_uid": "d6b04ff79aa8252b57ed36e5b0cf72c3", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "078c306c474f2646a4db6acc8f1da281", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i,a1,b1,a2,b2,ans;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d %d %d %d\",&a1,&b1,&a2,&b2);\n            if(a1==a2){\n            ans=b1+b2;\n            if(a1!=ans)\n                printf(\"No\\n\");\n            else\n                printf(\"Yes\\n\");\n        }\n         if(b1==a2){\n            ans=b2+a1;\n            if(b1!=ans)\n                printf(\"No\\n\");\n            else\n                printf(\"Yes\\n\");\n        }\n             if(a1==b2){\n                ans=b1+a2;\n                if(a1!=ans)\n                    printf(\"No\\n\");\n                else\n                    printf(\"Yes\\n\");\n            }\n             if(b1==b2){\n                ans=a1+a2;\n                if(b1!=ans)\n                    printf(\"No\\n\");\n                else\n                    printf(\"Yes\\n\");\n            }\n        }\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,i,a1,b1,a2,b2,ans;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d %d %d %d\",&a1,&b1,&a2,&b2);\n            if((b1==a2) && ((a1+b2) == a2 ))\n\t            printf(\"Yes\\n\");\n\t    else if((b1==b2) && ((a1+a2) == b2 ))\n\t            printf(\"Yes\\n\");\n\t    else if((a1==a2) && ((b1+b2) == a2 ))\n\t            printf(\"Yes\\n\");\n\t    else if((a1==b2) && ((b1+a2) == b2 ))\n\t            printf(\"Yes\\n\");\n\t   else\n\t       printf(\"No\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.23240589198036007, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3f233f5283e18c2c01e89ae8f36d7958", "bug_code_uid": "f135fe2dc2dc230ae5c157744fe83d6b", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "80856c3d91ec8823d61aaa7c0752efc2", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint main()\n{\n    int m,l,r,i,d;\n    char ara[10000000];\n    scanf(\"%s\",ara);\n    scanf(\"%d\",&m);\n    while(m--){\n        d=0;\n        scanf(\"%d %d\",&l,&r);\n        for(i=l;i<r;i++){\n            if(ara[i-1]==ara[i])d++;\n        }\n        printf(\"%d\\n\",d);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n\tchar s[100009];\n\tint a[100009]={0},i,j,n,x,y,l;\n\tscanf(\"%s\",s);\n\tl=strlen(s);\n\tfor(i=1;i<l;i++)\n\t{\n\t\ta[i]+=a[i-1];\n\t\tif(s[i]==s[i-1])\n\t\t{\n\t\t\ta[i]++;\n\t\t}\n\t}\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tprintf(\"%d\\n\",a[y-1]-a[x-1]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9948979591836735, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b4895b5cf49e46bda0f9e96fa6100645", "bug_code_uid": "b669cdb15b2743bd75dc7735968671e6", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "90d4cdd7ef7263b9ef4b6e266e39336c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[1000][2],i,j,x[1000];\n    scanf(\"%d\",&n);\n    if(n>2&&n<1000){\n        for(i=0;i<n;i++)\n        for(j=0;j<2;j++)\n            scanf(\"%d\",&a[i][j]);\n        x[0]=a[0][1];\n         for(i=1;i<n-1;i++)\n            x[i]=x[i-1]+a[i][1]-a[i][0];\n        for(i=1;i<n-1;i++)\n            if(x[0]<x[i])\n            x[0]=x[i];\n        printf(\"%d\",x[0]);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[1000][2],i,j,x[1000];\n    scanf(\"%d\",&n);\n    if(n>1&&n<1001){\n        for(i=0;i<n;i++)\n        for(j=0;j<2;j++)\n            scanf(\"%d\",&a[i][j]);\n        x[0]=a[0][1];\n         for(i=1;i<n-1;i++)\n            x[i]=x[i-1]+a[i][1]-a[i][0];\n        for(i=1;i<n-1;i++)\n            if(x[0]<x[i])\n            x[0]=x[i];\n        printf(\"%d\",x[0]);\n    }\n}\n"}
{"similarity_score": 0.9859402460456942, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "166b4713ec0aaed78eadc8e340a6e819", "bug_code_uid": "a8c9bb178d42363799a6ad1c2df86ea7", "src_uid": "dceeb739a56bb799550138aa8c127996", "apr_id": "7148755ae833aec353e19f9e2dbac4e6", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int k,n,sum=0,i,j,val,rem;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&k);\n    int arr[k];\n    for(i=1;i<=k;i++)\n    {\n        arr[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%d\",&val);\n      arr[val]++;\n    }\n    for(i=1;i<=k;i++)\n    {\n        if(arr[i]%2==0)\n        {\n            sum+=arr[i];\n        }\n        else\n        {\n            sum=sum+(arr[i]-1);\n            rem++;\n        }\n    }\n    if(rem%2==0)\n    {\n        rem=rem/2;\n    }\n    else\n    {\n        rem=rem/2 +1;\n    }\n    printf(\"%d\",sum+rem);\n    return 0;\n    \n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int k,n,sum=0,i,val,rem=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&k);\n    int arr[k];\n    for(i=1;i<=k;i++)\n    {\n        arr[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%d\",&val);\n      arr[val]++;\n    }\n    for(i=1;i<=k;i++)\n    {\n        if(arr[i]%2==0)\n        {\n            sum+=arr[i];\n        }\n        else\n        {\n            sum=sum+(arr[i]-1);\n            rem++;\n        }\n    }\n    if(rem%2==0)\n    {\n        rem=rem/2;\n    }\n    else\n    {\n        rem=rem/2 +1;\n    }\n    printf(\"%d\",sum+rem);\n    return 0;\n}"}
{"similarity_score": 0.5823255813953488, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "cc2927137f19b6a8a47f5c2a46504322", "bug_code_uid": "b892ad218d789408f109abf025f30165", "src_uid": "0e21f1c48c8c0463b2ffa7275eddc633", "apr_id": "b59b96b1fc55ac16ea70352026e82873", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long n,i;\n    int a[9][9];\n    scanf(\"%ld\\n\",&n);\n    for(i=0;i<n;i++)\n    {\n        int j,k;\n        char ch;\n        for(j=0;j<9;j++)\n        {\n            for(k=0;k<9;k++)\n            {\n                ch=getchar();\n                a[j][k]=(int)(ch-48);\n            }\n            scanf(\"\\n\");\n        }\n        for(j=0;j<9;j++)\n        {\n            for(k=0;k<8;k++)\n            {\n                if(a[j][k]==3)\n                a[j][k]=4;\n                printf(\"%d\",a[j][k]);\n            }\n            if(a[j][k]==3)\n            a[j][k]=4;\n            printf(\"%d\\n\",a[j][k]);\n        }    \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long n,i;\n    scanf(\"%ld\\n\",&n);\n    for(i=0;i<n;i++)\n    {\n        int j,k;\n        char ch;\n        for(j=0;j<9;j++)\n        {\n            for(k=0;k<9;k++)\n            {\n                ch=getchar();\n                if(ch=='3')\n                putchar('4');\n                else putchar(ch);\n            }\n            scanf(\"\\n\");\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9985815602836879, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1de2ac87014c015608937b40ca904bcc", "bug_code_uid": "1239cd7dc1e9177b22a3822f4afe5bcb", "src_uid": "c0c29565e465840103a4af884f951cda", "apr_id": "f9003359908eb309dc6a6cda5b54456d", "difficulty": 1500, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,a[10005],i,toplam = 0,ort,arti,cvp = 0;\n\tscanf(\"%d\",&n);\n\tfor(i = 0 ; i < n ; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\ttoplam+=a[i];\n\t}\n\tort = toplam/n;\n\tarti = toplam%n;\n\tfor(i = 0 ; i < n ; i++)\n\t\tif(a[i]>ort){\n\t\t\tif(arti){\n\t\t\t\tcvp+=a[i]-ort-1;\n\t\t\t\tarti--;\n\t\t\t}\n\t\t\telse\n\t\t\t\tcvp+=a[i]-ort;\n\t\t}\n\tprintf(\"%d\",cvp);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n,a[100005],i,toplam = 0,ort,arti,cvp = 0;\n\tscanf(\"%d\",&n);\n\tfor(i = 0 ; i < n ; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\ttoplam+=a[i];\n\t}\n\tort = toplam/n;\n\tarti = toplam%n;\n\tfor(i = 0 ; i < n ; i++)\n\t\tif(a[i]>ort){\n\t\t\tif(arti){\n\t\t\t\tcvp+=a[i]-ort-1;\n\t\t\t\tarti--;\n\t\t\t}\n\t\t\telse\n\t\t\t\tcvp+=a[i]-ort;\n\t\t}\n\tprintf(\"%d\",cvp);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8088088088088088, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "22ec48f710df258c1a679297016f7991", "bug_code_uid": "8c698fb894c99f4a66800fb4fa800383", "src_uid": "5babbb7c5f6b494992ffa921c8e19294", "apr_id": "4d6a4a6b462ee64c2723e9e9220708bf", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint hotel[100], n, d, count = 2, current = 0;\n\tscanf(\"%d%d\", &n, &d);\n\tfor(int i = 0; i < n; i++) scanf(\"%d\", &hotel[i]);\n\tfor(int i = hotel[0]; i < hotel[n-1]; i++){\n\t\tif(i == hotel[current + 1]) current++;\n\t\tif((i - hotel[current] == d && hotel[current + 1] - i >= d) \n\t\t\t|| (i - hotel[current] >= d && hotel[current + 1] - i == d)) count++;\n\t}\n\tprintf(\"%d\\n\", count);\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint hotel[100], n, d, count = 2, current = 0;\n\tscanf(\"%d%d\", &n, &d);\n\tfor(int i = 0; i < n; i++) scanf(\"%d\", &hotel[i]);\n\tfor(int i = 0; i < n - 1; i++){\n\t\tif(hotel[i+1] - hotel[i] > 2*d){\n\t\t\tcount += 2;\n\t\t\t//printf(\"1\\n\");\n\t\t}\n\t\telse if(hotel[i+1] - hotel[i] == 2*d){\n\t\t\tcount++;\n\t\t\t//printf(\"2\\n\");\n\t\t}\n\t}\n\t/*for(int i = hotel[0]; i < hotel[n-1]; i++){\n\t\tif(i == hotel[current + 1]) current++;\n\t\tif((i - hotel[current] == d && hotel[current + 1] - i >= d) \n\t\t\t|| (i - hotel[current] >= d && hotel[current + 1] - i == d)) count++;\n\t}*/\n\tprintf(\"%d\\n\", count);\n}"}
{"similarity_score": 0.9971428571428571, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "081475dbba188b68a3f2118decf311f7", "bug_code_uid": "da1964de5bf3409af0afb10b03b86acd", "src_uid": "9438ce92e10e846dd3ab7c61a1a2e3af", "apr_id": "1baa03fa53e437e746bbb5d1ae02e393", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,m,i,j,x;\n\tscanf(\"%d%d\",&n,&m);\n\tint y[105],count[105];\n\tfor(i=0;i<100;i++)\n\t\tcount[i]=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tfor(j=0;j<x;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&y[j]);\n\t\t\tcount[y[j]]++;\n\t\t}\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tif(count[i]==0)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"YES\\n\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,m,i,j,x;\n\tscanf(\"%d%d\",&n,&m);\n\tint y[105],count[105];\n\tfor(i=0;i<105;i++)\n\t\tcount[i]=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tfor(j=0;j<x;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&y[j]);\n\t\t\tcount[y[j]]++;\n\t\t}\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tif(count[i]==0)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"YES\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.8578255675029869, "equal_cnt": 15, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "b0f9f4d0483a873dcc5d80f9f2493b0e", "bug_code_uid": "306d7b9bcf2569422d19b59b914a54b3", "src_uid": "2b37f27a98ec8f80d0bff3f7ae8f2cff", "apr_id": "03130a0d4dc9e7acc930a6e0e3582705", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,j;\n    scanf(\"%d\",&t);\n    while(t>0){\n        int n,m;\n        scanf(\"%d%d\",&n,&m);\n        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                if(i==1 || j==0){\n                    printf(\"B\");\n\n                }\n                else {\n                    printf(\"W\");\n                }\n            }\n            printf(\"\\n\");\n        }\n    }\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int t;\n    scanf(\"%d\",&t);\n    while(t>0){\n        int a,b,i,j;\n        scanf(\"%d %d\",&a,&b);\n        for(i=1;i<=a;i++){\n            for(j=1;j<=b;j++){\n                if(i == 1 && j == 1){\n                    printf(\"W\");\n                }\n                else {\n                    printf(\"B\");\n                }\n            }\n            printf(\"\\n\");\n        }\n\n\n\n\n\n        t--;\n    }\n\n\n\n\n\n}\n"}
{"similarity_score": 0.6782608695652174, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c51714e84018f2058efbcd269aa2bfae", "bug_code_uid": "de6d968f4d35bd8c06256fff50964207", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "e6c78551053c697c738c943495601806", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tint t,i,b,j,k;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tchar a[500]={'\\0'},d;\r\n\t\tint c=0;\r\n\t\tscanf(\"%d\",&b);\r\n\t\tgetchar();\r\n\t\tfor(j=0;j<b;j++)\r\n\t\t{\r\n\t\t\t scanf(\"%c\",&a[j]);\r\n\t\t\t if(a[i]=='z')\r\n\t\t\t {\r\n\t\t\t \tprintf(\"26\\n\");\r\n\t\t\t \tc=-1;\r\n\t\t\t \tbreak;\r\n\t\t\t }\r\n\t\t}\r\n\t\tif(c==-1) continue;\r\n\t\tfor(k=0;k<b;k++)\r\n\t\t{\r\n\t\t\tfor(j=k+1;j<b;j++)\r\n\t\t\t{\r\n\t\t\t\tif(a[j]>a[k])\r\n\t\t\t\t{\r\n\t\t\t\t\td=a[k];\r\n\t\t\t\t\ta[k]=a[j];\r\n\t\t\t\t\ta[j]=d;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",a[0]-'a'+1);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tint t,i,b,j;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tchar a[500]={'\\0'},d;\r\n\t\tint c=0;\r\n\t\tscanf(\"%d\",&b);\r\n\t\tgetchar();\r\n\t\tfor(j=0;j<b;j++) scanf(\"%c\",&a[j]);\r\n\t\tfor(j=1;j<b;j++) if(a[j]>a[0]) a[0]=a[j];\r\n\t\tprintf(\"%d\\n\",a[0]-'a'+1);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.6291793313069909, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "6d9b7ff9faec61ca40d331307e13e076", "bug_code_uid": "eec94a1b5a5842516a2a0cb9baa6ff55", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "6f14c58f178487508cd649c3a96df289", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    int i,n;\n    scanf(\"%d\\n\",&n);\n    char a[n+1],b[n+1];\n    scanf(\"%s\\n\",a);\n    scanf(\"%s\\n\",b);\n    int s=0;\n    for(i=0;i<n;i++) {\n        int m=a[i],b[i];\n        if(m<0) m=-m;\n        if(m>5) m=10-m;\n        s+=m;\n    }\n    printf(\"%1\\n\",s);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n int i,n;\n scanf(\"%d\\n\",&n);\n char a[n+1],b[n+1];\n scanf(\"%s\\n\",a);\n scanf(\"%s\\n\",b);\n int s=0;//a,b for taking inputs in the form of strings,i is for iteration\n for (i=0;i<n;i++) {//m is the substraction of two strings characters\n  int m=a[i]-b[i];\n  if (m<0) m=-m;\n  if (m>5) m=10-m;\n  s+=m;\n }\n printf(\"%i\\n\",s);\n return 0;\n}\n\n"}
{"similarity_score": 0.9991460290350128, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "97a26a01010a71b0591e575b763220a3", "bug_code_uid": "cabf442a98c48dea221c7db74571afc4", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "425ee56af08d2be495337b4a14528888", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,max;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    int p=0,q=0,r=0;\n    for(i=0; i<n; i++)\n    {\n        if(a[i]==1)\n            p++;\n        else if(a[i]==2)\n            q++;\n        else r++;\n\n    }\n    if(p>q)\n    {\n        if(p>r)\n        {\n            max=p;\n        }\n        else\n        {\n            max=r;\n        }\n    }\n    else\n    {\n        if(q>r)\n        {\n            max=q;\n        }\n        else\n        {\n            max=r;\n        }\n    }\nprintf(\"%d\",n-max);\nreturn 0;}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[1000005],i,max;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    int p=0,q=0,r=0;\n    for(i=0; i<n; i++)\n    {\n        if(a[i]==1)\n            p++;\n        else if(a[i]==2)\n            q++;\n        else r++;\n\n    }\n    if(p>q)\n    {\n        if(p>r)\n        {\n            max=p;\n        }\n        else\n        {\n            max=r;\n        }\n    }\n    else\n    {\n        if(q>r)\n        {\n            max=q;\n        }\n        else\n        {\n            max=r;\n        }\n    }\nprintf(\"%d\",n-max);\nreturn 0;}\n"}
{"similarity_score": 0.9931972789115646, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7dfb13da947920acad187faddedeb667", "bug_code_uid": "2516d7269e7493699bb8ecd218083edb", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "96919dc4070d5fe714584bffc0847801", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main (){\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tlong long int a;\n\t\tscanf(\"%lld\",&a);\n\t\tprintf(\"%lld\",a);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main (){\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tlong long int a;\n\t\tscanf(\"%lld\",&a);\n\t\tprintf(\"%lld\\n\",a);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.12929848693259974, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "df23893c2fd2f47db3fd3da60f63dd92", "bug_code_uid": "7f21952075c0a4a2e21617019dc32e97", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "118fd96603992f3ea34fc2c484aed3bb", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long i,j,n,x,sum,a[200][200],ans=0,m;\n    while(scanf(\"%lld %lld\",&n,&m))\n    {\n        for(i=1;i<=n;i++)\n        {\n            for(j=1;j<=2*n;j++)\n            {\n                scanf(\"%lld\\n\",&a[i][j]);\n            }\n        }\n        for(i=1;i<=n;i++)\n        {\n            for(j=2;j<=2*m;j+=2)\n            {\n                if(a[i][j]!=0 || a[i][j-1]!=0)\n                    ans++;\n            }\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,k=0,c,x,y;\n    scanf(\"%d%d\\n\",&n,&m);\n    c=n*m*2;\n    for(i=0;i<c;i+=2){\n        scanf(\"%d%d\",&x,&y);\n        if(x||y)\n            k++;\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.9914893617021276, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c2449c2562e70d6850ff195c85920b82", "bug_code_uid": "94c51cf55ab5faab9a04a88c56dec191", "src_uid": "f5de1e9b059bddf8f8dd46c18ce12683", "apr_id": "b6c110a77f7e031e0f88063e5e24181c", "difficulty": 900, "tags": ["greedy", "implementation", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h>\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        long long int arr[n],brr[n],max=0;\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%lld\",&arr[i]);\r\n            brr[i] = arr[i];\r\n        }\r\n        for(int i=0;i<n;i++){\r\n            \r\n            for(int j=0;j<n;j++){\r\n              \r\n                if(j!=i){\r\n                    brr[j] = arr[j];\r\n                    while(brr[j]%2 == 0){\r\n                        brr[j]=brr[j]/2;\r\n                        brr[i] = brr[i]*2;\r\n                    }\r\n                }\r\n            }\r\n            long long int sum=0;\r\n            for(int k=0;k<n;k++){\r\n                sum+=brr[k];\r\n            }\r\n            if(sum > max){\r\n                max = sum;\r\n            }\r\n            brr[i] = arr[i];\r\n        }\r\n        printf(\"%lld\\n\",max);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdlib.h>\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        long long int arr[n],brr[n],max=0;\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%lld\",&arr[i]);\r\n            brr[i] = arr[i];\r\n        }\r\n        for(int i=0;i<n;i++){\r\n            brr[i] = arr[i];\r\n            for(int j=0;j<n;j++){\r\n              \r\n                if(j!=i){\r\n                    brr[j] = arr[j];\r\n                    while(brr[j]%2 == 0){\r\n                        brr[j]=brr[j]/2;\r\n                        brr[i] = brr[i]*2;\r\n                    }\r\n                }\r\n            }\r\n            long long int sum=0;\r\n            for(int k=0;k<n;k++){\r\n                sum+=brr[k];\r\n            }\r\n            if(sum > max){\r\n                max = sum;\r\n            }\r\n            brr[i] = arr[i];\r\n        }\r\n        printf(\"%lld\\n\",max);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9991158267020336, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fef8cd9878ccfa853dd23007f5f1c7d0", "bug_code_uid": "5564b113fb1c7d0665d0e82dee92364a", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "af36dde0ca6b8f2fd75febbd2bdba474", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define N 100000\nint main () {\n    char *a, *b;\n    int diff = 0, i, n;\n\n    a = (char *)malloc( N );\n    b = (char *)malloc( N );\n\n    gets(a);\n    gets(b);\n\n    n = strlen(a);\n\n    a = realloc(a, n);\n    b = realloc(b, n);\n\n    for(i = n- 1; i >= 0; i--)\n        if(a[i] != b[i]) diff++;\n\n    if(diff%2) {\n        printf(\"impossible\");\n        return 0;\n    }\n\n    diff /= 2;\n\n    for(i = 0; diff > 0; i++)\n        if(a[i] != b[i]){\n            a[i] = b[i];\n            diff--;\n        }\n\n    puts(a);\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define N 1000000\nint main () {\n    char *a, *b;\n    int diff = 0, i, n;\n\n    a = (char *)malloc( N );\n    b = (char *)malloc( N );\n\n    gets(a);\n    gets(b);\n\n    n = strlen(a);\n\n    a = realloc(a, n);\n    b = realloc(b, n);\n\n    for(i = n- 1; i >= 0; i--)\n        if(a[i] != b[i]) diff++;\n\n    if(diff%2) {\n        printf(\"impossible\");\n        return 0;\n    }\n\n    diff /= 2;\n\n    for(i = 0; diff > 0; i++)\n        if(a[i] != b[i]){\n            a[i] = b[i];\n            diff--;\n        }\n\n    puts(a);\n\n}"}
{"similarity_score": 0.9212121212121213, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "657ea09d896a2df3432d47c0fb8db276", "bug_code_uid": "f63f78d297b02eb38727c0a8d20c70d6", "src_uid": "d9ba1dfe11cf3dae177f8898f3abeefd", "apr_id": "55a80b64929cc790f36ae46aad83523b", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,i;\n    scanf(\"%d\", &n);\n    for(i = 2; i <= n; i++)\n        printf(\"%d \", i);\n    printf(\"1\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,i;\n    scanf(\"%d\", &n);\n    printf(\"%d \",n); \n    for(i = 1; i < n; i++)\n        printf(\"%d \", i);\n    printf(\"\\n\");\n    return 0;\n}"}
{"similarity_score": 0.9691358024691358, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1938a698e52613c045f36a036fee6f85", "bug_code_uid": "b7f0f2d231cc98e7852be2f400a91a56", "src_uid": "7785ed6f41dbd45f1a9432c2fb07d713", "apr_id": "76f768ea8f75d7161ac710908e876461", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int i,sum=0,c=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n         for(i=0;i<n;i++)\r\n         {\r\n             sum=sum+a[i];\r\n         }\r\n         sum=sum/n;\r\n          for(i=0;i<n;i++)\r\n          {\r\n              if( sum%n==0 && sum==a[i])\r\n              {\r\n                  c++;\r\n                  break;\r\n              }\r\n          }\r\n          if(c==1)\r\n            printf(\"yes\\n\");\r\n            else\r\n             printf(\"no\\n\");\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int i,c=0;\r\n        float sum=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n         for(i=0;i<n;i++)\r\n         {\r\n             sum=sum+a[i];\r\n         }\r\n         sum=sum/n;\r\n          for(i=0;i<n;i++)\r\n          {\r\n              if(sum==a[i])\r\n              {\r\n                  c++;\r\n                  break;\r\n              }\r\n          }\r\n          if(c==1)\r\n            printf(\"yes\\n\");\r\n            else\r\n             printf(\"no\\n\");\r\n \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.847457627118644, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "b21e394597d869ea982dbbd044267176", "bug_code_uid": "009baf1a7935ebf00458eb7a06c3b43f", "src_uid": "64a375c7c49591c676dbdb039c93d218", "apr_id": "316535ad5f40bf6f7d48158130133e50", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint T, a, b, n;\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d%d\", &a, &b, &n);\n    if (n) a ^= b;\n    printf(\"%d\\n\", n & 1 ? b : a);\n  }\n}\n", "fixed": "#include <stdio.h>\nint T, n, f[3];\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d%d\", f, f + 1, &n);\n    f[2] = f[0] ^ f[1];\n    printf(\"%d\\n\", f[n % 3]);\n  }\n}\n"}
{"similarity_score": 0.9873096446700508, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "434cd4f02849facbd759004b4a521795", "bug_code_uid": "f7f8f7391044d9e1d0da4a942ba4ebd8", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "9ed72417a8ca43239d677b3d5deba6f6", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long n,i,j,a[100000],temp,ans;\n    temp=ans=1;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        temp=1;\n        while(a[i+temp-1]<a[i+temp])\n            temp++;\n        if(temp>ans)\n            ans=temp;\n        i+=temp-1;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long n,i,j,a[100000],temp,ans;\n    temp=ans=1;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        temp=1;\n        while(a[i+temp-1]<a[i+temp]&&i+temp<n)\n            temp++;\n        if(temp>ans)\n            ans=temp;\n        i+=temp-1;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.5433715220949263, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "705cac0500a175349cf5967218aa2334", "bug_code_uid": "5cf095a3a37b97f3e293e827bb6f1ae5", "src_uid": "b34f29e6fb586c22fa1b9e559c5a6c50", "apr_id": "717f8a7a846d005c00d1d29b2d6f66db", "difficulty": 900, "tags": ["sortings", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int m,n,ara[50005],t,s,min,p,i,j;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        s=0;\n        p=0;\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&ara[i]);\n        }\n        for(j=0; j<n; j++)\n        {\n            min=1000000005;\n            for(i=0; i<n-j; i++)\n            {\n                if(ara[i]<min)\n                {\n                    min=ara[i];\n                    p=i;\n                }\n            }\n            s+=p;\n            for(i=p; i<n-1-j; i++)\n            {\n                ara[i]=ara[i+1];\n            }\n        }\n        if(s<n*(n-1)/2){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int n,a,b,t,i,flag;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        flag=0;\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\",&a);\n            if(i && b<=a){flag=1;}\n            b=a;\n        }\n        if(flag){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9883720930232558, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "25741a2b4b7694a64dca1bf0e274c3a1", "bug_code_uid": "93dd28ad7f958102e6e498a396c4b5ef", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "bd913e889b519992100f51626f13a154", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\tint x;\r\n\tscanf(\"%d\",&x);\r\n\tint z=x/10;\r\n\tif(x<9){\r\n\t\tprintf(\"0\");\r\n\t}\r\n\tif(x>=9){\r\n\t\tif(x%10==9){\r\n\t\t\tprintf(\"%d\",z+1);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"%d\",z);\r\n\t\t}\r\n\t}\r\n}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\tint x;\r\n\tscanf(\"%d\",&x);\r\n\tint z=x/10;\r\n\tif(x<9){\r\n\t\tprintf(\"0\\n\");\r\n\t}\r\n\tif(x>=9){\r\n\t\tif(x%10==9){\r\n\t\t\tprintf(\"%d\\n\",z+1);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"%d\\n\",z);\r\n\t\t}\r\n\t}\r\n}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8212083847102343, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "05edf0d32388056d8145e61eaabddbdb", "bug_code_uid": "d97001ee7526be3761ac459e30334405", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "1318f51ebdf3a3ace12b69fe1191e6b7", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\n    int n,i,sum=0;\r\n    scanf(\"%d\",&n);\r\n    int a[n];\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(i=0;i<n;i++){\r\n        sum=sum+a[i];\r\n    }\r\n    float d=(float)sum/n;\r\n    if(sum==n){\r\n        printf(\"1\\n\");\r\n    }\r\n   else if(d<n){\r\n        printf(\"1\\n\");\r\n    }\r\n    else if(d>n){\r\n            int l=sum-n;\r\n        printf(\"%d\\n\",l);\r\n    }\r\n\r\n}\r\nreturn 0;\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\n    int n,i,sum=0;\r\n    scanf(\"%d\",&n);\r\n    int a[n];\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(i=0;i<n;i++){\r\n        sum=sum+a[i];\r\n    }\r\n    if(sum<n){\r\n        printf(\"1\\n\");\r\n    }\r\n    else\r\n\r\n        printf(\"%d\\n\",sum-n);\r\n\r\n\r\n}\r\nreturn 0;\r\n\r\n}\r\n"}
{"similarity_score": 0.9683098591549296, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6a475f45e8cc28624eed417419e0067e", "bug_code_uid": "f15de4af2d05799ddbaadacead4f1054", "src_uid": "a9cc20ba7d6e31706ab1743bdde97669", "apr_id": "2068b94f956934229d248865b02aa5d3", "difficulty": 1800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nusing namespace std;\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2 = (p1=buf) + fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int input(){\n    char ch=nc();int sum=0;\n    while(!(ch>='0'&&ch<='9'))ch=nc();\n    while(ch>='0'&&ch<='9')sum=sum*10+ch-48,ch=nc();\n    return sum;\n}\nint main()\n{\n\tint n,t,cnt=0;\n//\tdouble p=1;\n\tn=input();\n\tif(n==5){\n\t\tputs(\"Petr\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tt=input();\n\t\tif(t==i)\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t}\n\tif(1000*cnt>n){\n\t\tputs(\"Petr\");\n\t}\n\telse{\n\t puts(\"Um_nik\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2 = (p1=buf) + fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int input(){\n    char ch=nc();int sum=0;\n    while(!(ch>='0'&&ch<='9'))ch=nc();\n    while(ch>='0'&&ch<='9')sum=sum*10+ch-48,ch=nc();\n    return sum;\n}\nint main()\n{\n\tint n,t,cnt=0;\n\tn=input();\n\tif(n==5){\n\t\tputs(\"Petr\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tt=input();\n\t\tif(t==i)\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t}\n\tif(1000*cnt>n){\n\t\tputs(\"Petr\");\n\t}\n\telse{\n\t puts(\"Um_nik\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9725158562367865, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "27385e4056bb268207066384fa7fc314", "bug_code_uid": "3e9a623c818d7aa5ff1107e530663479", "src_uid": "77e2a6ba510987ed514fed3bd547b5ab", "apr_id": "13addde9d37fde5eccf846568823b9c8", "difficulty": 1100, "tags": ["implementation", "sortings", "greedy", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar c, in[10001], out[10001];\n\nint main()\n{\n    int i, j, n, m;\n    scanf(\"%s\", in);\n    n = strlen(in), m = 0, i = 0;\n    for (j = 1; j < n; ++j)\n        if (in[j] > in[i])\n            i = j;\n    for (c = in[i]; i < n && c >= 'a'; --c)\n        for (j = i; j < n; ++j)\n            if (in[j] == c)\n            {\n                out[m++] = c;\n                i = j + 1;\n            }\n    out[m] = '\\0';\n    puts(out);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar c, in[100010], out[100010];\n\nint main()\n{\n    int i, j, n, m;\n    scanf(\"%s\", in);\n    n = strlen(in), m = 0, i = 0;\n    for (j = 1; j < n; ++j)\n        if (in[j] > in[i])\n            i = j;\n    for (c = in[i]; i < n && c >= 'a'; --c)\n        for (j = i; j < n; ++j)\n            if (in[j] == c)\n            {\n                out[m++] = c;\n                i = j + 1;\n            }\n    out[m] = '\\0';\n    puts(out);\n    return 0;\n}"}
{"similarity_score": 0.0216998191681736, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "af8cd897491c1cc2f4d33debbf9f58d9", "bug_code_uid": "7bd9ac9db157ec4661fc5da2c04617cb", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "0ec85c0d112d3ec8bb8e5dbc729eec42", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "{\"requirements\":[]}", "fixed": "#include<stdio.h>\nint main ()\n{\n    int a,i,j,n,s=0,s1=0,c=0,ar[100];\n    scanf (\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf (\"%d\",&ar[i]);\n        s=s+ar[i];\n    }\n    s=s/2;\n    for (i=0;i<n;i++)\n    {\n        for (j=i+1;j<n;j++)\n        {\n            if (ar[i]<ar[j])\n            {\n                a=ar[i];\n                ar[i]=ar[j];\n                ar[j]=a;\n            }\n        }\n    }\n    \n    for (i=0;i<n;i++)\n    {\n        s1=s1+ar[i];c++;\n        if (s1>s)\n        break;\n    }\n    printf (\"%d\",c);\n    return 0;\n}"}
{"similarity_score": 0.9876760563380281, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4f5f9ba72e6cbd1a7303771cbb4ac5b9", "bug_code_uid": "85c16a5a5d79d7043a621c0b958f6618", "src_uid": "2c921093abf2c5963f5f0e96cd430456", "apr_id": "7827909284965f19e61c3d915d7a9a44", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,b,x,y,i,j;\r\n    long long int sum=0;\r\n    \r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       \r\n        scanf(\"%d %d %d %d\",&n,&b,&x,&y);\r\n        long long int a[n];\r\n        a[0]=0;\r\n        for(i=1;i<=n;i++)\r\n        {\r\n         \r\n         if((a[i-1]+x)>b)\r\n         {\r\n         a[i] = a[i-1] - y;\r\n         }\r\n         else\r\n         a[i] = a[i-1] + x;\r\n        \r\n \r\n        }\r\n        \r\n    \r\n    for(i=0;i<=n;i++)\r\n    {\r\n        sum = sum + a[i];\r\n    }\r\n    printf(\"%lli\\n\",sum);\r\n    \r\n    }\r\n   \r\n    \r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,b,x,y,i,j;\r\n    long long int sum=0;\r\n    \r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n       \r\n        scanf(\"%d %d %d %d\",&n,&b,&x,&y);\r\n        long long int a[n];\r\n        a[0]=0;\r\n        for(i=1;i<=n;i++)\r\n        {\r\n         \r\n         if((a[i-1]+x)>b)\r\n         {\r\n         a[i] = a[i-1] - y;\r\n         }\r\n         else\r\n         a[i] = a[i-1] + x;\r\n        \r\n \r\n        }\r\n        \r\n    \r\n    for(i=0;i<=n;i++)\r\n    {\r\n        sum = sum + a[i];\r\n    }\r\n    printf(\"%lli\\n\",sum);\r\n    sum = 0;\r\n    \r\n    }\r\n   \r\n    \r\n}"}
{"similarity_score": 0.9682907965970611, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "07684ff94c666b2ecc7974c06f6fd202", "bug_code_uid": "bff8b7fae5c1bfd7e74912770e26453e", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "1fc3ba5aa5f437bc8c9419fe960ff1ee", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long n=0;\n    scanf(\"%d\",&n);\n    long t[n];\n    long j=0, k=0, i=0, min=n, f=0, e=1000000001, h=0;\n    for(i=0; i<n; i++){\n        scanf(\"%d\",&t[i]);\n    }\n    for(i=0; i<n; i++){\n     f = t[i];\n     h=0;\n     k=0;\n     if(f<e){\n     for(j=i+1; j<n; j++) {\n        k++;\n        if(f==t[j]){\n            h=1;\n            if(f<e || (k<min && f==e)){\n            min = k;\n            }\n            break;\n        }\n     }\n     if(h!=1 && i!=n-1 && f==t[j] ){\n        k++;\n        if(f<e || (k<min && f==e)){\n            min = k;\n            }\n     }\n     e=f;\n     }\n    }\n    printf(\"%d\",min);\n    return 0;\n}\n", "fixed": "int main()\n{\n    long n=0;\n    scanf(\"%d\",&n);\n    long t[n];\n    long j=0, k=0, i=0, min=n, f=0, e=1000000001, h=0;\n    for(i=0; i<n; i++){\n        scanf(\"%d\",&t[i]);\n    }\n    for(i=0; i<n; i++){\n     f = t[i];\n     h=0;\n     k=0;\n     if(f<=e){\n     for(j=i+1; j<n; j++) {\n        k++;\n        if(f==t[j]){\n            h=1;\n            if(f<e || (k<min && f==e)){\n            min = k;\n            }\n            break;\n        }\n     }\n     if(h!=1 && i!=n-1 && f==t[j] ){\n        k++;\n        if(f<e || (k<min && f==e)){\n            min = k;\n            }\n     }\n     e=f;\n     }\n    }\n    printf(\"%d\",min);\n    return 0;\n}\n"}
{"similarity_score": 0.9380165289256198, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3f7a76def92dec5ae2c37fafcf998380", "bug_code_uid": "74fadfc63f16174ce0fba0475990315f", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "54f19c4431ef3c3c7d8588b37d9da49a", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    \r\n    for(int i = 0; i < t; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        \r\n        printf(\"2 %d\", (n - 1) / 2);\r\n    }\r\n     \r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    \r\n    for(int i = 0; i < t; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        printf(\"2 %d\\n\", n - 1);\r\n    }            \r\n\r\n     \r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9153846153846154, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ee5432e88231dfe12579635812d29684", "bug_code_uid": "8a95684d74d0f16cb626a4e69eb43bb1", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "9d743aaacd759f7b69fb4a794972a66f", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n\nmain() {\n    int i, n, pos;\n    scanf(\"%d\", &n);\n    pos = 1;\n    for (i = 1; i < n; i++) {\n        pos = (pos + i) % n;\n        printf(i == n - 1 ? \"%d\" : \"%d \", pos);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n\nmain() {\n    int i, n, pos;\n    scanf(\"%d\", &n);\n    pos = 1;\n    for (i = 1; i < n; i++) {\n        pos += i;\n        if (pos > n) pos %= n;\n        printf(i == n - 1 ? \"%d\" : \"%d \", pos);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7306666666666667, "equal_cnt": 18, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 8, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "cc193e860466a84bbefa3b628ea74fba", "bug_code_uid": "50a22f0314f8217969ec696c45e4dbd0", "src_uid": "b5ef56f2eb482682414c32fba83a3949", "apr_id": "29b04c97796c3fc55a9ede1f20bcbed3", "difficulty": 1400, "tags": ["data structures", "dp", "sortings", "two pointers"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    short t, n, k, dnk, i, ans, l;\n    long long a1, a2;\n    short sc[200005] = {};\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        scanf(\"%d %d\", &n, &k);\n        dnk = n - k;\n        scanf(\"%lld\", &a1);\n        for (i = 2; i <= n; ++i)\n        {\n            scanf(\"%lld\", &a2);\n            sc[i] = sc[i - 1] + ((a2 << 1) > a1);\n            a1 = a2;\n        }\n        for (ans = 0, i = 1; i <= dnk; ++i)\n            ans += (sc[i + k] - sc[i] == k);\n        printf(\"%d\\n\", ans);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    short t;\n    scanf(\"%hd\", &t);\n    int sc[200005] = {};\n    while (t--)\n    {\n        int n, k;\n        scanf(\"%d %d\", &n, &k);\n        int a1;\n        scanf(\"%d\", &a1);\n        for (int i = 2; i <= n; ++i)\n        {\n            int a2;\n            scanf(\"%d\", &a2);\n            sc[i] = sc[i - 1] + (((long long)(a2) << 1) > a1);\n            a1 = a2;\n        }\n        int ans = 0;\n        for (int i = 1; i <= n - k; ++i)\n        {\n            auto l = sc[i + k] - sc[i];\n            if (l == k)\n                ans++;\n        }\n        printf(\"%d\\n\", ans);\n    }\n}"}
{"similarity_score": 0.2784090909090909, "equal_cnt": 13, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "0b57b37ec7ba230ecd0e3bdb50d047e3", "bug_code_uid": "aec0c7882009aa14c7a646db50afd817", "src_uid": "0151a87d0f82a9044a0ac8731d369bb9", "apr_id": "9dfd659d1833a345f62094a34c2811b3", "difficulty": 1500, "tags": ["dp", "two pointers", "binary search", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t100000\n\nint solve(int *aa, int m, int k, int r) {\n\tstatic int pp[N + 1];\n\tint i, j, l, p, ans, cnt;\n\n\tp = 0;\n\tfor (i = 0; i < m; i++)\n\t\tpp[i] = p += aa[i];\n\tpp[m] = p;\n\tans = 0;\n\tfor (i = r, j = r, l = 0; i < m; i += 2) {\n\t\tif (j < i)\n\t\t\tj = i;\n\t\twhile (j < m && l + aa[j] <= k) {\n\t\t\tl += aa[j];\n\t\t\tj += 2;\n\t\t}\n\t\tif (i < j) {\n\t\t\tif (ans < (cnt = pp[j - 1] - (i < 2 ? 0 : pp[i - 2])))\n\t\t\t\tans = cnt;\n\t\t\tl -= aa[i];\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main() {\n\tstatic char cc[N + 1];\n\tstatic int aa[N];\n\tint n, m, k, i, j, ans0, ans1;\n\n\tscanf(\"%d%d%s\", &n, &k, cc);\n\tm = 0;\n\tfor (i = 0; i < n; i = j) {\n\t\tj = i + 1;\n\t\twhile (j < n && cc[i] == cc[j])\n\t\t\tj++;\n\t\taa[m++] = j - i;\n\t}\n\tans0 = solve(aa, m, k, 0);\n\tans1 = solve(aa, m, k, 1);\n\tprintf(\"%d\\n\", ans0 > ans1 ? ans0 : ans1);\n\treturn 0;\n}\n", "fixed": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t100000\n\nint solve(char *cc, int n, int k, char b) {\n\tint i, j, l, ans = 0;\n\n\tfor (i = 0, j = 0, l = 0; i < n; i++) {\n\t\tif (j < i) {\n\t\t\tj = i;\n\t\t\tl = 0;\n\t\t}\n\t\twhile (j < n && (l < k || cc[j] != b)) {\n\t\t\tif (cc[j] == b)\n\t\t\t\tl++;\n\t\t\tj++;\n\t\t}\n\t\tif (ans < j - i)\n\t\t\tans = j - i;\n\t\tif (cc[i] == b)\n\t\t\tl--;\n\t}\n\treturn ans;\n}\n\nint main() {\n\tstatic char cc[N + 1];\n\tint n, k, na, nb;\n\n\tscanf(\"%d%d%s\", &n, &k, cc);\n\tna = solve(cc, n, k, 'a');\n\tnb = solve(cc, n, k, 'b');\n\tprintf(\"%d\\n\", na > nb ? na : nb);\n\treturn 0;\n}\n"}
{"similarity_score": 0.997943797121316, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8ce8431f06730d10b33f54f3d87a2462", "bug_code_uid": "17aeba39cb53e39fa5111f42acb5816d", "src_uid": "6d4744d7356e709f73891270becd14e3", "apr_id": "620aeb270ec5cf9172c9bc8a85f3573c", "difficulty": 800, "tags": ["brute force", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n/*int cmp(const void *a, const void *b)\n    {\n        return ( (int)a - (int)b );\n    }*/\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t > 0)\n    {\n        int n, j;\n        scanf(\"%d\", &n);\n        int a[10000],c=1,mc=1;\n        for (int i = 0; i < n; i++)\n            scanf(\"%d\", &a[i]);\n        //qsort(a,n,sizeof(int),cmp);\n        for (int i = 0; i < n - 1; i++)\n        {\n            \n            if (a[i + 1] == a[i])\n            {\n                c++;\n            }\n            else \n            c=0;\n            if(mc<c)\n            mc=c;\n        }\n        if(n==0)\n        printf(\"%d\\n\"mc-1);\n        else\n        printf(\"%d\\n\", mc);\n        t--;\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n/*int cmp(const void *a, const void *b)\n    {\n        return ( (int)a - (int)b );\n    }*/\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t > 0)\n    {\n        int n, j;\n        scanf(\"%d\", &n);\n        int a[10000],c=1,mc=1;\n        for (int i = 0; i < n; i++)\n            scanf(\"%d\", &a[i]);\n        //qsort(a,n,sizeof(int),cmp);\n        for (int i = 0; i < n - 1; i++)\n        {\n            \n            if (a[i + 1] == a[i])\n            {\n                c++;\n            }\n            else \n            c=1;\n            if(mc<c)\n            mc=c;\n        }\n        if(n==0)\n        printf(\"%d\\n\",mc-1);\n        else\n        printf(\"%d\\n\", mc);\n        t--;\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9990319457889641, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3983de413e4282ec68cba303c734be43", "bug_code_uid": "06be357e68d66e2576d8fdb8481caffb", "src_uid": "f530e6f720dafaf8bff9324289b90b28", "apr_id": "d9bd37676efbfa0c64a6598278d593f0", "difficulty": 1100, "tags": ["greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint a[10005];\nint min(int a,int b)\n{\n    if(a<b)\n        return a;\n    else\n        return b;\n}\nint main()\n{\n    int n;\n    while(scanf(\"%d\",&n) != EOF)\n    {\n        memset(a,0,sizeof(a));\n        for(int i = 0;i < n; i++)\n        {\n            int d;\n            scanf(\"%d\",&d);\n            a[i] = min(d-1,1000000-d);\n        }\n        int max = a[0];\n        for(int i = 0; i < n; i++)\n            if(a[i] > max)\n                max = a[i];\n        printf(\"%d\\n\",max);\n    }\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint a[100005];\nint min(int a,int b)\n{\n    if(a<b)\n        return a;\n    else\n        return b;\n}\nint main()\n{\n    int n;\n    while(scanf(\"%d\",&n) != EOF)\n    {\n        memset(a,0,sizeof(a));\n        for(int i = 0;i < n; i++)\n        {\n            int d;\n            scanf(\"%d\",&d);\n            a[i] = min(d-1,1000000-d);\n        }\n        int max = a[0];\n        for(int i = 0; i < n; i++)\n            if(a[i] > max)\n                max = a[i];\n        printf(\"%d\\n\",max);\n    }\n}"}
{"similarity_score": 0.9950372208436724, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0210ad261b0eef6099a7cc84477dcecd", "bug_code_uid": "47a0cfc46f2f63a3079ab84808d63927", "src_uid": "fcd88c7b64da4b839cda4273d928429d", "apr_id": "cb863c1b27bc431fd385efde915aec4d", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\nlong long n, arr[20000], rest=0, x=0, i, j=0;\nscanf(\"%I64d\", &n);\nfor(i=0; i<n; i++) scanf(\"%I64d\", &arr[i]);\nfor(i=0; i<n; i++){\n    if(arr[i]==1) {arr[n+j]=1;  j++;}\n\n    else break;\n\n}\nn=n+j;\n\n\n\nfor(i=0; i<n; ){\n    if(arr[i]==1) {\n     x++;\n     i++;\n    }\nelse {\n        if(x>rest)rest=x;\n        x=0;\n        i+=1;\n\n}\n}\nif(x>rest) rest=x;\n\nprintf(\"%I64d\", rest);\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\nlong long n, arr[4000000], rest=0, x=0, i, j=0;\nscanf(\"%I64d\", &n);\nfor(i=0; i<n; i++) scanf(\"%I64d\", &arr[i]);\nfor(i=0; i<n; i++){\n    if(arr[i]==1) {arr[n+j]=1;  j++;}\n\n    else break;\n\n}\nn=n+j;\n\n\n\nfor(i=0; i<n; ){\n    if(arr[i]==1) {\n     x++;\n     i++;\n    }\nelse {\n        if(x>rest)rest=x;\n        x=0;\n        i+=1;\n\n}\n}\nif(x>rest) rest=x;\n\nprintf(\"%I64d\", rest);\n}\n"}
{"similarity_score": 0.9040805511393747, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "051a56bd06a6186735f31669d1d38157", "bug_code_uid": "4b57c888addaecb3e644286aca10c079", "src_uid": "21c0e12347d8be7dd19cb9f43a31be85", "apr_id": "aafeb9107544585bb44db60f2f6a27e8", "difficulty": 1700, "tags": ["hashing", "divide and conquer", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nchar a[200000];\nchar b[200000];\n\nbool isEqual(int aPos, int bPos, int len);\nbool compare(int aPos, int bPos, int len);\n\nint main(void)\n{\n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n\n    if(isEqual(0, 0, strlen(a)))\n        printf(\"yes\");\n    else\n        printf(\"no\");\n\n\n    return 0;\n}\n\nbool isEqual(int aPos, int bPos, int len)\n{\n    if(compare(aPos, bPos, len))\n        return true;\n    else if(len %2 == 0 \n            && isEqual(aPos, bPos + len / 2, len / 2)\n            && isEqual(aPos + len / 2, bPos, len / 2))\n        return true;\n    else\n        return false;\n}\n\nbool compare(int aPos, int bPos, int len)\n{\n    for(int i = 0; i < len; i++)\n        if(a[aPos + i] != b[bPos + i])\n            return false;\n\n    return true;\n}\n", "fixed": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nchar a[200000];\nchar b[200000];\n\nbool isEqual(int aPos, int bPos, int len);\nbool compare(int aPos, int bPos, int len);\n\nint main(void)\n{\n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n\n    if(isEqual(0, 0, strlen(a)))\n        printf(\"yes\");\n    else\n        printf(\"no\");\n\n\n    return 0;\n}\n\nbool isEqual(int aPos, int bPos, int len)\n{\n    if(compare(aPos, bPos, len))\n        return true;\n    else if(len %2 == 0 \n            && (isEqual(aPos, bPos, len / 2)\n            && isEqual(aPos + len / 2, bPos + len / 2, len / 2)))\n        return true;\n    else if(len %2 == 0 \n            && (isEqual(aPos, bPos + len / 2, len / 2)\n            && isEqual(aPos + len / 2, bPos, len / 2)))\n        return true;\n    else\n        return false;\n}\n\nbool compare(int aPos, int bPos, int len)\n{\n    for(int i = 0; i < len; i++)\n        if(a[aPos + i] != b[bPos + i])\n            return false;\n\n    return true;\n}\n"}
{"similarity_score": 0.998158379373849, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9baffb89f6329b669393057cae748c97", "bug_code_uid": "750736491df8eea18983411b0ed39e45", "src_uid": "bc532d5c9845940b5f59485394187bf6", "apr_id": "cb453c944ee92ccbe5526f845a295cfc", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,odd1=0,odd2=0,even1=0,even2=0,sum=0,i,a,b;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a%2==0)\n            even1++;\n        else\n            odd1++;\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&b);\n        if(a%2==0)\n            even2++;\n        else\n            odd2++;\n    }\n    if(odd2<=even1)\n        sum=sum+odd2;\n    else\n        sum=sum+even1;\n    if(odd1<=even2)\n        sum=sum+odd1;\n    else\n        sum=sum+even2;\n    printf(\"%d\",sum);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,odd1=0,odd2=0,even1=0,even2=0,sum=0,i,a,b;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a%2==0)\n            even1++;\n        else\n            odd1++;\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&b);\n        if(b%2==0)\n            even2++;\n        else\n            odd2++;\n    }\n    if(odd2<=even1)\n        sum=sum+odd2;\n    else\n        sum=sum+even1;\n    if(odd1<=even2)\n        sum=sum+odd1;\n    else\n        sum=sum+even2;\n    printf(\"%d\",sum);\n}\n"}
{"similarity_score": 0.5698427382053654, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "73b264d2c218f86e615dbcc3755c51c3", "bug_code_uid": "c05d7fd20e2253a5f7e61ed68abc83bf", "src_uid": "d7e6e5042b8860bb2470d5a493b0adf6", "apr_id": "7ae64683cc183eaaa71dfb80aee6e55f", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint min(int a[], int n) {\n\tint min = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] < a[min])\n\t\t\tmin = i;\n\t}\n\treturn min;\n}\n\nint main() {\n\tint i,k,total = 0,res = 0,pos;\n\tchar c[7];\n\tscanf(\"%d %s\", &k, c);\n\tint length = strlen(c);\n\tint n[length];\n\tfor (i = 0; i < length; i++) {\n\t\tn[i] = c[i] - 48;\n\t\ttotal += n[i];\n\t}\n\tif (total >= k) {\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t} else {\n\t\twhile (total < k) {\n\t\t\tpos = min(n,length);\n\t\t\ttotal += (9 - n[pos]);\n\t\t\tn[pos] = 9;\n\t\t\tres++;\n\t\t}\n\t}\n\tprintf(\"%d\", res);\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint compare(const void *a, const void *b) {\n\treturn (*(int *)a - *(int *)b);\n}\n\nint main() {\n\tint i,k,total = 0,res = 0,pos;\n\tchar c[1000001];\n\tscanf(\"%d %s\", &k, c);\n\tint length = strlen(c);\n\tint n[length];\n\tfor (i = 0; i < length; i++) {\n\t\tn[i] = c[i] - 48;\n\t\ttotal += n[i];\n\t}\n\tif (total >= k) {\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t} else {\n\t\tqsort(n,length,sizeof(int),compare);\n\t\tfor (i = 0; i < length && total < k; i++) {\n\t\t\ttotal += (9 - n[i]);\n\t\t\tres++;\n\t\t}\n\t}\n\tprintf(\"%d\", res);\n}"}
{"similarity_score": 0.9735194992778046, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6785bfdaf88edd0620ddfd93c40be776", "bug_code_uid": "67c36b9ba70dfa8a3863cbee1da2f98f", "src_uid": "044c2a3bafe4f47036ee81f2e40f639a", "apr_id": "c80983f51f35862d46e637198bd907a6", "difficulty": 800, "tags": ["greedy", "implementation", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint len, d, flag = 0, ans = 0, smallest = 100000, smaller = 100000, small = 100000, estp = 0, erp = 0, p = 0;\r\nint arr[2001] = {};\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        scanf(\"%d %d\", &len, &d);\r\n        for(int i = 1; i <= len; i++){\r\n            scanf(\"%d\", &arr[i]);\r\n            if(arr[i] > d)\r\n                flag = 1;\r\n            if(arr[i] < smallest){\r\n                smaller = smallest;\r\n                erp = estp;\r\n                smallest = arr[i];\r\n                estp = i;\r\n            }\r\n            else if(arr[i] < smaller){\r\n                smaller = arr[i];\r\n                erp = i;\r\n            }\r\n        }\r\n        if(flag == 0){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            if(d < smaller + smallest){\r\n                printf(\"NO\\n\");\r\n                //ans = 1;\r\n            }\r\n            else\r\n                printf(\"YES\\n\");\r\n\r\n        }\r\n        flag = 0;\r\n        ans = 0;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint len, d, flag = 0, ans = 0, smallest = 100000, smaller = 100000, small = 100000, estp = 0, erp = 0, p = 0;\r\nint arr[2001] = {};\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        scanf(\"%d %d\", &len, &d);\r\n        for(int i = 1; i <= len; i++){\r\n            scanf(\"%d\", &arr[i]);\r\n            if(arr[i] > d)\r\n                flag = 1;\r\n            if(arr[i] < smallest){\r\n                smaller = smallest;\r\n                erp = estp;\r\n                smallest = arr[i];\r\n                estp = i;\r\n            }\r\n            else if(arr[i] < smaller){\r\n                smaller = arr[i];\r\n                erp = i;\r\n            }\r\n        }\r\n        if(flag == 0){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            if(d < smaller + smallest){\r\n                printf(\"NO\\n\");\r\n                //ans = 1;\r\n            }\r\n            else\r\n                printf(\"YES\\n\");\r\n\r\n        }\r\n        flag = 0;\r\n        ans = 0;\r\n        smaller = 100000;\r\n        smallest = 100000;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9534883720930233, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3d884ddd51a56736ed41b9c9c5ab5122", "bug_code_uid": "26b51ece7c9853fcf920b8d4608c20f8", "src_uid": "130fd7f40d879e25b0bff886046bf699", "apr_id": "07c67274aa5578db972ca6e37537e84e", "difficulty": 900, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//(\u261e\uff9f\u30ee\uff9f)\u261eNOTSOAWESOME\nint min(int a,int b){return a<b?a:b;}\nmain(){\n    int t,n,i,a,b,v;\n    scanf(\"%d\",&t);\n    while(t--)\n    {a=0;b=0;\n        scanf(\"%d\",&n);i=n;\n        while(i--)\n        {\n            scanf(\"%d\",&v);\n            if(v>=a){b=a;a=v;}\n        }\n        v=min(a,b)-1;\n        printf(\"%d\\n\",min(n-2,v));\n    }\n}", "fixed": "//(\u261e\uff9f\u30ee\uff9f)\u261eNOTSOAWESOME\nint min(int a,int b){return a<b?a:b;}\nmain(){\n    int t,n,i,a,b,v;\n    scanf(\"%d\",&t);\n    while(t--)\n    {a=0;b=0;\n        scanf(\"%d\",&n);i=n;\n        while(i--)\n        {\n            scanf(\"%d\",&v);\n            if(v>=a){b=a;a=v;}\n            else if(v>=b){b=v;}\n        }\n        v=min(a,b)-1;\n        printf(\"%d\\n\",min(n-2,v));\n    }\n}"}
{"similarity_score": 0.8601036269430051, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "6bd2a37c557cbd2f94973fb59610a8f6", "bug_code_uid": "c2266bec0382d522b6210305751c5061", "src_uid": "fb0a4c8f737c36596c2d8c1ae0d1e34e", "apr_id": "a83339c9d8da87b61a356ddb2f511b07", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int N;\n    scanf(\"%d\", &N);\n    for (int i = 0; i < N; i++){\n        int eggs, a, b;\n        scanf(\"%d %d %d\", &eggs, &a, &b);\n        if (a == eggs || b == eggs){\n            printf(\"1\\n\");\n            continue;\n        }\n        else if (a < b){\n            printf(\"%d\\n\", eggs - a + 1);\n            continue;\n        }\n        else\n            printf(\"%d\\n\", eggs - b + 1);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int N;\n    scanf(\"%d\", &N);\n    for (int i = 0; i < N; i++){\n        int eggs, a, b;\n        scanf(\"%d %d %d\", &eggs, &a, &b);\n        if (a < b){\n            printf(\"%d\\n\", eggs - a + 1);\n            continue;\n        }\n        else{\n            printf(\"%d\\n\", eggs - b + 1);\n            continue;\n        }\n    }\n}"}
{"similarity_score": 0.975800156128025, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "224cfdc2031022371d772e7dc628ac4c", "bug_code_uid": "dbee96cf471824c70d728f2912daf544", "src_uid": "714834defd0390659f6ed5bc3024f613", "apr_id": "2f920d2271ce062460e180c666e3294b", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int cases,n,plays1,clears1,i,j,plays,clears,flag=0;\n    scanf(\"%d\",&cases);\n    for(i=0;i<cases;i++)\n    {\n        scanf(\"%d\",&n);\n        flag=0;\n        scanf(\"%d%d\",&plays1,&clears1);\n        if(plays1<clears1)\n            flag=1;\n        for(j=0;j<n-1;j++)\n        {\n            scanf(\"%d%d\",&plays,&clears);\n            if(plays<clears||plays<plays1||clears<clears1||(plays<=plays1&&clears>clears1))\n                flag=1;\n            plays1=plays;\n            clears1=clears;\n        }\n        if(flag==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int cases,n,plays1,clears1,i,j,plays,clears,flag=0;\n    scanf(\"%d\",&cases);\n    for(i=0;i<cases;i++)\n    {\n        scanf(\"%d\",&n);\n        flag=0;\n        scanf(\"%d%d\",&plays1,&clears1);\n        if(plays1<clears1)\n            flag=1;\n        for(j=0;j<n-1;j++)\n        {\n            scanf(\"%d%d\",&plays,&clears);\n            if(plays<clears||plays<plays1||clears<clears1||(plays<=plays1&&clears>clears1)||(plays-plays1<clears-clears1))\n                flag=1;\n            plays1=plays;\n            clears1=clears;\n        }\n        if(flag==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n}"}
{"similarity_score": 0.46792913866829566, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "421de74e5951709308b79b800ee7bebd", "bug_code_uid": "26588dd7a9161297ad80f5ea2a2bbc49", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "1af1a2e64950a01a30c7168d31ecc1c0", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n int compare (const void * a, const void * b)\n{  \n    return ( *(int*)a - *(int*)b );\n}\nint main(void){\n   \nlong long int test,i,j,n,count,flag,flag2,b1,l,m,u,r,q,d,x,max,max2,min,f,sum,b,c[7]={0};\nchar k[1000000];\nscanf(\"%s\",k);\nb=0;\ncount=0;\nfor(i=0;i<strlen(k);i++){\n   \n    if(k[i]=='B'){\n        c[6]++;\n        count++;\n    }\n    if(k[i]=='u'){\n        c[0]++;\n         count++;\n    }\n     if(k[i]=='a'){\n          count++;\n        c[1]++;\n        m=c[i];\n    }\n     if(k[i]=='l'){\n          count++;\n        c[2]++;\n    }\n     if(k[i]=='b'){\n          count++;\n        c[3]++;\n    }\n    if(k[i]=='r'){\n         count++;\n        c[4]++;\n    }\n    if(k[i]=='s'){\n         count++;\n        c[5]++;\n    } \n   //  printf(\"%c %d\\n\",k[i],count);\n}\n\n    c[1]/=2;\n\n\n    c[0]/=2;\nb=77777777;\nfor(i=0;i<7;i++){\n    if(c[i]<b){\n        b=c[i];\n    }\n}\nprintf(\"%lld\",b);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n int compare (const void * a, const void * b)\n{  \n    return ( *(int*)a - *(int*)b );\n}\nint main(void){\n   \nlong long int test,i,j,n,count,flag,flag2,b1,l,m,u,r,q,d,x,max,max2,min,f,sum,b,a[7]={0};\nchar s[1000000];\nscanf(\"%s\",s);\nb=0;\ncount=0;\nfor(i=0;i<strlen(s);i++){\n   if(s[i]=='B') a[0]++;\n\t\telse if(s[i]=='l') a[1]++;\n\t\telse if(s[i]=='b') a[2]++;\n\t\telse if(s[i]=='s') a[3]++;\n\t\telse if(s[i]=='r') a[4]++;\n\t\telse if(s[i]=='u') a[5]++;\n\t\telse if(s[i]=='a') a[6]++;\n\t}\n\ta[5]=a[5]/2;\n\ta[6]=a[6]/2;\nb=77777777;\nfor(i=0;i<7;i++){\n    if(a[i]<b){\n        b=a[i];\n    }\n}\nprintf(\"%lld\",b);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.6810126582278481, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f30068b30b513434abf056f2e45fbcd2", "bug_code_uid": "678609e25e74202df9f352cf3ef34efa", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "4b1963732c2a6d89dc9ba0ada108e2f9", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS 1\r\n#include<stdio.h>\r\nint main(void)\r\n{\r\n\tchar arr[100] = { 0 };\r\n\tint i, j, l;\r\n\tint ch = 0;\r\n\tscanf(\"%d\", &i);\r\n\twhile (i)\r\n\t{\r\n\t\tscanf(\"%d\", &j);\r\n\t\tfor (l = 0; l < j; l++)\r\n\t\t{\r\n\t\t\tscanf(\"%c\", &arr[l]);\r\n\t\t}\r\n\t\tfor (l = 0; l < j; l++)\r\n\t\t{ \r\n\t\t\t//ch = (int)getchar(arr[l]);\r\n\t\t\tif (ch > 96)\r\n\t\t\t{\r\n\t\t\t\tch = (int)getchar(arr[l]);\r\n\t\t\t}\r\n\t\t }\r\n\t\tprintf(\"&d\", ch - 'a');\r\n\t\ti--;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS 1\r\n#include<stdio.h>\r\nint main(void)\r\n{\r\n\tchar arr[100] = { 0 };\r\n\tint i, j, l;\r\n\tint ch = 0;\r\n\tscanf(\"%d\", &i);\r\n\twhile (i)\r\n\t{\r\n\t\tscanf(\"%d\", &j);\r\n\t\t\tscanf(\"%s\", &arr);\r\n\t\t\tint max = 0;\r\n\t\tfor (l = 0; l < j; l++)\r\n\t\t{ \r\n\t\t\tif (arr[l] - 96 > max)\r\n\t\t\t\tmax = arr[l] - 96;\r\n\t\t }\r\n\t\tprintf(\"%d\\n\",max);\r\n\t\ti--;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8486238532110092, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "f6870fcd684b4355de22b2060de5f6da", "bug_code_uid": "de888a348eb6744767cac71994723154", "src_uid": "7896740b6f35010af751d3261b5ef718", "apr_id": "336fd850b5d3f177216d924ee1a5f240", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main(void)\n{\n\tint n;\n\tscanf(\"%d\",&n);\n \n\tfor(int i=0;i<=n;i++)\n\t{\n\t\tfor (int j=n-i;j>0;j--)\n\t\t\tprintf(\"  \");\n\t\tfor (int j=0;j<i;j++)\n\t\t\tprintf(\"%d\",j);\n\t\tfor (int j=i;j>0;j--)\n\t\t\tprintf(\"%d\",j);\n\t\t\tprintf(\"0\\n\");\n\t}\n \n\tfor(int i=n-1;i>=0;i--)\n\t{\n\t\tfor(int j=n-i;j>0;j--)\n\t\t\tprintf(\"  \");\n\t\tfor(int j=0;j<i;j++)\n\t\t\tprintf(\"%d\",j);\n\t\tfor (int j=i;j>0;j--)\n\t\t\tprintf(\"%d \", j);\n\t\t\tprintf(\"0\\n\");\n\t}\n \nreturn 0;\n}", "fixed": "#include <stdio.h>\n \nint main(void)\n{\n\tint n;\n\tscanf(\"%d \", &n);\n \n\tfor(int i=0;i<=n;i++)\n\t{\n\t\tfor(int j=n-i;j>0;j--)\n\t\t\tprintf(\"  \");\n\t\tfor(int j=0;j<i;j++)\n\t\t\tprintf(\"%d \", j);\n\t\tfor(int j=i;j>0;j--)\n\t\t\tprintf(\"%d \", j);\n\t\t\tprintf(\"0\\n\");\n\t}\n \n\tfor(int i=n-1;i>=0;i--)\n\t{\n\t\tfor(int j=n-i;j>0;j--)\n\t\t\tprintf(\"  \");\n\t\tfor(int j=0;j<i;j++)\n\t\t\tprintf(\"%d \", j);\n\t\tfor(int j=i;j>0;j--)\n\t\t\tprintf(\"%d \", j);\n\t\t\tprintf(\"0\\n\");\n\t}\n \nreturn 0;\n}"}
{"similarity_score": 0.8155988857938719, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "cdfdeb517bd67fa7dd4cfc8497ed27e4", "bug_code_uid": "c9e52f3f4f39e74e1f1a71c2b37a8abf", "src_uid": "df6ee0d8bb25dc2040adf1f115f4a83b", "apr_id": "658b0999651bbfa5d27bc5d115314dc8", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int k=0;k<t;k++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)\n        {\n        for(int j=1;j<=n;j++)\n        {\n            if(i==n/2+1 && i==j && n%2!=0)\n                printf(\" 3\");\n            else\n            {\n                if(i==j || i+j==n+1)\n                {    if(j==1)\n                        printf(\"1\");\n                    else \n                        printf(\" 1\");\n                }       \n                else\n                {\n                    if(j==1)\n                        printf(\"0\");\n                    else\n                        printf(\" 0\");     \n                }       \n            }    \n        }\n        printf(\"\\n\");\n        }\n\n\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int k=0;k<t;k++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)\n        {\n        for(int j=1;j<=n;j++)\n        {\n            if((i==n/2+1 || i==1 || i==n ) && n%2!=0)\n            {   \n                if(j==1)\n                    printf(\"1\");\n                \n                else if(i==j || j==n || j==n/2+1 ) \n                    printf(\" 1\");\n                \n                else\n                printf(\" 0\");\n            }    \n            else\n            {\n                if(i==j || i+j==n+1)\n                {    if(j==1)\n                        printf(\"1\");\n                    else \n                        printf(\" 1\");\n                }       \n                else\n                {\n                    if(j==1)\n                        printf(\"0\");\n                    else\n                        printf(\" 0\");     \n                }       \n            }    \n        }\n        printf(\"\\n\");\n        }\n\n\n    }\n}"}
{"similarity_score": 0.9931538110451849, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "40ce8cfe1ac43b3593d81d19c47a37a2", "bug_code_uid": "25e9e9cca5c6ea621ce9b587214b648b", "src_uid": "60776cefd6c1a2f3c16b3378ebc31a9a", "apr_id": "d8061dccbbde3b17b9d8731f61e3611c", "difficulty": 1500, "tags": ["two pointers", "binary search", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a, b, c, d, e, f, g;\n\tchar ZA[100001], ZB[52];\n\n\tscanf(\"%d%s\", &a, ZA);\n\tfor (b = 0; b < 52; ZB[b++] = 0);\n\tc = 0;\n\tfor (b = 0; b < a; ++b)\n\t\tif (ZA[b] >= 'a' && ZB[26 + ZA[b] - 'a'] == 0) {\n\t\t\tZB[26 + ZA[b] - 'a'] = 1;\n\t\t\tc += 1;\n\t\t} else if (ZA[b] <= 'Z' && ZB[ZA[b] - 'A'] == 0) {\n\t\t\tZB[ZA[b] - 'A'] = 1;\n\t\t\tc += 1;\n\t\t}\n\tfor (b = 0; b < 52; ZB[b++] = 0);\n\td = e = 0; g = -1;\n\tfor (b = 0; b < a; ++b) {\n\t\tif (d == c) {\n\t\t\twhile (1) {\n\t\t\t\tf = ZA[e] >= 'a' ? 26  + ZA[e] - 'a' : ZA[e] - 'A';\n\t\t\t\tif (--ZB[f] == 0) {\n\t\t\t\t\tif (g == -1 || b - e < g)\n\t\t\t\t\t\tg = b - e;\n\t\t\t\t\td -= 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\te += 1;\n\t\t\t}\n\t\t\te += 1;\n\t\t}\n\t\tif (ZA[b] >= 'a') {\n\t\t\tif (ZB[ZA[b] - 'a' + 26] == 0)\n\t\t\t\td += 1;\n\t\t\tZB[ZA[b] - 'a' + 26] += 1;\n\t\t} else {\n\t\t\tif (ZB[ZA[b] - 'A'] == 0)\n\t\t\t\td += 1;\n\t\t\tZB[ZA[b] - 'A'] += 1;\n\t\t}\n\t}\n\tif (d == c) {\n\t\twhile (1) {\n\t\t\tf = ZA[e] >= 'a' ? 26  + ZA[e] - 'a' : ZA[e] - 'A';\n\t\t\tif (--ZB[f] == 0) {\n\t\t\t\tif (g == -1 || b - e < g)\n\t\t\t\t\tg = b - e;\n\t\t\t\td -= 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\te += 1;\n\t\t}\n\t\te += 1;\n\t}\n\tprintf(\"%d\\n\", g);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint a, b, c, d, e, f, g;\n\tchar ZA[100001];\n        int ZB[52];\n\n\tscanf(\"%d%s\", &a, ZA);\n\tfor (b = 0; b < 52; ZB[b++] = 0);\n\tc = 0;\n\tfor (b = 0; b < a; ++b)\n\t\tif (ZA[b] >= 'a' && ZB[26 + ZA[b] - 'a'] == 0) {\n\t\t\tZB[26 + ZA[b] - 'a'] = 1;\n\t\t\tc += 1;\n\t\t} else if (ZA[b] <= 'Z' && ZB[ZA[b] - 'A'] == 0) {\n\t\t\tZB[ZA[b] - 'A'] = 1;\n\t\t\tc += 1;\n\t\t}\n\tfor (b = 0; b < 52; ZB[b++] = 0);\n\td = e = 0; g = -1;\n\tfor (b = 0; b < a; ++b) {\n\t\tif (d == c) {\n\t\t\twhile (1) {\n\t\t\t\tf = ZA[e] >= 'a' ? 26  + ZA[e] - 'a' : ZA[e] - 'A';\n\t\t\t\tif (--ZB[f] == 0) {\n\t\t\t\t\tif (g == -1 || b - e < g)\n\t\t\t\t\t\tg = b - e;\n\t\t\t\t\td -= 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\te += 1;\n\t\t\t}\n\t\t\te += 1;\n\t\t}\n\t\tif (ZA[b] >= 'a') {\n\t\t\tif (ZB[ZA[b] - 'a' + 26] == 0)\n\t\t\t\td += 1;\n\t\t\tZB[ZA[b] - 'a' + 26] += 1;\n\t\t} else {\n\t\t\tif (ZB[ZA[b] - 'A'] == 0)\n\t\t\t\td += 1;\n\t\t\tZB[ZA[b] - 'A'] += 1;\n\t\t}\n\t}\n\tif (d == c) {\n\t\twhile (1) {\n\t\t\tf = ZA[e] >= 'a' ? 26  + ZA[e] - 'a' : ZA[e] - 'A';\n\t\t\tif (--ZB[f] == 0) {\n\t\t\t\tif (g == -1 || b - e < g)\n\t\t\t\t\tg = b - e;\n\t\t\t\td -= 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\te += 1;\n\t\t}\n\t\te += 1;\n\t}\n\tprintf(\"%d\\n\", g);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9604395604395605, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f49978f54aedbd80348e8cde268d8795", "bug_code_uid": "06ee0616ffb190eb31f3473d39aa42da", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "e6fe2c8740b08a4d7e98089d91f4c646", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{int t,i,n,x,sum,y,z,j;\r\n    scanf(\"%d\",&t);\r\n    for(j=0;j<t;j++)\r\n    {sum=0;y=0;z=0;\r\n    scanf(\"%d %d\",&n,&x);\r\n    int arr[n];\r\n    sum=0;\r\n    for(i=0;i<n;i++)\r\n     scanf(\"%d\",&arr[i]);\r\n    for(i=0;i<n;i++)\r\n    sum+=arr[i];\r\n    for(i=0;i<n;i++)\r\n    { if(arr[i]%x==0)\r\n     y+=arr[i]/x;\r\n    else\r\n   y+=arr[i]/x+1;\r\n}\r\nif(sum%x==0)\r\nz=sum/x;\r\nelse\r\nz=sum/x+1;\r\nprintf(\"%d %d\\n\",z,y);}\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{long long t,i,n,x,sum,y,z,j;\r\n    scanf(\"%lld\",&t);\r\n    for(j=0;j<t;j++)\r\n    {sum=0;y=0;z=0;\r\n    scanf(\"%lld %lld\",&n,&x);\r\n    int arr[n];\r\n    sum=0;\r\n    for(i=0;i<n;i++)\r\n     scanf(\"%lld\",&arr[i]);\r\n    for(i=0;i<n;i++)\r\n    sum+=arr[i];\r\n    for(i=0;i<n;i++)\r\n    { if(arr[i]%x==0)\r\n     y+=arr[i]/x;\r\n    else\r\n   y+=arr[i]/x+1;\r\n}\r\nif(sum%x==0)\r\nz=sum/x;\r\nelse\r\nz=sum/x+1;\r\nprintf(\"%lld %lld\\n\",z,y);}\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8676470588235294, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3711ca26681a68b300ceb3f4d5bc313e", "bug_code_uid": "f314c1df46dd42232c1f155659ca2324", "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842", "apr_id": "bac671a7e3ebbfe1ec0a8d77755f9b6c", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,a,b,ans;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a==b)\n        {\n            ans=0;\n            //continue;\n        }\n        if(a<b)\n        {\n            if((a%2==0 && b%2!=0 )||(a%2!=0 && b%2==0))\n           { ans=1;\n              //continue;\n              }\n            if((a%2==0 && b%2==0 )||(a%2!=0 && b%2!=0))\n             {ans=2;\n             //continue;\n             }\n        }\n        if(a>b)\n        {\n             if((a%2==0 && b%2==0 )||(a%2!=0 && b%2!=0))\n            { ans=1;\n            //continue;\n            }\n              if((a%2==0 && b%2!=0 )||(a%2!=0 && b%2==0))\n           { ans=2;\n            //continue;\n            }\n           \n        }\n    \n           printf(\"%d\",ans);\n    }\n    return 0;\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,a,b,ans;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a==b)\n        {\n            ans=0;\n\n        }\n        if(a<b)\n        {\n            if((a%2==0 && b%2!=0 )||(a%2!=0 && b%2==0))\n           {\n               ans=1;\n              \n             }\n            if((a%2==0 && b%2==0 )||(a%2!=0 && b%2!=0))\n             {\n                 ans=2;\n             \n             }\n        }\n        if(a>b)\n        {\n             if((a%2==0 && b%2==0 )||(a%2!=0 && b%2!=0))\n            { \n                ans=1;\n            \n            }\n              if((a%2==0 && b%2!=0 )||(a%2!=0 && b%2==0))\n           { \n               ans=2;\n            \n            }\n           \n        }\n    \n           printf(\"%d\\n\",ans);\n    }\n    return 0;\n\n}"}
{"similarity_score": 0.24027072758037224, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "36da68cc8d7d69b4065ec5816d6bc9a9", "bug_code_uid": "7a4fd8e52672069e75db4b83fbc733a3", "src_uid": "a457e22fc8ff882c15ac57bca6960657", "apr_id": "1151c6c3e8a180cf5ecb4b469627ef68", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main ()\n{\n    int n, i, j, len=0, ih, ie, id=0, ii, ii2;\n    char a[200], s[5];\n    gets(a);\n    j = strlen(a);\n    for(i=0;i<j;i++){\n        if(a[i] == 'h'){\n            s[len] = '1';\n            len++;\n\n        }\n\n\n        else if(a[i] == 'e') {\n            //a[i] = 2;\n            s[len] = '2';\n            len++;\n        }\n\n\n\n        else if(a[i] == 'd'){\n            id = i;\n            s[len] = '4';\n            len++;\n        }\n        else if(a[i] == 'i'){\n            if(id == 0) {\n                s[len] = '3';\n                len++;\n            }\n\n            else if(i > id){\n                s[len] = '3';\n                len++;\n            }\n            }\n\n        //else if(a[i] == 'i') a[i] = 5;\n    }\n    //puts(s);\n    if(atoi(s) == 12343)  printf(\"YES\");\n    else printf(\"NO\");\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main ()\n{\n    int n, i,l, j=0;\n    char a[1200];\n    gets(a);\n    char s[5] = \"heidi\";\n\n    l = strlen(a);\n    s[5] ='\\0';\n    for(i=0;i<l;i++){\n        if(a[i] == s[j]) j++;\n        if(j==5) break;\n    }\n    if(j == 5) printf(\"YES\");\n    else printf(\"NO\");\n    //printf(\"%c %c\", s[3], s[4]);\n\n}\n"}
{"similarity_score": 0.7492012779552716, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f7aed06a84fcb3c00a66987f68ce6e32", "bug_code_uid": "9e34f05a81163c7283a2e748b75b44a2", "src_uid": "09236a3faa7fce573a4e5e758287040f", "apr_id": "8ddf991724b9a2d712b6d061f147bb6f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int k,n,a[100000],i,j,c,m,p,r,d;\n    scanf(\"%d\",&k);\n    while(k--){\n        p=-1,m=-1;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=0;i<n;i++){\n            c=0;\n            if(a[i]>p){\n                 p=a[i];\n            for(j=0;j<n;j++){\n               if(a[j]>=a[i]){\n                c++;\n               }\n            }\n            if(c>m){\n                m=c;\n                r=a[i];\n            }\n            }\n        }\n        if(m<=r){\n            d=m;\n        }\n        else{\n            d=r;\n        }\n        printf(\"%d\\n\",d);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int k,n,a[100000],i,j,c,m,p,r,d;\n    scanf(\"%d\",&k);\n    while(k--){\n        m=-1;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=0;i<n;i++){\n            c=0;\n            for(j=0;j<n;j++){\n               if(a[j]>=a[i]){\n                c++;\n               }\n            }\n            if(a[i]<=c){\n                d=a[i];\n            }\n            else{\n                d=c;\n            }\n            if(d>m){\n                m=d;\n            }\n        }\n        printf(\"%d\\n\",m);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9887640449438202, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c5017786c422cb7c5aa4dd096225bdcc", "bug_code_uid": "38977e9a7e26d2c0154ce8c22452211d", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "3279ed24a7cd99a0d74a3c6715b5f4a4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\ninat main(){\n    int a=0,i,n,m,x;\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&n);\n        if(n != x){\n            a++;\n            n=x;\n        }\n    }\n    printf(\"%d\",a);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int a=0,i,n,m,x;\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&n);\n        if(n != x){\n            a++;\n            x=n;\n        }\n    }\n    printf(\"%d\",a);\n    return 0;\n}"}
{"similarity_score": 0.14196762141967623, "equal_cnt": 18, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "655d24610e13e1ea2d368c0ce7349c82", "bug_code_uid": "db567e01eb9514efb0905895a776e5bb", "src_uid": "94ec011dc830661c226bd860b9d70de5", "apr_id": "74a7c4bfaa0506eaa6070547a8f0ff4a", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid swap(int *xp, int *yp)\r\n{\r\n    int temp = *xp;\r\n    *xp = *yp;\r\n    *yp = temp;\r\n}\r\n\r\n\r\nint main(void) {\r\n\tint n,c,d,i,j,k,l,m;\r\n\tint sum=0,s=0;\r\n\t\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++){\r\n\t    scanf(\"%d\",&c);\r\n\t    int a[c],b[c];\r\n\t    for(j=0;j<c;j++){\r\n\t        scanf(\"%d\",&a[j]);\r\n\t    }\r\n\r\n\t    \r\n\t    for(j=0;j<c;j++){\r\n\t        scanf(\"%d\",&b[j]);\r\n\t    }\r\n\r\n\r\n\t    \r\n\t    for(k=0;k<c-1;k++){\r\n\t        if(abs(a[k]-a[k+1])<abs(a[k+1]-b[k])){\r\n\t            //k++;\r\n\t        }\r\n\t        else if(a[k]==b[k+1] || b[k]==a[k+1])\r\n\t            swap(&a[k+1],&b[k+1]);\r\n\t            \r\n\t        else{\r\n\t            swap(&a[k],&b[k]);\r\n\t            //printf(\"swapping\\n\");\r\n\t            //k++;\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    for(k=0;k<c-1;k++){\r\n\t        sum=sum+abs((a[k]-a[k+1]));\r\n\t    }\r\n\t    for(k=0;k<c-1;k++){\r\n\t        s=s+abs((b[k]-b[k+1]));\r\n\t    }\r\n\t    \r\n\t    printf(\"%d\\n\",abs(sum)+abs(s));\r\n\t    sum=0,s=0;\r\n\t    //if(a[c-1]>b[c-1])\r\n\t        //swap(&a[c-1],&b[c-1]);\r\n\t    \r\n\r\n\t    \r\n\r\n\t    //swap(&x, &y);\r\n\t    \r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n],b[n];\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&b[i]);\r\n\t\t}\r\n\t\tlong long int sum=0;\r\n\t\tfor(int i=0;i<n-1;i++){\r\n\t\t\tint w = abs(a[i]-a[i+1]);\r\n\t\t\tint x = abs(b[i]-b[i+1]);\r\n\t\t\tint y = abs(b[i]-a[i+1]);\r\n\t\t\tint z = abs(a[i]-b[i+1]);\r\n\t\t\tif(w+x<=y+z){\r\n\t\t\t\tsum = sum + w + x;\r\n\t\t\t}else{\r\n\t\t\t\tsum = sum + y + z;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",sum);\r\n\r\n\t}\r\n}"}
{"similarity_score": 0.2538265306122449, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "69d9be651ed3e5bde6a22b02b746dc0d", "bug_code_uid": "362d6b9868946b408a90c1a4433dc29f", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "5640e30f51bee79d259f0de58899d02a", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tint ar[n];\n\tlong long min=100045,max=-1;\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&ar[i]);\n\tfor(i=0;i<n;i++)\n\t{ min=100045;max=-1;\n\t\tfor(j=0;j<n;j++)\n\t\t{    if(i!=j)\n\t\t\t{if(ar[i]<0)\n\t\t\t  {if(ar[j]<0)\n\t\t\t    {\n\t\t\t    \tif(abs(abs(ar[i])-abs(ar[j]))<min)\n\t\t\t    \tmin=abs(abs(ar[i])-abs(ar[j]));\n\t\t\t    \tif(abs(abs(ar[i])-abs(ar[j]))>max)\n\t\t\t    \tmax=abs(abs(ar[i])-abs(ar[j]));\n\t\t\t    }\n\t\t\t    if(ar[j]>0)\n\t\t\t    {\n\t\t\t    \tif(abs(ar[i])+ar[j]<min)\n\t\t\t    \tmin=abs(ar[i])+ar[j];\n\t\t\t    \tif(abs(ar[i])+ar[j]>max)\n\t\t\t    \tmax=abs(ar[i])+ar[j];\n\t\t\t    }\n\t\t\t  }\n\t\t\t  if(ar[i]>0)\n\t\t\t  {\n\t\t\t  \tif(ar[j]<0)\n\t\t\t  \t{\n\t\t\t  \t\tif(abs(ar[j])+ar[i]<min)\n\t\t\t  \t\tmin=abs(ar[j])+ar[i];\n\t\t\t  \t\tif(abs(ar[j])+ar[i]>max)\n\t\t\t  \t\tmax=abs(ar[j])+ar[i];\n\t\t\t  \t}\n\t\t\t  \tif(ar[j]>0)\n\t\t\t  \t{\n\t\t\t  \t\tif(abs(ar[i]-ar[j])<min)\n\t\t\t  \t\tmin=abs(ar[i]-ar[j]);\n\t\t\t  \t\tif(abs(ar[i]-ar[j])>max)\n\t\t\t  \t\tmax=abs(ar[i]-ar[j]);\n\t\t\t  \t}\n\t\t\t  \n\t\t\t  }\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld %lld\\n\",min,max);\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tint ar[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&ar[i]);\n\t\n\tfor(i=0;i<n;i++)\n\t{long long min=100251,max=-1;\n\t\tif(i!=0&&i!=n-1)\n\t\t{\n\t\t min=abs(ar[i]-ar[i+1]);\n\t\t if(abs(ar[i]-ar[i-1])<min)\n\t\t min=abs(ar[i]-ar[i-1]);\n\t\t max=abs(ar[i]-ar[n-1]);\n\t\t if(abs(ar[i]-ar[0])>max)\n\t\t max=abs(ar[i]-ar[0]);\n\t\t}\n\t\tif(i==0)\n\t\t{\n\t\t\tmin=abs(ar[0]-ar[1]);\n\t\t\tmax=abs(ar[0]-ar[n-1]);\n\t\t}\n\t\tif(i==n-1)\n\t\t{min=abs(ar[n-1]-ar[n-2]);\n\t\tmax=abs(ar[n-1]-ar[0]);\n\t\t}\n\t\tprintf(\"%lld %lld\\n\",min,max);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9978021978021978, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "574c6e8b3ad299ff410d21ee63094010", "bug_code_uid": "c038bce3398385670e4a0ffc7702888d", "src_uid": "732d28ed9092883dccadbd1999308567", "apr_id": "9b31d1939f843d6385c603be0e69d2c8", "difficulty": 1400, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long int n,i,x,max;\n    scanf(\"%ld\",&n);\n\u00a0\n    long int *a,*b;\n    a=(long int*)malloc(n*sizeof(long int));\n    b=(long int*)calloc(200001,sizeof(long int ));\n\u00a0\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",a+i);\n        x=a[i];\n        b[x]++;\n    }\n    max=0;\n    for(i=0;i<200001;i++)\n    {\n        if(b[i]>max)\n        {\n            max=b[i];\n            x=i;\n        }\n    }\n    i=0;\n    printf(\"%ld\\n\",n-max);\n    while(a[i]!=x)\n        i++;\n    long int j=i;\n    while(i>0)\n    {\n        if(a[i-1]<x)\n            printf(\"1 %ld %ld\\n\",i,i+1);\n        else if(a[i-1]>x)\n            printf(\"2 %ld %ld\\n\",i,i+1);\n        i--;\n    }\n    i=j;\n    while(a[i]==x)\n        i++;\n    while(i<n)\n    {\n        if(a[i]<x)\n            printf(\"1 %ld %ld\\n\",i+1,i);\n        else if (a[i]>x)\n            printf(\"2 %ld %ld\\n\",i+1,i);\n        i++;\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long int n,i,x,max;\n    scanf(\"%ld\",&n);\n    long int *a,*b;\n    a=(long int*)malloc(n*sizeof(long int));\n    b=(long int*)calloc(200001,sizeof(long int ));\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",a+i);\n        x=a[i];\n        b[x]++;\n    }\n    max=0;\n    for(i=0;i<200001;i++)\n    {\n        if(b[i]>max)\n        {\n            max=b[i];\n            x=i;\n        }\n    }\n    i=0;\n    printf(\"%ld\\n\",n-max);\n    while(a[i]!=x)\n        i++;\n    long int j=i;\n    while(i>0)\n    {\n        if(a[i-1]<x)\n            printf(\"1 %ld %ld\\n\",i,i+1);\n        else if(a[i-1]>x)\n            printf(\"2 %ld %ld\\n\",i,i+1);\n        i--;\n    }\n    i=j;\n    while(a[i]==x)\n        i++;\n    while(i<n)\n    {\n        if(a[i]<x)\n            printf(\"1 %ld %ld\\n\",i+1,i);\n        else if (a[i]>x)\n            printf(\"2 %ld %ld\\n\",i+1,i);\n        i++;\n    }\n    return 0;\n}"}
{"similarity_score": 0.12947189097103917, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "99768caab70ae8e980948c9a054b2a09", "bug_code_uid": "31dd2f083e4b038a7ff5728100a07bfc", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "d09b9184b8de07d4dc8c577cb483fd94", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint count,l,r,i,j,m;\n\tchar a[100005];\n\tscanf(\"%s\",a);\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tcount=0;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tfor(j=l-1;j<r-1;j++)\n\t\t\tif(a[j]==a[j+1])\n\t\t\t\tcount++;\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tchar a[100005];\n\tlong len,l,r,i,k,b[100005],cnt=0;\n\tscanf(\"%s\",a);\n\tscanf(\"%ld\",&k);\n\tlen=strlen(a);\n\tfor(i=0;i<(len-1);i++)\n\t{\n\t\tif(a[i]==a[i+1])\n\t\t\tcnt++;\n\t\tb[i+1]=cnt;\n\t}\n\twhile(k--)\n\t{\n\t\tscanf(\"%ld%ld\",&l,&r);\n\t\tprintf(\"%ld\\n\",b[r-1]-b[l-1]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9910828025477707, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "afa739d47fcf57fc5b2d7a8293c7910b", "bug_code_uid": "1a9f22dc015e012e22ae196594647e6c", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "3ebd24514d3274f6b096a1f8c4633885", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp_func(const void *a, const void *b)\n{\n\t// 1 is ascending, -1 is descending\n\treturn *(const int *)a < *(const int *)b : 1 : -1;\n}\n\nint main()\n{\n\tint N; /* number of coins */\n\tscanf(\"%d\", &N);\n\tint sum, now;\n\t// int j;\n\t\n\tint a[100]; /* the coins' values */\n\tint i; /* index of array */\n\t\n\t/* calculate the total sum of N coins */\n\tfor (sum = i = 0; i < N; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tsum += a[i];\n\t}\n\t\n\t/* sort the array in the decreasing order */\n\tqsort(a, N, sizeof(int), cmp_func);\n\t/* for (j = 0; j < N; ++j)\n\t\tprintf(\"%d\\t\", a[j]);\n\tprintf(\"\\n\");\t*/\n\t\n\t/* now is a variable of sum of larger sum */\n\tfor(now = i = 0; i < N; i++)\n\t{\n\t\tnow += a[i];\n\t\tif (now > sum - now)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", i + 1);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp_func(const void *a, const void *b)\n{\n\t// 1 is ascending, -1 is descending\n\treturn *(const int *)a < *(const int *)b ? 1 : -1;\n}\n\nint main()\n{\n\tint N; /* number of coins */\n\tscanf(\"%d\", &N);\n\tint sum, now;\n\t// int j;\n\t\n\tint a[100]; /* the coins' values */\n\tint i; /* index of array */\n\t\n\t/* calculate the total sum of N coins */\n\tfor (sum = i = 0; i < N; ++i)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tsum += a[i];\n\t}\n\t\n\t/* sort the array in the decreasing order */\n\tqsort(a, N, sizeof(int), cmp_func);\n\t/* for (j = 0; j < N; ++j)\n\t\tprintf(\"%d\\t\", a[j]);\n\tprintf(\"\\n\");\t*/\n\t\n\t/* now is a variable of sum of larger sum */\n\tfor(now = i = 0; i < N; ++i)\n\t{\n\t\tnow += a[i];\n\t\tif (now > sum - now)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", i + 1);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.8514851485148515, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a91681b3ae02f7ad645fd45b4f29ad80", "bug_code_uid": "de60730b7993357840f6d7dad8fb8860", "src_uid": "02a94c136d3fb198025242e91264823b", "apr_id": "200728a8593e5f63eed76462c02e5348", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,i,j,k,s;\n     scanf(\"%d\",&n);\n     char a[n][101],t;\n\n     for(i=0;i<n;i++)\n          scanf(\"%s\",a[i]);\n\n     for(i=0;i<n;i++)\n     {\n          s=strlen(a[i]);\n          for(j=0;j<s-1;j++)\n          {\n               for(k=0;k<s-j-1;k++)\n               {\n                    if(a[i][k+1]<a[i][k])\n                    {\n                         t=a[i][k];\n                         a[i][k]=a[i][k+1];\n                         a[i][k+1]=t;\n                    }\n               }\n          }\n     }\n\n     for(i=0;i<n;i++)\n     {\n          s=strlen(a[i]);\n          if(a[i][s-1]-a[i][0]==s-1)printf(\"YES\\n\");\n          else printf(\"NO\\n\");\n     }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int n,i,j,k,s;\n     scanf(\"%d\",&n);\n     char a[n][101],t;\n\n     for(i=0;i<n;i++)\n          scanf(\"%s\",a[i]);\n\n     for(i=0;i<n;i++)\n     {\n          s=strlen(a[i]);\n          for(j=0;j<s-1;j++)\n          {\n               for(k=0;k<s-j-1;k++)\n               {\n                    if(a[i][k+1]<a[i][k])\n                    {\n                         t=a[i][k];\n                         a[i][k]=a[i][k+1];\n                         a[i][k+1]=t;\n                    }\n               }\n          }\n     }\n\n     for(i=0;i<n;i++)\n     {\n          s=strlen(a[i]);\n          for(j=0;j<s-1;j++)\n          {\n               if(a[i][j+1]-a[i][j]!=1)\n               {\n                    printf(\"NO\\n\");\n                    break;\n               }\n          }\n          if(j==s-1)printf(\"YES\\n\");\n     }\n\n}\n"}
{"similarity_score": 0.7982893799002139, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0f53cd8c8c0f5814dddc809a2dab0253", "bug_code_uid": "b98a7e4e3f9f3880d3657aa44a81b5f6", "src_uid": "21c0e12347d8be7dd19cb9f43a31be85", "apr_id": "c1c14a0ca7b5de0a10e3a34c1f882706", "difficulty": 1700, "tags": ["implementation", "hashing", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n\nint check(char *str,char *str1,int l){\n\t    int i=0;\n\t    if(l%2!=0){\n\t    if(strcmp(str,str1)==0);\n\t    return 1;\n\t    else\n\t    return 0;\n\t    }\n\t   if(l){\n            if(strncmp(str,str1,l)==0)\n            return 1;\n            else if(check(str,str1,l/2) && check(str+l/2,str1+l/2,l/2))\n            return 1;\n            else if(check(str,str1+l/2,l/2) && check(str1,str+l/2,l/2))\n            return 1;\n            else\n            return 0;\n           }\n           else\n           return 0;\n}\n          \t\n\nint main(void){\n\tchar str[200001];\n\tchar str1[200001];\n\tgets(str);\n\tgets(str1);\n\tint l=strlen(str);\n\tif(check(str,str1,l))\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\n\nint check(char *str,char *str1,int l){\n\n\t   if(l){\n            if(strncmp(str,str1,l)==0)\n            return 1;\n            else if(l%2!=0 && l!=1)\n            return 0;\n            else if(check(str,str1,l/2) && check(str+l/2,str1+l/2,l/2))\n            return 1;\n            else if(check(str,str1+l/2,l/2) && check(str1,str+l/2,l/2))\n            return 1;\n            else\n            return 0;\n           }\n           else\n           return 0;\n}\n          \t\n\nint main(void){\n\tchar str[200001];\n\tchar str1[200001];\n\tgets(str);\n\tgets(str1);\n\tint l=strlen(str);\n\tif(check(str,str1,l))\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9890350877192983, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6cc4ea768cb353028153ab87676a73d8", "bug_code_uid": "f0c7a4c2dc64a9124792c26c439f1d0a", "src_uid": "205b2332c176b758e843473e8d357475", "apr_id": "20e59c1f33b5390ad300422913c1a9c1", "difficulty": 1200, "tags": ["binary search", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint cf(void const *a, void const *b)\n{\n\treturn (*(int*)a) - (*(int*)b);\n}\nint main()\n{\n\tint n, i, k, h, x, y;\n\t\n\tscanf(\"%d\", &n);\n\tint a[n], b[n];\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tqsort(a, n, sizeof(int), cf);\n\t\n\tx=n/2;\n\ty=x+1;\n\t\n\tfor(k=n-1; k>=0; k--)\n\t{\n\t\tif(k%2==0)\n\t\t{\n\t\t\tb[x]=a[k];\n\t\t\tx--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[y]=a[k];\n\t\t\ty++;\n\t\t}\n\t}\n\tfor(h=0; h<n; h++)\n\t{\n\t\tprintf(\"%d \", b[h]);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint cf(void const *a, void const *b)\n{\n\treturn (*(int*)a) - (*(int*)b);\n}\nint main()\n{\n\tint n, i, k, h, x, y;\n\t\n\tscanf(\"%d\", &n);\n\tint a[n], b[n];\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tqsort(a, n, sizeof(int), cf);\n\t\n\tx=n/2;\n\ty=x-1;\n\t\n\tfor(k=n-1; k>=0; k--)\n\t{\n\t\tif(k%2==0)\n\t\t{\n\t\t\tb[x]=a[k];\n\t\t\tx++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[y]=a[k];\n\t\t\ty--;\n\t\t}\n\t}\n\tfor(h=0; h<n; h++)\n\t{\n\t\tprintf(\"%d \", b[h]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9776609724047306, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7558217adb34360ff878e5a99dc02564", "bug_code_uid": "3e9e6007829c68c1c657041d65ae1ead", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "1ac68d79f79a18c3b20f409995e5848c", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* Author Kh. Assaduzzaman Sohan  */\n\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#define mod 100000007\nint x[100001];\nint main()\n{\n    double n,m,a,b,min=100000000,Ans;\n    int i;\n\n    scanf(\"%lf %lf\",&n,&m);\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lf %lf\",&a,&b);\n        Ans=(a/b)*m;\n        if(Ans<min) min =Ans;\n    }\n    printf(\"%.10f\",Ans);\n    return 0;\n}\n", "fixed": "/* Author Kh. Assaduzzaman Sohan  */\n\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#define mod 100000007\nint x[100001];\nint main()\n{\n    double n,m,a,b,min=100000000,Ans;\n    int i;\n\n    scanf(\"%lf %lf\",&n,&m);\n\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%lf %lf\",&a,&b);\n        Ans=(a/b)*m;\n        if(Ans<min) min =Ans;\n    }\n    printf(\"%.10f\",min);\n    return 0;\n}\n"}
{"similarity_score": 0.9935483870967742, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "83c6f00433fd53f9d6c55b8d29002ff3", "bug_code_uid": "cb478e41522056a0f0479ce4ba50ee17", "src_uid": "54e2b6bea0dc6ee68366405945af50c6", "apr_id": "4f7f5534a51d1e013b7b91e22173b61c", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int i,n,f,p;\n    scanf(\"%lld\",&n);\n    long long int sctr[n+2],frag[n+2];\n    for(i=1;i<n+1;i++)\n    {\n        scanf(\"%lld\",&frag[i]);\n        sctr[frag[i]]=i;\n\n\n    }\n    long int a,b,time;\n    time=0;\n    for(i=1;i<n;i++)\n    {\n        a=sctr[i];\n\n        b=sctr[i+1];\n\n        p=b-a;\n        if(p>0)\n            time=b-a+time;\n        else\n            time=a-b+time;\n    }\n    printf(\"%lld\",time);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int i,n,f,p;\n    scanf(\"%lld\",&n);\n    long long int sctr[n+2],frag[n+2];\n    for(i=1;i<n+1;i++)\n    {\n        scanf(\"%lld\",&frag[i]);\n        sctr[frag[i]]=i;\n\n\n    }\n    long long int a,b,time;\n    time=0;\n    for(i=1;i<n;i++)\n    {\n        a=sctr[i];\n\n        b=sctr[i+1];\n\n        p=b-a;\n        if(p>0)\n            time=b-a+time;\n        else\n            time=a-b+time;\n    }\n    printf(\"%lld\",time);\n    return 0;\n\n}"}
{"similarity_score": 0.850546780072904, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "3a5fa439efd782bfef7bfb1149a157f9", "bug_code_uid": "1007bd888f8afba0fccaf11c7a42ffc1", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "f2b4297fc50fe9024240d0a256950630", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar a[64][64];\nchar h[64], v[64];\n\nint\nmain()\n{\n\tint i;\n\tint\tn;\n\tscanf (\"%d\", &n);\n\n\tfor (i = 0; i < n*n; i++) {\n\t\tint x, y;\n\n\t\tscanf (\"%d %d\", &x, &y);\n\t\tif (!h[x] && !v[y]) {\n\t\t\th[x] = v[y] = 1;\n\t\t\ta[x][y] = 1;\n\t\t}\n\t}\n\tfor (i = 1; i <= n; ++i) {\n\t\tint j;\n\n\t\tfor (j = 1; j <= n; ++j) {\n\t\t\tif (a[i][j]) {\n\t\t\t\tprintf (\"%d \", i*j);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tputs(\"\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar a[64][64];\nchar h[64], v[64];\nshort d[4096];\n\nint\nmain()\n{\n\tint i;\n\tint\tn;\n\tscanf (\"%d\", &n);\n\n\tfor (i = 1; i <= n*n; i++) {\n\t\tint x, y;\n\n\t\tscanf (\"%d %d\", &x, &y);\n\t\tif (!h[x] && !v[y]) {\n\t\t\th[x] = v[y] = 1;\n\t\t\td[i] = 1;\n\t\t}\n\t}\n\tfor (i = 1; i <= n*n; ++i) {\n\n\t\tif (d[i]) {\n\t\t\tprintf (\"%d \", i);\n\t\t}\n\t}\n\t\n\tputs(\"\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.8359788359788359, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c0ddb781329e9deffba8b8b77b9d747f", "bug_code_uid": "6a181e00073299e78d08455f38981f6a", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "0cb0ba3ec2be96d98c5f95cc5d8a7d73", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,max,i;\n    scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n    if(a>b && a>c && a>d)\n        printf(\"%d %d %d\",a-b,a-c,a-d);\n    if(b>a && b>c && b>d)\n        printf(\"%d %d %d\",b-a,b-c,b-d);\n    if(c>b && c>a && a>d)\n        printf(\"%d %d %d\",c-b,c-a,c-d);\n    if(d>b && d>c && d>a)\n        printf(\"%d %d %d\",d-b,d-c,d-a);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,max,i;\n    scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n    if(a>=b && a>=c && a>=d)\n        printf(\"%d %d %d\",a-b,a-c,a-d);\n    if(b>=a && b>=c && b>=d)\n        printf(\"%d %d %d\",b-a,b-c,b-d);\n    if(c>=b && c>=a && a>=d)\n        printf(\"%d %d %d\",c-b,c-a,c-d);\n    if(d>=b && d>=c && d>=a)\n        printf(\"%d %d %d\",d-b,d-c,d-a);\n    return 0;\n}\n"}
{"similarity_score": 0.9480812641083521, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "486bd7d7df06b9a7bca4ab2e13363db1", "bug_code_uid": "d9f07486f0a19e8d2f1df6f9dd05b2f4", "src_uid": "a6b6d9ff2ac5c367c00a64a387cc9e36", "apr_id": "4d7a82e21078bce8fbf388eede439c82", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a;\r\n    scanf(\"%d\",&a);\r\n    while(a>0){\r\n        int c;\r\n        scanf(\"%d\",&c);\r\n        int d=c+c/2*2+c/3*2;\r\n        printf(\"%d\",d);\r\n        a=a-1;\r\n    }\r\n    \r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a;\r\n    scanf(\"%d\",&a);\r\n    while(a>0){\r\n        int c;\r\n        scanf(\"%d\",&c);\r\n        int d=c+c/2*2+c/3*2;\r\n        printf(\"%d\",d);\r\n        printf(\"\\n\");\r\n        a=a-1;\r\n    }\r\n    \r\n}"}
{"similarity_score": 0.6109422492401215, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f09a3f0e656776a72c34f93a2d184f1e", "bug_code_uid": "a4290ba615c63013aae800dd951d8b60", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "f97c777aff293355cfb0e5bf5edc9456", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define size 200000\nint findmax(int n){\n    int k = 0 ;\n    while(n!=0){\n        if(n >=10){\n            n-=10;\n            n++;\n            k+=10;\n        }else{\n            k+=n;\n            break;\n        }\n    }\n    return k;\n}\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    int n;\n    for(int i =0 ; i < t;i++){\n        scanf(\"%d\",&n);\n        printf(\"%d\\n\",findmax(n));\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define size 200000\nint findmax(int n){\n    int k = 0 ;\n    while(n!=0){\n        if(n >=10){\n            n-=10;\n            n++;\n            k+=10;\n        }else{\n            k+=n;\n            break;\n        }\n    }\n    return k;\n}\nint best(int n){\n    int k = 0;\n    int sum = 0 ;\n    while(n!=0){\n        k += n%10;\n        sum+=n - n%10;\n        n/=10;\n    }\n\n    return sum + findmax(k);\n}\nint ragham(int n){\n    int x =0 ;\n    while(n!=0){\n        n/=10;\n        x++;\n    }\n    return x;\n}\nint another(int n){\n    int r = ragham(n);\n    int k = 0 ;\n    int x = n;\n    int sum = 0 ;\n\n    while(n!=0){\n        k += n%10;\n        sum+=n;\n        n/=10;\n    }\n\n        return sum + k/10 + k-(k/10)*10;\n}\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    int n;\n    for(int i =0 ; i < t;i++){\n        scanf(\"%d\",&n);\n        printf(\"%d\\n\",best(n));\n    }\n}\n"}
{"similarity_score": 0.6606334841628959, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "72d19408749157374e0f9ed4c3071ab1", "bug_code_uid": "61aa838922e5c79430321add91448e90", "src_uid": "a063705bd0ce1e17ccaafbbfc2663d93", "apr_id": "2fef04b9243a01c0976424baf7e9cee0", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint t,n,i,a,good,bad;\n\twhile(scanf(\"%d\",&t)!=EOF){\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tgood=0;bad=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a==1){good+=1;\n\t\t\t}if(a==2){\n\t\t\t\tbad+=1;\n\t\t\t}if(a==3){if(good<bad){bad+=1;\n\t\t\t}else{good+=1;\n\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}printf(\"%d\\n\",good);scanf(\"%d\",&t);\n\t}\n\t}return 0;\n}\n\n\n\t\n\t  \t     \t \t      \t \t\t    \t", "fixed": "#include<stdio.h>\nint main(){\n\tint t,n,i,a,good,bad;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tgood=0;bad=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a==1||a==3){good++;\n\t\t\t} else if(a==2){\n\t\t\t\tbad++;\n\t\t\t}\n\t\t\t\n\t\t}printf(\"%d\\n\",good);\n\t}return 0;\n}\n\n\n\t\n \t    \t\t\t\t   \t\t\t\t\t \t  \t  \t  \t\t\t"}
{"similarity_score": 0.5450346420323325, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "57e6481681bf6cf654e3d5bd6e560942", "bug_code_uid": "11ff140e79d7568ad14e48f5a5c33735", "src_uid": "09faf19627d2ff00c3821d4bc2644b63", "apr_id": "eb724c2a0d8673a03287f7258e189440", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nint main()\n{\n     int t ;\n     scanf(\"%d\",&t) ;\n\n    while(t--)\n    {\n         int n,i,j ;\n         scanf(\"%d\",&n) ;\n\n        int *prices =(int*)malloc(sizeof(int)*n) ;\n\n        for(i=0;i<n;i++)\n          scanf(\"%d\",&prices[i]) ;\n\n         int current= prices[0] ;\n         int bad=0 ;\n\n         for(i=0;i<n-1;i++)\n         {\n             current = prices[i] ;\n\n             for(j=i+1;j<n;j++)\n             {\n                if(prices[i] > prices[j])\n                {\n                    bad++ ;\n                    break ;\n                }\n\n             }\n\n         }\n\n        printf(\"%d\\n\",bad) ;\n\n     }\n      return 0 ;\n\n}\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n     int t ;\n     scanf(\"%d\",&t) ;\n\n    while(t--)\n    {\n         int n,i,j ;\n         scanf(\"%d\",&n) ;\n\n        int *prices =(int*)malloc(sizeof(int)*n)  ;\n\n        for(i=0;i<n;i++)\n          scanf(\"%d\",&prices[i]) ;\n\n         int current_min= prices[n-1] ;\n         int bad=0 ;\n\n         for(i=n-2;i>=0;i--)\n         {\n            if(prices[i] <= current_min)\n              {\n                  current_min = prices[i] ;\n                  continue ;\n              }\n\n            else\n              bad++ ;\n\n\n         }\n\n         printf(\"%d\\n\",bad) ;\n\n    }\n\n      return 0 ;\n\n}\n\n"}
{"similarity_score": 0.9483333333333334, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a3e1626a17649153b83c884428ea9df0", "bug_code_uid": "a961f708dbcec3bc92c090959f7281e9", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "dff5f412cae909e2579811f38a24b80e", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nfloat maximum(float a,float b)\n{\n\tif(a>b)\n\treturn a;\n\telse\n\treturn b;\n}\n\nint main()\n{\n\tint n,l,i,arr[1001];\n\tfloat temp,max;\n\t\n\tscanf(\"%d %d\",&n,&l);\n\t\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&arr[i]);\n\t\n\tqsort(arr,n,sizeof(int),cmpfunc);\n\ttemp=maximum(arr[0],l-arr[n-1]);\n\n\tfor(i=1;i<n;i++)//finding max dist b/w 2 consecutive lanterns\n\t{\n\t\tif(arr[i]-arr[i-1]>temp)\n\t\tmax=arr[i]-arr[i-1];\n\t\t}\n\t\ttemp=maximum(temp,max/2.0);\n\tprintf(\"%f\\n\",temp);\n\t//system(\"pause\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nfloat maximum(float a,float b)\n{\n\tif(a>b)\n\treturn a;\n\telse\n\treturn b;\n}\n\nint main()\n{\n\tint n,l,i,arr[1001];\n\tfloat temp,max;\n\t\n\tscanf(\"%d %d\",&n,&l);\n\t\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&arr[i]);\n\t\n\tqsort(arr,n,sizeof(int),cmpfunc);\n\ttemp=maximum(arr[0],l-arr[n-1]);\n\t//printf(\"%f\\n\",temp);\n\tmax=0;\n\tfor(i=1;i<n;i++)//finding max dist b/w 2 consecutive lanterns\n\t{\n\t\tif(arr[i]-arr[i-1]>max)\n\t\tmax=arr[i]-arr[i-1];\n\t\t}\n\t//\tprintf(\"%f\\n\",max);\n\t\ttemp=maximum(temp,max/2.0);\n\tprintf(\"%f\\n\",temp);\n\t//system(\"pause\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.6700924974306269, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "a74a6901eb60189d5251aefec1bd5603", "bug_code_uid": "5eb07eccbdc8701acc501d55ae8721bc", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "06d3c809e2aa0cc0ba27ef8e48aaef4a", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid result();\r\nint main()\r\n{\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n\r\n      result();\r\n    }\r\n    return 0;\r\n}\r\nvoid result()\r\n{\r\n    int n,i,l,j,k,g,m,a[100],low=1,high=1,w;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    k=a[0];\r\n    m=a[0];\r\n     for(i=1;i<n;i++)\r\n    {  if(k<a[i])\r\n    continue;\r\n    else{\r\n        k=a[i];\r\n        low=i+1;\r\n    }\r\n}\r\n     for(i=1;i<n;i++)\r\n    {\r\n        if(m>a[i])\r\n           continue;\r\n        else{\r\n           m=a[i];\r\n           high=i+1;\r\n            }\r\n    }\r\n\r\n    if(low<=n/2||high<=n/2){\r\n    if(low<high){\r\n        g=high;\r\n        w=low;}\r\n    else{\r\n        g=low;\r\n        w=high;}\r\n   l=w+n-g+1;\r\n   if(l>g)\r\n    printf(\"%d\\n\",g);\r\n   else\r\n    printf(\"%d\\n\",l);\r\n    }\r\n    else{\r\n        low=n-low+1;\r\n        high=n-high+1;\r\n        if(low>high)\r\n            printf(\"%d\\n\",low);\r\n        else\r\n            printf(\"%d\\n\",high);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nvoid result();\r\nint main()\r\n{\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n\r\n      result();\r\n    }\r\n    return 0;\r\n}\r\nvoid result()\r\n{\r\n    int n,i,k,m,a[100],low=1,high=1,l,h,ll,hh,r1,r2,r3,g,p;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    k=a[0];\r\n    m=a[0];\r\n     for(i=1;i<n;i++)\r\n    {  if(k<a[i])\r\n    continue;\r\n    else{\r\n        k=a[i];\r\n        low=i+1;\r\n    }\r\n}\r\n     for(i=1;i<n;i++)\r\n    {\r\n        if(m>a[i])\r\n           continue;\r\n        else{\r\n           m=a[i];\r\n           high=i+1;\r\n            }\r\n    }\r\nif(high>low){\r\n    r1=high;\r\n    g=low;}\r\nelse{\r\n    r1=low;\r\n    g=high;}\r\nh=n-high+1;\r\nl=n-low+1;\r\n\r\nif(h>l){\r\n    r2=h;\r\n    p=l;}\r\nelse{\r\n    r2=l;\r\n    p=h;}\r\n\r\n    r3=p+g;\r\n\r\n    if(r1<=r2&&r1<=r3)\r\n        printf(\"%d\\n\",r1);\r\n    else if(r2<=r1&&r2<=r3)\r\n        printf(\"%d\\n\",r2);\r\n    else if(r3<=r1&&r3<=r2)\r\n      printf(\"%d\\n\",r3);\r\n}\r\n"}
{"similarity_score": 0.7101449275362319, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "7f5b60fef54ffc604c793b4984bf1619", "bug_code_uid": "3128b8c6f56c014625fd7e219a757e77", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "63ac31409e4ac47d067071cd226193b1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \nint main(){ \n    int x,i,y,m,t,n;  \nscanf(\"%d\",&t);  \nwhile(t--){\n    scanf(\"%d%d%d\",&x,&y,&n); \n    for(i=0;i<=n;i++){\n        if(i%x==y)m=i; \n        } \n    printf(\"%d\\n\",m);  \nm=0; \n}\n    }", "fixed": "#include<stdio.h> \nint main(){ \n    int x,i,y,m,t,k,n;  \nscanf(\"%d\",&t);  \nwhile(t--){\n    scanf(\"%d%d%d\",&x,&y,&n); \n    m=(n-y)/x; \n        k=(m*x)+y;\n    printf(\"%d\\n\",k); \n    k=0; \n    m=0;\n    } \n}"}
{"similarity_score": 0.910377358490566, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ed4549e0f2e0f6f4d0722d60193d26a1", "bug_code_uid": "485fbd7cb4dd21281a7f6b376dfed774", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "756b6322abc7c66ebdadac60b4f1aee6", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n\n    int i;\n    char s[200050];\n\n    gets(s);\n    for(i=0;i<strlen(s);i++)\n        printf(\"%c\",s[i]);\n    for(i=strlen(s)-1;i>=0;i--)\n        printf(\"%c\",s[i]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n\n    int i;\n    char s[200050];\n\n    gets(s);\n    printf(\"%s\",s);\n    for(i=strlen(s)-1;i>=0;i--)\n        printf(\"%c\",s[i]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8535980148883374, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "dc2bdf5f0501dcff98e0d28fbc06c036", "bug_code_uid": "2dce5157319f19ceb96fb8a41fef6eb8", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "d22720f5f5e9d844c125249772b418e8", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[1000],b[1000],c[1000]={0},n,i,q,flag;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        flag=1;\n        scanf(\"%d\",&q);\n        for(i=0;i<q;i++)\n            scanf(\"%d\",&a[i]);\n        for(i=0;i<q;i++)\n            scanf(\"%d\",&b[i]);\n        for(i=0;i<q;i++)\n        {\n            c[a[i]]=1;\n            c[b[i]]=1;\n        }\n        for(i=1;i<=n;i++)\n            if(c[i]==0)\n                flag=0;\n        if(flag==0)\n            printf(\"Oh, my keyboard!\\n\");\n        else\n            printf(\"I become the guy.\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[1000],b[1000],c[1000]={0},n,i,q,w,flag;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        flag=1;\n        scanf(\"%d\",&q);\n        for(i=0;i<q;i++)\n            {\n                scanf(\"%d\",&a[i]);\n                c[a[i]]=1;\n            }\n        scanf(\"%d\",&w);\n        for(i=0;i<w;i++)\n            {\n                scanf(\"%d\",&b[i]);\n                c[b[i]]=1;\n            }\n        for(i=1;i<=n;i++)\n            if(c[i]==0)\n                flag=0;\n        if(flag==0)\n            printf(\"Oh, my keyboard!\\n\");\n        else\n            printf(\"I become the guy.\\n\");\n    }\n}\n"}
{"similarity_score": 0.9875666074600356, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a7bb69b57adec7708536f8ddb787253a", "bug_code_uid": "b7a645244e215d4bb798e6a0a5bc0e33", "src_uid": "8d5fe8eee1cce522e494231bb210950a", "apr_id": "7bf354fe3eebe8d845b7f4fa70708a81", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid lost(int a[],int n, int index){\n    int temp = a[index], i;\n    for(i = index; i<n-1; i++){\n        a[i] = a[i+1];\n    }\n    a[n-1] = temp;\n}\n\nint main()\n{\n    int n, i;\n    double k, inst = 0;\n    scanf(\"%d %lf\", &n, &k);\n    int a[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n\n    while(k > inst){\n        if(a[0] > a[1]){\n            lost(a, n, 1);\n            inst++;\n        }\n        else{\n            lost(a, n, 0);\n            inst = 0;\n        }\n    }\n    printf(\"%d\", a[0]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid lost(int a[],int n, int index){\n    int temp = a[index], i;\n    for(i = index; i<n-1; i++){\n        a[i] = a[i+1];\n    }\n    a[n-1] = temp;\n}\n\nint main()\n{\n    int n, i;\n    double k, inst = 0;\n    scanf(\"%d %lf\", &n, &k);\n    int a[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n\n    while(inst < n && k > inst){\n        if(a[0] > a[1]){\n            lost(a, n, 1);\n            inst++;\n        }\n        else{\n            lost(a, n, 0);\n            inst = 1;\n        }\n    }\n    printf(\"%d\", a[0]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8776458440887971, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "08a72131069b2ac24aef648fdaee95ea", "bug_code_uid": "7b33de49d53ed86b6124de8a480e9b10", "src_uid": "5db9c5673a04256c52f180dbfca2a52f", "apr_id": "413d19f73d2a01226891844de10e469f", "difficulty": 1600, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include <stdio.h>\n    #include <stdlib.h>\n\n    #define Nmax 2001\n    #define max(a,b) a>b?a:b\n    #define min(a,b) a<b?a:b\n    #define oo=300000000000000\n\n    int point[Nmax];\n    long long int a[Nmax],b[Nmax];\n\n    int cmp(const void*x,const void*y)\n    {\n        return -(a[*(int*)x]-a[*(int*)y]);\n    }\n\n    int main()\n    {\n        int n,i,x,y,ax,ay,bx,by;\n        scanf(\"%d%d%d%d%d\",&n,&ax,&ay,&bx,&by);\n        for(i=0;i<n;i++) {\n            scanf(\"%d%d\",&x,&y);\n            point[i]=i;\n            a[i]=(long long)(ax-x)*(ax-x)+(long long)(ay-y)*(ay-y);\n            b[i]=(long long)(bx-x)*(bx-x)+(long long)(by-y)*(by-y);\n        }\n        qsort(point,n,sizeof(int),cmp);\n        point[n]=n;\n        a[n]=0;\n        long long int r2=0,res=+oo;\n        for(i=0;i<n;i++) {\n            if (i>0) r2=max(r2,b[point[i-1]]);\n            res=min(res,r2+a[point[i]]);\n        }\n        printf(\"%I64d\",res);\n        return 0;\n    }\n", "fixed": "    #include <stdio.h>\n    #include <stdlib.h>\n\n    #define Nmax 2001\n    #define max(a,b) a>b?a:b\n    #define min(a,b) a<b?a:b\n    #define oo 3000000000000000;\n\n    int point[Nmax];\n    long long a[Nmax],b[Nmax];\n\n    int cmp(const void*x,const void*y)\n    {\n        if(a[*(int*)x]>a[*(int*)y]) return -1;\n        if(a[*(int*)x]<a[*(int*)y]) return  1;\n        return 0;\n    }\n\n    int main()\n    {\n        int n,i,x,y,ax,ay,bx,by;\n        scanf(\"%d%d%d%d%d\",&n,&ax,&ay,&bx,&by);\n        for(i=0;i<n;i++) {\n            scanf(\"%d%d\",&x,&y);\n            point[i]=i;\n            a[i]=(long long)(ax-x)*(ax-x)+(long long)(ay-y)*(ay-y);\n            b[i]=(long long)(bx-x)*(bx-x)+(long long)(by-y)*(by-y);\n        }\n        point[n]=n;\n        a[point[n]]=0;\n        qsort(point,n,sizeof(int),cmp);\n        long long r2=0,res=oo;\n        for(i=0;i<=n;i++) {\n            if (i>0) r2=max(r2,b[point[i-1]]);\n            res=min(res,r2+a[point[i]]);\n        }\n        printf(\"%lli\",res);\n        return 0;\n    }\n"}
{"similarity_score": 0.5510204081632653, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "bc5e6ba7818b283948c50824c9e07042", "bug_code_uid": "5af3577e4b667697c83b272751544e3f", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "db8e4af34c7364b9d6cdce4acc6387bc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint inp[4];\nchar s[100000];\nint main()\n{\n    int i;\n    for(i=0;i<4;i++)\n    {\n\tscanf(\"%d\",&inp[i]);\n    }\n    scanf(\"%s\",s);\n    int len,count1=0,count2=0,count3=0,count4=0;\n    len=strlen(s);\n    for(i=0;i<len;i++)\n    {\n\tif(s[i]=='1')\n\t{\n\t    count1++;\n\t}\n\tif(s[i]=='2')\n\t{\n\t    count2++;\n\t}\n\tif(s[i]=='3')\n\t{\n\t    count3++;\n\t}\n\tif(s[i]=='4')\n\t{\n\t    count4++;\n\t}\n    }\n    int output=count1*inp[0]+count2*inp[1]+count3*inp[2]+count4*inp[3];\n    printf(\"%d\\n\",output);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint inp[4];\nchar s[100010];\nint main()\n{\n    int i;\n    for(i=0;i<4;i++)\n    {\n\tscanf(\"%d\",&inp[i]);\n    }\n    scanf(\"%s\",s);\n    //int len;\n    long int count1=0,count2=0,count3=0,count4=0;\n    int len=strlen(s);\n    for(i=0;i<len;i++)\n    {\n\tif(s[i]=='1')\n\t{\n\t    count1++;\n\t}\n\tif(s[i]=='2')\n\t{\n\t    count2++;\n\t}\n\tif(s[i]=='3')\n\t{\n\t    count3++;\n\t}\n\tif(s[i]=='4')\n\t{\n\t    count4++;\n\t}\n    }\n    long int output=count1*inp[0]+count2*inp[1]+count3*inp[2]+count4*inp[3];\n    printf(\"%ld\\n\",output);\n    return 0;\n}\n\n"}
{"similarity_score": 0.7096774193548387, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "5739d35b82e30bad8b145e756f3c3035", "bug_code_uid": "6de6e3fd8f16e1dea908665d7e5da816", "src_uid": "7b80d3f3cd4f93e4277c76c76dc41f42", "apr_id": "64618751210e47ea856b28329691d5d7", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define ll int long long\nll mxx(int x,int y){return (x>=y)?x:y;}\nll mnn(int x,int y){return (x>=y)?y:x;}\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nconst int nax = 2*1e5+10;\n\nint pro(){\n    ll n;\n    ll a[nax];\n    ll ra[20000];\n    ll sum;\n    ll k,rk;\n    scanf(\"%lld\",&n);\n    k = rk = n;\n    for(int i=0;i<n;i++){\n        scanf(\"%lld\",&a[i]);\n        ra[i] = a[i];\n    }\n    for(int i=1;i<n;i++){\n        if(a[i]!=a[i-1]){\n            a[i] = a[i]+a[i-1];\n            k--;\n        }\n    }\n    for(int i=n-2;i>=0;--i){\n        if(ra[i]!=ra[i+1]){\n            ra[i] = ra[i]+ra[i+1];\n            rk--;\n        }\n    }\n\n    printf(\"%lld\",mnn(rk,k));\n\n}\n\nint main(){\n    int T;\n\n    scanf(\"%d\",&T);\n\n    for (int i = 1; i <= T; i++){\n        pro();\n        puts(\"\");\n    }\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define ll int long long\nll mxx(int x,int y){return (x>=y)?x:y;}\nll mnn(int x,int y){return (x>=y)?y:x;}\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nconst int nax = 2*1e5+10;\n\n\nint pro(){\n    ll n;\n    ll a[200000];\n    scanf(\"%lld\",&n);\n    for(int i=0;i<n;i++){\n        a[i] = 0;\n        scanf(\"%d\",&a[i]);\n    }\n\n    qsort(a,n,sizeof(ll),cmpfunc);\n    printf((a[0]!=a[n-1])?\"1\":\"%d\",n);\n\n\n}\n\n\nint main(){\n    int T;\n\n    scanf(\"%d\",&T);\n\n    for (int i = 1; i <= T; i++){\n        pro();\n        puts(\"\");\n    }\n\n\n}\n"}
{"similarity_score": 0.9, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "2d854ffcfcba991cabba1c9b8b523c87", "bug_code_uid": "41ce705df4bacd79192e67514a973c58", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "b3482ee7ebbad921ac95e8a9dc7b8904", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,a,b,i,sum=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n-1;i++)\n{\nscanf(\"%d\",&a);\nsum=sum+a;\n}\nb=((a/2)*(a+1))-sum;\nprintf(\"%d\",b);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nlong long n,a,b=0,i,sum=0;\nscanf(\"%lld\",&n);\nfor(i=0;i<n-1;i++)\n{\nscanf(\"%lld\",&a);\nsum=sum+a;\n}\nb=((n*n)+n)/2-sum;\nprintf(\"%lld\",b);\nreturn 0;\n}"}
{"similarity_score": 0.9524714828897338, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "7bca1d7b21e5ddcfdc4ec08f2209d041", "bug_code_uid": "a9aba070e96272ebad6a6b1150778b6d", "src_uid": "9c9befb908f24a0d7481b75bfdd5780b", "apr_id": "3c7c7e36787f85bb57dc49252ce35b12", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint S[1000], T[1000];\r\n\r\nvoid Solve() {\r\n  int N, M;\r\n  scanf(\"%d %d %s\", &N, &M, S);\r\n  M = N < M ? N : M;\r\n  while (M--) {\r\n    memcpy(T, S, N + 1);\r\n    for (int i = 0; i < N; ++i) {\r\n      if ((i && S[i - 1] == '1') + (i + 1 < N && S[i + 1] == '1') == 1) {\r\n        T[i] = '1';\r\n      }\r\n    }\r\n    if (memcmp(T, S, sizeof(T)) == 0) {\r\n      break;\r\n    }\r\n    memcpy(S, T, N + 1);\r\n  }\r\n  puts(S);\r\n}\r\n\r\nint main() {\r\n  int TC;\r\n  scanf(\"%d\", &TC);\r\n  while (TC--) {\r\n    Solve();\r\n  }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nchar S[1000], T[1000];\r\n\r\nvoid Solve() {\r\n  int N, M;\r\n  scanf(\"%d %d %s\", &N, &M, S);\r\n  M = N < M ? N : M;\r\n  while (M--) {\r\n    strcpy(T, S);\r\n    for (int i = 0; i < N; ++i) {\r\n      if ((i && S[i - 1] == '1') + (i + 1 < N && S[i + 1] == '1') == 1) {\r\n        T[i] = '1';\r\n      }\r\n    }\r\n    if (strcmp(T, S) == 0) {\r\n      break;\r\n    }\r\n    strcpy(S, T);\r\n  }\r\n  puts(S);\r\n}\r\n\r\nint main() {\r\n  int TC;\r\n  scanf(\"%d\", &TC);\r\n  while (TC--) {\r\n    Solve();\r\n  }\r\n}\r\n"}
{"similarity_score": 0.9967637540453075, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f607dfe2463cf26c066777db2467f214", "bug_code_uid": "fa8a62f4984fe2ad685386ef4a843c6f", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "85844bd27564ff5bc820a13adae6c329", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\n\nint main()\n{int t,i;\n    long long a,b,k;\n  scanf(\"%d\",&t);\n  for(i=0;i<=t;i++){\n    scanf(\"%lli%lli%lli\",&a,&b,&k);\n    if(k%2==0){\n        printf(\"%lli\\n\",(a-b)*(k/2));\n    continue;\n    }\n    if(k%2)\n        printf(\"%lli\\n\",(a-b)*(k/2)+a);\n\n\n  }\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\n\nint main()\n{int t,i;\n    long long a,b,k;\n  scanf(\"%d\",&t);\n  for(i=1;i<=t;i++){\n    scanf(\"%lli%lli%lli\",&a,&b,&k);\n    if(k%2==0){\n        printf(\"%lli\\n\",(a-b)*(k/2));\n    continue;\n    }\n    if(k%2)\n        printf(\"%lli\\n\",(a-b)*(k/2)+a);\n\n\n  }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9881305637982196, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "40be08db4edd8c0277273ed3cef20993", "bug_code_uid": "c337c6ee21a40fe02855a13dba8d47f3", "src_uid": "c7e4f544ec8b4972291542e66aff5df5", "apr_id": "d57079759e95533c8452f9ac588dd815", "difficulty": 1200, "tags": ["constructive algorithms", "math", "number theory", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint comparator (const void * p1, const void * p2) { return (*(int*)p1 - *(int*)p2); }\r\n\r\nint main(){\r\n\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    \r\n    while(t--){\r\n    \r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        \r\n        int a[n];\r\n        int jedinica = 0;\r\n        int uzastopni = 0;\r\n        for(int i = 0; i < n; i++) { scanf(\"%d\", &i[a]); if(i[a] == 1) jedinica = 1; }\r\n        qsort(a, n, sizeof(int), comparator);\r\n        for(int i = 0; i < n-1; i++) { if((i[a]+1) == i+1[a]) uzastopni = 1; }\r\n        if(jedinica && uzastopni) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n        \r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint comparator (const void * p1, const void * p2) { return (*(int*)p1 - *(int*)p2); }\r\n\r\nint main(){\r\n\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    \r\n    while(t--){\r\n    \r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        \r\n        int a[n];\r\n        int jedinica = 0;\r\n        int uzastopni = 0;\r\n        for(int i = 0; i < n; i++) { scanf(\"%d\", &i[a]); if(i[a] == 1) jedinica = 1; }\r\n        qsort(a, n, sizeof(int), comparator);\r\n        for(int i = 0; i < n-1; i++) { if((i[a] + 1) == (i+1)[a]) uzastopni = 1; }\r\n        if(jedinica && uzastopni) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n        \r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.872870249017038, "equal_cnt": 14, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "4355418905547ebb5ef19b6cbc3da9bc", "bug_code_uid": "2de022b6efdf22a2d1f96871e2f4184a", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "21e76eab7a97cee4857d8570137a5c37", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int ln1,ln2;\n    char s[100],ss[100];\n    scanf(\"%s%s\",s,ss);\n    if(strcmp(s,ss)==0)\n        printf(\"-1\\n\");\n    else\n    {\n        ln1=strlen(s);\n        ln2=strlen(ss);\n        if(ln1>ln2)\n            printf(\"%d\\n\",ln1);\n        else\n            printf(\"%d\\n\",ln2);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int ln1,ln2;\n    char s[100001],ss[100001];\n    while(scanf(\"%s%s\",s,ss)!=EOF)\n    {\n        if(strcmp(s,ss)==0)\n            printf(\"-1\\n\");\n        else\n        {\n            ln1=strlen(s);\n            ln2=strlen(ss);\n            if(ln1>ln2)\n                printf(\"%d\\n\",ln1);\n            else\n                printf(\"%d\\n\",ln2);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3479349186483104, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "bad7757cba7bcebc4dc03a508d298395", "bug_code_uid": "1e2813c56ef6ee1f0faa816ef5860a89", "src_uid": "341555349b0c1387334a0541730159ac", "apr_id": "b216ad4683546370cb0409a91b7c7ef1", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,i,d=0,j,k;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tfor(i=2;i<n;i++)\n\t\t{\n\t\t\tfor(j=1;j<i;j++)\n\t\t\t{\n\t\t\t\tfor(k=0;k<j;k++)\n\t\t\t\t{\n\t\t\t\tif((a[k]+a[j]<=a[i])||(a[i]-a[j]>=a[k])||(a[i]-a[k]>=a[j]))\n\t\t\t\t\t\td=1;\n\t\t\t\tif(d)\t\n\t\t\t\t\t{\n\t\t\t\t\tprintf(\"%d %d %d\\n\",k+1,j+1,i+1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\tif(d)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(d)\n\t\t\t\t\tbreak;\n\t\t}\n\t\tif(d!=1)\n\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,i;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]); \n\t\tif(a[0]+a[1]<=a[n-1])\n\t\tprintf(\"1 2 %d\\n\",n);\n\t\telse \n\t\tprintf(\"-1\\n\") ;\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7544351073762838, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "2121164e141cbecf3530f4cf1f737b7b", "bug_code_uid": "bbe9d5adb13a27720f2b99202aa6e112", "src_uid": "ed75bd272f6d3050426548435423ca92", "apr_id": "56a8a0cbc6ff7a4dd7728c3ecd520fab", "difficulty": 1500, "tags": ["combinatorics", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int i,j,k,x,y;\n    long long int q;\n    int l[200002];\n    int r[200002];\n    char a[200002];\n    char b[200002];\n    scanf(\"%s%s\",a,b);\n    x=strlen(a);\n    y=strlen(b);\n    q=0;\n    l[0]=b[0]=='1';\n    r[0]=b[0]=='0';\n    for(i=1;i<y;i++){\n        l[i]=l[i-1]+(b[i]=='1');\n        r[i]=r[i-1]+(b[i]!='1');;\n    }\n    for(i=0,j=y-x;i<x;i++,j++){\n        if(a[i]=='0'){\n            q+=l[j]-l[i-1];\n        }else{\n            q+=r[j]-r[i-1];\n        }\n    }\n    printf(\"%I64d\",q);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int i,j,k,x,y;\n    long long int q;\n    int l[200002];\n    int r[200002];\n    char a[200002];\n    char b[200002];\n    scanf(\"%s%s\",a,b);\n    x=strlen(a);\n    y=strlen(b);\n    q=0;\n    l[0]=r[0]=0;\n    for(i=0;i<y;i++){\n        l[i+1]=l[i]+(b[i]=='1');\n        r[i+1]=r[i]+(b[i]=='0');;\n    }\n    for(i=0,j=y-x+1;i<x;i++,j++){\n        if(a[i]=='0'){\n            q+=l[j]-l[i];\n        }else{\n            q+=r[j]-r[i];\n        }\n    }\n    printf(\"%I64d\",q);\n    return 0;\n}"}
{"similarity_score": 0.5928411633109619, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a13c6b73c660e7114c341fb8e359ef5a", "bug_code_uid": "f1a3e946a1fa5b6896d07e468f62b5b0", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "7daa2067d3272d9b8e14b5394bcd0ac5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    int n,i,j;\n\n\n    for (i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        int a[n];\n            j=0;\n            for (j=0;j<n;j++)\n            {\n                scanf(\"%d\",&a[j]);\n            }\n        if (n<=2 || n%2==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for (int i=0;i<t;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int a[n];\n        int e=0,o=0;\n        for (int j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[j]);\n            if (a[j]%2==0)\n                e++;\n            else\n                o++;\n        }\n        if (o==0)\n            printf(\"NO\\n\");\n        else if (e==0 && n%2==0)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9452554744525548, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "293f5724ac4b4987f6ec6474f3dd3fff", "bug_code_uid": "e936c487c226950071facacea752df6e", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "6420fe2d465e380604d4478a0962ddee", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    if(n==1)\n    {\n        printf(\"0\");\n        return 0;\n    }\n    int max,min,temp;\n    i=0;\n    while(1)\n    {\n       if(arr[i]==arr[i+1])\n        i++;\n       else\n        break;\n    }\n    int count=0;\n    if(arr[i]>arr[i+1])\n    {\n        max=arr[i];\n        min=arr[i+1];\n        count=1;\n    }\n    else\n    {\n        max=arr[i+1];\n        min=arr[i];\n        count=1;\n    }\n    for(i=i+2;i<n;i++)\n    {\n        if(arr[i]>max)\n        {\n            count++;\n            max=arr[i];\n        }\n        else if(arr[i]<min)\n        {\n            count++;\n            min=arr[i];\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    if(n==1)\n    {\n        printf(\"0\");\n        return 0;\n    }\n    int max,min,temp;\n    i=0;\n    while(i<n)\n    {\n       if(arr[i]==arr[i+1])\n        i++;\n       else\n        break;\n    }\n    if(i==n-1)\n    {\n        printf(\"0\");\n        return 0;\n    }\n    int count=0;\n    if(arr[i]>arr[i+1])\n    {\n        max=arr[i];\n        min=arr[i+1];\n        count=1;\n    }\n    else if(arr[i]<arr[i+1])\n    {\n        max=arr[i+1];\n        min=arr[i];\n        count=1;\n    }\n    for(i=i+2;i<n;i++)\n    {\n        if(arr[i]>max)\n        {\n            count++;\n            max=arr[i];\n        }\n        else if(arr[i]<min)\n        {\n            count++;\n            min=arr[i];\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9948979591836735, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c9382fbf9becf6feadf1534b3a477a35", "bug_code_uid": "08914a586895c99a87c96e6556fc9ef1", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "ce221df205fbc4636c235450f4355367", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,x,z=1,ans=0,l,r;\n\tscanf(\"%d %d\",&n,&x);\n\twhile(n)\n\t{\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tans+=r-l+1;\n\t\tans+=(l-z)%x;\n\t\tl=r+1;\n\t\tn--;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,x,z=1,ans=0,l,r;\n\tscanf(\"%d %d\",&n,&x);\n\twhile(n)\n\t{\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tans+=r-l+1;\n\t\tans+=(l-z)%x;\n\t\tz=r+1;\n\t\tn--;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6688206785137318, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "bf6968d539805b13c7249d46a0c7f04b", "bug_code_uid": "c7d5d83cfb77331b140ada48149dd634", "src_uid": "f3ee3a0de5ddf3cf15ef02fb62a2768e", "apr_id": "d371882bb8da1213df5bc1a533aec2e9", "difficulty": 1300, "tags": ["brute force", "constructive algorithms", "dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint min(int a, int b);\r\nint max(int a, int b);\r\nint main(int argc, const char* argv[])\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int minima=1000000001;\r\n        int prefix=0, suffix=0;\r\n        int m;\r\n        scanf(\"%d\", &m);\r\n        int a[2][m];\r\n        for(int i=0;i<2;i++)\r\n            for(int j=0;j<m;j++)\r\n                scanf(\"%d\", &a[i][j]);\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            prefix=suffix=0;\r\n            for(int k=0;k<i;k++)\r\n                prefix+=a[1][k];\r\n            for(int w=m-1;w>i;w--)\r\n                suffix+=a[0][w];\r\n            minima=min(minima, max(prefix, suffix));\r\n        }\r\n      printf(\"%d\\n\", minima);\r\n    }\r\n}\r\nint min(int a, int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\nint max(int a, int b)\r\n{\r\n    return a>b?a:b;\r\n}", "fixed": "#include <stdio.h>\r\nint min(int a, int b);\r\nint max(int a, int b);\r\nint main(int argc, const char* argv[])\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int minima=1000000001;\r\n        int prefix=0, suffix=0;\r\n        int m;\r\n        scanf(\"%d\", &m);\r\n        int sum=0;\r\n        int a[2][m];\r\n        int b[2][m+1];\r\n        for(int i=0;i<2;i++)\r\n        {\r\n            scanf(\"%d\", &a[i][0]);\r\n            b[i][0]=0;\r\n            for(int j=1;j<m;j++)\r\n            {\r\n                scanf(\"%d\", &a[i][j]);\r\n                b[i][j]=b[i][j-1]+a[i][j-1];\r\n            }\r\n            b[i][m]=b[i][m-1]+a[i][m-1];\r\n        }\r\n        for(int i=0;i<m;i++)\r\n            sum+=a[0][i];\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            prefix=suffix=0;\r\n            prefix=b[1][i];\r\n            suffix=sum-b[0][i+1];\r\n            minima=min(minima, max(prefix, suffix));\r\n        }\r\n      printf(\"%d\\n\", minima);\r\n    }\r\n}\r\nint min(int a, int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\nint max(int a, int b)\r\n{\r\n    return a>b?a:b;\r\n}\r\n"}
{"similarity_score": 0.9166666666666666, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4bd30c75705de7a2a152d1adcadf00bf", "bug_code_uid": "9c72b986adba9684e33cdecdf65246dd", "src_uid": "a37c3f2828490c70301b5b5deeee0f88", "apr_id": "2a4b9a331fbbdc05d35e9b0b4520ddfa", "difficulty": 800, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n    int n ,i,j,k;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-2;i++)\n    {\n        for(j=i+1;j<n-1;j++)\n        {\n            if(a[i]==j+1)\n            {\n                for(k=j+1;k<n;k++)\n                {\n                    if(a[j]==k+1 && a[k]==i+1)\n                    {\n                        printf(\"YES\\n\");\n                        exit(0);\n                    }\n                }\n            }\n        }\n    }\n    printf(\"NO\\n\");\n\n\n}\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n    int n ,i,j,k;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(a[i]==j+1)\n            {\n                for(k=0;k<n;k++)\n                {\n                    if(a[j]==k+1 && a[k]==i+1)\n                    {\n                        printf(\"YES\\n\");\n                        exit(0);\n                    }\n                }\n            }\n        }\n    }\n    printf(\"NO\\n\");\n\n\n}\n\n"}
{"similarity_score": 0.6160220994475138, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "18ef5bfbe57d91f6f7f57705b29e4c0b", "bug_code_uid": "c9d385fb30eaa5e4b24d191c4679c54b", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "b4a655dda13cfff9302db02ec4932db6", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void) {\n\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t    int a,b,n,c;\n\t    scanf(\"%d%d%d\",&a,&b,&n);\n\t    int count=0;\n   int temp;\n\twhile(a<=n)   {\n            a+=b;\n            count++;\n            if(a>n)break;\n            b+=a;\n            temp=a;\n            a=b;\n            b=temp;\n            count++;\n            if(a>n)break;\n\t    }\n\t    printf(\"%d\\n\",count);\n\t}\n\n\n}\n\n", "fixed": "#include <stdio.h>\nint main(void) {\n\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t    int a,b,n,c,d;\n\t    scanf(\"%d%d%d\",&c,&d,&n);\n\t    int count=0;\n\t    a=c>d?c:d;\n\t    b=c<d?c:d;\n\n   int temp;\n\twhile(a<=n)   {\n            temp=a;\n            a+=b;\n            b=temp;\n            count++;\n\n}\n\t    printf(\"%d\\n\",count);\n\t}\n\n\n}\n"}
{"similarity_score": 0.8086816720257235, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2ac853de9ecc4039ffecdc7e523e15c7", "bug_code_uid": "0003993683da74f89bd6246f02a40b32", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "fc483e255423f0e93eca104884727844", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nstruct cases{\r\nlong long n;\r\nlong long m;\r\nlong long x;\r\n};\r\nint main()\r\n{\r\n    struct cases test[40000];\r\n    long long ans,cn,cm,i,t,tmp;\r\n    i=0;\r\n\r\n    scanf(\"%d\",&t);\r\n    while (i<t)\r\n    {\r\n        scanf(\"%lld %lld %lld\",&test[i].n,&test[i].m,&test[i].x);\r\n        i=i+1;\r\n    }\r\n    i=0;\r\n    while (i<t)\r\n    {\r\n        tmp=1;\r\n        while (tmp*test[i].n<test[i].x)\r\n        {\r\n            tmp=tmp+1;\r\n        }\r\n        cm=tmp;\r\n        cn=test[i].x-(cm-1)*test[i].n;\r\n        printf(\"%lld\\n\",cm+(cn-1)*test[i].m);\r\n        i=i+1;\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nstruct cases{\r\ndouble n;\r\nlong long m;\r\nlong long x;\r\n};\r\nint main()\r\n{\r\n    struct cases test[40000];\r\n    long long ans,cn,cm,i,t,tmp;\r\n    double check;\r\n    i=check=0;\r\n\r\n    scanf(\"%d\",&t);\r\n    while (i<t)\r\n    {\r\n        scanf(\"%lf %lld %lld\",&test[i].n,&test[i].m,&test[i].x);\r\n        i=i+1;\r\n    }\r\n    i=0;\r\n    while (i<t)\r\n    {\r\n        check=test[i].x/test[i].n;\r\n        cm=test[i].x/test[i].n;\r\n        if (check-cm!=0)\r\n            cm=cm+1;\r\n        cn=test[i].x-(cm-1)*test[i].n;\r\n        printf(\"%lld\\n\",cm+(cn-1)*test[i].m);\r\n        i=i+1;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9620253164556962, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5fb42853b5851909f13712ae3f207489", "bug_code_uid": "a439a67e25fd2efe2eb42e65d142d239", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "ede3e5e168215822eccf7184b477b1d8", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,t,i,a[1000],r=0;\n    scanf(\"%d%d\",&n,&t);\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    for(i=0;i<n-1; )\n    {\n        i=i+a[i];\n        if(i==(t-1))\n        {\n            printf(\"YES\");\n            return(0);\n        }\n    }\n        printf(\"NO\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,t,i,r=0;\n    scanf(\"%d%d\",&n,&t);\n    int a[n-1];\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    for(i=0;i<n-1; )\n    {\n        i=i+a[i];\n        if(i==(t-1))\n        {\n            printf(\"YES\");\n            return(0);\n        }\n    }\n        printf(\"NO\");\n}\n"}
{"similarity_score": 0.9956896551724138, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "96c85ac269068371a8f5f4d2bed374b4", "bug_code_uid": "634989515b3d247460050ad0e4cc04e8", "src_uid": "0e99f4a49b408cc8874a6d5ec4167acb", "apr_id": "bf6005ecc3ac1e363c6fc282bbd0e776", "difficulty": 1500, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n,m,i,j,p;\nint main(){\nscanf(\"%d%d\",&n,&m);\nif(n>m){\n    printf(\"%d\\n\",m+1);\nfor(i=0;i<=m;i++){\nprintf(\"%d %d\\n\",i,m-i);\n}\n}\nelse{\nprintf(\"%d\\n\",n+1);\nfor(i=0;i<=n;i++){\nprintf(\"%d %d\\n\",i,i);\n}\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint n,m,i,j,p;\nint main(){\nscanf(\"%d%d\",&n,&m);\nif(n>m){\n    printf(\"%d\\n\",m+1);\nfor(i=0;i<=m;i++){\nprintf(\"%d %d\\n\",i,m-i);\n}\n}\nelse{\nprintf(\"%d\\n\",n+1);\nfor(i=0;i<=n;i++){\nprintf(\"%d %d\\n\",i,n-i);\n}\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9987608426270136, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fc17e0c281142f74b5fe4184dcf9f76b", "bug_code_uid": "bc4dcd3538e7f7a737f665fd1e723377", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "76190b7c186720f86722ecf8b0ebe139", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int n,a,b,x,d,y,m;\n    b= 1000000001;\n    scanf(\"%d\", &n);\n    for (x=0; x<n; x++){\n        scanf(\"%d\", &a);\n        if(a<b){\n            b=a;\n            d=x;\n            m=n;\n        }\n        `else if(a==b){\n            y=x-d;\n            if(y<m){\n                    m=y;\n                   }\n            d=x;\n        }\n    }\n    printf(\"%d\", m);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,a,b,x,d,y,m;\n    b= 1000000001;\n    scanf(\"%d\", &n);\n    for (x=0; x<n; x++){\n        scanf(\"%d\", &a);\n        if(a<b){\n            b=a;\n            d=x;\n            m=n;\n        }\n        else if(a==b){\n            y=x-d;\n            if(y<m){\n                    m=y;\n                   }\n            d=x;\n        }\n    }\n    printf(\"%d\", m);\n    return 0;\n\n}\n"}
{"similarity_score": 0.8501584427342689, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f93f0aaebd6a3cb1b07227616d9831dc", "bug_code_uid": "be3cf7337be839c3909fa5cd3e8af159", "src_uid": "a98f67141b341152fcf20d803cbd5409", "apr_id": "7824a612cbbaa443e36eb25a6a8ba170", "difficulty": 1500, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid merging(int arr[],int low,int mid,int high)\n{\n\tint l1,l2,i,b[200005];\n\tfor(l1=low,i=low,l2=mid+1;l1<=mid && l2<=high;i++)\n\t{\n\t\tif(arr[l1]<=arr[l2])\n\t\t\tb[i]=arr[l1++];\n\t\telse\n\t\t{\n\t\t\tb[i]=arr[l2++];\n\t//\t\tcount+=mid-l1+1;\n\t\t}\n\t}\n\twhile(l1<=mid)\n\t{\n\t\tb[i++]=arr[l1++];\n\t}\n\twhile(l2<=high)\n\t{\n\t\tb[i++]=arr[l2++];\n\t}\n\tfor(i=low;i<=high;i++)\n\t{\n\t\tarr[i]=b[i];\n\t}\n}\nvoid sort(int arr[],int low,int high)\n{\n\tint mid;\n\tif(low<high)\n\t{\n\t\tmid=(low+high)/2;\n\t\tsort(arr,low,mid);\n\t\tsort(arr,mid+1,high);\n\t\tmerging(arr,low,mid,high);\n\t}\n\t\n}\n\nint main()\n{\n\tint n,t,arr[200005],c[200005],count,i;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&arr[i]);\n\t\t\tc[i]=arr[i];\n\t\t}\n\t\tsort(arr,0,n-1);\n\t\tcount=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(arr[i]==c[i])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count==n)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse if(count==0)\n\t\t{\n\t\t\tprintf(\"1\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"2\\n\");\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid merging(int arr[],int low,int mid,int high)\n{\n\tint l1,l2,i,b[200005];\n\tfor(l1=low,i=low,l2=mid+1;l1<=mid && l2<=high;i++)\n\t{\n\t\tif(arr[l1]<=arr[l2])\n\t\t\tb[i]=arr[l1++];\n\t\telse\n\t\t{\n\t\t\tb[i]=arr[l2++];\n\t//\t\tcount+=mid-l1+1;\n\t\t}\n\t}\n\twhile(l1<=mid)\n\t{\n\t\tb[i++]=arr[l1++];\n\t}\n\twhile(l2<=high)\n\t{\n\t\tb[i++]=arr[l2++];\n\t}\n\tfor(i=low;i<=high;i++)\n\t{\n\t\tarr[i]=b[i];\n\t}\n}\nvoid sort(int arr[],int low,int high)\n{\n\tint mid;\n\tif(low<high)\n\t{\n\t\tmid=(low+high)/2;\n\t\tsort(arr,low,mid);\n\t\tsort(arr,mid+1,high);\n\t\tmerging(arr,low,mid,high);\n\t}\n\t\n}\n\nint main()\n{\n\tint n,t,arr[200005],c[200005],count,i,l,r;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&arr[i]);\n\t\t\tc[i]=arr[i];\n\t\t}\n\t\tsort(arr,0,n-1);\n\t\tcount=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(arr[i]==c[i])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count==n)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i]!=c[i])\n\t\t\t\t{\n\t\t\t\t\tl=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=n-1;i>l;i--)\n\t\t\t{\n\t\t\t\tif(arr[i]!=c[i])\n\t\t\t\t{\n\t\t\t\t\tr=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount=0;\n\t\t\tfor(i=l;i<=r;i++)\n\t\t\t{\n\t\t\t\tif(arr[i]==c[i])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count==0)\n\t\t\t{\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t}\n\t\t}\n\t}\n}"}
{"similarity_score": 0.8255451713395638, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "53d1dbd68294ef29583eecae1f6e16f4", "bug_code_uid": "3ec911e346eb1d0ec86cdcc8c503fa43", "src_uid": "0ad96b6a8032d70df400bf2ad72174bf", "apr_id": "cf6506ec8a3f76d369b5317b5a53dcbd", "difficulty": 1300, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nvoid main()\n{\n    int a,b,c,n,i;\n    scanf(\"%d%d%d\",&a,&b,&c);\n    n=(c*a*b)/100;\n    for(i=0;i<a;i++)\n    {\n        if(n>b)\n        printf(\"%d \",b);\n        else if(n==0)\n        printf(\"0 \");\n        else \n        printf(\"%d \",b-n);\n        if(n!=0)\n        n=n-b;\n    }\n    \n    \n    \n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint  main()\n{\n    int a,b,c,n,i;\n    scanf(\"%d%d%d\",&a,&b,&c);\n    n=(c*a*b)/100;\n    for(i=0;i<a;i++)\n    {\n        if(n>b)\n        {printf(\"%d \",b);n=n-b;}\n        else if(n==0)\n        printf(\"0 \");\n        else \n        {printf(\"%d \",n);n=0;}\n\n    }\n    return 0;\n    \n    \n}"}
{"similarity_score": 0.7830423940149626, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "6be426b046ed62c104febd3905877102", "bug_code_uid": "a48ac5cfae731048d715942d17fa55de", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "079d2480fed82013206d2a75568edd12", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int Num1,Num2,Pos1,Pos2,array1[100000],array2[100000],i,j,Max,Min;\n    scanf(\"%lld %lld %lld %lld\",&Num1,&Num2,&Pos1,&Pos2);\n    for(i=0; i<Num1; i++)\n    {\n        scanf(\"%lld\",&array1[i]);\n    }\n    for(j=0; j<Num2; j++)\n    {\n        scanf(\"%lld\",&array2[j]);\n    }\n    Max=array1[0];\n    for(i=0; i<Num1; i++)\n    {\n        if(Max<array1[i])\n        {\n            Max=array1[i];\n        }\n\n    }\n    Min=array2[0];\n    for(j=0; j<Num1; j++)\n    {\n        if(Min>array2[j])\n        {\n            Min=array2[j];\n        }\n\n    }\n    if(Max<Min)\n    {\n        printf(\"YES\\n\");\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int Num1,Num2,Pos1,Pos2,array1[100000],array2[100000],i,j,count=0,Max,Min;\n    scanf(\"%lld %lld %lld %lld\",&Num1,&Num2,&Pos1,&Pos2);\n    for(i=0; i<Num1; i++)\n    {\n        scanf(\"%lld\",&array1[i]);\n    }\n    for(j=0; j<Num2; j++)\n    {\n        scanf(\"%lld\",&array2[j]);\n    }\n    Max=array1[0];\n    for(i=0; i<Pos1; i++)\n    {\n        if(array1[i]>Max)\n        {\n            Max=array1[i];\n        }\n        else\n        {\n            Max=Max;\n        }\n    }\n  //  printf(\"Max=%lld\\n\",Max);\n    Min=array2[Num2-1];\n  //  printf(\"MIN=%lld\\n\",Min);\n    for(j=Num2-1; j>=(Num2-Pos2); j--)\n    {\n        if(Min>array2[j])\n        {\n            Min=array2[j];\n        }\n        else\n        {\n            Min=Min;\n        }\n    }\n  //  printf(\"%lld\\n\",Min);\n    if(Min>Max)\n    {\n        printf(\"YES\\n\");\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2600806451612903, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "d5c0bdfdbf8616caa569c3ffa263bfc5", "bug_code_uid": "5540af1168cbe422c39db84e2b252fc0", "src_uid": "4b423274448ff3f0dee7644203706805", "apr_id": "216d00ea875d3d161a9a63bba8ddf9aa", "difficulty": 1500, "tags": ["two pointers", "implementation", "bitmasks"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tint i, j, n, k, cnt, l, r;\n\tstatic int a[100000], used[100000];\n\n\tscanf(\"%d%d\", &n, &k);\n\tl = -1, r = INT_MAX;\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (i = 0; i < n; i++) {\n\t\tj = i;\n\t\tcnt = 0;\n\t\tmemset(used, 0, sizeof(used));\n\t\twhile (j < n && cnt < k) {\n\t\t\tif (!used[a[j]])\n\t\t\t\tcnt++;\n\t\t\tused[a[j]] = 1;\n\t\t\tj++;\n\t\t}\n\t\tif (cnt < k)\n\t\t\tcontinue;\n\t\tj--;\n\t\tif (l <= i + 1 && r >= j + 1)\n\t\t\tl = i + 1, r = j + 1;\n\t}\n\tprintf(\"%d %d\\n\", l, (r == INT_MAX ? -1 : r));\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tint i, j, n, k, cnt;\n\tstatic int a[100000], count[100001];\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tcnt = 0;\n\tj = 0;\n\twhile (j < n) {\n\t\tif (count[a[j]] == 0)\n\t\t\tif (++cnt == k)\n\t\t\t\tbreak;\n\t\tcount[a[j++]]++;\n\t}\n\tif (j == n)\n\t\tprintf(\"-1 -1\\n\");\n\telse {\n\t\tfor (i = 0; i < j; i++)\n\t\t\tif (--count[a[i]] == 0)\n\t\t\t\tbreak;\n\t\tprintf(\"%d %d\\n\", i + 1, j + 1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.2029197080291971, "equal_cnt": 16, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "6d0741b428dd8a37cd169030d1d5fa50", "bug_code_uid": "eaf0dc2cdacadc00a4e48cee446a998e", "src_uid": "e30ac55354792bdad2ef41aba8838806", "apr_id": "6897ade634c4f3b644a9c273d0dea28b", "difficulty": 1800, "tags": ["data structures", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,q;\n    scanf(\"%d%d\",&n,&q);\n    int a[n],c,s=0,b=0,i;\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%d\",&c);\n        if(c==1)\n        {\n            scanf(\"%d\",&c);\n            s=s+c;\n        }\n        if(c==2)\n        {\n            b=b+1;\n        }\n    }\n    for(i=0;i<n;i=i+2)\n    {\n        a[(i+s+n+b%2)%n]=i;\n    }\n    for(i=1;i<n;i=i+2)\n    {\n        a[(i+s-b%2+n)%n]=i;\n    }\n    for(i=0;i<n;i++)\n        printf(\"%d \",a[i]+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    long long int i,j,k=0,l=1,m,n,x,y,z;\n    scanf(\"%I64d%I64d\",&n,&m );\n    for(i=0;i<m;i++){\n        scanf(\"%I64d\",&x);\n        if(x==1){\n            scanf(\"%I64d\",&y);\n            k=k+y;l=l+y;\n            continue;\n        }\n        if(k%2==0){\n            k=k+1;l=l-1;continue;\n        }\n        k=k-1;l=l+1;\n    }\n    k=(3000000*n+k)%n;l=(3000000*n+l)%n;x=1;y=2;z=0;\n    int a[n];\n    a[k]=1;a[l]=2;\n    //cout<<k<<\" \"<<l<<endl;\n    for(i=k-2,x=x-2;i>-1;i-=2,x=x-2){\n        a[i]=x;\n    }\n    x=1;\n    for(i=k+2,x=x+2;i<n;i+=2,x+=2){\n        a[i]=x;\n    }\n    for(i=l-2,y=y-2;i>-1;i-=2,y-=2){\n        a[i]=y;\n    }\n    y=2;\n    for(i=l+2,y=y+2;i<n;i+=2,y+=2){\n        a[i]=y;\n    }\n    for(i=0;i<n;i++){\n        if(a[i]<=0){\n            printf(\"%d \",a[i]+n);continue;\n        }\n        printf(\"%d \",a[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9771598808341608, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "858ee386facb1de6b7daafb9becb4347", "bug_code_uid": "42069d71d947ae387a5b65ed96c586c2", "src_uid": "513234db1bab98c2c2ed6c7030c1ac72", "apr_id": "d6ff4df42dccb0703c868c26a10cc943", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n int tab[8]={0};\n int i,n,x;\n scanf(\"%d\",&n);\n for(i=0;i<n;i++){\n    scanf(\"%d\",&x);\n    tab[x]++;\n }\n    if(tab[7]>0||tab[5]>0||tab[2]<tab[4]||tab[3]>tab[6]||tab[2]+tab[3]!=tab[4]+tab[6]){\n        printf(\"-1\");\n    }else{\n     while(tab[4]-->0){\n            printf(\"1 2 4\\n\");\n            tab[2]--;\n    }\n      while(tab[3]-->0){\n        printf(\"1 3 6\\n\");\n        tab[6]--;\n      }\n      while(tab[6]-->0)\n        printf(\"1 2 6\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n int tab[8]={0};\n int i,n,x;\n scanf(\"%d\",&n);\n for(i=0;i<n;i++){\n    scanf(\"%d\",&x);\n    tab[x]++;\n }\n    if(tab[7]>0||tab[5]>0||tab[2]<tab[4]||tab[3]>tab[6]||tab[2]+tab[3]!=tab[4]+tab[6]||tab[1]!=tab[2]+tab[3]){\n        printf(\"-1\");\n    }else{\n     while(tab[4]-->0){\n            printf(\"1 2 4\\n\");\n            tab[2]--;\n    }\n      while(tab[3]-->0){\n        printf(\"1 3 6\\n\");\n        tab[6]--;\n      }\n      while(tab[6]-->0)\n        printf(\"1 2 6\\n\");\n    }\n}\n"}
{"similarity_score": 0.9780077619663649, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3dcc7a2fc8c8dd926b34fd3255b0f821", "bug_code_uid": "54ecf0dc033dd2fdd5802b42891095b5", "src_uid": "2fee6c39d4e55f903837ef81e818eb07", "apr_id": "0f1cf7f4fee81ad677a8eade2efa157f", "difficulty": 800, "tags": ["data structures", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,i;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n],b[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tprintf(\"%d \",b[0]-a[0]);\r\n\t\tfor(i=1;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]>b[i-1])\r\n\t\t\tprintf(\"%d \",b[i]-a[i]);\r\n\t\t\telse\r\n\t\t\tprintf(\"%d \",b[i]-b[i-1]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,i;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n],b[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tprintf(\"%d \",b[0]-a[0]);\r\n\t\tfor(i=1;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]>b[i-1])\r\n\t\t\tprintf(\"%d \",b[i]-a[i]);\r\n\t\t\telse\r\n\t\t\tprintf(\"%d \",b[i]-b[i-1]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.997275204359673, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1d66ea1c6a346b8c3e4167b4ed5cb5a8", "bug_code_uid": "47a195787ee288baea4a8bb14b929d7b", "src_uid": "317891277a5393758bd3c8f606769070", "apr_id": "9ad4cc7354c40a38192581be7c4f3c3d", "difficulty": 1700, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,a,b,min;\n    scanf(\"%d%d%d%d\",&n,&m,&a,&b);\n    min=(b-a)+1;\n    int i;\n    for(i=1;i<m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        if(min>((b-a)+1))\n        {\n            min=(b-a)+1;\n        }\n    }\n    printf(\"%d\\n\",min);\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d \",i%m);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,a,b,min;\n    scanf(\"%d%d%d%d\",&n,&m,&a,&b);\n    min=(b-a)+1;\n    int i;\n    for(i=1;i<m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        if(min>((b-a)+1))\n        {\n            min=(b-a)+1;\n        }\n    }\n    printf(\"%d\\n\",min);\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d \",i%min);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9920283436669619, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "960c9a1784593f92aa4e7aa6d31ce14f", "bug_code_uid": "7749642455bc289f23b958f4e656e1fd", "src_uid": "ce4443581d4ee12db6607695cd567070", "apr_id": "d7e02a2cafeb99b586e5c865f20461f1", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint isitdiverse(char str[], int p1, int p2, int n){\n\tint hash[27]={0};\n\tfor(int i=p1; i<=p2; i++){\n\t\thash[str[i]-'a']++;\n\t}\n\tfor(int i=0; i<26; i++){\n\t\tif(hash[i]>n/2)\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tchar str[1010];\n\tint n;\n\tscanf(\"%d\", &n);\n\tscanf(\" %s\", str);\n\tint p1=0, p2=0;\n\twhile(p1 <n-1){\n\t\twhile(p2<n){\n\t\t\tif(isitdiverse(str, p1, p2, p2-p1+1)){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tfor(int i=p1; i<=p2; i++){\n\t\t\t\t\tprintf(\"%c\", str[i]);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tp2++;\n\t\t}\n\t\tp1++;\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint isitdiverse(char str[], int p1, int p2, int n){\n\tint hash[27]={0};\n\tfor(int i=p1; i<=p2; i++){\n\t\thash[str[i]-'a']++;\n\t}\n\tfor(int i=0; i<26; i++){\n\t\tif(hash[i]>n/2)\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tchar str[1010];\n\tint n;\n\tscanf(\"%d\", &n);\n\tscanf(\" %s\", str);\n\tint p1=0, p2=0;\n\twhile(p1 <n-1){\n\t\twhile(p2<n){\n\t\t\tif(isitdiverse(str, p1, p2, p2-p1+1)){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tfor(int i=p1; i<=p2; i++){\n\t\t\t\t\tprintf(\"%c\", str[i]);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tp2++;\n\t\t}\n\t\tp1++;\n\t\tp2=p1;\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.8734817813765182, "equal_cnt": 44, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 27, "fix_ops_cnt": 43, "lang": "GNU C11", "fix_code_uid": "2919f863ee955f153a065d23a1655eea", "bug_code_uid": "77fbe19074ae05ca698e4acbf42a66f0", "src_uid": "9640b7197bd7b8a59f29aecf104291e1", "apr_id": "dbb0bc373b1c079aea774d14fe365942", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint  size_string(char str[100])\r\n{\r\n\r\n    char x;\r\n    for (x = 1; str[x]!='\\0'; ++x);\r\n    return x;\r\n}\r\nint main()\r\n{\r\n    int t,k[100],sum;\r\n    scanf(\"%d\", &t);\r\n    char A[t][100];\r\n    for (int i = 0; i < t; ++i)\r\n    {\r\n        scanf(\"%s\", &A[i][0]);\r\n    }\r\n\r\n    for (int i = 0; i < t; ++i)\r\n    {\r\n        k[i]=size_string(A[i]);\r\n       // printf(\"%d\\n\",k[i]);\r\n    }\r\n    for (int i = 0; i < t; ++i)\r\n    {\r\n        sum=0;\r\n        if(k[i]%2==1)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        if(k[i]%2==0)\r\n        {\r\n            for(int j=0;j<k[i]/2;++j)\r\n            {\r\n                if(A[i][j]==A[i][(k[i]/2)+j])\r\n                {\r\n                    sum=sum+1;\r\n                }\r\n            }\r\n            if(sum==k[i]/2)\r\n            {\r\n                printf(\"YES\\n\");\r\n            }\r\n            if(sum<k[i]/2)\r\n            {\r\n                printf(\"No\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n\r\n}", "fixed": "#include <stdio.h>\r\nint size_string(char str[101])\r\n{\r\n\r\n    char x;\r\n    for (x = 1; str[x] != '\\0'; ++x);\r\n    return x;\r\n}\r\nint main()\r\n{\r\n    int t, k[100], sum, add;\r\n    scanf(\"%d\", &t);\r\n    char A[t][101];\r\n    for (int i = 0; i < t; ++i)\r\n    {\r\n        scanf(\"%s\", &A[i][0]);\r\n    }\r\n\r\n    for (int i = 0; i < t; ++i)\r\n    {\r\n        k[i] = size_string(A[i]);\r\n    }\r\n    for (int i = 0; i < t; ++i)\r\n    {\r\n        add = 0;\r\n        sum = 0;\r\n        if (k[i] % 2 == 1)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        if (k[i] % 2 == 0)\r\n        {\r\n            for (int j = 0; j < k[i] / 2; ++j)\r\n            {\r\n                if (A[i][j] == A[i][(k[i] / 2) + j])\r\n                {\r\n                    sum = sum + 1;\r\n                }\r\n            }\r\n            if (sum == k[i] / 2)\r\n            {\r\n                printf(\"YES\\n\");\r\n            }\r\n            if (sum < k[i] / 2)\r\n            {\r\n                printf(\"No\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9989572471324296, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c361f408e2dacc585033302f6294f110", "bug_code_uid": "72d8807198bdb10ea289f3f049f4cbd8", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "7a6a6594bab1bc4bc390bc36fb6003e1", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    int a[n],i,sum=0,j,count=0,l,count1=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    if(sum<=k)\n    {\n        printf(\"%d\",n);\n        return 0;\n    }\n    for(i=0;i<n && n-i>count;i++)\n    {\n        for(j=i,l=k,count1=0;j<n && l-a[j]>0;j++)\n        {\n            count1++;\n            l-=a[j];\n        }\n        if(count<count1)    count=count1;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    int a[n],i,sum=0,j,count=0,l,count1=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    if(sum<=k)\n    {\n        printf(\"%d\",n);\n        return 0;\n    }\n    for(i=0;i<n && n-i>count;i++)\n    {\n        for(j=i,l=k,count1=0;j<n && l-a[j]>=0;j++)\n        {\n            count1++;\n            l-=a[j];\n        }\n        if(count<count1)    count=count1;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9490740740740741, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "782646ba52aecac990d8d1feba07c441", "bug_code_uid": "d0a957cbfa4330dda68e2b0fe3af9db5", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "c3faf4b84bacad35d3ada398ee805f41", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint n, c=0;\n\tscanf(\"%d\", &n);\n\tchar input[3];\n\tfor (int i =0; i<n ; i++){\n\t\tscanf(\"%s\", input);\n\t\tif(input[1]=='+')\n\t\t\tc++;\n\t\telse\n\t\t\tc--;\n\t}\n\tprintf(\"%d\", c);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tint n, c=0;\n\tscanf(\"%d\", &n);\n\tchar input[10];\n\tfor (int i =0; i<n ; i++){\n\t\tscanf(\"%s\", input);\n\t\tif(input[1]=='+')\n\t\t\tc++;\n\t\telse\n\t\t\tc--;\n\t}\n\tprintf(\"%d\", c);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8522167487684729, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3916c62b2cbbe13ee28493c641db034b", "bug_code_uid": "ce80d2b5613e5f1c3821d2a4ea7ab42b", "src_uid": "b18dac401b655c06bee331e71eb3e4de", "apr_id": "f4917bf9a7a5cc70043f4a3b7016633a", "difficulty": 1200, "tags": ["binary search", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int min(long int ,long int );\nlong int min(long int x,long int y){\n    if (x>y)\n    return y;\n    else \n    return x;\n    }\nvoid main(){\n  long  int q,c,m,x,t,r;\n    scanf(\"%ld\",&q);\n \n    while(q--){\n        scanf(\"%ld%ld%ld\",&c,&m,&x);\n        if(c<m)\n        printf(\"%ld\",min(c,((c+m+x)/3)));\n        else\n        printf(\"%ld\",(min(m,((c+m+x)/3)));\n        \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nlong int min(long int ,long int );\nlong int min(long int x,long int y){\n    if (x>y)\n    return y;\n    else \n    return x;\n    }\nvoid main(){\n  long  int q,c,m,x,t;\n    scanf(\"%ld\",&q);\n \n    while(q--){\n        scanf(\"%ld%ld%ld\",&c,&m,&x);\n        t=(c+m+x)/3;\n        if(c<m)\n        printf(\"%ld\\n\",min(c,t));\n        else\n        printf(\"%ld\\n\",min(m,t));\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9760589318600368, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cba97a9fd5aaa70359845a08694d9b72", "bug_code_uid": "a1339c946c3e2f7ca4492912b0f83293", "src_uid": "5babbb7c5f6b494992ffa921c8e19294", "apr_id": "c06739eaf01f6459af935bab59d32dc4", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,d,i,c=2;\n    scanf(\"%d %d\",&n,&d);\n    int a,x;\n    scanf(\"%d\",&x);\n    for(i=0;i<n-1;i++){\n        scanf(\"%d\",&a);\n        if((x+d)<(a-d)) c+=2;\n        else if((x+d)==(a-d)) c++;\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,d,i,c=2;\n    scanf(\"%d %d\",&n,&d);\n    int a,x;\n    scanf(\"%d\",&x);\n    for(i=0;i<n-1;i++){\n        scanf(\"%d\",&a);\n        if((x+d)<(a-d)) c+=2;\n        else if((x+d)==(a-d)) c++;\n        x=a;\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}"}
{"similarity_score": 0.9470588235294117, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ef1b69a06d73cfeff4574e9d1ece3757", "bug_code_uid": "5874723faf08dbe95d654d2c5a65a2f7", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "e29ac619f275a62370f299f54698924a", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n\tint num_test,i,num,out;\r\n\tscanf(\"%d\",&num_test);\r\n\tfor (i = 0; i<num_test; i++){\r\n\t\tscanf(\"%d\",&num);\r\n\t\tout = 0;\r\n\t\tout += num / 3;\r\n\tif (num == 4){\r\n\t\tout = 2;\r\n\t}\r\n\r\n\telse if (num%3 == 2){\r\n\t\tout ++;\r\n\t}\r\n\telse if(num%3 == 1){\r\n\t\tout ++;\r\n\t}\r\n\tprintf(\"%d\\n\",out);\r\n\t}\r\n\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n\tint num_test,i,num,out;\r\n\tscanf(\"%d\",&num_test);\r\n\tfor (i = 0; i<num_test; i++){\r\n\t\tscanf(\"%d\",&num);\r\n\t\tout = 0;\r\n\t\tout += num / 3;\r\n\tif (num == 4){\r\n\t\tout = 2;\r\n\t}\r\n\telse if (num == 1){\r\n\t\tout = 2;\r\n\t}\r\n\telse if (num%3 == 2){\r\n\t\tout ++;\r\n\t}\r\n\telse if(num%3 == 1){\r\n\t\tout ++;\r\n\t}\r\n\tprintf(\"%d\\n\",out);\r\n\t}\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9755792110206637, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8557c04322995e80aa7e6033db61ecb8", "bug_code_uid": "630aeb215d75f227557b655632f3e5a8", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "185cba119ee9a96133d61ded9251253f", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint is_prime(long long int n)\n{\n    int i,j;\n    long long int limit;\n    if(n==4||n==9){\n        return 1;\n    }\n    if(n==1){\n        return 0;\n    }\n    limit=sqrt(n*1.0);\n    if(limit*limit!=n){\n        return 0;\n    }\n    else{\n        if(limit%2==0){\n            return 0;\n        }\n        else{\n            for(i=3;i<limit;i=i+2){\n                if(limit%i==0){\n                    return 0;\n                }\n            }\n        }\n    }\n    return 1;\n}\n\nint main()\n{\n    int i,j,t;\n    long long int n;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%I64d\",&n);\n        if(1==is_prime(n)){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint is_prime(long long int n)\n{\n    int i,j;\n    long long int limit,root;\n    if(n==4||n==9){\n        return 1;\n    }\n    if(n==1){\n        return 0;\n    }\n    limit=sqrt(n*1.0);\n    root=sqrt(limit*1.0);\n    if(limit*limit!=n){\n        return 0;\n    }\n    else{\n        if(limit%2==0){\n            return 0;\n        }\n        else{\n            for(i=3;i<=root;i=i+2){\n                if(limit%i==0){\n                    return 0;\n                }\n            }\n        }\n    }\n    return 1;\n}\n\nint main()\n{\n    int i,j,t;\n    long long int n;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%I64d\",&n);\n        if(1==is_prime(n)){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.5966735966735967, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "ab7ff1ef4c6b5b703650414c0c7299ea", "bug_code_uid": "2efefb7041bd1bdaf0a125d27ac57fa7", "src_uid": "e63de0fffd00b2da103545a7f1e405be", "apr_id": "343e77fce93515f64e532f4f5d251754", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint N;\n\tscanf(\"%d\",&N);\n\tint a[N],i=0,flag = 0;\n\tfor(i=0;i<N;i++)\n\t{\n\t\ta[i] = -1;\n\t}\n\tint count=0;\n\tfor(i=0;i<N;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i] == i)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tflag = 1;\n\t\t\tif(a[a[i]] == i)\n\t\t\t{\n\t\t\t\tflag = 2;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag == 1)\n\t{\n\t\tprintf(\"%d\\n\",count+1);\n\t}\n\telse if(flag == 2)\n\t{\n\t\tprintf(\"%d\\n\",count+2);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint N;\n\tscanf(\"%d\",&N);\n\tint a[N],i=0,flag = 0;\n\tfor(i=0;i<N;i++)\n\t{\n\t\ta[i] = -1;\n\t}\n\tint count=0;\n\tfor(i=0;i<N;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i] == i)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tfor(i=0;i<N;i++)\n\t{\n\t\tif(a[i] < N && a[a[i]] == i && a[i] != i)\n\t\t{\n\t\t\tflag = 2;\n\t\t\tbreak;\n\t\t}\n\t\tif((a[i] != i) && (a[i] < N) && a[a[i]]!=a[i])\n\t\t{\n\t\t\tflag = 1;\n\t\t}\n\n\t}\n\tif(flag == 1)\n\t{\n\t\tprintf(\"%d\\n\",count+1);\n\t}\n\telse if(flag == 2)\n\t{\n\t\tprintf(\"%d\\n\",count+2);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8372615039281706, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4234945f53642f5b6d199d0468d2d6bd", "bug_code_uid": "07c2a770011e855b28f15f1fa5b2ed38", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "657be84f44bb58821afd36e98e91758e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint C,i,j;\n\tscanf(\"%d\",&C);\n\tprintf(\"%d\\n\",C);\n\tfor(i=1;i<=C;i++)\n\t{\n\t\tfor(j=1;j<=C;j++)\n\t\t{\n\t\t\tif(j%2==1&&i%2==1)\n\t\t\t{\n\t\t\t\tprintf(\"C\");\n\t\t\t}\n\t\t\telse if(j%2==0&&i%2==1)\n\t\t\t{\n\t\t\t\tprintf(\".\");\n\t\t\t}\n\t\t\telse if(j%2==1&&i%2==0)\n\t\t\t{\n\t\t\t\tprintf(\".\");\n\t\t\t}\n\t\t\telse if(j%2==0&&i%2==0)\n\t\t\t{\n\t\t\t\tprintf(\"C\");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint C,i,j,T=0;\n\tscanf(\"%d\",&C);\n\tfor(i=1;i<=C;i++)\n\t{\n\t\tfor(j=1;j<=C;j++)\n\t\t{\n\t\t\tif(j%2==1&&i%2==1)\n\t\t\t{\n\t\t\t\tT++;\n\t\t\t}\n\t\t\telse if(j%2==0&&i%2==0)\n\t\t\t{\n\t\t\tT++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",T);\n\tfor(i=1;i<=C;i++)\n\t{\n\t\tfor(j=1;j<=C;j++)\n\t\t{\n\t\t\tif(j%2==1&&i%2==1)\n\t\t\t{\n\t\t\t\tprintf(\"C\");\n\t\t\t}\n\t\t\telse if(j%2==0&&i%2==1)\n\t\t\t{\n\t\t\t\tprintf(\".\");\n\t\t\t}\n\t\t\telse if(j%2==1&&i%2==0)\n\t\t\t{\n\t\t\t\tprintf(\".\");\n\t\t\t}\n\t\t\telse if(j%2==0&&i%2==0)\n\t\t\t{\n\t\t\t\tprintf(\"C\");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9877112135176651, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "214b644ae85d01aa4d5d79d5cac44e86", "bug_code_uid": "78979235d4bbe4df4c3fd4b9bd86ac01", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "bdb45de5b308b5d28eb8b6dfa3fb9a56", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++) {\r\n        int countQuantity;\r\n        scanf(\"%d\", &countQuantity);\r\n        int evenQuantity = 0;\r\n        int notEvenQuantity = 0;\r\n\r\n        for (int q = 0; q < 2 * countQuantity; q++) {\r\n            int quantity;\r\n            scanf(\"%d\", &quantity);\r\n\r\n            if (quantity % 2 == 0)\r\n                evenQuantity += 1;\r\n            else\r\n                notEvenQuantity += 1;\r\n        }\r\n        \r\n        if (evenQuantity == notEvenQuantity)\r\n            printf(\"Yes\");\r\n        else\r\n            printf(\"No\");\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++) {\r\n        int countQuantity;\r\n        scanf(\"%d\", &countQuantity);\r\n        int evenQuantity = 0;\r\n        int notEvenQuantity = 0;\r\n\r\n        for (int q = 0; q < 2 * countQuantity; q++) {\r\n            int quantity;\r\n            scanf(\"%d\", &quantity);\r\n\r\n            if (quantity % 2 == 0)\r\n                evenQuantity += 1;\r\n            else\r\n                notEvenQuantity += 1;\r\n        }\r\n\r\n        if (evenQuantity == notEvenQuantity)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.4233128834355828, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "58c85387bd757413589fb866bd91a3c6", "bug_code_uid": "a26465a915214cab8c1aa6c09cd9a8bc", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "fee33df6c9073f4bebe86bde1b8138fd", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\nint s(int k){\r\n    int d=0;\r\n    while(k>0){\r\n        d=d+k%10;\r\n        k=k/10;\r\n    }\r\n    return d;\r\n}\r\nint main(){\r\nint t,n,a=0;\r\nscanf(\"%d\",&t);\r\nwhile(t>0){\r\n    scanf(\"%d\",&n);\r\n    for(int i=1;i<=n;i++){\r\n        s(i);\r\n        if(s(i)>s(i+1)){\r\n            a++;\r\n        }\r\n    }\r\n    printf(\"%d\\n\",a);\r\n    a=0;\r\n    t--;\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n\r\nint main(){\r\nint t,n;\r\nscanf(\"%d\",&t);\r\nwhile(t>0){\r\n    scanf(\"%d\",&n);\r\n   int d=(n+1)/10;\r\n    printf(\"%d\\n\",d);\r\n    \r\n    t--;\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.8782961460446247, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d89540b7e4eb63816060835efd5039ff", "bug_code_uid": "2b74e655c12bd4b7476bb1f1ff641343", "src_uid": "64b597a47106d0f08fcfad155e0495c3", "apr_id": "cf76e059d9f471e1446288923545c2cb", "difficulty": 900, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,s,b[1000],a[1000],c=0,i;\n    scanf(\"%d%d\",&n,&s);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&b[i]);\n    if(a[0]==1&&(a[s-1]==1||b[s-1]==1))\n    {\n        printf(\"YES\\n\");\n        return 0;\n    }\n    for(i=s; i<n; i++)\n        if(a[i]==b[i]&&a[i]==1&&a[0]==1)\n        {\n            printf(\"YES\\n\");\n            return 0;\n        }\n    printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,s,b[1000],a[1000],c=0,i;\n    scanf(\"%d%d\",&n,&s);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&b[i]);\n    if(a[0]==0||(a[s-1]==0&&b[s-1]==0))\n    {\n        printf(\"NO\\n\");\n        return 0;\n    }\n    if(a[s-1]==1&&a[0]==1)\n    {\n        printf(\"YES\\n\");\n        return 0;\n    }\n    for(i=s; i<n; i++)\n        if(a[i]==b[i]&&a[i]==1)\n        {\n            printf(\"YES\\n\");\n            return 0;\n        }\n    printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9810791871058164, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "078b9792c28d746b6ab3179658e132ce", "bug_code_uid": "5d08875caa0c22b7bbf0e0cc093adf68", "src_uid": "9f019c3898f27d687c5b3498586644e8", "apr_id": "644bb1be88230e16d0c6dabe5bba0bd4", "difficulty": 800, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <math.h>\r\n#include <stdio.h>\r\n \r\nint main() {\r\n    int t;\r\n    int x1, x2, x3, y1, y2, y3;\r\n    int distance = 0;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++) {\r\n        scanf(\"%d %d\\n%d %d\\n%d %d\\n\", &x1, &y1, &x2, &y2, &x3, &y3);\r\n        if(((y1 - y2) == 0) && (y1 > y3)) {\r\n            distance = abs(x1 - x2);\r\n            printf(\"%d\\n\", distance);\r\n        }else if(((y2 - y3) == 0) && (y2 > y1)) {\r\n            distance = abs(x2 - x3);\r\n            printf(\"%d\\n\", distance);\r\n        }else if(((y1 - y3) == 0) && (y1 > y2)) {\r\n            distance = abs(x1 - x3);\r\n            printf(\"%d\\n\", distance);\r\n        }else {\r\n            printf(\"%d\\n\", distance);\r\n        }\r\n    }\r\n}", "fixed": "#include <math.h>\r\n#include <stdio.h>\r\n \r\nint main() {\r\n    int t;\r\n    int x1, x2, x3, y1, y2, y3;\r\n    int distance;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++) {\r\n        distance = 0;\r\n        scanf(\"%d %d\\n%d %d\\n%d %d\\n\", &x1, &y1, &x2, &y2, &x3, &y3);\r\n        if(((y1 - y2) == 0) && (y1 > y3)) {\r\n            distance = abs(x1 - x2);\r\n            printf(\"%d\\n\", distance);\r\n        }else if(((y2 - y3) == 0) && (y2 > y1)) {\r\n            distance = abs(x2 - x3);\r\n            printf(\"%d\\n\", distance);\r\n        }else if(((y1 - y3) == 0) && (y1 > y2)) {\r\n            distance = abs(x1 - x3);\r\n            printf(\"%d\\n\", distance);\r\n        }else {\r\n            printf(\"%d\\n\", distance);\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.7703952901597981, "equal_cnt": 24, "replace_cnt": 9, "delete_cnt": 13, "insert_cnt": 1, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "97107d6b20eea769473d3a010b382df0", "bug_code_uid": "5a69912e219a54a3505e8c0bd6049784", "src_uid": "15aa3adb14c17023f71eec11e1c32efe", "apr_id": "febf71d5281ce848f11d1310cedd4abc", "difficulty": 1700, "tags": ["dp", "greedy", "graphs", "constructive algorithms", "shortest paths", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar s[100];\nint find1(int opw,int k,int cw){\n\t//\tprintf(\"con= %d opp= %d last=%d\",cw,opw,k);\n\tint i;\n\tfor(i=0;i<10;i++){\n\t\tif(s[i]=='1' && k!=i+1 && cw+i+1 > opw){\n\t\t\treturn i+1;\n\t\t}\n\t}\n\treturn -1;\n}\nint main(){\n\tscanf(\"%s\",s);\n\tint w1=0;\n\tint w2=0;\n\tint m;\n\tscanf(\"%d\",&m);\n\tint i;\n\tint last=-1;\n\tint a[m];\n\tint j=0;\n\tint fl=1;\n\tint y;\n\tint k;\n\tint yu=0;\n\tfor(i=0;i<10;i++){\n\t\tj=0;\n\t\tlast=-1;\n\t\tw1=0;\n\t\tw2=0;\n\t\tfl=1;\n\t\t\tif(s[i]=='1'){\n\t\t\t\tw1+=i+1;\n\t\t\t\tlast=i+1;\n\t\t\t\ta[j]=last;\n\t\t\t\tj++;\n\t\t\t\tfor(k=1;k<m;k++){\n\t\t\t\t\tif(k%2==1){\n\t\t\t\t\t\ty=find1(w1,last,w2);\n\t\t\t\t\t\t//printf(\"i= %d and %d return fun \\n\",i,y);\n\t\t\t\t\t\tif(y==-1){\n\t\t\t\t\t\t\t//\tprintf(\"NO\\n\");\n\t\t\t\t\t\t\tfl=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tw2+=y;\n\t\t\t\t\t\t\tlast=y;\n\t\t\t\t\t\t\ta[j]=last;\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\ty=find1(w2,last,w1);\n\t\t\t\t\t\t//\t\t\t\tprintf(\"i= %d and %d return fun \\n\",i,y);\n\t\t\t\t\t\tif(y==-1){\n\t\t\t\t\t\t\t//\tprintf(\"NO\\n\");\n\t\t\t\t\t\t\tfl=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tw1+=y;\n\t\t\t\t\t\t\tlast=y;\n\t\t\t\t\t\t\ta[j]=last;\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(fl==1){\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\tfor(k=0;k<j;k++){\n\t\t\t\t\t\tprintf(\"%d \",a[k]);\n\t\t\t\t\t}\n\t\t\t\t\tprintf(\"\\n\");\n\t\t\t\t\tyu=1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tif(yu==0){\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar s[100];\nint find1(int opw,int k,int cw){\n\t//\tprintf(\"con= %d opp= %d last=%d\",cw,opw,k);\n\tint i;\n\tfor(i=0;i<10;i++){\n\t\tif(s[i]=='1' && k!=i+1 && cw+i+1 > opw){\n\t\t\treturn i+1;\n\t\t}\n\t}\n\treturn -1;\n}\nint main(){\n\tscanf(\"%s\",s);\n\tint w1=0;\n\tint w2=0;\n\tint m;\n\tscanf(\"%d\",&m);\n\tint i;\n\tint last=-1;\n\tint a[m];\n\tint j=0;\n\tint fl=1;\n\tint y;\n\tint k;\n\tint yu=0;\n\tfor(i=0;i<10;i++){\n\t\tj=0;\n\t\tlast=-1;\n\t\tw1=0;\n\t\tw2=0;\n\t\tfl=1;\n\t\tif(s[i]=='1'){\n\t\t\tw1+=i+1;\n\t\t\tlast=i+1;\n\t\t\ta[j]=last;\n\t\t\tj++;\n\t\t\tfor(k=1;k<m;k++){\n\t\t\t\tif(k%2==1){\n\t\t\t\t\ty=find1(w1,last,w2);\n\t\t\t\t\tif(y==-1){\n\t\t\t\t\t\tfl=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tw2+=y;\n\t\t\t\t\t\tlast=y;\n\t\t\t\t\t\ta[j]=last;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ty=find1(w2,last,w1);\n\t\t\t\t\tif(y==-1){\n\t\t\t\t\t\tfl=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tw1+=y;\n\t\t\t\t\t\tlast=y;\n\t\t\t\t\t\ta[j]=last;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n//\t\tprintf(\"sabse pehle %d rakha n %d aaya\\n\",i+1,fl);\n\t\t\tif(fl==1){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tfor(k=0;k<j;k++){\n\t\t\t\t\tprintf(\"%d \",a[k]);\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\tyu=1;\n\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(yu==0){\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9445676274944568, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6407afa395e2b7202cd8ced2a287829e", "bug_code_uid": "8a7ee86a807328dde108a35e0c32bbba", "src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "apr_id": "edc58d1624e63f4a58fb25be04f80cfa", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n\tint n,i,b,br=0;\n\tscanf(\"%d\",&n);\n\tint a[5001]={0};\n\t\n\tfor(i=0;i<n;++i){ scanf(\"%d\",&b); a[b]++; }\n\tfor(i=0;i<=5000;++i)\n\t\tif(a[i]>1) br+=a[i]-1;\n\n\tprintf(\"%d\",br);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(void)\n{\n\tint n,i,b,br=0;\n\tscanf(\"%d\",&n);\n\tint a[5001]={0};\n\t\n\tfor(i=0;i<n;++i){ scanf(\"%d\",&b); a[b]++; }\n\tfor(i=0;i<=5000;++i)\n\t\tif(i>n) br+=a[i];\n\t\telse if(a[i]>1) br+=a[i]-1;\n\n\tprintf(\"%d\",br);\n\treturn 0;\n}"}
{"similarity_score": 0.9959919839679359, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7a25fd4559a501f502c2ceb21e6242d0", "bug_code_uid": "36ceb030e04d97557b550d765de939c5", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "5f3b838289fc5c63c359cad7726ee1dc", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n\tint t,n,m,i;\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++){\n\t\tscanf(\"%d%d\\n\",&n,&m);\n\t\t/*Check if it is possible to\n\t\t build another convex \n\t\t regular polygon with\n\t\t m vertices such that its\n\t\t center coincides with\n\t\t the center of the initial\n\t\t polygon and each of its\n\t\t vertices is some vertex\n\t\t of the initial polygon and \n\t\t print the answer for \n\t\t each case respectively.*/\n\t\tif(n%m==0){\n\t\t\tprintf(\"YES\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n\n", "fixed": "#include <stdio.h>\n\nint main(void){\n\tint t,n,m,i;\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++){\n\t\tscanf(\"%d%d\\n\",&n,&m);\n\t\t/*Check if it is possible to\n\t\t build another convex \n\t\t regular polygon with\n\t\t m vertices such that its\n\t\t center coincides with\n\t\t the center of the initial\n\t\t polygon and each of its\n\t\t vertices is some vertex\n\t\t of the initial polygon and \n\t\t print the answer for \n\t\t each case respectively.*/\n\t\tif(n%m==0){\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n\n"}
{"similarity_score": 0.9701492537313433, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "627edbe9154c1b6b70c91806027ed820", "bug_code_uid": "38425ebe77928442c322e49bc6b9effb", "src_uid": "80e21bfe08a3ef156d0404d4fe07bccd", "apr_id": "36c9c023ae5938bec42a17f39e5db886", "difficulty": 800, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t;\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n               a = b = -1;\r\n               c = 0;\r\n               scanf(\"%d\", &n);\r\n               for(x = 0; x < n; x++) {\r\n                     scanf(\"%d\", &a);\r\n                     c += (a < b);\r\n                     b = a;\r\n               }\r\n               \r\n               printf(\"%d\\n\", (c + 1) / 2);\r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t;\r\n     scanf(\"%d\", &t);\r\n     while(t--)\r\n     {\r\n               a = b = -1;\r\n               c = 0;\r\n               scanf(\"%d\", &n);\r\n               for(x = 0; x < n; x++) {\r\n                     scanf(\"%d\", &a);\r\n                     c += (a < b);\r\n                     b = (a < b) ? -1 : a;\r\n               }\r\n               \r\n               printf(\"%d\\n\", c);\r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.9730363423212193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "05cea94b4bbbbbd5ae905ae89f614965", "bug_code_uid": "2bbb2069fc46c5efdf0770c8e3ac1e48", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "c88f2891e03838b53fdcb5d4fb703364", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[200002];\n\nint main()\n{\n\tint  tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,i,dis=0,max=0,c;\n\t\tint b[200002]={0};\n\t\tscanf(\"%d\",&n);\n\t\tc=n/2;\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tb[a[i]]++;\n\t\t\tif(b[a[i]]>max)\n\t\t\t\tmax=b[a[i]];\n\t\t\tif(b[a[i]]==1)\n\t\t\t\tdis++;\n\t\t}\n\t\tif(c<=dis&&c<=max)\n\t\t\tprintf(\"%d\\n\",c);\n\t\telse if(dis<=c&&dis<=max)\n\t\t\tprintf(\"%d\\n\",dis);\n\t\telse\n\t\t\tprintf(\"%d\\n\",max);\n\t}\n}", "fixed": "#include <stdio.h>\nint a[200002];\n\nint main()\n{\n\tint  tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,i,dis=0,max=0,c;\n\t\tint b[200002]={0};\n\t\tscanf(\"%d\",&n);\n\t\tc=n/2;\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tb[a[i]]++;\n\t\t\tif(b[a[i]]>max)\n\t\t\t\tmax=b[a[i]];\n\t\t\tif(b[a[i]]==1)\n\t\t\t\tdis++;\n\t\t}\n\tif(dis>=max)\n\t\tdis--;\n\t\tif(c<=dis&&c<=max)\n\t\t\tprintf(\"%d\\n\",c);\n\t\telse if(dis<=c&&dis<=max)\n\t\t\tprintf(\"%d\\n\",dis);\n\t\telse\n\t\t\tprintf(\"%d\\n\",max);\n\t}\n}"}
{"similarity_score": 0.9975786924939467, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c6bccf25fff098c26ef97af50f5767a0", "bug_code_uid": "7a72bd93dc9e3299158970bab170f713", "src_uid": "f4982de28aca7080342eb1d0ff87734c", "apr_id": "ae36998b3128841a254df313cb6eaf55", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,h,m,i,a=0;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&h,&m);\n        a=(23-h)*60+60-m;\n        printf(\"%d\\n\",a)\n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,h,m,i,a=0;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&h,&m);\n        a=(23-h)*60+60-m;\n        printf(\"%d\\n\",a);\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.6083333333333333, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "4be9cfdfbec6d6c7ddebd15600ac970f", "bug_code_uid": "712d5e429b845f338303b181dfebbdbb", "src_uid": "5dd0d518f315d81204b25e48fea0793a", "apr_id": "3ef3ebc5698956a7ebc25260c6ba5ed7", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\n\nint k,d;\n\nint main()\n{\n\t\tscanf(\"%d %d\",&k,&d);\n\t\t\t\n\t\t\tif(d == 0 && k > 1) printf(\"No solution\");\n\t\t\t\telse {\n\t\t\t\t\t\t\tprintf(\"%d\",d);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor (int i=0;i<k-1;i++) printf(\"0\");\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\tgetchar();getchar();\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j,k,d;\n\tscanf(\"%d %d\",&k,&d);\n\tif(d==0 && k>1)\n\t\tprintf(\"No solution\\n\");\n\telse\n\t{\n\tprintf(\"%d\",d);\n\tfor(i=0;i<k-1;i++)\n\t\tprintf(\"0\");\n\t}\n//\tprintf(\"\\n\");\n//\tgetchar();getchar();\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.4487917146144994, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "9380297a10a6f4673a9c1f0104a1d4d5", "bug_code_uid": "3d9be7c3eaeff1306b7ca8b55ea0bf18", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "a3a7490f64660e4066a3bfae91fee7dc", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n\tint n, b[100000] = { 0 }, a, i, j, total, tmp, max = 0, c = 0;\n\tint t;\n\tscanf(\"%d%d\",&n,&t);\n\tfor (a = 0; a < n; ++a)\n\t{\n\t\tscanf(\"%d\",&b[a]);\n\t}\n\tfor(j = 0; j < n;++j)\n\t{\n\t\tc = 0;\n\t\ttotal = 0;\n\t\tfor (i = j; i < n; ++i)\n\t\t{\n\t\t\tif((total+b[i]) <= t)\n\t\t\t{\n\t\t\t\ttotal += b[i];\n\t\t\t\t++c;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tif(c > max)\n\t\t\tmax = c;\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n\tint n, b[100000] = { 0 }, a, i = 0, j, total, tmp, max, c = 0;\n\tint t;\n\tscanf(\"%d%d\",&n,&t);\n\tfor (a = 0; a < n; ++a)\n\t{\n\t\tscanf(\"%d\",&b[a]);\n\t}\n\tc = 0;\n\ttotal = 0;\n\twhile(i < n && (total+b[i]) <= t)\n\t{\n\t\ttotal += b[i++];\n\t}\n\tmax = i;\n\tfor (j = 0; j < n; ++j)\n\t{\n\t\ttotal -= b[j];\n\t\twhile (i < n && (total+b[i]) <= t)\n\t\t{\n\t\t\ttotal += b[i++];\n\t\t}\n\t\tif ((i - j - 1) > max)\n\t\t\tmax = i-j-1;\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}"}
{"similarity_score": 0.4849315068493151, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "17c6c80498503ecbefd46e6488f73f8d", "bug_code_uid": "35d15427cf4b7d3747b1bfb7b40993db", "src_uid": "97fa7e82566e3799e165ce6cbbf1da22", "apr_id": "97bd55c862ac53edaecc138fa03f86a7", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i, t, n, n1, n2, j, count;\n    char s1[10005], s2[10005];\n    scanf(\"%d\", &t);\n    for(i = 0; i < t; i++)\n    {\n        count = 0;\n        scanf(\"%d\", &n);\n        scanf(\" %[^\\n]\", s1);\n        scanf(\" %[^\\n]\", s2);\n        if(strcmp(s1, s2) == 0)\n            printf(\"YES\\n\");\n        else\n        {\n            for(j = 0; j < t; j++)\n            {\n                if(s1[j] != s2[j])\n                {\n                    count++;\n                    if(count == 1)\n                        n1 = j;\n                    else\n                        n2 = j;\n                }\n            }\n            if(count == 2 && s1[n1] == s1[n2] && s2[n1] == s2[n2])\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i, t, n, n1, n2, j, count;\n    char s1[10005], s2[10005];\n    scanf(\"%d\", &t);\n    for(i = 0; i < t; i++)\n    {\n        count = 0;\n        scanf(\"%d\", &n);\n        scanf(\" %[^\\n]\", s1);\n        scanf(\" %[^\\n]\", s2);\n        for(j = 0; j < n; j++)\n        {\n            if(s1[j] != s2[j])\n            {\n                count++;\n                if(count == 1)\n                    n1 = j;\n                else\n                    n2 = j;\n            }\n        }\n        if(count == 2 && s1[n1] == s1[n2] && s2[n1] == s2[n2])\n            printf(\"Yes\\n\");\n        else\n            printf(\"No\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7540983606557377, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "b2590260fa6ec5ef1bdcd83969439a13", "bug_code_uid": "deea971afef4c6a79b091f0f1befe616", "src_uid": "ca7de8440f5bbbe75e8b93654ce75cd3", "apr_id": "d01eaa219ccaae1ca86b0ca77913bf00", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/******************************************************************************\n\nWelcome to GDB Online.\nGDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,\nC#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.\nCode, Compile, Run and Debug online from anywhere in world.\n\n*******************************************************************************/\n#include <stdio.h>\n\nint main()\n{\nlong long int i,j,n;\nscanf(\"%ld\",&n);\nlong long int A[n],sum=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&A[i]);\n    sum=sum+A[i];\n}\n\n\ns=A[0];\nfor(i=0;i<n;i++){\nif(A[i]>s){s=A[i];}\n}\nlong long int k,m=s*n-sum;\nfor(i=2;i<=m; i++){\n    if(m%i==0){k=i;break;}\n}\n\nprintf(\"%lld %lld\",m/k,k);\n\n    return 0;\n}\n", "fixed": "/******************************************************************************\n\nWelcome to GDB Online.\nGDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,\nC#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.\nCode, Compile, Run and Debug online from anywhere in world.\n\n*******************************************************************************/\n#include <stdio.h>\n\n\nlong long int gcd(long long int a, long long int b) \n{ \n    if (a == 0) \n        return b; \n    return gcd(b % a, a); \n} \n\n\nint main()\n{\nlong long int s,m,l,k,i,j,n;\nscanf(\"%lli\",&n);\nlong long int A[n],B[n],sum=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lli\",&A[i]);\n    sum=sum+A[i];\n}\n\n\ns=A[0];\nfor(i=0;i<n;i++){\nif(A[i]>s){s=A[i];}\n}\nfor(i=0;i<n;i++){\n    B[i]=s-A[i];\n}\n\nl=1e9;\nfor(i=0;i<n;i++){\n    if (B[i]==0){continue;}\n    if (B[i]<l){l=B[i];}\n} \nm=s*n-sum;\nk = B[0];\n for(i=1;i<n;++i) k = gcd(k,B[i]);\nprintf(\"%lli %lli\",m/k,k);\n\n    return 0;\n}\n"}
{"similarity_score": 0.5109276347741623, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9b3a993cebe2e359638afbdcde2964b6", "bug_code_uid": "f441b5147c4c3aafbe63ec67c29816ef", "src_uid": "68e830551c1580bb5aff40d7848d968d", "apr_id": "c2270617c3cd38a2d8991a95fba98201", "difficulty": 1100, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <assert.h>\r\n#include <math.h>\r\n#include <stdbool.h>\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint n;\r\nint a[100001];\r\nint req[100002];\r\nbool have[100001];\r\nvoid solve() {\r\n    scanf(\"%d\", &n);\r\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\r\n    for (int i = 1; i <= n; i++) req[i] = 0;\r\n    for (int i = 1; i <= n; i++) have[i] = 0;\r\n    int l = 1, ans = 0;\r\n    while (l <= n) {\r\n        int r = l;\r\n        while (r <= n) {\r\n            if (req[a[r]]) a[r] = 0;\r\n            if (a[r] < a[r - 1]) {  // everything from l -> r must be 0\r\n                for (int i = l; i < r; i++) {\r\n                    if (!req[a[i]]) {\r\n                        req[a[i]] = 1;\r\n                        ans++;\r\n                    }\r\n                    a[i] = 0;\r\n                }\r\n                break;\r\n            } else {\r\n                r++;\r\n            }\r\n        }\r\n        l = r;\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n}\r\n\r\nint main() {\r\n    int t = 1;\r\n    scanf(\"%d\", &t);\r\n    while (t--) solve();\r\n}", "fixed": "#include <assert.h>\r\n#include <math.h>\r\n#include <stdbool.h>\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint n;\r\nint a[100001];\r\nbool req[100001];\r\nvoid solve() {\r\n    scanf(\"%d\", &n);\r\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\r\n    for (int i = 1; i <= n; i++) req[i] = 0;\r\n    int l = 1, ans = 0;\r\n    req[0] = 1;\r\n    while (l <= n) {\r\n        int r = l;\r\n        while (r <= n) {\r\n            if (req[a[r]]) a[r] = 0;\r\n            if (a[r] < a[r - 1]) {  // everything from l -> r must be 0\r\n                for (int i = l; i < r; i++) {\r\n                    if (!req[a[i]]) {\r\n                        req[a[i]] = 1;\r\n                        ans++;\r\n                    }\r\n                    a[i] = 0;\r\n                }\r\n                break;\r\n            } else {\r\n                r++;\r\n            }\r\n        }\r\n        l = r;\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n}\r\n\r\nint main() {\r\n    int t = 1;\r\n    scanf(\"%d\", &t);\r\n    while (t--) solve();\r\n}"}
{"similarity_score": 0.7125353440150801, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "c6cb059a4f2c107710c8dad611c4610c", "bug_code_uid": "f64a9fc6eaad4290f1641026ba93797d", "src_uid": "7c2a61de728e6767b25e58c74497bbae", "apr_id": "951b4c0cc588be96c30f21ff936da159", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int t,i,a,avg,b,array[200000];\n    int ans;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int sum=0,i=0;\n        int count=0;\n        scanf(\"%d %d\",&a,&b);\n        for(i=0;i<a;i++)\n        {\n            scanf(\"%d\",&array[i]);\n            sum+=array[i];\n        }\n        while(1)\n        {\n            if(sum%b==0)\n            {\n                printf(\"%d\\n\",b);\n                break;\n            }\n            else\n            {\n               b--;\n            }\n        }\n\n\n    }\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int t,i,a,avg,b,array[200000];\n    int ans;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int sum=0,i=0;\n        int count=0;\n        scanf(\"%d %d\",&a,&b);\n        for(i=0;i<a;i++)\n        {\n            scanf(\"%d\",&array[i]);\n            sum+=array[i];\n        }\n        if(sum>b)\n        {\n            printf(\"%d\\n\",b);\n        }\n        else if(b>sum)\n        {\n            printf(\"%d\\n\",sum);\n        }\n        else {\n             printf(\"%d\\n\",sum);\n        }\n\n\n    }\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.6153846153846154, "equal_cnt": 23, "replace_cnt": 15, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "e74cb05d750dbe59d1380b07639aa923", "bug_code_uid": "4f38790a7bf35825d7c032d52f9460c7", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "8be467d72da60c5351f2a19f585222db", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,idx,mn,csum,sum;\n    int a[100];\n    int b[100];\n    int c;\n    scanf(\"%d\",&n);\n\n    for(j=0;j<n;j++) scanf(\"%d\",&a[j]);\n\n    sum=0;\n\n    for( j=0 ; j<n ; j++ ) sum += a[j] ;\n\n    for(j=0;j<5;j++){\n        mn=a[j];\n        idx=i;\n        for(i=j+1;i<6;i++)\n            if(a[i]<mn){\n                mn=a[i];\n                idx=i;\n            }\n\n        a[idx]=a[j];\n        a[j]=mn;\n        b[j]=a[j];\n    }\n\n\n    csum=0;\n    c=0;\n    for(j=n-1;j>=0;j--){\n\n        if(csum <= (sum/2) ){\n            csum += a[j];\n            c++;\n        }\n        else break;\n    }\n\n    printf(\"%d\\n\",c);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,sum,temp;\n\n    int a[100];\n    int b[100];\n    int c=0;\n    scanf(\"%d\",&n);\n\n    for(j=0;j<n;j++)\n        scanf(\"%d\",&a[j]);\n        sum=0;\n    for(j=0;j<n;j++)\n        sum+=a[j];\n    for(i=0; i<n; i++)\n    {\n        for(j=i+1; j<n; j++)\n        {\n\n            if(a[j] < a[i])\n            {\n                temp = a[i];\n                a[i] = a[j];\n                a[j] = temp;\n            }\n        }\n    }\n\n\n    int csum=0;\n\n    for(j=n-1;j>=0;j--){\n\n        if(csum<=sum/2){\n            csum+=a[j];\n            c++;\n        }\n        else break;\n    }\n\n    printf(\"%d\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.37872070930968965, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "368f46263dbf00b09fe834bb9fc1b062", "bug_code_uid": "76d180607fe024ae34f237dec0ce5729", "src_uid": "a6f42cb2627a7d1f6e01860322c5aac5", "apr_id": "44e35fa8ec5791c2587a30d0bb793397", "difficulty": 900, "tags": ["data structures", "dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nmain()\r\n{\r\n    int n,m;\r\n    scanf(\"%d %d\",&n,&m);\r\n    int ara[n+5],i;\r\n    for(i=1;i<=n;i++)\r\n        scanf(\"%d\",&ara[i]);\r\n    while(m--)\r\n    {\r\n        int s,j;\r\n        scanf(\"%d %d\",&s,&j);\r\n        long long sum=0;\r\n        if(s<j)\r\n        {\r\n            for(i=s;i<j;i++)\r\n                {\r\n                    if(ara[i+1]<ara[i])\r\n                        sum=sum+ara[i]-ara[i+1];\r\n                }\r\n        }\r\n        else\r\n        {\r\n            for(i=s;i>j;i--)\r\n            {\r\n                if(ara[i-1]<ara[i])\r\n                    sum=sum+ara[i]-ara[i-1];\r\n            }\r\n        }\r\n        printf(\"%lld\\n\",sum);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nmain()\r\n{\r\n    int n,m;\r\n    scanf(\"%d %d\",&n,&m);\r\n    int ara[n+5],i;\r\n    for(i=1;i<=n;i++)\r\n        scanf(\"%d\",&ara[i]);\r\n    for(i=1;i<n;i++)\r\n        {\r\n            ara[i]=ara[i]-ara[i+1];\r\n\r\n        }\r\n        long long plus[n+5],minus[n+5];\r\n    for(i=1;i<n;i++)\r\n    {\r\n        if(ara[i]>=0)\r\n        {\r\n            plus[i]=ara[i];\r\n            minus[i]=0;\r\n        }\r\n         else\r\n        {\r\n            minus[i]=ara[i];\r\n            plus[i]=0;\r\n        }\r\n    }\r\n    plus[0]=0;\r\n    minus[0]=0;\r\n    for(i=2;i<n;i++)\r\n    {\r\n        plus[i]=plus[i]+plus[i-1];\r\n        minus[i]=minus[i]+minus[i-1];\r\n    }\r\n    while(m--)\r\n    {\r\n        int s,j;\r\n        scanf(\"%d %d\",&s,&j);\r\n       if(s<j)\r\n       {\r\n           printf(\"%lld\\n\",plus[j-1]-plus[s-1]);\r\n       }\r\n       else\r\n        printf(\"%lld\\n\",-minus[s-1]+minus[j-1]);\r\n    }\r\n    return 0;\r\n}\r\n"}
