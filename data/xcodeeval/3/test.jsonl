{"similarity_score": 0.9597069597069597, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "69c696f464341b05cdb1e1a84dca9197", "bug_code_uid": "260b5028504684c0a901b9c72bcdf14e", "src_uid": "586a15030f4830c68f2ea1446e80028c", "apr_id": "77b4bb9b40bea90d31df6a1cbc2032ae", "difficulty": 1000, "tags": ["two pointers", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid letterChecker();\n\nint main()\n{\n\tint totalWords = 0;\n\n\tscanf(\"%d \", &totalWords);\n\n\twhile(totalWords--) {\n\t\tletterChecker();\n\t}\n\n\treturn 0;\n}\n\nvoid letterChecker()\n{\n\tchar temp[501] = { 0 };\n\tchar result[501] = { 0 };\n\tfgets(temp, sizeof(temp), stdin);\n\tchar alpha[26] = { 0 };\n\n\tfor (int i = 0; i < strlen(temp); i++)\n\t{\n\t\tif (temp[i] != temp[i + 1])\n\t\t{\n\t\t\talpha[temp[i] - 'a'] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (alpha[i])\n\t\t\tprintf(\"%c\", i + 'a');\n\t}\n\tprintf(\"\\n\");\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nvoid letterChecker();\n\nint main()\n{\n\tint totalWords = 0;\n\n\tscanf(\"%d \", &totalWords);\n\n\twhile (totalWords--) {\n\t\tletterChecker();\n\t}\n\n\treturn 0;\n}\n\nvoid letterChecker()\n{\n\tchar temp[501] = { 0 };\n\tchar result[501] = { 0 };\n\tscanf(\"%s\", temp);\n\tchar alpha[26] = { 0 };\n\n\tfor (int i = 0; i < strlen(temp); i++)\n\t{\n\t\tif (temp[i] != temp[i + 1])\n\t\t{\n\t\t\talpha[temp[i] - 'a'] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (alpha[i])\n\t\t\tprintf(\"%c\", i + 'a');\n\t}\n\tprintf(\"\\n\");\n}"}
{"similarity_score": 0.6024667931688804, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "cfbc7575209d61dfb8c1dec3688a203e", "bug_code_uid": "086dd26e8b006e4b7b23313f2d846a2c", "src_uid": "079696e8e12e0e924be3aebddb0fb6d3", "apr_id": "b0cb25445ac32ec7a379181739b6f2dd", "difficulty": 2400, "tags": ["dp", "graphs", "bitmasks", "matrices", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\ntypedef long long unsigned llu;\ntypedef unsigned u;\nu F[64][512][512];\nu B[64][512][512];\nu I[512],J[512],*X,*Y,*Z;\nint main()\n{\n\tu n,q,i,j,k,l,o;llu r=0;\n\tfor(scanf(\"%u%u\",&n,&q);q--;)\n\t{\n\t\tscanf(\"%u%u%u\",&i,&j,&k);\n\t\tif(k==0)F[0][i][j]=1;\n\t\telse B[0][i][j]=1;\n\t}\n\tfor(l=-1;++l<63;)\n\t{\n\t\tfor(k=0;++k<=n;)\n\t\t{\n\t\t\tfor(i=0;++i<=n;)if(F[l][k][i])\n\t\t\t{\n\t\t\t\tfor(j=0;++j<=n;)if(B[l][i][j])\n\t\t\t\t{\n\t\t\t\t\tF[l+1][k][j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(k=0;++k<=n;)\n\t\t{\n\t\t\tfor(i=0;++i<=n;)if(B[l][k][i])\n\t\t\t{\n\t\t\t\tfor(j=0;++j<=n;)if(F[l][i][j])\n\t\t\t\t{\n\t\t\t\t\tB[l+1][k][j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(l=0;++l<=n;)if(F[63][1][l]){printf(\"-1\\n\");return 0;}\n\tX=I;Y=J;X[1]=1;\n\tfor(l=63,k=1;;k^=1)\n\t{\n\t\tfor(i=0;++i<=n;)Y[i]=0;\n\t\to=0;rep:;\n\t\tif(k)\n\t\t{\n\t\t\tfor(i=0;++i<=n;)if(X[i])\n\t\t\t{\n\t\t\t\tfor(j=0;++j<=n;)if(F[l][i][j])Y[j]=o=1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=0;++i<=n;)if(X[i])\n\t\t\t{\n\t\t\t\tfor(j=0;++j<=n;)if(B[l][i][j])Y[j]=o=1;\n\t\t\t}\n\t\t}\n\t\tif(!o){if(!l--)break;goto rep;}\n\t\tr+=1llu<<l;\n\t\tZ=Y;Y=X;X=Z;\n\t}\n\tprintf(\"%I64u\\n\",r);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\ntypedef long long unsigned llu;\ntypedef unsigned u;\nllu F[64][512][8];\nllu B[64][512][8];\nu I[512],J[512],*X,*Y,*Z;\nint main()\n{\n\tu n,q,i,j,k,l,o;llu r=0;\n\tfor(scanf(\"%u%u\",&n,&q);q--;)\n\t{\n\t\tscanf(\"%u%u%u\",&i,&j,&k);\n\t\tif(k==0)F[0][i][j>>6]|=1llu<<(j&63);\n\t\telse B[0][i][j>>6]|=1llu<<(j&63);\n\t}\n\tfor(l=-1;++l<63;)\n\t{\n\t\tfor(k=0;++k<=n;)\n\t\t\tfor(i=0;++i<=n;)if(F[l][k][i>>6]&(1llu<<(i&63)))\n\t\t\t\tfor(j=-1;++j<8;)F[l+1][k][j]|=B[l][i][j];\n\t\tfor(k=0;++k<=n;)\n\t\t\tfor(i=0;++i<=n;)if(B[l][k][i>>6]&(1llu<<(i&63)))\n\t\t\t\tfor(j=-1;++j<8;)B[l+1][k][j]|=F[l][i][j];\n\t}\n\tfor(l=-1;++l<8;)if(F[63][1][l]){printf(\"-1\\n\");return 0;}\n\tX=I;Y=J;X[1]=1;\n\tfor(l=63,k=1;;k^=1)\n\t{\n\t\tfor(i=0;++i<=n;)Y[i]=0;\n\t\to=0;rep:;\n\t\tif(k)\n\t\t{\n\t\t\tfor(i=0;++i<=n;)if(X[i])\n\t\t\t\tfor(j=0;++j<=n;)if(F[l][i][j>>6]&(1llu<<(j&63)))Y[j]=o=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=0;++i<=n;)if(X[i])\n\t\t\t\tfor(j=0;++j<=n;)if(B[l][i][j>>6]&(1llu<<(j&63)))Y[j]=o=1;\n\t\t}\n\t\tif(!o){if(!l--)break;goto rep;}\n\t\tr+=1llu<<l;\n\t\tZ=Y;Y=X;X=Z;\n\t}\n\tif(r>1000000000000000000llu){printf(\"-1\\n\");return 0;}//omfg! :o\n\tprintf(\"%I64u\\n\",r);\n\treturn 0;\n}"}
{"similarity_score": 0.6817743490838959, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "82d8b36036c4c6750a5edec8f11facf1", "bug_code_uid": "f00120875810b682f0bae31d8b63b648", "src_uid": "c47d999006d4738868f58168c7e2df2b", "apr_id": "ac60be192a44dbc448e1cfedd758d08d", "difficulty": 900, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nvoid insertionSort(long long int array[],  int size);\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i=0; i<t; i++){\r\n         int n, m;\r\n        scanf(\"%d %d\", &n, &m);\r\n        long long int tab[n];\r\n        for(int i=0; i<n; i++){\r\n            scanf(\"%lld\", tab+i);\r\n        }\r\n        if(n>=m){\r\n            printf(\"NO\");\r\n            \r\n        }else{\r\n        \r\n        insertionSort(tab, n);\r\n        long long int ans=0;\r\n        for(int i=0; i<n-1; i++){\r\n            ans++;\r\n            ans+=tab[i];\r\n        }\r\n        ans++;\r\n        ans+=tab[0];\r\n       if(ans<=m){\r\n           printf(\"YES\");\r\n       }else{\r\n           printf(\"NO\");\r\n       }\r\n            \r\n        \r\n\r\n    }\r\n    printf(\"\\n\");\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nvoid insertionSort(long long int array[], int size) {\r\n  for (int step = 1; step < size; step++) {\r\n   long long int key = array[step];\r\n    int j = step - 1;\r\n\r\n  \r\n    while (key > array[j] && j >= 0) {\r\n      array[j + 1] = array[j];\r\n      --j;\r\n    }\r\n    array[j + 1] = key;\r\n  }\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint cmp(const void*a, const void *b);\r\n int main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i=0; i<t; i++){\r\n        int n, m;\r\n        scanf(\"%d %d\", &n, &m);\r\n        long long int tab[n];\r\n        for(int i=0; i<n; i++){\r\n            scanf(\"%lld\", tab+i);\r\n        }\r\n        if(n>=m){\r\n            printf(\"NO\");\r\n            \r\n        }else{\r\n        \r\n        qsort(tab, n, sizeof(long long int), cmp);\r\n        long long int ans=0;\r\n        for(int i=0; i<n-1; i++){\r\n            ans++;\r\n            ans+=tab[i];\r\n        }\r\n        ans++;\r\n        ans+=tab[0];\r\n       if(ans<=m){\r\n           printf(\"YES\");\r\n       }else{\r\n           printf(\"NO\");\r\n       }\r\n            \r\n        \r\n \r\n    }\r\n    printf(\"\\n\");\r\n    }\r\n \r\n    \r\n}\r\n\r\nint cmp(const void*a, const void *b){\r\n    long long int c =*(const long long int *)a-*(const long long int *)b;\r\n    if(c>0){\r\n        return -1;\r\n    }else if(c<0){\r\n        return 1;\r\n    }else{\r\n        return 0;\r\n    }\r\n}\r\n \r\n\r\n"}
{"similarity_score": 0.8919363686231486, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "64cfcea6019e16cf661e23f559b67bd5", "bug_code_uid": "39cb7059cbeb22786bd1344f5ea6bdd3", "src_uid": "e57345f5757654749b411727ebb99c80", "apr_id": "39f8e743c6623e773fe2e35e3df738e4", "difficulty": 900, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int x,int y,int z);\nint a[50];\nvoid sort(int n);\nint main()\n{\n    int t,i,j,k,n,sum=0;\n\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n        { sum=0;\n          scanf(\"%d\",&n);\n          for(j=0; j<n ;j++){\n            scanf(\"%d\",&a[j]); sum+=a[j];\n         }\n        // printf(\"%d\",sum);\n         if(sum==0) { printf(\"NO\\n\");}\n         else {printf(\"YES\\n\");\n\n\n\n          sort(n);\n    }\n\n\n\n\n\n}\n}\nint min(int x,int y,int z)\n{\n    if(x<=y &&x<=z) return x;\n    else if(y<=z && y<=z)return y;\n    else return z;\n}\nvoid sort(int n){\n   // printf(\"%d\",n);\nint p,q,temp;\n\nfor(p=0;p<n-1;p++)\n{\n   for(q=0;q<n-1-p;q++)\n   {\n       if(a[q+1]>a[q])\n       {\n           temp=a[q+1];\n           a[q+1]=a[q];\n           a[q]=temp;\n\n\n       }\n   }\n\n}\nfor(p=0;p<n;p++) printf(\"%d \",a[p]);\n printf(\"\\n\");\n}\n", "fixed": "#include<stdio.h>\nint min(int x,int y,int z);\nint a[50];\nvoid sort(int n);\nint main()\n{\n    int t,i,j,k,n,sum=0;\n\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n        { sum=0;\n          scanf(\"%d\",&n);\n          for(j=0; j<n ;j++){\n            scanf(\"%d\",&a[j]); sum+=a[j];\n         }\n        // printf(\"%d\",sum);\n         if(sum==0) { printf(\"NO\\n\");}\n         else {printf(\"YES\\n\");\n\n\n\n          sort(n);\n    }\n\n\n\n\n\n}\n}\nint min(int x,int y,int z)\n{\n    if(x<=y &&x<=z) return x;\n    else if(y<=z && y<=z)return y;\n    else return z;\n}\nvoid sort(int n){\n   // printf(\"%d\",n);\nint p,q,temp,s=0,flag=0;\n\nfor(p=0;p<n-1;p++)\n{\n   for(q=0;q<n-1-p;q++)\n   {\n       if(a[q+1]>a[q])\n       {\n           temp=a[q+1];\n           a[q+1]=a[q];\n           a[q]=temp;\n\n\n       }\n   }\n\n}\n\n       for(q=0;q<n;q++)\n       {   s=s+a[q];\n          if(s==0)\n          {\n            flag=1;\n\n          }\n\n       }\n\n\n\nif(flag==0)for(p=0;p<n;p++) printf(\"%d \",a[p]);\nif(flag==1) for(p=n-1;p>=0;p--) printf(\"%d \",a[p]);\n printf(\"\\n\");\n}\n"}
{"similarity_score": 0.9976525821596244, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dd0b26660a5030720e53346e17e9028d", "bug_code_uid": "82a43e3360f8f9e129d237dca99c213e", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "475d09597aefe91084c9e9a93a0fe442", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i , j , k = 0 ,member,play,arra[100],sum;\n    scanf(\"%d %d\",&member,&play);\n\n    for(i = 0;i <member;i++)\n    {\n        scanf(\"%d\",&arra[i]);\n    }\n    for(i = 0;i <member;i++)\n    {\n        if(5-arra[i] >=play)\n        {\n            k++;\n        }\n    }\n    if(k %3 >= 0)\n    {\n        sum = k / 3;\n    }\n    else\n    {\n        sum = 0;\n    }\n\n    printf(\"%d\",sum);\n    return 0;\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i , j , k = 0 ,member,play,arra[10000],sum;\n    scanf(\"%d %d\",&member,&play);\n\n    for(i = 0;i <member;i++)\n    {\n        scanf(\"%d\",&arra[i]);\n    }\n    for(i = 0;i <member;i++)\n    {\n        if(5-arra[i] >=play)\n        {\n            k++;\n        }\n    }\n    if(k %3 >= 0)\n    {\n        sum = k / 3;\n    }\n    else\n    {\n        sum = 0;\n    }\n\n    printf(\"%d\",sum);\n    return 0;\n\n\n\n}\n"}
{"similarity_score": 0.2254071661237785, "equal_cnt": 18, "replace_cnt": 16, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "1adca02b561f2e5d282463ef48b7fc47", "bug_code_uid": "c176557f094e6a9515a8c6ba3a49abeb", "src_uid": "96e2ba997eff50ffb805b6be62c56222", "apr_id": "6b79fcb1ebd5a2e278cc43d7eed122f0", "difficulty": 1400, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <ctype.h>\n\nchar str1[100010], str2[200010];\n\nint cnts[256] = {0};\n\nint main()\n{\n\tint i,Y,W;\n\n\tscanf(\"%s\",str1);\n\tscanf(\"%s\",str2);\n\n\tfor(i = 0; str2[i] != '\\0'; ++i)\n\t\t++cnts[str2[i]];\n\n\tY = W = 0;\n\n\tfor(i = 0; str1[i] != '\\0'; ++i)\n\t{\n\t\tif(cnts[str1[i]])\n\t\t{\n\t\t\t++Y;\n\t\t\t--cnts[str1[i]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(islower(str1[i])) str1[i] = toupper(str1[i]);\n\t\t\telse str1[i] = tolower(str1[i]);\n\n\t\t\tif(cnts[str1[i]])\n\t\t\t{\n\t\t\t\t++W;\n\t\t\t\t--cnts[str1[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"%d %d\\n\", Y,W);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <ctype.h>\n#define MIN(x,y) ((x) < (y) ? (x) : (y))\n\nchar str1[200005] , str2[200005];\nint cnts1[256], cnts2[256];\n\nint main()\n{\n  int i , j ;\n  scanf(\"%s\", str1);\n  scanf(\"%s\", str2);\n\n  for(i = 0 ; str1[i] ; i++ )\n  \t\t++cnts1[str1[i]];\n\n  for(i = 0 ; str2[i] ; i++ )\n  \t\t++cnts2[str2[i]];\n\n  int ans = 0 , Y = 0 , W = 0;\n\n  char c;\n  for(i = 'A' ; i <= 'Z' ; ++i)\n  {  \n  \tc = tolower((char)i);\n    if(cnts1[i] <= cnts2[i])\n    {\n      \tY += cnts1[i];\n      \tcnts2[i] -= cnts1[i];\n      \tcnts1[i] = 0;\n    }\n    else\n    {\n      \tY += cnts2[i];\n      \tcnts1[i] -= cnts2[i];\n      \tcnts2[i]  =0;\n    }\n    if(cnts1[c] <= cnts2[c])\n    {\n      \tY += cnts1[c];\n      \tcnts2[c] -= cnts1[c];\n      \tcnts1[c] = 0;\n    }\n    else\n    {\n      \tY += cnts2[c];\n      \tcnts1[c] -= cnts2[c];\n      \tcnts2[c] = 0;\n    }\n\n    if(cnts1[i] != 0 )\n       W += MIN(cnts1[i], cnts2[c]);\n   \n    if(cnts1[c] != 0)\n       W += MIN(cnts1[c], cnts2[i]);\n    \n  }\n  printf(\"%d %d\\n\", Y,W);\n  return 0;\n}"}
{"similarity_score": 0.2136279926335175, "equal_cnt": 24, "replace_cnt": 14, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "76ca1a1d2946d1f6719fe961a075d640", "bug_code_uid": "183242c6f97495272e64b1f0b20b5b0a", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "45c59a0ebe1f1e51bc11f14bd14eda31", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n   char a[100005],fir,sec;\n   long int i=1,c=0,k=1;\n   scanf(\"%s\",a);\n   if(strlen(a)<4)\n   {\n    printf(\"NO\");\n    k=0;\n    }\n   else\n   \n   while(i<strlen(a)/2)\n   {\n   \n   for( ; i<strlen(a)/2 ; i++)\n    {\n      if( (a[i-1]=='A' && a[i]=='B') || (a[i-1]=='B' && a[i]=='A') )\n       {\n         fir=a[i-1];\n         sec=a[i];\n         c=1;\n         break;       \n       }    \n    \n    }\n    \n    if(c==0)\n    {\n    k=0;\n     printf(\"NO\");\n     break;\n    }\n    else\n    {\n     if( a[strlen(a)-1-i]==sec  && a[strlen(a)-i]==fir )\n       {\n       k=0;\n        printf(\"YES\");\n        break;\n       } \n    \n   \n\n    }\n    \n    if(k)\n     printf(\"NO\");\n    \n   }\n   \n   \n\n    return 0;\n\n\n}", "fixed": "#include <stdio.h>\n\nint main ()\n{\n    char c[100000];\n\n   scanf(\"%s\",&c);\n    \n        int i, flag1=0, found=0,flag2=0;\n        for (i=0; c[i]!='\\0'; i++)\n        {\n            if (c[i] == 'A' && c[i+1] == 'B' && flag1 == 0)\n            {\n                flag1 = 1;\n            }\n            else if (c[i] == 'B' && c[i+1] == 'A' && flag2 == 0)\n            {\n                flag2 = 1;\n            }\n\n            if (flag1 == 1)\n            {\n                if(c[i+2] == 'B' && c[i+3] == 'A')\n                {\n                    found = 1;\n                }\n            }\n            if (flag2 == 1)\n            {\n                if(c[i+2] == 'A' && c[i+3] == 'B')\n                {\n                    found = 1;\n                }\n            }\n        }\n\n        if(found == 1)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n            printf(\"NO\\n\");\n  \n\n    return 0;\n}"}
{"similarity_score": 0.9489603024574669, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cf6492e565edbb7f482815cc295482e0", "bug_code_uid": "d6517d956186b6d7642fdf3d13f83340", "src_uid": "891fabbb6ee8a4969b6f413120f672a8", "apr_id": "7316f6b64fd4cfd05f5c195aa21e37be", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n\nint main()\n{\n    int k,x,ans,test;\n    scanf(\"%d\",&test);\n    for(int i=0; i<test; i++)\n    {\n        scanf(\"%d %d\",&k,&x);\n        ans = 9*(k-1)+x;\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n\nint main()\n{\n    long long int k,x,ans,test;\n    scanf(\"%I64d\",&test);\n    for(int i=0; i<test; i++)\n    {\n        scanf(\"%I64d %I64d\",&k,&x);\n        ans = 9*(k-1)+x;\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5639476334340383, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "ef5b1afc0833661078fc2c7b19214d26", "bug_code_uid": "ac1daae0cd6abc07e4c9eff9cdd9734f", "src_uid": "3ec1b7027f487181dbdfb12f295f11ae", "apr_id": "ea9bcb853775311d2fb65ec01d92af11", "difficulty": 900, "tags": ["brute force", "dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n\r\n{\r\n    int t;\r\n\r\n    scanf(\"%d\",&t);\r\n\r\n    for(int i=0;i<t;i++){\r\n\r\n        long long n;\r\n\r\n        scanf(\"%lld\",&n);\r\n\r\n\r\n\r\n        if(n==2020 || n==2021){\r\n            printf(\"YES\\n\");\r\n        }\r\n            else{\r\n\r\n        while(1){\r\n            n=n/2;\r\n\r\n            if(n==2020 || n==2021){\r\n            printf(\"YES\\n\");\r\n              // printf(\"%lld\",n);\r\n\r\n                break;\r\n            }\r\n\r\n            else if(n<2020){\r\n                printf(\"NO\\n\");\r\n                break;\r\n            }\r\n\r\n\r\n        }\r\n            }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n\r\n{\r\n    int t;\r\n\r\n    scanf(\"%d\",&t);\r\n\r\n    for(int i=0;i<t;i++){\r\n\r\n        long long n;\r\n\r\n        scanf(\"%lld\",&n);\r\n\r\n        long long x=n/2020;\r\n        long long y=n%2020;\r\n\r\n        if(x>=y){\r\n            printf(\"YES\\n\");\r\n            }\r\n\r\n            else{\r\n\r\n                printf(\"NO\\n\");\r\n            }\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.5257352941176471, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ae8d54ddd0476e83b05090f559a03e16", "bug_code_uid": "930b340fadb7f5607503e1fb7f087a93", "src_uid": "7eae40835f6e9580b985d636d5730e2d", "apr_id": "2b384a82a85c58b38658a7750fbfc0f4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint q,i,j;\n\tlong l[1000],r[1000],k[1000];\n\tdo{scanf(\"%d\",&q);}while(q<1||q>1000);\n\tfor(i=1;i<=q;i++)\n\t{\n\t\tdo{scanf(\"%ld%ld\",&l[i],&r[i]);}while(l[i]<1||l[i]>1000000000||r[i]<1||r[i]>1000000000||r[i]<l[i]);\n\t\tif(l[i]==r[i]) {k[i]=l[i]*pow(-1,l[i]);}\n\t\telse\n\t\t{\n\t\t\tk[i]=0;\n\t\t\tfor(j=l[i];j<=r[i];j++)\n\t\t\t{\n\t\t\t\tk[i]+=j*pow(-1,j);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=q;i++)\n\t{\n\t\tprintf(\"%d\\n\",k[i]);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint q;\n\tlong l[1000],r[1000],k[1000],i,j;\n\tdo{scanf(\"%d\",&q);}while(q<1||q>1000);\n\tfor(i=1;i<=q;i++)\n\t{\n\t\tdo{scanf(\"%ld%ld\",&l[i],&r[i]);}while(l[i]<1||l[i]>1000000000||r[i]<1||r[i]>1000000000||r[i]<l[i]);\n\t}\n\tfor(i=1;i<=q;i++)\n\t{\n\t\tif(l[i]==r[i])\n\t\t{\n\t\t\tif(l[i]%2==0) {k[i]=l[i];}\n\t\t\tif(l[i]%2==1) {k[i]=(-1)*l[i];}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlong h,p;\n\t\t\th=r[i]-l[i]+1; p=h/2;\n\t\t\tif(h%2==0)\n\t\t\t{\n\t\t\t\tif(l[i]%2==0) {k[i]=p*(-1);}\n\t\t\t\tif(l[i]%2==1) {k[i]=p;}\n\t\t\t}\n\t\t\tif(h%2==1)\n\t\t\t{\n\t\t\t\tif(l[i]%2==0) {k[i]=p*(-1)+r[i];}\n\t\t\t\tif(l[i]%2==1) {k[i]=p-r[i];}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",k[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5855670103092784, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "b3d19c3277b413d451a7cd4f26c4598b", "bug_code_uid": "e7aae043555ec0e60dc02ddc1b580735", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "37e4f00cd572d71c30461583fe94dd80", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n,x,y,a,b,p;\nscanf(\"%d\",&n);\nfor(int i=0;i<n;i++){\nscanf(\"%d %d %d %d\",&x,&y,&a,&b);\nfor(int j=1;j<=b;j++){\nif((x+(j*a))==(y-(j*b))){\np=j;\nbreak;\n}else{\np=-1;\n}\n}\nprintf(\"%d\\n\",p);\n}\nreturn 0;\n}", "fixed": "    #include<stdio.h>\n    int main(){\n    int n,x,y,a,b,p,q;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++){\n    scanf(\"%d %d %d %d\",&x,&y,&a,&b);\n    p=y-x;\n    q=a+b;\n\tif(p%q==0){\n    printf(\"%d\\n\",p/q);\n    }else{\n\tprintf(\"-1\\n\");\n\t}\n\t}\n    return 0;\n    }"}
{"similarity_score": 0.9838187702265372, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b3e2454334c5e0c5a93ec03e2448e34c", "bug_code_uid": "12634a4ca1716876faf8274c157e0c6b", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "953ed28deda613d8aab68bff46ad00f3", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, a,b;\n\tscanf(\"%d\",&n);\n\tif(n%2==0){\n\ta=4;\n\tb=n-a;\n\t}\n\telse{\n\t\ta=6;\n\t\tb=n-6;\n\t}\n\tprintf(\"%d %d\\n\",a,b);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, a,b;\n\tscanf(\"%d\",&n);\n\tif(n%2==0){\n\ta=4;\n\tb=n-a;\n\t}\n\telse{\n\t\ta=9;\n\t\tb=n-a; \n\t}\n\tprintf(\"%d %d\\n\",a,b);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6960257787325457, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "8ed0effe0a332c455eed1920b0e95cb7", "bug_code_uid": "9b789343435d647889a49dac5df4a38f", "src_uid": "1378b4c9ba8029d310f07a1027a8c7a6", "apr_id": "afde1f8f9a3b117011afb5e7db21fff9", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    int n, k, ans = 0;\n    int a[101];\n    scanf(\"%d %d\", &n, &k);\n    for(int i = 1; i <= n; ++i) {\n        scanf(\"%d\", &a[i]);\n    }\n    for(int j = 0; j < n; ++j) {\n        int idx = k + j;\n        if(idx > 100) {\n            idx -= 100;\n        }\n        if(a[idx]) {\n            printf(\"%d\\n\", idx);\n            break;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    int n, k, ans = 0;\n    int a[1001];\n    scanf(\"%d %d\", &n, &k);\n    for(int i = 1; i <= n; ++i) {\n        scanf(\"%d\", &a[i]);\n    }\n    for(int j = 0; j < n; ++j) {\n        int idx = k + j;\n        if(idx > n) {\n            idx -= n;\n        }\n        if(a[idx]) {\n            printf(\"%d\\n\", idx);\n            break;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9945454545454545, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0a17f681203411cb67a780b6298f00b9", "bug_code_uid": "620efc06cb7d185623c37a3c1aacde6a", "src_uid": "ce2b12f1d7c0388c39fee52f5410b94b", "apr_id": "38a66d0277f92db51a13558142aa7b1b", "difficulty": 1500, "tags": ["binary search", "brute force", "dp", "greedy", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#define int long long\r\nvoid print(int x)\r\n{\r\n    if(x>9) print(x/10);\r\n    putchar(x%10+48);\r\n}\r\nsigned main(){\r\n\tint w;\r\n\tscanf(\"%d\",&w);\r\n\tlong long*c=malloc(1000000);\r\n\tfor(int t1=0;t1<w;t1++){\r\n\tint l;\r\n\tint t=0;\r\n\tlong long a,b;\r\n\tlong long x=0,y=0;\r\n\t\r\n\tscanf(\"%d %lld %lld\",&l,&a,&b);\r\n\tfor(int l1=0;l1<l;l1++)scanf(\"%lld\",c+l1);\r\n\tfor(int l1=0;l1<l;l1++){\r\n\t\tif(l1!=0){\r\n\t\t\tif(a<b*(l-l1)){y=y+a*(c[l1-1]-t);t=c[l1-1];}\r\n\t\t\t\r\n\t\t}\r\n\t\ty=y+b*(c[l1]-t);\r\n\t}\r\n\tprintf(\"%lld\\n\",y);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#define int long long\r\nvoid print(int x)\r\n{\r\n    if(x>9) print(x/10);\r\n    putchar(x%10+48);\r\n}\r\nsigned main(){\r\n\tint w;\r\n\tscanf(\"%lld\",&w);\r\n\tlong long*c=malloc(2000000);\r\n\tfor(int t1=0;t1<w;t1++){\r\n\tint l;\r\n\tint t=0;\r\n\tlong long a,b;\r\n\tlong long x=0,y=0;\r\n\t\r\n\tscanf(\"%lld %lld %lld\",&l,&a,&b);\r\n\tfor(int l1=0;l1<l;l1++)scanf(\"%lld\",c+l1);\r\n\tfor(int l1=0;l1<l;l1++){\r\n\t\tif(l1!=0){\r\n\t\t\tif(a<b*(l-l1)){y=y+a*(c[l1-1]-t);t=c[l1-1];}\r\n\t\t\t\r\n\t\t}\r\n\t\ty=y+b*(c[l1]-t);\r\n\t}\r\n\tprintf(\"%lld\\n\",y);\r\n\t}\r\n}"}
{"similarity_score": 0.8814343551185656, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7ee5c10f738e676914cb2887c25f18fa", "bug_code_uid": "e978965dba397ebbf8731d3bac46cd7a", "src_uid": "f89bd4ec97ec7e02a7f67feaeb4d3958", "apr_id": "b3d96fa0c245014e8c301389f6c47061", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nvoid swap(int *a,int *b)\r\n{\r\n    int temp;\r\n    temp=*a;\r\n    *a=*b;\r\n    *b=temp;\r\n    return;\r\n}\r\nvoid find(int n,int *a)\r\n{\r\n    int i;\r\n    if(n==2)\r\n    {\r\n        printf(\"%d %d\\n\",*(a+1),*a);\r\n        return;\r\n    }\r\n    i=0;\r\n    while(i<n-3)\r\n    {\r\n        swap((a+i),(a+i+1));\r\n        i=i+2;\r\n    }\r\n    swap((a+n-1),(a+n-2));\r\n    swap((a+n-2),(a+n-3));\r\n    for(i=0;i<n;i++)\r\n        printf(\"%d \",*(a+i));\r\n    printf(\"\\n\");\r\n    return;\r\n}\r\nint main()\r\n{\r\n    int n,*a,t;\r\n    scanf(\"%d\",&t);\r\n    while(t>0)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        a=(int *)malloc(n*sizeof(int));\r\n        for(int i=0;i<n;i++)\r\n            *(a+i)=i+1;\r\n        find(n,a);\r\n        t--;\r\n        free(a);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nvoid swap(int *a,int *b)\r\n{\r\n    int temp;\r\n    temp=*a;\r\n    *a=*b;\r\n    *b=temp;\r\n    return;\r\n}\r\nvoid find(int n,int *a)\r\n{\r\n    int i;\r\n    if(n==2)\r\n    {\r\n        printf(\"%d %d\\n\",*(a+1),*a);\r\n        return;\r\n    }\r\n    else if(n%2==0)\r\n    {\r\n        i=0;\r\n        while(i<n)\r\n        {\r\n            swap(a+i,a+i+1);\r\n            i=i+2;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        i=0;\r\n        while(i<n-3)\r\n        {\r\n            swap((a+i),(a+i+1));\r\n            i=i+2;\r\n        }\r\n        swap((a+n-1),(a+n-2));\r\n        swap((a+n-2),(a+n-3));\r\n    }\r\n    for(i=0;i<n;i++)\r\n        printf(\"%d \",*(a+i));\r\n    printf(\"\\n\");\r\n    return;\r\n}\r\nint main()\r\n{\r\n    int n,*a,t;\r\n    scanf(\"%d\",&t);\r\n    while(t>0)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        a=(int *)malloc(n*sizeof(int));\r\n        for(int i=0;i<n;i++)\r\n            *(a+i)=i+1;\r\n        find(n,a);\r\n        t--;\r\n        free(a);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9798657718120806, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d6590ddb065673386a94f7db9962d33d", "bug_code_uid": "49a92c72d6581b5b63fd5c6907dd31a2", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "c344451785507937a5486abcaecf73bd", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,a,b,p=1;\n    scanf(\"%d\",&n);\n\n    char s[n+5][n+5];\n    for(i=0;i<n;i++){\n        scanf(\"%s\",s[i]);\n        if(s[i][i]!=s[0][0] || s[i][n-1-i]!=s[0][0]){\n            printf(\"NO\\n\");\n            return 0;\n        }\n        for(j=0;j<n;j++){\n            if(j!=i && j!=(n-i-1)){\n                if(s[i][j]!=s[0][1]){\n                    printf(\"NO\\n\");\n                    return 0;\n                }\n            }\n        }\n\n    }\n\n    printf(\"YES\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,a,b,p=1;\n    scanf(\"%d\",&n);\n\n    char s[n+5][n+5];\n    for(i=0;i<n;i++){\n        scanf(\"%s\",s[i]);\n        if(s[i][i]!=s[0][0] || s[i][n-1-i]!=s[0][0]){\n            printf(\"NO\\n\");\n            return 0;\n        }\n        for(j=0;j<n;j++){\n            if(j!=i && j!=(n-i-1)){\n                if(s[i][j]!=s[0][1] || s[i][j]==s[0][0]){\n                    printf(\"NO\\n\");\n                    return 0;\n                }\n            }\n        }\n\n    }\n    printf(\"YES\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9865030674846625, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "96a716da74fbf957118fb72ff6527c87", "bug_code_uid": "8ce6ff4af47ba3c8f135f457944ae7f9", "src_uid": "ddab0e510f9aceb2fbf75e26d27df166", "apr_id": "c488000b30988a6ddcf4a92c9623654f", "difficulty": 1900, "tags": ["dp", "divide and conquer", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n/**Encontrar cu\u00e1nto me cuesta pintar como minimo todas las cercas usandd DV*/\nint fence(int A[], int ini, int fin){\n    if (ini > fin)\n        return 0;\n    int min = A[ini];\n    int pos = ini;\n    //buscamos el minimo elemento\n    for(int i = ini+1; i <= fin; i++){\n        if (A[i] < min){\n            min = A[i];\n            pos = i;\n        }\n    }\n    for(int i = ini; i <= fin; i++)\n        A[i] = A[i] - min;\n    \n    int val = min + fence(A, ini, pos-1) + fence(A, pos+1, fin);\n    \n    if (val < (fin-ini+1))\n        return val;\n    else\n        return fin-ini+1;\n}\nint main()\n{\n    int n;\n    int A[10];\n    int i;    \n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++){\n        scanf(\"%d\",&A[i]);\t\t\n    }\n    int val = fence(A, 0, n-1);\n    printf(\"%d\\n\", val);\n\n    return 0;\n}\n", "fixed": "#define MAX 5000\n#include <stdio.h>\n/**Encontrar cu\u00e1nto me cuesta pintar como minimo todas las cercas usandd DV*/\nint fence(int A[], int ini, int fin){\n    if (ini > fin)\n        return 0;\n    int min = A[ini];\n    int pos = ini;\n    //buscamos el minimo elemento\n    for(int i = ini+1; i <= fin; i++){\n        if (A[i] < min){\n            min = A[i];\n            pos = i;\n        }\n    }\n    for(int i = ini; i <= fin; i++)\n        A[i] = A[i] - min;\n    \n    int val = min + fence(A, ini, pos-1) + fence(A, pos+1, fin);\n    \n    if (val < (fin-ini+1))\n        return val;\n    else\n        return fin-ini+1;\n}\nint main()\n{\n    int n;\n    int A[MAX];\n    int i;    \n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++){\n        scanf(\"%d\",&A[i]);\t\t\n    }\n    int val = fence(A, 0, n-1);\n    printf(\"%d\\n\", val);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9675270607826811, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c4b331c26f1ff4d3b7dac269d04c2674", "bug_code_uid": "d612cefe29231569a33b9db1c23140b3", "src_uid": "102667eaa3aee012fef70f4192464674", "apr_id": "2e0b4793ff2d99e774a55452f1ad2a50", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[50];\nint b[50];\n\nvoid func(int n, int m) {\n  int maxs = 0, i, j, ans = 0;\n  for (i = 0; i < m; i ++) {\n    for (j = 0; j < n; j ++) {\n      if (b[i] % a[j] == 0) {\n    if (b[i] / a[j] > maxs) {\n      ans = 1;\n      maxs = b[i] / a[j];\n    }\n    else if (b[i] / a[j] == maxs) {\n      ans ++;\n    }\n      }\n    }\n  }\n  printf(\"%d\\n\", ans);\n}\n\nint main() {\n  int n, m, i;\n  while (scanf(\"%d%d\", &n, &m) == 2) {\n    for (i = 0; i < n; i ++) {\n      scanf(\"%d\", &a[i]);\n    }\n    for (i = 0; i < m; i ++) {\n      scanf(\"%d\", &b[i]);\n    }\n    func(n, m);\n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\n\nint a[50];\nint b[50];\n\nvoid func(int n, int m) {\n  int maxs = 0, i, j, ans = 0;\n  for (i = 0; i < m; i ++) {\n    for (j = 0; j < n; j ++) {\n      if (b[i] % a[j] == 0) {\n    if (b[i] / a[j] > maxs) {\n      ans = 1;\n      maxs = b[i] / a[j];\n    }\n    else if (b[i] / a[j] == maxs) {\n      ans ++;\n    }\n      }\n    }\n  }\n  printf(\"%d\\n\", ans);\n}\n\nint main() {\n  int n, m, i;\n  while (scanf(\"%d\", &n) == 1) {\n    for (i = 0; i < n; i ++) {\n      scanf(\"%d\", &a[i]);\n    }\n    scanf(\"%d\", &m);\n    for (i = 0; i < m; i ++) {\n      scanf(\"%d\", &b[i]);\n    }\n    func(n, m);\n  }\n  return 0;\n}"}
{"similarity_score": 0.9742813918305597, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4f97ec7303a2507b74fbc798e3b25b77", "bug_code_uid": "62d060a9ad997ec7d57421d689d5f813", "src_uid": "ea62b6f68d25fb17aba8932af8377db0", "apr_id": "d8938ed42e4772ce80e08e7c76a208ca", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    while(scanf(\"%d\",&n)!=EOF){\n    int a[10],i,cnt=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        if(i>1 && i<n && a[i]==0 && a[i-1]==1 && a[i+1]==1){\n            cnt++;\n            a[i+1]=0;\n        }\n    }\n    printf(\"%d\\n\",cnt);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    while(scanf(\"%d\",&n)!=EOF){\n    int a[n],i,cnt=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        if(a[i]==0 && a[i-1]==1 && a[i+1]==1){\n            cnt++;\n            a[i+1]=0;\n        }\n    }\n    printf(\"%d\\n\",cnt);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9508928571428571, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2633878a9fde98a413a04ae7d90c5981", "bug_code_uid": "da3016c459081b7e500e0a245845c2a1", "src_uid": "17cf2d6f59773925b228188b5a47b710", "apr_id": "8a76a4634bb793d2061566faf927d61f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main (){\n    int t;\n    scanf(\"%d\",&t);\n    while (t--)\n    {\n        int a,b,c,d,k;\n        int ans =-1;\n        int ans1=0,ans2=0;\n        if (a%c != 0)\n        ans1= (a/c) +1;\n        else\n        ans1= a/c;\n        if (b%d !=0)\n        ans2 = (b/d)+1;\n        else\n        ans2 = b/d;\n        if (ans1 + ans2 > k )\n        printf(\"%d\\n\",ans);\n        else\n        printf(\"%d %d\\n\",ans1,ans2);\n    }\n}", "fixed": "#include<stdio.h>\nint main (){\n    int t;\n    scanf(\"%d\",&t);\n    while (t--)\n    {\n        int a,b,c,d,k;\n        scanf(\"%d%d%d%d%d\",&a,&b,&c,&d,&k);\n        int ans =-1;\n        int ans1=0,ans2=0;\n        if (a%c != 0)\n        ans1= (a/c) +1;\n        else\n        ans1= a/c;\n        if (b%d !=0)\n        ans2 = (b/d)+1;\n        else\n        ans2 = b/d;\n        if (ans1 + ans2 > k )\n        printf(\"%d\\n\",ans);\n        else\n        printf(\"%d %d\\n\",ans1,ans2);\n    }\n}"}
{"similarity_score": 0.988391376451078, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d2490899ee3c7c0530df3b8e98dabdbc", "bug_code_uid": "f3c74dfd2e3406252a91014a28f8cba2", "src_uid": "c1608f6f71cac56690e31aa130c1990e", "apr_id": "899fbb3d995fbcc96b59b59ef5669f60", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 300001\n#include<stdlib.h>\nint compare(const void *a,const void *b){\n    return *(int *)a-*(int *)b;\n}\nvoid sort(int *a,int n){\n    qsort(a,n,sizeof(int),compare);\n}\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int a[N];\n    int i;\n    long long sum=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    sort(a,n);\n    for(i=0;i<n;i++){\n        printf(\" %d\",a[i]);\n    }\n    printf(\"\\n\");\n    int m;\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        int q;\n        scanf(\"%d\",&q);\n        printf(\"%lld\\n\",sum-a[n-q]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define N 300001\n#include<stdlib.h>\nint compare(const void *a,const void *b){\n    return *(int *)a-*(int *)b;\n}\nvoid sort(int *a,int n){\n    qsort(a,n,sizeof(int),compare);\n}\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int a[N];\n    int i;\n    long long sum=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    sort(a,n);\n    /*\n    for(i=0;i<n;i++){\n        printf(\" %d\",a[i]);\n    }\n    printf(\"\\n\");\n    */\n    int m;\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        int q;\n        scanf(\"%d\",&q);\n        printf(\"%lld\\n\",sum-a[n-q]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9900452488687783, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a037a0bd0ccbf1ed1ceebc1cbf576bd3", "bug_code_uid": "fa68ec90ac50fe5f76acba8bfa634a4b", "src_uid": "fe2131c9228a2ec4365fdc3d0faa413a", "apr_id": "a877a516b636786779892232ffe9a7a3", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n];\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t    int a[n];\r\n\t    int k=0,j=0;\r\n\t    for(int i=0;i<n;i++)\r\n\t    {\r\n\t    \tif(a[i]%2==1)\r\n\t    \t{\r\n\t    \t\ta[k]=arr[i];\r\n\t    \t\tk++;\r\n\t    \t}\r\n\t    \telse\r\n\t    \t{\r\n\t    \t\ta[n-1-j]=arr[i];\r\n\t    \t\tj++;\r\n\t    \t}\r\n\t    \t\t\r\n\t    \t\r\n\t    \t\r\n\t    }\r\n\t\t\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t\tprintf(\"%d \",a[i]);\r\n\t\t\r\n\t\tprintf(\"\\n\");\r\n\t\tt--;\r\n\t}\r\n\t// your code goes here\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n];\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t    int a[n];\r\n\t    int k=0,j=0;\r\n\t    for(int i=0;i<n;i++)\r\n\t    {\r\n\t    \tif(arr[i]%2==1)\r\n\t    \t{\r\n\t    \t\ta[k]=arr[i];\r\n\t    \t\tk++;\r\n\t    \t\t\r\n\t    \t}\r\n\t    \telse\r\n\t    \t{\r\n\t    \t\ta[n-1-j]=arr[i];\r\n\t    \t\tj++;\r\n\t    \t}\r\n\t    \t\t\r\n\t    \t\r\n\t    \t\r\n\t    }\r\n\t\t\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t\tprintf(\"%d \",a[i]);\r\n\t\t\r\n\t\tprintf(\"\\n\");\r\n\t\tt--;\r\n\t}\r\n\t// your code goes here\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.8240343347639485, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "923326dad92493763f9b17574b86dbc0", "bug_code_uid": "aeaa4145780db668d06969e13ae6ce43", "src_uid": "684273a4c6711295996e520739744b0f", "apr_id": "2ec7dcdd9ef802da0460ff5b5516c48a", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, m, k, i, c, end = 0, ans = 0, t = 0;\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for(i = 0; i < m; i++){\n        scanf(\"%d\", &c);\n        if(c - t > end){\n            t = i;\n            end = (c - t - 1) - (c - t - 1) % k + k;\n            ans++;\n        }\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int m, i, ans = 0, t = 0;\n    long long n, k, c, end = 0;\n    scanf(\"%I64d%d%I64d\", &n, &m, &k);\n    for(i = 0; i < m; i++){\n        scanf(\"%I64d\", &c);\n        if(c - t > end){\n            t = i;\n            end = (c - t - 1) - (c - t - 1) % k + k;\n            ans++;\n        }\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n"}
{"similarity_score": 0.2857142857142857, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ebaf9085ce43463962451ce024b4805b", "bug_code_uid": "6d8b24ca4f7550be5e93b32aff398aa8", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "8d054a9fb8beae801e8626a011455e61", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    printf(\"fuck\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n%2==1)\n        printf(\"-1\");\n    else{\n        for(i=0;i<n;i++){\n            if(i%2==1)\n                printf(\"%d \",i);\n            else\n                printf(\"%d \",i+2);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.35731414868105515, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f0552542a50693b652d0f42371b084a4", "bug_code_uid": "bdf702b696eaacd663164176160772de", "src_uid": "a0a6cdda2ce201767bf5418f445a44eb", "apr_id": "278b91be9b0fec3e25fee804978f2fa2", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100\n#define X 1000000000\n\nint main() {\n\tstatic int xx[N], kk[X + 1];\n\tint n, i, i_, max, coins;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &xx[i]);\n\t\tkk[xx[i]]++;\n\t}\n\ti_ = -1;\n\tmax = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (max < kk[xx[i]]) {\n\t\t\tmax = kk[xx[i]];\n\t\t\ti_ = i;\n\t\t}\n\tcoins = 0;\n\tfor (i = 0; i < n; i++)\n\t\tcoins += (abs(xx[i_] - xx[i]) % 2);\n\tprintf(\"%d\\n\", coins);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100\n\nint main() {\n\tstatic int xx[N];\n\tint n, i, j, coins;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &xx[i]);\n\tcoins = 0;\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = i + 1; j < n; j++)\n\t\t\tif (xx[i] != -1 && xx[j] != -1 && abs(xx[i] - xx[j]) % 2) {\n\t\t\t\tcoins++;\n\t\t\t\txx[i] = xx[j] = -1;\n\t\t\t}\n\tprintf(\"%d\\n\", coins);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9241011984021305, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ec12dc8257215708a77edb4e8277662c", "bug_code_uid": "253f9ed67177e21205b60298a3f2b71b", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "12a7416a9c27dc7b217c877bd8b29a69", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid selectionSort(int a[],int n){\n\tfor(int i=0;i<n-1;i++){\n\t\tint min=i;\n\t\tfor(int j=i+1;j<n;j++){\n\t\t\tif(a[j]<a[min]){\n\t\t\t\tmin=j;\n\t\t\t}\n\t\t}\n\t\tint tmp=a[i];\n\t\ta[i]=a[min];\n\t\ta[min]=tmp;\n\t}\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tselectionSort(a,n);\n\tprintf(\"%d\",a[n/2]);\n}\n", "fixed": "#include<stdio.h>\n\nvoid selectionSort(int a[],int n){\n\tfor(int i=0;i<n-1;i++){\n\t\tint min=i;\n\t\tfor(int j=i+1;j<n;j++){\n\t\t\tif(a[j]<a[min]){\n\t\t\t\tmin=j;\n\t\t\t}\n\t\t}\n\t\tint tmp=a[i];\n\t\ta[i]=a[min];\n\t\ta[min]=tmp;\n\t}\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tselectionSort(a,n);\n\tif(n%2!=0)\n\tprintf(\"%d\",a[n/2]);\n\telse\n\tprintf(\"%d\",a[n/2-1]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.991701244813278, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5e670bd5af4b76b84fbb2ab0835421fd", "bug_code_uid": "bfd23972cde3d2e92ac6a131b7682536", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "223c5d40ca472086b4329a31bc2d9cf2", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n;\n    int i,x;\n    scanf(\"%d\",&n);\n    for(i = 0;i<n;i++){\n        scnaf(\"%d\",&x);\n        x%=2;\n        if(x)break;\n    }\n    if(x)printf(\"First\\n\");\n    else printf(\"Second\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n;\n    int i,x;\n    scanf(\"%d\",&n);\n    for(i = 0;i<n;i++){\n        scanf(\"%d\",&x);\n        x%=2;\n        if(x)break;\n    }\n    if(x)printf(\"First\\n\");\n    else printf(\"Second\\n\");\n    return 0;\n}"}
{"similarity_score": 0.8562334217506631, "equal_cnt": 14, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "419504d696b647453b5f330e14e35c71", "bug_code_uid": "f02491a074147a25ce4a82b4b7e9161b", "src_uid": "bdce4761496c88a3de00aa863ba7308d", "apr_id": "ae3e9ed6df1caf7058f5dcd90b848a20", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(void)\n{\n    int n, h, a, b, q;\n    scanf(\"%d%d%d%d%d\", &n, &h, &a, &b, &q);\n    int i;\n    for(i = 0; i < q; i++)\n    {\n        int t1, f1, t2, f2;\n        scanf(\"%d%d%d%d\", &t1, &f1, &t2, &f2);\n        int timer = 0; \n        timer += abs(t2-t1);\n        if(t1 != t2)\n        {\n            int min1, min2;\n            int otherBuilding;\n            min1 = abs(f1-a);\n            min2 = abs(f1-b);\n            int path1, path2;\n            path1 = min1 + abs(f2-a);\n            path2 = min2 + abs(f2-b);\n            if(path1 > path2)\n            {\n                timer += path2;\n            }\n            else\n            {\n                timer += path1;\n            }\n        }\n        else if(t1 == t2)\n        {\n            timer += abs(f2-f1);\n        }\n        printf(\"%d\\n\", timer);\n    }\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(void)\n{\n    int n, h, a, b, q;\n    scanf(\"%d%d%d%d%d\", &n, &h, &a, &b, &q);\n    int i;\n    for(i = 0; i < q; i++)\n    {\n        int t1, f1, t2, f2;\n        scanf(\"%d%d%d%d\", &t1, &f1, &t2, &f2);\n        int timer = 0; \n        timer += abs(t2-t1);\n        if(t1 != t2)\n        {\n            int min1, min2;\n            int otherBuilding;\n            if(f1 >= a && f1 <=b)\n            {\n                timer += abs(f2-f1);\n            }\n            else\n            { \n                min1 = abs(f1-a);\n                min2 = abs(f1-b);\n                int path1, path2;\n                path1 = min1 + abs(f2-a);\n                path2 = min2 + abs(f2-b);\n                if(path1 > path2)\n                {\n                    timer += path2;\n                }\n                else\n                {\n                    timer += path1;\n                }\n            }\n        }\n        else if(t1 == t2)\n        {\n            timer += abs(f2-f1);\n        }\n        printf(\"%d\\n\", timer);\n    }\n}"}
{"similarity_score": 0.6270150083379655, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "5f6e323b5d96cbd0683d1e89695562c3", "bug_code_uid": "1d85bb73c5bbabe7caed9f52f4b5a165", "src_uid": "5c33d1f970bcc2ffaea61d5407b877b2", "apr_id": "bafc57bc82e1d9d5c57a1be9463c5b03", "difficulty": 1100, "tags": ["sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nint n, len[111], num, max;\nchar *inp[111];\nint substr(char *a, char *b)\n{\n    int aln=strlen(a), bln=strlen(b), i, j, k;\n    for (i=0; i<=bln-aln; i++)\n    {\n        for (j=0, k=i; j<aln; j++, k++) if (a[j]!=b[k]) break;\n        if (j==aln) return 1;\n    }\n    return 0;\n}\nint comp (const void *a, const void *b)\n{\n    return (*(int *)a - *(int *)b);\n}\nint main()\n{\n    scanf(\"%d%*c\", &n);\n    for (int i=1; i<=n; i++) inp[i]=(char *) malloc(sizeof(char)*111);\n    for (int i=1; i<=n; i++)\n    {\n        scanf(\"%s%*c\", inp[i]);\n        int ln=strlen(inp[i]);\n        len[i]=ln;\n        if (ln>max) {max=ln; num=i;}\n    }\n    for (int i=1; i<=n; i++) if (!substr(inp[i], inp[num])) {printf(\"NO\"); return 0;}\n    printf(\"YES\\n\");\n    qsort(len, n+1, sizeof(int), comp);\n    for (int i=1; i<=n; i++) for (int j=1; j<=n; j++) if (strlen(inp[j])==len[i]) {printf(\"%s\\n\", inp[j]); break;}\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint n;\nchar *inp[111];\nint substr(char *a, char *b)\n{\n    int aln=strlen(a), bln=strlen(b), i, j, k;\n    for (i=0; i<=bln-aln; i++)\n    {\n        for (j=0, k=i; j<aln; j++, k++) if (a[j]!=b[k]) break;\n        if (j==aln) return 1;\n    }\n    return 0;\n}\nint comp(const void *a, const void *b)\n{\n    const char *aa=*(const char **)a, *bb=*(const char **)b;\n    int aln=strlen(aa), bln=strlen(bb);\n    return (aln<bln?-1:(aln>bln?1:0));\n}\nint main()\n{\n    scanf(\"%d%*c\", &n);\n    for (int i=0; i<n; i++) inp[i]=(char *) malloc(sizeof(char)*111);\n    for (int i=0; i<n; i++) scanf(\"%s%*c\", inp[i]);\n    qsort(inp, n, sizeof(char *), comp);\n    for (int i=1; i<n; i++) if (!substr(inp[i-1], inp[i])) {printf(\"NO\"); return 0;}\n    printf(\"YES\\n\");\n    for (int i=0; i<n; i++) printf(\"%s\\n\", inp[i]);\n}\n"}
{"similarity_score": 0.9883959044368601, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 6, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8917d631215cd192210a98b1dc6f18ff", "bug_code_uid": "fa133e6ff233e5b08a4cd182d803a5ef", "src_uid": "c0ad2a6d14b0c9e09af2221d88a34d52", "apr_id": "6bae7498e0e378bde86feddb1a04c943", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\n#include <stdbool.h>\r\n#include <string.h>\r\nint main(){\r\n\r\n    int n,t,i,j;\r\n    int r,b,d;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++){\r\n\r\n        scanf(\"%lf %lf %lf\",&r,&b,&d);\r\n        if(r>b && r>=1 && b>=1){\r\n                if((r/b)>(d+1)){\r\n                    printf(\"NO\\n\");\r\n                }else{printf(\"YES\\n\");}\r\n        }\r\n        else if(r==b && r>=1 && b>=1){\r\n\r\n            if((b/r)>(d+1)){\r\n                    printf(\"NO\\n\");\r\n                }else{printf(\"YES\\n\");}\r\n        }\r\n\r\n\r\n        else if (r <b && r>=1 && b>=1){\r\n            if((b/r)>d+1){\r\n                    printf(\"NO\\n\");\r\n                }else{printf(\"YES\\n\");}\r\n        }\r\n        else{printf(\"error\\n\");}\r\n\r\n    }\r\nreturn 0;}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdbool.h>\r\n#include <string.h>\r\nint main(){\r\n\r\n    int n,t,i,j;\r\n    double r,b,d;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++){\r\n\r\n        scanf(\"%lf %lf %lf\",&r,&b,&d);\r\n        if(r>b && r>=1 && b>=1){\r\n                if((r/b)>d+1){\r\n                    printf(\"NO\\n\");\r\n                }else{printf(\"YES\\n\");}\r\n        }\r\n        else if(r==b && r>=1 && b>=1){\r\n\r\n            if((b/r)>d+1){\r\n                    printf(\"NO\\n\");\r\n                }else{printf(\"YES\\n\");}\r\n        }\r\n\r\n\r\n        else if (r <b && r>=1 && b>=1){\r\n            if((b/r)>d+1){\r\n                    printf(\"NO\\n\");\r\n                }else{printf(\"YES\\n\");}\r\n        }\r\n        else{printf(\"error\\n\");}\r\n\r\n    }\r\nreturn 0;}"}
{"similarity_score": 0.9496021220159151, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f11398ecd86f119ef9332d6dc0e37e25", "bug_code_uid": "82c22e451ba6f96a2f7484af9c7e9b94", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "75a5cfaa96245f43d63774a28408cff6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong long int x[1000];\nint i,p;\nscanf(\"%d\",&p);\nfor(i=0;i<p;i++)\n{\nscanf(\"%lld\",&x[i]);\nif(x[i]%2==0)\nx[i]=x[i]-1;\nprintf(\"%lld \",x[i]);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nlong long int x[1000];\nint i,p;\nscanf(\"%d\",&p);\nfor(i=0;i<p;i++)\n{\nscanf(\"%lld\",&x[i]);\nif(x[i]%2==0)\nx[i]=x[i]-1;\n}\nfor(i=0;i<p;i++)\nprintf(\"%lld \",x[i]);\nreturn 0;\n}"}
{"similarity_score": 0.4274353876739563, "equal_cnt": 22, "replace_cnt": 9, "delete_cnt": 9, "insert_cnt": 4, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "64a98e4adea90e68895a0a5cbd26916f", "bug_code_uid": "061ebdd91e7948cd8837d3b70287eee8", "src_uid": "8a1ceac1440f7cb406f12d9fc2ca0e20", "apr_id": "f3683b957d5cd20f601f1c11f2b665c7", "difficulty": 800, "tags": ["binary search", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for (int i=0;i<n;i++)\r\n    {\r\n        int n1,n2;\r\n        scanf(\"%d %d\",&n1,&n2);\r\n        if(n1==0||n2==0)\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else if(n1==1||n2==1)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else{\r\n            int k1=n1/2;\r\n            int k2=n2/2;\r\n            if(k1>k2)\r\n            {\r\n                printf(\"%d\",k2);\r\n            }\r\n            else\r\n            {\r\n                printf(\"%d\",k1);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\nint t,i,a,b,s;\r\n    scanf(\"%d\",&t);\r\n \r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d%d\",&a,&b);\r\n        s=a+b;\r\n        if(a==0 || b==0) printf(\"0\\n\");\r\n        else{\r\n            if((s/b)>=4)\r\n            printf(\"%d\\n\",b);\r\n        else if((s/a)>=4){\r\n            printf(\"%d\\n\",a);\r\n        }\r\n        else{\r\n            printf(\"%d\\n\",s/4);\r\n        }\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.49269311064718163, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "fb42e35ce0e6a422b991a19a2e4fb496", "bug_code_uid": "28171f7294cb4f21b7f8adeecb05279c", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "562d5244b8b6f4d4ef71cef1f1f9a7f9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,p[4],i,n=0;\n    for(i=0;i<4;i++)\n        scanf(\"%d\",&p[i]);\n            if(p[i]>c)\n                c=p[i];\n    for(i=0;i<4,i++)\n        if(p[i]<c)\n            printf(\"%d\",c-p[i]);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[4],s=0,n;\n    for(n=0;n<4;n++){\n        scanf(\"%d\",&a[n]);\n    if(a[n]>s)\n        s=a[n];\n    }\n\n    for(n=0;n<4;n++){\n        if(a[n]!=s)\n            printf(\"%d \",s-a[n]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9956140350877193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "362ace63d4dea4b2b75cc1d61cc5cb32", "bug_code_uid": "1f563ac720fc56b61effd484aab020cc", "src_uid": "f5bcde6e3008405f61cead4e3f44806e", "apr_id": "4f2e3c4139624e90ac0783971e279d66", "difficulty": 1200, "tags": ["data structures", "two pointers", "number theory", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX 100005\nmain(void)\n{\n\tlong long int t,n,x,a[MAX],i,pos,prev,sum;\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\tsum=0;\n\t\tpos=-1;\n\t\tscanf(\"%lld %lld\",&n,&x);\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\t\tsum+=a[i];\n\t\t\tif(a[i]%x){\n\t\t\t\tif(pos==-1)prev=i;\n\t\t\t\tpos=i;\n\t\t\t}\n\t\t}\n\t\tif(sum%x)printf(\"%lld\\n\",n);\n\t\telse {\n\t\t\tif(pos){\n\t\t\t\tif(prev<n-pos)printf(\"%lld\\n\",n-prev-1);\n\t\t\t\telse printf(\"%lld\\n\",pos);\n\t\t\t}\n\t\t\telse printf(\"-1\\n\");\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\n#define MAX 100005\nmain(void)\n{\n\tlong long int t,n,x,a[MAX],i,pos,prev,sum;\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\tsum=0;\n\t\tpos=-1;\n\t\tscanf(\"%lld %lld\",&n,&x);\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\t\tsum+=a[i];\n\t\t\tif(a[i]%x){\n\t\t\t\tif(pos==-1)prev=i;\n\t\t\t\tpos=i;\n\t\t\t}\n\t\t}\n\t\tif(sum%x)printf(\"%lld\\n\",n);\n\t\telse {\n\t\t\tif(pos!=-1){\n\t\t\t\tif(prev<n-pos)printf(\"%lld\\n\",n-prev-1);\n\t\t\t\telse printf(\"%lld\\n\",pos);\n\t\t\t}\n\t\t\telse printf(\"-1\\n\");\n\t\t}\n\t}\n}"}
{"similarity_score": 0.23376623376623376, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "7c6e45c5c726a8f04148a9c35ca77d74", "bug_code_uid": "49efa069ad54f0caa251a58520e5ea61", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "d1dd856a01dd64551920ac0254cbf889", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c,j,t;\n    scanf(\"%d\",&n);\n    int a[n],m;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(i!=0) a[i]+=a[i-1];\n    }\n\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&c);\n        for(j=0;c>a[j];j++){\n        }\n        printf(\"%d\\n\",j+1);\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint b_search(int n,int ar[],int src){\n    int f,l,mid;\n    f=0;\n    l=n-1;\n    mid=(f+l)/2;\n\n    while(f<=l){\n        if(ar[mid]>src&&ar[mid-1]<src) {\n                printf(\"%d\\n\",mid+1);\n                return 0;\n        }\n        else if (ar[mid]<src)\n            f=mid+1;\n        else if(ar[mid]==src) {\n            printf(\"%d\\n\",mid+1);\n        return 0;\n      }\n        else\n            l=mid-1;\n\n        mid=(f+l)/2;\n   }\n   printf(\"1\\n\");\n   return 0;\n}\nint main()\n{\n    int n,i,c,j,t;\n    scanf(\"%d\",&n);\n    int a[n],m;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(i!=0) a[i]+=a[i-1];\n    }\n\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&c);\n        b_search(n,a,c);\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.9621621621621622, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4a1a991ba66b8d0ea17c782220ca24e4", "bug_code_uid": "483f294113c586510335a97fe49f2088", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "92e0db627dcee36773e8a490511d2c00", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(void){\r\n    long long x,i;\r\n    scanf(\"%d\",&i);\r\n    for(;i>0;i--){\r\n        scanf(\"%d\",&x);\r\n        printf(\"%d %d\",-x+1,x);\r\n    }\r\n    return 0;    \r\n}", "fixed": "#include<stdio.h>\r\nint main(void){\r\n    long long x,i;\r\n    scanf(\"%lld\",&i);\r\n    for(;i>0;i--){\r\n        scanf(\"%lld\",&x);\r\n        printf(\"%lld %lld\\n\",-x+1,x);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.47776628748707345, "equal_cnt": 22, "replace_cnt": 18, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "198135ee4d828bb528faa4979c433be1", "bug_code_uid": "87835958a01551d40bf13502a6520fb7", "src_uid": "c2a506d58a80a0fb6a16785605b075ca", "apr_id": "a985b58d2538e003909b39732bac64d2", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n#define long long int ll\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tll a,b,c,d;\r\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\r\n\t\tif((double)(a)/b == (double)(c)/d)\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif( a == 0 || c == 0)\r\n\t\t{\r\n\t\t\tprintf(\"1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tdouble x,y;\r\n\t\tx = (double)(d)/c * (double)(a)/b;\r\n\t\ty = 1/x;\r\n\t\tif(x != (ll)x && y != (ll)y)\r\n\t\t{\r\n\t\t\tprintf(\"2\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tprintf(\"1\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\n#define ll long long int\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        ll a,b,c,d;\r\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\r\n        if( (a*d) == (c*b))\r\n        {\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n        if(c == 0 || a == 0 || (a*d)%(c*b)== 0 || (c*b)%(a*d) == 0)\r\n        {\r\n            printf(\"1\\n\");\r\n            continue;\r\n        }\r\n        printf(\"2\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9623655913978495, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "445209f4840402126b880a858ad542d2", "bug_code_uid": "e37b2b1a89c3ebe5a2b829d3a64937d0", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "4e83d1fca49a0848f783e0a129fa7b0a", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<string.h>\nint main()\n{\nint n,x,i,j=0,s;\n\nscanf(\"%d%d\",&n,&x);\ns=x;\nint a[n];\nchar ch[n][1];\nfor(i=0;i<n;i++)\n{\n    //scanf(\"%s %d\",&ch[i],&a[i]);\n    scanf(\"%s %d\",&ch[i],&a[i]);\n    if(ch[i][0]=='+') s=s+a[i];\n    else if(ch[i][0]=='-')\n    {\n        if(s>=a[i]) s=s-a[i];\n        else j++;\n    }\n}\nprintf(\"%d %d\",s,j);\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n//#include<string.h>\nint main()\n{\nlong long int n,x,i,j=0,s;\n\nscanf(\"%lld%lld\",&n,&x);\ns=x;\nint a[n];\nchar ch[n][1];\nfor(i=0;i<n;i++)\n{\n    //scanf(\"%s %d\",&ch[i],&a[i]);\n    scanf(\"%s %d\",&ch[i],&a[i]);\n    if(ch[i][0]=='+') s=s+a[i];\n    else if(ch[i][0]=='-')\n    {\n        if(s>=a[i]) s=s-a[i];\n        else j++;\n    }\n}\nprintf(\"%lld %lld\",s,j);\nreturn 0;\n}\n\n"}
{"similarity_score": 0.9010989010989011, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "35126e06e92a8c645df834cf3106d121", "bug_code_uid": "43d55088d91655e4c890a60657b30621", "src_uid": "5babbb7c5f6b494992ffa921c8e19294", "apr_id": "4c1384c004614a8cebbe1eeaed688a9e", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,d,i;\n    scanf(\"%d\\t%d\",&n,&d);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {scanf(\"%d\",&arr[i]);}\n    for(i=0;i<n-1;i++)\n    {\n        if((arr[i+1]-arr[i])>=2*d)\n        {\n            s+=arr[i+1]-arr[i]-(2*d)+1;\n        }\n    }\n    printf(\"%d\\n\",s+2);\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,d,i,s=0;\n    scanf(\"%d\\t%d\",&n,&d);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {scanf(\"%d\",&arr[i]);}\n    for(i=0;i<n-1;i++)\n    {\n        if((arr[i+1]-arr[i])>2*d)\n        {\n            s+=2;\n        }\n        if((arr[i+1]-arr[i])==2*d)\n        {\n            s+=1;\n        }\n    }\n    printf(\"%d\\n\",s+2);\n}\n"}
{"similarity_score": 0.9976717112922002, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f1834c51092cb72758c3eb6e52b60fa0", "bug_code_uid": "44fdf4ff8a6267852cfe802594ea0cf2", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "fb64a6e833b876e7be077fcd14bede29", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid init(unsigned long *arr, unsigned long size)\n{\n\tunsigned long i;\n\tfor(i = 0; i < size; i++)\n\t\tarr[i] = 0;\n}\n\nint main()\n{\n\tunsigned long n_numbers;\n\tscanf(\"%lu\", &n_numbers);\n\n\tunsigned long numbers[n_numbers], cost_asc[n_numbers], cost_desc[n_numbers];\n\tinit(cost_asc, n_numbers);\n\tinit(cost_desc, n_numbers);\n\n\tunsigned long i;\n\tfor(i = 0; i < n_numbers; i++)\n\t{\n\t\tscanf(\"%lu\", &numbers[i]);\n\t\tcost_asc[numbers[i] - 1] = i + 1;\n\t\tcost_desc[numbers[i] - 1] = n_numbers - i;\n\t}\n\n\tunsigned long n_queries, query;\n\tunsigned long long n_comparisons_asc = 0, n_comparisons_desc = 0;\n\tscanf(\"%lu\", &n_queries);\n\n\tfor(i = 0; i < n_queries; i++)\n\t{\n\t\tscanf(\"%lu\", query);\n\t\tn_comparisons_asc += cost_asc[query - 1];\n\t\tn_comparisons_desc += cost_desc[query - 1];\t\t\n\t}\n\n\tprintf(\"%llu %llu\", n_comparisons_asc, n_comparisons_desc);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nvoid init(unsigned long *arr, unsigned long size)\n{\n\tunsigned long i;\n\tfor(i = 0; i < size; i++)\n\t\tarr[i] = 0;\n}\n\nint main()\n{\n\tunsigned long n_numbers;\n\tscanf(\"%lu\", &n_numbers);\n\n\tunsigned long numbers[n_numbers], cost_asc[n_numbers], cost_desc[n_numbers];\n\tinit(cost_asc, n_numbers);\n\tinit(cost_desc, n_numbers);\n\n\tunsigned long i;\n\tfor(i = 0; i < n_numbers; i++)\n\t{\n\t\tscanf(\"%lu\", &numbers[i]);\n\t\tcost_asc[numbers[i] - 1] = i + 1;\n\t\tcost_desc[numbers[i] - 1] = n_numbers - i;\n\t}\n\n\tunsigned long n_queries, query;\n\tunsigned long long n_comparisons_asc = 0, n_comparisons_desc = 0;\n\tscanf(\"%lu\", &n_queries);\n\n\tfor(i = 0; i < n_queries; i++)\n\t{\n\t\tscanf(\"%lu\", &query);\n\t\tn_comparisons_asc += cost_asc[query - 1];\n\t\tn_comparisons_desc += cost_desc[query - 1];\n\t}\n\n\tprintf(\"%llu %llu\", n_comparisons_asc, n_comparisons_desc);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9253956292388847, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "6411f8b9ca98ad540fdf68207bddaf2f", "bug_code_uid": "0a0022367b44cca3a546c1596c1d855d", "src_uid": "6c65ca365352380052b0c9d693e6d161", "apr_id": "55443b0883d08d39dff875a1e179c8e2", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n\n    int n;\n\n    scanf(\"%d\", &n);\n\n    int arr[1010];\n    int i;\n\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &arr[i]);\n    }\n\n    int j, flag, ans = 0;\n\n    for(i=0; i<n; i++){\n        for(j=0; j<n; j++){\n            if(i/2 == 0){\n                arr[i]++;\n                if(arr[i] == n) arr[i] = 0;\n            }\n            else{\n                arr[i]--;\n                if(arr[i] == -1) arr[i] = n-1;\n            }\n        }\n        flag = 1;\n        for(j=0; j<n; j++){\n            if(arr[i]!=j) flag = 0;\n        }\n        if(flag) ans = 1;\n    }\n\n    if(ans) printf(\"Yes\\n\");\n    else printf(\"No\\n\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void){\n\n    int n;\n\n    scanf(\"%d\", &n);\n\n    int arr[1010];\n    int i;\n\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &arr[i]);\n    }\n\n    int j, flag, ans = 0;\n\n    for(i=0; i<n; i++){\n        for(j=0; j<n; j++){\n            if(j%2 == 0){\n                arr[j]++;\n                if(arr[j] == n) arr[j] = 0;\n            }\n            else{\n                arr[j]--;\n                if(arr[j] == -1) arr[j] = n-1;\n            }\n        }\n\n        flag = 1;\n        for(j=0; j<n; j++){\n            if(arr[j]!=j) flag = 0;\n        }\n        if(flag) ans = 1;\n    }\n\n    if(ans) printf(\"Yes\\n\");\n    else printf(\"No\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.852760736196319, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3423fd694ccf1087585dd4baa4e26191", "bug_code_uid": "a1415c0250c5c65bdf39d648ec26bc76", "src_uid": "5088d1d358508ea3684902c8e32443a3", "apr_id": "eb7f7e7b26617eb61c7f609f61890eaf", "difficulty": 1200, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n\tlong int n;\n\tscanf(\"%ld\",&n);\n\tlong int a[n],b[n],i,max=1;\n    for(i=0;i<n;i++){\n    scanf(\"%ld\",&a[i]);\n    b[i]=1;\n    }\n    for(i=1;i<=n-1;i++){\n        if(a[i]/2<=a[i-1])\n        b[i]=b[i]+b[i-1];\n        if(b[i]>max)\n        max=b[i];\n    }\n    printf(\"%ld\",max);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n\tlong int n;\n\tscanf(\"%ld\",&n);\n\tlong int a[n],b[n],i,max=1,temp;\n    for(i=0;i<n;i++){\n    scanf(\"%ld\",&a[i]);\n    b[i]=1;\n    }\n    for(i=1;i<=n-1;i++){\n        temp=a[i]-a[i-1]*2;\n        if(temp<=0)\n        b[i]=b[i]+b[i-1];\n        if(b[i]>max)\n        max=b[i];\n    }\n    printf(\"%ld\",max);\n\treturn 0;\n}"}
{"similarity_score": 0.9936102236421726, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "fbac6977ae8a0eeebb666071d992db5a", "bug_code_uid": "2a688486c3c942055626e8cbd044053e", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "1f41dffb02f09a946561c5f75afebc0d", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nvoid wtlw(char s[100])\n{\n\tint k=0,i=0;\n\tk=strlen(s);\n\tif(k>10)\n\tprintf(\"%c%d%c\\n\",s[0],k-2,s[k-1]);\n\telse\n\t\tprintf(\"%s\\n\",s);\n}\nint  main()\n{\n\tchar s[100][100];\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",s[i]);\n\n\t}\n\tfor(i=0;i<n;i++)\n\twtlw(s[i]);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nvoid wtlw(char s[101])\n{\n\tint k=0,i=0;\n\tk=strlen(s);\n\tif(k>10)\n\tprintf(\"%c%d%c\\n\",s[0],k-2,s[k-1]);\n\telse\n\t\tprintf(\"%s\\n\",s);\n}\nint  main()\n{\n\tchar s[100][101];\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",s[i]);\n\n\t}\n\tfor(i=0;i<n;i++)\n\twtlw(s[i]);\n\treturn 0;\n}"}
{"similarity_score": 0.989778534923339, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "19e02e7c597eabf1c0d42a6cc29d3286", "bug_code_uid": "68f751c9454bff02e46fd284219d94fa", "src_uid": "7bbb4b9f5eccfe13741445c815a4b1ca", "apr_id": "be854e5c9f697523d18d532fa28f4eb9", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<unistd.h>\nvoid max_hayble_in_pile1(int*a,int n,int d)\n{\n\tint ans = a[0];\n\tfor(int i=1;i<n;i++){\n\t\tif(a[i]==0)\n\t\tcontinue;\n\t\tif(a[i]*(i)>d)\n\t\t{\n\t\t\tans+=(d/i);\n\t\t\tbreak;\n\t\t}\n\t\telse if(a[i]*i==d)\n\t\t{\n\t\t\tans+=a[i];\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans+=a[i];\n\t\t\td-=a[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tint n,d,*a=NULL;\n\t\tscanf(\"%d%d\",&n,&d);\n\t\ta = (int*)calloc(n,sizeof(int));\n\t\tfor(int j=0;j<n;j++)\n\t\tscanf(\"%d\",a+j);\n\t\tmax_hayble_in_pile1(a,n,d);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<unistd.h>\nvoid max_hayble_in_pile1(int*a,int n,int d)\n{\n\tint ans = a[0];\n\tfor(int i=1;i<n;i++){\n\t\tif(a[i]==0)\n\t\tcontinue;\n\t\tif(a[i]*(i)>d)\n\t\t{\n\t\t\tans+=(d/i);\n\t\t\tbreak;\n\t\t}\n\t\telse if(a[i]*i==d)\n\t\t{\n\t\t\tans+=a[i];\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans+=a[i];\n\t\t\td-=(a[i]*i);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tint n,d,*a=NULL;\n\t\tscanf(\"%d%d\",&n,&d);\n\t\ta = (int*)calloc(n,sizeof(int));\n\t\tfor(int j=0;j<n;j++)\n\t\tscanf(\"%d\",a+j);\n\t\tmax_hayble_in_pile1(a,n,d);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9619047619047619, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7f4b46fc10d6584fcbbc82578f5560d7", "bug_code_uid": "79bc5b750e3e461c38ea90f949f6f3fd", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "75b5e82baf7b9c80e739975a3bd62bd7", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint t;\n long long  n;\nlong long  m;\n  int main(){\n\t\tscanf(\"%d\",&t);\n\t\tfor(int i=0;i<t;i++){\n\t\t\tscanf (\"%lld%lld\",&n,&m);\n\t\t\t\n\t\t\tif(n==1||n==0)\n\t\t\tprintf(\"0\");\n\t\t\telse if(n==2)\n\t\t\tprintf(\"%lld\",m);\n\t\t\telse {\n            m=2*m;\n            printf(\"%lld\",m);\n\t\t}  \n\t\t\t\n            \n\t\t    \n\t\t}\n}\n\n", "fixed": "#include<stdio.h>\nint t;\n long long  n;\nlong long  m;\n  int main(){\n\t\tscanf(\"%d\",&t);\n\t\tfor(int i=0;i<t;i++){\n\t\t\tscanf (\"%lld%lld\",&n,&m);\n\t\t\t\n\t\t\tif(n==1||n==0)\n\t\t\tprintf(\"0\\n\");\n\t\t\telse if(n==2)\n\t\t\tprintf(\"%lld\\n\",m);\n\t\t\telse {\n            m=2*m;\n            printf(\"%lld\\n\",m);\n\t\t  }  \n\t\t\t\n            \n\t\t    \n\t\t}\n}\n\n"}
{"similarity_score": 0.9201101928374655, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b20619a1253ab90d0ad2bb0d7199442f", "bug_code_uid": "3b390cb3163c071f1677ffe52f5ba2b4", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "aad01cdc326fb3f621914ab47f25e583", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint solve(){\r\n    int a, b;\r\n    scanf(\"%d %d\", &a, &b);\r\n\r\n\r\n    if (b == 1){\r\n        printf(\"NO\\n\");\r\n        return 0;\r\n    }\r\n\r\n    printf(\"YES\\n\");\r\n    printf(\"%d %d %d \\n\", a, a*b, a*(b+1));\r\n}\r\n\r\nint main(){\r\n    int t; scanf(\"%d\", &t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\ntypedef long long ll;\r\n\r\n\r\nint solve(){\r\n    ll a, b;\r\n    scanf(\"%lld %lld\", &a, &b);\r\n\r\n\r\n    if (b == 1){\r\n        printf(\"NO\\n\");\r\n        return 0;\r\n    }\r\n\r\n    printf(\"YES\\n\");\r\n    printf(\"%lld %lld %lld \\n\", a, a*b, a*(b+1));\r\n}\r\n\r\nint main(){\r\n    int t; scanf(\"%d\", &t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.998730964467005, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e886c66ddeea8a68f286d624470b5964", "bug_code_uid": "2760c4b5350a403be99915fade582a15", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "c6e9ff5893ece50a1a306b9786ca2d3e", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n\n/*int cmp(const void *a, const void *b)\n{\n     return(*(int *)a-*(int *)b);\n}*/\n\n/*int cmp1(const void *a ,const void * b)\n{\n return (*(double *)a>*(double * )b?1:-1);\n}*/\n/*int gcd(int a,int b)\n{\n    return b ? gcd(b,a%b) : a;\n}*/\n\nint main()\n{\n    int a[100008] = {0},b[100008] = {0},c[100008] = {0},i,n,m,k;\n    scanf(\"%d %d\",&n,&m);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i = n - 1; i >= 0; i--)\n    {\n        if(b[a[i]] == 0)\n        {\n            c[i] = c[i+1] + 1;\n        }\n        else\n        {\n            c[i] = c[i+1];\n        }\n        b[a[i]] = 1;\n    }\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",&k);\n        printf(\"%d\\n\",c[k-1]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n\n/*int cmp(const void *a, const void *b)\n{\n     return(*(int *)a-*(int *)b);\n}*/\n\n/*int cmp1(const void *a ,const void * b)\n{\n return (*(double *)a>*(double * )b?1:-1);\n}*/\n/*int gcd(int a,int b)\n{\n    return b ? gcd(b,a%b) : a;\n}*/\n\nint main()\n{\n    int a[100008] = {0},b[100008] = {0},c[100008] = {0},i,n,m,k;\n    scanf(\"%d %d\",&n,&m);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i = n - 1; i >= 0; i--)\n    {\n        if(b[a[i]] == 0)\n        {\n            c[i] = c[i+1] + 1;\n        }\n        else\n        {\n            c[i] = c[i+1];\n        }\n        b[a[i]] = 1;\n    }\n    for(i = 0; i < m; i++)\n    {\n        scanf(\"%d\",&k);\n        printf(\"%d\\n\",c[k-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5590778097982709, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cd1d80401e543e442cf7c34885b9e513", "bug_code_uid": "772220e81e0e1949edf1151487ce2b03", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "0d674829008a6c6a6d35bfa8342b5e17", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char** argv) {\n\n\t\n\tint n,s=0,a,b,c;\n\tscanf(\"%d\",&n);\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tif(a==true && b==true &&c==true)\n\t\t\ts++;\n\t\telse if(a==true && b==true &&c==false)\n\t\t\ts++;\n\t\telse if(a==false && b==true &&c==true)\n\t\t\t s++;\n\t\t else if(a==true && b==false &&c==true)\n\t\t\t s++;\n\t\t else if(a==false && b==false &&c==true)\n\t\t\tprintf(\"\");\n\t\t else if(a==true && b==false &&c==false)\n\t\t\tprintf(\"\");\n\t\t else if(a==false && b==true &&c==false)\n\t\t\tprintf(\"\");\n\t\t// if(a==false && b==false &&c==false)\n\t\t else\t\n\t\t\t printf(\"\");\n\t}\n\tprintf(\"%d\\n\\n\\n\",s);\n\treturn 0;\n}\n\t\n\t\n\t\n\t\n\t\n\n", "fixed": "#include <stdio.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char** argv) {\n\n\t\n\tint n,s=0,a,b,c;\n\tscanf(\"%d\",&n);\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tif(a==1 && b==1 &&c==1)\n\t\t\ts++;\n\t\telse if(a==1 && b==1 &&c==0)\n\t\t\ts++;\n\t\telse if(a==0 && b==1 &&c==1)\n\t\t\t s++;\n\t\t else if(a==1 && b==0 &&c==1)\n\t\t\t s++;\n\t\t else if(a==0 && b==0 &&c==1)\n\t\t\tprintf(\"\");\n\t\t else if(a==1 && b==0 &&c==0)\n\t\t\tprintf(\"\");\n\t\t else if(a==0 && b==1 &&c==0)\n\t\t\tprintf(\"\");\n\t\t// if(a==false && b==false &&c==false)\n\t\t else\t\n\t\t\t printf(\"\");\n\t}\n\tprintf(\"%d\\n\\n\\n\",s);\n\treturn 0;\n}\n\t\n\t\n\t\n\t\n\t\n\n"}
{"similarity_score": 0.9536354056902002, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e0a9408974e6471c47dbc8c7c036af46", "bug_code_uid": "59a8aa1130e6f6935e2e4f9e7f15c4a7", "src_uid": "6581dbaff7eb52b63ccfe9c0c4117c09", "apr_id": "95787818ef7f70d2613eb396bad9b8bc", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nmain()\n{\n    int i, c_a, c_b, c_c;\n    char str[5001];\n    scanf(\"%s\", str);\n    c_a= c_b= c_c= 0;\n\n    for(i=0; str[i] != '\\0'; ){\n        if(str[0] == 'b' || str[0] == 'c'){\n            printf(\"NO\");\n            return 0;\n        }\n        if(str[i] == 'a'){\n            if(str[i+1] == 'c'){\n                printf(\"NO\");\n                return 0;\n            }\n            ++i;\n            ++c_a;\n        }\n        else if(str[i] == 'b'){\n            if(str[i+1] == 'a'){\n                printf(\"NO\");\n                return 0;\n            }\n            ++i;\n            ++c_b;\n        }\n        else if(str[i] == 'c'){\n            if(str[i+1] == 'a' || str[i+1] == 'b'){\n                printf(\"NO\");\n                return 0;\n            }\n            ++i;\n            ++c_c;\n        }\n    }\n    if(c_c == c_a || c_c == c_b)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n}", "fixed": "#include <stdio.h>\n\nmain()\n{\n    int i, c_a, c_b, c_c;\n    char str[5001];\n    scanf(\"%s\", str);\n    c_a= c_b= c_c= 0;\n\n    for(i=0; str[i] != '\\0'; ){\n        if(str[0] == 'b' || str[0] == 'c'){\n            printf(\"NO\");\n            return 0;\n        }\n        if(str[i] == 'a'){\n            if(str[i+1] == 'c'){\n                printf(\"NO\");\n                return 0;\n            }\n            ++i;\n            ++c_a;\n        }\n        else if(str[i] == 'b'){\n            if(str[i+1] == 'a'){\n                printf(\"NO\");\n                return 0;\n            }\n            ++i;\n            ++c_b;\n        }\n        else if(str[i] == 'c'){\n            if(str[i+1] == 'a' || str[i+1] == 'b'){\n                printf(\"NO\");\n                return 0;\n            }\n            ++i;\n            ++c_c;\n        }\n    }\n    if(c_a == 0 || c_b == 0 || c_c == 0){\n        printf(\"NO\");\n        return 0;\n    }\n    if(c_c == c_a || c_c == c_b)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n}"}
{"similarity_score": 0.26797723745473356, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "93d90589a4ce3c671565f43bf3b1ae16", "bug_code_uid": "da87e5a6f9c1f4f24f0d3aa6d56d27f5", "src_uid": "f2fc865a44b39179261a7311adf48390", "apr_id": "43e765b50edb4adfe31b5150569bad53", "difficulty": 1200, "tags": ["data structures", "two pointers", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n, i, j, sum1=0, sum3=0, c=0;\n    scanf(\"%d\", &n);\n    int ara[n], r;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &ara[i]);\n    }\n    i=0;\n    j=n-1;\n    sum1=ara[i];\n    sum3=ara[j];\n    while(i<j || j<i)\n    {\n        if(sum1>sum3)\n        {\n            j--;\n            sum3+=ara[j];\n        }\n        else if(sum1<sum3)\n        {\n            i++;\n            sum1+=ara[i];\n        }\n        if(sum1==sum3)\n        {\n            r=sum1;\n            c++;\n            i++;\n            j--;\n            if(i==j || j<i)\n            {\n                break;\n            }\n            sum1+=ara[i];\n            sum3+=ara[j];\n            if(sum1==sum3)\n            {\n                r=sum1;\n                c++;\n            }\n            //printf(\"%d %d %d %d %d\\n\",sum1, sum3, r, i, j);\n        }\n    }\n    if(c==0)\n    {\n        printf(\"0\\n\");\n    }\n    else\n    {\n        printf(\"%d\\n\", r);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n, i, j, c=0;\n    double sum1=0, sum3=0;\n    scanf(\"%d\", &n);\n    double ara[n], r;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lf\", &ara[i]);\n    }\n    i=0;\n    j=n-1;\n    sum1=ara[i];\n    sum3=ara[j];\n    while(i<j || j<i)\n    {\n        if(sum1>sum3)\n        {\n            j--;\n            sum3+=ara[j];\n        }\n        else if(sum1<sum3)\n        {\n            i++;\n            sum1+=ara[i];\n        }\n        if(sum1==sum3)\n        {\n            r=sum1;\n            c++;\n            i++;\n            j--;\n            if(i==j || j<i)\n            {\n                break;\n            }\n            sum1+=ara[i];\n            sum3+=ara[j];\n            if(sum1==sum3)\n            {\n                r=sum1;\n                c++;\n            }\n            //printf(\"%d %d %d %d %d\\n\",sum1, sum3, r, i, j);\n        }\n    }\n    if(c==0)\n    {\n        printf(\"0\\n\");\n    }\n    else\n    {\n        printf(\"%.0lf\\n\", r);\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9978237214363439, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8c191271a2803b926b15b7b0b368de76", "bug_code_uid": "b7ae81c70a02f841ac0a07d4d147de0c", "src_uid": "474f29da694929a64eaed6eb8e4349c3", "apr_id": "53c654ffa8ff973758d61a3ef5621f77", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int t,j;\n    scanf(\"%d\",&t);\n    long long n,x,y,d,c,c1,c2;\n    for(j=0;j<t;j++)\n    {\n        c=0,c1=0,c2=0;\n        scanf(\"%lld%lld%lld%lld\",&n,&x,&y,&d);\n        if(abs(x-y)%d==0)\n        c=abs(x-y)/d;\n        else\n        {\n            if((y-1)%d==0)\n            {\n                c1=((x-1)/d)+(y-1)/d;\n                if((x-1)%d!=0)\n                c1++;\n            }\n            if((n-y)%d==0)\n            {\n                c2=((n-x)/d)+(n-y)/d;\n                if((n-x)%d!=0)\n                c2++;\n            }\n            if(c1!=0 && c2==0)\n            c=c1;\n            else if(c1==0 && c2!=0)\n            c=c2;\n            else if(c1!=0 && c2!=0)\n            {\n                if(c1>c2)\n                c=c1;\n                else\n                c=c2;\n            }\n            else\n            c=-1;\n            \n        }\n        printf(\"%lld\\n\",c);\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int t,j;\n    scanf(\"%d\",&t);\n    long long n,x,y,d,c,c1,c2;\n    for(j=0;j<t;j++)\n    {\n        c=0,c1=0,c2=0;\n        scanf(\"%lld%lld%lld%lld\",&n,&x,&y,&d);\n        if(abs(x-y)%d==0)\n        c=abs(x-y)/d;\n        else\n        {\n            if((y-1)%d==0)\n            {\n                c1=((x-1)/d)+(y-1)/d;\n                if((x-1)%d!=0)\n                c1++;\n            }\n            if((n-y)%d==0)\n            {\n                c2=((n-x)/d)+(n-y)/d;\n                if((n-x)%d!=0)\n                c2++;\n            }\n            if(c1!=0 && c2==0)\n            c=c1;\n            else if(c1==0 && c2!=0)\n            c=c2;\n            else if(c1!=0 && c2!=0)\n            {\n                if(c1>c2)\n                c=c2;\n                else\n                c=c1;\n            }\n            else\n            c=-1;\n            \n        }\n        printf(\"%lld\\n\",c);\n    }\n}"}
{"similarity_score": 0.9936948297604036, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "730cc281d16662d4e749d37eeac14bc6", "bug_code_uid": "66fa090bf34f13807c03d633dc4ff706", "src_uid": "ee3c228cc817536bf6c10ea4508d786f", "apr_id": "cb6490d0a5cd2544dd8d99d11f2675fd", "difficulty": 1700, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nlong long int p[5005]={0};\nlong long int sum[5005]={0};\nlong long int f[5005][5005]={0};\n\nint max(long long int a,long long int b){\n\tif(a>b)\n\t\treturn a;\n\telse\n\t\treturn  b;\n}\n\nint main(){\n\tint i,j,n,m,k;\n\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\t\n\t/*int *p = (int *)malloc(n*sizeof(int));\n\tint *sum[n+1];\n\tfor(i=0;i<=n;i++)\n\t\tsum[i] = (int *)calloc(n+1,sizeof(int));*/\n\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&p[i]);\n\n\tfor(i=1;i<=m;i++)\n\t\tsum[1] += p[i];\n\tfor(i=2;i<=n-m+1;i++){\n\t\tsum[i] = sum[i-1];\n\t\tsum[i] += p[i+m-1];\n\t\tsum[i] -= p[i-1]; \n\t}\n\n\t/*int *f[n+1];\n\tfor(i=0;i<=n;i++)\n\t\tf[i] = (int *)calloc(k+1,sizeof(int));*/\n\n\tfor(i=m;i<=n;i++){\n\t\tfor(j=1;j<=k;j++){\n\t\t\tf[i][j] = max(f[i-m][j-1]+sum[i-m+1],f[i-1][j]);\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\",f[n][k]);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nlong long int p[5005]={0};\nlong long int sum[5005]={0};\nlong long int f[5005][5005]={0};\n\nlong long int max(long long int a,long long int b){\n\tif(a>b)\n\t\treturn a;\n\telse\n\t\treturn  b;\n}\n\nint main(){\n\tint i,j,n,m,k;\n\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\t\n\t/*int *p = (int *)malloc(n*sizeof(int));\n\tint *sum[n+1];\n\tfor(i=0;i<=n;i++)\n\t\tsum[i] = (int *)calloc(n+1,sizeof(int));*/\n\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&p[i]);\n\n\tfor(i=1;i<=m;i++)\n\t\tsum[1] += p[i];\n\tfor(i=2;i<=n-m+1;i++){\n\t\tsum[i] = sum[i-1];\n\t\tsum[i] += p[i+m-1];\n\t\tsum[i] -= p[i-1]; \n\t}\n\n\t/*int *f[n+1];\n\tfor(i=0;i<=n;i++)\n\t\tf[i] = (int *)calloc(k+1,sizeof(int));*/\n\n\tfor(i=m;i<=n;i++){\n\t\tfor(j=1;j<=k;j++){\n\t\t\tf[i][j] = max(f[i-m][j-1]+sum[i-m+1],f[i-1][j]);\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\",f[n][k]);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9982300884955753, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1294ab4875619ab3adb7bf1110402d32", "bug_code_uid": "b3b990863a25e81844e48db1b2295e02", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "a0a0bd9cd4c26c03321a1e4bf223851f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int a, b, c;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n\r\n        int range = abs(a - b) * 2;\r\n        int result;\r\n        if ((range < a) || (range < b) || (range < c))\r\n            result = -1;\r\n        else if (c <= abs(a - b))\r\n            result = c + abs(a - b);\r\n        else\r\n            result = c + abs(a - b) - range;\r\n\r\n        printf(\"%d\", result);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int a, b, c;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n\r\n        int range = abs(a - b) * 2;\r\n        int result;\r\n        if ((range < a) || (range < b) || (range < c))\r\n            result = -1;\r\n        else if (c <= abs(a - b))\r\n            result = c + abs(a - b);\r\n        else\r\n            result = c + abs(a - b) - range;\r\n\r\n        printf(\"%d\\n\", result);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.7863695937090432, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "db77de7510a85533cc581f1cd17a8a1b", "bug_code_uid": "b297f6f51619da526ac62e395fe4d518", "src_uid": "259e39c9e63e43678e596c0d8c66937c", "apr_id": "87febe40fb7c50d8bf7ecb1c48ce072b", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\n//  main.c\n//  1549A Gregor and Cryptography\n//\n//  Created by Admin on 27.12.2021.\n//\n\n#include <stdio.h>\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)   {\n        int n;\n        scanf(\"%d\", &n);\n        n--;\n        if(n % 4 == 0)\n            printf(\"%d %d\\n\", n / 2, n);\n        else\n            printf(\"%d %d\\n\", n / 3, n / 2);\n    }\n    return 0;\n}\n", "fixed": "//\n//  main.c\n//  1549A Gregor and Cryptography\n//\n//  Created by Admin on 27.12.2021.\n//\n\n#include <stdio.h>\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)   {\n        int n;\n        scanf(\"%d\", &n);\n        n--;\n        printf(\"2 %d\\n\", n);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7171792948237059, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0c42b11fe42b4b1c1284d31787c4bbb7", "bug_code_uid": "82a7fc900552feefe1b9477bb81e9469", "src_uid": "c0ad2a6d14b0c9e09af2221d88a34d52", "apr_id": "ec0e7b293ad93ec5cf90cbaab19e42b6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for(int i = 0; i < n; i ++)\r\n    {\r\n        int r, b, d;\r\n        scanf(\"%d%d%d\", &r, &b, &d);\r\n        if(r > b)\r\n        {\r\n            r = (r + 1) / b;\r\n        }\r\n        else if(r < b)\r\n        {\r\n            b = (b + 1) / r;\r\n        }\r\n        if(abs(r - b) <= d)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n } ", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for(int i = 0; i < n; i ++)\r\n    {\r\n        int r, b, d;\r\n        scanf(\"%d%d%d\", &r, &b, &d);\r\n        if(r > b)\r\n        {\r\n            if(r % b != 0)\r\n            {\r\n                r = r / b + 1;\r\n            }\r\n            else\r\n            {\r\n                r = r / b;\r\n            }\r\n            b = 1;\r\n        }\r\n        else if(r < b)\r\n        {\r\n            if(b % r != 0)\r\n            {\r\n                b = b / r + 1;\r\n            }\r\n            else\r\n            {\r\n                b = b / r; \r\n            }\r\n            r = 1;\r\n        }\r\n        if(abs(r - b) <= d)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n } "}
{"similarity_score": 0.9986962190352021, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "501678c47241d224388be840d405dc49", "bug_code_uid": "26af06557fba9be7a0352c44cda6d247", "src_uid": "b3978805756262e17df738e049830427", "apr_id": "5d9030bc9e3bdcdb33e557593003f07e", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    int x, y, result[t];\n\n    for(int i = 0; i < t; i++){\n        scanf(\"%d %d\", &x, &y);\n        if(x >= 4 || y < x || (x==2 && y == 3)) result[i] = 1;\n        else result[i] = 0;\n    }\n    for(int i = 0; i < t; i++){\n        result[i]==1 ? printf(\"YES\\n\") : printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    int x, y, result[t];\n\n    for(int i = 0; i < t; i++){\n        scanf(\"%d %d\", &x, &y);\n        if(x >= 4 || y <= x || (x==2 && y == 3)) result[i] = 1;\n        else result[i] = 0;\n    }\n    for(int i = 0; i < t; i++){\n        result[i]==1 ? printf(\"YES\\n\") : printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9640084685956246, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "3c389a811ec421ab846bae5748dd4aca", "bug_code_uid": "716c83316bb7a0518212b2f3885b318b", "src_uid": "636a30a2b0038ee1731325a5fc2df73a", "apr_id": "b30002c63123a1d504bd0b91a59e07d1", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/**Bismillahir Rahmanir Rahim**/\n\n#include <stdio.h>\nint main()\n{\n    int w[5], sh, uh;\n    int first[5], second[5],fnl[5], i,sum=0, scr, hack;\n    double m[5], x;\n    for(i=0; i<5; i++)\n        scanf(\"%lf\", &m[i]);\n    for(i=0; i<5; i++)\n        scanf(\"%d\", &w[i]);\n    scanf(\"%d%d\", &sh, &uh);\n    for(i=0,x=500; i<5; x+=500,i++)\n    {\n        first[i] =(double) ((1-(m[i]/250))*x) - (50*w[i]);\n        second[i] = (30*x)/100;\n    }\n    for(i=0; i<5; i++)\n    {\n        if(first[i]>second[i])\n            fnl[i] = first[i];\n        else\n            fnl[i] = second[i];\n    }\n    for(i=0; i<5; i++)\n        sum+=fnl[i];\n    hack = (sh*100)-(uh*50);\n    scr = sum + hack;\n    printf(\"%d\\n\", scr);\n\n    return 0;\n}\n", "fixed": "/**Bismillahir Rahmanir Rahim**/\n\n#include <stdio.h>\nint main()\n{\n    int w[5], sh, uh;\n    int first[5], second[5],fnl[5], i,sum=0, scr, hack;\n    int m[5], x;\n    for(i=0; i<5; i++)\n        scanf(\"%d\", &m[i]);\n    for(i=0; i<5; i++)\n        scanf(\"%d\", &w[i]);\n    scanf(\"%d%d\", &sh, &uh);\n    for(i=0,x=500; i<5; x+=500,i++)\n    {\n        first[i] =(x-(m[i]*((i+1)*2))) - (50*w[i]);\n        second[i] = (30*x)/100;\n    }\n    for(i=0; i<5; i++)\n    {\n        if(first[i]>second[i])\n            fnl[i] = first[i];\n        else\n            fnl[i] = second[i];\n    }\n    for(i=0; i<5; i++)\n        sum+=fnl[i];\n    hack = (sh*100)-(uh*50);\n    scr = sum + hack;\n    printf(\"%d\\n\", scr);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9429097605893186, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b0efe17a8cc15735ff2b5232be7f5792", "bug_code_uid": "78613381d923a8bd171e107146253193", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "6d75a31059bbac4c2107ff6c3d9b2fef", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    int i, a[100], b[100],r;\n    for(i=0;i<=t-1;i++)\n    {\n        scanf(\"%d %d\", &a[i], &b[i]);\n    };\n    for(int k=0;k<=t-1;k++)\n    {\n        if(a[k]%b[k]==0)\n        {\n            printf(\"0\\n\");\n        }\n        else if((a[k]>b[k])&&(a[k]%b[k]!=0))\n        {\n            r=(a[k]/b[k]);\n            printf(\"%d\\n\", b[k]*(r+1)-a[k]);\n        }\n        else\n        {\n            printf(\"%d\\n\", b[k]-a[k]);\n        };\n    };\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    int i, a[t-1], b[t-1],r;\n    for(i=0;i<=t-1;i++)\n    {\n        scanf(\"%d %d\", &a[i], &b[i]);\n    };\n    for(int k=0;k<=t-1;k++)\n    {\n        if(a[k]%b[k]==0)\n        {\n            printf(\"0\\n\");\n        }\n        else if((a[k]>b[k])&&(a[k]%b[k]!=0))\n        {\n            r=(a[k]/b[k]);\n            printf(\"%d\\n\", b[k]*(r+1)-a[k]);\n        }\n        else\n        {\n            printf(\"%d\\n\", b[k]-a[k]);\n        };\n    };\n    return 0;\n}\n"}
{"similarity_score": 0.9547738693467337, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "05a366efba8f413bd86ec811b3fd6a07", "bug_code_uid": "96a89b8f7ef1534ccaf719fe095991ef", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "b1fcc5c623a5540dcc5fe297603ec1aa", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\n    int n,i,j,s=0,p=0,m=0,k=0;\n    scanf(\"%d\",&n);\n    char b [1009];\n    char c[1009];\n    scanf(\"%s\",&b);\n    scanf(\"%s\",&c);\n    for(i=0;i<n;i++)\n    {\n           if(b[i]>c[i])\n            s=c[i]+10-b[i];\n          else if(b[i]<c[i])\n            s=b[i]+10-c[i];\n\n      if(b[i]>c[i])\n      p=b[i]-c[i];\n       else if(b[i]<c[i])\n         p=c[i]-b[i];\n     if((s)<(p))\n    {\n        m+=s;\n    }\n    else if((s)>(p))\n    {\n        m+=(p);\n    }\n    else if (s==p)\n    {\n        m+=s;\n    }\n    }\n    printf(\"%d\\n\",m);\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\n    int n,i,j,s=0,p=0,m=0,k=0;\n    scanf(\"%d\",&n);\n    char b [1009];\n    char c[1009];\n    scanf(\"%s\",&b);\n    scanf(\"%s\",&c);\n    for(i=0;i<n;i++)\n    {\n           if(b[i]>c[i])\n            s=c[i]+10-b[i];\n          else if(b[i]<c[i])\n            s=b[i]+10-c[i];\n            else if(b[i]==c[i])\n                 s=0;\n\n      if(b[i]>c[i])\n      p=b[i]-c[i];\n       else if(b[i]<c[i])\n         p=c[i]-b[i];\n     if((s)<(p))\n    {\n        m+=s;\n    }\n    else if((s)>(p))\n    {\n        m+=(p);\n    }\n    else if (s==p)\n    {\n        m+=s;\n    }\n    }\n    printf(\"%d\\n\",m);\n\n}\n"}
{"similarity_score": 0.13802083333333334, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "0863d265129bb802ecd1ff2556f77171", "bug_code_uid": "aee0c5e510c5d12f5671d764bd704da9", "src_uid": "e702594a8e993e135ea8ca78eb3ecd66", "apr_id": "c14f6fc5a3b1635d1cb810b85834b77a", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n      int n, a[1000000], b[1000000], i, j, sm, mx;\n      scanf(\"%d\", &n);\n      for(i=0;i<n;i++)\n\t    scanf(\"%d%d\", &a[i], &b[i]);\n      sm=a[0];\n      mx=b[0];\n      for(i=0;i<n;i++)\n      {\n\t    if(a[i]<=sm && b[i]>=mx)\n\t    {\n\t\t  sm=a[i];\n\t\t  mx=b[i];\n\t\t  j=i+1;\n\t    }\n\t    else if(sm<=a[i] && mx>=b[i])\n\t\t  continue;\n\t    else\n\t\t  j=-1;\n      }\n      printf(\"%d\", j);\n      return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint a[100000],b[100000];\n\nint main()\n{\n    int n,i=0,x=1000000001,y=0,c=-1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\tscanf(\"%d%d\",&a[i],&b[i]);\n\tif(a[i]<x)\n\t    x=a[i];\n\tif(b[i]>y)\n\t    y=b[i];\n    }\n\n    for(i=0;i<n;i++)\n\tif((a[i]==x)&&(b[i]==y)){c=i+1;break;}\n    printf(\"%d\",c);\n//\telse printf(\"-1\");\n    return 0;\n}\n"}
{"similarity_score": 0.42357642357642356, "equal_cnt": 25, "replace_cnt": 12, "delete_cnt": 9, "insert_cnt": 4, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "771eaf0396f606099dcfb449dcec8fbc", "bug_code_uid": "f05bc5c1ae0743891ec8f76c3b7bb967", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "8b70b010b9b82289044e095c97fc0635", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\nint a[100123];\r\nint main() {\r\n\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n\r\n        long long s1=0,s2=0,s;\r\n        for(int j=0;j<n;j++)\r\n        {\r\n\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]>=0)\r\n            {\r\n                s1+=a[j];\r\n\r\n            }\r\n            else\r\n            {\r\n                a[j]=a[j];\r\n                s2+=a[j];\r\n            }\r\n        }\r\n        s=s1-abs(s2);\r\n        printf(\"%lld\\n\",abs(s));\r\n    }\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long s=0,j,n;\r\n        scanf(\"%lld\",&n);\r\n        long long arr[n];\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%lld\",&arr[i]);\r\n            s+=arr[i];\r\n        }\r\n        if(s<0){\r\n            printf(\"%lld\\n\",-s);\r\n        }\r\n        else{\r\n            printf(\"%lld\\n\",s);\r\n        }\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8586278586278586, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5255abc219d568ff233da6afb0689145", "bug_code_uid": "25f096d9cbc3eadf40ebb9742898a358", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "5163a26c5bfe0a938b8f20ae2edff1c8", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n  int t, n;\n  long long temp, negative_sum, positive_sum;\n\n  scanf(\"%d\", &t);\n\n  while(t--)\n  {\n    negative_sum = positive_sum = temp = 0;\n\n    scanf(\"%d\", &n);\n\n    for(int i = 0; i < n; i++)\n    {\n      scanf(\"%lld\", &temp);\n\n      if(temp <= 0)\n        negative_sum += abs(temp);\n      else\n        positive_sum += temp;\n    }\n\n    printf(\"%lld\\n\", abs(negative_sum - positive_sum));\n  }\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n  int t, n;\n  long long temp, negative_sum, positive_sum;\n\n  scanf(\"%d\", &t);\n\n  while(t--)\n  {\n    negative_sum = positive_sum = temp = 0;\n\n    scanf(\"%d\", &n);\n\n    for(int i = 0; i < n; i++)\n    {\n      scanf(\"%lld\", &temp);\n\n      if(temp <= 0)\n        negative_sum += -temp;\n      else\n        positive_sum += temp;\n    }\n\n    if(negative_sum > positive_sum)\n      printf(\"%lld\\n\", negative_sum - positive_sum);\n    else\n      printf(\"%lld\\n\", positive_sum - negative_sum);\n  }\n}\n"}
{"similarity_score": 0.9879518072289156, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a8a0851a23ce19147f61c6d59d2df4a4", "bug_code_uid": "15fb922ebeee81dfc66edcb63f02f779", "src_uid": "7b932b2d3ab65a353b18d81cf533a54e", "apr_id": "39b90fd12937090bfbd2dcecbbbe8eba", "difficulty": 1300, "tags": ["probabilities", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nfloat a,b,c,d;\nscanf(\"%f %f %f %f\",&a,&b,&c,&d);\nfloat p1,p2;\np1=a/b;\np2=c/d;\nprintf(\"%.12f\",(a/b)/(1-((1-c/d)*(1-c/d))));\nreturn(0);}\n", "fixed": "#include<stdio.h>\nint main()\n{\nfloat a,b,c,d;\nscanf(\"%f %f %f %f\",&a,&b,&c,&d);\nfloat p1,p2;\np1=a/b;\np2=c/d;\nprintf(\"%.12f\",(a/b)/(1-((1-a/b)*(1-c/d))));\nreturn(0);}\n"}
{"similarity_score": 0.9947916666666666, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "599a907cf8b879d5576238fda021a7d2", "bug_code_uid": "4e638d97143dfba13b79263d04618427", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "19df0082bfa536dbd635efe10e69fb0d", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint k,t;\r\n\tscanf(\"%d\",&t);\r\n\tfor(k=0;k<t;k++)\r\n\t{\r\n\t\tlong long unsigned int n,ans;\r\n\t\tscanf(\"%llu\",&n);\r\n\t\tn++;\r\n\t\tans=n/10;\r\n\t\tprintf(\"%llu\",ans);\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint k,t;\r\n\tscanf(\"%d\",&t);\r\n\tfor(k=0;k<t;k++)\r\n\t{\r\n\t\tlong long unsigned int n,ans;\r\n\t\tscanf(\"%llu\",&n);\r\n\t\tn++;\r\n\t\tans=n/10;\r\n\t\tprintf(\"\\n%llu\",ans);\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9636363636363636, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5a85c6d8bcd188053643ca2ae2784377", "bug_code_uid": "95c017bcab96d8ccbf2d2b8e65e96278", "src_uid": "168f2a740d21a3a916a9d560fbcffeb9", "apr_id": "d816e27453178b2889b99d0a22da2336", "difficulty": 800, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nstruct node\r\n{\r\n    int x;\r\n    int y;\r\n};\r\n\r\nint main()\r\n{\r\n    int T, n, k, i, j;\r\n    struct node a[n];\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d %d\", &n, &k);\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i].x);\r\n        }\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i].y);\r\n        }\r\n        \r\n        int min;\r\n        struct node t;\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            min = i;\r\n            for(j = i+1; j < n; j++)\r\n            {\r\n                if(a[min].x > a[j].x)\r\n                {\r\n                    min = j;\r\n                }\r\n            }\r\n            t = a[i];\r\n            a[i] = a[min];\r\n            a[min] = t;\r\n        }\r\n        \r\n        for(i = 0; i < n; i++)\r\n        {\r\n            if(k >= a[i].x)\r\n            {\r\n                a[i].x = 99999999;\r\n                k += a[i].y;\r\n            }\r\n            else    break;\r\n        }\r\n        printf(\"%d\\n\", k);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nstruct node\r\n{\r\n    int x;\r\n    int y;\r\n};\r\n\r\nint main()\r\n{\r\n    int T, n, k, i, j;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d %d\", &n, &k);\r\n\t\tstruct node a[n];\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i].x);\r\n        }\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i].y);\r\n        }\r\n        \r\n        int min;\r\n        struct node t;\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            min = i;\r\n            for(j = i+1; j < n; j++)\r\n            {\r\n                if(a[min].x > a[j].x)\r\n                {\r\n                    min = j;\r\n                }\r\n            }\r\n            t = a[i];\r\n            a[i] = a[min];\r\n            a[min] = t;\r\n        }\r\n        \r\n        for(i = 0; i < n; i++)\r\n        {\r\n            if(k >= a[i].x)\r\n            {\r\n                a[i].x = 99999999;\r\n                k += a[i].y;\r\n            }\r\n            else    break;\r\n        }\r\n        printf(\"%d\\n\", k);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9386666666666666, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3372a27a70f4349aa51ac024fc835d0d", "bug_code_uid": "c967ecdf0b1f91b796a22e79696f16c5", "src_uid": "22a3561ff70b802f080feaabc4a71298", "apr_id": "5d582b83489cbc65ee2b75f956af96f0", "difficulty": 900, "tags": ["combinatorics", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nlong long int fact(long long int x)\n{\n    if(x==0 || x==1)\n    {\n        return 0;\n    }\n    else if(x==2)\n    {\n        return 1;\n    }\n    return ((x*(x-1))/2);\n\n}\nint main()\n{\n    char a[20];\n    long long int b[26]={0};\n    long long int n,i,c,d;\n    long long int s=0;\n\n    scanf(\"%I64d\",&n);\n\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",a);\n        b[a[0]-97]++;\n    }\n\n    for(i=0;i<26;i++)\n    {\n        c=0;\n        d=0;\n        if(b[i]>=3)\n        {\n            if(b[i]==3)\n            {\n                s=s+1;\n            }\n            else\n            {\n\n\n        c=b[i]/2;\n        s=s+fact(c);\n        d=b[i]-c;\n        s=s+fact(d);\n\n\n        }\n    }\n    }\n\n    printf(\"%I64d\",s);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nlong long int fact(long long int x)\n{\n    if(x==0 || x==1)\n    {\n        return 0;\n    }\n    else if(x==2)\n    {\n        return 1;\n    }\n    return ((x*(x-1))/2);\n\n}\nint main()\n{\n    char a[21];\n    long long int b[26]={0};\n    long long int n,i,c,d;\n    long long int s=0;\n\n    scanf(\"%I64d\",&n);\n\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",a);\n        b[a[0]-97]++;\n    }\n\n    for(i=0;i<26;i++)\n    {\n        c=0;\n        d=0;\n        if(b[i]>=3)\n        {\n            if(b[i]==3)\n            {\n                s=s+1;\n            }\n            else\n            {\n                c=b[i]/2;\n                s=s+fact(c);\n                d=b[i]-c;\n                s=s+fact(d);\n            }\n        }\n    }\n\n    printf(\"%I64d\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.9777015437392796, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9281f5fb74c3f66e13fb5ff5d1d1d46a", "bug_code_uid": "3401a01c983c066fd08efac487acfd99", "src_uid": "d504d894b2f6a830c4d3b4edc54395be", "apr_id": "8109b4e93b9e869f84a5728e79a5ed3f", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint func(char *str,int n,int k)\n{\n    int count = 0;\n    for(int i=1;i<n;i++)\n    {\n        if(str[i] == '#')\n        {\n            count++;\n            if(count >= k)\n            {\n                return 1;\n            }\n        }\n        if(str[i+1] == '.')\n        {\n            count = 0;\n        }\n    }\n    return 0;\n}\n\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    char str[n];\n    scanf(\"%s\",str);\n    int flag = func(str,n,k);\n    if(flag == 0)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"N0\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint func(char *str,int n,int k)\n{\n    int count = 0;\n    for(int i=1;i<n;i++)\n    {\n        if(str[i] == '#')\n        {\n            count++;\n            if(count >= k)\n            {\n                return 1;\n            }\n        }\n        if(str[i+1] == '.')\n        {\n            count = 0;\n        }\n    }\n    return 0;\n}\n\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    char str[n];\n    scanf(\"%s\",str);\n    int flag = func(str,n,k);\n    if(flag == 0)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n}\n"}
{"similarity_score": 0.4946889226100152, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "f6217bcb41cc33a4d131705048add9bb", "bug_code_uid": "5fb1521e5024d3d8112c7c32cd97cd83", "src_uid": "1cd295e204724335c63e685fcc0708b8", "apr_id": "2e19526f463002ab062c216426437fa8", "difficulty": 1400, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,j,dif;\n\tlong long int count=0,a[100005];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%lld\",&a[i]);\n\t\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(a[i]>a[i+1])\n\t\t{\n\t\t\tdif=a[i]-a[i+1];\n\t\t\ta[i+1]+=dif;\n\t\t\tcount+=dif;\n\t\t\tfor(j=i+1;j<n-1;j++)\n\t\t\t{\n\t\t\t\tif(a[j]>a[j+1])\n\t\t\t\ta[j+1]+=dif;\n\t\t\t\telse break;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",count);\n\treturn(0);\n}\n", "fixed": "#include<stdio.h>\n#define L(a,b) a>b?a:b;\nint main()\n{\n    int n,i,j,dif;\n    long long int count=0,a[100005];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%I64d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n        count+=L(0,a[i]-a[i+1])\n    }\n    printf(\"%I64d\\n\",count);\n    return(0);\n}"}
{"similarity_score": 0.9398186314921682, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "caef4efd96034f8489c4a28ae6fc644b", "bug_code_uid": "4b66e9d84e95e545d180958cba42c629", "src_uid": "41bdb08253cf5706573f5d469ab0a7b3", "apr_id": "3de43d927b1edd278624cc56c97f4f83", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n   int n,m,i,j,cnt[102]={0},best[102]={0},c=0;\n   scanf(\"%d%d\",&n,&m);\n   char grade[102][102];\n   for(i=0;i<n;i++)\n   {\n      scanf(\"%s\",grade[i]);\n   }\n   for(i=0;i<m;i++)\n   {\n       for(j=0;j<n;j++)\n       {\n           if(grade[j][i]>best[i])\n            best[i]=grade[j][i];\n       }\n\n   }\n   for(i=0;i<m;i++)\n   {\n       for(j=0;j<n;j++)\n       {\n           if(best[i]==grade[j][i])\n           {\n               cnt[j]=1;\n           }\n       }\n   }\n   if(i=0;i<n;i++)\n   {\n       if(cnt[j]==1)\n         c++;\n   }\n   printf(\"%d\\n\",c);\n   return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n   int n,m,i,j,cnt[102]={0},best[102]={0},c=0;\n   scanf(\"%d%d\",&n,&m);\n   char grade[102][102];\n   for(i=0;i<n;i++)\n   {\n      scanf(\"%s\",grade[i]);\n   }\n   for(i=0;i<m;i++)\n   {\n       for(j=0;j<n;j++)\n       {\n           if(grade[j][i]>best[i])\n            best[i]=grade[j][i];\n       }\n\n   }\n   for(i=0;i<m;i++)\n   {\n       for(j=0;j<n;j++)\n       {\n           if(best[i]==grade[j][i])\n           {\n               cnt[j]=1;\n           }\n       }\n   }\n   for(i=0;i<n;i++)\n   {\n       if(cnt[i]==1)\n         c++;\n   }\n   printf(\"%d\\n\",c);\n   return 0;\n}\n"}
{"similarity_score": 0.8986784140969163, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "58cc553da88b6b163e832472174be34b", "bug_code_uid": "9af61d3572eb67587e5e16bd329c74dc", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "18426a9ac5b0d0de6da746be0903a8d7", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong long int a,i,sum=0;\nscanf(\"%lld\",&a);\nlong long int b[a];\nfor(i=0;i<a;i++)\nscanf(\"%lld\",&b[i]);\nfor(i=0;i<a;i++)\n{\n  sum=sum+b[i];\n}\nif(sum%2==0)printf(\"Second\");\nelse printf(\"First\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nlong long int a,i,sum=0;\nscanf(\"%lld\",&a);\nlong long int b[a];\nfor(i=0;i<a;i++)\nscanf(\"%lld\",&b[i]);\nfor(i=0;i<a;i++)\n{\n if(b[i]%2!=0)\n    sum++;\n}\nif(sum==0)printf(\"Second\");\nelse printf(\"First\");\n}\n"}
{"similarity_score": 0.9885057471264368, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6f08b85a48a060dd85e428b7f49dbbf1", "bug_code_uid": "f1390e625bf0db433826e09dd226873a", "src_uid": "71be4cccd3b8c494ad7cc2d8a00cf5ed", "apr_id": "ce5f5d8763e400f3cfec8c85fd0909a3", "difficulty": 1000, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<ctype.h>\nint main()\n{\n    int n, t, d, flag, min=10000, i;\n    scanf(\"%d%d\",&n ,&t);\n    long long int tim[101], s;\n\n\n        for(i=1; i<n+1; i++)\n        {\n             scanf(\"%I64d %d\",&s ,&d);\n            while(s<t){\n                s=s+d;\n            }\n            tim[i] =  s;\n\n        }\n        for(i=1; i<n+1; i++)\n        {\n            if(tim[i]==t){\n                flag=i;\n                break;\n            }\n            else if(tim[i]<min){\n                min=tim[i];\n                flag = i;\n            }\n\n        }\n        printf(\"%d\\n\",flag);\n\n\n\n\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<ctype.h>\nint main()\n{\n    int n, t, d, flag, min=10000000, i;\n    scanf(\"%d%d\",&n ,&t);\n    unsigned long long int tim[101], s;\n\n\n        for(i=1; i<n+1; i++)\n        {\n             scanf(\"%I64u %d\",&s ,&d);\n            while(s<t){\n                s=s+d;\n            }\n            tim[i] =  s;\n\n        }\n        for(i=1; i<n+1; i++)\n        {\n            if(tim[i]==t){\n                flag=i;\n                break;\n            }\n            else if(tim[i]<=min){\n                min=tim[i];\n                flag = i;\n            }\n\n        }\n        printf(\"%d\\n\",flag);\n\n\n\n\n\n    return 0;\n}"}
{"similarity_score": 0.997093023255814, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1c912d31daaf735902112103ec1927c4", "bug_code_uid": "60ef936c9e3817720fcbb2a0bce423fa", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "0a828e219aec63f02f85f9b3ef23c415", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\n#define oo 2000000000\n\nlong a[205]={0};\n\nint main()\n{\n long n;\n long i,min=oo;\n long x;\n \n scanf(\"%ld\",&n);\n for(i=0;i<n;i++)\n   scanf(\"%ld\",&a[i])\n \n for(i=0;i<n;i++)\n   if(abs(a[i]-a[(i+1)%n])<min)\n    {\n     min=abs(a[i]-a[(i+1)%n]);\n     x=i;\n    }\n \n printf(\"%ld %ld\\n\",x+1,(x+1)%n+1);\n \n return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\n#define oo 2000000000\n\nlong a[205]={0};\n\nint main()\n{\n long n;\n long i,min=oo;\n long x;\n \n scanf(\"%ld\",&n);\n for(i=0;i<n;i++)\n   scanf(\"%ld\",&a[i]);\n \n for(i=0;i<n;i++)\n   if(abs(a[i]-a[(i+1)%n])<min)\n    {\n     min=abs(a[i]-a[(i+1)%n]);\n     x=i;\n    }\n \n printf(\"%ld %ld\\n\",x+1,(x+1)%n+1);\n \n return 0;\n}\n"}
{"similarity_score": 0.8400954653937948, "equal_cnt": 25, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 18, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "d19c90bc98179383e9e1d92bd7048f09", "bug_code_uid": "359e7beb23f56a97118775ae854638e9", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "01d902daec68ab2b335b0e2a9439f2b4", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint\nmain(void){\n    int cars,flag=0;\n    int count=0;\n    \n    scanf(\"%d\",&cars);\n    int i,j,k=0;\n    int input;\n    int ans[200];\n    \n    for(i=0;i<cars;i++){            \n        flag=0;\n        for(j=0;j<cars;j++){\n            scanf(\"%d\",&input);\n            if(i==j)    continue;\n            if(input==0||input==2){\n                flag++;\n            }\n            \n            if(flag==cars-1){\n                ans[count++]=i;\n                flag=0;\n            }\n        }\n        \n        \n    }\n    int p;\n    if(count){\n        printf(\"%d\\n\",count);\n        for(p=0;p<count;p++){\n            printf(\"%d \",ans[p]+1);\n        }\n    }\n    \n    else{\n        printf(\"0\");\n    }\n    return 0;\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint\nmain(void){\n    int cars,flag=0;\n    int count=0;\n    \n    scanf(\"%d\",&cars);\n    int i,j,k=0;\n    int input;\n    int ans[200];\n\n        for(i=0;i<cars;i++){            \n            flag=0;\n            for(j=0;j<cars;j++){\n                scanf(\"%d\",&input);\n                if(i==j)    continue;\n                if(input==0||input==2){\n                    flag++;\n                }\n                \n                if(flag==cars-1){\n                    ans[count++]=i;\n                    flag=0;\n                }\n            }\n        \n        \n        }\n        \n        int p;\n    if(cars==1){\n        printf(\"1\\n1\");\n    }\n    else{\n        \n        if(count){\n            printf(\"%d\\n\",count);\n            for(p=0;p<count;p++){\n                printf(\"%d \",ans[p]+1);\n            }\n        }\n        \n        else{\n            printf(\"0\");\n        }\n    }\n        return 0;\n\n}\n"}
{"similarity_score": 0.9755058572949947, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "939f5eef8c764952a72b41aa10210f95", "bug_code_uid": "c26b4a88ff2dc00b1b9bd28e2f0a4b31", "src_uid": "9f019c3898f27d687c5b3498586644e8", "apr_id": "b1278a756000bfd917045174770ac7ee", "difficulty": 800, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int a1,a2,a3,b1,b2,b3;\r\n        scanf(\"%d%d%d%d%d%d\",&a1,&b1,&a2,&b2,&a3,&b3);\r\n        if(b1==b2&&b1>b3)\r\n            printf(\"%d\",abs(a1-a2));\r\n        else if(b2==b3&&b2>b1)\r\n            printf(\"%d\",abs(a2-a3));\r\n        else if(b3==b1&&b3>b2)\r\n            printf(\"%d\",abs(a3-a1));\r\n        else\r\n            printf(\"0\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int a1,a2,a3,b1,b2,b3;\r\n        scanf(\"%d%d%d%d%d%d\",&a1,&b1,&a2,&b2,&a3,&b3);\r\n        if(b1==b2&&b1>b3)\r\n            printf(\"%d\",abs(a1-a2));\r\n        else if(b2==b3&&b2>b1)\r\n            printf(\"%d\",abs(a2-a3));\r\n        else if(b3==b1&&b3>b2)\r\n            printf(\"%d\",abs(a3-a1));\r\n        else\r\n            printf(\"0\");\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9801699716713881, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "abd810ec7780b0cc91f41e1b05cf09ac", "bug_code_uid": "a0c03f91f26c486aee92c4854916107f", "src_uid": "899c5b77bfc0b4b99aff310741c9c0dd", "apr_id": "aade0fd6194fffb9c5f5dde383c7edfe", "difficulty": 1900, "tags": ["constructive algorithms", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint n,k,q,t,a[105],b[105],c[105];\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\n\nint main(){\n\tint i,j,tmp,sum,min,max,left_max,left_min,no_el_left=0,no_seen;\n\tscanf(\"%d%d\",&n,&k);\n\tt = n/k;\n\tfor(i=0;i<105;i++)\n\t\tb[i] = 0;\n\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t}\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++){\n\t\tsum = 0;\n\t\tfor(j=0;j<t;j++){\n\t\t\tscanf(\"%d\",&tmp);\n\t\t\tsum += a[tmp-1];\n\t\t\tb[tmp-1] = 1;\n\t\t}\n\t\tif(i==0)\n\t\t\tmin=max=sum;\n\t\telse{\n\t\t\tif(sum < min)\n\t\t\t\tmin = sum;\n\t\t\tif(sum > max)\n\t\t\t\tmax = sum;\n\t\t}\n\t}\n\tno_seen=no_el_left=0;\n\tfor(i=0;i<n;i++){\n\t\t\tif(b[i] == 0){\n\t\t\t\tc[no_el_left++] = a[i];\n\t\t\t}else{\n\t\t\t\tno_seen++;\n\t\t\t}\n\t}\n\t\n\tif(no_seen < t*k && no_el_left >= t){\n\t\tqsort (c, no_el_left, sizeof(int), compare);\n\t\tleft_max=left_min=0;\n\t\tfor(i=0;i<t;i++)\n\t\t\tleft_min += c[i];\n\t\tfor(i=no_el_left-1,j=0;j<t;i--,j++)\n\t\t\tleft_max += c[i];\n\t\tif(left_min < min)\n\t\t\tmin = left_min;\n\t\tif(left_max > max)\n\t\t\tmax = left_max;\t\t\t\n\t}\n\t\n\tprintf(\"%lf %lf\",(double)min/t,(double)max/t);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint n,k,q,t,a[105],b[105],c[105];\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\n\nint main(){\n\tint i,j,tmp,sum,min,max,left_max,left_min,no_el_left=0,no_seen;\n\tscanf(\"%d%d\",&n,&k);\n\tt = n/k;\n\tfor(i=0;i<105;i++)\n\t\tb[i] = 0;\n\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t}\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++){\n\t\tsum = 0;\n\t\tfor(j=0;j<t;j++){\n\t\t\tscanf(\"%d\",&tmp);\n\t\t\tsum += a[tmp-1];\n\t\t\tb[tmp-1] = 1;\n\t\t}\n\t\tif(i==0)\n\t\t\tmin=max=sum;\n\t\telse{\n\t\t\tif(sum < min)\n\t\t\t\tmin = sum;\n\t\t\tif(sum > max)\n\t\t\t\tmax = sum;\n\t\t}\n\t}\n\tno_seen=no_el_left=0;\n\tfor(i=0;i<n;i++){\n\t\t\tif(b[i] == 0){\n\t\t\t\tc[no_el_left++] = a[i];\n\t\t\t}else{\n\t\t\t\tno_seen++;\n\t\t\t}\n\t}\n\tif(q== 0){\n\t\tmin = 1000000;\n\t\tmax = -1;\n\t}\n\tif(no_seen < t*k && no_el_left >= t){\n\t\tqsort (c, no_el_left, sizeof(int), compare);\n\t\tleft_max=left_min=0;\n\t\tfor(i=0;i<t;i++)\n\t\t\tleft_min += c[i];\n\t\tfor(i=no_el_left-1,j=0;j<t;i--,j++)\n\t\t\tleft_max += c[i];\n\t\tif(left_min < min)\n\t\t\tmin = left_min;\n\t\tif(left_max > max)\n\t\t\tmax = left_max;\t\t\t\n\t}\n\t\n\tprintf(\"%lf %lf\",(double)min/t,(double)max/t);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6936936936936937, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "460ccf2c0bb9a314a0af0310c79ffc94", "bug_code_uid": "c829c93e69d011ce78fecc7b865c0efa", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "f02b97d2e5f40887c6b8b279b8220869", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n/*\u2500\u2500\u2500\u2584\u2580\u2580\u2580\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2580\u2580\u2584\u2500\u2500\u2500\n  \u2500\u2500\u2500\u2588\u2592\u2592\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2592\u2592\u2588\u2500\u2500\u2500\n  \u2500\u2500\u2500\u2500\u2588\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2500\u2500\u2500\u2500\n  \u2500\u2584\u2584\u2500\u2500\u2588\u2591\u2591\u2591\u2580\u2588\u2580\u2591\u2591\u2591\u2588\u2500\u2500\u2584\u2584\u2500\n  \u2588\u2591\u2591\u2588\u2500\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2580\u2500\u2588\u2591\u2591\u2588*/\n\nint main(){\n\n\tint t;\n\n\tscanf(\"%d\", &t);\n\n\twhile(t--){\n\n\t\tlong long int y;\n\n\t\tlong double x;\n\t\t\n\t\tscanf(\"%lld\", &y);\n\n\t\tx = (y * 10 / 9) + 0.5;\n\n\t\tprintf(\"%lld\\n\", (long long int)x);\n\n\t}\n\n}", "fixed": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n/*\u2500\u2500\u2500\u2584\u2580\u2580\u2580\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2580\u2580\u2584\u2500\u2500\u2500\n  \u2500\u2500\u2500\u2588\u2592\u2592\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2592\u2592\u2588\u2500\u2500\u2500\n  \u2500\u2500\u2500\u2500\u2588\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2500\u2500\u2500\u2500\n  \u2500\u2584\u2584\u2500\u2500\u2588\u2591\u2591\u2591\u2580\u2588\u2580\u2591\u2591\u2591\u2588\u2500\u2500\u2584\u2584\u2500\n  \u2588\u2591\u2591\u2588\u2500\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2580\u2500\u2588\u2591\u2591\u2588*/\n\nint main(){\n\n\tint t, i, data, a;\n\n\tscanf(\"%d\", &t);\n\n\twhile(t--){\n\n\t\tint n, modul, used = 0;\n\n\t\tscanf(\"%d\", &n);\n\n\t\twhile(n >= 10){\n\n\t\t\tmodul = n % 10;\n\n      n/= 10;n*=10;\n\n\t\t\tused += n;\n\n      n/=10;\n\n      n+= modul;\n\n\t\t}\n\n\t\tprintf(\"%d\\n\", used + n);\n\n\t}\n\n}"}
{"similarity_score": 0.9331026528258363, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "5e3fdde7da54da1481af89e90dbf1ec7", "bug_code_uid": "03ef0fe7ff4f73cb0306817fd7881332", "src_uid": "0d586ba7d304902caaeb7cd9e6917cd6", "apr_id": "a1593e255928f3c29e751c80ce171604", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,m,i,j,b,c,d;\n\tscanf(\"%d %d\",&n,&m);\n\tchar a[n][m+1];\n\tfor(i=0;i<n;i++){\n\tscanf(\"%s\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tb=0;\n\t\t\tc=0;\n\t\t\tif(a[i][j]>='1' && a[i][j]<='8' || a[i][j]=='.'){\n\t\t\t\tif(a[i-1][j]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(a[i-1][j-1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(a[i-1][j+1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(a[i+1][j]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(a[i+1][j-1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(a[i+1][j+1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(a[i][j-1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(a[i][j+1]=='*')\n\t\t\t\tb++;\n\t\t\t}\n\t\t\tif(a[i][j]=='.'){\n\t\t\t\tif(b==0)\n\t\t\t\tc=0;\n\t\t\t\telse\n\t\t\t\tc=-1;\n\t\t\t}\n\t\t\telse if(a[i][j]>='1' && a[i][j]<='8'){\n\t\t\td=a[i][j]-'0';\n\t\t\tif(d==b)\n\t\t\tc=0;\n\t\t\telse\n\t\t\tc=-1;\n\t\t\t}\n\t\t\tif(c==-1)\n\t\t\tbreak;\n\t\t\t}\n\t\t\tif(c==-1)\n\t\t\tbreak;\n\t\t}\n\t\tif(c==0)\n\t\tprintf(\"YES\\n\");\n\t\telse\n\t\tprintf(\"NO\\n\");\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,m,i,j,b,c,d;\n\tscanf(\"%d %d\",&n,&m);\n\tchar a[n][m+1];\n\tfor(i=0;i<n;i++){\n\tscanf(\"%s\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<m;j++){\n\t\t\tb=0;\n\t\t\tc=0;\n\t\t\tif(a[i][j]>='1' && a[i][j]<='8' || a[i][j]=='.'){\n\t\t\t\tif(i-1>=0 && a[i-1][j]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(i-1>=0 && j-1>=0 && a[i-1][j-1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(i-1>=0 && j+1<m && a[i-1][j+1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(i+1<n && a[i+1][j]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(i+1<n && j-1>=0 && a[i+1][j-1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(i+1<n && j+1<m && a[i+1][j+1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(j-1>=0 && a[i][j-1]=='*')\n\t\t\t\tb++;\n\t\t\t\tif(j+1<m && a[i][j+1]=='*')\n\t\t\t\tb++;\n\t\t\t}\n\t\t\tif(a[i][j]=='.'){\n\t\t\t\tif(b==0)\n\t\t\t\tc=0;\n\t\t\t\telse\n\t\t\t\tc=-1;\n\t\t\t}\n\t\t\telse if(a[i][j]>='1' && a[i][j]<='8'){\n\t\t\td=a[i][j]-'0';\n\t\t\tif(d==b)\n\t\t\tc=0;\n\t\t\telse\n\t\t\tc=-1;\n\t\t\t}\n\t\t\tif(c==-1)\n\t\t\tbreak;\n\t\t\t}\n\t\t\tif(c==-1)\n\t\t\tbreak;\n\t\t}\n\t\tif(c==0)\n\t\tprintf(\"YES\\n\");\n\t\telse\n\t\tprintf(\"NO\\n\");\n}\n\n"}
{"similarity_score": 0.9982363315696648, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3a2f75f5b32f9f9bee8aff2f45690a44", "bug_code_uid": "985fa771ee616d167e52ec311df89f4d", "src_uid": "2c7add49d423de44a2bc09de56ffacf1", "apr_id": "513656442f313d455e6c0cd3a45100a6", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n\tint n,i,j;\r\n\tchar a[8][8],b,c;\r\n\tscanf(\"%d\",&n);getchar();\r\n\tfor(int k=0;k<n;k++){\r\n\t\tgetchar();\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<8;j++){\r\n\t\t\t\ta[i][j]=getchar();\r\n\t\t\t}\r\n\t\t\tgetchar();\r\n\t\t}\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\tif(a[i][j]!=a[i][j+1]) break;\r\n\t\t\t}\r\n\t\t\tif(j==7&&a[i][j]='R'){c=a[i][j];break;}\r\n\t\t}\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\tif(a[j][i]!=a[j+1][i]) break;\r\n\t\t\t}\r\n\t\t\tif(j==7&&a[j][i]='B'){c=a[j][i];break;}\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%c\\n\",c);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n\tint n,i,j;\r\n\tchar a[8][8],b,c;\r\n\tscanf(\"%d\",&n);getchar();\r\n\tfor(int k=0;k<n;k++){\r\n\t\tgetchar();\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<8;j++){\r\n\t\t\t\ta[i][j]=getchar();\r\n\t\t\t}\r\n\t\t\tgetchar();\r\n\t\t}\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\tif(a[i][j]!=a[i][j+1]) break;\r\n\t\t\t}\r\n\t\t\tif(j==7&&a[i][j]=='R'){c=a[i][j];break;}\r\n\t\t}\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\tif(a[j][i]!=a[j+1][i]) break;\r\n\t\t\t}\r\n\t\t\tif(j==7&&a[j][i]=='B'){c=a[j][i];break;}\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%c\\n\",c);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9366666666666666, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c66e72480c672d4f6c3468f1843c7fe0", "bug_code_uid": "c71b0e269a55b922f8e7b5afaabc33db", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "b70a0f8670ad3a472674e7f74b9d43bd", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, a[200001];\n\tscanf(\"%d\", &n);\n\tif(n%2==0)\n\t\t++n;\n\tfor(int i=0; i<n; ++i)\n\t{\n\t\tif(i==n/2)\n\t\t\t++i;\n\t\tif(i%2==0)\n\t\t\tscanf(\"%d\", &a[n-i-1]);\n\t\telse \n\t\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor(int i=0; i<n; ++i)\n\t{\n\t\tif(i==n/2)\n\t\t\t++i;\n\t\tprintf(\"%d \", a[i]);\n\t}\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, a[200001], e=0;\n\tscanf(\"%d\", &n);\n\tif(n%2==0)\n\t{\n\t\t++n;\n\t\te=1;\n\t}\n\tfor(int i=0; i<n; ++i)\n\t{\n\t\tif(i==n/2 && e)\n\t\t\t++i;\n\t\tif(i%2==0)\n\t\t\tscanf(\"%d\", &a[n-i-1]);\n\t\telse \n\t\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor(int i=0; i<n; ++i)\n\t{\n\t\tif(i==n/2 && e)\n\t\t\t++i;\n\t\tprintf(\"%d \", a[i]);\n\t}\n}"}
{"similarity_score": 0.6718861209964413, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "233ed3cf724c3b2ed27bf53665bc3156", "bug_code_uid": "48564ad0985739da2e3736074d2feab1", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "a821b83a725f66cc33d72ee786b5d183", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int i, j, t;\r\n    scanf(\"%d\",&t);\r\n    for(i = 0; i < t; i++)\r\n    {\r\n        char a[1000];\r\n        char b;\r\n        scanf(\"%s\\n%c\",a,&b);\r\n        int len = strlen(a);\r\n        int step = 0, num = 0;\r\n        for(j = 0; j < len; j++)\r\n            if(a[j] == b)\r\n            {\r\n                step = j;\r\n                num = 1;\r\n            }\r\n        if(num == 0)\r\n        {\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        if(step % 2 == 0 && (len - step - 1) % 2 == 0)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int i, j, t;\r\n    scanf(\"%d\",&t);\r\n    for(i = 0; i < t; i++)\r\n    {\r\n        char a[1000];\r\n        char b;\r\n        scanf(\"%s\\n%c\",a,&b);\r\n        int len = strlen(a);\r\n        int step = 0, num = 0, num2 = 0;\r\n        for(j = 0; j < len; j++)\r\n        {\r\n            if(a[j] == b)\r\n            {\r\n                num = 1;\r\n                if(j % 2 == 0 && (len - j - 1) % 2 == 0)\r\n                {\r\n                    printf(\"YES\\n\");\r\n                    num2 = 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(num == 0)\r\n        {\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        if(num2 == 0)\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9825503355704698, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "833590c860df1da733be9f27cdbf65ec", "bug_code_uid": "d995ff9bb1e0953055596f403d37fd38", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "598968aae5f9086103f7b93f82e69396", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=1; i<=t; i++)\r\n    {\r\n        int n,sum=0;\r\n    scanf(\"%d\",&n);\r\n    for(int j=1; j<=n;j++)\r\n    {\r\n        int a;\r\n        scanf(\"%d\",&a);\r\n        sum=sum+a;\r\n    }\r\n   if(sum>0)\r\n   {\r\n        printf(\"%d\\n\",sum-n);\r\n   }\r\n    else\r\n    {\r\n         printf(\"1\\n\");\r\n    }\r\n    }\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=1; i<=t; i++)\r\n    {\r\n        int n,sum=0;\r\n    scanf(\"%d\",&n);\r\n    for(int j=1; j<=n;j++)\r\n    {\r\n        int a;\r\n        scanf(\"%d\",&a);\r\n        sum=sum+a;\r\n    }\r\n   if(sum>=n)\r\n   {\r\n        printf(\"%d\\n\",sum-n);\r\n   }\r\n    else if(n>sum)\r\n    {\r\n         printf(\"1\\n\");\r\n    }\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.9973787680209698, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "bb807778b58f701457698addff465db7", "bug_code_uid": "5a32d0c6f19251b5dca813b1afcec302", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "3aaefd634dd64a2c2b5d9abe17bdb7f0", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint ara[2000],dif[2000];\nint main()\n{\n    int n,i,j,m,t;\n    float x,a,b,max;\n    scanf(\"%d %d\",&n,&m);\n    ara[0]=m;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    ara[n+1]=0;\n    for(j=0;j<=n;j++)\n    {\n        for(i=0;i<n;i++)\n        {\n            if(ara[i]<ara[i+1])\n            {\n                t=ara[i];\n                ara[i]=ara[i+1];\n                ara[i+1]=t;\n            }\n        }\n    }\n\n    for(i=0;i<n+1;i++)\n    {\n        dif[i] = ara[i]-ara[i+1];\n    }\n    a=dif[0];\n    max=dif[1];\n    b=dif[n];\n    for(i=1;i<n;i++)\n    {\n        if(dif[i]>max)\n            max=dif[i];\n    }\n\n    x= (float) max/2;\n    if(a>b&&a>x)\n        x=a;\n    else if(b>a&&b>x)\n        x=b;\n\n    printf(\"%f\",x);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint ara[2000],dif[2000];\nint main()\n{\n    int n,i,j,m,t;\n    float x,a,b,max;\n    scanf(\"%d %d\",&n,&m);\n    ara[0]=m;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    ara[n+1]=0;\n    for(j=0;j<=n;j++)\n    {\n        for(i=0;i<n;i++)\n        {\n            if(ara[i]<ara[i+1])\n            {\n                t=ara[i];\n                ara[i]=ara[i+1];\n                ara[i+1]=t;\n            }\n        }\n    }\n\n    for(i=0;i<n+1;i++)\n    {\n        dif[i] = ara[i]-ara[i+1];\n    }\n    a=dif[0];\n    max=dif[1];\n    b=dif[n];\n    for(i=1;i<n;i++)\n    {\n        if(dif[i]>max)\n            max=dif[i];\n    }\n\n    x= (float) max/2;\n    if(a>=b&&a>=x)\n        x=a;\n    else if(b>=a&&b>=x)\n        x=b;\n\n    printf(\"%f\",x);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7042513863216266, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 6, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "49f2a33eaf09c77789f65c37ec2c2782", "bug_code_uid": "8149b9056690848645ccfc4af37971e6", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "2576a3d95d9a3dcc7794c53561c33902", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main(){\n \n    long int n,i,k;\n    long int a[1000000001],b[1000000001];\n    long int c[10001]={0};\n \n    scanf(\"%d\",&n);\n \n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n \n     for(i=0;i<n;i++){\n        if(a[i]>b[i]){\n            while (a[i]>b[i]){\n                a[i]-=b[i];\n            }\n \n            c[i]=b[i]-a[i];\n \n        } else if(a[i]<b[i]){\n        \n \n            c[i]=b[i]-a[i];\n \n \n        } else c[i]=0;\n        \n  \n      \n    }\n \n for(i=0;i<n;i++){\n        printf(\"%d\\n\",c[i]);\n    }\n \n \n    return 0;\n}", "fixed": "#include <stdio.h>\n \nint main(){\n \n    int n,i,k;\n    int a[10001],b[10001];\n    int c[10001]={0};\n \n    scanf(\"%d\",&n);\n \n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n \n     for(i=0;i<n;i++){\n        if(a[i]>b[i]){\n            if(a[i]%b[i]==0) c[i]=0;\n            else\n            c[i]=b[i]-(a[i]%b[i]);\n \n        } else if(a[i]<b[i]){\n        \n \n            c[i]=b[i]-a[i];\n \n \n        } else c[i]=0;\n        \n        \n    }\n \n for(i=0;i<n;i++){\n        printf(\"%d\\n\",c[i]);\n    }\n \n \n    return 0;\n}"}
{"similarity_score": 0.9740458015267176, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bbc07f4244a9495db772f80af4a966fe", "bug_code_uid": "92075318f35d3c676d244f38992f50c9", "src_uid": "6fced7d8ac3dd58b1791430ada53332d", "apr_id": "9cc1f2652970bb219fcab8bd7a963dc0", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\t\r\n\twhile (t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\r\n\tint i;\t\r\n\tif(n%2)\t{\r\n\t\tfor(i=1;i<(n+1)/2;i++){\r\n\t\t\tprintf(\"%d %d \",i,n+1-i);\r\n\t\t}\r\n\t\tprintf(\"%d\",(n+1)/2);\r\n\t}\r\n\telse{\r\n\t\tfor(i=1;i<=n/2;i++){\r\n\t\t\tprintf(\"%d %d \",i,n+1-i);\r\n\t\t}\r\n\t}\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\t\r\n\twhile (t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\r\n\tint i;\t\r\n\tif(n%2)\t{\r\n\t\tfor(i=1;i<(n+1)/2;i++){\r\n\t\t\tprintf(\"%d %d \",i,n+1-i);\r\n\t\t}\r\n\t\tprintf(\"%d\",(n+1)/2);\r\n\t}\r\n\telse{\r\n\t\tfor(i=1;i<=n/2;i++){\r\n\t\t\tprintf(\"%d %d \",i,n+1-i);\r\n\t\t}\r\n\t}\r\n\tprintf(\"\\n\"); \r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.5188536953242836, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "151b70b637b6edf866b26ad2507903fe", "bug_code_uid": "c7dffcc1343c569341814c7284195e57", "src_uid": "7ac27da2546a50d453f7bb6cacef1068", "apr_id": "63a3af4135eeebdf598d87e6d03d008c", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int a,b,c,x,y;\r\n    int e,f;\r\n    scanf(\"%a%b%c%d%x%y\",&a,&b,&c,&x,&y);\r\n    e= x-a;\r\n    f=y-b;\r\n\r\n    if(e+f <c)\r\n       printf(\"Yes\");\r\n    else\r\n        printf(\"No\");\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t,i;\r\n      int a,b,c,x,y;\r\n\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n\r\n        int a,b,c,x,y;\r\n        scanf(\"%d %d %d %d %d\",&a,&b,&c,&x,&y);\r\n\r\n\r\n\r\n    if((a+b+c)<(x+y)){\r\n        printf(\"No \\n\");\r\n    }\r\n    else if(a+c>=x && b+c>=y){\r\n        printf(\"Yes \\n\");\r\n    }\r\n    else\r\n        printf(\"No \\n\");\r\n\r\n\r\n}\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9029345372460497, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ef1932371d86cf670743f7d399c4e843", "bug_code_uid": "69d4d632ceb0a5934c9f1691ea0c5fc1", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "5045d9f564454dd438cf69ee9e3cc7ed", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void) \n{\n\tint n,x,y,i;\n\tscanf(\"%d %d %d\",&n,&x,&y);\n\tif(y>n && y>=x)\n\t{\n\t\tfor(i=(n/x)+1;(i*x)<=y;i++)\n\t\t{\n\t\t\tprintf(\"%d \",(i*x-n));\n\t\t}\n\t}\n\telse\n\tprintf(\"-1\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(void) \n{\n\tint n,x,y,i,cnt=0;\n\tscanf(\"%d %d %d\",&n,&x,&y);\n\tif(y>n && y>=x)\n\t{\n\t\tfor(i=(n/x)+1;(i*x)<=y;i++)\n\t\t{\n\t\t\tprintf(\"%d \",(i*x-n));  cnt++;\n\t\t}\n\t\tif(cnt==0)\n\t\tprintf(\"-1\");\n\t}\n\telse\n\tprintf(\"-1\");\n\treturn 0;\n}"}
{"similarity_score": 0.5007032348804501, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 8, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b8ee27d8ac5ccf015f432dc4bcbfb9c0", "bug_code_uid": "ac0f3777b0e578efab79b6a8ccce3cf1", "src_uid": "b7e36ca8a96dd7951359070d4953beec", "apr_id": "a7ab439f614501521cab429a67979d4a", "difficulty": 800, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint prime(int a)\r\n{\r\n    int i;\r\n    for(i=2;i<=a/2;i++)\r\n    {\r\n        if(a%i==0) {return 0;}\r\n    }\r\n    return 1;\r\n}\r\nint main()\r\n{\r\n    int t,n,m,i,x,ans;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for(m=2;;m++)\r\n        {\r\n            if(prime(m))\r\n            {\r\n                x=n+m;\r\n                ans=prime(x);\r\n                printf(\"%d\\n\",ans);\r\n                if(ans==0) {printf(\"%d\\n\",m); break;}\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        printf(\"%d\\n\",n);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9848308051341891, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "49c196b3102f8f27596d5aee4bfc0ea2", "bug_code_uid": "f4b1ad3a797fec03c1eb61058e50bfcd", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "09926fdb8926a3b7c8fa901ed0b4a1c9", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <iostream>\r\nint main()\r\n{\r\n    int a,b,i,j,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int ar[50000],min=5000,s=0;\r\n        scanf(\"%d\",&a);\r\n        for(i=0;i<a;i++)\r\n        {\r\n        scanf(\"%d\",&ar[i]);\r\n        if(ar[i]<min)\r\n        min=ar[i];\r\n        }\r\n        for(i=0;i<a;i++)\r\n        {\r\n        if(min<ar[i])\r\n        s++;\r\n        }\r\n       printf(\"%d\\n\",s);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int ar[50000],min=5000,s=0;\r\n        scanf(\"%d\",&a);\r\n        for(i=0;i<a;i++)\r\n        {\r\n        scanf(\"%d\",&ar[i]);\r\n        if(ar[i]<min)\r\n        min=ar[i];\r\n        }\r\n        for(i=0;i<a;i++)\r\n        {\r\n        if(min<ar[i])\r\n        s++;\r\n        }\r\n       printf(\"%d\\n\",s);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9921259842519685, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "8cf6ac679067e0642a7c5481ae56be19", "bug_code_uid": "15e5192a37008b10d1a4f5aba0797f9d", "src_uid": "5e449867d9fcecc84333b81eac9b5d92", "apr_id": "46ee98e8aeda1e5a18e6ba6f7195c820", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint comp (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n\tint i,n,monitor; \n    int *p = NULL;\n\n    monitor=0;\n\n    scanf(\"%d\",&n);\n    p= malloc(n*sizeof(int));\n    for (i=0; i<n ; ++i){\n        scanf(\"%d\",&p[i]);\n    }\n\n    qsort (p, n, sizeof(int), comp);\n\n    // for (i=0; i<n ; ++i){\n    //     printf (\"%d\", p[i]);\n    // }\n\n    for (i = 0 ; i < 3 ; i++)\n        if (p[i]!=i+1){\n            printf(\"%d\\n\",i+1);\n            return 0;}\n    printf(\"4\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint comp (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n\tint i,n,monitor; \n    int *p = NULL;\n\n    monitor=0;\n\n    scanf(\"%d\",&n);\n    p= malloc(n*sizeof(int));\n    for (i=0; i<n ; ++i){\n        scanf(\"%d\",&p[i]);\n    }\n\n    qsort (p, n, sizeof(int), comp);\n\n    // for (i=0; i<n ; ++i){\n    //     printf (\"%d\", p[i]);\n    // }\n\n    for (i = 0 ; i < n ; i++)\n        if (p[i]!=i+1){\n            printf(\"%d\\n\",i+1);\n            return 0;}\n    printf(\"%d\\n\",n+1);\n    return 0;\n}"}
{"similarity_score": 0.946793997271487, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e777c010a6ffc729696b1aed60183157", "bug_code_uid": "2a66c5cfd56a9b6d307059e3017ce97f", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "5f0c60098387f1a089272feb72ea7ed6", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\nchar str[100][101];\nint i,j,n;\nscanf(\"%d\", &n);\nfor(i=0;i<=n;i++)\n gets(str[i]);\nfor(i=0;i<=n;i++)\n {for(j=0;j<=101;j++)\n   {if(str[i][j]=='\\0' && j<11)\n      {printf(\"%s\\n\", str[i]);\n       break;}\n    else if(str[i][j]=='\\0' && j>=11)\n      {printf(\"%c%d%c\\n\", str[i][0], j-2, str[i][j-1]);\n       break;}\n    }   \n  }\nreturn 0;\n}\n \n", "fixed": "#include <stdio.h>\nint main(){\nchar str[101][101];\nint i,j,n,k;\nscanf(\"%d\", &n);\nfor(i=0;i<=n;i++)\n gets(str[i]);\nfor(i=0;i<=n;i++)\n {for(j=0;j<101;j++)\n   {if(str[i][j]=='\\0' && j<11)\n      {printf(\"%s\\n\", str[i]);\n       break;}\n    else if(str[i][j]=='\\0' && j>=11)\n      {printf(\"%c%d%c\\n\", str[i][0], j-2, str[i][j-1]);\n       break;}\n    }   \n  }\nreturn 0;\n}\n \n"}
{"similarity_score": 0.49760765550239233, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "767e2f63b0ade0236c3dba4c9c0d1e8c", "bug_code_uid": "195ec7de88dfa29e3bba31aa43b9ce48", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "f272a9beb02266ac662e092d48441bc8", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tlong long int y, k, n, xMax, count = 0;\n\tscanf(\" %lld%lld%lld\", &y, &k, &n);\n\t\n\txMax = n - y;\n\t\n\tfor(long long int i = 1; i <= xMax; i++)\n\t{\n\t\tif((i+y) % k == 0)\n\t\t{\n\t\t\tprintf(\"%lld \", i);\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\telse;\n\t}\n\t\n\tif(count == 0)\tprintf(\"-1\");\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long int y, k, n, count = 0;\n\tscanf(\" %lld%lld%lld\", &y, &k, &n);\n\t\n\tfor(long long int ans = k; ans <= n; ans = ans + k)\n\t{\n\t\tif(ans <= y);\n\t\telse\n\t\t{\n\t\t\tprintf(\"%lld \", ans-y);\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\tif(count == 0)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.5559619604974396, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "9168efb63032d16fe4471ab05b08d801", "bug_code_uid": "b04835b85f2d1eb389d5a746d0746436", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "0e795d5995d4be9b7bccc95aaaf58232", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#include <string.h>\n\n\nint main()\n{\n    int n,i;\n    char a[1000000];\n    char b[1000000];\n    char c[1000000];\n    int d,p;\n    p=0;\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    n=strlen(a);\n    for(i=n-1;i>=0;i--)\n    {\n        int d=a[i]-48+b[i]-48+p;\n        c[i]=d%2+48;\n        if(d>=2)\n            p=1;\n        else \n            p=0;\n    }\n    if(c[n-1]=='1')\n        printf(\"impossible\\n\");\n    else\n    {\n        if(p==0)\n        {\n            printf(\"0\");\n            for(i=0;i<n-1;i++)\n                printf(\"%c\",c[i]);\n             printf(\"\\n\");\n        }\n        else\n        {\n            printf(\"1\");\n            for(i=0;i<n-1;i++)\n                printf(\"%c\",c[i]);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\n#include <string.h>\n\n\nint main()\n{\n    int n,i;\n    char a[1000000];\n    char b[1000000];\n    char c[1000000];\n    int d,p;\n    p=0;\n    scanf(\"%s\",a);\n    scanf(\"%s\",b);\n    n=strlen(a);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=b[i])\n        {\n            if(p%2==0)\n                c[i]=a[i];\n            else\n                c[i]=b[i];\n        \n            p++;\n        }\n        else\n            c[i]=a[i];\n    }\n    if(p%2==1)\n        printf(\"impossible\\n\");\n    else\n    {\n        for(i=0;i<n;i++)\n            printf(\"%c\",c[i]);\n    printf(\"\\n\");\n    }\n    return 0;\n}\n\n        \n\n"}
{"similarity_score": 0.9890453834115805, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "af2f0bf632e8dff264e95ff5cba65d3a", "bug_code_uid": "b4ade2489fd0e0f065f77feb76011243", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "b703b6d2c2672fcf1b8f7155f54cc325", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain(){\n  char str[250];\n  int N,cnta=0,cntd=0,i;\n  \n  scanf(\"%d\",&N);\n  getchar();\n  gets(str);\n  \n  for(i=0;i<N;i++)\n    if(str[i]=='A'){\n    cnta++;}\n  cntd=N-cnta; \n    \n  if(cnta>cntd)\n  printf(\"Anton\");\n  else if(cntd>cnta)\n  printf(\"Danik\");\n  else\n  printf(\"Friendship\");\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nmain(){\n  char str[100000];\n  int N,cnta=0,cntd=0,i;\n  \n  scanf(\"%d\",&N);\n  getchar();\n  gets(str);\n  \n  for(i=0;i<N;i++)\n    if(str[i]=='A'){\n    cnta++;}\n  cntd=N-cnta; \n    \n  if(cnta>cntd)\n  printf(\"Anton\");\n  else if(cntd>cnta)\n  printf(\"Danik\");\n  else\n  printf(\"Friendship\");\n}"}
{"similarity_score": 0.3377926421404682, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "21317d4806ef6660fd77adde1a41a376", "bug_code_uid": "1234848ef957a07c218d945b7627e37f", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "a22e619dbaac7c2d9e20e717ffe8a93c", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"iostream\"\n#include \"bits/stdc++.h\"\n     \nint main(){\n\n  long long int n;\n\n  cin>>n;\n\n  long long int sum = 0,temp;\n\n  for(int i=0;i<n;i++){\n    \n    cin>>temp;\n\n    sum+=temp;\n\n\n  }\n\n  if(sum%2==0){\n    printf(\"Second\\n\");\n  }else{\n    printf(\"First\\n\");\n  }\n\n  return 0;\n  \n} ", "fixed": "#include <stdio.h>\n     \nint main(){\n\n  long long int n;\n\n  scanf(\"%lld\",&n);\n\n  long long int sum = 0,temp;\n\n  for(long long int i=0;i<n;i++){\n    \n    scanf(\"%lld\",&temp);\n\n    if(temp%2)\n      sum+=temp;\n    \n\n\n  }\n\n  if(sum==0){\n    printf(\"Second\\n\");\n  }else{\n    printf(\"First\\n\");\n  }\n\n  return 0;\n  \n} "}
{"similarity_score": 0.41594827586206895, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "c12ad18d15e1467d9e3676936c707c87", "bug_code_uid": "f46bbdf0184bf0a78ff624e5e41ad2ce", "src_uid": "5dd0d518f315d81204b25e48fea0793a", "apr_id": "567d9d1771c05364a93b76cd1598fa14", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main(){\n    int k,d,i;\n    scanf(\"%d%d\",&k,&d);\n    char arr[k]={'\\0'};\n    if(k==d){\n        for(i=0;i<k;i++)\n            arr[i]='1';\n    }\n    else if(k<d){\n        for(i=0;i<k-1;i++)\n            arr[i]='1';\n        int a=d-k-1;\n        arr[i]=(char)a;\n    }\n    else{\n        for(i=0;i<d;i++)\n            arr[i]='1';\n        for(;i<k;i++)\n            arr[i]='0';\n    }\n    for(i=0;i<k;i++)\n        printf(\"%c\",arr[i]);\n    printf(\"\\n\");\n    return 0;\n}\n        ", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main(){\n    int k,d,i;\n    scanf(\"%d%d\",&k,&d);\n    char arr[k];\n    if(d==0) {  \n        if(k==1)\n            printf(\"0\\n\");\n        else\n            printf(\"No solution\\n\");\n    }\n    else{\n        printf(\"%d\",d);\n        for(i=1;i<k;i++)\n            printf(\"0\");\n        printf(\"\\n\");\n    }\n    return 0;\n}\n            \n            \n        "}
{"similarity_score": 0.9447761194029851, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "be31db7849f29807fb9ac55ab9e6749e", "bug_code_uid": "e8b8266ba61f313f28feede8ea7c43b7", "src_uid": "cd2519f4a7888b2c292f05c64a9db13a", "apr_id": "5c35ff94670c0cfc2ecc9707ba4c549e", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n,i,j,sum=0,non=0,digit=0,zero=0,a[10];\n    scanf(\"%d\",&t);\n    while(t>0)\n    {  scanf(\"%d\",&n);\n        i=0;\n        sum=0,non=0,digit=0,zero=0;\n       while(n>0)\n       {\n           j=n%10;\n           if(j==0)\n            zero++;\n            else \n            non++;\n            digit++;\n            a[i]=j;\n            i++;\n            n=n/10;\n       }\n       printf(\"%d\\n\",non);\n       for(i=0;i<digit;i++)\n       {\n           if(a[i]>0)\n           {\n               sum=a[i]*((int)pow(10,i));\n           printf(\"%d \",sum);\n           }\n       }\n       printf(\"\\n\");\n        t--;\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n,i,j,sum=0,non=0,digit=0,zero=0,a[10],ten=1;\n    scanf(\"%d\",&t);\n    while(t>0)\n    {  scanf(\"%d\",&n);\n        i=0;\n        sum=0,non=0,digit=0,zero=0;\n       while(n>0)\n       {\n           j=n%10;\n           if(j==0)\n            zero++;\n            else \n            non++;\n            digit++;\n            a[i]=j;\n            i++;\n            n=n/10;\n       }\n       printf(\"%d\\n\",non);\n       ten=1;\n       for(i=0;i<digit;i++)\n       {\n           if(a[i]>0)\n           {\n               sum=a[i]*ten;\n           printf(\"%d \",sum);\n           \n           }\n           ten=ten*10;\n       }\n       printf(\"\\n\");\n        t--;\n    }\n}"}
{"similarity_score": 0.3193612774451098, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7e34c6292755d4251c4234c22189d6dc", "bug_code_uid": "bd3bb0f0653ef7bf7e364f99a2ba6f2e", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "b2994bc0b5ffbf8ae836c1f3107c5431", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[4],i,t,j,s,c;\n    for(i=1;i<=4;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<4;i++)\n    {\n       for(j=1;j<=4-i;j++)\n       {\n           if(a[j]<=a[j+1])\n           {\n               t=a[j];\n               a[j]=a[j+1];\n               a[j+1]=t;\n           }\n       }\n    }\n    for(i=4;i>=2;i--)\n     {\n         s=a[1]-a[i];\n         printf(\"%d \",s);\n     }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[5],i,t,s;\n    \n    for(i=1;i<=4;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        \n    }\n    if((a[1]>=a[2])&&(a[1]>=a[3])&&(a[1]>=a[4]))\n    {\n        t=a[1];\n    }\n    else if((a[2]>=a[1])&&(a[2]>=a[3])&&(a[2]>=a[4]))\n    {\n        t=a[2];\n    }\n    else if((a[3]>=a[1])&&(a[3]>=a[2])&&(a[3]>=a[4]))\n    {\n        t=a[3];\n    }\n    else if((a[4]>=a[1])&&(a[4]>=a[2])&&(a[4]>=a[3]))\n    {\n        t=a[4];\n    }\n    for(i=1;i<=4;i++)\n    {\n        s=t-a[i];\n        if(s!=0)\n        {\n             printf(\"%d \",s);\n        }\n    }\n\n\n\n}\n"}
{"similarity_score": 0.7532133676092545, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "5572c9d05f80c5d4500f94e86ef51cc2", "bug_code_uid": "db6a77b2fc8b8cfbd465a6a2fae76e6e", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "4ac3f4c2740b24a8bd39ca740b590ee8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<7t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n    if(n>=1900)\r\n        printf(\"Division 1\");\r\n    else if(n>=1600 && n<=1899)\r\n        printf(\"Division 2\");\r\n    else if(n>=1400 && n<=1599)\r\n        printf(\"Division 3\");\r\n    else\r\n        printf(\"Division 4\");\r\n\r\n    }\r\n\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,rating,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&rating);\r\n\r\n    if(rating>=1900)\r\n        printf(\"Division 1\\n\");\r\n\r\n\r\n    if(rating>=1600 && rating<=1899)\r\n        printf(\"Division 2\\n\");\r\n\r\n\r\n    if(rating>=1400 && rating<=1599)\r\n        printf(\"Division 3\\n\");\r\n\r\n    if(rating<=1399)\r\n        printf(\"Division 4\\n\");\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n"}
{"similarity_score": 0.9284467713787086, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5eec9a98c2bd1d88aa2a850b0e6afd38", "bug_code_uid": "40dcbe85d2e691c4f53fd316d73df8a6", "src_uid": "f79a926e18a3f81b24f2fc3ae5c8f928", "apr_id": "29961cfa6786c857465bf2d2a9aee996", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n\nvoid main()\n{\n    int a;\n    scanf(\"%i\" , &a);\n    int i;\n    for(i=0 ; i<a ; i++)\n    {\n        int f;\n        int b;\n        scanf(\"%i\" , &f);\n        scanf(\"%i\" , &b);\n        int s;\n        s=2*b;\n        printf(\"%i \\n\"  , s);\n        \n    }\n    \n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int a;\n    scanf(\"%i\" , &a);\n    int i;\n    for(i=0 ; i<a ; i++)\n    {\n        int f;\n        int b;\n        scanf(\"%i\" , &f);\n        scanf(\"%i\" , &b);\n        int s;\n        s=2*b;\n        printf(\"%i \\n\"  , s);\n        \n    }\n    return 0;\n    \n}"}
{"similarity_score": 0.44149377593360994, "equal_cnt": 20, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "d6700565b35527ef7c5374559cd7b8ee", "bug_code_uid": "63b7654aa09737565d0220c90b8545a4", "src_uid": "f5de1e9b059bddf8f8dd46c18ce12683", "apr_id": "5ddd554e14ee30d23aa3b62e37d2dd0f", "difficulty": 900, "tags": ["greedy", "implementation", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"stdlib.h\"\nint main() {\n\tint t,n,i,max_index;\n\tlong long* array;\n\tlong long ans;\n\tscanf(\"%d\", &t);\n\twhile(t--) {\n\t\tscanf(\"%d\", &n);\n\t\tarray = malloc(n*sizeof(long long));\n\t\tmax_index = 0;\n\t\tans=0;\n\t\tfor(i=0;i<n;i++) {\n\t\t\tscanf(\"%lld\", &array[i]);\n\t\t\tmax_index = array[i] > array[max_index] ? i : max_index;\n\t\t}\n\t\tif(n!=1) {\n\t\t\tfor(i=0;i<n;i++) {\n\t\t\t\tif(i!=max_index && array[i]%2==0) {\n\t\t\t\t\twhile(array[i]%2==0) {\n\t\t\t\t\t\tarray[max_index] = array[max_index]*2;\n\t\t\t\t\t\tarray[i] = array[i]/2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(i=0;i<n;i++)\n\t\t\tans = ans+array[i];\n\t\tprintf(\"%lld\\n\", ans);\n\t\tfree(array);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main() {\n\tlong long t,n,i,pow,max_index,sum, *array;\n\tscanf(\"%lld\", &t);\n\twhile(t--) {\n\t\tscanf(\"%lld\", &n);\n\t\tmax_index = 0;\n\t\tpow = 1;\n\t\tsum = 0;\n\t\tarray = malloc(n*sizeof(long long));\n\n\t\tfor(i=0;i<n;i++) {\n\t\t\tscanf(\"%lld\", &array[i]);\n\t\t\twhile(array[i]%2==0) {\n\t\t\t\tpow = 2*pow;\n\t\t\t\tarray[i] = array[i]/2;\n\t\t\t}\n\t\t\t\n\t\t\tif(array[i] > array[max_index])\n\t\t\t\tmax_index = i;\n\t\t}\n\n\t\tfor(i=0;i<n;i++) {\n\t\t\tif(i==max_index)\n\t\t\t\tsum = sum + pow*array[i];\n\t\t\telse\n\t\t\t\tsum = sum + array[i];\n\t\t}\n\n\t\tprintf(\"%lld\\n\", sum);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9976851851851852, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1ed4ce765e485828d54d05e545b5c38b", "bug_code_uid": "33af31b9c2353089fb9194989d718e8a", "src_uid": "edd556d60de89587f1b8daa893538530", "apr_id": "be963681a10a7efcc5fa691af5547b93", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,m,i,k=0,s=0,z;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    char num1[m][10],num2[m][12],check[12];\n    for(i=0;i<m;i++){\n            k=0;s=0;\n        scanf(\"%s %s\",&num1[i],&check);\n\n        while(num1[i][s]!='\\0'&&check[k]!='\\0'){\n            s++;k++;\n        }if(check[k]=='\\0'&&num1[i][s]!='\\0'){\n            for(z=0;z<k;z++){\n              num2[i][z]=check[z];\n            }num2[i][k]='\\0';\n        }else {\n            for(z=0;z<s;z++){\n                num2[i][z]=num1[i][z];\n            }num2[i][s]='\\0';\n\n\n        }\n\n    }\n    char speech[10];\n    for(i=0;i<n;i++){\n            scanf(\"%s\",&check);\n        for(z=0;z<m;z++){\n            if(strcmp(num1[z],check)==0){\n                printf(\"%s \",num2[z]);\n                break;\n            }\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,m,i,k=0,s=0,z;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    char num1[m][12],num2[m][12],check[12];\n    for(i=0;i<m;i++){\n            k=0;s=0;\n        scanf(\"%s %s\",&num1[i],&check);\n\n        while(num1[i][s]!='\\0'&&check[k]!='\\0'){\n            s++;k++;\n        }if(check[k]=='\\0'&&num1[i][s]!='\\0'){\n            for(z=0;z<k;z++){\n              num2[i][z]=check[z];\n            }num2[i][k]='\\0';\n        }else {\n            for(z=0;z<s;z++){\n                num2[i][z]=num1[i][z];\n            }num2[i][s]='\\0';\n\n\n        }\n\n    }\n    char speech[12];\n    for(i=0;i<n;i++){\n            scanf(\"%s\",&check);\n        for(z=0;z<m;z++){\n            if(strcmp(num1[z],check)==0){\n                printf(\"%s \",num2[z]);\n                break;\n            }\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9944196428571429, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "09b41c432a6d32218b41f091536c2bb1", "bug_code_uid": "9805ff43cfc2f8079531919443640e21", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "383c8d9d9032ad8508507b79dc14469b", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//#include <stdio.h>\n//\n//int main(){\n//    int thickness,coordinate_second,speed_first,speed_second;\n//    scanf(\"%d %d %d %d\",thickness,coordinate_second,speed_first,speed_second);\n//\n//    double time=\n//}\n#include <stdio.h>\n\nint main(){\n    int counst_sets;\n    scanf(\"%d\",&counst_sets);\n\n    for(int step=1;step<=counst_sets;step++){\n        int sum;\n        scanf(\"%d\",&sum);\n\n        int count=sum/3;\n        if (sum%3==0){\n            int count_first=count;\n            int count_second=count;\n            printf(\"%d %d\",count_first,count_second);\n        } else if(sum%3==1){\n            int count_first=count+1;\n            int count_second=count;\n            printf(\"%d %d\",count_first,count_second);\n        } else {\n            int count_first=count;\n            int count_second=count+1;\n            printf(\"%d %d\",count_first,count_second);\n        }\n\n    }\n\n    return 0;\n\n}\n", "fixed": "//#include <stdio.h>\n//\n//int main(){\n//    int thickness,coordinate_second,speed_first,speed_second;\n//    scanf(\"%d %d %d %d\",thickness,coordinate_second,speed_first,speed_second);\n//\n//    double time=\n//}\n#include <stdio.h>\n\nint main(){\n    int counst_sets;\n    scanf(\"%d\\n\",&counst_sets);\n\n    for(int step=1;step<=counst_sets;step++){\n        int sum;\n        scanf(\"%d\\n\",&sum);\n\n        int count=sum/3;\n        if (sum%3==0){\n            int count_first=count;\n            int count_second=count;\n            printf(\"%d %d\\n\",count_first,count_second);\n        } else if(sum%3==1){\n            int count_first=count+1;\n            int count_second=count;\n            printf(\"%d %d\\n\",count_first,count_second);\n        } else {\n            int count_first=count;\n            int count_second=count+1;\n            printf(\"%d %d\\n\",count_first,count_second);\n        }\n\n    }\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.5598755832037325, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "2306fb32ecf31c8770628998268c9615", "bug_code_uid": "0d7b500fcc8764d285d697fe0835879d", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "390b60026172a5cf30ca99b6696ca0f8", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int i,j,k,l=0,a,c[100100],b;\n    scanf(\"%d%d\",&a,&b);\n    for(i=1;i<=a;i++)\n        scanf(\"%d\",&c[i]);\n    for(i=1;i<=a;i++)\n    {\n        for(j=1;j<=i;j++)\n        {\n            l++;\n            if(l==b)\n                {printf(\"%d\",c[j]);\n            break;}\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int i,j,k,l=0,a,c[100100],b,s,g;\n    scanf(\"%d%d\",&a,&b);\n    for(i=1;i<=a;i++)\n        scanf(\"%d\",&c[i]);\n        for(i=1,s=0;1;i++)\n        {\n            s=s+i;\n            if(s>=b)\n            {\n                s=s-i;\n                break;\n            }\n        }\n   g=b-s;\n   printf(\"%d\",c[g]);\n}\n"}
{"similarity_score": 0.9977678571428571, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1627d290d67ad0623a1873deed379e4c", "bug_code_uid": "ed929ceaaabaa9b0f90d51290858a3ec", "src_uid": "dd55e29ac9756325530ad2f4479d9f6d", "apr_id": "5d674dac68c3da36ed2e063128d94fec", "difficulty": 900, "tags": ["data structures", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int t;\n  scanf(\"%d\", &t);\n  while(t--)\n  {\n       int n, flg=0;\n       scanf(\"%d\", &n);\n       int a[n];\n       for(int i=0; i<n; i++)scanf(\"%d\", &a[i]);\n       for(int i=1; i<n; i++)\n        {\n            if(a[i]>a[i-1] && a[i]>a[i+1])\n                  { printf(\"YES\\n\");\n                      printf(\"%d %d %d\\n\", i, i+1, i+2); flg=1; break;}        \n        }\n       if(flg==0)printf(\"NO\\n\");\n   }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int t;\n  scanf(\"%d\", &t);\n  while(t--)\n  {\n       int n, flg=0;\n       scanf(\"%d\", &n);\n       int a[n];\n       for(int i=0; i<n; i++)scanf(\"%d\", &a[i]);\n       for(int i=1; i<n-1; i++)\n        {\n            if(a[i]>a[i-1] && a[i]>a[i+1])\n                  { printf(\"YES\\n\");\n                      printf(\"%d %d %d\\n\", i, i+1, i+2); flg=1; break;}        \n        }\n       if(flg==0)printf(\"NO\\n\");\n   }\nreturn 0;\n}\n"}
{"similarity_score": 0.9981851179673321, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e49f0c1932d5448097649ebbfc9cff70", "bug_code_uid": "0a658d4616d6ae5b9692282452e6b57e", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "e143cc83eb1a36914e8e26841b1fb1fa", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i,j,k=0,s;\n    scanf(\"%d\",&n);\n    s=n-1;\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++){\n        if(k==0){\n            if(a[i]<a[i+1])\n                s--;\n            else\n                k++;\n        }\n        else if(k==1){\n            if(a[i]>a[i+1])\n                break;\n        }\n    }\n    if(i==n-1){\n        if(a[n-1]<a[0]||k==0)\n        printf(\"%d\",s);\n        else\n             printf(\"-1\");\n    }\n    else\n        printf(\"-1\");          \n    return 0;\n}\n    ", "fixed": "#include<stdio.h>\nint main(){\n    int n,i,j,k=0,s;\n    scanf(\"%d\",&n);\n    s=n-1;\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++){\n        if(k==0){\n            if(a[i]<=a[i+1])\n                s--;\n            else\n                k++;\n        }\n        else if(k==1){\n            if(a[i]>a[i+1])\n                break;\n        }\n    }\n    if(i==n-1){\n        if(a[n-1]<=a[0]||k==0)\n        printf(\"%d\",s);\n        else\n             printf(\"-1\");\n    }\n    else\n        printf(\"-1\");          \n    return 0;\n}\n    "}
{"similarity_score": 0.997289972899729, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "38394a492047aa2bc9e522b85798e1d5", "bug_code_uid": "284259baf1aab1ab295b3641a30e6f06", "src_uid": "27ddccc777ef9040284ab6314cbd70e7", "apr_id": "03b4c9367a06c953d0195c5bd5044375", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int t,a,b;\n     scanf(\"%d\",&t);\n     for(int i=0;i<t;i++)\n     {\n          scanf(\"%d%d,&a,&b);\n          printf(\"%d\\n\",a+b);\n     }\n     return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n     int t,a,b;\n     scanf(\"%d\",&t);\n     for(int i=0;i<t;i++)\n     {\n          scanf(\"%d%d\",&a,&b);\n          printf(\"%d\\n\",a+b);\n     }\n     return 0;\n}"}
{"similarity_score": 0.24034334763948498, "equal_cnt": 21, "replace_cnt": 13, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "f2c4f975df1c8cab6556d8c57f936bb0", "bug_code_uid": "85b3e85d9e09c15cbc9dec0631c1fe10", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "37effb517e274b53c09c760374b9ecde", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    int *arr = (int *)malloc(1000 * sizeof(int));\n    int number = 1000;\n    int i = 1, j = 1;\n    while (number >= 0)\n    {\n        if (j % 3 != 0 && j % 10 != 3)\n        {\n            arr[i] = j;\n            i++;\n            number--;\n        }\n        j++;\n    }\n    int t, n;\n    scanf(\"%d\", &t);\n    // int  a = t;\n    // int *indexes = (int *)malloc(t * sizeof(int));\n    int k = 0;\n    while (t--)\n    {\n        scanf(\"%d\", &k);\n        printf(\"%d\\n\", arr[k]);\n    }\n    // for (int c = 0; c < a; c++)\n    // {\n    //     printf(\"%d\\n\", arr[indexes[c]]);\n    // }\n    // free(indexes);\n    free(arr);\n    return 0;\n}\n\t \t   \t\t      \t\t\t  \t \t   \t\t\t\t \t", "fixed": "#include<stdio.h>\nint main(){\n     int N,j=1,l;\n    int marks[3000];\n    for(int i=1;i<=3000;i++){\n            int x=i%10;\n        if(i%3==0||x==3){\n            continue;\n        }\n        else{\n            marks[j]=i;\n            j++;\n            }\n            }\n        scanf(\"%d\",&N);\n           for(int k=1;k<=N;k++){\n              scanf(\"%d\",&l);\n              printf(\"%d\\n\",marks[l]);\n           }\n\n    return 0;\n}\n\n\t\t\t\t  \t\t \t \t  \t     \t\t\t\t\t\t  \t \t"}
{"similarity_score": 0.23353819139596138, "equal_cnt": 19, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "755ae44c07e66d02f483b3ab8b2cad5a", "bug_code_uid": "eee7bcd011b72e72d5057476075d0bad", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "bd90a3ea221f612e8aa52304ae14358f", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int t,n;\n    char q[100];\n    int qn=0,an=0;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;++i){\n        over:\n        an=0;\n        qn=0;\n        scanf(\"%d\",&n);\n        scanf(\"%s\",&q);\n        for(int j=0;j<strlen(q);++j){\n            if(q[j]=='Q'){\n                qn++;\n            }else an++;\n            if(j==strlen(q)-1&&q[j]=='Q'){\n                printf(\"No\\n\");\n                if(i<t-1){\n                    ++i;\n                    goto over;\n                }else if(i==t-1){\n                    return 0;\n                }\n                \n            }\n        }\n        if(qn==an||an>qn)printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n}\n\t \t \t          \t   \t   \t \t\t\t  \t", "fixed": "#include<stdio.h>\n#include<string.h>\nchar s[100000];\nint main()\n{\n\tint t,m;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint q=0;\n\t\tscanf(\"%d\",&m);\n\t\tgetchar();\n\t\tscanf(\"%s\",s);\n\t\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\t\n\t\t\tif(s[i]=='Q')\n\t\t\t{\n\t\t\t\tq++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(q>0)\n\t\t\t\t{q--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(q>0)\n\t\t{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n\t     \t   \t       \t\t\t\t \t\t\t \t  \t"}
{"similarity_score": 0.9941634241245136, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "58a9765d8038caac948487cedb4d79d1", "bug_code_uid": "7ca20aea0f21902e26460fa3172422b9", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "e90c0f2f65d566e552c6c35e11ab479f", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n  long long int a,b,c,d,j;\n   int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n        if(b<a)\n        {\n            if(d>=c)\n                j=-1;\n            else\n            {\n                if((a-b)%(c-d)==0)\n                    j=b+c*(a-b)/(c-d);\n                else\n                    j=b+c*(((a-b)/(c-d))+1);\n            }\n        }\n        else\n            j=b;\n        printf(\"%lld\",j);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n  long long a,b,c,d,j;\n   int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n        if(b<a)\n        {\n            if(d>=c)\n                j=-1;\n            else\n            {\n                if((a-b)%(c-d)==0)\n                    j=b+c*(a-b)/(c-d);\n                else\n                    j=b+c*(((a-b)/(c-d))+1);\n            }\n        }\n        else\n            j=b;\n        printf(\"%lld\\n\",j);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.17792421746293247, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "4104d433efa1a09fef2c650f7885812e", "bug_code_uid": "a4c31f088031071fb71a7d2d23169685", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "f311365b54f9b827b2d5167cccad200a", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nvoid Integer(double p){\n if(p-round(p)==0){\n printf(\"YES\");\n }\n if(p-round(p)!=0){\n printf(\"NO\");\n }\n\n}\nint main(){\n  int n,i;\n  double a[100000000];\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++){\n  scanf(\"%lf\",&a[i]);\n  }\n  for(i=0;i<n;i++){\n  Integer(a[i]);\n  }\n\n\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\t  int n,i;\n\t\t  int a[180];\n\t\t  scanf(\"%d\",&n);\n\t\t  for(i=0;i<n;i++){\n\t\t  scanf(\"%d\",&a[i]);\n\t\t  }\n\t\t  for(i=0;i<n;i++){\n\t\t\t\t\t  if(360%(180-a[i])==0){\n\t\t\t\t\t  printf(\"YES \");\n\t\t\t\t\t  }\n\t\t\t\t\t  else if(360%(180-a[i])!=0){\n\t\t\t\t\t  printf(\"NO \");\n\t\t\t\t\t  }\n\t\t\t\t\t  printf(\"\\n\");\n\t\t  }\n\n\n}\n"}
{"similarity_score": 0.9787985865724381, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ee67da975e5ef6b4dc259c70851788ff", "bug_code_uid": "a38f8914df1bb6d5f12af8a9d608d3ff", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "f598e364c43d61dbd6c04d262afde8e8", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,a,b,last=10000,rated=0,unrated=0;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a!=b)rated=1;\n\t\tif(b > last)unrated = 1;\n\t}\n\tif(rated)printf(\"rated\\n\");\n\telse if(unrated)printf(\"unrated\\n\");\n\telse printf(\"maybe\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint n,a,b,last=10000,rated=0,unrated=0;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a!=b)rated=1;\n\t\tif(b > last)unrated = 1;\n\t\tlast = b;\n\t}\n\tif(rated)printf(\"rated\\n\");\n\telse if(unrated)printf(\"unrated\\n\");\n\telse printf(\"maybe\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.20027434842249658, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a009eae5f1aeb89e0aea42098c63c6e8", "bug_code_uid": "6f0d5f6c6ca95d6b38506fc6b850967c", "src_uid": "821d48c9a67d37ad7acc50d4d0d0d723", "apr_id": "b3a9423ed66ff9d3fb3b4725f8049d6b", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int t;\n   scanf(\"%d\", &t);\n   while(t--)\n   {\n       int a,b,c,d,x,y,z,i,j,k;\n       scanf(\"%d %d %d %d\", &a,&b,&c,&d);\n       for(i=a;i<=b;i++)\n       {\n           x=i;\n           for(j=b;j<=c;j++)\n           {\n               y=j;\n               for(k=c;k<=d;k++)\n               {\n                   z=k;\n                   if(x+y>z&&x+z>y&&z+y>x){printf(\"%d %d %d\", x,y,z);return 0;}\n               }\n           }\n       }\n\n\n\n\n\n\n\n   }\n    return 0;\n}\n", "fixed": "int main(){\nint t;\nscanf(\"%d\", &t);\nwhile(t--)\n{\nint a,b,c,d;\nscanf(\"%d %d %d %d\", &a,&b,&c,&d);\nif((a+b)/2+(c+b)/2<=d){printf(\"%d %d %d\\n\", (a+b)/2,c,c);}\nelse printf(\"%d %d %d\\n\", (a+b)/2,(c+b)/2,c);\n    \n    \n    \n}\n}"}
{"similarity_score": 0.6745796241345203, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "25f43e2d1d23b31c20499ac66607a5c2", "bug_code_uid": "3e395e6945bd54458cd0c2050b64c0d5", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "99113bbe8a148f4aa138ff60a9deca51", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nchar s[100000][32];\nint ss[100000];\nint main()\n{\n    int n, i, j, flag = 0;\n    \n    scanf(\"%d\", &n);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%s\", s[i]);\n        for(j=0; j<i; j++){\n            if(strcmp(s[i], s[j]) == 0) ss[i] = ss[j] + 1;\n        }\n         if(ss[i] == 0) printf(\"OK\\n\");\n        else printf(\"%s%d\\n\", s[i], ss[i]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nchar ts[33];\nchar s[100001][33];\nint ss[100001];\nint main()\n{\n    int n, i, j, flag = 0, k = 0;\n    \n    scanf(\"%d\", &n);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%s\", ts);\n        \n        for(j=0; j<k; j++){\n            if(strcmp(ts, s[j]) == 0){\n                flag = 1;\n                ss[j]++;\n                break;\n            }\n        }\n        \n        if(flag == 0){\n            strcpy(s[k], ts);\n            k++;\n            printf(\"OK\\n\");\n        }\n        else{\n            printf(\"%s%d\\n\", ts, ss[j]);\n            flag = 0;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9923664122137404, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5003f54cbd581262416f7d67342b9dd4", "bug_code_uid": "a3c1dabdea339eefcd994b2fa24f3ea5", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "55b9b9bb48b28fee062f1b40279e0673", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[100][100],b[100],temp;\nint main()\n{\n\tint n,v;\n\tscanf(\"%d%d\",&n,&v);\n\tint i,j;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i][0]);\n\t\tfor(j=1;j<=a[i][0];j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tint flag=0,flag1=0,k=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tflag=0;\n\t\tfor(j=1;j<=a[i][0];j++)\n\t\t{\n\t\t\tif(a[i][j]<v)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tb[k++]=a[i][0];\n//\t\t\tflag1=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",k);\n\tfor(i=0;i<k-1;i++)\n\t{\n\t\tfor(j=0;j<k-i-1;j++)\n\t\t{\n\t\t\tif(b[j]>b[j+1])\n\t\t\t{\n\t\t\t\ttemp=b[j+1];\n\t\t\t\tb[j+1]=b[j];\n\t\t\t\tb[j]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<k;i++)\n\t\tprintf(\"%d \",b[i]);\n//\tif(flag1!=1)\n//\t\tprintf(\"0\");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\t\n\n", "fixed": "#include<stdio.h>\nint a[100][100],b[100],temp;\nint main()\n{\n\tint n,v;\n\tscanf(\"%d%d\",&n,&v);\n\tint i,j;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i][0]);\n\t\tfor(j=1;j<=a[i][0];j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tint flag=0,flag1=0,k=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tflag=0;\n\t\tfor(j=1;j<=a[i][0];j++)\n\t\t{\n\t\t\tif(a[i][j]<v)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==1)\n\t\t{\n\t\t\tb[k++]=i+1;\n//\t\t\tflag1=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",k);\n\tfor(i=0;i<k-1;i++)\n\t{\n\t\tfor(j=0;j<k-i-1;j++)\n\t\t{\n\t\t\tif(b[j]>b[j+1])\n\t\t\t{\n\t\t\t\ttemp=b[j+1];\n\t\t\t\tb[j+1]=b[j];\n\t\t\t\tb[j]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<k;i++)\n\t\tprintf(\"%d \",b[i]);\n//\tif(flag1!=1)\n//\t\tprintf(\"0\");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\t\n\n"}
{"similarity_score": 0.4283185840707965, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "09bdc2d159d690ce6cba3cf2203f3c8e", "bug_code_uid": "0c2d64dbe613d80d80a17520a0cc4beb", "src_uid": "6e5b4d43e64645cf26d5eac31437b1a9", "apr_id": "1ca85667c4dc2209f6c642dca0aaaf2b", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t, n, i;\n\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        scanf(\"%d\", &n);\n        long long int s=0, c=0;\n        int a[n+1], f=0, r=0;\n\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\", &a[i]);\n            s+=a[i];\n            if(a[i]<0){ r++; }\n        }\n        if(r==0)\n        {\n            printf(\"YES\\n\");\n        }\n        else if(a[0]<0 || a[n-1]<0)\n        {\n            printf(\"NO\\n\");\n        }\n        else\n        {\n            for(i=0; i<n; i++)\n            {\n                if(a[i]>0)\n                {\n                    c+=a[i];\n                }\n                else\n                {\n                    c=0;\n                }\n                if(c>=s)\n                {\n                    printf(\"NO\\n\");\n                    f=1; break;\n                }\n            }\n            if(f==0)\n            {\n                printf(\"YES\\n\");\n            }\n        }\n        \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"test.in\",\"r\",stdin);\n        freopen(\"test.out\",\"w\",stdout);\n    #endif\n    int t, n, i;\n\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        scanf(\"%d\", &n);\n        long long int s=0, c=0;\n        int a[n+1], f=0, r=0;\n\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\", &a[i]);\n            s+=a[i];\n\n            if(s<=0){\n                f++;\n            }\n        }\n        for(i=n-1; i>=0; i--)\n        {\n            c+=a[i];\n            if(c<=0){\n                f++;\n            }\n        }\n        if(f>0)\n        {\n            printf(\"NO\\n\");\n        }\n        else\n        {\n            printf(\"YES\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.0784313725490196, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "04a27258ce30e4c633c176aee94ea5a6", "bug_code_uid": "d042329df45401a9489ac570e544b26c", "src_uid": "474f29da694929a64eaed6eb8e4349c3", "apr_id": "662a5425d8cb5a118b7196e31c37f742", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h> \nint main()\n{\nint t;\nint n,x,y,d;\nfloat   ans=99999.0,ans1=0.0,ans2=0.0;\nscanf(\"%d\" ,&t);\nprintf(\" first condition %d\",abs(y-x));\n\twhile (t>0)\n{\tscanf(\"%d\" \"%d\" \"%d\" \"%d\" ,&n,&x,&y,&d);\n\tprintf(\" first condition %d\",abs(5));\n if (abs(y-x)%d==0)\n   {\n\t   ans=abs(y-x)/d;\n\t   printf(\"first condition %f\",ans);\n }\n else\n\t{\n\t\tif ((y-1)%d==0)\n\tans1=(x-1)/d+(y-1)/d+1;\n    if((n-y)%d==0)\n\tans2=(n-x)/d+(n-y)/d+1;\n\tif (ans1<ans2)\n\tans=ans1;\n\telse\n\tans=ans2;\n\t printf(\"first condition %f %f %f\",ans,ans1,ans2);\n}\nif (ans==99999)\nans=-1;\nprintf(\"%f\",ans);\n}\n return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int t,j;\n    scanf(\"%d\",&t);\n    long long n,x,y,d,ans,ans1,ans2;\n    for(j=0;j<t;j++)\n    {\n        ans=0,ans1=0,ans2=0;\n        scanf(\"%I64d%I64d%I64d%I64d\",&n,&x,&y,&d);\n        if(abs(x-y)%d==0)\n        ans=abs(x-y)/d;\n        else\n        {\n            if((y-1)%d==0)\n            {\n                ans1=((x-1)/d)+(y-1)/d;\n                if((x-1)%d!=0)\n                ans1++;\n            }\n            if((n-y)%d==0)\n            {\n                ans2=((n-x)/d)+(n-y)/d;\n                if((n-x)%d!=0)\n                ans2++;\n            }\n            if(ans1!=0 && ans2==0)\n            ans=ans1;\n            else if(ans1==0 && ans2!=0)\n            ans=ans2;\n            else if(ans1!=0 && ans2!=0)\n            {\n                if(ans1>ans2)\n                ans=ans2;\n                else\n                ans=ans1;\n            }\n            else\n            ans=-1;\n            \n        }\n        printf(\"%lld\\n\",ans);\n    }\n}\n"}
{"similarity_score": 0.9949748743718593, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8618e1f623702d60fe006d896ff8f217", "bug_code_uid": "cc848730101e98a7d8888dcc833f70e5", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "f88ae6ae64bafa75e25ecde49202c2c7", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\t\r\nint t,a,b;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\n\r\n\tscanf(\"%d %d\",&a,&b);\r\n\tif(a==0){\r\n\tprintf(\"1\");\r\n\t}\r\n\telse\r\n\t{\r\n\tprintf(\"%d\\n\",((a*1)+(b*2)+1));\r\n\t}\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\t\r\nint t,a,b;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\n\r\n\tscanf(\"%d %d\",&a,&b);\r\n\tif(a==0){\r\n\tprintf(\"1\\n\");\r\n\t}\r\n\telse\r\n\t{\r\n\tprintf(\"%d\\n\",((a*1)+(b*2)+1));\r\n\t}\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.5910204081632653, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "33a5a91be51f6c94386474556f0546aa", "bug_code_uid": "87791d8be299e14270caf6eb0a6512b5", "src_uid": "b6a7e8abc747bdcee74653817085002c", "apr_id": "15c90344b52413e6ecf8a84691a8a932", "difficulty": 1300, "tags": ["geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n\tlong long int n,x,d,i,j,a[100000],t,flag,sum,min,k,max;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t    k=-1;\n\t    min=1000000000;\n\t\tscanf(\"%lld%lld\",&n,&x);\n\t\tfor(i=0,max=0;i<n;i++)\n\t\t{\tscanf(\"%lld\",&a[i]);\n\t\t    if(a[i]>max)\n                max=a[i];\n\t\t}\n\t\tif(max>x)\n            printf(\"2\\n\");\n        else if(max==x)\n            printf(\"1\\n\");\n        else\n        {\n            if(x%max==0)\n                printf(\"%lld\\n\",x/max);\n            else\n                printf(\"%lld\\n\",x/max+1);\n        }\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n\tlong long int n,x,d,i,j,a[100000],t,flag,sum,min,k,max;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t    k=-1;\n\t    min=1000000000;\n\t    flag=0;\n\t\tscanf(\"%lld%lld\",&n,&x);\n\t\tfor(i=0,max=0;i<n;i++)\n\t\t{\tscanf(\"%lld\",&a[i]);\n\t\t    if(a[i]>max)\n                max=a[i];\n            if(a[i]>x&&min>2)\n                min=2;\n            else if(a[i]==x)\n                min=1;\n\t\t}\n\t\tif(min!=1&&min!=2)\n        {\n            if(x%max==0)\n            k=x/max;\n        else\n            k=x/max+1;\n        if(k<min)\n            min=k;\n        }\n        printf(\"%d\\n\",min);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9973890339425587, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9870699be4f281548c119ff0847c46ad", "bug_code_uid": "53718814bc57b787ec47e636cda4cd7a", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "fbd542862a6535c6a99b81d5f90e794c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int a,b,d;\n    char c;\n    scanf(\"%d\",&d);\n    a=0;\n    b=0;\n    for(int i=1 ; i<=d ; i++)\n    {\n        scanf(\"%c\",&c);\n        if(c=='D')\n        b++;\n        else if(c=='A')\n        a++;\n    }\n    if(a>b)\n    printf(\"Anton\");\n    else if(a<b)\n    printf(\"Danik\");\n    else if(a==b)\n    printf(\"Friendship\");\n\treturn 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int a,b,d;\n    char c;\n    scanf(\"%d\",&d);\n    a=0;\n    b=0;\n    for(int i=0 ; i<=d ; i++)\n    {\n        scanf(\"%c\",&c);\n        if(c=='D')\n        b++;\n        else if(c=='A')\n        a++;\n    }\n    if(a>b)\n    printf(\"Anton\");\n    else if(a<b)\n    printf(\"Danik\");\n    else if(a==b)\n    printf(\"Friendship\");\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.7733812949640287, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "b53704372088fae45f1574a296e8ff1b", "bug_code_uid": "2385459e7b8598bb3133ce924bc43636", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "ad843946896cc7556d7a6354696f1893", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   unsigned long long int a[100010],b[100010],i,j,n,k,count=1,c=1;\n   scanf(\"%llu\",&n);\n   for(i=0;i<n;i++)\n   {\n       scanf(\"%llu%llu\",&a[i],&b[i]);\n\n   }\n   for(i=0;i<n;)\n   {\n       j=i+1;\n       c=1;\n           while(a[i]==a[j]&&b[i]==b[j])\n           {\n               c++;\n                j=j+1;\n               if(c>count)\n              {\n                  count++;\n              }\n               continue;\n           }\n           i=j;\n\n   }\n   printf(\"%llu\\n\",count);\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   unsigned long long int a[100010],b[100010],i,j,n,k,count=1,c=1;\n   scanf(\"%llu\",&n);\n   for(i=0;i<n;i++)\n   {\n       scanf(\"%llu%llu\",&a[i],&b[i]);\n\n   }\n\n   for(i=0;i<n;)\n   {\n       j=i+1;\n       c=1;\n           while(a[i]==a[j]&&b[i]==b[j]&&j<n)\n           {\n               c++;\n                 j=j+1;\n               if(c>count)\n              {\n                 // printf(\"%llu\\n\",count);\n                  count++;\n              }\n              else\n               continue;\n           }\n           i=j;\n\n   }\n   printf(\"%llu\\n\",count);\n   return 0;\n}\n"}
{"similarity_score": 0.987012987012987, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "098ef6cc41c3d3e4a748be8b76e125c5", "bug_code_uid": "d4b73119a51087c9eb248b15f140a9c1", "src_uid": "98a8fc06e8265bbf9c16ee3c7b9d0223", "apr_id": "10b805cd1875683f0ef8dd67b864d715", "difficulty": 900, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "a,b,c,k,i,j,A,B,C;main(t){for(scanf(\"%d\",&t);~scanf(\"%d%d%d\",&a,&b,&c);printf(\"%d \",t))for(t=j=0;128/++j;A>a|B>b|C>c|k<t?:t=k)for(k=A=B=C=i=0;++i<8;)j>>(i-1)&1?A+=i&1,B+=i/2&1,C+=i/4&1,++k:0;}", "fixed": "a,b,c,k,i,j,A,B,C;main(t){for(scanf(\"%d\",&t);~scanf(\"%d%d%d\",&a,&b,&c);printf(\"%d \",t))for(t=j=0;128/++j;t=A>a|B>b|C>c|k<t?t:k)for(k=A=B=C=i=0;++i<8;)j>>(i-1)&1?A+=i&1,B+=i/2&1,C+=i/4&1,++k:0;}"}
{"similarity_score": 0.6778783958602846, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e487a329304ac72ef9417a699cb563d0", "bug_code_uid": "392b8611eeee0a81bc2d10398682ac73", "src_uid": "586a15030f4830c68f2ea1446e80028c", "apr_id": "e63fa157252364e04938a0d7eb5d2804", "difficulty": 1000, "tags": ["two pointers", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nchar s[505];\n\nint arr[150];\n\nint main()\n{\n\tint t,i,n,k,j;\n\tchar temp;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{ \n\t\tscanf(\"%s\",s);\n                for(i=97;i<150;i++)\n\t\t{\n\t\t\tarr[i]=0;\n\t\t}\n\t\tn=strlen(s);\n\t\t\n\t\tif(n==1)\n\t\t{\n\t\t\n\t\t\tprintf(\"%c\\n\",s[0]);\n\t\t\tcontinue;\n\t\t}\n                if(s[0]!=s[1])\n\t\t{\n\t\t\tarr[s[0]]++;\n\t\t\ti=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti=2;\n\t\t}\n\t        \n\t\twhile(i<n-1)\n\t\t{\n\t\t\tif(s[i]!=s[i+1])\n\t\t\t{\n                              arr[s[i]]++;\n\t\t\t      \n\t\t\t      i++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti+=2;\n\t\t\t}\n\n\t\t}\n\t\tif(s[n-1]!=s[n-2])\n\t\t\t{\n\t\t\t\tarr[s[n-1]]++;\n\t\t\t}\n\t\t\tfor(i=97;i<150;i++)\n\t\t\t{\n\t\t\t\tif(arr[i]>=1)\n\t\t\t\t{\n                                     printf(\"%c\",(char)i);\n\t\t\t\t}\n                        }\n                       printf(\"\\n\");\n\t}\n    return 0;\n   }\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nchar s[505];\n\nint arr[150];\n\nint main()\n{\n\tint t,i,n,k,j;\n\tchar temp;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{ \n\t\tscanf(\"%s\",s);\n                for(i=97;i<150;i++)\n\t\t{\n\t\t\tarr[i]=0;\n\t\t}\n\t\tn=strlen(s);\n\t\t\n\t\tif(n==1)\n\t\t{\n\t\t\n\t\t\tprintf(\"%c\\n\",s[0]);\n\t\t\tcontinue;\n\t\t}\n                 for(i=0;i<n;)\n\t\t {\n\t\t\t temp=s[i];\n\t\t\t k=0;\n\t\t     while(i<n)\n\t\t     {\n\t\t\t     if(s[i]!=temp)\n\t\t\t     {\n\t\t\t\t     break;\n\t\t\t    }\n\t\t\t     k++;\n\t\t             i++;\n\t             }\n\t\t     if(k&1==1)\n\t\t     {\n\t\t\t     arr[s[i-1]]++;\n\t\t     }\n\t\t }\n\n\t\t\tfor(i=97;i<150;i++)\n\t\t\t{\n\t\t\t\tif(arr[i]>=1)\n\t\t\t\t{\n                                     printf(\"%c\",(char)i);\n\t\t\t\t}\n                        }\n                       printf(\"\\n\");\n\t}\n    return 0;\n   }\n\n\n"}
{"similarity_score": 0.7970615243342516, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0904ffb6657815287c39a17659a4feea", "bug_code_uid": "cc919d6e8d141f12bf200cffe51cf56e", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "16f4dfe3e7a568bd0b41a1fc7d2ddee0", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\n\n\nint main()\n{\n\tint n,temp,cnt=0,ans=0,sum=0,a[100],i,j;\n\tscanf(\"%d\",&n);\n\tif(n>=1 && n<=100)\n        {\n\tfor(i=0;i<n;i++){\n\tfscanf(stdin,\"%d\",&a[i]);\n\tsum= sum+a[i];\t\n\tif(a[i]<1 || a[i]>100)\n\treturn 0;\n\telse continue;\n\t}\n\t\n sum = sum/2;\n\n int j=0;\n while(ans<=sum)\n\t{\t++cnt;\n\t\tans=ans+a[j];\n\t\tj++;\n        }\nprintf(\"%d\",cnt);\n\t\t\n\treturn 0;\n}\t\nelse\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\n\n\nint main()\n{\n\tint n,temp,cnt=0,ans=0,sum=0,a[100],i,j;\n\tscanf(\"%d\",&n);\n\tif(n>=1 && n<=100)\n        {\n\tfor(i=0;i<n;i++){\n\tfscanf(stdin,\"%d\",&a[i]);\n\tsum= sum+a[i];\t\n\tif(a[i]<1 || a[i]>100)\n\treturn 0;\n\telse continue;\n\t}\n\tfor(i=0;i< n;i++)\n    {\n        for(j=i+1;j< n;j++)\n        {\n            if(a[i]< a[j])\n            {\n                temp    =a[i];\n                a[i]  =a[j];\n                a[j]  =temp;\n            }\n        }\n    }\n sum = sum/2;\n\n int j=0;\n while(ans<=sum)\n\t{\t++cnt;\n\t\tans=ans+a[j];\n\t\tj++;\n        }\nprintf(\"%d\",cnt);\n\t\t\n\treturn 0;\n}\t\nelse\nreturn 0;\n}\n\n"}
{"similarity_score": 0.996832101372756, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7fdeb4331d18bd04b81b7b47aec7b42f", "bug_code_uid": "006b993493e10d5ac846e6e2599f1be2", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "939d20a69102152ab0c0554465c315ba", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint main()\n{\n\n  int n;\n  scanf(\"%d\",&n);\n\n  int a[n];\n\n  for(int i=0;i<n;i++)\n  {\n    scanf(\"%d\",&a[i]);\n  }\n  int count=1;\nint record=1;\nint c[100000000],h=0;\n  for(int i=0;i<n;i++)\n  {\n    if(a[i]==count) count++;\n    else\n    {\n      c[h]=count-1;\n      h=h+1;\n      record++;\n      count=1;\n      i=i-1;\n    }\n\n    c[h]=count-1;\n\n}\n    printf(\"%d\\n\",record);\n\n    for(int i=0;i<record;i++)\n    {\n      printf(\"%d \",c[i]);\n    }\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint main()\n{\n\n  int n;\n  scanf(\"%d\",&n);\n\n  int a[n];\n\n  for(int i=0;i<n;i++)\n  {\n    scanf(\"%d\",&a[i]);\n  }\n  int count=1;\nint record=1;\nint c[100000],h=0;\n  for(int i=0;i<n;i++)\n  {\n    if(a[i]==count) count++;\n    else\n    {\n      c[h]=count-1;\n      h=h+1;\n      record++;\n      count=1;\n      i=i-1;\n    }\n\n    c[h]=count-1;\n\n}\n    printf(\"%d\\n\",record);\n\n    for(int i=0;i<record;i++)\n    {\n      printf(\"%d \",c[i]);\n    }\n\n\n}\n"}
{"similarity_score": 0.43956043956043955, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8748613181fe82edc8c5fed02e184be3", "bug_code_uid": "43743f0b977420a2fd76393290f85ce4", "src_uid": "a0a6cdda2ce201767bf5418f445a44eb", "apr_id": "8ec659f41c050cac31d7e2bf998a1d15", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (){\n  int n,c=0;\n  scanf(\"%d\", &n);\n  int a[n];\n\n  for(int i=0; i<n; i++)\n    scanf(\"%d\", &a[i]);\n\n  if(n%2 != 0){\n    for(int i=0; i<n; i+=2){\n      if(a[i] != a[n-1])\n        c++;\n    }\n  }\n  else\n  {\n    for(int i=1; i<n; i+=2){\n      if(a[i] != a[n-1])\n        c++;\n    }\n  }\n  printf(\"%d\\n\", c);\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main (){\n  int n,c=0,d=0;\n  scanf(\"%d\", &n);\n  int a[n];\n\n  for(int i=0; i<n; i++)\n    scanf(\"%d\", &a[i]);\n\n  for(int i=0; i<n; i++){\n    if(a[i] % 2 ==0)\n      c++;\n    else\n      d++;\n  }\n  if(c>d)\n    printf(\"%d\\n\", d);\n  else\n    printf(\"%d\\n\", c);\n\n  return 0;\n}\n"}
{"similarity_score": 0.8913043478260869, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3c413ebc5a6f15415f1cf1fe004ca682", "bug_code_uid": "621135fecf417e655a125548098f8d11", "src_uid": "86a2e0854f9faf0b119d0d5e4b8fe952", "apr_id": "7bf9fc8df1e52e277a58a701e9cf8459", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j,flag=0;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        char a[101];\r\n        char b[101];\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",a);\r\n        scanf(\"%s\",b);\r\n        for(i=0; i<n; i++)\r\n        {\r\n            if(a[i]=='R'&&b[i]!='R'||a[i]!='R'&&b[i]=='R')\r\n            {\r\n                flag=1;\r\n                break;\r\n            }\r\n             else if(a[i]=='G'&&b[i]=='B'||a[i]=='B'&&b[i]=='G')\r\n            {\r\n                flag=0;\r\n            }\r\n        }\r\n        if(flag==1)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j,flag;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        flag=0;\r\n        char a[101];\r\n        char b[101];\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",a);\r\n        scanf(\"%s\",b);\r\n        for(i=0; i<n; i++)\r\n        {\r\n            if(a[i]=='R'&&b[i]!='R'||a[i]!='R'&&b[i]=='R')\r\n            {\r\n                flag=1;\r\n                break;\r\n            }\r\n\r\n        }\r\n        if(flag==1)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9386590584878745, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "194400ec39d0b122379a0c18c0de70aa", "bug_code_uid": "8f82f5ca97c45e8427655768497e0ec8", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "0ef04a74e2599c9bb5c3e4026a360f2a", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\", &n);\n\tint x[110000], h[110000];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\", &x[i], &h[i]);\n\t}\n\tint count=1;\n\tfor(i=1;i<n-1;i++)\n\t{\n\t\tif((x[i]-h[i])>x[i-1])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if((x[i]+h[i])<x[i+1])\n\t\t{\n\t\t\tcount++;\n\t\t\tx[i]+=h[i];\n\t\t}\n\t}\n\tprintf(\"%d\", count+1);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\", &n);\n\tint x[110000], h[110000];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\", &x[i], &h[i]);\n\t}\n\tif(n==1)\n\t{\n\t\tprintf(\"1\");\n\t\treturn 0;\n\t}\n\tint count=1;\n\tfor(i=1;i<n-1;i++)\n\t{\n\t\tif((x[i]-h[i])>x[i-1])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if((x[i]+h[i])<x[i+1])\n\t\t{\n\t\t\tcount++;\n\t\t\tx[i]+=h[i];\n\t\t}\n\t}\n\tprintf(\"%d\", count+1);\n\treturn 0;\n}"}
{"similarity_score": 0.957286432160804, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e99116653d28965fd86d990f6fcdf8fe", "bug_code_uid": "bcd70910d502ecf89aa277beff9bec26", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "275298cb913bff56ac4a3bb62addf6c2", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main ()\n{\n    int a , b , c , sum = 0, t , cnt = 0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        sum=0;\n        cnt=0;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        while(sum<=c)\n        {\n           sum=a+b;\n           b=a;\n           a=sum;\n           cnt++;\n        }\n        printf(\"%d\\n\",cnt);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define max(a,b) a>b?a:b\nint main ()\n{\n    int a , b , c , sum = 0, t , cnt = 0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        sum=0;\n        cnt=0;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        while(sum<=c)\n        {\n           sum=a+b;\n           b=max(a,b);\n           a=sum;\n           cnt++;\n        }\n        printf(\"%d\\n\",cnt);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9620098039215687, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "456698cfdd3f7ac316e9ddfbb5c03a75", "bug_code_uid": "7d584af30d56b66db4376b5fe7d0db53", "src_uid": "9fd8e75cb441dc809b1b2c48c4012c76", "apr_id": "73a775b4c4f809b9445a99f77c97d4c7", "difficulty": 1500, "tags": ["two pointers", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\tint n;\n\tint m;\n\tint tmp;\n\tint tmpMin=2100000000;\n\tint tmpMax=0;\n\tint *arrN;\n\tint *arrM;\n\tscanf(\"%d %d\", &n, &m);\n\n\tarrN = (int*)malloc(sizeof(int)*n);\n\tarrM = (int*)malloc(sizeof(int)*m);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &arrN[i]);\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\tscanf(\"%d\", &arrM[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\ttmpMin = 2100000000;\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (arrN[i] < arrM[j]) tmp = arrM[j] - arrN[i];\n\t\t\telse tmp = arrN[i] - arrM[j];\n\n\t\t\tif (tmp > tmpMin) break;\n\t\t\telse {\n\t\t\t\ttmpMin = tmp;\n\t\t\t}\n\t\t}\n\t\tif (tmpMin > tmpMax) {\n\t\t\ttmpMax = tmpMin;\n\t\t\ttmp = arrN[i] + tmpMax + tmpMax;\n\t\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\t\tif (arrN[j] > tmp) break;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", tmpMax);\n\treturn 0;\n\n}", "fixed": "\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\tint n;\n\tint m;\n\tint j;\n\tint tmp;\n\tint tmpMin=2100000000;\n\tint tmpMax=0;\n\tint *arrN;\n\tint *arrM;\n\tscanf(\"%d %d\", &n, &m);\n\tj = 0;\n\tarrN = (int*)malloc(sizeof(int)*n);\n\tarrM = (int*)malloc(sizeof(int)*m);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &arrN[i]);\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\tscanf(\"%d\", &arrM[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\ttmpMin = 2100000000;\n\t\tfor (; j < m; j++) {\n\t\t\tif (arrN[i] < arrM[j]) tmp = arrM[j] - arrN[i];\n\t\t\telse tmp = arrN[i] - arrM[j];\n\n\t\t\tif (tmp > tmpMin) break;\n\t\t\telse {\n\t\t\t\ttmpMin = tmp;\n\t\t\t}\n\t\t}\n\t\tif (tmpMin > tmpMax) {\n\t\t\ttmpMax = tmpMin;\n\t\t\ttmp = arrN[i] + tmpMax + tmpMax;\n\t\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\t\tif (arrN[j] > tmp) break;\n\t\t\t}\n\t\t}\n\t\tj--;\n\t}\n\tprintf(\"%d\", tmpMax);\n\treturn 0;\n\n}"}
{"similarity_score": 0.23636363636363636, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "b3f85cc5bb2f6110b9846f1efe93389d", "bug_code_uid": "456eb84922774c0811163a352437b86b", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "dafe3e15a092cb8af3bc1b5114d823b9", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong long int i,j,k,l=0,l1=0,l2=0;\nchar s[200000];\nscanf(\"%s\",s);\ni=0;\nj=strlen(s)-1;\nwhile(j-i>=3)\n{\n    if((s[i]=='A'&&s[j]=='A'&&s[i+1]=='B'&&s[j-1]=='B')||(s[i]=='B'&&s[j]=='B'&&s[i+1]=='A'&&s[j-1]=='A'))\n    {\n        l++;\n        break;\n    }\n    else if((s[i]=='A'&&s[i+1]=='B')||(s[i]=='B'&&s[i+1]=='A'))\n        j--;\n    else if((s[j]=='A'&&s[j-1]=='B')||(s[j]=='B'&&s[j-1]=='A'))\n        i++;\n}\nprintf(\"%s\",l==1?\"YES\":\"NO\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar s[200000];\n\nint main()\n{\nlong long int i,j,k,l=0,l1=0,l2=0,c1=-1,c2=-1,c3=-1,c4=-1,m1=0,m2=0;\nscanf(\"%s\",s);\ni=0;\nj=strlen(s)-1;\nfor(i=0;i<j;i++)\n{\n    if(l1&&l2)\n        break;\n        else if(s[i]=='A'&&s[i+1]=='B'&&l1==0)\n        {\n            l1++;\n            c1=i;\n        }\n        else if(s[i]=='B'&&s[i+1]=='A'&&l2==0)\n        {\n            l2++;\n            c2=i;\n        }\n\n}\nl1=0;\nl2=0;\nfor(i=j;i>0;i--)\n{\n    if(l1&&l2)\n        break;\n     else if(s[i]=='A'&&s[i-1]=='B'&&l1==0)\n        {\n            l1++;\n            c3=i;\n        }\n        else if(s[i]=='B'&&s[i-1]=='A'&&l2==0)\n        {\n            l2++;\n            c4=i;\n        }\n}\nif(c1>=0&&c3>=0)\nm1=c1>c3?c1-c3:c3-c1;\nif(c2>=0&&c4>=0)\nm2=c2>c4?c2-c4:c4-c2;\nprintf(\"%s\",(m1>2||m2>2)?\"YES\":\"NO\");\nreturn 0;\n}\n"}
{"similarity_score": 0.9424390243902439, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "53bf0a91f7a3efaaf00d384c271ac5e4", "bug_code_uid": "2ad06447fc560d706b8b3971659b8f77", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "19cc3e6a617240c67af924a42104bc4f", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tlong long int k, i, sum, sum1, t, n, x, ara[100000];\r\n\tscanf(\"%lld\", &t);\r\n\t\r\n\tfor( ; 1<=t; t--)\r\n\t{\r\n\t\tscanf(\"%lld%lld\", &n, &x);\r\n\t\tsum=0;\r\n\t\tsum1=0;\r\n\t\tfor(i=0; i<n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%lld\", &ara[i]);\r\n\t\t\tsum=sum+ara[i];\r\n\t\t\tif(ara[i]%x==0)\r\n\t\t\t{\r\n\t\t\t\tk=ara[i]/x;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tk=(ara[i]/x)+1;\r\n\t\t\t}\r\n\t\t\tsum1=sum1+k;\r\n\t\t}\r\n\t\t\r\n\t\tsum=sum/x;\r\n\t\t\r\n\t\tprintf(\"%lld %lld\\n\", sum, sum1);\r\n\t}\r\n\t\t\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tlong long int k, i, sum, sum1, t, n, x, ara[100000];\r\n\tscanf(\"%lld\", &t);\r\n\t\r\n\tfor( ; 1<=t; t--)\r\n\t{\r\n\t\tscanf(\"%lld%lld\", &n, &x);\r\n\t\tsum=0;\r\n\t\tsum1=0;\r\n\t\tfor(i=0; i<n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%lld\", &ara[i]);\r\n\t\t\tsum=sum+ara[i];\r\n\t\t\tif(ara[i]%x==0)\r\n\t\t\t{\r\n\t\t\t\tk=ara[i]/x;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tk=(ara[i]/x)+1;\r\n\t\t\t}\r\n\t\t\tsum1=sum1+k;\r\n\t\t}\r\n\t\tif(sum%x==0)\r\n\t\t{\r\n\t\tsum=sum/x;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsum=(sum/x)+1;\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%lld %lld\\n\", sum, sum1);\r\n\t}\r\n\t\t\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n}"}
{"similarity_score": 0.9934640522875817, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "887901df61b3cc182ab4011dea546028", "bug_code_uid": "0a9c643fceb41410367aa4f0f7edb3cc", "src_uid": "4f3bec9c36d0ac2fdb8041469133458c", "apr_id": "68456bd4a0052c1802e45bb664f7972d", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) \n{\n\tchar arr[8][8],temp[9];\n\tint pos[2][2];\n\tint i,n,j,k;\n\tscanf(\"%d\\n\",&n);\n\twhile(n!=0)\n\t{\n\t\tk=0;\n\t\tfor(i=0;i<8;i++)\n\t\t{\n             scanf(\"%s\",temp);\n\t\t\tfor(j=0;j<8;j++)\n\t\t\t{\n                  arr[i][j]=temp[j];\n\t\t\t\t\n\t\t\t\t//scanf(\"%c\",&arr[i][j]);\n\t\t\t\tif(arr[i][j]=='K')\n\t\t\t\t{\n\t\t\t\tpos[k][0]=i+1;\n\t\t\t\tpos[k][1]=j+1;\n\t\t\t\t//printf(\"%d\",pos[k][0]);\n\t\t\t\t//printf(\"%d\",pos[k][1]);\n\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\n\t\tif((pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1])||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]))\n\t\t{\n\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t}\n\t\tn--;\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n\tchar arr[8][8],temp[9];\n\tint pos[2][2];\n\tint i,n,j,k;\n\tscanf(\"%d\\n\",&n);\n\twhile(n!=0)\n\t{\n\t\tk=0;\n\t\tfor(i=0;i<8;i++)\n\t\t{\n             scanf(\"%s\",temp);\n\t\t\tfor(j=0;j<8;j++)\n\t\t\t{\n                  arr[i][j]=temp[j];\n\n\t\t\t\t//scanf(\"%c\",&arr[i][j]);\n\t\t\t\tif(arr[i][j]=='K')\n\t\t\t\t{\n\t\t\t\tpos[k][0]=i+1;\n\t\t\t\tpos[k][1]=j+1;\n\t\t\t\t//printf(\"%d\",pos[k][0]);\n\t\t\t\t//printf(\"%d\",pos[k][1]);\n\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif((pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]&&pos[0][1]==pos[1][1]+4)||(pos[0][0]==pos[1][0]&&pos[0][1]==pos[1][1]-4)||(pos[0][0]==pos[1][0]+4&&pos[0][1]==pos[1][1])||(pos[0][0]==pos[1][0]-4&&pos[0][1]==pos[1][1]))\n\t\t{\n\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\tn--;\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9147381242387332, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5b0d4dad679040bf13c514c375cd31ab", "bug_code_uid": "21390825a0dabfd19d89c091fe65da03", "src_uid": "b4bb11ea4650ead54026453ea9a76f39", "apr_id": "4fd7a96e176f471337fc7df731d56f7d", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int s,n,k,i,j,a[1000],t,x=0;;\r\n    scanf(\"%d\",&s);\r\n    for(i=0;i<s;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        if(n==k)\r\n            printf(\"-1\");\r\n            if(n=1 && k=0)\r\n                printf(\"1\");\r\n        else if(n<3||(n-k)<3)\r\n            printf(\"-1\");\r\n        else\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                a[j]=j+1;\r\n            }\r\n            if(k!=0){\r\n            for(j=1;j<n;j+=2)\r\n            {\r\n                t=a[j];\r\n                a[j]=a[j+1];\r\n                a[j+1]=t;\r\n                x++;\r\n                if(x==k)\r\n                    break;\r\n            }\r\n            }\r\n            for(j=0;j<n;j++)\r\n                printf(\"%d \",a[j]);\r\n        }\r\n        printf(\"\\n\");\r\n        x=0;\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int s,n,k,i,j,a[1000],t,x=0;;\r\n    scanf(\"%d\",&s);\r\n    for(i=0;i<s;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        if(n==k)\r\n            printf(\"-1\");\r\n            else if(n==1 && k==0)\r\n                printf(\"1\");\r\n        else if((n-1)/2<k)\r\n            printf(\"-1\");\r\n        else\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                a[j]=j+1;\r\n            }\r\n            if(k!=0){\r\n            for(j=1;j<n;j+=2)\r\n            {\r\n                t=a[j];\r\n                a[j]=a[j+1];\r\n                a[j+1]=t;\r\n                x++;\r\n                if(x==k)\r\n                    break;\r\n            }\r\n            }\r\n            for(j=0;j<n;j++)\r\n                printf(\"%d \",a[j]);\r\n        }\r\n        printf(\"\\n\");\r\n        x=0;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.20606060606060606, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "2d4aff37ec251c6a3adcd63f691eae97", "bug_code_uid": "140b3ef46e415c72d483a3ae808b0f3c", "src_uid": "e63de0fffd00b2da103545a7f1e405be", "apr_id": "86b3d3c51f59f630f6cb612c13e50ff3", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint aray[100002][2];\n\nint main()\n{\n    int n, i, j, k, count=0, p=0;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\", &aray[i][0]);\n        aray[i][1] = i;\n        if(aray[i][0]==i){\n            count++;\n        }\n    }\n    if(count==n){\n        printf(\"%d\", count);\n        return 0;\n    }\n    for(i=0;i<n;i++){\n        if(aray[i][0]!=aray[i][1]){\n            for(j=i+1;j<n;j++){\n                if(aray[i][0]==aray[j][1] && aray[j][0]==aray[i][1]){\n                    p=1;\n                }\n            }\n        }\n    }\n    if(p==1){\n        printf(\"%d\", count+2);\n    }\n    else if(p==0){\n        printf(\"%d\", count+1);\n    }\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint aray[100002];\n\nint main()\n{\n    int n, i, count=0, num;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\", &aray[i]);\n\n        if(aray[i]==i){\n            count++;\n        }\n\n\n    }\n    if(count==n){\n        printf(\"%d\", count);\n        return 0;\n    }\n    for(i=0;i<n;i++){\n        if(aray[i]!=i && aray[aray[i]]==i){\n            printf(\"%d\", count+2);\n            return 0;\n        }\n\n\n    }\n    printf(\"%d\", count+1);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9582637729549248, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "9fe6aacd2a178ed97624e0d890cc25c6", "bug_code_uid": "e41d243fd93b30a9ab69a20514911411", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "8c2dfb90a9a02ead2be5e60f453e1376", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,min=100000,index,i,j;\n\t\tscanf(\"%d\",&n);\n\t\tint a[10]={};\n\t\tfor(i=1;i<10;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]<=min)\n\t\t\t{\n\t\t\t\tindex=i;\n\t\t\t\tmin=a[i];\n\t\t\t}\n\t\t}\n\t\tif(min>n)\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\tbreak;\n\t\t}\n\t\tint hell=n/min;\n\t\tint h=n%min;\n\t\tfor(i=1;i<10;i++)\n\t\t{\n\t\t\ta[i]-=min;\n\t\t}\n\t\tfor(i=0;i<hell;i++)\n\t\t{\n\t\t\tint no=index;\n\t\t\tfor(j=1;j<10 && n!=0;j++)\n\t\t\t{\n\t\t\t\tif(j>no )\n\t\t\t\t{\n\t\t\t\t\tif(h>=a[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tno=j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\th-=a[no];\n\t\t\tprintf(\"%d\",no);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\n\t\t\n", "fixed": "#include<stdio.h>\nint main()\n{\n//\tint t;\n////\tscanf(\"%d\",&t);\n//\twhile(t--)\n//\t{\n\t\tint n,min=100000,index,i,j;\n\t\tscanf(\"%d\",&n);\n\t\tint a[10]={};\n\t\tfor(i=1;i<10;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]<=min)\n\t\t\t{\n\t\t\t\tindex=i;\n\t\t\t\tmin=a[i];\n\t\t\t}\n\t\t}\n\t\tif(min>n)\n\t\t{\n\t\t\tprintf(\"-1\");\n\t//\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\tint hell=n/min;\n\t\tint h=n%min;\n\t\tfor(i=1;i<10;i++)\n\t\t{\n\t\t\ta[i]-=min;\n\t\t}\n\t\tfor(i=0;i<hell;i++)\n\t\t{\n\t\t\tint no=index;\n\t\t\tfor(j=1;j<10 && n!=0;j++)\n\t\t\t{\n\t\t\t\tif(j>no )\n\t\t\t\t{\n\t\t\t\t\tif(h>=a[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tno=j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\th-=a[no];\n\t\t\tprintf(\"%d\",no);\n\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n//\t}\n\treturn 0;\n}\n\n\t\t\n"}
