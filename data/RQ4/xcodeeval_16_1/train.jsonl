{"similarity_score": 0.6295585412667947, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ee4e096a069f59df1c16959ba9bf802b", "bug_code_uid": "57e9ff4fdf427b4af051f9536d87a730", "src_uid": "2c7add49d423de44a2bc09de56ffacf1", "apr_id": "785ef598173856810c8f9686e262d56e", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nmain() {\r\n    int a;\r\n    scanf(\"%d\", &a);\r\n    while(a--) {\r\n        char d[10][10];\r\n        int r=0, b=0, rr=0, bb=0;\r\n        for(int i=0; i<8; i++)\r\n            scanf(\"%s\", d[i]);\r\n        for(int i=0; i<8; i++) {\r\n            r=b=0;\r\n            for(int j=0; j<8; j++) {\r\n                if(d[i][j]=='R') r++;\r\n                if(d[i][j]=='B') b++;\r\n            }\r\n            if(r==8) rr=1;\r\n            if(b==8) bb=1;\r\n        }\r\n        if(rr) {\r\n            puts(\"R\");\r\n            continue;\r\n        }\r\n        else if(bb) {\r\n            puts(\"B\");continue;\r\n        }\r\n        for(int j=0; j<8; j++) {\r\n            r=b=0;\r\n            for(int i=0; i<8; i++) {\r\n                if(d[i][j]=='R') r++;\r\n                if(d[i][j]=='B') b++;\r\n            }\r\n            if(r==8) rr=1;\r\n            if(b==8) bb=1;\r\n        }\r\n        if(rr) puts(\"R\");\r\n        else if(bb) puts(\"B\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nmain() {\r\n    int a;\r\n    scanf(\"%d\", &a);\r\n    while(a--) {\r\n        char d[10][10];\r\n        int r=0, b=0, rr=0, bb=0;\r\n        for(int i=0; i<8; i++)\r\n            scanf(\"%s\", d[i]);\r\n        for(int i=0; i<8; i++) {\r\n            r=b=0;\r\n            for(int j=0; j<8; j++) {\r\n                if(d[i][j]=='R') r++;\r\n            }\r\n            if(r==8) rr=1;\r\n        }\r\n        for(int j=0; j<8; j++) {\r\n            r=b=0;\r\n            for(int i=0; i<8; i++) {\r\n                if(d[i][j]=='B') b++;\r\n            }\r\n            if(b==8) bb=1;\r\n        }\r\n        if(rr) puts(\"R\");\r\n        else if(bb) puts(\"B\");\r\n    }\r\n}"}
{"similarity_score": 0.9972972972972973, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c8ca801b345be7fc637184602467133b", "bug_code_uid": "c4cc394c8f4a5f26b06c8359cf80e233", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "c8384623d4e8290dbf1568b1916b2a34", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m,a[100],t,i,sum=0,j,b=0;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d %d\",&n,&m);\r\n        for(int j=0;j<n;j++)\r\n\r\n        scanf(\"%d\",&a[j]);\r\n        for(int j=0;j<n;j++)\r\n           sum+=a[j];\r\n          if(m<sum) printf(\"%d\\n\",sum-m);\r\n          else printf(\"%d\",b);\r\n           sum=0;\r\n\r\n\r\n\r\n}}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m,a[100],t,i,sum=0,j,b=0;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d %d\",&n,&m);\r\n        for(int j=0;j<n;j++)\r\n\r\n        scanf(\"%d\",&a[j]);\r\n        for(int j=0;j<n;j++)\r\n           sum+=a[j];\r\n          if(m<sum) printf(\"%d\\n\",sum-m);\r\n          else printf(\"%d\\n\",b);\r\n           sum=0;\r\n\r\n\r\n\r\n}}\r\n"}
{"similarity_score": 0.969335604770017, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "66e5840fbfc080bdeee5047c80d66898", "bug_code_uid": "5d7f601cee22ca3fbca5339589137383", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "3a9a9f084fd510e4e295f650b0a2b8af", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,a[101],greatest,smallest,x=0,y=0,p,q;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    a[0]=greatest;\n    for(i=1;i<n;i++)\n    {\n        if(a[i]>greatest)\n        {\n            greatest=a[i];\n            y=i;\n        }\n    }\n    a[0]=smallest;\n    for(i=1;i<n;i++)\n    {\n        if(a[i]<=smallest)\n        {\n            smallest=a[i];\n            x=i;\n        }\n    }\n    p=(y+(n-1)-x);\n    q=((y+(n-1)-x)-1);\n    if(y<x)\n    {\n        printf(\"%d\\n\",p);\n    }\n    else\n    {\n        printf(\"%d\\n\",q);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,a[101],greatest,smallest,x=0,y=0,p,q;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    greatest=a[0];\n    for(i=1;i<n;i++)\n    {\n        if(a[i]>greatest)\n        {\n            greatest=a[i];\n            y=i;\n        }\n    }\n    smallest=a[0];\n    for(i=1;i<n;i++)\n    {\n        if(a[i]<=smallest)\n        {\n            smallest=a[i];\n            x=i;\n        }\n    }\n    p=(y+(n-1)-x);\n    q=((y+(n-1)-x)-1);\n    if(y<x)\n    {\n        printf(\"%d\\n\",p);\n    }\n    else\n    {\n        printf(\"%d\\n\",q);\n    }\n}\n"}
{"similarity_score": 0.9223300970873787, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e14954a97e00e76394b85c514689c6d0", "bug_code_uid": "5406d677985481eac681f490feed804f", "src_uid": "0b229ddf583949d43d6f1728e38c3cad", "apr_id": "fb909d71a625b5e4b57b2583642fa142", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef __int64 type;\ntype cmp(void *a,void *b)\n{return(*(type*)a)-(*(type*)b);\n}\ntype f(int);\n\nint main()\n{\nint i,j=1;\n__int64 a[100000],s,sum,n;\nscanf(\"%I64d\",&n);\nsum=n;\nfor(i=0;i<n;i++)\nscanf(\"%I64d\",&a[i]);\ns=a[0];\nfor(i=1;i<n;i++)\n{\nif(s==a[i])\nj++;\nelse\n{s=a[i];\nif(j>1)\n{\nsum+=f(j);\nj=1;\n}\n\n}\n}\nif(j>1)\nsum+=f(j);\nprintf(\"%I64d\",sum);\nreturn 0;\n}\ntype f(int p)\n{\nreturn((p*(p-1))/2);\n\n}\n", "fixed": "#include<stdio.h>\ntypedef __int64 type;\ntype cmp(void *a,void *b)\n{return(*(type*)a)-(*(type*)b);\n}\ntype f(type);\n\nint main()\n{\n\n__int64 a[100000],s,sum,n,i,j=1;\nscanf(\"%I64d\",&n);\nsum=n;\nfor(i=0;i<n;i++)\nscanf(\"%I64d\",&a[i]);\ns=a[0];\nfor(i=1;i<n;i++)\n{\nif(s==a[i])\nj++;\nelse\n{s=a[i];\nif(j>1)\n{\nsum+=f(j);\nj=1;\n}\n\n}\n}\nif(j>1)\nsum+=f(j);\nprintf(\"%I64d\",sum);\nreturn 0;\n}\ntype f(type p)\n{\nreturn((p*(p-1))/2);\n\n}\n"}
{"similarity_score": 0.4142614601018676, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "ccca91ba0632f65086fa3570fed7a9e1", "bug_code_uid": "91330b1184275cd1ca7ba86feee9462d", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "3a552d296b0c68f4cad6ab0efea2ccf2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\t\n\tint t,i=4,n,a,s=0,b=0,p=0,j;\n\tscanf(\"%d\",&n);\n\twhile(i--)\n\t{\n\t\tscanf(\"%d\\t\",&t);\n\t\ts=s+t;\n\t}\n\t\n\tfor(int k=1;k<n;k++)\n\t{ \t j=4;\t\n\t\twhile(j--)\n\t\t{\n\t\t\tscanf(\"%d\\t\",&a);\n\t\t\tp=a+p;\n\t\t}\n\t\tif(p>s)\n\t\t\t{\n\t\t\tb++;\n\t\t}\n\t}\n\tprintf(\"%d\",b);\n\t\n\treturn 0;\n}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,sum,p,s=0,r=1,i=4,j;\n\tscanf(\"%d\",&n);\n\twhile(i--)\n\t\t{\n\t\t\tscanf(\"%d\",&p);\n\t\t\ts+=p;\n\t\t}\n\tn--;\n\tfor(j=0;j<n;j++)\n\t{\n\t\tsum=0;\n\t\ti=4;\n\t\twhile(i--)\n\t\t{\n\t\t\tscanf(\"%d\",&p);\n\t\t\tsum+=p;\n\t\t}\n\t\tif(sum>s)\n\t\t\tr++;\n\t}\n\tprintf(\"%d\",r);\n\treturn 0;\n}"}
{"similarity_score": 0.9431345353675451, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9462d9b3aed6ba7dd34a775636ac2729", "bug_code_uid": "7b5a36cebf665daac29ea630a1f4f3ce", "src_uid": "5db2ae5b2c91b29e4fe4a45ab864e3f1", "apr_id": "95f006b4530d16db3e0b5ba22ccd0009", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX(a,b)((a)>(b)?(a):(b))\nmain()\n{\n\tint n,m,i,ans=1,sum = 1;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tm = a[0];\n\tfor(i=0;i<n;i++){\n\t\tm = MAX(m,a[i]);\n\t}\n\tfor(i=0;i<n-1;i++){\n\t\tif(a[i]==m){\n\t\t\tif(a[i+1]==m){\n\t\t\t\tsum += 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tans = MAX(sum,ans);\n\t\t\tsum = 1;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}", "fixed": "#include<stdio.h>\n#define MAX(a,b)((a)>(b)?(a):(b))\nmain()\n{\n\tint n,m,i,ans = 1,sum = 1;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tm = a[0];\n\tfor(i=0;i<n;i++){\n\t\tm = MAX(m,a[i]);\n\t}\n\tfor(i=0;i<n-1;i++){\n\t\tif(a[i]==m){\n\t\t\tif(a[i+1]==m){\n\t\t\t\tsum += 1;\n\t\t\t\tans = MAX(sum,ans);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsum = 1;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}"}
{"similarity_score": 0.556745182012848, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "fe761fb0c9343471395521766dda1928", "bug_code_uid": "cdd2149d7f6fa0a3f69b424d51592bea", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "78dbc6345fde7aeab1a179a68ff1f768", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n;scanf(\"%d\",&n);int i,j,want=n,A[n];\n\tfor(i=0;i<n;i++){scanf(\"%d\",&A[i]); if(A[i]==want){printf(\"%d \",want);want--;}\n\t\tfor(int j=0;j<i;j++){if(A[j]==want){printf(\"%d \",want);want--;j=-1;}\n\t\t}printf(\"\\n\");\n\t}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n;scanf(\"%d\",&n);int i,j,a,want=n,Has[100001]={0};\n\tfor(i=0;i<n;i++){scanf(\"%d\",&a);Has[a]++;\n\t\twhile(Has[want]){\n\t\t\tprintf(\"%d \",want);want--;}\n\t\tprintf(\"\\n\");\n\t}\nreturn 0;\n}\n"}
{"similarity_score": 0.755868544600939, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "4d156dda54bb42654afb7eecbd451dad", "bug_code_uid": "15e5ff3179c1e9a4e7979115e13d7ec9", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "bce729b3608ef68d661134820f006548", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n\t#endif\n\n    long long int n,i,j,c=0,d=0;\n    scanf(\"%lld\",&n);\n    long long int a[n],b[n],rem=0,cap=0,temp;\n\n    for(i=0;i<n;i++)\n    {\n    \tscanf(\"%lld\",&a[i]);\n    \trem=rem+a[i];\n    }\n\n    for(i=0;i<n;i++)\n    {\n    \tscanf(\"%lld\",&b[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n    \tfor(j=0;j<n;j++)\n    \t{\n    \t\tif(b[i]>b[j])\n    \t\t{\n    \t\t\ttemp=b[i];\n    \t\t\tb[i]=b[j];\n    \t\t\tb[j]=temp;\n    \t\t}\n    \t}\n    }\n\n\n    if((b[0]+b[1])>=rem)\n    {\n    \tprintf(\"YES\\n\");\n    }\n    else\n    {\n    \tprintf(\"NO\\n\");\n    }\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n\t#endif\n\n    long long int n,i,j,c=0,d=0;\n    scanf(\"%lld\",&n);\n    long long int a[n],b[n],rem=0,cap=0,temp;\n\n    for(i=0;i<n;i++)\n    {\n    \tscanf(\"%lld\",&a[i]);\n    \trem=rem+a[i];\n    }\n\n    for(i=0;i<n;i++)\n    {\n    \tscanf(\"%lld\",&b[i]);\n\n    \tif(b[i]>c)\n    \t{\n    \t\td=c;\n    \t\tc=b[i];\n    \t}\n    \telse if(b[i]<=c && b[i]>d)\n    \t{\n    \t\td=b[i];\n    \t}\n    }\n\n\n    if((c+d)>=rem)\n    {\n    \tprintf(\"YES\\n\");\n    }\n    else\n    {\n    \tprintf(\"NO\\n\");\n    }\n\n}"}
{"similarity_score": 0.5684754521963824, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d5f29a8511251a82782e0f02b1bc3b43", "bug_code_uid": "5387b36a092e6c3c4146f3b672aed631", "src_uid": "4af206ae108a483bdb643dc24e4bedba", "apr_id": "97761a3dc2720ba4e1dc688853daaa95", "difficulty": 800, "tags": ["geometry", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n\r\n{\r\n    int a[100][100],n,i,j,t=0,s;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n    t=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        for(j=0;j<2;j++)\r\n        {\r\n            scanf(\"%d\",&a[i][j]);\r\n        }\r\n    }\r\n        for(i=0;i<n;i++)\r\n    {\r\n        for(j=0;j<2;j++)\r\n        {\r\n            if(a[i][j]<0)\r\n            {\r\n                t=t+(a[i][j]*-1);\r\n            }\r\n            else\r\n            {\r\n                t=t+a[i][j];\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d\\n\",2*t);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n\r\n{\r\n    int a[100][100],n,i,j,t=0,s,min1=0,min2=0,max1=0,max2=0;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n    min1=0,min2=0,max1=0,max2=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        for(j=0;j<2;j++)\r\n        {\r\n            scanf(\"%d\",&a[i][j]);\r\n        }\r\n\r\n    }\r\n        for(i=0;i<n;i++)\r\n    {\r\n        for(j=0;j<2;j++)\r\n        {\r\n        if(j==0)\r\n        {\r\n            if(a[i][j]<=min1)\r\n            {\r\n              min1=a[i][j];\r\n            }\r\n            if(a[i][j]>=max1)\r\n            {\r\n              max1=a[i][j];\r\n            }\r\n\r\n        }\r\n        if(j==1)\r\n        {\r\n            if(a[i][j]<=min2)\r\n            {\r\n              min2=a[i][j];\r\n            }\r\n            if(a[i][j]>=max2)\r\n            {\r\n              max2=a[i][j];\r\n            }\r\n\r\n        }\r\n\r\n        }\r\n    }\r\n    printf(\"%d\\n\",2*(max1-min1)+2*(max2-min2));\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9773049645390071, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ebf1b27488eb81bad1bacb5a77509331", "bug_code_uid": "124f8f831081428c703e011193c66776", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "a1f145bba8f9e6e30c67c52b3e3d58e4", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    short cost;\n    unsigned long no_of_airports, start_airport, destination_airport;\n    scanf(\"%lu %lu %lu\",&no_of_airports, &start_airport, &destination_airport);\n\n    char *company_of_airport = malloc(no_of_airports*sizeof(char));\n\n    scanf(\"%s\",company_of_airport);\n\n    //If the airports are of the same company, cost is 0. Else it is 1.\n    if( *(company_of_airport + start_airport - 1) == *(company_of_airport + destination_airport- 1) )//1 is subtracted because counting starts from 0 in the array\n    {\n        cost = 0;\n    }\n    else\n    {\n        cost = 1;\n    }\n\n    printf(\"%hu\\n\",cost);\n    free(company_of_airport);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    short cost;\n    unsigned long no_of_airports, start_airport, destination_airport;\n    scanf(\"%lu %lu %lu\",&no_of_airports, &start_airport, &destination_airport);\n\n    char *company_of_airport = malloc((no_of_airports+2)*sizeof(char));\n\n    scanf(\"%s\",company_of_airport);\n\n    //If the airports are of the same company, cost is 0. Else it is 1.\n    if( *(company_of_airport + start_airport - 1) == *(company_of_airport + destination_airport- 1) )//1 is subtracted because counting starts from 0 in the array\n    {\n        cost = 0;\n    }\n    else\n    {\n        cost = 1;\n    }\n\n    printf(\"%hu\\n\",cost);\n    free(company_of_airport);\n    return 0;\n}\n"}
{"similarity_score": 0.08658008658008658, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2f50f238ad5ca2328279d8e298412227", "bug_code_uid": "d9470205b9f9ab021a850bd63943be93", "src_uid": "66777b8719b1756bf4b6bf93feb2e439", "apr_id": "2daaaac556ade78b7d742e1f2ef85c6b", "difficulty": 800, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tint n;//the length of the string\r\n\tchar s[51]={0};//ring ,denoting the order \r\n\tint i;\r\n\tint sum=0;\r\n\tscanf(\"%d\",&t);\r\n\t\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tscanf(\"%c\",s);\r\n\t}\r\n    \r\n\r\n\tif(n==1) sum=2;\r\n\tfor(;n>1;n--){\r\n\t\tsum+=1;\r\n\t}\r\n\t\r\n\t\r\n\tprintf(\"%d\",sum);\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint T;\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--){\r\n\t\tint a[30];\r\n\t\tmemset(a, 0, sizeof a);\r\n\t \tint n;\r\n\t\tint ans = 0;\r\n\t\tscanf(\"%d\" ,&n);\r\n\t\tchar c;\r\n\t\tgetchar();\r\n\t\twhile ((c=getchar())!='\\n') {\r\n\t\t\tint t = c - 'A';\r\n\t\t\tif (a[t] == 0) ans += 2;\r\n\t\t\telse ans++;\r\n\t\t\ta[t]++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8888888888888888, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "3fed01bdc958e9119bfc419c93ae6f48", "bug_code_uid": "1e26800dd6d37bbbe4909260af500493", "src_uid": "ae96b178fee7c189a377835a53eb3dc4", "apr_id": "66bcedff2ae25e3ec4a1f1a6ae6500a8", "difficulty": 1900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define eps 1e-9\n#define gmin(a,b) ((a)<(b)?(a):(b))\nstruct zxf\n{\n\tdouble c;\n\tlong num;\n}ans[1005][1005]={0,0};\nlong l[10005]={0},r[10005]={0},tot[10005]={0};\ndouble now[3][10005]={0};\nint main()\n{\n\tlong i,j,n1,m1,n,w,m;\n\tdouble o,ar;\n//\tfreopen(\"b.in\",\"r\",stdin);\n//\tfreopen(\"b.out\",\"w\",stdout);\n\tscanf(\"%ld %ld %ld\\n\",&n,&w,&m);\n\tn1=1; m1=1;\n\tl[1]=1;\n\tar=n*w/(double )m;\n\twhile(n1<=n && m1<=m)\n\t{\n\t\to=gmin((double )w-now[1][n1],ar-now[2][m1]);\n\t\ttot[m1]++;\n\t\tans[m1][tot[m1]].num=n1;\n\t\tans[m1][tot[m1]].c=o;\n\t\tnow[1][n1]+=o;\n\t\tnow[2][m1]+=o;\n\t\tif(now[1][n1]<=w-eps)\n\t\t{\n\t\t\tr[n1]=m1;\n\t\t\tn1++;\n\t\t\tif(now[2][m1]<=ar-eps)\n\t\t\t\tm1++;\n\t\t\tl[n1]=m1;\n\t\t}\n\t\tif(now[2][m1]<=ar-eps)\n\t\t\tm1++;\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tif(r[i]-l[i]>=2)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"YES\\n\");\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tfor(j=1;j<=tot[i];j++)\n\t\t\tprintf(\"%ld %lf \",ans[i][j].num,ans[i][j].c);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define eps 1e-9\n#define gmin(a,b) ((a)<(b)?(a):(b))\nstruct zxf\n{\n\tdouble c;\n\tlong num;\n}ans[1005][1005]={0,0};\nlong l[10005]={0},r[10005]={0},tot[10005]={0};\ndouble now[3][10005]={0};\nint main()\n{\n\tlong i,j,n1,m1,n,w,m;\n\tdouble o,ar;\n//\tfreopen(\"b.in\",\"r\",stdin);\n//\tfreopen(\"b.out\",\"w\",stdout);\n\tscanf(\"%ld %ld %ld\\n\",&n,&w,&m);\n\tn1=1; m1=1;\n\tl[1]=1;\n\tar=n*w/(double )m;\n\twhile(n1<=n && m1<=m)\n\t{\n\t\to=gmin((double )w-now[1][n1],ar-now[2][m1]);\n\t\ttot[m1]++;\n\t\tans[m1][tot[m1]].num=n1;\n\t\tans[m1][tot[m1]].c=o;\n\t\tnow[1][n1]+=o;\n\t\tnow[2][m1]+=o;\n\t\tif(fabs(now[1][n1]-w)<=eps)\n\t\t{\n\t\t\tr[n1]=m1;\n\t\t\tn1++;\n\t\t\tif(fabs(now[2][m1]-ar)<=eps)\n\t\t\t\tm1++;\n\t\t\tl[n1]=m1;\n\t\t}\n\t\tif(fabs(now[2][m1]-ar)<=eps)\n\t\t\tm1++;\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tif(r[i]-l[i]>=2)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"YES\\n\");\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tfor(j=1;j<=tot[i];j++)\n\t\t\tprintf(\"%ld %lf \",ans[i][j].num,ans[i][j].c);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.10596026490066225, "equal_cnt": 25, "replace_cnt": 20, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "c47b0ce7450ac3650a2a35904f00e6af", "bug_code_uid": "094751ec97232e9be73e9ef0f9f53318", "src_uid": "9e71b4117a24b906dbc16e6a6d110f50", "apr_id": "b2bd157b9a6366ec6a409851ea3923a2", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid bubble_sort_1 (long long int vetor[], int n) {\n    int k, j, aux;\n    for (k = 1; k < n; k++) {\n        for (j = 0; j < n - 1; j++) {\n            if (vetor[j] < vetor[j + 1]) {\n                aux          = vetor[j];\n                vetor[j]     = vetor[j + 1];\n                vetor[j + 1] = aux;\n            }\n        }\n    }\n}\n\nint main(){\n    int n,i;\n    long long int b;\n    long long int aux=0;\n    long long int aux2=0;\n\n    scanf(\"%d %lld\", &n, &b);\n    long long int vetor[n];\n    for (i=0;i<n;i++){\n        scanf(\"%lld\", &vetor[i]);\n        if (vetor[i] % b != 0){\n            printf(\"-1\\n\");\n            exit(0);\n        }\n    }\n\n    bubble_sort_1 (vetor, n);\n\n    for (i=0;i<n-1;i++){\n        aux2=vetor[i]-vetor[n-1];\n        aux=aux+(aux2/b);\n        }\n    printf(\"%lld\\n\", aux);\n}\n/* 1518179188267 */\n", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n\nint prices[1000000];\n\nint main()\n{\n\tint n, k;\n\tint i;\n\tint smaller_price;\n\tlong long seconds = 0;\n\t\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &k);\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &prices[i]);\n\t}\n\n\tsmaller_price = prices[0];\n\t\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tif (prices[i] < smaller_price)\n\t\t{\n\t\t\tsmaller_price = prices[i];\n\t\t}\n\t}\n\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif ((prices[i] - smaller_price) % k != 0)\n\t\t{\n\t\t\tprintf(\"%d\", -1);\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tseconds = seconds + (long long)((prices[i] - smaller_price) / k);\n\t\t}\n\t}\n\t\n\tprintf(\"%lld\\n\", seconds);\n\treturn 0;\n}\n\n/* 1518181660022 */\n"}
{"similarity_score": 0.8567251461988304, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "e80b6b85ac01f92eac6db9f90356ed24", "bug_code_uid": "07d62a1e9e303ba6a5c9e40698cc6b96", "src_uid": "5139d222fbbfa70d50e990f5d6c92726", "apr_id": "74852038929107e6a28dc777829e54a3", "difficulty": 1100, "tags": ["brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ unsigned int test,n,i,q,j,a[5000];\n\tscanf(\"%d\",&test);\n\twhile(test!=0)\n\t{\n\t           \n      scanf(\"%d\",&n);\n       for(i=0; i<n; i++)\n         scanf(\"%d\",&a[i]);\n        q=0;\n\t\tfor(i=0; i<n-2; i++) \n\t\t{\n\t\t  for(j=i+2; j<n; j++)\n\t\t  {\n\t\t    if(a[i]==a[j])\n\t\t    q++;\n\t\t  }\n\t\t}\n\t\tif(q==0)\n\t\tprintf(\"NO\\n\"); \n\t\telse \n\t\tprintf(\"YES\\n\");\n\t\tt--;\n\t}\n}", "fixed": "\n#include<stdio.h>\nint main()\n{ int test,n,i,q,j,a[5000];\n\tscanf(\"%d\",&test);\n\twhile(test!=0) {\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0; i<n; i++) scanf(\"%d\",&a[i]);\n\t\tq=0;\n\t\tfor(i=0; i<n-2; i++) {\n\t\t\tfor(j=i+2; j<n; j++) {\n\t\t\t\tif(a[i]==a[j]) q++;\n\t\t\t}\n\t\t}\n\t\tif(q==0) printf(\"NO\\n\"); else printf(\"YES\\n\");\n\t\ttest--;\n\t}\n}"}
{"similarity_score": 0.997624703087886, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5761fc642974025f997f2fc105e541e0", "bug_code_uid": "b56884d97ebce6acbda36c99c55ed2dc", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "912aa20615c997ef1c6390a9ae3cfa97", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    int a[n][n],s1=0,s2=0,s3=0;\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<3;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n            \n        }\n    }\n    for(i=0;i<n;i++)\n    {\n       s1=s1+a[i][0];\n       s2=s2+a[i][1];\n       s3=s3+a[i][2];\n    }\n    \n    if(s1==0 && s2==0 && s3==0)\n    printf(\"YES\");\n    else\n    printf(\"NO\");\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    int a[n][3],s1=0,s2=0,s3=0;\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<3;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n            \n        }\n    }\n    for(i=0;i<n;i++)\n    {\n       s1=s1+a[i][0];\n       s2=s2+a[i][1];\n       s3=s3+a[i][2];\n    }\n    \n    if(s1==0 && s2==0 && s3==0)\n    printf(\"YES\");\n    else\n    printf(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.9987405541561712, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c1bcc08edd53d9b974ac6ba6f2af6663", "bug_code_uid": "393b2385ad8f8208414e4cbe00fd5251", "src_uid": "6b94dcd088b0328966b54acefb5c6d22", "apr_id": "e81e1a6949c2d7e7d795a49dbe36dfb7", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int t,i,n,k,j;\n   scanf(\"%d\",&t);\n   for (i=1;i<=t;i++)\n   {\n       scanf(\"%d%d\",&n,&k);\n       if (n<k)\n       {\n           printf(\"NO\\n\");\n           continue;\n       }\n       int m=n-((k-1)*2);\n       if (m%2==0 && m>=0)\n       {\n           printf(\"YES\\n\");\n           for (j=1;j<=k-1;j++)\n           {\n               printf(\"2 \");\n           }\n           printf(\"%d\\n\",m);\n           continue;\n       }\n       else\n       {\n           m=n-(k-1);\n           if (m%2!=0 && m>=0)\n           {\n               printf(\"YES\\n\");\n               for (j=1;j<=k-1;j++)\n               {\n                   printf(\"1 \");\n               }\n               printf(\"%d\\n\",m);\n               continue;\n           }\n       }\n       printf(\"NO\\n\");\n   }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int t,i,n,k,j;\n   scanf(\"%d\",&t);\n   for (i=1;i<=t;i++)\n   {\n       scanf(\"%d%d\",&n,&k);\n       if (n<k)\n       {\n           printf(\"NO\\n\");\n           continue;\n       }\n       int m=n-((k-1)*2);\n       if (m%2==0 && m>0)\n       {\n           printf(\"YES\\n\");\n           for (j=1;j<=k-1;j++)\n           {\n               printf(\"2 \");\n           }\n           printf(\"%d\\n\",m);\n           continue;\n       }\n       else\n       {\n           m=n-(k-1);\n           if (m%2!=0 && m>0)\n           {\n               printf(\"YES\\n\");\n               for (j=1;j<=k-1;j++)\n               {\n                   printf(\"1 \");\n               }\n               printf(\"%d\\n\",m);\n               continue;\n           }\n       }\n       printf(\"NO\\n\");\n   }\n}\n"}
