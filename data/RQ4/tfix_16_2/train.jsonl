{"id": "/data/all/data/moshen/node-googlemaps", "bugType": "no-array-constructor", "problem": "\tif(markers){\n\t\targs.markers = Array();\n\t\tfor(i=0; i < markers.length; i++) {", "fixed": "\tif(markers){\n\t\targs.markers = [];\n\t\tfor(i=0; i < markers.length; i++) {", "message": "The array literal notation [] is preferable."}
{"id": "/data/all/data/zulip/zulip", "bugType": "no-invalid-this", "problem": "                    email: email};\n        if (email === this.email) {\n            args.my_fullname = true;", "fixed": "                    email: email};\n        if (email === page_params.email) {\n            args.my_fullname = true;", "message": "Unexpected 'this'."}
{"id": "/data/all/data/logzio/apollo", "bugType": "no-unused-vars", "problem": "import './VerifyDeployment.css';\nimport { Link } from 'react-router-dom';", "fixed": "import './VerifyDeployment.css';", "message": "Unused variable."}
{"id": "/data/all/data/PD75/practical-startpage", "bugType": "no-unused-vars", "problem": "        if (angular.isDefined(history.days)) {\n          var x = new Date().getTime() - 1000 * 60 * 60 * 24 * history.days;\n          var y = x.toString();\n          vm.history.startDate = new Date().getTime() - 1000 * 60 * 60 * 24 * history.days;", "fixed": "        if (angular.isDefined(history.days)) {\n          vm.history.startDate = new Date().getTime() - 1000 * 60 * 60 * 24 * history.days;", "message": "Unused variable."}
{"id": "/data/all/data/jquery/jquery", "bugType": "no-useless-escape", "problem": "\t\t\n\t\t\"(\\\\[)\\s*(.*?)\\s*\\\\]\",\n\t\t", "fixed": "\t\t\n\t\t\"(\\\\[)\\\\s*(.*?)\\\\s*\\\\]\",\n\t\t", "message": "Unnecessary escape character."}
{"id": "/data/all/data/showdownjs/showdown", "bugType": "no-useless-escape", "problem": "  text = text.replace(delimUrlRegex, '<a href=\\\"$1\\\">$1</a>');\n  text = text.replace(delimMailRegex, replaceMail);", "fixed": "  text = text.replace(delimUrlRegex, replaceLink);\n  text = text.replace(delimMailRegex, replaceMail);", "message": "Unnecessary escape character."}
{"id": "/data/all/data/enketo/enketo-core", "bugType": "prefer-rest-params", "problem": "            },\n            jsEvaluate: function() {\n                return evaluator.evaluate.apply( evaluator, arguments );\n            }", "fixed": "            },\n            jsEvaluate( ...args ) {\n                return evaluator.evaluate( ...args );\n            }", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/Inateno/Dreamengine", "bugType": "comma-style", "problem": "    , 'DE.Rigidbody'    : 'engine/classes/core/Rigidbody'\n    , 'DE.CanvasBuffer' : 'engine/classes/core/CanvasBuffer'\n    , 'DE.GamePad'      : 'engine/classes/gamepad'", "fixed": "    , 'DE.Rigidbody'    : 'engine/classes/core/Rigidbody'\n    \n    , 'DE.GamePad'      : 'engine/classes/gamepad'", "message": "',' should be placed last."}
{"id": "/data/all/data/Roenbaeck/anchor", "bugType": "no-undef", "problem": "var knot;\nfor(var k = 0; knot = schema.knot[schema.knots[k]]; k++) {\n    if(knot.metadata.generator == 'true')", "fixed": "var knot;\nwhile (knot = schema.nextKnot()) {\n    if(knot.metadata.generator == 'true')", "message": "Undefined variable."}
{"id": "/data/all/data/kriszyp/xstyle", "bugType": "prefer-spread", "problem": "\t\t\t\t\t\n\t\t\t\t\tsheetToDelete.addRule = function(){\n\t\t\t\t\t\texistingSheet.addRule.apply(existingSheet, arguments);\n\t\t\t\t\t};", "fixed": "\t\t\t\t\t\n\t\t\t\t\tsheetToDelete.addRule = function(c,s,i){\n\t\t\t\t\t\texistingSheet.addRule(c,s,i > -1 ? i : -1);\n\t\t\t\t\t};", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/splunk/splunk-sdk-javascript", "bugType": "no-dupe-keys", "problem": "                    password: this.service.password,\n                    version: svc.version,\n                    version: svc.version\n                }", "fixed": "                    password: this.service.password,\n                    version: svc.version\n                }", "message": "Duplicate key 'version'."}
{"id": "/data/all/data/Encapsule-Annex/onm", "bugType": "no-throw-literal", "problem": "                if (hashToken !== this.model.jsonTag) {\n                  throw \"Invalid data model name '\" + hashToken + \"' in hash string.\";\n                }", "fixed": "                if (hashToken !== this.model.jsonTag) {\n                  throw new Error(\"Invalid data model name '\" + hashToken + \"' in hash string.\");\n                }", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/omisego/omg-js", "bugType": "no-undef", "problem": "    \n    const txBody = utxoToInput(utxo, toAddress, toAmount)\n    ", "fixed": "    \n    const txBody = transaction.createTransactionBody(fromUtxos, toAddress, toAmount)\n    ", "message": "Undefined variable."}
{"id": "/data/all/data/egovernments/egov-smartcity-suite", "bugType": "no-unused-labels", "problem": "$(document).ready(function(){\n\t\n\tconnectionType: $('#typeOfConnection').val();\n\talert(connectionType);\n\t\n\t$('#propertyType').change(function(){", "fixed": "$(document).ready(function(){\n\t\n\t\n\t\n\t$('#propertyType').change(function(){", "message": "'connectionType:' is defined but never used."}
{"id": "/data/all/data/SnakeskinTpl/Snakeskin", "bugType": "no-invalid-this", "problem": "\t\tdir.save(dir.prepareOutput('var ' + struct.join('=') + ';', true));\n\t}\n};\nvar __NEJS_THIS__ = this;", "fixed": "var __NEJS_THIS__ = this;", "message": "Unexpected 'this'."}
{"id": "/data/all/data/jarradseers/express-load", "bugType": "comma-style", "problem": "  , util = require('util')\n  , async = require('async')\n  , _ = require('lodash');", "fixed": "  , util = require('util')\n  , async = require('async');", "message": "',' should be placed last."}
