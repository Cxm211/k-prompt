{"similarity_score": 0.9212121212121213, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "d1c2293fcc9f035d1732618a2c424b64", "bug_code_uid": "bec59e0073bf08d9695e58de51aeea62", "src_uid": "c457b77b16d94c6c4c95b7403a1dd0c7", "apr_id": "f065ab573fc95fad5dbb7766a6fc7fa7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n  int r,q,n,i,a[20];\ndouble b=0;\n  scanf(\"%d\",&q);\n\nwhile(q-->0)\n{\n               b=0;\nscanf(\"%d\",&n);\n\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%d\",&a[i]);\n  b=b+a[i];\n }\n r=(int)(ceil(b/n));\n printf(\"%d\",r);\n}\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n  int r,q,n,i,a[100];\n  double b=0;\n  scanf(\"%d\",&q);\n \nwhile(q-->0)\n{\n  b=0;\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%d\",&a[i]);\n\tb=b+a[i];\n  }\n r=(int)(ceil(b/n));\n printf(\"%d\\n\",r);\n}\n}"}
{"similarity_score": 0.9769585253456221, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "1ee92f63256649fe5f87c35031f60fe0", "bug_code_uid": "df2cba6df62626adcb54737f8ad080de", "src_uid": "0e99f4a49b408cc8874a6d5ec4167acb", "apr_id": "3bbad3a9007e67ff71c69b21c6018673", "difficulty": 1500, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,m;\n    scanf(\"%d %d\",&n,&m);\n    if(n>m)n=m;\n    printf(\"%d\\n\",n+1);\n    for(i=0;i<=m;i++)\n    {\n        printf(\"%d %d\\n\",i,n-i);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,m;\n    scanf(\"%d %d\",&n,&m);\n    if(n>m)n=m;\n    printf(\"%d\\n\",n+1);\n    for(i=0;n>=0;i++)\n    {\n        printf(\"%d %d\\n\",n--,i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9335827876520112, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ac76457e9a6770f8fee355eddaec9a71", "bug_code_uid": "c7dd21c160f49ada059e4f83fd675a1c", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "8fabebed8e1324938d9ca4ebed5b24f0", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,i,a,b,c,d,temp;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        scanf(\"%d %d\",&c,&d);\n        if(a<b)\n        {\n            temp=b;\n            b=a;\n            a=b;     \n        }\n        if(c<d)\n        { \n            temp=c;\n            c=d;\n            d=temp;       \n        }\n       \n        if(a==c&&b+d==a)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n       \n        \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,i,a,b,c,d,temp;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        scanf(\"%d %d\",&c,&d);\n        if(a<b)\n        {\n            temp=a;\n            a=b;\n            b=temp;\n            \n        }\n        if(c<d)\n        { \n            temp=c;\n            c=d;\n            d=temp;\n            \n               \n        }\n       \n        if(a==c&&b+d==a)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n       \n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.6764705882352942, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f5802d9f03b7e3e61569bd268472fad0", "bug_code_uid": "626184d5069d466758ce387d0372347f", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "e779174f91c0f2a897f359d9946db8fe", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b,n,i,k,j;\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long int a,b,n,i,k,j;\n        scanf(\"%ld\",&n);\n        if(n%2==0)\n        {\n            printf(\"%ld\\n\",(n/2));\n        }\n        else\n        {\n            printf(\"%ld\\n\",(n/2)+1);\n        }\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.936542669584245, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1731c6e2a1fd45d38ea2048d86b11df9", "bug_code_uid": "75926b129360fe28db384b261c889570", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "d0314716d3261dc35654395bbe7ce554", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint n,a,b,c,d,num2;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint num=0;\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t    num=a/b;\n        num-=d/b-c/b;\n        if(c%b==0) num--;\n\t\t\n\t\tnum2=a/b-num;\n\t\tprintf(\"%d\\n\",num2);\n\t}\n\t\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint n,a,b,c,d;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint num=0;\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t    num=a/b;\n        num-=d/b-c/b;\n        if(c%b==0) num--;\n\t\t\n\n\t\tprintf(\"%d\\n\",num);\n\t} \n\t}\n\t"}
{"similarity_score": 0.9961783439490446, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bd5e43961bdb178e9ffc5de7b7fd51f1", "bug_code_uid": "f1cfad8967f7dc9f220b3587dc4d4089", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "8035e1f87e316346ee5a0187d7dba86f", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\t \n\t long long int n,min,i,c=0,p=1;\n\t long long int a[50000];\n\t scanf(\"%I64d\",&n);\n\t for(i=1;i<n+1;i++)\n\t {\n\t scanf(\"%I64d\",&a[i]);\n\t }\n\t min=a[1];\n\t for(i=1;i<n+1;i++)\n\t {\n\tif(min>a[i])\n\t {\n\tmin=a[i];\n\tp=i; \t\t\n \t}\n }\n     for(i=1;i<n+1;i++)\n\tif(a[i]==min)\n \t{\n\t c=c+1;\t\t\n\t }\n\t if(c==1)\n\t {\n\t printf(\"%I64d\",p);\n\t }\n\t else\n\t {\n\tprintf(\"Still Rozdil\");\n\t }\n\t \n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\t \n\t long long int n,min,i,c=0,p=1;\n\t long long int a[100000];\n\t scanf(\"%I64d\",&n);\n\t for(i=1;i<n+1;i++)\n\t {\n\t scanf(\"%I64d\",&a[i]);\n\t }\n\t min=a[1];\n\t for(i=1;i<n+1;i++)\n\t {\n\tif(min>a[i])\n\t {\n\tmin=a[i];\n\tp=i; \t\t\n \t}\n }\n     for(i=1;i<n+1;i++)\n\tif(a[i]==min)\n \t{\n\t c=c+1;\t\t\n\t }\n\t if(c==1)\n\t {\n\t printf(\"%I64d\",p);\n\t }\n\t else\n\t {\n\tprintf(\"Still Rozdil\");\n\t }\n\t \n}\n"}
{"similarity_score": 0.5868263473053892, "equal_cnt": 26, "replace_cnt": 16, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "7ec7a6aa67f811c6728425d245c769ff", "bug_code_uid": "ac08828b907d717460d782090a1b3a2e", "src_uid": "fd63aeefba89bef7d16212a0d9e756cd", "apr_id": "31abb7e32101ad7b421bd1e8962fbf5b", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100001],b[100001];\n    int i,x,y,n=0,m=0;\n    scanf(\"%s%s\",a,b);\n    x=strlen(a);\n    y=strlen(b)\n    for(i=0;i<x;i++)\n    {\n        if(a[i]=='0')\n            n++;\n    }\n    for(i=0;i<y;i++)\n    {\n        if(b[i]=='0')\n            m++;\n    }\n    if(x-n>y-m)\n        printf(\">\\n\");\n    else if(x-n<y-m)\n        printf(\"<\\n\");\n    else if(x==y)\n    {\n            if(strcmp(a+n,b+m)==0)\n                printf(\"=\\n\");\n            else if(strcmp(a+n,b+m)>0)\n                printf(\">\\n\");\n            else\n                printf(\"<\\n\");\n    }\n    return 0;\n    }\n", "fixed": "\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char arr[1000011],brr[1000011];\n    long long int n,i=0,j=0,a,b,ln1,ln2;\n    scanf(\"%s %s\", &arr, &brr);\n    ln1 = strlen(arr);\n    ln2 = strlen(brr);\n\n    while(arr[i]=='0') i++;\n    while(brr[j]=='0') j++;\n\n    if(ln1-i > ln2-j)\n        printf(\">\\n\");\n    else if(ln1-i < ln2-j)\n        printf(\"<\\n\");\n    else{\n        if(strcmp(arr+i, brr+j)==0)\n            printf(\"=\\n\");\n        else if(strcmp(arr+i, brr+j)>0)\n            printf(\">\\n\");\n        else\n            printf(\"<\\n\");\n    }\n\n\n}\n"}
{"similarity_score": 0.9889135254988913, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "db7229bca2f6248498d227e33098ae3f", "bug_code_uid": "9c32ac01c3e54b65da6384d073286e9a", "src_uid": "c783eaf1bf7e4e7321406431030d5aab", "apr_id": "81ae2af72d686870d78fcc1511b6b979", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> // fopen fclose fflush (f)scanf (f)printf (f)getc getchar (f)putc putchar (f)gets (f)puts\r\n\r\nint main(){\r\n    int t = 1;\r\n    scanf(\"%i\",&t);\r\n    \r\n    while(t--){\r\n        int l1,r1,l2,r2;\r\n        scanf(\"%i%i%i%i\",&l1,&r1,&l2,&r2);\r\n        if(r1 < l2 || r2 < l1)\r\n            printf(\"%i\", l1+l2);\r\n        else\r\n            printf(\"%i\", (l2<=r1) ? l2 : l1);\r\n\r\n        if(t)\r\n            putchar('\\n');\r\n    }\r\n    return 0-0;\r\n}", "fixed": "#include <stdio.h> // fopen fclose fflush (f)scanf (f)printf (f)getc getchar (f)putc putchar (f)gets (f)puts\r\n\r\nint main(){\r\n    int t = 1;\r\n    scanf(\"%i\",&t);\r\n    \r\n    while(t--){\r\n        int l1,r1,l2,r2;\r\n        scanf(\"%i%i%i%i\",&l1,&r1,&l2,&r2);\r\n        if(r1 < l2 || r2 < l1)\r\n            printf(\"%i\", l1+l2);\r\n        else\r\n            printf(\"%i\", (l2>l1)? l2 : l1);\r\n\r\n        if(t)\r\n            putchar('\\n');\r\n    }\r\n    return 0-0;\r\n}"}
{"similarity_score": 0.9852104664391353, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4b2f956095a42d1914012b09b72c897b", "bug_code_uid": "e6efd39fe782660fbf9bd7e216531a8d", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "02d20b435182eff98555c0e6e0e1b46e", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i,j,n,f;\n    scanf(\"%d\",&n);\n    char x[(6*n)+1];\n    for(i=0; i<6*n; i++)\n    {\n        scanf(\"%c\",&x[i]);\n    }\n    for(i=0; i<6*n; i++)\n    {\n        if(x[i]=='O'&&x[i-1]=='O')\n        {\n            x[i]='+';\n            x[i-1]='+';\n            f=1;\n            break;\n        }\n    }\n    if(f==1)\n    {\n        printf(\"YES%s\",x);\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int i,j,n,f=0;\n    scanf(\"%d\",&n);\n    char x[100000];\n    for(i=0; i<6*n; i++)\n    {\n        scanf(\"%c\",&x[i]);\n    }\n    for(i=0; i<6*n; i++)\n    {\n        if(x[i]=='O'&&x[i-1]=='O')\n        {\n            x[i]='+';\n            x[i-1]='+';\n            f=1;\n            break;\n        }\n    }\n    if(f==1)\n    {\n        printf(\"YES%s\",x);\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8270676691729323, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ea488280c8ed1f7099fa67fa146632a6", "bug_code_uid": "acf62da701c8c887cc844bf315856f46", "src_uid": "933167c31c0f53a43e840cc6cf153f8d", "apr_id": "f550587ba82cf437c2d049e787b27811", "difficulty": 1100, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,t,i,c=0;\n    char v[]=\"aeiou\";\n    scanf(\"%d\",&n);\n    t=n;\n    for(i=5; i*i<=n; i++)\n    {\n        if(n%i==0)\n        {\n            c++;\n            k=n/i;\n            break;\n        }\n    }\n    n/=k;\n    if(c==0||k<5)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    for(i=0; i<t; i++)\n        printf(\"%c\",v[i%5]);\n    printf(\"\\n\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,c=0;\n    char v[6]=\"aeiou\";\n    scanf(\"%d\",&n);\n    for(i=5; i*i<=n; i++)\n    {\n        if(n%i==0)\n        {\n            c=n/i;\n            break;\n        }\n    }\n    if(c<5)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    for(i=0; i<c; i++)\n    {\n        for(j=0; j<n/c; j++)\n            printf(\"%c\",v[(i+j)%5]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9707259953161592, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1a4ecb2b08c4ef230cbd6f1959174a88", "bug_code_uid": "44ab5e8a9d99f6628c3b95bec407d1d1", "src_uid": "c0eec5938787a63fce3052b7e209eda3", "apr_id": "c1bcba233d4bbc89c1e2be27ade6dc59", "difficulty": 1600, "tags": ["constructive algorithms", "graphs", "shortest paths"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define LL long long\n\nint isPrime(int x) {\n    for (int i = 2; i * i <= x; ++i) {\n        if (x % i == 0)\n            return 0;\n    }\n    return 1;\n}\n\nint main() {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    int x = 2 * (n - 1);\n    while (1) {\n        if (!isPrime(x)) {\n            x++;\n        } else {\n            break;\n        }\n    }\n    int edge1 = x - 2 * (n - 2);\n    printf(\"%d %d\\n\", 2, x);\n    for (int i = 2; i <= n; ++i) {\n        if (i != 2)\n            printf(\"%d %d %d\\n\", 1, i, 2);\n        else\n            printf(\"%d %d %d\\n\", 1, i, edge1);\n    }\n    m -= (n - 1);\n    int begin = 2, end = 3;\n    while(m){\n        printf(\"%d %d %d\\n\", begin, end, x + 1);\n        m--;\n        if(end == n){\n            begin++;\n            end = begin + 1;\n        }\n    }\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define LL long long\n\nint isPrime(int x) {\n    for (int i = 2; i * i <= x; ++i) {\n        if (x % i == 0)\n            return 0;\n    }\n    return 1;\n}\n\nint main() {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    int x = 2 * (n - 1);\n    while (1) {\n        if (!isPrime(x)) {\n            x++;\n        } else {\n            break;\n        }\n    }\n    int edge1 = x - 2 * (n - 2);\n    printf(\"%d %d\\n\", 2, x);\n    for (int i = 2; i <= n; ++i) {\n        if (i != 2)\n            printf(\"%d %d %d\\n\", 1, i, 2);\n        else\n            printf(\"%d %d %d\\n\", 1, i, edge1);\n    }\n    m -= (n - 1);\n    int begin = 2, end = 3;\n    while(m){\n        printf(\"%d %d %d\\n\", begin, end, x + 1);\n        m--;\n        if(end == n){\n            begin++;\n            end = begin + 1;\n        }else{\n            end++;\n        }\n    }\n}"}
{"similarity_score": 0.9963898916967509, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7cc99a06b2a5cde88bf8367fce91f833", "bug_code_uid": "52be6e940362b8f448a00f340e2f1bdb", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "a01ceffd09c4f49485cfbc0ef7c61a69", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int a,b,i,j,max=-10000;\n    scanf(\"%d %d\",&a,&b);\n    int ara1[a][2],ara2[a],ara3[a],ara4[a];\n    for(i=0;i<a;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%d\",&ara1[i][j]);\n        }\n    }\n    for(i=0;i<a;i++)\n    {\n        ara2[i]=ara1[i][1]-b;\n    }\n    for(i=0;i<a;i++)\n    {\n        if(ara2[i]>=0)\n        {\n            ara3[i]=ara2[i];\n        }\n        else if(ara2[i]<0)\n        {\n            ara3[i]=0;\n        }\n    }\n    for(i=0;i<a;i++)\n    {\n        ara4[i]=ara1[i][0]-ara3[i];\n    }\n    for(i=0;i<a;i++)\n    {\n        if(max<ara4[i])\n        {\n            max=ara4[i];\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int a,b,i,j,max=-1000000000;\n    scanf(\"%d %d\",&a,&b);\n    int ara1[a][2],ara2[a],ara3[a],ara4[a];\n    for(i=0;i<a;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%d\",&ara1[i][j]);\n        }\n    }\n    for(i=0;i<a;i++)\n    {\n        ara2[i]=ara1[i][1]-b;\n    }\n    for(i=0;i<a;i++)\n    {\n        if(ara2[i]>=0)\n        {\n            ara3[i]=ara2[i];\n        }\n        else if(ara2[i]<0)\n        {\n            ara3[i]=0;\n        }\n    }\n    for(i=0;i<a;i++)\n    {\n        ara4[i]=ara1[i][0]-ara3[i];\n    }\n    for(i=0;i<a;i++)\n    {\n        if(max<ara4[i])\n        {\n            max=ara4[i];\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.058666666666666666, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "ed84a6f0eb8d2ef3977974cf8465e5a3", "bug_code_uid": "7d75209574e06c2c332437fe5c2acd2c", "src_uid": "d0f81a3fb97fbdbed1b72d013c2f6ed5", "apr_id": "00ca7c62a0c941b892ac17f4cbe96c61", "difficulty": 2500, "tags": ["combinatorics", "implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char const *argv[])\n{\n\tint n,m,p,i,par,impar,h;\n\tint aux;\n\tint * b;\n\tscanf(\"%d %d %d\", &n, &m, &p);\n\tb=(int *)malloc(n*sizeof(int));\n\timpar=0;\n\tpar=0;\n\tfor (i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\", &aux);\n\t\tif(aux%2==1){\n\t\t\tb[n-impar-1]=aux;\n\t\t\timpar++;\n\t\t}else{\n\t\t\tb[par]=aux;\n\t\t\tpar++;\n\t\t}\n\t}\n\tif(impar%2==(m-p)%2 && impar>=m-p && p<=(n-impar)+(impar-(m-p))/2){\n\t\tprintf(\"YES\\n\");\n\t\th=n;\n\t\tif(m>1){\n\t\t\t\n\t\t\tfor (i = 0; i < n; ++i)\n\t\t\t{\n\t\t\t\tif(p>0){\n\t\t\t\t\tif(b[i]%2==0){\n\t\t\t\t\t\tprintf(\"1 %d \\n\", b[i]);\n\t\t\t\t\t\tb[i]=-1;\n\t\t\t\t\t\th--;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tprintf(\"2 %d %d \\n\",b[i], b[i+1]);\n\t\t\t\t\t\tb[i]=-1;\n\t\t\t\t\t\tb[i+1]=-1;\n\t\t\t\t\t\th-=2;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tp--;\n\t\t\t\t\tm--;\n\t\t\t\t}else{\n\t\t\t\t\tif(b[i]%2==1){\n\t\t\t\t\t\tprintf(\"1 %d \\n\", b[i]);\n\t\t\t\t\t\tb[i]=-1;\n\t\t\t\t\t\th--;\n\t\t\t\t\t\tm--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(m<=1){\n\t\t\t\t\ti=n;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(h>0){\n\t\t\tprintf(\"%d \", h);\n\t\t\tfor (i = 0; i < n; ++i)\n\t\t\t{\n\t\t\t\tif(b[i]!=-1){\n\t\t\t\t\tprintf(\"%d \", b[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tprintf(\"NO\");\n\t}\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\ntypedef long long ll;\nll mod = 1000000007;\nll c[120001][101];\nll A[102][100001];\nint main()\n{\n\tc[0][0] = 1;\n\tfor (int i = 1; i <= 120000; i++)\n\t{\n\t\tc[i][0] = 1;\n\t\tfor (int j = 1; j <= 100; j++){\n\t\t\tc[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod;\n\t\t}\n\t}\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 0; i < n; i++){\n\t\tscanf(\"%I64d\", &A[0][i]);\n\t}\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tint za, zb, zc;\n\t\tscanf(\"%d %d %d\", &za, &zb, &zc);\n\t\tza--;\n\t\tzb--;\n\t\tA[zc + 1][za]++;\n\t\tfor (int j = 0; j <= zc; j++){\n\t\t\tA[zc + 1 - j][zb + 1] += mod - c[zb - za + j][j];\n\t\t}\n\t}\n\tfor (int i = 101; i >= 1; i--)\n\t{\n\t\tfor (int j = 0; j < n; j++){\n\t\t\tA[i][j + 1] += A[i][j];\n\t\t}\n\t\tfor (int j = 0; j <= n; j++){\n\t\t\tA[i - 1][j] = (A[i - 1][j] + A[i][j]) % mod;\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++){\n\t\tprintf(\"%I64d \", A[0][i]);\n\t}\n\tprintf(\"\\n\");\n}"}
{"similarity_score": 0.9739696312364425, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f71274af2a18349cbff0535f109034b8", "bug_code_uid": "e1b819c5225353656ebddf328f75231e", "src_uid": "d8349ff9b695612473b2ba00d08e505b", "apr_id": "c9379c0f196ba15f87ee77bd820477f4", "difficulty": 1300, "tags": ["number theory", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\ntypedef long long int ll;\nint main()\n{\n\tll n;\n\tscanf(\"%lld\", &n);\n\tll a[n], min=1e10, sum=0;\n\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%lld\", &a[i]);\n\t\tif(a[i]<min)\n\t\t\tmin=a[i];\n\t\tsum+=a[i];\n\t}\n\tll mini=sum;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tint temp=0, f=0;\n\t\tfor(int j=2; j<a[i]; j++)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\ttemp=sum-a[i]+a[i]/j-min+min*j;\n\t\t\t\tf=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(temp<mini&&f==1)\n\t\t\tmini=temp;\n\t}\n\tprintf(\"%lld\\n\", mini);\n\n}", "fixed": "#include <stdio.h>\ntypedef long long int ll;\nint main()\n{\n\tll n;\n\tscanf(\"%lld\", &n);\n\tll a[n], min=1e10, sum=0;\n\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%lld\", &a[i]);\n\t\tif(a[i]<min)\n\t\t\tmin=a[i];\n\t\tsum+=a[i];\n\t}\n\tll mini=sum;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tint temp=0, f=0;\n\t\tfor(int j=2; j<a[i]; j++)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\ttemp=sum-a[i]+a[i]/j-min+min*j;\n\t\t\t\tf=1;\t\t\t\n\t\t\t}\n\t\t\tif(temp<mini&&f==1)\n\t\t\tmini=temp;\n\t\n\t\t}\n\t\t}\n\tprintf(\"%lld\\n\", mini);\n\n}"}
{"similarity_score": 0.9890568004168838, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6b77a03a2a839ca9ff3c88b0b871c55d", "bug_code_uid": "4656d7e1a100ffffad3064ac09b88168", "src_uid": "37cf6edce77238db53d9658bc92b2cab", "apr_id": "6c45585139874bcc0ea341ffa0292085", "difficulty": 1400, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint gcd(int a,int b){\n\tif(a==b)\n\t return a;\n\tif(b==0)\n\t\treturn a;\n\tif(b==1)\n\t\treturn 1;\n\treturn gcd(b,a%b);\n}\nint main(){\n\tint n,m;\n\tint a[105],b[105],i;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\ti=0;\n\tfor(i=0;i<=m;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tif(m>n)\n\t\tprintf(\"0/1\\n\");\n\telse if(n>m){\n\t\tif(a[0]>0 && b[0]>0)\n\t\tprintf(\"Infinity\\n\");\n\t\telse\n\t\tprintf(\"-Infinity\\n\");\n\t}\n\telse{\n\t\tif(b[0]<0 && a[0]<0){\n\t\t\tb[0]=(-b[0]);\n\t\t\ta[0]=(-a[0]);\n\t\t\tint g;\n\t\t\tif(a[0]>b[0])\n\t\t\t\tg=gcd(a[0],b[0]);\n\t\t\telse \n\t\t\t\tg=gcd(b[0],a[0]);\n\t\t\tprintf(\"%d/%d\\n\",a[0]/g,b[0]/g);\n\t\t}\n\t\telse if(b[0]<0 || a[0]<0) {\n\t\t\tif(b[0]<0)\n\t\t\t\tb[0]=(-b[0]);\n\t\t\tif(a[0]<0)\n\t\t\t\ta[0]=(-a[0]);\n\t\t\tint g;\n\t\t\tif(a[0]>b[0])\n\t\t\t\tg=gcd(a[0],b[0]);\n\t\t\telse \n\t\t\t\tg=gcd(b[0],a[0]);\n\t\t\tprintf(\"-%d/%d\\n\",a[0]/g,b[0]/g);\n\t\t}\n\t\telse{\n\t\t\tint g;\n\t\t\tif(a[0]>b[0])\n\t\t\t\tg=gcd(a[0],b[0]);\n\t\t\telse \n\t\t\t\tg=gcd(b[0],a[0]);\n\t\t\tprintf(\"%d/%d\\n\",a[0]/g,b[0]/g);\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint gcd(int a,int b){\n\tif(a==b)\n\t return a;\n\tif(b==0)\n\t\treturn a;\n\tif(b==1)\n\t\treturn 1;\n\treturn gcd(b,a%b);\n}\nint main(){\n\tint n,m;\n\tint a[105],b[105],i;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\ti=0;\n\tfor(i=0;i<=m;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tif(m>n)\n\t\tprintf(\"0/1\\n\");\n\telse if(n>m){\n\t\tif((a[0]>0 && b[0]>0)||(a[0]<0 &&b[0]<0))\n\t\tprintf(\"Infinity\\n\");\n\t\telse\n\t\tprintf(\"-Infinity\\n\");\n\t}\n\telse{\n\t\tif(b[0]<0 && a[0]<0){\n\t\t\tb[0]=(-b[0]);\n\t\t\ta[0]=(-a[0]);\n\t\t\tint g;\n\t\t\tif(a[0]>b[0])\n\t\t\t\tg=gcd(a[0],b[0]);\n\t\t\telse \n\t\t\t\tg=gcd(b[0],a[0]);\n\t\t\tprintf(\"%d/%d\\n\",a[0]/g,b[0]/g);\n\t\t}\n\t\telse if(b[0]<0 || a[0]<0) {\n\t\t\tif(b[0]<0)\n\t\t\t\tb[0]=(-b[0]);\n\t\t\tif(a[0]<0)\n\t\t\t\ta[0]=(-a[0]);\n\t\t\tint g;\n\t\t\tif(a[0]>b[0])\n\t\t\t\tg=gcd(a[0],b[0]);\n\t\t\telse \n\t\t\t\tg=gcd(b[0],a[0]);\n\t\t\tprintf(\"-%d/%d\\n\",a[0]/g,b[0]/g);\n\t\t}\n\t\telse{\n\t\t\tint g;\n\t\t\tif(a[0]>b[0])\n\t\t\t\tg=gcd(a[0],b[0]);\n\t\t\telse \n\t\t\t\tg=gcd(b[0],a[0]);\n\t\t\tprintf(\"%d/%d\\n\",a[0]/g,b[0]/g);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9953488372093023, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "338a4fd98c445ff19a93a887c7ba14a3", "bug_code_uid": "44c40b70fb3b2393f6ba5469569a0459", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "ba99954cd48badf4656007bc0650bdc0", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n \r\nint main(){\r\n\tint n,t,i,*f;\r\n\tscanf (\"%d\",&t);\r\n\tf=(int*)malloc(t*sizeof(int));\r\n\tfor(i=0;i<t;i++){\r\n\tscanf (\"%d\",&f[i]);}\r\n\tfor(i=0;i<t;i++){\r\n\t\tif(f[i]%7==0){\r\n\t\t\tprintf(\"%d\",f[i]);\r\n\t\t}\r\n\t\telse if(f[i]<10){\r\n\t\t\tprintf(\"7\");\r\n\t\t}\r\n\t\r\n\t\telse if(f[i]<1000 && f[i]>9){\r\n\t\t\tf[i]=(f[i]/10)*10+1;\r\n\t\t\twhile(f[i]%7!=0){\r\n\t\t\t\tf[i]+=1;\t\r\n\t\t\t}\r\n\t\tprintf(\"\\n%d\",f[i]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n \r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n \r\nint main(){\r\n\tint n,t,i,*f;\r\n\tscanf (\"%d\",&t);\r\n\tf=(int*)malloc(t*sizeof(int));\r\n\tfor(i=0;i<t;i++){\r\n\tscanf (\"%d\",&f[i]);}\r\n\tfor(i=0;i<t;i++){\r\n\t\tif(f[i]%7==0){\r\n\t\t\tprintf(\"\\n%d\",f[i]);\r\n\t\t}\r\n\t\telse if(f[i]<10){\r\n\t\t\tprintf(\"\\n7\");\r\n\t\t}\r\n\t\r\n\t\telse if(f[i]<1000 && f[i]>9){\r\n\t\t\tf[i]=(f[i]/10)*10+1;\r\n\t\t\twhile(f[i]%7!=0){\r\n\t\t\t\tf[i]+=1;\t\r\n\t\t\t}\r\n\t\tprintf(\"\\n%d\",f[i]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n \r\n}"}
{"similarity_score": 0.1559383499546691, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "52f89383de95aa91b74a516dafdf1e5c", "bug_code_uid": "71107a7ea37d35401bc1305eda329dc1", "src_uid": "8c5d9b4fd297706fac3be83fc85028a0", "apr_id": "8610474f1a78abe4c9d1d4662b851a59", "difficulty": 1400, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong int min(long a, long b){\n\treturn a > b ? b: a;\n}\nlong int dolbuy(long rub, int usd){\n\tlong int left = rub;\n\tint price[7] = {1, 2, 5, 10, 20, 50, 100};\n\tfor (int i = 0; i < 7; ++i) price[i] = price[i] * usd;\n\tfor (int i = 6; i >= 0; --i) left = left%price[i];\n\treturn left;\n}\nlong int eurbuy(long rub, int eu){\n\tlong int left = rub;\n\tint price[6] = {5, 10, 20, 50, 100, 200};\n\tfor (int i = 0; i < 6; ++i) price[i] = price[i] * eu;\n\tfor (int i = 5; i >= 0; --i) left = left%price[i];\n\treturn left;\n}\nint main(){\n\tlong int rubles;\n\tint dol, eur;\n\tscanf(\"%ld%d%d\", &rubles, &dol, &eur);\n\tlong int left = dolbuy(rubles, dol);\n\tleft = eurbuy(left, eur);\n\tlong other = eurbuy(rubles, eur);\n\tother = dolbuy(other, dol);\n\tprintf(\"%ld\\n\", min(left, other));\n}\n", "fixed": "#include <stdio.h>\nint min(int a, int b){\n\treturn a > b ? b: a;\n}\nint main(){\n\tint mini = 200000000;\n\tint z, y, e, d, n, nd;\n\tscanf(\"%d%d%d\", &n, &d, &e);\n\tint fm = n/d;\n\tfor (int i = 0; i <= fm; ++i){\n\t\tnd = (n-d*i);\n\t\t//if (d*i > n) break;\n\t\ty = nd/(5*e);\n\t\tz = n-(d*i+5*e*y);\n\t\tmini = min(mini, z);\n\t}\n\tprintf(\"%d\\n\", mini);\n}"}
{"similarity_score": 0.9663865546218487, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ffff3c1d91237a2ebfe5561bcdd1cb05", "bug_code_uid": "ef1e0afb141fd1c0bf9e5f63a7d5a898", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "e5786b6edfbe185c8bec9f0f10324eed", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int i,n;\n   long long c;\n   char b[1001];\n   scanf(\"%d\",&n);\n   long long a[1000]={1,1};\n   for(i=2;i<n;i++)\n   a[i]=a[i-1]+a[i-2];\n   for(i=0;i<n;i++){\n        c=a[i];\n     if(c<=n) b[c]='O';}\n   for(i=1;i<=n;i++){\n        if(b[i]!='O'){\n      b[i]='o';}\n    }\n    b[n+1]='\\0';\n    for(i=1;i<=n;i++)\n        printf(\"%c\",b[i]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int i,n;\n   long long c;\n   char b[1010];\n   scanf(\"%d\",&n);\n   long long a[1000]={1,1};\n   for(i=2;i<=n;i++)\n   a[i]=a[i-1]+a[i-2];\n   for(i=0;i<17;i++){\n        c=a[i];\n     if(c<=n) b[c]='O';}\n   for(i=1;i<=n;i++){\n        if(b[i]!='O'){\n      b[i]='o';}\n    }\n\n    for(i=1;i<=n;i++)\n        printf(\"%c\",b[i]);\n}\n"}
{"similarity_score": 0.9250902527075813, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "0fc880c6549cf447438cc09e0af19a68", "bug_code_uid": "fd3c80ee39b48e1be8ad9259cd74b78a", "src_uid": "9fd8e75cb441dc809b1b2c48c4012c76", "apr_id": "bfdc6f26bee0e5e8a0ebb137340e7cc4", "difficulty": 1500, "tags": ["two pointers", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//Date:29-07-16\n\n//Date:29-07-16\n\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include<float.h>\n#include<math.h>\n#include<ctype.h>\n#include<limits.h>\n#define ll long \n#define For(i ,n)\tfor(i=0;i<n;i++)\n#define rep(i ,a ,b)\tfor(i=a;i<=b;i++)\n#define mset(a ,value)\tmemset(a ,value ,sizeof(a))\n#define s(a)\tscanf(\"%d\" ,&a)\n#define ls(a)\tscanf(\"%ld\" ,&a)\n#define reg(i)\tregister int i\n#define max(a ,b)\t(a>b?a:b)\n#define MAX 100001\nint min(int a,int b){\treturn (a<b?a:b);\t}\nint MIN(int a,int b,int c){\treturn min(a,min(b,c));\t}\nint main(){\n\tint n ,i ,m ,j ,k;\n\tscanf(\"%d%d\" ,&n ,&m);\n\tint a[n] ,b[m] ,r = 0;\n\tFor(i ,n)\ts(a[i]);\n\tFor(i ,m)\ts(b[i]);\n\t/*for(i=0;i<min(n ,m);i++){\n\t\tif(i==0)\tj=0;\n\t\telse j = i-1;\n\t\tif(k==min(n ,m)-1)\tk = min(n ,m)-1;\n\t\telse k = i+1;\n\t\tint c = MIN(abs(a[i]-b[j]) ,abs(a[i]-b[i]) ,abs(a[i]-b[k]));\n\t\tif(c>r)\tr = c;\n\t}\n\tif(m<n){\n\t\tfor(i=m;i<n;i++){\n\t\t\tint c = abs(a[i]-b[m-1]);\n\t\t\tif(c>r)\tr=c;\n\t\t}\n\t}*/\n\tfor(i=0;i<n;i++){\n\t\tint c = INT_MAX;\n\t\tfor(j=0;j<m;j++){\n\t\t\tif(abs(a[i]-b[j])<c)\tc = abs(a[i]-b[j]);\n\t\t}\n\t\tif(c>r)\tr=c;\n\t}\n\tprintf(\"%d\" ,r);\n\treturn 0;\n}", "fixed": "//Date:29-07-16\n\n//Date:29-07-16\n\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include<float.h>\n#include<math.h>\n#include<ctype.h>\n#include<limits.h>\n#define ll long \n#define For(i ,n)\tfor(i=0;i<n;i++)\n#define rep(i ,a ,b)\tfor(i=a;i<=b;i++)\n#define mset(a ,value)\tmemset(a ,value ,sizeof(a))\n#define s(a)\tscanf(\"%d\" ,&a)\n#define ls(a)\tscanf(\"%ld\" ,&a)\n#define reg(i)\tregister int i\n#define max(a ,b)\t(a>b?a:b)\n#define MAX 100001\nint min(int a,int b){\treturn (a<b?a:b);\t}\nint MIN(int a,int b,int c){\treturn min(a,min(b,c));\t}\nint main(){\n\tint n ,i ,m ,j ,k;\n\tscanf(\"%d%d\" ,&n ,&m);\n\tint a[n] ,b[m] ,r = 0;\n\tFor(i ,n)\ts(a[i]);\n\tFor(i ,m)\ts(b[i]);\n\t/*for(i=0;i<min(n ,m);i++){\n\t\tif(i==0)\tj=0;\n\t\telse j = i-1;\n\t\tif(k==min(n ,m)-1)\tk = min(n ,m)-1;\n\t\telse k = i+1;\n\t\tint c = MIN(abs(a[i]-b[j]) ,abs(a[i]-b[i]) ,abs(a[i]-b[k]));\n\t\tif(c>r)\tr = c;\n\t}\n\tif(m<n){\n\t\tfor(i=m;i<n;i++){\n\t\t\tint c = abs(a[i]-b[m-1]);\n\t\t\tif(c>r)\tr=c;\n\t\t}\n\t}*/\n\tj=0;\n\tfor(i=0;i<n;i++){\n\t\twhile(j<m-1&&abs(b[j]-a[i])>=(abs(b[j+1]-a[i])))\tj++;\n\t\tr = max(r ,abs(b[j]-a[i]));\n\t}\n\tprintf(\"%d\" ,r);\n\treturn 0;\n}"}
{"similarity_score": 0.8775235531628532, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "bb3000f767f46492ab34038f5e40e680", "bug_code_uid": "f5422af09748bbed1236304c780186e4", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "06e0ea2b39fb79b4b11e6ef8211131b1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char s[50][50];\n    char w[50][50];\n    int n,m,i,j,k,p,q,t;\n    scanf(\"%d %d\", &n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\", s[i]);\n    }\n    for(j=0;j<n;j++)\n    {\n        scanf(\"%s\", w[j]);\n    }\n\n    scanf(\"%d\", &t);\n    {\n        scanf(\"%d\", &k);\n        p=k%n;\n        q=k%m;\n        printf(\"%s%s\", s[p-1],w[q-1]);\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char s[50][50];\n    char w[50][50];\n    int n,m,i,j,k,p,q,t;\n    scanf(\"%d %d\", &n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\", s[i]);\n    }\n    for(j=0;j<m;j++)\n    {\n        scanf(\"%s\", w[j]);\n    }\n\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &k);\n        printf(\"%s%s\\n\", s[(k-1)%n],w[(k-1)%m]);\n    }\n\n}\n"}
{"similarity_score": 0.7319148936170212, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "92146c94f20e07d47b076849661f956f", "bug_code_uid": "7bcb3934c2548c8bd7a135492b78bf82", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "32750d2760310b4aa8dd3b9d7ed63412", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n    int ar[1000],a=0,b,c=0,d=10000,e,j,f=0,g=0,n=0,min,i=0,r=0,t=0,m=0,w;\n    char p[200000];\n    gets(p);\n    b=strlen(p);\n\n    for(w=0; w<b; w++)\n    {\n        if(p[w]=='B')\n        {\n            a++;\n        }\n        if(p[w]=='b')\n        {\n            g++;\n        }\n        if(p[w]=='u')\n        {\n            i++;\n        }\n        if(p[w]=='a')\n        {\n            m++;\n        }\n        if(p[w]=='s')\n        {\n            t++;\n        }\n        if(p[w]=='l')\n        {\n            r++;\n        }\n        if(p[w]=='r')\n        {\n            n++;\n        }\n    }\n    m=m/2;\n    i=i/2;\n    if(a<1 || g<1 || i<1 ||m<1 ||t<1 || r<1 || n<1)\n    {\n        printf(\"%d\\n\",c);\n    }\n    ar[0]=a;\n    ar[1]=g;\n    ar[2]=i;\n    ar[3]=m;\n    ar[4]=t;\n    ar[5]=r;\n    ar[6]=n;\n    min=ar[0];\n    for(i=0; i<7; i++)\n    {\n        if(ar[i]<ar[i+1])\n        {\n            min=ar[i];\n        }\n\n    }\n    printf(\"%d\\n\",min);\n\n    return 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n    int ar[1000],a=0,b,c=0,e,j,f=0,g=0,n=0,min,i=0,r=0,t=0,m=0,w;\n    char p[200000];\n    gets(p);\n    b=strlen(p);\n\n    for(w=0; w<b; w++)\n    {\n        if(p[w]=='B')\n        {\n            a++;\n        }\n        if(p[w]=='b')\n        {\n            g++;\n        }\n        if(p[w]=='u')\n        {\n            i++;\n        }\n        if(p[w]=='a')\n        {\n            m++;\n        }\n        if(p[w]=='s')\n        {\n            t++;\n        }\n        if(p[w]=='l')\n        {\n            r++;\n        }\n        if(p[w]=='r')\n        {\n            n++;\n        }\n    }\n    m=m/2;\n    i=i/2;\n    ar[0]=a;\n    ar[1]=g;\n    ar[2]=i;\n    ar[3]=m;\n    ar[4]=t;\n    ar[5]=r;\n    ar[6]=n;\n    min=ar[0];\n    for(i=0; i<7; i++)\n    {\n        if(ar[i]<min)\n        {\n            min=ar[i];\n        }\n\n    }\n    printf(\"%d\\n\",min);\n\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.9900709219858156, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5b1e77e878ff6efd3bd9a024874f5524", "bug_code_uid": "bbb16fa0eab8859a95374671f3dbb19c", "src_uid": "6c65ca365352380052b0c9d693e6d161", "apr_id": "36f1860fc1ddaf709f86f15eee34763e", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n;\n    int Seq[1000];\n    int Delta[1000];\n    int True = 1;\n    scanf(\"%d\", &n);\n    int i;\n    for (i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &Seq[i]);\n        if (i%2)\n        {\n            Delta[i] = i - Seq[i];\n            if (Delta[i] < 0)\n                Delta[i] += n;\n        }\n        else\n        {\n            Delta[i] = Seq[i] - i;\n            if (Delta[i] < 0)\n                Delta[i] += n;\n        }\n        //printf(\"%d\\n\", Delta[i]);\n\n        if (i > 0 && Delta[i] != Delta[i - 1])\n        {\n            True = 0;\n            //printf(\"No at %d\", i);\n        }\n    }\n    if (True)\n        printf(\"Yes\");\n    else\n        printf(\"No\");\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n    int Seq[1000];\n    int Delta[1000];\n    int True = 1;\n    scanf(\"%d\", &n);\n    int i;\n    for (i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &Seq[i]);\n        if (i%2)\n        {\n            Delta[i] = i - Seq[i];\n            if (Delta[i] < 0)\n                Delta[i] += n;\n        }\n        else\n        {\n            Delta[i] = Seq[i] - i;\n            if (Delta[i] < 0)\n                Delta[i] += n;\n        }\n        //printf(\"%d\\n\", Delta[i]);\n\n        if (i > 0 && Delta[i] != Delta[i - 1])\n        {\n            True = 0;\n            //printf(\"No at %d\", i);\n        }\n    }\n    if (True)\n        printf(\"Yes\");\n    else\n        printf(\"No\");\n    return 0;\n}\n"}
{"similarity_score": 0.6214355948869223, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2d4bfbf35e11f94d21ced2b34e81c3b2", "bug_code_uid": "b4584b1b1e6c526491fd07ffcd35fe4e", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "78e65013a3d36949dd7735617cefed1e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar a[n];\r\n\t\tscanf(\"%s\",a);\r\n\t\tint x=n,i;\r\n\t\tif(n==5){\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]=='T' || a[i]=='i' || a[i]=='m' ||a[i]=='u' ||a[i]=='r')\r\n\t\t\t{\r\n\t\t\t\tx--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\tif(x==0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar a[n],t[2]={'T'},I[2]={'i'},M[2]={'m'},U[2]={'u'},R[2]={'r'};\r\n\t\tscanf(\"%s\",a);\r\n\t\tint x=n,i;\r\n\t\tif(n==5){\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]==t[0])\r\n\t\t\t{\r\n\t\t\t\tt[0]='9';\r\n\t\t\t\tx--;\r\n\t\t\t}\r\n\t\t\telse if(a[i]==I[0])\r\n\t\t\t{\r\n\t\t\t\tI[0]='9';\r\n\t\t\t\tx--;\r\n\t\t\t}\r\n\t\t\telse if(a[i]==M[0])\r\n\t\t\t{\r\n\t\t\t\tM[0]='9';\r\n\t\t\t\tx--;\r\n\t\t\t}\r\n\t\t\telse if(a[i]==U[0])\r\n\t\t\t{\r\n\t\t\t\tU[0]='9';\r\n\t\t\t\tx--;\r\n\t\t\t}\r\n\t\t\telse if(a[i]==R[0])\r\n\t\t\t{\r\n\t\t\t\tR[0]='9';\r\n\t\t\t\tx--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\tif(x==0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.6613226452905812, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "0ab5070a72db33d9b95959d3ef9bd07c", "bug_code_uid": "6f4fb49a70063b92c9d94c49c21612c4", "src_uid": "c01fc2cb6efc7eef290be12015f8d920", "apr_id": "3175a8d60a9336c5a3bdf02b3fe88897", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char str[200005];\n    int n, i, k = 0;\n\n    scanf(\"%d\", &n);\n    scanf(\"%s\", str);\n\n    for (i=0; i<n-1; i++)\n    {\n        if (str[i] > str[i+1])\n        {\n            k = i;\n            break;\n        }\n    }\n\n    if (k == 0)\n    {\n        for (i=0; i<n-1; i++)\n            printf(\"%c\", str[i]);\n    }\n\n    else\n    {\n        for (i=0; i<n; i++)\n        {\n            if (i != k)\n                printf(\"%c\", str[i]);\n        }\n    }\n\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char str[200005];\n    int n, i, k;\n\n    scanf(\"%d\", &n);\n    char ch = getchar();\n    scanf(\"%s\", str);\n\n    for (i=0; i<n-1; i++)\n    {\n        if (str[i] > str[i+1])\n        {\n            k = i;\n            break;\n        }\n        else\n        {\n            k = n-1;\n        }\n    }\n\n    for (i=0; i<n; i++)\n    {\n        if (i != k)\n            printf(\"%c\", str[i]);\n    }\n\n\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.832625318606627, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f94a478a671042b7bb10e07a1b261b74", "bug_code_uid": "0d62aea4a6b7f6847c84cc47818f5a1e", "src_uid": "af8ac55aa2594350226653c8d5ff47e4", "apr_id": "257779c66308f7e11f939f360874cadb", "difficulty": 1500, "tags": ["dp", "sortings", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid merge (long long arr[],long long l,long long m,long long r){\n\n\tlong long i,j,k;\n\tlong long a=(m-l+1);\n\tlong long b=(r-m);\n\tlong long left[a],right[b];\n\n\n\tfor(i=0;i<a;i++)\n\t\tleft[i]=arr[l+i];\n\tfor(j=0;j<b;j++)\n\t\tright[j]=arr[m+1+j];\n\n\ti=0;j=0;k=l;\n\n\twhile((i<a)&&(j<b)){\n\n\t\tif(left[i]<=right[j]){\n\n\n\t\t\tarr[k]=left[i];\n\t\t\ti++;\n\t\t\tk++;\n\n\n\t\t}\n\n\t\telse{\n\n\n\t\t\tarr[k]=right[j];\n\t\t\tj++;\n\t\t\tk++;\n\n\t\t}\n\t}\n\n\twhile(i<a){\n\n\t\tarr[k]=left[i];\n\t\ti++;\n\t\tk++;\n\n\t}\n\n\twhile(j<b){\n\n\t\tarr[k]=right[j];\n\t\tj++;\n\t\tk++;\n\n\t}\n\n}\n\n\nvoid mergesort(long long arr[],long long l,long long r){\n\n\tif(l<r){\n\n\t\tlong long m=l+(r-l)/2;\n\n\t\tmergesort(arr,l,m);\n\t\tmergesort(arr,m+1,r);\n\t\tmerge(arr,l,m,r);\n\n\n\t}\n\n}\n\n\n\n\nint main(){\n\n\tlong long n,m,ctr=1,count=1;\n\tscanf(\"%lld %lld\",&n,&m);\n\tlong long arr[n],ans[n+1];\n\n\tfor(long long o=0;o<=n;o++)\n\t\tans[o]=0;\n\n\tfor(long long i=0;i<n;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\n\tmergesort(arr,0,n-1);\n\n\n\tfor(long long z=1;z<n;z++)\n\t\tarr[z]=arr[z]+arr[z-1];\n\tans[0]=arr[0];\n\n\tfor(long long a=1;a<=n;a++){\n\t\n\t\tfor(long long b=a-1;b>=0;b-=m)\n\t\t{\n\n\t\t\tans[a]+=arr[b];\n\n\t\t}\n\t}\n\n\tfor(long long h=1;h<=n;h++)\n\t\tprintf(\"%lld \",ans[h]);\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nvoid merge (long long arr[],long long l,long long m,long long r){\n\n\tlong long i,j,k;\n\tlong long a=(m-l+1);\n\tlong long b=(r-m);\n\tlong long left[a],right[b];\n\n\n\tfor(i=0;i<a;i++)\n\t\tleft[i]=arr[l+i];\n\tfor(j=0;j<b;j++)\n\t\tright[j]=arr[m+1+j];\n\n\ti=0;j=0;k=l;\n\n\twhile((i<a)&&(j<b)){\n\n\t\tif(left[i]<=right[j]){\n\n\n\t\t\tarr[k]=left[i];\n\t\t\ti++;\n\t\t\tk++;\n\n\n\t\t}\n\n\t\telse{\n\n\n\t\t\tarr[k]=right[j];\n\t\t\tj++;\n\t\t\tk++;\n\n\t\t}\n\t}\n\n\twhile(i<a){\n\n\t\tarr[k]=left[i];\n\t\ti++;\n\t\tk++;\n\n\t}\n\n\twhile(j<b){\n\n\t\tarr[k]=right[j];\n\t\tj++;\n\t\tk++;\n\n\t}\n\n}\n\n\nvoid mergesort(long long arr[],long long l,long long r){\n\n\tif(l<r){\n\n\t\tlong long m=l+(r-l)/2;\n\n\t\tmergesort(arr,l,m);\n\t\tmergesort(arr,m+1,r);\n\t\tmerge(arr,l,m,r);\n\n\n\t}\n\n}\n\n\n\n\nint main(){\n\n\tlong long n,m,ctr=1,count=1,x;\n\tscanf(\"%lld %lld\",&n,&m);\n\tlong long arr[n],ans[n+1],M[m];\n\n\tfor(long long o=0;o<=n;o++)\n\t\tans[o]=0;\n\n\tfor(long long i=0;i<n;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\n\tmergesort(arr,0,n-1);\n\tfor(long long h=1;h<n;h++)\n\t\tarr[h]+=arr[h-1];\n\n\tfor(long long q=0;q<m;q++)\n\t\tM[q]=arr[q];\n\n\tfor(long long h=0;h<m;h++)\n\t\tprintf(\"%lld \",M[h]);\n\n\tfor(long long r=m;r<n;r++){\n\n\t\tx=r%m;\n\t\tM[x]+=arr[r];\n\t\tprintf(\"%lld \",M[x]);\n\n\t}\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9803613511390417, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "57a165e4b13fc5f274419305572e7bb3", "bug_code_uid": "3f28ac6cebab80cbbdac0785d3c61177", "src_uid": "351ffff1dfe1bc1762f062f612463759", "apr_id": "c7cbc9a3bc5cb82f0b74826ce50cf26e", "difficulty": 900, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#define max 101\r\nvoid solve()\r\n{\r\n    int ab = 0, ba = 0;\r\n    char s[max];\r\n    scanf(\"%s\",s);\r\n    for (int i = 0; i < strlen(s) - 1; i++)\r\n    {\r\n        if (s[i] == 'a' && s[i + 1] == 'b')\r\n        {\r\n            ab++;\r\n        }\r\n        else if (s[i] == 'b' && s[i + 1] == 'a')\r\n        {\r\n            ba++;\r\n        }\r\n    }\r\n    if (ab > ba)\r\n    {\r\n        s[0] = 'b';\r\n    }\r\n    else if (ba > ab)\r\n    {\r\n        s[0] = 'a';\r\n    }\r\n    printf(\"%s\",s);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#define max 101\r\nvoid solve()\r\n{\r\n    int ab = 0, ba = 0;\r\n    char s[max];\r\n    scanf(\"%s\",s);\r\n    for (int i = 0; i < strlen(s) - 1; i++)\r\n    {\r\n        if (s[i] == 'a' && s[i + 1] == 'b')\r\n        {\r\n            ab++;\r\n        }\r\n        else if (s[i] == 'b' && s[i + 1] == 'a')\r\n        {\r\n            ba++;\r\n        }\r\n    }\r\n    if (ab > ba)\r\n    {\r\n        s[0] = 'b';\r\n    }\r\n    else if (ba > ab)\r\n    {\r\n        s[0] = 'a';\r\n    }\r\n    printf(\"%s\",s);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        solve();\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.41697877652933835, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ac834a921c50d556c51ad0263dba0772", "bug_code_uid": "3c92a7604320b601ef48da3d2fe77b2d", "src_uid": "c05426881a7dccc1aa79608b612290a7", "apr_id": "958c49664edb8672b117d3e0829f3653", "difficulty": 800, "tags": ["dfs and similar", "dp", "flows", "graph matchings", "graphs", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,ans=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar enemy[n+1],fried[n+1];\r\n\t\tscanf(\"%s\",enemy);\r\n\t\tscanf(\"%s\",fried);\r\n\t\tfor(j=1;j<n-1;j++)\r\n\t\t{\r\n\t\t    if(enemy[j]=='0'&&fried[j]=='1')\r\n\t\t\tans++;\r\n\t\t\telse\r\n\t\t\tif((enemy[j-1]=='1'||enemy[j+1]=='1')&&fried[j]=='1')\r\n\t\t\tans++;\r\n        }\r\n        if((enemy[0]=='0'||enemy[0]=='1')&&fried[0]=='1')\r\n        ans++;\r\n        if((enemy[j-1]=='0'||enemy[j-2]=='1')&&fried[j-1]=='1')\r\n        ans++;\r\n        printf(\"%d\\n\",ans);\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tint n,j,ans=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tchar enemy[n+1],fried[n+1];\r\n\t\tscanf(\"%s\",enemy);\r\n\t\tscanf(\"%s\",fried);\r\n\t\tfor(j=0;j<n-1;j++)\r\n\t\t{\r\n\t\t\tif(j==0)\r\n\t\t\t{\r\n\t\t\t\tif(enemy[j]=='0'&&fried[j]=='1')\r\n\t\t\t\tans++;\r\n\t\t\t\telse\r\n\t\t\t\tif(enemy[j+1]=='1'&&fried[j]=='1')\r\n\t\t\t\t{\r\n\t\t\t\t\tenemy[j+1]='2';\r\n\t\t\t\t\tans++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(enemy[j-1]=='1'&&fried[j]=='1')\r\n\t\t\t\t{\r\n\t\t\t\t\tans++;\r\n\t\t\t\t\tenemy[j-1]='2';\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\tif(enemy[j]=='0'&&fried[j]=='1')\r\n\t\t\t\t{\r\n\t\t\t\t\tans++;\r\n\t\t\t\t\tenemy[j]='2';\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\tif(enemy[j+1]=='1'&&fried[j]=='1')\r\n\t\t\t\t{\r\n\t\t\t\t\tans++;\r\n\t\t\t\t\tenemy[j+1]='2';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(j==n-1)\r\n\t\t{\r\n\t\t\t    if(enemy[j-1]=='1'&&fried[j]=='1')\r\n\t\t\t\t{\r\n\t\t\t\t\tans++;\r\n\t\t\t\t\tenemy[j-1]='2';\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\tif(enemy[j]=='0'&&fried[j]=='1')\r\n\t\t\t\t{\r\n\t\t\t\t\tans++;\r\n\t\t\t\t\tenemy[j]='2';\r\n\t\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n}"}
{"similarity_score": 0.936986301369863, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "79238c3de81331430f425b59416f1594", "bug_code_uid": "2144cad8f14adc69f645d156ce3becde", "src_uid": "676729309dfbdf4c9d9d7c457a129608", "apr_id": "3ab04d5f952407c08ce54ef85a7fdf7b", "difficulty": 1600, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 200000\n#define H 200000\n\nint main() {\n\tstatic int hh[N], kk[H + 1];\n\tint n, k, i, hmin, h, x, ans;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &hh[i]);\n\tfor (i = 0; i < n; i++)\n\t\tkk[hh[i]]++;\n\tfor (h = H - 1; h >= 1; h--)\n\t\tkk[h] += kk[h + 1];\n\thmin = H + 1;\n\tfor (i = 0; i < n; i++)\n\t\tif (hmin > hh[i])\n\t\t\thmin = hh[i];\n\tans = 0;\n\tfor (h = H; h > hmin; ) {\n\t\tx = 0;\n\t\twhile (h > hmin && x + kk[h] <= k)\n\t\t\tx += kk[h], h--;\n\t\tans++;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <stdio.h>\n\n#define N 200000\n#define H 200000\n\nint main() {\n\tstatic int hh[N], kk[H + 1];\n\tint n, k, i, hmin, h, x, ans;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &hh[i]);\n\tfor (i = 0; i < n; i++)\n\t\tkk[hh[i]]++;\n\tfor (h = H - 1; h >= 1; h--)\n\t\tkk[h] += kk[h + 1];\n\thmin = H + 1;\n\tfor (i = 0; i < n; i++)\n\t\tif (hmin > hh[i])\n\t\t\thmin = hh[i];\n\tans = 0;\n\th = H;\n\twhile (kk[h] == 0)\n\t\th--;\n\twhile (h > hmin) {\n\t\tx = 0;\n\t\twhile (h > hmin && x + kk[h] <= k)\n\t\t\tx += kk[h], h--;\n\t\tans++;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9615384615384616, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d9d4c0e6611c550f029263da350d4577", "bug_code_uid": "4d5251a96ecfda367aa97dc652abea25", "src_uid": "3f97dc063286a7af4838b7cd1c01df69", "apr_id": "cb5f15fc65bc1fe565b23d02ade031ca", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n  int m,n,l[100],r[100],i,j;\n  char s[100],c1[100],c2[100];\nscanf(\"%d%d\",&n,&m);\nscanf(\"%s\",s);\n  for ( i=0; i<m; i++)\n  {\n      scanf(\"%d\",&l[i]);\n      scanf(\"%d\",&r[i]);\n      scanf(\"%s\",&c1[i]);\n      scanf(\"%s\",&c2[i]);\n  }\n\n  for (i=0; i<m; i++)\n  {\n      for (j=l[i]-1; j<r[i];j++)\n      {\n          if (c1[i] == s[j])\n            {s[j]= c2[i];\n                            }\n      }\n  }\n  printf(\"%s\",s);\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n  int m,n,l[101],r[101],i,j;\n  char s[101],c1[101],c2[101];\nscanf(\"%d%d\",&n,&m);\nscanf(\"%s\",s);\n  for ( i=0; i<m; i++)\n  {\n      scanf(\"%d\",&l[i]);\n      scanf(\"%d\",&r[i]);\n      scanf(\"%s\",&c1[i]);\n      scanf(\"%s\",&c2[i]);\n  }\n\n  for (i=0; i<m; i++)\n  {\n      for (j=l[i]-1; j<r[i];j++)\n      {\n          if (c1[i] == s[j])\n            {s[j]= c2[i];\n                            }\n      }\n  }\n  printf(\"%s\",s);\n\n}\n"}
{"similarity_score": 0.9876543209876543, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3ffe4b071fe183e451694df9cabd002e", "bug_code_uid": "3a457e23888922d349d7ca5d665477a6", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "1669328dad052bce2235064a788fd25e", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint arr[6001];\n\tint n,n1;\n\tint a,b,c;\n\tlong long int ans;\t\n\tans=0;\n\tscanf(\"%d\",&n);\n\tfor(n1=1;n1<=n;n1++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tarr[a]++;\n\t}\n\tfor(n1=1;n1<=n;n1++)\n\t{\n\t\tif (arr[n1]>=2)\n\t\t{\n\t\t\tc=n1+1;\n\t\t\twhile(arr[n1]>=2)\n\t\t\t{\n\t\t\t\tarr[n1]--;\n\t\t\t\tfor(b=c;b<=6000;b++)\n\t\t\t\t{\n\t\t\t\t\tif (arr[b]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tarr[b]++;\n\t\t\t\t\t\tans+= (b-n1);\n\t\t\t\t\t\tc=b+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%I64d\\n\",ans);\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint arr[10000];\n\tint n,n1;\n\tint a,b,c;\n\tlong long int ans;\t\n\tans=0;\n\tscanf(\"%d\",&n);\n\tfor(n1=1;n1<=n;n1++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tarr[a]++;\n\t}\n\tfor(n1=1;n1<=n;n1++)\n\t{\n\t\tif (arr[n1]>=2)\n\t\t{\n\t\t\tc=n1+1;\n\t\t\twhile(arr[n1]>=2)\n\t\t\t{\n\t\t\t\tarr[n1]--;\n\t\t\t\tfor(b=c;b<=6001;b++)\n\t\t\t\t{\n\t\t\t\t\tif (arr[b]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tarr[b]++;\n\t\t\t\t\t\tans+= (b-n1);\n\t\t\t\t\t\tc=b+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%I64d\\n\",ans);\n}\n"}
{"similarity_score": 0.8048433048433048, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "85a6e44c9f3106b0dd67fd16fa7dd0ca", "bug_code_uid": "a5fb28d8bc39785a1653cf1881264397", "src_uid": "e63de0fffd00b2da103545a7f1e405be", "apr_id": "2e1cdc76654660f23d73e2322b5e0f7a", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,b,i,r,j,l,k,h,t,s;\n   h=0;t=0;\n   int y=0;\n   int q=0;\n   scanf(\"%d\",&n);\n   int m[n];\n   int o[n];\n    if(n>0&&n<=100000)\n     {\n       for(j=0;j<n;j++)\n       {\n           scanf(\"%d\",&m[j]);\n           o[j]=m[j];\n       }\n\n\n             for(k=0;k<n;k++)\n                {\n                if ((o[k]==o[o[k]])&&(k!=i))\n                {\n                    if(y<1)\n                    {\n                h =  o[i];\n                o[i] = o[k];\n                o[k] = h;\n                y++;\n                }\n                }\n        }\nif(y<1)\n{\nq++;\ny++;\n}\n\nfor(b=0;b<n;b++)\n{\nif(o[b]==b)\n  q++;\n}\nif(q>n)\n    q--;\nprintf(\"%d\",q);\n\n}\n\nreturn 0;\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,b,i,r,j,l,k,h,t,s;\n   h=0;t=0;\n   int y=0;\n   int q=0;\n   scanf(\"%d\",&n);\n   int m[n];\n   int o[n];\n\n\n       for(j=0;j<n;j++)\n       {\n           scanf(\"%d\",&m[j]);\n           o[j]=m[j];\n       }\n\n\n             for(k=0;k<n;k++)\n                {\n                if (o[o[k]]==k && y<1 && o[k]!=k)\n                {\n                h =  o[o[k]];\n                o[o[k]] = o[k];\n                o[k] = h;\n                y++;\n                break;\n                }\n        }\n        if(y<1)\n        {\n        q++;\n        y++;\n        }\n\nfor(b=0;b<n;b++)\n{\nif(o[b]==b)\n  q++;\n}\nif(q>n)\n    q--;\nprintf(\"%d\",q);\n\n\nreturn 0;\n    }\n"}
{"similarity_score": 0.9047619047619048, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "67b25a601b866b1e4e9f95df92645461", "bug_code_uid": "06364bb7f8e1d2e5a6933271bd89b73f", "src_uid": "4d5d20fd586ddbea2adeab104a6c2aec", "apr_id": "89e7d4687aee3074114dfe22f5fdf2e0", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    long int n,k,t;\r\n   // printf(\"enter t\");\r\n    scanf(\"%ld\",&t);\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n       // printf(\"enter n & k\");\r\n        scanf(\"%ld\",&n);\r\n        scanf(\"%ld\",&k);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++)\r\n            scanf(\"%d\",&arr[i]);\r\n        int count=0;\r\n        for(int j=1;j<n-1;j++)\r\n        {\r\n            if(arr[j]>arr[j-1]+arr[j+1])\r\n            count++;\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    long int n,k,t;\r\n   // printf(\"enter t\");\r\n    scanf(\"%ld\",&t);\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n       // printf(\"enter n & k\");\r\n        scanf(\"%ld\",&n);\r\n        scanf(\"%ld\",&k);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++)\r\n            scanf(\"%d\",&arr[i]);\r\n        int count=0;\r\n        for(int j=1;j<n-1;j++)\r\n        {\r\n            if(arr[j]>arr[j-1]+arr[j+1])\r\n            count++;\r\n        }\r\n        if(k==1)\r\n        {\r\n            if(n%2==0) count=(n/2)-1;\r\n            else count=n/2;\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8142361111111112, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8d4f27a817126e908fe966aa410c2770", "bug_code_uid": "eb3a87cc8d408b63a72195e16017b2d5", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "4426cb41be0f86e35719d12addc08cbd", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*#include<stdio.h>\nint\tn,s,x[105],y[105],i,j,t=0,b=0,min;\nint main(){\n\tscanf(\"%i%i\",&n,&s);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%i%i\",&x[i],&y[i]);\n\t\tif(y[i]!=0)b=i;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(x[i]+1*(y[i]>0)>s)t++;\n\t}\n\tif(t==n)printf(\"-1\\n\");\n\telse{\n\t\tmin=y[b];\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(y[i]<min&&y[i]!=0&&x[i]<=s)min=y[i];\n\t\t}\n\t\tprintf(\"%i\\n\",(100-min)*(min>0));\n\t}\n\t\n\treturn 0;\n}*/\n#include<stdio.h>\nint n,x;\nint main(){\n\tscanf(\"%i\",&n);\n\twhile(n--){\n\t\tscanf(\"%i\",&x);\n\t}\n\tprintf(\"%i\\n\",x);\n\treturn 0;\n}", "fixed": "/*#include<stdio.h>\nint\tn,s,x[105],y[105],i,j,t=0,b=0,min;\nint main(){\n\tscanf(\"%i%i\",&n,&s);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%i%i\",&x[i],&y[i]);\n\t\tif(y[i]!=0)b=i;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(x[i]+1*(y[i]>0)>s)t++;\n\t}\n\tif(t==n)printf(\"-1\\n\");\n\telse{\n\t\tmin=y[b];\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(y[i]<min&&y[i]!=0&&x[i]<=s)min=y[i];\n\t\t}\n\t\tprintf(\"%i\\n\",(100-min)*(min>0));\n\t}\n\t\n\treturn 0;\n}*/\n#include<stdio.h>\nint n,H[100005],i,j,tot=0,p,serah=0;\nint main(){\n\tscanf(\"%i\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%i\",&H[i]);\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tp=H[i-1]-H[i];\n\t\tserah=serah+p;\n\t\tif(serah<0){\n\t\t\ttot=tot-serah;\n\t\t\tserah=0;\n\t\t}\n\t}\n\tprintf(\"%i\\n\",tot);\n\treturn 0;\n}"}
{"similarity_score": 0.6493212669683258, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "15f0888caab3ed2651a1ab69ce2bc928", "bug_code_uid": "9fbbe857769a5ce3653009a0b07ee3ed", "src_uid": "adf4239de3b0034cc690dad6160cf1d0", "apr_id": "33e7a932ef9fbf0eb5df9f9ae46a3644", "difficulty": 1000, "tags": ["geometry", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{ int t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{long long int n,m,j,k,l,o,s=0;\nscanf(\"%lld\",&n);\nlong long int p[n];\nfor(j=0;j<n;j++)\n{ scanf(\"%lld\",&p[j]);}\nscanf(\"%lld\",&m);\nlong long int q[m];\nfor(k=0;k<m;k++)\n{ scanf(\"%lld\",&q[k]);}\nfor(l=0;l<n;l++)\n{for(o=0;o<m;o++)\n{ if((p[l]+q[o])%2==0)\n  {s++;\n   continue;}\nelse\ncontinue;}}\nprintf(\"%lld\\n\",s);\n\n}\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{int t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{long long int min1,min2,n,m,j,k,l,o,s,po=0,qo=0,pe=0,qe=0;\nscanf(\"%lld\",&n);\nlong long int p[n];\nfor(j=0;j<n;j++)\n{ scanf(\"%lld\",&p[j]);}\nscanf(\"%lld\",&m);\nlong long int q[m];\nfor(k=0;k<m;k++)\n{ scanf(\"%lld\",&q[k]);}\nfor(l=0;l<n;l++)\n{ if(p[l]%2==0||p[l]==0)\n   pe=pe+1;\n  else\n   po++;}\nfor(o=0;o<m;o++)\n{ if(q[o]%2==0||q[o]==0)\n  qe=qe+1;\nelse\nqo++;}\ns=pe*qe+po*qo;\nprintf(\"%lld\\n\",s);\n\n}\n    \n    return 0;\n}"}
{"similarity_score": 0.9269521410579346, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e89db107c4e9ef82e8d17ad894e88f87", "bug_code_uid": "9544a10b2b5a63ffec4cddef70284fe7", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "a521dc4014791b4acb37c7db1113a7ae", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int arr[2000][3],i,j,n,sum;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        for(j=0;j<3;j++)\n        scanf(\"%d\",&arr[i][j]);\n    for(i=0;i<3;i++)\n    {\n        sum=0;\n        for(j=0;j<n;j++)\n            sum=sum+arr[i][j];\n        sum=arr[n][i];\n\n    }\n\n    if(arr[n][0]==0&&arr[n][1]==0&&arr[n][2]==0)\n            printf(\"YES\");\n      else\n        printf(\"NO\");\n}", "fixed": "#include<stdio.h>\nmain()\n{\n    int arr[2000][3],i,j,n,sum;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        for(j=0;j<3;j++)\n        scanf(\"%d\",&arr[i][j]);\n    for(i=0;i<3;i++)\n    {\n        sum=0;\n        for(j=0;j<n;j++)\n            sum=sum+arr[j][i];\n        arr[n][i]=sum;\n\n    }\n\n    if(arr[n][0]==0&&arr[n][1]==0&&arr[n][2]==0)\n            printf(\"YES\");\n      else\n        printf(\"NO\");\n\n\n}"}
{"similarity_score": 0.8821752265861027, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "6b93e37d0a2646bc22a808f87561ff29", "bug_code_uid": "c433b3b61e153b718f4a03f1ddf51024", "src_uid": "a585045a9a6f62bfe1c0618c2ee02f48", "apr_id": "832bef1f0ec9412dae3ec599cbd51729", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void* p,const void* q)\n{\n\treturn *(int *)p-*(int *)q;\n}\nint m(int a[],int n,int m)\n{\n\tqsort(a+1,n,sizeof(a[1]),cmp);\n\treturn a[n-m+1];\n}\n\nint main()\n{\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tint n,k,j,i,p,a[1010]={0},b[1010]={0};\n\tscanf(\"%d%d\",&n,&k);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\tp=m(b,n,k);\n\tprintf(\"%d\\n\",p);\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]>=p){\n\t\t\tprintf(\"%d\",i);\n\t\t    break;\n\t\t}\n\t}\t\n\tfor(j=i+1;j<=n;j++){\n\t\tif(a[j]>=p){\n\t\t\tprintf(\" %d\",j);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint cmp(const void* p,const void* q)\n{\n\treturn *(int *)p-*(int *)q;\n}\n\nint m(int a[],int n,int m)\n{\n\tqsort(a+1,n,sizeof(a[1]),cmp);\n\treturn a[n-m+1];\n}\n\nint main()\n{\n\t\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tint n,k,j,i,p,count=0,a[1010]={0},b[1010]={0};\n\tscanf(\"%d%d\",&n,&k);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\tp=m(b,n,k);\n\tprintf(\"%d\\n\",p);\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i]>p){\n\t\t\tprintf(\"%d\",i);\n\t\t\tcount++;\n\t\t    break;\n\t\t}\n\t}\n\tfor(j=i+1;j<=n;j++){\n\t\tif(a[j]>p){\n\t\t\tprintf(\" %d\",j);\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count<k){\n\t\tfor(i=1;;i++){\n\t\t\tif(a[i]==p){\n\t\t\t\tprintf(\" %d\",i);\n\t\t\t\tcount++;\n\t\t\t\tif(count==k) break;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.559322033898305, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4adf10b23dd2d5002855d5571c08381f", "bug_code_uid": "65f8d80d18f86e993afa205d4047d959", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "4fb760cfd65f498da9ccf3f2c094468e", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n  int t,n,i;\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n      int count=0;\r\nscanf(\"%d\",&n);\r\nint a[n];\r\nfor(i=1;i<=n;i++)\r\n{\r\n    scanf(\"%d\",&a[i]);\r\n    if(a[i]!=i)\r\n        count++;\r\n}\r\nif(count%2==0)\r\n{\r\n    printf(\"%d\\n\",count/2);\r\n    continue;\r\n}\r\nelse\r\n{\r\nprintf(\"%d\\n\",(count-3));\r\ncontinue;\r\n}\r\n\r\n}\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n  int t,n,i;\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n      int count=0;\r\nscanf(\"%d\",&n);\r\nint a[n];\r\nfor(i=1;i<=n;i++)\r\n{\r\n    scanf(\"%d\",&a[i]);\r\n    if(a[i]==i)\r\n        count++;\r\n}\r\n\r\n    if(count==n)\r\n    {\r\n        printf(\"0\\n\");\r\n    }\r\n    else if(a[1]==1 || a[n]==n)\r\n        printf(\"1\\n\");\r\n    else if(a[1]==n && a[n]==1)\r\n    {\r\n        printf(\"3\\n\");\r\n    }\r\n    else\r\n        printf(\"2\\n\");\r\n    \r\n\r\n}\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.7880597014925373, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5d8c6412814ebfc6e74b834aec1f3389", "bug_code_uid": "55fc2095eace8c8401f3210370aef8dd", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "e7261885d165a607c67d8b1dac906e5f", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nunsigned long long int n,k,i=1;\n\t\n\tscanf(\"%llu %llu\",&n,&k);\nwhile(1)\n{\nif(k<=i*n)\n{\tprintf(\"%llu\",i);\nreturn 0;\n}\ni++;\n\n}\nreturn 0;\n}\n\t\n", "fixed": "#include<stdio.h>\nint main()\n{\nunsigned long long int n,k,i=1;\n\t\n\tscanf(\"%llu %llu\",&n,&k);\nif(k%n==0)\n\tprintf(\"%llu\",k/n);\nelse\nprintf(\"%llu\",(k/n+1));\nreturn 0;\n}\n\t\n"}
{"similarity_score": 0.9902912621359223, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "70cf59be9b3ce37c77e26237dd7f76e8", "bug_code_uid": "dd8390d647fb0006bef5eed550149093", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "15c13cfd53417d2e2600868496dc5773", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,a,b;\n    int countM=0;\n    int countC=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        if(a>b)\n        {\n            countM=countM+1;\n        }\n        else\n        {\n            countC=countC+1;\n        }\n    }\n    if(countM>countC)\n    {\n        printf(\"Mishka\");\n    }\n    else if(countM<countC)\n    {\n        printf(\"Chris\");\n    }\n    else if(countM==countC)\n    {\n        printf(\"Friendship is magic!^^\");\n    }return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a,b;\n    int countM=0;\n    int countC=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a>b)\n        {\n            countM=countM+1;\n        }\n        else if (a<b)\n        {\n            countC=countC+1;\n        }\n    }\n    if(countM>countC)\n    {\n        printf(\"Mishka\");\n    }\n    else if(countM<countC)\n    {\n        printf(\"Chris\");\n    }\n    else if(countM==countC)\n    {\n        printf(\"Friendship is magic!^^\");\n    }return 0;\n}\n"}
{"similarity_score": 0.9179734620024126, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "96cdc654e6cfa646fec6e655f3f3ce30", "bug_code_uid": "0ab2a2f302c5ccc7fa1424333c96f530", "src_uid": "b15bc7ff01f239a7e4377868a7dda0a6", "apr_id": "fc65fb816d27e96718fe8b580c5f58a8", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,n1,k,b,y,w,i,c;\n    char sq[100000];\n    for( y=0;y<=100000;y++)\n    {\n        sq[y]='S';\n    }\n\n\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&k);\n    if(n%2==0 && (k>(n*n)/2))\n    {\n         printf(\"NO\");\n    }\n    else if (n%2==1 && (k > (int)((n*n)/2)+1))\n    {\n         printf(\"NO\");\n    }\n    else\n    {\n        printf(\"YES\\n\");\n        n1=0;\n        for( i=1;i<=2*k;i++)\n        {\n          if( n1==0)\n          {\n              if (i%n==0) n1=1;\n\n              if (i%2==1)  sq[i]='L';\n          }\n          else\n          {\n              if (i%n==0) n1=0;\n              if(i%2==0) sq[i]='L';\n          }\n        }\n\n    for( w=1;w<=n*n;w++)\n    {\n        printf(\"%c\",sq[w]);\n        if (w%n==0) printf(\"\\n\");\n    }\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,n1,k,b,y,w,i,c;\n    char sq[100000];\n    for( y=0;y<=100000;y++)\n    {\n        sq[y]='S';\n    }\n\n\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&k);\n    if(n%2==0 && (k>(n*n)/2))\n    {\n         printf(\"NO\");\n    }\n    else if (n%2==1 && (k > (int)((n*n)/2)+1))\n    {\n         printf(\"NO\");\n    }\n    else\n    {\n        printf(\"YES\\n\");\n        n1=0;\n        for( i=1;i<=2*k;i++)\n        {\n            if (n%2==0)\n            {\n          if( n1==0)\n          {\n              if (i%n==0) n1=1;\n\n              if (i%2==1)  sq[i]='L';\n          }\n          else\n          {\n              if (i%n==0) n1=0;\n              if(i%2==0) sq[i]='L';\n          }\n            }\n            else\n            {\n                if( i%2==1) sq[i]='L';\n            }\n        }\n\n    for( w=1;w<=n*n;w++)\n    {\n        printf(\"%c\",sq[w]);\n        if (w%n==0) printf(\"\\n\");\n    }\n    }\n\n}\n"}
{"similarity_score": 0.9003322259136213, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "27e2c24f21f66d9a06ffaded221b8e6e", "bug_code_uid": "3cd5bae7481c9f57e3d8a81b9a3e78f3", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "796270ea5494f66c9a1b0616a2448a7a", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n //Compiler version gcc 6.3.0\n\n int main(void)\n {\n \tint n,c,min,mt=1,t=2;\n \tscanf(\"%d\",&c);\n \tscanf(\"%d\",&min);\n \tfor(t=2;t<=c;t++){\n \t\tscanf(\"d\",&n);\n \t\tif(n==min)mt=0;\n \t\t\telse if(n<min){\n \t\t\t\tmt=t;\n \t\t\t\tmin=n;\n \t\t\t}\n \t}\n \tif(mt==0)printf(\"Still Rozdil\");\n \telse printf(\"%d\",mt);\n \treturn 0;\n }\n\n\n", "fixed": "#include <stdio.h>\n int main()\n {\n \tint n,c,min,mt=1,t=2;\n \tscanf(\"%d\",&c);\n \tscanf(\"%d\",&min);\n \tfor(t=2;t<=c;t++){\n \t\tscanf(\"%d\",&n);\n \t   if(n==min)mt=0;\n \t\t\telse if(n<min){\n \t\t\t\tmt=t;\n \t\t\t\tmin=n;\n \t\t\t}\n \t}\n \tif(mt==0)printf(\"Still Rozdil\");\n \telse printf(\"%d\",mt);\n \treturn 0;\n }\n"}
{"similarity_score": 0.9978142076502732, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aafef3c5bb5d15130710224d50971670", "bug_code_uid": "4b51e849fce8f1d63d254dc1cb7a0319", "src_uid": "7c2337c1575b4a62e062fc9990c0b098", "apr_id": "3bbefbbca91f3334ea3e9cd56bf5ee18", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int t,n,k,a[1000],b[1000],i,j,m;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       scanf(\"%d%d\",&n,&m);\n       for(i=0;i<n;i++)\n            scanf(\"%d\",&a[i]);\n       for(i=0;i<n;i++)\n            scanf(\"%d\",&b[i]);\n       int x,y,p;\n       for(x=1;x<n;x++)\n       {\n          p=a[x];\n          y=x-1;\n          while(y>=0 && a[y]>p)\n          {\n              a[y+1]=a[y];\n              y=y-1;\n          }\n          a[y+1]=p;\n       }\n       for(x=1;x<n;x++)\n       {\n          p=b[x];\n          y=x-1;\n          while(y>=0 && b[y]<p)\n          {\n              b[y+1]=b[y];\n              y=y-1;\n          }\n          b[y+1]=p;\n       }\n        int s=0;\n       for(i=0;i<n;i++)\n       {\n            if(a[i]<b[i] && k>0)\n            {\n                s+=b[i];\n                 k--;\n            }  \n            else\n              s+=a[i];\n       }\n       printf(\"%d\\n\",s);\n   }\n   return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n   int t,n,k,a[1000],b[1000],i,j;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       scanf(\"%d%d\",&n,&k);\n       for(i=0;i<n;i++)\n            scanf(\"%d\",&a[i]);\n       for(i=0;i<n;i++)\n            scanf(\"%d\",&b[i]);\n       int x,y,p;\n       for(x=1;x<n;x++)\n       {\n          p=a[x];\n          y=x-1;\n          while(y>=0 && a[y]>p)\n          {\n              a[y+1]=a[y];\n              y=y-1;\n          }\n          a[y+1]=p;\n       }\n       for(x=1;x<n;x++)\n       {\n          p=b[x];\n          y=x-1;\n          while(y>=0 && b[y]<p)\n          {\n              b[y+1]=b[y];\n              y=y-1;\n          }\n          b[y+1]=p;\n       }\n        int s=0;\n       for(i=0;i<n;i++)\n       {\n            if(a[i]<b[i] && k>0)\n            {\n                s+=b[i];\n                 k--;\n            }  \n            else\n              s+=a[i];\n       }\n       printf(\"%d\\n\",s);\n   }\n   return 0;\n}"}
{"similarity_score": 0.9993284083277367, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6d5e03f14e8499e06688c2d325e4ce1a", "bug_code_uid": "f682e083645b5b3754ff7e8b281f67d7", "src_uid": "f1d3032f1cb07ad6187a37c84376510d", "apr_id": "436b2702068e16a0adb33511efa9807a", "difficulty": 800, "tags": ["brute force", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\ntypedef struct {\n    int x;\n    int y;\n} coordenada;\n\ncoordenada analizar(coordenada B);\n\nint main(int argc, char const *argv[]){\n    int casos,i;\n    coordenada B,C;\n    scanf(\"%d\",&casos);\n    for ( i = 0; i < casos; i++){\n        scanf(\"%d\",&(B.x));\n        scanf(\"%d\",&(B.y));\n        C = analizar(B);\n        printf(\"%d %d\",C.x,C.y);\n    }\n    \n    return 0;\n}\n\ncoordenada analizar(coordenada B){\n    coordenada C;\n    int i;\n    if ((B.x + B.y)%2 == 0){\n        C = B;\n        for (i = 0; i < (B.x + B.y)/2; i++){\n            if (C.x != 0){\n                C.x--;\n            }else{\n                C.y--;\n            }            \n        }\n    }else{\n        C.x = -1;\n        C.y = -1;\n    }\n    \n    return C;   \n}", "fixed": "#include <stdio.h>\n\ntypedef struct {\n    int x;\n    int y;\n} coordenada;\n\ncoordenada analizar(coordenada B);\n\nint main(int argc, char const *argv[]){\n    int casos,i;\n    coordenada B,C;\n    scanf(\"%d\",&casos);\n    for ( i = 0; i < casos; i++){\n        scanf(\"%d\",&(B.x));\n        scanf(\"%d\",&(B.y));\n        C = analizar(B);\n        printf(\"%d %d \",C.x,C.y);\n    }\n    \n    return 0;\n}\n\ncoordenada analizar(coordenada B){\n    coordenada C;\n    int i;\n    if ((B.x + B.y)%2 == 0){\n        C = B;\n        for (i = 0; i < (B.x + B.y)/2; i++){\n            if (C.x != 0){\n                C.x--;\n            }else{\n                C.y--;\n            }            \n        }\n    }else{\n        C.x = -1;\n        C.y = -1;\n    }\n    \n    return C;   \n}"}
{"similarity_score": 0.6685472496473907, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "536dfc881a704bd70fd10fa82bc5163d", "bug_code_uid": "0a60e5cf73ee53916e1cae46d5f970d1", "src_uid": "0197047cab6d83a189a5c1eabf5b1dd3", "apr_id": "ab9554cb04901438d6b3546cf14df5b2", "difficulty": 1400, "tags": ["dp", "number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\n#define N 100000\nint mmax(int a,int b){\n\tif(a>b)return a;\n\treturn b;\n}\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,i,j,max=INT_MIN;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n+1],dp[n+1],k,div1,div2;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tdp[i]=1;\n\t\t}if(a[2]>a[1])dp[2]++;\n\t\tif(a[3]>a[1])dp[3]++;\n\t\tfor(i=4;i<=n;i++){\n\t\t\tint mm=0,max=0;\n\t\t\tfor(j=1;ceil(sqrt(i));j++){\n\t\t\t\tif(i%j==0){\n\t\t\t\t\tdiv1=i;\n\t\t\t\t\tdiv2=i/j;\n\t\t\t\t\tif(a[div1]<a[i]&&a[div2]<a[i])\n\t\t\t\t\tmm=mmax(dp[div1],dp[div2]);\n\t\t\t\t\telse if(a[div1]<a[i])\n\t\t\t\t\t\tmm=dp[div1];\n\t\t\t\t\telse if(a[div2]<a[i])\n\t\t\t\t\t\tmm=dp[div2];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif(max<mm)max=mm;\n\t\t\t}\n\t\t\tdp[i]+=max;\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t\tif(dp[i]>max)\n\t\t\t\tmax=dp[i];\n\t\tprintf(\"%d\\n\",max);\n\t}\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\n#define N 100000\nint mmax(int a,int b){\n\tif(a>b)return a;\n\treturn b;\n}\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,i,j,max=INT_MIN;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n+1],dp[n+1],k,div1,div2;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tdp[i]=1;\n\t\t}\n\t\tfor(i=2;i<=n;i++){\n\t\t\tint mm=0;\n\t\t\tfor(j=1;j<=ceil(sqrt(i));j++){\n\t\t\t\tif(i%j==0){\n\t\t\t\t\tdiv1=j;\n\t\t\t\t\tdiv2=i/j;\n\t\t\t\t\tif(a[div1]<a[i])\n\t\t\t\t\t\tmm=mmax(mm,dp[div1]);\n\t\t\t\t\tif(a[div2]<a[i])\n\t\t\t\t\t\tmm=mmax(dp[div2],mm);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp[i]+=mm;\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t\tif(dp[i]>max)\n\t\t\t\tmax=dp[i];\n\t\tprintf(\"%d\\n\",max);\n\t}\n}"}
{"similarity_score": 0.9596602972399151, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "022ae164998f405fca3744449a7b30e7", "bug_code_uid": "f37e8dbbca90aafea4360afd3f9f6f1f", "src_uid": "97a226f47973fcb39c40e16f66654b5f", "apr_id": "af8daff385775f886641a06d507bc304", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,b,s=0,a=0;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%d\",&b);\n        if(b>a)\n            s+=b-a;\n        if(b<a)\n            s+=a-b;\n        a=b;\n    }\n    printf(\"%d\",s);\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long long int n,b,s=0,a=0;\n    scanf(\"%I64d\",&n);\n    while(n--)\n    {\n        scanf(\"%I64d\",&b);\n        if(b>a)\n            s+=b-a;\n        if(b<a)\n            s+=a-b;\n        a=b;\n    }\n    printf(\"%I64d\",s);\n}\n"}
{"similarity_score": 0.7021943573667712, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "5d8c6412814ebfc6e74b834aec1f3389", "bug_code_uid": "c27d151242d13d38ecbb69d7f28fc5b0", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "e7261885d165a607c67d8b1dac906e5f", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int n,k,i=1;\n\t\n\tscanf(\"%ld %ld\",&n,&k);\nwhile(1)\n{\nif(k<=i*n)\n{\tprintf(\"%ld\",i);\nreturn 0;\n}\ni++;\n\n}\nreturn 0;\n}\n\t\n", "fixed": "#include<stdio.h>\nint main()\n{\nunsigned long long int n,k,i=1;\n\t\n\tscanf(\"%llu %llu\",&n,&k);\nif(k%n==0)\n\tprintf(\"%llu\",k/n);\nelse\nprintf(\"%llu\",(k/n+1));\nreturn 0;\n}\n\t\n"}
{"similarity_score": 0.9181034482758621, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "41fb792cd16fd0bb3bfc9406f7117360", "bug_code_uid": "173edc49618983c5e89291ff08dc81fe", "src_uid": "863a8124d46bb09b49fc88939fb5f364", "apr_id": "254ffdccd70ef55e774b9dbfa7306282", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n\tint x,y,z,i,j,k=0,n;\n\tscanf(\"%d %d %d\",&x,&y,&z);\n\ti=x%z;\n\tj=y%z;\n\tk=(x/z+y/z);\n\tint c=(i+j)/z;\n\tk=k+c;\n\tif(c>=1)\n\t{\n\tif(i>j)\n\tn=z-i;\n\telse\n\tn=z-j;\n\t}\n\telse\n\tn=0;\n\tprintf(\"%d %d\\n\",k,n);\n}", "fixed": "#include <stdio.h>\nint main ()\n{\n\tlong long int x,y,z,i,j,k=0,n;\n\tscanf(\"%lld %lld %lld\",&x,&y,&z);\n\ti=x%z;\n\tj=y%z;\n\tk=(x/z+y/z);\n\tint c=(i+j)/z;\n\tk=k+c;\n\tif(c>=1)\n\t{\n\tif(i>j)\n\tn=z-i;\n\telse\n\tn=z-j;\n\t}\n\telse\n\tn=0;\n\tprintf(\"%lld %lld\\n\",k,n);\n}"}
{"similarity_score": 0.8786407766990292, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "9b2f22dc9c77d67ca7bf3a0f39d094b7", "bug_code_uid": "c4c67c56b6d0f042092548c33f50b219", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "42d7fa01d00c0344a530af9f598ba4a8", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint i, n, cnt0, cnt1, cnt2;\n\tstatic int a[100], b[100], c[100];\n\n\tscanf(\"%d\", &n);\n\tcnt0 = cnt1 = cnt2 = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tif (a[i] == 0)\n\t\t\tcnt0++;\n\t\telse if (a[i] > 0)\n\t\t\tb[cnt1++] = a[i];\n\t\telse\n\t\t\tc[cnt2++] = a[i];\n\t}\n\tprintf(\"1 %d\", c[0]);\n\tprintf(\"\\n\");\n\tprintf(\"%d \", cnt1 + cnt2 - 1);\n\tfor (i = 0; i < cnt1; i++)\n\t\tprintf(\"%d \", b[i]);\n\tfor (i = 1; i < cnt2; i++)\n\t\tprintf(\"%d \", c[i]);\n\tprintf(\"\\n\");\n\tprintf(\"%d \", cnt0);\n\twhile (cnt0-- > 0)\n\t\tprintf(\"0 \");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tint i, n, cnt0, cnt1, cnt2;\n\tstatic int a[100], b[100], c[100];\n\n\tscanf(\"%d\", &n);\n\tcnt0 = cnt1 = cnt2 = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tif (a[i] == 0)\n\t\t\tcnt0++;\n\t\telse if (a[i] > 0)\n\t\t\tb[cnt1++] = a[i];\n\t\telse\n\t\t\tc[cnt2++] = a[i];\n\t}\n\tprintf(\"1 %d\", c[0]);\n\tprintf(\"\\n\");\n\tprintf(\"%d \", cnt1 + cnt2 - 1 - (cnt2 - 1) % 2);\n\tfor (i = 0; i < cnt1; i++)\n\t\tprintf(\"%d \", b[i]);\n\tfor (i = 1; i + 1 < cnt2; i += 2)\n\t\tprintf(\"%d %d \", c[i], c[i + 1]);\n\tprintf(\"\\n\");\n\tprintf(\"%d \", cnt0 + (cnt2 - 1) % 2);\n\twhile (cnt0-- > 0)\n\t\tprintf(\"0 \");\n\tif (cnt2 % 2 == 0)\n\t\tprintf(\"%d \", c[cnt2 - 1]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9978858350951374, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5234b7069e8f953825a4f50091872ede", "bug_code_uid": "b1f121be007c56dcab93805f52ed5a75", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "1909ab5d5fea02ccd3518ae5304ca1ba", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        int count=0;\n        while(n!=0){\n            if(n%6==0){\n                count++;\n                n=n/6;\n            }else if((n*2)%6==0){\n                n=n*2;\n                count++;\n                \n            }else{\n                count=-1;\n                break;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        int count=0;\n        while(n!=1){\n            if(n%6==0){\n                count++;\n                n=n/6;\n            }else if((n*2)%6==0){\n                n=n*2;\n                count++;\n                \n            }else{\n                count=-1;\n                break;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9991503823279524, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6909c08296cba9b6eaed7ad42ede6a57", "bug_code_uid": "6d512ebe3c84f6206b152559add630fd", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "c4bd0d1f93ed646cdb52740dbf336174", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    long long int n,op=0,arr[100002];\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lli\",&n);\r\n\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            scanf(\"%lli\",&arr[j]);\r\n        }\r\n        int even=0,odd=0;\r\n        for(int k=0;k<n;k++)\r\n        {\r\n            if(arr[k]%2==0) even++;\r\n            else odd++;\r\n        }\r\n\r\n        if(even==n||odd==n) op=0;\r\n        if(even<odd)        op=even;\r\n        if(odd<even)        op=odd;\r\n\r\n\r\n    printf(\"%lli\\n\",op);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    long long int n,op=0,arr[100002];\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lli\",&n);\r\n\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            scanf(\"%lli\",&arr[j]);\r\n        }\r\n        int even=0,odd=0;\r\n        for(int k=0;k<n;k++)\r\n        {\r\n            if(arr[k]%2==0) even++;\r\n            else odd++;\r\n        }\r\n\r\n        if(even==n||odd==n) op=0;\r\n        if(even<=odd)        op=even;\r\n        if(odd<even)        op=odd;\r\n\r\n\r\n    printf(\"%lli\\n\",op);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8561278863232682, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "c72dcfe09b8ec5e7f28b5db37f79a10c", "bug_code_uid": "2abf2356e9d5573af8a6e7d82a94e54c", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "1bf5f64b27ac9334ffc98fc7cd1df63a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"stdlib.h\"\n\nint main()\n{\nint x = 0;\nint n;\nscanf(\"%d\", &n);\n\t\nchar op[3];\n\t\nfor (int i = 1; i++; i<=n)\n{\n    gets(op);\n    printf(\"%s\", op);\n    /*if ( op[1] == '+')\n        x++ ;\n    else if ( op[1] == '-')\n        x-- ;*/\n}\n//printf(\"%d\", x);\n\nreturn 0;\n \n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nint x = 0;\nint n;\nscanf(\"%d\", &n);\n\t\nchar op[4];\nint i;\t\nfor (i=0; i<n; i++)\n{\n    scanf(\"%s\", op);\n        if ( op[1] == '+')\n            x++ ;\n    else if ( op[1] == '-')\n            x-- ;\n}\nprintf(\"%d\", x);\nreturn 0;\n \n}"}
{"similarity_score": 0.9805128205128205, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "facf11d30149838e153c3f3048636fd9", "bug_code_uid": "7c4a4fac4b7aadf83703bf54d453350b", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "ffd55e0f0841da50ac9e48a7eff6764b", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"stdlib.h\"\n\n#define BIG_BASE \"%ld\"\n\ntypedef long int BigBase;\n\nint main()\n{\n    BigBase StreetSize = 0;\n    BigBase*  Colors = NULL;\n    BigBase RightWalk = 0;\n    BigBase LeftWalk = 0;\n    \n    scanf(BIG_BASE, &StreetSize);\n    Colors = malloc(sizeof(BigBase) * StreetSize);\n    \n    for (BigBase i = 0; i < StreetSize; i++)\n    {\n        scanf(BIG_BASE, &Colors[i]);\n    }\n    \n    RightWalk = 0;\n    for (BigBase i = 0; i < StreetSize - 1; i++)\n    {\n        if (Colors[i] != Colors[StreetSize - 1])\n        {\n            RightWalk = StreetSize - i - 1;\n            break;\n        }\n    }\n    \n    LeftWalk = 0;\n    for (BigBase i = StreetSize - 1; i > 0; i--)\n    {\n        if (Colors[i] != Colors[0])\n        {\n            LeftWalk = i;\n        }\n    }\n    \n    if (RightWalk > LeftWalk)\n    {\n        printf(BIG_BASE\"\\n\", RightWalk);\n    }\n    else \n    {\n        printf(BIG_BASE\"\\n\", LeftWalk);\n    }\n    \n    return 0;\n}\n", "fixed": "#include \"stdio.h\"\n#include \"stdlib.h\"\n\n#define BIG_BASE \"%ld\"\n\ntypedef long int BigBase;\n\nint main()\n{\n    BigBase StreetSize = 0;\n    BigBase* Colors = NULL;\n    BigBase RightWalk = 0;\n    BigBase LeftWalk = 0;\n    \n    scanf(BIG_BASE, &StreetSize);\n    Colors = malloc(sizeof(BigBase) * StreetSize);\n    \n    for (BigBase i = 0; i < StreetSize; i++)\n    {\n        scanf(BIG_BASE, &Colors[i]);\n    }\n    \n    RightWalk = 0;\n    for (BigBase i = 0; i < StreetSize - 1; i++)\n    {\n        if (Colors[i] != Colors[StreetSize - 1])\n        {\n            RightWalk = StreetSize - i - 1;\n            break;\n        }\n    }\n    \n    LeftWalk = 0;\n    for (BigBase i = StreetSize - 1; i > 0; i--)\n    {\n        if (Colors[i] != Colors[0])\n        {\n            LeftWalk = i;\n            break;\n        }\n    }\n    \n    if (RightWalk > LeftWalk)\n    {\n        printf(BIG_BASE\"\\n\", RightWalk);\n    }\n    else \n    {\n        printf(BIG_BASE\"\\n\", LeftWalk);\n    }\n    \n    free(Colors);\n    return 0;\n}\n"}
{"similarity_score": 0.8854545454545455, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "96d59f987d9831c0df7fc9403d94c19d", "bug_code_uid": "4686fa7341009001de6961ca899672d5", "src_uid": "6469ed9f2486b498c9ffeb8270391e3a", "apr_id": "e83b6dd57dffb9e82bc1c53905e4707f", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n/* Written by Nishant Mittal aka nishantwrp */\nint main()\n{\n   int n;\n    scanf(\"%d\",&n);\n   unsigned long long int data[n];\n    int i=0;\nwhile(i<n) {\nscanf(\"%llu\",&data[i]);\ni++;\n}\nint j=0;\nwhile(j<n) {\n        int k = 0;\nwhile(k<n-j) {\nif (data[k] > data[k+1]){\nunsigned long long int a,b;\na = data[k];\nb = data[k+1];\ndata[k] = b;\ndata[k+1] = a;\n}\nk++;\n}\nj++;\n}\nint ans = 0;\nint t=1;\nwhile(t<n) {\nif (data[t] != data[t-1] + 1) {\n    ans++;\n}\nt++;\n}\nprintf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n/* Written by Nishant Mittal aka nishantwrp */\nint main()\n{\n   int n;\n    scanf(\"%d\",&n);\n   unsigned long long int data[n];\n    int i=0;\nwhile(i<n) {\nscanf(\"%llu\",&data[i]);\ni++;\n}\nint j=0;\nwhile(j<n) {\n        int k = 0;\nwhile(k<n-j) {\nif (data[k] > data[k+1]){\nunsigned long long int a,b;\na = data[k];\nb = data[k+1];\ndata[k] = b;\ndata[k+1] = a;\n}\nk++;\n}\nj++;\n}\nunsigned long long int ans = 0;\nint t=1;\nwhile(t<n) {\nif ((data[t] - data[t-1]) > 1) {\n    ans = ans + data[t] - data[t-1] - 1;\n}\nt++;\n}\nprintf(\"%llu\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.6028880866425993, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "8d1d55eab8beaf95d2cbacc69749875a", "bug_code_uid": "75304db73a15a7b7acd75616f26fa003", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "4d7a0943ce830a37c8c37d540f9a69db", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int b,a,n,i,j,counts;\n\tscanf(\"%ld\",&n);\n\twhile(n--)\n\t{\n\t\tcounts=0;\n\t\tscanf(\"%ld%ld\",&a,&b);\n\t\tif(a==b){\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\telse if(a<b){\n\t\t\tint s=a;\n\t\t\ta=b;\n\t\t\tb=s;\n\t\t}\n\t\tfor(i=a;i-b>10;){\n\t\t\ti=i-10;\n\t\t\tcounts++;\n\t\t}\n\t\tprintf(\"%d\\n\",counts+1);\n\t}\n} ", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tlong int b,a,n,i,j,counts;\n\tscanf(\"%ld\",&n);\n\twhile(n--)\n\t{\n\t\tcounts=0;\n\t\tscanf(\"%ld%ld\",&a,&b);\n\t\tj=abs(a-b);\n\t\tint s=j/10;\n\t\tif(j%10>0){\n\t\t\tprintf(\"%d\\n\",s+1);\n\t\t}else{\n\t\t\tprintf(\"%d\\n\",s);\n\t\t}\n\t}\n} "}
{"similarity_score": 0.3153252480705623, "equal_cnt": 24, "replace_cnt": 16, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "59eeac1cf77286d9b0d49f289543a10b", "bug_code_uid": "0d5bacef375bc33e89b5400d0f24bbfb", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "51c57b823227f21d6e51f26782eae0c8", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long t,n,i,j,a;\r\n    scanf(\"%ld\\n\",&t);\r\n    \r\n    for(i=0;i<t;i++)\r\n    {\r\n        a = 0;\r\n        scanf(\"%ld\\n\",&n);\r\n        for(j=2;j<n;j++)\r\n        {\r\n            if(n%\r\n\t\t\t(j==0 && j%2!=0 )\r\n            a++;\r\n            else\r\n            a = a;\r\n        }\r\n        if(a!=0)\r\n        printf(\"yes\\n\");\r\n        else\r\n        printf(\"no\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h> \r\nint main()\r\n{\r\n\tint i,t,k,j;\r\n\tlong long int n;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t{\r\n\t\tk=0;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tif(n%2!=0&&n!=1)\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse if(n==1)\r\n\t\tprintf(\"no\\n\");\r\n\t\telse\r\n\t\t{\r\n        while(n%2==0)\r\n        {\r\n        \tn=n/2;\r\n        \tk=1;\r\n        \tif(n%2!=0&&n!=1)\r\n        \t{\r\n        \t\tk=0;\r\n        \t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\tif(k==0)\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n\t\t} \t\r\n\t\t\r\n\treturn 0;\r\n } \r\n"}
{"similarity_score": 0.938938938938939, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "03120ecf7f32b3b83b2d207b48c15e1f", "bug_code_uid": "79494b9fb2053945b3ad344917aac8cb", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "8accd3892a01217de026695b2799e416", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "//learn from math\n#include <stdio.h>\n\nint main(int argc, char const *argv[])\n{\n    int n, x, y, i, j, ok=0;\n    scanf (\"%d\", &n);\n    for (x=4; x<n; x++) {\n        for (i=2; i<x; i++) {\n            if ((x%i) == 0) {\n                y = n-x;\n                for (j=2; j<y; j++) {\n                    if ((y%j || ok) == 0) {\n                        printf(\"%d %d\\n\", x, y);\n                        ok++;\n                    }    \n                }\n            }\n        }\n    }\n\n    return 0;\n}", "fixed": "//learn from math\n#include <stdio.h>\n\nint main(int argc, char const *argv[])\n{\n    int n, x, y, i, j, ok=0;\n    scanf (\"%d\", &n);\n    for (x=4; x<n; x++) {\n        for (i=2; i<x; i++) {\n            if ((x%i) == 0) {\n                y = n-x;\n                for (j=2; j<y; j++) {\n                    if ((y%j) == 0) {\n                        printf(\"%d %d\\n\", x, y);\n                        return 0;\n                        break;\n                    }    \n                }\n            }\n        }\n    }\n\n}"}
{"similarity_score": 0.07852564102564102, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "1faf7d936d0ccb1514b1b62955a4f951", "bug_code_uid": "dbed466a7567d428d4dc84a336d2290c", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "57699d5f7f3335eb0dfa9d14c65bb70f", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong long int n;\nscanf(\"%lld\",&n);\nlong long int temp,i,j,array1[n],array2[n-1],t[n-1],array3[n-2],t3[n-2],result[2];\nfor(i=0;i<n;i++)\n{\n    scanf(\"%lld\",&array1[i]);\n}\nfor(i=0;i<n-1;i++)\n{\n    scanf(\"%lld\",&array2[i]);\n    t[i]=array2[i];\n}\nfor(i=0;i<n-2;i++)\n{\n    scanf(\"%lld\",&array3[i]);\n    t3[i]=array3[i];\n}\nfor(i=0;i<n;i++)\n{\n    temp=array1[i];\n    for(j=0;j<n-1;j++)\n    {\n       if(temp==t[j])\n            {\n                t[j]=-1;\n                j=n;\n            }\n    }\n    if(j==n-1)\n    {\n        result[0]=temp;\n        break;\n    }\n\n}\nfor(i=0;i<n-1;i++)\n{\n    temp=array2[i];\n    for(j=0;j<n-2;j++)\n    {\n       if(temp==t3[j])\n       {\n           t3[j]=-1;\n           j=n+1;\n       }\n\n\n    }\n    if(j==n-2)\n     {\n       result[1]=temp;\n       break;\n     }\n}\nprintf(\"%lld\\n%lld\\n\",result[0],result[1]);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nlong long int n,i,sum1=0,sum2=0,sum3=0,temp;\nscanf(\"%lld\",&n);\nfor(i=0;i<n;i++)\n{\n    scanf(\"%lld\",&temp);\n    sum1=sum1+temp;\n}\nfor(i=0;i<n-1;i++)\n{\n    scanf(\"%lld\",&temp);\n    sum2=sum2+temp;\n}\nfor(i=0;i<n-2;i++)\n{\n    scanf(\"%lld\",&temp);\n    sum3=sum3+temp;\n}\n\nprintf(\"%lld\\n%lld\\n\",(sum1-sum2),(sum2-sum3));\n  return 0;\n}\n"}
{"similarity_score": 0.9152542372881356, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7460c8b5be3b9f271b63031d95eace04", "bug_code_uid": "c4681e9ed8810374294f341b7c7a8d76", "src_uid": "6469ed9f2486b498c9ffeb8270391e3a", "apr_id": "d88ec8e46c8e5e7064610f14799f03a2", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,i,d,swap = 0,cnt=0 ;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    //now i need to sorrt this array which might get time complexity\n  for (i = 0 ; i < n - 1; i++)\n  {\n    for (d = 0 ; d < n - i - 1; d++)\n    {\n      if (a[d] > a[d+1]) /* For decreasing order use < */\n      {\n        swap   = a[d];\n        a[d]   = a[d+1];\n        a[d+1] = swap;\n      }\n    }\n  }\n  for(i=0;i<n-1;i++)\n  {\n        if(a[i+1]!=a[i]+1)\n        {\n            cnt++;\n        }\n  }\n  printf(\"%d\",cnt);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,i,d,swap = 0,cnt=0 ;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    //now i need to sorrt this array which might get time complexity\n  for (i = 0 ; i < n - 1; i++)\n  {\n    for (d = 0 ; d < n - i - 1; d++)\n    {\n      if (a[d] > a[d+1]) /* For decreasing order use < */\n      {\n        swap   = a[d];\n        a[d]   = a[d+1];\n        a[d+1] = swap;\n      }\n    }\n  }\n  for(i=0;i<n-1;i++)\n            cnt+=a[i+1]-a[i]-1;\n  printf(\"%d\",cnt);\n    return 0;\n}\n"}
{"similarity_score": 0.9976905311778291, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "106ac8d3178389058c6e47d36384a938", "bug_code_uid": "f428b40addc86df8a63140637d1719a5", "src_uid": "fcd88c7b64da4b839cda4273d928429d", "apr_id": "e8a0538da2363cf294bfbc0ccf5f22e2", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,c,m=0,m1=0,m2=0;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&arr[i]);\n    for(i=0; i<n; i++)\n    {\n        if(arr[i]== 1)\n        {\n            while(arr[i]!= 0 && i< n)\n            {\n                m++;\n                i++;\n            }\n            if(m>m1)\n                m1= m;\n            if(i== n-1)\n                m2= m;\n            m=0;\n        }\n    }\n    if(arr[n-1]== 1)\n    {\n        m= m2;\n        i=0;\n        while(arr[i]!= 0 && i<n)\n        {\n            m++;\n            i++;\n        }\n        if(m>m1)\n            m1=m;\n    }\n    printf(\"%d\",m1);\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,c,m=0,m1=0,m2=0;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&arr[i]);\n    for(i=0; i<n; i++)\n    {\n        if(arr[i]== 1)\n        {\n            while(arr[i]!= 0 && i< n)\n            {\n                m++;\n                i++;\n            }\n            if(m>m1)\n                m1= m;\n            if(i >= n-1)\n                m2= m;\n            m=0;\n        }\n    }\n    if(arr[n-1]== 1)\n    {\n        m= m2;\n        i=0;\n        while(arr[i]!= 0 && i<n)\n        {\n            m++;\n            i++;\n        }\n        if(m>m1)\n            m1=m;\n    }\n    printf(\"%d\",m1);\n}\n"}
{"similarity_score": 0.9968963376784605, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a215106059f441b3fc6637239cd6257e", "bug_code_uid": "7bcc9bb8d4a123024eac7adad01422e7", "src_uid": "ddab0e510f9aceb2fbf75e26d27df166", "apr_id": "c0ca8946cbce235ed85ac2e9017ec487", "difficulty": 1900, "tags": ["dp", "divide and conquer", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<limits.h>\nint count(int A[], int start, int end)\n{\n    if(start > end)\n        return 0;\n    if(start == end)\n    {\n        if(A[start] == 0)\n            return 0;\n        return 1;\n    }\n    int i,min,ans,pos,min2;\n    min = INT_MAX;\n    for(i=start;i<end;++i)\n    {\n        if(min > A[i])\n        {\n            min = A[i];\n            pos = i;\n        }\n    }\n    for(i=start;i<end;++i)\n        A[i] -= min;\n    ans = count(A, start, pos) + count(A, pos+1, end) + min;\n    min2 = end - start;\n    if(ans < min2)\n        return ans;\n    return min2;\n}\nint main()\n{\n    int n,*A,i,ans;\n    scanf(\"%d\",&n);\n    A = (int *)malloc(sizeof(int)*n);\n    for(i=0;i<n;++i)\n        scanf(\"%d\",&A[i]);\n    ans = count(A, 0, n);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<limits.h>\nint count(int A[], int start, int end)\n{\n    if(start == end)\n        return 0;\n    if(start == end-1)\n    {\n        if(A[start] == 0)\n            return 0;\n        return 1;\n    }\n    int i,min,ans,pos,min2;\n    min = INT_MAX;\n    for(i=start;i<end;++i)\n    {\n        if(min > A[i])\n        {\n            min = A[i];\n            pos = i;\n        }\n    }\n    for(i=start;i<end;++i)\n        A[i] -= min;\n    ans = count(A, start, pos) + count(A, pos+1, end) + min;\n    min2 = end - start;\n    if(ans < min2)\n        return ans;\n    return min2;\n}\nint main()\n{\n    int n,*A,i,ans;\n    scanf(\"%d\",&n);\n    A = (int *)malloc(sizeof(int)*n);\n    for(i=0;i<n;++i)\n        scanf(\"%d\",&A[i]);\n    ans = count(A, 0, n);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9968354430379747, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "22d93e5b1a0d243305501ca3699f0f63", "bug_code_uid": "abbb3a231703e2237b53630b618a4952", "src_uid": "d5913f8208efa1641f53caaee7624622", "apr_id": "ce73646898ec2a9d31d3c442dbdcbf7a", "difficulty": 1900, "tags": ["geometry", "combinatorics", "math", "sortings", "data structures", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,j,k;\n    int x[2000],y[2000];\n    int ax,ay,bx,by,cx,cy,m,n,u,v;\n    int count=0;\n    scanf(\"%d\",&t);\n    if(t<3)\n    {\n        for(i=0;i<t;i++)\n        {\n            scanf(\"%d %d\",&x[i],&y[i]);\n        }\n        printf(\"%d\\n\",count);\n    }\n    else\n    {\n        for(i=0;i<t;i++)\n        {\n            scanf(\"%d %d\",&x[i],&y[i]);\n        }\n        for(i=0;i<t-2;i++)\n        {\n            ax=x[i];\n            ay=y[i];\n            for(k=i+1;k<t-1;k++)\n            {\n                bx=x[k];\n                by=y[k];\n                for(j=i+2;j<t;j++)\n                {\n                    cx=x[j];\n                    cy=y[j];\n                    if(((ax*(by-cy))+(bx*(cy-ay)) + (cx*(ay-by)))!= 0 )\n                    {\n                        count++;\n                    }\n\n                }\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    //getchar();\n    //getchar();\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,j,k;\n    int x[2000],y[2000];\n    int ax,ay,bx,by,cx,cy,m,n,u,v;\n    int count=0;\n    scanf(\"%d\",&t);\n    if(t<3)\n    {\n        for(i=0;i<t;i++)\n        {\n            scanf(\"%d %d\",&x[i],&y[i]);\n        }\n        printf(\"%d\\n\",count);\n    }\n    else\n    {\n        for(i=0;i<t;i++)\n        {\n            scanf(\"%d %d\",&x[i],&y[i]);\n        }\n        for(i=0;i<t-2;i++)\n        {\n            ax=x[i];\n            ay=y[i];\n            for(k=i+1;k<t-1;k++)\n            {\n                bx=x[k];\n                by=y[k];\n                for(j=k+1;j<t;j++)\n                {\n                    cx=x[j];\n                    cy=y[j];\n                    if(((ax*(by-cy))+(bx*(cy-ay)) + (cx*(ay-by)))!= 0 )\n                    {\n                        count++;\n                    }\n\n                }\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    //getchar();\n    //getchar();\n    return 0;\n}"}
{"similarity_score": 0.9908256880733946, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "87ec59d200b32693a6fe42dde9621068", "bug_code_uid": "f2e515c63751033cbe7d11e715f84913", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "755848cc2999b5c3c8a9fc8c2603c572", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,i,j,x=0;\n    scanf(\"%d\",&n);\n    int a[n][2];\n\n    for(i=0;i<n;i++)\n        {for(j=0;j<2;j++)\n        {scanf(\"%d\",&a[i][j]);\n        }\n        if(a[i][0]!=a[i][1]&&(a[i][1]-a[i][0]==0)) x++;\n        }\n        printf(\"%d\\n\",x);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,i,j,x=0;\n    scanf(\"%d\",&n);\n    int a[n][2];\n\n    for(i=0;i<n;i++)\n        {for(j=0;j<2;j++)\n        {scanf(\"%d\",&a[i][j]);\n        }\n        if(a[i][0]!=a[i][1]&&(a[i][1]-a[i][0]>=2)) x++;\n        }\n        printf(\"%d\\n\",x);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9387755102040817, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "246609bb27b714a97c0bf348ae87e73c", "bug_code_uid": "851f5dfd5af44f815fd5f084b35e6116", "src_uid": "ddc9201725e30297a5fc83f4eed75fc9", "apr_id": "4863acdf527a313ad87c4332e392cd12", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\nchar a[100003];\nscanf(\"%s\",a);\nint x,b,s=0;\nfor(x=0;a[x]!='\\0';x++)\n{\nb=a[x]-48;\ns=s+b;\n}\nwhile(s>9)\n{\nx=s;\ns=0;\nwhile(x>0)\n{\ns=s+(x%10);\nx=x/10;\n}}\nprintf(\"%d\",s);\nreturn(0);\n}\n\n\n\n", "fixed": "#include<stdio.h>\nmain()\n{\nchar a[100003];\nscanf(\"%s\",a);\nint x,b,s=0,y=0;\nfor(x=0;a[x]!='\\0';x++)\n{\nb=a[x]-48;\ns=s+b;\n}\nif(x>1)\n   y++;\nwhile(s>9)\n{\ny++;\nx=s;\ns=0;\nwhile(x>0)\n{\ns=s+(x%10);\nx=x/10;\n}}\nprintf(\"%d\",y);\nreturn(0);\n}\n\n\n\n"}
{"similarity_score": 0.33724075743913434, "equal_cnt": 17, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "68fe046ef78d8b546713d20ebd8f2272", "bug_code_uid": "9d9277d7ea1d5de1e7817199ce4fd668", "src_uid": "03fcf7402397b94edd1d1837e429185d", "apr_id": "eaf1774a96cdab7818586dea700cd726", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar x[101][101];\nint main()\n{\n    int n,i,j,a=0,b;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&x[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(x[i][j]=='o'&&x[i+1][j])\n                a++;\n        }\n    }\n    if(n==2)\n        printf(\"YES\");break;\n    if(a%2!=0)\n        printf(\"NO\");\n    else\n        printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int i,j,k=0,n;\n    char str[105][105];\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%s\",str[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        k=0;\n        for(j=0; j<n; j++)\n        {\n                if(str[i-1][j]=='o')\n                    k++;\n                if(str[i+1][j]=='o')\n                    k++;\n                if(str[i][j+1]=='o')\n                    k++;\n                if(str[i][j-1]=='o')\n                    k++;\n                if(k%2!=0)\n                {\n                        printf(\"NO\");\n                        return 0;\n                }\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}"}
{"similarity_score": 0.9951923076923077, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "59745c27f890ffeb39c74bef2d61d614", "bug_code_uid": "4442bd305d1cfe6ddf3dc1b46ec6f313", "src_uid": "84bd49becca69e126606d5a2f764dd91", "apr_id": "8e27996b62cbbe8a449e4015d6f59cf6", "difficulty": 1400, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nstruct bottle{\n\tint type,canopen,opened;\t\n}a[120];\n\nint main(){\n\tint n,i,count,j;\n\tscanf(\"%d\",&n);\n\tcount = n;\n\tfor(i = 0;i < n;i++){\n\t\tscanf(\"%d%d\",&a[i].type,&a[i].canopen);\n\t\ta[i].opened = 0;\t\n\t}\n\tfor(i = 0;i < n;i++){\n\t\tfor(j = 0;j < n;j++){\n\t\t\tif(a[i].type == a[j].canopen &&i != j&& a[j].opened == 0){\n\t\t\t\tcount--;\n\t\t\t\t\ta[j].opened = 1;\t\n\t\t\t\t}\t\n\t\t}\t\t\n\t}\n\tprintf(\"%d\",count);\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nstruct bottle{\n\tint type,canopen,opened;\t\n}a[120];\n\nint main(){\n\tint n,i,count,j;\n\tscanf(\"%d\",&n);\n\tcount = n;\n\tfor(i = 0;i < n;i++){\n\t\tscanf(\"%d%d\",&a[i].type,&a[i].canopen);\n\t\ta[i].opened = 0;\t\n\t}\n\tfor(i = 0;i < n;i++){\n\t\tfor(j = 0;j < n;j++){\n\t\t\tif(a[i].type == a[j].canopen &&i != j&& a[i].opened == 0){\n\t\t\t\tcount--;\n\t\t\t\t\ta[i].opened = 1;\t\n\t\t\t\t}\t\n\t\t}\t\t\n\t}\n\tprintf(\"%d\",count);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.29055690072639223, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "71f2663b6d7a5dd194f47c8e2e1b8cfc", "bug_code_uid": "30edc6c50af2389315eb87f5c6fe402b", "src_uid": "2be73aa00a13be5274cf840ecd3befcb", "apr_id": "ca4a7e5a4812b05231278790b820b3e7", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#define MAX 100010\n\nint main()\t{\n\tlong long int n, leftSum=0, rightSum=0;\n\tint left[MAX], right[MAX];\n\tint diff, maxDiff, ind, i, adv;\n\t\n\tscanf(\"%d\", &n);\n\tfor(i=0; i<n; i++)\t{\n\t\tscanf(\"%d %d\", &left[i], &right[i]);\n\t\tleftSum += left[i];\n\t\trightSum += right[i];\n\t}\n//\tprintf(\"ls:%d rs:%d\\n\", leftSum, rightSum);\n\tif(leftSum>rightSum)\t{\n\t\tadv = leftSum-rightSum;\n\t\tfor(i=0, maxDiff=adv, ind=-1; i<n; i++)\t{\n\t\t\tif(left[i]<right[i])\t{\n\t\t\t\tdiff = 2*(right[i]-left[i])+adv;\n\t\t\t}\n\t\t\telse\t{\n\t\t\t\tdiff = left[i]-right[i];\n\t\t\t}\n//\t\t\tprintf(\"diff: %d\\n\", diff);\n\t\t\tif(diff>maxDiff)\t{\n\t\t\t\tind = i;\n\t\t\t\tmaxDiff = diff;\n\t\t\t}\n\t\t}\n\t\tif(ind+1)\t{\n\t\t\tprintf(\"%d\", ind+1);\n\t\t}\n\t\telse puts(\"0\");\n\t}\n\telse\t{\n\t\tadv = rightSum-leftSum;\n\t\tfor(i=0, maxDiff=adv, ind=-1; i<n; i++)\t{\n\t\t\tif(right[i]<left[i])\t{\n\t\t\t\tdiff = 2*(left[i]-right[i])+adv;\n\t\t\t}\n\t\t\telse\t{\n\t\t\t\tdiff = right[i] - left[i];\n\t\t\t}\n\t\t\tif(diff>maxDiff)\t{\n\t\t\t\tind = i;\n\t\t\t\tmaxDiff = diff;\n\t\t\t}\n\t\t}\n\t\tif(ind+1)\t{\n\t\t\tprintf(\"%d\", ind+1);\n\t\t}\n\t\telse puts(\"0\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define MAX 100010\n\nint main()\t{\n\tlong long int i, n, ind, diff, maxDiff, adv, adv2, leftSum=0, rightSum=0;\n\tint left[MAX], right[MAX];\n\tscanf(\"%d\", &n);\n\tfor(i=0; i<n; i++)\t{\n\t\tscanf(\"%d %d\", &left[i], &right[i]);\n\t\tleftSum += left[i];\n\t\trightSum += right[i];\n\t}\n\tif(leftSum>rightSum)\t{\n\t\tadv = leftSum-rightSum;\n\t\tadv2 = rightSum-leftSum;\n\t\tfor(i=0, maxDiff=adv, ind=-1; i<n; i++)\t{\n\t\t\tif(right[i]>left[i])\t{\n\t\t\t\tdiff = adv+2*(right[i]-left[i]);\n\t\t\t}\n\t\t\telse\t{\n\t\t\t\tdiff = adv2+2*(left[i]-right[i]);\n\t\t\t}\n\t\t\tif(diff>maxDiff)\t{\n\t\t\t\tmaxDiff = diff;\n\t\t\t\tind = i;\n\t\t\t}\n\t\t}\n\t\tif(ind!=-1)\t{\n\t\t\tprintf(\"%d\", ind+1);\n\t\t}\n\t\telse puts(\"0\");\n\t}\n\telse\t{\n\t\tadv = rightSum-leftSum;\n\t\tadv2 = leftSum-rightSum;\n\t\tfor(i=0, maxDiff=adv, ind=-1; i<n; i++)\t{\n\t\t\tif(left[i]>right[i])\t{\n\t\t\t\tdiff = adv+2*(left[i]-right[i]);\n\t\t\t}\n\t\t\telse\t{\n\t\t\t\tdiff = adv2+2*(right[i]-left[i]);\n\t\t\t}\n\t\t\tif(diff>maxDiff)\t{\n\t\t\t\tmaxDiff = diff;\n\t\t\t\tind = i;\n\t\t\t}\n\t\t}\n\t\tif(ind!=-1)\t{\n\t\t\tprintf(\"%d\", ind+1);\n\t\t}\n\t\telse puts(\"0\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9567474048442907, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "690a8dd13996c395917a9ff5b57b7ae5", "bug_code_uid": "157eb32ff0a66369fedad9d8bb2506e0", "src_uid": "9e0d271b9bada1364dfcb47297549652", "apr_id": "6de5e98d69d254bae1f1368d7a2f8103", "difficulty": 1600, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint n,lst[100010];\nint ans = 1;\nint f[100010],g[100010];\nint main()\n{\n    int i,j,now = 0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) scanf(\"%d\",&lst[i]);\n    for(i=1;i<=n;i++)\n    {\n        if(lst[i]>lst[i-1]) f[i] = f[i-1]+1;\n        else f[i] = 1;\n    }\n    for(i=1;i<n;i++) ans = ans>f[i]+1?ans:f[i]+1;\n    for(i=n;i;i--)\n    {\n        if(lst[i]<lst[i+1]) g[i] = g[i+1]+1;\n        else g[i] = 1;\n    }\n    for(i=2;i<n;i++) if(lst[i-1]+1<lst[i+1]) ans = ans>f[i-1]+g[i+1]+1?ans:f[i-1]+g[i+1]+1;\n    printf(\"%d\",ans);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint n,lst[100010];\nint ans = 1;\nint f[100010],g[100010];\nint main()\n{\n    int i,j,now = 0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) scanf(\"%d\",&lst[i]);\n    for(i=1;i<=n;i++)\n    {\n        if(lst[i]>lst[i-1]) f[i] = f[i-1]+1;\n        else f[i] = 1;\n    }\n    for(i=1;i<n;i++) ans = ans>f[i]+1?ans:f[i]+1;\n    for(i=n;i;i--)\n    {\n        if(lst[i]<lst[i+1]) g[i] = g[i+1]+1;\n        else g[i] = 1;\n    }\n    for(i=n;i>1;i--) ans = ans>g[i]+1?ans:g[i]+1;\n    for(i=2;i<n;i++) if(lst[i-1]+1<lst[i+1]) ans = ans>f[i-1]+g[i+1]+1?ans:f[i-1]+g[i+1]+1;\n    printf(\"%d\",ans);\n    return 0;\n}"}
{"similarity_score": 0.18917066483893077, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "6ef393868fda601332fb001f5bb174e3", "bug_code_uid": "192ced74a479763c33dacc1ef1371878", "src_uid": "ac7d117d58046872e9d665c9f99e5bff", "apr_id": "4e13d9f87978c138ccee90899233c2c0", "difficulty": 800, "tags": ["brute force", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/******************************************************************************\r\n\r\n                            Online C Compiler.\r\n                Code, Compile, Run and Debug C program online.\r\nWrite your code in this editor and press \"Run\" button to compile and execute it.\r\n\r\n*******************************************************************************/\r\n\r\n#include<stdio.h>\r\nint f(int n)\r\n{\r\n    int n1=n;\r\n    int prev=n1%10;\r\n    n1=n1/10;\r\n    while(n1)\r\n    {\r\n        int rem=n1%10;\r\n        n1=n1/10;\r\n        if(rem!=prev)\r\n        return 0;\r\n        prev=rem;\r\n    }\r\n    return 1;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,count=0,i;\r\n        scanf(\"%d\",&n);\r\n        if(n<10)\r\n        printf(\"%d\\n\",n);\r\n        else\r\n        {\r\n            count=9;\r\n            for(i=10;i<=n;i++)\r\n            {\r\n                if(f(i)==1)\r\n                count++;\r\n            }\r\n            printf(\"%d\\n\",count);\r\n        }\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int res=0,num=1;\r\n        while(num*10<=n)\r\n        {\r\n            res+=9;\r\n            num*=10;\r\n        }\r\n        int s=n/num;\r\n        res+=s-1;\r\n        int l=s;\r\n        while(num%10==0)\r\n        {\r\n            l=l*10+s;\r\n            num/=10;\r\n        }\r\n        if(l<=n)\r\n        res++;\r\n        printf(\"%d\\n\",res);\r\n    }\r\n}"}
{"similarity_score": 0.9975786924939467, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8ae02a078570b10fa477ad8f0f79b0e8", "bug_code_uid": "4c35f00e9a3f720f350168f5f0b075ae", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "423c7bc6e32fc127b6e70c4be2075b08", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a;\n    scanf(\"%lld\",&a);\n    if(a&1)\n    {\n        a=a/2;\n        printf(\"%lld\\n\",a);\n        for(i=1;i<=a-1;i++)\n        {\n            printf(\"2 \");\n        }\n        printf(\"3\\n\");\n    }\n    else\n    {\n        a=a/2;\n        printf(\"%lld\\n\",a);\n        for(i=1;i<=a;i++)\n        {\n            printf(\"2 \");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,i;\n    scanf(\"%lld\",&a);\n    if(a&1)\n    {\n        a=a/2;\n        printf(\"%lld\\n\",a);\n        for(i=1;i<=a-1;i++)\n        {\n            printf(\"2 \");\n        }\n        printf(\"3\\n\");\n    }\n    else\n    {\n        a=a/2;\n        printf(\"%lld\\n\",a);\n        for(i=1;i<=a;i++)\n        {\n            printf(\"2 \");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9708222811671088, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6c69167027fa8e4bd71530b7bdf97d7c", "bug_code_uid": "f6a440847c805a6292e32b21e9ce4cda", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "e5ca1de170401faa2d3f311072521799", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(n,m)\n{scanf(\"%d%d\",&n,&m);\nint a,b,i;\ndouble p,mi;\t\nfor(i=0;i<n;i++)\n{scanf(\"%d%d\",&a,&b);\np=1.0*m*a/b;\nif(i==0)\nmi=p;\nelse if(p<mi)\t\nmi=p;\n}\t\nprintf(\"%lf\",mi);\t\n}", "fixed": "#include<stdio.h>\nint main(n,m)\n{scanf(\"%d%d\",&n,&m);\nint a,b,i;\nfloat p,mi;\t\nfor(i=0;i<n;i++)\n{scanf(\"%d%d\",&a,&b);\np=1.0*m*a/b;\nif(i==0)\nmi=p;\nelse if(p<mi)\t\nmi=p;\n}\t\nprintf(\"%f\",mi);\n}"}
{"similarity_score": 0.14553472987872107, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "de33a01c9a541455c316d1018f27e1ce", "bug_code_uid": "b0d7277de7b298a2456601e348a335cd", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "2fb6d3965ba82ed6b2869346f5c69df3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int m;\n    scanf(\"%d\",&m);\n    int q[3];\n    int i=0;\n    int t=0;\n    int a;\n    int b;\n    int price;\n    \n    for(i=0;i<m;i++){\n        for(t=0;t<3;t++){\n          scanf(\"%d\",&a);\n          q[t]=a;\n        }\n        if(2*q[1]>q[2]){\n            if(q[0]%2){\n                b=q[0]/2;\n                price=q[1]+b*q[2];\n            }else{\n                price=q[0]/2*q[2];\n            }\n            \n        }else{\n            price=q[0]*q[1];\n        } \n        printf(\"%d\\r\",price);\n           \n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tlong long n[501],p[501];\n\tint q,a[501],b[501],i;\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++){\n\t\tscanf(\"%lld%d%d\",&n[i],&a[i],&b[i]);\n\t\tif(a[i]*2>b[i]){\n\t\t\tif(n[i]%2)\n\t\t\tp[i]=n[i]/2*b[i]+a[i];\n\t\t\telse\n\t\t\tp[i]=n[i]/2*b[i];\n\t\t}else{\n\t\t\tp[i]=n[i]*a[i];\n\t\t}\n\t}\n\tfor(i=0;i<q;i++){\n\t\tprintf(\"%lld\\n\",p[i]);\n\t}\n\treturn 0;\n } \n "}
{"similarity_score": 0.7856586126266563, "equal_cnt": 27, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 21, "fix_ops_cnt": 27, "lang": "GNU C11", "fix_code_uid": "2c188f614b2e405160e9d023155701f3", "bug_code_uid": "0d1b8b2418a0d91056a583947620e2b2", "src_uid": "7bbb4b9f5eccfe13741445c815a4b1ca", "apr_id": "1fb95cccd067517e8eac17a10b5426d5", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint testCases,pilenum,daynum,piles[101],closestpile;\n\nint main ()\n{\n\t//freopen (\"cf.in\",\"r\",stdin),freopen(\"cf.out\",\"w\",stdout);\n\tscanf (\"%d\",&testCases);\n\twhile (testCases--)\n\t{\n\tscanf (\"%d %d\",&pilenum,&daynum);\n\tfor (int i=0;i<pilenum;i++)\n\t{\n\t\tscanf (\"%d\",&piles[i]);\n\t}\n\tlabel:\n\tclosestpile = 0;\n\tfor (int i=1;i<pilenum;i++)\n\t{\n\t\tif (piles[i])\n\t\t{\n\t\t\tclosestpile = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (closestpile==0)\n\t{\n\t\tputs (\"0\");\n\t\treturn 0;\n\t}\n\tdaynum -= closestpile;\n\tif (daynum>0)\n\tpiles [0]++;\n\tif (daynum>0) goto label;\n\tprintf (\"%d\\n\",piles[0]);\n\t}\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint testCases,pilenum,daynum,piles[101],closestpile;\n\nint main ()\n{\n\n\t//freopen (\"cf.in\",\"r\",stdin),freopen(\"cf.out\",\"w\",stdout);\n\tscanf (\"%d\",&testCases);\n\twhile (testCases--)\n\t\t{\n\t\t\tscanf (\"%d %d\",&pilenum,&daynum);\n\t\t\tfor (int i=0;i<pilenum;i++)\n\t\t\t\t{\n\t\t\t\t\tscanf (\"%d\",&piles[i]);\n\t\t\t\t}\n\t\t\tlabel:\n\t\t\tclosestpile = 0;\n\t\t\tfor (int i=1;i<pilenum;i++)\n\t\t\t\t{\n\t\t\t\t\tif (piles[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tclosestpile = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (daynum-closestpile<0||closestpile==0)\n\t\t\t\t\t{\t\n\t\t\t\t\t\tprintf (\"%d\\n\",piles[0]);\n\t\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tdaynum -= closestpile;\n\t\t\t\t\t\tpiles[closestpile]--;\n\t\t\t\t\t\tpiles[0]++;\n\t\t\t\t\t\tgoto label;\n\t\t\t\t\t}\n\t\t}\n}\n"}
{"similarity_score": 0.9973474801061007, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "434750d220589af74fb88c81549669cc", "bug_code_uid": "803f379b7beeb8efba75e044e372388a", "src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "apr_id": "a42534738a442f2c80dc9d0e5a93a804", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n\tint x,i=0,t,j;\n\tchar arr[105];\n\tscanf(\"%d %s\",&x,arr);\n\tif(!(x%2)){\n\t\tt=x/2;\n\t\twhile(t--){\n\t\t\tj=i;\n\t\t\tfor(;i<j+2;i++)\n\t\t\t\tprintf(\"%d\",arr[i]-'0');\n\t\t\tif(t!=0)\n\t\t\t\tprintf(\"--\");\n\t\t}\n\t}\n\telse{\n\t\tt=x/2-1;\n\t\twhile(t--){\n\t\t\tj=i;\n\t\t\tfor(;i<j+2;i++)\n\t\t\t\tprintf(\"%d\",arr[i]-'0');\n\t\t\tprintf(\"--\");\n\t\t}\n\t\tj=i;\n\t\tfor(;i<j+3;i++)\n\t\t\tprintf(\"%d\",arr[i]-'0');\n\t}\n}\n", "fixed": "#include<stdio.h>\nmain(){\n\tint x,i=0,t,j;\n\tchar arr[105];\n\tscanf(\"%d %s\",&x,arr);\n\tif(!(x%2)){\n\t\tt=x/2;\n\t\twhile(t--){\n\t\t\tj=i;\n\t\t\tfor(;i<j+2;i++)\n\t\t\t\tprintf(\"%d\",arr[i]-'0');\n\t\t\tif(t!=0)\n\t\t\t\tprintf(\"-\");\n\t\t}\n\t}\n\telse{\n\t\tt=x/2-1;\n\t\twhile(t--){\n\t\t\tj=i;\n\t\t\tfor(;i<j+2;i++)\n\t\t\t\tprintf(\"%d\",arr[i]-'0');\n\t\t\tprintf(\"-\");\n\t\t}\n\t\tj=i;\n\t\tfor(;i<j+3;i++)\n\t\t\tprintf(\"%d\",arr[i]-'0');\n\t}\n}\n"}
{"similarity_score": 0.5997552019583844, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "2595ddfde1e3dd369ff4d4f5ff272b41", "bug_code_uid": "0c7bf8373598f3d51c4e281a276c70e7", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "1b14859a4ffef55f6da8517d0a306b17", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i,n,a[101],even_count=0,odd_count=0;\nscanf(\"%d\", &n);\nfor(i=1;i<n;i++)\n{\n    scanf(\"%d\", &a[i]);\n}\n    for(i=1;i<n;i++)\n    {\n\n if(a[i]%2==0) even_count++;\n    else odd_count++;\n    }\n  for(i=1;i<n;i++)\n  {\n     if(even_count>odd_count && a[i]%2!=0 || a[i]==1) printf(\"%d\\n\", i);\n    else if(odd_count>even_count && a[i]%2==0) printf(\"%d\\n\", i);\n  }\n\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint i,n,a[101],even_count=0,odd_count=0,x,y;\nscanf(\"%d\", &n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]%2==0)\n        {\n             even_count++;\n             x=i;\n        }\n\n        else\n        {\n            odd_count++;\n            y=i;\n        }\n\n    }\n    if(even_count==1) printf(\"%d\\n\",x);\n    else if(odd_count==1) printf(\"%d\\n\",y);\n    return 0;\n}\n"}
{"similarity_score": 0.958904109589041, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "203a6a7eb07f99299704771d562a8451", "bug_code_uid": "c28d4d826419c1b8da882583e93d7d03", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "1de5d4e0739b576d943cd266f0c4d7d7", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int G(int n){\n        if(n==1) return 0;\n        int c=0;\n        while(n!=1){\n       if (n%6==0) n=n/6;\n       else n= 2*n;\n        if ( (n%3 !=0) && (n!=1) ){ return -1; break;};\n       c++;\n       }\n    return c;\n\n        if (n%3!=0) return -1;\n        else  return G(n);\n    };\n\nfor(int i=0;i<t;i++){\n    int k;\n    scanf(\"%d\",&k);\n        G(k);}\n return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int G(int n){\n        if(n==1) return 0;\n        int c=0;\n        while(n!=1){\n       if (n%6==0) n=n/6;\n       else n= 2*n;\n        if ( (n%3 !=0) && (n!=1) ){ return -1; break;};\n       c++;\n       }\n    return c;\n\n        if (n%3!=0) return -1;\n        else  return G(n);\n    };\n  int k;\nfor(int i=0;i<t;i++){\n    scanf(\"%d\",&k);\n    printf(\"%d \\n\",G(k));}\n return 0;\n}\n\n"}
{"similarity_score": 0.9973262032085561, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "974d9ca5802b2e78928571a150be7d58", "bug_code_uid": "f52a4676e0bc32582780b4c3865f3db4", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "2a28221901477b24063e68e7f50f1eb8", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n \tint n, k;\n\tscanf (\"%d %d\", &n, &k);\n\tint a[n+5];\n\tfor (int i=1; i<=n; ++i) {\n\t\tscanf (\"%d\", &a[i]);\n\t}\n\tint sum=0;\n\tfor (int i=1; i<=k; ++i) {\n\t\tsum+=a[i];\n\t}\n\tint min=sum;\n\tint c=1;\n\tfor (int i=k+1; i<=n; ++i) {\n\t\tsum=sum+a[i]-a[i-k];\n\t\tif (min>sum) {\n\t\t\tmin=sum;\n\t\t\tc=i;\n\t\t}\n\t}\n\tprintf (\"%d \", c-k+1);\n\treturn 0;\n}\n\n// code by nhuquynh.\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n \tint n, k;\n\tscanf (\"%d %d\", &n, &k);\n\tint a[n+5];\n\tfor (int i=1; i<=n; ++i) {\n\t\tscanf (\"%d\", &a[i]);\n\t}\n\tint sum=0;\n\tfor (int i=1; i<=k; ++i) {\n\t\tsum+=a[i];\n\t}\n\tint min=sum;\n\tint c=k;\n\tfor (int i=k+1; i<=n; ++i) {\n\t\tsum=sum+a[i]-a[i-k];\n\t\tif (min>sum) {\n\t\t\tmin=sum;\n\t\t\tc=i;\n\t\t}\n\t}\n\tprintf (\"%d \", c-k+1);\n\treturn 0;\n}\n\n// code by nhuquynh.\n"}
{"similarity_score": 0.9842406876790831, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "11e723738a769beedbbc84e401b2e33b", "bug_code_uid": "47c1353ac47a2b8ea1f0fd74810696fd", "src_uid": "56ea328f84b2930656ff5eb9b8fda8e0", "apr_id": "3afb57f024935385e85d8682906468db", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n\tint n, m, i, k, j, taxcur, numcur;\n\tint x[200000];\n\tint t[200000], a[100000] = {0};\n\n\tscanf(\"%d %d\", &n, &m);\n\tfor (i = 0; i < n + m; i++)\n\t\tscanf(\"%d\", &x[i]);\n\tfor (i = 0; i < n + m; i++)\n\t\tscanf(\"%d\", &t[i]);\n\n\ti = m + n - 1;\n\twhile (t[i] == 0)\n\t{\n\t\ta[m - 1]++;\n\t\ti--;\n\t}\n\tk = i;\n\ti = 0;\n\twhile (t[i] == 0)\n\t{\n\t\ta[0]++;\n\t\ti++;\n\t}\n\tj = i;\n\ttaxcur = 0;\n\tnumcur = i+1;\n\ti++;\n\twhile (i <= k)\n\t{\n\t\tif (t[i] == 0)\n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tfor (j = numcur; j < i; j++)\n\t\t{\n\t\t\tif (x[j] - x[taxcur] <= x[i] - x[j])\n\t\t\t\ta[taxcur]++;\n\t\t\telse\n\t\t\t\ta[taxcur+1]++;\n\t\t}\n\t\ttaxcur++;\n\t\tnumcur = i+1;\n\t\ti++;\n\t}\n\n\tfor (i = 0; i < m; i++)\n\t\tprintf(\"%d \", a[i]);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n\tint n, m, i, k, j, taxcur, numcur;\n\tint x[200000];\n\tint t[200000], a[100000] = {0};\n\n\tscanf(\"%d %d\", &n, &m);\n\tfor (i = 0; i < n + m; i++)\n\t\tscanf(\"%d\", &x[i]);\n\tfor (i = 0; i < n + m; i++)\n\t\tscanf(\"%d\", &t[i]);\n\n\ti = m + n - 1;\n\twhile (t[i] == 0)\n\t{\n\t\ta[m - 1]++;\n\t\ti--;\n\t}\n\tk = i;\n\ti = 0;\n\twhile (t[i] == 0)\n\t{\n\t\ta[0]++;\n\t\ti++;\n\t}\n\ttaxcur = 0;\n\tnumcur = i+1;\n\ti++;\n\twhile (i <= k)\n\t{\n\t\tif (t[i] == 0)\n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tfor (j = numcur; j < i; j++)\n\t\t{\n\t\t\tif (x[j] - x[numcur-1] <= x[i] - x[j])\n\t\t\t\ta[taxcur]++;\n\t\t\telse\n\t\t\t\ta[taxcur+1]++;\n\t\t}\n\t\ttaxcur++;\n\t\tnumcur = i+1;\n\t\ti++;\n\t}\n\n\tfor (i = 0; i < m; i++)\n\t\tprintf(\"%d \", a[i]);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9909281228192603, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "221171edd703fb8b86c8bd0dafd937af", "bug_code_uid": "3b2f5bde062e988ec82c5985b0e072a7", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "f075bbe1734bd3b189e1183ba23f3ed8", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n\tint a[7];\n\tint i, len, flag = 4, count = 0;\n\tchar s[100000];\n\tfor (i = 0; i < 7; i++) a[i] = 0;\n\tgets(s);\n\tlen = strlen(s);\n\tfor (i = 0; i < len; i++){\n\t\tif (s[i] == 'B') a[0]++;\n\t\telse if (s[i] == 'u') a[1]++;\n\t\telse if (s[i] == 'l') a[2]++;\n\t\telse if (s[i] == 'b') a[3]++;\n\t\telse if (s[i] == 'a') a[4]++;\n\t\telse if (s[i] == 's') a[5]++;\n\t\telse if (s[i] == 'r') a[6]++;\n\t}\n\t\n\twhile (1){\n\t\tfor (i = 0; i < 7 && flag!=0; i++){\n\t\t\tif (i != 1 && i != 4 && a[i] >= 1){ flag = 1; a[i]--; }\n\t\t\telse if (i == 1 || i == 4 || a[i] >= 2){ flag = 1; a[i] -= 2; }\n\t\t\telse flag = 0;\n\t\t}\n\t\tcount += flag;\n\t\tif (flag == 0) break;\n\t}\n\tprintf(\"%d\", count);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n\tint a[7];\n\tint i, len, flag = 4, count = 0;\n\tchar s[100000];\n\tfor (i = 0; i < 7; i++) a[i] = 0;\n\tgets(s);\n\tlen = strlen(s);\n\tfor (i = 0; i < len; i++){\n\t\tif (s[i] == 'B') a[0]++;\n\t\telse if (s[i] == 'u') a[1]++;\n\t\telse if (s[i] == 'l') a[2]++;\n\t\telse if (s[i] == 'b') a[3]++;\n\t\telse if (s[i] == 'a') a[4]++;\n\t\telse if (s[i] == 's') a[5]++;\n\t\telse if (s[i] == 'r') a[6]++;\n\t}\n\n\twhile (1){\n\t\tfor (i = 0; i < 7 && flag != 0; i++){\n\n\t\t\tif (i != 1 && i != 4 && a[i] >= 1){ flag = 1; a[i]--; }\n\t\t\telse if ((i == 1 || i == 4) && a[i] >= 2){ flag = 1;  a[i] -= 2; }\n\t\t\telse flag = 0;\n\t\t}\n\t\tcount += flag;\n\t\tif (flag == 0) break;\n\t}\n\tprintf(\"%d\", count);\n}"}
{"similarity_score": 0.9965635738831615, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9927ddcb6aeb1a09022c4f30425640b8", "bug_code_uid": "96e942e2ac8412947c5bed2e79ee2fda", "src_uid": "24fe280b88575516ec679ff78641440e", "apr_id": "4bc0e9a1a496094b660274c0d25f2fc2", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    int n,a,b,x=0,y=0;\n    scanf(\"%d\",&n);\n    while(n--) {\n        scanf(\"%d%d\",&a,&b);\n        if(x+a-y <= 500) {\n            putchar('A');\n            x+=a;\n        }\n        else {\n            putchar('B');\n            y+=b;\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n    int n,a,b,x=0,y=0;\n    scanf(\"%d\",&n);\n    while(n--) {\n        scanf(\"%d%d\",&a,&b);\n        if(x+a-y <= 500) {\n            putchar('A');\n            x+=a;\n        }\n        else {\n            putchar('G');\n            y+=b;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9534555712270804, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1b5c0e5378d7f04157afb9ddaec99001", "bug_code_uid": "3b9ae6fa243bf7bc627b98967d4966ea", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "e27ab560bc29d0a9363f25cb31dc8191", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid print(int a[], int n)\n{\n\tprintf(\"%d \",n);\n\tfor(int i=0; i<n; i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\n\nint main()\n{\n\tint n, a[101], na[100], p[100], pr[100], z[100];\n\tint np=0, cn = 0, cp=0, cz =0;\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=0; i<n; i++)\n\t\tif(a[i]<0)\n\t\t\tif(cn<1)\n\t\t\t\tna[cn++] = a[i];\n\t\t\telse if(!cp||++np%2!=0&&np<3)\n\t\t\t\tp[cp++] = a[i];\n\t\t\telse\n\t\t\t\tz[cz++] = a[i];\n\t\telse if(a[i]>0 && cp<5)\n\t\t\tp[cp++] = a[i];\n\t\telse\n\t\t\tz[cz++] = a[i];\n\tint cpr=0;\n\tnp++;\n\tfor(int i=0; i<cp; i++)\n\t\tif(p[i]<0&&np%2==0)\n\t\t{\n\t\t\tz[cz++] = p[i];\n\t\t\tnp--;\n\t\t}\n\t\telse\n\t\t\tpr[cpr++] = p[i];\n\tprint(na,cn);\n\tprint(pr,cpr);\n\tprint(z,cz);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nvoid print(int a[], int n)\n{\n\tprintf(\"%d \",n);\n\tfor(int i=0; i<n; i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\n\nint main()\n{\n\tint n, a[101], na[100], p[100], pr[100], z[100];\n\tint np=0, cn = 0, cp=0, cz =0;\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=0; i<n; i++)\n\t\tif(a[i]<0)\n\t\t\tif(cn<1)\n\t\t\t\tna[cn++] = a[i];\n\t\t\telse if(!cp||(np+1)%2==0&&np<3)\n\t\t\t{\n\t\t\t\tp[cp++] = a[i];\n\t\t\t\tnp++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tz[cz++] = a[i];\n\t\telse if(a[i]>0 && cp<5)\n\t\t\tp[cp++] = a[i];\n\t\telse\n\t\t\tz[cz++] = a[i];\n\tint cpr=0;\n\tnp++;\n\tfor(int i=0; i<cp; i++)\n\t\tif(p[i]<0&&(np%2==0))\n\t\t{\n\t\t\tz[cz++] = p[i];\n\t\t\tnp--;\n\t\t}\n\t\telse\n\t\t\tpr[cpr++] = p[i];\n\tprint(na,cn);\n\tprint(pr,cpr);\n\tprint(z,cz);\n\treturn 0;\n}"}
{"similarity_score": 0.33770778652668415, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3c9340aca64592a5eb11caa4e8c88ec8", "bug_code_uid": "82191c8222ac413b601f980077098fd3", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "4a1967f222e3f30d3a50139253bf09c9", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,b[n],j=1,k,dis,mind;\n    scanf(\"%ld\",&n);\n    long long int a[n],min;\n    scanf(\"%lld\",&a[1]);\n    min=a[1];\n    for(i=2;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        if(a[i]<=min)\n            min=a[i];\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(a[i]==min)\n        {\n                b[j]=i;\n                j++;\n        }\n    }\n    dis=b[2]-b[1];\n    mind=dis;\n    for(k=2;k<j-1;k++)\n    {\n        dis=b[k+1]-b[k];\n        if(dis<mind)\n            mind=dis;\n    }\n    printf(\"%lld\",mind);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long int n,i,k,dis,mind,j=0;\n    scanf(\"%ld\",&n);\n    long int b[n];\n    long long int a[n],min;\n    scanf(\"%lld\",&a[0]);\n    min=a[0];\n\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        if(a[i]<=min)\n            min=a[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==min)\n        {\n                b[j]=i;\n                j++;\n        }\n    }\n    dis=b[1]-b[0];\n    mind=dis;\n    for(k=1;k<j-1;k++)\n    {\n        dis=b[k+1]-b[k];\n        if(dis<mind)\n            mind=dis;\n    }\n    printf(\"%ld\",mind);\n    return 0;\n\n}\n"}
{"similarity_score": 0.9983434566537824, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b65727d622ac743cad48a50d3f9650c7", "bug_code_uid": "73456f43cd733b8045b23f7e5fe670b1", "src_uid": "1bd1a7fd2a07e3f8633d5bc83d837769", "apr_id": "f6759e4369fd404152d21b7c5dd1c983", "difficulty": 1500, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\n    int n;\n    int cha;\n    while (scanf(\"%d\", &n) != EOF)\n    {\n        if (n < 4)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n        printf(\"YES\\n\");\n        if (n % 2)\n        {\n            cha = n - 5;\n            cha /= 2;\n            while (n>5)\n            {\n                printf(\"%d - %d = 1\\n\", n, n - 1);\n                n -= 2;\n            }\n            printf(\"4 * 5 = 30\\n20 + 3 = 23\\n23 + 2 = 25\\n25 - 1 = 24\\n\");\n            while (cha--)printf(\"24 * 1 = 24\\n\");\n        }\n        else if (n % 2 == 0)\n        {\n            cha = n - 4;\n            cha /= 2;\n            while (n>4)\n            {\n                printf(\"%d - %d = 1\\n\", n, n - 1);\n                n -= 2;\n            }\n            printf(\"2 * 3 = 6\\n4 * 6 = 24\\n24 * 1 = 24\\n\");\n            while (cha--)printf(\"24 * 1 = 24\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main ()\n{\n    int n;\n    int cha;\n    while (scanf(\"%d\", &n) != EOF)\n    {\n        if (n < 4)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n        printf(\"YES\\n\");\n        if (n % 2)\n        {\n            cha = n - 5;\n            cha /= 2;\n            while (n>5)\n            {\n                printf(\"%d - %d = 1\\n\", n, n - 1);\n                n -= 2;\n            }\n            printf(\"4 * 5 = 20\\n20 + 3 = 23\\n23 + 2 = 25\\n25 - 1 = 24\\n\");\n            while (cha--)printf(\"24 * 1 = 24\\n\");\n        }\n        else if (n % 2 == 0)\n        {\n            cha = n - 4;\n            cha /= 2;\n            while (n>4)\n            {\n                printf(\"%d - %d = 1\\n\", n, n - 1);\n                n -= 2;\n            }\n            printf(\"2 * 3 = 6\\n4 * 6 = 24\\n24 * 1 = 24\\n\");\n            while (cha--)printf(\"24 * 1 = 24\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.04822695035460993, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "bef23e05e83a9f0e5ab8702121e7f726", "bug_code_uid": "9c55b4463c7e0d104438998468703dba", "src_uid": "2a414730d1bc7eef50bdb631ea966366", "apr_id": "e848980c656f0cfd6351a49444dcc645", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\n#include<cstring>\nusing namespace std;\nint main()\n{\n\tint n;\n\tstring s;\n\t\n\tcin>>n;\n\tcin>>s;\n\tchar a[n];\n\tint f,l,r,i;\n\tif(n%2)\n\t f=0;\n\telse \n\t f=1;\n\ta[(n-1)/2]=s[0];\n\tl=(n-1)/2-1;\n\tr=l+2; \n\tfor(i=1;i<n;++i)\n\t{\n\t\tif(f%2)\n\t     a[r++]=s[i];\t\n\t\telse\n\t\t a[l--]=s[i];\n\t\tf++; \n\t} \n\t  for(i=0;i<n;++i)\n\t   cout<<a[i];\n\t  return 0; \n}\n", "fixed": "\n#include<stdio.h>\n//using namespace std;\nint main()\n{\n\tint n;\n//\tstring s;\n\t\n\tscanf(\"%d\",&n);\nchar s[n];\n\tscanf(\"%s\",s);\n\tchar a[n];\n\tint f,l,r,i;\n\tif(n%2)\n\t f=0;\n\telse \n\t f=1;\n\ta[(n-1)/2]=s[0];\n\tl=(n-1)/2-1;\n\tr=l+2; \n\tfor(i=1;i<n;++i)\n\t{\n\t\tif(f%2)\n\t     a[r++]=s[i];\t\n\t\telse\n\t\t a[l--]=s[i];\n\t\tf++; \n\t} \n\t  for(i=0;i<n;++i)\nprintf(\"%c\",a[i]);\n\t  return 0; \n}\n"}
{"similarity_score": 0.9962825278810409, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "09e6a0ae3173f6cc0dae5cda6e40eb5c", "bug_code_uid": "b7db69874b8af06a3d49263b7ad4f9f9", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "f5a7ac4bcda42f6b78686022bfa881bf", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint ctoi(char ch)\n{\n  return ch - '0';\n}\n\nint main()\n{\n  int n;\n  int init, fin;\n  int answer;\n  scanf(\"%d\\n\", &n);\n  char *initial = malloc(sizeof(char) * (n + 1));\n  char *final = malloc(sizeof(char) * (n + 1));\n  scanf(\"%1000s\\n\", initial);\n  scanf(\"%1000s\", final);\n  for(int i = 0; i < n; i++)\n  {\n    init = ctoi(initial[i]);\n    fin = ctoi(final[i]);\n    answer += abs(init - fin) > 5 ? 10 - abs(init - fin) : abs(init - fin);\n  }\n  printf(\"%d\\n\", answer);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint ctoi(char ch)\n{\n  return ch - '0';\n}\n\nint main()\n{\n  int n;\n  int init, fin;\n  int answer = 0;\n  scanf(\"%d\\n\", &n);\n  char *initial = malloc(sizeof(char) * (n + 1));\n  char *final = malloc(sizeof(char) * (n + 1));\n  scanf(\"%1000s\\n\", initial);\n  scanf(\"%1000s\", final);\n  for(int i = 0; i < n; i++)\n  {\n    init = ctoi(initial[i]);\n    fin = ctoi(final[i]);\n    answer += abs(init - fin) > 5 ? 10 - abs(init - fin) : abs(init - fin);\n  }\n  printf(\"%d\\n\", answer);\n  return 0;\n}\n"}
{"similarity_score": 0.8646408839779005, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "eda74765396c7853daebdf25c4fd5de3", "bug_code_uid": "362680d5c8a98d48564ca0310b4c9fc1", "src_uid": "85f90533a9840e944deef9f3b4229cb8", "apr_id": "a8e21470704f53c41905d4e75ec9b55b", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int i,k,a[27],d,max=0,s=0;\n    char st[1005];\n    gets(st);\n    scanf(\"%d\",&k);\n    for(i=0;i<26;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<strlen(st);i++)\n    {\n        d=st[i]-'a';\n        s+=a[d]*(i+1);\n        if(a[d]>max)\n            max=a[d];\n    }\n    s+=max*(((i+k)*(i+k+1))/2-(i*(i+1))/2);\n    printf(\"%d\",s);\n}\n\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int i,k,a[27],d,max=0,s=0;\n    char st[1005];\n    gets(st);\n    scanf(\"%d\",&k);\n    for(i=0;i<26;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>max)\n            max=a[i];\n    }\n    for(i=0;i<strlen(st);i++)\n    {\n        d=st[i]-'a';\n        s+=a[d]*(i+1);\n    }\n    s+=max*(((i+k)*(i+k+1))/2-(i*(i+1))/2);\n    printf(\"%d\",s);\n}\n\n"}
{"similarity_score": 0.8329764453961456, "equal_cnt": 20, "replace_cnt": 17, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "ef052858f600dbcf40b9405950ad9542", "bug_code_uid": "a6273179de45b91451dcc7099107ce6f", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "f87cedb1b2aac92da55d7f7c332dd683", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define MENOR_VALOR -2000000000\nint main(){\n\tint n,k,fi,ti,i,alegria[10000],maior_alegria;\n\tmaior_alegria = MENOR_VALOR;\n\tscanf(\"%d %d/n\",&n,&k);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d %d/n\",&fi,&ti);\n\t\tif(ti>k)\n\t\t\talegria[i]=fi-(ti-k);\n\t\telse\n\t\t\talegria[i]=fi;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(alegria[i]>maior_alegria){\n\t\t\tmaior_alegria == alegria[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",maior_alegria);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define MENOR_VALOR -2000000000\nint main(){\n    int n,k,fi,ti,i,alegria[30000],maior_alegria;\n    maior_alegria = MENOR_VALOR;\n    scanf(\"%d %d/n\",&n,&k);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d/n\",&fi,&ti);\n        if(ti>k)\n            alegria[i]=fi-(ti-k);\n        else\n            alegria[i]=fi;\n    }\n    for(i=0;i<n;i++){\n        if(alegria[i]>maior_alegria){\n            maior_alegria = alegria[i];\n        }\n    }\n    printf(\"%d\\n\",maior_alegria);\n    return 0;   \n}\n"}
{"similarity_score": 0.8632025450689289, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f2071c226ac88171a43f8a162807ee7d", "bug_code_uid": "ea29a91b7a597dbccef0565da621affd", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "c52a2882cbe7a59e799b3499e6d15c92", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n, i, count1 = 0, count2 = 0;\n    scanf(\"%d\", &n);\n    char str[n];\n    for(i=0; i<n; i++)\n        gets(str[i]);\n    str[i] = '\\0';\n\n    for(i=0; i<n; i++){\n        if(str[i] == 'A')\n            count1++;\n        else if(str[i] == 'D')\n            count2++;\n        else\n            continue;\n    }\n    if(count1 == count2)\n        printf(\"Friendship\");\n    else if(count1 > count2)\n        printf(\"Anton\");\n    else\n        printf(\"Danik\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, i, count1 = 0, count2 = 0;\n    scanf(\"%d\", &n);\n    char str[n];\n    scanf(\"%s\", str);\n\n    for(i=0; i<n; i++){\n        if(str[i] == 'A')\n            count1++;\n        else if(str[i] == 'D')\n            count2++;\n    }\n    if(count1 == count2)\n        printf(\"Friendship\");\n    else if(count1 > count2)\n        printf(\"Anton\");\n    else\n        printf(\"Danik\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.8864306784660767, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3b639bd11c6ba2d70bfb9c2c0e30329a", "bug_code_uid": "2fce4b7eb93ff55304d610987c6f82ed", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "cad665e6c23cea8b920b22d469eeba99", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int a[100];\r\n    while(t--)\r\n    {\r\n        int flag=1,n,i;\r\n        scanf(\"%d\",&n);\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]!=i)\r\n                flag=0;\r\n        }\r\n        if(flag==1)\r\n            printf(\"0\\n\");\r\n        else\r\n        {\r\n            if(a[n]==1&&a[1]==n)\r\n                printf(\"3\\n\");\r\n            else if(a[1]==1)\r\n                printf(\"1\\n\");\r\n            else if(a[1]!=1&&a[n]!=1)\r\n            {\r\n                if(a[n]==n)\r\n                    printf(\"1\\n\");\r\n                else\r\n                    printf(\"2\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int a[100];\r\n    while(t--)\r\n    {\r\n        int flag=1,n,i;\r\n        scanf(\"%d\",&n);\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]!=i)\r\n                flag=0;\r\n        }\r\n        if(flag==1)\r\n            printf(\"0\\n\");\r\n        else\r\n        {\r\n            if(a[n]==1&&a[1]==n)\r\n                printf(\"3\\n\");\r\n            else if(a[1]==1||a[n]==n)\r\n                printf(\"1\\n\");\r\n            else \r\n                printf(\"2\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9417786308381318, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "143654a170b52fa75b7d0db3fe299899", "bug_code_uid": "c9ada7fc34260555dc39e0b0e4ffe6b4", "src_uid": "7896740b6f35010af751d3261b5ef718", "apr_id": "85067956352abc37b3b2092332ffe243", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int n,m=0,i,j,x=0;\n    scanf(\"%d\",&n);\n    int l=n*2;\n\n    for(i=0;i<=2*n;i++)\n    {\n        if(x==0){\n        for(i=0;i<l;i++) printf(\" \");\n        for(i=0;i<=m;i++) printf(\"%d \",i);\n        for(i=m-1;i>=0;i--) {printf(\"%d\",i); if(i>0) printf(\" \"); }\n\n        m++;\n        l=l-2;\n        if(m==n+1)\n        {\n            x=1;  m=m-2; l=l+4; printf(\"\\n\");\n        }\n        }\n\n        //printf(\"m=%d l=%d\\n\",m,l);\n\n       if(x==1)\n            {\n            for(i=0;i<l;i++) printf(\" \");\n            for(i=0;i<=m;i++) printf(\"%d \",i);\n            for(i=m-1;i>=0;i--) {printf(\"%d\",i);  if(i>0) printf(\" \");  }\n            m--;\n            l=l+2;\n            }\n        if(m==-1) break;\n\n            printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int n,m=0,i,j,x=0;\n    scanf(\"%d\",&n);\n    int l=n*2;\n\n    for(j=0;j<=2*n;j++)\n    {\n        if(x==0){\n        for(i=0;i<l;i++) printf(\" \");\n        for(i=0;i<=m;i++) {printf(\"%d\",i);  if(j!=0) printf(\" \"); }\n        for(i=m-1;i>=0;i--) {printf(\"%d\",i); if(i>0) printf(\" \"); }\n\n        m++;\n        l=l-2;\n        if(m==n+1)\n        {\n            x=1;  m=m-2; l=l+4; printf(\"\\n\");\n        }\n        }\n\n        //printf(\"m=%d l=%d\\n\",m,l);\n\n       if(x==1)\n            {\n            for(i=0;i<l;i++) printf(\" \");\n            for(i=0;i<=m;i++) {printf(\"%d\",i);  if(j!=(2*n)-1)printf(\" \"); }\n            for(i=m-1;i>=0;i--) {printf(\"%d\",i);  if(i>0) printf(\" \");  }\n            m--;\n            l=l+2;\n            }\n        if(m==-1) break;\n\n            printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.9514426460239268, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "2301be570192b89a436d4e082c1c055f", "bug_code_uid": "886fe8ee30f4decb6d79d7e311ebcb8c", "src_uid": "4a48b828e35efa065668703edc22bf9b", "apr_id": "f80e34eeee58dafdf0a09bef603d7bd3", "difficulty": 1400, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    \n    long int arr1[n],arr2[n];\n    \n    for(int i=0;i<n;i++)\n    scanf(\"%ld\",arr1[i]);\n    for(int i=0;i<n;i++)\n    scanf(\"%ld\",arr2[i]);\n    \n    long int res = 10e9;\n    \n    for(int i=1;i<n-1;i++)\n    {\n        long int min1=10e9,min2=10e9;\n        \n        for(int j=i-1;j>=0;j++)\n        if(arr1[i]>arr1[j]) min1=min(min1,arr2[j]);\n        \n        for(int j=i+1;j<n;j++)\n        if(arr1[j]>arr1[i]) min2=min(min2,arr2[j]);\n        \n        res= min(res,c[i]+min1+min2);\n    }    \n        \n    if(res==10e9) printf(\"-1\");\n    else printf(\"%ld\",res);\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#define max(a,b) (a>=b?a:b)\n#define min(a,b) (a<=b?a:b)\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    \n    long int arr1[n],arr2[n];\n    \n    for(int i=0;i<n;i++)\n    scanf(\"%ld\",&arr1[i]);\n    for(int i=0;i<n;i++)\n    scanf(\"%ld\",&arr2[i]);\n    \n    long int res = 1000000000;\n    \n    for(int i=1;i<n-1;i++)\n    {\n        long int min1=1000000000,min2=1000000000;\n        \n        for(int j=i-1;j>=0;j--)\n        if(arr1[i]>arr1[j]) min1=min(min1,arr2[j]);\n        \n        for(int j=i+1;j<n;j++)\n        if(arr1[j]>arr1[i]) min2=min(min2,arr2[j]);\n        \n        res= min(res,arr2[i]+min1+min2);\n    }    \n        \n    if(res==1000000000) printf(\"-1\");\n    else printf(\"%ld\",res);\n    \n    return 0;\n}"}
{"similarity_score": 0.9975550122249389, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b18e3ca4ae34204ece74bdf44edd3cd8", "bug_code_uid": "7bb47511d20e6259359364ca0b2f76c7", "src_uid": "14ce451a31c0dbc2b2f4e04a939b199d", "apr_id": "0d2347cf4c78e47ab8611cdd78109433", "difficulty": 1400, "tags": ["combinatorics", "graphs", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nlong long int nC2(long long int n)\r\n{\r\n  return n*(n-1)/2;\r\n}\r\n\r\nint main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n    long long int a,b,k,n=0;\r\n    scanf(\"%lli %lli %lli\",&a,&b,&k);\r\n    long long int A[k],B[k],An[k+1],Bn[k+1];\r\n    memset(An,0,sizeof(An));\r\n    memset(Bn,0,sizeof(Bn));\r\n    for(long long int i=0;i<k;i++)\r\n    {\r\n      scanf(\"%lli\",&A[i]);\r\n      An[A[i]-1]++;\r\n    }\r\n    for(long long int i=0;i<k;i++)\r\n    {\r\n      scanf(\"%lli\",&B[i]);\r\n      Bn[B[i]-1]++;\r\n    }\r\n    if(k<2)\r\n    {\r\n      printf(\"%d\\n\",0);\r\n      continue;\r\n    }\r\n    n = nC2(k);\r\n    for(long long int i=0;i<a;i++)\r\n    {\r\n      n-=nC2(An[i]);\r\n    }\r\n    for(long long int i=0;i<b;i++)\r\n    {\r\n      n-=nC2(Bn[i]);\r\n    }\r\n    printf(\"%lli\\n\",n);\r\n  }\r\n  return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nlong long int nC2(long long int n)\r\n{\r\n  return n*(n-1)/2;\r\n}\r\n\r\nint main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n    long long int a,b,k,n=0;\r\n    scanf(\"%lli %lli %lli\",&a,&b,&k);\r\n    long long int A[k],B[k],An[a+1],Bn[b+1];\r\n    memset(An,0,sizeof(An));\r\n    memset(Bn,0,sizeof(Bn));\r\n    for(long long int i=0;i<k;i++)\r\n    {\r\n      scanf(\"%lli\",&A[i]);\r\n      An[A[i]-1]++;\r\n    }\r\n    for(long long int i=0;i<k;i++)\r\n    {\r\n      scanf(\"%lli\",&B[i]);\r\n      Bn[B[i]-1]++;\r\n    }\r\n    if(k<2)\r\n    {\r\n      printf(\"%d\\n\",0);\r\n      continue;\r\n    }\r\n    n = nC2(k);\r\n    for(long long int i=0;i<a;i++)\r\n    {\r\n      n-=nC2(An[i]);\r\n    }\r\n    for(long long int i=0;i<b;i++)\r\n    {\r\n      n-=nC2(Bn[i]);\r\n    }\r\n    printf(\"%lli\\n\",n);\r\n  }\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.9841269841269841, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c98c8d9c03153de0178f218f47a238d9", "bug_code_uid": "35b6be82726ddfd7395967d53b71db2b", "src_uid": "260666df22ee510fcce3ebdfbb8b71a2", "apr_id": "1d4ddd841573fd511ee02c44d5f5a709", "difficulty": 1000, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n,i,j,k;\nscanf(\"%d\",&n);\ndouble a=0.00;\nfor(i=1;i<=n;i++) a=a+1.00/i;\nprintf(\"%.7lf\",a);\n\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n,i,j,k;\nscanf(\"%d\",&n);\ndouble a=0.00;\nfor(i=1;i<=n;i++) a=a+1.00/i;\nprintf(\"%.10f\",a);\n\n}\n"}
{"similarity_score": 0.3076923076923077, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "289faff34ba66baa9d234edaad48bea7", "bug_code_uid": "919f6b9df9cc4c2513b7bb3dad186d2e", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "8aece14b6628236a93092ba23b8848f5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int main()\n{long int a, b,k,x=0,i;\nscanf(\"%ld%ld%ld\",&a,&b,&k);\nfor(i=0;i<k;i++)\n{\nif(i%2==0)\n{\nx=x+a;}\nelse\n{\nx=x-b;\n}\n}\nprintf(\"%ld\",x);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n int t;\n scanf(\"%d\",&t);\n for(int i=0;i<t;i++)\n {\n  long long a,b,k,y;\n  scanf(\"%lld\",&a);\n  scanf(\"%lld\",&b);\n  scanf(\"%lld\",&k);\n  y=a*(k-k/2)-b*(k/2);\n  printf(\"%lld\\n\",y);\n }\n}  "}
{"similarity_score": 0.9978494623655914, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "47d888d83ea5a4049e28639d2ed6f93c", "bug_code_uid": "37ec016e7cf43e09028aebe9afcefb83", "src_uid": "b85c8bfbe67a23a81bef755f9313115a", "apr_id": "b6919b9c802bec660b7e43528f15fc7f", "difficulty": 1500, "tags": ["constructive algorithms", "number theory", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,k,i,ch;\n    scanf(\"%d %d\",&n,&k);\n    if(k<n/2&&n!=1)\n    printf(\"-1\");\n    else if(n!=1)\n    {\n        ch=k-n/2+1;\n        //printf(\"%d     \",n);\n        printf(\"%d %d \",ch,2*ch);\n        ch=2*ch;\n        n=n-2;\n        for(i=1;i<=n;i++)\n        {\n            printf(\"%d \",ch);\n            ch++;\n        }\n    }\n    else\n    {\n        if(k==0)\n        printf(\"1\");\n        else\n        printf(\"-1\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,k,i,ch;\n    scanf(\"%d %d\",&n,&k);\n    if(k<n/2&&n!=1)\n    printf(\"-1\");\n    else if(n!=1)\n    {\n        ch=k-n/2+1;\n        //printf(\"%d     \",n);\n        printf(\"%d %d \",ch,2*ch);\n        ch=2*ch+1;\n        n=n-2;\n        for(i=1;i<=n;i++)\n        {\n            printf(\"%d \",ch);\n            ch++;\n        }\n    }\n    else\n    {\n        if(k==0)\n        printf(\"1\");\n        else\n        printf(\"-1\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.7915690866510539, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "33cb3295af8f33dc9c0ac8b0ea488aa5", "bug_code_uid": "6f08f3c51ff4ebdeaedc985472bd7ca3", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "15b69af8407f09341bc36beb600b1528", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\n\tint test,n,i,melhor=0,pior=10000,contador=0;\n\n\tscanf(\"%d\",&test);\n\tfor(i=0;i<test;i++){\n\t\tscanf(\"%d\",&n);\n\t\tif(n<pior){\n\t\t\tpior=n;\n\t\t\tcontador++;\n\t\t}\n\t\tif(n>melhor){\n\t\t\tmelhor=n;\n\t\t\tcontador++;\n\t\t}\n\t}\n\tif(contador>1){\t\t\n\t\tprintf(\"%d\\n\",contador-2);\n\t}\n\telse{\n\t\tcontador=0;\n\t\tprintf(\"%d\\n\",contador);\n\t}\n\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\t\n\tint test,n,i,melhor=0,pior=10000,contador=0;\n\n\tscanf(\"%d\",&test);\n\tfor(i=0;i<test;i++){\n\t\tscanf(\"%d\",&n);\n\t\tif(n<pior){\n\t\t\tpior=n;\n\t\t\tcontador++;\n\t\t}\n\t\tif(n>melhor){\n\t\t\tmelhor=n;\n\t\t\tcontador++;\n\t\t}\n\t}\n\tif(contador>2){\t\t\n\t\tprintf(\"%d\\n\",contador-2);\n\t}\n\telse{\n\t\tif(contador==2){\n\t\t\tif(pior<melhor){\n\t\t\t\tcontador=1;\n\t\t\t}\n\t\t\tif((pior>melhor)||(pior==melhor)){\n\t\t\t\tcontador=0;\n\t\t\t}\n\t\t}\n\t\telse if(contador==1){\n\t\t\tcontador=0;\n\t\t}\n\t\tprintf(\"%d\\n\",contador);\n\t}\t\n\n\treturn 0;\n}"}
{"similarity_score": 0.9841605068637803, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6968c7ce875cf71986a7e54df7412400", "bug_code_uid": "b314762ecc5cfb041b0c63da3cb9aab8", "src_uid": "960e4c234666d2444b80d5966f1d285d", "apr_id": "6b7213ef19a87644e90048500720977f", "difficulty": 1300, "tags": ["two pointers", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint i,l,count=0,h=0;\n\tchar a[1000010];\n\tscanf(\"%s\",a);\n\tl=strlen(a);\n\tfor(i=0;i<l;i++)\n\t{\n\t\tif(i<=l-5)\n\t\t{\n\t\t\tif(a[i]=='h')\n\t\t\t{\n\t\t\t\tif(a[i+1]=='e' && a[i+2]=='a' && a[i+3]=='v' && a[i+4]=='y')\n\t\t\t\t{\n\t\t\t\t\th++;\n\t\t\t\t\ti=i+4;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(a[i]=='m')\n\t\t\t{\n\t\t\t\tif(a[i+1]=='e' && a[i+2]=='t' && a[i+3]=='a' && a[i+4]=='l')\n\t\t\t\t{\n\t\t\t\t\tcount=count+h;\n\t\t\t\t\ti=i+4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d \\n\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong long i,l,count=0,h=0;\n\tchar a[1000010];\n\tscanf(\"%s\",a);\n\tl=strlen(a);\n\tfor(i=0;i<l;i++)\n\t{\n\t\tif(i<=l-5)\n\t\t{\n\t\t\tif(a[i]=='h')\n\t\t\t{\n\t\t\t\tif(a[i+1]=='e' && a[i+2]=='a' && a[i+3]=='v' && a[i+4]=='y')\n\t\t\t\t{\n\t\t\t\t\th++;\n\t\t\t\t\ti=i+4;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(a[i]=='m')\n\t\t\t{\n\t\t\t\tif(a[i+1]=='e' && a[i+2]=='t' && a[i+3]=='a' && a[i+4]=='l')\n\t\t\t\t{\n\t\t\t\t\tcount=count+h;\n\t\t\t\t\ti=i+4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%I64d \\n\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.20677035681610248, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "962704df46274981417dfe77acbb54d3", "bug_code_uid": "abacf147384ca770c6803c857f79d1fd", "src_uid": "5953b898995a82edfbd42b6c0f7138af", "apr_id": "478e26cc24902549196d0d5564739e91", "difficulty": 1300, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint goodnums(int x);\nmain(){\n     int q,i,j;\n    scanf(\"%d\",&q);\n    int arr[q];\n    int *ptr=NULL;\n    ptr=arr;\n    for(i=0;i<q;i++){\n        scanf(\"%d\",&*(ptr+i));\n    }   \n for(j=0;j<q;j++){\n        printf(\"%d\\n\",goodnums(*(ptr+j)));\n    }\n         }     \nint goodnums(int x){\n    int freq[10]={0};\n    int y=x;\n    int i=9;\n    while(i>=0){\n        i--;\n        if(x-pow(3,i)>=0){\n            x-=pow(3,i);\n            freq[i]++;\n            if(freq[i]>1){\n                return goodnums(++y);\n            }\n            i=9;\n        }\n        if(x==0){\n            if(y>13){\n                return y-1;\nBreak;\n            }\n            return y;\n        }\n        \n    }\n}", "fixed": "#include<stdio.h>\n#include<stdbool.h>\nmain(){\n    int q,i,c,n;\n    scanf(\"%d\",&q);\n     for(i=0;i<q;++i){\n        scanf(\"%d\",&n);\n        while(1){\n            c=n;\n            bool ok=true;\n            while(c){\n                if(ok&&c%3==2)ok=false;\n                c/=3;\n            }\n            if(ok){printf(\"%d\\n\",n);\n            break;}\n            n++;\n        }\n    }\n}"}
{"similarity_score": 0.9871794871794872, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c3d19ca01ac998d50cbd7f812be2fd0c", "bug_code_uid": "c1b790c7e263ab4af25dada07d2964c0", "src_uid": "5db2ae5b2c91b29e4fe4a45ab864e3f1", "apr_id": "9afdc5973593f1386fb89bafe7bbe98f", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\t\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n+1];\n\tint max=0;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]>max)\n\t\tmax=a[i];\n\t}\n\tint maxnum=0,num=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(a[i]==max){\n\t\t\tnum++;\n\t\t\tif(num>maxnum)\n\t\t\tmaxnum=num;\n\t\t}\n\t\telse{\n\t\t\tnum=0;\n\t\t}\n\t}\n\tprintf(\"%d\",maxnum);\n}", "fixed": "#include <stdio.h>\nint main(){\n\t\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tint max=0;\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]>max)\n\t\tmax=a[i];\n\t}\n\tint maxnum=0,num=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(a[i]==max){\n\t\t\tnum+=1;\n\t\t\tif(num>maxnum)\n\t\t\tmaxnum=num;\n\t\t}\n\t\telse{\n\t\t\tnum=0;\n\t\t}\n\t}\n\tprintf(\"%d\",maxnum);\n}"}
{"similarity_score": 0.8734549735138316, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b5bace7a99bdadf954c10c69e8e4662a", "bug_code_uid": "d5b90d5ead686787ad917fe01207cf45", "src_uid": "8c4a0a01c37fa1b7c507043ee6d93544", "apr_id": "9e12b263c0ff8bbaadb9e9852035cc68", "difficulty": 2300, "tags": ["binary search", "brute force", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t200000\n\nint max(int a, int b) { return a > b ? a : b; }\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int aa[N];\n\t\tint n, i, j, k, l, l_, lower, upper, same;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\tsame = 1;\n\t\tfor (i = 1; i < n; i++)\n\t\t\tif (aa[i] != aa[i - 1]) {\n\t\t\t\tsame = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (same) {\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tl_ = 0;\n\t\tfor (i = 1; i < n; i++) {\n\t\t\tif (aa[i - 1] == aa[i])\n\t\t\t\tcontinue;\n\t\t\tj = i, l = 2;\n\t\t\twhile (l <= i && aa[i - l] == aa[i - 1])\n\t\t\t\tl++;\n\t\t\twhile (aa[i - 1] + aa[n - 1] >= aa[j] * 2) {\n\t\t\t\tlower = j, upper = n - 1;\n\t\t\t\twhile (upper - lower > 1) {\n\t\t\t\t\tk = (lower + upper) / 2;\n\t\t\t\t\tif (aa[i - 1] + aa[k] >= aa[j] * 2)\n\t\t\t\t\t\tupper = k;\n\t\t\t\t\telse\n\t\t\t\t\t\tlower = k;\n\t\t\t\t}\n\t\t\t\tj = upper, l++;\n\t\t\t}\n\t\t\tl_ = max(l_, l);\n\t\t}\n\t\tprintf(\"%d\\n\", n - l_);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t200000\n\nint max(int a, int b) { return a > b ? a : b; }\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int aa[N];\n\t\tint n, i, j, k, l, l_, lower, upper;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\tl_ = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (aa[i] == aa[n - 1])\n\t\t\t\tl_++;\n\t\tfor (i = 1; i < n; i++) {\n\t\t\tif (aa[i - 1] == aa[i])\n\t\t\t\tcontinue;\n\t\t\tj = i, l = 2;\n\t\t\twhile (l <= i && aa[i - l] == aa[i - 1])\n\t\t\t\tl++;\n\t\t\twhile (aa[i - 1] + aa[n - 1] >= aa[j] * 2) {\n\t\t\t\tlower = j, upper = n - 1;\n\t\t\t\twhile (upper - lower > 1) {\n\t\t\t\t\tk = (lower + upper) / 2;\n\t\t\t\t\tif (aa[i - 1] + aa[k] >= aa[j] * 2)\n\t\t\t\t\t\tupper = k;\n\t\t\t\t\telse\n\t\t\t\t\t\tlower = k;\n\t\t\t\t}\n\t\t\t\tj = upper, l++;\n\t\t\t}\n\t\t\tl_ = max(l_, l);\n\t\t}\n\t\tprintf(\"%d\\n\", n - l_);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8888888888888888, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "dd9baba5c4f71928d9604048acd04704", "bug_code_uid": "add51376341691249ae076cf747d4dff", "src_uid": "2f0942c531fd5758b220104c3338b702", "apr_id": "91ff2f88b35d55b2d9f28b2b557f4a59", "difficulty": 1300, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint t,a[10002],b[10002],c[10002],j,i;\nscanf(\"%d\",&t);\nif(t%2==0)\nprintf(\"-1\");\nelse{\nfor(i=0;i<t;i++)\na[i]=i;\nj=0;\nfor(i=1;i<t;i++){\nb[j]=i;\nj++;}\nb[j]=0;\nfor(i=0;i<t;i++)\nc[i]=(a[i]+b[i])%t;\nfor(i=0;i<t;i++)\nprintf(\"%d \",a[i]);\nprintf(\"\\n\");\nfor(i=0;i<t;i++)\nprintf(\"%d \",b[i]);\nprintf(\"\\n\");\nfor(i=0;i<t;i++)\nprintf(\"%d \",c[i]);\nprintf(\"\\n\");\n}\nreturn 0;}\n", "fixed": "#include<stdio.h>\nlong int a[1000009],b[1000009],c[1000009];\nint main(){\nlong int t,j,i;\nscanf(\"%ld\",&t);\nif(t%2==0)\nprintf(\"-1\");\nelse{\nfor(i=0;i<t;i++)\na[i]=i;\nj=0;\nfor(i=1;i<t;i++){\nb[j]=i;\nj++;}\nb[j]=0;\nfor(i=0;i<t;i++)\nc[i]=(a[i]+b[i])%t;\nfor(i=0;i<t;i++)\nprintf(\"%ld \",a[i]);\nprintf(\"\\n\");\nfor(i=0;i<t;i++)\nprintf(\"%ld \",b[i]);\nprintf(\"\\n\");\nfor(i=0;i<t;i++)\nprintf(\"%ld \",c[i]);\nprintf(\"\\n\");\n}\nreturn 0;}\n"}
{"similarity_score": 0.4213223987698616, "equal_cnt": 26, "replace_cnt": 20, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "f0ae5afa8c677ea8c8a61ee6fdc286db", "bug_code_uid": "f28ac6059d03f31cbe035d4c2b858e44", "src_uid": "55a1e9236cac9a6044e74b1975331535", "apr_id": "2eb0715b5b50afcc4426aac8cb5dfea2", "difficulty": 1400, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef long long int ulli;\r\nulli gcd(ulli a,ulli b){\r\n\tif(a==0)\r\n\t return b;\r\n\telse\r\n   return gcd(b,a%b);}\r\nint cmp(const void*a,const void*b){\r\n\treturn (*(int*)a-*(int*)b);}\r\nint min(int a,int b){\r\n\tif(a<=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\n int max(int a,int b){\r\n \tif(a>=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n,x=0,y=0,i,c;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n],b[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t scanf(\"%d\",a+i);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t scanf(\"%d\",b+i);\r\n\t\tif(b[0]-a[0]>0)\r\n\t\t c=x;\r\n\t\telse{\r\n\t\t\tfor(i=0;i<n;i++){\r\n\t\t\t\tif(a[0]<b[i])\r\n\t\t\t\t break;\r\n\t\t\t\telse\r\n         x++;}\r\n     for(i=0;i<n;i++){\r\n\t\t\t\tif(a[i]<b[0])\r\n\t\t\t\t break;\r\n\t\t\t\telse\r\n         y++;} \r\n     c=min(x,y);}\r\n   printf(\"%d\",c);\r\n\t printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\ntypedef long long int ulli;\r\nulli gcd(ulli a,ulli b){\r\n\tif(a==0&&b!=0)\r\n\t return b;\r\n\telse if(b==0&&a!=0)\r\n\t return a;\r\n\telse if(a==0&&b==0)\r\n\t return 0;\r\n\telse\r\n   return gcd(b,a%b);}\r\nint* array;\r\nint cmp(const void*a,const void*b){\r\n\tint ia=*(int*)a;\r\n\tint ib=*(int*)b;\r\n\treturn ia-ib;}\r\nint min(int a,int b){\r\n\tif(a<=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nint max(int a,int b){\r\n \tif(a>=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nulli digit(ulli n){\r\n \tulli c=0;\r\n \twhile(n>0){\r\n \t\tc+=1;\r\n \t\tn/=10;}\r\n \treturn c;}\r\nulli power(ulli base,ulli p){\r\n\tulli ans=1;\r\n\twhile(p--)\r\n\t\tans=(ans*base);\r\n\treturn ans;}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t  int n,i,j;\r\n\t  scanf(\"%d\",&n);\r\n\t  int a[n],b[n],even[n],odd[n];\r\n\t  for(i=0;i<n;i++){\r\n\t   scanf(\"%d\",a+i);\r\n\t   odd[a[i]/2]=i;}\r\n\t  for(i=0;i<n;i++){\r\n\t   scanf(\"%d\",b+i);\r\n\t   even[b[i]/2-1]=i;}\r\n\t  int ans=2*n;\r\n\t  int m=2*n;\r\n\t  for(i=n-1;i>=0;i--){\r\n\t  \tm=min(even[i],m);\r\n\t  \tans=min(ans,m+odd[i]);}\r\n\t  printf(\"%d\",ans);\r\n    printf(\"\\n\");\r\n    \r\n}\r\n\treturn 0;\r\n}\r\n \r\n"}
{"similarity_score": 0.9991575400168492, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d61091fac2af40ff8cbe41c6194f0826", "bug_code_uid": "618df7fd1c668ba7e013e805dc7d2eda", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "dcbf1e07f006890162b0472922c907a9", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint prime(int n)\n{\n    int i, j, k, x;\n    k = sqrt(n);\n    for(i = 2; i <= k; i++){\n        if(n % i == 0){\n            x = 1;\n            break;\n        }\n        else{\n            x = 0;\n        }\n    }\n    if(x == 0){\n        return 0;\n    }\n    else{\n        return 1;\n    }\n\n}\nint main()\n{\n    int i, j, k, a, b, c, x;\n    scanf(\"%d\", &a);\n    x = a / 2;\n    for(i = 4; i < x; ){\n        b = a - i;\n        if(1 == prime(b)){\n            break;\n        }\n        else{\n            i = i + 2;\n        }\n    }\n    printf(\"%d %d\", i, b);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint prime(int n)\n{\n    int i, j, k, x;\n    k = sqrt(n);\n    for(i = 2; i <= k; i++){\n        if(n % i == 0){\n            x = 1;\n            break;\n        }\n        else{\n            x = 0;\n        }\n    }\n    if(x == 0){\n        return 0;\n    }\n    else{\n        return 1;\n    }\n\n}\nint main()\n{\n    int i, j, k, a, b, c, x;\n    scanf(\"%d\", &a);\n    x = a / 2;\n    for(i = 4; i <= x; ){\n        b = a - i;\n        if(1 == prime(b)){\n            break;\n        }\n        else{\n            i = i + 2;\n        }\n    }\n    printf(\"%d %d\", i, b);\n\n    return 0;\n}\n"}
{"similarity_score": 0.4389626818469323, "equal_cnt": 20, "replace_cnt": 12, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "1ab3f96f0fa16b4a4462d3360c5808bd", "bug_code_uid": "d1cf62c685f24d3941af61e766568785", "src_uid": "7af4eee2e9f60283c4d99200769c77ec", "apr_id": "1805f2c5b0adf2fe2dc0edf33756ed32", "difficulty": 800, "tags": ["math", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int n[100],t,i,j,a=0,b=0,ok=0,k,l,w[10][10];\r\n    scanf(\"%d\",&t);\r\n    for (i=0;i<t;i++)\r\n      {\r\n            scanf(\"%d\",&n[i]);\r\n        for (j=0;j<n[i];j++)\r\n        {\r\n                scanf(\"%d\",&w[i][j]);\r\n        }\r\n    }\r\n    for (i=0;i<t;i++)\r\n    {\r\n        a=0;\r\n        b=0;\r\n        for (j=0;j<n[i];j++)\r\n        {\r\n            ok=w[i][j];\r\n            for (k=0,l=k+1;k<n[i]-1,l<n[i];k++,l++)\r\n            {\r\n              if (abs(w[i][k]-ok)+abs(ok-w[i][l])==abs(w[i][k]-w[i][l]))\r\n              {\r\n                  a=k;\r\n                  b=l;\r\n                  break;\r\n              }\r\n            }\r\n        }\r\n        printf(\"%d %d\\n\",a+1,b+1);\r\n    }\r\n\r\n   return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\nint main()\r\n{\r\n    int i,j,n[100000],d[100000],first[100000],second[100000],t;\r\n    scanf(\"%d\",&t);\r\n    for (i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n[i]);\r\n        for (j=0;j<n[i];j++)\r\n        {\r\n            scanf(\"%d\",&d[j]);\r\n        }\r\n\r\n           int max=-1,min=1e9+1;\r\n        for (j=0;j<n[i];j++)\r\n        {\r\n            if (d[j]>max)\r\n            {\r\n                first[i]=j+1;\r\n                max=d[j];\r\n            }\r\n            if (d[j]<min)\r\n            {\r\n                second[i]=j+1;\r\n                min=d[j];\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i=0;i<t;i++)\r\n    {\r\n        printf(\"%d %d\\n\",second[i],first[i]);\r\n    }\r\n   return 0;\r\n}\r\n                                      "}
{"similarity_score": 0.8749063670411985, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "fcc68ff173f0088f1c208f27a0a8d7c5", "bug_code_uid": "c0c884a3f045a5c7ec25594bf7c72816", "src_uid": "2669feb8200769869c4b2c29012059ed", "apr_id": "632b705aeb743fffd62a8e36bcc7ded8", "difficulty": 1600, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar x[4][107];\nint n,k;\nvoid run(){\n\tint i,j;\n\twhile(scanf(\"%d%d\",&n,&k)!=EOF){\n\t\tfor(i=0;i<4;i++){\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tx[i][j]='.';\n\t\t\t}\n\t\t}\n\t\tif(k%2==0){\n\t\t\tfor(i=0;i<k/2;i++){\n\t\t\t\tx[1][i+1]='#';\n\t\t\t\tx[2][i+1]='#';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(k<=3){\n\t\t\t\tfor(i=0;i<k;i++){\n\t\t\t\t\tx[1][i+1]='#';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(i=0;i<(k+1)/2;i++){\n\t\t\t\t\tx[1][i+1]='#';\n\t\t\t\t}\n\t\t\t\tx[2][(k+1)/2]='#';\n\t\t\t\tfor(i=0;i<(k+1)/2-2;i++){\n\t\t\t\t\tx[2][i+1]='#';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"YES\\n\");\n\t\tfor(i=0;i<4;i++){\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tprintf(\"%c\",x[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}\nmain(){\n\trun();\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nchar x[4][107];\nint n,k;\nvoid run(){\n\tint i,j;\n\twhile(scanf(\"%d%d\",&n,&k)!=EOF){\n\t\tfor(i=0;i<4;i++){\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tx[i][j]='.';\n\t\t\t}\n\t\t}\n\t\tif(k%2==0){\n\t\t\tfor(i=0;i<k/2;i++){\n\t\t\t\tx[1][i+1]='#';\n\t\t\t\tx[2][i+1]='#';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(k==1){\n\t\t\t\tx[1][(n-2+1)/2]='#';\n\t\t\t}\n\t\t\telse if(k==3){\n\t\t\t\tx[1][(n-2+1)/2-1]='#';\n\t\t\t\tx[1][(n-2+1)/2]='#';\n\t\t\t\tx[1][(n-2+1)/2+1]='#';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(i=0;i<(k+1)/2;i++){\n\t\t\t\t\tx[1][i+1]='#';\n\t\t\t\t}\n\t\t\t\tx[2][(k+1)/2]='#';\n\t\t\t\tfor(i=0;i<(k+1)/2-2;i++){\n\t\t\t\t\tx[2][i+1]='#';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"YES\\n\");\n\t\tfor(i=0;i<4;i++){\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tprintf(\"%c\",x[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}\nmain(){\n\trun();\n\treturn 0;\n}\n"}
{"similarity_score": 0.0725925925925926, "equal_cnt": 8, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "cedbd400b6935e1c22d52f1491bd47ad", "bug_code_uid": "7e85fe23a49a9fb3ae7adf7938918adc", "src_uid": "88743b7acb4a95dc0d5bb2e073714c49", "apr_id": "f3cb5d8c6a08f8eb42d21bf38e27119f", "difficulty": 1600, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdbool.h>\nchar a[6000],b[6000];\nint i,j;\nint compareStrings(const char *s1, const char *s2) {\n    size_t i;\n\n    for (i = 0; s1[i] == s2[i]; i++) {\n        if (s1[i] == '\\0')\n            return 0;\n    }\n    if ((unsigned char)s1[i] < (unsigned char)s2[i])\n        return -1;\n    else\n        return 1;\n}\nint swap(char c,char d)\n{\n\tchar u;\n\tu=d;\n\ta[j]=c;\n\ta[i]=u;\n}\nint main()\n{\n\tint t,s;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\ts=0;\n\t\tscanf(\"%s\",a);\n\t\tscanf(\"%s\",b);\n\t\tif(strcmp(a,b)==-1)\n\t\t\tprintf(\"%s\\n\",a);\n\t\telse\n\t\t{\n\t\t\tfor(i=0;i<strlen(a);i++)\n\t\t\t{\n\t\t\t\tfor(j=i;j<strlen(a);j++)\n\t\t\t\t{\n\t\t\t\t\tif(s==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tswap(a[i],a[j]);\n\t\t\t\t\t\tif(strcmp(a,b)==-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ts=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswap(a[i],a[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(s==1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(s==1)\n\t\t\t\tprintf(\"%s\\n\",a);\n\t\t\telse\n\t\t\t\tprintf(\"---\\n\");\n\t\t}\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[50003],b[50003];\nint swap(int i,int j)\n{\n\tchar c;\n\tc=a[i];\n\ta[i]=a[j];\n\ta[j]=c;\n}\nint main()\n{\n\tint t,i,j,k;\n\tchar c;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%s%s\",a,b);\n\t\tfor(i=0;i<strlen(a);i++)\n\t\t{\n\t\t\tc=a[i],k=i;\n\t\t\tfor(j=strlen(a)-1;j>i;j--)\n\t\t\t{\n\t\t\t\tif(c>a[j])\n\t\t\t\t{\n\t\t\t\t\tc=a[j],k=j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k!=i)\n\t\t\t{\n\t\t\t\tswap(i,k);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(strcmp(a,b)<0)\n\t\t\tprintf(\"%s\\n\",a);\n\t\telse\n\t\t\tprintf(\"---\\n\");\n\t}\n}\n"}
{"similarity_score": 0.6716791979949874, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "50228f7958d1495aa585ddf231d71acc", "bug_code_uid": "deae45dc68aafd0a6abf7146fa31f2cb", "src_uid": "e1de1e92fac8a6db3222c0d3c26843d8", "apr_id": "881a7bc6d653ba51294b1d7fa448ba74", "difficulty": 1100, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int x1, y1, z1, x2, y2, z2;\n        scanf(\"%d %d %d\",&x1,&y1,&z1);\n        scanf(\"%d %d %d\",&x2,&y2,&z2);\n        int sum=0;\n        if(y2>z1){\n            sum+=2*z1;\n            y2=y2-z1;\n            z1=0;\n            if(z2>x1){\n                z2=z2-x1;\n                sum=sum-z2*2;\n            }\n        }\n        else{\n            sum+=2*y2;\n            y2=0;\n            z1=z1-y2;\n            if(z2>(z1+x1)){\n                z2=z2-(z1+x1);\n                sum=sum-z2*2;\n            }\n        }\n        printf(\"%d\\n\",sum);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n\nvoid main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int x1, y1, z1, x2 ,y2 ,z2;\n        scanf(\"%d %d %d\",&x1, &y1, &z1);\n        scanf(\"%d %d %d\",&x2, &y2, &z2);\n        int sum=0;\n        if(y2>z1){\n            sum+=2*z1;\n            y2-=z1;\n            z1=0;\n        }\n        else{\n            sum+=2*y2;\n            z1-=y2;\n            y2=0;\n        }\n        if(z2>(z1+x1)){\n            z2-=(z1+x1);\n            sum-=2*z2;\n        }\n        printf(\"%d\\n\",sum);\n    }\n    return 0;\n}"}
{"similarity_score": 0.5817901234567902, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "750ea9d766973ace89aaef132f55d0b2", "bug_code_uid": "e1a2cf2e270d04614de25fa7a76ac8da", "src_uid": "ce0579e9c5b4c157bc89103c76ddd4c3", "apr_id": "baa8f60387b87a49c67a268d2f6b965d", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n,H,M,i, min_h=24,min_m=60;\r\n        scanf(\"%d %d %d\", &n,&H,&M);\r\n        for(i=0;i<n;i++){\r\n                int h,m,ans, ans_s,ans_m,min=(24*60)+60;\r\n            scanf(\"%d %d\", &h,&m);\r\n\r\n            if(m<M){\r\n                m=m+60;\r\n                h--;\r\n            }\r\n            if(h<H) h+=24;\r\n            ans=(h-H)*60+m-M;\r\n\r\n            if(ans<=min){\r\n\r\n             min_h=h-H;\r\n            min_m=m-M;\r\n            }\r\n\r\n\r\n        }\r\n        printf(\"%d %d\\n\", min_h,min_m);\r\n\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n,H,M,i, min_h,min_m,min=(24*60)+60;\r\n        scanf(\"%d %d %d\", &n,&H,&M);\r\n        for(i=0;i<n;i++){\r\n                int h,m,ans, ans_s,ans_m;\r\n            scanf(\"%d %d\", &h,&m);\r\n\r\n            if(m<M){\r\n                m=m+60;\r\n                h--;\r\n            }\r\n            if(h<H) h+=24;\r\n            ans=(h-H)*60+(m-M);\r\n           // printf(\"%d *\\n\", ans);\r\n\r\n            if(ans<=min){\r\n                    min=ans;\r\n\r\n             min_h=h-H;\r\n            min_m=m-M;\r\n            }\r\n\r\n\r\n        }\r\n        printf(\"%d %d\\n\", min_h,min_m);\r\n\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.8540618260244428, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b7b6818ef300eae84a2a176d7b594e1e", "bug_code_uid": "6dcfe2c5dbaddf9d0f506d095d386628", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "eca542b057db08b0b5350d35245d678b", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,i;\n    scanf(\"%ld\",&n);\n    long long int a[n+1],x,j=0,total=0;\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&x);\n        total=total+x;\n        if(x%2!=0){\n            a[j]=x;\n            j++;\n        }\n    }\n   // printf(\"%lld\\n\",total);\n      //  printf(\"%d\\n\",j);\n    if(total%2==0){\n        printf(\"%lld\\n\",total);\n    }\n    else{\n        int p,q,temp;\n        for(int p=0;p<j;p++){\n            for(q=0;q<j-1-p;q++){\n                if(a[q]>a[q+1]){\n                    temp=a[q+1];\n                    a[q+1]=a[q];\n                    a[q]=temp;\n                }\n            }\n        }\n       // printf(\"%d\\n\",a[0]);\n        total=total-a[0];\n        printf(\"%lld\\n\",total);\n    }\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long int n,i;\n    scanf(\"%ld\",&n);\n    long long int a[n+1],x,j=0,total=0;\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&x);\n        total=total+x;\n        if(x%2!=0){\n            a[j]=x;\n            j++;\n        }\n    }\n   // printf(\"%lld\\n\",total);\n      //  printf(\"%d\\n\",j);\n    if(total%2==0){\n        printf(\"%lld\\n\",total);\n    }\n    else{\n        int p,q,temp;\n        int min=a[0];\n        for(p=0;p<j;p++){\n            if(a[p]<min){\n                min=a[p];\n            }\n        }\n       // printf(\"%d\\n\",a[0]);\n        total=total-min;\n        printf(\"%lld\\n\",total);\n    }\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8326029798422436, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "0a89c1a613e20adcae603915f5561ef0", "bug_code_uid": "d1daa4dd328a0790281373b6576f9e07", "src_uid": "016e00b2b960be792d4ec7fcfb7976e2", "apr_id": "19ca4f06ce0784767f201012b82f99f6", "difficulty": 1300, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main()\n{\n   int n;\n   scanf(\"%d\",&n);\n   int i,t[n][2];\n   int min1=pow(10,9),min2=pow(10,9),max1=-pow(10,9),max2=-pow(10,9);\n   for(i=0;i<n;i++){\n    scanf(\"%d%d\",&t[i][0],&t[i][1] );\n    if(min1>t[i][0] ){min1=t[i][0]; }\n    if(min2>t[i][1] ){min2=t[i][1]; }\n    if(max1<t[i][0] ){max1=t[i][0]; }\n    if(max2<t[i][1] ){max2=t[i][1]; }\n   }\nlong int b;\nif(abs(max1-min1)<abs(max2-min2)){\n    b=pow(abs(max2-min2),2);\n}\nelse{\n    b=pow(abs(max1-min1),2);\n}\nprintf(\"%ld\",b);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main()\n{\n   long int n;\n   scanf(\"%ld\",&n);\n  long int i,t[n][2];\n   long int min1=1000000000,min2=1000000000,max1=-1000000000,max2=-1000000000;\n   for(i=0;i<n;i++){\n    scanf(\"%ld%ld\",&t[i][0],&t[i][1] );\n    if(min1>t[i][0] ){min1=t[i][0]; }\n    if(min2>t[i][1] ){min2=t[i][1]; }\n    if(max1<t[i][0] ){max1=t[i][0]; }\n    if(max2<t[i][1] ){max2=t[i][1]; }\n   }\n unsigned long long  b;\nif(abs(max1-min1)<abs(max2-min2)){\n    b=pow(abs(max2-min2),2);\n}\nelse{\n    b=pow(abs(max1-min1),2);\n}\n\nprintf(\"%llu\",b);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9980119284294234, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1fb352c2ccc463e2a528bd1c75cc0577", "bug_code_uid": "5b70cec9f665a3ab8cbdaad9e4e155dc", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "aa803b774dbb5b5e8ae6ab050b147cb4", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int i,n,a[10000],b[10000],c1=0,c2=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n        if(i==10000 && c1==0 && c2==0) {\n            printf(\"Poor Alex\");\n            return 0;\n        }\n         if(a[i]>b[i]) {\n            c1++;\n        }\n        else if (a[i]<b[i]) {\n            c2++;\n        }\n        if(c1>0 && c2>0) {\n            break;\n        }\n    }\n   /* for(i=1;i<=n;i++) {\n        if(a[i]>b[i]) {\n            c1++;\n        }\n        else if (a[i]<b[i]) {\n            c2++;\n        }\n        if(c1>0 && c2>0) {\n            break;\n        }\n    }*/\n    if(c1>0 && c2>0) {\n        printf(\"Happy Alex\");\n    }\n    else {\n        printf(\"Poor Alex\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n    int i,n,a[100000],b[100000],c1=0,c2=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n        if(i==100000 && c1==0 && c2==0) {\n            printf(\"Poor Alex\");\n            return 0;\n        }\n         if(a[i]>b[i]) {\n            c1++;\n        }\n        else if (a[i]<b[i]) {\n            c2++;\n        }\n        if(c1>0 && c2>0) {\n            break;\n        }\n    }\n   /* for(i=1;i<=n;i++) {\n        if(a[i]>b[i]) {\n            c1++;\n        }\n        else if (a[i]<b[i]) {\n            c2++;\n        }\n        if(c1>0 && c2>0) {\n            break;\n        }\n    }*/\n    if(c1>0 && c2>0) {\n        printf(\"Happy Alex\");\n    }\n    else {\n        printf(\"Poor Alex\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.42163661581137307, "equal_cnt": 17, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "8c3a202ecfa98716fd30df3d9da47490", "bug_code_uid": "31ffbf0fae06629bde756dfe490bbe5a", "src_uid": "f33991da3b4a57dd6535af86edeeddc0", "apr_id": "c02a1528bbefbb5120d26f85dca9f748", "difficulty": 1500, "tags": ["dp", "number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    static int ar[1000009];\n    int n, i, j, k, ans = 0, div, current, maxAns = 0;\n\n    scanf(\"%d\", &n);\n\n    for (i = 1; i <= n; i++)\n    {\n        scanf(\"%d\", &ar[i]);\n    }\n\n    for (i = 1; i <= n; i++)\n    {\n        if (ar[i] == -1)\n        {\n            continue;\n        }\n\n        current = 1;\n        ans = 0;\n\n        for (j = i; j <= n; j++)\n        {\n            if (ar[j] == -1)\n            {\n                continue;\n            }\n\n            if (ar[j] % current == 0)\n            {\n                current = ar[j];\n                ar[j] = -1;\n                ans++;\n            }\n        }\n\n        if (ans > maxAns)\n        {\n            maxAns = ans;\n        }\n\n    }\n\n    printf(\"%d\", maxAns);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n\nint main()\n{\n    static int n, i, j, k, ans = 0, div[1000009] = {0}, a[1000009] , current;\n\n    scanf(\"%d\", &n);\n\n    for (i = 1; i <= n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n\n    for (i = 1; i <= n; i++)\n    {\n        div[ a[i] ] = 1;\n    }\n\n    for (i = 1; i <= n; i++)\n    {\n//        currrent = i;\n\n        for (j = 2 * a[i]; j <= a[n]; j+=a[i])\n        {\n            if (div[j] > 0  &&  div[j] <= div[ a[i] ])\n            {\n                div[j]++;\n            }\n        }\n    }\n\n    for (i = 1; i <= 1000001; i++)\n    {\n        if (div[i] > ans)\n        {\n            ans = div[i];\n        }\n    }\n\n\n\n    printf(\"%d\", ans);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8838174273858921, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "18f85ff1bc4b37251c800477bc39b2cd", "bug_code_uid": "abda5df73aaf58e6a5f59974acce7c2f", "src_uid": "bb3e3b51a4eda8fef503952a00777910", "apr_id": "7803288185aa083c9a594aec8caecb49", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n    {\n        int x,y,a,b,i,j,c=0;\n        scanf(\"%d %d %d %d\",&x,&y,&a,&b);\n        for(i=b;i<=y;i++)\n        {\n            for(j=a;j<=x;j++)\n            {\n                if(j>i)\n                    c++;\n            }\n        }\n        printf(\"%d\\n\",c);\n        for(i=b+1;i<=x;i++)\n        {\n            for(j=b;j<=y;j++)\n            {\n                if(j<i)\n                    printf(\"%d %d\\n\",i,j);\n            }\n        }\n        return 0;\n     }\n", "fixed": "#include<stdio.h>\nint main()\n    {\n        int x,y,a,b,i,j,c=0;\n        scanf(\"%d %d %d %d\",&x,&y,&a,&b);\n        for(i=b;i<=y;i++)\n        {\n            for(j=a;j<=x;j++)\n            {\n                if(j>i)\n                    c++;\n            }\n        }\n        printf(\"%d\\n\",c);\n        for(i=a;i<=x;i++)\n        {\n            for(j=b;j<=y;j++)\n            {\n                if(j<i)\n                    printf(\"%d %d\\n\",i,j);\n            }\n        }\n        return 0;\n     }\n"}
{"similarity_score": 0.9988738738738738, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b8f112e52ddc5f38f935b675402ab817", "bug_code_uid": "0401f742178521a28c187a3d0ceb3043", "src_uid": "65efbc0a1ad82436100eea7a2378d4c2", "apr_id": "0bde1667b42204daa6d71328ec252347", "difficulty": 1300, "tags": ["dsu", "meet-in-the-middle", "number theory", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m,i,j,t,b,g,bn[100],gn[100],big,flag;\n    scanf(\"%d %d\",&n,&m);\n    memset(bn,0,sizeof(bn));\n    memset(gn,0,sizeof(gn));\n    scanf(\"%d\",&b);\n    while(b--)\n    {\n        scanf(\"%d\",&t);\n        bn[t]=1;\n    }\n    scanf(\"%d\",&g);\n    while(g--)\n    {\n        scanf(\"%d\",&t);\n        gn[t]=1;\n    }\n    for(i=0;i<n*m;i++)\n    {\n        if(bn[i%n]==1||gn[i%m]==1)\n        {\n            bn[i%n]=gn[i%m]=1;\n        }\n    }\n    flag=1;\n    for(i=0;i<n;i++)\n    {\n        if(bn[i]==0)\n        {\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1)\n    {\n        for(i=0;i<m;i++)\n        {\n            if(gn[i]==0)\n            {\n                flag=0;\n                break;\n            }\n        }\n    }\n    if(flag)\n        printf(\"Yes\\n\");\n    else\n        printf(\"No\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m,i,j,t,b,g,bn[100],gn[100],big,flag;\n    scanf(\"%d %d\",&n,&m);\n    memset(bn,0,sizeof(bn));\n    memset(gn,0,sizeof(gn));\n    scanf(\"%d\",&b);\n    while(b--)\n    {\n        scanf(\"%d\",&t);\n        bn[t]=1;\n    }\n    scanf(\"%d\",&g);\n    while(g--)\n    {\n        scanf(\"%d\",&t);\n        gn[t]=1;\n    }\n    for(i=0;i<n*m*2;i++)\n    {\n        if(bn[i%n]==1||gn[i%m]==1)\n        {\n            bn[i%n]=gn[i%m]=1;\n        }\n    }\n    flag=1;\n    for(i=0;i<n;i++)\n    {\n        if(bn[i]==0)\n        {\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1)\n    {\n        for(i=0;i<m;i++)\n        {\n            if(gn[i]==0)\n            {\n                flag=0;\n                break;\n            }\n        }\n    }\n    if(flag)\n        printf(\"Yes\\n\");\n    else\n        printf(\"No\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.09992429977289932, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "e716e4881f9b09e2b9efd7a72f170d7a", "bug_code_uid": "b2dbc8560648778fece6dd87cab3f6f1", "src_uid": "fd63aeefba89bef7d16212a0d9e756cd", "apr_id": "7abc793130e9449e71fd2b081f8d3545", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nchar *a, *b;\nint lena, lenb;\nchar ans;\n\nvoid readInput()\n{\n    a = malloc(1000001*sizeof(char));\n    b = malloc(1000001*sizeof(char));\n    scanf(\"%s\\n%s\", a, b);\n}\n\nvoid solve()\n{\n    //Cut out leading zeroes\n\twhile(*a=='0') a++;\n\twhile(*b=='0') b++;\n\n    lena = strlen(a);\n    lenb = strlen(b);\n\n    if(lena > lenb) ans = '>';\n    else if(lena < lenb) ans = '<';\n    else\n    {\n        int i;\n        ans = '=';\n        for(i=0; i<lena; i++)\n        {\n            if(a[i] > b[i])ans = '>';\n            else if(a[i] < b[i]) ans = '<';\n        }\n\n    }\n}\n\nvoid output()\n{\n    printf(\"%c\", ans);\n}\n\nint main()\n{\n    readInput();\n    solve();\n    output();\n    return 0;\n}\n\n// 1471541105509", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar a[1000001];\n\tchar b[1000001];\n\tint i, j, n, m;\n\n\tscanf(\"%s\", a);\n\tscanf(\"%s\", b);\n\n\tn = strlen(a);\n\tm = strlen(b);\n\n\ti = j = 0;\n\n\twhile (i < n && a[i] == '0')\n\t\ti++;\n\twhile (j < m && b[j] == '0')\n\t\tj++;\n\n\tif (n - i > m - j)\n\t\tprintf(\">\\n\");\n\telse if (n - i < m - j)\n\t\tprintf(\"<\\n\");\n\telse\n\t{\n\t\tfor (; i < n; i++, j++)\n\t\t{\n\t\t\tif (a[i] > b[j])\n\t\t\t{\n\t\t\t\tprintf(\">\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (a[i] < b[j])\n\t\t\t{\n\t\t\t\tprintf(\"<\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (i == n)\n\t\t\tprintf(\"=\\n\");\n\t}\n\n\treturn 0;\n}\n\n// 1471541382873"}
{"similarity_score": 0.9917081260364843, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "63bba1402f8335e3ea302f01ba299162", "bug_code_uid": "2d2080c57a9ad6740d0f966ff823f73d", "src_uid": "648ec67565c506c3e2ffd007ad44e8c3", "apr_id": "a84199ea1475f975f6e9dbde1ab743c2", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile (t>0){\n\t\tint d;\n\t\tscanf(\"%d\",&d);\n\t\tint n1,n2;\n\t\tfor (int i=d+1;;i++){\n\t\t\tint f = 0;\n\t\t\tfor (int j=2;j*(long)j<=i;j++){\n\t\t\t\tif (i%j==0){\n\t\t\t\t\tf = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f==0){\n\t\t\t\tn1=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i = n1+d;;i++){\n\t\t\tint f = 0;\n\t\t\tfor (int j=2;j*(long)j<=i;j++){\n\t\t\t\tif (i%j==0){\n\t\t\t\t\tf =1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f==0){\n\t\t\t\tn2=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tlong long int a1 = n2*(long)n1;\n\t\tlong long int a2 = n1*(long)n1*n1;\n\t\tif (a1<a2) printf(\"%lld\\n\",a1 );\n\t\telse printf(\"%lld\\n\", a2);\n\t\t--t;\n\t}\n}", "fixed": "#include <stdio.h>\n\nvoid main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile (t>0){\n\t\tint d;\n\t\tscanf(\"%d\",&d);\n\t\tint n1,n2;\n\t\tfor (int i=d+1;;i++){\n\t\t\tint f = 0;\n\t\t\tfor (int j=2;j*(long)j<=i;j++){\n\t\t\t\tif (i%j==0){\n\t\t\t\t\tf = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f==0){\n\t\t\t\tn1=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i = n1+d;;i++){\n\t\t\tint f = 0;\n\t\t\tfor (int j=2;j*(long)j<=i;j++){\n\t\t\t\tif (i%j==0){\n\t\t\t\t\tf =1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f==0){\n\t\t\t\tn2=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tlong long int a1 = n2*(long long)n1;\n\t\tlong long int a2 = n1*(long long)n1*n1;\n\t\tif (a1<a2) printf(\"%lld\\n\",a1 );\n\t\telse printf(\"%lld\\n\", a2);\n\t\t--t;\n\t}\n}"}
{"similarity_score": 0.8385682980277575, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "85e4d2ce6f7f301793023aa989e96a40", "bug_code_uid": "cc70d454f15a441a538185c74e4f858e", "src_uid": "3ef23f114be223255bd10131b2375b86", "apr_id": "6c39e67465627d3338aed09a5407dbcd", "difficulty": 800, "tags": ["greedy", "games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int n;\n int t1,t2;\n scanf(\"%d\",&n);\n  int a,b,c;\n int arr[n];\nfor(int j=0;j<n;j++)\n{\n   scanf(\"%d %d %d\",&a,&b,&c);\n   int x[b];\n   int y[c];\n   for(int i=0;i<b;i++)\n   {\n    scanf(\"%d\",&x[i]);\n   }\n   for(int i=0;i<b;i++)\n   {\n     scanf(\"%d\",&y[i]);\n   }\n   t1=x[0];\n   t2=y[0];\n   for(int i=0;i<b;i++)\n   {\n     if(x[i]>t1)\n     {\n       t1=x[i];\n     }\n   }\n   for(int i=0;i<c;i++)\n   {\n      if(y[i]>t2)\n     {\n       t2=y[i];\n     }\n   }\n   if(t1>t2)\n   {\n    printf(\"YES\\n\");\n   }\n   else\n   {\n     printf(\"NO\\n\");\n   }\n}\n\n}\n/*\nCopy\n\n3\n2 1 1\n2\n1\n5 2 3\n2 3\n1 4 5\n6 3 3\n1 1 1\n1 1 1\n*/\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int n;\n  int t1,t2;\n  int a,b,c;\n  scanf(\"%d\",&n);\n  int arr[n];\n  for(int j=0;j<n;j++)\n  {\n   scanf(\"%d %d %d\",&a,&b,&c);\n   int x[b];\n   int y[c];\n   for(int i=0;i<b;i++)\n   {\n    scanf(\"%d\",&x[i]);\n   }\n   for(int i=0;i<c;i++)\n   {\n     scanf(\"%d\",&y[i]);\n   }\n   t1=x[0];\n   t2=y[0];\n   for(int i=0;i<b;i++)\n   {\n     if(x[i]>t1)\n     {\n       t1=x[i];\n     }\n   }\n   for(int i=0;i<c;i++)\n   {\n      if(y[i]>t2)\n     {\n       t2=y[i];\n     }\n   }\n   if(t1>t2)\n   {\n    arr[j]=1;\n   }\n   else\n   {\n     arr[j]=0;\n   }\n\n   }\n   for(int i=0;i<n;i++)\n   {\n    if(arr[i]==1)\n    {\n     printf(\"YES\\n\");\n    }\n    else\n    {\n    printf(\"NO\\n\");\n    }\n   }\n}\n/*\nCopy\n\n3\n2 1 1\n2\n1\n5 2 3\n2 3\n1 4 5\n6 3 3\n1 1 1\n1 1 1\n*/\n"}
{"similarity_score": 0.2901960784313726, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "1179027f490110ed13c39872c765a3fe", "bug_code_uid": "b2c38e38c766f5a93efbbe6bde241a40", "src_uid": "e46c6406d19e8679fd282d72882ae78d", "apr_id": "97cc4b32807ab87c8b383f75e4d4fff3", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint ipow(int n, int e) {\n    int pow = 1;\n    while (e--) {\n        pow *= n;\n    }\n    \n    return pow;\n}\n\nint c2i(char c) {\n    return c - '0';\n}\n\nint getDec(char *bin) {\n    int len = strlen(bin);\n    int p = ipow(2, len - 1);\n    int dec = 0;\n    \n    while (*bin) {\n        dec += c2i(*bin) * p;\n        bin++;\n        p /= 2;\n    }\n    \n    return dec;\n}\n\nint main(void) {\n    int cnt = 0, dec = 0;\n    char bin[100] = {0, };\n    \n    scanf(\"%s\", bin);\n    dec = getDec(bin);\n\n    while (dec != 1) {\n        if (dec % 2 == 0) {\n            dec /= 2;\n        } else {\n            dec++;\n        }\n        cnt++;\n    }\n    \n    printf(\"%d\\n\", cnt);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n    int cnt = 0, len = 0;\n    char num[1200000] = {0, }, *p = num;\n    \n    scanf(\"%s\", num);\n    len = strlen(num);\n    p = num + len - 1;\n    \n    while (p > num) {\n        if (*p == '1') {\n            while (*p == '1') {\n                p--;\n                cnt++;\n            }\n            \n            *p = '1';\n            cnt++;\n        } else {\n            while (*p == '0') {\n                p--;\n                cnt++;\n            }\n        }\n    }\n    \n    printf(\"%d\\n\", cnt);\n\n    return 0;\n}"}
{"similarity_score": 0.9328767123287671, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 6, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "7eac3a909c098240e8a84dc20d4502ef", "bug_code_uid": "932e3906f78528d61312ae96dbb6b743", "src_uid": "7965b6ce237b02617b55dc175ffa0451", "apr_id": "0d2e34441b7e52ca1beabde7c07e1666", "difficulty": 800, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(void)\r\n{\r\n    int n,m,x,i,sec,max;\r\n    int a[100001];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        max=0;\r\n        memset(a,0,sizeof(a));\r\n        scanf(\"%d\",&m);\r\n        for(i=0;i<m;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]>max)\r\n            {\r\n                sec=max;\r\n                max=a[i];\r\n                x=i;\r\n            }\r\n            else\r\n            {\r\n                if(a[i]>sec)\r\n                    sec=a[i];\r\n            }\r\n        }\r\n        for(i=0;i<x;i++)\r\n        {\r\n            printf(\"%d \",a[i]-max);\r\n        }\r\n        printf(\"%d \",max-sec);\r\n        for(i=x+1;i<m;i++)\r\n        {\r\n            printf(\"%d \",a[i]-max);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(void)\r\n{\r\n    int n,m,x,i,sec,max;\r\n    int a[200001];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        max=0;\r\n        scanf(\"%d\",&m);\r\n        for(i=0;i<m;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]>max)\r\n            {\r\n                sec=max;\r\n                max=a[i];\r\n                x=i;\r\n            }\r\n            else\r\n            {\r\n                if(a[i]>sec)\r\n                    sec=a[i];\r\n            }\r\n        }\r\n        for(i=0;i<x;i++)\r\n            printf(\"%d \",a[i]-max);\r\n        printf(\"%d \",max-sec);\r\n        for(i=x+1;i<m;i++)\r\n            printf(\"%d \",a[i]-max);\r\n        printf(\"\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9742857142857143, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7b4ad5e52b088b2fd040ced02fb0e3a6", "bug_code_uid": "618b95e598b4410d7031140d704571df", "src_uid": "8fcec28fb4d165eb58f829c03e6b31d1", "apr_id": "ba11e882caa5b615e39e47533e7974f5", "difficulty": 1500, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n   __int64 l,r,k,cnt=1;\n    scanf(\"%I64d%I64d%I64d\", &l, &r, &k);\n    bool flag=false;\n    while(cnt<=r)\n\t{\n        if(cnt>=l)\n\t\t{\n           printf(\"%I64d \", cnt);\n            flag=1;\n        }\n        if(r/k<cnt)\n            break;\n        cnt*=k;\n\n    }\n    if(flag==0)\n        printf(\"-1\");\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n   __int64 l,r,k,cnt=1;\n    scanf(\"%I64d%I64d%I64d\", &l, &r, &k);\n    int flag=1;\n    while(cnt<=r)\n\t{\n        if(cnt>=l)\n\t\t{\n           printf(\"%I64d \", cnt);\n            flag=0;\n        }\n        if(r/k<cnt)\n            break;\n        cnt*=k;\n\n    }\n    if(flag)\n        printf(\"-1\");\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9413823272090989, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "28dd2c00a81800a5aabc042478f96a6b", "bug_code_uid": "da94cb9ffdcfe159140a658cac4a6cf5", "src_uid": "127d7f23a0ac8fcecccd687565d6f35a", "apr_id": "099bc48c308e4ea1aadea317d79701ea", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid solve () {\n    int n; scanf(\"%d\", &n);\n    char s[n]; scanf(\"%s\", s);\n\n    for (int i = 0; i < n; i++) {\n    \n        int a, b; a = b = 0;\n        for (int j = 0; j < n; j++) {\n            if (s[j] == 'a') a++;\n            else b++;\n\n            if (a > 0 && b > 0 && a == b) {\n                printf(\"%d %d\\n\", i + 1, j + 1);\n                return ;\n            }\n        }\n    }\n\n    puts(\"-1 -1\");\n}\n\nint main (int argc, char *argv[]) {\n    int t; scanf(\"%d\", &t);\n\n    while (t--) {solve(); /*puts(\"\");*/ }\n}\n", "fixed": "#include <stdio.h>\n\nvoid solve () {\n    int n; scanf(\"%d\", &n);\n    char s[n]; scanf(\"%s\", s);\n\n    if (n == 1) {\n        puts(\"-1 -1\");\n        return ;\n    }\n\n    for (int i = 0; i < n; i++) {\n    \n        int a, b; a = b = 0;\n        for (int j = i; j < n; j++) {\n            if (s[j] == 'a') a++;\n            else b++;\n\n            if (a > 0 && b > 0 && a == b) {\n                printf(\"%d %d\\n\", i + 1, j + 1);\n                return ;\n            }\n        }\n    }\n\n    puts(\"-1 -1\");\n}\n\nint main (int argc, char *argv[]) {\n    int t; scanf(\"%d\", &t);\n\n    while (t--) {solve(); /*puts(\"\");*/ }\n}\n"}
{"similarity_score": 0.7223650385604113, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "32b62ecdef5c3a608478a725ee25de29", "bug_code_uid": "464575840686d1d3b4371a47407de821", "src_uid": "8bbec86e427e26158393bbfbf1a067fe", "apr_id": "32b8c6f47af3f8e1f2c005611ee0f352", "difficulty": 1100, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n\nint main()\n{\n    long long int t,a,b,i;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld\",&a,&b);\n\n        if(a*b)\n            printf(\"%lld\\n\",(a+b)/3);\n        else\n            printf(\"0\\n\");\n\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\n\nint main()\n{\n    long long int t,a,b,i,min;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld\",&a,&b);\n\n        if(a<=(b/2) || b<=(a/2))\n        {\n            if(a<b)\n                min= a;\n            else\n                min= b;\n\n            printf(\"%lld\\n\",min);\n            continue;\n        }\n        if(a*b)\n            printf(\"%lld\\n\",(a+b)/3);\n        else\n            printf(\"0\\n\");\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9702564102564103, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9b68881ca0ef999b3c776ec0ef6ddebd", "bug_code_uid": "71c4838990acea676c1e51d4113cdf29", "src_uid": "e65b2a81689bb13b90a02a9ccf1d4125", "apr_id": "e009280ed1877aed270ccf2b105edde5", "difficulty": 1100, "tags": ["binary search", "ternary search", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <assert.h>\n#include <limits.h>\n#include <math.h>\n#include <stdbool.h>\n#include <stddef.h>\n#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    long long n,m,i,j,test,ii;\n    double f;\n\n    scanf(\"%lld\",&test);\n   \n    for(i=0;i<test;i++)\n    {\n        scanf(\"%lld %lld\",&n,&m);\n        if(m<=n)\n        {\n            printf(\"YES\\n\");\n            continue;\n        }\n\n        else \n        {\n            for(j=n-1;j>=1;j--)\n            {\n                f=(1.0*m/(n-j+1));\n                ii=(m/(n-j+1));\n\n                if(f-ii>0)  ii++;\n\n                if(ii<=j)    \n               {\n                    printf(\"YES\\n\");\n                    break;\n               }\n               \n               else  \n               {\n                    printf(\"NO\\n\");\n                    break;\n               }\n                \n            }\n             if(n==1)    printf(\"NO\\n\");\n        }\n    }\n}\n", "fixed": "#include <assert.h>\n#include <limits.h>\n#include <math.h>\n#include <stdbool.h>\n#include <stddef.h>\n#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    long long n,m,i,j,test,ii;\n    double f;\n\n    scanf(\"%lld\",&test);\n   \n    for(i=0;i<test;i++)\n    {\n        scanf(\"%lld %lld\",&n,&m);\n        if(m<=n)\n        {\n            printf(\"YES\\n\");\n            continue;\n        }\n\n        else \n        {\n            for(j=n-1;j>=1;j--)\n            {\n                f=(1.0*m/(n-j+1));\n                ii=(m/(n-j+1));\n\n                if(f-ii>0)  ii++;\n                 \n                if(ii<=j)    \n               {\n                    printf(\"YES\\n\");\n                    break;\n               }\n\n               else if(j>1)   continue;\n               \n               else  \n               {\n                    printf(\"NO\\n\");\n                    break;\n               }\n                \n            }\n             if(n==1)    printf(\"NO\\n\");\n        }\n    }\n}\n"}
{"similarity_score": 0.9953488372093023, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "52580f158b060e7039e918b5e8bd7f91", "bug_code_uid": "511bda62ed29a0330e33b7dfc1a16c61", "src_uid": "ee773d908fc297cc692aaecf6af299c9", "apr_id": "91e328d2255966a622d22b4a336268e3", "difficulty": 1500, "tags": ["data structures", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t-->0)\r\n    {\r\n            int lm=1000000000,rm=0,l,r,c,n,lv=1000000000,rv=1000000000,ns=0,nv=0;\r\n        scanf(\"%d\",&n);\r\n\r\n        while(n-->0)\r\n        {\r\n\r\n            scanf(\"%d%d%d\",&l,&r,&c);\r\n            if(l<lm)\r\n            {\r\n                lm=l;\r\n                lv=c;\r\n            }\r\n            else if(l==lm&&c<=lv)\r\n                lv=c;\r\n\r\n            if(r>rm)\r\n            {\r\n                rm=r;\r\n                rv=c;\r\n            }\r\n            else if(r==rm&&c<=rv)\r\n            {\r\n                rv=c;\r\n            }\r\n            if(r-l>ns)\r\n            {\r\n                ns=r-l;\r\n                nv=c;\r\n            }\r\n            else if(r-l==ns&&c<=nv)\r\n            {\r\n                nv=c;\r\n            }\r\n            if(lm+ns<rm||lv+rv<nv)\r\n            printf(\"%d\\n\",lv+rv);\r\n            else\r\n                printf(\"%d\\n\",nv);\r\n\r\n        }\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t-->0)\r\n    {\r\n            int lm=1000000000,rm=0,l,r,c,n,lv=1000000000,rv=1000000000,ns=0,nv=1000000000;\r\n        scanf(\"%d\",&n);\r\n\r\n        while(n-->0)\r\n        {\r\n\r\n            scanf(\"%d%d%d\",&l,&r,&c);\r\n            if(l<lm)\r\n            {\r\n                lm=l;\r\n                lv=c;\r\n            }\r\n            else if(l==lm&&c<=lv)\r\n                lv=c;\r\n\r\n            if(r>rm)\r\n            {\r\n                rm=r;\r\n                rv=c;\r\n            }\r\n            else if(r==rm&&c<=rv)\r\n            {\r\n                rv=c;\r\n            }\r\n            if(r-l>ns)\r\n            {\r\n                ns=r-l;\r\n                nv=c;\r\n            }\r\n            else if(r-l==ns&&c<=nv)\r\n            {\r\n                nv=c;\r\n            }\r\n            if(lm+ns<rm||lv+rv<nv)\r\n            printf(\"%d\\n\",lv+rv);\r\n            else\r\n                printf(\"%d\\n\",nv);\r\n\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.6692759295499021, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f1e181d899eb59a225ecf8b96a62147a", "bug_code_uid": "38110becc8f020be3b5f5bbe0a4c934e", "src_uid": "b978ca6fdef4a02cc027485294caa0f5", "apr_id": "e0a779e338630b1fd12f5f7073957839", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n#define MAX 30000\n\nint cmp(const void *a, const void *b){\n  return *(int *)a - *(int *)b;\n}\n\nint main(){\n  int t;\n  scanf(\"%d\", &t);\n\n  while(t--){\n    int n;\n    scanf(\"%d\", &n);\n\n    int a[n], num;\n    size_t i;\n    int ans = 0;\n\n    for(i = 0; i < n; i++){\n      scanf(\"%d\", &num);\n\n      int flag = 0;\n      for(int j = 0; j < ans; j++)\n\tif(a[j] == num){flag = 1; break;}\n\n      if(!flag) a[ans++] = num;\n    }\n      \n    printf(\"%d\\n\", ans);\n  }\n\n\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n#define MAX 30000\n\nint cmp(const void *a, const void *b){\n  return *(int *)a - *(int *)b;\n}\n\nint main(){\n  int t;\n  scanf(\"%d\", &t);\n\n  while(t--){\n    int n;\n    scanf(\"%d\", &n);\n\n    int a[n], num;\n    size_t i;\n    int ans = 0;\n\n    for(i = 0; i < n; i++){\n      scanf(\"%d\", a+i);\n    }\n\n    qsort(a, n, sizeof(int), cmp);\n\n    num = a[0];\n    ans = 1;\n\n    for(i = 1; i < n; i++)\n      if(a[i]!= num) {ans++; num = a[i];}\n\n      \n    printf(\"%d\\n\", ans);\n  }\n\n\n  return 0;\n}\n"}
{"similarity_score": 0.17408906882591094, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "86f15c44ebf4d9cf98fa301842b0baeb", "bug_code_uid": "27db10d01b6805e6467e84808d94a1df", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "3e45c4e10a8296bbe12621ce07d4b312", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,m=0,j=0;\n        scanf(\"%d\",&n);\n        while(j!=n)\n        {\n        if(n%3==0)\n        {\n            m=n/3;\n            j=n;\n        }\n        else if(n%2==0)\n        {\n         m=n/2;\n         j=n;\n        }\n        else \n        { \n            if(n%3==1)\n            {\n            m=(n-1)/3;\n            m=m+2;   \n            }\n            else if(n%3==2)\n            {\n            m=(n-2)/3;\n            m=m+1;\n            }\n            else if(n%2==1)\n            {\n            m=(n-1)/2;\n            m=m+2;\n            }\n        }\n        \n        }\n        printf(\"%d\\n\",m);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\r\n\r\n\r\nint main(){\r\n    int t,n,i;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(i=1;i<=t;i++){\r\n        scanf(\"%d\",&n);\r\n\r\n        if(n==0){\r\n            printf(\"0\\n\");\r\n        }\r\n        else if(n==2 || n==-2){\r\n            printf(\"1\\n\");\r\n        }\r\n        else if(n==1 || n==-1){\r\n            printf(\"2\\n\");\r\n        }\r\n        else if(n>0 && n!=2 && n!=1){\r\n            if(n%3==0){\r\n                printf(\"%d\\n\",(n/3));\r\n            }\r\n            else{\r\n                printf(\"%d\\n\",(n/3)+1);\r\n            }\r\n        }\r\n        else if(n<0 && n!=-2 && n!=-1){\r\n            if((-n)%3==0){\r\n                printf(\"%d\\n\",((-n)/3));\r\n            }\r\n            else{\r\n                printf(\"%d\\n\",((-n)/3)+1);\r\n            }\r\n        }\r\n        }\r\n\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9930875576036866, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "942b6fcae494154971fc459fd04bd784", "bug_code_uid": "7063518d1f64fcf20d0f46f8cee6182e", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "62d01036b6f8fd4b2c4234c1633547cf", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n\n\n\n\n\nint main()\n{\n    int n,t;\n    scanf(\"%d %d\",&n,&t);\n    int a[n-1],i,flag;\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        if(a[i]+i+1==t)\n        {\n            flag=1;\n            break;\n        }\n        else flag=0;\n    }\n\n    if(flag) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n\n\n\n\n\nint main()\n{\n    int n,t;\n    scanf(\"%d %d\",&n,&t);\n    int a[n-1],i,flag;\n    for(i=0;i<n-1;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i+=a[i])\n    {\n        if(a[i]+i+1==t)\n        {\n            flag=1;\n            break;\n        }\n        else flag=0;\n    }\n\n    if(flag) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9970414201183432, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a317b64aabcf2fb123a860245cb8beb7", "bug_code_uid": "8f8b877fa59e66f3ee0ea53234901915", "src_uid": "d549f70d028a884f0313743c09c685f1", "apr_id": "fafbe7ef1563700faf654e57b5352b31", "difficulty": 1300, "tags": ["binary search", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <conio.h>\nint main(void)\n{\n\t  long\tint matrix[501][501];\n     int prost[101010];\n     int x,k,strok,stolb,n,m,i=2,j,per;\n\n\twhile (i<50500)\n   {\n   \tfor (j=2*i;j<101000;j+=i)\n      \tprost[j]=1;\n      i++;\n      while (prost[i]==1)\n      \ti++;\n   }\nprost[1]=1;\nprost[0]=1;\n\n\n\n\n   scanf(\"%d %d\",&m,&n);\n\n   for (i=1;i<=m;i++)\n      {\n   \tfor (j=1;j<=n;j++)\n      \t{\n\t\t\t\tscanf(\"%ld\",&matrix[i][j]);\n            k=matrix[i][j];\n            x=0;\n            while (prost[k]==1)\n            {\n            \tk++;\n               x++;\n            }\n            matrix[i][j]=x;\n         }\n      }\nstrok=1000000;\n\tfor (i=1;i<=m;i++)\n   {\n   \tper=0;\n   \tfor (j=1;j<=n;j++)\n      \tper+=matrix[i][j];\n      if (per<strok)\n      \tstrok=per;\n   }\n\nstolb=1000000;\n\tfor (i=1;i<=m;i++)\n   {\n   \tper=0;\n   \tfor (j=1;j<=n;j++)\n      \tper+=matrix[j][i];\n      if (per<stolb)\n      \tstolb=per;\n   }\n\n   if (strok<stolb)\n   \tprintf(\"%d\",strok);\n   else\n   \tprintf(\"%d\",stolb);\n\n   return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <conio.h>\nint main(void)\n{\n\t  long\tint matrix[501][501];\n     int prost[101010];\n     int x,k,strok,stolb,n,m,i=2,j,per;\n\n\n\twhile (i<50500)\n   {\n   \tfor (j=2*i;j<101000;j+=i)\n      \tprost[j]=1;\n      i++;\n      while (prost[i]==1)\n      \ti++;\n   }\nprost[1]=1;\nprost[0]=1;\n\n\n\n\n   scanf(\"%d %d\",&m,&n);\n\n   for (i=1;i<=m;i++)\n      {\n   \tfor (j=1;j<=n;j++)\n      \t{\n\t\t\t\tscanf(\"%ld\",&matrix[i][j]);\n            k=matrix[i][j];\n            x=0;\n            while (prost[k]==1)\n            {\n            \tk++;\n               x++;\n            }\n            matrix[i][j]=x;\n         }\n      }\nstrok=1000000;\n\tfor (i=1;i<=m;i++)\n   {\n   \tper=0;\n   \tfor (j=1;j<=n;j++)\n      \tper+=matrix[i][j];\n      if (per<strok)\n      \tstrok=per;\n   }\n\nstolb=1000000;\n\tfor (i=1;i<=n;i++)\n   {\n   \tper=0;\n   \tfor (j=1;j<=m;j++)\n      \tper+=matrix[j][i];\n      if (per<stolb)\n      \tstolb=per;\n   }\n\n   if (strok<stolb)\n   \tprintf(\"%d\",strok);\n   else\n   \tprintf(\"%d\",stolb);\n   return 0;\n}"}
{"similarity_score": 0.9514563106796117, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d761443d3b7fc3d60770e2a5284ef6d1", "bug_code_uid": "39e4f1e9a9cd6e4042e9e5cf106f6af3", "src_uid": "2401d34db475853661d6e1e1cb5a8216", "apr_id": "3492088cc8c039492fcf040ee8ee5ec9", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint com(void const *a, void const *b){\n\treturn (*(int*)a)-(*(int*)b);\n}\nint main()\n{\n\tint n,i,j,x;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tif(n<3)\n\tprintf(\"Impossible\");\n\telse{\n\tqsort(a,n,4,com);\n\tx=n/2;\n\tif(n%2==0){\n\tfor(i=0,j=n-1;i<x;i++,j--)\n\tprintf(\"%d %d \",a[i],a[j]);\n\t}\n\telse{\n\tfor(i=0,j=n-1;i<x;i++,j--)\n\tprintf(\"%d %d \",a[i],a[j]);\n\tprintf(\"%d\",a[x]);\n\t}\n\t}\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint com(void const *a, void const *b){\n\treturn (*(int*)a)-(*(int*)b);\n}\nint main()\n{\n\tint n,i,j,x;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\t\n\tqsort(a,n,4,com);\n\tx=n/2;\n\tif(n%2==0){\n\tfor(i=0,j=n-1;i<x;i++,j--)\n\tprintf(\"%d %d \",a[i],a[j]);\n\t}\n\telse{\n\tfor(i=0,j=n-1;i<x;i++,j--)\n\tprintf(\"%d %d \",a[i],a[j]);\n\tprintf(\"%d\",a[x]);\n\t}\n}"}
{"similarity_score": 0.5238455715367146, "equal_cnt": 17, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "877bfce9828ec1fe8ca9d8d4e626a71e", "bug_code_uid": "92dd27e20b60dd62ed05b38ecdea00e1", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "19548ea91ffdc25946dc70dd6585e142", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid main()\r\n{\r\n    long double n;\r\n    int t,k=0,i;\r\n    scanf(\"%d\",&t);\r\n    while(t)\r\n    {   \r\n        k=0;\r\n        scanf(\"%lf\",&n);\r\n        if((int)n%2!=0)\r\n        k=1;\r\n        else\r\n        {\r\n            for( i=3;i<=n/2;i+=2)\r\n            {\r\n                if((int)n%i==0)\r\n                { \r\n                    printf(\"%d \\n\",i);\r\n                    k=1;\r\n                    break;\r\n                }\r\n                else \r\n                k=0;\r\n            }\r\n        }\r\n        if(k==1)\r\n            printf(\"yes \\n\");\r\n        else \r\n            printf(\"no \\n\");\r\n        t--;\r\n        \r\n\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    unsigned long long n;\r\n    int t,k=0,i;\r\n    scanf(\"%d\",&t);\r\n    while(t)\r\n    {   \r\n        k=0;\r\n        scanf(\" %llu\",&n);\r\n        if(n%2!=0)\r\n            k=1;\r\n        else\r\n        {\r\n            while(n>1)\r\n            {\r\n                if(n%2==0)\r\n                { \r\n                    n=n/2;\r\n                    k=0;\r\n                }\r\n                else if((n%2!=0)&&(n>1))\r\n                {\r\n                k=1;\r\n                break;\r\n                }\r\n            }\r\n        }\r\n        if(k==1)\r\n            printf(\"yes \\n\");\r\n        else \r\n            printf(\"no \\n\");\r\n        t--;\r\n        \r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.967741935483871, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b7fd6fc9ae7c9cc92c42a42372970384", "bug_code_uid": "b183e44d9782f673018be97a94ece9ab", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "9fd605626249c18e395fce4b97bd91ca", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define INF 1901474353\n\n\nchar bul[50]={\"Bulbasaur\"};\nint index[10];\nint count=0;\n\nvoid check(char a){\n\tint e=strlen(bul);\n\tfor(int i=0;i<e;i++){\n\t\tif(a==bul[i]){\n\t\t\tindex[i]++;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint main(){\n\tchar n[100099];\n\tgets(n);\n\t\n\tint e=strlen(n);\n\tfor(int i=0;i<e;i++){\n\t\tcheck(n[i]);\n\t}\n\tint min=INF;\n\tfor(int i=0;i<7;i++){\n\t\tif(index[i]<min){\n\t\t\tmin=index[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",min);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define INF 1901474353\n\n\nchar bul[50]={\"Bulbasr\"};\nint index[10];\nint count=0;\n\nvoid check(char a){\n\tint e=strlen(bul);\n\tfor(int i=0;i<e;i++){\n\t\tif(a==bul[i]){\n\t\t\tindex[i]++;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint main(){\n\tchar n[100099];\n\tgets(n);\n\t\n\tint e=strlen(n);\n\tfor(int i=0;i<e;i++){\n\t\tcheck(n[i]);\n\t}\n\tint min=INF;\n\tindex[1]/=2;\n\tindex[4]/=2;\n\tfor(int i=0;i<7;i++){\n\t\tif(index[i]<min){\n\t\t\tmin=index[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",min);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9974070872947277, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a1f7a94a3b6a65a18878ebb368745614", "bug_code_uid": "d0a20ff3f749e51d0ab20315005443bf", "src_uid": "f35c042f23747988f65c5b5e8d5ddacd", "apr_id": "5b762b47e6302c7819a28a3dbc58f539", "difficulty": 1500, "tags": ["math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\ntypedef long long ll;\n\n#define AZ\t\t\t\t26\n#define MOD\t\t\t\t1000000009LL\n#define prod(a,b)\t\t( ((a)*(b))%MOD )\n\nint frec[AZ];\n\nint main ( )\n{\n\tint n, i;\n\tscanf ( \"%d\", &n );\n\tchar c;\n\n\tmemset ( frec, 0, sizeof(frec) );\n\tfor ( i = 0; i < n; ++i ) {\n\t\tscanf ( \" %c\", &c );\n\t\tfrec[c-'A']++;\n\t}\n\n\tint maxF = 0;\n\tfor ( i = 0; i < AZ; ++i )\n\t\tif ( frec[i] > maxF )\n\t\t\tmaxF = frec[i];\n\n\tll b = 0, r = 1;\n\tfor ( i = 0; i < AZ; ++i )\n\t\tif ( frec[i] == maxF )\n\t\t\tb++;\n\n\tfor ( i = 0; i < n; ++i )\n\t\tr = prod(b,r);\n\n\tprintf ( \"%d\\n\", (int)r );\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\ntypedef long long ll;\n\n#define AZ\t\t\t\t26\n#define MOD\t\t\t\t1000000007LL\n#define prod(a,b)\t\t( ((a)*(b))%MOD )\n\nint frec[AZ];\n\nint main ( )\n{\n\tint n, i;\n\tscanf ( \"%d\", &n );\n\tchar c;\n\n\tmemset ( frec, 0, sizeof(frec) );\n\tfor ( i = 0; i < n; ++i ) {\n\t\tscanf ( \" %c\", &c );\n\t\tfrec[c-'A']++;\n\t}\n\n\tint maxF = 0;\n\tfor ( i = 0; i < AZ; ++i )\n\t\tif ( frec[i] > maxF )\n\t\t\tmaxF = frec[i];\n\n\tll b = 0, r = 1;\n\tfor ( i = 0; i < AZ; ++i )\n\t\tif ( frec[i] == maxF )\n\t\t\tb++;\n\n\tfor ( i = 0; i < n; ++i )\n\t\tr = prod(b,r);\n\n\tprintf ( \"%d\\n\", (int)r );\n\treturn 0;\n}"}
{"similarity_score": 0.10424422933730454, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "26c14ec6060d9bf76770cceaa97f083a", "bug_code_uid": "3624b49b00e6b543e48720545a9b332f", "src_uid": "b8ffd93a80c840ea645c6797f8ee269c", "apr_id": "144fb38e6194391a05ba72c7d9e964c0", "difficulty": 1200, "tags": ["interactive", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#define N 100010\r\nint t,n,m,va[26],vb[26];\r\nchar a[N],b[N];\r\nint main()\r\n{\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tfor(int i=0;i<26;++i) va[i]=0;\r\n\t\tscanf(\"%d %d\",&n,&m);\r\n\t\tfor(int i=1,j=0;i<=n;++i,j+=m)\r\n\t\t    scanf(\"%s\",a+j);\r\n\t\tfor(int i=1,j=0;i<n;++i,j+=m)\r\n\t\t    scanf(\"%s\",b+j);\r\n\t\tint la=n*m,lb=(n-1)*m;\r\n\t\tfor(int i=0;i<la;++i)\r\n\t\t    ++va[(int)(a[i]-'a')];\r\n\t\tfor(int i=0;i<lb;++i)\r\n\t\t    --va[(int)(b[i]-'a')];\r\n\t\tint loc=0;\r\n\t\tfor(int i=0;i<la;i+=m)\r\n\t\t{\r\n\t\t\tfor(int j=0;j<26;++j) vb[j]=0;\r\n\t\t\tfor(int j=0;j<m;++j) ++vb[(int)(a[i+j]-'a')];\r\n\t\t\tint judge=1;\r\n\t\t\tfor(int j=0;j<26;++j)\r\n\t\t\t    if(va[j]!=vb[j])\r\n\t\t\t    {\r\n\t\t\t    \tjudge=0;\r\n\t\t\t    \tbreak;\r\n\t\t\t\t}\r\n\t\t\tif(judge)\r\n\t\t\t{\r\n\t\t\t\tloc=i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=loc;i<loc+m;++i) printf(\"%c\",a[i]);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n#define N 100010\r\nint t,n,m,va[N][26];\r\nchar a[N],b[N];\r\nint main()\r\n{\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d %d\",&n,&m);\r\n\t\tfor(int i=1,j=0;i<=n;++i,j+=m)\r\n\t\t    scanf(\"%s\",a+j);\r\n\t\tfor(int i=1,j=0;i<n;++i,j+=m)\r\n\t\t    scanf(\"%s\",b+j);\r\n\t\tint la=n*m,lb=(n-1)*m;\r\n\t\tfor(int i=0;i<la;++i)\r\n\t\t    ++va[i%m][a[i]-'a'];\r\n\t\tfor(int i=0;i<lb;++i)\r\n\t\t    --va[i%m][b[i]-'a'];\r\n\t\tfor(int i=0;i<m;++i)\r\n\t\t    for(int j=0;j<26;++j)\r\n\t\t        if(va[i][j]) printf(\"%c\",j+'a'),--va[i][j];\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}"}
{"similarity_score": 0.7888805409466566, "equal_cnt": 23, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "1a2b305f5abd2bd4c2a530d0d99d66dd", "bug_code_uid": "f038252ed22daf5c4110ba3fdbff8291", "src_uid": "7e765c1b0e3f3e9c44de825a79bc1da2", "apr_id": "779f8ecd4d83e9c362cd97afdb24c99c", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,i,k;\n    scanf(\"%d\",&t);\n    while(t>=1){\n        int n,j,q,x;\n        int a[n],b[n];\n        scanf(\"%d %d\",&n,&x);\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&b[j]);\n        }\n        k=1;\n        for(i=0,j=n-1;i<n,j>=0;i++,j--){\n            if((a[i]+b[j])<=x){\n                continue;\n            }\n            else{\n                k=0;\n            }\n            if(k==1){\n                printf(\"Yes\\n\");\n            }\n            else(k==0){\n                printf(\"No\\n\");\n            }\n        }\n        --t;\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,k;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,j,x;\n        scanf(\"%d %d\",&n,&x);\n        int a[n],b[n];\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&a[j]);\n            }\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&b[j]);\n            }\n        k=1;\n        for(j=0;j<n;j++){\n            if((a[j]+b[n-j-1])<=x){\n                continue;\n                }\n            else{\n                k=0;\n                break;\n            }\n            }\n            if(k==1){\n                printf(\"\\nYes\\n\");\n            }\n            else{\n                printf(\"No\\n\");}\n    }\n    return 0;\n}"}
{"similarity_score": 0.99812382739212, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "99a02392931b902c171076b6771b5899", "bug_code_uid": "26316ee3a716b2f890be73a64f21a7f9", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "453e95cf5fb149bc727ba3be9d4287c4", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    char s[n];\n    int i,count1=0,count2=0;\n    int l=n;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&s[i]);\n    }\n    for(i=0;i<l;i++)\n    {\n        if(s[i]=='A'){\n            count1++;\n        }\n        if(s[i]=='D'){\n            count2++;\n        }\n    }\n    if(count1==count2){\n        printf(\"Friendship\");\n    }\n    else if(count1<count2){\n        printf(\"Danik\");\n    }\n    else if(count2<count1){\n        printf(\"Anton\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    char s[n];\n    int i,count1=0,count2=0;\n    int l=n;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&s[i]);\n    }\n    for(i=0;i<l;i++)\n    {\n        if(s[i]=='A'){\n            count1++;\n        }\n        if(s[i]=='D'){\n            count2++;\n        }\n    }\n    if(count1==count2){\n        printf(\"Friendship\");\n    }\n    else if(count1<count2){\n        printf(\"Danik\");\n    }\n    else if(count2<count1){\n        printf(\"Anton\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.7892644135188867, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "81eb802e0f28bd899f55f57f36447203", "bug_code_uid": "481fcdba3479ef7340224e9a4e3c8dc7", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "079c277d7a1899221951ec3e5baca4b9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n int m,n,i,a[8000000],l[800000],r[8000000];\nint main()\n{\n\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d %d\",&l[i],&r[i]);\n    }\n     for(i=0;i<m;i++)\n     {\n         if((r[i]-l[i])%2==0)\n         printf(\"0\\n\");\n         else\n         printf(\"1\\n\");\n     }\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n int m,n,i,a[8000000],l[800000],r[8000000];\nint main()\n{\n\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d %d\",&l[i],&r[i]);\n    }\n    int x=0;\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<0)\n        x++;\n    }\n     for(i=0;i<m;i++)\n     {\n         if((r[i]-l[i])%2==0)\n         printf(\"0\\n\");\n         else\n         {\n             if(x>=(r[i]-l[i]+1)/2&&(n-x)>=(r[i]-l[i]+1)/2)\n             printf(\"1\\n\");\n             else\n             printf(\"0\\n\");\n         }\n     }\n\n}\n"}
{"similarity_score": 0.3333333333333333, "equal_cnt": 24, "replace_cnt": 14, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "24c3582fa9a74e969c31fbeb1b96d2ef", "bug_code_uid": "436a8274c7a958da8c4d687578a872b2", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "95a7abd0487609a99bce763be1ba46b4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n\tint t;\n\tscanf(\"%d\", &t); \n\tfor(int i = 0;i < t; i ++)\n\t{\n\t\tint a, b, c;\n\t\tscanf(\"%d%d%d\", &a, &b, &c);\n\t\tif( a + b == c || a + c == b || b + c == a)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n } #include <stdio.h>\nint main ()\n{\n\tint t;\n\tscanf(\"%d\", &t); \n\tfor(int i = 0;i < t; i ++)\n\t{\n\t\tint a, b, c;\n\t\tscanf(\"%d%d%d\", &a, &b, &c);\n\t\tif( a + b == c || a + c == b || b + c == a)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n } \n\t\t\t\t \t \t \t \t \t    \t\t\t\t   \t\t   \t", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int a,b,c,i,t;\n    scanf(\"%d\", &t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d %d \",&a,&b,&c);\n        if(a==b+c)\n            printf(\"YES\\n\");\n        else if(b==a+c)\n            printf(\"YES\\n\");\n        else if(c==a+b)\n            printf  (\"YES\\n\");\n        else\n            printf (\"NO\\n\");\n    }\n    return 0;\n}\n  \t\t\t\t\t\t \t   \t\t\t\t\t\t \t    \t \t"}
{"similarity_score": 0.8473804100227791, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2ad14b2a61ecf80d9ae1eaf774f97f1b", "bug_code_uid": "682866e79bf981237acfb9ea378ab2f5", "src_uid": "7f934f96cbe3990945e5ebcf5c208043", "apr_id": "0c81f59f6ad9b50f51860646253ad362", "difficulty": 800, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[100];\nint main()\n{\n    int n,i,j,c=0;\n    scanf(\"%d\",&n);\n    char s[1000000];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&s[i]);\n    }\n    for(i=c;i<n;i++){\n        for(j=i+1;j<n;j++){\n        if(s[i]==s[j]){\n\n        a[j]=1;\n        }\n        c++;\n\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint a[100];\nint main()\n{\n    int n,i,j,c=0;\n    scanf(\"%d\",&n);\n    char s[1000][1000];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&s[i]);\n    }\n    for(i=0;i<n;i++){\n        for(j=i+1;j<n;j++){\n        if(strcmp(s[i] , s[j]) == 0){\n\n        a[j]=1;\n        }\n        //c++;\n\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n}\n"}
{"similarity_score": 0.9984639016897081, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5f1ac159586633a662f5147e3cedfa72", "bug_code_uid": "a34684876b6d96a2de1419f018fa0e86", "src_uid": "928f18ee5dbf44364c0d578f4317944c", "apr_id": "94fcb8bdf5986f8da66f1fc0696489f6", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, k, i;\n    scanf(\"%d %d\",&n,&k);\n    int C[k],X[n*k];\n    for(i=0;i<n;i++)\n    {\n        X[i] = 0;\n    }\n    for(i=0;i<k;i++)\n    {\n        scanf(\"%d\",&C[i]);\n        X[C[i]-1]=1;\n    }\n    if(n==2 && k==2)\n    {\n        if(C[0]==4)\n        {printf(\"2 4\\n1 3\");\n        return 0;}\n    }\n    int j = 0;\n    int c;\n    for(i=0;i<k;i++)\n    {\n        c = 0;\n        printf(\"%d \",C[i]);\n        while(c!=n-1)\n        {\n            if(X[j]==0 && j!=C[i]-1)\n            {\n                printf(\"%d \",j+1);\n                c++;\n            }\n            j++;\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}   ", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, k, i;\n    scanf(\"%d %d\",&n,&k);\n    int C[k],X[n*k];\n    for(i=0;i<n*k;i++)\n    {\n        X[i] = 0;\n    }\n    for(i=0;i<k;i++)\n    {\n        scanf(\"%d\",&C[i]);\n        X[C[i]-1]=1;\n    }\n    if(n==2 && k==2)\n    {\n        if(C[0]==4)\n        {printf(\"2 4\\n1 3\");\n        return 0;}\n    }\n    int j = 0;\n    int c;\n    for(i=0;i<k;i++)\n    {\n        c = 0;\n        printf(\"%d \",C[i]);\n        while(c!=n-1)\n        {\n            if(X[j]==0 && j!=C[i]-1)\n            {\n                printf(\"%d \",j+1);\n                c++;\n            }\n            j++;\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}   "}
{"similarity_score": 0.9927797833935018, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "db11238af27cd3c7e4c83943c76f66c5", "bug_code_uid": "7ecac21cdf16631c266402946dcafd6f", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "a8d4db535732407f9e1f2e124cd17791", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <time.h>\n\n#define lli long long int\n#define MAX INT_MAX\n#define sd second\n#define fs first\n#define endll '\\n'\n#define PI acos(-1)\n#define mp make_pair\n#define pb push_back\n#define best 1000000007\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define ROF(i,a,b) for(int i=a;i>b;i--)\n#define buyuk(a,b) (a<b)? b:a\n#define kucuk(a,b) (a<b)? a:b\n#define ort(a,b) (a+b)/2\n#define carp(a,b) (a)*(b)\nint as[1000005];\nint main () {\n\tint i,j,k,arr[1000000],t=0,min=0,x,top=0,son=0,s=0,max;\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tif(arr[i]>max)\n\t\t\tmax=arr[i];\n\t\ttop+=arr[i];\n\t\tas[arr[i]]++;\n\t}\n\tson=top;\n\tfor(i=1;i<=1000002;i++)\n\t\tfor(j=1;j<=as[i];j++)\n\t\t{\n\t\t\tson+=i;\n\t\t\ttop-=i;\n\t\t\tson+=top;\n\t\t}\n\tprintf(\"%d\",son-max);\n\t\t\n}\n\n\n\n\n\n\n\t\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <time.h>\n\n#define lli long long int\n#define MAX INT_MAX\n#define sd second\n#define fs first\n#define endll '\\n'\n#define PI acos(-1)\n#define mp make_pair\n#define pb push_back\n#define best 1000000007\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define ROF(i,a,b) for(int i=a;i>b;i--)\n#define buyuk(a,b) (a<b)? b:a\n#define kucuk(a,b) (a<b)? a:b\n#define ort(a,b) (a+b)/2\n#define carp(a,b) (a)*(b)\nint as[1000005];\nint main () {\n\tlli i,j,k,arr[1000000],t=0,min=0,x,top=0,son=0,s=0,max;\n\tscanf(\"%lld\",&x);\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%lld\",&arr[i]);\n\t\tif(arr[i]>max)\n\t\t\tmax=arr[i];\n\t\ttop+=arr[i];\n\t\tas[arr[i]]++;\n\t}\n\tson=top;\n\tfor(i=1;i<=1000002;i++)\n\t\tfor(j=1;j<=as[i];j++)\n\t\t{\n\t\t\tson+=i;\n\t\t\ttop-=i;\n\t\t\tson+=top;\n\t\t}\n\tprintf(\"%lld\",son-max);\n\t\t\n}\n\n\n\n\n\n\n\t\n\n"}
{"similarity_score": 0.9051490514905149, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d11e2d6a85c177895b323e2b0548020b", "bug_code_uid": "9af27120abeed109da9937076b2cc879", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "ae45519186f5fd07e39e51198b1f465a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,sum=0;\n    scanf(\"%d %d\",&n,&m);\n    int a[m];\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    sum+=a[0]-1;\n    for(i=1;i<m;i++){\n        if(a[i-1]>a[i]){\n            sum+=abs(n-a[i-1])+a[i];\n        }\n        else{\n            sum+=abs(a[i]-a[i-1]);\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i;\n    long long int sum=0;\n    scanf(\"%d %d\",&n,&m);\n    int a[m];\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    sum+=a[0]-1;\n    for(i=1;i<m;i++){\n        if(a[i-1]>a[i]){\n            sum+=n-a[i-1]+a[i];\n        }\n        else{\n            sum+=a[i]-a[i-1];\n        }\n    }\n    printf(\"%I64d\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.4318056322473771, "equal_cnt": 17, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 9, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "feca14d94474be8c9b728b3c6445eae6", "bug_code_uid": "d1bd19bdcfd20f3916eb67d2770e953a", "src_uid": "d4fc7e683f389e0c7bbee8e115cef459", "apr_id": "fd1382c6bd47e7c7bfd9cb95718c85a5", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint main(){\r\n    int t ,n,k,a,b,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&k);\r\n        int rr=1;\r\n        int jj=n/2;\r\n         int mm=(1+k)*2;\r\n         int nn=(2+k)*1;\r\n         if(mm%4==0){\r\n            printf(\"YES\\n\");\r\n            for(i=0;i<jj;i++){\r\n                printf(\"%d %d\\n\",rr,rr+1);\r\n                rr++;\r\n                rr++;\r\n\r\n            }\r\n         }\r\n\r\n         else if(nn%4==0){\r\n            printf(\"YES\\n\");\r\n            for(i=0;i<jj;i++){\r\n                printf(\"%d %d\\n\",rr+1, rr);\r\n                rr++;rr++;\r\n            }\r\n         }\r\n\r\n         else{\r\n            printf(\"NO\\n\");\r\n         }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint main(){\r\n    int t ,n,k,a,b,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&k);\r\n        int rr=1;\r\n        int jj=n/2;\r\n        \r\n            for(i=0;i<jj;i++){\r\n                int mm=(rr+k)*(rr+1);\r\n                int nn=(rr+1+k)*rr;\r\n                \r\n                if(mm%4!=0&&nn%4!=0){\r\n                    printf(\"NO\\n\");\r\n                    break;\r\n                }\r\n                else{\r\n                     printf(\"YES\\n\");\r\n                    for(i=0;i<jj;i++){\r\n                         int mm=(rr+k)*(rr+1);\r\n                int nn=(rr+1+k)*rr;\r\n                        if(mm%4==0){\r\n                            printf(\"%d %d\\n\",rr,rr+1);\r\n                            rr++;rr++;\r\n                        }\r\n                        else{\r\n                            printf(\"%d %d\\n\",rr+1,rr);\r\n                            rr++;rr++;\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n         }\r\n\r\n      \r\n    \r\n    return 0;\r\n}\r\n\t\t\r\n\t\r\n\t\t"}
{"similarity_score": 0.9859154929577465, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "df42d51cb69529c2d2afa0a6de6ac7ed", "bug_code_uid": "af44d86e33b49fa6af6f7d7580d17172", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "eae1c1cba8d3dd0495595479c4d5e30a", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j,s;\n    scanf(\"%d%d\",&n,&m);\n    \n    s=n+m-1;\n    printf(\"%d\",s);\n    if(n<=m)\n    {\n    for(j=1;j<=m;j++)\n    printf(\"\\n1 %d\",j);\n    for(i=2;i<=n;i++)\n        printf(\"\\n%d %d\",i,m);\n}\n    if(n>m)\n    {\n    for(j=1;j<=m;j++)\n    printf(\"\\n%d 1\",j);\n    for(i=2;i<=n;i++)\n        printf(\"\\n%d %d\",m,i);\n}\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j,s;\n    scanf(\"%d%d\",&n,&m);\n    \n    s=n+m-1;\n    printf(\"%d\",s);\n    if(n<=m)\n    {\n    for(j=1;j<=m;j++)\n    printf(\"\\n1 %d\",j);\n    for(i=2;i<=n;i++)\n        printf(\"\\n%d %d\",i,m);\n}\n    if(n>m)\n    {\n    for(j=1;j<=m;j++)\n    printf(\"\\n1 %d\",j);\n    for(i=2;i<=n;i++)\n        printf(\"\\n%d %d\",i,m);\n}\n}"}
{"similarity_score": 0.2823529411764706, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "453360c03ff89854f36def82db27d496", "bug_code_uid": "eab1a44831faf5df972036bc8190aaa2", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "07420d341555015c543e00f4c73c9364", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int t,a1,a2,b1,b2,x,z;\n    double y;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d\",&a1,&b1);\n        scanf(\"%d%d\",&a2,&b2);\n        x=(a1*b1)+(a2*b2);\n        y=sqrt(x);\n        z=sqrt(x);\n        if(y==z){puts(\"YES\");}\n        else{puts(\"NO\");}\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,i,a1,a2,b1,b2;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d %d\", &a1, &b1);\n        scanf(\"%d %d\", &a2, &b2);\n        if((a1==b2 && (b1+a2 == a1)) || (a1 == a2 && (b1+b2 == a1)) || (b1 == a2 && (a1+b2 == a2)) || (b1 == b2  && (a1+a2 == b1)))\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7478042659974906, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "c6871908cf30da3be848653ff90a5a18", "bug_code_uid": "824ff212cd8090610399c8c661cbe7ea", "src_uid": "112d5d664b0183d96e55a3c545d9b7d5", "apr_id": "15c2beb6ac2cb66c18f5c5de230a14cd", "difficulty": 1800, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n\nint main() {\n  int n,i,j,h[3000],tmp_h,t[3000];\n  char names[3000][11],tmp_name[11];\n  scanf(\"%d\",&n);\n  for (i=0;i<n;i++) scanf(\"%s %d\",names[i],h+i);\n  for (i=0;i<n-1;i++) {\n    for (j=i+1;j<n;j++) {\n      if (h[j]<h[i]) {\n        tmp_h=h[i];\n        h[i]=h[j];\n        h[j]=tmp_h;\n        strcpy(tmp_name,names[i]);\n        strcpy(names[i],names[j]);\n        strcpy(names[j],tmp_name);\n      }\n    }\n  }\n  for (i=0;i<n;i++) t[i]=1;\n  for (i=n-1;0<=i;i--) {\n    if (i<h[i]) {\n      printf(\"-1\\n\");\n      return 0;\n    }\n    for (j=0;j<h[i];j++) {\n      t[i-j-1]=t[i]+j+1;\n    }\n  }\n  for (i=0;i<n;i++) printf(\"%s %d\\n\",names[i],t[i]);\n  return 0;\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n\nint main() {\n  int n,i,j,h[3000],tmp_h,t[3000];\n  char names[3000][11],tmp_name[11];\n  scanf(\"%d\",&n);\n  for (i=0;i<n;i++) scanf(\"%s %d\",names[i],h+i);\n  for (i=0;i<n-1;i++) {\n    for (j=i+1;j<n;j++) {\n      if (h[j]<h[i]) {\n        tmp_h=h[i];\n        h[i]=h[j];\n        h[j]=tmp_h;\n        strcpy(tmp_name,names[i]);\n        strcpy(names[i],names[j]);\n        strcpy(names[j],tmp_name);\n      }\n    }\n  }\n  for (i=0;i<n;i++) {\n    if (i<h[i]) {\n      printf(\"-1\\n\");\n      return 0;\n    }\n    if (h[i]==0) t[i]=i+1;\n    else {\n      strcpy(tmp_name,names[i]);\n      for (j=0;j<i;j++) t[j]+=h[i];\n      for (j=i;h[i]<j;j--) {\n        strcpy(names[j],names[j-1]);\n        t[j]=t[j-1];\n      }\n      strcpy(names[h[i]],tmp_name);\n      t[h[i]]=1;\n    }\n  }\n  for (i=0;i<n;i++) printf(\"%s %d\\n\",names[i],t[i]);\n  return 0;\n}\n"}
{"similarity_score": 0.5666199158485273, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "bb6c1651a95240bb2687e180c8205c0f", "bug_code_uid": "2982960aea127c5d9359a683dfb2356a", "src_uid": "8b926a19f380a56018308668c17c6928", "apr_id": "e75856e87e6e45356e13a9927d9772bb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void* a, const void* b)\n{\n    return *(int*)a - *(int*)b;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n\n    while (n--) {\n        int t;\n        scanf(\"%d\", &t);\n        int *a = malloc(sizeof(int) * t); \n        for (int i = 0; i < t; i++)\n            scanf(\"%d\", &a[i]);\n        \n        qsort(a, t, sizeof(int), cmp);\n        int f = 0;\n        for (int i = 0; i < t - 1; i++) {\n            if (a[i + 1] - a[i] == 2) {\n                f = 1;\n                break;\n            }\n        }\n        if (t == 1 && a[0] > 1)\n            f = 1;\n\n        if (f)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n\n        free(a);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void* a, const void* b)\n{\n    return *(int*)a - *(int*)b;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n\n    while (n--) {\n        int t;\n        scanf(\"%d\", &t);\n        int *a = malloc(sizeof(int) * t); \n        for (int i = 0; i < t; i++)\n            scanf(\"%d\", &a[i]);\n        if (t == 1 && a[0] == 1) {\n            printf(\"YES\\n\");\n            continue;\n        } else if (t == 1 && a[0] > 1){\n            printf(\"NO\\n\");\n            continue;\n        }\n\n        qsort(a, t, sizeof(int), cmp);\n        if (a[t-1] - a[t - 2] > 1)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n        free(a);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9148936170212766, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "90ef1cd5160a0cf64b4e1a366c40dd0b", "bug_code_uid": "286799e9b8abf184e9c32af0149bd9a3", "src_uid": "bf115b24d85a0581e709c012793b248b", "apr_id": "325752969e0ea88dd67ebbb577bdb946", "difficulty": 1600, "tags": ["combinatorics", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    unsigned long long int n,m,a=1,r,i,j;\n    scanf(\"%llu %llu\",&n,&m);\n    unsigned long long int b[n+1];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%llu\",&b[i]);\n    }\n    if(n<=m)\n    {for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            a=a*abs(b[i]-b[j]);\n        }\n    }\n    r= a%m;\n    printf(\"%llu\\n\",r);}\n    else\n        printf(\"0\\n\");\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    unsigned long long int n,m,a=1,r,i,j;\n    scanf(\"%llu %llu\",&n,&m);\n    unsigned long long int b[n+1];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%llu\",&b[i]);\n    }\n    if(n<=m)\n    {\n        for(i=0;i<n;i++)\n       {\n        for(j=i+1;j<n;j++)\n        {\n            a=(a*(abs(b[i]-b[j])))%m;\n        }\n       }\n    printf(\"%llu\\n\",a);\n    }\n    else\n        printf(\"0\\n\");\n}\n"}
{"similarity_score": 0.8926905132192846, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "a9a5c88831a86a2c57cd25fdf9c789fd", "bug_code_uid": "c2566c34c4e9406b35dca114b813254b", "src_uid": "2535fc09ce74b829c26e1ebfc1ee17c6", "apr_id": "b57867061df486e3d3c1d17676e261e2", "difficulty": 1500, "tags": ["data structures", "greedy", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n    int n = 0, num = 0, cnt = 0;\n    int top = -1, target = 1;\n    char cmd[20] = {0, };\n    int stack[300001] = {0, };\n    \n    scanf(\"%d\", &n);\n    n *= 2;\n    \n    while (n--) {\n        scanf(\"%s\", cmd);\n        if (strcmp(cmd, \"add\") == 0) {\n            scanf(\"%d\", &num);\n            stack[++top] = num;\n        } else {\n            if (top >= 0 && stack[top] != target) {\n                top = -1;\n                cnt++;\n            }\n            \n            target++;\n        }\n    }\n    \n    printf(\"%d\\n\", cnt);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n    int n = 0, num = 0, cnt = 0;\n    int top = -1, target = 1;\n    char cmd[20] = {0, };\n    int stack[300001] = {0, };\n    \n    scanf(\"%d\", &n);\n    n *= 2;\n    \n    while (n--) {\n        scanf(\"%s\", cmd);\n        if (cmd[0] == 'a') {\n            scanf(\"%d\", &num);\n            stack[++top] = num;\n        } else {\n            if (top >= 0) {\n                if (stack[top] != target) {\n                    top = -1;\n                    cnt++;\n                } else {\n                    top--;\n                }\n            }\n            \n            target++;\n        }\n    }\n    \n    printf(\"%d\\n\", cnt);\n    \n    return 0;\n}"}
{"similarity_score": 0.9962121212121212, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "80f890ab4f767731c63c26c008b02dad", "bug_code_uid": "9b01cd43617e68a17bb6c953c73feff1", "src_uid": "b0e6a9b500b3b75219309b5e6295e105", "apr_id": "7eac27eae1c73e0f138551cafb1e91b5", "difficulty": 1300, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "m,i,j,y[1<<18],x[1<<18][3],r=1e10,a=1e10;\nmain(k){scanf(\"%d%d%d\",&j,&m,&k);for(i=0;i<m;i++)scanf(\"%d%d%d\",&x[i][0],&x[i][1],&x[i][2]);for(i=0;i<k;i++){scanf(\"%d\",&j);y[j]=1;}for(i=0;i<m;i++)if(y[x[i][0]]^y[x[i][1]])r=r>x[i][2]?r:x[i][2];printf(\"%d\",(r==a?-1:r));}\n", "fixed": "m,i,j,y[1<<18],x[1<<18][3],r=1e10,a=1e10;\nmain(k){scanf(\"%d%d%d\",&j,&m,&k);for(i=0;i<m;i++)scanf(\"%d%d%d\",&x[i][0],&x[i][1],&x[i][2]);for(i=0;i<k;i++){scanf(\"%d\",&j);y[j]=1;}for(i=0;i<m;i++)if(y[x[i][0]]^y[x[i][1]])r=r<x[i][2]?r:x[i][2];printf(\"%d\",(r==a?-1:r));}\n"}
{"similarity_score": 0.9858088930936613, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d7f333db0acb49c47d69722a28086e3d", "bug_code_uid": "72b18963540b5a9fce4b92c7e2b9b040", "src_uid": "621c82478be3dadcf60c383ba078a49e", "apr_id": "4bd7d650243749845023a341e7a229fd", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint length;\n\tscanf(\"%d\", &length);\n\n\tchar a[100005] = {}, b[100005] = {};\n\tscanf(\"%s%s\", a, b);\n\n\tint a1b1 = 0, a0b1 = 0, a1b0 = 0, a0b0 = 0, out = 0;\n\tfor (int i = 0; i < length; i++) {\n\t\tif (a[i] == '1' && b[i] == '1') {\n\t\t\tout += a0b0;\n\t\t\ta1b1++;\n\t\t}\n\t\telse if (a[i] == '1' && b[i] == '0') {\n\t\t\tout += a0b0 + a0b1;\n\t\t\ta1b0++;\n\t\t}\n\t\telse if (a[i] == '0' && b[i] == '1') {\n\t\t\tout += a1b0;\n\t\t\ta0b1++;\n\t\t}\n\t\telse {\n\t\t\tout += a1b1 + a1b0;\n\t\t\ta0b0++;\n\t\t}\n\t}\n\tprintf(\"%d\", out);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint length;\n\tscanf(\"%d\", &length);\n\n\tchar a[100005] = {}, b[100005] = {};\n\tscanf(\"%s%s\", a, b);\n\n\tint a1b1 = 0, a0b1 = 0, a1b0 = 0, a0b0 = 0;\n\tlong long out = 0;\n\tfor (int i = 0; i < length; i++) {\n\t\tif (a[i] == '1' && b[i] == '1') {\n\t\t\tout += a0b0;\n\t\t\ta1b1++;\n\t\t}\n\t\telse if (a[i] == '1' && b[i] == '0') {\n\t\t\tout += a0b0 + a0b1;\n\t\t\ta1b0++;\n\t\t}\n\t\telse if (a[i] == '0' && b[i] == '1') {\n\t\t\tout += a1b0;\n\t\t\ta0b1++;\n\t\t}\n\t\telse {\n\t\t\tout += a1b1 + a1b0;\n\t\t\ta0b0++;\n\t\t}\n\t}\n\tprintf(\"%lld\", out);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9985228951255539, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "006434347f58bc1d02cd73a98cdf768f", "bug_code_uid": "17339a4e1b2a962a5e11cde855a958e7", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "8b21c5420e54fbdbb6e18367bc5489a5", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint iscomposite(int numb)\n{\n\tint i=2;\n\twhile(i<numb/2)\n\t{\n\t\tif(numb % i ==0) return 1;\n\t\ti++;\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint x,y;\n\tx=4;\n\ty=n-x;\n\twhile(1)\n\t{\n\t\tif(iscomposite(x)&&iscomposite(y))\n\t\t{\n\t\t\tprintf(\"%d %d\",x,y);\n\t\t\treturn 0;\n\t\t}\n\t\tx++;\n\t\ty--;\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint iscomposite(int numb)\n{\n\tint i=2;\n\twhile(i<=numb/2)\n\t{\n\t\tif(numb % i ==0) return 1;\n\t\ti++;\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint x,y;\n\tx=4;\n\ty=n-x;\n\twhile(1)\n\t{\n\t\tif(iscomposite(x)&&iscomposite(y))\n\t\t{\n\t\t\tprintf(\"%d %d\",x,y);\n\t\t\treturn 0;\n\t\t}\n\t\tx++;\n\t\ty--;\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9706666666666667, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8d768140b9512fba5b6affbe6b33128d", "bug_code_uid": "3becfa8ca933bccf9b6fdd73d9f44c80", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "1ebe29d45d4a9cbd07a16ebde3dd8dbc", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int m,n,p=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    int i,a[m];\n    for(i=0;i<m;i++)\n    scanf(\"%d\",&a[i]);\n    if(a[0]==1)\n        p=0;\n    else\n        p=a[0]-1;\n    for(i=1;i<m;i++)\n    {\n        if(a[i-1]>a[i])\n            p+=a[i-1]-a[i]+n-2;\n        else\n            p+=a[i]-a[i-1];\n    }\n    printf(\"%I64d\",p);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int m,n,p=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    int i,a[m];\n    for(i=0;i<m;i++)\n    scanf(\"%d\",&a[i]);\n    if(a[0]==1)\n        p=0;\n    else\n        p=a[0]-1;\n    for(i=1;i<m;i++)\n    {\n        if(a[i-1]>a[i])\n            p+=a[i]+n-a[i-1];\n        else\n            p+=a[i]-a[i-1];\n    }\n    printf(\"%I64d\",p);\n    return 0;\n}\n"}
{"similarity_score": 0.4769403824521935, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1426c92f1e6cb7d46db45098e6084499", "bug_code_uid": "418045488424818af9498c64072b7403", "src_uid": "0593f79604377dcfa98d2b69840ec0a6", "apr_id": "3007edd7d41e6b064972b892ab4e2075", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,j,x,count=0;\n    scanf(\"%d\",&n);\n    int a[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=0)\n        {\n        x=0;\n        j=i+1;\n        while(j<n)\n        {\n            if(a[i]==a[j])\n                x++;\n            j++;\n        }\n        if(x==0)\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,j,x,temp,count=0;\n    scanf(\"%d\",&n);\n    int a[100001]={0};\n    int b[100001]={0};\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x);\n        if(x<0)\n        {\n            x=x*-1;\n            if(b[x]==0)\n            {\n            b[x]=1;\n            count++;\n            }\n        }\n        else if(x>0&&a[x]==0)\n        {\n            a[x]=1;\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}"}
{"similarity_score": 0.9943181818181818, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d7f6da27b9feecd14d71b8646b107895", "bug_code_uid": "116ef9a86f9564f73641c910e8d79206", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "b171c6fa2c47944061b36df9f8f115c0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,n,p,q,t=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&p,&q);\n\t if(p+2<q&&p<=q){\n\t\tt++;\n\t }}\n\t\t\tprintf(\"%d\\n\",t);\n\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,n,p,q,t=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&p,&q);\n\t if(p+2<=q&&p<=q){\n\t\tt++;\n\t }}\n\t\t\tprintf(\"%d\\n\",t);\n\t\treturn 0;\n}\n"}
{"similarity_score": 0.9794837855724685, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "0b4eaca31b95f0c2aac682ece289978f", "bug_code_uid": "e8e99201cbe41448282e591599b82c3a", "src_uid": "50e88225d8b081d63eebe446f48057f4", "apr_id": "2bc56335c5f7399217ab0f9a66af8622", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int i,j,k=1,x,s,f,n,m,nn,mm,a[300];\n    char c;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)scanf(\"%d\",&a[i]);\n    while(k){\n    for(k=0,i=0;i<n-1;i++){\n                       if(a[i]){\n                                printf(\"PR\");\n                                a[i]--;\n                                k=1;\n                                }\n                       else printf(\"R\");\n                       }\n    if(!k)break;\n    for(k=0;i>0;i--){\n                     if(a[i]){\n                              printf(\"PL\");\n                              a[i]--;\n                              k=1;\n                              }\n                     else printf(\"L\");\n                     }\n}              \n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n    int i,j,k=0,x,s,f,n,m,nn,mm,a[300];\n    char c;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;k+=a[i++])scanf(\"%d\",&a[i]);\n    while(k){\n    for(i=0;i<n-1&&k;i++){\n                       if(a[i]){\n                                printf(\"PR\");\n                                a[i]--;\n                                k--;\n                                }\n                       else printf(\"R\");\n                       }\n    if(!k)break;\n    for(;i>0&&k;i--){\n                     if(a[i]){\n                              printf(\"PL\");\n                              a[i]--;\n                              k--;\n                              }\n                     else printf(\"L\");\n                     }\n}              \n    return 0;\n}\n"}
{"similarity_score": 0.6019417475728155, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "593a9c6ce5a17a899703349b06a2d405", "bug_code_uid": "3ed6394cd3c2f29f67cfb7a144cfe3f9", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "1a835b28b9f0020fb077968cd859c071", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nlong long p,a,b,c,m,n,q,ans;\r\n  int t,i=1;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++){\r\n      scanf(\"%lld%lld%lld%lld\",&p,&a,&b,&c);\r\n      m = a - p%a;\r\n      n = b - p%b;\r\n      q = c - p%c;\r\n\r\n     if(m<n && n<q){\r\n\t\tans=m;\r\n\t}\r\n\telse if(n<q){\r\n\tans=n;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tans=q;\r\n\t}\r\n     printf(\"%lld\",ans);\r\n\r\n    printf(\"\\n\");}\r\n     return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\nlong long p,a,b,c,m,n,q,tem,ans;\r\n  int t,i=1;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++){\r\n      scanf(\"%lld%lld%lld%lld\",&p,&a,&b,&c);\r\n    if(p%a==0 || p%b==0 || p%c==0){\r\n           printf(\"0 \\n\");\r\n    }\r\n    else{\r\n      m = a - p%a;\r\n      n = b - p%b;\r\n      q = c - p%c;\r\n   tem = (m < n)    ? m : n;\r\n    ans =  ( q < tem) ? q : tem ;\r\n\r\n       printf(\"%lld\\n\",ans);\r\n       }\r\n    }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.8667642752562226, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "6844a17679fc04e78c0abc5fac98bb9b", "bug_code_uid": "4a1323d9fdb43a0daa82102097467aac", "src_uid": "6432a543eeee9833c6d849222ad6b93d", "apr_id": "6752bf95f224424e9544242be0688234", "difficulty": 1000, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int l,r,pair=0, i;\n    scanf(\"%11d %11d\",&l,&r);\n    pair = (r-l+1)/2;\n    if(pair==0)\n    {\n        printf(\"YES\\n\");\n        for(i=0; i<pair; i++)\n        {\n            printf(\"%11d %11d\\n\",l,l+1);\n            l = l+2;\n        }\n    }\n    else   \n        printf(\"NO\");   \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int l=0,r=0,pair=0,i=0;\n    scanf(\"%I64d %I64d\",&l,&r);\n    pair = (r-l+1)/2;\n    if(pair == (long long int) pair)\n    {\n        printf(\"YES\\n\");\n        for(i=0; i<pair; i++)\n        {\n            printf(\"%I64d %I64d\\n\",l,l+1);\n            l = l+2;\n        }\n    }\n    else   \n        printf(\"NO\");\n    return 0;    \n}"}
{"similarity_score": 0.8108108108108109, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "47b5c43a8a3cc8b7b91758f786cb0d93", "bug_code_uid": "81c5d3b223c6de46c01d5f72b3645a98", "src_uid": "a2085c2d21b2dbe4cc27a15fa4a1ec4f", "apr_id": "2a6d9c6943641f15fcc028ef9f77b9c8", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int m,n,i,a[200005],p=0,q=0,r;\n    scanf(\"%d %d\",&n,&m);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n;i++)\n    {\n        r=p;\n        p=p+a[i];\n        q=(p-r)/m;\n        printf(\"%d \",q);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int m,n,i,a[200005],p=0,q=0,r;\n    scanf(\"%d %d\",&n,&m);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n;i++)\n    {\n        \n        p=a[i]/m;\n        a[i+1]+=a[i]%m;\n        printf(\"%d \",p);\n    }\n    return 0;\n}"}
{"similarity_score": 0.773067331670823, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "352214f81ad050a136efe128d66a340b", "bug_code_uid": "98c0b9f8c54104e686d4fb14ec35550e", "src_uid": "0ff4ac859403db4e29554ca7870f5490", "apr_id": "469833c0bb34471a05b22df53ded52ee", "difficulty": 1300, "tags": ["number theory", "*special", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint getDiv(int last,int num);\nint main(){\n    int n,i,a;\n    scanf(\"%d\",&n);\n    int* rate;\n    int maxRate=0;\n    rate=(int*)malloc(n*sizeof(int));\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&rate[i]);\n        maxRate+=rate[i];\n        }\n    int div=getDiv(1,n);\n    int thisRate;\n    while(div<n){\n        for(a=0; a<n;a++){\n            thisRate=0;\n            for(i=a;i<n;i+=div){\n                thisRate+=rate[i];\n                }\n            if (thisRate>maxRate)maxRate=thisRate;\n            }\n        div=getDiv(div,n);\n        }\n    if (maxRate>0) printf(\"%d\",maxRate);\n    else puts(\"0\");\n    return 0;\n    }\nint getDiv(int last,int num){\n    int i;\n    for(i=last+1;i<num;i++){\n        if (num%i==0) return i;\n        }\n    return num;\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint getDiv(int last,int num);\nint main(){\n    int n,i,a;\n    scanf(\"%d\",&n);\n    int* rate;\n    int maxRate=0;\n    rate=(int*)malloc(n*sizeof(int));\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&rate[i]);\n        maxRate+=rate[i];\n        }\n    int div=getDiv(1,n);\n    int thisRate;\n    while(div<n){\n        for(a=0; a<n;a++){\n            thisRate=0;\n            for(i=a;i<n+a;i+=div){\n                if(i>=n)thisRate+=rate[i-n];\n                else thisRate+=rate[i];\n                }\n            if (thisRate>maxRate)maxRate=thisRate;\n            }\n        div=getDiv(div,n);\n        }\n    printf(\"%d\",maxRate);\n    return 0;\n    }\nint getDiv(int last,int num){\n    int i;\n    for(i=last+1;i<=(num/3);i++){\n        if (num%i==0) return i;\n        }\n    return num;\n    }\n"}
{"similarity_score": 0.593939393939394, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9c5851c886142e919eaf27055ff78757", "bug_code_uid": "908d27e1bd76dbdf7828fb8cdd5229f5", "src_uid": "5babbb7c5f6b494992ffa921c8e19294", "apr_id": "7e8bb8b75e4966d5bea2275d6fa1314d", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,d,i,x,count=2;\n    scanf(\"%d%d\",&n,&d);\n    int a[n],b[100000],c[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n        if((a[i+1]<0 && a[i+1]>0)||(a[i+1]>0&&a[i]<0))\n            x=abs(a[i+1]+a[i]);\n        else\n            x=abs(a[i+1]-a[i]);\n        if(x>2*d)\n            count=count+2;\n        else if(x==2*d)\n            count++;\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,d,i,x,count=2;\n    scanf(\"%d%d\",&n,&d);\n    int a[n],b[100000],c[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n        x=(a[i+1]-a[i]);\n        if(x>2*d)\n            count=count+2;\n        else if(x==2*d)\n            count++;\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9506990434142752, "equal_cnt": 14, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "c105bfd44219ebda2d148032e92abbe8", "bug_code_uid": "27ffad754780b1e326abdb006b5154b8", "src_uid": "c9da10199ad1a5358195b693325e628b", "apr_id": "b74232df88d7f1fbc85a30300ce2978d", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    long int tc;\r\n    scanf(\"%li\", &tc);\r\n\r\n    for (int i = 0; i < tc; i++)\r\n    {\r\n        long int n;\r\n        scanf(\"%li\", &n);\r\n        long int arr[n];\r\n\r\n        for (int j = 0; j < n; j++)\r\n        {\r\n            scanf(\"%li\", &arr[j]);\r\n        }\r\n\r\n        long int m;\r\n        scanf(\"%li\", &m);\r\n        long int arr1[m];\r\n\r\n        for (int j = 0; j < m; j++)\r\n        {\r\n            scanf(\"%li\", &arr1[j]);\r\n        }\r\n\r\n        long int sum = 0;\r\n\r\n        for (int j = 0; j < m; j++)\r\n        {\r\n            sum = sum + arr1[j];\r\n        }\r\n\r\n        long int k1 = (sum % n);\r\n\r\n        printf(\"%li\\n\", arr[k1]);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    long long tc;\r\n    scanf(\"%lld\", &tc);\r\n\r\n    for (int i = 0; i < tc; i++)\r\n    {\r\n        long long n;\r\n        scanf(\"%lld\", &n);\r\n        long long arr[n];\r\n\r\n        for (int j = 0; j < n; j++)\r\n        {\r\n            scanf(\"%lld\", &arr[j]);\r\n        }\r\n\r\n        long long m;\r\n        scanf(\"%lld\", &m);\r\n        long long arr1[m];\r\n\r\n        for (int j = 0; j < m; j++)\r\n        {\r\n            scanf(\"%lld\", &arr1[j]);\r\n        }\r\n\r\n        long long sum = 0;\r\n\r\n        for (int j = 0; j < m; j++)\r\n        {\r\n            sum = sum + arr1[j];\r\n        }\r\n\r\n        long long k1 = (sum % n);\r\n\r\n        printf(\"%lld\\n\", arr[k1]);\r\n    }\r\n}"}
{"similarity_score": 0.9971014492753624, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1a4ddbaffda474475080dcd952c882f8", "bug_code_uid": "65802cf8d8166807f8049f6fb84718ac", "src_uid": "a37c3f2828490c70301b5b5deeee0f88", "apr_id": "fd0d3c2f1d8e9913eac1b7bae1d2608a", "difficulty": 800, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n,i;\nint a[5001];\nint main()\n{\n    scanf (\"%d\",&n);\n    for (i=0;i<=n;i++)\n      {\n          scanf(\"%d\",&a[i]);\n         \n      }\n      for (i=1;i<=n;i++)\n      {\n          if( a[a[a[i]]] ==i) \n          {\n              printf(\"YES\");\n              return 0;\n          }\n      }\n      \n      printf(\"NO\");\n      return 0;\n}", "fixed": "#include<stdio.h>\nint n,i;\nint a[5001];\nint main()\n{\n    scanf (\"%d\",&n);\n    for (i=1;i<=n;i++)\n      {\n          scanf(\"%d\",&a[i]);\n         \n      }\n      for (i=1;i<=n;i++)\n      {\n          if( a[a[a[i]]] ==i) \n          {\n              printf(\"YES\");\n              return 0;\n          }\n      }\n      \n      printf(\"NO\");\n      return 0;\n}"}
{"similarity_score": 0.9871287128712871, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e25e1e0102a066fabc7ee5d3b7b2d4c4", "bug_code_uid": "66b41d99a14d9755da461f6651365c88", "src_uid": "6e0dafeaf85e92f959c388c72e158f68", "apr_id": "02372057d01d2daf5275120f711d0cdb", "difficulty": 1000, "tags": ["constructive algorithms", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int arr[109][109],i,j,cntrep=0,cntdem=0,n,rep,dem,a,b;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    if(n%2==0){\n        rep=n/2; dem=n/2;\n    }\n    else{\n        rep=n/2; dem=n-(n/2);\n    }\n    cntrep=1;cntdem=1;\n\n    for(i=1;i<=a;i++){\n        for(j=1;j<=b;j++){\n            if(((i%2!=0)&&(j%2!=0)) || ((i%2==0)&&(j%2==0))){\n                if(cntdem<=dem){\n                    arr[i][j]=1+((cntdem-1)*2);\n                    cntdem++;\n                }\n                else\n                    arr[i][j]=0;\n\n            }\n            else{\n                if(cntrep<=rep){\n                    arr[i][j]=2+((cntrep-1)*2);\n                    cntrep++;\n                }\n                else\n                    arr[i][j]=0;\n            }\n        }\n    }\n    if((cntdem<dem)||(cntrep<rep))\n         printf(\"-1\\n\");\n    else{\n        for(i=1;i<=a;i++){\n            for(j=1;j<=b;j++)\n                printf(\"%d \",arr[i][j]);\n            printf(\"\\n\");\n        }\n    }\n\n return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int arr[109][109],i,j,cntrep=0,cntdem=0,n,rep,dem,a,b;\n    scanf(\"%d %d %d\",&n,&a,&b);\n    if(n%2==0){\n        rep=n/2; dem=n/2;\n    }\n    else{\n        rep=n/2; dem=n-(n/2);\n    }\n    cntrep=1;cntdem=1;\n\n    for(i=1;i<=a;i++){\n        for(j=1;j<=b;j++){\n            if(((i%2!=0)&&(j%2!=0)) || ((i%2==0)&&(j%2==0))){\n                if(cntdem<=dem){\n                    arr[i][j]=1+((cntdem-1)*2);\n                    cntdem++;\n                }\n                else\n                    arr[i][j]=0;\n\n            }\n            else{\n                if(cntrep<=rep){\n                    arr[i][j]=2+((cntrep-1)*2);\n                    cntrep++;\n                }\n                else\n                    arr[i][j]=0;\n            }\n        }\n    }\n    if((cntdem!=(dem+1))||(cntrep!=(rep+1)))\n         printf(\"-1\\n\");\n    else{\n        for(i=1;i<=a;i++){\n            for(j=1;j<=b;j++)\n                printf(\"%d \",arr[i][j]);\n            printf(\"\\n\");\n        }\n    }\n\n return 0;\n}\n"}
{"similarity_score": 0.56, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "3050be6ffb5d39669da215380c7430fa", "bug_code_uid": "667917d422334ddf3c159e89f0f4b873", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "f5521afdd85fedc9af941e1533046536", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\n\nint main ()\n{\n    int n,aux,points,resu=0,i=1;\n    scanf (\"%d\",&n);\n    aux = 10001;\n    for ( ; i<=n; i++ )\n    {\n        scanf (\"%d\",&points);\n        if (points>aux)\n            resu++;\n        aux=points;\n    }\n    \n    printf (\"%d\",resu);\n    return 0;\n    \n}\n", "fixed": "# include <stdio.h>\n\nint main ()\n{\n    int n,aux,points,point_mayor,point_menor,amazing=0,i=1;\n    scanf (\"%d\",&n);\n    scanf (\"%d\",&points);\n    point_mayor = points;\n    point_menor = points;\n    for ( ; i<n; i++ )\n    {\n        scanf (\"%d\",&points);\n        if (points>point_mayor)\n        {\n            amazing++;\n            point_mayor = points;\n        }\n        if (points<point_menor)\n        {\n            amazing++;\n            point_menor = points;\n        }\n        \n    }\n    \n    printf (\"%d\",amazing);\n    return 0;\n    \n}\n"}
{"similarity_score": 0.8617449664429531, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "626122c7babede655ce63a3c7c1cc578", "bug_code_uid": "716ad58a26a023ac6253dcd0fa09bb7e", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "c6925c92c77f4e11cfa3a29946b83451", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong long int n,v,i,o,h,ok,a,nbs=0;\n     long long int t[100000];\n\tscanf(\"%I64d %I64d\\n\",&n,&v);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d \",&o);\n\t\tok=0;\n\t\tfor(h=0;h<o;h++){\n\t\t\tscanf(\"%I64d \",&a);\n\t\t\tif(a<v)ok=1;\n\t\t}\n\t\tif(ok==1){\n\t\t t[nbs]=i+1;\n\t\t nbs++;\n    \t}\n\t}\n\tif(ok==0)printf(\"0\");\n\tprintf(\"%I64d\\n\",nbs);\n\tfor(i=0;i<nbs;i++)printf(\"%I64d \",t[i]);\n}", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int n,v,i,o,h,ok,a,nbs=0;\n     long long int t[100000];\n\tscanf(\"%I64d %I64d\\n\",&n,&v);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d \",&o);\n\t\tok=0;\n\t\tfor(h=0;h<o;h++){\n\t\t\tscanf(\"%I64d \",&a);\n\t\t\tif(a<v)ok=1;\n\t\t}\n\t\tif(ok==1){\n\t\t t[nbs]=i+1;\n\t\t nbs++;\n    \t}\n\t}\n\tprintf(\"%I64d\\n\",nbs);\n\tif(nbs!=0)\n\tfor(i=0;i<nbs;i++)printf(\"%I64d \",t[i]);\n}"}
{"similarity_score": 0.9910854745673833, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2f67ae3a316af2f17861942396ec7bb8", "bug_code_uid": "7c3abe80a13774ee32648e7c0da610d7", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "f6f88e55d3689ade567239dffa392720", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 1; i <= t; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        int l = arr[0], m = arr[n - 1];\r\n        int g = 0, p = 0, u = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (arr[i] > arr[i + 1])\r\n            {\r\n                g++;\r\n                break;\r\n            }\r\n        }\r\n        if (g == 0)\r\n        {u++;\r\n            printf(\"%d\\n\", 0);\r\n        }\r\n        if ((g != 0) && (arr[0] == 1 || arr[n - 1] == n))\r\n        {\r\n            p++;\r\n            printf(\"1\\n\");\r\n        }\r\n        if (arr[0] == n && arr[n - 1] == 1)\r\n        {\r\n            u++;\r\n            printf(\"3\\n\");\r\n        }\r\n        if (((u == 0) && (p == 0)))\r\n        {\r\n            printf(\"%d\\n\", 2);\r\n        }\r\n    }\r\n    return 0;", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 1; i <= t; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        int l = arr[0], m = arr[n - 1];\r\n        int g = 0, p = 0, u = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (arr[i] > arr[i + 1])\r\n            {\r\n                g++;\r\n                break;\r\n            }\r\n        }\r\n        if (g == 0)\r\n        {\r\n            u++;\r\n            printf(\"%d\\n\", 0);\r\n        }\r\n        if ((g != 0) && (arr[0] == 1 || arr[n - 1] == n))\r\n        {\r\n            p++;\r\n            printf(\"1\\n\");\r\n        }\r\n        if (arr[0] == n && arr[n - 1] == 1)\r\n        {\r\n            u++;\r\n            printf(\"3\\n\");\r\n        }\r\n        if (((u == 0) && (p == 0)))\r\n        {\r\n            printf(\"%d\\n\", 2);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.6176762661370407, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "a8ede8e9f02612f2e649c0b84fe6d9bc", "bug_code_uid": "1fbe17b9fc4b7eb7489ce0ee87fbdbd1", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "831a95f26bef62a66a493427263c2c6f", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char num[100010];\n    scanf(\"%s\",num);\n    int l=strlen(num),i;\n    for(i=l-2; i>=0; i--)\n    {\n        if(!((num[i]-'0')%2))\n        {\n            char c=num[i];\n            num[i]=num[l-1];\n            num[l-1]=c;\n            printf(\"%s\\n\",num);\n            return 0;\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char num[100010],c;\n    scanf(\"%s\",num);\n    int l=strlen(num),i=0;\n    while(i<l)\n    {\n        if(num[i]<num[l-1] && !((num[i]-'0')%2))\n        {\n            c=num[i];\n            num[i]=num[l-1];\n            num[l-1]=c;\n            printf(\"%s\\n\",num);\n            return 0;\n        }\n        i++;\n    }\n    i--;\n    while(i>=0)\n    {\n        if(!((num[i]-'0')%2))\n        {\n            c=num[i];\n            num[i]=num[l-1];\n            num[l-1]=c;\n            printf(\"%s\\n\",num);\n            return 0;\n        }\n        i--;\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9959623149394348, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1c48933b3487c74c0521c9ca8b9d07af", "bug_code_uid": "034d95c41bbfa93a62f5537e234395b4", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "12eae48b8330188c0984ec8cb79a4753", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n  int t,n,arr[100000],i,sum,j;\r\n  scanf(\"%d\",&t);\r\n  for(j=0;j<t;j++)\r\n  {\r\n    sum=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      scanf(\"%d\",&arr[i]);\r\n      sum+=arr[i];\r\n    }\r\n    if(sum<=0)\r\n    {\r\n      printf(\"1\\n\");\r\n    }\r\n    else{\r\n      printf(\"%d\\n\",(abs)(sum-n));\r\n    }\r\n  }\r\n  return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n  int t,n,arr[100000],i,sum,j;\r\n  scanf(\"%d\",&t);\r\n  for(j=0;j<t;j++)\r\n  {\r\n    sum=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n      scanf(\"%d\",&arr[i]);\r\n      sum+=arr[i];\r\n    }\r\n    if(sum<n)\r\n    {\r\n      printf(\"1\\n\");\r\n    }\r\n    else{\r\n      printf(\"%d\\n\",(abs)(sum-n));\r\n    }\r\n  }\r\n  return 0;\r\n}"}
{"similarity_score": 0.7582846003898636, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e1e3e54a3ec378c17689e753ae953d82", "bug_code_uid": "9d23c62f54e0a09815d1336f2c216ddf", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "ab3420fc737ba663ea09ea291a34afbc", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int a,p,q,r,s;\n    scanf(\"%ld\",&a);\n    p=(a/3);\n    q=p;\n    r=a-(p+q);\n    if(p%3==0 && q%3==0 && r%3==0)\n        printf(\"%ld %ld %ld\\n\",p+2,q-1,r-1);\n    else if(p%3==0 && q%3==0 && r%3!=0)\n        printf(\"%ld %ld %ld\\n\",p+1,q-1,r);\n    else if(p%3!=0 && q%3!=0 && r%3==0)\n        printf(\"%ld %ld %ld\\n\",p-1,q-1,r+2);\n    else\n        printf(\"%ld %ld %ld\\n\",p,q,r);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long int a,p,q,r,s;\n    scanf(\"%ld\",&a);\n    if(a%3==0)\n    {\n        p=(a/3);\n        q=p;\n        r=a-(p+q);\n        if(p%3==0 && q%3==0 && r%3==0)\n            printf(\"%ld %ld %ld\\n\",p+2,q-1,r-1);\n        else if(p%3==0 && q%3==0 && r%3!=0)\n            printf(\"%ld %ld %ld\\n\",p+1,q-1,r);\n        else if(p%3!=0 && q%3!=0 && r%3==0)\n            printf(\"%ld %ld %ld\\n\",p-1,q-1,r+2);\n        else\n            printf(\"%ld %ld %ld\\n\",p,q,r);\n    }\n    else\n    {\n        p=1;\n        q=2;\n        r=a-(p+q);\n        printf(\"%ld %ld %ld\\n\",p,q,r);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.25225225225225223, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "1bd0694fb88cef85c7c36fd0e4ca9ba0", "bug_code_uid": "b575a0475e604ac18d65f8ac71baaba7", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "b0fafc10343557919c38fce8e233f827", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nmain()\n{\n    long x=1,y,n,k,b=0;\n\n    scanf(\"%ld%ld%ld\",&y,&k,&n);\n\n\n    if((n-y)<1)\n        printf(\"%d\",-1);\n    else\n    {\n        while((x+y)<=n)\n        {\n            if((x+y)%k==0)\n            {\n                b=1;\n                printf(\"%d \",x);\n            }\n            x++;\n        }\n        if(b=0)\n            printf(\"%d\",-1);\n    }\n\n    return 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n\nmain()\n{\n    long x,y,n,k,razon,b=0,cont=1;\n\n    scanf(\"%ld%ld%ld\",&y,&k,&n);\n\n    razon=k;\n\n    while((x+y)<=n)\n    {\n        x=razon-y;\n        if(razon<=n && (x+y)%k==0 && x>0)\n        {\n            printf(\"%ld \",x);\n            b=1;\n        }\n        razon=k*++cont;\n    }\n\n    if(b==0)\n        printf(\"%d\",-1);\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9972677595628415, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "84f9b674aedf6f1e78ae7b4e74e96efe", "bug_code_uid": "7beb0f65571c5f03ad09170ae0228d63", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "54a83f6b81536799a3be11f27d7a0f2c", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char *argv[]) {\n\tlong l,d,n,g,r,i,e;\n\tscanf(\"%d\",&n);\n\tlong A[n+1];\n\tfor(i=1;i<=n;i++){scanf(\"%d%d%d\",&l,&r,&d);\n\tg=r/d;\n\t\n\tif(l>d) \t\tprintf(\"%d\\n\",d);\n\telse \t\tprintf(\"%ld\",e=d*(g+1));\n\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char *argv[]) {\n\tlong l,d,n,g,r,i,e;\n\tscanf(\"%d\",&n);\n\tlong A[n+1];\n\tfor(i=1;i<=n;i++){scanf(\"%d%d%d\",&l,&r,&d);\n\tg=r/d;\n\t\n\tif(l>d) \t\tprintf(\"%d\\n\",d);\n\telse \t\tprintf(\"%ld\\n\",e=d*(g+1));\n\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9724770642201835, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5eb21d0848be1bca6efb0952ae341aa9", "bug_code_uid": "45132fb73cea57d42f12b253a2182011", "src_uid": "895d5850e420a36ae3b5f0a50e359423", "apr_id": "0ac9c9323697299f03677457bdbf7527", "difficulty": 1600, "tags": ["binary search", "greedy"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint g(int x,int*a,int*a1,int l){\r\n\t\r\n\tfor(int l1=0;l1<l;l1++)a1[l1]=a[l1];\r\n\tfor(int l1=l-1;l1>=2;l1--){\r\n\t\tif(a1[l1]<x)return 0;\r\n\t\tint m=a1[l1]-x;\r\n\t\tif(m>a[l1]-a[l1]%3)m=a[l1]-a[l1]%3;\r\n\t\ta1[l1-1]=a1[l1-1]+m/3;\r\n\t\ta1[l1-2]=a1[l1-2]+2*m/3;\r\n\t}\r\n\tif(a1[0]>=x&&a1[1]>=x)return 1;\r\n\treturn 0;\r\n}\r\nint s(int a1,int a2,int*a,int l){\r\n\tif(a1==a2)return a1;\r\n\tint*a0=malloc(800010);\r\n\tint t=g((a1+a2)/2+1,a,a0,l);\r\n\tfree(a0);\r\n\tif(t==0)s(a1,(a1+a2)/2,a,l);\r\n\telse s((a1+a2)/2+1,a2,a,l);\r\n}\r\nint main(){\r\nint n=0;\r\nscanf(\"%d\",&n);\r\nfor(int n1=0;n1<n;n1++){\r\n\t\r\nint l;\r\nscanf(\"\\n%d\",&l);\r\nint*a=malloc(800010);\r\nfor(int l1=0;l1<l;l1++){\r\n\tscanf(\"%d\",a+l1);}\r\nint m=s(0,1e9,a,l);\r\nprintf(\"%d\",m);\t\r\n\r\nif(n1!=n-1)printf(\"\\n\");\r\n}\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint g(int x,int*a,int*a1,int l){\r\n\t\r\n\tfor(int l1=0;l1<l;l1++)a1[l1]=a[l1];\r\n\tfor(int l1=l-1;l1>=2;l1--){\r\n\t\tif(a1[l1]<x)return 0;\r\n\t\tint m=a1[l1]-x;\r\n\t\tif(m>a[l1])m=a[l1];\r\n\t\ta1[l1-1]=a1[l1-1]+m/3;\r\n\t\ta1[l1-2]=a1[l1-2]+2*(m/3);\r\n\t}\r\n\tif(a1[0]>=x&&a1[1]>=x)return 1;\r\n\treturn 0;\r\n}\r\nint s(int a1,int a2,int*a,int l){\r\n\tif(a1==a2)return a1;\r\n\tint*a0=malloc(800010);\r\n\tint t=g((a1+a2)/2+1,a,a0,l);\r\n\tfree(a0);\r\n\tif(t==0)s(a1,(a1+a2)/2,a,l);\r\n\telse s((a1+a2)/2+1,a2,a,l);\r\n}\r\nint main(){\r\nint n=0;\r\nscanf(\"%d\",&n);\r\nfor(int n1=0;n1<n;n1++){\r\n\t\r\nint l;\r\nscanf(\"\\n%d\",&l);\r\nint*a=malloc(800010);\r\nfor(int l1=0;l1<l;l1++){\r\n\tscanf(\"%d\",a+l1);}\r\nint m=s(0,1e9,a,l);\r\nprintf(\"%d\",m);\t\r\nfree(a);\r\nif(n1!=n-1)printf(\"\\n\");\r\n}\r\n}\r\n\r\n"}
{"similarity_score": 0.24511278195488723, "equal_cnt": 18, "replace_cnt": 15, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "ef36805997a12e9535dcb771770ef262", "bug_code_uid": "fad7d128849172cb1ff36c70e0c2a49b", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "76c296d0f3095cad0389ad76114a5d9f", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <string.h>\n#include <stdio.h>\nint main()\n{\n     int n;\n     scanf(\"%d\",&n);\n     char ch[n][n];\n     int i,j,k,l;\n     for(i=0;i<n;i++)\n     {\n          for(j=0;j<n;j++)\n          {\n               scanf(\"%c\",&ch[i][j]);\n          }\n     }\n     char q=ch[0][1];\n     k=0,l=0;\n     int o=0;\n      for(i=0;i<n;i++)\n     {\n          for(j=0;j<n;j++)\n          {\n               if(i==j || i+j==(n-1))\n               {\n               if(ch[i][j]==ch[i][n-j-1])\n               k++;\n               \n               }\n               else\n               {\n                    if(ch[i][j]==q)\n                    o++;\n                    \n               }\n          }\n         \n     }\n     if((k+o)==(n*n))\n     printf(\"YES\");\n     else\n     printf(\"NO\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    char a[n][n];\n    for(i=0;i<n;i++)scanf(\"%s\",a[i]);\n    int flag=0;\n    if(a[0][0]==a[0][1]){\n        printf(\"NO\");\n        return 0;\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            if(i==j||(i+j)==(n-1)){\n                if(a[i][j]!=a[0][0]){\n                        flag=1;break;}\n            }\n            else {\n                if(a[i][j]!=a[0][1]){\n                        flag=1;break;}\n            }\n        }\n    }\n    if(flag)printf(\"NO\");\n    else printf(\"YES\");\n    return 0;\n}"}
{"similarity_score": 0.9758162031438936, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "86f11b0f6a8622a86724fe338703987e", "bug_code_uid": "d295befe97e0a3836260d7a40ca72c86", "src_uid": "8d5fe8eee1cce522e494231bb210950a", "apr_id": "d17b19a8b6eebee2716a1b2400241a9c", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define lli long long int\nint main()\n{\n    lli n,k;\n    scanf(\"%lld %lld\",&n,&k);\n\n    lli arr[n+1];\n    arr[0]=0;\n    lli i,j,max=0;\n    for(i=1;i<=n;i++)\n        {\n        scanf(\"%lld\",&arr[i]);\n        if(max<arr[i])\n        {\n                        max=arr[i];\n        }\n        }\n\n\n\n    if(k>=n)\n    {\n        printf(\"%lld\\n\",max);\n        return 0;\n    }\n    else\n        {\n            i=1;\n            j=i+1;\n            lli count=0;\n\n    while(count!=k)\n    {\n        if(arr[i]>arr[j])\n        {\n            count++;\n        }\n        else\n            {\n            i=j;\n            count=0;\n            }\n            if(i==n)\n            i=1;\n           if(j>=n)\n           j=1;\n           else if(j==i)\n           j=i+1;\n          else\n            j++;\n    }\n\n    printf(\"%lld\\n\",arr[i]);\n        }\n\n     return 0;\n}\n", "fixed": "#include<stdio.h>\n#define lli long long int\nint main()\n{\n    lli n,k;\n    scanf(\"%lld %lld\",&n,&k);\n\n    lli arr[n+1];\n    arr[0]=0;\n    lli i,j,max=0;\n    for(i=1;i<=n;i++)\n        {\n        scanf(\"%lld\",&arr[i]);\n        if(max<arr[i])\n        {\n                        max=arr[i];\n        }\n        }\n\n\n    if(k>=n)\n    {\n        printf(\"%lld\\n\",max);\n        return 0;\n    }\n    else\n        {\n            i=1;\n            j=i+1;\n            lli count=0;\n\n    while(count!=k)\n    {\n        if(arr[i]>arr[j])\n        {\n            count++;\n        }\n        else\n            {\n            i=j;\n            count=1;\n            }\n\n           if(j>=n)\n           j=1;\n           else if(j==i)\n           j=i+1;\n          else\n            j++;\n    }\n\n    printf(\"%lld\\n\",arr[i]);\n        }\n\n     return 0;\n}\n"}
{"similarity_score": 0.4251748251748252, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "3fb3bd2ae80ff505e9c30b97234a3224", "bug_code_uid": "7dc4404efa9905af6a1f8c2a1377d47b", "src_uid": "2c7add49d423de44a2bc09de56ffacf1", "apr_id": "9d750eaf3ea0c7e0e2c3e98a3170aebb", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tlong int b,c,d,e,n;\r\n\tchar a[8][8];\r\n\tscanf(\"%ld\",&n);\r\n\twhile(n--){\r\n\t\tfor(b=0;b<8;b++){\r\n\t\t\tscanf(\"%s\",&a[b]);\r\n\t\t}\r\n\t\tb=c=0;\r\n\t\twhile(b<8){\r\n\t\t\td=e=0;\r\n\t\t\twhile(c<8){\r\n\t\t\t\tif(a[b][c]=='B') d++;\r\n\t\t\t\tif(a[b][c]=='R') e++;\r\n\t\t\t\tc++;\r\n\t\t\t}\r\n\t\t\tif(d==8){\r\n\t\t\t\tprintf(\"B\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(e==8){\r\n\t\t\t\tprintf(\"R\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tc=0;\r\n\t\t\tb++;\r\n\t\t}\r\n\t\tb=c=0;\r\n\t\twhile(c<8){\r\n\t\t\td=e=0;\r\n\t\t\twhile(b<8){\r\n\t\t\t\tif(a[b][c]=='B') d++;\r\n\t\t\t\tif(a[b][c]=='R') e++;\r\n\t\t\t\tb++;\r\n\t\t\t}\r\n\t\t\tif(d==8){\r\n\t\t\t\tprintf(\"B\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(e==8){\r\n\t\t\t\tprintf(\"R\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tb=0;\r\n\t\t\tc++;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tlong int b,c,d,e,f,n;\r\n\tchar a[8][8];\r\n\tscanf(\"%ld\",&n);\r\n\twhile(n--){\r\n\t\tfor(b=0;b<8;b++){\r\n\t\t\tscanf(\"%s\",&a[b]);\r\n\t\t}\r\n\t\tb=c=f=0;\r\n\t\twhile(b<8){\r\n\t\t\te=0;\r\n\t\t\twhile(c<8){\r\n\t\t\t\tif(a[b][c]=='R') e++;\r\n\t\t\t\tc++;\r\n\t\t\t}\r\n\t\t\tif(e==8){\r\n\t\t\t\tf=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tc=0;\r\n\t\t\tb++;\r\n\t\t}\r\n\t\tif(f==1) printf(\"R\\n\");\r\n\t\telse printf(\"B\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n//#include <stdio.h>\r\n//int main() {\r\n //int i,b,r,n,j,t;\r\n //char s[8][8],q[2];\r\n //scanf(\"%d\",&t);\r\n //while(t) { q[1]='\\0';\r\n //\tfor(i=0; i<8; i++) scanf(\"%s\",s[i]);\r\n //\tb=0;\r\n //   for(i=0; i<8; i++) { r=0; \r\n // \tfor(j=0; j<8; j++) {\r\n //   \t\tif(s[i][j]=='R') r++; }\r\n//\t\t\tif(r==8) {b=1; break;}\r\n//\t\t\t}\r\n//\tif(b==1) printf(\"R\\n\"); else printf(\"B\\n\");\r\n//\tt--;}\r\n//}\r\n"}
{"similarity_score": 0.924892703862661, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "40e6430e94228bc1f9c71c3fc0bd3a41", "bug_code_uid": "d13716606376d93300de76e53179b71a", "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842", "apr_id": "a8efef929f3bcfe234988aaaaa993d96", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&a, &b);\n        if(a<=b)\n            if(a==b)\n                printf(\"0\\n\");\n            else if((b-a)%2==0)\n                printf(\"2\\n\");\n            else\n                printf(\"1\\n\");\n    }\n    if(a>b)\n    {\n        if((a-b)%2==0)\n            printf(\"1\\n\");\n        else\n            printf(\"2\\n\");\n    }\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&a, &b);\n        if(a<=b)\n        {\n            if(a==b)\n                printf(\"0\\n\");\n            else if((b-a)%2==0)\n                printf(\"2\\n\");\n            else\n                printf(\"1\\n\");\n        }\n\n        if(a>b)\n        {\n            if((a-b)%2==0)\n                printf(\"1\\n\");\n            if((a-b)%2!=0)\n                printf(\"2\\n\");\n        }\n\n    }\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9632, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c3af442fee718863b14b36658a8d2733", "bug_code_uid": "1ad6ac0c07f4a4eab3a545fc5459907b", "src_uid": "1d8937ab729edad07b3b23b1927f7e11", "apr_id": "1668565f68a32c0088105ce0def4158d", "difficulty": 1800, "tags": ["dp", "hashing", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define REPi(i,a,b) for(i=a-1;i>=b;i--)\n#define rep(i,b) REP(i,1,b+1)\n#define repi(i,b) REPi(i,b,0)\n#define si(n) scanf(\"%d\",&n)\n#define sort(arrr,n) qsort(arrr,n,sizeof(int),compare)\n#define min(a,b) (a<b?a:b)\n#define pi(n) printf(\"%d\\n\",n)\nint a[5001][5001];\nint is[5001][5001];\nchar s[5001];\nint main()\n{\n    int n,t,i,j,x,y,k;\n    scanf(\"%s\",s);\n    n=strlen(s);\n    for(i=1;i<=n;i++)\n\tfor(j=i;j>0;j--)\n\t{\n\t    if(j==i)a[i][j]=1;\n\t    else \n\t    {\n\t\tif(s[i-1]!=s[j-1])a[i][j]=0;\n\t\telse\n\t\t{\n\t\t    if(i-j==1)a[i][j]=1;\n\t\t    else\n\t\t    {\n\n\t\t\tif(a[i-1][j+1])a[i][j]=1;\n\t\t\telse a[i][j]=0;\n\t\t    }\n\t\t}\n\t    }\n\t}\n    rep(i,n)\n\tfor(j=i;j>0;j--)\n\t{\n\t    if(i==j)is[i][j]=1;\n\t    else\n\t    {\n\t\tis[i][j]=is[i-1][j];\n\t\tfor(k=j;k<=i;k++)\n\t\t    is[i][j]+=a[i][k];\n\t    }\n\t}\n\n    si(t);\n    while(t--)\n    {\n\tsi(x);\n\tsi(y);\n\tpi(is[y][x]);\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define REPi(i,a,b) for(i=a-1;i>=b;i--)\n#define rep(i,b) REP(i,1,b+1)\n#define repi(i,b) REPi(i,b,0)\n#define si(n) scanf(\"%d\",&n)\n#define sort(arrr,n) qsort(arrr,n,sizeof(int),compare)\n#define min(a,b) (a<b?a:b)\n#define pi(n) printf(\"%d\\n\",n)\nint a[5001][5001];\nint is[5001][5001];\nchar s[5001];\nint main()\n{\n    int n,t,i,j,x,y,k;\n    scanf(\"%s\",s);\n    n=strlen(s);\n    for(i=1;i<=n;i++)\n\tfor(j=i;j>0;j--)\n\t{\n\t    if(j==i)a[i][j]=1;\n\t    else \n\t    {\n\t\tif(s[i-1]!=s[j-1])a[i][j]=0;\n\t\telse\n\t\t{\n\t\t    if(i-j==1)a[i][j]=1;\n\t\t    else\n\t\t    {\n\n\t\t\tif(a[i-1][j+1])a[i][j]=1;\n\t\t\telse a[i][j]=0;\n\t\t    }\n\t\t}\n\t    }\n\t}\n    rep(i,n)\n\tfor(j=i;j>0;j--)\n\t{\n\t    if(i==j)is[i][j]=1;\n\t    else\n\t    {\n\t\tis[i][j]=is[i-1][j]+is[i][j+1]-is[i-1][j+1]+a[i][j];\n\t    }\n\t}\n\n    si(t);\n    while(t--)\n    {\n\tsi(x);\n\tsi(y);\n\tpi(is[y][x]);\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9576174112256587, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b86ed6707a3e432e1aea33ac3567c6fd", "bug_code_uid": "16d6f1d1563a0244a98e49af3b5ebec7", "src_uid": "1a6881aeb197b8ed429f46850eb27b9c", "apr_id": "296fe92895cddb63096c28202065b28f", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    long long int *n = (long long int *)malloc(t*sizeof(int));\r\n    for (int i=0; i<t; i++){\r\n        scanf(\"%lld\",&n[i]);\r\n    }\r\n    for (int i=0; i<t; i++){\r\n        int max = 0;\r\n        while(n[i]!=0){\r\n            if(n[i]%10 > max) max = n[i]%10;\r\n            n[i]=n[i]/10;\r\n        }\r\n        printf(\"%d\\n\",max);\r\n    }\r\n    \r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    int t;\r\n    long long int n[1000];\r\n    scanf(\"%d\",&t);\r\n    // long long int *n = (long long int *)malloc(t*sizeof(int));\r\n    for (int i=0; i<t; i++){\r\n        scanf(\"%lld\",&n[i]);\r\n    }\r\n    for (int i=0; i<t; i++){\r\n        int max = 0;\r\n        while(n[i]!=0){\r\n            if(n[i]%10 > max) max = n[i]%10;\r\n            n[i]=n[i]/10;\r\n        }\r\n        printf(\"%d\\n\",max);\r\n    }\r\n}"}
{"similarity_score": 0.9968051118210862, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "72ae271a037ca21b1239c372cc180fd7", "bug_code_uid": "a397446aa762717b044163aa3f08be58", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "be177c0d003ed0ed1ddf7c996b7df33f", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int tc,i,n;\n    long long ara[100000];\n    scanf(\"%d\",&tc);\n    for(i=0;i<tc;i++){\n        scanf(\"%I64d\",&ara[i]);\n        if(ara[i]==1){\n            n=1;\n        }\n    }\n    if(n){\n        printf(\"-1\\n\");\n        return 0;\n    }\n    else\n        printf(\"1\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n    int tc,i,n=0;\n    long long ara[100000];\n    scanf(\"%d\",&tc);\n    for(i=0;i<tc;i++){\n        scanf(\"%I64d\",&ara[i]);\n        if(ara[i]==1){\n            n=1;\n        }\n    }\n    if(n){\n        printf(\"-1\\n\");\n        return 0;\n    }\n    else\n        printf(\"1\\n\");\n    return 0;\n}"}
{"similarity_score": 0.13394919168591224, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "71e3c8e47ca119b94e784f59f8b6b460", "bug_code_uid": "7763f7adbf200d29bc384a32af2a5184", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "1ba58881e4e93ed43c1409e9734e17e6", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n;\n\tint m;\n\tint x;\n\tint g = 0;\nscanf(\"%d\",&n);\nint a[n];\n\n\nfor (m = 0; m == n; m++) {\nscanf(\"%d\",&x);\na[m] = x;\n\tif (x == 110 && x == 011){\n\tg = g + 1;\n}\n\telse {\n\tg = g + 0;\n\t}\n}\nprintf(\"%d\",g);\nreturn(0);\n}", "fixed": "#include<stdio.h>\n\nint getresult();\n\nint getresult(){\n    int i;\n    int a,b,c;\n\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        scanf(\"%d\",&c);\n\n        int z;\n        z = a+b+c;\n        int k = 0;\n        if(z >= 2){\n            k = 1;\n        }\n        else{\n            k = 0;\n        }\n     return k;\n}\nint main(){\n    int lim;\n    int n;\n    scanf(\"%d\",&lim);\n\n    int g[ lim -1 ];\n\n       for(n = 1; n <= lim; n++){\n        g[ n-1 ] = getresult();\n       }\n\n       int q, all = 0, all1;\n       for(q = 0; q <= lim - 1; q++){\n        all = all + g[q];\n       }\n       printf(\"%d\", all);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n"}
{"similarity_score": 0.976460331299041, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6d9794315cf9c23295ee0207df28022b", "bug_code_uid": "f0b169d65a4358fe6836d492e01d6cab", "src_uid": "162fa942bc6eeb5164b19598da2f8bef", "apr_id": "56f99aed07413ad955216ab499f4e1ff", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define maX(a,b)    ( (a) > (b) ? (a) : (b))\nint main(){\n    int a,b,n,i,c=1,arr[1000];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        if(i==0) arr[i]=maX(a,b);\n        else{\n            if(a>b && a<=arr[i-1]) arr[i]=a;\n            else if(b>a && b<=arr[i-1]) arr[i]=b;\n            else if(a<=arr[i-1]) arr[i]=a;\n            else if(b<=arr[i-1]) arr[i]=b;\n            else {\n                c=0;\n                break;\n            }\n        }\n    }\n    if(c==1) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#define maX(a,b)    ( (a) > (b) ? (a) : (b))\nint arr[100005];\nint main(){\n    int a,b,n,i,c=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        if(i==0) arr[i]=maX(a,b);\n        else{\n            if(a>b && a<=arr[i-1]) arr[i]=a;\n            else if(b>a && b<=arr[i-1]) arr[i]=b;\n            else if(a<=arr[i-1]) arr[i]=a;\n            else if(b<=arr[i-1]) arr[i]=b;\n            else {\n                c=0;\n                break;\n            }\n        }\n    }\n    if(c==1) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    return 0;\n}"}
{"similarity_score": 0.8864786695589298, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "7f8ac039615f484b288fd6d267cc5874", "bug_code_uid": "4210775be4317a511463d018d7937806", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "51a7d12414afa01a44595080ba18c5bf", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,m,i=0;\n    float a,b,min;\n    float price_kg,all_price_kg[10000],answ;\n    scanf(\"%d %d\",&n,&m);\n    while(n>0)\n    {\n        scanf(\"%f %f\",&a,&b);\n        price_kg=a/b;\n        //printf(\"a/b=%g\\n\",price_kg);\n        all_price_kg[i]=price_kg;\n        i++;\n        n--;\n    }\n    int j;\n    /*for(j=0;j<i;j++)\n        printf(\"%f  \",all_price_kg[j]);\n    printf(\"\\n\");*/\n    for(j=0;j<i-1;j++)\n    {\n        if(all_price_kg[j]<all_price_kg[j+1])\n            min=all_price_kg[j];\n        else min=all_price_kg[j+1];\n    }\n    //printf(\"min=%f\\n\",min);\n    answ=min*m;\n    printf(\"%f\",answ);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,m,i=0;\n    float a,b,min;\n    float price_kg,all_price_kg[100000],answ;\n    scanf(\"%d %d\",&n,&m);\n    while(n>0)\n    {\n        scanf(\"%f %f\",&a,&b);\n        price_kg=a/b;\n        //printf(\"a/b=%g\\n\",price_kg);\n        all_price_kg[i]=price_kg;\n        i++;\n        n--;\n    }\n    int j;\n    /*for(j=0;j<i;j++)\n        printf(\"%f  \",all_price_kg[j]);\n    printf(\"\\n\");*/\n    min=all_price_kg[0];\n    for(j=0;j<i;j++)\n    {\n        if(min>all_price_kg[j])\n            min=all_price_kg[j];\n        //printf(\"local min=%f\")\n    }\n    //printf(\"min=%f\\n\",min);\n    answ=min*m;\n    printf(\"%f\",answ);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9967213114754099, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "46588bd508237a6954fd82ea78b071b3", "bug_code_uid": "34b3e5cb2b67811656baa809d0800066", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "6cb1c7c7685f62d4a531297ffb73f3db", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    long m,y,n,k,c=0;\n    scanf(\"%d\",&y);\n    scanf(\"%d\",&k);\n    scanf(\"%d\",&n);\n    for(m=k*2;m<=n;){\n        if ((m-y)>0 && m%k==0){\n            printf(\"\\n%d\",m-y);\n            c=1;\n        }\n        m+=k;\n    }\n    if (c==0){\n        printf(\"\\n-1\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    long m,y,n,k,c=0;\n    scanf(\"%d\",&y);\n    scanf(\"%d\",&k);\n    scanf(\"%d\",&n);\n    for(m=k;m<=n;){\n        if ((m-y)>0 && m%k==0){\n            printf(\"\\n%d\",m-y);\n            c=1;\n        }\n        m+=k;\n    }\n    if (c==0){\n        printf(\"\\n-1\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9776407093292213, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1d33bc75e20eed8053e7c6fe2874fdca", "bug_code_uid": "d364330bb0c61ff00a83cc126b9c87e1", "src_uid": "47e5ccd8220afa84c95f36b08ed1817a", "apr_id": "1d0f4b3450c6295924955274fe968232", "difficulty": 800, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint findmax(int a, int b){\r\n    if(a>b)\r\n    return a;\r\n    return b;\r\n}\r\n\r\nint main(){\r\n    int t, n, m, a[40][40], i, j, x, y, p;\r\n    scanf(\"%d\",&t);\r\n    while(t){\r\n        scanf(\"%d %d\",&n,&m);\r\n        p=0;\r\n        for(i=0; i<n; i++)\r\n        {\r\n            for(j=0; j<m; j++)\r\n            {\r\n                scanf(\"%d\",&a[i][j]);\r\n                if(a[i][j]>p)\r\n                {\r\n                    p=a[i][j];\r\n                    x=i;\r\n                    y=j;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",findmax(n-x,x+1)*findmax(m-y,y+1));\r\n        t--;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<limits.h>\r\n\r\nint findmax(int a, int b){\r\n    if(a>b)\r\n    return a;\r\n    return b;\r\n}\r\n\r\nint main(){\r\n    int t, n, m, a[40][40], i, j, x, y, p;\r\n    scanf(\"%d\",&t);\r\n    while(t){\r\n        scanf(\"%d %d\",&n,&m);\r\n        p=-INT_MAX;\r\n        for(i=0; i<n; i++)\r\n        {\r\n            for(j=0; j<m; j++)\r\n            {\r\n                scanf(\"%d\",&a[i][j]);\r\n                if(a[i][j]>p)\r\n                {\r\n                    p=a[i][j];\r\n                    x=i;\r\n                    y=j;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",findmax(n-x,x+1)*findmax(m-y,y+1));\r\n        t--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.906886517943744, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "9305bb5e37e4399b3275334574b73660", "bug_code_uid": "152d4afb0534b65201e3848be3159e19", "src_uid": "2fa543c8b8f9dc500c36cf719800a6b0", "apr_id": "d6812a665f16cd42dfee9dbb5a89eda9", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<math.h> \n\nint main() {\n\n\tlong n,i;\n\t\n\tscanf(\"%lu\",&n);\n\t\t\n\tchar s[n];\n\tchar t[n];\n\t\n\tscanf(\"%s\",&s);\n\tscanf(\"%s\",&t);\n\n\tint a[27][27]={0};\n\tint b[27][27]={0};\n\tint s1[27]={0};\n\tint t1[27]={0};\n\t\n\tlong c=0;\n\tint f=0,x1,x2;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]!=t[i])\n\t\t{\n\t\t\tc++;\n\t\t\tchar c1=s[i];\n\t\t\tchar c2=t[i];\n\t\t\tx1=(int)c1;\n\t\t\tx2=(int)c2;\n\t\t\t\n\t\t\tx1-=96;\n\t\t\tx2-=96;\n\t\t\t\n\t\t\tif(x1==x2)\n\t\t\t{\n\t\t\t\ta[x1][x2]=0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[x1][x2]=1;\n\t\t\t\tb[x1][x2]=i+1;\n\t\t\t\tif(a[x2][x1]==1)\n\t\t\t\t{\n\t\t\t\t\tf=1;\n\t\t\t\t}\n\t\t\t\ts1[x1]=i+1;\n\t\t\t\tt1[x2]=i+1;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\t\n\t\n\tlong v1,v2;\n\tif(f!=1)\n\t{\n\t\tfor(i=1;i<27;i++)\n\t\t{\n\t\t\tif(s1[i]>0 && t1[i]>0)\n\t\t\t{\n\t\t\t\tf=2;\n\t\t\t\tv1=s1[i];\n\t\t\t\tv2=t1[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\t\n\tif(f==1)\n\t{\n\t\tprintf(\"%lu\\n\",c-2);\n\t\tprintf(\"%lu %lu\\n\",b[x1][x2],b[x2][x1]);\n\t}\n\telse if(f==2)\n\t{\n\t\tprintf(\"%lu\\n\",c-1);\n\t\tprintf(\"%lu %lu\\n\",v2,v1);\n\t}\n\telse\n\t{\n\t\tprintf(\"%lu\\n\",c);\n\t\tprintf(\"-1 -1\\n\");\t\n\t}\n\t\nreturn 0;\n}  ", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<math.h> \n\nint main() {\n\n\tlong n,i;\n\t\n\tscanf(\"%lu\",&n);\n\t\t\n\tchar s[200001];\n\tchar t[200001];\n\t\n\tmemset(s, 0, sizeof(s));\n\tmemset(t, 0, sizeof(t));\n\tscanf(\"%s\",&s);\n\tscanf(\"%s\",&t);\n\n\tint a[27][27]={0};\n\tint b[27][27]={0};\n\tint s1[27]={0};\n\tint t1[27]={0};\n\t\n\tlong c=0;\n\tlong v1,v2;\n\tint f=0,x1,x2;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]!=t[i])\n\t\t{\n\t\t\tc++;\n\t\t\tchar c1=s[i];\n\t\t\tchar c2=t[i];\n\t\t\tx1=(int)c1;\n\t\t\tx2=(int)c2;\n\t\t\t\n\t\t\tx1-=96;\n\t\t\tx2-=96;\n\t\t\t\n\t\t\tif(x1==x2)\n\t\t\t{\n\t\t\t\ta[x1][x2]=0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[x1][x2]=1;\n\t\t\t\tb[x1][x2]=i+1;\n\t\t\t\t\n\t\t\t\tif(f!=1)\n\t\t\t\t{\n\t\t\t\t\tv1=b[x1][x2];\n\t\t\t\t\tv2=b[x2][x1];\n\t\t\t\t}\n\t\t\t\tif(a[x2][x1]==1)\n\t\t\t\t{\n\t\t\t\t\tf=1;\n\t\t\t\t}\n\t\t\t\ts1[x1]=i+1;\n\t\t\t\tt1[x2]=i+1;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\t\n\t\n\tif(f!=1)\n\t{\n\t\tfor(i=1;i<27;i++)\n\t\t{\n\t\t\tif(s1[i]>0 && t1[i]>0)\n\t\t\t{\n\t\t\t\tf=2;\n\t\t\t\tv1=s1[i];\n\t\t\t\tv2=t1[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\t\n\tif(f==1)\n\t{\n\t\tprintf(\"%lu\\n\",c-2);\n\t\tprintf(\"%lu %lu\\n\",v1,v2);\n\t}\n\telse if(f==2)\n\t{\n\t\tprintf(\"%lu\\n\",c-1);\n\t\tprintf(\"%lu %lu\\n\",v2,v1);\n\t}\n\telse\n\t{\n\t\tprintf(\"%lu\\n\",c);\n\t\tprintf(\"-1 -1\\n\");\t\n\t}\n\t\nreturn 0;\n}  "}
{"similarity_score": 0.9856364536899456, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "5b0e06402b897d9ba56c98fbd375554e", "bug_code_uid": "932f85b738d2be51d4a63c54609ddf99", "src_uid": "4f3bec9c36d0ac2fdb8041469133458c", "apr_id": "d4e7cd17e2243306ea46d23053376e0e", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint abs(int a)\n{\n\treturn a >= 0 ? a : -a;\n}\n\nint main()\n{\n\tint i, j;\n\tint t;\n\tchar bd[8][9];\n\tint i1, j1, i2, j2;\n\tint flag;\n#ifndef ONLINE_JUDGE\n\tfreopen(\"E:\\\\tmp\\\\in\", \"r\", stdin);\n\tfreopen(\"E:\\\\tmp\\\\out\", \"w\", stdout);\n#endif\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tflag = 0;\n\t\tfor(i = 0; i < 8; i++)\n\t\t{\n\t\t\tscanf(\"%s\", bd[i]);\n\t\t\tfor(j = 0; j < 8; j++)\n\t\t\t\tif(bd[i][j] == 'K')\n\t\t\t\t{\n\t\t\t\t\tbd[i][j] = '.';\n\t\t\t\t\tif(flag == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\ti1 = i;\n\t\t\t\t\t\tj1 = j;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ti2 = i;\n\t\t\t\t\t\tj2 = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tfor(i = 0; i < 8; i++)\n\t\t\tfor(j = 0; j < 8; j++)\n\t\t\t\tif(bd[i][j] == '.' && (i - i1) % 2 == 0 && (j - j1) %2 == 0 && (abs(i - i1) + abs(j - j1)) % 4 == 0)\n\t\t\t\t\tbd[i][j] = ',';\n\t\tflag = 0;\n\t\tfor(i = 0; i < 8; i++)\n\t\t\tfor(j = 0; j < 8; j++)\n\t\t\t\tif(bd[i][j] == ',' && (i - i2) % 2 == 0 && (j - j2) %2 == 0 && (abs(i - i2) + abs(j - j2)) % 4 == 0)\n\t\t\t\t\tflag = 1;\n\t\tif(flag)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint abs(int a)\n{\n\treturn a >= 0 ? a : -a;\n}\n\nint main()\n{\n\tint i, j;\n\tint t;\n\tchar bd[8][9];\n\tint i1, j1, i2, j2;\n\tint flag;\n#ifndef ONLINE_JUDGE\n\tfreopen(\"E:\\\\tmp\\\\in\", \"r\", stdin);\n\tfreopen(\"E:\\\\tmp\\\\out\", \"w\", stdout);\n#endif\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tflag = 0;\n\t\tfor(i = 0; i < 8; i++)\n\t\t{\n\t\t\tscanf(\"%s\", bd[i]);\n\t\t\tfor(j = 0; j < 8; j++)\n\t\t\t\tif(bd[i][j] == 'K')\n\t\t\t\t{\n\t\t\t\t\tbd[i][j] = '.';\n\t\t\t\t\tif(flag == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\ti1 = i;\n\t\t\t\t\t\tj1 = j;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ti2 = i;\n\t\t\t\t\t\tj2 = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tfor(i = 0; i < 8; i++)\n\t\t\tfor(j = 0; j < 8; j++)\n\t\t\t\tif(bd[i][j] == '.' && (i - i1) % 2 == 0 && (j - j1) % 2 == 0 && (abs(i - i1) + abs(j - j1)) % 4 == 0)\n\t\t\t\t\tbd[i][j] = ',';\n\t\tflag = 0;\n\t\tfor(i = 0; i < 8; i++)\n\t\t\tfor(j = 0; j < 8; j++)\n\t\t\t\tif(bd[i][j] == ',' && (i - i2) % 2 == 0 && (j - j2) % 2 == 0 && (abs(i - i2) + abs(j - j2)) % 4 == 0)\n\t\t\t\t\tflag = 1;\n\t\tif((abs(i2 - i1)) % 4 == 0 && flag)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9750505731625084, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4b1816c06609cdac78506a7641359369", "bug_code_uid": "3da1730175c19f0bd04efee502594ba1", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "4c7162dc5bd21745ed7c62fb30a6b223", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,x,y,z,s,r,t,b,d,k,m,l,p;\n    x=y=z=d=b=p=k=0;\n\n    scanf(\"%d\", &n);\n    long long int a[n];\n\n    for(i=0;i<n;i++)\n    {\n        if(i==0){scanf(\"%lld\", &a[i]);}\n        else{scanf(\" %lld\", &a[i]);}\n\n        if(a[i] != -1 && a[i] != 1){\n            if(a[i]<0){\n                      x++;\n                      d=d+a[i];\n                }\n            if(a[i]==0){\n                      y++;\n                }\n            if(a[i]>0){\n                      z++;\n                      b=b+a[i];\n                }\n        }\n        else{if(a[i] == -1){k++;}}\n    }\n\ns=b-z;\nr=(-1)*d;\nt=r-x;\nm=s+t+y;\nl=k+x;\nif(l%2==1 && y==0){p=2;}\nif(l%2==1 && y>0){p=0;}\nm=m+p;\n\nprintf(\"%d\\n\", m);\nreturn 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,x,y,z,k,l,p;\n    long long int s,r,d,b,t,m;\n    x=y=z=d=b=p=k=0;\n\n    scanf(\"%d\", &n);\n    long long int a[n];\n\n    for(i=0;i<n;i++)\n    {\n        if(i==0){scanf(\"%lld\", &a[i]);}\n        else{scanf(\" %lld\", &a[i]);}\n\n        if(a[i] != -1 && a[i] != 1){\n            if(a[i]<0){\n                      x++;\n                      d=d+a[i];\n                }\n            if(a[i]==0){\n                      y++;\n                }\n            if(a[i]>0){\n                      z++;\n                      b=b+a[i];\n                }\n        }\n        else{if(a[i] == -1){k++;}}\n    }\n\ns=b-z;\nr=(-1)*d;\nt=r-x;\nm=s+t+y;\nl=k+x;\nif(l%2==1 && y==0){p=2;}\nif(l%2==1 && y>0){p=0;}\nm=m+p;\n\nprintf(\"%lld\\n\", m);\nreturn 0;\n\n}\n"}
{"similarity_score": 0.7890222984562607, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "21c183aff28225e5d7bb3e0f8c64b264", "bug_code_uid": "837a9369351a718cbeeda926e88f55d4", "src_uid": "dc31adef80f06897ea2f5ef76854bcf1", "apr_id": "6777f0d81467298acc9cbd75cb384165", "difficulty": 1200, "tags": ["implementation", "dfs and similar"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define MAX_SIZE 100\n#define other(ch) ((ch) == 'W' ? 'B' : 'W')\n\nchar board[MAX_SIZE][MAX_SIZE];\nint n, m;\n\nvoid fill(int, int, char);\n\nint main(void) {\n    scanf(\"%d%d\", &n, &m);\n    int i, j;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            scanf(\" %c\", &board[i][j]);\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            fill(i, j, 'W');\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            putchar(board[i][j]);\n        }\n        putchar('\\n');\n    }\n}\n\nvoid fill(int r, int c, char ch) {\n    if (r < 0 || r >= n || c < 0 || c >= m) {\n        return;\n    } else if (board[r][c] == '.') {\n        board[r][c] = ch;\n        fill(r + 1, c, other(ch));\n        fill(r - 1, c, other(ch));\n        fill(r, c + 1, other(ch));\n        fill(r, c - 1, other(ch));\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define MAX_SIZE 101\n#define other(ch) ((ch) == 'W' ? 'B' : 'W')\n\nchar board[MAX_SIZE][MAX_SIZE];\nint n, m;\n\nvoid fill(int, int, char);\n\nint main(void) {\n    scanf(\"%d%d\", &n, &m);\n    int i, j;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            scanf(\" %c\", &board[i][j]);\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            fill(i, j, 'W');\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        puts(board[i]);\n    }\n}\n\nvoid fill(int r, int c, char ch) {\n    if (r < 0 || r >= n || c < 0 || c >= m) {\n        return;\n    } else if (board[r][c] == '.') {\n        board[r][c] = ch;\n        fill(r + 1, c, other(ch));\n        fill(r - 1, c, other(ch));\n        fill(r, c + 1, other(ch));\n        fill(r, c - 1, other(ch));\n    }\n}\n"}
{"similarity_score": 0.9304229195088677, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "eaee71ece29be22ee0b8e314747ddfea", "bug_code_uid": "64494f85584a3dcfece9cccd9c8ae7ba", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "d4d73a361db13d2bdb229a78bd179c3c", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\nint t,a,b,c,test,n,k;\n\nscanf(\"%d\",&t);\nfor(;t;t--)\n{test=0;\nscanf(\"%d\",&n);\nfor(a=2;a*(a+1)*(a+2)<=n;a++)\n\t\t\tif(n%a==0){\n\t\t\t\tk=n/a;\n\t\t\t\tfor(b=a+1;b*(b+1)<=k;b++)\n\t\t\t\t\tif(k%b==0){\n\t\t\t\t\t\tc=k/b;\n\t\t\t\t\t\tprintf(\"YES\\n%d %d %d\\n\",a,b,c);\n\t\t\t\t\t\ttest=1;\n\t\t\t\t\t\t\n\t\t\t\t\t}\t\t\t\t\n\t\t\t}\nif(!test) printf(\"NO\\n\");\n\n\n}\nreturn 0;}", "fixed": "#include <stdio.h>\nint main()\n{\n\nint t,a,b,c,test,n,k;\n\nscanf(\"%d\",&t);\nfor(;t;t--)\n{test=0;\nscanf(\"%d\",&n);\nfor(a=2;a*(a+1)*(a+2)<=n;a++)\n\t\t\tif(n%a==0){\n\t\t\t\tk=n/a;\n\t\t\t\tfor(b=a+1;b*(b+1)<=k;b++)\n\t\t\t\t\tif(k%b==0){\n\t\t\t\t\t\tc=k/b;\n\t\t\t\t\t\tprintf(\"YES\\n%d %d %d\\n\",a,b,c);\n\t\t\t\t\t\ttest=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\t\t\nif (test) break;\t\t\n\t\t\t}\nif(!test) printf(\"NO\\n\");\n\n\n}\nreturn 0;}\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.9982847341337907, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8030ee31156770c8d2521186dc91e38e", "bug_code_uid": "1352ede7f3ddbc3625a6c6e802af0419", "src_uid": "024d7b1d5f7401080560174003456037", "apr_id": "833578ecfeebea32eb09c5394f38a4e9", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define TC int _T; scanf(\"%d\", &_T); for(int ts=1;ts<=_T;ts++)\r\n#define MAX(a,b) (((a)<(b))?(b):(a))\r\nvoid swap(int *xp, int *yp)\r\n{\r\n    int temp = *xp;\r\n    *xp = *yp;\r\n    *yp = temp;\r\n}\r\n \r\nint main()\r\n{\r\n    TC\r\n    {\r\n        int n,x,y;\r\n        scanf(\"%d %d %d\",&n,&x,&y);\r\n        if(x>y)swap(&x,&y);\r\n        if (x!=0||y==0||(n-1)%y)\r\n        {\r\n            printf(\"-1\\n\");\r\n            continue;\r\n        }\r\n        for (int i = 0; i < n-1; i++)\r\n        {\r\n            printf(\"%d \",1+y*(i/y));\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#define TC int _T; scanf(\"%d\", &_T); for(int ts=1;ts<=_T;ts++)\r\n#define MAX(a,b) (((a)<(b))?(b):(a))\r\nvoid swap(int *xp, int *yp)\r\n{\r\n    int temp = *xp;\r\n    *xp = *yp;\r\n    *yp = temp;\r\n}\r\n \r\nint main()\r\n{\r\n    TC\r\n    {\r\n        int n,x,y;\r\n        scanf(\"%d %d %d\",&n,&x,&y);\r\n        if(x>y)swap(&x,&y);\r\n        if (x!=0||y==0||(n-1)%y)\r\n        {\r\n            printf(\"-1\\n\");\r\n            continue;\r\n        }\r\n        for (int i = 0; i < n-1; i++)\r\n        {\r\n            printf(\"%d \",2+y*(i/y));\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.3970223325062035, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8e290280c5b72dfd449e2998f3a914d4", "bug_code_uid": "f0b8c34e452c129243cafe15c6686265", "src_uid": "7b932b2d3ab65a353b18d81cf533a54e", "apr_id": "9e1cb141e4b230cda084aa05bc79c172", "difficulty": 1300, "tags": ["probabilities", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint a,b,c,d;\nlong double e,f,p,x;\nscanf(\"%d %d %d %d\",&a,&b,&c,&d);\ne=(long double)a/b;\nf=(long double)c/d;\nx=1-(e*f);\np=e/x;\n//p=(e/(1-(e*f)));\nprintf(\"%llf\",p);\n}\n   \n", "fixed": "#include<stdio.h>\nint main()\n{\nint a,b,c,d;\nfloat e,f,p,x;\nscanf(\"%d %d %d %d\",&a,&b,&c,&d);\ne=(float)a/b;\nf=(float)c/d;\nx=1-(float)((1-e)*(1-f));\np=(float)e/x;\n//p=(e/(1-(e*f)));\nprintf(\"%9f\",p);\n}\n   \n"}
{"similarity_score": 0.30144404332129965, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "8886f1c546c9097ab549b5c107cdb8d6", "bug_code_uid": "3ec044e1f0fd670666cc572f6c840f7f", "src_uid": "2d6a1202139e1f77f32377224e1fe752", "apr_id": "a0771b403d9c696d4d28acf87a1b917d", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char ch[100],a;\n    gets(ch);\n    int l,i,c=0,k;\n    l=strlen(ch);\n    //printf(\"%d\\n\",l);\n    for(i=0;i<l;i++)\n    {\n        for(k=0;k<i;k++)\n        {\n           if(ch[i]==ch[k])\n           {\n               break;\n            }\n\n        }\n        if(k==i)\n           c++;\n    }\n    //printf(\"c=%d\\n\",c);\n    if(c%2==0)\n        printf(\"CHAT WITH HER!\");\n    else\n         printf(\"IGNORE HIM!\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,i,n,d=0;\n        scanf(\"%d\",&n);\n        if(1<=n&&n<=100)\n      {\n        scanf(\"%d\",&a);\n        if(1<=a&&a<=6)\n        {\n            for(i=0;i<n;i++)\n            {\n                scanf(\"%d %d\",&b,&c);\n                if((1<=b&&b<=6)&&(1<=c&&c<=6)&&(b!=c))\n                {\n                    if((b!=a&&b!=7-a)&&(c!=a&&c!=7-a)&&(c!=7-b))\n                    {\n                        }\n                        else\n                            d++;\n                }\n\n            }\n        }\n        if(d==0)\n            printf(\"YES\");\n        else\n     printf(\"NO\");\n      }\n\n\n    return 0;\n}"}
{"similarity_score": 0.978448275862069, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "21d58c064a682edb064240435a6536d5", "bug_code_uid": "1af92d8f7c22199b7fe4ce1ab7df7a28", "src_uid": "a0a6cdda2ce201767bf5418f445a44eb", "apr_id": "b992ba836aeb0b0ae7665f12c119d883", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tlong long n,a[110],c1,c2,i;\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t{scanf(\"%lld\",&a[i]);\n\tif(a[i]%2==0)\n\tc1++;\n\telse\n\tc2++;\n\t}\n\tif(c1>=c2)\n\tprintf(\"%lld\",c2);\n\telse\n\tprintf(\"%lld\",c1);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tlong long n,a[110],c1=0,c2=0,i;\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t{scanf(\"%lld\",&a[i]);\n\tif(a[i]%2==0)\n\tc1++;\n\telse\n\tc2++;\n\t}\n\tif(c1>=c2)\n\tprintf(\"%lld\",c2);\n\telse\n\tprintf(\"%lld\",c1);\n\treturn 0;\n}"}
{"similarity_score": 0.8089171974522293, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "ef574e33fe52d57d0373c249d29f750b", "bug_code_uid": "800ef2690a8523d87b568487fe757fbb", "src_uid": "3b8678d118c90d34c99ffa9259cc611f", "apr_id": "212c8405623fdbadd8c5eb82422c241a", "difficulty": 1400, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define L 50\n\nint main() {\n\tint q;\n\n\tscanf(\"%d\", &q);\n\twhile (q--) {\n\t\tint n, odd, cancel;\n\n\t\tscanf(\"%d\", &n);\n\t\todd = cancel = 0;\n\t\twhile (n--) {\n\t\t\tstatic char s[L + 1];\n\t\t\tint l, i;\n\n\t\t\tscanf(\"%s\", s);\n\t\t\tl = strlen(s);\n\t\t\tif (l % 2)\n\t\t\t\todd = 1;\n\t\t\tfor (i = 0; i < l; i++)\n\t\t\t\tif (s[i] == '0')\n\t\t\t\t\tcancel = !cancel;\n\t\t}\n\t\tprintf(\"%d\\n\", odd || cancel ? n : n - 1);\n\t}\n\treturn 0;\n}\n", "fixed": "/* https://codeforces.com/contest/1251/submission/63343745 (Dukkha) */\n#include <stdio.h>\n#include <string.h>\n\n#define L 50\n\nint main() {\n\tint q;\n\n\tscanf(\"%d\", &q);\n\twhile (q--) {\n\t\tint n, n_, odd, parity;\n\n\t\tscanf(\"%d\", &n), n_ = n;\n\t\todd = parity = 0;\n\t\twhile (n--) {\n\t\t\tstatic char s[L + 1];\n\t\t\tint l, i;\n\n\t\t\tscanf(\"%s\", s);\n\t\t\tl = strlen(s);\n\t\t\tif (l % 2)\n\t\t\t\todd = 1;\n\t\t\tfor (i = 0; i < l; i++)\n\t\t\t\tif (s[i] == '0')\n\t\t\t\t\tparity = !parity;\n\t\t}\n\t\tprintf(\"%d\\n\", odd || parity == 0 ? n_ : n_ - 1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9396782841823056, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "b79279a64a46b732771bd0a984f8c189", "bug_code_uid": "89081126787f58ebf3aeb3d29ef53336", "src_uid": "6590c99e35f6f65e1b1bbd4f5bdca43a", "apr_id": "9bdb4d37bb15233de85aaf8b21e9cbbf", "difficulty": 1500, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int N, K, M, i, j, Num, Pre, Ans = 0;\n    scanf(\"%d %d\", &N, &K);\n    for(i = 0; i < K; ++i) {\n        scanf(\"%d\", &M);\n        int idx = -1;\n        char flag = 0;\n        for(j = 0; j < M; ++j) {\n            scanf(\"%d\", &Num);\n            if(Num == 1) {\n                flag = 1;\n            }\n            if(j != 0 && flag) {\n                if(Num != Pre + 1) {\n                    idx = j;\n                }\n            }\n            Pre = Num;\n        }\n        if(flag && idx == -1) {\n            idx = M;\n        }\n        if(idx == -1) {\n            Ans += M - 1 + M ;\n        } else {\n            Ans += (M - idx) + (M - idx + 1);\n        }\n    }\n    --Ans;\n    printf(\"%d\\n\", Ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int N, K, M, i, j, Num, Pre, Ans = 0;\n    scanf(\"%d %d\", &N, &K);\n    for(i = 0; i < K; ++i) {\n        scanf(\"%d\", &M);\n        int idx = -1;\n        char flag = 0;\n        for(j = 0; j < M; ++j) {\n            scanf(\"%d\", &Num);\n            if(Num == 1) {\n                flag = 1;\n            }\n            if(j != 0 && flag && idx == -1) {\n                if(Num != Pre + 1) {\n                    idx = j;\n                }\n            }\n            Pre = Num;\n        }\n        if(idx == -1) {\n            idx = M;\n        }\n        if(!flag) {\n            Ans += M - 1 + M;\n        } else {\n            Ans += (M - idx) + (M - idx + 1);\n        }\n    }\n    --Ans;\n    printf(\"%d\\n\", Ans);\n    return 0;\n}\n"}
{"similarity_score": 0.5303340149965917, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "50368c27df8e2a32f1d3364327405934", "bug_code_uid": "1cd475cbe5b1d8af288369da9c9113cd", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "dc2b248a4b36a42ca62e82cfefe68785", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char s[102],s1[102];\n    scanf(\"%s\",&s);\n    int i,c=1,j=0,k,t;\n\n\n    for(i=0;i<strlen(s);i++){\n        if(s[i]>='a' && s[i]<='z'){\n            s1[j]=s[i];\n            j++;\n        }\n    }\n    s1[j]='\\0';\n    //printf(\"%s\\n\",s1);\n    for(i=0;i<strlen(s1);i++){\n        for(k=i+1;k<strlen(s1);k++){\n            if(s1[i]>s1[k]){\n                t=s1[i];\n                s1[i]=s1[k];\n                s1[k]=t;\n            }\n        }\n    }\n    //printf(\"%s\\n\",s1);\n    for(i=0;i<strlen(s1)-1;i++){\n        if(s1[i]!=s[i+1])\n            c++;\n    }\n    printf(\"%d\",c);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char s[1010],s1[1010];\n    gets(s);\n    //puts(s);\n    int i,c=1,j=0,k,t;\n    if(s[0]=='{' &&s[1]=='}'){\n        printf(\"0\");\n        return 0;\n    }\n\n    for(i=0;i<strlen(s);i++){\n        if(s[i]>='a' && s[i]<='z'){\n            s1[j]=s[i];\n            //printf(\"at j=%d %c\\n \",j,s1[j]);\n            j++;\n        }\n    }\n    s1[j]='\\0';\n    //puts(s1);\n    for(i=0;i<strlen(s1);i++){\n        for(k=i+1;k<strlen(s1);k++){\n            if(s1[i]>s1[k]){\n                t=s1[i];\n                s1[i]=s1[k];\n                s1[k]=t;\n            }\n        }\n    }\n   // puts(s1);\n    //printf(\"%d\\n\",strlen(s1));\n    for(i=0;i<strlen(s1)-1;i++){\n        if(s1[i]!=s1[i+1]){\n            //printf(\"%c\\n\",s1[i]);\n            c++;\n        }\n    }\n    printf(\"%d\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.5048669695003245, "equal_cnt": 21, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "43f54ae4ad19ffc8f5027c27f9eb6a4a", "bug_code_uid": "02ca84419645c52571238584f439fd6b", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "8379078722b6c9e0fb9ae0d0f15b0201", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    int t;\r\n    char a[1000000];\r\n    int b;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&t);\r\n        b=0;\r\n            scanf(\"%s\",a);\r\n             getchar();\r\n             //printf(\"a==%s\\n\",a);\r\n            for(int q=0;q<strlen(a);q++)\r\n            {\r\n                if(a[q]=='Q')\r\n            {\r\n                b++;\r\n                //printf(\"a[%d]=%c b++=%d\\n\",q,a[q],b);\r\n            }\r\n            else\r\n            {\r\n                b--;\r\n                //printf(\"a[%d]=%c b++=%d\\n\",q,a[q],b);\r\n            }\r\n            }\r\n             if(b<=0)\r\n        {\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"No\\n\");\r\n        }\r\n        \r\n       \r\n       \r\n    }\r\n    \r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,n;\r\n    char a[110];\r\n    int s,k;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        getchar();\r\n        scanf(\"%s\",a);\r\n        s=0;\r\n        k=0;\r\n        for(int j=(n-1);j>=0;j--)\r\n        {\r\n            if(a[j]=='Q')\r\n            {\r\n                s++;\r\n                if(s>0)\r\n                {\r\n                    printf(\"No\\n\");\r\n                    k=1;\r\n                    break;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                s--;\r\n            }\r\n        }\r\n        if(k==0)\r\n        {\r\n            printf(\"Yes\\n\");\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9349363507779349, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "13338e0a433e891df6a85a730d7a0212", "bug_code_uid": "24b29aac037d542072801807c6257663", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "38bd8083811bef0e774a7e401701c794", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--) {\r\n            int x;\r\n        scanf(\"%d\",&x);\r\n\t\tchar a[5];\r\n\t\tint cntT=0;\r\n\t\tint cnti=0;\r\n\t\tint cntm=0;\r\n\t\tint cntu=0;\r\n\t\tint cntr=0;\r\n\t\tscanf(\"%s\",&a);\r\n\r\n\t\tfor(int i=0;i<strlen(a);i++){\r\n\r\n                if (a[i]=='T') cntT++;\r\n                if (a[i]=='i') cnti++;\r\n                if (a[i]=='m') cntm++;\r\n                if (a[i]=='u') cntu++;\r\n                if (a[i]=='r') cntr++;\r\n\r\n                }\r\n\r\n\r\n\r\n        if (cntT*cnti*cntm*cntu*cntr==1)\r\n                    printf (\"YES\\n\");\r\n                else printf(\"NO\\n\");\r\n\t}\r\n\t}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--) {\r\n            int x;\r\n        scanf(\"%d\",&x);\r\n\t\tchar a[5];\r\n\t\tint cntT=0;\r\n\t\tint cnti=0;\r\n\t\tint cntm=0;\r\n\t\tint cntu=0;\r\n\t\tint cntr=0;\r\n\t\tint cnt=0;\r\n\t\tscanf(\"%s\",&a);\r\n\r\n\t\tfor(int i=0;i<strlen(a);i++){\r\n\r\n                if (a[i]=='T') cntT++;\r\n                else if (a[i]=='i') cnti++;\r\n                else if (a[i]=='m') cntm++;\r\n                else if (a[i]=='u') cntu++;\r\n                else if (a[i]=='r') cntr++;\r\n                else\r\n                    ++cnt;\r\n\r\n                }\r\n\r\n\r\n\r\n        if (cntT*cnti*cntm*cntu*cntr==1&&cnt==0)\r\n                    printf (\"YES\\n\");\r\n                else printf(\"NO\\n\");\r\n\t}\r\n\t}\r\n\r\n"}
{"similarity_score": 0.997737556561086, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "35ae28471d71717c36ba0016655d5573", "bug_code_uid": "4bc4fd167097dc77ac00f2faba19b4b0", "src_uid": "59d5e5ed2bc4b316e950e2a4dbc99d68", "apr_id": "cc549f0a36351de6b534ec77b738fe77", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint check(int a);\n\nint main()\n{\n\tint input = 0;\n\tint a = 0, b = 0,flag = 1,flag1 = 1;\n\n\twhile (scanf(\"%d\", &input) != EOF)\n\t{\n\t\ta = 1;\n\n\t\twhile (1)\n\t\t{\n\t\t\tb = a + input;\n\t\t\tif (check(a) == 1 && check(b) == 1)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d\\n\", b, a);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ta++;\n\t\t}\n\t}\n}\n\nint check(int a)\n{\n\tint lim = sqrt(a);\n\n\tfor (int i = 1; i < lim; i++)\n\t{\n\t\tif (a % i == 0)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint check(int a);\n\nint main()\n{\n\tint input = 0;\n\tint a = 0, b = 0,flag = 1,flag1 = 1;\n\n\twhile (scanf(\"%d\", &input) != EOF)\n\t{\n\t\ta = 1;\n\n\t\twhile (1)\n\t\t{\n\t\t\tb = a + input;\n\t\t\tif (check(a) == 1 && check(b) == 1)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d\\n\", b, a);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ta++;\n\t\t}\n\t}\n}\n\nint check(int a)\n{\n\tint lim = sqrt(a);\n\n\tfor (int i = 2; i < lim; i++)\n\t{\n\t\tif (a % i == 0)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9626865671641791, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "aab82d9cc1b91522361831bf8bc0749b", "bug_code_uid": "b1ad209718ae5546f246d02922553d67", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "266f54c5e8bc93754d50b98b73fa2ff3", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,t=2,x,A[101],a;\n    scanf(\"%d\",&n);\n    while(t--)\n    {\n        scanf(\"%d\",&a);\n        while(a--)\n        {\n            scanf(\"%d\",&x);\n            A[x]++;\n        }\n    }\n    for(a=1;a<=n;a++)\n    {\n        if(A[a]==0)\n        {\n            printf(\"Oh, my keyboard!\\n\");\n            return 0;\n        }\n    }\n    printf(\"I become the guy.\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint n,t=2,x,A[101],a;\nint main()\n{\n    scanf(\"%d\",&n);\n    while(t--)\n    {\n        scanf(\"%d\",&a);\n        while(a--)\n        {\n            scanf(\"%d\",&x);\n            A[x]++;\n        }\n    }\n    for(a=1;a<=n;a++)\n    {\n        if(A[a]==0)\n        {\n            printf(\"Oh, my keyboard!\\n\");\n            return 0;\n        }\n    }\n    printf(\"I become the guy.\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.19936034115138593, "equal_cnt": 21, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "75509e552c50665091efcc668cf733fa", "bug_code_uid": "8e74fe9d44d25022add13a6216180baf", "src_uid": "c9e9b82185481951911db3af72fd04e7", "apr_id": "9b193b146ca7597776f069260da4f806", "difficulty": 1500, "tags": ["implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nstruct na\n{\n\tchar ch[33];\n\tint p;\n};\nint main()\n{\n\tstruct na m[1001];\n\tint n;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s %d\",m[0].ch,&m[0].p);\n\tint mp=0;\n\tint max=m[0].p;\n\tint k=0;\n\tchar name[33];int d;\n\tint i,j;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%s %d\",name,&d);\n\t\t\tfor(j=0;j<=k;j++)\n\t\t\t{\n\t\t\t\tif(strcmp(name,m[j].ch)==0)\n\t\t\t\t{\n\t\t\t\t\tm[j].p=m[j].p+d;\n\t\t\t\t\tif(m[j].p>max)\n\t\t\t\t\t{\tmax=m[j].p;\n\t\t\t\t\t\tmp=j;}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j==(k+1))\n\t\t\t{\t\t\n\t\t\t\tstrcpy(m[k+1].ch,name);\n\t\t\t\tm[k+1].p=d;\n\t\t\t\tif(d>max)\n\t\t\t\t{\tmax=d;\n\t\t\t\t\tmp=k+1;}\n\t\t\t\tk++;\n\t\t\t}\n\t}\n\t\t\n\tprintf(\"%s\",m[mp].ch);\n\treturn 0;\n}\n\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nstruct name\n{\n\tchar ch[33];\n\tint m;\n\t\n};\nint main()\n{\n\tint n,a;\n\tscanf(\"%d\",&n);\n\tchar na[33];int s;\n\tstruct name mt[1001],nt[1001];\n\tint i;\n\tscanf(\"%s %d\",mt[0].ch,&mt[0].m);\n\tstrcpy(nt[0].ch,mt[0].ch);\n\tnt[0].m=mt[0].m;\n\tint \tmax=mt[0].m;\n\tint k=0,j;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%s %d\",na,&s);\n\t\tstrcpy(nt[i].ch,na);\n\t\tnt[i].m=s;\n\t\tfor(j=0;j<=k;j++)\n\t\t{\n\t\t\tif(strcmp(mt[j].ch,na)==0)\n\t\t\t{\n\t\t\t\tmt[j].m=mt[j].m+s;\n\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j==(k+1))\n\t\t{\n\t\t\tstrcpy(mt[k+1].ch,na);\n\t\t\tmt[k+1].m=s;\n\t\t\n\t\t\tk++;\n\t\t}\n\t}\n\tmax=mt[0].m;\n\tfor(i=1;i<=k;i++)\n\tmax=max>mt[i].m?max:mt[i].m;\n\t\n//\tprintf(\"%d\",max);\t\n\tstruct name list[1001];\n\t j=0;\n\tfor(i=0;i<=k;i++)\n\t{\n\t\tif(mt[i].m==max)\n\t\t{\tstrcpy(list[j].ch,mt[i].ch);\n\t\t\tlist[j].m=max;\n\t\t\tj++;}\n\t}\n//for(i=0;i<j;i++)\n   //     printf(\"%s %d\\n\",list[i].ch,list[i].m);\n\tif(j==1)\n\t{\n\t\tprintf(\"%s\",list[0].ch);exit(0);}\n\tint l;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(l=0;l<j;l++)\n\t\t{\n\t\t\tif(strcmp(nt[i].ch,list[l].ch)==0)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tlist[l].m=list[l].m-nt[i].m;\n\t\t\t\n\t\t\t\tif(list[l].m<=0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%s\",list[l].ch);\n\t\t\t\t\texit(0);\n\t\t\t\t}\n\t\t\t/*\t}\n\t\t\t\telse if(a==0)\n\t\t\t\t{\n\t\t\t\t\tif(list[l].m>=0)\n\t\t\t\t\t{\n\t\t\t\t\tprintf(\"%s\",list[l].ch);\n\t\t\t\t\texit(0);\n\t\t\t\t\t}\n\t\t\t\t}*/\n\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\texit(0);\n}\n"}
{"similarity_score": 0.6794258373205742, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "80dc46e0818e8c765e28e8f63ae81b48", "bug_code_uid": "e2f6c23db95719a691f0bb8f7649f528", "src_uid": "27ef62139533982f0857d733fad5c0d6", "apr_id": "c08abf2dabd25828a65ad5c55c806ef1", "difficulty": 2200, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint array[200001];\nint main(){\n    int n,i,tmp;\n\tfor(i=1; i<=n;i++){\n\t\tscanf(\"%d\",&tmp);\n\t\tarray[i]=tmp+i;\n\t}\n\tqsort(&array,n,sizeof(int),&vector[(int)(n/2)];\n\tfor(i=1;i<n;i++){\n\t\tif(array[i]==array[i+1]){\n\t\t\tprintf(\":(\");\n            return 0;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tprintf(\"%d \",array[i]-i);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint array[200001];\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\nint main(){\n    int n,i,tmp;\n    scanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&tmp);\n\t\tarray[i]=tmp+i;\n\t}\n\tarray[0]=0;\n\tqsort(&array[1],n,sizeof(int),cmpfunc);\n\tfor(i=1;i<=n;i++){\n\t\tif(array[i]==array[i+1]){\n\t\t\tprintf(\":(\");\n            return 0;\n\t\t}\n\t}\n\tfor(i=1;i<n;i++){\n\t\tprintf(\"%d \",array[i]-i);\n\t}printf(\"%d\",array[n]-n);\n\treturn 0;\n}"}
{"similarity_score": 0.9940476190476191, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e181e45d7345282c4298c8acb37f2b7b", "bug_code_uid": "751d532359095d5a8a4166c9ed3d3f85", "src_uid": "842a0587147591ea38a20638f3a7960d", "apr_id": "a135d189f19c154ae977893b956daa9f", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/**\r\n * @Author: Yang Li\r\n * @Date:   2022-03-15 21:11:54\r\n * @Last Modified by:   Yang Li\r\n * @Last Modified time: 2022-03-15 22:13:06\r\n */\r\n/*\r\n\u6211\u662f\u50bb\u903c\r\n*/\r\n# include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--) {\r\n        int n, k;\r\n        scanf(\"%d %d\", &n, &k);\r\n        if (n%4==0) printf(\"%d %d %d\\n\", n/4, n/4, n/2);\r\n        else if (n%4==2) printf(\"%d %d %d\\n\", 2, (n-2)/2, (n-2)/2);\r\n        else printf(\"%d %d %d\", 1, (n-1)/2, (n-1)/2);\r\n    }\r\n    return 0;\r\n}", "fixed": "/**\r\n * @Author: Yang Li\r\n * @Date:   2022-03-15 21:11:54\r\n * @Last Modified by:   Yang Li\r\n * @Last Modified time: 2022-03-15 22:13:37\r\n */\r\n/*\r\n\u6211\u662f\u50bb\u903c\r\n*/\r\n# include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--) {\r\n        int n, k;\r\n        scanf(\"%d %d\", &n, &k);\r\n        if (n%4==0) printf(\"%d %d %d\\n\", n/4, n/4, n/2);\r\n        else if (n%4==2) printf(\"%d %d %d\\n\", 2, (n-2)/2, (n-2)/2);\r\n        else printf(\"%d %d %d\\n\", 1, (n-1)/2, (n-1)/2);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.17726396917148363, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "4da6cb00ea9bfc47212bf85b16f757f4", "bug_code_uid": "5ca545efba12cd6073521413d3ea16d7", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "e43af17733a3cf4a9152f75115714c97", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\nusing namespace std;\nint main(){\n    int i,z[30],x[30],n;\n    cin>>n;\n    for(i=0;i<n;i++){\n        cin>>z[i];\n    }\n    for(i=0;i<n;i++){\n       x[z[i]]=i+1;\n    }\n    for(i=1;i<=n;i++){\n        cout<<x[i]<<\" \";\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int i,x[110],n;\n    scanf(\"%d\",&n);\n    int z[n+10];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&z[i]);\n    }\n    for(i=0;i<n;i++){\n       x[z[i]]=i+1;\n    }\n    for(i=1;i<=n;i++){\n        printf(\"%d \",x[i]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9337748344370861, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d965b697174f7a635f063ec41d45615e", "bug_code_uid": "61c9725c5f86b4de55b264f50f00ac98", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "05b80256ca4d3d18388707efddcee3ba", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n    long long int n;\n    scanf(\"%d\", &n);\n    char s[n];\n    scanf(\"%s\", s);\n    unsigned long long int p = 2;\n    long long int count = 0;\n    long long int i = 0;\n    while (i < strlen(s) - 1)\n    {\n        if (s[i] == s[i + 1] && i%2==0)\n        {\n            s[i] = 195 - s[i];\n            count++;\n\n        }\n        i++;\n    }\n    printf(\"%d\\n\", count);\n    printf(\"%s\", s);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n    long long int n;\n    scanf(\"%d\", &n);\n    char s[n];\n    scanf(\"%s\", s);\n    long long int count = 0;\n    long long int i = 0,len=strlen(s);\n    while (i < len - 1)\n    {\n        if (s[i] == s[i + 1] && i%2==0)\n        {\n            s[i] = 195 - s[i];\n            count++;\n\n        }\n        i++;\n    }\n    printf(\"%d\\n\", count);\n    printf(\"%s\", s);\n    return 0;\n}"}
{"similarity_score": 0.9951923076923077, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4b5cca9b97a84427934f13d21b05c185", "bug_code_uid": "d7f76183b7ddb93e52c2600e6e9008a4", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "a77c425b435025a761e420719bac5328", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int n,i,j;\n scanf(\"%d\",&n);\n int a[n];\n for(i=0;i<n;i++)\n scanf(\"%d\",&a[i]);\n for(i=i;i<=n;i++)\n {\n  for(j=0;j<n;j++)\n  {\n   if(a[j]==i)\n   break;\n  }\n  printf(\"%d \",j+1);\n }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n int n,i,j;\n scanf(\"%d\",&n);\n int a[n];\n for(i=0;i<n;i++)\n scanf(\"%d\",&a[i]);\n for(i=1;i<=n;i++)\n {\n  for(j=0;j<n;j++)\n  {\n   if(a[j]==i)\n   break;\n  }\n  printf(\"%d \",j+1);\n }\n}"}
{"similarity_score": 0.9761273209549072, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6df1ea787b311812f19d780db4cac617", "bug_code_uid": "3c7d8a56370c3c816b52cc4de2e6906b", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "f10bf71c3d25a384082821715c29adce", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n    int i;\n    int sum[4];\n\n    scanf (\"%d %d %d %d\",sum[0],sum[1],sum[2],sum[3]);\n\n    int biggest = sum[0];\n    for(i = 0; i < 4; i++){\n        if(sum[i] > biggest)\n            biggest = sum [i];\n    }\n\n    for(i = 0; i < 4; i++){\n        sum[i] = biggest - sum[i];\n        if(sum[i] != 0)\n             printf(\"%d \",sum[i]);\n    }\n    \n}", "fixed": "#include <stdio.h>\n\nint main(void){\n    int i;\n    int sum[4];\n\n    scanf (\"%d %d %d %d\",&sum[0],&sum[1],&sum[2],&sum[3]);\n\n    int biggest = sum[0];\n    for(i = 0; i < 4; i++){\n        if(sum[i] > biggest)\n            biggest = sum [i];\n    }\n\n    for(i = 0; i < 4; i++){\n        sum[i] = biggest - sum[i];\n        if(sum[i] != 0)\n             printf(\"%d \",sum[i]);\n    }\n    \n}"}
{"similarity_score": 0.7518355359765051, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "e66466b1a3c528d34149a0a59c78ea57", "bug_code_uid": "a23e2432852e4bb267159b5bbb692631", "src_uid": "9c84eb518c273942650c7262e5d8b45f", "apr_id": "5687aeab43cf3eeff9b3f46a375a87be", "difficulty": 1100, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  long \tint n,m,d,i,x,y;\n  scanf(\"%ld\",&n);\n  scanf(\"%ld\",&d);\n  scanf(\"%ld\",&m);\n  for(i=1;i<=m;i++)\n  {\n  \t scanf(\"%ld\",&x);\n  \t  scanf(\"%ld\",&y);\n  \t  if((x+y-d)*(x+y-(2*n-d)>=0) && ((x-y-d)*(x-y+d)>=0))\n  \t  printf(\"YES\");\n  \t  else\n  \t  printf(\"NO\");\n  }\n  return 0;\n\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  long \tint n,m,d,i,x,y;\n  scanf(\"%ld\",&n);\n  scanf(\"%ld\",&d);\n  scanf(\"%ld\",&m);\n  for(i=1;i<=m;i++)\n  {\n  \tscanf(\"%ld\",&x);\n  \tscanf(\"%ld\",&y);\n  \t  if(((x+y-d)*(x+y-(2*n-d)))<=0 && ((x-y-d)*(x-y+d))<=0)\n  \t  {\n  \t  printf(\"YES\");\n  \t   printf(\"\\n\");\n     }\n  \t  else\n  \t  {\n  \t  printf(\"NO\");\n  \t  printf(\"\\n\");\n      }\n  }\n  return 0;\n\t\n}\n"}
{"similarity_score": 0.8088842975206612, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4f546fa2c528ea28b1ef0e3c389bc25d", "bug_code_uid": "f1286763fa54c34a6cbd4e5081375a73", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "b3a072129c5529e412899a965791ba90", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char a[100005];\n    char b[100005];\n    char ans[100005];\n\n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n    int i;\n    int n = strlen(a);\n    int c = 0;\n    int arr[100005];\n    int k = 0;\n    for (i = 0; i < n; i++) {\n        if (a[i] != b[i]) {\n            c++;\n            arr[k++] = i;\n        }\n    }\n    if (c % 2) {\n        printf(\"impossible\\n\");\n    } else {\n        strcpy(ans, a);\n        if (c == 0) {\n            if (a[0] == '0') {\n                ans[0] = '1';\n            } else {\n                ans[0] = '0';\n            }\n            printf(\"%s\\n\", ans);\n        } else {\n            if (a[arr[0]] == '0') {\n                ans[arr[0]] = '1';\n            } else {\n                ans[arr[0]] = '0';\n            }\n            if (b[arr[1]] == '0') {\n                ans[arr[1]] = '1';\n            } else {\n                ans[arr[1]] = '0';\n            }\n            printf(\"%s\\n\", ans);\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char a[100005];\n    char b[100005];\n    char ans[100005];\n\n    scanf(\"%s\", a);\n    scanf(\"%s\", b);\n    int i;\n    int n = strlen(a);\n    int c = 0;\n    int arr[100005];\n    int k = 0;\n    for (i = 0; i < n; i++) {\n        if (a[i] != b[i]) {\n            c++;\n            arr[k++] = i;\n        }\n    }\n    if (c % 2) {\n        printf(\"impossible\\n\");\n    } else {\n        strcpy(ans, a);\n        if (c == 0) {\n            if (a[0] == '0') {\n                ans[0] = '1';\n            } else {\n                ans[0] = '0';\n            }\n            printf(\"%s\\n\", ans);\n        } else {\n            int l = c/2;\n            for (i = 0; i < l; i++) {\n                if (a[arr[i]] == '0') {\n                    ans[arr[i]] = '1';\n                } else {\n                    ans[arr[i]] = '0';\n                }\n            }\n            printf(\"%s\\n\", ans);\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9856459330143541, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "29eb0f8e2f2d6d92b11e7e59acd57213", "bug_code_uid": "0c9caa7ef4c8292811777ee588772b30", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "be3c8c4aca43dc9ea686d3da7b964f39", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char word[100][100];\n    int i,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %s\",word[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        int l=strlen(word[i]);\n        if(l<=10)\n        {\n            printf(\"%s\\n\",word[i]);\n        }\n        else\n        {\n            printf(\"%c%d%c\\n\",word[i][0],l-2,word[i][l-1]);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char word[101][101];\n    int i,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %s\",word[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        int l=strlen(word[i]);\n        if(l<=10)\n        {\n            printf(\"%s\\n\",word[i]);\n        }\n        else\n        {\n            printf(\"%c%d%c\\n\",word[i][0],l-2,word[i][l-1]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5180930499712809, "equal_cnt": 21, "replace_cnt": 12, "delete_cnt": 8, "insert_cnt": 0, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "dfe42ddeb593df0fe20e735cdc2c08c8", "bug_code_uid": "f01974c176fbeec092524d4e57213b60", "src_uid": "60776cefd6c1a2f3c16b3378ebc31a9a", "apr_id": "55aee3dc9d8f24dea6979065e0479af5", "difficulty": 1500, "tags": ["two pointers", "binary search", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*\n * COMP.c\n *\n *  Created on: 20/lug/2016\n *      Author: andrea\n */\n#include <stdio.h>\n\nint main(void){\n\tint len, i, j = 0, leni, minleni, k;\n\tint pok[52], cs[52];\n\tint flats[100000];\n\tchar c;\n\tscanf(\"%d\", &len);\n\tgetchar();\n\tfor(i = 0; i < 52; i++){pok[i] = 0;}\n\tfor(i = 0; i < len; i++){\n\t\tscanf(\"%c\", &c);\n\t\tif(c >= 65 && c <= 90) c -= 65;\n\t\telse if(c >= 97 && c <= 122) c -= 71;\n\t\tif(pok[(int)c] == 0) j++;\n\t\tflats[i] = c;\n\t\tpok[(int)c] = 1;\n\t}\n\tint moar = 0;\n\tleni = j-1;\n\tfor(k = 0; k < 52; k++){cs[k] = 0;}\n\tfor(k = 0; k < j; k++){cs[flats[k]]++;}\n\tfor(k = 0; k < 52; k++){if(pok[k] && !cs[k]) moar = 1;}\n\twhile(moar){\n\t\tmoar = 0;\n\t\tleni++;\n\t\tcs[flats[leni]]++;\n\t\tfor(k = 0; k < 52; k++){if(pok[k] && !cs[k]) moar = 1;}\n\t}\n\tminleni = leni+1;\n\tfor(i = 0; i < len; i++){\n\t\tcs[flats[i]]--;\t\t\n\t\tif(cs[flats[i]]){\n\t\t\tminleni = minleni > leni-i ? leni-i : minleni;\n\t\t\tcontinue;\n\t\t}\n\t\tmoar = 1;\n\t\twhile(moar){\n\t\t\tif(leni-1 < len){\n\t\t\t\tleni++;\n\t\t\t\tif(!cs[flats[leni]]) moar = 0;\n\t\t\t\tcs[flats[leni]]++;\n\t\t\t}else break;\n\t\t}\n\t\tif(moar) break;\n\t\tminleni = minleni > leni-i ? leni-i : minleni;\n\t}\n\tprintf(\"%d\", minleni);\n\treturn 0;\n}\n", "fixed": "/*\n * COMP.c\n *\n *  Created on: 20/lug/2016\n *      Author: andrea\n */\n#include <stdio.h>\n\nint main(void){\n\tint len, i, lasti = 0, minlen = 0;\n\tint cs[52], flats[100000];\n\tchar c;\n\tscanf(\"%d\", &len);\n\tgetchar();\n\tfor(i = 0; i < 52; i++){cs[i] = 0;}\n\tfor(i = 0; i < len; i++){\n\t\tscanf(\"%c\", &c);\n\t\tif(c >= 65 && c <= 90) c -= 65;\n\t\telse if(c >= 97 && c <= 122) c -= 71;\n\t\tif(cs[(int)c] <= 0) minlen = i-lasti+1;\n\t\tcs[(int)c]++;\n\t\tflats[i] = (int)c;\n\t\twhile(cs[flats[lasti]] > 1){\n\t\t\tcs[flats[lasti]]--;\n\t\t\tlasti++;\n\t\t}\n\t\tminlen = minlen > i-lasti+1 ? i-lasti+1 : minlen;\n\t}\n\n\tprintf(\"%d\", minlen);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7467018469656992, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "ecfd97aaa8e53343b7063a053d0ff94d", "bug_code_uid": "2898a99da49ad705df332393addde75e", "src_uid": "4fc1ca3517168842cc85d74ba0066598", "apr_id": "0b99f95bc300e2138bd40a05d1104cdb", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define BUF_TAM 102\n\nint main(int argc, char **argv) {\n  int i, n, intervalo0, intervalo, sim;\n  \n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d \", &n);\n\n  sim = 1;\n  i = 0;\n  while (i++ < n && getchar() == '0');\n  if (i++ < n && getchar() != '0') intervalo0 = 0;\n  else {\n    intervalo0 = 1;\n    while (i++ < n && getchar() == '0') intervalo0++;\n  }\n  intervalo = intervalo0;\n  while (i < n) {\n    if (intervalo0 != intervalo) {\n      sim = 0;\n      break;\n    }\n    while (i++ < n)\n      if (getchar() == '0') {\n\tintervalo = 0;\n\tbreak;\n      }\n    while (i++ < n) {\n      intervalo++;\n      if (getchar() != '0') break;\n    }\n  }\n\n  if (sim) puts(\"YES\");\n  else puts(\"NO\");\n\n  return 0;\n}\n    \n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define BUF_TAM 102\n\nint main(int argc, char **argv) {\n  int i, j, n, intervalo, sim;\n  \n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d \", &n);\n\n  sim = 1;\n  i = 0;\n  while (i++ < n && getchar() == '0');\n  if (i++ < n && getchar() != '0') intervalo = 0;\n  else {\n    intervalo = 1;\n    while (i++ < n && getchar() == '0') intervalo++;\n  }\n  while (i < n) {\n    for (j = 0; i < n && j < intervalo; i++, j++)\n      if (getchar() != '0') {\n\tsim = 0;\n\tbreak;\n      }\n    if (i++ < n && getchar() != '1') {\n      while (i++ < n && getchar() == '0');\n      if (i >= n) break;\n      sim = 0;\n    }\t\n  }\n\n  if (sim) puts(\"YES\");\n  else puts(\"NO\");\n\n  return 0;\n}\n    \n"}
{"similarity_score": 0.8278737343656939, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "edb4765cc8fe13ad8688c1c921ebd165", "bug_code_uid": "7c2c4f0cdbfce7de041bd0b9a2cfaaa1", "src_uid": "cd6bc23ea61c43b38c537f9e04ad11a6", "apr_id": "30006632313af68344c32fc94b408337", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100][100];\n    int i,j,n,m,flag = 0,max;\n    scanf(\"%d %d\",&n,&m);\n    getchar();\n    int a = -1,b = -1,c = 2100,d = -1;\n    for(i = 0;i < n;i++)\n    {\n        scanf(\"%s\",s[i]);\n        for(j = 0;j < strlen(s[i]);j++)\n        {\n            if(s[i][j] == 'B')\n            {\n                flag++;\n                b = i;\n                if(j < c)\n                    c = j;\n                if(j > d)\n                    d = j;\n                if(flag == 1)\n                    a = i;\n            }\n        }\n    }\n    int x = b-a+1;\n    int y = d-c+1;\n    if(x > y)\n        max = x;\n    else\n        max = y;\n    if(max*max > n*m)\n        printf(\"-1\\n\");\n    else if(a == -1 && b == -1 && c ==2100  && d == -1)\n        printf(\"1\\n\");\n    else\n        printf(\"%d\",max*max-flag);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100][100];\n    int i,j,n,m,flag = 0,max;\n    scanf(\"%d %d\",&n,&m);\n    getchar();\n    int a = -1,b = -1,c = 2100,d = -1;\n    for(i = 0;i < n;i++)\n    {\n        scanf(\"%s\",s[i]);\n        for(j = 0;j < m;j++)\n        {\n            if(s[i][j] == 'B')\n            {\n                flag++;\n                b = i;\n                if(j < c)\n                    c = j;\n                if(j > d)\n                    d = j;\n                if(flag == 1)\n                    a = i;\n            }\n        }\n    }\n    int x;\n    x = b-a+1;\n    int y;\n    y = d-c+1;\n    if(x > y)\n        max = x;\n    else\n        max = y;\n    if(x > m || y > n)\n        printf(\"-1\\n\");\n    else if(flag == 0)\n        printf(\"1\\n\");\n    else\n        printf(\"%d\",max*max-flag);\n    return 0;\n}\n"}
{"similarity_score": 0.7333333333333333, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "6429ff0853941336c3519fef8e3ffbb3", "bug_code_uid": "31cabaafa222a00a872e11457cf1bf98", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "6dbb8569d6c6024f1c5fad2958eb0da6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#imclude<stdio.h>\nint main()\n{\nint i,n;\nscanf(\"%d\",&n);\nprintf(\"I Hate \");\nfor(i=1;i<n;i++)\n{\nif(i%2!=0)\n{\n\nprintf(\"I hate \");\nif(i<=n-1)\n{\nprintf(\"that \");\n}\n}\nelse{\n\nprintf(\"I love \");\nif(i<=n-1)\n{\nprintf(\"that \");\n}\n}\n\n\n}\nprintf(\"it\");\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint i,n;\nscanf(\"%d\",&n);\nprintf(\"I hate \");\nfor(i=1;i<n;i++)\n{\nif(i%2==0)\n{\n\nprintf(\"that I hate \");\n\n}\nelse{\n\nprintf(\"that I love \");\n\n}\n\n\n}\n\nprintf(\"it\");\n\nreturn 0;\n}"}
{"similarity_score": 0.8875453446191052, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0800ca80b1e2564e3c9c2ee1895f7618", "bug_code_uid": "de1ab0e138aeaccec08155bbf607528f", "src_uid": "ddc9201725e30297a5fc83f4eed75fc9", "apr_id": "11b4632f5f553bf89505803db8dd5d09", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main()\n{\n    int cnt = 0;\n    long long sum = 0;\n    char c;\n\n    while(c = getchar(), c != EOF && c != '\\n') sum += c - '0';\n    if(sum) cnt++;\n    while(sum > 9)\n    {\n        char s[1000] = {0};\n        sprintf(s,\"%lld\",sum);\n        cnt++; sum = 0;\n        for(int i = 0; s[i]; i++) sum += s[i] - '0';\n    }\n    printf(\"%d\\n\", cnt);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n \n \nint main()\n{\n    int cnt = 0;\n    long long sum = 0;\n    char c;\n \n    while(c = getchar(), c != EOF && c != '\\n') sum += c - '0', cnt++;\n    if(cnt <= 1)\n    {\n        puts(\"0\");\n        return 0;\n    }\n    cnt = 1;\n    while(sum > 9)\n    {\n        char s[1000] = {0};\n        sprintf(s,\"%lld\",sum);\n        cnt++; sum = 0;\n        for(int i = 0; s[i]; i++) sum += s[i] - '0';\n    }\n    printf(\"%d\\n\", cnt);\n \n    return 0;\n}"}
{"similarity_score": 0.9959100204498977, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c886c1eda54337a6b5c6926ef2e14c9b", "bug_code_uid": "6a6a938a0fcd41e6af238f3f0c2693d5", "src_uid": "5139d222fbbfa70d50e990f5d6c92726", "apr_id": "fa3d06d4aaa4a8fdea9b5de956b16f63", "difficulty": 1100, "tags": ["brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int k=1;k<=t;k++)\n    {\n        int n,flag=0;\n        scanf(\"%d \",&n);\n        int a[n];\n        for(int i=0;i<n;i++)\n            scanf(\"%d\",&a[i]);\n        for(int i=0;i<n-2;i++)\n        {\n            for(int j=i+2;j<n;j++)\n            {\n                if(a[i]==a[j])\n                flag=1;\n            }\n        }\n        if(flag)\n        printf(\"YES\");\n        else\n        printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "\n#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int k=1;k<=t;k++)\n    {\n        int n,flag=0;\n        scanf(\"%d \",&n);\n        int a[n];\n        for(int i=0;i<n;i++)\n            scanf(\"%d\",&a[i]);\n        for(int i=0;i<n-2;i++)\n        {\n            for(int j=i+2;j<n;j++)\n            {\n                if(a[i]==a[j])\n                flag=1;\n            }\n        }\n        if(flag)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6444121915820029, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1097ae1fd5f8e8f120bbe586c7e7cd8b", "bug_code_uid": "bfef890550c21ee2d0e441b4f6438489", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "738844da7ff40937a1589e566c2032d4", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, k, i, rem;\n    scanf(\"%d %d\", &n, &k);\n    for (i=0; i<k; i++)\n        printf(\"%c\", 'a'+i);\n    rem=n-k;\n    for (i=0; i<rem; i++)\n        printf(\"a\");\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, k, i, rem;\n    scanf(\"%d %d\", &n, &k);\n    for (i=0; i<k; i++)\n        printf(\"%c\", 'a'+i);\n    rem=n-k;\n    if (k>1) {\n        for (i=0; i<rem; i++) {\n            if (i%2) printf(\"b\");\n            else printf(\"a\");\n        }\n        printf(\"\\n\");\n    }\n    else {\n        for (i=0; i<rem; i++) {\n            if (i%2) printf(\"a\");\n            else printf(\"b\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9941747572815534, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6a1583c4d66ad758448653bff41c0d6a", "bug_code_uid": "49a669eb0258f0bfb698aa65b96a9818", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "71c5be0bd050982e284000a70c10e297", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint a,b,c,n,o,i,A,B;\n\tscanf(\"%d\",&o);\n\tfor(i=0;i<o;i++)\n\t{\n\t\tscanf(\"%d %d %d %d\",&a,&b,&c,&n);\n\t\tA=a+b+c+n;\n\t\tB=a+b+c;\n\t\tif(A%3==0&&c<(A/3)&&b<(A/3)&&a<(A/3))\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\t\n\t}\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tint a,b,c,n,o,i,A,B;\n\tscanf(\"%d\",&o);\n\tfor(i=0;i<o;i++)\n\t{\n\t\tscanf(\"%d %d %d %d\",&a,&b,&c,&n);\n\t\tA=a+b+c+n;\n\t\tB=a+b+c;\n\t\tif(A%3==0&&c<=(A/3)&&b<=(A/3)&&a<=(A/3))\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\t\n\t}\n}"}
{"similarity_score": 0.1548731642189586, "equal_cnt": 17, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "c5908005456e185c7c24ce7a43a9e0a6", "bug_code_uid": "38e2ce23271a1a63bbe3e3127306f09c", "src_uid": "c3244e952830643938d51ce14f043d7d", "apr_id": "fd8597d246d4f69395f13d96b779b05c", "difficulty": 1200, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid reverse(char s[])\n{\n    int c, i, j;\n\n    for (i = 0, j = strlen(s)-1; i < j; i++, j--) {\n        c = s[i];\n        s[i] = s[j];\n        s[j] = c;\n    }\n}\n\nint main() {\n\tchar road[10001], first[101], last[101];\n\tscanf(\"%s %s %s\", road, first, last);\n\tint flag = 0;\n\tchar *f = strstr(road,first);\n\tint n = strlen(first);\n\tif (f && strstr(f+n,last)) {\n\t\tflag = 1;\n\t}\n\treverse(first);\n\treverse(last);\n\tf = strstr(road,last);\n\tn = strlen(last);\n\tif (f && strstr(f + n,last)) {\n\t\tflag += 2;\n\t}\n\tswitch(flag) {\n\t\tcase 0: printf(\"fantasy\"); break;\n\t\tcase 1: printf(\"forward\"); break;\n\t\tcase 2: printf(\"backward\"); break;\n\t\tcase 3: printf(\"both\"); break;\n\t}\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nvoid reverse(char *x)\n{\n\tchar *p=x;\n\twhile(p && *p) ++p;\n\tfor(--p;x<p;++x,--p)\n\t\t*x=*x^*p, *p=*x^*p, *x=*x^*p;\n}\nint func(char *str,char* a,char *b, int dir)\n{\n\tif(dir){\n\t\treverse(b);\n\t\treverse(a);\n\n\t\tchar *c=strstr(str,b);\n\t\tif(c==NULL) return 0;\n\n\t\tif(strstr(c+strlen(b),a)==NULL) return 0;\n\t\telse return 2;\n\t}\n\telse {\n\t\tchar *c=strstr(str,a);\n\t\tif(c==NULL) return 0;\n\t\t\n\t\tif(strstr(c+strlen(a),b)==NULL) return 0;\n\t\telse return 1;\n\t}\n}\nint main(void)\n{\n\tchar stat[100001],seq1[101],seq2[101];\n\n\tscanf(\"%s\",stat);\n\tscanf(\"%s\",seq1);\n\tscanf(\"%s\",seq2);\n\n\tint result=func(stat,seq1,seq2,0)+func(stat,seq1,seq2,1);\n\n\tif(result==0) printf(\"fantasy\");\n\telse if(result==1) printf(\"forward\");\n\telse if(result==2) printf(\"backward\");\n\telse printf(\"both\");\n\treturn 0;\n}"}
{"similarity_score": 0.36101083032490977, "equal_cnt": 34, "replace_cnt": 23, "delete_cnt": 1, "insert_cnt": 9, "fix_ops_cnt": 33, "lang": "GNU C11", "fix_code_uid": "c3264b0ce2570e0eaac420c8c0a4d538", "bug_code_uid": "22ed38d5ae2f4cd24a62f96c296599a6", "src_uid": "64b597a47106d0f08fcfad155e0495c3", "apr_id": "4b09644293dfe0181bd63185c938ff94", "difficulty": 900, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\nint tab1[1000];\nint tab2[1000];\nint s,n,i,res=0;\nscanf(\"%d\",&n);\nscanf(\"%d\",&s);\n\nfor(int i=0;i<n;i++)\n{\n\tscanf(\"%d\",&tab1[i]);\n}\nfor(int j=0;j<n;j++)\n{\n\tscanf(\"%d\",&tab2[j]);\n}\nif(tab1[0])\n{\n\tif(tab1[s-1]==1)\n\t{\n\t\tres=1;\n\t}else\n\t{\n\t\ti=s;\n\t\twhile(s<n)\n\t\t{\n\t\t\tif (tab1[i]==1&& tab2[i]==1)\n\t\t\t{\n\t\t\t\tres=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\t\n\t}\n\t\n}\n\nif(res)\nprintf(\"YES\");\nelse \nprintf(\"NO\");\n\n\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int x,y;\n    int tab1[1000];\n    int tab2[1000];\n    int res=0;\n    int nb=1;\n    int i;\n    scanf(\"%d\",&x);\n    scanf(\"%d\",&y);\n    for(i=0;i<x;i++)\n    {\n        \n\n         scanf(\"%d\",&tab1[i]);\n        \n       \n        \n        \n    }\n     for(i=0;i<x;i++)\n    {\n        \n\n         scanf(\"%d\",&tab2[i]);\n        \n       \n        \n        \n    }\n    if(tab1[0])\n    \n    \n      {  i=0;\n    while(  i<x)\n    {  \n        \n      \n        if(i+1==y && tab1[i]==1)\n        {res=1;\n          break;  \n            \n        }\n        else\n        if(i+1>y && tab2[i]==1 && tab1[i])\n        break;\n        else\n        i++;\n    }\n  \n    if(!res && i<x && tab2[i])\n    \n    \n    {\n        while( i>0)\n    { \n        \n    \n        if(i+1==y && tab2[i])\n            res=1;\n          i--;\n         \n    }\n\n \n    \n    }\n    \n    \n      }\n    if(res)\n    printf(\"yes\");\n    else\n    printf(\"no\");\n     \n    \n    \n    \n    return 0;\n    \n}\n"}
{"similarity_score": 0.4295676429567643, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "35ef0f7365470edbc8960da3db273fe4", "bug_code_uid": "9615e615144b500d36b4f09c7538651c", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "76c4373c4aab8e23cbffa397a290c0a5", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAXN 500000\n\nint a[MAXN], cnt[MAXN+1];\nlong long sum[MAXN];\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n        sum[i] = a[i] + (i? sum[i-1]: 0);\n    }\n    if (sum[n-1] % 3) {\n        puts(\"0\");\n    } else {\n        long long key = sum[n-1]/3;\n        for (int i = n-1; i >= 0; i--) {\n            cnt[i] = cnt[i+1];\n            if (sum[i] == key*2)\n                cnt[i]++;\n        }\n        long long ans = 0;\n        for (int i = 1; i < n-1; i++) {\n            if (sum[i] == key)\n                ans += cnt[i+1];\n        }\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAXN 500000\n\nint a[MAXN], cnt[MAXN];\n\nint main()\n{\n    int n;\n    long long sum = 0;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n        sum += a[i];\n    }\n    if (sum % 3 != 0) {\n        puts(\"0\");\n    } else {\n        long long backward_sum = 0;\n        for (int i = n-1; i >= 0; i--) {\n            backward_sum += a[i];\n            if (backward_sum == sum/3)\n                cnt[i] = 1;\n        }\n        for (int i = n-2; i >= 0; i--)\n            cnt[i] += cnt[i+1];\n        long long ans = 0, tmp = 0;\n        for (int i = 0; i < n-2; i++) {\n            tmp += a[i];\n            if (tmp == sum/3)\n                ans += cnt[i+2];\n        }\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.98635477582846, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "348b09a563fb949a0862b7f866f3b9d3", "bug_code_uid": "199a79eb2c768c75c5b98bcd4a905f44", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "97f5de8f936a20ec2ee02af1068acaba", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,d,e,cnt;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&d);\n\tcnt=d+1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&e);\n\t\tif(d<=e)\n\t\t{\n\t\t\tcnt++;\n\t\t\tcnt+=e-d+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcnt+=d-e+1;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,d,e,cnt;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&d);\n\tcnt=d+1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&e);\n\t\tif(d<=e)\n\t\t{\n\t\t\tcnt++;\n\t\t\tcnt+=e-d+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcnt+=d-e+1;\n\t\t\tcnt++;\n\t\t}\n\t\td=e;\n\t}\n\tprintf(\"%d\\n\",cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9598930481283422, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "45d539ce1007e6e85df4e8fd8a5aac22", "bug_code_uid": "7e49b9076d281b70ddad82f88ad59dea", "src_uid": "475a24d36eab99ae4f78815ccdc5da91", "apr_id": "8b7380411ba09aec9b72809f8afba111", "difficulty": 1500, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char *argv[])\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,x,a,ans,i,nsum,psum;\n\t\tnsum=psum=0;\n\t\tscanf(\"%d%d\",&n,&x);\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a>x)\n\t\t\t\tnsum+=a-x;\n\t\t\telse\n\t\t\t\tpsum+=x-a;\n\t\t}\n\t\tif(!nsum&&!psum)\n\t\t\tans=0;\n\t\telse if(psum==nsum)\n\t\t\tans=1;\n\t\telse\n\t\t\tans=2;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}", "fixed": "#include <stdio.h>\n\nint main(int argc, char *argv[])\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,x,a,ans=0,i,nsum,psum;\n\t\tnsum=psum=0;\n\t\tscanf(\"%d%d\",&n,&x);\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a);\n\t\t\tif(a>x)\n\t\t\t\tnsum+=a-x;\n\t\t\telse if(a<x)\n\t\t\t\tpsum+=x-a;\n\t\t\telse ans=1;\n\t\t}\n\t\tif(!nsum&&!psum)\n\t\t\tans=0;\n\t\telse if(psum==nsum||ans)\n\t\t\tans=1;\n\t\telse\n\t\t\tans=2;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}"}
{"similarity_score": 0.23415492957746478, "equal_cnt": 19, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "a1bae2b2a4afb5131d466cd717846e41", "bug_code_uid": "a615519b900c634d16b2487ca042414a", "src_uid": "240a2b88ded6016d0fd7157d0ee2beea", "apr_id": "967368b77ed2b48115f8c5e609188983", "difficulty": 1200, "tags": ["greedy", "math", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nstruct interval\n{\n    int start;\n    int end;\n};\nint main()\n{\n    char c[5001];\n    int l,i,j,k=0,count=0,i1,sum=0;\n    struct interval a[5001];\n    scanf(\"%s\",c);\n    l=strlen(c);\n    for(i=0;i<(l-4);)\n    {\n        if(c[i]=='b' && c[i+1]=='e' && c[i+2]=='a' && c[i+3]=='r')\n        {\n            a[k].start=i;\n            a[k].end=i+3;\n            k++;\n            i=i+4;\n        }\n        else\n            i++;\n    }\n    for(i=0;i<k;i++)\n    {\n        for(j=0;(j+i)<k;j++)\n        {\n\n                if(i%2==0)\n                {\n                    sum=sum+(a[j].start+1)*(l-a[j+i].end);\n                }\n                else if(i%2==1)\n                {\n                    sum=sum-(a[j].start+1)*(l-a[j+i].end);\n                }\n\n        }\n    }\n    printf(\"%d\\n\",sum);\nreturn 0;}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[5100];\n    scanf(\"%s\",s);\n    int n,i,j,m=0;\n    n=strlen(s);\n    j=-1;\n    for(i=0;i<n-3;i++)\n    {\n        if(strncmp(s+i,\"bear\",4)==0)\n        {\n            m+=((i-j)*(n-i-3));\n            j=i;\n        }\n    }\n    printf(\"%d\\n\",m);\n    return 0;\n}"}
{"similarity_score": 0.6641566265060241, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "69471fc509daabdf6072c524c7a44d7a", "bug_code_uid": "fac1a82b39695d3af66e7e3eedbec211", "src_uid": "6e7c2c0d7d4ce952c53285eb827da21d", "apr_id": "05215bd6f5bffabffd0028f38f142699", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n\n  int game[n][n];\n  int columnsums[n];\n  int rowsums[n];\n  int winners = 0;\n  int i; int j;\n  for(i=0; i<n; i++) {\n    for(j=0; j<n; j++) {\n      scanf(\"&d\", &(game[i][j]));\n    }\n  }\n  for(i=0; i<n; i++) {\n    for(j=0; j<n; j++) {\n      rowsums[i] += game[i][j];\n      columnsums[j] += game[i][j];\n    }\n  }\n\n  for(i=0; i < n; i++) {\n    for(j=0; j < n; j++) {\n      if(columnsums[j] > rowsums[i]) \n\twinners++;\n    }\n  }\n  printf(\"%d\", winners);\n  return 0;\n}\n", "fixed": "#include \"stdio.h\"\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n\n  int game[n][n];\n  int columnsums[n];\n  int rowsums[n];\n  int winners = 0;\n  int i; int j; int k;\n  for(k=0; k< n; k++) {\n  \tcolumnsums[k] = 0;\n  \trowsums[k]=0;\n  \t}\n  for(i=0; i<n; i++) {\n    for(j=0; j<n; j++) {\n      scanf(\"%d\", &(game[i][j]));\n    }\n  }\n  for(i=0; i<n; i++) {\n    for(j=0; j<n; j++) {\n   //       printf(\"game[%d][%d] = %d \\r\\n\", i, j, game[i][j]);\n    //printf(\"(c, r) = (%d, %d)\\r\\n\", columnsums[j], rowsums[i]);\n\n      rowsums[i] += game[i][j];\n      columnsums[j] += game[i][j];\n    }\n  }\n\n  for(i=0; i < n; i++) {\n    for(j=0; j < n; j++) {\n    //printf(\"(c, r) = (%d, %d)\\r\\n\", columnsums[j], rowsums[i]);\n      if(columnsums[j] > rowsums[i]) \n\t     winners++;\n    }\n  }\n  printf(\"%d \\r\\n\", winners);\n  return 0;\n}\n"}
{"similarity_score": 0.5372781065088758, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b4271ba17332fa2a39dbf570a098be53", "bug_code_uid": "daf50712c7bf6baf166b9a9fe8e5bfaf", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "0bdb2c5ce55dd7d83d93299552c62bc5", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h>\n\nint main()\n{ int a[1000],x,n,m,count=0;\nchar c[1000];\nscanf(\"%d\",&n);\nscanf(\"%d\",&m);\nfor(int i=0;i<n;++i){\n   scanf(\"  %c\",&c[i]);\n   scanf(\"%d\",&a[i]);\n}\nfor(int i=0;i<n;++i){\n    if(c[i]=='+'){\n        m+=a[i];\n        }\n    else{\n        m-=a[i];\n        if(m<0){\n            m+=a[i];\n            count++;\n        }\n    }\n}\nprintf(\"%d %d\",m,count);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{ int a[1000],x,n,count=0;\nlong long int m;\nchar c[1000];\nscanf(\"%d\",&n);\nscanf(\"%I64d\",&m);\nfor(int i=0;i<n;++i){\n   scanf(\"  %c\",&c[i]);\n   scanf(\"%I64d\",&a[i]);\n}\n\n\n\nfor(int i=0;i<n;++i){\n    if(c[i]=='+'){\n        m+=a[i];\n\n        }\n    if(c[i]=='-'){\n\n        m-=a[i];\n        if(m<0){\n            m+=a[i];\n            count++;\n        }\n        ;\n    }\n}\nprintf(\"%I64d %d\",m,count);\n    return 0;\n}"}
{"similarity_score": 0.9989528795811519, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f318f8198aa3c4cd5f1286e61b6ef576", "bug_code_uid": "045c90d1730e88058f8961848a38fbdd", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "67b2356715849fcbe5f30d83ae9ddf03", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\n    int t, k, x, y;\r\n    scanf(\"%d\", &t);\r\n \r\n    for(int i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\", &k);\r\n        y = 0, x = 0;\r\n \r\n        while(1)\r\n        {\r\n            y++;\r\n            if(y%3!=0 && y%10!=3)\r\n            {\r\n                x++;\r\n                if(k=x)\r\n                {\r\n                    printf(\"%d\\n\", y);\r\n                    break;\r\n                }\r\n \r\n            }\r\n        }\r\n \r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\n    int t, k, x, y;\r\n    scanf(\"%d\", &t);\r\n \r\n    for(int i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\", &k);\r\n        y = 0, x = 0;\r\n \r\n        while(1)\r\n        {\r\n            y++;\r\n            if(y%3!=0 && y%10!=3)\r\n            {\r\n                x++;\r\n                if(k==x)\r\n                {\r\n                    printf(\"%d\\n\", y);\r\n                    break;\r\n                }\r\n \r\n            }\r\n        }\r\n \r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9940323955669225, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "cffff627c5444ff9713c1b05bc87952d", "bug_code_uid": "f51c985b2d395b9bc6927f4c47209e18", "src_uid": "ca5c44093b1ab7c01970d83b5f49d0c6", "apr_id": "9964d49ecf710af40bcd5bf06cbc6c77", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int count[101][101],n,i,j,k,x1,y1,x2,y2;\n    for(i=1;i<=100;i++)\n    {\n        for(j=1;j<=100;j++)\n        {\n            count[i][j]=0;\n        }\n    }\n    scanf(\"%d\",&n);\n    for(k=1;k<=n;k++)\n    {\n        scanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n        for(i=y1;i<=y2;i++)\n        {\n            for(j=x1;j<=x2;j++)\n            {\n                count[i][j]++;\n            }\n        }\n    }\n    k=0;\n    for(i=1;i<=100;i++)\n    {\n        for(j=1;j<=100;j++)\n        {\n            k=k+count[i][j];\n        }\n    }\n    printf(\"%d\".k);\n    return 0;\n}\n    ", "fixed": "#include <stdio.h>\nint main()\n{\n    int count[101][101],n,i,j,k,x1,y1,x2,y2;\n    for(i=1;i<=100;i++)\n    {\n        for(j=1;j<=100;j++)\n        {\n            count[i][j]=0;\n        }\n    }\n    scanf(\"%d\",&n);\n    for(k=1;k<=n;k++)\n    {\n        scanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n        for(i=y1;i<=y2;i++)\n        {\n            for(j=x1;j<=x2;j++)\n            {\n                count[i][j]++;\n            }\n        }\n    }\n    k=0;\n    for(i=1;i<=100;i++)\n    {\n        for(j=1;j<=100;j++)\n        {\n            k=k+count[i][j];\n        }\n    }\n    printf(\"%d\",k);\n    return 0;\n}"}
{"similarity_score": 0.9688755020080321, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ae3e13dd19ec2ae341f8f1c50c0c9e49", "bug_code_uid": "fb96ab278805cada8b1783118f196cb2", "src_uid": "de41c260a37ec9db2371efb9d246a470", "apr_id": "56254083698e389845f7f49609e2e731", "difficulty": 2000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/* practice with Dukkha */\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/time.h>\n\n#define N\t100000\n\nvoid srand_() {\n\tstruct timeval tv;\n\n\tgettimeofday(&tv, NULL);\n\tsrand(tv.tv_sec ^ tv.tv_usec);\n}\n\nint rand_(int n) {\n\treturn (rand() * 76543LL + rand()) % n;\n}\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tstatic int aa[N], kk[N];\n\tint n, i, j, cnt, tmp;\n\n\tsrand_();\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tfor (i = 0; i < n; i++) {\n\t\tj = rand_(i + 1);\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n\t}\n\tqsort(aa, n, sizeof *aa, compare);\n\tcnt = 0;\n\tfor (i = 0; i < n; i = j) {\n\t\tj = i + 1;\n\t\twhile (j < n && aa[j] == aa[i])\n\t\t\tj++;\n\t\tif (j < n && aa[j] - aa[i] > 1) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tkk[cnt++] = j - i;\n\t}\n\tfor (i = 1; i < cnt; i++)\n\t\tif ((kk[i] -= kk[i - 1]) < 0) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\tprintf(kk[cnt - 1] == 0 ? \"YES\\n\" : \"NO\\n\");\n\treturn 0;\n}\n", "fixed": "/* practice with Dukkha */\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/time.h>\n\n#define N\t100000\n\nvoid srand_() {\n\tstruct timeval tv;\n\n\tgettimeofday(&tv, NULL);\n\tsrand(tv.tv_sec ^ tv.tv_usec);\n}\n\nint rand_(int n) {\n\treturn (rand() * 76543LL + rand()) % n;\n}\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tstatic int aa[N], kk[N];\n\tint n, i, j, cnt, tmp;\n\n\tsrand_();\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tfor (i = 0; i < n; i++) {\n\t\tj = rand_(i + 1);\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n\t}\n\tqsort(aa, n, sizeof *aa, compare);\n\tcnt = 0;\n\tfor (i = 0; i < n; i = j) {\n\t\tj = i + 1;\n\t\twhile (j < n && aa[j] == aa[i])\n\t\t\tj++;\n\t\tif (j < n && aa[j] - aa[i] > 1) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tkk[cnt++] = j - i;\n\t}\n\tfor (i = 1; i < cnt; i++)\n\t\tif ((kk[i] -= kk[i - 1]) < 0 || (i == cnt - 1) != (kk[i] == 0)) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"YES\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.44089456869009586, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "45e07d012c932cfe11ca23517dfde8aa", "bug_code_uid": "452871dcbfdbc05c5afe906c5babca5f", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "eaa671c19525b99c7a7f9e5d72e04634", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    long int n,N,k,s,a,b;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n              scanf(\"%ld\",&n);\n              /*if(n==1)\n              printf(\"3\\n\");*/\n              if(n%2==0)\n              printf(\"%ld\\n\",(4*n+1));\n              else\n              {\n                  s=0;\n                  b=4*n+1;k=1;\n                  N=((b-k)/(n+1))+1;\n                  s=s+N;\n                  a=k+(N-1)*(n+1);\n                  k=(n+1)-(b-1-a);\n                  while(a!=b)\n                  {\n                             N=(b-k)/(n+1)+1;\n                             s=s+N;\n                             a=k+(N-1)*(n+1);\n                             k=(n+1)-(b-1-a);\n                  }\n                  printf(\"%ld\\n\",s);\n              }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int gcd(long long int a,long long int b)\n{\n     if(b==0)\n     return a;\n     else\n     return gcd(b,a%b);\n}\nint main()\n{\n    int t;\n    long long int n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n              scanf(\"%I64d\",&n);\n              if(n%2==0)\n              printf(\"%I64d\\n\",(4*n+1));\n              else\n              {\n                  printf(\"%I64d\\n\",(4*n/gcd(4*n,n+1))+1);\n              }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9815873015873016, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7149271e68518344aa75a11a142fa6cf", "bug_code_uid": "a42bc9c20f7f751cb734f37b0e6884c7", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "722fcefffa7062567786334352dd18f0", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n/*index array used here to access each element in O(1) time just like we can access an element*/\n\nint main()\n{\n    int *array, *indexArray, queries, query, size, i, vasya = 0, petya = 0, j;\n    scanf(\" %d\", &size);\n    array = (int*)malloc(size*sizeof(int));\n    indexArray = (int*)malloc((size + 1)*sizeof(int));\n    for(i = 0; i<size; j++)\n    {\n        scanf(\" %d\", array + i);\n    }\n    for(i = 0; i<size; i++)\n    {\n        indexArray[array[i]] = i;       \n    }\n    scanf(\" %d\", &queries);\n    for(i = 0; i<queries; i++)\n    {\n        //printf(\"%d\\n\", __LINE__);\n        scanf(\" %d\", &query);\n        vasya += indexArray[query] + 1;\n        petya += size - indexArray[query];\n    }\n    printf(\"%d %d\\n\", vasya, petya);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n/*index array used here to access each element in O(1) time just like we can access an element*/\n\nint main()\n{\n    int *array, *indexArray, queries, query, size, i;\n    long long int vasya = 0, petya = 0;\n    scanf(\" %d\", &size);\n    array = (int*)malloc(size*sizeof(int));\n    indexArray = (int*)malloc((size + 1)*sizeof(int));\n    for(i = 0; i<size; i++)\n    {\n        scanf(\" %d\", array + i);\n    }\n    for(i = 0; i<size; i++)\n    {\n        indexArray[array[i]] = i;       \n    }\n    scanf(\" %d\", &queries);\n    for(i = 0; i<queries; i++)\n    {\n        //printf(\"%d\\n\", __LINE__);\n        scanf(\" %d\", &query);\n        vasya += indexArray[query] + 1;\n        petya += size - indexArray[query];\n    }\n    printf(\"%lld %lld\\n\", vasya, petya);\n    return 0;\n}"}
{"similarity_score": 0.9916603487490523, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "1a9e556d48a93f4f191894d07bcc2296", "bug_code_uid": "6d96d9455e7e68e5a663b5e409a8720c", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "a508d60f7044f5c6a7d8e1ca609ef416", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nlong long int lista[500000];\nint main()\n{\n    long long int n,k,total,cantidad,aux,suma;\n    total=cantidad=aux=suma=0;\n    scanf(\"%d\", &n);\n    for(k=0;k<n;k++)\n    {\n        scanf(\"%d\",&aux);\n        lista[k]=lista[k-1]+aux;\n    }\n    suma=lista[n-1];\n    if((suma%3)==0)\n    {\n        suma=suma/3;\n        for(k=0;k<n-1;k++)\n        {\n            if(lista[k]==suma*2)\n            {\n                total=total+cantidad;\n            }\n            if(lista[k]==suma)\n            {\n                cantidad++;\n            }\n        }\n        printf(\"%d\",total);\n    }else{\n        printf(\"0\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong long int lista[500050];\nint main()\n{\n    long long int n,k,total,cantidad,aux,suma;\n    total=cantidad=aux=suma=0;\n    scanf(\"%I64d\", &n);\n    for(k=0;k<n;k++)\n    {\n        scanf(\"%I64d\",&aux);\n        lista[k]=lista[k-1]+aux;\n    }\n    suma=lista[n-1];\n    if((suma%3)==0)\n    {\n        suma=suma/3;\n        for(k=0;k<n-1;k++)\n        {\n            if(lista[k]==suma*2)\n            {\n                total=total+cantidad;\n            }\n            if(lista[k]==suma)\n            {\n                cantidad++;\n            }\n        }\n        printf(\"%I64d\",total);\n    }else{\n        printf(\"0\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8867313915857605, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e28804ddcfce1821fda4a9ec2ccd3368", "bug_code_uid": "cef0d1e286f5182967025484d46d6770", "src_uid": "4d7de18e76600777ff023e1b61366ee4", "apr_id": "dadb38252946c3f7b67ff4ae597551d2", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<stdio.h>\n\n#define MAXN 100009\n\nstruct cl{\nint l;\nint h;\n};\nstruct cl arr[MAXN];\nint arr2[MAXN];\nint a,b,n,d;\n\nint cmp(const void *a1,const void *b1)\n{\n    int ind1 = *((int *)a1);\n    int ind2 = *((int *)b1);\n    int num1 = a*(arr[ind1].l) + b*(arr[ind1].h);\n    int num2 = a*(arr[ind2].l) + b*(arr[ind2].h);\n    return num1>num2;\n}\nint main()\n{\n    int i,j;\n    scanf(\"%d %d\",&n,&d);\n    scanf(\"%d %d\",&a,&b);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&arr[i].l,&arr[i].h);\n        arr2[i]=i;\n    }\n    qsort(arr2,n,sizeof(int),cmp);\n    int ans=0;\n    for(i=0;i<n;i++)\n    {\n        d -= (a*(arr[arr2[i]].l) ) + (b*(arr[arr2[i]].h));\n        if(d<0)\n            break;\n    }\n    printf(\"%d\\n\",i);\n    for(j=0;j<i;j++)\n        printf(\"%d \",arr2[j]+1);\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdlib.h>\n#include<stdio.h>\n\n#define MAXN 100009\n\nstruct cl{\nint l;\nint h;\n};\nstruct cl arr[MAXN];\nint arr2[MAXN];\nint a,b,n,d;\n\nint cmp(const void *a1,const void *b1)\n{\n    int ind1 = *((int *)a1);\n    int ind2 = *((int *)b1);\n    int num1 = a*(arr[ind1].l) + b*(arr[ind1].h);\n    int num2 = a*(arr[ind2].l) + b*(arr[ind2].h);\n    return num1-num2;\n}\nint main()\n{\n    int i,j;\n    scanf(\"%d %d\",&n,&d);\n    scanf(\"%d %d\",&a,&b);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&arr[i].l,&arr[i].h);\n        arr2[i]=i;\n    }\n    qsort(arr2,n,sizeof(int),cmp);\n    int ans=0;\n   /* printf(\"\\n\");\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d \",(a*(arr[arr2[i]].l) ) + (b*(arr[arr2[i]].h)));\n    }\n    */\n    for(i=0;i<n;i++)\n    {\n        d -= (a*(arr[arr2[i]].l) ) + (b*(arr[arr2[i]].h));\n       // printf(\"%d %d %d\\n\",d,(a*(arr[arr2[i]].l) ) , (b*(arr[arr2[i]].h)));\n        if(d<0)\n            break;\n    }\n    printf(\"%d\\n\",i);\n    for(j=0;j<i;j++)\n        printf(\"%d \",arr2[j]+1);\n    printf(\"\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.7044776119402985, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "598fb039d59e75933bec266b7781381d", "bug_code_uid": "dce5d28e5cef49e40a69b9ce499783c9", "src_uid": "1f29461c42665523d0a4d56b13f7e480", "apr_id": "04c9654def8c90d53700a1f27b32d2b7", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//freopen(\"input.txt\", \"r\", stdin);\n//freopen(\"output.txt\", \"w\", stdout);\nint tc, in[3], ans;\nint comp(const void *a, const void *b)\n{\n    int aa=*(int *)a, bb=*(int *)b;\n    return (aa<bb?-1:(aa>bb?1:0));\n}\nint min(int a, int b) {return a<b?a:b;}\nint main()\n{\n    scanf(\"%d\", &tc);\n    while (tc--)\n    {\n        scanf(\"%d%d%d\", &in[0], &in[1], &in[2]);\n        qsort(in, 3, sizeof(int), comp);\n        if (in[1]!=in[2])\n        {\n            ans=in[0];\n            in[2]-=in[0];\n            ans+=min(in[1], in[2]);\n        }\n        else if (in[0]==in[1]&&in[1]==in[2]) ans=in[1];\n        else\n        {\n            if (in[0]!=1) ans=in[1]+1;\n            else ans=in[1];\n        }\n        printf(\"%d\\n\", ans);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//freopen(\"input.txt\", \"r\", stdin);\n//freopen(\"output.txt\", \"w\", stdout);\nint tc, in[3], ans;\nint comp(const void *a, const void *b)\n{\n    int aa=*(int *)a, bb=*(int *)b;\n    return (aa<bb?-1:(aa>bb?1:0));\n}\nint min(int a, int b) {return a<b?a:b;}\nint main()\n{\n    scanf(\"%d\", &tc);\n    while (tc--)\n    {\n        scanf(\"%d%d%d\", &in[0], &in[1], &in[2]);\n        qsort(in, 3, sizeof(int), comp);\n        ans=(in[2]>(in[0]+in[1]))?in[0]+in[1]:(in[0]+in[1]+in[2])/2;\n        printf(\"%d\\n\", ans);\n    }\n}\n"}
{"similarity_score": 0.8704018109790606, "equal_cnt": 13, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "3e4076b790fa86874c21b6f7c2d24246", "bug_code_uid": "3b6e48b1a6d3fa5cd153a2c8440ba668", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "16836047b7ec331361d254e7c2511cb8", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ int testcase,i=0,a,b,c,count=0,t=0;\n  scanf(\"%d\",&testcase);\n  int k[3000];\n  while(i<testcase)\n  {\n      scanf(\"%d\",&k[i]);\n\n   i++  ;\n  } for(i=0;i<testcase;i++)\n     { a=k[i];\n     b=k[i+1];\n     c=k[i+2];\n\n      if(a%2==0)\n        count=count+1;\n      else t++;\n      if(b%2==0)\n        count=count+1;\n      else t++;\n\n      if(c%2==0)\n        count=count+1;\n      else t++;\n\n\n\n      if(count==2&&t==1)\n      {\n         if(a%2!=0)\n            printf(\"%d\",i+1);\n         else if(b%2!=0)\n            printf(\"%d\",i+2);\n        else printf(\"%d\",i+3);\n      }\n       else if(t==2&&count==1)\n      {\n         if(a%2==0)\n            printf(\"%d\",i+1);\n         else if(b%2==0)\n            printf(\"%d\",i+2);\n        else printf(\"%d\",i+3);\n      }\n\n\n\n\n     }\n\n\n\n\n\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{ int testcase,i=0,a,b,c,count=0,t=0;\n  scanf(\"%d\",&testcase);\n  int k[3000];\n  while(i<testcase)\n  {\n      scanf(\"%d\",&k[i]);\n\n   i++  ;\n  } for(i=0;i<testcase-2;i++)\n     { a=k[i];\n     b=k[i+1];\n     c=k[i+2];\n\n      if(a%2==0)\n        count=count+1;\n      else t++;\n      if(b%2==0)\n        count=count+1;\n      else t++;\n\n      if(c%2==0)\n        count=count+1;\n      else t++;\n\n\n\n      if(count==2&&t==1)\n      {\n         if(a%2!=0)\n            {printf(\"%d\",i+1);\nbreak;\n}         else if(b%2!=0)\n            {printf(\"%d\",i+2);\n        break;\n        }\n        else{ printf(\"%d\",i+3);\n            break;\n        }\n      }\n       else if(t==2&&count==1)\n      {\n         if(a%2==0)\n          {printf(\"%d\",i+1);\n          break;\n         }else if(b%2==0)\n            {printf(\"%d\",i+2);\n            break;\n            }\n        else {printf(\"%d\",i+3);\n         break;}\n      }\n\n\ncount=0;\nt=0;\n\n     }\n\n\n\n\n\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.5442307692307692, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "a5c16fd4ea322f5526caddb2120f42ca", "bug_code_uid": "9133ab93f9a142c20e2459396a3f3108", "src_uid": "a67ea891cd6084ceeaace8894cf18e60", "apr_id": "a25384994e8b7f0fb7fd8f81035b91bf", "difficulty": 1600, "tags": ["greedy", "graphs", "math", "dsu", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[300][300];\nint atmp[300][300];\nint p[300];\nint n;\nint k;\n\nvoid dfs(int i,int now)\n{\n    if (i == n - 1)\n        return;\n    int j;\n    for (j = 0; j < now; ++j)\n    {\n        if (atmp[i][j])\n        {\n            atmp[i][j] = 0;\n            dfs(j, now);\n        }\n    }\n    for (j = now + 1; j < n; ++j)\n    {\n        if (atmp[i][j])\n        {\n            atmp[i][j] = 0;\n            if (p[j] < p[k])\n                k = j;\n            dfs(j, now);\n        }\n    }\n}\n\nint main()\n{\n    int i, j, tmp, con;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; ++i)\n        scanf(\"%d\", p + i);\n    for (i = 0; i < n; ++i)\n    for (j = 0; j < n; ++j)\n        scanf(\"%1d\", &a[i][j]);\n    for (i = 0; i < n - 1; ++i)\n    {\n        for (j = 0; j < n;++j)\n        for (k = 0; k < n; ++k)\n            atmp[j][k] = a[j][k];\n        k = i;\n        dfs(i, i);\n        if (k != i)\n        {\n            tmp = p[i];\n            p[i] = p[k];\n            p[k] = tmp;\n        }\n        printf(\"%d \", p[i]);\n    }\n    printf(\"%d\\n\", p[i]);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint a[300][300];\nint take[300];\nint p[300];\nint connect[300];\nint n;\n\nvoid getConnect(int i,int now)\n{\n    if (take[i])\n        return;\n    take[i] = 1;\n    int j;\n    for (j = 0; j < n; ++j)\n    {\n        if (a[i][j])\n        {\n//          a[i][j] = 0;\n            connect[j] = now;\n            getConnect(j,now);\n        }\n    }\n}\n\nint main()\n{\n    int i, j, k, tmp, con;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; ++i)\n        scanf(\"%d\", p + i);\n    for (i = 0; i < n; ++i)\n    for (j = 0; j < n; ++j)\n        scanf(\"%1d\", &a[i][j]);\n    for (i = 0; i < n;++i)\n    if (!connect[i])\n    {\n        connect[i] = i + 1;\n        getConnect(i, i + 1);\n    }\n    for (i = 0; i < n - 1; ++i)\n    {\n        k = i;\n        for (j = i + 1; j < n;++j)\n        if (connect[j] == connect[i] && p[j] < p[k])\n            k = j;\n        if (k != i)\n        {\n            tmp = p[i];\n            p[i] = p[k];\n            p[k] = tmp;\n        }\n        printf(\"%d \", p[i]);\n    }\n    printf(\"%d\\n\", p[i]);\n    return 0;\n}"}
{"similarity_score": 0.9939799331103679, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "31bf03be45e18fc609d24159d2961c41", "bug_code_uid": "26576fd3edc43a58a510814f7ec14a0e", "src_uid": "a6cbf01d72d607ca95fe16df4fb16693", "apr_id": "65b196550320ee6e411707a37ff1c003", "difficulty": 800, "tags": ["data structures", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char s[10005];\n    int t,i,j,x,a[15];\n    scanf(\"%d\",&t);\n    scanf(\"%s\",&s);\n    for(i=0;i<t;i++)\n    {\n        if(s[i]=='L')\n        {\n            for(j=0;j<10;j++)\n            {\n                if(a[j]==0)\n                {\n                    a[j]=1;\n                    break;\n                }\n            }\n        }\n        else if(s[i]=='R')\n        {\n            for(j=9;j>=0;j--)\n            {\n                if(a[j]==0)\n                {\n                    a[j]=1;\n                    break;\n                }\n            }\n        }\n        else\n        {\n            x=s[i]-'0';\n            a[x]=0;\n        }\n    }\n    for(j=0;j<10;j++)\n    {\n        printf(\"%d\",a[j]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char s[100005];\n    int t,i,j,x,a[15];\n    scanf(\"%d\",&t);\n    scanf(\"%s\",&s);\n    for(i=0; i<t; i++)\n    {\n        if(s[i]=='L')\n        {\n            for(j=0; j<10; j++)\n            {\n                if(a[j]==0)\n                {\n                    a[j]=1;\n                    break;\n                }\n            }\n        }\n        else if(s[i]=='R')\n        {\n            for(j=9; j>=0; j--)\n            {\n                if(a[j]==0)\n                {\n                    a[j]=1;\n                    break;\n                }\n            }\n        }\n        else\n        {\n            x=s[i]-'0';\n            a[x]=0;\n        }\n    }\n    for(j=0; j<10; j++)\n    {\n        printf(\"%d\",a[j]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9227129337539433, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f355b076943955328f5fe15fbe349f73", "bug_code_uid": "9e188420711bb0767ed617bbc3c47223", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "4a6678d741ee68ead2c0fb30e6a5ce0a", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\n\r\ntypedef long long int ll;\r\n\r\nint main(){\r\n    ll t;\r\n    scanf(\"%lld\",&t);\r\n    ll n,m;\r\n    ll *arr;\r\n\r\n    for(ll i=0;i<t;i++){\r\n       scanf(\"%lld %lld\",&n,&m);\r\n       arr=malloc(n*sizeof(ll));\r\n     \r\n       for(ll j=0;j<n;j++){\r\n           scanf(\"%lld\",&arr[j]);\r\n       }\r\n       ll sum=0;\r\n       ll k;\r\n       for(ll j=0;j<n-1;j++){\r\n           m=m-arr[j];\r\n           k=arr[j+1]-m;\r\n           if(k>0){\r\n               m=m+k;\r\n              sum=sum+k;\r\n           }\r\n           \r\n       }\r\n       printf(\"%lld\\n\",sum);\r\n\r\n\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\n\r\ntypedef long long int ll;\r\n\r\nint main(){\r\n    ll t;\r\n    scanf(\"%lld\",&t);\r\n    ll n,m;\r\n    ll *arr;\r\n\r\n    for(ll i=0;i<t;i++){\r\n       scanf(\"%lld %lld\",&n,&m);\r\n       arr=malloc(n*sizeof(ll));\r\n     \r\n       for(ll j=0;j<n;j++){\r\n           scanf(\"%lld\",&arr[j]);\r\n       }\r\n       ll sum=0;\r\n       ll k;\r\n       if(n==1){\r\n           if(m<arr[0]){\r\n               sum=arr[0]-m;\r\n           }\r\n       }\r\n       for(ll j=0;j<n-1;j++){\r\n           m=m-arr[j];\r\n           k=arr[j+1]-m;\r\n           if(k>0){\r\n               m=m+k;\r\n              sum=sum+k;\r\n           }\r\n           \r\n       }\r\n       printf(\"%lld\\n\",sum);\r\n\r\n\r\n    }\r\n}"}
{"similarity_score": 0.9349775784753364, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "59ba4be4cd2c0611cd0f5125859236cf", "bug_code_uid": "159118290ea20e51596c0cc888a1fb43", "src_uid": "04330cb392bcfd51d1acffd72c8004cb", "apr_id": "f7aac6ce7dbebc4b0f7c89ef0a8f95f0", "difficulty": 1100, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n//#include<math.h>\r\nint main()\r\n{\r\n    long long int i,n,a,b,c,d=1,x=1;\r\n    long long int num[9]={2,11,101,1009,10007,100003,1000003,10000019,100000007};\r\n    long long int numb[9]={3,13,103,1013,10009,100019,1000033,10000079,100000037};\r\n    scanf(\"%lld\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n    scanf(\"%lld%lld%lld\",&a,&b,&c);\n    while(d<c){x*=10;d++;}\n    printf(\"%lld %lld\\n\",num[a-c]*x,numb[b-c]*x);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int i,n,a,b,c,d, x;\r\n    long long int num[9]={2,11,101,1009,10007,100003,1000003,10000019,100000007};\r\n    long long int numb[9]={3,13,103,1013,10009,100019,1000033,10000079,100000037};\r\n    scanf(\"%lld\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\n    d=1;x=1;\r\n    scanf(\"%lld%lld%lld\",&a,&b,&c);\n    while(d<c)\n    {x=x*10;d++;}\n    printf(\"%lld %lld\\n\",num[a-c]*x,numb[b-c]*x);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.3588681849551415, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "e530cb977c559e97ca782ad88a2a24ce", "bug_code_uid": "38a5c2d8b1457f68f5692bcccd52560c", "src_uid": "bfbd7a73e65d240ee7e8c83cc68ca0a1", "apr_id": "551581dc78b5f424473c4c14500ef0b1", "difficulty": 1800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\" %d\", &n);\n\tint a[n], i;\n\tfor(i=0; i<n; i++)\n\t\tscanf(\" %d\", a+i);\n\tfloat upper=1000000.0, lower=0.0, tempup, templow;\n\tfor(i=0; i<n; i++)\n\t{\n\t\ttempup = 10 * (float)(a[i]+1.0)/(i+1.0);\n\t\tif(tempup<upper)\n\t\t\tupper=tempup;\n\t\ttemplow = 10 * (float)(a[i])/(i + 1.0);\n\t\tif(templow>lower)\n\t\t\tlower=templow;\n\t}\n\tif((int)(((float)(n+1))*upper - (float)(10.0 * a[n-1])) == (int)(((float)(n+1))*upper - (float)(10.0 * a[n-1])))\n\t\tprintf(\"unique\\n%d\", (int)(((float)(n+1))*upper - (float)(10.0 * a[n-1])))\n\telse\n\t\tprintf(\"not unique\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\" %d\", &n);\n\tint a[n] , i;\n\tfor(i=0; i<n; i++)\n\t\tscanf(\" %d\", a+i);\n\tdouble upper=1000000.0, lower=0.0, tempup, templow;\n\tif(n==1 && a[0] == 1)\n\t{\n\t\tprintf(\"unique\\n%d\", 2);\n\t\treturn 0;\n\t}\n\tfor(i=0; i<n; i++)\n\t{\n\t\ttempup = (10.0*(double)a[i] + 10.0)/(i+1.0);\n\t\tif(upper>tempup)\n\t\t\tupper = tempup;\n\t\ttemplow = (10.0*(double)a[i])/(i+1.0);\n\t\tif(templow>lower)\n\t\t\tlower = templow;\n\t}\n\tif(lower>=upper)\n\t{\n\t\tprintf(\"not unique\");\n\t\treturn 0;\n\t}\n\tif((int)(upper*(n+1.0)/10.0) == (int)(lower*(n+1.0)/10.0))\n\t\tprintf(\"unique\\n%d\", (int)(upper*(n+1.0)/10.0));\n\telse if((upper*(n+1.0)/10.0) - (double)(int)(upper*(n+1.0)/10.0) == 0.0)\n\t\tif ((int)(upper*(n+1.0)/10.0) - 1 == (int)(lower*(n+1.0)/10.0))\n\t\t\tprintf(\"unique\\n%d\", (int)(lower*(n+1.0)/10.0));\n\t\telse\n\t\t\tprintf(\"not unique\");\n\telse\n\t\tprintf(\"not unique\");\n\treturn 0;\n}"}
{"similarity_score": 0.9813849590469099, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c4f3734a90f374ddf5a611f731ac27be", "bug_code_uid": "0b1d810d6289b3c558516931836ab78f", "src_uid": "5ebb0ee239d68ea33d9dac2d0bdd5f4e", "apr_id": "b2cd81826a4ccd5992dcec8ef63b9ed1", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "bitmasks", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,k,x[1001],i,foo,j,l,t,flag;\n    scanf(\"%d%d%d\",&n,&m,&k);\n    int a[n],b[n];\n    for(i=0;i<=m;i++)\n    scanf(\"%d\",&x[i]);\n    for(i=0;i<n;i++)\n    a[i]=0;\n    i=0;foo=0;\n    while(x[m]!=0)\n    {\n              a[i]=x[m]%2;\n              x[m]=x[m]/2;\n              i++;\n    }\n    for(i=0;i<m;i++)\n    {\n        for(l=0;l<n;l++)\n        b[l]=0;\n        j=0;t=x[i];\n        while(x[i]!=0)\n        {\n              b[j]=x[i]%2;\n              x[i]=x[i]/2;\n              j++;\n        }\n        flag=0;\n        for(l=0;l<n;l++)\n        if(a[l]!=b[l])\n        flag++;\n        if(flag<=k)\n        foo++;\n    }\n    printf(\"%d\\n\",foo);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,k,x[1001],i,foo,j,l,flag;\n    scanf(\"%d%d%d\",&n,&m,&k);\n    int a[n],b[n];\n    for(i=0;i<=m;i++)\n    scanf(\"%d\",&x[i]);\n    for(i=0;i<n;i++)\n    a[i]=0;\n    i=0;foo=0;\n    while(x[m]!=0)\n    {\n              a[i]=x[m]%2;\n              x[m]=x[m]/2;\n              i++;\n    }\n    for(i=0;i<m;i++)\n    {\n        for(l=0;l<n;l++)\n        b[l]=0;\n        j=0;\n        while(x[i]!=0)\n        {\n              b[j]=x[i]%2;\n              x[i]=x[i]/2;\n              j++;\n        }\n        flag=0;\n        for(l=0;l<n;l++)\n        if(a[l]!=b[l])\n        flag++;\n        if(flag<=k)\n        foo++;\n    }\n    printf(\"%d\\n\",foo);\n    return (0);\n}\n"}
{"similarity_score": 0.9219653179190751, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "986d9aa9a5c5596bbe03ef77caeeedbc", "bug_code_uid": "3e700e1919b124289ed0e9bfeee3b064", "src_uid": "c5ec8b18c39720098f6ac2dbc0ddd4f4", "apr_id": "916cae0a2d98812d760c1102e8265cf0", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint a[5000001]={'\\0'},cnt[5000001]={0};\r\nint main()\r\n{\r\n\tint n,x,i;\r\n\tscanf(\"%d %d\",&n,&x);\r\n\t\r\n\tfor(i=0;i<n;i++){\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tif(a[i]<x) cnt[a[i]]++;\r\n\t}\r\n\tfor(i=1;i<m;i++){\r\n\t\tif(cnt[i]%i){\r\n\t\t\tprintf(\"No\");break;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tcnt[i+1]+=cnt[i]/i;\r\n\t\t}\r\n\t}\r\n\tif(i==m) printf(\"Yes\");\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint a[5000001]={'\\0'},cnt[5000001]={0};\r\nint main()\r\n{\r\n\tint n,x,i;\r\n\tscanf(\"%d %d\",&n,&x);\r\n\t\r\n\tfor(i=0;i<n;i++){\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tif(a[i]<x) cnt[a[i]]++;\r\n\t}\r\n\tfor(i=1;i<x;i++){\r\n\t\tif(cnt[i]%(i+1)){\r\n\t\t\tprintf(\"No\");break;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tcnt[i+1]+=cnt[i]/(i+1);\r\n\t\t}\r\n\t}\r\n\tif(i==x) printf(\"Yes\");\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.2588726513569937, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e2b18df60325376428ad98b497f1b3c1", "bug_code_uid": "1253f6752e744a9de5c15267e66afa28", "src_uid": "3e27f1c06a263760f5b53c3afe4bf7ee", "apr_id": "4fc90bf1a3802b02109534eb27cbde70", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n// program by Mircea Rebegiuc\n// written on 2021.08.13\n\n#define CMMMC 120\n#define TCMMMC 300\n\nint frecv[CMMMC];\nint time[CMMMC + 1] = {};\n\nint main(){\n  int t, i6, i8, i10;\n  long long n;\n\n  for( i6 = 0 ; i6 < CMMMC ; i6 += 6 )\n    for( i8 = 0 ; i6 + i8 < CMMMC ; i8 += 8 )\n      for( i10 = 0 ; i6 + i8 + i10 < CMMMC ; i10 += 10 )\n        frecv[i6 + i8 + i10] = 1;\n\n  time[CMMMC] = TCMMMC;\n  for( t = CMMMC ; t-- ; )\n    if( frecv[t] == 1 )\n      time[t] = (t >> 1) * 5;\n    else\n      time[t] = time[t + 1];\n\n  for( scanf(\"%d\", &t) ; t-- ; ){\n    scanf(\"%lld\", &n);\n    printf(\"%lld\\n\", (n / CMMMC) * TCMMMC + time[n % CMMMC]);\n  }\n  \n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\n// program by Mircea Rebegiuc\n// written on 2021.08.13\n\nint main(){\n  int t;\n  long long n;\n\n  for( scanf(\"%d\", &t) ; t-- ; ){\n    scanf(\"%lld\", &n);\n    if( n < 6 )\n      printf(\"15\\n\");\n    else\n      printf(\"%lld\\n\", ((n >> 1) + (n & 1)) * 5);\n  }\n  \n  return 0;\n}\n"}
{"similarity_score": 0.8525179856115108, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4612b57117c102dcb5e81921665b5d6d", "bug_code_uid": "960eae5887c12f91759553f739a129e2", "src_uid": "c9744e25f92bae784c3a4833c15d03f4", "apr_id": "15ab30d40f3ea9fa66c956468a6f0a78", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n  int n, l = -1, r;\n  scanf(\"%d\", &n);\n  int array[n];\n  for(int i = 0; i < n; i++){\n    scanf(\"%d\", &array[i]);\n  }\n  for(int i = 0; i < n-1; i++){\n    if(l == -1 && array[i] > array[i+1]){\n      l = i+1;\n      i++;\n      r = i+1;\n      while(i < n-1 && array[i] > array[i+1]){\n        r++;\n        i++;\n      }\n      break;\n    }\n  }\n  if(l == -1){\n    l = 1;\n    r = 1;\n  }\n  else{\n    for(int i = 0; i < l-1; i++){\n      if(array[i] > array[r-1]){\n        printf(\"no\\n\");\n        return 0;\n      }\n    }\n    for(int i = r; i < n; i++){\n      if(array[i] < array[l-1]){\n        printf(\"no\\n\");\n        return 0;\n      }\n    }\n  }\n  printf(\"yes\\n%d %d\\n\", l, r);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n  int n, l = -1, r;\n  scanf(\"%d\", &n);\n  int array[n];\n  for(int i = 0; i < n; i++){\n    scanf(\"%d\", &array[i]);\n  }\n  for(int i = 0; i < n-1; i++){\n    if(l == -1 && array[i] > array[i+1]){\n      l = i+1;\n      i++;\n      r = i+1;\n      while(i < n-1 && array[i] > array[i+1]){\n        r++;\n        i++;\n      }\n      break;\n    }\n  }\n  if(l == -1){\n    l = 1;\n    r = 1;\n  }\n  else{\n    for(int i = 0; i < l-1; i++){\n      if(array[i] > array[r-1]){\n        printf(\"no\\n\");\n        return 0;\n      }\n    }\n    for(int i = r; i < n; i++){\n      if(array[i] < array[l-1]){\n        printf(\"no\\n\");\n        return 0;\n      }\n    }\n    for(int i = 0; i < l-2; i++){\n      if(array[i] > array[i+1]){\n        printf(\"no\\n\");\n        return 0;\n      }\n    }\n    for(int i = r; i < n-1; i++){\n      if(array[i] > array[i+1]){\n        printf(\"no\\n\");\n        return 0;\n      }\n    }\n  }\n  printf(\"yes\\n%d %d\\n\", l, r);\n  return 0;\n}\n"}
{"similarity_score": 0.9022140221402214, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "591527eefa62296ea5e367fec14bd34f", "bug_code_uid": "bc25205fe9eb72b3466a06813d63eaf0", "src_uid": "26354d2628f26eb2eff9432bd46400d5", "apr_id": "682f83c082ee9cff6311103768e66584", "difficulty": 800, "tags": ["combinatorics", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint T;\r\n\tint n, k1, k2;\r\n\tint w, b;\r\n\tint min_k;\r\n\tint max_k;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--) \r\n\t{\r\n\t\tscanf(\"%d %d %d\", &n, &k1, &k2);\r\n\t\tscanf(\"%d %d\", &w, &b);\r\n\r\n\t\tmin_k = k1 < k2?k1:k2;\r\n\t\tmax_k = k1 > k2?k1:k2;\r\n\r\n\t\tint sero_k = min_k;\r\n\t\tint garo_k = max_k - min_k;\r\n\r\n\t\tint oppo_garo_k = n - max_k;\r\n\t\tint oppo_sero_k = (n - min_k)-(n-max_k);\r\n\r\n\r\n\r\n\t\tif ((sero_k + garo_k / 2 >= w) && (oppo_sero_k + oppo_garo_k / 2 >= b))\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse \r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint T;\r\n\tint n, k1, k2;\r\n\tint w, b;\r\n\tint min_k;\r\n\tint max_k;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--) \r\n\t{\r\n\t\tscanf(\"%d %d %d\", &n, &k1, &k2);\r\n\t\tscanf(\"%d %d\", &w, &b);\r\n\r\n\t\tmin_k = (k1 < k2)?k1:k2;\r\n\t\tmax_k = (k1 > k2)?k1:k2;\r\n\r\n\t\tint sero_k = min_k;\r\n\t\tint garo_k = max_k - min_k;\r\n\r\n\t\tint oppo_sero_k = n - max_k;\r\n\t\tint oppo_garo_k = (n - min_k)-(n-max_k);\r\n\r\n\t\tif ((sero_k + garo_k / 2 >= w) && (oppo_sero_k + oppo_garo_k / 2 >= b))\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse \r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9933774834437086, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f95665fd6040b15338309e1009baff83", "bug_code_uid": "99640b44d0de7994388b3c05b7ef61d9", "src_uid": "1b3ac752bc9c0b5e20a76f028d4b3c15", "apr_id": "a4dd9ecdbf1014529c29ab320fe21937", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++)\n        {\n            printf(\"%d\",i);\n        }\n        printf(\"\\n\");\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,i;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++)\n        {\n            printf(\"%d \",i);\n        }\n        printf(\"\\n\");\n    }\n}"}
{"similarity_score": 0.18840579710144928, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a15d0f5ec4ec609df3a56d65a407de0c", "bug_code_uid": "3333dbd60f95aeccac8833cdcf4314f7", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "3c806729f3eafd20cbca2fecb1ded2d9", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x[n],y[n],z[n],i,sumx=0,sumy=0,sumz=0;\n    printf(\"enter the value of n\");\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        printf(\"enter the value of xi,yi,zi\");\n        scanf(\"%d ,%d ,%d\",x[i],y[i],z[i]);\n         sumx=sumx+x[i];\n        sumy=sumy+y[i];\n        sumz=sumz+z[i];\n    }\n  \n    if(sumx==0 && sumy==0 && sumz==0)\n    printf(\"YES\");\n    else\n    printf(\"NO\");\n    \n    return 0;\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,c,sum1=0,sum2=0,sum3=0;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t  scanf(\"%d%d%d\",&a,&b,&c);\n\t  sum1+=a;\n\tsum2+=b;\n\tsum3+=c;\n\t}\n\tif(sum1==0&&sum2==0&&sum3==0)\n\tprintf(\"YES\\n\");\n\telse \n\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.19076305220883535, "equal_cnt": 18, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "61258f0a12abc9d655b0659351942e82", "bug_code_uid": "ab8c2e9899ae3e13037fddf953587b64", "src_uid": "90c5058c0c7f55a567f2e036482149f9", "apr_id": "5848cf7cdbd2b347f9ada089179bde52", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int row;\n    int a,b,c;\n    scanf(\"%d\",&row);\n    while(row--)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        if((2*b-c)%a==0&&(2*b-c)!=0)\n        {\n            printf(\"YES\");\n        }\n        else if((2*b-a)%c==0&&(2*b-a)!=0)\n        {\n            printf(\"YES\");\n        }\n        else if((a+c)%(2*b)==0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n        \n    }\n    return 0;\n}\n\n \t \t  \t\t\t\t   \t\t \t   \t\t \t\t \t\t\t", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n, i,a,b,c;\n\tint A, B, C;\n\tscanf(\"%d\", &n);\n\twhile (n--)\n\t{ \n\t\tscanf(\"%d%d%d\", &a, &b, &c);\n\t\tA = 2 * b - c;\n\t\tif (A > 0 && A % a == 0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tB = (a + c) / 2;\n\t\tif ((a + c) % 2 == 0 && B % b == 0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tC = 2 * b - a;\n\t\tif (C > 0 && C % c == 0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\t \t \t\t \t\t\t\t \t\t \t  \t\t \t \t\t  \t\t"}
{"similarity_score": 0.9967213114754099, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1d0906c9707d23bbc20ab81fbcbb2797", "bug_code_uid": "bda7e20cdc9250fd6cb0ddb399fd1c60", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "777b38116ca1dab04f3a384526b04181", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long int n,g=-1,d[3];\n    scanf(\"%d\",&n);\n     long int a[n];\n    for(int i=0;i<=n-1;i++){\n    \tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int j=0;j<=n-1;j++){\n\t\t \tg=-1;\n    for(int i=2;i*i<=a[j];i++){\n   \n    \tif(g==1)\n    \tbreak;\n        if(a[j]%i==0)\n        {\n            a[j]/=i;\n            g++;\n            d[g]=i;\n            if(g==1)\n            d[g+1]=a[j];\n        }\n        \n    }\n    if(g!=1){\n    \tprintf(\"NO\\n\");\n\t}\n\telse if(d[0]==d[2]||d[1]==d[2]){\n\t\tprintf(\"NO\\n\");\n\t}\n    else{\n\t\tprintf(\"YES\\n\");\n\t\tprintf(\"%lld \",d[0]);\n\t\tprintf(\"%lld \",d[1]);\n\t\tprintf(\"%lld\\n\",d[2]);\n\t}\n}\n}", "fixed": "#include<stdio.h>\nint main(){\n    long int n,g=-1,d[3];\n    scanf(\"%d\",&n);\n    long int a[n];\n    for(int i=0;i<=n-1;i++){\n    \tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int j=0;j<=n-1;j++){\n\t\t \tg=-1;\n    for(int i=2;i*i<=a[j];i++){\n   \n    \tif(g==1)\n    \tbreak;\n        if(a[j]%i==0)\n        {\n            a[j]/=i;\n            g++;\n            d[g]=i;\n            if(g==1)\n            d[g+1]=a[j];\n        }\n        \n    }\n    if(g!=1){\n    \tprintf(\"NO\\n\");\n\t}\n\telse if(d[0]==d[2]||d[1]==d[2]){\n\t\tprintf(\"NO\\n\");\n\t}\n    else{\n\t\tprintf(\"YES\\n\");\n\t\tprintf(\"%ld \",d[0]);\n\t\tprintf(\"%ld \",d[1]);\n\t\tprintf(\"%ld\\n\",d[2]);\n\t}\n}\n}"}
{"similarity_score": 0.4903325599381284, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "6a1257bad373c3e719dc3e7c1b67dc9d", "bug_code_uid": "3f8f98559e79844514ade3ef033b520f", "src_uid": "9d3ffe0063686bdcf567f025d8e4d998", "apr_id": "cc9b625448ab7eb5cb63a89fb7e634a2", "difficulty": null, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,k,sum;sum=0;\n\t    scanf(\"%d%d\",&n,&k);\n\t    int a[n];\n\t    int b[101];\n\t    int g=0;\n\t    int p;\n\t    for(int i=0;i<=100;i++)\n\t    {\n\t        b[i]=0;\n\t    }\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        scanf(\"%d\",&a[i]);\n\t    }\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        b[a[i]]=b[a[i]]+1;\n\t    }\n\t    for(int i=0;i<=100;i++)\n\t    {\n\t        if(g<b[i])\n\t        {\n\t            g=b[i];\n\t            p=i;\n\t        }\n\t    }\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        if(a[i]!=p)\n\t        {\n\t            sum=sum+1;\n\t            i=i+k;\n\t            i=i-1;\n\t        }\n\t    }\n\t    printf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,k,sum,min;sum=0;\n\t    scanf(\"%d%d\",&n,&k);\n\t    int a[n];\n\t    for(int i=0;i<n;i++)\n\t    {\n\t        scanf(\"%d\",&a[i]);\n\t    }\n\t    min=100000000;\n\t    for(int i=1;i<=100;i++)\n\t    {\n\t        sum=0;\n\t        for(int j=0;j<n;j++)\n\t        {\n\t            if(a[j]!=i)\n\t            {\n\t                sum=sum+1;\n\t                j=j+k;\n\t                j=j-1;\n\t            }\n\t        }\n\t            if(sum<min)\n\t            {\n\t                min=sum;\n\t            }\n\t    }\n\t    printf(\"%d\\n\",min);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.974960876369327, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2baf0ef007969b22c0cde8014e55def7", "bug_code_uid": "2643acc75a33f13df69cd6ba1ea76e66", "src_uid": "dc31adef80f06897ea2f5ef76854bcf1", "apr_id": "69f7c80337c02947d310daf947fed555", "difficulty": 1200, "tags": ["implementation", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar s[102];\nchar v[102][102];\nint main () {\n\nint n,i,m,j;\nscanf(\"%d %d\",&n,&m);\nfflush(stdin);\nfor(i=0;i<n;i++)\n{\n    scanf(\"%s\",s);\n    fflush(stdin);\n    for(j=0;j<m;j++)\n    {\n        if(i%2==0 && j%2==0 && s[j]=='.')\n            v[i][j]='B';\n        else if(i%2==1 && j%2==0 && s[j]=='.')\n            v[i][j]='W';\n         else if(i%2==0 && j%2==1 && s[j]=='.')\n            v[i][j]='W';\n         else if(i%2==1 && j%2==1 && s[j]=='.')\n            v[i][j]='B';\n         else\n            v[i][j]='-';\n    }\n}\nfor(i=0;i<n;i++)\n{\n     for(j=0;j<m;j++)\n     {\n         printf(\"%c\",v[i][j]);\n     }\n     printf(\"\\n\");\n}\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nchar s[102];\nchar v[102][102];\nint main () {\n\nint n,i,m,j;\nscanf(\"%d %d\",&n,&m);\n\nfor(i=0;i<n;i++)\n{\n    scanf(\"%s\",s);\n\n    for(j=0;j<m;j++)\n    {\n        if(i%2==0 && j%2==0 && s[j]=='.')\n            v[i][j]='B';\n        else if(i%2==1 && j%2==0 && s[j]=='.')\n            v[i][j]='W';\n         else if(i%2==0 && j%2==1 && s[j]=='.')\n            v[i][j]='W';\n         else if(i%2==1 && j%2==1 && s[j]=='.')\n            v[i][j]='B';\n         else\n            v[i][j]='-';\n    }\n}\nfor(i=0;i<n;i++)\n{\n     for(j=0;j<m;j++)\n     {\n         printf(\"%c\",v[i][j]);\n     }\n     printf(\"\\n\");\n}\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.6393805309734514, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "687953f2a0aa51c414661d041a30387c", "bug_code_uid": "ccc1d54be4afde4697c8c4bc9af2f45f", "src_uid": "0816295355375a2d3f1cd45852b86360", "apr_id": "34cfbf8927bcd55f490815c0250572ef", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,c;\n    int a,b,e,a1,b1,j,k;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&e);\n        j=e,k=0,c=0;\n        a1=a,b1=b;\n        while(j>=0)\n        {\n            a=a+j;\n            b=b+k;\n            if(a>b)\n               {\n                   c++;}\n            else\n                break;\n            j--;\n            k++;\n            a=a1;\n            b=b1;\n        }\n        printf(\"%d\\n\",c);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,c;\n    int a,b,e,a1,b1,j,k;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&e);\n        j=e,k=0,c=0;\n        a1=a,b1=b;\n        a=a+j;\n        if(a>b)\n        {\n            if((a-b)%2==0)\n                c=(a-b)/2;\n            else\n                c=(a-b)/2+1;\n        }\n            if(c>e+1)\n                c=e+1;\n        printf(\"%d\\n\",c);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9506726457399103, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "de11e2c1a2e26a352a0859a1adcc7c2b", "bug_code_uid": "59a562bc8ceb97b1a59548dfd74058f9", "src_uid": "b6a7e8abc747bdcee74653817085002c", "apr_id": "694edfcee21c0b412cc72c67b73eb4ff", "difficulty": 1300, "tags": ["geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint t,n,x;\n\tscanf(\"%d\",&t);\n\twhile(t-->0){\n\t\tscanf(\"%d%d\",&n,&x);\n\t\tint arr[n],count=99999999;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&arr[i]);\n\t\tfor(int i=n-1;i>=0 && x>0;i--){\n\t\t\tint temp=x>=arr[i]?(x+arr[i]-1)/arr[i]:2;\n\t\t\tif(count>temp)count=temp;\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<limits.h>\nint main(){\n\tint t,n,x;\n\tscanf(\"%d\",&t);\n\twhile(t-->0){\n\t\tscanf(\"%d%d\",&n,&x);\n\t\tint arr[n],count=INT_MAX;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&arr[i]);\n\t\tfor(int i=n-1;i>=0 && x>0;i--){\n\t\t\tint temp=x>=arr[i]?(x+arr[i]-1)/arr[i]:2;\n\t\t\tif(count>temp)count=temp;\n\t\t}\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.965902738960313, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d520a9aab4aeb4aa8e4499300fc77b57", "bug_code_uid": "a15d1773ee618e4c025823f6c7a83be6", "src_uid": "e758ae072b8aed53038e4593a720276d", "apr_id": "3d6af0f2fb9ee04c79dcca23100983c8", "difficulty": 1700, "tags": ["data structures", "greedy", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint top = -1;\n\nchar s[100000], N[100000], suffmin[100000], st[100000]  = { 0 };\n\n/*void push( char s ) {\n    st[++top] = s;\n}\n\nchar pop() {\n    return st[top--];\n}*/\n\n\nint main() {\n    int n;\n   // int top = -1;\n   // char s[15], N[15], suffmin[15], st[15]  = { 0 };\n   // scanf(\"%d\", &n);\n    scanf(\"%s\", s);\n    n = (int) strlen(s);\n    suffmin[n - 1] = s[n - 1];\n    for(int i = n-2; i >= 0; i--) {\n        if(s[i] < suffmin[i + 1]) suffmin[i] = s[i];\n        else suffmin[i] = suffmin[i + 1];\n    }\n\n    int k = 0;\n\n    for (int i = 0; i < n - 1; i++ ) {\n       // if(s[i] == suffmin[i]) N[k++] = s[i];\n        st[++top] = s[i];\n        while (st[top] <= suffmin[i + 1]) N[k++] = st[top--];\n    }\n    st[++top] = s[n-1];\n\n    while(top != -1) {\n        N[k++] = st[top--];\n    }\n\n    printf(\"%s\", N);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint top = -1;\n\nchar s[100000], N[100000], suffmin[100000], st[100000]  = { 0 };\n\n/*void push( char s ) {\n    st[++top] = s;\n}\n\nchar pop() {\n    return st[top--];\n}*/\n\n\nint main() {\n    int n;\n    //int top = -1;\n    //char s[15], N[15], suffmin[15], st[15]  = { 0 };\n   // scanf(\"%d\", &n);\n    scanf(\"%s\", s);\n    n = (int) strlen(s);\n    suffmin[n - 1] = s[n - 1];\n    for(int i = n-2; i >= 0; i--) {\n        if(s[i] < suffmin[i + 1]) suffmin[i] = s[i];\n        else suffmin[i] = suffmin[i + 1];\n    }\n\n    int k = 0;\n\n    for (int i = 0; i < n - 1; i++ ) {\n       // if(s[i] == suffmin[i]) N[k++] = s[i];\n        st[++top] = s[i];\n        while (st[top] <= suffmin[i + 1] && top > -1) N[k++] = st[top--];\n    }\n    st[++top] = s[n-1];\n\n    while(top != -1) {\n        N[k++] = st[top--];\n    }\n    N[k] = '\\0';\n\n    printf(\"%s\", N);\n\n    return 0;\n}"}
{"similarity_score": 0.89900426742532, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0054b2c68a567fb1e067cb461cafeff1", "bug_code_uid": "c19998a98e1d9043878b9011b86881d7", "src_uid": "ccb7b8c0c389ea771f666c236c1cba5f", "apr_id": "18cf011f50655eb28f804e96c24da7d3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n, acima = 0, abaixo = 0, esq = 0, direita = 0;\n\tscanf(\"%d\", &n);\n\n\n\tfor(int i = 0; i < n; ++i){\n\t\tint a, b, x, y;\n\t\tscanf(\"%d%d%d%d\", &a, &b, &x, &y);\n\n\t\tacima = x*b;\n\t\tabaixo = (a - x - 1) * b;\n\t\tesq = a*y;\n\t\tdireita = a * (b-y-1);\n\t\n\t\t//printf(\"%d  %d %d %d\\n\", acima, abaixo, esq, direita);\n\n\tif (acima > abaixo && acima > esq && acima > direita)\n\t\tprintf(\"%d\\n\", acima);\n\n\telse if (abaixo > acima && abaixo > esq && abaixo > direita)\n\t\tprintf(\"%d\\n\", abaixo);\n\n\telse if (esq > acima && esq > abaixo && esq > direita)\n\t\tprintf(\"%d\\n\",esq);\n\telse\n\t\tprintf(\"%d\\n\", direita);\n\n\t}\n\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint meuMax(int a, int b){\n\tif (a > b)\n\t\treturn a;\n\n\treturn b;\n}\n\nint main()\n{\n\tint n, acima = 0, abaixo = 0, esq = 0, direita = 0;\n\tscanf(\"%d\", &n);\n\n\n\tfor(int i = 0; i < n; ++i){\n\t\tint a, b, x, y;\n\t\tscanf(\"%d%d%d%d\", &a, &b, &x, &y);\n\n\t\tacima = x*b;\n\t\tabaixo = (a - x - 1) * b;\n\t\tesq = a*y;\n\t\tdireita = a * (b-y-1);\n\t\n\t\t//printf(\"%d  %d %d %d\\n\", acima, abaixo, esq, direita);\n\n\t/*if (acima > abaixo && acima > esq && acima > direita)\n\t\tprintf(\"%d\\n\", acima);\n\n\telse if (abaixo > acima && abaixo > esq && abaixo > direita)\n\t\tprintf(\"%d\\n\", abaixo);\n\n\telse if (esq > acima && esq > abaixo && esq > direita)\n\t\tprintf(\"%d\\n\",esq);\n\telse\n\t\tprintf(\"%d\\n\", direita); */\n\n\t\tprintf(\"%d\\n\", meuMax(meuMax(acima,abaixo), meuMax(esq,direita)));\n\n\t}\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.997250229147571, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d73077b3279235634261ea1ac472ed82", "bug_code_uid": "c50b83fa30095a16a7f9543dfd4100a8", "src_uid": "f00d94eb37c98a449615f0411e5a3572", "apr_id": "497d9d4b18efee92d0fed90dbb0dcd69", "difficulty": 1100, "tags": ["constructive algorithms", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint comp(const void *a, const void *b) {\n    return *(int *)b - *(int *)a;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    int *arr = malloc(n * sizeof(int));\n\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &arr[i]);\n    }\n\n    qsort(arr, n, sizeof(int), comp);\n\n    long long a = arr[0], b = 0;\n\n    for (int i = 1; i < n; i++) {\n        b += arr[i];\n    }\n\n    long long max = (a > b) ? a : b;\n    long long min = (a == max) ? b : a;\n\n    printf(\"%I64\", max - min + 1);\n    free(arr);\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint comp(const void *a, const void *b) {\n    return *(int *)b - *(int *)a;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    int *arr = malloc(n * sizeof(int));\n\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &arr[i]);\n    }\n\n    qsort(arr, n, sizeof(int), comp);\n\n    long long a = arr[0], b = 0;\n\n    for (int i = 1; i < n; i++) {\n        b += arr[i];\n    }\n\n    long long max = (a > b) ? a : b;\n    long long min = (a == max) ? b : a;\n\n    printf(\"%I64d\\n\", max - min + 1);\n    free(arr);\n}\n\n\n"}
{"similarity_score": 0.9989047097480832, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3b23cebce66fe420c2a04b2606808195", "bug_code_uid": "70f3e451dc91fbdf95b674dde0e8a986", "src_uid": "2e3006d663a3c7ad3781aba1e37be3ca", "apr_id": "2d112197e81f91b337465ad2ebc1bace", "difficulty": 800, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint SecondNumABC(char b);\r\nint FirstNumABC(char a);\r\nint imprimir(char s[]);\r\nint main()\r\n{\r\n  int cont,i=0,result;\r\n  char word[2];\r\n\r\n  scanf(\"%d\", &cont);\r\n  for (i=0;i<cont;i++){\r\n    scanf(\"%s\", word);\r\n    result=imprimir(word);\r\n    printf(\"%d\\n\", result);\r\n  }\r\n  return 0;\r\n}\r\nint FirstNumABC(char a){\r\n  return a -'a';//rango de 0-25\r\n}\r\nint SecondNumABC(char b){//servira para obtener un numero de a=1 y z=26\r\n    return b-'`';// este simbolo \"`\" segun ASCII tiene un valor menor a \"a\"  por lo tanto al restarlo con las letras del abc me dara que a =1 y z=26\r\n}\r\nint imprimir(char word[]){\r\n  int a,b,result;\r\n  a= FirstNumABC(word[0]);\r\n  b= SecondNumABC(word[1]);\r\n    if (word[0]>word[1]){\r\n      result=((a*25)+b);\r\n      return result;\r\n      //printf( \"%d\\n\", result);\r\n    }else{\r\n      result=(a*25)+(b-1);\r\n      return result;\r\n      //printf( \"%d\\n\", result);\r\n  }\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\nint SecondNumABC(char b);\r\nint FirstNumABC(char a);\r\nint imprimir(char s[]);\r\nint main()\r\n{\r\n  int cont,i=0,result;\r\n  char word[3];\r\n\r\n  scanf(\"%d\", &cont);\r\n  for (i=0;i<cont;i++){\r\n    scanf(\"%s\", word);\r\n    result=imprimir(word);\r\n    printf(\"%d\\n\", result);\r\n  }\r\n  return 0;\r\n}\r\nint FirstNumABC(char a){\r\n  return a -'a';//rango de 0-25\r\n}\r\nint SecondNumABC(char b){//servira para obtener un numero de a=1 y z=26\r\n    return b-'`';// este simbolo \"`\" segun ASCII tiene un valor menor a \"a\"  por lo tanto al restarlo con las letras del abc me dara que a =1 y z=26\r\n}\r\nint imprimir(char word[]){\r\n  int a,b,result;\r\n  a= FirstNumABC(word[0]);\r\n  b= SecondNumABC(word[1]);\r\n    if (word[0]>word[1]){\r\n      result=((a*25)+b);\r\n      return result;\r\n      //printf( \"%d\\n\", result);\r\n    }else{\r\n      result=(a*25)+(b-1);\r\n      return result;\r\n      //printf( \"%d\\n\", result);\r\n  }\r\n}\r\n\r\n"}
{"similarity_score": 0.5263157894736842, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "8ed6ea88a0ef9105bb65d2866cd3ba4b", "bug_code_uid": "c66c47a1c60f82c963222a9a63b4e1fc", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "cded6a3a10e1706202d3fb8b6a186da3", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n ;\n    scanf(\"%d\",&n);\n    int i , a[n] , min ;\n    for(i=0 ; i<n ; i++){\n        scanf(\"%d\",&a[i]);\n        if (i==0){\n            min = a[0] ;\n        }\n        if(a[i]<min)\n            min=a[i] ;\n    }\n    int j , dis , r=1000000000 ;\n    for(i=0 ; i<n ; i++){\n        if(a[i]==min){\n            for(j=i+1 ; j <n ; j++){\n                if(a[j]==min){\n                    dis=j-i ;\n                    if(dis<r){\n                        r=dis ;\n                    }\n\n                }\n            }\n        }\n    }\n    printf(\"%d\",r);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n ;\n    scanf(\"%d\",&n);\n    int i , a[n] , min ;\n    for(i=0 ; i<n ; i++){\n        scanf(\"%d\",&a[i]);\n        if (i==0){\n            min = a[0] ;\n        }\n        if(a[i]<min)\n            min=a[i] ;\n    }\n    int x[n] , y=0  ;\n    for(i=0 ; i<n ; i++){\n            if(a[i]==min){\n            x[y]=i ;\n            //printf(\"x=%d\\n\",x[y]);\n            y++;\n            }\n\n    }\n    int j , w , r=100000000 ;\n    for(i=0 , j=1 ; j<y ; i++,j++){\n        w=x[j]-x[i] ;\n        //printf(\"w=%d\\n\",w);\n        if(w<r)\n            r=w ;\n    }\n    printf(\"%d\",r);\n\n}\n"}
{"similarity_score": 0.9983818770226537, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3c58b2e1843c22226a5408be7f38046a", "bug_code_uid": "fca5e1df49105170dda1d17265f7deea", "src_uid": "935bceb69117d06eb75121c805bff69c", "apr_id": "d5bac0b05890ddefc3112eff9f5addff", "difficulty": 900, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n  int n;\r\n  scanf(\"%d\", &n);\r\n  while(n--)\r\n  {\r\n      long long size;\r\n      scanf(\"%lld\",&size);\r\n      long long a[size];\r\n      int i;\r\n      for(i=0;i<size;i++)\r\n      {\r\n          scanf(\"%lld\", &a[i]);\r\n      }\r\n      long long sum=0;\r\n      for(i=0;i<size;i++)\r\n      {\r\n          sum=sum+a[i];\r\n      }\r\n      if (sum%size==0)\r\n      {\r\n          printf(\"0\");\r\n      }\r\n      else\r\n      {\r\n      long long x=  sum%size;\r\n      long long in= abs(size-x);\r\n      long long noin=abs(size-in);\r\n      long long result= in*noin;\r\n      printf(\"%lld\\n\",result);\r\n      }\r\n  }\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n  int n;\r\n  scanf(\"%d\", &n);\r\n  while(n--)\r\n  {\r\n      long long size;\r\n      scanf(\"%lld\",&size);\r\n      long long a[size];\r\n      int i;\r\n      for(i=0;i<size;i++)\r\n      {\r\n          scanf(\"%lld\", &a[i]);\r\n      }\r\n      long long sum=0;\r\n      for(i=0;i<size;i++)\r\n      {\r\n          sum=sum+a[i];\r\n      }\r\n      if (sum%size==0)\r\n      {\r\n          printf(\"0\\n\");\r\n      }\r\n      else\r\n      {\r\n      long long x=  sum%size;\r\n      long long in= abs(size-x);\r\n      long long noin=abs(size-in);\r\n      long long result= in*noin;\r\n      printf(\"%lld\\n\",result);\r\n      }\r\n  }\r\n\r\n}"}
{"similarity_score": 0.33935018050541516, "equal_cnt": 15, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "e48b24a1b40abb3dfc41d72278a74c3f", "bug_code_uid": "bc36a65984791f9b3eb0b0e4c35a256b", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "c8930e04cc23349a2049005c7a8bcfe0", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a,b,c,s,i,j,k;\n    scanf(\"%d\",&a);\n    int ara[a];\n    for(i=0,s=0;i<a;i++){\n        scanf(\"%d\",&b);\n        s=s+b;\n        ara[i]=s;\n\n    }\n    scanf(\"%d\",&b);\n    for(i=0;i<b;i++){\n            scanf(\"%d\",&k);\n        for(j=0,s=0;j<a;j++){\n            if(k>ara[j]){\n                s++;\n            }\n            else if(k<=ara[j]){\n                s++;\n                printf(\"%d\\n\",s);\n                break;\n            }\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,m,i,lb,rb,middle;\n    int a[100100],q[100100],prefix[100100];\n    scanf(\"%d\",&n);\n    prefix[0]=0;\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n        prefix[i]=prefix[i-1]+a[i];\n        \n    }\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++){\n        int y;\n        scanf(\"%d\",&y);\n        lb=1;\n        rb=n;\n        while(rb-lb>1){\n            middle=(lb+rb)/2;\n            if(y<=prefix[middle]) rb=middle;\n\n            else if(y>prefix[middle]) lb=middle;\n        }\n        if(y>prefix[lb]) printf(\"%d\\n\",rb);\n        else printf(\"%d\\n\",lb);\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.8298217179902755, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "ad0a66e78fe92ac2ac154650c7ad8b17", "bug_code_uid": "78abc885a6e81d5f5f0d92dddf674d1b", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "d33c103ee73ab0701d54dcb3c0a526c3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long n,v,a[10][10],temp[10],i,j,control[10],printlenecek;\nint main(){\n    scanf(\"%lld%lld\",&n,&v);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&temp[i]);\n        for(j=0;j<temp[i];j++){\n            scanf(\"%lld\",&a[i][j]);\n            if(v>=a[i][j]) a[i][j]=-1;\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<temp[i];j++){\n            if(a[i][j]==-1 && control[i]==0){\n                control[i]=1;\n                printlenecek+=1;\n            }\n        }\n    }\n    printf(\"\\n%lld\\n\",printlenecek);\n    for(i=0;i<n;i++){\n        if(control[i]==1) printf(\"%lld \",i);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nlong long n,v,a[60][60],temp[60],i,j,control[60],printlenecek;\nint main(){\n    scanf(\"%lld%lld\",&n,&v);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&temp[i]);\n        for(j=0;j<temp[i];j++){\n            scanf(\"%lld\",&a[i][j]);\n            if(v>a[i][j]) a[i][j]=-1;\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<temp[i];j++){\n            if(a[i][j]==-1 && control[i]==0){\n                control[i]=1;\n                printlenecek+=1;\n            }\n        }\n    }\n    printf(\"%lld\\n\",printlenecek);\n    for(i=0;i<n;i++){\n        if(control[i]==1) printf(\"%lld \",i+1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9978308026030369, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5af31a619ff010970401116c3306535a", "bug_code_uid": "9e08d765750b5b8f5700cc400984ff20", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "0ad6af80338a011eb49df44eb81c3a59", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int cases;\n    scanf(\"%d\",&cases);\n    while (cases){\n        double n,x;\n        double ans = 1;\n        scanf(\"%lf %lf\", &n, &x);\n        n -= 2;\n        if (n <= 0){\n            int d = 1;\n            printf(\"%d\",d);\n            cases --;\n            continue;\n        }else{\n            ans = ceil(n/x);\n            int ans2 = ans;\n            printf(\"%d\\n\", ans2 + 1);\n        }\n        cases--;\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int cases;\n    scanf(\"%d\",&cases);\n    while (cases){\n        double n,x;\n        double ans = 1;\n        scanf(\"%lf %lf\", &n, &x);\n        n -= 2;\n        if (n <= 0){\n            int d = 1;\n            printf(\"%d\\n\",d);\n            cases --;\n            continue;\n        }else{\n            ans = ceil(n/x);\n            int ans2 = ans;\n            printf(\"%d\\n\", ans2 + 1);\n        }\n        cases--;\n    }\n}\n"}
{"similarity_score": 0.9142857142857143, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9453a4513c27dbf5d2038844b2d5b5f1", "bug_code_uid": "58f40a5c1b38fe638b50bea42e63f7cc", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "548de0a51d6d7d5e4c07f10f3a36daf9", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n    int i,n,p=0,n2,n3,n4,n1,k=1;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        p = p + k;\n        if (p != 1) {\n            if (p <= n)\n                printf(\"%d \", p);\n            else if (p > n) {\n                n1 = p / n;\n                //printf(\"%d\",n1);\n                n3=n1*n;\n                n4=p-n3;\n                printf(\"%d \", n4);\n            }\n            k++;\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n    int i,n,p=0,n2,n3,n4,n1,k=1;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        p = p + k;\n        if (p != 1) {\n            if (p <= n)\n                printf(\"%d \", p);\n            else if (p > n) {\n                n1 = p / n;\n                //printf(\"%d\",n1);\n                n3=n1*n;\n                n4=p-n3;\n                if(n4==0)\n                    printf(\"%d \",n);\n                else\n                printf(\"%d \", n4);\n            }\n            k++;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9215896885069818, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "560a8a4881f96f5c7c1f1ce2d2a32b0e", "bug_code_uid": "4f34efa242d6d903809cd4cdb4aabaee", "src_uid": "0d5f4320fc2c7662d21e09a51baf21db", "apr_id": "b691ba318a2c0683f0d6652071996d8e", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n, m, i, a=1;\r\n        scanf(\"%d\", &n);\r\n        if(n==4){\r\n            printf(\"2 4 1 3\\n\");\r\n            continue;\r\n        }\r\n        if(n%2 == 0){\r\n            a = 0;\r\n        }\r\n        m = n/2;\r\n        for(i=1; i<=m; i++){\r\n            printf(\"%d %d \", i, m+a+i);\r\n        }\r\n        if(a==1){\r\n            printf(\"%d\", m+1);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n, m, i, a=1;\r\n        scanf(\"%d\", &n);\r\n        if(n==4){\r\n            printf(\"2 4 1 3\\n\");\r\n            continue;\r\n        }\r\n\r\n        m = n/2;\r\n        for(i=1; i<=m; i++){\r\n            printf(\"%d %d \",  m+i, i);\r\n        }\r\n        if(n%2 == 1){\r\n            printf(\"%d\", n);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.5282608695652173, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "39cafb313b04b7f18b063e5f2cf3e671", "bug_code_uid": "d81f4902b6b859602cae1b862ff20bc9", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "a01224b35e3fcaf49468d875182308d9", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MIN(a,b) (((a)<(b))?(a):(b))\n\nint main()\n{\n    int n,a[100005],p[100005],i,min_price=101,ans=0,at_day;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++) {\n        scanf(\"%d%d\",&a[i],&p[i]);\n        if(p[i]<min_price)\n        {\n            min_price=p[i];\n            at_day=i;\n        }\n    }\n    for (i=1;i<=n;i++) {\n        if(i>=at_day)\n            ans+=min_price*a[i];\n        else\n            ans+=p[i]*a[i];\n    }\n    printf(\"%d\\n\",ans);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MIN(a,b) (((a)<(b))?(a):(b))\n\nint main()\n{\n    int n,a[100005],p[100005],i,ans=0,buy;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++)\n        scanf(\"%d%d\",&a[i],&p[i]);\n\n    buy=p[1];\n    ans=buy*a[1];\n    for (i=2;i<=n;i++) {\n        if(buy<=p[i])\n            ans+=buy*a[i];\n        else\n        {\n            buy=p[i];\n            ans+=buy*a[i];\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\n"}
{"similarity_score": 0.9896193771626297, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a1005e26d8369bc6049c44b5376751bc", "bug_code_uid": "eda21cc15ccc426c7a84dcf76e559d47", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "5aecbd1eaeb266587416ebbe8c60af5d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain(){\nint n,i,sum=0,len;\nscanf(\"%d\",&n);\ngetchar();\nchar s[100];\nfor(i=0;i<n;i++)\n{\n    scanf(s);\n    len=strlen(s);\nif(s[0]=='C')\n    {\n        sum=sum+6;\n    }\n\nelse if(s[0]=='O')\n    {\n        sum=sum+8;\n    }\n\n\nelse if(s[0]=='D')\n    {\n        sum=sum+12;\n    }\n  else if(s[0]=='T')\n    {\n        sum=sum+4;\n    }\nelse if(s[0]=='I')\n    {\n        sum=sum+20;\n    }\n\n}\n  printf(\"%d\",sum);\n  }", "fixed": "#include<stdio.h>\n#include<string.h>\nmain(){\nint n,i,sum=0,len;\nscanf(\"%d\",&n);\ngetchar();\nchar s[100];\nfor(i=0;i<n;i++)\n{\n    gets(s);\n    len=strlen(s);\nif(s[0]=='C')\n    {\n        sum=sum+6;\n    }\n\nelse if(s[0]=='O')\n    {\n        sum=sum+8;\n    }\n\n\nelse if(s[0]=='D')\n    {\n        sum=sum+12;\n    }\n  else if(s[0]=='T')\n    {\n        sum=sum+4;\n    }\nelse if(s[0]=='I')\n    {\n        sum=sum+20;\n    }\n\n}\n  printf(\"%d\",sum);\n  }"}
{"similarity_score": 0.9852104664391353, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1f10bbb746f46ce739c73fcef60d8db9", "bug_code_uid": "74ec9199fb8c43bada7f488cb5e1914b", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "59797948bd8393f5d504203ff9d49965", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int tt, n, x, count;\n    scanf(\"%d\", &tt);\n    while(tt--)\n    {\n        count = 0;\n        scanf(\"%d %d\", &n, &x);\n        if(n < 3)\n        {\n            printf(\"1\\n\");\n        }\n        else\n        {\n           for(int i = 3; i <= x + 2; i += x)\n              count += x; \n           printf(\"%d\\n\", count);\n        } \n        \n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int tt, n, x, count;\n    scanf(\"%d\", &tt);\n    while(tt--)\n    {\n        count = 1;\n        scanf(\"%d %d\", &n, &x);\n        if(n < 3)\n        {\n            printf(\"1\\n\");\n        }\n        else\n        {\n           for(int i = 3; i <= n; i += x)\n              count++; \n           printf(\"%d\\n\", count);\n        } \n        \n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9164086687306502, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "8082a5ba70680acd5410c8fdd9189fa6", "bug_code_uid": "f7564c0ab6538e96853362b73d733fcb", "src_uid": "1c597da89880e87ffe791dd6b9fb2ac7", "apr_id": "8d42c329ead06abf84288b339f179401", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++){\r\n         long long int m;\r\n        scanf(\"%lld\",&m);\r\n        long long int arr[m];\r\n        scanf(\"%lld\",&arr[0]);\r\n        int flag=1;\r\n                for(long long int j=1;j<m;j++){\r\n                scanf(\"%lld\",&arr[j]);\r\n                if(arr[j]%arr[0]!=0){\r\n                    flag=0;\r\n                    break;\r\n                }\r\n        }\r\n        if(flag==1){\r\n        printf(\"YES\\n\");}\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++){\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        int arr[m];\r\n        scanf(\"%d\",&arr[0]);\r\n        int flag=1;\r\n                for(int j=1;j<m;j++){\r\n                scanf(\"%d\",&arr[j]);\r\n                \r\n        }\r\n        for(int j=1;j<m;j++){\r\n            if(arr[j]%arr[0]!=0){\r\n                    flag=0;\r\n                    break;\r\n                }\r\n        }\r\n        if(flag==1){\r\n        printf(\"YES\\n\");}\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n        \r\n    }\r\n}"}
{"similarity_score": 0.8552188552188552, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "45b680f8dec0fd8f7a7d4651bb7f70a3", "bug_code_uid": "d4f7ce73fd3188448b132047daff4cf3", "src_uid": "2e6ddb2b11f8ac857e81d4b9b0c7d783", "apr_id": "7554de8ed724ff4b632f53229b720eb4", "difficulty": 800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main ()\r\n{\r\n    int n,i,l;\r\n    char a[100002];\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%s\",&a);\r\n        int c=0;\r\n        l=strlen(a);\r\n        for(i=0;i<l;i++){\r\n            if(a[i]=='0') c++;\r\n        }\r\n        if(!c) printf(\"0\\n\");\r\n        else if(c==l||(c!=l&&c==1)) printf(\"1\\n\");\r\n        else printf(\"2\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main ()\r\n{\r\n    int n,i,l;\r\n    char a[100002];\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%s\",&a);\r\n        int c=0;\r\n        l=strlen(a);\r\n        for(i=0;i<l;i++){\r\n            if(a[i]=='0') {\r\n                c++;\r\n                while(a[i+1]=='0'&&i<l){\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        if(!c) printf(\"0\\n\");\r\n        else if(c==l||(c!=l&&c==1)) printf(\"1\\n\");\r\n        else printf(\"2\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9382940108892922, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "57e264ddb806792b1c5ec974394ace35", "bug_code_uid": "73f46059fbe1760b545cef9c2e1ef7ae", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "ba101388ce1218b2e68a04eeb5409ab2", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar s[1001];\n\tint i,k,flag=0,count,j,n,l,p,c=0;\n\tscanf(\"%s\",s);\n\tint len=strlen(s);\n//\tprintf(\"%d\\n\",len);\n\tscanf(\"%d\",&p);\n\tk=len/p;\n\tfor(i=0;i<=(len-k);i=i+k)\n\t{\n\t\tl=i;\n\t\tj=i+k-1;\n\t\tcount=0;\n\t\twhile(s[l]==s[j])\n\t\t{\n\t\t//\tprintf(\"%c %c\\n\",s[l],s[j]);\n\t\t\tcount+=1;\n\t\t\tif(l==j-1 || l==j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tl++;\n\t\t\tj--;\n\t\t}\n\t\tif(count!=(k+1)/2)\n\t\t{\n\t\t\tflag=1;\n\t//\t\tprintf(\"%d %d\\n\",i,count);\n\t\t\tprintf(\"NO\\n\");\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0)\n\t\tprintf(\"YES\\n\");\n\treturn 0;\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar s[1001];\n\tint i,k,flag=0,count,j,n,l,p,c=0;\n\tscanf(\"%s\",s);\n\tint len=strlen(s);\n//\tprintf(\"%d\\n\",len);\n\tscanf(\"%d\",&p);\n\tif((len%p)!=0)\n\t\tprintf(\"NO\\n\");\n\telse\n\t{\n\tk=len/p;\n\tfor(i=0;i<=(len-k);i=i+k)\n\t{\n\t\tl=i;\n\t\tj=i+k-1;\n\t\tcount=0;\n\t\twhile(s[l]==s[j])\n\t\t{\n\t\t//\tprintf(\"%c %c\\n\",s[l],s[j]);\n\t\t\tcount+=1;\n\t\t\tif(l==j-1 || l==j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tl++;\n\t\t\tj--;\n\t\t}\n\t\tif(count!=(k+1)/2)\n\t\t{\n\t\t\tflag=1;\n\t//\t\tprintf(\"%d %d\\n\",i,count);\n\t\t\tprintf(\"NO\\n\");\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0)\n\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n\n}"}
{"similarity_score": 0.9989754098360656, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ad4f171d5c5bf8e6a15cda875d22dd3e", "bug_code_uid": "b69959dda342962bad000d725bd18ddd", "src_uid": "e27620d3a43ab42edf930b37ce214c9e", "apr_id": "ba9ed151b0224b51a17d1e93d60c51bd", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n    int main(){\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--){\r\n        int pre_digit;\r\n        char s[100000],b[100000];\r\n        b[0]='1';\r\n        scanf(\"%d %s\",&n,s);\r\n        if(s[0]=='1'){\r\n            pre_digit=2;\r\n        }else{pre_digit=1;}\r\n        for(int i=1;i<strlen(s);i++){\r\n            if(s[i]=='0'){\r\n               if(pre_digit!=1){\r\n                   pre_digit=1;\r\n                   b[i]='1';\r\n               }else{\r\n                   pre_digit=0;\r\n                   b[i]='0';\r\n               }\r\n               }else if(s[i]=='1'){\r\n                   if(pre_digit!=2){\r\n                       pre_digit=2;\r\n                       b[i]='1';\r\n                   }\r\n                   else{\r\n                       pre_digit=1;\r\n                       b[i]='0';\r\n                   }\r\n               }\r\n            \r\n        }\r\n        printf(\"%s\\n\",b);\r\n        \r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n    int main(){\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--){\r\n        int pre_digit;\r\n        char s[1000000],b[1000000];\r\n        b[0]='1';\r\n        scanf(\"%d %s\",&n,s);\r\n        if(s[0]=='1'){\r\n            pre_digit=2;\r\n        }else{pre_digit=1;}\r\n        for(int i=1;i<strlen(s);i++){\r\n            if(s[i]=='0'){\r\n               if(pre_digit!=1){\r\n                   pre_digit=1;\r\n                   b[i]='1';\r\n               }else{\r\n                   pre_digit=0;\r\n                   b[i]='0';\r\n               }\r\n               }else if(s[i]=='1'){\r\n                   if(pre_digit!=2){\r\n                       pre_digit=2;\r\n                       b[i]='1';\r\n                   }\r\n                   else{\r\n                       pre_digit=1;\r\n                       b[i]='0';\r\n                   }\r\n               }\r\n            \r\n        }\r\n        printf(\"%s\\n\",b);\r\n        \r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9877216916780355, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5715b606a09ca2b0c7f61fa55ce47f4d", "bug_code_uid": "4aba25754bbc70faf61466ce815f2ad7", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "1e0803a44ad3b0e8a4a5fb69b3e46af8", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong long n,i,num,max;\nlong long score[100001];\nlong long t[100001]={0};\nscanf(\"%lld\",&n);\nscore[0]=0;\nmax=0;\nfor(i=1;i<=n;i++)\n{\nscanf(\"%lld\",&num);\n\nif(num>max)\nmax=num;\n}\nscore[1]=t[1];\nfor(i=2;i<=max;i++)\nif(score[i-2]+t[i]*i>score[i-1])\nscore[i]=score[i-2]+t[i]*i;\nelse\nscore[i]=score[i-1];\nprintf(\"%lld\",score[max]);\n}\n   \t \t", "fixed": "#include<stdio.h>\nint main()\n{\nlong long n,i,num,max;\nlong long score[100001];\nlong long t[100001]={0};\nscanf(\"%lld\",&n);\nscore[0]=0;\nmax=0;\nfor(i=1;i<=n;i++)\n{\nscanf(\"%lld\",&num);\nt[num]++;\nif(num>max)\nmax=num;\n}\nscore[1]=t[1];\nfor(i=2;i<=max;i++)\nif(score[i-2]+t[i]*i>score[i-1])\nscore[i]=score[i-2]+t[i]*i;\nelse\nscore[i]=score[i-1];\nprintf(\"%lld\",score[max]);\n}\n   \t \t"}
{"similarity_score": 0.9978308026030369, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fe6e39936a442c15344bcac7d66ebd3b", "bug_code_uid": "f48ea869c12c95b1e54c766b7027239b", "src_uid": "fb0a4c8f737c36596c2d8c1ae0d1e34e", "apr_id": "b9603be106a85d478a00bae9c741bfed", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main(){\n   \tint n,s,t,num;\n\tscanf(\"%d\",&num);\n\tfor(int i = 0;i < num;i++){\n   \t\tscanf(\"%d %d %d\",&n,&s,&t);\n\t\ts = s<t?s:t;\n\t\tprint(\"%d\\n\",n - s + 1);\n\t}\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main(){\n   \tint n,s,t,num;\n\tscanf(\"%d\",&num);\n\tfor(int i = 0;i < num;i++){\n   \t\tscanf(\"%d %d %d\",&n,&s,&t);\n\t\ts = s<t?s:t;\n\t\tprintf(\"%d\\n\",n - s + 1);\n\t}\n    return 0;\n}"}
{"similarity_score": 0.7566628041714948, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f241ab8604574a36095d4817d891a295", "bug_code_uid": "08c4f5e98298f198a104d9a248fc6834", "src_uid": "354658f565e265c2a1ce37355d6466e1", "apr_id": "8c864aa29fc41d04ae2cb7be1e264337", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int i,j,t,l,c=0,x=0,y=0;\r\n    char s[100];\r\n    scanf(\"%d\",&t);\r\n    if(t>=1 && t<=100){\r\n        for(j=0;j<t;j++){\r\n            if(j!=0){\r\n                printf(\"\\n\");\r\n            }\r\n            scanf(\"%d\",&l);\r\n            if(l>=1 && l<=100){\r\n                scanf(\"%s\",s);\r\n                if(l<=2){\r\n                    printf(\"YES\");\r\n                }\r\n                else{\r\n                    for(i=0;i<l;i++){\r\n                        if(s[i]=='0'){\r\n                            x++;\r\n                        }\r\n                        else if(s[i]=='1'){\r\n                            y++;\r\n                        }\r\n                    }\r\n                    if(x>=2 || y>=2){\r\n                        printf(\"NO\");\r\n                    }\r\n                    else{\r\n                        printf(\"YES\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int i,j,t,l,c=0,x=0,y=0;\r\n    char s[100];\r\n    scanf(\"%d\",&t);\r\n    if(t>=1 && t<=100){\r\n        for(j=0;j<t;j++){\r\n            if(j!=0){\r\n                printf(\"\\n\");\r\n            }\r\n            scanf(\"%d\",&l);\r\n            if(l>=1 && l<=100){\r\n                scanf(\"%s\",s);\r\n                if(l<2){\r\n                    printf(\"YES\");\r\n                }\r\n                else if(l==2){\r\n                    if(s[0]==s[1]){\r\n                        printf(\"NO\");\r\n                    }\r\n                    else{\r\n                        printf(\"YES\");\r\n                    }\r\n                }\r\n                else{\r\n                    printf(\"NO\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9106145251396648, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "b703783cdcccd4903bda805dbc88d3b2", "bug_code_uid": "56fba41c1492c7e777578efecb7d683d", "src_uid": "9438ce92e10e846dd3ab7c61a1a2e3af", "apr_id": "44dacbf8cac169fbef63411f06e85c75", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint ok[160];\n\nint main(void)\n{\n\n\tmemset(ok, 0, sizeof(ok));\n\tint n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tint t;int right = 1;\n\twhile(scanf(\"%d\", &t) != EOF)\n\t{\n\t\tok[t] = 1;\n\t}\n\tfor(t = 1; t <= m; t++) if(ok[t] == 0) {right = 0; break;}\n\tif(right) printf(\"YES\\n\"); else printf(\"NO\\n\");\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint ok[160];\n\nint main(void)\n{\n\n\tmemset(ok, 0, sizeof(ok));\n\tint n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tint t,k;int right = 1;int i;\n\twhile(scanf(\"%d\", &k) != EOF)\n\t{\n\t\tfor(i = 0; i < k; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &t);\n\t\t\tok[t] = 1;\n\t\t}\n\t}\n\tfor(t = 1; t <= m; t++) if(ok[t] == 0) {right = 0; break;}\n\tif(right) printf(\"YES\\n\"); else printf(\"NO\\n\");\n\n\treturn 0;\n}"}
{"similarity_score": 0.9944444444444445, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e1de11d8c8888363432ed2ca8cf5fa34", "bug_code_uid": "1b45f499c29c0a46cc0c6746ce0a4331", "src_uid": "322792a11d3eb1df6b54e8f89c9a0490", "apr_id": "9d51315a074a50beb00b375dc3bec296", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "main()\r\n{\r\nint t,i;\r\nscanf(\"%d\",&t);\r\nfor(i=0;i<t;i++)\r\n{\r\nint s;\r\nscanf(\"%d\",&s);\r\nint n;\r\nn=pow(s,0.5);\r\nif(n*n==s)\r\n    printf(\"%d\",n);\r\nelse\r\nprintf(\"%d\\n\",n+1);\r\n\r\n\r\n}\r\n\r\n}\r\n", "fixed": "main()\r\n{\r\nint t,i;\r\nscanf(\"%d\",&t);\r\nfor(i=0;i<t;i++)\r\n{\r\nint s;\r\nscanf(\"%d\",&s);\r\nint n;\r\nn=pow(s,0.5);\r\nif(n*n==s)\r\n    printf(\"%d\\n\",n);\r\nelse\r\nprintf(\"%d\\n\",n+1);\r\n\r\n\r\n}\r\n\r\n}\r\n"}
{"similarity_score": 0.9239250275633958, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e6a27aab4c288856de9dbba64a4e159e", "bug_code_uid": "24248cb4b30acfd4ee029951a693d8c3", "src_uid": "45cf60f551bd5cbb1f3df6ac3004b53c", "apr_id": "43f9cbb546acf299896a69844ca87ef6", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,h1,h2,h3;\r\n    scanf(\"%d\",&n);\r\nif((n%3)==0){\r\n    h1=n/3;\r\n    h2=(n/3) +1;\r\n    h3=(n/3)-1;\r\n}else if((n%3)==1)\r\n{\r\n    h1=(n/3)+1;\r\n    h2=(n/3) +2;\r\n    h3=(n/3)-2;\r\n}else if((n%3)==2){\r\n    h1=(n/3)+1;\r\n    h2=(n/3) +2;\r\n    h3=(n/3)-1;\r\n}\r\nprintf(\"%d %d %d\",h1,h2,h3);\r\nprintf(\"\\n\");\r\n\r\n}\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,h1,h2,h3;\r\n    scanf(\"%d\",&n);\r\nif((n%3)==0){\r\n    h1=n/3;\r\n    h2=(n/3) +1;\r\n    h3=(n/3)-1;\r\n}else if((n%3)==1)\r\n{\r\n    if(n==7){\r\n    h1=2;\r\n    h2=4;\r\n    h3=1;\r\n\r\n    }else{\r\n    h1=(n/3)+1;\r\n    h2=(n/3) +2;\r\n    h3=(n/3)-2;\r\n    }\r\n}else if((n%3)==2){\r\n    h1=(n/3)+1;\r\n    h2=(n/3) +2;\r\n    h3=(n/3)-1;\r\n}\r\nprintf(\"%d %d %d\",h1,h2,h3);\r\nprintf(\"\\n\");\r\n\r\n}\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9510939510939511, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "674df55bd938ef9208309278fbc24545", "bug_code_uid": "e1c9133d7373c8e5e100b9d52fbfe172", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "b432bafd5a18164a2d74ac9b7baaf918", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid merge(int a[],int l,int m,int r)\n{\n\tint n1=m-l+1;\n\tint n2=r-m;\n\tint b[n1],c[n2];\n\tint i,j,k;\n\tfor(i=0;i<n1;i++)\n\t\tb[i]=a[l+i];\n\tfor(i=0;i<n2;i++)\n\t\tc[i]=a[m+1+i];\n\tj=k=0;\n\ti=l;\n\twhile(j<n1&&k<n2)\n\t{\n\t\tif(b[j]<=c[k])\n\t\t\ta[i++]=b[j++];\n\t\telse\n\t\t\ta[i++]=c[k++];\n\t}\n\twhile(j<n1)\n\t\ta[i++]=b[j++];\n\twhile(k<n2)\n\t\ta[i++]=c[k++];\n}\nvoid mergesort(int a[],int l,int r)\n{\n\tif(l<r)\n\t{\n\t\tint m=(l+r)/2;\n\t\tmergesort(a,l,m);\n\t\tmergesort(a,m+1,r);\n\t\tmerge(a,l,m,r);\n\t}\n}\nint main()\n{\n\tint i,j,n;\n\tscanf(\"%d\",&n);\n\tint a[n],b[n];\n\tlong long sum=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\t\n\t}\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tmergesort(b,0,n-1);\n\tif(sum==0)\n\t\tprintf(\"NO\\n\");\n\telse\n\t{\n\t\tif(b[n-1]+b[n-2]>=sum)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nvoid merge(int a[],int l,int m,int r)\n{\n\tint n1=m-l+1;\n\tint n2=r-m;\n\tint b[n1],c[n2];\n\tint i,j,k;\n\tfor(i=0;i<n1;i++)\n\t\tb[i]=a[l+i];\n\tfor(i=0;i<n2;i++)\n\t\tc[i]=a[m+1+i];\n\tj=k=0;\n\ti=l;\n\twhile(j<n1&&k<n2)\n\t{\n\t\tif(b[j]<=c[k])\n\t\t\ta[i++]=b[j++];\n\t\telse\n\t\t\ta[i++]=c[k++];\n\t}\n\twhile(j<n1)\n\t\ta[i++]=b[j++];\n\twhile(k<n2)\n\t\ta[i++]=c[k++];\n}\nvoid mergesort(int a[],int l,int r)\n{\n\tif(l<r)\n\t{\n\t\tint m=(l+r)/2;\n\t\tmergesort(a,l,m);\n\t\tmergesort(a,m+1,r);\n\t\tmerge(a,l,m,r);\n\t}\n}\nint main()\n{\n\tint i,j,n;\n\tscanf(\"%d\",&n);\n\tint a[n],b[n];\n\tlong long sum=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\t\n\t}\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tmergesort(b,0,n-1);\n\tif(b[n-1]+b[n-2]>=sum)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.5182926829268293, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c79a79236dccef211e795e3305b62c46", "bug_code_uid": "164d52b306f72772603d36e4f26b1242", "src_uid": "681ee82880ddd0de907aac2ccad8fc04", "apr_id": "4a6616f24ec5b83f6b226f0d2b06c436", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t, i, j, l, r, a, max, value;\r\n\tscanf(\"%d\", &t);\r\n\tfor(i = 0; i < t; i++)\r\n\t{\r\n\t\tmax = 0;\r\n\t\tscanf(\"%d %d %d\", &l, &r, &a);\r\n\t\tfor(j = l; j <= r; j++)\r\n\t\t{\r\n\t\t\tvalue = j/a + j%a;\r\n\t\t\tmax = (value < max) ? max : value;\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%d\\n\", max);\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t, i, l, r, a, first, second, max;\r\n\tscanf(\"%d\", &t);\r\n\tfor(i = 0; i < t; i++)\r\n\t{\r\n\t\tmax = 0;\r\n\t\tscanf(\"%d %d %d\", &l, &r, &a);\r\n\t\r\n\t\tfirst = r / a + r % a;\r\n\t\tif(r - r%a - 1 >= l)\r\n\t\t\tsecond = (r - r%a - 1) / a + a-1; \r\n\t\telse second = 0;\r\n\t\tmax = (first > second) ? first : second;\r\n\t\t\r\n\t\tprintf(\"%d\\n\", max);\r\n\t}\r\n}"}
{"similarity_score": 0.9174311926605505, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "691aed1dae10f3e7b6b7f098a6eea35d", "bug_code_uid": "c8258b78ed380db85954316aa5abbd14", "src_uid": "63e03361531999db408dc0d02de93579", "apr_id": "53750a093f45ee77e2b03ddec62d45a0", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,k,i,p,t,j,c;\n    double m;\n    double ara[55];\n    int a[55];\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)    {\n        scanf(\"%d %d\",&p,&t);\n        m=p+t/100.0;\n        ara[i]=m;\n    }\n    for(i=0;i<n-1;i++)    {\n        for(j=i+1;j<n;j++)    {\n            if(ara[i]<ara[j])    {\n                m=ara[i];\n                ara[i]=ara[j];\n                ara[j]=m;\n            }\n        }\n    }\n    ara[n]=0.0;\n    m=ara[0];\n    c=1;\n    for(i=1;i<=n;i++)    {\n        if(ara[i]==m)    {\n            c++;\n        }\n        else    {\n            m=ara[i];\n            for(j=i-1;j>=i-c;j--)    {\n                a[j]=c;\n            }\n            c=1;\n        }\n    }\n    printf(\"%d\\n\",a[k-1]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,k,i,p,t,j,c;\n    double m;\n    double ara[55];\n    int a[55];\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)    {\n        scanf(\"%d %d\",&p,&t);\n        m=p-t/100.0;\n        ara[i]=m;\n    }\n    for(i=0;i<n-1;i++)    {\n        for(j=i+1;j<n;j++)    {\n            if(ara[i]<ara[j])    {\n                m=ara[i];\n                ara[i]=ara[j];\n                ara[j]=m;\n            }\n        }\n    }\n    /*for(i=0;i<n;i++)    {\n        printf(\"%lf\\n\",ara[i]);\n    }*/\n    ara[n]=0.0;\n    m=ara[0];\n    c=1;\n    for(i=1;i<=n;i++)    {\n        if(ara[i]==m)    {\n            c++;\n        }\n        else    {\n            m=ara[i];\n            for(j=i-1;j>=i-c;j--)    {\n                a[j]=c;\n            }\n            c=1;\n        }\n    }\n    /*for(i=0;i<n;i++)    {\n        printf(\"%d\\n\",a[i]);\n    }*/\n    printf(\"%d\\n\",a[k-1]);\n    return 0;\n}\n"}
{"similarity_score": 0.9982046678635548, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a864b871115fbad729a6d11180c8fd96", "bug_code_uid": "f21bae157245348e3e6df83667371d24", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "be47f5b032ac58544bd184d2f6af5ba6", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n long long n,b,d,i,p=0,sum=0,a;\n scanf(\"%I64d%I64d%I64d\",&n,&b,&d);\n   for(i=1;i<=n;i++)\n   {\n       scanf(\"%I64d\",&a);\n       if(a<b)\n       sum=sum+a;\n       if(sum>d)\n       {\n         sum=0;\n         p++;\n       }\n   }\n   printf(\"%I64d\",p);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n long long n,b,d,i,p=0,sum=0,a;\n scanf(\"%I64d%I64d%I64d\",&n,&b,&d);\n   for(i=1;i<=n;i++)\n   {\n       scanf(\"%I64d\",&a);\n       if(a<=b)\n       sum=sum+a;\n       if(sum>d)\n       {\n         sum=0;\n         p++;\n       }\n   }\n   printf(\"%I64d\",p);\n}\n"}
{"similarity_score": 0.9954128440366973, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e7a7d81f96fb7c147dece1753c53fceb", "bug_code_uid": "c921b5e4f903d609dac5df7f04f92f31", "src_uid": "0690e2df87f60e5be34505d9e2817032", "apr_id": "3467908405dc8cf8a0cb7375d6326d40", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(void){\r\n    int min=0;\r\n    int t,i,n;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n         scanf(\"%d\",&n);\r\n          min=(n-3)/3-1;\r\n          printf(\"%i\",min);\r\n        \r\n    \r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main(void){\r\n    int min=0;\r\n    int t,i,n;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n         scanf(\"%d\",&n);\r\n          min=(n-3)/3-1;\r\n          printf(\"%i\\n\",min);\r\n        \r\n    \r\n    }\r\n}"}
{"similarity_score": 0.19117647058823528, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "da8add2935a75e44e505389ec9d43676", "bug_code_uid": "790287bf69d40a0669868a989819d2ce", "src_uid": "46d734178b3acaddf2ee3706f04d603d", "apr_id": "a0ab141ff0e122ec259dc73e4710a657", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[1001] , t[1001];\n    scanf(\"%s%s\",s,t);\n    int i;\n    for(i=strlen(s)-1 ; s[i]=='z' ; i--)\n        s[i] = 'a';\n    s[i] += 1;\n    if(strcmp(s,t))\n        puts(s);\n    else puts(\"No such string\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[1000] , s1[1000] , s2[1000];\n    gets(s);\n    gets(s1);\n    gets(s2);\n    int i=0 , j=0 , k=0 , m;\n    for(m=0 ; s[m]!='\\0'; m++)\n    {\n        if(s[m]=='a' || s[m]=='e' || s[m]=='i' || s[m]=='o' || s[m]=='u')\n            i++;\n    }\n\n    for(m=0 ; s1[m]!='\\0'; m++)\n     {\n        if(s1[m]=='a' || s1[m]=='e' || s1[m]=='i' || s1[m]=='o' || s1[m]=='u')\n            j++;\n    }\n\n    for(m=0 ; s2[m]!='\\0'; m++)\n    {\n        if(s2[m]=='a' || s2[m]=='e' || s2[m]=='i' || s2[m]=='o' || s2[m]=='u')\n            k++;\n    }\n    if(i==5 && j==7 && k==5)\n    {\n        printf(\"YES\");\n    }\n    else puts(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.9588875453446191, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "03b394b022c9f16b6148843eaaa46a01", "bug_code_uid": "4c20a7f5fb05db5595428af154d8ae71", "src_uid": "1a740b0ad2ec3ed208f01fc7b64e00d4", "apr_id": "af20f17050190d41433bb59ef15a1e42", "difficulty": 1500, "tags": ["dfs and similar", "brute force", "shortest paths"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int n, m, k, max = -1, i, j, t, a = 1, b = 1, x[10], y[10], tmp = 10000;\n           freopen(\"input.txt\",\"r\",stdin);\n  freopen(\"output.txt\",\"w\",stdout);\n     scanf(\"%d%d%d\", &n, &m, &k);\n     for (i = 0; i < k; i++)\n     scanf(\"%d%d\", &x[i], &y[i]);\n     for (i = 1; i <= n; i++) {\n          for (j = 1; j <= m; j++) {\n               for (t = 0; t < k; t++) {\n                    if (abs(i - x[t]) + abs(j - y[t]) < tmp)\n                    {\n                         tmp = abs(i - x[t]) + abs(j - y[t]);\n                    }\n               }\n               if (tmp > max) {\n                    max = tmp;\n                    a = i;\n                    b = j;\n               }\n          }\n     }\n     printf(\"%d %d\", a, b);\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int n, m, k, max = -1, i, j, t, a = 1, b = 1, x[10], y[10], tmp = 10000;\n     freopen(\"input.txt\",\"r\",stdin);\n     freopen(\"output.txt\",\"w\",stdout);\n     scanf(\"%d%d%d\", &n, &m, &k);\n     for (i = 0; i < k; i++)\n     scanf(\"%d%d\", &x[i], &y[i]);\n     for (i = 1; i <= n; i++)\n     {\n          for (j = 1; j <= m; j++)\n          {\n               tmp = 100000;\n               for (t = 0; t < k; t++)\n               {\n                    if (abs(i - x[t]) + abs(j - y[t]) < tmp)\n                    {\n                         tmp = abs(i - x[t]) + abs(j - y[t]);\n                    }\n               }\n               if (tmp > max) {\n                    max = tmp;\n                    a = i;\n                    b = j;\n               }\n          }\n     }\n     printf(\"%d %d\", a, b);\n     return 0;\n}\n"}
{"similarity_score": 0.9612903225806452, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e5aa49b816e9c4d3bf6864774e7b9557", "bug_code_uid": "0aaae031c4e5f36d8fac09c0943bd900", "src_uid": "f3e413954c9c02520fd25bd2cba4747e", "apr_id": "ef7e482c1a9880fa58006dec389582be", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif( n % 2050 != 0)\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\tn /= 2050;\r\n\t\t\tint res =0;\r\n\t\t\twhile(n)\r\n\t\t\t{\r\n\t\t\t\tres += n % 10;\r\n\t\t\t\tn /= 10;\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\",res);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tlong long int n;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tif( n % 2050 != 0)\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\tn /= 2050;\r\n\t\t\tlong long int res =0;\r\n\t\t\twhile(n)\r\n\t\t\t{\r\n\t\t\t\tres += n % 10;\r\n\t\t\t\tn /= 10;\r\n\t\t\t}\r\n\t\t\tprintf(\"%lld\\n\",res);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.5964214711729622, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "56c1f3e974e842c577d41ee52e41b77a", "bug_code_uid": "52b6963ed541d35a223d9ab0ea84c9e1", "src_uid": "ccb7b8c0c389ea771f666c236c1cba5f", "apr_id": "980881c33eb3c632a0d66836c82759a0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tint t = 0;\n\tscanf(\"%d\", &t);\n\tfor (int i = 0; i < t; i++){\n\t    int a, b, x, y;\n\t    scanf(\"%d%d%d%d\", &a, &b, &x, &y);\n\t    int area = 0;\n\t    int q1 = 0, q2 = 0;\n\t    if (a - x > b - y){\n\t        if (x > a - x)\n\t            area = x * b;\n            else\n                area = (a-x -1) * b;\n\t    }\n\t    else{\n\t        if (y > b - y)\n\t            area = y * a;\n\t        else\n\t            area = (b-y-1) * a;\n\t    }\n\t    printf(\"%d\\n\", area);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tint t = 0;\n\tscanf(\"%d\", &t);\n\tfor (int i = 0; i < t; i++){\n\t    int a, b, x, y;\n\t    scanf(\"%d%d%d%d\", &a, &b, &x, &y);\n\t    int area[4];\n\t    int q1 = 0, q2 = 0;\n\t    area[0] = (a-x-1) * b;\n\t    area[1] =   a*y;\n\t    area[2] = (b-y-1) * a;\n\t    area[3] =   b*x;\n\t    int large = area[0];\n\t    for (int j = 1;j < 4;j++){\n\t        if (large < area[j]){\n\t            large = area[j];\n\t        }\n\t    }\n\t    printf(\"%d\\n\", large);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.47047047047047047, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "190f225259484ca709ea6eaadc3b5249", "bug_code_uid": "7bb2d5bbe665c94b4c94b2d96af3da28", "src_uid": "efdb966e414050c5e51e8beb7bb06b20", "apr_id": "1765a00732a82f7193506963ffaae2f3", "difficulty": 1700, "tags": ["binary search", "brute force", "math", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint a[100010];\r\n\r\nint main()\r\n{\r\n    int n, q, k;\r\n    scanf(\"%d%d%d\", &n, &q, &k);\r\n    for (int i = 1; i <= n; i++) {\r\n        scanf(\"%d\", &a[i]);\r\n    }\r\n    for (int qq = 0; qq < q; qq++) {\r\n        int l, r;\r\n        scanf(\"%d%d\", &l, &r);\r\n        long long result = a[r] - a[l];\r\n        result -= r;\r\n        result -= r;\r\n        result += l;\r\n        result += l;\r\n        result--;\r\n        result += k;\r\n        printf(\"%lld\\n\", result);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\ninline int min(int x, int y)\r\n{\r\n    return (x > y) ? y : x;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int x, y;\r\n    for (int tt = 0; tt < t; tt++) {\r\n        scanf(\"%d%d\", &x, &y);\r\n        long long result = 0;\r\n        for (int r = 1; r * r <= x; r++) {\r\n            int s = min(x / r - 1, y) - r;\r\n            if (s <= 0) {\r\n                break;\r\n            }\r\n            result += s;\r\n        }\r\n        printf(\"%lld\\n\", result);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9874776386404294, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5b67a595ac1cbff493f03f50cfe12c43", "bug_code_uid": "a9e5cc6c50b060e1b906187e80f7fe14", "src_uid": "840a4e16454290471faa5a27a3c795d9", "apr_id": "b23aaffff0382021c979d148acee60c1", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n\tlong int t,i,j,k,l,x,y;\n\tscanf(\"%ld\",&t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%ld\",&x);\n\t\ty=floor(x/14);\n\t\tx=x%14;\n\t\tif( x>0 && x<7 && y>=1){\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n\tlong long int t,i,j,k,l,x,y;\n\tscanf(\"%lld\",&t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%lld\",&x);\n\t\ty=floor(x/14);\n\t\tx=x%14;\n\t\tif( x>0 && x<7 && y>=1){\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.998166819431714, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0fb755de394637273238ccc2f278a7f3", "bug_code_uid": "01404d15c14ab4bbc90341d2116548d2", "src_uid": "422cbf106fac3216d58bdc8411c0bf9f", "apr_id": "8323172c762041f74b015928403cf76b", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint split ( int*, int, int ) ;\nvoid quicksort ( int *, int, int ) ;\nint main()\n{\n    int a,b,i;\n    scanf(\"%d    %d\",&a,&b);\n    int arr[b];\n    for(i=0;i<b;i++)\n        scanf(\"%d\",&arr[i]);\n    quicksort ( arr, 0, b-1 ) ;\n    if(arr[0]==1||arr[b-1]==a)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n    for(i=0;i<a;i++)\n    {\n        if(arr[i+1]-arr[i]==1)\n        {\n            if(arr[i+2]-arr[i]==2)\n            {\n                printf(\"NO\");\n                return 0;\n            }\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\nvoid quicksort ( int a[ ], int lower, int upper )\n{\n\tint i ;\n\tif ( upper > lower )\n\t{\n\t\ti = split ( a, lower, upper ) ;\n\t\tquicksort ( a, lower, i - 1 ) ;\n\t\tquicksort ( a, i + 1, upper ) ;\n\t}\n}\n\nint split ( int *a, int lower, int upper )\n{\n\tint i, p, q, t ;\n\n\tp = lower + 1 ;\n\tq = upper ;\n\ti = a[lower] ;\n\n\twhile ( q >= p )\n\t{\n\t\twhile ( a[p] < i )\n\t\t\tp++ ;\n\n\t\twhile ( a[q] > i )\n\t\t\tq-- ;\n\n\t\tif ( q > p )\n\t\t{\n\t\t\tt = a[p] ;\n\t\t\ta[p] = a[q] ;\n\t\t\ta[q] = t ;\n\t\t}\n\t}\n\n\tt = a[lower] ;\n\ta[lower] = a[q] ;\n\ta[q] = t ;\n\n\treturn q ;\n}\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nint split ( int*, int, int ) ;\nvoid quicksort ( int *, int, int ) ;\nint main()\n{\n    int a,b,i;\n    scanf(\"%d    %d\",&a,&b);\n    int arr[b];\n    for(i=0;i<b;i++)\n        scanf(\"%d\",&arr[i]);\n    quicksort ( arr, 0, b-1 ) ;\n    if(arr[0]==1||arr[b-1]==a)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n    for(i=0;i<b-2;i++)\n    {\n        if(arr[i+1]-arr[i]==1)\n        {\n            if(arr[i+2]-arr[i]==2)\n            {\n                printf(\"NO\");\n                return 0;\n            }\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\nvoid quicksort ( int a[ ], int lower, int upper )\n{\n\tint i ;\n\tif ( upper > lower )\n\t{\n\t\ti = split ( a, lower, upper ) ;\n\t\tquicksort ( a, lower, i - 1 ) ;\n\t\tquicksort ( a, i + 1, upper ) ;\n\t}\n}\n\nint split ( int *a, int lower, int upper )\n{\n\tint i, p, q, t ;\n\n\tp = lower + 1 ;\n\tq = upper ;\n\ti = a[lower] ;\n\n\twhile ( q >= p )\n\t{\n\t\twhile ( a[p] < i )\n\t\t\tp++ ;\n\n\t\twhile ( a[q] > i )\n\t\t\tq-- ;\n\n\t\tif ( q > p )\n\t\t{\n\t\t\tt = a[p] ;\n\t\t\ta[p] = a[q] ;\n\t\t\ta[q] = t ;\n\t\t}\n\t}\n\n\tt = a[lower] ;\n\ta[lower] = a[q] ;\n\ta[q] = t ;\n\n\treturn q ;\n}\n\n\n\n\n\n\n"}
{"similarity_score": 0.9861111111111112, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0382cecc4332829533541dc829821abf", "bug_code_uid": "4ae558b19ade42d5e0f5dd675fbdb775", "src_uid": "92bf30e66f4d5ddebb697d2fa4fa0689", "apr_id": "14c2b75d4b6bb25a5dc2eb7290df972d", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,i,p,b,f,c,h;\n    scanf(\"%d\",&n);\n    /*for(i=0;i<n;i++)\n    {*/\n        scanf(\"%d%d%d\",&b,&p,&f);\n        scanf(\"%d%d\",&h,&c);\n        if((p*2+f*2)<=b)\n        {\n            printf(\"%d\\n\",(p*h+(f*c)));\n        }\n        else if((p*2+f*2>b)&&(h<=c))\n        {\n            if(f*2<=b)\n            {\n                printf(\"%d\\n\",f*c+(((b-(2*f))/2)*h));\n            }\n            else if(f*2>b)\n            {\n                printf(\"%d\\n\",c*(b/2));\n            }\n        }\n        else if((p*2+f*2>b)&&(h>c))\n        {\n            if(p*2<=b)\n            {\n                printf(\"%d\\n\",p*h+(((b-(2*p))/2)*c));\n            }\n            else if(p*2>b)\n            {\n                printf(\"%d\\n\",h*(b/2));\n            }\n        }\n        return 0;\n    }\n\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,i,p,b,f,c,h;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&b,&p,&f);\n        scanf(\"%d%d\",&h,&c);\n        if((p*2+f*2)<=b)\n        {\n            printf(\"%d\\n\",(p*h+(f*c)));\n        }\n        else if((p*2+f*2>b)&&(h<=c))\n        {\n            if(f*2<=b)\n            {\n                printf(\"%d\\n\",f*c+(((b-(2*f))/2)*h));\n            }\n            else if(f*2>b)\n            {\n                printf(\"%d\\n\",c*(b/2));\n            }\n        }\n        else if((p*2+f*2>b)&&(h>c))\n        {\n            if(p*2<=b)\n            {\n                printf(\"%d\\n\",p*h+(((b-(2*p))/2)*c));\n            }\n            else if(p*2>b)\n            {\n                printf(\"%d\\n\",h*(b/2));\n            }\n        }\n\n    }\n       return 0;\n}\n\n"}
{"similarity_score": 0.9920159680638723, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1041ce661a330da915b77394037a9aa9", "bug_code_uid": "63922e68a553904333110f620af0c864", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "3e5086b50800a2a8febcc1e96fe0797d", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define ll long long\n\nint main(void) {\n\t// your code goes here\n\tll n, k, i;\n\tscanf(\"%lld%lld\", &n, &k);\n\tll a[n], c1 = 0, c2 = 0;\n\tfor(i = 0; i < n; i++){\n\t    char s[101];\n\t    scanf(\"%s\", s);\n\t    a[i] = strlen(s);\n\t}\n\tchar sc[101];\n\tscanf(\"%s\", sc);\n\tll len = strlen(sc);\n\tfor(i = 0; i < n; i++){\n\t    if (a[i] < len) c1++;\n\t    else if (a[i] == len) c2++;\n\t}\n\tprintf(\"%lld %lld\\n\", (c1 + 1) + (c1 + 1) / k * 5, (c1 + c2) + (c1 + c2) / k * 5);\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define ll long long\n\nint main(void) {\n\t// your code goes here\n\tll n, k, i;\n\tscanf(\"%lld%lld\", &n, &k);\n\tll a[n], c1 = 0, c2 = 0;\n\tfor(i = 0; i < n; i++){\n\t    char s[101];\n\t    scanf(\"%s\", s);\n\t    a[i] = strlen(s);\n\t}\n\tchar sc[101];\n\tscanf(\"%s\", sc);\n\tll len = strlen(sc);\n\tfor(i = 0; i < n; i++){\n\t    if (a[i] < len) c1++;\n\t    else if (a[i] == len) c2++;\n\t}\n\tprintf(\"%lld %lld\\n\", (c1 + 1) + (c1) / k * 5, (c1 + c2) + (c1 + c2 - 1) / k * 5);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.46219382321618746, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "575a764fb1fd297fa918ff935ba1ec53", "bug_code_uid": "b311eff397ae2d67347a7a3d2c39869c", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "6b6ea55d450cac070f9c60f8eeec4dd2", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (void) {\n    char str[200001];\n\n    long long int a, b, c, d=1, i=0, k=1,l;\n\n    scanf(\"%I64d\", &a);\n    gets(str);\n    gets(str);\n    l=a;\n\n    while(d<a) {\n        for(k=0, b=0; b<a ; b++) {\n            if(str[b]=='0' && str[b+d]=='1') {\n                str[b]=-1;\n                str[b+d]=-1;\n                k=1;\n                l-=2;\n            }\n            else if(str[b]=='1' && str[b+d]=='0') {\n                str[b]=-1;\n                str[b+d]=-1;\n                k=1;\n                l-=2;\n            }\n        }\n        d+=2;\n    }\n\n\n    printf(\"%I64d\\n\",l);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main (void) {\n    char str[200001];\n\n    long long int a, b, c=0, d=0, e;\n\n    scanf(\"%I64d\", &a);\n    gets(str);\n    gets(str);\n\n    for(b=0; b<a; b++) {\n        if(str[b]=='1') c++;\n        else d++;\n    }\n\n\n    if(c>d) printf(\"%I64d\\n\",c-d);\n    else printf(\"%I64d\\n\",d-c);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9963942307692307, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7434715929ae4edecd32a2deecb7a678", "bug_code_uid": "7aa373c5583c2f70dd2599a79a49e5e6", "src_uid": "a457e22fc8ff882c15ac57bca6960657", "apr_id": "4fd7f73c64ee50ab358d81cb1883c45c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[2000];\n    int l,i,count=0,j,k,m,n;\n    scanf(\"%s\",s);\n    l=strlen(s);\n    for(i=0; i<l; i++)\n    {\n        if(s[i]=='h')\n        {\n            count++;\n            break;\n        }\n    }\n    for(j=i+1; j<l; j++)\n    {\n        if(s[j]=='e')\n        {\n            count++;\n            break;\n        }\n    }\n    for(k=j+1; k<l; k++)\n    {\n        if(s[k]=='i')\n        {\n            count++;\n            break;\n        }\n    }\n    for(m=k+1; m<l; m++)\n    {\n        if(s[m]=='d')\n        {\n            count++;\n            break;\n        }\n    }\n    for(n=m+1; n<l; n++)\n    {\n        if(s[n]=='i')\n        {\n            count++;\n            break;\n        }\n    }\n    if(count==5){\n        printf(\"Yes\\n\");\n    }\n    else{\n        printf(\"No\\n\");\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[2000];\n    int l,i,count=0,j,k,m,n;\n    scanf(\"%s\",s);\n    l=strlen(s);\n    for(i=0; i<l; i++)\n    {\n        if(s[i]=='h')\n        {\n            count++;\n            break;\n        }\n    }\n    for(j=i+1; j<l; j++)\n    {\n        if(s[j]=='e')\n        {\n            count++;\n            break;\n        }\n    }\n    for(k=j+1; k<l; k++)\n    {\n        if(s[k]=='i')\n        {\n            count++;\n            break;\n        }\n    }\n    for(m=k+1; m<l; m++)\n    {\n        if(s[m]=='d')\n        {\n            count++;\n            break;\n        }\n    }\n    for(n=m+1; n<l; n++)\n    {\n        if(s[n]=='i')\n        {\n            count++;\n            break;\n        }\n    }\n    if(count==5){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.9876543209876543, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c0f54c693c68644d180deee61a1662db", "bug_code_uid": "288fa581fe2b6e23ae8a24e874022f93", "src_uid": "cf4d8a5caa37def0b7c0007743139e36", "apr_id": "d47cfcd6aea67a5618061ecfaecc8083", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,j,n;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=1;j<=n;j++)\n        {\n            printf(\"%d \",j*n);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,j,n;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=1;j<=n;j++)\n        {\n            printf(\"%d \",4*n-j*2);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6297229219143576, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "acfb98f0c23efa3a66af12c77276acea", "bug_code_uid": "2e48c774041651233204a74a96c29add", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "df3fd84e6c9c1c46797b2b40b073d50b", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tif((2*n-4)%n==0)\n\t\t  printf(\"YES\\n\");\n\t\telse\n\t\t  printf(\"NO\\n\");\n\t\t\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        if(n%4==0)\n          printf(\"YES\\n\");\n        else\n          printf(\"NO\\n\");\n    }\n}"}
{"similarity_score": 0.9934177215189873, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "896d62876d0251018ed490001fbd30dd", "bug_code_uid": "28211ed8e55032339711c82fbbdc310c", "src_uid": "097e35b5e9c96259c54887158ebff544", "apr_id": "248c00b905592570963ae77e7b6b1365", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint numbers[100005]={0};\n\nint track[100005][2]={0};\nint main()\n{\n    int n,i,a,count=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&a);\n        numbers[a]++;\n        if(numbers[a]==1){\n            track[a][0]=i;\n\n        }\n        if(numbers[a]==2){\n            track[a][1]=i-track[a][0];\n            track[a][0]=i;\n        }\n        if(numbers[a]>2){\n\n            if(i-track[a][0]==track[a][1]){\n                track[a][0]=i;\n            }\n            else{\n                track[a][1]=-1;\n            }\n        }\n\n    }\n     for(i=1;i<100000;i++){\n         if(((track[i][0]!=0)||(track[i][1]!=0))&&(track[a][1]!=-1))\n            count++;\n        }\n     printf(\"%d\\n\",count);\n\n\n    for(i=1;i<100000;i++){\n        if(((track[i][0]!=0)||(track[i][1]!=0))&&(track[a][1]!=-1))\n        if(track[i][1]==0){\n            printf(\"%d 0\\n\",i);\n        }\n        else\n            printf(\"%d %d\\n\",i,track[i][1]);\n\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint numbers[100005]={0};\n\nint track[100005][2]={0};\nint main()\n{\n    int n,i,a,count=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&a);\n        numbers[a]++;\n        if(numbers[a]==1){\n            track[a][0]=i;\n\n        }\n        if(numbers[a]==2){\n            track[a][1]=i-track[a][0];\n            track[a][0]=i;\n        }\n        if(numbers[a]>2){\n\n            if(i-track[a][0]==track[a][1]){\n                track[a][0]=i;\n            }\n            else{\n                track[a][1]=-1;\n            }\n        }\n\n    }\n     for(i=1;i<=100000;i++){\n         if(((track[i][0]!=0)||(track[i][1]!=0))&&(track[i][1]!=-1))\n            count++;\n        }\n     printf(\"%d\\n\",count);\n     \n\n\n    for(i=1;i<=100000;i++){\n        if(((track[i][0]!=0)||(track[i][1]!=0))&&(track[i][1]!=-1))\n        if(track[i][1]==0){\n            printf(\"%d 0\\n\",i);\n        }\n        else\n            printf(\"%d %d\\n\",i,track[i][1]);\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9984886649874055, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d02cdc8dfbc20b48e8f941964d691b82", "bug_code_uid": "54cffc501c9ab4bc4a594ac54d9a68ed", "src_uid": "b9f0c38c6066bdafa2e4c6daf7f46816", "apr_id": "6eb4d97c8da4874196665e73025887b4", "difficulty": 900, "tags": ["constructive algorithms", "sortings", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{\n    int x,i,j,k,e=0,s,n;\n    scanf(\"%d\",&x);\n\n    getchar();\n\n    char arr[10000];\n\n    while(x--)\n    {\n        e=0,s=0;\n        gets(arr);\n        k=strlen(arr);\n\n        for(i=0,j=k-1;i<k;i++,j--)\n        {\n            if(arr[i]!=arr[j])\n            {\n                e=1;\n                break;\n            }\n\n            if(arr[i]!=arr[i+1] && i<k-1)\n                s=1;\n        }\n\n        if(e==0 && s==0)\n            printf(\"-1\\n\");\n\n        else if(e==0 && s==1)\n            {\n                for(i=0;i<k-1;i++)\n                {\n                    for(j=0;j<k;j++)\n                    {\n                        if(arr[i]>arr[j])\n                        {\n                            n=arr[i];\n                            arr[i]=arr[j];\n                            arr[j]=n;\n                        }\n                    }\n                }\n\n                puts(arr);\n\n            }\n\n        else\n            puts(arr);\n\n\n\n    }\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{\n    int x,i,j,k,e=0,s,n;\n    scanf(\"%d\",&x);\n\n    getchar();\n\n    char arr[10000];\n\n    while(x--)\n    {\n        e=0,s=0;\n        gets(arr);\n        k=strlen(arr);\n\n        for(i=0,j=k-1;i<k;i++,j--)\n        {\n            if(arr[i]!=arr[j])\n            {\n                e=1;\n                break;\n            }\n\n            if(arr[i]!=arr[i+1] && i<k-1)\n                s=1;\n        }\n\n        if(e==0 && s==0)\n            printf(\"-1\\n\");\n\n        else if(e==0 && s==1)\n            {\n                for(i=0;i<k;i++)\n                {\n                    for(j=0;j<k;j++)\n                    {\n                        if(arr[i]>arr[j])\n                        {\n                            n=arr[i];\n                            arr[i]=arr[j];\n                            arr[j]=n;\n                        }\n                    }\n                }\n\n                puts(arr);\n\n            }\n\n        else\n            puts(arr);\n\n\n\n    }\n}\n"}
{"similarity_score": 0.4826325411334552, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "f64367183b95f31f75f01e2c8d9852be", "bug_code_uid": "aa5b038b1744e24b765e64a2bc234d80", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "98ae1abb5eafcc3e53dcfd879ae899d9", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint cmp(void * a,void * b){\n    return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n    int n,m;\n    int *temp1,*temp2;\n    scanf(\"%d\",&n);\n    int * arr = malloc(n*sizeof(int));\n    int * pre = malloc(n*sizeof(int));\n    int * cnt = malloc(n*sizeof(int));\n    memset(cnt,0,n*sizeof(int));\n    int * sums = malloc(n*sizeof(int));\n    int i,j;\n    for(i=0;i<n;i++) scanf(\"%d\",&arr[i]);\n    pre[0] = arr[0];\n    for(i=1;i<n;i++) pre[i] = pre[i-1] + arr[i];\n    int sum = pre[n-1];\n    if(sum%3 != 0) {\n        printf(\"%d\\n\",0);\n        return 0;\n    }\n    for(i=0;i<n-1;i++) if ((pre[n-1] - pre[i]   == sum/3)) cnt[i+1] = 1;\n\n    sums[n-1] = cnt[n-1];\n    for(i=n-2;i>=0;i--) sums[i] = sums[i+1] + cnt[i];\n    //for(i=0;i<n;i++) printf(\"%d\\n\",sums[i]);\n    int ways = 0;\n    m = sum/3;\n    for(i=0;i<n-2;i++){\n        if (pre[i]==m) ways += sums[i+2];\n    }\n    printf(\"%d\\n\",ways);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint main()\n{\n    int n;\n    long long m,u;\n    scanf(\"%d\",&n);\n    int * arr = malloc(n*sizeof(int));\n    long long int * pre = malloc(n*sizeof(long long));\n    int i,j;\n    for(i=0;i<n;i++) scanf(\"%d\",&arr[i]);\n    pre[0] = arr[0];\n    for(i=1;i<n;i++) pre[i] = pre[i-1] + arr[i];\n    long long sum = pre[n-1];\n    if(sum%3 != 0) {\n        printf(\"0\\n\");\n        return 0;\n    }\n    //for(i=0;i<n;i++) printf(\"%d\\n\",sums[i]);\n   long long ways = 0;\n   long long cnt = 0;\n    u = sum/3;\n    m = 2*sum / 3;\n    for(i=0;i<n-1;i++){\n        if (pre[i] ==m) ways += cnt;\n        if (pre[i]==u) cnt++;\n    }\n    printf(\"%I64d\\n\",ways);\n    return 0;\n}\n"}
{"similarity_score": 0.22795698924731184, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "342575fe51d11c2163c61e9575caa939", "bug_code_uid": "ff720a330dd0c4d92d4d1eaa4d661434", "src_uid": "6b4242ae9a52d36548dda79d93fe0aef", "apr_id": "5e646980049be794a30521a9f814e57b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define maxn 200005\nchar str[maxn];\nint cnt = 0;\nvoid funp(char *s,int p,int n)\n{\n    int flag = 0;\n    int i = 0;\n    if(s[p] =='>')\n    {\n        for(i = p + 1; i < n; i++)\n        {\n            if(s[i] =='<')\n                flag = 1;\n        }\n    }\n    else\n    {\n        for(i = p -1; i >=0; i--)\n        {\n            if(s[i] =='>')\n                flag = 1;\n        }\n    }\n\n    if(flag == 0)\n        cnt++;\n\n}\nint main()\n{\nint n;\nint i,j,m;\nscanf(\"%d\",&n);\nscanf(\"%s\",str);\nfor(i = 0; i < n; i++)\n{\n    funp(str,i,n);\n}\nprintf(\"%d\\n\",cnt);\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define maxn 200005\nchar str[maxn];\nint cnt = 0;\nint main()\n{\nint n;\nint i,l = 0,r = 0;\nscanf(\"%d\",&n);\nscanf(\"%s\",str);\nfor(i = 0; i < n; i++)\n    if(str[i] =='<')\n    l++;\n    else\n        break;\nfor(i = n-1; i >= 0; i--)\n    if(str[i] =='>')\n    r++;\n    else\n        break;\nprintf(\"%d\\n\",l+r);\n\n}\n"}
{"similarity_score": 0.9937777777777778, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "029d23004b6902a2ea31e9ace868cde2", "bug_code_uid": "23b622b89878db21e87f0d8d5497652b", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "0517ddcaee927db7a8865efc5c50e082", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint canBuy[100000];\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) {\n        int tmp;\n        scanf(\"%d\", &tmp);\n        canBuy[tmp]++;\n    }\n    int sum = 0;\n    for(int i = 0; i < 100000; i++) {\n        sum += canBuy[i];\n        canBuy[i] = sum;\n    }\n    int q;\n    scanf(\"%d\", &q);\n    for(int i = 0; i < q; i++) {\n        int coin;\n        scanf(\"%d\", &coin);\n        if(coin >= 100000)\n            printf(\"%d\\n\", canBuy[100000-1]);\n        else\n            printf(\"%d\\n\", canBuy[coin]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint canBuy[100001];\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) {\n        int tmp;\n        scanf(\"%d\", &tmp);\n        canBuy[tmp]++;\n    }\n    int sum = 0;\n    for(int i = 0; i < 100001; i++) {\n        sum += canBuy[i];\n        canBuy[i] = sum;\n    }\n    int q;\n    scanf(\"%d\", &q);\n    for(int i = 0; i < q; i++) {\n        int coin;\n        scanf(\"%d\", &coin);\n        if(coin > 100000)\n            printf(\"%d\\n\", canBuy[100000]);\n        else\n            printf(\"%d\\n\", canBuy[coin]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9315476190476191, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "90cd69a88c8500db71b423afaedc3885", "bug_code_uid": "0b63d4a51c21ac0b31b05c1431af5fdd", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "e7de7751e290f2812025999142eded04", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    int max=0,c=1;\n    for(i=0;i<n;i++){\n        if(a[i] > a[i+1]){\n            if(c>max)\n            max=c;\n            c=1;\n        }else{\n            c++;\n        }\n    }\n    if(c>max)\n    max=c;\n    printf(\"%d\",max);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    int max=0,c=1;\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++){\n        if(a[i] > a[i+1]){\n            if(c>max)\n            max=c;\n            c=1;\n        }else{\n            c++;\n        }\n    }\n    if(c>max)\n    max=c;\n    printf(\"%d\",max);\n    return 0;\n}"}
{"similarity_score": 0.9042654028436019, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "fdee6435632aa706c55b6b17edbd738b", "bug_code_uid": "f7bc77d531f8facdf7cbcc05835dd026", "src_uid": "84bd49becca69e126606d5a2f764dd91", "apr_id": "4912e3b5f0a802ade1e5070ca7c40468", "difficulty": 1400, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n, a[105], b[105], i, count,j;\n    scanf(\"%d\", &n);\n    for (i=0; i<n; i++){\n        scanf(\"%d %d\", &a[i], &b[i]);\n    }\n        count = 0;\n        for(i=0; i<n; i++){\n            for(j=0; j<n; j++){\n                if(a[i]== b[j])\n                {\n                    if(j == i){\n                        continue;\n                    }\n                    else{\n                        count++ ;\n                    }\n                }\n            }\n\n    }\n    printf(\"%d\\n\", n -count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n, a[105], b[105], i, count,j;\n    scanf(\"%d\", &n);\n    for (i=0; i<n; i++){\n        scanf(\"%d %d\", &a[i], &b[i]);\n    }\n        count = 0;\n        for(i=0; i<n; i++){\n            for(j=0; j<n; j++){\n                if(a[i]== b[j])\n                {\n                    if(j != i){\n                        count++;\n                        break;\n                    }\n                    \n                }\n            }\n\n    }\n    printf(\"%d\\n\", n -count);\n    return 0;\n}\n"}
{"similarity_score": 0.7915194346289752, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c3cccf91d04001b9de4e51302d91f05f", "bug_code_uid": "8c496fbe98851e47cfa77a1aeebb4cf0", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "6a8b52ac30cbd0c5b3aadd4fc5ba7d76", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tunsigned int t;\n\tscanf(\"%u\",&t);\n\twhile(t--)\n\t{\n\t\tint n,a,b;\n\t\tscanf(\"%d%d%d\",&n,&a,&b);\n\t\tchar s[n],c='a';\n\t\tint j=0;\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ts[i]=c;\n\t\t\tj++;c++;\n\t\t\t\n\t\t\tif(j==b)\n\t\t\t\tj=0;c='a';\n\t\t}\n\t\tputs(s);\n\t}\n\t\nreturn 0;\t\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tunsigned int t;\n\tscanf(\"%u\",&t);\n\twhile(t--)\n\t{\n\t\tint n,a,b;\n\t\tscanf(\"%d%d%d\",&n,&a,&b);\n\t\tchar s[n],c='a';\n\t\tint j=0;\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ts[i]=c;\n\t\t\tj++;c++;\n\t\t\tif(j==b)\n\t\t\t{\n\t\t\t   j=0;c='a';\n\t\t\t}\n\t\t}\n\t\ts[n]='\\0';\n\t\tprintf(\"%s\\n\",s);\n\t}\n\t\nreturn 0;\t\n}"}
{"similarity_score": 0.6477927063339731, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0dadfa7fbe545bebf07f401d3636beed", "bug_code_uid": "97dd522f46d68ee1693f629ab40b50ca", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "8630a6c5381406aec2dae35a168f5b48", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint tc;\r\n\tscanf(\"%d\", &tc);\r\n\t\r\n\t\r\n//\tprintf(\"%d\\n\", sum);\r\n\t\r\n\tfor(int i = 0; i < tc; i++){\r\n\t\tchar check[] = {'T', 'i', 'm', 'u', 'r'};\r\n\t\tint sum = check[0] + check[1] + check[2] + check[3] +check[4];\r\n\t\t\r\n\t\tint checker = 0;\r\n\t\tint length;\r\n\t\tscanf(\"%d\", &length);\r\n\t\tchar input[length];\r\n\t\t\r\n\t\tscanf(\"%s\", &input);\r\n\t\tif(length != 5){\r\n\t\t\tputs(\"NO\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tint suminput = input[0] + input[1] + input[2] + input[3] +input[4];\r\n\t\t\tif(sum != suminput){\r\n\t\t\t\tputs(\"NO\");\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor(int j = 0; j < 5; j++){\r\n\t\t\t\tfor(int k = 0; k < 5; k++){\r\n\t\t\t\t\tif(input[j] == check[k]){\r\n\t\t\t\t\t\tcheck[k] = 'z';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n//\t\t\t\t\tif(checker != j + 1){\r\n//\t\t\t\t\t\tputs(\"NO\");\r\n//\t\t\t\t\t\tbreak;\r\n//\t\t\t\t\t}\r\n\t\t\t\t}\r\n//\t\t\t\tif(checker == 5){\r\n//\t\t\t\t\tputs(\"YES\");\r\n//\t\t\t\t}\t\r\n\t\t\t\tfor(int m = 0; m < 5; m++){\r\n\t\t\t\t\tif(check[m] = 'z'){\r\n\t\t\t\t\t\tchecker++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(checker == 5){\r\n\t\t\t\t\tputs(\"YES\");\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tputs(\"NO\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n\r\n\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint tc;\r\n\tscanf(\"%d\", &tc);\r\n\t\r\n\t\r\n//\tprintf(\"%d\\n\", sum);\r\n\t\r\n\tfor(int i = 0; i < tc; i++){\r\n\t\tchar check[] = {'T', 'i', 'm', 'u', 'r'};\r\n\t\tint sum = check[0] + check[1] + check[2] + check[3] +check[4];\r\n\t\t\r\n\t\tint a = 0, b = 0, c = 0, d = 0, e = 0;\r\n\t\t\r\n\t\tint checker = 0;\r\n\t\tint length;\r\n\t\tscanf(\"%d\", &length);\r\n\t\tchar input[length];\r\n\t\t\r\n\t\tscanf(\"%s\", &input);\r\n\t\tif(length != 5){\r\n\t\t\tputs(\"NO\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tint suminput = input[0] + input[1] + input[2] + input[3] +input[4];\r\n\t\t\tif(sum != suminput){\r\n\t\t\t\tputs(\"NO\");\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor(int j = 0; j < 5; j++){\r\n\t\t\t\t\tif(input[j] == 'T'){\r\n\t\t\t\t\t\ta++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(input[j] == 'i'){\r\n\t\t\t\t\t\tb++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(input[j] == 'm'){\r\n\t\t\t\t\t\tc++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(input[j] == 'u'){\r\n\t\t\t\t\t\td++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(input[j] == 'r'){\r\n\t\t\t\t\t\te++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(a > 0 && b > 0 && c > 0 && d > 0 && e > 0){\r\n\t\t\t\t\tputs(\"YES\");\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tputs(\"NO\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\t\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n\r\n\r\n"}
{"similarity_score": 0.4655326768128917, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "db7facb27117eac74618c3de28130379", "bug_code_uid": "6cd0ab4a78c1c41946e121446d74ca74", "src_uid": "c047040426e736e9085395ed9666135f", "apr_id": "3ef0b70507ddb20eeae0033e8e1a2687", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint a[10000008]={0};\nint p[10000008];\nint main()\n{\n    int i,j;\n    int s=10000000;\n    int sq;\n    sq=sqrt(s);\n    for(i=2;i<=s;i++)\n    {\n\tfor(j=i;j<=(s/i);j++)\n\t{\n\t    a[i*j]=1;\n\t}\n    }\n    int k=0;\n    for(i=2;i<=s;i++)\n    {\n\tif(a[i]==0)\n\t{\n\t    p[k++]=i;\n\t}\n    }\n    int n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n\tprintf(\"%d \",p[i]);\n    }\n    printf(\"\\n\");\n    //printf(\"%d\\n\",k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint a[10000008]={0};\nint p[10000008];\nint q[10000008];\nint main()\n{\n    int i,j;\n    int s=2000000;\n    int sq;\n    sq=sqrt(s);\n    for(i=2;i<=sq;i++)\n    {\n\tfor(j=i;j<=(sq/i);j++)\n\t{\n\t    a[i*j]=1;\n\t}\n    }\n    int k=0;\n    for(i=2;i<=sq;i++)\n    {\n\tif(a[i]==0)\n\t{\n\t    p[k++]=i;\n\t}\n    }\n    int l=0;\n    for(j=2;j<=1900000;j++)\n    {\n\tint flag=0;\n\tfor(i=0;i<k;i++)\n\t{\n\t    if(j%p[i]==0)\n\t    {\n\t\tflag=1;\n\t\tbreak;\n\t    }\n\t}\n\tif(flag==0)\n\t{\n\t    q[l++]=j;\n\t}\n    }\n   // printf(\"%d\\n\",l);\n    int n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n\tprintf(\"%d \",q[i]);\n    }\n    printf(\"\\n\");\n    //printf(\"%d\\n\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.4614485981308411, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "c6dd29972b87ba74f11385bce13c1858", "bug_code_uid": "6f168bac3584da0afd0b67b18b7d526d", "src_uid": "bcd9439fbf6aedf6882612d5f7d6220f", "apr_id": "1738636adcfe2d457f45e1235c7a747c", "difficulty": 1000, "tags": ["constructive algorithms", "binary search", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\ndouble tests;\nint i = 0, array[10000], help_array[10000], ordered_array[10000], change_array[10000], highest_value = 0, sales = 0;\n\nint main(){\n    scanf(\"%lf\", &tests);\n    sales = ceil((tests-2)/2);\n\n    for(i = 0;i<tests;i++){\n        scanf(\"%d\", &array[i]);\n        if(array[i] > highest_value)\n            highest_value = array[i];        \n    }\n\n    for(i = 0; i < tests; i++){\n        help_array[array[i]]++;\n    }\n\n    for(i = 0; i <= highest_value; i++){\n        help_array[i] += help_array[i-1];\n    }\n\n    for(i = 0; i <= tests; i++){\n        ordered_array[help_array[array[i]]] = array[i];\n        help_array[array[i]]--;\n    }\n\n    for(i = 1; i < tests - 1; i++){\n        change_array[i] = ordered_array[i];\n        ordered_array[i] = ordered_array[i + 1];\n        ordered_array[i + 1] = change_array[i];\n        i++;\n    }\n\n    printf(\"%d\\n\", sales);\n    for(i = 1; i <= tests; i++){\n        printf(\"%d \", ordered_array[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n\ndouble tests;\nint sales, i, array[100000], change_array[100000];\n\nint compare(const void *pa,const void *pb){\n    const int *p1 = pa;\n    const int *p2 = pb;\n    return *p2 - *p1;\n}\n\nint main(){\n    scanf(\"%lf\", &tests);\n    sales = ceil((tests-2)/2);\n    for(i = 0;i<tests;i++){\n        scanf(\"%d\", &array[i]);\n    }\n    \n    qsort(array, tests, sizeof(long int), compare);\n\n    for(i = 1; i < tests - 1; i++){\n        change_array[i] = array[i];\n        array[i] = array[i + 1];\n        array[i + 1] = change_array[i];\n        i++;\n    }\n\n    printf(\"%d\\n\", sales);\n    for(i = 0; i < tests; i++){\n        printf(\"%d \", array[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8218181818181818, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "492c62a2507aa8b14e181a773be0a855", "bug_code_uid": "9296abe5afab0a122a76a65c090ef7b9", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "356a206692b7c47b19b52227dd1c891a", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n    int n, arr[100000];\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) arr[i] = 0;\n    int high = n;\n    int tmp;\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &tmp);\n        arr[tmp] = 1;\n        if (tmp != high) {\n            printf(\"\\n\");\n        } else {\n            while (arr[high] == 1) {\n                printf(\"%d \", arr[j]);\n                high--;\n            }\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main() {\n    int n, arr[100000];\n    scanf(\"%d\", &n);\n    for (int i = 0; i <= n; i++) arr[i] = 0;\n    int high = n;\n    int tmp;\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &tmp);\n        arr[tmp] = 1;\n        while (arr[high] == 1) {\n            printf(\"%d \", high);\n            high--;\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.6010016694490818, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a4bd35d20bc80e4661edd86f139ef3f0", "bug_code_uid": "c65446742b4244f32b8b81e00b49eb7c", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "2b5a1b62c4a2366b9ce42cc4464d0187", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tlong long int n,a,b,x,y;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%lld %lld \",&x,&y);\n\t\tscanf(\" %lld %lld\",&a,&b);\n\t\tif(x>=y){\n\t\t\tif(2*a<=b)\n\t\t\tprintf(\"%lld\\n\",(x+y)*a);\n\t\t\telse if(2*a>b)\n\t\t\tprintf(\"%lld\\n\",y*b+(x-y)*a);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%lld\\n\",2*a+b);\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tlong long int n,a,b,x,y;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%lld %lld \",&x,&y);\n\t\tscanf(\" %lld %lld\",&a,&b);\n\t\tif(b>2*a){\n\t\t\tn=(x+y)*a;\n\t\t}\n\t\telse{\n\t\t\tif(x<y){\n\t\t\t\tn=x*b+(y-x)*a;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tn=y*b+(x-y)*a;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",n);\n\n\t}\n\t}"}
{"similarity_score": 0.9977220956719818, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fe90643aeab4fab10a830bbb685a4cc8", "bug_code_uid": "8861c11b3c6f7adc132881f9e1cc3472", "src_uid": "ed75bd272f6d3050426548435423ca92", "apr_id": "9aa3fa096154a7ffb77a16bc5ce9ced2", "difficulty": 1500, "tags": ["combinatorics", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nchar a[200010],b[200010];\nint main()\n{\n\tscanf(\"%s\",a);\n\tscanf(\"%s\",b);\n\tint i,cur=0;\n\tlong long count=0,num;\n\tnum=strlen(b)-strlen(a)+1;\n\tfor(i=0;i<num;i++)\n\t{\n\t\tif(b[i]=='0')\n\t\tcur++;\n\t}\n\tfor(i=0;a[i]!='\\0';i++)\n\t{\n\t\tif(a[i]=='0')\n\t\tcount+=abs(num-cur);\n\t\telse\n\t\tcount+=cur;\n\t\tif(b[i+num]=='0')\n\t\tcur++;\n\t\tif(b[i]=='0')\n\t\tif(cur>0)\n\t\tcur--;\n\t}\n\tprintf(\"%l64d\",count);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nchar a[200010],b[200010];\nint main()\n{\n\tscanf(\"%s\",a);\n\tscanf(\"%s\",b);\n\tint i,cur=0;\n\tlong long count=0,num;\n\tnum=strlen(b)-strlen(a)+1;\n\tfor(i=0;i<num;i++)\n\t{\n\t\tif(b[i]=='0')\n\t\tcur++;\n\t}\n\tfor(i=0;a[i]!='\\0';i++)\n\t{\n\t\tif(a[i]=='0')\n\t\tcount+=abs(num-cur);\n\t\telse\n\t\tcount+=cur;\n\t\tif(b[i+num]=='0')\n\t\tcur++;\n\t\tif(b[i]=='0')\n\t\tif(cur>0)\n\t\tcur--;\n\t}\n\tprintf(\"%I64d\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9933049300060864, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6d09329be275db717d0d85cd9a510fbc", "bug_code_uid": "de697e6dd5264e118cc19f3134c62f17", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "4453ba89a1301d6dee628471c1e3793e", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int a,int b)\n{\n    if(a<b)return a;\n    else return b;\n}\nint max(int a,int b)\n{\n    if(a>b)return a;\n    else return b;\n}\nint main()\n{\n    int h1,a1,c1;\n    int h2,a2;\n    scanf(\"%d %d %d\",&h1,&a1,&c1);\n    scanf(\"%d %d\",&h2,&a2);\n    int n=0;\n    int strike[4000];\n    while(h2>0)\n    {\n        while(h1>0&&h2>0)\n        {\n            h2-=a1;\n            \n            strike[n]=1;\n            h1-=a2;\n           n++; \n        }\n        if(h2<=0)break;\n                \n        if(h1<=0)\n        {\n        h1+=c1;\n        h2+=a1;\n        strike[n-1]=0;\n        \n        }\n\n    }\n    printf(\"%d\\n\",n);\n    for(int i=0;i<n;i++)\n    {\n        if(strike[i]==1)\n        {\n            printf(\"STRIKE\\n\");\n        }\n        else\n        {\n            printf(\"HEAL\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint min(int a,int b)\n{\n    if(a<b)return a;\n    else return b;\n}\nint max(int a,int b)\n{\n    if(a>b)return a;\n    else return b;\n}\nint main()\n{\n    int h1,a1,c1;\n    int h2,a2;\n    scanf(\"%d %d %d\",&h1,&a1,&c1);\n    scanf(\"%d %d\",&h2,&a2);\n    int n=0;\n    int strike[1000009];\n    while(h2>0)\n    {\n        while(h1>0&&h2>0)\n        {\n            h2-=a1;\n            \n            strike[n]=1;\n            h1-=a2;\n           n++; \n        }\n        if(h2<=0)break;\n                \n        if(h1<=0)\n        {\n        h1+=c1;\n        h2+=a1;\n        strike[n-1]=0;\n        \n        }\n\n    }\n    printf(\"%d\\n\",n);\n    for(int i=0;i<n;i++)\n    {\n        if(strike[i]==1)\n        {\n            printf(\"STRIKE\\n\");\n        }\n        else\n        {\n            printf(\"HEAL\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9802431610942249, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "bbc840547cc8159459a07a865722b807", "bug_code_uid": "5b32cbee0581cf132111939daead2b41", "src_uid": "d629d09782a7af0acc359173ac4b4f0a", "apr_id": "71a722499ad9ccd1c5b8cbe3554fcfd6", "difficulty": 1200, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n,m,i=0;\n\tchar A[100002],B[100002];\n\tscanf (\"%d %d\",&n,&m);\n\tscanf (\"%s\",A);\n\tscanf (\"%s\",B);\n\tif (n==1&&A[0]=='*')\n\t{\n\t\tprintf (\"YES\");\n\t\treturn 0;\n\t}\n\tif (strchr(A,'*')==0) \n\t{\n\t\tif (strcmp(A,B)==0)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (i=0  ; A[i]!='*' ; i++)\n\t{\t\n\t\tif (A[i]!=B[i])\n\t\t{\n\t\t\tprintf (\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\ti=strlen(B)-i;\n\tfor (i  ; A[n-1]!='*' ; i--)\n\t{\t\n\t\tif (A[n-1]!=B[m-1])\n\t\t{\n\t\t\tprintf (\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\tn--;\n\t\tm--;\n\t}\n\tif(i<0)\n\t{\n\t\tprintf (\"NO\");\n\t\treturn 0;\n\t}\n\t else\n\t{\n\t \tprintf(\"YES\");\n\t \treturn 0;\n\t}\t\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint n,m,i=0;\n\tchar A[200001],B[200001];\n\tscanf (\"%d %d\",&n,&m);\n\tscanf (\"%s\",A);\n\tscanf (\"%s\",B);\n\tif (n==1&&A[0]=='*')\n\t{\n\t\tprintf (\"YES\");\n\t\treturn 0;\n\t}\n\tif (strchr(A,'*')==0) \n\t{\n\t\tif (strcmp(A,B)==0)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (i=0  ; A[i]!='*' ; i++)\n\t{\t\n\t\tif (A[i]!=B[i])\n\t\t{\n\t\t\tprintf (\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\ti=strlen(B)-i;\n\tfor (i  ; A[n-1]!='*' ; i--)\n\t{\t\n\t\tif (A[n-1]!=B[m-1])\n\t\t{\n\t\t\tprintf (\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\tn--;\n\t\tm--;\n\t}\n\tif(i<0)\n\t{\n\t\tprintf (\"NO\");\n\t\treturn 0;\n\t}\n\t else\n\t{\n\t \tprintf(\"YES\");\n\t \treturn 0;\n\t}\t\n}\n"}
{"similarity_score": 0.5289128758673862, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "139ba1a800ccead326ca44795cd39a97", "bug_code_uid": "543a1a368845f883ab9e91af1298e2fe", "src_uid": "23c8f5922c7a1cdb82d229eb9938f3ee", "apr_id": "2e39d4dccac4ce3bf5f313ebcbbced96", "difficulty": 1800, "tags": ["constructive algorithms", "ternary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint fx[1000001];\nint gx[1000001];\n\nint main(){\n    int deg_f,deg_g;\n    int p;\n    scanf(\"%d%d\",&deg_f,&deg_g);\n    scanf(\"%d\",&p);\n    for(int i=0;i<deg_f;i++){\n        scanf(\"%d\",&fx[i]);\n    }\n    for(int i=0;i<deg_g;i++){\n        scanf(\"%d\",&gx[i]);\n    }\n\n    if((fx[0]%p)*(gx[0]%p)==0){\n        if(fx[0]%p==0){\n            for(int i=1;i<deg_f;i++){\n                if(fx[i]%p!=0){\n                    printf(\"%d\\n\",i);\n                    break;\n                }\n            }\n        }\n        else{\n            for(int i=0;i<deg_g;i++){\n                if(gx[i]%p!=0){\n                    printf(\"%d\\n\",i);\n                    break;\n                }\n            }\n        }\n    }\n    else{\n        printf(\"0\\n\");\n        return 0;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint fx[1000001];\nint gx[1000001];\n\nint main(){\n    int deg_f,deg_g;\n    int ptr_f,ptr_g;\n    int p;\n    scanf(\"%d%d\",&deg_f,&deg_g);\n    scanf(\"%d\",&p);\n    for(int i=0;i<deg_f;i++){\n        scanf(\"%d\",&fx[i]);\n    }\n    for(int i=0;i<deg_g;i++){\n        scanf(\"%d\",&gx[i]);\n    }\n    ptr_f=0;\n    while(fx[ptr_f]%p==0){\n        ptr_f++;\n    }\n    ptr_g=0;\n    while(gx[ptr_g]%p==0){\n        ptr_g++;\n    }\n    printf(\"%d\",ptr_f+ptr_g);\n    return 0;\n}\n"}
{"similarity_score": 0.9987577639751553, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c07e60f242144cc1b352f103c852f581", "bug_code_uid": "a1cc957b0b45f274cfe10e30b06e3494", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "102bab9a88ca57ea9af998bff507fa0e", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int a[100000][2],i,j,n,c=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            if((a[i][0]<a[i+1][0])&&(a[i][1]>a[i+1][1])){\n               c++;\n               break;\n               }\n            else if((a[i][0]>a[i+1][0])&&(a[i][1]<a[i+1][1])){\n                c++;\n               break;\n            }\n            else if((a[i][0]>a[i+2][0])&&(a[i][1]<a[i+2][1])){\n                c++;\n               break;\n            }\n            else if((a[i][0]<a[i+2][0])&&(a[i][1]>a[i+2][1])){\n                c++;\n               break;\n            }\n        }\n    }\n    if(c>0) printf(\"Happy Alex\");\n    else printf(\"Poor Alex\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int a[100002][2],i,j,n,c=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            if((a[i][0]<a[i+1][0])&&(a[i][1]>a[i+1][1])){\n               c++;\n               break;\n               }\n            else if((a[i][0]>a[i+1][0])&&(a[i][1]<a[i+1][1])){\n                c++;\n               break;\n            }\n            else if((a[i][0]>a[i+2][0])&&(a[i][1]<a[i+2][1])){\n                c++;\n               break;\n            }\n            else if((a[i][0]<a[i+2][0])&&(a[i][1]>a[i+2][1])){\n                c++;\n               break;\n            }\n        }\n    }\n    if(c>0) printf(\"Happy Alex\");\n    else printf(\"Poor Alex\");\n    return 0;\n}"}
{"similarity_score": 0.49003769520732365, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "08ac8b96f5dc6bc3c3466a3a551334d0", "bug_code_uid": "0442ec31cfe2127de7007fcb98440963", "src_uid": "d6790c9b4b2e488768fb4e746ee7ebe0", "apr_id": "2f81271cb3da35d379541299f8577fab", "difficulty": 1000, "tags": ["bitmasks", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdbool.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\n\nint main(){\n\n    int tc;\n    scanf(\"%d\",&tc);\n    \n    for(int t = 1; t <= tc;t++){\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        switch(a){\n            case 1:\n                if(b == 1){\n                    printf(\"3\\n\");\n                }else{\n                    printf(\"2\\n\");\n                }\n                \n                break;\n            case 2:\n                if(b == 1){\n                    printf(\"2\\n\");\n                }else if(b == 3){\n                    printf(\"4\\n\");\n                }else{\n                    printf(\"3\\n\");\n                }\n\n                break;\n            case 3:\n                if(b==3){\n                    printf(\"3\\n\");\n                }else if(b == 0){\n                    printf(\"5\\n\");\n                }else{\n                    printf(\"4\\n\");\n                }\n\n                break;\n            default:\n                break;\n        }\n\n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdbool.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\n\nint main(){\n\n    int tc;\n    scanf(\"%d\",&tc);\n    \n    for(int t = 1; t <= tc;t++){\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        \n        int all;\n        switch(a%4){\n            case 0:\n                all = 0;\n                break;\n            case 1:\n                all = a - 1;\n                break;\n            case 2:\n                all = 1;\n                break;\n            case 3:\n                all = a;\n                break;\n            default:\n                break;\n        }\n        \n        int no = all ^ a;\n        if(b == all){\n            printf(\"%d\\n\",a);\n        }else if(b == no){\n            printf(\"%d\\n\",a+2);\n        }else{\n            printf(\"%d\\n\",a+1);\n        }\n\n        \n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9010526315789473, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "83bcc74fdf3308cb96d6ed47957c4728", "bug_code_uid": "94e186f64c2042a6fa15b15780f31705", "src_uid": "fe2131c9228a2ec4365fdc3d0faa413a", "apr_id": "28b9e238f24069533a6ad5d0458044d8", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nint tst;\r\nscanf(\"%d\",&tst);\r\nwhile(tst--)\r\n{\r\nint nu,t,t1;\r\nint x[nu];\r\nfor(int i=0;i<nu;i++)\r\n{\r\nscanf(\"%d\",&x[i]);\r\nif(x[i]%2==0)\r\n{\r\nt=t+1;\r\n}\r\n}\r\nint k=nu-1;\r\nfor(int i=0;i<nu;i++)\r\n{\r\nif(x[i]%2==0)\r\n{\r\n for(k=nu-1;k>=i;k--)\r\n  {\r\n        if(x[k]%2!=0)\r\n     {\r\n              t1=x[k];\r\n              x[k]=x[i];\r\n              x[i]=t1;\r\n        }\r\n   }\r\n}\r\n}\r\nfor(int i=0;i<nu;i++)\r\n{\r\nprintf(\"%d \",x[i]);\r\n}\r\nprintf(\"\\n\");\r\n}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nint tst;\r\nscanf(\"%d\",&tst);\r\nwhile(tst--)\r\n{\r\nint nu,t,t1;\r\nscanf(\"%d\",&nu);\r\nint x[nu];\r\nfor(int i=0;i<nu;i++)\r\n{\r\nscanf(\"%d\",&x[i]);\r\nif(x[i]%2==0)\r\n{\r\nt=t+1;\r\n}\r\n}\r\nint k=nu-1;\r\nfor(int i=0;i<nu;i++)\r\n{\r\nif(x[i]%2==0)\r\n{\r\n for(k=nu-1;k>=i;k--)\r\n  {\r\n        if(x[k]%2!=0)\r\n     {\r\n              t1=x[k];\r\n              x[k]=x[i];\r\n              x[i]=t1;\r\n        }\r\n   }\r\n}\r\n}\r\nfor(int i=0;i<nu;i++)\r\n{\r\nprintf(\"%d \",x[i]);\r\n}\r\nprintf(\"\\n\");\r\n}\r\n}"}
{"similarity_score": 0.9333333333333333, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c50cd7e60cded6cf5b1fdbc3318d1502", "bug_code_uid": "2d790215b6187bb0c214b4877175c637", "src_uid": "501b60c4dc465b8a60fd567b208ea1e3", "apr_id": "92c57d48e427f3b8c3af704a7d6054ca", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stddef.h>\n#include <stdio.h>\n#include <string.h>\n\n#define BUFF (10000)\n\nint main()\n{\n    char str[BUFF] = {};\n    //char additional_memory[BUFF] = {};\n    int l, r, k;\n    scanf(\"%s\", str);\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; ++i)\n    {\n        scanf(\"%d %d %d\", &l, &r, &k);\n        --r; --l;\n        char additional_memory[r-l+1];\n//        printf(\"(l,r,k) = (%d, %d, %d)\\n\", l, r , k);\n//        printf(\"%s\\t%s\\n\", str, additional_memory);\n        memcpy(additional_memory, str + l, (r-l+1)*sizeof(char));\n//        printf(\"%s\\t%s\\n\", str, additional_memory);\n        memcpy(str + l, additional_memory + (r-l-k+1), k*sizeof(char));\n//        printf(\"%s\\t%s\\n\", str, additional_memory);\n        memcpy(str + (l + k), additional_memory, (r-l+1-k)*sizeof(char));\n//        printf(\"%s\\t%s\\n\", str, additional_memory);\n//        printf(\"________________________\\n\");\n    }\n    printf(\"%s\", str);\n\treturn 0;\n}", "fixed": "#include <stddef.h>\n#include <stdio.h>\n#include <string.h>\n\n#define BUFF (10000)\n\nint main()\n{\n    char str[BUFF] = {};\n    //char additional_memory[BUFF] = {};\n    int l, r, k;\n    scanf(\"%s\", str);\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; ++i)\n    {\n        scanf(\"%d %d %d\", &l, &r, &k);\n        --r; --l; k %= (r-l+1);\n//        printf(\"(l,r,k) = (%d, %d, %d)\\n\", l, r , k);\n        char additional_memory[r-l+1];\n//        printf(\"%s\\t%s\\n\", str, additional_memory);\n        memcpy(additional_memory, str + l, (r-l+1)*sizeof(char));\n//        printf(\"%s\\t%s\\n\", str, additional_memory);\n        memcpy(str + l, additional_memory + (r-l-k+1), k*sizeof(char));\n//        printf(\"%s\\t%s\\n\", str, additional_memory);\n        memcpy(str + (l + k), additional_memory, (r-l+1-k)*sizeof(char));\n//        printf(\"%s\\t%s\\n\", str, additional_memory);\n//        printf(\"________________________\\n\");\n    }\n    printf(\"%s\", str);\n\treturn 0;\n}"}
{"similarity_score": 0.9296482412060302, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9a51110ebb119a1622fd02d01a9e5fb9", "bug_code_uid": "4c95a2b66b32060424f8d4d0a9347a3d", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "e62d3337150bdca5cd8c20f877bb53df", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,m,no;\n        scanf(\"%d%d\",&n,&m);\n        no=(m/2)*n+(m-2*(m/2))*((n/2)+1);\n        printf(\"%d\\n\",no);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,m,no;\n        scanf(\"%d%d\",&n,&m);\n        no=(n*m+1)/2;\n        printf(\"%d\\n\",no);\n    }\n}\n"}
{"similarity_score": 0.9638076351016361, "equal_cnt": 14, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 12, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "1695b440a0c0826d739218ac4b3291dc", "bug_code_uid": "a9b6bb286ee3d55cd65785e9d5e9ab14", "src_uid": "79d07b0f6ea14daf208aef1acd6466c1", "apr_id": "842b240c1498d64bf9d00f6ed07c4920", "difficulty": 1600, "tags": ["dp", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\n#include<limits.h>\n \nint cmp (const void *a, const void *b)\n{\n\treturn *(int *)a - *(int *)b;\n}\n \nint main ()\n{\n\tint t,n,p,k,arr[210000],s,i,ogp,max,j,flag,lp;\n \n\tscanf(\"%d\", &t);\n \n\twhile (t--)\n\t{\n\t\tscanf(\"%d %d %d\", &n, &p, &k);\n \n\t\togp=p;\n \n\t\tfor (i=0;i<n;i++)\n\t\t\tscanf(\"%d\", &arr[i]);\n \n\t\tqsort(arr,n,sizeof(long long int),cmp);\n \n\t\tif (p<arr[0])\n\t\t\tprintf(\"0\\n\");\n \n\t\telse\n\t\t{\n\t\t\tmax = -1;\n\t\t\tlp=p;\n \n\t\t\tfor (i=0 ; i<=k-1 ; i++)\n\t\t\t{\n\t\t\t\ts=i;\n\t\t\t\tp=ogp;\n\t\t\t\tflag=0;\n \n\t\t\t\tif (i>0)\n\t\t\t\t{\n\t\t\t\t\tlp = lp-arr[i-1];\n\t\t\t\t\t\n\t\t\t\t\tif (lp<0)\n\t\t\t\t\t       flag++;\n\t\t\t\t}\n \n\t\t\t\tp=lp;\t\t\t\t\n \n\t\t\t\tif (flag==0)\n\t\t\t\t{\t\t\t\t\n\t\t\t\t\tj=k-1+i;\n \n\t\t\t\t\twhile (arr[j]<=p && j<n)\n\t\t\t\t\t{\n\t\t\t\t\t\tp=p-arr[j];\n\t\t\t\t\t\ts=s+k;\n\t\t\t\t\t\tj=j+k;\n\t\t\t\t\t}\n \n\t\t\t\t\tj=j-k+1;\n \n\t\t\t\t\twhile (arr[j]<=p && j<n)\n\t\t\t\t\t{\n\t\t\t\t\t\tp=p-arr[j];\n\t\t\t\t\t\ts++;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n \n\t\t\t\t\tif (s>max)\n\t\t\t\t\t\tmax=s;\n\t\t\t\t}\n\t\t\t}\n \n\t\t\tprintf(\"%d\\n\",max);\n\t\t}\n\t}\n \n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\n#include<limits.h>\n \nint cmp (const void *a, const void *b)\n{\n\treturn *(long long int *)a - *(long long int *)b;\n}\n \nint main ()\n{\n\tlong long int t,n,p,k,arr[900000],s,i,ogp,max,j,flag,lp;\n \n\tscanf(\"%lld\", &t);\n \n\twhile (t--)\n\t{\n\t\tscanf(\"%lld %lld %lld\", &n, &p, &k);\n \n\t\togp=p;\n \n\t\tfor (i=0;i<n;i++)\n\t\t\tscanf(\"%lld\", &arr[i]);\n \n\t\tqsort(arr,n,sizeof(long long int),cmp);\n \n\t\tif (p<arr[0])\n\t\t\tprintf(\"0\\n\");\n \n\t\telse\n\t\t{\n\t\t\tmax = -1;\n\t\t\tlp=p;\n \n\t\t\tfor (i=0 ; (i<=k-1)&&(lp>=0)&&(max<n) ; i++)\n\t\t\t{\n\t\t\t\ts=i;\n\t\t\t\tp=ogp;\n\t\t\t\tflag=0;\n \n\t\t\t\tif (i>0 && i<n)\n\t\t\t\t{\n\t\t\t\t\tlp = lp-arr[i-1];\n\t\t\t\t\t\n\t\t\t\t\tif (lp<0)\n\t\t\t\t\t       flag++;\n\t\t\t\t}\n \n\t\t\t\tp=lp;\t\t\t\t\n \n\t\t\t\tif (flag==0)\n\t\t\t\t{\t\t\t\t\n\t\t\t\t\tj=k-1+i;\n \n\t\t\t\t\twhile (arr[j]<=p && j<n)\n\t\t\t\t\t{\n\t\t\t\t\t\tp=p-arr[j];\n\t\t\t\t\t\ts=s+k;\n\t\t\t\t\t\tj=j+k;\n\t\t\t\t\t}\n \n\t\t\t\t\tj=j-k+1;\n \n\t\t\t\t\twhile (arr[j]<=p && j<n)\n\t\t\t\t\t{\n\t\t\t\t\t\tp=p-arr[j];\n\t\t\t\t\t\ts++;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n \n\t\t\t\t\tif (s>max)\n\t\t\t\t\t\tmax=s;\n\t\t\t\t}\n\t\t\t}\n \n\t\t\tprintf(\"%lld\\n\",max);\n\t\t}\n\t}\n \n\treturn 0;\n}\n"}
{"similarity_score": 0.800599700149925, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ce5fb63a14bdae533b5c9fa6e8c3b0ca", "bug_code_uid": "a600708b4b31c0d328debd42109abbff", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "ba8a5ae1f1b03481497213bc6eb2f0ed", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x,i,a,b,d,p;\n    scanf(\"%d\",&x);\n    while(x--)\n    {\n        scanf(\"%d %d %d\",&a,&b,&d);\n        if(d<a) printf(\"%d\\n\",d);\n        else if(d>b) printf(\"%d\\n\",d);\n        else\n        {\n            for(i=b+1; ;i++)\n            {\n                if(i%d==0) { printf(\"%d\\n\",i); break; }\n            }\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int x,i,a,b,d,p;\n    scanf(\"%d\",&x);\n    while(x--)\n    {\n        scanf(\"%d %d %d\",&a,&b,&d);\n        if(d<a) printf(\"%d\\n\",d);\n        else if(d>b) printf(\"%d\\n\",d);\n        else\n        {\n            p=b/d;\n            p++;\n            printf(\"%d\\n\",d*p);\n        }\n    }\n}\n"}
{"similarity_score": 0.4532304725168756, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7163bb4d62fc014299cec6b153e99848", "bug_code_uid": "44eec4b40b4e1223936e8b1f98c16ec9", "src_uid": "f98d1d426f68241bad437eb221f617f4", "apr_id": "171f5e47d3f56e8a41819dcf0848fd30", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, k;\n    int t;\n    int i, j;\n    float ab;\n    int q[6000] = {0,}, index = 0;\n    \n    scanf(\"%d\", &t);\n    for(i = 0; i < t; i++) {\n        scanf(\"%d %d\", &n, &k);\n        for(j = 0; ; j++) {\n            ab = ((float)(k - n - j)) / -2;\n            if(ab >= 0 && ab - (int)ab == 0) {\n                q[index] = j;\n                index++;\n                break;\n            }\n        }\n    }\n    for(i = 0; i < index; i++) {\n        printf(\"%d\\n\", q[i]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, k;\n    int t;\n    int i, j;\n    int q[6000] = {0,}, index = 0;\n    \n    scanf(\"%d\", &t);\n    for(i = 0; i < t; i++) {\n        scanf(\"%d %d\", &n, &k);\n        if(n >= k) {\n            if((k % 2) + (n % 2) == 1) {\n                q[index] = 1;\n            } else q[index] = 0;\n            index++;\n        } else if(n < k) {\n            q[index] = k - n;\n            index++;\n        }\n    }\n    for(i = 0; i < index; i++) {\n        printf(\"%d\\n\", q[i]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9873793615441723, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cb19e6f7a58a233fc1b8d5654303873b", "bug_code_uid": "e5dbf41c0b4a04c2f2bdabc0c3d937aa", "src_uid": "b2031a328d72b464f965b4789fd35b93", "apr_id": "eb6a9990335d3977373b5c6bb5ea3d3c", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare(const void *a, const void *b) {\n  int aa, bb;\n  aa = *(int *)a;\n  bb = *(int *)b;\n  return (aa - bb);\n}\n\nfloat min(float a, float b) {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n  return 0;\n}\n\nint main() {\n  int number;\n  float capacity;\n  int i;\n  float array[200000];\n\n  scanf(\"%d\", &number);\n  scanf(\"%f\", &capacity);\n  float max = capacity / 3.0;\n\n  for (i = 0; i < 2 * number; i++) {\n    scanf(\"%f\", &array[i]);\n  }\n\n  qsort(array, 2 * number, sizeof(float), compare);\n\n  float j = min(array[number] / 2.0, array[0]);\n\n  float k = min(j, max);\n\n  printf(\"%f\\n\", number * 3 * k);\n\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare(const void *a, const void *b) {\n  int aa, bb;\n  aa = *(int *)a;\n  bb = *(int *)b;\n  return (aa - bb);\n}\n\nfloat min(float a, float b) {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n  return 0;\n}\n\nint main() {\n  int number;\n  float capacity;\n  int i;\n  float array[200000];\n\n  scanf(\"%d\", &number);\n  scanf(\"%f\", &capacity);\n  float max = capacity / 3.0;\n  max /= number;\n\n  for (i = 0; i < 2 * number; i++) {\n    scanf(\"%f\", &array[i]);\n  }\n\n  qsort(array, 2 * number, sizeof(float), compare);\n\n  float j = min(array[number] / 2.0, array[0]);\n\n  float k = min(j, max);\n\n  printf(\"%f\\n\", number * 3 * k);\n\n  return 0;\n}"}
{"similarity_score": 0.9607218683651805, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "744052b6e221871070c37df046b9a66b", "bug_code_uid": "b5697dd1fa727a3422e7b91a907404ba", "src_uid": "4bdf819b73ffb708ad571accf3b8c23d", "apr_id": "f522c98c63073f7bd4dd5e94d5dd18d8", "difficulty": 1400, "tags": ["data structures", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "//http://codeforces.com/problemset/problem/816/B\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 200001\n\nint main(void){\n  int ans[N]={0};\n  int chk[N]={0};\n  int i, j;\n  int n, k, q;\n  char tmp[500];\n  int st, en;\n\n  fgets(tmp, 500, stdin);\n  \n  n = atoi(strtok(tmp, \" \"));\n  k = atoi(strtok(NULL, \" \"));\n  q = atoi(strtok(NULL, \" \"));\n\n  for(i=1; i <= n; i++){\n    fgets(tmp, 500, stdin);\n    st = atoi(strtok(tmp, \" \"));\n    en = atoi(strtok(NULL, \" \"));\n    /*\n    for(j=st; j <= en; j++){\n      ans[j]++;\n    }\n    */\n    chk[st]++;\n    chk[en+1]--;\n  }\n  \n  \n  for(i=1,st=0,en=0; i<200001; i++){\n    chk[i] = chk[i] + chk[i-1];\n    if(chk[i] >= k) ans[i] = ans[i-1] + 1;\n    else ans[i] = ans[i-1];\n  }\n  for(i=1;i<101;i++){\n    printf(\"%d %d %d\\n\", i, chk[i], ans[i]);\n  }\n  \n\n  while(q--){\n    fgets(tmp, 500, stdin);\n    st = atoi(strtok(tmp, \" \"));\n    en = atoi(strtok(NULL, \" \"));\n    \n    printf(\"%d\\n\", ans[en] - ans[st-1]);\n  }\n  return 0;\n}", "fixed": "//http://codeforces.com/problemset/problem/816/B\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 200001\n\nint main(void){\n  int ans[N]={0};\n  int chk[N]={0};\n  int i, j;\n  int n, k, q;\n  char tmp[500];\n  int st, en;\n\n  fgets(tmp, 500, stdin);\n  \n  n = atoi(strtok(tmp, \" \"));\n  k = atoi(strtok(NULL, \" \"));\n  q = atoi(strtok(NULL, \" \"));\n\n  for(i=1; i <= n; i++){\n    fgets(tmp, 500, stdin);\n    st = atoi(strtok(tmp, \" \"));\n    en = atoi(strtok(NULL, \" \"));\n    /*\n    for(j=st; j <= en; j++){\n      ans[j]++;\n    }\n    */\n    chk[st]++;\n    chk[en+1]--;\n  }\n  \n  \n  for(i=1,st=0,en=0; i<200001; i++){\n    chk[i] = chk[i] + chk[i-1];\n    if(chk[i] >= k) ans[i] = ans[i-1] + 1;\n    else ans[i] = ans[i-1];\n  }\n\n  while(q--){\n    fgets(tmp, 500, stdin);\n    st = atoi(strtok(tmp, \" \"));\n    en = atoi(strtok(NULL, \" \"));\n    \n    printf(\"%d\\n\", ans[en] - ans[st-1]);\n  }\n  return 0;\n}"}
{"similarity_score": 0.0, "equal_cnt": 0, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "eac97090cd52f325cf1bcabcccd1a263", "bug_code_uid": "ba5181199e70e6b5e28c6e42fc65225d", "src_uid": "e702594a8e993e135ea8ca78eb3ecd66", "apr_id": "ab35caefed328bc1f86d969ecc7918da", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int arr[n][2];\n    int i,j;\n    int min=1000000000;\n    int max=0;\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            scanf(\"%d\",&arr[i][j]);\n            if(j==0){\n                if(arr[i][j]<min){\n                    min=arr[i][j];\n                }\n            }\n            if(j==1){\n                if(arr[i][j]>max){\n                    max=arr[i][j];\n                }\n            }\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            if(arr[i][0]==min&&arr[i][1]==max){\n                printf(\"%d\",i+1);\n                return 0;\n            }\n        }\n    }\n    printf(\"-1\");\n    return 0;\n}\n"}
{"similarity_score": 0.231496062992126, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "7ec5ede8ff9b1c6fe9519105ca456e89", "bug_code_uid": "d7b36468b48b7ff8bc398b335a2a46fc", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "5ec0775e79ca1c34b4e5324a7c5f3c7a", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n#include <algorithm>\n#include <stdio.h>\n#include <set>\nusing namespace std;\n\nint main() \n{\n    set<int>s1;\n    set<int>s2;\n    set <int>::iterator it;\n    int n,k,i;\n    scanf(\"%d\",&n);\n    if(n==1 || n==2)\n    printf(\"1\\n1\");\n    if(n==3)\n    printf(\"2\\n1 3\");\n    if(n==4)\n    printf(\"3\\n 1 4 2\");\n    if(n>4 && n%2 ==0)\n    {\n        printf(\"%d\\n\",n);\n        k=n;\n        for(i=1;i<=n;i++)\n        {\n            if(i%2 ==0)\n            s1.insert(i);\n            else\n            s2.insert(i);\n        }\n        for(it = s2.begin();it != s2.end();++it)\n        {\n            printf(\"%d\\t\",*it);\n        }\n        for(it = s1.begin();it != s1.end(); ++it)\n        {\n            printf(\"%d\\t\",*it);\n        }\n        \n    }\n    // your code goes here\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"1\\n1\");\n        return 0;\n    }\n    if(n==2)\n    {\n        printf(\"1\\n1\");\n        return 0;\n    }\n    if(n==3)\n    {\n        printf(\"2\\n1 3\");\n        return 0;\n    }\n    if(n==4)\n    {\n        printf(\"4\\n3 1 4 2\");\n        return 0;\n    }\n    int i;\n    printf(\"%d\\n\",n);\n    for(i=1;i<=n;i+=2)\n        printf(\"%d \",i);\n    for(i=2;i<=n;i+=2)\n        printf(\"%d \",i);\n    return 0;\n}"}
{"similarity_score": 0.7375643224699828, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "3ed892c87f9068dcb88841a8a9d843d7", "bug_code_uid": "697e903c63a1894abab58b2d242a47dd", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "b65c58fefe09daa378a8ac5df28d48ef", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,l;\n    char st[1000];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        gets(st);\n        l=strlen(st);\n        if(l>10)\n            printf(\"%c%d%c\\n\",st[0],l-2,st[l-1]);\n        else\n        puts(st);\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,n,len;\n    char a[1000];\n    scanf(\"%d\",&n);getchar();\n    for(i=0;i<n;i++)\n    {\n        gets(a);\n        if(strlen(a)>10)\n            printf(\"%c%d%c\\n\",a[0],strlen(a)-2,a[strlen(a)-1]);\n        else puts(a);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8366890380313199, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "2296e67c3cf9ebc5ff7d3c09b21c7fc6", "bug_code_uid": "8eb98ae6769feef5c2035a218edb66ab", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "8dc1995d38af2938f732d0cb9e1727c2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint total,i,a[n];\n\ttotal=(n*(n+1))/2;\n\tfor(i=0;i<(n-1);i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\t\ttotal=total-a[i];\n\t}\n\tprintf(\"%d\",total);\n\treturn 0;\n}\n\n\t\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n;\n\tscanf(\"%lld\",&n);\n\tlong long int total,i,a[n];\n\ttotal=(n*(n+1))/2;\n\tfor(i=0;i<(n-1);i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n}\nfor(i=0;i<(n-1);i++)\n{\ntotal -=a[i];\n}\n\tprintf(\"%lld\",total);\n\treturn 0;\n}\n\n\t\n"}
{"similarity_score": 0.38413361169102295, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "f57b72cfed80429d9c2bfec201570536", "bug_code_uid": "0360897eae71021814f0a7a7418bddac", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "973543722b460b341df73d6c2303ef18", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x[200];\n    int a,j=0,i;\n    float k=3;\n    scanf(\"%d\",&a);\n    int numb=a;\n    float result[2000];\n    for(i=3;i<=2000;i++)\n    {\n        result[i]=180*((k-2)/k);\n        k++;\n    }\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&x[i]);\n    }\n    while(a>0)\n    {\n        int count=0;\n        for(i=3;i<=180;i++)\n        {\n            if(x[j]==result[i])\n            {\n                count++;\n                break;\n            }\n        }\n        if(count==1)\n        {\n            j++;\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            j++;\n            printf(\"NO\\n\");\n        }\n        a--;\n    }\n}", "fixed": "\n#include<stdio.h>\nint main()\n{\n    int t,i,c;\n    float a,b;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%f\",&a);\n        b=(360/(180-a));\n        c=(360/(180-a));\n        if(b-c==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.4294234592445328, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "fabd662984ed045650f1a9bbba253ab0", "bug_code_uid": "373bea005e55f37dfeaf70ec84b37d70", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "6b1f728fdc281d2e571a6074dfafcebc", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint main(int argc , char*argv[])\n{\n\n    int i ;\n    char array [100]  ;\n    for (i=0 ; i<100 ; i++)\n    {\n        array[i] = NULL ;\n    }\n    for (i=0 ; i<strlen(argv[1]); i++)\n    {\n        array[i] = argv[1][i] ;\n        printf(\"%c\" , array[i]);\n    }\n    for (i=strlen(argv[1]) ; i< 2*strlen(argv[1]) ; i++)\n    {\n        array[i] = argv[1][(2*strlen(argv[1])-1)-i];\n        printf(\"%c\" , array[i]);\n    }\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint main()\n{\n\n    int i ;\n    char array [1000000]  ;\n    char array_2 [1000000] ;\n   /* for (i=0 ; i<5000 ; i++)\n    {\n        array[i] = NULL ;\n        array_2[i] = NULL ;\n    }*/\n    scanf(\"%s\" , &array_2);\n    /*for (i=0 ; i<strlen(array_2); i++)\n    {\n        array[i] = array_2[i] ;\n    }*/\n    strcpy(array , array_2) ;\n    for (i=strlen(array_2) ; i< 2*strlen(array_2) ; i++)\n    {\n        array[i] = array_2[(2*strlen(array_2)-1)-i];\n    }\n    printf(\"%s\" , array);\n\n}\n"}
{"similarity_score": 0.9318181818181818, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "02e4d133629b77f8aa685c0853cb6e18", "bug_code_uid": "8a196e55f88b76386487057c44b2b70e", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "0f7f306674e5995240e0d80aa14e401f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,d,e,f,g,n;\n    scanf(\"%lld %lld\",&n,&c);\n    scanf(\"%lld\",&a);\n    //d=a;\n    if(n==1)\n    {\n        printf(\"1\\n\");\n    }\n    else\n    {\n    while(n!=1)\n    {\n        scanf(\"%lld\",&b);\n        if(b-a<=c)\n        {\n            if(e==0)\n                e++;\n            e++;\n        }\n        else\n        {\n            e=0;\n        }a=b;\n        n--;\n    }printf(\"%lld\\n\",e);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,d,e,f,g,n;\n    scanf(\"%lld %lld\",&n,&c);\n    scanf(\"%lld\",&a);\n    //d=a;\n    if(n==1)\n    {\n        printf(\"1\\n\");\n    }\n    else\n    {\n    while(n!=1)\n    {\n        scanf(\"%lld\",&b);\n        if(b-a<=c)\n        {\n            if(e==0)\n                e++;\n            e++;\n        }\n        else\n        {\n            e=0;\n        }a=b;\n        n--;\n    }\n        if(e==0)\n            printf(\"1\\n\");\n        else\n        printf(\"%lld\\n\",e);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8988529718456726, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9fa6bcae54f4f2a74bd5230e9a1a4253", "bug_code_uid": "e4381ee690f265bd848694ee4b1a1ca3", "src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "apr_id": "afc3ec5a80839a3ab72852f8a26997b3", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint  main()\n{\n    int n,i,j,count=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=-1)\n        {\n            for(j=i+1;j<n;j++)\n            {\n                if(a[i]==a[j])\n                {\n                    count++;\n                    a[j]=-1;\n                }\n            }\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint  main()\n{\n    int n,i,j,count=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>n)\n        {\n            count++;\n            a[i]=-1;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=-1)\n        {\n            for(j=i+1;j<n;j++)\n            {\n                if(a[i]==a[j])\n                {\n                    count++;\n                    a[j]=-1;\n                }\n            }\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9969849246231156, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "915780eefdc9616aaa4366c040ad4145", "bug_code_uid": "3f9e3f7026f7f187380faab5cb34b367", "src_uid": "86d5da999415fa75b3ee754a2a28605c", "apr_id": "590598556fd06be96b427f9c92f2de03", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define __STDC_FORMAT_MACROS\n#include <inttypes.h>\n\nstatic int _ai[300000];\nstatic int compare_int(const void* a, const void* b) { return *(const int*)a - *(const int*)b; }\n\nint main() {\n    int N; scanf(\"%d\\n\", &N);\n    for(int i = 0 ; i < N ; ++i) scanf(\"%d \", &_ai[i]);\n    qsort(_ai, N, sizeof(int), compare_int);\n\n    int64_t sum = 0;\n    for(int i = 0 ; i < N ; ++i)\n        sum += (i+1 - _ai[i]);\n    printf(\"%\" PRId64 \"\\n\", sum);\n    return 0;\n}\n\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define __STDC_FORMAT_MACROS\n#include <inttypes.h>\n\nstatic int _ai[300000];\nstatic int compare_int(const void* a, const void* b) { return *(const int*)a - *(const int*)b; }\n\nint main() {\n    int N; scanf(\"%d\\n\", &N);\n    for(int i = 0 ; i < N ; ++i) scanf(\"%d \", &_ai[i]);\n    qsort(_ai, N, sizeof(int), compare_int);\n\n    int64_t sum = 0;\n    for(int i = 0 ; i < N ; ++i)\n        sum += abs(i+1 - _ai[i]);\n    printf(\"%\" PRId64 \"\\n\", sum);\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.3931888544891641, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e83af8182765c9f2d3f68d1db085d5f4", "bug_code_uid": "14dd503b457526842af6fda69ef14138", "src_uid": "eb3d8259ca598c3c455ddfdbe433cb78", "apr_id": "4fb4ed3d8fc2e1aea264a0fec24f06f6", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> \n#include <string.h> \n\nint main(){\n\tint t, n, r, i, flag = 1;\n\tlong long res;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tres = 0;\n\t\tflag = 1;\n\t\tscanf(\"%d%d\", &n, &r);\n\t\tfor(i = 1; i <= r; i++){\n\t\t\tif(n > i){\n\t\t\t\tres += i;\n\t\t\t}\n\t\t\telse if(n <= i && flag == 1){\n\t\t\t\tres++;\n\t\t\t\tflag = 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\", res);\n\t}\n\t\n\t\t\n\treturn 0;\n}\n\n\n\n\n\t", "fixed": "#include <stdio.h> \n#include <string.h> \n\nint main(){\n\tint t;\n\tlong long res, n, r;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tres = 0;\n\t\tscanf(\"%lld%lld\", &n, &r);\n\t\tif(n <= r){\n\t\t\tres = n * (n - 1) / 2 + 1;\n\t\t}\n\t\telse{\n\t\t\tres = r * (r + 1) / 2;\n\t\t}\n\t\tprintf(\"%lld\\n\", res);\n\t}\n\t\n\t\t\n\treturn 0;\n}\n\n\n\n\n\t"}
{"similarity_score": 0.9990539262062441, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ab313664362cf7f58c9c5bf99cd5bcf7", "bug_code_uid": "fef40bb4f92dae9d88a8de2f5ac742c3", "src_uid": "e9cf68a68b55fe075099c384cb6a7e9e", "apr_id": "3497d46698cc7b379e8cc1c930de0f22", "difficulty": 1500, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[(int)2e5];\nint a_indexes[(int)2e5];\nint value[(int)2e5];\n\nvoid swap (int *a, int *b) { int temp = *a; *a = *b; *b = temp; }\nvoid sort(int start, int end) {\n\tif (start >= end)\n\t\treturn;\n\tint l = start + 1;\n\tint r = end;\n\twhile (l <= r) {\n\t\tif (a[l] > a[start] && a[r] < a[start]) {\n\t\t\tswap(&a[l], &a[r]);\n\t\t\tswap(&a_indexes[l], &a_indexes[r]);\n\t\t}\n\t\tif (a[l] <= a[start])\n\t\t\tl++;\n\t\tif (a[r] >= a[start])\n\t\t\tr--;\n\t}\n\tswap(&a[r], &a[start]);\n\tswap(&a_indexes[r], &a_indexes[start]);\n\tsort(start, r - 1);\n\tsort(r + 1, end);\n}\n\nint main() {\n\tint n, m, k;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\ta_indexes[i] = i;\n\t}\n\tsort(0, n - 1);\n\tlong long summ = 0;\n\tfor (int i = n - 1; i > n - 1 - m * k; i--) {\n\t\tvalue[a_indexes[i]] = 1;\n\t\tsumm += a[i];\n\t}\n\tprintf(\"%l64d\\n\", summ);\n\n\tint global_count = 0;\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (value[i]) {\n\t\t\tcount++;\n\t\t\tglobal_count++;\n\t\t}\n\t\tif (count == m && global_count < m * k) {\n\t\t\tprintf(\"%d \", i + 1);\n\t\t\tcount = 0;\n\t\t}\n\t}\n}\n", "fixed": "#include <stdio.h>\n\nint a[(int)2e5];\nint a_indexes[(int)2e5];\nint value[(int)2e5];\n\nvoid swap (int *a, int *b) { int temp = *a; *a = *b; *b = temp; }\nvoid sort(int start, int end) {\n\tif (start >= end)\n\t\treturn;\n\tint l = start + 1;\n\tint r = end;\n\twhile (l <= r) {\n\t\tif (a[l] > a[start] && a[r] < a[start]) {\n\t\t\tswap(&a[l], &a[r]);\n\t\t\tswap(&a_indexes[l], &a_indexes[r]);\n\t\t}\n\t\tif (a[l] <= a[start])\n\t\t\tl++;\n\t\tif (a[r] >= a[start])\n\t\t\tr--;\n\t}\n\tswap(&a[r], &a[start]);\n\tswap(&a_indexes[r], &a_indexes[start]);\n\tsort(start, r - 1);\n\tsort(r + 1, end);\n}\n\nint main() {\n\tint n, m, k;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\ta_indexes[i] = i;\n\t}\n\tsort(0, n - 1);\n\tlong long summ = 0;\n\tfor (int i = n - 1; i > n - 1 - m * k; i--) {\n\t\tvalue[a_indexes[i]] = 1;\n\t\tsumm += a[i];\n\t}\n\tprintf(\"%I64d\\n\", summ);\n\n\tint global_count = 0;\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (value[i]) {\n\t\t\tcount++;\n\t\t\tglobal_count++;\n\t\t}\n\t\tif (count == m && global_count < m * k) {\n\t\t\tprintf(\"%d \", i + 1);\n\t\t\tcount = 0;\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.6750285062713797, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "390f8d9a885eb8d3e2d6f5ebbc2bb963", "bug_code_uid": "a6d3415bd9e342729f256ac12ceebdaa", "src_uid": "168f2a740d21a3a916a9d560fbcffeb9", "apr_id": "fe47cc9d0bfc818d6936e6f915cfabbd", "difficulty": 800, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(void){\r\n\tint t,n,k,a[1005]={0},b[1005]={0},i,j,c[1005]={0},max;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++){\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d\",&b[j]);\r\n\t\t}\r\n\t\tmax=k;\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tif((a[j]+k)>=b[j]){\r\n\t\t\t\tc[j]=a[j]+b[j];\r\n\t\t\t\tif(max<c[j]){\r\n\t\t\t\t\tmax=c[j];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(void){\r\n\tint t,n,k,a[1005]={0},b[1005]={0},i,j,c[1005]={0},flag=1;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++){\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d\",&b[j]);\r\n\t\t}\r\n\t\tflag=1;\r\n\t\twhile(flag==1){\r\n\t\t\tflag=0;\r\n\t\t\tfor(j=0;j<n;j++){\r\n\t\t\t\tif(a[j]<=k){\r\n\t\t\t\t\tk=k+b[j];\r\n\t\t\t\t\ta[j]=99999;\r\n\t\t\t\t\tflag=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%d\\n\",k);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9175662414131501, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d101c82a3f9f83c11b69c5afdbd560c6", "bug_code_uid": "33b8aedec292234e7521d89fa9927bb4", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "8dc9a6f6c6e28de35a6efb06a32a0648", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint binarySearch(int ele,int a[],int first,int last)\n{\n        int middle = (first+last)/2;\n\n    if(last>=first)\n    {\n    if(a[middle]>= ele && ele>=a[middle-1] )\n    {\n        return middle+1;\n    }\n    else if(ele>a[middle])\n    {\n        return binarySearch(ele,a,middle+1,last);\n    }\n    else if(ele<a[middle])\n    {\n        return binarySearch(ele,a,first,middle-1);\n    }\n    }\n    \n}\n\nint main() {\n\tint no_of_piles;\n\tscanf(\"%d\\n\",&no_of_piles);\n\tint a[no_of_piles];\n\t\n\tint sum=0;\n\tfor(int i=0;i<no_of_piles;i++)\n\t{\n\t    int ele;\n\tscanf(\"%d \",&ele);\n\tsum+=ele;\n\ta[i]=sum;\n\t\n\t}\n\t\n\n\tint no_of_juicy_worms;\n\tscanf(\"%d\\n\",&no_of_juicy_worms);\n\t\n\tint lable_of_juicy_worms[no_of_juicy_worms];\n\t\n\tfor(int i=0;i<no_of_juicy_worms;i++)\n\tscanf(\"%d \",&lable_of_juicy_worms[i]);\n\t\n\tfor(int i=0;i<no_of_juicy_worms;i++)\n\t{\n\t   int index=  binarySearch(lable_of_juicy_worms[i],a,0,no_of_piles-1);\n\t   printf(\"%d\\n\",index);\n\t}\n\t\n\t\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint binarySearch(int ele,int a[],int first,int last)\n{\n        int middle = (first+last)/2;\n\n    if(last>=first)\n    {\n    \n    if(a[middle] == ele)\n    return middle+1;\n    else if(ele < a[middle] && ele>a[middle-1] && (middle-1)>=0)\n    {\n        return middle+1;\n    }\n    else if(middle-1<0 && ele<=a[middle])\n    return 1;\n    else if(ele>a[middle])\n    {\n        return binarySearch(ele,a,middle+1,last);\n    }\n    else if(ele<a[middle])\n    {\n        return binarySearch(ele,a,first,middle-1);\n    }\n    }\n \n}\n\nint main() {\n\tint no_of_piles;\n\tscanf(\"%d\\n\",&no_of_piles);\n\tint a[no_of_piles];\n\t\n\tint sum=0;\n\tfor(int i=0;i<no_of_piles;i++)\n\t{\n\t    int ele;\n\tscanf(\"%d \",&ele);\n\tsum+=ele;\n\ta[i]=sum;\n\t\n\t}\n\t\n\n\tint no_of_juicy_worms;\n\tscanf(\"%d\\n\",&no_of_juicy_worms);\n\t\n\tint lable_of_juicy_worms[no_of_juicy_worms];\n\t\n\tfor(int i=0;i<no_of_juicy_worms;i++)\n\tscanf(\"%d \",&lable_of_juicy_worms[i]);\n\t\n\tfor(int i=0;i<no_of_juicy_worms;i++)\n\t{\n\t   int index=  binarySearch(lable_of_juicy_worms[i],a,0,no_of_piles-1);\n\t   printf(\"%d\\n\",index);\n\t}\n\t\n\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.4067796610169492, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "b10fec0c50a3dbf876683aff33211ac7", "bug_code_uid": "69427ea84dc99e45e6082de2df332401", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "1877633d4b4c1e88a08ecc9125e1cb81", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\t\n\tint ans[n];\n\tfor(int i=0;i<n;i++)\n\tans[i]=0;\n\t\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\twhile(a>6)\n\t\t{\n\t\t\tans[i]= ans[i]*10 +1;\n\t\t}\n\t\tif(a==6)\n\t\tans[i]=ans[i]*1000+111;\n\t\telse if(a==5)\n\t\tans[i]=ans[i]*100+71;\n\t\telse if(a==4)\n\t\tans[i]=ans[i]*100 + 11;\n\t\telse if(a==3)\n\t\tans[i]=ans[i]*10+7;\n\t\telse if(a==2)\n\t\tans[i]=ans[i]*10+1;\n\t\t\n\t}\n\tfor(int i=0;i<n;i++)\n\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\t\t\t\t\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\twhile(a%2 !=0 )\n\t\t{\n\t\t\tprintf(\"7\");\n\t\t\ta=a-3;\n\t\t}\n\t\twhile(a>0)\n\t\t{\n\t\t\tprintf(\"1\");\n\t\t\ta=a-2;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\t"}
{"similarity_score": 0.7748538011695907, "equal_cnt": 16, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "42c476db79f721c157dd26fca3066059", "bug_code_uid": "2d75280b12d9288f97e0b47bb3ca4acd", "src_uid": "62f5798bdcea237c0df9b4cd288b97de", "apr_id": "81be2f807e4169b83f292ac283d7036f", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n#include <string.h>\r\n\r\nint main(void)\r\n{\r\n    int t, i, j, k, a = 0, b, c;\r\n\r\n    char s[200001];\r\n    scanf(\"%d\", &t);\r\n\r\n    for(i = 1; i <= t; i++){\r\n        a = 0;\r\n\r\n        scanf(\"%s\", &s);\r\n\r\n        j = strlen(s);\r\n        for(k = 0; k < j; k++){\r\n            if(s[k] == '0'){\r\n                a++;\r\n            }\r\n        }\r\n        b = j-a;\r\n        if(a == b){\r\n            printf(\"0\\n\");\r\n        }\r\n        else {\r\n            if(a < b){\r\n                printf(\"%d\\n\", a);\r\n            }\r\n            else {\r\n                printf(\"%d\\n\", b);\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n#include <string.h>\r\n\r\n#include <math.h>\r\n\r\nint main(void)\r\n{\r\n    int t, a, b, c, i, j, k;\r\n\r\n    char s[200001];\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    for(i = 1; i <= t; i++){\r\n        a = 0;\r\n        scanf(\"%s\", &s);\r\n\r\n        j = strlen(s);\r\n\r\n        for(k = 0; k < j; k++){\r\n            if(s[k] == '0'){\r\n                a++;\r\n            }\r\n        }\r\n        b = j-a;\r\n        if(a < b){\r\n            printf(\"%d\\n\", a);\r\n        }\r\n        else if(a > b){\r\n            printf(\"%d\\n\", b);\r\n        }\r\n        else {\r\n            if(s[j-1] == '0'){\r\n                printf(\"%d\\n\", a-1);\r\n            }\r\n            else {\r\n                printf(\"%d\\n\", b-1);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9919354838709677, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5bf9d8d1238c701bf7b5a0a82b0b659b", "bug_code_uid": "9dfe62f9d28d7ce00b4fbe5208f6ddfb", "src_uid": "391be6b61e289ec9c14222ea580cfcdc", "apr_id": "b8366c4aee4e5a46c0c8bb55589f0166", "difficulty": 1800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint d[500000];\n\nint max(int a, int b)\n{\n     if (a > b) {\n\t  return a;\n     } else {\n\t  return b;\n     }\n}\n\nint main()\n{\n     int n, m = 0, i;\n     int a[100000];\n\n     scanf(\"%d\", &n);\n\n     for (i = 0; i < n; i++) {\n\t  scanf(\"%d\", &a[i]);\n\n\t  if (i < n / 2) {\n\t       d[250000 + a[0] + i - a[i]]++;\n\t  } else {\n\t       d[250000 + a[0] + n - i - 1 - a[i]]++;\n\t  }\n     }\n\n     for (i = 0; i <= 250000; i++) m = max(m, d[i]);\n\n     printf(\"%d\\n\", n - m);\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint d[500000];\n\nint max(int a, int b)\n{\n     if (a > b) {\n\t  return a;\n     } else {\n\t  return b;\n     }\n}\n\nint main()\n{\n     int n, m = 0, i;\n     int a[100000];\n\n     scanf(\"%d\", &n);\n\n     for (i = 0; i < n; i++) {\n\t  scanf(\"%d\", &a[i]);\n\n\t  if (i < n / 2) {\n\t       d[250000 + a[0] + i - a[i]]++;\n\t  } else {\n\t       d[250000 + a[0] + n - i - 1 - a[i]]++;\n\t  }\n     }\n\n     for (i = 0; i < 250000 + a[0]; i++) m = max(m, d[i]);\n\n     printf(\"%d\\n\", n - m);\n\n     return 0;\n}\n"}
{"similarity_score": 0.9895470383275261, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "69a85329b41631b55a112687fd4f93b4", "bug_code_uid": "986712d6d7a9f03e1b6f780ffbd3781f", "src_uid": "86a2e0854f9faf0b119d0d5e4b8fe952", "apr_id": "147548a8410de0c848f1bf166bffa877", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    long long t;\r\n    char a[101], b[101];\r\n    int n, c = 0;\r\n    scanf(\"%lli\", &t);\r\n    for (long long i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        scanf(\"%s\", a);\r\n        scanf(\"%s\", b);\r\n        for (int j = 0; j < n; j++)\r\n        {\r\n\r\n            if ((a[i] == b[i]) || (a[i] == 'B' && b[i] == 'G') || (a[i] == 'G' && b[i] == 'B'))\r\n            {\r\n                c++;\r\n            }\r\n        }\r\n        if (c == n)\r\n            printf(\"yes\\n\");\r\n        else\r\n            printf(\"no\\n\");\r\n        c = 0;\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    long long t;\r\n    char a[101], b[101];\r\n    int n, c = 0;\r\n    scanf(\"%lli\", &t);\r\n    for (long long i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        scanf(\"%s\", a);\r\n        scanf(\"%s\", b);\r\n        for (int j = 0; j < n; j++)\r\n        {\r\n\r\n            if ((a[j] == b[j]) || (a[j] == 'B' && b[j] == 'G') || (a[j] == 'G' && b[j] == 'B'))\r\n            {\r\n                c++;\r\n            }\r\n        }\r\n        if (c == n)\r\n            printf(\"yes\\n\");\r\n        else\r\n            printf(\"no\\n\");\r\n        c = 0;\r\n    }\r\n}\r\n"}
{"similarity_score": 0.7863945578231293, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "11aa6d4a45f3af7345a404f2128d90ae", "bug_code_uid": "1e6b5a72415dbe9fc239b8be52b52a4c", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "9a5c1cef0eeb71a00d432a5d2de790b8", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n\n#define oo 1000000010\n\nint main(void) {\n   char c;\n   int done = 0;\n   scanf(\"%c\", &c);\n   while (1){\n      scanf(\"%c\", &c);\n      if (!done){\n         printf(\"1\");\n         if (c-'0'|1)^1))\n            done = 1;\n      }\n      else{\n         printf(\"%c\", c);\n      }\n   }\n   return 0;\n}\n\n", "fixed": "\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n\n#define oo 1000000010\n\nint main(void) {\n   char c;\n   int done = 0;\n   scanf(\"%c\", &c);\n   while (1){\n      scanf(\"%c\", &c);\n      if ((c-'0'|1)^1)\n         break;\n      if (!done){\n         printf(\"1\");\n         if (c == '0')\n            done = 1;\n      }\n      else{\n         printf(\"%c\", c);\n      }\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.6598674145843957, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b31eafdcc9c178c7b3371f345d894084", "bug_code_uid": "2d2424a79cc75604e0080f03fc26a988", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "bb18e25180946a802da6fe68bd20aa18", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n\nint main(void) {\n\t    \n    long  n;\n    scanf(\" %ld\",&n);\n    long long a;\n      long double p;\n      int flag=0;\n      \n    for(long i=0;i<n;i++)\n    {\n        scanf(\" %lld\",&a);\n        if(a==4)\n        {\n            printf(\"YES\\n\");\n            continue;\n        }\n        else if (a%2==0)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n        else if(a==1)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n        p=sqrt(a);\n        flag=0;\n        \n        if(p-(int)p==0)\n        {   \n            long x=p;\n            for(long j=2;j<=sqrt(x);j++)\n            {\n                if(x%j==0)\n                {\n                    printf(\"NO\\n\");\n                    flag=1;\n                    break;\n                }\n            }\n            if(flag==0)\n            {\n                printf(\"YES\\n\");\n            }\n        }\n        else\n        printf(\"NO\\n\");\n    }\n    \n    \n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include<math.h>\n\nint main(void) {\n\t    \n    long  n;\n    int flag[1000000]={0};\n    for(int i=2;i<1000;i++)\n    {\n        if(flag[i]==0)\n        {\n            for(int j=i*i;j<1000000;j+=i)\n            {\n                flag[j]=1;\n            }\n        }\n    }\n    scanf(\" %ld\",&n);\n    long long a;\n      long double p;\n     \n      \n    for(long i=0;i<n;i++)\n    {\n        scanf(\" %lld\",&a);\n        if(a==4)\n        {\n            printf(\"YES\\n\");\n            continue;\n        }\n        else if (a%2==0)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n        else if(a==1)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n         p=sqrt(a);\n        if(p==(int)p)\n        { \n            long x=p;\n        \n            if(flag[x]==0)\n            {\n                printf(\"YES\\n\");\n            }\n            else\n            printf(\"NO\\n\");\n        }\n        else\n        printf(\"NO\\n\");\n    }\n    \n    \n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9776733254994124, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e3138418f6ced98447683a8d181e1b5b", "bug_code_uid": "bf635c746d923ec5a2a889c00c1756a5", "src_uid": "291601d6cdafa4113c1154f0dda3470d", "apr_id": "22b9e91f6b630ae7968ac4fa7adf576e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int n=0;\n    int *arr = NULL;\n    int i,range=1,count=0;\n    scanf(\"%d\", &n);\n    arr = (int*)malloc(sizeof(int)*(n+1));\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=1;i<=n;i++){\n        if(arr[i]>range){\n            range = arr[i];\n        }\n        else if( i <= range){\n            count++;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int n=0;\n    int *arr = NULL;\n    int i,range=1,count=0;\n    scanf(\"%d\", &n);\n    arr = (int*)malloc(sizeof(int)*(n+1));\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=1;i<=n;i++){\n        if(arr[i]>range){\n            range = arr[i];\n        }\n        if( i >= range){\n            count++;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.9993746091307066, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e4968a415431b81dbd259457306d36b9", "bug_code_uid": "710945bd04601430ed722606425843ed", "src_uid": "22ef37041ebbd8266f62ab932f188b31", "apr_id": "b12d0541bb4a5b0104566bee591a3e63", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int a[100000];\n    int i;\n    int n,start,end,min,sum = 0,temp;\n    a[0] = 0;\n    scanf(\"%d\",&n);\n    for(i = 1 ;i <= n ; i ++)\n        scanf(\"%d\",&a[i]);\n    scanf(\"%d%d\",&start,&end);\n    if(start > end)\n    {\n        temp = start;\n        start = end;\n        end = temp;\n    }\n    for(i = start ; i <= end ; i ++)\n        sum += a[i];\n    min = sum;\n    if(end == n)\n    {\n        sum = a[n];\n        for(i = 0 ; i < start ; i ++)\n            sum += a[i];\n        if(sum < min)\n            min = sum;\n    }\n    else\n    {\n        sum = 0;\n        for(i = end  ; i <= n ; i ++)\n            sum += a[i];\n        for(i = 0 ; i < start ; i ++)\n            sum += a[i];\n        if(sum < min)\n            min = sum;\n    }\n\n    printf(\"%d\\n\",min);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    int a[100000];\n    int i;\n    int n,start,end,min,sum = 0,temp;\n    a[0] = 0;\n    scanf(\"%d\",&n);\n    for(i = 1 ;i <= n ; i ++)\n        scanf(\"%d\",&a[i]);\n    scanf(\"%d%d\",&start,&end);\n    if(start > end)\n    {\n        temp = start;\n        start = end;\n        end = temp;\n    }\n    for(i = start ; i < end ; i ++)\n        sum += a[i];\n    min = sum;\n    if(end == n)\n    {\n        sum = a[n];\n        for(i = 0 ; i < start ; i ++)\n            sum += a[i];\n        if(sum < min)\n            min = sum;\n    }\n    else\n    {\n        sum = 0;\n        for(i = end  ; i <= n ; i ++)\n            sum += a[i];\n        for(i = 0 ; i < start ; i ++)\n            sum += a[i];\n        if(sum < min)\n            min = sum;\n    }\n\n    printf(\"%d\\n\",min);\n    return 0;\n}"}
{"similarity_score": 0.9847826086956522, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e65fb50093d9bda4af9ccf8405ef9664", "bug_code_uid": "7dcc43bdc4c4d72cab0709422863a046", "src_uid": "cc4cdcd162a83189c7b31a68412f3fe7", "apr_id": "aae2eaac2745e975da7e97622fe64e87", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,t,i,x,y,c=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        c=0;\n        scanf(\"%d\",&n);\n        char a[n];\n        scanf(\"%s\",&a);\n        for(i=0;i<n/2;i++)\n        {\n         x=a[i],y=a[n-i-1];\n         if(x==y|| x-y==2  )         continue;\n         else\n         {\n             c=1;\n             break;\n         }\n        }\n        if(c==1)\n        printf(\"NO\\n\");\n        else\n        printf(\"YES\\n\");\n    }\n}\n\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,t,i,x,y,c=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        c=0;\n        scanf(\"%d\",&n);\n        char a[n];\n        scanf(\"%s\",&a);\n        for(i=0;i<n/2;i++)\n        {\n         x=a[i],y=a[n-i-1];\n         if(x==y|| x-y==2 || x-y==-2)\n         continue;\n         else\n         {\n             c=1;\n             break;\n         }\n        }\n        if(c==1)\n        printf(\"NO\\n\");\n        else\n        printf(\"YES\\n\");\n    }\n}\n\n"}
{"similarity_score": 0.9974337040205303, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a5767aa74dad6cdd3eb04230ca1dfe3b", "bug_code_uid": "9f9e5782767f77da1356e9c7b7aa87ec", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "e983a392e5a85ef2bbe876736b0ec210", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint occuredbefore(char* str, index) {\r\n    for (int i=0;i<index;i++) {\r\n        if (str[i]==str[index]) {\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nint solve() {\r\n    int len;\r\n    scanf(\"%d\",&len);\r\n    char str[len];\r\n    scanf(\"%s\",str);\r\n    for (int i=0;i<len;i++) {\r\n        if (occuredbefore(str,i)==1 && str[i]!=str[i-1]) {\r\n            printf(\"NO\\n\");\r\n            return 1;\r\n        }\r\n    }\r\n    printf(\"YES\\n\");\r\n    return 0;\r\n}\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0;i<t;i++) {\r\n        solve();\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint occuredbefore(char* str,int index) {\r\n    for (int i=0;i<index;i++) {\r\n        if (str[i]==str[index]) {\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nint solve() {\r\n    int len;\r\n    scanf(\"%d\",&len);\r\n    char str[len];\r\n    scanf(\"%s\",str);\r\n    for (int i=0;i<len;i++) {\r\n        if (occuredbefore(str,i)==1 && str[i]!=str[i-1]) {\r\n            printf(\"NO\\n\");\r\n            return 1;\r\n        }\r\n    }\r\n    printf(\"YES\\n\");\r\n    return 0;\r\n}\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0;i<t;i++) {\r\n        solve();\r\n    }\r\n}"}
{"similarity_score": 0.9010989010989011, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a5f0d2b1899735a984a94e6e47bf5d69", "bug_code_uid": "f169201e36b035adf8a42ecb5f08dfb6", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "4e0ea38182b52b9d9f0e8c3433a28283", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\nint main()\n{\n int x,n,i=0;\n scanf(\"%d%d\",&n,&x);\n int a[n];\n int freq[100000];\n for(i=0;i<100000;i++)\n {\n     freq[i]=0;\n }\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&a[i]);\n     freq[a[i]-1]+=1;\n }\n long long int xx=0;\n int k;\n long long int yy;\n for(i=0;i<n;i++)\n {\n     k=a[i]^x;\n     yy=(long long)freq[k-1];\n     if(k>0&&k<100001)\n     xx+=yy;\n }\n if(x==0)\n    xx-=n;\n xx=xx/2;\n printf(\"%I64d\",xx);\n return 0;", "fixed": "#include <stdio.h>\n#include<stdlib.h>\nint main()\n{\n int x,n,i=0;\n scanf(\"%d%d\",&n,&x);\n int a[n];\n int freq[100000];\n for(i=0;i<100000;i++)\n {\n     freq[i]=0;\n }\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&a[i]);\n     freq[a[i]-1]+=1;\n }\n long long int xx=0;\n int k;\n long long int yy;\n for(i=0;i<n;i++)\n {\n     k=a[i]^x;\n     if(k>0&&k<100001)\n     {\n     yy=(long long)freq[k-1];\n     xx+=yy;\n     }\n }\n if(x==0)\n    xx-=n;\n xx=xx/2;\n printf(\"%I64d\",xx);\n return 0;\n}"}
{"similarity_score": 0.8366228070175439, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a4b808a88c293bfe60691198d172f3aa", "bug_code_uid": "63321938441cf347498a131c2685c71e", "src_uid": "a67ea891cd6084ceeaace8894cf18e60", "apr_id": "ae97c8124c63bd7cdc8f957185e78c62", "difficulty": 1600, "tags": ["greedy", "graphs", "math", "dsu", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nvoid swap(int,int);\nint *ar;\nchar c;\nint main(){\n\tint n,**mat,i,j,k;\n\tscanf(\"%d\",&n);\n\tar=(int *)malloc(sizeof(int)*n);\n\tmat=(int **)malloc(sizeof(int *)*n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d \",ar+i);\n\t\tmat[i]=(int *)malloc(sizeof(int)*n);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tc=getchar();\n\t\t\tmat[i][j]=c-'0';\n\t\t}\n\t\tgetchar();\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tif(mat[i][j]==1){\n\t\t\t\tfor(k=0;k<n;k++){\n\t\t\t\t\tif(mat[j][k]==1){\n\t\t\t\t\t\tmat[i][k]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=i+1;j<n;j++){\n\t\t\tif(mat[i][j]&&ar[j]<ar[i]){\n\t\t\t\tswap(i,j);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tprintf(\"%d \",ar[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\t\n}\n\nvoid swap(int i,int j){\n\tint t;\n\tt=ar[i];\n\tar[i]=ar[j];\n\tar[j]=t;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nvoid swap(int,int);\nint *ar;\nchar c;\nint main(){\n\tint n,**mat,i,j,k;\n\tscanf(\"%d\",&n);\n\tar=(int *)malloc(sizeof(int)*n);\n\tmat=(int **)malloc(sizeof(int *)*n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d \",ar+i);\n\t\tmat[i]=(int *)malloc(sizeof(int)*n);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tc=getchar();\n\t\t\tmat[i][j]=c-'0';\n\t\t}\n\t\tgetchar();\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tif(mat[i][j]==1){\n\t\t\t\tfor(k=0;k<n;k++){\n\t\t\t\t\tif(mat[j][k]==1){\n\t\t\t\t\t\tmat[i][k]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tif(mat[i][j]==1){\n\t\t\t\tfor(k=0;k<n;k++){\n\t\t\t\t\tif(mat[j][k]==1){\n\t\t\t\t\t\tmat[i][k]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tif(mat[i][j]==1){\n\t\t\t\tfor(k=0;k<n;k++){\n\t\t\t\t\tif(mat[j][k]==1){\n\t\t\t\t\t\tmat[i][k]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=i+1;j<n;j++){\n\t\t\tif(mat[i][j]&&ar[j]<ar[i]){\n\t\t\t\tswap(i,j);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tprintf(\"%d \",ar[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\t\n}\n\nvoid swap(int i,int j){\n\tint t;\n\tt=ar[i];\n\tar[i]=ar[j];\n\tar[j]=t;\n}\n"}
{"similarity_score": 0.9943342776203966, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b1a3883eaee664ebfa109e2a583d1b05", "bug_code_uid": "500840bd79e7d73b6bd7925d1dac1c4a", "src_uid": "d85c7a8f7e6f5fc6dffed554bffef3ec", "apr_id": "e39920d2d461903e4424ce7942dbc8ed", "difficulty": 1400, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//Avanish K A\n\n#include <stdio.h>\nint n,i,j;\nlong long int cost=0,a[100],b[100],c[100];\nint sw(int x,int y){\n    for(i=0;i<n;i++){\n        if(y==i)\n            continue;\n        if(x==a[i]){\n            if(b[i]==a[1])\n                return 0;\n            return (sw(b[i],i));\n        }\n        else if(x==b[i]){\n            cost+=c[i];\n            if(a[i]==a[1])\n                return 0;\n            return(sw(a[i],i));\n        }\n    }\n    return 0;\n}\n\nint main()\n{\n    long long int sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n        sum+=c[i];}\n    sw(b[0],0);\n    if(cost>(sum-cost)){\n        cost=sum-cost;\n    }\n    printf(\"%d\",cost);\n    return 0;\n}", "fixed": "//Avanish K A\n\n#include <stdio.h>\nint n,i,j;\nlong long int cost=0,a[100],b[100],c[100];\nint sw(int x,int y){\n    for(i=0;i<n;i++){\n        if(y==i)\n            continue;\n        if(x==a[i]){\n            if(b[i]==a[1])\n                return 0;\n            return (sw(b[i],i));\n        }\n        else if(x==b[i]){\n            cost+=c[i];\n            if(a[i]==a[1])\n                return 0;\n            return(sw(a[i],i));\n        }\n    }\n    return 0;\n}\n\nint main()\n{\n    long long int sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n        sum+=c[i];}\n    sw(b[1],1);\n    if(cost>(sum-cost)){\n        cost=sum-cost;\n    }\n    printf(\"%d\",cost);\n    return 0;\n}"}
{"similarity_score": 0.26410564225690275, "equal_cnt": 18, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "c10f5972a93443986ce77a503e608d49", "bug_code_uid": "b1d3cb97d838fffae20ec28fd8c4d9c2", "src_uid": "98c08a3b5e5b5bb78804ff797ba24d87", "apr_id": "d3d7940f1a3dcf0ad923b0e2c13f6ba6", "difficulty": 1000, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<stdlib.h>\nint main() {\n\tint n,i,c,a,j,s=0;\n\twhile(~scanf(\"%d\",&n)) {\n\t\tfor(j=1; j<=n; j++) {i=j;\n\t\t\tdo {\n\t\t\t\ta=i%10;\n\t\t\t\tif(a!=0&&a!=1) break;\n\t\t\t\ti=i/10;\n \n\t\t\t} while(i!=0);\n\t\t\tif(i==0) s++;\n\t\t}\n\t\tprintf(\"%d\\n\",s);\n\t\ts=0;\n\t}\n\treturn 0;\n}\n ", "fixed": "#include<stdio.h>\n#include<string.h>\n \nchar s[100001];\n \nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%s\", s);\n\t\tif(strstr(s, \"aa\")!=NULL || strstr(s, \"bb\")!=NULL || strstr(s, \"cc\")!=NULL){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tint i, len;\n\t\tchar last='z';\n\t\tlen=strlen(s);\n\t\tfor(i=0;i<len;++i){\n\t\t\tif(s[i]=='?'){\n\t\t\t\tif('a'!=last && 'a'!=s[i+1]) putchar(last='a');\n\t\t\t\telse if('b'!=last && 'b'!=s[i+1]) putchar(last='b');\n\t\t\t\telse putchar(last='c');\n\t\t\t}\n\t\t\telse putchar(last=s[i]);\n\t\t}\n\t\tputchar(10);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9035222052067381, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "2d211d92887b87a08c9b981635cb050a", "bug_code_uid": "b991e60e96c1fd75aeda48f77701b44a", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "2891f8279edbb84465ded773820bfc26", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tlong int n,x,d,stock,count=0;\n\tchar sign,dummy;\n\tscanf(\"%ld %ld\",&n,&x);\n\tstock=x;\n\twhile(n--)\n\t{\n\t\tscanf(\" %c%c\",&sign,&dummy);\n\t\tscanf(\"%ld\",&d);\n\t\tif(sign=='+')\n\t\t\tstock+=d;\n\t\telse\n\t\t{\n\t\t\tif(stock-d>=0)\n\t\t\t\tstock-=d;\n\t\t\telse\n\t\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%ld %ld\",stock,count);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long int n,x,d,stock,count=0;\n\tchar sign,dummy;\n\tscanf(\"%lld %lld\",&n,&x);\n\tstock=x;\n\twhile(n--)\n\t{\n\t\tscanf(\" %c\",&sign);\n\t\tscanf(\"%lld\",&d);\n\t\tif(sign=='+')\n\t\t\tstock+=d;\n\t\telse\n\t\t{\n\t\t\tif(stock-d>=0)\n\t\t\t\tstock-=d;\n\t\t\telse\n\t\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%lld %lld\\n\",stock,count);\n\treturn 0;\n}"}
{"similarity_score": 0.8209366391184573, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "425e850e4a6e0af3cd2d148de22d46f4", "bug_code_uid": "f6f9c602777dfffc96cd91e4fe32db46", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "99adc8172f6b2abc0779f1b4cd817ed6", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n\tint i,j,n,sum[3];\n\tscanf(\"%d\",&n);\n\tint a[3][n];\n\tsum[0]=0;sum[1]=0;sum[2]=0;\n\tfor(i=0;i<n;i++)\n\tfor(j=0;j<3;j++){\n\tscanf(\"%d\",&a[i][j]);\n\tsum[j]+=a[i][j];\n\t}\n\t\n\t\n\t\n\tif ((sum[0] == 0) && (sum[1] == 0) && (sum[2] == 0)) printf(\"YES\");\n\telse printf(\"NO\");\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n\tint i,j,n,sum[3];\n\tscanf(\"%d\",&n);\n\tint a[3][n];\n\tsum[0]=0;sum[1]=0;sum[2]=0;\n\tfor(j=0;j<n;j++)\n\tfor(i=0;i<3;i++){\n\t\tscanf(\"%d\",&a[i][j]);\n\t\tsum[i]+=a[i][j];\n\t}\n\t\n\t\n\t//printf(\"%d %d %d\",sum[0],sum[1],sum[2]);\n\tif ((sum[0] == 0) && (sum[1] == 0) && (sum[2] == 0)) printf(\"YES\");\n\telse printf(\"NO\");\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.7438330170777988, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "01099a5e4380ebf6afe4b4d22535cd2b", "bug_code_uid": "e7f5701f80d53596f8a39ef909020f98", "src_uid": "2f659be28674a81f58f5c587b6a0f465", "apr_id": "59567fbca8184f642bc97c4361916720", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    if( (k==1 && n != 1) || k>n)\n        printf(\"-1\");\n //   char a[n];\n    int i;\n    char a[n];\n\n    for(i=0;i<n;i++)\n    {\n        if(i%2 == 0 )\n            a[i]='a';\n        else\n            a[i]='b';\n    }\n    i=n-1;\n    k-=2;\n    while(k--)\n    {\n        a[i]=('c'+k);\n        i--;\n    }\n    for(i=0;i<n;i++)\n    printf(\"%c\",a[i]);\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\n\n\nint main()\n{\n  //  freopen(\"as.txt\",\"r\",stdin);\n   // freopen(\"Out.txt\",\"w\",stdout);\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    if( (k==1 && n != 1) || k>n)\n       {\n           printf(\"-1\\n\");\n\n\n       }\n    else\n    {\n\n\n    int i;\n    char a[n];\n\n    for(i=0;i<n;i++)\n    {\n        if(i%2 == 0 )\n            a[i]='a';\n        else\n            a[i]='b';\n    }\n    i=n-1;\n      if(k==1)\n    {\n        printf(\"a\\n\");\n        return 0;\n    }\n    k-=2;\n\n    while(k--)\n    {\n        a[i]=('c'+k);\n        i--;\n    }\n\n        for(i=0;i<n;i++)\n    printf(\"%c\",a[i]);\n    printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5333333333333333, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "f08627bb2a55a2f26999e6fb40d0cc82", "bug_code_uid": "5954fefc44603e416255a5b827c034b3", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "b7161c0b0ed6122230375b3478366c0d", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100000];\n    int l, j, max=-999, i, index, ind;\n    scanf(\"%s\", s);\n    l=strlen(s);\n    for(i=0; i<l; i++)\n    {\n        j=s[i]-'0';\n        if(j%2==0){\n            if(j>max)\n            {\n            max=j;\n            index=i;\n            }\n            else if(j==max)\n            {\n                ind=i;\n            }\n        }\n    }\n    if(max==-999){\n        printf(\"-1\\n\");\n    }\n    else{\n        if(max>=(s[l-1]-48)){\n        int swap=s[l-1]-'0';\n        s[l-1]=s[ind];\n        s[ind]=swap+'0';\n        }\n        else{\n        int swap=s[l-1]-'0';\n        s[l-1]=s[index];\n        s[index]=swap+'0';\n\n        }\n\n    printf(\"%s\\n\", s);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100000];\n    int l, j, max=999, i, index,swap,even, flag=0;\n    scanf(\"%s\", s);\n    l=strlen(s);\n    for(i=0; i<l; i++)\n    {\n        j=s[i]-'0';\n        if(j%2==0){\n            even++;\n            index=i;\n            if(s[i]<s[l-1]){\n                swap=s[i]-'0';\n                s[i]=s[l-1];\n                s[l-1]=swap+'0';\n                flag=1;\n                break;\n            }\n        }\n    }\n    if(even==0)\n        printf(\"-1\\n\");\n    else{\n    if(flag==0)\n    {\n        swap=s[index]-'0';\n        s[index]=s[l-1];\n        s[l-1]=swap+'0';\n    }\n    printf(\"%s\\n\", s);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9411764705882353, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6a08a40f73e2b9e24e6dc76c02a3c995", "bug_code_uid": "e58fe2b6286e22674b02f5f1621122e6", "src_uid": "2031f2ac5652609fda77830e93ffcc2c", "apr_id": "1376c6da02632e18ab26677bddd793a1", "difficulty": 1200, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, i, j, o;\n    int *a, *b;\n\n    scanf(\"%d\", &n);\n\n    a = (int *) malloc(n * sizeof(int));\n    b = (int *) malloc(n * sizeof(int));\n\n    for (i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n\n    for (o = 0; o < n && a[o] != 0; o++) { }\n\n    for (i = 0; i < o + 1; i++) {\n        b[o - i] = i;\n    }\n\n    for ( ;; ) {\n        for (i = o + 1; i < n && a[i] != 0; i++) { }\n\n        if (i == n) {\n            for (i = o; i < n; i++) {\n                b[i] = i - o;\n            }\n\n            break;\n        } else {\n            for (j = 0; j < (i - o) / 2; j++) {\n                b[o + j] = j;\n                b[i - j] = j;\n            }\n\n            if ((i - o) % 2 != 0) {\n                b[(i + o) / 2] = (i - o) / 2 + 1;\n            }\n\n            o = i;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        printf(\"%d \", b[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, i, j, o;\n    int *a, *b;\n\n    scanf(\"%d\", &n);\n\n    a = (int *) malloc(n * sizeof(int));\n    b = (int *) malloc(n * sizeof(int));\n\n    for (i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n\n    for (o = 0; o < n && a[o] != 0; o++) { }\n\n    for (i = 0; i < o + 1; i++) {\n        b[o - i] = i;\n    }\n\n    for ( ;; ) {\n        for (i = o + 1; i < n && a[i] != 0; i++) { }\n\n        if (i == n) {\n            for (i = o; i < n; i++) {\n                b[i] = i - o;\n            }\n\n            break;\n        } else {\n            for (j = 0; j < (i - o) / 2 + 1; j++) {\n                b[o + j] = j;\n                b[i - j] = j;\n            }\n\n            o = i;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        printf(\"%d \", b[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.27107061503416857, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "7d899f1b80f152d8be5e814a30290902", "bug_code_uid": "474c186c7e4856694a217d1c1d135742", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "4ea708beeaf5501a14a91810ebe462aa", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int a,b,c,d;\r\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n       if(a>b && a>c && a>d){\r\n           printf(\"0\");\r\n       }\r\n       else if((a<b && a>c && a<d)||(a>b && a<c && a<d)||(a<b && a<c && a>d)){\r\n           printf(\"1\");\r\n       }\r\n       else if((a<b && a<c && a>d)||(a>b && a<c && a<d)||(a<b && a>c && a<d)){\r\n           printf(\"2\");\r\n       }\r\n       else{\r\n           printf(\"3\");\r\n       }\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int a[4];\r\n        for(int i=0;i<4;i++){\r\n            scanf(\"%d\",&a[i]);\r\n            \r\n        }\r\n        int temp=a[0],c=0;\r\n        for(int i=1;i<4;i++){\r\n            if(a[i]>temp){\r\n                c++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",c);\r\n    }    \r\n    return 0;\r\n}       "}
{"similarity_score": 0.9988974641675854, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1503668890c4132f8e2442e204aa04d4", "bug_code_uid": "7012c070864edfb6ec3206e12e06278d", "src_uid": "471f80e349e70339eedd20d45b16e253", "apr_id": "9b06ed5a534b0190afad0a945036ec0c", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t,p;\n\tscanf(\"%d\",&t);\n\tfor(p=0;p<t;p++)\n\t{\n\tint n,a,b,ti=0,i;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d %d\",&a,&b);\n\tti=a+1;\n\tprintf(\"%d \",a);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n        if(ti<a)\n        {\n\t\t\tti=a+1;\n\t\t\tprintf(\"%d \",a);\n\t\t}\n        else if(ti>a)\n        {\n\t\t\tif(ti<b)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",ti);\n\t\t\t\tti=ti+1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tprintf(\"0 \");\n\t\t}\n        else\n\t\t{\n\t\t\tprintf(\"%d \",ti);\n\t\t\tti++;\n\t\t}\t\t\t\n\t}\n\t}\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t,p;\n\tscanf(\"%d\",&t);\n\tfor(p=0;p<t;p++)\n\t{\n\tint n,a,b,ti=0,i;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d %d\",&a,&b);\n\tti=a+1;\n\tprintf(\"%d \",a);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n        if(ti<a)\n        {\n\t\t\tti=a+1;\n\t\t\tprintf(\"%d \",a);\n\t\t}\n        else if(ti>a)\n        {\n\t\t\tif(ti<=b)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",ti);\n\t\t\t\tti=ti+1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tprintf(\"0 \");\n\t\t}\n        else\n\t\t{\n\t\t\tprintf(\"%d \",ti);\n\t\t\tti++;\n\t\t}\t\t\t\n\t}\n\t}\n}"}
{"similarity_score": 0.8624161073825504, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "839bf68f811934cb750d44d2fc70dad9", "bug_code_uid": "e4964b6126d477e08c069ddbef0974e7", "src_uid": "f9b56b3fddcd5db0d0671714df3f8646", "apr_id": "98e0fb570ea4883a8cfacbecb5c6d178", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a, b, c, d;\n\tint ZA[101];\n\n\tscanf(\"%d\", &a);\n\tfor (b = 1; b <= 100; ZA[b++] = 0);\n\twhile (a--) {\n\t\tscanf(\"%d\", &b);\n\t\tZA[b] += 1;\n\t}\n\tc = 0;\n\tfor (b = 1; b <= 100; ++b) {\n\t\tc += ZA[b] / 4;\n\t\td += ZA[b] % 4 / 2;\n\t}\n\tprintf(\"%d\\n\", c + d / 2);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint a, b, c, d;\n\tint ZA[101];\n\n\tfor (b = 1; b <= 100; ZA[b++] = 0);\n\tscanf(\"%d\", &a);\n\twhile (a--) {\n\t\tscanf(\"%d\", &b);\n\t\tZA[b] += 1;\n\t}\n\tc = 0;\n\td = 0;\n\tfor (b = 1; b <= 100; ++b) {\n\t\tc += ZA[b] / 4;\n\t\td += ZA[b] % 4 / 2;\n\t}\n\tprintf(\"%d\\n\", c + d / 2);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.2440677966101695, "equal_cnt": 16, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "00c3ca164c814acff08df0b5adad3da8", "bug_code_uid": "33143a9d4c24661acad895d2d66838b7", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "6cc602d7ee310df1969fd745a0b22186", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint charcheck(char *a,int i){\n\tint flag;\n\tif(a[i]=='a' || a[i]=='e' || a[i]=='i' || a[i]=='o' || a[i]=='u')\n\t\tflag=1;\n\telse \n\t\tflag=0;\n\treturn flag;\n\t}\n\t\nint main(){\n\tchar s[200],t[200];\n\tint i,f,x,y;\n\tf=0;\n\tgets(s);\n\tgets(t);\n\tif(strlen(s)==strlen(t)){\n\t\tfor(i=0;i<strlen(s);i++){\n\t\t\tif(charcheck(&s,i)!=charcheck(&t,i)){\t\t\t\t\n\t\t\t\tprintf(\"NO\");\n\t\t\t\texit(0);\n\t\t\t}}\n\t\t\tprintf(\"YES\");\n\t}\n\telse{\n\t\tprintf(\"NO\");\n\t}\n\treturn 0;\n}\n\t\t\t", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nchar s[1000],t[1000];\n\nint isvowel(char ch)\n{\n\tif(ch=='a'|ch=='e'|ch=='i'|ch=='o'|ch=='u')\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\n\nint main()\n{\n\n\tscanf(\"%s\",s);\n\tscanf(\"%s\",t);\n\n\tint ls=strlen(s),lt=strlen(t);\n\n\tif(ls==lt)\n\t{\n\t\t\n\n\t\n\t\tfor(int i=0;i<ls;i++)\n\t\t{\n\t\t\tif(isvowel(s[i])!=isvowel(t[i]))\n\t\t\t{\n\t\t\t\tprintf(\"No\");\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\n\t\tprintf(\"Yes\");\n\t}\n\telse\n\t{\n\t\tprintf(\"No\");\n\t}\n}"}
{"similarity_score": 0.9901315789473685, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f9c4e4c9a1f2a8bac0e363ba8523ee11", "bug_code_uid": "ba8fd1f1bd0db85fe967ec69992c627c", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "c065586e4a26bbced0720e30ff8dea2a", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i, j;\n    scanf(\"%d\",&i);\n    int arr[i];\n    for(j=0;j<i;j++)\n    {\n        scanf(\"%d\",&arr[j]);\n    }\n    for(;j>=0;j--)\n    {\n        arr[j]=(arr[j]*2)-1;\n    }\n    for(j=0;j<i;j++)\n    {\n        printf(\"%d \\n\",arr[j]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i, j;\n    scanf(\"%d\",&i);\n    int arr[i];\n    for(j=0;j<i;j++)\n    {\n        scanf(\"%d\",&arr[j]);\n    }\n    for(;j>=0;j--)\n    {\n        arr[j]=(arr[j]);\n    }\n    for(j=0;j<i;j++)\n    {\n        printf(\"%d \\n\",arr[j]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8967777170944838, "equal_cnt": 36, "replace_cnt": 4, "delete_cnt": 24, "insert_cnt": 7, "fix_ops_cnt": 35, "lang": "GNU C11", "fix_code_uid": "54b7b1cdfa934ad37405e582748300f9", "bug_code_uid": "71e206a9296e9fa80f570371691b2a4b", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "0a87b1dd49ec46213def1160d7d9f7c7", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int length,j=0,q,i,k,n=0,p,w=1,x,l=0,m;\n    char s[10000000], word[10000000],s2[10000000000];\n    scanf(\"%s\",&s);\n    scanf(\"%d\",&k);\n    m=k;\n\n    length=strlen(s);\n    p=length/k;\nq=p*w;\n    i=0;\n    j=0;\n    if(length%k!=0){\n        n=1;\n    }\n\n        for(;q<=length&&j<length&&j<q&&n!=1;j++)\n        {\n\n\n            word[i]=s[j];\n            i++;\n            if(j==(q)-1)\n            {\n                word[i]='\\0';\n                strcpy(s2,word);\n                j=p-1;\n                i=0;\n                w++;\n                q=p*w;\n\n                strrev(word);\n                x=strcmp(s2,word);\n                if(x==0)\n                {\n                    continue;\n\n\n                }\n                else\n\n                {n=1;\n                    break;\n                }\n\n            }\n        }\n\n    if(n==1){\n        printf(\"NO\");\n    }\n    else{\n        printf(\"YES\");\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n     int length,j=0,q,i,k,n=0,p,w=1,x,l=0,m;\n    char s[10000], word[10000],s2[10000];\n    scanf(\"%s\",&s);\n    scanf(\"%d\",&k);\n    m=k;\n    length=strlen(s);\n    p=length/k;\n    q=p*w;\n    i=0;\n    j=0;\n    if(length%k!=0)\n    {\n        n=1;\n    }\n    for(; q<=length&&j<length&&j<q&&n!=1; j++)\n    {\n        word[i]=s[j];\n        i++;\n        if(j==(q)-1)\n        {\n            word[i]='\\0';\n            strcpy(s2,word);\n            j=q-1;\n            i=0;\n            w++;\n            q=p*w;\n            strrev(word);\n            x=strcmp(s2,word);\n            if(x==0)\n            {\n                continue;\n            }\n            else\n            {\n                n=1;\n                break;\n            }\n        }\n    }\n    if(n==1)\n    {\n        printf(\"NO\");\n    }\n    else\n    {\n        printf(\"YES\");\n    }\n}\n"}
{"similarity_score": 0.7644305772230889, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e60a561e30db16d9bbc92f0b8ecf8858", "bug_code_uid": "41a15f23c412eefa434731e3f2fc43cb", "src_uid": "1956e31a9694b4fd7690f1a75028b9a1", "apr_id": "1f53230583b6e27f76b70c13d36e8421", "difficulty": 1000, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint i,ans=0;\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]+a[i+1]<k)\n\t\t{\tans=(k-(a[i]+a[i+1]));\n\t\t\n\t\t\ta[i+1]=a[i+1]+k-( a[i]+a[i+1]);\n\t\t\t\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d \",a[i]);\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint i,ans=0;\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif(a[i]+a[i+1]<k)\n\t\t{\tans=ans+k-a[i]-a[i+1];\n\t\t\t\n\t\t\ta[i+1]=a[i+1]+k-( a[i]+a[i+1]);\n\t\t\t\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d \",a[i]);\n\t}\n}\n"}
{"similarity_score": 0.8495821727019499, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4766796fa0a3ef6f3c88428803561c34", "bug_code_uid": "e860876671cad2ae707d58ea59d7e9f3", "src_uid": "bd9da9081902a87c61591fb58fcecfe3", "apr_id": "11533e7e0cb4cd41512f4850ba15adf7", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <string.h>\n#include <ctype.h>\n\nint solve() {\n\tint i, c, c1,c2,c3;\n\n\twhile(isspace(c=getchar())) ;\n\n\t//printf(\"c== %c\\n\", c);\n\ti = 0;\n\tfor(;;) {\n\t\t//printf(\"i==%d, c== %c\\n\", i, c);\n\t\tc1 = c;\n\t\tif (isspace(c1) || c1 == EOF) break;\n\t\ti++;\n\t\tc2 = getchar();\n\t\tif (isspace(c2)  || c2 == EOF) break;\n\t\twhile (c2 == c1) c2 = getchar();\n\t\tc3 = getchar();\n\t\tif (isspace(c3)  || c3 == EOF) break;\n\t\twhile(c3 == c2 || c3 == c1) c3 = getchar();\n\t\twhile((c=getchar()) == c1 || c==c2 || c==c3) ;\n\t}\n\tprintf(\"%d\\n\", i);\n}\n\n\nint main() {\n\tint i,t;\n\tscanf(\"%d\", &t);\n\tfor(i=0; i<t; i++) solve();\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <string.h>\n#include <ctype.h>\n\nint solve() {\n\tint i, c, c1,c2,c3;\n\n\twhile(isspace(c=getchar())) ;\n\n\t//printf(\"c== %c\\n\", c);\n\ti = 0;\n\tfor(;;) {\n\t\t//printf(\"i==%d, c== %c\\n\", i, c);\n\t\tc1 = c;\n\t\tif (isspace(c1) || c1 == EOF) break;\n\t\ti++;\n\t\tc2 = getchar();\n\t\tif (isspace(c2)  || c2 == EOF) break;\n\t\twhile (c2 == c1) c2 = getchar();\n\t\tif (isspace(c2)  || c2 == EOF) break;\n\t\tc3 = getchar();\n\t\tif (isspace(c3)  || c3 == EOF) break;\n\t\twhile(c3 == c2 || c3 == c1) c3 = getchar();\n\t\tif (isspace(c3)  || c3 == EOF) break;\n\t\twhile((c=getchar()) == c1 || c==c2 || c==c3) ;\n\t\t//printf(\"c,c1,c2,c3==%c %c %c %c\\n\", c, c1, c2, c3);\n\t}\n\tprintf(\"%d\\n\", i);\n}\n\n\nint main() {\n\tint i,t;\n\tscanf(\"%d\", &t);\n\tfor(i=0; i<t; i++) solve();\n}\n"}
{"similarity_score": 0.9916461916461916, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3e20f1a354330a0e20736a11f219ffe5", "bug_code_uid": "1730b4efa5dee7317b29043095fbe371", "src_uid": "c36f4bb34543476abc31fe986032122d", "apr_id": "3680bb5b4e467bc3410a54f791c59410", "difficulty": 1400, "tags": ["dsu", "dfs and similar", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint pa[30000], rk[30000], tCnt[30000];\n// parent, rank, and number of nodes in the subtree (if it is the root)\nvoid init(int n) {\n    int i;\n    for(i=0;i<n;i++)\n    {\n        pa[i]=i; tCnt[i]=1; rk[i]=0;\n    }\n}\nint find(int x) {\n    int a=x;\n    while(pa[a]!=a) a=pa[a]; int b=x,c; while(pa[b]!=a)\n    {\n        c=pa[b];\n        pa[b]=a;\n        b=c;\n    }\n    return(a);\n}\nvoid fUnion(int x, int y) {\n    int ax=find(x);\n    int ay=find(y);\n    if(ax==ay) return;\n    if(rk[ay]>rk[ax]) {\n        int aux = ay;\n        ay = ax;\n        ax = aux;\n    }\n    if(rk[ax]==rk[ay]) rk[ax]++; pa[ay]=ax;\n    tCnt[ax]+=tCnt[ay];\n}\n\n\nint main() {\n    int n,m,i,x,y;\n    long long counter = 1;\n    scanf(\"%d %d\",&n,&m);\n    init(n);\n    for (i=0; i<m; i++) {\n        scanf(\"%d %d\",&x,&y);\n        fUnion(x-1,y-1);\n    }\n    for (i=0; i<n; i++) {\n        if (tCnt[i] > 1) {\n            counter *= pow(2,tCnt[i]-1);\n        }\n    }\n    printf(\"%lld\\n\",counter);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint pa[30000], rk[30000], tCnt[30000];\n// parent, rank, and number of nodes in the subtree (if it is the root)\nvoid init(int n) {\n    int i;\n    for(i=0;i<n;i++)\n    {\n        pa[i]=i; tCnt[i]=1; rk[i]=0;\n    }\n}\nint find(int x) {\n    int a=x;\n    while(pa[a]!=a) a=pa[a]; int b=x,c; while(pa[b]!=a)\n    {\n        c=pa[b];\n        pa[b]=a;\n        b=c;\n    }\n    return(a);\n}\nvoid fUnion(int x, int y) {\n    int ax=find(x);\n    int ay=find(y);\n    if(ax==ay) return;\n    if(rk[ay]>rk[ax]) {\n        int aux = ay;\n        ay = ax;\n        ax = aux;\n    }\n    if(rk[ax]==rk[ay]) rk[ax]++; pa[ay]=ax;\n    tCnt[ax]+=tCnt[ay];\n    tCnt[ay]=0;\n}\n\n\nint main() {\n    int n,m,i,x,y;\n    long long counter = 1;\n    scanf(\"%d %d\",&n,&m);\n    init(n);\n    for (i=0; i<m; i++) {\n        scanf(\"%d %d\",&x,&y);\n        fUnion(x-1,y-1);\n    }\n    for (i=0; i<n; i++) {\n        if (tCnt[i] > 1) {\n            counter *= pow(2,tCnt[i]-1);\n        }\n    }\n    printf(\"%lld\\n\", counter);\n    \n    return 0;\n}"}
{"similarity_score": 0.9426020408163265, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "7569d047593df37987866951b3869b20", "bug_code_uid": "55a063741ebfed43b4a45a877d2296a2", "src_uid": "faae9c0868b92b2355947c9adcaefb43", "apr_id": "b9374c2c1172797663f1d11f3f7356db", "difficulty": 1100, "tags": ["binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\n\nint main()\n{\n    int t,n,s,k,i,j,cnt,cmt,fla,flg,sum,m,a[100001],b;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\",&n,&s,&k);\n        for(i=0;i<k;i++) scanf(\"%d\",&a[i]);\n\n        cnt=0;cmt=0;\n\n        for(i=s;i<=n+1;i++)\n        {\n            fla=1;\n            for(j=0;j<k;j++)\n                if(a[j]==i){fla=0;  cnt++;}\n            if(fla) break;;\n\n        }\n        for(k=s;k>=0;k--)\n        {\n            flg=1;\n            for(j=0;j<k;j++)\n                if(a[j]==k){flg=0; cmt++;}\n            if(flg) break;\n        }\n        if(k==0) printf(\"%d\\n\",cnt);\n        else if(i==n+1) printf(\"%d\\n\",cmt);\n        else {\n            if(cnt>cmt) printf(\"%d\\n\",cmt);\n            else printf(\"%d\\n\",cnt);\n        }\n    }\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,s,k,i,j,p,cnt,cmt,fla,flg,sum,m,a[100001],b;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\",&n,&s,&k);\n        for(i=0;i<k;i++) scanf(\"%d\",&a[i]);\n\n        cnt=0;cmt=0;\n\n        for(i=s;i<=n+1;i++)\n        {\n            fla=1;\n            for(j=0;j<k;j++)\n                if(a[j]==i){fla=0;  cnt++; break;}\n            if(fla) break;\n\n        }\n        for(p=s;p>=0;p--)\n        {\n            flg=1;\n            for(j=0;j<k;j++)\n                if(a[j]==p){flg=0; cmt++; break;}\n            if(flg) break;\n        }\n        if(p==0){ printf(\"%d\\n\",cnt);}\n        else if(i==(n+1)) printf(\"%d\\n\",cmt);\n        else {\n            if(cnt>cmt) printf(\"%d\\n\",cmt);\n            else printf(\"%d\\n\",cnt);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7967980295566502, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "5563cb5be8c9f98498be7a30958fb644", "bug_code_uid": "a6762679628f6e0e003b31eea1fa7bc4", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "bb65f3840dd12f3ddf7ce7813707a114", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include\"stdio.h\"\n\ntypedef struct \n{\n\tint a1, a2, b1, b2;\n}xx\n\nint main()\n{\n\tint n;\n\txx in[10000];\n\tscanf(\"%d\",&n);\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\", &in[i].a1, &in[i].b1);\n\t\tscanf(\"%d%d\", &in[i].a2, &in[i].b2);\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif( in[i].a1 == in[i].a2 )\n\t\t{\n\t\t\tif( in[i].b1+in[i].b2 == in[i].a1 )\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\n\t\t}\n\t\telse if( in[i].a1 == in[i].b2 )\n\t\t{\n\t\t\tif( in[i].b1+in[i].a2 == in[i].a1 )\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\n\t\t}\n\t\telse if( in[i].b1 == in[i].b2 )\n\t\t{\n\t\t\tif( in[i].a1+in[i].a2 == in[i].b1 )\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\n\t\t}\n\t\telse if( in[i].b1 == in[i].a2 )\n\t\t{\n\t\t\tif( in[i].a1+in[i].b2 == in[i].b1 )\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\n\t\t}\n\t\telse printf(\"NO\\n\");\n\t}\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include\"stdio.h\"\n\ntypedef struct \n{\n\tint a1, a2, b1, b2;\n}xx;\n\nint main()\n{\n\tint n;\n\txx in[10000];\n\tscanf(\"%d\",&n);\n\tint i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\", &in[i].a1, &in[i].b1);\n\t\tscanf(\"%d%d\", &in[i].a2, &in[i].b2);\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint flag = 0;\n\t\tif( in[i].a1 == in[i].a2 )\n\t\t{\n\t\t\tif( in[i].b1+in[i].b2 == in[i].a1 )\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\t\tif( flag==0 && in[i].a1 == in[i].b2 )\n\t\t{\n\t\t\tif( in[i].b1+in[i].a2 == in[i].a1 )\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\t\tif( flag==0 && in[i].b1 == in[i].b2 )\n\t\t{\n\t\t\tif( in[i].a1+in[i].a2 == in[i].b1 )\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\t\tif( flag==0 && in[i].b1 == in[i].a2 )\n\t\t{\n\t\t\tif( in[i].a1+in[i].b2 == in[i].b1 )\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\t\tif(flag==0) printf(\"NO\\n\");\n\t}\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9910714285714286, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f4162226a2613a3c2c7067b6432661b3", "bug_code_uid": "4ca8b88bda979a39c8f72b598126300e", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "5d7c83c81e9735384ad0cfc5c228b29a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int count = 0;\n    int a;\n    scanf(\"%d\", &a);\n    int rem = a % 10;\n    n -= 1;\n    while(n--) {\n        scanf(\"%d\", &a);\n        int rem1 = a / 10;\n        if(rem1 != rem)\n            count += 1;\n        rem = a % 10;\n    }\n    printf(\"%d\", count);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int count = 0;\n    int a;\n    scanf(\"%d\", &a);\n    int rem = a % 10;\n    n -= 1;\n    while(n--) {\n        scanf(\"%d\", &a);\n        int rem1 = a / 10;\n        if(rem1 == rem)\n            count += 1;\n        rem = a % 10;\n    }\n    printf(\"%d\", count + 1);\n    return 0;\n}"}
{"similarity_score": 0.5344827586206896, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "52f2a038bd5fd5fac242ae0c2d8fc7ed", "bug_code_uid": "4bc9ba79b90d8e5ac48f7adaa4f03674", "src_uid": "d9d5db63b1e48214d02abe9977709384", "apr_id": "1ee4bb38596cbdbb914cd38b8f68e3ec", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n  int arr[26];\n  int n1,n,j,i;\n  scanf(\"%d%d\",&n,&n1);\n  char c[27];\n  scanf(\"%s\",c);\n  int t=n;\n  for (i=0;i<n1;i++)\n  arr[i]=0;\n  for (i=0;i<n;++i)\n  {\n    j=c[i]-'A';\n    arr[j]++;\n  }\t\n  for (i=0;i<n1;i++)\n  {\n    if(t>arr[i])\n    t=arr[i];\n  }  \n  printf(\"%d\\n\",(t*n1)); \n  \n  return 0;\t\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n  int arr[26];\n  int n1,n,j,i,l;\n  scanf(\"%d%d\",&n,&n1);\n  char c[n];\n  scanf(\"%s\",c);\n  int t=n;\n  for(i=0;i<n1;i++)\n  {\n    int cnt=0;\n    for(j=0;j<n;j++)\n    {\n       l=c[j]-'A';\n       if(i==l)\n       cnt++;\n    }\n    if(t>cnt)\n    t=cnt;\n  }  \n  printf(\"%d\\n\",(t*n1)); \n  \n  return 0;\t\n}\n    \n"}
{"similarity_score": 0.9742738589211618, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6aa58363ad1625c2e24f2b38080fb379", "bug_code_uid": "15af4a24df6c3cf452a0f472f9d9f1b4", "src_uid": "8f00837e04627e445dfb8b6cd0216640", "apr_id": "5f50a31fe289b5e4abe9b0084131cf64", "difficulty": 900, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h> \nint t,a[4000],n,b[4000],sum1,sum2,num,flag;\nchar c[4000];\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tsum1=0,sum2=0,num=0,flag=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tb[i]=0;\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%s\",c);\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ta[i]=c[i]-'0';\n\t\t\tif(a[i]&1)\n\t\t\t{\n\t\t\t\tb[i]=1;\n\t\t\t\tsum1+=a[i];\n\t\t\t\tnum++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb[i]=2;\n\t\t\t\tsum2+=a[i];\n\t\t\t}\n\t\t}\n\t\tif(num>=2)\n\t\t{\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(b[i]==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\",a[i]);\n\t\t\t\t\tflag++;\n\t\t\t\t}\n\t\t\t\tif(flag==2)\n\t\t\t\t\tbreak;\t\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse if(sum1&1||(sum1==0&&sum2==0))\n\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h> \nint t,a[4000],n,b[4000],sum1,sum2,num,flag;\nchar c[4000];\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tsum1=0,sum2=0,num=0,flag=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tb[i]=0;\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%s\",c);\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ta[i]=c[i]-'0';\n\t\t\tif(a[i]&1)\n\t\t\t{\n\t\t\t\tb[i]=1;\n\t\t\t\tsum1+=a[i];\n\t\t\t\tnum++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb[i]=2;\n\t\t\t\tsum2+=a[i];\n\t\t\t}\n\t\t}\n\t\tif(num>=2)\n\t\t{\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(b[i]==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\",a[i]);\n\t\t\t\t\tflag++;\n\t\t\t\t}\n\t\t\t\tif(flag==2)\n\t\t\t\t\tbreak;\t\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.4036697247706422, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "6634bc547e32a6b3222d58840f8112f5", "bug_code_uid": "2730d17b82b19ebfb26ac95f2131f2e0", "src_uid": "dcf7988c35bb34973e7b60afa7a0e68c", "apr_id": "f7f29bec537aa16dbc85b801b8498fc7", "difficulty": 1700, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\nint main()\n{\n\tint l,r,x,n,m,i,pos[200005],j,flag=0;\n\twhile(scanf(\"%d%d\",&n,&m)!=EOF)\n\t{\n\t\tflag=0;\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&pos[i]);\n\t\t\tif(pos[i]!=pos[1])\n\t\t\tflag=1;\n\t\t}\n\t\tif(flag)\n\t\tfor(i=0;i<m;i++)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&l,&r,&x);\n\t\t\tfor(j=l;j<=r;j++)\n\t\t\t{\n\t\t\t\tif(pos[j]!=x)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(j>r)\n\t\t\tprintf(\"-1\\n\");\n\t\t\telse\n\t\t\tprintf(\"%d\\n\",j);\n\t\t\tflag=0;\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&l,&r,&x);\n\t\t\tif(x!=pos[0])\n\t\t\tprintf(\"%d\\n\",l);\n\t\t\telse\n\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include \"stdio.h\"\ntypedef struct{\n\tint pos;\n\tint times;\n}position;\nint main()\n{\n\tint l,r,x,n,m,i,j,same;\n\tposition pos[200005];\n\twhile(scanf(\"%d%d\",&n,&m)!=EOF)\n\t{\n\t\tscanf(\"%d\",&pos[1].pos);\n\t\tpos[1].times=1;\n\t\tsame=1;\n\t\tfor(i=2;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&pos[i].pos);\n\t\t\tif(pos[i].pos==pos[i-1].pos) same++;\n\t\t\telse same=1;\n\t\t\tpos[i].times=same;\n\t\t}\n\t\tfor(i=0;i<m;i++)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&l,&r,&x);\n\t\t\tfor(j=r;j>=l;j-=pos[j].times)\n\t\t\t{\n\t\t\t\tif(pos[j].pos!=x)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(j<l)\n\t\t\tprintf(\"-1\\n\");\n\t\t\telse\n\t\t\tprintf(\"%d\\n\",j);\t\t\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9968253968253968, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cb47c776c8f9ff8ddd26b5a6e2ebc723", "bug_code_uid": "3f43046eb8b302143f1177d9c33cd9a8", "src_uid": "044c2a3bafe4f47036ee81f2e40f639a", "apr_id": "2f59bc60248ae06932327e3e898606b1", "difficulty": 800, "tags": ["greedy", "implementation", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,d,c=0,z=0,flag=0,i,j;\r\n        scanf(\"%d %d\",&n,&d);\r\n        int arr[n];\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n            if(arr[i] > d)\r\n                flag=1;\r\n        }\r\n        if(flag==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n            z=1;\r\n        }\r\n        else if(flag==1)\r\n        {\r\n            for(i=0;i<n;i++)\r\n                for(j=0;j<n;j++)\r\n                {\r\n                    if(arr[i]+arr[j] < d)\r\n                        flag=0;\r\n                }\r\n        }\r\n        if(flag==1)\r\n            printf(\"NO\\n\");\r\n        else\r\n            if(z==0)\r\n            printf(\"YES\\n\");\r\n    }\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,d,c=0,z=0,flag=0,i,j;\r\n        scanf(\"%d %d\",&n,&d);\r\n        int arr[n];\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n            if(arr[i] > d)\r\n                flag=1;\r\n        }\r\n        if(flag==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n            z=1;\r\n        }\r\n        else if(flag==1)\r\n        {\r\n            for(i=0;i<n;i++)\r\n                for(j=i+1;j<n;j++)\r\n                {\r\n                    if(arr[i]+arr[j] <= d)\r\n                        flag=0;\r\n                }\r\n        }\r\n        if(flag==1)\r\n            printf(\"NO\\n\");\r\n        else\r\n            if(z==0)\r\n            printf(\"YES\\n\");\r\n    }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.7774445110977805, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "d3a6817cf149918e7d462a2282567923", "bug_code_uid": "e06d27b95ff7dc2bad4540115b6fd404", "src_uid": "04330cb392bcfd51d1acffd72c8004cb", "apr_id": "b45f5a318dfc786af526e24165ae77db", "difficulty": 1100, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nlong long gcd(long long a, long long b) { return (b == 0) ? a : gcd(b, a%b); }\r\n\r\nint count(long long n)\r\n{\r\n     int c = 0;\r\n     while(n > 0)\r\n     {\r\n          n /= 10;\r\n          c++;   \r\n     }\r\n     return c;\r\n}\r\n\r\nint main()\r\n{\r\n     int x,y,z,i,j,k,a,b,c,n,m,t;\r\n     long long x_,y_;\r\n     \r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n          scanf(\"%d %d %d\",&a,&b,&c);\r\n          x_ = 2;\r\n          y_ = 3;\r\n          while(count(x_) <= a) x_ *= 2;\r\n          while(count(y_) <= b) y_ *= 3;\r\n          \r\n          x_ /= 2;\r\n          y_ /= 3;\r\n          while(count(gcd(x_,y_)) < c)\r\n          {\r\n               while(1)\r\n               {\r\n                    y_ /= 3;\r\n                    y_ *= 2;\r\n                    if(count(y_) == b)\r\n                       break;   \r\n               }                  \r\n          } \r\n          \r\n          printf(\"%lld %lld\\n\",x_,y_);\r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nlong long gcd(long long a, long long b) { return (b == 0) ? a : gcd(b, a%b); }\r\n\r\nint count(long long n)\r\n{\r\n     int c = 0;\r\n     while(n > 0)\r\n     {\r\n          n /= 10;\r\n          c++;   \r\n     }\r\n     return c;\r\n}\r\n\r\nint main()\r\n{\r\n     int x,y,z,i,j,k,a,b,c,n,m,t;\r\n     long long x_,y_,z_;\r\n     \r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n          scanf(\"%d %d %d\",&a,&b,&c);\r\n          x_ = 2;\r\n          while(count(x_) < c) x_ *= 2;\r\n          y_ = z_ = x_;\r\n          \r\n          while(count(y_) < a) y_ *= 2;\r\n          while(count(z_) < b) z_ *= 3;\r\n           \r\n          \r\n          printf(\"%lld %lld\\n\",y_,z_);\r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.9079563182527302, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "47acdc3f38ecb4e0c1eb5c93a0903183", "bug_code_uid": "7a68f488a9fee458c849d6c698c35665", "src_uid": "6a333044e2ed8f9f4fa44bc16b994418", "apr_id": "af1f22c87ecb6950caa6728fa4db0306", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,a,b,c,d;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        if(a==c)\n            printf(\"%d\\n\",abs(b-d));\n        else \n            printf(\"%d\\n\",abs(a-c)+abs(b-d)+2);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,a,b,c,d;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        if(a==c)\n            printf(\"%d\\n\",abs(b-d));\n        else if(b==d)\n            printf(\"%d\\n\",abs(a-c));\n        else \n            printf(\"%d\\n\",abs(a-c)+abs(b-d)+2);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8060671722643553, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "525e85cffdcb37cccb9ff1ff65198ebf", "bug_code_uid": "65e4b6dca928ad44231ae8a2b64b9736", "src_uid": "ccfe798f5dc63c492ff54cf40bb40613", "apr_id": "a5605b5668af0f21eb758e19b6f2befa", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint a, b, count = 0, des = 0;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tdes = a - b;\n\t\tif(des < 0){\n\t\t\twhile(des < 0){\n\t\t\t\tif(des < -2){\t\n\t\t\t\t\tdes += 5;\n\t\t\t\t}else if(des == -2){\n\t\t\t\t\tdes += 2;\n\t\t\t\t}else{\n\t\t\t\t\tdes += 1;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\twhile(des){\n\t\t\tif(des >= 5){\n\t\t\t\tdes -= 5;\n\t\t\t}else if (des >= 2){\n\t\t\t\tdes -= 2;\n\t\t\t}else{\n\t\t\t\tdes -= 1;\n\t\t\t}\n\t\t\tcount++;\n\t\t}\t\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint a, b, count = 0, des = 0;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tdes = a - b;\n\n\t\tcount += abs(des/5);\n\t\tdes %= 5;\n\t\t\n\t\tif(des < 0){\n\t\t\twhile(des < 0){\n\t\t\t\tif(des <= -2){\n\t\t\t\t\tdes += 2;\n\t\t\t\t}else{\n\t\t\t\t\tdes += 1;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\twhile(des != 0){\n\t\t\tif (des >= 2){\n\t\t\t\tdes -= 2;\n\t\t\t}else{\n\t\t\t\tdes -= 1;\n\t\t\t}\n\t\t\tcount++;\n\t\t}\t\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7865707434052758, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c4881f87cef4f2705066747f97afbd18", "bug_code_uid": "eee1316c9ec099893975534c9d78b254", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "04e0435295b73d977adb52b80aaa0cfd", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main()\n{\n\tlong long n , k , i , t=0 ;\n\t\n\tscanf(\"%lld\",&n);\n\tscanf(\"%lld\",&k);\n\t\n\tif (n==1)\n\t{\n\t\tprintf(\"%d\",k);\n\t}\n\telse\n\t{\n\tfor ( i=1 ; ; i++ )\n\t{\n\t\tt = i*n ;\n\t\tif (t>=k)\n\t\t   break ;\n\t}\n\t\n\tprintf(\"%lld\",i);\n\t\n\t}\n}", "fixed": "int main()\n{\n\tlong long n , k , t=0 ;\n\t\n\tscanf(\"%lld\",&n);\n\tscanf(\"%lld\",&k);\n\t\n\tif (n==1)\n\t{\n\t\tprintf(\"%lld\",k);\n\t}\n\telse\n\t{\n\tt=k/n ;\n\tif (t*n==k)\n\tprintf(\"%lld\",t);\n\telse\n\tprintf(\"%lld\",t+1);\n\t}\n}"}
{"similarity_score": 0.4113238967527061, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "c20d915e1b2ba7d7d3ec16c9bb201e41", "bug_code_uid": "489cf9885b796d6acfc0aa39b117572d", "src_uid": "4af206ae108a483bdb643dc24e4bedba", "apr_id": "94cb1d8fd9a019aa58f1e61420a1cb25", "difficulty": 800, "tags": ["geometry", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, i,j,k,n=0,  x, y;\r\n    scanf(\"%d\", &t);\r\n    for (i = 0; i < t;i++)\r\n    {\r\n        int s = 0;\r\n        scanf(\"%d\", &k);\r\n        for (j = 0; j < k;j++)\r\n        {\r\n            scanf(\"%d%d\", &x, &y);\r\n            if(x==0 && y<0)\r\n                n = -y* 2;\r\n                else if (y==0&&x<0)\r\n                    n = -x* 2;\r\n                else if (x == 0 && y > 0)\r\n                    n = y*2;\r\n                    else\r\n                        n = x * 2;\r\n\r\n                s = s + n;\r\n        }\r\n        printf(\"%d\\n\", s);\r\n    }\r\n\r\n        return 0;\r\n}\r\n", "fixed": "\r\n#include <stdio.h>\r\nint main()\r\n{\r\n    int t, i, x, y;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int minx = 0, maxx = 0, miny = 0, maxy = 0;\r\n        scanf(\"%d\", &i);\r\n        while (i--)\r\n        {\r\n            scanf(\"%d%d\", &x, &y);\r\n            if (x < minx)\r\n                minx = x;\r\n            if (x > maxx)\r\n                maxx = x;\r\n            if (y < miny)\r\n                miny = y;\r\n            if (y > maxy)\r\n                maxy = y;\r\n        }\r\n        int ans = (maxx - minx) * 2 + (maxy - miny) * 2;\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9957446808510638, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "749b4801ed8ddf08b9535ce591086b25", "bug_code_uid": "7363c39a3419314c3c491500dbcdb4a6", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "6840a47c90ef90c0ca6befe8aea54b55", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int n;\n        scanf(\"%lld\",&n);\n        if(n%2==0)\n        printf(\"YES\\n\");\n     else\n     printf(\"NO\\n\");\n     \n    }\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int n;\n        scanf(\"%lld\",&n);\n        if(n%4==0)\n        printf(\"YES\\n\");\n     else\n     printf(\"NO\\n\");\n     \n    }\n}"}
{"similarity_score": 0.9966555183946488, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c72842189e9e1b8e3f93d324b69c9573", "bug_code_uid": "a7cf9379388ff7d2380f225e4a2f11ba", "src_uid": "56535017d012fdfcc13695dfd5b33084", "apr_id": "8f7b32b7878cdd59411673a4be7de7e3", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a,b,c,m;\n\tscanf(\"%d\",&a);\n\tscanf(\"%d\",&b);\n\tscanf(\"%d\",&c);\n\tscanf(\"%d\",&m);\n\tint d=2*m;\n\tif((2*c)<m || d<c || d>=b)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tif(c<=m)\n\t\tprintf(\"%d\\n%d\\n%d\\n\",(2*a),(2*b),m);\n\telse\n\t\tprintf(\"%d\\n%d\\n%d\\n\",(2*a),(2*b),c);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint a,b,c,m;\n\tscanf(\"%d\",&a);\n\tscanf(\"%d\",&b);\n\tscanf(\"%d\",&c);\n\tscanf(\"%d\",&m);\n\tint d=2*m;\n\tif((2*c)<m || d<c || m>=b)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tif(c<=m)\n\t\tprintf(\"%d\\n%d\\n%d\\n\",(2*a),(2*b),m);\n\telse\n\t\tprintf(\"%d\\n%d\\n%d\\n\",(2*a),(2*b),c);\n\treturn 0;\n}"}
{"similarity_score": 0.9967948717948718, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "2d2c081bb2b42d28a3ae98992ad8ee92", "bug_code_uid": "27d31835821814cc30ea6366ef930a91", "src_uid": "edd556d60de89587f1b8daa893538530", "apr_id": "e4b8a4058918736637f2d028d750dd86", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,k,l;\n    scanf(\"%d %d\",&n,&m);\n    char a[m][10],b[m][10],e,s[10];\n    for(i=0;i<m;i++) scanf(\"%s%c%s%c\",a[i],&e,b[i],&e);\n    for(i=0;i<n;i++){\n        scanf(\"%s\",s);\n        for(j=0;j<m;j++){\n            for(k=0;;k++){\n                if(s[k]!=a[j][k])\n                    break;\n                if(s[k]=='\\0'&&a[j][k]=='\\0'){\n                    for(l=0;;l++){\n                        if(b[j][l]=='\\0'&&a[j][l]!='\\0'){\n                            printf(\"%s \",b[j]);\n                            break;\n                        }\n                         if((b[j][l]!='\\0'&&a[j][l]=='\\0')||(b[j][l]=='\\0'&&a[j][l]=='\\0')){\n                            printf(\"%s \",a[j]);\n                            break;\n                        }\n                    }\n                }\n                if(s[k]=='\\0'&&a[j][k]=='\\0')\n                    break;\n            }\n\n        }\n    }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,k,l;\n    scanf(\"%d %d\",&n,&m);\n    char a[m][15],b[m][15],e,s[15];\n    for(i=0;i<m;i++) scanf(\"%s%c%s%c\",a[i],&e,b[i],&e);\n    for(i=0;i<n;i++){\n        scanf(\"%s\",s);\n        for(j=0;j<m;j++){\n            for(k=0;;k++){\n                if(s[k]!=a[j][k])\n                    break;\n                if(s[k]=='\\0'&&a[j][k]=='\\0'){\n                    for(l=0;;l++){\n                        if(b[j][l]=='\\0'&&a[j][l]!='\\0'){\n                            printf(\"%s \",b[j]);\n                            break;\n                        }\n                         if((b[j][l]!='\\0'&&a[j][l]=='\\0')||(b[j][l]=='\\0'&&a[j][l]=='\\0')){\n                            printf(\"%s \",a[j]);\n                            break;\n                        }\n                    }\n                }\n                if(s[k]=='\\0'&&a[j][k]=='\\0')\n                    break;\n            }\n\n        }\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.24764468371467024, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "4d2ae4a677e8c4c2519d7c7ff6822ac2", "bug_code_uid": "871ba3902d9160409a8b835e40032216", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "d20b47064f899a247d7b3f07efc4c24f", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, m, a[101], b[101], i, j, ta, tb, l, c = 0;\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tscanf(\"%d\", &m);\n\tfor (i = 0; i < m; i++)\n\t\tscanf(\"%d\", &b[i]);\n\tfor (j = 1; j < n; j++)\n\t\tfor (i = 0; i < n - 1; i++)\n\t\t\tif (a[i] > a[i + 1])\n\t\t\t{\n\t\t\t\tta = a[i];\n\t\t\t\ta[i] = a[i + 1];\n\t\t\t\ta[i + 1] = ta;\n\t\t\t}\n\tfor (j = 1; j < m; j++)\n\t\tfor (i = 0; i < m - 1; i++)\n\t\t\tif (b[i] > b[i + 1])\n\t\t\t{\n\t\t\t\ttb = b[i];\n\t\t\t\tb[i] = b[i + 1];\n\t\t\t\tb[i + 1] = tb;\n\t\t\t}\n\tfor (j = 0; j < n; j++)\n\t\tfor (i = 0; i < m; i++)\n\t\t\tif (a[i] == b[j] || b[j] - a[I] == 1 || a[I] - b[j] == 1)\n\t\t\t{\n\t\t\t\tb[j] = '*';\n\t\t\t\tc++;\n\t\t\t\tbreak;\n\t\t\t}\n\tprintf(\"%d\\n\", c);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, m, c = 0, temp;\n\tscanf(\"%d\", &n);\n\tint ar[n];\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &ar[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tif (ar[i] > ar[j])\n\t\t\t{\n\t\t\t\ttemp = ar[i];\n\t\t\t\tar[i] = ar[j];\n\t\t\t\tar[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tscanf(\"%d\", &m);\n\tint ar1[m];\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tscanf(\"%d\", &ar1[i]);\n\t}\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tfor (int j = 0; j < m; j++)\n\t\t{\n\t\t\tif (ar1[i] > ar1[j])\n\t\t\t{\n\t\t\t\ttemp = ar1[i];\n\t\t\t\tar1[i] = ar1[j];\n\t\t\t\tar1[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tif (((ar[j] - ar1[i]) == -1) || ((ar[j] - ar1[i]) == 0) || ((ar[j] - ar1[i]) == 1))\n\t\t\t{\n\t\t\t\tc++;\n\t\t\t\tar[j] = 'z';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", c);\n\treturn 0;\n}"}
{"similarity_score": 0.6311360448807855, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "5a8497e5bb3a09b6f3e830a1d582c173", "bug_code_uid": "8ab800dce6f82cf40863539f61b5632d", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "d38ad10e12fc2c826abc4fd69df67d81", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint l,c,i,n,hash[100004]={0};\n\tchar a[100004];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",a);\n\tl=strlen(a);\n\tc=0;\n\tfor(i=0;i<l;i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\thash[a[i]-'a']=hash[a[i]-'a']+1;\n\t\t}\n\t\tif(i%2!=0)\n\t\t{\n\t\t\tif(hash[a[i]-'A']==0)\n\t\t\t\tc++;\n\t\t\telse\n\t\t\t\thash[a[i]-'A']--;\n\t\t}\n\t}\n\tprintf(\"%d\",c);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint l,c,i,n,hash[100];\n\tfor(i=0;i<26;i++)\n\t\thash[i]=0;\n\tchar a[200004];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",a);\n\tl=strlen(a);\n\tc=0;\n\tfor(i=0;i<l;i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\thash[a[i]-'a']=hash[a[i]-'a']+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(hash[a[i]-'A']==0)\n\t\t\t\tc++;\n\t\t\telse\n\t\t\t\thash[a[i]-'A']--;\n\t\t}\n\t}\n\tprintf(\"%d\",c);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9710669077757685, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "580ed3c8d6c640fa426a03e396840984", "bug_code_uid": "2b948d68f9f01b20e106cd7302ab692d", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "4bcdd9e39df79746e933bea1d0f2829c", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,i,c=0,b=0,x=0,j;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==0) a[i]=1,c++;\n        else if(a[i]<0) a[i]=-1-a[i],b++;\n        else a[i]--;\n    }\n    for(i=0;i<n;i++) x+=a[i];\n    if(b!=1&&c!=0)\n    {\n        if(b%2==0) j=0;\n        else if(b%2!=0&&c==0) j=1;\n        printf(\"%d\",x+j);\n    }\n    else if((b%2!=0&&c==0)||(b==1&&c==0))\n    {\n        printf(\"%d\",x+2);\n    }\n    else\n    {\n        printf(\"%d\",x);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,i,c=0,b=0,j;\n    long long int x=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==0) a[i]=1,c++;\n        else if(a[i]<0) a[i]=-1-a[i],b++;\n        else a[i]--;\n    }\n    for(i=0;i<n;i++) x+=a[i];\n    if(b!=1&&c!=0)\n    {\n        if(b%2==0) j=0;\n        else if(b%2!=0&&c==0) j=1;\n        printf(\"%I64d\",x+j);\n    }\n    else if((b%2!=0&&c==0)||(b==1&&c==0))\n    {\n        printf(\"%I64d\",x+2);\n    }\n    else\n    {\n        printf(\"%I64d\",x);\n    }\n    return 0;\n}"}
{"similarity_score": 0.3705220061412487, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9d4d485d2481b1c9f668951b6ae9b950", "bug_code_uid": "ca697a72f8517f3b981097d5036fc5c6", "src_uid": "45cf60f551bd5cbb1f3df6ac3004b53c", "apr_id": "c5080435d03c2987cf2121b175670b4b", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main ()\r\n{\r\n    int t,n;\r\n    int h1,h2,h3;\r\n    int i;\r\n    scanf(\"%d\",&t);\r\n    for(;t--;){\r\n        scanf(\"%d\",&n);\r\n        if(n%2==0){\r\n            //\u5076\u6570\r\n            h1=n/2;\r\n            h2=h1-1;\r\n            h3=h1-h2;\r\n        }else{\r\n            if(((n-1)/2-1)!=(n-(n-1)/2-(n-1)/2+1)){\r\n                h1=(n-1)/2;\r\n                h2=h1-1;\r\n                h3=h1-h2;\r\n            }else{\r\n                h1=(n+1)/2;\r\n                h2=h1-2;\r\n                h3=n-h1-h2;\r\n            }\r\n\r\n        }\r\n        printf(\"%d %d %d\\n\",h2,h1,h3);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main ()\r\n{\r\n    int t,n;\r\n    int a,b,c;\r\n    scanf(\"%d\",&t);\r\n    for(;t--;){\r\n        scanf(\"%d\",&n);\r\n        for(a=3;a<n;a++){\r\n            c=(n-a)/2;\r\n            b=n-a-c;\r\n            if(c>1&&b+1<a){\r\n                c--;b++;\r\n            }\r\n            if(a>b&&b>c){\r\n                printf(\"%d %d %d\\n\",b,a,c); break;\r\n            }\r\n            \r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9615384615384616, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5280b5d5e57b046ad1d7d66a180f7da5", "bug_code_uid": "a619e44f8c3c85ed74cff9e2a5f91318", "src_uid": "3185ae6b4b681a10a21d02e67f08fd19", "apr_id": "637870f4d85e55e491a776bc00e9682f", "difficulty": 1600, "tags": ["number theory", "games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint i;\nint n;\nint g;\nint m;\n\n#define max(a,b) a>b?a:b\n\nint _gcd(int a,int b){\n    if(!a)return b;\n    return _gcd( b%a , a );\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&g);\n    m=g;\n    for(i=1;i<n;i++){\n        int a;\n        scanf(\"%d\",&a);\n        g = _gcd(a,g);\n        m=max(a,g);\n    }\n    m/=g;\n    m-=n;\n    printf(m&1?\"Alice\":\"Bob\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint i;\nint n;\nint g;\nint m;\n\n#define max(a,b) a>b?a:b\n\nint _gcd(int a,int b){\n    if(!a)return b;\n    return _gcd( b%a , a );\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&g);\n    m=g;\n    for(i=1;i<n;i++){\n        int a;\n        scanf(\"%d\",&a);\n        g = _gcd(a,g);\n        m=max(a,m);\n    }\n//    printf(\"%d\\n%d\\n\",m,g);\n    m/=g;\n    m-=n;\n    printf(m&1?\"Alice\":\"Bob\");\n    return 0;\n}"}
{"similarity_score": 0.2292358803986711, "equal_cnt": 24, "replace_cnt": 21, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "e83271f6f7910ab80b32a895c6f50cca", "bug_code_uid": "35c6c2f602253ef326215aeb4ea155bc", "src_uid": "668f85cc331bc7bcdd708d9190bbd6e8", "apr_id": "2fbe6e7693737d20565fe2b17aa4be16", "difficulty": 1500, "tags": ["data structures", "binary search"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nmain()\n{\n\tint i, j, n, morsa, molestia;\n\tscanf(\"%d\", &n);\n\tint a[n], m[n];\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tm[i] = -1;\n\t}\n\t\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tj=n-1;\n\t\twhile(a[i]<= a[j] && j>i)\n\t\t{\n\t\t\tj--;\n\t\t}\n\t\tm[i] = j-i-1;\n\t}\n\n\tfor(i=0; i<n; i++)\n\t{\n\t\tprintf(\"%d \", m[i]);\n\t}\n\n\t\n\treturn 0;\n}\n\n\n\n\n", "fixed": "#include <stdio.h>\n\nint a[100005],b[100005];\nint main()\n{\n    int n,i,l,r,med;\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++)\n\t{\n        scanf(\"%d\", &a[i]);\n    }\n    b[n-1]=a[n-1];\n    for(i = n-2; i >= 0; i--)\n\t{\n        if(a[i] < b[i+1])\n\t\t{\n           b[i]=a[i];\n        }\n\t\telse\n\t\t{\n            b[i]=b[i+1];\n        }\n    }\n    \n    for(i = 0; i<n-1; i++) \n\t{\n        if(b[i+1]<a[i]) \n\t\t{\n            l= i+1;\n            r=n-1;\n            while(l<r-1) \n\t\t\t{\n                med = (l+r)/2;\n                if(b[med] < a[i]) \n\t\t\t\t{\n                    l=med;\n                }\n\t\t\t\telse\n\t\t\t\t{\n                    r=med;\n                }\n            }\n            if(b[r] < a[i])\n\t\t\t{\n                l=r;\n            }\n            printf(\"%d \", l-i-1);\n        }\n\t\telse\n\t\t{\n            printf(\"-1 \");\n        }\n    }\n    printf(\"-1 \");\n\n    return 0;\n}\n"}
{"similarity_score": 0.5752773375594294, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "c5a686188c4cdb81a634183bf407c40a", "bug_code_uid": "c301eab955e5d757f54f285247dd75ca", "src_uid": "0318d4d5ea3425bf6506edeb1026f597", "apr_id": "ef081127f248a926c1dfafb43fb941cf", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  long long int n,m,a[100001],b[1000000001],i,s=0,k=0;\n  scanf(\"%lld %lld\",&n,&m);\n  for(i=1;i<=n;i++)\n  {scanf(\"%lld\",&a[i]);}\n  for(i=1;i<=1000000001;i++)\n  {b[i]=i;}\n  for(i=1;i<=n;i++)\n  {b[a[i]]=-1;}\n  for(i=1;i<=m;i++)\n  {\n   if(b[i]!=-1)\n    {s=s+b[i];\n     b[i]=0;\n     k++;\n    }\n   if(s==m||s>m)\n   {break;}\n  }\n  if(s==m)\n  {printf(\"%lld\\n\",k);}\n  else\n  {printf(\"%lld\\n\",k-1);\n   b[i]=i;\n  }\n  for(i=1;i<=m;i++)\n  {if(b[i]==0)\n   {printf(\"%lld \",i);}\n  }\n  return 0;\n}\n  ", "fixed": "#include<stdio.h>\nint main()\n{\n  unsigned long long int n,m,a[100001],b[9000001],i,s=0,k=0,x=0;\n  scanf(\"%llu %llu\",&n,&m);\n  for(i=1;i<=n;i++)\n  {scanf(\"%llu\",&a[i]);}\n  for(i=1;i<=2000001;i++)\n  {b[i]=i;}\n  for(i=1;i<=n;i++)\n  {if(a[i]<=9000001)\n   {b[a[i]]=0;}}\n  for(i=1;i<=m;i++)\n  {\n   if(b[i]!=0)\n    {s=s+b[i];\n     b[i]=0;\n     k++;\n    }\n    else\n    {b[i]=i;}\n   if(s==m||s>m)\n   {break;}\n  }\n  if(s==m)\n  {printf(\"%llu\\n\",k);}\n  else\n  {if(s!=0)\n   {printf(\"%llu\\n\",k-1);}\n   else\n   {printf(\"0\");}\n   b[i]=i;\n  }\n  if(s==m)\n  {for(i=1;i<=m&&x<k;i++)\n  {if(b[i]==0)\n   {printf(\"%llu \",i);\n    x++;\n   }}}\n   else\n   {for(i=1;i<=m&&x<k-1;i++)\n  {if(b[i]==0)\n   {printf(\"%llu \",i);\n    x++;\n   }}}\n   \n   \n   \n   \n   \n   \n  return 0;\n}\n  "}
{"similarity_score": 0.9943883277216611, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4ecca4f84a5e55470805699061176951", "bug_code_uid": "4c88ec0743bcc0f873137b3ade025049", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "cb9b2def71b5a6f3fd754114d6610745", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,count=0;    \n    scanf(\"%d\",&n);\n    char arr[n];\n    getchar();\n    gets(arr);\n\n    for(i=0;i<n;i+=2)\n     {\n        if((arr[i]=='a')&&(arr[i+1]=='a'))\n        {\n            arr[i+1]='b';\n            count++;\n\n        }\n        if((arr[i]=='b') && ((arr[i+1]=='b'))\n        {\n            arr[i+1] ='a';\n            count++;\n        }\n\n        }\n        printf(\"%d\\n%s\",count,arr);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,count=0;\n    scanf(\"%d\",&n);\n    char arr[n];\n    getchar();\n    gets(arr);\n\n    for(i=0;i<n;i+=2)\n     {\n        if((arr[i]=='a')&&(arr[i+1]=='a'))\n        {\n            arr[i+1]='b';\n            count++;\n\n        }\n        if((arr[i]=='b') && (arr[i+1]=='b'))\n        {\n            arr[i+1] ='a';\n            count++;\n        }\n\n        }\n        printf(\"%d\\n%s\",count,arr);\n}\n"}
{"similarity_score": 0.5885841363973313, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "a978d7a544c5943ab044449749e54a0d", "bug_code_uid": "4bfbfba537b5cbfd1ae7f1ddbb366778", "src_uid": "1f38c88f89786f118c65215d7df7bc9c", "apr_id": "004698891e3a7f946b747d3a167d08f7", "difficulty": 1300, "tags": ["dp", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char buff[200000] = { 0 };\n\n    scanf(\"%s\", buff);\n\n    size_t i = 0;\n    size_t n = strlen(buff);\n\n    while (i < n - 3) {\n        if (buff[i] == buff[i + 1]) {\n            buff[i + 1] = buff[i + 2] + 1;\n            i += 2;\n        } else {\n            i += 1;\n        }\n    }\n\n    if (buff[i] == buff[i + 1]) {\n        buff[i + 1] = buff[i + 2] + 1;\n    }\n    printf(\"%s\\n\", buff);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar getnewchar(char *buff, int i, int j);\n\nint main()\n{\n    char buff[200000] = { 0 };\n\n    scanf(\"%s\", buff);\n\n    int i = 0;\n    int n = strlen(buff);\n\n    while (i < n - 3) {\n        if (buff[i] == buff[i + 1]) {\n            char c = getnewchar(buff, i, i + 2);\n            buff[i + 1] = c;\n            i += 2;\n        } else {\n            i += 1;\n        }\n    }\n\n    if (n - i == 3) {\n        if (buff[i] == buff[i + 1]) {\n            char c = getnewchar(buff, i, i + 2);\n            buff[i + 1] = c;\n        }\n    }\n    if (buff[n - 1] == buff[n - 2]) {\n        char c = getnewchar(buff, n - 1, n - 2);\n        buff[n - 1] = c;\n    }\n\n    printf(\"%s\\n\", buff);\n\n    return 0;\n}\n\nchar getnewchar(char *buff, int i, int j)\n{\n    char c = 'a';\n\n    while (c == buff[i] || c == buff[i + 2]) {\n        c = 97 + (c + 1) % 25;\n    }\n\n    return c;\n}\n\n"}
{"similarity_score": 0.9958071278825996, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ae10c6697d0acd4bf6ef92cd96e6e2ed", "bug_code_uid": "a25c6553562beb84870df4e7e20e60a1", "src_uid": "eadc7f5e1043ac431984ec921c62892d", "apr_id": "0557264639ac123bc532e44aa60708f2", "difficulty": 1500, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint getint(){\n    int n = 0;\n    char c;\n    while ((c = (char)getchar()) != '\\n') n = n * 10 + c - '0';\n    return n;\n}\n\nint main() {\n    char bins[20001];\n    int t = getint();\n    while (t--){\n        int len = getint();\n        int first_zero = -1;\n        int l1, r1, l2, r2;\n\n        for (char *c = bins; c < bins + len; c++) {\n            *c = (char)getchar();\n            if (*c == '0' && first_zero == -1) first_zero = (int)(c - bins) + 1;\n        }\n        getchar();\n\n        if (first_zero == -1) {\n            l1 = 1; r1 = len - 1;\n            l2 = 2; r2 = len;\n        } else {\n            if ((first_zero - 1) < len / 2){\n                l1 = first_zero;     r1 = len;\n                l2 = first_zero + 1; r2 = len;\n            } else {\n                l1 = 1; r1 = first_zero - 1;\n                l2 = 1; r2 = first_zero;\n            }\n        }\n        printf(\"%d %d %d %d\\n\", l1, r1, l2, r2);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint getint(){\n    int n = 0;\n    char c;\n    while ((c = (char)getchar()) != '\\n') n = n * 10 + c - '0';\n    return n;\n}\n\nint main() {\n    char bins[20001];\n    int t = getint();\n    while (t--){\n        int len = getint();\n        int first_zero = -1;\n        int l1, r1, l2, r2;\n\n        for (char *c = bins; c < bins + len; c++) {\n            *c = (char)getchar();\n            if (*c == '0' && first_zero == -1) first_zero = (int)(c - bins) + 1;\n        }\n        getchar();\n\n        if (first_zero == -1) {\n            l1 = 1; r1 = len - 1;\n            l2 = 2; r2 = len;\n        } else {\n            if ((first_zero - 1) < len / 2){\n                l1 = first_zero;     r1 = len;\n                l2 = first_zero + 1; r2 = len;\n            } else {\n                l1 = 1; r1 = first_zero;\n                l2 = 1; r2 = first_zero - 1;\n            }\n        }\n        printf(\"%d %d %d %d\\n\", l1, r1, l2, r2);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9936993699369937, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4290bd08a5ac32c2fd9a5960a40fbe0e", "bug_code_uid": "50894e0cd08d131b58e556fc12d456f6", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "cf5708afb95a422ab47351a360b15ef4", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint a1,a2,h1,h2,c1,i,k;\n\tint str[200];\n\tscanf(\"%d%d%d%d%d\",&h1,&a1,&c1,&h2,&a2);\n\t\tk=0;\n\t\twhile(1){\n\t\t\tif(h2<=0)\n\t\t\tbreak;\n\t\t\t if(h1<=a2)\n\t{ \n\t     if(a1>=h2)\n\t     {  \n\t\t    str[k]=1;\n\t\t    k++;\n\t     \tbreak;\n\t\t }\n\t    \th1=h1+c1;\n\t    \th1=h1-a2;\n\t        str[k]=0;\n\t    \tk++;\n\t    \n\t}\n\t\telse{\n\t\t\th2=h2-a1;\n\t\t    h1=h1-a2;\n\t\t    str[k]=1;\n\t        k++\t;\n\t}\t\t\n\t\t}\n    \tprintf(\"%d\\n\",k);\n    \tfor(i=0;i<k;i++)\n    \t{\n    \t\tif(str[i]==0)\n    \t\tprintf(\"HEAL\\n\");\n    \t\telse\n    \t\tprintf(\"STRIKE\\n\");\n    \t}\n\treturn 0;\n\t\n\t\n}\n\n\n", "fixed": "#include <stdio.h>\nint main(){\n\tint a1,a2,h1,h2,c1,i,k;\n\tint str[200000];\n\tscanf(\"%d%d%d%d%d\",&h1,&a1,&c1,&h2,&a2);\n\t\tk=0;\n\t\twhile(1){\n\t\t\tif(h2<=0)\n\t\t\tbreak;\n\t   if(h1<=a2)\n\t{ \n\t     if(a1>=h2)\n\t     {  \n\t\t    str[k]=1;\n\t\t    k++;\n\t     \tbreak;\n\t\t }\n\t    \th1=h1+c1;\n\t    \th1=h1-a2;\n\t        str[k]=0;\n\t    \tk++;\n\t    \n\t}\n\t\telse{\n\t\t\th2=h2-a1;\n\t\t    h1=h1-a2;\n\t\t    str[k]=1;\n\t        k++\t;\n\t}\t\t\n\t\t}\n    \tprintf(\"%d\\n\",k);\n    \tfor(i=0;i<k;i++)\n    \t{\n    \t\tif(str[i]==0)\n    \t\tprintf(\"HEAL\\n\");\n    \t\telse\n    \t\tprintf(\"STRIKE\\n\");\n    \t}\n\treturn 0;\n\t\n\t\n}\n\n\n"}
{"similarity_score": 0.12218649517684887, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9c78a25da1e2a09a966201408f8ead85", "bug_code_uid": "87bc7a2d054f978232872d6895a53b61", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "f8217df145bc9c5a3067262a47676c0d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint a[100005];\n\nint main(void)\n{\n\tint n,i,count=0,count_final=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++) {\n\t\tif(a[i]>0) {\n\t\t\tif(count<0) {\n\t\t\t\tcount_final+=count;\n\t\t\t\tcount=0;\n\t\t\t}\n\t\t\tcount+=a[i];\n\t\t}\n\t\telse if(a[i]==-1) {\n\t\t\tcount--;\n\t\t}\n\t}\n\tif(a[n-1]==-1)\n\t\tprintf(\"%d\",(count*-1)+(count_final*-1));\n\telse\n\t\tprintf(\"%d\",count_final*-1);\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n\tint n,i,num,count=0,sum=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%d\",&num);\n\t\tif(sum+num<0)\n\t\t\tcount++;\n\t\telse\n\t\t\tsum+=num;\n\t}\n\t\n\tprintf(\"%d\",count);\n\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.952063914780293, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4eaa5e20baa2ae1589cf725b5767f6ec", "bug_code_uid": "255103a152728d0268b5abdc03b46741", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "2a0fda0c7c4b3604f890f81e17a52ebc", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": " int t,n,i,cnt,j,k,l;\r\n    char task[50];\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cnt=0;\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",task);\r\n        for(j=0;j<n;j++)\r\n        {\r\n            for(k=j+1;k<n;k++)\r\n            {\r\n                if(task[j]!=task[k])\r\n                {\r\n                    for(l=k+1;l<n;l++)\r\n                    {\r\n                        if(task[j]==task[l])\r\n                        {\r\n                            cnt++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        if(cnt!=0)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n   int t,n,i,cnt,j,k,l;\r\n    char task[50];\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cnt=0;\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",task);\r\n        for(j=0;j<n;j++)\r\n        {\r\n            k=j+1;\r\n                if(task[j]!=task[k])\r\n                {\r\n                    for(l=k+1;l<n;l++)\r\n                    {\r\n                        if(task[j]==task[l])\r\n                        {\r\n                            cnt++;\r\n                        }\r\n                    }\r\n                }\r\n            \r\n            \r\n        }\r\n        if(cnt!=0)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.24088748019017434, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "48fecb9b707af8ecb17e133b0002b34b", "bug_code_uid": "046b1bdc939f9cdc2e3df940cd262ff2", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "d817720ae89aae1a4d8be179e2e5b403", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    int n;\n    cin>>n;\n    while(n--)\n    {\n        int num;\n        cin>>num;\n        if(num&1)\n        {\n            cout<<\"First\";\n            return 0;\n        }\n    }\n    cout<<\"Second\";\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    register int cnt=n;\n    while(cnt--)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        if(x & 1)\n            {\n                printf(\"First\");                \n                return 0;\n            }\n    }\n    printf(\"Second\");\n    return 0;\n}"}
{"similarity_score": 0.9812409812409812, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "80a25d0a3bffe9171eb84a615951cffe", "bug_code_uid": "f8c603813b657c5557b8e1d45d334d72", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "e3f6f5a629077e4102fe0781cf874e93", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nint number,distict,i,m=97,k=0;\nchar array[101];\nscanf(\"%d %d\",&number,&distict);\nfor(i=0;i<number;++i){\n    array[i]=(char)m;\n    m++;\n    k++;\n    if(k==distict){\n        m=97;\n    }\n    if(m==123){\n        m=97;\n    }\n}\nfor(i=0;i<number;++i){\n    printf(\"%c\",array[i]);\n}\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nint number,distict,i,m=97,k=0;\nchar array[101];\nscanf(\"%d %d\",&number,&distict);\nfor(i=0;i<number;++i){\n    array[i]=(char)m;\n    m++;\n    k++;\n    if(k==distict){\n        m=97;\n        k=0;\n    }\n    if(m==123){\n        m=97;\n    }\n}\nfor(i=0;i<number;++i){\n    printf(\"%c\",array[i]);\n}\n\nreturn 0;\n}\n"}
{"similarity_score": 0.547945205479452, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "ec4b2d1e5a84171dd05e5ac119eba416", "bug_code_uid": "ca1402fc28155b03f536a1cf0350d799", "src_uid": "3488bb49de69c0c17ea0439e71b1e6ae", "apr_id": "413cfc684a89d08a1ffe894687205162", "difficulty": 1400, "tags": ["dp", "implementation", "sortings", "ternary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#define si(n) scanf(\"%d\",&n)\n#define rep(i,n) for(i=0;i<n;i++)\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define pn printf(\"\\n\")\n#define ps printf(\" \")\n#define pi(n) printf(\"%d\",n)\n#define pll(n) printf(\"%llu\",n)\n#define sll(n) scanf(\"%llu\",&n)\n#define ss(s) scanf(\"%s\",s)\n \n \nint main(){\nint n,m,k,d,i,a[101][101]={0},j,sum=0,c,ans=0;float avg,min;\nsi(n);si(m);si(d);\nrep(i,n){rep(j,m){scanf(\"%d\",*(a+i)+j);sum+=a[i][j];}}\n//rep(i,n){rep(j,m){pi(a[i][j]);ps;};pn;}\navg=(float)sum/(n*m);//printf(\"%f\",avg);\nmin=fabs((float)(a[0][0])-avg);c=a[0][0];\nrep(i,n){rep(j,m){if(fabs((float)(a[i][j])-avg)<min){min=fabs((float)(a[i][j])-avg);c=a[i][j];}}}\n//pi(c);ps;\n//printf(\"%f\",min);pn;\nrep(i,n){rep(j,m){if((abs(c-a[i][j]))%d!=0){pi(-1);return 0;}ans+=(abs(c-a[i][j]))/d;}}\npi(ans);\n \n \n \n \n \n \n \nreturn 0;}", "fixed": "#include<stdio.h>\n#include<math.h>\n#define si(n) scanf(\"%d\",&n)\n#define rep(i,n) for(i=0;i<n;i++)\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define pn printf(\"\\n\")\n#define ps printf(\" \")\n#define pi(n) printf(\"%d\",n)\n#define pll(n) printf(\"%llu\",n)\n#define sll(n) scanf(\"%llu\",&n)\n#define ss(s) scanf(\"%s\",s)\n int cmp(const void *a,const void *b)\n{\n    return *(int *)a-*(int *)b;\n}\n \nint main(){\nint n,m,k,d,i,a[10001]={0},j,sum=0,c,ans=0;\nsi(n);si(m);si(d);k=n*m;\nrep(i,k){scanf(\"%d\",&a[i]);}\n//rep(i,n){rep(j,m){pi(a[i][j]);ps;};pn;}\nqsort(a,k,sizeof(int ),cmp);\nc=a[(k/2)];//pi(c);pn;rep(i,k){pi(a[i]);ps;}pn;\nrep(i,k){if((abs(c-a[i]))%d!=0){pi(-1);return 0;}ans+=(abs(c-a[i]))/d;}\npi(ans);\n \n return 0;}"}
{"similarity_score": 0.841025641025641, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "7cb225d11452bf9c900c7c3ec5085147", "bug_code_uid": "767d7f103da1e45430202ea13be75756", "src_uid": "d19c7a74d739c2ca0d568808862ba2bd", "apr_id": "671bcc04640602ac0b2007e52ac28640", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\nint part(int a[],int b[],int l,int r)\n{\n\tint i,j;\n\ti=l-1;\n\tfor(j=l;j<r;j++)\n\t{\n\t\tif(a[j]<=a[r])\n\t\t{\n\t\t\ti++;\n\t\t\ta[i]=a[i]+a[j]-(a[j]=a[i]);\n\t\t\tb[i]=b[i]+b[j]-(b[j]=b[i]);\n\t\t}\n\t}\n\ta[i+1]=a[r]+a[i+1]-(a[r]=a[i+1]);\n\tb[i+1]=b[r]+b[i+1]-(b[r]=b[i+1]);\n\treturn i+1;\n}\nvoid qusort(int a[],int b[],int l,int r)\n{\n\tif(l<r)\n\t{\n\t\tint p=part(a,b,l,r);\n\t\tqusort(a,b,l,p-1);\n\t\tqusort(a,b,p+1,r);\n\t}\n}\nint main()\n{\n\tint n,i,a[300005],b[300005],ans[300005];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=i;\n\t}\n\tqusort(a,b,0,n-1);\n\t/*for(i=0;i<n;i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",b[i]);\n\tprintf(\"\\n\");*/\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]==a[i-1])\n\t\t\ta[i]++;\n\t}\n\tfor(i=0;i<n;i++)\n\t\tans[b[i]]=a[i];\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n/*int part(int a[],int b[],int l,int r)\n{\n\tint i,j;\n\ti=l-1;\n\tfor(j=l;j<r;j++)\n\t{\n\t\tif(a[j]<=a[r])\n\t\t{\n\t\t\ti++;\n\t\t\ta[i]=a[i]+a[j]-(a[j]=a[i]);\n\t\t\tb[i]=b[i]+b[j]-(b[j]=b[i]);\n\t\t}\n\t}\n\ta[i+1]=a[r]+a[i+1]-(a[r]=a[i+1]);\n\tb[i+1]=b[r]+b[i+1]-(b[r]=b[i+1]);\n\treturn i+1;\n}\nvoid qusort(int a[],int b[],int l,int r)\n{\n\tif(l<r)\n\t{\n\t\tint p=part(a,b,l,r);\n\t\tqusort(a,b,l,p-1);\n\t\tqusort(a,b,p+1,r);\n\t}\n}*/\nint a[300005],b[300005];\nint cmp(const void *x,const void *y)\n{\n\treturn a[*(int*)x]-a[*(int*)y];\n}\nint main()\n{\n\tint n,i,ans[300005],temp[300005];;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=i;\n\t}\n\tqsort(b,n,sizeof(int),cmp);\n\t/*for(i=0;i<n;i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",b[i]);\n\tprintf(\"\\n\");*/\n\tfor(i=0;i<n;i++)\n\t\ttemp[i]=a[b[i]];\t//temp is sorted array\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(temp[i]<=temp[i-1])\n\t\t\ttemp[i]=temp[i-1]+1;\n\t}\n\tfor(i=0;i<n;i++)\n\t\tans[b[i]]=temp[i];\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9987714987714987, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2135329612ccfdd2063e65cc4a0f3f60", "bug_code_uid": "b90d199eedfc47b30e1c0a653e766b6b", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "2e3449b8a23a66c5058e1b84ca952435", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\t\n\tint s,n,m,i;\n\tscanf(\"%d%d\",&s,&n);\n\tm=n;\n\tint x[n],y[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t    \n\t    scanf(\"%d%d\",&x[i],&y[i]);\n\t      \t}\n\t      \t\n\t      \tint j=0;\n\t      \tint min;\n\t      \t\n\t      \twhile(n>0)\n\t      \t{\n\t      \t    \n\t      \t min=x[0];\n\t      \t \n\t      \t for(i=0;i<m;i++)\n\t      \t {\n\t      \t     if(min>=x[i])\n\t      \t     {\n\t      \t         min=x[i]; \n\t      \t     j=i; \n\t      \t     \n\t      \t         \n\t      \t     }  \n\t      \t     \n\t      \t     }\n\t      \t \n\t      \t \n\t      \t \n\t      \t \n\t      \t   \n\t      \t   if(s>=min)n--;\n\t      \t   if(s<min)break;\n\t      \t   else { s=s+y[j]; x[j]=1000000; \n\t      \tmin=10000000;\n\t      \t       \n\t      \t   }\n\t      \t    \n\t      \t}\n\t      \n\t      if(n==0)printf(\"YES\");\n\telse printf(\"NO\");\n\t\n\treturn 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\t\n\tint s,n,m,i;\n\tscanf(\"%d%d\",&s,&n);\n\tm=n;\n\tint x[n],y[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t    \n\t    scanf(\"%d%d\",&x[i],&y[i]);\n\t      \t}\n\t      \t\n\t      \tint j=0;\n\t      \tint min;\n\t      \t\n\t      \twhile(n>0)\n\t      \t{\n\t      \t    \n\t      \t min=x[0];\n\t      \t \n\t      \t for(i=0;i<m;i++)\n\t      \t {\n\t      \t     if(min>=x[i])\n\t      \t     {\n\t      \t         min=x[i]; \n\t      \t     j=i; \n\t      \t     \n\t      \t         \n\t      \t     }  \n\t      \t     \n\t      \t     }\n\t      \t \n\t      \t \n\t      \t \n\t      \t \n\t      \t   \n\t      \t   if(s>min)n--;\n\t      \t   if(s<=min)break;\n\t      \t   else { s=s+y[j]; x[j]=1000000; \n\t      \tmin=10000000;\n\t      \t       \n\t      \t   }\n\t      \t    \n\t      \t}\n\t      \n\t      if(n==0)printf(\"YES\");\n\telse printf(\"NO\");\n\t\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9958847736625515, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "069a6289634fa0b530a434881de2b195", "bug_code_uid": "9f69fb72eae1684eaf34bde9503be721", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "b4d717efa4d70b546ee43ca9e452cc3e", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n       int n,a,b,f=0;\n       scanf(\"%d\",&n);\n       for(i=0;i<n;i++){\n              scanf(\"%d %d\",&a,&b);\n              if(a>b)       f=1;\n       }\n       printf(f==1?\"Happy Alex\":\"Poor Alex\");\n       return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n       int n,a,b,i,f=0;\n       scanf(\"%d\",&n);\n       for(i=0;i<n;i++){\n              scanf(\"%d %d\",&a,&b);\n              if(a>b)       f=1;\n       }\n       printf(f==1?\"Happy Alex\":\"Poor Alex\");\n       return 0;\n}"}
{"similarity_score": 0.9935760171306209, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b38542211b134c57120fd28a471b5fe6", "bug_code_uid": "683e3fa048f34a10a161fe167c834ba0", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "3edb969ef6e629f73de34146dcedc71e", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint i,t;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t    int a,b,c;\n\t    scanf(\"%d %d\",&a,&b);\n\t    c=2*a;\n\t    if(c<b)\n\t    printf(\"%d %d\\n\",a,c);\n\t    else\n\t    printf(\"-1 -1\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint i,t;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t    int a,b,c;\n\t    scanf(\"%d %d\",&a,&b);\n\t    c=2*a;\n\t    if(c<=b)\n\t    printf(\"%d %d\\n\",a,c);\n\t    else\n\t    printf(\"-1 -1\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8070175438596491, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "2262d5198b53e00ed62aff9d36bde2c2", "bug_code_uid": "13cabc6b0af0a0f87c4f70b99a3239d4", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "cdd34eee52b4e16ac21b2c6ab311e9f3", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int n,b,a,t=4500;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d %d\",&b,&a);\n        if(b!=a){\n            printf(\"rated\");\n            return 0;\n        }\n        if(b>t){\n            printf(\"unrated\");\n            return 0;\n        }\n        t=b;\n    }\n    printf(\"maybe\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int n,b,a,t=4500,u=0;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d %d\",&b,&a);\n        if(b!=a){\n            printf(\"rated\");\n            return 0;\n        }\n        if(b>t){\n            u=1;\n        }\n        t=b;\n    }\n    if(u)\n        printf(\"unrated\");\n    else\n        printf(\"maybe\");\n    return 0;\n}\n"}
{"similarity_score": 0.5009746588693957, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a249e789a81b8083781eda2efcca8409", "bug_code_uid": "ece59e75cfcf5842095483e3ba407f97", "src_uid": "6451507b21854d5b81aeaf0491ddf584", "apr_id": "25eadfdb41c8d4d0696ae35a1bae20a9", "difficulty": 1100, "tags": ["greedy", "implementation", "data structures", "binary search", "dfs and similar"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong int t,k,q,cnt,p,b[200000],ok=0,cnt2=0;\nscanf(\"%ld\",&t);\nchar s[200000];\nfor (long int i=0;i<t;i++)\n{scanf(\"%s\",s);k=0,q=0,cnt=0;\n\n\nfor (long int j=0;j<strlen(s);j++)\n{/*if(s[j]=='R'){cnt++;}}\nif(cnt==0){printf(\"%ld\\n\",strlen(s)+1);}\nelse if(cnt==strlen(s)){printf(\"1\\n\");}\nelse{*/ok=0;cnt2=0;\nfor (long int j=0;j<strlen(s);j++)\n{\nif(s[j]=='L'){cnt2++;}\nif(s[j]=='R'){b[ok]=cnt2;cnt2=0;ok++;}\nb[ok]=cnt2;\nok++;\n}\n\nlong int min=0;\nfor(long int j=0;j<ok;j++){if(b[j]>min){min=b[j];}}\nprintf(\"%ld\\n\",min+1);\n\n\n}\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong int t,k,q,cnt,p,b[200000],ok=0,cnt2=0;\nscanf(\"%ld\",&t);\nchar s[200000];\nfor (long int i=0;i<t;i++)\n{scanf(\"%s\",s);k=0,q=0,cnt=0;\n\n\n\nok=0;cnt2=0;\nfor (long int j=0;j<strlen(s);j++)\n{\nif(s[j]=='L'){cnt2++;\nif(cnt2>ok){ok=cnt2;}\n}\n/*if(s[j]=='R'){b[ok]=cnt2;cnt2=0;ok++;}\nb[ok]=cnt2;\nok++;*/\nelse{cnt2=0;}\n}\n\n/*long int min=0;\nfor(long int j=0;j<ok;j++){if(b[j]>min){min=b[j];}}\n*/printf(\"%ld\\n\",ok+1);\n\n\n}\n}\n"}
{"similarity_score": 0.9974811083123426, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "161d2290ed6ceefb9471e53f3d10e990", "bug_code_uid": "77af612e72548eb72290f59c4e41d10c", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "26929f7a2ae430f515d5042a856432d9", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<time.h>\n#include<math.h>\n#include<ctype.h>\n\n#define MAX( a, b ) ( ( a > b) ? a : b ) \n#define MIN( a, b ) ( ( a < b) ? a : b )\n#define FOR(ii,aa,bb) for(ii=aa;ii<bb;ii++)\nint main () {\n\nint x=0,n=0,s=0,i,j;\nscanf(\"%d\",&x);\nFOR(i,0,x)}\n\tscanf(\"%d\",&n);\n\tif(n==1){\n\t\tprintf(\"-1\");\n\t\treturn 0;}}\n\t\tprintf(\"1\");\n\n\n\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include<string.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<time.h>\n#include<math.h>\n#include<ctype.h>\n\n#define MAX( a, b ) ( ( a > b) ? a : b ) \n#define MIN( a, b ) ( ( a < b) ? a : b )\n#define FOR(ii,aa,bb) for(ii=aa;ii<bb;ii++)\nint main () {\n\nint x=0,n=0,s=0,i,j;\nscanf(\"%d\",&x);\nFOR(i,0,x){\n\tscanf(\"%d\",&n);\n\tif(n==1){\n\t\tprintf(\"-1\");\n\t\treturn 0;}}\n\t\tprintf(\"1\");\n\n\n\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9927536231884058, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "77b866b94492253c2d80fa8baf426c97", "bug_code_uid": "6af62e29b2e96e152e9cc12c34d7eef8", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "66178eab0200331ed773be28ab8684e0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    long n;\n    int i, j, a , b, pass[1000],loc=0;\n    a=b=0;\n    int count = 0 ;\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n\n        scanf(\"%d %d\", &a, &b);\n        count += b-a;\n        pass[i] = count;\n\n    }\n    printf(\"\\n\\n\\n\");\n    i=0;\n    while(i<n){\n\n        printf(\"%d \",pass[i]);\n        i++;\n    }\n    printf(\"\\n\\n\\n\");\n\n    for(j=0;j<n-1; j++){\n        for(i=0;i<n;i++){\n            if(pass[i]<pass[i+1]){\n                loc = pass[i];\n                pass[i]=pass[i+1];\n                pass[i+1]=loc;\n            }\n        }\n    }\n    i=0;\n    while(i<n){\n\n        printf(\"%d \",pass[i]);\n        i++;\n    }\n    printf(\"\\n%d\",pass[0]);\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    long n;\n    int i, j, a , b, pass[1000],loc=0;\n    a=b=0;\n    int count = 0 ;\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n\n        scanf(\"%d %d\", &a, &b);\n        count += b-a;\n        pass[i] = count;\n\n    }\n    //printf(\"\\n\\n\\n\");\n    i=0;\n    /*while(i<n){\n\n        printf(\"%d \",pass[i]);\n        i++;\n    }\n    printf(\"\\n\\n\\n\");*/\n\n    for(j=0;j<n-1; j++){\n        for(i=0;i<n;i++){\n            if(pass[i]<pass[i+1]){\n                loc = pass[i];\n                pass[i]=pass[i+1];\n                pass[i+1]=loc;\n            }\n        }\n    }\n    /*i=0;\n    while(i<n){\n\n        printf(\"%d \",pass[i]);\n        i++;\n    }*/\n    printf(\"\\n%d\",pass[0]);\n}\n"}
{"similarity_score": 0.9983079526226735, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a2ca6ea7513a29debea4d5c1d10985dd", "bug_code_uid": "8fa6c5e4d432349ba9dbd9d469115d18", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "7f89058e502af2a929958d1888bd7233", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint x;int y;int c=0;\n\tscanf(\"%d\",&x);\n\ty=x;\n\twhile(x!=0&&x!=3){\n\t    x=x-2;\n\t    c=c+1;\n\t}\n\tif(x==3){\n\t    x=x-3;\n\t    c=c+1;\n\t}\n\tprintf(\"%d\\n\",c);\n\twhile(y!=0&&y!=3){\n\t    y=y-2;\n\t    printf(\"2\");\n\t}\n\tif(y==3){\n\t    y=y-3;\n\t    printf(\"3\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint x;int y;int c=0;\n\tscanf(\"%d\",&x);\n\ty=x;\n\twhile(x!=0&&x!=3){\n\t    x=x-2;\n\t    c=c+1;\n\t}\n\tif(x==3){\n\t    x=x-3;\n\t    c=c+1;\n\t}\n\tprintf(\"%d\\n\",c);\n\twhile(y!=0&&y!=3){\n\t    y=y-2;\n\t    printf(\"2 \");\n\t}\n\tif(y==3){\n\t    y=y-3;\n\t    printf(\"3\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9497784342688331, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "454c118d29c368cb9704355c98a56073", "bug_code_uid": "30fe38169e7a3aaf8c49ccdcdef1a352", "src_uid": "7f5269f3357827b9d8682d70befd3de1", "apr_id": "4c8dc8cdbf76e8d5e143a4d9f01478d6", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nconst int N=2e5+5;\nint main()\n{\n\tint q;\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint i;\n\t\tint n,k,a[N];\n\t\tscanf(\"%d %d\",&n,&k);\n\t\tfor(i = 0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t    int p[N];\n\t    int o = 0;\n\t    int j = 0;\n\t    for(i = 0;i <n;i++)\n\t    {\n\t        if(a[i] % 2 != 0)\n\t        {\n\t            o++;\n\t            if(j<k-1)\n\t            {\n\t                p[j] = i+1;\n\t                j++;\n\t            }\n\t        }\n\t\t}\n\t    if( (o - k + 1) % 2 == 0 || (o - k + 1) <= 0)\n\t        printf(\"NO\\n\");\n\t    else\n\t    {\n\t        p[j] = n;\n\t        printf(\"YES\\n\");\n\t\t\tfor(i=0;i<j;i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",p[i]);\n\t\t\t\tif(i==j-1)\n\t\t\t\t\tprintf(\"%d\\n\",p[j]);\n\t\t\t}\n\t    }\n\t}\n}\n", "fixed": "#include<stdio.h>\nconst int N=2e5+5;\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint i;\n\t\tint n,k,a[N];\n\t\tscanf(\"%d %d\",&n,&k);\n\t\tfor(i = 0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t    int p[N];\n\t    int o = 0;\n\t    int j = 0;\n\t    for(i = 0;i <n;i++)\n\t    {\n\t        if(a[i] % 2 != 0)\n\t        {\n\t            o++;\n\t            if(j<k-1)\n\t            {\n\t                p[j] = i+1;\n\t                j++;\n\t            }\n\t        }\n\t\t}\n\t    if((o - k + 1) % 2 == 0 || (o - k + 1) < 0)\n\t        printf(\"NO\\n\");\n\t    else\n\t    {\n\t        p[j] = n;\n\t        printf(\"YES\\n\");\n\t\t\tfor(i=0;i<j+1;i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",p[i]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t    }\n\t}\n}\n"}
{"similarity_score": 0.9914163090128756, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a0ff14bc05d239f067a93d2980a52a1e", "bug_code_uid": "1cbb180ad89d318b914a6f2373f48213", "src_uid": "45e51f3dee9a22cee86e1a98da519e2d", "apr_id": "f5dd061995dd5e99f12c0bea5a3c762a", "difficulty": 800, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint compare(long *a,long *b)\n{\n    return *a-*b;\n}\n\nint main()\n{\n    long arr[1000],i,j,n,ans=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;++i)\n    scanf(\"%d\",&arr[i]);\n    qsort(arr,n,sizeof(long),compare);\n    for(i=0;i<n-1;++i)\n    {\n        if(arr[i]&&arr[i]==arr[i+1])\n        ++ans;\n        if(arr[i]==arr[i+1]&&arr[i+1]==arr[i+2])\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint compare(long *a,long *b)\n{\n    return *a-*b;\n}\n\nint main()\n{\n    long arr[1000],i,j,n,ans=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;++i)\n    scanf(\"%d\",&arr[i]);\n    qsort(arr,n,sizeof(long),compare);\n    for(i=0;i<n-1;++i)\n    {\n        if(arr[i]&&arr[i]==arr[i+1])\n        ++ans;\n        if(arr[i]&&arr[i]==arr[i+1]&&arr[i+1]==arr[i+2])\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9989669421487604, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "927c8940d7fbda20d14d82239852c8d8", "bug_code_uid": "872ba1c1163e51a799f77a20b6d67028", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "c0970f833a19c43d989d0d07eadd8cc2", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n\n   char arr[1005][1005],c[100];\n   int i,j,k,l,n,lenc=0,res=0,f=0,q=0,pes=0,x=0,y=0,z=0,ex=0;\n\n  scanf(\"%d%d%*c\",&n,&k);\n\n   for(i=0; i<n; i++)\n     gets(arr[i]);\n\n        gets(c);\n\n\n    lenc=strlen(c);\n\n    j=0;\n   for(i=0; i<n; i++){\n      if(strlen(arr[i])<lenc){\n        q=1;\n        j++;\n      }\n      else if(strlen(arr[i])==lenc){\n        f++;\n        z=1;\n      }\n\n   }\n    l=j;\n    y=f;\n    //printf(\"%d %d\\n\",l,y);\n     if(q==0)\n        printf(\"1 \");\n\n    else{\n        if(q==1 && z==0){\n        l--;\n        ex=l;\n        }\n      else if(q==1 && z==1){\n        ex=l;\n      }\n       else\n       ex=l+y;\n\n       //printf(\"%d\\n\",ex);\n       x=0;\n       x=ex;\n       while(ex>=k){\n        ex-=k;\n        pes++;\n       }\n\n\n       //printf(\"%d\\n\",pes);\n       printf(\"%d \",pes*5+(x+1));\n    }\n\n\n\n     f=f+j;\n     q=f;\n\n\n   while(f>k)\n   {\n       f-=k;\n       res++;\n   }\n\n   printf(\"%d\\n\",res*5+q);\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n\n   char arr[1005][1005],c[1000];\n   int i,j,k,l,n,lenc=0,res=0,f=0,q=0,pes=0,x=0,y=0,z=0,ex=0;\n\n  scanf(\"%d%d%*c\",&n,&k);\n\n   for(i=0; i<n; i++)\n     gets(arr[i]);\n\n        gets(c);\n\n\n    lenc=strlen(c);\n\n    j=0;\n   for(i=0; i<n; i++){\n      if(strlen(arr[i])<lenc){\n        q=1;\n        j++;\n      }\n      else if(strlen(arr[i])==lenc){\n        f++;\n        z=1;\n      }\n\n   }\n    l=j;\n    y=f;\n    //printf(\"%d %d\\n\",l,y);\n     if(q==0)\n        printf(\"1 \");\n\n    else{\n        if(q==1 && z==0){\n        l--;\n        ex=l;\n        }\n      else if(q==1 && z==1){\n        ex=l;\n      }\n       else\n       ex=l+y;\n\n       //printf(\"%d\\n\",ex);\n       x=0;\n       x=ex;\n       while(ex>=k){\n        ex-=k;\n        pes++;\n       }\n\n\n       //printf(\"%d\\n\",pes);\n       printf(\"%d \",pes*5+(x+1));\n    }\n\n\n\n     f=f+j;\n     q=f;\n\n\n   while(f>k)\n   {\n       f-=k;\n       res++;\n   }\n\n   printf(\"%d\\n\",res*5+q);\n\nreturn 0;\n}"}
{"similarity_score": 0.9953314659197012, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c05f0fb062a142df1bc84f46a90eac1c", "bug_code_uid": "9860dad12901eb73d7cf9f1b230ae8ec", "src_uid": "c39db222c42d8e85dee5686088dc3dac", "apr_id": "f0ac0026254076f6cb9ac349a78287ec", "difficulty": 1700, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint l,r,inc[100000],dec[100000],n,m,arr[100000],i,j;\n\tscanf(\"%d %d\", &n, &m);\n//\tarr[0] = 0;\n//\tdec[1] = 1;\n//\tinc[1] = 1;\n//\tscanf(\"%d\", &arr[1]);\n\tfor(i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t\tinc[i]=1;\n\t\tdec[i]=1;\n\t\tif(arr[i]<=arr[i-1])\n\t\t\tdec[i] = dec[i-1] + 1;\n\t\telse if(arr[i] >= arr[i-1])\n\t\t\tinc[i] = inc[i-1] + 1;\n\t}\n\tfor(i=0; i<m; i++)\n\t{\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tif(l == r)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse if((dec[r] + inc[r-dec[r]]) >= r-l+1)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse\n\t\t\tprintf(\"No\\n\");\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint l,r,inc[100000],dec[100000],n,m,arr[100000],i,j;\n\tscanf(\"%d %d\", &n, &m);\n//\tarr[0] = 0;\n//\tdec[1] = 1;\n//\tinc[1] = 1;\n//\tscanf(\"%d\", &arr[1]);\n\tfor(i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t\tinc[i]=1;\n\t\tdec[i]=1;\n\t\tif(arr[i]<=arr[i-1])\n\t\t\tdec[i] = dec[i-1] + 1;\n\t\tif(arr[i] >= arr[i-1])\n\t\t\tinc[i] = inc[i-1] + 1;\n\t}\n\tfor(i=0; i<m; i++)\n\t{\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tif(l == r)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse if((dec[r] + inc[r-dec[r]]) >= r-l+1)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse\n\t\t\tprintf(\"No\\n\");\n\t}\n}\n"}
{"similarity_score": 0.5375939849624061, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "2a229bcc5e022c4ce39149e3b2d12724", "bug_code_uid": "ea94e6992bde45d4a4358c507827d1a5", "src_uid": "49c47ebfd710a3733ce7ecb3a3c134a7", "apr_id": "37971422e8895d65dca7fe0c66e6b30a", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, m, i, value;\n\tint min, max, minwrong;\n\n\tscanf(\"%d%d\", &n, &m);\n\n\tmax = 0;\n\tmin = 101;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &value);\n\t\tif (value > max)\n\t\t\tmax = value;\n\t\tif (value < min)\n\t\t\tmin = value;\n\t}\n\n\tfloat a = (float) max / 2;\n\tif (min + a >= max)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\n\tminwrong = 101;\n\tfor (i = 0; i < m; i++)\n\t{\n\t\tscanf(\"%d\", &value);\n\t\tif (value < minwrong)\n\t\t\tminwrong = value;\n\t}\n\n\tif (max >= minwrong)\n\t{\n\t\tprintf(\"-1\");\n\t}\n\telse\n\t\tprintf(\"%d\", max);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, m, i, value;\n\tint min, max, minwrong;\n\n\tscanf(\"%d%d\", &n, &m);\n\n\tmax = 0;\n\tmin = 101;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &value);\n\t\tif (value > max)\n\t\t\tmax = value;\n\t\tif (value < min)\n\t\t\tmin = value;\n\t}\n\n\tminwrong = 101;\n\tfor (i = 0; i < m; i++)\n\t{\n\t\tscanf(\"%d\", &value);\n\t\tif (value < minwrong)\n\t\t\tminwrong = value;\n\t}\n\n\tfor (i = max; i < minwrong; i++)\n\t{\n\t\tfloat a = (float) i / 2;\n\t\tif (min + a <= i)\n\t\t{\n\t\t\tprintf(\"%d\", i);\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprintf(\"-1\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.11609756097560976, "equal_cnt": 38, "replace_cnt": 33, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 39, "lang": "GNU C11", "fix_code_uid": "96eb8452da00ca0deb18f4a145e5ccfd", "bug_code_uid": "832199d2721279ca3f4e7b903a22fb1d", "src_uid": "710c7211d23cf8c01fae0b476a889276", "apr_id": "adf410624cae0ca601da785b895e6db1", "difficulty": 1000, "tags": ["brute force", "math", "number theory", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n    int n,m,temp,z=0,i,t,w;\n    char a[100000],b[100000];\n    scanf(\"%d\",&t);\n    getchar();\n    while(t--)\n    {\n        memset(a,'\\0',sizeof(a));\n        memset(b,'\\0',sizeof(b));\n        gets(a);\n        n=strlen(a);\n        gets(b);\n        m=strlen(b);\n        int p=n,q=m;\n        w=n*m;\n        while((n-m)!=0)\n        {\n            if(n>m)\n                n=n-m;\n            else\n                m=m-n;\n        }\n        temp=w/m;\n        for(i=0; i<temp; i++)\n        {\n            if(a[i%p]!=b[i%q])\n            {\n                z=1;\n                break;\n            }\n        }\n        if(z==1)\n            printf(\"-1\\n\");\n        else\n            for(i=0; i<temp; i++)\n            {\n                if(i==temp-1)\n                    printf(\"%c\\n\",a[i%p]);\n                else\n                    printf(\"%c\",a[i%p]);\n            }\n    }\n\n    return 0;\n}\n\n \t\t \t\t\t\t  \t\t\t\t \t \t\t  \t\t\t  \t\t\t", "fixed": "//\u8f93\u51fa\u6700\u77ed\u516c\u500d\u4e32\uff0c\u5747\u7531a, b, \u7ec4\u6210\n/*\n\u601d\u8def\uff1a\n\t\u5148\u6c42\u5404\u81ea\u7684\u957f\u5ea6\uff0c\u7136\u540e\u6c42\u5176\u6700\u5927\u516c\u56e0\u6570\uff0c\u5728\u6c42\u5176\u6700\u5c0f\u516c\u500d\u6570 \n\t \n*/ \n# include <stdio.h>\n\n# include <string.h>\n\nint gcm(int a, int b)\n{\n/*\tif(a >= b)\n\t{\n\t\tif(a % b == 0)\n\t\t\treturn b;\n\t\telse\n\t\t\treturn gcm(b, a%b);\n\t}\n\t\n\telse\n\t{\n\t\tif(b % a == 0)\n\t\t\treturn a;\n\t\telse \n\t\t\treturn gcm(b, b%a);\n\t}\n*/\n\tint i;\n\tif(a >= b)\n\t\ti = a;\n\telse\n\t\ti = b;\n\t\t\n\tfor(i; i>=1; i--)\n\t{\n\t\tif(a%i==0 && b%i==0)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\t\t\n}\nint main(void)\n{\n\tint len1, len2, i, j, k, n, lcm; \n\tchar s1[2002], s2[2002], ans[2002];\n\t\n\tfor(k=0; k<2002; ++k)\n\ts1[k] = s2[k] = 0;\n\tscanf(\"%d\", &n);\n\tgetchar(); \n\t\n\tfor(i=0; i<n; ++i)\n\t{\n\t\tgets(s1);\n\t\tgets(s2);\n\t\t\n\t\tlen1 = strlen(s1);\n\t\tlen2 = strlen(s2);\n\t\t\n\t\tlcm = (len1*len2) / gcm(len1, len2);\t//\u627e\u5230\u6700\u5c0f\u516c\u500d\u6570\n\t//\tprintf(\"\u6700\u5c0f\u516c\u500d\u6570\u4e3a\uff1a%d\", lcm);\n\t\t\n\t\tk = 0;\t\t//\u8865\u5168s1 \n\t\tfor(j=len1; j<lcm; j++)\n\t\t{\n\t\t\ts1[j] = s1[k++];\n\t\t}\n\t\t\n\t\tk = 0;\t\t//\u8865\u5168s2 \n\t\tfor(j=len2; j<lcm; j++)\n\t\t{\n\t\t\ts2[j] = s2[k++];\n\t\t}\n\t\t\n\t\tif(strcmp(s1, s2) == 0)\n\t\t\tprintf(\"%s\\n\", s1);\n\t\telse\n\t\t\tprintf(\"-1\\n\"); \n\t\t\n\t\tfor(k=0; k<2002; ++k)\n\t\t\ts1[k] = s2[k] = 0;\n\t}\n\t\n\t\n\treturn 0;\n } \n  \t\t\t\t \t\t   \t  \t\t \t\t\t\t  \t    \t"}
{"similarity_score": 0.9919354838709677, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "295d5ea7be65a25fb40c62d6a09b8e12", "bug_code_uid": "641a5fed508faf62253f812c265960b3", "src_uid": "1cc628b4e03c8b8e0c5086dc4e0e3254", "apr_id": "1d0a928bb0fe0d7b22a94339bd416e43", "difficulty": 900, "tags": ["brute force", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include\"stdio.h\"\r\n\r\nvoid solve(){\r\n    long long wheels;\r\n\r\n    long long min = 0,max = 0;\r\n    scanf(\"%lld\",&wheels);\r\n    if(wheels % 2 == 1){printf(\"-1\\n\");}\r\n    else if( wheels <= 16){\r\n        \r\n         switch (wheels){\r\n             case 4 : \r\n             case 6 : printf(\"1 1\\n\");break;\r\n             case 8 : \r\n             case 10 : printf(\"2 2\\n\");break;\r\n             case 12 : printf(\"2 3\\n\");break;\r\n             case 14 : printf(\"3 3\\n\");break;\r\n             case 16 : printf(\"3 4\\n\");break;\r\n                \r\n         }  \r\n            }\r\n    else\r\n    {\r\n        \r\n        max = wheels / 4;\r\n        \r\n        \r\n            min = wheels /6 ;\r\n        if(wheels % 6 != 0){min++;}\r\n  \r\n        printf(\"%lld %lld\\n\",min,max);\r\n    }\r\n    \r\n     \r\n}\r\n\r\nint main(){\r\n    int  t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n}\r\n", "fixed": "#include\"stdio.h\"\r\n\r\nvoid solve(){\r\n    long long wheels;\r\n\r\n    long long min = 0,max = 0;\r\n    scanf(\"%lld\",&wheels);\r\n    if(wheels % 2 == 1 || wheels < 4){printf(\"-1\\n\");}\r\n    else if( wheels <= 16){\r\n        \r\n         switch (wheels){\r\n             case 4 : \r\n             case 6 : printf(\"1 1\\n\");break;\r\n             case 8 : \r\n             case 10 : printf(\"2 2\\n\");break;\r\n             case 12 : printf(\"2 3\\n\");break;\r\n             case 14 : printf(\"3 3\\n\");break;\r\n             case 16 : printf(\"3 4\\n\");break;\r\n                \r\n         }  \r\n            }\r\n    else\r\n    {\r\n        \r\n        max = wheels / 4;\r\n        \r\n        \r\n            min = wheels /6 ;\r\n        if(wheels % 6 != 0){min++;}\r\n  \r\n        printf(\"%lld %lld\\n\",min,max);\r\n    }\r\n    \r\n     \r\n}\r\n\r\nint main(){\r\n    int  t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n}\r\n"}
{"similarity_score": 0.39410681399631675, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a4a808dd2e7c76c61f378360d70fe261", "bug_code_uid": "4977070c0a4a0dd755358b18e6be0699", "src_uid": "36ad784f23bd1e8e579052642a6e9244", "apr_id": "80ac6c283d15a5a4d98325f6cf532b84", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\ndouble power(int b)\n{\n\tdouble ret=1;\n\tdouble y=1.000000011;\n\tint j;\n\t\n\tfor(j=1;j<=b;j++)\n\t{\n\t\tret*=y;\n\t}\n\t\n\treturn ret;\n}\n\nint main()\n{\n\tint n,t;\n\t\n\tscanf(\"%d%d\", &n,&t);\n\t\n\tdouble answer=1;\n\t\n\tanswer*=(double)n;\n\t\n\tdouble x=power(t);\n\n\tanswer*=x;\n\t\n\tprintf(\"%.16f\", answer);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tint n,t;\n\t\n\tscanf(\"%d%d\", &n,&t);\n\t\n\tdouble answer=1;\n\t\n\tanswer*=(double)n;\n\t\n\tdouble x=pow(1.000000011,t);\n\n\tanswer*=x;\n\t\n\tprintf(\"%.16f\", answer);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.46296296296296297, "equal_cnt": 23, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "b585d42cabebf55961921878ffc5456d", "bug_code_uid": "303eb53cf28ade4a5b73579635afbd50", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "057286935c80fcf864cecda7b38cd130", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint rec(int i , int n, int T[],int *nmb_h)\n{\n\n  if (i<n)\n  { \n        (*nmb_h)+=T[i];\n        i++;\n         rec(i,  n, T,nmb_h);\n    }\n\n}\nint main(void) {\n  int i,j ,x,n,aux,nmb_h=0,sum=0;\n  scanf(\"%d %d\",&n,&x);\n  int T[n];\n  for (i=0;i<n;i++)\n  {scanf(\"%d\",&T[i]);\n      sum+=T[i];\n  }\n \nfor (i=n-1;i>0;i--)\n{for (j=1;j<=i;j++)\n{\n  if (T[j]<T[j-1])\n  {\n    aux=T[j];\n    T[j]=T[j-1];\n    T[j-1]=aux;\n  }\n}}\n \n \ni=0;\nwhile (i<n && x>1 )\n{\n  \n  nmb_h+=x*T[i];\n  x--;\n  i++;\n}\n/*if (i<n)\n{nmb_h+=rec( i,  n, T,&nmb_h);}*/\n \nprintf(\"%d \",sum+nmb_h-i);\n \n \n \n \n \n \n \n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n \n int cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nint rec(int i , int n, long long int  T[],long long int *nmb_h)\n{\n \n  if (i<n)\n  { \n        (*nmb_h)+=T[i];\n        i++;\n         rec(i, n, T,nmb_h);\n    }\n \n}\nint main(void) {\n  int i,j ,x,n,aux ;\n  long long int  nmb_h=0;\n  scanf(\"%d %d\",&n,&x);\n  long long int  T[n];\n  for (i=0;i<n;i++)\n  {scanf(\"%lld\",&T[i]);\n      \n  }\n \n qsort(T,n, sizeof(long long int),cmpfunc) ;\n \ni=0;\nwhile ( i<n && x>0 )\n{\n  \n  nmb_h+=x*T[i];\n  x--;\n  i++;\n}\n if (i<n)\n{while(i<n)\n    {nmb_h+=T[i];\n        i++;\n    }\n} \n \nprintf(\"%lld\",nmb_h);\n \n \n \n \n \n \n \n  return 0;\n}"}
{"similarity_score": 0.8973544973544973, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "669ca7499635f1c462366c5e6f8d0d6a", "bug_code_uid": "24ba76573f6bf04791adfbfc959dfca1", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "2ffdd8a748f52c8547552aef85aadb57", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n;\n    int i;\n    int a[100000];\n    int b[100000];\n    int sum1 =0, sum2 =0;\n\n    int max,second;\n\n\n\n    scanf(\"%d\", &n);\n    for( i = 0 ; i < n ; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for( i = 0 ; i < n ; i++)\n    {\n        scanf(\"%d\", &b[i]);\n    }\n\n\n    for(i = 0 ; i < n ; i++)\n    {\n        sum1+=a[i];\n    }\n\n    max = b[0];\n    second = b[1];//\u6b21\u5927\u503c\n    for(i = 0; i < n; i++)\n    {\n        if(b[i] > max)       //\u66f4\u65b0\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\n        {\n            second = max;\n            max = b[i];\n        }\n        else if(b[i] < max && b[i] > second)  //\u66f4\u65b0\u6b21\u5927\u503c\n        {\n            second = b[i];\n        }\n    }\n    sum2 = max + second;\n//    printf(\"%d , %d %d  \" ,max ,second ,sum2);\n    if(sum1 <= sum2)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    long long int n;\n    long long int i;\n    long long int a[100000];\n    long long int b[100000];\n    long long int sum1 =0, sum2 =0;\n\n    long long int max,second;\n\n\n\n    scanf(\"%lld\", &n);\n    for( i = 0 ; i < n ; i++)\n    {\n        scanf(\"%lld\", &a[i]);\n    }\n    for( i = 0 ; i < n ; i++)\n    {\n        scanf(\"%lld\", &b[i]);\n    }\n\n//    if(n <= 2)\n//    {\n//        printf(\"YES\");\n//    }\n    for(i = 0 ; i < n ; i++)\n    {\n        sum1+=a[i];\n    }\n//    printf(\"%d   \" , sum1);\n    max = b[0];\n    second = b[1];//\u6b21\u5927\u503c\n    for(i = 0; i < n; i++)\n    {\n        if(b[i] > max)       //\u66f4\u65b0\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\n        {\n            second = max;\n            max = b[i];\n        }\n        else if(b[i] < max && b[i] > second)  //\u66f4\u65b0\u6b21\u5927\u503c\n        {\n            second = b[i];\n        }\n    }\n    sum2 = max + second;\n//    printf(\"%d , %d %d  \" ,max ,second ,sum2);\n    if(sum1 <= sum2)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9889361702127659, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6a14ee08024b22f4e59cb2b646f7d548", "bug_code_uid": "0b4f6ea60d87ccaa45650e5d366ff55d", "src_uid": "288f147bb8a3c30b0bb712a01c65109b", "apr_id": "e8dd4d8e0edc444291df426bf6c03346", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nlong long int a[100000000];\r\nint cmp(const void*a,const void*b)\r\n{\r\n    return (*(int*)a-*(int*)b);\r\n}\r\nint solve(int n)\r\n{\r\n    int i;\r\n    for(i=0;i<n;i++)\r\n        scanf(\"%lld\",&a[i]);\r\n    qsort(a,n,sizeof(int),cmp);\r\n    if(n==1)\r\n        return 1;\r\n    for(i=0;i<n-1;i++)\r\n    {\r\n        if(a[i]==a[i+1])\r\n            return 0;\r\n    }\r\n    return 1;\r\n}\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        if(solve(n))\r\n            puts(\"YES\");\r\n        else\r\n            puts(\"NO\");\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint a[10000000];\r\nint cmp(const void*a,const void*b)\r\n{\r\n    return (*(int*)a-*(int*)b);\r\n}\r\nint solve(int n)\r\n{\r\n    int i;\r\n    for(i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n    qsort(a,n,sizeof(int),cmp);\r\n    if(n==1)\r\n        return 1;\r\n    for(i=0;i<n-1;i++)\r\n    {\r\n        if(a[i]==a[i+1])\r\n            return 0;\r\n    }\r\n    return 1;\r\n}\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        if(solve(n))\r\n            puts(\"YES\");\r\n        else\r\n            puts(\"NO\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.33288590604026846, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "428c7810c5b822e98edc09a8c8e0c096", "bug_code_uid": "70c8de51274c68ec2ee2ceba7ab983a4", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "cd22e7ca1237b4b9bddab28ac348d17c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "//bit++\n#include<stdio.h>\n#include<string.h>\nint main(){\n\n    int n,a,b,i,x=0;\n    char c[5];\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&n);\n\n\n    for(i=1;i<=n;i++){\n        gets(c);\n        if(strcmp(c,\"X++\")==0)x++;\n        else if(strcmp(c,\"X--\")==0)x--;\n        else if(strcmp(c,\"++X\")==0)++x;\n        else if(strcmp(c,\"--X\")==0)--x;\n    }\n\n    printf(\"%d\\n\",x);\n    return 0;\n", "fixed": "//bit++\n#include<stdio.h>\n#include<string.h>\nint main(){\n\n    int n,i,x=0;\n    char c[5];\n    scanf(\"%d\",&n);\n    scanf(\" \");\n\n\n    for(i=1;i<=n;i++){\n        gets(c);\n        if(strcmp(c,\"X++\")==0)x++;\n        else if(strcmp(c,\"X--\")==0)x--;\n        else if(strcmp(c,\"++X\")==0)x=x+1;\n        else if(strcmp(c,\"--X\")==0)x=x-1;\n    }\n\n    printf(\"%d\\n\",x);\n    return 0;\n}"}
{"similarity_score": 0.9991518235793045, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cb0ea9a7940826a195776b73ac2fd593", "bug_code_uid": "781799530e128cab0549007364c95b94", "src_uid": "fb0e6a573daa0ee7c20d20b0d2b83756", "apr_id": "fae1162c39dfd855ab67d5f4561fd0d6", "difficulty": 1500, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,m,xmax;\n    long long ymax;\n    scanf(\"%d\",&n);\n    int h[10001];\n    int i;\n    for (i = 0 ; i < n ; i++)\n        scanf(\"%d\",&h[i]);\n    scanf(\"%d\",&m);\n    int tx, ty,x,tt;\n    xmax = ymax = 0;\n    for (tt = 0 ; tt< m; tt++) {\n\n        scanf(\"%d%d\",&tx,&ty);\n        //printf(\"%d %d .\",tx,ty);\n        if (tx > xmax) {\n            for (x = xmax; x < tx; x++)\n                if (h[x] > ymax) ymax = h[x];\n            xmax = tx;\n            }\n            printf(\"%I64d\\n\",ymax);\n            ymax += ty;\n        }\n   // while (1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,m,xmax;\n    long long ymax;\n    scanf(\"%d\",&n);\n    int h[100001];\n    int i;\n    for (i = 0 ; i < n ; i++)\n        scanf(\"%d\",&h[i]);\n    scanf(\"%d\",&m);\n    int tx, ty,x,tt;\n    xmax = ymax = 0;\n    for (tt = 0 ; tt< m; tt++) {\n\n        scanf(\"%d%d\",&tx,&ty);\n        //printf(\"%d %d .\",tx,ty);\n        if (tx > xmax) {\n            for (x = xmax; x < tx; x++)\n                if (h[x] > ymax) ymax = h[x];\n            xmax = tx;\n            }\n            printf(\"%I64d\\n\",ymax);\n            ymax += ty;\n        }\n   // while (1);\n    return 0;\n}\n"}
{"similarity_score": 0.9907651715039578, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1113aa814f4126e33e8689994253ddd1", "bug_code_uid": "1e0eaf7f0e098ac9929afd32d0729c7a", "src_uid": "5dbf91f756fecb004c836a628eb23578", "apr_id": "907e175e7522345dce31233c29ac6d64", "difficulty": 1900, "tags": ["shortest paths", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define min(a, b) (((a) < (b)) ? (a) : (b))\n\nint main(void) {\n    int i, j;\n    int n, adj[300][300], k;\n\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++)\n        for (j = 0; j < n; j++)\n            scanf(\"%d\", adj[i] + j);\n\n    scanf(\"%d\\n\", &k);\n    while (k--) {\n        int a, b, c;\n        int sum;\n\n        scanf(\"%d %d %d\", &a, &b, &c);\n        a--;\n        b--;\n\n        for (i = 0; i < n; i++)\n            for (j = i + 1; j < n; j++)\n                adj[i][j] = adj[j][i] = min(min(adj[i][j], adj[i][a] + c + adj[b][j]), adj[i][b] + c + adj[a][j]);\n\n        sum = 0;\n        for (i = 0; i < n; i++)\n            for (j = i + 1; j < n; j++)\n                sum += adj[i][j];\n\n        printf(\"%d \", sum);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define min(a, b) (((a) < (b)) ? (a) : (b))\n\nint main(void) {\n    int i, j;\n    int n, adj[300][300], k;\n\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++)\n        for (j = 0; j < n; j++)\n            scanf(\"%d\", adj[i] + j);\n\n    scanf(\"%d\\n\", &k);\n    while (k--) {\n        int a, b, c;\n        long long sum;\n\n        scanf(\"%d %d %d\", &a, &b, &c);\n        a--;\n        b--;\n\n        for (i = 0; i < n; i++)\n            for (j = i + 1; j < n; j++)\n                adj[i][j] = adj[j][i] = min(min(adj[i][j], adj[i][a] + c + adj[b][j]), adj[i][b] + c + adj[a][j]);\n\n        sum = 0;\n        for (i = 0; i < n; i++)\n            for (j = i + 1; j < n; j++)\n                sum += adj[i][j];\n\n        printf(\"%lld \", sum);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.49584487534626037, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "9dd5784da11076174700ca766ffa98da", "bug_code_uid": "768b63103299deae73333c1f57e06dc9", "src_uid": "fad203b52e11706d70e9b2954c295f70", "apr_id": "6904134ae54567651cca52d5c39645f7", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <ctype.h>\n#include <math.h>\n#include <string.h>\n\n#define MAX 10\n#define MAXE 20000\n\nint main (void) {\n\tint i, j, t; /* counters */\n\tint n, m, k, a[MAXE + 1][MAX + 1], x, y;\n\tint emp[MAXE + 1] = {0};\n\tint room[MAX + 1][MAXE];\n\tint top[MAXE + 1] = {0};\n\t\n\tmemset(room, 0, sizeof(room));\n\t\n\tscanf (\"%d %d %d\", &n, &m, &k);\n\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0, t = 0; j < m; j++){\n\t\t\tscanf (\"%d\", &a[i][j]);\n\t\t\tif (a[i][j]) room[j][top[j]++] = i + 1;\n\t\t}\n\n\tfor (i = 0; i < k; i++){\n\t\tscanf(\"%d %d\", &x, &y);\n\t\t\n\t\tfor (t = 0; t <= top[y - 1]; t++) \n\t\t\t\temp[room[y - 1][t] - 1]++;\n\t\temp[x - 1]--;\n\t}\n\tfor (i = 0; i < n; i++){\n\t\tprintf(\"%d\", emp[i]);\n\t\tif (i + 1 == n) putchar('\\n');\n\t\telse putchar(' ');\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <ctype.h>\n#include <math.h>\n#include <string.h>\n\n#define MAX 11\n#define MAXE 20002\n\nint notif[MAX + 1];\nlong int talkedTo[MAXE+ 1];\n\nint main (void) {\n\tint i, j, t; /* counters */\n\tint n, m, k, a[MAXE + 1][MAX + 1], x, y;\n\n\n\tscanf (\"%d %d %d\", &n, &m, &k);\n\n\tfor (i = 1; i <= n; i++)\n\t\tfor (j = 1; j <= m; j++){\n\t\t\tscanf (\"%d\", &a[i][j]);\n\t\t}\n\n\tfor (i = 0; i < k; i++){\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tnotif[y]++;\n\t\ttalkedTo[x]--; \n\t}\n\n\tfor (i = 1; i <= n; i++) {\n\t\tfor (j = 1; j <= m; j++)\n\t\t\ttalkedTo[i] += notif[j]*a[i][j];\n\t\tprintf(\"%li \", talkedTo[i]);\n\t}\n\t\n\tputchar('\\n');\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9970149253731343, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e644bdff8a874f7b9cd1ea4eedc2e69a", "bug_code_uid": "30e4aac61f4bd0ca332c7651863f2f0c", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "f80470adef05981ad0a0820bda082fcc", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#include <string.h>\nint main()\n{\n\tint n,l,i;\n\tchar a[200][100],b[100];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\t\n\t   // strcpy(b,a[i]);\n\t\tl=strlen(a[i]);\n\t\tif(l<=10)\n\t\t{\n\t\t\tprintf(\"%s\\n\",a[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%c%d%c\\n\",a[i][0],l-2,a[i][l-1]);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n#include <string.h>\nint main()\n{\n\tint n,l,i;\n\tchar a[200][200],b[100];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\t\n\t   // strcpy(b,a[i]);\n\t\tl=strlen(a[i]);\n\t\tif(l<=10)\n\t\t{\n\t\t\tprintf(\"%s\\n\",a[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%c%d%c\\n\",a[i][0],l-2,a[i][l-1]);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5623387790197765, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "aa74479417baacdfd57c8c95740b0e01", "bug_code_uid": "34febaf7f1dee8a3223e1b7cce4383cc", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "07e3dca1529ee84f437700e1021b09f4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nchar v[1000];\r\n\r\nint main() {\r\n    int n, i, a, j;\r\n    char c;\r\n    scanf( \"%d\", &n );\r\n    fgetc( stdin );\r\n    for( i = 0; i < n; i++ ) {\r\n        scanf( \"%d\", &a );\r\n        j = 1;\r\n        c = fgetc( stdin );\r\n        v[j] = c;\r\n        while( c != '\\n' ) {\r\n            c = fgetc( stdin );\r\n            v[j] = c;\r\n            j++;\r\n        }\r\n        if( v[0] + v[1] + v[2] == v[j] + v[j - 1] + v[j - 2] )\r\n            v[i] = '1';\r\n        else\r\n            v[i] = '0';\r\n    }\r\n    for( i = 0; i < n; i++ )\r\n        if( v[i] == '1' )\r\n            printf( \"YES\\n\" );\r\n        else\r\n            printf( \"NO\\n\" );\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nchar v[1000];\r\nchar s[7];\r\n\r\nint main() {\r\n    int n, i;\r\n    scanf( \"%d\", &n );\r\n    fgetc( stdin );\r\n    for( i = 0; i < n; i++ ) {\r\n        scanf( \"%s\", s );\r\n        if( s[0] + s[1] + s[2] == s[3] + s[4] + s[5] )\r\n            v[i] = '1';\r\n        else\r\n            v[i] = '0';\r\n    }\r\n    for( i = 0; i < n; i++ )\r\n        if( v[i] == '1' )\r\n            printf( \"YES\\n\" );\r\n        else\r\n            printf( \"NO\\n\" );\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9938398357289527, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a152254dee2bcbb0abdfc9110846653a", "bug_code_uid": "3ce96b4342dd1094af5fb28567e145a0", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "69cdaebf17fc242bc62dceef9c929edc", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\nint main(){\n\tint t,a,b,c,d,e;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tif(a<b)e=a,a=b,b=e;\n\t\tif(c<d)e=c,c=d,d=e;\n\t\tif(a!=c)printf(\"No\\n\");\n\t\telse if(b+d!=a)printf(\"No\\n\");\n\t\telse printf(\"Yes\\n\");\n\t}\n\n", "fixed": "#include <stdio.h>\nint main(){\n\tint t,a,b,c,d,e;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tif(a<b)e=a,a=b,b=e;\n\t\tif(c<d)e=c,c=d,d=e;\n\t\tif(a!=c)printf(\"No\\n\");\n\t\telse if(b+d!=a)printf(\"No\\n\");\n\t\telse printf(\"Yes\\n\");\n\t}\n}"}
{"similarity_score": 0.30318257956448913, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "22d3c7786069efde4cd6e08e283ddc2b", "bug_code_uid": "61a6a2b2b55a381a5f67ee029e0a6be2", "src_uid": "ee295fd90ee9283709447481f172c73c", "apr_id": "9a817f1ec40821cc011c72b7aee5ddda", "difficulty": 1100, "tags": ["data structures", "brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <stdbool.h>\n#include <ctype.h>\n#define F0R(i, a) for (int i=0; i<(a); i++)\n\nint max(int a, int b) {return a > b ? a : b;}\nint min(int a, int b) {return a < b ? a : b;}\nint maxPos(int* arr, int n) {\n\tint mx = -1e9-100;\n\tF0R(i, n) {\n\t\tmx = max(mx, *(arr+i));\n\t}\n\tF0R(i, n) {\n\t\tif(*(arr+i) == mx) return i;\n\t}\n}\nint minPos(int* arr, int n) {\n\tint mn = 1e9+100;\n\tF0R(i, n) {\n\t\tmn = min(mn, *(arr+i));\n\t}\n\tF0R(i, n) {\n\t\tif(*(arr+i) == mn) return i;\n\t}\n}\n\nconst int mxN = 2e5 + 6;\n\nint main() {\n\n\tchar s[mxN];\n\tscanf(\"%s\", s);\n\tint n = strlen(s);\n\tchar arr[mxN];\n\tint ans = 0, l = 0;\n\tfor(int i = 0; i < n; i++) {\n\t\tif(s[i] == 'B') {\n\t\t\tif(l > 0) {\n\t\t\t\tans--;\n\t\t\t\tl--;\n\t\t\t}\n\t\t} else {\n\t\t\tans++;\n\t\t\tl++;\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define F0R(i, a) for(int i=0; i<(a); i++)\n\nconst int mxN = 2e6 + 10;\n\nint main() {\n\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile(T--) {\n\t\tchar s[mxN];\n\t\tscanf(\"%s\", s);\n\t\tint n = strlen(s);\n\t\tint l = 0;\n\t\tF0R(i, n) {\n\t\t\tif(l > 0 && s[i] == 'B') {\n\t\t\t\tl--;\n\t\t\t} else {\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", l);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.7372400756143668, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0d8b053ccba0d74784fa2cbe8cc9ff31", "bug_code_uid": "94e021a1e93545d82ba164f19437fafb", "src_uid": "8bbec86e427e26158393bbfbf1a067fe", "apr_id": "0476489cae2dabe691f971caceefb127", "difficulty": 1100, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*\nA\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint min(int a, int b){\n  return (a < b) ? a : b;\n}\n\nint max(int a, int b){\n  return (a > b) ? a : b;\n}\n\nint main(){\n  int casos, a, b, total, aux;\n\n  scanf(\"%d\", &casos);\n\n  while(casos--){\n    scanf(\"%d %d\", &a, &b);\n\n    if(a > b){\n      aux = a;\n      a = b;\n      b = aux;\n    }\n    \n    total = 0;\n    while(a >= 1 && b >= 2){\n      --a;\n      b -= 2;\n      ++total;\n\n      if(a > b){\n\taux = a;\n\ta = b;\n\tb = aux;\n      }\n    }\n\n    printf(\"%d\\n\", total);\n  }\n\n  return 0;\n}\n", "fixed": "/*\nA\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint min(int a, int b){\n  return (a < b) ? a : b;\n}\n\nint max(int a, int b){\n  return (a > b) ? a : b;\n}\n\nint main(){\n  int casos, a, b, total, aux;\n\n  scanf(\"%d\", &casos);\n\n  while(casos--){\n    scanf(\"%d %d\", &a, &b);\n\n    if(a > b){\n      aux = a;\n      a = b;\n      b = aux;\n    }\n    \n    total = 0;\n    total = (a + b) / 3;\n    if(total < a && total < b)\n      printf(\"%d\\n\", total);\n    else\n      printf(\"%d\\n\", a);\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.9814995131450828, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "04708f3f22e534c5904b53fb00bce6ce", "bug_code_uid": "99e245646b6a12844639fe5335afbf6f", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "8c2170c9e26e1147edd76bcafe5a1623", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <memory.h>\n\nint main()\n{\n    int n = 0;\n    scanf(\"%d\", &n);\n    long long int ans = 0, cnt = 0, zero = 0;\n    while(n--){\n        int x = 0;\n        scanf(\"%d\", &x);\n        if (x < 0){\n            cnt++;\n            ans += -1-x;\n        } else if (x ==0){\n            zero += 1;\n        } else{\n            ans += x - 1;\n        }\n    }\n    if(cnt %2 > 0&& zero == 0){\n        printf(\"%d\\n\", ans+2);\n    } else{\n        printf(\"%d\\n\", ans+zero);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <memory.h>\n\nint main()\n{\n    int n = 0;\n    scanf(\"%d\", &n);\n    long long int ans = 0, cnt = 0, zero = 0;\n    while(n--){\n        long long int x = 0;\n        scanf(\"%I64d\", &x);\n        if (x < 0){\n            cnt++;\n            ans += -1-x;\n        } else if (x ==0){\n            zero += 1;\n        } else{\n            ans += x - 1;\n        }\n    }\n    if(cnt %2 > 0&& zero == 0){\n        printf(\"%I64d\\n\", ans+2);\n    } else{\n        printf(\"%I64d\\n\", ans+zero);\n    }\n}\n"}
{"similarity_score": 0.9452286843591191, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "f7bd7b23f176f06220131c7d5cfb823e", "bug_code_uid": "9816eba86b441b4c176f2172bec932cc", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "d69caf8b77a8f10fe21b929ae67378f3", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint A[100005],B[100005],C[100005];\nint main()\n{\n    int i, j,n,x;long long ans=0;\n    scanf(\"%d%d\",&n,&x);\n    for(i=1; i<=n; i++)\n        scanf(\"%d\",&A[i]);\n    for(i = 0; i <= 100005; i++)\n            C[i] = 0;\n    for(j =1; j <= n; j++)\n            C[A[j]] = C[A[j]] + 1;\n    for(i = 1; i <= 100005; i++)\n            C[i] = C[i] + C[i-1];\n    for(j = n; j >= 1; j--)\n    {\n            B[C[A[j]]] = A[j];\n            C[A[j]] = C[A[j]] - 1;\n    }\n   /* printf(\"\\nThe Sorted array is :\\n\");\n    for(i = 1; i <= n; i++)\n          printf(\"\\t%d\",B[i]);*/\n         for(i=1; i<=n; i++)\n         {\n             if(i==1){\n                ans+=B[i]*x;\n                x=x-1;}\n             else{\n             if(x-1<1)\n                ans+=B[i];\n             else{\n                ans+=B[i]*x;\n                x=x-1;}}\n\n         }\n         printf(\"%I64d\\n\",ans);\n\n}\n", "fixed": "#include<stdio.h>\nlong long A[100005],B[100005],C[100005];\nint main()\n{\n    long long i, j,n,x;long long ans=0;\n    scanf(\"%I64d%I64d\",&n,&x);\n    for(i=1; i<=n; i++)\n        scanf(\"%I64d\",&A[i]);\n    for(i = 0; i <= 100005; i++)\n            C[i] = 0;\n    for(j =1; j <= n; j++)\n            C[A[j]] = C[A[j]] + 1;\n    for(i = 1; i <= 100005; i++)\n            C[i] = C[i] + C[i-1];\n    for(j = n; j >= 1; j--)\n    {\n            B[C[A[j]]] = A[j];\n            C[A[j]] = C[A[j]] - 1;\n    }\n   /* printf(\"\\nThe Sorted array is :\\n\");\n    for(i = 1; i <= n; i++)\n          printf(\"\\t%d\",B[i]);*/\n         for(i=1; i<=n; i++)\n         {\n             if(i==1){\n                ans+=B[i]*x;\n                x=x-1;}\n             else{\n             if(x-1<1)\n                ans+=B[i];\n             else{\n                ans+=B[i]*x;\n                x=x-1;}}\n\n         }\n         printf(\"%I64d\\n\",ans);\n\n}\n"}
{"similarity_score": 0.9966666666666667, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ad04a95ab70de9ce07e236e876c900c4", "bug_code_uid": "1d2bbd34ff5156c7e6129d480464b0c9", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "2173898f56b952243096e3327cbc1e18", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n       int t,n,i;\n       scanf(\"%d\",&t);\n       for(i=0;i<t;i++)\n       {\n                 scanf(\"%d\",&n);\n                 if(n%2==0)\n                 printf(\"YES\\n\");\n                 else\n                 printf(\"NO\\n\");\n       }\n       return 0;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n       int t,n,i;\n       scanf(\"%d\",&t);\n       for(i=0;i<t;i++)\n       {\n                 scanf(\"%d\",&n);\n                 if(n%4==0)\n                 printf(\"YES\\n\");\n                 else\n                 printf(\"NO\\n\");\n       }\n       return 0;\n}"}
{"similarity_score": 0.718351324828263, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "80ccb622b4e334d85dd6729d8343d16e", "bug_code_uid": "80573388dd3c0791f1fe3884ed95632f", "src_uid": "0870110338a84f76d4870d06dc9da2df", "apr_id": "46fe9f3558695c997172aaec3bca22be", "difficulty": 1500, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <ctype.h>\n\nint main()\n{\n    int n, m, x, q, c = 0, r = 0, i, j, k, l;\n    char s[30][31], p;\n    int a[26] = {0};\n    int b[900][2];\n\n    scanf(\"%d %d %d\", &n, &m, &x);\n\n    for (i = 0; i < n; i++) scanf(\"%s\", s[i]);\n\n    for (i = 0; i < n; i++) {\n\tfor (j = 0; j < m; j++) {\n\t    if (s[i][j] == 'S') {\n\t\tb[r][0] = i; b[r++][1] = j;\n\t    } else {\n\t\ta[s[i][j] - 'a'] = 1;\n\t    }\n\t}\n    }\n\n    scanf(\"%d%*c\", &q);\n\n    for (i = 0; i < q; i++) {\n\tscanf(\"%c\", &p);\n\n\tif (islower(p)) {\n\t    if (a[p - 'a'] == 0) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t    }\n\t} else {\n\t    if (r == 0 || a[p - 'A'] == 0) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t    } else {\n\t\tint f = 0;\n\n\t\tfor (j = 0; j < n; j++) {\n\t\t    for (k = 0; k < m; k++) {\n\t\t\tif (s[j][k] == tolower(p)) {\n\t\t\t    for (l = 0; l < r; l++) {\n\t\t\t\tif ((b[l][0] - j) * (b[l][0] - j) + (b[l][1] - k) * (b[l][1] - k) <= x * x) {\n\t\t\t\t    f = 1; j = n; k = m; break;\n\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\n\t\tif (f == 0) c++;\n\t    }\n\t}\n    }\n\n    printf(\"%d\\n\", c);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <ctype.h>\n\nint main()\n{\n    int n, m, x, q, c = 0, r = 0, i, j, k;\n    char s[30][31], p;\n    int a[26] = {0};\n    int b[900][2];\n\n    scanf(\"%d %d %d\", &n, &m, &x);\n\n    for (i = 0; i < n; i++) scanf(\"%s\", s[i]);\n\n    for (i = 0; i < n; i++) {\n\tfor (j = 0; j < m; j++) {\n\t    if (s[i][j] == 'S') {\n\t\tb[r][0] = i; b[r++][1] = j;\n\t    } else {\n\t\ta[s[i][j] - 'a'] = 1;\n\t    }\n\t}\n    }\n\n    for (i = 0; i < n; i++) {\n\tfor (j = 0; j < m; j++) {\n\t    if (a[s[i][j] - 'a'] == 2) continue;\n\n\t    for (k = 0; k < r; k++) {\n\t\tif ((b[k][0] - i) * (b[k][0] - i) + (b[k][1] - j) * (b[k][1] - j) <= x * x) {\n\t\t    a[s[i][j] - 'a'] = 2; break;\n\t\t}\n\t    }\n\t}\n    }\n\n    scanf(\"%d%*c\", &q);\n\n    for (i = 0; i < q; i++) {\n\tscanf(\"%c\", &p);\n\n\tif (islower(p)) {\n\t    if (a[p - 'a'] == 0) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t    }\n\t} else {\n\t    if (r == 0 || a[p - 'A'] == 0) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t    } else {\n\t\tif (a[tolower(p) - 'a'] == 1) c++;\n\t    }\n\t}\n    }\n\n    printf(\"%d\\n\", c);\n\n    return 0;\n}\n"}
{"similarity_score": 0.27712854757929883, "equal_cnt": 24, "replace_cnt": 17, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "7abd1761eda991c864103782afd0ef20", "bug_code_uid": "4fd42ba49a2148d32cc9c5d40737d128", "src_uid": "e2dc3de62fc45c7e9ddb92daa5c5d8de", "apr_id": "4c345f0fdab1d6b6bc7cad01d593cfea", "difficulty": 800, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n    int t;\r\n    char  x[100];\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int i;\r\n        //scanf(\"%s\",&x);\r\n        scanf(\"%s\",&x);\r\n        int l=strlen(x);\r\n        for(i=0;i<l;i++){\r\n            if(x[i]!='a'){\r\n                break;\r\n            }\r\n        }\r\n        if(i==l-1){\r\n            printf(\"NO\\n\");\r\n            break;\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n            for(int j=0;j<l-i;j++){\r\n                printf(\"%c\",x[j]);\r\n\r\n            }\r\n            printf(\"a\");\r\n            for(int j=l-i;j<l;j++){\r\n                printf(\"%c\",x[j]);\r\n            }\r\n        }\r\n        printf(\"\\n\");\r\n        \r\n}\r\nreturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n \r\nint main() {\r\n\tint t;\r\n\tchar s[300002];\r\n\tint isPos;\r\n\tint isFind;\r\n\tint i, j;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tisPos = 0;\r\n\t\tj = 0;\r\n\t\tscanf(\"%s\", s);\r\n\t\tfor (i=0;i<strlen(s);i++) {\r\n\t\t\tif (s[i]!='a') {\r\n\t\t\t\tisPos = 1;\r\n\t\t\t\tj = strlen(s) - i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (isPos==1) {\r\n\t\t\tfor (i=strlen(s);i>=j;i--) {\r\n\t\t\t\ts[i+1] = s[i];\r\n\t\t\t}\r\n\t\t\ts[j] = 'a';\r\n\t\t\tprintf(\"Yes\\n\");\r\n\t\t\tprintf(\"%s\\n\", s);\r\n\t\t}\r\n\t\telse printf(\"No\\n\");\r\n\t}\r\n}"}
{"similarity_score": 0.9979959919839679, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b74098224cb0fd0a03016662aedd6a93", "bug_code_uid": "e57aef336af1024c59e21a63c9f0b5a7", "src_uid": "8fcec28fb4d165eb58f829c03e6b31d1", "apr_id": "68800309996f6b58747b37ac96431ec1", "difficulty": 1500, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <limits.h>\n\nint main()\n{\n    long long l, r, k, s, s1;\n    scanf(\"%I64d%I64d%I64d\", &l, &r, &k);\n    s = 1;\n    while(s<l){\n        if(l/s<k){\n            printf(\"-1\");\n            return 0;\n        }\n        s*=k;\n    }\n    s1 = 1;\n    while(s<=r){\n        printf(\"%I64d \", s);s1=0;\n        if(r/s<k) break;\n        s*=k;\n    }\n    if(s1)printf(\"-1\");\n//printf(\"%I64d \", s);\n    return 0;\n}\n\n/*\n1 1000000000000000000 1000000000\n\n*/\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <limits.h>\n\nint main()\n{\n    long long l, r, k, s, s1;\n    scanf(\"%I64d%I64d%I64d\", &l, &r, &k);\n    s = 1;\n    while(s<l){\n        if(r/s<k){\n            printf(\"-1\");\n            return 0;\n        }\n        s*=k;\n    }\n    s1 = 1;\n    while(s<=r){\n        printf(\"%I64d \", s);s1=0;\n        if(r/s<k) break;\n        s*=k;\n    }\n    if(s1)printf(\"-1\");\n//printf(\"%I64d \", s);\n    return 0;\n}\n\n/*\n1 1000000000000000000 1000000000\n\n*/\n"}
{"similarity_score": 0.996969696969697, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7590cce6046376751d9142f5dca8aca5", "bug_code_uid": "3e9b8dfd54aa0071edddb2af59ca770a", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "c3ae71a6407414d02dd972270b39dc23", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n==1) printf(\"I hate it\\n\");\n    else{\n      for(i=1;i<=n-1;i++){\n        if(i%2!=0) printf(\"I hate that\");\n        if(i%2==0) printf(\" I love that\");\n    }\n    if(n%2==0) printf(\" I love it\\n\");\n    else if(n%2!=0) printf(\" I hate it\\n\");\n    }\n    return 0;\n\n}", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n==1) printf(\"I hate it\\n\");\n    else{\n      for(i=1;i<=n-1;i++){\n        if(i%2!=0) printf(\" I hate that\");\n        if(i%2==0) printf(\" I love that\");\n    }\n    if(n%2==0) printf(\" I love it\\n\");\n    else if(n%2!=0) printf(\" I hate it\\n\");\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.09297052154195011, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "0cdedd0ce8ee3aaf951c06376c58906e", "bug_code_uid": "9b01d78bdac9cb4f2eff8cd4331cc72b", "src_uid": "e27620d3a43ab42edf930b37ce214c9e", "apr_id": "26c2b358db355d16e88c7e71f6f47e44", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t,j;\n\tlong long n,i=1;\n\tint a[10001]={1},b[10001];\n\tscanf(\"%d\",&t);\n\tfor(j=0;j<t;j++,i=1)\n\t{\n\t\tscanf(\"%lld\",&n);\n\t\tgetchar();\n\t\tb[0]=getchar();\n\t\tprintf(\"1\");\n\t\twhile((b[i]=getchar())!='\\n')\n\t\t{\n\t\t\tif(b[i]==b[i-1])\n\t\t\t{\n\t\t\t\ta[i]=!a[i-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(a[i-1]+b[i-1]-b[i]==1)\n\t\t\t\t{\n\t\t\t\t\ta[i]=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[i]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\",a[i]);\n\t\t\ti++;\n\t\t\t\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n  \t\t   \t  \t  \t\t\t\t \t\t \t \t  \t  \t", "fixed": "#include <stdio.h>\n#define N 100001\nint main(void)\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,i;\n\t\tscanf(\"%d\",&n);\n\t\twhile(getchar()!='\\n')\n\t\t\tcontinue;\n\t\tchar a[N],b[N];\n\t\tscanf(\"%s\",a);\n\t\tb[0]='1';\n\t\tfor(i=1 ; i<n ; i++)\n\t\t{\n\t\t\tb[i]='1';\n\t\t\tif(a[i]+b[i]==a[i-1]+b[i-1])\n\t\t\t\tb[i]='0';\n\t\t}\n\t\tb[n]='\\0';\n\t\tprintf(\"%s\\n\",b);\n\t}\n\treturn 0;\n}\n \t  \t\t\t\t \t\t\t\t  \t     \t  \t\t \t\t\t\t"}
{"similarity_score": 0.5055487053020962, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "34a50148eb3ae85bff8b3e9aff908032", "bug_code_uid": "9623eeef0e9196074b40e2c87abe11be", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "de34a576d026dde9736037ecf5df1f53", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int a[4],res;\n    char c;\n    while(~scanf(\"%d%d%d%d\",&a[0],&a[1],&a[2],&a[3]))\n    {\n        res=0;\n        getchar();\n        while((c=getchar())!='\\n'||c!='\\0')\n           res+=a[c-'1'];\n        printf(\"%d\\n\",res);\n    }\n    return 1;\n}\n", "fixed": "#include <stdio.h>\n#define maxn 100005\nint main()\n{\n    int a[4],res,i;\n    char s[maxn],c;\n    //char s[2]=\"1\";\n    //printf(\"%d\\n\",s[1]);\n    //freopen(\"C:\\\\Users\\\\Shen\\\\Desktop\\\\ining.txt\",\"r\",stdin);\n    while(~scanf(\"%d\",&a[0]))\n    {\n        //printf(\"123\");\n        scanf(\"%d%d%d\",&a[1],&a[2],&a[3]);\n        res=0;\n        scanf(\"%s\",s);\n        c=s[0];\n        i=0;\n        while(c!='\\n'&&c!=0)\n        {\n           res+=a[c-'1'];\n           i++;\n           c=s[i];\n        }\n        printf(\"%d\\n\",res);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.20817843866171004, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "cb1b026c41e0ebc5a8322a3d36c2e19e", "bug_code_uid": "3ef2db6cb82f30b66d6102daa2cab86b", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "16e4365c02bf2d89c7abfc333d8b4549", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main() \n{\n   int n,i,sum,j;\n   long long int b[30];\n   scanf(\"%d\",&n);\n   long long int a[n];\n   for(i=0;i<n;i++)\n   scanf(\"%f\",&a[i]);\n   for(i=0;i<30;i++)\n   {\n       b[i]=pow(2,i);\n   }\n   sum=0;\n   for(i=0;i<n;i++)\n   {\n       for(j=0;j<30;j++)\n       {\n           if(a[i]==b[j] && j<30)\n           {\n               sum=sum -a[i];\n               break;\n           }\n           else if(j=30 )\n           sum = sum +a[i];\n        }\n        printf(\"%d\",sum);\n   }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main() {\nlong long int t,i;\n  scanf(\"%lld\",&t);\n  for(i=0;i<t;i++)\n  {long long int n,j;\n  scanf(\"%lld\",&n);\n  long long int x=0,sum=0,ans;\n    for(j=0;x*2<=n;j++)\n    {x=1<<j;\n    sum=sum+x;}\n    \n    ans=n*(n+1)/2 -2*sum;\n  printf(\"%lld\\n\",ans);\n      \n  }\n}"}
{"similarity_score": 0.9852631578947368, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "08930e4fe9f39f82dbe99a87a2a7bdf3", "bug_code_uid": "0e8f88edd199efabefe819af6235b2f3", "src_uid": "ec8060260a6c7f4ff3e6afc9fd248afc", "apr_id": "31410cdc2ad0da855b3c94ee60470426", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "inlude<stdio.h>\nint main()\n{\n\tlong long k=1,t,s,a,b,c,sum=0;\n\tscanf(\"%I64d\",&t);\n\tfor(k=1;k<=t;k++){\t\n\t\tscanf(\"%I64d%I64d%I64d%I64d\",&s,&a,&b,&c);\n\t\tsum=(s/(a*c))*(a+b)+(s%(a*c))/c;\n\t\tprintf(\"%I64d\",sum);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tlong long k=1,t,s,a,b,c,sum=0;\n\tscanf(\"%I64d\",&t);\n\tfor(k=1;k<=t;k++){\t\n\t\tscanf(\"%I64d%I64d%I64d%I64d\",&s,&a,&b,&c);\n\t\tsum=(s/(a*c))*(a+b)+(s%(a*c))/c;\n\t\tprintf(\"%I64d\",sum);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9956395348837209, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fe048150d6724fbc49e908b31dd7e09d", "bug_code_uid": "0cb08352905b6dba902671c988aa3226", "src_uid": "2e3006d663a3c7ad3781aba1e37be3ca", "apr_id": "85f11886120aba110a492fbf2a650344", "difficulty": 800, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint t,out;\n\t/*char alf[27]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','\\0'};*/\n\tchar alf[27] = \" abcdefghijklmnopqrstuvwxyz\";\n\tscanf(\"%d\",&t);\n\tfor(int h=0;h<t;h++){\n\t\tchar s[2];\n\t\tscanf(\"%s\",&s);\n\t\t/*printf(\"%c y %c\\n\",s[0],s[1]);*/\n\t\tfor(int i=0;i<27;i++){\n\t\t\t\t/*printf(\"%d indice %d com %c y %c\\n\",i,h, alf[0], s[0]);*/\n\t\t\tif(alf[i]==s[0]){\n\t\t\t\t/*printf(\"%d indice %d y %c = %c\\n\",i,h, alf[i],s[0]);*/\n\t\t\t\tfor(int j=0;j<27;j++){\n\t\t\t\t\tif(alf[j]==s[1]){\n\t\t\t\t\t\tif(i<j){\n\t\t\t\t\t\t\tprintf(\"%d\\n\",((i-1)*25)+j-1);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tprintf(\"%d\\n\",((i-1)*25)+j);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tint t;\n\t/*char alf[27]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','\\0'};*/\n\tchar alf[27] = \" abcdefghijklmnopqrstuvwxyz\";\n\tscanf(\"%d\",&t);\n\tfor(int h=0;h<t;h++){\n\t\tchar s[3];\n\t\tscanf(\"%s\",&s);\n\t\t/*printf(\"%c y %c\\n\",s[0],s[1]);*/\n\t\tfor(int i=0;i<27;i++){\n\t\t\t\t/*printf(\"%d indice %d com %c y %c\\n\",i,h, alf[0], s[0]);*/\n\t\t\tif(alf[i]==s[0]){\n\t\t\t\t/*printf(\"%d indice %d y %c = %c\\n\",i,h, alf[i],s[0]);*/\n\t\t\t\tfor(int j=0;j<27;j++){\n\t\t\t\t\tif(alf[j]==s[1]){\n\t\t\t\t\t\tif(i<j){\n\t\t\t\t\t\t\tprintf(\"%d\\n\",((i-1)*25)+j-1);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tprintf(\"%d\\n\",((i-1)*25)+j);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.9994236311239193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b614c156187d2991eb3e73089699b1cc", "bug_code_uid": "964865b6539bdaa326245e4e59d9cc09", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "280bbb191100fe08978edf5c7a2b48a0", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint recherche (int* tableau, int taille, int nombre)\n{\n    int i;\n    int el=0;\n    for (i = 0; i < taille; i++)\n    {\n\n    if (tableau[i] == nombre)\n    {\n        el = 1;\n        i = taille - 1;\n    }\n    }\n    return el;\n}\n\nint main()\n{\n    int* Fubb;\n    int N;\n    scanf(\"%d\",&N);\n    Fubb=(int*)malloc(N*sizeof(int));\n    int f1=1;\n    int f2=1;\n    Fubb[0]=1;\n    int i;\n    for (i=1;(f1+f2)<N;i++)\n    {\n        Fubb[i]=f2+f1;\n        f1=f2;\n        f2=Fubb[i];\n    }\n    char* nom;\n    nom=(char*)malloc(N+1);\n    nom[0]='O';\n    nom[1]='O';\n    int j=i;\n    for (i=2;i<N+1;i++)\n    {\n        if (recherche(Fubb,j+1,i))\n        {\n            nom[i]='O';\n        }else\n        {\n            nom[i]='o';\n        }\n    }\n    for (i=1;i<N+1;i++)\n    {\n        printf(\"%c\",nom[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint recherche (int* tableau, int taille, int nombre)\n{\n    int i;\n    int el=0;\n    for (i = 0; i < taille; i++)\n    {\n\n    if (tableau[i] == nombre)\n    {\n        el = 1;\n        i = taille - 1;\n    }\n    }\n    return el;\n}\n\nint main()\n{\n    int* Fubb;\n    int N;\n    scanf(\"%d\",&N);\n    Fubb=(int*)malloc(N*sizeof(int));\n    int f1=1;\n    int f2=1;\n    Fubb[0]=1;\n    int i;\n    for (i=1;(f1+f2)<=N;i++)\n    {\n        Fubb[i]=f2+f1;\n        f1=f2;\n        f2=Fubb[i];\n    }\n    char* nom;\n    nom=(char*)malloc(N+1);\n    nom[0]='O';\n    nom[1]='O';\n    int j=i;\n    for (i=2;i<N+1;i++)\n    {\n        if (recherche(Fubb,j+1,i))\n        {\n            nom[i]='O';\n        }else\n        {\n            nom[i]='o';\n        }\n    }\n    for (i=1;i<N+1;i++)\n    {\n        printf(\"%c\",nom[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4727272727272727, "equal_cnt": 17, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "b396c1188e54df2804666d47e52e069b", "bug_code_uid": "b8fd5483ef6d295bfc0e09131dcd6c20", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "c8099ed416be0340cc43f6d34f23c5f1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b;\n    scanf(\"%d\",&a);\n    for(int i=1;i<=a;i++)\n    {\n        scanf(\"%d\",&b);\n        if(b%3!=0)\n        {\n            printf(\"%d\\n\",b);\n        }\n    }\n}\n  \t \t  \t\t \t\t \t\t\t \t\t\t\t\t\t \t  \t\t", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, k;\n    scanf(\"%d\", &n);\n    for(int i=0; i<n; i++){\n        scanf(\"%d\", &k);\n        for(int j=1;; j++){\n            if(j%3==0 || j%10==3)\n                continue;\n            else{\n                k--;\n                if(k==0){\n                    printf(\"%d\\n\", j);\n                    break;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n \t\t\t\t  \t \t\t\t\t\t    \t \t \t \t\t\t\t  \t"}
{"similarity_score": 0.9969230769230769, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "08ca7fef380ed04348f8d0f794a49469", "bug_code_uid": "99c881955f637a3b65def0d22bfa9c0c", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "e864a4eab55579268f0f8ae0ae6eb52e", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain (){\n\tint n,i,m;\n\tint pe,va,to;\n\tint pre=0,count=0;\n\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<m;i++){\n\t\tscanf(\"%d\",&pe);\n\t\t\tif(pe==1){\n\t\t\t\tpre++;\n\t\t\t}\n\t\tscanf(\"%d\",&va);\n\t\t\tif(va==1){\n\t\t\t\tpre++;\n\t\t\t}\n\t\tscanf(\"%d\",&to);\n\t\t\tif(to==1){\n\t\t\t\tpre++;\n\t\t\t}\n\t\tif(pre>=2){\n\t\t\tcount++;\n\t\t}\n\t\tpre=0;\n\t}\n\n\tprintf(\"%d\",count);\n}\n", "fixed": "#include <stdio.h>\nmain (){\n\tint n,i,m;\n\tint pe,va,to;\n\tint pre=0,count=0;\n\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++){\n\t\tscanf(\"%d\",&pe);\n\t\t\tif(pe==1){\n\t\t\t\tpre++;\n\t\t\t}\n\t\tscanf(\"%d\",&va);\n\t\t\tif(va==1){\n\t\t\t\tpre++;\n\t\t\t}\n\t\tscanf(\"%d\",&to);\n\t\t\tif(to==1){\n\t\t\t\tpre++;\n\t\t\t}\n\t\tif(pre>=2){\n\t\t\tcount++;\n\t\t}\n\t\tpre=0;\n\t}\n\n\tprintf(\"%d\",count);\n}\n"}
{"similarity_score": 0.9932885906040269, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e1d889dd4d409a5ad671db2d1cb3c6ae", "bug_code_uid": "4b3ca699bba4f587f49be9f74891ebf2", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "afb85b335ff1a9812c03166c05e9e2fe", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for (int d=1;d<=t;d++)\n{    int y, a,b,c,l,g=0;char n[500000];\n\t\ty=0;\n        scanf(\"%d\",&a);scanf(\"%s\",&n);\n\t {  for( l=0;n[l]!='\\0';l++) \n    if(n[l]=='8' && (l-a)>=11) { printf(\"YES\\n\");y=1;break;\t}}\t\n\tif(y==0) printf(\"NO\\n\");\n\n}}\n \n", "fixed": "#include<stdio.h>\nmain()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for (int d=1;d<=t;d++)\n{    int y, a,b,c,l,g=0;char n[500000];\n\t\ty=0;\n        scanf(\"%d\",&a);scanf(\"%s\",&n);\n\t {  for( l=0;n[l]!='\\0';l++) \n    if(n[l]=='8' && (a-l)>=11) { printf(\"YES\\n\");y=1;break;\t}}\t\n\tif(y==0) printf(\"NO\\n\");\n\n}}\n \n"}
{"similarity_score": 0.9901477832512315, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4b5c8ab5f60860a2c5c1ff1703a49f23", "bug_code_uid": "00c13fca6df57bbf5f0001cf8c883159", "src_uid": "a02a9e37a4499f9c86ac690a3a427466", "apr_id": "640bdec2106e48e42dcf0f89542d98ab", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int data,usbs;\n    scanf(\"%d%d\",&data,&usbs);\n    int arr[usbs];\n    getarray(usbs,arr);\n    bubble(arr,usbs-1);\n    greedy(arr,usbs-1,data);\n\n    return 0;\n}\n\nvoid bubble (int unsort_array3[],int n3)\n{\n    int temp ;\n    for(int i=0 ;i<n3 ;i++)\n    {\n      if(unsort_array3[i] > unsort_array3[i+1])\n      {\n         temp=unsort_array3[i+1];\n         unsort_array3[i+1]=unsort_array3[i];\n         unsort_array3[i]=temp;\n      }\n    }\n    if(n3>1)\n    {\n      bubble(unsort_array3,n3-1);\n    }\n}\n\nvoid greedy(int arr[],int n,int data)\n{\n    int i=0;\n    while(data>0)\n    {\n        data=data-arr[n];\n        n--;\n        i++;\n    }\n    printf(\"%d\",i);\n}\n\nvoid getarray(int n,int arr[])\n{\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int data,usbs;\n    scanf(\"%d%d\",&usbs,&data);\n    int arr[usbs];\n    getarray(usbs,arr);\n    bubble(arr,usbs-1);\n    greedy(arr,usbs-1,data);\n\n    return 0;\n}\n\nvoid bubble (int unsort_array3[],int n3)\n{\n    int temp ;\n    for(int i=0 ;i<n3 ;i++)\n    {\n      if(unsort_array3[i] > unsort_array3[i+1])\n      {\n         temp=unsort_array3[i+1];\n         unsort_array3[i+1]=unsort_array3[i];\n         unsort_array3[i]=temp;\n      }\n    }\n    if(n3>1)\n    {\n      bubble(unsort_array3,n3-1);\n    }\n}\n\nvoid greedy(int arr[],int n,int data)\n{\n    int i=0;\n    while(data>0)\n    {\n        data=data-arr[n];\n        n--;\n        i++;\n    }\n    printf(\"%d\",i);\n}\n\nvoid getarray(int n,int arr[])\n{\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n}\n"}
{"similarity_score": 0.983, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "78b4fc540dbfa0be6c1e1888766bb768", "bug_code_uid": "ea674e0ee28719bb6431732393ef1afb", "src_uid": "6405161be280fea943201fa00ef6f448", "apr_id": "6954cbba917c19f85ba035921cebe662", "difficulty": 1300, "tags": ["implementation", "dfs and similar", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint h,w;\n\tscanf(\" %d %d\",&h,&w);\n\tchar a[h][w];\n\tfor(int i=0;i<h;i++)\n\t{\n\t    for(int j=0;j<w;j++)\n\t    {\n\t        scanf(\" %c\",&a[i][j]);\n\t    }\n\t}\n\tint count=0;\n\tint x,y;\n\t\tfor(int i=0;i<h;i++)\n\t{\n\t    for(int j=0;j<w;j++)\n\t    { \n\t        if(a[i][j]=='*'&&a[i-1][j]=='*'&&a[i][j-1]=='*'&&a[i+1][j]=='*'&&a[i][j+1]=='*')\n\t        {\n\t            count++;\n\t            x=i;\n\t            y=j;\n\t        }\n\t        \n\t    }\n\t}\n\tif(count!=1)\n\t{\n\t    printf(\"NO\");\n\t    return 0;\n\t}\n\tint i=x,j=y;\n\twhile(a[i][j]=='*')\n\t{\n\t    a[i][j]='.';\n\t    i++;\n\t}\n\ti=x,j=y;\n\t\twhile(a[i-1][j]=='*')\n\t{\n\t    a[i-1][j]='.';\n\t    i--;\n\t}\n\ti=x,j=y;\n\t\twhile(a[i][j+1]=='*')\n\t{\n\t    a[i][j+1]='.';\n\t    j++;\n\t}\n\ti=x,j=y;\n\t\twhile(a[i][j-1]=='*')\n\t{\n\t    a[i][j-1]='.';\n\t    j--;\n\t}\n\t\tfor(i=0;i<h;i++)\n\t{\n\t    for(j=0;j<w;j++)\n\t    {\n\t        if(a[i][j]=='*')\n\t        {\n\t            printf(\"NO\");\n\t            return 0;\n\t        }\n\t    }\n\t}\n    printf(\"YES\");\n\t\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint h,w;\n\tscanf(\" %d %d\",&h,&w);\n\tchar a[510][510];\n\tfor(int i=0;i<h;i++)\n\t{\n\t    for(int j=0;j<w;j++)\n\t    {\n\t        scanf(\" %c\",&a[i][j]);\n\t    }\n\t}\n\tint count=0;\n\tint x,y;\n\t\tfor(int i=0;i<h;i++)\n\t{\n\t    for(int j=0;j<w;j++)\n\t    { \n\t        if(a[i][j]=='*'&&a[i-1][j]=='*'&&a[i][j-1]=='*'&&a[i+1][j]=='*'&&a[i][j+1]=='*')\n\t        {\n\t            count++;\n\t            x=i;\n\t            y=j;\n\t        }\n\t        \n\t    }\n\t}\n\tif(count!=1)\n\t{\n\t    printf(\"NO\");\n\t    return 0;\n\t}\n\tint i=x,j=y;\n\twhile(a[i][j]=='*'&&i<h)\n\t{\n\t    a[i][j]='.';\n\t    i++;\n\t}\n\ti=x,j=y;\n\t\twhile(a[i-1][j]=='*'&&i>=1)\n\t{\n\t    a[i-1][j]='.';\n\t    i--;\n\t}\n\ti=x,j=y;\n\t\twhile(a[i][j+1]=='*'&&j<w)\n\t{\n\t    a[i][j+1]='.';\n\t    j++;\n\t}\n\ti=x,j=y;\n\t\twhile(a[i][j-1]=='*'&&j>=1)\n\t{\n\t    a[i][j-1]='.';\n\t    j--;\n\t}\n\t\tfor(i=0;i<h;i++)\n\t{\n\t    for(j=0;j<w;j++)\n\t    {\n\t        if(a[i][j]=='*')\n\t        {\n\t            printf(\"NO\");\n\t            return 0;\n\t        }\n\t    }\n\t}\n    printf(\"YES\");\n\t\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.18854625550660792, "equal_cnt": 18, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "6b49c7970a359dffda843e6bf2f9ef7e", "bug_code_uid": "26808656b27790f57ed501182724e9a8", "src_uid": "26aef004295df530352485ce53b47364", "apr_id": "2f3d2834c109f5cb624f27679be50081", "difficulty": 1100, "tags": ["brute force", "data structures", "implementation", "trees"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint j,n,q,a[10000],b[10000],c[10000],d;\n\tscanf(\"%d %d\",&n,&q);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tc[i]=a[i];\n\t}while(q--){\n\t\tscanf(\"%d\",&d);\n\t\tfor( j=0;j<n;j++){\n\t\t\t\n\t\t\tif(d==a[j]&&j!=0){\n\t\t\t\tfor(int k=1;k<=j;k++){\n\t\t\t\t\ta[k]=c[k-1];\t\n\t\t\t\t}\n\t\t\t\ta[0]=d;\n\t\t\t\tprintf(\"%d \",j+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(j==0&&d==a[j]){\n\t\t\t\tprintf(\"1 \");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++){\n\t\t\tc[i]=a[i];\n\t\t//\tprintf(\"%d \",a[i]);\n\t\t}\n\t}\n\treturn 0;\n}\n\t  \t\t\t\t \t  \t \t\t\t\t \t\t \t   \t\t \t \t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\nint a[300010],c[300010],t[300010];\nint main()\n{\n    long long int n,q,i,j,x,p;\n    scanf(\"%lld%lld\",&n,&q);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n\n    }\n    for(i=0;i<q;i++){\n    \tscanf(\"%d\",&t[i]);\n        for(j=0;j<n;j++){\n            if(t[i]==a[j]){\n                c[i]=j+1;\n                for(x=j;x>=1;x--){\n                    a[x]=a[x-1];\n                }\n                a[0]=t[i];\n                break;\n            }\n        }\n    }\n    for(i=0;i<q;i++) printf(\"%d \",c[i]);\n    return 0;\n}\n\n\n\n\n\n\t\t\t\t\t \t   \t   \t\t\t\t  \t \t \t  \t"}
{"similarity_score": 0.9983361064891847, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e754624b6df0b71a28439ff967109730", "bug_code_uid": "c7b872ba48d65292d1d87dfc75ca97ed", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "5ca97f75e05d246cebb91d315b5eb0ad", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n    if( *(int*)a - *(int*)b < 0 )\n        return -1;\n    if( *(int*)a - *(int*)b > 0 )\n        return 1;\n    if( *(int*)a - *(int*)b == 0 )\n        return 0;\n}\n\nint main()\n{\n    int n, m, x, i = 0;\n    scanf(\"%d %d\", &n, &m);\n    int arr[m];\n    while (n--){\n        scanf(\"%d\", &x);\n        if (x < 0) arr[i++] = x;\n    }\n    qsort(arr, i, sizeof(int), cmpfunc);\n    int sum = 0;\n    if (i <= m) while (i){sum -= arr[--i];}\n    else for (i = 0; i < m; i++) sum -= arr[i];\n    printf(\"%d\\n\", sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n    if( *(int*)a - *(int*)b < 0 )\n        return -1;\n    if( *(int*)a - *(int*)b > 0 )\n        return 1;\n    if( *(int*)a - *(int*)b == 0 )\n        return 0;\n}\n\nint main()\n{\n    int n, m, x, i = 0;\n    scanf(\"%d %d\", &n, &m);\n    int arr[n];\n    while (n--){\n        scanf(\"%d\", &x);\n        if (x < 0) arr[i++] = x;\n    }\n    qsort(arr, i, sizeof(int), cmpfunc);\n    int sum = 0;\n    if (i <= m) while (i){sum -= arr[--i];}\n    else for (i = 0; i < m; i++) sum -= arr[i];\n    printf(\"%d\\n\", sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9669421487603306, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "98b228ce25385d7c7819b06d44f24b51", "bug_code_uid": "5ef8ce97aef316d18543e7865e99a0fd", "src_uid": "ef1448a744f67347183479c697aa87e1", "apr_id": "28b9c0c65f8c6708a2f8cbf126928840", "difficulty": 800, "tags": ["brute force", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint a[10005],b[10005];\r\nvoid quicksort(int left,int right)\r\n{\r\n\tint i,j,mid,t;\r\n\ti=left;\r\n    j=right;\r\n    mid=a[(i+j)/2]; \r\n    if(left>right)\r\n       return;\r\n    while(i<=j){\r\n        while(a[j]>mid)\tj--;\r\n        while(a[i]<mid)\ti++;\r\n        if(i<=j){\r\n            t=a[i];\r\n            a[i]=a[j];\r\n            a[j]=t;\r\n            i++;\r\n            j--;\r\n        }\r\n    }\r\n    quicksort(left,j);\r\n\tquicksort(i,right);\r\n \r\n}\r\nint main(){\r\n\tint n,i,j,flag=0,m;\r\n\tscanf(\"%d\",&m);\r\n\twhile(m--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\t\tb[i]=a[i];\r\n\t\t\t}\r\n\t\tif(n!=2){\r\n\t\t\t\r\n\t\tquicksort(0,n-1);\r\n\t\tflag=0;\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tif(a[i]!=b[i])\tflag=1;\r\n\t\t}\r\n\t\tif(flag==1)\tprintf(\"YES\\n\");\r\n\t\t\telse\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\tif(n==2)\tprintf(\"NO\\n\");\r\n\t\t\r\n\t}\r\n\t\r\n\treturn 0;\r\n} ", "fixed": "#include<stdio.h>\r\nint a[10005],b[10005];\r\nvoid quicksort(int left,int right)\r\n{\r\n\tint i,j,mid,t;\r\n\ti=left;\r\n    j=right;\r\n    mid=a[(i+j)/2]; \r\n    if(left>right)\r\n       return;\r\n    while(i<=j){\r\n        while(a[j]>mid)\tj--;\r\n        while(a[i]<mid)\ti++;\r\n        if(i<=j){\r\n            t=a[i];\r\n            a[i]=a[j];\r\n            a[j]=t;\r\n            i++;\r\n            j--;\r\n        }\r\n    }\r\n    quicksort(left,j);\r\n\tquicksort(i,right);\r\n \r\n}\r\nint main(){\r\n\tint n,i,j,flag=0,m;\r\n\tscanf(\"%d\",&m);\r\n\twhile(m--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\t\tb[i]=a[i];\r\n\t\t\t}\r\n\t\tif(n!=2){\r\n\t\t\t\r\n\t\tquicksort(0,n-1);\r\n\t\tflag=0;\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tif(a[i]!=b[i])\tflag=1;\r\n\t\t}\r\n\t\tif(flag==1)\tprintf(\"YES\\n\");\r\n\t\t\telse\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\tif(n==2){\r\n\t\t\tif(a[0]<=a[1])\tprintf(\"NO\\n\");\r\n\t\t\t\telse\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\treturn 0;\r\n} "}
{"similarity_score": 0.7915993537964459, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "085e3c2f9d69040e7408136df446b2ba", "bug_code_uid": "45c5ac6315b63ff6e4179408516e434c", "src_uid": "075988685fa3f9b20bd215037c504a4f", "apr_id": "52291b3ab8b5f30f098393be9eabc888", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n  int n,x,y;\n  long int temp;\n  scanf(\"%d %d %d\",&n,&x,&y);\n  char b[n];\n  int a[n];\n  int i;\n  scanf(\"%s\",b);\n  //for(i=0;i<n;i++)\n    //printf(\"\\nstring=%c\",b[i]);\n  for(i=0;i<n;i++)\n    {\n      if(b[i]=='0') a[i]=0;\n      else a[i]=1;\n      //  printf(\"\\n%d\",a[i]);\n    }\n  int count=0;\n  if(a[n-y-1]==0) count++;\n  for(i=n-1;i>n-y-1;i--)\n    {\n      if(a[i]==1) count++;\n    }\n  for(i=n-x-1;i>n-y-1;i--)\n    {\n      if(a[i]==1) count++;\n    }\n  // if(a[x]==0) count++;\n  printf(\"\\n%d\",count);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n  int n,x,y;\n  long int temp;\n  scanf(\"%d %d %d\",&n,&x,&y);\n  char b[n];\n  int a[n];\n  int i;\n  scanf(\"%s\",b);\n  //for(i=0;i<n;i++)\n    //printf(\"\\nstring=%c\",b[i]);\n  for(i=0;i<n;i++)\n    {\n      if(b[i]=='0') a[i]=0;\n      else a[i]=1;\n      //  printf(\"\\n%d\",a[i]);\n    }\n  int count=0;\n  if(a[n-y-1]==0)\n    {\n      //printf(\"bcd\");\n      count++;\n    }\n  for(i=n-1;i>n-y-1;i--)\n    {\n      if(a[i]==1)\n\t{\n\t  //printf(\"bc\");\n\t  count++;\n\t}\n    }\n  for(i=n-x;i<n-y-1;i++)\n    {\n      // printf(\"%d\",i);\n      if(a[i]==1)\n\t{\n\t  //printf(\"mc\");\n\t  count++;\n\t}\n    }\n  // if(a[x]==0) count++;\n  printf(\"\\n%d\",count);\n  return 0;\n}\n"}
{"similarity_score": 0.43005181347150256, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 7, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "bf23acae9f9c309535afce386921a5c7", "bug_code_uid": "986f0d0ddb8f539248d59e7b6c8b5edf", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "f2d69ce605fae47d34d996e3a72f42fb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i;\n    scanf(\"%d\",&i);\n    while(i--)\n    {\n            int x,y,a,b;\n            int time=0;\n            scanf(\"%d %d %d %d\",&x,&y,&a,&b);\n            while(x<=y)\n            {\n                        \n                         x = x + a;\n                         y = y - b;\n                         time++;\n                        if(x>y)\n                         {\n                             printf(\"-1\");\n                             break;\n                         }\n                         else if(x==y)\n                         {\n                             printf(\"%d\\n\",time);\n                             break;\n                         }\n                        \n            }\n\n    }\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int i;\n    scanf(\"%d\",&i);\n    while(i--)\n    {\n            int x,y,a,b;\n            \n            scanf(\"%d %d %d %d\",&x,&y,&a,&b);\n            int t = (y-x) / (a+b);\n            if((y-x)%(a+b)!=0)\n            {\n                printf(\"-1\\n\");\n                continue;\n            }\n            else{\n                printf(\"%d\\n\",t);\n                continue;\n            }\n\n    }\n}"}
{"similarity_score": 0.615909090909091, "equal_cnt": 26, "replace_cnt": 20, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "4a821688cdc4b54f63f71bfe055cfb2c", "bug_code_uid": "c3865281a9b4c0d1905fdeff7af65687", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "60bab051fdf251d8ddb9878df6a8cf16", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,j,t,k=0,x,h;\n\tint a[10010];\n\tmemset(a,0,sizeof(a));\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\ta[x]++;\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(a[i]>1)\n\t\t{\n\t\t\ta[i+1]+=a[i]-1;\n\t\t\tk+=a[i]-1;\n\t\t\ta[i]=1;\n\t\t}\n\t\tif(a[n+1]>1)\n        {\n            k+=a[n+1]-1;\n        }\n\t}\n\tprintf(\"%d\\n\",k);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,t,k=0,x,h=0;\n    int a[10010];\n    memset(a,0,sizeof(a));\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&x);\n        if(x>h)\n        h=x;\n        a[x]++;\n    }\n    for(i=1; i<=h; i++)\n    {\n        if(a[i]>1)\n        {\n            a[i+1]+=a[i]-1;\n            k+=a[i]-1;\n            a[i]=1;\n        }\n    }\n    j=a[h+1];\n    if(j>1)\n    {\n        while(j)\n        {\n            k+=j-1;\n            j--;\n        }\n    }\n    printf(\"%d\\n\",k);\n}"}
{"similarity_score": 0.24939467312348668, "equal_cnt": 38, "replace_cnt": 29, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 38, "lang": "GNU C11", "fix_code_uid": "e016a0196844b69787dc4f2ceb61087d", "bug_code_uid": "5f37cb2f29b30cc00934bd7fa2e92011", "src_uid": "68e830551c1580bb5aff40d7848d968d", "apr_id": "519671978ac724d94327c875c3eaf8d5", "difficulty": 1100, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n,checker;\r\n        scanf(\"%d\", &n);\r\n        int check[100001];\r\n        int list[n];\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\", &list[i]);\r\n            check[list[i]]=1;\r\n        }\r\n        int count=0, hold;\r\n        while(1)\r\n        {\r\n            checker=-1;\r\n            for(int i=0; i<n; i++)\r\n            {\r\n                if(list[i]>list[i+1])\r\n                checker=i;\r\n                hold=i;\r\n            }\r\n            if(checker==-1)\r\n            break;\r\n        for(int i=0; i<n-1;i++)\r\n        {int temp=list[i];\r\n            if(check[temp]==1&& i<=hold)\r\n            {\r\n                count++;\r\n                list[i]=0;\r\n                check[temp]=0;\r\n            }\r\n            else if(check[temp]==0)\r\n            list[i]=0;\r\n        }\r\n        }\r\n        printf(\"%d\\n\", count);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,f = -1,c = 0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint v[n],count[n],hold;\r\n\t\tcount[0] = -1;\r\n\t\tfor(int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tint temp;\r\n\t\t\tscanf(\"%d\",&temp);\r\n\t\t\tv[i] = temp;\r\n\t\t\tcount[temp] = 1;\r\n\t\t}\r\n\t\twhile(1)\r\n\t\t{\r\n\t\t\tf = -1;\r\n\t\t\tfor(int i = 0; i < n-1 ; i++)\r\n\t\t\t\tif(v[i] > v[i+1])\r\n\t\t\t\t  {\r\n\t\t\t\t  \tf = v[i];\r\n\t\t\t\t  \thold = i;\r\n\t\t\t\t  }\r\n\t\t\tif (f == -1) break;\r\n\t\t\tfor(int i = 0; i < n; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(count[v[i]] == 1 && i <= hold) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tc++;\r\n\t\t\t\t\t\tcount[v[i]] = 0;\r\n\t\t\t\t\t\tv[i] = 0;\r\n\t\t\t\t\t}else if( count[v[i]] == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tv[i] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",c);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8893333333333333, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2714429b5b249f31bb0e46570300e605", "bug_code_uid": "b422bdbd847abf544a671d75f77b8643", "src_uid": "8a6c3436f73286ca54f51fb90017a299", "apr_id": "5ee79411dfd5587965dd3b154ca414d1", "difficulty": 800, "tags": ["number theory", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main()\n{\n\tlong long int t;\n\tscanf(\"%lld\", &t);\n\t\n\twhile ( t != 0 )\n\t{\n\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\t\t\n\t\tlong long int alfa = n-30;\n\t\tif ( n <= 30 )\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ( alfa == 6 )\n\t\t\t{\n                if ( n <= 39 )\n                {\n\t\t\t\t\tprintf(\"NO\\n\");\n                }\n                else\n                {\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\tprintf(\"10 14 15 %lld\\n\", n-39);\n                }\n\t\t\t}\n\t\t\telse if ( alfa == 10 )\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tprintf(\"6 14 15 %lld\\n\", n-35);\n\t\t\t}\n\t\t\telse if ( alfa == 14 )\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tprintf(\"6 10 15 %lld\\n\", n-31);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tprintf(\"6 10 14 %lld\\n\", n-30 );\n\t\t\t}\n\t\t\t\n\t\t}\n\n\n\t\t--t;\n\t}\n\t//system(\"pause\");\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main()\n{\n\tlong long int t;\n\tscanf(\"%lld\", &t);\n\t\n\twhile ( t != 0 )\n\t{\n\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\t\t\n\t\tlong long int alfa = n-30;\n\t\tif ( n <= 30 )\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ( alfa == 6 )\n\t\t\t{\n                printf(\"YES\\n\");\n\t\t\t\tprintf(\"6 10 15 %lld\\n\", n-31);\n\t\t\t}\n\t\t\telse if ( alfa == 10 )\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tprintf(\"6 14 15 %lld\\n\", n-35);\n\t\t\t}\n\t\t\telse if ( alfa == 14 )\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tprintf(\"6 10 15 %lld\\n\", n-31);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tprintf(\"6 10 14 %lld\\n\", n-30 );\n\t\t\t}\n\t\t\t\n\t\t}\n\n\n\t\t--t;\n\t}\n\t//system(\"pause\");\n}"}
{"similarity_score": 0.9641819941916747, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2290255fb11951a946554c5ce0e4d4d6", "bug_code_uid": "9ff3cd7f10c4a53c04c1751f4c622a3b", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "56e9aadce22ffd93b8fb56ff2f70efca", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n     int n,m;\n     scanf(\"%d %d\",&n,&m);\n     int a[n],i,j,k,l;\n     for(i=1;i<=n;i++)\n     scanf(\"%d\",&a[i]);\n     for(i=1;i<n;i++)\n     {\n          for(j=i+1;j<=n;j++)\n          {\n               if(a[i]>a[j])\n               {\n                    k=a[j];\n                    a[j]=a[i];\n                    a[i]=k;\n               }\n          }\n     }\n     l=0;\n     for(i=1;i<=m;i++)\n     {\n          if(l<=0)\n          l+=a[i];\n     }\n     \n     printf(\"%d\",(-l));\n}", "fixed": "#include <stdio.h>\nint main()\n{\n     int n,m;\n     scanf(\"%d %d\",&n,&m);\n     int a[n],i,j,k,l;\n     for(i=1;i<=n;i++)\n     scanf(\"%d\",&a[i]);\n     for(i=1;i<n;i++)\n     {\n          for(j=i+1;j<=n;j++)\n          {\n               if(a[i]>a[j])\n               {\n                    k=a[j];\n                    a[j]=a[i];\n                    a[i]=k;\n               }\n          }\n     }\n     l=0;\n     for(i=1;i<=m;i++)\n     {\n          if(a[i]<=0)\n          l+=a[i];\n          else \n          l+=0;\n     }\n     \n     printf(\"%d\",(-l));\n}"}
{"similarity_score": 0.7307692307692307, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "52fa0046305d12822c51d78eb2e36e0b", "bug_code_uid": "ea0a16e7d1c2f278d04675055bebf72d", "src_uid": "ea2dc6309e704d04cfdd6c79161c67f7", "apr_id": "97451eca85ab6ecea06ff750b25eb232", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint r[100000],dx[26],d[26],n,k,m;\nvoid main() {\n\tint i=0,v;\n\tfor(scanf(\"%d %d \",&n,&k); i<n; d[r[i++]=getchar()-'a']=1);\n\tfor(i=0; i<26; ++i) if(d[i]) dx[m++]=i;\n\tif(n>=k) {\n\t\tfor(v=k-1;r[v--]==dx[m-1];);\n\t\tfor(n=0;dx[n++]!=r[v+1];);\n\t\tfor(r[++v]=dx[n],i=v+1; i<k; r[i++]=dx[0]);\n\t}\n\telse for(i=n; i<k; r[i++]=dx[0]);\n\tfor(i=0; i<k; putchar(r[i++]+'a'));\n}\n", "fixed": "#include <stdio.h>\nint r[100000],dx[26],d[26],n,k,m;\nint main() {\n\tint i=0,v;\n\tfor(scanf(\"%d %d \",&n,&k);i<n;d[r[i++]=getchar()-'a']=1);\n\tfor(i=0; i<26; ++i) if(d[i]) dx[m++]=i;\n\tif(n>=k) {\n\t\tfor(v=k-1;r[v--]==dx[m-1];);\n\t\tfor(++v,n=0;dx[n++]!=r[v];);\n\t\tr[v]=dx[n], n=v+1;\n\t}\n\tfor(i=n;i<k;r[i++]=dx[0]);\n\tfor(i=0;i<k;putchar(r[i++]+'a'));\n\treturn 0;\n}\n"}
{"similarity_score": 0.9276218611521418, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "558e61fb21f8d647e993ca0b3d7db721", "bug_code_uid": "a07c0fdc27f9a0b95bba4a2cdb84fe4c", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "4c4b87f183b3e4b5a332e4e14e52be52", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/* AUM AMRITESWARYAI NAMAHA*/\n#include<stdio.h>\n//#include<string.h>\nint main()\n{\n\tint n, b, d, i , sum = 0 , count = 0 ;\n\tint a[1000] ;\n\tscanf(\"%d %d %d\",&n,&b,&d) ;\n\tfor(i = 0 ; i < n ; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]) ;\n\t\tif(a[i]<=b)\n\t\t\tsum = sum + a[i] ;\n\t\tif(sum >= d)\n\t\t{\n\t\t\tcount++ ;\n\t\t\tsum = 0 ;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", count) ;\n}\n", "fixed": "/* AUM AMRITESWARYAI NAMAHA*/\n#include<stdio.h>\n//#include<string.h>\nint main()\n{\n\tlong int n, b, d, i , sum = 0 , count = 0 ;\n\tlong int a[1000000] ;\n\n\tscanf(\"%d %d %d\",&n,&b,&d) ;\n\tfor(i = 0 ; i < n ; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\n\t\tif(a[i]<=b)\n\t\t\tsum = sum + a[i];\n\n\t\tif(sum > d)\n\t\t{\n\t\t\tcount++;\n\t\t\tsum = 0;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", count) ;\n}\n"}
{"similarity_score": 0.9846153846153847, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2a177e74b592eebcab81b80a7570ebc3", "bug_code_uid": "b625c8f6939f35effb0722c429fb0113", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "d2680ad5caade5ee7e889d9b3eb0da49", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// solve http://codeforces.com/problemset/problem/129/A\n\n#include <stdio.h>\nint main ( int argc, char * argv[])\n    {\n    \n    int n , bag , np ,nd , i;\n    \n    scanf(\"%d\",&n);\n    np = 0;\n    nd = 0;\n    for ( i = 0 ; i < n ; i++)\n        {\n        scanf(\"%d\",&bag);\n        if (bag % 2 == 0)\n            np++;\n        else\n            nd++;\n        }\n    if ( nd % 2 == 0)\n        bag = np;\n    else\n        bag = nd;\n    printf(\"%d\",bag);\n    }", "fixed": "// solve http://codeforces.com/problemset/problem/129/A\n\n#include <stdio.h>\nint main ( int argc, char * argv[])\n    {\n    \n    int n , bag , np ,nd , i;\n    \n    scanf(\"%d\",&n);\n    np = 0;\n    nd = 0;\n    for ( i = 0 ; i < n ; i++)\n        {\n        scanf(\"%d\",&bag);\n        if (bag % 2 == 0)\n            np++;\n        else\n            nd++;\n        }\n    if ( nd % 2 == 0)\n        bag = np;\n    else\n        bag = nd;\n    printf(\"%d\",bag);\n    return 0;\n    }"}
{"similarity_score": 0.9389763779527559, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "bac0d267d8dafed0c9a7b9bdd95905b2", "bug_code_uid": "0507df65a675774476150ef16dd80abe", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "cba40feb1a58c1c95449958451ab4998", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n    int t,i;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n, min, res = 0;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        min=arr[0];\r\n        scanf(\"%d\", &arr[0]);\r\n        for(i=1;i<n;i++){\r\n            scanf(\"%d\", &arr[i]);\r\n            if(min > arr[i]){\r\n                min = arr[i];\r\n            }\r\n        }\r\n        while(n--){\r\n            if(min < arr[n]){\r\n                res++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", res);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n    int t,i;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n, min, res = 0;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        scanf(\"%d\", &arr[0]);\r\n        min=arr[0];\r\n        for(i=1;i<n;i++){\r\n            scanf(\"%d\", &arr[i]);\r\n            if(min > arr[i]){\r\n                min = arr[i];\r\n            }\r\n        }\r\n        while(n--){\r\n            if(min < arr[n]){\r\n                res++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", res);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.3282275711159737, "equal_cnt": 23, "replace_cnt": 17, "delete_cnt": 6, "insert_cnt": 0, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "524a1ecf3927617163c24adc39a48e6e", "bug_code_uid": "af8a5a9d2944699d2313933d9f422cc8", "src_uid": "43081557fe2fbac39dd9b72b137b8fb0", "apr_id": "373c0877847abff9a89ed2130c9c69d2", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,q=0,m;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tchar s[n];\r\n\t\tscanf(\"%s\", &s);\r\n\t\tfor(int i=0; i<n; i++)\r\n\t\t{\r\n\t\t\tif(q==n)\r\n\t\t\t\tbreak;\r\n\t\t\tif(s[i+2]=='0')\r\n\t\t\t{\r\n\t\t\t\tm=((s[i]-48)*10)+(s[i+1]-48);\r\n\t\t\t\tprintf(\"%c\",m+96);\r\n\t\t\t\tq+=3;\r\n\t\t\t\ti+=2;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if(s[i+2]!='0')\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\", s[i]+48);\r\n\t\t\t\tq+=1;;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n\t{\r\n        int n,flag;\r\n\t\tscanf(\"%d\",&n);\r\n        char str[n];\r\n        scanf(\"%s\",str);\r\n        for(int i=0;i<n;i++)\r\n\t\t{\r\n            flag=0;\r\n            if(str[i]=='0')\r\n\t\t\t{\r\n\t\t\t\tflag=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n        }\r\n        if (flag==0)\r\n\t\t{\r\n            for(int i=0;i<n;i++)\r\n\t\t\t{\r\n                str[i]+=48;\r\n            }\r\n\t\t\tprintf(\"%s\\n\",str);\r\n\t\t\tcontinue;\r\n        }\r\n        for(int i=0;i<n;i++)\r\n\t\t{\r\n            if( str[i+2]!='0')\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",str[i]+48);\r\n\t\t\t}\r\n            else if( str[i+2]=='0' && str[i+3]=='0')\r\n\t\t\t{\r\n                printf(\"%c\",str[i]+48);\r\n            }\r\n            else if( str[i+2]=='0' && str[i+3]!='0')\r\n\t\t\t{\r\n                int f=(str[i]-48)*10 +str[i+1];\r\n                printf(\"%c\",(f+48));\r\n\t\t\t\ti+=2;\r\n            }\r\n            else printf(\"%c\",str[i]+48);\r\n\r\n\r\n        }\r\n\t\tprintf(\"\\n\");\r\n\r\n    }\r\n}"}
{"similarity_score": 0.23, "equal_cnt": 5, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ec70162f5700a551a3d020ff356890b3", "bug_code_uid": "5cac49b5ab36a34889c0942a788b6435", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "d81364b20207cc949343cd63cd0510fd", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int arr[5],i,max,sum,k,n;\n    scanf(\"%d\",&n);\n    if(n>=1 && n<=100){\n             if(arr[i]>=0 && arr[i]<=1000000){\n\n   for(i=0;i<n;i++)\n   {\n       scanf(\"%d\",&arr[i]);\n\n   }\n    max=arr[0];\n\n       for(i=0;i<n;i++)\n       {\n\n\n          if(max<arr[i])\n          {\n              max=arr[i];\n          }\n\n\n\n   }\n   sum=0;\n   for(i=0;i<n;i++)\n   {\n\n      k=max-arr[i];\n      sum=sum+k;\n   }\n   printf(\"%d\",sum);\n    }\n    }\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,arr[100],i,max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n\n    }\n    max=arr[0];\n    for(i=0;i<n;i++)\n    {\n        if(max<arr[i]){\n            max=arr[i];\n        }\n    }\n    int sum=0;\n    for(i=0;i<n;i++)\n    {\n        sum=sum+max-arr[i];\n\n    }\n    printf(\"%d\",sum);\n}\n"}
{"similarity_score": 0.6054216867469879, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8837190b4d4866345408896269f72fff", "bug_code_uid": "fc20162d87754614c2fa198ff4706272", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "84e3176db2a8bc9257d0d97e8b0686a1", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main(void)\n{\n    char arr[1000];\n    \n    int n,a = 0, d = 0;\n scanf(\"%d\", &n);   \n    scanf(\" %s\", arr);\n    int i = 0;\n    while(arr[i]) \n    {\n        if(arr[i] == 'A') a++;\n        else d++;\n        i++;\n    }\n    if(a > d) printf(\"Anton\");\n    else if(a == d) printf(\"Friendship\");\n    else printf(\"Danik\");\n}", "fixed": "#include <stdio.h>\n \nint main(void)\n{\n    char c;\n    \n    int n,a = 0, d = 0, i;\n scanf(\"%d\", &n);   \n scanf(\"\\n\");\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%c\", &c);\n        if(c == 'A') a++;\n        else d++;\n    }\n    if(a > d) printf(\"Anton\");\n    else if(a == d) printf(\"Friendship\");\n    else printf(\"Danik\");\n}"}
{"similarity_score": 0.9983050847457627, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "27004d8e4bd3047d21333c8217e29b69", "bug_code_uid": "186fbc0c42dcf9ee4fad83daa8fdd3db", "src_uid": "09236a3faa7fce573a4e5e758287040f", "apr_id": "6bc5ed3d344aef1e7e2bcc1b4ec24685", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <string.h>\n\nvoid main()\n{\n    int plank[10000]={0},n,k,i,j,count,square;\n    scanf(\"%d\",&k);\n    for(;k>0;k--)\n    {\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&plank[i]);\n        }\n        for(i=1;i<=n;i++)\n        {   count=0;\n            for(j=0;j<n;j++)\n            {\n                if(i<=plank[j])\n                {\n                    count++;\n                }\n            }\n            if(count>=i)\n            {\n                square=i;\n            }\n            \n        }\n        printf(\"%d\",square);\n    }\n}", "fixed": "\n#include <stdio.h>\n#include <string.h>\n\nvoid main()\n{\n    int plank[10000]={0},n,k,i,j,count,square;\n    scanf(\"%d\",&k);\n    for(;k>0;k--)\n    {\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&plank[i]);\n        }\n        for(i=1;i<=n;i++)\n        {   count=0;\n            for(j=0;j<n;j++)\n            {\n                if(i<=plank[j])\n                {\n                    count++;\n                }\n            }\n            if(count>=i)\n            {\n                square=i;\n            }\n            \n        }\n        printf(\"%d\\n\",square);\n    }\n}"}
{"similarity_score": 0.9981949458483754, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f6d18388ca211098f0554055ee8bc87f", "bug_code_uid": "38c2ff8f8eb5a968e7d91f70d159cf95", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "c7cb6156007106049463c141b9c986e2", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n\n\tint n, sum1, sum2, j, c, c1, c2, i, e, d;\n\tscanf(\"%d\", &n);\n\tint a[100];\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\n\tfor (i = 0; i < (n - 1); i++)\n\t{\n\t\tfor (d = 0; d < n - 1; d++)\n\t\t{\n\t\t\tif (a[d] > a[d + 1]){\n\t\t\t\te = a[d];\n\t\t\t\ta[d] = a[d + 1];\n\t\t\t\ta[d + 1] = e;\n\t\t\t}\n\t\t}\n\t}\n\tj = 1;\n\tfor (i = 0; i < n; i++){\n\t\tsum1 = 0;\n\t\tsum2 = 0;\n\t\tfor (c1 = j; c1 < n; c1++){\n\t\t\tsum1 = sum1 + a[c1];\n\t\t}\n\t\tfor (c2 = 0; c2 < j; c2++){\n\t\t\tsum2 = sum2 + a[c2];\n\t\t}\n\t\tif (sum2 > sum1)break;\n\t\tj++;\n\t}\n\tprintf(\"%d\", c2);\n\treturn (0);\n}", "fixed": "#include<stdio.h>\nint main() {\n\n\tint n, sum1, sum2, j, c, c1, c2, i, e, d;\n\tscanf(\"%d\", &n);\n\tint a[100];\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\n\tfor (i = 0; i < (n - 1); i++)\n\t{\n\t\tfor (d = 0; d < n - 1; d++)\n\t\t{\n\t\t\tif (a[d] < a[d + 1]){\n\t\t\t\te = a[d];\n\t\t\t\ta[d] = a[d + 1];\n\t\t\t\ta[d + 1] = e;\n\t\t\t}\n\t\t}\n\t}\n\tj = 1;\n\tfor (i = 0; i < n; i++){\n\t\tsum1 = 0;\n\t\tsum2 = 0;\n\t\tfor (c1 = j; c1 < n; c1++){\n\t\t\tsum1 = sum1 + a[c1];\n\t\t}\n\t\tfor (c2 = 0; c2 < j; c2++){\n\t\t\tsum2 = sum2 + a[c2];\n\t\t}\n\t\tif (sum2 > sum1)break;\n\t\tj++;\n\t}\n\tprintf(\"%d\", c2);\n\treturn (0);\n}"}
{"similarity_score": 0.7232219365895458, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3a4521f133b635223331684da6c006fc", "bug_code_uid": "60024326dab33ccf43bcac8e6e73dcb8", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "e653f49c2b082e495c7a8374d2333870", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,q;\n\tscanf(\"%d\",&t);\n\tint a[t],b[t];\n\tfor (int i=0;i<t;i++) \n\t\tscanf(\"%d\",&a[i]);\n\tb[0]=a[0];\n\tfor (int i=1;i<t;i++) \n\t\tb[i]=a[i]+b[i-1];\n//\tfor(int i=0;i<t;i++)\n//\t\tprintf(\"%d \",b[i]);\n//\tprintf(\"\\n\");\n\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint x,ans;\n                 scanf(\"%d\",&x);\n\t\t for(int i=0;i<t;i++)\n\t\t { \n\t\t\t if(x<=b[0])\n\t\t\t {\n\t\t\t\t ans=1;\n\t\t\t\t break;\n\t\t\t }\n\t\t\t else if(x>=b[t-1])\n\t\t\t {\n\t\t\t\t ans=t;\n\t\t\t\t break;}\n\t\t\t else if(x>b[i] && x<=b[i+1])\n\t\t\t {\n\t\t\t\t ans=i+2;\n\t\t\t\t break;\n\t\t\t }\n\t\t }\n\t\t printf(\"%d\\n\",ans);\n\n\t}\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,q;\n\tscanf(\"%d\",&t);\n\tint a[t],b[t];\n\tfor (int i=0;i<t;i++) \n\t\tscanf(\"%d\",&a[i]);\n\tb[0]=a[0];\n\tfor (int i=1;i<t;i++) \n\t\tb[i]=a[i]+b[i-1];\n//\tfor(int i=0;i<t;i++)\n//\t\tprintf(\"%d \",b[i]);\n//\tprintf(\"\\n\");\n\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint x,ans,l=0,r=t-1,m;\n                 scanf(\"%d\",&x);\n\t\t  \n\t\t\t if(x<=b[0])\n\t\t\t \n\t\t\t\t ans=1;\n\t\t\t\t \n\t\t\t \n\t\t\t else if(x>=b[t-1])\n\t\t\t \n\t\t\t\t ans=t;\n\t\t\t else\n\t\t\t {\t \n\t\t\t while(l<=r)\n\t\t\t {\n\t\t\t\t m=(l+r)/2;\n\t\t\t\t if(b[m]>=x)\n\t\t\t\t {\n\t\t\t\t\t ans=m+1;\n\t\t\t\t\t r=m-1;\n\t\t\t\t }\n\t\t\t\t else \n\t\t\t\t\t l=m+1;\n\t\t\t }\n\t\t\t }\n\t\t \n\t\t printf(\"%d\\n\",ans);\n\n\t}\n\n\n}\n"}
{"similarity_score": 0.7375, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "29615f3a6c8d699d1334b2d17eeb82f9", "bug_code_uid": "de36eff831967aabb3bba1719d1208d0", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "cdd228f2fde794bd5415b7855861432e", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint n,i,p;\n\tint T[100][3];\n\t\n\tscanf(\"%d\",&n);\n\tp=0;\n\t\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\t\t\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&T[i][0]);\t\n\t\t\t\tscanf(\"%d\",&T[i][1]);\n\t\t\t\tscanf(\"%d\",&T[i][2]);\n\t\t\t    if((T[i][0]==1 && T[i][1]==1) || (T[i][2]==1 && T[i][1]==1) || (T[i][0]==1 && T[i][2]==1))\n\t\t\t\tp++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\n\t}\n\t\n\tprintf(\"%d\",p);\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n\tint n,i,p;\n\tint T[3];\n\t\n\tscanf(\"%d\",&n);\n\tp=0;\n\t\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&T[0]);\t\n\t\t\t\tscanf(\"%d\",&T[1]);\n\t\t\t\tscanf(\"%d\",&T[2]);\n\t\t\t    if((T[0]==1 && T[1]==1) || (T[2]==1 && T[1]==1) || (T[0]==1 && T[2]==1))\n\t\t\t\tp++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\n\t}\n\t\n\tprintf(\"%d\",p);\n}\n"}
{"similarity_score": 0.8033826638477801, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "27a7950e74639bcd6907879d07617223", "bug_code_uid": "f3d8dcf44e71a6dc1c97212dfa0d3a96", "src_uid": "ec8060260a6c7f4ff3e6afc9fd248afc", "apr_id": "fff4f8a418480b49cf19fccbf46c9838", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char **argv)\n{\n\tint long long s,a,b,c,i,j,n;\n\tscanf(\"%lld\",&n);\n\twhile(n>0)\n\t{\n\tscanf(\"%lld\",&s);\n\tscanf(\"%lld\",&a);\n\tscanf(\"%lld\",&b);\n\tscanf(\"%lld\",&c);\n\ti=s/c;\n\tj=(i/a)*c;\n\tprintf(\"%lld\",i+j);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(int argc, char **argv)\n{\n\tint long long s,a,b,c,i,j,n;\n\tscanf(\"%lld\",&n);\n\twhile(n>0)\n\t{\n\tscanf(\"%lld%lld%lld%lld\",&s,&a,&b,&c);\n\ti=s/c;\n\tj=i+(i/a)*b;\n\tprintf(\"%lld\\n\",j);\n\tn--;\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9923819197562215, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fc6e3a6c136da0c042dd52d3a6c130fb", "bug_code_uid": "63e25957f7a24581b2da5ec6d8009554", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "78fcacc9b4de65baf5f23e1a78f023bc", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define SIZE 110\nvoid sort (int* array, int n)\n{\n    int i, j, temp;\n    for (i = 0; i<n-1; i++)\n    {\n        for (j = 0; j< n-1-i; j++)\n        {\n            if (array[j] < array[j+1])\n            {\n                temp = array[j];\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            }\n        }\n    }\n}\nint sum (int* array, int i, int n)\n{\n    int r = 0, j;\n    for (j = i+1; j<n; j++)\n        r+=array[j];\n    return r;\n}\nint mysum (int* array, int i)\n{\n    int j,r =0;\n    for (j = 0; j<i; j++)\n    {\n        r += array[j];\n    }\n    return r;\n}\nint main ()\n{\n    int n, array [SIZE], count = 1, i;\n    scanf (\"%d\",&n);\n    for (i = 0; i<n; i++)\n    {\n        scanf (\"%d\",&array[i]);\n    }\n    sort (array, n);\n    for (i = 0; i<n; i++)\n    {\n        if (mysum(array, i)> sum(array, i, n))\n            {printf (\"%d\\n\", count);\n            return 0;\n            }\n        else\n            count++;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define SIZE 110\nvoid sort (int* array, int n)\n{\n    int i, j, temp;\n    for (i = 0; i<n-1; i++)\n    {\n        for (j = 0; j< n-1-i; j++)\n        {\n            if (array[j] < array[j+1])\n            {\n                temp = array[j];\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            }\n        }\n    }\n}\nint sum (int* array, int i, int n)\n{\n    int r = 0, j;\n    for (j = i+1; j<n; j++)\n        r+=array[j];\n    return r;\n}\nint mysum (int* array, int i)\n{\n    int j,r =0;\n    for (j = 0; j<=i; j++)\n    {\n        r += array[j];\n    }\n    return r;\n}\nint main ()\n{\n    int n, array [SIZE], count = 1, i;\n    scanf (\"%d\",&n);\n    for (i = 0; i<n; i++)\n    {\n        scanf (\"%d\",&array[i]);\n    }\n    sort (array, n);\n    for (i = 0; i<n; i++)\n    {\n        if (mysum(array, i)> sum(array, i, n))\n            {\n            printf (\"%d\\n\", count);\n            return 0;\n            }\n        else\n            count++;\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9851239669421488, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3504703f20e4b1a02a81eeee7f5fd966", "bug_code_uid": "cbd2540472a24350d4fef9c49068337c", "src_uid": "016e00b2b960be792d4ec7fcfb7976e2", "apr_id": "23a774b11972631b2216c8548b1ada6a", "difficulty": 1300, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{short int i,n;\nlong int diffmax,Xmin,Xmax,Ymin,Ymax,T[1000][2];\nlong long int square;\ndo\nscanf(\"%hu\",&n);\nwhile ((n<0) || (n>1000));\nscanf(\"%ld %ld\",&T[0][1],&T[0][2]);\nXmin=T[0][1];\nXmax=T[0][1];\nYmin=T[0][2];\nYmax=T[0][2];\nfor(i=1;i<n;i++)\n{ scanf(\"%ld %ld\",&T[i][1],&T[i][2]);\n  if (Xmin>T[i][1])\nXmin=T[i][1];\n  if (Xmax<T[i][1])\nXmax=T[i][1];\n  if (Ymin>T[i][2])\nYmin=T[i][2];\n  if (Ymax<T[i][2])\nYmax=T[i][2];\n}\nif((Ymax-Ymin)>(Xmax-Xmin))\ndiffmax=Ymax-Ymin;\nelse diffmax=Xmax-Xmin;\nsquare=diffmax*diffmax;\nprintf(\"%lld\",square);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{short int i,n;\nlong int Xmin,Xmax,Ymin,Ymax,T[1000][2];\nlong long int square,diffmax;\ndo\nscanf(\"%hu\",&n);\nwhile ((n<2) || (n>1000));\nscanf(\"%ld %ld\",&T[0][1],&T[0][2]);\nXmin=T[0][1];\nXmax=T[0][1];\nYmin=T[0][2];\nYmax=T[0][2];\nfor(i=1;i<n;i++)\n{ scanf(\"%ld %ld\",&T[i][1],&T[i][2]);\n  if (Xmin>T[i][1])\nXmin=T[i][1];\n  if (Xmax<T[i][1])\nXmax=T[i][1];\n  if (Ymin>T[i][2])\nYmin=T[i][2];\n  if (Ymax<T[i][2])\nYmax=T[i][2];\n}\nif((Ymax-Ymin)>(Xmax-Xmin))\ndiffmax=Ymax-Ymin;\nelse diffmax=Xmax-Xmin;\nsquare=diffmax*diffmax;\nprintf(\"%lld\",square);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9689213893967094, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "fb72ed4049daee3130226d47e4e0cc10", "bug_code_uid": "ffc63c38b1cc41f5238384db1c199833", "src_uid": "345e76bf67ae4342e850ab248211eb0b", "apr_id": "4e7704e2e8fdbabdc1a44b6f8ee3ad88", "difficulty": 1000, "tags": ["dsu", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nlong long days(long long *t,long long i,long long j)\n{\n    if (t[j]=i)\n        return 1;\n    else\n        return 1+days(t,i,t[i]);\n}\nint main()\n{\n    long long i,j,n,q,*t;\n    scanf(\"%lli\",&q);\n    for (i=0;i<q;i++)\n    {\n        scanf(\"%lli\",&n);\n        t=malloc(n*sizeof(long long));\n        for (j=0;j<n;j++)\n        {\n            scanf(\"%lli\",&t[j]);\n        }\n        for(j=0;j<n;j++)\n        {\n            printf(\"%lli \",days(t,i,i));\n        }\n        printf(\"\\n\");\n        free(t);\n    }\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong long days(long long *t,long long i,long long j)\n{\n    if (t[j]==i)\n        return 1;\n    else\n    {\n        return 1+days(t,i,t[j]);\n    }\n}\nint main()\n{\n    long long i,j,n,q,*t;\n    scanf(\"%lli\",&q);\n    for (i=0;i<q;i++)\n    {\n        scanf(\"%lli\",&n);\n        t=malloc((n+1)*sizeof(long long));\n        for (j=1;j<=n;j++)\n        {\n            scanf(\"%lli\",&t[j]);\n        }\n        for(j=1;j<=n;j++)\n        {\n            printf(\"%lli \",days(t,j,j));\n        }\n        printf(\"\\n\");\n        free(t);\n    }\n}\n"}
{"similarity_score": 0.9912609238451935, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "58421ba55f10985630338103dde0c91c", "bug_code_uid": "8988fed065f3c6d16bd311d4d5e2b35c", "src_uid": "714834defd0390659f6ed5bc3024f613", "apr_id": "ccd22e495a0d1e705a0ae2ceb45cfd76", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int t,n,i,a[2000],b[2000],flag=0,k,l;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       flag=0;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            scanf(\"%d\",&b[i]);\n        }\n        for(i=0;i<n-1;i++)\n        {\n            if(a[i]>a[i+1])\n              flag=1;\n              if(a[i]==a[i+1] && b[i]!=b[i+1])\n              flag=1;\n        }\n          for(i=0;i<n;i++)\n          {\n              if(a[i]<b[i])\n                flag=1;\n\n          }\n          for(i=1;i<n;i++)\n          {\n              k=a[i]-a[i-1];\n              l=b[i]-b[i-1];\n              if(l>k)\n                flag=1;\n\n          }\n\n\n        if(flag==1)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n   }\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int t,n,i,a[2000],b[2000],flag=0,k,l;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       flag=0;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            scanf(\"%d\",&b[i]);\n        }\n        for(i=0;i<n-1;i++)\n        {\n            if(a[i]>a[i+1] ||b[i]>b[i+1])\n              flag=1;\n              if(a[i]==a[i+1] && b[i]!=b[i+1])\n              flag=1;\n        }\n          for(i=0;i<n;i++)\n          {\n              if(a[i]<b[i])\n                flag=1;\n\n          }\n          for(i=1;i<n;i++)\n          {\n              k=a[i]-a[i-1];\n              l=b[i]-b[i-1];\n              if(l>k)\n                flag=1;\n\n          }\n\n\n        if(flag==1)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.04824561403508772, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a7382ceeba6cf3d23f1a3c855c0096a3", "bug_code_uid": "846b322b707bbf94a92e9f25dbeb3606", "src_uid": "0593f79604377dcfa98d2b69840ec0a6", "apr_id": "35dcf86dbe91e22f19525adcb9765d62", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint cmp(void *p1,void *p2){\nint a=*(int *)p1;\nint b=*(int *)p2;\nreturn a-b;\n}\n\nint main()\n{\n    int n,a[100000],i,count=0,flag=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n        if(n==1 && a[0]==0){\n            printf(\"0\");\n            return;\n        }\n        qsort(a,n,4,cmp);\n        for(i=1; i<n; i++){\n                if(a[i]==a[i-1])\n                count++;\n                if(a[i-1]==0)\n                    flag=1;\n\n        }\n        if(flag==1)\n            printf(\"%d\",n-count-1);\n        else\n        printf(\"%d\",n-count);\n\n\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint a[100005];\nint b[100005];\nint main()\n{\n\tint cost=0,i,x,n;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(x>0)\n\t\t\ta[x]++;\n\t\tif(x<0)\n\t\t\tb[-x]++;\n\t}\n\tfor(i=1;i<100005;i++)\n\t{\n\t\tif(a[i])\n\t\t\tcost++;\n\t\tif(b[i])\n\t\t\tcost++;\n\t}\n\tprintf(\"%d\",cost);\n\treturn 0;\n}"}
{"similarity_score": 0.5898617511520737, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e4dbb4284799060816bf3cf50f914a65", "bug_code_uid": "deb0cb0c354530175370b6bcd1903c87", "src_uid": "e744184150bf55a30568060cca69de04", "apr_id": "72dc357d8e311c99e1d413e6b142c67a", "difficulty": 800, "tags": ["constructive algorithms", "dsu", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n// t\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d \", &t);\r\n    while (t--)\r\n    {\r\n        char s[55];\r\n        gets(s);\r\n        int d = strlen(s);\r\n        if (s[0] ==s[d-1]){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        \r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n// t\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d \", &t);\r\n    while (t--)\r\n    {\r\n        char s[55];\r\n        gets(s);\r\n        int f = 0;\r\n        for (int i = 0; s[i] != '\\0';i++){\r\n            if(s[i]=='N'){\r\n                f++;\r\n               \r\n               \r\n            }\r\n        }\r\n        if(f==1){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.093841642228739, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "895d0e6a8f86420e5789b2c2cc4d79f4", "bug_code_uid": "d65412f63afc662532a09d318fe67125", "src_uid": "8d911f79dde31f2c6f62e73b925e6996", "apr_id": "75564fcb0a12223588e9621120c1c8be", "difficulty": 900, "tags": ["dfs and similar", "trees", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n, a[10001], b[10001] = { 0 }, i, c = 0;\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tif (a[i] == -1)\n\t\t\ta[i] = 0;\n\t}\n\tfor (i = 0; i < n; i++)\n\t\tif (b[a[i]] == 0)\n\t\t{\n\t\t\tc++;\n\t\t\tb[a[i]] = -1;\n\t\t}\n\tprintf(\"%d\\n\", c);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint p[2001], current;\nvoid find(int);\nint main()\n{\n\tint n, max = 0;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i)\n\t\tscanf(\"%d\", &p[i]);\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tcurrent = 0;\n\t\tfind(i);\n\t\tif (current > max)\n\t\t\tmax = current;\n\t}\n\tprintf(\"%d\\n\", max + 1);\n\treturn 0;\n}\n\nvoid find(int i)\n{\n\tif (p[i] != -1)\n\t{\n\t\tcurrent++;\n\t\tfind(p[i]);\n\t}\n\treturn;\n}"}
{"similarity_score": 0.8619986403806934, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "09c46dc9733af809f8ea5fa910036bec", "bug_code_uid": "2d58e77bae9d64511ff85cb8d51c07b8", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "9fc539d84e006af9444532c7e3b06d7c", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a,s=0,f=0,i,m,b;\n    scanf(\"%I64d\",&a);\n    m=a;\n\n    for(i=1;i<=a;i++)\n    {\n        scanf(\"%I64d\",&b);\n        if(b==25)\n        {\n            m--;\n            s++;\n        }\n        if(b==50)\n        {\n            if(s>0)\n            {\n                m--;\n                s--;\n                f++;\n            }\n        }\n        if(b==100)\n        {\n            if(s>0 && (f>0 || s>2))\n            {\n                m--;\n                f--;\n                s--;\n            }\n        }\n    }\n    if(m==0)\n    {\n        printf(\"YES\\n\");\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,s=0,f=0,i,m,b;\n    scanf(\"%I64d\",&a);\n    m=a;\n\n    for(i=1;i<=a;i++)\n    {\n        scanf(\"%I64d\",&b);\n        if(b==25)\n        {\n            m--;\n            s++;\n        }\n        if(b==50)\n        {\n            if(s>0)\n            {\n                m--;\n                s--;\n                f++;\n            }\n        }\n        if(b==100)\n        {\n            if(s>0 && (f>0 || s>2))\n            {\n                m--;\n                if(f==0)\n                {\n                    s=s-3;\n                }\n                else\n                {\n                    f--;\n                    s--;\n                }\n            }\n        }\n    }\n    if(m==0)\n    {\n        printf(\"YES\\n\");\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9972640218878249, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "875c1a66df8a5cd044324246d0afaca2", "bug_code_uid": "6036f2c2b2b09dff027602017aa48a89", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "69a9597728d0a0667d8be1b24830806b", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\n    long long int n, arr[100000], min, pos, ct = 0, i;\n    scanf(\"%lld\", &n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%lld\", &arr[i]);\n    }\n    if(n == 1)\n    {\n        printf(\"1\\n\");\n        return 0;\n    }\n    else\n    {\n        min = arr[0];\n        for(i = 1; i < n; i++)\n        {\n            if(arr[i] < min)\n            {\n                min = arr[i];\n                pos = (i + 1);\n            }\n        }\n    }\n    for(i = 0; i < n; i++)\n    {\n        if(min == arr[i])\n        {\n            ct++;\n            if(ct > 1)\n            {\n                printf(\"Still Rozdil\\n\");\n                return 0;\n            }\n        }\n    }\n    printf(\"%lld\\n\", pos);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main ()\n{\n    long long int n, arr[100000], min, pos = 1, ct = 0, i;\n    scanf(\"%lld\", &n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%lld\", &arr[i]);\n    }\n    if(n == 1)\n    {\n        printf(\"1\\n\");\n        return 0;\n    }\n    else\n    {\n        min = arr[0];\n        for(i = 1; i < n; i++)\n        {\n            if(arr[i] < min)\n            {\n                min = arr[i];\n                pos = (i + 1);\n            }\n        }\n    }\n    for(i = 0; i < n; i++)\n    {\n        if(min == arr[i])\n        {\n            ct++;\n            if(ct > 1)\n            {\n                printf(\"Still Rozdil\\n\");\n                return 0;\n            }\n        }\n    }\n    printf(\"%lld\\n\", pos);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9664082687338501, "equal_cnt": 13, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "8792a6f99f2e37cb55eb29bd006c92d0", "bug_code_uid": "09b51f5e9108efab2ec9480278a427d0", "src_uid": "e03bec836d52fe4784a5b4c62ab5b2c8", "apr_id": "6c6a8c1cf6f960ec6e5dc40e10dd74a1", "difficulty": 1700, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t300000\n\nint main() {\n\tstatic char cc[N + 1];\n\tint n, n_, i, cnt, k1, k2;\n\n\tscanf(\"%d%s\", &n, cc);\n\tcnt = 0;\n\tn_ = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (cc[i] == '(')\n\t\t\tcnt++;\n\t\telse if (cc[i] == ')')\n\t\t\tcnt--;\n\t\telse\n\t\t\tn_++;\n\t/* cnt + k1 - (n_ - k1) = 0 */\n\t/* k1 = (n_ - cnt) / 2 */\n\tif ((n_ - cnt) % 2) {\n\t\tprintf(\":(\\n\");\n\t\treturn 0;\n\t}\n\tk1 = (n_ - cnt) / 2;\n\tk2 = n_ - k1;\n\tif (k1 < 0 || k2 < 0) {\n\t\tprintf(\":(\\n\");\n\t\treturn 0;\n\t}\n\tfor (i = 0; i < n; i++)\n\t\tif (cc[i] == '?') {\n\t\t\tif (k1) {\n\t\t\t\tcc[i] = '(';\n\t\t\t\tk1--;\n\t\t\t} else {\n\t\t\t\tcc[i] = ')';\n\t\t\t\tk2--;\n\t\t\t}\n\t\t}\n\tcnt = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (cc[i] == '(')\n\t\t\tcnt++;\n\t\telse\n\t\t\tcnt--;\n\t\tif (i < n - 1 && cnt == 0) {\n\t\t\tprintf(\":(\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"%s\\n\", cc);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t300000\n\nint main() {\n\tstatic char cc[N + 1];\n\tint n, n_, i, x, k1, k2;\n\n\tscanf(\"%d%s\", &n, cc);\n\tx = 0;\n\tn_ = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (cc[i] == '(')\n\t\t\tx++;\n\t\telse if (cc[i] == ')')\n\t\t\tx--;\n\t\telse\n\t\t\tn_++;\n\t/* x + k1 - (n_ - k1) = 0 */\n\t/* k1 = (n_ - x) / 2 */\n\tif ((n_ - x) % 2) {\n\t\tprintf(\":(\\n\");\n\t\treturn 0;\n\t}\n\tk1 = (n_ - x) / 2;\n\tk2 = n_ - k1;\n\tif (k1 < 0 || k2 < 0) {\n\t\tprintf(\":(\\n\");\n\t\treturn 0;\n\t}\n\tfor (i = 0; i < n; i++)\n\t\tif (cc[i] == '?') {\n\t\t\tif (k1) {\n\t\t\t\tcc[i] = '(';\n\t\t\t\tk1--;\n\t\t\t} else {\n\t\t\t\tcc[i] = ')';\n\t\t\t\tk2--;\n\t\t\t}\n\t\t}\n\tx = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (cc[i] == '(')\n\t\t\tx++;\n\t\telse\n\t\t\tx--;\n\t\tif (i < n - 1 && x <= 0) {\n\t\t\tprintf(\":(\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"%s\\n\", cc);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9955423476968797, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "65ef1b1cb2f4f3e98bae742d03b8438c", "bug_code_uid": "9c6be1a01848af2e123bc0b3e9b4b802", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "55dca171b9575e4db26e6c220a72524e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\nint a[4];\nchar s[100];\nint ans=0,i;\nfor(i=0;i<4;i++)\nscanf(\"%d \",&a[i]);\nscanf(\"%s\",s);\n\nfor(i=0;s[i]!='\\0';i++)\n{\n    if (s[i]=='1')\n        ans=ans+a[0];\n    else if(s[i]=='2')\n        ans=ans+a[1];\n    else if(s[i]=='3')\n        ans=ans+a[2];\n    else\n        ans=ans+a[3];\n}\nprintf(\"%d\",ans);\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\nint a[4];\nchar s[100000];\nint ans=0,i;\nfor(i=0;i<4;i++)\nscanf(\"%d \",&a[i]);\nscanf(\"%s\",s);\n\nfor(i=0;s[i]!='\\0';i++)\n{\n    if (s[i]=='1')\n        ans=ans+a[0];\n    else if(s[i]=='2')\n        ans=ans+a[1];\n    else if(s[i]=='3')\n        ans=ans+a[2];\n    else\n        ans=ans+a[3];\n}\nprintf(\"%d\",ans);\n}\n"}
{"similarity_score": 0.9719626168224299, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b4536c54d34d2123fa717463244cb7ce", "bug_code_uid": "6b5d5879586002a29d02e5e5b09afd55", "src_uid": "941adee47c2a28588ebe7dfe16e0c91a", "apr_id": "9caf0f9b3ad42e326437302b3983687b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,p,m,tot=0;\n\tint a[100010];\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d %d\",&m,&p);\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\ttot+=a[i];\n\t\t}\n\t\tif(tot==p)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\"); \n\t\t\n\t}\n } ", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,p,m,tot;\n\tint a[100010];\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d %d\",&m,&p);\n\t\ttot=0;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\t\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\ttot+=a[i];\n\t\t}\n\t\tif(tot==p)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\"); \n\t\t\n\t}\n } "}
{"similarity_score": 0.9952153110047847, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cf2a57f93475792df07ab71b120590d3", "bug_code_uid": "a77d4ddc66fa659868742e5057e15b50", "src_uid": "4dfa99acbe06b314f0f0b934237c66f3", "apr_id": "0f81bff3977ea7cae4bc71d707753948", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\r\nlong long int t;\r\n\r\nscanf(\"%lld\",&t);\r\nlong long int u,v;\r\nwhile (t--)\r\n{scanf(\"%lld %lld\",&u,&v);\r\n    printf(\"%lld %lld\",-1*u*u,v*v);\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\r\nlong long int t;\r\n\r\nscanf(\"%lld\",&t);\r\nlong long int u,v;\r\nwhile (t--)\r\n{scanf(\"%lld %lld\",&u,&v);\r\n    printf(\"%lld %lld\\n\",-1*u*u,v*v);\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.33421750663129973, "equal_cnt": 10, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "3753514a856149cb9f244a1f71398835", "bug_code_uid": "4d5e8fdb832c901568bcd95ca44b983e", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "16cb386e3292581be677d305048a4d0c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,a[100],b[100],i,max[100],largest;\n\tmax[0]=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\\n\",&a[i],&b[i]);\n\t}\n\tfor(i=0;i<(n-1);i++)\n\t{\n\t\tmax[i]+=(b[i]-a[i]);\n\t}\n\tlargest=max[0];\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(largest<max[i])\n\t\t{\n\t\t\tlargest=max[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",largest);\n\treturn 0;\n\t\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint stop,sum[1001]={0},i,j,copy=0,l=0;\n\tint a[1001],b[1001];\n\tscanf(\"%d\",&stop);\n\tfor(i=0;i<stop;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\tl=b[i]-a[i];\n\t\tsum[i]+=l;\n\t\tsum[i+1]=sum[i];\n\t}\n\tint k=stop;\n\tfor(i=0;i<stop-1;i++)\n\t{\n\t\tfor(j=0;j<stop-i-1;j++)\n\t\t{\n\t\t\tif(sum[j]>sum[j+1])\n\t\t\t{\n\t\t\t\tcopy=sum[j];\n\t\t\t\tsum[j]=sum[j+1];\n\t\t\t\tsum[j+1]=copy;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",sum[k-1]);\n\treturn 0;\n}"}
{"similarity_score": 0.6537173476222371, "equal_cnt": 17, "replace_cnt": 7, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "7cb893545583105e07307d7be281a388", "bug_code_uid": "365fa1bb596e99353d9804239efd12af", "src_uid": "9b1b082319d045cf0ec6d124f97a8184", "apr_id": "993e4487ad5b8427a0603c905a295db6", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int i,j,m,n;\n    scanf(\"%d\",&n);\n    getchar();\n    char b[n][100010];\n    int a=0,flag=1,cnt=0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%s\",b[i]);\n        if(strcmp(b[i],\"0\")==0)\n        {\n            printf(\"0\\n\");\n            flag=0;break;\n        }\n\n    }\n    if(flag){\n         for(i=0; i<n; i++)\n    {\n        cnt=0;\n        for(j=0;b[i][j];j++){\n            if(b[i][j]=='0'&&b[i][0]=='1')a++;\n            else if(b[i][j]=='1')cnt++;\n            else {\n                printf(\"%s\",b[i]);break;\n            }\n            if(cnt>1){ printf(\"%s\",b[i]);break;}\n        }\n    }\n\n    for(i=0;i<a;i++)printf(\"0\");printf(\"\\n\");}\n    //system(\"pause\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int i,j,m,n;\n    scanf(\"%d\",&n);\n    getchar();\n    char b[100010],d[100010];strcpy(d,\"1\");\n    int a=0,flag=1,cnt=0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%s\",b);\n        if(strcmp(b,\"0\")==0)\n        {\n            printf(\"0\\n\");\n            flag=0;break;\n        }\n        cnt=0;int c=0;\n        for(j=0;b[j];j++){\n            if(b[j]=='0'&&b[0]=='1')c++;\n            else if(b[j]=='1')cnt++;\n            else {\n               strcpy(d,b);break;\n            }\n            if(cnt>1){strcpy(d,b);break;}\n        }\n        if(b[j]==0)a+=c;\n    }\n    if(flag){\n    printf(\"%s\",d);\n    for(i=0;i<a;i++)printf(\"0\");printf(\"\\n\");}\n    //system(\"pause\");\n    return 0;\n}\n"}
{"similarity_score": 0.4970873786407767, "equal_cnt": 61, "replace_cnt": 40, "delete_cnt": 1, "insert_cnt": 20, "fix_ops_cnt": 61, "lang": "GNU C11", "fix_code_uid": "5daf39f684cba783e3d79399ea460f0f", "bug_code_uid": "0573e02f802f832976606c19e1147a49", "src_uid": "91f0341e7f55bb03d87e4cfc63973295", "apr_id": "dfe18726724919e4bdef9667c7652f2b", "difficulty": 1900, "tags": ["dp"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define NUM 10001\n\nint main() {\n\t\n\tint n,m,i,j,k,flag,a[101],b[101];\n\tchar ab[NUM][NUM];\n\t\n\tscanf(\"%d%d\",&n,&m);\n\tfor( i=0; i<n; i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor( i=0; i<n; i++)\n\t\tscanf(\"%d\",&b[i]);\n\t\t\n\tmemset(ab, 0, sizeof(ab)); \n\tab[0][0]=1;\n\t\t\n\tfor(i=0; i<n; i++){\n\t\tfor( j=NUM; j>=a[i];j-- ){\n\t\t\tfor( k=NUM; k>=b[i]; k--){\t\t\n\t\t\t\tif(ab[j-a[i]][k-b[i]] == 1 ){\n\t\t\t\t\tab[j][k] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t}\n\n\tflag = 0;\n\tfor(i=NUM; i>0; i--){\n\t\tif( i%m == 0 && ab[i][i/m]==1){\n\t\t\tflag = 1;\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag == 0){\n\t\tprintf(\"-1\\n\");\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define NUM 3001\n\nint main()\n{\n\n    int n, m, i, j, k, flag, a[101], b[101];\n    char ab[NUM][NUM];\n\n    scanf(\"%d%d\", &n, &m);\n    for( i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    for( i = 0; i < n; i++)\n        scanf(\"%d\", &b[i]);\n\n    if(n == 100 && m == 1){\n            printf(\"%d\\n\", 10000);\n            return 0;\n      }\n\n\n    memset(ab, 0, sizeof(ab));\n    ab[0][0] = 1;\n\n    for( i = 0; i < n; i++)\n    {\n        for( j = NUM-1; j >= a[i]; j-- )\n        {\n            for( k = NUM-1; k >= b[i]; k--)\n            {\n                if(ab[j - a[i]][k - b[i]] == 1 && ab[j][k] == 0)\n                {\n                    ab[j][k] = 1;\n                }\n            }\n        }\n    }\n\n    for(i = NUM-1; i > 0; i--)\n    {\n        if( i % m == 0 && ab[i][i / m] == 1 )\n        {\n            printf(\"%d\\n\", i);\n            return 0;\n        }\n    }\n\n    printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9759615384615384, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cd919158ed323f9b471fe1a1f37fbcb5", "bug_code_uid": "d01936710f14a75c9b9db3b2c347d00b", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "b77d9f4bb5390006b0e7d37133610b30", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tint t,n;\r\n\tchar a[10000];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint flag=0;\r\n\t\tint sumq=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tgetchar();\r\n\t\tgets(a);\r\n\t\tchar *p=a;\r\n\t\twhile(*p!='\\0'){\r\n\t\t\r\n\t\tif(*p=='Q'){\r\n\t\t\tsumq++;\r\n\t\t}\r\n\t\tif(*p=='A'){\r\n\t\t\tsumq--;\r\n\t\t}\r\n\t\tp++;\r\n     \t}\r\n     \tif(sumq>0)\r\n     \tflag=-1;\r\n     \tif(flag==-1)\r\n     \tprintf(\"No\\n\");\r\n     \telse\r\n     \tprintf(\"Yes\\n\");\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tint t,n;\r\n\tchar a[10000];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint flag=0;\r\n\t\tint sumq=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tgetchar();\r\n\t\tgets(a);\r\n\t\tchar *p=a;\r\n\t\twhile(*p!='\\0'){\r\n\t\t\r\n\t\tif(*p=='Q'){\r\n\t\t\t\r\n\t\t\tsumq++;\r\n\t\t}\r\n\t\tif(*p=='A'){\r\n\t\t\tif(sumq>0)\r\n\t\t\tsumq--;\r\n\t\t}\r\n\t\tp++;\r\n     \t}\r\n     \tif(sumq>0)\r\n     \tflag=-1;\r\n     \tif(flag==-1)\r\n     \tprintf(\"No\\n\");\r\n     \telse\r\n     \tprintf(\"Yes\\n\");\r\n\t}\r\n}"}
{"similarity_score": 0.993103448275862, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a39d8cbca45fabc1ae6661f563e3f03e", "bug_code_uid": "7ef436f8d0cfec1a250e8832d4b98cf4", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "298da80cf7e479027bc10bff93fddc64", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    unsigned short n, k, i;\n    char c;\n    scanf(\"%hu%hu\", &n, &k);\n    while(n){\n        c = 'a';\n        for(i = 1; i <= 26 && n; i++){ putchar(c); c++; n--; }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    unsigned short n, k, i;\n    char c;\n    scanf(\"%hu%hu\", &n, &k);\n    while(n){\n        c = 'a';\n        for(i = 1; i <= k && n; i++){ putchar(c); c++; n--; }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9690140845070423, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b363339366e627ee8f82c6532757a3dc", "bug_code_uid": "4fc6e80c75b3623c1435fe752383d254", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "f83b7c17ad98a9d6243dcdcf2f6dec85", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{ long int n;\n  int t,i,c;\nscanf(\"%d\",&t);\nfor(i=1;i<=t;i++)\n{  scanf(\"%ld\",&n);\n  c= floor((n-1)/2);\nprintf(\"%d\",c);\n}\n    \n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{ long int n;\n  int t,i,c;\nscanf(\"%d\",&t);\nfor(i=1;i<=t;i++)\n{  scanf(\"%ld\",&n);\n  c= floor((n-1)/2);\nprintf(\"\\n%d\",c);\n}\n    return 0;\n}"}
{"similarity_score": 0.5906163753449862, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fa28f43dfe1cf695e23f2a853d7e852e", "bug_code_uid": "3dd5655c6a18dd3e969ae75c0b2c59b8", "src_uid": "5bffe38e3ac9511a30ee02b4ec5cb1d5", "apr_id": "5b3777b51557e845dc8c39d81974e546", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a[3];\r\n        scanf(\"%d %d %d\",&a[0],&a[1],&a[2]);\r\n        for(int i=0; i<3; i++)\r\n        {\r\n            for(int j=i+1; j<3; j++)\r\n            {\r\n                if(a[i]>a[j])\r\n                {\r\n                    int t=a[i];\r\n                    a[i]=a[j];\r\n                    a[j]=t;\r\n                }\r\n            }\r\n        }\r\n        int d=a[2]-a[0];\r\n        int l=(a[1]-a[0])+(a[2]-a[1]);\r\n\r\n        if(a[0]!=a[1]&&a[1]!=a[2]&&a[2]!=a[0]&&d==l)\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a[3];\r\n        scanf(\"%d %d %d\",&a[0],&a[1],&a[2]);\r\n\r\n       int s=a[0]+a[1]+a[2];\r\n        if(s%3==0)\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n\r\n}\r\n"}
{"similarity_score": 0.9019073569482289, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "43bcdfb0a590088c8edf9bd4511e479a", "bug_code_uid": "459891e8aef03fa8c8b5c4e35e36cec8", "src_uid": "26f1b8c3cb83603c904e1508df4067f4", "apr_id": "f2ddad3a275e05289563be83df77bc8b", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n#define LEN 200001\n\nchar s[LEN];\n\n main ( )\n{\n        int i, j;\n\n        for ( i = 1; '\\n' != ( j = getchar ( ) ); )\n         {\n                if ( s[i - 1] == j ) --i;\n                else s[i++] = j;\n        }\n        for ( j = 1; j < i; ++j ) \n        {\n        putchar ( s[j] );\n        putchar ( '\\n' );\n        }\n        return 0;\n}\n\n\n", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n#define LEN 200001\n\nchar s[LEN];\n\n main ( )\n{\n        int i, j;\n\n        for ( i = 1; '\\n' != ( j = getchar ( ) ); )\n         {\n                if ( s[i - 1] == j ) --i;\n                else s[i++] = j;\n        }\n        for ( j = 1; j < i; ++j ) \n        {\n        putchar ( s[j] );\n    }\n        return 0;\n}\n\n\n"}
{"similarity_score": 0.4730617608409987, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "c5e7e001392e9688e4555f5965adc9e3", "bug_code_uid": "787ac11e04e134fb8919779bc78e7a88", "src_uid": "b01602b51b9103c0f31c3f50b32aa88d", "apr_id": "5b7af58b1e44346f190ce1efeefbd497", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,s,t;\n    scanf(\"%d %d %d\",&n,&s,&t);\n    int a[n],i,c=0;\n    for(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n    if(s!=t&&(s==a[s-1]||t==a[t-1])) printf(\"-1\");\n    else{\n        for(i=1;s!=t;i++){\n            s=a[s-1];\n            c++;\n        }\n        printf(\"%d\",c);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,s,t;\n    scanf(\"%d %d %d\",&n,&s,&t);\n    int x=s,flag=1;\n    int a[n],i,c=0;\n    for(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n    if(s==t) printf(\"0\");\n    else{\n        for(i=1;s!=t;i++){\n            s=a[s-1];\n            if(s==x){\n                flag=0;\n                break;\n            }\n            c++;\n        }\n        if(flag==0) printf(\"-1\");\n        else printf(\"%d\",c);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.46516613076098606, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "c37bde1fabf8332605ba0f505d4b9f18", "bug_code_uid": "ee7128e2c696298d5422b669826abf92", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "63d01527970add9f81a0aa132c2d79df", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n    int main(){\r\n    int t,q,d,temp;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d%d\",&q,&d);\r\n        int c=0,i=0;\r\n        while(q--){\r\n            scanf(\"%d\",&temp);\r\n           \r\n            int r=temp-i*d;\r\n            if(r%10==d){\r\n                c++;\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        if(c>0){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {printf(\"NO\\n\");}\r\n    }\r\n\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\n\n    int main(){\n    int t,q,d;\n    scanf(\"%d\",&t);\n    while(t--){\nscanf(\"%d%d\",&q,&d);\n\nint temp;\nwhile(q--){\n    int c=0;\n    scanf(\"%d\",&temp);\n    if(temp>=d*10)\n        c=1;\n    if(c==0){\n        while(temp>=d){\n            if(temp%d==0){\n                c=1;\n                break;\n            }\n            temp-=10;\n        }\n    }\n    if(c){\n        printf(\"YES\\n\");\n    }else{printf(\"NO\\n\");}\n    \n}\n\n\n\n\n\n\n    }\nreturn 0;\n}"}
{"similarity_score": 0.7642079806529625, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "f26f2177ffd73ccd11bb0e872a35082f", "bug_code_uid": "2939590213865b3fd0ac98cecec3209d", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "951c558b25050f51b41637426b1a4ae9", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n    long long int t,n,x,k,z;\n    scanf(\"%lld\", &t);\n    while(t--)\n    {\n        scanf(\"%lld\", &n);\n        for (k = 1; k < n; k++)\n        {\n            z = pow(2,k) - 1;\n            for (x = 1; z > n; x++)\n            {\n                if (x * z == n)\n                {\n                    print(\"%lld\\n\", &x);\n                    return 0;\n                }\n            }\n            \n        }\n    }\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n    long long int t,n,x=0,k,z;\n    scanf(\"%lld\", &t);\n    while(t--)\n    {\n        scanf(\"%lld\", &n);\n        for (k = 2;; k++)\n        {\n            z = pow(2,k) - 1;\n            if (n%z==0)\n            {\n                x = n/z;\n                printf(\"%lld\\n\", x);\n                break;\n            }\n        }\n    }\n}"}
{"similarity_score": 0.4794952681388013, "equal_cnt": 18, "replace_cnt": 11, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "59e6f86d8856ef6e7a9181434670febb", "bug_code_uid": "d96eeb8be23ed27850a3910f77570e8d", "src_uid": "39d8677b310bee8747c5112af95f0e33", "apr_id": "dca4a8eb697f14b3d8ce8e75ef5812fd", "difficulty": 1500, "tags": ["binary search", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n\n  for (; t > 0; t--) {\n    int l, r, m;\n    scanf(\"%d %d %d\", &l, &r, &m);\n\n    int x = r - l;\n    for (int a = l; a <= r; a++) {\n      int y = m % a;\n      if (y <= x && m >= a) {\n        printf(\"%d %d %d\\n\", a, l + y, l);\n        break;\n      } else if (y >= a - x) {\n        printf(\"%d %d %d\\n\", a, l, l + a - y);\n        break;\n      }\n    }\n  }\n\n  return 0;\n}\n", "fixed": "#include <stdint.h>\n#include <stdio.h>\n\nint main() {\n  int t;\n\n  scanf(\"%d\", &t);\n\n  for (int i = 0; i < t; i++) {\n    int l, r;\n    int64_t m;\n    scanf(\"%d %d %lld\", &l, &r, &m);\n\n    for (int a = l; a <= r; a++) {\n      int x = m % a;\n\n      if (x <= r - l && (m - x) > 0) {\n        printf(\"%d %d %d\\n\", a, l + x, l);\n        break;\n      } else if (r - l >= a - x && (m + a - x) > 0) {\n        x = a - x;\n        printf(\"%d %d %d\\n\", a, l, l + x);\n        break;\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.9901477832512315, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cc40e62ec03d4a9defc9e6bd2d2026a1", "bug_code_uid": "53d28ab8275d50f62e8a4cc7d691f197", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "cda8aee46a683a72229539e9ce67d1c3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i,arr[100001],mag=1;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++);\n{\nscanf(\"%d\", &arr[i]);\n}\nfor(i=0;i<n-1;i++)\n{\nif(arr[i]!=arr[i+1])\n{\nmag++\n}\n}\nprintf(\"%d\",mag);\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i,arr[100001], mag=1;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\", &arr[i]);\n}\nfor(i=0;i<n-1;i++)\n{\nif(arr[i]!=arr[i+1])\n{\nmag++;\n}\n}\nprintf(\"%d\",mag);\n\nreturn 0;\n}"}
{"similarity_score": 0.2965470548408937, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "e04467372c4aeb23b7ee5971d5430d70", "bug_code_uid": "e968d40483702f4aae1dd8669a053a04", "src_uid": "bacd613dc8a91cee8bef87b787e878ca", "apr_id": "1cca094045c18fa2f57d9a4e37b822e4", "difficulty": 1300, "tags": ["implementation", "hashing", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define M 107\n#define NO 0\n#define YES 1\nint B[M][M],A[M][M];\nint main()\n{\n\tint m,n,i,j,flag=YES;\n\tscanf(\"%d%d\",&m,&n);\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tscanf(\"%d\",&B[i][j]);\n\t\t}\n\t}\n\tint prev=0;\n\tfor(i=0;i<m;i++){\n\t\tprev=0;\n\t\tfor(j=0;j<n;j++){\n\t\t\tif(B[i][j]==1){\n\t\t\t\tprev=1;\n\t\t\t}\n\t\t\tif(B[i][j]==0 && prev==1){\n\t\t\t\tflag = NO;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==NO)\n\t\t\tbreak;\n\t}\n\tif(flag==NO){\n\t\tprintf(\"NO\\n\");\n\t}else{\n\t\tprintf(\"YES\\n\");\n\t\t//prev=0;\n\t\tfor(i=0;i<m;i++){\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tprintf(\"%d \",B[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\t\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define M 107\nint B[M][M],A[M][M];\nint m,n;\nvoid make(int row,int col)\n{\n\tint i,j;\n\tfor(i=0;i<n;i++){\n\t\tA[row][i]=0;\n\t}\n\tfor(i=0;i<m;i++){\n\t\tA[i][col]=0;\n\t}\n}\nint find(int row,int col)\n{\n\tint i,ans=0;\n\tfor(i=0;i<n;i++)\n\t\tans |= A[row][i];\n\tfor(i=0;i<m;i++)\n\t\tans |= A[i][col];\n\treturn ans;\n}\nvoid print(int a[][107])\n{\n\tint i,j;\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<n;j++)\n\t\t\tprintf(\"%d \",a[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n}\nint main()\n{\n\tint i,j;\n\tscanf(\"%d%d\",&m,&n);\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tscanf(\"%d\",&B[i][j]);\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)\n\t\tfor(j=0;j<n;j++)\n\t\t\tA[i][j]=1;\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tif(B[i][j]==0){\n\t\t\t\tmake(i,j);\n\t\t\t}\n\t\t}\n\t}\n\t//print(A);\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<n;j++){\n\t\t\tif(B[i][j]!=find(i,j)){\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\treturn 0;\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"YES\\n\");\n\tprint(A);\n\treturn 0;\n}"}
{"similarity_score": 0.9737704918032787, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "86f7b33ffee841d963f3b645cb812aad", "bug_code_uid": "e7aa3d3b0dd75df5c608d34f4f02527e", "src_uid": "8cf5d08a319672d9b767d3523eca4df6", "apr_id": "e7ef139901529a4038e4bfffc3dc5247", "difficulty": 1400, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(void){\n\tint n,w,a,i,total=0,max=0,min=0;\n\n\tscanf(\"%d %d\",&n,&w);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a);\n\t\ttotal+=a;\n\t\tif(max<total) max=total;\n\t\tif(min>total) min=total;\n\t}\n\n\tprintf(\"%d\\n\",w>=max&&w>=-min&&w>max-min?w-max+min+1:0);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(void){\n\tint n,w,a,i,total=0,max=0,min=0;\n\n\tscanf(\"%d %d\",&n,&w);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a);\n\t\ttotal+=a;\n\t\tif(max<total) max=total;\n\t\tif(min>total) min=total;\n\t}\n\n\tprintf(\"%d\\n\",w>=max-min?w-max+min+1:0);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.43237907206317866, "equal_cnt": 18, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "ab6c19b14350353e3125f0a6b8b32399", "bug_code_uid": "2c7535639c2dc5cbb18931eb114fe636", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "8219922583996cdb6925cf9e95ca7b88", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a, b, i, j, k, x, y, n, count;\n    int points[10009];\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &points[i]);\n    }\n    for(i = n - 1, count = 0; i > 0; i--){\n        for(j = i - 1, x = 0; j >= 0; j--){\n            if(points[i] > points[j]){\n                x++;\n            }\n        }\n        if(x == i){\n            count++;\n        }\n    }\n    printf(\"%d\", count);\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint n, k, w, x, y, z, m, n, ans, i, j, k, max, min;\nint ara[2000];\nint main()\n{\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &ara[i]);\n        if(i == 0){\n            max = ara[i];\n            min = ara[i];\n            continue;\n        }\n        if(ara[i] > max){\n            max = ara[i];\n            ans++;\n          //  printf(\"%d \", i);\n        }\n        else if(ara[i] < min){\n            min = ara[i];\n            ans++;\n          //  printf(\"%d \", i);\n        }\n    }\n\n    printf(\"%d\", ans);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.991701244813278, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 6, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "033df43bc22f6cd3707399bbf13fd9b5", "bug_code_uid": "ebc674828309616f23e92753bd0d4f23", "src_uid": "ccb7b8c0c389ea771f666c236c1cba5f", "apr_id": "e2dbe0bac40e1490eb2c1f3efb962bfe", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": " \n#include <stdio.h>\n \nint a,b,x,y, ar1,ar2,ar3,ar4, t, i;\n \nint surface (int l1, int l2)\n{\n    return l1 * l2;\n}\n \nint max (int l1, int l2)\n{\n    if (l1 > l2) return l1; else return l2;\n}\n \nint main()\n{\n    scanf(\"%d\", &t);\nfor (i = 1; i <= t; i++)\n{\n    scanf(\"%d %d %d %d\", &a,&b,&x,&y);\n    ar1 = surface(a,y);\n    ar2 = surface(a - x - 1,b);\n    ar3 = surface(b,x);\n    ar4 = surface(b - y - 1,a);\n    printf (\"%d\\n\", max (max(ar1, ar2), max(ar3, ar4)));\n    \n}\n \n    return 0;\n}+", "fixed": "\n#include <stdio.h>\n\nint a,b,x,y, ar1,ar2,ar3,ar4, t, i;\n\nint surface (int l1, int l2)\n{\n    return l1 * l2;\n}\n\nint max (int l1, int l2)\n{\n    if (l1 > l2) return l1; else return l2;\n}\n\nint main()\n{\n    scanf(\"%d\", &t);\nfor (i = 1; i <= t; i++)\n{\n    scanf(\"%d %d %d %d\", &a,&b,&x,&y);\n    ar1 = surface(a,y);\n    ar2 = surface(a - x - 1,b);\n    ar3 = surface(b,x);\n    ar4 = surface(b - y - 1,a);\n    printf (\"%d\\n\", max (max(ar1, ar2), max(ar3, ar4)));\n    \n}\n\n    return 0;\n}\n"}
{"similarity_score": 0.9839883551673945, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a9cbb64031d24847b370a4d61e0590f0", "bug_code_uid": "63ddc0ad486d9a1c295dba99a44df0ab", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "f9042ddae3aa66d79b45928f5faa22a8", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tlong long int n, k, s, i;\n\tdouble x;\n\t\n\tscanf(\"%lld %lld\", &n, &k);\n\tlong long int a[n+1];\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%lld\", &a[i]);\n\t}\n\tx=(-1+sqrt(1+(8*k)))/2;\n\ts=x/1;\n\ts=k-((s*(s+1))/2);\n\t\n\tif(s==0)\n\t{\n\t\tprintf(\"%lld\", a[n-1]);\n\t}\n\telse\n\t{\n\t\tprintf(\"%lld\", a[s-1]);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tlong long int n, k, s, i, y;\n\tdouble x;\n\t\n\tscanf(\"%lld %lld\", &n, &k);\n\tlong long int a[n+1];\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%lld\", &a[i]);\n\t}\n\tx=(-1+sqrt(1+(8*k)))/2;\n\ts=x/1;\n\ty=s;\n\ts=k-((s*(s+1))/2);\n\t\n\tif(s==0)\n\t{\n\t\tprintf(\"%lld\", a[y-1]);\n\t}\n\telse\n\t{\n\t\tprintf(\"%lld\", a[s-1]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5464663327768503, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "8d2742a88f06fd4c3b1902724128eb7c", "bug_code_uid": "0cbfe65e67ebc3652e3beb6dfdf90a1e", "src_uid": "1d89df4153d70087d212b711852eba5f", "apr_id": "fc69373a8826ecf38dd5073ea97c1196", "difficulty": 1000, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\n#define SIZE 100 \n\nvoid swap(int *a, int *b)\n{\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nvoid boboSort(int arr[], int size)\n{\n    int i, j, temp;\n    int flag = 1; \n\n    while(flag)\n    {\n        for(i=0;i<size;i++)\n        {\n            for(j=i+1;j<size;j++)\n            {\n                if((i - arr[i]) == (j - arr[j]))\n                {\n                    flag = 1;\n                    swap(&arr[i], &arr[rand()%size]);\n                }             \n            }     \n        }\n    }\n    for(i=0;i<size;i++)\n    {\n        printf(\"%d \", arr[i]);\n    }\n}\n\nint main(void)\n{\n    int t_case, size, i, j;\n    int arr[SIZE];\n\n    srand((unsigned)time(NULL));\n    \n    scanf(\"%d\", &t_case);\n\n    for(i=0;i<t_case;i++)\n    {\n        scanf(\"%d\", &size);\n        for(j=0;j<size;j++);\n        {\n            scanf(\"%d\", &arr[j]);\n        }\n        boboSort(arr, size);\n        printf(\"\\n\");\n    }\n}", "fixed": "#include <stdio.h>\n\n#define SIZE 100 \n\nvoid swap(int *a, int *b)\n{\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint bogoSort(int arr1[], int size)\n{\n    int max, index, i, j;\n\n    if(size == 1) \n    {\n        printf(\"%d\", arr1[0]);\n        return 0;\n    }\n\n    for(i=0;i<size;i++)\n    {\n        max = i;\n        for(j=i+1;j<size;j++)\n        {\n            if(arr1[max] < arr1[j]) max = j;\n        }\n        swap(&arr1[i], &arr1[max]);\n    }\n    for(i=0;i<size;i++)\n    {\n        printf(\"%d \", arr1[i]);\n    }\n    return 0;\n}\n\nint main(void)\n{\n    int t_case, size, i, j;\n    int arr[SIZE] = {0};\n    \n    scanf(\"%d\", &t_case);\n\n    for(i=0;i<t_case;i++)\n    {\n        scanf(\"%d\", &size);\n        \n\t\tfor(j=0;j<size;j++)\n        {\n            scanf(\"%d\", &arr[j]);\n        }\n        \n\t\tbogoSort(arr, size);\n        printf(\"\\n\");\n    }\n}"}
{"similarity_score": 0.9876796714579056, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8a3f237fa59ffd4c0d5cbde0c2f5dbb8", "bug_code_uid": "a046674994bf4f8f0b948b33268471af", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "0656187ea1e797a9e9c614ea66de9859", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int a, b, c;\n        if (a == 1 && b == 1 && c == 1)\n        {\n        }\n        scanf(\"%d %d %d\", &a, &b, &c);\n        int g = a > b ? a > c ? a : c : b > c ? b\n                                              : c;\n        printf(\"%d \", g > b && g > c ? g : g - a + 1);\n        printf(\"%d \", g > a && g > c ? g : g - b + 1);\n        printf(\"%d\\n\", g > b && g > a ? g : g - c + 1);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int a, b, c;\n        if (a == 1 && b == 1 && c == 1)\n        {\n        }\n        scanf(\"%d %d %d\", &a, &b, &c);\n        int g = a > b ? a > c ? a : c : b > c ? b\n                                              : c;\n        printf(\"%d \", g > b && g > c ? g - a : g - a + 1);\n        printf(\"%d \", g > a && g > c ? g - b : g - b + 1);\n        printf(\"%d\\n\", g > b && g > a ? g - c : g - c + 1);\n    }\n}"}
{"similarity_score": 0.5595716198125836, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8b8426670b0b5888573a062dcb4b0b82", "bug_code_uid": "62b5b705c06d2e98161e98a551093b14", "src_uid": "4ea1de740aa131cae632c612e1d582ed", "apr_id": "4bcd4c39ffd3562738f62764873c81ea", "difficulty": 1500, "tags": ["binary search", "sortings", "greedy"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N\t1000000000\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tint i, n, k, cnt;\n\tstatic int aa[100000]; \n\tstatic char *used;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tused = calloc(N + 1, sizeof(*used));\n\tqsort(aa, n, sizeof(*aa), compare);\n\tcnt = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tcnt++;\n\t\tif (aa[i] % k == 0 && used[aa[i] / k]) {\n\t\t\tused[aa[i] / k] = 0;\n\t\t\tcnt--;\n\t\t}\n\t\tused[aa[i]] = 1;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N\t100000\n\nstruct node {\n\tint n;\n\tstruct node *next; \n} *hashtab[N];\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint hash(int n) {\n\treturn (long long) (313LL * n + 11) % 1000000007LL % N;\n}\n\nint contains(int n) {\n\tint h = hash(n);\n\tstruct node *x;\n\n\tfor (x = hashtab[h]; x != NULL; x = x->next)\n\t\tif (x->n == n)\n\t\t\treturn 1;\n\treturn 0;\n}\n\nint add(int n) {\n\tint h = hash(n);\n\tstruct node *x = malloc(sizeof(*x));\n\n\tx->n = n;\n\tx->next = hashtab[h];\n\thashtab[h] = x;\n\treturn 0;\n}\n\nint main() {\n\tint i, n, k, cnt;\n\tstatic int aa[100000]; \n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tqsort(aa, n, sizeof(*aa), compare);\n\tcnt = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (aa[i] % k == 0 && contains(aa[i] / k))\n\t\t\tcontinue;\n\t\tadd(aa[i]);\n\t\tcnt++;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.36826347305389223, "equal_cnt": 26, "replace_cnt": 10, "delete_cnt": 12, "insert_cnt": 5, "fix_ops_cnt": 27, "lang": "GNU C", "fix_code_uid": "aa19d5758b6f318449b5dff7f73329af", "bug_code_uid": "14633f45f82c5a309892e12d046c559c", "src_uid": "94278e9c55f0fc82b48145ebecbc515f", "apr_id": "0b4c5df106011558310d44d5fe4d494f", "difficulty": 1100, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include \"ctype.h\"\n#include <string.h>\n#include<math.h>\nint main()\n{\n    int n;\n    while( scanf(\"%d\",&n)==1 )\n    {\n        char str[100001];\n\n        for(int i=0; i<n; i+=4)\n                str[i]='a';\n        for(int i=1; i<n; i+=4)\n        \tstr[i]='b';\n        for(int i=2; i<n; i+=4\n        \tstr[i]='c';\n        for(int i=3; i<n; i+=4)\n        \tstr[i]='d';\n        str[n]='\\0';\n                printf(\"%s\\n\",str);\n    }\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\nchar str[100005];\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<=n-1;i++)\n\t{\n\t\tif((i+1)%4!=0)\n\t\tstr[i]='a'+(i+1)%4-1;\n\t\telse\n\t\tstr[i]='d';\n\t}\n\tputs(str);\n\treturn 0;\n}"}
{"similarity_score": 0.996547756041427, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f866a2b913f8c6d481e972dfb7bdb467", "bug_code_uid": "df7e0b899cb0cdd8e0794832b11b74c6", "src_uid": "09f5623c3717c9d360334500b198d8e0", "apr_id": "8ed08ecf779c4fab369d5f955c2e8441", "difficulty": 1600, "tags": ["binary search", "sortings", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int grt=0,ans1,ans,s=0,i,n,a[10000];\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        s=s+a[i];\n        if(a[i]>grt)\n        grt=a[i];\n    }\n    n=n-1;\n    ans=s/n;\n    ans1=s%n;\n    if(ans<grt)\n    {\n\n    printf(\"%lld\\n\",grt);\n    return 0;\n    }\n    else if((ans1)==0)\n    printf(\"%lld\\n\",ans);\n    else\n        printf(\"%lld\\n\",ans+1);\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int grt=0,ans1,ans,s=0,i,n,a[10000000];\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        s=s+a[i];\n        if(a[i]>grt)\n        grt=a[i];\n    }\n    n=n-1;\n    ans=s/n;\n    ans1=s%n;\n    if(ans<grt)\n    {\n\n    printf(\"%lld\\n\",grt);\n    return 0;\n    }\n    else if((ans1)==0)\n    printf(\"%lld\\n\",ans);\n    else\n        printf(\"%lld\\n\",ans+1);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.4748201438848921, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9db309b50635c657ceacf22eba27a8b1", "bug_code_uid": "39eafb306c23b3fe9f3db7c3cfa7657f", "src_uid": "2b37f27a98ec8f80d0bff3f7ae8f2cff", "apr_id": "5bbf0196279f91ad6ef8e1c978881854", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint i,j,n,m,t,k,z,x,y;\n\tscanf(\"%d\",&t);\n\tfor(x=0;x<t;x++)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif(n%2!=0&&m%2!=0)\n\t\t{\n\t\t\tz=0;\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tfor(j=0;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\tz++;\n\t\t\t\t\tif(z%2!=0)\n\t\t\t\t\tprintf(\"B\");\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"W\");\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tz=0;\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tfor(j=0;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\tz++;\n\t\t\t\t\tif(z<=m*n-2)\n\t\t\t\t\t{\n\t\t\t\t\tif(z%2!=0)\n\t\t\t\t\tprintf(\"B\");\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"W\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"B\");\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint i,j,n,m,t,k,z,x,y;\n\tscanf(\"%d\",&t);\n\tfor(x=0;x<t;x++)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\t\n\t\t\tz=0;\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tfor(j=0;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\tz++;\n\t\t\t\t\tif(z<m*n)\n\t\t\t\t\tprintf(\"B\");\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"W\");\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\n\t}\n}"}
{"similarity_score": 0.9962825278810409, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0ded8d30f61bed19882094c595bf7d03", "bug_code_uid": "333d36f2e63e5cd41116f3a0babf46bd", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "e60c8a3660372544bbb153883ef429da", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint x,y,k,m,i,j;\n\n\tscanf(\"%d%d\",&x,&y)\n\tscanf(\"%d%d\",&k,&m)\n\tint a[x],b[y];\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\n\tfor(j=0;j<y;j++){\n\n\tscanf(\"%d\",&b[j]);\n\t}\n\tif(a[k-1]<b[y-m])\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint x,y,k,m,i,j;\n\n\tscanf(\"%d%d\",&x,&y);\n\tscanf(\"%d%d\",&k,&m);\n\tint a[x],b[y];\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\n\tfor(j=0;j<y;j++){\n\n\tscanf(\"%d\",&b[j]);\n\t}\n\tif(a[k-1]<b[y-m])\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}"}
{"similarity_score": 0.9969040247678018, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9531ed5a8bcce2bded5066b8112b080a", "bug_code_uid": "4752979490a234e06e858debc9c5f134", "src_uid": "5babbb7c5f6b494992ffa921c8e19294", "apr_id": "10ef1d5657b5479b8aa9936b1aa09114", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,d,i,a[101];\n    long long c=0;\n    scanf(\"%d%d\",&n,&d);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0; i<n-1; i++)\n    {\n        if(a[i+1]-a[i]>2*d)\n            c+=2;\n        else if(a[i+1]-a[i]==2*6)\n            c++;\n    }\n    printf(\"%lld\\n\",c+2);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,d,i,a[101];\n    long long c=0;\n    scanf(\"%d%d\",&n,&d);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0; i<n-1; i++)\n    {\n        if(a[i+1]-a[i]>2*d)\n            c+=2;\n        else if(a[i+1]-a[i]==2*d)\n            c++;\n    }\n    printf(\"%lld\\n\",c+2);\n    return 0;\n}\n"}
{"similarity_score": 0.9563182527301092, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7ab8dca19897dff8575b26504e008f7f", "bug_code_uid": "42c17de3b4c1df6bb3f79fa62ae633ae", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "2febf54d62d87fb931e28bbecc8d5bc1", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint c[28];\n\nint cmpfunc (const void * a, const void * b)\n{\n       return ( *(int*)b - *(int*)a );\n}\n\nint main()\n{\n    int n, k, i;\n    char a;\n    long long int coin = 0;\n\n    scanf(\"%d %d\", &n, &k);\n\n    for(i=0; i<n; i++){\n        scanf(\"%c\", &a);\n        if(a == '\\n') scanf(\"%c\", &a);\n        c[a-64]++;\n    }\n\n    qsort(c, 28, sizeof(int), cmpfunc);\n\n    for(i=0; i<n; i++){\n        if(k-c[i] <= 0){\n            coin = coin + (k*k);\n            break;\n        }\n        else coin = coin + (c[i]*c[i]);\n        k = k - c[i];\n    }\n\n    printf(\"%lli\\n\", coin);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\nint c[28];\n\nint cmpfunc (const void * a, const void * b)\n{\n       return ( *(int*)b - *(int*)a );\n}\n\nint main()\n{\n    int n, k, i;\n    char a;\n    long long int coin = 0;\n\n    scanf(\"%d %d\", &n, &k);\n\n    for(i=0; i<n; i++){\n        scanf(\"%c\", &a);\n        if(a == '\\n') scanf(\"%c\", &a);\n        c[a-64]++;\n    }\n\n    qsort(c, 28, sizeof(int), cmpfunc);\n\n    for(i=0; i<28; i++){\n        if(k-c[i] <= 0){\n            coin = coin + (long long int)k*k;\n            break;\n        }\n        else coin = coin + (long long int)c[i]*c[i];\n        k = k - c[i];\n    }\n\n    printf(\"%lli\\n\", coin);\n\n    return 0;\n}\n"}
{"similarity_score": 0.1561216105176664, "equal_cnt": 16, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "5fed361f6a2c5c60b95cfaf85e430c24", "bug_code_uid": "dd710200e5559edf771a2f509995f24e", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "05ff94809ebfc0ec7850b65e0ba2aef4", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n char a[100000];\n char Tetrahedron,Cube,Octahedron,Dodecahedron,Icosahedron;\n int n,x,b,t,f,q,y,z,u;\n\n scanf(\"%d\",&n);\n\n for(x=1;x<=n;x=x+1)\n    {scanf(\"%c\",&a[x]);}\n\n\nfor(x=1;x<=n;x=x+1)\n  {\n    if(a[x]==Tetrahedron){z=z+1;}\n    else{\n     if(a[x]==Cube) {y=y+1;}\n     else{\n        if(a[x]==Octahedron) {q=q+1;}\n         else {\n            if(a[x]==Dodecahedron){f=f+1;}\n              else{\n                if(a[x]==Icosahedron) {t=t+1;}\n                  }\n             }\n         }\n       }\n }\n   u=(t*20)+(12*f)+(8*q)+(y*6)+(4*z);\n\n    printf(\"%d\",u);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    char poligono[12];\n    int n=0,i=0,caras=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",poligono);\n\n    if(poligono[0]=='T')\n    {\n        caras = caras+4;\n    }\n    else\n    {\n     if(poligono[0]=='C')\n    {\n       caras = caras+6;\n    }\n    else\n    {\n    if(poligono[0]=='O')\n    {\n        caras = caras+8;\n    }\n    else\n    {\n     if(poligono[0]=='D')\n     {\n         caras = caras+12;\n     }\n     else\n     {\n       if(poligono[0]=='I')\n       {\n         caras = caras+20;\n       }\n    }\n    }\n    }\n    }\n    }\nprintf(\"%d\",caras);\n\n\n\n    return 0;\n}"}
{"similarity_score": 0.7906066536203522, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "abd3ce314ddc5e093b343ec242e7bccb", "bug_code_uid": "8b1ed3211497d9078d3e36834d704764", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "650ad76055862b0bdd0bf01b2b79e881", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\nint a,b,k;\nint n,x=1,y=0,i;\nscanf(\"%d\",&n);\ngets(a);\nif(n==1){puts(a);}\nelse{\nfor(i=0;i<n-1;i++){\ngets(b);\nif(strcmp(a,b)==0){x=x+1;}\nelse{k=b;\ny=y+1;}\n}\nif(x>y){puts(k);}\nelse{puts(a);}\n}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\nchar k[11],a[11],b[11];\nint n,x=1,y=0,i;\nscanf(\"%d\",&n);\nscanf(\"%s\",a);\nif(n==1){puts(a);}\nelse{\nfor(i=0;i<n-1;i++){\nscanf(\"%s\",b);\nif(strcmp(a,b)==0){x=x+1;}\nelse{strcpy(k,b);\ny=y+1;}\n}\nif(x>y){puts(a);}\nelse{puts(k);}\n}\n}"}
{"similarity_score": 0.9678540399652477, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "98eb54ee51b6c7362fd1b225729fa905", "bug_code_uid": "c615d55aaf6d1ec454f4aaefd248c2c8", "src_uid": "646cec22d98636447038e61e7dfb9db3", "apr_id": "2b99a0751c0476904c39810e5b5e8e76", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint a[100003];\nvoid solve(int n,int m)\n{\n    int len,i,j,k,Min=99999,wz=1;\n    len=n/m;\n    for(i=1;i<=m;i++)\n    {\n        for(j=i,k=0;j<=n;j=j+m)\n        k=k+a[j];\n        if(Min>k)\n        {\n            Min=k;\n            wz=i;\n        }\n    }\n    printf(\"%d\\n\",wz);\n}\nint main()\n{\n    int n,m;\n    while(scanf(\"%d%d\",&n,&m)>0)\n    {\n        for(int i=1;i<=n;i++)\n            scanf(\"%d\",&a[i]);\n        if(m==1)\n        {\n            printf(\"1\\n\");\n            continue;\n        }\n        solve(n,m);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint a[100003];\nvoid solve(int n,int m)\n{\n    int i,j,k,Min=100000110,wz=1;\n    for(i=1;i<=m;i++)\n    {\n        for(j=i,k=0;j<=n;j=j+m)\n        k=k+a[j];\n        if(Min>k)\n        {\n            Min=k;\n            wz=i;\n        }\n    }\n    printf(\"%d\\n\",wz);\n}\nint main()\n{\n    int n,m,i;\n    while(scanf(\"%d%d\",&n,&m)>0)\n    {\n        for(i=1;i<=n;i++)\n            scanf(\"%d\",&a[i]);\n        if(m==1)\n        {\n            printf(\"1\\n\");\n            continue;\n        }\n        solve(n,m);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9966055668703326, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1dfc89939cfb685a084a39fa73d14e40", "bug_code_uid": "56800adc4bab28ecb61784bd648fd3cb", "src_uid": "f13f27a131b9315ebbb8688e2f43ddde", "apr_id": "c694f1252be01783f29a2bef13fd6d3e", "difficulty": 1600, "tags": ["binary search"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <malloc.h>\n#include <math.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tint *x, *v;\n\tx = (int*)malloc(sizeof(int)*n);\n\tv = (int*)malloc(sizeof(int)*n);\n\n\tfor (int i = 0; i < n - 1; i++)\n\t\tscanf(\"%d \", &x[i]);\n\tscanf(\"%d\", &x[n - 1]);\n\n\tfor (int i = 0; i < n - 1; i++)\n\t\tscanf(\"%d \", &v[i]);\n\tscanf(\"%d\", &v[n - 1]);\n\n\tfloat a = 0, t_a;\n\tfloat b = pow(10, 9), t_b;\n\tfloat t;\n\n\twhile (fabs(a - b) > 0.000001)\n\t{\n\t\tt_a = 0;\n\t\tt_b = pow(10, 9);\n\t\tt = (a + b) / 2;\n\t\tfor (int i = 0; (i < n && t_a < t_b); i++)\n\t\t{\n\t\t\tif (x[i] - v[i] * t >= t_a)\n\t\t\t\tt_a = x[i] - v[i] * t;\n\t\t\tif (x[i] + v[i] * t <= t_b)\n\t\t\t\tt_b = x[i] + v[i] * t;\n\t\t}\n\t\tif (t_a <= t_b)\n\t\t\tb = t;\n\t\telse\n\t\t\ta = t;\n\t}\n\tprintf(\"%f\", b);\n\treturn 0;\n}", "fixed": "\n\n#include <stdio.h>\n#include <malloc.h>\n#include <math.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tint *x, *v;\n\tx = (int*)malloc(sizeof(int)*n);\n\tv = (int*)malloc(sizeof(int)*n);\n\n\tfor (int i = 0; i < n - 1; i++)\n\t\tscanf(\"%d \", &x[i]);\n\tscanf(\"%d\", &x[n - 1]);\n\n\tfor (int i = 0; i < n - 1; i++)\n\t\tscanf(\"%d \", &v[i]);\n\tscanf(\"%d\", &v[n - 1]);\n\n\tfloat a = 0, t_a;\n\tfloat b = pow(10, 9), t_b;\n\tfloat t;\n\n\twhile (fabs(a - b)/b > 0.000001)\n\t{\n\t\tt_a = 0;\n\t\tt_b = pow(10, 9);\n\t\tt = (a + b) / 2;\n\t\tfor (int i = 0; (i < n && t_a <= t_b); i++)\n\t\t{\n\t\t\tif (x[i] - v[i] * t >= t_a)\n\t\t\t\tt_a = x[i] - v[i] * t;\n\t\t\tif (x[i] + v[i] * t <= t_b)\n\t\t\t\tt_b = x[i] + v[i] * t;\n\t\t}\n\t\tif (t_a <= t_b)\n\t\t\tb = t;\n\t\telse\n\t\t\ta = t;\n\t}\n\tprintf(\"%f\", b);\n\treturn 0;\n}"}
{"similarity_score": 0.9864864864864865, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f50f08d11441860da613c8dc18d7762f", "bug_code_uid": "93db2df00b75184e631fce94e230c97d", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "a2768d2dc155b11fb1137ade610dd6da", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n\n/*\n13\n10 11 12 3 4 90 7 8 7\n*/\n\nint main()\n{\n    char a[1000000];\n    long int n,i,ind;\n    long int arr[10],m=INT_MAX,total;\n    scanf(\"%ld\",&total);\n    for(i=1;i<10;i++)\n    {\n        scanf(\"%ld\",&arr[i]);\n        if(arr[i]<m)\n            m=arr[i],ind=i;\n    }\n    if(total<m) {printf(\"-1\"); return 0;}\n    long int q,r,l,j;\n    q=total/m;\n    r=total%m;\n    memset(a,ind+'0',q);\n    l=q;\n    j=0;\n    for(i=9;i>ind;i--)\n    {\n        while(r>=arr[i]-arr[ind])\n        {\n            r-=arr[i];\n            r+=arr[ind];\n            a[j]='0'+i;\n            j++;\n        }\n    }\n    printf(\"%s\",a);\n}\n", "fixed": "#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n\n/*\n13\n10 11 12 3 4 90 7 8 7\n*/\n\nint main()\n{\n    char a[1000005];\n    long int n,i,ind;\n    long int arr[10],m=INT_MAX,total;\n    scanf(\"%ld\",&total);\n    for(i=1;i<10;i++)\n    {\n        scanf(\"%ld\",&arr[i]);\n        if(arr[i]<=m)\n            m=arr[i],ind=i;\n    }\n    if(total<m) {printf(\"-1\"); return 0;}\n    long int q,r,l,j;\n    q=total/m;\n    r=total%m;\n    memset(a,ind+'0',q);\n    a[q]='\\0';\n    l=q;\n    j=0;\n    for(i=9;i>ind;i--)\n    {\n        while(r>=arr[i]-arr[ind])\n        {\n            r-=arr[i];\n            r+=arr[ind];\n            a[j]='0'+i;\n            j++;\n        }\n    }\n    printf(\"%s\",a);\n}\n"}
{"similarity_score": 0.9786802030456853, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "96adf84f14350298256e1e1902b86c83", "bug_code_uid": "598350c1f3565f40c99f6377aa2ccac9", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "ad075c89376cbd10f88b98406cb8f471", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint recherche (int tab[],int n,int x)\n{int test=0;\n    for(int i=0;i<n;i++)\n        if(tab[i]==x)\n         test=1;\n\n    return test;\n}\n\nint main()\n{char ch[1000];\nint tab[1000];\nint n;\nscanf(\"%d\",&n);\ntab[0]=1;\ntab[1]=1;\nfor (int i=2;i<n;i++)\n  {\n      tab[i]=tab[i-2]+tab[i-1];\n  }\nint  r;\nch[0]='O';\n  for(int j=1;j<=n;j++)\n  { r= recherche ( tab,n,j);\n  if (r==1)\n    ch[j]='O';\n    else\n     ch[j]='o';\n  }\n  ch[n]='\\0';\nprintf(\"%s\",ch);\n  return 0;\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint recherche (int tab[],int n,int x)\n{int test=0;\n    for(int i=0;i<=n;i++)\n        if(tab[i]==x)\n         test=1;\n\n    return test;\n}\n\nint main()\n{char ch[1000];\nint tab[1000];\nint n;\nscanf(\"%d\",&n);\ntab[0]=1;\ntab[1]=1;\nfor (int i=2;i<=n;i++)\n  {\n      tab[i]=tab[i-2]+tab[i-1];\n  }\nint  r;\n  for(int j=0;j<=n;j++)\n  { r= recherche ( tab,n,(j+1));\n  if (r==1)\n    ch[j]='O';\n    else\n     ch[j]='o';\n  }\n  ch[n]='\\0';\nprintf(\"%s\",ch);\n  return 0;\n\n}"}
{"similarity_score": 0.6168521462639109, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d83f5e9bfcf59ac04f07c970a8c42cae", "bug_code_uid": "3e05069a60c06aaa00c22080bdf23b33", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "4eaa73747629fe57555b229139f594c8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b;\n    scanf(\"%d\",&a);\n     b=a%3;\n    a=a/3;\n    if(b==0 && a<3)\n    {\n        printf(\"%d %d %d\",a,a,a);\n    }\n    else if(b==0)\n    {\n        printf(\"%d %d %d\",a-1,a-1,a+2);\n    }\n    else if(b==1)\n    {\n         printf(\"%d %d %d\",a-1,a,a+2);\n    }\n    else if(b==2)\n    {\n         printf(\"%d %d %d\",a,a,a+2);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b;\n    scanf(\"%d\",&a);\n     b=a%3;\n    a=a-b;\n\n     if(b==0)\n    {\n        printf(\"%d 1 1\",a-2);\n    }\n    else if(b==1)\n    {\n         printf(\"%d 1 1\",a-1);\n    }\n    else if(b==2)\n    {\n         printf(\"%d 1 2\",a-1);\n    }\n}\n"}
{"similarity_score": 0.33663366336633666, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "df17b994def28759e727b340ac0804fc", "bug_code_uid": "2226049b1aa54c7ad3b6fe8c9b494b60", "src_uid": "b978ca6fdef4a02cc027485294caa0f5", "apr_id": "f3d94e57c40447cca82f5b4dcfc5c5a8", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main () {\n\n    long long int t,n;\n    scanf(\"%lld\",&t);\n    for(long long int i=0;i<t;i++)\n    {\n        long long int vact=1000000001,vant=0,cont=0;\n\n        scanf(\"%lld\",&n);\n        long long int array[n];\n        for(long long int j=0;j<n;j++)\n        {\n            scanf(\"%lld\",&array[j]);\n        }\n\n\n        for(long long int j=0;j<n;j++)\n        {\n            for(long long int k=0;k<n;k++)\n            {\n                if((array[k]<vact)&&(array[k]>vant)) vact=array[k];\n            }\n\n\n            if((vant<vact)&&(vact!=1000000001)) cont+=1;\n            vant=vact;\n            vact=1000000001;\n\n        }\n\n\n        printf(\"%lld\\n\",cont);\n\n\n\n    }\n\n    return 0;\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare(long long int *n1, long long int *n2)\n{\n  if (*n1 == *n2) {return  0;}\n  else if (*n1 < *n2) {return -1;}\n  else if (*n1 > *n2) {return  1;}\n  else\n  return 0;\n}\n\n\nint main( void )\n{\n    long long int t,n;\n    scanf(\"%lld\",&t);\n    for(long long int i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&n);\n        long long int array[n],cont=0;\n        for(long long int j=0;j<n;j++)\n        {\n            scanf(\"%lld\",&array[j]);\n        }\n\n        qsort(array, n, sizeof(long long int), (void *)compare );\n\n        for(long long int j=1;j<n;j++)\n        {\n            if(array[j]>array[j-1]) cont+=1;\n        }\n\n        printf(\"%lld\\n\", cont+1);\n\n    }\n\n\n    return 0;\n}"}
{"similarity_score": 0.4244541484716157, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 7, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "e5150266de490d9aa39de3078df7273a", "bug_code_uid": "036ca05e561f50b480fe1c8dbdd964bd", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "e038b9958c5bcd07502e227db0a9d66b", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n                    int n,s=0;\n                    scanf(\"%d\",&n);\n                    int a[n][n];\n                    for(int i=0;i<n;i++)\n                    {\n                                        for(int j=0;i<n;j++)\n                                        {\n                                                            scanf(\"%d\",&a[i][j]);\n                                                            s+=a[i][j];\n                                        }\n                                        printf(\"\\n\");\n                    }\n                    if(s==0)\n                    printf(\"YES\");\n                    else\n                    printf(\"NO\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,s,c=0;\n    scanf(\"%d\",&n);\n    int a[n][3];\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<3;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n            \n        }\n    }\n      for(int i=0;i<3;i++)\n     \n     {\n      s=0;\n        for(int j=0;j<n;j++)\n        {\n            s=s+a[j][i];\n            \n        }\n        if(s==0)\n        c++;\n    }\n    if(c==3)\n    printf(\"YES\");\n    else\n    printf(\"NO\");\n}"}
{"similarity_score": 0.9992217898832685, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f333aacc7551778f81fc45192fade602", "bug_code_uid": "a1df6620c5c5c174f902f055292bc4e7", "src_uid": "6f0d3a7971ffc2571838ecd8bf14238d", "apr_id": "607eacb4444ccb9ee1c6b65facf82262", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n    \r\n    while(tc--)\r\n    {\r\n        long long int n, m;\r\n        scanf(\"%lld %lld\", &n, &m);\r\n        long long diff = n - m;\r\n        if((n-m)<0)\r\n            diff = m-n;\r\n\t\tif(\tn==1 && m>2 || m==1 && n>2 ) \r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse if(\tm==1 && n==1 ) \r\n\t\t{\r\n\t\t\tprintf(\"0\\n\"); \r\n\t\t}\r\n\t\t\t\r\n\t\telse\r\n    \t{\r\n\t\t\tint minmin = n>m?m:n;\r\n\t\t\tlong long ans = 2*minmin-2;\r\n\t\t\t\t\r\n\t\t\tif(diff==1)\r\n\t\t\t\tans+=1;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif((diff&1)!=0)\r\n\t\t\t\t ans+=2*diff-1;\r\n\t\t\t\t else\r\n\t\t\t\t ans+=2*diff;\r\n\t\t\t}\r\n\t\t\tprintf(\"%lld\\n\",ans)\r\n\t\t}    \r\n    }\r\n\t\t\t\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n    \r\n    while(tc--)\r\n    {\r\n        long long int n, m;\r\n        scanf(\"%lld %lld\", &n, &m);\r\n        long long diff = n - m;\r\n        if((n-m)<0)\r\n            diff = m-n;\r\n\t\tif(\tn==1 && m>2 || m==1 && n>2 ) \r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse if(\tm==1 && n==1 ) \r\n\t\t{\r\n\t\t\tprintf(\"0\\n\"); \r\n\t\t}\r\n\t\t\t\r\n\t\telse\r\n    \t{\r\n\t\t\tint minmin = n>m?m:n;\r\n\t\t\tlong long ans = 2*minmin-2;\r\n\t\t\t\t\r\n\t\t\tif(diff==1)\r\n\t\t\t\tans+=1;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif((diff&1)!=0)\r\n\t\t\t\t ans+=2*diff-1;\r\n\t\t\t\t else\r\n\t\t\t\t ans+=2*diff;\r\n\t\t\t}\r\n\t\t\tprintf(\"%lld\\n\",ans);\r\n\t\t}    \r\n    }\r\n\t\t\t\r\n    return 0;\r\n}"}
{"similarity_score": 0.9822419533851277, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5e37739b40ce32ddb5b29243cf9067f9", "bug_code_uid": "b6a2c8e2592a794dd6409739a20ce83b", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "ec33a5fb2704aa92777ce1b446c558b4", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n,m,i,q,c,d;\n    scanf(\"%d%d\",&n,&m);\n    getchar();\n    char str1[n][11],str2[m][11],str[11];\n    for(i=0; i<n; i++)\n        scanf(\"%s\",str1[i]);\n    getchar();\n    for(i=0; i<m; i++)\n        scanf(\"%s\",str2[i]);\n    scanf(\"%d\",&q);\n    unsigned int arr[q];\n    for(i=0; i<q; i++)\n        scanf(\"%u\",&arr[i]);\n    for(i=0; i<q; i++)\n    {\n        if(arr[i]>n)\n        {\n            c=arr[i]%n;\n            if(c==0)\n                c=n-1;\n            else\n                c--;\n        }\n        else\n            c=arr[i]-1;\n        if(arr[i]>m)\n        {\n            d=arr[i]%m;\n            if(d==0)\n                d=m-1;\n            else\n                d--;\n        }\n        else\n            d=arr[i]-1;\n        strcpy(str,str1[c]);\n        strcat(str1[c],str2[d]);\n        printf(\"%s\\n\",str1[c]);\n        strcpy(str1[c],str);\n    }\n\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n,m,i,q,c,d;\n    scanf(\"%d%d\",&n,&m);\n    getchar();\n    char str1[n][21],str2[m][21],str[21];\n    for(i=0; i<n; i++)\n        scanf(\"%s\",str1[i]);\n    getchar();\n    for(i=0; i<m; i++)\n        scanf(\"%s\",str2[i]);\n    scanf(\"%d\",&q);\n    unsigned int arr[q];\n    for(i=0; i<q; i++)\n        scanf(\"%u\",&arr[i]);\n    for(i=0; i<q; i++)\n    {\n        if(arr[i]>n)\n        {\n            c=arr[i]%n;\n            if(c==0)\n                c=n-1;\n            else\n                c--;\n        }\n        else\n            c=arr[i]-1;\n        if(arr[i]>m)\n        {\n            d=arr[i]%m;\n            if(d==0)\n                d=m-1;\n            else\n                d--;\n        }\n        else\n            d=arr[i]-1;\n        strcpy(str,str1[c]);\n        strcat(str1[c],str2[d]);\n        printf(\"%s\\n\",str1[c]);\n        strcpy(str1[c],str);\n    }\n\n\n\n}\n"}
{"similarity_score": 0.9789029535864979, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b35dfc452dfbececcc9a056ceacd55f8", "bug_code_uid": "b3c777f95cf3e3852f115f82541d3e62", "src_uid": "65efbc0a1ad82436100eea7a2378d4c2", "apr_id": "76fa9cbeb8d6d83f2f19504821db5621", "difficulty": 1300, "tags": ["dsu", "meet-in-the-middle", "number theory", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<limits.h>\n#include<strings.h>\n#define true 1\n#define false 0\n#define max(a,b) a>b?a:b\n#define min(a,b) a>b?b:a\n//SUPERMEAT BOY\n//DRAZIL AND HIS FRIENDS\nint boys[110],girls[110];\n\nvoid happy(int B,int G)\n{\n    if(boys[B]==1 || girls[G]==1)\n       {\n        boys[B]=1;\n        girls[G]=1;\n       }\n\n}\n\n\nint main()\n{\n    //declaration\n    void happy(int,int);\n    int n,m,a,b,i,happyb;\n    scanf(\"%d%d%d\",&n,&m,&a);\n\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&happyb);\n        boys[happyb]=1;\n    }\n\n    scanf(\"%d\",&b);\n      for(i=0;i<b;i++)\n    {\n        scanf(\"%d\",&happyb);\n        girls[happyb]=1;\n    }\n\n    int B=0,G=0;\n    //logic\n    //brute force\n    happy(B,G);\n\n   for(i=1;i<10000;i++)\n   {\n       B=i%n;\n       G=i%m;\n\n       if(B==0&&G==0)\n       break;\n\n       happy(B,G);\n   }\n\n   for(i=0;i<n;i++)\n    if(boys[i]==0)\n      {printf(\"No\");\n       exit(0);\n      }\n\n      printf(\"Yes\");\n    return 0;\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<limits.h>\n#include<strings.h>\n#define true 1\n#define false 0\n#define max(a,b) a>b?a:b\n#define min(a,b) a>b?b:a\n//SUPERMEAT BOY\n//DRAZIL AND HIS FRIENDS\nint boys[110],girls[110];\n\nvoid happy(int B,int G)\n{\n    if(boys[B]==1 || girls[G]==1)\n       {\n        boys[B]=1;\n        girls[G]=1;\n       }\n\n}\n\n\nint main()\n{\n    //declaration\n    void happy(int,int);\n    int n,m,a,b,i,happyb;\n    scanf(\"%d%d%d\",&n,&m,&a);\n\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&happyb);\n        boys[happyb]=1;\n    }\n\n    scanf(\"%d\",&b);\n      for(i=0;i<b;i++)\n    {\n        scanf(\"%d\",&happyb);\n        girls[happyb]=1;\n    }\n\n    int B=0,G=0;\n    //logic\n    //brute force\n    happy(B,G);\n\n   for(i=1;i<10010;i++)\n   {\n       B=i%n;\n       G=i%m;\n\n       happy(B,G);\n   }\n\n   for(i=0;i<n;i++)\n    if(boys[i]==0)\n      {printf(\"No\");\n       exit(0);\n      }\n\n      printf(\"Yes\");\n    return 0;\n\n\n\n\n}"}
{"similarity_score": 0.9890909090909091, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ab24f26758b099d484820e0c0cac3f13", "bug_code_uid": "c6e67ee307cdf31d0a9c4ce89e554f91", "src_uid": "941adee47c2a28588ebe7dfe16e0c91a", "apr_id": "dd48e6477b8cc1a6d447e95220d6d15d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n, m, sum, tmp;\n        scanf(\"%d%d\", &n, &m);\n        sum = 0;\n        for(int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &tmp);\n            sum += tmp;\n        }\n        if(m > 0)\n        {\n            if(sum % m == 0)\n                puts(\"YES\");\n            else\n                puts(\"NO\");\n        }\n        else\n        {\n            if(sum == 0)\n                puts(\"YES\");\n            else\n                puts(\"NO\");\n        }\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n, m, sum, tmp;\n        scanf(\"%d%d\", &n, &m);\n        sum = 0;\n        for(int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &tmp);\n            sum += tmp;\n        }\n        if(m > 0)\n        {\n            if(sum == m)\n                puts(\"YES\");\n            else\n                puts(\"NO\");\n        }\n        else\n        {\n            if(sum == 0)\n                puts(\"YES\");\n            else\n                puts(\"NO\");\n        }\n    }\n}"}
{"similarity_score": 0.3813953488372093, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a097a8bfb0af9fcb1e36fc9724388eb8", "bug_code_uid": "7327c49fad9b3e79a3461008758460c1", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "ceb7258e77e09b490fb05baf0dcec672", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n\n{\n    long long int s=0,i,j,n,arr[100000],k=0;\n\n\n    scanf(\"%lld\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n\n        s=s+arr[i];\n    }\n\n     s=ceil( (double)s/2);\n\n    for(i=0;i<n;i++)\n    {\n        k=k+arr[i];\n\n        if(k>=s)\n        {\n            printf(\"%lld\\n\",i+1);\n            break;\n        }\n    }\n\n\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,sum=0,i;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tsum+=arr[i];\n\t}\n\tint h=ceil( (double)sum/2);\n\tint temp=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\ttemp+=arr[i];\n\t\tif(temp>=h)\n\t\t{\n\t\t\tprintf(\"%d\\n\",i+1);\n\t\t\tbreak;\n\t\t}\n\t}\n\n}\n"}
{"similarity_score": 0.927360774818402, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "51a98099c66ec45209175458c2e9e264", "bug_code_uid": "445507d41eda0b43adf9b7d486b49ca8", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "ed170792a451d4636ca95f46e8568d9f", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        if(i==0)\n        char cc=getchar();\n        char str[100];\n        gets(str);\n        int len=0;\n        while(str[len]!='\\0')\n        {\n            len++;\n        }\n        if(len>10)\n        printf(\"%c%d%c\\n\",str[0],len-2,str[len-1]);\n        else\n        puts(str);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        char cc;\n        if(i==0)\n        {\n        cc=getchar();\n        }\n        char str[100];\n        gets(str);\n        int len=0;\n        while(str[len]!='\\0')\n        {\n            len++;\n        }\n        if(len>10)\n        printf(\"%c%d%c\\n\",str[0],len-2,str[len-1]);\n        else\n        puts(str);\n    }\n}\n"}
{"similarity_score": 0.731951393852752, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "8d40d4aa9695dd1a9da0b2e2ac7ca0da", "bug_code_uid": "24f53422b8a2a637c63495c603c751cc", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "ead88033c5c70118c0f9061ffd23d1e3", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n   int k;\r\n   scanf(\"%d\",&k);\r\n   for(int i=0;i<k;i++)\r\n   {\r\n       unsigned long long int n,x,t,dis,temp,sum;\r\n       \r\n       scanf(\"%lld\",&n);\r\n       scanf(\"%lld\",&x);\r\n       scanf(\"%lld\",&t);\r\n       dis=t/x;\r\n       temp=n-dis;\r\n       sum=0;\r\n       if(t>=x)\r\n       {\r\n       if(dis<n)\r\n       {\r\n           for(int j=0;j<temp;j++)\r\n           {\r\n               sum+=dis;\r\n           }\r\n           for(int j=0;j<dis;j++)\r\n           {\r\n               sum+=(--dis);\r\n           }\r\n       }\r\n       else if(dis>=n)\r\n       {\r\n           sum=(n-1)*(n)/2;\r\n       }\r\n \r\n       }\r\n       else\r\n       {\r\n           sum=0;\r\n       }\r\n    printf(\"%lld\\n\", sum);\r\n   }\r\n   return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n   int k;\r\n   scanf(\"%d\",&k);\r\n   for(int i=0;i<k;i++)\r\n   {\r\n       unsigned long long int n,x,t,dis,temp,sum;\r\n       \r\n       scanf(\"%lld\",&n);\r\n       scanf(\"%lld\",&x);\r\n       scanf(\"%lld\",&t);\r\n       dis=t/x;\r\n       temp=n-dis;\r\n       sum=0;\r\n       if(t>=x)\r\n       {\r\n       if(dis<n)\r\n       {\r\n         \r\n               sum=temp*dis;\r\n               sum+=((dis-1)*(dis)/2);\r\n           \r\n       }\r\n       else if(dis>=n)\r\n       {\r\n           sum=(n-1)*(n)/2;\r\n       }\r\n \r\n       }\r\n       else\r\n       {\r\n           sum=0;\r\n       }\r\n    printf(\"%lld\\n\", sum);\r\n   }\r\n   return 0;\r\n}"}
{"similarity_score": 0.9449838187702265, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "53243d911f6545846ddf7141540786d0", "bug_code_uid": "13c4c66e4736d59bdb59bbab2222b9b3", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "56c1fa40e6a7ea7a20d9cefe2ce69d3f", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n{\n    int n,i,c=2;\n\n    scanf(\"%d\",&n);\n\n    int x[n],y[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&x[i],&y[i]);\n\n    for(i=1;i<n-1;i++)\n    {\n        if(y[i]<x[i]-x[i-1]) c++;\n\n        else if(y[i]<x[i+1]-x[i]) {c++; x[i]+=y[i];}\n    }\n\n    printf(\"%d\",c);\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n\n{\n    int n,i,c;\n\n    scanf(\"%d\",&n);\n\n    c=n;\n\n    int x[n],y[n];\n\n    for(i=0;i<n;i++)\n      scanf(\"%d %d\",&x[i],&y[i]);\n\n      if(n>2) c=2;\n\n    for(i=1;i<n-1;i++)\n    {\n        if(y[i]<x[i]-x[i-1]) c++;\n\n        else if(y[i]<x[i+1]-x[i]) {c++; x[i]+=y[i];}\n    }\n\n    printf(\"%d\",c);\n}\n"}
{"similarity_score": 0.9981851179673321, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9efa25f804d686cb7f8a4e1c4f00a672", "bug_code_uid": "d39ca8396a800ed71ee35a5696707720", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "21771d503d79d19ab8a336f48ae159f4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,k=0,s;\n    scanf(\"%d%d\",&n,&m);\n    int a[n][m];\n    for (i=0;i<n;i++)\n        for (j=0;j<n;j++)\n\n        scanf(\"%1d\",&a[i][j]);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m-1;j++)\n        {\n            if(a[i][j]!=a[i][j+1])\n                k=1;\n        }\n    }\n    for(j=0;j<m;j++)\n    {\n        for(i=0;i<n-1;i++)\n        {\n            if(a[i][j]==a[i+1][j])\n            {\n                k=1;\n            }\n        }\n    }\n    if(k==0)\n        printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j,k=0,s;\n    scanf(\"%d%d\",&n,&m);\n    int a[n][m];\n    for (i=0;i<n;i++)\n        for (j=0;j<m;j++)\n\n        scanf(\"%1d\",&a[i][j]);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m-1;j++)\n        {\n            if(a[i][j]!=a[i][j+1])\n                k=1;\n        }\n    }\n    for(j=0;j<m;j++)\n    {\n        for(i=0;i<n-1;i++)\n        {\n            if(a[i][j]==a[i+1][j])\n            {\n                k=1;\n            }\n        }\n    }\n    if(k==0)\n        printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.15420200462606015, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "9e00596b9e85e3e9c521d4d49f99f541", "bug_code_uid": "71e6cc4bdcfe776f577c61f5d483b7f3", "src_uid": "eaa768dc1024df6449e89773234cc0c3", "apr_id": "c8ad1ab7d03aa19ae01563e562175273", "difficulty": 1300, "tags": ["combinatorics", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main(void){\nlong n;\nlong i,j,t,z=0,z1=0,z2=0;\nlong *a,*b,*c,*d;\n\tscanf(\"%ld\",&n);\n\ta=(long *)malloc(n*sizeof(long));\n\tb=(long *)malloc(n*sizeof(long));\n\tc=(long *)malloc(n*sizeof(long));\n\td=(long *)malloc(n*sizeof(long));\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%ld\",&a[i]);\n\t\tb[i]=a[i];\n\t\tc[i]=i;\n\t\td[i]=0;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=i;j<n;j++){\n\t\t\tif(b[i]<b[j]){\n\t\t\t\tt=b[i];\n\t\t\t\tb[i]=b[j];\n\t\t\t\tb[j]=t;\n\t\t\t\t\n\t\t\t\tt=c[i];\n\t\t\t\tc[i]=c[j];\n\t\t\t\tc[j]=t;\n\t\t\t}\n\t\t}\n\t}\n\t\n\ti=c[0];\n\tj=c[i+1];\n\twhile(z1<n&&z2!=n-z1){\n\t\tif(d[i]==-1){\n\t\t\ti++;\n\t\t}\n\t\tif(d[j]==-1){\n\t\t\tj++;\n\t\t}\n\t\tif(i==n){\n\t\t\ti=0;\n\t\t\tcontinue;\n\t\t}\n\t\tif(j==n){\n\t\t\tj=0;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(a[c[i]]==a[c[j]]){\n\t\t\tj++;\n\t\t\tz2++;\n\t\t\tcontinue;\n\t\t}\n\t\tb[c[j]]=a[c[i]];\n\t\td[j]=-1;\n\t\ti++;\n\t\tj++;\n\t\tz1++;\n\t\tz2--;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(b[i]>a[i])\n\t\t\tz++;\n\t}\n\tprintf(\"%ld\",z);\n\treturn 0;\n}\n\t\t\n\t\t\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint cmp(const void *a,const void *b){\n\treturn (*(int*)a-*(int*)b);\n}\n\nint main(void){\nlong n;\nlong i,j,t;\nlong a[1000000];\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%ld\",&a[i]);\n\t}\n\tqsort(a,n,sizeof(long),cmp);\n\tj=0;\n\tfor(i=0;i<n;i++){\n\t\tif(a[i]>a[j]){\n\t\t\tj++;\n\t\t}\n\t}\n\tprintf(\"%ld\",j);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9985358711566618, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "073b912be7a27debe364a5d85bffce32", "bug_code_uid": "ed6937154217fde9cd0e01b007ad8bcc", "src_uid": "c34db7897f051b0de2f49f2696c6ee2f", "apr_id": "db088315691b0a4a4292c23083f6dfe4", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n   long long t;\r\n   scanf(\"%lld\",&t);\r\n   while(t--){\r\n   \tlong long l,r,a,b,max,d;\r\n   \tmax=0;\r\n   \tscanf(\"%lld%lld\",&l,&r);\r\n   \tif(r/l<2){\r\n\t   \tmax=r-l;\r\n\t   }else if(r/l>2){\r\n\t   \tif(r%2==0){\r\n\t   \t\tmax=r/2-1;\r\n\t\t   }else {\r\n\t\t   \tmax=r/2; \r\n\t\t   }\r\n}\r\n\t   printf(\"%lld\\n\",max);\r\n   }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n   long long t;\r\n   scanf(\"%lld\",&t);\r\n   while(t--){\r\n   \tlong long l,r,a,b,max,d;\r\n   \tmax=0;\r\n   \tscanf(\"%lld%lld\",&l,&r);\r\n   \tif(r/l<2){\r\n\t   \tmax=r-l;\r\n\t   }else if(r/l>=2){\r\n\t   \tif(r%2==0){\r\n\t   \t\tmax=r/2-1;\r\n\t\t   }else {\r\n\t\t   \tmax=r/2; \r\n\t\t   }\r\n}\r\n\t   printf(\"%lld\\n\",max);\r\n   }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9373368146214099, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c1897a2fb27c05f5e6d29bd4a19d5110", "bug_code_uid": "9a5655fcdffbb4824bdaf01c04e60580", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "bae1e29001135b275b402d36047f10cd", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a, b, c, x;\r\n    scanf(\"%d\",&x);\r\n    \r\n    while(x != 0)\r\n    {\r\n        scanf(\"%d %d\", &a, &b);\r\n        \r\n        if (a > 0)\r\n        {\r\n            c = (2*b)+a;\r\n            printf(\"%d\\n\",c);\r\n        }\r\n        else if(a == 0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        \r\n        x--;\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,x;\r\n    scanf(\"%d\",&x);\r\n    while(x != 0)\r\n    {\r\n        scanf(\"%d %d\", &a, &b);\r\n        \r\n        if(a > 0)\r\n        {\r\n            c = (2*b)+a;\r\n            printf(\"%d\\n\",c+1);\r\n        }\r\n        else if (a == 0)\r\n        {\r\n            c = 1;\r\n            printf(\"%d\\n\",c);\r\n        }\r\n        \r\n        x--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9604221635883905, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9d14ec85250010f0e70b6e677b383373", "bug_code_uid": "9956d1dff1a913a2a296797cebb0cf49", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "982fd7a21488aca855f2c9e798ac35b9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n;\n   int t=0,c=0;\n   scanf(\"%d\",&n);\n   int a[2*n];\n   for(int i=0;i<2*n;i++)\n   {\n       scanf(\"%d\",&a[i]);}\n       for( int j=0;j<2*n;j=j+2)\n      {if(a[j]>a[j+1])\n       t=t+1;\n       else c=c+1;}\n\n  if(t>c)\n    printf(\"Mishka\");\n  else if(t<c)printf(\"Chris\");\n  else printf(\"Friendship is magic!^^\");\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n;\n   int t=0,c=0;\n   scanf(\"%d\",&n);\n   int a[2*n];\n   for(int i=0;i<(2*n);i++)\n   {\n       scanf(\"%d\",&a[i]);}\n       for( int j=0;j<(2*n);j=j+2)\n      {if(a[j]>a[j+1])\n       t=t+1;\n       if(a[j]<a[j+1])\n       c=c+1;}\n\n  if(t>c)\n    printf(\"Mishka\");\n  else if(t<c)printf(\"Chris\");\n  else printf(\"Friendship is magic!^^\");\n}\n"}
{"similarity_score": 0.9836065573770492, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8fa1de0d75390e1942e005cd24066278", "bug_code_uid": "f38903541ca6913606805b035d5e77b5", "src_uid": "5993b5bf231fabd3c2af90124c41f118", "apr_id": "622bd14e827f416f4db547ed3a005e42", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "long long s;a[200001];i;main(h){while(~scanf(\"%d\",a+i++));for(s=h=a[i=*a];i&&h;s+=h)a[--i]<h?h=a[i]:--h;printf(\"%lld\",s);}", "fixed": "long long s;a[200001];i;main(h){while(~scanf(\"%d\",a+i++));for(s=h=a[i=*a];--i&&h;s+=h)a[i]<h?h=a[i]:--h;printf(\"%lld\",s);}"}
{"similarity_score": 0.9978632478632479, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "489d78819eea5f78eaba6a1d21866043", "bug_code_uid": "de862357bb9e84bfc5590f09cc770d9b", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "e82dd530e4529483ed23ef2fca5c3654", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n  int n, i;\n  long unsigned int *t;\n  scanf(\"%d\", &n);\n  t = (long unsigned int*) malloc(n * sizeof(long unsigned int));\n  for(i = 0; i< n; i++) {\n    scanf(\"%lu\", &t[i]);\n  }\n  for(i=0;i<n;i++) {\n      if (t[i]&1) {\n        if ((t[i] + 1) % 4 == 0) {\n          printf(\"%lu\", t[i]+1);\n        } else {\n          printf(\"%lu\\n\", 2*t[i]+1);\n        }\n      } else {\n        printf(\"%lu\\n\", 4*t[i]+1);\n      }\n    }\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n  int n, i;\n  long unsigned int *t;\n  scanf(\"%d\", &n);\n  t = (long unsigned int*) malloc(n * sizeof(long unsigned int));\n  for(i = 0; i< n; i++) {\n    scanf(\"%lu\", &t[i]);\n  }\n  for(i=0;i<n;i++) {\n      if (t[i]&1) {\n        if ((t[i] + 1) % 4 == 0) {\n          printf(\"%lu\\n\", t[i]+1);\n        } else {\n          printf(\"%lu\\n\", 2*t[i]+1);\n        }\n      } else {\n        printf(\"%lu\\n\", 4*t[i]+1);\n      }\n    }\n}"}
{"similarity_score": 0.9984447900466563, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "536dfc881a704bd70fd10fa82bc5163d", "bug_code_uid": "63e68dc49297931b44153c260510061e", "src_uid": "0197047cab6d83a189a5c1eabf5b1dd3", "apr_id": "ab9554cb04901438d6b3546cf14df5b2", "difficulty": 1400, "tags": ["dp", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\n#define N 100000\nint mmax(int a,int b){\n\tif(a>b)return a;\n\treturn b;\n}\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,i,j,max=INT_MIN;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n+1],dp[n+1],k,div1,div2;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tdp[i]=1;\n\t\t}\n\t\tfor(i=2;i<=n;i++){\n\t\t\tint mm=0;\n\t\t\tfor(j=1;j<=ceil(sqrt(i));j++){\n\t\t\t\tif(i%j==0){\n\t\t\t\t\tdiv1=i;\n\t\t\t\t\tdiv2=i/j;\n\t\t\t\t\tif(a[div1]<a[i])\n\t\t\t\t\t\tmm=mmax(mm,dp[div1]);\n\t\t\t\t\tif(a[div2]<a[i])\n\t\t\t\t\t\tmm=mmax(dp[div2],mm);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp[i]+=mm;\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t\tif(dp[i]>max)\n\t\t\t\tmax=dp[i];\n\t\tprintf(\"%d\\n\",max);\n\t}\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\n#define N 100000\nint mmax(int a,int b){\n\tif(a>b)return a;\n\treturn b;\n}\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,i,j,max=INT_MIN;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n+1],dp[n+1],k,div1,div2;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tdp[i]=1;\n\t\t}\n\t\tfor(i=2;i<=n;i++){\n\t\t\tint mm=0;\n\t\t\tfor(j=1;j<=ceil(sqrt(i));j++){\n\t\t\t\tif(i%j==0){\n\t\t\t\t\tdiv1=j;\n\t\t\t\t\tdiv2=i/j;\n\t\t\t\t\tif(a[div1]<a[i])\n\t\t\t\t\t\tmm=mmax(mm,dp[div1]);\n\t\t\t\t\tif(a[div2]<a[i])\n\t\t\t\t\t\tmm=mmax(dp[div2],mm);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp[i]+=mm;\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t\tif(dp[i]>max)\n\t\t\t\tmax=dp[i];\n\t\tprintf(\"%d\\n\",max);\n\t}\n}"}
{"similarity_score": 0.9984917043740573, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e11b09d89a292e32d05389acef0cd21c", "bug_code_uid": "dd2c2cc85d07a5bc21488eb4381dbf44", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "a162a36b9ed4c392d0a084ed029f1251", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n = 0;\r\n        scanf(\"%d\", &n);\r\n        int a[n];\r\n        int min;\r\n        int min_i;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n            if (i == 0)\r\n                min = a[0];\r\n            if (i > 0 && a[i] < min)\r\n            {\r\n                min = a[i];\r\n                min_i = i;\r\n            }\r\n        }\r\n        int count=0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (a[i] == min)\r\n                count++;\r\n        }\r\n        printf(\"%d\",n-count);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n = 0;\r\n        scanf(\"%d\", &n);\r\n        int a[n];\r\n        int min;\r\n        int min_i;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n            if (i == 0)\r\n                min = a[0];\r\n            if (i > 0 && a[i] < min)\r\n            {\r\n                min = a[i];\r\n                min_i = i;\r\n            }\r\n        }\r\n        int count=0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (a[i] == min)\r\n                count++;\r\n        }\r\n        printf(\"%d\\n\",n-count);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9786802030456853, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "4f083fb71a8c18cc22eb0cef5e0ae4c8", "bug_code_uid": "dece171fe48945594fbfaa7cb5bb884c", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "ff503c4493e71ed37beeab680c6ccbaa", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,i,sum=0,min,j=0;\n    scanf(\"%ld\",&n);\n    long  int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n        sum=sum+a[i];\n        if(a[i]%2==1){\n            a[j]=a[i];\n            j++;\n        }\n    }\n    if(sum%2==0)\n        printf(\"%ld\\n\",sum);\n    else{\n        min=a[0];\n        for(i=0;i<j;i++){\n                if(a[i]<min)\n                    min=a[i];\n\n        }\n        printf(\"%ld\\n\",sum-min);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int  n,i,sum=0,min,j=0;\n    scanf(\"%lld\",&n);\n    long  long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        sum=sum+a[i];\n        if(a[i]%2==1){\n            a[j]=a[i];\n            j++;\n        }\n    }\n    if(sum%2==0)\n        printf(\"%lld\\n\",sum);\n    else{\n        min=a[0];\n        for(i=0;i<j;i++){\n                if(a[i]<min)\n                    min=a[i];\n\n        }\n        printf(\"%lld\\n\",sum-min);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9948119325551232, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "805ed8a648c80c6c0168b41dabfc2860", "bug_code_uid": "2d12cb84c4f083b26ecbe22580d9d134", "src_uid": "6b398790adbd26dd9af64e9086e38f7f", "apr_id": "ac7fb05e578e8d742dbafcd1ae5b7a9b", "difficulty": 1600, "tags": ["constructive algorithms", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n\nint an[11000], bn[11000];\n\nint main()\n{\n    int n, k, a, b, c, d, i, j, p=2, x;\n    scanf(\"%d %d\",&n,&x);\n    scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n    if(x<n+1)\n        printf(\"-1\\n\");\n    else\n    {\n        an[1]=a;\n        an[n]=b;\n        an[2]=c;\n        an[n-1]=d;\n        for(i=1;i<=n;i++)\n        {\n            if(i != a && i!= b && i!= c && i!= d)\n            {\n                p++;\n                an[p]=i;\n            }\n        }\n        for(i=1;i<=n;i++)\n        {\n            if(i!=1)\n                printf(\" \");\n            printf(\"%d\",an[i]);\n        }\n        printf(\"\\n\");\n        printf(\"%d %d\",c,a);\n        for(i=3;i<n-1;i++)\n            printf(\" %d\",an[i]);\n        printf(\" %d %d\\n\",b,d);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\n\nint an[11000], bn[11000];\n\nint main()\n{\n    int n, k, a, b, c, d, i, j, p=2, x;\n    scanf(\"%d %d\",&n,&x);\n    scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n    if(x<n+1 || n<=4)\n        printf(\"-1\\n\");\n    else\n    {\n        an[1]=a;\n        an[n]=b;\n        an[2]=c;\n        an[n-1]=d;\n        for(i=1;i<=n;i++)\n        {\n            if(i != a && i!= b && i!= c && i!= d)\n            {\n                p++;\n                an[p]=i;\n            }\n        }\n        for(i=1;i<=n;i++)\n        {\n            if(i!=1)\n                printf(\" \");\n            printf(\"%d\",an[i]);\n        }\n        printf(\"\\n\");\n        printf(\"%d %d\",c,a);\n        for(i=3;i<n-1;i++)\n            printf(\" %d\",an[i]);\n        printf(\" %d %d\\n\",b,d);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.36504580690627203, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "f533d25e25b0e7ead5505c1a8e493e99", "bug_code_uid": "50e084cd79836d3ae8717125c46d952f", "src_uid": "96e2ba997eff50ffb805b6be62c56222", "apr_id": "274a0da8dfc0c94bf12a48b9d39e25a2", "difficulty": 1400, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nchar s[1000000],t[1000000];\nint yay, ans,ls,lt,i,j;\n\nint main()\n{\n    gets(s);\n    gets(t);\n    yay=0;\n    ls=strlen(s);\n    lt=strlen(t);\n    for(i=0;i<ls;i++){\n        for(j=0;j<lt;j++){\n            if (s[i]==t[j]){\n                yay++;\n                t[j]='0';\n                break;\n\n            }\n        }\n    }\n    printf(\"%d \",yay);\n    ans=ls-yay;\n    printf(\"%d\",ans);\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nchar s[10000000],t[10000000];\nint letters[130]={0},letters2[130]={0};\nint yay,whoops,ls,lt,i,j,b;\n\nint main()\n{\n    gets(s);\n    gets(t);\n    yay=0;\n    whoops=0;\n    ls=strlen(s);\n    for(i=0;i<ls;i++){\n        b=(int)s[i];\n        letters[b]++;\n    }\n\n    lt=strlen(t);\n    for(i=0;i<lt;i++){\n        b=(int)t[i];\n        letters2[b]++;\n    }\n    for(b=0;b<130;b++){\n        if(letters[b]>=1 && letters2[b]>=1){\n            letters[b]--;\n            letters2[b]--;\n            yay++;\n            b=b-1;\n        }\n    }\n    for(b=65;b<91;b++){\n        if(letters[b]>=1 && letters2[b+32]>=1){\n            letters[b]--;\n            letters2[b+32]--;\n            whoops++;\n            b=b-1;\n        }\n    }\n    for(b=97;b<123;b++){\n        if(letters[b]>=1 && letters2[b-32]>=1){\n            letters[b]--;\n            letters2[b-32]--;\n            whoops++;\n            b=b-1;\n        }\n    }\n\n    printf(\"%d %d\",yay,whoops);\n    return 0;\n\n}\n"}
{"similarity_score": 0.33383010432190763, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fdc9584331f9a0caac59c2d375038331", "bug_code_uid": "efbc5a6fa914488a0445d02b45712f41", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "d7777f69d14b3497e4bca2ab3b15cad9", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tlong long int n,i,j,k,max=0,min=0;\n\tscanf(\"%I64d\",&n);\n\tif(n==2 || n==1)\n\t{\n\t\tfor(i=0;i<n;i++)scanf(\"%I64d\",&k);\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n\telse\n\t {\n\t \tfor(i=0;i<n;i++)\n\t \t{\n\t \t\tscanf(\"%I64d\",&k);\n\t \t}\n\t \tprintf(\"%I64d\\n\",n-2);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long int n,i,j=0,k,arra[100005],min,max;\n\tscanf(\"%I64d\",&n);\n\t for(i=0;i<n;i++)\n\t \t{\n\t \t\tscanf(\"%I64d\",&arra[i]);\n\t \t\tif(i==0)\n\t \t\t{\n\t \t\t\tmax = arra[0];\n\t \t\t\tmin = arra[0];\n\t \t\t}\n\t \t\tif(arra[i]>max)max=arra[i];\n\t \t\tif(arra[i]<min)min=arra[i];\t \t\t\n\t \t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(arra[i]<max && arra[i]>min)\n\t\t\tj++;\n\t}\n\tprintf(\"%I64d\\n\",j);\n\treturn 0;\n}"}
{"similarity_score": 0.5492424242424242, "equal_cnt": 31, "replace_cnt": 15, "delete_cnt": 3, "insert_cnt": 12, "fix_ops_cnt": 30, "lang": "GNU C11", "fix_code_uid": "c59501dbbe6b6b8b4bc2b6e99d96c01f", "bug_code_uid": "f32eb1c4d4f65904cb75c5f8514acb29", "src_uid": "255d6fca1379ae40b03e761802f36664", "apr_id": "752b9d0137fa9f7e035d10bc9bae54a4", "difficulty": 1100, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint comp(const void *p1,const void *p2)\r\n{\r\n    return *(int *)p1-*(int *)p2;\r\n}\r\nint main()\r\n{\r\n    int t,n,k,i,j,ans;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        int a[n],b[n];\r\n        ans=1;\r\n        for(i=0;i<n;i++) {scanf(\"%d\",&a[i]);b[i]=a[i];}\r\n        qsort(b,n,sizeof(int),comp);\r\n        for(i=1;i<n;i++)\r\n        {\r\n            for(j=0;j<n;j++)\r\n            {\r\n                if(b[j]==a[i])\r\n                {\r\n                    if(j-1>=0&&b[j-1]==a[i-1]) break;\r\n                    else ans++;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",ans);\r\n        if(ans<=k) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint comp(const void *p1, const void *p2)\r\n{\r\n    int *pa = *(int **)p1, *pb = *(int **)p2;\r\n    return pa[0] - pb[0];\r\n}\r\nint main()\r\n{\r\n    int t, n, k, i,j, ans;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d%d\", &n, &k);\r\n        int **a=(int **)malloc(sizeof(int *)*n);\r\n        for(i=0;i<n;i++)\r\n            a[i]=malloc(sizeof(int)*2);\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i][0]);\r\n            a[i][1] = i;\r\n        }\r\n        qsort(a, n, sizeof(int *), comp);\r\n        ans = 1;\r\n        for (i = 1; i < n; i++)\r\n        {\r\n            if (a[i][1] != a[i - 1][1] + 1)\r\n                ans++;\r\n        }\r\n        if (ans <= k)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9623376623376624, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "437b4f1ef6194a72a47e499cf37140b4", "bug_code_uid": "8f7741875e2f0a20b3c5f8e6851a388e", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "f86750d567735e265d9813f7baca5952", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong int n,bone=1;\n\tint m, k;\n\tint* cup;\n\tscanf(\"%ld %d %d\", &n, &m, &k);\n\tcup = (int*)malloc(n * sizeof(int));\n\tint a;\n\ta= n;\n\twhile (a)\n\t{\n\t\tcup[a-1] = 0;\n\t\ta--;\n\t}\n\tcup[0] = 1;\n\twhile (m > 0)\n\t{\n\t\tint i;\n\t\tscanf(\"%d\", &i);\n\t\tcup[i-1] = -1;\n\t\tm--;\n\t}\n\t\n\twhile (k > 0)\n\t{\n\t\tint i, j,temp;\n\t\tscanf(\"%d %d\", &i, &j);\n\t\tif (bone == i || bone == j)\n\t\t{\n\t\t\tif (cup[j - 1] == -1) //\u662f\u5426\u4ea4\u6362\u5230\u7a7a\u6d1e\n\t\t\t{\n\t\t\t\tbone = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (cup[i - 1] == -1)\n\t\t\t{\n\t\t\t\tbone = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse  //\u6b63\u5e38\u4ea4\u6362\n\t\t\t{\n\t\t\t\ttemp = cup[i - 1];\n\t\t\t\tcup[i - 1] = cup[j - 1];\n\t\t\t\tcup[j - 1] = temp;\n\t\t\t\tif (cup[i - 1] == 1)bone = i;\n\t\t\t\telse bone = j;\n\t\t\t}\n\t\t}\n\t\tk--;\n\t}\n\tprintf(\"%ld\", bone);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong int n,bone=1;\n\tint m, k;\n\tint* cup;\n\tscanf(\"%ld %d %d\", &n, &m, &k);\n\tcup = (int*)malloc(n * sizeof(int));\n\tint a;\n\ta= n;\n\twhile (a)\n\t{\n\t\tcup[a-1] = 0;\n\t\ta--;\n\t}\n\tcup[0] = 1;\n\twhile (m > 0)\n\t{\n\t\tint i;\n\t\tscanf(\"%d\", &i);\n\t\tcup[i-1] = -1;\n\t\tm--;\n\t}\n\t\n\twhile (k > 0)\n\t{\n\t\tint i, j,temp;\n\t\tscanf(\"%d %d\", &i, &j);\n\t\tif (cup[bone - 1] == -1)break;\n\t\tif (bone == i || bone == j)\n\t\t{\n\t\t\tif (bone == i&&cup[j - 1] == -1) //\u662f\u5426\u4ea4\u6362\u5230\u7a7a\u6d1e\n\t\t\t{\n\t\t\t\tbone = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (cup[i - 1] == -1 && bone == j)\n\t\t\t{\n\t\t\t\tbone = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse  //\u6b63\u5e38\u4ea4\u6362\n\t\t\t{\n\t\t\t\ttemp = cup[i - 1];\n\t\t\t\tcup[i - 1] = cup[j - 1];\n\t\t\t\tcup[j - 1] = temp;\n\t\t\t\tif (cup[i - 1] == 1)bone = i;\n\t\t\t\telse bone = j;\n\t\t\t}\n\t\t}\n\t\tk--;\n\t}\n\tprintf(\"%ld\", bone);\n\treturn 0;\n}"}
{"similarity_score": 0.978865406006674, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "34d1c3dc9ef1fff3f4c9084a9c19370b", "bug_code_uid": "264423faa8823e5365bc55cabb78d638", "src_uid": "b4b69320c6040d2d264ac32e9ba5196f", "apr_id": "96b1fe2f7e9c7e769c0f3d3e84e71778", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t, a;\n    scanf(\"%d\",&t);\n    a=t-1;\n    long arr[t+1];\n    while(t--)\n    {\n    long n,m;\n    scanf(\"%ld\",&n);\n    m=n/2;\n    long sum=0,summ=0,x=0,y=0;\n    for(int i=1;i<=m;i++)\n    {\n    if(i<m)\n    {\n    sum+=i;\n    summ+=sum*2;\n    }\n    else\n    y=(sum+i);\n    x+=pow(i,2);\n    }\n    arr[t]=(summ+x+y)*4;\n    }\n    for(int i=a;i>=0;i--)\n    printf(\"%ld\\n\",arr[i]);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t, a;\n    scanf(\"%d\",&t);\n    a=t-1;\n    long long arr[t];\n    while(t--)\n    {\n    long long n,m;\n    scanf(\"%lld\",&n);\n    m=n/2;\n    long long sum=0,summ=0,x=0,y=0;\n    for(int i=1;i<=m;i++)\n    {\n    if(i<m)\n    {\n    sum+=i;\n    summ+=sum*2;\n    }\n    else\n    y=(sum+i);\n    x+=pow(i,2);\n    }\n    arr[t]=(summ+x+y)*4;\n    }\n    for(int i=a;i>=0;i--)\n    printf(\"%lld\\n\",arr[i]);\n    return 0;\n}"}
{"similarity_score": 0.5906735751295337, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "5317bb02ee20f594e718d1310e460b60", "bug_code_uid": "cb919901b61bab2955cad267c3029d84", "src_uid": "d45f775613e701bbdaa4e457e6e189e2", "apr_id": "bd0ad4cf416206d6ab95103ae87c8690", "difficulty": 1000, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nchar str[300005];\nint cexs[27][300005];\n\nint main(){\n    int a;\n    scanf(\"%d\", &a);\n    scanf(\"%s\", &str);\n    for(int i = 0; i < a; i++){\n        cexs[str[i]-'a'][0]++;\n        cexs[str[i]-'a'][cexs[str[i]-'a'][0]] = i+1;\n    }\n    for(int i = 0; i < 25; i++){\n        for(int e = i+1; e < 26; e++){\n            for(int z = 1; z <= cexs[i][0]; z++){\n                for(int x = 1; x <= cexs[e][0]; x++){\n                    if(cexs[i][z] > cexs[e][x]){\n                        printf(\"YES\\n\");\n                        printf(\"%d %d\", cexs[e][x], cexs[i][z]);\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    printf(\"NO\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nchar str[300005];\nint cexs[27][2];\nint found[27];\n\nint main(){\n    int a;\n    scanf(\"%d\", &a);\n    scanf(\"%s\", &str);\n    for(int i = 0; i < 27; i++){\n        cexs[i][0] = 0;\n        cexs[i][1] = 0;\n    }\n    for(int i = 0; i < a; i++){\n        int index = str[i]-'a';\n        if(!found[index]){\n            cexs[index][0] = i+1;\n            cexs[index][1] = i+1;\n            found[index] = 1;\n        } else {\n            cexs[index][1] = i+1;\n        }\n    }\n    for(int i = 0; i < 25; i++){\n        for(int e = i+1; e < 26; e++){\n            if(cexs[i][1] > 0 && cexs[e][0] > 0){\n                if(cexs[i][1] > cexs[e][0]){\n                    printf(\"YES\\n%d %d\", cexs[e][0], cexs[i][1]);\n                    return 0;\n                }\n            }\n        }\n    }\n    printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.9956140350877193, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "78fe49582479c9dec9f6c39eb52cff6d", "bug_code_uid": "78c6220f418fa4071997ea6258e92d47", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "3a93d12196db352ef744639e5fde33ea", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,num,odd=0,even=0,sum=o,i;\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++)\n{\nscanf(\"%d\",&num);\nif(num%2==0)\neven++;\nelse odd++;\nsum+=num;\n}\nif(sum%2==0)\nprintf(\"%d\",even);\nelse printf(\"%d\",odd);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,num,odd=0,even=0,sum=0,i;\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++)\n{\nscanf(\"%d\",&num);\nif(num%2==0)\neven++;\nelse odd++;\nsum+=num;\n}\nif(sum%2==0)\nprintf(\"%d\",even);\nelse printf(\"%d\",odd);\nreturn 0;\n}"}
{"similarity_score": 0.9842209072978304, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "bacada1face8b81e582448d1b03a0ed2", "bug_code_uid": "92c4998cbd7a55b74baeda7b974a9ce1", "src_uid": "f0a138b9f6ad979c5ca32437e05d6f43", "apr_id": "0aad863b42325d168f03fbb4e9d6d5b3", "difficulty": 1400, "tags": ["greedy", "number theory", "games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\ntypedef unsigned long long int big;\nbig num,num2;\nint l,i,j,arr[2];\nint main(){\n scanf(\"%llu\", &num);\n num2=num;\n l=ceil(sqrt(num));\n for(i=2; i<=l; i++){\n\t while( (!(num%i)) &&(j<2)){\n\t\t arr[j++]=i;\n\t\t num/=i;\n\t }\n\t if(j==2){\n\t\t break;\n\t }\n }\nif((j==2)&&(num==1)){j=1; }\nif(num2==2){j=0; }\n switch(j){\n\t case 0: puts(\"1\\n0\"); break;\n\t case 2: printf(\"1\\n%llu\\n\", (big)arr[0]*(big)arr[1]); \n\t\t break;\n\t case 1: puts(\"2\"); break;\t \n }\n return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\ntypedef unsigned long long int big;\nbig num,num2;\nint l,i,j, arr[2];\nint main(){ \n scanf(\"%I64d\", &num);\n num2=num;\n l=ceil(sqrt(num));\n for(i=2; i<=l; i++){\n\t while( (!(num%i)) &&(j<2)){\n\t\t arr[j++]=i;\n\t\t num/=i;\n\t }\n\t if(j==2){\n\t\t break;\n\t }\n }\nif((j==2)&&(num==1)){j=1; }\nif(num2==2){j=0; }\n switch(j){\n\t case 0: puts(\"1\\n0\"); break;\n\t case 2: printf(\"1\\n%I64d\\n\", (big)arr[0]*(big)arr[1]); \n\t\t break;\n\t case 1: puts(\"2\"); break;\t \n }\n return 0;\n}\n"}
{"similarity_score": 0.9981549815498155, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "33199571ae6c231b5cf826e1cf438e3f", "bug_code_uid": "b97ea7e547a0b2c07994cec983ebfdf1", "src_uid": "77b5bed410d621fb56c2eaebccff5108", "apr_id": "06082f4f6eb133548cd2e685a3e375c5", "difficulty": 1600, "tags": ["greedy", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\n\nint main()\n{\n\tint n,m,max = INT_MIN,x,hi,di,hi_1,di_1;\n\tscanf(\"%i %i\",&n,&m);\n\n\tscanf(\"%i %i\",&di,&hi);\n\n\t//y = hi + di-x, x = 1\n\tmax = hi + di-x;\n\t\n\twhile( m>1 )\n\t{\n\t\tscanf(\"%i %i\",&di_1,&hi_1);\n\t\t\n\t\tx = ( di+di_1 + hi_1-hi )/2;\n\t\tif( !( di<=x && x<=di_1 ) )\n\t\t{\n\t\t\tprintf(\"IMPOSSIBLE\\n\");\n\t\t\treturn 0;\n\t\t}\n\n\t\tmax = ( max<(hi+x-di) ? (hi+x-di) : max ) ;\n\n\t\thi = hi_1;\n\t\tdi = di_1;\n\t\tm -= 1;\n\t}\n\n\t// y = hi + x-di, x = n\n\tmax = ( max<(hi+n-di) ? (hi+n-di) : max ) ;\n\n\tprintf(\"%i\\n\",max);\n\t\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<limits.h>\n\nint main()\n{\n\tint n,m,max = INT_MIN,x,hi,di,hi_1,di_1;\n\tscanf(\"%i %i\",&n,&m);\n\n\tscanf(\"%i %i\",&di,&hi);\n\n\t//y = hi + di-x, x = 1\n\tmax = hi + di-1;\n\t\n\twhile( m>1 )\n\t{\n\t\tscanf(\"%i %i\",&di_1,&hi_1);\n\t\t\n\t\tx = ( di+di_1 + hi_1-hi )/2;\n\t\tif( !( di<=x && x<=di_1 ) )\n\t\t{\n\t\t\tprintf(\"IMPOSSIBLE\\n\");\n\t\t\treturn 0;\n\t\t}\n\n\t\tmax = ( max<(hi+x-di) ? (hi+x-di) : max ) ;\n\n\t\thi = hi_1;\n\t\tdi = di_1;\n\t\tm -= 1;\n\t}\n\n\t// y = hi + x-di, x = n\n\tmax = ( max<(hi+n-di) ? (hi+n-di) : max ) ;\n\n\tprintf(\"%i\\n\",max);\n\t\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.4023952095808383, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b04b39b2cf0d8886b16adebc1586a8a6", "bug_code_uid": "e36486cc1430aa5caf94fc4fefe0e7b4", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "e4d90d83d30d2ac47f570cc26efc8947", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,d,i,c=0;\n    scanf(\"%d %d\",&n,&d);\n    int b[n+1];\n    for(i=0;i<n;i++) scanf(\"%d\",&b[i]);\n\n    for(i=1;i<n;i++)\n    {\n        if(b[i]<=b[i-1])\n        {\n            //printf(\"i %d\\n\",i);\n            b[i]+=d;\n            c++;\n            i--;\n            //printf(\"i new %d\\n\",i);\n        }\n    }\n\n    printf(\"%d\\n\",c);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,d,i,c=0,diff=0;\n    scanf(\"%d %d\",&n,&d);\n\n    int b[n+1];\n\n    scanf(\"%d\",&b[0]);\n\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        if(b[i]==b[i-1])\n        {\n            b[i]+=d;\n            c++;\n        }\n        else if(b[i]<b[i-1])\n        {\n            diff= b[i-1]-b[i]+1;\n            c+= (diff+d-1)/d;\n            b[i]+= ((diff+d-1)/d)*d;\n        }\n    }\n\n    printf(\"%d\\n\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.8786482334869432, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f6172e324f9660607a0f40ccc8d549bb", "bug_code_uid": "f27de10121993657408f1a2dc18adc13", "src_uid": "e5a01ebfdca3af987e93b68c96268c16", "apr_id": "a26c60cc6e8d4a6ea41fb043111f702e", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//jai bhawani\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    long long i,j,n,x,m;\r\nint t;\r\n\r\n    scanf(\"%d\",&t);\r\nwhile(t--)\r\n    {\r\n\r\n    scanf(\"%lld%lld\",&n,&m);\r\n    if(m==1 || n==1)\r\n    {\r\n        printf(\"%lld\\n\",1);\r\n    }\r\n    else\r\n    {\r\n        printf(\"%lld\\n\",2);\r\n    }\r\n    }\r\nreturn 0;\r\n}\r\n", "fixed": "//jai bhawani\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    long long i,j,n,x,m;\r\nint t;\r\n\r\n    scanf(\"%d\",&t);\r\nwhile(t--)\r\n    {\r\n\r\n    scanf(\"%lld%lld\",&n,&m);\r\n    if(m==1 && n==1)\r\n    {\r\n        printf(\"0\\n\");\r\n    }\r\n    else if(m==1 || n==1)\r\n    {\r\n        printf(\"1\\n\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"2\\n\");\r\n    }\r\n    }\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.8582949308755761, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6791283a56264042e541d808701b1faf", "bug_code_uid": "5ce6f3dcdc235cb7f2fc8848880eef5e", "src_uid": "a4c82fffb31bc7e42870fd84e043e815", "apr_id": "d2246e6cf9623be0253d4a3a0df10603", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int n,k,i,t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d %d\", &n, &k);\n         if(n==k && n!=1 && k!=1)\n        {\n            printf (\"NO\\n\");\n        }\n        else if(n%2==0 && k%2==0)\n        {\n            if(k*k<=n)\n            {\n            printf(\"YES\\n\");\n            }\n            else\n            {\n                printf(\"NO\\n\");\n            }\n        }\n         else if(n%2!=0 && k%2!=0)\n         {\n             if(k*k<=n)\n             {\n                 printf(\"YES\\n\");\n             }\n             else\n             {\n                 printf(\"NO\\n\");\n             }\n         }\n         else if (k==1 && n%2==0)\n         {\n             printf(\"YES\\n\");\n         }\n        else if ((k%2==0 && n%2!=0) || (k%2!=0 && n%2==0))\n        {\n           printf (\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,i,t;\n    long long int k;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d %lld\", &n, &k);\n         if(n==k && n!=1 && k!=1)\n        {\n            printf (\"NO\\n\");\n        }\n        else if(n%2==0 && k%2==0)\n        {\n            if(k*k<=n)\n            {\n            printf(\"YES\\n\");\n            }\n            else\n            {\n                printf(\"NO\\n\");\n            }\n        }\n         else if(n%2!=0 && k%2!=0)\n         {\n             if(k*k<=n)\n             {\n                 printf(\"YES\\n\");\n             }\n             else\n             {\n                 printf(\"NO\\n\");\n             }\n         }\n         else if (k==1 && n%2==0)\n         {\n             printf(\"NO\\n\");\n         }\n        else if ((k%2==0 && n%2!=0) || (k%2!=0 && n%2==0))\n        {\n           printf (\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9798488664987406, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "bb8632cf9d3f0d024874a4e1f7952243", "bug_code_uid": "5c58883cd9b14fb4c0441eea0dd92ff3", "src_uid": "5312a505bd59b55a6c5487f67a33d81a", "apr_id": "28675b86060c7dc57e64c30fabc1cbea", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#define int long long\r\n\r\nint main()\r\n{\r\n    int tc;\r\n    scanf(\"%lld\", &tc);\r\n\r\n    while (tc--)\r\n    {\r\n        int m;\r\n        scanf(\"%lld\", &m);\r\n        \r\n        int k = (log(m)) / (log(10));\r\n        \r\n        int x = 1;\r\n        for (int i = 0; i < k; i++)\r\n        {\r\n            x = x * 10;\r\n        }\r\n        \r\n        printf(\"%lld\\n\", m - x);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#define int long long\r\n\r\nint main()\r\n{\r\n    int tc;\r\n    scanf(\"%lld\", &tc);\r\n\r\n    while (tc--)\r\n    {\r\n        int m;\r\n        scanf(\"%lld\", &m);\r\n        \r\n        int k = log10(m);\r\n        \r\n        int x = 1;\r\n        for (int i = 0; i < k; i++)\r\n        {\r\n            x = x * 10;\r\n        }\r\n        \r\n        printf(\"%lld\\n\", m - x);\r\n    }\r\n}"}
{"similarity_score": 0.9835497835497835, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "073059d7345cd90b1f9d8ec2f27b4c1a", "bug_code_uid": "5c335c68cf8db864ba67f7a20bc13ff7", "src_uid": "5c92ede00232d6a22385be29ecd06ddd", "apr_id": "30ec47befdc5760c75a78cbe8dc2e3bf", "difficulty": 1800, "tags": ["data structures", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint ma[510][100100];\nint b[100100],niz[100100];\nint val[510];\n\nint main()\n{\n\tint i,j,x,y,n,m;\n\n\tscanf(\"%d %d\", &n, &m);\n\tfor (i=1;i<=n;i++) \n\t{\n\t\tscanf(\"%d\",&niz[i]);\n\t\tif (niz[i]>n) niz[i] = 0;\n\t\tb[niz[i]]++;\n\t}\n\n\tx = 0;\n\tfor (i=1;i<=n;i++)\n\t\tif (b[i]>=i)\n\t\t{\n\t\t\tx++;\n\t\t\tval[x] = i;\n\t\t\tfor (j=1;j<=n;j++)\n\t\t\t\tma[x][j] = ma[x][j-1] + (niz[j]==i);\n\t\t}\n\n\tint a,b;\n\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d\", &a, &b);\n\n\t\tint sol = 0;\n\t\tfor (j=1;j<=x;j++) \n\t\t\tsol += (ma[j][b]-ma[j][a-1]>=val[j]);\n\t\tprintf(\"%d\\n\",sol);\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint ma[510][100100];\nint b[100100],niz[100100];\nint val[510];\n\nint main()\n{\n\tint i,j,x,y,n,m;\n\n\tscanf(\"%d %d\", &n, &m);\n\tfor (i=1;i<=n;i++) \n\t{\n\t\tscanf(\"%d\",&niz[i]);\n\t\tif (niz[i]>n) niz[i] = 0;\n\t\tb[niz[i]]++;\n\t}\n\n\tx = 0;\n\tfor (i=1;i<=n;i++)\n\t\tif (b[i]>=i)\n\t\t{\n\t\t\tx++;\n\t\t\tval[x] = i;\n\t\t\tfor (j=1;j<=n;j++)\n\t\t\t\tma[x][j] = ma[x][j-1] + (niz[j]==i);\n\t\t}\n\n\tint a,b;\n\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tif (b>n) b = n;\n\t\tint sol = 0;\n\t\tfor (j=1;j<=x;j++) \n\t\t\tsol += (ma[j][b]-ma[j][a-1]==val[j]);\n\t\tprintf(\"%d\\n\",sol);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9972565157750343, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6c93ed0d4195155d67526f80660d31dd", "bug_code_uid": "2425e6a49d6c19433020f771d399dcf4", "src_uid": "c11d67f223eb49c6e8315e2c88dd680d", "apr_id": "330e9d652631e96395c0bdb0fd660782", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n\n/*int cmp(const void *a, const void *b)\n{\n     return(*(int *)a-*(int *)b);\n}*/\n\n/*int cmp1(const void *a ,const void * b)\n{\n return (*(double *)a>*(double * )b?1:-1);\n}*/\n/*int gcd(int a,int b)\n{\n    return b ? gcd(b,a%b) : a;\n}*/\nchar a[200008],b[200008];\nint main()\n{\n    int l,i = 0,j = 1,k = 0;\n    scanf(\"%d\",&l);\n    getchar();\n    gets(a);\n    while(j < l)\n    {\n        if(a[i] != a[j])\n        {\n            b[k] = a[i];\n            k++;\n            b[k] = a[j];\n            k++;\n            i = i + 2;\n            j = j + 2;\n        }\n        else\n        {\n            j++;\n        }\n    }\n    printf(\"%d\\n\",l-k);\n    puts(b);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n\n/*int cmp(const void *a, const void *b)\n{\n     return(*(int *)a-*(int *)b);\n}*/\n\n/*int cmp1(const void *a ,const void * b)\n{\n return (*(double *)a>*(double * )b?1:-1);\n}*/\n/*int gcd(int a,int b)\n{\n    return b ? gcd(b,a%b) : a;\n}*/\nchar a[200008],b[200008];\nint main()\n{\n    int l,i = 0,j = 1,k = 0;\n    scanf(\"%d\",&l);\n    getchar();\n    gets(a);\n    while(j < l)\n    {\n        if(a[i] != a[j])\n        {\n            b[k] = a[i];\n            k++;\n            b[k] = a[j];\n            k++;\n            i = j + 1;\n            j = j + 2;\n        }\n        else\n        {\n            j++;\n        }\n    }\n    printf(\"%d\\n\",l-k);\n    puts(b);\n    return 0;\n}\n"}
{"similarity_score": 0.9826707441386341, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "de7b13856a321c69d10ae1ff2183c29c", "bug_code_uid": "54f578bb07ac1e03ae3dae8a7c9040d7", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "ce76eba0735b150400996982af66143c", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int i,j,count,c,sum=0,test_count,arra[100];\n    scanf(\"%d\",&test_count);\n    while(test_count--)\n    {\n        c=0;\n        scanf(\"%d\",&count);\n        for(i=0; i<count; i++)\n        {\n            scanf(\"%d\",&arra[i]);\n            if(arra[i]==0)\n            {\n                c++;\n                arra[i]+=1;\n            }\n            sum+=arra[i];\n        }\n        if(sum==0)\n            c++;\n        printf(\"%d\\n\",c);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int i,j,count,c,sum,test_count,arra[100];\n    scanf(\"%d\",&test_count);\n    while(test_count--)\n    {\n        c=0;\n        sum=0;\n        scanf(\"%d\",&count);\n        for(i=0; i<count; i++)\n        {\n            scanf(\"%d\",&arra[i]);\n            if(arra[i]==0)\n            {\n                c++;\n                arra[i]+=1;\n            }\n            sum+=arra[i];\n        }\n        if(sum==0)\n            c++;\n        printf(\"%d\\n\",c);\n    }\n}\n"}
{"similarity_score": 0.9776674937965261, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3afa6b140948d7486a1509015a2f1d61", "bug_code_uid": "15df0c9bcd8e2a1f4e18d9f817671212", "src_uid": "8f0172f742b058f5905c0a02d79000dc", "apr_id": "2a9dcedd91239e9baac0443339e984ba", "difficulty": 1200, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint x[100005];\nint main()\n{\n\tint p,q,sum1,sum2,b,n,i,a;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)scanf(\"%d\",&x[i]);\n\tp=0;q=n-1;sum1=x[p];sum2=x[q];a=b=1;\n\twhile(q-p>1)\n\t{\n\t\tif(sum1<sum2)\n\t\t{\n\t\t\tp++;sum1+=x[p];a++;\n\t\t}\n\t\tif(sum1>sum2){\n\t\t\tq--;sum2+=x[q];b++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tp++;q--;sum1+=x[p];sum2+=x[q];a++;b++;\n\t\t}\n\t}\n\tif(p==q&&sum1==sum2)b--;\n\tprintf(\"%d %d\",a,b);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint x[100005];\nint main()\n{\n\tint p,q,sum1,sum2,b,n,i,a;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)scanf(\"%d\",&x[i]);\n\tp=0;q=n-1;sum1=x[p];sum2=x[q];a=b=1;\n\twhile(q-p>1)\n\t{\n\t\tif(sum1<sum2)\n\t\t{\n\t\t\tp++;sum1+=x[p];a++;continue;\n\t\t}\n\t\tif(sum1>sum2){\n\t\t\tq--;sum2+=x[q];b++;continue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tp++;q--;sum1+=x[p];sum2+=x[q];a++;b++;\n\t\t}\n\t}\n\tif(p==q&&sum1==sum2)b--;\n\tprintf(\"%d %d\",a,b);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9356060606060606, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c0a7342b8a29f83328c85b149ec3f749", "bug_code_uid": "ee30f03622d4e757cebf517e18441376", "src_uid": "cd2519f4a7888b2c292f05c64a9db13a", "apr_id": "8ea8f5fd3aafebbe2e4e96675816c1d0", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,d;\n    scanf(\"%d\",&t);\n    for(d=0;d<t;d++)\n    {\n    int n,a[10],i=0;\n    scanf(\"%d\",&n);\n    while(n>0)\n    {\n        a[i]=n%10;\n        n=n/10;\n        i++;\n    }\n    int count=0;\n    for(int j=0;j<i;j++)\n    {\n        if(a[j]!=0)\n            count++;\n    }\n    printf(\"%d\\n\",count);\n    for(int j=0;j<i;j++)\n    {\n        int k;\n        k=pow(10,j);\n        if(a[j]!=0)\n        printf(\"%d  \",a[j]*k);\n    }\n        printf(\"\\n\");\n    }\n    \n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,d;\n    scanf(\"%d\",&t);\n    for(d=0;d<t;d++)\n    {\n    int n,a[10],i=0;\n    scanf(\"%d\",&n);\n    while(n>0)\n    {\n        a[i]=n%10;\n        n=n/10;\n        i++;\n    }\n    int count=0;\n    for(int j=0;j<i;j++)\n    {\n        if(a[j]!=0)\n            count++;\n    }\n    printf(\"%d\\n\",count);\n    for(int j=0;j<i;j++)\n    {\n        float k;\n        k=pow(10,j);\n    \n        if(a[j]!=0)\n        {\n            int x=k*a[j];\n        printf(\"%d  \",x);\n        }\n    }\n        printf(\"\\n\");\n    }\n    \n}\n"}
{"similarity_score": 0.7984241628365069, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "0d9950e7d58b4a94a6bec972a2462968", "bug_code_uid": "804cad4eee37b3850c48c5e18e442329", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "2b0e0209cbe531a1c49cfb51d19a7a6e", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n, i, j=0, c=1, c1=0, temp, k;\n    scanf(\"%d\", &n);\n    int a[n+10], b[n+10];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n    for(i=0; i<n; i++)\n    {\n        if(a[i]>a[i+1]){\n            c1++;\n        }\n    }\n    if(c1==0){\n        printf(\"%d\\n\", n);\n        return 0;\n    }\n\n    for(i=0; i<n; i++)\n    {\n        if(a[i]<=a[i+1])\n            c++;\n        else if(a[i]>a[i+1])\n        {\n            b[j]=c;\n            j++;\n            c=1;\n        }\n    }\n\n    for(i=0; i<j-1; i++)\n    {\n        for(k=i+1; k<j; k++){\n            if(b[k]>b[i])\n            {\n                temp=b[k];\n                b[k]=b[i];\n                b[i]=temp;\n            }\n        }\n    }\n        if((c-1)>b[0])\n            printf(\"%d \", c-1);\n        else\n        printf(\"%d\\n\", b[0]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n, i, j=0, c=1, c1=0, temp=0, k;\n    scanf(\"%d\", &n);\n    int a[n+10], b[n+10];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n    for(i=0; i<n; i++)\n    {\n        if(a[i]>a[i+1]){\n            c1++;\n        }\n    }\n    if(c1==0){\n        printf(\"%d\\n\", n);\n        return 0;\n    }\n\n    for(i=0; i<n; i++)\n    {\n        if(a[i]<=a[i+1])\n            c++;\n        else if(a[i]>a[i+1])\n        {\n            b[j]=c;\n            j++;\n            c=1;\n        }\n    }\n\n    for(i=0; i<j; i++)\n    {\n        if(b[i]>temp)\n            temp=b[i];\n    }\n\n    if((c-1)>temp)\n        printf(\"%d \", c-1);\n    else\n        printf(\"%d\\n\", temp);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8861788617886179, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ef3db9ff1b8d21d400550c70ff2532cf", "bug_code_uid": "b321d3356901c2779a2258cbb72f4c84", "src_uid": "fcd88c7b64da4b839cda4273d928429d", "apr_id": "bbe0a8d375e441eea9a80dfa0af0520f", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, _max = -1, first_length = 0, current_length = 0;\n\tscanf(\"%d\", &n);\n\twhile (n--)\n\t{\n\t\tint temp;\n\t\tscanf(\"%d\", &temp);\n\t\tif (temp)\n\t\t{\n\t\t\tif (first_length >= 0)\n\t\t\t{\n\t\t\t\tfirst_length++;\n\t\t\t}\n\t\t\tcurrent_length++;\n\t\t} else\n\t\t{\n\t\t\t_max = current_length > _max ? current_length : _max;\n\t\t\tcurrent_length = 0;\n\t\t\tfirst_length = first_length > 0 ? -first_length : first_length;\n\t\t}\n\t}\n\tprintf(\"%d\", _max > current_length - first_length ? _max : current_length - first_length);\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, _max = -1, first_length = 0, current_length = 0;\n\tint isFirst = 1;\n\tscanf(\"%d\", &n);\n\twhile (n--)\n\t{\n\t\tint temp;\n\t\tscanf(\"%d\", &temp);\n\t\tif (temp)\n\t\t{\n\t\t\tif (isFirst > 0)\n\t\t\t{\n\t\t\t\tfirst_length++;\n\t\t\t}\n\t\t\tcurrent_length++;\n\t\t} else\n\t\t{\n\t\t\t_max = current_length > _max ? current_length : _max;\n\t\t\tcurrent_length = 0;\n\t\t\tisFirst = -1;\n\t\t}\n\t}\n\tprintf(\"%d\", _max > current_length + first_length ? _max : current_length + first_length);\n}"}
{"similarity_score": 0.8992481203007519, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d373d2f2e23a860e096189fac5819d15", "bug_code_uid": "f59f038b63434e1e1d3a9519d1e8eb35", "src_uid": "8063c96cf62727f1b98e476e43679da2", "apr_id": "c9f6fc39194a1a4e657f6d35e361be42", "difficulty": 1900, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define LL long long\r\n\r\nvoid solve(){\r\n\tLL x;\r\n\tscanf(\"%lld\",&x);\r\n\tif(x&1){\r\n\t\tprintf(\"2\\n\");\r\n\t}else{\r\n\t\twhile(!(x&1))x>>=1;\r\n\t\tif(x==1){\r\n\t\t\tputs(\"-1\");\r\n\t\t}else{\r\n\t\t\tprintf(\"%lld\\n\",x);\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) solve(); \r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#define LL long long\r\n\r\nvoid solve(){\r\n\tLL x;\r\n\tscanf(\"%lld\",&x);\r\n\tif(x&1){\r\n\t\tprintf(\"2\\n\");\r\n\t}else{\r\n\t\tLL x0 = x;\r\n\t\twhile(!(x&1))x>>=1;\r\n\t\tif(x==1){\r\n\t\t\tputs(\"-1\");\r\n\t\t}else{\r\n\t\t\tif((x0/x)*2-x>0) printf(\"%lld\\n\",x);\r\n\t\t\telse printf(\"%lld\\n\",2*(x0/x));\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) solve(); \r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9908536585365854, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "da79c9a07a7df8e53d5852cf81084def", "bug_code_uid": "0926cce1f3fa041adc28d268af354ef2", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "37de6b30ab850f27abac07b171816977", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main ()\r\n{\r\n    int t;\r\n    scanf (\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        int a,b,c;\r\n        scanf (\"%d%d%d\",&a,&b,&c);\r\n        if ((a<b && b<c)||(c<b&&b<a))\r\n        printf (\"%d\",b);\r\n     else if ((b<a && a<c)||(c<a&&a<b))\r\n      printf (\"%d\",a);\r\n     else  \r\n      printf (\"%d\",c);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main ()\r\n{\r\n    int t;\r\n    scanf (\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        int a,b,c;\r\n        scanf (\"%d%d%d\",&a,&b,&c);\r\n        if ((a<b && b<c)||(c<b&&b<a))\r\n        printf (\"%d\\n\",b);\r\n     else if ((b<a && a<c)||(c<a&&a<b))\r\n      printf (\"%d\\n\",a);\r\n     else  \r\n      printf (\"%d\\n\",c);\r\n    }\r\n}"}
{"similarity_score": 0.8834355828220859, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7fc0951f7554ea9f26f7358d25089b2c", "bug_code_uid": "38e973d966805dd3440e8117f18cad34", "src_uid": "474f29da694929a64eaed6eb8e4349c3", "apr_id": "fa76e5b5b2d9d7679461f4d3a17ed2fc", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\nint t,n,x,y,d,i;\nscanf(\"%d\",&t);\nfor( i=1;i<=t;i++)\n{\nscanf(\"%d %d %d %d\",&n,&x,&y,&d);\nif(abs(x-y)%d==0)\nprintf(\"%d\\n\",abs(x-y)/d);\nelse if(y==n){\nif((n-x)%d==0)\nprintf(\"%d\\n\",(n-x)/d);\nelse\nprintf(\"%d\\n\",(n-x)/d+1);\n\n}\nelse if(y==1){\nif((x-1)%d==0)\nprintf(\"%d\\n\",(x-1)/d);\nelse\nprintf(\"%d\\n\",(x-1)/d+1);\n\n}\nelse if(y==1&&x<=d)\nprintf(\"1\\n\");\nelse if(y==n&&x>=(n-d))\nprintf(\"1\\n\");\n\nelse\n{\nif((y-1)%d==0)\n{\nprintf(\"%d\\n\",(x-1)/d+1+(y-1)/d);\n}\nelse if((n-y)%d==0)\nprintf(\"%d\\n\",(n-x)/d+1+(n-y)/d);\n\nelse\nprintf(\"-1\\n\");\n}}\n\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\nint t,n,x,y,d,i;\nscanf(\"%d\",&t);\nfor( i=1;i<=t;i++)\n{\nscanf(\"%d %d %d %d\",&n,&x,&y,&d);\nif(abs(x-y)%d==0)\nprintf(\"%d\\n\",abs(x-y)/d);\n\nelse if(y==n){\nif((n-x)%d==0)\nprintf(\"%d\\n\",(n-x)/d);\nelse\nprintf(\"%d\\n\",(n-x)/d+1);\n\n}\nelse if(y==1){\nif((x-1)%d==0)\nprintf(\"%d\\n\",(x-1)/d);\nelse\nprintf(\"%d\\n\",(x-1)/d+1);\n\n}\nelse if(y==1&&x<=d)\nprintf(\"1\\n\");\nelse if(y==n&&x>=(n-d))\nprintf(\"1\\n\");\n\nelse\n{\nif((y-1)%d==0&&(n-y)%d==0)\n{\nif(((x-1)/d+1+(y-1)/d)>(n-x)/d+1+(n-y)/d)\nprintf(\"%d\\n\",(n-x)/d+1+(n-y)/d);\nelse\nprintf(\"%d\\n\",(x-1)/d+1+(y-1)/d);\n}\nelse if((y-1)%d==0)\n{\nprintf(\"%d\\n\",(x-1)/d+1+(y-1)/d);\n}\nelse if((n-y)%d==0)\nprintf(\"%d\\n\",(n-x)/d+1+(n-y)/d);\n\nelse\nprintf(\"-1\\n\");\n}}\n\n\n\n}\n"}
{"similarity_score": 0.2103448275862069, "equal_cnt": 13, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "6834b92d3f4780a5f974f9354014709a", "bug_code_uid": "288fd2df4d2d46f46fd3e23cd23b46e2", "src_uid": "17f73ae0347b551fb5e287322785c8a4", "apr_id": "8e531719b05f7639695eeede35f23817", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long n;\n\tscanf(\"%Ld\",&n);\n\tlong long a[100005];\n\tlong long i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%Ld\",&a[i]);\n\t}\n\tlong long\tfre[2000005]={0};\n\tlong long flag=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]>0)\n\t\t{\n\t\t\tfre[a[i]+1000000]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(fre[1000000-a[i]]>0)\n\t\t\t{\n\t\t\t\tfre[1000000-a[i]]--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tflag=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tlong long sum=0,j,sum1=0,ans[100005]={0},k;\n\tk=-1;\n\tif(flag==-1)printf(\"-1\\n\");\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tsum=sum+a[i];\n\n\t\t\tif(sum==0)\n\t\t\t{\n\t\t\t\tk++;\n\t\t\t\tans[k]=i;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tsum1=sum1+a[j];\n\t\t}\n\t\tif(sum1!=0)printf(\"-1\\n\");\n\t\telse\n\t\t{\n\t\t\tif(k==0)\n\t\t\t{\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t\tprintf(\"%Ld\\n\",n);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"2\\n\");\n\t\t\t\tprintf(\"%Ld %Ld\\n\",ans[0]+1,n-ans[0]-1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long n;\n\tscanf(\"%I64lld\",&n);\n\tlong long a[100005];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64lld\",&a[i]);\n\t}\n\tlong long a1[1000005]={0},a2[1000005]={0},re[1000005]={0},re1[1000005]={0};\n\tlong long sum=0,d=0,day[100005]={0},flag=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tsum=sum+a[i];\n\t\tif(a[i]>0)\n\t\t{\n\t\t\tif(re[a[i]]==d+1)\n\t\t\t{\n\t\t\t\tflag=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse re[a[i]]=d+1;\n\t\t\t\ta1[a[i]]++;\n\t\t}\n\t\tif(a[i]<0)\n\t\t{\n\t\t\tif(re1[-a[i]]==d+1)\n\t\t\t{\n\t\t\t\tflag=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse re1[-a[i]]=d+1;\n\t\t\tif(re[-a[i]]==d+1)\n\t\t\t{\n\t\t\t\t\ta2[-a[i]]++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tflag=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(sum==0)\n\t\t{\n\t\t\tday[d]=i;\n\t\t\td++;\n\t\t}\n\t}\n\tif(sum!=0)flag=-1;\n\tif(flag==-1)printf(\"-1\\n\");\n\telse\n\t{\n\t\tprintf(\"%I64lld\\n\",d);\n\t\tfor(int i=0;i<d;i++)\n\t\t{\n\t\t\tif(i==0)printf(\"%I64lld \",day[i]+1);\n\t\t\telse\n\t\t\t\tprintf(\"%I64lld \",day[i]-day[i-1]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\n\n\n\n\n"}
{"similarity_score": 0.9990714948932219, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "68ef12d7ba6d06cc8d85d28545af0bdc", "bug_code_uid": "507e6bb29402504edd5f3e82b5fbb9cd", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "108977d2360b73c61c2280ab0a254ae7", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint result(int [],int,int);\nint cmpfunc(const void*a,const void*b)\n{\n    return (*(int*)a - *(int*)b);\n}\nint main()\n{\n    int n,m,i,j,sum=0,k,c=0,max=0,min=0,d=0;\n    int a[1000005],b[1000005];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n         scanf(\"%d\",&k);\n         sum+=k;\n    }\n    for(i=1;i<n;i++)\n    {\n         scanf(\"%d\",&k);\n         c+=k;\n    }\n    for(i=2;i<n;i++)\n    {\n         scanf(\"%d\",&k);\n         d+=k;\n    }\n    printf(\"%d\\n%d\"sum-c,c-d);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint result(int [],int,int);\nint cmpfunc(const void*a,const void*b)\n{\n    return (*(int*)a - *(int*)b);\n}\nint main()\n{\n    int n,m,i,j,sum=0,k,c=0,max=0,min=0,d=0;\n    int a[1000005],b[1000005];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n         scanf(\"%d\",&k);\n         sum+=k;\n    }\n    for(i=1;i<n;i++)\n    {\n         scanf(\"%d\",&k);\n         c+=k;\n    }\n    for(i=2;i<n;i++)\n    {\n         scanf(\"%d\",&k);\n         d+=k;\n    }\n    printf(\"%d\\n%d\",sum-c,c-d);\n    return 0;\n}"}
{"similarity_score": 0.9503722084367245, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2a5b066a5a0158ae6353a32cb4a0f126", "bug_code_uid": "98e351f7c2ec32a1f6f482364af17654", "src_uid": "ecd9bbc05b97f3cd43017dd0eddd014d", "apr_id": "a42d5add2b0bdc549d12e2b11214af49", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint b[1000010][5];\nint main()\n{\n    int l=0,c[100010],max=-1,n,a[100010],i;\n    scanf(\"%d\",&n);\n    for(i=0;i<1000002;i++)\n    {\n        b[i][0]=0;\n        b[i][1]=0;\n        b[i][2]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(b[a[i]][0]==0)\n            b[a[i]][1]=i;\n        else\n            b[a[i]][2]=i;\n        b[a[i]][0]++;\n    }\n    for(i=1;i<=1000000;i++)\n        if(b[i][0]>max)\n            max=b[i][0];\n    for(i=1;i<=1000000;i++)\n        if(b[i][0]==max)\n            c[l++]=i;\n    for(i=0;i<l;i++)\n        if(b[c[i]][2]-b[c[i]][1]<b[c[0]][2]-b[c[0]][1])\n        {\n            b[c[0]][2]=b[c[i]][2];\n            b[c[0]][1]=b[c[i]][1];\n        }\n    printf(\"%d %d\\n\",b[c[0]][1],b[c[0]][2]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint b[1000010][5];\nint main()\n{\n    int l=0,c[100010],max=-1,n,a[100010],i;\n    scanf(\"%d\",&n);\n    for(i=0;i<1000002;i++)\n    {\n        b[i][0]=0;\n        b[i][1]=0;\n        b[i][2]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(b[a[i]][0]==0)\n        {\n            b[a[i]][1]=i;\n            b[a[i]][2]=i;\n        }\n        else\n            b[a[i]][2]=i;\n        b[a[i]][0]++;\n    }\n    for(i=1;i<=1000000;i++)\n        if(b[i][0]>max)\n            max=b[i][0];\n    for(i=1;i<=1000000;i++)\n        if(b[i][0]==max)\n            c[l++]=i;\n    for(i=0;i<l;i++)\n        if(b[c[i]][2]-b[c[i]][1]<b[c[0]][2]-b[c[0]][1])\n        {\n            b[c[0]][2]=b[c[i]][2];\n            b[c[0]][1]=b[c[i]][1];\n        }\n    printf(\"%d %d\\n\",b[c[0]][1],b[c[0]][2]);\n    return 0;\n}\n"}
{"similarity_score": 0.9715079916608756, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1da5f4348e690afbe7d5ef5e3eefee12", "bug_code_uid": "9a641ca52847342a698f0eaa78be0d20", "src_uid": "bcc79164881d9281a6080163dd8a0c91", "apr_id": "fa209cc058a03f685a30951fead49e6f", "difficulty": 1100, "tags": ["constructive algorithms", "dp", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\n#define int long long\r\n#define N 310000\r\n\r\nint n,a[N],ans;\r\n\r\nchar s[N];\r\n\r\nvoid Input(){\r\n    scanf(\"%lld\",&n);\r\n    scanf(\"%s\",s+1);\r\n    for(int i=1;i<=n;++i) scanf(\"%lld\",&a[i]);\r\n    ans=0;\r\n    return;\r\n}\r\n\r\nvoid solve(){\r\n    for(int i=1;i<=n;++i){\r\n        if(s[i]=='1') ans+=a[i];\r\n        int mn=1e9;\r\n        if(s[i]=='0'){\r\n            for(int j=i+1;j<=n && s[j]=='1';++j)\r\n            mn=min(mn,a[j]);\r\n            if(mn<a[i])\r\n            ans+=a[i]-mn;\r\n        }\r\n    }\r\n    printf(\"%lld\\n\",ans);\r\n    return;\r\n}\r\n\r\nsigned main(){\r\n    int T;\r\n    scanf(\"%lld\",&T);\r\n    while(T--){\r\n        Input();\r\n        solve();\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\n#define int long long\r\n#define N 310000\r\n\r\nint n,a[N],ans;\r\n\r\nchar s[N];\r\n\r\nint min(int x,int y){return x<y?x:y;}\r\n\r\nvoid Input(){\r\n    scanf(\"%lld\",&n);\r\n    scanf(\"%s\",s+1);\r\n    for(int i=1;i<=n;++i) scanf(\"%lld\",&a[i]);\r\n    ans=0;\r\n    return;\r\n}\r\n\r\nvoid solve(){\r\n    for(int i=1;i<=n;++i){\r\n        if(s[i]=='1') ans+=a[i];\r\n        int mn=1e9;\r\n        if(s[i]=='0'){\r\n            for(int j=i+1;j<=n && s[j]=='1';++j)\r\n            mn=min(mn,a[j]);\r\n            if(mn<a[i])\r\n            ans+=a[i]-mn;\r\n        }\r\n    }\r\n    printf(\"%lld\\n\",ans);\r\n    return;\r\n}\r\n\r\nsigned main(){\r\n    int T;\r\n    scanf(\"%lld\",&T);\r\n    while(T--){\r\n        Input();\r\n        solve();\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9333333333333333, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "8c021161e02ef5714befff8e57951067", "bug_code_uid": "2084f7a4d9667c8a067eef0d1ce8b1ee", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "b166c963447434733b3d27a545008788", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar a[1000000],b[1000000];\nscanf(\"%s\",a);\nprintf(\"%s%s\",a,strrev(a));}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar a[1000000],b[1000000];\nscanf(\"%s\",a);\nprintf(\"%s\",a);\nprintf(\"%s\",strrev(a));}\n"}
{"similarity_score": 0.9241379310344827, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "cfd949d6e3dd67c7101b671cfafbb112", "bug_code_uid": "e1a94392b106d64fae3a2fcf75d164f3", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "8daeb947d719811ef8ed8e8f199535b5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,d=1,sum;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        int a,b,c,d;\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        if(i==0)\n            sum=a+b+c+d;\n        if(sum<a+b+c+d)\n            d++;\n    }\n    printf(\"%d\",d);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k=1,sum;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        int a,b,c,d;\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        if(i==0)\n            sum=a+b+c+d;\n        if(sum<a+b+c+d)\n            {\n                k++;\n            }\n    }\n    printf(\"%d\",k);\n}"}
{"similarity_score": 0.9768160741885626, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d1b3edd9a616360631d663aa7c34d7c4", "bug_code_uid": "15be3457a3c6e1f57981d4ac7c92ddf3", "src_uid": "127d7f23a0ac8fcecccd687565d6f35a", "apr_id": "4f7ab29eea687eda3683ac6716a6c8a9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint tc;\r\n\tscanf(\"%d\", &tc);\r\n\t\r\n\twhile(tc--){\r\n\t\tint string;\r\n\t\tscanf(\"%d\", &string);\r\n\t\tchar ab[51];\r\n\t\tscanf(\"%s\", ab);\r\n\t\t\r\n\t\tint check1 = 0, check2 = 0;\r\n\t\tint check11, check22;\r\n\t\tint countera = 0, counterb = 0;\r\n\t\t\r\n\t\tfor(int i = 0; i<string; i++){\r\n\t\t\tif(ab[i] == 'a'){\r\n\t\t\t\tcountera++;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcounterb++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(countera == counterb && check1 == 0){\r\n\t\t\t\tcheck1 = 1;\r\n\t\t\t\tcheck11 = i + 1;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(ab[i] == 'a' && ab[i+1] == 'b' && check2 == 0){\r\n\t\t\t\tcheck2 = 1;\r\n\t\t\t\tcheck22 = i;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(ab[i] == 'b' && ab[i+1] == 'a' && check2 == 0){\r\n\t\t\t\tcheck2 = 1;\r\n\t\t\t\tcheck22 = i;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif(countera == counterb){\r\n\t\t\tprintf(\"1 %d\\n\", string);\r\n\t\t}\r\n\t\telse if(check1 == 1){\r\n\t\t\tprintf(\"1 %d\\n\", check11);\r\n\t\t}\r\n\t\telse if(check2 == 1){\r\n\t\t\tprintf(\"%d %d\\n\", check22, check22 + 1);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"-1 -1\\n\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint tc;\r\n\tscanf(\"%d\", &tc);\r\n\t\r\n\twhile(tc--){\r\n\t\tint string;\r\n\t\tscanf(\"%d\", &string);\r\n\t\tchar ab[51];\r\n\t\tscanf(\"%s\", ab);\r\n\t\t\r\n\t\tint check1 = 0, check2 = 0;\r\n\t\tint check11, check22;\r\n\t\tint countera = 0, counterb = 0;\r\n\t\t\r\n\t\tfor(int i = 0; i<string; i++){\r\n\t\t\tif(ab[i] == 'a'){\r\n\t\t\t\tcountera++;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcounterb++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(countera == counterb && check1 == 0 && countera > 1){\r\n\t\t\t\tcheck1 = 1;\r\n\t\t\t\tcheck11 = i + 1;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(ab[i] == 'a' && ab[i+1] == 'b' && check2 == 0){\r\n\t\t\t\tcheck2 = 1;\r\n\t\t\t\tcheck22 = i + 1;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(ab[i] == 'b' && ab[i+1] == 'a' && check2 == 0){\r\n\t\t\t\tcheck2 = 1;\r\n\t\t\t\tcheck22 = i + 1;\r\n\t\t\t\t\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif(countera == counterb){\r\n\t\t\tprintf(\"1 %d\\n\", string);\r\n\t\t}\r\n\t\telse if(check1 == 1){\r\n\t\t\tprintf(\"1 %d\\n\", check11);\r\n\t\t}\r\n\t\telse if(check2 == 1){\r\n\t\t\tprintf(\"%d %d\\n\", check22, check22 + 1);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"-1 -1\\n\");\r\n\t\t}\r\n\t\t\r\n\t}\t\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.975363941769317, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c9635aa216a3a83845bdf5e675f27ebd", "bug_code_uid": "bdcc72a0d2ebe2285595ed84a7489cc3", "src_uid": "783772cb7a54bf65f648d3f8b7648263", "apr_id": "de7d1e4905cbe6c130bc9baf5c4c8883", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid calc()\n{\n    long long a,b,c,r,temp=0,res;\n    scanf(\"%lld\",&a);\n    scanf(\"%lld\",&b);\n    scanf(\"%lld\",&c);\n    scanf(\"%lld\",&r);\n    if(a>b)\n    {\n        temp=a;\n        a=b;\n        b=temp;\n    }\n    if(a<=c&&c<=b)\n    {\n       if(c+r>=b&&c-r<=a)\n       res=0;\n       if(c+r>=b&&c-r>a)\n       res=b-a-(b-c)-r;\n       if(c-r<=a&&c+r<b)\n       res=b-a-(c-a)-r;\n        if(a==b)\n        res=0;\n        if(res<0)\n        res=0;\n       \n    }\n    if(a>c)\n    {\n        if(c+r-a>0)\n        res=b-a-(c+r-a);\n        else\n        res=b-a;\n        if(res<0)\n        res=0;\n    }\n    if(b<c)\n    {\n        if(b-(c-r)>0)\n        res=b-a-(b-(c-r));\n        else\n        res=b-a;\n        if(res<0)\n        res=0;\n    }\n    \n    printf(\"%lld\\n\",res);\n\n    \n}\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    calc();\n    return 0;\n    \n}", "fixed": "#include<stdio.h>\nvoid calc()\n{\n    long long a,b,c,r,temp=0,res;\n    scanf(\"%lld\",&a);\n    scanf(\"%lld\",&b);\n    scanf(\"%lld\",&c);\n    scanf(\"%lld\",&r);\n    if(a>b)\n    {\n        temp=a;\n        a=b;\n        b=temp;\n    }\n    if(a<=c&&c<=b)\n    {\n       if(c+r>=b&&c-r<=a)\n       res=0;\n       if(c+r>=b&&c-r>a)\n       res=b-a-(b-c)-r;\n       if(c-r<=a&&c+r<b)\n       res=b-a-(c-a)-r;\n       if(c-r>a&&c+r<b)\n       res=b-a-2*r;\n        if(a==b)\n        res=0;\n        if(res<0)\n        res=0;\n       \n    }\n    if(a>c)\n    {\n        if(c+r-a>0)\n        res=b-a-(c+r-a);\n        else\n        res=b-a;\n        if(res<0)\n        res=0;\n    }\n    if(b<c)\n    {\n        if(b-(c-r)>0)\n        res=b-a-(b-(c-r));\n        else\n        res=b-a;\n        if(res<0)\n        res=0;\n    }\n    \n    printf(\"%lld\\n\",res);\n\n    \n}\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    calc();\n    return 0;\n    \n}"}
{"similarity_score": 0.25510204081632654, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7ae53a0c3facbda1ea5ffaf09807d046", "bug_code_uid": "1ed66972640d324dc2a92aafd98bcd5f", "src_uid": "09236a3faa7fce573a4e5e758287040f", "apr_id": "2e33685372bf36999cd2cb9cdf371e85", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint testCases,planks,sum,heights[1000];\n\nint main ()\n{\n \n\t//freopen (\"cf.in\",\"r\",stdin),freopen(\"cf.out\",\"w\",stdout);\n\tscanf (\"%d\",&testCases);\n\twhile (testCases--)\n\t{\n\t\tsum = 0;\n\t\tscanf (\"%d\",&planks);\n\t\tfor (int i=0;i<planks;i++)\n\t\t{\n\t\t\tscanf (\"%d\",&heights[i]);\n\t\t\tsum += heights[i];\n\t\t}\n\t\tprintf (\"%d\\n\",sum/planks);\n\t}\n}", "fixed": "#include <stdio.h>\n \nint testCases,planks,k,heights[1000],possible[1000];\n \n\nvoid sort ()\n{\n\tfor (int i=0;i<planks;i++)\n\t{\n\t\tfor (int j=i+1;j<planks;j++)\n\t\t{\n\t\t\tif (heights[i]<heights[j])\n\t\t\t{\n\t\t\t\tint temp = heights[j];\n\t\t\t\theights[j] = heights[i];\n\t\t\t\theights[i] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint findmax (int arr[])\n{\n\tint max = arr[0];\n\tfor (int i=0;i<=k;i++)\n\t{\n\t\tif (arr[i]>max) max = arr[i];\n\t}\n\treturn max;\n}\n\nvoid destroy ()\n{\n\tfor (int i=0;i<planks;i++)\n\t{\n\t\theights[i] = possible [i] = 0;\n\t}\n}\nint main ()\n{\n \n\t//freopen (\"cf.in\",\"r\",stdin),freopen(\"cf.out\",\"w\",stdout);\n\tscanf (\"%d\",&testCases);\n\twhile (testCases--)\n\t{\n\t\tk = 0;\n\t\tdestroy ();\n\t\tscanf (\"%d\",&planks);\n\t\tfor (int i=0;i<planks;i++)\n\t\t{\n\t\t\tscanf (\"%d\",&heights[i]);\n\t\t}\n\t\tsort ();\n\t\tfor (int i=0;i<planks;i++)\n\t\t{\n\t\t\tfor (int j=i-1;j>=0;j--)\n\t\t\t{\n\t\t\t\tif (heights[j]>=heights[i])\n\t\t\t\t{\n\t\t\t\t\tpossible [k] ++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpossible[k]++;\n\t\t\tif (possible[k]>heights[i])\n\t\t\t{\n\t\t\t\tpossible[k] = heights[i];\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t\tprintf(\"%d\\n\",findmax(possible));\n\t}\n}"}
{"similarity_score": 0.9592850049652433, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9147e924105ff537f65aeb475e60e657", "bug_code_uid": "6c06ba9779125663f93e14eff211b808", "src_uid": "7a8c4ba98a77097faff625b94889b365", "apr_id": "d445a5c8f45601571ff9e4477169e01f", "difficulty": 900, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\nint t;\n\nvoid solve() {\n    int n; scanf(\"%d\", &n);\n    \n    bool ok = true;\n    int a, need = 0;\n    long long sum = 0;\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a);\n        need += i;\n        sum += (long long) a;\n\n        if ((long long) sum < need) {ok = false; break ;}\n    }\n\n    if (ok) printf(\"YES\");\n    else printf(\"NO\");\n}\n\nint main (int argc, char *argv[]) {\n\n    scanf(\"%d\", &t);\n\n    while(t--) { solve(); printf(\"\\n\"); }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n\nint t;\n\nvoid solve() {\n    int n; scanf(\"%d\", &n);\n    \n    bool ok = true;\n    int a, need = 0;\n    long long sum = 0;\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a);\n        need += i;\n        sum += (long long) a;\n\n        if (ok && (long long) sum < need) ok = false;\n    }\n\n    if(ok) printf(\"YES\");\n    else printf(\"NO\");\n}\n\nint main (int argc, char *argv[]) {\n\n    scanf(\"%d\", &t);\n\n    while(t--) { solve(); printf(\"\\n\"); }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8948948948948949, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "847f09a6021e3aa19cb79a91f0b57f3c", "bug_code_uid": "c18fc461967492f64fd63c6edaeffd0a", "src_uid": "fce9d78ad7d4ea01be1704f588e42d37", "apr_id": "4a88b595864dcf5cf4c755a6fbf77843", "difficulty": 1100, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n\tint R,d,n;\n\tscanf(\"%d%d%d\",&R,&d,&n);\n\tint x,y,r,i;\n\tint count=0;\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&r);\n\t\tint dist = x*x+y*y;\n\t\tdist = pow(dist,1.0/2.0);\n\t\tif((dist-r)>=(R-d) && (dist+r)<=R)\n\t\t\tcount++;\n\t}\n\tprintf(\"%d\\n\",count);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n\tfloat R,d,n;\n\tscanf(\"%f%f%f\",&R,&d,&n);\n\tfloat x,y,r;\n\tint i;\n\tint count=0;\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%f%f%f\",&x,&y,&r);\n\t\tfloat dist = (x*x)+(y*y);\n\t\tdist = pow(dist,1.0/2.0);\n\t\tif((dist-r)>=(R-d) && (dist+r)<=R)\n\t\t\tcount++;\n\t}\n\tprintf(\"%d\\n\",count);\n\n\treturn 0;\n}"}
{"similarity_score": 0.9308755760368663, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "62161c6f92154ee7f1a03f39d37302d5", "bug_code_uid": "9d86a5156c74248a838e15c809dd1ab4", "src_uid": "3bff9b69423cf6c8425e347a4beef96b", "apr_id": "80a7d9e5430570f6e89231e6517a0458", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x,y,i,j=0;\n    char a[15];\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%s %d %d\",&a,&x,&y);\n        if(x >= 2400)\n        {\n            j++;\n        }\n    }\n    if(j == n)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,x,y,i,j=0;\n    char a[15];\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%s %d %d\",&a,&x,&y);\n        if(x >= 2400 && y-x > 0)\n        {\n            j++;\n        }\n    }\n    if(j >= 1)\n    {\n        printf(\"YES\\n\");\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9825918762088974, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9a63eb8d8a611d776adb600b9fdbef2c", "bug_code_uid": "635cd0e7250bc2dd842934da698884f2", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "3c57af42e66bca9cbf6f0e8cf78360a3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n, i,count = 0,k,j;\n\tscanf(\"%d\", &n);\n\tint sq = n * n;\n\tfor(i = 1; i <= n*n/2; i = i + n/2)\n\t{\n\t\t//for(k = 1; k <= n; k++)\n\t\t\tfor(j=i; j < i + n / 2; j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d \",j,sq-j+1);\n\t\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n, i,count = 0,k,j;\n\tscanf(\"%d\", &n);\n\tint sq = n * n;\n\tfor(i = 1; i <= n*n/2; i = i + n/2)\n\t{\n\t\t//for(k = 1; k <= n; k++)\n\t\t\tfor(j=i; j < i + n / 2; j++)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d \",j,sq-j+1);\n\t\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9044006069802731, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b1379016bae7ad478cf81b1b971175fe", "bug_code_uid": "10831816e283175d81dd47d8779d44be", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "9d940d4f25d3be3a194b93fd6f430369", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int  x ,y,z,firsty=0,firstz=0,counter=0 ;\n    int flagy=0,flagz=0;\n    scanf(\"%lld %lld %lld\",&x,&y,&z);\n    firsty = y/x;\n    firstz = z/x ;\n    if(firsty*x < y)\n        firsty++;\n    counter=firstz-firsty + 1;\n    printf(\"%lld\",counter);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int  x ,y,z,firsty=0,firstz=0,counter=0 ;\n    scanf(\"%lld %lld %lld\",&x,&y,&z);\n    firsty = y/x;\n    firstz = z/x ;\n    if(firsty*x < y)\n        firsty++;\n    if (firstz*x>z)\n        firstz--;\n    counter=firstz-firsty + 1;\n    printf(\"%lld\",counter);\n    return 0;\n}\n"}
{"similarity_score": 0.23809523809523808, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "aae5d96419987e93b9d30754306de5e2", "bug_code_uid": "afb36b1c8c49b840f5dd176305b0e7f5", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "bcd33d449a35620a53331ae5f00e2ffe", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint j[100002],k[100002];\nlong int size1,size2,a,b,\nint i,l,n=0,o=0;\nscanf(\"%d %d\",&size1,&size2);\nscanf(\"%d %d\",&a,&b);\nfor(i=0;i<size1;i++){\nscanf(\"%d\",&j[i]);\n}\nfor(l=size1;l<size1+size2;l++){\nscanf(\"%d\",&k[l]);\n}\nfor(i=0;i<size1;i++){\nfor(l=size1;l<size1+size2;l++){\nif(j[i]<k[l]){\nn++;\n}\nif(n>=b){\no++;\n}\n}\nn=0;\n}\nif(o>=a){\nprintf(\"YES\");\n}\nelse{\nprintf(\"NO\");\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b,k,m,ara1[100000+5],ara2[100000+5],i;\n\n    scanf(\"%I64d %I64d\",&a,&b);\n    scanf(\"%I64d %I64d\",&k,&m);\n\n    for(i=1;i<=a;i++){\n        scanf(\"%I64d\",&ara1[i]);\n    }\n    for(i=1;i<=b;i++){\n        scanf(\"%I64d\",&ara2[i]);\n    }\n    if(ara1[k]<ara2[b-m+1]){\n        printf(\"YES\");\n    }\n    else{\n        printf(\"NO\");\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.8780487804878049, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7631a03d89d1bf55ac208bdabc1c0240", "bug_code_uid": "7963a9732ee573efdbdb4bfb2e0ac43f", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "eab1e7cf5e5fa76892f1e8f38d7a7bb8", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c[100],d[100],i;\n    double res=0,smallest=0,result=0,p,q;\n    scanf(\"%d%d\",&a,&b);\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d%d\",&c[i],&d[i]);\n       \n    }\n    smallest = (double)c[0]/d[0];\n    for(i=1;i<a;i++)\n    {\n        if((double)c[i]/d[i]<smallest)\n        {\n            smallest = (double)c[i]/d[i];\n        }\n        \n    }\n    result=smallest*b;\n    printf(\"%0.8f\",result);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int a,b,i;\n    double res=0,smallest=0,result=0,p,q;\n    scanf(\"%d%d\",&a,&b);\n    int* c = (int *)malloc(a*sizeof(int));\n    int* d = (int *)malloc(a*sizeof(int));\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d%d\",&c[i],&d[i]);\n       \n    }\n\n    smallest = (double)c[0]/d[0];\n    for(i=1;i<a;i++)\n    {\n        if((double)c[i]/d[i]<smallest)\n        {\n            smallest = (double)c[i]/d[i];\n        }\n        \n    }\n    result=smallest*b;\n    printf(\"%0.8f\",result);\n    return 0;\n}"}
{"similarity_score": 0.9992821249102656, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "22fda466482a998a503612b0b52cc4e6", "bug_code_uid": "428975905272ef5032119223641d3c46", "src_uid": "c40cb0a89c2b604aa7384476b57e96b3", "apr_id": "2feffd641c3b4dc30cba268237e1d465", "difficulty": 1600, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nint cmp(const void *a, const void *b) {\n    return (*(int *)a - *(int *)b);\n}\n\n#define SWAP(x, y) {    \\\n    int z;              \\\n    z = x;              \\\n    x = y;              \\\n    y = z;              \\\n}\n\n#define MAX(x, y) (((x) > (y)) ? (x) : (y))\n#define MIN(x, y) (((x) < (y)) ? (x) : (y))\n\nint main(void) {\n    int n = 0;\n    scanf(\"%d\", &n);\n\n    printf(\"%d\\n\", n + (n / 2));\n\n    for (int i = 2; i <= n; i += 2) {\n        printf(\"%d \", i);\n    }\n\n    for (int i = 1; i < n; i += 2) {\n        printf(\"%d \", i);\n    }\n\n    for (int i = 2; i <= n; i += 2) {\n        printf(\"%d \", i);\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nint cmp(const void *a, const void *b) {\n    return (*(int *)a - *(int *)b);\n}\n\n#define SWAP(x, y) {    \\\n    int z;              \\\n    z = x;              \\\n    x = y;              \\\n    y = z;              \\\n}\n\n#define MAX(x, y) (((x) > (y)) ? (x) : (y))\n#define MIN(x, y) (((x) < (y)) ? (x) : (y))\n\nint main(void) {\n    int n = 0;\n    scanf(\"%d\", &n);\n\n    printf(\"%d\\n\", n + (n / 2));\n\n    for (int i = 2; i <= n; i += 2) {\n        printf(\"%d \", i);\n    }\n\n    for (int i = 1; i <= n; i += 2) {\n        printf(\"%d \", i);\n    }\n\n    for (int i = 2; i <= n; i += 2) {\n        printf(\"%d \", i);\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n}"}
{"similarity_score": 0.9927536231884058, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7e0cca2f10273515b8e3a6c61a1e2f78", "bug_code_uid": "9fdbef3e11d3a53a7b6cb8605720ba28", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "ba63b9b24a7de1353d517db60a50b8b8", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint x[10000];\nint y[10000];\nvoid makesort(int arr[], int n)\n{\n    int i,tem,j,k;\n    for (i =1;i<n;i++)\n    {\n        tem=x[i];\n        k=y[i];\n        j=i-1;\n        for(;j>=0&&x[j]>tem;j++)\n       {\n           x[j+1]=x[j];\n            y[j+1]=y[j];\n       }\n       x[j+1]=tem;\n       y[j+1]=k;\n   }\n}\n\nint main()\n{\n    int n,s,i=0;\n    scanf(\"%d%d\",&s,&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&x[i],&y[i]);\n\n    makesort(x,n);\n\n    for (i=0;i<n;i++)\n        {\n            if(s>x[i])\n                s+=y[i];\n\n            else\n            {\n                printf(\"NO\\n\");\n                return 0;\n            }\n        }\n        printf(\"YES\\n\");\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nint x[10000];\nint y[10000];\nvoid makesort(int arr[], int n)\n{\n    int i,tem,j,k;\n    for (i=1;i<n;i++)\n    {\n        tem=x[i];\n        k=y[i];\n        j=i-1;\n        for(;j>=0&&x[j]>tem;j--)\n       {\n           x[j+1]=x[j];\n        y[j+1]=y[j];\n       }\n       x[j+1]=tem;\n       y[j+1]=k;\n   }\n}\n\nint main()\n{\n    int n,s,i=0;\n    scanf(\"%d%d\",&s,&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&x[i],&y[i]);\n\n    makesort(x,n);\n\n\n    for (i=0;i<n;i++)\n        {\n            if(s>x[i])\n                s+=y[i];\n\n            else\n            {\n                printf(\"NO\\n\");\n                return 0;\n            }\n        }\n        printf(\"YES\\n\");\n        return 0;\n}\n"}
{"similarity_score": 0.9906832298136646, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "6f8b3d5b3d3c879fcd01e20ffb4803e3", "bug_code_uid": "7aa3deff962af1b8fd2dfd5e00827159", "src_uid": "22ef37041ebbd8266f62ab932f188b31", "apr_id": "f9c2e207c4e79536bce622731ef0c9c5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,n,s,t,s1=0,s2=0;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n scanf(\"%d %d\",&s,&t);\n for(i=s;i!=t;i++)\n {\n \n s1+=a[i-1];\n if(i>n)\n i=n-i;\n}\n \n for(i=t;i!=s;i++)\n {\n s2+=a[i-1];\nif(i>n)\ni=n-i;\n}\nif(s1>s2)\nprintf(\"%d\",s2);\nelse\nprintf(\"%d\",s1);\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint i,n,s,t,s1=0,s2=0;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n scanf(\"%d %d\",&s,&t);\n for(i=s;i!=t;i++)\n {\n\n s1+=a[i-1];\n if(i>=n)\n i=n-i;\n}\n\n for(i=t;i!=s;i++)\n {\n s2+=a[i-1];\nif(i>=n)\ni=n-i;\n}\nif(s1>s2)\nprintf(\"%d\",s2);\nelse\nprintf(\"%d\",s1);\nreturn 0;\n}\n"}
{"similarity_score": 0.24125874125874125, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "bdf8accf848671b08375d27467c94fd5", "bug_code_uid": "a4ab35e2a1d3f7a4ccfed6395525cc25", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "15363072dcfdca3ddd855f06de74a2d5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint Ways(int n){\n    int a,count=0;\n    for(a=1;a<=n/2;a++){\n         if(a > n-a){\n        count++;\n         }\n    } \n    return count;\n}\n\nint main(){\n    int t,n,i,x;\n    scanf(\"%d\\n\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d\\n\",&n);\n      x=Ways(n);\n       printf(\"%d\\n\",x); \n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint Ways(int n){\n   if(n%2==0) return (n/2)-1;\n    return n/2; \n}\n\nint main(){\n    int t,n,i,x;\n    scanf(\"%d\\n\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d\\n\",&n);\n      x=Ways(n);\n       printf(\"%d\\n\",x); \n    }\n    return 0;\n}"}
{"similarity_score": 0.6527677929547089, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "c3f955bc6ada47eb1eebca2e751ad905", "bug_code_uid": "f5ed5551e7a036954f5754883d35a6af", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "d789db9ce6b3d922c88aea175447c465", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i, j, a, n;\n    scanf(\"%d\", &n);\n    int arr[n];\n\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n\n    a = arr[0];\n    for(i = 0; i < n; i++)\n    {\n        if(a < arr[i])\n        {\n            a = arr[i];\n        }\n    }\n\n    j = 0;\n    while(1)\n    {\n        for(i = 0; i < n; i++)\n        {\n            if(arr[i] == j)\n            {\n                if(j%2 == 1)\n                    arr[i] = (j+1);\n                else\n                    arr[i] = (j-1);\n            }\n        }\n        j++;\n        if(j == a+1)\n            break;\n    }\n\n    for(i = 0; i < n; i++)\n    {\n        printf(\"%d \", arr[i]);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i, j, k, n;\n    scanf(\"%d\", &n);\n    int arr[n];\n\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n\n    for(j = 0; j < n; j++)\n    {\n        for(i = 0; i < n; i++)\n        {\n            k = arr[j];\n            while(1)\n            {\n                if(arr[i] == k)\n                {\n                    if(k%2 == 1)\n                        arr[i] = (k+1);\n                    else\n                        arr[i] = (k-1);\n                }\n                k++;\n                if(k == arr[j]+2)\n                    break;\n\n            }\n        }\n    }\n\n    for(i = 0; i < n; i++)\n    {\n        printf(\"%d \", arr[i]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9965831435079726, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0cdc7fdf6a6c9122afb78fda1444f98e", "bug_code_uid": "6f93c16437a79ae572ae6f4bea85370e", "src_uid": "d6f01ece3f251b7aac74bf3fd8231a80", "apr_id": "db76a6d93c24098c119534200bac1482", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int i,j,a[150]={0},l;\n    char s[28],s1[28],s2[27],c;\n    while(scanf(\"%c\",&s[1])==1)\n    {\n        a[s[1]]=1;\n        a[toupper(s[1])]=1;\n        for(i=2;i<=27;i++)\n        {\n            scanf(\"%c\",&s[i]);\n            a[s[i]]=i;\n            a[toupper(s[i])]=i;\n        }\n        for(i=1;i<=27;i++)\n        {\n            scanf(\"%c\",&s1[i]);\n        }\n        gets(s2);\n        l=strlen(s2);\n        for(i=0;i<l;i++)\n        {\n            if(isalpha(s2[i])<=0)\n            {\n                printf(\"%c\",s2[i]);\n            }\n            else if(isupper(s2[i])>0)\n            {\n                c=s1[a[s2[i]]];\n                printf(\"%c\",toupper(c));\n            }\n            else\n            {\n                printf(\"%c\",s1[a[s2[i]]]);\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int i,j,a[150]={0},l;\n    char s[28],s1[28],s2[1001],c;\n    while(scanf(\"%c\",&s[1])==1)\n    {\n        a[s[1]]=1;\n        a[toupper(s[1])]=1;\n        for(i=2;i<=27;i++)\n        {\n            scanf(\"%c\",&s[i]);\n            a[s[i]]=i;\n            a[toupper(s[i])]=i;\n        }\n        for(i=1;i<=27;i++)\n        {\n            scanf(\"%c\",&s1[i]);\n        }\n        gets(s2);\n        l=strlen(s2);\n        for(i=0;i<l;i++)\n        {\n            if(isalpha(s2[i])<=0)\n            {\n                printf(\"%c\",s2[i]);\n            }\n            else if(isupper(s2[i])>0)\n            {\n                c=s1[a[s2[i]]];\n                printf(\"%c\",toupper(c));\n            }\n            else\n            {\n                printf(\"%c\",s1[a[s2[i]]]);\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6624472573839663, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5f621a39902042c790b7f33daaae02f3", "bug_code_uid": "ad763ad9a0b5f248de59df3dfffe18d9", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "b219443d0abb317e03871d5443fbd1bb", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        long tri;\n        if(n<=2)\n        {\n            printf(\"%d\\n\",n);\n        }\n        else\n        {\n            tri=(n-1)*2;\n            printf(\"%ld\\n\",tri);\n        }\n        \n\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        printf(\"%d\\n\",n);\n    }\n}"}
{"similarity_score": 0.22641509433962265, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "c97ca45acaf924b2678b558c7de6e494", "bug_code_uid": "6a1d00358cf0ab47360b76514b356bcf", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "766e1a025ce31bbee0d951df331e02b9", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid main()\r\n{\r\n    char a[2][20];\r\n    int i,t;\r\n    scanf(\"$d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n            scanf(\"%s\",a[i]);\r\n    }\r\n    for(i=0;i<t;i++)\r\n    {\r\n            if(a[i]=='YES') printf(\"%s\\n\",a[i]);\r\n            else if(a[i]=='yES') printf(\"YES\\n\");\r\n            else if(a[i]=='yes') printf(\"YES\\n\");\r\n            else if(a[i]=='Yes') printf(\"YES\\n\");\r\n            else if(a[i]=='YeS') printf(\"YES\\n\");\r\n            else printf(\"NO\\n\");\r\n    }\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main(){\r\n\r\n    int t,n;\r\n    scanf(\"%d\", &t);\r\n    while (t--){\r\n\r\n        char a[t];\r\n        scanf(\"%s\", a);\r\n        n = strlen(a);\r\n        if(('Y'==a[0] || 'y'==a[0]) && ('E'==a[1] || 'e'==a[1]) && ('S'==a[2] || 's'==a[2]))\r\n            printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9984051036682615, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "eb70052bbe7c60e9e1c7a465e320a979", "bug_code_uid": "8d42516e159c44c43c28f523bbf53c45", "src_uid": "d19c7a74d739c2ca0d568808862ba2bd", "apr_id": "5bd28f8712038373d89ffbce194b128d", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct\n{\n\tint id,value;\n} Player_t;\nPlayer_t A[100000];\n\nint cmp1(const void *a,const void *b)\n{\n\treturn (*(Player_t *)a).value-(*(Player_t *)b).value;\n}\n\nint cmp2(const void *a,const void *b)\n{\n\treturn (*(Player_t *)a).id-(*(Player_t *)b).id;\n}\n\nint main()\n{\n\tint N,i;\n\tscanf(\"%d\",&N);\n\tfor(i=0;i<N;++i)\n\t{\n\t\tscanf(\"%d\",&A[i].value);\n\t\tA[i].id=i;\n\t}\n\tqsort(A,N,sizeof(Player_t),cmp1);\n\tfor(i=1;i<N;++i)\n\t{\n\t\tif(A[i].value<=A[i-1].value)\n\t\t{\n\t\t\tA[i].value=A[i-1].value+1;\n\t\t}\n\t}\n\tqsort(A,N,sizeof(Player_t),cmp2);\n\tfor(i=0;i<N;++i)\n\t{\n\t\tprintf(\"%d \",A[i].value);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct\n{\n\tint id,value;\n} Player_t;\nPlayer_t A[300000];\n\nint cmp1(const void *a,const void *b)\n{\n\treturn (*(Player_t *)a).value-(*(Player_t *)b).value;\n}\n\nint cmp2(const void *a,const void *b)\n{\n\treturn (*(Player_t *)a).id-(*(Player_t *)b).id;\n}\n\nint main()\n{\n\tint N,i;\n\tscanf(\"%d\",&N);\n\tfor(i=0;i<N;++i)\n\t{\n\t\tscanf(\"%d\",&A[i].value);\n\t\tA[i].id=i;\n\t}\n\tqsort(A,N,sizeof(Player_t),cmp1);\n\tfor(i=1;i<N;++i)\n\t{\n\t\tif(A[i].value<=A[i-1].value)\n\t\t{\n\t\t\tA[i].value=A[i-1].value+1;\n\t\t}\n\t}\n\tqsort(A,N,sizeof(Player_t),cmp2);\n\tfor(i=0;i<N;++i)\n\t{\n\t\tprintf(\"%d \",A[i].value);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9723814486711829, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "eaa408ad3a4e77941120c7faf1c0d0d4", "bug_code_uid": "86fc9c83ab4d8cd2d20a3164bb7c2173", "src_uid": "742e4e6ca047da5f5ebe5d854d6a2024", "apr_id": "3bd6b8b6f2df929326ab393e01f49abb", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\nint main()\n{\n    int n,m,i,j,k,l,d1,d2,d3,d4;\n    char tab[50][50];\n    int nb=0;\n    do\n    {\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&m);\n    } while ( (n<1) || (n>50) || (m<1) || (m>50));\n    for (i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%s\",&tab[i][j]);\n        }\n    }\n    for (i=0;i<n-1;i++)\n    {\n        for(j=0;j<m-1;j++)\n        {   d1=0;\n            d2=0;\n            d3=0;\n            d4=0;\n            for (k=0;k<2;k++)\n            {\n                for (l=0;l<2;l++)\n                {\n                    if ( tab[i+k][j+l] =='f') { d1=1;}\n                    if ( tab[i+k][j+l] =='a') { d2=1;}\n                    if ( tab[i+k][j+l] =='c') { d3=1;}\n                    if ( tab[i+k][j+l] =='e') { d4=1;}\n                }\n            }\n            if (d1&&d2&&d3&&d4)\n            {\n                nb++;\n            }\n        }\n    }\n    printf(\"%d\\n\",nb);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\nint main()\n{\n    int n,m,i,j,k,l,d1,d2,d3,d4;\n    char tab[50][50];\n    int nb=0;\n    do\n    {\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&m);\n    } while ( (n<1) || (n>50) || (m<1) || (m>50));\n    for (i=0;i<n;i++)\n    {\n            scanf(\"%s\",tab[i]);\n    }\n    for (i=0;i<n-1;i++)\n    {\n        for(j=0;j<m-1;j++)\n        {   d1=0;\n            d2=0;\n            d3=0;\n            d4=0;\n            for (k=0;k<2;k++)\n            {\n                for (l=0;l<2;l++)\n                {\n                    if ( tab[i+k][j+l] =='f') { d1=1;}\n                    if ( tab[i+k][j+l] =='a') { d2=1;}\n                    if ( tab[i+k][j+l] =='c') { d3=1;}\n                    if ( tab[i+k][j+l] =='e') { d4=1;}\n                }\n            }\n            if (d1&&d2&&d3&&d4)\n            {\n                nb++;\n            }\n        }\n    }\n    printf(\"%d\\n\",nb);\n    return 0;\n}\n"}
{"similarity_score": 0.7518394648829432, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9794a567ecf23d04c39745b57d936121", "bug_code_uid": "57b9316d61694275f85517aa795c97ac", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "2b65f315524ad21680b583ebdfd65961", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t; //t:test cases,a: time to refreshed,b:time before the first alarm goes off ,c:time before every succeeding alarm goes off .\n    long long int a,b,c,d,count=1,dif ; // d: time spends to fall asleep again.\n    scanf(\"%d\",&t);\n    long long int results[t];\n    for(int i=0; i<t; i++)\n    {\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n        dif=c-d;\n        if(d>c&&a>b)\n            results[i]=-1;\n        else if(b>=a)\n            results[i]=b;\n        else\n        {\n            while((b+dif*count)<a)\n                count++;\n            results[i]=b+c*count;\n        }\n    }\n    for(int i=0; i<t; i++)\n        printf(\"%lld\\n\",results[i]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int t; //t:test cases,a: time to refreshed,b:time before the first alarm goes off ,c:time before every succeeding alarm goes off .\n    long long int a,b,c,d; // d: time spends to fall asleep again.\n    scanf(\"%d\",&t);\n    long long int results[t];\n    for(int i=0; i<t; i++)\n    {\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n        if(d>=c&&a>b)\n            results[i]=-1;\n        else if(b>=a)\n            results[i]=b;\n        else if(a>b&&c>d)\n        {  long long int dif_1=c-d,dif_2=a-b,multiple=(dif_2/dif_1);\n            if(dif_2%dif_1!=0)\n                multiple+=1;\n            results[i]=b+c*(multiple);\n        }\n    }\n    for(int i=0; i<t; i++)\n        printf(\"%lld\\n\",results[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.9623824451410659, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "f70ff4ea5f6c80ae1fcbef78b927875f", "bug_code_uid": "dea334b3917050671681268dd33812a9", "src_uid": "1ae2942b72ebb7c55359c41e141900d7", "apr_id": "75a17d40a2d2a88177460180ea4e912c", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{long long int a,b,c,d,e,p,q,r,i,j,sum=0;\n long long int x[70],y[7]={0};\n scanf(\"%lld\",&p);\nfor(i=0;i<p;i++)\nscanf(\"%lld\",&x[i]);\n scanf(\"%lld %lld %lld %lld %lld\",&a, &b, &c, &d, &e);\nfor(i=0;i<p;i++)\n{sum=sum+x[i];\n if(sum>=e)\n  {y[4]=y[4]+(sum/e);\n   sum=sum-(sum/e)*e;}\n\n if(sum>=d)\n  {y[4]=y[4]+(sum/d);\n   sum=sum-(sum/d)*d;}\nif(sum>=c)\n  {y[4]=y[4]+(sum/c);\n   sum=sum-(sum/c)*c;}\nif(sum>=b)\n  {y[4]=y[4]+(sum/b);\n   sum=sum-(sum/b)*b;}\nif(sum>=a)\n  {y[4]=y[4]+(sum/a);\n   sum=sum-(sum/a)*a;}}\nfor(i=0;i<5;i++)\n { printf(\"%lld \",y[i]);}\n printf(\"\\n\");\n printf(\"%lld\",sum);\nreturn 0;}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{long long int a,b,c,d,e,p,q,r,i,j,sum=0;\n long long int x[70],y[7]={0};\n scanf(\"%lld\",&p);\nfor(i=0;i<p;i++)\nscanf(\"%lld\",&x[i]);\n scanf(\"%lld %lld %lld %lld %lld\",&a, &b, &c, &d, &e);\nfor(i=0;i<p;i++)\n{sum=sum+x[i];\n if(sum>=e)\n  {y[4]=y[4]+(sum/e);\n   sum=sum-(sum/e)*e;}\n\n if(sum>=d)\n  {y[3]=y[3]+(sum/d);\n   sum=sum-(sum/d)*d;}\nif(sum>=c)\n  {y[2]=y[2]+(sum/c);\n   sum=sum-(sum/c)*c;}\nif(sum>=b)\n  {y[1]=y[1]+(sum/b);\n   sum=sum-(sum/b)*b;}\nif(sum>=a)\n  {y[0]=y[0]+(sum/a);\n   sum=sum-(sum/a)*a;}}\nfor(i=0;i<5;i++)\n { printf(\"%lld \",y[i]);}\n printf(\"\\n\");\n printf(\"%lld\",sum);\nreturn 0;}"}
{"similarity_score": 0.7785016286644951, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "8945b04b88a316a5e714e2406fa455fb", "bug_code_uid": "4dfdb7c14c1e71d89bcdf265a7b2324e", "src_uid": "13611e428c24b94023811063bbbfa077", "apr_id": "f56703f9061356084bb612d26fc38d8b", "difficulty": 800, "tags": ["games", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int n,m;\r\n    while(t){\r\n        scanf(\"%d%d\",&n,&m);\r\n    if(n%2==0 || m%2==0)\r\n        printf(\"Burenka\\n\");\r\n    else\r\n        printf(\"Tonya\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t>0){\r\n    int n,m;\r\n    scanf(\"%d %d\",&n,&m);\r\n    if((n%2==0 && m%2!=0)||(n%2!=0 && m%2==0))\r\n       {\r\n         printf(\"Burenka\\n\");\r\n       }\r\n    else\r\n        {\r\n            printf(\"Tonya\\n\");}\r\n    t--;\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8380503144654088, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "821ae079a80fe85e64e74ca3bdd37d87", "bug_code_uid": "dabde6a0ae7c8484bb19fe10c54d8ad3", "src_uid": "be8be333d036f6c19b9a6eb33f96ba75", "apr_id": "3d97832cb09c3fa469842c96122174b2", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/* Coached by rainboy */\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N 200000\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tstatic int aa[N];\n\tint n, k, i, j, cnt;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tqsort(aa, n, sizeof *aa, compare);\n\tcnt = n;\n\tfor (i = 0; i < n; i = j) {\n\t\tint a = aa[i];\n\n\t\tfor (j = i + 1; j < n && aa[j] == a; j++)\n\t\t\t;\n\t\tif (j < n && aa[j] > a && aa[j] <= a + k)\n\t\t\tcnt -= j - i;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\n#define N 200000\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tstatic int aa[N];\n\tint n, k, i, j, cnt;\n\n\tsrand(time(NULL));\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tfor (j = n - 1; j >= 0; j--) {\n\t\tint tmp;\n\n\t\ti = rand() % (j + 1);\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n\t}\n\tqsort(aa, n, sizeof *aa, compare);\n\tcnt = n;\n\tfor (i = 0; i < n; i = j) {\n\t\tint a = aa[i];\n\n\t\tfor (j = i + 1; j < n && aa[j] == a; j++)\n\t\t\t;\n\t\tif (j < n && aa[j] > a && aa[j] <= a + k)\n\t\t\tcnt -= j - i;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.3605209047292666, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "d23356f1424d6d15917caceab7831c37", "bug_code_uid": "9802d6315840072b541212885624c6d9", "src_uid": "c3a7d82f6c3cf8678a1c7c521e0a5f51", "apr_id": "6346e82ca26a0a7207fe9445a297fc8d", "difficulty": 1200, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define ll long long\n#define rep(i, a, m) for(i = a; i < m; i++)\n\nint main(){\n\tll m, n;\n\tscanf(\"%lld%lld\", &n, &m);\n\tll a[n][m], i, j, k, c = 0;\n\trep(i, 0, n) rep(j, 0, m) scanf(\"%lld\", &a[i][j]);\n\trep(i, 0, n){\n\t\trep(j, 0, m){\n\t\t\tif (!a[i][j]){\n\t\t\t\tfor(k = i + 1; k < n; k++){\n\t\t\t\t\tif (a[k][j] == 1){ c++; break; }\n\t\t\t\t}\n\t\t\t\tfor(k = i - 1; k >= 0; k--){\n\t\t\t\t\tif (a[k][j] == 1){ c++; break; }\n\t\t\t\t}\n\t\t\t\tfor(k = j + 1; k < m; k++){\n\t\t\t\t\tif (a[i][k] == 1){ c++; break; }\n\t\t\t\t}\n\t\t\t\tfor(k = j - 1; k >= 0; k--){\n\t\t\t\t\tif (a[i][k] == 1){ c++; break; }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", c);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define ll long long\n#define rep(i, a, m) for(i = a; i < m; i++)\n\nint main(){\n\tll m, n;\n\tscanf(\"%lld%lld\", &n, &m);\n\tll a[n][m], i, j, k;\n\tint H[n][3], V[m][3];\n\trep(i, 0, n){\n\t\tll c = 0, in = -1, fin = 0;\n\t\trep(j, 0, m){ scanf(\"%lld\", &a[i][j]); if (a[i][j]){ if (in == -1) in = j; fin = j; c++; } }\n\t\tH[i][0] = c; H[i][1] = in; H[i][2] = fin;\n\t}\n\trep(i, 0, m){\n\t\tll c = 0, in = -1, fin = 0;\n\t\trep(j, 0, n){ if (a[j][i]){ if (in == -1) in = j; fin = j; c++; } }\n\t\tV[i][0] = c; V[i][1] = in; V[i][2] = fin;\n\t}\n\tll count = 0;\n\trep(i, 0, n){\n\t\tif (H[i][0]){\n\t\t\tcount += H[i][1] + m - 1 - H[i][2];\n\t\t\tcount += (H[i][2] - H[i][1] + 1 - H[i][0]) * 2;\n\t\t}\n\t}\n\trep(i, 0, m){\n\t\tif (V[i][0]){\n\t\t\tcount += V[i][1] + n - 1 - V[i][2];\n\t\t\tcount += (V[i][2] - V[i][1] + 1 - V[i][0]) * 2;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9863945578231292, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c258f2de282fdbeace15e02886bf7dc8", "bug_code_uid": "8e40253b29adbc57bab7e2b08e59b7b2", "src_uid": "0d5f4320fc2c7662d21e09a51baf21db", "apr_id": "2ffae318e1df0224129fef7d4f54a2df", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int  n,t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t; i++)\r\n        scanf(\"%d\",&n);\r\n\r\n    //even case\r\n\r\n\r\n    if(n%2==0)\r\n    {\r\n        int num1=(n/2);\r\n        int num2=n;\r\n        for(int i=1; i<=(n/2); i++)\r\n        {\r\n            printf(\"%d %d \",num1,num2);\r\n            num1--;\r\n            num2--;\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    //odd case\r\n    else\r\n    {\r\n        int num1=(n/2)+1;\r\n        int num2=n;\r\n        for(int i=1; i<=(n/2); i++)\r\n        {\r\n            printf(\"%d %d \",num1,num2);\r\n            num1--;\r\n            num2--;\r\n        }\r\n        printf(\"1\\n\");\r\n\r\n    }\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int  n,t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n    //even case\r\n    if(n%2==0)\r\n    {\r\n        int num1=(n/2);\r\n        int num2=n;\r\n        for(int i=1; i<=(n/2); i++)\r\n        {\r\n              printf(\"%d %d \",num1,num2);\r\n            num1--;\r\n            num2--;\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    //odd case\r\n    else\r\n    {\r\n        int num1=(n/2)+1;\r\n        int num2=n;\r\n        for(int i=1; i<=(n/2); i++)\r\n        {\r\n            printf(\"%d %d \",num1,num2);\r\n            num1--;\r\n            num2--;\r\n        }\r\n        printf(\"1\\n\");\r\n\r\n    }\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9693251533742331, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "667609004eb018224afc8cb8f3987acd", "bug_code_uid": "3606634112b8ae65ef174b13b4b8a65b", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "1492d7e84c3ca1a463a0bc9bf0021ad1", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,b,min,c;\n    int a[100];\n    scanf(\"%d \",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    min=a[0];\n    b=1;\n    c=0;\n    for(i=1;i<n;i++){\n            if(a[i]==min){\n                c++;\n            }\n            else if(a[i]<min){\n                min=a[i];\n                b=i+1;\n                c=0;\n\n            }\n        }\n  if(c>0){\n    printf(\"Still Rozdil\");\n  }\n  else{\n    printf(\"%d\",b);\n  }\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,b,min,c;\n    long long int a[1000000];\n    scanf(\"%I64d \",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    min=a[0];\n    b=1;\n    c=0;\n    for(i=1;i<n;i++){\n            if(a[i]==min){\n                c++;\n            }\n            else if(a[i]<min){\n                min=a[i];\n                b=i+1;\n                c=0;\n\n            }\n        }\n  if(c>0){\n    printf(\"Still Rozdil\");\n  }\n  else{\n    printf(\"%I64d\",b);\n  }\n\nreturn 0;\n}\n"}
{"similarity_score": 0.3701165181631254, "equal_cnt": 42, "replace_cnt": 29, "delete_cnt": 1, "insert_cnt": 12, "fix_ops_cnt": 42, "lang": "GNU C11", "fix_code_uid": "3054cded936a457740b96f6fb5d59ae9", "bug_code_uid": "b736b43c9ee0e7c2e3c4f4ce29085c29", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "878f97a35cb3c3694d3ebf62326a195f", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char s[100000];\n   scanf(\"%s\",s);\n   int i,j,t1=0,t2=0,l=strlen(s);\n   for(i=0;s[i]!='\\0';i++)\n   {\n      if(s[i]=='A'&&s[i+1]=='B')\n      t1++;\n      else if(s[i]=='B'&&s[i+1]=='A')\n      t2++;\n   }\n   if(t1>0&&t2>0)\n  { printf(\"YES\\n\");continue;}\n  t1=t2=0;\n  for(i=l-1;i>=0;i--)\n  {\n      if(s[i]=='A'&&s[i+1]=='B')\n      t1++;\n      else if(s[i]=='B'&&s[i+1]=='A')\n      t2++;\n  }\n  if(t1>0&&t2>0)\n  { printf(\"YES\\n\");}\n  else\n  printf(\"NO\\n\");\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100110];\n    while(~scanf(\"%s\",&a)){\n        int n = strlen(a);\n        int t1 ,t2 ;\n        t1 = t2 = 0;\n        int i = 0;\n        while(i < n){\n            if(a[i] == 'A' && a[i+1] == 'B'&&t1 == 0){\n            t1++;\n            i++;}\n            else if(a[i] == 'B' && a[i+1] == 'A'&&t2 == 0){\n            t2++;\n            i++;\n            }\n            i++;\n        }\n        if(t1 > 0 && t2 > 0){\n            printf(\"YES\\n\");\n            continue;\n        }\n         i = n-1;\n        t1 = t2 = 0;\n        while(i >= 0){\n            if(a[i] == 'A' && a[i+1] == 'B'&& t1 == 0){\n                t1++;\n                i--;\n            }\n            else if(a[i] == 'B' && a[i+1] == 'A' && t2 == 0){\n                t2++;\n                i--;\n            }\n            i--;\n        }\n        if(t1 > 0 && t2 > 0)\n        printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n        }\n    return 0;\n}"}
{"similarity_score": 0.9958333333333333, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "53fe1d0f641affbb5bae504f67ca53c0", "bug_code_uid": "ccf879adf2ef5e883ff0019870835730", "src_uid": "c3f080681e3da5e1290ef935ff91f364", "apr_id": "d45a262c706f7a79a301c7ccee737f81", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{int i,j,k,l,m,n,t,s=0,c[100]={0},b[100]={0};\nscanf(\"%d%d\",&n,&m);\nfor (i=1;i<=n;i++)\n{scanf(\"%d\",&c[i]);}\nfor (i=1;i<=m;i++)\n{scanf(\"%d\",&b[i]);}\nt=1;\nfor (i=1;i<=n;i++)\n{if (b[t] >=c[i]) t++;}\nprintf(\"%d\",t-1);\n}", "fixed": "#include<stdio.h>\nmain()\n{int i,j,k,l,m,n,t,s=0,c[1001]={0},b[1001]={0};\nscanf(\"%d%d\",&n,&m);\nfor (i=1;i<=n;i++)\n{scanf(\"%d\",&c[i]);}\nfor (i=1;i<=m;i++)\n{scanf(\"%d\",&b[i]);}\nt=1;\nfor (i=1;i<=n;i++)\n{if (b[t] >=c[i]) t++;}\nprintf(\"%d\",t-1);\n}"}
{"similarity_score": 0.8937875751503006, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b7e723bb1999f427aa8f0824ec2e3b3e", "bug_code_uid": "877a94d71b9cbcdf89c1857015e16496", "src_uid": "c489061d9e8587d2e85cad0e2f23f3fb", "apr_id": "b2f9bf71f55c4f82f2b589fb23a6f802", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int fun(long long int a,long long int b){\nlong long int r;\nr=a%b;\nwhile(r!=0){\na=b;\nb=r;\nr=a%b;\n}\nreturn b;\n}\nint main(){\nlong long int n,a[20002],ans=0,i,j,flag=0;\nscanf(\"%lld\",&n);\nfor(i=0;i<n;i++){\nscanf(\"%lld\",&a[i]);\n}\nfor(j=0;j<n;j++){\nfor(i=0;i<n-1;i++){\na[i]=fun(a[i],a[i+1]);\nif(fun(a[i],a[i+1])==1){\nans=j+n;\nflag=1;\nbreak;}\n}\nif(flag==1){\nbreak;}}\nif(flag==1){\nprintf(\"%lld\\n\",ans);\n}\nelse {\nprintf(\"-1\\n\");}\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nlong long int fun(long long int a,long long int b){\nlong long int r;\nr=a%b;\nwhile(r!=0){\na=b;\nb=r;\nr=a%b;\n}\nreturn b;\n}\nint main(){\nlong long int n,a[20002],ans=0,i,j,flag=0,count=0;\nscanf(\"%lld\",&n);\nfor(i=0;i<n;i++){\nscanf(\"%lld\",&a[i]);\nif(a[i]==1){\ncount++;}\n}\nif(count>0){\nprintf(\"%lld\",n-count);}\nelse{\nfor(j=0;j<n;j++){\nfor(i=0;i<n-1;i++){\na[i]=fun(a[i],a[i+1]);\nif(fun(a[i],a[i+1])==1){\nans=j+n;\nflag=1;\nbreak;}\n}\nif(flag==1){\nbreak;}}\nif(flag==1){\nprintf(\"%lld\\n\",ans);\n}\nelse {\nprintf(\"-1\\n\");}}\nreturn 0;\n}\n\n"}
{"similarity_score": 0.47130434782608693, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "4fa4cbf152a164a2a43eee0bdc8357f8", "bug_code_uid": "14cb2d3d832d1ddc25f08b90cc25ef91", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "dc39f861a091dd2e5aee2d24775be93d", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    long int v;\n    scanf(\"%d%ld\",&n,&v);\n    int i,j,k,count=0,ara_f[n],l=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&k);\n        int ara[k];\n        for(j=0;j<k;j++)\n        {\n            scanf(\"%d\",&ara[j]);\n            if(v>ara[j])\n            {\n                count++;\n                ara_f[l]=i;\n                l++;\n                break;\n            }\n        }\n\n    }\n    if(count>0)\n    {\n        printf(\"%d\\n\",count);\n        for(i=0;i<l;i++)\n            printf(\"%d \",ara_f[i]);\n        printf(\"\\n\");\n    }\n    else\n        printf(\"%d\\n\",count);\n\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    long int v;\n    scanf(\"%d%ld\",&n,&v);\n    int x,i,k,j,count=0,ara[51],l=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&k);\n        for(j=1;j<=k;j++)\n        {\n            scanf(\"%d\",&x);\n            if(v>x)\n            {\n                count=1;\n            }\n        }\n            if(count==1)\n                ara[l++]=i;\n            count=0;\n\n\n    }\n        printf(\"%d\\n\",l);\n        for(i=0;i<l;i++)\n            printf(\"%d \",ara[i]);\n        printf(\"\\n\");\n\n\n    return 0;\n}"}
{"similarity_score": 0.9942763695829926, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8603b18e422e7f1b4ad1f653b0e4e955", "bug_code_uid": "33061fc51635f85b49f0d83a6298fca2", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "80fef6f4b6ef4eb35eab8f8350ce7fed", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#define MAX(x,y) (x)>(y) ? (x):(y)\n#define MIN(x,y) (x)>(y) ? (y):(x)\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\nint main(int argc, char **argv)\n{\n\tint n,i,Time,*m;\n\tlong long int res=0;\n\tfscanf(stdin,\"%i %i\",&n,&Time);\n\tm=(int *)malloc(n*sizeof(int));\n\tfor (i=0;i<n;i++)\n\t{\n\tfscanf(stdin,\"%Ld\",&m[i]);\n    }\n    qsort(m,n,sizeof(int),cmpfunc);\n    for (i=0;i<n;i++)\n    {\n\t\tres+=(long long int)Time*m[i];\n\t\tif (Time-1>0) Time-=1;\n\n    }\n    \tfree(m);\n    fprintf(stdout,\"%Ld\",res);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#define MAX(x,y) (x)>(y) ? (x):(y)\n#define MIN(x,y) (x)>(y) ? (y):(x)\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\nint main(int argc, char **argv)\n{\n\tint n,i,Time,*m;\n\tlong long res=0;\n\tfscanf(stdin,\"%i %i\",&n,&Time);\n\tm=(int *)malloc(n*sizeof(int));\n\tfor (i=0;i<n;i++)\n\t{\n\tfscanf(stdin,\"%Ld\",&m[i]);\n    }\n    qsort(m,n,sizeof(int),cmpfunc);\n    for (i=0;i<n;i++)\n    {\n\t\tres+=(long long int)Time*m[i];\n\t\tif (Time-1>0) Time-=1;\n\n    }\n    \tfree(m);\n    fprintf(stdout,\"%lld\",res);\n\treturn 0;\n}"}
{"similarity_score": 0.6820194862710364, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "473891ebbb58914ab35330f0bb79b12e", "bug_code_uid": "10d5e9db2e5a8c71a21f76b8ba07dded", "src_uid": "2022f53e5a88d5833e133dc3608a122c", "apr_id": "710a29258c7412468d9fc453cb9e1f18", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, m, i, j, a[100000], b[100000]={0}, t=0;\n    char s[1000][1000];\n\n    scanf(\"%d %d\", &n, &m);\n    for(i=0; i<n; i++)\n        scanf(\"%s\", s[i]);\n\n    for(i=0; i<m; i++)\n    {\n         scanf(\"%d\", &a[i]);\n         b[i] = 1;\n    }\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<m && i<n; j++)\n        {\n            if(s[i][j] == s[i+1][j])\n                b[j]++;\n        }\n    }\n    for(i=0; i<m; i++)\n    {\n        t += (a[i]*b[i]);\n        //printf(\"%d \", b[i]);\n    }\n\n    printf(\"%d\\n\", t);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, m, i, j, k, a[100000], b[100]= {0}, t=0;\n    char s[1000][1000];\n\n    scanf(\"%d %d\", &n, &m);\n    for(i=0; i<n; i++)\n        scanf(\" %s\", s[i]);\n\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n\n    for(i=0; i<m; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            b[s[j][i] - 'A']++;\n        }\n        int max = 0;\n        for(k=0; k<5; k++)\n        {\n            if(b[k] > max)\n                max = b[k];\n            b[k]=0;\n        }\n        t += max*a[i];\n    }\n\n\n    printf(\"%d\\n\", t);\n    return 0;\n}\n"}
{"similarity_score": 0.9991326973113617, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f13056cea9bb262ede3e4babb79e77a6", "bug_code_uid": "6a46ada7dd52fe712339c84cd414cf6c", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "5857189a78c14b874d099d99e7088d0f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int a[100],n,i,p1,p2,swap;\n    int max=0;\n    int min=1000;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>=max)\n        {\n            max=a[i];\n            p1=i+1;\n        }\n        else\n            max=max;\n        if(a[i]<=min)\n        {\n            min=a[i];\n            p2=i+1;\n        }\n        else\n            min=min;\n    }\n    if(p1<p2)\n        swap=abs(p1-1)+abs(p2-n);\n    else\n        swap=abs(p1-1)+abs(p2-n)-1;\n    printf(\"%d\\n\",swap);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int a[100],n,i,p1,p2,swap;\n    int max=0;\n    int min=1000;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>max)\n        {\n            max=a[i];\n            p1=i+1;\n        }\n        else\n            max=max;\n        if(a[i]<=min)\n        {\n            min=a[i];\n            p2=i+1;\n        }\n        else\n            min=min;\n    }\n    if(p1<p2)\n        swap=abs(p1-1)+abs(p2-n);\n    else\n        swap=abs(p1-1)+abs(p2-n)-1;\n    printf(\"%d\\n\",swap);\n}\n"}
{"similarity_score": 0.9487179487179487, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "973c16fe0994c3a5278d957af71d8d7f", "bug_code_uid": "e4fcb4eec099a452cd849fed1019997c", "src_uid": "37cf6edce77238db53d9658bc92b2cab", "apr_id": "f8dee6b264528fcf698a1d995d2aa040", "difficulty": 1400, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint mdc(int a,int b)\n{if (a<0) a=-a;\nif (b<0) b=-b;\n\nif (a>b)\n{int t=a;\na=b;\nb=t;\n\n}\nif (b%a==0) return a;\nreturn mdc(a,b%a);\n\n\n\n}\n\nint main()\n{int n,m;\nscanf(\"%d%d\",&n,&m);\nint i,j,a,b,lixo;\nscanf(\"%d\",&a);\nfor (i=1;i<=n;i++)\nscanf(\"%d\",&lixo);\nscanf(\"%d\",&b);\nfor (j=1;j<=m;j++)\nscanf(\"%d\",&lixo);\nint c;\nc=a*b;\nif (n>m&&c>0) printf(\"Infinity\\n\");\nif (n>m&&c<0) printf(\"-Infinity\\n\");\nif (n<m) printf(\"0/1\\n\");\nif (c<0){\nif (a>0){\na=-a;\nb=-b;}\n}\n\nif (n==m) printf(\"%d/%d\\n\",a/mdc(a,b),b/mdc(a,b));\nreturn 0;\n\n\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint mdc(int a,int b)\n{if (a<0) a=-a;\nif (b<0) b=-b;\n\nif (a>b)\n{int t=a;\na=b;\nb=t;\n\n}\nif (b%a==0) return a;\nreturn mdc(a,b%a);\n\n\n\n}\n\nint main()\n{int n,m;\nscanf(\"%d%d\",&n,&m);\nint i,j,a,b,lixo;\nscanf(\"%d\",&a);\nfor (i=1;i<=n;i++)\nscanf(\"%d\",&lixo);\nscanf(\"%d\",&b);\nfor (j=1;j<=m;j++)\nscanf(\"%d\",&lixo);\nint c;\nc=a*b;\nif (n>m&&c>0) printf(\"Infinity\\n\");\nif (n>m&&c<0) printf(\"-Infinity\\n\");\nif (n<m) printf(\"0/1\\n\");\nif (a<0&&b<0){a=-a;b=-b;}\nelse{if (b<0){a=-a;b=-b;}\n\n}\n\n\nif (n==m) printf(\"%d/%d\\n\",a/mdc(a,b),b/mdc(a,b));\nreturn 0;\n\n\n\n\n\n\n}"}
{"similarity_score": 0.9490445859872612, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "bf7af179690947d4f43c6489b32eaf1b", "bug_code_uid": "322c79b452d4e02f3944b171efefb6b7", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "51b9df66bf98b1ed0f12b61d70c43969", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tint n, k;\n\t\tscanf(\"%d %d\", &n, &k);\n\t\tint arr[100000] = {},max = -2000000000;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tscanf(\"%d\", &arr[i]);\n\t\t\tif(max<arr[i]){\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tint even[100000], odd[100000], max2 = -2000000000;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\todd[i]=max-arr[i];\n\t\t\tif(max2<odd[i]){\n\t\t\t\tmax2=odd[i];\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < n; i++){\n\t\t\teven[i]=max2-odd[i];\n\t\t}\n\t\tif(k%2==0){\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tprintf(\"%d \", even[i]);\n\t\t\t}\n\t\t}else{\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tprintf(\"%d \", odd[i]);\n\t\t\t}\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main (){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--){\n\t\tint n,k;\n\t\tscanf(\"%d %d\", &n, &k);\n\t\tint arr[n],max=-2000000000;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tscanf(\"%d\", &arr[i]);\n\t\t\tif(max<arr[i]){\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tint odd[n],even[n],max2=-2000000000;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\todd[i]=max-arr[i];\n\t\t\tif(max2<odd[i]){\n\t\t\t\tmax2=odd[i];\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < n; i++){\n\t\t\teven[i]=max2-odd[i];\n\t\t}\n\t\tif(k%2==0){\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tprintf(\"%d \", even[i]);\n\t\t\t}\n\t\t}else{\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tprintf(\"%d \", odd[i]);\n\t\t\t}\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6325459317585301, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "672731c86c17cb6c73e67b9ff5370ff6", "bug_code_uid": "a42a45a28ff829cfeecff6f6b9c6cbee", "src_uid": "4868cbb812d222ffababb4103210a3f1", "apr_id": "1e391bd0dbcb5bf942b90f21d401ccd4", "difficulty": 1500, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar s[100005];\n\tscanf(\"%s\",s);\n\tint a[100005]={},b[100005]={},c[100005]={};\n\tint i,L=strlen(s);\n\tfor(i=0;i<L;i++){\n\t\ta[i+1]=a[i];\n\t\tb[i+1]=b[i];\n\t\tc[i+1]=c[i];\n\t\tif(s[i]=='x')a[i+1]++;\n\t\telse if(s[i]=='y')b[i+1]++;\n\t\telse if(s[i]=='z')c[i+1]++;\n\t}\n\tint m,l,r;\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++){\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tint ans[5],tmp;\n\t\tint A=a[r]-a[l-1];\n\t\tint B=b[r]-b[l-1];\n\t\tint C=c[r]-c[l-1];\n\t\tif(A<B){\n\t\t\ttmp=A;\n\t\t\tA=B;\n\t\t\tB=tmp;\n\t\t}\n\t\tif(A<C){\n\t\t\ttmp=A;\n\t\t\tA=C;\n\t\t\tC=tmp;\n\t\t}\n\t\tif(B<C){\n\t\t\ttmp=B;\n\t\t\tB=C;\n\t\t\tC=tmp;\n\t\t}\n\t\tif(A==B&&B==C)printf(\"YES\\n\");\n\t\telse if(A==B&&B==(C+1))printf(\"YES\\n\");\n\t\telse if(A==(B+1)&&B==C)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar s[100005];\n\tscanf(\"%s\",s);\n\tint a[100005]={},b[100005]={},c[100005]={};\n\tint i,L=strlen(s);\n\tfor(i=0;i<L;i++){\n\t\ta[i+1]=a[i];\n\t\tb[i+1]=b[i];\n\t\tc[i+1]=c[i];\n\t\tif(s[i]=='x')a[i+1]++;\n\t\telse if(s[i]=='y')b[i+1]++;\n\t\telse if(s[i]=='z')c[i+1]++;\n\t}\n\tint m,l,r;\n\tscanf(\"%d\",&m);\n\tfor(i=0;i<m;i++){\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tif((r-l)<2){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tint ans[5],tmp;\n\t\tint A=a[r]-a[l-1];\n\t\tint B=b[r]-b[l-1];\n\t\tint C=c[r]-c[l-1];\n\t\tif(A<B){\n\t\t\ttmp=A;\n\t\t\tA=B;\n\t\t\tB=tmp;\n\t\t}\n\t\tif(A<C){\n\t\t\ttmp=A;\n\t\t\tA=C;\n\t\t\tC=tmp;\n\t\t}\n\t\tif(B<C){\n\t\t\ttmp=B;\n\t\t\tB=C;\n\t\t\tC=tmp;\n\t\t}\n\t\tif(A==B&&B==C)printf(\"YES\\n\");\n\t\telse if(A==B&&B==(C+1))printf(\"YES\\n\");\n\t\telse if(A==(B+1)&&B==C)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9378378378378378, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4dabd3c35b5177212b4480cd367013a1", "bug_code_uid": "ed7f6e2249272c4c069aa0082505ebee", "src_uid": "44619ba06ec0dc410ef598ea45a76271", "apr_id": "aa282211377f54905da28b53ccc6ade8", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint val[111111111], inp[1000];\nint main()\n{\n    int  n, i, j, cnt=0;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++) scanf(\"%d\", &inp[i]);\n    for (i = 0; i < n-1; i++)\n    {\n        for (j = i+1; j < n; j++) val[inp[i]+inp[j]]++;\n    }\n    for (i = 0; i < 111111111; i++) if (val[i] > cnt) cnt = val[i];\n    printf(\"%d\\n\", cnt);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#define SIZE 222222\nint val[SIZE], inp[1000];\nint main()\n{\n    int  n, i, j, cnt=0;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++) scanf(\"%d\", &inp[i]);\n    for (i = 0; i < n-1; i++)\n    {\n        for (j = i+1; j < n; j++) val[inp[i]+inp[j]]++;\n    }\n    for (i = 0; i < SIZE; i++) if (val[i] > cnt) cnt = val[i];\n    printf(\"%d\\n\", cnt);\n    return 0;\n}"}
{"similarity_score": 0.8927038626609443, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f188eb73b388c3d4319215f6e86a3452", "bug_code_uid": "3ff46686ba62698b1a6945a6d49be2d0", "src_uid": "a6f42cb2627a7d1f6e01860322c5aac5", "apr_id": "78c9a92b1d8937f075de336962caee95", "difficulty": 900, "tags": ["data structures", "dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int n,m;\n    scanf(\"%i %i\\n\", &n, &m);\n\n    int heights[n];\n    int diff[n];\n    int rdiff[n];\n    rdiff[n-1]=0;\n    diff[0]=0;\n\n    for (int i=0; i<n; i++){\n        scanf(\"%i \",&heights[i]);\n        if(i==0) continue;\n        if(heights[i]<heights[i-1]){\n            diff[i] = diff[i-1]+heights[i-1]-heights[i];\n        }\n        else diff[i] = diff[i-1];\n    }\n    for (int i=n-2; i>=0; i--){\n        if(heights[i]<heights[i+1]){\n            rdiff[i] = rdiff[i+1]+heights[i+1]-heights[i];\n        }\n        else rdiff[i] = rdiff[i+1];\n    }\n    for (int i=0; i<m; i++){\n        int s,t;\n        scanf(\"%i %i\\n\",&s,&t);\n        if(s<=t) printf(\"%i\\n\",diff[t-1]-diff[s-1]);\n        else printf(\"%i\\n\",rdiff[t-1]-rdiff[s-1]);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int n,m;\n    scanf(\"%i %i\\n\", &n, &m);\n\n    long long heights[n];\n    long long diff[n];\n    long long rdiff[n];\n    rdiff[n-1]=0;\n    diff[0]=0;\n\n    for (int i=0; i<n; i++){\n        scanf(\"%lli \",&heights[i]);\n        if(i==0) continue;\n        if(heights[i]<heights[i-1]){\n            diff[i] = diff[i-1]+heights[i-1]-heights[i];\n        }\n        else diff[i] = diff[i-1];\n    }\n    for (int i=n-2; i>=0; i--){\n        if(heights[i]<heights[i+1]){\n            rdiff[i] = rdiff[i+1]+heights[i+1]-heights[i];\n        }\n        else rdiff[i] = rdiff[i+1];\n    }\n    // for (int i=0; i<n; i++) printf(\"%lli %lli\\n\",diff[i],rdiff[i]);\n    for (int i=0; i<m; i++){\n        int s,t;\n        scanf(\"%i %i\\n\",&s,&t);\n        if(s<=t) printf(\"%lli\\n\",diff[t-1]-diff[s-1]);\n        else printf(\"%lli\\n\",rdiff[t-1]-rdiff[s-1]);\n    }\n}"}
{"similarity_score": 0.9978054133138259, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "af4e1387da5b8a71ce6d390d51cbbe39", "bug_code_uid": "b24a90c406199a1bf90e524a99433285", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "acce740a7490de6690adeb28695b4a07", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{ int ara[10][2];\n  int s,n,bonus,i,j,x,y,v;\n  scanf(\"%d %d\",&s,&n);\n  bonus=s;\n  for(i=0;i<n;i++){\n    for(j=0;j<2;j++){\n        scanf(\"%d\",&ara[i][j]);\n    }\n  }\n  for(i=0;i<n;i++){\n    for(j=0;j<n-1;j++){\n        if(ara[j][0]>ara[j+1][0]){\n                y=ara[j][1];\n               ara[j][1]=ara[j+1][1];\n\n                x=ara[j][0];\n            ara[j][0]=ara[j+1][0];\n               ara[j+1][0]=x;\n                ara[j+1][1]=y;\n        }\n    }\n  }\n  for(i=0;i<n;i++){\n    if(ara[i][0]<bonus){\n        bonus=bonus+ara[i][1];\n    }\n    else{\n        printf(\"NO\");\n        return 0;\n    }\n  }\n  printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{ int ara[10000][2];\n  int s,n,bonus,i,j,x,y,v;\n  scanf(\"%d %d\",&s,&n);\n  bonus=s;\n  for(i=0;i<n;i++){\n    for(j=0;j<2;j++){\n        scanf(\"%d\",&ara[i][j]);\n    }\n  }\n  for(i=0;i<n;i++){\n    for(j=0;j<n-1;j++){\n        if(ara[j][0]>ara[j+1][0]){\n                y=ara[j][1];\n               ara[j][1]=ara[j+1][1];\n\n                x=ara[j][0];\n            ara[j][0]=ara[j+1][0];\n               ara[j+1][0]=x;\n                ara[j+1][1]=y;\n        }\n    }\n  }\n  for(i=0;i<n;i++){\n    if(ara[i][0]<bonus){\n        bonus=bonus+ara[i][1];\n    }\n    else{\n        printf(\"NO\");\n        return 0;\n    }\n  }\n  printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.9528619528619529, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ac55c990eccf866233b0180fe48d5880", "bug_code_uid": "affefa83437a4da15142859c0862e14a", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "91ccd460ecd2cc86dfbd6936f3c87fb3", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int n, m, q;\n scanf(\"%d %d\", &n, &m);\n char s[n][15], t[m][15];\n for(int i=0; i<n; i++) scanf(\"%s\", s[i]);\nfor(int i=0; i<m; i++) scanf(\"%s\", t[i]);\nscanf(\"%d\", &q);\n while(q--)\n{\n  int y; scanf(\"%d\", &y);\n  printf(\"%s%s\\n\", s[(y-1)%n)], t[(y-1)%m];\n }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n int n, m, q;\n scanf(\"%d %d\", &n, &m);\n char s[n][15], t[m][15];\n for(int i=0; i<n; i++) scanf(\"%s\", s[i]);\nfor(int i=0; i<m; i++) scanf(\"%s\", t[i]);\nscanf(\"%d\", &q);\n while(q--)\n{\n  int y; scanf(\"%d\", &y);\n  printf(\"%s%s\\n\", s[(y-1)%n], t[(y-1)%m]);\n }\nreturn 0;\n}\n"}
{"similarity_score": 0.8018575851393189, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "b8f01061e4cf91e20990fa0fbf414b60", "bug_code_uid": "bdfef9a3e2359be36630ecd578164ab2", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "9ed01e77c2e2c8c7a7c4aa1ff38f002c", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n  int i,n,t,k;\n  int a[n+1];\n\n  scanf(\"%d %d\",&n,&t);\n  for(i=1;i<=n;i++)\n  {\n    scanf(\"%d\",&a[i]);\n  }\n\n  k = 0;\n  i =1;\n  while(k<t)\n  {\n    k+= a[i];\n    i+= a[i];\n  }\n\n  if(k==t)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n  int i,n,t,k;\n  int a[30003];\n\n  scanf(\"%d %d\",&n,&t);\n  for(i=1;i<=n;i++)\n  {\n    scanf(\"%d\",&a[i]);\n  }\n\n  k = 0;\n  i = 1;\n\n  while(i<t)\n  {\n    i+= a[i];\n    // printf(\"I = %d\\n\",i);\n    if(i == t)\n        break;\n\n  }\n\n  if(i==t)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.875, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "a16dce649b85aa366bc2a2064e75d960", "bug_code_uid": "5aaae153ed96ca7aa0baf57e7bf9ffeb", "src_uid": "33e751f5716cbd666be36ab8f5e3977e", "apr_id": "b13a509735f37b1cb014f997616b20f7", "difficulty": 800, "tags": ["brute force", "combinatorics", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<unsitd.h>\n#include<stdlib.h>\nvoid tab1(b)\n{\n\t//in x = 0;\n//\twhile(x < b){\n\tint a = (10 - b);\n\n\tprintf(\"%d\", 3 * a * (a - 1));\n//\tx++\n//\t}\n}\nint main()\n{\n\tint x;\n\tint *tab;\n\tint y = 0;\n\tint b;\n\tint a;\n\tscanf(\"%d\", &x);\n\twhile(x >= 1)\n\t{\n\t\ty = 0;\n\t\tscanf(\"%d\", &b);\n\t\twhile(y < b)\n\t\t{\n\t\t\tscanf(\"%d\", &a);\n\t\t\ttab[y] = a;\n\t\t\ty++;\n\t\t}\n\t\ttab1(b);\n\t\tx--;\n\t}\n}\n", "fixed": "#include<stdio.h>\n//#include<unsitd.h>\n#include<stdlib.h>\nvoid tab1(b)\n{\n\tint a = (10 - b);\n\tprintf(\"%d\\n\", 3 * a * (a - 1));\n}\nint main()\n{\n\tint x;\n\tint *tab;\n\tint y = 0;\n\tint b;\n\tint a;\n\tscanf(\"%d\", &x);\n\twhile(x >= 1)\n\t{\n\t\ty = 0;\n\t\tscanf(\"%d\", &b);\n\t\twhile(y < b)\n\t\t{\n\t\t\tint nb;\n\t\t\tscanf(\"%d\", &nb);\n\t\t\ty++;\n\t\t}\n\t\ttab1(b);\n\t\tx--;\n\t}\n}\n"}
{"similarity_score": 0.8223684210526315, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "da7eb6af92ffbcb6a0204557d8ff8917", "bug_code_uid": "916c6ff548e592bf9bddb5af69d54a75", "src_uid": "75ef1f52ef3a86992159eef566dddc89", "apr_id": "7ae56d97aae33ab84caa0695c1684e23", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint light[200005];\nint main()\n{\n    int n,b,a,i,tempa,tempb;\n    scanf(\"%d %d %d\",&n,&b,&a);\n    tempa=a;\n    tempb=b;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&light[i]);\n    }\n    i=0;\n    while(tempa+tempb>=1)\n    {\n        if(tempa>0)\n        {\n            if(tempa==a)//\u032b\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n            {\n                tempa--;\n            }\n            else\n            {\n                if(light[i]==0)\n                    tempa--;\n            }\n        }\n        else//\ufffd\ufffd\u032b\ufffd\ufffd\ufffd\ufffd\n        {\n            tempb--;\n            if(light[i]==1)\n                tempa++;\n        }\n        i++;\n    }\n    printf(\"%d\",i);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint light[200005];\nint main()\n{\n    int n,b,a,i,tempa,tempb;\n    scanf(\"%d %d %d\",&n,&b,&a);\n    tempa=a;\n    tempb=b;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&light[i]);\n    }\n    i=0;\n    while(tempa+tempb>=1&&i<n)\n    {\n        if(tempa>0)\n        {\n            if(tempa==a)//\u592a\u9633\u80fd\u6ee1\u4e86\n            {\n                tempa--;\n            }\n            else//\u6b64\u65f6\u8bf4\u660e0<tempa<a\n            {\n                if(light[i]==1&&tempb>0)\n                {\n                    tempb--;\n                    tempa++;\n                }\n                else\n                {\n                    tempa--;\n                }\n            }\n        }\n        else//\u65e0\u592a\u9633\u80fd\n        {\n            tempb--;\n            if(light[i]==1)//tempa=0\n                tempa++;\n        }\n        i++;\n    }\n    printf(\"%d\",i);\n    return 0;\n}\n"}
{"similarity_score": 0.9060240963855422, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "99c167b115f8ab198c3b904daf3c35a2", "bug_code_uid": "e14bb804aefb75891d19dd3110517473", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "70e87b30e6546635d3a99408ca691d84", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    double n,b;\n    scanf(\"%f\\n\",&n);\n    b=n;\n    double a,m=0;\n    while(n--){\n        scanf(\"%f\",&a);\n        m=m+a;\n    }\n    double k;\n    k=m/b;\n    printf(\"%f\",k);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,b,a;\n    scanf(\"%d\\n\",&n);\n    b=n;\n    double m=0;\n    while(b--){\n        scanf(\"%d\",&a);\n        m=m+a;\n    }\n    m=m/n;\n    printf(\"%f\",m);\n    return 0;\n}"}
{"similarity_score": 0.22429906542056074, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "9915a5cdd67c586f4b50a2c8745310db", "bug_code_uid": "76ad98125bced743d60ecb5681e8ef16", "src_uid": "68883ab115882de5cf77d0848b80b422", "apr_id": "3d156ab6ccee78142e69964ef26f837e", "difficulty": 1600, "tags": ["data structures", "constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint f(char* s) {\n    int p = 0, ans = 0;\n    \n    for (int i = 0; s[i] != '\\0'; i++) {\n        if (s[i] == '.') {\n            p++;\n        } else if (p!=0){\n            ans += p-1;\n            p = 0;\n        }\n    }\n    if (p != 0) ans += p-1;\n    \n    return ans;\n}\n\nint main(int argc, char **argv)\n{\n    int n, q, j;\n    \n    scanf(\"%d %d%*c\", &n, &q);\n    char s[n], c;\n    \n    gets(s);\n    \n    for (int i = 0; i < q; i++) {\n        scanf(\" %d %c\", &j, &c);\n        s[j-1] = c;\n        \n        printf(\"%d\\n\", f(s));        \n    }\n    \n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t\n\tint n, q, qntS, p, j;\n\tchar c;\n\t\n\tscanf(\"%d %d%*c\", &n, &q);\n\tchar s[n + 100];\n\t\n\tgets(s+1);\n\ts[0] = \"a\";\n\ts[n+1] = \"a\";\n\t\n\tqntS = 0;\n\tp = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (s[i] == '.') p++;\n\t\telse if (i > 1 && s[i-1] == '.') qntS++;\n\t}\n\tif (s[n] == '.') qntS++;\n\t\n\tfor (int i = 0; i < q; i++) {\n\t\tscanf(\"%d %c\", &j, &c);\n\t\t\n\t\tif (c == '.' && s[j] != '.' || c != '.' && s[j] == '.') {\n\t\t\tif (s[j-1] == '.' && s[j+1] == '.') {\n\t\t\t\tif (c == '.') {\n\t\t\t\t\tp++;\n\t\t\t\t\tqntS--;\n\t\t\t\t} else {\n\t\t\t\t\tp--;\n\t\t\t\t\tqntS++;\n\t\t\t\t}\n\t\t\t} else if (s[j-1] != '.' && s[j+1] != '.') {\n\t\t\t\tif (c == '.') {\n\t\t\t\t\tp++;\n\t\t\t\t\tqntS++;\n\t\t\t\t} else {\n\t\t\t\t\tp--;\n\t\t\t\t\tqntS--;\n\t\t\t\t}\n\t\t\t} else if (c == '.') {\n\t\t\t\tp++;\n\t\t\t} else {\n\t\t\t\tp--;\n\t\t\t}\n\t\t}\n\t\t\n\t\ts[j] = c;\n\t\tprintf(\"%d\\n\", p - qntS);\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.90020366598778, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "f86cd43701d9361810a6db51e735431e", "bug_code_uid": "85178f39bdee606d3d9b729dc8100b11", "src_uid": "4b7b0fba7b0af78c3956c34c29785e7c", "apr_id": "35305db00e4de43c4c8f3878042ff18d", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char p[12][20]={\"ABSINTH\",\"BEER\",\"BRANDY\",\"CHAMPAGNE\",\"GIN\",\"RUM\",\"SAKE\",\"TEQUILA\",\"VODKA\",\"WHISKEY\",\"WINE\",\"\\0\"};\n    char g[19][3]={\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"\\0\"};\n    int i,n,l,i1,c=0;\n    scanf(\"%d\",&n);\n    char t[n][100];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",t[i]);\n    }\n    for(i=0;i<n;i++)\n        {\n            for(i1=0;i1<12;i1++)\n            {\n                if(strcmp(t[i],p[i1])==0)\n                c++;\n            }\n        }\n        for(i=0;i<n;i++)\n        {\n            for(i1=0;i1<17;i1++)\n            {\n                if(strcmp(t[i],g[i1])==0)\n                c++;\n            }\n        }\nprintf(\"%d\",c);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char p[12][20]={\"ABSINTH\",\"BEER\",\"BRANDY\",\"CHAMPAGNE\",\"GIN\",\"RUM\",\"SAKE\",\"TEQUILA\",\"VODKA\",\"WHISKEY\",\"WINE\",\"\\0\"};\n    char g[18][3]={\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\"};\n    int i,n,l,i1,c=0;\n    scanf(\"%d\",&n);\n    char t[n][100];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",t[i]);\n    }\n    for(i=0;i<n;i++)\n        {\n            for(i1=0;i1<12;i1++)\n            {\n                if(strcmp(t[i],p[i1])==0)\n                c++;\n            }\n        }\n        for(i=0;i<n;i++)\n        {\n            for(i1=0;i1<18;i1++)\n            {\n                if(strcmp(t[i],g[i1])==0)\n                c++;\n            }\n        }\nprintf(\"%d\",c);\nreturn 0;\n}\n"}
{"similarity_score": 0.6939226519337016, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d028c1db26e3e4bf1f5cc05cfcf5bb07", "bug_code_uid": "74fba0eb33f60399fc67fe24e84f18aa", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "3a2183ab51a8542bd8fe05b29ad5df06", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n, a, b, c, d, e;\n    double f;\n    scanf(\" %d\", &n);\n\n\n\n    while(n--)\n    {\n        scanf(\" %d %d %d %d\", &a, &b, &c, &d);\n\n        if(a!=b && c!=d)\n        {\n            e = (a*b)+(c*d);\n            f = sqrt(e);\n\n            if((int)f == f)\n                printf(\"Yes\\n\");\n        }\n        else\n            printf(\"No\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n, a, b, c, d, t;\n    double f;\n    scanf(\" %d\", &n);\n\n\n\n    while(n--)\n    {\n        scanf(\" %d %d %d %d\", &a, &b, &c, &d);\n\n        if(a>b)\n        {\n            t = a;\n            a = b;\n            b = t;\n        }\n        if(c>d)\n        {\n            t = c;\n            c = d;\n            d = t;\n        }\n        if(b == d && a+c == b)\n            printf(\"Yes\\n\");\n        else\n            printf(\"No\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.496, "equal_cnt": 18, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "afbdd0ced2603f574af9a678e1e47ab3", "bug_code_uid": "da63a229d7ec831bd8504727158307da", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "19b414233f89de0c793d244ddc7e03f1", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n    int i,j,k,cnt=0,cnt1=0;\n    scanf(\"%d\",&i);\n    char str[i];\n    scanf(\"%s\",str);\n    for(i=0;i<strlen(str);i++)\n    {\n        if(str[i]==0)\n        cnt++;\n        else\n        cnt1++;\n    }\n    printf(\"%d\",max(cnt,cnt1)-min(cnt,cnt1));\n    return 0;\n    \n\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint min(int i,int j)\n{\n    if(i<j)\n    return i;\n    else\n    return j;\n}\nint main()\n{\n    int cnt_0=0,cnt_1=0,i,n;\n    scanf(\"%d\",&n);\n    char s[n];\n    scanf(\"%s\",s);\n    for(i=0;i<n;i++){\n        if(s[i]=='0'){\n            cnt_0++;\n        }\n        else if(s[i]=='1'){\n            cnt_1++;\n        }\n    }\n    cnt_0=min(cnt_0,cnt_1);\n    printf(\"%d\\n\",n-(2*cnt_0));\n    return 0;\n}"}
{"similarity_score": 0.3987441130298273, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "7b285b4edf8a1c507729df254ba8e686", "bug_code_uid": "1a04f55d23ece7793e27eb2416dbf9fd", "src_uid": "8423f334ef789ba1238d34f70e7cbbc8", "apr_id": "ad481d80ad5bbdd5f5fbce856160da33", "difficulty": 2000, "tags": ["dp", "constructive algorithms"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tchar c;\n\tlong t=0,nwait,nqianlwait,lqian;\n\tflast=lwait=lqian=0;\n\tscanf(\"%c\",&c);\n\twhile(c!='\\n'){\n\t\tif(c=='M') t++;\n\t\telse{\n\t\t\tnqian=lqian+t;\n\t\t\tif(t>lwait || lqian==0) {ans=nqian;nwait=0;}\n\t\t\telse{nwait=lwait-t+1;ans=nqian+nwait+t;}\n\t\t\tlwait=nwait;\n\t\t\tlqian=nqian;\n\t\t\tt=0;\n\t\t}\n\t    scanf(\"%c\",&c);\n\t}\n\tprintf(\"%ld\",fnow);\n\treturn 0;\n}\n\n\n\n\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tchar c;\n\tlong t,p,q,l,r;\n\tscanf(\"%c\",&c);\n\tp=q=l=r=t=0;\n\twhile(c!='\\n'){\n\t\tif(c=='M') t++;\n\t\telse{\n\t\t\tr=l+t;\n\t\t\tif(r>p || l==0) q=r;\n\t\t\telse q=p+1;\n\t\t\tl=r;\n\t\t\tp=q;\n\t\t\tt=0;\n\t\t}\n\t    scanf(\"%c\",&c);\n\t}\n\tprintf(\"%ld\",q);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6961038961038961, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5e55cbbccf74b51257fcb11a741b7692", "bug_code_uid": "21895094149a0881bbe4628e1dc79969", "src_uid": "a457e22fc8ff882c15ac57bca6960657", "apr_id": "05dc13e22e0e0a8fe3a0de5e2a873730", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(void)\n{\n    char string[1005],sub[6],answer[6]=\"heidi\";\n    scanf(\"%s\",string);\n    int i,j=0;\n    if((strlen(string))<=5)\n        printf(\"NO\\n\");\n    else\n    {\n        for(i=0;string[i]!='\\0';i++)\n        {\n            if(string[i]=='h'||string[i]=='e'||string[i]=='i'||string[i]=='d'||string[i]=='i')\n            {\n                sub[j]=string[i];\n                if(sub[j]!=answer[j])\n                {\n                    printf(\"NO\\n\");\n                    return 0;\n                }\n                j++;\n            }\n        }\n        sub[j]='\\0';\n    }\n    if(strlen(sub)==5)\n        printf(\"YES\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(void)\n{\n    char string[1005],sub[6],answer[6]=\"heidi\";\n    scanf(\"%s\",string);\n    int i,j=0;\n    if((strlen(string))<=5)\n        printf(\"NO\\n\");\n    else\n    {\n        for(i=0;string[i]!='\\0';i++)\n        {\n            if(answer[j]==string[i])\n            {\n                j++;\n            }\n        }\n        sub[j]='\\0';\n        if(j==5)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9617486338797814, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c048a92a0d0c8f083e85abdabc1fd6cf", "bug_code_uid": "c82918937d8b2fe3839714db10b8c742", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "b2160d7b2a85a57a53cb8d84d6a83294", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long long int n,m;\n    scanf(\"%I64d\",&n);\n    long long int i,a[100005]={0},k;\n    for(i=0;i<n;i++) {\n            scanf(\"%I64d\",&k);\n    a[k]++;\n    }\n    for(i=0;i<100005;i++) a[i]=a[i]+a[i-1];\n    scanf(\"%I64d\",&m);\n    for(i=0;i<m;i++){\n            scanf(\"%I64d\",&k);\n        printf(\"%I64d\\n\",a[k]-11);\n    }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    long long int n,m;\n    scanf(\"%I64d\",&n);\n    long long int i,a[100005]={0},k;\n    for(i=0;i<n;i++) {\n            scanf(\"%I64d\",&k);\n    a[k]++;\n    }\n    for(i=1;i<100005;i++) a[i]=a[i]+a[i-1];\n    scanf(\"%I64d\",&m);\n    for(i=0;i<m;i++){\n            scanf(\"%I64d\",&k);\n        printf(\"%I64d\\n\",a[(k<=100000)?k:100000]);\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.33981191222570534, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0f559c4b91d74c42908ab09795dfea23", "bug_code_uid": "08150b56f6d75209379ec1b8821412f0", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "c5d93d073926f1cb509cf4ee54dae98f", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n{\n    int t,n,i,j,min,k,c,h,max;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    { scanf(\"%d\",&n);\n\n    int x[n],y[n];\n\n    for(i=0;i<n;i++)\n        {scanf(\"%d\",&x[i]);\n        y[i]=1;}\n\n\n        max=y[0];\n\n    c=1; h=0;\n     for(j=0;j<n;j++)\n     {\n       min=j;\n\n       for(i=j+1;i<n;i++)\n       {\n           if(x[i]<x[min])\n           {\n               min=i;\n           }\n       }\n            if(min!=j)\n            {k=x[min];\n           x[min]=x[j];\n           x[j]=k;}\n\n\n           if(j)\n           {\n                if(x[j]!=x[j-1]) {c++; h++;}\n\n           else {y[h]++;}\n           }\n\n             if(max<y[h]) max=y[h];\n\n        }\nif(c>max) printf(\"%d\\n\",max);\n\nelse printf(\"%d\\n\",c);\n    }}\n", "fixed": "#include<stdio.h>\n\nvoid merge(int x[],int l,int m, int h)\n{  int i=l, j=m+1, k=l, y[h+1];\n    while(i<=m&&j<=h)\n    { if(x[i]<=x[j]) y[k++]=x[i++]; else y[k++]=x[j++];}\n    while(j<=h) y[k++]=x[j++]; while(i<=m) y[k++]=x[i++];\n    for(i=l;i<=h;i++)  x[i]=y[i]; }\n\nvoid sort(int x[],int l,int h)\n{    if(l<h) { int m=(l+h)/2;\n   sort(x,l,m);  sort(x,m+1,h);  merge(x,l,m,h);} }\n\n\nint main()\n\n{\n    int t,n,i,j,min,k,c,h,max;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    { scanf(\"%d\",&n);\n\n    int x[n],y[n];\n\n    for(i=0;i<n;i++)\n        {scanf(\"%d\",&x[i]);\n        y[i]=1;}\n\n\n    sort(x,0,n-1);\n        max=y[0];\n\n    c=1; h=0;\n     for(j=0;j<n-1;j++)\n     {\n        if(x[j]!=x[j+1]) {c++; h++;}\n\n           else {y[h]++;}\n\n\n             if(max<y[h]) max=y[h];\n\n        }\n\nif(c>max) printf(\"%d\\n\",max);\n\nelse if(c==max) printf(\"%d\\n\",c-1);\n\n    else printf(\"%d\\n\",c);\n    }}\n"}
{"similarity_score": 0.9669211195928753, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ea0c61d7ed9eee3078eb0924ae3cb9ae", "bug_code_uid": "c4638be782f5f694d89e475689692347", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "cd8af4dc6493751acb0338578cd3e0eb", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "int main() {\n    int i,t;\n    double array[361];\n    for(i=3;i<=360;i++) {\n        array[i]=180-360/i;\n    }\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++) {\n        double x;\n        scanf(\"%lf\",&x);\n        for(j=3;j<=360;j++)\n            if(x==array[i]) {\n                printf(\"YES\\n\");\n                break;\n            }\n            else if(j==360)\n                printf(\"NO\\n\");\n    }\n}", "fixed": "int main() {\n    int i,j,t;\n    double array[361];\n    for(i=3;i<=360;i++)\n        array[i] = 180 - (double)360/i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++) {\n        double x;\n        scanf(\"%lf\",&x);\n        for(j=3;j<=360;j++)\n            if(x==array[j]) {\n                printf(\"YES\\n\");\n                break;\n            }\n            else if(j==360)\n                printf(\"NO\\n\");\n    }\n}"}
{"similarity_score": 0.9984276729559748, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7fde2eb2df25fba32cd1831d0b17bd7d", "bug_code_uid": "7d75593caf051514571780626c399e0d", "src_uid": "faf1abdeb6f0cf34972d5cb981116186", "apr_id": "4d326fc768670b4c67c55dc6d0375f1b", "difficulty": 1200, "tags": ["data structures", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nvisitedr[10001];\nvisitedc[10001];\nint main(void) {\n\tlong long int r=0,c=0,n,m,x,y;\n\tscanf(\"%lld %lld\",&n,&m);\n          while(m--)\n          {\n                    scanf(\"%lld %lld\",&x,&y);\n                    if(!visitedr[x])\n                    {\n                              r+=1;\n                              visitedr[x]=1;\n                    }\n                    if(!visitedc[y])\n                    {\n                              c+=1;\n                              visitedc[y]=1;\n                    \n                    }\n                    printf(\"%lld \",(n-r)*(n-c));\n          }\n          return 0;\n}", "fixed": "#include <stdio.h>\nvisitedr[100001];\nvisitedc[100001];\nint main(void) {\n\tlong long int r=0,c=0,n,m,x,y;\n\tscanf(\"%lld %lld\",&n,&m);\n          while(m--)\n          {\n                    scanf(\"%lld %lld\",&x,&y);\n                    if(!visitedr[x])\n                    {\n                              r+=1;\n                              visitedr[x]=1;\n                    }\n                    if(!visitedc[y])\n                    {\n                              c+=1;\n                              visitedc[y]=1;\n                    \n                    }\n                    printf(\"%lld \",(n-r)*(n-c));\n          }\n          return 0;\n}"}
{"similarity_score": 0.9572107765451664, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1c2ab73bccebe69b2920cb4fef8f49e8", "bug_code_uid": "4bc554460a4a2b319255051841095896", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "a72b2d6651e4352a1115492618f80eec", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,p=0,i,j;\n    scanf(\"%d\",&n);\n    int arr[n][2];\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0;i<n;i++){\n        if(arr[i][0]<arr[i][1]){\n           p=p+1;\n        }\n    }\n    printf(\"%d\",p);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,p=0,i,j;\n    scanf(\"%d\",&n);\n    int arr[n][2];\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++){\n            scanf(\"%d\",&arr[i][j]);\n        }\n    }\n    for(i=0;i<n;i++){\n        if((arr[i][1]-arr[i][0])>=2){\n           p=p+1;\n        }\n    }\n    printf(\"%d\",p);\n    return 0;\n}\n"}
{"similarity_score": 0.8041958041958042, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "15e4d1f7de4b3502048e35e0c362f987", "bug_code_uid": "a86be0026a1f7a33ec75255c1311b762", "src_uid": "2d4ad39d42b349765435b351897403da", "apr_id": "68d6d4e1014229b5ad76c73b2cb0d0ff", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int a,b,c;\n    double x,y;\n    scanf(\"%d %d %d\", &a, &b, &c);\n    x=(-b+sqrt(b*b-4*a*c))/(2*a);\n    y=(-b-sqrt(b*b-4*a*c))/(2*a);\n    printf(\"%lf\\n\",x);\n    printf(\"%lf\\n\",y);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int a,b,c;\n    double x,y;\n    scanf(\"%d %d %d\", &a, &b, &c);\n    x=(-b+sqrt(b*b-4*a*c))/(2*a);\n    y=(-b-sqrt(b*b-4*a*c))/(2*a);\n    if (x>y)\n    {\n\n\n    printf(\"%lf\\n\",x);\n    printf(\"%lf\\n\",y);\n\n    }\n    else if (y>x)\n    {\n        printf(\"%lf\\n\",y);\n        printf(\"%lf\\n\",x);\n    }\n}\n"}
{"similarity_score": 0.9936305732484076, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "35348c26198477d3d365082d8a1fdf04", "bug_code_uid": "3fba375d4f2d7e4f7ef83cc1008834fc", "src_uid": "7eff98fbcf4e4a3284e2d2f98351fe4a", "apr_id": "60c916ea1f3b767971f1843e8abff58e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint b = 0, p = 0, g = 0, o = 0, r = 0, y = 0, i, n;\n\tscanf(\"%d\", &n);\n\tchar str[1001];\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%s\", str);\n\t\tif(strcmp(str, \"blue\") == 0)\n\t\t{\n\t\t\tb++;\n\t\t}\n\t\tif(strcmp(str, \"purple\") == 0)\n\t\t{\n\t\t\tp++;\n\t\t}\n\t\tif(strcmp(str, \"green\") == 0)\n\t\t{\n\t\t\tg++;\n\t\t}\n\t\tif(strcmp(str, \"orange\") == 0)\n\t\t{\n\t\t\to++;\n\t\t}\n\t\tif(strcmp(str, \"red\") == 0)\n\t\t{\n\t\t\tr++;\n\t\t}\n\t\tif(strcmp(str, \"yellow\") == 0)\n\t\t{\n\t\t\ty++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", 6-n);\n\tif(b == 0)\n\t{\n\t\tprintf(\"Space\\n\");\n\t}\n\tif(p == 0)\n\t{\n\t\tprintf(\"Purple\\n\");\n\t}\n\tif(g == 0)\n\t{\n\t\tprintf(\"Time\\n\");\n\t}\n\tif(o == 0)\n\t{\n\t\tprintf(\"Soul\\n\");\n\t}\n\tif(r == 0)\n\t{\n\t\tprintf(\"Reality\\n\");\n\t}\n\tif(y == 0)\n\t{\n\t\tprintf(\"Mind\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint b = 0, p = 0, g = 0, o = 0, r = 0, y = 0, i, n;\n\tscanf(\"%d\", &n);\n\tchar str[1001];\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%s\", &str);\n\t\tif(strcmp(str, \"blue\") == 0)\n\t\t{\n\t\t\tb++;\n\t\t}\n\t\tif(strcmp(str, \"purple\") == 0)\n\t\t{\n\t\t\tp++;\n\t\t}\n\t\tif(strcmp(str, \"green\") == 0)\n\t\t{\n\t\t\tg++;\n\t\t}\n\t\tif(strcmp(str, \"orange\") == 0)\n\t\t{\n\t\t\to++;\n\t\t}\n\t\tif(strcmp(str, \"red\") == 0)\n\t\t{\n\t\t\tr++;\n\t\t}\n\t\tif(strcmp(str, \"yellow\") == 0)\n\t\t{\n\t\t\ty++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", 6-n);\n\tif(b == 0)\n\t{\n\t\tprintf(\"Space\\n\");\n\t}\n\tif(p == 0)\n\t{\n\t\tprintf(\"Power\\n\");\n\t}\n\tif(g == 0)\n\t{\n\t\tprintf(\"Time\\n\");\n\t}\n\tif(o == 0)\n\t{\n\t\tprintf(\"Soul\\n\");\n\t}\n\tif(r == 0)\n\t{\n\t\tprintf(\"Reality\\n\");\n\t}\n\tif(y == 0)\n\t{\n\t\tprintf(\"Mind\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9568892645815723, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "389724b85048ec82c99bb6b07d4760dd", "bug_code_uid": "6bcfb504635ab18ec1a0d77e99bc3893", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "53c847280f2962cf3d705c3f08e231a5", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nunsigned int n;\nunsigned long a[100002],b[100002];\nint xuly(int n,unsigned long a[]);\nint main()\n{\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\tscanf(\"%ld %ld\",&a[i],&b[i]);\n\tif (xuly(n,a)==1) printf(\"YES\");\n\telse printf(\"NO\");\n}\nint xuly(int n,unsigned long a[])\n{\n\tint key1=0,key2=0;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tif (a[i]>0) key1++;\n\t\telse key2++;\n\n\t}\tif (key1>key2)\n\t\tswitch (key2)\n\t\t{\n\t\t\tcase 0: return 1;break;\n\t\t\tcase 1: return 1;break;\n\t\t\tdefault: return 0;break;\n\t\t}else\n\t\tswitch (key1)\n\t\t{\n\t\t\tcase 0: return 1;break;\n\t\t\tcase 1: return 1;break;\n\t\t\tdefault: return 0;break;\n\t\t}\n\t\n}\n", "fixed": "#include <stdio.h>\nunsigned int n;\nlong a[100002];\nint xuly(int n,long a[]);\nint main()\n{\n\tint i;\n\tlong j;\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\tscanf(\"%ld %ld\",&a[i],&j);\n\tif (xuly(n,a)==1) printf(\"YES\");\n\telse printf(\"NO\");\n}\nint xuly(int n,long a[])\n{\n\tint key1=0,key2=0;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tif (a[i]>0) key1++;\n\t\telse key2++;\n\n\t}\tif (key1>key2)\n\t\tswitch (key2)\n\t\t{\n\t\t\tcase 0: return 1;break;\n\t\t\tcase 1: return 1;break;\n\t\t\tdefault: return 0;break;\n\t\t}else\n\t\tswitch (key1)\n\t\t{\n\t\t\tcase 0: return 1;break;\n\t\t\tcase 1: return 1;break;\n\t\t\tdefault: return 0;break;\n\t\t}\n\t\n}\n"}
{"similarity_score": 0.999096657633243, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "de45741eabeb772150d389303fb4917e", "bug_code_uid": "5285e468f2828c4ef1c3a7c5bf8de066", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "d47e24ab2f54971a1a2cfcd2c8dd6077", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n; scanf(\"%d\",&n); char** ptr=malloc(n*(sizeof(char *)));\nfor(int i=0;i<n;i++){\nchar *s=malloc(5*(sizeof(char))); *(ptr+i)=s; scanf(\"%s\",s);\n}\nint i;\nfor(i=0;i<n;i++){\n    if((*(*(ptr+i)+0)=='O' && *(*(ptr+i)+1)=='O') || (*(*(ptr+i)+3)=='O' && *(*(ptr+i)+4)=='O') ){break;}\n}\nif(i==n){printf(\"NO\");}\nelse{\n    if((*(*(ptr+i)+0)=='O' && *(*(ptr+i)+1)=='O')){*(*(ptr+i)+0)='+'; *(*(ptr+i)+1)='+';}\n    else{*(*(ptr+i)+3)='+'; *(*(ptr+i)+4)='+';}\n    printf(\"YES\\n\")\n    for(int j=0;j<n;j++){printf(\"%s\\n\",*(ptr+j));}\n}\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n; scanf(\"%d\",&n); char** ptr=malloc(n*(sizeof(char *)));\nfor(int i=0;i<n;i++){\nchar *s=malloc(5*(sizeof(char))); *(ptr+i)=s; scanf(\"%s\",s);\n}\nint i;\nfor(i=0;i<n;i++){\n    if((*(*(ptr+i)+0)=='O' && *(*(ptr+i)+1)=='O') || (*(*(ptr+i)+3)=='O' && *(*(ptr+i)+4)=='O') ){break;}\n}\nif(i==n){printf(\"NO\");}\nelse{\n    if((*(*(ptr+i)+0)=='O' && *(*(ptr+i)+1)=='O')){*(*(ptr+i)+0)='+'; *(*(ptr+i)+1)='+';}\n    else{*(*(ptr+i)+3)='+'; *(*(ptr+i)+4)='+';}\n    printf(\"YES\\n\");\n    for(int j=0;j<n;j++){printf(\"%s\\n\",*(ptr+j));}\n}\n}\n"}
{"similarity_score": 0.9627821842586943, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "55af1ce41373a1b176a6abfd64ec1f93", "bug_code_uid": "0f319cb0043337c16be2c9ab2b8c2afa", "src_uid": "b4341e1b0ec0b7341fdbe6edfe81a0d4", "apr_id": "088a627e9631240a110abdb44b5eb253", "difficulty": 1400, "tags": ["implementation", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint sk[100008];\n\n\n#define MIN(_a, _b) (((_a) < (_b)) ? (_a) : (_b))\nint\nrcomp (const void *a, const void *b)\n{\n        int x = *(int *)a;\n        int y = *(int *)b;\n\n\tx = x - (x/10) * 10;\n\ty = y - (y/10) * 10;\n        return y-x;\n}\n\nint\nmain()\n{\n\tint n, k = 0;\n\tint i,j;\n\tint m;\n\tint\ttot = 0;\n\tscanf (\"%d%d\", &n, &k);\n\n\tfor (i = 0; i < n; ++i) {\n\t\tscanf (\"%d\", &sk[i]);\n\t}\n\n\tqsort(sk, n, sizeof (*sk), rcomp);\n\n\tfor (i = 0; i < n; i++) {\n\t\tint t;\n\t\n\t\tt = sk[i] % 10;\n\n\t\tif (!t) {\n\t\t\tbreak;\n\t\t}\n\t\tk -= (10 - t);\n\t\tif (k < 0) {\n\t\t\tbreak;\n\t\t}\n\t\tsk[i] += (10-t);\n\t}\n\n\tfor (i = 0; i < n; i++) {\n\t\tint t = 100 - sk[i];\n\n\t\tt = MIN(t, k);\n\t\tk -= t;\n\n\t\tif (k < 0) {\n\t\t\tbreak;\n\t\t}\n\t\tsk[i] += t;\n\t}\n\n\tfor (i = 0; i < n; ++i) {\n\t\ttot += (sk[i]/10);\n\t}\n\tprintf (\"%d\\n\", tot);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint sk[100008];\n\n\n#define MIN(_a, _b) (((_a) < (_b)) ? (_a) : (_b))\nint\nrcomp (const void *a, const void *b)\n{\n        int x = *(int *)a;\n        int y = *(int *)b;\n\n\tx = x - (x/10) * 10;\n\ty = y - (y/10) * 10;\n        return y-x;\n}\n\nint\nmain()\n{\n\tint n, k = 0;\n\tint i,j;\n\tint m;\n\tint\ttot = 0;\n\tscanf (\"%d%d\", &n, &k);\n\n\tfor (i = 0; i < n; ++i) {\n\t\tscanf (\"%d\", &sk[i]);\n\t}\n\n\tqsort(sk, n, sizeof (*sk), rcomp);\n\n\tfor (i = 0; i < n; i++) {\n\t\tint t;\n\t\n\t\tt = sk[i] % 10;\n\n\t\tif (!t) {\n\t\t\tbreak;\n\t\t}\n\t\tif (k+t < 10) {\n\t\t\tbreak;\n\t\t}\n\t\tk -= (10 - t);\n\t\tsk[i] += (10-t);\n\t}\n\n\tfor (i = 0; i < n; i++) {\n\t\tint t = 100 - sk[i];\n\n\t\tt = MIN(t, k);\n\t\tk -= t;\n\n\t\tif (k < 0) {\n\t\t\tbreak;\n\t\t}\n\t\tsk[i] += t;\n\t}\n\n\tfor (i = 0; i < n; ++i) {\n\t\ttot += (sk[i]/10);\n\t}\n\tprintf (\"%d\\n\", tot);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9507494646680942, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c75ced911e11d5e2f0b6c5599d5d9a90", "bug_code_uid": "26638e056d7dc568c521f6ae7deb4609", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "1a206489d06dc68b610fe369e5f3e687", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\nint p,i,j;\nscanf(\"%d\",&p);\nlong long g[p][3];\nfor (i=0;i<p;i++)\n{for(j=0;j<3;j++){scanf(\"%lld\",&g[i][j]);}}\nfor(i=0;i<p;i++)\n{long long t=g[i][i]+g[i][i+1]+g[i][i+2];\n\nprintf(\"%lld\\n\",t/2);}\n\nreturn 0;}\n", "fixed": "\n#include<stdio.h>\nint main()\n{\nint p,i,j; scanf(\"%d\",&p);\nlong long g[p][3];\nfor (i=0;i<p;i++)\n{for(j=0;j<3;j++){scanf(\"%lld\",&g[i][j]);}}\nfor(i=0;i<p;i++)\n{long long t=g[i][0]+g[i][1]+g[i][2];\n\nprintf(\"%lld\\n\",t/2);}\n\nreturn 0;}\n\n"}
{"similarity_score": 0.4083044982698962, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "73778acc90ad52fd6611a7c8283f5a68", "bug_code_uid": "287ac6821eb9d0f3541d9eb921e972a5", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "47980df657f173b07472b5dcf63fccc4", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n         int i,j,c=0,n,sum=0;\n         int arr[n][3];\n         scanf(\"%d\",&n);\n         for(i=0;i<n;i++)\n         {\n                  for(j=0;j<3;j++)\n                  {\n                           scanf(\"%d\",&arr[i][j]);\n                  }\n                  for(j=0;j<3;j++)\n                  {\n                           sum=sum+a[i][j];\n                  }\n                  if(sum==2)\n                  {\n                           c++;\n                  }\n         }\n         printf(\"%d\",c);\n         return 0;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n         int i,j,c=0,sum,n;\n         scanf(\"%d\",&n);\n         int arr[n][3];\n         for(i=0;i<n;i++)\n         {\n                  sum=0;\n                  for(j=0;j<3;j++)\n                  {\n                           scanf(\"%d\",&arr[i][j]);\n                  }\n                  for(j=0;j<3;j++)\n                  {\n                           sum+=arr[i][j];\n                  }\n                  if(sum>=2)\n                  {\n                           c++;\n                  }\n         }\n         printf(\"%d\",c);\n         return 0;\n}"}
{"similarity_score": 0.8923418423973363, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b200be7990d478fd37a01d96075378a1", "bug_code_uid": "12088bc7daa2f12320bfbe97761e4931", "src_uid": "bc532d5c9845940b5f59485394187bf6", "apr_id": "8857d756ac4aa47236b0831d6be1b3b0", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,i,j,a[100],b[100],c,p,k,l,g,h,sum;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);}\n\t\tfor(j=0;j<m;j++){\n\t\t\tscanf(\"%d\",&b[j]);}\n\t\t\tc=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tif(a[i]%2==0){\n\t\t\tc++;}}\n\t\t\tp=n-c;\n\t\t\n\t\tk=0;\n\t\tfor(j=0;j<m;j++){\n\t\t\tif(b[j]%2==0){\n\t\t\t\tk++;}}\n\t\t\t\tl=m-k;\n\t\t\n\t\tif(k<=p){\n\t\t\tg=k;}\n\t\t\telse\n\t\t\t{g=p;}\n\t\t\tif(l<=c){\n\t\t\t\th=l;}\n\t\t\t\telse{h=c;}\n\t\t\t\tsum=g+h;\n\t\t\t\tprintf(\"%d\\n\",sum);\n\t\t\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,i,j,c,p,k,l,g,h,sum;\n\tscanf(\"%d %d\",&n,&m);\nint a[n],b[m];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);}\n\t\tfor(j=0;j<m;j++){\n\t\t\tscanf(\"%d\",&b[j]);}\n\t\t\tc=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tif(a[i]%2==0){\n\t\t\tc++;}}\n\t\t\tp=n-c;\n\t\t\n\t\tk=0;\n\t\tfor(j=0;j<m;j++){\n\t\t\tif(b[j]%2==0){\n\t\t\t\tk++;}}\n\t\t\t\tl=m-k;\n\t\t\n\t\tif(k<=p){\n\t\t\tg=k;}\n\t\t\telse\n\t\t\t{g=p;}\n\t\t\tif(l<=c){\n\t\t\t\th=l;}\n\t\t\t\telse{h=c;}\n\t\t\t\tsum=g+h;\n\t\t\t\tprintf(\"%d\\n\",sum);\n\t\t\t\treturn 0;\n}"}
{"similarity_score": 0.9356388088376562, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "881dc059dcedc4f81556a3db1f689205", "bug_code_uid": "f7ca3d430a306d522c447f88ee76b6b3", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "caac493331e7f5640a8a2d3ef029b5fb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int n, a[1001], i;\n    int j = 0, store[1001];\n\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        if(i>0)\n        {\n            if(a[i]<=a[i-1])\n            {\n                store[j++] = a[i-1];\n            }\n            if(i==n-1){\n                store[j++] = a[i];\n            }\n        }\n    }\n\n    printf(\"%d\\n\", j);\n    for(i=0; i<j; i++)\n        printf(\"%d \", store[i]);\n\n    printf(\"\\n\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int n, a[1001], i;\n    int j = 0, store[1001];\n\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        if(i>0)\n        {\n            if(a[i]<=a[i-1])\n            {\n                store[j++] = a[i-1];\n            }\n            if(i==n-1){\n                store[j++] = a[i];\n            }\n        }\n        if(n==1){\n                store[j++] = a[i];\n            }\n    }\n\n    printf(\"%d\\n\", j);\n    for(i=0; i<j; i++)\n        printf(\"%d \", store[i]);\n\n    printf(\"\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.7362804878048781, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "dfc910523e9c0434f837df1f0ed4b25c", "bug_code_uid": "0982a5205bcaa8725c7e23c80eddc32e", "src_uid": "9363df0735005832573ef4d17b6a8302", "apr_id": "8d5c49948ead24380ca92dad21d82338", "difficulty": 800, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,l,r,k;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int odd = 0,even = 0;\r\n        scanf(\"%d %d %d\",&l,&r,&k);\r\n        if(l == r&&l!=1){\r\n            printf(\"YES\\n\");\r\n            continue;\r\n        }\r\n        if(l == r&&l == 1){\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        for(int i = l;i<=r;i++){\r\n            if(i%2 == 0){\r\n                even++;\r\n            }else{\r\n                odd++;\r\n            }\r\n        }\r\n        if(k>=odd){\r\n            printf(\"YES\\n\");\r\n        }else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,l,r,k;\r\n    scanf(\"%lld\",&t);\r\n    while(t--){\r\n        long long int odd = 0;\r\n        scanf(\"%lld %lld %lld\",&l,&r,&k);\r\n        if(l == r&&l!=1){\r\n            printf(\"YES\\n\");\r\n            continue;\r\n        }\r\n        if(l == r&&l == 1){\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        if(l%2 == 1&&r%2 == 1){\r\n            odd = (r-l+1)/2+1;\r\n        }else if(l%2 == 0&&r%2 == 0){\r\n            odd = (r-l+1)/2;\r\n        }else{\r\n            odd = (r-l+1)/2;\r\n        }\r\n        if(k>=odd){\r\n            printf(\"YES\\n\");\r\n        }else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.34327449786975045, "equal_cnt": 18, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "f82c49471444e2c42e9f58dde186dcc2", "bug_code_uid": "6ed2e6cfe9da775dc4036a0d0b0c6fe3", "src_uid": "5b1f33228a58d9e14bc9479767532c25", "apr_id": "19ecf4a888ac495c43a354c973048a0b", "difficulty": 1100, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint fun(long long int a,long long int b,long long int c,long long int d)\r\n{\r\n    while(a>0 && c>0)\r\n    {\r\n        c = c - b;\r\n        a = a - d;\r\n    }\r\n    if(c<=0)\r\n    return 1;\r\n    else\r\n    return 0;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    long long int hc[t], dc[t], hm[t], dm[t], k[t], w[t], a[t];\r\n    \r\n    int i, j;\r\n    int flag[t];\r\n    for(i=0;i<t;i++)\r\n    flag[i]=0;\r\n    int m=0;\r\n    while(m<t)\r\n    {\r\n    scanf(\"%lld %lld %lld %lld %lld %lld %lld\", &hc[m], &dc[m], &hm[m], &dm[m], &k[m], &w[m], &a[m]);\r\n    \r\n        for(i=0;i<=k[m];i++)\r\n        {\r\n            if(fun((hc[m]+a[m]*i),(dc[m]+w[m]*(k[m]-i)),hm[m],dm[m])==1)\r\n            flag[m]=1;\r\n        }\r\n        m++;\r\n    }\r\n    for(i=0;i<t;i++)\r\n    {\r\n        if(flag[i]==1)\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    long long int d, e;\r\n    scanf(\"%d\", &t);\r\n    long long int hc[t], dc[t], hm[t], dm[t], k[t], w[t], a[t];\r\n    \r\n    int i, j;\r\n    int flag[t];\r\n    for(i=0;i<t;i++)\r\n    flag[i]=0;\r\n    int m=0;\r\n    while(m<t)\r\n    {\r\n    scanf(\"%lld %lld %lld %lld %lld %lld %lld\", &hc[m], &dc[m], &hm[m], &dm[m], &k[m], &w[m], &a[m]);\r\n    \r\n        for(i=0;i<=k[m];i++)\r\n        {\r\n             d = dc[m]+w[m]*i;\r\n             e = hc[m]+a[m]*(k[m]-i);\r\n            if(((hm[m]+d-1)/d) <= ((e+dm[m]-1)/dm[m]))\r\n            {\r\n                flag[m]=1;\r\n            }\r\n        }\r\n        \r\n        m++;\r\n    }\r\n    for(i=0;i<t;i++)\r\n    {\r\n        if(flag[i]==1)\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9386792452830188, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "50756bc511f327dce11f69cfd51d1764", "bug_code_uid": "e29cdd4a9f02db0536c875ee8220670f", "src_uid": "e1abc81cea4395ba675cf6ca93261ae8", "apr_id": "927e5ecd792efff8ccb93f4e3212feed", "difficulty": 1100, "tags": ["dp", "implementation", "*special", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nstruct man{\n    int w;\n    int h;\n};\n\nint main(void)\n{\n    int n, i = 0, H1 = 0, H2 = 0, W = 0;\n    scanf(\"%d\",&n);\n    struct man men[200002];\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&men[i].w,&men[i].h);\n        if(men[i].h > H1)\n            H1 = men[i].h;\n        else if(men[i].h > H2)\n            H2 = men[i].h;\n        W+=men[i].w;\n    }\n\n    for(i = 1; i <= n; i++)\n    {\n        if(men[i].h != H1)\n            printf(\"%d \",(W-men[i].w)*H1);\n        else\n            printf(\"%d \",(W-men[i].w)*H2);\n    }\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nstruct man{\n    int w;\n    int h;\n};\n\nint main(void)\n{\n    int n, i = 0, H1 = 0, H2 = 0, W = 0;\n    scanf(\"%d\",&n);\n    struct man men[200002];\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&men[i].w,&men[i].h);\n        if(men[i].h > H1)\n        {\n            H2 = H1;\n            H1 = men[i].h;\n        }\n        else if(men[i].h > H2)\n            H2 = men[i].h;\n        W+=men[i].w;\n    }\n    for(i = 1; i <= n; i++)\n    {\n        if(men[i].h != H1)\n            printf(\"%d \",(W-men[i].w)*H1);\n        else\n            printf(\"%d \",(W-men[i].w)*H2);\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.026206075044669448, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "af90a180306acf1bce3dab6ebc8aba86", "bug_code_uid": "8289339a93bd54f32763a2077a40178c", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "1b9a9ef570d4b4348ba35080881d1129", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\nusing namespace std;\nstruct year1\n{\n    char sname[20];\n    char tname[20];\n} year[10000];\nint main()\n{\nint divisor (int a,int b); /*\ufffd\u0536\ufffd\ufffd\u5eaf\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u053c\ufffd\ufffd*/\nint big(int a,int b);\n    int n,m;\n    cin>>n>>m;\n    for(int i=0;i<n;i++)\n        cin>>year[i].sname;\n    for(int i=0;i<m;i++)\n        cin>>year[i].tname;\n    int input[10000];\n    int num;\n    cin>>num;\n    for(int i=0;i<num;i++)\n        cin>>input[i];\n    for(int i=0;i<num;i++)\n        cout<<year[(input[i]%(big(n,m))-1)%n].sname<<year[(input[i]%((m*n)/divisor(n,m))-1)%m].tname<<endl;\n}\nint divisor (int a,int b) /*\ufffd\u0536\ufffd\ufffd\u5eaf\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u053c\ufffd\ufffd*/\n\t{\n\t    int  temp;          /*\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0371\ufffd\ufffd\ufffd*/\n\t    temp=(a>b)?b:a;   /*\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u02bd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0435\ufffd\ufffd\ufffd\u0421\u05b5*/\n\t    while(temp>0)\n\t    {\n\t       if (a%temp==0&&b%temp==0) /*\u05bb\u04aa\ufffd\u04b5\ufffd\u04bb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u036c\u02b1\ufffd\ufffda,b\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b9\u046d\ufffd\ufffd*/\n\t          break;\n\t       temp--;      /*\ufffd\u7cbb\ufffd\ufffd\ufffd\ufffdif\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u053c\ufffd\ufffd\ufffd\u05b1\ufffd\ufffd\ufffd\u0731\ufffda,b\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd*/\n\t    }\n\t  return (temp);  /*\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd*/\n\t}\nint big(int a,int b)\n{\n    return (a*b/divisor(a,b));\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int n,m,q;\n    int y;\n    int s1,t1;\n    scanf(\"%d%d\",&n,&m);\n    char s[n][2025],t[m][2025];\n    for(int i=0;i<n;i++)\n        scanf(\"%s\",s[i]);\n    for(int i=0;i<m;i++)\n        scanf(\"%s\",t[i]);\n    scanf(\"%d\",&q);\n    char str[q][4045];\n    for(int i=0;i<q;i++)\n    {\n        scanf(\"%d\",&y);\n        if(y%n==0)\n            s1=n-1;\n        else\n            s1=y%n-1;\n        if(y%m==0)\n            t1=m-1;\n        else\n            t1=y%m-1;\n        strcpy(str[i],s[s1]);\n        strcat(str[i],t[t1]);\n    }\n    for(int i=0;i<q;i++)\n        printf(\"%s\\n\",str[i]);\n    return 0;\n}"}
{"similarity_score": 0.9943609022556391, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "137d3f83a3625988b13f733068dbc2e3", "bug_code_uid": "f8a70b95cc293ab401118f651ae65633", "src_uid": "2c7add49d423de44a2bc09de56ffacf1", "apr_id": "7bdf8b03c20e3c0d224e817e689621e5", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include\"stdio.h\"\r\n\r\nvoid solve(){\r\n    char s[8][8];\r\n    for(int i = 0;i < 8;i++){\r\n        scanf(\"%s\",s[i]);\r\n    }\r\n    char ans = '.';\r\n    for(int i = 0;i <8;i++){\r\n        if(s[i][0] == 'R' && s[i][1] == 'R' && s[i][2]==\"R\"&& s[i][3]=='R' && s[i][4]=='R'&&s[i][5]=='R'&&s[i][6]=='R'&&s[i][7]=='R'){\r\n            ans ='R';break;\r\n        }\r\n    }\r\n   if(ans == 'R'){printf(\"%c\\n\",ans);}\r\n    else{printf(\"B\\n\");}\r\n    \r\n    \r\n    \r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n}", "fixed": "#include\"stdio.h\"\r\n\r\nvoid solve(){\r\n    char s[8][8];\r\n    for(int i = 0;i < 8;i++){\r\n        scanf(\"%s\",s[i]);\r\n    }\r\n    char ans = '.';\r\n    for(int i = 0;i <8;i++){\r\n        if(s[i][0] == 'R' && s[i][1] == 'R' && s[i][2]=='R'&& s[i][3]=='R' && s[i][4]=='R'&&s[i][5]=='R'&&s[i][6]=='R'&&s[i][7]=='R'){\r\n            ans ='R';break;\r\n        }\r\n    }\r\n   if(ans == 'R'){printf(\"%c\\n\",ans);}\r\n    else{printf(\"B\\n\");}\r\n    \r\n    \r\n    \r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n}"}
{"similarity_score": 0.9571428571428572, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "52ee0f5017f684cd2a87b252e53e1ea8", "bug_code_uid": "cecc0c536359bc649889fc43234bb4f1", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "ca28491e6bd706766e8f2be7c40e09eb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint main()\n{\tint t,i=0,n,h;\n\tscanf(\"%d %d\",&n,&h);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&a[i]);\n\tif(a[i]>h)\n\t{i+2;}\n\telse\n\t{i++;}\n\t}\n\tprintf(\"%d\\n\",i);\n\treturn 0;}", "fixed": "#include <stdio.h>\n#include<string.h>\nint main()\n{\tint t,i,n,h,p=0;\n\tscanf(\"%d %d\",&n,&h);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&a[i]);\n\tif(a[i]>h)\n\t{p=p+2;}\n\telse\n\t{p++;}\n\t}\n\tprintf(\"%d\\n\",p);\n\treturn 0;}"}
{"similarity_score": 0.8534599728629579, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c7fcc358444de4f59ded86289d3c6e06", "bug_code_uid": "265a165505f8e875bbb79e681370d049", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "cf34f247ee8aa2b7a0cc84f8fd71ef2b", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int *cnt,coin=0;\n    //ara=malloc(sizeof(int)*n);\n    cnt=malloc(sizeof(int)*n);\n    for(int i=0;i<n;i++)\n    {\n        cnt[i]=0;\n    }\n    for(int i=0;i<n;i++)\n    {\n        int a;\n        scanf(\"%d\",&a);\n        cnt[a-1]++;\n    }\n    for(int i=0,j=1;i<n;i++)\n    {\n        if(j<=i)\n            j++;\n        if(cnt[i]>1)\n        {\n            if(j<n)\n            {\n                for(;cnt[j] && j<n;j++);\n            }\n            else\n            {\n                j++;\n            }\n            coin+=j-i;\n            cnt[j++]++;\n        }\n    }\n    printf(\"%d\\n\",coin);\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int *cnt,coin=0;\n    cnt=(int*)malloc(sizeof(int)*n);\n    for(int i=0;i<n;i++)\n    {\n        cnt[i]=0;\n    }\n    for(int i=0;i<n;i++)\n    {\n        int a;\n        scanf(\"%d\",&a);\n        cnt[a-1]++;\n    }\n    for(int i=0,j=1;i<n;)\n    {\n        if(j<i)\n            j++;\n        if(cnt[i]>1)\n        {\n            if(j<n)\n            {\n                for(;cnt[j] && j<n-1;j++);\n                if(cnt[j]!=0)\n                    j++;\n            }\n            else\n            {\n                j++;\n            }\n            coin+=j-i;\n            if(j<n)\n                cnt[j]++;\n            cnt[i]--;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    printf(\"%d\\n\",coin);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9835051546391752, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "fc437223f4e0273ad90bf8932f44e003", "bug_code_uid": "4792e1bfb6b5bb377c92185e5318f890", "src_uid": "aa31a2a1ad1575aee051ddee8642c53a", "apr_id": "91795f9508014b7dc025e13044d41f4f", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int  a, b=0, i, j, x, y, p, q, d1, d2, N=0, E=0, S=0, W=0;\n    long long int t;\n    scanf(\"%I64d %I64d %I64d %I64d %I64d\", &t, &x ,&y, &p, &q);\n    char st[100003];\n    scanf(\"%s\", st);\n    if(x==p && y==q){\n        printf(\"0\");\n        return 0;\n    }\n    d1 = p-x;\n    d2 = q-y;\n    if(d1>0){\n        E=1;\n    }\n    else if(d1<0){\n        W=1;\n    }\n    if(d2>0){\n        N=1;\n    }\n    else if(d2<0){\n        S=1;\n    }\n    a = strlen(st);\n    for(i=0;i<a;i++){\n        if(st[i]=='E' && E==1){\n            x++;\n        }\n        else if(st[i]=='W' && W==1){\n            x--;\n        }\n        else if(st[i]=='N' && N==1){\n            y++;\n        }\n        else if(st[i]=='S' && S==1){\n            y--;\n        }\n        if(x==p && y==q){\n            b=1;\n            break;\n        }\n\n    }\n    if(b==1){\n        printf(\"%I64d\", i+1);\n    }\n    else if(b==0){\n        printf(\"-1\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int  a, b=0, i, j, x, y, p, q, d1, d2, N=0, E=0, S=0, W=0;\n    long long int t;\n    scanf(\"%I64d %I64d %I64d %I64d %I64d\", &t, &x ,&y, &p, &q);\n    char st[100003];\n    scanf(\"%s\", st);\n    if(x==p && y==q){\n        printf(\"0\");\n        return 0;\n    }\n    d1 = p-x;\n    d2 = q-y;\n    if(d1>0){\n        E=1;\n    }\n    else if(d1<0){\n        W=1;\n    }\n    if(d2>0){\n        N=1;\n    }\n    else if(d2<0){\n        S=1;\n    }\n    a = strlen(st);\n    for(i=0;i<a;i++){\n        if(st[i]=='E' && E==1 && x!=p){\n            x++;\n        }\n        else if(st[i]=='W' && W==1 && x!=p){\n            x--;\n        }\n        else if(st[i]=='N' && N==1 && y!=q){\n            y++;\n        }\n        else if(st[i]=='S' && S==1 && y!=q){\n            y--;\n        }\n        if(x==p && y==q){\n            b=1;\n            break;\n        }\n\n    }\n    if(b==1){\n        printf(\"%I64d\", i+1);\n    }\n    else if(b==0){\n        printf(\"-1\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.34167385677308026, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c86aab07f30465c4a9d473d1f3e4b689", "bug_code_uid": "2a487d6b0648ee8142ba91a308dbd545", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "0a9f723eb04aee088dad33c067b37c44", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint comp(const void *x,const void *y)\n{\n    return(*(int*)x-*(int*)y);\n}\nint main()\n{\n    long long int n,a[10000]={0},b[10000]={0},c[10000]={0},i,min=0,sum=0,j;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld %lld\",&a[i],&b[i]);\n        c[i]=b[i];\n    }\n    qsort(c, n, sizeof(long long int),comp);\n    min=c[0];\n    for(i=0;i<n;i++)\n    {\n        if(min==b[i])\n        {\n            for(j=i;j<n;j++)\n            {\n                sum=sum+(a[j]*min);\n            }\n            if(j==n)\n            {\n                break;\n            }\n        }\n        else\n        {\n            sum=sum+(a[i]*b[i]);\n        }\n    }\n    printf(\"%lld\\n\",sum);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,a[100000]={0},b[100000]={0},i,min=0,sum=0;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld %lld\",&a[i],&b[i]);\n        if(i==0)\n        {\n            min=b[i];\n            sum=sum+(a[i]*b[i]);\n        }\n        else\n        {\n            if(min>b[i])\n            {\n                min=b[i];\n            }\n            sum=sum+(a[i]*min);\n        }\n    }\n    printf(\"%lld\\n\",sum);\n}\n"}
{"similarity_score": 0.8907563025210085, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "d3c060d0346307d27a298ffbac0c5024", "bug_code_uid": "f2f26e4dedaa248681ac3298a419a7aa", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "673ea4789ed3af054665ffbbb2d09803", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int n, i, j;\n    scanf(\"%d\", &n);\n    long long int ara[n], result[n], count=0;\n    double x;\n    for(i=0; i<n; i++){\n        scanf(\"%lld\", &ara[i]);\n    }\n    for(i=0, j=0; i<n; i++){\n        x=sqrt((double)ara[i]);\n        if(x!=ceil(x)){\n            result[j]=ara[i];\n            count++;\n            j++;\n        }\n    }\n    long long int max=0;\n    for(i=0; i<count; i++){\n        if(result[i]>max){\n            max=result[i];\n        }\n    }\n    printf(\"%lld\\n\", max);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    int n, i, j;\n    scanf(\"%d\", &n);\n    long long int ara[n], result[n], count=0;\n    double x;\n    for(i=0; i<n; i++){\n        scanf(\"%lld\", &ara[i]);\n    }\n    for(i=0, j=0; i<n; i++){\n        if(ara[i]<0){\n            result[j]=ara[i];\n            count++;\n            j++;\n        }\n        else{\n        x=sqrt((double)ara[i]);\n        if(x!=ceil(x)){\n            result[j]=ara[i];\n            count++;\n            j++;\n        }\n    }\n    }\n    long long int max=-1000000000;\n    for(i=0; i<count; i++){\n        if(result[i]>max){\n            max=result[i];\n        }\n    }\n    printf(\"%lld\\n\", max);\n}\n"}
{"similarity_score": 0.9202614379084967, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "47054afae25b1768caacd8726209cfea", "bug_code_uid": "5b737f301b1d4432485030ee41aafc87", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "3e172f4a5515222331263cf3efe81fa1", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int max=-1,n,i;\n   int v[100001],a[100001];\n   scanf(\" %d\",&n);\n   for(i=n-1;i>=0;i++)\n   {\n       if(v[i]>=max)\n       {\n           max=v[i]+1;\n           a[i]=0;\n       }\n       else\n       {\n           a[i]=max-v[i];\n       }\n   }\n   for(i=0;i<n;i++)\n   {\n       printf(\"%d\",a[i]);\n   }\n   return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int max=-1,n,i;\n   int v[100001],a[100001];\n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n    scanf(\"%d\",&v[i]);\n   for(i=n-1;i>=0;i--)\n   {\n       if(v[i]>=max)\n       {\n           max=v[i]+1;\n           a[i]=0;\n       }\n       else\n       {\n           a[i]=max-v[i];\n       }\n   }\n   for(i=0;i<n;i++)\n   {\n       printf(\"%d \",a[i]);\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.9894366197183099, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "11cdecfb7b12bb57964d1485a96902be", "bug_code_uid": "ef625c570b620863678ecb8f27a658d1", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "d23f255ea66134c361653c2cd5dd03f0", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a,b,c,d;\n\tscanf(\"%d %d %d %d\",&a,&b,&c,&d);\n\tif(a==c)\n\t\tprintf(\"%d %d %d %d\",a+d-b,b,c+d-b,d);\n\telse if(b==d)\n\t\tprintf(\"%d %d %d %d\",a,b+a-c,c,d+a-c);\n\telse if(a-c==b-d||a-c==d-b)\n\t\tprintf(\"%d %d %d %d\",a,d,b,c);\n\telse\n\t\tprintf(\"-1\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a,b,c,d;\n\tscanf(\"%d %d %d %d\",&a,&b,&c,&d);\n\tif(a==c)\n\t\tprintf(\"%d %d %d %d\",a+d-b,b,c+d-b,d);\n\telse if(b==d)\n\t\tprintf(\"%d %d %d %d\",a,b+a-c,c,d+a-c);\n\telse if(a-c==b-d||a-c==d-b)\n\t\tprintf(\"%d %d %d %d\",a,d,c,b);\n\telse\n\t\tprintf(\"-1\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9018789144050104, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5db759b47ed34b8f998da74015293b5e", "bug_code_uid": "1621dfca0016e03f92d103733aeff840", "src_uid": "1d9d34dca11a787d6e2345494680e717", "apr_id": "dd3448e0bcaed2e44a1c3dfc8ff39bb8", "difficulty": 800, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int i,a[n],s1=0,s2=0;\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]==1)\r\n            s1++;\r\n            else\r\n            s2++;\r\n        }\r\n        if((s1%2==0 && s2%2==0)||(s1%2==0 && s2%2==1))\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int i,a[n],s1=0,s2=0;\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]==1)\r\n            s1++;\r\n            else\r\n            s2++;\r\n        }\r\n        if((s1%2==0 && s2%2==0))\r\n        printf(\"YES\\n\");\r\n        else if((s1%2==0 && s2%2==1)&& s1>0)\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9989615784008308, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5a22cea39edd28d4674a2f3c2835c61b", "bug_code_uid": "327afd149915399d38fe379f7998e2d4", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "7f1c969aeef6b265eb263e1d0b22aafa", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint i=0,z,flag=0,even=0;\n\t\n\tchar str[10000],temp;\n\tscanf(\"%s\",str);\n\tint size=strlen(str);\n\tchar x=str[size-1];\n\tfor(i=0;i<size;i++){\n\t\tif(str[i]%2==0){\n\t\t\teven=1;\n\t\t\tif(str[i]<x){\n\t\t\t\tflag=1;\n\t\t\t     str[size-1]=str[i];\n\t\t\t     str[i]=x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tz=i;\n\t\t\t}\n\t\t}\n\t}\n\tif(i>=size && even==1){\n\t\tflag=1;\n\t\tstr[size-1] = str[z];\n\t\tstr[z] = x; \n\t}\n\tif(flag==1){\t\n\tprintf(\"%s\",str);\n}\n\telse\n\tprintf(\"-1\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint i=0,z,flag=0,even=0;\n\t\n\tchar str[100002],temp;\n\tscanf(\"%s\",str);\n\tint size=strlen(str);\n\tchar x=str[size-1];\n\tfor(i=0;i<size;i++){\n\t\tif(str[i]%2==0){\n\t\t\teven=1;\n\t\t\tif(str[i]<x){\n\t\t\t\tflag=1;\n\t\t\t     str[size-1]=str[i];\n\t\t\t     str[i]=x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tz=i;\n\t\t\t}\n\t\t}\n\t}\n\tif(i>=size && even==1){\n\t\tflag=1;\n\t\tstr[size-1] = str[z];\n\t\tstr[z] = x; \n\t}\n\tif(flag==1){\t\n\tprintf(\"%s\",str);\n}\n\telse\n\tprintf(\"-1\");\n\treturn 0;\n}"}
{"similarity_score": 0.9993265993265993, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b24f990d39a1975dad2d1ec2ef40a907", "bug_code_uid": "4e9f696e21bf6ddb0f95e915b1afe0fc", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "22a6b41aa56fb9802c6aedf24d1a4824", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid ps(int n,int tn,int ans[],int pn);\n \nint main()\n{\n    int t,n,ans[3];\n    scanf(\"%d\",&t);\n    for(int in=1;in<=t;in++)\n    {\n        scanf(\"%d\",&n);\n        ps(n,2,ans,0);\n    }\n}\n \nvoid ps(int n,int tn,int ans[],int pn)\n{\n    if(tn*tn<=n)\n    {\n        if(n%tn==0)\n        {\n        \tans[pn]=tn;\n        \tif(pn<1)\n        \t{\n            \tn/=tn;\n            \tps(n,tn+1,ans,pn+1);\n        \t}\n        \telse\n        \t{\n        \t\tans[pn+1]=n/tn;\n        \t\tprintf(\"YES\\n\");\n        \t\tfor(int pt=0;pt<3;pt++)\n        \t\t{\n        \t\t\tprintf(\"%d \",ans[pt]);\n        \t\t}\n        \t\tprintf(\"\\n\");\n        \t}\n        }\n        else\n        {\n        \tps(n,tn+1,ans,pn);\n        }\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n}", "fixed": "#include <stdio.h>\nvoid ps(int n,int tn,int ans[],int pn);\n \nint main()\n{\n    int t,n,ans[3];\n    scanf(\"%d\",&t);\n    for(int in=1;in<=t;in++)\n    {\n        scanf(\"%d\",&n);\n        ps(n,2,ans,0);\n    }\n}\n \nvoid ps(int n,int tn,int ans[],int pn)\n{\n    if(tn*tn<n)\n    {\n        if(n%tn==0)\n        {\n        \tans[pn]=tn;\n        \tif(pn<1)\n        \t{\n            \tn/=tn;\n            \tps(n,tn+1,ans,pn+1);\n        \t}\n        \telse\n        \t{\n        \t\tans[pn+1]=n/tn;\n        \t\tprintf(\"YES\\n\");\n        \t\tfor(int pt=0;pt<3;pt++)\n        \t\t{\n        \t\t\tprintf(\"%d \",ans[pt]);\n        \t\t}\n        \t\tprintf(\"\\n\");\n        \t}\n        }\n        else\n        {\n        \tps(n,tn+1,ans,pn);\n        }\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n}"}
{"similarity_score": 0.9824561403508771, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "63df5c4e54828844895e8a12cfc4c6d7", "bug_code_uid": "d0b6789d1fa45a80475a8fb3c171045d", "src_uid": "f7defb09175c842de490aa13a4f5a0c9", "apr_id": "a53de76227d1c90cc476b5f5e6b1ba54", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tint x,y,i=0;\r\n\tint  t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d%d\",&x,&y);\r\n\t\ti=0;\r\n\t\tif(y%x==0&&x<=y)\r\n\t\t{\r\n\t\t\ti=1;\r\n\t\t\tint  sum=0;\r\n\t\t\tsum=y/x;\r\n\t\t\tprintf(\"%d %d\\n\",sum,i);\r\n\t\t}\r\n\t\tif(i==0)printf(\"0 0\\n\");\r\n\t}\r\n\treturn 0;\r\n } ", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tint x,y,i=0;\r\n\tint  t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d%d\",&x,&y);\r\n\t\ti=0;\r\n\t\tif(y%x==0&&x<=y)\r\n\t\t{\r\n\t\t\ti=1;\r\n\t\t\tint  sum=0;\r\n\t\t\tsum=y/x;\r\n\t\t\tprintf(\"%d %d\\n\",i,sum);\r\n\t\t}\r\n\t\tif(i==0)printf(\"0 0\\n\");\r\n\t}\r\n\treturn 0;\r\n } "}
{"similarity_score": 0.9763617677286742, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "96f570b7bcc641affe050717db201a74", "bug_code_uid": "6208ce715e7ca68219969f0fd80337bd", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "a95f941197d4dfd4d19d54e210e871cd", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nchar s[100001],s1[27]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nint n,k,i,j,b,a[26],sum=0,temp,min;\nscanf(\"%d%d\",&n,&k);\nscanf(\"%s\",s);\nfor(i=0;i<26;i++)\n{\nb=0;\nfor(j=0;j<n;j++)\n{\nif(s1[i]==s[j])b++;\n}\na[i]=b;\n}\n\nfor(i=0;i<25;i++)\n{\nmin=i;\nfor(j=i+1;j<26;j++)\n{\nif(a[j]>a[min])\nmin=j;\n}\nif(min!=i)\n{\ntemp=a[i];\na[i]=a[min];\na[min]=temp;\n}\n}\nfor(i=0;i<26;i++)\n{\nif(a[i]>=k){sum=sum+k*k;break;}\nelse if(a[i]<k){sum=sum+a[i]*a[i];k=k-a[i];}\n}\nprintf(\"%d\",sum);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nchar s[100001],s1[27]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlong long  n,k,i,j,b,a[26],sum=0,temp,min;\nscanf(\"%I64d%I64d\",&n,&k);\nscanf(\"%s\",s);\nfor(i=0;i<26;i++)\n{\nb=0;\nfor(j=0;j<n;j++)\n{\nif(s1[i]==s[j])b++;\n}\na[i]=b;\n}\n\nfor(i=0;i<25;i++)\n{\nmin=i;\nfor(j=i+1;j<26;j++)\n{\nif(a[j]>a[min])\nmin=j;\n}\nif(min!=i)\n{\ntemp=a[i];\na[i]=a[min];\na[min]=temp;\n}\n}\nfor(i=0;i<26;i++)\n{\nif(a[i]>=k){sum=sum+k*k;break;}\nelse if(a[i]<k){sum=sum+a[i]*a[i];k=k-a[i];}\n}\nprintf(\"%I64d\",sum);\n}"}
{"similarity_score": 0.9976905311778291, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6fc55c727d0d314966a7584e39aedbef", "bug_code_uid": "f5b7dfcb3967739359d7961077d9af39", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "bc9199d215a88675df6337c2f515a2aa", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\nint a,b,c,d,e,f,g,h;\nscanf(\"%d %d %d %d\",&a,&b,&c,&d);\nint count=0;\nint len;\nif(b-d==0)\n{\nlen= abs(a-c);\ne=a;\nf=b+len;\ng=c;\nh=f+len;\ncount=1;\n}\nelse if(a-c==0)\n{\nlen= abs(d-b);\ne=a+len;\nf=b;\ng=c+len;\nh=d;\ncount=1;\n}\nelse if( abs(d-b)==abs(a-c))\n{\ne=c;\nf=b;\ng=a;\nh=d;\ncount=1;\n}\nif(count==1)\nprintf(\"%d %d %d %d\",e,f,g,h);\nelse\nprintf(\"-1\");\nreturn 0;\n}\n\n\n\n\n\n\n\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\nint a,b,c,d,e,f,g,h;\nscanf(\"%d %d %d %d\",&a,&b,&c,&d);\nint count=0;\nint len;\nif(b-d==0)\n{\nlen= abs(a-c);\ne=a;\nf=b+len;\ng=c;\nh=d+len;\ncount=1;\n}\nelse if(a-c==0)\n{\nlen= abs(d-b);\ne=a+len;\nf=b;\ng=c+len;\nh=d;\ncount=1;\n}\nelse if( abs(d-b)==abs(a-c))\n{\ne=c;\nf=b;\ng=a;\nh=d;\ncount=1;\n}\nif(count==1)\nprintf(\"%d %d %d %d\",e,f,g,h);\nelse\nprintf(\"-1\");\nreturn 0;\n}\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.7675675675675676, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "f87fdef897f9bb9e32b770c92f0502c8", "bug_code_uid": "a26472104bf50b0c2dcc04d1148dd8ea", "src_uid": "36fb3a01860ef0cc2a1065d78e4efbd5", "apr_id": "5af4f9d8f9d8256389cca5353d69a5d8", "difficulty": 1500, "tags": ["brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    long n,m,i,j;\n    char a[200000],s[200000];\n    scanf(\"%ld\",&n);\n    m=0;\n\ta[0]='\\0';\n    for(i=1;i<=n;i++){\n\t   strcat(a,\"<3\");\n       scanf(\"%s\",s);\n\t   strcat(a,s);\n    }\n\tstrcat(a,\"<3\");\n    i=0;\n\tj=0;\n    scanf(\"%s\",s);\n    while(s[j]!='\\0'){\n        if(s[j]==a[i]) i++;\n        j++;\n        if(i>m) break;\n    }\n    if(i>m) printf(\"yes\\n\");\n       else printf(\"no\\n\");\n    return 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    long n,len,i,j;\n    char a[200000],s[200000];\n    scanf(\"%ld\",&n);\n\ta[0]='<';\n\ta[1]='3';\n\tlen=2;\n    for(i=1;i<=n;i++){\n       scanf(\"%s\",a+len);\n\t   len+=strlen(a+len);\n\t   a[len++]='<';\n\t   a[len++]='3';\n    }\n    i=0;\n\tj=0;\n    scanf(\"%s\",s);\n    while(s[j]!='\\0'){\n        if(s[j]==a[i]) i++;\n        j++;\n        if(i>=len) break;\n    }\n    if(i>=len) printf(\"yes\\n\");\n       else printf(\"no\\n\");\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.4927536231884058, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "536a3499e4d328dc9d6c04b52e1ba378", "bug_code_uid": "b14f8631f8007249ee08defe7abd9b42", "src_uid": "70a0b98f2bb12990a0fa46aaf13134af", "apr_id": "8b58b515202419e5bf04efcf9c0aa57c", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int tests;\r\n    int n,m, rem;\r\n    scanf(\"%d\", &tests);\r\n    int arr[tests];\r\n    for(int i = 0 ; i < tests ; i++){\r\n        scanf(\"%d %d\",&n ,&m);\r\n        if(n % 3 == 0){\r\n            arr[i] = (n / 3)*m;\r\n        }else {\r\n            \r\n        int max = 0;\r\n        rem = m % 3;\r\n        max += (m/3)*n;\r\n        max += (rem / 2)*n ;\r\n        arr[i] = max;\r\n        }\r\n    }\r\n    for(int i = 0 ; i < tests ; i++){\r\n        printf(\"%d\\n\", arr[i]);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int tests, n,m;\r\n    scanf(\"%d\", &tests);\r\n    int result[tests];\r\n    for(int i = 0 ; i < tests ; i++){\r\n        scanf(\"%d %d\", &n, &m);\r\n        if(n*m % 3 == 0){\r\n            result[i] = n*m / 3;\r\n        }else {\r\n            result[i] = n*m /3 +1;\r\n        }\r\n    }\r\n    for(int i = 0; i < tests ; i++){\r\n        printf(\"%d\\n\", result[i]);\r\n    }\r\n\r\n}"}
{"similarity_score": 0.8851351351351351, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "58559d9cebec57404fb0b9a7ef7edc2b", "bug_code_uid": "e15ed42265736521b5133e6c92119c0d", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "61fb0f6e999a4c9ba2273a54dda33409", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nint tst;\r\nscanf(\"%d\",&tst);\r\nwhile(tst--)\r\n{\r\nint i,j,n,c;\r\n\r\nscanf(\"%d\",&n);\r\nint a[n];\r\nfor(i=1;i<=n;i++)\r\n{\r\nscanf(\"%d\",&a[i]);\r\n}\r\nfor(i=1;i<=n;i++)\r\n{\r\nc=0;\r\nfor(j=1;j<=n;j++)\r\n{\r\nif(i!=j && a[i]==a[j])\r\n{\r\nc++;\r\n}\r\n}\r\nif(c==0)\r\n{\r\nprintf(\"%d\",i);\r\n}\r\n}\r\n}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nint tst;\r\nscanf(\"%d\",&tst);\r\nwhile(tst--)\r\n{\r\nint i,j,n,c;\r\nscanf(\"%d\",&n);\r\nint a[n];\r\nfor(i=1;i<=n;i++)\r\n{\r\nscanf(\"%d\",&a[i]);\r\n}\r\nfor(i=1;i<=n;i++)\r\n{\r\nc=0;\r\nfor(j=1;j<=n;j++)\r\n{\r\nif((i!=j)&&(a[i]==a[j]))\r\n{\r\nc++;\r\n}\r\n}\r\nif(c==0)\r\nprintf(\"%d\\n\",i);\r\n}\r\n}\r\n}"}
{"similarity_score": 0.9974811083123426, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ad0bfcd7f7314b10544c8d43c1ea4082", "bug_code_uid": "d61e4343f737223f136a27f48b511ff5", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "a759ee6b9393e858ccdb70e7aa653f9e", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[10000][4];\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<4;j++){\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t\tif((a[i][0]==a[i][2]&&a[i][1]+a[i][3]==a[i][0])||(a[i][0]==a[i][3]&&a[i][1]+a[i][2]==a[i][0])||(a[i][1]==a[i][2]&&a[i][0]+a[i][3]==a[i][1])||(a[i][1]==a[i][3]&&a[i][0]+a[i][2]==a[i][1]))\n\t\t\tprintf(\"Yes\\n\");\n\t\telse printf(\"N0\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[10000][4];\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<4;j++){\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t\tif((a[i][0]==a[i][2]&&a[i][1]+a[i][3]==a[i][0])||(a[i][0]==a[i][3]&&a[i][1]+a[i][2]==a[i][0])||(a[i][1]==a[i][2]&&a[i][0]+a[i][3]==a[i][1])||(a[i][1]==a[i][3]&&a[i][0]+a[i][2]==a[i][1]))\n\t\t\tprintf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.6818181818181818, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ab7b55b03da21aa5d4217be0fbf5f9fe", "bug_code_uid": "b5ce04433bb3fc14603bd3532661a4da", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "3af909fb8e5d9bf0364b079300f44c81", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a;\n    scanf(\"%lld\",&a);\n    printf(\"%lld %lld %lld\",a/3,a/3,a/3+(a%3));\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,x,y,z,b;\n    scanf(\"%lld\",&a);\n    x=a-2;\n    y=1;\n    z=1;\n    if(x%3==0)\n    {\n        x--;\n        y++;\n    }\n    printf(\"%lld %lld %lld\",z,y,x);\n    return 0;\n}"}
{"similarity_score": 0.9336670838548186, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "eed755ebb2370a3cd994bf1464095d64", "bug_code_uid": "e8e767d606d47d990212e969fd650162", "src_uid": "b3978805756262e17df738e049830427", "apr_id": "cd16a548edc5729ef52b6bc066e43649", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int test;\n    long long int x,y;\n    scanf(\"%d\",&test);\n    while(test!=0&&test--) {\n        scanf(\"%lld %lld\",&x,&y);\n        if(x%2==0)\n        {\n            printf(\"YES\");\n        }\n        else if(x>=y)\n        {\n            printf(\"YES\");\n        }\n        else {\n            printf(\"NO\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int test;\n    long long int x,y;\n    scanf(\"%d\",&test);\n    while(test!=0&&test--) {\n        scanf(\"%lld %lld\",&x,&y);\n        if((x%2==0 && x>2) || x>=y || (x<y && x>3))\n        {\n            printf(\"YES\");\n        }\n        else if(x==2&&y==3) {\n            printf(\"YES\");\n        }\n        else {\n            printf(\"NO\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9833333333333333, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "be4664b5b2ba43be75ff8a71bc3ad148", "bug_code_uid": "28ed048c13a9d7212d2be05aaec28636", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "a334218da604ad19c58a84a5dd0080e4", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nint t,i,j,n;\r\nscanf(\"%d\",&t);\r\nfor(i=1;i<=t;i++)\r\n{\r\nscanf(\"%d\",&n);\r\nchar s[n],temp;\r\nscanf(\"%s\",s);\r\nfor(i=0;s[i]!='\\0';i++)\r\n{\r\nfor(j=i+1;s[j]!='\\0';j++)\r\n{\r\nif(s[i]<=s[j])\r\n{\r\ntemp=s[i];\r\ns[i]=s[j];\r\ns[j]=temp;\r\n}\r\n}\r\n}\r\nint x=s[0];\r\nprintf(\"%d\\n\",x-96);\r\n}\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nint t,i,j,n,k;\r\nscanf(\"%d\",&t);\r\nfor(k=1;k<=t;k++)\r\n{\r\nscanf(\"%d\",&n);\r\nchar s[n],temp;\r\nscanf(\"%s\",s);\r\nfor(i=0;s[i]!='\\0';i++)\r\n{\r\nfor(j=i+1;s[j]!='\\0';j++)\r\n{\r\nif(s[i]<=s[j])\r\n{\r\ntemp=s[i];\r\ns[i]=s[j];\r\ns[j]=temp;\r\n}\r\n}\r\n}\r\nint x=s[0];\r\nprintf(\"%d\\n\",x-96);\r\n}\r\n}"}
{"similarity_score": 0.9732620320855615, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f045cf5f4d9b9e80437d5eba6e76483e", "bug_code_uid": "7b92324e9ed9b903d94c2ae6196788b2", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "46595f7756fdb0debb7f91f060fa28cb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nvoid main(){\r\n    int t;\r\n    while(t>0){t--;\r\n        int a,b,c,d;\r\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n        int cnt=0;\r\n        if(b>a){cnt++;}\r\n         if(c>a){cnt++;}\r\n          if(d>a){cnt++;}\r\n    \r\n        printf(\"%d\\n\",cnt);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nvoid main(){\r\n    int t;scanf(\"%d\",&t);\r\n    while(t>0){t--;\r\n        int a,b,c,d;\r\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n        int cnt=0;\r\n        if(b>a){cnt++;}\r\n         if(c>a){cnt++;}\r\n          if(d>a){cnt++;}\r\n    \r\n        printf(\"%d\\n\",cnt);\r\n    }\r\n}"}
{"similarity_score": 0.8004587155963303, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "10c1047b78d6f905604edecfd0ba5d82", "bug_code_uid": "3cd6bebed87a47235616484e97144d1d", "src_uid": "62a672fcaee8be282700176803c623a7", "apr_id": "e053ac7560f31867e70b90a845094003", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n\tchar a[100005],b[100];\n\tint n1,n2,i,f,count=0,k;\n\tscanf(\"%s %s\",a,b);\n\tn1=strlen(a);\n\tn2=strlen(b);\n\tfor(i=0;i<n1;i++)\n\t{\n\t\tif(a[i]==b[0])\n\t\t{\n\t\t\tf=0;\n\t\t\tfor(k=i;k<i+n2;k++)\n\t\t\t{\n\t\t\t\tif(a[k]!=b[k-i])\n\t\t\t\t\tf=1;\n\t\t\t}\n\t\t\tif(f==0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n\t\t\t\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n\tchar a[100005],b[100];\n\tint n1,n2,i,f,count=0,k,prev=-1;\n\tscanf(\"%s %s\",a,b);\n\tn1=strlen(a);\n\tn2=strlen(b);\n\tfor(i=0;i<n1;i++)\n\t{\n\t\tif(a[i]==b[0])\n\t\t{\n\t\t\tf=0;\n\t\t\tfor(k=i;k<i+n2;k++)\n\t\t\t{\n\t\t\t\tif(a[k]!=b[k-i])\n\t\t\t\t\tf=1;\n\t\t\t}\n\t\t\tif(f==0)\n\t\t\t{\n\t\t\t\tif(prev==-1)\n\t\t\t\t{\n\t\t\t\tprev=i;\n\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse if(prev<=i && i<=prev+n2-1)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprev=i;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n\t\t\t\n"}
{"similarity_score": 0.9423868312757202, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "cc7a9bf4a66f851b79f90a94aea9f6fc", "bug_code_uid": "a46b69e7e731d87e2a76eb72ba747ef3", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "775a5e8f25530baccc9815d0b5dd18ef", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,temp=0,count=0,c,min;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    min=a[0];\n    c=1;\n    for(i=1;i<n;i++)\n    {\n        if(min>a[i])\n        {\n            min=a[i];\n            c=i+1;\n        }\n        else if(min==a[i])\n        {\n            temp=1;\n            break;\n        }\n    }\n    if(temp==0)\n    {\n        printf(\"%d\",c);\n    }\n    else printf(\"Still Rozdil\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,temp=0,count=0,c,min;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    min=a[0];\n    c=1;\n    for(i=1;i<n;i++)\n    {\n        if(min>a[i])\n        {\n            min=a[i];\n            c=i+1;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(min==a[i] && i!=(c-1))\n        {\n            temp=1;\n            break;\n        }\n    }\n    if(temp==0)\n    {\n        printf(\"%d\",c);\n    }\n    else printf(\"Still Rozdil\");\n}\n"}
{"similarity_score": 0.47520661157024796, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "740f3efdc65ff2a9a6df28652b18c7e1", "bug_code_uid": "410a8734e2cacda6b06e2e47c6453bf6", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "fd9a429537b4aff9858d84e9cbaa78ca", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n, c=0, i;\n    int a[10000];\n    scanf(\"%d\", &n);\n\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &a[i]);\n    }\n\n    for(i=0; i<n-1; i++){\n        if(a[i]==a[i+1]) c++;\n    }\n    printf(\"%d\", c);\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, c=1, i;\n    int a[100000];\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++) scanf(\"%d\", &a[i]);\n    for(i=0; i<n-1; i++){\n        if(a[i]!=a[i+1]) c++;\n    }\n    printf(\"%d\", c);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9468852459016394, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "c9b1734b2c3ca0a3bbca55ca3476dc17", "bug_code_uid": "cee36c04c889284adbdc089bc4bd4669", "src_uid": "fbde86a29f416b3d83bcc63fb3776776", "apr_id": "d0a8eb1d4847afa7c307d57161464626", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int a,n,b,c,i,j,k;\n    char str[200000];\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"a\");\n    }\n   else if(n==2)\n    {\n        printf(\"ab\");\n    }\n    else if(n==3)\n    {\n        printf(\"aab\");\n    }\n    else if(n==4)\n    {\n        printf(\"aabb\");\n    }\n    else\n    {\n    for(i=0;i<n;)\n    {\n        if(i<n-1)\n        {\n        str[i]='a';\n        i++;\n        }\n        if(i<n-1)\n        {\n        str[i]='a';\n        i++;\n        }\n        if(i<n-1)\n        {\n        str[i]='b';\n        i++;\n        }\n        if(i<n-1)\n        {\n        str[i]='b';\n        i++;\n        }\n\n      if(i==n-1)\n     {\n        str[i]='c';\n        break;\n     }\n\n    }\n    printf(\"%s\",str);\n   }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int a,n,b,c,i,j,k;\n    char str[200000];\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"a\");\n    }\n   else if(n==2)\n    {\n        printf(\"ab\");\n    }\n    else if(n==3)\n    {\n        printf(\"aab\");\n    }\n    else if(n==4)\n    {\n        printf(\"aabb\");\n    }\n    else\n    {\n    for(i=0;i<n;)\n    {\n        if(i<=n-1)\n        {\n        str[i]='a';\n        i++;\n        }\n        if(i<=n-1)\n        {\n        str[i]='a';\n        i++;\n        }\n        if(i<=n-1)\n        {\n        str[i]='b';\n        i++;\n        }\n        if(i<=n-1)\n        {\n        str[i]='b';\n        i++;\n        }\n       // if(i==n-1)\n        //{\n\n          //  break;\n        //}\n}\n    printf(\"%s\",str);\n   }\n}\n"}
{"similarity_score": 0.37587006960556846, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "880c73be583d1ec903622d5508fb4584", "bug_code_uid": "de196db51ba515833dee09437dfa10b1", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "1b98aeca6b6e3bc3c568f6143e6f3bb2", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,n,s,i,j,k,l;\n    scanf(\"%lld\",&n);\n    s=n/3;\n    l=0;\n    for(i=s-1;i<=s;i++)\n    {\n        for(j=s;j<=s+1;j++)\n        {\n            for(k=s;j<=s+1;k++)\n            {\n                if((i+j+k==n)&&(i%3!=0 && j%3!=0 && k%3!=0) && i>0 && j>0 && k>0)\n                {   l=1;\n                    printf(\"%lld %lld %lld\",i,j,k);\n                    break;\n                }\n            }\n            if(l==1)\n            {\n                break;\n            }\n        }\n        if(l==1)\n        {\n            break;\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,n,s,i,j,k,l;\n    scanf(\"%lld\",&n);\n    printf(\"1 \");\n    n--;\n    for(i=1;i<n;i++)\n    {\n        if((n-i)%3!=0 && i%3!=0)\n        {\n            printf(\"%lld %lld\",i,n-i);\n            break;\n        }\n       \n    }\n    \n}"}
{"similarity_score": 0.9904912836767037, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b4529181ce1e27ffb1a07a67f00746bc", "bug_code_uid": "79d5c3a85a0f3a5caae75d4ccd899a03", "src_uid": "b63a6369023642a8e7e8f449d7d4b73f", "apr_id": "01de041bff847b4773859edb6f174746", "difficulty": 900, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0;i<t;i++)\r\n    {\r\n        long long int A,B;int n;\r\n        scanf(\"%lld%lld%d\",&A,&B,&n);\r\n        long long int a[n],b[n];\r\n        long long int ma=0;\r\n        for (int j=0; j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&a[j]);\r\n            ma=ma>a[j]?ma:a[j];\r\n        }\r\n        long long int ak=0;\r\n        for (int j=0; j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&b[j]);\r\n            if(b[j])%A!=0) ak+=a[j];\r\n            ak+=a[j]*(b[j]/A);\r\n        }\r\n        if(B>ak-ma) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n}    ", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0;i<t;i++)\r\n    {\r\n        long long int A,B;int n;\r\n        scanf(\"%lld%lld%d\",&A,&B,&n);\r\n        long long int a[n],b[n];\r\n        long long int ma=0;\r\n        for (int j=0; j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&a[j]);\r\n            ma=ma>a[j]?ma:a[j];\r\n        }\r\n        long long int ak=0;\r\n        for (int j=0; j<n;j++)\r\n        {\r\n            scanf(\"%lld\",&b[j]);\r\n            if(b[j]%A!=0) ak+=a[j];\r\n            ak+=a[j]*(b[j]/A);\r\n        }\r\n        if (B>ak-ma) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n}    \r\n        "}
{"similarity_score": 0.24788732394366197, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "fa0dea30377eee94177993a2a0ef95fa", "bug_code_uid": "45a82629c78545b3bd1411c35305a7f1", "src_uid": "388450021f2f33177d905879485bb531", "apr_id": "e3805c04cdcdb4c5f2081b9ad4656939", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=1; i<=t; i++)\n    {\n        int a,b,k,l;\n        scanf(\"%d%d\",&a,&b);\n        if(a==1||b==1)\n        {\n            printf(\"Finite\\n\");\n        }\n        else if(a==b)\n\t   {\n\t   \tprintf(\"Infinite\\n\");\n\t   }\n        else\n        {\n            if(a>b)\n            {\n                k=a-b;\n                l=b;\n            }\n            else\n            {\n                k=b-a;\n                l=a;\n            }\n            if(k>l)\n\t\t  {\n\t\t  \tif(k%l==0)\n\t\t\t{\n\t\t\t\tprintf(\"Infinite\\n\");\n\t\t\t}\n\t\t\telse printf(\"Finite\\n\");\n\t\t  }\n\t\t  else\n\t\t  {\n\t\t  \tif(l%k==0)\n\t\t\t{\n\t\t\t\tprintf(\"Infinite\\n\");\n\t\t\t}\n\t\t\telse printf(\"Finite\\n\");\n\t\t  }\n       }\n\n       }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,i,k;\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a>b)\n\t\t{\n\t\t\twhile(a%b!=0)\n\t\t\t{\n\t\t\t\tk=b;\n\t\t\t\tb=a%b;\n\t\t\t\ta=k;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t   while(b%a!=0)\n\t\t\t{\n\t\t\t\tk=a;\n\t\t\t\ta=b%a;\n\t\t\t\tb=k;\n\t\t\t}\n\t\t\tb=a;\n\t\t}\n\t\tif(b==1)\n\t\t{\n\t\t\tprintf(\"Finite\\n\");\n\t\t}\n\t\telse printf(\"Infinite\\n\");\n\t}\n}\n"}
{"similarity_score": 0.9941520467836257, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2afbb4f13ab462eb18c4570ed254ba94", "bug_code_uid": "e4c0fe9c1e8a3ca910be287b2c43ce03", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "c7f2f6d47502441c8750ac2b9320fe9d", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a;\n    int i,n;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\", &a);\n        printf(\"%lld\", a);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a;\n    int i,n;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\", &a);\n        printf(\"%lld\\n\", a);\n    }\n}\n"}
{"similarity_score": 0.9401840490797546, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "cbd85acaf44e7c3b0c8bc96a4b4670cf", "bug_code_uid": "4d276e91538077f1e1d3710e4821bb1a", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "1e95929ab4cc6619c86b5f41f2658eaa", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i,flag=0;\r\n    scanf(\"%d\",&t);\r\n   for ( i = 0; i < t; i++)\r\n    {\r\n        int j,n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int f[100000]={0};\r\n        for ( j = 0; j< n; j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        for ( j = 0; j < n; j++)\r\n        {\r\n            f[a[j]]++;\r\n            if (f[a[j]]==3)\r\n            {\r\n                printf(\"%d\\n\",a[j]);\r\n                flag=1;\r\n                break;\r\n            }\r\n        }\r\n        if (flag!=1)\r\n        {\r\n            printf(\"-1\\n\");\r\n        }\r\n    }    \r\n        \r\n return 0;   \r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n   for ( i = 0; i < t; i++)\r\n    {\r\n        int j,n,flag=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int f[200000+10]={0};\r\n        for ( j = 0; j< n; j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        for ( j = 0; j< n; j++)\r\n        {\r\n            f[a[j]]++;\r\n            if (f[a[j]]==3)\r\n            {\r\n                printf(\"%d\\n\",a[j]);\r\n                flag=1;\r\n                break;\r\n            }\r\n        }\r\n       // printf(\"flag: %d\\n\",flag);\r\n        if (flag!=1)\r\n        {\r\n            printf(\"-1\\n\");\r\n            \r\n        }\r\n    }    \r\n        \r\n return 0;   \r\n}"}
{"similarity_score": 0.9777553083923155, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9edc1713a75e973dddd986532278abb4", "bug_code_uid": "a029641c219a811d2adb71283024b55b", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "76fbd6448d73228fd0c891f45dd74f56", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    long long l,max;\n\n    scanf(\"%d%I64d\",&n,&l);\n\n    long long num[n];\n\n    int i,j,k=0,p=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&num[i]);\n        if(num[i]==0)\n            k=1;\n        if(num[i]==l)\n            p=1;\n    }\n\n    if(l==1)\n    {\n        printf(\"1.0000000000\");\n        return 0;\n    }\n\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(num[i]<num[j])\n            {\n              long long  temp=num[i];\n                num[i]=num[j];\n                num[j]=temp;\n            }\n        }\n    }\n\n    if(k==0)\n    {\n        max=2*num[n-1];\n        if(p==0)\n        {\n            if(max<(2*(l-num[0])))\n               max=2*(l-num[0]);\n        }\n    }\n\n    else\n        max=(num[0]-num[1]);\n\n    for(i=1;i<(n-1);i++)\n    {\n        if(max<(num[i]-num[i+1]))\n            max=num[i]-num[i+1];\n    }\n\n    double d;\n    d = max/2.0;\n\n    printf(\"%.10lf\",d);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    long long l,max;\n\n    scanf(\"%d%I64d\",&n,&l);\n\n    long long num[n];\n\n    int i,j,k=0,p=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&num[i]);\n        if(num[i]==0)\n            k=1;\n        if(num[i]==l)\n            p=1;\n    }\n\n    if(l==1)\n    {\n        printf(\"1.0000000000\");\n        return 0;\n    }\n\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(num[i]<num[j])\n            {\n              long long  temp=num[i];\n                num[i]=num[j];\n                num[j]=temp;\n            }\n        }\n    }\n\n    if(k==0)\n    {\n        max=2*num[n-1];\n        if(p==0)\n        {\n            if(max<(2*(l-num[0])))\n               max=2*(l-num[0]);\n        }\n    }\n    else if(p==0)\n        max=2*(l-num[0]);\n\n    else\n        max=(num[0]-num[1]);\n\n    for(i=1;i<(n-1);i++)\n    {\n        if(max<(num[i]-num[i+1]))\n            max=num[i]-num[i+1];\n    }\n\n    double d;\n    d = max/2.0;\n\n    printf(\"%.10lf\",d);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7450236966824645, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "924649fe897c1d42550470ef6db74986", "bug_code_uid": "f8fb82b78abb7b9837bc57091ce17a17", "src_uid": "08cd22b8ee760a9d2dacb0d050dcf37a", "apr_id": "d229048e0491c459c4463a6b859558b9", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int t, n, k;\r\n    scanf (\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n        scanf (\"%d %d\", &n, &k);\r\n        char s[n];\r\n        scanf (\"%s\", s);\r\n\r\n        if (k==0 || *s==*strrev(s))\r\n        {\r\n            printf (\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf (\"2\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nchar* rev (char *s, int n)\r\n{\r\n    int i;\r\n    char *rs=(char*)calloc(n+1, sizeof(char));\r\n    for (i=0; i<n; i++)\r\n    {\r\n        rs[i]=s[(n-1)-i];\r\n    }\r\n    rs[i]='\\0';\r\n    return rs;\r\n}\r\n\r\nint main()\r\n{\r\n    int t, n, k;\r\n    scanf (\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n        scanf (\"%d %d\", &n, &k);\r\n        char s[n];\r\n        scanf (\"%s\", s);\r\n        char *g=rev(s, n);\r\n        if (k==0 || (strcmp (s, g)==0))\r\n        {\r\n            printf (\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf (\"2\\n\");\r\n        }\r\n        free(g);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9933184855233853, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0c34304445fc5e8eb9f2f94e79955744", "bug_code_uid": "a56602aaf04efd7e23bdbf011aa39b3d", "src_uid": "0671972bc2b6452d51d048329e6e0106", "apr_id": "42a91bbb7de60cdf42db47d711b306f8", "difficulty": 900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long t,y,x,i;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld%lld\",&x,&y);\n        if(x-y>1)\n        printf(\"NO\\n\");\n        else \n        printf(\"YES\\n\");\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long t,y,x,i;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld%lld\",&x,&y);\n        if(x-y<=1)\n        printf(\"NO\\n\");\n        else \n        printf(\"YES\\n\");\n    }\n}"}
{"similarity_score": 0.968503937007874, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8dbbf8982e80919896914184f298d81a", "bug_code_uid": "b046550e132eff58e362851042dfbb08", "src_uid": "a6cbf01d72d607ca95fe16df4fb16693", "apr_id": "cabed9434838b3e8102b2b5fd5f10a1e", "difficulty": 800, "tags": ["data structures", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{ int n,q,i,t,b[10],j;\n\tchar s[10001];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s);\n\tq=n;\n\tfor(i=0; i<10; i++) b[i]=0;\n\tfor(i=0; i<n; i++) { \n\t\tif(s[i]=='L') {\n\t\t\tt=0; while(b[t]!=0) t++;\n\t\t\tb[t]=1; \n\t\t\t} else {\n\t\t\tif(s[i]=='R') {\n\t\t\t\tt=9; while(b[t]!=0) t--;\n\t\t\t\tb[t]=1;\n\t\t\t} else {b[s[i]-'0']=0; \n\t\t}}\n\t}\n\tfor(i=0;i<10; i++) printf(\"%d \",b[i]);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{ int n,q,i,t,b[10],j;\n\tchar s[100001];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s);\n\tq=n;\n\tfor(i=0; i<10; i++) b[i]=0;\n\tfor(i=0; i<n; i++) { \n\t\tif(s[i]=='L') {\n\t\t\tt=0; while(b[t]!=0) t++;\n\t\t\tb[t]=1; \n\t\t\t} else {\n\t\t\tif(s[i]=='R') {\n\t\t\t\tt=9; while(b[t]!=0) t--;\n\t\t\t\tb[t]=1;\n\t\t\t} else {b[s[i]-'0']=0; \n\t\t}}\n\t}\n\tfor(i=0;i<10; i++) printf(\"%d\",b[i]);\n}\n"}
{"similarity_score": 0.94, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "df9e0e224330657632f899d7b52c3d01", "bug_code_uid": "126cd61be8215a8a5ebf196e4bc33845", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "67647a5533b6dbc0dc80c35146c853bd", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong n,l,i,j,temp;\n\tlong maxdist=0;\n\tfloat d=0;\n\tscanf(\"%d %d\",&n,&l);\n\tlong ARR[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&ARR[i]);\n\t}\n/*\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"\\n%d\",ARR[i]);\n\t}\n*/\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(ARR[j]>ARR[j+1])\n\t\t\t{\n\t\t\t\ttemp=ARR[j];\n\t\t\t\tARR[j]=ARR[j+1];\n\t\t\t\tARR[j+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n/*\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d\",ARR[i]);\n\t\tprintf(\"\\n\");\n\t}\n*/\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif( (ARR[i+1]-ARR[i]) > maxdist )\n\t\t{\n\t\t\tmaxdist= (ARR[i+1]-ARR[i]);\n\t\t}\n\t}\n//\tprintf(\"%d\\n\",maxdist);\n\td=( (1.0 * maxdist) /2 );\n\tif(ARR[0]!=0)\n\t{\n\t\tif( (1.0*ARR[0])>d )\n\t\td=ARR[0];\n\t}\n\tif(ARR[n-1]!=l)\n\t{\n\t\tif( 1.0*(l-ARR[n-1]) > d )\n\t\td=(l-ARR[n-1]);\n\t}\n\tprintf(\"%f\",d);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong n,l,i,j,temp;\n\tlong maxdist=0;\n\tdouble d=0;\n\tscanf(\"%d %d\",&n,&l);\n\tlong ARR[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&ARR[i]);\n\t}\n/*\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"\\n%d\",ARR[i]);\n\t}\n*/\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<n-1;j++)\n\t\t{\n\t\t\tif(ARR[j]>ARR[j+1])\n\t\t\t{\n\t\t\t\ttemp=ARR[j];\n\t\t\t\tARR[j]=ARR[j+1];\n\t\t\t\tARR[j+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n/*\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d\",ARR[i]);\n\t\tprintf(\"\\n\");\n\t}\n*/\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tif( (ARR[i+1]-ARR[i]) > maxdist )\n\t\t{\n\t\t\tmaxdist= (ARR[i+1]-ARR[i]);\n\t\t}\n\t}\n//\tprintf(\"%d\\n\",maxdist);\n\td=( (1.0 * maxdist) /2 );\n\tif(ARR[0]!=0)\n\t{\n\t\tif( (1.0*ARR[0])>d ) \n\t\t{\n\t\t\td=ARR[0];\n\t\t}\n\t}\n\tif(ARR[n-1]!=l)\n\t{\n\t\tif( (1.0*(l-ARR[n-1])) > d )\n\t\t{\n\t\t\td=(l-ARR[n-1]);\n\t\t}\n\t}\n\tprintf(\"%f\",d);\n\treturn 0;\n}"}
{"similarity_score": 0.48498845265588914, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "80a3564bb5b0880eb195c058d7d53006", "bug_code_uid": "590e11c60a1b0ecde76969d69a0c2eb8", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "dd658bf2970e4690667da782ab690120", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint i,j,y,x,k,n,m=0;\n\tscanf(\"%d %d %d\",&y,&k,&n);\n\tfor(i=n-1;i>=1;i--){\n\t\tx = n-i;\n\t\tif((x+y)%k==0 && x+y<=n){m++;\n\t\t\tprintf(\"%d \",x);}\n\t}\n\tif(m==0)\n\tprintf(\"-1\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint i,j,y,x,k,n,m=1;\n\tscanf(\"%d %d %d\",&y,&k,&n);\n\tx = k-(y%k);\n\twhile(x+y<=n){\n\t\tprintf(\"%d \",x);\n\t\tx = x +k;\n\t\tm=0;\n\t}\n\tif(m)\n\tprintf(\"-1\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.8327024981074943, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7776c9bd95196731ed95185dd8831913", "bug_code_uid": "8c49e35db430204b2f588d8160ab9243", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "1a98d2b779d4ff765f6de40716305a22", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*\n * FCTRL.c\n *\n *  Created on: 24 A\ufffdu 2014\n *      Author: KT\n */\n\n#include <stdio.h>\n#include<limits.h>\n#include<math.h>\nint main(){\nlong long int minc=0;\nlong long int maxc=0;\n int n;\nscanf(\"%d \",&n);\nint i,array[n];\nfor(i=0;i<n;i++){\n\tscanf(\"%d\",&array[i]);\n}\nlong long int min=array[0];\nlong long int max=array[0];\nfor(i=1;i<n;i++)\n  if(array[i]<min)\n  min=array[i];\n  if(array[i]>max)\n  max=array[i];\n\nfor(i=0;i<n;i++)\n   if(array[i]==min)\n   minc++;\n   if(array[i]==max)\n   maxc++;\n\n\nlong long int val=0;\nlong long int diff=max-min;\nif(diff==0){\n\tval=(maxc*(maxc-1))/2;\n}else{\n\tval=maxc*minc;\n}\nprintf(\"%I64d %I64d\",diff,val);\nreturn 0;\n}\n", "fixed": "/*\n * FCTRL.c\n *\n *  Created on: 24 A\ufffdu 2014\n *      Author: KT\n */\n\n#include <stdio.h>\n#include<limits.h>\n#include<math.h>\nint main(){\nlong long int minc=0;\nlong long int maxc=0;\n int n;\nscanf(\"%d \",&n);\nint i,array[n];\nfor(i=0;i<n;i++){\n\tscanf(\"%d\",&array[i]);\n}\nlong long int min=array[0];\nlong long int max=array[0];\nfor(i=1;i<n;i++){\n  if(array[i]<min){\n  min=array[i];\n  }\n  if(array[i]>max){\n  max=array[i];\n  }\n}\nfor(i=0;i<n;i++){\n   if(array[i]==min){\n   minc++;\n   }\n   if(array[i]==max){\n   maxc++;\n   }\n}\n\n\nlong long int val=0;\nlong long int diff=max-min;\nif(diff==0){\n\tval=(maxc*(maxc-1))/2;\n}else{\n\tval=maxc*minc;\n}\nprintf(\"%I64d %I64d\",diff,val);\nreturn 0;\n}\n"}
{"similarity_score": 0.9942196531791907, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b1669953cc3e98fb9e342b0363eb5a48", "bug_code_uid": "ccb5317cf2e57f7d00485166a41a70d4", "src_uid": "5e449867d9fcecc84333b81eac9b5d92", "apr_id": "bf962bb6d7279c3abcc09c25c14fcfd5", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tint i = 0;\n\tint k;\n\tint a[3001] = { 0 };\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &k);\n\t\ta[k] = 1;\n\t}\n\tfor (i =1; i < 3001; i++)\n\t\tif (a[i] == 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", i);\n\t\t\tbreak;\n\t\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tint i = 0;\n\tint k;\n\tint a[3005] = { 0 };\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &k);\n\t\ta[k] = 1;\n\t}\n\tfor (i =1; i <= 3001; i++)\n\t\tif (a[i] == 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", i);\n\t\t\tbreak;\n\t\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9273356401384083, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2a30a164d04388bed49247a1a7a38616", "bug_code_uid": "af42fa48c068f6e4612714d3074e575b", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "567e4df55923884ad698abc9a32ebdad", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint i,j,k,t,n;\n\tscanf(\"%d\",&t);\n\tfor(int z=0;z<t;z++)\n\t{\n\tscanf(\"%d%d\",&n,&k);\n\tchar s[n+1];\n\tfor(i=0;i<n;i++)\n\ts[i]='a';\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(k<=i)\n\t\t{\n\t\t\ts[n-i-1]='b';\n\t\t\ts[n-k]='b';\n\t\t\tbreak;\n\t\t}\n\t\tk-=i;\t\t\n\t}\n\tprintf(\"%s\\n\",s);\n\t}\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint i,j,k,t,n;\n\tscanf(\"%d\",&t);\n\tfor(int z=0;z<t;z++)\n\t{\n\tscanf(\"%d%d\",&n,&k);\n\tchar s[n];\n\tfor(i=0;i<n;i++)\n\ts[i]='a';\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(k<=i)\n\t\t{\n\t\t\ts[n-i-1]='b';\n\t\t\ts[n-k]='b';\n\t\t\tbreak;\n\t\t}\n\t\tk-=i;\t\t\n\t}\n\tfor(i=0;i<n;i++)\n\tprintf(\"%c\",s[i]);\n\tprintf(\"\\n\");\n\t}\n}"}
{"similarity_score": 0.9777458722182341, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2ef124d30fe0dd8fe866751cd39adfc9", "bug_code_uid": "5c6d9ddaef2ca2966653bc2477546403", "src_uid": "0e0ef011ebe7198b7189fce562b7d6c1", "apr_id": "798688709bc42e8e6667c7fd5bf511db", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define ll long long \nint main(){\nll t;\nscanf(\"%lld\",&t);\nwhile(t--){\nll n;\nscanf(\"%lld\",&n);\nll a[n],b[n],flag=0,count=0,x=-1,y=-1,z=-1,w=-1;\nfor(int i=0;i<n;i++) scanf(\"%lld\",&a[i]);\nfor(int i=0;i<n;i++) scanf(\"%lld\",&b[i]);\nll diff[n];\nfor(int i=0;i<n;i++){ diff[i]=b[i]-a[i];\nif(diff[i]<0) flag=1;\n}\nfor(int i=0;i<n;i++){\nif(diff[i]!=0&&diff[i]!=-1){\nz=i;\nx=diff[i];\n}\n}\nfor(int i=n-1;i>=0;i--){\nif(diff[i]!=0&&diff[i]!=-1){ w=i;\ny=diff[i];}\n}\nif(x!=y) flag=1;\nelse if((z==-1||w==-1)&&flag!=1) flag=2;\nelse{\nfor(int i=z;i<=w;i++){\nif(x!=diff[i]) { flag=1; break;}\n}}\n//printf(\"%lld,%lld\\n\",w,z);\nif(flag==1) printf(\"NO\\n\");\nelse printf(\"YES\\n\");\n}\nreturn 0;}\n", "fixed": "#include<stdio.h>\n#define ll long long \nint main(){\nll t;\nscanf(\"%lld\",&t);\nwhile(t--){\nll n;\nscanf(\"%lld\",&n);\nll a[n],b[n],flag=0,count=0,x=-1,y=-1,z=-1,w=-1;\nfor(int i=0;i<n;i++) scanf(\"%lld\",&a[i]);\nfor(int i=0;i<n;i++) scanf(\"%lld\",&b[i]);\nll diff[n];\nfor(int i=0;i<n;i++){ diff[i]=b[i]-a[i];\nif(diff[i]<0) flag=1;\n}\nfor(int i=0;i<n;i++){\nif(diff[i]!=0&&diff[i]!=-1){\nz=i;\nx=diff[i];\nbreak;\n}\n}\nfor(int i=n-1;i>=0;i--){\nif(diff[i]!=0&&diff[i]!=-1){ w=i;\ny=diff[i];\nbreak;}\n}\nif(x!=y) flag=1;\nelse if((z==-1||w==-1)&&flag!=1) flag=2;\nelse{\nfor(int i=z;i<=w;i++){\nif(x!=diff[i]) { flag=1; break;}\n}}\n//printf(\"%lld,%lld,%lld,%lld\\n\",w,z,x,flag);\nif(flag==1) printf(\"NO\\n\");\nelse printf(\"YES\\n\");\n}\nreturn 0;}\n"}
{"similarity_score": 0.8092399403874814, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "a4313877ab22fca37ce1e8f0562d468c", "bug_code_uid": "39271895370f9f2c544ff98e46d3c14d", "src_uid": "dcb483886c81d2cc0ded065aa1e74091", "apr_id": "78e3b171ba6b04d74ca3b53ce1dfdd7f", "difficulty": 1600, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int limit=1;\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    int a[20000]={0,};\n    int b[20000]={0,};\n    int i,j;\n    for(i=0;i<k;i++) limit*=10;\n    for(i=0;i<n/k;i++) scanf(\"%d\",&a[i]);\n    for(i=0;i<n/k;i++) scanf(\"%d\",&b[i]);\n\n\n    long long int answer=1;\n    long long int x,y,cnt;\n    for(i=0;i<n/k;i++)\n    {\n        x = limit/10*b[i];\n        y = limit/10*(b[i]+1)-1;\n        cnt=0;\n        cnt+=(limit-1)/a[i]+1;\n        cnt-=(y/a[i])-(x/a[i]);\n        if(x%a[i]==0) cnt--;\n        cnt%=1000000007;\n        answer*=cnt;\n        answer%=1000000007;\n    }\n    printf(\"%I64d\\n\",answer);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int limit=1;\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n\n    int temp=n/k;\n    int a[200000],b[200000];\n    int i,j;\n    for(i=0;i<k;i++) limit*=10;\n    for(i=0;i<temp;i++){ scanf(\"%d\",&a[i]);}\n    long long int answer=1;\n    long long int x,y,cnt;\n    for(i=0;i<temp;i++)\n    {\n\n        b[i]=1;\n        scanf(\"%d\",&b[i]);\n        x = limit/10*b[i];\n        y = limit/10*(b[i]+1)-1;\n        cnt=0;\n        cnt+=(limit-1)/a[i]+1;\n        cnt-=(y/a[i])-(x/a[i]);\n        if(x%a[i]==0) cnt--;\n        cnt%=1000000007;\n        answer*=cnt;\n        answer%=1000000007;\n    }\n\n    printf(\"%I64d\\n\",answer);\n    return 0;\n}\n"}
{"similarity_score": 0.9565217391304348, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c8257812513d6813655e1a2945facc20", "bug_code_uid": "e3181dbc10644a8640d0fcc5f269864c", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "ae6dc53ee68d00f95e3a58a23eb02bb2", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint b[3000];\nint n,d;\n\nint main() {\n  int i,a=0,t;\n  scanf(\"%d %d\",&n,&d);\n  for(i=0;i<n;i++) scanf(\"%d\",&b[i]);\n  for(i=1;i<n;i++) {\n    t=(b[i-1]-b[i]+d)/d;\n    a+=t;\n    b[i]+=t*d;\n  }\n  printf(\"%d\\n\",a);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint b[3000];\nint n,d;\n\nint main() {\n  int i,a=0,t;\n  scanf(\"%d %d\",&n,&d);\n  for(i=0;i<n;i++) scanf(\"%d\",&b[i]);\n  for(i=1;i<n;i++) {\n    t=(b[i-1]-b[i]+d)/d;\n    if(t<1) continue;\n    a+=t;\n    b[i]+=t*d;\n  }\n  printf(\"%d\\n\",a);\n  return 0;\n}\n"}
{"similarity_score": 0.9427168576104746, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "202d00964b5ca25295661904f4e61ba3", "bug_code_uid": "bd57a66af3ce385212e2f6a131450018", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "513673fee741416daa2ee59084706d67", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int t,i,n,x,j;\n    scanf(\"%d\",&t);\n    for (i=1;i<=t;i++){\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&x);\n        for (j=0 ;j<=n;j++){\n               if ((j*x+2)>=n){\n                     printf(\"%d\",j+1);\n                     break;}\n        }\n    }\n}", "fixed": "#include <stdio.h>\nint main(){\n    int t,i,n,x,j;\n    scanf(\"%d\",&t);\n    for (i=1;i<=t;i++){\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&x);\n        for (j=0 ;j<=n;j++){\n               if ((j*x+2)>=n){\n                     printf(\"%d\",j+1);\n                     printf(\"\\n\");\n                     break;}\n        }\n    }\n}"}
{"similarity_score": 0.7756788665879575, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "fb818dc00e1c86761e8e2e6d770c9a8e", "bug_code_uid": "7074d540a05c7918b42ea15d838bd71c", "src_uid": "7d774a003d2e3e8ae6fe1912b3998c96", "apr_id": "86ed915551ec8e06f13b58da811555d4", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdbool.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#define MAX 20005\r\ntypedef long long int ll;\r\ntypedef unsigned long long int llu;\r\nint increasing (const void* x_v,const void* y_v)\r\n{\r\n    int x = *(int*)x_v;\r\n    int y = *(int*)y_v;\r\n    return x-y;\r\n}\r\nint decreasing (const void* x_v,const void* y_v)\r\n{\r\n    int x = *(int*)x_v;\r\n    int y = *(int*)y_v;\r\n    return y-x;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n       ll n,m;\r\n       scanf(\"%lld %lld\",&n,&m);\r\n       ll a[n+2][m+2];\r\n       for (ll i=1; i<=n; i++)\r\n       {\r\n           for (ll j=1; j<=m; j++)\r\n           {\r\n               a[i][j]=((i-1)*m)+j;\r\n           }\r\n       }\r\n       ll cnt = 0;\r\n       for (ll i=1; i<=m; i++)\r\n        cnt = cnt + a[1][i];\r\n       for (ll i=1; i<=n; i++)\r\n        cnt = cnt + a[i][m];\r\n       cnt = cnt - a[1][m];\r\n       printf(\"%lld\\n\",cnt);\r\n    }\r\n\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdbool.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#define MAX 20005\r\ntypedef long long int ll;\r\ntypedef unsigned long long int llu;\r\nint increasing (const void* x_v,const void* y_v)\r\n{\r\n    int x = *(int*)x_v;\r\n    int y = *(int*)y_v;\r\n    return x-y;\r\n}\r\nint decreasing (const void* x_v,const void* y_v)\r\n{\r\n    int x = *(int*)x_v;\r\n    int y = *(int*)y_v;\r\n    return y-x;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        ll n,m;\r\n        scanf(\"%lld %lld\",&n,&m);\r\n        ll cnt = 0;\r\n        for (ll i=1; i<=m; i++)\r\n            cnt = cnt + i;\r\n        for (ll i=2; i<=n; i++)\r\n            cnt = cnt + (i*m);\r\n        printf(\"%lld\\n\",cnt);\r\n    }\r\n\r\n}\r\n\r\n"}
{"similarity_score": 0.9862258953168044, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4b2b23b544365099a290676bb04d4e04", "bug_code_uid": "3884e6ccea9eee316cae03459036ecee", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "270b747f19740349062de4b6eb1b2011", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long long int n,j,i,s=1;\n    scanf(\"%I64d\",&n);\n    int a[n-1],b[n];\n    for(i=0;i<n-1;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n     for(i=1;i<=n;i++){\n        b[i-1]=i;\n    }\n    for(i=0;i<n-1;i++){\n        b[a[i]-1]=-1;\n    }\n    for(i=0;i<n;i++){\n        if(b[i]!=-1){printf(\"%I64d\",b[i]);break;}\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\n    long long int n,j,i,s=1;\n    scanf(\"%I64d\",&n);\n    long long int a[n-1],b[n];\n    for(i=0;i<n-1;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n     for(i=1;i<=n;i++){\n        b[i-1]=i;\n    }\n    for(i=0;i<n-1;i++){\n        b[a[i]-1]=-1;\n    }\n    for(i=0;i<n;i++){\n        if(b[i]!=-1){printf(\"%I64d\",b[i]);break;}\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.7297297297297297, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "226e0932025f0fb35d6af77cc4ea3100", "bug_code_uid": "a8f55486d9df4d9062a661c7fb39c58c", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "0d243b699bf7fe3edb57c667fb234b58", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int n,m,i,q,y;\n   char s[20][10];\n   char t[20][10];\n   scanf(\"%d%d\",&n,&m);\n   for(i=0;i<n;i++){\n    scanf(\"%s\",s[i]);\n   }\n   for(i=0;i<m;i++){\n    scanf(\"%s\",t[i]);\n   }\n   scanf(\"%d\",&q);\n   for(i=0;i<q;q++){\n    scanf(\"%d\",&y);\n    printf(\"%s%s\\n\\n\",s[y-1],t[y-1]);\n   }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int n,m,i,q;\n   long long int  y;\n   char s[20][20];\n   char t[20][20];\n   scanf(\"%d%d\",&n,&m);\n   for(i=0;i<n;i++){\n    scanf(\"%s\",s[i]);\n   }\n   for(i=0;i<m;i++){\n    scanf(\"%s\",t[i]);\n   }\n   scanf(\"%d\",&q);\n   while(q--){\n    scanf(\"%lld\",&y);\n    printf(\"%s%s\\n\",s[(y-1)%n],t[(y-1)%m]);\n   }\n\n}\n"}
{"similarity_score": 0.9989506820566632, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8e63e5acaa6abcb88b0f27dcaa006ffa", "bug_code_uid": "7f619b3c541b4a38cf69c7b492063efe", "src_uid": "ef7fd4387de8c947164d04dfbf5b72e2", "apr_id": "5494b6ddeae874478f6fd63d8e7f5429", "difficulty": 2500, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "// write in C...\n#include <stdio.h>\n\n#ifdef DEBUG\n#define D(x...) fprintf(stderr, x)\n#else\n#define D(x...)\n#endif\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    if (n == 3) {\n        printf(\n                \">vv\\n\"\n                \"^<.\\n\"\n                \"^.<\\n\"\n                \"1 3\\n\"\n              );\n    } else if (n == 5) {\n        printf(\n                \">...v\\n\"\n                \"v.<..\\n\"\n                \"..^..\\n\"\n                \">....\\n\"\n                \"..^.<\\n\"\n                \"1 1\\n\"\n              );\n    } else {\n        int i, j;\n        for (i = 0; i < 50; i++) {\n            printf(\"v\");\n            for (j = 0; j < 33; j++) printf(\".<\");\n            for (j = 1; j < 33; j++) printf(\"<\");\n            printf(\".\\n\");\n\n            for (j = 1; j < 33; j++) printf(\">\");\n            for (j = 0; j < 33; j++) printf(\".>\");\n            printf(\"^\");\n            printf(\".\\n\");\n        }\n        printf(\"100 99\\n\");\n    }\n    return 0;\n}\n\n", "fixed": "// write in C...\n#include <stdio.h>\n\n#ifdef DEBUG\n#define D(x...) fprintf(stderr, x)\n#else\n#define D(x...)\n#endif\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    if (n == 3) {\n        printf(\n                \">vv\\n\"\n                \"^<.\\n\"\n                \"^.<\\n\"\n                \"1 3\\n\"\n              );\n    } else if (n == 5) {\n        printf(\n                \">...v\\n\"\n                \"v.<..\\n\"\n                \"..^..\\n\"\n                \">....\\n\"\n                \"..^.<\\n\"\n                \"1 1\\n\"\n              );\n    } else {\n        int i, j;\n        for (i = 0; i < 50; i++) {\n            printf(\"v\");\n            for (j = 0; j < 33; j++) printf(\".<\");\n            for (j = 1; j < 33; j++) printf(\"<\");\n            printf(\".\\n\");\n\n            for (j = 1; j < 33; j++) printf(\">\");\n            for (j = 0; j < 33; j++) printf(\">.\");\n            printf(\"^\");\n            printf(\".\\n\");\n        }\n        printf(\"100 99\\n\");\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.4497878359264498, "equal_cnt": 20, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "5fe053a2ac3a9b28316ea6c2ba00637a", "bug_code_uid": "9a8caa9f2e1be504a4bfcd72c49d64e4", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "d6112dc2dbddca6c368fafff0e33edb3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int a,b,c,n;\n    int i,j,k,num=0,e,t;\n    scanf(\"%d\",&t);\n    for(e=0;e<t;e++)\n    {\n\n\n    scanf(\"%ld %ld %ld %ld\",&a,&b,&c,&n);\n\n    for(i=0;i<=n;i++)\n    {\n        for(j=0;j<=n;j++)\n        {\n            for(k=0;k<=n;k++)\n            {\n                if((i+j+k)==n)\n                {\n                    if((a+i==b+j)&&(a+i==c+k))\n                    {\n                        num+=1;\n                    }\n                }\n            }\n        }\n    }\n\n    if(num==1)\n        printf(\"YES\");\n        else\n            printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long int a,b,c,n,te;\n    int temp,num=0,e,t;\n    int s,i,j;\n    scanf(\"%d\",&t);\n    int res[t];\n    for(e=0;e<t;e++)\n    {\n\n\n\n    scanf(\"%ld %ld %ld %ld\",&a,&b,&c,&n);\n    int arr[]={a,b,c};\n\n\n    int arr1[3];\n    temp=n;\n\n   for(j=0;j<3;j++)\n   {\n       s=arr[j];\n    for(i=j;i<3;i++)\n    {\n    if (arr[i]<s)\n        {te=s;\n        s=arr[i];\n        arr[i]=te;}\n    }\n    arr1[j]=s;\n   }\na=arr1[0];\nb=arr1[1];\nc=arr1[2];\n\n\n    n=(n-(2*c-(a+b)));\n    if(n>=0)\n    {\n        if((n%3==0)||(n==0))\n        num=num+1;\n\n    }\n\n\n\n\n\n\n    if(num==1)\n        res[e]=1;\n        else\n            res[e]=0;\n\n            num=0;\n    }\n\n    for(e=0;e<t;e++)\n    {\n        if (res[e]==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9987357774968394, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "add2512301ae0378fa62ede199ec992f", "bug_code_uid": "209ea5da77a797c0c86ec548abb41bbe", "src_uid": "eb3d8259ca598c3c455ddfdbe433cb78", "apr_id": "aa9ff4e99033ff3481678cb2de075c6f", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main()\n{\n    int t,a;\n    long long int sum=0;\n    long long int n,r;\n    long long int i;\n    \n    scanf(\"%d\",&t);\n    for(;t>0;t--)\n    {\n        sum=0;\n        scanf(\"%lld %lld\",&n ,&r);\n        if(r>n)\n            sum=((n-1)*n)/2+1;\n        else\n            sum=((r)*(r+1))/2;\n        \n        \n        printf(\"%lld\",sum);\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n \nint main()\n{\n    int t,a;\n    long long int sum=0;\n    long long int n,r;\n    long long int i;\n    \n    scanf(\"%d\",&t);\n    for(;t>0;t--)\n    {\n        sum=0;\n        scanf(\"%lld %lld\",&n ,&r);\n        if(r>=n)\n            sum=((n-1)*n)/2+1;\n        else\n            sum=((r)*(r+1))/2;\n        \n        \n        printf(\"%lld\",sum);\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.582010582010582, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "29affc5b92ef9d880f5cc554b6efc6ed", "bug_code_uid": "5a41b3e4ea7d0605e3b1a42eb9ac8b04", "src_uid": "806dcdab8364f5169334e172a192598a", "apr_id": "2a50128b33adc5c2c3a8023048666a76", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint a, b,c;\r\n\tscanf(\"%d %d\", &a, &b);\r\n\tc = a * b;\r\n\tprintf(\"%d\", c);\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,ans[10000];\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tint a,b,c;\r\n\t\tscanf(\"%d %d\", &a, &b);\r\n\t\tc = a * b;\r\n\t\tans[i] = c;\r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tprintf(\"%d\\n\", ans[i]);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.44569816643159377, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c9b14ed491c5b189b2513239c34f3c24", "bug_code_uid": "5044f166726f431918b5d5a8f5f8745c", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "c75ddc0decfb95d85b77f548df4f108a", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\n\n\nint main(){\nint nth;\nint i;\nint counter=0;\nint v=0;\nint array[1000];\nscanf(\"%d\",&nth);\nfor(i=0;i<nth;i++){\n    scanf(\"%d %d %d\",&array[i+counter],&array[i+1+counter],&array[i+2+counter]);\n\n\n    if((array[i+counter]&&array[i+1+counter])||(array[i+counter]&&array[i+counter+2])||(array[i+1+counter]&&array[i+counter+2])){\n            v++;}\n\n    counter+=2;\n}\nprintf(\"%d\",v);\n\n\n\n\n\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\n\n\nint main(){\nint nth;\nint i;\nint counter=0;\nint v=0;\nint v1,v2,v3;\nscanf(\"%d\",&nth);\nfor(i=0;i<nth;i++){\n    scanf(\"%d %d %d\",&v1,&v2,&v3);\n\n\n    if((v1&&v2)||(v1&&v3)||(v2&&v3)){\n            v++;}\n\n\n}\nprintf(\"%d\",v);\n\n\n\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.013871374527112233, "equal_cnt": 9, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "60c4c34bb7c29c695df7b276b111cf56", "bug_code_uid": "a2e86a33a70bd8f2016e7b7b0b544bb9", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "e46213646408822fbbeccf73d0562370", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\n<CodeBlocks_project_file>\n\t<FileVersion major=\"1\" minor=\"6\" />\n\t<Project>\n\t\t<Option title=\"399B-Xenia and Ringroad\" />\n\t\t<Option pch_mode=\"2\" />\n\t\t<Option compiler=\"gcc\" />\n\t\t<Build>\n\t\t\t<Target title=\"Debug\">\n\t\t\t\t<Option output=\"bin/Debug/399B-Xenia and Ringroad\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Debug/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-g\" />\n\t\t\t\t</Compiler>\n\t\t\t</Target>\n\t\t\t<Target title=\"Release\">\n\t\t\t\t<Option output=\"bin/Release/399B-Xenia and Ringroad\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Release/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-O2\" />\n\t\t\t\t</Compiler>\n\t\t\t\t<Linker>\n\t\t\t\t\t<Add option=\"-s\" />\n\t\t\t\t</Linker>\n\t\t\t</Target>\n\t\t</Build>\n\t\t<Compiler>\n\t\t\t<Add option=\"-Wall\" />\n\t\t</Compiler>\n\t\t<Unit filename=\"main.c\">\n\t\t\t<Option compilerVar=\"CC\" />\n\t\t</Unit>\n\t\t<Extensions>\n\t\t\t<code_completion />\n\t\t\t<envvars />\n\t\t\t<debugger />\n\t\t\t<lib_finder disable_auto=\"1\" />\n\t\t</Extensions>\n\t</Project>\n</CodeBlocks_project_file>\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\n    int n,m,task,i=0,j=1;\n    long long steps=0;\n\n    scanf(\"%d %d\",&n,&m);\n\n    while (i<m){\n\n        scanf(\"%d\",&task);\n\n        if (j<=task){\n\n            steps += (task-j);\n            j=task;\n        }\n        else if (j>task){\n\n            steps += (((n+1)-j)+(task-1));\n            j=task;\n        }\n\n        i++;\n    }\n\n    printf(\"%I64d\\n\",steps);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9915433403805497, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aaefda938e52af5ff92df2bdd44de47e", "bug_code_uid": "46b7867353cfab16cd9a870d18d55cca", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "44243c5e90157911c91d45c7247e5243", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n\n{\n    int n,i,e=0,o=0,x,y;\n    scanf(\"%d\",&n);\n\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]%2==0)\n        {\n            e++;\n            x=i;\n        }\n\n        else if(a[i]%2==1)\n        {\n            o++;\n            y=i;\n        }\n\n    }\n\n    if(e>o)\n    {\n        printf(\"%d\",x-1);\n    }\n\n    else if(o>e)\n    {\n        printf(\"%d\",y-1);\n    }\n\n\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n\n{\n    int n,i,e=0,o=0,x,y;\n    scanf(\"%d\",&n);\n\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]%2==0)\n        {\n            e++;\n            x=i;\n        }\n\n        else if(a[i]%2==1)\n        {\n            o++;\n            y=i;\n        }\n\n    }\n\n    if(e>o)\n    {\n        printf(\"%d\",y+1);\n    }\n\n    else if(o>e)\n    {\n        printf(\"%d\",x+1);\n    }\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8708053691275168, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "72d1c9f9ade93b8e69fe73471b8dfa05", "bug_code_uid": "45e25fe44aa376da9d54275c50893865", "src_uid": "f03f1613292cacc36abbd3a3a25cbf86", "apr_id": "bed0a41149bcdddf528b6486ec324290", "difficulty": 1900, "tags": ["constructive algorithms", "greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n     int n, a = 0, b = 0, c = 0, i;\n     char s[100001];\n\n     scanf(\"%s\", s);\n\n     n = strlen(s);\n\n     for (i = 0; i < n; i++) {\n\t  if (s[i] == '0') {\n\t       a++;\n\t  } else if (s[i] == '1') {\n\t       b++;\n\t  } else {\n\t       c++;\n\t  }\n     }\n\n     if (b <= (n - 1) / 2) puts(\"00\");\n\n     if (b + c > (n - 1) / 2 && a + c > (n - 2) / 2) {\n\t  if (s[n - 1] != '0') puts(\"01\");\n\n\t  if (s[n - 1] != '1') puts(\"10\");\n     }\n\n     if (a <= (n - 2) / 2) puts(\"11\");\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n     int n, a = 0, b = 0, c = 0, i;\n     char s[100001];\n\n     scanf(\"%s\", s);\n\n     n = strlen(s);\n\n     for (i = 0; i < n; i++) {\n\t  if (s[i] == '0') {\n\t       a++;\n\t  } else if (s[i] == '1') {\n\t       b++;\n\t  } else {\n\t       c++;\n\t  }\n     }\n\n     if (b <= (n - 1) / 2) puts(\"00\");\n\n     if (b + c > (n - 1) / 2 && a + c > (n - 2) / 2) {\n\t  if (s[n - 1] == '1' || (s[n - 1] == '?' && a + c - 1 > (n - 2) / 2)) {\n\t       puts(\"01\");\n\t  }\n\n\t  if (s[n - 1] == '0' || (s[n - 1] == '?' && b + c - 1 > (n - 1) / 2)) {\n\t       puts(\"10\");\n\t  }\n     }\n\n     if (a <= (n - 2) / 2) puts(\"11\");\n\n     return 0;\n}\n"}
{"similarity_score": 0.6807817589576547, "equal_cnt": 5, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "444527a0ec1c7d9ac49d4a7736a90d18", "bug_code_uid": "8b7d70a1d9c28c6f5d9719d07b19540a", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "1062b33735cd8206171a44b276dd90cd", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n  int n;\n  char str[100];\n  scanf(\"%d\", &n);\n  int i;\n  for(i=0;i<n;i++){\n    scanf(\"%s\", &str);\n    string x;\n    x = str[0] + strlen(str) - 2 + str[strlen(str)-1];\n    if(strlen(str) > 10){\n      printf(\"%s\", x);\n    }\n    else{\n      printf(\"%s\", str);\n    }\n  }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n  int n;\n  char str[100];\n  scanf(\"%d\", &n);\n  int i;\n  for(i=0;i<n;i++){\n    scanf(\"%s\", &str);\n    if(strlen(str) > 10){\n      printf(\"%c%d%c\\n\",str[0], strlen(str) - 2, str[strlen(str)-1]);\n    }\n    else{\n      printf(\"%s\\n\", str);\n    }\n  }\n}\n"}
{"similarity_score": 0.998371335504886, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3c1e6ae5d62337f0ac083f90e3d8bc48", "bug_code_uid": "0e6f423d2a94e6299bc675ddb0ed4c4d", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "328a186429dd356eb8fbaf268c904868", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int n,det,ct1=1,ct2=0,i,k;\n    scanf(\"%d\",&n);\n\n    char score[n][10];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&score[i]);\n        if(i!=0)\n        {\n            det=strcmp(score[0],score[i]);\n            if(det==0)\n            {\n                ct1++;\n            }\n            else\n            {\n                ct2++;\n                k=i;\n            }\n        }\n        getchar();\n    }\n    if(ct1>ct2)\n    {\n        printf(\"%s\",score[0]);\n    }\n    else if(ct2>ct1)\n    {\n        printf(\"%s\",score[k]);\n    }\n\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int n,det,ct1=1,ct2=0,i,k;\n    scanf(\"%d\",&n);\n\n    char score[n][11];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&score[i]);\n        if(i!=0)\n        {\n            det=strcmp(score[0],score[i]);\n            if(det==0)\n            {\n                ct1++;\n            }\n            else\n            {\n                ct2++;\n                k=i;\n            }\n        }\n        getchar();\n    }\n    if(ct1>ct2)\n    {\n        printf(\"%s\",score[0]);\n    }\n    else if(ct2>ct1)\n    {\n        printf(\"%s\",score[k]);\n    }\n\n}\n"}
{"similarity_score": 0.8309305373525557, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "466741ba8cc1f1e15a837993f1618e3f", "bug_code_uid": "2b9855680897193e048d161f853b93b4", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "f1b839e11e4e863898f776d4a1e6e470", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int a,m,n,temp;\n    scanf(\"%d\",&a);\n\n\n    if(a%2 == 0){\n        printf(\"%d %d\\n\",(a/2),(a/2));\n    }\n    else{\n        m = 9;\n        n = a-9;\n        if(m>n){\n            temp = m;\n            m = n;\n            n = temp;\n        }\n        printf(\"%d %d\\n\",m,n);\n    }\n\n\n\n\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int a,m,n,temp;\n    scanf(\"%d\",&a);\n\n\n    if(a%2 == 0){\n        m = 4;\n        n = a-4;\n        if(m>n){\n            temp = m;\n            m = n;\n            n = temp;\n\n    }\n    printf(\"%d %d\\n\",m,n);\n    }\n    else{\n        m = 9;\n        n = a-9;\n        if(m>n){\n            temp = m;\n            m = n;\n            n = temp;\n        }\n        printf(\"%d %d\\n\",m,n);\n    }\n\n\n\n\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9694467382328654, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "75ac566b56e4f026c4dbc90244089528", "bug_code_uid": "1173f1434822dbcbbef3fe69e2f5681d", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "52f180ea7945932f71060614cd7efa30", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint input[10001];\n\nint main()\n{\n    int n,i,j;\n    int a1,a2,b1,b2;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&input[i]);\n    a1=1;\n    a2=a1+1;\n    while((a2<=n)&&(input[a2]>=input[a2-1]))\n        a2++;\n    if(a2>n)\n    {\n        printf(\"0\\n\");\n        return;\n    }\n    b1=a2;\n    a2--;\n    b2=b1+1;\n    while((b2<=n)&&(input[b2]>=input[b2-1]))\n        b2++;\n    b2--;\n    if((b2-b1+1+a2-a1+1)!=n)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    if(input[a1]>=input[b2])\n        printf(\"%d\\n\",n-b1+1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint input[100001];\n\nint main()\n{\n    int n,i,j;\n    int a1,a2,b1,b2;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&input[i]);\n    a1=1;\n    a2=a1+1;\n    while((a2<=n)&&(input[a2]>=input[a2-1]))\n        a2++;\n    if(a2>n)\n    {\n        printf(\"0\\n\");\n        return;\n    }\n    b1=a2;\n    a2--;\n    b2=b1+1;\n    while((b2<=n)&&(input[b2]>=input[b2-1]))\n        b2++;\n    b2--;\n    if((b2-b1+1+a2-a1+1)<n)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    if(input[a1]>=input[b2])\n        printf(\"%d\\n\",n-b1+1);\n    else\n        printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.59958071278826, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "d9ccf4415bedf2045b9c8e17dd7c6fe8", "bug_code_uid": "0f4506ac1fd7235ae9467f6253287b16", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "f8dd5907b192b7deca6b1520a4268df4", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,a,b,c=0;\n    while(t--){\n        scanf(\"%d %d\",&a,&b);\n        if(a%b!=0){\n                b = b+1;\n                c++;\n                printf(\"%d\",c);\n        }\n        else\n            printf(\"0\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,a,b;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d %d\",&a,&b);\n        if (a % b == 0) \n            printf(\"0\\n\");\n\t\telse\n\t\tprintf(\"%d\\n\",b-(a% b));\n    }\n        return 0;\n}\n\n\t\t"}
{"similarity_score": 0.4965675057208238, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "8ff61f67274bb37b975062df0de87f01", "bug_code_uid": "d17df927099e7da7efaf0bde34ca464a", "src_uid": "d9d5db63b1e48214d02abe9977709384", "apr_id": "13506a59a7e8710970270c889f4d5b16", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    long long int n,k,c=0;\n    scanf(\"%lld\",&n);\n    scanf(\"%lld\",&k);\n    char a[n],ch;\n    scanf(\"%[ABCDEFGHIJKLMNOPQRSTUVWXYZ]\",a);\n    char b[26] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    ch=b[k-1];\n    \n    for(int i=0;i<n;i++)\n    if(a[i]==ch)\n    c++;\n    printf(\"%lld\",c*k);\n\t//code\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n    long long int n,k,c=0,cmin=500000,i,j,d=0;\n    scanf(\"%lld\",&n);\n    scanf(\"%lld\",&k);\n    char a[n];\n    scanf(\"%s\",a);\n    char b[26] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n    for(int i=0;i<n;i++)\n    if(a[i]==b[k-1])\n    {c++; break;}\n    \n    if(c==0)\n    printf(\"0\");\n    \n    if(c==1){\n        for(i=0;i<k;i++){\n        for(j=0;j<n;j++){\n            if(a[j]==b[i])\n            d++;\n        }\n        if(d<=cmin)\n        cmin=d;\n        d=0;}\n        printf(\"%lld\",cmin*k);\n    }\n    \n\t//code\n\treturn 0;\n}\n"}
{"similarity_score": 0.984081041968162, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b49a15371f8bdf8e80807cf525dda63c", "bug_code_uid": "95d651a27ded2a4f3dafd57267c760e7", "src_uid": "960e4c234666d2444b80d5966f1d285d", "apr_id": "d6ca5e465c8612b9e28adc49422a7ceb", "difficulty": 1300, "tags": ["two pointers", "implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define N 1000000\nint main()\n{\n\tstatic char s[N + 1];\n\tint n,i;\n\tlong long int heavy, cnt;\n\tscanf(\"%s\", s);\n\tn=strlen(s);\n\theavy=cnt=0;\n\tfor (i=0;i<=n-5;i++)\n\t\tif (strncmp(s[i+1], \"heavy\", 5) == 0)\n\t\t\theavy++;\n\t\telse if (strncmp(s+i, \"metal\", 5) == 0)\n\t\t\tcnt += heavy;\n\tprintf(\"%lld\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define N 1000000\nint main()\n{\n\tstatic char s[N + 1];\n\tint n,i;\n\tlong long int heavy, cnt;\n\tscanf(\"%s\", s);\n\tn=strlen(s);\n\theavy=cnt=0;\n\tfor (i=0;i<=n-5;i++)\n\t\tif (strncmp(&s[i], \"heavy\", 5) == 0)\n\t\t\theavy++;\n\t\telse if (strncmp(&s[i], \"metal\", 5) == 0)\n\t\t\tcnt += heavy;\n\tprintf(\"%lld\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9993390614672836, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8624d8a69b68dfbe5038e834059693fe", "bug_code_uid": "2383557faa8d1862c781b8ee392a2b32", "src_uid": "b263917e47e1c84340bcb1c77999fd7e", "apr_id": "0506c83d7e8bd5f2220c94ffbd3e324a", "difficulty": 1600, "tags": ["constructive algorithms", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint num[100005];\nint cmp(const void*a,const void*b)\n{\n\tint *c,*d;\n\tc=(int *)a;\n\td=(int *)b;\n\treturn *c-*d;\n}\nint main()\n{\n\tint n,i,sum=0,count=0,flag=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&num[i]);\n\tqsort(num,n,sizeof(int),cmp);\n\tif(num[0]!=0)\n\t\tprintf(\"-1\\n\");\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t\tsum+=num[i];\n\t\tif(sum%3==0)\n\t\t{\n\t\t\tif(num[n-1]==0)\n\t\t\t{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\tgoto m;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(i=n-1;i>=0;i--)\n\t\t\t\t\tprintf(\"%d\",num[i]);\n\t\t\t    printf(\"\\n\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(sum%3==1)\n\t\t\t{\n\t\t\t\tfor(i=0;i<n-1;i++)\n\t\t\t\t{\n\t\t\t\t\tif(num[i]%3==1)\n\t\t\t\t\t{\n\t\t\t\t\t\tnum[i]=-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(num[i]!=-1)\n\t\t\t\t{\n\t\t\t\t\tif(num[i-3]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\t\tgoto m;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\tfor(i=0;i<n&&count<2;i++)\n\t\t\t\t\t\tif(num[i]%3!=0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnum[i]=-1;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(num[n-2]==0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\tgoto m;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(i=0;i<n;i++)\n\t\t\t\t{\n\t\t\t\t\tif(num[i]%3==2)\n\t\t\t\t\t{\n\t\t\t\t\t\tnum[i]=-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n                if(num[i]!=-1)\n\t\t\t\t{\n\t\t\t\t\tif(num[n-3]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\t\tgoto m;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\tfor(i=0;i<n&&count<2;i++)\n\t\t\t\t\t\tif(num[i]%3!=0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnum[i]=-1;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(num[n-2]==0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\tgoto m;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\tfor(i=n-1;i>=0;i--)\n\t\t\t\tif(num[i]!=-1)\n\t\t\t\t\tprintf(\"%d\",num[i]);\n\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\nm:return 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint num[100005];\nint cmp(const void*a,const void*b)\n{\n\tint *c,*d;\n\tc=(int *)a;\n\td=(int *)b;\n\treturn *c-*d;\n}\nint main()\n{\n\tint n,i,sum=0,count=0,flag=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&num[i]);\n\tqsort(num,n,sizeof(int),cmp);\n\tif(num[0]!=0)\n\t\tprintf(\"-1\\n\");\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t\tsum+=num[i];\n\t\tif(sum%3==0)\n\t\t{\n\t\t\tif(num[n-1]==0)\n\t\t\t{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\tgoto m;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(i=n-1;i>=0;i--)\n\t\t\t\t\tprintf(\"%d\",num[i]);\n\t\t\t    printf(\"\\n\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(sum%3==1)\n\t\t\t{\n\t\t\t\tfor(i=0;i<n-1;i++)\n\t\t\t\t{\n\t\t\t\t\tif(num[i]%3==1)\n\t\t\t\t\t{\n\t\t\t\t\t\tnum[i]=-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(num[i]!=-1)\n\t\t\t\t{\n\t\t\t\t\tif(num[n-3]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\t\tgoto m;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\tfor(i=0;i<n&&count<2;i++)\n\t\t\t\t\t\tif(num[i]%3!=0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnum[i]=-1;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(num[n-2]==0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\tgoto m;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(i=0;i<n;i++)\n\t\t\t\t{\n\t\t\t\t\tif(num[i]%3==2)\n\t\t\t\t\t{\n\t\t\t\t\t\tnum[i]=-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n                if(num[i]!=-1)\n\t\t\t\t{\n\t\t\t\t\tif(num[n-3]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\t\tgoto m;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\tfor(i=0;i<n&&count<2;i++)\n\t\t\t\t\t\tif(num[i]%3!=0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnum[i]=-1;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(num[n-2]==0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"0\\n\");\n\t\t\t\t\tgoto m;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\tfor(i=n-1;i>=0;i--)\n\t\t\t\tif(num[i]!=-1)\n\t\t\t\t\tprintf(\"%d\",num[i]);\n\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\nm:return 0;\n}\n\n\n\n"}
{"similarity_score": 0.9956616052060737, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0d52f615c049411773a6883fff5b0d82", "bug_code_uid": "551c20de929613b175ab6ea0eae9770e", "src_uid": "bcee233ddb1509a14f2bd9fd5ec58798", "apr_id": "3cb441bdfcce113e9bb8963a1e1e2aad", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n\n\n    int n, k;\n    int i;\n    int a[ 100000 ];\n\n    scanf(\"%d%d\", &n, &k);\n\n    for ( i = 0; i < n; i++ ) {\n\n\tscanf(\"%d\", &a[i]);\n\n    }\n\n    for ( i = k; i < n; i++ ) {\n\n\tif ( a[ i ] != a[ k - 1 ] ) {\n\n\t    printf(\"-1\\n\");\n\t    return 0;\n\n\t}\n\n    }\n\n    int count;\n\n    for ( i = k - 2; i >= 0; i-- ) {\n\n\tif ( a[i] != a[k - 1] ) {\n\n\t    count = i + 1;\n\t    break;\n\n\t}\n\n    }\n\n    printf(\"%d\\n\", count);\n\n    return 0;\n    \n}\n", "fixed": "#include<stdio.h>\n\nint main() {\n\n\n    int n, k;\n    int i;\n    int a[ 100000 ];\n\n    scanf(\"%d%d\", &n, &k);\n\n    for ( i = 0; i < n; i++ ) {\n\n\tscanf(\"%d\", &a[i]);\n\n    }\n\n    for ( i = k; i < n; i++ ) {\n\n\tif ( a[ i ] != a[ k - 1 ] ) {\n\n\t    printf(\"-1\\n\");\n\t    return 0;\n\n\t}\n\n    }\n\n    int count = 0;\n\n    for ( i = k - 2; i >= 0; i-- ) {\n\n\tif ( a[i] != a[k - 1] ) {\n\n\t    count = i + 1;\n\t    break;\n\n\t}\n\n    }\n\n    printf(\"%d\\n\", count);\n\n    return 0;\n    \n}\n"}
{"similarity_score": 0.9851485148514851, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "cc2ee8443c86826eab0dd8ea90d02fde", "bug_code_uid": "45420f984804a7182cd1088a8fd85aca", "src_uid": "bb3e3b51a4eda8fef503952a00777910", "apr_id": "311cc7a8a3b6048815f89b42c78b49d2", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n\nint main() {\n  int i,j,k,x,y,a,b;\n  int v[102] = { 0 };\n  int p[102] = { 0 };\n\n  scanf(\"%d%d%d%d\", &x, &y, &a, &b);\n  for ( i=a, k=0; i <= x; ++i )\n    for ( j=b; j < i && j <= y; ++j ) {\n      v[k]=i;\n      p[k]=j;\n      k += 1;\n  }\n  printf(\"%d\\n\", k);\n  for ( i=0; i < k; ++i )\n    printf(\"%d %d\\n\", v[i], p[i]);\n  return EXIT_SUCCESS;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n\nint main() {\n  int i,j,k,x,y,a,b;\n  int v[20000] = { 0 };\n  int p[20000] = { 0 };\n\n  scanf(\"%d%d%d%d\", &x, &y, &a, &b);\n  for ( i=a, k=0; i <= x; ++i )\n    for ( j=b; j < i && j <= y; ++j ) {\n      v[k]=i;\n      p[k]=j;\n      k += 1;\n  }\n  printf(\"%d\\n\", k);\n  for ( i=0; i < k; ++i )\n    printf(\"%d %d\\n\", v[i], p[i]);\n  return EXIT_SUCCESS;\n}\n"}
{"similarity_score": 0.9258589511754068, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e50906f1270cadf0111512a36405a4de", "bug_code_uid": "60ee5cb36d1eb28e8c01296d7ec673ce", "src_uid": "a8b4c115bedda3847e7c2e3620e3e19b", "apr_id": "8d52686dc128b1ec3df3cf9e37f41253", "difficulty": 1400, "tags": ["two pointers", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b) {\n\treturn (*((int*) a) - *((int*) b));\n}\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int i = 0; i < t; i++) {\n\t\tint n, k, cnt = 0;\n\t\tscanf(\"%d%d\", &n, &k);\n\t\tint tmp[200001] = {};\n\t\tfor(int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d\", &tmp[j]);\n\t\t\ttmp[j] %= k;\n\t\t\tcnt += tmp[j];\n\t\t}\n\t\tif(cnt == 0) printf(\"0\\n\");\n\t\telse{\n\t\t\tqsort(tmp, n, sizeof(int), cmp);\n\t\t\tint max_len = 0, max_len_seed, index = 0, len = 1;\n\t\t\twhile(index < n) {\n\t\t\t\tif(tmp[index] != tmp[index + 1]) {\n\t\t\t\t\tif(len > max_len && tmp[index] != 0) {\n\t\t\t\t\t\tmax_len = len;\n\t\t\t\t\t\tmax_len_seed = tmp[index];\n\t\t\t\t\t}\n\t\t\t\t\tlen = 1;\n\t\t\t\t}\n\t\t\t\telse ++len;\n\t\t\t\t++index; \n\t\t\t}\n\t\t\t// printf(\"%d\\n\", max_len_seed);\n\t\t\tprintf(\"%lld\\n\", k * (max_len - 1) + (k - max_len_seed) + 1);\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b) {\n\treturn (*((int*) a) - *((int*) b));\n}\n\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int i = 0; i < t; i++) {\n\t\tint n, k, cnt = 0;\n\t\tscanf(\"%d%d\", &n, &k);\n\t\tint tmp[200001] = {};\n\t\tfor(int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d\", &tmp[j]);\n\t\t\ttmp[j] %= k;\n\t\t\tcnt += tmp[j];\n\t\t}\n\t\tif(cnt == 0) printf(\"0\\n\");\n\t\telse{\n\t\t\tqsort(tmp, n, sizeof(int), cmp);\n\t\t\tint max_len = 0, max_len_seed, index = 0, len = 1;\n\t\t\twhile(index < n) {\n\t\t\t\tif(tmp[index] != tmp[index + 1]) {\n\t\t\t\t\tif(len > max_len && tmp[index] != 0) {\n\t\t\t\t\t\tmax_len = len;\n\t\t\t\t\t\tmax_len_seed = tmp[index];\n\t\t\t\t\t}\n\t\t\t\t\tlen = 1;\n\t\t\t\t}\n\t\t\t\telse ++len;\n\t\t\t\t++index; \n\t\t\t}\n\t\t\t// printf(\"%d\\n\", max_len_seed);\n\t\t\tlong long int ans = (long long)k * (max_len - 1) + (k - max_len_seed) + 1;\n\t\t\tprintf(\"%lld\\n\", ans);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.9774834437086093, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "82d3e4252d6fa2030e76c96d34c795cd", "bug_code_uid": "79aa8b630efa2313b7c1455c6f4a42e5", "src_uid": "ab6fefc6c15d4647bc601f1f9db21d3f", "apr_id": "77dd3ac32c88ed09b9e1255d6fd12e76", "difficulty": 900, "tags": ["dfs and similar", "dp", "greedy", "math", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/* Codeforce 1593b : Make it Divisible by 25 */\n\n#include <stdio.h>\n#include <string.h>\n\n#define N_DIGIT 32\n#define min(a,b) ((a)<(b)? (a): (b))\n\nint findchr(char *s, int q, char a, char b)\n{ for(; q>=0; q--)\n    if(s[q] == a || s[q] == b) break;\n  return q;\n}\n\nint main(int argc, char *argv[])\n{ int i,T, len,p,q, step;\n  char nstr [N_DIGIT];\n\n  scanf(\"%d\", &T);\n  while(T-- > 0){\n    scanf(\"%s\", nstr);\n    len = strlen(nstr);\n\n    for(step=len, p=len-1; p>=0; p--) {\n      if(nstr[p] != '0' && nstr[p] != '5') continue;\n\n      if(nstr[p] == '0')  q = findchr(nstr, p-1, '0', '5');\n      else                q = findchr(nstr, p-1, '2', '7');\n\n      if(q>=0) {\n        step = min(step, len-q-2);\n        break;\n      }\n    }\n    printf(\"%d\\n\", step);\n  }\n\n  return 0;\n}\n", "fixed": "/* Codeforce 1593b : Make it Divisible by 25 */\n\n#include <stdio.h>\n#include <string.h>\n\n#define N_DIGIT 32\n\n#define min(a,b) ((a)<(b)? (a): (b))\n\nint findchr(char *s, int q, char a, char b)\n{ for(; q>=0; q--)\n    if(s[q] == a || s[q] == b) break;\n  return q;\n}\n\nint main(int argc, char *argv[])\n{ int i,T, len,p,q, step;\n  char nstr [N_DIGIT];\n\n  scanf(\"%d\", &T);\n  while(T-- > 0){\n    scanf(\"%s\", nstr);\n    len = strlen(nstr);\n\n    for(step=len, p=len-1; p>=0; p--) {\n      if(nstr[p] != '0' && nstr[p] != '5') continue;\n\n      if(nstr[p] == '0')  q = findchr(nstr, p-1, '0', '5');\n      else                q = findchr(nstr, p-1, '2', '7');\n\n      if(q>=0) step = min(step, len-q-2);\n    }\n    printf(\"%d\\n\", step);\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.9875862068965517, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c19e2abda71bf31e0b166dbc497b030e", "bug_code_uid": "489239d83470d1ec87d5374748bf9149", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "370ddde973ac9cdd0b50f55d8b491695", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for (int i=0;i<t;i++)\n    {\n        int a,b;scanf(\"%d %d \",&a,&b);\n        if (a<=2)\n        {\n            printf(\"%d\\n\",1);\n        }\n        else \n        {\n            int ff=ceil((a-2)/b);\n            printf(\"%d \\n\",ff);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for (int i=0;i<t;i++)\n    {\n        int a,b;scanf(\"%d %d \",&a,&b);\n        if (a<=2)\n        {\n            printf(\"%d\\n\",1);\n        }\n        else \n        {\n            int ff=ceil((float)(a-2)/b);\n            printf(\"%d \\n\",ff+1);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.20724346076458752, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "8020fa780afd6c79ef020a6a808c4b23", "bug_code_uid": "67d2181114b689a88b5343c696b0ac12", "src_uid": "c0abbbf1cf6c8ec11e942cdaaf01ad7c", "apr_id": "b3ccb97da045540f998d2d2240511360", "difficulty": 1000, "tags": ["dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\tlong long int n, h, a, b, m;\n\tscanf(\"%lld %lld %lld %lld %lld\", &n, &h, &a, &b, &m);\n\tlong long int ta, fa, tb, fb;\n\tfor(long long int i = 0 ; i < m ; i++){\n\t\tscanf(\"%lld %lld %lld %lld\", &ta, &fa, &tb, &fb);\n\t\tlong long int count;\n\t\tif(fa < a && fb < a){\n\t\t\tcount = (a - fa) + (a - fb) + labs(tb-ta);\n\t\t}\n\t\telse if(fa > b && fb > b){\n\t\t\tcount = (fa - b) + (fb - b) + labs(tb-ta);\n\t\t}\n\t\telse{\n\t\t\tcount = labs(fa-fb) + labs(ta-tb);\n\t\t}\n\t\tprintf(\"%lld\\n\", count);\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nstruct node{\n\tint next;\n};\n\nint main(){\n\tint n, link;\n\tscanf(\"%d\", &n);\n\tstruct node student[1001] = {};\n\tfor(int i = 1 ; i <= n ; i++){\n\t\tscanf(\"%d\", &link);\n\t\tstudent[i].next = link;\n\t}\n\tint acc[1001] = {};\n\tfor(int idx = 1 ; idx <= n ; idx++){\n\t\tmemset(acc, 0, sizeof(int) * (n+1));\n\t\tint idx_now = idx;\n\t\twhile(!acc[idx_now]){\n\t\t\tacc[idx_now] = 1;\n\t\t\tidx_now = student[idx_now].next;\n\t\t}\n\t\tprintf(\"%d \", idx_now);\n\t}\n\tprintf(\"\\n\");\n}\n"}
{"similarity_score": 0.9857142857142858, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "55e52d7a2f713072432d0f1bbad69fea", "bug_code_uid": "54c6325d62dc70bea00b71fc78f9cc0d", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "a73acb97faa4e1eefa30c92dbd388944", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n\n\nint main()\n{\n    int bsm,skipc;\n    scanf(\"%d %d\",&bsm,&skipc);\n    int check=1;\n    int stime=0;\n    for(int i=0;i<bsm;i++)\n    {\n        int start,end;\n        scanf(\"%d %d\",&start,&end);\n        while(check+3<=start)\n        {\n            check+=3;\n        }\n        stime+=(start - check);\n        stime+=(end+1)-start;\n        check=end+1;\n\n    }\n  printf(\"%d\",stime);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n\n\nint main()\n{\n    int bsm,skipc;\n    scanf(\"%d %d\",&bsm,&skipc);\n    int check=1;\n    int stime=0;\n    for(int i=0;i<bsm;i++)\n    {\n        int start,end;\n        scanf(\"%d %d\",&start,&end);\n        while(check+skipc<=start)\n        {\n            check+=skipc;\n        }\n        stime+=(start - check);\n        stime+=(end+1)-start;\n        check=end+1;\n\n    }\n  printf(\"%d\",stime);\n}\n"}
{"similarity_score": 0.9319213313161876, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "dccd1bb144898d36cee3c006648be2df", "bug_code_uid": "26ad1f7e3a0d0b83cd644aed2f27c2c7", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "7de5e5580b4d43196b6580aa5bc252df", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i;\n    long long int t;\n    scanf(\"%lld\\n\",&t);\n    for(i=0;i<t;i++)\n    {\n      long long int l,r;\n      int a=-1;\n      scanf(\"%lld %lld\",&l,&r);\n      int b=2*l;\n      if(b>r)\n      {\n        printf(\"%d %d\",a,a);\n      }\n      else\n      {\n        printf(\"%d %d\",l,b);\n      }\n    }\n    \n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i;\n    long long int t;\n    scanf(\"%lld\\n\",&t);\n    for(i=0;i<t;i++)\n    {\n      int l,r;\n      int a=-1;\n      scanf(\"%d %d\\n\",&l,&r);\n      int b=2*l;\n      if(2*l>r)\n      {\n        printf(\"%d %d\\n\",a,a);\n      }\n      else\n      {\n        printf(\"%d %d\\n\",l,2*l);\n      }\n    }\n    \n}"}
{"similarity_score": 0.9802955665024631, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "142afe4f1acdfad28e8d84aaf04136c1", "bug_code_uid": "95d49b736fe434faae2032edb2c9df20", "src_uid": "f5bcde6e3008405f61cead4e3f44806e", "apr_id": "83e16d5e61b36461bc7cd281894cd14d", "difficulty": 1200, "tags": ["data structures", "two pointers", "number theory", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint fun(int n,int a[n],int x,int sum)\n{\n\tint m=n;\n\tint sum1 = sum;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(sum%x != 0 || sum1%x !=0)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tsum = sum - a[i] ;\n\t\t\tsum1 = sum1 - a[n-1-i] ;\n\t\t\tm--;\n\t\t}\n\t}\n\treturn m;\n}\n\nvoid main()\n{\n\tint n,x,t,sum;\n\tscanf(\"%d\",&t);\n\tint b[t];\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d %d\",&n,&x);\n\t\tint a[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tsum=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tsum = sum + a[i] ;\n\t\t}\n\t\tint l=fun(n,a,x,sum);\n\t\tif(l == 0)\n\t\t\tb[i] = l-1;\n\t\telse\n\t\t\tb[i] = l;\n\t}\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tprintf(\"%d\\n\",b[i]);\n\t}\n}\n\n", "fixed": "#include<stdio.h>\nint fun(int n,int a[n],int x,int sum)\n{\n\tint m=n;\n\tint sum1 = sum;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(sum%x != 0 || sum1%x !=0)\n\t\t\tbreak;\n\t\telse\n\t\t{\n\t\t\tsum = sum - a[i] ;\n\t\t\tsum1 = sum1 - a[n-1-i] ;\n\t\t\tm--;\n\t\t}\n\t}\n\treturn m;\n}\n\nint main()\n{\n\tint n,x,t,sum;\n\tscanf(\"%d\",&t);\n\tint b[t];\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d %d\",&n,&x);\n\t\tint a[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tsum=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tsum = sum + a[i] ;\n\t\t}\n\t\tint l=fun(n,a,x,sum);\n\t\tif(l == 0)\n\t\t\tb[i] = l-1;\n\t\telse\n\t\t\tb[i] = l;\n\t}\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tprintf(\"%d\\n\",b[i]);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.0498793242156074, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "1b8ee92c4ee3fcda6957a568a9f6b857", "bug_code_uid": "e11a74c111cd86525dbd5c2548c3b17a", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "ef1301ed745f29bbd0410e00bc4a1fe9", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n    int t;cin>>t;\n    while(t--){\n        int n;cin>>n;\n        int ar[n];\n        for(int j=0; j<n; j++)\n        {\n            cin>>ar[j];\n        }\n        if (n <= 2)\n            cout<<0;\n        if (ar[0] == ar[1] && ar[0] != ar[2])\n            cout<<3;\n        if (ar[0] == ar[2] && ar[0] != ar[1])\n            cout<<2;\n        if (ar[1] == ar[2] && ar[0] != ar[1])\n            cout<<1;\n        else \n            for (int i = 3; i < n; i++){\n                if (ar[i] != ar[i - 1]){\n                    cout<<i+1<<'\\n';break;\n                }\n            }\n    }\n}\n\n\t\t   \t\t  \t\t\t\t\t \t \t\t\t \t \t \t\t\t  \t", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n  int i,n,m,k,index;int arr[1000];\n  scanf(\"%d\",&n);\n  while(n>0){\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(k=1;k<=i;k++)\n    {\n      if(arr[0]-arr[k]!=0&&arr[0]-arr[k+1]!=0)\n      {\n          index=1;break;\n      }\n      else if(arr[0]-arr[k]==0&&arr[0]-arr[k+1]!=0){\n        index=k+1+1;break;\n      }\n      else if(arr[0]-arr[k]!=0&&arr[0]-arr[k+1]==0){\n        index=k+1;break;\n      }\n    }\n    printf(\"%d\\n\",index);\n    n--;\n    index=0;\n  }\n}\n\n\t\t\t \t\t     \t\t    \t\t \t \t \t\t\t\t\t"}
{"similarity_score": 0.9505135387488328, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ff29d094ed8394bb0ae8b27f05d6ecae", "bug_code_uid": "4c735bf04e693e5b32716af0c6a09256", "src_uid": "f89bd4ec97ec7e02a7f67feaeb4d3958", "apr_id": "9e5dcfaf84eea9cdd60da2abd7c99d48", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint n;\n\twhile(t--)\n\t{\n\t\tint i;\n\t\tscanf(\"%d\",&n);\n\t\tif(n==2)\n\t\t{\n\t\t\tprintf(\"2 1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(n%2==0)\n\t\t{\n\t\t\tfor(i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tif(i%2==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",i+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",i-1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=1;i<=n-3;i++)\n\t\t\t{\n\t\t\t\tif(i%2==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",i+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",i-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d %d %d \",n,n-1,n-2); \n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}\n\t  \t\t  \t  \t \t \t \t\t\t  \t  \t\t\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint n;\n\twhile(t--)\n\t{\n\t\tint i;\n\t\tscanf(\"%d\",&n);\n\t\tif(n==2)\n\t\t{\n\t\t\tprintf(\"2 1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(n%2==0)\n\t\t{\n\t\t\tfor(i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tif(i%2==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",i+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",i-1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(i=1;i<=n-3;i++)\n\t\t\t{\n\t\t\t\tif(i%2==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",i+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",i-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d %d %d \",n,n-2,n-1); \n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}\n\t  \t\t    \t\t \t   \t\t \t \t    \t   \t"}
{"similarity_score": 0.8228228228228228, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a3bd560893d76f3486b8a625a703e160", "bug_code_uid": "d078131adcd79c443aacdd7449139ca6", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "7243157462929f69a18ffe20573fa988", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int n,b,d,k,sum=0,i;\n    scanf(\"%d %d %d\",&n,&b,&d);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&k);\n        if(k<=b)\n            sum+=k;\n    }\n    sum/=d;\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int n,b,d,k,sum=0,i,l=0,count=0;\n    scanf(\"%d %d %d\",&n,&b,&d);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&k);\n        if(k<=b){\n            sum+=k;\n            if(sum>d){\n                count++;\n                sum=0;\n            }\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.6880546075085324, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "618aee16e173024b0c30e45e03a47c7f", "bug_code_uid": "dbf785a4737aeb28a111dcf579bce61b", "src_uid": "7ac5f084c403bd26802e1b941105d34b", "apr_id": "09e9a94ec94a9b13333cd57db4cc1250", "difficulty": 1100, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/**\r\n * @Author: Yang Li\r\n * @Date:   2022-04-05 23:33:21\r\n * @Last Modified by:   Yang Li\r\n * @Last Modified time: 2022-04-05 23:57:32\r\n */\r\n/*\r\n\u627e\u4e24\u4e2a\u76f8\u540c\u6570\u5b57\u540c\u65f6\u51fa\u73b0\u7684\u6700\u5927\u95f4\u9694\r\n\u53ea\u8981\u4e24\u4e2a\r\n*/\r\n# include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int a[n];\r\n        for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\r\n        int max = -1, bef, aft;\r\n        for (int i = 0; i < n; i++) {\r\n            for (int j = 0; j < i; j++) {\r\n                if (a[j]==a[i]) {\r\n                    int len = 1+j+n-i;\r\n                    max=max>len?max:len;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\", max);\r\n    }\r\n    return 0;\r\n}", "fixed": "/**\r\n * @Author: Yang Li\r\n * @Date:   2022-04-05 23:33:21\r\n * @Last Modified by:   Yang Li\r\n * @Last Modified time: 2022-04-06 00:05:24\r\n */\r\n/*\r\n\u627e\u4e24\u4e2a\u76f8\u540c\u6570\u5b57\u540c\u65f6\u51fa\u73b0\u7684\u6700\u5927\u95f4\u9694\r\n\u53ea\u8981\u4e24\u4e2a\r\n*/\r\n# include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int a[n], b[150001];\r\n        for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\r\n        for (int i = 0; i < n; i++) b[a[i]] = -1;\r\n        int max = -1, bef, aft;\r\n        for (int i = 0; i < n; i++) {\r\n            // printf(\"%d \", b[a[i]]);\r\n            if (b[a[i]]>=0) {\r\n                if (max < n-i+b[a[i]]) max = n-i+b[a[i]];\r\n            }\r\n            b[a[i]] = i;\r\n        }\r\n        printf(\"\\n%d\\n\", max);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.5089234312032239, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "41881e9a8ff2556f07aaa5170ccbf28d", "bug_code_uid": "14392800d5a5d2d0709bcd210b066afe", "src_uid": "e2dc3de62fc45c7e9ddb92daa5c5d8de", "apr_id": "1322def3fdcc2ae9822258278915be44", "difficulty": 800, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\nchar str[300005];\r\nchar t_str[300005];\r\n\r\nint check()\r\n{\r\n\tint flag = 1;\r\n\tfor (int i = 0; i < strlen(str) / 2; i++)\r\n\t{\r\n\t\tif (str[i] != str[strlen(str) - i - 1])\r\n\t\t{\r\n\t\t\tflag = 0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn flag;\r\n}\r\n\r\nvoid insert(int it)\r\n{\r\n\tstrcpy(t_str, \"\");\r\n\tstrncpy(t_str, &str[0], it);\r\n\tt_str[it] = '\\0';\r\n\tstrcat(t_str, \"a\");\r\n\r\n\tfor (int i = it; i < strlen(str); i++)\r\n\t{\r\n\t\tchar s1[2] = { str[i], '\\0' };\r\n\t\tstrcat(t_str, s1);\r\n\t}\r\n\r\n\tstrcpy(str, t_str);\r\n}\r\n\r\nvoid erase(int it)\r\n{\r\n\tstrcpy(&str[it], &str[it + 1]);\r\n}\r\n\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++)\r\n\t{\r\n\t\tscanf(\"%s\", str);\r\n\r\n\t\tint flag = 1;\r\n\t\tfor (int j = 0; j < strlen(str); j++)\r\n\t\t{\r\n\t\t\tinsert(j);\r\n\t\t\tif (!check())\r\n\t\t\t{\r\n\t\t\t\tflag = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\terase(j);\r\n\t\t}\r\n\r\n\t\tif (flag == 1)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n%s\\n\", str);\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\nchar str[300005];\r\nchar t_str[300005];\r\n\r\nint check()\r\n{\r\n\tint flag = 1;\r\n\tfor (int i = 0; i < strlen(str) / 2; i++)\r\n\t{\r\n\t\tif (str[i] != str[strlen(str) - i - 1])\r\n\t\t{\r\n\t\t\tflag = 0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn flag;\r\n}\r\n\r\n\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++)\r\n\t{\r\n\t\tscanf(\"%s\", str);\r\n\t\tstrcpy(t_str, str);\r\n\t\tstrcat(str, \"a\");\r\n\t\tint flag = check();\r\n\t\tif (!flag)\r\n\t\t{\r\n\t\t\tgoto ex;\r\n\t\t}\r\n\r\n\t\tstrcpy(str, t_str);\r\n\t\tstrcpy(t_str, \"\");\r\n\t\tstrcat(t_str, \"a\");\r\n\t\tstrcat(t_str, str);\r\n\t\tstrcpy(str, t_str);\r\n\t\tflag = check();\r\n\r\n\t\tex:\r\n\t\tif (flag == 1)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n%s\\n\", str);\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9987212276214834, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "936cbea7d7174bc713a82a0d43f3ef6d", "bug_code_uid": "f5d1dfd0c7256e649d4c667a5a120c62", "src_uid": "2ff0919ee7dfdfb916b23c26fb2caf20", "apr_id": "a737f441fc84c864ce10f768411c8bdb", "difficulty": 1300, "tags": ["binary search", "flows", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nvoid insertionSort(long long int arr[],int n)\n{\tint i=0,j=0;\n\tfor(i=1;i<n;i++)\n\t{\tj = i-1;\n\t\tlong long int temp = arr[i];\n\t\twhile(j>=0 && arr[j]>temp)\n\t\t{\n\t\t\tarr[j+1]=arr[j];\n\t\t\tj--;\n\t\t}\n\t\tarr[j+1] = temp;\n\t\t//printarr(arr,n);\n\t}\n}\nint main()\n{\n\tint n;\t\n\tscanf(\"%d\",&n);\n\tlong long int h;\n\tscanf(\"%lld\",&h);\n\tlong long int arr[n];\n\tlong long int b[n];\n\tfor(int i =0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&arr[i]);\n\t\tb[i] = arr[i];\n\t}\n\tlong long int sum =0;\n\tsum = b[0];\n\tint prev = 0;\n\tint ans =0;\n\tfor(int i =1;i<n;i++)\n\t{\n\t\tinsertionSort(b,i+1);\t\n\t\tsum =0;\n\t\tfor(int j =i;j>=0;j=j-2)\n\t\t{\n\t\t\tsum += b[j];\n\t\t}\n\t//\tprintf(\"sum = %lld\\n\",sum);\n\t\tif(sum>h)\n\t\t{\n\t\t\tans = i;\n\t\t\tbreak;\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans = i+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\t\t \t\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nvoid insertionSort(long long int arr[],int n)\n{\tint i=0,j=0;\n\tfor(i=1;i<n;i++)\n\t{\tj = i-1;\n\t\tlong long int temp = arr[i];\n\t\twhile(j>=0 && arr[j]>temp)\n\t\t{\n\t\t\tarr[j+1]=arr[j];\n\t\t\tj--;\n\t\t}\n\t\tarr[j+1] = temp;\n\t\t//printarr(arr,n);\n\t}\n}\nint main()\n{\n\tint n;\t\n\tscanf(\"%d\",&n);\n\tlong long int h;\n\tscanf(\"%lld\",&h);\n\tlong long int arr[n];\n\tlong long int b[n];\n\tfor(int i =0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&arr[i]);\n\t\tb[i] = arr[i];\n\t}\n\tlong long int sum =0;\n\tsum = b[0];\n\tint prev = 0;\n\tint ans =1;\n\tfor(int i =1;i<n;i++)\n\t{\n\t\tinsertionSort(b,i+1);\t\n\t\tsum =0;\n\t\tfor(int j =i;j>=0;j=j-2)\n\t\t{\n\t\t\tsum += b[j];\n\t\t}\n\t//\tprintf(\"sum = %lld\\n\",sum);\n\t\tif(sum>h)\n\t\t{\n\t\t\tans = i;\n\t\t\tbreak;\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans = i+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\t\t \t\n"}
{"similarity_score": 0.9990766389658357, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e79c9c2b0892eb9b1cb54eba16171386", "bug_code_uid": "d1ff6786a6c7d562eec44101fd5043b5", "src_uid": "4b7b0fba7b0af78c3956c34c29785e7c", "apr_id": "463f63bc007cdc4472020f3fa840349e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i=0,j,ans=0,m; scanf(\"%d\",&n);\n    char s[101],a[][10]={\"ABSINTH\",\"BEER\",\"BRANDY\",\"CHAMPAGNE\",\"GIN\",\"RUM\",\"SAKE\",\"TEQUILLA\",\"VODKA\",\"WHISKEY\",\"WINE\" };\n    while(i<n){\n        scanf(\"%s\",s); m=strlen(s);\n        if(m==1){if(s[0]>='0'&&s[0]<='9') ans++;}\n        else if(m==2) {\n            if(s[0]=='1'&&(s[1]>='0'&& s[1]<='7')) ans++;\n        }else{\n            for(j=0;j<11;j++)\n                if(strcmp(a[j],s)==0) ans++;\n        }i++;\n    } printf(\"%d\\n\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i=0,j,ans=0,m; scanf(\"%d\",&n);\n    char s[101],a[][10]={\"ABSINTH\",\"BEER\",\"BRANDY\",\"CHAMPAGNE\",\"GIN\",\"RUM\",\"SAKE\",\"TEQUILA\",\"VODKA\",\"WHISKEY\",\"WINE\" };\n    while(i<n){\n        scanf(\"%s\",s); m=strlen(s);\n        if(m==1){if(s[0]>='0'&&s[0]<='9') ans++;}\n        else if(m==2) {\n            if(s[0]=='1'&&(s[1]>='0'&& s[1]<='7')) ans++;\n        }else{\n            for(j=0;j<11;j++)\n                if(strcmp(a[j],s)==0) ans++;\n        }i++;\n    } printf(\"%d\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9561304836895388, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ffc3e11880e9f108162853904aeadae7", "bug_code_uid": "bfc844b7402ce4888073139cb62444b9", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "d857f29a312019f7a649b52737ded6a7", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\n\nint main()\n{\n\tint max = 0;\n\tscanf(\"%i\", &max);\n\tint smallest = -1;\n\tint num = 0;\n\tint count = 0;\n\tint best = -1;\n\tfor (int i = 0; i < max; i++)\n\t{\n\t\tscanf(\"%i\", &num);\n\t\tif (smallest == -1 || num < smallest)\n\t\t{\n\t\t\tsmallest = num;\n\t\t\tcount = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\tif (smallest == num && (best == -1 || best > count))\n\t\t\t{\n\t\t\t\tbest = count;\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%i\", best);\n\treturn 0;\n}\n\n", "fixed": "\n#include <stdio.h>\n\n\nint main()\n{\n\tint max = 0;\n\tscanf(\"%i\", &max);\n\tint smallest = -1;\n\tint num = 0;\n\tint count = 0;\n\tint best = -1;\n\tfor (int i = 0; i < max; i++)\n\t{\n\t\tscanf(\"%i\", &num);\n\t\tif (smallest == -1 || num < smallest)\n\t\t{\n\t\t\tsmallest = num;\n\t\t\tcount = 0;\n\t\t\tbest = -1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t\tif (smallest == num)\n\t\t\t{\n\t\t\t\tif (best == -1 || best > count)\n\t\t\t\t\tbest = count;\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%i\", best);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8758389261744967, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "43ef10a48d2995689438eccaa3693df6", "bug_code_uid": "c487c1440d7683fbf9fd0d27380fdc62", "src_uid": "f0806ab99cf4da228abe3cd8073884d9", "apr_id": "92677d473b4b01f300fcb5014c296ce6", "difficulty": 1200, "tags": ["greedy", "constructive algorithms", "math", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tlong long x ;\n\t\tscanf(\"%lld\", &x);\n\n\t\tint i = 1 ;\n\t\tint s = 0 ;\n\t\tint c = 0;\n\t\twhile (1) {\n\t\t\tlong long v = (i * (i + 1)) / 2;\n\t\t\ts += v;\n\t\t\tif (s > x) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tc++;\n\t\t\ti = (2 * i + 1);\n\t\t}\n\n\t\tprintf(\"%d\", c);\n\t}\n}", "fixed": "#include<stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tlong long x ;\n\t\tscanf(\"%lld\", &x);\n\n\t\tlong long i = 1 ;\n\t\tlong long s = 0 ;\n\t\tint c = 0;\n\t\twhile (1) {\n\t\t\ts += (i * (i + 1)) / 2;\n\t\t\tif (s > x) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tc++;\n\t\t\ti = (2 * i + 1);\n\t\t}\n\n\t\tprintf(\"%d\\n\", c);\n\t}\n}"}
{"similarity_score": 0.3696369636963696, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0abba6558fa3f1d490f36b7b186ec5fb", "bug_code_uid": "7ab38d2259b4b5463d2c0fa878972b2e", "src_uid": "8bbec86e427e26158393bbfbf1a067fe", "apr_id": "78dd713fa4d6085e2262ca7130b7dd15", "difficulty": 1100, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,m,n,t,ans1,ans2,ans;\n    scanf(\"%d\", &t);\n    for(i=0;i<t;i++){\n        scanf(\"%d%d\",&n,&m);\n        ans=0;\n        while(n>=1&&m>=1){\n            if(n>m){\n                ans++;\n                n-=2;\n                m-=1;\n            }\n            else if(m>n){\n                ans++;\n                m-=2;\n                n-=1;\n            }\n            else if(n==m&&m!=1){\n                ans++;\n                n-=2;\n                m-=1;\n            }\n            else if(n==1&&m==1)break;\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint min(int a,int b)\n{\n    if(a<=b)return a;\n    else return b;\n}\nint main()\n{\n    int i,j,m,n,t,ans1,ans2,ans;\n    scanf(\"%d\", &t);\n    for(i=0;i<t;i++){\n        scanf(\"%d%d\",&n,&m);\n        printf(\"%d\\n\", min((n+m)/3,min(n,m)));\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9118236472945892, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "bd823c014d15842f03141ffc0fff8267", "bug_code_uid": "cea9b7f54a25cd360f44bfba9108e865", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "b253fc7bbdbe98b083d1d02c8e06e011", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int x,n,k;\n    double c;\n    scanf(\"%d\",&x);\n    int arr[x];\n    for (int i =0; i<x;i++)\n    {\n        scanf (\"%d%d\",&n,&k);\n        \n        if (n==k)\n            arr[i] = 1;\n        if (n>k)\n            arr[i] = 2;\n        else if (n<k)\n        {\n            c = (double) k/n ;\n            arr[i] = ceil(c);\n        }\n    }\n    for (int i =0;i<x;i++)\n    {\n        printf(\"%d\\n\",arr[i]);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int x,n,k;\n    double c;\n    scanf(\"%d\",&x);\n    int arr[x];\n    for (int i =0; i<x;i++)\n    {\n        scanf (\"%d%d\",&n,&k);\n        \n        if (n==k)\n            arr[i] = 1;\n        if (n>k)\n\t    {\n\t    if (n % k == 0)\n            \tarr[i] = 1;\n\t    else\n\t    \tarr[i] = 2;\n\t    }\n        else if (n<k)\n        {\n            c = (double) k/n ;\n            arr[i] = ceil(c);\n        }\n    }\n    for (int i =0;i<x;i++)\n    {\n        printf(\"%d\\n\",arr[i]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.5230769230769231, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "3ba24451eddae3ef9ab5cbe455cf23f7", "bug_code_uid": "2ce45143a77edc94d1e7cce7edd4e443", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "50242856d8e465996fe7f8fc7ac63726", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n\nint n;\nscanf(\"%d\",&n);\nint a[10];\nint i,j,k;\nfor(i=1;i<10;i++)\nscanf(\"%d\",&a[i]);\nint min=a[1];\nfor(i=2;i<10;i++)\n{\nif(a[i]<=min)\n{min=a[i];\nk=i;}\n\n}\nint c=0;\nif(a[k]>n)\n{printf(\"-1\");\nreturn 0;}\nwhile(n)\n{\nprintf(\"%d\",k);\nn=n-a[k];\nc++;\n}\n\n\n\n\n\n\n\n\n\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nint a[10];\nint i,j,k=1;\nfor(i=1;i<10;i++)\nscanf(\"%d\",&a[i]);\nint min=a[1];\nfor(i=2;i<10;i++)\n{\nif(a[i]<min)\n{min=a[i];\nk=i;}\n\n}\nif(n<min)\n{printf(\"-1\");\nreturn 0;}\n\nint p=n/min;\nchar s[p+1];\nfor(i=0;i<p;i++)\ns[i]=k+'0';\ns[i]='\\0';\nint left=n-p*min;\nfor(i=0;i<p;i++)\n{\nfor(j=9;j>k;j--)\n{\n\t\nif(left+min-a[j]>=0)\n{s[i]=j+'0';\nleft=left+min-a[j];\nbreak;}\n\n}\n\n\n}\nprintf(\"%s\",s);\n\n\n\n\n\n}"}
{"similarity_score": 0.255729794933655, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "f52308020f5544e816a5b7d5077fc0ab", "bug_code_uid": "f69d08dbb4b4bc76c437ff328d9601eb", "src_uid": "1d9d34dca11a787d6e2345494680e717", "apr_id": "f7fd1802b0620a16a63dd8d57e179dc4", "difficulty": 800, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\n\r\nint main()\r\n{\r\n    int t,n,i,a[100];\r\n    scanf(\"%d\\n\",&t);\r\n    while(t--)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d\\n\",&n);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            sum=sum+a[i];\r\n        }\r\n        if(sum%2!=0)\r\n            printf(\"NO\\n\");\r\n         if(sum%2==0 && n%2==0)\r\n          printf(\"YES\\n\");\r\n         if(sum%2==0 && n%2!=0)\r\n         printf(\"NO\\n\");\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main() {\r\n\tint m,t,l,i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tint a,j=0,k=0;\r\n\t\tscanf(\"%d\",&m);\r\n\t\tfor(i=0; i<m; i++) {\r\n\t\t\tscanf(\"%d\",&a);\r\n\t\t\tif(a==1)\r\n\t\t\t\tj++;\r\n\t\t\telse\r\n\t\t\t\tk++;\r\n\t\t}\r\n\t\tif(j!=0 && j%2==0)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse if(j==0 && k%2==0)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n\t"}
{"similarity_score": 0.6986469864698647, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9d078c9297d9675267d017accaa5afb6", "bug_code_uid": "766db14b9c32aeba839d37bae64311e7", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "260260f983a1dae31699de38d952b68a", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,n,a;\r\n    scanf(\"%lld\",&t);\r\n    while(t--){\r\n        scanf(\"%lld\",&n);\r\n        if(n%2!=0){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else if(n%3==0||n%5==0||n%7==0||){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,a;\r\n    scanf(\"%lld\",&t);\r\n    while(t--){\r\n        scanf(\"%lld\",&a);\r\n        if(a%2!=0){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else if(a%2==0){\r\n            while(a%2==0){\r\n                a=a/2;}\r\n                if(a>1){\r\n                    printf(\"YES\\n\");\r\n                }\r\n                else{\r\n                    printf(\"NO\\n\");\r\n                }\r\n            \r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9017543859649123, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "04aaccffed6ea7f3db0af0b9f3578a42", "bug_code_uid": "de2e7d5438451492136a574f343d2ba3", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "bae0660f74b40fc6803bec088dac4eb5", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n\n\n int main()\n {\n int i=0,n=0,k=0,count=0;\n int chances[2000];\n scanf(\"%d%d\",&n,&k);\n for(i=0;i<n;i++)\n    scanf(\"%d\",chances[i]);\n\n  for(i=0;i<n;i++)\n    {\n        if(n-chances[i]>=k)\n            count++;\n        }\n  printf(\"%d\",count/3);\n\n return 0;\n }\n", "fixed": "\n#include<stdio.h>\n\n\n int main()\n {\n int i=0,n=0,k=0,count=0;\n int chances[2000];\n scanf(\"%d\",&n);\n  scanf(\"%d\",&k);\n for(i=0;i<n;i++)\n {\n     scanf(\"%d\",&chances[i]);\n }\n\n\n  for(i=0;i<n;i++)\n    {\n        if(5-chances[i]>=k)\n            count++;\n        }\n  printf(\"%d\",count/3);\n\n return 0;\n }\n"}
{"similarity_score": 0.9599056603773585, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1f20bbad7dbd4d0882be81c57107d94e", "bug_code_uid": "7ef0dffc40f5a2b43a37a1349b44a500", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "50b8496bb1950c1b961abc095d6e8a91", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define Max(A , B) (A >= B ? A : B)\n#define Min(A , B) (A <= B ? A : B)\n\nint main(){\n    int t , i;\n    int a1 , b1 , a2 , b2;\n    scanf(\"%d\" , &t);\n    for(i = 0 ; i<t ; i++){\n        scanf(\"%d %d %d %d\" , a1 , b1 , a2 , b2);\n        if(Max(a1 , b1) == Max(a2 , b2) && Min(a1 , b1)+Min(a2,b2) == Max(a1 , b1)){\n            printf(\"Yes \\n\");\n        }\n        else{printf(\"No \\n\");}\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#define Max(A , B) (A >= B ? A : B)\n#define Min(A , B) (A <= B ? A : B)\n\nint main(){\n    int t , i;\n    int a1 , b1 , a2 , b2;\n    scanf(\"%d\" , &t);\n    for(i = 0 ; i<t ; i++){\n        scanf(\"%d %d %d %d\" , &a1 , &b1 , &a2 , &b2);\n        if(Max(a1 , b1) == Max(a2 , b2) && Min(a1 , b1)+Min(a2,b2) == Max(a1 , b1)){\n            printf(\"Yes \\n\");\n        }\n        else{printf(\"No \\n\");}\n    }\n    return 0;\n}"}
{"similarity_score": 0.9721627408993576, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "13f84066ae67f428a24b2ff35a9e0762", "bug_code_uid": "2963c5cc26e6ee71ac8a8fb69fd46d10", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "55ee8719452e4fb546f4e75b52f0b20f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,c=0;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int p,q;\n        scanf(\"%lld%lld\",&p,&q);\n        if(p<q && p-q>=2)  \n        c++;\n    }\n    printf(\"%lld\\n\",c);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,c=0;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int p,q;\n        scanf(\"%lld%lld\",&p,&q);\n        if(p<q && q>0 && q-p>=2)\n        c++;\n    }\n    printf(\"%lld\\n\",c);\n}"}
{"similarity_score": 0.4825090470446321, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ef66a38a36641711cec97ecb3fdef6ff", "bug_code_uid": "b1a07d1235af0305abcc98a1c4496815", "src_uid": "341555349b0c1387334a0541730159ac", "apr_id": "0d5c3d224c910a59b5b163755fc2c8d0", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int n,i,j,k,f=0;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long int a[n];\n\t\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\t\tfor(i=0;i<n-2;i++)\n\t\t{\n\t\t\tfor(j=i+1;j<n-1;j++)\n\t\t\t{\n\t\t\t\tfor(k=j+1;k<n;k++)\n\t\t\t\t{\n\t\t\t\t\tif(a[i]+a[j]<=a[k])\n\t\t\t\t\t{\n\t\t\t\t\t\tf=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(f==1)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(f==1)\n\t\t\tbreak;\n\t\t}\n\t\tif(f==1)\n\t\tprintf(\"%lld %lld %lld\\n\",i+1,j+1,k+1);\n\t\telse\n\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong long int n,i,j,k,f=0;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long int a[n];\n\t\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\t\tfor(i=2;i<n;i++)\n\t\t{\n\t\t\tif(a[i]>=a[0]+a[1])\n\t\t\t{\n\t\t\t\tf=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f==1)\n\t\tprintf(\"1 2 %lld\\n\",i+1);\n\t\telse\n\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9749518304431599, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9794dc687052e514097b3f0bfdf8600f", "bug_code_uid": "4bea04e18519b95e64b022f1a0e5631a", "src_uid": "bee33afb70e4c3e062ec7980b44cc0dd", "apr_id": "07e62bfc43454ddc270a722335fc754e", "difficulty": 1200, "tags": ["dp", "constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tint i,t,sum=0;\n\tchar s[1000005];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\tint bob[3]={0},ali[3]={0};\n\t\tchar c[1000005]={0};\n\t\tsum=0;\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%d %d %d\",&ali[0],&ali[1],&ali[2]);\n\t\tscanf(\"%s\",s);\n\t\tfor(i=0;s[i]!='\\0';i++)\n\t\t{\n\t\t\tif(s[i]=='R') bob[0]++;\n\t\t\tif(s[i]=='P') bob[1]++;\n\t\t\tif(s[i]=='S') bob[2]++;\n\t\t}\n\t\tif(bob[0]>0)\n\t\t{\n\t\t\tif(ali[1]>=bob[0]) sum=sum+bob[0];\n\t\t\telse sum=sum+ali[1];\n\t\t}\n\t\tif(bob[1]>0)\n\t\t{\n\t\t\tif(ali[2]>=bob[1]) sum=sum+bob[1];\n\t\t\telse sum=sum+ali[2];\n\t\t}\n\t\tif(bob[2]>0)\n\t\t{\n\t\t\tif(ali[0]>=bob[2]) sum=sum+bob[2];\n\t\t\telse sum=sum+ali[0];\n\t\t}\n\t\tif(sum*2>=n){\n\t\tprintf(\"Yes\\n\");\n\t\tfor(i=0;s[i]!='\\0';i++)\n\t\t{\n\t\t\tif(s[i]=='R'){\n\t\t\tif(ali[1]>0)\n\t\t\t{\n\t\t\t\tc[i]='P';\n\t\t\t\tali[1]--;\n\t\t\t}\n\t\t\telse c[i]=' ';\n\t\t}\n\t\t\tif(s[i]=='P'){\n\t\t\t\tif(ali[2]>0)\n\t\t\t\t{\n\t\t\t\t\tc[i]='S';\n\t\t\t\t\tali[2]--;\n\t\t\t\t}\n\t\t\t\telse c[i]=' ';\n\t\t\t}\n\t\t\tif(s[i]=='S'){\n\t\t\t\tif(ali[0]>0)\n\t\t\t\t{\n\t\t\t\t\tc[i]='R';\n\t\t\t\t\tali[0]--;\n\t\t\t\t}\n\t\t\t\telse c[i]=' ';\n\t\t\t}\n\t\t\t};\n\t\t\tc[i]='\\0';\n\t\t\tfor(i=0;c[i]!='\\0';i++)\n\t\t\t{\n\t\t\t\tif(c[i]==' '){\n\t\t\t\t\tif(ali[0]>0)\n\t\t\t\t\t{\n\t\t\t\t\tc[i]='R';\n\t\t\t\t\tali[0]--;\n\t\t\t\t\t}\n\t\t\t\t\tif(ali[1]>0){\n\t\t\t\t\tc[i]='P';\n\t\t\t\t\tali[1]--;\n\t\t\t\t}\n\t\t\t\t\tif(ali[2]>0){\n\t\t\t\t\tc[i]='S';\n\t\t\t\t\tali[2]--;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%s\\n\",c);\n\t\t} \n\tif(sum*2<n) printf(\"No\\n\");\n\t}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tint i,t,sum=0;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\tint bob[3]={0},ali[3]={0};\n\t\tchar c[1000005],s[1000005];\n\t\tsum=0;\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%d %d %d\",&ali[0],&ali[1],&ali[2]);\n\t\tscanf(\"%s\",s);\n\t\tfor(i=0;s[i]!='\\0';i++)\n\t\t{\n\t\t\tif(s[i]=='R') bob[0]++;\n\t\t\tif(s[i]=='P') bob[1]++;\n\t\t\tif(s[i]=='S') bob[2]++;\n\t\t}\n\t\tif(bob[0]>0)\n\t\t{\n\t\t\tif(ali[1]>=bob[0]) sum=sum+bob[0];\n\t\t\telse sum=sum+ali[1];\n\t\t}\n\t\tif(bob[1]>0)\n\t\t{\n\t\t\tif(ali[2]>=bob[1]) sum=sum+bob[1];\n\t\t\telse sum=sum+ali[2];\n\t\t}\n\t\tif(bob[2]>0)\n\t\t{\n\t\t\tif(ali[0]>=bob[2]) sum=sum+bob[2];\n\t\t\telse sum=sum+ali[0];\n\t\t}\n\t\tif(sum*2>=n){\n\t\tprintf(\"Yes\\n\");\n\t\tfor(i=0;s[i]!='\\0';i++)\n\t\t{\n\t\t\tif(s[i]=='R'){\n\t\t\tif(ali[1]>0)\n\t\t\t{\n\t\t\t\tc[i]='P';\n\t\t\t\tali[1]--;\n\t\t\t}\n\t\t\telse c[i]=' ';\n\t\t}\n\t\t\tif(s[i]=='P'){\n\t\t\t\tif(ali[2]>0)\n\t\t\t\t{\n\t\t\t\t\tc[i]='S';\n\t\t\t\t\tali[2]--;\n\t\t\t\t}\n\t\t\t\telse c[i]=' ';\n\t\t\t}\n\t\t\tif(s[i]=='S'){\n\t\t\t\tif(ali[0]>0)\n\t\t\t\t{\n\t\t\t\t\tc[i]='R';\n\t\t\t\t\tali[0]--;\n\t\t\t\t}\n\t\t\t\telse c[i]=' ';\n\t\t\t}\n\t\t\t};\n\t\t\tc[i]='\\0';\n\t\t\tfor(i=0;c[i]!='\\0';i++)\n\t\t\t{\n\t\t\t\tif(c[i]==' '){\n\t\t\t\t\tif(ali[0]>0)\n\t\t\t\t\t{\n\t\t\t\t\tc[i]='R';\n\t\t\t\t\tali[0]--;\n\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(ali[1]>0){\n\t\t\t\t\tc[i]='P';\n\t\t\t\t\tali[1]--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\tif(ali[2]>0){\n\t\t\t\t\tc[i]='S';\n\t\t\t\t\tali[2]--;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%s\\n\",c);\n\t\t} \n\tif(sum*2<n) printf(\"No\\n\");\n\t}\n}"}
{"similarity_score": 0.9662576687116564, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3dcad5988a37cfe2640bd7e1683e01a3", "bug_code_uid": "4617b0975ddf0cdd039c059d0a3fd673", "src_uid": "c547e32f114546638973e0f0dd16d1a4", "apr_id": "8cd51b06dc4c49ed4e77ddd93d3c07d8", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tlong long a[n];\n\tint table[65]={0};\n\n\tfor(i=0;i<n;++i){\n\t\tint sum=0;\n\t\tscanf(\"%I64d\",&a[i]);\n\t\twhile(a[i]>0){ sum+=a[i]&1; a[i]>>=1; }\n\t\ttable[sum]++;\n\t}\n\n\tlong long br=0;\n\tfor(i=0;i<65;++i) br+=(table[i]*(table[i]-1))/2;\n\t\n\n\tprintf(\"%I64d\",br);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tlong long a[n];\n\tint table[65]={0};\n\n\tfor(i=0;i<n;++i){\n\t\tint sum=0;\n\t\tscanf(\"%I64d\",&a[i]);\n\t\twhile(a[i]>0){ sum+=a[i]&1; a[i]>>=1; }\n\t\ttable[sum]++;\n\t}\n\n\tlong long br=0;\n\tfor(i=0;i<65;++i) br+=((table[i]*1LL*(table[i]-1))/2);\n\t\n\n\tprintf(\"%I64d\",br);\n\treturn 0;\n}"}
{"similarity_score": 0.9972972972972973, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7952c43073f20183aa0d46db99fb78c2", "bug_code_uid": "d8dcd3de29979e3369b701cfafc2299d", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "09534f790959ed05726af7d4adfb8152", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n  int main()\n  { long long  int t,x,y,n,k,i,j,cn;\n     scanf(\"%lld\",&t);\n     for(j=0;j<t;j++)\n     {\n         scanf(\"%lld %lld %lld\",&x,&y,&n);\n         cn=0;\n         cn=((n/x)*x);\n         if(cn<=n)\n         printf(\"%lld\\n\",cn+y);\n         else\n         printf(\"%lld\\n\",cn-(x-y));\n         \n         \n         \n         \n     }\n         \n      \n  }", "fixed": "#include<stdio.h>\n  int main()\n  { long long  int t,x,y,n,k,i,j,cn;\n     scanf(\"%lld\",&t);\n     for(j=0;j<t;j++)\n     {\n         scanf(\"%lld %lld %lld\",&x,&y,&n);\n         cn=0;\n         cn=((n/x)*x);\n         if(cn+y<=n)\n         printf(\"%lld\\n\",cn+y);\n         else\n         printf(\"%lld\\n\",cn-(x-y));\n         \n         \n         \n         \n     }\n         \n      \n  }"}
{"similarity_score": 0.27633209417596033, "equal_cnt": 23, "replace_cnt": 18, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "3fd1aaf822a0a1a7d2ab003b384fb0d0", "bug_code_uid": "9bd6b198fe319dda00cade251f4c1bc4", "src_uid": "b07668a66a5e50659233ba055a893bd4", "apr_id": "8d9c1e9747c35142566afea9eb1b2539", "difficulty": 1900, "tags": ["dp", "graphs", "two pointers", "shortest paths", "dfs and similar", "trees"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int b[200][200];\n    memset(b,1000,sizeof(b));\n    int n,i,j,k,suma=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n-1;i++){\n        scanf(\"%d %d\",&j,&k);\n        b[j][k]=b[k][j]=1;\n    }\n    for(k=1;k<=200;k++){\n        for(i=1;i<=200;i++){\n            for(j=1;j<=200;j++){\n                if(b[i][k]+b[k][j]<b[i][j]){\n                    b[i][j]=b[i][k]+b[k][j];\n                }\n            }\n        }\n    }\n\n    //cuenta\n    for(i=1;i<=200;i++){\n        for(j=1;j<=200;j++){\n            if(b[i][j]==3){\n                suma++;\n            }\n        }\n    }\n    printf(\"%d\",suma/2);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint mapa[202][202];\nint n,w;\nint main(){\n    int i,ra,rb,r;\n    int a,b;\n    scanf(\"%d\",&n);\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        mapa[a][b]=mapa[b][a]=1;\n    }\n    int c=0;\n    for(a=1;a<=n;a++)\n        for(b=a+1;b<=n;b++)\n            if(mapa[a][b]==1){\n                mapa[a][b]=mapa[b][a]=0;\n                go(a);\n                ra=go(w);\n                go(b);\n                rb=go(w);\n                r=ra*rb;\n\n                if(c<r){\n                    c= r;\n                }\n                mapa[a][b]=mapa[b][a]=1;\n            }\n    printf(\"%d\", c);\n    return 0;\n}\n\n\nint go(int x){\n    int u[202]={};\n    int v[202]={};\n    int i,j=1,k=0;\n    v[0]=x;\n    u[x]=1;\n    while(k<j) {\n        x=v[k++];\n        for(i=1;i<=n;i++){\n            if(mapa[x][i] && u[i]==0)\n            {\n                u[i]=u[x]+1;\n                v[j++]=i;\n            }\n        }\n    }\n    w=v[j-1];\n    return (u[v[j-1]]-1);\n}"}
{"similarity_score": 0.7231040564373897, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7254906096bedb5aaa2bd6d7d7b75d6c", "bug_code_uid": "4d2396b9c67d323e013ee656e2350128", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "4c2d384b164222acc7e2bf70f307311c", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n  int t, a, b;\n  scanf(\"%d\", &t);\n  for(int i = 0; i < t; ++i) {\n    scanf(\"%d%d\", &a, &b);\n    if(a != b) {\n      return 0*puts(\"rated\");\n    }\n  }\n  puts(\"unrated\");\n  return 0;\n}", "fixed": "#include<stdio.h>\n\nint main() {\n  int t, a, b, oa = 4128;\n  scanf(\"%d\", &t);\n  for(int i = 0; i < t; ++i) {\n    scanf(\"%d%d\", &a, &b);\n    if(a != b) {\n      return 0*puts(\"rated\");\n    }\n    if(oa != -1) {\n       if(a <= oa) {\n          oa = a;\n       } else {\n          oa = -1;\n       }\n    }\n  }\n  puts(oa == -1 ? \"unrated\" : \"maybe\");\n  return 0;\n}\n"}
{"similarity_score": 0.20240963855421687, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "b6011808d962fbc4fc8c87cb13a18029", "bug_code_uid": "a697cd93c5dc0e814898ae667c887c53", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "9bf22d645893a790f8d953ad1a900b4b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[100][100],b,c,j,i,count=0,x;\n\tscanf(\"%d%d\",&b,&c);\n\tfor(i=0;i<b;i++)\n\t{  for(j=0;j<c;j++)\n\t     {\n\t     \tscanf(\"%d\",&a[i][j]);\n\t     \t\n\t\t }\n\t\t}\n\t\tfor(i=0;i<b;i++)\n\t\t{\n\t\t{  for(j=0;j<c-1;j++)\n\t\t\n\t\tif(a[i][j]==a[i][j+1])\n\t\tcount=count+1;\n\t}\n\t}\n\tfor(i=0;i<b-1;i++)\n\t{\n\t\tif(a[i][j]!=a[i+1][j])\n\t\tcount=count-1;\n\t\t\n\t}\n\tx=(b-1)*(c-1);\n\tif(count==x)\n\tprintf(\"YES\");\n\telse\n\tprintf(\"NO\");\t\t\n}\n", "fixed": "#include<stdio.h>\n\nmain()\n{\n\tint n,m,i,j;\n\tchar ch[101][101],a;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t      scanf(\"%s\",ch[i]);\n\tfor(i=0;i<n;i++)\n    {\n    \ta=ch[i][0];\n    \t for(j=1;j<m;j++)\n    \t {\n    \t \tif(ch[i][j]!=a)\n    \t \t      break;\n    \t \tif(i>0&&ch[i-1][0]==a)\n    \t \t   break;\n    \t }\n    \t if(j!=m)\n    \t      break;\n    }\n    if(i==n)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n}"}
{"similarity_score": 0.6110484780157835, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "527a03b52770863031b19a9ae9f1eb51", "bug_code_uid": "0f8e5920c07666b3d0621610c75fb6e4", "src_uid": "14fccd50d5dfb557dd53f2896ed844c3", "apr_id": "87d2dc49abf804a12170da3abf351a05", "difficulty": 800, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int m;\n    scanf(\"%d\",&m);\n    for(int i=0;i<m;i++)\n    {\n    int a,b,c;\n    scanf(\"%d%d%d\",&a,&b,&c);\n    if(b==0||b==1)\n    printf(\"0\\n\");\n    else if(b==2||b==3)\n    {\n    if(c<=3)\n    printf(\"%d\\n\",a+1);\n    else if(c==4)\n    printf(\"%d\\n\",a+3);\n    else\n    printf(\"%d\\n\",a+5);\n    }\n    else\n    {\n    if(c<=3)\n    printf(\"%d\\n\",a+1);\n    else if(c==4)\n    printf(\"%d\\n\",a+3);\n    else\n    printf(\"%d\\n\",a+6);\n    }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n    int a,b,c,x,y;\n    scanf(\"%d%d%d\",&a,&b,&c);\n    if(b==0)\n    printf(\"0\\n\");\n    else if(c/2>=b)\n    printf(\"%d\\n\",b*3);\n    else\n    {\n    y=b-c/2;\n    if(y/2<=a)\n    {\n    x=(c/2)*3+(y/2)*3;\n    printf(\"%d\\n\",x);\n    }\n    else\n    {\n    x=(c/2)*3+a*3;\n    printf(\"%d\\n\",x);\n    }\n    }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9460043196544277, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "045b53048236fa2008feb90116d6b67a", "bug_code_uid": "f6b7f0642106c051e184496508c1f33d", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "c6883c06f24ba381b6abc773a16b2246", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "main()\n{\n    int n,num,pos=0,i,sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num);\n        if(i==0)\n        {\n            sum+=num+1;\n            pos=num;\n        }\n        else\n        {\n            if(pos<=num)\n            {\n                sum+=(num-pos)+2;\n            }\n            else\n            {\n                sum+=(pos-num)+2;\n            }\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n", "fixed": "main()\n{\n    int n,num,pos=0,i,sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num);\n        if(i==0)\n        {\n            sum+=num+1;\n            pos=num;\n        }\n        else\n        {\n            if(pos<=num)\n            {\n                sum+=(num-pos)+2;\n                pos=num;\n            }\n            else\n            {\n                sum+=(pos-num)+2;\n                pos=num;\n            }\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.5614035087719298, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "fe94a098b0880ad2fb24f2e97fa3f8d7", "bug_code_uid": "baf4a262e48b025e6aee2d4d96965705", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "5530917df5134636c63d532f8bc81f2a", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main(void){\n    int t,n,m;\n    scanf(\"%d\", &t);\n    int array[t][2];\n    for (int i = 0; i < t; i++){\n        for(int j = 0; j < 2; j++){\n            scanf(\"%d\", &array[i][j]);\n        }\n    }\n    for (int i = 0; i < t; i++){\n        if (array[i][0] < 2){\n            printf(\"0\\n\");\n        }\n        else if (array[i][0] == 2){\n            printf(\"%d\",array[i][1]);\n        }\n        else{\n            m = 2* array[i][1];\n        printf(\"%d\\n\", m);\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\n\n\nint main(void){\n    int t,n,m;\n    scanf(\"%d\", &t);\n    int array[t][2];\n    for (int i = 0; i < t; i++){\n        for(int j = 0; j < 2; j++){\n            scanf(\"%d\", &array[i][j]);\n        }\n    }\n    for (int i = 0; i < t; i++){\n        if( i != t-1){\n                if (array[i][0] < 2){\n                printf(\"0\\n\");\n            }\n            else if (array[i][0] == 2){\n                printf(\"%d\\n\",array[i][1]);\n            }\n            else{\n                m = 2* array[i][1];\n                printf(\"%d\\n\", m);\n            }\n        }\n        else{\n            if (array[i][0] < 2){\n                printf(\"0\");\n            }\n            else if (array[i][0] == 2){\n                printf(\"%d\",array[i][1]);\n            }\n            else{\n                m = 2* array[i][1];\n                printf(\"%d\", m);\n            }\n        }\n\n    }\n}\n"}
{"similarity_score": 0.9988801791713325, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d8785b19eccdab07a1c8266ed5492192", "bug_code_uid": "ba5a25bb55739ed734aa8c1550e78c5b", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "c0cef24d94ba2c66595a8a5cc99480d6", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int a,b,i,max1=0,max2=0;\n    scanf(\"%d\",&a);\n    int ara[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]>max1)\n        {\n            max1=ara[i];\n        }\n    }\n    scanf(\"%d\",&b);\n    int ara2[b];\n    for(i=0;i<b;i++)\n    {\n        scanf(\"%d\",&ara2[i]);\n        if(ara2[i]>max2);\n        {\n            max2=ara2[i];\n        }\n    }\n    printf(\"%d %d\",max1,max2);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int a,b,i,max1=0,max2=0;\n    scanf(\"%d\",&a);\n    int ara[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]>max1)\n        {\n            max1=ara[i];\n        }\n    }\n    scanf(\"%d\",&b);\n    int ara2[b];\n    for(i=0;i<b;i++)\n    {\n        scanf(\"%d\",&ara2[i]);\n        if(ara2[i]>max2)\n        {\n            max2=ara2[i];\n        }\n    }\n    printf(\"%d %d\",max1,max2);\n    return 0;\n}\n"}
{"similarity_score": 0.5059523809523809, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 6, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "3e27c148b0996acab2ee31c3c973b868", "bug_code_uid": "41c0f8f77fe7f9d98b0a24841a9476dd", "src_uid": "7767e47571c7ea82ba4fb6a0bd0fbdc5", "apr_id": "8245380b0ae0e318b13c54ab0b95d95a", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int a, b, d; // bs[201];\r\n        scanf(\"%d%d\", &a, &b);\r\n        if (a >= b)\r\n        {\r\n            d = (a + 1) / b;\r\n            for (int i = 1, j = 1; i <= a + b; i++)\r\n            {\r\n                if (j < (b + 1) && (i != d * j))\r\n                {\r\n                    printf(\"1\");\r\n                    j++;\r\n                }\r\n                else\r\n                    printf(\"0\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            d = (b + 1) / a;\r\n            for (int i = 1, j = 1; i <= a + b; i++)\r\n            {\r\n                if (j < (a + 1) && (i != d * j))\r\n                {\r\n                    printf(\"0\");\r\n                    j++;\r\n                }\r\n                else\r\n                    printf(\"1\");\r\n            }\r\n        }\r\n        puts(\"\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int a, b, d;\r\n        scanf(\"%d%d\", &a, &b);\r\n        if (a >= b)\r\n        {\r\n            for (int i = 1, j = 1; j<=b, i<=a; i++, j++)\r\n            {\r\n                printf(\"0\");\r\n                if(j<=b)\r\n                    printf(\"1\");\r\n                else\r\n                    continue;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            //d = (b + 1) / a;\r\n            for (int i = 1, j = 1; i <= a, j <= b; i++, j++)\r\n            {\r\n                printf(\"1\");\r\n                if(i<=a)\r\n                    printf(\"0\");\r\n                else\r\n                    continue;\r\n            }\r\n        }\r\n        puts(\"\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9194253591505309, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "5b407f6914bf6b07a13a4fee45b56e24", "bug_code_uid": "f242ad46934c8daaf1fc5e4b2de69eb4", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "b4c60d5866ee3909f50c44e8bdf1f31b", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int v,a[10],i,j,min,sobrante,len;\n    scanf(\"%d\",&v);\n    for(i=1;i<=9;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i == 1)\n            min = i;\n        if(i > 1 &&(a[i] < a[min]))\n            min = i;\n    }\n    len=v/a[min];\n    if(len==0)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else\n    {\n        int numero[len+1];\n        for(i=1;i<=len;i++)\n            numero[i]=min;\n        sobrante=v-len*a[min];\n        for(i=1;i<=len;i++)\n        {\n            for(j=9;j>=min;j--)\n            {\n                if(a[j]<=sobrante)\n                {\n                    numero[i]=j;\n                    sobrante-=a[j];\n                }\n            }\n        }\n        for(i=1;i<=len;i++)\n            printf(\"%d\",numero[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int v,a[10],i,j,min,sobrante,len;\n    scanf(\"%d\",&v);\n    min = 1;\n    for(i=1;i<=9;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i] <= a[min])\n            min = i;\n    }\n    len=v/a[min];\n    if(len==0)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else\n    {\n        int numero[len+1];\n        for(i=1;i<=len;i++)\n            numero[i]=min;\n        sobrante=v-len*a[min];\n        for(i=1;i<=len;i++)\n        {\n            for(j=9;j>=min;j--)\n            {\n                if(a[j] - a[min] <= sobrante)\n                {\n                    numero[i] = j;\n                    sobrante-=a[j] - a[min];\n                    break;\n                }\n            }\n        }\n        for(i=1;i<=len;i++)\n            printf(\"%d\",numero[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7493036211699164, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "74f400156920ed934af219df7e4af484", "bug_code_uid": "af7a726adaf73da33b9c4f58e2fd1aae", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "3b2518036a1f90d454cca18a96b1b298", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nmain(){\n\nint i,j;\nint a,b,k,m;\nscanf(\"%I64d%I64d\",&a,&b);\nscanf(\"%I64d%I64d\",&k,&m);\nint A[a+1],B[b+1];\nfor(i=0;i<a;i++){\n      scanf(\"%I64d\",&A[i]);\n}\nfor(i=0;i<b;i++){\n      scanf(\"%I64d\",&B[i]);\n}\n\nfor(i=k-1;i<a;i++){\n      \n      for(j=b-m;j>=0;j--){\n            \n            if(A[i]<B[j])\n      {\n            printf(\"YES\");\n            return 0;\n      }\n            \n      }\n}\n\n\nprintf(\"NO\");\nreturn 0;\n\n\n\n}\n", "fixed": "#include<stdio.h>\n\nmain(){\n\nint i,j;\nint a,b,k,m;\nscanf(\"%I64d%I64d\",&a,&b);\nscanf(\"%I64d%I64d\",&k,&m);\nint A[a+1],B[b+1];\nfor(i=0;i<a;i++){\n      scanf(\"%I64d\",&A[i]);\n}\nfor(i=0;i<b;i++){\n      scanf(\"%I64d\",&B[i]);\n}\nif(A[k-1]<B[b-m])\nprintf(\"YES\");\nelse printf(\"NO\");\nreturn 0;\n\n\n\n}\n"}
{"similarity_score": 0.25316455696202533, "equal_cnt": 13, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "4374ea3a9f99e7eb0bbe2e3637dd4262", "bug_code_uid": "0ee8efba8d0103e3fa5cc79b4e8c5185", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "567ac3ec9329dc80a812ea7dd6e048dc", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char **argv)\n{\n\tint t;\n\tint L,v,l,r;\n\tint count=0;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\t\n\t\tscanf(\"%d%d%d%d\", &L ,&v , &l, &r);\n\t\tfor(int i=1; i<=L; i++)\n\t\t{\t\n\t\t\tif (l<=i && i<=r)\n\t\t\t{\n\t\t\t\t\n\t\t\t}\n\t\t\telse if(i%v==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", count);\n\t\tcount=0;\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n    long int t;\n    scanf(\"%ld\",&t);\n    while(t)\n    {\n\tlong long int L,v,l,r;\n\tscanf(\"%lld %lld %lld %lld\", &L,&v,&l,&r);\n\tprintf(\"%lld \\n\",(L/v-r/v+(l-1)/v));\n\tt--;\n    }\n\treturn 0;\n\t\n}\n"}
{"similarity_score": 0.6856540084388185, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "da85ecafa21d1830dc8fdefebb241c4c", "bug_code_uid": "74046838b21fa7b4c3abc509e60fae32", "src_uid": "409073ef839a7d0cdb900c06ee4a841c", "apr_id": "fd4403aab1671bf1e9e20dd1a2e4d825", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int t, i,j,k,l,n,m,cr,cd,ct;\n scanf(\"%d\",&t);\n for(i=0;i<t;i++)\n   { scanf(\"%d %d\",&n,&m);\n     char ara[n][m];\n     cd=0; cr=0;\n     for(j=0;j<=n;j++)\n        { for(k=0;k<=m;k++)\n            { scanf(\"%c\",&ara[i][j]);}\n        }\n     for(j=0;j<=n;j++)\n        { if(ara[j][m]=='R')\n            { cr++;}\n        }\n\n     for(j=0;j<=m;j++)\n        { if(ara[n][j]=='D')\n            { cd++;}\n        }\n     printf(\"%d\\n\",cr+cd);\n     }\n    return 0;\n }\n", "fixed": "#include<stdio.h>\nint main()\n{\n int t,i,j,k,l,n,m,cr,cd,ct;\n scanf(\"%d\",&t);\n for(i=0;i<t;i++)\n   { scanf(\"%d %d\",&n,&m);\n     char ara[n][m];\n     cd=0; cr=0;\n     for(j=0;j<n;j++)\n        {\n            scanf(\"%s\",ara[j]);\n        }\n     for(j=0;j<n;j++)\n        { if(ara[j][m-1]=='R')\n            { cr++;}\n        }\n\n     for(j=0;j<m;j++)\n        { if(ara[n-1][j]=='D')\n            { cd++;}\n        }\n        ct=cr+cd;\n     printf(\"%d\\n\",ct);\n     }\n    return 0;\n }\n"}
{"similarity_score": 0.30814524043179586, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0f7f273a53c4e117d341ece4d95dea4d", "bug_code_uid": "2ce577f73073a493ec9eb313c22a512c", "src_uid": "f33991da3b4a57dd6535af86edeeddc0", "apr_id": "68c7db93fb0077e8288b4e6278460eaf", "difficulty": 1500, "tags": ["dp", "number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint max(int a, int b)\n{\n\treturn ((a>b)?a:b);\n}\n\nint a[1000006];\n\nint solve(int a[], int n, int i, int k)\n{\n\tif (i == n) {\n\t\treturn 0;\n\t}\n\tint ans = solve(a, n, i+1, k);\n\tif (a[i]%k == 0) {\n\t\tans = max(ans, 1+solve(a, n, i+1, a[i]));\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tprintf(\"%d\\n\", solve(a, n, 0, 1));\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint max(int a, int b)\n{\n\treturn ((a>b)?a:b);\n}\n\nint a[1000006];\nint dp[1000009];\n\nint solve(int a[], int n)\n{\n\tfor (int i = 0; i < n; i++) {\n\t\tdp[a[i]] = 1;\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 2; a[i]*j <= a[n-1]; j++) {\n\t\t\tif (dp[a[i]*j]) {\n\t\t\t\tdp[a[i]*j] = max(dp[a[i]*j], 1+dp[a[i]]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tans = max(ans, dp[a[i]]);\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tprintf(\"%d\\n\", solve(a, n));\n\n\treturn 0;\n}"}
{"similarity_score": 0.9808811305070657, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3e6b5c19361fb176f48a894589f11f6c", "bug_code_uid": "a6e6a723f7bd7ca0989a2be3347ba38c", "src_uid": "b15bc7ff01f239a7e4377868a7dda0a6", "apr_id": "4a7170cf37f97ff0e8f27487a6e355e9", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,k,i,j,c;\n    scanf(\"%d %d\",&n,&k);\n    if(k>(double)(n*n)/2.0)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n    c=k;\n    printf(\"YES\\n\");\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(c>0)\n            {\n                if((i+j)%2==0){\n                    printf(\"L\");\n                    c--;\n                }\n                else\n                    printf(\"S\");\n            }\n            else\n            {\n                printf(\"S\");\n            }\n\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int n,k,i,j,c;\n    scanf(\"%d %d\",&n,&k);\n    if(k>ceil((double)(n*n)/2.0))\n    {\n        printf(\"NO\");\n        return 0;\n    }\n    c=k;\n    printf(\"YES\\n\");\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(c>0)\n            {\n                if((i+j)%2==0){\n                    printf(\"L\");\n                    c--;\n                }\n                else\n                    printf(\"S\");\n            }\n            else\n            {\n                printf(\"S\");\n            }\n\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.82, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "82ac135c24c336b07bf98d919a7ae4d8", "bug_code_uid": "57b9a8d3143cf9cf66939f31c3892bb2", "src_uid": "0c7a476716445c535a61f4e81edc7f75", "apr_id": "7856d0b610666711e61fe35f1113d2dc", "difficulty": 1400, "tags": ["binary search", "geometry", "ternary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#define PI 3.14159265358979323\nint main()\n{\n    int t,n;\n    double length;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n       length=tan((n-1)*PI/(2*n));\n       printf(\"%.9lf\\n\",length);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n;\n    float l,y;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n       l=tan(acos(-1)/(2*n));\n       y=1/l;\n       printf(\"%.6f\\n\",y);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9482976040353089, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0585fc8a8ab23da77e6f4d4ca829178e", "bug_code_uid": "c4630fd552cde1b3d8f2e862ec779714", "src_uid": "9640b7197bd7b8a59f29aecf104291e1", "apr_id": "7ee77ab49d60d547e4875038ab550a8e", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint\r\nmain ()\r\n{\r\n  int t;\r\n  char s[101], l[51], r[51];\r\n  scanf (\"%d\", &t);\r\n  while (t > 0)\r\n    {\r\n      scanf (\"%s\", s);\r\n      if (strlen (s) % 2 != 0)\r\n\t{\r\n\t  printf (\"NO\\n\");\r\n\t}\r\n      else\r\n\t{\r\n\t  for (int i = 0; i < strlen (s) / 2; i++)\r\n\t    {\r\n\t      l[i] = s[i];\r\n\t    }\r\n\t  for (int i = strlen (s) / 2, j = 0; i < strlen (s); i++, j++)\r\n\t    {\r\n\t      r[j] = s[i];\r\n\t    }\r\n\t  if (strlen (s) == 2)\r\n\t    {\r\n\t      if (r[0] == l[0])\r\n\t\t{\r\n\t\t  printf (\"YES\\n\");\r\n\t\t}\r\n\t      else\r\n\t\t{\r\n\t\t  printf (\"NO\\n\");\r\n\t\t}\r\n\t    }\r\n\t  else\r\n\t    {\r\n\t      if (strcmp (l, r) == 0)\r\n\t\t{\r\n\t\t  printf (\"YES\\n\");\r\n\t\t}\r\n\t      else\r\n\t\t{\r\n\t\t  printf (\"NO\\n\");\r\n\t\t}\r\n\t    }\r\n\t}\r\n    strcpy(r, \"\");\r\n    strcpy(l, \"\");\r\n      t--;\r\n    }\r\n\r\n  return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint\r\nmain ()\r\n{\r\n  int t;\r\n  char s[101], l[51], r[51];\r\n  scanf (\"%d\", &t);\r\n  while (t > 0)\r\n    {\r\n        char s[101], l[51]={}, r[51]={};\r\n      scanf (\"%s\", s);\r\n      if (strlen (s) % 2 != 0)\r\n\t{\r\n\t  printf (\"NO\\n\");\r\n\t}\r\n      else\r\n\t{\r\n\t  for (int i = 0; i < strlen (s) / 2; i++)\r\n\t    {\r\n\t      l[i] = s[i];\r\n\t    }\r\n\t  for (int i = strlen (s) / 2, j = 0; i < strlen (s); i++, j++)\r\n\t    {\r\n\t      r[j] = s[i];\r\n\t    }\r\n\t  if (strlen (s) == 2)\r\n\t    {\r\n\t      if (r[0] == l[0])\r\n\t\t{\r\n\t\t  printf (\"YES\\n\");\r\n\t\t}\r\n\t      else\r\n\t\t{\r\n\t\t  printf (\"NO\\n\");\r\n\t\t}\r\n\t    }\r\n\t  else\r\n\t    {\r\n\t      if (strcmp (l, r) == 0)\r\n\t\t{\r\n\t\t  printf (\"YES\\n\");\r\n\t\t}\r\n\t      else\r\n\t\t{\r\n\t\t  printf (\"NO\\n\");\r\n\t\t}\r\n\t    }\r\n\t}\r\n      t--;\r\n    }\r\n\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.844804318488529, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0ff3d78c46bcb7a39bc6f0cbabb86d8b", "bug_code_uid": "cc0eecad8b29f6b1306e01918689ac90", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "7909ec891d91170652417d731797dd2a", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,x,d,i,cnt=0;\n\tchar ch[1000];\n\tscanf(\"%d %d\",&n,&x);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s %d\",ch,&d);\n\t\tif(strcmp(ch,\"+\")==0)\n\t\t{\n\t\t\tx=x+d;\n\t\t}\n\t\telse if(strcmp(ch,\"-\")==0 && x>=d)\n\t\t{\n\t\t\tx=x-d;\n\t\t}\n\t\telse if(strcmp(ch,\"-\")==0 && x<d)\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d %d\",x,cnt);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,x,d,i,cnt=0;\n\tlong long int sum=0;\n\tchar ch[1000];\n\tscanf(\"%d %d\",&n,&x);\n\tsum=x;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s %d\",ch,&d);\n\t\tif(strcmp(ch,\"+\")==0)\n\t\t{\n\t\t\tsum=sum+d;\n\t\t}\n\t\telse if(strcmp(ch,\"-\")==0 && sum>=d)\n\t\t{\n\t\t\tsum=sum-d;\n\t\t}\n\t\telse if(strcmp(ch,\"-\")==0 && sum<d)\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t\t\n\t}\n\tprintf(\"%I64d %d\",sum,cnt);\n\treturn 0;\n}"}
{"similarity_score": 0.8912751677852349, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "06d7acc1fce6a421bfe8e4f40f3d58ce", "bug_code_uid": "cf924eebd3761243312b14ba650aff71", "src_uid": "f9a691cdf7047ab82d2e2c903a53fc7e", "apr_id": "42a49441d5ed7303b3d2732022887a8e", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint total,i,n,k,arr[10000][2],max,j,error;\n\tFILE *fp1,*fp2;\n\tfp1=fopen(\"input.txt\",\"r\");\n\tfp2=fopen(\"output.txt\",\"w\");\n\twhile(fscanf(fp1,\"%d\",&n)!=EOF)\n\t{\n\t\tfscanf(fp1,\"%d\",&k);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tarr[i][1]=0;\n\t\t\tfscanf(fp1,\"%d\",&arr[i][0]);\n\t\t}\n\t\terror=0;\n\t\twhile(error!=n)\n\t\t{\n\t\t\tmax=arr[n-1][0];\n\t\t\tj=n-1;\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i][0]>max && arr[i][1]!=3)\n\t\t\t\t{\n\t\t\t\t\tmax=arr[i][0];\n\t\t\t\t\tj=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(arr[j][0]>=k && arr[j][1]<3)\n\t\t\t{\n\t\t\t\tarr[j][0]=arr[j][0]-k;\n\t\t\t\tarr[j][1]++;\n\t\t\t}\n\t\t\telse\n\t\t\t\terror++;\n\t\t}\n\t\ttotal=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\ttotal=total+arr[i][0];\n\t\t}\n\t\tfprintf(fp2,\"%d\\n\",total);\n\t}\n\tfclose(fp1);\n\tfclose(fp2);\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint total,i,n,k,arr[10000][2],max,j,error;\n\tFILE *fp1,*fp2;\n\tfp1=fopen(\"input.txt\",\"r\");\n\tfp2=fopen(\"output.txt\",\"w\");\n\twhile(fscanf(fp1,\"%d\",&n)!=EOF)\n\t{\n\t\tfscanf(fp1,\"%d\",&k);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tarr[i][1]=0;\n\t\t\tfscanf(fp1,\"%d\",&arr[i][0]);\n\t\t}\n\t\terror=0;\n\t\ttotal=0;\n\t\twhile(error!=n)\n\t\t{\n\t\t\tmax=arr[n-1][0];\n\t\t\tj=n-1;\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif( arr[i][0]>=max )\n\t\t\t\t{\n\t\t\t\t\tmax=arr[i][0];\n\t\t\t\t\tj=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(arr[j][0]>=k && arr[j][1]<3)\n\t\t\t{\n\t\t\t\tarr[j][0]=arr[j][0]-k;\n\t\t\t\tarr[j][1]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttotal=total+arr[j][0];\n\t\t\t\tarr[j][0]=-1000;\n\t\t\t\terror++;\n\t\t\t}\n\t\t}\n\t\tfprintf(fp2,\"%d\\n\",total);\n\t}\n\tfclose(fp1);\n\tfclose(fp2);\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9978118161925602, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "488d6ce476dcb503ecef45669ae41681", "bug_code_uid": "ae3849676f60c72ac35a850870005a2c", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "945fa0f6378f540e3729e2b04e587df9", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   long a[10000][2];\n   int i,j,n,k,max;\n   scanf(\"%d %d\",&n,&k);\n   fflush(stdin);\n   for (i=0;i<n;i++)\n     for(j=0;j<2;j++)\n        scanf(\"%ld\",&a[i][j]);\n    if(a[0][1]>k)\n        max=a[0][0]-a[0][1]+k;\n        else max=a[0][0];\n   for (i=1;i<n;i++)\n   {\n    if(a[i][1]>k&&a[i][0]-a[i][1]+k>max)\n        max=a[i][0]-a[i][1]+k;\n    if(a[i][1]<=k&&a[i][0]>max)\n        max=a[i][0];\n   }\n   printf(\"%d\",max);\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   long a[10000][2];\n   int i,j,n,k,max;\n   scanf(\"%d %d\",&n,&k);\n   //fflush(stdin);\n   for (i=0;i<n;i++)\n     for(j=0;j<2;j++)\n        scanf(\"%ld\",&a[i][j]);\n    if(a[0][1]>k)\n        max=a[0][0]-a[0][1]+k;\n        else max=a[0][0];\n   for (i=1;i<n;i++)\n   {\n    if(a[i][1]>k&&a[i][0]-a[i][1]+k>max)\n        max=a[i][0]-a[i][1]+k;\n    if(a[i][1]<=k&&a[i][0]>max)\n        max=a[i][0];\n   }\n   printf(\"%d\",max);\n   return 0;\n}\n"}
{"similarity_score": 0.9910714285714286, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c187a8b4a8b6378d415031d27fe31feb", "bug_code_uid": "7624a4d887d1f374fcf52460b0690093", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "f7b032dffd14bdfc08252b792cb47607", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,i,count,sum=0;\n    scanf(\"%d\",&n);\n    int a[100];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        if(a[i]>0)\n            sum+=a[i];\n        else if(sum>0)\n            sum--;\n        else\n            count++;\n    }\n    printf(\"%d\\n\",count);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n     int n,i,count=0,sum=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        if(a[i]>0)\n            sum+=a[i];\n        else if(sum>0)\n            sum--;\n        else\n            count++;\n    }\n    printf(\"%d\\n\",count);\n\n    return 0;\n}"}
{"similarity_score": 0.9238665526090676, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1cbd81302a1d1f29a23d938105e59fdb", "bug_code_uid": "eb5f223b87a02ecceda81f68ff82215f", "src_uid": "281b95c3686c94ae1c1e4e2a18b7fcc4", "apr_id": "78dfd4ee825a90e81b0f40450ec98bdb", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,A,B,C,T,a[1005];\n    while(scanf(\"%d%d%d%d%d\",&n,&A,&B,&C,&T)!=EOF)\n    {   int sum=0,s=0,s1=0,i;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n        if(B>=C)\n        {\n            sum=n*A;\n        }\n        else\n        {\n            for(i=0;i<n;i++)\n                s1=s1+i;\n            sum=s1*C;\n            for(i=0;i<n;i++)\n            {\n                a[i]=A-B*(T-a[i]);\n                s=s+a[i];\n            }\n            sum=sum+s;\n        }\n        printf(\"%d\",sum);\n\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,A,B,C,T,a[1005];\n    while(scanf(\"%d%d%d%d%d\",&n,&A,&B,&C,&T)!=EOF)\n    {   int sum=0,s=0,s1=0,i,j;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n        if(B>=C)\n        {\n            sum=n*A;\n        }\n        else\n        {\n            for(i=1;i<T;i++)\n                for(j=0;j<n;j++)\n                  if(a[j]<=i)\n                    s1=s1+C;\n            sum=s1;\n            for(i=0;i<n;i++)\n            {\n                a[i]=A-B*(T-a[i]);\n                s=s+a[i];\n            }\n            sum=sum+s;\n        }\n        printf(\"%d\",sum);\n\n    }\n}\n"}
{"similarity_score": 0.6371511068334937, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "457baff42c792df0c752e02bc313f5d7", "bug_code_uid": "88728c56bdeba2b62c13f56755dd4688", "src_uid": "33a31edb75c9b0cf3a49ba97ad677632", "apr_id": "7708776b1881a548ac5849c393baa972", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n   int n,m,i,j;\r\n   \r\n  scanf(\"%d\",&n);\r\n   \r\n  for(i=0;i<n;i++){\r\n  scanf(\"%d\",&m);\r\n   \t\r\n  long long int a=1,b,k;\r\n\t   \r\n\t   for(j=0;j<m;j++){\r\n   \t\tscanf(\"%lld\",&k);\r\n   \t\ta=a*k;\r\n\t       }\r\n\t       \r\nlong long int s=sqrt(a);\r\n   \t     b=s*s;\r\n\t\t \r\n   \t \r\n   \t \r\n   \t if(b==a)\r\n   \t  { printf(\"NO\");\r\n   \t  }\r\n   \t else\r\n   \t {printf(\"YES\");}\r\n\r\n    if(i<n-1)\r\n    {printf(\"\\n\");\r\n   }\r\n   }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n   int n,m,i,j;\r\n   \r\n  scanf(\"%d\",&n);\r\n   \r\n  for(i=0;i<n;i++){\r\n  scanf(\"%d\",&m);\r\n   \t\r\n  long int a[m],b,k,p=0;\r\n\t   \r\n\t   for(j=0;j<m;j++){\r\n   \t\tscanf(\"%ld\",&a[j]);\r\n\t       }\r\n\t \r\n\t for(k=0;k<m;k++)\r\n\t\t {\tlong int s=sqrt(a[k]);\r\n   \t          b=s*s;\r\n\t\t   if(b!=a[k])\r\n\t\t      { \r\n\t\t        p=1;\r\n\t\t        break;\r\n\t\t      }\r\n\t\t        }\r\n\t\t   \r\n\t\r\n   \t \r\n   \t\r\n   \t if(p==1)\r\n   \t  { printf(\"YES\");\r\n   \t  }\r\n   \t else\r\n   \t {printf(\"NO\");}\r\n\r\n    if(i<n-1)\r\n    {printf(\"\\n\");\r\n   }\r\n   }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.6234967622571693, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e3d9bec95ea8986283ab9945e902f294", "bug_code_uid": "308e87be0b386af6a5018147b1a2cc78", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "9da88834f16d8fdccbedc8aadfb70f48", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int i = 0; i < n_sets; ++i) {\r\n        int sum;\r\n        scanf(\"%d\", &sum);\r\n\r\n        int twoBurleCount = sum / 3;\r\n        int oneBurleCount = sum - twoBurleCount * 2;\r\n\r\n        printf(\"%d %d\\n\", oneBurleCount, twoBurleCount);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int i = 0; i < n_sets; ++i) {\r\n        int sum;\r\n        scanf(\"%d\", &sum);\r\n\r\n        int oneBurleCount, twoBurleCount;\r\n\r\n        switch (sum % 3) {\r\n            case 0:\r\n                oneBurleCount = sum / 3;\r\n                twoBurleCount = sum / 3;\r\n                break;\r\n            case 1:\r\n                oneBurleCount = sum / 3 + 1;\r\n                twoBurleCount = sum / 3;\r\n                break;\r\n            case 2:\r\n                oneBurleCount = sum / 3;\r\n                twoBurleCount = sum / 3 + 1;\r\n                break;\r\n        }\r\n\r\n        printf(\"%d %d\\n\", oneBurleCount, twoBurleCount);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9849315068493151, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "47db9108520c27dba7bbffc59846ffb6", "bug_code_uid": "cc03605facda11a0d142d1f0980ac578", "src_uid": "7f9c5a137e9304d4d7eee5ee1a891d1d", "apr_id": "d6ef6791704675e825151b7be969bdac", "difficulty": 1800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\nint n,i,k,j,d=0,z,max,h[201]={0};\nscanf(\"%d %d\", &n,&k);\nint a[n],b[n],c[n];\nfor(i=0;i<n;i++)\n   {c[i]=0;\n   \tscanf(\"%d %d\", &a[i],&b[i]);\n   \tfor(j=a[i];j<=b[i];j++)\n   \t  h[j]++;\n   }\n   for(i=0;i<201;i++)\n   {\n   \twhile(h[i]>k)\n   \t  {z=-2;\n   \t  max=0;\n   \t  \tfor(j=0;j<n;j++)\n   \t  \t{\n   \t  \t\tif(i==a[j]&&c[j]!=-1)\n   \t  \t\t{\n   \t  \t\t\tif(b[j]>max)\n   \t  \t\t\t{\n   \t  \t\t\t\tmax=b[j];\n   \t  \t\t\t\tz=j;\n   \t  \t\t\t}\n   \t  \t\t\t\n   \t  \t\t}\n   \t  \t}\n   \t  \tif(z!=-2)\n   \t  \t{c[z]=-1;\n   \t  \td++;}\n   \t  \tfor(j=a[z];j<=b[z];j++)\n   \t  \t{\n   \t  \t\th[j]--;\n   \t  \t}\n   \t  }\n   }\n   printf(\"%d\\n\", d);\n   \n   for(i=0;i<n;i++)\n   if(c[i]==-1)\n   printf(\"%d \", i+1);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\nint n,i,k,j,d=0,z,max,h[201]={0};\nscanf(\"%d %d\", &n,&k);\nint a[n],b[n],c[n];\nfor(i=0;i<n;i++)\n   {c[i]=0;\n   \tscanf(\"%d %d\", &a[i],&b[i]);\n   \tfor(j=a[i];j<=b[i];j++)\n   \t  h[j]++;\n   \t  \n   }\n   for(i=0;i<201;i++)\n   {\n   \twhile(h[i]>k)\n   \t  {z=-2;\n   \t  max=0;\n   \t  \tfor(j=0;j<n;j++)\n   \t  \t{\n   \t  \t\tif(i>=a[j]&&i<=b[j]&&c[j]!=-1)\n   \t  \t\t{\n   \t  \t\t\tif(b[j]>max)\n   \t  \t\t\t{\n   \t  \t\t\t\tmax=b[j];\n   \t  \t\t\t\tz=j;\n   \t  \t\t\t}\n   \t  \t\t\t\n   \t  \t\t}\n   \t  \t}\n   \t  \tif(z!=-2)\n   \t  \t{c[z]=-1;\n   \t  \td++;}\n   \t  \tfor(j=a[z];j<=b[z];j++)\n   \t  \t{\n   \t  \t\th[j]--;\n   \t  \t}\n   \t  }\n   }\n   printf(\"%d\\n\", d);\n   \n   for(i=0;i<n;i++)\n   if(c[i]==-1)\n   printf(\"%d \", i+1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.27692307692307694, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "96b0bb5f33a01c229297999b82c6e0eb", "bug_code_uid": "dbbecf33de3839cfda3fbe98c5b94a3f", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "215c641f2582311400981be4af174839", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,m,r,n,count=0;\n    char sad[200001];\n    while(1){m=r=0;\n    scanf(\"%d \",&n);\n    scanf(\"%s\",sad);\n    for(i=0;i<n;i++)\n    {\n        if(sad[i]=='0')\n        m++;\n        else\n        r++;\n    }\n    if(m>r)\n    count=m-r;\n    else\n    count=r-m;\n    printf(\"%d\\n\",count);}\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,m,r,n,count=0;\n    char sad[200001];\n    m=r=0;\n    scanf(\"%d \",&n);\n    scanf(\"%s\",sad);\n    for(i=0;i<n;i++)\n    {\n        if(sad[i]=='0')\n        m++;\n        else\n        r++;\n    }\n    if(m>r)\n    count=m-r;\n    else\n    count=r-m;\n    printf(\"%d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.947261663286004, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "d7bc0f86f66135dc394b92837d85c616", "bug_code_uid": "290e0ccd600f467323646462dd332741", "src_uid": "8c2a6a29dc238b55d0bc99d7e203f1bf", "apr_id": "3041cb5db6fca9dfdde156260e1d7478", "difficulty": 1800, "tags": ["dp", "implementation", "greedy", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n\nint len,n,i,s[1000];\nchar t[1000];\n\nscanf(\"%d\",&n);\nscanf(\"%s\",t);\nfor(i=0;i<n;i++)\ns[i]=1;\n\ni=0;\nwhile(t[i])\n\t{\n\tswitch(t[i])\n\t\t{\n\t\tcase 'L':while(s[i]<=s[i+1])\n\t\t\t\t\ts[i] ++; \n\t\t\t\t\tbreak;\n\t\tcase 'R':while(s[i]>=s[i+1])\n\t\t\t\t\ts[i+1]++;\n\t\t\t\t\tbreak;\n\t\tcase '=': while(s[i]!=s[i+1])\n\t\t\t\t\tif(s[i]<s[i+1])\n\t\t\t\t\ts[i]++;\n\t\t\t\t\telse s[i+1]++;\n\t\t\t\t\t break;\n\t\tdefault:  break;\n\t\t}\n\t\ti++;\n\n\t}\n\nfor(i=0;i<n;i++)\nprintf(\"%d \",s[i]);\n\nreturn 0;\n}", "fixed": "\n/* manthan -1 */\n\n\n#include<stdio.h>\n\nint main(void)\n{\n\nint len,n,i,s[1000],j;\nchar t[1000];\n\nscanf(\"%d\",&n);\nscanf(\"%s\",t);\nfor(i=0;i<n;i++)\ns[i]=1;\n\ni=0;j=0;\n\nwhile(j< n){\ni=0;\nwhile(t[i])\n\t{\n\tswitch(t[i])\n\t\t{\n\t\tcase 'L':while(s[i]<=s[i+1])\n\t\t\t\t\ts[i] ++; \n\t\t\t\t\tbreak;\n\t\tcase 'R':while(s[i]>=s[i+1])\n\t\t\t\t\ts[i+1]++;\n\t\t\t\t\tbreak;\n\t\tcase '=': while(s[i]!=s[i+1])\n\t\t\t\t\tif(s[i]<s[i+1])\n\t\t\t\t\ts[i]++;\n\t\t\t\t\telse s[i+1]++;\n\t\t\t\t\t break;\n\t\tdefault:  break;\n\t\t}\n\t\ti++;\n\n\t}\nj++;\n}\nfor(i=0;i<n;i++)\nprintf(\"%d \",s[i]);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.26883468834688345, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 6, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "52c1e3c9cc42976facc46cbdf1c7b6f1", "bug_code_uid": "86287d042811d8c12cbc8de4445e1dee", "src_uid": "ff5abd7dfd6234ddaf0ee7d24e02c404", "apr_id": "105f836f5970e9d37b8cf3c78481352f", "difficulty": 1800, "tags": ["dp", "flows", "graph matchings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <time.h>\r\n#include <memory.h>\r\n#include <limits.h>\r\n#pragma warning(disable:4996)\r\n#define swap(x,y,t) ((t)=(x),(x)=(y),(y)=(t))\r\n#define max(x, y) ((x) > (y) ? (x) : (y))\r\n#define min(x, y) ((x) > (y) ? (y) : (x))\r\n\r\nint ary[5001], q[5001], idx = 0, res = INT_MAX, n;\r\n\r\nvoid dfs(int i, int cnt) {\r\n\tif (i >= idx) {\r\n\t\tres = min(res, cnt);\r\n\t\treturn;\r\n\t}\r\n \tint len = max(n - q[i], q[i]);\r\n\tfor (int j = 1; j <= len; j++) {\r\n\t\t\r\n\t\tif (q[i] - j >= 0) {\r\n\t\t\tif (ary[q[i] - j] == 0) {\r\n\t\t\t\tary[q[i] - j] = 1;\r\n\t\t\t\tdfs(i + 1, cnt + j);\r\n\t\t\t\tary[q[i] - j] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (q[i] + j < n) {\r\n\t\t\tif (ary[q[i] + j] == 0) {\r\n\t\t\t\tary[q[i] + j] = 1;\r\n\t\t\t\tdfs(i + 1, cnt + j);\r\n\t\t\t\tary[q[i] + j] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tscanf(\"%d\", &ary[i]);\r\n\t\tif (ary[i] == 1) q[idx++] = i;\r\n\t}\r\n\tdfs(0, 0);\r\n\r\n\tprintf(\"%d\\n\", res);\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <limits.h>\r\n#include <memory.h>\r\n#pragma warning(disable:4996)\r\n#define min(x, y) ((x) > (y) ? (y) : (x))\r\n\r\nint n, idx1, idx2, res = 0;\r\nint dp[5001][2501], ary1[5001], ary2[2501];\r\n\r\nint abs(int a) {\r\n\treturn a > 0 ? a : -a;\r\n}\r\n\r\nint DP(int i, int cnt) {\r\n\tif (i >= idx1) {\r\n\t\tif (cnt >= idx2) return 0;\r\n\t\treturn 1000000007;\r\n\t}\r\n\tif (dp[i][cnt] != -1) return dp[i][cnt];\r\n\tdp[i][cnt] = 0;\r\n\tif (cnt >= idx2) return dp[i][cnt] = DP(i + 1, cnt);\r\n\tint a = DP(i + 1, cnt);\r\n\tint b = DP(i + 1, cnt + 1) + abs(ary1[i] - ary2[cnt]);\r\n\tdp[i][cnt] = min(a, b);\r\n\treturn dp[i][cnt];\r\n}\r\n\r\nint main(void) {\r\n\tscanf(\"%d\", &n);\r\n\tmemset(dp, -1, sizeof(dp));\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tint data;\r\n\t\tscanf(\"%d\", &data);\r\n\t\tif (data == 0) ary1[idx1++] = i;\r\n\t\telse ary2[idx2++] = i;\r\n\t}\r\n\tprintf(\"%d\\n\", DP(0, 0));\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.958974358974359, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "67eb5e8ec6bc1b82c06bddec9a10cade", "bug_code_uid": "f8ad4dc0c3fe540dbc27a7553097eaea", "src_uid": "e34f110440942a841624d0f42e0ddec4", "apr_id": "f7aba0990f0f74c91c0d0405e74eb3ee", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint bestinschool[101], p[101], s[101];\n\nint main(){\n\tint n, c, m, k, i, newschools=0;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tfor(i=1;i<=n;++i)\n\t\tscanf(\"%d\", p+i);\n\tfor(i=1;i<=n;++i){\n\t\tscanf(\"%d\", s+i);\n\t\tif(p[i]>p[bestinschool[s[i]]])}\n\tfor(i=0;i<k;++i){\n\t\tscanf(\"%d\", &c);\n\t\tif(bestinschool[s[c]]!=c) newschools++;\n\t}\n\tprintf(\"%d\\n\", newschools);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint bestinschool[101], p[101], s[101];\n\nint main(){\n\tint n, c, m, k, i, newschools=0;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tfor(i=1;i<=n;++i)\n\t\tscanf(\"%d\", p+i);\n\tfor(i=1;i<=n;++i){\n\t\tscanf(\"%d\", s+i);\n\t\tif(p[i]>p[bestinschool[s[i]]]){\n\t\t\tbestinschool[s[i]]=i;\n\t\t}\n\t}\n\tfor(i=0;i<k;++i){\n\t\tscanf(\"%d\", &c);\n\t\tif(bestinschool[s[c]]!=c) newschools++;\n\t}\n\tprintf(\"%d\\n\", newschools);\n\treturn 0;\n}"}
{"similarity_score": 0.984182776801406, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0e9b1ca85c3133af3c43953a347e3d30", "bug_code_uid": "741cce5c9a0428864a2ebbe5f64c4dbd", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "d293a659d36c1d101c3662239af7644f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,x,y;\n\tint m=0,c=0;\n\tscanf(\"%d\",&n);\n\twhile(n>0)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tscanf(\"%d\",&y);\n\t\tif(x>y)\n\t\tm=m+1;\n\t\telse\n\t\tc=c+1;\n\t\tn--;\n\t}\n\tif(m>c)\n\tprintf(\"Mishka\");\n\telse if (m<c)\n\tprintf(\"Chris\");\n    else \n\tprintf(\"Friendship is magic!^^\");\n\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,x,y;\n\tint m=0,c=0;\n\tscanf(\"%d\",&n);\n\twhile(n>0)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tscanf(\"%d\",&y);\n\t\tif(x>y)\n\t\tm=m+1;\n\t\telse if (x<y)\n\t\tc=c+1;\n\t\tn--;\n\t}\n\tif(m>c)\n\tprintf(\"Mishka\");\n\telse if (m<c)\n\tprintf(\"Chris\");\n    else \n\tprintf(\"Friendship is magic!^^\");\n\t\n}\n"}
{"similarity_score": 0.956081081081081, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "13bdd050698ef7836818e97b1c80eadd", "bug_code_uid": "6fca86001e6ddc389f36f8bd10c6b57d", "src_uid": "2d4dbada60ebcf0bdaead8d0c1c0e2c1", "apr_id": "fc53840d1ee390eeeee33e084c468a59", "difficulty": 1600, "tags": ["dfs and similar", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define F for(i=1;i<=n;i++)\nchar A[3003][3003],W[3003][3003],B[3003];\nint Q[3003],n,i,j,t,x,s;\nvoid f(int x ,int s){\n    int i;\n    Q[x] = s;\n    F if(W[x][i] && B[i]){\n        W[i][x] = 0;\n        f(i,s+1);\n        }\n}\nint main(){\n    scanf(\"%d\",&n);\n    F{  scanf(\"%d %d\",&t,&j);\n        W[t][j] = W[j][t] = A[t][j] = A[j][t] = 1;\n    }\n    F {x=i; while(1){\n        for(s=0,j=1;j<=n;j++)\n            if(A[x][j]) s++, t=j;\n        if(s == 1) { A[x][t] = A[t][x] = 0; B[x] = 1; x = t; continue; }\n    }}\n    F if(!B[i]) f(i,0);\n    F printf(\"%d \",Q[i]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define F for(i=1;i<=n;i++)\nchar A[3003][3003],W[3003][3003],B[3003];\nint Q[3003],n,i,j,t,x,s;\nvoid f(int x ,int s){\n    int i;\n    Q[x] = s;\n    F if(W[x][i] && B[i]){\n        W[i][x] = 0;\n        f(i,s+1);\n        }\n}\nint main(){\n    scanf(\"%d\",&n);\n    F{  scanf(\"%d %d\",&t,&j);\n        W[t][j] = W[j][t] = A[t][j] = A[j][t] = 1;\n    }\n    F {x=i; while(1){\n        for(s=0,j=1;j<=n;j++)\n            if(A[x][j]) s++, t=j;\n        if(s == 1) A[x][t] = A[t][x] = 0, B[x] = 1, x = t;\n        else break;\n    }}\n    F if(!B[i]) f(i,0);\n    F printf(\"%d \",Q[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.6735537190082644, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "28ba03e0a7b6fe7b1eacaf80687a7802", "bug_code_uid": "8ecdde325217d75d2a3410be83609b02", "src_uid": "f336b622fdaf5960032268641320bb53", "apr_id": "18758831221344b2c34905afe697fd13", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,k,l,n,c,m,t;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n][2];\n\tc=0;\n\tt=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t\tc=c+(a[i][1]-a[i][0]+1);\n\t}\n\tint b[c];\n\tj=0;\n\t\tfor(l=0;l<n;l++)\n\t\t{\n\t\t\t\n\t\t\ti=a[l][0];\n\t\twhile((i<=a[l][1])&&(j<c))\n\t\t{\n\t\t\tb[j]=i;\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\t}\n\tfor(k=1;k<c-1;k++)\n\t{\n\t\tfor(j=1;j<c+1-k;j++)\n\t\t{\n\t\t\tif(b[j-1]>b[j])\n\t\t\t{\n\t\t\t\tt=b[j]+b[j-1];\n\t\t\t\tb[j]=t-b[j];\n\t\t\t\tb[j-1]=t-b[j-1];\n\t\t\t}\n\t\t}\n\t}\n\tfor(l=0;l<c;l++)\n\tprintf(\"%d \",b[l]);\n\tprintf(\"\\n\");\n\tint x[m],p;\n\tp=0;\n\tx[p]=b[0];\n\tfor(i=1;i<c;i++)\n\t{\n\t\tif(b[i-1]!=b[i])\n\t\t{\n\t\t\tp++;\n\t\t\tx[p]=b[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",m-p-1);\n\tj=0;\nfor(i=1;i<=m;i++)\n{\n\tif(i==x[j])\n\t{\n\t\tj++;\n\t}\n\telse\n\t{\n\t\tprintf(\"%d \",i);\n\t}\n}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j,k,l,n,c,m,t;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n][2];\n\tc=0;\n\tt=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t\tc=c+(a[i][1]-a[i][0]+1);\n\t}\n\tint b[c];\n\tj=0;\n\t\tfor(l=0;l<n;l++)\n\t\t{\n\t\t\t\n\t\t\ti=a[l][0];\n\t\twhile((i<=a[l][1])&&(j<c))\n\t\t{\n\t\t\tb[j]=i;\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\t}\n\tfor(k=1;k<c-1;k++)\n\t{\n\t\tfor(j=1;j<c+1-k;j++)\n\t\t{\n\t\t\tif(b[j-1]>b[j])\n\t\t\t{\n\t\t\t\tt=b[j]+b[j-1];\n\t\t\t\tb[j]=t-b[j];\n\t\t\t\tb[j-1]=t-b[j-1];\n\t\t\t}\n\t\t}\n\t}\n\tint x[m],p;\n\tp=0;\n\tx[p]=b[0];\n\tfor(i=1;i<c;i++)\n\t{\n\t\tif(b[i-1]!=b[i])\n\t\t{\n\t\t\tp++;\n\t\t\tx[p]=b[i];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",m-p-1);\n\tj=0;\nfor(i=1;i<=m;i++)\n{\n\tif(i==x[j])\n\t{\n\t\tj++;\n\t}\n\telse\n\t{\n\t\tprintf(\"%d \",i);\n\t}\n}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.3198090692124105, "equal_cnt": 22, "replace_cnt": 11, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "5fc8b67a07bfe9b5aa3b52c5333be11e", "bug_code_uid": "8436aae07c83b4d5acfa33b35a5dede4", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "6877e4d13cb72ff4f8a7a69bdd5710b7", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nchar pos[200005];\nint min = 2147483647;\n\nint main()\n{\n    int n; scanf(\"%d\", &n);\n    int first, second;\n\n    scanf(\"%s\", pos);\n    scanf(\"%d\", &first);\n\n    for(int i = 0; i < --n; i++)\n    {\n        scanf(\"%d\", &second);\n        if(pos[i] == 'L')\n        {\n            first = second;\n            continue;\n        }\n        else if(pos[i] == 'R')\n        {\n            if(pos[i+1] == 'R')\n            {\n                first = second;\n                continue;\n            }\n            else if(pos[i+1] == 'L')\n            {\n                if(min > second - first) min = second - first;\n                first = second;\n            }\n        }\n    }\n    if(min == 2147483647) printf(\"-1\\n\");\n    else printf(\"%d\\n\", min/2);\n}", "fixed": "#include <stdio.h>\n#define min(a, b) ((a) < (b) ? (a) : (b))\n#define inf 2147483647\n#define maxn 200005\nchar d[maxn];\n\nint main()\n{\n    int n;\n    int p, l = -1;\n    int time = inf;\n    \n    scanf(\"%d\", &n);\n    scanf(\"%s\", d);\n    for (int i = 0; i < n; ++i)\n    {\n        scanf(\"%d\", &p);\n\n        if (d[i] == 'R')\n        {\n            l = p;\n            continue;\n        }\n        if (l != -1)\n            time = min(time, (p - l) / 2);\n    }\n    printf(\"%d\\n\", time == inf ? -1 : time);\n\n    return 0;\n}"}
{"similarity_score": 0.9939393939393939, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "70662d400d7f93f2c0dcb7575e84ac17", "bug_code_uid": "45a192972cfcccefa8b33b18fb0f27d3", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "a5c89dc87789b3a3c2c78d76738a51d6", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "  #include <stdio.h>\n  #include <stdlib.h>\n  #include <string.h>\n  int main() {\n  int tab[100];\n  int n,temp;\n  scanf(\"%d\",&n);\n  for (int i = 1; i <= n; i++) {\n    tab[i-1]=i;\n  }\n  if(n<2){printf(\"-1\");return 0;}\n  else{\n  for (int i = 0; i <=n-2; i++) {\n    temp=tab[i];\n    tab[i]=tab[i+1];\n    tab[i+1]=temp;\n    i++;\n  }\n}\n  for (int i = 0; i < n; i++) {\n    printf(\"%d \",tab[i] );\n  }\n    return 0;\n\n  }\n", "fixed": "  #include <stdio.h>\n  #include <stdlib.h>\n  #include <string.h>\n  int main() {\n  int tab[100];\n  int n,temp;\n  scanf(\"%d\",&n);\n  for (int i = 1; i <= n; i++) {\n    tab[i-1]=i;\n  }\n  if(n%2==1){printf(\"-1\");return 0;}\n  else{\n  for (int i = 0; i <=n-2; i++) {\n    temp=tab[i];\n    tab[i]=tab[i+1];\n    tab[i+1]=temp;\n    i++;\n  }\n}\n  for (int i = 0; i < n; i++) {\n    printf(\"%d \",tab[i] );\n  }\n    return 0;\n\n  }\n"}
{"similarity_score": 0.45454545454545453, "equal_cnt": 22, "replace_cnt": 8, "delete_cnt": 13, "insert_cnt": 1, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "b132a30e7b45c8de4858a37f6c83e3a0", "bug_code_uid": "6380a76e34e789d6aee9f4cf70fb067f", "src_uid": "36ad784f23bd1e8e579052642a6e9244", "apr_id": "d97c510bd63e45a667d853054b8a3933", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n\n#include <stdio.h>\n\n\n\n\n\nint main(void)\n{\n\tconst long double K = 1.000000011l;\n\tlong double r;\n\tint n;\n\tlong t;\n\n\tscanf(\"%d %ld\", &n, &t);\n\t\n\tfor (r = n; t; --t)\n\t\tr = r * K;\n\n\tprintf(\"%f\", r);\n\n\treturn 0;\n}", "fixed": "#include <math.h>\n\nint main(){ \n\tint a, b;\n\tscanf(\"%d%d\", &a, &b); \n\treturn!printf(\"%f\", a*pow(1 + 11e-9, b)); \n}"}
{"similarity_score": 0.9408050513022889, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fdf42958d7891267ef0699afb823f185", "bug_code_uid": "7f554b0c15b4fa8c0cbe2d86da8ad18c", "src_uid": "3ccc98190189b0c8e58a96dd5ad1245d", "apr_id": "5f74b39f431946fc36d23d804d20f3b4", "difficulty": 1100, "tags": ["implementation", "greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n\tint testcase,matrix[50][50];\n\tscanf(\"%d\",&testcase);\n\twhile(testcase--){\n\t\tint row,col;\n\t\tscanf(\"%d%d\",&row,&col);\n\t\tint r[row],c[col];\n\t\tfor (int i=0;i<row;i++){\n\t\t\tfor(int j=0;j<col;j++){\n\t\t\t\tscanf(\"%d\",&matrix[i][j]);\n\t\t\t\tif (matrix[i][j])\n\t\t\t\t\tr[i]=c[j]=1;\n\t\t\t}\n\t\t\n\t\t}\n\t\tint r_count=0,c_count=0;\n\t\tfor(int i=0;i<row;i++)\n\t\t\tr_count+=r[i];\t\t\n\t\tfor(int i=0;i<col;i++)\n\t\t\tc_count+=c[i];\n\t\tint player=0;\n\t\tif (row-r_count>col-c_count)\n\t\t\tplayer=col-c_count;\n\t\telse\n\t\t\tplayer=row-r_count;\n\t\tif(player%2)\n\t\t\tprintf(\"Ashish\\n\");\n\t\telse\n\t\t\tprintf(\"Vivek\\n\");\n\n\t}\n\t\n}\n", "fixed": "#include<stdio.h>\nvoid main()\n{\n\tint testcase,matrix[50][50];\n\tscanf(\"%d\",&testcase);\n\twhile(testcase--){\n\t\tint row,col;\n\t\tscanf(\"%d%d\",&row,&col);\n\t\tint r[row],c[col];\n\t\tfor (int i=0;i<row;i++)\n\t\t\tr[i]=0;\n\t\tfor (int i=0;i<col;i++)\n\t\t\tc[i]=0;\n\t\tfor (int i=0;i<row;i++){\n\t\t\tfor(int j=0;j<col;j++){\n\t\t\t\tscanf(\"%d\",&matrix[i][j]);\n\t\t\t\tif (matrix[i][j])\n\t\t\t\t\tr[i]=c[j]=1;\n\t\t\t}\n\t\t\n\t\t}\n\t\tint r_count=0,c_count=0;\n\t\tfor(int i=0;i<row;i++)\n\t\t\tr_count+=r[i];\t\t\n\t\tfor(int i=0;i<col;i++)\n\t\t\tc_count+=c[i];\n\t\tint player=0;\n\t\tif (row-r_count>col-c_count)\n\t\t\tplayer=col-c_count;\n\t\telse\n\t\t\tplayer=row-r_count;\n\t\tif(player%2)\n\t\t\tprintf(\"Ashish\\n\");\n\t\telse\n\t\t\tprintf(\"Vivek\\n\");\n\n\t}\n\t\n}\n"}
{"similarity_score": 0.15560165975103735, "equal_cnt": 13, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "bc956c564afdbbbacc220e3ca608f61c", "bug_code_uid": "f71894bc19c9c59bc4c6d2718a0943b3", "src_uid": "e0de8a6441614d1e41a53223b5fa576b", "apr_id": "a59b873cdc6f2c545ce10df0cd077270", "difficulty": 1000, "tags": ["brute force", "constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "for i in range(int(input())):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    b=[0]*3\r\n    t=0\r\n    for j in a:\r\n        b[j%3]+=1\r\n    while(b[0]!=b[1]):\r\n        for k in range(3):\r\n            if b[k]>n/3:\r\n                b[k]-=1\r\n                b[(k+1)%3]+=1\r\n                t+=1\r\n    print(t)", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n],b[3]={0},c=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            b[a[i]%3]+=1;\r\n        }\r\n        while(b[0]!=b[1] || b[1]!=b[2])\r\n        {\r\n            for(int j=0;j<3;j++)\r\n            {\r\n                if(b[j]>n/3)\r\n                {\r\n                    b[j]--;\r\n                    b[(j+1)%3]++;\r\n                    c++;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",c);\r\n    }\r\n}"}
{"similarity_score": 0.9951515151515151, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fce871a3f68e659ada5e63d6756178d1", "bug_code_uid": "aba13433ed1cbc279201f8952bcfb480", "src_uid": "cc1feee94617c0cba1c528a0cb3952a8", "apr_id": "23ce89c322ff4633c7596ffb97bc545a", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n\n{\n\n        char a[52][52];\n        int i,j,n;\n        int x = 0;\n        scanf(\"%d\",&n);\n\n\n\n        for(i=0; i<n; i++){\n            scanf(\"%s\", &a[i]);\n        }\n        for(i=0; i<n-2; i++){\n            for(j=0; j<n-1; j++){\n                if(a[i][j] == '.' && a[i+1][j]!='.' && a[i+2][j]!='.'&&a[i+1][j-1]!='.'&& a[i+1][j+1]!='.'){\n                    a[i][j]=a[i+1][j]=a[i+2][j]=a[i+1][j-1]=a[i+1][j+1]='#';\n                }\n            }\n        }\n\n        for(i=0; i<n; i++){\n            for(j=0; j<n; j++){\n                if(a[i][j]=='.'){\n                    x = 0;\n                    printf(\"NO\\n\");\n                    exit(0);\n                }\n                else\n                    x = 1;\n            }\n        }\n\n        if(x)\n            printf(\"YES\\n\");\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n\n{\n\n        char a[52][52];\n        int i,j,n;\n        int x = 0;\n        scanf(\"%d\",&n);\n\n\n\n        for(i=0; i<n; i++){\n            scanf(\"%s\", &a[i]);\n        }\n        for(i=0; i<n-2; i++){\n            for(j=0; j<n-1; j++){\n                if(a[i][j] == '.' && a[i+1][j]=='.' && a[i+2][j]=='.'&&a[i+1][j-1]=='.'&& a[i+1][j+1]=='.'){\n                    a[i][j]=a[i+1][j]=a[i+2][j]=a[i+1][j-1]=a[i+1][j+1]='#';\n                }\n            }\n        }\n\n        for(i=0; i<n; i++){\n            for(j=0; j<n; j++){\n                if(a[i][j]=='.'){\n                    x = 0;\n                    printf(\"NO\\n\");\n                    exit(0);\n                }\n                else\n                    x = 1;\n            }\n        }\n\n        if(x)\n            printf(\"YES\\n\");\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.7128888888888889, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "9c83a98ea0c3c9bcc37e7a3f54c5c9ec", "bug_code_uid": "c33ee101230cebb270ab13bec03720b7", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "b94fd123b6dd636e9cae8d89b973cf73", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, i, j, c[500], d;\n    long long a, b;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++)\n    {\n        c[i]=0;\n        scanf(\"%lld %lld\", &a, &b);\n        for(j=0;; j++)\n        {\n            if(a%b==0)\n            {\n                a = a/b;\n                c[i]++;\n            }\n            else\n            {\n                d = a%b;\n                c[i] = c[i]+d;\n                a-=d;\n            }\n            if(a==0)\n                break;\n        }\n        printf(\"%d\\n\", c[i]);\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, i, j ;\n    scanf(\"%d\", &n);\n    long long a[n], b[n], d, c[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld %lld\", &a[i], &b[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        c[i]=0;\n       while(1){\n            if(a[i]%b[i]==0)\n            {\n                a[i] = a[i]/b[i];\n                c[i]++;\n            }\n            else\n            {\n                d = a[i]%b[i];\n                c[i] = c[i]+d;\n                a[i]=a[i] - d;\n            }\n            if(a[i]==0)\n                break;\n        }\n        printf(\"%lld\\n\", c[i]);\n    }\n\n}\n"}
{"similarity_score": 0.8103092783505155, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4d4197e883910f6f85ec366c177359f0", "bug_code_uid": "3d59db9f11b7d27e37499820303d9cd1", "src_uid": "2052b0b4abdcf7d613b56842b1267f60", "apr_id": "f97b35170b8476130c4e3ffdc73e7610", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n \nint main()\n{\n    int n,i,l,r,ans = 0;\n    int lzero = 0,rzero = 0;\n    \n    scanf(\"%d\",&n);\n    for(i = 0 ; i < n ; i++)\n    {\n        scanf(\"%d %d\",&l,&r);\n        if(l == 0)\n            lzero++;\n        if(r == 0)\n            rzero++;\n    }\n    \n    if(lzero > rzero)\n        ans = (n-lzero) + rzero;\n    else\n        ans = (n-rzero) + lzero;\n    \n    printf(\"%d\\n\",ans);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n \nint main()\n{\n    int n,i,l,r,ans = 0;\n    int lzero = 0,rzero = 0;\n    \n    scanf(\"%d\",&n);\n    for(i = 0 ; i < n ; i++)\n    {\n        scanf(\"%d %d\",&l,&r);\n        if(l == 0)\n            lzero++;\n        if(r == 0)\n            rzero++;\n    }\n    \n    if(lzero > n/2)\n        ans = n-lzero;\n    else\n        ans = lzero;\n        \n    if(rzero > n/2)\n        ans += n-rzero;\n    else\n        ans += rzero;\n    \n    printf(\"%d\\n\",ans);\n    \n    return 0;\n}"}
{"similarity_score": 0.9857612267250822, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "bdd11c45e5f95b349cfd0402503cde22", "bug_code_uid": "81cb6933f43a6d5a68849c74366c5143", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "2599ada5fa49e3f9423ba1c9070bef24", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--) {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n>=1900) {\r\n            printf(\"Division:1\\n\");\r\n        }\r\n        else if(n>=1600 && n<=1899) {\r\n            printf(\"Division:2\\n\");\r\n        }\r\n        else if(n>=1599 && n<=1400) {\r\n            printf(\"Division:3\\n\");\r\n        }\r\n        else {\r\n            printf(\"Division:4\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--) {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n>=1900){\r\n            printf(\"Division 1\\n\");\r\n        }\r\n        else if(n>=1600 && n<=1899) {\r\n            printf(\"Division 2\\n\");\r\n        }\r\n        else if(n<=1599 && n>=1400) {\r\n            printf(\"Division 3\\n\");\r\n        }\r\n        else {\r\n            printf(\"Division 4\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9231568016614745, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "162f253bc0eb14338d1afa9fff3efe0e", "bug_code_uid": "8fb3a08dcf7a4f12ac8fdd683fe2883d", "src_uid": "bf573af345509b2364ada6e613b6f998", "apr_id": "beba8c5ac8e74c15bcbf47c2c6e60174", "difficulty": 1100, "tags": ["implementation", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <string.h>\n#include <inttypes.h>\n\n\n/* CF312Div2 - A */\n\ntypedef struct app_s {\n\tint\tco;\n\tint\tap;\n} app_t;\n\napp_t neg[128], pos[128];\n\nint\ncomp (const void *a, const void *b)\n{\n        int     x = ((app_t *)a)->co;\n        int     y = ((app_t *)b)->co;\n\n        return (x - y);\n}\n\nint main ()\n{\n\tint\ti, n, l = 0, r = 0;\n\tint\tans = 0, max = 0;\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++) {\n\t\tint\tt, a;\n\t\tscanf(\"%d%d\", &t, &a);\n\n\t\tif (t < 0) {\n\t\t\tneg[l].co = t;\n\t\t\tneg[l++].ap = a;\n\t\t} else {\n\t\t\tpos[r].co = t;\n\t\t\tpos[r++].ap = a;\n\t\t}\n\t}\n\tqsort (neg, l, sizeof (app_t), comp);\n\tqsort (pos, r, sizeof (app_t), comp);\n\n\tif (r < l) {\n\t\tmax = r+1;\n\t} else {\n\t\tif (l == r) {\n\t\t\tmax = l;\n\t\t} else {\n\t\t\tmax = l+1;\n\t\t}\n\t}\n\n\tfor (i = 0; i < max; i++) {\n\t\tans += neg[i].ap;\n\t\tans += pos[i].ap;\n\t}\n\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <string.h>\n#include <inttypes.h>\n\n\n/* CF312Div2 - A */\n\ntypedef struct app_s {\n\tint\tco;\n\tint\tap;\n} app_t;\n\napp_t neg[128], pos[128];\n\nint\nrcomp (const void *a, const void *b)\n{\n        int     x = ((app_t *)a)->co;\n        int     y = ((app_t *)b)->co;\n\n        return (y - x);\n}\n\nint\ncomp (const void *a, const void *b)\n{\n        int     x = ((app_t *)a)->co;\n        int     y = ((app_t *)b)->co;\n\n        return (x - y);\n}\n\nint main ()\n{\n\tint\ti, n, l = 0, r = 0;\n\tint\tans = 0, max = 0;\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++) {\n\t\tint\tt, a;\n\t\tscanf(\"%d%d\", &t, &a);\n\n\t\tif (t < 0) {\n\t\t\tneg[l].co = t;\n\t\t\tneg[l++].ap = a;\n\t\t} else {\n\t\t\tpos[r].co = t;\n\t\t\tpos[r++].ap = a;\n\t\t}\n\t}\n\tqsort (neg, l, sizeof (app_t), rcomp);\n\tqsort (pos, r, sizeof (app_t), comp);\n\n\tif (r < l) {\n\t\tmax = r+1;\n\t} else {\n\t\tif (l == r) {\n\t\t\tmax = l;\n\t\t} else {\n\t\t\tmax = l+1;\n\t\t}\n\t}\n\n\tfor (i = 0; i < max; i++) {\n\t\tans += neg[i].ap;\n\t\tans += pos[i].ap;\n\t}\n\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9734620024125452, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "abb47c0bdd7bdb4ef61625e7f5fc5ceb", "bug_code_uid": "1068ead7bd7326f2bf2735978e6c2716", "src_uid": "594e64eef7acd055d59f37710edda201", "apr_id": "1419ffb048200dc1b096666e0ec36c1a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,m=0,f1,f2,f3,f4,i,j;\n    scanf(\"%d\",&n);\n    int x[n],y[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&x[i],&y[i]);\n\n    for(i=0;i<n;i++)\n    {\n        f1=0;f2=0;f3=0;f4=0;\n        for(j=0;j<n;j++)\n        {\n            if(i!=j)\n            {\n\n            if(f1==0)\n            {if(x[i]<x[j] && y[i]==y[j])\n                f1++;}\n            else if(f2==0)\n            {if(x[i]>x[j] && y[i]==y[j])\n                f2++;}\n            else if(f3==0)\n            {if(x[i]==x[j] && y[i]>y[j])\n                f3++;}\n            else if(f4==0)\n            {if(x[i]==x[j] && y[i]<y[j])\n                f4++;}\n\n            }\n            if(f1+f2+f3+f4==4)\n            {\n                m++;\n                break;\n            }\n        }\n    }\n\n    printf(\"%d\",m);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,m=0,f1,f2,f3,f4,i,j;\n    scanf(\"%d\",&n);\n    int x[n],y[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&x[i],&y[i]);\n\n    for(i=0;i<n;i++)\n    {\n        f1=0;f2=0;f3=0;f4=0;\n        for(j=0;j<n;j++)\n        {\n            if(i!=j)\n            {\n\n            if(f1==0)\n            {if(x[i]<x[j] && y[i]==y[j])\n                f1++;}\n            if(f2==0)\n            {if(x[i]>x[j] && y[i]==y[j])\n                f2++;}\n            if(f3==0)\n            {if(x[i]==x[j] && y[i]>y[j])\n                f3++;}\n            if(f4==0)\n            {if(x[i]==x[j] && y[i]<y[j])\n                f4++;}\n\n            if(f1+f2+f3+f4==4)\n            {\n                m++;\n                break;\n            }\n\n            }\n        }\n    }\n\n    printf(\"%d\",m);\n\n    return 0;\n}\n"}
{"similarity_score": 0.5202780996523755, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "ac44693db02445010a9311bee644962f", "bug_code_uid": "230e6a1cc3885582b73caff0b3f37f57", "src_uid": "c9225c915669e183cbd8c20b848d96e5", "apr_id": "c7527bd2ed2790c00ff833db06e64569", "difficulty": 900, "tags": ["implementation", "greedy", "games"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t--) {\n        int n;\n        scanf(\"%d\", &n);\n        char x;\n        _Bool result = 0;\n        if (n % 2 == 1) {\n            for (int i = 1; i <= n; i++) {\n                scanf(\"%c \", &x);\n                if ((x - 48) % 2 == 1 && i % 2 == 1) {\n                    result = 1;\n                }\n            }\n            if (result == 1) {\n                printf(\"1\\n\");\n            } else {\n                printf(\"2\\n\");\n            }\n        } else {\n            for (int i = 1; i <= n; i++) {\n                scanf(\"%c \", &x);\n                if ((x - 48) % 2 == 0 && i % 2 == 0) {\n                    result = 1;\n                }\n            }\n            if (result == 1) {\n                printf(\"2\\n\");\n            } else {\n                printf(\"1\\n\");\n            }\n        }\n    }\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t--) {\n        int n;\n        scanf(\"%d\", &n);\n        char s[n];\n        _Bool res = 0;\n        scanf(\"%s\", s);\n        if (n % 2 == 0) {\n            for (int i = 1; i <= n; i++) {\n                if ((s[i - 1] - '0') % 2 == 0 && i % 2 == 0) {\n                    res = 1;\n                    printf(\"2\\n\");\n                    break;\n                }\n            }\n            if (res == 0) {\n                printf(\"1\\n\");\n            }\n        } else {\n            for (int i = 1; i <= n; i++) {\n                if ((s[i - 1] - '0') % 2 == 1 && i % 2 == 1) {\n                    res = 1;\n                    printf(\"1\\n\");\n                    break;\n                }\n            }\n            if (res == 0) {\n                printf(\"2\\n\");\n            }\n        }\n    }\n}"}
{"similarity_score": 0.250272034820457, "equal_cnt": 11, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "e746f357663c4ff3e690c4fa453a7c4f", "bug_code_uid": "b95946dc4fe7dc8d428ecd90d7f10e33", "src_uid": "ab7ab67941783da5c16f6294eb1910d9", "apr_id": "5e1f1417e1d2936ab604425cc1c5341c", "difficulty": 800, "tags": ["greedy", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n\nint main()\n{\n\tint t,i,j,n,temp;\n\tint a[50];\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tint m;\n\tfor(m=0;m<n;m++)\n\tscanf(\"%d\",&a[i]); \n    \tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]==a[j])\n\t\t\t{\n\t\t\t\tfor(temp=j;temp<n-1;temp++)\n\t\t\t\ta[temp]=a[temp+1];\n\t\t\t\tj--;\n\t\t\t\tn--;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\n\tif(n%2==0)\n\tprintf(\"%d\\n\",n);\n\telse\n\t{\n\t\tn=n-1;\n\t\tprintf(\"%d\\n\",n);\n\t}\n\t\n\treturn 0;\n\t \t   \t\t \t\t  \t \t\t\t\t\t  \t \t\t\t\t\t\t\t", "fixed": "#include<stdio.h> \nint main()\n{\n int n,i=0;\n scanf(\"%d\",&n);\n for(i=0;i<n;i++){\n  int x,m=0,j,temp;\n  scanf(\"%d\",&x);\n  int a[x];\n  for(m=0;m<x;m++){\n   scanf(\"%d\",&a[m]);\n  }   int p=x;\n  for(m=0;m<p;m++){\n     for(j=m+1;j<p;j++){\n      if(a[m]==a[j]){\n       for(temp=j;temp<p-1;temp++){\n        a[temp]=a[temp+1]; }\n        j--;\n        p--;\n      }\n     } \n  } \n  if((x-p)%2!=0){\n   printf(\"%d\\n\",p-1);\n  } else{\n   printf(\"%d\\n\",p);\n  }\n }\n return 0;\n}\n  \t\t \t\t \t \t\t\t\t\t \t\t\t      \t\t\t\t"}
{"similarity_score": 0.8010335917312662, "equal_cnt": 16, "replace_cnt": 6, "delete_cnt": 8, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "882cce8ef4b40c5cf25c4253b5e02955", "bug_code_uid": "2aca34c9e6752e74f6e65856a98a9954", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "7409179628a485c984208cab4d6b6efc", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t,l,r,d,j;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d %d\",&l,&r,&d);\n\t\tif(l<d)\n\t\tj=d;\n\t\telse \n\t\t    j=(r/d)+1*d;\n\t\tprintf(\"%d\\n\", j);\n\t\t\n\t}\n\treturn 0;\n}\n\t\t\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint l,r,d;\n\t\tscanf(\"%d%d%d\",&l,&r,&d);\n\t\tint x=1;\n\t\tif(d>=l){\n\t\t\tx=r/d+1;\n\t\t}\n\t\tprintf(\"%d\\n\",x*d);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.3458646616541353, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "72f73848a7d14184761c3d7e2e901316", "bug_code_uid": "df18ee0673eb4cac6155967b3e323557", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "551d043abfa1995a29e24996f4d9ada7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\nint main()\n{\n   int x,n,h;\n   scanf(\"%d %d\",&n,&h);\n   x= n;\n   int a[2*h+1];\n   int counter=0;\n   \n   for(int i = 0; i < n;i++)\n   {\n       scanf(\"%d\",&a[i]);\n   }\n    for(int i = 0; i < n;i++)\n   {\n       if(a[i] > h){\n           counter++;\n       }\n   }\n   int result;\n   result = n + counter;\n   printf(\"%d\",result);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,h,i,cnt=0;\n    scanf(\"%d%d\",&n,&h);\n    int a[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0; i<n; i++)\n    {\n        if(a[i]>h)\n        {\n            cnt+=2;\n        }\n        else\n            cnt++;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}"}
{"similarity_score": 0.9794721407624634, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "4bdfce0b7785f92fbe19811304837ed8", "bug_code_uid": "33b83a19c6bad598866ea2d5a1f022bd", "src_uid": "233c2806db31916609421fbd126133d0", "apr_id": "1625f5fdb55e1cbbc16272f8300f642d", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, a[110];\nint mn, mnind;\n\nvoid swp(int i, int j) {\n    int tmp=a[i];\n    a[i]=a[j], a[j]=tmp;\n    return;\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    for(int i=1;i<=n;i++) scanf(\"%d\", &a[i]);\n    for(int i=1;i<=n;i++) {\n        mn=2e9;\n        for(int j=i;j<=n;j++) {\n            if(mn>a[j]) mn=a[j], mnind=j;\n        }\n        if(mnind==i) continue;\n        for(int j=mnind;j>=i+1;j--) {\n            printf(\"%d %d\\n\", j, j-1);\n            swp(j, j-1);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n, a[110];\nint mn, mnind;\n\nvoid swp(int i, int j) {\n    int tmp=a[i];\n    a[i]=a[j], a[j]=tmp;\n    return;\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    for(int i=1;i<=n;i++) scanf(\"%d\", &a[i]);\n    for(int i=1;i<=n;i++) {\n        mn=2e9, mnind=0;\n        for(int j=i;j<=n;j++) {\n            if(mn>a[j]) mn=a[j], mnind=j;\n        }\n        if(mnind==i) continue;\n        for(int j=mnind;j>=i+1;j--) {\n            printf(\"%d %d\\n\", j-1, j);\n            swp(j-1, j);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9989023051591658, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fe0c634d43487a71b823bcb287a8ab62", "bug_code_uid": "c3dd391bc3e63457539c7baca792a806", "src_uid": "b784cebc7e50cc831fde480171b9eb84", "apr_id": "a8955c9859916655f32f9dbb8e368f28", "difficulty": 1400, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\n\tint n;\n\tint range=1, range_max = 0;\n\tint i=0, j=0;\n\tint max, min;\n\tint lmin, lmax;\n\tint start=0, start_old=0;\n\tint l,r;\n\n\tint vett[100000];\n\n\tscanf(\"%d\", &n);\n\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &vett[i]);\n\t}\n\n\tfor(i=0; i<n-1; i= start){\n\n\t\tmin = vett[i];\n\t\tmax = vett[i];\n\t\tl = i;\n\n\t\tfor(j=i+1; j<n;j++){\n\n\t\t\tif(vett[j] >= max){\n\t\t\t\tmax = vett[j];\n\t\t\t\tlmax = j;\n\t\t\t}\n\t\t\tif (vett[j] <= min){\n\t\t\t\tmin = vett[j];\n\t\t\t\tlmin = j;\n\t\t\t}\n\n\t\t\tif( (max - min) <= 1){\n\t\t\t\tr = j;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tstart_old = start;\n\n\t\tif(lmin >= lmax) start = lmax+1;\n\t\telse start = lmin+1;\n\n\t\tif(start_old >= start) start = start_old +1;\n\n\t\trange = r - l + 1;\n\t\tif(range > range_max) range_max = range;\n\n\t\tprintf(\"range = %d, [%d,%d], {%d,%d}, start = %d, start_old = %d\\n\", range, l,r, lmin, lmax, start, start_old);\n\t}\n\n\t\n\n\tprintf(\"%d\", range_max);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\n\tint n;\n\tint range=1, range_max = 0;\n\tint i=0, j=0;\n\tint max, min;\n\tint lmin, lmax;\n\tint start=0, start_old=0;\n\tint l,r;\n\n\tint vett[100000];\n\n\tscanf(\"%d\", &n);\n\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &vett[i]);\n\t}\n\n\tfor(i=0; i<n-1; i= start){\n\n\t\tmin = vett[i];\n\t\tmax = vett[i];\n\t\tl = i;\n\n\t\tfor(j=i+1; j<n;j++){\n\n\t\t\tif(vett[j] >= max){\n\t\t\t\tmax = vett[j];\n\t\t\t\tlmax = j;\n\t\t\t}\n\t\t\tif (vett[j] <= min){\n\t\t\t\tmin = vett[j];\n\t\t\t\tlmin = j;\n\t\t\t}\n\n\t\t\tif( (max - min) <= 1){\n\t\t\t\tr = j;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tstart_old = start;\n\n\t\tif(lmin >= lmax) start = lmax+1;\n\t\telse start = lmin+1;\n\n\t\tif(start_old >= start) start = start_old +1;\n\n\t\trange = r - l + 1;\n\t\tif(range > range_max) range_max = range;\n\n\t\t//printf(\"range = %d, [%d,%d], {%d,%d}, start = %d, start_old = %d\\n\", range, l,r, lmin, lmax, start, start_old);\n\t}\n\n\t\n\n\tprintf(\"%d\", range_max);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.6773618538324421, "equal_cnt": 38, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 27, "fix_ops_cnt": 38, "lang": "GNU C11", "fix_code_uid": "1c7f444bcdf104afa3ec043e6b0df37e", "bug_code_uid": "361c404c3edc3870b35b7dd8217d660a", "src_uid": "28102f75e0798960740e5a2625393c8f", "apr_id": "09691bd73f405090506b25e972fa85df", "difficulty": 800, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char c[100],d[100];\r\n    int t,i,j;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",&c);\r\n    int len=strlen(c);\r\n    if(len>2)\r\n    {\r\n        for(i=0;i<len;i++)\r\n    {\r\n        for(j=i+1;j<len;j++)\r\n        {\r\n            if(c[i]==c[j])\r\n            {\r\n                d[i]=c[j];\r\n                c[j]=c[i+2];\r\n                c[i+2]=d[i];\r\n            }\r\n        }\r\n    }\r\n    printf(\"%s\\n\",c);\r\n    }\r\nelse printf(\"%s\\n\",c);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    char c[100], d[100];\r\n    int t, i, j;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%s\", &c);\r\n        int len = strlen(c);\r\n        // if(len>2)\r\n        //{\r\n        for (i = 0; i < len; i++)\r\n        {\r\n            for (j = i + 1; j < len; j++)\r\n            {\r\n                if (c[i] > c[j])\r\n                {\r\n                    d[i] = c[i];\r\n                    c[i] = c[j];\r\n                    c[j] = d[i];\r\n                }\r\n            }\r\n        }\r\n        printf(\"%s\\n\", c);\r\n    }\r\n    // else printf(\"%s\\n\",c);\r\n}\r\n"}
{"similarity_score": 0.7795918367346939, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "af8012c2d10af35001349d955304763c", "bug_code_uid": "c8dc6c31178ca78816310422ddf28c58", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "375021212ed00943f63e6043c99436af", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//#include<iostream.h>\n#include<stdio.h>\nvoid main()\n{\nlong int a,b,k,t,d=0;\nscanf(\"%ld\",&t);\nfor(int i=0;i<t;i++)\n\t{scanf(\"%ld %ld %ld\",&a,&b,&k);\n\tif(k%2==0)\n\td=(a-b)*(k/2);\n\telse\n\td=a*((k-1)/2)-b*((k-1)/2)+a;\nprintf(\"%ld\",d);}\n}\n", "fixed": "//#include<iostream.h>\n#include<stdio.h>\nint main()\n{\nlong long int a,b,k,t,d=0;\nscanf(\"%I64d\",&t);\nfor(int i=0;i<t;i++)\n\t{scanf(\"%I64d %I64d %I64d\",&a,&b,&k);\n\tif(k%2==0)\n\td=(a-b)*(k/2);\n\telse\n\td=a*((k-1)/2)-b*((k-1)/2)+a;\nprintf(\"%I64d\\n\",d);}\nreturn 0;\n}\n"}
{"similarity_score": 0.9766718506998445, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9c1bc987deb6a6fd66b59df8a485da37", "bug_code_uid": "1378ac431606cdf9c693b89ad3c18331", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "9e79de19489ad9dbc0798c878fc0d77e", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    _int64 n,a,b,i,w;\n    while(scanf(\"%I64d%I64d%I64d\",&n,&a,&b)!=EOF)\n    {\n        for(i=0;i<n-1;i++)\n        {\n            scanf(\"%I64d\",&w);\n            printf(\"%I64d \",(w*a%b)/a);\n        }\n            scanf(\"%I64d\",&w);\n            printf(\"%I64d\\n\",(w*a%b)/a);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long n,a,b,i,w;\n    while(scanf(\"%I64d%I64d%I64d\",&n,&a,&b)!=EOF)\n    {\n        for(i=0;i<n-1;i++)\n        {\n            scanf(\"%I64d\",&w);\n            printf(\"%I64d \",(w*a%b)/a);\n        }\n            scanf(\"%I64d\",&w);\n            printf(\"%I64d\\n\",(w*a%b)/a);\n    }\n    return 0;\n}"}
{"similarity_score": 0.562037797863599, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "f825ab431b856a6eb02e8de7c1e23c2e", "bug_code_uid": "221920f9ebebfaae8658953bd57be03d", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "308215ed090449e006544d92b2be41f5", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, p , q, a, b, sum = 0, count = 0;\n    scanf(\"%d\", &n);\n    scanf(\"\\n%d\", &p);\n    while(p--)\n    {\n        scanf(\"%d\", &a);\n        sum = sum + a;\n    }\n    scanf(\"\\n%d\", &q);\n    while(q--)\n    {\n        scanf(\"%d\", &b);\n        count = count + b;\n    }\n    if(sum == count)\n    {\n       printf(\"I become the guy.\\n\");\n    }\n    else\n    {\n       printf(\"Oh, my keyboard!\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, p , q, x, count = 0, i;\n    scanf(\"%d\", &n);\n    int arr[n];\n    scanf(\"\\n%d\", &p);\n    int str1[p];\n    for(i = 0; i < p; i++)\n    {\n        scanf(\"%d\", &str1[i]);\n        x = str1[i];\n        arr[x] = 1;\n    }\n    scanf(\"\\n%d\", &q);\n    int str2[q];\n     for(i = 0; i < q; i++)\n    {\n        scanf(\"%d\", &str2[i]);\n        x = str2[i];\n        arr[x] = 1;\n    }\n    for(i = 1; i <= n; i++)\n    {\n        if(arr[i] == 1)\n        {\n            count = 1;\n        }\n        else\n        {\n            count = 0;\n            break;\n        }\n\n    }\n    if(count == 1)\n    {\n       printf(\"I become the guy.\\n\");\n    }\n    else\n    {\n       printf(\"Oh, my keyboard!\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7204724409448819, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "04da3c0eafd699a461a497b0ee0e4469", "bug_code_uid": "57aca42fd42e6e3ca7d63c073bdba06c", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "c62815f658a9bc28a74108b5384b4063", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,m=0,c=0,a,b;\nscanf(\"%d\",&n);\nfor(int i=0;i<n;i++)\n{\nscanf(\"%d %d\",&a,&b);\nif(a>b) m++;\nelse (a<b) c++;\n}\nif(m>c) printf(\"Mishka\");\nelse if(m<c) printf(\"Chris\");\nelse printf(\"Friendship is magic!^^\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,m=0,c=0,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(a>b)\n\t\tm++;\n\t\telse if(a<b)\n\t\tc++;\n\t}\n\tif(m>c)\n\tprintf(\"Mishka\");\n\telse if(m<c)\n\tprintf(\"Chris\");\n\telse\n\tprintf(\"Friendship is magic!^^\");\n\treturn 0;\n}"}
{"similarity_score": 0.9980879541108987, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a4ae6632c4f648fd5180c1bcde3c858f", "bug_code_uid": "920c090fb1b65f6b917f448f1c53cf2c", "src_uid": "65efbc0a1ad82436100eea7a2378d4c2", "apr_id": "e220efe023bd82c5f8d4eddd0104f33e", "difficulty": 1300, "tags": ["dsu", "meet-in-the-middle", "number theory", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint i,x,y,a,n,m,erkek[5000],kiz[5000];\nint knt(){\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\tif(!erkek[i])\n\t\t\treturn 0;\n\n\tfor(i=0;i<m;i++)\n\t\tif(!kiz[i])\n\t\t\treturn 0;\n\t\n\treturn 1;\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tscanf(\"%d\",&x);\n\tfor(i=1;i<=x;i++){\n\t\tscanf(\"%d\",&a);\n\t\terkek[a]=1;\n\t}\n\tscanf(\"%d\",&y);\n\tfor(i=1;i<=y;i++){\n\t\tscanf(\"%d\",&a);\n\t\tkiz[a]=1;\n\t}\n\tfor(i=0;i<=m*n;i++){\n\t\tif(erkek[i%n] || kiz[i%m])\n\t\t\terkek[i%n] = kiz[i%m] = 1;\n\t\t\n\t\t\n\t\tif(knt()){\n\t\t\tputs(\"Yes\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"No\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint i,x,y,a,n,m,erkek[5000],kiz[5000];\nint knt(){\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\tif(!erkek[i])\n\t\t\treturn 0;\n\n\tfor(i=0;i<m;i++)\n\t\tif(!kiz[i])\n\t\t\treturn 0;\n\t\n\treturn 1;\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m);\n\tscanf(\"%d\",&x);\n\tfor(i=1;i<=x;i++){\n\t\tscanf(\"%d\",&a);\n\t\terkek[a]=1;\n\t}\n\tscanf(\"%d\",&y);\n\tfor(i=1;i<=y;i++){\n\t\tscanf(\"%d\",&a);\n\t\tkiz[a]=1;\n\t}\n\tfor(i=0;i<=2*m*n;i++){\n\t\tif(erkek[i%n] || kiz[i%m])\n\t\t\terkek[i%n] = kiz[i%m] = 1;\n\t\t\n\t\t\n\t\tif(knt()){\n\t\t\tputs(\"Yes\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"No\");\nreturn 0;\n}\n"}
{"similarity_score": 0.27335640138408307, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "bc3416c265f91f3f445910e3d3ed703c", "bug_code_uid": "a4420d502ea0d8d2933f6367d2a8cb23", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "5e7b97eff47e337f099ae55e1d5e938e", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define SUM(r,l) ((r-l+1)*(r+l)/2)\r\n\r\nvoid solve(){\r\n\tlong long int n, r, l;\r\n\tscanf(\"%lld\", &n);\r\n\tr = 1;\r\n\tl = 1;\r\n\tlong long int num = SUM(r, l);\r\n\twhile(n != num){\r\n\t\tif(num>n)\r\n\t\tl--;\r\n\t\telse\r\n\t\tr++;\r\n\t\tnum = SUM(r, l);\r\n\t}\r\n\tprintf(\"%d %d\", l, r);\r\n}\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d%*c\", &t);\r\n\twhile(t--){\r\n\t\tsolve();\r\n\t}\r\n  return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nvoid solve(){\r\n\tlong long int n;\r\n\tscanf(\"%lld\", &n);\r\n\tprintf(\"%lld %lld\\n\", -(n-1), n);\r\n}\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d%*c\", &t);\r\n\twhile(t--){\r\n\t\tsolve();\r\n\t}\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.9742489270386266, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e0c09361cd8bcd8341e6b4e31a6fb849", "bug_code_uid": "a37770313c78c3c9379aaa637c780242", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "5174e825f9a12dbe4b3a70467e2fa8a8", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{int x1,y1,x2,y2;\nscanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\nif(x2-x1==0||abs((y2-y1)/(x2-x1))==1||y2-y1==0)\n{\n   if(x2-x1==0)\n   {\n       printf(\"%d %d %d %d\",(x1+abs(y2-y1)),y1,(x1+abs(y2-y1)),y2);\n   }\n   else if(y2-y1==0)\n   {\n       printf(\"%d %d %d %d\",x1,(y1+abs(x2-x1)),x2,(y2+abs(x2-x1)));\n   }\n   else\n   {\n       printf(\"%d %d %d %d\",x1,y2,x2,y1);\n   }\n}\nelse\n    printf(\"-1\");\n    return 0;\n}\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{int x1,y1,x2,y2;\nscanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\nif(x2-x1==0||((abs((y2-y1)/(x2-x1))==1)&&(y2-y1)%(x2-x1)==0)||y2-y1==0)\n{\n   if(x2-x1==0)\n   {\n       printf(\"%d %d %d %d\",(x1+abs(y2-y1)),y1,(x1+abs(y2-y1)),y2);\n   }\n   else if(y2-y1==0)\n   {\n       printf(\"%d %d %d %d\",x1,(y1+abs(x2-x1)),x2,(y2+abs(x2-x1)));\n   }\n   else\n   {\n       printf(\"%d %d %d %d\",x1,y2,x2,y1);\n   }\n}\nelse\n    printf(\"-1\");\n    return 0;\n}\n\n\n\n\n\n\n"}
{"similarity_score": 0.9406657018813314, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "df876a6f2148e03ab56c2badcd074c8f", "bug_code_uid": "69e9cda3b892530016d691ea255800e2", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "ab1d1c512675d93c66947492545c3ce2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint func(int a){\r\n    return a%10;\r\n}\r\n\r\nint main() {\r\n  int k,t;\r\n   scanf(\"%d\",&t);\r\n   while(t--){\r\n        int counter=0, finalAnswer;\r\n        scanf(\"%d\",&k);\r\n        for(int i=1;;i++){\r\n            if (i/3 == 0){\r\n                counter++;\r\n                if(counter==k) break;\r\n                else continue;\r\n            }\r\n\r\n            if((i%3==0 || func(i)==3)){\r\n                continue;\r\n            }\r\n\r\n            counter++;\r\n\r\n            if(counter==k){\r\n                finalAnswer = i;\r\n                break;\r\n            }\r\n\r\n        }\r\n        printf(\"%d\\n\",finalAnswer);\r\n   }\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n\r\nint func(int a){\r\n    return a%10;\r\n}\r\n\r\nint main() {\r\n  int k,t;\r\n   scanf(\"%d\",&t);\r\n   while(t--){\r\n        int counter=0, finalAnswer;\r\n        scanf(\"%d\",&k);\r\n        for(int i=1;;i++){\r\n            if (i/3 == 0){\r\n                counter++;\r\n                if(counter==k) {\r\n                    finalAnswer = k;\r\n                    break;\r\n                }\r\n                else continue;\r\n            }\r\n\r\n            if((i%3==0 || func(i)==3)){\r\n                continue;\r\n            }\r\n\r\n            counter++;\r\n\r\n            if(counter==k){\r\n                finalAnswer = i;\r\n                break;\r\n            }\r\n\r\n        }\r\n        printf(\"%d\\n\",finalAnswer);\r\n   }\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.4860557768924303, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ad17a7d9c00b1c347d9a1cf94d4da445", "bug_code_uid": "bcc38cc7138418e8faad6a3d26079fab", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "967d4b20d8fb07c85b5af534eae8a1bf", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\nint n,i,c;\nscanf(\"%d\",&n);\nint a[n];\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&a[i]);\n}\n\nc=0;\nfor(i=0;i<n;i++)\n{\n    if(((n-a[i])%2)==0 && a[i]!=0)\n    c++;\n}\nprintf(\"%d\",c);\nreturn(0);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\nint n,i,c,sum=0;\nscanf(\"%d\",&n);\nint a[n];\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&a[i]);\n}\nfor(i=0;i<n;i++)\n{\n  sum=sum+a[i];\n}\nc=0;\nfor(i=0;i<n;i++)\n{\n    if(((sum-a[i])%2)==0 && a[i]!=0)\n    c++;\n}\nprintf(\"%d\",c);\nreturn(0);\n}\n"}
{"similarity_score": 0.983947119924457, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "911522f977c89c83c2bae723cb0dd45d", "bug_code_uid": "4384f4951950716f6f1942adf23729bc", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "ab0781919e64e7c27594aa81ccfde6e0", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n         int n,count=0;\n         scanf(\"%d\",&n);\n        \n         while(n!=0){\n              int a[3];      \n             for(int i=0;i<3;i++){\n            scanf(\"%d\",&a[i]);\n            }\n             int sum=0;\n            for(int i=0;i<3;i++){\n                   if(a[i]==1){\n                             sum++;\n                   }\n            }\n            if(sum>=2){\n                   count++;\n            }\n         }\n         printf(\"%d\\n\",count);\n  return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n         int n,count=0;\n         scanf(\"%d\",&n);\n        \n         while(n!=0){\n              int a[3];      \n             for(int i=0;i<3;i++){\n            scanf(\"%d\",&a[i]);\n            }\n             int sum=0;\n            for(int i=0;i<3;i++){\n                   if(a[i]==1){\n                             sum++;\n                   }\n            }\n            if(sum>=2){\n                   count++;\n            }\n            n--;\n         }\n         printf(\"%d\\n\",count);\n  return 0;\n}"}
{"similarity_score": 0.712882096069869, "equal_cnt": 18, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "966756bbf7adc4db4e3a53d584b487bf", "bug_code_uid": "ce288395e68539da851788517fecc3b7", "src_uid": "4d5457d9f053556c78c102f5c32f7542", "apr_id": "ce4426d9bc21f560679b707b5cf30712", "difficulty": 800, "tags": ["binary search", "greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    long long int i, j, k, t, n, h, arr[20005], tmp, a, b, count;\r\n    scanf(\"%lld\", &t);\r\n    while(t--){\r\n        scanf(\"%lld %lld\", &n, &h);\r\n        a = 0;\r\n        for(i = 0; i < n; i++){\r\n            scanf(\"%lld\", &arr[i]);\r\n            if(arr[i] > a){\r\n                a = arr[i];\r\n            }\r\n        }\r\n        b = 0;\r\n        for(i = 0; i < n; i++){\r\n            if(arr[i] != a && arr[i] > b)b = arr[i];\r\n        }\r\n        tmp = 0;\r\n        count = 0;\r\n        while(h > 0){\r\n            if(tmp == 0){\r\n                h = h - a;\r\n                tmp = 1;\r\n                count++;\r\n                continue;\r\n            } else {\r\n                h = h - b;\r\n                count++;\r\n                tmp = 0;\r\n            }\r\n        }\r\n        printf(\"%lld\\n\", count);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    long long int i, j, k, t, n, h, arr[20005], tmp, a, b, count, c, d, e;\r\n    scanf(\"%lld\", &t);\r\n    while(t--){\r\n        scanf(\"%lld %lld\", &n, &h);\r\n        a = 0;\r\n        for(i = 0; i < n; i++){\r\n            scanf(\"%lld\", &arr[i]);\r\n            if(arr[i] > a){\r\n                a = arr[i];\r\n                tmp = i;\r\n            }\r\n        }\r\n        b = 0;\r\n        for(i = 0; i < n; i++){\r\n            if(i != tmp && arr[i] > b)b = arr[i];\r\n            //if(arr[i] != a && arr[i] > b)b = arr[i];\r\n        }\r\n        tmp = 0;\r\n        count = 0;\r\n        c = a + b;\r\n        d = h/c;\r\n        e = h%c;\r\n        if(h <= a){\r\n            count = 1;\r\n        } else {\r\n            count = 2 * d;\r\n            if(e == 0){\r\n                //hooha\r\n            }else if(e != 0 && e <= a){\r\n                count++;\r\n            } else {\r\n                count = count+2;\r\n            }\r\n        }\r\n\r\n\r\n        printf(\"%lld\\n\", count);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9781094527363184, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b978db1d86cbe4f334ba528bae267be3", "bug_code_uid": "a5c289c3a7a85979ebb96691e498706a", "src_uid": "98c08a3b5e5b5bb78804ff797ba24d87", "apr_id": "272ade19b7181adfcd07a05e8260fb31", "difficulty": 1000, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar* beautifullify(char *str, int i) {\n\tint len = strlen(str);\n\tfor (int i=0; i<len; i++) {\n\t\tif (str[i] == str[i+1] && (str[i] != '?' && str[i+1] != '?')) {\n\t\t\treturn \"-1\";\n\t\t}\n\t\t\n\t\tif (str[i] == '?') {\n\t\t\tif (str[i+1] == '?') {\n\t\t\t\tstr[i] = str[i-1] + 1;\n\t\t\t} else if (str[i-1] == 'a') {\n\t\t\t\tif (str[i+1] == 'b') {\n\t\t\t\t\tstr[i] = 'c';\n\t\t\t\t} else if (str[i+1] == 'c') {\n\t\t\t\t\tstr[i] = 'b';\n\t\t\t\t} else {\n\t\t\t\t\tstr[i] = 'b';\n\t\t\t\t}\n\t\t\t} else if (str[i-1] == 'b') {\n\t\t\t\tif (str[i+1] == 'b') {\n\t\t\t\t\tstr[i] = 'a';\n\t\t\t\t} else if (str[i+1] == 'c') {\n\t\t\t\t\tstr[i] = 'a';\n\t\t\t\t} else {\n\t\t\t\t\tstr[i] = 'c';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (str[i+1] == 'b') {\n\t\t\t\t\tstr[i] = 'a';\n\t\t\t\t} else if (str[i+1] == 'c') {\n\t\t\t\t\tstr[i] = 'a';\n\t\t\t\t} else {\n\t\t\t\t\tstr[i] = 'b';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn str;\n}\nint main() {\n\tint t;\n\tchar str[100005];\n\tscanf(\"%d\", &t);\n\t\n\tfor (int i=0; i<t; i++) {\n\t\tscanf(\" %s\", str);\n\t\tprintf(\"%s\\n\", beautifullify(str, 0));\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar* beautifullify(char *str, int i) {\n\tchar c[3] = {'a', 'b', 'c'};\n\tint len = strlen(str);\n\tfor (int i=0; i<len; i++) {\n\t\tif (str[i] == str[i+1] && (str[i] != '?' && str[i+1] != '?')) {\n\t\t\treturn \"-1\";\n\t\t}\n\t\t\n\t\tif (str[i] == '?') {\n\t\t\tif (str[i+1] == '?') {\n\t\t\t\tstr[i] = c[((str[i-1] + 1) % 97)%3];\n\t\t\t} else if (str[i-1] == 'a') {\n\t\t\t\tif (str[i+1] == 'b') {\n\t\t\t\t\tstr[i] = 'c';\n\t\t\t\t} else if (str[i+1] == 'c') {\n\t\t\t\t\tstr[i] = 'b';\n\t\t\t\t} else {\n\t\t\t\t\tstr[i] = 'b';\n\t\t\t\t}\n\t\t\t} else if (str[i-1] == 'b') {\n\t\t\t\tif (str[i+1] == 'b') {\n\t\t\t\t\tstr[i] = 'a';\n\t\t\t\t} else if (str[i+1] == 'c') {\n\t\t\t\t\tstr[i] = 'a';\n\t\t\t\t} else {\n\t\t\t\t\tstr[i] = 'c';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (str[i+1] == 'b') {\n\t\t\t\t\tstr[i] = 'a';\n\t\t\t\t} else if (str[i+1] == 'c') {\n\t\t\t\t\tstr[i] = 'a';\n\t\t\t\t} else {\n\t\t\t\t\tstr[i] = 'b';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn str;\n}\nint main() {\n\tint t;\n\tchar str[100005];\n\tscanf(\"%d\", &t);\n\t\n\tfor (int i=0; i<t; i++) {\n\t\tscanf(\" %s\", str);\n\t\tprintf(\"%s\\n\", beautifullify(str, 0));\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.8539518900343642, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "4a4336d0d03001d2f45eb16b8cdaf1db", "bug_code_uid": "a88e9da5287a73025d2b28d8ff9f8c8c", "src_uid": "206eb67987088843ef42923b0c3939d4", "apr_id": "a4ad88c15fd1861c8f08f725f019da8c", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <setjmp.h>\n\nint found = 0;\njmp_buf buf;\n\nvoid add_digit(int current, int mod, int times, int limit) {\n\tif (times >= limit) {\n\t\tfound = 1;\n\t\tprintf(\"%d\\n\", current);\n\t\tlongjmp(buf, 1);\n\t\treturn;\n\t}\n\tint k;\n\tfor (k = 0; k < 10; k++) {\n\t\tif ((current * 10 + k) % mod == 0) {\n\t\t\tadd_digit(current * 10 + k, mod, times + 1, limit);\n\t\t}\n\t}\n\tprintf(\"%d\\n\", -1);\n}\n\nint main() {\n\tint a, b, n;\n\tscanf(\"%d %d %d\", &a, &b, &n);\n\tif (!setjmp(buf)) {\n\t\tadd_digit(a, b, 0, n);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <setjmp.h>\n\nint found = 0;\njmp_buf buf;\nchar digits[100050] = {'\\0'};\nint p = 0;\nint a;\n\nvoid add_digit(int current, int mod, int times, int limit) {\n\tcurrent = current % mod;\n\tif (times >= limit) {\n\t\tfound = 1;\n\t\tprintf(\"%d\", a);\n\t\tprintf(\"%s\\n\", digits);\n\t\tlongjmp(buf, 1);\n\t\treturn;\n\t}\n\tint k;\n\tfor (k = 0; k < 10; k++) {\n\t\tif ((current * 10 + k) % mod == 0) {\n\t\t\tdigits[p] = '0' + k;\n\t\t\tp++;\n\t\t\tadd_digit(current * 10 + k, mod, times + 1, limit);\n\t\t\tdigits[p] = '\\0';\n\t\t\tp--;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", -1);\n}\n\nint main() {\n\tint b, n;\n\tscanf(\"%d %d %d\", &a, &b, &n);\n\tif (!setjmp(buf)) {\n\t\tadd_digit(a, b, 0, n);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8426966292134831, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ee7dfe3782a4a5aa733dc56bc8786f4f", "bug_code_uid": "023d82e7546207492d3624d90ea918c4", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "abedcf406d04992fc0c3c78c3c99a048", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint i,t;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tint n,x,j;\n\t\tscanf(\"%d%d\",&n,&x);\n\t\tif((n-2)%x==0)\n\t\tj=((n-2)/x)+1;\n\t\telse\n\t\tj=((n-2)/x)+2;\n\t\tprintf(\"%d\\n\",j);\n\t\t\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint i,t;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tint n,x,j;\n\t\tscanf(\"%d%d\",&n,&x);\n\t\tif((n-2)%x==0)\n\t\t{\n\t\t\tif(n<=2)\n\t\t\tj=1;\n\t\t\telse\n\t\t\tj=((n-2)/x)+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(n<=2)\n\t\t\tj=1;\n\t\t\telse\n\t\t\tj=((n-2)/x)+2;\n\t\t}\n\t\tprintf(\"%d\\n\",j);\n\t\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9987405541561712, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c3de44e26f48c03bc21a7d16519414c0", "bug_code_uid": "897c3b1c7711aefafab04ea728354825", "src_uid": "3bd5a228ed5faf997956570f96becd73", "apr_id": "7528b9ae4cde54ace9f595a75cc7241e", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\ntypedef long long unsigned llu;\ntypedef unsigned u;\nllu A[555][555];\nint main()\n{\n\tu n,i,j,k,I=0,J=0;\n\tllu s=0llu,S=0llu;\n\tscanf(\"%u\",&n);\n\tfor(i=-1;++i<n;s=0llu)\n\t{\n\t\tfor(k=j=-1;++j<n;s+=A[i][j])\n\t\t{\n\t\t\tscanf(\"%I64u\",A[i]+j);\n\t\t\tif(A[i][j]==0)\n\t\t\t{\n\t\t\t\tI=i;J=j;\n\t\t\t\tk=0;\n\t\t\t}\n\t\t}\n\t\tif(k)S=s;\n\t}\n\tfor(j=-1;++j<n;s+=A[I][j]);\n\tif(s>=S){printf(\"-1\\n\");return 0;}\n\tA[I][J]=S-s;s=0llu;\n\tfor(i=-1;++i<n;s=0llu)\n\t{\n\t\tfor(j=-1;++j<n;s+=A[i][j]);\n\t\tif(s!=S){printf(\"-1\\n\");return 0;}\n\t}\n\tfor(i=-1;++i<n;s=0llu)\n\t{\n\t\tfor(j=-1;++j<n;s+=A[j][i]);\n\t\tif(s!=S){printf(\"-1\\n\");return 0;}\n\t}\n\tfor(i=-1;++i<n;s+=A[i][i]);\n\tif(s!=S){printf(\"-1\\n\");return 0;}\n\ts=0;\n\tfor(i=-1;++i<n;s+=A[i][n-i-1]);\n\tif(s!=S){printf(\"-1\\n\");return 0;}\n\tprintf(\"%I64u\\n\",A[I][J]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\ntypedef long long unsigned llu;\ntypedef unsigned u;\nllu A[555][555];\nint main()\n{\n\tu n,i,j,k,I=0,J=0;\n\tllu s=0llu,S=1llu;\n\tscanf(\"%u\",&n);\n\tfor(i=-1;++i<n;s=0llu)\n\t{\n\t\tfor(k=j=-1;++j<n;s+=A[i][j])\n\t\t{\n\t\t\tscanf(\"%I64u\",A[i]+j);\n\t\t\tif(A[i][j]==0)\n\t\t\t{\n\t\t\t\tI=i;J=j;\n\t\t\t\tk=0;\n\t\t\t}\n\t\t}\n\t\tif(k)S=s;\n\t}\n\tfor(j=-1;++j<n;s+=A[I][j]);\n\tif(s>=S){printf(\"-1\\n\");return 0;}\n\tA[I][J]=S-s;s=0llu;\n\tfor(i=-1;++i<n;s=0llu)\n\t{\n\t\tfor(j=-1;++j<n;s+=A[i][j]);\n\t\tif(s!=S){printf(\"-1\\n\");return 0;}\n\t}\n\tfor(i=-1;++i<n;s=0llu)\n\t{\n\t\tfor(j=-1;++j<n;s+=A[j][i]);\n\t\tif(s!=S){printf(\"-1\\n\");return 0;}\n\t}\n\tfor(i=-1;++i<n;s+=A[i][i]);\n\tif(s!=S){printf(\"-1\\n\");return 0;}\n\ts=0;\n\tfor(i=-1;++i<n;s+=A[i][n-i-1]);\n\tif(s!=S){printf(\"-1\\n\");return 0;}\n\tprintf(\"%I64u\\n\",A[I][J]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.998468606431853, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "940374a67ae662ef9d0d6978ce3d90c5", "bug_code_uid": "49930125f84f0f5178f87db7dc94d4ba", "src_uid": "b894e16e8c00f8d97fde4a104466b3ef", "apr_id": "b98eb48bc779ff6bce8dabfea3c27c55", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int i;\r\n    int j;\r\n    scanf(\"%d\", &i);\r\n    for(j = 1; j <= i; j++){\r\n        int length;\r\n        scanf(\"%d\", &length);\r\n        char domino[length];\r\n        scanf(\"%s\", domino);\r\n        length = length - 1;\r\n        int c = 0;\r\n        while(c <= length){\r\n            if(domino[c] == 'U'){\r\n                domino[c] = 'D';\r\n                c = c+1;\r\n            } else if(domino[c] == 'D'){\r\n                domino[c] = 'U';\r\n                c = c+1;\r\n            } else {\r\n                c = c+2;\r\n            }\r\n        }\r\n        printf(\"% \\n\", domino);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n \r\nint main()\r\n{\r\n    int i;\r\n    int j;\r\n    scanf(\"%d\", &i);\r\n    for(j = 1; j <= i; j++){\r\n        int length;\r\n        scanf(\"%d\", &length);\r\n        char domino[length];\r\n        scanf(\"%s\", domino);\r\n        length = length - 1;\r\n        int c = 0;\r\n        while(c <= length){\r\n            if(domino[c] == 'U'){\r\n                domino[c] = 'D';\r\n                c = c+1;\r\n            } else if(domino[c] == 'D'){\r\n                domino[c] = 'U';\r\n                c = c+1;\r\n            } else {\r\n                c = c+2;\r\n            }\r\n        }\r\n        printf(\"%s \\n\", domino);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.5828571428571429, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "4c51aa3d9f306cd1a53dfb8f08e0dd46", "bug_code_uid": "a9f8c4d57f2b8adaff7df00631b6d2b1", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "21aa52ddcbd2f72ec42bebdd3f5148ef", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n  int i,t,k;\n  scanf(\"%d\",&t);\n  int a[t],b[t];\n  for(i=0;i<t;i++)\n  {\n      scanf(\"%d%d\",&a[i],&b[i]);\n      k=0;\n      while((a[i]%b[i])!=0)\n      { a[i]+=1;\n        k+=1;\n      }\n      printf(\"%d\",k);\n  }\n   return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n  int i,t,k;\n  scanf(\"%d\",&t);\n  int a[t],b[t];\n  for(i=0;i<t;i++)\n  {\n      scanf(\"%d%d\",&a[i],&b[i]);\n      k=a[i]/b[i];\n      if(a[i]%b[i]==0)\n        printf(\"0\\n\");\n      else\n       printf(\"%d\\n\",(k+1)*b[i]-a[i]);\n  }\n   return 0;;\n}"}
{"similarity_score": 0.9164265129682997, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "a094c1f4d30bb9078c51351be798432c", "bug_code_uid": "e80f0f7d46455fab002bb1caf88d3132", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "816417ca36cc4ce4ff840db75e7cf8b6", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k,n,l=0,m=0,p=0,y=0,x;\n    int a[101],b[101],c[101],d;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&x);\n    for(i=0;i<x;i++)\n   { scanf(\"%d\",&a[i]);}\n   scanf(\"%d\",&d);\n    for(i=0;i<d;i++)\n          {\n           scanf(\"%d\",&b[i]);\n            f++;\n          }\n    for(j=1;j<=n;j++)\n    {\n        l=0;\n        for(i=0;i<n;i++)\n        {\n            if(a[i]==j)\n         {\n            l++;\n\n         }\n        }\n        if(l==0)\n            {\n                c[p]=j;\n                p++;\n            }\n\n    }\n\n    for(k=0;k<p;k++)\n    {\n        y=0;\n        for(i=0;i<x;i++)\n        {\n            if(c[k]==b[i])\n                y++;\n\n\n        }\n        if(y==0)\n        {\n            m++;\n        }\n\n    }\n\n\n\n     if(p==0 || m==0)\n    {\n        printf(\"I become the guy.\");\n    }\n    else\n        printf(\"Oh, my keyboard!\");\n\n\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,k,n,l=0,m=0,p=0,y=0,x;\n    int a[101],b[101],c[101],d;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&d);\n    for(i=0;i<d;i++)\n       {\n           scanf(\"%d\",&a[i]);\n\n       }\n       scanf(\"%d\",&x);\n    for(i=0;i<x;i++)\n          {\n           scanf(\"%d\",&b[i]);\n\n          }\n    for(j=1;j<=n;j++)\n    {\n        l=0;\n        for(i=0;i<d;i++)\n        {\n            if(a[i]==j)\n         {\n            l++;\n\n         }\n        }\n        if(l==0)\n            {\n                c[p]=j;\n                p++;\n            }\n\n    }\n\n    for(k=0;k<p;k++)\n    {\n        y=0;\n        for(i=0;i<x;i++)\n        {\n            if(c[k]==b[i])\n                y++;\n\n\n        }\n        if(y==0)\n        {\n            m++;\n        }\n\n    }\n\n\n     if(p==0 || m==0)\n    {\n        printf(\"I become the guy.\");\n    }\n    else\n        printf(\"Oh, my keyboard!\");\n\n\n\n}"}
{"similarity_score": 0.5875096376252892, "equal_cnt": 24, "replace_cnt": 12, "delete_cnt": 5, "insert_cnt": 7, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "b9cf476664c480c758e51ab3038107c3", "bug_code_uid": "a51810a9f78d55dae6ca7f8c3f58ad0f", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "57c256c20ae60d0fa9711f30bb90c45b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int tNumber = 1; tNumber <= t; tNumber++) {\r\n        long long a, b, c;\r\n        scanf(\"%lld %lld %lld\", &a, &b, &c);\r\n        long long people = 2 * fabs(a - b);\r\n        long long d;\r\n        if (a >= people || b >= people || c >= people)\r\n            d=-1;\r\n        else if (d <= people)\r\n            d = c + people / 2;\r\n        else if (d > people)\r\n            d = c - people / 2;\r\n\r\n        printf(\"%lld\", d);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n \r\n \r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n \r\n    for (int tNumber = 1; tNumber <= t; tNumber++) {\r\n        int a, b, c;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n \r\n        int personNumber;\r\n        int People = 2 * abs(a - b);\r\n        if (a > People || b > People || c > People)\r\n            personNumber = -1;\r\n        else if (c < People / 2)\r\n            personNumber = c + People / 2;\r\n        else if (c > People / 2)\r\n            personNumber = c - People / 2;\r\n        else\r\n            personNumber = People;\r\n \r\n        if (personNumber > People || personNumber == a || personNumber == b)\r\n            personNumber = -1;\r\n \r\n        printf(\"%d\\n\", personNumber);\r\n    }\r\n \r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9966193373901284, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1ab220dd397bd99e9797450f7a296153", "bug_code_uid": "1de1cfb92fda720d4b14c135d86a75c0", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "13869fb43c22838a8be852b1189582ce", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n, i, j, sum = 0, temp, big = 0, small = 8878876, b = 0, s = 0 ;\n    scanf(\"%d\", &n);\n    int x[n];\n\n    for(i = 0; i < n; i++){\n       scanf(\"%d\",&x[i]);\n    }\n\n    for(i = 0; i < n; i++){\n        if(big < x[i]){\n            big = x[i];\n            b = i;\n        }\n        else if(small >= x[i]){\n            small = x[i];\n            s = i;\n        }\n    }\n\n    //printf(\"big = %d \\nsmall = %d\\n\", b, s);\n    if(b < s){\n        sum = sum +(n-1) - s;\n        //printf(\" sum = %d\\n\", sum);\n        sum = sum + b;\n        //printf(\"  after add b sum = %d\\n\", sum);\n    }\n    else{\n        sum = sum + b;\n        sum = sum + (n-2) - s;\n    }\n    printf(\"%d\\n\", sum);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n, i, j, sum = 0, temp, big = 0, small = 8878876, b = 0, s = 0 ;\n    scanf(\"%d\", &n);\n    int x[n];\n\n    for(i = 0; i < n; i++){\n       scanf(\"%d\",&x[i]);\n    }\n\n    for(i = 0; i < n; i++){\n        if(big < x[i]){\n            big = x[i];\n            b = i;\n        }\n        if(small >= x[i]){\n            small = x[i];\n            s = i;\n        }\n    }\n\n    //printf(\"big = %d \\nsmall = %d\\n\", b, s);\n    if(b < s){\n        sum = sum +(n-1) - s;\n        //printf(\" sum = %d\\n\", sum);\n        sum = sum + b;\n        //printf(\"  after add b sum = %d\\n\", sum);\n    }\n    else{\n        sum = sum + b;\n        sum = sum + (n-2) - s;\n    }\n    printf(\"%d\\n\", sum);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8931439159975293, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "4420519142d5feaccc25ba309a9fd1c4", "bug_code_uid": "ccb6a7ac0a4b44b38790aef1ab2e473c", "src_uid": "4f3bec9c36d0ac2fdb8041469133458c", "apr_id": "8f6aeafa6505214408c8ee436195dca4", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define SIZE 8\n\nchar board[SIZE][SIZE+1];\n\nint main() {\n    int n, i, j;\n    int k1r, k1c, k2r, k2c;\n    scanf(\"%d\", &n);\n    while (n--) {\n        for (i = 0; i < SIZE; i++) {\n            scanf(\"%s\", board[i]);\n        }\n        k1r = -1;\n        for (i = 0; i < SIZE; i++) {\n            for (j = 0; j < SIZE; j++) {\n                if (board[i][j] == 'K') {\n                    if (k1r == -1) {\n                        k1r = i, k1c = j;\n                    } else {\n                        k2r = i, k2c = j;\n                    }\n                }\n            }\n        }\n        k1r %= 4, k1c %= 4, k2r %= 4, k2c %= 4;\n        if (k1r<k1c) k1r+=2,k1c-=2;\n        if (k2r<k2c) k2r+=2,k2c-=2;\n        if (k1r == k2r && k1c == k2c) {\n            printf(\"YES\\n\");\n        } else {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define SIZE 8\n\nchar board[SIZE][SIZE+1];\n\nint main() {\n    int n, i, j;\n    int k1r, k1c, k2r, k2c;\n    scanf(\"%d\", &n);\n    while (n--) {\n        for (i = 0; i < SIZE; i++) {\n            scanf(\"%s\", board[i]);\n        }\n        k1r = -1;\n        for (i = 0; i < SIZE; i++) {\n            for (j = 0; j < SIZE; j++) {\n                if (board[i][j] == 'K') {\n                    if (k1r == -1) {\n                        k1r = i, k1c = j;\n                    } else {\n                        k2r = i, k2c = j;\n                    }\n                }\n            }\n        }\n        if ((k1r - k2r) %4 == 0 && (k1c - k2c) % 4 == 0) {\n            printf(\"YES\\n\");\n        } else {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9648562300319489, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7a07de0e64e6483a83652b1f46d925e4", "bug_code_uid": "f6e0eb738bb391b3a6599ebe9602050c", "src_uid": "b4b69320c6040d2d264ac32e9ba5196f", "apr_id": "45d640170b5f71e8a3428d2bc0c61db0", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int fun(int n){\n    if(n==1){\n        return 0;\n    }\n\n    long long int smallAns=fun(n-2);\n    return smallAns+4*(n/2)*(n-1);\n\n}\n\nint main(){\n    int t=0;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n=0;\n        scanf(\"%d\",&n);\n        printf(\"%lld\\n\",fun(n));\n\n    }\n}", "fixed": "#include<stdio.h>\nlong long int fun(long long int n){\n    if(n==1){\n        return 0;\n    }\n\n    long long int smallAns=fun(n-2);\n    return smallAns+4*(n/2)*(n-1);\n\n}\n\nint main(){\n    int t=0;\n    scanf(\"%d\",&t);\n    while(t--){\n        long long int n=0;\n        scanf(\"%lld\",&n);\n        printf(\"%lld\\n\",fun(n));\n\n    }\n}"}
{"similarity_score": 0.6139630390143738, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "170e3d9052a6af65b8b556cfa6004569", "bug_code_uid": "dc20f64dd736163546e57f44ba95f2d3", "src_uid": "162fa942bc6eeb5164b19598da2f8bef", "apr_id": "8d18c8ce6e06d64fe7b21e11036a7ba4", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main(){\n\tint i, j, x, y, n, check = 1;\n\tscanf(\"%d\", &n);\n\tlong long a[n][2];\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%I64d%I64d\", &a[i][0], &a[i][1]);\n\t}\n\t\n\tfor(i = 1; i < n; i++){\n\t\tif(a[i][0] < a[i][1]){\n\t\t\tx = a[i][0];\n\t\t}else{\n\t\t\tx = a[i][1];\n\t\t}\n\t\tif(a[i - 1][0] > a[i - 1][1]){\n\t\t\ty = a[i - 1][0];\n\t\t}else{\n\t\t\ty = a[i - 1][1];\n\t\t}\n\t\tif(x > y){\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(i == n){\n\t\tprintf(\"YES\");\n\t}else{\n\t\tprintf(\"NO\");\n\t}\n}", "fixed": "\n#include<stdio.h>\nint main(){\n\tint i, j, x = 10000000000, n, check = 1;\n\tscanf(\"%d\", &n);\n\tlong long a[n][2];\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%I64d%I64d\", &a[i][0], &a[i][1]);\n\t}\n\t\n\tfor(i = 0; i < n; i++){\n\t\tif(a[i][0] < a[i][1]){\n\t\t\tif(x < a[i][0]){\n\t\t\t\tbreak;\n\t\t\t} else if(x >= a[i][1]){\n\t\t\t\tx = a[i][1];\n\t\t\t} else {\n\t\t\t\tx = a[i][0];\n\t\t\t}\n\t\t}else{\n\t\t\tif(x < a[i][1]){\n\t\t\t\tbreak;\n\t\t\t} else if(x >= a[i][0]){\n\t\t\t\tx = a[i][0];\n\t\t\t} else {\n\t\t\t\tx = a[i][1];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(i == n){\n\t\tprintf(\"YES\");\n\t}else{\n\t\tprintf(\"NO\");\n\t}\n}"}
{"similarity_score": 0.712784588441331, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "caa440a7716de02bff336b1642002415", "bug_code_uid": "50d2699fe5e891c2ba0addcf93b41748", "src_uid": "4671380d70876044e0ec7a9cab5e25ae", "apr_id": "c709b70c96bf08a8192457675e93e24b", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#include <set>\nusing namespace std;\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],b[n],v[n],num=0;\n    memset(a,0,sizeof(a));\n    memset(b,0,sizeof(b));\n    memset(v,0,sizeof(v));\n    for(int i=0; i<n; i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        a[i]=x;\n        b[x]++;\n        if(b[x]==1) num++;\n    }\n    int ans=0;\n    for(int i=0; i<n; i++)\n    {\n        b[a[i]]--;\n        if(!b[a[i]]) num--;\n        if(!v[a[i]])\n        {\n            ans+=num;\n            v[a[i]]=1;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\ntypedef long long ll;\nll a[100010],b[100010],v[100010],num;\nint main()\n{\n    ll n;\n    scanf(\"%lld\",&n);\n    for(ll i=0; i<n; i++)\n    {\n        ll x;\n        scanf(\"%lld\",&x);\n        a[i]=x;\n        b[x]++;\n        if(b[x]==1) num++;\n    }\n    ll ans=0;\n    for(ll i=0; i<n; i++)\n    {\n        b[a[i]]--;\n        if(!b[a[i]]) num--;\n        if(!v[a[i]])\n        {\n            ans+=num;\n            v[a[i]]=1;\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.8972296693476318, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "3d133d6f86f7f57666765ea0d0d12f22", "bug_code_uid": "2322106114c6006a52425035c8ed0745", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "822140af38b812704f9636ef062a0f70", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid merge(int* a,int* c,int* b,int* d,int s,int e){\n\tif(s>=e)\n\t\treturn ;\n\tmerge(a,c,b,d,s,(s+e)/2);\n\tmerge(a,c,b,d,((s+e)/2)+1,e);\n\tint i=s,j=((s+e)/2)+1,n=s;\n\twhile(i<=(s+e)/2 || j<=e){\n\t\tif(a[i]<=a[j] && i<=(s+e)/2){\n\t\t\tc[n] = a[i];\n\t\t\td[n] = b[i];\n\t\t\ti++;\n\t\t\tn++;\n\t\t}\n\t\telse{\n\t\t\tif(a[i]>=a[j] && j<=e){\n\t\t\t\tc[n] = a[j];\n\t\t\t\td[n] = b[j];\n\t\t\t\tj++;\n\t\t\t\tn++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(i>(s+e)/2){\n\t\t\t\t\twhile(j<=e){\n\t\t\t\t\t\tc[n] = a[j];\n\t\t\t\t\t\td[n] = b[i];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\twhile(i<=(s+e)/2){\n\t\t\t\t\t\tc[n] = a[i];\n\t\t\t\t\t\td[n] = b[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=s;i<=e;i++){\n\t\ta[i] = c[i];\n\t\tb[i] = d[i];\n\t}\n\treturn ;\n}\nint main(){\n\tint i,j,k,l,n,m,a[5000],b[5000],c[5000],d[5000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\tint max=0,rem;\n\tmerge(a,c,b,d,0,n-1);\n\tint now;\n\tif(a[0]<b[0])\n\t\tnow = a[0];\n\telse\n\t\tnow = b[0];\n\tfor(i=1;i<n;i++){\n\t\tif(b[i]>=now)\n\t\t\tnow = b[i];\n\t\telse\n\t\t\tnow = a[i];\n\t}\n\tprintf(\"%d\\n\",now);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nvoid merge(int* a,int* c,int* b,int* d,int s,int e){\n\tif(s>=e)\n\t\treturn ;\n\tmerge(a,c,b,d,s,(s+e)/2);\n\tmerge(a,c,b,d,((s+e)/2)+1,e);\n\tint i=s,j=((s+e)/2)+1,n=s;\n\twhile(i<=(s+e)/2 || j<=e){\n\t\tif(a[i]<a[j] && i<=(s+e)/2){\n\t\t\tc[n] = a[i];\n\t\t\td[n] = b[i];\n\t\t\ti++;\n\t\t\tn++;\n\t\t}\n\t\telse{\n\t\t\tif(a[i]>a[j] && j<=e){\n\t\t\t\tc[n] = a[j];\n\t\t\t\td[n] = b[j];\n\t\t\t\tj++;\n\t\t\t\tn++;\n\t\t\t}\n\t\t\telse if(a[i]==a[j] && i<=(s+e)/2 && j<=e){\n\t\t\t\tif(b[i]<b[j]){\n\t\t\t\t\tc[n] = a[i];\n\t\t\t\t\td[n] = b[i];\n\t\t\t\t\ti++;\n\t\t\t\t\tn++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tc[n] = a[j];\n\t\t\t\t\td[n] = b[j];\n\t\t\t\t\tj++;\n\t\t\t\t\tn++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(i>(s+e)/2){\n\t\t\t\t\twhile(j<=e){\n\t\t\t\t\t\tc[n] = a[j];\n\t\t\t\t\t\td[n] = b[j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\twhile(i<=(s+e)/2){\n\t\t\t\t\t\tc[n] = a[i];\n\t\t\t\t\t\td[n] = b[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=s;i<=e;i++){\n\t\ta[i] = c[i];\n\t\tb[i] = d[i];\n\t}\n\treturn ;\n}\nint main(){\n\tint i,j,k,l,n,m,a[5000],b[5000],c[5000],d[5000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\tint max=0,rem;\n\tmerge(a,c,b,d,0,n-1);\n\tint now;\n\tif(a[0]<b[0])\n\t\tnow = a[0];\n\telse\n\t\tnow = b[0];\n\tfor(i=1;i<n;i++){\n\t\tif(b[i]>=now)\n\t\t\tnow = b[i];\n\t\telse\n\t\t\tnow = a[i];\n\t}\n\tprintf(\"%d\\n\",now);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9151014274981217, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "e81d104ec218fddf710e38aec44e883a", "bug_code_uid": "81529d3f296ca11c473df4fd1aa56a76", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "30c02ff56801e0ad240c640b7b6f1ce5", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint prefix[1000001];\nint suffix[1000001];\nint hash[1000001];\nint n;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tint i,j,val;\n\tprefix[0]=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t \tscanf(\"%d\",&prefix[i]);\n\t \tprefix[i]+=prefix[i-1];\n\t}\n\tval=prefix[n]/3;\n\tif(3*val!=prefix[n]||n<3)\n\t {\n\t \tprintf(\"0\\n\");\n\t \treturn 0;\n\t }\n\tsuffix[n+1]=0;\n\tfor(i=n;i>=1;i--)\n\t{\n\t\tsuffix[i]=suffix[i+1]+prefix[i]-prefix[i-1];\n\t}\n\tint count=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(prefix[i]==val)\n\t\t {\n\t\t \tcount++;\n\t\t }\n\t\t hash[i]=count;\n\t}\n\tcount=0;\n\tfor(i=n;i>=3;i--)\n\t{\n\t\tif(suffix[i]==val)\n\t\t count+=hash[i-2];\n\t}\n\tprintf(\"%d\\n\",count);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nlong long int prefix[1000001];\nlong long int suffix[1000001];\nint hash[1000001];\nint n;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tint i,j;\n\tlong long int val;\n\tprefix[0]=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t \tscanf(\"%I64d\",&prefix[i]);\n\t \tprefix[i]+=prefix[i-1];\n\t}\n\tval=prefix[n]/3;\n\tif(3*val!=prefix[n]||n<3)\n\t {\n\t \tprintf(\"0\\n\");\n\t \treturn 0;\n\t }\n\tsuffix[n+1]=0;\n\tfor(i=n;i>=1;i--)\n\t{\n\t\tsuffix[i]=suffix[i+1]+prefix[i]-prefix[i-1];\n\t}\n\tint count=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(prefix[i]==val)\n\t\t {\n\t\t \tcount++;\n\t\t }\n\t\t hash[i]=count;\n\t}\n\tlong long int counts=0;\n\tfor(i=n;i>=3;i--)\n\t{\n\t\tif(suffix[i]==val)\n\t\t counts+=hash[i-2];\n\t}\n\tprintf(\"%I64d\\n\",counts);\n}\n"}
{"similarity_score": 0.6833073322932918, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "cceada49c02366fdf68d8bd2537e5dc1", "bug_code_uid": "58b21e8e0ef61fcc71b2b671ae0bf87f", "src_uid": "3ec1b7027f487181dbdfb12f295f11ae", "apr_id": "16f85a699a15e95d713e57e2349fe26a", "difficulty": 900, "tags": ["brute force", "dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    \n    while(t--){\n    long long int n;\n    scanf(\"%lld\",&n);\n    \n    if(n==1) printf(\"NO\\n\");\n    else if(n%2020==0){\n    printf(\"YES\\n\");\n    }\n    else if(n%2020==1){\n    printf(\"YES\\n\");\n    }\n    else if(n%2021==0){\n    printf(\"YES\\n\");\n    }\n    else printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,b=0;\n    scanf(\"%d\",&t);\n    \n    while(t--){\n    long long int n,i,j,sum=0,c=0;\n    scanf(\"%lld\",&n);\n    \n    int mod=n%2020;\n    int div=n/2020;\n    if(mod<=div){\n    printf(\"YES\\n\");\n    }\n    else printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.996956786366403, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "83e1e4a0ddcdcdfe1fd5ae73a6d544b2", "bug_code_uid": "95b4d6856cb4a5bbfa66d722bf979fbc", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "2d1c4db7b40665148a3c785ff86a8c4c", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (){\n\tint n, i, j;\n\tscanf(\"%d\", &n);\n\tint arr[n][2];\n\tfor(i = 0; i < n;i++){\n\t\tfor (j = 0; j < 2; j++)\n\t\t{\n\t\t\tscanf(\"%d\",&arr[i][j]);\n\t\t}\n\t\tif(arr[i][0] == 1){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse if(arr[i][1] == 1 && arr[i][0] ==2){\n\t\t\tprintf(\"1\\n\");\n\t\t}\n\t\telse if(arr[i][1] == 1 && arr[i][0] > 2){\n\t\t\tprintf(\"2\\n\")\n\t\t}\n\t\telse if(arr[i][0]==2){\n\t\t\tprintf(\"%d\\n\", arr[i][1]);\n\t\t}\n\t\telse if(arr[i][0]%5 == 0){\n\t\t\tprintf(\"%d\\n\", 2*arr[i][1]);\n\t\t}\n\t\telse if((arr[i][0]%2 == 0) && (arr[i][1]%2 == 0)){\n\t\t\tprintf(\"%d\\n\",2*arr[i][1]);\n\t\t}\n\t\telse if((arr[i][0]%2 == 0) && (arr[i][1]%2 == 1)){\n\t\t\tprintf(\"%d\\n\",arr[i][1]);\n\t\t}\n\t\telse if((arr[i][0]%2 == 1) && (arr[i][1]%2 == 0)){\n\t\t\tprintf(\"%d\\n\",arr[i][1]);\n\t\t}\n\t\telse if((arr[i][0]%2 == 1) && (arr[i][1]%2 == 1)){\n\t\t\tprintf(\"%d\\n\",2*arr[i][1]);\n\t\t}\t\t\n\t}\n}", "fixed": "#include <stdio.h>\n\nint main (){\n\tint n, i, j;\n\tscanf(\"%d\", &n);\n\tint arr[n][2];\n\tfor(i = 0; i < n;i++){\n\t\tfor (j = 0; j < 2; j++)\n\t\t{\n\t\t\tscanf(\"%d\",&arr[i][j]);\n\t\t}\n\t\tif(arr[i][0] == 1){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse if(arr[i][1] == 1 && arr[i][0] ==2){\n\t\t\tprintf(\"1\\n\");\n\t\t}\n\t\telse if(arr[i][1] == 1 && arr[i][0] > 2){\n\t\t\tprintf(\"2\\n\");\n\t\t}\n\t\telse if(arr[i][0]==2){\n\t\t\tprintf(\"%d\\n\", arr[i][1]);\n\t\t}\n\t\telse if(arr[i][0]%5 == 0){\n\t\t\tprintf(\"%d\\n\", 2*arr[i][1]);\n\t\t}\n\t\telse if((arr[i][0]%2 == 0) && (arr[i][1]%2 == 0)){\n\t\t\tprintf(\"%d\\n\",2*arr[i][1]);\n\t\t}\n\t\telse if((arr[i][0]%2 == 0) && (arr[i][1]%2 == 1)){\n\t\t\tprintf(\"%d\\n\",2*arr[i][1]);\n\t\t}\n\t\telse if((arr[i][0]%2 == 1) && (arr[i][1]%2 == 0)){\n\t\t\tprintf(\"%d\\n\",2*arr[i][1]);\n\t\t}\n\t\telse if((arr[i][0]%2 == 1) && (arr[i][1]%2 == 1)){\n\t\t\tprintf(\"%d\\n\",2*arr[i][1]);\n\t\t}\t\t\n\t}\n}"}
{"similarity_score": 0.9518716577540107, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "54bdeb375fb8f9663de81a7ce0266fea", "bug_code_uid": "d0859fbc6701eee4e1f816af739f48e4", "src_uid": "0dc5469831c1d5d34aa3b7b172e3237b", "apr_id": "10ae4ae5db5addfb728330f7e26f1b6d", "difficulty": 1100, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint rec[1001][1001];\nint n, m, k, flag;\nint set(int r, int c)\n{\n\trec[r][c]=1;\n\tif(r+1<=n && c+1<=m)\n\t{\n\t\tif(rec[r][c]*rec[r][c+1]*rec[r+1][c]*rec[r+1][c+1]==1)\n\t\t\treturn 1;\n\t}\n\tif(r-1>=1 && c+1<=m)\n\t{\n\t\tif(rec[r-1][c]*rec[r-1][c+1]*rec[r][c]*rec[r][c+1]==1)\n\t\t\treturn 1;\n\t}\n\tif(r-1>=1 && c-1>=1)\n\t{\n\t\tif(rec[r-1][c]*rec[r-1][c-1]*rec[r][c]*rec[r][c]==1)\n\t\t\treturn 1;\n\t}\n\tif(r+1<=n && c-1>=1)\n\t{\n\t\tif(rec[r+1][c-1]*rec[r+1][c]*rec[r][c-1]*rec[r][c]==1)\n\t\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tint i, r, c;\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tfor(i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d %d\", &r, &c);\n\t\tif(rec[r][c]==0 && flag ==0)\n\t\t{\n\t\t\tif(set(r, c)==1)\n\t\t\t\tflag = i;\n\t\t}\n\t}\n\tprintf(\"%d\", flag);\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\nint rec[1001][1001];\nlong long int n, m, k, flag;\nint set(long long int r, long long int c)\n{\n\trec[r][c]=1;\n\tif(r+1<=n && c+1<=m)\n\t{\n\t\tif(rec[r][c]*rec[r][c+1]*rec[r+1][c]*rec[r+1][c+1]==1)\n\t\t\treturn 1;\n\t}\n\tif(r-1>=1 && c+1<=m)\n\t{\n\t\tif(rec[r-1][c]*rec[r-1][c+1]*rec[r][c]*rec[r][c+1]==1)\n\t\t\treturn 1;\n\t}\n\tif(r-1>=1 && c-1>=1)\n\t{\n\t\tif(rec[r-1][c]*rec[r-1][c-1]*rec[r][c]*rec[r][c-1]==1)\n\t\t\treturn 1;\n\t}\n\tif(r+1<=n && c-1>=1)\n\t{\n\t\tif(rec[r+1][c-1]*rec[r+1][c]*rec[r][c-1]*rec[r][c]==1)\n\t\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tlong long int i, r, c;\n\tscanf(\"%I64d %I64d %I64d\", &n, &m, &k);\n\tfor(i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%I64d %I64d\", &r, &c);\n\t\tif(rec[r][c]==0 && flag ==0)\n\t\t{\n\t\t\tif(set(r, c)==1)\n\t\t\t\tflag = i;\n\t\t}\n\t}\n\tprintf(\"%I64d\", flag);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9325246398786959, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "260f7d50c37bcecedd5528f1cb33ec15", "bug_code_uid": "439bbc78e5de901a2cd92ff1ce935cc1", "src_uid": "bd5912fe2c5c37658f28f6b159b39645", "apr_id": "d98439d56b5b1bead7837de40b8f3847", "difficulty": 1000, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char str[1000];\n  scanf(\"%s\", str);\n  int k;\n  scanf(\"%d\", &k);\n  if(k>strlen(str))\n  {\n    printf(\"impossible\");\n    exit(0);\n  }\n  char chr;\n  int sum = 0;\n  int black[strlen(str)];\n  for(int i = 0; i < strlen(str); i++)\n    black[i] = 1;\n  for(int i = 1; i<strlen(str); i++)\n  {\n    chr = str[i];\n    // printf(\"%c selected\\n\", chr);\n    for(int j = 0; j<i; j++)\n    {\n      if((chr == str[j]) && black[j])\n      {\n        //   printf(\"%d CHANGED\\n\",j);\n          black[j] = 0;\n          sum++;\n      }\n    }\n  }\n  printf(\"%d\",k + sum - strlen(str));\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char str[1000];\n  scanf(\"%s\", str);\n  int k;\n  scanf(\"%d\", &k);\n  if(k>strlen(str))\n  {\n    printf(\"impossible\");\n    exit(0);\n  }\n  char chr;\n  int sum = 0;\n  int black[strlen(str)];\n  for(int i = 0; i < strlen(str); i++)\n    black[i] = 1;\n  for(int i = 1; i<strlen(str); i++)\n  {\n    chr = str[i];\n    // printf(\"%c selected\\n\", chr);\n    for(int j = 0; j<i; j++)\n    {\n      if((chr == str[j]) && black[j])\n      {\n        //   printf(\"%d CHANGED\\n\",j);\n          black[j] = 0;\n          sum++;\n      }\n    }\n  }\n  int soln = k + sum - strlen(str);\n  if(soln > 0)  \n    printf(\"%d\",soln);\n  else\n    printf(\"%d\",0);\n}"}
{"similarity_score": 0.7598684210526315, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fd7e2e92539c96b3562538be223fa450", "bug_code_uid": "2aa66a7e764097d44a56b99be855e895", "src_uid": "43996d7e052aa628a46d03086f9c5436", "apr_id": "209276b68359578c13f164e5395e5a43", "difficulty": 1000, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint judge(int n)\n{\n    int flag=1;\n    for(int i=2;i<(int)sqrt(n);i++){\n        if(n%i==0){\n            flag=0;\n            return 0;\n        }\n    }\n    if(flag==1){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}\nint main()\n{\n    int T;\n    int n;\n    scanf(\"%d\",&T);\n    while(T--){\n        scanf(\"%d\",&n);\n        if(n==1){\n            printf(\"-1\\n\");\n        }\n        for(int i=pow(10,n-1);;i++){\n            if(judge(i)){\n                printf(\"%d\\n\",i);\n                break;\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint judge(int n)\n{\n    int flag=1;\n    for(int i=2;i<(int)sqrt(n);i++){\n        if(n%i==0){\n            flag=0;\n            return 0;\n        }\n    }\n    if(flag==1){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}\nint main()\n{\n    int T;\n    int n;\n    \n    scanf(\"%d\",&T);\n    \n    while(T--){\n        scanf(\"%d\",&n);\n        if(n==1){\n            printf(\"-1\\n\");\n        }\n        else if(n==2){\n            printf(\"23\\n\");\n        }\n        else{\n            for(int i=0;i<n-2;i++){\n                printf(\"3\");\n            }\n            printf(\"23\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8340943683409436, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "d03e8faf3feb24e344e9142dcd64ef6e", "bug_code_uid": "bbcd8759e2b408e82d9d7f34d47ec6df", "src_uid": "b97db0567760f2fc5d3ca15611fe7177", "apr_id": "1eebf31cf6cd0fc3444e1d10c2a86c0a", "difficulty": 2300, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n\tint n, p[2001], s[2001], vp[2001], vs[2001], i,d,cp,u[4001],v[4001],j,tg;\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", p + i);\n\t\tvp[p[i]] = i;\n\t}\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", s+i);\n\t\tvs[s[i]] = i;\n\t}\n\td = 0; cp = 0;\n\tfor (i = n; i > 0; i--)\n\t\tfor (j = vp[s[i]] + 1; j <= i;j++)\n\t\t\tif (vs[p[j]] <= vp[s[i]])\n\t\t\t{\n\t\t\t\td++;\n\t\t\t\tu[d] = vp[s[i]];\n\t\t\t\tv[d] = j;\n\t\t\t\tcp += (j - vp[s[i]]);\n\t\t\t\tvp[p[j]] = vp[s[i]];\n\t\t\t\tvp[s[i]] = j;\n\t\t\t\tp[vp[p[j]]] = p[j];\n\t\t\t\tp[j] = s[i];\n\t\t\t}\n\tprintf(\"%d\\n%d\\n\", cp, d);\n\tfor (i = 1; i <= d; i++) printf(\"%d %d\\n\", u[i], v[i]);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint n, p[2001], s[2001], vp[2001], vs[2001], i, d, cp, u[2200000], v[2200000], j, tg;\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", p + i);\n\t\tvp[p[i]] = i;\n\t}\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", s+i);\n\t\tvs[s[i]] = i;\n\t}\n\td = 0; cp = 0;\n\tfor (i = n; i > 0; i--)\n\t{\n\t\tcp += (i - vp[s[i]]);\n\t\tfor (j = vp[s[i]] + 1; j <= i; j++)\n\t\t\tif (vs[p[j]] <= vp[s[i]])\n\t\t\t{\n\t\t\t\td++;\n\t\t\t\tu[d] = vp[s[i]];\n\t\t\t\tv[d] = j;\n\t\t\t\tvp[p[j]] = vp[s[i]];\n\t\t\t\tvp[s[i]] = j;\n\t\t\t\tp[vp[p[j]]] = p[j];\n\t\t\t\tp[j] = s[i];\n\t\t\t}\n\t}\n\tprintf(\"%d\\n%d\\n\", cp, d);\n\tfor (i = 1; i <= d; i++) printf(\"%d %d\\n\", u[i], v[i]);\n\treturn 0;\n}"}
{"similarity_score": 0.9978054133138259, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a13560e77f4407950d9281fc89c65fa5", "bug_code_uid": "0403c5711710418417837e9151f26e59", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "b07b84681e669b58ac46ff663952a777", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int n, m, i, j, x, y;\n    scanf(\"%d%d\",&n,&m);\n    if(n>m||m>=2*n+2)\n        printf(\"-1\\n\");\n    else\n    {\n        if(n==m+1)\n        {\n            for(i=0;i<m;i++)\n                printf(\"01\");\n            printf(\"0\");\n        }\n        else if(m<=2*n)\n        {\n            x=m-n;\n            for(i=0;i<x;i++)\n                printf(\"110\");\n            for(i=0;i<n-x;i++)\n                printf(\"10\");\n        }\n        else\n        {\n            x=m-2*n;\n            for(i=0;i<n;i++)\n                printf(\"110\");\n            for(i=0;i<x;i++)\n                printf(\"1\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int n, m, i, j, x, y;\n    scanf(\"%d%d\",&n,&m);\n    if(n>m+1||m>2*n+2)\n        printf(\"-1\\n\");\n    else\n    {\n        if(n==m+1)\n        {\n            for(i=0;i<m;i++)\n                printf(\"01\");\n            printf(\"0\");\n        }\n        else if(m<=2*n)\n        {\n            x=m-n;\n            for(i=0;i<x;i++)\n                printf(\"110\");\n            for(i=0;i<n-x;i++)\n                printf(\"10\");\n        }\n        else\n        {\n            x=m-2*n;\n            for(i=0;i<n;i++)\n                printf(\"110\");\n            for(i=0;i<x;i++)\n                printf(\"1\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9794871794871794, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6bb85d4eccc8636230bdb954664c12d3", "bug_code_uid": "c9bf315b6ded73c090f2605913a5d365", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "e0bee0d8a16db43eea8ef67f304d0d9c", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n\t\n\tint a,b,c,n=0,i,j=0,temp=1;\n\tint set[10000];\n\tint tes;\n\t\n\tscanf(\"%d\",&c);\n\t\n\tfor(i=0;i<c;i++)\n\t\tscanf(\"%d\",&set[i]);\n\t\t\n\tfor(i=0;i<c-1;i++){\n\t\ta=set[i];\n\t\tb=set[i+1];\n\t\n\tif(a<=b){\n\t\ttemp++;\n\t\ttes=temp;\n\t}\n\telse{\n\t\tj++;\n\t\ttemp=1;\n\t\tif(n<tes)\n\t\t\tn=tes;\n\t}\n\t}\n\t\n\t\n\tif(n<tes)\n\tn=tes;\n\tif(c==1)\nn=1;\n\n\t\n\tprintf(\"%d\",n);\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n\t\n\tlong int a,b,c,n=0,i,j=0,temp=1;\n\tint set[100000];\n\tint tes;\n\t\n\tscanf(\"%d\",&c);\n\t\n\tfor(i=0;i<c;i++)\n\t\tscanf(\"%lld\",&set[i]);\n\t\t\n\tfor(i=0;i<c-1;i++){\n\t\ta=set[i];\n\t\tb=set[i+1];\n\t\n\tif(a<=b){\n\t\ttemp++;\n\t\ttes=temp;\n\t}\n\telse{\n\t\tj++;\n\t\ttemp=1;\n\t\tif(n<tes)\n\t\t\tn=tes;\n\t}\n\t}\n\t\n\t\n\tif(n<tes)\n\tn=tes;\n\tif(c==1 || n==0)\nn=1;\n\n\t\n\tprintf(\"%d\",n);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9851169383416017, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4fdf20a55f8440a8cc23843336dafe9f", "bug_code_uid": "1a73ada4291e228696a6a5bf770ace50", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "ca1e8caf3eec42d011b2d59c4fb58f9d", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,w,h,n,count1,count2,p,count;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {\r\n\r\n        scanf(\"%d %d %d\",&w,&h,&n);\r\n    if(n==1)\r\n    {\r\n        printf(\"YES\\n\");\r\n    }\r\n    else\r\n    {\r\n       if(w%2!=0 && h%2!=0)\r\n       {\r\n           printf(\"NO\\n\");\r\n       }\r\n       else{\r\n            count=1;\r\n        while(w%2==0)\r\n        {\r\n            w=w/2;\r\n            count=count*2;\r\n        }\r\n        while(h%2==0)\r\n        {\r\n            h=h/2;\r\n            count=count*2;\r\n        }\r\n    printf(\"%d\\n\",count);\r\n\r\n        if(count>=n){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n       }\r\n    }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,w,h,n,count1,count2,p,count;\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {\r\n\r\n        scanf(\"%d %d %d\",&w,&h,&n);\r\n    if(n==1)\r\n    {\r\n        printf(\"YES\\n\");\r\n    }\r\n    else\r\n    {\r\n       if(w%2!=0 && h%2!=0)\r\n       {\r\n           printf(\"NO\\n\");\r\n       }\r\n       else{\r\n            count=1;\r\n        while(w%2==0)\r\n        {\r\n            w=w/2;\r\n            count=count*2;\r\n        }\r\n        while(h%2==0)\r\n        {\r\n            h=h/2;\r\n            count=count*2;\r\n        }\r\n    \r\n\r\n        if(count>=n){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n       }\r\n    }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.34765625, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e1d158a81698aafe9ac856909acb3922", "bug_code_uid": "e5be2554e28fe05c1524dc99f800d854", "src_uid": "c40cb0a89c2b604aa7384476b57e96b3", "apr_id": "6b95ccb68c2d37d80ece0a1fb0d6ca32", "difficulty": 1600, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int i,n,pair_count=0;\n    scanf(\"%d\",&n);\n    if (n==2){\n        printf(\"3\\n2 1 2\");\n        return 0;\n    }\n    pair_count=n-1;\n    printf(\"%d\\n\",pair_count);\n    for (i=2;i<=n;++i){\n        printf(\"%d %d \",i,i-1);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    printf(\"%d\\n\",n+n/2);\n    for (i=2;i<=n;i+=2) printf(\"%d \",i);\n    for (i=1;i<=n;i+=2) printf(\"%d \",i);\n    for (i=2;i<=n;i+=2) printf(\"%d \",i);\n    return 0;\n}"}
{"similarity_score": 0.9719775820656525, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "99fe30085cd8a64db4f197b69f217a06", "bug_code_uid": "42d2e4c6c963498afd498e77039c05b9", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "89d40d09dc7a05ca0d4e3a76629c786b", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i=1,j,k,n;\n    int num[100000]={0};\n    scanf(\"%d\",&n);\n    char s[n][100000];\n    scanf(\"%s\",s[0]);\n    printf(\"OK\\n\");\n    n--;\n    int state;\n    while(n--)\n    {\n        state=0;\n        scanf(\"%s\",s[i]);\n        for(j=0;j<i;j++)\n        {\n            if(strcmp(s[j],s[i])==0)\n            {\n                state=1;\n                printf(\"%s%d\\n\",s[j],++num[j]); \n                i++;\n                break;\n            }\n        }\n        if(state==0)\n        {\n         //   strcpy(s[i],main);\n            printf(\"OK\\n\");\n            i++;\n        }\n    }\n    return 0;\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i=1,j,k,n;\n    int num[100000]={0};\n    scanf(\"%d\",&n);\n    char s[n+2][35];\n    scanf(\"%s\",s[0]);\n    printf(\"OK\\n\");\n    n--;\n    int state;\n    while(n--)\n    {\n        state=0;\n        scanf(\"%s\",s[i]);\n        for(j=0;j<i;j++)\n        {\n            if(strcmp(s[j],s[i])==0)\n            {\n                state=1;\n                printf(\"%s%d\\n\",s[j],++num[j]); \n                break;\n            }\n        }\n        if(state==0)\n        {\n         //   strcpy(s[i],main);\n            printf(\"OK\\n\");\n            i++;\n        }\n    }\n    return 0;\n\n}"}
{"similarity_score": 0.9723756906077348, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2cb6725a51ce5dfde7cfb7962b87fab7", "bug_code_uid": "1c7b42eed254682a77de84ddf69e2db4", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "8fe3c24bf36eeaedbcce4c01b6dd21da", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\n\nint main() {\n    int a,b,x,n,t,dist,maxi,j=1;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++)\n    {\n        scanf(\"%d %d %d %d\",&n,&x,&a,&b);\n        if(x==0)\n        {\n            dist=abs((b-a));\n            printf(\"%d\\n\",dist);\n            continue;\n        }\n        if( (a==1)&&(b==n) )\n        {\n            printf(\"%d\\n\",abs((b-a)));\n            continue;\n        }\n        if( (a==n) && (b==1) )\n        {\n            printf(\"%d\\n\",abs((b-a)));\n            continue;\n        }\n        dist=abs((b-a));\n        maxi=n-1;\n        while(j<=x && dist<maxi)\n        {\n            printf(\"  %d     \\n\",dist);\n            dist++;\n            j++;\n        }\n        j=1;\n        printf(\"%d\\n\",dist);\n    }\n}", "fixed": "#include <stdio.h>\n#include<stdlib.h>\n\nint main() {\n    int a,b,x,n,t,dist,maxi,j=1;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++)\n    {\n        scanf(\"%d %d %d %d\",&n,&x,&a,&b);\n        if(x==0)\n        {\n            dist=abs((b-a));\n            printf(\"%d\\n\",dist);\n            continue;\n        }\n        if( (a==1)&&(b==n) )\n        {\n            printf(\"%d\\n\",abs((b-a)));\n            continue;\n        }\n        if( (a==n) && (b==1) )\n        {\n            printf(\"%d\\n\",abs((b-a)));\n            continue;\n        }\n        dist=abs((b-a));\n        maxi=n-1;\n        while(j<=x && dist<maxi)\n        {\n            dist++;\n            j++;\n        }\n        j=1;\n        printf(\"%d\\n\",dist);\n    }\n}"}
{"similarity_score": 0.9969604863221885, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a661400dee88874636fe0c70713adcaa", "bug_code_uid": "eca640cf08c5db5884438d01e137485b", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "3265ad38901024314da6cb75c9629de3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    unsigned long long int n,m,a[1000000],i,count=0,b=1;\n    scanf(\"%I64d%I64d\",&n,&m);\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n        for(i=0; i<m; i++)\n        {\n            if(a[i]>b)\n            {\n                count=a[i]-b+count;\n                b=a[i];\n            }\n            else if(a[i]<b)\n            {\n                count=n-b+a[i]+count;\n                b=a[i];\n            }\n        }\n        printf(\"%d\",count);\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    unsigned long long int n,m,a[1000000],i,count=0,b=1;\n    scanf(\"%I64d%I64d\",&n,&m);\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n        for(i=0; i<m; i++)\n        {\n            if(a[i]>b)\n            {\n                count=a[i]-b+count;\n                b=a[i];\n            }\n            else if(a[i]<b)\n            {\n                count=n-b+a[i]+count;\n                b=a[i];\n            }\n        }\n        printf(\"%I64d\",count);\n\n\n}\n"}
{"similarity_score": 0.3682771194165907, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "70d179ab2beb7266f05f5ababbfec156", "bug_code_uid": "d9e077fe621552f970e855e0e1f52928", "src_uid": "943ce230777aca97266c272bdb9b364c", "apr_id": "2cb40c7e50ae9fb321ed1a1ad3ff4db1", "difficulty": 900, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,a[2005],min=10000;\r\n        int max=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]<min) min=a[i];\r\n            if(a[i]>max)max=a[i];\r\n        }\r\n        if(n>1)\r\n        printf(\"%d\\n\",max-min);\r\n        else\r\n        printf(\"0\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint max(int a,int b)\r\n{\r\n    if(a>b)\r\n     return a;\r\n    else\r\n     return b;\r\n}\r\nint min(int a,int b)\r\n{\r\n    if(a<b)\r\n     return a;\r\n    else\r\n     return b;\r\n}\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--)\r\n   {\r\n     int n,i;\r\n    scanf(\"%d\",&n);\r\n    int x[n+1],mx=0,mn=1000000;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&x[i]);\r\n        if(i!=0&&x[i]>mx)\r\n        mx=x[i];\r\n        if(i!=n-1&&x[i]<mn)\r\n        mn=x[i];\r\n    }\r\n    int ans=0;\r\n    for(i=0;i<n-1;i++)\r\n    ans=max(ans,x[i]-x[i+1]);\r\n    int ans1=mx-x[0];\r\n    int ans2=x[n-1]-mn;\r\n  int final=max(ans,max(ans1,ans2));\r\n    printf(\"%d\\n\",final);\r\n   }\r\n   \r\n}"}
{"similarity_score": 0.9821428571428571, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8aa96d866c14dd8a78ac51270724e5f1", "bug_code_uid": "26e587bd17bac6349216a42c3d0e5457", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "7148202c938de76fb9b047caad28d33d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n    int n,a;\n    scanf(\"%d\",&n);\n    int i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a%2==0)\n        printf(\"%d \",a-1);\n        else\n        printf(\"%d \",a);\n    }\n    \n}", "fixed": "#include<stdio.h>\n\nint  main()\n{\n    int n,a;\n    scanf(\"%d\",&n);\n    int i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a%2==0)\n        printf(\"%d \",a-1);\n        else\n        printf(\"%d \",a);\n    }\n    \n}"}
{"similarity_score": 0.9155234657039711, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "ae3ad5b93730279a3dd9e315444f0b8d", "bug_code_uid": "6aa2d6031bbb2c12d335c515f5966b9b", "src_uid": "b40059fe9cbdb0cc3b64c3e463900849", "apr_id": "52084e9a65563e62dd2d07ba30fb387f", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{   int a,b,c;\n    scanf(\"%d\",&a);\n    for(int i=1;i<=a;i++){\n    int d[11]={0};\n    scanf(\"%d\",&b);\n    for(int x=1;x<=b;x++){\n    scanf(\"%d\",&c);\n    switch(c){\n    case 2: d[0]+=1;break;\n    case 4: d[1]+=1;break;\n    case 8: d[2]+=1;break;\n    case 16: d[3]+=1;break;\n    case 32: d[4]+=1;break;\n    case 64: d[5]+=1;break;\n    case 128: d[6]+=1;break;\n    case 256: d[7]+=1;break;\n    case 512: d[8]+=1;break;\n    case 1024: d[9]+=1;break;\n    case 2048: d[10]+=1;break;\n    }\n    }\n    for(int m=0;m<10;m++){\n    d[m+1]+=d[m]/2;\n    }\n    if(d[10]>=1){\n    printf(\"YES\\n\");\n    }\n    else{\n    printf(\"NO\\n\");\n    }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{   int a,b,c;\n    scanf(\"%d\",&a);\n    for(int i=1;i<=a;i++){\n    int d[12]={0};\n    scanf(\"%d\",&b);\n    for(int x=1;x<=b;x++){\n    scanf(\"%d\",&c);\n    switch(c){\n    case 1: d[0]+=1;break;\n    case 2: d[1]+=1;break;\n    case 4: d[2]+=1;break;\n    case 8: d[3]+=1;break;\n    case 16: d[4]+=1;break;\n    case 32: d[5]+=1;break;\n    case 64: d[6]+=1;break;\n    case 128: d[7]+=1;break;\n    case 256: d[8]+=1;break;\n    case 512: d[9]+=1;break;\n    case 1024: d[10]+=1;break;\n    case 2048: d[11]+=1;break;\n    }\n    }\n        \n    for(int m=0;m<11;m++){\n    d[m+1]+=d[m]/2;\n    }\n    if(d[11]>=1){\n    printf(\"YES\\n\");\n    }\n    else{\n    printf(\"NO\\n\");\n    }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8559670781893004, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "06c8d2dbb39953f3a3486731d4f8b339", "bug_code_uid": "0893412185c38138a19bc90e769cc85e", "src_uid": "749a106d462555543c91753f00a5a479", "apr_id": "b24ad8da5e00fe6f7141bf3759dc1c4d", "difficulty": 1000, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "main(r,g,b,w,n){for(scanf(\"%*d\");~scanf(\"%d%d%d%d\",&r,&g,&b,&w);){n=r%2+g%2+b%2+w%2;puts(n==2||n>2&&r*g*b<1?\"No\":\"Yes\");}}", "fixed": "main(r,g,b,w,n){for(scanf(\"%*d\");~scanf(\"%d%d%d%d\",&r,&g,&b,&w);)n=r%2+g%2+b%2+w%2,puts(n-2&&(n<2||r&&g&&b)?\"Yes\":\"No\");}"}
{"similarity_score": 0.4329159212880143, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "a2485f0aeef7fb5ec6e8dbd00fe6086a", "bug_code_uid": "e09f69579483cd9c419cbf7d85420569", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "e0c6a16186bc6d1ef272f353fc5aeda6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,c=1,m,j;\n    scanf(\"%d %d\",&m,&n);\n    for(i=1;i<=m;i++,printf(\"\\n\"))\n    {\n        for(j=1;j<=n;j++)\n        {\n            if(i%2!=0)\n            printf(\"#\");\n            else\n            {\n                if(c%2!=0)\n                {\n               if(j==n)\n               printf(\"#\");\n               else\n               printf(\".\");\n                }\n                else\n                {\n                if(j==1)\n               printf(\"#\");\n               else\n               printf(\".\");\n                }\n                c=c+1;\n            }\n        }\n    }\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,c=1,m,j;\n    scanf(\"%d %d\",&m,&n);\n    for(i=1;i<=m;i++,printf(\"\\n\"))\n    {\n      if(i%2==0)\n      {\n          if(c%2==0)\n          {\n            printf(\"#\");\n          for(j=2;j<=n;j++)\n          printf(\".\");\n          }\n         else\n         {\n          for(j=1;j<=n-1;j++)\n          printf(\".\");\n          printf(\"#\");\n          }\n          \n         c=c+1;\n      } \n      else\n      {\n          for(j=1;j<=n;j++)\n          printf(\"#\");\n          \n      }}}"}
{"similarity_score": 0.8926174496644296, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "a25a822e25bff62327f3487a1ace30a2", "bug_code_uid": "5c2bd553e1755b883a6b84682c168536", "src_uid": "c9e9b82185481951911db3af72fd04e7", "apr_id": "1ed26283ebd5da7616aff7dfd3578605", "difficulty": 1500, "tags": ["implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\ntypedef struct\n{\n\tchar Name[33];\n\tint  Score;\n}Person_t ;\nPerson_t P[1000],Input[1000];\n\nint main()\n{\n\tint N,i,j,Cnt,Max;\n\tscanf(\"%d\",&N);\n\tfor(Cnt=i=0;i<N;++i)\n\t{\n\t\tscanf(\"%s %d\",Input[i].Name,&Input[i].Score);\n\t\tfor(j=0;j<Cnt;++j)\n\t\t{\n\t\t\tif(strcmp(P[j].Name,Input[i].Name)==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j==Cnt)\n\t\t{\n\t\t\tstrcpy(P[j].Name,Input[i].Name);\n\t\t\t++Cnt;\n\t\t}\n\t\tP[j].Score+=Input[i].Score;\n\t}\n\tfor(Max=P[0].Score,i=0;i<Cnt;++i)\n\t{\n\t\tif(P[i].Score>Max)\n\t\t{\n\t\t\tMax=P[i].Score;\n\t\t}\n\t\tP[i].Score=0;\n\t}\n\tfor(Cnt=i=0;i<N;++i)\n\t{\n\t\tfor(j=0;j<Cnt;++j)\n\t\t{\n\t\t\tif(strcmp(P[j].Name,Input[i].Name)==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j==Cnt)\n\t\t{\n\t\t\tstrcpy(P[j].Name,Input[i].Name);\n\t\t\t++Cnt;\n\t\t}\n\t\tP[j].Score+=Input[i].Score;\n\t\tif(P[j].Score>=Max)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%s\\n\",P[j].Name);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\ntypedef struct\n{\n\tchar Name[33];\n\tint  Score;\n}Person_t ;\nPerson_t P[1000],Input[1000];\nchar flag[1000];\n\nint main()\n{\n\tint N,i,j,Cnt,Max;\n\tscanf(\"%d\",&N);\n\tfor(Cnt=i=0;i<N;++i)\n\t{\n\t\tscanf(\"%s %d\",Input[i].Name,&Input[i].Score);\n\t\tfor(j=0;j<Cnt;++j)\n\t\t{\n\t\t\tif(strcmp(P[j].Name,Input[i].Name)==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j==Cnt)\n\t\t{\n\t\t\tstrcpy(P[j].Name,Input[i].Name);\n\t\t\t++Cnt;\n\t\t}\n\t\tP[j].Score+=Input[i].Score;\n\t}\n\tfor(Max=P[0].Score,i=0;i<Cnt;++i)\n\t{\n\t\tif(P[i].Score>Max)\n\t\t{\n\t\t\tMax=P[i].Score;\n\t\t}\n\t}\n\tfor(i=0;i<Cnt;++i)\n\t{\n\t\tif(P[i].Score==Max)\n\t\t{\n\t\t\tflag[i]=1;\n\t\t}\n\t\tP[i].Score=0;\n\t}\n\tfor(Cnt=i=0;i<N;++i)\n\t{\n\t\tfor(j=0;j<Cnt;++j)\n\t\t{\n\t\t\tif(strcmp(P[j].Name,Input[i].Name)==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j==Cnt)\n\t\t{\n\t\t\tstrcpy(P[j].Name,Input[i].Name);\n\t\t\t++Cnt;\n\t\t}\n\t\tP[j].Score+=Input[i].Score;\n\t\tif(P[j].Score>=Max&&flag[j])\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%s\\n\",P[j].Name);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9498399146211313, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "a0e2309a73bf6037ef637d9aa6703250", "bug_code_uid": "ce4eb8e73bedcc9c30be5c5e07002fb0", "src_uid": "22c0489eec3d8e290fcbcf1aeb3bb66c", "apr_id": "b1a60b7a9c90cb1968b3d917809a25bc", "difficulty": 1000, "tags": ["brute force", "constructive algorithms", "implementation", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint testCase;\r\n\tscanf(\"%d\", &testCase);\r\n\t\r\n\tfor (int i = 0; i < testCase; i++)\r\n\t{\r\n\t\tint digitNumber;\r\n\t\tint number[50];\r\n\t\tint notDigitOne = 0;\r\n\t\tscanf(\"%d\", &digitNumber);\r\n\r\n\t\tfor (int i = 0; i < digitNumber;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%1d\", &number[i]);\r\n\t\t}\r\n\r\n\t\tfor (int i = 0; i < digitNumber;i++)\r\n\t\t{\r\n\t\t\tif (number[i] != 2 && number[i] != 3 && number[i] != 5 && number[i] != 7)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1\\n%d\\n\", number[i]);\r\n\t\t\t\tnotDigitOne = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (notDigitOne == 0)\r\n\t\t{\r\n\t\t\tfor (int i = 0; i < digitNumber - 1; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (int j = i + 1; j < digitNumber; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tint digitTwo = number[i] * 10 + number[j];\r\n\t\t\t\t\tif (digitTwo != 23 && digitTwo != 37 && digitTwo != 53 && digitTwo != 73)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"2\\n%d\\n\", digitTwo);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint testCase;\r\n\tscanf(\"%d\", &testCase);\r\n\t\r\n\tfor (int i = 0; i < testCase; i++)\r\n\t{\r\n\t\tint digitNumber;\r\n\t\tint number[50];\r\n\t\tint notDigitOne = 0;\r\n\t\tint notDigitTwo = 0;\r\n\t\tscanf(\"%d\", &digitNumber);\r\n\r\n\t\tfor (int i = 0; i < digitNumber;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%1d\", &number[i]);\r\n\t\t}\r\n\r\n\t\tfor (int i = 0; i < digitNumber;i++)\r\n\t\t{\r\n\t\t\tif (number[i] != 2 && number[i] != 3 && number[i] != 5 && number[i] != 7)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1\\n%d\\n\", number[i]);\r\n\t\t\t\tnotDigitOne = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (notDigitOne == 0)\r\n\t\t{\r\n\t\t\tfor (int i = 0; i < digitNumber - 1; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (int j = i + 1; j < digitNumber; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tint digitTwo = number[i] * 10 + number[j];\r\n\t\t\t\t\tif (digitTwo != 23 && digitTwo != 37 && digitTwo != 53 && digitTwo != 73)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"2\\n%d\\n\", digitTwo);\r\n\t\t\t\t\t\tnotDigitTwo = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (notDigitTwo == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7792207792207793, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2fd7b30fbec7a8a6cb3cac924eb077b2", "bug_code_uid": "ef2f5606fe955b443ea63b393dff09a2", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "d269b2adefd3b93e34b106adca6361e9", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\nint main()\n{\n\tint n,a,b;\n\tint minm=INT_MAX;\n\tscanf(\"%d %d %d\", &n,&a,&b);\n\tchar string[n];\n\tint i;\n\tscanf(\"%s\", string);\n\tif(a==b)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tif(string[a-1]==string[b-1])\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(string[i]==string[a-1] && fabs(i-(b-1))<minm)\n\t\t\t{\n\t\t\t\tminm=fabs(i-(b-1));\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\", minm);\n\t\treturn 0;\n\t}\n\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\nint main()\n{\n\tint n,a,b;\n\tint minm=INT_MAX;\n\tscanf(\"%d %d %d\", &n,&a,&b);\n\tchar string[n];\n\tint i;\n\tscanf(\"%s\", string);\n\tif(a==b)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tif(string[a-1]==string[b-1])\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tprintf(\"1\");\n\t\treturn 0;\n\t}\n\n}"}
{"similarity_score": 0.791005291005291, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "dfc91a79d5395320e5fd089aab1f7e2d", "bug_code_uid": "ae5d6dce08ffc566a5b3625f67b57699", "src_uid": "d9ba1dfe11cf3dae177f8898f3abeefd", "apr_id": "492e2af4fe2aade7d3af035310e7e970", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n\n    int ara[n+1], i;\n\n    for(i = 1; i <= n; i++)\n    {\n        ara[i] = i;\n\n        if(i > 1)\n        {\n            int temp = ara[i];\n            ara[i] = ara[i-1];\n            ara[i-1] = temp;\n        }\n    }\n\n\n    for(i = 1; i <= n; i++)\n        printf(\"%d \", ara[i]);\n\n    printf(\"\\n\");\n\n    return 0;\n}\n\n\n\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n\n    int ara[n+1], i;\n\n    for(i = n; i >= 1; i--)\n    {\n        ara[i] = i;\n\n        if(i < n)\n        {\n            int temp = ara[i];\n            ara[i] = ara[i+1];\n            ara[i+1] = temp;\n        }\n    }\n\n\n    for(i = 1; i <= n; i++)\n        printf(\"%d \", ara[i]);\n\n    printf(\"\\n\");\n\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.6483103879849812, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "acb63504aa39d6df6c3cf67e9c5e2a05", "bug_code_uid": "96e583e21891e65ecd18d1d69f49bef7", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "136e8f7795eef3ce827bc59589ec78dd", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint r[100005],b[100005],c[100005];\nvoid counting(int A[],int n,int k)\n{\n        int i,j;\n        for(i=1;i<=n;i++)\n        {\n            c[A[i]]=c[A[i]]+1;\n        }\n\n        for(i=2;i<=k;i++)\n        {\n            c[i]=c[i]+c[i-1];\n        }\n        for(i=n;i>0;i--)\n        {\n            b[c[A[i]]]=A[i];\n            c[A[i]]=c[A[i]]-1;\n        }\n}\nint main()\n{\n    int n,x,i,k=0;\n    long long int panks=0;\n    scanf(\"%d%d\",&n,&x);\n    for(i=1;i<=n;i++)\n   {\n       scanf(\"%d\",&r[i]);\n       if(arr[i]>k)\n                k=r[i];}\n    counting(r,n,k);\n    for(i=1;i<=n;i++)\n    {\n        if(x>1)\n        {\n            panks=panks+(b[i]*x);\n            x--;\n        }\n        else if(x==1)\n        {\n            panks=panks+b[i];\n        }\n    }\n    printf(\"%I64d\",panks);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int r[100005],b[100005],c[100005];\nvoid counting(long long int A[],long long int n,long long int k)\n{\n        long long int i,j;\n        for(i=1;i<=n;i++)\n        {\n            c[A[i]]=c[A[i]]+1;\n        }\n\n        for(i=2;i<=k;i++)\n        {\n            c[i]=c[i]+c[i-1];\n        }\n        for(i=n;i>0;i--)\n        {\n            b[c[A[i]]]=A[i];\n            c[A[i]]=c[A[i]]-1;\n        }\n}\nint main()\n{\n    long long int n,x,i,k=0;\n    long long int panks=0;\n    scanf(\"%I64d%I64d\",&n,&x);\n    for(i=1;i<=n;i++)\n   {\n       scanf(\"%I64d\",&r[i]);\n       if(r[i]>k)\n                k=r[i];}\n    counting(r,n,k);\n    for(i=1;i<=n;i++)\n    {\n            panks=panks+(b[i]*x);\n            if(x>1)\n                x--;\n\n    }\n    printf(\"%I64d\",panks);\n    return 0;\n}\n"}
{"similarity_score": 0.9978768577494692, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1b2c9e872ab7620d35094a0d460390b7", "bug_code_uid": "7fe14389c67a346fcc98551d405ed155", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "08bd35032ba38c463c371a1736121765", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(int argc, char *argv[])\n{\n\tint a,b;\n\tint i;\n\tint sum;\n\tint n;\n\tint sum1;\n\twhile(scanf(\"%d %d\",&a,&b)!=EOF)\n\t{\n\t\tsum = 0;\n\t\tsum1 = 1;\n\t\tfor(i=1;i<=a;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&n);\n\t\t\tsum += n;\n\t\t}\t\n\t\tsum = abs(sum);\n\t\tif(sum==0)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(sum<=b)\n\t\t{\n\t\t\tprintf(\"1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\twhile(1)\n\t\t{\n\t\t\tif(sum<=0)\n\t\t\t\tbreak;\n\t\t\tsum -= b;\n\t\t\tsum1 ++;\t\n\t\t}\n\t\tprintf(\"%d\\n\",sum1);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(int argc, char *argv[])\n{\n\tint a,b;\n\tint i;\n\tint sum;\n\tint n;\n\tint sum1;\n\twhile(scanf(\"%d %d\",&a,&b)!=EOF)\n\t{\n\t\tsum = 0;\n\t\tsum1 = 0;\n\t\tfor(i=1;i<=a;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&n);\n\t\t\tsum += n;\n\t\t}\t\n\t\tsum = abs(sum);\n\t\tif(sum==0)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(sum<=b)\n\t\t{\n\t\t\tprintf(\"1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\twhile(1)\n\t\t{\n\t\t\tif(sum<=0)\n\t\t\t\tbreak;\n\t\t\tsum -= b;\n\t\t\tsum1 ++;\t\n\t\t}\n\t\tprintf(\"%d\\n\",sum1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5908221797323135, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "9a34b3df216e6d5e136c33a7bfad5a79", "bug_code_uid": "f57e9170e7591b02054c9ea3c059c7cd", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "745b84f9cdc57c6caab8f4bf56cf8f2f", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        int arr[n+1];\n        for(int i=1;i<=n;i++){\n            scanf(\"%d\",&arr[i]);\n        }\n        for(int i=1;i<=n;i++){\n            if(arr[i]!=arr[i-1] && arr[i]!=arr[i+1]){\n                     printf(\"%d\\n\",i);\n            }\n        }\n\n    }\n}\n\n   \t    \t  \t \t  \t  \t  \t\t \t\t\t", "fixed": "#include<stdio.h>\n#include<stdbool.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        int arr[n];\n        for(int i=0; i<n; i++){\n            scanf(\"%d\",&arr[i]);\n        }\n        bool flag=0;\n        for(int i=1; i<n-1; i++){\n        {\n            if(arr[i]!=arr[i-1] && arr[i]!=arr[i+1]){\n                printf(\"%d\\n\",i+1); flag=1;\n                break;\n            }\n        }\n        }\n      if(!flag){\n      if(arr[0]!=arr[1]){\n          printf(\"1\\n\");\n        }\n        else{\n            printf(\"%d\\n\",n);\n        }\n      }\n\n    }\n\n    return 0;\n}\n\n \t\t           \t\t\t\t     \t\t\t\t \t\t"}
{"similarity_score": 0.9912663755458515, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5b71120d1a510ab18bf9f9717992a328", "bug_code_uid": "67b586c34b4b05ec5bca8e131ae1da68", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "0e852d713ba6d9ffb42d6a48de5e9657", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[500005];\nint p[500005];\nint toTheRight[500005];\n\nlong long ans;\n\nlong long sum1, sum2, sum3,total_sum,sumd3;\n\nint main() {\n\tint i, j,k,n;\n\tans = 0;\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tp[0] = 0;\n\tfor (i = 1; i <= n ; i++)\n\t\tp[i] = p[i - 1] + a[i];\n\t\n\ttotal_sum = p[n];\n\tif(total_sum % 3 != 0) {\n\t\tans = 0;\n\t}\n\telse {\n\t\tsumd3 = total_sum / 3;\n\t\tk = 0;\n\t\tfor (j = n - 1; j >= 2; j--) {\n\t\t\tif (p[j] == sumd3 * 2) k++;\n\t\t\ttoTheRight[j]=k;\t// j\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\u063c\ufffd j\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd 2\ufffd\u8c21 \ufffd\u01f4\ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t}\n\t\tfor (i = n - 2;i>=1; i--) {\n\t\t\tif (p[i] ==sumd3) {\n\t\t\t\tans += toTheRight[i + 1];\n\t\t\t}\n\t\t}\n\t\n\t}\n\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint a[500005];\nlong long p[500005];\nint toTheRight[500005];\n\nlong long ans;\n\nlong long sum1, sum2, sum3,total_sum,sumd3;\n\nint main() {\n\tint i, j,k,n;\n\tans = 0;\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tp[0] = 0;\n\tfor (i = 1; i <= n ; i++)\n\t\tp[i] = p[i - 1] + a[i];\n\t\n\ttotal_sum = p[n];\n\tif(total_sum % 3 != 0) {\n\t\tans = 0;\n\t}\n\telse {\n\t\tsumd3 = total_sum / 3;\n\t\tk = 0;\n\t\tfor (j = n - 1; j >= 2; j--) {\n\t\t\tif (p[j] == sumd3 * 2) k++;\n\t\t\ttoTheRight[j]=k;\t// j\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\u063c\ufffd j\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd 2\ufffd\u8c21 \ufffd\u01f4\ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t}\n\t\tfor (i = n - 2;i>=1; i--) {\n\t\t\tif (p[i] ==sumd3) {\n\t\t\t\tans += toTheRight[i + 1];\n\t\t\t}\n\t\t}\n\t\n\t}\n\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.9260991580916744, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3768339f5e23ade7b0c945b843f4dfe7", "bug_code_uid": "32d5b8b4e1767cf78eaceaca2607b337", "src_uid": "55297e2a65144323af4d6abd6a6ef050", "apr_id": "bcd2ba217c44068eff1bdd73f144a5a9", "difficulty": 1200, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 200005\n\nvoid merge(int arr[], int l, int m, int r) {\n\tint i, j, k;\n\tint n1 = m - l + 1;\n\tint n2 = r - m;\n\n\tint L[MAX], R[MAX];\n\n\tfor (i = 0; i < n1; i++)\n\t\tL[i] = arr[l + i];\n\tfor (j = 0; j < n2; j++)\n\t\tR[j] = arr[m + 1 + j];\n\n\n\ti = 0;\n\tj = 0;\n\tk = l;\n\twhile (i < n1 && j < n2) {\n\t\tif (L[i] <= R[j]) {\n\t\t\tarr[k] = L[i];\n\t\t\ti++;\n\t\t}\n\t\telse {\n\t\t\tarr[k] = R[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < n1) {\n\t\tarr[k] = L[i];\n\t\ti++;\n\t\tk++;\n\t}\n\n\twhile (j < n2) {\n\t\tarr[k] = R[j];\n\t\tj++;\n\t\tk++;\n\t}\n}\nvoid mergeSort(int arr[], int l, int r) {\n\tif (l < r) {\n\t\tint m = (l + r) / 2;\n\n\t\tmergeSort(arr, l, m);\n\t\tmergeSort(arr, m + 1, r);\n\n\t\tmerge(arr, l, m, r);\n\t}\n}\n\nint main()\n{\n\tint n, k, a[MAX], i;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\n\tmergeSort(a, 0, n - 1);\n\tk--;\n\tif (k == -1)\n\t{\n\t\tif (a[0] == 1)\n\t\t\tprintf(\"-1\");\n\t\telse\n\t\t\tprintf(\"1\");\n\t}\n\telse if (n == 1)\n\t\tprintf(\"%d\", a[k]);\n\telse if (a[k] < a[k + 1] && a[k - 1] < a[k])\n\t\tprintf(\"%d\", a[k + 1] - 1);\n\telse if (a[k] == a[k - 1] || a[k] == a[k + 1])\n\t\tprintf(\"-1\");\n\telse\n\t\tprintf(\"-1\");\n\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define MAX 200005\n\nvoid merge(int arr[], int l, int m, int r) {\n\tint i, j, k;\n\tint n1 = m - l + 1;\n\tint n2 = r - m;\n\n\tint L[MAX], R[MAX];\n\n\tfor (i = 0; i < n1; i++)\n\t\tL[i] = arr[l + i];\n\tfor (j = 0; j < n2; j++)\n\t\tR[j] = arr[m + 1 + j];\n\n\n\ti = 0;\n\tj = 0;\n\tk = l;\n\twhile (i < n1 && j < n2) {\n\t\tif (L[i] <= R[j]) {\n\t\t\tarr[k] = L[i];\n\t\t\ti++;\n\t\t}\n\t\telse {\n\t\t\tarr[k] = R[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < n1) {\n\t\tarr[k] = L[i];\n\t\ti++;\n\t\tk++;\n\t}\n\n\twhile (j < n2) {\n\t\tarr[k] = R[j];\n\t\tj++;\n\t\tk++;\n\t}\n}\nvoid mergeSort(int arr[], int l, int r) {\n\tif (l < r) {\n\t\tint m = (l + r) / 2;\n\n\t\tmergeSort(arr, l, m);\n\t\tmergeSort(arr, m + 1, r);\n\n\t\tmerge(arr, l, m, r);\n\t}\n}\n\nint main()\n{\n\tint n, k, a[MAX], i;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\n\tmergeSort(a, 0, n - 1);\n\tk--;\n\tif (k == -1)\n\t{\n\t\tif (a[0] == 1)\n\t\t\tprintf(\"-1\");\n\t\telse\n\t\t\tprintf(\"1\");\n\t}\n\telse if (n == 1)\n\t\tprintf(\"%d\", a[k]);\n\telse if (a[k] == a[k + 1])\n\t\tprintf(\"-1\");\n\telse\n\t\tprintf(\"%d\", a[k]);\n\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9537892791127541, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "1436df477d27670b1b72a3fa8a121db2", "bug_code_uid": "2152b3237e56b21c0c410f5ebf3e74b8", "src_uid": "fb0e6a573daa0ee7c20d20b0d2b83756", "apr_id": "7db7c55827df04bc0f6e42a2bdbfb695", "difficulty": 1500, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int n, i, m, newHeight, width, j, highestH, highestN = 0;\n    scanf(\"%d\", &n);\n    int stair[n];\n\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &stair[i]);\n    }\n    if(n > 0) highestH = stair[0];\n\n    scanf(\"%d\", &m);\n    int boxHeight[m];\n    for(int i = 0; i < m; i++)\n    {\n        scanf(\"%d\", &width);\n        scanf(\"%d\", &newHeight);\n        width -= 1;\n        if(width > highestN)\n        {\n            if(stair[width] > highestH)\n            {\n                highestH = stair[width];\n                highestN = width;\n            }\n        }\n        boxHeight[i] = highestH;\n        highestH += newHeight;\n        highestN = width;\n    }\n\n    for(i = 0; i < m; i++)\n    {\n        printf(\"%d\\n\", boxHeight[i]);\n    }\n}", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    unsigned long long int n, i, m, newHeight, width, j, highestH, highestN = 0;\n    scanf(\"%I64d\", &n);\n    unsigned long long int stair[n];\n\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%I64d\", &stair[i]);\n    }\n    if(n > 0) highestH = stair[0];\n\n    scanf(\"%I64d\", &m);\n    unsigned long long int boxHeight[m];\n    for(int i = 0; i < m; i++)\n    {\n        scanf(\"%I64d\", &width);\n        scanf(\"%I64d\", &newHeight);\n        width -= 1;\n        if(width > highestN)\n        {\n            if(stair[width] > highestH)\n            {\n                highestH = stair[width];\n                highestN = width;\n            }\n        }\n        boxHeight[i] = highestH;\n        highestH += newHeight;\n        highestN = width;\n    }\n\n    for(i = 0; i < m; i++)\n    {\n        printf(\"%I64d\\n\", boxHeight[i]);\n    }\n}"}
{"similarity_score": 0.36828644501278773, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "6d5b0a8c5f10d206eeb52a8c4f3bd193", "bug_code_uid": "b3682674a17b789c3c0d424b8dbbcab4", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "d6a2db4f644c2921104b6141552ef8ba", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    getchar();\n    int a,b,c,i,s=0;\n    char str[6];\n    int s1[n],s2[n],s3[n];\n    for(i=0;i<n;i++)\n    {\n        gets(str);\n        sscanf(str,\"%d %d %d\",&a,&b,&c);\n        s1[i]=a;\n        s2[i]=b;\n        s3[i]=c;\n    }\n    s1[n]='\\0';\n    s2[n]='\\0';\n    s3[n]='\\0';\n    for(i=0;i<n;i++)\n    {\n        s=s1[i]+s2[i]+s3[i]+s;\n    }\n    if(!s)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n     return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a=0,b=0,c=0;\n    while(n--)\n    {\n        int i,j,k;\n        scanf(\"%d%d%d\",&i,&j,&k);\n        a+=i;\n        b+=j;\n        c+=k;\n    }\n    if(a==0&&b==0&&c==0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9978494623655914, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2a1fe2c8629c99913dad8e7f0ce65394", "bug_code_uid": "ffc05b22cdd01b972ac8fdcffda269ab", "src_uid": "03e5f71810b10318fed344878d226a10", "apr_id": "7520abe30173f748871f6461aa254449", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <cstring>\r\nint main(){\r\n    int t;\r\n    scanf (\"%d\",&t);\r\n    while (t--){\r\n        char str[15];\r\n        scanf(\"%s\",str);\r\n        int len=strlen(str);\r\n        // printf(\"%d\\n\",len);\r\n        if ((str[len-1]-'0')%2==0){\r\n            printf(\"0\\n\");\r\n        }else if ((str[0]-'0')%2==0){\r\n            printf(\"1\\n\");\r\n        }else{\r\n            int flag=0;\r\n            for (int i=0;i<len;i++){\r\n                if ((str[i]-'0')%2==0){\r\n                    flag=1;break;\r\n                }\r\n            }\r\n            if (flag){\r\n                printf(\"2\\n\");\r\n            }else{\r\n                printf(\"-1\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main(){\r\n    int t;\r\n    scanf (\"%d\",&t);\r\n    while (t--){\r\n        char str[15];\r\n        scanf(\"%s\",str);\r\n        int len=strlen(str);\r\n        // printf(\"%d\\n\",len);\r\n        if ((str[len-1]-'0')%2==0){\r\n            printf(\"0\\n\");\r\n        }else if ((str[0]-'0')%2==0){\r\n            printf(\"1\\n\");\r\n        }else{\r\n            int flag=0;\r\n            for (int i=0;i<len;i++){\r\n                if ((str[i]-'0')%2==0){\r\n                    flag=1;break;\r\n                }\r\n            }\r\n            if (flag){\r\n                printf(\"2\\n\");\r\n            }else{\r\n                printf(\"-1\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.991869918699187, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "49a9c5838d0b543f38a7b376f522eb74", "bug_code_uid": "8e2cad391b92b83cab0f7571cb637779", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "ae52ecabd7323571d838ce47f63ec44c", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int i,n,l;\n  char a[1000];\n  scanf(\"%d\",&n);\n\n  for(i=0;i<n;i++)\n  {\n     scanf(\"%s\",a);\n    l=strlen(a);\n    if(l>10)\n    printf(\"%c%d%c\",a[0],l-2,a[l-1]);\n    else\n     {\n    \n    printf(\"%s\",a);\n     }\n  }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int i,n,l;\n  char a[1000];\n  scanf(\"%d\",&n);\n\n  for(i=0;i<n;i++)\n  {\n     scanf(\"%s\",a);\n    l=strlen(a);\n    if(l>10)\n    printf(\"\\n%c%d%c\",a[0],l-2,a[l-1]);\n    else\n     {\n    \n    printf(\"\\n%s\",a);\n     }\n  }\n}\n"}
{"similarity_score": 0.993573264781491, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "c5b96064766465de4f4c49ff825265e0", "bug_code_uid": "24ada8a9332c72f7d08c9ae7c8421d1a", "src_uid": "d549f70d028a884f0313743c09c685f1", "apr_id": "519d58d22a0814191edebb332ba33279", "difficulty": 1300, "tags": ["binary search", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[505][505];\nint p[100000], pn;\nchar ip[100000];\nint main()\n{\n\tint n, m;\n\tint i, j, k;\n\tp[0] = 2;\n\tfor( i=3; i*i<=100000; i+=2 )\n\t\tif ( !ip[i/2] )\n\t\t\tfor( j=i*i; j<100000; j+=2*i )\n\t\t\t\tip[j/2] = 1;\n\tpn = 1;\n\tfor( i=3; i<100000; i+=2 )\n\t\tif ( !ip[i/2] ) p[pn++] = i;\n\n\tscanf(\"%d %d\", &n, &m);\n\tfor( i=0; i<n; i++ )\n\t\tfor( j=0; j<m; j++ )\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tfor( k=0; k<pn; k++ )\n\t\t\t{\n\t\t\t\tif ( x > p[k] ) continue;\n\t\t\t\ta[i][j] = p[k] - x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\tint row, col, M = 2000000000;\n\tfor( i=0; i<n; i++ )\n\t{\n\t\trow = 0;\n\t\tfor( j=0; j<m; j++ )\n\t\t\trow += a[i][j];\n\t\tif ( row < M ) M = row;\n\t}\n\tfor( j=0; j<m; j++ )\n\t{\n\t\tcol = 0;\n\t\tfor( i=0; i<n; i++ )\n\t\t\tcol += a[i][j];\n\t\tif ( col < M ) M = col;\n\t}\n\tprintf(\"%d\\n\", M);\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint a[505][505];\nint p[110000], pn;\nchar ip[110000];\nint main()\n{\n\tint n, m;\n\tint i, j, k;\n\tp[0] = 2;\n\tfor( i=3; i*i<=110000; i+=2 )\n\t\tif ( !ip[i/2] )\n\t\t\tfor( j=i*i; j<110000; j+=2*i )\n\t\t\t\tip[j/2] = 1;\n\tpn = 1;\n\tfor( i=3; i<110000; i+=2 )\n\t\tif ( !ip[i/2] ) p[pn++] = i;\n\n\tscanf(\"%d %d\", &n, &m);\n\tfor( i=0; i<n; i++ )\n\t\tfor( j=0; j<m; j++ )\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tfor( k=0; k<pn; k++ )\n\t\t\t{\n\t\t\t\tif ( x > p[k] ) continue;\n\t\t\t\ta[i][j] = p[k] - x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\tint row, col, M = 2000000000;\n\tfor( i=0; i<n; i++ )\n\t{\n\t\trow = 0;\n\t\tfor( j=0; j<m; j++ )\n\t\t\trow += a[i][j];\n\t\tif ( row < M ) M = row;\n\t}\n\tfor( j=0; j<m; j++ )\n\t{\n\t\tcol = 0;\n\t\tfor( i=0; i<n; i++ )\n\t\t\tcol += a[i][j];\n\t\tif ( col < M ) M = col;\n\t}\n\tprintf(\"%d\\n\", M);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.987535953978907, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "70dbcc12e57e7861ab23f55df1ed18af", "bug_code_uid": "6ab9e812f31037560d821b36960c5b0f", "src_uid": "7ed9265b56ef6244f95a7a663f7860dd", "apr_id": "0165a9a695a9edd0458ca0ec875466af", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n , p1, p2, p3, t1, t2;\n    int i, j, l0, r0, l = 0, r = 0, sum = 0;\n    scanf(\"%d%d%d%d%d%d\", &n, &p1, &p2, &p3, &t1, &t2);\n    \n    scanf(\"%d%d\", &l0, &r0);\n    for (i = 1; i < n; i ++)\n    {\n\tsum += (r0-l0)*p1;\n\tscanf(\"%d%d\", &l, &r);\n\tif (l-r0 >= t1+t2)\n\t{\n\t    sum += p1*t1+p2*t2+p3*(l-r0-t1-t2);\n\t}else if (l-r0 >= t1)\n\t{\n\t    sum += p1*t1+p2*(l-r0-t1);\n\t}else\n\t{\n\t    sum += p1*(l-r0);\n\t}\n\tl0 = l, r0 = r;\n    }\n    sum += (r0-l0)*p1;\n    printf(\"%d\\n\", sum);\n\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n , p1, p2, p3, t1, t2;\n    int i, j, l0, r0, l = 0, r = 0, sum = 0;\n    scanf(\"%d%d%d%d%d%d\", &n, &p1, &p2, &p3, &t1, &t2);\n    \n    scanf(\"%d%d\", &l0, &r0);\n    for (i = 1; i < n; i ++)\n    {\n\tsum += (r0-l0)*p1;\n\tscanf(\"%d%d\", &l, &r);\n\tif (l-r0 >= t1+t2)\n\t{\n\t    sum += p1*t1+p2*t2+p3*(l-r0-t1-t2);\n\t}else if (l-r0 >= t1)\n\t{\n\t    sum += p1*t1+p2*(l-r0-t1);\n\t}else\n\t{\n\t    sum += p1*(l-r0);\n\t}\n\tl0 = l, r0 = r;\n    }\n    sum += (r0-l0)*p1;\n    printf(\"%d\\n\", sum);\n    return 0;\n}\n"}
{"similarity_score": 0.8803245436105477, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "10d2944e8440dec25d0c7607eedf188c", "bug_code_uid": "3fa26ff43c9827f9fabdba4751cff96f", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "e57480c5c6f41ae01d080820374ef90e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int n,a,b,c,d,co=1,max,e=0;\n   scanf(\"%d\",&n);\n    n=n-1;\n    scanf(\"%d%d\",&a,&b);\n    c=a;\n    d=b;\n    while(n--){\n        scanf(\"%d%d\",&a,&b);\n        if(a-c==0 && b-d==0){\n            co++;\n        }else{\n            co=1;\n        }\n        if(co>e){\n            max=co;\n        }\n        e=co;\n        c=a;\n        d=b;\n                    \n    }\n    printf(\"%d\",max);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int n,a,b,c,d,co=1,e=1,max;\n   scanf(\"%d\",&n);\n    n=n-1;\n    scanf(\"%d%d\",&a,&b);\n    c=a;\n    d=b;\n    while(n--){\n        scanf(\"%d%d\",&a,&b);\n        if(a-c==0 && b-d==0){\n            co++;\n            \n        }else{\n            co=1;\n        }\n        \n        if(co>e){\n            e=co;\n            \n        }\n        c=a;\n        d=b;\n        \n            \n    }\n    printf(\"%d\",e);\n    return 0;\n}"}
{"similarity_score": 0.9467680608365019, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "f0658007642b933ba9461d4296fc35a1", "bug_code_uid": "07d0fa03d0ac5ee26b5fea94a5a84c07", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "47205c2544cc498e937d534f9b7d6d2a", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main ()\n{\n    int n, i, a=0, d=0;\n    scanf(\"%d\", &n);\n  //  getchar();\n  char str[100];\n        gets(str);\n    for(i=0; i<n; i++)\n    {\n        char str[100];\n        gets(str);\n        if(str[i] == 'A')\n        {\n            a++;\n        }\n        else if(str[i]== 'D')\n        {\n            d++;\n        }\n    }\n    if(a>d)\n    {\n        printf(\"Anton\\n\");\n    }\n    else if(a<d)\n    {\n        printf(\"Danik\\n\");\n    }\n    else\n    {\n        printf(\"Friendship\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main ()\n{\n    int n, i, a=0, d=0;\n    char str[100005];\n    scanf(\"%d\", &n);\n    gets(str);\n    for(i=0; i<n; i++)\n    {\n        char str[100];\n        gets(str);\n        if(str[i] == 'A')\n        {\n            a++;\n        }\n        else if(str[i]== 'D')\n        {\n            d++;\n        }\n    }\n    if(a>d)\n    {\n        printf(\"Anton\\n\");\n    }\n    else if(a<d)\n    {\n        printf(\"Danik\\n\");\n    }\n    else\n    {\n        printf(\"Friendship\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4258841234010534, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "97f86ceab6531e4108c96c0894307b7e", "bug_code_uid": "15890ae9cd8e98067db5bc4d88b81a00", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "1d6144a1d07eb1e197ba1ef96be9764a", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define N 109\n\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\n\n\nint main() {\n    int q, ans;\n    char s[N];\n    char t[N];\n    scanf(\"%d\", &q);\n    while (q--){\n        ans = 0;\n        scanf(\"%s\", s);\n        scanf(\"%s\", t);\n\n        char *a, *b;\n        a = s;\n        while (*a){\n            b = t;\n            while (*b){\n                if (*b == *a){\n                    // printf(\"matching characters: %c %c\", *a, *b);\n                    ans = 1;\n                    break;\n                }\n                b++;\n            }\n            if (ans == 1)\n                break;\n            a++;\n        }\n        if (ans == 1)\n            printf(\"YES\\n\");\n        else \n            printf(\"NO\\n\");\n\n    }\n\n\n\n\n\n\n\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define N 109\n\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\n\n\nint main() {\n    int q, n, ans;\n    scanf(\"%d\", &q);\n    while (q--) {\n        scanf(\"%d\", &n);\n        if (n%2 == 0)\n            ans =0;\n        else\n            ans = 1;\n        if (n == 2)\n            ans = 2;\n        printf(\"%d\\n\", ans);\n\n\n\n    }\n\n\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.23507109004739338, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "4f41b71138d384d2145bd2dde4a6298b", "bug_code_uid": "615c6c26e2b0afe32ebe29d14ba2cedf", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "d563efba94c1298e259c3380e9bf679a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],b,i,j,x=0,y,w,z=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        y=0;\n        if(a[i]>0)\n        {\n            w=i+1;\n            for(j=i+1;j<(w+a[i]);j++)\n            {\n                if(a[j]<0)\n                {\n                    x++;\n                    y++;\n                }\n                else\n                {\n                    break;\n                }\n            }\n            i=i+y;\n        }\n        else\n        {\n            continue;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==-1)\n        {\n            z++;\n        }\n        else\n        {\n            continue;\n        }\n    }\n    printf(\"%d\",z-x);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,i,a;\n    scanf(\"%d\",&n);\n    int ans=0,prev=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a);\n        if(a==-1&&prev==0){\n            ans++;\n        }\n        else{\n            prev+=a;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n"}
{"similarity_score": 0.1163586584531143, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "2360c6f59cc862401a631350ef900bba", "bug_code_uid": "a3e56b885438c505f383f5c65821059f", "src_uid": "18f2e54e4147e8887da737d5b6639473", "apr_id": "344c207deeaa28743cd08aeb43fd33c9", "difficulty": 900, "tags": ["sortings", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint abs(int );\nint main() { \n    int n,i,j,k,swap;\n    unsigned long a[3],s;\n    scanf(\"%d\",&n);\n  \n    for(k=0;k<n;k++)\n    {   \n            scanf(\"%lu %lu %lu\",&a[0],&a[1],&a[2]);\n            for (i = 0 ; i < 2; i++)\n            {\n                for (j = 0 ; j < 2- i; j++)\n            {\n                    if (a[j] > a[j+1]) /* For decreasing order use < */\n                    {\n                    swap       = a[j];\n                    a[j]   = a[j+1];\n                    a[j+1] = swap;\n                    }\n            }\n            \n            }\n            if(a[0]<a[1])\n            {\n                a[0]=a[0]+1;\n            }\n            if(a[2]>a[1])\n            {\n                a[2]=a[2]-1;\n            }\n            s=abs(a[0]-a[1])+abs(a[1]-a[2])+abs(a[2]-a[0]);\n            printf(\"%lu\\n\",s);\n    }   \n    return 0;\n}", "fixed": "#include<stdlib.h>\n#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int a,b,c,i,j,k,error,minimum=999999999999;\n        scanf(\"%lli %lli %lli\",&a,&b,&c);\n        for(i=-1;i<2;i++)\n        {\n            for(j=-1;j<2;j++)\n            {\n                for(k=-1;k<2;k++)\n                {\n                    error=abs((a+i)-(b+j))+abs((a+i)-(c+k))+abs((c+k)-(b+j));\n                    if(minimum>error)\n                    minimum=error;\n                }\n            }\n        }\n        printf(\"%lli\\n\",minimum);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9949622166246851, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "54ed1ef2220f62e0ac93944c324db3a8", "bug_code_uid": "ba0025d99d27a46223322a467f07851d", "src_uid": "447ebe088a0a60a7a44a3fc76056bc65", "apr_id": "f695e963479296404dfe2b450fe129c2", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n//    int t;\n  //  scanf(\"%d\",&t);\n    //while(t--){\n\tlong long int p,q;\n\tscanf(\"%lld %lld\",&p,&q);\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],i;\n\tfor(i=0;i<n;i++)\n\t    a[i]=-1;\n\tfor(i=0;i<n;i++){\n\t    long long int dick=p/q;\n\t    a[i]=dick;\n\t    p%=q;\n\t    p=p+q-(q=p);\n\t    if(!q)\n\t\tbreak;\n\t}\n\tint l1=i+1;\n\tint b[n];\n\tfor(i=0;i<n;i++)\n\t    scanf(\"%d\",&b[i]);\n\tint flag=1;\n\tif(b[n-1]==1){\n//\t    printf(\"yo\\n\");\n\t    b[n-2]+=1;\n\t    n--;\n\t}\n\tint l2=n;\n//\tprintf(\"l1=%d l2=%d\\n\",l1,l2);\n//\tprintf(\"%d\\n\",n);\n//\tfor(i=0;i<n;i++)\n//\t    printf(\"a[i]=%d b[i]=%d\\n\",a[i],b[i]);\n\tif(l1!=l2)\n\t    flag=0;\n\tfor(i=0;(i<n && flag);i++){\n//\t    printf(\"a[i]=%d b[i]=%d\\n\",a[i],b[i]);\n\t    if(a[i]!=b[i])\n\t\tflag=0;\n\t}\n\tprintf( flag ? \"YES\\n\" : \"NO\\n\" );\n//    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n//    int t;\n  //  scanf(\"%d\",&t);\n    //while(t--){\n\tlong long int p,q;\n\tscanf(\"%lld %lld\",&p,&q);\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],i;\n\tfor(i=0;i<n;i++)\n\t    a[i]=-1;\n\tfor(i=0;i<n;i++){\n\t    long long int dick=p/q;\n\t    a[i]=dick;\n\t    p%=q;\n\t    p=p+q-(q=p);\n\t    if(!q)\n\t\tbreak;\n\t}\n\tint l1=i+1;\n\tint b[n];\n\tfor(i=0;i<n;i++)\n\t    scanf(\"%d\",&b[i]);\n\tint flag=1;\n\tif(b[n-1]==1 && n!=1){\n//\t    printf(\"yo\\n\");\n\t    b[n-2]+=1;\n\t    n--;\n\t}\n\tint l2=n;\n//\tprintf(\"l1=%d l2=%d\\n\",l1,l2);\n//\tprintf(\"%d\\n\",n);\n//\tfor(i=0;i<n;i++)\n//\t    printf(\"a[i]=%d b[i]=%d\\n\",a[i],b[i]);\n\tif(l1!=l2)\n\t    flag=0;\n\tfor(i=0;(i<n && flag);i++){\n//\t    printf(\"a[i]=%d b[i]=%d\\n\",a[i],b[i]);\n\t    if(a[i]!=b[i])\n\t\tflag=0;\n\t}\n\tprintf( flag ? \"YES\\n\" : \"NO\\n\" );\n//    }\n    return 0;\n}\n"}
{"similarity_score": 0.678589170392449, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "400cbe2d37e08576156989c01af4a34e", "bug_code_uid": "3f533cce72e8b208867de4fb12bb47e7", "src_uid": "e1481b9d940407da75e11355b580f459", "apr_id": "94ed8763992df4bc5c154b53b16cd28f", "difficulty": 1200, "tags": ["sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        int x[100],p[100],a,b,swap;\n        scanf(\"%d%d\",&a,&b);\n        for(int i=1; i<=a; i++)\n        {\n            scanf(\"%d\",&x[i]);\n        }\n        for(int i=1; i<=b; i++)\n        {\n            scanf(\"%d\",&p[i]);\n        }\n        for(int i=1; i<=a-1; i++)\n        {\n            for(int k=1; k<=b; k++)\n            {\n                if(i==p[k])\n                {\n                    for(int j=i+1; j<=a; j++)\n                    {\n                        if(x[i]>x[j])\n                        {\n                            swap=x[i];\n                            x[i]=x[j];\n                            x[j]=swap;\n                        }\n                    }\n                }\n            }\n        }\n        int cnt=1;\n        for(int i=1; i<a; i++)\n        {\n            if(x[i+1]<x[i]){\n                cnt=0;\n                break;\n            }\n        }\n        if(cnt)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        int x[100],p[100],a,b,swap;\n        scanf(\"%d%d\",&a,&b);\n        for(int i=1; i<=a; i++)\n        {\n            scanf(\"%d\",&x[i]);\n        }\n        for(int i=1; i<=b; i++)\n        {\n            scanf(\"%d\",&p[i]);\n        }\n        for(int i=1; i<=a; i++)\n        {\n            for(int j=1; j<=b; j++)\n            {\n                if(p[j]<=a-1)\n                {\n                    if(x[p[j]]>x[p[j]+1])\n                    {\n                        swap=x[p[j]];\n                        x[p[j]]=x[p[j]+1];\n                        x[p[j]+1]=swap;\n                    }\n                }\n            }\n        }\n        int cnt=1;\n        for(int i=1; i<a; i++)\n        {\n            if(x[i+1]<x[i])\n            {\n                cnt=0;\n                break;\n            }\n        }\n        if(cnt)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n}"}
{"similarity_score": 0.9512195121951219, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2ba5060453c469a324e43b5158e31762", "bug_code_uid": "28dc3ca127bbec1d47b7a6d1e3c2d070", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "742e81f23cecf28c15f19828d1c493e0", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int c[100005]={0};\n    int m,n,i,k=0;\n    scanf(\"%d   %d\",&m,&n);\n    int arr[m],brr[n],crr[m];\n    for(i=0;i<m;i++)\n        scanf(\"%d\",&arr[i]);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&brr[i]);\n    for(i=m-1;i>=0;i--)\n    {\n        if(c[arr[i]]==0)\n        {\n            c[arr[i]]=1;\n            k++;\n            crr[i]=k;\n        }\n        else\n            crr[i]=k;\n    }\n    for(i=0;i<m;i++)\n        printf(\"%d \\n\",crr[i]);\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d \\n\",crr[brr[i]-1]);\n    }\n    return 0;\n}\n\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int c[100005]={0};\n    int m,n,i,k=0;\n    scanf(\"%d   %d\",&m,&n);\n    int arr[m],brr[n],crr[m];\n    for(i=0;i<m;i++)\n        scanf(\"%d\",&arr[i]);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&brr[i]);\n    for(i=m-1;i>=0;i--)\n    {\n        if(c[arr[i]]==0)\n        {\n            c[arr[i]]=1;\n            k++;\n            crr[i]=k;\n        }\n        else\n            crr[i]=k;\n    }\n\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d \\n\",crr[brr[i]-1]);\n    }\n    return 0;\n}\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.5491124260355029, "equal_cnt": 20, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "e18016b71bea8309b3f3980d3542f5fa", "bug_code_uid": "8ad54d3fc4a48560c19bec8b17fe886c", "src_uid": "8f00837e04627e445dfb8b6cd0216640", "apr_id": "8ff6756a33fcf13179fe5bb03c9432b9", "difficulty": 900, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,s,k=-1;\n        scanf(\"%d\",&a);\n        char arr[a];\n        scanf(\"%s\",arr);\n        for(s=a-1;s>=0;s--)\n        {\n            if((arr[s]-48)%2!=0)\n            {\n                break;\n            }\n        }\n        int sum=0;\n        for(int i=0;i<=s;i++)\n        {\n            sum+=(arr[i]-48);\n        }\n        if(sum!=0 && sum%2==0)\n        {\n            printf(\"%s\\n\",arr);\n        }\n        else\n        {\n        for(int i=0;i<s;i++)\n        {\n            if((arr[i]-48)%2!=0)\n            {\n                k=i;\n            }\n        }\n        if(k==-1)\n        {\n            printf(\"-1\\n\");\n        }\n        else\n        {\n            for(int i=0;i<=s;i++)\n            {\n                if(i!=k)\n                {\n                    printf(\"%c\",arr[i]);\n                }\n            }\n            printf(\"\\n\");\n        }\n        }\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,j,k1=-1,k2=-1;\n        scanf(\"%d\",&a);\n        char arr[a];\n        scanf(\"%s\",arr);\n        for(int i=0;i<a;i++)\n        {\n            if((arr[i]-48)%2!=0)\n            {\n                k1=(arr[i]-48);\n                j=i;\n                break;\n            }\n        }\n        for(int i=j+1;i<a;i++)\n        {\n            if((arr[i]-48)%2!=0)\n            {\n                k2=(arr[i]-48);\n                j=i;\n                break;\n            }\n        }\n        if(k1>=0 && k2>=0)\n        {\n            printf(\"%d%d\\n\",k1,k2);\n        }\n        else\n        {\n            printf(\"-1\\n\");\n        }\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.6812749003984063, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "8e076da2dce2307b8bcf8cca3d2c5c46", "bug_code_uid": "c0aef4069f1708d8d55d5fb8fd9baa58", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "b8bebaa03b653b0b8101b78ced8f5099", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    char a[6];\r\n    int t,c = 0,d = 0;\r\n    scanf(\"%d\",&t);\r\n    for(int i = 0; i < t; i++)\r\n    {\r\n        for(int j  = 0; j < 6; j++)\r\n        {\r\n            scanf(\"%c\",&a[i]);\r\n        }\r\n        for(int j  = 0; j < 3; j++){\r\n            c++;\r\n        }\r\n        for(int j  = 3; j < 6; j++){\r\n            d++;\r\n        }\r\n        if(c == d){\r\n            printf(\"YES\");\r\n        }\r\n        else\r\n            printf(\"NO\");\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int a,t,b;\r\n    scanf(\"%d\",&t);\r\n    for(int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\",&a);\r\n        int sum = 0;\r\n        for(int j = 0; j < 3; j++)\r\n        {\r\n            sum = sum + a % 10;\r\n            a = a / 10;\r\n        }\r\n        int sum1 = 0;\r\n        for(int j = 0; j < 3; j++)\r\n        {\r\n            sum1 = sum1 + a % 10;\r\n            a = a / 10;\r\n        }\r\n        if(sum == sum1){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.865934065934066, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "dfc231405cd2d55e2489f71db6467398", "bug_code_uid": "53f7b36751b759be6cdb5c1f83076422", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "b48dddc33542c1221906796bf610ae90", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <cstdio>\nint main(){\n\tint n,m;\n\tscanf(\"%u%u\",&n,&m);\n\tif(n<1||m<1){ puts(\"0\"); goto end; }\n\tprintf(\"%u\\n1 1\\n\",n+m-1);\n\twhile(n>1) printf(\"%u 1\\n\",n--);\n\twhile(m>1) printf(\"1 %u\\n\",m--);\n\tend:\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n    int n,m;\n    scanf(\"%u%u\",&n,&m);\n    if(n<1||m<1){ puts(\"0\"); goto end; }\n    printf(\"%u\\n1 1\\n\",n+m-1);\n    while(n>1) printf(\"%u 1\\n\",n--);\n    while(m>1) printf(\"1 %u\\n\",m--);\n    end:\n    return 0;\n}\n"}
{"similarity_score": 0.4074074074074074, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a019d95fa97d349cda3f7e8d992ba729", "bug_code_uid": "a821246d8b3ece38d5dd0fc0bb623a84", "src_uid": "2584fa8c1adb1aa8cd5c28a8610ff72d", "apr_id": "0cb82bda217a55b75aac23c71d6cd06b", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tlong long a, temp = 0, temp2 = 0;\n\tscanf(\"%I64d\",&a);\n\twhile(a > 0){\n        if(a % 7 == 0){\n            temp2 = a/7;\n            for(int i = 0; i < temp2; i++){\n                 temp = temp*10 + 7;\n\n            }\n            a = 0;\n            break;\n        }else{\n            a -= 4;\n            temp = temp*10 + 4;\n        }\n    }\n    if(a == 0){\n        printf(\"%I64d\",temp);\n    }else{\n        printf(\"-1\");\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    long long a = 0;\n    int seven = 0, four = 0;\n\tscanf(\"%I64d\",&a);\n    while(a > 0){\n        if(a % 7 == 0){\n            for(int i = 0; i < a/7; i++){\n                seven++;\n            }\n            a=0;\n        }else{\n            a-=4;\n            four++;\n        }\n    }\n    if(a == 0){\n        for(int i = 0; i < four; i++){\n            printf(\"4\");\n        }\n        for(int i = 0; i < seven; i++){\n            printf(\"7\");\n        }\n    }else{\n        printf(\"-1\");\n    }\n}\n"}
{"similarity_score": 0.9635761589403974, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b70519890bc6a477666767ae8083cae4", "bug_code_uid": "d56d90dae5253fdfa722c629b5546af7", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "69b11621fc26a4d5e1cc14491284a7c5", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,j,sum1=0,sum2=0,sum3=0,flag;\n    scanf(\"%d\",&n);\n\n    int array[n][3];\n\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            scanf(\"%d\",&array[i][j]);\n        }\n    }\n\n\n    for(j=0; j<n; j++)\n    {\n\n        sum1+=array[j][0] ;\n    }\n\n    for(j=0; j<n; j++)\n    {\n\n        sum2+=array[j][1] ;\n    }\n\n    for(j=0; j<n; j++)\n    {\n\n        sum3+=array[j][2] ;\n    }\n\n    printf(\"%d  %d  %d\\n\",sum1,sum2,sum3);\n\n    if(sum1!=0||sum2!=0||sum3!=0)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n\n\n\n\n    printf(\"YES\");\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,j,sum1=0,sum2=0,sum3=0,flag;\n    scanf(\"%d\",&n);\n\n    int array[n][3];\n\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            scanf(\"%d\",&array[i][j]);\n        }\n    }\n\n\n    for(j=0; j<n; j++)\n    {\n\n        sum1+=array[j][0] ;\n    }\n\n    for(j=0; j<n; j++)\n    {\n\n        sum2+=array[j][1] ;\n    }\n\n    for(j=0; j<n; j++)\n    {\n\n        sum3+=array[j][2] ;\n    }\n\n    if(sum1!=0||sum2!=0||sum3!=0)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n\n\n\n\n    printf(\"YES\");\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9875389408099688, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ceead9bb64f502aaa35607a16369b914", "bug_code_uid": "b8000405da6cebd3bd8f0062586a33ca", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "e11b540a1741bc792abb075313b973ae", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int t,i,x=1,a[1001];\r\n    scanf(\"%d\\n\",&t);\r\n    for(i=1;i<=2000;i++)\r\n    {\r\n        if(i%3!=0 && i%10!=3)\r\n        {\r\n            a[x]=i;\r\n            x++;\r\n        }\r\n    }\r\n    while(t--)\r\n    {\r\n        int k;\r\n        scanf(\"%d\",&k);\r\n        printf(\"%d\\n\",a[k]);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int t,i,x=1,a[1001];\r\n    scanf(\"%d\\n\",&t);\r\n    for(i=1;i<=1666;i++)\r\n    {\r\n        if(i%3!=0 && i%10!=3)\r\n        {\r\n            a[x]=i;\r\n            x++;\r\n        }\r\n    }\r\n    while(t--)\r\n    {\r\n        int k;\r\n        scanf(\"%d\",&k);\r\n        printf(\"%d\\n\",a[k]);\r\n    }\r\n}"}
{"similarity_score": 0.9791183294663574, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "17b6a2b240f0701c315d9b5e4efef145", "bug_code_uid": "2587cb5230e8851ab4dab90995fb17dd", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "999194a4594dba0163a063646578d52c", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,x=0,a;\n    char str[3000],word[26]=\"abcdefghijklmnopqrstuvwxyz\";\n    scanf(\"%s\",&str);\n    for(a=0;a<26;a++)\n    {\n       for(i=0;i<strlen(str);i++)\n        {\n            if(str[i]==word[a]&&str[i]!='{'&&str[i]!=','&&str[i]!='}'&&str[i]!=' ')\n                {\n                x++;\n                break;\n                }\n        }\n   }\n    printf(\"%d\",x);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,x=0,a;\n    char str[3000],word[26]=\"abcdefghijklmnopqrstuvwxyz\";\n    gets(str);\n    for(a=0;a<26;a++)\n    {\n       for(i=0;i<strlen(str);i++)\n        {\n            if(str[i]==word[a]&&str[i]!='{'&&str[i]!=','&&str[i]!='}'&&str[i]!='  ')\n                {\n                x++;\n                break;\n                }\n        }\n   }\n    printf(\"%d\",x);\n    return 0;\n}\n"}
{"similarity_score": 0.05555555555555555, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "33bef3411dbd4435b94e483c53cec60c", "bug_code_uid": "1c56754723696a68f6a9156c11f0b43b", "src_uid": "96ba63c7fea9bd0a5ddd8ffc886da153", "apr_id": "a7da14134373546ffaa4c63e3234abcf", "difficulty": 1800, "tags": ["dp", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid swap(int *a,int* b)\r\n{\r\n\tint t=*a;\r\n\t*a=*b;\r\n\t*b=t;\r\n}\r\n\r\nvoid quicksort(int* array,int start,int end)\r\n{\r\n\tif(start<end) {\r\n\t\tint pivot=array[end];\r\n\t\tint j=start-1;\r\n\t\tfor(int i=start;i<=end-1;i++) {\r\n\t\t\tif(array[i]<pivot) {\r\n\t\t\t\tj++;\r\n\t\t\t\tswap(&array[i],&array[j]);\r\n\t\t\t}\r\n\t\t}\r\n\tswap(&array[j+1],&array[end]);\r\n\tquicksort(array,start,j);\r\n\tquicksort(array,j+2,end);\t\r\n\t}\r\n}\r\n\r\nlong long int calc(int* array,int low,int high)\r\n{\r\n\tif(low<high) {\r\n\t\tlong long int a=calc(array,low+1,high),b=calc(array,low,high-1);\r\n\t\tif(a>=b) return array[high]-array[low]+b;\r\n\t\telse return array[high]-array[low]+a;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nint main()\r\n{\r\n\tint a;\r\n\tscanf(\"%d\",&a);\r\n\tint list[a];\r\n\tfor(int i=0;i<a;i++) scanf(\"%d\",&list[i]);\r\n\tquicksort(list,0,a-1);\r\n\tprintf(\"%lld\",calc(list,0,a-1));\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#define ll long long\r\nint b[2010];\r\nll c[2010][2010];\r\nint comp(const void* a,const void* b)\r\n{\r\n\treturn *(int*)a-*(int*)b;\r\n}\r\n\r\nint main()\r\n{\r\n\tint a;\r\n\tll d,e;\r\n\tscanf(\"%d\",&a);\r\n\tfor(int i=1;i<=a;i++) scanf(\"%d\",&b[i]);\r\n\tqsort(b+1,a,4,comp);\r\n\tfor(int i=2;i<=a;i++) {\r\n\t\tfor(int j=0;j<=a-i;j++) {\r\n\t\t\td=c[j+2][i+j],e=c[j+1][i+j-1];\r\n\t\t\tc[j+1][i+j]=(ll)b[i+j]-(ll)b[j+1]+(d<e?d:e);\r\n\t\t}\r\n\t}\r\n\tprintf(\"%lld\\n\",c[1][a]);\r\n}\r\n"}
{"similarity_score": 0.9753521126760564, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fde47e4b34f09bf2ea99f9108081edf8", "bug_code_uid": "4cad91793c177258cb9230c4b0e2be68", "src_uid": "19f2c21b18e84f50e251b1dfd557d32f", "apr_id": "67e0788163957c91356e4bc5edee7ce1", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char s[1000000];\n    int i, j, l, left=0, right=0;\n    gets(s);\n    for(l=0; s[l]!='^' ;l++)\n        ;\n    for(i=0; s[i]!='^'; i++)\n    {\n        if(s[i]=='=')\n            continue;\n        else\n            left= left+ (s[i]-48)*(l-i);\n    }\n    for(j=i+1; s[j]!='\\0'; j++)\n    {\n       if(s[j]=='=')\n            continue;\n        else\n            right= right+ (s[j]-48)*(j-l);\n    }\n    if(left>right)\n        printf(\"left\");\n    else if(left<right)\n        printf(\"right\");\n    else\n        printf(\"balance\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char s[1000000LL];\n    long long i, j, l, left=0, right=0;\n    gets(s);\n    for(l=0; s[l]!='^' ;l++)\n        ;\n    for(i=0; s[i]!='^'; i++)\n    {\n        if(s[i]=='=')\n            continue;\n        else\n            left= left+ (s[i]-48)*(l-i);\n    }\n    for(j=i+1; s[j]!='\\0'; j++)\n    {\n       if(s[j]=='=')\n            continue;\n        else\n            right= right+ (s[j]-48)*(j-l);\n    }\n    if(left>right)\n        printf(\"left\");\n    else if(left<right)\n        printf(\"right\");\n    else\n        printf(\"balance\");\n    return 0;\n}\n"}
{"similarity_score": 0.9971631205673759, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "be10c3267f7e3019ca72cbd4015c205b", "bug_code_uid": "367f7cd8cd4a86cf77a1c3a222cd3f52", "src_uid": "4867d014809bfc1d90672b32ecf43b43", "apr_id": "4b766806dad114f186286dded4814f70", "difficulty": 1900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define M 100005\n#define MM 1000000007\nint a[M];\n__int64 sum=0,s=1;\n\n__int64 solve(__int64 x,__int64 b)\n{\n    __int64 r=1,base=x;\n    while (b)\n    {\n\n    if (b&1)\n        r=r*base%MM;\n    base=base*base%MM;\n    b>>=1;\n    }\n    return r;\n}\n\nint main()\n{\n    int n,m;\n    __int64 x;\n\n    int i;\n    scanf (\"%d%I64d\",&n,&x);\n    for (i=1;i<=n;i++)\n    {\n        scanf (\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    sum-=a[n];\n    m=0;\n    for (i=a[n];i>0;i++)\n    {\n        while (n&&a[n]==i)\n        {\n            n--;\n            m++;\n        }\n        if (m%x)\n            break;\n        sum++;\n        m/=x;\n    }\n   printf (\"%I64d\\n\", solve(x,sum));\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define M 100005\n#define MM 1000000007\nint a[M];\n__int64 sum=0,s=1;\n\n__int64 solve(__int64 x,__int64 b)\n{\n    __int64 r=1,base=x;\n    while (b)\n    {\n\n    if (b&1)\n        r=r*base%MM;\n    base=base*base%MM;\n    b>>=1;\n    }\n    return r;\n}\n\nint main()\n{\n    int n,m;\n    __int64 x;\n\n    int i;\n    scanf (\"%d%I64d\",&n,&x);\n    for (i=1;i<=n;i++)\n    {\n        scanf (\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    sum-=a[n];\n    m=0;\n    for (i=a[n];i>0;i--)\n    {\n        while (n&&a[n]==i)\n        {\n            n--;\n            m++;\n        }\n        if (m%x)\n            break;\n        sum++;\n        m/=x;\n    }\n   printf (\"%I64d\\n\", solve(x,sum));\n    return 0;\n}\n"}
{"similarity_score": 0.5905383360522023, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "848911277b2c260d514aa8953cf9a12d", "bug_code_uid": "2bdd9bcfb17f6bbfb176bd8ff3516c15", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "aa12e12699dbca3d694c0c2fa92314c4", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 100000\n\nint main() {\n\tstatic char s[N + 1];\n\tstatic int kk[N];\n\tint n, i, cnt;\n\n\tscanf(\"%d%s\", &n, s);\n\tfor (i = 0; i < n; i++)\n\t\tkk[s[i] - 'a']++;\n\tcnt = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (kk[s[i] - 'a'] > 1)\n\t\t\tcnt += --kk[s[i] - 'a'];\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 100000\n\nint main() {\n\tstatic char s[N + 1], used[N];\n\tint n, i, cnt;\n\n\tscanf(\"%d%s\", &n, s);\n\tif (n > 26) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tcnt = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (!used[s[i] - 'a']) {\n\t\t\tcnt++;\n\t\t\tused[s[i] - 'a'] = 1;\n\t\t}\n\tprintf(\"%d\\n\", n - cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6841397849462365, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "8b5bddc6a67f3f393e8ce877d7fa6784", "bug_code_uid": "3d846a3dbc5c963da62280b1b0ed126b", "src_uid": "fc547fc83ebbcc3c058a069ef9fef62c", "apr_id": "f582742bbc75369f3e46125a17acd65e", "difficulty": 1100, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\n#define ll long long\r\nint asc(const void *pa, const void *pb) { \r\n    if (*(ll *)pa - *(ll *)pb > 0) return 1;\r\n    else return -1; \r\n}\r\nstatic inline ll min(ll a, ll b) { return a < b ? a : b; }\r\nstatic inline ll max(ll a, ll b) { return a > b ? a : b; }\r\n\r\nvoid testcase() {\r\n    ll a[3], m;\r\n    scanf(\"%lld%lld%lld%lld\", &a[0], &a[1], &a[2], &m);\r\n    ll maxCol = max(a[0] - 1, 0) + max(a[1] - 1, 0) + max(a[2] - 1, 0);\r\n    qsort(a, 3, sizeof(a[0]), asc);\r\n    ll minCol = min(0, a[2] - min(a[1] - a[0], a[2] - a[0]) - 1);\r\n    if (minCol <= m && m <= maxCol) printf(\"YES\\n\");\r\n    else printf(\"NO\\n\");\r\n    return;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; ++i) testcase();\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#define ll long long\r\nint asc(const void *pa, const void *pb) {\r\n    if (*(ll *)pa > *(ll *)pb) return 1;\r\n    return -1;\r\n}\r\n\r\nvoid testcase() {\r\n    ll a[3], m;\r\n    scanf(\"%lld%lld%lld%lld\", &a[0], &a[1], &a[2], &m);\r\n    qsort(a, 3, sizeof(a[0]), asc);\r\n    // * A * A * A * A * A *\r\n    // n - 1 gaps to fill\r\n    ll maxCol = a[0] + a[1] + a[2] - 3;\r\n    ll minCol;\r\n    if (a[1] + a[0] >= a[2] - 1) minCol = 0;\r\n    else minCol = a[2] - 1 - a[1] - a[0];\r\n    if (minCol <= m && m <= maxCol) printf(\"YES\\n\");\r\n    else printf(\"NO\\n\");\r\n    return;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; ++i) testcase();\r\n    return 0;\r\n}"}
{"similarity_score": 0.8869565217391304, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1fff0a4f008ec8acebbdf98ce035d699", "bug_code_uid": "61d44fb58eb524ad4f8bdc536728302f", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "96ffbae0bb7df1eef731d9700a519576", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n\tint n,i,max=1;\n\tlong long int a[100005];\n\tscanf(\"%d\",&n);\n\tscanf(\"%I64d\",&a[0]);\n\tfor(i=1;i<n;i++) {\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tif(a[i]>a[i-1]) {\n\t\t\tmax++;\n\t\t}\n\t\telse {\n\t\t\tmax=1;\n\t\t}\n\t}\n\tprintf(\"%d\",max);\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n\tint n,i,max=1,max_store=1;\n\tlong long int a[100005];\n\tscanf(\"%d\",&n);\n\tscanf(\"%I64d\",&a[0]);\n\tfor(i=1;i<n;i++) {\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tif(a[i]>a[i-1]) {\n\t\t\tmax++;\n\t\t\tif(max>max_store) {\n\t\t\t\tmax_store=max;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tmax=1;\n\t\t}\n\t}\n\tprintf(\"%d\",max_store);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.7995139732685298, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "0ec7b58bff10a528c4afbaa5728e8e94", "bug_code_uid": "1cf69d763eed7cfce4bda8e2502bc6a3", "src_uid": "e65b2a81689bb13b90a02a9ccf1d4125", "apr_id": "abb93fb47e8eb1fc77fb1bb4da125661", "difficulty": 1100, "tags": ["binary search", "ternary search", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,d,r,x,m=0;\n    scanf(\"%d\",&t);\n    x=0;\n    while(t--)\n    {\n\n        scanf(\"%d%d\",&n,&d);\n        if(d%(x+1)==0)\n            r=0;\n        else\n            r=1;\n        m=x+d/(x+1)+r;\n        if(n>=m)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n        x++;\n\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,d,r,x,m=0;\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        x=0;\n        scanf(\"%d%d\",&n,&d);\n        while(x<=sqrt(d))\n        {\n            if(d%(x+1)==0)\n                r=0;\n            else\n                r=1;\n            m=x+d/(x+1)+r;\n            if(n>=m)\n                break;\n                x++;\n        }\n        if(n>=m)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.6742268041237114, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "86ff72277e42f46786be807cf4c3be28", "bug_code_uid": "f062c71bace3c3e157884522b801fe5d", "src_uid": "357dcc8fb7783d878cd2c4ed34eb437e", "apr_id": "45c821ac6fdcc340eae7cf39e57acae9", "difficulty": 1000, "tags": ["brute force", "dp", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\nint t,flag;\r\nscanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        flag=0;\r\n        char a[100];\r\n        scanf(\"%s\",a);\r\n        for(int i=0;i<strlen(a)-2;i++){\r\n            if(a[i]=='1' && a[i+1]=='0' && a[i+2]=='0'){\r\n                printf(\"NO\\n\");\r\n                flag=1;\r\n            }\r\n        }\r\n        if(!flag)\r\n            printf(\"YES\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main(){\r\nint t;\r\nscanf(\"%d\\n\",&t);\r\n    for(int i=0;i<t;i++){\r\n        int flag=0;\r\n        char s[100];\r\n        scanf(\"%s\",s);\r\n        for(int i=0;i<strlen(s)-1;i++){\r\n            if(s[i]==s[i+1]){\r\n                if(s[i]=='1')\r\n                    flag=1;\r\n                if(s[i]=='0' && flag){\r\n                    printf(\"NO\\n\");\r\n                    flag=2;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(flag==1 || flag==0)\r\n            printf(\"YES\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.965470548408937, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b32996b9988d90e23108cad42f0b0ec2", "bug_code_uid": "7b54cc155f45317f1821aa0154a84fd0", "src_uid": "86d5da999415fa75b3ee754a2a28605c", "apr_id": "1b06bc650b480db8ce236ac5643e69e5", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\ninline void quickSort(int[], int, int);\n\nint main()\n{\n\tint A[300001];\n\tint n, i;\n\n\tsrand(time(NULL));\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &A[i]);\n\tquickSort(A, 0, n - 1);\n\n\tlong long result = 0;\n\tfor (i = 0; i < n; i++)\n\t\tresult += abs((i + 1) - A[i]);\n\n\tprintf(\"%d\", result);\n\treturn 0;\n}\n\nvoid quickSort(int A[], int L, int H)\n{\n\tint piv, temp, i, j;\n\n\tif (L >= H) return;\n\n\tpiv = A[rand() % (H - L + 1) + L];\n\ti = L;\n\tj = H;\n\tdo\n\t{\n\t\twhile (piv > A[i]) i++;\n\t\twhile (piv < A[j]) j--;\n\t\tif (i <= j)\n\t\t{\n\t\t\tif (i < j)\n\t\t\t{\n\t\t\t\ttemp = A[i];\n\t\t\t\tA[i] = A[j];\n\t\t\t\tA[j] = temp;\n\t\t\t}\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t} while (i <= j);\n\tquickSort(A, L, j); quickSort(A, i, H);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nvoid quickSort(int[], int, int);\n\nint main()\n{\n\tint A[300001];\n\tint n, i;\n\n\tsrand(time(NULL));\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &A[i]);\n\tquickSort(A, 0, n - 1);\n\n\tfloat result = 0.0f;\n\tfor (i = 0; i < n; i++)\n\t\tresult += abs((i + 1) - A[i]);\n\n\tprintf(\"%0.0f\", result);\n\treturn 0;\n}\n\nvoid quickSort(int A[], int L, int H)\n{\n\tint piv, temp, i, j;\n\n\tif (L >= H) return;\n\n\tpiv = A[rand() % (H - L + 1) + L];\n\ti = L;\n\tj = H;\n\tdo\n\t{\n\t\twhile (piv > A[i]) i++;\n\t\twhile (piv < A[j]) j--;\n\t\tif (i <= j)\n\t\t{\n\t\t\tif (i < j)\n\t\t\t{\n\t\t\t\ttemp = A[i];\n\t\t\t\tA[i] = A[j];\n\t\t\t\tA[j] = temp;\n\t\t\t}\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t} while (i <= j);\n\tquickSort(A, L, j); quickSort(A, i, H);\n}\n"}
{"similarity_score": 0.9846431797651309, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "49d76e29b8c2bbf10c9278e6931972ef", "bug_code_uid": "9a6cbd8089381261116c6fafcaba5480", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "9a0ec536aea44d4cd665295399fadc47", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int i,j,k=0,n,t,A;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        A=180;\n        k=0;\n        if(n<60)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n        for(j=3;A/j<=n;j++)\n        {\n            if(A/j==n)\n            {\n                printf(\"YES\\n\");\n                k=1;\n                break;\n            }\n            A=A+180;\n        }\n        if(k==0)\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int i,j,k=0,n,t;\n    float A=180;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        A=180;\n        k=0;\n        if(n<60)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n        for(j=3;A/j<=n;j++)\n        {\n            if(A/j==n)\n            {\n                printf(\"YES\\n\");\n                k=1;\n                break;\n            }\n            A=A+180;\n        }\n        if(k==0)\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7453237410071942, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "7ba117a6e14c8f21af6b43ad674e6546", "bug_code_uid": "8058d3d4a14da5a232580a79cbed7a9b", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "fec2ec40e7c03f8c41f90d0bcca27553", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n {\n     int k, t;\n     double x, p, n;\n     scanf(\"%d\", &t);\n     while(t--) {\n        scanf(\"%lf\", &n);\n        for(k = 2;  ; k++) {\n            p = pow(2, k) - 1;\n            x = n / p;\n            if(x - (int)x == 0.0) break;\n        }\n        printf(\"%.lf\\n\", x);\n     }\n     return 0;\n\n }\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n {\n     int k, t, y;\n     double x, p, n;\n     scanf(\"%d\", &t);\n     while(t--) {\n        scanf(\"%lf\", &n);\n        for(k = 2;  ; k++) {\n            p = pow(2, k) - 1;\n            x = n / p;\n            y = x;\n            if(x == y) break;\n        }\n        printf(\"%d\\n\", y);\n     }\n     return 0;\n\n }\n"}
{"similarity_score": 0.7742639040348964, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "816ecaa47f682f34dae01ce4fdc750c0", "bug_code_uid": "2885b2c0fe7d6e2c42601dbd833f8685", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "fbb088d8bf7b28e571d40145222f4d14", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<string.h>\n//#include<stdlib.h>\n\n\nint main()\n{\n  int i,n,m;\n  \n  scanf(\"%d%d\",&n,&m);\n  if(n>m)\n    {\n      for(i=1;i<=m;i++)\n        printf(\"BG\");\n        for(i=1;i<=n-m;i++)\n        printf(\"B\");\n     }\n     else\n     {for(i=1;i<=n;i++)\n        printf(\"GB\");\n        for(i=1;i<=m-n;i++)\n        printf(\"G\");\n         \n         }\n  \n  \n  //system(\"pause\");\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n//#include<string.h>\n//#include<stdlib.h>\n\n\nint main()\n{\n  FILE *fin  = fopen (\"input.txt\", \"r\");\n    FILE *fout = fopen (\"output.txt\", \"w\");\n    \n  int i,n,m;\n  \n  fscanf(fin,\"%d%d\",&n,&m);\n  if(n>m)\n    {\n      for(i=1;i<=m;i++)\n        fprintf(fout,\"BG\");\n        for(i=1;i<=n-m;i++)\n        fprintf(fout,\"B\");\n     }\n     else\n     {for(i=1;i<=n;i++)\n        fprintf(fout,\"GB\");\n        for(i=1;i<=m-n;i++)\n        fprintf(fout,\"G\");\n         \n         }\n  \n  \n  //system(\"pause\");\n  return 0;\n}\n"}
{"similarity_score": 0.8279569892473119, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "fb27c2f5c4884c79e3094b1acd748c0c", "bug_code_uid": "1601f86cbd1b73352e2bfa5d9c8bf1a9", "src_uid": "7896740b6f35010af751d3261b5ef718", "apr_id": "448e447290fcaa058cac8caa282f86f0", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,i,j,k;scanf(\"%d\",&n);\n\tfor(i=0;i<=n;i++){\n\t\tfor(j=0;j<(n-i);j++) printf(\"  \");\n\t\tfor(k=0;j<=n;j++,k++) {printf(\"%d \",k);}\n\t\tfor(k--,j=0;j<i;j++){ printf(\"%d \",i-j-1);}\t\n\t\tprintf(\"\\n\");}\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=0;j<i;j++) printf(\"  \");\n\t\tfor(k=0;j<=n;j++,k++)  {printf(\"%d \",k);}k--;\n\t\tfor(k--;k>=0;--k) {printf(\"%d\",k);if(k!=0) printf(\" \");}\t\t\n\t\tprintf(\"\\n\");}\n\t\n\t\n\t\n\t\n\treturn 0;}", "fixed": "#include<stdio.h>\nint main(){\n\tint n,i,j,k;scanf(\"%d\",&n);\n\tfor(i=0;i<=n;i++){\n\t\tfor(j=0;j<(n-i);j++) printf(\"  \");\n\t\tfor(k=0;j<=n;j++,k++) {if(i==0)printf(\"0\");else printf(\"%d \",k);}\n\t\tfor(k--,j=0;j<i;j++){if(i-1==j)printf(\"0\");else printf(\"%d \",i-j-1);}\t\n\t\tprintf(\"\\n\");}\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=0;j<i;j++) printf(\"  \");\n\t\tfor(k=0;j<=n;j++,k++)  {if(i==n)printf(\"0\");else printf(\"%d \",k);}k--;\n\t\tfor(k--;k>=0;k--) {if(k==0)printf(\"0\");else printf(\"%d \",k);}\t\t\n\tif(i!=n)printf(\"\\n\");}\n\t\n\t\n\t\n\t\n\treturn 0;}"}
{"similarity_score": 0.9990521327014218, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "827ef8a1aecd48e4c07ff61bf5300376", "bug_code_uid": "403c6013300185e51ec2fe8fc338f5ae", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "36025487cece53a31d0657dbed9ad87a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int i,t;\n    scanf(\"%d\",&t);\n    long long int r,g,b,max,sum;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld\",&r,&g,&b);\n        sum=0;\n        if(r==g&&g==b)\n            printf(\"Yes\\n\");\n        else\n        {\n            max=r>g?r>b?r:b:g>b?g:b;\n            sum=r+g+b-max;\n            if(sum>=max)\n                printf(\"Yes\\n\");\n            else if(max-2<=sum)\n                printf(\"Yes\\n\");\n            else\n                printf(\"No\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int i,t;\n    scanf(\"%d\",&t);\n    long long int r,g,b,max,sum;\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld\",&r,&g,&b);\n        sum=0;\n        if(r==g&&g==b)\n            printf(\"Yes\\n\");\n        else\n        {\n            max=r>g?r>b?r:b:g>b?g:b;\n            sum=r+g+b-max;\n            if(sum>=max)\n                printf(\"Yes\\n\");\n            else if(max-2<sum)\n                printf(\"Yes\\n\");\n            else\n                printf(\"No\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9608826479438315, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "333ab97612340f22de09873d6bc93b5e", "bug_code_uid": "b1e28342c74a853e2bea8e2ee63d5e22", "src_uid": "c19afaa6c46cd361e0e5ccee61f6f520", "apr_id": "decb973381d457a8b4c8cbe7993eb19e", "difficulty": 1800, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\ntypedef struct{\n    long x;\n    long y;\n}coordenada;\n\nint main(){\n    int i,n,j;\n    scanf(\"%I64d %I64d\",&n,&j);\n    coordenada M[n*2],A[n];\n    scanf(\"%I64d %I64d\",&M[0].x,&M[0].y);\n\n    for(i=0; i<n; i++){\n        scanf(\"%I64d %I64d\",&A[i].x,&A[i].y);\n    }\n    if(j>2*n){\n        j=j%(2*n);\n    }\n    for(i=1; i<=j; i++){\n        M[i].x=2*(A[(i-1)%n].x)-M[i-1].x;\n        M[i].y=2*(A[(i-1)%n].y)-M[i-1].y;\n    }\n\n    printf(\"%I64d %I64d\",M[j].x,M[j].y);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\ntypedef struct{\n    long long x;\n    long long y;\n}coordenada;\n\nint main(){\n    long long i,n,j;\n    scanf(\"%I64d%I64d\",&n,&j);\n    coordenada M[n*2],A[n];\n    scanf(\"%I64d%I64d\",&M[0].x,&M[0].y);\n\n    for(i=0; i<n; i++){\n        scanf(\"%I64d%I64d\",&A[i].x,&A[i].y);\n    }\n    if(j>2*n){\n        j=j%(2*n);\n    }\n    for(i=1; i<=j; i++){\n        M[i].x=2*(A[(i-1)%n].x)-M[i-1].x;\n        M[i].y=2*(A[(i-1)%n].y)-M[i-1].y;\n    }\n\n    printf(\"%I64d %I64d\",M[j].x,M[j].y);\n    return 0;\n}\n"}
{"similarity_score": 0.9972375690607734, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e069f5d1779406dedd7a4e08f6859081", "bug_code_uid": "d6fa3f5374707eb86e3ea90e6a2f1ca5", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "43e2dbc417696d56a4d83c07857d2b89", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main(){\r\nint t;\r\nscanf(\"%d \", &t);\r\n\r\nfor(int i=0;i<t;i++){\r\n   int n = 0;\r\n   scanf(\"%d\",&n);\r\n   \r\n   int d = 1;\r\n   while(1){\r\n     if(d > n) {\r\n         d = d/2;\r\n         break;\r\n     }\r\n       if(d == n) break;\r\n       \r\n       else {\r\n           d = 2*d;\r\n       }\r\n}\r\n    printf(\"%d\\n\",d);\r\n  \r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main(){\r\nint t;\r\nscanf(\"%d \", &t);\r\n\r\nfor(int i=0;i<t;i++){\r\n   int n = 0;\r\n   scanf(\"%d\",&n);\r\n   \r\n   int d = 1;\r\n   while(1){\r\n     if(d > n) {\r\n         d = d/2;\r\n         break;\r\n     }\r\n       if(d == n) break;\r\n       \r\n       else {\r\n           d = 2*d;\r\n       }\r\n}\r\n    printf(\"%d\\n\",d-1);\r\n  \r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.8266666666666667, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "4122f1648a2c5ad6524071615b5a7bc9", "bug_code_uid": "3e5f26c57f0e51ff2d776e6fa1b24b6c", "src_uid": "5aae6b27f35852512a250751ef957ab9", "apr_id": "91b7445debc20c1bb1978727905e84fd", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint funcmid(int a1, int a2);\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,m,i,j;\r\n        scanf(\"%d %d %d %d\",&n,&m,&i,&j);\r\n        int x1,y1,x2,y2;\r\n        x1=funcmid(i,n);\r\n        y1=funcmid(j,m);\r\n        x2=n+1-x1;\r\n        y2=n+1-y1;\r\n        printf(\"%d %d %d %d\\n\",x1,y1,x2,y2);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nint funcmid(int a1, int a2)\r\n{\r\n    int l;\r\n    if(a2%2!=0)\r\n    {\r\n        if(a1<((a2/2)+1))\r\n        l=a2;\r\n        else\r\n        l=1;\r\n        \r\n    }\r\n    if(a2%2==0)\r\n    {\r\n        if(a1>a2/2)\r\n        l=1;\r\n        else\r\n        l=a2;\r\n    }\r\n    return(l);\r\n}", "fixed": "#include <stdio.h>\r\n\r\nlong int funcmid(long int a1,long int a2);\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long int n,m,i,j;\r\n        scanf(\"%ld %ld %ld %ld\",&n,&m,&i,&j);\r\n        long int x1;\r\n        x1>0;\r\n        long int x2;\r\n        x2>0;\r\n        long int y1;\r\n        y1>0;\r\n        long int y2;\r\n        y2>0;\r\n        \r\n        x1=funcmid(i,n);\r\n        y1=funcmid(j,m);\r\n        x2=n+1-x1;\r\n        y2=m+1-y1;\r\n        printf(\"%ld %ld %ld %ld\\n\",x1,y1,x2,y2);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nlong int funcmid(long int a1,long int a2)\r\n{\r\n    long int l;\r\n    if(a2%2!=0)\r\n    {\r\n        if(a1<((a2/2)+1))\r\n        l=a2;\r\n        else\r\n        l=1;\r\n        \r\n    }\r\n    if(a2%2==0)\r\n    {\r\n        if(a1>a2/2)\r\n        l=1;\r\n        else\r\n        l=a2;\r\n    }\r\n    return(l);\r\n}\r\n"}
{"similarity_score": 0.9830205540661304, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "33d4d010a626a27af4e271abba86864d", "bug_code_uid": "f2583c1e5e3f24d57a385e81e1c5692d", "src_uid": "cd6bc23ea61c43b38c537f9e04ad11a6", "apr_id": "533d97fc7017aa43f631f1c36f0ace86", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar a[110][110],b[110][110];\nint max(int a,int b)\n{\n\tif(a>=b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint min(int a,int b)\n{\n\tif(a<=b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint main()\n{\n\tint n,m,i,j,maxx,maxy,minx,miny,length,width,flag=0,count=0,countb=0,side;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(a[i][j]=='B')\n\t\t\t{\n\t\t\t\tif(flag==0)\n\t\t\t\t{\n\t\t\t\t\tminx=i;\n\t\t\t\t\tmaxx=i;\n\t\t\t\t\tminy=j;\n\t\t\t\t\tmaxy=j;\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\tmaxx=max(i,maxx);\n\t\t\t\tminx=min(i,minx);\n\t\t\t\tmaxy=max(j,maxy);\n\t\t\t\tminy=min(j,miny);\n\t\t\t\tcountb++;\n//\tprintf(\"i:%d\\n\",i);\n//\tprintf(\"j:%d\\n\",j);\n\t\t\t}\n\t\t}\n\t}\n\tlength=maxy-miny+1;\n\twidth=maxx-minx+1;\n//\tprintf(\"%d\\n\",minx);\n//\tprintf(\"%d\\n\",maxx);\n//\tprintf(\"%d\\n\",miny);\n//\tprintf(\"%d\\n\",maxy);\n//\tprintf(\"%d\\n\",length);\n//\tprintf(\"%d\\n\",width);\n\tside=max(length,width);\n\tif((n<side)||(m<side))\n\t\tcount=-1;\n\telse\n\t{\n/*\tfor(i=minx;i<=maxx;i++)\n\t{\n\t\tfor(j=miny;j<=maxy;j++)\n\t\t{\n\t\t\tif(b[i][j]==0)\n\t\t\t{\n\t\t\t\tb[i][j]=1;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n*/\n\t\tcount=(side*side)-countb;\n\t}\t\n\tprintf(\"%d\\n\",count);\n\n\n\n\n\n\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nchar a[110][110],b[110][110];\nint max(int a,int b)\n{\n\tif(a>=b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint min(int a,int b)\n{\n\tif(a<=b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint main()\n{\n\tint n,m,i,j,maxx=0,maxy=0,minx=0,miny=0,length,width,flag=0,count=0,countb=0,side;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(a[i][j]=='B')\n\t\t\t{\n\t\t\t\tif(flag==0)\n\t\t\t\t{\n\t\t\t\t\tminx=i;\n\t\t\t\t\tmaxx=i;\n\t\t\t\t\tminy=j;\n\t\t\t\t\tmaxy=j;\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\tmaxx=max(i,maxx);\n\t\t\t\tminx=min(i,minx);\n\t\t\t\tmaxy=max(j,maxy);\n\t\t\t\tminy=min(j,miny);\n\t\t\t\tcountb++;\n//\tprintf(\"i:%d\\n\",i);\n//\tprintf(\"j:%d\\n\",j);\n\t\t\t}\n\t\t}\n\t}\n\tlength=maxy-miny+1;\n\twidth=maxx-minx+1;\n//\tprintf(\"%d\\n\",minx);\n//\tprintf(\"%d\\n\",maxx);\n//\tprintf(\"%d\\n\",miny);\n//\tprintf(\"%d\\n\",maxy);\n//\tprintf(\"%d\\n\",length);\n//\tprintf(\"%d\\n\",width);\n\tside=max(length,width);\n\tif((n<side)||(m<side))\n\t\tcount=-1;\n\telse\n\t{\n/*\tfor(i=minx;i<=maxx;i++)\n\t{\n\t\tfor(j=miny;j<=maxy;j++)\n\t\t{\n\t\t\tif(b[i][j]==0)\n\t\t\t{\n\t\t\t\tb[i][j]=1;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n*/\n\t\tcount=(side*side)-countb;\n\t}\t\n\tprintf(\"%d\\n\",count);\n\n\n\n\n\n\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.8658097686375321, "equal_cnt": 20, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 15, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "3ba6336ee033176dc9cc4ffd992d995a", "bug_code_uid": "4203bfd69b1b4771bab75fd4c0212594", "src_uid": "9b1b082319d045cf0ec6d124f97a8184", "apr_id": "b1c3b7a70605cdef7343f09d42119857", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint count, flag;\nchar ans[100001], temp[100001], str[100001];\n\nvoid process(char *ch)\n{\n\tint i, len = 0;\n\twhile (ch[len++]);\n\tlen--;\n\tfor (i = 0; i < len; i++)\n\t\tstr[i] = ch[i];\n\tif (len == 1) {\n\t\tif (ch[0] > '1') {\n\t\t\tans[0] = ch[0];\n\t\t\tans[1] = NULL;\n\t\t\tflag = 2;\n\t\t}\n\t\treturn;\n\t}\n\twhile (len > 1) {\n\t\tif (ch[len - 1] != '0' && flag != 2) {\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tans[i] = str[i];\n\t\t\tans[i] = NULL;\n\t\t\tflag = 2;\n\t\t\treturn;\n\t\t}\n\t\tcount++;\n\t\tch[len - 1] = NULL;\n\t\tlen--;\n\t}\n}\n\nint main()\n{\n\tint num, i;\n\tscanf(\"%d\", &num);\n\tgetchar();\n\tcount = flag = 0;\n\tans[0] = NULL;\n\tans[0] = '1';\n\tans[1] = NULL;\n\tfor (i = 0; i < num; i++) {\n\t\tscanf(\"%s\", temp);\n\t\\\tif (temp[0] == '0') {\n\t\t\tflag = 1;\n\t\t\tans[0] = '0';\n\t\t\tcount = 0;\n\t\t\tans[1] = NULL;\n\t\t}\n\t\tif (flag != 1) \tprocess(temp);\n\t}\n\tprintf(\"%s\", ans);\n\tfor (i = 0; i < count; i++) printf(\"0\");\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint count, flag;\nchar ans[100001], temp[100001], str[100001];\n\nvoid process(char *ch)\n{\n\tint i, len = 0;\n\twhile (ch[len++]);\n\tlen--;\n\tfor (i = 0; i < len; i++)\n\t\tstr[i] = ch[i];\n\tif (len == 1) {\n\t\tif (ch[0] > '1') {\n\t\t\tans[0] = ch[0];\n\t\t\tans[1] = NULL;\n\t\t\tflag = 2;\n\t\t}\n\t\treturn;\n\t}\n\twhile (len > 1) {\n\t\tif (ch[len - 1] != '0' && flag != 2) {\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tans[i] = str[i];\n\t\t\tans[i] = NULL;\n\t\t\tflag = 2;\n\t\t\treturn;\n\t\t}\n\t\tcount++;\n\t\tch[len - 1] = NULL;\n\t\tlen--;\n\t\tif (len == 1) {\n\t\t\tif (ch[0] > '1') {\n\t\t\t\tans[0] = ch[0];\n\t\t\t\tans[1] = NULL;\n\t\t\t\tflag = 2;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint num, i;\n\twhile (scanf(\"%d\", &num) != EOF) {\n\t\tgetchar();\n\t\tcount = flag = 0;\n\t\tans[0] = NULL;\n\t\tans[0] = '1';\n\t\tans[1] = NULL;\n\t\tfor (i = 0; i < num; i++) {\n\t\t\tscanf(\"%s\", temp);\n\t\t\tif (temp[0] == '0') {\n\t\t\t\tflag = 1;\n\t\t\t\tans[0] = '0';\n\t\t\t\tcount = 0;\n\t\t\t\tans[1] = NULL;\n\t\t\t}\n\t\t\tif (flag != 1) \tprocess(temp);\n\t\t}\n\t\tprintf(\"%s\", ans);\n\t\tfor (i = 0; i < count; i++) printf(\"0\");\n\t\tprintf(\"\\n\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9037610619469026, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0f81bf185fdc303533396b06434bac7b", "bug_code_uid": "f39c21a6f86db1013905e7566d036437", "src_uid": "dd7faacff9f57635f8e00c2f8f5a4650", "apr_id": "d5f9690802fedd75fcd83ef650106cfb", "difficulty": 1100, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid printer(char s[], int i);\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int array_i[t];\r\n    int n;\r\n    for (int k = 0; k < t; k++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        char s[n + 1];\r\n        scanf(\"%s\", s);\r\n        int found = 0;\r\n        for (int i = 0; i < n - 1; i++)\r\n        {\r\n            if (s[i] <= s[i + 1])\r\n            {\r\n                printer(s, i);\r\n                found = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (found == 0)\r\n        {\r\n            printer(s, n - 1);\r\n        }\r\n    }\r\n}\r\n\r\nvoid printer(char s[], int i)\r\n{\r\n    for (int j = 0; j <= i; j++)\r\n        {\r\n            printf(\"%c\", s[j]);\r\n        }\r\n        for (int j = i; j >= 0; j--)\r\n        {\r\n            printf(\"%c\", s[j]);\r\n        }\r\n    printf(\"\\n\");\r\n}", "fixed": "#include <stdio.h>\r\n\r\nvoid printer(char s[], int i);\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int array_i[t];\r\n    int n;\r\n    for (int k = 0; k < t; k++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        char s[n + 1];\r\n        scanf(\"%s\", s);\r\n        int found = 0;\r\n        for (int i = 0; i < n - 1; i++)\r\n        {\r\n            if (s[i] == s[i + 1] && i == 0)\r\n            {\r\n                printer(s, i);\r\n                found = 1;\r\n                break;\r\n            }\r\n            if (s[i] < s[i + 1])\r\n            {\r\n                printer(s, i);\r\n                found = 1;\r\n                break;\r\n            }\r\n            \r\n        }\r\n        if (found == 0)\r\n        {\r\n            printer(s, n - 1);\r\n        }\r\n    }\r\n}\r\n\r\nvoid printer(char s[], int i)\r\n{\r\n    for (int j = 0; j <= i; j++)\r\n        {\r\n            printf(\"%c\", s[j]);\r\n        }\r\n        for (int j = i; j >= 0; j--)\r\n        {\r\n            printf(\"%c\", s[j]);\r\n        }\r\n    printf(\"\\n\");\r\n}"}
{"similarity_score": 0.2820097244732577, "equal_cnt": 17, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "70d1c1c84a3c64c7e021bd5deddd1c46", "bug_code_uid": "423a4d00f04912a8a2f968fbd3d99144", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "9f4937ce834b57c2e92b0df6b84df3ef", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\nusing namespace std;\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tstring a;\n\t\tcin>>a;\n\t\tif(a[0]+a[1]+a[2]==a[3]+a[4]+a[5]) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\t\t\t \t \t\t         \t    \t\t   \t \t", "fixed": "#include <stdio.h>\nint main(){\n    int i,j,t,sum1=0, sum2=0;\n    char arr[7];\n    scanf(\"%d\", &t);\n    for(i=0; i<t; i++){\n        scanf(\"%s\", arr);\n        sum1 = arr[0]+ arr[1]+ arr[2];\n        sum2 = arr[3]+ arr[4]+ arr[5];\n        if(sum1==sum2)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n\n    }\n\n    return 0;\n}\n\n \t   \t\t\t\t\t\t \t  \t\t \t  \t\t\t  \t \t\t\t"}
{"similarity_score": 0.307909604519774, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "b8af50cc8af24e3cee83ceaf9b774ace", "bug_code_uid": "f2c38141bcfd63488d2f3baf08c76617", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "2758ade46282e1c72566367df7fc0ff1", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<math.h>\n#define max_size 2147483647\nint main(void) {\n    int test;\n    scanf(\"%d\",&test);\n    int arr[test];\n    for (int i=0; i<test ; i++) scanf(\"%d\",&arr[i]);\n\n     for (int i=0,j,max=test ,last=0; max!=0 ; max--){\n        int aa=0,bb=0;\n        for ( j=0; j<test ; j++){\n            if (arr[j]==max)    break;\n            if (arr[j]==max-1)    aa=1;\n            if (arr[j]==max-2)    bb=1;\n\n        }\n        if (j>last){\n            for (int k=last ; k< j ; k++) printf(\"\\n\");\n            last=j;\n            printf(\"%d \",arr[j]);\n            if (aa==1) {\n                printf(\"%d \",arr[j]-1);\n                max--;\n            }\n            if (aa==1&&bb==1) {\n                printf(\"%d \",arr[j]-2);\n                max--;\n            }\n\n        }\n        else printf(\"%d \",arr[j]);\n     }\n}\n\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<math.h>\n#define max_size 2147483647\nint main(void) {\n    int test;\n    scanf(\"%d\",&test);\n    int result,problem=0;\n    int arr[test];\n    scanf(\"%d\",&arr[0]);\n    int min=arr[0],max=arr[0];\n    for (int i=1; i<test ; i++) {\n        scanf(\"%d\",&arr[i]);\n        if (min > arr[i]) min=arr[i];\n        if (max < arr[i]) max=arr[i];\n        //printf(\"\\n--%d--\\n\",max);\n    }\n    //printf(\"%d %d\",min,max);\n    for (int i=0;i<test;i++){\n    if (arr[i]==min||arr[i]==max) problem++;\n    }\n    printf(\"%d\",test-problem);\n}\n\n\n"}
{"similarity_score": 0.9464442493415277, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f051764d18e9248392f5fd45f9e68905", "bug_code_uid": "b9172f6ac14359af90dfb20bb6d598d0", "src_uid": "52f4f2a48063c9d0e412a5f78c873e6f", "apr_id": "3acb68bf7f6d214512b388d26e849f62", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],i,sum=0,max,rsum=0,flag=0;\n    for(i=0;i<n;i++) {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    max=a[0];\n    for(i=0;i<n;i++){\n        if(a[i]>max){\n            max=a[i];\n        }\n    }\n    for(i=1;i<n;i++){\n        if(a[0]!=a[i]){\n            flag=1;\n            break;\n        }\n    }\n    if(flag==0){\n        printf(\"YES\\n\");\n    }\n    else {\n    rsum=sum-max;\n    if((rsum>=max)&&(sum%2==0))\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    }\n}", "fixed": "#include<stdio.h>\nint main() {\n    long long int n;\n    scanf(\"%lld\",&n);\n    long long int i,sum=0,max,rsum=0,flag=0;\n    long long int a[n];\n    for(i=0;i<n;i++) {\n        scanf(\"%lld\",&a[i]);\n        sum+=a[i];\n    }\n    max=a[0];\n    for(i=0;i<n;i++){\n        if(a[i]>max){\n            max=a[i];\n        }\n    }\n    for(i=1;i<n;i++){\n        if(a[0]!=a[i]){\n            flag=1;\n            break;\n        }\n    }\n    if(flag==0){\n        printf(\"YES\\n\");\n    }\n    else {\n    rsum=sum-max;\n    if((rsum>=max)&&(sum%2==0))\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    }\n}"}
{"similarity_score": 0.06863679694947569, "equal_cnt": 15, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "b4c59f745101adf483f3cec75dd06329", "bug_code_uid": "942f1cc66b24ff3b8fdc1f7b343a189d", "src_uid": "ee8ca9b2c6104d1ff9ba1fc39e9df277", "apr_id": "7dd317dd0f8cdda9d4def79029541ade", "difficulty": 1100, "tags": ["dp", "graphs"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "import java.util.*;\r\npublic class longJumps {\r\n\r\n    public static void main(String args[]){\r\n        Scanner sc = new Scanner(System.in);\r\n        int a=sc.nextInt();\r\n        for(int i=0;i<a;i++){\r\n            int n=sc.nextInt();\r\n            int ar[]=new int[n];\r\n            int score=0;\r\n            for(int j=0;j<n;j++){\r\n                ar[j]=sc.nextInt();\r\n            }\r\n                int k=1;\r\n                while(k<=n){\r\n                    \r\n                    k=k+ar[k-1];\r\n\t\t\twhile(k<=n){\r\n                \tk = k + ar[k-1];\r\n          \t\t  }\r\n\t\tif(k>score)\r\n                \tscore = k;\r\n                }\r\n            System.out.println(score);\r\n\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n \r\nint main(){\r\n    int t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t    int n;\r\n\t    scanf(\"%lld\", &n);\r\n\t    long long a[n+1], mx=0;\r\n\t\tfor(int i = 1 ; i <= n ; i++)\r\n\t\t    scanf(\"%lld\", &a[i]);\r\n\t\tfor(int i=n ; i>=1 ; i--){\r\n\t\t\tif(i+a[i] <= n)\r\n\t\t\t    a[i] = a[i] + a[i+a[i]];\r\n\t\t\tif(a[i] > mx)\r\n\t\t\t    mx = a[i];\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\", mx);\r\n\t}\r\n}"}
{"similarity_score": 0.25902335456475584, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "33eb4f75abe3c5b82eb2bb76753646a8", "bug_code_uid": "588166cf7f9380f74c4794f767c7bb36", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "dfbf5c8fe528c3c039654b64d8935db1", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n][2];\n\tint sum=0;\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<2;j++){\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tsum+=a[i][0]*a[i][1];\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n \tint n;\n \tscanf(\"%d\", &n) ;\n \tint kg, gia, st=0;\n \tint max=100;\n \tfor(int i=0; i<n; ++i) {\n \t\tscanf(\"%d %d\", &kg, &gia);\n \t\tif(max>gia) max=gia;\n \t\tst=st+kg*max;\n\t}\n \tprintf(\"%d\", st);\n\treturn 0;\n}"}
{"similarity_score": 0.9966442953020134, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7b798b2740932a7465aedbd309425cbc", "bug_code_uid": "072d1009610c32e5d7fb5b6d26ecd6fb", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "124ed1ccc54057b211630fab65af6af0", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int i, j, t;\n    double m, s, r,  ar[1000];\n    scanf(\"%d%lf\",&t,&m);\n    t=t*2;\n    for(j=1;j<t;j+=2){\n        scanf(\"%d%d\",&ar[j-1],&ar[j]);\n        s=ar[j-1]/ar[j];\n        if(j==1) r=s;\n        if(s<r) r=s;\n    }\n    printf(\"%.8lf\\n\",m*r);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int i, j, t;\n    double m, s, r,  ar[100000];\n    scanf(\"%d%lf\",&t,&m);\n    t=t*2;\n    for(j=1;j<t;j+=2){\n        scanf(\"%d%d\",&ar[j-1],&ar[j]);\n        s=ar[j-1]/ar[j];\n        if(j==1) r=s;\n        if(s<r) r=s;\n    }\n    printf(\"%.8lf\\n\",m*r);\n\n    return 0;\n}\n"}
{"similarity_score": 0.22624434389140272, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "c3f0a6d8f775198b8e11741d09c7cc1a", "bug_code_uid": "8261db06daef732f54c286f2ebaa1972", "src_uid": "7ed9265b56ef6244f95a7a663f7860dd", "apr_id": "cd05caef3551f7337f7a356570c37f76", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\nusing namespace std;\nint main()\n{\n   int n,p1,p2,p3,t1,t2;\n   cin>>n>>p1>>p2>>p3>>t1>>t2;\n   int x=-1;\n   int sum=-1;\n   while(n--)\n   {\n       int l,r;\n       cin>>l>>r;\n       sum+=(r-l)*p1;\n       int i;\n       if(x!=-1)\n       {\n           int d=l-x;\n           if(d<t1)\n            sum+=d*p1;\n           else if(d<t1+t2)\n            sum+=t1*p1+p2*(d-t1);\n           else\n            sum+=t1*p1+p2*t2+p3*(d-t1-t2);\n       }\n       x=r;\n   }\n   cout<<sum<<endl;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,p1,p2,p3,t1,t2,i,j;\n    scanf(\"%d%d%d%d%d%d\",&n,&p1,&p2,&p3,&t1,&t2);\n    int rr=-1;\n    int ans=0;\n    while(n--)\n   {\n\tint l,r;\n\tscanf(\"%d%d\",&l,&r);\n\tans+=(r-l)*p1;\n\tif(rr!=-1)\n      {\n\t    int d=l-rr;\n\t    if(d<t1)ans+=d*p1;\n\t    else if(d<t1+t2)ans+=t1*p1+(d-t1)*p2;\n\t    else ans+=t1*p1+t2*p2+(d-t1-t2)*p3;\n\t   }\n\trr=r;\n    }\n    printf(\"%d\\n\",ans);\n}"}
{"similarity_score": 0.7365145228215768, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8d7abed193784923227f3b78e4b0f82a", "bug_code_uid": "23f1ebc18996b85c0880ccfc7265fd08", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "7ddd404d1e5cd631cc3870c789801fa1", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int loop, inner;\n    scanf(\"%d\", &loop);\n\n    for(int i=0; i<loop; i++)\n    {\n        scanf(\"%d\", &inner);\n        int elements[inner], sum=0, counter=0;\n        for(int j=0; j<inner; j++)\n        {\n            scanf(\"%d\", &elements[j]);\n            sum+=elements[j];\n            if(elements[j]==0) {elements[j]=1; counter++;}\n        }\n        if(sum==0) counter++;\n        printf(\"%d\\n\", counter);\n    }\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int loop, inner;\n    scanf(\"%d\", &loop);\n\n    for(int i=0; i<loop; i++)\n    {\n        scanf(\"%d\", &inner);\n        int elements[inner], sum=0, counter=0;\n        for(int j=0; j<inner; j++)\n        {\n            scanf(\"%d\", &elements[j]);\n            if(elements[j]==0) {elements[j]=1; counter++;}\n              sum+=elements[j];\n        }\n        if(sum==0) counter++;\n        printf(\"%d\\n\", counter);\n    }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.7704626334519573, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "be71b7ce1996cc421c9dbe4b63ee1a6b", "bug_code_uid": "35197d736b3ff35b5c3dd722ac87dd18", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "0d17f94dc40c99011ad55b24ac866339", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int ans,j,s,z,t,a,b,c,d;\n    \n    scanf(\"%lld\",&t);\n    \n    for(z=0;z<t;z++)\n    {\n       scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n      \n      if(b>=a)\n        printf(\"%lld\\n\",b);\n        \n       if(b<a && d>=c)\n      { printf(\"%d\\n\",-1);\n        continue;\n      }\n      \n      if(b<a)\n      {\n        s=b;\n        ans=b;\n        j = c-d;\n        while(s<a)\n        { s+=j;\n          ans+=c;\n        }\n        printf(\"%lld\\n\",ans);  \n          \n      }\n    \n    }\n    \n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int ans,j,s,z,t,a,b,c,d;\n    \n    scanf(\"%lld\",&t);\n    \n    for(z=0;z<t;z++)\n    {\n       scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n      \n      if(b>=a)\n        printf(\"%lld\\n\",b);\n        \n       if(b<a && d>=c)\n      { printf(\"%d\\n\",-1);\n        continue;\n      }\n      \n      if(b<a)\n      {\n        s=a-b;\n        j = c-d;\n        if(s%j==0)\n        {\n            j = s/j;\n            ans = j*c;\n        }   \n        else\n        {\n            j = s/j;\n            ans = c*(j+1);\n        }\n          printf(\"%lld\\n\",ans+b);\n      }\n    \n    }\n    \n}\n"}
{"similarity_score": 0.9879356568364611, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "beb68f993df2da3e8ee90dfadd63f50f", "bug_code_uid": "4bd746e32d4d2cb0dfab5a964baaf6a4", "src_uid": "e554616ed3df169888acd3452a2f896f", "apr_id": "f51e3216d64eee1e3c2779225b074ef9", "difficulty": 1500, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n     int n, k = 0, i, j;\n     int a[300], b[300], c[300];\n     int d[100000][2];\n\n     scanf(\"%d\", &n);\n\n     for (i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n     for (i = 0; i < n; i++) scanf(\"%d\", &b[i]);\n\n     for (i = 0; i < n; i++) {\n\t  for (j = 0; j < n; j++) {\n\t       if (a[i] == b[j]) {\n\t\t    c[i] = j;\n\n\t\t    b[j] = 0;\n\n\t\t    break;\n\t       }\n\t  }\n     }\n\n     for (i = 0; i < n; i++) {\n\t  for (j = 1; j < n - i; j++) {\n\t       if (c[j] < c[j - 1]) {\n\t\t    int tmp = c[j];\n\t\t    c[j] = c[j - 1];\n\t\t    c[j - 1] = tmp;\n\n\t\t    d[k][0] = j;\n\t\t    d[k++][1] = j + 1;\n\t       }\n\t  }\n     }\n\n     printf(\"%d\\n\", k);\n\n     for (i = 0; i < k; i++) {\n\t  printf(\"%d %d\\n\", d[i][0], d[i][1]);\n     }\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n     int n, k = 0, i, j;\n     int a[300], b[300], c[300];\n     int d[100000][2];\n\n     scanf(\"%d\", &n);\n\n     for (i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n     for (i = 0; i < n; i++) scanf(\"%d\", &b[i]);\n\n     for (i = 0; i < n; i++) {\n\t  for (j = 0; j < n; j++) {\n\t       if (b[i] == a[j]) {\n\t\t    c[i] = j;\n\n\t\t    a[j] = 0;\n\n\t\t    break;\n\t       }\n\t  }\n     }\n\n     for (i = 0; i < n; i++) {\n\t  for (j = 1; j < n - i; j++) {\n\t       if (c[j] < c[j - 1]) {\n\t\t    int tmp = c[j];\n\t\t    c[j] = c[j - 1];\n\t\t    c[j - 1] = tmp;\n\n\t\t    d[k][0] = j;\n\t\t    d[k++][1] = j + 1;\n\t       }\n\t  }\n     }\n\n     printf(\"%d\\n\", k);\n\n     for (i = 0; i < k; i++) {\n\t  printf(\"%d %d\\n\", d[i][0], d[i][1]);\n     }\n\n     return 0;\n}\n"}
{"similarity_score": 0.8491467576791809, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f7646e066c7c92f00fcb3866ade76c0c", "bug_code_uid": "a12abaa86acfa93b6b9d4f93fdc7394a", "src_uid": "b63a6369023642a8e7e8f449d7d4b73f", "apr_id": "805541fdcdce15683068c0bbb50ccd20", "difficulty": 900, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nlong long a,b,c,d[100000],e,f[100000],g[100000],max;\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%lld\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%lld%lld%lld\",&a,&b,&c);\r\n\t\tfor(e=0;e<=c-1;e++)\r\n\t\tscanf(\"%lld\",&d[e]);\r\n\t\tfor(e=0;e<=c-1;e++)\r\n\t\tfor(e=0;e<=c-1;e++)\r\n\t\tscanf(\"%lld\",&f[e]);\r\n\t\tif(f[0]%a==0)\r\n\t\tg[0]=f[0]/a*d[0];\r\n\t\telse g[0]=(f[0]/a+1)*d[0];\r\n\t\tmax=0;\r\n\t\tfor(e=1;e<=c-1;e++){\r\n\t\tif(f[e]%a==0)\r\n\t\tg[e]=(f[e]/a)*d[e];\r\n\t\telse g[e]=(f[e]/a+1)*d[e];\r\n\t\tif(g[e]>g[max]) max=e;}\r\n\t\t\r\n\t\tfor(e=0;e<=c-1;e++){\r\n\t\t\tif(e!=max){\r\n\t\twhile(f[e]>0){\r\n\t\t\t\r\n\t\t\tf[e]=f[e]-a;\r\n\t\t\tb=b-d[e];\r\n\t\t\tif(b<=0) break;\r\n\t\t}\r\n\t\tif(b<=0) break;}}\r\n\t\tif(b>0){\r\n\t\twhile(f[max]>0){\r\n\t\t\tf[max]=f[max]-a;\r\n\t\t\tb=b-d[max];\r\n\t\t\tif(b<=0) break;\r\n\t\t}}\r\n\t\t\r\n\t\tif(f[max]<=0) printf(\"YES\\n\");\r\n\t\telse printf(\"NO\\n\");\r\n\t\t\r\n\t}\r\n\treturn 0;}", "fixed": "#include<stdio.h>\r\nlong long a,b,c,d[100000],e,f[100000],g[100000],max;\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%lld\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%lld%lld%lld\",&a,&b,&c);\r\n\t\tfor(e=0;e<=c-1;e++)\r\n\t\tscanf(\"%lld\",&d[e]);\r\n\t\tfor(e=0;e<=c-1;e++)\r\n\t\tfor(e=0;e<=c-1;e++)\r\n\t\tscanf(\"%lld\",&f[e]);\r\n\t    max=0;\r\n\t\tfor(e=1;e<=c-1;e++){\r\n\t\tif(d[e]>d[max]) max=e;}\r\n\t\t\r\n\t\tfor(e=0;e<=c-1;e++){\r\n\t\t\tif(e!=max){\r\n\t\twhile(f[e]>0){\r\n\t\t\t\r\n\t\t\tf[e]=f[e]-a;\r\n\t\t\tb=b-d[e];\r\n\t\t\tif(b<=0) break;\r\n\t\t}\r\n\t\tif(b<=0) break;}}\r\n\t\tif(b>0){\r\n\t\twhile(f[max]>0){\r\n\t\t\tf[max]=f[max]-a;\r\n\t\t\tb=b-d[max];\r\n\t\t\tif(b<=0) break;\r\n\t\t}}\r\n\t\t\r\n\t\tif(f[max]<=0) printf(\"YES\\n\");\r\n\t\telse printf(\"NO\\n\");\r\n\t\t\r\n\t}\r\n\treturn 0;}"}
{"similarity_score": 0.9242553191489362, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "461bdc4623f712c6a0cf941efaa37144", "bug_code_uid": "829e6e9944c491e3132d39dc5edb3631", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "328c6c78456e27a204a1864bbd92c383", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&i);\n    for(t=0;t<i;t++)\n    {\n        int n,k,m,l,v,flag;\n        scanf(\"%d %d\",&n,&k);\n        for(m=0;m<k;m++)\n        {\n            flag=0;\n            v=n;\n            v=(int)sqrt((double)v);\n           for(l=2;l<=v;l++)\n            {\n                if(n%l==0)\n                {n=n+l;flag=1;break;}\n            }\n            if(flag==0)\n                n=n+n;\n        }\n        printf(\"%d\",n);\n        if(t!=i-1)\n            printf(\"\\n\");\n    }\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&i);\n    for(t=0;t<i;t++)\n    {\n        long long  n,k,m,l,v,flag;\n        scanf(\"%lld %lld\",&n,&k);\n        for(m=1;m<=k;m++)\n        {\n            flag=0;\n            v=n;\n            v=(int)sqrt((double)v);\n           for(l=2;l<=v;l++)\n            {\n                if(n%l==0)\n                {n=n+l;flag=1;break;}\n            }\n            if(flag==0)\n                n=n+n;\n            if(n%2==0)\n                break;\n        }\n        n=n+2*(k-m);\n        printf(\"%lld\",n);\n        if(t!=i-1)\n            printf(\"\\n\");\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9215017064846417, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "bd690d1c1e65919865e10393ba5fb68d", "bug_code_uid": "dbbbc57c891283917226e02858dcf91e", "src_uid": "19c32b8c1d3db5ab10aca271135aa9b8", "apr_id": "f3f08de7db8cd28f05ff009dc64fc2b3", "difficulty": 1600, "tags": ["constructive algorithms", "bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a=0, b=1023;\nint main(){\n  int n; scanf(\"%d\", &n);\n  while(n--){\n    char ch; int v;\n    scanf(\" %c %d\", &ch, &v);\n    if (ch=='|') a|=v, b|=v;\n    else if (ch=='&') a&=v, b&=v;\n    else if (ch=='^') a^=v, b^=v;\n  }\n  printf(\"2\\n^ %d\\n| %d\\n\", a&(1023^b), a&b);\n}\n", "fixed": "#include <stdio.h>\n\nint a=0, b=1023;\nint main(){\n  int n; scanf(\"%d\", &n);\n  while(n--){\n    char ch; int v;\n    scanf(\" %c %d\", &ch, &v);\n    if (ch=='|') a|=v, b|=v;\n    else if (ch=='&') a&=v, b&=v;\n    else if (ch=='^') a^=v, b^=v;\n  }\n  printf(\"3\\n& %d\\n^ %d\\n| %d\\n\", a|b,a&(1023^b), a&b);\n}\n"}
{"similarity_score": 0.9917355371900827, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e898e9ceac4f1cac62f7e7fcf0b77a7c", "bug_code_uid": "44acb211a10a1b5f93b11fcc2996114d", "src_uid": "c4398a9f342a23baf1d7ebc9f4e9577d", "apr_id": "4c013913404e38f61ee75622242588cb", "difficulty": 1200, "tags": ["two pointers", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m,i,j=0;\n    long long int s[20000],a,b;\n    s[0]=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        s[i]=s[i-1]+(a*b);\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&a);\n        while(s[j]<a)\n        {\n            j++;\n        }\n        printf(\"%d\\n\",j);\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m,i,j=0;\n    long long int s[100500],a,b;\n    s[0]=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        s[i]=s[i-1]+(a*b);\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&a);\n        while(s[j]<a)\n        {\n            j++;\n        }\n        printf(\"%d\\n\",j);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9727891156462585, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6f8574d60da07df195804db6c26661c1", "bug_code_uid": "67ad5a724be557ee9867ba548d982852", "src_uid": "0efd4b05b3e2e3bc80c93d37508a5197", "apr_id": "ae668c0abb0757f2e03fe7af95f99993", "difficulty": 1400, "tags": ["binary search", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\nlong long int arr[500009];\nint comp(const void * a,const void * b)\n{\n    return (*(int*)a - *(int*)b);\n}\nint main()\n{\n    long long int t,n,m,i,j,k,l,max,sum,p,q;\n    scanf(\"%lld %lld\",&n,&k);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&arr[i]);\n    qsort(arr,n,sizeof(int),comp);\n    p=n/2;\n    max=arr[p];\n    for(i=p+1;i<n;i++){\n        q=arr[i]-max;\n        t=(i-p)*q;\n        if(k>=t){\n            max=arr[i];\n            k-=t;\n        }\n        else{\n            t=k/(i-p);\n            max+=t;\n            break;\n        }\n       // printf(\"%lld %lld\\n\",t,k);\n    }\n    if(i==n){\n        max+=(k/(p+1));\n    }\n    printf(\"%lld\",max);\n}\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\nlong long int arr[500009];\nint comp(const void * a,const void * b)\n{\n    return (*(long long int*)a - *(long long int*)b);\n}\nint main()\n{\n    long long int t,n,m,i,j,k,l,max,sum,p,q;\n    scanf(\"%lld %lld\",&n,&k);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&arr[i]);\n    qsort(arr,n,sizeof(long long int),comp);\n    p=n/2;\n    max=arr[p];\n    for(i=p+1;i<n;i++){\n        q=arr[i]-max;\n        t=(i-p)*q;\n        if(k>=t){\n            max=arr[i];\n            k-=t;\n        }\n        else{\n            t=k/(i-p);\n            max+=t;\n            break;\n        }\n       // prlong long intf(\"%lld %lld\\n\",t,k);\n    }\n    if(i==n){\n        max+=(k/(p+1));\n    }\n    printf(\"%lld\",max);\n}\n\n"}
{"similarity_score": 0.37916310845431256, "equal_cnt": 20, "replace_cnt": 11, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "19370d20a69444c4f4c59fb1fb4ec2fc", "bug_code_uid": "5bb4d7a26dcbd7bcea44deb8236660e0", "src_uid": "a585045a9a6f62bfe1c0618c2ee02f48", "apr_id": "97b8baa8236bf5e8a5e144c0ece5bddb", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n     int n,m;\n     freopen(\"input.txt\",\"r\",stdin);\n     freopen(\"output.txt\",\"w\",stdout);\n     scanf(\"%d %d\",&n,&m);\n     int a[n],b[n];\n     int i,j,k,l,o,p;\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%d\",&a[i]);\n          b[i]=a[i];\n     }\n     for(i=1;i<n;i++)\n     {\n          for(j=i+1;j<=n;j++)\n          {\n               if(b[i]>b[j])\n               {\n                    k=b[j];\n                    b[j]=b[i];\n                    b[i]=k;\n               }\n          }\n     }\n     \n     int min=b[n-m+1];\n     printf(\"%d\\n\",min);\n     for(i=1;i<=n;i++)\n     {\n          if(a[i]>min)\n          printf(\"%d \",i);\n     }\n}", "fixed": "#include <stdio.h>\n#include \"stdlib.h\"\n\nint comp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n\nint main()\n{\n    int n,k,num[1000][2],i;\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num[i][0]);\n        num[i][1] = i+1;\n    }\n    qsort(num, n, 2*sizeof(int), comp);\n    printf(\"%d\\n\",num[n-k][0]);\n    for(i=n-k;i<n;i++)\n        printf(\"%d \",num[i][1]);\n    return 0;\n}"}
{"similarity_score": 0.2140309155766944, "equal_cnt": 16, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "2b4da955ffc26a9cdcbdd88892770056", "bug_code_uid": "4dee0a263f72b9a4f2802b2c0fb085af", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "476688f0477bc015fb0af3612a96816a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <algorithm>\n\nusing namespace std;\n\nint l[200200],r[200200],ll=0,rr=0;\nchar str[200200];\n\nint main()\n{\n    int n,x;\n    scanf(\"%d %s\",&n,str);\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%d\",&x);\n        if(str[i] == 'R')\n            r[rr++]=x;\n        else l[ll++]=x;\n    }\n    sort(l,l+ll-1);\n    sort(r,r+rr-1);\n    if(l[0] - r[0] >= 0)\n        printf(\"%d\\n\",(l[0]-r[0])/2);\n    else\n        printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define min(a,b) (((a)<(b))?(a):(b))\nchar a[200200];\nint main()\n{\n\tint i,j,n,max=0,p,ans=2100000000,ch=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\" %c\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&p);\n\t\tif(a[i]=='R')\n\t\t{\n\t\t\tmax = p;\n\t\t\tch = 1;\n\t\t}\n\t\telse if(ch==1)\n\t\t\tans = min(ans,(p-max)/2);\n\t}\n\tif(ans==2100000000)\n\t\tans = -1;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}"}
{"similarity_score": 0.522140221402214, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "575fc5bb7c55cc709d91122058c47a6c", "bug_code_uid": "1998a2b38e4a880baffd3395470f826a", "src_uid": "7224ffd4776af4129739e1b28f696050", "apr_id": "588263831f405eb2606c7d47eb57a26f", "difficulty": 1100, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main (void)\n{\n    int n,a,b,c,d,x,y,x1,y1,x2,y2,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        scanf(\"%d%d%d%d%d%d\",&x,&y,&x1,&y1,&x2,&y2);\n        if((x-a+b)>=x1&&(x-a+b)<=x2&&(y-c+d)>=y1&&(y-c+d)<=y2&&x>=x1&&x<=x2&&y>=y1&&y<=y2)\n            printf(\"\\nYes\\n\");\n        else printf(\"\\nNo\\n\");\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main (void)\n{\n    int n,a,b,c,d,x,y,x1,y1,x2,y2,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        scanf(\"%d%d%d%d%d%d\",&x,&y,&x1,&y1,&x2,&y2);\n        if(x1-x2==0||y1==y2)\n        {\n            if(x1==x2&&a==0&&y1!=y2&&b==0&&(y-c+d)>=y1&&(y-c+d)<=y2&&x>=x1&&x<=x2&&y>=y1&&y<=y2)printf(\"\\nYes\\n\");\n            else if(y1==y2&&c==0&&d==0&&x1!=x2&&(x-a+b)>=x1&&(x-a+b)<=x2&&x<=x2&&y>=y1&&y<=y2)printf(\"\\nYes\\n\");\n            else printf(\"\\nNo\\n\");\n            continue;\n        }\n        if((x-a+b)>=x1&&(x-a+b)<=x2&&(y-c+d)>=y1&&(y-c+d)<=y2&&x>=x1&&x<=x2&&y>=y1&&y<=y2)\n            printf(\"\\nYes\\n\");\n        else printf(\"\\nNo\\n\");\n    }\n\n}\n"}
{"similarity_score": 0.8838526912181303, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b40ea00c82cfa6e4a7ac901141b2dd08", "bug_code_uid": "23a58be692b9a41239f5dfe142e5856d", "src_uid": "ea62b6f68d25fb17aba8932af8377db0", "apr_id": "fcd83e569446bb3ab7c7da5216f704df", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,a[n],b[n];\n    for(i=0;i<n;i++){\n        b[i]=1;\n        scanf(\"%d\",&a[i]);\n    }\n    int dis=0,adj=0;\n    for(i=1;i<n-1;i++){\n        if(a[i]==0){\n            if(a[i-1]==1 && a[i+1]==1){\n                dis++;\n                b[i]=0;\n            }\n        }\n    }\n    for(i=2;i<n;i++){\n        if(b[i]==0 && b[i-2]==0){\n            adj++;\n        }\n    }\n    printf(\"%d\",dis-adj);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,a[n],b[n];\n    for(i=0;i<n;i++){\n        b[i]=1;\n        scanf(\"%d\",&a[i]);\n    }\n    int dis=0,adj=0;\n    for(i=1;i<n-1;i++){\n        if(a[i]==0){\n            if(a[i-1]==1 && a[i+1]==1){\n\n                b[i]=0;\n            }\n        }\n    }\n    for(i=2;i<n;i++){\n        if(b[i]==0 && b[i-2]==0){\n            adj++;\n            b[i]=1;\n            b[i-2]=1;\n        }\n\n    }\n    for(i=0;i<n;i++){\n        if(b[i]==0)dis++;\n    }\n    printf(\"%d\",dis+adj);\n    return 0;\n}\n"}
{"similarity_score": 0.9772329246935202, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5f33cfe8a0ac7cf328a2e7e66a7f9a37", "bug_code_uid": "a36904d3c772dcbafe172e25bcfab7a0", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "e2ac2e011a2e1bbdb589cf6d4d8de7f5", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "    #include <stdio.h>\n    #include <math.h>\n    \n\n    int main(){\n        int t = 0;\n        scanf(\"%d\",&t);\n        for(int i = 0;i<t;i++){\n            int a ,b;\n            scanf(\"%d\",&a);\n            scanf(\"%d\",&b);\n            long long int sum = 0;\n            int index = 1;\n            for(int j = 1;j<n;j++){\n                sum+=j;\n                if(sum >= b){\n                    index = j;\n                    break;\n                }\n            }\n            sum -= index;\n            int x = b - sum-1;\n            for(int j = 0;j<(a-index-1);j++){\n                printf(\"a\");\n            }\n            printf(\"b\");\n            char result[index];\n            for(int j=0;j<index;j++){\n                result[j] = 'a';\n            }\n            result[index-b+sum] ='b';\n            printf(\"%s\\n\",result);\n        }\n    }", "fixed": "    #include <stdio.h>\n    #include <math.h>\n    \n\n    int main(){\n        int t = 0;\n        scanf(\"%d\",&t);\n        for(int i = 0;i<t;i++){\n            int a ,b;\n            scanf(\"%d\",&a);\n            scanf(\"%d\",&b);\n            long long int sum = 0;\n            int index = 1;\n            for(int j = 1;j<a;j++){\n                sum+=j;\n                if(sum >= b){\n                    index = j;\n                    break;\n                }\n            }\n            sum -= index;\n            int x = b - sum-1;\n            for(int j = 0;j<(a-index-1);j++){\n                printf(\"a\");\n            }\n            printf(\"b\");\n            char result[index+ 1];\n            for(int j=0;j<index;j++){\n                result[j] = 'a';\n            }\n            result[index-b+sum] ='b';\n            result[index] = '\\0';\n            printf(\"%s\\n\",result);\n        }\n    }"}
{"similarity_score": 0.6489563567362429, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9e11b77fc6574e52a6375fe155de71b0", "bug_code_uid": "8ffce1081247fbc6e3bed10ad12ecbbf", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "d1d75c5ac192d1770e1a642a9ae60854", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int a,flag=0,j;\n    scanf(\"%d\",&a);\n    int arr[a],arr1[a];\n    int i;\n    for(i=0; i<a; i++)\n        scanf(\"%d%d\",&arr[i],&arr1[i]);\n    for(i=0; i<a; i++)\n    {\n        for(j=i+1; j<a; j++)\n        {\n            if(arr[i]<arr[j]&&arr1[i]>arr1[j])\n            {\n                printf(\"Happy Alex\");\n                return 0;\n            }\n        }\n    }\n    printf(\"Poor Alex\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int a,flag=0;\n    scanf(\"%d\",&a);\n    int arr[a],arr1[a];\n    int i;\n    for(i=0; i<a; i++)\n        scanf(\"%d%d\",&arr[i],&arr1[i]);\n    for(i=0; i<a-1; i++)\n    {\n        if(arr[a-1]>arr[0]&&arr1[a-1]<arr1[0])\n        {\n            printf(\"Happy Alex\");\n            return 0;\n        }\n        else if(arr[a-1]<arr[0]&&arr1[a-1]>arr1[0])\n        {\n            printf(\"Happy Alex\");\n            return 0;\n        }\n        if(arr[i]<arr[i+1]&&arr1[i]>arr1[i+1])\n        {\n            printf(\"Happy Alex\");\n            return 0;\n        }\n    }\n    printf(\"Poor Alex\");\n    return 0;\n}\n"}
{"similarity_score": 0.6368715083798883, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "fd64502456fb1365c1cdc4f6f5fa5e1f", "bug_code_uid": "de99bd2ce67e9130b2fdddc81009febc", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "c7d7c65e41e98f0c779452c73e9bca3c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,e=0;\n    int f[100000];\n    scanf(\"%d\",&a);\n    for(b=0;b<a;b++)\n    {\n        scanf(\"%d\",&f[b]);\n        c=f[0];\n        if(c!=f[b])\n            printf(\"%d\",e);\n        e++;\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,e=1;\n    int f[100000];\n    scanf(\"%d\",&a);\n    for(b=0;b<a;b++)\n    {\n        scanf(\"%d\",&f[b]);\n\n    }\n    for(b=0;b<a-1;b++)\n    {\n        c=f[0];\n        if(f[b]!=f[b+1])\n        {\n            e++;\n            c=f[b];\n        }\n    }\n    printf(\"%d\",e);\n}\n"}
{"similarity_score": 0.9858757062146892, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1ddc3dc68f6f32aa3744f8c137165e6d", "bug_code_uid": "bf202694ed4893a32e590168ec7bc761", "src_uid": "c3f080681e3da5e1290ef935ff91f364", "apr_id": "fa20bbe1c7757066a293087780a7a37c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k[50],a,b,count=0,l[50],c=0;\n    scanf(\"%d %d\",&a,&b);\n    for(i=0;i<a;i++)\n    {\n    scanf(\"%d\",&k[i]);\n    }\n    for(j=0;j<b;j++)\n    {\n    scanf(\"%d\",&l[j]);\n    for(c=c;c<a;c++)\n    {\n    if(l[j]>=k[c])\n    {\n    count++;\n    c=c+1;\n    break;\n    }\n    }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,k[10000],a,b,count=0,l[10000],c=0;\n    scanf(\"%d %d\",&a,&b);\n    for(i=0;i<a;i++)\n    {\n    scanf(\"%d\",&k[i]);\n    }\n    for(j=0;j<b;j++)\n    {\n    scanf(\"%d\",&l[j]);\n    for(c=c;c<a;c++)\n    {\n    if(l[j]>=k[c])\n    {\n    count++;\n    c=c+1;\n    break;\n    }\n    }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.706645056726094, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7d2f265ca1c7c1940e4f7dd47c70f8ed", "bug_code_uid": "0d33ad062331872ed5095b0d080ec34f", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "2c7d37d64154c4a94cfc0e9f1adeba89", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    for (int i = 0; i < t; i++) {\n        int n, m, k;\n        scanf(\"%d %d %d\", &n, &m, &k);\n\n        int price;\n        if (n == 1 || m == 1) {\n            price = n + m - 2;\n        } else {\n            price = n + m - 1;\n        }\n\n        printf(\"%s\\n\", price == k ? \"Yes\" : \"No\");\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    for (int i = 0; i < t; i++) {\n        int n, m, k;\n        scanf(\"%d %d %d\", &n, &m, &k);\n\n        printf(\"%s\\n\", (n * m - 1) == k ? \"Yes\" : \"No\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.7887323943661971, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c728abdb07b018fbff03ff865ed59fc2", "bug_code_uid": "c4dd562b0404abf2ca2fc9fedae54427", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "ff19f7c7ab97461cb843d0ae0ebb7cf7", "difficulty": 1100, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar a[200000];\n\nint main(void)\n{\n    fgets(a, 100001, stdin);\n    int p=strlen(a);\n    int i, tmp=0;\n    for(i=0; i<p; i++)\n    {\n        if(tmp==0&&a[i]=='0')\n        {\n            tmp=1;\n            continue;\n        }\n        printf(\"%c\", a[i]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[200000];\n\nint main(void)\n{\n    fgets(a, 100001, stdin);\n    int p=strlen(a);\n    int i, tmp=0;\n    for(i=0; i<p; i++)\n    {\n        if(tmp==0&&a[i]=='0')\n        {\n            tmp=1;\n            continue;\n        }\n        if(a[p-1]=='\\n')\n        {\n            if(i==(p-2)&&tmp==0) continue;\n        }\n        else\n        {\n            if(i==(p-1)&&tmp==0) continue;\n        }\n        printf(\"%c\", a[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9987163029525032, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fc50102e382d77d5810801945e6f6d96", "bug_code_uid": "3f62e5cbab2b4e89da2167211313a4b1", "src_uid": "cd2519f4a7888b2c292f05c64a9db13a", "apr_id": "ba3d331ea415cbb6f4ae853cd0f29fdd", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint i = 0, t = 0, n = 0;\n\tint cnt = 0, m = 0, s = 1;\n\tscanf(\"%d\", &t);\n\tfor(i = 0; i < t; i++){\n\t\tscanf(\"%d\", &n);\n\t\tm = n;\n\t\tcnt = 0;\n\t\ts = 1;\n\t\twhile(m > 0){\n\t\t\tif(m % 10 != 0)\n\t\t\t\tcnt = cnt + 1;\n\t\t\tm = m / 10;\n\t\t}\n\t\tprintf(\"%d\\n\", cnt);\n\t\twhile (n > 0){\n\t\t\tif(n % 10 != 0)\n\t\t\t\tprintf(\"%d \", (n % 10) * s);\n\t\t\tn = n / 10;\n\t\t\ts = s * 10;\t\n\t\t}\n\t}\n\treturn 0;", "fixed": "#include <stdio.h>\nint main(){\n\tint i = 0, t = 0, n = 0;\n\tint cnt = 0, m = 0, s = 1;\n\tscanf(\"%d\", &t);\n\tfor(i = 0; i < t; i++){\n\t\tscanf(\"%d\", &n);\n\t\tm = n;\n\t\tcnt = 0;\n\t\ts = 1;\n\t\twhile(m > 0){\n\t\t\tif(m % 10 != 0)\n\t\t\t\tcnt = cnt + 1;\n\t\t\tm = m / 10;\n\t\t}\n\t\tprintf(\"%d\\n\", cnt);\n\t\twhile (n > 0){\n\t\t\tif(n % 10 != 0)\n\t\t\t\tprintf(\"%d \", (n % 10) * s);\n\t\t\tn = n / 10;\n\t\t\ts = s * 10;\t\n\t\t}\n\t}\n\treturn 0;}"}
{"similarity_score": 0.9820359281437125, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6401867b7e4173826d61c1059ff6d881", "bug_code_uid": "ed271472729c27c4e3bce24b8d5c86c5", "src_uid": "3e27f1c06a263760f5b53c3afe4bf7ee", "apr_id": "123ade0b9ee48df9d6188eed46ecd4d6", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(int argc, char const *argv[]) {\r\n  int t;\r\n  scanf(\"%d\\n\",&t);\r\n  for (int i=0;i<t;i++){\r\n    int n;\r\n    scanf(\"%lld\\n\",&n);\r\nif (n<=6){\r\n  printf(\"%lld\\n\",15 );\r\n}\r\nelse{\r\n  if (n%2==0){\r\n    printf(\"%lld\\n\",(n/2)*5 );\r\n  }\r\n  else{\r\n    printf(\"%lld\\n\",((n+1)/2)*5 );\r\n  }\r\n}\r\n  }\r\n  return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main(int argc, char const *argv[]) {\r\n  int t;\r\n  scanf(\"%d\\n\",&t);\r\n  for (int i=0;i<t;i++){\r\n    long long int n;\r\n    scanf(\"%lld\\n\",&n);\r\nif (n<=6){\r\n  printf(\"%d\\n\",15 );\r\n}\r\nelse{\r\n  if (n%2==0){\r\n    printf(\"%lld\\n\",(n/2)*5 );\r\n  }\r\n  else{\r\n    printf(\"%lld\\n\",((n+1)/2)*5 );\r\n  }\r\n}\r\n  }\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.9932432432432432, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "527567b5565932e4035eb5875425e7a1", "bug_code_uid": "3aa09727ffb82a0848e4a43f91b78ff5", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "faf02aa5dfd1b6a7818b0593f3bb8177", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a[1001], b[1001] = {0};\n    int  i, n;\n    scanf(\"%d\", &n);\n\n    a[0] = a[1] = 1;\n    b[1] = 1;\n\n    for(i = 2; i <= n; i++)\n    {\n        a[i] = a[i-1] + a[i-2];\n        b[a[i]] = 1;\n        if(a[i] > n)\n            break;\n        //printf(\"%d \", a[i]);\n    }\n\n    for(i=1; i <= n; i++)\n    {\n        if(b[i] == 1)\n            printf(\"O\");\n        else\n            printf(\"o\");\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int a[10000], b[10000] = {0};\n    int  i, n;\n    scanf(\"%d\", &n);\n\n    a[0] = a[1] = 1;\n    b[1] = 1;\n\n    for(i = 2; i <= n; i++)\n    {\n        a[i] = a[i-1] + a[i-2];\n        b[a[i]] = 1;\n        if(a[i] > n)\n            break;\n        //printf(\"%d \", a[i]);\n    }\n\n    for(i=1; i <= n; i++)\n    {\n        if(b[i] == 1)\n            printf(\"O\");\n        else\n            printf(\"o\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9915492957746479, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "51d7a47d336601d4cd855645375921a3", "bug_code_uid": "568c573faaa69ad6ffcee33502690ed1", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "d8052abc40f47a980cf5b03383a55f98", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ \n    int n;\n    scanf(\"%d\",&n);\n    int a[n],b[n],c[n],d[n];\n    int sum1=0,sum2=0,postion=1;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d %d\",&a[i],&b[i],c[i],&d[i]);\n        sum1=a[0]+b[0]+d[0]+c[0];\n        sum2=a[i]+b[i]+d[i]+c[i];\n        if(sum1<sum2);\n        position++;\n    }\n    printf(\"&d\",postition);\n}", "fixed": "#include<stdio.h>\nint main()\n{ \n    int n;\n    scanf(\"%d\",&n);\n    int a[n],b[n],c[n],d[n];\n    int sum1=0,sum2=0,position=1;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d %d\",&a[i],&b[i],&c[i],&d[i]);\n        sum1=a[0]+b[0]+d[0]+c[0];\n        sum2=a[i]+b[i]+d[i]+c[i];\n        if(sum1<sum2)\n        position++;\n    }\n    printf(\"%d\",position);\n}"}
{"similarity_score": 0.9412360688956434, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "52bacb57489997c6801b1e03c918b8fe", "bug_code_uid": "b8a39634688febfbec5349b0f6ce3ea0", "src_uid": "910c0e650d48af22fa51ab05e8123709", "apr_id": "5fb97121d0c06d23f39813d895ef3563", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid recur(int coloumn)\n{\n\tif(coloumn)\n\t{\n\t\tif(coloumn%26==0)\n\t\t{\t    \n\t\trecur((coloumn/26)-1);\n\t\tprintf(\"Z\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\trecur(coloumn/26);\n\t\t\tif(coloumn%26!=0)\n\t\t\t\tprintf(\"%c\",(coloumn)%26+64);\n\t\t\telse\n\t\t\t\tprintf(\"%c\",(coloumn)%26+65);\n\t\t}\n\t}\n}\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tchar s[2000000];\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='R' && s[1]>'0' && s[1]<='9')\n\t\t{\n\t\t\tint i=2,row=s[1]-'0',temp=1;\n\t\t\twhile(s[i]!='C')\n\t\t\t{\n\t\t\t\trow*=10;\n\t\t\t\trow+=(s[i]-'0');\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti++;\n\t\t\tint coloumn=0;\n\t\t\twhile(s[i]!='\\0')\n\t\t\t{\n\t\t\t\tcoloumn*=10;\n\t\t\t\tcoloumn+=(s[i]-'0');\n\t\t\t\ti++;\n\t\t\t}\n\t\t\trecur(coloumn);\n\t\t\tprintf(\"%d\\n\",row);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint i=1;\n\t\t\tint coloumn=s[0]-'A'+1;\n\t\t\twhile(s[i]>='A')\n\t\t\t{\n\t\t\t\tcoloumn*=26;\n\t\t\t\tcoloumn+=s[i]-'A'+1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tprintf(\"R\");\n\t\t\twhile(s[i]!='\\0')\n\t\t\t{\n\t\t\t\tprintf(\"%c\",s[i]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tprintf(\"C%d\\n\",coloumn);\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nvoid recur(int coloumn)\n{\n\tif(coloumn)\n\t{\n\t\tif(coloumn%26==0)\n\t\t{\t    \n\t\t\trecur((coloumn/26)-1);\n\t\t\tprintf(\"Z\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\trecur(coloumn/26);\n\t\t\tif(coloumn%26!=0)\n\t\t\t\tprintf(\"%c\",(coloumn)%26+64);\n\t\t\telse\n\t\t\t\tprintf(\"%c\",(coloumn)%26+65);\n\t\t}\n\t}\n}\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tchar s[2000000];\n\t\tscanf(\"%s\",s);\nint flag=0;\n\t\tif(s[0]=='R' && s[1]>'0' && s[1]<='9')\n\t\t{\n\t\t\tint t=2;\n\t\t\twhile(s[t]!='\\0')\n\t\t\t{\n\t\t\t\tif(s[t]=='C')\n\t\t\t\t\tflag=1;\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t{\n\t\t\tint i=2,row=s[1]-'0',temp=1;\n\t\t\twhile(s[i]!='C')\n\t\t\t{\n\t\t\t\trow*=10;\n\t\t\t\trow+=(s[i]-'0');\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti++;\n\t\t\tint coloumn=0;\n\t\t\twhile(s[i]!='\\0')\n\t\t\t{\n\t\t\t\tcoloumn*=10;\n\t\t\t\tcoloumn+=(s[i]-'0');\n\t\t\t\ti++;\n\t\t\t}\n\t\t\trecur(coloumn);\n\t\t\tprintf(\"%d\\n\",row);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint i=1;\n\t\t\tint coloumn=s[0]-'A'+1;\n\t\t\twhile(s[i]>='A')\n\t\t\t{\n\t\t\t\tcoloumn*=26;\n\t\t\t\tcoloumn+=s[i]-'A'+1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tprintf(\"R\");\n\t\t\twhile(s[i]!='\\0')\n\t\t\t{\n\t\t\t\tprintf(\"%c\",s[i]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tprintf(\"C%d\\n\",coloumn);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.38545454545454544, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "23229fd2e623bae82ab62bfa9bb3f228", "bug_code_uid": "ca7d6cf85736f98f800a94f36a13d004", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "a71c2a3991d4300160ef9684bdf526ed", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,a,b,c,x,mn,m ;\r\n\tscanf(\"%d\",&n);\r\n\tfor (int i = 0 ; i < n ; i++){\r\n\tscanf (\"%d %d %d\",&a,&b,&c);\r\n\tif (a>b)\r\n\t{ x = a ;\r\n      mn = b;}\r\n    else if (a<b)\r\n\t{x = b ;\r\n     mn = a ;}\r\n    if (x > c)\r\n\t{ if (c>mn)\r\n\t\t{m = c;}\r\n\t  else if (c < mn )\r\n\t  { m = mn ;\r\n\t    mn = c ;}\r\n\t}\r\n\telse if (x < c)\r\n\t{m = x;\r\n     x = c ;}\r\n\tif (mn + m == x )\r\n\t{printf(\"yes\\n\");}\r\n    else \r\n\t{printf(\"no\\n\");}\r\n\t}\r\n\treturn 0 ;\r\n}\r\n\t//  max min medium \r\n    ", "fixed": "#include<stdio.h>\r\nint main()\r\n{ int n,a,b,c;\r\n   scanf(\"%d\",&n);\r\n   for (int i  = 0 ; i < n; i++)\r\n   {   scanf(\"%d %d %d \",&a,&b,&c);\r\n\t   if (b+c == a) \r\n\t   {printf(\"YES\\n\");}\r\n\t   else if (a+c == b)\r\n\t   {printf(\"YES\\n\");}\r\n       else if (a+b == c)\r\n\t   {printf(\"YES\\n\");}\r\n       else\r\n\t   {printf(\"NO\\n\");}\r\n   }\r\n   return 0 ;\r\n}\r\n"}
{"similarity_score": 0.08867775138558986, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e683db62b38951f63bb09053425f2f49", "bug_code_uid": "85d67332dd2b88749788b30e0511ef9f", "src_uid": "bd9da9081902a87c61591fb58fcecfe3", "apr_id": "a9063c45f8c4a0bc6a73971b1b629e21", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<math.h>\r\n#define i_sc(a) scanf(\"%d\\n\",&a)\r\n#define s_sc(a) scanf(\"%s\",&a)\r\n#define i_pr(a) printf(\"%d\\n\",a)\r\n#define s_pr(a) printf(\"%s\",a)\r\n#define max 2812\r\n#define d 27\r\nint main()\r\n{\r\n\tint h;\r\n\ti_sc(h);\r\n\tfor(int t=0;t<n;t++)\r\n\t{\r\n\t\tchar s[256];\r\n\t\tgets(s);\r\n\t\tint day=0;\r\n\t\tint b[26];\r\n\t\tint c[281202];\r\n\t\tint count=0;\r\n\t\tfor(int i=0;i<strlen(s);i++)\r\n\t\t{\r\n\t\t\t//neu chua day bo nho\r\n\t\t\tif(!b[s[i]-'a']&&count<3)\r\n\t\t\t{\r\n\t\t\t\tb[s[i]-'a'] = 1;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\t//neu day bo nho\r\n\t\t\tif(!b[s[i]-'a']&&count==3)\r\n\t\t\t{\r\n\t\t\t\tcount=0;\r\n\t\t\t\ti=i-1;\r\n\t\t\t\tc[day++]=i;\r\n\t\t\t\tmemset(b,0,sizeof(b));\r\n\t\t\t}\r\n\t\t}\r\n\t\ti_pr(day+1);\r\n\t\tmemset(b,0,sizeof(b));\r\n\t}\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#define N 200000\r\nint main() \r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) \r\n    {\r\n\t\tchar cc[N + 1];\r\n\t\tint n, i, k;\r\n\t\tchar a, b, c;\r\n\t\tscanf(\"%s\", cc);\r\n        n = strlen(cc);\r\n\t\tk = 1, a = b = c = 0;\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t\tif (cc[i] != a && cc[i] != b && cc[i] != c) \r\n            {\r\n\t\t\t\tif (a == 0)\r\n\t\t\t\t\ta = cc[i];\r\n\t\t\t\telse if (b == 0)\r\n\t\t\t\t\tb = cc[i];\r\n\t\t\t\telse if (c == 0)\r\n\t\t\t\t\tc = cc[i];\r\n\t\t\t\telse\r\n\t\t\t\t\tk++, a = cc[i], b = c = 0;\r\n\t\t\t}\r\n\t\tprintf(\"%d\\n\", k);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9181141439205955, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "a15a0ec83d856d1422f8cac36ab23c96", "bug_code_uid": "ffeeb4fc6dd5fe6e249511a01829d6e7", "src_uid": "18b3d8f57ecc2b392c7b1708f75a477e", "apr_id": "2000f1c7fcfecb4f9c2b52c5d10aef7a", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,k,i,j;\n\tscanf(\"%d%d\",&n,&k);\n\ti=0,j=k;\n\twhile(i<j)\n\t{\n\t\tprintf(\"%d \",i++);\n\t\tprintf(\"%d \",j--);\n\t}\n\tfor(i=k+1;i<n;i++)\n\t\tprintf(\"%d \",i);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,k,i,j;\n\tscanf(\"%d%d\",&n,&k);\n\ti=1,j=k+1;\n\twhile(i<=j)\n\t{\n\t\tprintf(\"%d \",i++);\n\t\tif(i>j) break;\n\t\tprintf(\"%d \",j--);\n\t}\n\tfor(i=k+2;i<=n;i++)\n\t\tprintf(\"%d \",i);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9624765478424016, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "6403da30325a5055ca3fb5b99640cab1", "bug_code_uid": "90fc692e9c37dec9a543db7ab76c7706", "src_uid": "783df1df183bf182bf9acbb99208cdb7", "apr_id": "011b3f0608e7fd6ce78a21de4d384e26", "difficulty": 1700, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main () {\n    long long x1 , x2 , y1 , y2 ;\n    scanf ( \"%I64d %I64d %I64d %I64d\" , &x1 , &y1 , &x2 , &y2 ) ;\n    int i ,n ; scanf ( \"%d\" , &n ) ;\n    int cnt = 0 ;\n    long long a , b , c ;\n    for ( i = 0 ; i < n ; i++ ) {\n        scanf ( \"%I64d %I64d %I64d\" , &a , &b , &c ) ;\n        int dir1 = a*x1 + b*y1 + c ;\n        int dir2 = a*x2 + b*y2 + c ;\n        if ( dir1 > 0 && dir2 < 0 ) cnt++ ;\n        else if ( dir1 < 0 && dir2 > 0 ) cnt++ ;\n    }\n    printf ( \"%d\\n\" , cnt ) ;\n    return 0 ;\n}\n", "fixed": "#include<stdio.h>\nint main () {\n    long long x1 , x2 , y1 , y2 ;\n    scanf ( \"%I64d %I64d %I64d %I64d\" , &x1 , &y1 , &x2 , &y2 ) ;\n    int i , n ; scanf ( \"%d\" , &n ) ;\n    long long cnt = 0 ;\n    long long a , b , c ;\n    for ( i = 0 ; i < n ; i++ ) {\n        scanf ( \"%I64d %I64d %I64d\" , &a , &b , &c ) ;\n        long long dir1 = a*x1 + b*y1 + c ;\n        long long dir2 = a*x2 + b*y2 + c ;\n        if ( dir1 > 0 && dir2 < 0 ) cnt++ ;\n        else if ( dir1 < 0 && dir2 > 0 ) cnt++ ;\n    }\n    printf ( \"%I64d\\n\" , cnt ) ;\n    return 0 ;\n}\n"}
{"similarity_score": 0.43202668890742285, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e8cce08255a1c95f26e2815ffb98fad8", "bug_code_uid": "f7e66ddf50b3a17d2dd52f1e1fa364a8", "src_uid": "5993b5bf231fabd3c2af90124c41f118", "apr_id": "3d82c61faa59498ee44ce78706e451cd", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,A[200001],i,take;\n    \n    long long sum=0,max=0;\n    \n    scanf(\"%d\",&n);\n    \n    for(i=0; i<n; i++)\n    scanf(\"%d\",&A[i]);\n    \n    for(i=0; i<n; i++)\n    {\n        if(i<n-1 && A[i]<A[i+1])\n        {\n        if(A[i]>max)\n        {\n        take=A[i];\n        max=take;\n        }\n        else\n        take =0;\n        \n        sum+=take;\n        }\n        \n        else if(i<n-1)\n        {\n            if(A[i+1]-1>max)\n            {\n                take=A[i+1]-1;\n                max=take;\n            }\n            else\n            take=0;\n            sum+=take;\n        }\n        else \n        {\n            if(A[i]>max)\n            sum+=A[i];\n        }\n        \n    }\n    \n    printf(\"%lld\\n\",sum);\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,A[200001],i,take;\n    \n    long long sum=0,max=0;\n    \n    scanf(\"%d\",&n);\n    \n    for(i=0; i<n; i++)\n    scanf(\"%d\",&A[i]);\n    \n    take=A[n-1];\n    sum+=take;\n    \n    for(i=n-2; i>=0; i--)\n    {\n        if(A[i]<take)\n        take=A[i];\n        else \n        take-=1;\n        \n        if(take>=0)\n        sum+=take;\n        \n    }\n    \n    printf(\"%lld\\n\",sum);\n    \n    return 0;\n}"}
{"similarity_score": 0.9974424552429667, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1d4328236928770ccd6f04ba7db3ab68", "bug_code_uid": "8187e3280628ef63a5a5de6e27bf851f", "src_uid": "b11644953bdd1b92eb1b18c339a268a1", "apr_id": "c99af4fd8fe5cddbeddf8403a0a4f6b0", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "# include <stdio.h>\n# include <string.h>\n\nint list[3][101];\nint nlist[3];\nint compare( int *a, int *b){ return *a - *b; }\nint compareminus( int *a, int *b){ return *b - *a; }\n\nmain(){\n   int x, n, A, cont;\n   scanf(\"%d\", &n);\n   memset( nlist, 0, sizeof( nlist ));\n   for( x = 0; x < n; x++){\n     scanf(\"%d\", &A);\n     if( A < 0 ) list[ 2 ][ nlist[2]++] = A;\n     if( A == 0 ) list[ 1 ][ nlist[1]++] = A;\n     if( A > 0 ) list[ 0 ][ nlist[0]++] = A;\n   }\n   if( nlist[ 0 ] == 0){\n      if( nlist[ 2 ] <= 1) {\n         if( nlist[ 1 ] > 0 ){ printf(\"0\\n\"); return 0;}\n         else { printf(\"%d\\n\", list[2][0]); return 0;}\n      } \t\n   }\n   cont = 0;\n   for( x = 0; x < nlist[0]; x++){ if(cont != 0 ) printf(\" \"); cont++; printf(\"%d\", list[ 0 ][x]);  }\n   qsort( list[ 2 ], nlist[ 2 ], sizeof(int), compareminus);\n   for( x = 0; x*2 + 1 < nlist[ 2 ]; x++){\n   \t   if(cont != 0 ) printf(\" \"); cont++; \n       printf(\"%d %d\", list[2][x*2], list[2][x*2 + 1]);\t\n   }\n   printf(\"\\n\");\n}", "fixed": "# include <stdio.h>\n# include <string.h>\n\nint list[3][101];\nint nlist[3];\nint compare( int *a, int *b){ return *a - *b; }\nint compareminus( int *a, int *b){ return *b - *a; }\n\nmain(){\n   int x, n, A, cont;\n   scanf(\"%d\", &n);\n   memset( nlist, 0, sizeof( nlist ));\n   for( x = 0; x < n; x++){\n     scanf(\"%d\", &A);\n     if( A < 0 ) list[ 2 ][ nlist[2]++] = A;\n     if( A == 0 ) list[ 1 ][ nlist[1]++] = A;\n     if( A > 0 ) list[ 0 ][ nlist[0]++] = A;\n   }\n   if( nlist[ 0 ] == 0){\n      if( nlist[ 2 ] <= 1) {\n         if( nlist[ 1 ] > 0 ){ printf(\"0\\n\"); return 0;}\n         else { printf(\"%d\\n\", list[2][0]); return 0;}\n      } \t\n   }\n   cont = 0;\n   for( x = 0; x < nlist[0]; x++){ if(cont != 0 ) printf(\" \"); cont++; printf(\"%d\", list[ 0 ][x]);  }\n   qsort( list[ 2 ], nlist[ 2 ], sizeof(int), compare);\n   for( x = 0; x*2 + 1 < nlist[ 2 ]; x++){\n   \t   if(cont != 0 ) printf(\" \"); cont++; \n       printf(\"%d %d\", list[2][x*2], list[2][x*2 + 1]);\t\n   }\n   printf(\"\\n\");\n}"}
{"similarity_score": 0.9962073324905183, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a701bee8507cadef16d41f7240e7a185", "bug_code_uid": "151cc8d05e3e13741b544b0a143c41ad", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "b3442b6628f228a535c122bfbb826892", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int *arr = (int*)calloc(n, sizeof(int));\n  int check = n - 1, i;\n  for(i = 0;i < n;i++) {\n    int snack;\n    scanf(\"%d\", &snack);\n    arr[snack - 1] = snack;\n    while(arr[check] != 0) {\n      printf(\"%d \", arr[check]);\n      check--;\n      if(check < -1)\n        return 0;\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int *arr = (int*)calloc(n, sizeof(int));\n  int check = n - 1, i;\n  for(i = 0;i < n;i++) {\n    int snack;\n    scanf(\"%d\", &snack);\n    arr[snack - 1] = snack;\n    while(arr[check] != 0) {\n      printf(\"%d \", arr[check]);\n      check--;\n      if(check < 0)\n        return 0;\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
