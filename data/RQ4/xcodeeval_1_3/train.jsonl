{"similarity_score": 0.8951048951048951, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "9e47fcb435ae954880ebe6b7e7adc050", "bug_code_uid": "48dbe186f5560cd08aa94851e45fed05", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "b248fcef003a3251652d6e887336f2ca", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long dp[500010],i,N,ans,tmp,mid;\nint main(){\n    for(scanf(\"%I64d\",&N),i=1;i<=N;i++)\n        scanf(\"%I64d\", &tmp), dp[i]=dp[i-1]+tmp;\n    mid=2*dp[i-1]/3;\n    if(!(dp[i-1]%3))\n        for(i=2;i<N;i++) ans+=dp[i]==mid;\n    printf(\"%I64d\\n\", ans);\n}", "fixed": "#include <stdio.h>\nlong long dp[500010],i,N,ans,tmp,f,mid,cnt;\nint main(){\n    for(scanf(\"%I64d\",&N),i=1;i<=N;i++)\n        scanf(\"%I64d\",&tmp), dp[i]=dp[i-1]+tmp;\n    mid=2*(f=dp[i-1]/3);\n    if(!(dp[i-1]%3))\n        for(i=1;i<N;i++) ans+=(dp[i]==mid)*cnt, cnt+=dp[i]==f;\n    printf(\"%I64d\\n\", ans);\n}"}
