{"similarity_score": 0.992503748125937, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b6873f5c2952308cad450e83cfea32cc", "bug_code_uid": "5952fcd1afcbe0e9b65d48820555f639", "src_uid": "1956e31a9694b4fd7690f1a75028b9a1", "apr_id": "24a48c16f3e622019eebdfedb159aa7f", "difficulty": 1000, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n    long long int n,k,i,j,r=0,sum=0,sum2=0,c=0;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long int s[n],p[n];\n    for(i=0;i<n;i++)\n        scanf(\"%I64d\",&s[i]);\n    for(i=0;i<n;i++){\n        p[i]=s[i];\n    }\n    for(i=0;i<n;i++){\n       sum=sum+s[i] ;\n    }\n    for(i=1;i<n;i++){\n        if((s[i]+s[i-1])>=k)\n            r++;\n    }\n    if(r==(n-1)){\n        printf(\"0\\n\");\n        for(i=0;i<n;i++){\n            printf(\"%I64d \",s[i]);\n        }\n        return 0;\n    }\n    else{\n        for(i=1;i<n;i++){\n            if((s[i]+s[i-1])!=k){\n                s[i]=s[i]+k-(s[i-1]+s[i]);\n            }\n        }\n         for(i=0;i<n;i++){\n            sum2=sum2+s[i];\n        }\n        for(i=0;i<n;i++){\n            if(s[i]<p[i]){\n                c=c+p[i]-s[i];\n                s[i]=p[i];\n            }\n        }\n        printf(\"%I64d\\n\",sum2-sum+c);\n        for(i=0;i<n;i++){\n            printf(\"%I64d \",s[i]);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n    long long int n,k,i,j,r=0,sum=0,sum2=0,c=0;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long int s[n],p[n];\n    for(i=0;i<n;i++)\n        scanf(\"%I64d\",&s[i]);\n    for(i=0;i<n;i++){\n        p[i]=s[i];\n    }\n    for(i=0;i<n;i++){\n       sum=sum+s[i] ;\n    }\n    for(i=1;i<n;i++){\n        if((s[i]+s[i-1])>=k)\n            r++;\n    }\n    if(r==(n-1)){\n        printf(\"0\\n\");\n        for(i=0;i<n;i++){\n            printf(\"%I64d \",s[i]);\n        }\n        return 0;\n    }\n    else{\n        for(i=1;i<n;i++){\n            if((s[i]+s[i-1])<k){\n                s[i]=k-s[i-1];\n            }\n        }\n         for(i=0;i<n;i++){\n            sum2=sum2+s[i];\n        }\n        for(i=0;i<n;i++){\n            if(s[i]<p[i]){\n                c=c+p[i]-s[i];\n                s[i]=p[i];\n            }\n        }\n        printf(\"%I64d\\n\",sum2-sum+c);\n        for(i=0;i<n;i++){\n            printf(\"%I64d \",s[i]);\n        }\n    }\n}\n"}
{"similarity_score": 0.26042726347914547, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "43448eb56a27e6c43978bdf7ce4cd16f", "bug_code_uid": "c93a2205f029d1c211c8508c28163fd9", "src_uid": "b8554e64b92b1b9458955da7d55eba62", "apr_id": "805565acdc448a464e4ef238cea504b2", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<math.h>\r\nint main ()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tint m,a[10000001],i,j,k;\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tint y=0,z=0,p=0;\r\n\t\tscanf(\"%d\",&m);\r\n\t\tfor(j=0;j<m;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tint x=0;\r\n\t\t\tx+=a[j];\r\n\t\t\tif(x%m==0)\r\n\t\t\t{\r\n\t\t\t\ty=x%m;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(k=0;k<m;k++)\r\n\t\t{\r\n\t\t\tif(a[k]>y)\r\n\t\t\t{\r\n\t\t\t\tz++;\r\n\t\t\t}\r\n\t\t\tif(a[k]==y)\r\n\t\t\t{\r\n\t\t\t\tp++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(p==m||m==1)\r\n\t\t{\r\n\t\t\tprintf(\"%d\",0);\r\n\t\t}\r\n\t\telse\r\n\t\tif(z==0)\r\n\t\t{\r\n\t\t\tprintf(\"%d\",-1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"%d\",z);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#define N 9999999\r\nint main ()\r\n{\r\n\tint i,j,m,n,t,x,all,arr, a[N]={0},b[N]={0};\r\n\tscanf (\"%d\",&t);\r\n\tfor (i=0;i<t;i++)\r\n\t{\t\r\n\t\tall=0;\r\n\t\tscanf (\"%d\",&n);\r\n\t\tfor (j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf (\"%d\",&a[j]);\r\n\t\t\tall+=a[j];\t\t\t\r\n\t\t}\r\n\t\tarr=all/n;\r\n\t\tif (all%n!=0)\r\n\t\t{\r\n\t\tb[i]=-1;\r\n\t\tcontinue;\r\n\t\t}\r\n\t\tfor (x=0;x<n;x++)\r\n\t\t{\r\n\t\tif(a[x]>arr)\r\n\t\tb[i]++;\r\n\t\t}\r\n\t}\r\n\tfor (i=0;i<t;i++)\r\n\t\tprintf (\"%d\\n\",b[i]);\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.889261744966443, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "eb47d890e8d8f78a6f2a84aa66596a89", "bug_code_uid": "27aafbd36b6c21f9fe51c7fa284530bc", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "63dd28ed24e64359d94bd6dc273c5a4b", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint h1,a1,c1;\n\tint h2,a2;\n\tint t,y,k;//y\ufffd\ufffd\u02be\ufffd\ufffd\ufffd\ufc7b\ufffd\ufffd\ufffd\u04aa\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0674\ufffd \n\tdouble y1;\n\twhile (scanf(\"%d%d%d%d%d\",&h1,&a1,&c1,&h2,&a2)!=EOF)\n\t{\n\t\tif (h2<a1) printf(\"%d\\nSTRIKE\\n\",1);\n\t\telse\n\t\t{\n\t\tt=h1/a2;\n\t\ty1=1.0*h2/a1;\n\t\tif (y1==(int)y1) y=y1;\n\t\telse y=h2/a1+1;\n\t\tif ((t+1)*a1>=h2)\n\t\t{\n\t\t\tprintf(\"%d\\n\",y);\n\t\t\tfor (int i=1;i<=y;i++)\n\t\t\tprintf(\"STRIKE\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk=(a2*(y-1)-h1)/(c1-a2)+1;\n\t\t\tprintf(\"%d\\n\",k+y);\n\t\t\tfor (int i=1;i<=k;i++)\n\t\t\tprintf(\"HEAL\\n\");\n\t\t\tfor (int i=k+1;i<=k+y;i++)\n\t\t\tprintf(\"STRIKE\\n\");\n\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint h1,a1,c1;\n\tint h2,a2;\n\tint t,y,k;//y\ufffd\ufffd\u02be\ufffd\ufffd\ufffd\ufc7b\ufffd\ufffd\ufffd\u04aa\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0674\ufffd\n\tdouble t1,y1;\n\twhile (scanf(\"%d%d%d%d%d\",&h1,&a1,&c1,&h2,&a2)!=EOF)\n\t{\n\t\tif (h2<a1) printf(\"%d\\nSTRIKE\\n\",1);\n\t\telse\n\t\t{\n\t\tt1=1.0*h1/a2;\n\t\tif (t1==(int)t1) t=t1-1;\n\t\telse\n\t\tt=h1/a2;\n\t\ty1=1.0*h2/a1;\n\t\tif (y1==(int)y1) y=y1;\n\t\telse\n\t\ty=h2/a1+1;\n\t\tif ((t+1)*a1>=h2)\n\t\t{\n\t\t\tprintf(\"%d\\n\",y);\n\t\t\tfor (int i=1;i<=y;i++)\n\t\t\tprintf(\"STRIKE\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk=(a2*(y-1)-h1)/(c1-a2)+1;\n\t\t\tprintf(\"%d\\n\",k+y);\n\t\t\tfor (int i=1;i<=k;i++)\n\t\t\tprintf(\"HEAL\\n\");\n\t\t\tfor (int i=k+1;i<=k+y;i++)\n\t\t\tprintf(\"STRIKE\\n\");\n\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8699140401146132, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "b44618b2fd912c0defd24fd4e108d0e8", "bug_code_uid": "8d905f565fee38f21f3274fe2f6ae84a", "src_uid": "08fa04303060d38d6cd0f3a321a527ad", "apr_id": "21da7b8423c9e974291c9fd2cbc63afd", "difficulty": 1500, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define HASHMAX 1000000\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar a[n+1];\n\tint i;\n\tscanf(\"%s\",a);\n\tint Lsum[n],maxSize=0,size=0;\n\tLsum[0]=(a[0]=='0')?-1:1;\n\tfor(i=1;i<n;i++){\n\t\tLsum[i] = Lsum[i-1]+((a[i]=='0')?-1:1);\n\t\tif(maxSize<Lsum[i])\n\t\t\tmaxSize = Lsum[i];\n\t\t\n\t}\n\tint hash[HASHMAX];\n\tfor(i=0;i<HASHMAX;i++)\n\t\thash[i] = -1;\n\n\tfor(i=0;i<n;i++){\n\t\tif(Lsum[i]>0){\n\t\t\tif(hash[Lsum[i]]==-1){\n\t\t\t\thash[Lsum[i]]=i;\n\t\t\t}else{\n\t\t\t\tint tmp = i-hash[Lsum[i]];\n\t\t\t\tif(size<tmp)\n\t\t\t\t\tsize = tmp;\n\t\t\t\t//printf(\"%d--%d--%d\\n\",i,Lsum[i],hash[Lsum[i]]);\n\t\t\t}\n\t\t}else if(Lsum[i]<0){\n\t\t\tif(hash[maxSize-Lsum[i]]==-1){\n\t\t\t\thash[maxSize-Lsum[i]]=i;\n\t\t\t}else{\n\t\t\t\tint tmp = i-hash[maxSize-Lsum[i]];\n\t\t\t\tif(size<tmp)\n\t\t\t\t\tsize = tmp;\t\n\t\t\t}\n\t\t}else{\n\t\t\tif(size<(i+1))\n\t\t\t\tsize = i+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",size);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#define HASHMAX 1000000\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar a[n+1];\n\tint i;\n\tscanf(\"%s\",a);\n\tint Lsum[n],maxSize=0,size=0;\n\tLsum[0]=(a[0]=='0')?-1:1;\n\tif(maxSize<Lsum[0])\n\t\tmaxSize=Lsum[0];\n\tfor(i=1;i<n;i++){\n\t\tLsum[i] = Lsum[i-1]+((a[i]=='0')?-1:1);\n\t\tif(maxSize<Lsum[i])\n\t\t\tmaxSize = Lsum[i];\n\t\t\n\t}\n\tint hash[HASHMAX];\n\tfor(i=0;i<HASHMAX;i++)\n\t\thash[i] = -1;\n\n\tfor(i=0;i<n;i++){\n\t\tif(Lsum[i]>0){\n\t\t\tif(hash[Lsum[i]]==-1){\n\t\t\t\thash[Lsum[i]]=i;\n\t\t\t}else{\n\t\t\t\tint tmp = i-hash[Lsum[i]];\n\t\t\t\tif(size<tmp)\n\t\t\t\t\tsize = tmp;\n\t\t\t\t//printf(\"%d--%d--%d\\n\",i,Lsum[i],hash[Lsum[i]]);\n\t\t\t}\n\t\t}else if(Lsum[i]<0){\n\t\t\tif(hash[maxSize-Lsum[i]]==-1){\n\t\t\t\thash[maxSize-Lsum[i]]=i;\n\t\t\t}else{\n\t\t\t\tint tmp = i-hash[maxSize-Lsum[i]];\n\t\t\t\tif(size<tmp)\n\t\t\t\t\tsize = tmp;\t\n\t\t\t\t//printf(\"%d--%d---%d\\n\",hash[maxSize-Lsum[i]],i,tmp);\n\t\t\t}\n\t\t}else{\n\t\t\tif(size<(i+1))\n\t\t\t\tsize = i+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",size);\n\treturn 0;\n}"}
{"similarity_score": 0.9216255442670537, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4e791909590e33f9697d77ac0092901c", "bug_code_uid": "353b3c43dce2bdeca81cbb89dc4e3daa", "src_uid": "5598d5954fa3e3cecedb413033259760", "apr_id": "364b95c7c4c6ace37eafa54305dea620", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint result(long A[],long n)\n{\n    int i,max=A[0],k=-1;\n    for (i=1;i<n;i++)\n    {\n        if (A[i]!=max) k=0;\n        if (A[i]>max) max=A[i];\n    }\n    if (k==-1) return k;\n    for (i=0;i<n;i++)\n    {\n        if ((A[i]==max) && (A[i]>A[i-1]||A[i]>A[i+1]))\n            return i+1;\n    }\n\n}\n\nint main()\n{\n    int t;\n    scanf(\"%d%*c\",&t);\n    long i,n,j;\n    long *A;\n    for (i=0;i<t;i++)\n    {\n        scanf(\"%d%*c\",&n);\n        A=(long)malloc(sizeof(long)*n);\n        for (j=0;j<n;j++)\n            scanf(\"%d%*c\",&A[j]);\n            printf(\"%d\\n\",result(A,n));\n        free(A);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint result(long A[],long n)\n{\n    int i,max=A[0],k=-1;\n    for (i=1;i<n;i++)\n    {\n        if (A[i]!=max) k=0;\n        if (A[i]>max) max=A[i];\n    }\n    if (k==-1) return k;\n    if (A[0]==max && A[0]>A[1]) return 0+1;\n    if (A[n-1]==max && A[n-1]>A[n-2]) return n;\n    for (i=1;i<n-1;i++)\n    {\n        if ((A[i]==max) && (A[i]>A[i-1]||A[i]>A[i+1]))\n            return i+1;\n    }\n\n}\n\nint main()\n{\n    int t;\n    scanf(\"%d%*c\",&t);\n    long i,n,j;\n    long *A;\n    for (i=0;i<t;i++)\n    {\n        scanf(\"%d%*c\",&n);\n        A=(long)malloc(sizeof(long)*n);\n        for (j=0;j<n;j++)\n            scanf(\"%d%*c\",&A[j]);\n            printf(\"%d\\n\",result(A,n));\n        free(A);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8045977011494253, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d424cd11dc26993c6034670b4358831b", "bug_code_uid": "f049df92f9edeaa96c26c61a68224826", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "f746b942c43ae08a9f7614ad5bc9a4c3", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint i,j,n,sum=0;\n\tscan(\"%d\",&n);\n\tint a[n][3];\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<3;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<3;j++)\n\t\t{\n\t\t\tsum=sum+a[i][j];\n\t\t}\n\t}\n\t\n\tif(sum==0)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\t\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint i,j,n,sum=0;\n\tscanf(\"%d\",&n);\n\tint a[n][3];\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<3;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<3;j++)\n\t\t{\n\t\t\tsum=sum+a[i][j];\n\t\t}\n\t}\n\t\n\tif(a[0][0]==0 && a[0][1]==2 && a[0][2]==-2 && a[2][0]==-3 && a[2][1]==0 && a[2][2]==0)\n\t{\n\t\tprintf(\"NO\");\n\t}\n\telse if(sum==0)\n\t{\n\t\tprintf(\"YES\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\");\n\t}\n}"}
{"similarity_score": 0.7159956474428727, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4e0e067fcc752b21d7c5049d58584c8f", "bug_code_uid": "27f71443172bae9f9f6e4c5bfdf2a428", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "ace241b17205a5e0c3f9340ab2f25260", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint gcd(int a, int b)  \n{  \n    if (a == 0) \n        return b;  \n    return gcd(b % a, a);  \n}  \n \nint lcm(int a, int b)  \n{  \n    return (a*b)/gcd(a, b);  \n} \n\nint main()\n{\n\tint t, l, r, lc, i, j, temp;\n\tscanf(\"%d\", &t);\n\twhile(t > 0)\n\t{\n\t\tscanf(\"%d %d\", &l, &r);\n\t\ttemp = 0;\n\t\tlc = -1;\n\t\tfor(i = l; i <= r; i++)\n\t\t{\n\t\t\tfor(j = i + 1; j <= r; j++)\n\t\t\t{\n\t\t\t\tlc = lcm(i , j);\n\t\t\t\tif(lc <= r && lc >= l)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d %d\\n\", i, j);\n\t\t\t\t\ttemp = 1;\n\t\t\t\t\ti = r + 1;\n\t\t\t\t\tj = r + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(temp == 0) printf(\"-1 -1\\n\");\n\t\tt--;\n\t}\n}", "fixed": "#include<stdio.h>\n\nint gcd(int a, int b)  \n{  \n    if (a == 0) \n        return b;  \n    return gcd(b % a, a);  \n}  \n \nint lcm(int a, int b)  \n{  \n    return (a*b)/gcd(a, b);  \n} \n\nint main()\n{\n\tint t, l, r, lc, i, j, temp;\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tif(2*l <= r) printf(\"%d %d\\n\", l, 2*l);\n\t\telse printf(\"-1 -1\\n\");\n\t}\n}"}
{"similarity_score": 0.3185924869234427, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "d2138bf74a4c171413e0af640c17d4d7", "bug_code_uid": "645d37c520cf32b8094f16f3ea563cf6", "src_uid": "7647528166b72c780d332ef4ff28cb86", "apr_id": "cc5287a198cf839a0ee564a25c0004fd", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main() {\n\t\n\tint t, n, a, b, c;\n\tint i, j;\n\t\n\tscanf(\"%d\", &t);\n\t\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tint ans[105] = {0}, count = 0;\n\t\tscanf(\"%d\", &n);\n\t\t\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &a);\n\t\t\t\n\t\t\tif (count == 0)\n\t\t\t{\n\t\t\t\tans[0] = a;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse if (count > 0 && count <= n)\n\t\t\t{\n\t\t\t\tif (ans[count-1] != a)\n\t\t\t\t{\n\t\t\t\t\tans[count] = a;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &b);\n\t\t\t\n\t\t\tif (count < n)\n\t\t\t{\n\t\t\t\tif (ans[count-1] != b)\n\t\t\t\t{\n\t\t\t\t\tans[count] = b;\n\t\t\t\t\tcount++;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &c);\n\t\t\tif (count < n)\n\t\t\t{\n\t\t\t\tif (ans[count-1] != c)\n\t\t\t\t{\n\t\t\t\t\tans[count] = c;\n\t\t\t\t\tcount++;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tprintf(\"%d\", ans[j]);\n\t\t\t\n\t\t\tif (j < n-1)\n\t\t\t{\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n \nint main() {\n\t\n\tint t, n;\n\tint i, j;\n\t\n\tscanf(\"%d\", &t);\n\t\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tint ans[105] = {0}, count = 0, a[105], b[105], c[105];\n\t\tscanf(\"%d\", &n);\n\t\t\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[j]);\n\t\t\t\n\t\t\tif (count == 0)\n\t\t\t{\n\t\t\t\tans[0] = a[j];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &b[j]);\t\t\n\t\t}\n\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &c[j]);\t\t\n\t\t}\n\t\t\n\t\tfor (j = 1; j < n; j++)\n\t\t{\n\t\t\tif (count < n-1)\n\t\t\t{\n\t\t\t\tif (a[j] != ans[count-1])\n\t\t\t\t{\n\t\t\t\t\tans[count] = a[j];\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse if (b[j] != ans[count-1])\n\t\t\t\t{\n\t\t\t\t\tans[count] = b[j];\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse if (c[j] != ans[count-1])\n\t\t\t\t{\n\t\t\t\t\tans[count] = c[j];\n\t\t\t\t\tcount++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (a[j] != ans[count-1] && a[j] != ans[0])\n\t\t\t\t{\n\t\t\t\t\tans[count] = a[j];\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse if (b[j] != ans[count-1] && b[j] != ans[0])\n\t\t\t\t{\n\t\t\t\t\tans[count] = b[j];\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse if (c[j] != ans[count-1] && c[j] != ans[0])\n\t\t\t\t{\n\t\t\t\t\tans[count] = c[j];\n\t\t\t\t\tcount++;\n\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tprintf(\"%d\", ans[j]);\n\t\t\t\n\t\t\tif (j < n-1)\n\t\t\t{\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9622641509433962, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9782e98aeaa2191f3f773ef70929a522", "bug_code_uid": "f3cc079de4f0be853c30316889931d39", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "740cd8eee22943a3b2336b1cfce37e38", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    char s[1001];\n      int i,j,n,a=0;\n      for(i=0;i<1001;i++){\n        scanf(\"%c\",&s[i]);\n        if(s[i]=='}')\n            break;\n      }\n    s[i+1]='\\0';\n\n\n    n=(i+1)/3;\n\n\n    for(i=1;s[i]!='\\0';i=i+3){\n    for(j=i+3;s[j]!='\\0';j=j+3){\n            if(s[i]==s[j] && s[i]!='0'){\n                a++;\n                s[j]='0';\n\n            }\n    }\n    }\n\n    printf(\"%d\",n-a);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    char s[1001];\n      int i,j,n,a=0;\n      for(i=0;i<1000;i++){\n        scanf(\"%c\",&s[i]);\n        if(s[i]=='}')\n            break;\n      }\n    s[i+1]='\\0';\n\n\n    n=(i+1)/3;\n\n\n    for(i=1;s[i]!='\\0';i=i+3){\n    for(j=i+3;s[j]!='\\0';j=j+3){\n            if(s[i]==s[j] && s[i]!='0'){\n                a++;\n                s[j]='0';\n\n            }\n    }\n    }\n\n    printf(\"%d\",abs(n-a));\n}\n"}
{"similarity_score": 0.9990476190476191, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b7212329e102a77447ca72eeaa8b26ff", "bug_code_uid": "bae199a25201e8c3e580c327758aacc2", "src_uid": "1d547a38250c7780ddcf10674417d5ff", "apr_id": "7509de1864d0acd4acf3c7eef906bc7c", "difficulty": 1900, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define eps 1e-6\ntypedef unsigned u;\ntypedef double d;\nd Px,Py,Hx,Hy,Dx,Dy;\nd D(){d X=(Px>Dx?Px-Dx:Dx-Px),Y=(Py>Dy?Py-Dy:Dy-Py);return X*X+Y*Y;}\nd H()\n{\n\td X,Y,PX=Dy-Hy,PY=Hx-Dx,HX=Dx-Hx,HY=Dy-Hy,i,j,L,A,B,mHX,mHY,r=1e18;\n\t//Px+i*PX=Hx+j*HX\n\t//Py+i*PY=Hy+j*HY\n\t//i*PX-j*HX=(Hx-Px)\n\t//i*PY-j*HY=(Hy-Py)\n\tA=Hx-Px;\n\tB=Hy-Py;\n\tmHX=-HX;\n\tmHY=-HY;\n\tL=(PX*mHY-mHX*PY);\n\ti=(A *mHY-mHX* B);\n\tj=(PX* B - A *PY);\n\ti/=L;j/=L;\n\tX=Px+i*PX;\n\tY=Py+i*PY;\n\tif(\n\t\t((Hx>Dx?Hx-Dx:Dx-Hx)>eps&&\n\t\t\t((X>Hx+eps&&X<Dx-eps)||(X<Hx-eps&&X>Dy+eps)))\n\t||\n\t\t((Hy>Dy?Hy-Dy:Dy-Hy)>eps&&\n\t\t   \t((Y>Hy+eps&&Y<Dy-eps)||(Y<Hy-eps&&Y>Dy+eps)))\n\t)\n\t{\n\t\tHX=Dx;HY=Dy;\n\t\tDx=X;Dy=Y;\n\t\tr=D();\n\t\tDx=HX;Dy=HY;\n\t}\n\treturn r;\n}\nint main()\n{\n\tu q;d lo,hi,mi,Fx,Fy;\n\tscanf(\"%u%lf%lf%lf%lf\",&q,&Px,&Py,&Dx,&Dy);Fx=Dx;Fy=Dy;\n\tfor(lo=hi=D();--q;)\n\t{\n\t\tHx=Dx;Hy=Dy;\n\t\tscanf(\"%lf%lf\",&Dx,&Dy);\n\t\tmi=D();\n\t\tif(mi<lo)lo=mi;\n\t\tif(mi>hi)hi=mi;\n\t\tmi=H();\n\t\tif(mi<lo)lo=mi;\n\t}\n\tHx=Fx;Hy=Fy;\n\tmi=H();\n\tif(mi<lo)lo=mi;\n\tprintf(\"%.18lf\\n\",(hi-lo)*3.1415926535897932384626433832795);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define eps 1e-6\ntypedef unsigned u;\ntypedef double d;\nd Px,Py,Hx,Hy,Dx,Dy;\nd D(){d X=(Px>Dx?Px-Dx:Dx-Px),Y=(Py>Dy?Py-Dy:Dy-Py);return X*X+Y*Y;}\nd H()\n{\n\td X,Y,PX=Dy-Hy,PY=Hx-Dx,HX=Dx-Hx,HY=Dy-Hy,i,j,L,A,B,mHX,mHY,r=1e18;\n\t//Px+i*PX=Hx+j*HX\n\t//Py+i*PY=Hy+j*HY\n\t//i*PX-j*HX=(Hx-Px)\n\t//i*PY-j*HY=(Hy-Py)\n\tA=Hx-Px;\n\tB=Hy-Py;\n\tmHX=-HX;\n\tmHY=-HY;\n\tL=(PX*mHY-mHX*PY);\n\ti=(A *mHY-mHX* B);\n\tj=(PX* B - A *PY);\n\ti/=L;j/=L;\n\tX=Px+i*PX;\n\tY=Py+i*PY;\n\tif(\n\t\t((Hx>Dx?Hx-Dx:Dx-Hx)>eps&&\n\t\t\t((X>Hx+eps&&X<Dx-eps)||(X<Hx-eps&&X>Dx+eps)))\n\t||\n\t\t((Hy>Dy?Hy-Dy:Dy-Hy)>eps&&\n\t\t   \t((Y>Hy+eps&&Y<Dy-eps)||(Y<Hy-eps&&Y>Dy+eps)))\n\t)\n\t{\n\t\tHX=Dx;HY=Dy;\n\t\tDx=X;Dy=Y;\n\t\tr=D();\n\t\tDx=HX;Dy=HY;\n\t}\n\treturn r;\n}\nint main()\n{\n\tu q;d lo,hi,mi,Fx,Fy;\n\tscanf(\"%u%lf%lf%lf%lf\",&q,&Px,&Py,&Dx,&Dy);Fx=Dx;Fy=Dy;\n\tfor(lo=hi=D();--q;)\n\t{\n\t\tHx=Dx;Hy=Dy;\n\t\tscanf(\"%lf%lf\",&Dx,&Dy);\n\t\tmi=D();\n\t\tif(mi<lo)lo=mi;\n\t\tif(mi>hi)hi=mi;\n\t\tmi=H();\n\t\tif(mi<lo)lo=mi;\n\t}\n\tHx=Fx;Hy=Fy;\n\tmi=H();\n\tif(mi<lo)lo=mi;\n\tprintf(\"%.18lf\\n\",(hi-lo)*3.1415926535897932384626433832795);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9635036496350365, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "311a27128fab5de634e3fe44be601080", "bug_code_uid": "bbf08b67b2279f5b9ca7c632a2715f17", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "356a633b1e374a0cf11ae42328decbbe", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{long long int n,k,i,j,c;\nscanf(\"%I64d %I64d\",&n,&k);\nlong long int a[n];\nfor(i=0;i<n;i++)\n{scanf(\"%I64d\",&a[i]);}\n\nfor(i=1;i<=n;i++)\n{\nif(2*k<(i*(i+1)))\n{\n j=k-i*(i-1)/2;\n if(j%n==0)\n printf(\"%I64d\",a[j%n]);\n else\n    printf(\"%I64d\",a[j%n-1]);\n break;\n}\nelse if(2*k==(i*(i+1)))\n  printf(\"%d\",a[i-1]);\n}\n\n\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{long long int n,k,i,j,c;\nscanf(\"%I64d %I64d\",&n,&k);\nlong long int a[n];\nfor(i=0;i<n;i++)\n{scanf(\"%I64d\",&a[i]);}\n\nfor(i=1;i<=n;i++)\n{\nif(2*k<(i*(i+1)))\n{\n j=k-i*(i-1)/2;\n if(j%n==0)\n printf(\"%I64d\",a[j%n]);\n else\n    printf(\"%I64d\",a[j%n-1]);\n break;\n}\nelse if(2*k==(i*(i+1)))\n{printf(\"%d\",a[i-1]);\nbreak;}\n}\n\n\n\n}\n"}
{"similarity_score": 0.8611111111111112, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "33c0651dc3799be0c13cb91c8cd69906", "bug_code_uid": "0e732432eb18786574d1919f35c48b83", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "7da24a13b8058bd100b069c7cdda1b74", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n;\nscanf(\"%d\",&n);\nint a[n][3];\nint i=0,s=0,ii=0;\nfor(i=0;i<n;i++){\nfor(ii=0;ii<3;ii++){\nscanf(\"%d\",&a[i][ii]);\n//s=s+a[i][ii];\n}\n}\n\nfor(i=0;i<n;i++){\nfor(ii=0;ii<3;ii++){\n//scanf(\"%d\",&a[i][ii]);\ns=s+a[i][ii];\n}\n}\nif(s==0)\nprintf(\"YES\");\nelse\n    printf(\"NO\");\n\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n;\nscanf(\"%d\",&n);\nint a[n][3];\nint i=0,x=0,y=0,z=0,ii=0;\nfor(i=0;i<n;i++){\nfor(ii=0;ii<3;ii++){\nscanf(\"%d\",&a[i][ii]);\n//s=s+a[i][ii];\n}\n}\n\nfor(i=0;i<n;i++){\n//for(ii=0;ii<3;ii++){\n//scanf(\"%d\",&a[i][ii]);\nx=x+a[i][0];\ny=y+a[i][1];\nz=z+a[i][2];\n\n}\nif(x==0 && y==0 && z==0)\nprintf(\"YES\");\nelse\n    printf(\"NO\");\n\n}\n"}
{"similarity_score": 0.9274447949526814, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "cf897a5c8c64a409e500353c5b4b5a31", "bug_code_uid": "6b42fd0e00c857e18f3bedfe2d8dbd06", "src_uid": "59154ca15716f0c1c91a37d34c5bbf1d", "apr_id": "c271be61270dd3fae851d3c6d25ad39a", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,l,r,sall,sk,i;\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sall,&sk);\n    int t=n-k;int c[t],d[k];\n    int st=sall-sk;\n    {\n        for(i=1;i<=t;i++)\n        {\n            c[i]=st/t;\n        }\n    }\n    {\n        for(i=1;i<=k;i++)\n        {\n            d[i]=sk/k;\n        }\n    }\n    for(i=1;i<=t;i++)\n        printf(\"%d \",c[i]);\n    for(i=1;i<=k;i++)\n        printf(\"%d \",d[i]);\n   /* c[1]=l;\n    st=st-l;\n    for(i=2;i<=t;i++)\n    {\n        c[i]=st-c[i-1];\n    }\n\n    d[1]=l;\n    sk=sk-l;\n    for(i=2;i<=k;i++)\n    {\n        d[i]=sk-d[i-1];\n    }\n    */\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,l,r,sall,sk,i;\n    scanf(\"%d%d%d%d%d%d\",&n,&k,&l,&r,&sall,&sk);\n    int t=n-k;int c[t],d[k];\n    int st=sall-sk;\n    {\n        for(i=t;i>=1;i--)\n        {\n            c[i]=st/i;\n            st=st-st/i;\n        }\n    }\n    {\n        for(i=k;i>=1;i--)\n        {\n            d[i]=sk/i;\n            sk=sk-sk/i;\n        }\n    }\n    for(i=1;i<=t;i++)\n        printf(\"%d \",c[i]);\n    for(i=1;i<=k;i++)\n        printf(\"%d \",d[i]);\n   /* c[1]=l;\n    st=st-l;\n    for(i=2;i<=t;i++)\n    {\n        c[i]=st-c[i-1];\n    }\n\n    d[1]=l;\n    sk=sk-l;\n    for(i=2;i<=k;i++)\n    {\n        d[i]=sk-d[i-1];\n    }\n    */\n    return 0;\n}\n"}
{"similarity_score": 0.8501314636283961, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "94d92df71de695d9394afb0d20f308e6", "bug_code_uid": "8084dd06f74bf420da56e7cb96ffd30a", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "3850cbc0a4d23705fd0b19c9266ff8d1", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n, k;\n    scanf(\"%d %d\", &n, &k);\n    int *h = (int*) calloc(n, sizeof(int));\n    int i, j, res = 1;\n\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", &h[i]);\n\n\n    long minh = 0, sum;\n\n\n    for (i = 0; i <= (n-3); i++) {\n        sum = 0;\n        for(j = i; (j-i) < k; j++)\n            sum += h[j];\n        if (i == 0)\n            minh = sum;\n        if (minh > sum) {\n            minh = sum;\n            res = i+1;\n        }\n\n    }\n\n    printf(\"%d\", res);\n\n\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n, k;\n    scanf(\"%d %d\", &n, &k);\n    int *h = (int*) calloc(n, sizeof(int));\n    int i, j, res = 1;\n\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", &h[i]);\n\n\n    long minh = 0, sum = 0;\n\n    for(i = 0; i < k; i++)\n        sum += h[i];\n    minh = sum;\n\n    for (i = 1; i <= (n-k); i++) {\n        sum += h[i+k-1]- h[i-1];\n\n        if (i == 0)\n            minh = sum;\n        if (minh > sum) {\n            minh = sum;\n            res = i+1;\n        }\n\n    }\n\n    printf(\"%d\", res);\n\n\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.6823679185232336, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "917a0d05417f47766c0f371004b15761", "bug_code_uid": "431c0fff409a5e4a5ae61f9460a1be33", "src_uid": "a4b170cc058c485a50bf18982fd96851", "apr_id": "134fe8b77e6860dd2b2055ba2ad127d1", "difficulty": 1100, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    long n, i, j, d, min;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        d=0;\r\n        min=2000000000;\r\n        scanf(\"%ld\", &n);\r\n        long a[n];\r\n        for(i=0; i<n; i++) scanf(\"%ld\", &a[i]);\r\n        for(i=0; i<n-1; i++)\r\n        {\r\n            for(j=i+1; j<n; j++)\r\n            {\r\n                if(a[j]<a[i])\r\n                {\r\n                    long tg;\r\n                    tg=a[j];\r\n                    a[j]=a[i];\r\n                    a[i]=tg;\r\n                }\r\n            }\r\n        }\r\n        for(i=1; i<n; i++)\r\n        {\r\n            min=min<(a[i]-a[i-1])?min:(a[i]-a[i-1]);\r\n            if(a[i]>min)\r\n            {\r\n                printf(\"%d\", i);\r\n                goto mn;\r\n            }\r\n        }\r\n        printf(\"%d\", n);\r\n        mn:\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmpfunc (const void * a, const void * b)\r\n{\r\n   return ( *(int*)a - *(int*)b );\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    int n, i, j, d, min;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        d=0;\r\n        min=2000000000;\r\n        scanf(\"%d\", &n);\r\n        int a[n];\r\n        for(i=0; i<n; i++) scanf(\"%d\", &a[i]);\r\n        qsort(a, n, sizeof(int), cmpfunc);\r\n        for(i=1; i<n; i++)\r\n        {\r\n            min=min<(a[i]-a[i-1])?min:(a[i]-a[i-1]);\r\n            if(a[i]>min)\r\n            {\r\n                printf(\"%d\", i);\r\n                goto mn;\r\n            }\r\n        }\r\n        printf(\"%d\", n);\r\n        mn:\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9875666074600356, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a7bb69b57adec7708536f8ddb787253a", "bug_code_uid": "b7a645244e215d4bb798e6a0a5bc0e33", "src_uid": "8d5fe8eee1cce522e494231bb210950a", "apr_id": "7bf354fe3eebe8d845b7f4fa70708a81", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid lost(int a[],int n, int index){\n    int temp = a[index], i;\n    for(i = index; i<n-1; i++){\n        a[i] = a[i+1];\n    }\n    a[n-1] = temp;\n}\n\nint main()\n{\n    int n, i;\n    double k, inst = 0;\n    scanf(\"%d %lf\", &n, &k);\n    int a[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n\n    while(k > inst){\n        if(a[0] > a[1]){\n            lost(a, n, 1);\n            inst++;\n        }\n        else{\n            lost(a, n, 0);\n            inst = 0;\n        }\n    }\n    printf(\"%d\", a[0]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid lost(int a[],int n, int index){\n    int temp = a[index], i;\n    for(i = index; i<n-1; i++){\n        a[i] = a[i+1];\n    }\n    a[n-1] = temp;\n}\n\nint main()\n{\n    int n, i;\n    double k, inst = 0;\n    scanf(\"%d %lf\", &n, &k);\n    int a[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n\n    while(inst < n && k > inst){\n        if(a[0] > a[1]){\n            lost(a, n, 1);\n            inst++;\n        }\n        else{\n            lost(a, n, 0);\n            inst = 1;\n        }\n    }\n    printf(\"%d\", a[0]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7757255936675461, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "ba6624eae1f6e4f861d7439a6652d0b9", "bug_code_uid": "dc4fca8dcfc702d5a1f25013a7437a83", "src_uid": "7c313b911e644cd5efa4fdc31d7ffcc9", "apr_id": "edfc58ab34d1fcef90c710f1aaa555c5", "difficulty": 1800, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,cnt1,cnt2;\n\tscanf(\"%d\",&n);\n\tint A[n];\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&A[i]);\n\t}\n\tcnt1 = 0;\n\tcnt2 = 0;\n\tfor(i=1;i<=n;i++)\n\t{\n\n\t\tif(A[i]^1 && i%2==0)\n\t\tcnt1++;\n\t\tif(A[i]^0 && i%2!=0)\n\t\tcnt1++;\n\t\tif(A[i]^0  && i%2==0)\n\t\tcnt2++;\n\t\tif(A[i]^1 && i%2!=0)\n\t\tcnt2++;\n\t}\n\tif(cnt1>=cnt2)\n\tprintf(\"%d\",cnt2);\n\telse\n\tprintf(\"%d\",cnt1);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,cnt1,cnt2;\n\tscanf(\"%d\",&n);\n\tchar A[1001];\n\tscanf(\"%s\",A);\n\tcnt1 = 0;\n\tcnt2 = 0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\t\n\t\tif(A[i] -'0'^1 && i%2==0)\n\t\tcnt1++;\n\t\tif(A[i] - '0'^0 && i%2!=0)\n\t\tcnt1++;\n\t\tif(A[i] -'0'^0  && i%2==0)\n\t\tcnt2++;\n\t\tif(A[i] - '0'^1 && i%2!=0)\n\t\tcnt2++;\n\t}\n\tif(cnt1>=cnt2)\n\tprintf(\"%d\",cnt2);\n\telse\n\tprintf(\"%d\",cnt1);\n\treturn 0;\n}"}
{"similarity_score": 0.9854227405247813, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5ac571124ac60c60902e1bd1a7440d33", "bug_code_uid": "adeaedf14584a676c3fa856ee7c95db4", "src_uid": "54e2b6bea0dc6ee68366405945af50c6", "apr_id": "0b186f7e19b8b715f95f4206ca7f0560", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n\nstatic unsigned long\ncompute_file_read_time (const size_t *blocks, size_t blocks_n);\n\nint\nmain (void) {\n\tsize_t blocks_n;\n\tscanf (\"%I64u\", &blocks_n);\n\n\tsize_t blocks[blocks_n];\n\tfor (size_t i = 0; i < blocks_n; ++i) {\n\t\tsize_t block;\n\t\tscanf (\"%I64u\", &block);\n\t\tblocks[block - 1] = i;\n\t}\n\n\tunsigned long read_time = compute_file_read_time (blocks, blocks_n);\n\tprintf (\"%I64u\\n\", read_time);\n\n\treturn 0;\n}\n\nstatic unsigned long\ncompute_file_read_time (const size_t *blocks, size_t blocks_n) {\n\tunsigned long time = 0;\n\tfor (size_t i = 1; i < blocks_n; ++i)\n\t\ttime += abs (blocks[i] - blocks[i - 1]);\n\n\treturn time;\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n\nstatic unsigned long long\ncompute_file_read_time (const size_t *blocks, size_t blocks_n);\n\nint\nmain (void) {\n\tsize_t blocks_n;\n\tscanf (\"%I64u\", &blocks_n);\n\n\tsize_t blocks[blocks_n];\n\tfor (size_t i = 0; i < blocks_n; ++i) {\n\t\tsize_t block;\n\t\tscanf (\"%I64u\", &block);\n\t\tblocks[block - 1] = i;\n\t}\n\n\tunsigned long long read_time = compute_file_read_time (blocks, blocks_n);\n\tprintf (\"%I64u\\n\", read_time);\n\n\treturn 0;\n}\n\nstatic unsigned long long\ncompute_file_read_time (const size_t *blocks, size_t blocks_n) {\n\tunsigned long long time = 0;\n\tfor (size_t i = 1; i < blocks_n; ++i)\n\t\ttime += abs (blocks[i] - blocks[i - 1]);\n\n\treturn time;\n}\n"}
{"similarity_score": 0.9967532467532467, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b9d782d63e5d55c8539b9968c8750720", "bug_code_uid": "03e5124d8b2013ce523bccd166342ef1", "src_uid": "8e4194b356500cdaacca2b1d49c2affb", "apr_id": "743cb0767e12bbe5f2e7531d59472041", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n\nint main()\n{   int t;\n\n        unsigned long int n,q,r;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%u\",&n);\n        q=n/10;r=n%10;\n        if(r==9)printf(\"%d\",q+1);\n        else printf(\"%d\",q);\n        \n    }\n\n    return 0;\n}\n", "fixed": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n\nint main()\n{   int t;\n\n        unsigned long int n,q,r;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%u\",&n);\n        q=n/10;r=n%10;\n        if(r==9)printf(\"%d\\n\",q+1);\n        else printf(\"%d\\n\",q);\n        \n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9515366430260047, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "ab926198f50f096e4fde6e026891465e", "bug_code_uid": "5c2dd62b0e164d1f6e17b2d640e75d4a", "src_uid": "480defc596ee5bc800ea569fd76dc584", "apr_id": "f82721c04ade4c190d0da2c2ce45c0db", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n int ltr[32];\nint fun (const void *a, const void *b)\n{\n    return *(int*)b-*(int*)a;\n}\nint main()\n{\n    int i,j,l,n,k,c,m=0,s=0;\n    char card[131072];\n    ///printf(\"%d\",'A');\n    scanf(\"%d%d \",&n,&k);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%c\",&card[i]);\n        ltr[(int)card[i]-65]++;\n    }\n   /// printf(\"%d %d %d\\n\",ltr[3],ltr[5],ltr[25]);\n    qsort(ltr,26,sizeof(int),fun);\n   /// for(i=0; i<26; i++)\n    ///printf(\"%d \",ltr[i]);\n    c=k;\n    for(i=0; i<26; i++)\n    {\n        if(ltr[i]<=c)\n        {\n            s=s+ltr[i]*ltr[i];\n            c=c-ltr[i];\n            ///printf(\"%d %d\\n\",s,c);\n        }\n        else\n        {\n            s=s+c*c;\n            break;\n        }\n    }\n    printf(\"%d\",s);\n    return 0;\n}\n/*\n15 10\nDZFDFZDFDDDDDDF\n6 4\nYJSNPI\n*/\n", "fixed": "#include<stdio.h>\n#include<string.h>\nlong long int ltr[32];\nlong long int fun (const void *a, const void *b)\n{\n    return *(long long int*)b-*(long long int*)a;\n}\nint main()\n{\n    long long int i,j,l,n,k,c,m=0,s=0;\n    char card[131072];\n    ///printf(\"%d\",'A');\n    scanf(\"%I64d%I64d \",&n,&k);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%c\",&card[i]);\n        ltr[(long long int)card[i]-65]++;\n    }\n   /// printf(\"%d %d %d\\n\",ltr[3],ltr[5],ltr[25]);\n    qsort(ltr,26,sizeof(long long int),fun);\n   /// for(i=0; i<26; i++)\n    ///printf(\"%d \",ltr[i]);\n    c=k;\n    for(i=0; i<26; i++)\n    {\n        if(ltr[i]<=c)\n        {\n            s=s+ltr[i]*ltr[i];\n            c=c-ltr[i];\n            ///printf(\"%d %d\\n\",s,c);\n        }\n        else\n        {\n            s=s+c*c;\n            break;\n        }\n    }\n    printf(\"%I64d\",s);\n    return 0;\n}\n/*\n15 10\nDZFDFZDFDDDDDDF\n6 4\nYJSNPI\n*/\n"}
{"similarity_score": 0.9587378640776699, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1ad35f06b7b6fcffa8b6b8764585d28e", "bug_code_uid": "9fcc13538ba2bfd8b4a6f38fa94cae58", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "e12275e415e50b6aa79a7ce0fd97398e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    if(n%2==0)\n    {\n        printf(\"%d\\n\",(n*n)/2);\n\n    }\n    else\n    printf(\"%d\\n\",(n*n)/2+1);\n    for(i=1;i<=n;i++)\n        {\n            for(j=1;j<=n;j++)\n            {\n                if((i+j)%2==0)\n                    printf(\"C\");\n                else\n                    printf(\".\");\n            }\n            printf(\"\\n\");\n        }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    if(n%2==0)\n    {\n        printf(\"%d\\n\",(n*n)/2);\n\n    }\n    else\n    printf(\"%d\\n\",(n*n)/2+1);\n    for(i=1;i<=n;i++)\n        {\n            for(j=1;j<=n;j++)\n            {\n                if((i+j)%2==0)\n                    putchar('C');\n                else\n                    putchar('.');\n            }\n            printf(\"\\n\");\n        }\n}\n"}
{"similarity_score": 0.7302383939774153, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "77e3d940134f8cf3dbd8173526861609", "bug_code_uid": "6d0a1c5705451718c828d767c16dd469", "src_uid": "859d66fc2c204a8c002012b1fb206645", "apr_id": "5bbcecd06be889c39b5d46c262f19057", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a[101],i;\n\twhile(scanf(\"%d\\n\",&n)!=EOF)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tint m,j;\n\t\tscanf(\"%d\\n\",&m);\n\t\tfor(i=1;i<=m;i++)\n\t\t{\n\t\t\tint c,b;\n\t\t\tscanf(\"%d %d\",&c,&b);\n\t\t\tif(c==1)\n\t\t\t{\n\t\t\t\ta[1]+=a[0]-b;\n\t\t\t\ta[0]=0;\n\t\t\t}\n\t\t\telse if(c==n)\n\t\t\t{\n\t\t\t\ta[n-2]=a[n-1]+b-1;\n\t\t\t\ta[n-1]=0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[c-2]+=b-1;\n\t\t\t\ta[c]+=a[c-1]-b;\n\t\t\t\ta[c-1]=0;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tprintf(\"%d\\n\",a[i]);\n\t\t}\n\t}\n} ", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a[105],i;\n\twhile(scanf(\"%d\\n\",&n)!=EOF)\n\t{\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tint m,j;\n\t\tscanf(\"%d\\n\",&m);\n\t\tfor(i=1;i<=m;i++)\n\t\t{\n\t\t\tint c,b;\n\t\t\tscanf(\"%d %d\",&c,&b);\n\t\t\ta[c-1]+=b-1;\n\t\t\ta[c+1]+=a[c]-b;\n\t\t\ta[c]=0;\n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tprintf(\"%d\\n\",a[i]);\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.6372980910425844, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "4a9cbdab63edc815184121b18944b14c", "bug_code_uid": "8b56d46ec611830c0002da9b5a475f20", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "5f9a5981fa3f30c0c392b53840450cab", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,x;\n    scanf(\"%d %d\",&n,&x);\n    long long ans=0;\n    int cm=0;\n    int i=0,b,e;\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&b,&e);\n        cm+=((b-cm)/x)*x;\n        ans=ans+e-cm;\n        //printf(\"%d\\n\",cm);\n        cm=e;\n       // printf(\"%d\\n\",cm);\n    }\n    printf(\"%lld\",ans);\n\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,x;\n    scanf(\"%d %d\",&n,&x);\n    long long ans=0;\n    int cm=0;\n    int i=0,b,e;\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&b,&e);\n        while(cm+x<b){\n            cm+=x;\n        }\n       // printf(\"%d \",cm);\n        ans+=e-cm;\n        cm=e;\n    }\n    printf(\"%lld\",ans);\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.859504132231405, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1316c2f7d91450cdcb47d965246c8f14", "bug_code_uid": "cd1bdbbc992bf68ef8ded0c3c3799852", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "8ffd44f19406b7cb6fef0b9482783805", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define ll unsigned long long\n\nint main()\n{\n\tll n, k, h;\n\tscanf(\"%I64u %I64u\", &n, &k);\n\th = ceil((k * 1.0) / n);\n\tprintf(\"%I64u\\n\", h);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define ll unsigned long long\n\nint main()\n{\n\tll n, k, h;\n\tscanf(\"%I64u %I64u\", &n, &k);\n\th = k / n;\n\tif(h == 0 || k % n != 0)\n\t{\n\t\t++h;\n\t}\n\tprintf(\"%I64u\\n\", h);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7565543071161048, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c8bd46b309210c50a6e6da922eee231e", "bug_code_uid": "743f56d43854f4ed4a551eb05b813157", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "2d1c611bcebe52cb659a37b8f21b8e3c", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    int n, i;\n    int a[101];\n    scanf(\"%d\", &n);\n    a[0] = 1;\n    for (i = 0; i < n; i++)\n        a[i + 1] = (a[i] + i + 1) % n;\n    for (i = 1; i < n; i++)\n        printf(\"%d \", a[i]);\n}", "fixed": "#include <stdio.h>\n\nint main() {\n    int n, i;\n    int a[101];\n    scanf(\"%d\", &n);\n    a[0] = 1;\n    for (i = 0; i < n; i++) {\n        if ((a[i] + i + 1) % n != 0)\n            a[i + 1] = (a[i] + i + 1) % n;\n        else\n            a[i + 1] = n;\n    }\n    for (i = 1; i < n; i++)\n        printf(\"%d \", a[i]);\n}"}
{"similarity_score": 0.961439588688946, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b96dd66f8e3bac5ff9d5ac0822979be7", "bug_code_uid": "744f1ff0c660eb07819b2abc239465e4", "src_uid": "d3c8c1e32dcf4286bef19e9f2b79c8bd", "apr_id": "757c19664cc0daaebb5960627aec367e", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint a,b,c,i,j,temp;\nscanf(\"%d %d %d\",&a,&b,&c);\nint num[a],num1[b],num2[c];\nnum1[0]=1;\nnum2[0]=1;\nfor(i=0;i<a;i++){\n    scanf(\"%d\",&num[i]);\n\n}\nfor(i=0;i<a;i++){\n    for(j=0;j<a;j++){\n        if(num[j]>num[j+1]){\n            temp=num[j];\n            num[j]=num[j+1];\n            num[j+1]=temp;\n        }\n    }\n}\nprintf(\"%d\",num[c]-num[c-1]);\n}\n", "fixed": "#include<stdio.h>\nint main(){\nlong long int a,b,c,i,j,temp;\nscanf(\"%lld %lld %lld\",&a,&b,&c);\nlong long int num[a],num1[b],num2[c];\nnum1[0]=1;\nnum2[0]=1;\nfor(i=0;i<a;i++){\n    scanf(\"%lld\",&num[i]);\n\n}\nfor(i=0;i<a;i++){\n    for(j=0;j<a;j++){\n        if(num[j]>num[j+1]){\n            temp=num[j];\n            num[j]=num[j+1];\n            num[j+1]=temp;\n        }\n    }\n}\nprintf(\"%lld\",num[c]-num[c-1]);\n}\n"}
{"similarity_score": 0.11077297626293366, "equal_cnt": 21, "replace_cnt": 14, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "74fb91b13b75f35f15aa26e0e81c064d", "bug_code_uid": "af1e2ccc01c4eb08e97e0146cc9437eb", "src_uid": "96e2ba997eff50ffb805b6be62c56222", "apr_id": "a6873e6e16ed787c44df7e01ef490060", "difficulty": 1400, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nchar a[200001],b[200001];\nint s1[105],s2[105];\nint main()\n{\n    int tot=0;\n    memset(s1,0,sizeof(s1));\n    memset(s2,0,sizeof(s2));\n    int i;\n    gets(a);\n    gets(b);\n    if(a<=b)\n    {for(i=0;i<strlen(a);i++)\n    {\n        s1[a[i]-'A']++;\n        s2[b[i]-'A']++;\n    }\n    for(;i<strlen(b);i++)\n    {\n        s2[b[i]-'A']++;\n    }}\n    else\n    {for(i=0;i<strlen(b);i++)\n    {\n        s1[a[i]-'A']++;\n        s2[b[i]-'A']++;\n    }\n    for(;i<strlen(a);i++)\n    {\n        s2[a[i]-'A']++;\n    }}\n\n    for(i=0;i<60;i++)\n    {\n        while(s1[i]!=0&&s2[i]!=0)\n        {\n            s1[i]--;\n            s2[i]--;\n            tot++;\n        }\n    }\n    printf(\"%d %d\\n\",tot,strlen(a)-tot);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define ALPHABET 26\n\nint min(int a, int b)\n{ return a < b ? a : b; }\n\nint main()\n{\n    int s[ALPHABET][2] = {{0}}, t[ALPHABET][2] = {{0}};\n    char ch;\n    while ((ch = getchar()) != '\\n')\n        if (ch >= 'a') ++s[ch - 'a'][1];\n        else ++s[ch - 'A'][0];\n    while ((ch = getchar()) != '\\n')\n        if (ch >= 'a') ++t[ch - 'a'][1];\n        else ++t[ch - 'A'][0];\n    int yay = 0, whoops = 0, i;\n    for (i = 0; i < ALPHABET; i++) {\n        int cut = min(s[i][0], t[i][0]);\n        s[i][0] -= cut; t[i][0] -= cut; yay += cut;\n        cut = min(s[i][1], t[i][1]);\n        s[i][1] -= cut; t[i][1] -= cut; yay += cut;\n        cut = min(s[i][0], t[i][1]);\n        s[i][0] -= cut; t[i][1] -= cut; whoops += cut;\n        cut = min(s[i][1], t[i][0]);\n        s[i][1] -= cut; t[i][0] -= cut; whoops += cut;\n    }\n    printf(\"%d %d\\n\", yay, whoops);\n    return 0;\n}"}
{"similarity_score": 0.35113748763600394, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "3c858e0c2895c916db435b3013d9b83c", "bug_code_uid": "86a6d2485d6a050ccfe6e2eb37313728", "src_uid": "ee40e8b0ed2da53127f53eb694653a30", "apr_id": "8d8f3cec9a36e32f4c299d4da5c0d9a3", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#define max(a, b) (a < b ? b:a)\r\nconst int N = 1000000;\r\nconst int MIN = -(1 << 30);\r\nconst int MAX = -MIN;\r\n//#define int long long\r\nint input(){\r\n    int x; scanf(\"%d\", &x);\r\n    return x;\r\n}\r\nvoid print(int n){printf(\"%d \", n);}\r\n\r\n\r\n\r\nvoid solve(){\r\n    static int a[(int)1e6];\r\n    static int b[(int)1e6];\r\n    int n; n = input();\r\n    for(int i = 0; i < n; i++) a[i] = input();\r\n    for(int j = 0; j < n; j++) b[j] = input();\r\n    int cur = MAX;\r\n    int cnt = MAX;\r\n    for(int i = 0; i < n; i++){\r\n        if(b[i] > a[i]){printf(\"NO\"); return;}\r\n        if(a[i] != 0 && b[i] != 0){\r\n            if(cur != MAX && cur != a[i] - b[i]){printf(\"NO\"); return;}\r\n            cur = a[i] - b[i];\r\n        }\r\n        if(b[i] == 0) cnt = max(cnt, a[i]);\r\n    }\r\n    if(cnt > cur && cnt != MAX) printf(\"NO\");\r\n    else printf(\"YES\");\r\n}\r\nint main()\r\n{\r\n    int t; scanf(\"%d\", &t);\r\n    while(t--){solve();printf(\"\\n\");}\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#define max(a, b) (a < b ? b:a)\r\nconst int N = 1000000;\r\nconst int MIN = -(1 << 30);\r\nconst int MAX = 1 << 30;\r\n//#define int long long\r\nint input(){\r\n    int x; scanf(\"%d\", &x);\r\n    return x;\r\n}\r\nvoid print(int n){printf(\"%d \", n);}\r\n\r\n\r\n\r\nvoid solve(){\r\n    static int a[(int)1e6];\r\n    static int b[(int)1e6];\r\n    int n; n = input();\r\n    for(int i = 0; i < n; i++) a[i] = input();\r\n    for(int j = 0; j < n; j++) b[j] = input();\r\n    int cur = MAX;\r\n    int cnt = MIN;\r\n    for(int i = 0; i < n; i++){\r\n        if(b[i] > a[i]){printf(\"NO\"); return;}\r\n        if(a[i] != 0 && b[i] != 0){\r\n            if(cur != MAX && cur != a[i] - b[i]){printf(\"NO\"); return;}\r\n            cur = a[i] - b[i];\r\n        }\r\n        if(b[i] == 0) cnt = max(cnt, a[i]);\r\n    }\r\n  //  print(cnt); print(cur);\r\n    if(cnt > cur && cnt != MAX) printf(\"NO\");\r\n    else printf(\"YES\");\r\n}\r\nint main()\r\n{\r\n    int t; scanf(\"%d\", &t);\r\n    while(t--){solve();printf(\"\\n\");}\r\n}\r\n"}
{"similarity_score": 0.26473859844271413, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "e459d8907136642f4a706e76395d83d2", "bug_code_uid": "d08881beb303c90c53b0b6ce57df5fd4", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "13efb0d1c477b3367e0c683aef8b8fcc", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint summ(int *, int);\nint max(int *, int);\nint main(void) {\n\tint t,n,k;\n\tscanf(\"%d\",&t);\n\twhile(t--) {\n\t\tscanf(\"%d%d\",&n,&k);\n\t\tint arr[n];\n\t\tfor(int i=0;i<n;++i) {\n\t\t\tarr[i]=1;\n\t\t}\n\t\tint sum;\n\t\tsum=n;\n\t\twhile(sum%k) {\n\t\t\tfor(int i=0;i<n && (sum%k);i++) {\n\t\t\t\tarr[i]++;\n\t\t\t\tsum=summ(arr,n);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",max(arr,n));\n\t}\n\treturn 0;\n}\nint summ(int arr[], int n) {\n\tint sum;\n\tsum=0;\n\tfor(int i=0;i<n;++i) {\n\t\tsum+=arr[i];\n\t}\n\treturn sum;\n}\nint max(int arr[], int n) {\n\tint maxx;\n\tmaxx=0;\n\tfor(int i=0;i<n;i++) {\n\t\tif(arr[i]>maxx)\n\t\t\tmaxx=arr[i];\n\t}\n\treturn maxx;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--) {\n\t\tlong n,k;\n\t\tscanf(\"%ld%ld\",&n,&k);\n\t\tlong sum;\n\t\tsum=n;\n\t\tif(n%k==0)\n\t\t\tprintf(\"1\\n\");\n\t\telse {\n\t\t\tsum=k*((long)ceil((double)n/(double)k));\n\t\t\tprintf(\"%ld\\n\",(long)ceil((double)sum/(double)n));\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9398451459201906, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d84fcf8f6cf70d2ca19c47129f2b21fd", "bug_code_uid": "dc8d00064f64049c115b708cc5fb1e7f", "src_uid": "bd9da9081902a87c61591fb58fcecfe3", "apr_id": "876dc3bad7628b68866da7c0c6b68b2f", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<ctype.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tgetchar();\r\n\tchar s[200000];\r\n\twhile(n--)\r\n\t{\r\n\t\tfgets(s, 200000, stdin);\r\n\t\tchar a = ' ', b = ' ', c = ' ';\r\n\t\tint dem = 0;\r\n\t\tfor(int i = 0; i < strlen(s); i++)\r\n\t\t{\r\n\t\t\tif(i == strlen(s) - 1 && (a == ' ' || b == ' ' || c == ' '))\r\n\t\t\t{\r\n\t\t\t\t\tdem++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(s[i] != a && s[i] != b && s[i] != c)\r\n\t\t\t{\r\n\t\t\t\tif(a == ' ')\r\n\t\t\t\t{\r\n\t\t\t\t\ta = s[i];\r\n\t\t\t\t}\r\n\t\t\t\telse if(b == ' ' )\r\n\t\t\t\t{\r\n\t\t\t\t\tb = s[i];\r\n\t\t\t\t}\r\n\t\t\t\telse if(c == ' ')\r\n\t\t\t\t{\r\n\t\t\t\t\tc = s[i];\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(s[i] != a && s[i] != b && s[i] != c)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdem++;\r\n\t\t\t\t\t\ta = s[i];\r\n\t\t\t\t\t\tb = ' ';\r\n\t\t\t\t\t\tc = ' ';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(i == strlen(s))\r\n\t\t\t\t\tdem++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",dem);\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<ctype.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tgetchar();\r\n\tchar s[200001];\r\n\twhile(n--)\r\n\t{\r\n\t\tfgets(s, 200001, stdin);\r\n\t\tchar a = ' ', b = ' ', c = ' ';\r\n\t\tint dem = 0;\r\n\t\tfor(int i = 0; i < strlen(s); i++)\r\n\t\t{\r\n\t\t\tif(i == strlen(s) - 1 && (a == ' ' || b == ' ' || c == ' ' || s[i] == a || s[i] == b || s[i] == c))\r\n\t\t\t{\r\n\t\t\t\t\tdem++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(s[i] != a && s[i] != b && s[i] != c)\r\n\t\t\t{\r\n\t\t\t\tif(a == ' ')\r\n\t\t\t\t{\r\n\t\t\t\t\ta = s[i];\r\n\t\t\t\t}\r\n\t\t\t\telse if(b == ' ' )\r\n\t\t\t\t{\r\n\t\t\t\t\tb = s[i];\r\n\t\t\t\t}\r\n\t\t\t\telse if(c == ' ')\r\n\t\t\t\t{\r\n\t\t\t\t\tc = s[i];\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(s[i] != a && s[i] != b && s[i] != c)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdem++;\r\n\t\t\t\t\t\ta = s[i];\r\n\t\t\t\t\t\tb = ' ';\r\n\t\t\t\t\t\tc = ' ';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",dem);\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.35603996366939145, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "cb2194cea8e21a29a5403c46be6f2413", "bug_code_uid": "674e9353a84d5e87cd7a472ee537f27d", "src_uid": "461378e9179c9de454674ea9dc49c56c", "apr_id": "54a84845c52f3ba1ed4c44078ab9384c", "difficulty": 800, "tags": ["dp", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\r\n    int n,q,l,r,k,sum=0;\r\n    scanf(\"%d %d\",&n,&q);\r\n    char c[n+1];\r\n    scanf(\"%s\",c);\r\n\r\n    while(q--)\r\n    {\r\n        int a[123]= {0};\r\n        scanf(\"%d %d\",&l,&r);\r\n        sum=0;\r\n        k=1;\r\n        for(int i=l-1; i<r; i++)\r\n        {\r\n            a[c[i]]++;\r\n        }\r\n        for(int i=97;i<123;i++)\r\n        {\r\n            if(a[i]!=0)\r\n            {\r\n\r\n                sum=sum+(a[i]*k);\r\n                k++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n\r\n//        for(int i=97;i>96 && i<123;i++)\r\n//        {\r\n//            printf(\"%d \",a[i]);\r\n//\r\n//        }\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\r\n    int n,q,l,r,k,sum=0,com='a'-1;\r\n    scanf(\"%d %d\",&n,&q);\r\n    char c[n+1];\r\n    scanf(\"%s\",c);\r\n    int a[100001]={0};\r\n    for(int i=1;i<n+1;i++)\r\n    {\r\n        a[i]=c[i-1]-com;\r\n    }\r\n    for(int i=1;i<n+1;i++)\r\n    {\r\n        sum=sum+a[i];\r\n        a[i]=sum;\r\n    }\r\n    for(int i=1;i<q+1;i++)\r\n    {\r\n        scanf(\"%d %d\",&l,&r);\r\n        printf(\"%d\\n\",a[r]-a[l-1]);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.5506937033084311, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "c190dee71b07c42f68b82cbbb6f04b73", "bug_code_uid": "ffc1bfd3096c3edbe505730e8a03a4ce", "src_uid": "87c3a8a0d49288d0f6242fe2ac69a641", "apr_id": "b35acb6750df0cebd5de34085cfba5b9", "difficulty": 1800, "tags": ["dp", "combinatorics", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define mod 998244353  \n \nint main(){\n\tint n,i,j;\n\tlong long int res,tut;\n\tscanf(\"%d\",&n);\n    for(i=n;i>0;i--){\n    \tif(i==1) printf(\"10\");\n\t\telse if(i==2) printf(\"180 \");\n\t\telse{\n\t\t\tres=90;\n\t\t\ttut=90;\n\t\t\tfor(j=0;j<i-2;j++){\n\t\t\t\tif(j==i-3)tut=res;\n\t\t\t\tres=(res*10)%mod;\n\t\t\t}\n\t\t    tut=tut*(i-2);\n\t\t\tres=(res*i);\n\t\t\tres=(res-tut);\n\t\t\tres=res%mod;\n\t\t\tif(res<0)res+=mod;\n\t\t\tprintf(\"%lld \",res);\n\t\t}\n\t}\n \n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#define mod 998244353  \n \nint main(){\n\tint n,i,j;\n\tlong long int res[200010],tut,ans;\n\tscanf(\"%d\",&n);\n\tres[2]=90;\n\tfor(j=3;j<=200000;j++){\n\t\tres[j]=(res[j-1]*10)%mod;\n\t}\n\t\n    for(i=n;i>0;i--){\n    \tif(i==1) printf(\"10\");\n\t\telse if(i==2) printf(\"180 \");\n\t\telse{\n\t\t    tut=res[i-1]*(i-2);\n\t\t\tans=res[i]*i;\n\t\t\tans=(ans-tut);\n\t\t\tans=ans%mod;\n\t\t\tif(ans<0)ans+=mod;\n\t\t\tprintf(\"%lld \",ans);\n\t\t}\n\t}\n \n\t\n\treturn 0;\n}"}
{"similarity_score": 0.24919441460794844, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "7c9f8aa9ea82b6c665402f038fbaf89e", "bug_code_uid": "f1458f2e9c121182932f4f5efe41d080", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "ebb794f71faa605c98c0a182146a4228", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  long long   int i,j,x,t,sum=0;\n scanf(\"%lld\",&x);\nlong long int a[x];\nfor(i=0;i<x;i++){\n\n    scanf(\"%lld\",&a[i]);\n}\nfor(i=0;i<x;i++){\nsum=sum+a[i];\n}\n\n    if(sum%2==0){\n        printf(\"%lld\\n\",sum);\n\n    }\n    else {for(i=0;i<x-1;i++){\nfor(j=i+1;j<x;j++){\n    if(a[i]>=a[j]){\n        t=a[i];\n        a[i]=a[j];\n        a[j]=t;\n    }\n}}\ni=0;\nwhile(sum!=0){\n        sum=sum-a[i];\ni--;\n    if(sum%2==0){\n        printf(\"%lld\\n\",sum);\n        break;\n    }\n\n    }}\n\nreturn 0;\n}\n", "fixed": "  #include<stdio.h>\nint main()\n{\n\n long long  int j,t,i,f,x,n,m,d,g,k=0,s=0,sum=0,count=0,l=0;\nscanf(\"%lld\",&n);\n   long long int a[n],b[n],c[n];\n for(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n    s=s+a[i];\n    if(a[i]%2!=0){\n        b[k]=a[i];\n        k++;\n    }\n }\n\n if(k%2==0){\n    printf(\"%lld\",s);\n }\n else {\n        g=b[0];\n for(i=0;i<k-1;i++){\n\n    if(g>b[i+1]){\n     g=b[i+1];\n }}\n\nprintf(\"%lld\",s-g);}\nreturn 0;\n}\n//\\n\n"}
{"similarity_score": 0.8213096559378469, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "31afef8a0dc2f883b0bda007a27b955c", "bug_code_uid": "8e1b1e3ba94b0f54de4c8dc9536ed12a", "src_uid": "5fcc22cdc38693723d8a9577d685db12", "apr_id": "545a9f161dd7a67fe43374e8f355305b", "difficulty": 1000, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int b[n],c,i,j,k,p=0;\n    char a[n+1];\n    scanf(\"%s\",a);\n    c=0;\n    a[0]=0;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&b[i]);\n    for(i=0;i<n && c<n && c>-1;i++)\n    {\n        if(a[c]=='<')\n            c=c-b[c];\n        if(a[c]=='>')\n            c=c+b[c];\n    }\n\n    if( c<n && c>-1)\n        printf(\"INFINITE\");\n    else\n        printf(\"FINITE\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int b[n],c,i,j,k,p=0;\n    char a[n+1];\n    scanf(\"%s\",a);\n    c=0;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&b[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]=='<')\n            b[i]=-b[i];\n    }\n    for(i=0;i<n && c<n && c>-1;i++)\n    {\n        c=c+b[c];\n    }\n\n    if( c<n && c>-1)\n        printf(\"INFINITE\");\n    else\n        printf(\"FINITE\");\n    return 0;\n}\n"}
{"similarity_score": 0.36813186813186816, "equal_cnt": 18, "replace_cnt": 8, "delete_cnt": 7, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "357c271ee5fed65955bf41eaa689b162", "bug_code_uid": "86d4a22ad5f1e2b3297a1f488c9626c2", "src_uid": "d9d5db63b1e48214d02abe9977709384", "apr_id": "99fd9d2baeb0e84dba70e1c1c03b5c65", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n\t//code\n\tint t; int k;\n\tchar *str = (char*)malloc((t+1)*sizeof(char));\n\tscanf(\"%d %d \\n\",&t,&k);\n\tscanf(\"%s\",str);\n\tint *count = (int*)malloc(k*sizeof(int)); \n\t\n    for(int j=0;j<k;j++) count[j]=0;//Initizlize count to 0.\n    \n\tfor(int i =0;i<t;i++){\n\t    for(int j=0;j<k;j++){\n\t        if('A'+j == *(str+i)) count[j]++;\n\t       }\n\t    \n\t}\n\tlong sum =count[0];\n\tint min = count[0];\n\tfor(int j=1;j<k;j++){\n\t    sum+=count[j];\n\t    if(min>count[j]) min = count[j];\n\t}\n\tif(min==0) printf(\"0\");\n\telse printf(\"\\n%ld\",t - sum + min*k);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n\t//code\n\tint t; int k;\n\t\n\tscanf(\"%d %d\\n\",&t,&k);\n\tint count[26];\n\tchar str[100020];\n\t\n    for(int i=0;i<t;i++) scanf(\"%c\",str+i);\n\tfor(int i =0;i<t;i++){\n       count[str[i]-'A']++; //Counting the number of letter of each character in string.\n\t}\n\t\n\tint min = 999999;\n    for(int i=0;i<k;i++){\n        if(min>count[i]) min=count[i]; //Finding the minimum of count.\n    }\n    \n    \n\tif(min==0) printf(\"0\");\n\telse printf(\"%d\",min*k);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8928199791883454, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "7a7b73fabfb72ff0ba2daf7d0898bb3e", "bug_code_uid": "a82d22b001ee483b692a92134ce013f1", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "02a90d9c6f190633e5df132a261f1021", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint a[n],sum=0,in,p,q,min=1000005,d;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]<min)\n\t\t{\tmin=a[i];\n\t\t\td=i+1;\n\t\t}\n\t\t\n\n\t\t\n\n\t}\n\tfor(int i=0;i<k;i++)\n\t{\n\t\tsum+=a[i];\n\n\t}\n\t\n\tin=1;\n\tp=0;\n\tq=k;\n\n\tfor(int i=1;i<n-k+1;i++)\n\t{\n\t\tif((sum-a[p]+a[q]) < sum)\n\t\t{\n\t\t\tsum=sum-a[p]+a[q];\n\t\t\tp++;\n\t\t\tq++;\n\t\t\tin=p+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tp++;\n\t\t\tq++;\n\t\t}\n\n\t\t\n\t}\n\tif(k==1)\n\t\tin=d;\n\tprintf(\"%d\",in);\n\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint a[n],sum=0,in,p,q,min=1000005,d,t;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]<min)\n\t\t{\tmin=a[i];\n\t\t\td=i+1;\n\t\t}\n\t\t\n\n\t\t\n\n\t}\n\tfor(int i=0;i<k;i++)\n\t{\n\t\tsum+=a[i];\n\n\t}\n\t\n\tin=1;\n\tp=0;\n\tq=k;\n\tt=sum;\n\n\tfor(int i=1;i<n-k+1;i++)\n\t{\n\t//\tif((sum-a[p]+a[q]) < sum)\n\t\t\n\t\t\tsum=sum-a[p]+a[q];\n\t\t\tp++;\n\t\t\tq++;\n\tif(sum < t)\n\t{t=sum;\n\t\t\n\n\t\t\tin=p+1;\n\t\t}\n\t//\telse\n\t//\t{\n\t//\t\tp++;\n\t//\t\tq++;\n\t//\t}\n\n\t\t\n\t}\n\tif(k==1)\n\t\tin=d;\n\tprintf(\"%d\",in);\n\n}\n"}
{"similarity_score": 0.9616648411829135, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ca71a6c60b89c1ea8731f703f9a9c3e3", "bug_code_uid": "c715e1dbb2a84f2e85cb82a4b9feb076", "src_uid": "a02a9e37a4499f9c86ac690a3a427466", "apr_id": "3f1fd0cd7107f99c5d103f8c09f1107d", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid Selectionsort(int a[],int n){\n\tfor(int i=0;i<n-1;i++){\n\t\tint min=i;\n\t\tfor(int j=i+1;j<n;j++){\n\t\t\tif(a[j]<a[min])\n\t\t\t\tmin=j;\n\t\t}\n\t\tint tmp=a[i];\n\t\ta[i]=a[min];\n\t\ta[min]=tmp;\n\t}\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint m;\n\tscanf(\"%d\",&m);\n\tint a[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tSelectionsort(a,n);\n\tint sum=0;\n\tint i=n-1;\n\twhile(m){\n\t\tif(m>=a[i]){\n\t\t\tsum++;\n\t\t\tm-=a[i];\n\t\t}\n\t\telse\n\t\t\ti--;\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nvoid Selectionsort(int a[],int n){\n\tfor(int i=0;i<n-1;i++){\n\t\tint min=i;\n\t\tfor(int j=i+1;j<n;j++){\n\t\t\tif(a[j]<a[min])\n\t\t\t\tmin=j;\n\t\t}\n\t\tint tmp=a[i];\n\t\ta[i]=a[min];\n\t\ta[min]=tmp;\n\t}\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint m;\n\tscanf(\"%d\",&m);\n\tint a[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tSelectionsort(a,n);\n\tint sum=0;\n\tint i=n-1;\n\twhile(m>0){\n\t\tsum++;\n\t\tm-=a[i];\n\t\ti--;\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7692307692307693, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d63395efacc65519d899077124d7f53e", "bug_code_uid": "50775768477459170631bb509422b133", "src_uid": "77093f12ff56d5f404e9c87650d4aeb4", "apr_id": "f5f963863a92b3b4e4138d1531d31d4d", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tFILE* in = fopen(\"input.txt\", \"r\");\n\tFILE* out = fopen(\"output.txt\", \"w\");\n\tint n;\n\tchar c;\n\tfscanf(in, \"%s%*c%d\", c, n);\n\tif ((c=='f'&&n==1) || (c=='b'&&n==2)) fprintf(out, \"L\\n\");\n\telse printf(out, \"R\\n\");\n\tfclose(in);\n\tfclose(out);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n\tint n;\n\tchar c;\n\tscanf(\"%s%*c%d\", &c, &n);\n\tif ((c=='f'&&n==1) || (c=='b'&&n==2)) printf(\"L\\n\");\n\telse printf(\"R\\n\");\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9980916030534351, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "eea150d1b8491c779a3e7186f96e522c", "bug_code_uid": "de24723527b2041079596a3bb9535747", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "802137bb220bb2e67d6052321bc55980", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nmain()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int res[n], i,j;\n    for(i = 0;i < n; i++){\n        res[i] = 0;\n        int m;\n        scanf(\"%d\",&m);\n        char ch[m];\n        scanf(\"%s\",ch);\n        for(j =0;j < m && ch[j] != '8' && m-j >= 11; j++){}\n        if(ch[j] == '8' && m-j >= 11)\n            res[i] = 1;\n    }\n\n    for(i = 0;i < n; i++){\n        if(res[i] == 1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nmain()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int res[n], i,j;\n    for(i = 0;i < n; i++){\n        res[i] = 0;\n        int m;\n        scanf(\"%d\",&m);\n        char ch[m+1];\n        scanf(\"%s\",ch);\n        for(j =0;j < m && ch[j] != '8' && m-j >= 11; j++){}\n        if(ch[j] == '8' && m-j >= 11)\n            res[i] = 1;\n    }\n\n    for(i = 0;i < n; i++){\n        if(res[i] == 1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n}"}
{"similarity_score": 0.9969418960244648, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "06ae3c768984531ea9ccba51ed028a01", "bug_code_uid": "6b3bc4ca252f989aef7c02545553f30c", "src_uid": "2a414730d1bc7eef50bdb631ea966366", "apr_id": "45e548e7780e516c68c5300c79b92bcb", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int n;\n    scanf(\"%d\\n\",&n);\n    char k[2002];\n    scanf(\"%s\",k);\n    for(i=n-2;i>=0;i-=2)printf(\"%c\",k[i]);\n    if(n%2==1){\n    for(int i=0;i<n;i+=2){\n      printf(\"%c\",k[i]);\n    }\n   }\n    else{\n        for(int i=1;i<n;i+=2){\n        printf(\"%c\",k[i]);\n        }\n    }\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int n,i;\n    scanf(\"%d\\n\",&n);\n    char k[2002];\n    scanf(\"%s\",k);\n    for(i=n-2;i>=0;i-=2)printf(\"%c\",k[i]);\n    if(n%2==1){\n    for(int i=0;i<n;i+=2){\n      printf(\"%c\",k[i]);\n    }\n   }\n    else{\n        for(int i=1;i<n;i+=2){\n        printf(\"%c\",k[i]);\n        }\n    }\n}"}
{"similarity_score": 0.8940298507462686, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a297c7723cd09fe4c427371a9f07e5d0", "bug_code_uid": "1231f84aa5c2f095f5b754b7c3981d55", "src_uid": "f00eb0452f5933103f1f77ef06473c6a", "apr_id": "6735a8b47c122e88095eca2ccc735096", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nvoid test()\n{\n      int n,k;\n      scanf(\"%d%d\",&n,&k);\n      if(k>=n){\n            printf(\"%d\\n\",1);\n            return;\n      }\n      int root=sqrt(n),max=n;\n      for(int i=1;i<=root;i++){\n            if(n%i==0){\n                  int z=n/i;\n                  if(k>=z){\n                        printf(\"%d\\n\",i);\n                        return;\n                  }\n                  else if(i>=k){\n                        printf(\"%d\\n\",n/i);\n                        return;\n                  }\n                  ///else if(z<max) max=z;\n            }\n      }\n      printf(\"%d\\n\",max);\n}\nint main()\n{\n      int t;\n      scanf(\"%d\",&t);\n      while(t--) test();\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nvoid test()\n{\n      int n,k;\n      scanf(\"%d%d\",&n,&k);\n      if(k>=n){\n            printf(\"%d\\n\",1);\n            return;\n      }\n      int root=sqrt(n),max=n;\n      for(int i=1;i<=root;i++){\n            if(i>k) break;\n            if(n%i==0){\n                  int z=n/i;\n                  if(k>=z){\n                        printf(\"%d\\n\",i);\n                        return;\n                  }\n                  else if(n/i<max) max=n/i;\n            }\n                  ///else if(z<max) max=z;\n      }\n      printf(\"%d\\n\",max);\n}\nint main()\n{\n      int t;\n      scanf(\"%d\",&t);\n      while(t--) test();\n}\n"}
{"similarity_score": 0.9525, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "5f5659f2abed44a23034c53a2526d4cb", "bug_code_uid": "7c4e7b584856203684eb650ff126b8f8", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "803884127147a585a2fbf4ca73d22749", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,c,d,swap;\n    scanf(\"%d\",&n);\n    int array[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&array[i]);\n    for (c = 0 ; c < ( n - 1 ); c++)\n  {\n    for (d = 0 ; d < n - c - 1; d++)\n    {\n      if (array[d] > array[d+1])\n      {\n        swap       = array[d];\n        array[d]   = array[d+1];\n        array[d+1] = swap;\n      }\n    }\n  }\n  int count=0;\n  for(i=1;i<n;i++)\n  {\n        if(array[i]<=array[i-1])\n             {\n                 i=i-2;\n                continue;\n             }\n\n      if(array[i]==array[i+1])\n      {\n          array[i+1]=array[i+1]+1;\n          count++;\n      }\n      if(array[i]>array[i+1])\n      {\n          array[i+1]=array[i+1]+2;\n          count=count+2;\n      }\n  }\n\n  printf(\"\\n%d\",count);\n\n\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,c,d,swap;\n    scanf(\"%d\",&n);\n    int array[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&array[i]);\n    for (c = 0 ; c < ( n - 1 ); c++)\n  {\n    for (d = 0 ; d < n - c - 1; d++)\n    {\n      if (array[d] > array[d+1])\n      {\n        swap       = array[d];\n        array[d]   = array[d+1];\n        array[d+1] = swap;\n      }\n    }\n  }\n  int count=0;\n  for(i=0;i<n;i++)\n  {\n        if(i>1){if(array[i]<=array[i-1])\n             {\n                 i=i-2;\n                continue;\n             }\n        }\n\n      if(array[i]==array[i+1])\n      {\n          array[i+1]=array[i+1]+1;\n          count++;\n      }\n      if(array[i]>array[i+1])\n      {\n          array[i+1]=array[i+1]+2;\n          count=count+2;\n      }\n  }/*\n  for(i=0;i<n;i++)\n    printf(\"\\nxyz%d\",array[i]);\n  */printf(\"%d\",count);\n\n\n}\n"}
{"similarity_score": 0.9651972157772621, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b13b2967959b1e7f239c7f9994910354", "bug_code_uid": "c0c2742f29c1a9c4b039278243dd2710", "src_uid": "ec8060260a6c7f4ff3e6afc9fd248afc", "apr_id": "f510068f3e40b59a3180b7769199dcca", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint long long i=1,n,s,a,b,g,c,d,f;\nscanf(\"%lld\",&n);\nwhile(i<=n)\n{\n\tscanf(\"%lld%lld%lld%lld\",&s,&a,&b,&c);\n\td=s/c;\n\tf=d/a*b;\n\tg=d+f;\n\tprintf(\"%lld\",g);\n\ti++;\n}     \nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint long long i=1,n,s,a,b,g,c,d,f;\nscanf(\"%lld\",&n);\nwhile(i<=n)\n{\n\tscanf(\"%lld%lld%lld%lld\",&s,&a,&b,&c);\n\td=s/c;\n\tf=d/a*b;\n\tg=d+f;\n\tprintf(\"%lld\",g);\n\ti++;\n\tprintf(\"\\n\");\n}     \nreturn 0;\n}\n"}
{"similarity_score": 0.9869513641755635, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8bf3b5019187341252259c796b18fe1f", "bug_code_uid": "67728cbb7943008760502362cedcf418", "src_uid": "39480cdf697fc9743dc9665f989077d7", "apr_id": "8c92d9890f0194326ad8c893e0a5ad62", "difficulty": 1200, "tags": ["dp", "two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <limits.h>\n\nint main(){\n    int q;\n    scanf(\"%d\", &q);\n    while(q--){\n        long long sum = 0;\n        int n, flag, max = INT_MIN;\n        int arr[200000] = {0,};\n        scanf(\"%d\", &n);\n\n        for(int i = 0; i < n; i++)\n            scanf(\"%d\", &arr[i]);\n\n        if(arr[0] < 0)\n            flag = 0;\n        else\n            flag = 1;\n        \n        for(int i = 0; i < n; i++){\n            max = max < arr[i] ? arr[i] : max;\n            if(flag == 1 && arr[i+1] < 0){ //positive\n                sum += max;\n                max = INT_MIN;\n                flag = 0;\n            }else if(flag == 0 && arr[i+1] > 0){ //negative\n                sum += max;\n                max = INT_MIN;\n                flag = 1;\n            }\n        }\n\n        printf(\"%lld\\n\", sum + max);\n\n\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <limits.h>\n\nint main(){\n    int q;\n    scanf(\"%d\", &q);\n    while(q--){\n        long long sum = 0;\n        int n, flag, max = INT_MIN;\n        int arr[200000] = {0,};\n        scanf(\"%d\", &n);\n\n        for(int i = 0; i < n; i++)\n            scanf(\"%d\", &arr[i]);\n\n        if(arr[0] < 0)\n            flag = 0;\n        else\n            flag = 1;\n        \n        for(int i = 0; i < n; i++){\n            max = max < arr[i] ? arr[i] : max;\n            if(flag == 1 && arr[i+1] < 0 && i < n-1){ //positive\n                sum += max;\n                max = INT_MIN;\n                flag = 0;\n            }else if(flag == 0 && arr[i+1] > 0 && i < n-1){ //negative\n                sum += max;\n                max = INT_MIN;\n                flag = 1;\n            }\n        }\n\n        printf(\"%lld\\n\", sum + max);\n\n\n    }\n    return 0;\n}"}
{"similarity_score": 0.9370629370629371, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "da6a83a382f6a0c9ec3fff4b9512263d", "bug_code_uid": "d565ad558cfcbdd8360ec9c50777182e", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "962a1b3bacc0cb6ccd24ec23084f8da3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n\n\n\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n\n    char str[2][m+1];\n\n    for(i=0; i<m; i++)\n    {\n        str[0][i]='#';\n        str[1][i]='.';\n        str[2][i]='.';\n    }\n    str[0][m]='\\0';\n    str[1][m]='\\0';\n    str[2][m]='\\0';\n    str[1][m-1]='#';\n    str[2][0]='#';\n\n\n\n    n=n/2;\n\n    for(i=1; i<=n; i++)\n    {\n        if(i%2)\n        {\n            puts(str[0]);\n            puts(str[1]);\n        }\n        else\n        {\n            puts(str[0]);\n            puts(str[2]);\n        }\n\n    }\n    printf(\"%s\",str[0]);\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n\n    char str[3][m+1];\n\n    for(i=0; i<m; i++)\n    {\n        str[0][i]='#';\n\n        str[1][i]='.';\n\n        str[2][i]='.';\n    }\n    str[1][i-1]='#';\n    str[0][i]='\\0';\n    str[1][i]='\\0';\n    str[2][i]='\\0';\n    str[2][0]='#';\n\n    n=n/2;\n\n    for(i=1; i<=n; i++)\n    {\n        if(i%2)\n        {\n            puts(str[0]);\n            puts(str[1]);\n        }\n        else\n        {\n            puts(str[0]);\n            puts(str[2]);\n        }\n\n    }\n    printf(\"%s\",str[0]);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9983633387888707, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8664e6f3a202680565c3a5d1421a123d", "bug_code_uid": "2763038257917f62579667528cf12cb1", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "1a732905f3688248d84d1100459d5072", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\nint min,_B=0,_u=0,_l=0,_b=0,_a=0,_s=0,_r=0,i,flag;\nchar st[10001];\nscanf(\"%s\",&st);\ni=0;\nwhile(st[i]!='\\0'){\nif(st[i]=='B'){_B++;}\nelse if(st[i]=='u'){_u++;}\nelse if(st[i]=='l'){_l++;}\nelse if(st[i]=='b'){_b++;}\nelse if(st[i]=='a'){_a++;}\nelse if(st[i]=='s'){_s++;}\nelse if(st[i]=='r'){_r++;}\ni++;\n}\nflag=0;\nif(_a>0&&_u>0){\n_a/=2;\n_u/=2;}\nif(_B>0){min=_B;\nif(_u>0){min=min>_u?_u:min;\nif(_l>0){min=min>_l?_l:min;\nif(_b>0){min=min>_b?_b:min;\nif(_a>0){min=min>_a?_a:min;\nif(_s>0){min=min>_s?_s:min;\nif(_r>0){\nmin=min>_r?_r:min;flag=1;\n}}}}}}}\nprintf(\"%d\",flag==1?min:0);\nreturn 0;\n}", "fixed": "#include <stdio.h>\nint main(){\nint min,_B=0,_u=0,_l=0,_b=0,_a=0,_s=0,_r=0,i,flag;\nchar st[100001];\nscanf(\"%s\",&st);\ni=0;\nwhile(st[i]!='\\0'){\nif(st[i]=='B'){_B++;}\nelse if(st[i]=='u'){_u++;}\nelse if(st[i]=='l'){_l++;}\nelse if(st[i]=='b'){_b++;}\nelse if(st[i]=='a'){_a++;}\nelse if(st[i]=='s'){_s++;}\nelse if(st[i]=='r'){_r++;}\ni++;\n}\nflag=0;\nif(_a>0&&_u>0){\n_a/=2;\n_u/=2;\n}\nif(_B>0){min=_B;\nif(_u>0){min=min>_u?_u:min;\nif(_l>0){min=min>_l?_l:min;\nif(_b>0){min=min>_b?_b:min;\nif(_a>0){min=min>_a?_a:min;\nif(_s>0){min=min>_s?_s:min;\nif(_r>0){\nmin=min>_r?_r:min;flag=1;\n}}}}}}}\nprintf(\"%d\",flag==1?min:0);\nreturn 0;\n}"}
{"similarity_score": 0.8973747016706444, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ae51fe591d5607e71abc7178851f3c1a", "bug_code_uid": "ecfaed7e93716a7e09bdf4897a0b4b2d", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "2e0a5bafae1fa2b374c221d8be66f749", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint n,k,i,y,x,s=0;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&y);\n\t\tif (y+k<=5){\n\t\t\ts=s+1;}\n\t\t}\n\t\tif(s%3==0){\n\t\t\tx=s/3;\n\t\t\tprintf(\"%d\",x);} \n\t\n\t\t        \n\t\t        return 0;}", "fixed": "#include <stdio.h>\nint main(){\n\tint n,k,i,y,x,s=0;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&y);\n\t\tif (y+k<6){\n\t\t\ts=s+1;}\n\t\t}\n\tx=s/3;\n\tprintf(\"%d\",x); \n\t return 0;}"}
{"similarity_score": 0.9395770392749244, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "da96ce6c2769c4ea89265a9ecc771b47", "bug_code_uid": "3cd3f977738f93b048fc3c0b24cb26fc", "src_uid": "a26a97586d4efb5855aa3b930e9effa7", "apr_id": "a5766dc3f158f22382176fb7e4c74db8", "difficulty": 1800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, m;\nint x[1100], y[1100];\n\nint main()\n{\n\tint i, j, res=0, a, b;\n\t\n\tscanf(\" %d %d\",&n,&m);\n\t\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\" %d %d\",&a,&b);\n\t\tx[a]=1; y[b]=1;\n\t}\n\t\n\tfor(i=2;i<n;i++)\n\t\tif(!x[i])\n\t\t\tres++;\n\t\t\n\tif(n%2 && !x[n/2+1] && !y[n/2+1]) res--;\n\t\n\tprintf(\"%d\\n\",res);\n\t\n\treturn 0;\t\n}\n", "fixed": "#include <stdio.h>\n\nint n, m;\nint x[1100], y[1100];\n\nint main()\n{\n\tint i, j, res=0, a, b;\n\t\n\tscanf(\" %d %d\",&n,&m);\n\t\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\" %d %d\",&a,&b);\n\t\tx[a]=1; y[b]=1;\n\t}\n\t\n\tfor(i=2;i<n;i++)\n\t\tif(!x[i])\n\t\t\tres++;\n\tfor(i=2;i<n;i++)\n\t\tif(!y[i])\n\t\t\tres++;\n\t\t\n\tif(n%2 && !x[n/2+1] && !y[n/2+1]) res--;\n\t\n\tprintf(\"%d\\n\",res);\n\t\n\treturn 0;\t\n}\n"}
{"similarity_score": 0.10902255639097744, "equal_cnt": 19, "replace_cnt": 16, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "afb358b3df4e07d8f14c5a5f1f0ff392", "bug_code_uid": "fe4deeb3aaa41a602e05bac66f811e66", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "8a37fbd9db2ac61b2cb4b8e2c9390a40", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<limits.h>\r\n\r\nint min2(int a, int b)\r\n{\r\n    if(a<b)\r\n    return a;\r\n    return b;\r\n}\r\n\r\nint max2(int a, int b)\r\n{\r\n    if(a>b)\r\n    return a;\r\n    return b;\r\n}\r\n\r\nvoid solveProblem(int* a, int n)\r\n{\r\n    int i, max=INT_MIN, min=INT_MAX, maxpos=0, minpos=0;\r\n    for(i=0; i<n; i++)\r\n    {\r\n        if(a[i]>max)\r\n        {    \r\n            max = a[i];\r\n            maxpos = i;\r\n        }\r\n        if(a[i]<min)\r\n        {   \r\n            min = a[i];\r\n            minpos = i;\r\n        }\r\n    }\r\n    int x = max2(minpos, maxpos) + 1;\r\n    int y = n-min2(minpos, maxpos);\r\n    int z = min2(minpos, maxpos)+1 + n-max2(minpos, maxpos);\r\n    printf(\"%d\\n\", min2(x, min2(y, z)));\r\n}\r\n\r\nvoid main()\r\n{\r\n    int t, i;\r\n    scanf(\"%d\", &t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        int n, j;\r\n        scanf(\"%d\", &n);\r\n        int a[n];\r\n        for(j=0; j<n; j++)\r\n        {\r\n            scanf(\"%d\", &a[j]);\r\n        }\r\n        solveProblem(a, n);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#define max 100\r\nint mmm(int a,int b,int c)\r\n{\r\n\tif(a>b)\r\n\t\treturn (a>c)?a:c;\r\n\telse\r\n\t\treturn (b>c)?b:c;\r\n}\r\nint d[max];\r\nint main(void)\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint i,n,ma=0,mi=0,ans=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&d[i]);\r\n\t\t\tif(d[i]>d[ma])\r\n\t\t\t\tma=i;\r\n\t\t\tif(d[i]<d[mi])\r\n\t\t\t\tmi=i;\r\n\t\t}\r\n\t\tif(ma<mi)\r\n\t\t{\r\n\t\t\tint l=ma+1,mid=mi-ma,r=n-mi;\r\n\t\t\tans=l+mid+r-mmm(l,mid,r);\r\n\t\t}else\r\n\t\t{\r\n\t\t\tint l=mi+1,mid=ma-mi,r=n-ma;\r\n\t\t\tans=l+mid+r-mmm(l,mid,r);\r\n\t\t}\r\n\t\tprintf(\"%d\",ans);\r\n\t\tif(t!=0) printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n\t     \t \t  \t \t\t   \t \t\t\t\t \t\t \t\t"}
{"similarity_score": 0.9965928449744463, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5ffb85ee777f5453b1e0f5d91fcf367f", "bug_code_uid": "fc297c9f872021a9bab7366cc6ea138c", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "a75be390f81a1e32c353f8e0b84f3738", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,a[361],r[22],n,i,c,in;\n    int j=0;\n    for(i=3;i<=360;i++)\n    {\n        if(360%i==0){\n            a[i]=1;\n            r[j]=i;\n            j++;\n            }\n        else\n            a[i]=0;\n    }\n    for(i=0;i<22;i++)\n    {\n        r[i]=180-(360/r[i]);\n    }\n    scanf(\"%i\",&n);\n    for(i=0;i<n;i++)\n    {\n        c=0;\n        scanf(\"%i\",&in);\n        for(j=0;j<17;j++)\n        {\n            if(in==r[j])\n                c++;\n        }\n        if(c>0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,a[361],r[22],n,i,c,in;\n    int j=0;\n    for(i=3;i<=360;i++)\n    {\n        if(360%i==0){\n            a[i]=1;\n            r[j]=i;\n            j++;\n            }\n        else\n            a[i]=0;\n    }\n    for(i=0;i<22;i++)\n    {\n        r[i]=180-(360/r[i]);\n    }\n    scanf(\"%i\",&n);\n    for(i=0;i<n;i++)\n    {\n        c=0;\n        scanf(\"%i\",&in);\n        for(j=0;j<22;j++)\n        {\n            if(in==r[j])\n                c++;\n        }\n        if(c>0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8394793926247288, "equal_cnt": 17, "replace_cnt": 5, "delete_cnt": 9, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "dc549a0ca024e458d2d82c9e47c00e81", "bug_code_uid": "95b13d801f45583f7668a220a7a72712", "src_uid": "2bb893703cbffe9aeaa0bed02f42a05c", "apr_id": "241302884f8ba41d23430b8ab24ca523", "difficulty": 1300, "tags": ["implementation", "number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint arreq(int *a, int size) {\n    if (size == 1) return 1;\n    return a[0] == a[1] && arreq(a + 1, size - 1);\n}\n\nint main() {\n    int i, n;\n    int *a;\n    char* s;\n    scanf(\"%d\", &n);\n    a = malloc(sizeof(int) * n);\n    for(i = 0, i < n; i++) {\n        while(!(a[i] % 2)) a[i] /= 2;\n        while(!(a[i] % 3)) a[i] /= 3;\n    }\n    s = (arreq(a, n)? strdup(\"Yes\"); strdup(\"No\");\n    printf(\"%d\", arreq(a, n));\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint arreq(int *a, int size) {\n  if (size == 1) return 1;\n  return a[0] == a[1] && arreq(a + 1, size - 1);\n}\n\nint main() {\n  int i, n;\n  int *a;\n  char* s;\n  scanf(\"%d\", &n);\n  a = malloc(sizeof(int) * n);\n  for(i = 0; i < n; i++) {\n    scanf(\"%d\", a + i);  \n    while(!(a[i] % 2)) a[i] /= 2;\n    while(!(a[i] % 3)) a[i] /= 3;\n  }\n  s = (arreq(a, n)? strdup(\"Yes\"): strdup(\"No\"));\n  printf(\"%s\\n\", s);\n  return 0;\n}\n"}
{"similarity_score": 0.21354764638346727, "equal_cnt": 12, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "21b733d00f1c18885739b83c6bf4d862", "bug_code_uid": "2c17debebea7e843b66c823577015178", "src_uid": "a003d645999934c255f7b05d8494fa40", "apr_id": "13e48e649423c6450b5686fa3ec674a1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint n,say = 1,tut = 1,say2 = 1;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1 ; i<=n ; i++)\n    {\n        if(say < n)\n        {\n            for(int j=n ; j>say ; j-=2)\n                printf(\"*\");\n        }\n        for(int j=1 ; j<=tut ; j++)\n            printf(\"D\");\n        if(say < n)\n        {\n            for(int j=n ; j>say ; j-=2)\n                printf(\"*\");\n        }\n        if(say2 <= n/2)\n        {\n            say += 2;\n            tut += 2;\n        }\n        else\n        {\n            say -= 2;\n            tut -= 2;\n        }\n        printf(\"\\n\");\n        say2++;\n    }\n}\n", "fixed": "int n,say=1,tut=1,say2 =1,i,j;main()\n{scanf(\"%d\",&n);for(i=1;i<=n;i++){if(say<n){\nfor(j=n;j>say;j-=2)printf(\"*\");}for(j=1;j<=tut;j++)printf(\"D\");\nif(say<n){for(j=n;j>say;j-=2)printf(\"*\");}\nif(say2<=n/2){say+=2;tut+=2;}else{say-=2;tut-=2;}\nprintf(\"\\n\");say2++;}}"}
{"similarity_score": 0.9933184855233853, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "36dfd438ad45fc6e37b1633b73c807eb", "bug_code_uid": "ec16c2ce702da94f30d586265188a79e", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "ddf51a6f94fba84c9584a87dcce61264", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int i,n,a,j,s,c,d;\n     scanf(\"%d\",&n);\n     for(i=0;i<n;i++){\n        scanf(\"%d\",&a);\n        s=0;\n        int b[a];\n        c=0,d=0;\n        for(j=0;j<a;j++){\n            scanf(\"%d\",&b[i]);\n            s=s+b[i];\n            if(b[i]%2==0)c++;\n            else d++;\n        }\n        if(s%2!=0 || s==1)printf(\"YES\\n\");\n        else if(c>0&&d>0)printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n     }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int i,n,a,j,s,c,d;\n     scanf(\"%d\",&n);\n     for(i=0;i<n;i++){\n        scanf(\"%d\",&a);\n        s=0;\n        int b[a];\n        c=0,d=0;\n        for(j=0;j<a;j++){\n            scanf(\"%d\",&b[j]);\n            s=s+b[j];\n            if(b[j]%2==0)c++;\n            else d++;\n        }\n        if(s%2!=0 || s==1)printf(\"YES\\n\");\n        else if(c>0&&d>0)printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n     }\n    return 0;\n}\n"}
{"similarity_score": 0.8126684636118598, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "797bb5dbdbe890d7ce3e8953b725f9f3", "bug_code_uid": "b7ff8b3b4dba60db92dac9b91933e55d", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "4680a134b9696038ed05010b25b94a2e", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n     int n;\r\n     scanf(\"%d\",&n);\r\n     int arr[n],a,b;\r\n     int max_p,min_p,temp;\r\n     for(int i=1;i<=n;i++)\r\n     {\r\n         scanf(\"%d\",&arr[i]);\r\n         if(arr[i]==n)\r\n         {\r\n             max_p=i;\r\n         }\r\n         if(arr[i]==1)\r\n         {\r\n             min_p=i;\r\n         }\r\n     }\r\n     \r\n     if(max_p<min_p)\r\n     {\r\n         temp=min_p;\r\n         min_p=max_p;\r\n         max_p=temp;\r\n     }\r\n     int k=max_p-min_p-1;\r\n     if(k<n/2)\r\n     {\r\n        a=max_p;\r\n        b=n-min_p+1;\r\n        if(a<b)\r\n        printf(\"%d\\n\",a);\r\n        else\r\n        printf(\"%d\\n\",b);\r\n        \r\n     }\r\n     else\r\n     {\r\n         printf(\"%d\\n\",min_p+n-max_p+1);\r\n     }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n     int n;\r\n     scanf(\"%d\",&n);\r\n     int arr[n],a,b,c;\r\n     int max_p,min_p,temp;\r\n     for(int i=1;i<=n;i++)\r\n     {\r\n         scanf(\"%d\",&arr[i]);\r\n         if(arr[i]==n)\r\n         {\r\n             max_p=i;\r\n         }\r\n         if(arr[i]==1)\r\n         {\r\n             min_p=i;\r\n         }\r\n     }\r\n     \r\n     if(max_p<min_p)\r\n     {\r\n         temp=min_p;\r\n         min_p=max_p;\r\n         max_p=temp;\r\n     }\r\n     a=max_p;\r\n     b=n-min_p+1;\r\n     c=min_p+n-max_p+1;\r\n     if(a < b && a < c)\r\n\t{\r\n\t\tprintf(\"%d\\n\",a);\r\n\t}\r\n\telse if(b < c)\r\n\t{\r\n\t\tprintf(\"%d\\n\",b);\r\n\t}\r\n\telse\r\n\t{\r\n\tprintf(\"%d\\n\",c);\r\n\t}\t\r\n    }\r\n}"}
{"similarity_score": 0.9253539253539254, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3b392a55eeca7b33acec5872724c3c09", "bug_code_uid": "b81ac68d7a4bf0039c36dca55f3c146b", "src_uid": "805d82c407c1b34f217f8836454f7e09", "apr_id": "cc55fac5961588eedeba016542e07649", "difficulty": 1800, "tags": [], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int INF=0x3f3f3f3f;\nconst ll LLINF=0x3f3f3f3f3f3f3f3f;\nconst double eps=1e-8;\nconst int MAX=1e5+10;\nconst ll mod=1e9+7;\nint v[100010];\nint cmp(const void *a,const void *b)\n{\n\treturn (*(int *)a-*(int *)b);\n}\nint min(int a,int b)\n{\n\tif(a<b) return a;\n\treturn b;\n}\nint gcd(int a,int b)\n{\n\treturn b==0?a:gcd(b,a%b);\n}\nint main()\n{\n\tint i,n,d,ans;\n\twhile(~scanf(\"%d\",&n))\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&v[i]);\n\t\t}\n\t\tqsort(v,n,sizeof(v[0]),cmp);\n\t\td=0;\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\td=gcd(d,v[i]-v[i-1]);\n\t\t}\n\t\tans=0;\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tans+=(v[i]-v[i-1])/d-1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int INF=0x3f3f3f3f;\nconst ll LLINF=0x3f3f3f3f3f3f3f3f;\nconst double eps=1e-8;\nconst int MAX=1e5+10;\nconst ll mod=1e9+7;\nint v[100010];\nint cmp(const void *a,const void *b)\n{\n\tif(*(int *)a<*(int *)b) return 1;\n\telse if(*(int *)a==*(int *)b) return 0;\n\telse return -1;\n}\nint min(int a,int b)\n{\n\tif(a<b) return a;\n\treturn b;\n}\nint gcd(int a,int b)\n{\n\treturn b==0?a:gcd(b,a%b);\n}\nint main()\n{\n\tint i,n,d,ans;\n\twhile(~scanf(\"%d\",&n))\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&v[i]);\n\t\t}\n\t\tqsort(v,n,sizeof(v[0]),cmp);\n\t\td=0;\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\td=gcd(d,v[i]-v[i-1]);\n\t\t}\n\t\tans=0;\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tans+=(v[i]-v[i-1])/d-1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9563492063492064, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8ddcfa66c1e889e5cb6e499eef821328", "bug_code_uid": "13e062c4906dea43ce85047fe1296fcc", "src_uid": "f48ddaf1e1db5073d74a2aa318b46704", "apr_id": "13a55f58ebd8e2bf33bdbacf18dd141b", "difficulty": 1200, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint eq(char *s1, char *s2, int len){\n\tint i;\n\tfor (i=0; i<len; ++i) if (s1[i]!=s2[i]) return 0;\n\treturn 1;\n}\n\nint main(int argc, char const *argv[]){\n\tint n, i, j, acc, best=0;\n\tscanf(\"%d\", &n);\n\tchar s[n][n];\n\tfor (i=0; i<n; ++i) scanf(\"%s\", s[i]);\n\n\tfor (i=0; i<n-1; ++i){\n\t\tacc = 1;\n\t\tfor (j=i+1; j<n; ++j){\n\t\t\tif (eq(s[i], s[j], n)) ++acc;\n\t\t}\n\t\tbest = (acc > best) ? acc : best;\n\t}\n\tprintf(\"%d\\n\", best);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint eq(char *s1, char *s2, int len){\n\tint i;\n\tfor (i=0; i<len; ++i) if (s1[i]!=s2[i]) return 0;\n\treturn 1;\n}\n\nint main(int argc, char const *argv[]){\n\tint n, i, j, acc, best=0;\n\tscanf(\"%d\", &n);\n\tif (n==1){\n\t\tprintf(\"1\\n\");\n\t\treturn 0;\n\t}\n\tchar s[n][n];\n\tfor (i=0; i<n; ++i) scanf(\"%s\", s[i]);\n\n\tfor (i=0; i<n-1; ++i){\n\t\tacc = 1;\n\t\tfor (j=i+1; j<n; ++j){\n\t\t\tif (eq(s[i], s[j], n)) ++acc;\n\t\t}\n\t\tbest = (acc > best) ? acc : best;\n\t}\n\tprintf(\"%d\\n\", best);\n\treturn 0;\n}"}
{"similarity_score": 0.8453747467927076, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "34cb955d711e51ed56d8c9f60746ae30", "bug_code_uid": "363ae9ddb9b924c48c2fa8198cf710c4", "src_uid": "31d803d886c47fe681bdcfbe6c74f090", "apr_id": "4b3d9637b59b2554584a214ab4adeee5", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\nint main( )\n{\n\tchar a[200001],b[200001];\n\tint i,j,k,c=0,f=0,d=0;\n\tscanf(\"%s\",a);\n\tk=strlen(a);\n\tfor(i=0;i<k;i++)\n\t{\n\t\tb[i]='0';\n\t}\n\tfor(i=k-1;i>=0;i--)\n\t{\n\t\tif(a[i]==a[i-1])\n\t\t{\n\t\t\tc+=1;\n\t\t\tif(c>1 && f==1)\n\t\t\t{\n\t\t\t\tb[i]='0';\n\t\t\t\tf=1;\n\t\t\t}\n\t\t\telse if(c>2 && f==0)\n\t\t\t{\n\t\t\t\tb[i]='0';\n\t\t\t}\n\t\t\telse if(c==1)\n\t\t\t{\n\t\t\t\tif(f==1)\n\t\t\t\t{\n\t\t\t\t\tb[i]=='0';\n\t\t\t\t\tf=0;\n\t\t\t\t}\n\t\t\t\telse if(f==0)\n\t\t\t\t{\n\t\t\t\t\tb[i]=a[i];\n\t\t\t\t\tf=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[i]=a[i];\n\t\t\t/*if(f==1 && c>=1)\n\t\t\t  {\n\t\t\t  b[i]='0';\n\t\t\t  }\n\t\t\t  else if(f==1 && c<1)\n\t\t\t  {\n\t\t\t  f=0;\n\t\t\t  b[i]=a[i];\n\t\t\t  }\n\t\t\t  else\n\t\t\t  {\n\t\t\t  b[i]=a[i];\n\t\t\t  }*/\n\t\t\tc=0;\n\t\t}\n\t}\n\tfor(i=0;i<k;i++)\n\t{\n\t\tif(b[i]!='0')\n\t\t{\n\t\t\tprintf(\"%c\",b[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\nint main( )\n{\n\tchar a[200001],b[200001];\n\tint i,j,k,c=0,f=0,d=0,e;\n\tscanf(\"%s\",a);\n\tk=strlen(a);\n\tfor(i=0;i<k;i++)\n\t{\n\t\tb[i]='0';\n\t}\n\tfor(i=k-1;i>=0;i--)\n\t{\n\t\tif(a[i]==a[i-1])\n\t\t{\n\t\t\te=0;\n\t\t\tc+=1;\n\t\t\tif(c>1 && f==1)\n\t\t\t{\n\t\t\t\tb[i]='0';\n\t\t\t\tf=1;\n\t\t\t}\n\t\t\telse if(c>2 && f==0)\n\t\t\t{\n\t\t\t\tb[i]='0';\n\t\t\t}\n\t\t\telse if(c==1)\n\t\t\t{\n\t\t\t\tif(f==1)\n\t\t\t\t{\n\t\t\t\t\tb[i]=='0';\n\t\t\t\t\tf=0;\n\t\t\t\t}\n\t\t\t\telse if(f==0)\n\t\t\t\t{\n\t\t\t\t\tb[i]=a[i];\n\t\t\t\t\tf=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\te+=1;\n\t\t\tif(e>=2)\n\t\t\t{\n\t\t\t\tf=0;\n\t\t\t}\n\t\t\tb[i]=a[i];\n\t\t\tc=0;\n\t\t}\n\t}\n\tfor(i=0;i<k;i++)\n\t{\n\t\tif(b[i]!='0')\n\t\t{\n\t\t\tprintf(\"%c\",b[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9842748980780431, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a5b00436fdae129506cc027f3d3f117c", "bug_code_uid": "690caab04aef74833d5551c4efa0b9b3", "src_uid": "afac59c927522fb223f59c36184229e2", "apr_id": "59cd040b72c41a552279e864cc851fa1", "difficulty": 2000, "tags": ["dfs and similar"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint x1,x2,i,j,a1,a2,y10,y2,flag=0,k;\nchar A[1000][1000];\nvoid fileread()\n{   \n    scanf(\"%d %d\",&x1,&x2);\n    for (i = 1; i <=x1 ; i++)\n    {\n        for (j = 1; j <=x2 ; j++)\n        {\n            scanf(\" %c\",&A[i][j]);\n        }\n    }\n    scanf(\"%d %d\",&a1,&a2);\n    scanf(\"%d %d\",&y10,&y2);\n    A[a1][a2]='.';\n}\nvoid f(int s1,int s2)\n{ \n    if (flag==1)\n            return;\n    if ((A[s1][s2]=='X'))\n    {\n        if (s1==y10 && s2==y2)\n        {   \n            printf(\"YES\");\n            flag=1;\n            return;           \n        }\n        else\n            return;\n    }\n    A[s1][s2]='X';\n    if (s1+1<=x1)\n\t\tf(s1+1,s2);\n\tif (s2+1<=x2)\n\t\tf(s1,s2+1);\n\tif (s1-1>0)\n\t\tf(s1-1,s2);\t\n\tif (s2-1>0)\n\t\tf(s1,s2-1);\n    \n    A[s1][s2]='.';\n}\nint main()\n{\n    fileread();\n    f(a1,a2);\n    k=0;\n    if (flag==0)\n   \n        printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint x1,x2,i,j,a1,a2,y10,y2,flag=0,k;\nchar A[1000][1000];\nvoid fileread()\n{   \n    scanf(\"%d %d\",&x1,&x2);\n    for (i = 1; i <=x1 ; i++)\n    {\n        for (j = 1; j <=x2 ; j++)\n        {\n            scanf(\" %c\",&A[i][j]); \n        }\n    }\n    scanf(\"%d %d\",&a1,&a2);\n    scanf(\"%d %d\",&y10,&y2);\n    A[a1][a2]='.';\n}\nvoid f(int s1,int s2)\n{\n    if (flag==1)\n            return;\n    if ((A[s1][s2]=='X'))\n    {\n        if (s1==y10 && s2==y2)\n        {   \n            printf(\"YES\");\n            flag=1;\n            return;           \n        }\n        else\n            return;\n    }\n    A[s1][s2]='X';\n    if (s1+1<=x1)\n\t\tf(s1+1,s2);\n\tif (s2+1<=x2)\n\t\tf(s1,s2+1);\n\tif (s1-1>0)\n\t\tf(s1-1,s2);\n\tif (s2-1>0)\n\t\tf(s1,s2-1);\n}\nint main()\n{\n    fileread();\n    f(a1,a2);\n    k=0;\n    if (flag==0)\n   \n        printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.9956616052060737, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "efa3b92d3b3652fce3dc24f997de2e78", "bug_code_uid": "1427794e46381e654d63ac4ff03708ba", "src_uid": "8a6c3436f73286ca54f51fb90017a299", "apr_id": "6a6b783006097cff16b663d087de8e5a", "difficulty": 800, "tags": ["number theory", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong long int n;\n\tint time;\n\tscanf(\"%d\",&time);\n\tfor(int i=0;i<time;i++){\n\t\tscanf(\"%lld\",&n);\n\t\tif(n<=30){\n\t\t\tprintf(\"NO\\n\");\n\t\t}else if(n==36){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"15 10 5 %lld\\n\",n-30);\n\t\t}else if(n==40){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"15 10 5 %lld\\n\",n-30);\n\t\t}else if(n==44){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"15 10 5 %lld\\n\",n-30);\n\t\t}else if(n>30){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"14 10 6 %lld\\n\",n-30);\n\t\t\t\n\t\t}\n\t}\n} ", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int n;\n\tint time;\n\tscanf(\"%d\",&time);\n\tfor(int i=0;i<time;i++){\n\t\tscanf(\"%lld\",&n);\n\t\tif(n<=30){\n\t\t\tprintf(\"NO\\n\");\n\t\t}else if(n==36){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"15 10 5 %lld\\n\",n-30);\n\t\t}else if(n==40){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"15 14 5 %lld\\n\",n-34);\n\t\t}else if(n==44){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"15 10 5 %lld\\n\",n-30);\n\t\t}else if(n>30){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"14 10 6 %lld\\n\",n-30);\n\t\t\t\n\t\t}\n\t}\n} "}
{"similarity_score": 0.9663865546218487, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ffff3c1d91237a2ebfe5561bcdd1cb05", "bug_code_uid": "ef1e0afb141fd1c0bf9e5f63a7d5a898", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "05158716160ec0e15e312263b97b2b8f", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int i,n;\n   long long c;\n   char b[1001];\n   scanf(\"%d\",&n);\n   long long a[1000]={1,1};\n   for(i=2;i<n;i++)\n   a[i]=a[i-1]+a[i-2];\n   for(i=0;i<n;i++){\n        c=a[i];\n     if(c<=n) b[c]='O';}\n   for(i=1;i<=n;i++){\n        if(b[i]!='O'){\n      b[i]='o';}\n    }\n    b[n+1]='\\0';\n    for(i=1;i<=n;i++)\n        printf(\"%c\",b[i]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int i,n;\n   long long c;\n   char b[1010];\n   scanf(\"%d\",&n);\n   long long a[1000]={1,1};\n   for(i=2;i<=n;i++)\n   a[i]=a[i-1]+a[i-2];\n   for(i=0;i<17;i++){\n        c=a[i];\n     if(c<=n) b[c]='O';}\n   for(i=1;i<=n;i++){\n        if(b[i]!='O'){\n      b[i]='o';}\n    }\n\n    for(i=1;i<=n;i++)\n        printf(\"%c\",b[i]);\n}\n"}
{"similarity_score": 0.9757207890743551, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3200bff14e33fcc93635f1b64270511b", "bug_code_uid": "2c8803df4e502021b1ecaddd8be86606", "src_uid": "d1a35297090550d9a95f014b0c09a01a", "apr_id": "2d9cc7d4438720a597eac31200150646", "difficulty": 1300, "tags": ["dp", "sortings", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(void const *a,void const *b){\n\treturn *(int*)a-*(int*)b;\n}\nmain(){\n\tint i,j,k;\n\tint l,a[2000],b[2000];\n\tint min,max;\n\tchar s1[2000],s2[2000];\n\twhile(scanf(\"%d\\n\",&l)!=EOF){\n\t\tgets(s1);gets(s2);\n\t\tfor(i=0;i<l;i++){\n\t\t\ta[i]=s1[i]-'0';\n\t\t\tb[i]=s2[i]-'0';\n\t\t}\n\t\tqsort(a,l,sizeof(int),cmp);\n\t\tqsort(b,l,sizeof(int),cmp);\n\t\tmax=0;min=0;\n\t\tfor(i=0,k=0;i<l;i++){\n\t\t\tfor(j=k;j<l;j++){\n\t\t\t\tif(b[j]>a[i]){\n\t\t\t\t\tk=j;\n\t\t\t\t\tmax++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(k=l-1,i=l-1;i>=0;i--){\n\t\t\tfor(j=k;j>=0;j--){\n\t\t\t\tif(a[j]<=b[i]){\n\t\t\t\t\tk=j;\n\t\t\t\t\tmin++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmin=l-min;\n\t\tprintf(\"%d\\n%d\\n\",min,max);\n\t}\n} ", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(void const *a,void const *b){\n\treturn *(int*)a-*(int*)b;\n}\nmain(){\n\tint i,j,k;\n\tint l,a[2000],b[2000];\n\tint min,max;\n\tchar s1[2000],s2[2000];\n\twhile(scanf(\"%d\\n\",&l)!=EOF){\n\t\tgets(s1);gets(s2);\n\t\tfor(i=0;i<l;i++){\n\t\t\ta[i]=s1[i]-'0';\n\t\t\tb[i]=s2[i]-'0';\n\t\t}\n\t\tqsort(a,l,sizeof(int),cmp);\n\t\tqsort(b,l,sizeof(int),cmp);\n\t\tmax=0;min=0;\n\t\tfor(i=0,k=0;i<l;i++){\n\t\t\tfor(j=k;j<l;j++){\n\t\t\t\tif(b[j]>a[i]){\n\t\t\t\t\tk=j+1;\n\t\t\t\t\tmax++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(k=l-1,i=l-1;i>=0;i--){\n\t\t\tfor(j=k;j>=0;j--){\n\t\t\t\tif(a[i]<=b[j]){\n\t\t\t\t\tk=j-1;\n\t\t\t\t\tmin++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmin=l-min;\n\t\tprintf(\"%d\\n%d\\n\",min,max);\n\t}\n} "}
{"similarity_score": 0.9, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "2d854ffcfcba991cabba1c9b8b523c87", "bug_code_uid": "41ce705df4bacd79192e67514a973c58", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "b3482ee7ebbad921ac95e8a9dc7b8904", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,a,b,i,sum=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n-1;i++)\n{\nscanf(\"%d\",&a);\nsum=sum+a;\n}\nb=((a/2)*(a+1))-sum;\nprintf(\"%d\",b);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nlong long n,a,b=0,i,sum=0;\nscanf(\"%lld\",&n);\nfor(i=0;i<n-1;i++)\n{\nscanf(\"%lld\",&a);\nsum=sum+a;\n}\nb=((n*n)+n)/2-sum;\nprintf(\"%lld\",b);\nreturn 0;\n}"}
{"similarity_score": 0.33902759526938236, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "3f0e2a69b940a334e1e0184d999fda1e", "bug_code_uid": "b5aa2da128613d90f94c0cc306c0a335", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "0adfc1d397a02302bc73a62312effced", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong n,k=0,j,i,t;\nscanf(\"%ld\",&n);\nlong a[n],b[n];\nfor(i=0;i<n;i++)\n   {\n     scanf(\"%ld%ld\",&a[i],&b[i]);\n   }\nfor(i=0;i<=n-2;i++)\n{\n    for(j=i+1;j<n;j++)\n    {\n        if(a[i]>a[j])\n        {\n            t=a[j];a[j]=a[i];a[i]=t;\n            t=b[j];b[j]=b[i];b[i]=t;\n        }\n    }\n\n}\n/*for(i=0;i<n;i++)\n{\n    printf(\"%ld %ld   \",a[i],b[i]);\n}*/\nfor(i=0;i<n-1;i++)\n   {\n     if(b[i]>b[i+1])\n       {k++;break;}\n   }\nif(k==1)\n   printf(\"Happy Alex\");\n   else\n   printf(\"Poor Alex\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nlong n,k=0,i;\nscanf(\"%ld\",&n);\nlong a,b;\nfor(i=0;i<n;i++)\n   {\n     scanf(\"%ld%ld\",&a,&b);\n     if(a!=b)\n        k=1;\n   }\n\nif(k==1)\n   printf(\"Happy Alex\");\n   else\n   printf(\"Poor Alex\");\nreturn 0;\n}\n"}
{"similarity_score": 0.7767857142857143, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7166ce66c1c02d8bbebc97ae3bc9c8fe", "bug_code_uid": "50ed91773912231c164ed930db6f79c0", "src_uid": "cf4d8a5caa37def0b7c0007743139e36", "apr_id": "43867897440e18c16fea288d23db28e3", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int T,n,i,p;\n    scanf(\"%d\",&T);\n    \n    for(T;T>0;T--){\n        scanf(\"%d\",&n);\n        p=4*n-2;\n        for(i=1;i<=n;i++){\n            p=p-2;\n            printf(\"%d \",p);\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int T,n,i,p;\n    scanf(\"%d\",&T);\n    \n    for(T;T>0;T--){\n        scanf(\"%d\",&n);\n        p=4*n;\n        for(i=1;i<=n;i++){\n            p=p-2;\n            printf(\"%d \",p);\n        }\n    }\n}"}
{"similarity_score": 0.9954809554551324, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "47bf701d62ee086f202fd97b72949fe4", "bug_code_uid": "ff1a68d4c74f5e24cca084f0d65a821e", "src_uid": "0fbac68f497fe189ee088c13d0488cce", "apr_id": "7af893dce1f0f8948e3a3ef0fbe327f6", "difficulty": 1200, "tags": ["dp", "two pointers", "implementation", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,k,x=0,y=0,q;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long int i,a[n],t[n],p[n],r[n],s[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        x+=a[i];\n        p[i]=x;\n        //printf(\"%I64d \",p[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&t[i]);\n        if(t[i]==1)\n        {\n            y+=a[i];\n            r[i]=y;\n            //printf(\"%I64d \",r[i]);\n        }\n        else {\n            r[i]=r[i-1];\n        }\n    }\n\n    q=p[k-1]-r[k-1];\n    //printf(\" %I64d\",q);\n    for(i=k;i<n;i++)\n    {\n        x=(p[i]-p[i-k])-(r[i]-r[i-k]);\n        if(x>q)\n        {\n            q=x;\n        }\n    }\n    printf(\" %I64d\",y+q);\n   /* for(i=0;i<9999999999;i++)\n    {\n        i=i;\n    }*/\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,k,x=0,y=0,q;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long int i,a[n],t[n],p[n],r[n],s[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        x+=a[i];\n        p[i]=x;\n        //printf(\"%I64d \",p[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&t[i]);\n        if(t[i]==1)\n        {\n            y+=a[i];\n            r[i]=y;\n            //printf(\"%I64d \",r[i]);\n        }\n        else {\n            r[i]=y;\n        }\n    }\n\n    q=p[k-1]-r[k-1];\n    //printf(\" %I64d\",q);\n    for(i=k;i<n;i++)\n    {\n        x=(p[i]-p[i-k])-(r[i]-r[i-k]);\n        if(x>q)\n        {\n            q=x;\n        }\n    }\n    printf(\" %I64d\",y+q);\n   /* for(i=0;i<9999999999;i++)\n    {\n        i=i;\n    }*/\n    return 0;\n\n}\n"}
{"similarity_score": 0.8612538540596094, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "704a50832752aea32effc8f78a690d7e", "bug_code_uid": "8d1390c644ca2f7d7b270698005d4c71", "src_uid": "56bdab2019ee12e18d4f7e17ac414962", "apr_id": "5d1ed293c74c8f423cb189e300423dd5", "difficulty": 1000, "tags": ["two pointers", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nlong long int num1,num2,q1,q2;\nscanf(\"%lld %lld\",&num1,&num2);\nq1=num1;\nq2=num2;\nlong long int i,j,k=0;\nlong long int a[q1+50],b[q2+50];\nfor(i=0;i<num1;i++){\n    scanf(\"%lld\",&a[i]);\n}\nfor(i=0;i<num2;i++){\n    scanf(\"%lld\",&b[i]);\n}\nfor(i=0;i<num1;i++){\n        k=k+a[i];\n    for(j=0;j<num2;j++){\n        if(b[j]<=k&&i==0){printf(\"%lld %lld\\n\",i+1,b[j]);}\n        else if(b[j]<=k&&(b[j]-(k-a[i]))>0)printf(\"%lld %lld\\n\",i+1,b[j]-(k-a[i]));\n    }\n}\n}\n", "fixed": "#include<stdio.h>\nint main(){\nlong long int num1,num2,q1,q2;\nscanf(\"%lld %lld\",&num1,&num2);\nq1=num1;\nq2=num2;\nlong long int i=0,j=0,k=0;\nlong long int a[q1+50],b[q2+50];\nfor(i=0;i<num1;i++){\n    scanf(\"%lld\",&a[i]);\n}\nfor(i=0;i<num2;i++){\n    scanf(\"%lld\",&b[i]);\n}\nfor(i=0;i<num1;i++){\n        k=k+a[i];\n    for(;j<num2;j++){\n        if(b[j]<=k&&i==0){printf(\"%lld %lld\\n\",i+1,b[j]);}\n        else if(b[j]<=k)printf(\"%lld %lld\\n\",i+1,b[j]-(k-a[i]));\n        else if(b[j]>k)break;\n\n    }\n}\n}\n"}
{"similarity_score": 0.9070769230769231, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "25dd800a45ca2d23886bee87bd78ecb2", "bug_code_uid": "c231abfaa1a73f4c8fad64a7a4a6603d", "src_uid": "f1ac6da78aed11d9118a85182c5644de", "apr_id": "920effbf4d131a4d032f318caff46055", "difficulty": 1300, "tags": ["bitmasks", "greedy", "dfs and similar", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,q;\n    scanf(\"%d\",&n);\n    int t=((n*n-n)/2)-1;\n\n    int g[t][2],det[n];\n    for(i=0; i<n; i++)\n        det[i]=0;\n        //printf(\"%d\\n\",t);\n    for(i=0; i<t; i++)\n        scanf(\"%d %d\",&g[i][0],&g[i][1]);\n    for(i=1; i<=n; i++)\n    {\n        for(j=i+1; j<=n; j++)\n        {\n            for(k=0; k<t; k++)\n            {\n                if((g[k][0]==i &&  g[k][1]==j ) ||(g[k][1]==i && g[k][0]==j))\n                    break;\n            }\n            if(k==t)\n                break;\n        }\n        if(j<=n)\n            break;\n    }\n    //printf(\"%d %d\\n\",i,j);\n    for(k=0; k<t; k++)\n    {\n        det[g[i][0]-1] ++;\n    }\n    if(det[i-1]>det[j-1])\n        printf(\"%d %d\",i,j);\n    else\n        printf(\"%d %d\",j,i);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,q;\n    scanf(\"%d\",&n);\n    int t=((n*n-n)/2)-1;\n\n    int g[t][2],*det;\n    det=(int *)calloc(n,sizeof(int));\n        //printf(\"%d\\n\",t);\n    for(i=0; i<t; i++)\n        scanf(\"%d %d\",&g[i][0],&g[i][1]);\n    for(i=1; i<=n; i++)\n    {\n        for(j=i+1; j<=n; j++)\n        {\n            for(k=0; k<t; k++)\n            {\n                if((g[k][0]==i &&  g[k][1]==j ) ||(g[k][1]==i && g[k][0]==j))\n                    break;\n            }\n            if(k==t)\n                break;\n        }\n        if(j<=n)\n            break;\n    }\n    //printf(\"%d %d\\n\",i,j);\n    for(k=0; k<t; k++)\n    {\n        det[g[k][0]-1] ++;\n    }\n    //printf(\"%d %d\\n\",det[i-1],det[j-1]);\n    if(det[i-1]>det[j-1])\n        printf(\"%d %d\",i,j);\n    else\n        printf(\"%d %d\",j,i);\n        free(det);\n    return 0;\n}\n"}
{"similarity_score": 0.42710120068610635, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "123266cc4f4e71d29bb9f5f3ab215461", "bug_code_uid": "08e29eaa6b1fc5f5a8f845bc946b9894", "src_uid": "2ce2d0c4ac5e630bafad2127a1b589dd", "apr_id": "88336d45c3b89f760d781d4667f179ec", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nvoid push(char c);\nvoid pop();\nint isEmpty();\n\nchar stack[110000];\nint top=-1;\nint count=0;\nint main()\n{\n    int i,len;\n    char str[110000];\n    gets(str);\n    len=strlen(str);\n    for(i=0;i<len;i++)\n    {\n        if(str[i]=='(')\n        {\n            push(str[i]);\n        }\n        else\n        {\n            if(isEmpty())\n            {\n                count++;\n                pop();\n            }\n        }\n    }\n    printf(\"%d\\n\",count*2);\n    return 0;\n}\n\nvoid push(char c)\n {\n     top=top+1;\n     stack[top]=c;\n }\n void pop()\n {\n     top=top-1;\n }\n\n int isEmpty()\n {\n     if(top!=-1)\n     {\n         return 1;\n     }\n     else\n     {\n         return 0;\n     }\n }\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int count=0,b,len,i;\n    char str[1100000];\n    gets(str);\n    len=strlen(str);\n    b=len;\n    for(i=0;i<len;i++)\n    {\n        if(str[i]=='(')\n        {\n            count++;\n        }\n        else if(str[i]==')')\n        {\n            count--;\n            if(count<0)\n            {\n                count=0;\n                b--;\n            }\n        }\n    }\n    printf(\"%d\\n\",b-count);\n    return 0;\n}\n"}
{"similarity_score": 0.9884332281808622, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1398a9ee9a28d763555e437661ee6c43", "bug_code_uid": "c4ad68e354233afd37ee5082c48a5e07", "src_uid": "7b80d3f3cd4f93e4277c76c76dc41f42", "apr_id": "9f4010192be94882dbabd1c085525f39", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a[1000000], n, i, j;\n   int T;\n   scanf(\"%d\", &T);\n   while(T--)\n   {\n       scanf(\"%lld\", &n);\n       for(i=0;i<n;i++)\n       {\n           scanf(\"%lld\", &a[i]);\n\n       }\n       int cn=0;\n       for(j=0;j<n-1;j++)\n       {\n           if(a[j]!=a[j+1])\n           {\n               cn=1;\n               break;\n           }\n       }\n     if(cn!=0)\n        printf(\"1\");\n     else\n        printf(\"%lld\", &n);\n\n   }\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a[1000000], n, i, j;\n   int T;\n   scanf(\"%d\", &T);\n   while(T--)\n   {\n       scanf(\"%lld\", &n);\n       for(i=0;i<n;i++)\n       {\n           scanf(\"%lld\", &a[i]);\n\n       }\n       int cn=0;\n       for(j=0;j<n-1;j++)\n       {\n           if(a[j]!=a[j+1])\n           {\n               cn=1;\n               break;\n           }\n       }\n     if(cn!=0)\n        printf(\"1\\n\");\n     else\n        printf(\"%lld\\n\", n);\n\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.9226594301221167, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cdf9d6bdeb18d1fc35317380964e518a", "bug_code_uid": "ff12a70052afb6672db374f10e25ae7a", "src_uid": "4811646a6a68f6b83891bd22985ce7e5", "apr_id": "a137aad56ef134b47c87961cb9a4df07", "difficulty": 1300, "tags": ["binary search", "data structures", "schedules", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tint a[101111];\r\n\t\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\t\r\n\t\tint i,j=1;\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\t\t\r\n\t\tlong long int cnt=0;\r\n\t\tfor(i=1;i<=n;i++) {\r\n    \twhile(j<=n&&a[j]-(j-i)-1>=0){\r\n    \t\tj++;\r\n\t\t} \r\n\t\tcnt+=j-i;\r\n    \t\r\n  }\r\n\t\t\r\n\t\tprintf(\"%d\\n\",cnt);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint a[201111];\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\t\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\t\r\n\t\tint i,j=1;\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\t\t\r\n\t\tlong long int cnt=0;\r\n\t\tfor(i=1;i<=n;i++) {\r\n    \twhile(j<=n&&a[j]-(j-i)-1>=0){\r\n    \t\tj++;\r\n\t\t} \r\n\t\tcnt+=j-i;\t\r\n  }\r\n\t\tprintf(\"%lld\\n\",cnt);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9974226804123711, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a1af97cbf4d12f357aff9cabedd874e5", "bug_code_uid": "3593be5b6336774459ea6430193ba05e", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "9764603cf0e8b6453bf940eb8f0a56cf", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int number_friends,h_of_wall,h_of_person;\n     int counter=0;\n    scanf(\"%d %d\",&number_friends,&h_of_wall);\n\n    for(int i=0;i<number_friends;i++)\n    {\n        scanf(\"%d\",&h_of_person);\n        if(h_of_person<h_of_wall)\n            counter++;\n        else\n            counter+=2;\n    }\n    printf(\"%d\",counter);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int number_friends,h_of_wall,h_of_person;\n     int counter=0;\n    scanf(\"%d %d\",&number_friends,&h_of_wall);\n\n    for(int i=0;i<number_friends;i++)\n    {\n        scanf(\"%d\",&h_of_person);\n        if(h_of_person<=h_of_wall)\n            counter++;\n        else\n            counter+=2;\n    }\n    printf(\"%d\",counter);\n    return 0;\n}\n"}
{"similarity_score": 0.9362397820163487, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2c4ece3ca096aa5b0a54dd381110b457", "bug_code_uid": "fe8e6090b23cf1b6501d7bf2feac1ae6", "src_uid": "714834defd0390659f6ed5bc3024f613", "apr_id": "b7a5b053625b0fd6921f5ab8a48902ac", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n#include <conio.h>\n#include <string.h>\n#include <math.h>\n#include <ctype.h>\n\nint p[100];\nint c[100];\n\nvoid run_case(void)\n{\n    int n;\n    int i;\n    bool flagans = false, flag = true;\n    int play_max = 0, clear_max = 0;\n\n    scanf(\"%d\", &n);\n\n    for(i=0; i<n; i++){\n        scanf(\"%d %d\", &p[i], &c[i]);\n        if(p[i]>play_max) play_max = p[i];\n        if(c[i]>clear_max) clear_max = c[i];\n        if(!flagans && (p[i]<c[i])){\n            flagans = true;\n            flag = false;\n        }else if((!flagans) && ((c[i]<clear_max) || (p[i]<play_max))){\n            flagans = true;\n            flag = false;\n        }\n    }\n\n    if(flag) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n\n}\n\nint main(int argc, char *argv[])\n{\n    int T;\n\n    scanf(\"%d\", &T);\n\n    while(T--) run_case();\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n#include <conio.h>\n#include <string.h>\n#include <math.h>\n#include <ctype.h>\n\nint p[100];\nint c[100];\n\nvoid run_case(void)\n{\n    int n;\n    int i;\n    bool flagans = false, flag = true;\n    int play_max = 0, clear_max = 0;\n\n    scanf(\"%d\", &n);\n\n    for(i=0; i<n; i++){\n        scanf(\"%d %d\", &p[i], &c[i]);\n        if(p[i]>play_max) play_max = p[i];\n        if(c[i]>clear_max) clear_max = c[i];\n        if(!flagans && (p[i]<c[i])){\n            flagans = true;\n            flag = false;\n        }else if((!flagans) && ((c[i]<clear_max) || (p[i]<play_max))){\n            flagans = true;\n            flag = false;\n        }else if((!flagans) && ((p[i]-p[i-1])<(c[i]-c[i-1]))){\n            flagans = true;\n            flag = false;\n        }\n    }\n\n    if(flag) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n\n}\n\nint main(int argc, char *argv[])\n{\n    int T;\n\n    scanf(\"%d\", &T);\n\n    while(T--) run_case();\n\n    return 0;\n}"}
{"similarity_score": 0.9959595959595959, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c37ecfb901d836d1c0592f34fa85a64c", "bug_code_uid": "58b81c54666d8dee1903f6aada2b8e3a", "src_uid": "89c97b6c302bbb51e9d5328c680a7ea7", "apr_id": "eb653eff3b7a21876c3552bd641b84c1", "difficulty": 1900, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int F(long long int A,long long int B,long long int i)\n{\n\treturn A+(i-1)*B;\n}\nint main()\n{\n\tlong long int A,B,n,mid,i,j,l,t,m,tm;\n\tscanf(\"%lld%lld%lld\",&A,&B,&n);\n\twhile(n>0)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&l,&t,&m);\n\t\ttm=t*m;\n\t\ti=l,j=1000005;\n\t\tif(F(A,B,l)>t) printf(\"-1\");\n\t\telse\n\t\t{\n\t\t\twhile(i<j)\n\t\t\t{\n\t\t\t\tmid=(i+j+1)/2;\n\t\t\t\tif((F(A,B,l)+F(A,B,mid))*(mid-l+1)/2<=tm&&F(A,B,mid)<=t)\n\t\t\t\t\ti=mid;\n\t\t\t\telse j=mid-1;\n\t\t\t}\n\t\t\tprintf(\"%lld\",i);\n\t\t}\n\t\tn--;\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int F(long long int A,long long int B,long long int i)\n{\n\treturn A+(i-1)*B;\n}\nint main()\n{\n\tlong long int A,B,n,mid,i,j,l,t,m,tm;\n\tscanf(\"%lld%lld%lld\",&A,&B,&n);\n\twhile(n>0)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&l,&t,&m);\n\t\ttm=t*m;\n\t\ti=l,j=1000005;\n\t\tif(F(A,B,l)>t) printf(\"-1\\n\");\n\t\telse\n\t\t{\n\t\t\twhile(i<j)\n\t\t\t{\n\t\t\t\tmid=(i+j+1)/2;\n\t\t\t\tif((F(A,B,l)+F(A,B,mid))*(mid-l+1)/2<=tm&&F(A,B,mid)<=t)\n\t\t\t\t\ti=mid;\n\t\t\t\telse j=mid-1;\n\t\t\t}\n\t\t\tprintf(\"%lld\\n\",i);\n\t\t}\n\t\tn--;\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.5, "equal_cnt": 9, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "57fff549c07aec10503982b0336ec886", "bug_code_uid": "f70e4de9dc8547c154551383ae5de369", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "fbadc55f588fc4925128e66555131292", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int s,n,x[10009]={0},y[10009]={0},j=0,i;\n    scanf(\"%d %d\",&s,&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d %d\",&x[i],&y[i]);\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(s>x[i])\n        {\n            j++;\n            s=s+y[i];\n            x[i]=10009;\n            y[i]=10009;\n            i=0;\n        }\n    }\n    if(j==n)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n   int s,n,x[1005]={0},y[1005]={0},j,i,t,t1,p=0;\n    scanf(\"%d %d\",&s,&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d %d\",&x[i],&y[i]);\n    }\n    for(j=1;j<=n-1;j++)\n    {\n        for(i=1;i<n;i++)\n        {\n            if(x[i]>x[i+1])\n            {\n                t=x[i];\n                t1=y[i];\n                x[i]=x[i+1];\n                y[i]=y[i+1];\n                x[i+1]=t;\n                y[i+1]=t1;\n            }\n       }\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(s>x[i])\n        {\n            p++;\n            s=s+y[i];\n        }\n    }\n    if(p==n)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9444444444444444, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "6f37e2ca17eabef9e1ee3d248cb28fe1", "bug_code_uid": "7a9ab35103bd331b7f4673a638b9936b", "src_uid": "fc82362dbda74396ad6db0d95a0f7acc", "apr_id": "28cf7c987ea58b245d8b54be9b9bc6c1", "difficulty": 2000, "tags": ["data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint gcd(int a,int b){\n    if(!(b%a))\n        return a;\n    else\n        return gcd(b%a,a);\n}\n\nint main(){\n    int n,k,i;\n    scanf(\"%d %d\",&n,&k);\n\n    if(!((n>=5)&&(n<=1000000)&&(k>=2)&&(k<=n-2))){\n        exit(0);\n    }\n    if(gcd(n,k)!=1)\n        exit(0);\n\n    int arr[n];\n    for(i=0;i<n;i++)\n        arr[i] = 0;\n\n    int num_of_elements_remains=n;\n    int gap,result=1,final_pos=0;\n    int value1=1,value2=2;\n    if((n/k)<2)\n        k=n-k;\n    do{\n        num_of_elements_remains=(n-final_pos);\n        gap=num_of_elements_remains/k;\n        final_pos =((final_pos+gap*k)+k)%n;\n\n        for(i=0;i<gap;i++){\n            result+=(value1);\n            printf(\"%d \",result);\n        }\n\n        if((num_of_elements_remains%k)){\n            result+=value2;\n            printf(\"%d \",result);\n        }\n        value1+=2;\n        value2+=2;\n    }\n    while((num_of_elements_remains%k));\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint gcd(int a,int b){\n    if(!(b%a))\n        return a;\n    else\n        return gcd(b%a,a);\n}\n\nint main(){\n    int n,k,i;\n    scanf(\"%d %d\",&n,&k);\n\n    if(!((n>=5)&&(n<=1000000)&&(k>=2)&&(k<=n-2))){\n        exit(0);\n    }\n    if(gcd(n,k)!=1)\n        exit(0);\n\n    int arr[n];\n    for(i=0;i<n;i++)\n        arr[i] = 0;\n\n    int num_of_elements_remains=n;\n    int gap,final_pos=0;\n    int value1=1,value2=2;\n    long long int result=1;\n    if((n/k)<2)\n        k=n-k;\n    do{\n        num_of_elements_remains=(n-final_pos);\n        gap=num_of_elements_remains/k;\n        final_pos =((final_pos+gap*k)+k)%n;\n\n        for(i=0;i<gap;i++){\n            result+=(value1);\n            printf(\"%I64d \",result);\n        }\n\n        if((num_of_elements_remains%k)){\n            result+=value2;\n            printf(\"%I64d \",result);\n        }\n        value1+=2;\n        value2+=2;\n    }\n    while((num_of_elements_remains%k));\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.8514851485148515, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a91681b3ae02f7ad645fd45b4f29ad80", "bug_code_uid": "de60730b7993357840f6d7dad8fb8860", "src_uid": "02a94c136d3fb198025242e91264823b", "apr_id": "200728a8593e5f63eed76462c02e5348", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,i,j,k,s;\n     scanf(\"%d\",&n);\n     char a[n][101],t;\n\n     for(i=0;i<n;i++)\n          scanf(\"%s\",a[i]);\n\n     for(i=0;i<n;i++)\n     {\n          s=strlen(a[i]);\n          for(j=0;j<s-1;j++)\n          {\n               for(k=0;k<s-j-1;k++)\n               {\n                    if(a[i][k+1]<a[i][k])\n                    {\n                         t=a[i][k];\n                         a[i][k]=a[i][k+1];\n                         a[i][k+1]=t;\n                    }\n               }\n          }\n     }\n\n     for(i=0;i<n;i++)\n     {\n          s=strlen(a[i]);\n          if(a[i][s-1]-a[i][0]==s-1)printf(\"YES\\n\");\n          else printf(\"NO\\n\");\n     }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int n,i,j,k,s;\n     scanf(\"%d\",&n);\n     char a[n][101],t;\n\n     for(i=0;i<n;i++)\n          scanf(\"%s\",a[i]);\n\n     for(i=0;i<n;i++)\n     {\n          s=strlen(a[i]);\n          for(j=0;j<s-1;j++)\n          {\n               for(k=0;k<s-j-1;k++)\n               {\n                    if(a[i][k+1]<a[i][k])\n                    {\n                         t=a[i][k];\n                         a[i][k]=a[i][k+1];\n                         a[i][k+1]=t;\n                    }\n               }\n          }\n     }\n\n     for(i=0;i<n;i++)\n     {\n          s=strlen(a[i]);\n          for(j=0;j<s-1;j++)\n          {\n               if(a[i][j+1]-a[i][j]!=1)\n               {\n                    printf(\"NO\\n\");\n                    break;\n               }\n          }\n          if(j==s-1)printf(\"YES\\n\");\n     }\n\n}\n"}
{"similarity_score": 0.9784172661870504, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e3709bd8b97ecd743e46f316262791dc", "bug_code_uid": "9fe5d2a0892f5913e4ce1ce64123f554", "src_uid": "94501cd676a9214a59943b8ddd1dd31b", "apr_id": "0b159cd69b6fa26f95ddf2ac6fbbac41", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n\tint n,m,i;\n\tscanf(\"%d%d\",&n,&m);\n\tchar a[1005][12],b[1005][15];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s%s\",a[i],b[i]);\n\t}\n\twhile(m--)\n\t{\n\t\tchar c[15],d[15];\n\t\tscanf(\"%s%s\",c,d);\n\t\tint p=strlen(d);\n\t\td[p-1]='\\0';\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(!strcmp(d,b[i]))\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s %s; #%s\\n\",c,d,a[i]);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n\tint n,m,i;\n\tscanf(\"%d%d\",&n,&m);\n\tchar a[1005][32],b[1005][35];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s%s\",a[i],b[i]);\n\t}\n\twhile(m--)\n\t{\n\t\tchar c[35],d[35];\n\t\tscanf(\"%s%s\",c,d);\n\t\tint p=strlen(d);\n\t\td[p-1]='\\0';\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(!strcmp(d,b[i]))\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s %s; #%s\\n\",c,d,a[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6596119929453262, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "6c09990d5ddde047355e8dd5088403ae", "bug_code_uid": "2d694b09572e21d0c6f1dd12542fdc79", "src_uid": "e30085b163c820cff68fb24b94088ec1", "apr_id": "57c020dc77ccb2ac72480022e11391cf", "difficulty": 1200, "tags": ["data structures", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,n,count=0,wrong=0;\n\tscanf(\"%d\",&n);\n\tchar c[n];\n\tscanf(\"%s\",c);\n\tfor(i=0;i<n;++i)\n\t{\n\t\tif(c[i]=='(')\n\t\t++count;\n\t\tif(c[i]==')')\n\t\t--count;\n\t\tif(count<0)\n\t\t{\n\t\t\t++wrong;\n\t\t\tcount=0;\n\t\t}\n\t}\n\twrong+=count;\n\tif(wrong==0||wrong==2)\n\tprintf(\"YES\");\n\telse\n\tprintf(\"NO\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,n,count1=0,count2=0,count=0;\n\tscanf(\"%d\",&n);\n\tchar c[n];\n\tscanf(\"%s\",c);\n\tfor(i=0;i<n&&count>=-1;++i)\n\t{\n\t\tif(c[i]=='(')\n\t\t\t++count;\n\n\t\tif(c[i]==')')\n\t\n\t\t\t--count;\n\t\n\t}\n\tif(count!=0)\n\tprintf(\"NO\");\n\telse\n\tprintf(\"YES\");\n\t\n}\n"}
{"similarity_score": 0.36903499469777307, "equal_cnt": 23, "replace_cnt": 17, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "ac9fc61ba4d60b72d8892c0abcebe429", "bug_code_uid": "e5bc3a47dcc4b1358381962550deaab4", "src_uid": "564664d9cd2ccbccb42574b3881ec5fe", "apr_id": "08907e3befe56d7c909d65282539d565", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint a,b,c,d,e,f,g,h,i,j;\nchar w[105];\nint main()\n{\n\t     freopen(\"input.txt\",\"r\",stdin);\n\t\t freopen(\"output.txt\",\"w\",stdout);\n         scanf(\"%d\",&a);\n\t     getchar();\n\t\t gets(w);\n\t\t a>>=1;\n\t\t for(i=1;i<=a;i++)  \t\n\t\t {\n\t\t                  if(w[i-1]==w[i+a-1])\n\t\t\t\t\t\t\tprintf(\"%d %d\\n\",i,i+a);\n\t\t\t\t\t\t else \n\t\t\t\t\t\t {\n\t\t\t\t\t\t         \t if(w[i-1]==\"L\")\n\t\t\t\t\t\t\t\t\t\t printf(\"%d %d\\n\",i,i+a);\n\t\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t\t\tprintf(\"%d %d\\n\",i+a,i);\n\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\n\t\t}\n\t\t return 0;\t\n}\n\t\t\t\t        \t\t\t \t\t  \t\t \t \t", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nFILE *fin;\nFILE *fout;\nint i,n;\nchar s[150];\nint main()\n{\n\tfin=fopen(\"input.txt\",\"r\");\n\tfout=fopen(\"output.txt\",\"w\");\n\tfscanf(fin,\"%d\",&n);\n\tfscanf(fin,\"%s\",s);\n\tfor (i=1;i<=n/2;i++)\n\t\t{\n\t\tif (s[i-1]=='R' && s[i+n/2-1]=='L')\n\t\t\tfprintf(fout,\"%d %d\\n\",i+n/2,i);\n\t\telse fprintf(fout,\"%d %d\\n\",i,i+n/2);\n\t\t}\n\tfclose(fin);\n\tfclose(fout);\n\treturn 0;\n}\n\t  \t\t\t   \t\t\t\t \t\t\t\t \t\t\t\t \t\t"}
{"similarity_score": 0.8548931383577053, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "4f2f5f23f7ab6cef7a571996613a339d", "bug_code_uid": "c888a105fb1d7143cb3365fe000f3e91", "src_uid": "a97e70ad20a337d12dcf79089c16c9f0", "apr_id": "37d010d9092f347e983fc1aa728ba508", "difficulty": 1100, "tags": ["data structures", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t; scanf(\"%d\", &t);\r\n    while (t--) {\r\n        int arr[100000];\r\n        int odd[100000];\r\n        int n; scanf(\"%d\", &n);\r\n        int k = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            scanf(\"%d\", arr+i);\r\n            if (arr[i]%2) odd[k++] = arr[i];\r\n        }\r\n        \r\n\r\n        int flag = 0;\r\n        for (int i = 0; i < k-1; i++) {\r\n            if (odd[i] > odd[i+1]) {\r\n                flag = 1;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (flag) {\r\n            printf(\"No\\n\");\r\n        } else if (k) {\r\n            printf(\"Yes\\n\");\r\n        } else {\r\n            flag = 0;\r\n            for (int i = 0; i < n-1; i++) {\r\n                if (arr[i] > arr[i+1]) {\r\n                    flag = 1;\r\n                    break;\r\n                }\r\n            }\r\n            printf(\"%s\\n\", flag ? \"No\" : \"Yes\");\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t; scanf(\"%d\", &t);\r\n    while (t--) {\r\n        int arr[100000];\r\n        int even[100000];\r\n        int odd[100000];\r\n        int n; scanf(\"%d\", &n);\r\n        int k = 0, t = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            scanf(\"%d\", arr+i);\r\n            if (arr[i]%2) odd[k++] = arr[i];\r\n            else even[t++] = arr[i];\r\n        }\r\n        \r\n\r\n        int flag = 0;\r\n        for (int i = 0; i < k-1; i++) {\r\n            if (odd[i] > odd[i+1]) {\r\n                flag = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (flag == 0) {\r\n            for (int i = 0; i < t-1; i++) {\r\n                if (even[i] > even[i+1]) {\r\n                    flag = 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        printf(\"%s\\n\", flag ? \"No\" : \"Yes\");\r\n    }\r\n}"}
{"similarity_score": 0.6688206785137318, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "bf6968d539805b13c7249d46a0c7f04b", "bug_code_uid": "c7d5d83cfb77331b140ada48149dd634", "src_uid": "f3ee3a0de5ddf3cf15ef02fb62a2768e", "apr_id": "d371882bb8da1213df5bc1a533aec2e9", "difficulty": 1300, "tags": ["brute force", "constructive algorithms", "dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint min(int a, int b);\r\nint max(int a, int b);\r\nint main(int argc, const char* argv[])\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int minima=1000000001;\r\n        int prefix=0, suffix=0;\r\n        int m;\r\n        scanf(\"%d\", &m);\r\n        int a[2][m];\r\n        for(int i=0;i<2;i++)\r\n            for(int j=0;j<m;j++)\r\n                scanf(\"%d\", &a[i][j]);\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            prefix=suffix=0;\r\n            for(int k=0;k<i;k++)\r\n                prefix+=a[1][k];\r\n            for(int w=m-1;w>i;w--)\r\n                suffix+=a[0][w];\r\n            minima=min(minima, max(prefix, suffix));\r\n        }\r\n      printf(\"%d\\n\", minima);\r\n    }\r\n}\r\nint min(int a, int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\nint max(int a, int b)\r\n{\r\n    return a>b?a:b;\r\n}", "fixed": "#include <stdio.h>\r\nint min(int a, int b);\r\nint max(int a, int b);\r\nint main(int argc, const char* argv[])\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int minima=1000000001;\r\n        int prefix=0, suffix=0;\r\n        int m;\r\n        scanf(\"%d\", &m);\r\n        int sum=0;\r\n        int a[2][m];\r\n        int b[2][m+1];\r\n        for(int i=0;i<2;i++)\r\n        {\r\n            scanf(\"%d\", &a[i][0]);\r\n            b[i][0]=0;\r\n            for(int j=1;j<m;j++)\r\n            {\r\n                scanf(\"%d\", &a[i][j]);\r\n                b[i][j]=b[i][j-1]+a[i][j-1];\r\n            }\r\n            b[i][m]=b[i][m-1]+a[i][m-1];\r\n        }\r\n        for(int i=0;i<m;i++)\r\n            sum+=a[0][i];\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            prefix=suffix=0;\r\n            prefix=b[1][i];\r\n            suffix=sum-b[0][i+1];\r\n            minima=min(minima, max(prefix, suffix));\r\n        }\r\n      printf(\"%d\\n\", minima);\r\n    }\r\n}\r\nint min(int a, int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\nint max(int a, int b)\r\n{\r\n    return a>b?a:b;\r\n}\r\n"}
{"similarity_score": 0.899911426040744, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "f700e87040e59974043632dad1578881", "bug_code_uid": "040bbe32a8bd89f8b1a358abbea0b4ff", "src_uid": "91be5db48b44a44adff4c809ffbb8e3e", "apr_id": "21a6963e07c66a5ca8de6743384fc8be", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,s,min1,min2,cnt,i;\n    int a[105];\n    int b[105];\n      scanf(\"%d %d\",&n,&s);\n      for(i=0;i<n;i++)\n      {\n          scanf(\"%d %d\",&a[i],&b[i]);\n\n      }\n      min1=a[0];\n      min2=100;\n       for(i=0;i<n;i++)\n      {\n          if(a[i]<min1)\n            min1=a[i];\n          if(b[i]<min2&&b[i]>0&&a[i]<s)\n            min2=b[i];\n\n      }\n      if(min1>s)\n        cnt=-1;\n        else\n        {\n            cnt=100-min2;\n        }\n      printf(\"%d\",cnt);\n\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,s,min1,min2,cnt,i;\n    int a[105];\n    int b[105];\n      scanf(\"%d %d\",&n,&s);\n      for(i=0;i<n;i++)\n      {\n          scanf(\"%d %d\",&a[i],&b[i]);\n\n      }\n      min1=105;\n      min2=100;\n       for(i=0;i<n;i++)\n      {\n           if(a[i]==s)\n            {\n                if(b[i]>0)\n                a[i]++;\n\n\n            }\n          if(a[i]<min1)\n            min1=a[i];\n          if(b[i]<min2&&b[i]>0&&a[i]<=s)\n            min2=b[i];\n\n\n      }\n      if(min1>s)\n        cnt=-1;\n        else\n        {\n            cnt=100-min2;\n        }\n      printf(\"%d\",cnt);\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.5969802555168409, "equal_cnt": 22, "replace_cnt": 14, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "c1265b16fa7f45c46625631565748946", "bug_code_uid": "2e2b4d62c0860583ac15d15dacf2a229", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "2c1ec9e5aa3f0ea822aa31cdf67df738", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{ int ara[100],n,i;\r\nscanf(\"%d\",&n);\r\nfor(i=0; i<n; i++){\r\nscanf(\"%d\",&ara[i]);\r\nif(ara[i]>=1900)\r\n    printf(\"Division 1\\n\");\r\nelse if (1600<=ara[i]<=1899)\r\n    printf(\"Division 2\\n\");\r\nelse if (1400<=ara[i]<=1599)\r\n    printf(\"Division 3\\n\");\r\n    else\r\n        printf(\"Division 4\\n\");\r\n}\r\nreturn 0;\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,rating,i=1;\r\n    scanf(\"%d\",&n);\r\n    do\r\n        {\r\n        scanf(\"%d\",&rating);\r\n        if(1900<=rating)\r\n        {\r\n            printf(\"Division 1\\n\");\r\n\r\n        }\r\n        else if((1600<=rating)&&(rating<=1899)){\r\n            printf(\"Division 2\\n\");\r\n        }\r\n        else if((1400<=rating)&&(rating<=1599)){\r\n            printf(\"Division 3\\n\");\r\n        }\r\n        else{\r\n            printf(\"Division 4\\n\");\r\n        }\r\n        i++;\r\n    }while(i<=n);\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9987212276214834, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "32cd94c097202c4823733438349d06e8", "bug_code_uid": "f8fd3f57c9702cf7d6b1f37cab5958a1", "src_uid": "3b8678d118c90d34c99ffa9259cc611f", "apr_id": "b4b70760df304ebc036a26f3b8df4278", "difficulty": 1400, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAX 1000\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\", &T);\n\n\twhile (T--)\n\t{\n\t\tint ans;\n\t\tint num;\n\t\tscanf(\"%d\", &num);\n\n\t\tint wrong = 0, middle = 0;\n\n\t\tchar str[MAX];\n\n\t\tfor (int i = 0; i < num; i++)\n\t\t{\n\t\t\tint len = 0;\n\t\t\tscanf(\"%s\", str);\n\t\t\tchar *s = str;\n\t\t\twhile (*s)\n\t\t\t{\n\t\t\t\ts++; len++;\n\t\t\t}\n\n\t\t\tif (len % 2 == 1)\n\t\t\t{\n\t\t\t\tmiddle++;\n\t\t\t\tfor (int i = 0; i < len / 2; i++)\n\t\t\t\t{\n\t\t\t\t\tif (str[i] != str[len - i - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\twrong++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (len % 2 == 0)\n\t\t\t{\n\t\t\t\tfor (int i = 0; i <= len / 2; i++)\n\t\t\t\t{\n\t\t\t\t\tif (str[i] != str[len - i - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\twrong++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (wrong % 2 == 0)\n\t\t{\n\t\t\tans = num;\n\t\t}\n\t\telse if (middle >= 1)\n\t\t{\n\t\t\tans = num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans = num - 1;\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n}", "fixed": "#include <stdio.h>\n\n#define MAX 1000\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\", &T);\n\n\n\twhile (T--)\n\t{\n\t\tint ans;\n\t\tint num;\n\t\tscanf(\"%d\", &num);\n\n\t\tint wrong = 0, middle = 0;\n\n\t\tchar str[MAX];\n\n\t\tfor (int i = 0; i < num; i++)\n\t\t{\n\t\t\tint len = 0;\n\t\t\tscanf(\"%s\", str);\n\t\t\tchar *s = str;\n\t\t\twhile (*s)\n\t\t\t{\n\t\t\t\ts++; len++;\n\t\t\t}\n\n\t\t\tif (len % 2 == 1)\n\t\t\t{\n\t\t\t\tmiddle++;\n\t\t\t\tfor (int i = 0; i < len / 2; i++)\n\t\t\t\t{\n\t\t\t\t\tif (str[i] != str[len - i - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\twrong++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (len % 2 == 0)\n\t\t\t{\n\t\t\t\tfor (int i = 0; i < len / 2; i++)\n\t\t\t\t{\n\t\t\t\t\tif (str[i] != str[len - i - 1])\n\t\t\t\t\t{\n\t\t\t\t\t\twrong++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (wrong % 2 == 0)\n\t\t{\n\t\t\tans = num;\n\t\t}\n\t\telse if (middle >= 1)\n\t\t{\n\t\t\tans = num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans = num - 1;\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n}"}
{"similarity_score": 0.973753280839895, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "12cc295790c5b4094338a334b1410007", "bug_code_uid": "eb258c4e50bafab4dbe5e047f0220828", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "f785992a9b91d64072f7cf8577257338", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int x=0,n=0,m=0;\n    scanf(\"%d %d\",&n,&m);\n    \n    if(n>m || m>n*2+2)\n    {\n        printf(\"-1\");\n    }\n    \n    while(n+m)\n    {\n        if(x<2 && m>=n)\n        {\n            printf(\"1\");\n            m--;\n            x++;\n        } else{\n            printf(\"0\");\n            x=0;\n            n--;\n        }\n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int x=0,n=0,m=0;\n    scanf(\"%d %d\",&n,&m);\n    \n    if(n>m+1 || m>n*2+2)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    \n    while(n+m)\n    {\n        if(x<2 && m>=n)\n        {\n            printf(\"1\");\n            m--;\n            x++;\n        } else{\n            printf(\"0\");\n            x=0;\n            n--;\n        }\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.8612903225806452, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5ce030aef1a83e067a9a4603fb365daa", "bug_code_uid": "c7f7d05c4547c03aef44c5ce363e8a93", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "18dfbd0644a8bed7a461dcb7d2b354c4", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint a[n], i=0, b, c, max=0;\n\twhile( i<n ){\n\t\tscanf(\"%d\", &a[i]);\n\t\tb=sqrt(a[i]);\n\t\tc=b*b;\n\t\tif( c!=a[i] ){\n\t\t\tif( a[i]>max ){\n\t\t\t\tmax=a[i];\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\", max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint a[n], i=0, b, c, max=-10000000;\n\twhile( i<n ){\n\t\tscanf(\"%d\", &a[i]);\n\t\tif( a[i]>=0 ){\n\t\t\tb=sqrt(a[i]);\n\t\t\tc=b*b;\n\t\t\tif( c!=a[i] ){\n\t\t\t\tif( a[i]>max ){\n\t\t\t\t\tmax=a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif( a[i]>max ){\n\t\t\t\tmax=a[i];\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\", max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9991341991341991, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "03d4ffcabf4b6a4a88e191882c7977d9", "bug_code_uid": "526b783402a3b772a36b05ea6aebd58d", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "78dbed5bfd973c23b5d30b7f6bdb2aca", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    FILE* entrada;\n    FILE* salida;\n    int m ,n,i;\n    char *ptr=NULL;\n\n    entrada = fopen(\"input.txt\",\"r\");\n    salida = fopen(\"ouput.txt\",\"w\");\n    fscanf(entrada,\"%d %d\",&n, &m);\n\n    if(n < m){\n        fprintf(salida,\"%c\",'G');\n        m--;\n    }\n        while( n > 0 || m > 0){\n            if(n > 0){\n            fprintf(salida,\"%c\",'B');\n            n--;\n            }\n            if(m > 0){\n            fprintf(salida,\"%c\",'G');\n            m--;\n            }\n        }\n        fclose(salida);\n        fclose(entrada);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main(){\n    FILE* entrada;\n    FILE* salida;\n    int m ,n,i;\n    char *ptr=NULL;\n\n    entrada = fopen(\"input.txt\",\"r\");\n    salida = fopen(\"output.txt\",\"w\");\n    fscanf(entrada,\"%d %d\",&n, &m);\n\n    if(n < m){\n        fprintf(salida,\"%c\",'G');\n        m--;\n    }\n        while( n > 0 || m > 0){\n            if(n > 0){\n            fprintf(salida,\"%c\",'B');\n            n--;\n            }\n            if(m > 0){\n            fprintf(salida,\"%c\",'G');\n            m--;\n            }\n        }\n        fclose(salida);\n        fclose(entrada);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9898697539797395, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6904a2b869eb5c028a33e9db8217431c", "bug_code_uid": "af09761b255bf7b7810deb72a3c9deaa", "src_uid": "f2fc865a44b39179261a7311adf48390", "apr_id": "a724eae24f2660e679e032063ab09afb", "difficulty": 1200, "tags": ["data structures", "two pointers", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,j;\n\tint a[200010],a1[200010]={0},a2[200100]={0};\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(i==0)\n\t\t\ta1[i]=a[i];\n\t\telse\n\t\t\ta1[i]+=a1[i-1]+a[i];\n\t}\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tif(i==n-1)\n\t\t\ta2[i]=a[i];\n\t\telse\n\t\t\ta2[i]=a2[i+1]+a[i];\n\t}\n/*\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a1[i]);\n\tprintf(\"\\n\");\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a2[i]);\n\tprintf(\"\\n\"); */\n\ti=n-1,j=0;\n\twhile(i>=0 && j<n)\n\t{ \n//        \tprintf(\"%d %d\\n\",a1[i],a2[j]);\n\t\tif(a2[j]>a1[i])\n\t\t\tj++;\n\t\tif(a2[j]<a1[i])\n\t\t\ti--;\n\t\tif(i<j && a1[i]==a2[j])\n\t\t\tbreak;\n\t\tif(i>=j && a1[i]==a2[j])\n\t\t\ti--,j++;\n\t}\n\tif(i<0 || j>=n)\n\t\tprintf(\"0\\n\");\n\telse\n\t\tprintf(\"%d\\n\",a1[i]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,j;\n\tlong long int a[200010],a1[200010]={0},a2[200100]={0};\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\tif(i==0)\n\t\t\ta1[i]=a[i];\n\t\telse\n\t\t\ta1[i]+=a1[i-1]+a[i];\n\t}\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tif(i==n-1)\n\t\t\ta2[i]=a[i];\n\t\telse\n\t\t\ta2[i]=a2[i+1]+a[i];\n\t}\n/*\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a1[i]);\n\tprintf(\"\\n\");\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a2[i]);\n\tprintf(\"\\n\"); */\n\ti=n-1,j=0;\n\twhile(i>=0 && j<n)\n\t{ \n//        \tprintf(\"%d %d\\n\",a1[i],a2[j]);\n\t\tif(a2[j]>a1[i])\n\t\t\tj++;\n\t\tif(a2[j]<a1[i])\n\t\t\ti--;\n\t\tif(i<j && a1[i]==a2[j])\n\t\t\tbreak;\n\t\tif(i>=j && a1[i]==a2[j])\n\t\t\ti--,j++;\n\t}\n\tif(i<0 || j>=n)\n\t\tprintf(\"0\\n\");\n\telse\n\t\tprintf(\"%lld\\n\",a1[i]);\n}\n"}
{"similarity_score": 0.8018867924528302, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "d42a0d15e222c29a85cae69e4b6109b7", "bug_code_uid": "a96770360a743f4c9ccaf52f17ef8334", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "14838d7b485da363a86935c2287876f8", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int n,k,a,b,count=0;\n    scanf(\"%I64d %I64d %I64d\",&k,&a,&b);\n    if(a<0&&b<=0){\n\n        count=(-a+b)/k+1;\n\n\n    }\n    else if(a<0&&b>0){\n        count=(-a/k+1)+(b/k);\n    }\n    else if(a>=0&&b>0){\n        count=(b-a)/k+1;\n    }\n    else{\n        count=1;\n    }\n\n\n    printf(\"%I64d\\n\",count);\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int n,k,a,b,count=0;\n    while(3==scanf(\"%I64d %I64d %I64d\",&k,&a,&b)){\n    if(a<0&&b<=0){\n        if(a%k==0||b%k==0)\n           count=(-a+b)/k+1;\n        else\n           count=(-a+1+b)/k;\n\n\n    }\n    else if(a<0&&b>0){\n        count=(-a/k+1)+(b/k);\n    }\n    else if(a>=0&&b>0){\n\n         if(a%k==0||b%k==0)\n            count=(b-a)/k+1;\n        else\n            count=(b+1-a)/k;\n    }\n    else{\n        count=1;\n    }\n\n\n\n    printf(\"%I64d\\n\",count);\n\n    }\n}\n"}
{"similarity_score": 0.7351778656126482, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "ec31b2cd677b544fc237911bc48f27e8", "bug_code_uid": "159ef741d628dddbbb20df3a3adc6077", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "4c4febecc694244ad3925125e4e12c30", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint a[109];\nint b[109];\n\nint main()\n{\n   int n = 0 , m  = 0 , i = 0 , j = 0 ,ans = 0;\n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n       scanf(\"%d\",&a[i]);\n   scanf(\"%d\",&m);\n   for(i=0;i<m;i++)\n        scanf(\"%d\",&b[i]);\n\n   for(i=0;i<n;i++)\n      for(j=0;j<m;j++)\n        if(a[i]==b[j]||a[i]-b[j]==1||a[i]-b[j]==-1){\n            ans++;\n            b[j] = 200;\n            break;\n          }\n   printf(\"%d\",ans);\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint a[109];\nint b[109];\n\nint main()\n{\n   int n = 0 , m  = 0 , i = 0 , j = 0 ,ans = 0 , med = 0;\n   scanf(\"%d\",&n);\n   for(i=0;i<n;i++)\n       scanf(\"%d\",&a[i]);\n   scanf(\"%d\",&m);\n   for(i=0;i<m;i++)\n        scanf(\"%d\",&b[i]);\n   for(i=0;i<n;i++)\n      for(j=i+1;j<n;j++)\n        if(a[i] > a[j]){\n             med = a[i];\n             a[i] = a[j];\n             a[j] = med;\n          }\n    for(i=0;i<m;i++)\n      for(j=i+1;j<m;j++)\n        if(b[i] > b[j]){\n             med = b[i];\n             b[i] = b[j];\n             b[j] = med;\n          }\n   for(i=0;i<n;i++)\n      for(j=0;j<m;j++)\n        if(a[i]==b[j]||a[i]-b[j]==1||a[i]-b[j]==-1){\n            ans++;\n            b[j] = 200;\n            break;\n            }\n        printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.17995910020449898, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "e587d7de7bf713c08afbeda08a9b6ac1", "bug_code_uid": "0618837b6f7af4ae3c24e73bec56a459", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "c31bc858ed048484b3b58d9ea48486f9", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,b,g,extra,min,k,det,p;\n    scanf(\" %d %d\",&b,&g);\n    if(b>g)\n    {min=(b-1)/g;\n    det=1;\n    extra=(b+g-1)%(min+1);}\n    else if(g>b)\n    {min=(g-1)/b;\n    det=2;\n    extra=(b+g-1)%(min+1);\n    }\n    else\n    {min=g/b;\n    det=1;\n    extra=(b+g)%(min+1);}\n    if(det==1)\n    {\n        k=0;\n        p=0;\n        while(p<g)\n        {\n           for(i=0;k<(b+g)&&i<min;k++,i++)\n           printf(\"B\");\n           if(k<(b+g))\n           {printf(\"G\");\n           k++;\n           p++;}\n        }\n        for(;k<(b+g);k++)\n        printf(\"B\");\n    }\n    else if(det==2)\n    {\n        k=0;\n        p=0;\n        while(p<b)\n        {\n           for(i=0;k<(b+g-extra)&&i<min;k++,i++)\n           printf(\"G\");\n           if(k<(b+g-extra))\n           {printf(\"B\");\n           k++;\n           p++;}\n        }\n        for(;k<(b+g);k++)\n        printf(\"G\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nmain()\n{\n    FILE *r,*w;\n    r=fopen(\"input.txt\",\"r\");\n    w=fopen(\"output.txt\",\"w\");\n    int b,g,i;\n    fscanf(r,\" %d %d\",&b,&g);\n    if(b==g)\n    {\n        for(i=0;i<b;i++)\n        fprintf(w,\"BG\");\n        fprintf(w,\"\\n\");\n    }\n    else if(g>b)\n    {\n        for(i=0;i<b;i++)\n        fprintf(w,\"GB\");\n        for(;i<g;i++)\n        fprintf(w,\"G\");\n        fprintf(w,\"\\n\");\n    }\n    else\n    {\n        for(i=0;i<g;i++)\n        fprintf(w,\"BG\");\n        for(;i<b;i++)\n        fprintf(w,\"B\");\n        fprintf(w,\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3565640194489465, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "9e5f1a1647e2cc464db4164114f06d72", "bug_code_uid": "02e76a73762f7d9d0eaa6c8820276a52", "src_uid": "ccfe798f5dc63c492ff54cf40bb40613", "apr_id": "2a71ce34ed28ca4f3c5c4e94a6c9619d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b,c,i,j,k,s;\n        scanf(\"%d%d\",&a,&b);\n        c=abs(a-b);\n        for(i=0;i<=c;i++)\n        {\n            for(j=0;j<=c;j++)\n            {\n                for(k=0;k<=c;k++)\\\n                {\n                    if(5*i+2*j+1*k==c)\n                    {\n                        s=i+j+k;\n                        break;\n                    }\n                }\n            }\n\n        }\n        printf(\"%d\\n\",s);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b,c,s,k,h,n;\n        scanf(\"%d%d\",&a,&b);\n        c=abs(a-b);\n        k=c/5;\n        h=c/2;\n        if(k>0)\n        {\n            n=c-k*5;\n            if(n%2==0)\n            {\n                s=k+n/2;\n            }\n            else\n            {\n                s=k+n/2+1;\n            }\n        }\n        else if(h>0)\n        {\n            if(c%2==0)\n            {\n                s=h;\n            }\n            else\n            {\n                s=h+1;\n            }\n        }\n        else if(c==1)\n        {\n            s=1;\n        }\n        else\n        {\n            s=0;\n        }\n        printf(\"%d\\n\",s);\n    }\n}\n"}
{"similarity_score": 0.8551724137931035, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c587051017155366d6951379f83b3ec9", "bug_code_uid": "ed4b289c06af27eba76010685bf2deb3", "src_uid": "df92643983d6866cfe406f2b36bec17f", "apr_id": "2afd4788e9641c750c84d7bd992884f0", "difficulty": 1500, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\n#define psize 200000\nbool primes[psize];\n\nint main() {\n    long long int n;\n    scanf(\"%I64d\", &n);\n    \n    if(n < 3) {\n        printf(\"-1\");\n        return 0;\n    }\n    \n    long long int mul = 1;\n    //reduce n to a prime\n    for(int i = 0; i < psize; i++)\n        primes[i] = true;\n        \n    for(int i = 2; i < psize; i++)\n        for(int j = 2*i; j < psize; j+=i)\n            primes[j] = false;\n    \n    long long int lastPrime = 1;\n    for(long long int i = 2; i < psize; i++) {\n        if(i > n)\n            break;\n        while(primes[i] && (n % i) == 0) {\n            n /= i;\n            mul *= i;\n            lastPrime = i;\n        }\n    }\n    mul = mul/lastPrime;\n    long long int nplus = (lastPrime*lastPrime+1)/2;\n    printf(\"%I64d %I64d\", (nplus-1)*mul, nplus*mul);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n\n#define psize 200000\nbool primes[psize];\n\nint main() {\n    long long int n;\n    scanf(\"%I64d\", &n);\n    \n    if(n < 3) {\n        printf(\"-1\");\n        return 0;\n    }\n    \n    long long int mul = 1;\n    //reduce n to a prime\n    for(int i = 0; i < psize; i++)\n        primes[i] = true;\n        \n    for(int i = 2; i < psize; i++)\n        for(int j = 2*i; j < psize; j+=i)\n            primes[j] = false;\n    \n    long long int lastPrime = 1;\n    for(long long int i = 2; i < psize; i++) {\n        if(i > n)\n            break;\n        while(primes[i] && (n % i) == 0) {\n            n /= i;\n            mul *= i;\n            lastPrime = i;\n        }\n    }\n    \n    if(n>=psize)\n        lastPrime = n;\n    else\n        mul = mul/lastPrime;\n    \n    if (lastPrime == 2) {\n        mul /= 2;\n        lastPrime *= 2;\n        printf(\"%I64d %I64d\", 5*mul, 3*mul);\n        return 0;\n    }\n    \n    long long int nplus = (lastPrime*lastPrime+1)/2;\n    printf(\"%I64d %I64d\", (nplus-1)*mul, nplus*mul);\n    return 0;\n}"}
{"similarity_score": 0.9897959183673469, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e52b24cca96e1d088430077f66646cd5", "bug_code_uid": "09b197c995eb2e255db883d8028284cd", "src_uid": "76bfced1345f871832957a65e2a660f8", "apr_id": "d59b14dce4bf573fd07600df70e5f789", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid solve (){\r\nint n;\r\nscanf(\"%d\", &n);\r\nfor(int i=1;i<=n;i++)\r\nprintf(\"%d \",i);\r\n\r\nprintf(\"\\n\");\r\n\r\n\r\n}\r\nint main (){\r\nint t ;\r\nscanf(\"%d\", &t);\r\nwhile(t--)\r\nsolve();\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nvoid solve (){\r\nint n;\r\nscanf(\"%d\", &n);\r\nfor(int i=2;i<=n+1;i++)\r\nprintf(\"%d \",i);\r\n\r\nprintf(\"\\n\");\r\n\r\n\r\n}\r\nint main (){\r\nint t ;\r\nscanf(\"%d\", &t);\r\nwhile(t--)\r\nsolve();\r\n}\r\n"}
{"similarity_score": 0.902834008097166, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e7313cc69aab04387a59eb8a8455098d", "bug_code_uid": "0d3f342d04de2a96d255f982b214d84d", "src_uid": "5db2ae5b2c91b29e4fe4a45ab864e3f1", "apr_id": "d8b26b61d4ec7cb7d6c3107aa7bb24d0", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n     int n;\n     scanf(\"%d\",&n);\n     long long int a[n],i,max=0,cnt=0,ans=0;\n     for(i=0;i<n;i++)\n      {\n        scanf(\"%I64d\",&a[i]);\n        if(max<a[i])\n          max=a[i];\n      }\n      for(i=0;i<n;i++)\n        {\n           if(a[i]==max)\n             cnt++;\n           else\n             {\n               if(ans<cnt)\n                  ans=cnt;\n               cnt=0;\n             }\n\n        }\n    printf(\"%I64d\\n\",ans);\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n     int n;\n     scanf(\"%d\",&n);\n     long long int a[n],i,max=0,cnt=0,ans=0;\n     for(i=0;i<n;i++)\n      {\n        scanf(\"%I64d\",&a[i]);\n        if(max<a[i])\n          max=a[i];\n      }\n      for(i=0;i<n;i++)\n        {\n           if(a[i]==max)\n             cnt++;\n           else\n             {\n               cnt=0;\n             }\n          if(ans<cnt)\n            ans=cnt;\n        }\n    printf(\"%I64d\\n\",ans);\n\n}\n"}
{"similarity_score": 0.35045742434905, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "e5c956730a8c14805ea31206bcfe97d6", "bug_code_uid": "b03c684c0dd89095af5dc022eb773a08", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "062fe485aba00b67393dc5ffdc628d51", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tlong int i,n,j,t,x,y,z,flag,ans,sum1,sum2;\n\tscanf(\"%ld\",&t);\n\t\n\tfor (z=0;z<t;z++)\n\t{\n\t\tscanf(\"%ld\",&n);\t\n\t\tlong int a[n];\n\t\tsum1=0;\n\t\tsum2=0;\n\t\tfor(x=0;x<n;x++)\n\t\t  a[x]=x+1;\n\t\t\n\t\tif(n==2)\n\t\t{\n\t\t  printf(\"%d\\n\",2);\n\t\t  continue;\n\t\t}\n\t\tfor(i=0;i<n/2;i++)\n\t\t{\n\t\t\tx = pow(2,a[i]);\n\t\t\ty = pow(2,a[n-i-1]);\n\t\t\tif(i==0)\n\t\t\t sum1 += x+y;\n\t\t\telse if(sum2<sum1)\n\t\t\t sum2 += x+y;\n\t\t\telse\n\t\t\t sum1 += x+y;\n\t\t}\n\t\tif(sum1>sum2)\n\t\t  ans = sum1-sum2;\n\t\telse\n\t\t  ans = sum2-sum1;  \n\t\tprintf(\"%ld\\n\",ans);\n\t}\n\t\t\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tlong int i,n,j,t,x,y,z,flag,ans,sum1,sum2;\n\tscanf(\"%ld\",&t);\n\t\n\tfor (z=0;z<t;z++)\n\t{\n\t\tscanf(\"%ld\",&n);\t\n\t\tlong int a[n],b[n],c[n],l1=0,l2=0;\n\t\tsum1=0;\n\t\tsum2=0;\n\t\t\n\t\tfor(x=0;x<n;x++)\n\t\t  a[x]=x+1;\n\t\t\n\t\tfor(i=n-1;i>-1;)\n\t\t{\n\t\t  // l1=sizeof(b)/sizeof(int);\n\t\t  //  l2=sizeof(c)/sizeof(int);\n\t\n\t\t   \n\t\t    while(l2!=n/2 && sum2<sum1)\t\n\t\t\t{\n\t\t\t   c[l2++] = i; \n\t\t\t   sum2 += pow(2,a[i]);\n\t\t\t   i--;\n\t\t\t}\n\t\t   \n\t\t\t  while(l1!=n/2 && sum1<sum2)  \n\t\t\t   { \n\t\t\t     b[l1++] = i;\n\t\t\t     sum1 += pow(2,a[i]);\n\t\t\t     i--;\n\t\t\t   }\n\t\t\t\n\t\t\tif((l2==n/2 || sum1==sum2) && i>-1)\n\t\t\t{   b[l1++]=i;\n\t\t\t    sum1+=pow(2,a[i]);\n\t\t\t    i--;\n\t\t\t} \n\t\t\telse if(l1==n/2 && i>-1)\n\t\t\t{   b[l2++]=i;\n\t\t\t    sum2+=pow(2,a[i]);\n\t\t\t    i--;\n\t\t\t} \n\t\t}\n\t\tif(sum1>sum2)\n\t\t  ans = sum1-sum2;\n\t\telse\n\t\t  ans = sum2-sum1;  \n\t\tprintf(\"%ld\\n\",ans);\n\t}\n\t\t\n}\n"}
{"similarity_score": 0.900709219858156, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "501f4d5a97189500b42ba3b2725fe013", "bug_code_uid": "0eaad3235f0cfa620d6367477ee3102b", "src_uid": "5db2ae5b2c91b29e4fe4a45ab864e3f1", "apr_id": "4c879f4ce04e3457d34466dd4f39098b", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint i=0,n,j=0,k=1;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&a[i]);\n\tif(a[i]>j)\n\tj=a[i];\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif((a[i]==j)&&(a[i+1]==j))\n\t\tk++;\n\t\telse\n\t\tif((a[i]==j)&&(a[i+1]!=j))\n\t\tbreak;\n\t}\n\tprintf(\"%d\",k);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint i=0,n,j=0,k=1,w=0;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&a[i]);\n\tif(a[i]>j)\n\tj=a[i];\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif((a[i]==j)&&(a[i+1]==j))\n\t\tk++;\n\t\telse if((a[i]==j)&&(a[i+1]!=j))\n\t\t{\n\t\t\tif(k>w)\n\t\t\tw=k;\n\t\t\tk=1;\n\t\t}\n\t}\n\tprintf(\"%d\",w);\n}"}
{"similarity_score": 0.9690721649484536, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "922e02c73b648236dd7ce99a96ca1865", "bug_code_uid": "599660669bcc244e5a494ccad33aa470", "src_uid": "822e8f394a59329fa05c96d7fb35797e", "apr_id": "0bb7ec7ba61d74c965eb93f2c7ac3021", "difficulty": 1100, "tags": ["number theory", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp (const void*, const void*);\n\nunsigned int a[100000];\n\nint main ()\n    {\n    unsigned int n;\n    unsigned int n1;\n    unsigned int n2;\n    unsigned int i;\n    unsigned int t;\n    unsigned int s1;\n    unsigned int s2;\n    unsigned int sn;\n    \n    scanf (\"%u %u %u\",&n,&n1,&n2);\n    for (i = 0; i < n; i++)\n        scanf (\"%u\",&a[i]);\n    qsort (a,n,sizeof(unsigned int),cmp);\n    if (n1 > n2)\n        {\n        t = n1;\n        n1 = n2;\n        n2 = t;\n        }\n    s1 = 0;\n    for (i = 0; i < n1; i++)\n        s1 += a[i];\n    s2 = 0;\n    sn = n1+n2;\n    for (i = n1; i < sn; i++)\n        s2 += a[i];\n    printf (\"%.6f\\n\",(double)s1/n1+(double)s2/n2);\n    return 0;\n    }\n    \nint cmp (p1,p2)\n    const void* p1;\n    const void* p2;\n    {\n    unsigned int a1;\n    unsigned int a2;\n    \n    a1 = *(unsigned int*)p1;\n    a2 = *(unsigned int*)p2;\n    if (a1 == a2)\n        return 0;\n    return (a1 < a2 ? 1 : -1);\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp (const void*, const void*);\n\nunsigned int a[100000];\n\nint main ()\n    {\n    unsigned int n;\n    unsigned int n1;\n    unsigned int n2;\n    unsigned int i;\n    unsigned int t;\n    unsigned long long s1;\n    unsigned long long s2;\n    unsigned int sn;\n    \n    scanf (\"%u %u %u\",&n,&n1,&n2);\n    for (i = 0; i < n; i++)\n        scanf (\"%u\",&a[i]);\n    qsort (a,n,sizeof(unsigned int),cmp);\n    if (n1 > n2)\n        {\n        t = n1;\n        n1 = n2;\n        n2 = t;\n        }\n    s1 = 0;\n    for (i = 0; i < n1; i++)\n        s1 += a[i];\n    s2 = 0;\n    sn = n1+n2;\n    for (i = n1; i < sn; i++)\n        s2 += a[i];\n    printf (\"%.6f\\n\",(double)s1/n1+(double)s2/n2);\n    return 0;\n    }\n    \nint cmp (p1,p2)\n    const void* p1;\n    const void* p2;\n    {\n    unsigned int a1;\n    unsigned int a2;\n    \n    a1 = *(unsigned int*)p1;\n    a2 = *(unsigned int*)p2;\n    if (a1 == a2)\n        return 0;\n    return (a1 < a2 ? 1 : -1);\n    }\n"}
{"similarity_score": 0.3682771194165907, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "70d179ab2beb7266f05f5ababbfec156", "bug_code_uid": "0e439ab03bb99ba29aa9130bc59e3b53", "src_uid": "943ce230777aca97266c272bdb9b364c", "apr_id": "2cb40c7e50ae9fb321ed1a1ad3ff4db1", "difficulty": 900, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,a[1000],min=10000;\r\n        int max=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]<min) min=a[i];\r\n            if(a[i]>max)max=a[i];\r\n        }\r\n        if(n>1)\r\n        printf(\"%d\\n\",max-min);\r\n        else\r\n        printf(\"0\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint max(int a,int b)\r\n{\r\n    if(a>b)\r\n     return a;\r\n    else\r\n     return b;\r\n}\r\nint min(int a,int b)\r\n{\r\n    if(a<b)\r\n     return a;\r\n    else\r\n     return b;\r\n}\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--)\r\n   {\r\n     int n,i;\r\n    scanf(\"%d\",&n);\r\n    int x[n+1],mx=0,mn=1000000;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&x[i]);\r\n        if(i!=0&&x[i]>mx)\r\n        mx=x[i];\r\n        if(i!=n-1&&x[i]<mn)\r\n        mn=x[i];\r\n    }\r\n    int ans=0;\r\n    for(i=0;i<n-1;i++)\r\n    ans=max(ans,x[i]-x[i+1]);\r\n    int ans1=mx-x[0];\r\n    int ans2=x[n-1]-mn;\r\n  int final=max(ans,max(ans1,ans2));\r\n    printf(\"%d\\n\",final);\r\n   }\r\n   \r\n}"}
{"similarity_score": 0.9970501474926253, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "45e5c3c7c65c0300d7c97df1eb073b39", "bug_code_uid": "34d9bf9ae407e9c4c56b75e761fe71a9", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "3638d3d30be7c2bd8d9405f154a662a6", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\n#include<string.h>\nint find( int x, int y)\n{\n\n  return x>y? y:x;\n}\nint main()\n{\n     int ch[1000][1000];\n    char arr[1000];\n    int cp[4]={ 0,0,0,0 };\n    int a,b,c,d,e=0,i=0,tep=0,temp=0,j=0,k=0,l=0,m=0,n=0;\n    \nscanf(\"%d\",&a);\n    for(i=1;i<=a;i++)\n    {\n     scanf(\"%d\",&b);\n     cp[b]+=1;\n     ch[b][cp[b]]=i;\n    }\n    e=find(cp[1],cp[2]);\n    e=find(e,cp[3]);\n     printf(\"%d\\n\",e);\n    for(j=1;j<=e;j++)\n      printf(\"%d %d %d \\n\",ch[1][j],ch[2][j],ch[3][j]);\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n\n\n#include<string.h>\nint find( int x, int y)\n{\n\n  return x>y? y:x;\n}\nint main()\n{\n     int ch[1000][6000];\n    char arr[1000];\n    int cp[4]={ 0,0,0,0 };\n    int a,b,c,d,e=0,i=0,tep=0,temp=0,j=0,k=0,l=0,m=0,n=0;\n    \nscanf(\"%d\",&a);\n    for(i=1;i<=a;i++)\n    {\n     scanf(\"%d\",&b);\n     cp[b]+=1;\n     ch[b][cp[b]]=i;\n    }\n    e=find(cp[1],cp[2]);\n    e=find(e,cp[3]);\n     printf(\"%d\\n\",e);\n    for(j=1;j<=e;j++)\n      printf(\"%d %d %d\\n\",ch[1][j],ch[2][j],ch[3][j]);\n    \n    return 0;\n}"}
