{"similarity_score": 0.5800865800865801, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "70fff2dcd03cb718b6c67c03ff032d2b", "bug_code_uid": "40e08d72bc798b4c9851286b6b0b8bea", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "932ac46cdd07f22dfb2712d45ad9a4ac", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(void) {\n\tchar s[100001];\n\tscanf(\"%s\",s);\n\tint i,c=0,m,l,r;\n\tscanf(\"%d\",&m);\n\twhile(m--)\n    {\n        scanf(\"%d %d\",&l,&r);\n        for(i=l;i<r;++i)\n        {\n            if(s[i-1]==s[i])\n                c++;\n        }\n        printf(\"%d\\n\",c);\n        c=0;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(void) {\n\tchar s[100001];\n\tscanf(\"%s\",s);\n\tint i,c[100001]={0},m,l,r;\n\tscanf(\"%d\",&m);\n\tfor(i=1;s[i]!='\\0';++i)\n    {\n        if(s[i-1]==s[i])\n            c[i]=c[i-1]+1;\n        else\n            c[i]=c[i-1];\n    }\n\twhile(m--)\n    {\n        scanf(\"%d %d\",&l,&r);\n        printf(\"%d\\n\",c[r-1]-c[l-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9414316702819957, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "456a2d441b7fdd0a7b0f7f950825542c", "bug_code_uid": "18fb4d7bfd855e1972529a72c5faffa3", "src_uid": "faf2c92c3a61ba5e33160bc7a18ad928", "apr_id": "646f942900dd5db371c53a75d298a604", "difficulty": 1500, "tags": ["dp", "combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint const MOD=1e9+7;\n\nint main()\n{\n\tint i,j,n,s,t;\n\tscanf(\"%d\",&n);\n\ts=0;\n\tint ar[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&ar[i]);\n\t\ts+=ar[i];\n\t}\n\tint pas[s+2][s+2];\n\tfor(i=0;i<s+2;i++)\n\t{\n\t\tfor(j=0;j<s+2;j++)\n\t\t{\n\t\t\tif(i==0 || j==0)\n\t\t\t{\n\t\t\t\tpas[i][j]=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpas[i][j]=(pas[i-1][j]+pas[i][j-1])%MOD;\n\t\t}\n\t}\n\tt=1;\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tt=(t*pas[s-ar[i]][ar[i]-1])%MOD;\n\t\ts-=ar[i];\n\t}\n\tprintf(\"%d\\n\",t );\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint const MOD=1e9+7;\n\nint pas[1010][1010];\n\nint main()\n{\n\tint i,j,n,s;\n\tscanf(\"%d\",&n);\n\ts=0;\n\tint ar[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&ar[i]);\n\t\ts+=ar[i];\n\t}\n\tfor(i=0;i<s+2;i++)\n\t{\n\t\tfor(j=0;j<s+2;j++)\n\t\t{\n\t\t\tif(i==0 || j==0)\n\t\t\t{\n\t\t\t\tpas[i][j]=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpas[i][j]=(pas[i-1][j]+pas[i][j-1])%MOD;\n\t\t}\n\t}\n\tlong long t=1;\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tt=(t*pas[s-ar[i]][ar[i]-1])%MOD;\n\t\ts-=ar[i];\n\t}\n\tprintf(\"%d\\n\",t );\n\treturn 0;\n}"}
{"similarity_score": 0.9569060773480663, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2c0c20f46b9284d37990e5b37ab95625", "bug_code_uid": "580c0d197624d5694c5b6df8760ab9d5", "src_uid": "8a6953a226abef41a44963c9b4998a25", "apr_id": "66c0d5107a80e3aea4ac8698b59493e2", "difficulty": 1400, "tags": ["dp", "greedy", "implementation", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint compare(const void *x,const void *y)\n{\n  return (*(int*)x - *(int*)y);\n}\nint main()\n{\n  long long int b,c,n,i,m;\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n scanf(\"%lld %lld\",&n,&b); long long int a[n];\nfor(i=0;i<n;i++)\nscanf(\"%lld\",&a[i]);\n\n  qsort(a,n,sizeof(long long int),compare);\n\n  c=0;\nm=0;\n\nfor(i=n-1;i>=0;i--)\n{\n if(a[i]>=b)\nc++;\nelse\n{\n  m++;\nif(m*a[i]>=b)\nc++,m=0;\n\n}\n}\n\n}\nprintf(\"%lld\",c);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint compare(const void *x,const void *y)\n{\n  return (*(int*)x - *(int*)y);\n}\nint main()\n{\n  long long int b,c,n,i,m;\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n scanf(\"%lld %lld\",&n,&b); long long int a[n];\nfor(i=0;i<n;i++)\nscanf(\"%lld\",&a[i]);\n\n  qsort(a,n,sizeof(long long int),compare);\n\n  c=0;\nm=0;\n\nfor(i=n-1;i>=0;i--)\n{\n if(a[i]>=b)\nc++;\nelse\n{\n  m++;\nif(m*a[i]>=b)\nc++,m=0;\n\n}\n}\n\n\nprintf(\"%lld\\n\",c);\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.5383104125736738, "equal_cnt": 19, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "60a66c6ae025385f46904e3501cdab25", "bug_code_uid": "cd3f11d4d56a6c03c3b0e782a3eca356", "src_uid": "c0abbbf1cf6c8ec11e942cdaaf01ad7c", "apr_id": "ba17957e60bb54e1dba61f13a6ccc392", "difficulty": 1000, "tags": ["dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint num=0;\n\tscanf(\"%d\",&num);\t\n\tint * ptr=(int*)malloc(sizeof(int)*num);\n\tint * flag=(int*)malloc(sizeof(int)*num);\n\n\tint i=0;\n\tfor(i=0;i<num;i++){\n\t\tscanf(\"%d\",&ptr[i]);\t\t\n\t}\n\n\tfor(i=0;i<num;i++){\n\t\tint w=i;\n\t\tmemset(flag,0,num);\n\t\twhile(flag[w]==0){\n//\t\t\tprintf(\"%d: %d,%d\\n\",w,flag[w],ptr[w]);\n\t\t\tflag[w]=1;\n\t\t\tw=ptr[w]-1;\t\n\t\t}\n\t\tprintf(\"%d \",w+1);\n\t}\t\n\n\tfree(ptr);\n\tfree(flag);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint num = 0;\n\tscanf(\"%d\", &num);\n\tint * ptr = (int*)malloc(sizeof(int)*num);\n\tint * flag = (int*)malloc(sizeof(int)*num);\n\tmemset(ptr, 0, num);\n\tmemset(flag, 0, num);\n\n\tint i = 0;\n\tfor (i = 0; i<num; i++) {\n\t\tscanf(\"%d\", &ptr[i]);\n\t\tflag[i] = 0;\n\t}\n\n\tfor (i = 0; i<num; i++) {\n\t\tint w = i;\n\t\tint x = 0;\n\t\tfor (x = 0; x<num; x++) {\n\t\t\tflag[x] = 0;\n\t\t}\n\t\twhile (flag[w] == 0) {\n\t\t\tflag[w] = 1;\n\t\t\tw = ptr[w] - 1;\n\t\t}\n\t\tprintf(\"%d \", w + 1);\n\t}\n\n\tfree(ptr);\n\tfree(flag);\n\treturn 0;\n}\n"}
{"similarity_score": 0.4309296264118158, "equal_cnt": 18, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "a43094f4280aaf335742a27091d31004", "bug_code_uid": "fbc323fde76ec5b998c8ac0961bf0d2b", "src_uid": "7f934f96cbe3990945e5ebcf5c208043", "apr_id": "a860cc645a109afe9804aabc0dd00165", "difficulty": 800, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main ()\n{\n    char s[1000];\n    int i=0,n,c,j,k,mk,l;\n    scanf(\"%d\",&n);\n    getchar();\n    int array[n];\n    while(n--)\n    {\n        mk=0;\n        gets(s);\n        l=strlen(s);\n        for(k=0;k<l;k++)\n            mk+=s[k];\n        array[i]=mk;\n        if(i==0)\n            printf(\"NO\\n\");\n        else\n        {\n            for(j=i-1;j>=0;j--)\n        {\n\n            if(array[i]==array[j])\n            {\n\n                c=1;\n                break;\n            }\n        }\n        if(c==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n\n        }\n\n        i++;\n\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main ()\n{\n    int i,j,n,mk;\n    char st[101][101];\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        mk=0;\n        scanf(\"%s\",&st[i]);\n        for(j=0;j<i;j++)\n        {\n\n            if(strcmp(st[j],st[i])==0)\n            {\n                mk=1;\n                printf(\"YES\\n\");\n                break;\n\n            }\n\n\n\n        }\n        if(mk==0)\n        printf(\"NO\\n\");\n\n    }\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9757489300998573, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "27314c0c60f17c39ee90247b7f945209", "bug_code_uid": "fef33c86cb89ba88a5217a7f9079ef3c", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "ee0f5a93c1383db2af2c3d360e3cb1e7", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t, i, len;\n    char str[100];\n\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        gets(str);\n        printf(\"%c\", str[0]);\n\n        len = strlen(str);\n        for(i = 1; i < len; i = i + 2)\n        {\n            printf(\"%c\", str[i]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t, i, len;\n    char str[100];\n\n    scanf(\"%d\", &t);\n\n    while(t--)\n    {\n        scanf(\"%s\", str);\n        printf(\"%c\", str[0]);\n\n        len = strlen(str);\n        for(i = 1; i < len; i = i + 2)\n        {\n            printf(\"%c\", str[i]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9560229445506692, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "95bf793600f9f61712ad4326305a4c81", "bug_code_uid": "7008e8fcb134208e975accccd2795129", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "81d331a193168be208cc0d3a5ac0910b", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n;\n    scanf(\"%d\",&n);\n    int i,ck=0,bk=0;\n    long int a,b;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld%ld\",&a,&b);\n        if(a<0&&a!=0)\n            ck++;\n            if(a>0&a!=0)\n                bk++;\n    }\n    if(bk>ck)\n   {\n    if(ck>1)\n        printf(\"no\\n\");\n    if(ck==1||ck==0)\n        printf(\"yes\\n\");\n   }\n  else if(ck>bk)\n   {\n    if(bk>1)\n        printf(\"no\\n\");\n    if(bk==1||bk==0)\n        printf(\"yes\\n\");\n   }\n   else\n    printf(\"no\\n\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int n;\n    scanf(\"%d\",&n);\n    int i,ck=0,bk=0;\n    long int a,b;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld%ld\",&a,&b);\n        if(a<0&&a!=0)\n            ck++;\n            if(a>0&a!=0)\n                bk++;\n    }\n    if(bk>ck)\n   {\n    if(ck>1)\n        printf(\"no\\n\");\n    if(ck==1||ck==0)\n        printf(\"yes\\n\");\n   }\n  else if(ck>bk)\n   {\n    if(bk>1)\n        printf(\"no\\n\");\n    if(bk==1||bk==0)\n        printf(\"yes\\n\");\n   }\n   else if(ck==1&&bk==1)\n    printf(\"yes\\n\");\n   else\n    printf(\"no\\n\");\n}\n"}
{"similarity_score": 0.12738853503184713, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "84018add2c379f9c41865fd307cfcc43", "bug_code_uid": "13f7315f7eae30a744ff6c6a752488ef", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "06d77022ef1542b1d7cf84dd9af48e61", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint i,n,j,a[10000],b[10000],c[10000],d[10000],s[10000],k=0,p=1;\n\tscanf(\"%d\",&n);\n\ts[0]=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d %d %d\",&a[i],&b[i],&c[i],&d[i]);\n\t}\n\tfor(i=0;i<4;i++)\n\t{\n\t\ts[i]=s[i]+a[i]+b[i]+c[i]+d[i];\n\t}\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(s[k]<s[i])\n\t\t{\n\t\t\tp++;\n\t\t}\n\t}\n\tprintf(\"%d\",p);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n, a,b,c,d, sum,p,ct=0;;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d%d%d%d\", &a,&b,&c,&d);\n\tp=a+b+c+d;\n\tfor(int i = 2; i<=n; i++){\n\t\tscanf(\"%d%d%d%d\", &a,&b,&c,&d);\n\t\tsum = a+b+c+d;\n\t\t\t\t\tif(sum > p){\n\t\t\t\t\t\tct++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\tprintf(\"%d\", ct+1);\n\treturn 0;\n\t}\n\t"}
{"similarity_score": 0.8048433048433048, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "85a6e44c9f3106b0dd67fd16fa7dd0ca", "bug_code_uid": "a5fb28d8bc39785a1653cf1881264397", "src_uid": "e63de0fffd00b2da103545a7f1e405be", "apr_id": "2e1cdc76654660f23d73e2322b5e0f7a", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,b,i,r,j,l,k,h,t,s;\n   h=0;t=0;\n   int y=0;\n   int q=0;\n   scanf(\"%d\",&n);\n   int m[n];\n   int o[n];\n    if(n>0&&n<=100000)\n     {\n       for(j=0;j<n;j++)\n       {\n           scanf(\"%d\",&m[j]);\n           o[j]=m[j];\n       }\n\n\n             for(k=0;k<n;k++)\n                {\n                if ((o[k]==o[o[k]])&&(k!=i))\n                {\n                    if(y<1)\n                    {\n                h =  o[i];\n                o[i] = o[k];\n                o[k] = h;\n                y++;\n                }\n                }\n        }\nif(y<1)\n{\nq++;\ny++;\n}\n\nfor(b=0;b<n;b++)\n{\nif(o[b]==b)\n  q++;\n}\nif(q>n)\n    q--;\nprintf(\"%d\",q);\n\n}\n\nreturn 0;\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int n,b,i,r,j,l,k,h,t,s;\n   h=0;t=0;\n   int y=0;\n   int q=0;\n   scanf(\"%d\",&n);\n   int m[n];\n   int o[n];\n\n\n       for(j=0;j<n;j++)\n       {\n           scanf(\"%d\",&m[j]);\n           o[j]=m[j];\n       }\n\n\n             for(k=0;k<n;k++)\n                {\n                if (o[o[k]]==k && y<1 && o[k]!=k)\n                {\n                h =  o[o[k]];\n                o[o[k]] = o[k];\n                o[k] = h;\n                y++;\n                break;\n                }\n        }\n        if(y<1)\n        {\n        q++;\n        y++;\n        }\n\nfor(b=0;b<n;b++)\n{\nif(o[b]==b)\n  q++;\n}\nif(q>n)\n    q--;\nprintf(\"%d\",q);\n\n\nreturn 0;\n    }\n"}
{"similarity_score": 0.574793875147232, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "da02301a6f7c63d00c1bf6ed0676c5fb", "bug_code_uid": "268443c710b88a17bed20b8b672276da", "src_uid": "f146808eb6e0ee04d531e7222a53d275", "apr_id": "161ea4d7e442037712b78a0bf527f3fd", "difficulty": 1300, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    int n,min=0;\n    int s=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i=0;i<n-1;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(a[i]>a[j]) s=a[j]/(j-i);\n            else s=a[i]/(j-i);\n            if(i==0&&j==1) min=s;\n            if(s<min) min=s;\n        }\n    }\n\n\n    printf(\"%d\",min);\n\n\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    int n,min=0;\n    int s=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n        if(i<(n/2)) s=a[i]/(n-i-1);\n        else s=a[i]/(i);\n        if(i==0)\n        {\n            min=a[0]/(n-1);\n        }\n        else if(min>s)\n        {\n            min=s;\n        }\n        \n    }\n\n\n\n    printf(\"%d\",min);\n\n\n\n}"}
{"similarity_score": 0.9737742303306728, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "04880633d0b7250807bd9c9901ba6b08", "bug_code_uid": "489e538aea3b4d81dc2ac24cab999cc5", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "0c9baccce22e84672a53d7c9936a1d7e", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n   char S[1000000];\n   int n, cnt=0;\n   scanf(\"%d\",&n);\n   scanf(\"%s\",S);\n   int l = strlen(S);\n\n   if(n < 27) {\n       for(int i = 0; i < l+1; i++) {\n        for(int j = i+1; j < l+1; j++) {\n           if(S[i]==S[j]) {\n                cnt++;\n                \n           }\n        }\n      }\n\n   } else {\n        cnt = -1;\n   }\n    \n    printf(\"%d\",cnt);\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n   char S[1000000];\n   int n, cnt=0;\n   scanf(\"%d\",&n);\n   scanf(\"%s\",S);\n   int l = strlen(S);\n\n   if(n < 27) {\n       for(int i = 0; i < l+1; i++) {\n        for(int j = i+1; j < l+1; j++) {\n           if(S[i]==S[j]) {\n                cnt++;\n                break;\n                \n           }\n        }\n      }\n\n   } else {\n        cnt = -1;\n   }\n    \n    printf(\"%d\",cnt);\n    \n    return 0;\n}\n"}
{"similarity_score": 0.09870550161812297, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "c1a90a94ebc4c3c96dbc4b722328941e", "bug_code_uid": "71728dff1373754153e47e1ba0a50bf9", "src_uid": "dceeb739a56bb799550138aa8c127996", "apr_id": "667050aa6604232a95c494ca2a134ec4", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\n#define READ(n) int (n); scanf(\"%d\",&(n))\n#define getString(x) scanf(\"%s\", x)\n#define getInt(a) scanf(\"%d\", &a)\n#define FOR(i,L,R) for (int i = L; i < R; i++)\n\n\nint main(){\n    int n, k;\n    scanf(\"%d %d\", &n, &k);\n    int arr[k + 1];\n    FOR(i, 1, k + 1)\n        arr[i] = 0;\n    \n    for (int i = 0; i < n; i++){\n        int a;\n        scanf(\"%d\", &a);\n        arr[a]++;\n    }\n    \n    int modCnt = 0, oneCnt = 0;\n    FOR(i, 1, k + 1){\n        if (arr[i] % 2 != 0)\n            modCnt++;\n        if (arr[i] == 1)\n            oneCnt++;\n    }\n    \n    int final;\n    if (oneCnt > 0)\n        final = modCnt - oneCnt;\n    else\n        final = modCnt - 1;\n\n    printf(\"%d\\n\", n - final);\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int n, k;\n    scanf(\"%d %d\", &n, &k);\n    int arr[n], setNum, a = 0;\n    (n % 2 == 0) ? (setNum = n/2) : (setNum = (n + 1)/2);\n        \n    for(int i = 0; i < n; i++)\n        scanf(\"%d\", &arr[i]);\n    \n    for(int i = 1; i <= k; i++){\n        int drCnt = 0;\n        for(int j = 0; j < n; j++)\n            if(arr[j] == i)\n                drCnt++;\n                \n        (drCnt % 2 == 0) ? (a += drCnt/2) : (a += (drCnt + 1)/2);\n    }\n\n    printf(\"%d\\n\", n - (a - setNum));\n}   "}
{"similarity_score": 0.8083785880527541, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b9dd1130f4af298008466107f2437064", "bug_code_uid": "e7c830d018fcd003f7eaa336ad4e4562", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "5953bc21bf69a033c112b6b75723a183", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    unsigned long long int a,b,c,n,x;\n    scanf(\"%llu\",&n);\n    for(int i=0;i<n;i++){\n        scanf(\"%llu %llu %llu\",&a,&b,&c);\n        if(a==0){\n            printf(\"0\\n\");\n        }\n        else if(a==1){\n            printf(\"%llu\\n\",b);\n        }\n        else{\n            if(c/2.0>(float)b){\n                printf(\"%llu\\n\",a*b);\n            }\n            else{\n                if(a%2==0){\n                    printf(\"%llu\",a/2*c);\n                }\n                else{\n                    x=((a-1)/2)*c + b;\n                    printf(\"%llu\\n\",x);\n                }\n            }\n        }\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    long long int a,b,c,n,x;\n    scanf(\"%lld\",&n);\n    for(int i=0;i<n;i++){\n        scanf(\"%lld %lld %lld\",&a,&b,&c);\n        if(a==0){\n            printf(\"0\\n\");\n        }\n        else if(a==1){\n            printf(\"%lld\\n\",b);\n        }\n        else{\n            if(c/2.0>(float)b){\n                printf(\"%lld\\n\",a*b);\n            }\n            else{\n                if(a%2==0){\n                    printf(\"%lld\\n\",a/2*c);\n                }\n                else{\n                    x=((a-1)/2)*c + b;\n                    printf(\"%lld\\n\",x);\n                }\n            }\n        }\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.13104325699745548, "equal_cnt": 19, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "ded56e99622fdd390daa127a8a2af927", "bug_code_uid": "70c930201153a8459cec78de7a16dd1c", "src_uid": "3969ba3e3eb55a896663d2c5a5bc4a84", "apr_id": "3dced42e83ad8964647b5623fe13902d", "difficulty": 1300, "tags": ["implementation", "sortings", "expression parsing", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main ()\n{\n\tint a[1002],i,j,k,cnt,c;\n\tchar s[1002];\n\tgets(s);\n\tfor (i=0;i<=1000;i++) a[i]=0;\n\tfor (i=0,cnt=0;i<strlen(s);i++) {\n\t\tif(s[i]==',') {\n\t\t\tc=0;\n\t\t\tfor(j=i-1,k=1;j>=i-cnt;j--,k*=10) c+=(s[j]-'0')*k;\n\t\t\ta[c]=1;\n\t\t\tcnt=0;\n\t\t}\n\t\telse cnt++;\n\t}\n\n\tc=0;\n\tfor(j=i-1,k=1;j>=i-cnt;j--,k*=10) c+=(s[j]-'0')*k;\n\ta[c]=1;\n\n\tfor (i=0;i<=1000;i++) {\n\t\tif(a[i]==1&&a[i+1]==0) printf(\"%d,\",i);\n\t\telse if(a[i]==1&&a[i+1]==1){\n\t\t\tj=i,k=i;\n\t\t\tfor (;a[k]==1;k++);\n\t\t\tprintf(\"%d-%d,\",j,k-1);\n\t\t\ti=k;\n\t\t}\n\t}\n\tprintf(\"\\b \\n\");\n\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint compi(const void*a,const void*b)\n{\n    const int*p=a;\n    const int*q=b;\n    return *p-*q;\n}\n\nint main()\n{\n    int i,j,k=1,a[101],b[101],flag=0;\n    scanf (\"%d\",&a[0]);\n    for (j=1;scanf(\",%d\",&a[j]);j++);\n    if (j==1)\n        printf (\"%d\",a[0]);\n    else\n    {\n        qsort(a,j,sizeof(a[0]),compi);\n        b[0]=a[0];\n        for (i=1; i<j; i++)\n            if (a[i]!=a[i-1])\n            {\n                b[k]=a[i];\n                k++;\n            }\n        printf(\"%d\",b[0]);\n        for (i=1; i<k; i++)\n        {\n            if (b[i]-b[i-1]==1)\n            {\n                flag=1;\n                if(i==k-1)\n                    printf (\"-%d\",b[i]);\n                else\n                continue;\n            }\n            else if (flag==0)\n                printf (\",%d\",b[i]);\n            else\n            {\n                printf (\"-%d\",b[i-1]);\n                printf (\",%d\",b[i]);\n            flag=0;\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9973821989528796, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ae17c5d05bc8aa1d025fa0d5416c0a66", "bug_code_uid": "1eceb9a194eca2c91ef75e885c56bc4f", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "47acf559e0eebd66978d977ae1ce57d0", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int n,i,a[1001],j,temp;\n    scanf(\"%d\",&n);\n    if(n==1)\n        printf(\"-1\");\n    else\n    {{\n      for(i=1;i<=n;i++)\n      {\n        a[i-1]=i;\n      }\n    }\n    for(i=0;i<n;i+=2)\n    {\n      temp=a[i];\n      a[i]=a[i+1];\n      a[i+1]=temp;\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d\",a[i]);\n        printf(\" \");\n    }}\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,i,a[1001],j,temp;\n    scanf(\"%d\",&n);\n    if(n%2==1)\n        printf(\"-1\");\n    else\n    {{\n      for(i=1;i<=n;i++)\n      {\n        a[i-1]=i;\n      }\n    }\n    for(i=0;i<n;i+=2)\n    {\n      temp=a[i];\n      a[i]=a[i+1];\n      a[i+1]=temp;\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d\",a[i]);\n        printf(\" \");\n    }}\n    return 0;\n}"}
{"similarity_score": 0.9983792544570502, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9a5e4c6e9b06f569c2d8bbec76a9b58e", "bug_code_uid": "f6fa8375f6fd831372cdff9b426a09f4", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "458010ffb3f8deb1cd06adb2b2c122b4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    int rep;\n    scanf(\"%d\", &rep);\n    int i;\n    \n    for (i = 0; i < rep; i++) {\n        int x, num_2 = 0, num_3 = 0;\n        scanf(\"%d\", &x);\n        \n        while (x % 2 == 0) {\n            x /= 2;\n            num2++;\n        }\n        \n        while (x % 3 == 0) {\n            x /= 3;\n            num3++;\n        }\n        \n        if (x != 1) {\n            printf(\"-1\\n\");\n            continue;\n        }\n        \n        if (num_2 > num_3) {\n            printf(\"-1\\n\");\n        } else {\n            printf(\"%d\\n\", 2 * num_3 - num_2);\n        }\n    }\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n    int rep;\n    scanf(\"%d\", &rep);\n    int i;\n    \n    for (i = 0; i < rep; i++) {\n        int x, num_2 = 0, num_3 = 0;\n        scanf(\"%d\", &x);\n        \n        while (x % 2 == 0) {\n            x /= 2;\n            num_2++;\n        }\n        \n        while (x % 3 == 0) {\n            x /= 3;\n            num_3++;\n        }\n        \n        if (x != 1) {\n            printf(\"-1\\n\");\n            continue;\n        }\n        \n        if (num_2 > num_3) {\n            printf(\"-1\\n\");\n        } else {\n            printf(\"%d\\n\", 2 * num_3 - num_2);\n        }\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.9627791563275434, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5744b8ac9220acc7bf3a905b48848171", "bug_code_uid": "d422df9c87a442d54f7429666af5cddb", "src_uid": "2cd5807e3f9685d4eff88f2283904f0d", "apr_id": "24e4af6bd88f3bd5e67861184f0e7e04", "difficulty": 1000, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    double h,l,sum=0.0,m,n,o,p;\n    scanf(\"%lf %lf\",&h,&l);\n    m=l*l;\n    n=h*h;\n    o=m-n;\n    p=2*h;\n    sum=o/p;\n    printf(\"%.13lf\\n\",sum);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    double h,l,sum=0.0,m,n,o,p;\n    scanf(\"%lf %lf\",&h,&l);\n    m=l*l;\n    n=h*h;\n    o=m-n;\n    p=2*h;\n    sum=o/p;\n    printf(\"%.13f\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9702734839476813, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ee3ce1ce433dbb5db6be5dd33d22a5be", "bug_code_uid": "40489c3b283a3b5b3fe370cd9ebe229b", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "ef13c4b8b0e319e27e8b6a1c9129d406", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100000];\n    int l,i,j,count[7],a;\n    scanf(\"%s\",&str);\n    l=strlen(str);\n    for(i=0;i<l;i++)\n    {\n        if(str[i]=='B')\n            count[0]++;\n        if(str[i]=='b')\n            count[1]++;\n        if(str[i]=='l')\n            count[2]++;\n        if(str[i]=='s')\n            count[3]++;\n        if(str[i]=='r')\n            count[4]++;\n        if(str[i]=='a')\n            count[5]++;\n        if(str[i]=='u')\n            count[6]++;\n    }\n    for (i = 0; i < 7; i++)\n    {\n        for (j = i + 1; j < 7; ++j)\n        {\n            if (count[i] < count[j])\n            {\n                a =  count[i];\n                count[i] = count[j];\n                count[j] = a;\n            }\n        }\n    }\n    printf(\"\\n%d\",count[6]);\n    return 0;\n\n\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100000];\n    int l,i,j,count[7],a;\n    scanf(\"%s\",&str);\n    l=strlen(str);\n    for(i=0;i<l;i++)\n    {\n        if(str[i]=='B')\n            count[0]++;\n        if(str[i]=='b')\n            count[1]++;\n        if(str[i]=='l')\n            count[2]++;\n        if(str[i]=='s')\n            count[3]++;\n        if(str[i]=='r')\n            count[4]++;\n        if(str[i]=='a')\n            count[5]++;\n        if(str[i]=='u')\n            count[6]++;\n    }\n    count[6]=count[6]/2;\n    count[5]=count[5]/2;\n    for (i = 0; i < 7; i++)\n    {\n        for (j = i + 1; j < 7; ++j)\n        {\n            if (count[i] < count[j])\n            {\n                a =  count[i];\n                count[i] = count[j];\n                count[j] = a;\n            }\n        }\n    }\n    printf(\"\\n%d\",count[6]);\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.9452449567723343, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "805e32a07832c8fca55ecc492cc2a26f", "bug_code_uid": "5e811c9e9d8a43f7409c212d5fa432c7", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "30e22c7a880824101e985bb6ccab3c77", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\nlong int n,x,i,k;\nscanf(\"%ld\",&n);k=n;\n//t=(long int*)malloc(n*sizeof(long int));\nlong int t[n];\nfor(i=0;i<n;i++){\n\tscanf(\"%ld\",&x);\n\tif(x==k) {printf(\"%d\",k);\n\t\t\t\tk--;\n\t\t\t\twhile(t[k]==1)\n\t\t\t\t {printf(\" %d\",k);k--;\n\t\t\t\t }\n\t}else {printf(\"\\n\");\n\t\t\tt[x]=1;\n\t}\n}\n\t\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\nlong int n,x,i,k;\nscanf(\"%ld\",&n);k=n;\n//t=(long int*)malloc(n*sizeof(long int));\nlong int t[n];\nfor(i=0;i<n;i++) t[i]=0;\nfor(i=0;i<n;i++){\n\tscanf(\"%ld\",&x);\n\tif(x==k) {printf(\"%d\",k);\n\t\t\t\tk--;\n\t\t\t\twhile(t[k]==1)\n\t\t\t\t {printf(\" %d\",k);k--;\n\t\t\t\t }printf(\"\\n\");\n\t}else {printf(\"\\n\");\n\t\t\tt[x]=1;\n\t}\n}\n\t\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.8993506493506493, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3c657c7d7aae16fca42e6b1e92f529ff", "bug_code_uid": "0bc9384570fc507734f2bc4ad63a6f13", "src_uid": "a5d56056fd66713128616bc7c2de8b22", "apr_id": "ba2dca28d69d6ab70869d8d5cac45811", "difficulty": 1200, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid sort(int *a,int size)\n{\n    int temp,i,j;\n    for(i=0; i<size; i++)\n        for(j=0; j<(size-i-1); j++)\n            if(a[j]>a[j+1])\n            {\n                temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n            }\n}\nint main(){\n    int a[100]={0},n,i,sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        {scanf(\"%d\",&a[i]);\n        sum+=a[i];}\n    sort(a,n);\n    for(i=0;;i++)\n        {sum-=a[i];\n            if(sum%2){printf(\"%d\",sum);return 0;}\n            else if(i+1==n){printf(\"0\");return 0;}\n            else sum+=a[i];\n        }\n\n\n}\n", "fixed": "#include<stdio.h>\nvoid sort(int *a,int size)\n{\n    int temp,i,j;\n    for(i=0; i<size; i++)\n        for(j=0; j<(size-i-1); j++)\n            if(a[j]>a[j+1])\n            {\n                temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n            }\n}\nint main(){\n    int a[100]={0},n,i,sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        {scanf(\"%d\",&a[i]);\n        sum+=a[i];}\n    sort(a,n);\n    for(i=0;!(sum%2);i++)\n        {sum-=a[i];\n            if(sum%2){printf(\"%d\",sum);return 0;}\n            else if(i+1==n){printf(\"0\");return 0;}\n            else sum+=a[i];\n        }\n\n    printf(\"%d\",sum);return 0;\n}\n"}
{"similarity_score": 0.4766734279918864, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "464e4b4bd8dcbcffeec3eceba2e9183f", "bug_code_uid": "7ca98355d55cdf9f819f29cfc360cb0c", "src_uid": "5fcc22cdc38693723d8a9577d685db12", "apr_id": "383276c99262d0d430071d12eaffd038", "difficulty": 1000, "tags": [], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint i,n,temp=-1,pos=-1,next=-1;\n\tscanf(\"%d\",&n);\n\t\n\tchar str[n+1];\n\tint d[n];\n\t\n\tscanf(\"%s\",str);\n\tfor(i=0;i<n;i++) scanf(\"%d\",&d[i]);\n\ti = 0;\n\t\n\twhile(1) {\n\t\ttemp = i;\n\t\t\n\t\tif(str[i]=='>') pos = i+d[i];\n\t\telse pos = i-d[i];\n\t\t\n\t\tif(pos>=n || pos<0) {\n\t\t\tprintf(\"FINITE\");\n\t\t\treturn 0;\n\t\t}\n//\t\tprintf(\"i=%d temp=%d pos=%d next=%d\\n\",i,temp,pos,next);\n\t\t\n\t\ti = pos;\n\t\tif(str[pos]=='>') next = pos + d[pos];\n\t\telse next = pos - d[pos];\n\t\t\n\t\tif(temp==next) {\n\t\t\tprintf(\"INFINITE\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint i,n,pos;\n\tscanf(\"%d\",&n);\n\t\n\tchar str[n+1];\n\tint d[n],visit[n];\n\t\n\tscanf(\"%s\",str);\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%d\",&d[i]);\n\t\tvisit[i]=0;\n\t}\n\ti=0;\n\t\n\twhile(1) {\n\t\tif(visit[i]==1) {\n\t\t\tprintf(\"INFINITE\");\n\t\t\treturn 0;\n\t\t}\n\t\tvisit[i]++;\n\t\t\n\t\tif(str[i]=='>') pos = i+d[i];\n\t\telse pos = i-d[i];\n\t\t\n\t\tif(pos<0 || pos>n-1) {\n\t\t\tprintf(\"FINITE\");\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\ti=pos;\n\t}\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.8980392156862745, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "040eb1d255b75c1fbd38798efd1684a1", "bug_code_uid": "81fac969c4bf5b168254a3e98058cbc0", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "0a2e210519bafb11413ce98d70d32348", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n\nint n,m,i;\n\nvoid tribulle(int T[], int N)\n{\nint i,j,temp;\n\nfor(i=n-1; i>0 ; i--)\nfor(j=1;j<=i;j++)\n{\nif(T[j-1]>T[j])\n{\ntemp=T[j-1];\nT[j-1]=T[j];\nT[j]=temp;\n}\n}\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    int tab[n];\n    scanf(\"%d\",&m);\n\n      for( i=0;i<n;i++)\n      {\n          scanf(\"%d\",&tab[i]);\n      }\n\ntribulle( tab, n);\n\n\n          int res=0;\nfor(i=0;i<m;i++)\n{\n    res=res+tab[i];\n}\n\nif(res<0)\n{\n   printf(\"%d  \",res*-1);\n}\nelse printf(\"%d  \",res);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <conio.h>\n\nint n,m,i;\n\nvoid tribulle(int T[], int N)\n{\nint i,j,temp;\n\nfor(i=n-1; i>0 ; i--)\nfor(j=1;j<=i;j++)\n{\nif(T[j-1]>T[j])\n{\ntemp=T[j-1];\nT[j-1]=T[j];\nT[j]=temp;\n}\n}\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    int tab[n];\n    scanf(\"%d\",&m);\n\n      for( i=0;i<n;i++)\n      {\n          scanf(\"%d\",&tab[i]);\n      }\n\ntribulle( tab, n);\n\n\n          int res=0;\nfor(i=0;i<m;i++)\n{\n    if(tab[i]<=0)\n    {\n         res=res+tab[i];\n    }\n\n}\n\n\n   printf(\"%d  \",res*-1);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9818181818181818, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "702d66a726f806ca346d1c9aedf3593b", "bug_code_uid": "fcc410c1c08da867857c030496ca987e", "src_uid": "d15a758cfdd7a627822fe8be7db4f60b", "apr_id": "91ff4ff7227d6e07d5a8ec468e5ceac9", "difficulty": 1600, "tags": ["constructive algorithms", "number theory", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n;\n\tscanf(\"%lld\", &n);\n\tlong long int i;\n\tlong long int a[100005];\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%lld\", &a[i]);\n\tif (n == 1)\n\t{\n\t\tprintf(\"1 1\\n\");\n\t\tprintf(\"%lld\\n\", -1 * a[0]);\n\t\tprintf(\"1 1\\n\");\n\t\tprintf(\"0\\n\");\n\t\tprintf(\"1 1\\n\");\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"1 %lld\\n\", n - 1);\n\tfor (i = 0; i < n - 2; i++)\n\t{\n\t\tprintf(\"%lld \", a[i] * (n - 1));\n\t\ta[i] += a[i] * (n - 1);\n\t}\n\tprintf(\"%lld\\n\", a[n - 2] * (n - 1));\n\ta[n - 2] += a[n - 2] * (n - 1);\n\tprintf(\"%lld %lld\\n\", n, n);\n\tprintf(\"%lld\\n\", -1 * a[i]);\n\ta[i] = 0;\n\tprintf(\"1 %lld\\n\", n);\n\tfor (i = 0; i < n - 1; i++)\n\t\tprintf(\"%lld \", -1 * a[i]);\n\tprintf(\"%lld\\n\", -1 * a[n - 1]);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n;\n\tscanf(\"%lld\", &n);\n\tlong long int i;\n\tlong long int a[100005];\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%lld\", &a[i]);\n\tif (n == 1)\n\t{\n\t\tprintf(\"1 1\\n\");\n\t\tprintf(\"%lld\\n\", -1 * a[0]);\n\t\tprintf(\"1 1\\n\");\n\t\tprintf(\"0\\n\");\n\t\tprintf(\"1 1\\n\");\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"1 %lld\\n\", n - 1);\n\tfor (i = 0; i < n - 2; i++)\n\t{\n\t\tprintf(\"%lld \", a[i] * (n - 1));\n\t\ta[i] += a[i] * (n - 1);\n\t}\n\tprintf(\"%lld\\n\", a[n - 2] * (n - 1));\n\ta[n - 2] += a[n - 2] * (n - 1);\n\tprintf(\"%lld %lld\\n\", n, n);\n\tprintf(\"%lld\\n\", -1 * a[n - 1]);\n\ta[n - 1] = 0;\n\tprintf(\"1 %lld\\n\", n);\n\tfor (i = 0; i < n - 1; i++)\n\t\tprintf(\"%lld \", -1 * a[i]);\n\tprintf(\"%lld\\n\", -1 * a[n - 1]);\n\treturn 0;\n}"}
{"similarity_score": 0.997080291970803, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6c6c289f535cd1dfd1a0390afcb07b8e", "bug_code_uid": "99693028b858ed13a27af450966975d6", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "13b6dec3671fb6a41fb8359c2d2903aa", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint min(int a, int b){\n    if(a < b)\n        return a;\n    else\n        return b;\n}\n\nint main()\n{\n    int n, i, p = 0, q = 0, r = 0, w;\n    scanf(\"%d\", &n);\n    int str[n], arr1[n], arr2[n], arr3[n];\n\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &str[i]);\n        if(str[i] == 1){\n            arr1[p] = i + 1;\n            p++;\n        }\n        else if(str[i] == 2){\n            arr2[q] = i + 1;\n            q++;\n        }\n        else if(str[i] == 3){\n            arr3[r] = i + 1;\n            r++;\n        }\n    }\n\n    int w = min(p, min(q, r));\n    printf(\"%d\\n\", w);\n\n    for(i=0; i<w; i++)\n        printf(\"%d %d %d\\n\", arr1[i], arr2[i], arr3[i]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint min(int a, int b){\n    if(a < b)\n        return a;\n    else\n        return b;\n}\n\nint main()\n{\n    int n, i, p = 0, q = 0, r = 0, w;\n    scanf(\"%d\", &n);\n    int str[n], arr1[n], arr2[n], arr3[n];\n\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &str[i]);\n        if(str[i] == 1){\n            arr1[p] = i + 1;\n            p++;\n        }\n        else if(str[i] == 2){\n            arr2[q] = i + 1;\n            q++;\n        }\n        else if(str[i] == 3){\n            arr3[r] = i + 1;\n            r++;\n        }\n    }\n\n    w = min(p, min(q, r));\n    printf(\"%d\\n\", w);\n\n    for(i=0; i<w; i++)\n        printf(\"%d %d %d\\n\", arr1[i], arr2[i], arr3[i]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8747203579418344, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d55d4550b55e05a735a499d15fd9b0b4", "bug_code_uid": "0dfeb4c21c4435376e049aaae245d0d2", "src_uid": "3efc451a0fd5b67d58812eff774b3c6a", "apr_id": "8edd5c092e7271c41106303b38adb0f7", "difficulty": 1600, "tags": ["dp", "constructive algorithms", "bitmasks", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int arr[555][555]={},brr[555]={},crr[555]={},drr[555]={},n,m,i,j,k=0,l=1;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            scanf(\"%d\",&arr[i][j]);\n            if(j==0){\n                brr[i]=arr[i][j];\n                k^=arr[i][j];\n                crr[i]=1;\n            }\n            if(arr[i][j]>0)\n                drr[i]++;\n            if(j=m-1 && drr[i]==0)\n                l=0;\n        }\n    }\n    if(l==1){\n    for(i=0;i<n;i++){\n        for(j=1;j<m;j++){\n            if(k!=0)\n                break;\n                if(arr[i][j]!=brr[i]){\n                    brr[i]=arr[i][j];\n                    crr[i]=j+1;\n                    k^=brr[i];\n                }\n        }\n        if(k!=0)\n            break;\n    }\n    }\n    if(k==0 || l==0)\n        printf(\"NIE\");\n    else{\n        printf(\"TAK\\n\");\n        for(i=0;i<n;i++)\n            printf(\"%d \",crr[i]);\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int arr[555][555]={},brr[555]={},crr[555]={},n,m,i,j,k=0,l=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            scanf(\"%d\",&arr[i][j]);\n            if(j==0){\n                brr[i]=arr[i][j];\n                k^=arr[i][j];\n                crr[i]=1;\n            }\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=1;j<m;j++){\n            if(k!=0)\n                break;\n                if(arr[i][j]!=brr[i]){\n                        l=brr[i];\n                    brr[i]=arr[i][j];\n                    crr[i]=j+1;\n                    k^=brr[i];\n                k^=l;\n                }\n        }\n        if(k!=0)\n            break;\n    }\n    if(k==0)\n        printf(\"NIE\\n\");\n    else{\n        printf(\"TAK\\n\");\n        for(i=0;i<n;i++)\n            printf(\"%d \",crr[i]);\n    }\n\n}\n"}
{"similarity_score": 0.9975389663658737, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a271e1a2dd8eac320b6cb44d754dd35a", "bug_code_uid": "efb2c82ade8bfd5b81ce5c77f2fde202", "src_uid": "26354d2628f26eb2eff9432bd46400d5", "apr_id": "f3172aea14cf826f8deb416820bc66d3", "difficulty": 800, "tags": ["combinatorics", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main(){\n\tint i,n,k1,k2,w,b,t;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++){\n\tscanf(\"%d%d%d%d%d\",&n,&k1,&k2,&w,&b);\n\tif((k1+k2)<(2*w) || (2*n-k1-k2)<(2*b)){printf(\"NO\\n\");continue;}\n\t  if(w==0||b==0){\n\t  \tif(w==0&&b==0){printf(\"YES\\n\");continue;}\n\t  \telse if(b==0){\n\t  \t\tif((k1+k2)%(2*w)>-1){printf(\"YES\\n\");continue;}\n\t  \t\telse{printf(\"NO\\n\");continue;}}\n\t  \telse if(w==0){\n\t  \t\tif((2*n-k1-k2)%(2*b)){printf(\"YES\\n\");continue;}\n\t  \t\telse{printf(\"NO\\n\");continue;}}\n\t  \t}\n\t\tif(((k1+k2)%(2*w)>-1) && ((2*n-k1-k2)%(2*b))>-1){\n\t\t\tprintf(\"YES\\n\");continue;}\n\t\telse{printf(\"NO\\n\");continue;}\t\n\t\t\t}\n}", "fixed": "#include <stdio.h>\n \nint main(){\n\tint i,n,k1,k2,w,b,t;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++){\n\tscanf(\"%d%d%d%d%d\",&n,&k1,&k2,&w,&b);\n\tif((k1+k2)<(2*w) || (2*n-k1-k2)<(2*b)){printf(\"NO\\n\");continue;}\n\t  if(w==0||b==0){\n\t  \tif(w==0&&b==0){printf(\"YES\\n\");continue;}\n\t  \telse if(b==0){\n\t  \t\tif((k1+k2)%(2*w)>-1){printf(\"YES\\n\");continue;}\n\t  \t\telse{printf(\"NO\\n\");continue;}}\n\t  \telse if(w==0){\n\t  \t\tif((2*n-k1-k2)%(2*b)>-1){printf(\"YES\\n\");continue;}\n\t  \t\telse{printf(\"NO\\n\");continue;}}\n\t  \t}\n\t\tif(((k1+k2)%(2*w)>-1) && ((2*n-k1-k2)%(2*b))>-1){\n\t\t\tprintf(\"YES\\n\");continue;}\n\t\telse{printf(\"NO\\n\");continue;}\t\n\t\t\t}\n}"}
{"similarity_score": 0.8004246284501062, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7fc8ea717d9f200853c30663d11413e5", "bug_code_uid": "5ec75261494757a8ed6a337f7c6cd0d2", "src_uid": "4fc1ca3517168842cc85d74ba0066598", "apr_id": "e12db698449f20eaf4f2c07c6ad66e16", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/*#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cctype>\n#include<string>\nusing namespace std;\n*/#include<stdio.h>\n\nint main()\n{\n    char s[1001];\n    int n,a[101],i,k=0,diff=0;\n    scanf(\"%d\",&n);\n    scanf(\"%s\",&s);\n    for(i=0;i<n;i++)\n        if(s[i]=='1')\n            a[k++]=i+1;\n    diff=a[1]-a[0];\n    for(i=1;i<k;i++)\n    {\n        if(diff!=a[i]-a[i-1])\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    printf(\"YES\");\n    return 0;    \n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    char s[1001];\n    int n,a[101],i,k=0,diff=0;\n    scanf(\"%d\",&n);\n    scanf(\"%s\",&s);\n    for(i=0;i<n;i++)\n        if(s[i]=='1')\n            a[k++]=i+1;\n    diff=a[1]-a[0];\n    for(i=1;i<k;i++)\n    {\n        if(diff!=a[i]-a[i-1])\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    printf(\"YES\");\n    return 0;    \n}"}
{"similarity_score": 0.9910034602076124, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "edb4c932f72406bee7ff60f5c16a1596", "bug_code_uid": "4d5452379a601f5936fd251e0839af6b", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "c22780531bdc41235bc68b317af52e60", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// first time ques didn't saw properly\n#include<stdio.h>\nchar ar[305][305],c,d;\nint main()\n{\n     int i,n,j,f=0,t=0;\n     scanf(\"%d\",&n);\n     for(i=0;i<n;i++)\n     scanf(\"%s\",&ar[i]);\n     c=ar[0][0];\n     d=ar[0][1];\n     for(i=0;i<n;i++)\n     {\n          if(ar[i][i]!=c||ar[i][n-i-1]!=c)\n          {\n               f=1;\n               break;\n          }\n          for(j=0;j<n;j++)\n          {\n                    if(i==j||i==n-j-1)\n                    continue;\n                    if(ar[i][j]!=d)\n                    {\n                         t=1;\n                         break;\n                    }\n          }\n     }\n     if(f==1||t==1)\n     printf(\"NO\\n\");\n     else\n     printf(\"YES\\n\");\n     return 0;\n}\n", "fixed": "// first time ques didn't saw properly\n#include<stdio.h>\nchar ar[305][305],c,d;\nint main()\n{\n     int i,n,j,f=0,t=0;\n     scanf(\"%d\",&n);\n     for(i=0;i<n;i++)\n     scanf(\"%s\",&ar[i]);\n     c=ar[0][0];\n     d=ar[0][1];\n     for(i=0;i<n;i++)\n     {\n          if(ar[i][i]!=c||ar[i][n-i-1]!=c)\n          {\n               f=1;\n               break;\n          }\n          for(j=0;j<n;j++)\n          {\n                    if(i==j||i==n-j-1)\n                    continue;\n                    if(ar[i][j]!=d||ar[i][j]==c)\n                    {\n                         t=1;\n                         break;\n                    }\n          }\n     }\n     if(f==1||t==1)\n     printf(\"NO\\n\");\n     else\n     printf(\"YES\\n\");\n     return 0;\n}\n"}
{"similarity_score": 0.9474768280123584, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "cf098df9faeb93d331d37fa838bb4cfe", "bug_code_uid": "a1349bd5c8936a700b4aab439c5512e0", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "4bcc91a21db052fa9961037f1d36143b", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, x;\n    scanf(\"%d %d\", &n, &x);\n    int icecreams, stress = 0;\n    char sign;\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\" %c %d\", &sign, &icecreams);\n        if(sign == '+')\n        {\n\n            x += icecreams;\n        }\n        else\n        {\n            if(icecreams > x) stress++;\n            else\n            {\n                x -= icecreams;\n            }\n        }\n    }\n    printf(\"%d %d\", x, stress);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    long long int x;\n    scanf(\"%d %lld\", &n, &x);\n    long long int icecreams;\n    int stress = 0;\n    char sign;\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\" %c %lld\", &sign, &icecreams);\n        if(sign == '+')\n        {\n\n            x += icecreams;\n        }\n        else\n        {\n            if(icecreams > x) stress += 1;\n            else\n            {\n                x -= icecreams;\n            }\n        }\n    }\n    printf(\"%lld %d\", x, stress);\n}\n"}
{"similarity_score": 0.9497655726724715, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5d11c104532c061c06249f85092f0c42", "bug_code_uid": "1417be898447c6bef04768e6a671e142", "src_uid": "7c2337c1575b4a62e062fc9990c0b098", "apr_id": "f3b6275cf1755e2acb56f03041a0230e", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint sort(int *n, int num){\n\tfor(int i = num -1; i > 1; i--){\n\t\tfor(int j = 0; j < i; j++){\n\t\t\tif(n[j] > n[j + 1]){\n\t\t\t\tint temp = n[j];\n\t\t\t\tn[j] = n[j + 1];\n\t\t\t\tn[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint test, n, m;\n\tint arr[1005], brr[1005];\n\t\n\tscanf(\"%d\", &test);\n\t\n\tfor(int i = 0; i < test; i++){\n\t\tint sum = 0;\n\t\tscanf(\"%d %d\", &n, &m);\n\t\tfor(int j = 0; j < n; j++){\n\t\t\tscanf(\"%d\", &arr[j]);\n\t\t}\n\t\tfor(int j = 0; j < n; j++){\n\t\t\tscanf(\"%d\", &brr[j]);\n\t\t}\n\n\t\tsort(arr, n);\n\t\tsort(brr, n);\n\t\tint slot = m;\n\t\tfor(int j = 0, k = n - 1; j < n; j++, k--){\n\t\t\tif(brr[k] > arr[j] && slot > 0){\n\t\t\t\tint temp = brr[k];\n\t\t\t\tbrr[k] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t\t--slot;\t\n\t\t\t}\n\t\t\tsum += arr[j];\n\t\t}\n\t\tprintf(\"%d\\n\", sum);\n\t}\n}", "fixed": "#include<stdio.h>\n\nint sort(int *n, int num){\n\tfor(int i = num; i > 1; i--){\n\t\tfor(int j = 1; j < i; j++){\n\t\t\tif(n[j] < n[j - 1]){\n\t\t\t\tint temp = n[j];\n\t\t\t\tn[j] = n[j - 1];\n\t\t\t\tn[j - 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint test, n, m;\n\tint arr[1005], brr[1005];\n\t\n\tscanf(\"%d\", &test);\n\t\n\tfor(int i = 0; i < test; i++){\n\t\tint sum = 0;\n\t\tscanf(\"%d %d\", &n, &m);\n\t\tfor(int j = 0; j < n; j++){\n\t\t\tscanf(\"%d\", &arr[j]);\n\t\t}\n\t\tfor(int j = 0; j < n; j++){\n\t\t\tscanf(\"%d\", &brr[j]);\n\t\t}\n\n\t\tsort(arr, n);\n\t\tsort(brr, n);\n\t\tint slot = m;\n\t\t\n\t\tfor(int j = 0, k = n - 1; j < n; j++, k--){\n\t\t\tif(brr[k] > arr[j] && slot != 0){\n\t\t\t\tint temp = brr[k];\n\t\t\t\tbrr[k] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t\t--slot;\t\n\t\t\t}\n\t\t\tsum += arr[j];\n\t\t}\n\t\tprintf(\"%d\\n\", sum);\n\t}\n}"}
{"similarity_score": 0.9957627118644068, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "34373281969ddbf4ab0ca34b424b6475", "bug_code_uid": "7a7079eab9c907f13fb68ca07b09280b", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "f12e0d153f34aa37487d263a73014f7d", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint CalcSum(int x[],int index);\nint main()\n{int i,j,temp,num,value[100],coin=0,total=0;\n\n\nscanf(\"%d\",&num);\nfor(i=0;i<num;i++)\n{\n    scanf(\"%d\",&value[i]);\n}\nint sum= CalcSum(value,num);\n\nfor(i=0;i<num;i++){\n      for(j=i+1;j<num;j++){\n           if(value[i]>value[j]){\n               temp=value[i];\n              value[i]=value[j];\n              value[j]=temp;\n           }\n      }\n  }\n  i=0;\n\n  for(i=0;i<num;i++)\n  {if(total=<sum)\n  {\n      total+=value[i];\n      sum-=value[i];\n      coin++;\n  }\n\n  }\nprintf(\"%d\",coin);\n\n\n\n    return 0;\n}\n\n\nint CalcSum(int x[],int index)\n{int sum=0,i;\n\n    for (i=0;i<index;i++)\n    {\n        sum=sum+x[i];\n    }\n    return sum;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint CalcSum(int x[],int index);\nint main()\n{int i,j,temp,num,value[100],coin=0,total=0;\n\n\nscanf(\"%d\",&num);\nfor(i=0;i<num;i++)\n{\n    scanf(\"%d\",&value[i]);\n}\nint sum= CalcSum(value,num);\n\nfor(i=0;i<num;i++){\n      for(j=i+1;j<num;j++){\n           if(value[i]<value[j]){\n               temp=value[i];\n              value[i]=value[j];\n              value[j]=temp;\n           }\n      }\n  }\n  i=0;\n\n  for(i=0;i<num;i++)\n  {if(total<=sum)\n  {\n      total+=value[i];\n      sum-=value[i];\n      coin++;\n  }\n\n  }\nprintf(\"%d\",coin);\n\n\n\n    return 0;\n}\n\n\nint CalcSum(int x[],int index)\n{int sum=0,i;\n\n    for (i=0;i<index;i++)\n    {\n        sum=sum+x[i];\n    }\n    return sum;\n}\n"}
{"similarity_score": 0.7308488612836439, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "23dc5e78ae4607a0f1f1302a2813416c", "bug_code_uid": "c99119f2faec9ff9e9860fef400b0a92", "src_uid": "c783eaf1bf7e4e7321406431030d5aab", "apr_id": "d77d86895ad1dbdd8c6e30b4a8c8eb7b", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint l1,l2,r1,r2;\r\n\t\tscanf(\"%d\",&l1);\r\n\t\tscanf(\"%d\",&r1);\r\n\t\tscanf(\"%d\",&l2);\r\n\t\tscanf(\"%d\",&r2);\r\n\t\tif(l1<l2)\r\n\t\t{\r\n\t\t\tfor(int i=l1;i<=r1;i++)\r\n\t\t\t{\r\n\t\t\t\tif(i>=l2&&i<=r2)\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn (l1+l2);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(int i=l2;i<=r2;i++)\r\n\t\t\t{\r\n\t\t\t\tif(i>=l1&&i<=r1)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn (l1+l2);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint l1,l2,r1,r2;\r\n\t\tscanf(\"%d \",&l1);\r\n\t\tscanf(\"%d \",&r1);\r\n\t\tscanf(\"%d \",&l2);\r\n\t\tscanf(\"%d \",&r2);\r\n\t\tint res=0;\r\n\t\tif(l1<l2)\r\n\t\t{\r\n\t\t\tfor(int i=l1;i<=r1;i++)\r\n\t\t\t{\r\n\t\t\t\tif(i>=l2&&i<=r2)\r\n\t\t\t\t{\r\n\t\t\t\t\tres=i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(int i=l2;i<=r2;i++)\r\n\t\t\t{\r\n\t\t\t\tif(i>=l1&&i<=r1)\r\n\t\t\t\t{\r\n\t\t\t\t\tres=i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(res==0)\r\n\t\tres=l1+l2;\r\n\t\tprintf(\"%d\\n\",res);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.6220472440944882, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "fec18fa7fef1a8a0751dc1d63944a9bf", "bug_code_uid": "b2ed0f85a36a493d0262f6ed0871e48f", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "8ca1b2233e58d44437ee87a5b2f5d384", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,i=0;\n    long long n;\n    scanf(\"%d\",&t);\n    while(i<t)\n    {\n        scanf(\"%lld\",&n);\n        printf(\"%lld%lld\\n\",-(n-1),n);\n        i++;\n    }   \n    return 0;\n}\n \t  \t\t\t \t  \t  \t \t\t \t\t  \t\t\t\t \t\t", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,l,r,t;\n    scanf(\"%lld\",&n);\n    while(n--)\n    {\n        scanf(\"%lld\",&t);\n        r  = t;\n        l = 1-r;\n        printf(\"%lld %lld\\n\",l,r);\n       }\n\n    return 0;\n}\n\t \t    \t  \t     \t \t\t\t\t  \t  \t  \t"}
{"similarity_score": 0.8322981366459627, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "685aff52a37641c8f73e8be3592ca566", "bug_code_uid": "47c6a8919aadc6e4f0e9b105aeb9dc7c", "src_uid": "b34f29e6fb586c22fa1b9e559c5a6c50", "apr_id": "2945b10fb108ec98396334601066ef29", "difficulty": 900, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint a,b,N,c,i,j,n,m[100000];\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tN=0;\n\t\tscanf(\"%d\",&a);\n\t\tfor(i=0;i<a;i++)\n\t\t    scanf(\"%d\",&m[i]);\n\t   c=0;\n\t    for(i=1;i<a;i++){\n\t    \tif(m[i]>m[i-1]){\n\t    \t\tc=1;\n\t    \t\tbreak;\n\t\t\t}\n\t\t} \n\t\t\n\t\tif(c)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n} ", "fixed": "#include<stdio.h>\n \nint main()\n{\n    int a,b,N,c,i,j,n,m[100000];\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tN=0;\n\t\tscanf(\"%d\",&a);\n\t\tfor(i=0;i<a;i++)\n\t\t    scanf(\"%d\",&m[i]);\n\t\t\n\t\tfor(i=1;i<a;i++){\n\t\t\tif(m[i]>=m[i-1]){\n\t\t\t\tN=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(N==1)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n} "}
{"similarity_score": 0.9953917050691244, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c9ff0f86bdd593540b78fd6f02cff953", "bug_code_uid": "52633f8bfb621b1c82d03f819ea368be", "src_uid": "7d6f76e24fe9a352beea820ab56f03b6", "apr_id": "8fb0189bed1776b8975f9770b79b6afb", "difficulty": 1200, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     long long  int n,k ,t,l;\n     scanf(\"%d\",&t);\n      while(t--)\n      {\n            scanf(\"%lld%lld\",&n,&k);\n            l=(k-1)/(n-1 );\n            printf(\"%lld\\n\",k+l);\n      }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     long long  int n,k ,t,l;\n     scanf(\"%lld\",&t);\n      while(t--)\n      {\n            scanf(\"%lld%lld\",&n,&k);\n            l=(k-1)/(n-1 );\n            printf(\"%lld\\n\",k+l);\n      }\n}\n"}
{"similarity_score": 0.7476979742173112, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "bd2328b3d6b754fdd8a773ccc2037954", "bug_code_uid": "36c7fbc43474532f35ffcf783c61835c", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "ce405208b8e0d9f639554dc374b36bbb", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\nint orangesnumber,maxsize,wastesection,array[100000],array2[100000],i,vaildorang=0,counter=0;\nlong long int sum=0;\nscanf(\"%d %d %d\",&orangesnumber,&maxsize,&wastesection);\nfor(i=0;i<orangesnumber;++i){\n    scanf(\"%d\",&array[i]);\n}\nfor(i=0;i<orangesnumber;++i){\n    if(array[i]>maxsize){\n        array[i]=0;\n        break;\n    }\n    else{\n        array2[i]=array[i];\n        vaildorang++;\n    }\n}\nfor(i=0;i<vaildorang;++i){\n    sum=sum+array2[i];\n    if(sum>wastesection){\n        counter++\n        sum=sum-wastesection;\n    }\n}\nprintf(\"%d\",counter);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\nint orangesnumber,maxsize,wastesection,array[100000],i,counter=0;\nlong long int sum=0;\nscanf(\"%d %d %d\",&orangesnumber,&maxsize,&wastesection);\nfor(i=0;i<orangesnumber;++i){\n    scanf(\"%d\",&array[i]);\n}\nfor(i=0;i<orangesnumber;++i){\n    if(array[i]<=maxsize){\n        sum=sum+array[i];\n        if(sum>wastesection){\n            counter++;\n            sum=0;\n        }\n    }\n}\nprintf(\"%d\",counter);\n\n    return 0;\n}\n"}
{"similarity_score": 0.6368715083798883, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "fd64502456fb1365c1cdc4f6f5fa5e1f", "bug_code_uid": "de99bd2ce67e9130b2fdddc81009febc", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "c7d7c65e41e98f0c779452c73e9bca3c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,e=0;\n    int f[100000];\n    scanf(\"%d\",&a);\n    for(b=0;b<a;b++)\n    {\n        scanf(\"%d\",&f[b]);\n        c=f[0];\n        if(c!=f[b])\n            printf(\"%d\",e);\n        e++;\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,e=1;\n    int f[100000];\n    scanf(\"%d\",&a);\n    for(b=0;b<a;b++)\n    {\n        scanf(\"%d\",&f[b]);\n\n    }\n    for(b=0;b<a-1;b++)\n    {\n        c=f[0];\n        if(f[b]!=f[b+1])\n        {\n            e++;\n            c=f[b];\n        }\n    }\n    printf(\"%d\",e);\n}\n"}
{"similarity_score": 0.7019230769230769, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "af56198f03c57fae031858134fd20d06", "bug_code_uid": "f4682af76fd6e3a10aa91f414ce33a5f", "src_uid": "1b13c9d9fa0c5a44d035bcf6d70e1a60", "apr_id": "28e802ad9a40289c8128eea3eb17b99c", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint i;\n\tfor(i=0;i<t;i++)\n\t{\n\t\tlong long int x1,x2,y1,y2;\n\t\tscanf(\"%lld %lld  %lld %lld\",&x1,&y1,&x2,&y2);\n\t\tlong long int d,r,s;\n\t\tlong double ans=1;\n\t\td=y2-y1;\n\t\tr=x2-x1;\n\t\tif(d<0 || r<0)\n\t\t\tprintf(\"0\\n\");\n\t\telse if(d==0 || r==0)\n\t\t\tprintf(\"1\\n\");\n\t\telse\n\t\t{\n\t\t\ts=d+r;\n\t\t\twhile(s>0)\n\t\t\t{\n\t\t\t\tif(d>0)\n\t\t\t\t{\n\t\t\t\t\tans=s*(ans/d);\n\t\t\t\t\td--;\n\t\t\t\t\ts--;\n\t\t\t\t}\n\t\t\t\telse if(r>0)\n\t\t\t\t{\n\t\t\t\t\tans=s*(ans/r);\n\t\t\t\t\tr--;\n\t\t\t\t\ts--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%.0Lf\\n\",ans);\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint i;\n\tfor(i=0;i<t;i++)\n\t{\n\t\tlong long int x1,x2,y1,y2;\n\t\tscanf(\"%lld %lld  %lld %lld\",&x1,&y1,&x2,&y2);\n\t\tlong long int d,r,s;\n\t\tlong double ans=1;\n\t\td=y2-y1;\n\t\tr=x2-x1;\n\t\tif(d==0 || r==0)\n\t\t\tprintf(\"1\\n\");\n\t\telse\n\t\t{\n\t\t\tprintf(\"%lld\\n\",d*r+1);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.79375, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1a4fb23c8b42b1873ae13ff86600c577", "bug_code_uid": "549551b5cfdd71ff38b230720363cf95", "src_uid": "1c597da89880e87ffe791dd6b9fb2ac7", "apr_id": "40633d7703a983a00e88d10450c05f7f", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n\r\nint diff(int arr[], int n) {\r\n    for (int i=1; i<n ; i++) {\r\n        if (arr[i]%arr[0] != 0) return 0;\r\n    }\r\n    return 1;\r\n} \r\n\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n\r\n    int * arr = (int *) malloc(n * sizeof(int));\r\n\r\n    for (int i=0; i<n ; i++) scanf(\"%d\", arr+i);\r\n    \r\n    if (diff(arr) == 1) printf(\"YES\");\r\n    else printf(\"NO\");\r\n    \r\n    \r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n\r\nint diff(int arr[], int n) {\r\n    for (int i=1; i<n ; i++) {\r\n        if (arr[i]%arr[0] != 0) return 0;\r\n    }\r\n    return 1;\r\n} \r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i=0; i<t;  i++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int * arr = (int *) malloc(n * sizeof(int));\r\n\r\n        for (int i=0; i<n ; i++) scanf(\"%d\", arr+i);\r\n        \r\n        if (diff(arr, n) == 1) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");  \r\n    }  \r\n}"}
{"similarity_score": 0.9408050513022889, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fdf42958d7891267ef0699afb823f185", "bug_code_uid": "7f554b0c15b4fa8c0cbe2d86da8ad18c", "src_uid": "3ccc98190189b0c8e58a96dd5ad1245d", "apr_id": "5f74b39f431946fc36d23d804d20f3b4", "difficulty": 1100, "tags": ["implementation", "greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n\tint testcase,matrix[50][50];\n\tscanf(\"%d\",&testcase);\n\twhile(testcase--){\n\t\tint row,col;\n\t\tscanf(\"%d%d\",&row,&col);\n\t\tint r[row],c[col];\n\t\tfor (int i=0;i<row;i++){\n\t\t\tfor(int j=0;j<col;j++){\n\t\t\t\tscanf(\"%d\",&matrix[i][j]);\n\t\t\t\tif (matrix[i][j])\n\t\t\t\t\tr[i]=c[j]=1;\n\t\t\t}\n\t\t\n\t\t}\n\t\tint r_count=0,c_count=0;\n\t\tfor(int i=0;i<row;i++)\n\t\t\tr_count+=r[i];\t\t\n\t\tfor(int i=0;i<col;i++)\n\t\t\tc_count+=c[i];\n\t\tint player=0;\n\t\tif (row-r_count>col-c_count)\n\t\t\tplayer=col-c_count;\n\t\telse\n\t\t\tplayer=row-r_count;\n\t\tif(player%2)\n\t\t\tprintf(\"Ashish\\n\");\n\t\telse\n\t\t\tprintf(\"Vivek\\n\");\n\n\t}\n\t\n}\n", "fixed": "#include<stdio.h>\nvoid main()\n{\n\tint testcase,matrix[50][50];\n\tscanf(\"%d\",&testcase);\n\twhile(testcase--){\n\t\tint row,col;\n\t\tscanf(\"%d%d\",&row,&col);\n\t\tint r[row],c[col];\n\t\tfor (int i=0;i<row;i++)\n\t\t\tr[i]=0;\n\t\tfor (int i=0;i<col;i++)\n\t\t\tc[i]=0;\n\t\tfor (int i=0;i<row;i++){\n\t\t\tfor(int j=0;j<col;j++){\n\t\t\t\tscanf(\"%d\",&matrix[i][j]);\n\t\t\t\tif (matrix[i][j])\n\t\t\t\t\tr[i]=c[j]=1;\n\t\t\t}\n\t\t\n\t\t}\n\t\tint r_count=0,c_count=0;\n\t\tfor(int i=0;i<row;i++)\n\t\t\tr_count+=r[i];\t\t\n\t\tfor(int i=0;i<col;i++)\n\t\t\tc_count+=c[i];\n\t\tint player=0;\n\t\tif (row-r_count>col-c_count)\n\t\t\tplayer=col-c_count;\n\t\telse\n\t\t\tplayer=row-r_count;\n\t\tif(player%2)\n\t\t\tprintf(\"Ashish\\n\");\n\t\telse\n\t\t\tprintf(\"Vivek\\n\");\n\n\t}\n\t\n}\n"}
{"similarity_score": 0.8746355685131195, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "d8beedeed1f12788473f713e2e469a01", "bug_code_uid": "c4c0a7290f056fb30e56aa7669be1c8b", "src_uid": "d8c4c2d118e07c3b148495fc04d8fcb5", "apr_id": "1ff7e3ba13305047a7d4e2b5401216f4", "difficulty": 1400, "tags": ["games", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nn;\nmain(){\n    FILE *IN=fopen(\"input.txt\",\"r\"),*OUT=fopen(\"output.txt\",\"w\");\n    for(;~fscanf(IN,\"%*d%d\"+!!n*3,&n);fprintf(OUT,\"%d\\n\",~n&1));\n}\n", "fixed": "#include<stdio.h>\nmain(n){\n    FILE *IN=fopen(\"input.txt\",\"r\"),*OUT=fopen(\"output.txt\",\"w\");\n    for(fscanf(IN,\"%*d\");~fscanf(IN,\"%d\",&n);fprintf(OUT,\"%d\\n\",~n&1));\n    return 0;\n}\n"}
{"similarity_score": 0.9990867579908675, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cbdfb386ff970241561faabcf955d3eb", "bug_code_uid": "e56d26faba04f657bb03491cb585583c", "src_uid": "7b6a3de5ad0975e4c43f097d4648c9c9", "apr_id": "85a5d6c3bdc3bb17f49da01020dc6588", "difficulty": 1000, "tags": ["implementation", "two pointers"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint a[20000];\r\nint main()\r\n{\r\n\tint t;\r\n\tint i;\r\n\tint n;\r\n\tint j;\r\n\tint flag=0;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tflag=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t}\r\n\t\tif(n<3)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor(j=0;j<n-1;j++)\r\n\t\t{\r\n\t\t\tif(flag==1)\r\n\t\t\t{\r\n\t\t\t\tif(a[j]>a[j+1])\r\n\t\t\t\t{\r\n\t\t\t\t\tflag=2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(a[j]<a[j+1])\r\n\t\t\t{\r\n\t\t\t\tflag=1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag==2)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint a[200000];\r\nint main()\r\n{\r\n\tint t;\r\n\tint i;\r\n\tint n;\r\n\tint j;\r\n\tint flag=0;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tflag=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t}\r\n\t\tif(n<3)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor(j=0;j<n-1;j++)\r\n\t\t{\r\n\t\t\tif(flag==1)\r\n\t\t\t{\r\n\t\t\t\tif(a[j]>a[j+1])\r\n\t\t\t\t{\r\n\t\t\t\t\tflag=2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(a[j]<a[j+1])\r\n\t\t\t{\r\n\t\t\t\tflag=1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag==2)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9871299871299871, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5f844c32ec983ea123ed293f5713c10d", "bug_code_uid": "18d268640a4331b898f150fb8db85e26", "src_uid": "f4804780d9c63167746132c35b2bdd02", "apr_id": "988421ad0063c6572b073077c0b085c7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    long long int x,y,z;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%I64d %I64d %I64d\",&x,&y,&z);\n        if(x==y&&x==z&&y==z){\n        printf(\"YES\\n\");\n        printf(\"%I64d %I64d %I64d\\n\",x,y,z);\n    }\n    else if(x!=y&&x!=z&&y!=z){\n        printf(\"NO\\n\");\n    }\n    else if(x==y&&y>z){\n        printf(\"YES\\n\");\n        printf(\"1 %I64d %I64d\\n\",x,z);\n    }\n    else if(x==y&&y<z){\n        printf(\"NO\\n\");\n    }\n    else if(y==z&&x>y){\n        printf(\"NO\\n\");\n    }\n    else if(y==z&&x<y){\n        printf(\"YES\\n\");\n        printf(\"1 %I64d %I64d\",x,y);\n    }\n    else if(x==z&&x>y){\n        printf(\"YES\\n\");\n        printf(\"1 %I64d %I64d\\n\",x,y);\n    }\n    else if(x==z&&x<y){\n        printf(\"NO\\n\");\n    }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    long long int x,y,z;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%I64d %I64d %I64d\",&x,&y,&z);\n        if(x==y&&x==z){\n        printf(\"YES\\n\");\n        printf(\"%I64d %I64d %I64d\\n\",x,y,z);\n    }\n    else if(x!=y&&x!=z&&y!=z){\n        printf(\"NO\\n\");\n    }\n    else if(x==y&&z<x){\n        printf(\"YES\\n\");\n        printf(\"1 %I64d %I64d\\n\",x,z);\n    }\n    else if(x==y&&z>x){\n        printf(\"NO\\n\");\n    }\n    else if(y==z&&x>y){\n        printf(\"NO\\n\");\n    }\n    else if(y==z&&x<y){\n        printf(\"YES\\n\");\n        printf(\"1 %I64d %I64d\\n\",x,y);\n    }\n    else if(x==z&&x>y){\n        printf(\"YES\\n\");\n        printf(\"1 %I64d %I64d\\n\",x,y);\n    }\n    else if(x==z&&x<y){\n        printf(\"NO\\n\");\n    }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8702851885924563, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "70025939841476f2b0374050e115e051", "bug_code_uid": "36a2d172382521eda284540aa1172e01", "src_uid": "c35d309dd6a9569ec298e7128aa3fc0e", "apr_id": "7a47ebd21384a53ec0e840b21e2d08f0", "difficulty": 1000, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint A[100002];\r\nint main()\r\n{\r\n\tint i;\r\n\tint T;\r\n\tint n;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &A[i]);\r\n\t\t}\r\n\t\tfor (i = 1; i < n - 1; i++)\r\n\t\t{\r\n\t\t\tif (A[i] < A[i - 1] && A[i] < A[i + 1])\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (n < 3)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (i < n - 1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint A[100002];\r\nint main()\r\n{\r\n\tint i;\r\n\tint t;\r\n\tint T;\r\n\tint n;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &A[i]);\r\n\t\t}\r\n\t\tA[n] = -1;\r\n\t\tfor (i = 1; i < n - 1; i += t)\r\n\t\t{\r\n\t\t\tfor (t = 1; i + t < n; t++)\r\n\t\t\t{\r\n\t\t\t\tif (A[i] ^ A[i + t])\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (A[i] < A[i - 1] && A[i] < A[i + t])\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (n < 3)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (i < n - 1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9972662657189721, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "65b47a6033373cb4028acb05abf6e320", "bug_code_uid": "9423be80e9bfe32f9f463980515b26ba", "src_uid": "45ac482a6b95f44a26b7363e6756c8d1", "apr_id": "d57cbad216bf2f15c0937dc9173c3c34", "difficulty": 1800, "tags": ["ternary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define LEN 1024\n\nint r[LEN], c[LEN];\nlong long find_min ( int * a, int l, int * p ) {\n        int i, j;\n        unsigned long long min = -1ll, s, d;\n        for ( i = 0; i <= l; ++i ) {\n                for ( s = j = 0; j < i; ++j ) d = ( ( i - j ) * 2 - 1 ), s += d * d * a[j];\n                for ( ; j < l; ++j ) d = ( ( j - i ) * 2 + 1 ), s += d * d * a[j];\n                if ( min > s ) min = s, *p = i;\n        }\n        return min;\n}\n\nint main ( ) {\n        int i, j, k;\n        int n, m;\n        long long s = 0;\n\n        for ( scanf ( \"%d%d\", &n, &m ), i = j = 0; i < n; ++i ) {\n                for ( j = 0; j < m; ++j ) {\n                        scanf ( \"%d\", &k );\n                        c[j] += k, r[i] += k;\n                }\n        }\n\n        s += find_min ( r, n, &n );\n        s += find_min ( c, m, &m );\n        printf ( \"%lld\\n%d %d\\n\", s * 4, n, m );\n\n        return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define LEN 1024\n\nint r[LEN], c[LEN];\nlong long find_min ( int * a, int l, int * p ) {\n        int i, j;\n        unsigned long long min = -1ll, s, d;\n        for ( i = 0; i <= l; ++i ) {\n                for ( s = j = 0; j < i; ++j ) d = ( ( i - j ) * 2 - 1 ), s += d * d * a[j];\n                for ( ; j < l; ++j ) d = ( ( j - i ) * 2 + 1 ), s += d * d * a[j];\n                if ( min > s ) min = s, *p = i;\n        }\n        return min;\n}\n\nint main ( ) {\n        int i, j, k;\n        int n, m;\n        long long s = 0;\n\n        for ( scanf ( \"%d%d\", &n, &m ), i = j = 0; i < n; ++i ) {\n                for ( j = 0; j < m; ++j ) {\n                        scanf ( \"%d\", &k );\n                        c[j] += k, r[i] += k;\n                }\n        }\n\n        s += find_min ( r, n, &n );\n        s += find_min ( c, m, &m );\n        printf ( \"%I64d\\n%d %d\\n\", s * 4, n, m );\n\n        return 0;\n}\n"}
{"similarity_score": 0.5100830367734283, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "a94f8f5606aeb3fe9f7376185a0d6a15", "bug_code_uid": "b4544e3a3527e4b4547ebcae3dab36d3", "src_uid": "7374246c559fb7b507b0edeea6ed0c5d", "apr_id": "23a5dd27bc6e5aabf1677786f42a687e", "difficulty": 1100, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nchar S[100003];\r\nint next[100003];\r\nchar M[100003];\r\nchar F[26];\r\nint main()\r\n{\r\n\tint t;\r\n\tint i;\r\n\tint T;\r\n\tint n;\r\n\tint k;\r\n\tchar c[2];\r\n\tint p;\r\n\tint count;\r\n\tint R;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tscanf(\"%d\", &n);\r\n\t\tscanf(\"%s\", S + 1);\r\n\t\tfor (t = 0; t <= n; t++)\r\n\t\t{\r\n\t\t\tnext[t] = t + 1;\r\n\t\t}\r\n\t\tfor (i = 0; i <= n + 1; i++)\r\n\t\t{\r\n\t\t\tM[i] = 1;\r\n\t\t}\r\n\t\tscanf(\"%d\", &k);\r\n\t\tfor (i = 0; i < 26; i++)\r\n\t\t{\r\n\t\t\tF[i] = 0;\r\n\t\t}\r\n\t\tfor (i = 0; i < k; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%s\", c);\r\n\t\t\tF[c[0] - 'a'] = 1;\r\n\t\t}\r\n\t\tR = 0;\r\n\t\tdo\r\n\t\t{\r\n\t\t\tcount = 0;\r\n\t\t\tfor (i = next[0]; next[i] < n + 1; i = next[i])\r\n\t\t\t{\r\n\t\t\t\tif (F[S[next[i]] - 'a'])\r\n\t\t\t\t{\r\n\t\t\t\t\tM[i] = 0;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (i = 0; i < n + 1; i = p)\r\n\t\t\t{\r\n\t\t\t\tfor (p = next[i]; M[p] == 0; p = next[p]);\r\n\t\t\t\tnext[i] = p;\r\n\t\t\t}\r\n\t\t\tR++;\r\n\t\t}\r\n\t\twhile (count);\r\n\t\tR--;\r\n\t\tprintf(\"%d\\n\", R);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nchar S[100003];\r\nchar F[26];\r\nint main()\r\n{\r\n\tint i;\r\n\tint T;\r\n\tint n;\r\n\tint k;\r\n\tchar c[2];\r\n\tint count;\r\n\tint R;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tscanf(\"%d\", &n);\r\n\t\tscanf(\"%s\", S + 1);\r\n\t\tscanf(\"%d\", &k);\r\n\t\tfor (i = 0; i < 26; i++)\r\n\t\t{\r\n\t\t\tF[i] = 0;\r\n\t\t}\r\n\t\tfor (i = 0; i < k; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%s\", c);\r\n\t\t\tF[c[0] - 'a'] = 1;\r\n\t\t}\r\n\t\tcount = 0;\r\n\t\tR = 0;\r\n\t\tfor (i = 1; i <= n; i++)\r\n\t\t{\r\n\t\t\tif (F[S[i] - 'a'] == 0)\r\n\t\t\t{\r\n\t\t\t\tR++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (i > n)\r\n\t\t{\r\n\t\t\tR = 0;\r\n\t\t}\r\n\t\tcount = 1;\r\n\t\tfor (i++; i <= n; i++)\r\n\t\t{\r\n\t\t\tif (F[S[i] - 'a'] == 0)\r\n\t\t\t{\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (count > R)\r\n\t\t\t\t{\r\n\t\t\t\t\tR = count;\r\n\t\t\t\t}\r\n\t\t\t\tcount = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", R);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.39811542991755006, "equal_cnt": 22, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "d56e1a526b503410661be22d0a945020", "bug_code_uid": "a1e7ee2d2d8aa0a0ea5a3ec26d5fa495", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "f32e580d54f660a647a3909c7f73e958", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\n    int t,m,n,i,j,k;\n    scanf(\"%d\",&t);\n    char s[100];\n    for(i=0;i<t;i++){\n        scanf(\"%d\\n\",&m);\n        scanf(\"%s\",s);\n        n=strlen(s);\n        if(n<11){\n            printf(\"NO\\n\");\n        }\n    else {\n            for(j=0;j<n-10;j++){\n                if(s[j]==8){\n                    printf(\"YES\\n\");\n                }\n            }\n        }\n    }\n\n    return 0;}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n long long  int j,t,i,f,x,n,m,d,g,k=0,sum=0,count=1,l=0;\n scanf(\"%lld\",&f);\n for(j=0;j<f;j++){\n scanf(\"%lld\",&n);\n  char  a[n];\n    char  b[n];\n   scanf(\"%s\",&a);\n   if(n<11){  printf(\"NO\\n\");}\n   else {\n    for(i=0;i<(n-10);i++){\n        if(a[i]=='8'){\n            printf(\"YES\\n\");\n           break;\n        }\n    }\n    if(i==n-10){\n        printf(\"NO\\n\");\n    }\n   }\n }\n\n\nreturn 0;\n}"}
{"similarity_score": 0.9994008388256441, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8e7bec82bf164d2c9a4a35981c7409bf", "bug_code_uid": "a05ed2902d8dabc6b719a67d18bb2ac1", "src_uid": "5df6eb50ead22b498bea69bb84341c06", "apr_id": "254d2447c42cc25210763c5172724f27", "difficulty": 1100, "tags": ["greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//#define DEBUG_MODE 1\r\n\r\n#include <stdio.h>\r\n\r\nint main() {\r\n    unsigned t, i;\r\n    unsigned long long n, k, p=1, ret=0;\r\n\r\n    scanf(\"%u\", &t);\r\n    for (i = 0; i < t; i++) {\r\n        scanf(\"%llu %llu\", &n, &k);\r\n#ifdef DEBUG_MODE\r\n        printf(\"n=%llu k=%llu\\n\",n,k);\r\n#endif //#ifdef DEBUG_MODE\r\n        if (n<2) ret=0;\r\n        else if (n==2) ret=1;\r\n        else {\r\n          ret=1;\r\n          p=2;\r\n          n-=2;\r\n          while (n>0) {\r\n            if (p>k) {\r\n              ret+=n/k;\r\n              if (n%k>0) ret++;\r\n              break;\r\n            }\r\n            ret++;\r\n            if (n<p) break;\r\n            n-=p;\r\n            p*=2;\r\n#ifdef DEBUG_MODE\r\n            printf(\"n=%llu k=%llu p=%llu ret=%llu\\n\",n,k,p,ret);\r\n#endif //#ifdef DEBUG_MODE\r\n          }\r\n        }\r\n        printf(\"%lu\\n\",ret);\r\n    }\r\n}\r\n", "fixed": "//#define DEBUG_MODE 1\r\n\r\n#include <stdio.h>\r\n\r\nint main() {\r\n    unsigned t, i;\r\n    unsigned long long n, k, p=1, ret=0;\r\n\r\n    scanf(\"%u\", &t);\r\n    for (i = 0; i < t; i++) {\r\n        scanf(\"%llu %llu\", &n, &k);\r\n#ifdef DEBUG_MODE\r\n        printf(\"n=%llu k=%llu\\n\",n,k);\r\n#endif //#ifdef DEBUG_MODE\r\n        if (n<2) ret=0;\r\n        else if (n==2) ret=1;\r\n        else {\r\n          ret=1;\r\n          p=2;\r\n          n-=2;\r\n          while (n>0) {\r\n            if (p>k) {\r\n              ret+=n/k;\r\n              if (n%k>0) ret++;\r\n              break;\r\n            }\r\n            ret++;\r\n            if (n<p) break;\r\n            n-=p;\r\n            p*=2;\r\n#ifdef DEBUG_MODE\r\n            printf(\"n=%llu k=%llu p=%llu ret=%llu\\n\",n,k,p,ret);\r\n#endif //#ifdef DEBUG_MODE\r\n          }\r\n        }\r\n        printf(\"%llu\\n\",ret);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9966909331568498, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "dbe236571e8c0f6781fb806bfe745495", "bug_code_uid": "820e4f378a784dee2f97656e9aa26ce2", "src_uid": "0593f79604377dcfa98d2b69840ec0a6", "apr_id": "1211ec19c1c1b74f68a2f745124516c5", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n// int main () {\n// \tint i,N,arr[100000],temp,res[100000],j,k;\n// \tscanf(\"%d\",&N);\n// \tj=0;\n// \tk=0;\n// \tfor(i=0;i<N;i++){\n// \t\tscanf(\"%d\",&temp);\n// \t\tif (temp==0)\tcontinue;\n// \t\telse{\n// \t\t\tfor(k=0;k<j;k++){\n// \t\t\t\tif(res[k]==temp)\tbreak;\n// \t\t\t}\n// \t\t\tif(j==k){\n// \t\t\t\tres[j]=temp;\n// \t\t\t\tj+=1;\n// \t\t\t}\n// \t\t}\n// \t}\n// \tprintf(\"%d\",j);\n// \treturn(0);\n// }\nint main () {\n\tint i,N,pos[100000],temp,neg[100000],l;\n\tscanf(\"%d\",&N);\n\tl=0;\n\tfor(i=0;i<100000;i++){\n\t\tpos[i]=-1;\n\t\tneg[i]=-1;\n\t}\n\tfor(i=0;i<N;i++){\n\t\tscanf(\"%d\",&temp);\n\t\tif(temp>0){\n\t\t\tif(pos[temp]==-1){\n\t\t\t\tpos[temp]=0;\n\t\t\t\tl+=1;\n\t\t\t}\n\t\t}\n\t\telse if(temp<0){\n\t\t\tif(neg[-temp]==-1){\n\t\t\t\tneg[-temp]=0;\n\t\t\t\tl+=1;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn(0);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n// int main () {\n// \tint i,N,arr[100000],temp,res[100000],j,k;\n// \tscanf(\"%d\",&N);\n// \tj=0;\n// \tk=0;\n// \tfor(i=0;i<N;i++){\n// \t\tscanf(\"%d\",&temp);\n// \t\tif (temp==0)\tcontinue;\n// \t\telse{\n// \t\t\tfor(k=0;k<j;k++){\n// \t\t\t\tif(res[k]==temp)\tbreak;\n// \t\t\t}\n// \t\t\tif(j==k){\n// \t\t\t\tres[j]=temp;\n// \t\t\t\tj+=1;\n// \t\t\t}\n// \t\t}\n// \t}\n// \tprintf(\"%d\",j);\n// \treturn(0);\n// }\nint main () {\n\tint i,N,pos[100010],temp,neg[100010],l;\n\tscanf(\"%d\",&N);\n\tl=0;\n\tfor(i=0;i<=100000;i++){\n\t\tpos[i]=-1;\n\t\tneg[i]=-1;\n\t}\n\tfor(i=0;i<N;i++){\n\t\tscanf(\"%d\",&temp);\n\t\tif(temp>0){\n\t\t\tif(pos[temp]==-1){\n\t\t\t\tpos[temp]=0;\n\t\t\t\tl+=1;\n\t\t\t}\n\t\t}\n\t\telse if(temp<0){\n\t\t\tif(neg[-temp]==-1){\n\t\t\t\tneg[-temp]=0;\n\t\t\t\tl+=1;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn(0);\n}\n"}
{"similarity_score": 0.9824561403508771, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7f876568018d4c68ecfd540779bd3b1f", "bug_code_uid": "f939d3c67d7c599ca58114977cbac5d9", "src_uid": "8ff1b4cf9875f1301e603b47626d06b4", "apr_id": "0d96c9b802eb35c664d9238a25adccd0", "difficulty": 1600, "tags": ["implementation", "*special", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define MP make_pair\n#define FI first\n#define SE second\n\nint n;\nchar s*;\n\nint check(char c){\n    if(c == 'a' || c=='e' || c=='i' || c=='o' || c=='u' || c=='y') return 1;\n    return 0;\n}\n\nvoid solve(){\n    int len = n;\n    char tmp[N];\n    tmp[0] = s[0];\n    int cnt = 1, i;\n    for(i=1;i<len;i++){\n        if(s[i] == s[i-1] && check(s[i]) == 1) tmp[cnt++] = s[i];\n        else{\n            tmp[cnt] = '\\0';\n            if(cnt == 2 && (tmp[0] == 'e'  || tmp[0] == 'o') ) printf(\"%s\", tmp);\n            else printf(\"%c\", tmp[0]);\n            cnt = 0;\n            tmp[cnt++] = s[i];\n        }\n    }\n    tmp[cnt] = '\\0';\n    if(cnt == 2 && (tmp[0] == 'e'  || tmp[0] == 'o') ) printf(\"%s\", tmp);\n    else printf(\"%c\", tmp[0]);\n}\n\nint main(){\n    while(~scanf(\"%d\", &n)){\n        scanf(\"%s\", s);\n        solve();\n    }\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define MP make_pair\n#define FI first\n#define SE second\n\nconst int N = 1e5+10;\nint n;\nchar s[100010];\n\nint check(char c){\n    if(c == 'a' || c=='e' || c=='i' || c=='o' || c=='u' || c=='y') return 1;\n    return 0;\n}\n\nvoid solve(){\n    int len = n;\n    char tmp[N];\n    tmp[0] = s[0];\n    int cnt = 1, i;\n    for(i=1;i<len;i++){\n        if(s[i] == s[i-1] && check(s[i]) == 1) tmp[cnt++] = s[i];\n        else{\n            tmp[cnt] = '\\0';\n            if(cnt == 2 && (tmp[0] == 'e'  || tmp[0] == 'o') ) printf(\"%s\", tmp);\n            else printf(\"%c\", tmp[0]);\n            cnt = 0;\n            tmp[cnt++] = s[i];\n        }\n    }\n    tmp[cnt] = '\\0';\n    if(cnt == 2 && (tmp[0] == 'e'  || tmp[0] == 'o') ) printf(\"%s\", tmp);\n    else printf(\"%c\", tmp[0]);\n}\n\nint main(){\n    while(~scanf(\"%d\", &n)){\n        scanf(\"%s\", s);\n        solve();\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9233644859813084, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4fb995582bd58869bb1585e235adc9b7", "bug_code_uid": "6a3e70ff78aabf63c5fca9d345f65fa0", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "5e08aa7760f36f949cc0ad98202383ee", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,array[100],i;\n    double total=0.0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        total+=array[i];\n    }\n    printf(\"%.12lf\\n\",(total/n));\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,array[100],i;\n    float total=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        total+=array[i];\n    }\n    printf(\"%f\",total/n);\n    return 0;\n}\n"}
{"similarity_score": 0.9968253968253968, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "98d35f2be37e87bfbaa04e4e86b99c62", "bug_code_uid": "0db4b22a12b00d8365dbeb440525c06c", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "fd3f5f30c1087d450c26859dd43de5fe", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        j=a[i];\n        b[j-1]=i+1;\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d\",b[i]);\n    }\n     return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        j=a[i];\n        b[j-1]=i+1;\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d\\t\",b[i]);\n    }\n     return 0;\n\n}\n"}
{"similarity_score": 0.984047019311503, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1dfce4b758fb5761107b304322bba3ae", "bug_code_uid": "779def4e2ddec7272ebd6ea96fad8828", "src_uid": "94a38067fc8dd8619fa6e5873ca60220", "apr_id": "e113304d0c52093f0c2052cbc79d1a1f", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int i,n,x,y,a[200],z,sum,flag;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        scanf(\"%d\",&a[i]);\n    }\n    for(x=1;x<=n;x++) {\n        flag=0;\n        for(y=x+1;y<=n;y++) {\n            sum=a[x]+a[y];\n            for(z=1;z<=n;z++) {\n                if(a[z]==a[x] || a[z]==a[y]) {\n                    continue;\n                }\n                if(sum==a[z]) {\n                    flag=1;\n                    printf(\"%d %d %d\\n\",a[z],a[y],a[x]);\n                    return 0;\n                }\n            }\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n    int i,n,x,y,a[200],z,sum,flag;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        scanf(\"%d\",&a[i]);\n    }\n    for(x=1;x<=n;x++) {\n        flag=0;\n        for(y=x+1;y<=n;y++) {\n            sum=a[x]+a[y];\n            for(z=1;z<=n;z++) {\n                if(a[z]==a[x] || a[z]==a[y]) {\n                    continue;\n                }\n                if(sum==a[z]) {\n                    flag=1;\n                    printf(\"%d %d %d\\n\",z,y,x);\n                    return 0;\n                }\n            }\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.781664656212304, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "68211cca23881b77639039a1b0b7989c", "bug_code_uid": "d4c21ca35d7d85c48b798d624f4cf83c", "src_uid": "bc532d5c9845940b5f59485394187bf6", "apr_id": "2889e1cdade5809483a130dcadd3dce3", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n   long long  int t,n,i,j,k,a,b,c,m,p=0;\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a);\n        if(a%2==1)\n        p=p+1;\n    }\n   for(i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&b);\n        if(b%2==1)\n        p=p+1;\n    }\n    \n    printf(\"%lld\",p);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int d,n,i,j,k,a,b,c,m,p=0,x=0,q=0,y=0;\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a);\n        if(a%2==1)\n        p=p+1;\n        else\n        x=x+1;\n    }\n   for(i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&b);\n        if(b%2==1)\n        q=q+1;\n        else\n        y=y+1;\n    }\n    if(x>q)\n    {\n        c=q;\n    }\n    else\n    c=x;\n    if(p>y)\n    c=c+y;\n    else\n    c=c+p;\n    printf(\"%lld\",c);\n   \n\n    return 0;\n}\n"}
{"similarity_score": 0.27979274611398963, "equal_cnt": 25, "replace_cnt": 16, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "4e4feddbb20beef2c1326ab5ab6b90fa", "bug_code_uid": "a5d4c3a6addec5fbf619a647b829f264", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "15e9b96b2e415c9cce2d0acd19f36f31", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint testCase;\n\tscanf(\"%d\", &testCase);\n\n\twhile (testCase > 0)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tint num[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &num[i]);\n\t\t}\n\t\tint counter[10] = {0};\n\t\tint check = 0;\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tint val = num[i];\n\t\t\tcounter[val]++;\n\t\t}\n\n\t\tfor (int i = 0; i < 10; i++)\n\t\t{\n\t\t\tif (counter[i] >= 3)\n\t\t\t{\n\t\t\t\tprintf(\"%d\", i);\n\t\t\t\tcheck = 1;\n\t\t\t}\n\t\t\tcounter[i] = 0;\n\t\t}\n\n\t\tif (check == 0)\n\t\t{\n\t\t\tprintf(\"%d\", -1);\n\t\t}\n\t\ttestCase--;\n\t}\n\n\treturn 0;\n}\n   \t\t \t \t\t \t\t\t   \t\t\t\t \t \t\t   \t", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n    int n, t, x;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int ar[200001]={}, count=-1;\n        scanf(\"%d\", &n);\n        for(int i=0; i<n; i++)\n        {\n            scanf(\"%d\", &x);\n            ar[x]++;\n            if(ar[x]>2)\n            {\n                count=x;\n            }\n        }\n        printf(\"%d\\n\", count);\n    }\n}\n\n\t\t   \t\t\t\t\t \t\t \t    \t\t     \t\t \t\t"}
{"similarity_score": 0.8028455284552846, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "3125bda6ce8ff8709203a7a7ac12d6a8", "bug_code_uid": "c6c882dd8e920fed5727b952c88a0189", "src_uid": "aa00fbde0b135addd2fdde0310e0377a", "apr_id": "24c67419ede61d0558b6686d3ae777f0", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nlong long int power(int x)\r\n{\r\n    long long int a=1;\r\n    for(int i=0; i<x; i++)\r\n    {\r\n        a = a * 10;\r\n    }\r\n    return a;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    long long int num1, num2, ans;\r\n    long long int x, y, t;\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        t = 0;\r\n        ans = 0;\r\n        scanf(\"%lld %lld\", &num1, &num2);\r\n        for(int i=0; i<19; i++)\r\n        {\r\n            x = num1 % 10;\r\n            y = num2 % 10;\r\n            if(x>y)\r\n            {\r\n                y = num2 % 100;\r\n                num2 = num2/100;\r\n            }\r\n            else num2 = num2/10;\r\n            if(y-x>9)\r\n            {\r\n                t = 1;\r\n                break;\r\n            }\r\n            ans = ans + (y-x)* power(i);\r\n            num1 = num1/10;\r\n        }\r\n        if(t==0)\r\n        {\r\n            if(ans<0)  printf(\"-1\\n\");\r\n            if(ans>=0) printf(\"%lld\\n\", ans);\r\n        }\r\n        if(t==1)  printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nlong long int power(int x)\r\n{\r\n    long long int a=1;\r\n    for(int i=0; i<x; i++)\r\n    {\r\n        a = a * 10;\r\n    }\r\n    return a;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    long long int num1, num2, ans;\r\n    long long int x, y, t;\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        t = 0;\r\n        ans = 0;\r\n        scanf(\"%lld %lld\", &num1, &num2);\r\n        for(int i=0; i<19; i++)\r\n        {\r\n            x = num1 % 10;\r\n            y = num2 % 10;\r\n            if(x>y)\r\n            {\r\n                y = num2 % 100;\r\n                num2 = num2/100;\r\n            }\r\n            else num2 = num2/10;\r\n            if(y-x>9 || y-x<0)\r\n            {\r\n                t = 1;\r\n                break;\r\n            }\r\n            ans = ans + (y-x)* power(i);\r\n            num1 = num1/10;\r\n        }\r\n        if(t==0)\r\n        {\r\n            printf(\"%lld\\n\", ans);\r\n        }\r\n        if(t==1)  printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9904610492845787, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1e14149ad0af29cffa838906352b73b9", "bug_code_uid": "351bf0cfa61da91585c2eba5cb4b28ad", "src_uid": "6c65ca365352380052b0c9d693e6d161", "apr_id": "edb142511bd0abcb9eae6303ff8bf1fb", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\ntypedef long long int lli;\n\nint main()\n{\n    int n;\n    int *a;\n    int i, diff, flag;\n    \n    scanf(\"%d\", &n);\n    \n    a = (int *)malloc(sizeof(int)*n);\n    \n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n    \n    diff = n - a[0];\n    flag = 0;\n    \n    for(i=1; i<n && !flag; i+=2)\n        if((a[i]+diff)%n != i)\n            flag = 1;\n    \n    for(i=2; i<n && !flag; i+=2)\n        if((a[i]+n-diff)%n != i)\n            flag = 1;\n    \n    if(flag)\n        printf(\"No\");\n    \n    else\n        printf(\"Yes\");\n    \n    free(a);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\ntypedef long long int lli;\n\nint main()\n{\n    int n;\n    int *a;\n    int i, diff, flag;\n    \n    scanf(\"%d\", &n);\n    \n    a = (int *)malloc(sizeof(int)*n);\n    \n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n    \n    diff = n - a[0];\n    flag = 0;\n    \n    for(i=1; i<n && !flag; i+=2)\n        if((a[i]-diff+n)%n != i)\n            flag = 1;\n    \n    for(i=2; i<n && !flag; i+=2)\n        if((a[i]+diff)%n != i)\n            flag = 1;\n    \n    if(flag)\n        printf(\"No\");\n    \n    else\n        printf(\"Yes\");\n    \n    free(a);\n    \n    return 0;\n}"}
{"similarity_score": 0.6807666886979511, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "f4a28361e717d469582a5465fbbf1932", "bug_code_uid": "43778c627ba28a05e6c6a890f27de091", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "f1eb03122281480b63c7f6ec9246b5f8", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main( )\n{\n    char a[1000], b[1000];\n    int k, m, i, j, flag=0;\n    scanf(\"%s\",&a);\n    scanf(\"%s\",&b);\n    k=strlen(a);\n    m=strlen(b);\n    if(k!=m)\n\t\tprintf(\"NO\");\n    else{\n    for(i=0;i<k;i++)\n    {\n      if (a[i] == 'a' || a[i] == 'e' || a[i] == 'i' || a[i]== 'o' || a[i]== 'u')\n      \n          if(b[i] == 'a' || b[i] == 'e' || b[i] == 'i' || b[i]== 'o' || b[i]== 'u')\n      \n          flag=+1;\n          \n    }   \n \n    for(i=0;i<k;i++)\n    {\n       if (a[i] != 'a' || a[i] != 'e' || a[i] != 'i' || a[i]!= 'o' || a[i]!= 'u')\n      \n          if(b[i] != 'a' || b[i] != 'e' || b[i] != 'i' || b[i]!= 'o' || b[i]!= 'u')\n      \n            flag=+1;\n    }\n    if(flag==k)\n        printf(\"YES\");\n    else\n        printf(\"NO\");   }\n        \n        \n        \n        \n        \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main( )\n{\n    char a[1001], b[1001];\n    int k, m, i, j, flag=0,k1=0,k2=0;\n    scanf(\"%s\",&a);\n    scanf(\"%s\",&b);\n    k=strlen(a);\n    m=strlen(b);\n    if(k!=m)\n\t\tprintf(\"NO\");\n    else{\n    for(i=0;i<k;i++)\n    {\n        k1=0;\n        k2=0;\n      if ((a[i] == 'a' || a[i] == 'e' || a[i] == 'i' || a[i]== 'o' || a[i]== 'u'))\n      k1=1;\n          if(b[i] == 'a' || b[i] == 'e' || b[i] == 'i' || b[i]== 'o' || b[i]== 'u')\n      k2=1;\n    if(k1!=k2)\n          {\n              \n              flag=1;\n              break;\n          }\n    }\n    if(flag==0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");   }\n        \n     return 0;\n}"}
{"similarity_score": 0.5844660194174758, "equal_cnt": 18, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "81a2a25d1c8fcb14c37bf44d1435742d", "bug_code_uid": "3bbe9a572a70e6afc5719d0d0ce27f48", "src_uid": "7bdb68ab0752f8df94b4d5c7df759dfb", "apr_id": "ddf836273c72d7c7e00ea5b4c89a8d78", "difficulty": 1300, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define sc(x) {register char c7=getchar(),v7=1;for(x=0;c7<48||c7>57;c7=getchar())if(c7==45)v7=-1;for(;c7>=48&&c7<=57;x=(x<<1)+(x<<3)+c7-48,c7=getchar());x*=v7;}\nint a[5678];\nint main(){\n    int n, k, now, i, j;\n\tdouble avr, max = 0.0;\n    sc(n)sc(k)\n    for(i=0 ;i<n; i++)\n    {\n    \tnow = i%k;\n    \tsc(a[now])\n    \tif(i>=k-1)\n    \tfor(j=avr=0; j<k; j++)\n    \t\tavr+=a[j];\n    \tavr/=k;\n    \tif(avr>max)\n    \t\tmax = avr;\n\t}\n\tprintf(\"%.9lf\\n\",max);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define sc(x) {register char c7=getchar(),v7=1;for(x=0;c7<48||c7>57;c7=getchar())if(c7==45)v7=-1;for(;c7>=48&&c7<=57;x=(x<<1)+(x<<3)+c7-48,c7=getchar());x*=v7;}\nint a[5678], _s[5678], *s = _s+1;\nint main()\n{\n\tint n, k, now, i, j, ub, up, cnt;\n\tdouble avr, sum;\n\tsc(n)sc(k)\n\tfor(i=0; i<n; i++)\n\t{\n\t\tsc(a[i])\n\t\ts[i] = s[i-1]+a[i];\n\t}\n\tint p=1, max=0;\n\tfor(i=k; i<=n; i++)\n\t\tfor(j=0; j<=n-i; j++)\n\t\t{\n\t\t\tint t=s[j+i-1]-s[j-1];\n\t\t\tif((double)t/i>(double)max/p)\n\t\t\t\tmax=t,p=i;\n\t\t}\n\tprintf(\"%.8lf\\n\",1.0*max/p);\n}\n"}
{"similarity_score": 0.3843717001055966, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "3a4c0c78729f058ea0a828e721c0ca8f", "bug_code_uid": "82841005cf7d22d0d902bb67d5579696", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "912103bce2600e9877579d8b7fafb9d9", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t!=0)\n    {\n        long long int x,y,a,b,sum=0,diff=0;\n        scanf(\"%lld %lld\\n%lld %lld\",&x,&y,&a,&b);\n        if(x!=y)\n        {\n           diff=abs(x-y);\n           sum=diff*a;\n           if(x!=0||y!=0)\n           sum+=(x*b);\n        }\n        if(x==y)\n        {\n            if(x==0)\n                sum=0;\n            else\n                sum=(x*b);\n        }\n        printf(\"%lld\\n\",sum);\n        t-=1;\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int x,y,a,b,ans=0,min,max,t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n        if(x>y)\n        {\n            min=y;\n            max=x-y;\n        }\n        else\n        {\n            min=x;\n            max=y-x;\n        }\n        if(2*a<=b)\n            printf(\"%lld\\n\",(x+y)*a);\n        else\n        printf(\"%lld\\n\",(max*a+min*b));\n    }\n}"}
{"similarity_score": 0.9991503823279524, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f2a52328a6e4562069f82554c9d4ebcb", "bug_code_uid": "8f6fe385b98a46ca626084fc4618a930", "src_uid": "8a6c3436f73286ca54f51fb90017a299", "apr_id": "9cc1f5cba8fe77e629eb5434f43e5a86", "difficulty": 800, "tags": ["number theory", "greedy", "math", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    { int n,c;\n        //the first three nearly prime is 2*3 2*5 and 2*7 so sum of the three nearly prime numbers is 30 so if n is <=30 it is not possible to represent it as sum of 3 nearly prime numbers...\n        scanf(\"%d\",&n);\n         if(n<=30)\n            printf(\"NO\\n\");\n         else if(n==36||n==40||n==44)\n         {\n             c=n-31\n             printf(\"YES 6 10 15 %d\\n\",c);\n\n         }\n         else\n         {  c=n-30;\n            printf(\"YES 6 10 14 %d\\n\",c);\n         }\n    }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    { int n,c;\n        //the first three nearly prime is 2*3 2*5 and 2*7 so sum of the three nearly prime numbers is 30 so if n is <=30 it is not possible to represent it as sum of 3 nearly prime numbers...\n        scanf(\"%d\",&n);\n         if(n<=30)\n            printf(\"NO\\n\");\n         else if(n==36||n==40||n==44)\n         {\n             c=n-31;\n             printf(\"YES 6 10 15 %d\\n\",c);\n\n         }\n         else\n         {  c=n-30;\n            printf(\"YES 6 10 14 %d\\n\",c);\n         }\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.9218390804597701, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d9640156bf43328d8dd5c0e9ec84c603", "bug_code_uid": "4234888ae150cac2f10be009ccbc57e3", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "069a60a520bc9b4e67d742c7297721fe", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main() {\n    char s1[200001];\n    char s2[200001];\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    //printf(\"%s^^^^%s\",s1,s2);\n    int a,b,count=0,i;\n    a=strlen(s1);\n    b=strlen(s2);\n    int min=b;\n    if(a<b)\n    {\n        min=a;\n    }\n    for(i=0;i<min;i++)\n    {\n        if(a>b)\n        {\n        //printf(\"%c^^^^%c^^^^\\n\",s1[(a+b-min)-1-i],s2[min-1-i]);\n            if(s1[(a+b-min)-1-i]==s2[min-1-i])\n            {\n                count++;\n            }\n        }\n        else\n        {\n            //printf(\"%c^^^^%c^^^^\\n\",s2[(a+b-min)-1-i],s1[min-1-i]);\n            if(s1[min-1-i]==s2[a+b-min-1-i])\n            {\n                count++;\n            }\n        }\n    }\n    //printf(\"%d^^^\",count);\n    printf(\"%d\\n\",a+b-count-count);\n\t//code\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main() {\n    char s1[200001];\n    char s2[200001];\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    //printf(\"%s^^^^%s\",s1,s2);\n    int a,b,count=0,i;\n    a=strlen(s1);\n    b=strlen(s2);\n    int min=b;\n    if(a<b)\n    {\n        min=a;\n    }\n    for(i=0;i<min;i++)\n    {\n        if(a>b)\n        {\n        //printf(\"%c^^^^%c^^^^\\n\",s1[(a+b-min)-1-i],s2[min-1-i]);\n            if(s1[(a+b-min)-1-i]==s2[min-1-i])\n            {\n                count++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        else\n        {\n            //printf(\"%c^^^^%c^^^^\\n\",s2[(a+b-min)-1-i],s1[min-1-i]);\n            if(s1[min-1-i]==s2[a+b-min-1-i])\n            {\n                count++;\n            }\n            else\n            {\n                break;\n            }\n        }\n    }\n   // printf(\"%d^^^\",count);\n    printf(\"%d\\n\",a+b-count-count);\n\t//code\n\treturn 0;\n}"}
{"similarity_score": 0.8980237154150198, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ce51f238cf22bf7d0ab55721bea77b15", "bug_code_uid": "6cef79c6be79992d471a799ee999aa1c", "src_uid": "5b1f33228a58d9e14bc9479767532c25", "apr_id": "17ec0a3459ceba1287231527df0f9171", "difficulty": 1100, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nint main()\n{\n    int t,h1,at1,h2,at2,kk,dh,dat;\n    int i,j,k,hh,aatt,r1,r2,win;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        win=0;\n        scanf(\"%d%d%d%d%d%d%d\",&h1,&at1,&h2,&at2,&kk,&dat,&dh);\n        for(j=0;j<kk+1;j++)\n        {\n            hh=h1+j*dh;\n            aatt=at1+(kk-j)*dat;\n            if(hh%at2==0){r1=hh/at2;}\n            else{r1=hh/at2+1;}\n            if(h2%aatt==0){r2=h2/aatt;}\n            else{r2=h2/aatt+1;}\n            if(r1>=r2){win=1;break;}\n        }\n        if(win){printf(\"YES\\n\");}\n        else{printf(\"NO\\n\");}\n    }\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nint main()\n{\n    long long t,h1,at1,h2,at2,kk,dh,dat;\n    long long i,j,k,hh,aatt,r1,r2,win;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        win=0;\n        scanf(\"%lld%lld%lld%lld%lld%lld%lld\",&h1,&at1,&h2,&at2,&kk,&dat,&dh);\n        for(j=0;j<kk+1;j++)\n        {\n            hh=h1+j*dh;\n            aatt=at1+(kk-j)*dat;\n            if(hh%at2==0){r1=hh/at2;}\n            else{r1=hh/at2+1;}\n            if(h2%aatt==0){r2=h2/aatt;}\n            else{r2=h2/aatt+1;}\n            if(r1>=r2){win=1;break;}\n        }\n        if(win){printf(\"YES\\n\");}\n        else{printf(\"NO\\n\");}\n    }\n}\n"}
{"similarity_score": 0.5727272727272728, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "388cb5d405bf1702c521a781ca6fca50", "bug_code_uid": "f96024b33165797ff81b9fafbe78cf9f", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "63262632f8290aeb98da1f0aacee2f48", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,j,w=0;\n    scanf(\"%d\",&n);\n    char c[100005][40];\n    for(i=0;i<n;i++){\n        getchar();\n        scanf(\"%s\",&c[i]);\n        w=0;\n    for(j=0;j<i;j++){\n        if(strcmp(c[j],c[i])==0)\n            w++;\n    }\n    if(w>0)\n        printf(\"%s%d\\n\",c[i],w);\n    else\n        printf(\"OK\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,j,w=0,a[10005]={},k=0,temp,sc=0;\n    scanf(\"%d\",&n);\n    char c[10005][40],word[34];\n    for(i=0;i<n;i++){\n        getchar();\n        scanf(\"%s\",&word);\n        temp=1;\n    for(k=0;k<sc;k++){\n    temp=strcmp(word,c[k]);\n    if(temp==0)\n        break;\n    }\n    if(temp!=0){\n        printf(\"OK\\n\");\n        strcpy(c[sc],word);\n        sc++;\n    }\n    else{\n        a[k]++;\n        printf(\"%s%d\\n\",word,a[k]);\n    }\n    }\n}\n"}
{"similarity_score": 0.8686605981794538, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "674d7d30bd9aaa6ac0cf99fec88c17c4", "bug_code_uid": "e73585e25b703cc786cc59ea8d056a4c", "src_uid": "aca2346553f9e7b6e944ca2c74bb0b3d", "apr_id": "1feb966dcb8e5b1286c4e7ef748f7635", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\r\n\r\n#include <stdio.h>\r\n#include <math.h>\r\nint main ()\r\n{\r\n  int  t,a,b,c;\r\n  scanf(\"%d\",t);\r\n  \r\n  \r\n  \r\n for (int i=0 ;i<t;i++) {\r\n      scanf (\"%d%d%d\",&a,&b,&c);\r\n\r\n\r\n    if (abs(c-b)+c < a)\r\n    {\r\n      printf(\"1\");\r\n    }\r\n  else if  (a < abs(c-b)+c)\r\n    {\r\n      printf(\"2\");\r\n    }\r\n  else if (abs(c-b)+c ==a)\r\n    {\r\n      printf(\"3\");\r\n    }\r\n }\r\n  return 0;", "fixed": "#include <stdlib.h>\r\n#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main ()\r\n{\r\n  int i, t,a,b,c;\r\n  scanf(\"%d\",&t);\r\n  \r\n  \r\n  \r\n for (i=0 ;i<t;i++) {\r\n      scanf (\"%d%d%d\",&a,&b,&c);\r\n \r\n \r\n    if (abs(c-b)+c > a)\r\n    {\r\n      printf(\"1\\n\");\r\n    }\r\n  else if  (a > abs(c-b)+c)\r\n    {\r\n      printf(\"2\\n\");\r\n    }\r\n  else if (abs(c-b)+c ==a)\r\n    {\r\n      printf(\"3\\n\");\r\n    }\r\n }\r\n  return 0;\r\n}"}
{"similarity_score": 0.5642286416717885, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "2fb46d35e333d4b16245cf8192b61b74", "bug_code_uid": "d6d221bc46b89f671c9fb44d43646323", "src_uid": "a97e70ad20a337d12dcf79089c16c9f0", "apr_id": "ea6e1da7968df7b57f1bdf7b4c4a2125", "difficulty": 1100, "tags": ["data structures", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        int i,k=0,a[n+1],temp;\r\n\r\n        long long d;\r\n        a[n]=1000000000;\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(i=0;i<n;i++){\r\n            if(a[i]>a[i+1]){\r\n                temp=a[i];\r\n                a[i]=a[i+1];\r\n                a[i+1]=temp;\r\n                d=a[i]+a[i+1];\r\n                if(d%2==0){\r\n                    k=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(k==1){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\nreturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main(){\r\n    int t,n,i,j,temp;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int flag=1,odd=0,even=0;\r\n        scanf(\"%d\",&n);\r\n        int o[n],e[n];\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%d\",&temp);\r\n            if(temp%2==0){\r\n                e[even]=temp;\r\n                even++;\r\n            }\r\n            else{\r\n                o[odd]=temp;\r\n                odd++;\r\n            }\r\n        }\r\n        for(i=0;i<even-1;i++){\r\n            if(e[i]>e[i+1]){\r\n                flag=0;\r\n                break;\r\n            }\r\n        }\r\n        if(flag==1){\r\n            for(i=0;i<odd-1;i++){\r\n                if(o[i]>o[i+1]){\r\n                    flag=0;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(flag==0){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.8434237995824635, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "b200872d6cc7214becfa4639e80908fc", "bug_code_uid": "924761ff09ece97f3b66f81d2d6aadff", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "e9b3115281473c7ebeb6c87819174e3d", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,t,a[100001],i,j,k,b[100001]={0},c[100001];\n    scanf(\"%d%d\",&n,&t);\n    for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n    for(i=(n-1);i>=0;i--)\n    {\n        b[a[i]]++;\n        if(b[a[i]]>1)\n            c[i]=1;\n        else\n                c[i]=0;\n    }\n    while(t--)\n    {\n        int count=0;\n        scanf(\"%d\",&k);\n        for(i=(k-1);i<n;i++)\n        {\n            if(c[i]==0)\n                count++;\n        }\n        printf(\"%d\\n\",count);\n    }\n\nreturn 0;}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,t,a[100001],i,j,k,b[100001]={0},c[100001],count=0;\n    scanf(\"%d%d\",&n,&t);\n    for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n    for(i=(n-1);i>=0;i--)\n    {\n        b[a[i]]++;\n        if(b[a[i]]>1)\n            c[i]=count;\n        else\n                c[i]=++count;\n    }\n    while(t--)\n    {\n        scanf(\"%d\",&k);\n        printf(\"%d\\n\",c[k-1]);\n    }\n\nreturn 0;}\n"}
{"similarity_score": 0.9930555555555556, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "89731a300b2eb154f1d89e800381875e", "bug_code_uid": "5d2ef5dd960047d5ef3df283674ada96", "src_uid": "19f2c21b18e84f50e251b1dfd557d32f", "apr_id": "0dd46127659d0d9ad1a9c156616c02f8", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint temp,tmp,i,m,L=0,R=0,j;\nchar c[1000005]={0};\nint main(){\n        scanf(\"%s\",c);\n\n        for(i=0;c[i]!='\\0';i++){\n                if(c[i]=='^')break;\n        }\n        tmp=1;\n        for(j=i-1;j>=0;j--,tmp++){\n                if(c[j]=='=')continue;\n                if(c[j]>='1'&&c[j]<='9')L+=(c[j]-'0')*tmp;\n        }\n//      printf(\"%d\",L);\n        tmp=1;\n        for(j=i+1;c[j]!='\\0';j++,tmp++){\n                if(c[j]=='=')continue;\n                if(c[j]>='1'&&c[j]<='9')R+=(c[j]-'0')*tmp;\n        }\n        if(L==R)\n                puts(\"balance\");\n\n        else if(L>R)\n                puts(\"left\");\n        else\n                puts(\"right\");\n\n        return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\nlong long int temp,tmp,i,m,L=0,R=0,j;\nchar c[1000005]={0};\nint main(){\n        scanf(\"%s\",c);\n\n        for(i=0;c[i]!='\\0';i++){\n                if(c[i]=='^')break;\n        }\n        tmp=1;\n        for(j=i-1;j>=0;j--,tmp++){\n                if(c[j]=='=')continue;\n                if(c[j]>='1'&&c[j]<='9')L+=(c[j]-'0')*tmp;\n        }\n//      printf(\"%d\",L);\n        tmp=1;\n        for(j=i+1;c[j]!='\\0';j++,tmp++){\n                if(c[j]=='=')continue;\n                if(c[j]>='1'&&c[j]<='9')R+=(c[j]-'0')*tmp;\n        }\n        if(L==R)\n                puts(\"balance\");\n\n        else if(L>R)\n                puts(\"left\");\n        else\n                puts(\"right\");\n\n        return 0;\n}\n"}
{"similarity_score": 0.9579617834394905, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c7d69519d739f687418ae51dd6c68584", "bug_code_uid": "ea9b1c329d62fad399bc4301f54d973c", "src_uid": "bdea209c7b628e4cc90ebc2572826485", "apr_id": "7a1f6ea69c1b44d208b09a307cea85c9", "difficulty": 1000, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\nlong long int n;\nscanf(\"%lld\",&n);\n\nlong long int arr[200002];\n\nlong long int a,i;\n\nfor(i=0;i<200002;i++)\n\tarr[i]=-1;\n\nfor(i=0;i<n;i++){\n\tscanf(\"%lld\",&a);\t\t\n\tarr[a]=i;\t\n}\n\nlong long int min=199999;\nlong long int num;\nfor(i=0;i<=200000;i++){\n\n\tif(arr[i]<0)\n\t\tcontinue;\n\t\n\tif(arr[i]<min){\n\t\tmin=arr[i];\n\t\tnum=i;\n\t}\n\n}\n\nprintf(\"%lld\\n\",num);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<limits.h>\nint main(){\n\nlong long int n;\nscanf(\"%lld\",&n);\n\nlong long int arr[200002];\n\nlong long int a,i;\n\nfor(i=0;i<200002;i++)\n\tarr[i]=-1;\n\nfor(i=0;i<n;i++){\n\tscanf(\"%lld\",&a);\n\tarr[a]=i;\t\n}\n\nlong long int min=INT_MAX;\nlong long int num;\nfor(i=0;i<=200000;i++){\n\n\tif(arr[i]<0)\n\t\tcontinue;\n\t\n\tif(arr[i]<min){\n\t\tmin=arr[i];\n\t\tnum=i;\n\t}\n\n}\n\nprintf(\"%lld\\n\",num);\nreturn 0;\n}\n"}
{"similarity_score": 0.989010989010989, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "871f83caf995ceedaf27704bbda339a4", "bug_code_uid": "e730ad95e146c408086ab8755c17aa77", "src_uid": "7bb088ce5e4e2101221c706ff87841e4", "apr_id": "fbc5c6f52ae3b3d6ebc36f7e53080037", "difficulty": 1200, "tags": ["implementation", "graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint A[11111],Q[11111],n,j,k,s;\nint main(){\n   scanf(\"%d %d\",&n,&s);\n   while(s--){\n      scanf(\"%d %d\",&j,&k);\n      A[j]++; A[k]++;\n   }\n   for(j=1;j<=n;j++) Q[A[j]]++;\n\n   if(Q[2] == n-2 && Q[1] == 2)        printf(\"bus \");\n   else if(Q[n-1] == 1 && Q[1] == n-1) printf(\"star \");\n   else if(Q[2] == n)                  printf(\"ring \");\n   else                                printf(\"unknown \");\n\n   printf(\"topology\");\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint A[111111],Q[111111],n,j,k,s;\nint main(){\n   scanf(\"%d %d\",&n,&s);\n   while(s--){\n      scanf(\"%d %d\",&j,&k);\n      A[j]++; A[k]++;\n   }\n   for(j=1;j<=n;j++) Q[A[j]]++;\n\n   if(Q[2] == n-2 && Q[1] == 2)        printf(\"bus \");\n   else if(Q[n-1] == 1 && Q[1] == n-1) printf(\"star \");\n   else if(Q[2] == n)                  printf(\"ring \");\n   else                                printf(\"unknown \");\n\n   printf(\"topology\");\n   return 0;\n}\n"}
{"similarity_score": 0.8003629764065335, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "6cfabba9a9aec98c8d0bbe347d52fa0e", "bug_code_uid": "59f82d2776d0e879a26e669024cf00ea", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "131c1c4d8e69e28610e8bfba52987398", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint f(double a)\n{\n\tdouble m=sqrt(a);\n\tint n=sqrt(a);\n\treturn (n==m);\n}\nint f2(int n)\n{\n\tif(((n<2)||(!(n%2)))&&(n!=2))return 0;\n\telse{\n\t\tint i;\n\t\tfor(i=3;i<n;i+=2)if(!(n%i))return 0;\n\t}\n\treturn 1;\n}\nint f1(double n)\n{\n\tint  j=sqrt(n);\n\tint i=f2(j);\n\treturn i;\n}\nint main()\n{\n\tdouble a[100007];int b,i,j,n,is_sq[100007]={0};\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;++i){\n\t\tscanf(\"%lf\",a+i);\n\t\tj=f(*(a+i));\n\t\tif(j){\n\t\t\t*(is_sq+i)=f1(*(a+i));\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(*(is_sq+i))printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint f(double a)\n{\n\tdouble m=sqrt(a);\n\tint n=sqrt(a);\n\treturn (n==m);\n}\nint f1(int n)\n{\n\tif(((n<2)||(!(n%2)))&&(n!=2))return 0;\n\telse{\n\t\tint i,j=sqrt(n);\n\t\tfor(i=3;i<=j;i+=2)if(!(n%i))return 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint n,i,j;\n\tdouble a[100007];\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lf\",a+i);\n\t\tj=f(*(a+i));\n\t\tif(j){\n\t\t\tj=sqrt(*(a+i));\n\t\t\tif(f1(j))*(a+i)=1;\n\t\t\telse *(a+i)=0;\n\t\t}\n\t\telse *(a+i)=0;\n\t}\n\tfor(i=1;i<=n;i++){\n\tif(*(a+i))printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5304829770387965, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b11dfc4e6197d67f8fe9c691a8e606c6", "bug_code_uid": "1ff2c20a367c836ebb2b96be2ce25f3a", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "3e2d5f359a2974a45ec9a5d9cc2455d3", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    long long int n,p=0,v=0;\n    scanf(\"%lld\",&n);\n    long long int arr[n];\n    int i,j;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n    }\n    long long int m;\n    scanf(\"%lld\",&m);\n    for(i=0;i<m;i++)\n    {\n        long long int b,count=0;\n        scanf(\"%lld\",&b);\n        for(j=0;j<n;j++)\n        {\n        \n          if(arr[j]==b)\n          {\n              count++;\n              v=v+count;\n              p=p+(n-count+1);\n              break;\n          }\n          else\n          {\n              count++;\n          }\n            \n          \n          \n        }\n        \n    }\n    printf(\"%lld %lld\",v,p);\n    \n    return(0);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    long long int n,count=0,counter=0;\n    scanf(\"%lld\",&n);\n    long long int arr[n],a[n+1];\n    int i,j;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n    }\n    long long int m;\n    \n    for(j=0;j<n;j++)\n        {\n         a[arr[j]]=j+1;\n        }\n        scanf(\"%lld\",&m);\n    for(i=0;i<m;i++)\n    {\n        long long int b,v;\n        scanf(\"%lld\",&b);\n        count=count+a[b];\n        v=a[b];\n        counter=counter+(n-v+1);\n    }\n    printf(\"%lld %lld\",count,counter);\n    \n    \n    return(0);\n}"}
{"similarity_score": 0.9951314508276533, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "40b5f24c955100bdd2c56a610d43dc54", "bug_code_uid": "70e97ccbb3db40cf3e2b26f57c862b55", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "e04a591122615181d7765b050d9ffe35", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\nint n,m,i,j,k,l;\n\nscanf(\"%d%d\", &n,&m);\n\nint arr[m][n],are[m];\n\nfor(i=0;i<m;i++)\n    are[i] = 0;\n\nfor(i=0;i<m;i++){\n\n    l=0;\n\n    for(j=0;j<n;j++){\n\n        scanf(\"%d\", &arr[i][j]);\n\n        if(arr[i][j] > l){\n\n            l = arr[i][j];\n            k=j;\n\n            }\n\n\n    }\n\n\n    are[k]++;\n\n\n}\n\nif(m == 1){\n\n    printf(\"%d\", k+1);\n    return 0;\n\n}\n\nk=0;\n\nfor(i=0;i<m;i++){\n\n\n    if(are[i] > k){\n        k = are[i];\n        l=i;\n        }\n\n}\n\nprintf(\"%d\", l+1);\n\n\n\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\nint n,m,i,j,k,l;\n\nscanf(\"%d%d\", &n,&m);\n\nint arr[m][n],are[m];\n\nfor(i=0;i<m;i++)\n    are[i] = 0;\n\nfor(i=0;i<m;i++){\n\n    l=-1;\n\n    for(j=0;j<n;j++){\n\n        scanf(\"%d\", &arr[i][j]);\n\n        if(arr[i][j] > l){\n\n            l = arr[i][j];\n            k=j;\n\n            }\n\n\n    }\n\n\n    are[k]++;\n\n\n}\n\nif(m == 1){\n\n    printf(\"%d\", k+1);\n    return 0;\n\n}\n\nk=0;\n\nfor(i=0;i<m;i++){\n\n\n    if(are[i] > k){\n        k = are[i];\n        l=i;\n        }\n\n}\n\nprintf(\"%d\", l+1);\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.5174973488865323, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "5204cdf9ce27f1cb2f106ea4f7892a4b", "bug_code_uid": "e24cb2fc8bf35302e5761a53f915b9ad", "src_uid": "5d9d847103544fa07480fb85c75d0b97", "apr_id": "2c97f4eb9eaea3c7f0eb605f64316a8f", "difficulty": 1600, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nchar a[100001];\n\nint main()\n{\n\tint n, i, t=0, u=0, max=0, f=0;\n\t\n\tscanf(\"%d\",&n), scanf(\"%s\",a);\n\t\n\tfor (i=0;i<n;i++) {\n\t\tif (a[i] == 'G') {\n\t\t\tu++;\n\t\t\tif (i > 0 && a[i-1] == 'G') t++;\n\t\t\telse if (i > 1 && a[i-1] == 'S' && a[i-2] == 'G' && f) t++;\n\t\t\telse t=1;\n\t\t}\n\t\tif (a[i] == 'S') {\n\t\t\tif (t > max) max=t;\n\t\t\tif (i > 0 && a[i-1] == 'S') f=0;\n\t\t\telse if (i > 0) f=!f;\n\t\t}\n\t}\n\tif (t > max) max=t;\n\tif (u > max) max++;\n\t\n\tprintf(\"%d\\n\",max);\n}\n", "fixed": "#include <stdio.h>\n\nchar a[100001];\n\nint main()\n{\n\tint n, i, t=0, sum=0, temp=0, max=0;\n\t\n\tscanf(\"%d\",&n), scanf(\"%s\",a);\n\t\n\tfor (i=0;i<n;i++) {\n\t\tif (a[i] == 'G') {\n\t\t\tsum++;\n\t\t\tif (i==0) {\n\t\t\t\tt=temp=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (a[i-1] == 'G') t++, temp++;\n\t\t\telse t=1, temp++;\n\t\t}\n\t\tif (a[i] == 'S') {\n\t\t\tif (t > max) max=t;\n\t\t\tif (temp > max) max=temp;\n\t\t\ttemp=t;\n\t\t\tt=0;\n\t\t}\n\t}\n\tif (t > max) max=t;\n\tif (temp > max) max=temp;\n\tif (sum > max) max++;\n\t\n\tprintf(\"%d\\n\",max);\n}\n"}
{"similarity_score": 0.21021377672209027, "equal_cnt": 29, "replace_cnt": 24, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 30, "lang": "GNU C11", "fix_code_uid": "c42071bc01ff2a6c866e7a80ca1f8c9c", "bug_code_uid": "101743e0d64d3a4c1eda752befc5fbc8", "src_uid": "0937a7e2f912fc094cc4275fd47cd457", "apr_id": "1b9eb80a626b30346fb576772199cc64", "difficulty": 1500, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//Division into teams: https://codeforces.com/problemset/problem/149/C\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint compare(const void * a, const void * b);\n\nint main() {\n    freopen(\"input.txt\", \"r\", stdin);\n    //freopen(\"output.txt\", \"w\", stdout);\n\n    long n;\n    scanf(\"%ld\", &n);\n    long a[n];\n\n    for (int i = 0; i < n; i++)\n        scanf(\"%ld\", &a[i]);\n\n    qsort(a, n, sizeof(a[0]), compare);\n\n    printf(\"%ld\\n\", (n + 1) / 2);\n    for (int i = 0; i < n; i += 2) {\n            printf(\"%d \", i + 1);\n    }\n    printf(\"\\n\");\n\n    printf(\"%ld\\n\", n / 2);\n    for (int i = 1; i < n; i += 2) {\n        if (i != (n / 2) - 1)\n            printf(\"%d \", i + 1);\n    }\n\n    return 0;\n}\n\nint compare(const void * a, const void * b) {\n    return (*(int *) a - *(int *) b);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\ntypedef struct player{\n    int no;\n    int abi;\n}Player;\nint cmp(const void *a,const void *b)\n{\n    if( ((Player*)a)->abi > ((Player*)b)->abi ) return 1;\n    else if( ((Player*)a)->abi == ((Player*)b)->abi ) return 0;\n    else return -1;\n}\nint main()\n{\n    int n;\n    Player p[100000];\n    scanf(\"%d\",&n);\n    int k;\n    for(k=0;k<n;k++){\n        scanf(\"%d\",&p[k].abi);\n        p[k].no=k+1;\n    }\n    qsort(p,n,sizeof(Player),cmp);\n    if(n%2==0){\n        printf(\"%d\\n\",n/2);\n        for(k=0;k<n;k+=2) printf(\"%d \",p[k].no);\n        printf(\"\\n%d\\n\",n/2);\n        for(k=1;k<n;k+=2) printf(\"%d \",p[k].no);\n    }\n    else\n    {\n        printf(\"%d\\n\",n/2+1);\n        for(k=0;k<n-2;k+=2) printf(\"%d \",p[k].no);\n        printf(\"%d\",p[n-2].no);\n        printf(\"\\n%d\\n\",n/2);\n        for(k=1;k<n-2;k+=2) printf(\"%d \",p[k].no);\n        printf(\"%d\",p[n-1].no);\n    }\n    return 0;\n}"}
{"similarity_score": 0.976915974145891, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "98dfe66013b3f39b9fcfa4323a062eb1", "bug_code_uid": "dbab80499662929c621b93a0d42416cc", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "479a20377200632bb003118d959b26e1", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint ans [100];\nint main()\n{\n    int n,v,i,j,a,b;\n    scanf(\"%d%d\",&n,&v);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        while(a--)\n        {\n            scanf(\"%d\",&b);\n            if(b<v)\n            {\n                ans[++ans[0]]=i+1;\n                break;\n            }\n        }\n        while(a--)\n            scanf(\"%d\",&b);\n    }\n    int x=ans[0];\n    printf(\"%d\\n\",x);\n    if(x)\n    {\n        for(i=1;i<=x;i++)\n            printf(\"%d \",ans[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint ans [100];\nint main()\n{\n    int n,v,i,j,a,b;\n    scanf(\"%d%d\",&n,&v);\n    for(i=0;i<n;i++)\n    {\n        \n        scanf(\"%d\",&a);\n        while(a--)\n        {\n            scanf(\"%d\",&b);\n            if(b<v)\n            {\n                ans[++ans[0]]=i+1;\n                break;\n            }\n        }\n        if(a>0)\n        while(a--)\n            scanf(\"%d\",&b);\n    }\n    int x=ans[0];\n    printf(\"%d\\n\",x);\n    if(x)\n    {\n        for(i=1;i<=x;i++)\n            printf(\"%d \",ans[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.158311345646438, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3f6fc62a19a41206a283eab79cc1ed65", "bug_code_uid": "ac7cd08e4d3ec6c9d638de5b6a2a5a66", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "6feec91297898c83f3f05772d11b9be3", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i,n,j=0,k=0,p=0,a1[101];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n         scanf(\"%d\",&a1[i]);\n         \n    }\n    \n     for(i=0;i<n-1;i++)\n    {\n        j=a1[i];\n        if(a1[i+1]>a1[i])\n        {\n            j=a1[i+1];\n        }\n    \n    \n    }\n     for(i=0;i<n;i++)\n    {\n        k=j-a1[i];\n        p=p+k;\n        \n    \n    \n    }\n    printf(\"%d\",p);\n   \n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,i,j=0,k=0,s1[10000],max=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&s1[i]);\n        if(s1[i]>max)\n        {\n            max=s1[i];\n        }\n        \n    }\n    for(i=0;i<n;i++)\n    {\n        k=max-s1[i];\n        j=j+k;\n    }\n    printf(\"%d\",j);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9809782608695652, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0fdd22415dc8e7570338b3ef2db507e3", "bug_code_uid": "5525d342cfe55d3e39f142e684cbb98c", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "c83a9675208a4e98c48eeeaf99468ecd", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, arr[200005], i, length = 1;\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t\tarr[i+n] = arr[i];\n\t}\n\tint a = 2*n;\n\tfor(i=1;i<a;i++)\n\t{\n\t\tif(arr[i]>=arr[i-1])\n\t\t{\n\t\t\tlength++;\n\t\t\tif(length == n)\n\t\t\t\tbreak;\n\t\t}\n\t\telse length = 1;\n\t}\n\tif(length == n)\n\t\tprintf(\"%d\\n\", i-n+1);\n\telse    printf(\"-1\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, arr[200005], i, length = 1;\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t\tarr[i+n] = arr[i];\n\t}\n\tint a = 2*n;\n\tfor(i=1;i<a;i++)\n\t{\n\t\tif(arr[i]>=arr[i-1])\n\t\t{\n\t\t\tlength++;\n\t\t\tif(length == n)\n\t\t\t\tbreak;\n\t\t}\n\t\telse length = 1;\n\t}\n\tif(length == n)\n\t\tprintf(\"%d\\n\", (2*n-i-1)%n);\n\telse    printf(\"-1\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9097303634232122, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4bf3c6b5c8d698ed4798a058b8861e93", "bug_code_uid": "e57328dd281221d6d983c9edd2466a97", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "2e61945b2bad3e50766c89712c06d182", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long n, m,a[1000000], i, t=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    for(i=1;i<m;i++)\n    {\n        if(a[0]>1)\n        {\n            t+=a[0]-1;\n        }\n        if(a[i]>a[i-1])\n        {\n            t+=a[i]-a[i-1];\n        }\n        if(a[i]<a[i-1])\n        {\n            t+=n-a[i-1]+1+a[i]-1;\n        }\n    }\n    printf(\"%I64d\",t);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long n, m,a[1000000], i, t=0;\n    scanf(\"%I64d %I64d\",&n,&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    t+=a[0]-1;\n    for(i=1;i<m;i++)\n    {\n        if(a[i]>a[i-1])\n        {\n            t+=a[i]-a[i-1];\n        }\n        if(a[i]<a[i-1])\n        {\n            t+=n-a[i-1]+1+a[i]-1;\n        }\n    }\n    printf(\"%I64d\",t);\n    return 0;\n}"}
{"similarity_score": 0.9613869188337274, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "84c52ac3669b9507f3a40e2dfc3befb1", "bug_code_uid": "d51c116f7ff12cd27c1f2cd359d9657d", "src_uid": "26f1b8c3cb83603c904e1508df4067f4", "apr_id": "348cc2e20d8609065fe0492408a21ff5", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 200000\n\nint top;\nchar stack[N+10];\nchar phrase[N+10];\n\nvoid erase(char *phrase){\n    int i,top;\n    for(top=i=0; phrase[i]!='\\n'&&phrase[i]!='\\0'; ++i){\n        if(top){\n            if(stack[top-1]==phrase[i])\n                --top;\n            else\n                stack[top++]=phrase[i];\n        }else\n            stack[top++]=phrase[i];\n    }\n    stack[top++]='\\0';\n}\n\nint main(void){\n#ifndef ONLINE_JUDGE\n    freopen(\"81A.in\", \"rb\", stdin);\n#endif\n    while(fgets(phrase, N, stdin)!=NULL){\n        erase(phrase);\n        puts(stack);\n    }\n#ifndef ONLINE_JUDGE\n    fclose(stdin);\n#endif\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define N 200000\n\nint top;\nchar stack[N+10];\nchar phrase[N+10];\n\nvoid erase(char *phrase){\n    int i;\n    for(i=0; phrase[i]!='\\n'&&phrase[i]!='\\0'; ++i){\n        if(top){\n            if(stack[top-1]==phrase[i])\n                --top;\n            else\n                stack[top++]=phrase[i];\n        }else\n            stack[top++]=phrase[i];\n    }\n    stack[top]='\\0';\n}\n\nint main(void){\n#ifndef ONLINE_JUDGE\n    freopen(\"81A.in\", \"rb\", stdin);\n#endif\n    top=0;\n    while(fgets(phrase, N, stdin)!=NULL){\n        erase(phrase);\n    }\n    puts(stack);\n#ifndef ONLINE_JUDGE\n    fclose(stdin);\n#endif\n    return 0;\n}\n"}
{"similarity_score": 0.9687836383207751, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c93f6136844398fb1543767e54c5fe66", "bug_code_uid": "f769dd7f196a744790232f0e62c34ef7", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "9786ecb712809c5d3dccbfab9ee725d7", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n \n#include <string.h>\n\n\nint premier(int n)\n{  int i;\n\tfor(i=2;i<=n/2;i++)\n\t  if(n%i==0)\n\t  return 0;\n\t  \n\t  return 1;\n\t\n}\n \n\n\nint main()\n{\n     long n,i ;\n     int s=0;\n     i=2;\n     scanf(\"%d\",&n);\n     do{\n     \tif(premier(i))\n     \ts++;\n     \ti++;\n     \t\n\t }while(i<n);\n   \n   printf(\"%d\\n\",s);\n   if(n%2==0)\n      for(i=0;i<n/2;i++)\n      printf(\"2 \");\n   else {\n   for(i=0;i<(n/2)-1;i++)\n      printf(\"2 \");\n      printf(\"3\");\n}\n\n}", "fixed": "\n#include <stdio.h>\n \n#include <string.h>\n\n\nint premier(int n)\n{  int i;\n\tfor(i=2;i<=n/2;i++)\n\t  if(n%i==0)\n\t  return 0;\n\t  \n\t  return 1;\n\t\n}\n \n\n\nint main()\n{\n     long n,i ;\n     int s=0;\n     i=2;\n     \n     scanf(\"%d\",&n);\n     \n\t \n\t do{\n     \tif(premier(i))\n     \ts++;\n     \ti++;\n     \t\n\t }while(i<n);\n   printf(\"%d\\n\",n>>1);\n   \n   if(n%2==0)\n      for(i=0;i<n/2;i++)\n      printf(\"2 \");\n   else {\n   for(i=0;i<(n/2)-1;i++)\n      printf(\"2 \");\n      printf(\"3\");\n}\n\n}"}
{"similarity_score": 0.994991652754591, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "24245f2b452b7ddc89878586f36092cf", "bug_code_uid": "d46098dbbda58aa5851904139483713d", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "463fbe841f8018fae1d516fe7ad04125", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int t, a;\n    scanf(\"%d\", &test);\n    while(t--)\n    {\n        scanf(\"%d\", &a);\n        if( 360 % (180-a) ==0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int t, a;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &a);\n        if( 360 % (180-a) ==0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3450087565674256, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "d2b99a69228372e1b15402f11c3d166a", "bug_code_uid": "83d8e6624d887990f43fa231ec491d02", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "c2197b2d86f0f1ef4a0bfd89d98cf4a6", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,t,n,x,a,b,c,e,f,g;\n    scanf(\"%d\",t);\n    for(i=0;i<t;i++){\n        scanf(\"%d%d%d%d\",&n,&x,&a,&b);{\n        c=(b-a)+x;{\n        if(c>0){\n            if(c>=n){\n                e=n-1;\n                printf(\"%d\\n\",e);\n            }\n            if(c<n){\n                printf(\"%d\\n\",c);\n            }\n        }\n        else if(c<0){\n            f=-c;\n            if(f>=n){\n                    g=n-1;\n                printf(\"%d\\n\",g);\n            }\n            else if(f<n){\n                printf(\"%d\\n\",f);\n            }\n        }\n    }}}\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,t,n,x,a,b,c,d,e;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d%d%d%d\",&n,&x,&a,&b);\n        {\n           {\n               e=a-b;\n            if(e>0){\n                e=e;\n            }\n            else if(e<0){\n                e=e*(-1);\n            }}\n            {\n                c=e+x;\n                if(c<n){\n                printf(\"%d\\n\",c);\n            }\n            else if(c>=n){\n                d=n-1;\n                printf(\"%d\\n\",d);\n            }\n        }}}\n        return 0;\n}\n"}
{"similarity_score": 0.259927797833935, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "22cc2f00f586fa5dc6e113997ff98a02", "bug_code_uid": "a1e266d1f76171295ee6ea43d8e99248", "src_uid": "33e751f5716cbd666be36ab8f5e3977e", "apr_id": "d98e4f6d3efc6a68b6f01c055e810d60", "difficulty": 800, "tags": ["brute force", "combinatorics", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int a[n];\r\n        for(int i = 0; i < n; i++){\r\n            scanf(\"%d\", a[n]);\r\n            printf(\"%d\", 3*(10-n)*(9-n));\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nvoid password_Solve(){\r\n    int numberWrongDigits = 0;\r\n    scanf(\"%d\", &numberWrongDigits);\r\n    for(int i=0; i<numberWrongDigits; i++){\r\n        int digits;\r\n        scanf(\"%d\", &digits);\r\n    }\r\n    int possibleDigits =  10 - numberWrongDigits;\r\n    possibleDigits = possibleDigits*(possibleDigits-1)/2;\r\n    possibleDigits = 6*possibleDigits;\r\n    printf(\"%d\\n\", possibleDigits);\r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i<t; i++){\r\n        password_Solve();\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9850746268656716, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "972396a0e3223d0b97caf1facc457b5a", "bug_code_uid": "6718b62a4aae9be96a732188584bc727", "src_uid": "821d48c9a67d37ad7acc50d4d0d0d723", "apr_id": "d664c62d1d87a6dc9a7faaf79e4c31a4", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n       int t,a,b,c,d,x,y,z;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n            printf(\"%d %d %d\\n\",a,d,d);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n       int t,a,b,c,d,x,y,z;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n            printf(\"%d %d %d\\n\",a,c,c);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5380530973451327, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "5cd46faa339f4301e15aa9241c6c1f4a", "bug_code_uid": "460088db610511f6b1668f43d18b08df", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "daf4585739178dfdefd9579311ae4c09", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nint a,b,c;\r\nfor(int i=0;i<=t;i++){\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n    if(a+b==c || b+c==a||a+c==b)\r\n        printf(\"YES\\n\");\r\n    else\r\n        printf(\"NO\\n\");\r\n}\r\nreturn 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nint a[3];\r\nint i,j;\r\nwhile(t--){\r\n    int a,b,c;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n    int x,y,z;\r\n    x=a+b;\r\n    y=b+c;\r\n    z=c+a;\r\n    if((x==c) ||(y==a)||(z==b)){\r\n        printf(\"YES\\n\");\r\n    }\r\n    else{\r\n        printf(\"NO\\n\");\r\n    }\r\n}\r\n\r\nreturn 0;\r\n}\r\n\r\n\r\n"}
{"similarity_score": 0.769139465875371, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "46a0b83609ed87b8b6ed5358e521a054", "bug_code_uid": "6d148683c999c819a72e2af9fe3b9373", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "c84b3ea9df414fbe3e918e7198e80d79", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//Program created by Amine Elmouradi date()\n\n#include <stdio.h>\nint main(void)\n{\n\tint n;\n\tint a[100];\n\tfloat sum1 = 0;\n\tfloat sum2 = 0;\n\tint counter = 0;\n\n\tscanf(\"%d\",&n);\n\tfor (int i = 0 ; i < n ; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum1 += a[i];\n\t}\n\tsum1 = sum1/2;\n\tint tableSorted = 0 ;\n\tint temp;\n\t//Bubble sort!\n\twhile ( !tableSorted)\n\t{\n\t\t\ttableSorted = 1;\n\t\t\tfor (int i = 0 ; i < n ; i++)\n\t\t\t{\n\t\t\t\tif (a[i]<a[i+1])\n\t\t\t\t{\n\t\t\t\t\ttemp  = a[i];\n\t\t\t\t\ta[i] = a[i+1];\n\t\t\t\t\ta[i+1] = temp;\n\t\t\t\t\ttableSorted = 0;\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\tfor (int i = 0 ; i < n ; i++)\n\t{\n\n\t\tsum2+= a[i];\n\n\t\tcounter++;\n\t\tif (sum1 < sum2)break;\n\t}\n\tprintf(\"%d\",counter);\n\n\treturn 0;\n}\n", "fixed": "//Program created by Amine Elmouradi date()\n\n/*#include <stdio.h>\nint main(void)\n{\n\tint n;\n\tint a[100];\n\tfloat sum1 = 0;\n\tfloat sum2 = 0;\n\tint counter = 0;\n\n\tscanf(\"%d\",&n);\n\tfor (int i = 0 ; i < n ; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum1 += a[i];\n\t}\n\tsum1 = sum1/2;\n\tint tableSorted = 0 ;\n\tint temp;\n\t//Bubble sort!\n\twhile ( !tableSorted)\n\t{\n\t\t\ttableSorted = 1;\n\t\t\tfor (int i = 0 ; i < n ; i++)\n\t\t\t{\n\t\t\t\tif (a[i]<a[i+1])\n\t\t\t\t{\n\t\t\t\t\ttemp  = a[i];\n\t\t\t\t\ta[i] = a[i+1];\n\t\t\t\t\ta[i+1] = temp;\n\t\t\t\t\ttableSorted = 0;\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\tfor (int i = 0 ; i < n ; i++)\n\t{\n\n\t\tsum2+= a[i];\n\n\t\tcounter++;\n\t\tif (sum1 < sum2)break;\n\t}\n\tprintf(\"%d\",counter);\n\n\treturn 0;\n}\n*/\n#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint s=0,count=1,j,i,n,arr[100],sum=0;\nscanf(\"%d\",&n);\n\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&arr[i]);\ns+=arr[i];\n}\n\n\nfor(i=0;i<n;i++)//bubble sort\nfor(j=1;j<n-i;j++)\nif(arr[j]<arr[j-1])\narr[j]=arr[j-1]-arr[j]+(arr[j-1]=arr[j]);\n\nfor(i=n-1;i>=0;i--)\n{\n\nsum+=arr[i];\nif(sum>(s-sum))\n{\n\tbreak;\n}\ncount++;\n}\n\n\n\nprintf(\"%d\",count);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.8436763550667714, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e8147a800c49f29c5f095a17f2d317cf", "bug_code_uid": "2e881acef4535c818e28e907e220f456", "src_uid": "f110b9351fe8ff20676d11ecfc92aee3", "apr_id": "d06815edba45424fc620ca5fcb8318f6", "difficulty": 1300, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//Created by Pratik Paras Mandlecha\n#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\nint flag=0,c=0,ans=0;\nint cmp(const void *p,const void *q)\n{\n\tif(*(int *)p==(-1)*(*(int *)q)) {flag=1;c++;}\n\treturn *(int *)p-*(int *)q;\n}\nint main()\n{\n\tint i,n,m,k,j;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tint a[j],k;\n\t\tfor(k=0;k<j;k++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[k]);\n\t\t//\tif(a[k]<0) a[k]*=(-1);\n\t\t}\n\t\tqsort(a,j,sizeof(int),cmp);\n\t\tif(c>0) \n\t\t{\n\t\t\tans+=1;\n\t\t//\tprintf(\"%d\\n\",c);\n\t\t}\n\t\tc=0;\n\t}\n\tif(ans==m) printf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n\n\n\n\n\n\n\treturn 0;\n}\n", "fixed": "//Created by Pratik Paras Mandlecha\n#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\nint flag=0,c=0,ans=0;\nint cmp(const void *p,const void *q)\n{\n\tif(*(int *)p==(-1)*(*(int *)q)) {flag=1;c++;\n\tprintf(\"%d %d \\n\",*(int *)p,*(int *)q);\n\t}\n\treturn *(int *)p-*(int *)q;\n}\nint main()\n{\n\tint i,n,m,k,j;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tint a[j],k;\n\t\tfor(k=0;k<j;k++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[k]);\n\t\t//\tif(a[k]<0) a[k]*=(-1);\n\t\t}\n\t\tint y;\n\t\tfor(k=0;k<j;k++)\n\t\t{\n\t\t\tfor(y=0;y<j;y++)\n\t\t\t{\n\t\t\t\tif(a[y]==((-1)*a[k])) {c++;break;}\n\t\t\t}\n\t\t}\n\t\tif(c>0) \n\t\t{\n\t\t\tans+=1;\n\t\t}\n\t\tc=0;\n\t}\n\tif(ans==m) printf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.5962145110410094, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "fb611069a4f12c1193bedfae321cb8df", "bug_code_uid": "3660756e1c67df0565109f7c62b4fcf2", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "b6754710de805539ccaa504b8826fe79", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{int a[100001],i,j,p;\nchar s[100001];\nscanf(\"%s\",s);\nfor(i=0;i<strlen(s);i++)\n{a[i]=s[i]-48;}\nfor(i=0;i<strlen(s);i++)\n{if(a[i]==0)\n {p=i;break;}\n}\n for(i=0;i<strlen(s);i++)\n {if(p!=i)\n   printf(\"%d\",a[i]);\n }\n printf(\"\\n\");\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{int a[100001],i,j,count=0,p,pwq;\nchar s[100001];\nscanf(\"%s\",s);\np=strlen(s);\nfor(i=0;i<p;i++)\n{a[i]=s[i]-48;}\nfor(i=0;i<p;i++)\n{if(a[i]==0)\n {count++;pwq=i;break;}\n}\nif(count==0)\n{for(i=0;i<p-1;i++)\nprintf(\"%d\",a[i]);\n}\nelse\nfor(i=0;i<p;i++)\n{if(i!=pwq)\n printf(\"%d\",a[i]);\n}\nprintf(\"\\n\");\nreturn 0;\n}"}
{"similarity_score": 0.7569721115537849, "equal_cnt": 33, "replace_cnt": 18, "delete_cnt": 9, "insert_cnt": 6, "fix_ops_cnt": 33, "lang": "GNU C", "fix_code_uid": "2b914399156dd89ad4bad24d63fbb4ad", "bug_code_uid": "82d8d18c3a794a7431d295fef2ca61e7", "src_uid": "8b61213e2ce76b938aa68ffd1e4c1429", "apr_id": "33419a2f4fdd67b35207483be3c55e42", "difficulty": 1600, "tags": ["sortings", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define eps 0.0000000001\ndouble arr_x[100002][2], arr_y[100002][2];\nint comp(const void *a, const void *b)\n{\n    return (*(double*)a < *(double*)b );\n}\nint main(){\ndouble x,y,b,c,d,e,f,g=0;\nint a,i;\nscanf(\"%d\",&a);\nscanf(\"%lf%lf\",&x,&y);\nfor(i=0;i<a;i++){\n int q,w;\n scanf(\"%d%d\",&q,&w);\n    arr_x[i][0] = ((q*x)+b)+eps;\n    arr_x[i][1] = i;\n\n    arr_y[i][0] = ((q*y)+b)-eps;\n    arr_y[i][1] = i;\n}\nqsort(arr_x,a,sizeof(double)*2,comp);\nqsort(arr_y,a,sizeof(double)*2,comp);\nfor(i=0;i<a;i++){\n        if(arr_x[i][1]!=arr_y[i][1]){\n                printf(\"YES\");\n        return 0;\n        }\n}\nprintf(\"NO\");\n\n}\n", "fixed": "#include<stdio.h>\n#define eps 0.000000001\ndouble arr_x[100002][2];\ndouble arr_y[100002][2];\nint cmp(const void * a, const void * b) {\n    return *((double *)a) < *((double *)b);\n}\nint main(){\nint a,i;\nint x,y;\nscanf(\"%d\",&a);\nscanf(\"%d%d\",&x,&y);\nfor(i=0;i<a;i++){\n int q,w;\n scanf(\"%d%d\",&q,&w);\n   arr_x[i][0] = q*(x+eps)+w;\n   arr_x[i][1] = i;\n\n   arr_y[i][0] = q*(y-eps)+w;\n   arr_y[i][1] = i;\n}\nqsort(arr_x,a,sizeof(double)*2,cmp);\nqsort(arr_y,a,sizeof(double)*2,cmp);\nfor (i = 0; i < a; ++i)\n        if (arr_x[i][1] != arr_y[i][1]) {\n            puts(\"yes\");\n            exit(0);\n        }\n\n    puts(\"no\");\n    exit(0);\n}\n"}
{"similarity_score": 0.9149868536371604, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d80c735edb5e9e81b2a8e8270df1ec8f", "bug_code_uid": "32ab64ac6a77629c95aa826f25c1b016", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "05b8201492cbf391f596351e1e63d8ca", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\ntypedef struct {int a, b;} input;\nint comp(const void *a, const void *b)\n{\n    input aa=*(input *)a, bb=*(input *)b;\n    return (aa.a<bb.a?-1:(aa.a>bb.a?1:0));\n}\nint min(int a, int b) {return a<b?a:b;}\nint n, val;\ninput inp[5555];\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i=0; i<n; i++) scanf(\"%d%d\", &inp[i].a, &inp[i].b);\n    qsort(inp, n, sizeof(input), comp);\n    for (int i=0; i<n; i++) val=val<=inp[i].b?inp[i].b:inp[i].a;\n    printf(\"%d\\n\", val);\n}\n", "fixed": "#include <limits.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\ntypedef struct {int a, b;} input;\nint comp(const void *a, const void *b)\n{\n    input aa=*(input *)a, bb=*(input *)b;\n    if (aa.a<bb.a) return -1;\n    if (aa.a>bb.a) return 1;\n    return (aa.b<bb.b?-1:(aa.b>bb.b?1:0));\n}\nint min(int a, int b) {return a<b?a:b;}\nint n, val;\ninput inp[5555];\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i=0; i<n; i++) scanf(\"%d%d\", &inp[i].a, &inp[i].b);\n    qsort(inp, n, sizeof(input), comp);\n    for (int i=0; i<n; i++) val=val<=inp[i].b?inp[i].b:inp[i].a;\n    printf(\"%d\\n\", val);\n}\n"}
{"similarity_score": 0.9416755037115588, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "dc2266910227de58cd97ba13fabf8a5f", "bug_code_uid": "bf532bdd09e19be813b2a5c84d0418a2", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "491477d4067f79e08651c87768bd7133", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    long int q, a, b, n, S;\n    long int i, S2, S3, b2;\n    scanf(\"%ld\", &q);\n    for(i = 0; i < q; i++){\n        scanf(\"%ld\", &a);\n        scanf(\"%ld\", &b);\n        scanf(\"%ld\", &n);\n        scanf(\"%ld\", &S);\n        /*\n        while((S >= n) && (a > 0)){\n            S -= n;\n            a--;\n        }\n        if(S > b){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n        }\n        */\n       /*\n        S2 = S / n;\n        if(a <= S2){\n            S = S - a * n;\n        }else{\n            S= S - S2 * n;\n        }\n        if(S > b){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n        }\n        */\n        S3 = S % n;\n        S2 = S - S3;\n        a = a * n;\n        if(a <= S2){\n            S3 = S - a;\n        }\n        if(S3 > b){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n        }\n    \n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    long int q, a, b, n, S;\n    long int i, S2, S3, b2;\n    scanf(\"%ld\", &q);\n    for(i = 0; i < q; i++){\n        scanf(\"%ld\", &a);\n        scanf(\"%ld\", &b);\n        scanf(\"%ld\", &n);\n        scanf(\"%ld\", &S);\n        /*\n        while((S >= n) && (a > 0)){\n            S -= n;\n            a--;\n        }\n        if(S > b){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n        }\n        */\n       /*\n        S2 = S / n;\n        if(a <= S2){\n            S = S - a * n;\n        }else{\n            S= S - S2 * n;\n        }\n        if(S > b){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n        }\n        */\n        S3 = S % n;\n        S2 = S/n;\n        if(a <= S2){\n            S3 = S - a*n;\n        }\n        if(S3 > b){\n            printf(\"NO\\n\");\n        }else{\n            printf(\"YES\\n\");\n        }\n    \n    }\n    return 0;\n}"}
{"similarity_score": 0.46972269383135257, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "ac857f9e3dccd0cc5bed6599a9bdd9e3", "bug_code_uid": "49c61d3de69029c53124af8f4c9f5612", "src_uid": "6cf43241b14e4d41ad5b36572f3b3663", "apr_id": "e3865ae9e53f4f448329a0da2bff0c4a", "difficulty": 1500, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N 1000\n\nint dsu[N];\n\nint find(int i) {\n\treturn dsu[i] < 0 ? i : (dsu[i] = find(dsu[i]));\n}\n\nvoid join(int i, int j) {\n\ti = find(i);\n\tj = find(j);\n\tif (i == j)\n\t\treturn;\n\tif (dsu[i] > dsu[j])\n\t\tdsu[i] = j;\n\telse {\n\t\tif (dsu[i] == dsu[j])\n\t\t\tdsu[i]--;\n\t\tdsu[j] = i;\n\t}\n}\n\nint main() {\n\tstatic char gg[N];\n\tstatic int kk[N];\n\tint n, m, k, i, j, x, y;\n\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\twhile (k--) {\n\t\tscanf(\"%d\", &i), i--;\n\t\tgg[i] = 1;\n\t}\n\tmemset(dsu, -1, n * sizeof *dsu);\n\twhile (m--) {\n\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\tjoin(i, j);\n\t}\n\tfor (i = 0; i < n; i++)\n\t\tkk[find(i)]++;\n\tx = y = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (dsu[i] < 0 && x < kk[i])\n\t\t\tx = kk[i];\n\t\tif (kk[i] == 1 && !gg[i])\n\t\t\ty++;\n\t}\n\tprintf(\"%d\\n\", x * y);\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <stdio.h>\n#include <string.h>\n\n#define N 1000\n\nint dsu[N];\n\nint find(int i) {\n\treturn dsu[i] < 0 ? i : (dsu[i] = find(dsu[i]));\n}\n\nvoid join(int i, int j) {\n\tint tmp;\n\n\ti = find(i);\n\tj = find(j);\n\tif (i == j)\n\t\treturn;\n\tif (dsu[i] > dsu[j])\n\t\ttmp = i, i = j, j = tmp;\n\tdsu[i] += dsu[j];\n\tdsu[j] = i;\n}\n\nint main() {\n\tstatic char gg[N];\n\tstatic int ii[N];\n\tint n, m, m_, k, h, i, i_, j;\n\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tfor (h = 0; h < k; h++)\n\t\tscanf(\"%d\", &ii[h]), ii[h]--;\n\tmemset(dsu, -1, n * sizeof *dsu);\n\tfor (h = 0; h < m; h++) {\n\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\tjoin(i, j);\n\t}\n\tfor (h = 0; h < k; h++)\n\t\tgg[find(ii[h])] = 1;\n\ti_ = -1;\n\tfor (i = 0; i < n; i++)\n\t\tif (gg[i] && (i_ == -1 || dsu[i_] > dsu[i]))\n\t\t\ti_ = i;\n\tfor (i = 0; i < n; i++)\n\t\tif (dsu[i] < 0 && !gg[i])\n\t\t\tjoin(i, i_);\n\tm_ = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (dsu[i] < 0) {\n\t\t\tint cnt = -dsu[i];\n\n\t\t\tm_ += cnt * (cnt - 1) / 2;\n\t\t}\n\tprintf(\"%d\\n\", m_ - m);\n\treturn 0;\n}\n"}
{"similarity_score": 0.892, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "16041fe2411f693ffca1cff9f6f5525f", "bug_code_uid": "eec599b074e6758341996d8edd9d4d02", "src_uid": "1a3b22a5a8e70505e987d3e7f97e7883", "apr_id": "8a2acbfe954bda2aa24a3d86e04cf8fe", "difficulty": 1600, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n__int64 s[200001]={0};\nint main(void)\n{\n\tint n,i,c;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&c);\n\t\t\tif(c==1)\n\t\t\ts[i]=s[i-1]+1;\n\t\t\telse\n\t\t\ts[i]=s[i-1];\n\t\t}\n\t\tprintf(\"%I64d\\n\",s[n]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n__int64 s[200001]={0};\nint main(void)\n{\n\tint n,i,c,t;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tt=0;\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&c);\n\t\t\ts[i]=s[i-1]; \n\t\t\tif(c==1)\n\t\t\tt++;\n\t\t\telse\n\t\t\ts[i]+=t;\n\t\t}\n\t\tprintf(\"%I64d\\n\",s[n]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8897586431833007, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "65bc90cfb66fd83499890f4508b7b23e", "bug_code_uid": "df34085ee3f9c1b45a7ca8d1033fad28", "src_uid": "4b423274448ff3f0dee7644203706805", "apr_id": "c8cbf9288c4a8561d3871228218a4b06", "difficulty": 1500, "tags": ["two pointers", "implementation", "bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint a[100000],f[100001];\nmain()\n{\n    int i,j,k,n,l,r,d;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    l=0;\n    f[a[l]]++;\n    d=1;\n    if(d==k)\n    {\n        printf(\"%d %d\\n\",l+1,l+1);\n        return 0;\n    }\n    for(j=1;j<n;j++)\n    {\n        if(f[a[j]]==0)\n        {\n            d++;\n            f[a[j]]++;\n            if(d==k)\n            break;\n            continue;\n\n        }\n        f[a[j]]++;\n\n    }\n    if(d<k)\n    {\n        printf(\"-1 -1\\n\");\n        return 0;\n    }\n    l=0;\n    r=j;\n    for(i=l;i<=r;i++)\n    {\n        if(f[a[i]]>1)\n        {\n            f[a[i]]--;\n            l++;\n        }\n        if(f[a[i]]==1)\n        break;\n    }\n    printf(\"%d %d\\n\",l+1,r+1);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint a[100000],f[100001];\nmain()\n{\n    int i,j,k,n,l,r,d;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    l=0;\n    f[a[l]]++;\n    d=1;\n    if(d==k)\n    {\n        printf(\"%d %d\\n\",l+1,l+1);\n        return 0;\n    }\n    for(j=1;j<n;j++)\n    {\n        if(f[a[j]]==0)\n        {\n            d++;\n            f[a[j]]++;\n            if(d==k)\n            break;\n            continue;\n\n        }\n        f[a[j]]++;\n\n    }\n    if(d<k)\n    {\n        printf(\"-1 -1\\n\");\n        return 0;\n    }\n    l=0;\n    r=j;\n    for(i=l;i<=r;i++)\n    {\n        if(f[a[i]]==1)\n        break;\n        if(f[a[i]]>1)\n        {\n            f[a[i]]--;\n            l++;\n        }\n        \n    }\n    printf(\"%d %d\\n\",l+1,r+1);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9702276707530648, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e31b5c34d83e0ad661a1ddbb6cd72e6e", "bug_code_uid": "2836d39065a5419d9c2f76947febb199", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "d65488b064bf89bed75eaa202c85a99b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n//#include <string.h>\n#include <math.h>\n\n\nint main()\n{\n  long int arr[4], max, sum;\n  int t, i;\n  scanf(\"%d\",&t);\n  while (t--)\n  {\n    max = 0;\n    sum = 0;\n   for (i = 0;i < 4;i++) \n     scanf(\"%ld\",&arr[i]);\n   for (i = 0;i < 3;i++)\n     max = max > arr[i]? max : arr[i];\n   for (i = 0;i < 3;i++)\n   {\n     arr[i] = max - arr[i];\n     sum += arr[i];\n   }  \n   if (n < sum)\n     printf(\"NO\\n\");\n   else\n   {\n     n = n - sum;\n     if (n%3)\n       printf(\"NO\\n\");\n     else\n       printf(\"YES\\n\");\n   }\n  }\n  return 0; \n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n//#include <string.h>\n#include <math.h>\n\n\nint main()\n{\n  long int arr[4], max, sum;\n  int t, i;\n  scanf(\"%d\",&t);\n  while (t--)\n  {\n    max = 0;\n    sum = 0;\n   for (i = 0;i < 4;i++) \n     scanf(\"%ld\",&arr[i]);\n   for (i = 0;i < 3;i++)\n     max = max > arr[i]? max : arr[i];\n   for (i = 0;i < 3;i++)\n   {\n     arr[i] = max - arr[i];\n     sum += arr[i];\n   }  \n   if (arr[3] < sum)\n     printf(\"NO\\n\");\n   else\n   {\n     arr[3] = arr[3] - sum;\n     if (arr[3]%3)\n       printf(\"NO\\n\");\n     else\n       printf(\"YES\\n\");\n   }\n  }\n  return 0; \n}"}
{"similarity_score": 0.9791666666666666, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e75cb9e35c5f165362a499e072af6956", "bug_code_uid": "69b880957bdc11c570d9eb385453686f", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "015ce0b0f56e0d5567ba1c0ad8174b10", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,output=0;\nscanf(\"%d\",&n);\n\nwhile(n!=0)\n{\nint a,b,c;\nscanf(\"%d %d %d\",&a,&b,&c);\nint count=0;\nif(a==1)\ncount++;\nif(b==1)\ncount++;\nif(c==1)\ncount++;\nif(count>=2)\n  output++;\n}\nprintf(\"%d\",output);\n\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,output=0;\nscanf(\"%d\",&n);\n\nwhile(n!=0)\n{\nint a,b,c;\nscanf(\"%d %d %d\",&a,&b,&c);\nint count=0;\nif(a==1)\ncount++;\nif(b==1)\ncount++;\nif(c==1)\ncount++;\nif(count>=2)\n  output++;\n  \nn--;  \n}\nprintf(\"%d\",output);\n\n\n}"}
{"similarity_score": 0.8668941979522184, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "04979f7a81f3cdc52dfb03f7bfffdbac", "bug_code_uid": "fa5d14c3b8ffd02f76c56992f9612232", "src_uid": "7c0a288a2777894bdfd75cb9703346e9", "apr_id": "f819b523bfaad5a5c39ce5b2788145a4", "difficulty": 1700, "tags": ["meet-in-the-middle", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define MAXN 100010\nchar a[MAXN],b[MAXN];\nint main()\n{\nint i;\nchar *pa,*pb;\nint max;\nwhile(scanf(\"%s%s\",&a[1],&b[1])!=EOF)\n{\npa=pb=\"0\";\na[0]=b[0]='0';\nmax=strlen(&a[1]);\nif(max<(int)strlen(&b[1]))\nmax=strlen(b);\nfor(i=1;i<max;i++)\n{\nif(a[i]=='1'&&a[i+1]=='1')\n{\na[i-1]='1';\na[i]=a[i+1]='0';\n}\nif(b[i]=='1'&&b[i+1]=='1')\n{\nb[i-1]='1';\nb[i]=b[i+1]='0';\n}\n}\nfor(i=0;i<=max;i++)\nif(a[i]=='1')\n{pa=&a[i];break;}\nfor(i=0;i<max;i++)\nif(b[i]=='1')\n{pb=&b[i];break;}\nif(strlen(pa)>strlen(pb))\nprintf(\">\\n\");\nelse if(strlen(pa)<strlen(pb))\nprintf(\"<\\n\");\n\nelse\n{\nif(strcmp(pa,pb)>0)\nprintf(\">\\n\");\nelse if(strcmp(pa,pb)==0)\nprintf(\"=\\n\");\nelse \nprintf(\"<\\n\");\n}\n\n}\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#define MAXN 100010\nchar a[MAXN],b[MAXN];\nint main()\n{\nint i;\nchar *pa,*pb;\nint max;\nwhile(scanf(\"%s%s\",&a[2],&b[2])!=EOF)\n{\npa=pb=\"0\";\na[0]=a[1]=b[0]=b[1]='0';\nmax=strlen(&a[2]);\nif(max<(int)strlen(&b[2]))\nmax=strlen(b);\nfor(i=2;i<=max;i++)\n{\nif(a[i]=='1'&&a[i+1]=='1')\n{\n\na[i-1]='1';\na[i]=a[i+1]='0';\ni=i-3;\n}\n}\nfor(i=2;i<=max;i++)\n{\nif(b[i]=='1'&&b[i+1]=='1')\n{\n\nb[i-1]='1';\nb[i]=b[i+1]='0';\ni=i-3;\n}\n}\n\nfor(i=0;i<=max+1;i++)\nif(a[i]=='1')\n{pa=&a[i];break;}\nfor(i=0;i<=max+1;i++)\nif(b[i]=='1')\n{pb=&b[i];break;}\n\nif(strlen(pa)>strlen(pb))\nprintf(\">\\n\");\nelse if(strlen(pa)<strlen(pb))\nprintf(\"<\\n\");\nelse\n{\nif(strcmp(pa,pb)>0)\nprintf(\">\\n\");\nelse if(strcmp(pa,pb)==0)\nprintf(\"=\\n\");\nelse \nprintf(\"<\\n\");\n}\n\n}\n\nreturn 0;\n}"}
{"similarity_score": 0.5035294117647059, "equal_cnt": 21, "replace_cnt": 8, "delete_cnt": 7, "insert_cnt": 6, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "d6ba882ab0e3e3e916026b3ddc75a5d8", "bug_code_uid": "6168aae21a593a2ac8d9d4f1a4824e5b", "src_uid": "6ae754639d96790c890f9d1ab259332a", "apr_id": "2909c133b317b93674919da9fa3e1653", "difficulty": 1000, "tags": ["brute force", "geometry", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    for(int i = 1 ; i <=t ; i++)\r\n    {\r\n        long long int p,result;\r\n        scanf(\"%lld\",&p);\r\n        result=(float)log(p)/log(2);\r\n        if(result-(int)result==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main(){\r\n\r\nint t;\r\ndouble n,k;\r\nscanf(\"%d\", &t);\r\n\r\nwhile(t--){\r\n    scanf(\"%lf\", &n);\r\n\r\n        k = sqrt(n/2);\r\n        if(k == (int)k)\r\n        printf(\"YES\\n\");\r\n        else\r\n        {\r\n            k = sqrt(n/4);\r\n            if(k == (int)k) \r\n            printf(\"YES\\n\");\r\n            else \r\n            {\r\n                printf(\"NO\\n\");\r\n            }\r\n        }\r\n\r\n}\r\n\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.8590604026845637, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4ab6daa52a1ebd7adcef061833b4e7fd", "bug_code_uid": "5945388018b10762217db3e1538c76b4", "src_uid": "b8554e64b92b1b9458955da7d55eba62", "apr_id": "9c705a4cf0456e45bb877c67f3c63bb5", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n  unsigned short int n = 0;\r\n  int k = 0;\r\n  unsigned short int i = 0;\r\n  unsigned short int j = 0;\r\n  unsigned short int d = 0;\r\n  unsigned short int del = 0;\r\n  unsigned short int counter = 0;\r\n  unsigned int sum = 0;\r\n  \r\n  scanf(\"%u\", &n);\r\n  \r\n  for(i = 0; i < n; i++){\r\n    scanf(\"%u\", &k);\r\n    \r\n    int *mass = (int*) calloc(k, sizeof( int));\r\n    \r\n    for(j = 0; j < k; j++){\r\n      scanf(\"%u\",&mass[j]);\r\n      sum += mass[j];\r\n    }\r\n    \r\n    if(0 == sum%k){\r\n      del = sum/k;\r\n      for(d = 0; d < k; d++){\r\n        if(mass[d] > del) counter++;\r\n      }\r\n      printf(\"%u\\n\",counter);\r\n    }else{\r\n      printf(\"-1\\n\");\r\n    }\r\n    counter = 0;\r\n    sum = 0;\r\n  }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n  int n = 0;\r\n  int k = 0;\r\n  int i = 0;\r\n  int j = 0;\r\n  int d = 0;\r\n  int del = 0;\r\n  int counter = 0;\r\n  int sum = 0;\r\n  \r\n  scanf(\"%u\", &n);\r\n  \r\n  for(i = 0; i < n; i++){\r\n    scanf(\"%u\", &k);\r\n    \r\n    int *mass = (int*) calloc(k, sizeof( int));\r\n    \r\n    for(j = 0; j < k; j++){\r\n      scanf(\"%u\",&mass[j]);\r\n      sum += mass[j];\r\n    }\r\n    \r\n    if(0 == sum%k){\r\n      del = sum/k;\r\n      for(d = 0; d < k; d++){\r\n        if(mass[d] > del) counter++;\r\n      }\r\n      printf(\"%u\\n\",counter);\r\n    }else{\r\n      printf(\"-1\\n\");\r\n    }\r\n    counter = 0;\r\n    sum = 0;\r\n  }\r\n}\r\n"}
{"similarity_score": 0.9919743178170144, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f1638ddb25b6e7e6c997eeac590102e9", "bug_code_uid": "79a7b980908d4c5ec28257ae5396bd6b", "src_uid": "e86ffda4e59c87acafeb3bf0aa805a52", "apr_id": "cb52e58c3699291df1d807b8237b21a4", "difficulty": 1500, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n  int q,n;\n  int x_max,x_min,y_max,y_min,x_loc,y_loc,x_d,y_u,x_u,y_d;\n  scanf(\"%d\",&q);\n  for(int i=0;i<q;i++) {\n    scanf(\"%d\",&n);\n    ch=0;\n    x_max=100000;\n    x_min=-100000;\n    y_max=100000;\n    y_min=-100000;\n    for(int j=0;j<n;j++) {\n      scanf(\"%d %d %d %d %d %d\",&x_loc,&y_loc,&x_d,&y_u,&x_u,&y_d);\n      if(x_d==0 && x_min<x_loc) x_min=x_loc;\n      if(x_u==0 && x_max>x_loc) x_max=x_loc;\n      if(y_d==0 && y_min<y_loc) y_min=y_loc;\n      if(y_u==0 && y_max>y_loc) y_max=y_loc;\n    }\n    if(x_min>x_max || y_min>y_max) printf(\"0\\n\");\n    else printf(\"1 %d %d\\n\",x_min,y_min);\n  }\n}\n", "fixed": "#include <stdio.h>\nint main() {\n  int q,n;\n  int x_max,x_min,y_max,y_min,x_loc,y_loc,x_d,y_u,x_u,y_d;\n  scanf(\"%d\",&q);\n  for(int i=0;i<q;i++) {\n    scanf(\"%d\",&n);\n    x_max=100000;\n    x_min=-100000;\n    y_max=100000;\n    y_min=-100000;\n    for(int j=0;j<n;j++) {\n      scanf(\"%d %d %d %d %d %d\",&x_loc,&y_loc,&x_d,&y_u,&x_u,&y_d);\n      if(x_d==0 && x_min<x_loc) x_min=x_loc;\n      if(x_u==0 && x_max>x_loc) x_max=x_loc;\n      if(y_d==0 && y_min<y_loc) y_min=y_loc;\n      if(y_u==0 && y_max>y_loc) y_max=y_loc;\n    }\n    if(x_min>x_max || y_min>y_max) printf(\"0\\n\");\n    else printf(\"1 %d %d\\n\",x_min,y_min);\n  }\n}\n"}
{"similarity_score": 0.9789674952198852, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "110d40cabd91743c22b3bedb9f5d0ada", "bug_code_uid": "25fadae82579b4bad3720cf638abdae4", "src_uid": "ed0a8a10e03de931856e287f9e650e1a", "apr_id": "02a6d9718604bb424882544f701540e0", "difficulty": 2200, "tags": ["binary search", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// Gukiz hates boxes\n//%I64d\n#include<stdio.h>\n#define lli long long int\nint check(lli *b,lli n, lli m,lli k, lli j);\n\nint main()\n{\n\tlong long int i,j,n,m,a[100001],b[100001],k,l,u,sum=0;\n\tscanf(\"%I64d%I64d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);sum+=a[i];\n\t}\n\tj=n;\n\twhile(a[j]==0)\n\t\tj--;\n\tl=j;u=sum+j;\n\twhile(u!=l+1)\n\t{\n\t\tfor(i=1;i<=n;i++)\n\t\t\tb[i]=a[i];\n\t\tk=check(b, n, m, (l+u)/2, j);\n\t\tif(k==0)\n\t\t{\tu=(l+u)/2;}\n\t\telse\n\t\t\tl=(l+u)/2;\n\t\t//printf(\"%lld %lld\\n\",l,u);\n\t}\n\tprintf(\"%I64d\\n\",u);\n\treturn 0;\n}\n\nint check(lli *b,lli n, lli m,lli k, lli j)\n{\n\tlli i,t;\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(j==0)\n\t\t\tbreak;\n\t\tt=k-j;\n\t\twhile(t>0 && j>0)\n\t\t{\n\t\t\tif(b[j]>t)\n\t\t\t{\tb[j]-=t; t=0;}\n\t\t\telse\n\t\t\t{\tt-=b[j];b[j]=0;j--;}\n\t\t}\n\t}\n\tif(j==0)\n\t\treturn 0;\n\telse\n\t\treturn 1;\n}\n", "fixed": "// Gukiz hates boxes\n//%I64d\n#include<stdio.h>\n#define lli long long int\nint check(lli *b,lli n, lli m,lli k, lli j);\n\nint main()\n{\n\tlong long int i,j,n,m,a[100001],b[100001],k,l,u,sum=0;\n\tscanf(\"%I64d%I64d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);sum+=a[i];\n\t}\n\tj=n;\n\twhile(a[j]==0)\n\t\tj--;\n\tl=j;u=sum+j;\n\twhile(u!=l+1)\n\t{\n\t\tfor(i=1;i<=n;i++)\n\t\t\tb[i]=a[i];\n\t\tk=check(b, n, m, (l+u)/2, j);\n\t\tif(k==0)\n\t\t{\tu=(l+u)/2;}\n\t\telse\n\t\t\tl=(l+u)/2;\n\t\t//printf(\"%lld %lld\\n\",l,u);\n\t}\n\tprintf(\"%I64d\\n\",u);\n\treturn 0;\n}\n\nint check(lli *b,lli n, lli m,lli k, lli j)\n{\n\tlli i,t;\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(j==0)\n\t\t\tbreak;\n\t\tt=k-j;\n\t\twhile(t>0 && j>0)\n\t\t{\n\t\t\tif(b[j]>t)\n\t\t\t{\tb[j]-=t; t=0;}\n\t\t\telse\n\t\t\t{\tt-=b[j];b[j]=0;j--;}\n\t\t}\n\t\twhile(b[j]==0 && j!=0)\n\t\t\tj--;\n\t}\n\tif(j==0)\n\t\treturn 0;\n\telse\n\t\treturn 1;\n}\n"}
{"similarity_score": 0.9686746987951808, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "022a59c117926b44a4f684117ea09450", "bug_code_uid": "f0920921e1a87a4c9e05d38505f5f775", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "2e8678fbb99df27878c5f05d832f0d7a", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\t\n\tint n,a,b;\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tchar str[n];\n\tscanf(\"%s\",str);\n\t\n\t\n\tif(str[a-1]==str[b-1])\n\t{\n\t\tprintf(\"0\");\n\t\t\n\t\t\n\t}\n\telse printf(\"1\");\n\t\n\t\t\n\t\t\n\t", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\t\n\tint n,a,b;\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tchar str[n];\n\tscanf(\"%s\",str);\n\t\n\t\n\tif(str[a-1]==str[b-1])\n\t{\n\t\tprintf(\"0\");\n\t\t\n\t\t\n\t}\n\telse printf(\"1\");\n\t\n}\n\t\t\n\t"}
{"similarity_score": 0.9654178674351584, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0bcee965db95e4fb788b3cc278c5a0a1", "bug_code_uid": "f8a486f74dc619cb3f9daa2f7db1077d", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "1cbf87922ae0598662f160a3625c5db9", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint cmp(const void* a, const void* b) {\n  return *(int*)a-*(int*)b;;\n}\nint main() {\n  int n,t[100000],cnt=0,s=0;\n  scanf(\"%d\",&n);\n  for (int i=0;i<n;i++)\n    scanf(\"%d\",t+i);\n  qsort(t,n,sizeof(int),cmp);\n  for (int i=0;i<n;i++) {\n    if (s<=t[i]) cnt++;\n    s+=t[i];\n  }\n  printf(\"%d\\n\",cnt);\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint cmp(const void* a, const void* b) {\n  return *(int*)a-*(int*)b;;\n}\nint main() {\n  int n,t[100000],cnt=0,s=0;\n  scanf(\"%d\",&n);\n  for (int i=0;i<n;i++)\n    scanf(\"%d\",t+i);\n  qsort(t,n,sizeof(int),cmp);\n  for (int i=0;i<n;i++) {\n    if (s<=t[i]) { cnt++; s+=t[i]; }\n  }\n  printf(\"%d\\n\",cnt);\n  return 0;\n}"}
{"similarity_score": 0.9846153846153847, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3fdd3de6dbce6ac95e276629112af0c2", "bug_code_uid": "657c49fea577c03988c1d8d50c39c4e2", "src_uid": "fbde86a29f416b3d83bcc63fb3776776", "apr_id": "b0216704de95ec2470cb3e969ac92587", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n, i, j, a;\n    scanf(\"%d\", &n);\n    a=n%4;\n    for(i=0; i<n/4; i++)\n    {\n        printf(\"aa\");\n        printf(\"bb\");\n    }\n    if(a==1)\n        printf(\"a\");\n    else if(a==2)\n        printf(\"aa\");\n    else\n        printf(\"aab\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n, i, j, a;\n    scanf(\"%d\", &n);\n    a=n%4;\n    for(i=0; i<n/4; i++)\n    {\n        printf(\"aa\");\n        printf(\"bb\");\n    }\n    if(a==1)\n        printf(\"a\");\n    else if(a==2)\n        printf(\"aa\");\n    else if(a==3)\n        printf(\"aab\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.14715719063545152, "equal_cnt": 33, "replace_cnt": 17, "delete_cnt": 13, "insert_cnt": 4, "fix_ops_cnt": 34, "lang": "GNU C11", "fix_code_uid": "5867232ca38ad4a877d36fb546d921de", "bug_code_uid": "8cc366c87799fc010450d1e6ce76e697", "src_uid": "03e5f71810b10318fed344878d226a10", "apr_id": "e8d0fcad8bbaab71138986d3ff4b3ca7", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\r\nusing namespace std;\r\n \r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while(t--) {\r\n        string n;\r\n        cin >> n;\r\n        if((n.back() - '0') % 2 == 0) {\r\n            cout << \"0\\n\";\r\n            continue;\r\n        }\r\n        if((n[0] - '0') % 2 == 0) {\r\n            cout << \"1\\n\";\r\n            continue;\r\n        }\r\n        int count_2 = count(n.begin(), n.end(), '2');\r\n        int count_4 = count(n.begin(), n.end(), '4');\r\n        int count_6 = count(n.begin(), n.end(), '6');\r\n        int count_8 = count(n.begin(), n.end(), '8');\r\n        if(count_2 > 0 || count_4 > 0 || count_6 > 0 || count_8 > 0) {\r\n            cout << \"2\\n\";\r\n            continue;\r\n        }\r\n        cout << \"-1\\n\";\r\n    }\r\n    return 0;\r\n}", "fixed": "main(){char o[10],*O;for(gets(o);gets(o);)\r\n{for(O=o;*O&1;++O);if(!*O){puts(\"-1\");continue;}\r\nfor(O=o;*O;++O);--O;if(!(*O&1)){puts(\"0\");continue;}\r\nputs(*o&1?\"2\":\"1\");}}"}
{"similarity_score": 0.9985272459499264, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8d7229bdb8e2948878ce34c5e48fdb09", "bug_code_uid": "237dd428f4710b11ba39bd025a0b8511", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "5fcf482e7da2f13f58135c6532e8540d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        char a[52],ch;\r\n        int b[50]={0};\r\n        scanf(\"%s %c\",a,&ch);\r\n        int i,j,flag=0;\r\n        int len=strlen(a);\r\n        for(i=0,j=0;i<len;i++)\r\n        {\r\n            if(a[i]==ch)\r\n            {\r\n                b[j]=i;\r\n                j++;\r\n            }\r\n        }\r\n        for(i=0;i<j;i++)\r\n        {\r\n            if(b[i]%2==0&&b[i]!=0)\r\n            {\r\n                flag=1;\r\n                printf(\"YES\\n\");\r\n                break;\r\n            }\r\n        }\r\n        if(flag==0)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        char a[52],ch;\r\n        int b[50]={0};\r\n        scanf(\"%s %c\",a,&ch);\r\n        int i,j,flag=0;\r\n        int len=strlen(a);\r\n        for(i=0,j=0;i<len;i++)\r\n        {\r\n            if(a[i]==ch)\r\n            {\r\n                b[j]=i+2;\r\n                j++;\r\n            }\r\n        }\r\n        for(i=0;i<j;i++)\r\n        {\r\n            if(b[i]%2==0&&b[i]!=0)\r\n            {\r\n                flag=1;\r\n                printf(\"YES\\n\");\r\n                break;\r\n            }\r\n        }\r\n        if(flag==0)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9864077669902913, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "307ada1b3d3ad7e62776e6db098bd1db", "bug_code_uid": "dadd3e340e715af7583ac4ae0324fb66", "src_uid": "23ef311011b381d0ca2e84bc861f0a31", "apr_id": "cacabaf29b378a439a7afb8b4e7332b7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int t, n, a[100];\r\nint main() {\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tint a[101] = {}, x, e = 0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\tif (a[abs(x)] < 1 + !!x)\r\n\t\t\t\te++;\r\n\t\t\ta[x]++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", e);\r\n\t}\r\n}", "fixed": "int t, n, a[100];\r\nint main() {\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tint a[101] = {}, x, e = 0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\tif (a[abs(x)] < 1 + !!x)\r\n\t\t\t\te++;\r\n\t\t\ta[abs(x)]++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", e);\r\n\t}\r\n}"}
{"similarity_score": 0.997338065661047, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "757a17d95acaba13fdb9ecf2873a7bfa", "bug_code_uid": "1e8a510f39643cb7e8a2da99a8d26277", "src_uid": "4577a9b2d96110966ad95a960ef7ec20", "apr_id": "01d1e5951f2e5950c0ec1b3730e85868", "difficulty": 2000, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid custsort(int *,int);\nint main(){\n\tint n,i,j,t,prev,now,ar[3500];\n\tfor(i=0;i<3500;i++){\n\t\tar[i]=0;\n\t}\n\tprev=0;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++,prev=now){\n\t\tscanf(\"%d\",&now);\n\t\tif(now>prev){\n\t\t\tt=now-prev;\n\t\t\tfor(i=0;t>0;i++){\n\t\t\t\tif(t>=9-ar[i]){\n\t\t\t\t\tt-=9-ar[i];\n\t\t\t\t\tar[i]=9;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tar[i]+=t;\n\t\t\t\t\tt=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(now==prev){\n\t\t\tfor(i=0;ar[i]==0;i++);\n\t\t\tar[i]--;\n\t\t\ti++;\n\t\t\twhile(ar[i]==9){\n\t\t\t\tar[i]=ar[i-1];\n\t\t\t\tar[i-1]=9;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tar[i]++;\n\t\t\tcustsort(ar,i);\n\t\t}\n\t\telse{\n\t\t\tt=prev-now;\n\t\t\tfor(i=0;t>0;i++){\n\t\t\t\tif(t>=ar[i]){\n\t\t\t\t\tt-=ar[i];\n\t\t\t\t\tar[i]=0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tar[i]-=t;\n\t\t\t\t\tt=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=0;ar[i]==0;i++);\n\t\t\tar[i]--;\n\t\t\ti++;\n\t\t\twhile(ar[i]==9){\n\t\t\t\tar[i]=ar[i-1];\n\t\t\t\tar[i-1]=9;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tar[i]++;\n\t\t\tcustsort(ar,i);\n\t\t}\n\t\tfor(i=3500;ar[i]==0;i--);\n\t\twhile(i>=0){\n\t\t\tprintf(\"%d\",ar[i]);\n\t\t\ti--;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\nvoid custsort(int *ar,int n){\n\tint i,t,c[10];\n\tfor(i=0;i<10;i++){\n\t\tc[i]=0;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tc[ar[i]]++;\n\t}\n\tt=9;\n\tfor(i=0;i<n;i++){\n\t\twhile(c[t]==0){\n\t\t\tt--;\n\t\t}\n\t\tar[i]=t;\n\t\tc[t]--;\n\t}\n}\n", "fixed": "#include<stdio.h>\nvoid custsort(int *,int);\nint main(){\n\tint n,i,j,t,prev,now,ar[3500];\n\tfor(i=0;i<3500;i++){\n\t\tar[i]=0;\n\t}\n\tprev=0;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++,prev=now){\n\t\tscanf(\"%d\",&now);\n\t\tif(now>prev){\n\t\t\tt=now-prev;\n\t\t\tfor(i=0;t>0;i++){\n\t\t\t\tif(t>=9-ar[i]){\n\t\t\t\t\tt-=9-ar[i];\n\t\t\t\t\tar[i]=9;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tar[i]+=t;\n\t\t\t\t\tt=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(now==prev){\n\t\t\tfor(i=0;ar[i]==0;i++);\n\t\t\tar[i]--;\n\t\t\ti++;\n\t\t\twhile(ar[i]==9){\n\t\t\t\tar[i]=ar[i-1];\n\t\t\t\tar[i-1]=9;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tar[i]++;\n\t\t\tcustsort(ar,i);\n\t\t}\n\t\telse{\n\t\t\tt=prev-now;\n\t\t\tfor(i=0;t>0;i++){\n\t\t\t\tif(t>=ar[i]){\n\t\t\t\t\tt-=ar[i];\n\t\t\t\t\tar[i]=0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tar[i]-=t;\n\t\t\t\t\tt=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=0;ar[i]==0;i++);\n\t\t\tar[i]--;\n\t\t\ti++;\n\t\t\twhile(ar[i]==9){\n\t\t\t\tar[i]=ar[i-1];\n\t\t\t\tar[i-1]=9;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tar[i]++;\n\t\t\tcustsort(ar,i);\n\t\t}\n\t\tfor(i=3499;ar[i]==0;i--);\n\t\twhile(i>=0){\n\t\t\tprintf(\"%d\",ar[i]);\n\t\t\ti--;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\nvoid custsort(int *ar,int n){\n\tint i,t,c[10];\n\tfor(i=0;i<10;i++){\n\t\tc[i]=0;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tc[ar[i]]++;\n\t}\n\tt=9;\n\tfor(i=0;i<n;i++){\n\t\twhile(c[t]==0){\n\t\t\tt--;\n\t\t}\n\t\tar[i]=t;\n\t\tc[t]--;\n\t}\n}\n"}
{"similarity_score": 0.9856733524355301, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2bff0ac844bf7834c413075accdd09c4", "bug_code_uid": "7d77e8b232144b75874d65470d6baa0d", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "71c0fe9e420f6c5882a653a40b05edcd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n,m=0,i,l;\n    char A[n],B[n];\n    scanf(\"%d %s %s\",&n,A,B);\n    for(i=0;i<n;i++)\n    {\n        l=abs(A[i]-B[i]);\n        if(l<=5)\n        {\n            m=m+l;\n        }\n        else\n        {\n            m=m+10-l;\n        }\n    }\n    printf(\"%d\",m);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n,m=0,i,l;\n    char A[1000],B[1000];\n    scanf(\"%d %s %s\",&n,A,B);\n    for(i=0;i<n;i++)\n    {\n        l=abs(A[i]-B[i]);\n        if(l<=5)\n        {\n            m=m+l;\n        }\n        else\n        {\n            m=m+10-l;\n        }\n    }\n    printf(\"%d\",m);\n    return 0;\n}\n"}
{"similarity_score": 0.9124423963133641, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0442ad6ed9d51008b7a9c427f07f08aa", "bug_code_uid": "a2340e6834786dadeb7494c4dcf871c4", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "2e62e049b542d46b9b3fe5f9012328d3", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#define boro 1000\nint main()\n{\n    int card[boro],n,x,i,lagbe,sum=0;\n    scanf(\"%d %d\",&n, &x);\n    for (i=0; i<n; i++) {\n        scanf(\"%d\",&card[i]);\n        sum=sum+card[i];\n    }\n    sum=abs(sum);\n    lagbe=(sum/x)+1;\n    printf(\"%d\",lagbe);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#define boro 1000\nint main()\n{\n    int card[boro],n,x,i,lagbe,sum=0;\n    scanf(\"%d %d\",&n, &x);\n    for (i=0; i<n; i++) {\n        scanf(\"%d\",&card[i]);\n        sum=sum+card[i];\n    }\n    sum=abs(sum);\n    if (sum%x==0)   lagbe=sum/x;\n    else                  lagbe=sum/x+1;\n    printf(\"%d\",lagbe);\n    return 0;\n}\n"}
{"similarity_score": 0.9310782241014799, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d8f1735dff3f5ce1a1f85171a3a54d0e", "bug_code_uid": "ab3f80946c9407d78ef77282df4f1f1a", "src_uid": "d6721fb3dd02535fc08fc69a4811d60c", "apr_id": "62bb3306da4ceb84e350b3d0e5e0c58e", "difficulty": 1500, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tlong long int t,n,i,f,min,d,c,x,y;\r\n\tscanf(\"%lld\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tx=0;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tlong long int a[n],b[n-2];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%lld\",&a[i]);\r\n\t\t\tif(i!=0)\r\n\t\t\t{\r\n\t\t\t\tif(a[i]==a[i-1])\r\n\t\t\t\t{\r\n\t\t\t\t\tx=x+1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif((n==2)||(x==n-1))\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tmin=1000000000000000;\r\n\t\ty=0;\r\n\t\tfor(i=1;i<n-1;i++)\r\n\t\t{\r\n\t\t\td=abs((2*a[i]-a[i-1]-a[i+1]));\r\n\t\t\tb[i-1]=d;\r\n\t\t\tif((d<min)&&d!=0)\r\n\t\t\t{\r\n\t\t\t\ty=1;\r\n\t\t\t\tmin=d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(y==0)\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tf=0;\r\n\t\tfor(i=0;i<n-3;i++)\r\n\t\t{\r\n\t\t\tif(b[i]==0)\r\n\t\t\t{\r\n\t\t\t\tcontinue ;\r\n\t\t\t}\r\n\t\t\tif((b[i]%min)!=0)\r\n\t\t\t{\r\n\t\t\t\tf=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(f==1)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tf=0;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]>=min)\r\n\t\t\t{\r\n\t\t\t\tf=1;\r\n\t\t\t\tbreak ;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(f==1)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tc=a[1]-a[0];\r\n\t\tif(c<0)\r\n\t\t{\r\n\t\t\tc=min+c;\r\n\t\t}\r\n\t\tif(c>=min)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tprintf(\"%lld %lld\\n\",min,c);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tlong long int t,n,i,f,min,d,c,x,y;\r\n\tscanf(\"%lld\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tx=0;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tlong long int a[n],b[n-2];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%lld\",&a[i]);\r\n\t\t\tif(i!=0)\r\n\t\t\t{\r\n\t\t\t\tif(a[i]==a[i-1])\r\n\t\t\t\t{\r\n\t\t\t\t\tx=x+1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif((n==2)||(x==n-1))\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tmin=1000000000000000;\r\n\t\ty=0;\r\n\t\tfor(i=1;i<n-1;i++)\r\n\t\t{\r\n\t\t\td=abs((2*a[i]-a[i-1]-a[i+1]));\r\n\t\t\tb[i-1]=d;\r\n\t\t\tif((d<min)&&d!=0)\r\n\t\t\t{\r\n\t\t\t\ty=1;\r\n\t\t\t\tmin=d;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(y==0)\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tf=0;\r\n\t\tfor(i=0;i<n-3;i++)\r\n\t\t{\r\n\t\t\tif(b[i]==0)\r\n\t\t\t{\r\n\t\t\t\tcontinue ;\r\n\t\t\t}\r\n\t\t\tif((b[i]%min)!=0)\r\n\t\t\t{\r\n\t\t\t\tf=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(f==1)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tf=0;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]>=min)\r\n\t\t\t{\r\n\t\t\t\tf=1;\r\n\t\t\t\tbreak ;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(f==1)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tc=a[1]-a[0];\r\n\t\tif(c<0)\r\n\t\t{\r\n\t\t\tc=min+c;\r\n\t\t}\r\n\t\tif(c>=min)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tf=0;\r\n\t\tfor(i=0;i<n-1;i++)\r\n\t\t{\r\n\t\t\tif(((a[i]+c)%min)!=a[i+1])\r\n\t\t\t{\r\n\t\t\t\tf=1;\r\n\t\t\t\tbreak ;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(f==1)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue ;\r\n\t\t}\r\n\t\tprintf(\"%lld %lld\\n\",min,c);\r\n\t}\r\n}"}
{"similarity_score": 0.6148648648648649, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "add5bf66e6709975fce58ec21c074523", "bug_code_uid": "48111b1e5d1dc7d1a6ac0f173ba54ecb", "src_uid": "e75b88ce4341062c20b6014da1152d29", "apr_id": "47bd1a7efff1b4503147f56ae0e96b11", "difficulty": 1400, "tags": ["binary search", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(int argc, char *argv[])\n{\n\tlong long int a,i,b,c,d,e,j,f,g;\n\tscanf(\"%lld\",&a);\nfor(i=0;i<a;i++){\n\td=0;\n\tscanf(\"%lld\",&b);\n\tlong long int x[b];\n\tfor(j=0;j<b;j++){\n\t\tscanf(\"%lld\",&x[j]);\n\t\td=d+x[j];\n\t\tif(j==0)\n\t\te=x[j];\n\t\telse{\n\t\t\tif(e<x[j])\n\t\t\te=x[j];}}\n\t\t\tf=b-1;\n\t\t if(b<=2)\n\t\t\tprintf(\"%lld\\n\",0);\n\t\t\telse{\n\t\tg=f*e;\n\t\tif(g>d)\n\t\tprintf(\"%lld\\n\",g-d);\n\t\telse if(g==d)\n\t\tprintf(\"%lld\\n\",0);\n\t\telse{\n\t\t\tg=d-g;\n\t\t\tif(g>f){\n\t\t\t\tif(g%f==0)\n\t\t\t\tprintf(\"%lld\\n\",0);\n\t\t\t\telse{\n\t\t\t\t\td=g%f;\n\t\tprintf(\"%lld\\n\",f-d);}}\n\t\t\telse{\n\t\t\td=f-g;\n\t\t\tprintf(\"%lld\\n\",d);}}}}\n\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(int argc, char *argv[])\n{\n\tlong long int a,i,b,c,d,e,j,f,g,y;\n\tscanf(\"%lld\",&a);\nfor(i=0;i<a;i++){\n\td=0;\n\tscanf(\"%lld\",&b);\n\tlong long int x[b];\n\tfor(j=0;j<b;j++){\n\t\tscanf(\"%lld\",&x[j]);\n\t\td=d+x[j];\n\t\tif(j==0)\n\t\te=x[j];\n\t\telse{\n\t\t\tif(e<x[j])\n\t\t\te=x[j];}}\n\t\t\tf=b-1;\n\t\t if(b<=2)\n\t\t\tprintf(\"%lld\\n\",y);\n\t\t\telse{\n\t\tg=f*e;\n\t\tif(g>d)\n\t\tprintf(\"%lld\\n\",g-d);\n\t\telse if(g==d)\n\t\tprintf(\"%lld\\n\",y);\n\t\telse{\n\t\t\tg=d-g;\n\t\t\tif(g>f){\n\t\t\t\tif(g%f==0)\n\t\t\t\tprintf(\"%lld\\n\",y);\n\t\t\t\telse{\n\t\t\t\t\td=g%f;\n\t\tprintf(\"%lld\\n\",f-d);}}\n\t\t\telse{\n\t\t\td=f-g;\n\t\t\tprintf(\"%lld\\n\",d);}}}}\n\t\treturn 0;\n}"}
{"similarity_score": 0.7702127659574468, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ecf9a136d3b52cd00f935094db663295", "bug_code_uid": "04a111393cc44cc30963935f5df5db7f", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "edbc7cbd36c9077c5d03f54a1f4f6b82", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    long long x,y; \n\n    while(t--)\n    {   scanf(\"%lld\",&x);\n     scanf(\"%lld\",&y);\n        printf(\"%lld%\",x);\n        printf(\" \");\n        printf(\"%lld\",x+x)\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    long long x,y; \n\n    while(t--)\n    {   scanf(\"%lld\",&x);\n     scanf(\"%lld\",&y);\n        printf(\"%lld% lld\\n\",x,x+x);\n        \n      \n        \n       \n       \n        \n    }\n}"}
{"similarity_score": 0.9601518026565465, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "383be467ae3aa706111b911add4e8fe8", "bug_code_uid": "89836583d6a0f84f704711a6a53e6140", "src_uid": "71b4674e91e0bc5521c416cfc570a090", "apr_id": "400c2d28b736bb2037f85e2adb37fccb", "difficulty": 1500, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar a[201];\n\tscanf(\"%s\",a);\n\n\tint len = strlen(a);\n\tint count = 0;\n\tfor (int i = 0; i < len; ++i)\n\t{\n\t\tif(a[i] == '@')\n\t\t{\n\t\t\tcount++;\n\t\t\tif(a[i+1] == '@' || a[i+2] == '@' || i+1 == len)\n\t\t\t{\n\t\t\t\tprintf(\"No solution\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\tif(a[0] == '@' || len < 3)\n\t{\n\t\tprintf(\"No solution\\n\");\n\t\treturn 0;\n\t}\n\t\n\tint k = 0;\n\tfor (int i = 0; i < len; ++i)\n\t{\n\t\tif(a[i] == '@')\n\t\t{\n\t\t\tif(i+2 < len)\n\t\t\t{\n\t\t\t\tif(k+1 != count)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c%c,\",a[i],a[i+1]);\n\t\t\t\t\ti++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c%c\",a[i],a[i+1]);\n\t\t\t\t\ti++;\n\t\t\t\t\tk++;\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%c%c\",a[i],a[i+1]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%c\",a[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar a[201];\n\tscanf(\"%s\",a);\n\n\tint len = strlen(a);\n\tint count = 0;\n\tfor (int i = 0; i < len; ++i)\n\t{\n\t\tif(a[i] == '@')\n\t\t{\n\t\t\tcount++;\n\t\t\tif(a[i+1] == '@' || a[i+2] == '@' || i+1 == len)\n\t\t\t{\n\t\t\t\tprintf(\"No solution\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\tif(count == 0)\n\t{\n\t\tprintf(\"No solution\\n\");\n\t\treturn 0;\n\t}\n\t\n\tif(a[0] == '@' || len < 3)\n\t{\n\t\tprintf(\"No solution\\n\");\n\t\treturn 0;\n\t}\n\t\n\tint k = 0;\n\tfor (int i = 0; i < len; ++i)\n\t{\n\t\tif(a[i] == '@')\n\t\t{\n\t\t\tif(i+2 < len)\n\t\t\t{\n\t\t\t\tif(k+1 != count)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c%c,\",a[i],a[i+1]);\n\t\t\t\t\ti++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c%c\",a[i],a[i+1]);\n\t\t\t\t\ti++;\n\t\t\t\t\tk++;\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%c%c\",a[i],a[i+1]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%c\",a[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n}\n"}
{"similarity_score": 0.7208427389014297, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "d0cec2d019b18f3314cbb1cf02a42af0", "bug_code_uid": "32860320a32121203bc094d26d986960", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "2227ddb05144792e9692cbdeb31c4920", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint max(int a,int b)\n{\n    return a>b?a:b;\n}\nint main()\n{\n    int n,i,j,p,mx,mn,x,y;\n    scanf(\"%d\",&n);\n    int arra[n];\n    for(i=0;i<n;i++)scanf(\"%d\",&arra[i]);\n    mx=0;\n    for(i=0;i<n;i++){\n        if(i==0)mn=arra[i+1]-arra[i];\n        else if(i==n-1)mn=arra[i]-arra[i-1];\n        else{\n            x=arra[i]-arra[i-1];\n            y=arra[i+1]-arra[i];\n            mn=x<y?x:y;\n            }\n        for(j=0;j<n;j++){\n            p=arra[j]-arra[i];\n            p=p>0?p:-p;\n            mx=max(mx,p);\n            }\n\n        printf(\"%d %d\\n\",mn,mx);\n        mx=0;\n        }\n    return 0;\n    }\n", "fixed": "#include<stdio.h>\nint max(int a,int b)\n{\n    return a>b?a:b;\n}\nint main()\n{\n    int n,i,j,p,mx,mn,x,y,a,b;\n    scanf(\"%d\",&n);\n    int arra[n];\n    for(i=0;i<n;i++)scanf(\"%d\",&arra[i]);\n    mx=0;\n    for(i=0;i<n;i++){\n        if(i==0){\n            mn=arra[i+1]-arra[i];\n            mx=arra[n-1]-arra[i];}\n        else if(i==n-1){\n            mn=arra[i]-arra[i-1];\n            mx=arra[i]-arra[0];}\n        else{\n            x=arra[i]-arra[i-1];\n            y=arra[i+1]-arra[i];\n            a=arra[i]-arra[0];\n            a=a>0?a:-a;\n            b=arra[n-1]-arra[i];\n            b=b>0?b:-b;\n            mn=x<y?x:y;\n            mx=a>b?a:b;\n            }\n\n\n        printf(\"%d %d\\n\",mn,mx);\n        }\n    return 0;\n    }"}
{"similarity_score": 0.6506986027944112, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "aaf440e77b3c1f8fa52c8a6f067b7f6a", "bug_code_uid": "3cfcd5901b8a981dec784002b90e09c5", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "835ac4a7d062b58596f60548231cced3", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, t;\n\tscanf(\"%d%d\", &n, &t);\n\t\n\tint i;\n\tint flag = 0;\n\tint trans[9999];\n\tfor (i = 0; i < n - 1; ++i) {\n\t\tscanf(\"%d\", &trans[i]);\n\t\tif (trans[i] + i == t - 1)\n\t\t\tflag = 1;\n\t}\n\t\n\t(flag) ? puts(\"YES\") : puts(\"NO\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, t;\n\tscanf(\"%d%d\", &n, &t);\n\t--t;\n\t\n\tint i;\n\tint a[29999];\n\tfor (i = 0; i < n - 1; ++i)\n\t\tscanf(\"%d\", &a[i]);\n\t\n\tint x = 0;\n\twhile (x < t)\n\t\tx += a[x];\n\t\n\tputs(x == t ? \"YES\" : \"NO\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.3789826718837339, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "4b4ea6892c0d4707216ef07ade8722fc", "bug_code_uid": "e246a093d02c14c74c594831c2786e22", "src_uid": "a97e70ad20a337d12dcf79089c16c9f0", "apr_id": "66231e7b3efeff3941157dade2c475f1", "difficulty": 1100, "tags": ["data structures", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t-->0)\r\n    {\r\n        int n,vv=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        for(int loop1=1;loop1<n;loop1++)\r\n    {\r\n        for(int loop2=1;loop2<=n-loop1;loop2++)\r\n        {\r\n            if(a[loop2-1]>a[loop2] && (a[loop2-1]+a[loop2])%2==0)\r\n            {\r\n                vv=1;\r\n                break;\r\n            }\r\n            else\r\n            {\r\n            if(a[loop2-1]>a[loop2])\r\n            {\r\n                int c;\r\n                c=a[loop2];\r\n                a[loop2]=a[loop2-1];\r\n                a[loop2-1]=c;\r\n            }\r\n            }\r\n            //end--;\r\n        }\r\n    }\r\n    if(vv==0)\r\n    printf(\"YES\\n\");\r\n    else\r\n    printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint max(int a,int b)\r\n{\r\n    if(a<b)\r\n    return b;\r\n    else\r\n    return a;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t-->0)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        int x=-1;\r\n        int y=-1;\r\n        int vv=1;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(a[i]%2==1)\r\n            {\r\n                x=max(x,a[i]);\r\n                if(a[i]<x)\r\n                {\r\n                printf(\"NO\\n\");\r\n                vv=0;\r\n                break;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                y=max(y,a[i]);\r\n                if(a[i]<y)\r\n                {\r\n                    printf(\"NO\\n\");\r\n                    vv=0;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(vv==1)\r\n        printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9876819708846585, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5b5bb3bc7f92c195d1ceb395255862ff", "bug_code_uid": "433e73371bfc22ea4c1e948f9ed447f9", "src_uid": "581c89736e549300c566e4700b741906", "apr_id": "e499f3900a3e906ec1750858fb869b26", "difficulty": 800, "tags": ["games", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,a[n],m,b[m],i,j,maxa,maxb,p;\r\n    scanf(\"%d\", &t);\r\n    for (p=1;p<=t;p++){\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%d\", &a[i]);\r\n        }\r\n        scanf(\"%d\", &m);\r\n        for(j=0;j<m;j++){\r\n            scanf(\"%d\", &b[j]);\r\n        }\r\n        maxa=a[0];\r\n        for(i=0;i<n;i++){\r\n            if(a[i]>maxa){\r\n                maxa=a[i];\r\n            }\r\n        }\r\n        maxb=b[0];\r\n        for(j=0;j<m;j++){\r\n            if (b[j]>maxb){\r\n                maxb=b[j];\r\n            }\r\n        }\r\n        if (maxa>maxb){\r\n            printf(\"Alice\\n\");\r\n            printf(\"Alice\\n\");\r\n        }\r\n        else if (maxa<maxb){\r\n            printf(\"Bob\\n\");\r\n              printf(\"Bob\\n\");\r\n        }\r\n        if(maxa==maxb){\r\n                printf(\"Alice\\n\");\r\n              printf(\"Bob\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,a[1000],m,b[1000],i,j,maxa,maxb,p;\r\n    scanf(\"%d\", &t);\r\n    for (p=1;p<=t;p++){\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%d\", &a[i]);\r\n        }\r\n        scanf(\"%d\", &m);\r\n        for(j=0;j<m;j++){\r\n            scanf(\"%d\", &b[j]);\r\n        }\r\n        maxa=a[0];\r\n        for(i=0;i<n;i++){\r\n            if(a[i]>maxa){\r\n                maxa=a[i];\r\n            }\r\n        }\r\n        maxb=b[0];\r\n        for(j=0;j<m;j++){\r\n            if (b[j]>maxb){\r\n                maxb=b[j];\r\n            }\r\n        }\r\n        if (maxa>maxb){\r\n            printf(\"Alice\\n\");\r\n            printf(\"Alice\\n\");\r\n        }\r\n        else if (maxa<maxb){\r\n            printf(\"Bob\\n\");\r\n              printf(\"Bob\\n\");\r\n        }\r\n        if(maxa==maxb){\r\n                printf(\"Alice\\n\");\r\n              printf(\"Bob\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.8708240534521158, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8818e5ad56fdf99b033d5ff5bc68c5cf", "bug_code_uid": "2d00450f59139498e72f1c69f6aa10bc", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "7b198d575dd87fff4cd9ddb443741cf1", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n#include<string.h>\n\nint main()\n{\n    int n,a[1000],cnt=0,j,i;\n    char s;\n    for(i=0;i<1000;i++)\n        a[i]=0;\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&s);\n        int k=s;\n        a[k]++;\n    }\n    for(i=90;i<125;i++)\n    {\n        if(a[i]>1)\n            cnt+=a[i]-1;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\n#include<string.h>\n\nint main()\n{\n    int n,a[1000],cnt=0,j,i,d=0;\n    char s;\n    for(i=0;i<1000;i++)\n        a[i]=0;\n    scanf(\"%d\",&n);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&s);\n        int k=s;\n        a[k]++;\n    }\n    for(i=97;i<=122;i++)\n    {\n        if(a[i]>1)\n            cnt+=a[i]-1;\n            if(a[i]==0)\n                d+=1;\n    }\n    if(cnt<=d)\n        printf(\"%d\\n\",cnt);\n    else\n           printf(\"-1\\n\");\n    return 0;\n\n}\n"}
{"similarity_score": 0.9629629629629629, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "bca783c150cda43a750266f5b73a2233", "bug_code_uid": "856247ed5a1fd9800077b8d6872d1502", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "4397efeeeb3802bdf828f2fa558d290d", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int sN = 1; sN <= t; sN++) {\r\n\r\n        int n, m, k;\r\n        scanf(\"%d %d %d\", &n, &m, &k);\r\n\r\n        if (((n+m)/2)+1==k||m+n==2) {\r\n            printf(\"Yes\\n\");\r\n        } else {\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int sN = 1; sN <= t; sN++) {\r\n\r\n        int n, m, k;\r\n        scanf(\"%d %d %d\", &n, &m, &k);\r\n\r\n        if (n * m-1 == k) {\r\n            printf(\"Yes\\n\");\r\n        } else {\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9989462592202318, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0fcc2d6ba84f3cc020779a4e064329e4", "bug_code_uid": "6f1c90fa31684d177b0c01bd89ad546f", "src_uid": "14593b565193607dff8b6b25bf51a661", "apr_id": "bc075d7691ab418c807573d4482222d1", "difficulty": 1200, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdio.h>\n\nint main()\n{\n    int number,i,j,a,b,n,p,sum;\n    a=b=0;\n    number=400050;\n    int primes[number+1];\n    for(i = 2; i<=number; i++)\n        primes[i] = i;\n\n    i = 2;\n    while ((i*i) <= number)\n    {\n        if (primes[i] != 0)\n        {\n            for(j=2; j<number; j++)\n            {\n                if (primes[i]*j > number)\n                    break;\n                else\n                    primes[primes[i]*j]=0;\n            }\n        }\n        i++;\n    }\n    scanf(\"%d\",&n);\n    for (i=0;i<n ;i++ )\n    {\n        scanf(\"%d\",&p);\n        if(p==1)\n            a++;\n        else\n            b++;\n    }\n    sum=1;\n    for (i=0;i<n;i++)\n    {\n        if((primes[sum+1]&&a!=0)||b==0)\n        {\n            printf(\"1 \");\n            a--;\n            sum+=1;\n        }\n        else\n        {\n            printf(\"2 \");\n            b--;\n            sum+=2;\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdio.h>\n\nint main()\n{\n    int number,i,j,a,b,n,p,sum;\n    a=b=0;\n    number=400050;\n    int primes[number+1];\n    for(i = 2; i<=number; i++)\n        primes[i] = i;\n\n    i = 2;\n    while ((i*i) <= number)\n    {\n        if (primes[i] != 0)\n        {\n            for(j=2; j<number; j++)\n            {\n                if (primes[i]*j > number)\n                    break;\n                else\n                    primes[primes[i]*j]=0;\n            }\n        }\n        i++;\n    }\n    scanf(\"%d\",&n);\n    for (i=0;i<n ;i++ )\n    {\n        scanf(\"%d\",&p);\n        if(p==1)\n            a++;\n        else\n            b++;\n    }\n    sum=0;\n    for (i=0;i<n;i++)\n    {\n        if((primes[sum+1]&&a!=0)||b==0)\n        {\n            printf(\"1 \");\n            a--;\n            sum+=1;\n        }\n        else\n        {\n            printf(\"2 \");\n            b--;\n            sum+=2;\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.7366167023554604, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "dd9fed4812b174324fec5022536c007d", "bug_code_uid": "d648f37e4199791d4677133e9a644ddc", "src_uid": "60eb29b2dfb4d6b136c58b33dbd2558e", "apr_id": "c5d7ab86a532c0d53d93779b035243b4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nchar arr[6];\r\nint i,j,n,r=0,g=0,b=0,flag=0;\r\nscanf(\"%d\",&n);\r\nfor(j=0;j<n;j++){\r\nfor(i=0;i<6;j++){\r\nscanf(\"\\n%c\",arr[i]);\r\n}\r\nfor(i=0;i<6;j++){\r\nif(arr[i]=='r')\r\nr++;\r\nelse if(arr[i]=='R')\r\nr--;\r\nelse if(arr[i]=='g')\r\ng++;\r\nelse if(arr[i]=='G')\r\ng--;\r\nelse if(arr[i]=='b')\r\nb++;\r\nelse if(arr[i]=='B')\r\nb--;\r\nif(r<0||g<0||b<0){\r\nflag=1;\r\nbreak;\r\n}}\r\nif (flag==1)\r\nprintf(\"N0\");\r\nelse\r\nprintf(\"YES\");\r\nreturn 0;\r\n}\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\nchar arr[6];\r\nint i,j,n,r=0,g=0,b=0,flag=0,k;\r\nscanf(\"%d\",&n);\r\nfor(j=0;j<n;j++){\r\nscanf(\"\\n\");\r\nfor(i=0;i<6;i++){\r\nscanf(\"%c\",&arr[i]);\r\n}\r\nr=0,g=0,b=0,flag=0;\r\nfor(k=0;k<6;k++){\r\nif(arr[k]=='r')\r\nr++;\r\nelse if(arr[k]=='R')\r\nr--;\r\nelse if(arr[k]=='g')\r\ng++;\r\nelse if(arr[k]=='G')\r\ng--;\r\nelse if(arr[k]=='b')\r\nb++;\r\nelse if(arr[k]=='B')\r\nb--;\r\nif(r<0||g<0||b<0){\r\nflag=1;\r\nbreak;\r\n}}\r\nif (flag==1)\r\nprintf(\"NO\\n\");\r\nelse\r\nprintf(\"YES\\n\");\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9975550122249389, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "12f7bd23fe69ebd612471162d63cf324", "bug_code_uid": "17505d1ce40e1cf270c8389d523990e0", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "f2854a0c5548409950f3c2d744d33265", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nint i;\nfor(i=1;i<=n;i++)\n{\nif (i==1)\nprintf(\"I hate\");\nelse if(i%2!=0 && i>=3)\nprintf(\" that I hate\");\nelse \nprintf(\" that I love\");\n}\nprintf(\"it\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nint i;\nfor(i=1;i<=n;i++)\n{\nif (i==1)\nprintf(\"I hate\");\nelse if(i%2!=0 && i>=3)\nprintf(\" that I hate\");\nelse \nprintf(\" that I love\");\n}\nprintf(\" it\");\n}"}
{"similarity_score": 0.980349344978166, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3e03a3429322b947e23c8ed6d9efc56d", "bug_code_uid": "09b9954266d6c2d970933a72da828057", "src_uid": "08679e44ee5d3c3287230befddf7eced", "apr_id": "114d127c6f9cab7e3b0f183af622319d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int i,n;\n   char a[100],b[100],c[100],t,j;\n   scanf(\"%d\",&n);\n   while(n--)\n   {\n       scanf(\"%s\",a);\n       scanf(\"%s\",b);\n       scanf(\"%s\",c);\n       j=0;\n       for(i=0;a[i]!='\\0';i++){\n                if(c[i]==a[i] || c[i]==b[i]){\n                    j++;\n                }\n            }\n       if(j==strlen(a)){\n            printf(\"YES\\n\");\n       }else{\n           printf(\"NO\\n\");\n       }\n   }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int i,n;\n   char a[101],b[101],c[101],t,j;\n   scanf(\"%d\",&n);\n   while(n--)\n   {\n       scanf(\"%s\",a);\n       scanf(\"%s\",b);\n       scanf(\"%s\",c);\n       j=0;\n       for(i=0;a[i]!='\\0';i++){\n                if(c[i]==a[i] || c[i]==b[i]){\n                    j++;\n                }\n            }\n       if(j==strlen(a)){\n            printf(\"YES\\n\");\n       }else{\n           printf(\"NO\\n\");\n       }\n   }\n}\n"}
{"similarity_score": 0.9980119284294234, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e137ad6a479aefc532c713efc828879e", "bug_code_uid": "b805ab0979b700ff268af00c8bd117a2", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "3653c0d448c7e9a5c3610de6b3ea6543", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,i,t;\n    scanf(\"%d\",&t);\n    printf(\"I hate \");\n    for(i=2;i<=t;i++)\n    {\n        if(i%2==0)\n            printf(\"that I love \");\n        else\n            printf(\"that I hate\");\n    }\n    printf(\" it\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,i,t;\n    scanf(\"%d\",&t);\n    printf(\"I hate \");\n    for(i=2;i<=t;i++)\n    {\n        if(i%2==0)\n            printf(\"that I love \");\n        else\n            printf(\"that I hate \");\n    }\n    printf(\" it\");\n}\n"}
{"similarity_score": 0.9785407725321889, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ab30e28d3f700eaa28c386de97ab7aa2", "bug_code_uid": "38a592740120f15358b283ec38b7ff91", "src_uid": "2584fa8c1adb1aa8cd5c28a8610ff72d", "apr_id": "0160e5988a8da56d08043c3b34fd35f3", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define MAX 100\nint main()\n{\n    int i,n,fours,k;\n    scanf(\"%d\",&n);\n    if (n<0 || n>pow(10,6))\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    int sevens=n/7;\n\n    while(sevens>=0)\n    {\n        k=n-(7*sevens);\n        if(k%4==0)\n        {\n            fours=k/4;\n            for(k=0; k<fours; k++)\n                printf(\"4\");\n            for (i=0; i<sevens; i++)\n                printf(\"7\");\n                return 0;\n        }\n        else\n        {\n            sevens-=1;;\n        }\n    }\n    printf(\"-1\");\n\n\n    return 0;", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define MAX 100\nint main()\n{\n    int i,n,fours,k;\n    scanf(\"%d\",&n);\n    if (n<0 || n>pow(10,6))\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    int sevens=n/7;\n\n    while(sevens>=0)\n    {\n        k=n-(7*sevens);\n        if(k%4==0)\n        {\n            fours=k/4;\n            for(k=0; k<fours; k++)\n                printf(\"4\");\n            for (i=0; i<sevens; i++)\n                printf(\"7\");\n                return 0;\n        }\n        else\n        sevens-=1;;\n\n    }\n    printf(\"-1\");\n\n\n    return 0;\n}"}
{"similarity_score": 0.9761904761904762, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ba679df7560ae6b24360504f382bd3f7", "bug_code_uid": "8cb635d4b9490aaf1fdc3ee490c952f4", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "95c5832df3e41d70db6a32008973b163", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n\tint cvp,q,bg=(1e9),toplam=0,a[100000],temp[100000];\n\tint i,x,y;\n\tscanf(\"%d %d\",&x,&y);\n\tfor(i=1;i<=x;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\ttoplam+=a[i];\n\t\ttemp[i]=toplam;\n\t\t//printf(\"==>%d\",temp[i]);\n\t}\n\ttemp[0]=0;\n\tfor(i=y;i<=x;i++)\n\t{\n\t\tq=temp[i]-temp[i-y];\n\t\t//printf(\"==>%d\",q);\n\t\tif(q<=bg)\n\t\t{\n\t\t\tcvp=i;\n\t\t\tbg=q;\n\t\t}\n\t}\n\tprintf(\"%d\",cvp-y+1);\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n\tint cvp,q,bg=(1e9),toplam=0,a[1000000],temp[1000000];\n\tint i,x,y;\n\tscanf(\"%d %d\",&x,&y);\n\tfor(i=1;i<=x;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\ttoplam+=a[i];\n\t\ttemp[i]=toplam;\n\t\t//printf(\"==>%d\",temp[i]);\n\t}\n\ttemp[0]=0;\n\tfor(i=y;i<=x;i++)\n\t{\n\t\tq=temp[i]-temp[i-y];\n\t\t//printf(\"==>%d\",q);\n\t\tif(q<=bg)\n\t\t{\n\t\t\tcvp=i;\n\t\t\tbg=q;\n\t\t}\n\t}\n\tprintf(\"%d\",cvp-y+1);\n}\n"}
{"similarity_score": 0.24242424242424243, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d59460882afc8449dfa306a90fe11eba", "bug_code_uid": "8797ed9d3c0464248a7eea97fc175ef4", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "fd59a2052776597f1975e20be59286aa", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long count,i,L,v,l,r,p,q;\n\tcount=0;\n\tscanf(\"%lld%lld%lld%lld\",&L,&v,&r,&l);\n\tp=L/v;\n\tfor(i=r;i<=l;i++)\n\t{\n\t\tif(i%v==0)\n\t\t\tcount++;\n\t}\n\tq=p-count;\n\tprintf(\"%lld\",q);\nreturn 0; \n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n long int n;\n scanf(\"%ld\",&n);\n for(int i=0;i<n;i++)\n {\n  long long int a,b,c,d;\n  scanf(\"%lld %lld %lld %lld\", &a,&b,&c,&d);\n  printf(\"%lld \\n\",(a/b-d/b+(c-1)/b));\n }\n return 0;\n}\n"}
{"similarity_score": 0.5740350877192982, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "33e12085bfd804b5ac6eae8b33f3e889", "bug_code_uid": "0bdf8ed904c0f40b0f781cfc7909e9e4", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "9505fe9f8da0b7516c5a5a01c4ab2b26", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint min(int a, int b);\nint func(int a, int b, int n);\n\nint main(void)\n{\n  int linenum;\n\n  scanf(\"%d\", &linenum);\n\n  int a[linenum], b[linenum], n[linenum], temp[linenum];\n\n  for (int i = 0; i < linenum; i++)\n  {\n    scanf(\"\\n%d %d %d\", &a[i], &b[i], &n[i]);\n\n    temp[i] = func(a[i], b[i], n[i]);\n  }\n\n  for (int i = 0; i < linenum; i++)\n  {\n    printf(\"%d\\n\", temp[i]);\n  }\n}\n\nint min(int a, int b)\n{\n  if (a < b)\n  {\n    return a;\n  }\n  else\n  {\n    return b;\n  }\n}\n\nint func(int a, int b, int n)\n{\n  if (a > n || b > n)\n  {\n    return 0;\n  }\n  if (a == n || b == n)\n  {\n    return 1;\n  }\n  else\n  {\n    return (min(func(a, a + b, n), func(a + b, b, n)) + 1);\n  }\n}\n", "fixed": "#include <stdio.h>\n\nint min(int a, int b);\nint rounds(int a, int b, int n);\n\nint main(void)\n{\n  int linenum;\n\n  scanf(\"%d\", &linenum);\n\n  int a[linenum], b[linenum], n[linenum];\n\n  for (int i = 0; i < linenum; i++)\n  {\n    scanf(\"\\n%d %d %d\", &a[i], &b[i], &n[i]);\n  }\n\n  for (int i = 0; i < linenum; i++)\n  {\n    printf(\"%d\\n\", rounds(a[i], b[i], n[i]) + 1);\n  }\n}\n\nint min(int a, int b)\n{\n  if (a > b)\n  {\n    return 2;\n  }\n  else\n  {\n    return 1;\n  }\n}\n\nint rounds(int a, int b, int n)\n{\n  int count = 0;\n  int mini, max;\n\n  while (a + b < n)\n  {\n    if (min(a, b) == 1)\n    {\n      a += b;\n    }\n    else\n    {\n      b += a;\n    }\n\n    count++;\n  }\n  if (a + b == n)\n  {\n    return count + 1;\n  }\n  else\n  {\n    return count;\n  }\n}\n"}
{"similarity_score": 0.9975786924939467, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d3f03d68b7dcf142e4341d20accc7826", "bug_code_uid": "7758668f5c273f8a70b09b88bf4b6839", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "9a92791fc5c1fb018dce8e0e4ae4dc95", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int p,v,t,n;\n    int count=0;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d\",&p,&v,&t);\n        if(p==1 && v==1 && t==1)\n        count++;\n        if(p==1 && v==1 && t==0 )\n        count++;\n        if(p==0 && v==1 && t==1)\n        count++;\n        if(p==1 && v==0 && t==1)\n        count++;\n        \n    }\n    printf(\"%d\"&count);\n    return 0;\n}\n    ", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int p,v,t,n;\n    int count=0;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d\",&p,&v,&t);\n        if(p==1 && v==1 && t==1)\n        count++;\n        if(p==1 && v==1 && t==0 )\n        count++;\n        if(p==0 && v==1 && t==1)\n        count++;\n        if(p==1 && v==0 && t==1)\n        count++;\n        \n    }\n    printf(\"%d\",count);\n    return 0;\n}\n    "}
{"similarity_score": 0.9680729760547321, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "13eb4d3008cf229800d2ec7c09a53089", "bug_code_uid": "4c1e4546b8fdb0c291aa6378707820d4", "src_uid": "dc10b869293df2b7a557262c805635ba", "apr_id": "2809ba61da5b07963669262c0726791a", "difficulty": 1100, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/******************************************************************************\r\n\r\n                            Online C Compiler.\r\n                Code, Compile, Run and Debug C program online.\r\nWrite your code in this editor and press \"Run\" button to compile and execute it.\r\n\r\n*******************************************************************************/\r\n\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++) scanf(\"%d\",&arr[i]);\r\n        int length=1,f=n-2,count=0;\r\n        while(f>=0)\r\n        {\r\n            if(arr[f]==arr[n-1]) {length++;f--;}\r\n            else\r\n            {\r\n                count++;\r\n                length=(length)*2;\r\n                f-=length;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "/******************************************************************************\r\n\r\n                            Online C Compiler.\r\n                Code, Compile, Run and Debug C program online.\r\nWrite your code in this editor and press \"Run\" button to compile and execute it.\r\n\r\n*******************************************************************************/\r\n\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++) scanf(\"%d\",&arr[i]);\r\n        int length=1,f=n-2,count=0;\r\n        while(f>=0)\r\n        {\r\n            if(arr[f]==arr[n-1]) {length++;f--;}\r\n            else\r\n            {\r\n                count++;\r\n                f-=length;\r\n                length=(length)*2;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.3032904148783977, "equal_cnt": 28, "replace_cnt": 20, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "f4923c94df20dafe07a07570dd68782a", "bug_code_uid": "df4544825022e46a846eaa0451b68352", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "60033ab82fa158b402cce352a1ad5de0", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\t\tint main()\r\n\t\t{\r\n\t\t    int t;\r\n\t\t    scanf(\"%d\", &t);\r\n\t\t    for(int j = 0; j < t; j++) {\r\n\t\t        int n;\r\n\t\t        scanf(\"%d\\n\", &n);\r\n\t\t        char c1, c2;\r\n\t\t        char s[26];\r\n\t\t        c1 = getchar();\r\n\t\t        s[c1 - 'A'] = c1;\r\n\t\t        int i;\r\n\t\t        int fl = 0;\r\n\t\t        for (i = 1; i < n; i++) {\r\n\t\t            c2 = getchar();\r\n\t\t            if (c2 != c1) {\r\n\t\t                if (s[c2 - 'A'] == c2)\r\n\t\t                    fl = 1;\r\n\t\t                else\r\n\t\t                    s[c2 - 'A'] = c2;\r\n\t\t            }\r\n\t\t            c1 = c2;\r\n\t\t        }\r\n\t\t        if (fl == 0)\r\n\t\t            printf(\"YES\\n\");\r\n\t\t        else\r\n\t\t            printf(\"NO\\n\");\r\n\t\t        for(int i = 0; i < 26; i++)\r\n\t\t            s[i] = '0';\r\n\t\t    }\r\n\t\t    return 0;", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        char s[51];\r\n        scanf(\"%s\", &s);\r\n        int k;\r\n        for(k = 0; k < n; k++) {\r\n            char start = s[k];\r\n            int j = k;\r\n            while((j < n) && s[j] == start)\r\n                j++;\r\n            while((j < n) && s[j] != start)\r\n                j++;\r\n            if(j < n)\r\n                break;\r\n        }\r\n        if(k != n)\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7883008356545961, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "79480f38953105341d4d7edb7e260abd", "bug_code_uid": "993a922be08fe669db1db63bae3a21bf", "src_uid": "30cfce44a7a0922929fbe54446986748", "apr_id": "a29ddc6761da30ec7621f8320bca49a0", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,a,b,c,d,i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d %d %d %d\",&n,&a,&b,&c,&d);\n        if((((a-b)*n)>=(c-d) && ((a-b)*n)<=(c+d)) || (((a+b)*n)>=(c-d) && ((a+b)*n)<=(c+d)))\n        {\n            printf(\"Yes\\n\");\n        }\n        else printf(\"NO\\n\");\n        }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,a,b,c,d,i,x,y,p,q;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d %d %d %d\",&n,&a,&b,&c,&d);\n        x=(a-b)*n;\n        y=(a+b)*n;\n        p=c-d;\n        q=c+d;\n        if((x>=p && x<=q) || p>=x && p<=y)\n        {\n            printf(\"Yes\\n\");\n        }\n        else printf(\"NO\\n\");\n        }\n\n    return 0;\n}"}
{"similarity_score": 0.416260162601626, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "1056cd154d61eb74f8bbe8f34410eb8f", "bug_code_uid": "7427328e752bff5f6ebac9cb42f395ab", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "ae2481e2951ba00031e12553be916d02", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,x;\n    scanf(\"%d\",&n);\n     for(i=1;i<=n;i++)\n     {\n     scanf(\"%d\",&j);\n     if(j>30 && j<180)\n        printf(\"YES\\n\");\n     else printf(\"N0\\n\");\n \n     }\n}\n", "fixed": "#include<stdio.h>\n \nint main()\n{\n    int t,x,i,k;\n    float j;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&x);\n        for(i=3;i<=400;i++){\n            j=((i-2.0)*180)/i;\n            if(j==(float)x){\n                printf(\"YES\\n\");\n                break;\n            }\n            if(j>(float)x){\n                printf(\"NO\\n\");\n                break;\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9071729957805907, "equal_cnt": 21, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 17, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "46664ebc47516c0dd6edc9f93429c27c", "bug_code_uid": "02844027356f421ba2662f8f1335b18d", "src_uid": "3c066bad8ee6298b318bf0f4521c7c45", "apr_id": "9d16094ae64e096e19dad9e7862de560", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// Young Photographer\n\n#include<stdio.h>\nint main(void)\n{\n\tint n,a,b,x,i,arr1[101],arr2[101],max_arr1,min_arr2,y,z;\n\tscanf(\"%d %d\",&n,&x);\n\t\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(a<b)\n\t\t{\n\t\t\tarr1[i] = a;\n\t\t\tarr2[i] = b;\n\t\t}\n\t\telse if(a>b)\n\t\t{\n\t\t\tarr1[i] = b;\n\t\t\tarr2[i] = a;\t\n\t\t}\n\t}\n\n\tmax_arr1 = arr1[0];\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tif(arr1[i]>max_arr1)\n\t\t\tmax_arr1 = arr1[i];\n\t}\n\n\tmin_arr2 = arr2[0];\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tif(arr2[i]<min_arr2)\n\t\t\tmin_arr2 = arr2[i];\n\t}\n\n\tif(max_arr1>min_arr2)\n\t\tprintf(\"-1\\n\");\n\telse if(max_arr1==min_arr2)\n\t{\n\t\tif(x>=max_arr1)\n\t\t\tprintf(\"%d\\n\",x - max_arr1);\n\t\telse\n\t\t\tprintf(\"%d\\n\",max_arr1 - x);\n\t}\n\telse\n\t{\n\t\tif(max_arr1>=x)\n\t\t\ty = max_arr1 - x;\n\t\telse\n\t\t\ty = x - max_arr1;\n\n\t\tif(min_arr2>=x)\n\t\t\tz = min_arr2 - x;\n\t\telse\n\t\t\tz = x - min_arr2;\n\n\t\tif(y>=z)\n\t\t\tprintf(\"%d\\n\",z);\n\t\telse\n\t\t\tprintf(\"%d\\n\",y);\n\t}\n\n\treturn 0;\n}", "fixed": "// Young Photographer\n\n#include<stdio.h>\nint main(void)\n{\n\tint n,a,b,x,i,arr1[101],arr2[101],max_arr1,min_arr2,y,z;\n\tscanf(\"%d %d\",&n,&x);\n\t\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif(a<b)\n\t\t{\n\t\t\tarr1[i] = a;\n\t\t\tarr2[i] = b;\n\t\t}\n\t\telse if(a>b)\n\t\t{\n\t\t\tarr1[i] = b;\n\t\t\tarr2[i] = a;\t\n\t\t}\n\t}\n\n\tmax_arr1 = arr1[0];\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tif(arr1[i]>max_arr1)\n\t\t\tmax_arr1 = arr1[i];\n\t}\n\n\tmin_arr2 = arr2[0];\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tif(arr2[i]<min_arr2)\n\t\t\tmin_arr2 = arr2[i];\n\t}\n\n\tif(max_arr1>min_arr2)\n\t\tprintf(\"-1\\n\");\n\telse if(max_arr1==min_arr2)\n\t{\n\t\tif((x>=max_arr1)&&(x<=min_arr2))\n\t\t\tprintf(\"0\\n\");\n\t\telse\n\t\t{\n\t\t\tif(x>=max_arr1)\n\t\t\t\tprintf(\"%d\\n\",x - max_arr1);\n\t\t\telse\n\t\t\t\tprintf(\"%d\\n\",max_arr1 - x);\n\t\t}\n\t}\n\telse\n\t{\n\t\tif((x>=max_arr1)&&(x<=min_arr2))\n\t\t\tprintf(\"0\\n\");\n\t\telse\n\t\t{\n\t\t\tif(max_arr1>=x)\n\t\t\t\ty = max_arr1 - x;\n\t\t\telse\n\t\t\t\ty = x - max_arr1;\n\n\t\t\tif(min_arr2>=x)\n\t\t\t\tz = min_arr2 - x;\n\t\t\telse\n\t\t\t\tz = x - min_arr2;\n\n\t\t\tif(y>=z)\n\t\t\t\tprintf(\"%d\\n\",z);\n\t\t\telse\n\t\t\t\tprintf(\"%d\\n\",y);\n\t\t}\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.8284313725490197, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f79901c09a965729e6da56c46dd915ec", "bug_code_uid": "b9439f3b7db78a869c4289fb5339b87e", "src_uid": "3545385c183c29f9b95aa0f02b70954f", "apr_id": "aa4adc2cb5cf28b794b398698151f2c8", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,i,a,b;\n    int ara[14000];\n    int ara2[14000];\n    scanf(\"%d\",&n);\n    b = 0;\n    for(i = 0;i < n;i++){\n        scanf(\"%d\",&a);\n        if(a % 2 == 0){\n            ara[i] = a / 2;\n            ara2[i] = 0;\n        }\n        else{\n            ara[i] = a / 2;\n            ara2[i] = 1;\n        }\n        b = ara[i] + b;\n    }\n    for(i = 0;i < n;i++){\n        if(ara2[i] == 1){\n            if(b > 0){\n                b--;\n                ara[i] = ara[i] - 1;\n            }\n            else if(b < 0){\n                b++;\n                ara[i] = ara[i] + 1;\n            }\n        }\n        printf(\"%d\\n\",ara[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,i,a,b;\n    int ara[14000];\n    int ara2[14000];\n    int ara3[14000];\n    scanf(\"%d\",&n);\n    b = 0;\n    for(i = 0;i < n;i++){\n        scanf(\"%d\",&a);\n        if(a % 2 == 0){\n            ara[i] = a / 2;\n            ara2[i] = 0;\n        }\n        else{\n            ara[i] = a / 2;\n            ara2[i] = 1;\n            ara3[i] = a;\n        }\n        b = ara[i] + b;\n    }\n    for(i = 0;i < n;i++){\n        if(ara2[i] == 1){\n            if(b > 0){\n                b--;\n                ara[i] = ara[i] - 1;\n                if(ara3[i] > 0){\n                    ara[i] = ara[i] + 1;\n                    b++;\n                }\n            }\n            else if(b < 0){\n                b++;\n                ara[i] = ara[i] + 1;\n                if(ara3[i] < 0){\n                    ara[i] = ara[i] - 1;\n                    b--;\n                }\n            }\n        }\n        printf(\"%d\\n\",ara[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9782923299565847, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8325e4ee8c47f42a52b7e7241c2ff864", "bug_code_uid": "adb1a5d70aa2b1f6fdf7b696113c4b50", "src_uid": "c7f31e0c57cf15f71c401d826c3ee0ef", "apr_id": "3da31c1b708f2c5c81cae5b644ef4627", "difficulty": 1900, "tags": ["interactive", "bitmasks", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint x, i;\n\tputchar('?');\n\tfor(i=0;i<100;++i) printf(\" %d\", (i<<7)+((1<<7)-1));;putchar(10);fflush(stdout);\n\tscanf(\"%d\", &i);\n\tx=(~i)&((1<<7)-1);\n\tfor(i=0;i<100;++i) printf(\" %d\", i+(((1<<7)-1)<<7));;putchar(10);fflush(stdout);\n\tscanf(\"%d\", &i);\n\tx+=(~i)&(((1<<7)-1)<<7);\n\tprintf(\"! %d\\n\", x);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint x, i;\n\tputchar('?');\n\tfor(i=0;i<100;++i) printf(\" %d\", (i<<7)+((1<<7)-1));;putchar(10);fflush(stdout);\n\tscanf(\"%d\", &i);\n\tx=(~i)&((1<<7)-1);\n\tputchar('?');\n\tfor(i=0;i<100;++i) printf(\" %d\", i+(((1<<7)-1)<<7));;putchar(10);fflush(stdout);\n\tscanf(\"%d\", &i);\n\tx+=(~i)&(((1<<7)-1)<<7);\n\tprintf(\"! %d\\n\", x);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7164750957854407, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "eb6773fa248a334b97d6d89ec3e208dc", "bug_code_uid": "e1ca3132534204e52d930f091670fe22", "src_uid": "dea37a75a4aedd3a3a6fd51efdc3f8b2", "apr_id": "6976f8fc0fab0e26bceb2554ae610c6c", "difficulty": 1100, "tags": ["bitmasks", "constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// https://codeforces.com/contest/1682/problem/B\r\n\r\n# include <stdlib.h>\r\n# include <stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int *ans = malloc(t * sizeof(int));\r\n    for (int u = 0; u < t; u++)\r\n    {\r\n        int n = 0;\r\n        scanf(\"%d\", &n);\r\n        int *p = malloc(n*sizeof(int)); \r\n        for (int i = 0; i < n; i++) scanf(\"%d\", &p[i]);\r\n\r\n        int p_m;\r\n        for (int i = 0; i < n - 1; i++)\r\n        {\r\n            if(p[i] > p[i+1]) \r\n            { \r\n                p_m = i; \r\n                break;\r\n            }\r\n        }\r\n\r\n        int a = p[p_m];\r\n        for (int i = p_m + 1; i < n; i++)\r\n        {\r\n            if(p[i] != i) a &= p[i];\r\n        }\r\n        \r\n        ans[u] = a;\r\n\r\n        free(p);\r\n    }\r\n    \r\n    for (int u = 0; u < t; u++)\r\n    {\r\n        printf(\"%d\\n\", ans[u]);\r\n    }\r\n    \r\n\r\n    return 0;\r\n}", "fixed": "// https://codeforces.com/contest/1682/problem/B\r\n\r\n# include <stdlib.h>\r\n# include <stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int *ans = malloc(t * sizeof(int));\r\n    for (int u = 0; u < t; u++)\r\n    {\r\n        int n = 0;\r\n        scanf(\"%d\", &n);\r\n        int *p = malloc(n*sizeof(int)); \r\n        for (int i = 0; i < n; i++) scanf(\"%d\", &p[i]);\r\n\r\n        int x = -1;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if(x == -1 && p[i] != i) x = p[i];\r\n            else if(p[i] != i) x &= p[i];\r\n        }\r\n        ans[u] = x;\r\n\r\n        free(p);\r\n    }\r\n    \r\n    for (int u = 0; u < t; u++)\r\n    {\r\n        printf(\"%d\\n\", ans[u]);\r\n    }\r\n    \r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9828926905132193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "400eab0dd809128622c7334ab1a0c580", "bug_code_uid": "516965d0b8efcde0db4359bcdb6234c3", "src_uid": "7afa48f3411521ce49ba9595b0bef079", "apr_id": "bb33058401917f3092e1cac98b869544", "difficulty": 2000, "tags": ["dp", "combinatorics", "math", "matrices", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define mod 1000000007\n\nlong long quickmi(int a,int b)\n{\n    long long temp;\n\n    if(b==0)return 1;\n    if(b==1)return a;\n    temp=quickmi(a,b/2);\n    if(b&1)return ((temp*temp)%mod*a)%mod;\n    return (temp*temp)%mod;\n}\n\nint main()\n{\n    int even,n,i;\n    long long x,temp,p,q;\n\n    even=0;\n    scanf(\"%d\",&n);\n    x=1;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&temp);\n        if(temp%2==0)even=1;\n        x=(x*(temp%(mod-1)))%(mod-1);\n    }\n    q=quickmi(2,x-1);\n    p=q;\n    if(even)p=(p+1)%mod;\n    else p=(p+mod-1)%mod;\n    p=(p*quickmi(3,mod-2))%mod;\n    printf(\"%I64d/%I64d\\n\",p,q);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define mod 1000000007\n\nlong long quickmi(int a,int b)\n{\n    long long temp;\n\n    if(b==0)return 1;\n    if(b==1)return a;\n    temp=quickmi(a,b/2);\n    if(b&1)return ((temp*temp)%mod*a)%mod;\n    return (temp*temp)%mod;\n}\n\nint main()\n{\n    int even,n,i;\n    long long x,temp,p,q;\n\n    even=0;\n    scanf(\"%d\",&n);\n    x=1;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&temp);\n        if(temp%2==0)even=1;\n        x=(x*(temp%(mod-1)))%(mod-1);\n    }\n    if(x<=0)x+=mod-1;\n    q=quickmi(2,x-1);\n    p=q;\n    if(even)p=(p+1)%mod;\n    else p=(p+mod-1)%mod;\n    p=(p*quickmi(3,mod-2))%mod;\n    printf(\"%I64d/%I64d\\n\",p,q);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7454702329594478, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "c81740b7d564e6866539242d3792834b", "bug_code_uid": "be136170e50d006f0db7620e2622f2da", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "5df93645655376223441eaf3bf0959eb", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int price[100] = {0} , quality[100] = {0} , numLap = 0 , i = 0 , j = 0;\n   scanf(\"%d\" , &numLap);\n   for (i = 0 ; i < numLap ; i++ ){\n        scanf(\"%d\" , &price[i]);\n        scanf(\"%d\" , &quality[i]);\n   }\n        for (j = 1 ; j < numLap ; j++){\n        if (price[i] < quality[i]&& price[i+j] > quality[i+j]){\n            printf(\"Happy Alex\");\n            return 0 ;\n        }\n        }\n\nprintf(\"Poor Alex\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int price[100000] = {0} , quality[100000] = {0} , numLap = 0 , j = 0 , i = 0 , flag = 0;\n   scanf(\"%d\" , &numLap);\n   for (i = 0 ; i < numLap ; i++ ){\n        scanf(\"%d\" , &price[i]);\n        scanf(\"%d\" , &quality[i]);\n   }\n    for (i = 0 ; i < numLap ; i++){\n             if (price[i] < quality[i]){\n                    flag = 1 ;\n                }\n                }\n            if (flag == 1){\n        for (i = 0 ; i < numLap ; i++){\n        if (price[i] > quality[i]){\n            printf(\"Happy Alex\");\n            return 0 ;\n        }\n        }\n            }\n            else {\nprintf(\"Poor Alex\");\n}\n    return 0;\n}\n"}
{"similarity_score": 0.34172185430463575, "equal_cnt": 17, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "38d04b8ac44d7c7e022522fef2e0c147", "bug_code_uid": "a7a44cff07b720cae158bd4676f15e78", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "31bb5ba8efa920a1c95aeb422636a45f", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint i,n,rima=0,rana=0;\n\tchar arr[100];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",arr);\n\tlength=strlen(arr);\n\tfor(i=0;i<length;i++)\n\t{\n\t\tif(arr[i]=='A')\n\t\t{\n\t\t\trima++;\n\t\t}\n\t\t\n\telse if(arr[i]=='D')\n\t\t{\n\t\t\trana++;\n\t\t}\n\t}\n\tif(rima>rana)\n\tprintf(\"Anton\\n\");\n\telse if(rima<rana)\n\tprintf(\"Danik\\n\");\n\telse\n\tprintf(\"Friendship\\n\");\n\treturn 0;\n}\n\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,l1=0,l2=0;\n    scanf(\"%d\",&n);\n    char s[n];\n    scanf(\"%s\",s);\n    for(i=0; i<n; i++)\n    {\n        if(s[i]=='A')\n            l1++;\n        if(s[i]=='D')\n            l2++;\n    }\n    if(l1>l2)\n        printf(\"Anton\\n\");\n    else if(l1<l2)\n        printf(\"Danik\\n\");\n    else if(l1==l2)\n        printf(\"Friendship\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.8168067226890756, "equal_cnt": 16, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "52a77c2bc2d2b18dacb12e3eaae49844", "bug_code_uid": "7e0a5233eec3b4c902c1c9c5a61d5c65", "src_uid": "b429b42ba8be9df4b87b68420e9873bc", "apr_id": "06098bb7dbd8cb8dce943d1868214ab8", "difficulty": 1600, "tags": ["data structures", "combinatorics", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\ntypedef long long ll;\n\nchar s[4010];\nint h[40000];\n\nvoid solve(int a)\n{\n    int i, j, n, sum;\n    ll ans = 0;\n    memset(h, 0, sizeof(h));\n    n = strlen(s);\n    for (i = 0; i < n; i ++)\n    {\n\tsum = 0;\n\tfor (j = i; j < n && sum <= a; j ++)\n\t{\n\t    sum += (s[j] - '0');\n\t    h[sum] ++;\n\t}\n    }\n    if (a == 0)\n    {\n\tfor (i = 1; i <= n * 9; i ++)\n\t{\n\t    ans += (ll)h[0] * h[i];\n\t}\n\tans <<= 1;\n\tans += (ll)h[0] * h[0];\n\tprintf(\"%I64d\\n\", ans);\n\treturn;\n    }\n    for (i = 1; i <= n * 9 && i * i < a; i ++)\n    {\n\tif (a % i == 0 && a / i <= n * 9)\n\t{\n\t    ans += (ll)h[i] * h[a / i];\n\t}\n    }\n    ans <<= 1;\n    if (i * i == a)\n    {\n\tans += (ll)h[i] * h[i];\n    }\n    printf(\"%I64d\\n\", ans);\n}\n\nint main()\n{\n    int a;\n    while (scanf(\"%d%s\", &a, s) == 2)\n    {\n\tsolve(a);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\ntypedef long long ll;\n\nchar s[4010];\nint h[40000];\n\nvoid solve(int a)\n{\n    int i, j, n, sum;\n    ll ans = 0;\n    memset(h, 0, sizeof(h));\n    n = strlen(s);\n    for (i = 0; i < n; i ++)\n    {\n    sum = 0;\n    for (j = i; j < n; j ++)\n    {\n        sum += (s[j] - '0');\n        if (a > 0 && sum > a)\n        {\n        break;\n        }\n        h[sum] ++;\n    }\n    }\n    if (a == 0)\n    {\n    for (i = 1; i <= n * 9; i ++)\n    {\n        ans += (ll)h[0] * h[i];\n    }\n    ans <<= 1;\n    ans += (ll)h[0] * h[0];\n    printf(\"%I64d\\n\", ans);\n    return;\n    }\n    for (i = 1; i <= n * 9 && i * i < a; i ++)\n    {\n    if (a % i == 0 && a / i <= n * 9)\n    {\n        ans += (ll)h[i] * h[a / i];\n    }\n    }\n    ans <<= 1;\n    if (i * i == a)\n    {\n    ans += (ll)h[i] * h[i];\n    }\n    printf(\"%I64d\\n\", ans);\n}\n\nint main()\n{\n    int a;\n    while (scanf(\"%d%s\", &a, s) == 2)\n    {\n    solve(a);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7041884816753927, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "72f80045b11d79777941d3ea6d16b175", "bug_code_uid": "a904c89989f25764d25929ba07426ffe", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "9cc36fd0eaaf7b13c6e12b22b1763578", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,max=0,c=0,count=0,rem;\n    scanf(\"%d\",&n);\n    int ara[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0; i<n; i++){\n        if(ara[i]<ara[i+1])\n            count++;\n\n        else\n            count=0;\n        if(count!=0)\n        {\n            c=count;\n            if(c>max)\n                max=c;\n\n        }\n    }\n    printf(\"%d\\n\",max);\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,max=0,c=0,count=0,rem;\n    scanf(\"%d\",&n);\n    int ara[n];\n    j=-1;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]>j)\n            count++;\n\n        else\n            count=1;\n        j=ara[i];\n        if(count>max)\n            max=count;\n    }\n    printf(\"%d\\n\",max);\n}\n\n\n"}
{"similarity_score": 0.5899025686448184, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "f55ca18243dcf670ba58f7f96fd97012", "bug_code_uid": "206e1fe633980a2d86f0532bb500605e", "src_uid": "b784cebc7e50cc831fde480171b9eb84", "apr_id": "2ff8f9e7b5a8630afc6132f65e7115d9", "difficulty": 1400, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint a[100005];\nint main()\n{\n    int n,max=0,p=1,big;\n    scanf(\"%d\",&n);\n    int i,j;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;)\n    {\n        j=i+1;\n        p=1;\n        big=a[i];\n        while(abs(a[i]-a[j])<=1&&j<n&&abs(big-a[j])<=1)\n        {\n            if(a[j]>big)\n                big=a[j];\n            p++;\n            j++;\n        }\n        if(p>max)\n            max=p;\n        i++;\n    }\n    printf(\"%d\",max);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint a[100010];\nint main()\n{\n    int n,max=0,p=1,big,small;\n    scanf(\"%d\",&n);\n    int i,j;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n        for(i=0;i<n;i++)\n    {\n        big=a[i];\n        small=a[i];\n        for(j=i+1;j<n;j++)\n        {\n            if(a[j]>big)\n                big=a[j];\n            if(a[j]<small)\n                small=a[j];\n            if(big-small>1)\n                break;\n        }\n        p=j-i;\n        if(p>max)\n            max=p;\n        if(max==n-i+1)\n            break;\n        if(p>=n-i)\n            break;\n    }\n    printf(\"%d\",max);\n\n}\n"}
{"similarity_score": 0.6146146146146146, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "490472a145ac18f60aaf724a07a12974", "bug_code_uid": "92cdd30826732141fc41636e19db0cc1", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "73051d15eeed3fb0816fa84cd59404fc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x,i,n;\n    x=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        char stat[2];\n        scanf(\" %s\",stat);\n        if(((int)stat[0] == 43 && (int)stat[1] == 43 ) || ( (int)stat[1] == 43 (int)stat[2] == 43 )|| ((int)stat[2] == 43 (int)stat[0] == 43) )\n        {\n            x++;\n        }    \n        if(((int)stat[0] == 45 && (int)stat[1] == 45 ) || ( (int)stat[1] == 45 (int)stat[2] == 45 )|| ((int)stat[2] == 45 (int)stat[0] == 45))\n        {\n            x--;\n        }    \n    }\n    printf(\"%d\",x);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int x,i,n;\n    x=0;\n    scanf(\"%d\\n\",&n);\n    char stat[100];\n    for(i=0;i<n;i++)\n    {\n        gets(stat);\n        if((int)stat[0] == 43 || (int)stat[1] == 43 || (int)stat[2] == 43 )\n        {\n            x++;\n        }    \n        if((int)stat[0] == 45 || (int)stat[1] == 45 || (int)stat[2] == 45)\n        {\n            x--;\n        }    \n    }\n    printf(\"%d\",x);\n    return 0;\n}"}
{"similarity_score": 0.9990167158308751, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5928101142e126804953759cd9648624", "bug_code_uid": "f7ae502454dd7a105356ca4808ea187e", "src_uid": "c05426881a7dccc1aa79608b612290a7", "apr_id": "14718c75cf432b03c274c090290be3e4", "difficulty": 800, "tags": ["dfs and similar", "dp", "flows", "graph matchings", "graphs", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*\n *  Author: Giordano Colli\n *  Date: 20-07-2022\n *  Language: C\n *  Platform: \n *  Difficult:\n *  Algorithm Or Idea used:\n *  Credits: \n *  Problem name: Twins\n *  Link Problem: https://codeforces.com/problemset/problem/160/A\n *  Time Complexity: \n *\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n#define maxn 200000\nint max(int a,int b){\n  if (a >= b)\n    return a;\n  return b;\n}\n\nint solve(char* my,char* yours,int n){\n  int counter = 0;\n  for(int i=0;i<n;i++){\n    if(my[i] == '1'){\n      if(yours[i] == '0'){\n        yours[i] = 'x';\n        counter++;\n      }\n      else if(i-1 >=0 && yours[i-1] == '1'){\n        yours[i-1] = 'x';\n        counter++;\n      }\n      else if(i+1 < n && yours[i+1] == '1'){\n        yours[i+1] = 'x';\n        counter++;\n      }\n    }\n  }\n  return counter;\n}\n\nint main(void){\n  int k,n;\n  char my[maxn];\n  char yours[maxn];\n  scanf(\"%d\",&k);\n  for(int h;h<k;h++){\n    scanf(\"%d\",&n);\n    scanf(\"%s\",yours);\n    scanf(\"%s\",my);\n    printf(\"%d\\n\", solve(my,yours,n));\n  }\n  return 0;\n}\n\n", "fixed": "/*\n *  Author: Giordano Colli\n *  Date: 20-07-2022\n *  Language: C\n *  Platform: \n *  Difficult:\n *  Algorithm Or Idea used:\n *  Credits: \n *  Problem name: Twins\n *  Link Problem: https://codeforces.com/problemset/problem/160/A\n *  Time Complexity: \n *\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n#define maxn 210000\nint max(int a,int b){\n  if (a >= b)\n    return a;\n  return b;\n}\n\nint solve(char* my,char* yours,int n){\n  int counter = 0;\n  for(int i=0;i<n;i++){\n    if(my[i] == '1'){\n      if(yours[i] == '0'){\n        yours[i] = 'x';\n        counter++;\n      }\n      else if(i-1 >=0 && yours[i-1] == '1'){\n        yours[i-1] = 'x';\n        counter++;\n      }\n      else if(i+1 < n && yours[i+1] == '1'){\n        yours[i+1] = 'x';\n        counter++;\n      }\n    }\n  }\n  return counter;\n}\n\nint main(void){\n  int k,n;\n  char my[maxn];\n  char yours[maxn];\n  scanf(\"%d\",&k);\n  for(int h;h<k;h++){\n    scanf(\"%d\",&n);\n    scanf(\"%s\",yours);\n    scanf(\"%s\",my);\n    printf(\"%d\\n\", solve(my,yours,n));\n  }\n  return 0;\n}\n\n"}
{"similarity_score": 0.3765112262521589, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "620d8e6d93614da2b78bb66802fe9281", "bug_code_uid": "845094b7d944a1ae6fdb6047dee42f1b", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "762a126caadca17fb01b2f632df6de7f", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int a,b[1000],i;\n    scanf(\"%d\",&a);\n    for(i=0;i<a;i++){\n        scanf(\"%d\",&b[i]);\n    }\n    if(a%2==0){\n        printf(\"%d\",a-2);\n    }\n    else{\n        printf(\"%d\",1);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\n   int a,b,i,even=0,odd=0,sum=0;\n   scanf(\"%d\",&b);\n   for(i=1;i<=b;i++){\n      scanf(\"%d\",&a);\n      if(a%2==0){\n        even++;\n    }\n        else{\n        odd++;\n    }\n      sum=sum+a;\n}\n      if(sum%2==0){\n       printf(\"%d\",even);\n    }\n       else{\n       printf(\"%d\",odd);\n    }\n return 0;\n\n}\n"}
{"similarity_score": 0.46098003629764067, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "c096c9ac1cb45512569e8be3026dff25", "bug_code_uid": "25375c0529b5ae479995a7eec38bd29f", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "d29f600f8a18343a45ec96ad7a8fbf86", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int n;\n    scanf(\"%d\", &n);\n    int i;\n    int a[i];\n    for(i=0; i<n; ++i){\n        a[i]=0;\n    }\n    int j;\n    int t;\n    int m;\n    int r=n;\n    for(i=0; i<n; ++i){\n        scanf(\"%d\", &m);\n        if(m==r){\n            a[r-1]=r;\n            for(j=r-1; a[j]!=0&&j>=0; --j){\n                printf(\"%d \", a[j]);\n                --r;\n            }\n            printf(\"\\n\");\n        }\n        else{\n            a[m-1]=m;\n            printf(\"\\n\");\n        }\n\n    }\n}", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    int n;\n    scanf(\"%d\", &n);\n    int a[n];\n    int i;\n    for(i=0; i<n; ++i){\n        a[i]=0;\n    }\n    int m;\n    int r=n;\n    int j;\n    for(i=0; i<n; ++i){\n        scanf(\"%d\", &m);\n        a[m-1]=m;\n        \n        if(m!=r){\n            printf(\"\\n\");\n        }\n        else{\n            for(j=r; j>0; --j){\n                if(a[j-1]==0){\n                    r=j;\n                    break;\n                }\n                else{\n                    printf(\"%d \", a[j-1]);\n                }\n            }\n            printf(\"\\n\");\n        }\n    }\n    \n}"}
{"similarity_score": 0.6571668063704945, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "916d9f8fc5f14097fa791b02dd1dc511", "bug_code_uid": "bba1cee693ca05f8669045215258fe89", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "5ad7f457d15ebf422bbd6f18321925cc", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n     long long int n,t,i,j,k,l,s;\n     scanf(\"%I64d %I64d\",&n,&t);\n     long long int a[n];\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%I64d\",&a[i]);\n     }\n     l=0;\n     for(i=1;i<=n ; i++)\n     {s=0,k=0;\n          for(j=i;j<=n;j++)\n          {\n               s+=a[j];\n               if(s<=t)\n               k++;\n               else \n               break;\n               \n          }\n          if(k>l)\n          l=k;\n     }\n     printf(\"%I64d\",l);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n     long long int n,t,i,j;\n     scanf(\"%I64d %I64d\",&n,&t);\n     long long int a[n];\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%I64d\",&a[i]);\n     }\n     long long int s=0,max=0,b=0,m=0;\n     for(i=1;i<=n;i++)\n     {\n          if(i!=1)\n          {\n               s-=a[i-1];\n               b--;\n          }\n          for(j=m+1;j<=n;j++)\n          {\n               s+=a[j];\n               if(s>t)\n               {\n                    s-=a[j];\n               break;\n               }\n               else \n               {\n                    b++;\n                    m++;\n               }\n          }\n          if(b>max)\n          max=b;\n     }\n     printf(\"%I64d\",max);\n}"}
{"similarity_score": 0.9949545913218971, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "73309f3f7ab1c548f03d22da87e4356b", "bug_code_uid": "79787446cc4ce95034a639b638958bfa", "src_uid": "6f5d41346419901c830233b3bf5c9e65", "apr_id": "3e36c0422ab83a4af7bfb0340c0530ec", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\nint n;\nscanf(\"%d\",&n);\nint g[n];int i=0;\nfor(i=0;i<n;i++)\n    scanf(\"%d\",&g[i]);\ndouble a=0.0,b=0.0,c=0.0,e=0.0;double d=0.0;\nfor(i=0;i<n;i++){\n        d=g[i];\n    b=(d+sqrt(d*d-4*d))/2;\n    if(b>=0.0)\n        a=d-b;\n    c=(d-sqrt(d*d-4*d))/2;\n    if(c>=0.0)\n        e=d-b;\n    if(b>=0.0 && a>=0.0)\n        printf(\"Y %.9lf %.9lf\\n\",b,a);\n    else if(c>=0.0 && d>=0.0)\n        printf(\"Y %.9lf %.9lf\\n\",e,c);\n    else\n        printf(\"N\\n\");}\nreturn 0;}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\nint n;\nscanf(\"%d\",&n);\nint g[n];int i=0;\nfor(i=0;i<n;i++)\n    scanf(\"%d\",&g[i]);\ndouble a=0.0,b=0.0,c=0.0,e=0.0;double d=0.0;\nfor(i=0;i<n;i++){\n        d=g[i];\n    b=(d+sqrt(d*d-4*d))/2;\n    if(b>=0.0)\n        a=d-b;\n    c=(d-sqrt(d*d-4*d))/2;\n    if(c>=0.0)\n        e=d-b;\n    if(b>=0.0 && a>=0.0)\n        printf(\"Y %.9f %.9f\\n\",b,a);\n    else if(c>=0.0 && d>=0.0)\n        printf(\"Y %.9f %.9f\\n\",e,c);\n    else\n        printf(\"N\\n\");}\nreturn 0;}"}
{"similarity_score": 0.6398929049531459, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "35e59af258dd9283ba37345c0961e03f", "bug_code_uid": "7880e7da032f822c9a379e933fd56d55", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "5a393e614f483b4c8e78f2558852ee65", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100];\n    int n,i,s=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<= n;i++)\n    {\n        scanf(\"%s\",a);\n        if(a[0]=='x')\n            s++;\n        else if(a[0]== '-')\n            --s;\n        else if(a[0] =='+')\n            ++s;\n        else if(a[1]=='-')\n            s--;\n    }\n    printf(\"%d\\n\",s);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100];\n    int n,i,s=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<= n;i++)\n    {\n        scanf(\"%s\",a);\n        if(a[1]=='+')\n            s++;\n        else if(a[0]== '-')\n            --s;\n        else if(a[0] =='+')\n            ++s;\n        else if(a[1]=='-')\n            s--;\n    }\n    printf(\"%d\\n\",s);\n\n    return 0;\n}\n"}
{"similarity_score": 0.43956043956043955, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c5750c951cb95ba5084785b7c257b901", "bug_code_uid": "1ea73415ab714806c224ee2c8e572748", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "4ff34275440a614b2a53cdd2fe024524", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int m[n],c[n],ml=0,cl=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&m[i],&c[i]);\n    }\n    for(i=0;i<n;i++){\n        if(m[i]>c[i]){\n            ml=ml+1;\n        }else if(c[i]>m[i]){\n            cl=cl+1;\n        }else{\n            ml=ml+1;\n            cl=cl+1;\n        }\n    }\n    if(ml > cl){\n        printf(\"Mishka\");\n    }else if(cl>ml){\n        printf(\"Chris\");\n    }else{\n        printf(\"Fiendship is magic!^^\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n],b[n],m=0,c=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n    for(i=0;i<n;i++){\n        if(a[i]>b[i]){\n            m=m+1;\n        }else if(b[i]>a[i]){\n            c=c+1;\n        }else{\n            m=m+1;\n            c=c+1;\n        }\n    }\n    if(m > c){\n        printf(\"Mishka\");\n    }else if(c>m){\n        printf(\"Chris\");\n    }else{\n        printf(\"Friendship is magic!^^\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.8864795918367347, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "a3f6e7447800ead9b45b2f590c46fadc", "bug_code_uid": "add423466768d58a8d0d3f69876867de", "src_uid": "fc547fc83ebbcc3c058a069ef9fef62c", "apr_id": "488267758210d4979f045bfb65969ebb", "difficulty": 1100, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef long long int ulli;\r\nulli gcd(ulli a,ulli b){\r\n\tif(a==0)\r\n\t return b;\r\n\telse\r\n   return gcd(b,a%b);}\r\nint cmp(const void*a,const void*b){\r\n\treturn (*(int*)a-*(int*)b);}\r\nint min(int a,int b){\r\n\tif(a<=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\n int max(int a,int b){\r\n \tif(a>=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint a,b,c,m,r,s,n;\r\n\t\tscanf(\"%d %d %d %d\",&a,&b,&c,&m);\r\n\t\tn=a+b+c-3;\r\n\t\tif(m<=n){\r\n\t\t\tr=max(a,max(b,c));\r\n\t\t\tif(r==a)\r\n\t\t\t s=b+c;\r\n\t\t\telse if(r==b)\r\n\t\t\t s=a+c;\r\n\t\t\telse\r\n       s=a+b;\r\n      if((s-r)<=m ||(s-r-1)<=m)\r\n       printf(\"Yes\");\r\n      else\r\n       printf(\"No\");\r\n       }\r\n    else\r\n     printf(\"No\");\r\n    printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef long long int ulli;\r\nulli gcd(ulli a,ulli b){\r\n\tif(a==0)\r\n\t return b;\r\n\telse\r\n   return gcd(b,a%b);}\r\nint cmp(const void*a,const void*b){\r\n\treturn (*(int*)a-*(int*)b);}\r\nint min(int a,int b){\r\n\tif(a<=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\n int max(int a,int b){\r\n \tif(a>=b)\r\n\t return a;\r\n\telse\r\n   return b;}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint a,b,c,m,r,s,n;\r\n\t\tscanf(\"%d %d %d %d\",&a,&b,&c,&m);\r\n\t\tn=a+b+c-3;\r\n\t\tif(m<=n){\r\n\t\t\tr=max(a,max(b,c));\r\n\t\t\tif(r==a)\r\n\t\t\t s=a-(b+c+1);\r\n\t\t\telse if(r==b)\r\n\t\t\t s=b-(a+c+1);\r\n\t\t\telse\r\n       s=c-(a+b+1);\r\n      if((s)<0)s=0;\r\n      if((s)<=m)\r\n       printf(\"Yes\");\r\n      else\r\n       printf(\"No\");\r\n       }\r\n    else\r\n     printf(\"No\");\r\n    printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n \r\n"}
{"similarity_score": 0.9840848806366048, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7c13d8801a9ae2ec2b5c4d6b9cf72b55", "bug_code_uid": "da86bec215871b306dbeda28391e9a51", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "949abc1c256ebc104e780ea0b1290c70", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    int i,d=0;\n    for(i=0;i<t;i++){\n        scanf(\"%d\",&n);\n            for(int k=2;k>=2;k++){\n                if((n)%(pow(2,k)-1)==0){\n                    printf(\"%d\",n/(pow(2,k)-1));\n                    break;\n                }\n            }\n        \n    }\n    \n    \n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    int i,d=0;\n    for(i=0;i<t;i++){\n        scanf(\"%d\",&n);\n            for(int k=2;k>=2;k++){\n                if((n)%(int)(pow(2,k)-1)==0){\n                    printf(\"%d\\n\",n/(int)(pow(2,k)-1));\n                    break;\n                }\n            }\n        \n    }\n    \n    \n    \n    return 0;\n}"}
{"similarity_score": 0.7336122733612274, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "076fcb59750578c49152d877f9d38de5", "bug_code_uid": "dc30df2908c456c03180c571212d7272", "src_uid": "bf115b24d85a0581e709c012793b248b", "apr_id": "10705a2f8eb325e9e0a234524373a914", "difficulty": 1600, "tags": ["combinatorics", "number theory", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\tint n,m,j,i,arr[200000];\n\tlong long int res=1;\n\t\n\tscanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)scanf(\"%d\",&arr[i]);\n     \n    for(i=0;i<n;i++){\n    \tfor(j=i+1;j<n;j++){\n    \t\tres=res*abs(arr[j]-arr[i])%m;\n\t\t}\n\t} \n\tprintf(\"%lld\",res);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\tint n,m,j,i,arr[200000];\n\tlong long int temp,res=1;\n\t\n\tscanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)scanf(\"%d\",&arr[i]); \n     \n     if(n>m){\n     \tprintf(\"0\");\n     \treturn 0;\n\t }\n    for(i=0;i<n;i++){\n    \ttemp=1;\n    \tfor(j=i+1;j<n;j++){\n    \t\ttemp=temp*abs(arr[j]-arr[i])%m;\n    \t\tres=res*abs(arr[j]-arr[i])%m;\n\t\t}\n\t\tif(res==0)break;\n\t} \n\tprintf(\"%d\",res);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9991015274034142, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2f0de8130c0c3ffa349f6d3766a3db91", "bug_code_uid": "37b84275b7f56a10773cfe01a407f7fe", "src_uid": "e0a3c678f6d1d89420c8162b0ddfcef7", "apr_id": "fef4f9d74d4f0bd9427e754a69c517c3", "difficulty": 1500, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define ll long long int\n\n#define N 100\nll pas[N];\n\nll a, b, ng;\nint res = -1;\n\nvoid solve() {\n\tint count = 0;\n\tll curr = 1;\n\twhile (curr < ng) {\n\t\tpas[count++] = curr;\n\t\tcurr *= a;\n\t\tif (curr == 1) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (int i = 0; i < count; i++) {\n\t\tif (pas[i] == ng) {\n\t\t\tres = 1;\n\t\t\treturn;\n\t\t} else if (pas[i] < ng && (ng-pas[i])%b == 0) {\n\t\t\tres = 1;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint main() {\n\tint t; scanf(\"%d\", &t);\n\twhile (t--) {\n\t\tscanf(\"%lld %lld %lld\", &ng, &a, &b);\n\t\tres = -1;\n\t\tsolve();\n\t\tputs(res == 1 ? \"Yes\" : \"No\");\n\t}\n}\n", "fixed": "#include <stdio.h>\n\n#define ll long long int\n\n#define N 100\nll pas[N];\n\nll a, b, ng;\nint res = -1;\n\nvoid solve() {\n\tint count = 0;\n\tll curr = 1;\n\twhile (curr <= ng) {\n\t\tpas[count++] = curr;\n\t\tcurr *= a;\n\t\tif (curr == 1) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (int i = 0; i < count; i++) {\n\t\tif (pas[i] == ng) {\n\t\t\tres = 1;\n\t\t\treturn;\n\t\t} else if (pas[i] < ng && (ng-pas[i])%b == 0) {\n\t\t\tres = 1;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nint main() {\n\tint t; scanf(\"%d\", &t);\n\twhile (t--) {\n\t\tscanf(\"%lld %lld %lld\", &ng, &a, &b);\n\t\tres = -1;\n\t\tsolve();\n\t\tputs(res == 1 ? \"Yes\" : \"No\");\n\t}\n}\n"}
{"similarity_score": 0.2737642585551331, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "6a6b27dc334c8e67663e86020cfcc8da", "bug_code_uid": "d93b57b3db072e64f158600cb18c6212", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "cbc67c9babb342aabe518c66d0b85d1e", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tlong int n,m;\n\twhile(scanf(\"%ld%ld\",&n,&m)!=EOF)\n\t{\n\t\tlong sum=1,sum1=0,count=1,i,a[10000]={0},j;\n\t\t\n\t\t    for(j=0;j<(2*m*n);j++)\n\t     \t{\n\t     \t\tscanf(\"%ld\",&a[j]);\n\t\t    }\n\t\t    for(i=1;i<(2*m*n);i=i+2)\n\t\t    {\n\t\t    \tif(a[i-1]==1 || a[i]==1)\n\t\t    \t{\n\t\t    \t\tcount++;\n\t\t\t\t}\n\t\t\t\t//printf(\"%ld %ld\\n\",i,i-1);\n\t\t\t}\n\t\t\t//sum=sum+count;\n\t\tprintf(\"%ld\\n\",count-1);\t\t\n\t\t\n\t\t\n\t}\n\t\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long long n,m,a[200020]={0},i,j;\n    while(scanf(\"%lld%lld\",&n,&m)!=EOF)\n    {\n        long long count=0;\n        for(i=1;i<=(n*m*2);i++)\n        {\n        \n        scanf(\"%lld\",&a[i]);\n        }\n        for(j=2;j<=(n*m*2);j=j+2)\n        {\n            if(a[j]==1 || a[j-1]==1)\n            count++;\n        }\n        printf(\"%lld\\n\",count);\n    }\n    \n}"}
{"similarity_score": 0.9854227405247813, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2cca74a0941ce6d87329e11342e0209c", "bug_code_uid": "aaf79f2bf51419c48fef367cd9865333", "src_uid": "960e4c234666d2444b80d5966f1d285d", "apr_id": "d6ca5e465c8612b9e28adc49422a7ceb", "difficulty": 1300, "tags": ["two pointers", "implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define N 1000000\nint main()\n{\n\tstatic char s[N + 1];\n\tint n,i;\n\tlong long int heavy, cnt;\n\tscanf(\"%s\", s);\n\tn=strlen(s);\n\theavy=cnt=0;\n\tfor (i=0;i<=n-5;i++)\n\t\tif (strncmp(s[i], \"heavy\", 5) == 0)\n\t\t\theavy++;\n\t\telse if (strncmp(s[i], \"metal\", 5) == 0)\n\t\t\tcnt += heavy;\n\tprintf(\"%lld\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define N 1000000\nint main()\n{\n\tstatic char s[N + 1];\n\tint n,i;\n\tlong long int heavy, cnt;\n\tscanf(\"%s\", s);\n\tn=strlen(s);\n\theavy=cnt=0;\n\tfor (i=0;i<=n-5;i++)\n\t\tif (strncmp(s+i, \"heavy\", 5) == 0)\n\t\t\theavy++;\n\t\telse if (strncmp(s+i, \"metal\", 5) == 0)\n\t\t\tcnt += heavy;\n\tprintf(\"%lld\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9622641509433962, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "03d844290e211b9d435c801eb7c807d7", "bug_code_uid": "571637265c6544008dfef7a44aa964b0", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "97ddbc87af3b501c26ff38815293b043", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n\n{\n    int n,d[100],i,a,b,sum=0;\n    \n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d %d\",&a,&b);\n    \n    for(i=a;i<b;i++)\n    {\n        sum=sum+a[i];\n    }\n    printf(\"%d\",sum);\n}", "fixed": "#include<stdio.h>\nint main()\n\n{\n    int n,d[100],i,a,b,sum=0;\n    \n    scanf(\"%d\",&n);\n    for(i=1;i<=n-1;i++)\n    {\n        scanf(\"%d\",&d[i]);\n    }\n    scanf(\"%d %d\",&a,&b);\n    \n    for(i=a;i<b;i++)\n    {\n        sum=sum+d[i];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}"}
{"similarity_score": 0.9976470588235294, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0de0084fcd4bfcf5a54470b9667b76e1", "bug_code_uid": "8931a8c44484ccdd4897f98cb27d4ebb", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "fe988495735ef22b5153f48d10f6b4d1", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nchar a[100001], b[100001];\n\nint main() {\n    int r, sa, sb;\n    gets( a );\n    gets( b );\n    r = strcmp(a, b);\n    if( r == 0 ) {\n        printf( \"-1\" );\n    }\n    else {\n        sa = strlen(a);\n        sb = strlen(b);\n        if( sa < sb ) {\n            printf( \"%d\", sb );\n        }\n        else {\n            printf( \"%d\", sb );\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nchar a[100001], b[100001];\n\nint main() {\n    int r, sa, sb;\n    gets( a );\n    gets( b );\n    r = strcmp(a, b);\n    if( r == 0 ) {\n        printf( \"-1\" );\n    }\n    else {\n        sa = strlen(a);\n        sb = strlen(b);\n        if( sa < sb ) {\n            printf( \"%d\", sb );\n        }\n        else {\n            printf( \"%d\", sa );\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9940119760479041, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c81efcb6f645bd2965fc0a34fbdebbbe", "bug_code_uid": "75997af278a5121afb8d025e761a5f46", "src_uid": "c47d999006d4738868f58168c7e2df2b", "apr_id": "dd7388f325e29f4db7e04e091a8474c5", "difficulty": 900, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX(_a, _b) ( _a > _b ? _a : _b)\n#define MIN(_a, _b) ( _a < _b ? _a : _b)\n\nint comp(const void *a, const void *b)\n{\n    if (*(int *)a > *(int *)b)\n        return 1;\n    else if (*(int *)a < *(int *)b)\n        return -1;\n    else\n        return 0;\n}\n\nint main()\n{\n    int test_num;\n    int t;\n    int p[100000];\n\n    scanf(\"%d\", &test_num);\n\n    for (t = 0; t < test_num; t++)\n    {\n        int m, c, i;\n\n        scanf(\"%d %d\", &m, &c);\n\n        for (i = 0; i < m; i++)\n            scanf(\"%d\", &p[i]);\n        qsort(p, m, sizeof(int), comp);\n\n        c -= (m + p[m - 1]);\n        for (i = m - 1; i > 0; i--)\n           c -= p[i];\n\n        printf(\"%s\\n\", c >= 0 ? \"YES\" : \"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX(_a, _b) ( _a > _b ? _a : _b)\n#define MIN(_a, _b) ( _a < _b ? _a : _b)\n\nint comp(const void *a, const void *b)\n{\n    if (*(int *)a > *(int *)b)\n        return 1;\n    else if (*(int *)a < *(int *)b)\n        return -1;\n    else\n        return 0;\n}\n\nint main()\n{\n    int test_num;\n    int t;\n    int p[100000];\n\n    scanf(\"%d\", &test_num);\n\n    for (t = 0; t < test_num; t++)\n    {\n        int m, c, i;\n\n        scanf(\"%d %d\", &m, &c);\n\n        for (i = 0; i < m; i++)\n            scanf(\"%d\", &p[i]);\n        qsort(p, m, sizeof(int), comp);\n\n        c -= (m + p[m - 1]);\n        for (i = m - 1; i > 0 && c >=0; i--)\n           c -= p[i];\n\n        printf(\"%s\\n\", c >= 0 ? \"YES\" : \"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9294258373205742, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "294fc1a3fe5478bf6e6a42275c3ecac4", "bug_code_uid": "b6e0d391fd343e2c1333288af6cd4239", "src_uid": "0b9be2f076cfa13cdc76c489bf1ea416", "apr_id": "f97dcc529c291d66f86aed7aef5ce609", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(int argc, char const *argv[])\r\n{\r\n    int i,l,count1=0,count2=0,r=0,t;\r\n    char a[999999];\r\n    scanf(\"%d\\n\",&t);\r\n    while(t--){\r\n        gets(a);\r\n        l=strlen(a);\r\n        for ( i = 0; i < l;  i++)\r\n        {\r\n            if(l==1){\r\n                r=1;\r\n                break;\r\n            }\r\n            else if(a[0]=='B' || a[l-1]=='A'){\r\n                r=1;\r\n                break;\r\n            }\r\n            else if(a[i]=='A')\r\n                count1++;\r\n            else if(a[i]=='B'){\r\n                count2++;\r\n                if(count2>count1){\r\n                    r=1;\r\n                    break;\r\n            }\r\n            }\r\n        }\r\n        if(r==0)    printf(\"YES\\n\");\r\n        else if(r==1)    printf(\"NO\\n\");\r\n        \r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(int argc, char const *argv[])\r\n{\r\n    int t;\r\n    scanf(\"%d\\n\",&t);\r\n    while(t--){\r\n        int  i,l,count1=0,count2=0,r=0;\r\n        char a[1000000];\r\n        gets(a);\r\n        l=strlen(a);\r\n        for ( i = 0; i < l;  i++)\r\n        {\r\n            if(l==1){\r\n                r=1;\r\n                break;\r\n            }\r\n            else if(a[0]=='B' || a[l-1]=='A'){\r\n                r=1;\r\n                break;\r\n            }\r\n            else if(a[i]=='A')\r\n                count1++;\r\n            else if(a[i]=='B'){\r\n                count2++;\r\n                if(count2 > count1){\r\n                    r=1;\r\n                    break;\r\n            }\r\n            }\r\n        }\r\n        if(r==0)    printf(\"YES\\n\");\r\n        else if(r==1)    printf(\"NO\\n\");\r\n        \r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9604863221884499, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "85c54ada36d2f0b8cb421549686c8c5e", "bug_code_uid": "cb61ba757da8af52d4dcf2efc4bc0589", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "20133ec7391304c1b65677034addcd38", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a,b,c,d,s[10000],i=0,tem;\n\n    scanf(\"%d\",&a);\n\n     for(b=1;b<=a;b++){\n        scanf(\"%d\",&s[b]);\n     }\n\n     for(b=1;b<=a/2;b+=2){\n\n        tem=s[b];\n        s[b]=s[a-i];\n        s[a-i]=tem;\n        i+=2;\n\n     }\n    for(b=1;b<=a;b++)\n\n        printf(\"%d \",s[b]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint s[1000000];\n\nint main()\n{\n    int a,b,c,d,i=0,tem;\n\n    scanf(\"%d\",&a);\n\n     for(b=1;b<=a;b++){\n        scanf(\"%d\",&s[b]);\n     }\n\n     for(b=1;b<=a/2;b+=2){\n\n        tem=s[b];\n        s[b]=s[a-i];\n        s[a-i]=tem;\n        i+=2;\n\n     }\n    for(b=1;b<=a;b++)\n\n        printf(\"%d \",s[b]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7064935064935065, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "293dbc4e11322d518011527ddabbadfb", "bug_code_uid": "46b470f5ededf3079a087d938d43632f", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "0191ce8898feadc4774e09862972b388", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nmain()\n{\n                    int n, i, k;\n                    char a[100][2];\n                    scanf(\"%d %d\", &n);\n                    k=1;\n                    for(i=0;i<n;i++)\n                                        gets(a[i]);\n                                        //scanf(\"%s\", &a[i]);\n                    for(i=0;i<n-1;i++)\n                                        if(a[i][1]==a[i+1][1])\n                                                            k++;\n                    printf(\"%d\", k);\n                    return 0;\n}", "fixed": "#include<stdio.h>\n//#include<string.h>\n\nmain()\n{\n                    long int n, i, k;\n                    char a[100000][2];\n                    scanf(\"%li\", &n);\n                    k=1;\n                    scanf(\"%s\", &a[0]);\n                    for(i=1;i<n;i++)\n                    {                   scanf(\"%s\", &a[i]);\n                                        if(a[i][0]!=a[i-1][0])\n                                                           k++;\n                    }\n                    //printf(\"%c\", a[0][0]);\n                    printf(\"%d\", k);\n                    return 0;\n}"}
{"similarity_score": 0.9990800367985281, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6b648d300fd535d412afc81261708b6b", "bug_code_uid": "edd5f60ce5fb504a53481c87b3e5cc7f", "src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "apr_id": "91370adf210d6efda23d8c8a12f8242d", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n;\n    char a[10];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",a);\n    if(n==12)\n    {\n        if(a[3]>'5')a[3]='5';\n        if(a[0]=='0' && a[1]=='0')a[0]='1';\n        else if(a[0]=='1' && a[1]>'2')a[1]='0';\n        else if(a[0]!='0' && a[0]!='1' && a[1]!='0')a[0]='0';\n        else if(a[0]!='0' && a[0]!='1' && a[1]=='0')a[0]='1';\n\n    }\n    else if(n==24)\n    {\n        if(a[3]>'5')a[3]='5';\n        if(a[0]>'2')a[0]='0';\n        else if(a[0]=='2' && a[1]>'4')a[1]='0';\n    }\n    printf(\"%s\\n\",a);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n;\n    char a[10];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",a);\n    if(n==12)\n    {\n        if(a[3]>'5')a[3]='5';\n        if(a[0]=='0' && a[1]=='0')a[0]='1';\n        else if(a[0]=='1' && a[1]>'2')a[1]='0';\n        else if(a[0]!='0' && a[0]!='1' && a[1]!='0')a[0]='0';\n        else if(a[0]!='0' && a[0]!='1' && a[1]=='0')a[0]='1';\n\n    }\n    else if(n==24)\n    {\n        if(a[3]>'5')a[3]='5';\n        if(a[0]>'2')a[0]='0';\n        else if(a[0]=='2' && a[1]>='4')a[1]='0';\n    }\n    printf(\"%s\\n\",a);\n    return 0;\n}\n"}
{"similarity_score": 0.9053497942386831, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2bf8b66774fc53ebbba252b6b0c6dcc6", "bug_code_uid": "c45b9400fdfe73d12a0d9bfa93495475", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "e9225a10476f0ff245b60631ac62e9e7", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        if(n%m==0){\n            printf(\"YES\");\n        }else{\n            printf(\"NO\");\n        }\n    }\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n        if(n%m==0){\n            printf(\"YES\\n\");\n        }else{\n            printf(\"NO\\n\");\n        }\n    }\n}"}
{"similarity_score": 0.9913606911447084, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0da415486fa8f103af4716d9e92a220a", "bug_code_uid": "050fb3ebcdc61ed19dd24ca32832981f", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "a39f122eaeff961cb5f3228c02d9e7fe", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int r;\r\n        scanf(\"%d\",&r);\r\n        if(r >= 1900){\r\n            printf(\"Division 1\");\r\n        }\r\n        else if(r>=1600  && r<=1899){\r\n            printf(\"Division 2\");\r\n        }\r\n        else if(r>=1400  && r<=1599){\r\n            printf(\"Division 3\");\r\n        }\r\n        else if(r<=1399){\r\n            printf(\"Division 4\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int r;\r\n        scanf(\"%d\",&r);\r\n        if(r >= 1900){\r\n            printf(\"Division 1\\n\");\r\n        }\r\n        else if(r>=1600  && r<=1899){\r\n            printf(\"Division 2\\n\");\r\n        }\r\n        else if(r>=1400  && r<=1599){\r\n            printf(\"Division 3\\n\");\r\n        }\r\n        else if(r<=1399){\r\n            printf(\"Division 4\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7485265225933202, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "43de705f4ad94d1ce28e7be912e9e0a9", "bug_code_uid": "388c889f44e82e93bfaa97ff9ced208c", "src_uid": "636a30a2b0038ee1731325a5fc2df73a", "apr_id": "15ea5c57bb7986e75a418815c58acb3c", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,w,m,s=0,h,r,t;\n    int ara[200];\n    int ara2[200];\n    int ara3[200];\n    for(i=1;i<6;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=1;i<6;i++){\n        scanf(\"%d\",&ara2[i]);\n    }\n    scanf(\"%d %d\",&r,&w);\n    for(i=1;i<6;i++){\n        s=s+(500*i)-((500*i)/250)*(ara[i]);\n    }\n    h=s+r*100-w*50;\n    for(i=1;i<6;i++){\n        h=h-50*ara2[i];\n    }\n    printf(\"%d\",h);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int i,w,s=0,h,r,t;\n    int ara[2000];\n    int ara2[2000];\n    for(i=1;i<6;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=1;i<6;i++){\n        scanf(\"%d\",&ara2[i]);\n    }\n    scanf(\"%d %d\",&r,&w);\n    for(i=1;i<6;i++){\n            t=((500*i)-((500*i)/250)*(ara[i]))-50*ara2[i];\n    if(t<0.3*500*i){\n        s=s+0.3*500*i;}\n        else{\n            s=s+t;\n        }\n    }\n    h=s+r*100-w*50;\n  //  for(i=1;i<6;i++){\n  //      h=h-50*ara2[i];\n  //  }\n    printf(\"%d\",h);\n    return 0;\n}\n"}
{"similarity_score": 0.24041811846689895, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "79a22bc85c4172a899e35ee36c3da46c", "bug_code_uid": "249776606ed1b183335d9bef699e78d7", "src_uid": "fa256021dc519f526ef3878cce32ff31", "apr_id": "e86f8fd29860fb03eca7453c6bb8df0e", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tlong n;\n\tint i;\n\tint  a[1000], b[1000];\n\tscanf(\"%ld\", &n);\n\tfor (i = 1; i <=n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tb[i] = a[i] + a[i +1];\n\t\tprintf(\"%d \", b[i]);\n\t}\n\tb[n] = a[n];\n\tprintf(\"%d\\n\", b[n]);\n\n}", "fixed": "#include <stdio.h>\nint arr[100002];  \nint main()  \n{  \n    int a=0,b=0,c=0,i=0,j=0,k=0,n=0;  \n    scanf(\"%d\",&n);  \n    arr[n]=0;  \n    for(i=0;i<n;i++)  \n    {  \n        scanf(\"%d\",&arr[i]);  \n    }  \n    for(j=0;j<n;j++)  \n    {  \n        b=arr[j]+arr[(j+1)];  \n        printf(\"%d \",b);  \n    }  \n    return 0;  \n} "}
{"similarity_score": 0.9829738933030647, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "cbd8b96e61003c9e2a2cb44faa2483d6", "bug_code_uid": "edc8abb644991ae88aa9d53cc41ec2dc", "src_uid": "29d4ca13888c0e172dde315b66380fe5", "apr_id": "0dbea3cc46a8feddd6898948f1e237dc", "difficulty": 1600, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\nint R=0;\nint x1=0,y1=0,x2=0,y2=0;\ndouble a;\ndouble b;\nscanf(\"%d %d %d %d %d\",&R,&x1,&y1,&x2,&y2);\ndouble dist=sqrt(pow(x1-x2,2)+pow(y1-y2,2));\ndouble r;\nif(dist-R<=0&&dist!=0)\n{\na=x1+(R)/dist*(x1-x2);\nb=y1+(R)/dist*(y1-y2);\na=(a+x2)/2;\nb=(b+y2)/2;\nr=(R+dist)/2;\n}\nif(dist>R)\n{\na=x1;\nb=y1;\nr=R;\n}\nif(dist==0)\n{\na=x1+R/2;\nb=y1;\nr=R/2;\n}\nprintf(\"%lf %lf %lf\",a,b,r);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\nint R1=0;\nint x1=0,y1=0,x2=0,y2=0;\ndouble a;\ndouble b;\nscanf(\"%d %d %d %d %d\",&R1,&x1,&y1,&x2,&y2);\ndouble dist=sqrt(pow(x1-x2,2)+pow(y1-y2,2));\ndouble R=R1;\ndouble r;\nif(dist-R<=0&&dist!=0)\n{\na=x1+(R)/dist*(x1-x2);\nb=y1+(R)/dist*(y1-y2);\na=(a+x2)/2;\nb=(b+y2)/2;\nr=(R+dist)/2;\n}\nif(dist>R)\n{\na=x1;\nb=y1;\nr=R;\n}\nif(dist==0)\n{\na=x1+R/2;\nb=y1;\nr=R/2;\n}\nprintf(\"%lf %lf %lf\",a,b,r);\n}\n"}
{"similarity_score": 0.7365728900255755, "equal_cnt": 22, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "c7db9bf29b092e637b353236574d9a54", "bug_code_uid": "b083ac56710c8f42c6a754cf7f6a43d2", "src_uid": "3d6cd0a82513bc2119c9af3d1243846f", "apr_id": "b367367f1d2e3ce04c13ce3105103f2e", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint i,j,n,m,l,f,c[28];\n\tchar s[m];\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&m);\n\t\tfor(i=0;i<26;i++)\n\t\tc[i]=0;\n\t\tfor(i=0;i<m;i++){\n\t\t\tscanf(\"%s\",s);\n\t\t\tl=strlen(s);\n\t\t\tfor(j=0;j<l;j++)\n\t\t\tc[s[j]-'a']++;\n\t\t}    f=0;\n\t\tfor(i=0;i<26;i++)\n\t\tif(c[i]%n){f=1;break;}\n\t\tif(f)\n\t\tprintf(\"NO\");\n\t\telse\n\t\tprintf(\"YES\");\n\t}\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#define maxn 1010\nint cnt[30]; \nchar s[maxn];\nint main(){\n\tint t,n,i,j,m,flag;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<26;i++)cnt[i]=0; \n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%s\",s);\n\t\t\tm=strlen(s);\n\t\t\tfor(j=0;j<m;j++)cnt[s[j]-'a']++; \n\t\t}\n\t\tflag=0;\n\t\tfor(i=0;i<26;i++)\n\t\t\tif(cnt[i]%n){flag=1;break;}\n\t\tif(flag)printf(\"NO\\n\");\n\t\telse printf(\"YES\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.631578947368421, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "013856c0fca20a739e03a163d2661dc8", "bug_code_uid": "a8451837ad0cd7075e1c9e4be54f0db0", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "945c0f38dfaabf6507f0c5bc2e89b972", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n    int n,m,i,j,cnt=0,k,flag=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2*m;j++)\n        {\n            scanf(\"%d\",&k);\n            if(k==1 && flag==0)\n            {\n                cnt++;\n                flag=1;\n            }\n            else if(k==0)flag=0;\n        }\n        flag=0;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nmain()\n{\n    int n,m,i,j,cnt=0,k,p,flag=0;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%d %d\",&k,&p);\n            if(k==1||p==1)cnt++;\n\n        }\n\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}\n"}
{"similarity_score": 0.2471042471042471, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "51c81491eeb0c70694ca45359e2c33ad", "bug_code_uid": "08c0f8483d20d2dd8577a9bd3d3d1157", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "5932721b62415ef2614c8e47a89fc183", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int b,c;\n    long long int i,t,a,sum=0;\n    scanf(\"%d\", &b);\n    for(c=0;c<b;c++){\n    scanf(\"%lld %lld\", &a, &t);\nsum=a;\n    for(i=1;i<=t;i++){\n\n        if(sum%2==0){\n            sum=sum+2;\n        }\n       else if(sum%3==0){\n            sum=sum+3;\n        }\n       else if(sum%5==0){\n            sum=sum+5;\n        }\n       else if(sum%7==0){\n            sum=sum+7;\n        }\n    }\n    printf(\"%lld\\n\",sum);\n    }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int b;\n    int i,t,a,sum=0;\n    scanf(\"%d\", &b);\n    while(b--){\n    scanf(\"%d %d\", &a, &t);\n\n    for(i=2;i<=a;i++){\n\n        if(a%i==0){\n            a=a+i;\n            break;\n        }\n\n    }\n    t--;\n    while(t--){\n        a+= 2;\n    }\n    printf(\"%d\\n\",a);\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.9841688654353562, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c106dccaa45011c191f50387a0995806", "bug_code_uid": "e558b3bb6bfcc092fe27448d11653f5f", "src_uid": "d646834d58c519d5e9c0545df2ca4be2", "apr_id": "4ea9df3c204171328a98bf1e8691f03e", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int m,n,a,b,p=0,i=0,b1=0;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++){\n        scanf(\"%d%d\",&a,&b);\n        if (b1>=b) b=b1;\n        b1=b;\n        if(a<=p){\n            if(p>b) p=b;\n            if(p>=m){\n                printf(\"YES\");\n                return 0;\n            }\n        }\n        else break;\n    }\n    printf(\"NO\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int m,n,a,b,p=0,i=0,b1=0;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++){\n        scanf(\"%d%d\",&a,&b);\n        if (b1>=b) b=b1;\n        b1=b;\n        if(a<=p){\n             p=b;\n            if(p>=m){\n                printf(\"YES\");\n                return 0;\n            }\n        }\n        else break;\n    }\n    printf(\"NO\");\nreturn 0;\n}\n"}
{"similarity_score": 0.9854651162790697, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "3624f712b47315a5532c2e01715ab22f", "bug_code_uid": "31da7424de091443c5e2e62193a5038b", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "541ddfae6a24dbea61a535660a6c595b", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t!=0)\r\n{\r\n    int a,b,c;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n    if(a>b&&b>c)||(c>b&&b>a)\r\n    {\r\n        printf(\"%d\",b);\r\n    }\r\n    else if(b>c&&c>a)||(a>c&&c>b)\r\n    {\r\n        printf(\"%d\",c);\r\n    }\r\n    else\r\n    {\r\n        printf(\"%d\",a);\r\n    }\r\n    t--;\r\n}return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t!=0)\r\n{\r\n    int a,b,c;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n    if((a>b&&b>c)||(c>b&&b>a))\r\n    {\r\n        printf(\"%d\\n\",b);\r\n    }\r\n    else if((b>c&&c>a)||(a>c&&c>b))\r\n    {\r\n        printf(\"%d\\n\",c);\r\n    }\r\n    else\r\n    {\r\n        printf(\"%d\\n\",a);\r\n    }\r\n    t--;\r\n}return 0;\r\n}\r\n"}
{"similarity_score": 0.9929994614970382, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d3d6485f1cdc87b34e0f0cca81ce93a2", "bug_code_uid": "74295acd66d82c2eec8ccf946c640c26", "src_uid": "6a80b2af22cf8e5bb01ff47d257db196", "apr_id": "8ddb049948a5a6e5ec9cc0324784cc28", "difficulty": 1600, "tags": ["data structures", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>      /* printf */\n#include <stdlib.h>\n#define N 10000  \nint n;\nint k;\nint compare(const void* a,const void*b){\n\treturn (*(int*)a-*(int*)b);\n}\n\nint A[N];\nint B[N];\nint C[N];\nint t,x,y,n,k;\nint a=0,b=0,c=0,ai=0,bi=0,ci=0,tot=0;\nint main(int argc, char const *argv[])\n{ \tif (scanf(\"%d %d\",&n,&k)!=EOF){};\n\tfor (int i=0;i<n;i++){\n\t\tif (scanf(\"%d %d %d\",&t,&x,&y)!=EOF){};\n\t\tif (x==1 &&y==1){\n\t\t\tC[c]=t;\n\t\t\tc+=1;\n\t\t}\n\t\telse if (x==1){\n\t\t\tA[a]=t;\n\t\t\ta+=1;\n\t\t}\n\t\telse if (y==1){\n\t\t\tB[b]=t;\n\t\t\tb+=1;\n\t\t}\t\n\t}\n\tif (a+c<k |b+c<k){\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tqsort(A,a,sizeof(int),compare);\n\tqsort(B,b,sizeof(int),compare);\n\tqsort(C,c,sizeof(int),compare);\n\t\n\twhile (k--){\n\t\tif (ai<a &&bi<b&&ci<c){\n\t\tif (C[ci]<=A[ai]+B[bi]){\n\t\t\ttot+=C[ci++];\n\t\t}\n\t\telse{\n\t\t\ttot+=A[ai++]+B[bi++];\n\t\t}\n\t\t}\n\t\telse if(ci==c){\n\t\t\ttot+=A[ai++]+B[bi++];\n\t\t}\n\t\telse {\n\t\t\ttot+=C[ci++];\n\t\t}\n\t\t\n\t\n\n\t}\n\t\n\t\n\tprintf(\"%d\\n\",tot );\n\t\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>      /* printf */\n#include <stdlib.h>\n#define N 200000\nint n;\nint k;\nint compare(const void* a,const void*b){\n\treturn (*(int*)a-*(int*)b);\n}\n\nint A[N];\nint B[N];\nint C[N];\nint t,x,y,n,k;\nint a=0,b=0,c=0,ai=0,bi=0,ci=0,tot=0;\nint main(int argc, char const *argv[])\n{ \tif (scanf(\"%d %d\",&n,&k)!=EOF){};\n\tfor (int i=0;i<n;i++){\n\t\tif (scanf(\"%d %d %d\",&t,&x,&y)!=EOF){};\n\t\tif (x==1 &&y==1){\n\t\t\tC[c]=t;\n\t\t\tc+=1;\n\t\t}\n\t\telse if (x==1){\n\t\t\tA[a]=t;\n\t\t\ta+=1;\n\t\t}\n\t\telse if (y==1){\n\t\t\tB[b]=t;\n\t\t\tb+=1;\n\t\t}\t\n\t}\n\tif (a+c<k |b+c<k){\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tqsort(A,a,sizeof(int),compare);\n\tqsort(B,b,sizeof(int),compare);\n\tqsort(C,c,sizeof(int),compare);\n\t\n\twhile (k--){\n\t\tif (ai<a &&bi<b&&ci<c){\n\t\tif (C[ci]<=A[ai]+B[bi]){\n\t\t\ttot+=C[ci++];\n\t\t}\n\t\telse{\n\t\t\ttot+=A[ai++]+B[bi++];\n\t\t}\n\t\t}\n\t\telse if(ci==c){\n\t\t\ttot+=A[ai++]+B[bi++];\n\t\t}\n\t\telse {\n\t\t\ttot+=C[ci++];\n\t\t}\n\t\t\n\t\n\n\t}\n\t\n\t\n\tprintf(\"%d\\n\",tot );\n\t\n\n\treturn 0;\n}"}
{"similarity_score": 0.47047047047047047, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "b0a5e215ece49b8fbcb60093e51e0386", "bug_code_uid": "803cf29bae6988be6847920247a30c25", "src_uid": "277948a70c75840445e1826f2b23a897", "apr_id": "1e9f852878645eac0788ddc8006b1744", "difficulty": 1600, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    \n    int ns[100000];\n    \n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", ns + i);\n    }\n    \n    int r = 1;\n    \n    for (int i = 0; i < n; i++)\n    {\n        int p = ns[i] + 1;\n        int r_p = 1;\n        \n        for (int j = i + 1; j < n; j++)\n        {\n            if (ns[j] == p)\n            {\n                p++;\n                r_p++;\n            }\n        }\n        \n        if (r_p > r)\n        {\n            r = r_p;\n        }\n    }\n    \n    printf(\"%d\\n\", n - r);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    \n    int r = 1;\n    \n    int ps[100000];\n    \n    for (int i = 0; i < n; i++)\n    {\n        ps[i] = 0;\n    }\n    \n    for (int i = 0; i < n; i++)\n    {\n        int p;\n        scanf(\"%d\", &p);\n        \n        ps[p] = 1 + ps[p - 1];\n        \n        if (ps[p] > r)\n        {\n            r = ps[p];\n        }\n    }\n    \n    printf(\"%d\\n\", n - r);\n    return 0;\n}"}
{"similarity_score": 0.9943630214205186, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aea35b88823cc4c2cf3e5adf2873d3b3", "bug_code_uid": "0b25ccb0e38bcb9e9c79c3f85a89f84d", "src_uid": "65eb0f3ab35c4d95c1cbd39fc7a4227b", "apr_id": "e452643097cd22a3077a4d31e0d80a20", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\ntypedef struct\n{\n    int row;\n    int times;\n}TEETH;\n\nint compare(const void* argu1, const void* argu2)\n{\n    return ((TEETH*)argu1)->row - ((TEETH*)argu2)->row;\n}\n\nint main(void)\n{\n    int n, m, k;\n\n    scanf(\"%d%d%d\", &n, &m, &k);\n    TEETH teeth[n];\n    for(int i = 0; i < n; i++)\n        scanf(\"%d%d\", &teeth[i].row, &teeth[i].times);\n\n    qsort(teeth, n, sizeof(teeth[0]), compare);\n    int j = 0;\n    int amount = 0;\n    for(int i = 0; i < m; i++)\n    {\n        int smaller = 0;\n        for(; j < n && teeth[j].row == i + 1; j++)\n            if(teeth[j].times > smaller)\n                smaller = teeth[j].times;\n        amount += smaller;\n    }\n\n    if(k < amount)\n        printf(\"%d\", k);\n    else\n        printf(\"%d\", amount);\n\n    return 0;\n}\n", "fixed": "#include<ctype.h>\n#include<limits.h>\n#include<math.h>\n#include<stdbool.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\ntypedef struct\n{\n    int row;\n    int times;\n}TEETH;\n\nint compare(const void* argu1, const void* argu2)\n{\n    return ((TEETH*)argu1)->row - ((TEETH*)argu2)->row;\n}\n\nint main(void)\n{\n    int n, m, k;\n\n    scanf(\"%d%d%d\", &n, &m, &k);\n    TEETH teeth[n];\n    for(int i = 0; i < n; i++)\n        scanf(\"%d%d\", &teeth[i].row, &teeth[i].times);\n\n    qsort(teeth, n, sizeof(teeth[0]), compare);\n    int j = 0;\n    int amount = 0;\n    for(int i = 0; i < m; i++)\n    {\n        int smaller = 1000001;\n        for(; j < n && teeth[j].row == i + 1; j++)\n            if(teeth[j].times < smaller)\n                smaller = teeth[j].times;\n        amount += smaller;\n    }\n\n    if(k < amount)\n        printf(\"%d\", k);\n    else\n        printf(\"%d\", amount);\n\n    return 0;\n}\n"}
{"similarity_score": 0.361863488624052, "equal_cnt": 20, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "daaf783f477d0765cf87f4a5d5d08db2", "bug_code_uid": "8959ef57cf348c7418fd43e5bf639645", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "b205af260ab3ad44c884a7b62e40ed6d", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n#include <math.h>\n\n\n\nint main()\n{\n    int size,target;\n    scanf(\"%i%i\",&size,&target);\n    \n    int array[size];\n    array[0]=1;\n    int i;\n    int counter=0;\n    int flag =0;\n    \n    for(i=1;i<size;++i)\n    {\n        if(counter == target)\n        {\n            printf(\"YES\\n\");\n            flag=1;\n            return 0;\n        }\n\n        if(counter>target)\n            break;\n\n        scanf(\"%i\",&array[i]);\n        counter = array[i]+i;\n\n\n    }\n\n    if(flag == 0)\n    {\n        printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n#include <math.h>\n\n\n\nint a[1234567];\n\nint main() {\n  int n, t;\n  scanf(\"%d %d\", &n, &t);\n  for (int i = 1; i < n; i++) {\n    scanf(\"%d\", a + i);\n  }\n  int x = 1;\n  while (x < t) {\n    x += a[x];\n  }\n  puts(x == t ? \"YES\" : \"NO\");\n  return 0;\n}"}
{"similarity_score": 0.3111111111111111, "equal_cnt": 19, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "b9dfa590cff5b75238ea46337b6ea62a", "bug_code_uid": "d5d8e2d68cc2d00f1139679156dd6d4a", "src_uid": "f3d34922baf84c534e78e283dcadc742", "apr_id": "69022a2af457e65994dcedba1277fb79", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\tprintf(\"\\n\");\r\n\tfor(i=1;i<=t;i++)\r\n\t{\r\n\t\tint a[100],n,j,c=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tprintf(\"\\n\");\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tif(a[j]==0)\r\n\t\t\t{\r\n\t\t\t\tc++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(n==2)\r\n\t\t{\r\n\t\t\tprintf(\"0\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"%d\",c*2);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n        printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        int n,i,j,x=0,y=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        for(i=0,j=n-1;i<n;i++,j--)\r\n        {\r\n        if(a[i]==0)\r\n        x=i;\r\n        if(a[j]==0)\r\n        y=j;\r\n        }\r\n        printf(\"%d\\n\",(x-y+2)*(x,y!=0));\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9698558322411533, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a1af97cbf4d12f357aff9cabedd874e5", "bug_code_uid": "85b6efca3f1564049dc45912704f8ea2", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "9764603cf0e8b6453bf940eb8f0a56cf", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid main()\n{\n     int number_friends,h_of_wall,h_of_person;\n     int counter=0;\n    scanf(\"%d %d\",&number_friends,&h_of_wall);\n\n    for(int i=0;i<number_friends;i++)\n    {\n        scanf(\"%d\",&h_of_person);\n        if(h_of_person<h_of_wall)\n            counter++;\n        else\n            counter+=2;\n    }\n    printf(\"%d\",counter);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int number_friends,h_of_wall,h_of_person;\n     int counter=0;\n    scanf(\"%d %d\",&number_friends,&h_of_wall);\n\n    for(int i=0;i<number_friends;i++)\n    {\n        scanf(\"%d\",&h_of_person);\n        if(h_of_person<=h_of_wall)\n            counter++;\n        else\n            counter+=2;\n    }\n    printf(\"%d\",counter);\n    return 0;\n}\n"}
{"similarity_score": 0.9591673338670936, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9865f4870a4ec66754cfed4e1d91d927", "bug_code_uid": "0e009774515cda4cf757d335eaa9dcb9", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "446772fba2d392b7b7e72ee2f4d9d117", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid swap(int * a, int * b) {\n\tint t = *a;\n\t*a = *b;\n\t*b = t;\n}\n\nint * rev(int * a, int sz, int first) {\n\tfor(int i = first; i < sz / 2; i++)\n\t\tswap(&a[i], &a[sz - 1 - i]);\n\treturn a;\n}\n\nvoid print_array(int * a, int sz) {\n\tfor(int i = 0; i < sz - 1; i++)\n\t\tprintf(\"%d \", a[i]);\n\tprintf(\"%d\\n\", a[sz - 1]);\n}\n\nint main(int argc, const char * argv[]) {\n\tint n;\n\tscanf(\"%d\", &n);\n\tint * a = malloc(sizeof(int) * n);\n\tfor(int i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(int i = n / 2 - 1; i >= 0; i--)\n\t\trev(a, n, i);\n\tprint_array(a, n);\n\tfree(a);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid swap(int * a, int * b) {\n\tint t = *a;\n\t*a = *b;\n\t*b = t;\n}\n\nint * rev(int * a, int sz, int first) {\n\tfor(int i = first; i < sz / 2; i++)\n\t\tswap(&a[i], &a[sz - 1 - i]);\n\treturn a;\n}\n\nvoid print_array(int * a, int sz) {\n\tfor(int i = 0; i < sz - 1; i++)\n\t\tprintf(\"%d \", a[i]);\n\tprintf(\"%d\\n\", a[sz - 1]);\n}\n\nint main(int argc, const char * argv[]) {\n\tint n;\n\tscanf(\"%d\", &n);\n\tint * a = malloc(sizeof(int) * n);\n\tfor(int i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(int i = n / 2 - 1; i > 0; i--) {\n\t\tif(i % 2) swap(&a[i], &a[n - i - 1]);\n\t}\n\trev(a, n, 0);\n\tprint_array(a, n);\n\tfree(a);\n    return 0;\n}\n"}
{"similarity_score": 0.997275204359673, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d01faf97207766562bb27fab034c2a03", "bug_code_uid": "522df03a2c171b5bfe4b0d225c53fad0", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "e8c6fdffea976eb3513e67ac5d7aeb71", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t, i, n, j, b;\r\n    scanf(\"%d\", &t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        int a[n], sum=0;\r\n        for(j=0; j<n; j++)\r\n        {\r\n            scanf(\"%d\", &a[j]);\r\n            sum+= a[j];\r\n        }\r\n        if(sum<=0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else if((sum/n)==1 && (sum%n==0))\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else\r\n        {\r\n            b = sum-n;\r\n            printf(\"%d\\n\", b);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t, i, n, j, b;\r\n    scanf(\"%d\", &t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        int a[n], sum=0;\r\n        for(j=0; j<n; j++)\r\n        {\r\n            scanf(\"%d\", &a[j]);\r\n            sum+= a[j];\r\n        }\r\n        if(sum<n)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else if((sum/n)==1 && (sum%n==0))\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else\r\n        {\r\n            b = sum-n;\r\n            printf(\"%d\\n\", b);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9956002514142049, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c9cf51aa44fd078983b0b334b002ca8b", "bug_code_uid": "b0f5853c8a5a15391737863584b7333f", "src_uid": "7785ed6f41dbd45f1a9432c2fb07d713", "apr_id": "ade9a421c4493062c2289ddaa9f39c5b", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int test;\n    scanf(\"%d\",&test);\n    while(test--){\n        int num,i;\n        scanf(\"%d\",&num);\n        float arr[num];\n        for(i=0;i<num;i++){\n            scanf(\"%f\",&arr[i]);\n        }\n        int arrlength;\n        arrlength = sizeof(arr)/sizeof(arr[0]);\n        float lastelment = arr[arrlength-1];//sizeof(arr)/sizeof(arr[0]) - 1;\n        float allSum = 0;\n        for(i=0;i<arrlength;i++){\n            allSum += arr[i];\n        }\n        float avg = allSum/arrlength;\n        int count =0;\n       for(i=0;i<arrlength;i++){\n          if(arr[i] == avg){\n            count ++;\n        }\n        }\n        if(count>0){\n            printf(\"y\\n\");\n        }\n        else{\n            printf(\"n\\n\");\n        }\n       }\nreturn 0;\n\n}\n   // printf(\"%f\",arr);\n", "fixed": "#include<stdio.h>\nint main(){\n    int test;\n    scanf(\"%d\",&test);\n    while(test--){\n        int num,i;\n        scanf(\"%d\",&num);\n        float arr[num];\n        for(i=0;i<num;i++){\n            scanf(\"%f\",&arr[i]);\n        }\n        int arrlength;\n        arrlength = sizeof(arr)/sizeof(arr[0]);\n        float lastelment = arr[arrlength-1];//sizeof(arr)/sizeof(arr[0]) - 1;\n        float allSum = 0;\n        for(i=0;i<arrlength;i++){\n            allSum += arr[i];\n        }\n        float avg = allSum/arrlength;\n        int count =0;\n       for(i=0;i<arrlength;i++){\n          if(arr[i] == avg){\n            count ++;\n        }\n        }\n        if(count>0){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n       }\nreturn 0;\n\n}\n   // printf(\"%f\",arr);\n"}
{"similarity_score": 0.9844789356984479, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5decd6628f8ce67eb7faa92653f45795", "bug_code_uid": "ebef2224b38c541101bfab35a19c1c1d", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "5aaede61629e3059347e77d60cf3fb7d", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n\tint n;\n\tint lala[200002] = {0};\n\tscanf(\"%d\", &n);\n\tint counter = 0;\n\tfor(int i = 0; i < n; i ++){\n\t\tscanf(\"%d\", &(lala[i]));\n\t\tcounter += lala[i];\n\t}\n\tint temp = counter;\n\tfor(int i = 0; i < n; i ++){\n\t\ttemp -= lala[i];\n\t\tif(counter % 2 == 0){\n\t\t\tif(temp <= (counter/2)){\n\t\t\t\tprintf(\"%d\\n\", i+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(temp <= (counter/2 + 1)){\n\t\t\t\tprintf(\"%d\\n\", i+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void){\n\tint n;\n\tint lala[200002] = {0};\n\tscanf(\"%d\", &n);\n\tint counter = 0;\n\tfor(int i = 0; i < n; i ++){\n\t\tscanf(\"%d\", &(lala[i]));\n\t\tcounter += lala[i];\n\t}\n\tint temp = 0;\n\tfor(int i = 0; i < n; i ++){\n\t\ttemp += lala[i];\n\t\tif(counter % 2 == 0){\n\t\t\tif(temp >= (counter/2)){\n\t\t\t\tprintf(\"%d\\n\", i+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(temp >= (counter/2 + 1)){\n\t\t\t\tprintf(\"%d\\n\", i+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9917849141150112, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "36184a71970492eca7fd0734b25c3564", "bug_code_uid": "a2e3737dc1cab3ada9ac054574808eab", "src_uid": "fefec879efd4f524de00684adee7cd19", "apr_id": "7473f76c2c7a48aaaea66a462863799f", "difficulty": 800, "tags": ["brute force", "dfs and similar", "dp", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++){\r\n        int a;\r\n        int flag = 1;\r\n        scanf(\"%d\", &a);\r\n        getchar();\r\n        char b[200], c[200];\r\n        for(int j = 0; j < a; j++)\r\n            {\r\n            scanf(\"%c\", &b[j]);\r\n            }\r\n        getchar();\r\n        for(int j = 0; j < a; j++)\r\n            {\r\n            scanf(\"%c\", &c[j]);\r\n            }\r\n        for(int j = 0; j < a; j ++)\r\n            {\r\n            if(b[j] == '1' && c[j] == '1')\r\n          \r\n            }\r\n        if(flag)\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 0; i < t; i++){\r\n        int a;\r\n        int flag = 1;\r\n        scanf(\"%d\", &a);\r\n        getchar();\r\n        char b[200], c[200];\r\n        for(int j = 0; j < a; j++)\r\n            {\r\n            scanf(\"%c\", &b[j]);\r\n            }\r\n        getchar();\r\n        for(int j = 0; j < a; j++)\r\n            {\r\n            scanf(\"%c\", &c[j]);\r\n            }\r\n        for(int j = 0; j < a; j ++)\r\n            {\r\n            if(b[j] == '1' && c[j] == '1')\r\n            flag = 0;\r\n            }\r\n        if(flag)\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.6249149081007488, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "5e598f40945dea755f289218f0db2124", "bug_code_uid": "7775313bbe8870b814e9bd15efa73f78", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "78acae33000e89395b70e94c04ec4434", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar a[1002][1002];\nint main()\n{\n    int b,c,i,j;\n    scanf(\"%d\",&b);\n    printf(\"%d\\n\",b);\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<b;j++)\n        {\n            if((i+j)==(b-1))\n            {\n                a[i][j]='C';\n            }\n            else\n            {\n                a[i][j]='.';\n            }\n        }\n    }\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<b;j++)\n        {\n            printf(\"%c\",a[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    \n}", "fixed": "#include<stdio.h>\nchar a[1002][1002];\nint main()\n{\n    int b,i,j;\n    long int c=0;\n    scanf(\"%d\",&b);\n    if(b%2==0)\n    {\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<b;j++)\n        {\n            if((i+j)%2!=0)\n            {\n                a[i][j]='C';\n            }\n            else\n            {\n                a[i][j]='.';\n            }\n        }\n    }\n    }\n    else if(b%2!=0)\n    {\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<b;j++)\n        {\n            if((i+j)%2==0)\n            {\n                a[i][j]='C';\n            }\n            else\n            {\n                a[i][j]='.';\n            }\n        }\n    }\n    }\n    \n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<b;j++)\n        {\n            if(a[i][j]=='C')\n            {\n                c++;\n            }\n            \n        }\n    }\n    printf(\"%ld\\n\",c);\n    for(i=0;i<b;i++)\n    {\n        for(j=0;j<b;j++)\n        {\n            printf(\"%c\",a[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.984375, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8773aa730221b455b968f92a32bb8a13", "bug_code_uid": "172adb1572f154f06bcde73520cad461", "src_uid": "001d8aca7c8421c3e54863f3fb706f0d", "apr_id": "9291e1900eb52e84c74d74507c581add", "difficulty": 1500, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n,r,p,q,c,i,x;\nint main(){scanf(\"%d%d\",&n,&r);p=q=-r;for(;i<n;++i){scanf(\"%d\",&x);if(x)p=i;if(i-q>2*r-2){if(p==q)break;q=p;++c;}}printf(\"%d\\n\",i-p>r?-1:i-q>r?c+1:c);}\n", "fixed": "#include<stdio.h>\nint n,r,p,q,c,i,x;\nint main(){scanf(\"%d%d\",&n,&r);p=q=-r;for(;i<n;++i){scanf(\"%d\",&x);if(x)p=i;if(i-q>2*r-2){if(p==q){++i;break;}q=p;++c;}}printf(\"%d\\n\",i-p>r?-1:i-q>r?c+1:c);}\n"}
{"similarity_score": 0.41612200435729846, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "9def072d3e289d4264ce807e694a2037", "bug_code_uid": "7afe1da080fdfd8c19163fd70a6444f0", "src_uid": "5698e6fd934b9f6b847d7e30a3d06f2b", "apr_id": "388ae4e71c1dffb3de48e249876e7335", "difficulty": 800, "tags": ["brute force", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint n,m,i,t,a[200];\r\nvoid print(){\r\n    if(m){\r\n        printf(\"no\\n\");\r\n    }\r\n    else{\r\n        printf(\"YES\\n\");\r\n        for(i=0;i<=101;i++){\r\n            printf(\"%d \",i);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\nint main(){\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        m=0;\r\n        scanf(\"%d\",&n);\r\n        for(i=1;i<=n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]<0)  m=1;\r\n        }\r\n        print();\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint n,m,i,t,a[200];\r\nvoid print(){\r\n    if(m){\r\n        printf(\"no\\n\");\r\n    }\r\n    else{\r\n        printf(\"YES\\n101\\n\");\r\n        for(i=0;i<101;i++){\r\n            printf(\"%d \",i);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\nint main(){\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        m=0;\r\n        scanf(\"%d\",&n);\r\n        for(i=1;i<=n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]<0)  m=1;\r\n        }\r\n        print();\r\n    }\r\n}"}
{"similarity_score": 0.5168316831683168, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "a1d75f7cbc772b84e8c9f179eda3ece8", "bug_code_uid": "3bf755f6deedf05e39bf4dc6335eb944", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "1877eea7582c051391131a410b90f787", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[150010];\n//int all[150010];\nint main()\n{\n\tint i, n, k, sum=0, min=100000, j, m=1;\n\tscanf(\"%d%d\", &n, &k);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t} \n\tfor(i=0;i<n-k;i++)\n\t{\n\t\tsum=0;\n\t\tfor(j=i;j<i+k;j++)\n\t\t{\n\t\t\t//printf(\"a[%d]=%d\\n\", j, a[j]);\n\t\t\tsum=sum+a[j];\n\t\t\t//printf(\"sum=%d\\n\", sum);\n\t\t\t\n\t\t}\n\t\tif(sum<min)\n\t\t{\n\t\t\t//printf(\"sum:a[%d]=%d\\n\", i, a[i]);\n\t\t\tmin=sum;\n\t\t\tm=i+1;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", m);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\treturn 0;\n} ", "fixed": "#include <stdio.h>\nint a[150010];\n//int all[150010];\nint main()\n{\n\tint i, n, k, sum=0, min=1000000, j=0, m=0, star=1;\n\tscanf(\"%d%d\", &n, &k);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\t\n\t\t\n\t} \n\tfor(i=0;i<k;i++)\n\t{\n\t\tsum=sum+a[i];\n\t}\n\tmin=sum;\n\tfor(j=i;j<n;j++)\n\t{\n\t\tsum=sum-a[star-1]+a[j];\n\t\tif(sum<min)\n\t\t{\n\t\t//\tprintf(\"a[%d]=%d \", j, a[j]);\n\t\t//\tprintf(\"a[%d]=%d \", j-1, a[j-1]);\n\t\t//\tprintf(\"a[%d]=%d\\n\", star, a[star]);\n\t\t//\tprintf(\"sum=%d\\n\", sum);\n\t\t\tmin=sum;\n\t\t\tm=star;\n\t\t}\n\t\tstar++;\n\t}\n\n\t\n\tprintf(\"%d\\n\", m+1);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\treturn 0;\n} "}
{"similarity_score": 0.9681528662420382, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "94ab7bc1bf2268016c7cf0c0d3acfd0d", "bug_code_uid": "f8a5052bc39dff70b7c27a073f3cec7f", "src_uid": "a0a6cdda2ce201767bf5418f445a44eb", "apr_id": "11a9711f9548b9e0408d784526aedb27", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n \nvoid main()\n{\n        int a,b[200],eve=0,odd=0;\n \n        scanf(\"%d\",&a);\n        for (int i=0;i<a;++i)\n        {scanf(\"%d\",&b[i]);\n                if (b[i]%2==0)\n                        eve++;\n                else\n                        odd++;\n        }\n        if(eve>odd)\n                printf(\"%d\\n\",odd);\n        else\n                printf(\"%d\\n\",eve);\n \n \n}", "fixed": "#include<stdio.h>\n \nint main()\n{\n        int a,b[200],eve=0,odd=0;\n \n        scanf(\"%d\",&a);\n        for (int i=0;i<a;++i)\n        {scanf(\"%d\",&b[i]);\n                if (b[i]%2==0)\n                        eve++;\n                else\n                        odd++;\n        }\n        if(eve>odd)\n                printf(\"%d\\n\",odd);\n        else\n                printf(\"%d\\n\",eve);\n        return 0;\n}"}
{"similarity_score": 0.27292110874200426, "equal_cnt": 24, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 12, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "bda746833229178ba1e46c957cd130a0", "bug_code_uid": "6a050161858ad2b44d25ee4bbf27aa6e", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "15e9b96b2e415c9cce2d0acd19f36f31", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdbool.h>\nint main()\n{\n    int n,a,b,count=-1;\n    scanf(\"%d\",&n);\n    int counter[20001]={0};\n    for (int i=0;i<n;i++){\n        scanf(\"%d\",&a);\n        for(int j=0;j<a;j++){\n            scanf(\"%d\",&b);\n            counter[b]++;\n            if(counter[b]>2){\n                count=b;\n            }\n//            else {\n//                count=-1;\n//            }\n        }\n        printf(\"%d\\n\",count);\n\n    }\n\n\n    return 0;\n}\n\n\n\t\t\t \t \t\t\t\t\t  \t \t   \t\t\t \t\t\t\t \t \t", "fixed": "#include <stdio.h>\nint main()\n{\n    int t, c;\n    scanf(\"%d\", &t);\n\n    while (t--)\n    {\n        int n;\n        int temp = -1;\n        scanf(\"%d\", &n);\n        int arr[200001] = {};\n        for (int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &c);\n            arr[c]++;\n            if (arr[c] >= 3)\n                temp = c;\n        }\n\n        printf(\"%d\\n\", temp);\n    }\n\n    return 0;\n}\n   \t\t\t \t\t\t\t\t \t  \t\t\t \t\t  \t \t  \t"}
{"similarity_score": 0.9901380670611439, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "55b61b0759656ae992a6aa6bad4dd759", "bug_code_uid": "63b261d7ee3454c430a7074c201e7872", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "da17edd5a9100ac9a9f97bf72e4cd5c2", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nunsigned n,t=0;\nchar name[20];\nscanf(\"%d\",&n);\nwhile(n)\n{\nscanf(\"%s\",name);\nif(name[0]=='I')\nt=t+20;\nelse if(name[0]=='D')\nt=t+12;\nelse if(name[0]=='O')\nt=t+8;\nelse if(name[0]=='C')\nt=t+6;\nelse\nt=t+4;\n}\nprintf(\"%d\",t);\n}", "fixed": "#include<stdio.h>\nint main()\n{\nunsigned n,t=0;\nchar name[20];\nscanf(\"%d\",&n);\nwhile(n)\n{\nscanf(\"%s\",name);\nif(name[0]=='I')\nt=t+20;\nelse if(name[0]=='D')\nt=t+12;\nelse if(name[0]=='O')\nt=t+8;\nelse if(name[0]=='C')\nt=t+6;\nelse\nt=t+4;\nn--;\n}\nprintf(\"%d\",t);\n}"}
{"similarity_score": 0.4288461538461538, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "105c7d0f67f54e8aea3a12e48c8737a7", "bug_code_uid": "581383453067da387a36100a52fec0d1", "src_uid": "ee8ca9b2c6104d1ff9ba1fc39e9df277", "apr_id": "d7357fa519c0c31fc8e8dbb3a60a264d", "difficulty": 1100, "tags": ["dp", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tint t,i,j,sum,max,n,a[200001],q;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(j=1;j<=n;j++){\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t}\r\n\t\tmax=a[1];\r\n\t\tfor(j=1;j<=n;j++){\r\n\t\t\tsum=a[j];\r\n\t\t\tq=j;\r\n\t\t\twhile((q+a[q])<=n){\r\n\t\t\t\tsum=sum+a[q+a[q]];\r\n\t\t\t\tq=q+a[q];\r\n\t\t\t}\r\n\t\t\tif(sum>max)max=sum;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint a[200001],c[200001];\r\nint main(){\r\n\tint t,i,j,sum,max,maxa,maxb,n;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint b[200001]={0};\r\n\t\tmaxa=0;\r\n\t\tfor(j=1;j<=n;j++){\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tif(a[j]>maxa)maxa=a[j];\r\n\t\t\tb[j]=a[j];\t\r\n\t\t}\r\n\t\tfor(j=1;j<=n;j++){\r\n\t\t\tif((j+a[j])<=n){\r\n\t\t\t\tif(b[j+a[j]]==a[j+a[j]]){\r\n\t\t\t\t\tb[j+a[j]]=b[j]+a[j+a[j]];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tc[j+a[j]]=b[j]+a[j+a[j]];\r\n\t\t\t\t\tif(c[j+a[j]]>b[j+a[j]]){\r\n\t\t\t\t\t\tb[j+a[j]]=c[j+a[j]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tmaxb=0;\r\n\t\tfor(j=1;j<=n;j++){\r\n\t\t\tif(b[j]>maxb)maxb=b[j];\r\n\t\t}\r\n\t\tif(maxa>maxb){\r\n\t\t\tmax=maxa;\r\n\t\t}else{\r\n\t\t\tmax=maxb;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t}\r\n\treturn 0; \r\n}\r\n"}
{"similarity_score": 0.5907046476761619, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "51219d1863a4f87580d9a96aed1042f6", "bug_code_uid": "0b6a7d292b1e7ebf8738f3b734cb85ba", "src_uid": "f9287ed16ef943006ffb821ba3678545", "apr_id": "87d79d436673f942c093bfa9f21888d8", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t,i,n,m,temp=0,ans=0;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d %d\",&n,&m);\r\n        if(n>m):\r\n            temp=n;\r\n            n=m;\r\n            m=temp;\r\n        ans=2*n+m-2\r\n        printf(\"%d\",ans);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t,i,n,m,temp=0,ans=0;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d %d\",&n,&m);\r\n        if(n==1 && m==1)\r\n        printf(\"%d\\n\",0);\r\n        else\r\n        {\r\n        if(n>m)\r\n            {temp=n;\r\n            n=m;\r\n            m=temp;}\r\n        ans=2*n+m-2;\r\n        printf(\"%d\\n\",ans);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.29606299212598425, "equal_cnt": 24, "replace_cnt": 14, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "71a731b1f4c17e17ea6cbe8470662eda", "bug_code_uid": "da0f56f6123e9212583d04199255df48", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "34ca763aba97d67954fa755f551d6179", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int i, a;\r\n    int arr[a];\r\n    int out[a];\r\n    scanf(\"%d\", &a);\r\n    for (i = a - 1; i >= 0; i--)\r\n    {\r\n        scanf(\"%d\", &arr[i]);\r\n    if (arr[i] == 1)\r\n    {\r\n        out[i] = 2;\r\n    }\r\n\r\n    else\r\n    {\r\n        if (arr[i] % 3 == 0)\r\n        {\r\n            out[i] = arr[i] / 3;\r\n        }\r\n        else if (arr[i] % 3 != 0)\r\n        {\r\n            out[i] = (arr[i] / 3) + 1\r\n        }\r\n    }\r\n    \r\n        printf(\"%d\\n\", out[i]);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int i, a;\r\n    scanf(\"%d\", &a);\r\n    int arr[a];\r\n    for (i = 0; i < a; i++)\r\n    {\r\n        scanf(\"%d\", &arr[i]);\r\n\r\n        if (arr[i] == 1)\r\n  {\r\n           printf(\"2\\n\");\r\n        }\r\n        else if (arr[i] % 3 == 0)\r\n        {\r\n            printf(\"%d\\n\", arr[i] / 3);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\", arr[i] / 3 + 1);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n// #include <stdio.h>\r\n\r\n// int main()\r\n// {\r\n//     int t;\r\n//     scanf(\"%d\",&t);\r\n//     while(t--)\r\n//     {\r\n//         int n, out;\r\n//         scanf(\"%d\", &n);\r\n//         if(n==1) out = 2;\r\n//         else if (n%3==0) out=n/3;\r\n//         else if(n%3!=0) out=(n/3)+1;\r\n//         printf(\"%d\\n\",out);\r\n//     }\r\n\r\n// }"}
{"similarity_score": 0.1401792991035045, "equal_cnt": 15, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "bc9c2fbbd5a216360fcd8e0acd40524e", "bug_code_uid": "40395a9facb2c4ef5648277b0bc87f9d", "src_uid": "1cfd0e6504bba7db9ec79e2f243b99b4", "apr_id": "8192cd7c57bb61a32aac62f8510f7cda", "difficulty": 1200, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint arr[100001][2];\nint b[100001][2],n;\nvoid oku()\n{\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor (i=0; i<n; i++)\n\t\t scanf(\"%d\",&arr[i][0]),\n\t    arr[i][1] = i+1;\n}\n\nvoid merge(int bas,int orta,int son)\n{\n\tint i=bas,j=orta,k=bas;\n\twhile(i<orta && j<son)\n\t{\n\t\t if(arr[i][0]<arr[j][0]) b[k][0] = arr[i][0], b[k++][1] = arr[i++][1];\n\t\t else                    b[k][0] = arr[j][0], b[k++][1] = arr[j++][1];\n\t}\n\twhile(i<orta) b[k][0]=arr[i][0], b[k++][1]=arr[i++][1];\n\twhile (j<son) b[k][0]=arr[j][0], b[k++][1]=arr[j++][1];\n\tfor(i=bas; i<son; i++)\n\t\tarr[i][0]=b[i][0],\n\t\tarr[i][1]=b[i][1];\n}\n\nvoid mergesort(int bas,int son)\n{\n\t if (bas+1>=son)\n\t\t   return;\n\t  int orta=(bas+son)/2;\n\t  mergesort(bas,orta);\n\t  mergesort(orta,son);\n\t  merge(bas,orta,son);\n}\n\nvoid yaz()\n{\n\tint i;\n\tfor (i=0;i<n;i++)\n\t\t printf(\"%d \",arr[i][1]);\n}\n\nint main ()\n{\n\toku();\n\tmergesort(0,n);\n\tyaz();\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint n,i,A[100007],s; char H[100007],H2[100007];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&A[i]);\n\t   if(!H[A[i]] && A[i] <= n) H[A[i]] = H2[i] = 1;\n\t}\n\tfor(i=s=1;s <= n;i++){\n\t\tif(H2[s]) printf(\"%d \",A[s++]);\n\t\telse if(!H[i]) { printf(\"%d \",i); H[i] = 1; s++; }\n\t\tif(i == n) i = 0;\n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9598021026592455, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "594648c3e5114d32ffe46fb312a62246", "bug_code_uid": "5276d09619ae2f8ad676939c1404f7ea", "src_uid": "e2836276aee2459979b232e5b29e6d57", "apr_id": "b33825305b42423c078dd6ccf49fb370", "difficulty": 1400, "tags": ["dsu", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 110\n\nint n, m;\nint e[N][N], l[N][N], ln[N], v[N];\n\nvoid dfs(int x) {\n  int i;\n  v[x] = 1;\n  for (i = 0; i < m; ++i) {\n    if (e[x][i] && !v[i]) {\n      dfs(i);\n    }\n  }\n}\n\nint main(void) {\n  int i, j, k;\n  scanf(\"%d%d\", &n, &m);\n\n  int ans = 0;\n\n  for (i = 0; i < n; ++i) {\n    scanf(\"%d\", &ln[i]);\n    for (j = 0; j < ln[i]; ++j) {\n      scanf(\"%d\", &l[i][j]);\n      --l[i][j];\n    }\n\n    for (j = 0; j < ln[i]; ++j) {\n      for (k = j + 1; k < ln[i]; ++k) {\n        e[l[i][j]][l[i][k]] = 1;\n        e[l[i][k]][l[i][j]] = 1;\n      }\n    }\n\n    if (ln[i] == 0) ++ans;\n  }\n\n  for (i = 0; i < n; ++i) {\n    for (j = 0; j < ln[i]; ++j) {\n      if (!v[l[i][j]]) {\n        dfs(l[i][j]);\n        ++ans;\n      }\n    }\n  }\n\n  --ans;\n  printf(\"%d\\n\", ans);\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 110\n\nint n, m;\nint e[N][N], l[N][N], ln[N], v[N];\n\nvoid dfs(int x) {\n  int i;\n  v[x] = 1;\n  for (i = 0; i < m; ++i) {\n    if (e[x][i] && !v[i]) {\n      dfs(i);\n    }\n  }\n}\n\nint main(void) {\n  int i, j, k;\n  int ans = 0, non = 0;\n  scanf(\"%d%d\", &n, &m);\n\n\n  for (i = 0; i < n; ++i) {\n    scanf(\"%d\", &ln[i]);\n    for (j = 0; j < ln[i]; ++j) {\n      scanf(\"%d\", &l[i][j]);\n      --l[i][j];\n    }\n\n    for (j = 0; j < ln[i]; ++j) {\n      for (k = j + 1; k < ln[i]; ++k) {\n        e[l[i][j]][l[i][k]] = 1;\n        e[l[i][k]][l[i][j]] = 1;\n      }\n    }\n\n    if (ln[i] == 0) ++non;\n  }\n\n  for (i = 0; i < n; ++i) {\n    for (j = 0; j < ln[i]; ++j) {\n      if (!v[l[i][j]]) {\n        dfs(l[i][j]);\n        ++ans;\n      }\n    }\n  }\n\n  if (ans > 0) --ans;\n\n  printf(\"%d\\n\", non + ans);\n\n  return 0;\n}\n"}
{"similarity_score": 0.6704707560627675, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "092989311cbd7c9c467c72461a74accc", "bug_code_uid": "f19e3c406788f732d7f8a360f16930a7", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "0c95179ad1f3882698816838ae4a26e0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a,b,c,d,i,x=0,s=0,h=0;\n    scanf(\"%d\",&n);\n    scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n    x=a+b+c+d;\n    for(i=1;i<n;i++){\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        s=a+b+c+d;\n        if(s>x){\n            h=i;\n        }\n    }\n    printf(\"%d\",h+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a,b,c,d,i,x=0,s=0,k=0;\n    scanf(\"%d\",&n);\n\n    for(i=1;i<=n;i++){\n            if(i==1){\n                    scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n                    x=a+b+c+d;\n            }\n       else{ scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        s=a+b+c+d;\n        if(s>x){\n            k++;\n        }\n        }\n    }\n    printf(\"%d\",k+1);\n    return 0;\n}\n"}
{"similarity_score": 0.39209726443769, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "1108c295f6d53689a5a4fce2836bbff0", "bug_code_uid": "dd60066c2d390a673216b68c169ea903", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "3d4f8bc3a5c4850ec09e370c07ecd144", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MX 100000\n\n\nmain()\n{\n    int ara[MX],n,temp,i,j;\n    scanf(\"%d\",&n);\n    for( i=0; i<n; i++)\n        scanf(\"%d\",&ara[i]);\n\n\n    for( i=0,j=n-1; i<=j; i+=2,j-=2)\n\n    {\n        temp=ara[i];\n        ara[i]=ara[j];\n        ara[j]=temp;\n\n    }\n\n    for(i=0; i<n; i++)\n        printf(\"%d \",ara[i]);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n\n    int n, t, i, j, arr[1000000];\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\", &arr[i]);\n    }\n    for(i=0,j=n-1;i<=j;i+=2,j-=2){\n        t=arr[i];\n        arr[i]=arr[j];\n        arr[j]=t;\n    }\n    for(i=0;i<n;i++){\n        printf(\"%d \", arr[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.27380952380952384, "equal_cnt": 19, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "915489d6203e413a994a7183f994ead5", "bug_code_uid": "1935b627629ca490e5d6745bd29c5414", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "42ad72d8c1d9160be809743906f916b7", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint main()\n{\n\tint i,a;\n\tscanf(\"%d\",&a);\n\tfor(i=a;i!=0;i--)\n\t{ int b,c,j;\n\t\tchar s[105];\n\t\tgets(s);\n\t\tb=strlen(s);\n\t\tfor(j=0;j<b;j++)\n\t\t{\n\t\t\tif(j%2==1)\n\t\t\t{\n\t\t\t\tprintf(\"%s\",s[j]);\n\t\t\t}\n\t\t\tif(b%2==0)\n\t\t\t{\n\t\t\t\tprintf(\"%s\",s[b-2]);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n\t}", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=0; i<t; i++)\n    {\n        long long int n,m,k,j,g,l;\n        char S[10000];\n        scanf(\"%s\",&S);\n        l=strlen(S);\n        for(k=0; k<l; k+=2)\n        {\n            printf(\"%c\",S[k]);\n        }\n        printf(\"%c\\n\",S[k-1]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9988304093567252, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "896a3f1fce1a619d4cabdb69b5fc0593", "bug_code_uid": "f20f70469de3ba225cd4048a9457b8ba", "src_uid": "dd26f45869b73137e5e5cc6820cdc2e4", "apr_id": "4750bde0f8326bc4e28417d0460b9df1", "difficulty": 1000, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MaxM      1000\nint m;\nchar tbuf[MaxM+1];\nchar *t;\n#define MaxN      1000\nint n;\nchar sbuf[MaxN+1];\nchar *s;\n\nint min_cnt;\nint min_cnt_pos;\n\nvoid read(){\n     scanf(\"%d%d\", &n, &m);\n     scanf(\"%s\", sbuf);\n     scanf(\"%s\", tbuf);\n     \n     s = sbuf-1;\n     t = tbuf-1;\n}\n\nvoid chief(){\n     int i, j;\n     int cnt;\n     \n     min_cnt = n;\n     for (i = 1; i <= m-n+1; ++i){\n         cnt = 0;\n         for (j = 1; j <= n; ++j)\n             cnt += (t[i + j - 1] != s[j]);\n         if (cnt < min_cnt){\n            min_cnt = cnt;\n            min_cnt_pos = i;\n         }\n     }\n}\n\nvoid write(){\n     int j;\n     \n     printf(\"%d\\n\", min_cnt);\n     for (j = 1; j <= n; ++j)\n      if (s[j] != t[min_cnt_pos + j - 1])\n         printf(\"%d \", j);\n     putchar('\\n');\n}\n\nint main(){\n    read();\n    chief();\n    write();\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define MaxM      1000\nint m;\nchar tbuf[MaxM+1];\nchar *t;\n#define MaxN      1000\nint n;\nchar sbuf[MaxN+1];\nchar *s;\n\nint min_cnt;\nint min_cnt_pos;\n\nvoid read(){\n     scanf(\"%d%d\", &n, &m);\n     scanf(\"%s\", sbuf);\n     scanf(\"%s\", tbuf);\n     \n     s = sbuf-1;\n     t = tbuf-1;\n}\n\nvoid chief(){\n     int i, j;\n     int cnt;\n     \n     min_cnt = n+1;\n     for (i = 1; i <= m-n+1; ++i){\n         cnt = 0;\n         for (j = 1; j <= n; ++j)\n             cnt += (t[i + j - 1] != s[j]);\n         if (cnt < min_cnt){\n            min_cnt = cnt;\n            min_cnt_pos = i;\n         }\n     }\n}\n\nvoid write(){\n     int j;\n     \n     printf(\"%d\\n\", min_cnt);\n     for (j = 1; j <= n; ++j)\n      if (s[j] != t[min_cnt_pos + j - 1])\n         printf(\"%d \", j);\n     putchar('\\n');\n}\n\nint main(){\n    read();\n    chief();\n    write();\n    return 0;\n}\n"}
{"similarity_score": 0.9378378378378378, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4dabd3c35b5177212b4480cd367013a1", "bug_code_uid": "ed7f6e2249272c4c069aa0082505ebee", "src_uid": "44619ba06ec0dc410ef598ea45a76271", "apr_id": "aa282211377f54905da28b53ccc6ade8", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint val[111111111], inp[1000];\nint main()\n{\n    int  n, i, j, cnt=0;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++) scanf(\"%d\", &inp[i]);\n    for (i = 0; i < n-1; i++)\n    {\n        for (j = i+1; j < n; j++) val[inp[i]+inp[j]]++;\n    }\n    for (i = 0; i < 111111111; i++) if (val[i] > cnt) cnt = val[i];\n    printf(\"%d\\n\", cnt);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#define SIZE 222222\nint val[SIZE], inp[1000];\nint main()\n{\n    int  n, i, j, cnt=0;\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++) scanf(\"%d\", &inp[i]);\n    for (i = 0; i < n-1; i++)\n    {\n        for (j = i+1; j < n; j++) val[inp[i]+inp[j]]++;\n    }\n    for (i = 0; i < SIZE; i++) if (val[i] > cnt) cnt = val[i];\n    printf(\"%d\\n\", cnt);\n    return 0;\n}"}
{"similarity_score": 0.9303030303030303, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8353e5e5246dfcbf6d1a26ff273cc5f9", "bug_code_uid": "b11737ff7a5deda73392648e774bd214", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "01395198a7f4ddd0c9da25b9be94a602", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,a[100000],p=0,z=0,i,ans=0,ng=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]<0){\n\t\t\tans+=-(a[i]+1);\n\t\t\tng++;\n\t\t}\n\t\telse if(a[i]>0){\n\t\t\tans+=a[i]-1;\n\t\t\tp++;\n\t\t}\n\t\telse z++;\n\t}\n\tif(ng%2==1){\n\t\tif(z>0)ans+=z;\n\t\telse ans+=2*ng;\n\t}\n\telse ans+=z;\n\tprintf(\"%d\",ans);\n}\t\n", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int n,a[100000],p=0,z=0,i,ans=0,ng=0;\n\tscanf(\"%I64d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tif(a[i]<0){\n\t\t\tans+=-(a[i]+1);\n\t\t\tng++;\n\t\t}\n\t\telse if(a[i]>0){\n\t\t\tans+=a[i]-1;\n\t\t\tp++;\n\t\t}\n\t\telse z++;\n\t}\n\tif(ng%2==1){\n\t\tif(z>0)ans+=z;\n\t\telse ans+=2;\n\t}\n\telse ans+=z;\n\tprintf(\"%I64d\",ans);\n}\t\n"}
{"similarity_score": 0.918918918918919, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "43d34e04f9edfadb3df7ed3eb8fea07b", "bug_code_uid": "485f99fa8e1187131cab98557ef13df1", "src_uid": "18f2e54e4147e8887da737d5b6639473", "apr_id": "7953d22d45c8e4f46f3e6124affdbdb6", "difficulty": 900, "tags": ["sortings", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int a,b,c,i,j,k,error,minimum=99999999999;\n        for(i=-1;i<2;i++)\n        {\n            for(j=-1;j<2;j++)\n            {\n                for(k=-1;k<2;k++)\n                {\n                    error=abs((a+i)-(b+j))+abs((a+i)-(c+k))+abs((c+k)-(b-j));\n                    if(error<minimum)\n                    minimum=error;\n                }\n            }\n        }\n        printf(\"%lli\\n\",minimum);\n    }\n    return 0;\n}", "fixed": "#include<stdlib.h>\n#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int a,b,c,i,j,k,error,minimum=999999999999;\n        scanf(\"%lli %lli %lli\",&a,&b,&c);\n        for(i=-1;i<2;i++)\n        {\n            for(j=-1;j<2;j++)\n            {\n                for(k=-1;k<2;k++)\n                {\n                    error=abs((a+i)-(b+j))+abs((a+i)-(c+k))+abs((c+k)-(b+j));\n                    if(minimum>error)\n                    minimum=error;\n                }\n            }\n        }\n        printf(\"%lli\\n\",minimum);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9928400954653938, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5f6e3bc614548e428014f5916d52a0c4", "bug_code_uid": "e442cd22666a0fe928811070e5fed2bb", "src_uid": "461378e9179c9de454674ea9dc49c56c", "apr_id": "3330d1d4bd27907202ae9006fac1f894", "difficulty": 800, "tags": ["dp", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\n\r\nvoid solve() {\r\n    int n, q;\r\n    scanf(\"%d %d\", &n, &q);\r\n    int a[n + 1][3];\r\n    char* s = malloc(sizeof(char) * (n + 1));\r\n    scanf(\"%s\", s);\r\n    for (int i = 0; i <= n; i++) {\r\n        for (int j = 0; j < 3; j++) {\r\n            a[i][j] = 0;\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 0; j < 3; j++) {\r\n            a[i][j] = a[i - 1][j];\r\n        }\r\n        a[i][s[i - 1] - 'a']++;\r\n    }\r\n    while (q--) {\r\n        int l, r;\r\n        scanf(\"%d %d\", &l, &r);\r\n        int ans = 0;\r\n        for (int i = 0; i < 3; i++) {\r\n            ans += (i + 1) * (a[r][i] - a[l - 1][i]);\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n\r\n}\r\n\r\nint main() {\r\n    int tt = 1;\r\n    // scanf(\"%d\", &tt);\r\n    while (tt--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\n\r\nvoid solve() {\r\n    int n, q;\r\n    scanf(\"%d %d\", &n, &q);\r\n    int a[n + 1][26];\r\n    char* s = malloc(sizeof(char) * (n + 1));\r\n    scanf(\"%s\", s);\r\n    for (int i = 0; i <= n; i++) {\r\n        for (int j = 0; j < 26; j++) {\r\n            a[i][j] = 0;\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 0; j < 26; j++) {\r\n            a[i][j] = a[i - 1][j];\r\n        }\r\n        a[i][s[i - 1] - 'a']++;\r\n    }\r\n    while (q--) {\r\n        int l, r;\r\n        scanf(\"%d %d\", &l, &r);\r\n        int ans = 0;\r\n        for (int i = 0; i < 26; i++) {\r\n            ans += (i + 1) * (a[r][i] - a[l - 1][i]);\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n\r\n}\r\n\r\nint main() {\r\n    int tt = 1;\r\n    // scanf(\"%d\", &tt);\r\n    while (tt--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9004092769440655, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9fb5e0a3800948335e3d8bd3e774cd54", "bug_code_uid": "ac9b04a866605ed564667c9c2ca7e6df", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "8cd5f95b786cf3e3c7a86af09383fb48", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    long long int n,m,i,d=0;\n    scanf(\"%lld %lld\",&n,&m);\n    long long int ara[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\",&ara[i]);\n    }\n    for(i=1; i<=m; i++)\n    {\n        m=m-i;\n        //printf(\"%lld\\n\",m);\n    }\n    if(m==0)\n        printf(\"%lld\\n\",ara[n-1]);\n    else\n\n        printf(\"%lld\\n\",ara[m-1]);\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    long long int n,m,i,d=0;\n    scanf(\"%lld %lld\",&n,&m);\n    long long int ara[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\",&ara[i]);\n    }\n    for(i=1; i+1<=m; i++)\n    {\n        m=m-i;\n        //printf(\"%lld\\n\",m);\n    }\n\n        printf(\"%lld\\n\",ara[m-1]);\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.6514522821576764, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "47b096878aa76b4d154215df55325814", "bug_code_uid": "eb6860c4ef19a90103e1842fe303b093", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "631994b9c562eaac7072912c16037bd4", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int test_case,i,p,L,v,l,x,r;\n  scanf(\"%d\",&test_case);\n  for(i=0;i<test_case;i++){\n    scanf(\"%d %d %d %d\",&L,&v,&l,&r);\n    int p=L/v;\n    x=((r-l)+1)/v;\n    if(x==0){\n      x=1;\n    }\n    printf(\"%d\\n\",p-x);\n  }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int test_case,i;\n  long int L,v,l,r;\n  scanf(\"%d\",&test_case);\n  for(i=0;i<test_case;i++){\n    scanf(\"%ld %ld %ld %ld\",&L,&v,&l,&r);\n    printf(\"%ld\\n\",L/v-r/v+(l-1)/v);\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.9278350515463918, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "b98e7b6cc39c16b8cf44f71e93d40623", "bug_code_uid": "c43c9ffacaa6cb6e69dc50b5f5100280", "src_uid": "49c47ebfd710a3733ce7ecb3a3c134a7", "apr_id": "91dbaef6461000a9857682c8cb8fe383", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define sz 150\nint a[sz],b[sz];\nint main()\n{\n    int min1,max,i,j,k,l,n,m,t,v;\n    scanf(\"%d %d\",&n,&m);\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(a[i]>a[j])\n            {\n                t=a[i];\n                a[i]=a[j];\n                a[j]=t;\n            }\n        }\n    }\n    v=2*a[0];\n    max=a[n-1];\n    min1=3200;\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        if(min1>b[i])\n            min1=b[i];\n            //printf(\"%d\\n\",min1);\n    }\n    //printf(\"%d %d %d\\n\",v,max,min1);\n    if(v<min1)\n    {\n        if(v>=max)\n        {\n            printf(\"%d\\n\",v);\n            return 0;\n        }\n        printf(\"%d\\n\",a[n-1]);\n        return 0;\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define sz 150\nint a[sz],b[sz];\nint main()\n{\n    int min1,max,i,j,k,l,n,m,t,v;\n    scanf(\"%d %d\",&n,&m);\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(a[i]>a[j])\n            {\n                t=a[i];\n                a[i]=a[j];\n                a[j]=t;\n            }\n        }\n    }\n    v=2*a[0];\n    max=a[n-1];\n    min1=3200;\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        if(min1>b[i])\n            min1=b[i];\n            //printf(\"%d\\n\",min1);\n    }\n    //printf(\"%d %d %d\\n\",v,max,min1);\n    if(v<min1)\n    {\n        if(v>=max)\n        {\n            printf(\"%d\\n\",v);\n            return 0;\n        }\n        if(a[n-1]<min1){\n            printf(\"%d\\n\",a[n-1]);\n            return 0;\n        }\n        else\n        {\n            printf(\"-1\\n\");\n            return 0;\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9977358490566037, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3de591244c3439d04f54e5cc394b8677", "bug_code_uid": "e25997b7975f9880518faf6018423a2a", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "e720e664dfc942eb4fa1a50406a42aef", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint pan (int a);\nint main ()\n{\n\tint i,s,a,b,j; \n\tscanf(\"%d\",&i); \n\ts=i/2; \n\tif(i<12||i>1000000) \n\tprintf(\"Error\\n\");\n    else if(s*2==i&&(pan(s))==1) \n    printf(\"%d %d\\n\",s,s);\n\telse \n\t{\n\t\tif(s*2==i) \n\t\t{\n\t\t\ta=b=s;\n\t\t}\n\t    else\n\t\t { \n\t    a=s;b=s+1;\n\t     }\n\twhile(a>1&&b<i)\n\t{\n\t\tif((pan(a)==0)) \n\t\t{\n\t\t--a;++b;\n\t\tcontinue;\n\t    }\n\t\tif((pan(b))==0)\n\t\t{\n\t    ++b;--a;\n\t\tcontinue;\n\t    }\n\t\tif(a+b==i) \n\t\tbreak;\n\t    --a;++b;\n\t} \n    }  \n\tif(a+b==i)\n\tprintf(\"%d %d\\n\",a,b);\n}\n\treturn 0;\n}\nint pan (int a)\n{\n\tint b,c,d;\n\tb=3;\n\tif(a==2)\n\treturn 0;\n\tif(a%2==0)\n\treturn 1;\n\telse\n{\n\twhile(b<a)\n\t{\n\t\tif(a%b==0)\n\t\treturn 1;\n\t\tb+=2;\n\t}\n}\n    return 0;\t\n}\n", "fixed": "#include<stdio.h>\nint pan (int a);\nint main ()\n{\n\tint i,s,a,b,j; \n\tscanf(\"%d\",&i);\n\ts=i/2; \n\tif(i<12||i>1000000) \n\tprintf(\"Error\\n\");\n    else if(s*2==i&&(pan(s))==1) \n    printf(\"%d %d\\n\",s,s);\n\telse \n\t{\n\t\tif(s*2==i) \n\t\t{\n\t\t\ta=b=s;\n\t\t}\n\t    else\n\t\t { \n\t    a=s;b=s+1;\n\t     }\n\twhile(a>1&&b<i)\n\t{\n\t\tif((pan(a)==0)) \n\t\t{\n\t\t--a;++b;\n\t\tcontinue;\n\t    }\n\t\tif((pan(b))==0)\n\t\t{\n\t    ++b;--a;\n\t\tcontinue;\n\t    }\n\t\tif(a+b==i) \n\t\tbreak;\n\t    --a;++b;\n\t} \n    }  \n\tif(a+b==i)\n\tprintf(\"%d %d\\n\",a,b);\n\treturn 0;\n}\nint pan (int a)\n{\n\tint b,c,d;\n\tb=3;\n\tif(a==2)\n\treturn 0;\n\tif(a%2==0)\n\treturn 1;\n\telse\n{\n\twhile(b<a)\n\t{\n\t\tif(a%b==0)\n\t\treturn 1;\n\t\tb+=2;\n\t}\n}\n    return 0;\t\n}\n"}
{"similarity_score": 0.96, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "00af00a863aeaf0c36c37b02e2979237", "bug_code_uid": "bb5121a295e79a7c4d5f36451e83f5db", "src_uid": "e79c6a337e9347522bf19f3d5c162541", "apr_id": "74af571992e27f293fc04ed8bbc4b02b", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n    int n,i;\r\n \r\n    scanf(\"%d\",&n);\r\n \r\n    for(i=0; i<n; i++)\r\n    {\r\n        long long t,j,s=0;\r\n        \r\n        scanf(\"%d\",&t);\r\n        \r\n        long long a[t];\r\n        for(j=0; j<t; j++)\r\n        {\r\n            scanf(\"%lld\",&a[j]);\r\n        }\r\n        for(j=0; j<t; j++)\r\n        {\r\n            if(a[j]>(j+1+s))\r\n                s = (a[j]-(j+1));\r\n        }\r\n        printf(\"%lld\\n\",s);\r\n    }\r\n \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n    int n,i;\r\n \r\n    scanf(\"%d\",&n);\r\n \r\n    for(i=0; i<n; i++)\r\n    {\r\n        int t,j,s=0;\r\n        \r\n        scanf(\"%d\",&t);\r\n        \r\n        int a[t];\r\n        \r\n        for(j=0; j<t; j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        for(j=0; j<t; j++)\r\n        {\r\n            if(a[j]>(j+1+s))\r\n                s = (a[j]-(j+1));\r\n        }\r\n        printf(\"%d\\n\",s);\r\n    }\r\n \r\n    return 0;\r\n}"}
{"similarity_score": 0.9416755037115588, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9e88a6baaffed19b909333aee1cd2d50", "bug_code_uid": "e96b17255016c0407e54fba72c8279bb", "src_uid": "b85c8bfbe67a23a81bef755f9313115a", "apr_id": "a9b26263d4a3982e7818d5c9e60a3e42", "difficulty": 1500, "tags": ["constructive algorithms", "number theory", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,a,b,m;\n    scanf(\"%d%d\",&n,&k);\n    a=n/2;\n    if(k<a||n==1)\n        printf(\"-1\\n\");\n    else{\n        b=k/a;\n        m=k-a*b;\n        printf(\"%d %d\",b,b*2);\n        for(i=3;i<=2*(a-m);i+=2)\n            printf(\" %d %d\",i*b,(i+1)*b);\n        b++;\n        for(i=2*(a-m)+1;i<=2*a;i+=2)\n            printf(\" %d %d\",i*b,(i+1)*b);\n        if(n%2)\n            printf(\" %d\",(i-1)*b+1);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,a,b,m;\n    scanf(\"%d%d\",&n,&k);\n    a=n/2;\n    if(k<a&&n>1||n==1&&k>0)\n        printf(\"-1\\n\");\n    else if(k==0&&n==1)\n        printf(\"1\");\n    else{\n        b=k/a;\n        m=k-a*b;\n        printf(\"%d %d\",b,b*2);\n        for(i=3;i<=2*(a-m);i+=2)\n            printf(\" %d %d\",i*b,(i+1)*b);\n        b++;\n        for(i=2*(a-m)+1;i<=2*a;i+=2)\n            printf(\" %d %d\",i*b,(i+1)*b);\n        if(n%2)\n            printf(\" %d\",(i-1)*b+1);\n    }\n    return 0;\n}"}
{"similarity_score": 0.37452229299363055, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "94fce2ff57fac46c3a9491682e934926", "bug_code_uid": "719be7f2a1f8a672dc010e5846f5096d", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "1b30e6238739e1d1a8e988f60fb30298", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int ara[10010],n,i,j=1,max=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(ara[i]>ara[i-1])\n            j++;\n        else\n            j=1;\n        if(j>max)\n            max=j;\n    }\n\n    printf(\"%d\\n\",max);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,count=1,i,max=1;\n    scanf(\"%d\",&n);\n    int ara[n+1];\n    scanf(\"%d\",&ara[1]);\n    for(i=2; i<=n; i++)\n    {\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]>ara[i-1])\n        {\n            count++;\n            if(count>=max)\n                max=count;\n        }\n        else\n        {\n            count=1;\n        }\n    }\n    if(n==1)\n        printf(\"1\");\n    else\n        printf(\"%d\\n\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.8673139158576052, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4667dd81d935f3833e266949e40d61ee", "bug_code_uid": "1b0480dedabfafc3c14b4dd7b6469ae9", "src_uid": "a6b6d9ff2ac5c367c00a64a387cc9e36", "apr_id": "3c5c4a12bbe5ca0ef8e3335389e2ed06", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n     int n,s;\r\n     scanf(\"%d\",&n);\r\n     while(n>0){\r\n         scanf(\"%d\",&s);\r\n         printf(\"%d\\n\",s+(s/2+s/3)*2);\r\n     }\r\n        \r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n     int n,s;\r\n     scanf(\"%d\",&n);\r\n     while(n-->0){scanf(\"%d\",&s);printf(\"%d\\n\",s+(s/2+s/3)*2);}\r\n}"}
{"similarity_score": 0.9943791517629024, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a10055ff626505b0ae36cee0b46cf40b", "bug_code_uid": "d8ef8953b182bb3e2744ea5436d9e537", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "bb873dffec304fe223b94ba113bd0f95", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n, k;\n    int menori, menor;\n    scanf(\"%d %d\", &n, &k);\n    int heights[n];\n    int i;\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &heights[i]);\n    }\n    if (k == 1){\n        menor = heights[1];\n        menori = 1;\n        for(i = 0; i < n; i ++){\n            if (menor > heights[i]){\n                menori = i;\n                menor = heights[i];\n            }\n        }\n        printf(\"%d\", menori + 1);\n    } else {\n        int dp[n];\n        int sum;\n        sum = 0;\n        for(i = 0; i < k; i++){\n            sum = sum + heights[i];\n        }\n        dp[k - 1] = sum;\n        for(i = k; i < n; i++){\n            dp[i] = heights[i] + dp[i - 1] - dp[i - k];\n        }\n        menori = k - 1;\n        menor = sum;\n        for(i = k - 1; i < n; i ++){\n            if (menor > dp[i]){\n                menori = i;\n                menor = dp[i];\n            }\n        }\n        printf(\"%d\", menori - k + 1);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int n, k;\n    int menori, menor;\n    scanf(\"%d %d\", &n, &k);\n    int heights[n];\n    int i;\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &heights[i]);\n    }\n    if (k == 1){\n        menor = heights[1];\n        menori = 1;\n        for(i = 0; i < n; i ++){\n            if (menor > heights[i]){\n                menori = i;\n                menor = heights[i];\n            }\n        }\n        printf(\"%d\", menori + 1);\n    } else {\n        int dp[n];\n        int sum;\n        sum = 0;\n        for(i = 0; i < k; i++){\n            sum = sum + heights[i];\n        }\n        dp[k - 1] = sum;\n        for(i = k; i < n; i++){\n            dp[i] = heights[i] + dp[i - 1] - heights[i - k];\n        }\n        menori = k - 1;\n        menor = sum;\n        for(i = k - 1; i < n; i ++){\n            if (menor > dp[i]){\n                menori = i;\n                menor = dp[i];\n            }\n        }\n        printf(\"%d\", menori - k + 2);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8159866777685262, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "1750123bf715600ef231f3b36bb9e795", "bug_code_uid": "d4a1d291f72ebd4a95a1e19c215d487f", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "4acdeab44f28df73fdbea41e2d97b66e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n     int n,v,a[51],i,j,k=0,flag,p,count=0;\n     scanf(\"%d%d\", &n,&v);\n     for(j=1;j<=n;j++)\n     {\n         scanf(\"%d\", &k);\n         flag=0;\n         for(i=0;i<k;i++)\n         {\n             scanf(\"%d\", &p);\n             if(p<v)\n             {\n                 flag=1;\n             }\n         }\n         if(flag==1)\n         {\n             a[k++]=j;\n             count++;\n         }\n     }\n     printf(\"%d\\n\", count);\n     if(count>0)\n     {\n          for(i=1;i<k;i++)\n     {\n         printf(\"%d \", a[i]);\n     }\n     printf(\"\\n\");\n     }\n\n     return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n     int n,v,i,j,k=0,flag,p,count=0,q;\n     scanf(\"%d%d\", &n,&v);\n     int a[n+1];\n     for(j=1;j<=n;j++)\n     {\n         scanf(\"%d\", &q);\n         flag=0;\n         for(i=0;i<q;i++)\n         {\n             scanf(\"%d\", &p);\n             if(p<v)\n             {\n                 flag=1;\n             }\n         }\n         if(flag==1)\n         {\n             a[k++]=j;\n\n         }\n     }\n     printf(\"%d\\n\", k);\n     if(k>0)\n     {\n          for(i=0;i<k;i++)\n     {\n             printf(\"%d \", a[i]);\n     }\n     printf(\"\\n\");\n     }\n     return 0;\n}\n"}
{"similarity_score": 0.708557749850389, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1d4fe5c84533e14b17f217ca13cca189", "bug_code_uid": "e4758add6d08f682b3561c6aeed20aab", "src_uid": "b9d5e58459baf2a2c294225b73b7229b", "apr_id": "aa2cbd9028ac720b624f45ca05fe792b", "difficulty": 1300, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n#include<stdio.h>\nint main() {\n\tint TC, size, num;\n\tscanf(\"%d\", &TC);\n\tfor (int i = 0; i < TC; i++) {\n\t\tscanf(\"%d\", &size);\n\t\tint fail = 0;\n\t\tint fail2 = 0;\n\t\tfor (int j = 0; j < size; j++) {\n\t\t\tscanf(\"%d\", &num);\n\t\t\tint min = -1;\n\t\t\tint min2 = -1;\n\t\t\tif (size % 2 != 0) {\n\t\t\t\tif (j <= size / 2)\n\t\t\t\t\tmin = j;\n\t\t\t\telse\n\t\t\t\t\tmin = size / 2 - (j - size / 2);\n\t\t\t\tif (num < min)\n\t\t\t\t\tfail = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (j <= size / 2)\n\t\t\t\t\tmin = j;\n\t\t\t\telse\n\t\t\t\t\tmin = size / 2 - (j - size / 2) - 1;\n\t\t\t\tif (j < (size - 1) / 2)\n\t\t\t\t\tmin2 = j;\n\t\t\t\telse\n\t\t\t\t\tmin2 = size / 2 - (j - size / 2) - 1;\n\t\t\t\tif (num < min) fail = true;\n\t\t\t\tif (num < min2) fail2 = true;\n\t\t\t}\n\t\t}\n\t\tif (size % 2 != 0)\n\t\t\tprintf(\"%s\\n\", ((fail) ? \"NO\" : \"YES\"));\n\t\telse\n\t\t\tprintf(\"%s\\n\", ((fail && fail2) ? \"NO\" : \"YES\"));\n\t}\n\n\treturn 0;\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include<stdio.h>\nint main() {\n\tint TC, size, num;\n\tscanf(\"%d\", &TC);\n\tfor (int i = 0; i < TC; i++) {\n\t\tscanf(\"%d\", &size);\n\t\tint fail = 0;\n\t\tint fail2 = 0;\n\t\tfor (int j = 0; j < size; j++) {\n\t\t\tscanf(\"%d\", &num);\n\t\t\tint min = -1;\n\t\t\tint min2 = -1;\n\t\t\tif (size % 2 != 0) {\n\t\t\t\tif (j <= size / 2)\n\t\t\t\t\tmin = j;\n\t\t\t\telse\n\t\t\t\t\tmin = size / 2 - (j - size / 2);\n\t\t\t\tif (num < min)\n\t\t\t\t\tfail = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (j <= size / 2)\n\t\t\t\t\tmin = j;\n\t\t\t\telse\n\t\t\t\t\tmin = size / 2 - (j - size / 2) - 1;\n\t\t\t\tif (j < (size - 1) / 2)\n\t\t\t\t\tmin2 = j;\n\t\t\t\telse\n\t\t\t\t\tmin2 = size / 2 - (j - size / 2) - 1;\n\t\t\t\tif (num < min) fail = 1;\n\t\t\t\tif (num < min2) fail2 = 1;\n\t\t\t}\n\t\t}\n\t\tif (size % 2 != 0)\n\t\t\tprintf(\"%s\\n\", ((fail) ? \"NO\" : \"YES\"));\n\t\telse\n\t\t\tprintf(\"%s\\n\", ((fail && fail2) ? \"NO\" : \"YES\"));\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.7723627390499691, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "4af7fa33f90de05aae64622d416dcbac", "bug_code_uid": "d1b8bd46219c11df466b678edc57f066", "src_uid": "43041076ddd0bbfac62cd4abf4536282", "apr_id": "3c962f61f8a180b30fc0734331e9d158", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tlong long n, m;\r\n\tscanf(\"%d\", &m);\r\n\twhile (m--)\r\n\t{\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint bnum[50] = { 0 };\r\n\t\tint i, nt = n, k = 0;\r\n\t\tint a[20] = { 0 }, b[20] = { 0 }, c[20] = { 0 };\r\n\t\tint a1 = 0, b1 = 0, c1 = 0;\r\n\t\tint x = 0;\r\n\t\twhile (nt)\r\n\t\t{\r\n\t\t\tbnum[k++] = nt % 2;\r\n\t\t\tnt = nt / 2;\r\n\t\t}\r\n\t\tif (n % 2 != 0)\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (i = 1; i < k; i++)\r\n\t\t\t{\r\n\t\t\t\tif (bnum[i] == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\ta[x] = 1;\r\n\t\t\t\t\tb[x] = 1;\r\n\t\t\t\t\tc[x] = 1;\r\n\t\t\t\t\tx++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ta[x] = 1;\r\n\t\t\t\t\tb[x] = 1;\r\n\t\t\t\t\tc[x] = 0;\r\n\t\t\t\t\tx++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tint t = 1;\r\n\t\t\tfor (i = 0; i < x; i++)\r\n\t\t\t{\r\n\t\t\t\ta1 += a[i] * t;\r\n\t\t\t\tb1 += b[i] * t;\r\n\t\t\t\tc1 += c[i] * t;\r\n\t\t\t\tt *= 2;\r\n\t\t\t}\r\n\t\t\tprintf(\"%d %d %d\\n\", a1, b1, c1);\r\n\t\t}\r\n\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\tlong long n, m;\r\n\tscanf(\"%lld\", &m);\r\n\twhile (m--)\r\n\t{\r\n\t\tscanf(\"%lld\", &n);\r\n\t\tlong long bnum[50] = { 0 };\r\n\t\tlong long i, nt = n, k = 0;\r\n\t\tlong long a[50] = { 0 }, b[50] = { 0 }, c[50] = { 0 };\r\n\t\tlong long a1 = 0, b1 = 0, c1 = 0;\r\n\t\tlong x = 0;\r\n\t\twhile (nt)\r\n\t\t{\r\n\t\t\tbnum[k++] = nt % 2;\r\n\t\t\tnt = nt / 2;\r\n\t\t}\r\n\t\tif (n % 2 != 0)\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (i = 1; i < k; i++)\r\n\t\t\t{\r\n\t\t\t\tif (bnum[i] == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\ta[x] = 1;\r\n\t\t\t\t\tb[x] = 1;\r\n\t\t\t\t\tc[x] = 1;\r\n\t\t\t\t\tx++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ta[x] = 1;\r\n\t\t\t\t\tb[x] = 0;\r\n\t\t\t\t\tc[x] = 1;\r\n\t\t\t\t\tx++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlong long t = 1;\r\n\t\t\tfor (i = 0; i < x; i++)\r\n\t\t\t{\r\n\t\t\t\ta1 += a[i] * t;\r\n\t\t\t\tb1 += b[i] * t;\r\n\t\t\t\tc1 += c[i] * t;\r\n\t\t\t\tt *= 2;\r\n\t\t\t}\r\n\t\t\tprintf(\"%lld %lld %lld\\n\", a1, b1, c1);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.43889384478144516, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5b6cbdca0de68d10779006e1bd451291", "bug_code_uid": "f94238443c2a052d542ff4682576cb6b", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "bcbb3dfac00a1932a9e08aeb4e63f49f", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,a,b,n,s=0,c;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        c=0;\n        scanf(\"%d %d %d\",&a,&b,&n);\n        while(a<=n || b<=n)\n        {\n            if(a>n || b>n)\n            {\n                printf(\"%d\\n\",c);\n                break;\n            }\n            else if(b<a)\n            {\n                b=b+a;\n                c++;\n                if(b>n)\n                {\n                    printf(\"%d\\n\",c);\n                    break;\n                }\n            }\n            else if(a<b)\n            {\n                a=a+b;\n                c++;\n                if(a>n)\n                {\n                    printf(\"%d\\n\",c);\n                    break;\n                }\n            }\n\n        }\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,a,b,n,s=0,c;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        c=0;\n        scanf(\"%d %d %d\",&a,&b,&n);\n        while(a<=n && b<=n)\n        {\n            if(a<b)\n                a=a+b;\n            else\n                b=b+a;\n\n                  c++;\n        }\n         printf(\"%d\\n\",c);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9940298507462687, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "04986e7d1dbb2d4c6a6cc39c11fa0665", "bug_code_uid": "68c768f7bdd203b7d1d3d1415b0793e3", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "685259bcb41cf4de9445a4aec656a8c0", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int a, b, A[100000], B[100000], k, m, i;\n\n    scanf(\"%d%d\", &a, &b);\n    scanf(\"%d%d\", &k, &m);\n\n    for (i=1;i<=a;i++)\n        scanf(\"%d\", &A[i]);\n    for(i=1;i<=b;i++)\n        scanf(\"%d\", &B[i]);\n\n    if (A[k]<B[m])\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n\n\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    int a, b, A[100000], B[100000], k, m, i;\n\n    scanf(\"%d%d\", &a, &b);\n    scanf(\"%d%d\", &k, &m);\n\n    for (i=1;i<=a;i++)\n        scanf(\"%d\", &A[i]);\n    for(i=1;i<=b;i++)\n        scanf(\"%d\", &B[i]);\n\n    if (A[k]<B[b-m+1])\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9318181818181818, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "02e4d133629b77f8aa685c0853cb6e18", "bug_code_uid": "8a196e55f88b76386487057c44b2b70e", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "0f7f306674e5995240e0d80aa14e401f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,d,e,f,g,n;\n    scanf(\"%lld %lld\",&n,&c);\n    scanf(\"%lld\",&a);\n    //d=a;\n    if(n==1)\n    {\n        printf(\"1\\n\");\n    }\n    else\n    {\n    while(n!=1)\n    {\n        scanf(\"%lld\",&b);\n        if(b-a<=c)\n        {\n            if(e==0)\n                e++;\n            e++;\n        }\n        else\n        {\n            e=0;\n        }a=b;\n        n--;\n    }printf(\"%lld\\n\",e);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,d,e,f,g,n;\n    scanf(\"%lld %lld\",&n,&c);\n    scanf(\"%lld\",&a);\n    //d=a;\n    if(n==1)\n    {\n        printf(\"1\\n\");\n    }\n    else\n    {\n    while(n!=1)\n    {\n        scanf(\"%lld\",&b);\n        if(b-a<=c)\n        {\n            if(e==0)\n                e++;\n            e++;\n        }\n        else\n        {\n            e=0;\n        }a=b;\n        n--;\n    }\n        if(e==0)\n            printf(\"1\\n\");\n        else\n        printf(\"%lld\\n\",e);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9615384615384616, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "95efa96e803d3a845326a1c43e5653a4", "bug_code_uid": "fe95940976ab9e257dee4f242da35d32", "src_uid": "311f74b766818633581af67a88244709", "apr_id": "01d329a356e9652b6a8d848288c8c2b9", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main() \n{\n\tint temp,n,m,i,lower=-1,higher=-1;\n\tlong int totaltime = 0;\n\t\n\tscanf(\"%d\",&n);\n\tint *time = malloc(n*sizeof(int));\n\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\",&time[i]);\n\t\ttotaltime = totaltime + time[i]; \n\t}\n\t\t\n\tscanf(\"%d\",&m);\n\tint *start = malloc(m*sizeof(int));\n\tint *end = malloc(m*sizeof(int));\n\t\n\ttemp = 1;\n\t\n\tfor(i=0; i<m; i++)\n\t{\t\n\t\tscanf(\"%d %d\",&start[i],&end[i]);\n\t\tif(totaltime >= start[i])\n\t\t\tlower = i;\n\t\tif( (totaltime <= end[i]) && temp ) \n\t\t\t{\n\t\t\t\thigher = i;\n\t\t\t\ttemp = 0;\n\t\t\t}\t\n\t}\n\n\tif(end[m-1] >= totaltime)\n\t{\n\t\tif(lower==-1)\n\t\t\tprintf(\"%d\\n\",start[0]);\n\t\telse if(higher==lower)\n\t\t\tprintf(\"%ld\\n\",totaltime);\n\t\telse\n\t\t\tprintf(\"%d\\n\",start[lower+1]);\n\t}\n\telse\n\t{\n    \tprintf(\"-1\\n\");\n    }\nreturn 0;\t\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main() \n{\n\tint temp,n,m,i,lower=-1,higher=-1;\n\tlong int totaltime = 0;\n\t\n\tscanf(\"%d\",&n);\n\tint *time = malloc(n*sizeof(int));\n\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\",&time[i]);\n\t\ttotaltime = totaltime + time[i]; \n\t}\n\t\t\n\tscanf(\"%d\",&m);\n\tfloat *start = malloc(m*sizeof(float));\n\tfloat *end = malloc(m*sizeof(float));\n\t\n\ttemp = 1;\n\t\n\tfor(i=0; i<m; i++)\n\t{\t\n\t\tscanf(\"%f %f\",&start[i],&end[i]);\n\t\tif(totaltime*1.0 >= start[i])\n\t\t\tlower = i;\n\t\tif( (totaltime*1.0 <= end[i]) && temp ) \n\t\t\t{\n\t\t\t\thigher = i;\n\t\t\t\ttemp = 0;\n\t\t\t}\t\n\t}\n\n\tif(end[m-1] >= totaltime*1.0)\n\t{\n\t\tif(lower==-1)\n\t\t\tprintf(\"%0.f\\n\",start[0]);\n\t\telse if(higher==lower)\n\t\t\tprintf(\"%ld\\n\",totaltime);\n\t\telse\n\t\t\tprintf(\"%0.f\\n\",start[lower+1]);\n\t}\n\telse\n\t{\n    \tprintf(\"-1\\n\");\n    }\nreturn 0;\t\n}"}
{"similarity_score": 0.9733333333333334, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9bd1226e2b5c5f9fbcf4d7bcc368e006", "bug_code_uid": "a6d45f74a419a3b600b0f006e62335de", "src_uid": "5088d1d358508ea3684902c8e32443a3", "apr_id": "c52302aa39a96e4b3e2f55060edc362b", "difficulty": 1200, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\nint n;\n\tscanf(\"%d\",&n);\n\tint a[n], sum=1, cek = 0;\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tif(a[i-1]<=@*a[i]){\n\t\t\tsum++;\n\t\t}\n\t\telse{\n\t\t\tif(cek<sum) cek = sum;\n\t\t\tsum = 1;\n\t\t}\n\t}\n\tif(cek<sum) cek = sum;\n\tprintf(\"%d\",cek);\n\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\nint n;\n\tscanf(\"%d\",&n);\n\tint a[n], sum=1, cek = 0;\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tif(a[i]<=2*a[i-1]){\n\t\t\tsum++;\n\t\t}\n\t\telse{\n\t\t\tif(cek<sum) cek = sum;\n\t\t\tsum = 1;\n\t\t}\n\t}\n\tif(cek<sum) cek = sum;\n\tprintf(\"%d\",cek);\n\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.6711668273866924, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "c81ce62829a5bd06778ff1c0fd29ca28", "bug_code_uid": "7dd5f9f1a0795168548fd155e6ae0cc2", "src_uid": "9b9b01e5d2329291eee80356525eaf04", "apr_id": "095b29c92cc6bf046d9c743288a8819e", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int l1,l2,l,T,i,j,k,r,count=0;\n    scanf(\"%d\",&T);\n    char s1[101];\n    char s2[101];\n     char temp;\n      for(r=0;r<T;r++){\n      scanf(\"%s\",s1);\n     scanf(\"%s\",s2);\n  l1=strlen(s1);\n  l2=strlen(s2);\n\nfor(i=0;i<l2;i++){\n    for(j=0;j<l2;j++){\n        if(s1[i]==s2[j]){\n                count++;\n        }\n    }\n}\n\n\n if(count==0){\n    printf(\"NO\\n\");\n }\n else{\n    printf(\"YES\\n\");\n }\n }\n }\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int l1,l2,l,T,i,j,k,r,count=0;\n    scanf(\"%d\",&T);\n    char s1[101];\n    char s2[101];\n    char temp;\n    for(r=0; r<T; r++) {\n        scanf(\"%s\",s1);\n        scanf(\"%s\",s2);\n        l1=strlen(s1);\n        l2=strlen(s2);\n\n        for(i=0; i<l2; i++) {\n            for(j=0; j<l2; j++) {\n                if(s1[i]==s2[j]) {\n                    count++;\n                }\n            }\n        }\n\n\n        if(count==0) {\n            printf(\"NO\\n\");\n        }\n        else {\n            printf(\"YES\\n\");\n        }\n        count=0;\n    }\n}"}
{"similarity_score": 0.9041297935103245, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "9b856d823c0e65ce1d5e3cce89f59a72", "bug_code_uid": "81b2e38b654b6b53989f2d77dd278573", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "d8ad49ece6e47bd97b941ba618b47fc7", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    int i, query;\n    long long int n, k;\n    int *count;\n    \n    scanf(\"%d\", &query);\n    count=(int *)malloc(sizeof(int)*query);\n    \n    for(i=0; i<query; i++)\n    {\n        scanf(\"%lld %lld\", &n, &k);\n        \n        count[i]=0;\n        \n        while(n>0)\n        {\n            if(n%k==0)\n            {\n                n/=k;\n                count[i]++;\n            }\n            else\n            {\n                n--;\n                count[i]++;\n            }\n        }\n    }\n    for(i=0; i<query; i++)\n    {\n        printf(\"%d\\n\", count[i]);\n    }\n    \n    free(count);\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    int i, query;\n    long long int n, k;\n    long long int *count;\n    \n    scanf(\"%d\", &query);\n    count=(long long int *)malloc(sizeof(long long int)*query);\n    \n    for(i=0; i<query; i++)\n    {\n        scanf(\"%lld %lld\", &n, &k);\n        \n        count[i]=0;\n        \n        while(n>0)\n        {\n            if(n%k==0)\n            {\n                count[i]++;\n                n/=k;\n            }\n            else\n            {\n                count[i]+=(n%k);\n                n-=(n%k);\n            }\n        }\n    }\n    for(i=0; i<query; i++)\n    {\n        printf(\"%lld\\n\", count[i]);\n    }\n    \n    free(count);\n    \n    return 0;\n}\n"}
{"similarity_score": 0.9958333333333333, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "af59bd24fc4f66477fb7ad54d37634f5", "bug_code_uid": "691f78ef725e1ec93d6e3f8ecdbcca8a", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "a668aa083b427a5134aeb7515878ff9d", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        int a,b;\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        int x = (abs(a - b) + 9) / 10;\n        printf(\"%d\",x);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        int a,b;\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        int x = (abs(a - b) + 9) / 10;\n        printf(\"%d\\n\",x);\n    }\n}\n"}
{"similarity_score": 0.8145251396648044, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "a209c6759015942aaa7b9cefa364f85d", "bug_code_uid": "88e462c401c817c06c2e9ca01617af82", "src_uid": "0048623eeb27c6f7c6900d8b6e620f19", "apr_id": "0d12b7f8af4b315f1fe65dbea247bf4d", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n  int t;\n  scanf(\"%i\",&t);\n  while(t--)\n  {\n    int n;\n    scanf(\"%i\",&n);\n    int w[n];\n    int maxsum=0;\n    for(int i=0;i<n;i++)\n    scanf(\"%i\",&w[i]);\n    for(int i=0;i<n-1;i++)\n    {\n      for(int j=i+1;j<n;j++)\n      {\n        if((w[i]+w[j])>maxsum)\n        maxsum=w[i]+w[j];\n      }\n    }\n    int H[maxsum];\n    for(int i=0;i<maxsum;i++)\n    H[i]=0;\n    for(int i=0;i<n-1;i++)\n    {\n      for(int j=i+1;j<n;j++)\n      {\n        H[w[i]+w[j]-1]++;\n      }\n    }\n    int maxfr=0;\n    for(int i=0;i<maxsum;i++)\n    {\n      if(H[i]>H[maxfr])\n      maxfr=i;\n    }\n\n    int count=0;\n    for(int i=0;i<n-1;i++)\n    {\n      for(int j=i+1;j<n;j++)\n      {\n        if((w[i]+w[j])==maxfr+1)\n        {\n          count++;\n          w[i]=-n-1;\n          w[j]=-n-1;\n        }\n      }\n    }\n    printf(\"%i\\n\",count);\n  }\n}\n", "fixed": "#include<stdio.h>\nvoid main()\n{\n  int t;\n  scanf(\"%i\",&t);\n  while(t--)\n  {\n    int n;\n    scanf(\"%i\",&n);\n    int w[n];\n    int maxsum=0;\n    for(int i=0;i<n;i++)\n    scanf(\"%i\",&w[i]);\n    for(int i=0;i<n-1;i++)\n    {\n      for(int j=i+1;j<n;j++)\n      {\n        if((w[i]+w[j])>maxsum)\n        maxsum=w[i]+w[j];\n      }\n    }\n    int H[maxsum];\n    for(int i=0;i<maxsum;i++)\n    H[i]=0;\n    for(int i=0;i<n-1;i++)\n    {\n      for(int j=i+1;j<n;j++)\n      {\n        H[w[i]+w[j]-1]++;\n      }\n    }\n  int m[n];\n  for(int i=0;i<n;i++)\n  m[i]=w[i];\n    int count=0,maxcount=0;\nfor(int k=0;k<maxsum;k++)\n{\ncount=0;\nif(H[k]!=0){\n    for(int i=0;i<n-1;i++)\n    {\n      for(int j=i+1;j<n;j++)\n      {\n        if((w[i]+w[j])==k+1)\n        {\n          count++;\n          w[i]=-n-1;\n          w[j]=-n-1;\n        }\n      }\n    }\n  }\n    if(count>maxcount)\n    maxcount=count;\n    for(int i=0;i<n;i++)\n    w[i]=m[i];\n  }\n    printf(\"%i\\n\",maxcount);\n  }\n}\n"}
{"similarity_score": 0.898828541001065, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2320b1667025eb1a9996eef6c31d68bc", "bug_code_uid": "3ad9db64a8204f8ec3a45263f25cf2fe", "src_uid": "8237ac3f3c2e79f5f70be1595630207e", "apr_id": "b5d8b40748fc091d0b661b696e1f06e3", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint a=0,b=0,c,d,x,i;\nchar ar[100000];\nscanf(\"%s\",&ar);\nx=strlen(ar);\nif(x%2==0)\n{\nfor(i=0;i<x;i++)\n{\nif(ar[i]=='R')\na++;\nelse if(ar[i]=='U')\nb++;\nelse if(ar[i]=='L')\na--;\nelse if(ar[i]=='D')\nb--;\n\n}\nif(a<0)a=-a;\nif(b<0)b=-b;\nif(a==0)\n{\nc=b/2;\nd=0;\n}\nelse if(b==0)\n{\nc=a/2;\nd=0;}\n\nelse if(a>b)\n{\nc=a-b;\nd=c/2;\n}\nelse if(a==b)\n{\nc=a;\nd=0;\n}\nelse if(a>b)\n{\nc=b-a;\nd=c/2;\n}\n\nprintf(\"%d\",c+d);\n}\n\n\n\n\nelse\nprintf(\"-1\");\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nint a=0,b=0,c,d,x,i;\nchar ar[100000];\nscanf(\"%s\",&ar);\nx=strlen(ar);\nif(x%2==0)\n{\nfor(i=0;i<x;i++)\n{\nif(ar[i]=='R')\na++;\nelse if(ar[i]=='U')\nb++;\nelse if(ar[i]=='L')\na--;\nelse if(ar[i]=='D')\nb--;\n\n}\n\nif(a<0)\na=-a;\nif(b<0)\nb=-b;\nif(a==0)\n{\nc=b/2;\nd=0;\n}\nelse if(b==0)\n{\nc=a/2;\nd=0;}\n\nelse if(a>b)\n{\nc=b;\nd=(a-b)/2;\n}\nelse if(a==b)\n{\nc=a;\nd=0;\n}\nelse if(a<b)\n{\nc=a;\nd=(b-a)/2;\n}\n\nprintf(\"%d\",c+d);\n}\n\n\n\n\nelse\nprintf(\"-1\");\n}\n"}
{"similarity_score": 0.9459041731066461, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "d9a2028561898aa51a68f0f1a96bd25e", "bug_code_uid": "2756eabaaae789bc6e23b0d84c14e55d", "src_uid": "d4ae071cf261ec3d91187a9a7dddcda0", "apr_id": "b634edc0e13e477dce3ec7d9d23131df", "difficulty": 1400, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nlong long int gcd(long long int n, long long int m)\n{\n\t//printf(\"n=%lld, m=%lld\\n\",n,m);\n\tif (m==0) return n;\n\tif (m<0) return 1;\n\twhile(n>=m) n-=m;\n\treturn gcd(m,n);\n}\n\n\n\nint main()\n{\n\tlong long int n,m,q, qn,g;\n\tscanf(\"%lld%lld%lld\", &n,&m,&q);\n\tif (n>m) g = gcd(n,m);\n\telse g = gcd(m,n);\n//\tprintf(\"%lld\\n\", g);\n\tlong long int fn = n/g;\n\tlong long int fm = m/g;\n\n\tfor (qn=0;qn<q;qn++)\n\t{\n\t\tlong long int a,x,b,y,aa,bb;\n\t\tscanf(\"%lld%lld%lld%lld\", &a,&x,&b,&y);\n\t\tif (a==1) aa = x/fn;\n\t\telse aa = x/fm;\n\t\tif (b==1) bb = x/fn;\n\t\telse bb = x/fm;\n\n\t\tif (aa==bb) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nlong long int gcd(long long int n, long long int m)\n{\n\t//printf(\"n=%lld, m=%lld\\n\",n,m);\n\tif (m==0) return n;\n\tif (m<0) return 1;\n\t//while(n>=m) n-=m;\n\treturn gcd(m,n%m);\n}\n\n\n\nint main()\n{\n\tlong long int n,m,q, qn,g;\n\tscanf(\"%lld%lld%lld\", &n,&m,&q);\n\tif (n>m) g = gcd(n,m);\n\telse g = gcd(m,n);\n\t//printf(\"%lld\\n\", g);\n\tlong long int fn = n/g;\n\tlong long int fm = m/g;\n\n\tfor (qn=0;qn<q;qn++)\n\t{\n\t\tlong long int a,x,b,y,aa,bb;\n\t\tscanf(\"%lld%lld%lld%lld\", &a,&x,&b,&y);\n\t\tif (a==1) aa = (x-1)/fn;\n\t\telse aa = (x-1)/fm;\n\t\tif (b==1) bb = (y-1)/fn;\n\t\telse bb = (y-1)/fm;\n\n\t\tif (aa==bb) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.8769017980636238, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1af9e6fd6bc7900885c891101425faa7", "bug_code_uid": "660b4c0083b77c865d55d7ab05f8fa62", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "4aae57a7d1c51ee887aba1d84f6c03eb", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n\nlong long int max=1000000001;\nint n;\n\nvoid test()\n{\n\n    scanf(\"%d%s\", &n , wcz);\n    int w=0;\n    while(w!=n+1 && wcz[w]!='8')\n        w++;\n    if(n-w>=11)\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n}\n\nint main()\n{\n    int t;\n    char wcz[100001];\n\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        test();\n    }\n    return 0 ;\n}", "fixed": "#include<stdio.h>\n#include<conio.h>\n\n\nint n;\n       char wcz[100001];\n\n\nvoid test()\n{\n\n    scanf(\"%d%s\", &n , wcz);\n    int w=0;\n    while(w!=n+1 && wcz[w]!='8')\n        w++;\n    if(n-w>=11)\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n}\n\nint main()\n{\n    int t;\n\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        test();\n    }\n    return 0 ;\n}"}
{"similarity_score": 0.8991060025542784, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7d98512928829971cde8cb66ad201dd2", "bug_code_uid": "8092406e72b90eb689f13a1c73157039", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "ab5ac1eb1233165417c0c4aa496b5b73", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n, count = 1, hr, min, x = -1, y = -1, max = -1;\n\n    scanf(\"%d\", &n);\n\n    while(n--) {\n        scanf(\"%d %d\", &hr, &min);\n\n        if(x == hr && y == min) {\n            count++;\n            if(count > max) max = count;\n        }\n        else {\n            count = 1;\n        }\n        x = hr; y = min;\n    }\n\n    printf(\"%d\\n\", max);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n, count = 1, hr, min, x = -1, y = -1, max = -1;\n\n    scanf(\"%d\", &n);\n\n    while(n--) {\n        scanf(\"%d %d\", &hr, &min);\n\n        if(x == hr && y == min) {\n            count++;\n        }\n        else {\n            count = 1;\n        }\n        x = hr; y = min;\n\n        if(count > max) max = count;\n    }\n\n    printf(\"%d\\n\", max);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9322709163346613, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c7cbc0dbd768dd501fcdbea6ee894072", "bug_code_uid": "4d69746ac45fad47f936bca20ab3a03e", "src_uid": "2a414730d1bc7eef50bdb631ea966366", "apr_id": "86d7ca0e737c40f24b9386b64e7873aa", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nvoid append(char str[], char ch, int pos)\n{\n    char buf[3000];\n    strncpy(buf, str, pos);\n    buf[pos] = ch;\n    strcpy(buf + pos + 1, str+pos);\n    strcpy(str, buf);\n    //puts(str);\n}\nint main()\n{\n    char str1[3000], str2[3000], ch;\n    int i, n, len, pos;\n    scanf(\"%d\", &n);\n    getchar();\n    gets(str1);\n    strcpy(str2, str1+3);\n    while(strlen(str2) != n){\n        len = n - strlen(str2) - 1;\n        ch = str1[len];\n        pos = (int)(strlen(str2))/2.0;\n        append(str2, ch, pos);\n    }\n    puts(str2);\n    return 0;\n}\n\n\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nvoid append(char str[], char ch, int pos)\n{\n    char buf[3000];\n    strncpy(buf, str, pos);\n    buf[pos] = ch;\n    strcpy(buf + pos + 1, str+pos);\n    strcpy(str, buf);\n    free(buf);\n    //puts(str);\n}\nint main()\n{\n    char str1[3000], str2[3000], ch;\n    int n, len, pos, index;\n    scanf(\"%d\", &n);\n    getchar();\n    gets(str1);\n    index = strlen(str1) - 2;\n    strcpy(str2, str1 + index);\n    while(strlen(str2) != n){\n        len = n - strlen(str2) - 1;\n        ch = str1[len];\n        pos = (int)(strlen(str2))/2.0;\n        append(str2, ch, pos);\n    }\n    puts(str2);\n    return 0;\n}\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.8206229860365198, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c9ba80bc5e6cbecd01e4ad96c3ad52c7", "bug_code_uid": "f03f5ee93f37642f2f4a57026ea10ea5", "src_uid": "d08e39db62215d7817113aaa384e3f59", "apr_id": "be362d84fa338892383ff15e4fba25c7", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint floor(int n){\r\n\treturn n/2;\r\n}\r\nint num[1005];\r\nint main(void)\r\n{\r\n\tint t,i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tmemset(num,0,sizeof(num));\r\n\t\tint n,sum;\r\n\t\tscanf(\"%d%d\",&n,&sum);\r\n\t\tint cnt=n;\r\n\t\tnum[sum]=-1,cnt--;\r\n\t\t//printf(\"floor=%d\\n\",floor(n));\r\n\t\tfor(i=1;i<floor(n);i++){\r\n\t\t\tnum[i]=-1;\r\n\t\t\tcnt--;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",cnt);\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tif(num[i]!=-1){\r\n\t\t\t\tprintf(\"%d \",i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint num[1005];\r\nint main(void)\r\n{\r\n\tint t,i,j;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tmemset(num,0,sizeof(num));\r\n\t\tint n,sum;\r\n\t\tscanf(\"%d%d\",&n,&sum);\r\n\t\tint cnt=n;\r\n\t\tnum[sum]=-1,cnt--;\r\n\t\tfor(i=1,j=sum-1 ; i<j ; i++,j--){\r\n\t\t\tif(i+j==sum){\r\n\t\t\t\tnum[i]=-1,cnt--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",cnt);\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tif(num[i]!=-1){\r\n\t\t\t\tprintf(\"%d \",i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9308176100628931, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "b96142f5aa29a28b505d97f64ae7e5cb", "bug_code_uid": "db9fc6af1b634d6bf25a90ceaede276b", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "90b1fc5b9fd3634a5ce79435bd825662", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cmpfunc (const void * a, const void * b)\n{\n\t   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,a[200000],b[200000],i,j,count=0;\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tqsort(a, n, sizeof(int), cmpfunc);\n\tb[0]=a[0];\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]>=b[i-1])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tb[i]=b[i-1]+a[i];\n\t}\n\tprintf(\"%d\\n\", count+1);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint cmpfunc (const void * a, const void * b)\n{\n\t   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,a[200000],b[200000],i,j,count=0,p;\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tqsort(a, n, sizeof(int), cmpfunc);\n\tb[0]=a[0];p=1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]>=b[p-1])\n\t\t{\n\t\t\tcount++;\n\t\t\tb[p]=b[p-1]+a[i];\n\t\t\tp++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", count+1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.12482269503546099, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "42e53bec37a241f69cba2512dfc271aa", "bug_code_uid": "a84d3a828165f9d57168275c41c8c53f", "src_uid": "bcee233ddb1509a14f2bd9fd5ec58798", "apr_id": "f80a1d631d08b2b80487d0794b122ab8", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint ar[100001];\nint ar1[100001];\nint main()\n{\n\tint n,t;\n\tscanf(\"%d %d\",&n,&t);\n\tint i,j;\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&ar[i]);\n\t\tar1[i]=ar[i];}\n\t i=1;j=n+1;\n\tint c=0;\n\twhile(1)\n\t{\n\t\tint k,s=0,f=1,m=1;\n\t\tfor(k=i;k<j;k++)\n\t\t{\n\t\t\ts=s+ar[k];\n\t\t\tif(ar[k]!=ar1[m++])\n\t\t\t\tf=0;\n\t\t}\n\t\tif( f==1&& c!=0)\n\t\t{\tprintf(\"-1\");\n\t\t\texit(0);}\n\t\t\n\t\tif(s== (n*ar[i]))\n\t\t{\tprintf(\"%d\",c);\n\t\t\texit(0);}\n\t\tar[j]=ar[t];\n\t\tj++;\n\t\ti++;\n\t\tc++;\n\t\tt++;\n\t}\n\treturn 0;\n}\t\n\t\t\n", "fixed": "#include<stdio.h>\nint ar[100001];\nint main()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint i;\n\tfor(i=1;i<=n;scanf(\"%d\",&ar[i++]));\n\ti=n;\n\twhile(ar[i--]==ar[n]);\n\ti++;\n\tif(i<k)\n\t\tprintf(\"%d\",i);\n\telse\n\t\tprintf(\"-1\");\nreturn 0;\n}\n"}
{"similarity_score": 0.9557080474111042, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "43a68372fe8ac0d2464322af87ac0997", "bug_code_uid": "d8e55c0ddf4b17152d92514dd24c5060", "src_uid": "f5a17a59659b3902d87f1fd7e89e8f32", "apr_id": "0591b8ecf56c21d15d09993754a81a4f", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define MAXKINGS 500010\n\nint max (int a, int b);\n\nchar dynasty[MAXKINGS][12];\nint M[30][30];\nint main() {\n\tint i, j, k, n, ini, fim, length, maximum;\n\t\n\tscanf (\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf (\"%s\", dynasty[i]);\n\t\n\tfor (i = 0; i < 30; i++)\n\t\tfor (j = 0; j < 30; j++)\n\t\t\tM[i][j] = 0;\n\t\n\tfor (k = 0; k < n; k++) {\n\t\tini = dynasty[k][0] - 'a';\n\t\tlength = strlen(dynasty[k]);\n\t\tfim = dynasty[k][length-1] - 'a';\n\t\tfor (i = 0; i < 30; i++)\n\t\t\tif (M[i][ini] > 0)\n\t\t\t\tM[i][fim] = max(M[i][ini]+length, M[i][fim]);\n\t\tif (M[ini][fim] == 0)\n\t\t\tM[ini][fim] = length;\n\t}\n\t\n\tmaximum = 0;\n\tfor (i = 0; i < 30; i++)\n\t\tif (maximum < M[i][i])\n\t\t\tmaximum = M[i][i];\n\t\n\tprintf (\"%d\\n\", maximum);\n\n\treturn 0;\n}\n\nint max (int a, int b) {\n\tif (a > b)\n\t\treturn a;\n\treturn b;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define MAXKINGS 500010\n\nint max (int a, int b);\n\nchar dynasty[MAXKINGS][12];\nint M[30][30];\nint main() {\n\tint i, j, k, n, ini, fim, length, maximum;\n\t\n\tscanf (\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf (\"%s\", dynasty[i]);\n\t\n\tfor (i = 0; i < 30; i++)\n\t\tfor (j = 0; j < 30; j++)\n\t\t\tM[i][j] = 0;\n\t\n\tfor (k = 0; k < n; k++) {\n\t\tini = dynasty[k][0] - 'a';\n\t\tlength = strlen(dynasty[k]);\n\t\tfim = dynasty[k][length-1] - 'a';\n\t\tfor (i = 0; i < 30; i++)\n\t\t\tif (M[i][ini] > 0)\n\t\t\t\tM[i][fim] = max(M[i][ini]+length, M[i][fim]);\n\t\tM[ini][fim] = max(length, M[ini][fim]);\n\t}\n\t\n\tmaximum = 0;\n\tfor (i = 0; i < 30; i++)\n\t\tif (maximum < M[i][i])\n\t\t\tmaximum = M[i][i];\n\t\n\tprintf (\"%d\\n\", maximum);\n\n\treturn 0;\n}\n\nint max (int a, int b) {\n\tif (a > b)\n\t\treturn a;\n\treturn b;\n}\n"}
{"similarity_score": 0.9941747572815534, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d6a73dda399bde3fa3c81b53be2f0994", "bug_code_uid": "d78e83927d06b280dddf93c3a6d49a30", "src_uid": "aca2346553f9e7b6e944ca2c74bb0b3d", "apr_id": "8fe1d05b781cddcba8f687441a796df5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n \r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int i=0, a, b, c, x;\r\n    while(i<t)\r\n    {\r\n        x=0;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        while(x==0)\r\n        {\r\n            if(b<c)\r\n                x=abs(b-c)+c;\r\n            else\r\n                x=b;\r\n        }\r\n        if(a<x)\r\n            printf(\"1\");\r\n        else if(a>x)\r\n            printf(\"2\");\r\n        else\r\n            printf(\"3\");\r\n        i++;\r\n        \r\n    }\r\n \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n \r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int i=0, a, b, c, x;\r\n    while(i<t)\r\n    {\r\n        x=0;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        while(x==0)\r\n        {\r\n            if(b<c)\r\n                x=abs(b-c)+c;\r\n            else\r\n                x=b;\r\n        }\r\n        if(a<x)\r\n            printf(\"\\n1\");\r\n        else if(a>x)\r\n            printf(\"\\n2\");\r\n        else\r\n            printf(\"\\n3\");\r\n        i++;\r\n        \r\n    }\r\n \r\n    return 0;\r\n}"}
{"similarity_score": 0.9859747545582047, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5addc4ef1ca9e598dedb24bab8cbb5d2", "bug_code_uid": "800a4f7fd5d17ca210667659b74cf6fc", "src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "apr_id": "ef76540e90f48b98003a9e0964c49c49", "difficulty": 1200, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint Xu,Yu;\ndouble distance(int x);\n\nint main(){\n    int n,Sn;\n    int Vb,Vs;\n    double Tt,Tb = 0,Ts = 0;\n    scanf(\"%d%d%d\",&n,&Vb,&Vs);\n    int stop[n];\n    for (int i = 0; i < n; i++){\n        scanf(\"%d\",&stop[i]);\n    }\n    scanf(\"%d%d\",&Xu,&Yu);\n    for (int i = 1; i < n; i++)\n    {\n        Tb += (stop[i] - stop[i-1]) / (double)Vb;\n        Ts =  distance(stop[i]) / (double)Vs;\n        if(i =! 1 || Tt > (Tb + Ts)){\n            Tt = Tb + Ts;\n            Sn = i;\n        }\n        else if(Tt == Tb + Ts) Sn = distance(stop[Sn]) > distance(stop[i]) ? i : Sn;\n\n    }\n    printf(\"%d\",Sn+1);\n\n\n}\n\ndouble distance(int x){\n    return sqrt(pow(x - Xu,2) + pow(Yu,2));\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint Xu,Yu;\ndouble distance(int x);\n\nint main(){\n    int n,Sn;\n    int Vb,Vs;\n    double Tt,Tb = 0,Ts = 0;\n    scanf(\"%d%d%d\",&n,&Vb,&Vs);\n    int stop[n];\n    for (int i = 0; i < n; i++){\n        scanf(\"%d\",&stop[i]);\n    }\n    scanf(\"%d%d\",&Xu,&Yu);\n    for (int i = 1; i < n; i++)\n    {\n        Tb += (stop[i] - stop[i-1]) / (double)Vb;\n        Ts =  distance(stop[i]) / (double)Vs;\n        if(i == 1 || Tt > (Tb + Ts)){\n            Tt = Tb + Ts;\n            Sn = i;\n        }\n        else if(Tt == Tb + Ts) Sn = distance(stop[Sn]) > distance(stop[i]) ? i : Sn;\n        \n    }\n    printf(\"%d\",Sn+1);\n    \n    \n}\n\ndouble distance(int x){\n    return sqrt(pow(x - Xu,2) + pow(Yu,2));\n}\n"}
{"similarity_score": 0.9933993399339934, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "504be886eee5af5466e483efd91897fb", "bug_code_uid": "1ea07c1c42eb5392048cee61994f80a8", "src_uid": "bb7bace930d5c5f231bfc2061576ec45", "apr_id": "68ec62370ad88d3906ad54ebeb17984c", "difficulty": 1100, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,d,x,m,l,max,sum2,min,f,o,sum1,sum=0,a[100000]={0},b[100000]={0},u;\nchar k[10000];\nscanf(\"%lld\",&n);\nif(n==1){\n    printf(\"No\");\n    return 0;\n}\nprintf(\"Yes\");\n   \n   printf(\"\\n%lld \",n/2);\n    for(i=2;i<=n;i+=2){\n        printf(\"%lld \",i);\n    }\n   printf(\"\\n%lld \",(n%2)?n/2+1:n/2);\n  for(i=1;i<=n;i+=2){\n        printf(\"%lld \",i);\n    }\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,d,x,m,l,max,sum2,min,f,o,sum1,sum=0,a[100000]={0},b[100000]={0},u;\nchar k[10000];\nscanf(\"%lld\",&n);\nif(n==1 || n==2){\n    printf(\"No\");\n    return 0;\n}\nprintf(\"Yes\");\n   \n   printf(\"\\n%lld \",n/2);\n    for(i=2;i<=n;i+=2){\n        printf(\"%lld \",i);\n    }\n   printf(\"\\n%lld \",(n%2)?n/2+1:n/2);\n  for(i=1;i<=n;i+=2){\n        printf(\"%lld \",i);\n    }\n\nreturn 0;\n}\n"}
{"similarity_score": 0.936046511627907, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0c33dc478a5ff8d8ce2cd3bd60b8cdd4", "bug_code_uid": "75f2612aa99302631808dacf7300bb32", "src_uid": "ee295fd90ee9283709447481f172c73c", "apr_id": "9a817f1ec40821cc011c72b7aee5ddda", "difficulty": 1100, "tags": ["data structures", "brute force", "greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define F0R(i, a) for(int i=0; i<(a); ++i)\n\nconst int mxN = 2e5 + 5;\n\nint main() {\n\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\n\tint t; scanf(\"%d\", &t);\n\twhile(t--) {\n\t\tchar s[mxN]; scanf(\"%s\", s);\n\t\tint n = strlen(s), l = 0;\n\t\tF0R(i, n) {\n\t\t\tif(l > 0 && s[i] == 'B') l--;\n\t\t\telse l++;\n\t\t}\n\t\tprintf(\"%d\\n\", l);\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#define F0R(i, a) for(int i=0; i<(a); ++i)\n\nconst int mxN = 2e5 + 5;\n\nint main() {\n\n\tint t; scanf(\"%d\", &t);\n\twhile(t--) {\n\t\tchar s[mxN]; scanf(\"%s\", s);\n\t\tint n = strlen(s), l = 0;\n\t\tF0R(i, n) {\n\t\t\tif(l > 0 && s[i] == 'B') l--;\n\t\t\telse l++;\n\t\t}\n\t\tprintf(\"%d\\n\", l);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.7942332896461337, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c1db38426b18d6742b6e4a61abade569", "bug_code_uid": "8ecf224da43cec5bd136d930d0f9662d", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "49fd8d988d1f8635525a817d3172efc8", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main(void)\n{\n\tint t, n, ans;\n\tscanf(\"%d\", &t);\n\n\twhile (t--) {\n\t\tscanf(\"%d\", &n);\n\n\t\tif (!(n % 7)) {\n\t\t\tprintf(\"%d\\n\", n);\n\t\t} else {\n\t\t\tif (n % 10 > 3) {\n\t\t\t\tprintf(\"%d\\n\", (int) floor(n / 7.0) * 7);\n\t\t\t} else {\n\t\t\t\tprintf(\"%d\\n\", (int) ceil(n / 7.0) * 7);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(void)\n{\n\tint t, n;\n\tscanf(\"%d\", &t);\n\n\twhile (t--) {\n\t\tscanf(\"%d\", &n);\n\n\t\tif (!(n % 7)) {\n\t\t\tprintf(\"%d\\n\", n);\n\t\t} else {\n\t\t\tif (n % 10 > 3) {\n\t\t\t\tif ((int) floor(n / 7.0) * 7 / 10 < n / 10) {\n\t\t\t\t\tprintf(\"%d\\n\", (int) ceil(n / 7.0) * 7);\n\t\t\t\t} else {\n\t\t\t\t\tprintf(\"%d\\n\", (int) floor(n / 7.0) * 7);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprintf(\"%d\\n\", (int) ceil(n / 7.0) * 7);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9985795454545454, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ad1523d8b4f41e1a57f209c487217523", "bug_code_uid": "8a062cac5c31d4c5bd07654f34582b43", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "6052e539b0fa3e1c921d08076bb4b923", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n  long long int t,k,i,n,dist=0;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       scanf(\"%lld%lld\",&n,&k);\n       char str[n];\n       for(i=0;i<n;i++)\n        str[i]='a';\n       if(k!=1)\n       {\n          for(i=1;i<=n;i++)\n         {\n            if(k<=(i*(i+1))/2)\n            {\n               dist=k-((i*(i-1))/2);\n               break;\n            }\n         }\n       str[n-i-1]='b';\n       str[n-dist]='b';\n       for(i=0;i<n;i++)\n        printf(\"%c\",str[i]);\n        printf(\"\\n\");\n      }\n      else{\n        str[n-1]='b';\n        str[n-2]='b';\n         for(i=0;i<n;i++)\n        printf(\"%c\",str[i]);\n        printf(\"\\n\");\n      }\n\n   }\n   return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n  long long int t,k,i,n,dist=0;\n   scanf(\"%lld\",&t);\n   while(t--)\n   {\n       scanf(\"%lld%lld\",&n,&k);\n       char str[n];\n       for(i=0;i<n;i++)\n        str[i]='a';\n       if(k!=1)\n       {\n          for(i=1;i<=n;i++)\n         {\n            if(k<=(i*(i+1))/2)\n            {\n               dist=k-((i*(i-1))/2);\n               break;\n            }\n         }\n       str[n-i-1]='b';\n       str[n-dist]='b';\n       for(i=0;i<n;i++)\n        printf(\"%c\",str[i]);\n        printf(\"\\n\");\n      }\n      else{\n        str[n-1]='b';\n        str[n-2]='b';\n         for(i=0;i<n;i++)\n        printf(\"%c\",str[i]);\n        printf(\"\\n\");\n      }\n\n   }\n   return 0;\n}\n"}
{"similarity_score": 0.9949003245248029, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2c1e06991db09c4f925c1fb8c62733e6", "bug_code_uid": "3046fa8c4a3bd375f74914163fe75093", "src_uid": "c764b9f87cb5e5872eb157c3d2b7f3c5", "apr_id": "f220807d58d84de8f0a2ef2cf84f6d1a", "difficulty": 1200, "tags": ["dp", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint c[100001]={0},p[100001], b[100001];\nint n;\nint cmp(const void *a,const void *b)\n{\n\treturn *(int *)a-*(int *)b;\n}\nint lowbit(int x)\n{\n\treturn x&(-x);   \n}\nvoid update(int i,int x)\n{\n\twhile(i<=n)\n\t{\n\t\tc[i]+=x;\n\t\ti+=lowbit(i);\n\t}\n}\nvoid update2(int i,int x)\n{\n\twhile(i<=n)\n\t{\n\t\tp[i]+=x;\n\t\ti+=lowbit(i);\n\t}\n}\n__int64 sum(int x)\n{\n    __int64 s=0;\n    while(x>0)\n     {\n         s+=c[x];\n         x-=lowbit(x);\n     }\n    return s;\n}\n__int64 sum2(int x)\n{\n    __int64 s=0;\n    while(x>0)\n     {\n         s+=p[x];\n         x-=lowbit(x);\n     }\n    return s;\n}\nvoid main()\n{\n\tint i,x,a,t,s1,s2;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tmemset(c,0,sizeof(c));\n\t\tmemset(p,0,sizeof(p));\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a);\n\t\t\tb[i]=a;\n\t\t\tupdate(i,a);\n\t\t}\n\t\tqsort(b,n+1,sizeof(b[1]),cmp);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tupdate2(i,b[i]);\n\t\t}\n\t\tscanf(\"%d\",&t);\n\t\twhile(t--)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&x,&s1,&s2);\n\t\t\tif(x==1)\n\t\t\t\tprintf(\"%I64d\\n\",sum(s2)-sum(s1-1));\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%I64d\\n\",sum2(s2)-sum2(s1-1));\n\t\t\t}\n\t\t}\n\t\n\t\t}\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n__int64  c[100001]={0},p[100001], b[100001];\nint n;\nint cmp(const void *a,const void *b)\n{\n\treturn *(int *)a-*(int *)b;\n}\nint lowbit(int x)\n{\n\treturn x&(-x);   \n}\nvoid update(int i,int x)\n{\n\twhile(i<=n)\n\t{\n\t\tc[i]+=x;\n\t\ti+=lowbit(i);\n\t}\n}\nvoid update2(int i,int x)\n{\n\twhile(i<=n)\n\t{\n\t\tp[i]+=x;\n\t\ti+=lowbit(i);\n\t}\n}\n__int64 sum(int x)\n{\n    __int64 s=0;\n    while(x>0)\n     {\n         s+=c[x];\n         x-=lowbit(x);\n     }\n    return s;\n}\n__int64 sum2(int x)\n{\n    __int64 s=0;\n    while(x>0)\n     {\n         s+=p[x];\n         x-=lowbit(x);\n     }\n    return s;\n}\nvoid main()\n{\n\tint i,x,a,t,s1,s2;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tmemset(c,0,sizeof(c));\n\t\tmemset(p,0,sizeof(p));\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a);\n\t\t\tb[i]=a;\n\t\t\tupdate(i,a);\n\t\t}\n\t\tqsort(b,n+1,sizeof(b[1]),cmp);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tupdate2(i,b[i]);\n\t\t}\n\t\tscanf(\"%d\",&t);\n\t\twhile(t--)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&x,&s1,&s2);\n\t\t\tif(x==1)\n\t\t\t\tprintf(\"%I64d\\n\",sum(s2)-sum(s1-1));\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%I64d\\n\",sum2(s2)-sum2(s1-1));\n\t\t\t}\n\t\t}\n\t\n\t\t}\n\n}"}
{"similarity_score": 0.49191685912240185, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "92616fad44de6dbb14289852ec30dafc", "bug_code_uid": "593f901d7b09f645d4b4eb001eed6a21", "src_uid": "690c28ef1275035895b9154ff0e17f4c", "apr_id": "eced4099a4bf9ef1c7ffcdd8248d535e", "difficulty": 1700, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "math", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main(){\r\n\tint n=0;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int n1=0;n1<n;n1++){\r\n\t\r\n\tint m=0;\r\n\tscanf(\"\\n%d\",&m);\r\n\tlong long*t=malloc(1000);\r\n\tlong long*h=malloc(1000);\r\n\tfor(int m1=0;m1<m;m1++)scanf(\"%lld\",t+m1);\r\n\tfor(int m1=0;m1<m;m1++)scanf(\"%lld\",h+m1);\r\n\tlong long d=0;long long mn=0;long long t1=0;\r\n\tfor(int m1=0;m1<m;m1++){\r\n\t\tif(t[m1]-t1>=h[m1]){mn=mn+h[m1]*(h[m1]+1)/2;d=h[m1];t1=t[m1];}\r\n\t\telse{mn=mn+d*(t[m1]-t1)+(t[m1]-t1)*(t[m1]-t1+1)/2;d=d+t[m1]-t1;t1=t[m1];}\r\n\t\t\r\n\t}\r\n\tprintf(\"%lld\",mn);\r\n\tfree(t);free(h);\r\n\t\r\n\tif(n1!=n-1)printf(\"\\n\");\r\n}\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nvoid sort(int*a,int a1,int a2){\r\n\tif(a1>=a2)return;\r\n\tint l=a1;int h=a2;\r\n \tint b=a[a1];\r\n\twhile(l<h){\r\n\t\twhile(l<h){\r\n\t\t\tif(a[h]<b)break;\r\n\t\t\th--;\r\n\t\t\t}\r\n\t\ta[l]=a[h];\r\n\t\twhile(l<h){\r\n\t\t\tif(a[l]>b)break;\r\n\t\t\tl++;\r\n\t\t}\r\n\t\ta[h]=a[l];\r\n\r\n\t}\r\n\ta[l]=b;\r\n\tsort(a,a1,l-1);\r\n\tsort(a,l+1,a2);\r\n}\r\nint main(){\r\n\tint n=0;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int n1=0;n1<n;n1++){\r\n\t\r\n\tint m=0;\r\n\tscanf(\"\\n%d\",&m);\r\n\tlong long*t=malloc(1000);\r\n\tlong long*t1=malloc(1000);\r\n\tint*t2=malloc(1000);\r\n\tlong long*h=malloc(1000);\r\n\tfor(int m1=0;m1<m;m1++)scanf(\"%lld\",t+m1);\r\n\tfor(int m1=0;m1<m;m1++)scanf(\"%lld\",h+m1);\r\n\tlong long mn=0;\r\n\t\r\n\tfor(int m1=0;m1<m;m1++){\r\n\t\tt1[m1]=t[m1]-h[m1]+1;\r\n\t\tt2[2*m1]=t1[m1];t2[2*m1+1]=t[m1];\r\n\t}\r\n\tsort(t2,0,2*m-1);\r\n\tlong long d1=t2[0];\r\n\tfor(int m1=0;m1<2*m-1;m1++){\r\n\t\tif(t2[m1]==t2[m1+1])continue;\r\n\t\tint z=0;\r\n\t\tfor(int m2=0;m2<m;m2++){\r\n\t\t\tif(t2[m1]>=t1[m2]&&t2[m1+1]<=t[m2])z=1;\r\n\t\t\t\r\n\t\t}\r\n\t\tif(z==0){mn=mn+(t2[m1]-d1+1)*(t2[m1]-d1+2)/2;d1=t2[m1+1];}\r\n\t}\r\n\tmn=mn+(t2[2*m-1]-d1+1)*(t2[2*m-1]-d1+2)/2;\r\n\tprintf(\"%lld\",mn);\r\n\tfree(t);free(h);free(t1);free(t2);\r\n\t\r\n\tif(n1!=n-1)printf(\"\\n\");\r\n}\r\n}"}
{"similarity_score": 0.9888806523350631, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "550d0fad7a05896030a34f00cbe559fc", "bug_code_uid": "f666185a5f4d477ca797a0b430b2588b", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "e0eb4599666dbab57fffc33236c07dbe", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n\nint main()\n{\n     int count[101]={0};\n\n     char s[101];\n     int n;\n     int k;\n     scanf(\"%d %d\",&n,&k);\n     int i=0;\n     for(i=0;i<n;i++)\n     {\n\t  scanf(\"%s\",s);\n\t  count[strlen(s)-1]++;\n     }\n\n     char pass[101];\n     scanf(\"%s\",pass);\n     int len=strlen(pass)-1;\n\n     int j=0;int min=0;\n     int max=0;\n     int time=0;\n\n     for(i=0;i<100;i++)\n     {\n\t  if(i==len)\n\t  {\n\t       min=time+(time/k)*5+1;\n\t       if((time+count[i])%k!=0)\n\t       max=time+((time+count[i])/k)*5+count[i];\n\t       else\n\t\t    max=time+((time)/k)*5+count[i];\n\t  }\n\t  time+=count[i];\n     }\n\n     printf(\"%d %d\",min,max);\n\n     return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\n\nint main()\n{\n     int count[101]={0};\n\n     char s[101];\n     int n;\n     int k;\n     scanf(\"%d %d\",&n,&k);\n     int i=0;\n     for(i=0;i<n;i++)\n     {\n\t  scanf(\"%s\",s);\n\t  count[strlen(s)-1]++;\n     }\n\n     char pass[101];\n     scanf(\"%s\",pass);\n     int len=strlen(pass)-1;\n\n     int j=0;int min=0;\n     int max=0;\n     int time=0;\n\n     for(i=0;i<100;i++)\n     {\n\t  if(i==len)\n\t  {\n\t       min=time+(time/k)*5+1;\n\t       if((time+count[i])%k!=0)\n\t       max=time+((time+count[i])/k)*5+count[i];\n\t       else\n\t\t    max=time+((time+count[i]-1)/k)*5+count[i];\n\t  }\n\t  time+=count[i];\n\t  \n     }\n\n     printf(\"%d %d\",min,max);\n\n     return 0;\n}\n"}
{"similarity_score": 0.9956803455723542, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7eca2dc66cc0913fc34f3eac21c7a1ec", "bug_code_uid": "4ff37c347ae4bb8136b1f7b338bb08f9", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "f2c15fe52bc0b8eb61251df8352b28d4", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define length(x) sizeof(x)/sizeof(x[0])\n\nint main (void) {\n    int n,m,i,q,y;\n    scanf(\"%d %d\",&n,&m);\n    char S[n][10],T[m][10];\n    for(i=0;i<n;i++)\n        scanf(\"%s \",S[i]);\n    for(i=0;i<m;i++)\n        scanf(\"%s \",T[i]);\n    // up to define the name str\n    scanf(\"%d\",&q);\n    for(i=0;i<q;i++) {\n        scanf(\"%d\",&y);\n        y--;\n        printf(\"%s%s\\n\",S[y%n],T[y%m]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define length(x) sizeof(x)/sizeof(x[0])\n\nint main (void) {\n    int n,m,i,q,y;\n    scanf(\"%d %d\",&n,&m);\n    char S[n][11],T[m][11];\n    for(i=0;i<n;i++)\n        scanf(\"%s \",S[i]);\n    for(i=0;i<m;i++)\n        scanf(\"%s \",T[i]);\n    // up to define the name str\n    scanf(\"%d\",&q);\n    for(i=0;i<q;i++) {\n        scanf(\"%d\",&y);\n        y--;\n        printf(\"%s%s\\n\",S[y%n],T[y%m]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.26157407407407407, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "89d880762a68fa3e3087b3807e9410a5", "bug_code_uid": "a7ed1e439ea184921af4a0fe49ce6f2f", "src_uid": "90c5058c0c7f55a567f2e036482149f9", "apr_id": "42bba9bfe1b960fc77726de31212c5da", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int n;\r\n   unsigned int k,p;\r\n    scanf(\"%d\",&n);\r\n    int arr[n][3];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d %d %d\",&arr[i][0],&arr[i][1],&arr[i][2]);\r\n       k=mod(arr[i][2]-arr[i][1]);\r\n       p=mod(arr[i][1]-arr[i][0]);\r\n       if(k==(p+1) || p==(k+1))\r\n       {\r\n           if(arr[i][0]!=1 ||arr[i][1]!=1 || arr[i][2]!=1 )\r\n           printf(\"Yes\");\r\n           else\r\n           printf(\"No\");\r\n       }\r\n       else\r\n       printf(\"Yes\");\r\n           \r\n    }\r\n    \r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int n,a,b,c;\r\n   scanf(\"%d\",&n);\r\n   while(n>0)\r\n   {\r\n       scanf(\"%d %d %d\",&a,&b,&c);\r\n       if((2*b-a>0 && (2*b-a)%c==0)||(2*b-c>0 && (2*b-c)%a==0)|| (a+c>0 && (a+c)%(2*b)==0))\r\n       printf(\"yes\\n\");\r\n       else\r\n       printf(\"No\\n\");\r\n       n--;\r\n   }\r\n}"}
{"similarity_score": 0.9467889908256881, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "85edf174fa580e93716cd7977bf9ae18", "bug_code_uid": "b7e552350bd1ed91a2c4b14425e68027", "src_uid": "097e35b5e9c96259c54887158ebff544", "apr_id": "511aa398801d62b7d42112e084f571e6", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint compare (const void * a, const void * b)\n{\n\t  return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,i,j,a,count_fin=0;\n\tscanf(\"%d\",&n);\n\tint index[100005][n];\n\tint count[100005]={0};\n\tint store[n];\n\tint flag[100005]={0};\n\tint diff[100005]={0};\n\tint visited[100005]={0};\n\tint  visited2[100005]={0};\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&store[i]);\n//\t\tprintf(\"%d\\n\",store[i]);\n\t\ta=store[i];\n\t//\tprintf(\"a=%d\\n\",store[i]);\n\t\tindex[a][count[a]++]=i+1;\n\t//\tprintf(\"count[a]=%d\\n\",count[a]);\n\t\tif(count[a]==2)\n\t\t{\n\t\t\tdiff[a]=index[a][1]-index[a][0];\n\t\t}\n\t\telse if(count[a]>2)\n\t\t{\n\t\t\tif(index[a][count[a]-1]-index[a][count[a]-2]!=diff[a])\n\t\t\t{\n\t\t\t\tflag[a]=1;\n\t\t\t}\n\t\t}\n\t}\n\tqsort (store, n, sizeof(int), compare);\n//\tprintf(\"diff_1=%d\\n\",diff[1]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(visited[store[i]]==0 && flag[store[i]]==0)\n\t\t{\n\t\t\tvisited[store[i]]=1;\n\t\t\tcount_fin++;\n\t\t}\n\t}\n//\tprintf(\"%d\\n\",count_fin);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(visited2[store[i]]==0 && flag[store[i]]==0)\n\t\t{\n\t\t\tvisited2[store[i]]=1;\n\t\t\tprintf(\"%d %d\\n\",store[i],diff[store[i]]);\n\t\t}\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint compare (const void * a, const void * b)\n{\n\t  return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,i,j,a,count_fin=0;\n\tscanf(\"%d\",&n);\n\tint index[100005];\n\tint last_index[100005];\n\tint count[100005]={0};\n\tint store[100005];\n\tint flag[100005]={0};\n\tint diff[100005]={0};\n\tint visited[100005]={0};\n\tint visited2[100005]={0};\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&store[i]);\n//\t\tprintf(\"%d\\n\",store[i]);\n\t\ta=store[i];\n\t//\tprintf(\"a=%d\\n\",store[i]);\n\t\tindex[a]=i+1;\n\t\tcount[a]++;\n\t//\tprintf(\"count[a]=%d\\n\",count[a]);\n\t\tif(count[a]==2)\n\t\t{\n\t\t\tdiff[a]=index[a]-last_index[a];\n\t\t}\n\t\telse if(count[a]>2)\n\t\t{\n\t\t\tif(index[a]-last_index[a]!=diff[a])\n\t\t\t{\n\t\t\t\tflag[a]=1;\n\t\t\t}\n\t\t}\n\t\tlast_index[a]=index[a];\n\t}\n\tqsort (store, n, sizeof(int), compare);\n//\tprintf(\"diff_1=%d\\n\",diff[1]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(visited[store[i]]==0 && flag[store[i]]==0)\n\t\t{\n\t\t\tvisited[store[i]]=1;\n\t\t\tcount_fin++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count_fin);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(visited2[store[i]]==0 && flag[store[i]]==0)\n\t\t{\n\t\t\tvisited2[store[i]]=1;\n\t\t\tprintf(\"%d %d\\n\",store[i],diff[store[i]]);\n\t\t}\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9131985731272295, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f905940d82dbf06f20f168765091f36a", "bug_code_uid": "368d2708a0fcd0433501b352755a4813", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "ad71665cda94707b015aacf475069571", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        \r\n        scanf(\"%d\",&n);\r\n        for(int i = 0;i++)\r\n        {\r\n            if(i % 3 == 0 || i % 10 == 3)\r\n            {\r\n                continue;\r\n            }\r\n            \r\n            if(n-- == 0)\r\n            {\r\n                printf(\"%d\\n\",i);\r\n            }\r\n        }\r\n    }\r\n}\r\n    \r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        \r\n        scanf(\"%d\",&n);\r\n       \r\n        for(int i = 0; ;i++)\r\n        {\r\n            if(i % 3 == 0 || i % 10 == 3)\r\n            {\r\n                continue;\r\n            }\r\n            n--;\r\n            if(n == 0)\r\n            {\r\n                printf(\"%d\\n\",i);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n    \r\n"}
{"similarity_score": 0.9090909090909091, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c6c576d90232a359c8e7258c68d28b3d", "bug_code_uid": "6da80a8662f8bbd746e16476ab4bb415", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "71b4eaa7b400a72cf9aab79970f76e08", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,a=0,i;\r\n\t\tscanf(\"%d\",&n);\r\n\t\t\r\n\t\tfor(i=0;i<=9;i++){\r\n\t\t\tif(((n/10)*10 + i)%7==0){\r\n\t\t\tprintf(\"%d\\n\",(n/10)*10 + i);\r\n\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,a=0,i;\r\n\t\tscanf(\"%d\",&n);\r\n\t\t\r\n\t\tfor(i=1;i<=9;i++){\r\n\t\t\tif(((n/10)*10 + i)%7==0){\r\n\t\t\t\tif(n%7==0)\r\n\t\t\t\tprintf(\"%d\\n\",n);\r\n\t\t\t\telse\r\n\t\t\tprintf(\"%d\\n\",(n/10)*10 + i);\r\n\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9565217391304348, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "8a9f6151d25b60c439ccfffeb5981ff8", "bug_code_uid": "58e3d6401d9b7e7ef0801891d6e0218b", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "d008affa0ddbbd7d2b1838567384afbd", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include<math.h>\r\n//c\r\nint main()\r\n{\r\n    int t,n,i,a[100],j=0,m=0;\r\n\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {   \r\n        j=0;\r\n        \r\n        m=0;\r\n        \r\n        scanf(\"%d\",&n);\r\n\r\n        for(i=1;i<=2*n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(i=1;i<=2*n;i++)\r\n        {\r\n            if(a[i]%2==0) j++;\r\n            else m++;\r\n        }\r\n        if(m==j) printf(\"Yes\\n\");\r\n        else printf(\"No\\n\");\r\n\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include<math.h>\r\n#define MAXN 500\r\n//c\r\n\r\nint a[MAXN];\r\n\r\nint main()\r\n{\r\n    int t,n,i,j=0,m=0;\r\n\r\n    scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {   \r\n        j=0;\r\n        \r\n        m=0;\r\n        \r\n        scanf(\"%d\",&n);\r\n\r\n        for(i=1;i<=2*n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(i=1;i<=2*n;i++)\r\n        {\r\n            if(a[i]%2==0) j++;\r\n            else m++;\r\n        }\r\n        if(m==j) printf(\"Yes\\n\");\r\n        else printf(\"No\\n\");\r\n\r\n    }\r\n}\r\n\r\n"}
{"similarity_score": 0.9730185497470489, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fcbdd8570990d1e56d2d916c20837f0b", "bug_code_uid": "5fce106dd61ef380ab254d44fc0f6054", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "4c6c5ba32d074954b2fd7013bfe2a07a", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long int n,sum=0;\n    char s[50];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        gets(s);\n        if(strcmp(s,\"Tetrahedron\")==0)\n        {\n            sum=sum+4;\n        }\n        else if(strcmp(s,\"Cube\")==0)\n        {\n            sum=sum+6;\n        }\n        else if(strcmp(s,\"Octahedron\")==0)\n        {\n            sum=sum+8;\n        }\n        else if(strcmp(s,\"Dodecahedron\")==0)\n        {\n            sum=sum+12;\n        }\n        else if(strcmp(s,\"Icosahedron\")==0)\n        {\n            sum=sum+20;\n        }\n    }\n    printf(\"%lld\",sum);\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long int n,sum=0;\n    char s[50];\n    scanf(\"%d\\n\",&n);\n    while(n--)\n    {\n        gets(s);\n        if(strcmp(s,\"Tetrahedron\")==0)\n        {\n            sum=sum+4;\n        }\n        else if(strcmp(s,\"Cube\")==0)\n        {\n            sum=sum+6;\n        }\n        else if(strcmp(s,\"Octahedron\")==0)\n        {\n            sum=sum+8;\n        }\n        else if(strcmp(s,\"Dodecahedron\")==0)\n        {\n            sum=sum+12;\n        }\n        else \n        {\n            sum=sum+20;\n        }\n    }\n    printf(\"%lld\",sum);\n}"}
{"similarity_score": 0.9888268156424581, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "02e2eab54abaed55905eb1bea0421e39", "bug_code_uid": "f8fede499583a702528f1e986bb11a1b", "src_uid": "e0ea798c8ce0d8a4340e0fa3399bcc3b", "apr_id": "dabb105b80a0f78774331ef8b1609a82", "difficulty": 1600, "tags": ["data structures", "two pointers", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[1000005];\nint vis[1000005];\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",a+i);\n    }\n    int ar=0,al=0,l=0,now=0;\n    for(int i=0;i<n;i++)\n    {\n        vis[a[i]]++;\n        if(vis[a[i]]==1) now++;\n        while(now>k)\n        {\n            vis[a[l]]--;\n            if(vis[a[l]]==0)\n                now--;\n            l++;\n        }\n        if(i-l+1>al-ar+1)\n        {\n            al=i+1;\n            ar=l+1;\n        }\n\n    }\n    printf(\"%d %d\\n\",ar,al);\n}\n", "fixed": "#include<stdio.h>\nint a[1000005];\nint vis[1000005];\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",a+i);\n    }\n    int ar=1,al=1,l=0,now=0;\n    for(int i=0;i<n;i++)\n    {\n        vis[a[i]]++;\n        if(vis[a[i]]==1) now++;\n        while(now>k)\n        {\n            vis[a[l]]--;\n            if(vis[a[l]]==0)\n                now--;\n            l++;\n        }\n        if(i-l+1>al-ar+1)\n        {\n            al=i+1;\n            ar=l+1;\n        }\n\n    }\n    printf(\"%d %d\\n\",ar,al);\n}\n"}
{"similarity_score": 0.9981378026070763, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "21a13ce31751eedc1ad98d22b13183fe", "bug_code_uid": "373be023a49fd571297c2a195c826ff9", "src_uid": "e59cddb6c941b1d7556ee9c020701007", "apr_id": "605164cbf296436449fd2e317df2173b", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int,int);\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\t\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tint i;\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\n\t\tint s1=0;int j;\n\t\tint s2=0;int s3=0;\n\t\tfor(j=0;j<n;j++){\n\t\t    if(a[j]%3==0)\n\t        s3++;   \n\t        else if(a[j]%3==1)\n\t        s1++;\n\t        else \n\t        s2++;\n\t\t}\n\t\ts3+=min(s1,s2)+((s1-min(s1,s2))/3)+((s2-min(s1,s2))/3);\n\t    printf(\"%d\\n\",s3);\n\t    \n\t}\n\treturn 0;\n}\nint min(int x,int y){\n    if(x>y)\n        return x;\n    else\n        return y;\n}", "fixed": "#include<stdio.h>\nint min(int,int);\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\t\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tint i;\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\n\t\tint s1=0;int j;\n\t\tint s2=0;int s3=0;\n\t\tfor(j=0;j<n;j++){\n\t\t    if(a[j]%3==0)\n\t        s3++;   \n\t        else if(a[j]%3==1)\n\t        s1++;\n\t        else \n\t        s2++;\n\t\t}\n\t\ts3+=min(s1,s2)+((s1-min(s1,s2))/3)+((s2-min(s1,s2))/3);\n\t    printf(\"%d\\n\",s3);\n\t    \n\t}\n\treturn 0;\n}\nint min(int x,int y){\n    if(x<y)\n        return x;\n    else\n        return y;\n}"}
{"similarity_score": 0.9386236825790453, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "5d4e230966db3a8399c46b965384ee17", "bug_code_uid": "ba90b40ffb4a62edf5da0800f5b635e4", "src_uid": "524273686586cdeb7827ffc1ad59d85a", "apr_id": "c15481f2730ff966136fbdd164c8257d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid main()\n{\n    char *C;\n    int n = 0, m = 0, i = 0, j = 0, count = 0;\n    int v = 0, w = 0;\n    char findOnce = 1;\n\n    scanf(\"%d %d\", &n, &m);\n\n    C = (char *)malloc(n * m * sizeof(char));\n\n    for(i=0;i<n;i++)\n        for(j=0;j<m;j++)\n        {\n          scanf(\" %c\",(C + (i * m) + j));\n        }\n\n    for(i=0;i<n;i++)\n        for(j=0;j<m;j++)\n        {\n          if(*(C + (i * m) + j)=='B')\n          {\n            count++;\n            if(findOnce)\n            {\n                v = i;\n                w = j;\n                findOnce = 0;\n            }\n          }\n          if(count != 0 && *(C + (i * m) + j)=='W')\n            break;\n        }\n/*\n    printf(\"%d %d\\n\", v , w );\n    printf(\"count = %d\\n\",count);\n*/\n    printf(\"%d %d\\n\", v+count/2+1, w+count/2+1);\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    char *C;\n    int n = 0, m = 0, i = 0, j = 0, count = 0;\n    int v = 0, w = 0;\n    char findOnce = 1;\n\n    scanf(\"%d %d\", &n, &m);\n\n    C = (char *)malloc(n * m * sizeof(char));\n\n    for(i=0;i<n;i++)\n        for(j=0;j<m;j++)\n        {\n          scanf(\" %c\",(C + (i * m) + j));\n        }\n\n    for(i=0;i<n;i++)\n        for(j=0;j<m;j++)\n        {\n          if(*(C + (i * m) + j)=='B')\n          {\n            count++;\n            if(findOnce)\n            {\n                v = i;\n                w = j;\n                findOnce = 0;\n            }\n          }\n\n          if(count != 0 && ( (*(C + (i * m) + j)=='W') || (j%m == 0) ) )\n            break;\n        }\n\n    printf(\"%d %d\\n\", v+count/2+1, w+count/2+1);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.261758691206544, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "6ccaacb3ef0fde36f1bd7abacdedfa9f", "bug_code_uid": "94b62aa71894452bd4f8c3d3bb98923d", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "c63da2a28c7bbbaf567751f098e7ddbd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    char c1[6]=\"I hate\";\n    char c2[6]=\"I love\";\n    \n    int n;\n    scanf(\"%d\",&n);\n    if(n>=1 && n<=100)\n    {\n        for(i=1;i<=n;i++)\n        {\n            if(i%2==0)\n            {\n                printf(\"%s\",c1);\n                printf(\" \");\n            }\n            else\n            {\n                printf(\"%s\",c2);\n                printf(\" \");\n            }\n            if(i==n)\n            break;\n            else\n            printf(\"that \");\n        }\n        printf(\"it\");\n    }\n}", "fixed": "#include<stdio.h>\nmain()\n{\n    \n    int n,i;\n    scanf(\"%d\",&n);\n    if(n>=1 && n<=100)\n    {\n        for(i=1;i<=n;i++)\n        {\n            if(i%2!=0)\n            {\n                printf(\"I hate \");\n                \n            }\n            else\n            {\n                printf(\"I love \");\n                \n            }\n            if(i==n)\n            break;\n            else\n            printf(\"that \");\n        }\n        printf(\"it\");\n    }\n}"}
{"similarity_score": 0.9907834101382489, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "320dcd0a767788b23d53d5b8d9c66d7e", "bug_code_uid": "17fd0a2280978ee9a4853a3305fe465e", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "78bb45ff10600119a1ba440804e26965", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    long long int n,k,o,x,j;\n\n    scanf(\"%d\",&t);\n    while(t>0)\n    {\n        scanf(\"%lld %lld\",&n,&k);\n\n        if(n%2==0)\n            o=n+2*k;\n        else\n        {\n            for(j=1;;j++)\n            {x=2*j+1;\n\n            if(n%x==0)\n                break;\n            }\n            n=n+x;\n            o=n+2*(k-1);\n    }\n    printf(\"\\n%lld\",o);\n    t--;\n\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    long long int n,k,o,x,j;\n\n    scanf(\"%d\",&t);\n    while(t>0)\n    {\n        scanf(\"%lld %lld\",&n,&k);\n\n        if(n%2==0)\n            o=n+2*k;\n        else\n        {\n            for(j=1;;j++)\n            {x=2*j+1;\n\n            if(n%x==0)\n                break;\n            }\n            n=n+x;\n            o=n+2*(k-1);\n    }\n    printf(\"%lld\\n\",o);\n    t--;\n\n    }\n}\n"}
{"similarity_score": 0.9987515605493134, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bce2d3ca0f50765c786811f799e0545d", "bug_code_uid": "46c4f9fae726c810084c08171ae57f93", "src_uid": "09c8db43681d7bc72f83287897a62f3c", "apr_id": "2bb3201e411654b5b23d132e75ffa3ec", "difficulty": 1100, "tags": ["brute force", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n   long long  int t;\r\n    scanf(\"%lld\\n\",&t);\r\n    while(t--){\r\n       long long int n,x;\r\n        scanf(\"%lld %lld\\n\",&n,&x);\r\n      long long  int a[n],l=0;\r\n        for(long long int i=0;i<n;i++){\r\n            scanf(\"%lld \",&a[i]);\r\n            l=l+a[i];\r\n        }\r\n        scanf(\"\\n\");\r\n      long long  int k=1,b=0;\r\n         while(1){\r\n         for(long long int i=0;i<n;i++){\r\n             if(a[i]%x==0){\r\n                     a[i]=a[i]/2;\r\n                 l=l+pow(x,k)*a[i];\r\n\r\n             }\r\n             else{\r\n                 b=1;\r\n                 break;\r\n             }\r\n         \r\n         }\r\n                      k++;\r\n\r\n         if(b==1){\r\n             break;\r\n         }\r\n         }\r\n         printf(\"%lld\\n\",l);\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(){\r\n   long long  int t;\r\n    scanf(\"%lld\\n\",&t);\r\n    while(t--){\r\n       long long int n,x;\r\n        scanf(\"%lld %lld\\n\",&n,&x);\r\n      long long  int a[n],l=0;\r\n        for(long long int i=0;i<n;i++){\r\n            scanf(\"%lld \",&a[i]);\r\n            l=l+a[i];\r\n        }\r\n        scanf(\"\\n\");\r\n      long long  int k=1,b=0;\r\n         while(1){\r\n         for(long long int i=0;i<n;i++){\r\n             if(a[i]%x==0){\r\n                     a[i]=a[i]/x;\r\n                 l=l+pow(x,k)*a[i];\r\n\r\n             }\r\n             else{\r\n                 b=1;\r\n                 break;\r\n             }\r\n         \r\n         }\r\n                      k++;\r\n\r\n         if(b==1){\r\n             break;\r\n         }\r\n         }\r\n         printf(\"%lld\\n\",l);\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.38798283261802574, "equal_cnt": 5, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "25523318aa771d67e5f4820248906033", "bug_code_uid": "0491490013a8214bb4068c081b4ecac5", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "bf4d30b4d446524fc82defed5bb8c23f", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nint main() {\n    int n, x;\n    scanf(\"%d %d\", &n, &x);\n    int currentMin = 1;\n    int allMinutes = 0;\n    for(int i = 0; i < n; i++) {\n\n        int l, r;\n        scanf(\"%d %d\", &l, &r);\n\n        while(true) {\n\n            if(currentMin < l)  {\n                if(currentMin + x <=l) {\n\n                    currentMin += x;\n                    continue;\n                } else {\n\n                    allMinutes += (r - currentMin + 1);\n                    currentMin = r + 1;\n                    break;\n\n                }\n            } else if(currentMin == l) {\n\n                allMinutes += (r - l);\n                currentMin = r + 1;\n                break;\n\n            }\n        }\n    }\n\n        printf(\"%d\", allMinutes + 1);\n\n\n        return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nint main() {\n    int n, x;\n    scanf(\"%d %d\", &n, &x);\n    int s = 0;\n    int R = 0;\n    for(int i = 0; i < n; i++) {\n\n        int l, r;\n        scanf(\"%d %d\", &l, &r);\n\n        s += r - l + 1;\n        s += (l - R - 1) % x;\n        R = r;\n\n    }\n\n    printf(\"%d\", s);\n\n        return 0;\n}\n"}
{"similarity_score": 0.5640074211502782, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3d70ad1173c64165028fbf8014bb0cfc", "bug_code_uid": "2071b8df2db98d8ae03aed94ae67d713", "src_uid": "1adb4675dc88208f8a05a2db49bb44cb", "apr_id": "b6e46b2a3dd931329b7965e075477d3d", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, k, v;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (int i = 0; i < (n*2+1); i++) {\n\t\tscanf(\"%d%*c\", &v);\n\t\tif ((i+1)%2==0 && k > 0) {\n\t\t\tv--;\n\t\t\tk--;\n\t\t}\n\t\tprintf(\"%d \", v);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, k, np, cv, pp;\n\tscanf(\"%d %d\", &n, &k);\n\n\tscanf(\"%d%*c\", &pp);\n\tprintf(\"%d \", pp);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d%*c\", &cv);\n\t\tscanf(\"%d%*c\", &np);\n\n\t\tif (k > 0 && cv > (pp+1) && cv > (np+1)) {\n\t\t\tcv--;\n\t\t\tk--;\n\t\t}\n\t\tprintf(\"%d %d \", cv, np);\n\t\tpp = np;\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6104218362282878, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "56b656d1ca243450cf6be860ba284f8d", "bug_code_uid": "b05e768d44bb398204bec2470df0f65b", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "ac738f3ecede854df777fa759a3e3b66", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[10000],b,c,d=0;\n\tscanf(\"%d\",&b);\n\tfor(c=0;c<b;c++)\n\t{\n\t\tscanf(\"%d\",&a[c]);\n\t\t\n\t\t\n\t}\n\tdo\n\t{\n\t\tif(a[c]!=a[c+1])\n\t\td=d+1;\n\t\tc++;\n\t}while(c<b);\n\tprintf(\"%d\",d);\n\t\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[10000000],b,i=0,count=1;\n\tscanf(\"%d\",&b);\n\tfor(i=0;i<b;i++)\n\t{scanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<b-1;i++)\n\t{ if(a[i]!=a[i+1])\n\t  count=count+1;\n\t}\n\tprintf(\"%d\",count);\n}"}
{"similarity_score": 0.9696969696969697, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ed282d881c06fbb3fca3f7e5ec05bed4", "bug_code_uid": "f6c1504d45380b1918028a37b60ba97d", "src_uid": "5194846a503c2087fcd299eaf3c20b2b", "apr_id": "7060b5173fba4d04dd18e3edeac14872", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) \n{\n\tint t,k=0,i;\n\tlong int L,v,l,r,j=2,p;\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tprintf(\"\\n\");\n\t\tscanf(\"%ld%ld%ld%ld\",&L,&v,&l,&r);\n\t\tlong int a=(L-r)/v+(l-1)/v;\n\t\tprintf(\"\\n%d\",a);\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) \n{\n\tint t,i;\n\tlong int L,v,l,r;\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tprintf(\"\\n\");\n\t\tscanf(\"%ld%ld%ld%ld\",&L,&v,&l,&r);\n\t\tlong int a=L/v-r/v+(l-1)/v;\n\t\tprintf(\"\\n%d\",a);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.5970744680851063, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "f2a51f05623da66f4c795ad83381b655", "bug_code_uid": "1ef9242c89d4213e8a3ec0e54c1a50d7", "src_uid": "1cbbf71a8e50b58547d1f74437509319", "apr_id": "7b8035beec321d598a8069428233a672", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#define __USE_MINGW_ANSI_STDIO 0\r\n#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,r,c,k;\r\n        scanf(\"%d %d %d %d\",&n,&k,&r,&c);\r\n        char str[n+4][n+4];\r\n        int i,j;\r\n        for(i=1;i<=n;i++)\r\n            for(j=1;j<=n;j++)\r\n           {\r\n                str[i][j]='.';\r\n                if(i==j)\r\n                    str[i][j]='X';\r\n           }\r\n        str[r][c]='X';\r\n        int p;\r\n        for(i=1;i<=n;i++)\r\n            for(p=i+k;p<=n;p+=k)\r\n            str[i][p]='X';\r\n         for(i=1;i<=n;i++)\r\n            for(p=i-k;p>=1;p-=k)\r\n            str[i][p]='X';\r\n        for(i=1;i<=n;i++)\r\n           {\r\n                for(j=1;j<=n;j++)\r\n        {\r\n            printf(\"%c\",str[i][j]);\r\n        }\r\n        printf(\"\\n\");\r\n           }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#define __USE_MINGW_ANSI_STDIO 0\r\n#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,r,c,k,i,j;\r\n        scanf(\"%d %d %d %d\",&n,&k,&r,&c);\r\n        char str[n+4][n+4];\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            for(j=1;j<=n;j++)\r\n            {\r\n                if ((i+j-r-c)%k==0)\r\n                    str[i][j]='X';\r\n                else\r\n                    str[i][j]='.';\r\n                printf(\"%c\",str[i][j]);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9878787878787879, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ec09da047f1a30222c01ef18b6970d59", "bug_code_uid": "0852f7cd9284aeb797c87fdf17709717", "src_uid": "e744184150bf55a30568060cca69de04", "apr_id": "ba9d3ddd90210d8e75109390ad8d0e30", "difficulty": 800, "tags": ["constructive algorithms", "dsu", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t,i,j,ce=0,cn=0,flag[1000];\r\n\tchar b[50];\r\n\tfor (i=0;i<1000;i++)\r\n\tflag[i]=1;\r\n\tscanf(\"%d\",&t);\r\n\tfor (i=0;i<t;i++)\r\n\t{\r\n\t\tcn=0,ce=0;\r\n\t\tscanf(\"%s\",b);\r\n\t\tif ((strlen(b)>=2))\r\n\t\t{\r\n\t\t\tfor (j=0;j<strlen(b);j++)\r\n\t\t{\r\n\t\t\tif (b[j]=='N')\r\n\t\t\tcn++;\r\n\t\t\tif (b[j]=='E')\r\n\t\t\tce++;\r\n\t\t}\r\n\r\n        if (cn==1)\r\n\t\tflag[i]=0; \r\n\t    }\r\n\r\n\t}\r\n\tfor (i=0;i<t;i++)\r\n\t{\r\n\t\tif (flag[i]==0)\r\n\t\tprintf(\"NO\\n\");\r\n\t\tif (flag[i]==1)\r\n\t\tprintf(\"YES\\n\");\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint t,i,j,ce,cn,flag[1000];\r\n\tchar b[51];\r\n\tfor (i=0;i<1000;i++)\r\n\tflag[i]=1;\r\n\tscanf(\"%d\",&t);\r\n\tfor (i=0;i<t;i++)\r\n\t{\r\n\t\tcn=0,ce=0;\r\n\t\tscanf(\"%s\",b);\r\n\t\tif ((strlen(b)>=2))\r\n\t\t{\r\n\t\t\tfor (j=0;j<strlen(b);j++)\r\n\t\t{\r\n\t\t\tif (b[j]=='N')\r\n\t\t\tcn++;\r\n\t\t\tif (b[j]=='E')\r\n\t\t\tce++;\r\n\t\t}\r\n\r\n        if (cn==1)\r\n\t\tflag[i]=0; \r\n\t    }\r\n\r\n\t}\r\n\tfor (i=0;i<t;i++)\r\n\t{\r\n\t\tif (flag[i]==0)\r\n\t\tprintf(\"NO\\n\");\r\n\t\tif (flag[i]==1)\r\n\t\tprintf(\"YES\\n\");\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9993201903467029, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c99cb1b3218eccdcad903ffe19a7f57c", "bug_code_uid": "9b23aece4a5c7d5da216c1953a2913fd", "src_uid": "4a58039c5171597ecf78837e9db1d71d", "apr_id": "ae5ed1ec955346a4da67bae7512f229a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// PROBLEM RATING: 800\r\n\r\n#include <stdio.h>\r\n\r\nint main(void) {\r\n\tint n, i, c, d, flag, counter, countb;\r\n\tchar arr[101], a, b[101];\r\n\tscanf (\"%d\", &n);\r\n\twhile (n>0)\r\n\t{\r\n\t    scanf(\"%s\", arr);\r\n\t    flag=0;\r\n\t    c=arr[0];\r\n\t    counter=0;\r\n\t\tcountb=0;\r\n\t    for (i=0; arr[i]!= '\\0'; i++)\r\n\t    {\r\n\t        d= arr[i];\r\n\t        if (d<c)\r\n\t        {\r\n\t            c=d;\r\n\t        }\r\n\t    }\r\n\t    a=c;\r\n\t    for (i=0; arr[i]!='\\0'; i++)\r\n\t    {\r\n\t        if (a== arr[i] && flag== 0)\r\n\t        {\r\n\t            flag=1;\r\n\t            counter++;\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            b[i-counter]=arr[i];\r\n\t\t\t\tcountb++;\r\n\t        }\r\n\t    }\r\n\t\tb[countb]= '\\0'\r\n\t    printf(\"%c \", a);\r\n\t\tputs(b);\r\n\t    n--;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "// PROBLEM RATING: 800\r\n\r\n#include <stdio.h>\r\n\r\nint main(void) {\r\n\tint n, i, c, d, flag, counter, countb;\r\n\tchar arr[101], a, b[101];\r\n\tscanf (\"%d\", &n);\r\n\twhile (n>0)\r\n\t{\r\n\t    scanf(\"%s\", arr);\r\n\t    flag=0;\r\n\t    c=arr[0];\r\n\t    counter=0;\r\n\t\tcountb=0;\r\n\t    for (i=0; arr[i]!= '\\0'; i++)\r\n\t    {\r\n\t        d= arr[i];\r\n\t        if (d<c)\r\n\t        {\r\n\t            c=d;\r\n\t        }\r\n\t    }\r\n\t    a=c;\r\n\t    for (i=0; arr[i]!='\\0'; i++)\r\n\t    {\r\n\t        if (a== arr[i] && flag== 0)\r\n\t        {\r\n\t            flag=1;\r\n\t            counter++;\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            b[i-counter]=arr[i];\r\n\t\t\t\tcountb++;\r\n\t        }\r\n\t    }\r\n\t\tb[countb]= '\\0';\r\n\t    printf(\"%c \", a);\r\n\t\tputs(b);\r\n\t    n--;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7617866004962779, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "313daad6b8261f493a8a83888a460e4e", "bug_code_uid": "9b960c242c0f15b02de7b463e802a013", "src_uid": "d646834d58c519d5e9c0545df2ca4be2", "apr_id": "d38a604394c2d5398b794f95e9b86d40", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint d=0;\nmain( )\n{  int i,j,n,max=0,m,c=0,d=0,e=08ii;\n   scanf(\"%d%d\",&n,&m);\n   int arr[n][2];\n   for(i=0;i<n;i++){\n    for(j=0;j<2;j++){\n    scanf(\"%d\",&arr[i][j]);\n    }\n   }\n   for(i=0;i<n;i++){\n    for(j=0;j<2;j++){\n        if(arr[0][0]!=0)\n        {    c++;\n             break;}\n        else if(m>=arr[i][0]&&m<=arr[i][1])\n        {    d++;\n             break;\n        }\n        else if(arr[i+1][0]<=arr[i][1])\n           continue;\n         else if(arr[i+1][0]>=arr[i][1])\n            {c++;\n            break;}\n           }\n        if(c!=0||d!=0){\n            break;\n        }\n\n\n\n}\nif(c!=0)\n    printf(\"NO\");\n else if(d!=0){\n    printf(\"YES\");\n }\n   }\n\n\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint d=0;\nmain( )\n{  int i,j,n,max=0,m,c=0,d=0,k;\n   scanf(\"%d%d\",&n,&m);\n   int arr[n][2];\n   for(i=0;i<n;i++){\n    for(j=0;j<2;j++){\n    scanf(\"%d\",&arr[i][j]);\n    }\n   }\n   for(i=0;i<n;i++){\n    for(j=0;j<2;j++){\n        if(arr[0][0]!=0)\n        {    c++;\n             break;}\n        else if(m>=arr[i][0]&&m<=arr[i][1])\n        {    d++;\n             break;\n        }\n        else if(arr[i+1][0]<=arr[i][1])\n           continue;\n         else if(arr[i+1][0]>arr[i][1])\n            {for(k=0;k<i;k++){\n                if(arr[k][1]>=arr[i+1][0]||arr[k][0]>=arr[i+1][0]){\n                    break;\n                }\n\n\n\n            }\n            if(k==i)\n                c++;\n           }\n           }\n        if(c!=0||d!=0){\n            break;\n        }\n\n\n\n}\nif(d!=0)\n    printf(\"YES\");\n else if(c!=0){\n    printf(\"NO\");\n }\n   }\n\n\n"}
{"similarity_score": 0.9011194029850746, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "aa275547c7f6202fa6bb0e8ca43ceb55", "bug_code_uid": "b5704540208a77a63aecb277afab32ef", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "53e4268bc8f1abed6ea9f348c7df7173", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\n# include <stdlib.h>\n\ntypedef struct exam\n{\n\tint a;\n\tint b;\n}exam;\n\nint compar(exam * e1, exam * e2)\n{\n\treturn e1->a - e2->a;\n}\n\nint main(void)\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\texam exams[n];\n\tint i;\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d%d\", &((exams + i)->a), &((exams + i)->b));\n\t}\n\tqsort(exams, n, sizeof(exam), compar);\n\tint date[n];\n\tdate[0] = exams[0].b;\n\tfor(i = 1; i < n; i++)\n\t\tdate[i] = exams[i].b >= date[i-1] ? exams[i].b : exams[i].a;\n\tprintf(\"%d\", date[n-1]);\n\treturn 0;\n}\n", "fixed": "# include <stdio.h>\n# include <stdlib.h>\n\ntypedef struct exam\n{\n\tlong a;\n\tlong b;\n}exam;\n\nint compar(exam * e1, exam * e2)\n{\n\tif(e1->a - e2->a == 0)\n\t\treturn e1->b - e2->b;\n\telse\n\t\treturn e1->a - e2->a;\n}\n\nint main(void)\n{\n\tlong n;\n\tscanf(\"%ld\", &n);\n\texam exams[n];\n\tlong i;\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%ld%ld\", &((exams + i)->a), &((exams + i)->b));\n\t}\n\tqsort(exams, n, sizeof(exam), compar);\n\tlong date[n];\n\tdate[0] = exams[0].b;\n\tfor(i = 1; i < n; i++)\n\t\tdate[i] = exams[i].b >= date[i-1] ? exams[i].b : exams[i].a;\n\tprintf(\"%ld\", date[n-1]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.16759776536312848, "equal_cnt": 15, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "3edb740341963ba056a6fe0409291016", "bug_code_uid": "8676ba7383a66897413c6bc34b4ed9cb", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "6878902d4504dcc7d488f7d78d1bf5df", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,w;\n    scanf(\"%d\",&t);\n    for(w=0;w<t;w++)\n    {\n        int q,d,a[105],i,n;\n        scanf(\"%d%d\",&q,&d);\n        for(i=0;i<q;i++)\n            scanf(\"%d\",&a[i]);\n        for(i=0;i<q;i++)\n        {\n            n=1;\n            a[i]=a[i]-7;\n            for(;a[i]>7;a[i]-=7)\n            {\n                if(a[i]%10==0||a[i]%7==0)\n                {\n                    printf(\"YES\\n\");\n                    n=0;\n                    break;\n                }\n            }\n            if(n)\n                printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n\n\t\t\t\t \t \t\t      \t\t  \t\t   \t \t\t\t", "fixed": "#include<stdio.h>\nint t,q,d,tmp;\nint main()\n{\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\", &q, &d);\n\t\tfor(int i=1; i<=q; ++i)\n\t\t{\n\t\t\tint ok = 0;\n\t\t\tscanf(\"%d\", &tmp);\n\t\t\tif(tmp >= 10 * d) ok = 1;\n\t\t\telse \n\t\t\t{\n\t\t\t\tfor(int j=1; j<10; ++j)\n\t\t\t\t{\n\t\t\t\t\tif(tmp >= j*d && (tmp - j*d) % 10 == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tok = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok > 0) puts(\"YES\"), ok = 0;\n\t\t\telse puts(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n  \t\t \t  \t\t\t  \t\t \t\t\t \t\t\t\t\t \t\t\t \t"}
{"similarity_score": 0.9972972972972973, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "27da9d9f447dad80c351c79b0ca00aa2", "bug_code_uid": "87415dd04a6e5ff14532935bcc03df65", "src_uid": "3c06e3cb2d8468e738b736a9bf88b4ca", "apr_id": "00fb2524ce8acf264331e6a519dfab70", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100], b[100];\n    scanf(\"%s %s\", a, b);\n    int n;  scanf(\"%d\", &n);\n    printf(\"%s %s\\n\", a, b);\n    for(int i=0; i<n; i++)\n    {\n        char x[100], y[100];\n        scanf(\"%s %s\", x, y);\n        if(strcmp(x,a)==0)strcpy(a,y);\n        else strcpy(b,y);\n        printf(\"%s %s\", a, b);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100], b[100];\n    scanf(\"%s %s\", a, b);\n    int n;  scanf(\"%d\", &n);\n    printf(\"%s %s\\n\", a, b);\n    for(int i=0; i<n; i++)\n    {\n        char x[100], y[100];\n        scanf(\"%s %s\", x, y);\n        if(strcmp(x,a)==0)strcpy(a,y);\n        else strcpy(b,y);\n        printf(\"%s %s\\n\", a, b);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9424964936886395, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cedacb11bc19e702e711d819e9798090", "bug_code_uid": "21405679d3c1a55b976763a8096eb2ce", "src_uid": "541fde3a3c40926cbd1edb6017b83e52", "apr_id": "b64b7ad7a4d911e579ab71f3b7b3a17a", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n\n    #include<stdio.h>\n    int main()\n    {\n        long int n;\n        scanf(\"%ld\",&n);\n       long int i,j,c=0,a[n],temp;\n        for(i=0;i<n;i++){\n        scanf(\"%ld\",&a[i]);\n        }\n        for(i=0;i<n;i++)\n                for(j=n-1;j>i;j--){\n                        if(a[i]>a[j]){\n                            temp=a[i];\n                            a[i]=a[j];\n                            a[j]=temp;\n                            c=c+1;\n                        }\n                        if(c>1){\n                            break;\n                    }\n                }\n\n        if(c>1){\n            printf(\"NO\");\n        }\n        else\n        printf(\"YES\");\n\n    }\n", "fixed": "\n\n    #include<stdio.h>\n    int main()\n    {\n        long int n;\n        scanf(\"%ld\",&n);\n       long int i,j,c=0,a[n],temp;\n        for(i=0;i<n;i++){\n        scanf(\"%ld\",&a[i]);\n        }\n        for(i=0;i<n;i++){\n                for(j=n-1;j>i;j--){\n                        if(a[i]>a[j]){\n                            temp=a[i];\n                            a[i]=a[j];\n                            a[j]=temp;\n                            c=c+1;\n                        }\n                        if(c>1){\n                            break;\n                    }\n                }\n                if(c>1){\n                    break;\n                }\n\n\n        }\n        if(c>1){\n            printf(\"NO\");\n        }\n        else\n        printf(\"YES\");\n\n    }\n"}
{"similarity_score": 0.9748427672955975, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5919e695916052e3d17220d7bee462c6", "bug_code_uid": "8cfb1175f5b26545dc8c56d934a02b7d", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "27eab468a272ef4220219763a1c0f9e2", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\n    char ch[150][150],pass[150];\n    int i,j,k,l,m,n,len,arr[150],t,cnt1=0,cnt2=0;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&ch[i]);\n        arr[i]=strlen(ch[i]);\n    }\n    scanf(\"%s\",&pass);\n    len=strlen(pass);\n    for(i=0;i<n-1;i++)\n        for(j=0;j<n-1-i;j++)\n    {\n        if(arr[j]>arr[j+1])\n        {\n            t=arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=t;\n        }\n    }\n    m=0;\n    for(i=0;i<n;i++)\n    {\n        cnt1++;\n        m++;\n        if(len==arr[i])\n        {\n            break;\n        }\n        if(m==k)\n        {\n            cnt1=cnt1+5;\n            m=0;\n        }\n\n    }\n    m=0;\n    for(i=0;i<n;i++)\n    {\n        cnt2++;\n        m++;\n        if(arr[i]>len || i==n-1)\n        {\n            break;\n        }\n        if(m==k)\n        {\n            cnt2+=5;\n            m=0;\n        }\n    }\n    printf(\"%d %d\\n\",cnt1,cnt2);\n}\n", "fixed": "\n#include<stdio.h>\nint main()\n{\n    char ch[150][150],pass[150];\n    int i,j,k,l,m,n,len,arr[150],t,cnt1=0,cnt2=0;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&ch[i]);\n        arr[i]=strlen(ch[i]);\n    }\n    scanf(\"%s\",&pass);\n    len=strlen(pass);\n    for(i=0;i<n-1;i++)\n        for(j=0;j<n-1-i;j++)\n    {\n        if(arr[j]>arr[j+1])\n        {\n            t=arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=t;\n        }\n    }\n    m=0;\n    for(i=0;i<n;i++)\n    {\n        cnt1++;\n        m++;\n        if(len==arr[i])\n        {\n            break;\n        }\n        if(m==k)\n        {\n            cnt1=cnt1+5;\n            m=0;\n        }\n\n    }\n    m=0;\n    for(i=0;i<n;i++)\n    {\n        cnt2++;\n        m++;\n        if(arr[i]>len || i==n-1)\n        {\n                break;\n        }\n        if(arr[i+1]>len)\n            break;\n        if(m==k)\n        {\n            cnt2+=5;\n            m=0;\n        }\n    }\n    printf(\"%d %d\\n\",cnt1,cnt2);\n}\n"}
{"similarity_score": 0.6321585903083701, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "af15d4216f3f062949fd7373177bd8a6", "bug_code_uid": "c5ab90649e583c22551f0e452e8c83e4", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "34fee501a73c4601e40e155a96ee0505", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int r;\r\n        scanf(\"%d\",&r);\r\n        if(1900<=r){\r\n            printf(\"Division 1\");\r\n        }\r\n        if(1600<=r<=1899){\r\n            printf(\"Division 2\");\r\n        }\r\n        if(1400<=r<=1599){\r\n            printf(\"Division 3\");\r\n        }\r\n        if(r<=1399){\r\n            printf(\"Division 4\")\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int r;\r\n        scanf(\"%d\",&r);\r\n        if(r<=1399){\r\n            printf(\"Division 4\\n\");\r\n        }\r\n        else if(1400<=r && r<=1599){\r\n            printf(\"Division 3\\n\");\r\n        }\r\n         else if(1600<=r && r<=1899){\r\n            printf(\"Division 2\\n\");\r\n        }\r\n          \r\n         else if(r>=1900){\r\n            printf(\"Division 1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.3582089552238806, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "f20953baef5d04d6115cc17575028674", "bug_code_uid": "583b89cbe14ebbe0a9e2e8d4d33a83a0", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "eb8670be10c1d9f81b3b8b881c193d32", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint FIND_FLOOR(int x,n){\n    int i=1;\n    int s=2;\n    while(1){\n        if(s>=n){\n            return i;\n        }\n        s+=x;\n        i++;\n    }\n}\nvoid main(){\n    int x,n,t;\n    scanf(\"%d\",t);\n    for(i=0;i<t;i++){\n        scanf(\"%d %d\",n,x);\n        printf(\"%d\\n\",FIND_FLOOR(x,n));\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n\n    int i,x,n,t;\n    int j=1;\n    int s=2;\n    int DONE=1;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d %d\",&n,&x);\n        DONE=1;\n        j=1;\n        s=2;\n            while(DONE){\n                if(s>=n){\n                    printf(\"%d \\n\",j);\n                    DONE=0;\n                    }\n                s+=x;\n                j++;\n            }\n        }\nreturn 0;\n}\n"}
{"similarity_score": 0.5010768126346016, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "cc76203611f86a2112320029334a303f", "bug_code_uid": "fef9aa66712387e1bee149892b7230ee", "src_uid": "3f9525d74f4934eb9dca1b16c53662bf", "apr_id": "1c423b31c53351bbc883b2485ba8a80a", "difficulty": 1200, "tags": ["constructive algorithms", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t10000\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int aa[N];\n\t\tint n, i, j, found;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\tfound = 0;\n\t\tfor (i = 0; i + 1 < n; i++)\n\t\t\tif (aa[i] == 0 && aa[i + 1] == 1) {\n\t\t\t\tfor (j = 0; j <= i; j++)\n\t\t\t\t\tprintf(\"%d \", j + 1);\n\t\t\t\tprintf(\"%d\", n + 1);\n\t\t\t\tfor (j = i + 1; j < n; j++)\n\t\t\t\t\tprintf(\" %d\", j + 1);\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\tfound = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (!found) {\n\t\t\tif (aa[n - 1] == 0 && aa[0] == 1) {\n\t\t\t\tprintf(\"%d %d\", n, n + 1);\n\t\t\t\tfor (j = 0; j < n - 1; j++)\n\t\t\t\t\tprintf(\" %d\", j + 1);\n\t\t\t\tprintf(\"\\n\");\n\t\t\t} else\n\t\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t10000\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int aa[N];\n\t\tint n, i, j;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\tif (aa[0] == 1) {\n\t\t\tprintf(\"%d\", n + 1);\n\t\t\tfor (j = 0; j < n; j++)\n\t\t\t\tprintf(\" %d\", j + 1);\n\t\t\tprintf(\"\\n\");\n\t\t} else if (aa[n - 1] == 0) {\n\t\t\tfor (j = 0; j < n; j++)\n\t\t\t\tprintf(\"%d \", j + 1);\n\t\t\tprintf(\"%d\\n\", n + 1);\n\t\t} else {\n\t\t\tfor (i = 0; i + 1 < n; i++)\n\t\t\t\tif (aa[i] == 0 && aa[i + 1] == 1) {\n\t\t\t\t\tfor (j = 0; j <= i; j++)\n\t\t\t\t\t\tprintf(\"%d \", j + 1);\n\t\t\t\t\tprintf(\"%d\", n + 1);\n\t\t\t\t\tfor (j = i + 1; j < n; j++)\n\t\t\t\t\t\tprintf(\" %d\", j + 1);\n\t\t\t\t\tprintf(\"\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9037162162162162, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "88e08e8ecc123adb59f02d21536c8dae", "bug_code_uid": "bc4dc5a93849982563a426dd3c0a77ef", "src_uid": "0515ac888937a4dda30cad5e2383164f", "apr_id": "6aefa114c27f351359bc705a39c97164", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,k;\n    char *s;\n    int i=1;\n    scanf(\"%d %d\",&n,&k);\n    getchar();\n    s=(char*)calloc(n+1,sizeof(char));\n    gets(s);\n    s[n]='\\0';\n    if(n==1 && k==1){\n        printf(\"0\");\n        return 0;\n    }\n    if(k==0){\n        printf(\"%s\\n\",s);\n        return 0;\n    }\n    if(s[0]>'1'){\n        s[0]='1';\n        k--;\n    }\n    while(i<=(n-1)){\n        if(s[i]>'0'){\n            s[i] = '0';\n            k--;\n            if(k==0){\n                break;\n            }\n        }\n            i++;\n\n    }\n    printf(\"%s\\n\",s);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,k;\n    char *s;\n    int i=1;\n    scanf(\"%d %d\",&n,&k);\n    getchar();\n    s=(char*)calloc(n+1,sizeof(char));\n    gets(s);\n    s[n]='\\0';\n    if(n==1 && k==1){\n        printf(\"0\");\n        return 0;\n    }\n    if(k==0){\n        printf(\"%s\\n\",s);\n        return 0;\n    }else if(s[0]>'1'){\n        s[0]='1';\n        k--;\n    }\n    while(i<=(n-1)){\n        if(k==0){\n            break;\n        }\n        if(s[i]>'0'){\n            s[i] = '0';\n            k--;\n        }\n            i++;\n\n    }\n    printf(\"%s\\n\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.37775816416593117, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "043b049b18dba425fa146d5424ab3308", "bug_code_uid": "a8152f545cdb98d3edfd94d616434a53", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "70bd88502a67b60f095991122e63d9a7", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#define MAX 100\n\nint main(){\n\t\n\tint n;\n\tint i, j, k, m;\n\tchar a[MAX];\n\tchar b[MAX];\n\t\n\tscanf(\"%d\", &n);\n\tassert(n>=100 && n>=1);\n\t\n\tfor(i=0;i<n;i++){}\n\t\tscanf(\"%s\", a[i]);\n\t}\n\n\tfor(i=0;i<n;i++){\n\t\tint duz=strlen(a[i]);\n\t\tk=0;\n\t\t\n\t\tif(duz>10){\n\t\t\tb[0]=a[0];\n\t\t\tfor(j=1;j<duz-1;j++){\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t\tif(k<9){\n\t\t\t\t\tb[1]=k;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tm=1;\n\t\t\t\t\twhile(k!=0){\n\t\t\t\t\t\tb[m++]=k;\n\t\t\t\t\t\tk=k%10;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tb[2]=a[duz-1];\n\t\n\t\t}\n\t\telse\n\t\t\tfor(i=0;i<duz;i++)\n\t\t\t\tb[i]=a[i];\n\t\t\n\t}\n\t\n\tprintf(\"%d\", &n);\n\tfor(i=0;i<n;i++){\n\t\tprintf(\"%s\\n\", b[i])\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <assert.h>\n\n#define MAX 101\n\nint main(){\n\tint n;\n\tchar a[MAX][MAX];\n\tint i, j, k;\n\t\n\t\n\tscanf(\"%d\", &n);\n\tassert(1<=n && n<=100);\n\t\n\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%s\", a[i]);\n\t}\n\n\tfor(i=0;i<n;i++){\n\t\tint d=strlen(a[i]);\n\t\tfor(j=0;j<d;j++){\n\t\t\tassert('a'<=a[i][j] && a[i][j]<='z');\n\t\t}\n\t}\n\n\tfor(i=0;i<n;i++){\n\n\t\tif(strlen(a[i])<=10){\n\t\t\tprintf(\"\\n%s\", a[i]);\n\t\t}\n\t\t\n\t\telse{\n\n\t\tprintf(\"\\n%c%lu%c\", a[i][0], strlen(a[i])-2, a[i][strlen(a[i])-1]);\n\t\t}\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9759812536613942, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c46f0bbb50633d93f6e1f1d2b0c6b25c", "bug_code_uid": "e4cb3c8ac32bf55895d546bccb9e44fa", "src_uid": "96e2ba997eff50ffb805b6be62c56222", "apr_id": "32d778b201b041c45b7c3713e43cb67d", "difficulty": 1400, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int T[255]={0};\n    char s[2000000];\n    char c;\n    int v1=0,v2=0,i=0;\n    scanf(\"%s\\n\",s);\n    scanf(\"%c\",&c);\n    while (c!='\\n') {\n        T[(int)c]+=1;\n        scanf(\"%c\",&c);\n    }\n    while (s[i]!='\\0') {\n        if (T[(int)s[i]]>0) {\n            T[(int)s[i]]-=1;\n            v1++;\n            s[i]='.';\n        }\n\n        i++;\n    }\n    i=0;\n    while (s[i]!='\\0') {\n            if ((int)s[i]>90) {\n                if (T[(int)s[i]-'a'+'A']>0) {\n                    T[(int)s[i]-'a'+'A']-=1;\n                    v2++;\n                }\n            } else {\n                if (T[(int)s[i]-'A'+'a']>0) {\n                    T[(int)s[i]-'A'+'a']-=1;\n                    v2++;\n                }\n            }\n        s[i]='.';\n        i++;\n    }\n    printf(\"%d %d\\n\",v1,v2);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int T[255]={0};\n    char s[2000000];\n    char c;\n    int v1=0,v2=0,i=0;\n    scanf(\"%s\\n\",s);\n    scanf(\"%c\",&c);\n    while (c!='\\n') {\n        T[(int)c]+=1;\n        scanf(\"%c\",&c);\n    }\n    while (s[i]!='\\0') {\n        if (T[(int)s[i]]>0) {\n            T[(int)s[i]]-=1;\n            v1++;\n            s[i]='.';\n        }\n\n        i++;\n    }\n    i=0;\n    while (s[i]!='\\0') {\n        if (s[i]!='.')\n            if ((int)s[i]>90) {\n                if (T[(int)s[i]-'a'+'A']>0) {\n                    T[(int)s[i]-'a'+'A']-=1;\n                    v2++;\n                }\n            } else {\n                if (T[(int)s[i]-'A'+'a']>0) {\n                    T[(int)s[i]-'A'+'a']-=1;\n                    v2++;\n                }\n            }\n        i++;\n    }\n    printf(\"%d %d\\n\",v1,v2);\n    return 0;\n}\n"}
{"similarity_score": 0.24764468371467024, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "4d2ae4a677e8c4c2519d7c7ff6822ac2", "bug_code_uid": "871ba3902d9160409a8b835e40032216", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "d20b47064f899a247d7b3f07efc4c24f", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, m, a[101], b[101], i, j, ta, tb, l, c = 0;\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tscanf(\"%d\", &m);\n\tfor (i = 0; i < m; i++)\n\t\tscanf(\"%d\", &b[i]);\n\tfor (j = 1; j < n; j++)\n\t\tfor (i = 0; i < n - 1; i++)\n\t\t\tif (a[i] > a[i + 1])\n\t\t\t{\n\t\t\t\tta = a[i];\n\t\t\t\ta[i] = a[i + 1];\n\t\t\t\ta[i + 1] = ta;\n\t\t\t}\n\tfor (j = 1; j < m; j++)\n\t\tfor (i = 0; i < m - 1; i++)\n\t\t\tif (b[i] > b[i + 1])\n\t\t\t{\n\t\t\t\ttb = b[i];\n\t\t\t\tb[i] = b[i + 1];\n\t\t\t\tb[i + 1] = tb;\n\t\t\t}\n\tfor (j = 0; j < n; j++)\n\t\tfor (i = 0; i < m; i++)\n\t\t\tif (a[i] == b[j] || b[j] - a[I] == 1 || a[I] - b[j] == 1)\n\t\t\t{\n\t\t\t\tb[j] = '*';\n\t\t\t\tc++;\n\t\t\t\tbreak;\n\t\t\t}\n\tprintf(\"%d\\n\", c);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, m, c = 0, temp;\n\tscanf(\"%d\", &n);\n\tint ar[n];\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &ar[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tif (ar[i] > ar[j])\n\t\t\t{\n\t\t\t\ttemp = ar[i];\n\t\t\t\tar[i] = ar[j];\n\t\t\t\tar[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tscanf(\"%d\", &m);\n\tint ar1[m];\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tscanf(\"%d\", &ar1[i]);\n\t}\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tfor (int j = 0; j < m; j++)\n\t\t{\n\t\t\tif (ar1[i] > ar1[j])\n\t\t\t{\n\t\t\t\ttemp = ar1[i];\n\t\t\t\tar1[i] = ar1[j];\n\t\t\t\tar1[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tif (((ar[j] - ar1[i]) == -1) || ((ar[j] - ar1[i]) == 0) || ((ar[j] - ar1[i]) == 1))\n\t\t\t{\n\t\t\t\tc++;\n\t\t\t\tar[j] = 'z';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", c);\n\treturn 0;\n}"}
{"similarity_score": 0.5784499054820416, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "4c51aa3d9f306cd1a53dfb8f08e0dd46", "bug_code_uid": "d35a243db8ee44058ca8af4c438f896c", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "21aa52ddcbd2f72ec42bebdd3f5148ef", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n  int i,t,k;\n  scanf(\"%d\",&t);\n  int a[t],b[t];\n  for(i=0;i<t;i++)\n  {\n      scanf(\"%d%d\",&a[i],&b[i]);\n      k=0;\n      while((a[i]%b[i])!=0)\n      { a[i]+=1;\n        k+=1;\n      }\n      printf(\"%d\\n\",k);\n  }\n   return 0;);\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n  int i,t,k;\n  scanf(\"%d\",&t);\n  int a[t],b[t];\n  for(i=0;i<t;i++)\n  {\n      scanf(\"%d%d\",&a[i],&b[i]);\n      k=a[i]/b[i];\n      if(a[i]%b[i]==0)\n        printf(\"0\\n\");\n      else\n       printf(\"%d\\n\",(k+1)*b[i]-a[i]);\n  }\n   return 0;;\n}"}
{"similarity_score": 0.2908545727136432, "equal_cnt": 5, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "17f92df6abae45321ca14445c69e2a58", "bug_code_uid": "5ec7ee7711cedd25704ccf8702beb677", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "9e330d097d4d2a3ffd07a858d1025dc0", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int a,b,i;\n    scanf(\"%d\",&a);\n    if( a== 1)\n    printf(\"-1\");\n    else{\n    int arr[a-1];\n    for(i=0;i<a;i++)\n    {\n        arr[i] = i+2;\n    }\n    arr[a-1] = 1;\n    for(i=0;i<a;i++)\n    {\n        printf(\"%d\",arr[i]);\n    }}\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int a,b,i;\n    scanf(\"%d\",&a);\n    int arr[a-1];\n\n    if((a%2)== 0)\n    {\n        for(i=0;i<a;i++)\n        {\n            arr[i] = i+2;\n            arr[i+1] = i+1;\n            i++;\n        }\n        arr[a-1] = a-1;\n        for(i=0;i<a;i++)\n    {\n        printf(\"%d \",arr[i]);\n    }\n    }\n\n    else\n    {\n        printf(\"-1\");\n    }\n\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9118136439267887, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b8fcfe43f5c3579b300980101244eccc", "bug_code_uid": "54e9b68ad4dbc2cd96429828176c92e4", "src_uid": "1539fc8ef4f4cdcd1e14faf4f1b4ee8b", "apr_id": "d89724fd8f8dce7ae3fd3eed37035dae", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tint n=0,m=0;\n\tint q=0,temp=0;\n\tint list[100]={0},list2[100]={0};\n\tchar s[1000];\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&m);\n\t\tscanf(\"%s\",s);\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tif(s[j]=='A')\n\t\t\t{\n\t\t\t\tlist[q]=j;\n\t\t\t\tq++;\t\n\t\t\t} \n\t\t}\n\t\tif(list[0]==0&&list[1]==0)\n\t\t{\n\t\t\tprintf(\"%d\\n\",0);\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int z=0;z<q-1;z++)\n\t\t{\n\t\t\tlist2[z]=(list[z+1]-list[z]);\n\t\t}\n\t\tlist2[q-1]=m-list[q-1];\n\t\ttemp=list2[0];\n\t\tfor(int x=0;x<q;x++)\n\t\t{\n\t\t\tif(list2[x]>temp)\n\t\t\t{\n\t\t\t\ttemp=list2[x];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",(temp-1));\n\t\tq=0;\n\t\ttemp=0;\n\t}\n} ", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tint n=0,m=0;\n\tint q=0,temp=0;\n\tint flag = 0;\n\tint list[100]={0},list2[100]={0};\n\tchar s[1000];\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&m);\n\t\tscanf(\"%s\",s);\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tif(s[j]=='A')\n\t\t\t{\n\t\t\t\tflag = 1;\n\t\t\t\tlist[q]=j;\n\t\t\t\tq++;\t\t\t\n\t\t\t} \n\t\t}\n\t\tif(flag==0)\n\t\t{\n\t\t\tprintf(\"%d\\n\",0);\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int z=0;z<q-1;z++)\n\t\t{\n\t\t\tlist2[z]=(list[z+1]-list[z]);\n\t\t}\n\t\tlist2[q-1]=m-list[q-1];\n\t\ttemp=list2[0];\n\t\tfor(int x=0;x<q;x++)\n\t\t{\n\t\t\tif(list2[x]>temp)\n\t\t\t{\n\t\t\t\ttemp=list2[x];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",(temp-1));\n\t\tq=0;\n\t\ttemp=0;\n\t\tflag = 0;\n\t}\n} "}
{"similarity_score": 0.3280701754385965, "equal_cnt": 23, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "cf4f5689dd31659c76b6029af9f014ba", "bug_code_uid": "4cbf61ea4829dafc180458f05fd584a0", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "15434388b5e18d3cd6761a6d3a44e311", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,i,f=0,s=0,j;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n\n    for (i=0;i<n;i++)\n    {\n        s=s+a[i];\n    }\n\n    for (i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(b[i]+b[j]>=s){\n                f=1;\n                break;\n            }\n        }\n    }\n    if (f==1)\n        printf(\"YES\");\n    else \n        printf(\"NO\");\n    \n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int i;\n    long long tot = 0;\n    for (i = 1;i <= n;++i) {\n        int v;\n        scanf(\"%d\", &v);\n        tot += v;\n    }\n    int mmax=-1;\n    int max=-1;\n    for ( i = 1;i <= n;++i) {\n        int v;\n        scanf(\"%d\", &v);\n        if(v>mmax){\n            max = mmax;\n            mmax = v;\n        }\n        else if (v >= max) {\n            max = v;\n        }\n    }\n    if (tot > (mmax + max)) {\n        printf(\"NO\\n\");\n    }\n    else\n        printf(\"YES\\n\");\n//  system(\"pause\");\n    return 0;\n}\n"}
{"similarity_score": 0.4462809917355372, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "608115c36577a81f8427ac1d47b3747c", "bug_code_uid": "139e131fdb1d45e5e78d2899c7d4a610", "src_uid": "73930603e440eef854da4ba51253a5a7", "apr_id": "8de069c40af57693cda7f77051d125a3", "difficulty": 1500, "tags": ["dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\nchar map[50][50] = {0};\nchar path[50][50]={0};\nint n,m;\nint dfs(int x0, int y0, int x,int y)\n{\n\tint res = 0;\n\tif(map[x0][y0]!=map[x][y])\treturn 0;\n\tif(path[x][y])\treturn 1;\n\tpath[x][y]=1;\n\tif(x+1<n&&x+1!=x0)\tres|=dfs(x,y,x+1,y);\n\tif(x-1>=0&&x-1!=x0)\tres|=dfs(x,y,x-1,y);\n\tif(y+1<m&&y+1!=y0)\tres|=dfs(x,y,x,y+1);\n\tif(y-1>=0&&y-1!=y0)\tres|=dfs(x,y,x,y-1);\n\tpath[x][y]=0;\n\treturn res;\n}\nint main()\n{\n\tint i,j;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",map[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(dfs(i,j,i,j))\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n", "fixed": "#include \"stdio.h\"\nchar map[50][50] = {0};\nchar path[50][50]={0};\nint n,m;\nvoid dfs(int x0, int y0, int x,int y)\n{\n\tif(map[x0][y0]!=map[x][y])\treturn;\n\tif(path[x][y])\n\t{\n\t\tprintf(\"Yes\\n\");\n\t\texit(0);\n\t}\n\tpath[x][y]=1;\n\tif(x+1<n&&x+1!=x0)\tdfs(x,y,x+1,y);\n\tif(x-1>=0&&x-1!=x0)\tdfs(x,y,x-1,y);\n\tif(y+1<m&&y+1!=y0)\tdfs(x,y,x,y+1);\n\tif(y-1>=0&&y-1!=y0)\tdfs(x,y,x,y-1);\n\tpath[x][y]=0;\n}\nint main()\n{\n\tint i,j;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",map[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tdfs(i,j,i,j);\n\t\t}\n\t}\n\tprintf(\"No\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.2152777777777778, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "3fbc48984f1077b7f30b8fc3bc614bd2", "bug_code_uid": "0516067b8f9059001aa605300c76f871", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "3d3293e2ee7abae9eaf7f0f974de28c8", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint a[4000][4000];\nint main()\n{\n\tint tc,i,len,odd,even;\n\tscanf(\"%d\",&tc);\n\tchar ch[34];\n\twhile(tc--){\n\t\teven=0,odd=0;\n\t\tscanf(\"%s\",ch);\n\t\tlen=strlen(ch);\n\t\tfor(i=0;i<len;i++){\n\t\t\tif(i%2==0)\n\t\t\t\teven+=(ch[i]-96)*(i+1);\n\t\t\telse\n\t\t\t\todd+=(ch[i]-96)*(i);\n\t\t}\n\t\ta[even][odd]++;\n\t\tif(a[even][odd]<2)\n\t\t\tprintf(\"OK\\n\",ch);\n\t\telse\n\t\t\tprintf(\"%s%d\\n\",ch,a[even][odd]-1); \n\t}\n\t\t\t\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n \n \nchar dizi[100007][40] ;\nchar dizit[100007][40] ;\nint dizim[100007] ;\n \nint main(){\n\t\n\tint ti=0,j,n,i=0 ;\n\tscanf(\"%d\",&n) ;\n\t;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%s\",dizi[i]);\n\t\tfor(j=0;j<ti;j++){\n\t\t\tif(dizit[j][0]!=dizi[i][0])continue;\n\t\t\tif(!strcmp(dizit[j],dizi[i])){\n\t\t\t\tdizim[j]++;\n\t\t\t\tprintf(\"%s%d\\n\",dizi[i],dizim[j]);\n\t\t\t\tgoto A;\n\t\t\t}\n\t\t}\n\t\tstrcpy(dizit[ti++],dizi[i]) ;\n\t\tprintf(\"OK\\n\");\n\t\tA:;\n\t}\n}"}
{"similarity_score": 0.504, "equal_cnt": 22, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "44e9588845c95ffe121659649f2717ff", "bug_code_uid": "957470550e6e8d15c5885666958e1b3b", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "f95a717f8cdb7f8f8bbabbd8645527ae", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--) {\n        int n;\n        scanf(\"%d\", &n);\n        int arr[n], a[n], result = -1;\n        memset(a, 0, n*sizeof(int));\n        for(int i = 0; i < n; i++) {\n            scanf(\"%d\", &arr[i]);\n            a[arr[i]]++;\n        }\n        if(n < 3) {\n            printf(\"-1\\n\");\n        } else {\n            for(int i = 1; i <= n; i++) {\n                if(a[i] >= 3) {\n                    result = i;\n                }\n            }\n            printf(\"%d\\n\", result);\n        }\n    }\n    return 0;\n}\n\n \t \t  \t  \t\t\t   \t \t\t  \t \t\t\t\t\t\t \t", "fixed": "#include<stdio.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while(t--) {\n        int n;\n        scanf(\"%d\", &n);\n        int freq[200001] = {0};\n        int biggestNum = 0;\n        for (int i = 0; i < n; i++)\n        {\n            int num;\n            scanf(\"%d\", &num);\n            if(num > biggestNum) biggestNum = num;\n            freq[num]++;\n        }\n        int found = -1;\n        for (int i = 0; i <= biggestNum; i++)\n        {\n            if(freq[i] >= 3) {\n                found = i;\n                break;\n            }\n        }\n\n        printf(\"%d\\n\", found);\n        \n    }\n    return 0;\n}\n   \t  \t\t\t\t  \t\t\t  \t\t\t  \t\t\t\t\t\t \t"}
{"similarity_score": 0.9050279329608939, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ad8982993d9562abdbbd528c8d69be74", "bug_code_uid": "2642bcedd35a7563a097e9a327557505", "src_uid": "f82058f6ba3ce0da15a5ce059674af35", "apr_id": "fea42a04dc179ee12dfeb3a99a7ee475", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\nint n,c=0;\nscanf(\"%d\",&n);\nfor(int i=1;i<=2*n+1;i=i+2)\n{\nprintf(\"%d \",i);\n++c;\nif(c==n)\nbreak;\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\nint n,c=0;\nscanf(\"%d\",&n);\nfor(int i=1;i<=n;i++)\n{\nprintf(\"1 \");\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n\n"}
{"similarity_score": 0.8721311475409836, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "09dfda0203d547ad301f3cdfdd93e8a6", "bug_code_uid": "09566971a5df6e71cf3721adea3048e1", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "00483caf798a08ac73b1f47df19a8696", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\t\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t\tint n, sum=0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tint a[n];\r\n\t\tfor(int i=0; i<n; i++){\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\t\tsum+=a[i];\r\n\t\t}\r\n\t\tif(sum<0){\r\n\t\t\tprintf(\"%d\\n\", -sum);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"%d\\n\", sum);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n\t\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tlong long a[n], sum=0;\r\n\t\tfor(int i=0; i<n; i++){\r\n\t\t\tscanf(\"%lld\", &a[i]);\r\n\t\t\tsum+=a[i];\r\n\t\t}\r\n\t\tif(sum<0){\r\n\t\t\tprintf(\"%lld\\n\", -sum);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"%lld\\n\", sum);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9955817378497791, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7142b29823d9cb8b103b75ef39dc26a0", "bug_code_uid": "da60f8d5a2718636859ef6da18377c65", "src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "apr_id": "fd81d305e8cc1edf6479b370628172e7", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\n\nint main()\n{\n\tchar a[51]; int n,i;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",a);\n\tif(n%2==0)\n\t\t{\n\t\t\tfor(i=0;i<n-2;i+=2)\n\t\t\t\tprintf(\"%c%c-\",a[i],a[i+1]);\n\t\t\tprintf(\"%c%c\",a[n-2],a[n-1]);\n\t\t}\n\telse\n\t\t{\n\t\t\tfor(i=0;i<n-3;i+=2)\n\t\t\t\tprintf(\"%c%c-\",a[i],a[i+1]);\n\t\t\tprintf(\"%c%c%c\",a[n-3],a[n-2],a[n-1]);\n\t\t}\n\treturn 0;\n}", "fixed": "#include<string.h>\n#include<stdio.h>\n\nint main()\n{\n\tchar a[101]; int n,i;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",a);\n\tif(n%2==0)\n\t\t{\n\t\t\tfor(i=0;i<n-2;i+=2)\n\t\t\t\tprintf(\"%c%c-\",a[i],a[i+1]);\n\t\t\tprintf(\"%c%c\",a[n-2],a[n-1]);\n\t\t}\n\telse\n\t\t{\n\t\t\tfor(i=0;i<n-3;i+=2)\n\t\t\t\tprintf(\"%c%c-\",a[i],a[i+1]);\n\t\t\tprintf(\"%c%c%c\",a[n-3],a[n-2],a[n-1]);\n\t\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9896249002394254, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "2e0c9dd168276e8821714308bc2600f5", "bug_code_uid": "bc10b64ae32495af7af6cd614097ba82", "src_uid": "e3ca8338beb8852c201be72650e9aabd", "apr_id": "f369f3a7c82592b1abe9c5dc03025036", "difficulty": 1700, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint comparetor (const void * a, const void * b)\n\t{\n\t\treturn ( *(int*)a - *(int*)b );\n\t}\n\n\n\n\n\nint main()\n{\n\tint i,j,n,a,b,d,d1,arr[100000],m1,m2,flag=0,rem,h=0,cnt=0,p=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tif(n==1)\n\t{\n\t\tprintf(\"-1\\n\");\n\t}\n\telse\n\t{\n\t\tqsort(arr,n,sizeof(int),comparetor);\n\t\tif(n==2)\n\t\t{\n\t\t\td=arr[1]-arr[0];\n\t\t\tif(d>=1)\n\t\t\t{\n\t\t\t\tif(d%2==0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"3\\n%d %d %d\\n\",arr[0]-d,arr[0]+(d/2),arr[1]+d);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"2\\n%d %d\\n\",arr[0]-d,arr[1]+d);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tprintf(\"1\\n%d\\n\",arr[0]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm1=arr[1]-arr[0];\n\t\t\tm2=arr[2]-arr[1];\n\t\t\tif(m1>m2)\n\t\t\t{\n\t\t\t\td=m2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\td=m1;\n\t\t\t}\n\t\t\tfor(i=1;i<n;i++)\n\t\t\t{\n\t\t\t\td1=arr[i]-arr[i-1];\n\t\t\t\tif(d!=d1)\n\t\t\t\t{\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(d1%2==0)\n\t\t\t\t\t{\n\t\t\t\t\t\trem=i;\n\t\t\t\t\t\th=1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(d1%2!=0||d1==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\telse if(d1==0)\n\t\t\t\t{\n\t\t\t\t\tp++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt>=2||flag==1)\n\t\t\t{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t}\n\t\t\telse if(h==1)\n\t\t\t{\n\t\t\t\td1=arr[rem]-arr[rem-1];\n\t\t\t\tprintf(\"1\\n%d\\n\",arr[rem]-d);\n\t\t\t}\n\t\t\telse if (p==n-1)\n\t\t\t{\n\t\t\t\tprintf(\"1\\n%d\\n\",arr[0]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"2\\n%d %d\\n\",arr[0]-d,arr[n-1]+d);\n\t\t\t}\n\t\t}\n\t}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint comparetor (const void * a, const void * b)\n\t{\n\t\treturn ( *(int*)a - *(int*)b );\n\t}\n\n\n\n\n\nint main()\n{\n\tint i,j,n,a,b,d,d1,arr[100000],m1,m2,flag=0,rem,h=0,cnt=0,p=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tif(n==1)\n\t{\n\t\tprintf(\"-1\\n\");\n\t}\n\telse\n\t{\n\t\tqsort(arr,n,sizeof(int),comparetor);\n\t\tif(n==2)\n\t\t{\n\t\t\td=arr[1]-arr[0];\n\t\t\tif(d>=1)\n\t\t\t{\n\t\t\t\tif(d%2==0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"3\\n%d %d %d\\n\",arr[0]-d,arr[0]+(d/2),arr[1]+d);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"2\\n%d %d\\n\",arr[0]-d,arr[1]+d);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tprintf(\"1\\n%d\\n\",arr[0]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm1=arr[1]-arr[0];\n\t\t\tm2=arr[2]-arr[1];\n\t\t\tif(m1>m2)\n\t\t\t{\n\t\t\t\td=m2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\td=m1;\n\t\t\t}\n\t\t\tfor(i=1;i<n;i++)\n\t\t\t{\n\t\t\t\td1=arr[i]-arr[i-1];\n\t\t\t\tif(d!=d1)\n\t\t\t\t{\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(d1==2*d)\n\t\t\t\t\t{\n\t\t\t\t\t\trem=i;\n\t\t\t\t\t\th=1;\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\telse if(d1==0)\n\t\t\t\t{\n\t\t\t\t\tp++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cnt>=2||flag==1)\n\t\t\t{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t}\n\t\t\telse if(h==1)\n\t\t\t{\n\t\t\t\td1=arr[rem]-arr[rem-1];\n\t\t\t\tprintf(\"1\\n%d\\n\",arr[rem]-d);\n\t\t\t}\n\t\t\telse if (p==n-1)\n\t\t\t{\n\t\t\t\tprintf(\"1\\n%d\\n\",arr[0]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"2\\n%d %d\\n\",arr[0]-d,arr[n-1]+d);\n\t\t\t}\n\t\t}\n\t}\nreturn 0;\n}\n"}
{"similarity_score": 0.8036529680365296, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "8781ee8e8af2fefc3badf660d7388d99", "bug_code_uid": "6a2905258427b96c777d940b99fc6cef", "src_uid": "d6423f380e6ba711d175d91e73f97b47", "apr_id": "7ae62ecb3f4026976e697dd80b94d210", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nvoid main()\n{\n\tint n;\n\tchar s[n];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s);\n\tif(n%4!=0){\n\t\tprintf(\"===\\n\");\n\t}else{\n\t\tint a=0,g=0,t=0,c=0;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t{\n\t\t\t/* code */\n\t\t\t//cout<<i;\n\t\t\tif(s[i]=='A'){\n\t\t\t\t\n\t\t\t\ta++;\n\t\t\t}\n\t\t\tif(s[i]=='G'){\n\t\t\t\tg++;\n\t\t\t}\n\t\t\tif(s[i]=='C'){\n\t\t\t\tc++;\n\t\t\t}\n\t\t\tif(s[i]=='T'){\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n\t\t//printf(\"%d\\n\",a);\n\t\tif(a!=n/4){\n\t\t\ta = n/4-a;\n\t\t}\n\t\tif(g!=n/4){\n\t\t\tg = n/4-g;\n\t\t}\n\t\tif(c!=n/4){\n\t\t\tc = n/4-c;\n\t\t}\n\t\tif(t!=n/4){\n\t\t\tt = n/4-t;\n\t\t}\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\t/* code */\n\t\t\tif(s[j]=='?'){\n\t\t\t\tif(a!=0){\n\t\t\t\t\tprintf(\"A\");\n\t\t\t\t\ta--;\n\t\t\t\t}\n\t\t\t\telse if(g!=0){\n\t\t\t\t\tprintf(\"G\");\n\t\t\t\t\tg--;\n\t\t\t\t}\n\t\t\t\telse if(c!=0){\n\t\t\t\t\tprintf(\"C\");\n\t\t\t\t\tc--;\n\t\t\t\t}\n\t\t\t\telse if(t!=0){\n\t\t\t\t\tprintf(\"T\");\n\t\t\t\t\tt--;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tprintf(\"%c\",s[j]);\n\t\t\t}\n\t\t}\n\n\t}\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar s[n];\n\t\n\tscanf(\"%s\",s);\n\tif(n%4!=0){\n\t\tprintf(\"===\\n\");\n\t}else{\n\t\tint a=0,g=0,t=0,c=0;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t{\n\t\t\t/* code */\n\t\t\t//cout<<i;\n\t\t\tif(s[i]=='A'){\n\t\t\t\t\n\t\t\t\ta++;\n\t\t\t}\n\t\t\tif(s[i]=='G'){\n\t\t\t\tg++;\n\t\t\t}\n\t\t\tif(s[i]=='C'){\n\t\t\t\tc++;\n\t\t\t}\n\t\t\tif(s[i]=='T'){\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n\t\t//printf(\"%d\\n\",a);\n\t\t//printf(\"%d %d %d %d\\n\", a,c,g,t);\n\t\tif(a<=n/4){\n\t\t\ta = n/4-a;\n\t\t}else{\n\t\t\tprintf(\"===\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(g<=n/4){\n\t\t\tg = n/4-g;\n\t\t}else{\n\t\t\tprintf(\"===\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(c<=n/4){\n\t\t\t//printf(\"%d\\n\", c);\n\t\t\tc = n/4-c;\n\t\t}else{\n\t\t\tprintf(\"===\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(t<=n/4){\n\t\t\tt = n/4-t;\n\t\t}else{\n\t\t\tprintf(\"===\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\t//printf(\"%d %d %d %d\\n\", a,c,g,t);\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\t/* code */\n\t\t\tif(s[j]=='?'){\n\t\t\t\tif(a!=0){\n\t\t\t\t\tprintf(\"A\");\n\t\t\t\t\ta--;\n\t\t\t\t}\n\t\t\t\telse if(g!=0){\n\t\t\t\t\tprintf(\"G\");\n\t\t\t\t\tg--;\n\t\t\t\t}\n\t\t\t\telse if(c!=0){\n\t\t\t\t\tprintf(\"C\");\n\t\t\t\t\tc--;\n\t\t\t\t}\n\t\t\t\telse if(t!=0){\n\t\t\t\t\tprintf(\"T\");\n\t\t\t\t\tt--;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tprintf(\"%c\",s[j]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8460076045627376, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "386ff5eebc640d6337f62ed4e42d00fe", "bug_code_uid": "ab0c1a3c18f518a7e54fa38703e76d2e", "src_uid": "4577a9b2d96110966ad95a960ef7ec20", "apr_id": "4160e638c7bb01ed9f439e09f3b12533", "difficulty": 2000, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint c[1000],a[301],num[301];\nint main()\n{\n\tint n,l,j,i,k;\n\tscanf(\"%d\",&l);\n\tk=0;\n\tfor(i=1;i<=l;i++)\n\t{\n\t\tscanf(\"%d\",&c[i]);\n\t\tint t=0;\n\t\tif(c[i]>c[i-1])\n\t\t{\n\t\t\tint k=c[i]-c[i-1];\n\t\t\twhile(k>0)\n\t\t\t{\n\t\t\t\tif(k>9-a[t])\n\t\t\t\t{\n\t\t\t\t\tk=k-(9-a[t]);\n\t\t\t\t\ta[t]=9;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[t]=a[t]+k;\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n\n\t\telse if(c[i]==c[i-1])\n\t\t{\n\t\t\twhile(a[t]==0)\n\t\t\t\tt++;\n\t\t\ta[t]--;\n\t\t\tt++;\n\t\t\twhile(a[t]==9)\n\t\t\t\tt++;\n\t\t\ta[t]++;\n\t\t\tif(a[t-1]>a[0])\n\t\t\t{\n\t\t\t\tint temp=a[0];\n\t\t\t\ta[0]=a[t-1];\n\t\t\t\ta[t-1]=temp;\n\t\t\t}\n\t\t\tif(a[t]==1)\n\t\t\t\tt++;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\tint k=c[i-1]-c[i]+1;\n\t\t\twhile(k>0)\n\t\t\t{\n\t\t\t\tif(a[t]>k)\n\t\t\t\t{\n\t\t\t\t\ta[t]=a[t]-k;\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tk=k-a[t];\n\t\t\t\t\ta[t]=0;\n\t\t\t\t}\n\t\t\t\tt++;\n\t\t\t}\n\t\t\tif(a[t]==0)\n\t\t\t{\n\t\t\t\ta[t]++;\n\t\t\t\tt++;\n\t\t\t}\n\t\t\telse if(a[t]<9)\n\t\t\t{\n\t\t\t\ta[t]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[t]=0;\n\t\t\t\ta[t+1]=1;\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n\t\tnum[i]=t;\n\t\tif(num[i-1]>num[i])\n\t\t\tnum[i]=num[i-1];\n\t\tfor(j=num[i]-1;j>=0;j--)\n\t\t\tprintf(\"%d\",a[j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\t\t\n\n\n\n\n", "fixed": "#include<stdio.h>\nint a[1000],c[301],num[301];\nvoid rev(int x,int y)\n{\n\tint i;\n\tint f[1000];\n\tfor(i=x;i<=y;i++)\n\t\tf[i]=a[i];\n\tfor(i=x;i<=y;i++)\n\t\ta[i]=f[y-i];\n}\nint main()\n{\n\tint n,l,j,i,k;\n\tscanf(\"%d\",&l);\n\tk=0;\n\tfor(i=1;i<=l;i++)\n\t{\n\t\tscanf(\"%d\",&c[i]);\n\t\tint t=0;\n\t\tif(c[i]>c[i-1])\n\t\t{\n\t\t\tint k=c[i]-c[i-1];\n\t\t\twhile(k>0)\n\t\t\t{\n\t\t\t\tif(k>9-a[t])\n\t\t\t\t{\n\t\t\t\t\tk=k-(9-a[t]);\n\t\t\t\t\ta[t]=9;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[t]=a[t]+k;\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n\n\t\telse if(c[i]==c[i-1])\n\t\t{\n\t\t\twhile(a[t]==0)\n\t\t\t\tt++;\n\t\t\ta[t]--;\n\t\t\tt++;\n\t\t\twhile(a[t]==9)\n\t\t\t\tt++;\n\t\t\ta[t]++;\n\t\t\tif(a[t-1]>a[0])\n\t\t\t{\n\t\t\t\tint temp=a[0];\n\t\t\t\ta[0]=a[t-1];\n\t\t\t\ta[t-1]=temp;\n\t\t\t}\n\t\t\tif(a[t]==1)\n\t\t\t\tt++;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\tint k=c[i-1]-c[i]+1;\n\t\t\twhile(k>0)\n\t\t\t{\n\t\t\t\tif(a[t]>k)\n\t\t\t\t{\n\t\t\t\t\ta[t]=a[t]-k;\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tk=k-a[t];\n\t\t\t\t\ta[t]=0;\n\t\t\t\t}\n\t\t\t\tt++;\n\t\t\t}\n\t\t\twhile(a[t]==9)\n\t\t\t\tt++;\n\t\t\trev(0,t-1);\n\t\t\ta[t]++;\n\t\t\tif(a[t]==1)\n\t\t\t\tt++;\n\t\t}\n\n\t\tnum[i]=t;\n\t\tif(num[i-1]>num[i])\n\t\t\tnum[i]=num[i-1];\n\t\tfor(j=num[i]-1;j>=0;j--)\n\t\t\tprintf(\"%d\",a[j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\t\t\n\n\n\n\n"}
{"similarity_score": 0.9948051948051948, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8a5d08bcd6f661f8ea2a12e0bf35f478", "bug_code_uid": "8a678b9135aabf49ddd557d62dc9d40b", "src_uid": "d6e44bd8ac03876cb03be0731f7dda3d", "apr_id": "51d834bf8422fdad179837ab5ecf4076", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define ll long long int\n\nint num[100005];\n\nint compare(const void* a,const void* b){\n\treturn *(int*)a - *(int*)b;\n}\n\nint main(){\n\tint men,bound,ope,OPE;\n\tll sum = 0;\n\tscanf(\"%d %d %d\",&men,&bound,&ope);\n\tOPE = ope;\n\tfor(int i = 0;i < men;i++){\n\t\tscanf(\"%d\",&num[i]);\n\t\tsum += num[i];\n\t}\n\tqsort(num,men,sizeof(int),compare);\n\tll b = (ll)bound * (ll)men,sum2 = sum;\n\tif(b < (ll)ope) sum2 += b;\n\telse sum2 += ope;\n\tdouble max = (double)sum2 / (double)men;\n\tif(ope >= men) ope = men - 1;\n\tfor(int i = 0;i < ope;i++){\n\t\tdouble new1 = sum - num[i];\n\t\tsum -= num[i];\n\t\tll b = bound * (men - i - 1);\n\t\tif(b <= (ll)(OPE - i - 1)) new1 += b;\n\t\telse new1 += OPE - i - 1;\n\t\tnew1 /= (double)(men - i - 1);\n\t\tif(new1 > max) max = new1;\n\t}\n\tprintf(\"%f\\n\",max);\n}", "fixed": "#include<stdio.h>\n#define ll long long int\n\nint num[100005];\n\nint compare(const void* a,const void* b){\n\treturn *(int*)a - *(int*)b;\n}\n\nint main(){\n\tint men,bound,ope,OPE;\n\tll sum = 0;\n\tscanf(\"%d %d %d\",&men,&bound,&ope);\n\tOPE = ope;\n\tfor(int i = 0;i < men;i++){\n\t\tscanf(\"%d\",&num[i]);\n\t\tsum += num[i];\n\t}\n\tqsort(num,men,sizeof(int),compare);\n\tll b = (ll)bound * (ll)men,sum2 = sum;\n\tif(b < (ll)ope) sum2 += b;\n\telse sum2 += ope;\n\tdouble max = (double)sum2 / (double)men;\n\tif(ope >= men) ope = men - 1;\n\tfor(int i = 0;i < ope;i++){\n\t\tdouble new1 = sum - num[i];\n\t\tsum -= num[i];\n\t\tll b = (ll)bound * (ll)(men - i - 1);\n\t\tif(b <= (ll)(OPE - i - 1)) new1 += b;\n\t\telse new1 += OPE - i - 1;\n\t\tnew1 /= (double)(men - i - 1);\n\t\tif(new1 > max) max = new1;\n\t}\n\tprintf(\"%f\\n\",max);\n}"}
{"similarity_score": 0.3564154786150713, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9505325ed9ebb62d7eb6d445a4cb61f7", "bug_code_uid": "156636fc2b917c47c68bd4ef3e0aad0f", "src_uid": "fcd88c7b64da4b839cda4273d928429d", "apr_id": "056af807b246a00975c0f863c0b66dd3", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i, len, n, max = 0, pre = 0, nxt= 0;\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n        if(arr[i] == 0 && !pre)\n            pre = i;\n        else if(arr[i] == 0 && !nxt)\n        {\n            nxt = i;\n            len = nxt - pre - 1;\n            if(max < len)\n                max = len;\n            pre = nxt;\n            nxt = 0;\n        }\n    }\n    if(arr[n - 1] = 1 && arr[0] == 1)\n    {\n        len = 2;\n        if(max < len)\n            max = len;\n    }\n    printf(\"%d\", max);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int i, len = 0, n, max = 0;\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(i = 0; i < n; i++)\n        scanf(\"%d\", &arr[i]);\n    for(i = 0; i < 2 * n; i++)\n    {\n        if(arr[i % n])\n        {\n            len++;\n            if(len > max)\n                max = len;\n        }\n        else\n            len = 0;\n    }\n    printf(\"%d\", max);\n    return 0;\n}"}
{"similarity_score": 0.9074243813015582, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "893dac6c7d24ddc5ee5a3b2be4d29400", "bug_code_uid": "cf37b59438555e2c05a5518b2cf7fbfd", "src_uid": "b9f0c38c6066bdafa2e4c6daf7f46816", "apr_id": "9446ac9f8581fed11287c300f4ffee9e", "difficulty": 900, "tags": ["constructive algorithms", "sortings", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n#define N 1002\n\nint main(void)\n{\n    int t,i,le,j;\n    char a[N];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%s\",a);\n        le = strlen(a);\n        for(i=0,j=le/2,le--; i<j && a[i]==a[le-i] ;i++);\n        if(i!=j)\n            puts(a);\n        else\n        {\n            for(i=1,j+=j%2;i<j && a[0]==a[i];i++);\n            a[N-1] = a[0];\n            a[0] = a[i];\n            a[i] = a[N-1];\n            puts(i!=j?a:\"-1\");\n        }\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\n#define N 1002\n\nint main(void)\n{\n    int t,i,le,j;\n    char a[N];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%s\",a);\n        le = strlen(a);\n        for(i=0,j=le/2,le--; i<j && a[i]==a[le-i] ;i++);\n        if(i!=j)\n        {\n            // putchar('+');\n            puts(a);\n        }\n        else\n        {\n            for(i=1,j+=(le+1)%2;i<j && a[0]==a[i];i++);\n            a[N-1] = a[0];\n            a[0] = a[i];\n            a[i] = a[N-1];\n            // putchar('+');\n            puts(i!=j?a:\"-1\");\n        }\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.7896039603960396, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "2d8bb796fac8ffbf60663a5687ff80a6", "bug_code_uid": "e5d6d6f42d7f41cbb47fad7ee7971ba9", "src_uid": "807c5ec37b0ea83ef40550698f1ff498", "apr_id": "f737d9c21794a38a268c1c6afcd246be", "difficulty": 900, "tags": ["dp", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t, n, *a, *out;\r\n    int i, j, k;\r\n    scanf(\"%d\", &t); // no. of test cases\r\n\r\n    for (i = 0; i < t; i++) {\r\n        scanf(\"%d\", &n);   // no. of layers\r\n        a = (int *) malloc(sizeof(int) * n);\r\n        for (j = 0; j < n; j++) \r\n            scanf(\"%d\", a+j);\r\n        \r\n        out = (int *) malloc(sizeof(int) * n);\r\n        int cb;\r\n        for (j = n-1; j >= 0; j--) {\r\n            cb = j - a[j];\r\n            if (cb == j) {\r\n                out[j] = 0;\r\n                continue;\r\n            }\r\n            for (k = j; k > cb && k >= 0; k--)\r\n                out[k] = 1;\r\n            j = cb + 1;\r\n        }\r\n\r\n        for (j = 0; j < n; j++)\r\n            printf(\"%d \", out[j]);\r\n        printf(\"\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint min(int a, int b);\r\n\r\nint main() {\r\n    int t, n, *a, *out;\r\n    int i, j, k;\r\n    scanf(\"%d\", &t); // no. of test cases\r\n\r\n    for (i = 0; i < t; i++) {\r\n        scanf(\"%d\", &n);   // no. of layers\r\n        a = (int *) malloc(sizeof(int) * n);\r\n        for (j = 0; j < n; j++) \r\n            scanf(\"%d\", a+j);\r\n        \r\n        out = (int *) malloc(sizeof(int) * n);\r\n        for (j = 0; j < n; j++) \r\n            out[j] = 0;\r\n        int cb = n - 1, s;\r\n        for (j = n-1; j >= 0; j--) {\r\n            s = min(cb, j);\r\n            cb = min(cb, j - a[j]);\r\n            for (k = s; k > cb && k >= 0; k--)\r\n                out[k] = 1;\r\n        }\r\n\r\n        for (j = 0; j < n; j++)\r\n            printf(\"%d \", out[j]);\r\n        printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nint min(int a, int b) {\r\n    return a < b ? a : b;\r\n}"}
{"similarity_score": 0.9390243902439024, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a178bfa1741bb02517137f44376ddda6", "bug_code_uid": "d09af6f82d75d08f24cb736d1f70c1f8", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "1a934dfd2f27de969169edd52134b768", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n\tint x,i,j,f=0,z=0,h[30];\n\tchar arr[305][305];\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++)\n\t\tfor(j=0;j<x;j++){\n\t\t\tscanf(\" %c\",&arr[i][j]);\n\t\t\th[arr[i][j]-'a']++;\n\t\t}\n\tfor(i=1;i<x-1;i++){\n\t\tfor(j=1;j<x-1;j++)\n\t\t\twhile(arr[i+z][j-z]==arr[i][j] && arr[i+z][j+z]==arr[i][j] && arr[i-z][j-z]==arr[i][j] && arr[i-z][j+z]==arr[i][j]){\n\t\t\t\tf=1;\n\t\t\t\tz++;\n\t\t\t}\n\t\t\tz--;\n\t\t\tif(f){\n\t\t\t\tif(((x*x)-(z*4+1)==h[arr[x/2][x/2]-'a']     z*4+1==h[arr[x/2][x/2]-'a'] ) && (    (x*x)-(z*4+1)==h[arr[0][x/2]-'a']      ||   z*4+1==h[arr[0][x/2]-'a'] )    ){\n\t\t\t\t\tprintf(\"YES\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t}\n\tprintf(\"NO\");\n}\n", "fixed": "#include<stdio.h>\nmain(){\n\tint x,i,j,f=0,z=0,h[30];\n\tchar arr[305][305];\n\tscanf(\"%d\",&x);\n\tfor(i=0;i<x;i++)\n\t\tfor(j=0;j<x;j++){\n\t\t\tscanf(\" %c\",&arr[i][j]);\n\t\t\th[arr[i][j]-'a']++;\n\t\t}\n\tif(x==5 && arr[0][0]!='l' && arr[0][1]!='i'){\n\t\tprintf(\"NO\");\n\t\treturn 0;\n\t}\n\tfor(i=1;i<x-1;i++){\n\t\tfor(j=1;j<x-1;j++)\n\t\t\twhile(arr[i+z][j-z]==arr[i][j] && arr[i+z][j+z]==arr[i][j] && arr[i-z][j-z]==arr[i][j] && arr[i-z][j+z]==arr[i][j]){\n\t\t\t\tf=1;\n\t\t\t\tz++;\n\t\t\t}\n\t\t\tz--;\n\t\t\tif(f){\n\t\t\t\tif(((x*x)-(z*4+1)==h[arr[x/2][x/2]-'a']  ||   z*4+1==h[arr[x/2][x/2]-'a'] ) && (    (x*x)-(z*4+1)==h[arr[0][x/2]-'a']      ||   z*4+1==h[arr[0][x/2]-'a'] )    ){\n\t\t\t\t\tprintf(\"YES\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t}\n\tprintf(\"NO\");\n}\n"}
{"similarity_score": 0.5708460754332314, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "2396a2202d21f21767230e202b4b4cd4", "bug_code_uid": "3acbfbd4c9ccf2b18b44edf8c3e08435", "src_uid": "f3d34922baf84c534e78e283dcadc742", "apr_id": "806b073a38155fbb27827d2b50134de4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int test,array[100],count;\r\n    scanf(\"%d\",&test);\r\n    while(test--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        count = 0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&array[i]);\r\n            if(array[i]==0)\r\n            {\r\n                if(array[i-1]==0)\r\n                    count = count+1;\r\n                else\r\n                    count = count+2;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int test,array[100],count,i;\r\n    scanf(\"%d\",&test);\r\n    while(test--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&array[i]);\r\n        }\r\n        int p=1,q=n;\r\n        while(q>p && array[p+1])\r\n        {\r\n            p++;\r\n        }\r\n        while(q>p && array[q-1])\r\n        {\r\n            q--;\r\n        }\r\n        printf(\"%d\\n\",q-p);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7873051224944321, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ae5496658c800bb12a8a238bc7a82c04", "bug_code_uid": "351290bef1a0619236e29436d5664d8c", "src_uid": "d8fb3822b983b8a8ffab341aee74f56f", "apr_id": "bcb7153e231b9afde21dbbb64fe4c488", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,c,r1,r2,c1,c2,i,j;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        c=0;\r\n        char a[n][n];\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%s\",&a[i]);\r\n        for(i=0;i<n;i++)\r\n        {\r\n          for(j=0;j<n;j++)\r\n          {\r\n              if(a[i][j]=='*'&&c==0)\r\n              {r1=i;c1=j;c=1;}\r\n              else if(a[i][j]=='*'&&c==1)\r\n              {r2=i,c2=j;}\r\n          }\r\n       }\r\n       if(r1==r2){\r\n       a[r1+1][c1]='*';a[r2+1][c2]='*';}\r\n       else if(c1==c2){\r\n       a[r1][c1+1]='*';a[r2][c2+1]='*';}\r\n       else {\r\n       a[r1][c2]='*';a[r2][c1]='*';}\r\n       for(i=0;i<n;i++)\r\n       {\r\n          for(j=0;j<n;j++)\r\n          {\r\n           printf(\"%c\",a[i][j]);}\r\n          printf(\"\\n\");}\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,c,r1,r2,c1,c2,i,j;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        c=0;\r\n        char a[n][n];\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%s\",&a[i]);\r\n        for(i=0;i<n;i++)\r\n        {\r\n          for(j=0;j<n;j++)\r\n          {\r\n              if(a[i][j]=='*'&&c==0)\r\n              {r1=i;c1=j;c=1;}\r\n              else if(a[i][j]=='*'&&c==1)\r\n              {r2=i,c2=j;}\r\n          }\r\n       }\r\n       if(r1==r2){\r\n           if(r1==n-1)\r\n           {a[r1-1][c1]='*';a[r2-1][c2]='*';}\r\n           else\r\n           {a[r1+1][c1]='*';a[r2+1][c2]='*';}\r\n       }\r\n       else if(c1==c2){\r\n           if(c1==n-1)\r\n           {a[r1][c1-1]='*';a[r2][c2-1]='*';}\r\n           else\r\n           {a[r1][c1+1]='*';a[r2][c2+1]='*';}\r\n       }\r\n       else {\r\n       a[r1][c2]='*';a[r2][c1]='*';}\r\n       for(i=0;i<n;i++)\r\n       {\r\n          for(j=0;j<n;j++)\r\n          {\r\n           printf(\"%c\",a[i][j]);}\r\n          printf(\"\\n\");}\r\n    }\r\n}"}
{"similarity_score": 0.9568480300187617, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "11f376bcfc1419437e7da6dcc01ee763", "bug_code_uid": "e0c78daaa1bb0d8e16540aa8d8c145f2", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "b8be196d1e69b0deb03094d972e280b8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int a[100000],n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\",&a[i]);\n    long long int sum=0,r;\n    r=n*(n+1)/2;\n    for(i=0;i<n-1;i++)\n        sum+=a[i];\n    printf(\"%lld\",(r-sum));\n       return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int a[100000],i;\n    long long n;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\",&a[i]);\n    long long int sum=0,r;\n    r=n*(n+1)/2;\n    for(i=0;i<n-1;i++)\n        sum+=a[i];\n    printf(\"%lld\",(r-sum));\n       return 0;\n}\n"}
{"similarity_score": 0.8008948545861297, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "226839cfc57f584ba8cd608b5db63092", "bug_code_uid": "6c16528ed647b04bf47fb8dda157987e", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "d90a66d242eaf6e8004f1fb5b9f54b2e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d;\n    int sum;\n    scanf(\"%d\",&a);\n    sum=(a*(a+1)/2);\n    for(b=0;b<a-1;b++)\n    {\n        scanf(\"%d\",&c);\n        sum-=c;\n    }\n    printf(\"%d\",sum);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,d;\n    long long int sum;\n    scanf(\"%I64d\",&a);\n    sum=(a*(a+1)/2);\n    for(b=0;b<a-1;b++)\n    {\n        scanf(\"%I64d\",&c);\n        sum-=c;\n    }\n    printf(\"%I64d\",sum);\n    return 0;\n\n}\n"}
{"similarity_score": 0.3658940397350993, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "a664bb3bbc450d888c36f0740865c545", "bug_code_uid": "abf6ae90cefcfc595dc01e953bbaa14b", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "a17b2570de47eaecfe2ca3e6aeb728d0", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main () {\n    long long int t, a, b, c, d = 0, q, n = 0;\n    scanf(\"%lld\", &t);\n    for(int x = 0; x < t; x++) {\n        a = 0, b = 0, c = 0, d = 0, n = 0;\n        scanf(\"%lld %lld\", &a, &b);\n        scanf(\"%lld %lld\", &c, &d);\n        n = abs(a - b);\n        long long int p = n * c;\n        if(a > b) {\n            q = d * b;\n        } else {\n            q = d * a;\n        }\n        long long int r = (c * a) + (c * b);\n        if((p + q) > r) {\n            printf(\"%lld\\n\", p + q);\n        } else {\n            printf(\"%lld\\n\", r);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main () {\n    long long int t, x, y, a, b, m, n, p;\n    scanf(\"%lld\", &t);\n    for(int o = 0; o < t; o++) {\n        scanf(\"%lld %lld\", &x, &y);\n        scanf(\"%lld %lld\", &a, &b);\n        if(x < y) {\n            m = b * x;\n            n = a * (y - x);\n        } else if (x > y) {\n            m = b * y;\n            n = a * (x - y);\n        } else {\n            m = b * x;\n            n = 0;\n        }\n        p = (x * a) + (y * a);\n        if((m + n) < p) {\n            printf(\"%lld\\n\", m + n);\n        } else {\n            printf(\"%lld\\n\", p);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.47460757156048017, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d6da9d2b491477fa1cda9b3c1694c600", "bug_code_uid": "0e80c5b68fad38299496935d7945a48a", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "120c670421f09a4c31eeedcf71ba9710", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n \tint n;\n\tscanf (\"%d\", &n);\n\tlong long a[n+5], gt=0;\n\tif (n>=2 && n<=100000) {\n\t\tfor (int i=0; i<n; ++i) {\n\t\t\tscanf (\"%lld\", &a[i]);\n\t\t}\n\t\tfor (int i=0; i<n; ++i) {\n\t\t\tlong long min=pow(10, 18), max=-pow (10, 18);\n\t\t\tfor (int j=0; j<n; ++j) {\n\t\t\t\tgt= abs(a[i]-a[j]);\n\t\t\t\tmax = (max>gt) ? max : gt;\n\t\t\t\tif (gt!=0) min = (min<gt) ? min : gt;\n\t\t\t}\n\t\t\tprintf (\"%lld %lld\\n\", min, max);\n\t\t}\n\t}\n\treturn 0;\n}\n\n// code by nhuquynh.\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint max (int a, int b) {\n\tif (a<b) return b;\n\treturn a;\n}\n\nint min (int a, int b) {\n\tif (a<b) return a;\n\treturn b;\n}\n\nint main()\n{\n \tint n;\n\tscanf (\"%d\", &n);\n\tint a[n+5];\n\tif (n>=2 && n<=100000) {\n\t\tfor (int i=0; i<n; ++i) {\n\t\t\tscanf (\"%d\", &a[i]);\n\t\t}\n\t\tfor (int i=0; i<n; ++i) {\n\t\t\tif (i==0) {\n\t\t\t\tprintf (\"%d %d\", a[1]-a[0], a[n-1]-a[0]);\n\t\t\t}\n\t\t\telse if (i==n-1) {\n\t\t\t\tprintf (\"%d %d\", a[n-1]-a[n-2], a[n-1]-a[0]);\n\t\t\t}\n\t\t\telse printf (\"%d %d\", min(a[i]-a[i-1], a[i+1]-a[i]), max(a[i]-a[0], a[n-1]-a[i]));\n\t\t\tprintf (\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n// code by nhuquynh.\n"}
{"similarity_score": 0.9974683544303797, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "4bf264d78799f1f0b76de8dd53e61036", "bug_code_uid": "d0c1044f47fb3e9e0e537473623e5d81", "src_uid": "f60ea0f2caaec16894e84ba87f90c061", "apr_id": "f3e8daf728a5bc1ec38d51f41b7be299", "difficulty": 1500, "tags": ["constructive algorithms", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    if(n <= 2) {\n        printf(\"%d\\n\", -1);\n    } else {\n        printf(\"%d %d %d\\n\", n, n + 1, n * (n + 1));\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    if(n < 2) {\n        printf(\"%d\\n\", -1);\n    } else {\n        printf(\"%d %d %d\\n\", n, n + 1, n * (n + 1));\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9803600654664485, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "606c4a08b20682d19f21d6bd10a18b9d", "bug_code_uid": "beedb30aedb57636e674bc23d8fc7118", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "9f288b7628189a899b6f92394aeaa442", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int TVatSale, TVBOB, i, j, swap, sum=0;\n    scanf (\"%d %d\", &TVatSale, &TVBOB);\n    int money[TVatSale];\n    for (i=0; i<(TVatSale) ; i++){\n        scanf(\"%d\", &money[i]);\n    }\n    for (j=0; j<(TVatSale-1); j++){\n        for (i=0; i<(TVatSale-1); i++){\n            if (money[i+1]<money[i]){\n                swap = money[i];\n                money[i]= money[i+1];\n                money[i+1] = swap;\n            }\n        }\n    }\n    for (i=0; i<(TVBOB); i++){\n        sum += (-1*money[i]);\n    }\n        printf (\"%d\", sum);\n        return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int TVatSale, TVBOB, i, j, swap, sum=0;\n    scanf (\"%d %d\", &TVatSale, &TVBOB);\n    int money[TVatSale];\n    for (i=0; i<(TVatSale) ; i++){\n        scanf(\"%d\", &money[i]);\n    }\n    for (j=0; j<(TVatSale-1); j++){\n        for (i=0; i<(TVatSale-1); i++){\n            if (money[i+1]<money[i]){\n                swap = money[i];\n                money[i]= money[i+1];\n                money[i+1] = swap;\n            }\n        }\n    }\n    for (i=0; i<(TVBOB); i++){\n        if (money[i]<0)\n        sum += (-1*money[i]);\n    }\n        printf (\"%d\", sum);\n        return 0;\n}\n"}
{"similarity_score": 0.8227571115973742, "equal_cnt": 13, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "2bc33a71581ef16e47506d07883f0e9e", "bug_code_uid": "ee0d4b34654825cfeaceaf0d74e60a01", "src_uid": "27ddccc777ef9040284ab6314cbd70e7", "apr_id": "c4f9f559c43b5d47912f99594149e07c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int test;\n    scanf(\"%d\",&test);\n    for (int i=0;i<test;i++)\n    {\n        int a,b;\n        scanf(\"%d %d\",&a,&b);\n        printf(\"%d\",a+b);\n    }\n    return 0;\n}", "fixed": "    #include <stdio.h>\n     \n    int main()\n    {\n        int test;\n        scanf(\"%d\",&test);\n        for (int i=0;i<test;i++)\n        {\n            int a,b;\n            scanf(\"%d %d\",&a,&b);\n            printf(\"%d\\n\",a+b);\n        }\n        return 0;\n    }"}
{"similarity_score": 0.9249806651198763, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6a269919ecf88a824ddf68c1b21ffc9a", "bug_code_uid": "f6198c8bd9185b54faf9d23f4269cd76", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "2d1cb78c81504804b6901729c79e0a97", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdlib.h>\nint main()\n{\n    int a,n,i,j=0,k=0,l=0,n1[100],n2[100],n3=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a==0) l+=1;\n        if(a>0)  {n2[k]=a;k+=1;}\n        if(a<0)  {n1[j]=a;j+=1;}\n    }\n    if(k==0)\n    {\n        n2[0]=n1[j-2];\n        n2[1]=n1[j-1];\n        j-=2;\n        k+=2;\n    }\n    if(j%2==0)\n    {\n        j-=1;\n        n3=n1[j];\n        l+=1;\n    }\n    printf(\"%d \",j);\n    for(i=0;i<j;i++) printf(\"%d \",n1[i]);\n    printf(\"\\n%d \",k);\n    for(i=0;i<k;i++) printf(\"%d \",n2[i]);\n    printf(\"\\n%d \",l);\n    for(i=0;i<l;i++) printf(\"0 \");\n    if(n3!=0) printf(\"%d\",n3);\n}\n", "fixed": "#include<stdlib.h>\nint main()\n{\n    int a,n,i,j=0,k=0,l=0,n1[100],n2[100],n3=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a==0) l+=1;\n        if(a>0)  {n2[k]=a;k+=1;}\n        if(a<0)  {n1[j]=a;j+=1;}\n    }\n    if(k==0)\n    {\n        n2[0]=n1[j-2];\n        n2[1]=n1[j-1];\n        j-=2;\n        k+=2;\n    }\n    if(j%2==0)\n    {\n        j-=1;\n        n3=n1[j];\n        l+=1;\n    }\n    printf(\"%d \",j);\n    for(i=0;i<j;i++) printf(\"%d \",n1[i]);\n    printf(\"\\n%d \",k);\n    for(i=0;i<k;i++) printf(\"%d \",n2[i]);\n    printf(\"\\n%d \",l);\n    if(n3!=0)l-=1;\n    for(i=0;i<l;i++) printf(\"0 \");\n    if(n3!=0) printf(\"%d\",n3);\n}\n"}
{"similarity_score": 0.7027027027027027, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "9a2951348e069f5e5e05839289ef3694", "bug_code_uid": "49a6b4cb980bdae80e3c46c1d1bcbbe9", "src_uid": "04e2e1ce3f0b4efd2d4dda69748a0a25", "apr_id": "316c86551695044146759c78fb35d120", "difficulty": 1200, "tags": ["bitmasks", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long answer[10], array[100000];\nint length = 0, testcases = 0;\n\nint main(){\n    scanf(\"%d\", &testcases);\n    for(int i = 0; i < testcases;i++){\n        scanf(\"%d\", &length);\n        for(int j = 0; j < length; j++){\n            scanf(\"%d\", &array[j]);\n        }\n        for(int k = 0; k < length; k++){\n            for(int l = k + 1; l < length; l++){\n                if((array[k] & array[l]) >= (array[k] ^ array[l])){\n                    answer[i]++;\n                }\n            }\n        }\n    }\n    for(int m = 0; m < testcases; m++){\n        printf(\"%d\\n\", answer[m]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nlong long answer[10], array[100000], length = 0, count = 0;\nint testcases = 0;\n\nint main(){\n    scanf(\"%d\", &testcases);\n    for(int i = 0; i < testcases;i++){\n        scanf(\"%lld\", &length);\n        for(int j = 0; j < length; j++){\n            scanf(\"%lld\", &array[j]);\n        }\n        for(int k = 0; k < 30; k++){\n            for(int l = 0; l < length; l++){\n                if(array[l] >= (1 << k) && array[l] < (1 << (k+1))){\n                    count++;\n                }\n            }\n                answer[i] += (count * (count - 1))/ 2;\n                count = 0;\n        }\n    }\n    for(int m = 0; m < testcases; m++){\n        printf(\"%lld\\n\", answer[m]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9899244332493703, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7bd98d45fc554cba639fc73e46666ccc", "bug_code_uid": "5713d4976027ad178a896ce0e3e6cc3b", "src_uid": "6c71c828553e43c699237211005873e5", "apr_id": "e9fd6afe276b70f44766afaf0e6e4ad2", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tint i,n, k,mx=0;\n\tscanf(\"%d %d\\n\",&n,&k);\n\tint letters[26];\n\tmemset(letters,0,sizeof(letters));\n\tchar x,z='z'+1;\n\tint s=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%c\",&x);\n\t\tif(x==z)\n\t\t{\n\t\t\ts++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts=1;\n\t\t\tz=x;\n\t\t}\n\t\tif(s==k)\n\t\t{\n\t\t\tletters[z-'a']++;\n\t\t\tif(letters[z-'a']>mx)mx=letters[z-'a'];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",mx );\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tint i,n, k,mx=0;\n\tscanf(\"%d %d\\n\",&n,&k);\n\tint letters[26];\n\tmemset(letters,0,sizeof(letters));\n\tchar x,z='z'+1;\n\tint s=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%c\",&x);\n\t\tif(x==z)\n\t\t{\n\t\t\ts++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts=1;\n\t\t\tz=x;\n\t\t}\n\t\tif(s==k)\n\t\t{\n\t\t\ts=0;\n\t\t\tletters[z-'a']++;\n\t\t\tif(letters[z-'a']>mx)mx=letters[z-'a'];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",mx );\n\treturn 0;\n}"}
{"similarity_score": 0.7687188019966722, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "db612353f8dad4d2e554cd106faae720", "bug_code_uid": "5f1ef9e3494d6d2b8def48e3c952c0e8", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "44ba295ccc04bbd358ed7fd751d8e81d", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,b,c,n0=0,n1=0;\n    char a;\n    scanf(\"%d\",&n);\n    for(i=1; i<=n ;i++)\n    {\n        scanf(\"%c\\n\", &a);\n        if(a=='1')\n        {\n            n1++;\n        }\n        else\n        {\n            n0++;\n        }\n    }\n    b=(n1 < n0 ? n1: n0);\n    printf(\"%d\",n-2*b);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,b,c,n0=0,n1=0;\n    char a;\n    scanf(\"%d\",&n);\n    for(i=0; i<n ;i++)\n    {\n        scanf(\"\\n%c\", &a);\n        if(a=='1')n1++;\n        else if(a=='0') n0++;\n    }\n    b=(n1 > n0 ? n0: n1);\n    printf(\"%d\",n-2*b);\n    return 0;\n}\n"}
{"similarity_score": 0.9917184265010351, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "54162d11a90e7921bbc5365bd7e0374b", "bug_code_uid": "e585524209b8c6bb8b2f7da9efada031", "src_uid": "55bd1849ef13b52788a0b5685c4fcdac", "apr_id": "a42ce8a0711f16da3db6446a38d4ee95", "difficulty": 1300, "tags": ["implementation", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define NUM (100010)\n\nint a[NUM], cnt[NUM];\n\nint main(){\n\tint n, k, m;\n\tscanf(\"%d%d%d\", &n, &k, &m);\n\tint i;\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tcnt[a[i]%m]++;\n\t}\n\tfor(i = 0; i < n; i++){\n\t\tif(cnt[i] >= k){\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(i == n){\n\t\tprintf(\"No\\n\");\n\t}\n\telse{\n\t\tprintf(\"Yes\\n\");\n\t\tint j;\n\t\tfor(j = 0; j < n; j++){\n\t\t\tif(a[j]%m == i){\n\t\t\t\tprintf(\"%d \", a[j]);\n\t\t\t\tk--;\n\t\t\t\tif(k == 0) break;\n\t\t\t}\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define NUM (100010)\n\nint a[NUM], cnt[NUM];\n\nint main(){\n\tint n, k, m;\n\tscanf(\"%d%d%d\", &n, &k, &m);\n\tint i;\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tcnt[a[i]%m]++;\n\t}\n\tfor(i = 0; i < NUM; i++){\n\t\tif(cnt[i] >= k){\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(i == NUM){\n\t\tprintf(\"No\\n\");\n\t}\n\telse{\n\t\tprintf(\"Yes\\n\");\n\t\tint j;\n\t\tfor(j = 0; j < n; j++){\n\t\t\tif(a[j]%m == i){\n\t\t\t\tprintf(\"%d \", a[j]);\n\t\t\t\tk--;\n\t\t\t\tif(k == 0) break;\n\t\t\t}\n\t\t}\n\t}\n}"}
{"similarity_score": 0.9991532599491956, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1fbc1fd6b254c6a6f2e22293e26bb002", "bug_code_uid": "53b2daa0913a69eaa88e706a1056a5cb", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "cc0c145eff7b482a959593c3cb8221e1", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,ct_0,ct_5;\n    int ara[1000];\n    scanf(\"%d\",&n);\n    ct_0=0;\n    ct_5=0;\n\n    for(i=0;i<=n;i++){\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]==0){\n            ct_0++;\n        }\n        else{\n            ct_5++;\n        }\n    }\n    if(ct_0==0){\n        printf(\"-1\");\n    }\n    else{\n        if(ct_5>=9){\n            for(i=1;i<=(ct_5/9)*9;i++){\n                printf(\"5\");\n            }\n            for(i=1;i<=ct_0;i++){\n                printf(\"0\");\n            }\n        }\n        else{\n            printf(\"0\");\n        }\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,ct_0,ct_5;\n    int ara[1000];\n    scanf(\"%d\",&n);\n    ct_0=0;\n    ct_5=0;\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n        if(ara[i]==0){\n            ct_0++;\n        }\n        else{\n            ct_5++;\n        }\n    }\n    if(ct_0==0){\n        printf(\"-1\");\n    }\n    else{\n        if(ct_5>=9){\n            for(i=1;i<=(ct_5/9)*9;i++){\n                printf(\"5\");\n            }\n            for(i=1;i<=ct_0;i++){\n                printf(\"0\");\n            }\n        }\n        else{\n            printf(\"0\");\n        }\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9935760171306209, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7334cd873b87230e9e9e671bbfdd2934", "bug_code_uid": "408943a6d9b6ee634ed7ed917d5ebf1e", "src_uid": "e0ec0cd81d2ec632ef89d207d80fa8a3", "apr_id": "3eeb4a1b845d7dbb1b182b6a5a8d6e5c", "difficulty": 800, "tags": ["math", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int a[7];\r\n        for(int i=0;i<7;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        printf(\"%d %d %d\\n\",a[6]-a[5],a[1],a[5]-a[1]);\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int a[7];\r\n        for(int i=0;i<7;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        printf(\"%d %d %d\\n\",a[6]-a[5],a[1],a[5]-a[1]);\r\n}\r\n}"}
{"similarity_score": 0.9890981169474727, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5280ab5788be12c7a6e7bdae14223511", "bug_code_uid": "ecc3f9085b32ab3536ebc413089ec482", "src_uid": "b3978805756262e17df738e049830427", "apr_id": "cf8f5149f45a0da0c2fcf68f999b6a54", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"input.txt\",\"r\", stdin);\n\t\tfreopen(\"output.txt\",\"w\", stdout);\n\t#endif\n\tint n,j;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++)\n\t{\n\t\tint long long a,b,p;\n\t\tscanf(\"%lld%lld\",&a,&b);\n\t\tif (a>=b)\n\t\t\tprintf(\"YES\");\n\t\telse\n\t\t{\n\t\t\tp=a;int flag=0;\n\t\t\twhile(p<b && !flag)\n\t\t\t{\n\t\t\t\tp=p%2?p-1:p;\n\t\t\t\tp=p*3/2;\n\t\t\t\tif(p==a ||p==0)\n\t\t\t\t{\n\t\t\t\t\tflag=1;break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(p>=b)\n\t\t\t\tprintf(\"YES\");\n\t\t\telse\n\t\t\t\tprintf(\"NO\");\t\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"input.txt\",\"r\", stdin);\n\t\tfreopen(\"output.txt\",\"w\", stdout);\n\t#endif\n\tint n,j;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++)\n\t{\n\t\tint long long a,b,p;\n\t\tscanf(\"%lld%lld\",&a,&b);\n\t\tif (a>=b)\n\t\t\tprintf(\"YES\");\n\t\telse\n\t\t{\n\t\t\tp=a;int flag=0;\n\t\t\twhile(p<b && !flag)\n\t\t\t{\n\t\t\t\tp=p%2?p-1:p;\n\t\t\t\tp=p*3/2;\n\t\t\t\tif(p==a ||p<=0)\n\t\t\t\t{\n\t\t\t\t\tflag=1;break;\n\t\t\t\t}\n\t\t\t\ta=p;\n\t\t\t}\n\t\t\tif(p>=b)\n\t\t\t\tprintf(\"YES\");\n\t\t\telse\n\t\t\t\tprintf(\"NO\");\t\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9984639016897081, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b24536b8cdd98ed518eab118898f2b05", "bug_code_uid": "615d0fe5184824889df305aec4e3cb24", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "898352ee6b4d1eac841937e713226a6b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int n,c=1,i,d;\n    scanf(\"%I64d %I64d\",&n,&d);\n    long long int t[n];\n\n    scanf(\"%I64d\",&t[0]);\n\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%%I64d\",&t[i]);\n        if((t[i]-t[i-1])>d)\n            c=1;\n        else\n            c++;\n    }\n    printf(\"%I64d\\n\",c);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int n,c=1,i,d;\n    scanf(\"%I64d %I64d\",&n,&d);\n    long long int t[n];\n\n    scanf(\"%I64d\",&t[0]);\n\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%I64d\",&t[i]);\n        if((t[i]-t[i-1])>d)\n            c=1;\n        else\n            c++;\n    }\n    printf(\"%I64d\\n\",c);\n\n    return 0;\n}"}
{"similarity_score": 0.26229508196721313, "equal_cnt": 17, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "3e5f0902bbb0660030268892bba8007a", "bug_code_uid": "e9f101e974f2054a3f4033367a5ae8ac", "src_uid": "55270ee4e6aae7fc0c9bb070fcbf5560", "apr_id": "f995c0b8bb617bb94549c43ffa24e1ed", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint a[100050],flags[2000500],result[100050];\nint cmp(const void *m,const void *k);\nint x,y;\nint main(void){\n\tint n,i,temp,disx,disy;\n\tscanf(\"%d%d%d\",&n,&x,&y);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tflags[0] = 0;disx = y;disy = x;\n\tfor(i=1;i<x+y;i++){\n\t\tif (disx == disy){\n\t\t\tflags[i] = 0;\n\t\t\tflags[i+1] = 0;\n\t\t\ti++;}\n\t\telse\n\t\t\tflags[i] = disx>disy?2:1;\n\t\tif (flags[i] == 0){\n\t\t\tdisx = y;\n\t\t\tdisy = x;\n\t\t}\n\t\telse if(flags[i] == 1){\n\t\t\tdisy -= disx;\n\t\t\tdisx = y;\n\t\t}\n\t\telse{\n\t\t\tdisx -= disy;\n\t\t\tdisy = x;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\ttemp = flags[a[i] % (x+y)];\n\t\tswitch(temp){\n\t\t\tcase 0:printf(\"Both\\n\");break;\n\t\t\tcase 1:printf(\"Vanya\\n\");break;\n\t\t\tcase 2:printf(\"Vova\\n\");break;\n\t\t}\n\t}\n\t//system(\"pause\");\n\treturn 0;\n}\n\n\n\n", "fixed": "#include <stdio.h>\n#define SIZE 100050\nint a[SIZE],b[SIZE],flags[SIZE];\nint cmp(const void *a,const void *k);\nint main(void){\n\tint n,r,i,m;\n\tlong long int sum = 0;\n\tlong long int essay = 0,avg;\n\tscanf(\"%d%d%I64d\",&n,&r,&avg);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\tflags[i] = i;\n\t\tsum += a[i];\n\t}\n\tqsort(flags,n,sizeof(flags[0]),cmp);\n\tsum = avg * n - sum;\n\tfor(i=0;sum>0;i++){\n            m = r-a[flags[i]]>sum?sum:r-a[flags[i]];\n\t\t\tsum -= m;\n\t\t\tessay += (long long int)b[flags[i]] * m;\n\t\t}\n\tprintf(\"%I64d\",essay);\n\t//system(\"pause\");\n\treturn 0;\n}\n\nint cmp(const void *a,const void *k){\n\treturn b[*(int *)a] - b[*(int *)k];}\n"}
{"similarity_score": 0.9988545246277205, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3b643ae44c1a2333a3528acefd2bcb02", "bug_code_uid": "462c85368421062295a42c3d42cd2704", "src_uid": "f146808eb6e0ee04d531e7222a53d275", "apr_id": "2c11541421d88088f902e3714cc18068", "difficulty": 1300, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint n;\n\tlong long int *a, k = 0, p;\n\tscanf(\"%d\", &n);\n\tif(n == 0 || n == 1)\n\t{\n\t\tprintf(\"%lli\", k);\n\t\treturn 0;\n\t}\n\ta =(long long int *)malloc(n * sizeof(long long int));\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%lli\", &a[i]);\n\t}\n\tif(a[n - 1] > a[0])\n\t\tk = a[0];\n\telse\n\t\tk = a[n - 1];\n\tk /= (n - 1);\n\tp = n / 2;\n\tif(p % 2 == 0)\n\t\tfor(int i = 1, min; i < p; i++)\n\t\t{\n\t\t\tif(a[i] > a[n - 1])\n\t\t\t\tmin = a[n - 1];\n\t\t\telse\n\t\t\t\tmin = a[i];\n\t\t\tmin /= (n - 1 - i);\n\t\t\tif(k > min)\n\t\t\t\tk = min;\n\t\t}\n\telse\n\t\tfor(int i = 1, min; i <= p; i++)\n\t\t{\n\t\t\tif(a[i] > a[n - 1])\n\t\t\t\tmin = a[n - 1];\n\t\t\telse\n\t\t\t\tmin = a[i];\n\t\t\tmin /= (n - 1 - i);\n\t\t\tif(k > min)\n\t\t\t\tk = min;\n\t\t}\n\tfor(int i = p, min; i < n; i++)\n\t{\n\t\tif(a[i] > a[0])\n\t\t\tmin = a[0];\n\t\telse\n\t\t\tmin = a[i];\n\t\tmin /= (i);\n\t\tif(k > min)\n\t\t\tk = min;\n\t}\n\tprintf(\"%lli\", k);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint n;\n\tlong long int *a, k = 0, p;\n\tscanf(\"%d\", &n);\n\tif(n == 0 || n == 1)\n\t{\n\t\tprintf(\"%lli\", k);\n\t\treturn 0;\n\t}\n\ta =(long long int *)malloc(n * sizeof(long long int));\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%lli\", &a[i]);\n\t}\n\tif(a[n - 1] > a[0])\n\t\tk = a[0];\n\telse\n\t\tk = a[n - 1];\n\tk /= (n - 1);\n\tp = n / 2;\n\tif(n % 2 == 0)\n\t\tfor(int i = 1, min; i < p; i++)\n\t\t{\n\t\t\tif(a[i] > a[n - 1])\n\t\t\t\tmin = a[n - 1];\n\t\t\telse\n\t\t\t\tmin = a[i];\n\t\t\tmin /= (n - 1 - i);\n\t\t\tif(k > min)\n\t\t\t\tk = min;\n\t\t}\n\telse\n\t\tfor(int i = 1, min; i <= p; i++)\n\t\t{\n\t\t\tif(a[i] > a[n - 1])\n\t\t\t\tmin = a[n - 1];\n\t\t\telse\n\t\t\t\tmin = a[i];\n\t\t\tmin /= (n - 1 - i);\n\t\t\tif(k > min)\n\t\t\t\tk = min;\n\t\t}\n\tfor(int i = p, min; i < n; i++)\n\t{\n\t\tif(a[i] > a[0])\n\t\t\tmin = a[0];\n\t\telse\n\t\t\tmin = a[i];\n\t\tmin /= (i);\n\t\tif(k > min)\n\t\t\tk = min;\n\t}\n\tprintf(\"%lli\", k);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6751754945756222, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "368a8a22d1f19ef40b2d65503ccbf457", "bug_code_uid": "ee1794c765e0cba623b5a0be1a7174f8", "src_uid": "c9b322a9138410a82e541179272eb6bf", "apr_id": "a7a08614e64939a0c8045c7e57e63465", "difficulty": 1300, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint min(int a, int b)\n{\n    if (a < b)\n    {\n        return a;\n    }\n    else\n    {\n        return b;\n    }\n}\n\n\nint compare(const void * x2, const void * x1)\n{\n  return ( *(int*)x1 - *(int*)x2 );\n}\n\nint main()\n{\n\n    int i, n, f, a[100000][2];\n    scanf(\"%d %d\", &n, &f);\n\n    for (i = 0; i < n; ++i)\n    {\n        int t, p;\n        scanf(\"%d%d\", &t, &p);\n        a[i][0] = min(2*t, p);\n        a[i][1] = min(t, p);\n    }\n    //printf(\"\\n\\n%d %d\\n%d %d\\n%d %d\", a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1]);\n    qsort (a, n, sizeof(a[i]), compare);\n    //printf(\"\\n\\n%d %d\\n%d %d\\n%d %d\", a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1]);\n    long long s = 0;\n    for ( i = 0; i < f; ++i)\n    {\n        s += a[i][0];\n        //printf(\"%d\\n\", s);\n    }\n    for (i = f; i <= n; ++i)\n    {\n        s += a[i][1];\n    }\n    printf(\"%I64d\", s);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint min(int a, int b)\n{\n    if (a < b)\n    {\n        return a;\n    }\n    else\n    {\n        return b;\n    }\n}\n\n\nint compare(const void * x2, const void * x1)\n{\n  return ( *(int*)x1 - *(int*)x2 );\n}\n\nint main()\n{\n\n    int i, n, f, a[100005];\n    scanf(\"%d %d\", &n, &f);\n    long long s = 0;\n\n    for (i = 0; i < n; ++i)\n    {\n        int t, p;\n        scanf(\"%d%d\", &t, &p);\n        s += min(t, p);\n        a[i] = min(2*t, p) - min(p, t);\n    }\n    qsort (a, n, sizeof(a[i]), compare);\n    for (i = 0; i < f; ++i)\n    {\n        s += a[i];\n    }\n    printf(\"%I64d\", s);\n    return 0;\n}\n"}
{"similarity_score": 0.9544863459037711, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0660ec4345f5e9cda9d765cc717c4d5a", "bug_code_uid": "fcecb69444e741d31a93437ffb9527b0", "src_uid": "cc4cdcd162a83189c7b31a68412f3fe7", "apr_id": "fe4841c28fe2a1d4c25e0b638e82e954", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint check(char s[],int n)\n{\n\tint f=0,l=n-1;\n\twhile (f<l)\n\t{\n\t\tif(fabs( (int)s[f]-(int)s[l] )>2)\n\t\t {\n\t\t \treturn 0;\n\t\t }\n\t\t f++;l--;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tchar s[n];\n\t\tscanf(\"%s\",s);\n\t\tif(check(s,n)) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint check(char s[],int n)\n{\n\tint f=0,l=n-1;\n\twhile (f<l)\n\t{\n\t\tif(fabs( (int)s[f]-(int)s[l] )>2 || fabs( (int)s[f]-(int)s[l] )==1 )\n\t\t {\n\t\t \treturn 0;\n\t\t }\n\t\t f++;l--;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tchar s[n];\n\t\tscanf(\"%s\",s);\n\t\tif(check(s,n)) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9681372549019608, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8901c18815e4189512820cdecb9e9ed0", "bug_code_uid": "5ec9ef0dc70cf27dedeab5987055f483", "src_uid": "838e643a978adbeed791a24ac1046ab5", "apr_id": "a44b7360ba1da03236546169e8ada478", "difficulty": 1300, "tags": ["data structures", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,w,sum=0,temp=0,i,j,a[1000005];\n    double res;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0;i<k;i++){\n            scanf(\"%d\",&a[i]);\n            temp=temp+a[i];\n    }\n    sum=sum+temp;\n    for(i=k;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        temp=temp+(a[i]-a[i-k]);\n        sum=sum+temp;\n    }\n    w=n-k+1;\n    res=(double)sum/w;\n    printf(\"%.6lf\",res);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,w,i,j,a[1000005];\n    double res,sum=0,temp=0;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0;i<k;i++){\n            scanf(\"%d\",&a[i]);\n            temp=temp+a[i];\n    }\n    sum=sum+temp;\n    for(i=k;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        temp=temp+(a[i]-a[i-k]);\n        sum=sum+temp;\n    }\n    w=n-k+1;\n    res=(double)sum/w;\n    printf(\"%.6lf\",res);\n    return 0;\n}\n"}
{"similarity_score": 0.9983974358974359, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "12896decf1047d9bedd07b4a7c4bf2ae", "bug_code_uid": "5c64b85d301b7109c7ba04b1e7053ad6", "src_uid": "621c82478be3dadcf60c383ba078a49e", "apr_id": "572f5196e30ad66f258edd17d307963c", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n    \n    long long int i,n,a=0,b=0,c=0,d=0;\n    long long int Score=0;\n    char C;\n    scanf(\"%lld\",&n);\n    char A[n],B[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c\",&A[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c\",&B[i]);\n        if(A[i]=='0' && B[i]=='1')\n        {\n            a++;\n        }\n        if(A[i]=='1' && B[i]=='0')\n        {\n            b++;\n        }\n        if(A[i]=='0' && B[i]=='0')\n        {\n            c++;\n        }\n        if(A[i]=='1' && B[i]=='1')\n        {\n            d++;\n        }\n    }\n    Score = a*b + b*c + c*d;\n    printf(\"%l64d\",Score);\n}", "fixed": "#include<stdio.h>\n\nint main() {\n    \n    long long int i,n,a=0,b=0,c=0,d=0;\n    long long int Score=0;\n    char C;\n    scanf(\"%lld\",&n);\n    char A[n],B[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c\",&A[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c\",&B[i]);\n        if(A[i]=='0' && B[i]=='1')\n        {\n            a++;\n        }\n        if(A[i]=='1' && B[i]=='0')\n        {\n            b++;\n        }\n        if(A[i]=='0' && B[i]=='0')\n        {\n            c++;\n        }\n        if(A[i]=='1' && B[i]=='1')\n        {\n            d++;\n        }\n    }\n    Score = a*b + b*c + c*d;\n    printf(\"%I64d\",Score);\n}"}
{"similarity_score": 0.9724907063197026, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "47f5b243354e79fbb08d6ce13e30db9e", "bug_code_uid": "41822d7f23b2d5281174fe1e4a2ae63c", "src_uid": "6581dbaff7eb52b63ccfe9c0c4117c09", "apr_id": "47b0afd67519a0e3159c33297745544d", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar a[10000];\n\tint i,j,k,l,count1=0,count2=0,count3=0,flaga=0,flagb=0,flagc=0;\n\tscanf(\"%s\",a);\n\tl = strlen(a);\n\tint f=0;\n\tif(a[0]=='a'){\n    flaga=1;\n\tfor(i=0;i<l;i++){\n\t\tif(a[i]=='a') count1++;\n\t\tif(a[i]=='b'){\n\t\tflagb=1;\n\t\tbreak;\n\t\t}\n\t\tif(a[i]=='c') f++;\n    }\n   }\n    for(j=i-1;j<l;j++){\n    \tif(a[j]=='b') count2++;\n    \tif(a[j]=='c'){\n    \t\tflagc=1;\n    \t\tbreak;\n\t\t}\n\t\tif(a[j]=='a') f++;\n\t}\n\t//printf(\"%d\",j);\n\tfor(k=j-1;k<l;k++){\n\t\tif(a[k]=='c') count3++;\n\t\tif(a[k]=='b'||a[k]=='a') f++;\n\t}\n\tif(f==0&&flaga==1&&flagb==1&&flagc==1&&(count1==count3||count2==count3)) \n\tprintf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\t\n\t\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar a[10000];\n\tint i,j,k,l,count1=0,count2=0,count3=0,flaga=0,flagb=0,flagc=0;\n\tscanf(\"%s\",a);\n\tl = strlen(a);\n\tint f=0;\n\tif(a[0]=='a'){\n    flaga=1;\n\tfor(i=0;i<l;i++){\n\t\tif(a[i]=='a') count1++;\n\t\tif(a[i]=='b'){\n\t\tflagb=1;\n\t\tbreak;\n\t\t}\n\t\tif(a[i]=='c') f++;\n    }\n   }\n    for(j=i;j<l;j++){\n    \tif(a[j]=='b') count2++;\n    \tif(a[j]=='c'){\n    \t\tflagc=1;\n    \t\tbreak;\n\t\t}\n\t\tif(a[j]=='a') f++;\n\t}\n\tfor(k=j;k<l;k++){\n\t\tif(a[k]=='c') count3++;\n\t\tif(a[k]=='b'||a[k]=='a') f++;\n\t}\n\tif(f==0&&flaga==1&&flagb==1&&flagc==1&&(count1==count3||count2==count3)) \n\tprintf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\t\n\t\n\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.48330683624801274, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "adb53de7fed69e830e7e08230013958c", "bug_code_uid": "029c3d3aae07c7e6d6e16699988c551b", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "f92137bdd3494d1275f08fd0cc8f8686", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int t,first=0,second=0;\n    char str[105]={0},str2[105]={0};\n    scanf(\"%d\",&t);\n    while(t--){\n        char temp[105]={0};\n        if(str[0]==0){\n            scanf(\"%s\",str);\n            continue;\n        }\n        if(str2[0]==0){\n            scanf(\"%s\",str2);\n            continue;\n        }\n        scanf(\"%s\",temp );\n        if(strcmp(str,temp)==0){\n            first++;\n        }\n        else{\n            second++;\n        }\n\n    }\n    if(first>second){\n        printf(\"%s\\n\",str);\n    }\n    else{\n        printf(\"%s\\n\",str2);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int t,first=0,second=0;\n    char str[105]={0},str2[105]={0};\n    scanf(\"%d\",&t);\n    while(t--){\n        char temp[105]={0};\n        if(str[0]==0){\n            scanf(\"%s\",str);\n            first++;\n            continue;\n        }\n        scanf(\"%s\",temp );\n        if(str2[0]==0&&strcmp(str,temp)){\n            strcpy(str2,temp);\n            second++;\n            continue;\n        }\n        if(strcmp(str,temp)==0){\n            first++;\n        }\n        else{\n            second++;\n        }\n\n    }\n    if(first>second){\n        printf(\"%s\\n\",str);\n    }\n    else{\n        printf(\"%s\\n\",str2);\n    }\n}\n"}
{"similarity_score": 0.5714285714285714, "equal_cnt": 26, "replace_cnt": 18, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "b3f58dbb3c3f65382c491e15ddfed8b7", "bug_code_uid": "77333b55febe670307ea41bcdc3b5f14", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "e5882c0b44af0631b92569bf457e7458", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n\t\nint main(){\n\t\n\tchar s[20000],t[20000];\n\tscanf(\"%s\\n%s\",s,t);\n\tint x=strlen(s);\n\tint y=strlen(t);\n\tint l,k=0;\n\tl=x+y;\n\tint i,j;\n\tfor(i=x-1,j=y-1;(i>=0&&j>=0);i--,j--)\n\t{\n\t   \n\t    if(s[i]==t[j])\n\t     k++;\n\t    else\n\t     break;\n\t    \n\t}\n\t\n\tprintf(\"%d\",l-(2*k));\n\treturn 0;\n}\t", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int x,y,i,j,c;\n    char a[200005],b[200005];\n    scanf(\"%s%s\",&a,&b);\n    x=strlen(a);\n    y=strlen(b);\n    for(i=x-1,j=y-1,c=0;i>=0 && j>=0;i--,j--)\n    {\n        if(a[i]==b[j])\n        c++;\n        else\n        break;\n    }\n    printf(\"%d\",x+y-2*c);\n    \n}"}
{"similarity_score": 0.8662420382165605, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "eba0ea288d3257cc10164e7471472a41", "bug_code_uid": "1416dbfc654c97d2e812561460c847a3", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "63fb7f7719679a8bc5339d0eac505085", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\nint a,b,c,max=0;\nscanf(\"%d%d\",&a,&b);\nc=c-a+b;\nif(max<c)\nmax=c;\n}\nprintf(\"%d\",max);\n}", "fixed": "#include<stdio.h>\nint main(){\nint t,max=0,c=0;\nscanf(\"%d\",&t);\nfor(int i=0;i<t;i++)\n{\nint a,b;\nscanf(\"%d%d\",&a,&b);\nc=c-a+b;\nif(max<c)\nmax=c;\n}\nprintf(\"%d\",max);\n}"}
{"similarity_score": 0.1712538226299694, "equal_cnt": 20, "replace_cnt": 12, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "d38b509180190057704f832bf2110b21", "bug_code_uid": "dd2000208620a578fe79b61219768e43", "src_uid": "ee105b664099808143a94a374d6d5daa", "apr_id": "df76cb4d0732507f141f68cc14ecd5d4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nlong long int power(long long int x, long long int y)\n{\n  long long int res=1;\n  for (long long int m=1;m<=y;m++)\n  {\n      res*=x;\n  }\n\n\n   return res;\n\n\n}\nint main()\n{\n    long long int i,j,k,b;\n    scanf(\"%lld%lld\",&b,&k);\n    long long int a[b+100000];\n    for (i=0;i<k;i++)\n        scanf(\"%lld\",&a[i]);\n    long long int sum=0;\n    for(i=0,j=k-1;i<k,j>=0;j--,i++)\n        sum=sum+(a[i]*(power(b,j)));\n    if(sum%2==0)\n        printf(\"even\\n\");\n    else\n        printf(\"odd\\n\");\n\n\n\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n   long long   int b,k,x;\n    scanf(\"%lld%lld\",&b,&k);\n   long long   int a[100000];\n  long long  int i,j,cnt1=0,cnt2=0;\n    for (i=0;i<k;i++) {\n        scanf(\"%lld\",&a[i]);\n        if (i<k-1 && (a[i])%2!=0)\n            cnt1++;\n\n    }\n   // printf(\"%d\",cnt1);\n    if(b%2==0) {\n        if(a[k-1]%2==0)\n            printf(\"even\\n\");\n        else\n            printf(\"odd\\n\");\n    }\n    else{\n\n        if (a[k-1]%2==0) {\n            if (cnt1%2==0)\n                printf(\"even\\n\");\n            else\n                printf(\"odd\\n\");\n        }\n        else {\n            if(cnt1%2==0)\n                printf(\"odd\\n\");\n            else\n                printf(\"even\\n\");\n\n\n\n\n\n        }\n\n\n\n\n\n\n\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9970674486803519, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b6ef8c26f9a91f9befdf480c5011ed84", "bug_code_uid": "fac84d4d82d305d6f3ac161de301b066", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "99d0d447235906d4168c2d5ad0d75109", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, p, q, a, count = 0;\n    int level[103];\n\n    scanf(\"%d %d\", &n, &p);\n\n    for(int i = 0; i < p; i++){\n        scanf(\"%d\", &a);\n        level[a] = 1;\n    }\n\n    scanf(\"%d\", &q);\n    for(int i = 0; i < q; i++){\n        scanf(\"%d\", &a);\n        level[a] = 1;\n    }\n\n    for(int i = 0; i < n; i++){\n        count += level[i];\n    }\n\n    if(count == n){\n        printf(\"I become the guy.\\n\");\n    }\n\n    else {\n        printf(\"Oh, my keyboard!\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, p, q, a, count = 0;\n    int level[103];\n\n    scanf(\"%d %d\", &n, &p);\n\n    for(int i = 0; i < p; i++){\n        scanf(\"%d\", &a);\n        level[a] = 1;\n    }\n\n    scanf(\"%d\", &q);\n    for(int i = 0; i < q; i++){\n        scanf(\"%d\", &a);\n        level[a] = 1;\n    }\n\n    for(int i = 1; i <= n; i++){\n        count += level[i];\n    }\n\n    if(count == n){\n        printf(\"I become the guy.\\n\");\n    }\n\n    else {\n        printf(\"Oh, my keyboard!\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9965156794425087, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e56a7c62b9196490f17e125df024337b", "bug_code_uid": "5460bb0dbe17ae6c0b1bd368ae63f652", "src_uid": "02062d1afe85e3639edddedceac304f4", "apr_id": "4774b4383aae132ee55a5f88327bd9d5", "difficulty": 1100, "tags": ["dp", "binary search", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N \t2600\n\nint cards[N];\n\nvoid pre () {\n\tint i, j;\n\tfor (i = 1; i < N; i++) {\n\t\tcards[i] = cards[i - 1] + (i - 1) * 3 + 2;\n\t}\n}\n\nint main () {\n\tpre ();\n\n\tint t, n, i, s, tt;\n\tscanf(\"%d\", &t);\n\n\twhile (t--) {\n\t\tscanf(\"%d\", &n);\n\n\t\ts = 0;\n\t\tfor (i = N - 1; i >= 1 && n >= 2; i--) {\n\t\t\tif (n / cards[i] > 0) {\n\t\t\t\ttt = n / cards[i];\n\t\t\t\tn -= tt * cards[i];\n\t\t\t\ts += tt;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%d\\n\", s);\n\t}\n\n}", "fixed": "#include <stdio.h>\n\n#define N \t26000\n\nint cards[N];\n\nvoid pre () {\n\tint i, j;\n\tfor (i = 1; i < N; i++) {\n\t\tcards[i] = cards[i - 1] + (i - 1) * 3 + 2;\n\t}\n}\n\nint main () {\n\t\n\tpre ();\n\n\tint t, n, i, s, tt;\n\tscanf(\"%d\", &t);\n\n\twhile (t--) {\n\t\tscanf(\"%d\", &n);\n\n\t\ts = 0;\n\t\tfor (i = N - 1; i >= 1 && n >= 2; i--) {\n\t\t\tif (n / cards[i] > 0) {\n\t\t\t\ttt = n / cards[i];\n\t\t\t\tn -= tt * cards[i];\n\t\t\t\ts += tt;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%d\\n\", s);\n\t}\n\n}"}
{"similarity_score": 0.9266155531215772, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "88fb66065a8736bf1676fc277580ea3e", "bug_code_uid": "89354a69448ed77c0bf2bb86a5eb91ce", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "e9ea9180936c587c27444fe7f097956f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,p,count;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    p=0;\n    count=0\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        {\n            p=p+1;\n        }\n        else\n        {\n            if(p>=1)\n            {\n                p=p-1;\n            }\n            else\n            {\n                count++;\n            }\n        }\n    }\n    printf(\"%d\",count);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,p,count;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    p=0;\n    count=0;\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>0)\n        {\n            p=p+a[i];\n        }\n        else\n        {\n            if(p>=1)\n            {\n                p=p-1;\n            }\n            else\n            {\n                count++;\n            }\n        }\n    }\n    printf(\"%d\",count);\n}"}
{"similarity_score": 0.40266469282013323, "equal_cnt": 23, "replace_cnt": 18, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "f0d5914228f7e9ac01c3ae865cd42cdd", "bug_code_uid": "3e2834a31ec6378a40b8a2b8c0b237e0", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "3aa9171b416ea5ee8988d725d457f443", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n\n    for(int i=0; i<n; i++){\n        int t;\n        scanf(\"%d\", &t);\n        int ar[100];\n        for(int i=0; i<t; i++){\n            scanf(\"%d\", &ar[i]);\n        }\n\n        int count = 0;\n        int counter[101] = {0};\n        for(int i=0; i<t; i++){\n            int val = ar[i];\n            counter[val]++;\n        }\n\n        for(int value=0; value<101; value++){\n            if(counter[value] > 2){\n                printf(\"%d\\n\", value);\n                count = 1;\n                break;\n            }\n        }\n        if(count == 0){\n            printf(\"%d\\n\", -1);\n        }\n    }\n    return 0;\n}\n\t\t\t \t    \t    \t  \t   \t\t   \t\t \t\t", "fixed": "#include<stdio.h>\n\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++){\n        int n;\n        scanf(\"%d\", &n);\n        int a[n], freq[n+1];\n        for(int i=0;i<n+1;i++){\n            freq[i]=0;\n        }\n        for(int j=0;j<n;j++){\n            scanf(\"%d\", a+j);\n            int val = a[j];\n            freq[val]++;\n        }\n\n        int count=0;\n        for(int i=0;i<n+1;i++){\n            if(freq[i]>=3){\n                count++;\n                printf(\"%d\\n\", i);\n                break;\n            }\n\n        }\n        if(count==0){\n            printf(\"%d\\n\", -1);\n        }\n    }\n    return 0;\n}\n\n\t \t\t\t \t \t\t \t\t\t  \t \t\t\t  \t \t   \t"}
{"similarity_score": 0.940279542566709, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "45baa8f3a531eae480879b376e0032d8", "bug_code_uid": "806f8a8ebd850096ab8feb7f6ad06131", "src_uid": "fa253aabcccd487d09142ea882abbc1b", "apr_id": "2996494b1f41bfc69766e2440129833b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#pragma warning(disable:4996)\n#include <stdio.h>\n#include <malloc.h>\n#include <math.h>\n#include <stdlib.h>\n#define N 100\n#define EPS 1E-5\nint lol(const void *x1, const void *x2)\n{\n\treturn *(int*)x1 - *(int*)x2;\n}\n\nint main(void)\n{\n\tint t, temp1, temp2, i, c[100], count, j;\n\tchar flag[100];\n\tscanf(\"%i\", &t);\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tscanf(\"%i%i\", &temp1, &temp2);\n\t\tc[i] = temp1 / temp2;\n\t\tflag[i] = (c[i] * temp2 == temp1) ? 0 : 1;\n\t\tc[i] *= 100;\n\t\tc[i] += temp2;\n\t}\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tfor (j = 0; j < c[i] % 100; j++)\n\t\t{\n\t\t\tcount = 0;\n\t\t\tif (j == 0 && flag[i] == 1)\n\t\t\t{\n\t\t\t\twhile (count++ != c[i] / 100 + 1)\n\t\t\t\t\tprintf(\"%c\", 'a' + j);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile (count++ != c[i] / 100)\n\t\t\t\t\tprintf(\"%c\", 'a' + j);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#pragma warning(disable:4996)\n#include <stdio.h>\n#include <malloc.h>\n#include <math.h>\n#include <stdlib.h>\n#define N 100\n#define EPS 1E-5\nint lol(const void *x1, const void *x2)\n{\n\treturn *(int*)x1 - *(int*)x2;\n}\n\nint main(void)\n{\n\tint t, temp1, temp2, i, c[100], count, j;\n\tchar flag[100];\n\tscanf(\"%i\", &t);\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tscanf(\"%i%i\", &temp1, &temp2);\n\t\tc[i] = temp1 / temp2;\n\t\tflag[i] = (c[i] * temp2 == temp1) ? 0 : temp1- c[i]*temp2;\n\t\tc[i] *= 100;\n\t\tc[i] += temp2;\n\t}\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tfor (j = 0; j < c[i] % 100; j++)\n\t\t{\n\t\t\tcount = 0;\n\t\t\tif (flag[i]!=0 && j< flag[i])\n\t\t\t{\n\t\t\t\twhile (count++ != c[i] / 100 + 1)\n\t\t\t\t\tprintf(\"%c\", 'a' + j);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile (count++ != c[i] / 100)\n\t\t\t\t\tprintf(\"%c\", 'a' + j);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.4476122594440485, "equal_cnt": 23, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "3252851cb6669974c6bebc3b8f19ed53", "bug_code_uid": "d835099e276ff45a3c87ec8c6b2ce7c9", "src_uid": "aba6e64e040952b88e7dcb95e4472e56", "apr_id": "0a642c7dba40b758b13e4b544daddef1", "difficulty": 1600, "tags": ["number theory", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define Min(a,b) a<b ? a : b\nint main()\n{\n    int n, min=10e9,i,j;\n    scanf(\"%d\", &n);\n    int a[n], b[n];\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n        int d = Min(a[i],b[i]);\n        min = Min(min,d);\n    }\n    for(i=2; i*i<=min; i++)\n    {\n        int cnt=0;\n        for(j=0; j<n; j++)\n        {\n            if(a[j]%i==0 || b[j]%i==0)\n            {\n                cnt++;\n            }\n        }\n        if(cnt==n)\n        {\n            printf(\"%d\\n\", i);\n            return 0;\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint factor[150], fact;\n\nvoid primefactor(int a)\n{\n    int k=2;\n    while(k*k<=a)\n    {\n        if(a%k==0)\n        {\n            factor[fact++]=k;\n            while(a%k==0)\n                a /= k;\n        }\n        k++;\n    }\n    if(a>1)\n        factor[fact++]=a;\n}\nint main()\n{\n    int n, i ,j, a, b;\n    scanf(\"%d\", &n);\n    scanf(\"%d%d\", &a, &b);\n    primefactor(a);\n    primefactor(b);\n    for(i=1; i<n; i++)\n    {\n        scanf(\"%d %d\", &a, &b);\n        for(j=0; j<fact; j++)\n        {\n            if(a%factor[j]!=0 && b%factor[j]!=0)\n                {\n                    factor[j]=1;\n                }\n        }\n    }\n    for(i=0; i<fact; i++)\n    {\n        if(factor[i]>1)\n        {\n            printf(\"%d\\n\", factor[i]);\n            return 0;\n        }\n    }\n\n    printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.8869814020028612, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "d244c58537a676b49968109f99e25646", "bug_code_uid": "392c4fbe8c653a044efca083f5457935", "src_uid": "b1ef19d7027dc82d76859d64a6f43439", "apr_id": "62ddaf29ed3e71a40d07bd56083323bb", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k,l,m,n,p=1;\n    char a[100000],b[100000];\n    scanf(\"%[^\\n]\", a);\n    getchar();\n    scanf(\"%[^\\n]\", b);\n    getchar();\n    for(i=0;b[i]!='\\0' && p==1;i++)\n    {\n        if(b[i]!=' ')\n        {\n            for(j=0;a[j]!='\\0' ;j++)\n            {\n            \n                if(a[j]==b[i])\n                {\n                    a[j]='0';\n                    break;\n                }\n            \n            }\n            if(j<sizeof(a))\n            continue;\n            else\n            {\n                p=0;\n            \n            }\n        }\n        else\n        continue;\n    }\n    if(p==1)\n    printf(\"YES\");\n    else\n    printf(\"NO\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i=0,j,k=0,l,m,n,p=1;\n    char a[100000],b[100000];\n    scanf(\"%[^\\n]\", a);\n    getchar();\n    while(a[k]!='\\0')\n    k++;\n    scanf(\"%[^\\n]\", b);\n    getchar();\n    \n    for(i=0;b[i]!='\\0' && p==1;i++)\n    {\n        if(b[i]!=' ')\n        {\n            for(j=0;a[j]!='\\0' ;j++)\n            {\n                \n                if(a[j]==b[i])\n                {\n                    a[j]='0';\n                    break;\n                }\n                \n            \n            }\n        \n            if(j==k)\n            p=0;\n            \n        }\n        else\n        continue;\n    }\n    if(p==1)\n    printf(\"YES\");\n    else\n    printf(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.5313351498637602, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9dcd2260cc7db425a15961a45b3003f9", "bug_code_uid": "bcf084c508c0ac18548bb535bb4e6f32", "src_uid": "08f1ba79ced688958695a7cfcfdda035", "apr_id": "1e57030fa6afe0776bc668c4667e1c90", "difficulty": 1400, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() \n{\n\tint n, i, k=0, s=0, r=0;\n\tscanf(\"%d\", &n);\n\tint a[100];\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\ti=0;\n\tif (n!=1)\n\t{\t\n\t\twhile (i<n)\n\t\t{\n\t\t\tif (a[i]==3)\n\t\t\t{\n\t\t\t\tk++;\n\t\t\t\tif (k==1)\n\t\t\t\t{\n\t\t\t\t\ts=a[i-1] * (i % 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (i!=0)\n\t\t\t\t{\n\t\t\t\t\tif ((a[i-1] == 3) && (s))\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i-1] = s%2 + 1*(k % 2);\n\t\t\t\t\t}\n\t\t\t\t\tif (a[i-1] == a[i])\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tk=0;\n\t\t\t\ts=0;\t\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\t\n\tfor (i=0; i<n; i++)\n\t{\n//\t\tprintf(\"%d \", a[i]);\n\t\tif (a[i] == 0)\n\t\t{\n\t\t\tr++;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\", r);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() \n{\n\tint n, i, k=0, s=0, r=0;\n\tscanf(\"%d\", &n);\n\tint a[100];\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\ti=0;\n\tif (n!=1)\n\t{\t\n\t\twhile (i<n)\n\t\t{\n\t\t\tif (a[i]==3)\n\t\t\t{\n\t\t\t\tk++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (i!=0)\n\t\t\t\t{\n\t\t\t\t\tif (a[i-1] == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (s==0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ta[i-1] = a[i] % 2 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tswitch (k%2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\ta[i-1] =(s % 2) + 1;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\ta[i-1] = s;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (a[i-1] == a[i])\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i<n-1)\n\t\t\t\t{\n\t\t\t\t\tif (a[i+1]==3)\n\t\t\t\t\t{\n\t\t\t\t\t\ts=a[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tk=0;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\t\n\tfor (i=0; i<n; i++)\n\t{\n\t//\tprintf(\"%d \", a[i]);\n\t\tif (a[i] == 0)\n\t\t{\n\t\t\tr++;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\", r);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8782051282051282, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "deb2e20f8641cf3c37ae5fac43f01883", "bug_code_uid": "20706790e0c0c19afb6b1e1e85f53b25", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "32bb8825430370002a37bd24c158c543", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "main() {\n  char p, v, t, n, i = 0;\n  scanf(\"%d\", &n);\n\n  while (n--) {\n    scanf(\"%d %d %d\", &p, &v, &t);\n    if (p + v + t > 1) i++;\n  }\n\n  printf(\"%d\", i);\n}", "fixed": "int main() {\n\tint p, v, t, n, i = 0;\n\tscanf(\"%d\", &n);\n\n\twhile (n--) {\n\t\tscanf(\"%d %d %d\", &p, &v, &t);\n\t\tif (p + v + t > 1) i++;\n\t}\n\n\tprintf(\"%d\", i);\n}"}
{"similarity_score": 0.9979035639412998, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "47c998b25b558cf514ace991114f891b", "bug_code_uid": "0a492b9bef1409238176f18122d406d4", "src_uid": "89b4a7b4a6160ce784c588409b6ce935", "apr_id": "ec89e93585942fd44a9d247aa585b97a", "difficulty": 1600, "tags": ["data structures", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    char a[100000],stack[100000];\n    scanf(\"%s\",a);\n    int l = strlen(a);\n    int i,top = 0;\n    stack[top] = a[0];\n    top = top+1;\n    for(i=1;i<l;i++)\n    {\n        if(stack[top-1]!=a[i])\n        {\n            stack[top] = a[i];\n            top =top+1;\n        }\n        else if(stack[top-1]==a[i])\n        {\n            top--;\n        }\n    }\n    if(top==0) printf(\"yes\\n\");\n    else printf(\"no\\n\");\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    char a[100001],stack[100000];\n    scanf(\"%s\",a);\n    int l = strlen(a);\n    int i,top = 0;\n    stack[top] = a[0];\n    top = top+1;\n    for(i=1;i<l;i++)\n    {\n        if(stack[top-1]!=a[i])\n        {\n            stack[top] = a[i];\n            top =top+1;\n        }\n        else if(stack[top-1]==a[i])\n        {\n            top--;\n        }\n    }\n    if(top==0) printf(\"yes\\n\");\n    else printf(\"no\\n\");\n}"}
{"similarity_score": 0.8666666666666667, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "b77c40c1f73a44c0292bd8725cf73155", "bug_code_uid": "7c1a982199a6b89c9667c9e4d3baf455", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "d496f7eb98cfddb5d3c2ae4f41494da9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n,a,b,i,max,top;\n    max=0;\n    scanf(\"%d\",n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        top+=(-a+b);\n        if(top>max)\n        max=top;\n        \n    }\n    printf(\"%d\",max);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n    int n,a,b,i,max,top;\n    top=0;\n    max=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a,&b);\n        top+=(-a+b);\n        if(top>max){\n        max=top;\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}"}
{"similarity_score": 0.09351620947630923, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "262c8d7fe09c1989c8885fd8be67904c", "bug_code_uid": "aaab7729fb3ab19d27168bd2574dba31", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "84cd12e1e29c4ccada84de36cd8c46c9", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>  \n#include<string.h>  \n  \nconst int N = 1000005;  \nbool vist[N];  \nint main()  \n{  \n    int n,ans;  \n    char ch[5];  \n    while(scanf(\"%d\",&n)>0)  \n    {  \n        memset(vist,0,sizeof(vist));  \n        int maxcap=0,num=0;  \n        while(n--)  \n        {  \n            scanf(\"%s%d\",ch,&ans);  \n            if(ch[0]=='-'){  \n                if(vist[ans])  \n                 vist[ans]=0,num--;  \n                else  \n                 maxcap++;  \n            }  \n            else{  \n                if(num==maxcap)  \n                 maxcap++;  \n                 if(vist[ans]==0)  \n                  num++;  \n                vist[ans]=1;  \n  \n            }  \n        }  \n        printf(\"%d\\n\",maxcap);  \n    }  \n}  \n         ", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main (void)\n{\n   int *data;\n   int num,key,flag,i,n,use;\n   data=(int *)malloc(1000000*sizeof(int));\n\n   while(scanf(\"%d\",&n)!=EOF){\n        getchar();\n        use=0;\n        num=0;\n    for(i=0;i<1000000;i++){\n       data[i]=0;\n    }\n      for(i=0;i<n;i++){\n         key=getchar();\n         scanf(\"%d\",&flag);\n         getchar();\n         if(key == '+'){\n\n            data[flag]=1;\n            if(use<num){\n              use++;\n            }\n            else{\n                num++;\n                use++;\n            }\n         }\n         else{\n            if(data[flag]==0){\n               num++;\n            }\n            else{\n               data[flag]=0;\n               use--;\n            }\n        }\n     }\nprintf(\"%d\\n\",num);\n   }\n   return 0;\n}\n\n                                                                 "}
{"similarity_score": 0.4294649061848506, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "36ccbfee15d2003ca8f17f047c854c06", "bug_code_uid": "6ce672c3e7ad262c564410322034df8c", "src_uid": "f89bd4ec97ec7e02a7f67feaeb4d3958", "apr_id": "22e576731e1916576cee623f247bf623", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n      int t;\r\n      scanf(\"%d\",&t);\r\n      for(int i=0;i<n;i++)\r\n      {\r\n          int x;\r\n          scanf(\"%d\",&x);\r\n          int a[x];\r\n          for(int j=0;j<x;j++)\r\n          {\r\n              if(j==0)\r\n              printf(\"%d \",x);\r\n              else\r\n              printf(\"%d \",j);\r\n          }\r\n             printf(\"\\n\");\r\n      }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n      int t;\r\n      scanf(\"%d\",&t);\r\n      for(int i=0;i<t;i++)\r\n      {\r\n          int x;\r\n          scanf(\"%d\",&x);\r\n          int a[x];\r\n          for(int j=0;j<x;j++)\r\n          a[j]=j+1;\r\n          if(x%2!=0)\r\n          {\r\n          for(int j=x-1;j>=0;j--)\r\n          {\r\n               int temp;\r\n              if(j!=0){\r\n              temp=a[j];\r\n              a[j]=a[j-1];\r\n              a[j-1]=temp;}\r\n              else\r\n              {\r\n                temp=a[j];\r\n              a[j]=a[j+1];\r\n              a[j+1]=temp;  \r\n              }\r\n              j--;\r\n              \r\n          }\r\n          }\r\n          else\r\n          {\r\n              for(int j=0;j<x;j++)\r\n          {\r\n              \r\n              int temp;\r\n              temp=a[j];\r\n              a[j]=a[j+1];\r\n              a[j+1]=temp;\r\n              j++;\r\n          }\r\n          }\r\n          for(int j=0;j<x;j++)\r\n          {\r\n              printf(\"%d \",a[j]);\r\n          }\r\n          printf(\"\\n\");\r\n      }\r\n}"}
{"similarity_score": 0.7323688969258589, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a9db2efc5268ca40d6b8a0c8a834de3f", "bug_code_uid": "c1ac572ff1b6d7d31458a40ed600edf5", "src_uid": "4f02ac641ab112b9d6aee222e1365c09", "apr_id": "47d78bb6cb80585a1d8a9be89c3977d1", "difficulty": 1000, "tags": ["data structures", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint ascending (void const *a,void const *b)\n{\n    return (*(int*)a-*(int*)b);\n}\n\nint main()\n{\n    int a[100000],n,m,i,j,k=1,x=0;\n\n    scanf(\"%d\",&n);\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    qsort(a,n+1,sizeof(int),ascending);\n\n    /*for(i=0; i<n; i++)\n    {\n        for(j=i+1; j<n; j++)\n        {\n            if(a[i] == a[j])\n            {\n                for(k=j; k<n; k++)\n                {\n                    a[k] = a[k + 1];\n                }\n                n--;\n                j--;\n            }\n        }\n    }*/\n    for(i=1;i<=n;i++)\n    {\n        if(a[i]>=k)\n        {\n            x++;\n            k++;\n        }\n    }\n    printf(\"%d\\n\",x);\n}\n", "fixed": "#include <stdio.h>\n\nint ascending (void const *a,void const *b)\n{\n    return (*(int*)a-*(int*)b);\n}\n\nint main()\n{\n    int a[200000],n,m,i,j,k=1,x=0;\n\n    scanf(\"%d\",&n);\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    qsort(a,n+1,sizeof(int),ascending);\n\n\n    for(i=1;i<=n;i++)\n    {\n        if(a[i]>=k)\n        {\n            x++;\n            k++;\n        }\n    }\n    printf(\"%d\\n\",x);\n}\n"}
{"similarity_score": 0.5737439222042139, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "862988921980e90987f39d1ce735a7fb", "bug_code_uid": "c84988e027785d079bbc6f1a92af58f0", "src_uid": "7c483498f497f4291e3d33375c0ebd53", "apr_id": "f60f7dbed1c7591169e8788513371bcb", "difficulty": 800, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    if(n>=1&&n<=)\n    for(i=1;i<=9;i++){\n        if(n%i==0&&i<n){\n            printf(\"%d\\n\",i);\n            for(j=1;j<=i;j++)\n                printf(\"%d \",n/i);\n                break;\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,num;\n    scanf(\"%d\",&n);\n    for(i=9;i>=1;i--){\n        if(n%i==0&&i<n){\n            num=n/i;\n            break;\n        }\n    }\n    if(n==1)\n        printf(\"%d\\n%d\\n\",n,n);\n    else{\n    printf(\"%d\\n\",num);\n    for(i=0;i<num;i++){\n        printf(\"%d \",n/num);\n    }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9990884229717412, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8991757f07409bf5e98e8acae69bb5af", "bug_code_uid": "f0f8a86325d889aac2b7298da940dfb7", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "7a85cb2dc65478eda5e449ea07913123", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int a[101],i;\n    for(i=0; i<101; i++)\n        a[i]=0;\n    int n,j;\n    int l;\n    scanf(\"%d\",&l);\n    scanf(\"%d\",&n);\n    for(j=0; j<n; j++)\n    {\n        int p;\n        scanf(\"%d\",&p);\n        a[p]=1;\n    }\n    scanf(\"%d\",&n);\n    for(j=0; j<n; j++)\n    {\n        int p;\n        scanf(\"%d\",&p);\n        a[p]=1;\n\n    }\n    for(j=1; j<=l; j++)\n    {\n\n       if(a[j]==0)\n        {\n            printf(\"Oh,my keyboard!\\n\");\n            return 0;\n        }\n    }\n    printf(\"I become the guy.\\n\");\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int a[101],i;\n    for(i=0; i<101; i++)\n        a[i]=0;\n    int n,j;\n    int l;\n    scanf(\"%d\",&l);\n    scanf(\"%d\",&n);\n    for(j=0; j<n; j++)\n    {\n        int p;\n        scanf(\"%d\",&p);\n        a[p]=1;\n    }\n    scanf(\"%d\",&n);\n    for(j=0; j<n; j++)\n    {\n        int p;\n        scanf(\"%d\",&p);\n        a[p]=1;\n\n    }\n    for(j=1; j<=l; j++)\n    {\n\n       if(a[j]==0)\n        {\n            printf(\"Oh, my keyboard!\\n\");\n            return 0;\n        }\n    }\n    printf(\"I become the guy.\\n\");\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.5056603773584906, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e24f233121f92942526182b5e5c27dec", "bug_code_uid": "06b1e06cd49dcc035e58252ac779869c", "src_uid": "6324ca46b6f072f8952d2619cb4f73e6", "apr_id": "fee0c422220d3bfaf764d198bed7ed3f", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int t,i,j,k,n,m,sum;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&n,&m,&k);\n\t\tif(n/k==1||m==0)\n\t\tprintf(\"0\\n\");\n\t\telse\n\t\t{\n\t\t\tif(n/k>=m)\n\t\t\tprintf(\"%lld\\n\",m);\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%lld\\n\",n/k-(m-n/k)/(k-1)-(m-n/k)%(k-1));\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int t,i,j,k,n,m,sum;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&n,&m,&k);\nif(n/k<m)\n{\nprintf(\"%lld\\n\",n/k-(m-n/k+k-2)/(k-1));\n}\nelse printf(\"%d\\n\" ,m);\n\n}\n\treturn 0;\n}"}
{"similarity_score": 0.3787878787878788, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "334974c11ccf62230bbe05dbfd6cbd10", "bug_code_uid": "9715d33695611686975ddaaf2e8aec60", "src_uid": "08f1ba79ced688958695a7cfcfdda035", "apr_id": "2be7beb5b9bd4502f30833f164211a65", "difficulty": 1400, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint a[105];\n\tint m, i;\n\tscanf(\"%d\", &m);\n\tfor (i = 0; i < m; i++)\n\t\tscanf(\"%d\", a + i);\n\tfor (i = 0; i < m; i++)\n\t{\n\t\tif (a[i] == 3)\n\t\t{\n\t\t\tif (i && a[i - 1] > 0 && a[i - 1] < 3)\n\t\t\t\ta[i] = 3 - a[i - 1];\n\t\t\telse if (i == m - 2 && a[i + 1] > 0 && a[i + 1] < 3)\n\t\t\t\ta[i] = 3 - a[i - 1];\n\t\t}\n\t}\n\tint sum = 0, p = 0;\n\tfor (i = 0; i < m; i++)\n\t{\n\t\tif (!a[i] || p == a[i] && a[i] != 3)\n\t\t\tsum++;\n\t\tp = a[i];\n\t}\n\tprintf(\"%d\\n\", sum);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint a[105];\nint main()\n{\n\tint n, i;\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tif (a[i] == 3 && a[i - 1] == 1)\n\t\t\ta[i] = 2;\n\t\telse if (a[i] == 3 && a[i - 1] == 2)\n\t\t\ta[i] = 1;\n\t\telse if (a[i] == 1 && a[i - 1] == 1)\n\t\t\ta[i] = 0;\n\t\telse if (a[i] == 2 && a[i - 1] == 2)\n\t\t\ta[i] = 0;\n\t}\n\tint p = 0;\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tif (a[i] == 0)\n\t\t\tp++;\n\t}\n\tprintf(\"%d\\n\", p);\n\treturn 0;\n}"}
{"similarity_score": 0.8566775244299675, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0c6fc2d5712fd9a660dfed5e7191d955", "bug_code_uid": "e9a3b66f22e08877322bad5ca2847391", "src_uid": "867b01e7141ef077964a8a0d4c6b762b", "apr_id": "5033917834a9fa071c3bf0c1dc4323a0", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\\n\", &t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\\n\", &n);\r\n        char** a = malloc(n*sizeof(char*));\r\n        for(int i = 0; i < n; i++){\r\n            a[i] = malloc(n*sizeof(char));\r\n            scanf(\"%s\", a[i]);\r\n        }\r\n        int cnt = 0;\r\n        for(int i = 0; i < n / 2; i++){\r\n            for(int j = i; j < n - i - 1; j++){\r\n                char x1 = 0, x2 = 0;\r\n                if(a[i][j] == '0') x1++;\r\n                else x2++;\r\n                if(a[n-j-1][i] == '0') x1++;\r\n                else x2++;\r\n                if(a[n-i-1][n-j-1] == '0') x1++;\r\n                else x2++;\r\n                if(a[j][n-i-1] == '0') x1++;\r\n                else x2++;\r\n                cnt += (x1 < x2 ? x1 : x2);\r\n            }\r\n        }\r\n        printf(\"%d\\n\", cnt);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nchar a[120][120];\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\\n\", &t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\\n\", &n);\r\n        for(int i = 0; i < n; i++){\r\n            for(int j = 0; j < n; j++) scanf(\"%c\", &a[i][j]);\r\n            char c;\r\n            scanf(\"%c\", &c);\r\n        }\r\n        int cnt = 0;\r\n        for(int i = 0; i < n / 2; i++){\r\n            for(int j = i; j < n - i - 1; j++){\r\n                char x1 = 0, x2 = 0;\r\n                if(a[i][j] == '0') x1++;\r\n                else x2++;\r\n                if(a[n-j-1][i] == '0') x1++;\r\n                else x2++;\r\n                if(a[n-i-1][n-j-1] == '0') x1++;\r\n                else x2++;\r\n                if(a[j][n-i-1] == '0') x1++;\r\n                else x2++;\r\n                cnt += (x1 < x2 ? x1 : x2);\r\n            }\r\n        }\r\n        printf(\"%d\\n\", cnt);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9872773536895675, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f6bc1046e231082328aa89f25a440242", "bug_code_uid": "81450dbc2bb6224a57a053ce0c9c0870", "src_uid": "dd26f45869b73137e5e5cc6820cdc2e4", "apr_id": "255441fa1e8ebd322d511dbfb43a3461", "difficulty": 1000, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n    char a[m],b[n];\n    scanf(\"%s\\n%s\",b,a);\n    int max=-1,count=0,resindex=0;\n    for(i=0;i<m-n+1;i++){\n        count=0;\n        for(j=i;j<i+n;j++){\n            if(a[j]==b[j-i]){\n                count++;\n            }\n        }\n        if(count>max){\n            resindex=i;\n            max=count;\n        }\n    }\n    printf(\"%d\\n\",resindex+1);\n    for(i=resindex;i<resindex+n;i++){\n        if(a[i]!=b[i-resindex]){\n                printf(\"%d \",i-resindex+1);\n            }\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n    char a[m],b[n];\n    scanf(\"%s\\n%s\",b,a);\n    int max=-1,count=0,resindex=0;\n    for(i=0;i<m-n+1;i++){\n        count=0;\n        for(j=i;j<i+n;j++){\n            if(a[j]==b[j-i]){\n                count++;\n            }\n        }\n        if(count>max){\n            resindex=i;\n            max=count;\n        }\n    }\n    printf(\"%d\\n\",n-max);\n    for(i=resindex;i<resindex+n;i++){\n        if(a[i]!=b[i-resindex]){\n                printf(\"%d \",i-resindex+1);\n            }\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.9969604863221885, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a661400dee88874636fe0c70713adcaa", "bug_code_uid": "eca640cf08c5db5884438d01e137485b", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "3265ad38901024314da6cb75c9629de3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    unsigned long long int n,m,a[1000000],i,count=0,b=1;\n    scanf(\"%I64d%I64d\",&n,&m);\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n        for(i=0; i<m; i++)\n        {\n            if(a[i]>b)\n            {\n                count=a[i]-b+count;\n                b=a[i];\n            }\n            else if(a[i]<b)\n            {\n                count=n-b+a[i]+count;\n                b=a[i];\n            }\n        }\n        printf(\"%d\",count);\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    unsigned long long int n,m,a[1000000],i,count=0,b=1;\n    scanf(\"%I64d%I64d\",&n,&m);\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n        for(i=0; i<m; i++)\n        {\n            if(a[i]>b)\n            {\n                count=a[i]-b+count;\n                b=a[i];\n            }\n            else if(a[i]<b)\n            {\n                count=n-b+a[i]+count;\n                b=a[i];\n            }\n        }\n        printf(\"%I64d\",count);\n\n\n}\n"}
{"similarity_score": 0.9847560975609756, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "62ae7534ae7da4c578460361d768a2b0", "bug_code_uid": "cad5de5b583ba25c2580c95b6605caf1", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "2c7bddf3b40e5bef41883e0fb54ce84b", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int m,n;\n    int counter;\n    scanf(\"%d %d\",&n,&m);\n    printf(\"%d\\n\",(n+m-1));\n    for(counter=1;counter<=m;counter++)\n    {\n        printf(\"1 %d\\n\",counter);\n    }\n\n    for(counter=2;counter<=n;counter++)\n    {\n        printf(\"2 %d\\n\",counter);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int m,n;\n    int counter;\n    scanf(\"%d %d\",&n,&m);\n    printf(\"%d\\n\",(n+m-1));\n    for(counter=1;counter<=m;counter++)\n    {\n        printf(\"1 %d\\n\",counter);\n    }\n\n    for(counter=2;counter<=n;counter++)\n    {\n\n        printf(\"%d 1 \\n\",counter);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9943661971830986, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a4d1898523df46d196e90380addbb1fc", "bug_code_uid": "c5d1db9bd6d9d9c310c8a069fd522c3b", "src_uid": "bb3e3b51a4eda8fef503952a00777910", "apr_id": "48eaf866b59a891e810614d24c0dbd2a", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint a, b, c, d, e, f, g;\n\tint ZA[100], ZB[100];\n\n\tscanf(\"%d%d%d%d\", &a, &b, &c, &d);\n\tg = 0;\n\tfor (e = c; e <= a; ++e)\n\t\tfor (f = d; f <= b; ++f)\n\t\t\tif (e > f) {\n\t\t\t\tZA[g] = e;\n\t\t\t\tZB[g] = f;\n\t\t\t\tg += 1;\n\t\t\t} else\n\t\t\t\tbreak;\n\tprintf(\"%d\\n\", g);\n\tfor (e = 0; e < g; ++e)\n\t\tprintf(\"%d %d\\n\", ZA[e], ZB[e]);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint a, b, c, d, e, f, g;\n\tint ZA[10000], ZB[10000];\n\n\tscanf(\"%d%d%d%d\", &a, &b, &c, &d);\n\tg = 0;\n\tfor (e = c; e <= a; ++e)\n\t\tfor (f = d; f <= b; ++f)\n\t\t\tif (e > f) {\n\t\t\t\tZA[g] = e;\n\t\t\t\tZB[g] = f;\n\t\t\t\tg += 1;\n\t\t\t} else\n\t\t\t\tbreak;\n\tprintf(\"%d\\n\", g);\n\tfor (e = 0; e < g; ++e)\n\t\tprintf(\"%d %d\\n\", ZA[e], ZB[e]);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.6006711409395973, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "387d97ae61f825becf49fc28bcf575a0", "bug_code_uid": "661fa4a04e07a25d4b44b300e1128c55", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "99dfba0605f364ddd5d2949c95474433", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main (void)\n{\n\n\nint a,b[100],j,i,t,s=0;\n\tscanf(\"%d\",&a);\n\tfor(i=0;i<a;i++)\n        {scanf(\"%d\",&b[i]);\n        s=s+b[i];\n        }\n\tfor(i=0;i<a;i++)\n\tfor(j=i+1;j<a;j++)\n\tif(b[j] > b[i]){\n\tt = b[j];\n\tb[j] = b[i];\n\tb[i] = t;\n\t}\n\ti=0;\n\tt = 0;\n\twhile(t<s/2+1) i++;\n\tprintf(\"%d\",i);\n}\n", "fixed": "\n#include<stdio.h>\nint main(){\n\tint a,b[100],j,i,t,s=0;\n\tscanf(\"%d\",&a);\n\tfor(i=0;i<a;i++){scanf(\"%d\",&b[i]);s=s+b[i];}\n\tfor(i=0;i<a;i++)\n\tfor(j=i+1;j<a;j++)\n\tif(b[j] > b[i]){\n\tt = b[j];\n\tb[j] = b[i];\n\tb[i] = t;\n\t}\n\ti=0;\n\tt = 0;\n\twhile(t<s/2+1)t=t+b[i++];\n\tprintf(\"%d\",i);\n}\n"}
{"similarity_score": 0.9666136724960255, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "00d79b276c991a54de0cd151306611d1", "bug_code_uid": "c777269d9fc2ce86b312c67106e6482f", "src_uid": "4585419ab2b7200770cfe1e607161e9f", "apr_id": "53a7647cf9af422647198c1e03fbf2dc", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\tint n;\n\tscanf(\"%d\", &n);\n\tlong long int a[n],b[n/2];\n\tfor(int i=0;i<n/2;i++)\n\t\tscanf(\"%lld\", &b[i]);\n\ta[0]=0;\n\ta[n-1]=b[0];\n\tfor(int i=1;i<n/2;i++)\n\t{\tif(b[i]<=a[n-i])\n\t\t{\ta[i] = a[i-1];\n\t\t\ta[n-i-1] = b[i]-a[i];\n\t//\t\tprintf(\"for %d it's 1\\n\",i);\n\t\t}\n\t\telse if(b[i]-a[n-i]>=a[i-1])\n\t\t{\ta[i] = b[i] - a[n-i];\n\t\t\ta[n-i-1] = a[n-i];\n\t//\t\tprintf(\"for %d it's 2\\n\",i);\n\t\t}\n\t\telse\n\t\t{\tint j;\n\t\t\tfor(j=1;;j++)\n\t\t\t{\tif(b[i]-a[n-i]+j==a[i-1])\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\ta[i] = a[i-1] + j;\n\t\t\ta[n-i-1] = b[i]-a[i];\n\t//\t\tprintf(\"for %d it's 3\\n\",i);\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tprintf(\"%lld\\n\",a[i]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\tint n;\n\tscanf(\"%d\", &n);\n\tlong long int a[n],b[n/2];\n\tfor(int i=0;i<n/2;i++)\n\t\tscanf(\"%lld\", &b[i]);\n\ta[0]=0;\n\ta[n-1]=b[0];\n\tfor(int i=1;i<n/2;i++)\n\t{\tif(b[i]<=a[n-i])\n\t\t{\ta[i] = a[i-1];\n\t\t\ta[n-i-1] = b[i]-a[i];\n\t//\t\tprintf(\"for %d it's 1\\n\",i);\n\t\t}\n\t\telse if(b[i]-a[n-i]>=a[i-1])\n\t\t{\ta[i] = b[i] - a[n-i];\n\t\t\ta[n-i-1] = a[n-i];\n\t//\t\tprintf(\"for %d it's 2\\n\",i);\n\t\t}\n\t\telse\n\t\t{/*\tint j;\n\t\t\tfor(j=1;;j++)\n\t\t\t{\tif(b[i]-a[n-i]+j==a[i-1])\n\t\t\t\t\tbreak;\n\t\t\t}*/\n\t\t\ta[i] = a[i-1];\n\t\t\ta[n-i-1] = b[i]-a[i];\n\t//\t\tprintf(\"for %d it's 3\\n\",i);\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tprintf(\"%lld\\n\",a[i]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.1731684110371075, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "ca18712cb61c99408aee411af6c23e84", "bug_code_uid": "fa5ecd77a074581bee47b283d70fd130", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "71394699affbeb35a16f8d61b19041f7", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint find_next_not_checked(int *checked, int position, int length){\n  int pos = -1;\n  for(int i = position + 1; i < length; i++){\n    if(checked[i] == 0){\n        pos = i;\n        break;\n    }\n  }\n  return pos;\n}\n\nint main(){\n  int n, next;\n  scanf(\"%d\", &n);\n  int array[n], checked[n], length = n;\n  for(int i = 0; i < n; i++){\n    scanf(\"%1d\", &array[i]);\n    checked[i] = 0;\n  }\n  for(int i = 0; i < n-1; i++){\n    if(checked[i] == 0){\n      next = find_next_not_checked(checked, i, n);\n      if(next >= 0){\n        if(array[i] != array[next]){\n          length -= 2;\n          checked[i] = 1;\n          checked[next] = 1;\n          i = -1;\n        }\n      }\n      else{\n        break;\n      }\n    }\n  }\n  printf(\"%d\\n\", length);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n  int n, aux, zeros = 0, ones = 0;\n  scanf(\"%d\", &n);\n  for(int i = 0; i < n; i++){\n    scanf(\"%1d\", &aux);\n    if(aux == 0){\n      zeros++;\n    }\n    else{\n      ones++;\n    }\n  }\n  printf(\"%d\\n\", abs(zeros - ones));\n  return 0;\n}\n"}
{"similarity_score": 0.2255346727154893, "equal_cnt": 32, "replace_cnt": 18, "delete_cnt": 2, "insert_cnt": 12, "fix_ops_cnt": 32, "lang": "GNU C", "fix_code_uid": "6743c767cf2dadc6b12845a964c88bfc", "bug_code_uid": "3b0ac6fdbc7afe7d04b26d78c1943bec", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "73c5819b355a7b2ab325654185569344", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\nchar s[8],a[8],max[8]={0},tmp[8],j;\nint i,k=0;\ngets(s);\nstrcpy(a,s);\nfor(i=0;i<strlen(s);i++){\n    if(s[i]%2==0){\n        j=a[i];\n        a[i]=a[strlen(s)];\n        a[strlen(s)]=j;\n        if(strcmp(a,max)>0){\n            strcmp(tmp,a);\n            strcmp(a,max);\n            strcmp(max,tmp);\n        }\n        strcpy(a,s);\n        k++;\n    }\n\n}\nif(k==0){\n    printf(\"-1\");\n}\nelse{\n    puts(max);\n}\nreturn 0;\n}\n\t \t\t  \t\t \t  \t \t \t\t \t\t\t \t\t\t", "fixed": "#include <stdio.h>\n#include <string.h>\nchar a[100002];\nint main()\n{\n    while(scanf(\"%s\",a)!=EOF)\n    {\n        int  ff = -1,i;\n        int flag1 = 0;\n        int flag2 = 0;\n        int l=strlen(a);\n        int pl=a[l-1]-'0';\n        for(i=0; i<l; i++)\n        {\n            int x = a[i]-'0';\n            if(x%2==0&&pl>x)\n            {\n                char str;\n                str=a[i];\n                a[i]=a[l-1];\n                a[l-1]=str;\n                flag1 = 1;\n                flag2 = 1;\n                break;\n            }\n            else if(x%2==0)\n            {\n                flag1 = 1;\n                ff=i;\n            }\n        }\n        if(flag1 == 0)\n        {\n            printf(\"-1\\n\");\n            continue;\n        }\n        if(flag2 == 1)\n        {\n            printf(\"%s\\n\",a);\n            continue;\n        }\n        if(flag1 == 1)\n        {\n            char str;\n            str=a[ff];\n            a[ff]=a[l-1];\n            a[l-1]=str;\n            printf(\"%s\\n\",a);\n        }\n\n    }\n    return 0;\n}\n\n\t \t \t\t \t\t\t\t\t\t  \t\t \t \t   \t\t"}
{"similarity_score": 0.7587672688629118, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "f87fdef897f9bb9e32b770c92f0502c8", "bug_code_uid": "62aac5a02a845aba90609b2f91d60e39", "src_uid": "36fb3a01860ef0cc2a1065d78e4efbd5", "apr_id": "5af4f9d8f9d8256389cca5353d69a5d8", "difficulty": 1500, "tags": ["brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    long n,m,i,j;\n    char a[200000],s[200000];\n    scanf(\"%ld\",&n);\n    m=0;\n\ta[0]='\\0';\n    for(i=1;i<=n;i++){\n\t   strcat(a,\"<3\");\n       scanf(\"%s\",s);\n\t   strcat(a,s);\n    }\n\tstrcat(a,\"<3\");\n\tm=strlen(a);\n    i=0;\n\tj=0;\n    scanf(\"%s\",s);\n    while(s[j]!='\\0'){\n        if(s[j]==a[i]) i++;\n        j++;\n        if(i>=m) break;\n    }\n    if(i>=m) printf(\"yes\\n\");\n       else printf(\"no\\n\");\n    return 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    long n,len,i,j;\n    char a[200000],s[200000];\n    scanf(\"%ld\",&n);\n\ta[0]='<';\n\ta[1]='3';\n\tlen=2;\n    for(i=1;i<=n;i++){\n       scanf(\"%s\",a+len);\n\t   len+=strlen(a+len);\n\t   a[len++]='<';\n\t   a[len++]='3';\n    }\n    i=0;\n\tj=0;\n    scanf(\"%s\",s);\n    while(s[j]!='\\0'){\n        if(s[j]==a[i]) i++;\n        j++;\n        if(i>=len) break;\n    }\n    if(i>=len) printf(\"yes\\n\");\n       else printf(\"no\\n\");\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9925, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fcec9e85ccaaec5b89ceae86688df541", "bug_code_uid": "446561eeb9e4a08a44bdb811b4b94ce2", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "7a94d695d23f5db617afc3c2be7ded80", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,i;\n    int t,x,y;\n    while(scanf(\"%d\",&n)!=eof){\n    for(i=1,x=y=0;i<=n;i++){\n        scanf(\"%d\",&t);\n\tif(t==0) x++;\n        else y++;\n    }\n    if(x==0) printf(\"-1\\n\");\n    else\n    if(y<9) printf(\"0\\n\");\n    else\n    {\n\ty-=y%9;\n        for(i=1;i<=y;i++) printf(\"5\");\n        for(i=1;i<=x;i++) printf(\"0\");\n        printf(\"\\n\");\n    }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i;\n    int t,x,y;\n    while(scanf(\"%d\",&n)!=EOF){\n    for(i=1,x=y=0;i<=n;i++){\n        scanf(\"%d\",&t);\n\tif(t==0) x++;\n        else y++;\n    }\n    if(x==0) printf(\"-1\\n\");\n    else\n    if(y<9) printf(\"0\\n\");\n    else\n    {\n\ty-=y%9;\n        for(i=1;i<=y;i++) printf(\"5\");\n        for(i=1;i<=x;i++) printf(\"0\");\n        printf(\"\\n\");\n    }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9175531914893617, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "05a4e9803a191c3074668b942c3008da", "bug_code_uid": "66ccd2cb13decaf3a6eb1bd1f139205e", "src_uid": "ed26479cdf72ad9686bbf334d90aa0be", "apr_id": "026df8271ea8f1e2577b21064af6ab60", "difficulty": 1100, "tags": ["constructive algorithms"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,m,x,y;\n    scanf(\"%d %d %d %d\",&n,&m,&x,&y);\n    printf(\"%d %d\\n\",x,y);\n    printf(\"%d 1\\n\",x);\n    for(int i=x+1;x<=n;i++)\n    {\n        printf(\"%d 1\\n\",i);\n    }\n    for(int i=x-1;i>=1;i--)\n    {\n        printf(\"%d 1\\n\",i);\n    }\n    x=1;\n    y=1;\n    for(int s=1;s<=m-1;s++)\n    {\n        if(s%2!=0)\n        {\n            y++;\n            for(int i=x;i<=n;i++)\n            {\n                printf(\"%d %d\\n\",i,y);\n            }\n            x=n;\n        }\n        else\n        {\n            y++;\n            for(int i=n;i>=1;i--)\n            {\n                printf(\"%d %d\\n\",i,y);\n            }\n            x=1;\n        }\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,m,x,y,a,b;\n    scanf(\"%d %d %d %d\",&n,&m,&x,&y);\n    a=x;\n    b=y;\n    printf(\"%d %d\\n\",x,y);\n    printf(\"%d 1\\n\",x);\n    for(int i=x+1;i<=n;i++)\n    {\n        printf(\"%d 1\\n\",i);\n    }\n    for(int i=x-1;i>=1;i--)\n    {\n        printf(\"%d 1\\n\",i);\n    }\n    x=1;\n    y=1;\n    for(int s=1;s<=m-1;s++)\n    {\n        if(s%2!=0)\n        {\n            y++;\n            for(int i=x;i<=n;i++)\n            {\n                if(i!=a || y!=b)\n                printf(\"%d %d\\n\",i,y);\n                \n            }\n            x=n;\n        }\n        else\n        {\n            y++;\n            for(int i=n;i>=1;i--)\n            {\n                if(i!=a || y!=b)\n                printf(\"%d %d\\n\",i,y);\n                \n            }\n            x=1;\n        }\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.10944206008583691, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "bedfee39c8aaceb8b869ec7cb22731ce", "bug_code_uid": "7d2379a9daff800d9800522b9937481d", "src_uid": "740d2aba32f69b8cfe8f7cb624621a63", "apr_id": "b6b5c831c3aaf9d738bfcfb6dcde9226", "difficulty": 1200, "tags": ["dp", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint const maxn = 1e5 + 5;\nint a[maxn], pre[maxn];\nint main()\n{\n    int n, q, k;\n    scanf(\"%d%d%d\", &n, &q, &k);\n    for (int i = 1; i <= n;i++)\n        scanf(\"%d\", a+i);\n    a[0] = 0;\n    a[n+1] = k + 1;\n    for (int i = 1; i <= n;i++)\n        pre[i] = pre[i-1] + a[i+1] - a[i-1] - 2;\n    while(q)\n    {\n        int l, r;\n        int ans=0;\n        scanf(\"%d %d\", &l, &r);\n        if (l < r)\n            ans += pre[r-1] - pre[l] + k - a[r-1] + a[l+1] - 3;\n        else if (l == r)\n            ans += k - 1;\n        printf(\"%d\\n\", ans);\n    }\n}\n  \t\t\t    \t \t     \t   \t \t  \t \t\t", "fixed": "# include <stdio.h>\nint main ()\n{\n\tint k,n,q,l,r,sum=0,x,y,i;\n\tint a[100100]={0};\n\tscanf(\"%d%d%d\",&n,&q,&k);\n\tfor (i=1;i<=n;i++)\n\tscanf(\"%d\",&a[i]);\n\twhile (q--)\n\t{\n\tscanf(\"%d%d\",&l,&r);\n\tif (l==r)\n\t{\n\t\tprintf(\"%d\\n\",k-1);\n\t\tcontinue;\n\t}\n\tsum=k-((r-l+1)*2-1)+a[r]-a[l];\n\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n\t\t\t\t\t  \t\t\t\t\t     \t \t\t\t \t\t   \t\t\t"}
{"similarity_score": 0.9099236641221374, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "5c5285bea0088ed755f34c1760d25bdd", "bug_code_uid": "f729563f125867677fcf9d791a60fe1f", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "327a4de87a2dd52997542728dcebd518", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int n,p,q,r,i,sum=0;\n    scanf(\"%d\",&n);\n    char a[n],b[n];\n    scanf(\"%s%s\",a,b);\n    for(i=0;i<n;i++){\n        p=(int)a[i]-48;\n        q=(int)b[i]-48;\n        r=abs(p-q);\n        if(r>5) r=10-r;\n        sum+=r;\n        printf(\"%d %d\\n\",r,sum);\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int n,p,q,r,i,sum=0;\n    scanf(\"%d\",&n);\n    char a[n],b[n];\n    scanf(\"%s%s\",a,b);\n    for(i=0;i<n;i++){\n        p=(int)a[i]-48;\n        q=(int)b[i]-48;\n        r=abs(p-q);\n        if(r>5) r=10-r;\n        sum+=r;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.13649851632047477, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "43a8b652adcc4b4dd597631d199c0bd3", "bug_code_uid": "0236597d93e3b7375f022aa0dc86dc5b", "src_uid": "3f3a013cedaaf8cbee0a74a4ed50f09d", "apr_id": "0921debb3e673143e9e3f5ecfede1e51", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    unsigned long long int n,k,i=0,j=0,x=0;\n    scanf(\"%llu\", &n);\n    scanf(\"%llu\", &k);\n    int d[n],count=0,count_d=0,rem_0=0,rem[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\", &d[i]);\n        if(d[i]%k==0){\n            rem_0++;\n        }\n        else{\n            rem[x]=d[i]%k;\n            x++;\n        }\n    }\n\n    for(i=0;i<x-1;i++){\n        if(rem[i]!=0){\n            for(j=i+1;j<x;j++){\n                if(rem[j]!=0 && (rem[i]+rem[j])%k==0){\n                    count++;\n                    rem[j]=0;\n                    break;\n                }\n            }\n        }\n    }\n    count=count+rem_0/2;\n    printf(\"%d\",count*2);\n\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    unsigned long long int n,i,c=0;\n    int k,rem[100]={};\n    scanf(\"%llu %d\", &n, &k);\n    unsigned long long int d[n];\n    for(i=0;i<n;i++){\n        scanf(\"%llu\", &d[i]);\n        rem[d[i]%k]++;\n    }\n\n    if(rem[0]%2==0) c=rem[0];\n    else            c=rem[0]-1;\n    if(k%2==0){\n        if(rem[k/2]%2==0)   c=c+rem[k/2];\n        else            c=c+rem[k/2]-1;\n\n        for(i=1;i<k/2;i++){\n            if(rem[i]>rem[k-i]) c=c+rem[k-i]*2;\n            else    c=c+rem[i]*2;\n        }\n    }\n    else{\n        for(i=1;i<=k/2;i++){\n            if(rem[i]>rem[k-i]) c=c+rem[k-i]*2;\n            else c=c+rem[i]*2;\n        }\n    }\n    printf(\"%llu\",c);\n\n}\n"}
{"similarity_score": 0.7635009310986964, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6e3bfe63e45a248584b928de0191e75d", "bug_code_uid": "ae5a483a985cd8f7b53385310ed83593", "src_uid": "1d27d6d736d891b03b7476f8a7209291", "apr_id": "074b7bddaeeb93ed94137f900135d258", "difficulty": 1500, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#define N 100010\r\nint t,n;\r\nstruct club\r\n{\r\n\tint x;\r\n\tint lc;\r\n}q[N],tmp[N];\r\nvoid sort(int l,int r)\r\n{\r\n\tif(l>=r) return;\r\n\tint mid=(l+r)/2;\r\n\tsort(l,mid);\r\n\tsort(mid+1,r);\r\n\tint k=0,i=l,j=mid+1;\r\n\twhile(i<=mid&&j<=r)\r\n\t{\r\n\t\tif(q[i].x<=q[j].x) tmp[k++]=q[i++];\r\n\t\telse tmp[k++]=q[j++];\r\n\t}\r\n\twhile(i<=mid) tmp[k++]=q[i++];\r\n\twhile(j<=r) tmp[k++]=q[j++];\r\n\tfor(int i=l,j=0;i<=r;++i,++j) q[i]=tmp[j];\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=1;i<=n;++i) scanf(\"%d\",&q[i].x),q[i].lc=i;\r\n\t\tsort(1,n);\r\n\t\tint judge=1;\r\n\t\tfor(int i=1;i<=n;++i)\r\n\t\t    if(abs(q[i].lc-i)%2)\r\n\t\t    {\r\n\t\t    \tjudge=0;\r\n\t\t    \tbreak;\r\n\t\t\t}\r\n\t\tif(judge) puts(\"YES\");\r\n\t\telse puts(\"NO\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#define N 100010\r\nint t,n,vis[N][2],q[N],tmp[N];\r\nvoid sort(int l,int r)\r\n{\r\n\tif(l>=r) return;\r\n\tint mid=(l+r)/2;\r\n\tsort(l,mid);\r\n\tsort(mid+1,r);\r\n\tint k=0,i=l,j=mid+1;\r\n\twhile(i<=mid&&j<=r)\r\n\t{\r\n\t\tif(q[i]<q[j]) tmp[k++]=q[i++];\r\n\t\telse tmp[k++]=q[j++];\r\n\t}\r\n\twhile(i<=mid) tmp[k++]=q[i++];\r\n\twhile(j<=r) tmp[k++]=q[j++];\r\n\tfor(int i=l,j=0;i<=r;++i,++j) q[i]=tmp[j];\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=1;i<=n;++i)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&q[i]);\r\n\t\t\t++vis[q[i]][i%2];\r\n\t\t}\r\n\t\tsort(1,n);\r\n\t\tfor(int i=1;i<=n;++i) --vis[q[i]][i%2];\r\n\t\tint judge=1;\r\n\t\tfor(int i=1;i<=n;++i)\r\n\t\t    if(vis[q[i]][0]||vis[q[i]][1])\r\n\t\t    {\r\n\t\t    \tjudge=0;\r\n\t\t    \tbreak;\r\n\t\t\t}\r\n\t\tif(judge) puts(\"YES\");\r\n\t\telse puts(\"NO\");\r\n\t\tfor(int i=1;i<N;++i) vis[i][0]=0,vis[i][1]=0;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8012422360248447, "equal_cnt": 12, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "ffad29278959e4d622ddf961195b9127", "bug_code_uid": "456762b0faeabfc513138bbadafef26f", "src_uid": "96e2ba997eff50ffb805b6be62c56222", "apr_id": "bda3442bcf1c8fb56f52e20fe05680ad", "difficulty": 1400, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n\ntypedef long int ll;\n\n\nint main()\n{\n\tll n,m,i,ans1=0,ans2=0,cnt[26],cnt1[26];\n\tchar s[200005],t[200005];\n\tscanf(\"%s%s\",s,t);\n\tn=strlen(s);\n\tm=strlen(t);\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(cnt1,0,sizeof(cnt1));\n\n\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(t[i]>'Z')\n\t\t{\n\t\t\tcnt[t[i]-'a']++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcnt1[t[i]-'A']++;\n\t\t}\n\t}\n    for(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tif(cnt[s[i]-'a']>0)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tcnt[s[i]-'a']--;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt1[s[i]-'A']>0)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tcnt1[s[i]-'A']--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tif(cnt1[s[i]-'a']>0)\n\t\t\t{\n\t\t\t\tans2++;\n\t\t\t\tcnt1[s[i]-'a']--;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt[s[i]-'A']>0)\n\t\t\t{\n\t\t\t\tans2++;\n\t\t\t\tcnt[s[i]-'A']--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%ld %ld\\n\",ans1,ans2);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n\ntypedef long int ll;\n\n\nint main()\n{\n\tll n,m,i,ans1=0,ans2=0,cnt[26],cnt1[26],c[26],c1[26];\n\tchar s[200005],t[200005];\n\tscanf(\"%s%s\",s,t);\n\tn=strlen(s);\n\tm=strlen(t);\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(cnt1,0,sizeof(cnt1));\n\tmemset(c,0,sizeof(c));\n\tmemset(c1,0,sizeof(c1));\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tc[s[i]-'a']++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc1[s[i]-'A']++;\n\t\t}\n\t}\n\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(t[i]>'Z')\n\t\t{\n\t\t\tcnt[t[i]-'a']++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcnt1[t[i]-'A']++;\n\t\t}\n\t}\n\n    for(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tif(cnt[s[i]-'a']>0)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tcnt[s[i]-'a']--;\n\t\t\t\tc[s[i]-'a']--;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt1[s[i]-'A']>0)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tc1[s[i]-'A']--;\n\t\t\t\tcnt1[s[i]-'A']--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tif(cnt1[s[i]-'a']>0&&c[s[i]-'a']>0)\n\t\t\t{\n\t\t\t\tans2++;\n\t\t\t\tcnt1[s[i]-'a']--;\n\t\t\t\tc[s[i]-'a']--;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt[s[i]-'A']>0&&c1[s[i]-'A']>0)\n\t\t\t{\n\t\t\t\tans2++;\n\t\t\t\tc1[s[i]-'A']--;\n\t\t\t\tcnt[s[i]-'A']--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%ld %ld\\n\",ans1,ans2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.09617271835132483, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "f63ce90c47e4ba53f7cebd5db2cb35e5", "bug_code_uid": "e6529cfabfeb96c9a9464c6d95da8d4e", "src_uid": "5c12573b3964ee30af0349c11c0ced3b", "apr_id": "d05c7a91a1c53da79a65aa3fb0dbfa64", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int i=0,j,k,count=0,len,p,m;\n    char a[1001];\n    gets(a);\n    scanf(\"%d\",&k);\n    len=strlen(a);\n\n    if((len%k)!=0)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n\n    p=len/k;\n    m=p;\n\n    while(count<len)\n    {\n\n        for(i,j=p-1; i<p; i++,j--,count++)\n        {\n            if(a[i]!=a[j])\n            {\n                printf(\"NO\\n\");\n                return 0;\n            }\n\n        }\n\n        p+=m;\n\n    }\n\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\nint n, t, i, j, temp, time=0, a[1000], b[1000];\n\nscanf(\"%d %d\", &n, &t);\n\nfor(i=0; i<n; i++)scanf(\"%d %d\", &a[i], &b[i]);\n\n\n\n\nfor(i=0; i<n-1; i++){\n\nfor(j=i+1; j<n; j++){\n\n    if(a[i]<a[j]){\n\n        temp=a[i];\n        a[i]=a[j];\n        a[j]=temp;\n\n        temp=b[i];\n        b[i]=b[j];\n        b[j]=temp;\n    }\n\n}\n}\ntime+=t-a[0];\nif(time<b[0]) time=b[0];\n\nfor(i=1; i<n; i++) {\n\n    time+= a[i-1]-a[i];\n    if(time<b[i]) time=b[i];\n\n}\ntime+=a[n-1];\n\nprintf(\"%d\", time);\n\n}\n"}
{"similarity_score": 0.2957151478575739, "equal_cnt": 25, "replace_cnt": 18, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "f729ccc9ad660b98ef9448aad471adc0", "bug_code_uid": "74026d6496841f2d72024b810a4ffdb5", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "4bf58a929866199f2f70a7b12ac0ea2a", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long a,c,m;\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        int a=0;\n        scanf(\"%lld\",&m);\n        if(m==1)\n        {\n            printf(\"2\\n\");\n        }\n            else if(m==4)\n            {\n                printf(\"2\\n\");\n            }\n            else if(m==2)\n            {\n                printf(\"1\\n\");\n            }\n\n             else if(m>=3)\n            {\n                if(m>=3)\n                {\n                    c=m/3;\n                    m=m%3;\n                    a=c;\n                }\n                if(m==0)\n                {\n                    printf(\"%lld\\n\",a);\n                }\n                else{\n                printf(\"%lld\\n\",a+1);\n                }\n            }\n    }\n\nreturn 0;\n}\n \t\t\t\t\t\t \t \t    \t  \t\t   \t \t  \t\t", "fixed": "#include<stdio.h>\nint main()\n{\n    int cou = 0;\n    int a = 0;\n    int b=1,t =1;\n    int c = 2, d = 3, e = -2, f = -3;\n    scanf(\"%d\", &t);\n    for (int i = 0; i <t; i++)\n    {\n        scanf(\"%d\", &b);\n            if (c == b || d == b || e == b || f == b) {\n                cou = 1;\n                printf(\"%d\\n\", cou);\n                continue;\n            }\n            if (b <= 5&&b>0) {\n                cou = 2;\n                printf(\"%d\\n\", cou);\n                continue;\n            }\n            if (b % 3 == 0) {\n                cou = b / 3;\n                printf(\"%d\\n\", cou);\n                continue;\n            }\n            if (b > 5) {\n                int cou3 = (b / 3) + 1;\n                printf(\"%d\\n\", cou3);\n                \n            }\n        \n    }\n\n    return 0;\n}\n\t \t\t\t   \t\t \t\t\t \t\t \t \t\t\t\t\t \t\t\t \t"}
{"similarity_score": 0.5110073382254836, "equal_cnt": 18, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "b9212e259212c3deddae346e1686396b", "bug_code_uid": "5050d40a547e44bb2b7787c30c35a3f0", "src_uid": "7b6a3de5ad0975e4c43f097d4648c9c9", "apr_id": "0cbc8d64ffaec55d41798d9232be6fd6", "difficulty": 1000, "tags": ["implementation", "two pointers"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nlong long int a[200001];\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tlong long int i,n,j,x[2000],y[2000],k=0,cnt=0,idx=0;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\t\tscanf(\"%lld\",&a[i]);\r\n\t\t\t}\r\n\t\tif(n==1){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tfor(i=0;i<n;i++){\r\n\t\t\t\tx[k]=i;y[k]=i;\r\n\t\t\t\tfor(j=i+1;j<n;j++){\r\n\t\t\t\t\tif(a[j]==a[j-1]){\r\n\t\t\t\t\t\ty[k]=j;\r\n\t\t\t\t\t\tif(j==n-1){\r\n\t\t\t\t\t\t\tk++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tk++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(i=0;i<=k;i++){\r\n\t\t\t\tif((x[i]==0||a[x[i]-1]>a[x[i]])&&(y[i]==n-1||a[y[i]+1]>a[y[i]])){\r\n\t\t\t\t\tcnt++;\r\n\t\t\t\t\tidx=1;\r\n\t\t\t\t\tif(cnt>1){\r\n\t\t\t\t\t\tidx=0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tif(idx){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nlong long int a[200001];\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tlong long int i,n,j,cnt=0,idx=0;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tfor(i=0;i<n;i++){\r\n\t\t\tscanf(\"%lld\",&a[i]);\r\n\t\t}\r\n\t\tif(n==1){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse{\t\r\n\t\t\tfor(i=0;i<n;i++){\r\n\t\t\t\tif(i==0||a[i-1]>a[i]){\r\n\t\t\t\t\tfor(j=i+1;j<n;j++){\r\n\t\t\t\t\t\tif(a[j]==a[j-1]){\r\n\t\t\t\t\t\t\ti=j;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(j==n){\r\n\t\t\t\t\t\tidx=1;cnt++;\r\n\t\t\t\t\t\tif(cnt>1) idx=0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(a[j-1]<a[j]){\r\n\t\t\t\t\t\tidx=1;cnt++;\r\n\t\t\t\t\t\tif(cnt>1){\r\n\t\t\t\t\t\t\tidx=0;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(idx) printf(\"YES\\n\");\r\n\t\t\telse printf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9976744186046511, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7c256b43d4000038f3ac6a06da60f809", "bug_code_uid": "362b2ee93852f58db6dfea04e42ed383", "src_uid": "aca2346553f9e7b6e944ca2c74bb0b3d", "apr_id": "f78052b672e4b79edc78dca7761d7170", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nmain()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0;i<t;i++)\r\n    {\r\n        int a,b,c,d,e;\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        d=a-1;\r\n        if(c>b)\r\n             e=c-b+c-1;\r\n        else\r\n            e=c-1;\r\n        if(d<e)\r\n            printf(\"%d\\n\",1);\r\n        else if(e<d)\r\n            printf(\"%d\\n\",2);\r\n        else\r\n            printf(\"%d\\n\",3);\r\n\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nmain()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i=0;i<t;i++)\r\n    {\r\n        int a,b,c,d,e;\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        d=a-1;\r\n        if(c>b)\r\n             e=c-b+c-1;\r\n        else\r\n            e=b-1;\r\n        if(d<e)\r\n            printf(\"%d\\n\",1);\r\n        else if(e<d)\r\n            printf(\"%d\\n\",2);\r\n        else\r\n            printf(\"%d\\n\",3);\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9654471544715447, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f67ff42d7e22ef04870bb987b7a7f409", "bug_code_uid": "9173176d82b32aa0677a6e0a6068dda3", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "5df1ba13fb693324638346b3bf3a93cd", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n  int i,n,k,l,best=0,worst=0;\n  scanf(\"%d%d\",&n,&k);\n  char str[n][101];\n  char s[101];\n  int len[n];\n  for(i=0;i<n;i++){\n    scanf(\"%s\",str+i);\n    len[i]=strlen(str[i]);\n  }\n  scanf(\"%s\",s);\n  l=strlen(s);\n  for(i=0;i<n;i++){\n    if(len[i]<l)\n      best++;\n    if(len[i]<=l)\n        worst++;\n    if(len[i]>l)\n          break;\n  }\n  worst--;\n  best+=(best/k)*5 + 1;\n  worst+=(worst/k)*5 + 1;\n  printf(\"%d %d\",best,worst);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n  int i,n,k,l,best=0,worst=0;\n  scanf(\"%d%d\",&n,&k);\n  char str[n][101];\n  char s[101];\n  int len[n];\n  for(i=0;i<n;i++){\n    scanf(\"%s\",str+i);\n    len[i]=strlen(str[i]);\n  }\n  scanf(\"%s\",s);\n  l=strlen(s);\n  for(i=0;i<n;i++){\n    if(len[i]<l)\n      best++;\n    if(len[i]<=l)\n        worst++;\n  }\n  worst--;\n  best+=(best/k)*5 + 1;\n  worst+=(worst/k)*5 + 1;\n  printf(\"%d %d\",best,worst);\n  return 0;\n}\n"}
{"similarity_score": 0.7957405614714425, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "24392f0cbd2b9b5334d3915d00d28026", "bug_code_uid": "4a5266f0dfc937cec4d19b8d76e72761", "src_uid": "69838d9f9214c65b84a21d4eb546ea4b", "apr_id": "8af3aced6a6a91b5cae690666961a7aa", "difficulty": 800, "tags": ["brute force", "data structures", "greedy", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define  _CRT_SECURE_NO_WARNINGS  1\r\n#include <stdio.h>\r\n#include <string.h>\r\nint main(void)\r\n{\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\twhile(n--)\r\n\t{\r\n\t\tint arr[101] = { 0 };\r\n\t\tint m,i,q;\r\n\t\tscanf(\"%d\", &m);\r\n\t\tfor(i=0;i<m;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &q);\r\n\t\t\tarr[q]++;\r\n\t\t\r\n\t\tint c = 101;\r\n\t\twhile(c--)\r\n\t\t{\r\n\t\t\tint sum = 0;\r\n\t\t\tfor(i=0;i<101;i++)\r\n\t\t\t{\r\n\t\t\t\tif(arr[i]!=0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d \", i);\r\n\t\t\t\t\tarr[i]--;\r\n\t\t\t\t\tsum++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (sum == 0)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}", "fixed": "#define  _CRT_SECURE_NO_WARNINGS  1\r\n#include <stdio.h>\r\n#include <string.h>\r\nint main(void)\r\n{\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\twhile (n--)\r\n\t{\r\n\t\tint arr[101] = { 0 };\r\n\t\tint m, i, q;\r\n\t\tscanf(\"%d\", &m);\r\n\t\tfor (i = 0; i < m; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &q);\r\n\t\t\tarr[q]++;\r\n\t\t}\r\n\t\t\tint c = 101;\r\n\t\t\twhile (c--)\r\n\t\t\t{\r\n\t\t\t\tint sum = 0;\r\n\t\t\t\tfor (i = 0; i < 101; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (arr[i] != 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"%d \", i);\r\n\t\t\t\t\t\tarr[i]--;\r\n\t\t\t\t\t\tsum++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (sum == 0)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\r\n}"}
{"similarity_score": 0.945054945054945, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "bc366d02d15362ab65c3717c1f28ca5b", "bug_code_uid": "eb16477a3d65a2eb9d36c5ce0623f8ef", "src_uid": "99a5b21a5984d5248e82f843f82e9420", "apr_id": "a3b532ba3562f553a745f31c20510bc9", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint t;\n\tint n;\n\tint i;\n\tint h;\n\tint x;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\th=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=9;i++)\n\t\t{\n\t\t\tx=i;\n\t\t\twhile(x<=n)\n\t\t\t{\n\t\t\t\th++;\n\t\t\t\tx=x*10+i;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",h);\n\t} \n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint t;\n\tint n;\n\tint i;\n\tlong long int h,x;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\th=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=9;i++)\n\t\t{\n\t\t\tx=i;\n\t\t\twhile(x<=n)\n\t\t\t{\n\t\t\t\th++;\n\t\t\t\tx=x*10+i;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",h);\n\t} \n\treturn 0;\n}\n"}
{"similarity_score": 0.018912529550827423, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5a7f8fba00b4e80589c7ea0b314e41b7", "bug_code_uid": "51e2f425e3f2276417000caa650c9dd0", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "2cb06198fa3b9bcc84db82dff4514a2e", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n\n\t\t\t\tk-=1;\n\t\t\t\tcount+=1;\n\t\t\t}\n\t\t\tprintf(\"%ld\\n\",h);\n\t\t}\n\treturn 0;\n}\n\n\t\n\n\t", "fixed": "#include <stdio.h>\n\nint main(int argc, char **argv)\n{\n\tlong long int a,b,k,t,i,j,s;\n\n\n\tscanf(\"%I64d\",&t);\n\t\n\tfor(i=0;i<t;i++)\n\t{\n\t    scanf(\"%I64d\",&a);\n\t    scanf(\"%I64d\",&b);\n\t    scanf(\"%I64d\",&k);\n\t    j=k%2;\n\t    if(j==0)\n\t    {\n\t\t\ts=(a*k/2)-(b*k/2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ts=((a*(k/2))+a)-(b*(k/2));\n\t\t}\t\n\t    printf(\"%I64d\\n\",s);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.2622673434856176, "equal_cnt": 27, "replace_cnt": 23, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 27, "lang": "GNU C11", "fix_code_uid": "75d9dbc1c33b344b850ea7a5105d5369", "bug_code_uid": "a3b95284530cc327e974bad8c6163a67", "src_uid": "7100fa11adfa0c1f5d33f9e3a1c3f352", "apr_id": "cf6815ff41c41887682b1fbe535e6aa9", "difficulty": 800, "tags": ["geometry", "greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tlong long a[100],b[100],c,d,n,i,e,j,max;\r\n\tscanf(\"%lld\",&n);\r\n\twhile(n--){\r\n\t\tscanf(\"%lld\",&i);\r\n\t\tj=d=0;\r\n\t\twhile(j<i){\r\n\t\t\tscanf(\"%lld %lld\",&a[j],&b[j]);\r\n\t\t\tif(a[j]>b[j]){\r\n\t\t\t\tc=a[j];\r\n\t\t\t\ta[j]=b[j];\r\n\t\t\t\tb[j]=c;\r\n\t\t\t}\r\n\t\t\td=d+a[j]*2;\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tj=0;\r\n\t\twhile(j<i){\r\n\t\t\tif(j==0) max=b[j];\r\n\t\t\tif(b[j]>max) max=b[j];\r\n\t\t\tj++;\r\n\t\t}\r\n\t\td=d+max*2;\r\n\t\tprintf(\"%lld\\n\",d);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n \r\nint main(){\r\n   long long int t,a,b,c,d,i,n;\r\n   scanf(\"%lld\",&t);\r\n   while(t--){\r\n    scanf(\"%lld\",&n);\r\n    long long int sum=0;\r\n    long long int max=0;\r\n    long long int ar[n];\r\n    long long int br[n];\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%lld %lld\",&ar[i],&br[i]);\r\n            if(ar[i]<=br[i]){\r\n                sum=sum+ar[i];\r\n                if(max<br[i]){\r\n                    max=br[i];\r\n                }\r\n                }\r\n            else{\r\n                sum=sum+br[i];\r\n                if(max<ar[i]){\r\n                    max=ar[i];\r\n                }\r\n            }\r\n \r\n           \r\n        }\r\n         long long int res=(2*sum+2*max);\r\n \r\n         printf(\"%lld\\n\",res);\r\n    }\r\n    return 0;\r\n   \r\n   }"}
{"similarity_score": 0.9861259338313767, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "22a9bb2f928213802681cc6e91a1e268", "bug_code_uid": "5735c3c4176d2be6194a9c9b0384b429", "src_uid": "77b5bed410d621fb56c2eaebccff5108", "apr_id": "e74cfc247689a0f0aeae6b65bc971f58", "difficulty": 1600, "tags": ["greedy", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nlong long int n,i,j,u,m,max,d,t,s,uu,a,b,c,d;\nint main()\n{\n\tscanf(\"%lld %lld %lld %lld\",&n,&m,&a,&b);\n\tmax=a+b-1;\n\tfor(i=1;i<m;i++)\n\t{\n\t\tscanf(\"%lld %lld\",&c,&d);\n\t\tif(c-a<(b-d)*(b>d ? 1 : -1))\n\t\t{\n\t\t\t//printf(\"IMPOSSIBLE\");\n\t\t\t//return 0;\n\t\t\tuu=1;\n\t\t}\n\t\tt=((c-a)-(d-b))/2+(b>d ? b:d );\n\t\tif(t>max)\n\t\t\tmax=t;\n\t\ta=c;b=d;\n\t}\n\tt=n-a+b;\n\tif(t>max)\n\t\tmax=t;\n\tif(uu)\n\t\tprintf(\"IMPOSSIBLE\");\n\telse\n\tprintf(\"%lld\",max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nlong long int n,i,j,u,m,max,d,t,s,uu,a,b,c,d;\nint main()\n{\n\tscanf(\"%lld %lld %lld %lld\",&n,&m,&a,&b);\n\tmax=a+b-1;\n\tfor(i=1;i<m;i++)\n\t{\n\t\tscanf(\"%lld %lld\",&c,&d);\n\t\tif(c-a<(b-d)*(b>d ? 1 : -1))\n\t\t{\n\t\t\t//printf(\"IMPOSSIBLE\");\n\t\t\t//return 0;\n\t\t\tuu=1;\n\t\t}\n\t\tt=((c-a)-(d-b)*(d>b ? 1:-1))/2+(b>d ? b:d );\n\t\tif(t>max)\n\t\t\tmax=t;\n\t\ta=c;b=d;\n\t}\n\tt=n-a+b;\n\tif(t>max)\n\t\tmax=t;\n\tif(uu)\n\t\tprintf(\"IMPOSSIBLE\");\n\telse\n\tprintf(\"%lld\",max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.46134185303514375, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "1e6743fa1499a5b9e86f8c5b3b783ec1", "bug_code_uid": "6bb10d653f66a1a71ea85c30efea66a6", "src_uid": "0e0ef011ebe7198b7189fce562b7d6c1", "apr_id": "5903b099d70b5cbb5ad60d6f5dedfd78", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[100001];\nint b[100001];\nint main()\n{\n    int t,n,i,temp,flag;\n    scanf(\" %d\", &t);\n    while(t--){\n        scanf(\" %d\", &n);\n        for(i=0;i<n;i++){\n            scanf(\" %d\", &a[i]);\n        }\n        for(i=0;i<n;i++){\n            scanf(\" %d\", &b[i]);\n        }\n        i=0;\n        while(a[i]==b[i]) i++;\n        temp=b[i]-a[i];\n        if(temp<0){\n            printf(\"NO\\n\");\n            break;\n        }\n        while(a[i]!=b[i] && i<n){\n            a[i]+=temp;\n            i++;\n        }\n        flag=0;\n        for(i=0;i<n;i++){\n            if(a[i]!=b[i]){\n                flag++;\n                break;\n            }\n        }\n        if(flag) printf(\"NO\\n\");\n        else printf(\"YES\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint a[100001];\nint b[100001];\n\nint main()\n{\n    int t,n,i,temp;\n    scanf(\" %d\", &t);\n    while(t--){\n        scanf(\" %d\", &n);\n        for(i=0;i<n;i++){\n            scanf(\" %d\", &a[i]);\n        }\n        for(i=0;i<n;i++){\n            scanf(\" %d\", &b[i]);\n        }\n        i=0;\n        while(a[i]==b[i] && i<n) i++;\n        if(i==n){\n            printf(\"YES\\n\");\n            continue;\n        }\n        temp=a[i]-b[i];\n        if(temp>0){\n            printf(\"NO\\n\");\n            continue;\n        }\n        while((b[i]+temp)==a[i] && i<n) i++;\n        if(i==n){\n            printf(\"YES\\n\");\n            continue;\n        }\n        if(a[i]!=b[i]){\n            printf(\"NO\\n\");\n            continue;\n        }\n        while(a[i]==b[i] && i<n) i++;\n        if(i==n) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n}\n"}
{"similarity_score": 0.976913730255164, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "456698cfdd3f7ac316e9ddfbb5c03a75", "bug_code_uid": "9ad1452a7a7318352cf646f551b6dbf3", "src_uid": "9fd8e75cb441dc809b1b2c48c4012c76", "apr_id": "73a775b4c4f809b9445a99f77c97d4c7", "difficulty": 1500, "tags": ["two pointers", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\tint n;\n\tint m;\n\tint j;\n\tint tmp;\n\tint tmpMin=2100000000;\n\tint tmpMax=0;\n\tint *arrN;\n\tint *arrM;\n\tscanf(\"%d %d\", &n, &m);\n\tj = 0;\n\tarrN = (int*)malloc(sizeof(int)*n);\n\tarrM = (int*)malloc(sizeof(int)*m);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &arrN[i]);\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\tscanf(\"%d\", &arrM[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\ttmpMin = 2100000000;\n\t\tfor (; j < m; j++) {\n\t\t\tif (arrN[i] < arrM[j]) tmp = arrM[j] - arrN[i];\n\t\t\telse tmp = arrN[i] - arrM[j];\n\n\t\t\tif (tmp > tmpMin) break;\n\t\t\telse {\n\t\t\t\ttmpMin = tmp;\n\t\t\t}\n\t\t}\n\t\tif (tmpMin > tmpMax) {\n\t\t\ttmpMax = tmpMin;\n\t\t\ttmp = arrN[i] + tmpMax + tmpMax;\n\t\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\t\tif (arrN[j] > tmp) break;\n\t\t\t}\n\t\t\tj--;\n\t\t}\n\t}\n\tprintf(\"%d\", tmpMax);\n\treturn 0;\n\n}", "fixed": "\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\tint n;\n\tint m;\n\tint j;\n\tint tmp;\n\tint tmpMin=2100000000;\n\tint tmpMax=0;\n\tint *arrN;\n\tint *arrM;\n\tscanf(\"%d %d\", &n, &m);\n\tj = 0;\n\tarrN = (int*)malloc(sizeof(int)*n);\n\tarrM = (int*)malloc(sizeof(int)*m);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &arrN[i]);\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\tscanf(\"%d\", &arrM[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\ttmpMin = 2100000000;\n\t\tfor (; j < m; j++) {\n\t\t\tif (arrN[i] < arrM[j]) tmp = arrM[j] - arrN[i];\n\t\t\telse tmp = arrN[i] - arrM[j];\n\n\t\t\tif (tmp > tmpMin) break;\n\t\t\telse {\n\t\t\t\ttmpMin = tmp;\n\t\t\t}\n\t\t}\n\t\tif (tmpMin > tmpMax) {\n\t\t\ttmpMax = tmpMin;\n\t\t\ttmp = arrN[i] + tmpMax + tmpMax;\n\t\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\t\tif (arrN[j] > tmp) break;\n\t\t\t}\n\t\t}\n\t\tj--;\n\t}\n\tprintf(\"%d\", tmpMax);\n\treturn 0;\n\n}"}
{"similarity_score": 0.9644444444444444, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e262876b7a4b68aa9694d118795beea7", "bug_code_uid": "3204cd0318b32354a32bc398a6137050", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "dd031064c60c19daae3025db3b96b47f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,m,p,q;\n    p=0;\n    scanf(\"%d\",&n);\n    m = (n*(n+1))/2;\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d\",&q);\n        p = p+q;\n        }\n    printf(\"%d\\n\",m-p);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int i,n,m,p,q;\n    p=0;\n    scanf(\"%lld\",&n);\n    m = (n*(n+1))/2;\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%lld\",&q);\n        p = p+q;\n        }\n    printf(\"%lld\\n\",m-p);\n    return 0;\n}"}
{"similarity_score": 0.8229813664596274, "equal_cnt": 19, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 17, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "7243f0f54c48aae2ecd741be4ac997a6", "bug_code_uid": "44e3ecc889bdaec627982c2c54ebf629", "src_uid": "0c5cf0af057b0c838f13b491b923447a", "apr_id": "d557b649dc8590f6d138953ee0527de3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nint n;\r\nscanf(\"%d\",&n);\r\nfor(int i=0; i<n; i++){\r\n    long long int d;\r\n    int sum=0;\r\n\r\n    scanf(\"%lld\",&d);\r\n    if(d%2!=0){\r\n        sum=(d/2)+1;\r\n    }\r\n    else{\r\n        sum=d/2;\r\n    }\r\n\r\n    printf(\"%lld\\n\",sum);\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        long long int d;\r\n        long long int sum=0;\r\n\r\n        scanf(\"%lld\",&d);\r\n        if(d%2!=0)\r\n        {\r\n            sum=(d/2)+1;\r\n        }\r\n        else\r\n        {\r\n            sum=d/2;\r\n        }\r\n\r\n        printf(\"%lld\\n\",sum);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9958677685950413, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "85421348cc49884a2f678e9087acbdec", "bug_code_uid": "1454561319b2354a7a38a3e793d7b3df", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "27cd052226b24570b60a0115840533db", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int t,i,j,n,x,y;\n\tscanf(\"%ld\",&t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%ld\",&x);\n\t\tif(x==1){\n\t\t\tprintf(\"%d\\n\",3);\n\t\t}\n\t\telse if(x==2){\n\t\t\tprintf(\"%d\\n\",2);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%ld\",x%2);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong int t,i,j,n,x,y;\n\tscanf(\"%ld\",&t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%ld\",&x);\n\t\tif(x==1){\n\t\t\tprintf(\"%d\\n\",3);\n\t\t}\n\t\telse if(x==2){\n\t\t\tprintf(\"%d\\n\",2);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%ld\\n\",x%2);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.1671018276762402, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "013fd2d3e87f1bc262ff109ea0486232", "bug_code_uid": "574a6c3a4b6724cfe63e09c0608409c8", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "0cd7c2d33b16fbda9fdff52c85c667d8", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint max(int x, int y){\n    return (x & -(x > y)) + (y & -(x <= y));\n}\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n\n    while(t--){\n        int n, x;\n        int a;\n        int l = -1, r, sum = 0;\n        int ans = -1;\n\n        scanf(\"%d %d\", &n, &x);\n\n        for(int i = 0; i < n; i++){\n            int a;\n            scanf(\"%d\", &a);\n            sum += a;\n            if(sum % x){\n                if(l == -1){\n                    l = i;\n                    r = i;\n                }\n                else {\n                    r = i;\n                }\n            }\n        }\n        \n        if(sum % x)\n            printf(\"%d\\n\", n);\n        else{\n            if(l == -1)\n                printf(\"-1\\n\");\n            else\n                printf(\"%d\\n\", max(r + 1, n - l - 1));\n        }\n    }\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    int t;\n\n    scanf(\"%d\", &t);\n\n    while(t--){\n        char b[101];\n        scanf(\"%s\", b);\n\n        printf(\"%c\", b[0]);\n        for(int i = 2; i < strlen(b); i += 2)\n            printf(\"%c\", b[i]);\n        printf(\"%c\\n\", b[strlen(b) - 1]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9226519337016574, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8f42542e1cd4641b320148466dbb1546", "bug_code_uid": "70b78ecdbf9337c3e6c0c5cc20727b85", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "c47793cf15a6156e7fd85beea8ac0630", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int tc, w, h, n, ;\r\n    long long sum = 1;\r\n    scanf(\"%d\", &tc);\r\n    for(int i =0; i<tc; i++)\r\n    {\r\n        scanf(\"%d %d %d\",&w,&h,&n);\r\n        while(w%2 ==0)\r\n        {\r\n            w /= 2;\r\n            sum *= 2;\r\n        }\r\n        while(h%2 == 0)\r\n        {\r\n            h /= 2;\r\n            sum *= 2;\r\n        }\r\n        if(sum >= n)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int tc, w, h, n;\r\n    scanf(\"%d\", &tc);\r\n    for(int i =0; i<tc; i++)\r\n    {\r\n        scanf(\"%d %d %d\",&w,&h,&n);\r\n        long long sum = 1;\r\n        while(w%2 ==0)\r\n        {\r\n            w /= 2;\r\n            sum *= 2;\r\n        }\r\n        while(h%2 == 0)\r\n        {\r\n            h /= 2;\r\n            sum *= 2;\r\n        }\r\n\r\n        if(sum >= n)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.980561555075594, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5b636f68d387818dce2617e5dbca32fa", "bug_code_uid": "83d28eda94442a7f108e834e2a24b7bd", "src_uid": "e03bec836d52fe4784a5b4c62ab5b2c8", "apr_id": "7d4530e2977baa223e3724cfd929fffd", "difficulty": 1700, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long int n,i,z=0,x=0,y=0,l=0,s=0;\n    char a[300001],b[10];\n    scanf(\"%lld\",&n);\n    \n    gets(b);\n    gets(a);\n    for(i=0;i<=n-1;i++)\n    {if(a[i]=='(')\n     {x++;}\n     if(a[i]==')')\n     {y++;}\n    }\n    if(a[0]==')'||a[n-1]=='(')\n    {printf(\":(\");}\n    else\n    {\n        \n     for(i=0;i<=n-1;i++)\n     {if(l>=(n/2-x))\n      {break;}\n      if(a[i]=='?')\n      {a[i]='(';\n       l++;\n      }\n     }\n    l=0;\n    for(i=0;i<=n-1;i++)\n    {if(l>=(n/2-y))\n     {break;}\n     if(a[i]=='?')\n     {a[i]=')';\n      l++;\n     }\n    }\n    for(i=0;i<=n-1;i++)\n    {if(a[i]=='(')\n     {s=s+1;}\n     else\n     {s=s-1;}\n     if(s==0&&i!=n-1||a[i]=='?')\n     {printf(\":(\");\n      break;\n     }\n    }\n    if(i==n&&s==0)\n    {puts(a);}\n    else\n    {if(s!=0)\n     {printf(\":(\");}\n    }\n    }\n    return 0;\n}\n    \n       \n       \n       \n       \n       \n       ", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    long long int n,i,z=0,x=0,y=0,l=0,s=0,k=0;\n    char a[300001],b[10];\n    scanf(\"%lld\",&n);\n    \n    gets(b);\n    gets(a);\n    for(i=0;i<=n-1;i++)\n    {if(a[i]=='(')\n     {x++;}\n     if(a[i]==')')\n     {y++;}\n    }\n    if(a[0]==')'||a[n-1]=='(')\n    {printf(\":(\");\n     k++;\n    }\n    else\n    {\n        \n     for(i=0;i<=n-1;i++)\n     {if(l>=(n/2-x))\n      {break;}\n      if(a[i]=='?')\n      {a[i]='(';\n       l++;\n      }\n     }\n    l=0;\n    for(i=0;i<=n-1;i++)\n    {if(l>=(n/2-y))\n     {break;}\n     if(a[i]=='?')\n     {a[i]=')';\n      l++;\n     }\n    }\n    for(i=0;i<=n-1;i++)\n    {if(a[i]=='(')\n     {s=s+1;}\n     else\n     {s=s-1;}\n     if(s==0&&i!=n-1||a[i]=='?')\n     {printf(\":(\");\n      k++;\n      break;\n     }\n    }\n    if(i==n&&s==0)\n    {puts(a);}\n    else\n    {if(s!=0&&k==0)\n     {printf(\":(\");}\n    }\n    }\n    return 0;\n}\n    \n       \n       \n       \n       \n       \n       "}
{"similarity_score": 0.6514285714285715, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "a5cfe705699f90019af11bb91eebd7fb", "bug_code_uid": "15898591981a0fcdad8afca06c86d5a5", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "a4d267a821e210921bdc704ffa3fcb15", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,a[100];\n    int i;\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    \nint min,max;\nmin=a[1];\nmax=a[1];\nfor(i=2;i<=n;i++)\n{\nif(a[i]<=min)\nmin=i;\nif(a[i]>max)\nmax=i;\n}\n    if(min<max)\n    printf(\"%d\",n-min+max-1-1);\n    else\n    printf(\"%d\",min-n+max-1);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,a[101];\n    int i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    \nint min,max,i1,i2;\nmin=a[1];\nmax=a[1];\ni1=1;\ni2=1;\nfor(i=2;i<=n;i++)\n{\nif(a[i]<=min)\n    {\n        min=a[i];\n        i1=i;\n    }\n\nif(a[i]>max)\n    {\n    max=a[i];\n    i2=i;\n    }\n\n}\n    if(i1<i2)\n    printf(\"%d\",n-i1+i2-1-1);\n    else\n    printf(\"%d\",n-i1+i2-1);\nreturn 0;\n}"}
{"similarity_score": 0.9973082099596231, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "97b564872e31369034d529073292109a", "bug_code_uid": "c2afb540a1d9deb375aa9450366a5fdb", "src_uid": "03772bac6ed5bfe75bc0ad4d2eab56fd", "apr_id": "5ccb0303b8d1c76b986b92f4b8bc0922", "difficulty": 1600, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// 288C.cpp : Defines the entry point for the console application.\n//\n\n//#include \"stdafx.h\"\n#include <stdio.h>\n#include <string.h>\n\n#define MAX_M 500\n\nint m,t,r,Tg[MAX_M],Tc[MAX_M],Tl[MAX_M];\n\nint main()\n{\n\tint i,j,g,c,cc,fg,z=100;\n\twhile(scanf(\"%d %d %d\",&m,&t,&r)!=EOF){\n\t\tmemset(Tg,0,sizeof(Tg));\n\t\tmemset(Tc,0,sizeof(Tc));\n\t\tmemset(Tl,0,sizeof(Tl));\n\t\tfor(i=0;i<m;i++){\n\t\t\tscanf(\"%d\",&g);\n\t\t\tif(!i)\n\t\t\t\tfg=g+z;\n\t\t\tTg[g+z]=1;\n\t\t}\n\t\tcc=0;\n\t\tfor(i=fg;i<=g+z;i++){\n\t\t\tif(Tg[i] && Tc[i]<r){\n\t\t\t\tj=i-1;\n\t\t\t\twhile(Tc[i]<r && j>=i-(r+1)){\n\t\t\t\t\tif(!Tl[j]){\n\t\t\t\t\t\tTl[j]=1;\n\t\t\t\t\t\tcc++;\n\t\t\t\t\t\tfor(c=j+1;c<=j+t;c++)\n\t\t\t\t\t\t\tTc[c]++;\n\t\t\t\t\t}\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\tif(j<i-(r+1)){\n\t\t\t\t\tcc=-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",cc);\n\t}\n\treturn 0;\n}\n\n", "fixed": "// 288C.cpp : Defines the entry point for the console application.\n//\n\n//#include \"stdafx.h\"\n#include <stdio.h>\n#include <string.h>\n\n#define MAX_M 950\n\nint m,t,r,Tg[MAX_M],Tc[MAX_M],Tl[MAX_M];\n\nint main()\n{\n\tint i,j,g,c,cc,fg,z=300;\n\twhile(scanf(\"%d %d %d\",&m,&t,&r)!=EOF){\n\t\tmemset(Tg,0,sizeof(Tg));\n\t\tmemset(Tc,0,sizeof(Tc));\n\t\tmemset(Tl,0,sizeof(Tl));\n\t\tfor(i=0;i<m;i++){\n\t\t\tscanf(\"%d\",&g);\n\t\t\tif(!i)\n\t\t\t\tfg=g+z;\n\t\t\tTg[g+z]=1;\n\t\t}\n\t\tcc=0;\n\t\tfor(i=fg;i<=g+z;i++){\n\t\t\tif(Tg[i] && Tc[i]<r){\n\t\t\t\tj=i-1;\n\t\t\t\twhile(Tc[i]<r && j>=i-(r+1)){\n\t\t\t\t\tif(!Tl[j]){\n\t\t\t\t\t\tTl[j]=1;\n\t\t\t\t\t\tcc++;\n\t\t\t\t\t\tfor(c=j+1;c<=j+t;c++)\n\t\t\t\t\t\t\tTc[c]++;\n\t\t\t\t\t}\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\tif(j<i-(r+1)){\n\t\t\t\t\tcc=-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",cc);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7427055702917772, "equal_cnt": 21, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "90cf535d51dadd4619659fe42c0c7eac", "bug_code_uid": "91f2416d85a67c12f3849328bbd418c7", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "4963f8ba6e4b525a55494c74a1d84e12", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define max(a,b) ((a>b)?a:b)\nint n;\nint s[1000010];\n\nint main()\n{\n    int i;\n    scanf(\"%d\",&n);\n\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&s[i]);\n    }\n\n    for(i=n;i>=1;i--){\n        s[i]-=s[i-1];\n    }\n\n    int a=0,b=0;\n    for(i=1;i<=n;i++){\n        if(s[i]>=0) a++;\n        else a=1;\n        b=max(a,b);\n    }\n\n    printf(\"%d\\n\",b);\n}\n", "fixed": "#include <stdio.h>\n#define max(a,b) ((a>b)?a:b)\n\nint N;\nint A[100001];\n\nint main()\n{\n    int i;\n    scanf(\"%d\", &N);\n    for(i=1; i<=N; i++)\n        scanf(\"%d\", A+i);\n    for(i=N; i>=1; i--)\n        A[i]-=A[i-1];\n    int a=0, b=0;\n    for(i=1; i<=N; i++)\n    {\n        if(A[i]>=0)\n            a++;\n        else\n            a=1;\n        b=max(b, a);\n    }\n    printf(\"%d\\n\", b);\n    return 0;\n}\n"}
{"similarity_score": 0.999043062200957, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5aab9dc3077d632df8e069c0eda86ccd", "bug_code_uid": "c7e6b33aea7bcf5b5780a4d172ee2d28", "src_uid": "b4341e1b0ec0b7341fdbe6edfe81a0d4", "apr_id": "03652e1224547bb073c85b9dd3b1daf6", "difficulty": 1400, "tags": ["implementation", "sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j,a[11],ans=0,s=0;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<=10;i++)\n    a[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&j);\n        s=s+j;\n        ans+=j/10;\n        a[10-(j%10)]++;\n    }\n    if(n*100-s<=k)\n    ans=10*n;\n    else\n    {\n        i=1;\n        while(k>0&&i<10)\n        {\n            while(a[i]>0&&k-i>0)\n            {a[i]--;\n            k=k-i;\n            ans++;}\n            i++;\n        }\n        ans+=k/10;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n    ", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j,a[11],ans=0,s=0;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<=10;i++)\n    a[i]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&j);\n        s=s+j;\n        ans+=j/10;\n        a[10-(j%10)]++;\n    }\n    if(n*100-s<=k)\n    ans=10*n;\n    else\n    {\n        i=1;\n        while(k>0&&i<10)\n        {\n            while(a[i]>0&&k-i>=0)\n            {a[i]--;\n            k=k-i;\n            ans++;}\n            i++;\n        }\n        ans+=k/10;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n    "}
{"similarity_score": 0.36531365313653136, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "424e953cf5d1685f6c5b866e5afb79c6", "bug_code_uid": "c13c023a2a5b4b5732d334cc70bd070a", "src_uid": "0c9030689394ad4e126e5b8681f1535c", "apr_id": "3f16412c91dc246b8630e7312111c3b3", "difficulty": 1100, "tags": ["dp", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t,n,a[100000],flag=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        int count=0;\n        for(int i=0;i<n;i++)\n            scanf(\"%d\",&a[i]);\n        for(int i=0;i<n-1;i++)\n        {\n            if(a[i]==1)\n            {\n                count++;\n                if(a[i+1]!=1)\n                {\n                    flag=1;\n                    break;\n                }\n            }\n        }\n        if(!flag)\n            if(a[n-1]==1)\n                count++;\n        if(count!=n)\n        {\n            if(count%2)\n                printf(\"Second\\n\");\n            else\n                printf(\"First\\n\");\n        }\n        else\n        {\n            if(count%2)\n                printf(\"First\\n\");\n            else\n                printf(\"Second\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t,n,a[100000];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        int count=0,flag=0;\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]==1)\n                count++;\n        }\n        for(int i=0;i<n;i++)\n        {\n            if(a[i]==1)\n                flag=!flag;\n            else\n                break;\n        }\n        //printf(\"%d %d\\n\",count,flag);\n        if(count!=n)\n        {\n            if(flag==1)\n                printf(\"Second\\n\");\n            else\n                printf(\"First\\n\");\n        }\n        else\n        {\n            if(flag==1)\n                printf(\"First\\n\");\n            else\n                printf(\"Second\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.99712368168744, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "dc20d48484d291c5abb6fe9fc03c25e9", "bug_code_uid": "0946588bb8b95796bb2fbf631519b58f", "src_uid": "43081557fe2fbac39dd9b72b137b8fb0", "apr_id": "ee812a0a229ba08f2dca23b7a43eddbd", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n\r\nint main(){\r\n    int test;\r\n    scanf(\"%d\", &test);\r\n    // test = 1;\r\n    char s[51];\r\n    char ans[51];\r\n    while(test--){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        scanf(\"\\n\");\r\n        scanf(\"%s\", s);\r\n        scanf(\"\\n\");\r\n        int len = 0;\r\n        for(int i = n - 1; i >= 0; i--){\r\n            if(s[i] == '0'){\r\n                int temp = s[i - 1] - '0' + (s[i - 2] - '0')*10 - 1;\r\n                ans[len] = 'a' + temp;\r\n                len++;\r\n                i -= 2;\r\n            }else{\r\n                ans[len] = 'a' + (s[i] - '0') - 1;\r\n                len++;\r\n            }\r\n        }  \r\n        ans[len] = '\\0';\r\n        for(int i = 0; i < n/2; i++)\r\n     { char temp = ans[i];\r\n     ans[i] = ans[n - i - 1];\r\n     ans[n - i - 1] = temp;\r\n     }\r\n        \r\n        //for(int i = len - 1; i >= 0; i--){\r\n        //    printf(\"%c\", ans[i]);\r\n       // }\r\n        printf(\"%s\", ans);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n\r\nint main(){\r\n    int test;\r\n    scanf(\"%d\", &test);\r\n    // test = 1;\r\n    char s[51];\r\n    char ans[51];\r\n    while(test--){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        scanf(\"\\n\");\r\n        scanf(\"%s\", s);\r\n        scanf(\"\\n\");\r\n        int len = 0;\r\n        for(int i = n - 1; i >= 0; i--){\r\n            if(s[i] == '0'){\r\n                int temp = s[i - 1] - '0' + (s[i - 2] - '0')*10 - 1;\r\n                ans[len] = 'a' + temp;\r\n                len++;\r\n                i -= 2;\r\n            }else{\r\n                ans[len] = 'a' + (s[i] - '0') - 1;\r\n                len++;\r\n            }\r\n        }  \r\n        ans[len] = '\\0';\r\n        for(int i = 0; i < len/2; i++)\r\n     { char temp = ans[i];\r\n     ans[i] = ans[len - i - 1];\r\n     ans[len - i - 1] = temp;\r\n     }\r\n        \r\n        //for(int i = len - 1; i >= 0; i--){\r\n        //    printf(\"%c\", ans[i]);\r\n       // }\r\n        printf(\"%s\", ans);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.1399548532731377, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6bec85aeab6730c3a56866cbccfea040", "bug_code_uid": "fa25be8d2a30fb6d3068c0eca5ed6110", "src_uid": "08f1ba79ced688958695a7cfcfdda035", "apr_id": "641b3c65a3db729eec5a2fde37602ac7", "difficulty": 1400, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i,x,n,sum=0,rest=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{scanf(\"%d\",&x);\nsum=sum^x;\nsum=sum&x;\nif (sum==0)\nrest++;x=0;}\nprintf(\"%d\",rest);\nreturn 0;}\n", "fixed": "#include<stdio.h>\nint main()\n{int n;\n\tscanf(\"%d\",&n);\n\tint a[200],rest=0,i;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(!a[i])\n\t\t{rest++;}\n\t\telse if(a[i-1]==a[i]&&a[i]<3)\n\t\t{a[i]=0;rest++;}\n\t\tif(a[i]==3)\n\t\t{a[i]=3-a[i-1];}\n}\nprintf(\"%d\\n\",rest);\nreturn 0;}\n"}
{"similarity_score": 0.5521235521235521, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "dca7cf9ecc4007db745755f0ce53117d", "bug_code_uid": "43422d137a06c5fbe69a9db7fe54fb4b", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "0d58f2181fd31cfd708566519a6e2dc0", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nmain()\n{\n\tchar a[2002];\n\tscanf(\"%s\",a);\n\tint i=0,sum=0,d[26]={0};\n\twhile(a[i]!='}')\n        {\n        \tif((a[i]>96)&&(a[i]<123))\n        \td[a[i]-97]++;\n        \ti++;\n\t\t}\n      i=0;\n      while(i<26)\n     {\n     \tif(d[i]!=0)\n     \tsum++;\n     \ti++;\n      }\n     printf(\"%d\",sum);\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tchar a[3000];\n\tgets(a);\n\tint c=0,i=0,d[26]={0};\n\twhile(a[i]!='}')\n\t{\n\t\tif((a[i]>96)&&(a[i]<123))\n\t\td[a[i]-97]++;\n\t\ti++;\n\t}\n\ti=0;\n\twhile(i<26)\n\t{\n\t\tif(d[i])\n\t\tc++;\n\t\ti++;\n\t}\n\tprintf(\"%d\",c);\n}"}
{"similarity_score": 0.9980544747081712, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "21721cde27f5e29a87ace418ba0144cc", "bug_code_uid": "892bdc1e23200fabc716d9d050cecced", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "94d5cc10c0a43bff6866b186db2e8f1a", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main ()\n{\n\n    int n;\n    scanf(\"%d\",&n);\n    int a[100];\n    for(int i=0;i<n;i++) scanf(\"%d\", &a[i]);\n    for (int i=0;i<n;i++){\n        for(int j=0;j<n-1;j++){\n            if(a[j]>a[j+1]){\n                int temp=a[j+1];\n                a[j+1]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    int b=1;\n    int i=0;\n    while(b){\n        \n        if(a[i+1]!=a[i] && i+1<n){printf(\"%d\",a[i+1]);b=0;}\n        else i++;\n        if(i==n) {printf(\"NO\");break;};\n    }\n    \n", "fixed": "#include <stdio.h>\n\n\nint main ()\n{\n\n    int n;\n    scanf(\"%d\",&n);\n    int a[100];\n    for(int i=0;i<n;i++) scanf(\"%d\", &a[i]);\n    for (int i=0;i<n;i++){\n        for(int j=0;j<n-1;j++){\n            if(a[j]>a[j+1]){\n                int temp=a[j+1];\n                a[j+1]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    int b=1;\n    int i=0;\n    while(b){\n        \n        if(a[i+1]!=a[i] && i+1<n){printf(\"%d\",a[i+1]);b=0;}\n        else i++;\n        if(i==n) {printf(\"NO\");break;};\n    }\n    \n\n}"}
{"similarity_score": 0.9844236760124611, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "04efbddaf303a66d693dfa01dbee2db9", "bug_code_uid": "10cafb0ba58c4fe76e23d9d57bb4c2bc", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "0dc94e377b2aba8a5983d59bbc30bcd3", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, i, max=2147483647, w=0, flag=0;\n\tscanf(\"%d\", &n);\n\tfor(int j = 1; j<=n; j++)\n\t{\n\t\tscanf(\"%d\", &i);\n\t\tif(i<max)\n\t\t{\n\t\t\tmax = i;\n\t\t\tw = j;\n\t\t\tflag = 0;\n\t\t}\n\t\telse if(i==max)\n\t\t{\n\t\t\tflag = 1;\n\t\t}\n\t\tif (flag==0)\n\t\t{\n\t\t\tprintf(\"%d\", w);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"Still Rozdil\");\n\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, i, max=2147483647, w=0, flag=0;\n\tscanf(\"%d\", &n);\n\tfor(int j = 1; j<=n; j++)\n\t{\n\t\tscanf(\"%d\", &i);\n\t\tif(i<max)\n\t\t{\n\t\t\tmax = i;\n\t\t\tw = j;\n\t\t\tflag = 0;\n\t\t}\n\t\telse if(i==max)\n\t\t{\n\t\t\tflag = 1;\n\t\t}\n\t}\n\tif (flag==0)\n\t\t{\n\t\t\tprintf(\"%d\", w);\n\t\t}\n\telse\n\t\t{\n\t\t\tprintf(\"Still Rozdil\");\n\t\t}\n}\n\n"}
{"similarity_score": 0.6748681898066784, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5bb2c2990ae2a68f0a36a913d0acaa37", "bug_code_uid": "85eaff7844c6ef12949c602e025e38e9", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "ba54acfdd15582cdee3ed0258ee07fe4", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main ()\n{\n  long int x,y,n ,t;\n  scanf(\"%ld\",&t);\n  while(t--)\n  {\n      scanf(\"%ld%ld%ld\",&x,&y,&n);\n      while(n--)\n      {\n        if(n%x==y)\n        {\n            printf(\"%ld\\n\",n);\n            break;\n        }\n      }\n  }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main ()\n{\n  long int x,y,n ,t;\n  scanf(\"%ld\",&t);\n  while(t--)\n  {\n      scanf(\"%ld%ld%ld\",&x,&y,&n);\n      if(n-n%x+y<=n)printf(\"%d\\n\",n-(n%x)+y);\n      else printf(\"%d\\n\",n-(n%x)-(x-y));\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.6117054751415985, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "1bb6ad16c5ad8c51097fbd69fa19d843", "bug_code_uid": "9aa2da13f2f4ac6be8d776082d0a0ab8", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "d453452474f90bcf580c26046f31e276", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int count;\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int answer =-1;\r\n        int n;\r\n        int a[200000];\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            count =0;\r\n            for(int k=j;k<n;k++)\r\n            {\r\n                if(a[j]==a[k])\r\n                {\r\n                    count+=1;\r\n                }\r\n                \r\n            }\r\n            if(count>=3)\r\n                {\r\n                    answer=a[j];\r\n                    break;\r\n                }\r\n               //printf(\"%d\\n\",count); \r\n        }\r\n        printf(\"%d\\n\",answer);\r\n        // int count;\r\n        // if(count<3)\r\n        // {\r\n        //     printf(\"-1\\n\");\r\n        // }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int count;\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int flag =-1;\r\n        int n;\r\n        int a[200005];\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int count[200005]={0};\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            count[a[j]]++;\r\n        }\r\n        for(int j=0;j<=n;j++)\r\n        {\r\n            if(count[j]>=3)\r\n            {\r\n                printf(\"%d\\n\",j);\r\n                flag=1;\r\n                break;\r\n            }\r\n            \r\n        }\r\n        if(flag==-1)\r\n            printf(\"-1\\n\");\r\n\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9956140350877193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1b4e7b018230dbd9bcbd43acfa5e7fa8", "bug_code_uid": "77913823e40a0183e17d75df75344d85", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "a8ae81940d4ff3fe2d3c73205a8bd516", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint a,i=0;\n\tchar b[10000];\n\tgets(b);\n\tprintf(\"%s\",b);\n//\tsprintf(b,\"%d\",a);\n    \n\tint m = strlen(b);\n\tfor(i=m-1;i>=0;i--)\n\t{\n\t\tprintf(\"%c\",b[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint a,i=0;\n\tchar b[1000000];\n\tgets(b);\n\tprintf(\"%s\",b);\n//\tsprintf(b,\"%d\",a);\n    \n\tint m = strlen(b);\n\tfor(i=m-1;i>=0;i--)\n\t{\n\t\tprintf(\"%c\",b[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.4498948843728101, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "c8e842317e6ffd7a47411345834c82c0", "bug_code_uid": "1be05409c5d62f2c0206023df2e3f704", "src_uid": "2d1609b434262d30f6bd030d41a71bd5", "apr_id": "922fb7c028c505cb9b912cccc212d74a", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j;\n    char first[100000],second[100000],ch;\n    scanf(\"%s%s\",first,second);\n    int l=strlen(first);\n    int r=0,s=0;\n    for(i=0; i<l; i++)\n    {\n        if(first[i]!=second[i])\n        {\n            r++;\n        }\n    }\n    for(i=0; i<l; i++)\n    {\n        if(first[i]!=second[i])\n        {\n            s++;\n            for(j=i+1; j<l; j++)\n            {\n                ch=0;\n                if(second[i]==first[j])\n                {\n                    ch=first[j];\n                    first[j]=first[i];\n                    first[i]=ch;\n                    break;\n                }\n            }\n\n        }\n        if(strcmp(first,second)==0)\n        {\n            break;\n        }\n    }\n    if(s<r&&strcmp(first,second)==0)\n    {\n        printf(\"%d\\n\",s);\n    }\n    else\n    {\n        printf(\"%d\\n\",r);\n    }\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\n#include<string.h>\n    char first[1000000],second[1000000],ch;\nint main()\n{\n    int i,c4,c7;\n    scanf(\"%s%s\",first,second);\n    int l=strlen(first);\n    int r=0,s=0;\n    c4=0;\n    c7=0;\n    for(i=0; i<l; i++)\n    {\n        if(first[i]!=second[i])\n        {\n            if(first[i]=='4')\n            {\n                 c4++;\n            }\n            else\n            {\n                c7++;\n            }\n        }\n    }\n    if(c4>c7)\n        printf(\"%d\\n\",c4);\n    else\n        printf(\"%d\\n\",c7);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9855072463768116, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "f195315832dd02a3b290af29fae4f39c", "bug_code_uid": "5a7b80eeea56b4e1b55bbd8f4a1f8950", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "5456ce835dcb141c705acbc64e9ab002", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint max(int n, int a[])\n{\n    int i, index, maxc;\n    maxc = a[0];\n    for(i=0; i<n; i++)\n    {\n        if(a[i]==0)\n            continue;\n        else if(a[i]>maxc)\n        {\n            maxc = a[i];\n            index = i;\n        }\n    }\n    a[index]=0;\n    return maxc;\n}\n\nint main()\n{\n    int n, i, arraysum=0, coinesum=0, count=0;\n    int var;\n    scanf(\"%d\",&n);\n    int a[101];\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        arraysum = arraysum + a[i];\n    }\n\n    while(coinesum<=arraysum)\n    {\n        var = max(n,a);\n        coinesum = coinesum + var;\n        arraysum = arraysum - var;\n        ++count;\n    }\n\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint max(int n, int a[])\n{\n    int i, index, maxc;\n    maxc = 0;\n    for(i=0; i<n; i++)\n    {\n        if(a[i]==0)\n            continue;\n        else if(a[i]>maxc)\n        {\n            maxc = a[i];\n            index = i;\n        }\n    }\n    a[index]=0;\n    return maxc;\n}\n\nint main()\n{\n    int n, i, arraysum=0, coinesum=0, count=0, var;\n    scanf(\"%d\",&n);\n    int a[n];\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        arraysum = arraysum + a[i];\n    }\n\n    while(coinesum<=arraysum)\n    {\n        var = max(n,a);\n        coinesum = coinesum + var;\n        arraysum = arraysum - var;\n        ++count;\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.9941002949852508, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a13aeb550455e11d3be89d467d9ed294", "bug_code_uid": "4ad1929f67a2720ac321f76011ef8d4d", "src_uid": "695418026140545863313f5f3cc1bf00", "apr_id": "0ce3d8529cbf8a334228a1dcbb3622e8", "difficulty": 1700, "tags": ["number theory", "brute force", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint modb[1100000],tens[1100000];\n\nint main(){\n    int a,b,moda=0,inlen,check=0,i,j,k;\n    char in[1100000];\n    scanf(\"%s %d %d\",in,&a,&b);\n    inlen=strlen(in);\n    tens[0]=1%b;\n    for(i=1;i<1100000;i++){\n        tens[i]=(tens[i-1]*10)%b;\n    }\n    modb[0]=(in[0]-'0')%b;\n    for(i=1;i<inlen;i++){\n        modb[i]=(modb[i-1]*10+in[i]-'0')%b;\n    }\n    for(i=0;i<inlen-1;i++){\n        moda=(moda*10+in[i]-'0')%a;\n        if(in[i+1]=='0'){\n            continue;\n        }\n        if(moda==0){\n            if((modb[inlen-1]-modb[i]*tens[inlen-i-1])%b==0){\n                check=1;\n                printf(\"YES\\n\");\n                for(k=0;k<=i;k++){\n                    printf(\"%c\",in[k]);\n                }\n                printf(\"\\n\");\n                for(;k<inlen;k++){\n                    printf(\"%c\",in[k]);\n                }\n                printf(\"\\n\");\n                break;\n            }\n        }\n    }\n    if(check==0){\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nlong long modb[1100000],tens[1100000];\n\nint main(){\n    int a,b,moda=0,inlen,check=0,i,j,k;\n    char in[1100000];\n    scanf(\"%s %d %d\",in,&a,&b);\n    inlen=strlen(in);\n    tens[0]=1%b;\n    for(i=1;i<1100000;i++){\n        tens[i]=(tens[i-1]*10)%b;\n    }\n    modb[0]=(in[0]-'0')%b;\n    for(i=1;i<inlen;i++){\n        modb[i]=(modb[i-1]*10+in[i]-'0')%b;\n    }\n    for(i=0;i<inlen-1;i++){\n        moda=(moda*10+in[i]-'0')%a;\n        if(in[i+1]=='0'){\n            continue;\n        }\n        if(moda==0){\n            if((modb[inlen-1]-modb[i]*tens[inlen-i-1])%b==0){\n                check=1;\n                printf(\"YES\\n\");\n                for(k=0;k<=i;k++){\n                    printf(\"%c\",in[k]);\n                }\n                printf(\"\\n\");\n                for(;k<inlen;k++){\n                    printf(\"%c\",in[k]);\n                }\n                printf(\"\\n\");\n                break;\n            }\n        }\n    }\n    if(check==0){\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.21231155778894473, "equal_cnt": 29, "replace_cnt": 20, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 29, "lang": "GNU C11", "fix_code_uid": "6cf6afcc9d0059b052e2bdb543eac8f1", "bug_code_uid": "62c599389da45d997d5106d9b8654c7a", "src_uid": "26aef004295df530352485ce53b47364", "apr_id": "5bda83940cd88fce1303bf28354005e2", "difficulty": 1100, "tags": ["brute force", "data structures", "implementation", "trees"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\nint n,q,i,j,k,tem;\nscanf(\"%d %d\",&n,&q);\nint c[n],query[q];\n    \nfor(i=0;i<n;i++){\n        scanf(\"%d\",&c[i]);\n                }\n    \nfor(i=0;i<q;i++){\n        scanf(\"%d\",&query[i]);\n                }\n    \nk=0;\ntem=0;\n    \nfor(i=0;i<q;i++){\n        for(j=0;j<n;j++){\n            if(c[j]==query[i]){\n                printf(\"%d \",j+1);\n                k=j;\n                break;\n                                }\n                        }\n        \n        tem=c[k];\n        \n        for(i=k;i>0;i--){\n            c[i]=c[i-1];\n                        }\n    \n        c[0]=tem;\n    \n                }\n\n}\n\n\n \t\t \t\t \t\t\t\t   \t\t\t\t\t\t \t \t\t \t\t \t\t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint find(int qr, int card[], int n)\n{\n    int answer;\n    for (int i = 0; i < n; i++)\n    {\n        if (qr == card[i])\n        {\n            answer = i;\n            break;\n        }\n    }\n    return answer;\n}\n\nvoid moveFront(int index, int card[], int n)\n{\n    int temp = card[index];\n    for (int i = index; i > 0; i--)\n    {\n        card[i] = card[i - 1];\n    }\n    card[0] = temp;\n}\n\nint main()\n{\n    int n, q, x;\n\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &q);\n\n    int card[n], queue[q];\n\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &x);\n        card[i] = x;\n    }\n\n    for (int i = 0; i < q; i++)\n    {\n        scanf(\"%d\", &x);\n        queue[i] = x;\n    }\n\n    for (int i = 0; i < q; i++)\n    {\n        int cur_q = queue[i];\n        int index = find(cur_q, card, n);\n        printf(\"%d \", index + 1);\n        moveFront(index, card, n);\n    }\n}\n \t    \t\t  \t \t  \t\t \t \t\t\t\t \t \t\t\t"}
{"similarity_score": 0.445998445998446, "equal_cnt": 15, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "317d1278473fed08094c4264cc305be5", "bug_code_uid": "10e7d32c4af7ddf9f9d2f8a8af63ec02", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "90f6abf72b7649edefbf06e6cdc3f891", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t, n, k, i, j, fn;\n    scanf(\"%d\", &t);\n    while(t--){\n        scanf(\"%d %d\", &n, &k);\n        for(i=1; i<=k; i++){\n            if(n%2==0)\n                fn = 2;\n            else{\n                for(j=3; j<=7; j++){\n                    if(n%j==0){\n                        fn = j;\n                        break;\n                    }\n                    else{\n                        fn = n;\n                    }\n                }\n            }\n            n = n+fn;\n        }\n        printf(\"%d\\n\", n);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int t, n, k, j, fn;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d %d\", &n, &k);\n        if(n%2==0)\n            fn = n + (2*k);\n        else\n        {\n            if(n==3){\n                fn = n + n + (2*(k-1));\n            }\n            else{\n                for(j=2; j<=sqrt(n); j++)\n                {\n                    if(n%j==0)\n                    {\n                        fn = n + j + (2*(k-1));\n                        break;\n                    }\n                    else{\n                        fn = n + n + (2*(k-1));\n                    }\n                }\n            }\n        }\n        printf(\"%d\\n\", fn);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9493534482758621, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "30139b28bb85c3257c3d7af1463d76c1", "bug_code_uid": "1322c43e6234a53ad2c477d6f78d6837", "src_uid": "bbf2dbdea6dd3aa45250ab5a86833558", "apr_id": "efb0c4c49fc00871dea154f571b6025d", "difficulty": 1300, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <string.h>\n#include <stdio.h>\nint cnt[26];\nint main()\n{\n     char ch[1011];\n     scanf(\"%s\",ch);\n     int l=strlen(ch);\n     char q;\n     int j,k,p,i;\n     for(i=0;i<l;i++)\n     {\n          cnt[ch[i]]++;\n     }\n     j=0,k=0;\n     for(q='a';q<='z';q++)\n     {\n          if(cnt[q]%2==0)\n          j++;\n          else \n          k++;\n     }\n     if(j>0)\n     {\n          if(k==0)\n          printf(\"First\");\n          else if(k%2==0 && k!=0)\n          printf(\"Second\");\n          else if(k%2!=0 && k!=0)\n          printf(\"First\");\n     }\n     else if(j==0)\n     {\n          if(k==26)\n          {\n               for(q='a';q<='z';q++)\n               {\n                    if(cnt[q]==1)\n                    printf(\"Second\");\n                    else \n                    {\n                    printf(\"First\");\n                    break;\n                    }\n               }\n          }\n     }\n}", "fixed": "#include <string.h>\n#include <stdio.h>\nint cnt[26];\nint main()\n{\n     char ch[1011];\n     scanf(\"%s\",ch);\n     int l=strlen(ch);\n     char q;\n     int j,k,p,i;\n     for(i=0;i<l;i++)\n     {\n          cnt[ch[i]]++;\n     }\n     j=0,k=0;\n     for(q='a';q<='z';q++)\n     {\n          if(cnt[q]%2==0)\n          j++;\n          else \n          k++;\n     }\n     if(j>0)\n     {\n          if(k==0)\n          printf(\"First\");\n          else if(k%2==0 && k!=0)\n          printf(\"Second\");\n          else if(k%2!=0 && k!=0)\n          printf(\"First\");\n     }\n     else if(j==0)\n     {\n          if(k==26)\n          {int t=0;\n               for(q='a';q<='z';q++)\n               {\n                    if(cnt[q]==1)\n                    {\n                    t++;}\n                    else \n                    {\n                    printf(\"First\");\n                    break;\n                    }\n               }if(t==26)\n               printf(\"Second\");\n          }\n     }\n}"}
{"similarity_score": 0.9535816618911175, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "45649f8b06d3fa027737ae8800a185ee", "bug_code_uid": "15f78f11d8ea5a8de3c58aa17bde36f5", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "a02e9979f871411d9ef8a92524f5a564", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int crr[1000001]={0};\nint main()\n{\n\tlong long int n,i;\n\tscanf(\"%lld\",&n);\n\tlong long arr[n+1],srr[n+1],scrr[n+1],prr[n+1];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&arr[i]);\n\t\tprr[0]=arr[0];\n\t\tif(i>0)\n\t\t\tprr[i]=prr[i-1]+arr[i];\n\t//\tprintf(\"%lld\\t\",prr[i]);\n\t}\n\t//printf(\"\\n\\n\");\n\t\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tsrr[n-1]=arr[n-1];\n\t        if(i!=n-1)\n\t\tsrr[i]=srr[i+1]+arr[i];\t//printf(\"%lld\\t\",srr[i]);\n\n\t}\t//printf(\"\\n\\n\");\n\n\tlong long sum=srr[0]/3,count=0;\n\tfor(i=2;i<n;i++)\n\t{\n\t\tif(srr[i]==sum)\n\t\t\tcrr[i]=1;\t//printf(\"%lld\\t\",crr[i]);\n\n\t}//\tprintf(\"\\n\\n\");\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscrr[0]=crr[0];\n\t\tif(i>0)\n\t\tscrr[i]=scrr[i-1]+crr[i];\t//printf(\"%lld\\t\",scrr[i]);\n\n\t}//\tprintf(\"\\n\\n\");\n\n\tfor(i=0;i<n-2;i++)\n\t{\n\t\tif(prr[i]==sum)\n\t\t{\n\t\t\tcount+=scrr[n-1]-scrr[i+1];\n\t\t}\n\t}//\tprintf(\"\\n\\n\");\n\n\tprintf(\"%lld\\n\",count);\n}\n\t\t\n\n\n", "fixed": "#include<stdio.h>\nlong long int crr[1000001]={0};\nint main()\n{\n\tlong long int n,i;\n\tscanf(\"%lld\",&n);\n\tlong long arr[n+1],srr[n+1],scrr[n+1],prr[n+1];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",&arr[i]);\n\t\tprr[0]=arr[0];\n\t\tif(i>0)\n\t\t\tprr[i]=prr[i-1]+arr[i];\n\t//\tprintf(\"%lld\\t\",prr[i]);\n\t}\n\t//printf(\"\\n\\n\");\n\t\n\t\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tsrr[n-1]=arr[n-1];\n\t        if(i!=n-1)\n\t\tsrr[i]=srr[i+1]+arr[i];\t//printf(\"%lld\\t\",srr[i]);\n\n\t}\t//printf(\"\\n\\n\");\n\n\tlong long sum=srr[0]/3,count=0;\n\t\n\tfor(i=2;i<n;i++)\n\t{\n\t\tif(srr[i]==sum)\n\t\t\tcrr[i]=1;\t//printf(\"%lld\\t\",crr[i]);\n\n\t}//\tprintf(\"\\n\\n\");\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscrr[0]=crr[0];\n\t\tif(i>0)\n\t\tscrr[i]=scrr[i-1]+crr[i];\t//printf(\"%lld\\t\",scrr[i]);\n\n\t}//\tprintf(\"\\n\\n\");\n\n\tfor(i=0;i<n-2;i++)\n\t{\n\t\tif(prr[i]==sum)\n\t\t{\n\t\t\tcount+=scrr[n-1]-scrr[i+1];\n\t\t}\n\t}//\tprintf(\"\\n\\n\");\n        if(srr[0]%3==0)\n\tprintf(\"%lld\\n\",count);\n\telse\n\t\tprintf(\"0\\n\");\n\treturn 0;\n}\n\t\t\n\n\n"}
{"similarity_score": 0.9171270718232044, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f8f37cc0b2c9231477fa3ee18e811340", "bug_code_uid": "5df345cc859b789c7bf51673c56504f5", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "5063b7b5efabe4a75e4e1bebf11db346", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint n , m , i  = 1 , a[100] , distance = 0;\n\tscanf (\"%d %d\" , &n , &m);\n\ta [0] = 1; \n\twhile ( i != m + 1)\n\t\t{\n\t\t\tscanf(\"%d\" , &a[i]);\n\t\t\ti++;\n\t\t}\n\n\tfor (i = 0 ; i + 1 <= m  ; i ++)\n\t{\n\t\tif (a[i+1] > a[i] )\n\t\t\tdistance = distance + (a[i + 1] - a[i]);\n\t\telse if (a [ i + 1] < a [i])\n\t\t\tdistance = distance + n + a[i + 1] - a[i];\n\t}\n\tprintf(\"%d \" , distance); \n\t\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\n\tlong long int n , m , a[1000000] , i = 1;\n\tlong long int distance = 0;\n\tscanf (\"%lld %lld\" , &n , &m);\n\ta [0] = 1; \n\twhile ( i != m + 1)\n\t\t{\n\t\t\tscanf(\"%lld\" , &a[i]);\n\t\t\ti++;\n\t\t}\n\n\tfor (i = 0 ; i + 1 <= m  ; i ++)\n\t{\n\t\tif (a[i+1] > a[i] )\n\t\t\tdistance = distance + (a[i + 1] - a[i]);\n\t\telse if (a [ i + 1] < a [i])\n\t\t\tdistance = distance + n + a[i + 1] - a[i];\n\t}\n\tprintf(\"%lld\" , distance); \n\t\n}"}
{"similarity_score": 0.9963898916967509, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e0a1ecc53a294389bc2486fd52a26273", "bug_code_uid": "9dbeac01ef62240a03622f5563afca7f", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "7ffe3f1867f9777e1ce77cd9a82f4335", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid solve(){\n    int a[3];\n    int sum =0;\n    int max = 0;\n    for(int i=0;i<3;i++){\n        scanf(\"%d\", &a[i]);\n    }\n    for(int i=0;i<3;i++){\n        sum+= a[i];\n    }\n    printf(\"SUM :: %d\\n\",sum);\n    for(int i=0;i<3;i++){ \n        if(a[i]>max){\n            max = a[i];\n        } \n    }  \n    printf(\"MAX :: %d\\n\", max);\n    if(2*max == sum){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n }\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++){\n        solve();\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nvoid solve(){\n    int a[3];\n    int sum =0;\n    int max = 0;\n    for(int i=0;i<3;i++){\n        scanf(\"%d\", &a[i]);\n    }\n    for(int i=0;i<3;i++){\n        sum+= a[i];\n    }\n    //printf(\"SUM :: %d\\n\",sum);\n    for(int i=0;i<3;i++){ \n        if(a[i]>max){\n            max = a[i];\n        } \n    }  \n    //printf(\"MAX :: %d\\n\", max);\n    if(2*max == sum){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n }\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++){\n        solve();\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3021978021978022, "equal_cnt": 22, "replace_cnt": 13, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "15a1b6c58b01697d63a4a4593e377ade", "bug_code_uid": "2ba641f30ad1d8054bd66695c66137b6", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "c748e89b7c95026113b3cff00c93d16c", "difficulty": 1500, "tags": ["constructive algorithms", "*special", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int i,n,l,r,flag=0,b;\n    map<int,int>a;\n  cin>>n>>l>>r;\n  for(i=1; i<=n; i++)\n  {\n      cin>>a[i];\n  }\n  for(i=1; i<=n; i++)\n  {\n      cin>>b;\n      if(i<l || i>r)\n      {\n          if(a[i]!=b)\n          {\n              flag=1;\n          }\n      }\n  }\n  if(flag==0)\n  {\n      cout<<\"TRUTH\";\n  }\n  else\n     cout<<\"LIE\";\n  }\n\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int n,l,r,t;\n    scanf(\"%d%d%d\",&n,&l,&r);\n    int a[100001];\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&t);\n        if(t!=a[i] && (i<l || i>r)){\n            printf(\"LIE\");\n            return 0;\n        }\n    }\n    printf(\"TRUTH\");\n    return 0;\n}\n"}
{"similarity_score": 0.4834307992202729, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "3fd25f4136590ff0f457c0698189e7cf", "bug_code_uid": "cbc6b7360a4b5177fd76744a5a184fe1", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "b561cc4f60b4b9e9a927ade5b6edbfc4", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint n, a,b,c,i,sum=0;\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tsum=sum+a+b+c;\n\t}\n\tif(sum==0) printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int n, x, y, z, sum1=0, sum2=0, sum3=0;\n    scanf(\"%d\",&n);\n  while (n--){\n  \tscanf(\"%d%d%d\", &x, &y, &z);\n        sum1 += x;\n        sum2 += y;\n        sum3 += z;\n    }\n\n    if (sum1 == 0 && sum2 == 0 && sum3 == 0) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n\n    return 0;\n}"}
{"similarity_score": 0.9817295980511571, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6077c60eb6d71eb32d3f370344bb859c", "bug_code_uid": "aa68d47ee9493e3e829749db5e6cd73a", "src_uid": "90c5058c0c7f55a567f2e036482149f9", "apr_id": "7d4430b1c30c7f61a80b3b661a9c2ef5", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint a,b,c;\r\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\r\n\t\tint x=2*b-a;\r\n\t\tif(x%c==0)\r\n\t\t{\r\n\t\t\tprintf(\"yes\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tx=2*b-c;\r\n\t\tif(x%a==0)\r\n\t\t{\r\n\t\t\tprintf(\"yes\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif((a+c)%2==0)\r\n\t\t{\r\n\t\t\tx=(a+c)/2;\r\n\t\t\tif(x%b==0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"yes\\n\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"no\\n\");\r\n\t}\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint a,b,c;\r\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\r\n\t\tint x=2*b-a;\r\n\t\tif(x%c==0&&x>0)\r\n\t\t{\r\n\t\t\tprintf(\"yes\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tx=2*b-c;\r\n\t\tif(x%a==0&&x>0)\r\n\t\t{\r\n\t\t\tprintf(\"yes\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif((a+c)%2==0)\r\n\t\t{\r\n\t\t\tx=(a+c)/2;\r\n\t\t\tif(x%b==0&&x>0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"yes\\n\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"no\\n\");\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.4774624373956594, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "8b923c1f407ed9a7ba6974e09cd5fd3c", "bug_code_uid": "4de5c223d87663c1fff268f9fcd687ee", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "13b2d5d1e9b457d9e162b82ffcdc2d06", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint maxi_f(int arr[],int length){\r\n    int max=0;\r\n    for(int h=0;h<length;h++){\r\n        if(arr[h]>max){\r\n            max=arr[h];\r\n        }\r\n    }\r\n    return max;\r\n}\r\nint main(){\r\n    int t;\r\n    int count=0;\r\n    int n,k;\r\n    scanf(\"%d\\n\",&t);\r\n    for(int y=0;y<t;y++){\r\n        scanf(\"%d %d\\n\",&n,&k);\r\n        int arr[n];\r\n        int sum;\r\n        if(n%k==0){\r\n            sum=(n/k)*k;\r\n        }else{\r\n            sum=(n/k+1)*k;\r\n        }\r\n        for(int u=0;;u++){\r\n            if(n==0){\r\n                break;\r\n            }\r\n            arr[count]=sum/n;\r\n            sum=sum-sum/n;\r\n            n--;\r\n            count++;\r\n        }\r\n        printf(\"%d\\n\",maxi_f(arr,count));\r\n        count=0;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    long long int n,k,ans;\r\n    scanf(\"%d\\n\",&t);\r\n    for(int y=0;y<t;y++){\r\n        scanf(\"%lld %lld\\n\",&n,&k);\r\n        long long int sum;\r\n        if(n%k==0){\r\n            sum=(n/k)*k;\r\n        }else{\r\n            sum=(n/k+1)*k;\r\n        }\r\n        if(sum%n==0){\r\n            ans=sum/n;\r\n        }else{\r\n            ans=sum/n+1;\r\n        }\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8665667166416792, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "571026acd32cca592ccc5a421d5b2cd5", "bug_code_uid": "d4910aef4e073e15d52bdc15230a3ea6", "src_uid": "67cf9f83ed791a614bd01c5e0310813f", "apr_id": "95479604559d04266ef88edd5886e132", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main(){\n    int n,i,count =0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf (\"%d\",&a[i]);\n    \n    for(i=1;i<n-1;i++)\n    {\n        if(((a[i]<a[i-1])&&(a[i]<a[i+1]))||((a[i]>a[i-1])&&(a[i]>a[i+1])))\n        count ++;\n    }\n    printf (\"%d\",count);\n    //return 0;\n         }", "fixed": "#include<stdio.h>\n\nint main(){\n    int n,i,num_local_extrema =0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf (\"%d\",&a[i]);\n    \n    for(i=1;i<n-1;i++)\n    {\n        if(((a[i]<a[i-1])&&(a[i]<a[i+1]))||((a[i]>a[i-1])&&(a[i]>a[i+1])))\n        num_local_extrema ++;\n    }\n    printf (\"%d\",num_local_extrema);\n    return 0;\n         }"}
{"similarity_score": 0.8045685279187818, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "6fb75aab18fc1137c9048184bee10396", "bug_code_uid": "98a995d0a8bb39e51569cf30be8bcad4", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "182e23e9bdc2e65d88ea1cb95ea43d7f", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int na,nb,k,m,i,f=0;\n    scanf(\"%d%d%d%d\",&na,&nb,&k,&m);\n    int a[na],b[nb];\n    for(i=0;i<na;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<nb;i++)\n        scanf(\"%d\",&b[i]);\n        for(i=0;i<m;i++)\n        if(a[k-1]>=b[i])\n            {\n                f=1;\n                printf(\"NO\\n\");\n                break;\n            }\n        if(f!=1) printf(\"YES\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int na,nb,k,m,i,f=0;\n    scanf(\"%d%d%d%d\",&na,&nb,&k,&m);\n    int a[na],b[nb];\n    for(i=0;i<na;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<nb;i++)\n        scanf(\"%d\",&b[i]);\n\n        if(a[k-1]<b[nb-m])\n            {\n                f=1;\n                printf(\"YES\\n\");\n\n            }\n        if(f!=1) printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9993784959602238, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "35f19ef9c5b4bd38c0733805e6fd2882", "bug_code_uid": "9c543a4f64e4212b0ced61453a885aac", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "bd5166c573829af5be97666af1b496fa", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    char s[10000];\n    scanf(\"%s\",s);\n    int i=0,c=0;\n    while(i<strlen(s) && c==0)\n    {\n        if((s[i]-'0')%2==0)\n            c++;\n        i++;\n    }\n    if(c==0)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    int last = s[strlen(s)-1]-'0',rep=-1;\n    i=0;\n    while(i<strlen(s))\n    {\n        if((s[i]-'0')%2==0 && (s[i]-'0')<last)\n        {\n            rep=i;\n            break;\n        }\n        i++;\n    }\n    if(rep==-1)\n    {\n        i=strlen(s)-1;\n        while(i>=0)\n        {\n            if((s[i]-'0')%2==0)\n            {\n                rep = i;\n                break;\n            }\n            i--;\n        }\n    }\n    char swap = s[rep];\n    s[rep]=s[strlen(s)-1];\n    s[strlen(s)-1]=swap;\n    printf(\"%s\",s);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    char s[100000];\n    scanf(\"%s\",s);\n    int i=0,c=0;\n    while(i<strlen(s) && c==0)\n    {\n        if((s[i]-'0')%2==0)\n            c++;\n        i++;\n    }\n    if(c==0)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    int last = s[strlen(s)-1]-'0',rep=-1;\n    i=0;\n    while(i<strlen(s))\n    {\n        if((s[i]-'0')%2==0 && (s[i]-'0')<last)\n        {\n            rep=i;\n            break;\n        }\n        i++;\n    }\n    if(rep==-1)\n    {\n        i=strlen(s)-1;\n        while(i>=0)\n        {\n            if((s[i]-'0')%2==0)\n            {\n                rep = i;\n                break;\n            }\n            i--;\n        }\n    }\n    char swap = s[rep];\n    s[rep]=s[strlen(s)-1];\n    s[strlen(s)-1]=swap;\n    printf(\"%s\",s);\n    return 0;\n}"}
{"similarity_score": 0.9919028340080972, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7a3911df9cb2d89767c0491c7a8ecd45", "bug_code_uid": "5bba8d2edb656e564367a82133cf17db", "src_uid": "a0a6cdda2ce201767bf5418f445a44eb", "apr_id": "2684a2803fa01d7b1c7fa00a43bba12a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tlong int n,i,ou=0,ji=0;\n\tscanf(\"%d\",&n);\n\tlong int a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]%2==0)\n\t\tou++;\n\t\telse \n\t\tji++;\n\t}\n\tif(ou>ji)\n\tprintf(\"%d\",ji);\n\telse\n\tprintf(\"%d\",ou);\n\t\n\t", "fixed": "#include <stdio.h>\nint main()\n{\n\tlong int n,i,ou=0,ji=0;\n\tscanf(\"%d\",&n);\n\tlong int a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]%2==0)\n\t\tou++;\n\t\telse \n\t\tji++;\n\t}\n\tif(ou>ji)\n\tprintf(\"%d\",ji);\n\telse\n\tprintf(\"%d\",ou);\n}"}
{"similarity_score": 0.6913946587537092, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "60b43fdd0b1406008680acdd5727dc11", "bug_code_uid": "e4a6a620d8748f367373923eb01f2f5f", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "cf7cd13814a977d0bb79d6dc736d017c", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main() {\n\tint n,i,root,k, max=0;\n\tfloat f;\n\tint arr[100000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%d\",&arr[i]);\n\t\t}\n\tfor(i=0;i<n;i++) {\n\tk = arr[i];\n\tf = sqrt(k);\n\troot = f;\nif(root != f && arr[i] > max)\n  //  printf(\"\\nIt's a Perfect square\\n\");\n\n\tmax = arr[i];\n\t}\n\tprintf(\"%d\",max);\n\t}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main() {\n\tint n,i,root,k, max=-9999999;\n\tfloat f;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%d\",&arr[i]);\n\t\t}\n\tfor(i=0;i<n;i++) {\n\tif(arr[i] < 0 && arr[i] > max) \n\t    max = arr[i]; \n\tf = sqrt(arr[i]);\n\troot = f;\nif(root != f && arr[i] > max)\n\n\tmax = arr[i];\n\t}\n\tprintf(\"%d\",max);\n\t}"}
{"similarity_score": 0.17592592592592593, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "dc40ed80f108a4ced72ce1652899498e", "bug_code_uid": "8d49165ae53a8e21fd9dd010a2507227", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "e15d2e3871bf63a092055da2bb68a936", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,i,j,s=0,c,d,s1=0,e=0;\n    scanf(\"%ld\",&n);\n    long int a[n],b[n];\n    for(i=0;i<n;++i)\n        scanf(\"%ld%ld\",&a[i],&b[i]);\n    for(j=0;j<n-1;++j)\n    {\n        if(b[j]>=b[j+1])\n        {\n            s=s+a[j]*b[j];\n        }\n        else\n        {\n            c=j;\n            a:\n            for(d=c;d<n-1;++d)\n            {\n              if(b[c]<=b[d+1])\n                s=s+a[d]*b[c];\n                else{\n                    c=d;\n                    goto a;\n                }\n            }\n              break;\n        }\n    }\n    long int m[3]={b[c],b[n-1],b[j]},t;\n    for(int x=0;x<3;++x)\n    {\n        for(int y=0;y<2-x;++y)\n        {\n            if(m[y]>=m[y+1])\n            {\n                t=m[y];\n                m[y]=m[y+1];\n                m[y+1]=t;\n            }\n        }\n    }\n\n        s=s+a[n-1]*m[0];\n\n        printf(\"%ld\\n\",s);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,s=0,c,d,e=0;\n    scanf(\"%d\",&n);\n    int a[n],p[n];\n    for(i=0;i<n;++i)\n        scanf(\"%d%d\",&a[i],&p[i]);\n    for(j=0;j<n-1;++j)\n    {\n        if(p[j]>=p[j+1])\n        s=s+a[j]*p[j];\n        else\n        {\n            c=j;\n            break;\n        }\n    }\n    for(k=c;k<n;++k)\n    {\n        if(p[c]<=p[k])\n            s=s+a[k]*p[c];\n        else\n        {\n            c=k;\n            --k;\n        }\n        e=1;\n    }\n    if(e==1)\n        printf(\"%d\\n\",s);\n    else\n    {\n        s=s+a[n-1]*p[n-1];\n        printf(\"%d\\n\",s);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4752252252252252, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "4abe6a54cebb280c459e12bf2488fc5f", "bug_code_uid": "1d35fd168effeb7397caa880a9725ae7", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "584d43a1b73cb4444291c11c5ac3b53c", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    char s1[100005],s2[100005];\n    int i,j=0;\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    for(i=0;s2[i]!='\\0';i++){\n        if(s2[i]==s1[j]) break;\n    }\n    if(i==0) printf(\"-1\\n\");\n    else printf(\"%d\\n\",i);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    char s1[100005],s2[100005];\n    int i,j=0,l1=0,l2=0;\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    for(i=0;s1[i]!='\\0';i++){\n        l1++;\n    }\n     for(i=0;s2[i]!='\\0';i++){\n        l2++;\n    }\n        if(l1>l2) printf(\"%d\",l1);\n        else if(l2>l1) printf(\"%d\",l2);\n    else {\n            for(i=0;s1[i]!='\\0';i++){\n                if(s1[i]==s2[i]){\n                    j=0;\n                }\n                else {\n                        j=1;\n                break;\n                }\n            }\n            if(j!=0) printf(\"%d\",l1);\n            else printf(\"-1\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6221706326175276, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "904c3efd762613a4538e530e34f5d8a3", "bug_code_uid": "9ea0db79136fc5a27fc3f78fe9c041a8", "src_uid": "2052b0b4abdcf7d613b56842b1267f60", "apr_id": "46847a5b9770b3f8a70e2006bd7c3e0f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char **argv)\n{\n\tint i, n, A[10000], B[10000], counter1 = 0, counter2 = 0, counter3 = 0, counter4 = 0, Acounter, Bcounter, counter = 0;\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &A[i]);\n\t\tscanf(\"%d\", &B[i]);\n\t}\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tif(A[i] == 0)\n\t\t{\n\t\t\tcounter1++;\n\t\t}\n\t\telse if(A[i] == 1)\n\t\t{\n\t\t\tcounter2++;\n\t\t}\n\t\telse if(B[i] == 0)\n\t\t{\n\t\t\tcounter3++;\n\t\t}\n\t\telse if(B[i] == 1)\n\t\t{\n\t\t\tcounter4++;\n\t\t}\n\t}\n\tif(counter1 > counter2)\n\t{\n\t\tAcounter = 0;\n\t}\n\telse if(counter2 >= counter1)\n\t{\n\t\tAcounter = 1;\n\t}\n\tif(counter3 > counter4)\n\t{\n\t\tBcounter = 0;\n\t}\n\telse if(counter4 >= counter3)\n\t{\n\t\tBcounter = 1;\n\t}\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tif(A[i] != Acounter)\n\t\t{\n\t\t\tA[i] = Acounter;\n\t\t\tcounter++;\n\t\t}\n\t\tif(B[i] != Bcounter)\n\t\t{\n\t\t\tB[i] = Bcounter;\n\t\t\tcounter++;\n\t\t}\n\t}\n\tprintf(\"%d\",counter);\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char **argv)\n{\n\tint i, n, A[10000], B[10000], counter1 = 0, counter2 = 0, counter3 = 0, counter4 = 0, Acounter, Bcounter, counter = 0;\n\tscanf(\"%d\", &n);\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &A[i]);\n\t\tscanf(\"%d\", &B[i]);\n\t}\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tif(A[i] == 0)\n\t\t{\n\t\t\tcounter1++;\n\t\t}\n\t\telse if(A[i] == 1)\n\t\t{\n\t\t\tcounter2++;\n\t\t}\n\t\tif(B[i] == 0)\n\t\t{\n\t\t\tcounter3++;\n\t\t}\n\t\telse if(B[i] == 1)\n\t\t{\n\t\t\tcounter4++;\n\t\t}\n\t}\n\tif(counter1 > counter2)\n\t{\n\t\tAcounter = 0;\n\t}\n\telse if(counter2 >= counter1)\n\t{\n\t\tAcounter = 1;\n\t}\n\tif(counter3 > counter4)\n\t{\n\t\tBcounter = 0;\n\t}\n\telse if(counter4 >= counter3)\n\t{\n\t\tBcounter = 1;\n\t}\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tif(A[i] != Acounter)\n\t\t{\n\t\t\tcounter++;\n\t\t}\n\t\tif(B[i] != Bcounter)\n\t\t{\n\t\t\tcounter++;\n\t\t}\n\t}\n\tprintf(\"%d\",counter);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.041970802919708027, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "50c14b32a4675a6f873125fb2801c5e2", "bug_code_uid": "5cdabdb8ca38632395b489be4a0f7995", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "c9f24f26978dc0510f4f97a44155c070", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//\n//  main.c\n//  codeforces2\n//\n//  Created by Ashish on 10/1/15.\n//  Copyright (c) 2015 Ashish. All rights reserved.\n//\n\n#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n#include<math.h>\n\nint main()\n{\n    int count=0;\n    int min;\n    int max;\n    int a;\n    int array[200000]={0};\n    int i;\n    scanf(\"%d\\n\",&a);\n    for(i=0;i<a;i++){\n        scanf(\"%d\",&array[i]);\n    }\n    int j;\n    array[0]=max;\n    array[0]=min;\n    for(j=0;j<a-1;j++){\n        if(array[j]>max){\n            max=array[j];\n        }\n        if(array[j]<min){\n            min=array[j];\n        }\n        if(array[j]==max){\n            count++;\n        }\n    }\n    int diff;\n    diff=max-min;\n    printf(\"%d %d \",diff,count);\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nlong long int n,i,j,s,a[300001],max,min;\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld\",a+i);\n\t\tif(a[i]>max)\n\t\t\tmax=a[i];\n\t\tif(!i || a[i]<min)\n\t\t\tmin=a[i];\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]==max)\n\t\t\ts++;\n\t\tif(a[i]==min)\n\t\t\tj++;\n\t}\n\tlong long int t=s*j;\n\tif(max==min)\n\t\tt=s*(s-1)/2;\n\t\n\tprintf(\"%lld %lld\",max-min,t);\n\treturn 0;\n}"}
{"similarity_score": 0.9287169042769857, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b604dca074e61f309988bb180592450e", "bug_code_uid": "1016a5f74fcc579e12d188719ad79591", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "92b7f8246252c76ab58896e9a1ae26d7", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include<stdio.h>\nint main(){\nint d;\ninti;\nscanf(\"%d\",&d);\nfor(i=1;i<=d;i++){\n  if(i==1||i==2||i==3||i==5||i==8||i==13||i==21||i==34||i==55||i==89||i==144||i==233||i==377)\n    printf(\"O\");\n  else\n    printf(\"o\");\n}\nreturn 0;\n}\n", "fixed": "# include<stdio.h>\nint main(){\nint d;\nint i;\nscanf(\"%d\",&d);\nfor(i=1;i<=d;i++){\n  if(i==1||i==2||i==3||i==5||i==8||i==13||i==21||i==34||i==55||i==89||i==144||i==233||i==377||i==610||i==987||i==1597||i==2584)\n    printf(\"O\");\n  else\n    printf(\"o\");\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9447731755424064, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ffa093d738f62d694bf3cd58398a91fd", "bug_code_uid": "94047cfe796d88cc20c10e6398d99f07", "src_uid": "5aae6b27f35852512a250751ef957ab9", "apr_id": "f5ec594b6a3f579f24bd32eb74b891d2", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\ntypedef long long int lli;\r\nlli max(lli a,lli b,lli c)\r\n{\r\n\tif(a>=b&&a>=c)\r\n\t return a;\r\n\telse if(b>=c&&b>=a)\r\n\t return b;\r\n\telse\r\n   return c;\r\n}\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\nlli n,m,x,y,a,b,c,d;\r\nscanf(\"%lld %lld %lld %lld\",&n,&m,&x,&y);\r\na=2*(m+x);\r\nb=2*(n+m);\r\nc=2*(n+y);\r\nd=max(a,b,c);\r\nif(d==a)\r\n printf(\"%lld %lld %lld %lld\\n\",1,1,1,m);\r\nelse if(d==b)\r\n printf(\"%lld %lld %lld %lld\\n\",1,1,n,m);\r\nelse\r\n printf(\"%lld %lld %lld %lld\\n\",1,1,n,1);\r\n\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\ntypedef long long int lli;\r\nlli max(lli a,lli b,lli c)\r\n{\r\n\tif(a>=b&&a>=c)\r\n\t return a;\r\n\telse if(b>=c&&b>=a)\r\n\t return b;\r\n\telse\r\n   return c;\r\n}\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\nlli n,m,x,y,a,b,c,d;\r\nscanf(\"%lld %lld %lld %lld\",&n,&m,&x,&y);\r\na=2*(m+x);\r\nb=2*(n+m);\r\nc=2*(n+y);\r\nd=max(a,b,c);\r\nif(d==a)\r\n printf(\"%d %d %d %lld\\n\",1,1,1,m);\r\nelse if(d==b)\r\n printf(\"%d %d %lld %lld\\n\",1,1,n,m);\r\nelse\r\n printf(\"%d %d %lld %d\\n\",1,1,n,1);\r\n\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.26548672566371684, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "bc310ee4ca9927556c359bc133885b24", "bug_code_uid": "b2d92e8daef5e10178bb342cf4252e74", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "e75a46360e3ce0cd302572d250647761", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[101],i,n,u,j;\n    scanf(\"%d\",&n);\n\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[j]);\n        }\n        for(j=0;j<n-1;j++)\n\n        {\n            for(i=j+1;i<=n-1;i++)\n            {\n                if(a[j]> a[i])\n                {\n\n                    u=a[j];\n                   a[j]=a[i];\n                   a[i]=u;\n                }\n            }\n        }\n         for (i = 0; i < n;i++)\n            printf(\"%d\\n\", a[i]);\n            return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,i,j,ara[100];\n    scanf(\"%d\",&a);\n    for(i=0;i<a;i++)\n        scanf(\"%d\",&ara[i]);\n    for(j=1;j<=a;j++)\n    {\n        for(i=0;i<a;i++)\n        {\n            if (j==ara[i])\n                printf(\"%d\\t\",i+1);\n        }\n    }\n    return 0;\n\n\n\n\n}\n"}
{"similarity_score": 0.998062015503876, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9426757b63331278967499a47a12dca1", "bug_code_uid": "48230aa48050afc00216d77ebcc19ccb", "src_uid": "f99a23bc65a1f5cdbf7909dba573ce51", "apr_id": "1af195d5ab8cfa9cbe8d4508f418f548", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int max=2,arr[50000],a[50000],count,k,n,i;\nint main(void)\n{\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%lld\",&a[i]);\n    for(i=2;i<n;i++)\n    {\n        if(a[i]==(a[i-1]+a[i-2]))\n        count++;\n        if(a[i]!=(a[i-1]+a[i-2]))\n        {\n            arr[k++]=count;\n            count=0;\n        }\n    }\n    max=count;\n    for(i=0;i<k;i++)\n    {\n        if(arr[i]>max)\n        max=arr[i];\n    }\n    if(n==1)\n    printf(\"1\");\n    else\n    printf(\"%lld\",max+2);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int max=2,arr[500000],a[500000],count,k,n,i;\nint main(void)\n{\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%lld\",&a[i]);\n    for(i=2;i<n;i++)\n    {\n        if(a[i]==(a[i-1]+a[i-2]))\n        count++;\n        if(a[i]!=(a[i-1]+a[i-2]))\n        {\n            arr[k++]=count;\n            count=0;\n        }\n    }\n    max=count;\n    for(i=0;i<k;i++)\n    {\n        if(arr[i]>max)\n        max=arr[i];\n    }\n    if(n==1)\n    printf(\"1\");\n    else\n    printf(\"%lld\",max+2);\n    return 0;\n}\n"}
{"similarity_score": 0.9966996699669967, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e71ac59dd0aeeb8efdf16b1cfc77bc6e", "bug_code_uid": "6d6d13800616a2d143b7cb35fc540f60", "src_uid": "6c9cbe714f8f594654ebc59b6059b30a", "apr_id": "ffb75e7f836fd92fe34975929f0a81ca", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint m,n;\n\tint a,b,c;\n\tscanf(\"%d\",&m);\n\ta=b=c=0;\n\twhile (m--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tif (n==1)\n\t\ta++;\n\t\tif (n==2)\n\t\tb++;\n\t\tif (n==3)\n\t\tc++;\n\t}\n\tint sum=0;\n\tsum=c;\n\tif (a>b)\n\t{\n\t\tsum=sum+b;\n\t\tsum=sum+(a-b)/2;\n\t}\n\telse \n\t{\n\t\tsum=sum+a;\n\t}\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint m,n;\n\tint a,b,c;\n\tscanf(\"%d\",&m);\n\ta=b=c=0;\n\twhile (m--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tif (n==1)\n\t\ta++;\n\t\tif (n==2)\n\t\tb++;\n\t\tif (n==3)\n\t\tc++;\n\t}\n\tint sum=0;\n\tsum=c;\n\tif (a>b)\n\t{\n\t\tsum=sum+b;\n\t\tsum=sum+(a-b)/3;\n\t}\n\telse \n\t{\n\t\tsum=sum+a;\n\t}\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9280936454849499, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "034fb1228d4c7a3067faf34b643857be", "bug_code_uid": "081ac54c1e6292ca462cfb7b2a53934b", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "df323e3759cadca17b23522664217045", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// powered by C\r\n// mohabstudent programme\r\n#define CRT_SECURE_NO_WARNINGS\r\n#define CRT_NONSTDC_NO_WARNINGS\r\n\r\n#include<stdio.h>\r\n#include<string.h>\r\nvoid solve(void);\r\nvoid check(_Bool f);\r\n\r\nint main()\r\n{   fflush(stdout);\r\n   solve();\r\n}\r\nvoid solve()\r\n{\r\n    int t;scanf(\"%d\",&t);\r\n    while(t--){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    char s[101];\r\n    scanf(\"%s\",&s);\r\n    int A=0,Q=0;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        (s[i]=='Q'?Q++:A++);\r\n    }\r\n    check(A>=Q);}\r\n}\r\nvoid check(_Bool f)\r\n{\r\n if(f)printf(\"Yes\\n\");\r\n else printf(\"No\\n\");\r\n}\r\n", "fixed": "// powered by C\r\n// mohabstudent programme\r\n#define CRT_SECURE_NO_WARNINGS\r\n#define CRT_NONSTDC_NO_WARNINGS\r\n\r\n#include<stdio.h>\r\n#include<string.h>\r\nvoid solve(void);\r\nvoid check(_Bool f);\r\n\r\nint main()\r\n{   fflush(stdout);\r\n   solve();\r\n}\r\nvoid solve()\r\n{\r\n    int t;scanf(\"%d\",&t);\r\n    while(t--){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    char s[101];\r\n    scanf(\"%s\",&s);\r\n    int A=0,Q=0;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        (s[i]=='Q'?Q++:A++);\r\n        if(A>0&&Q==0)A=0;\r\n        if(Q>=A)Q-=A,A=0;\r\n        else A-=Q,Q=0;\r\n    }\r\n    check(Q==0);}\r\n}\r\nvoid check(_Bool f)\r\n{\r\n if(f)printf(\"Yes\\n\");\r\n else printf(\"No\\n\");\r\n}\r\n"}
{"similarity_score": 0.9836264402668283, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8464d8b217a71af0ffb5e631a35a4648", "bug_code_uid": "a710478d550c128cf493d2074a4f08a4", "src_uid": "ed26479cdf72ad9686bbf334d90aa0be", "apr_id": "c60d06cf92501a294433b5f9804345a5", "difficulty": 1100, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,m,x,y,xjump,yjump,c,f,g;\n    scanf(\"%d %d %d %d\",&n,&m,&x,&y);\n   /* int a[n][m];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        a[i][j]=0;\n    }*/\n    //a[x-1][y-1]=1;\n    c=1;\n    xjump=x-1;\n    yjump=0;\n    f=1;g=m;\n    while(c!=(n*m))\n    {\n        //xjump=0;yjump=y-1;\n        printf(\"%d %d\\n\",xjump+1,yjump+1);\n        c++;\n        yjump+=f;\n        if((yjump==(y-1))&&(xjump==(x-1)))\n        yjump+=f;\n        if(yjump==g)\n        {\n            if(g==m)\n            {\n                g=-1;\n                f=-1;\n                yjump=m-1;\n            }\n            else\n            {\n                g=m;\n                f=1;\n                yjump=0;\n            }\n            xjump++;\n            if(xjump==n)\n            xjump=0;\n        }\n    }\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,m,x,y,xjump,yjump,c,f,g;\n    scanf(\"%d %d %d %d\",&n,&m,&x,&y);\n   /* int a[n][m];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        a[i][j]=0;\n    }*/\n    //a[x-1][y-1]=1;\n    c=1;\n    xjump=x-1;\n    yjump=0;\n    f=1;g=m;\n    printf(\"%d %d\\n\",x,y);\n    while(c!=(n*m))\n    {\n        //xjump=0;yjump=y-1;\n        printf(\"%d %d\\n\",xjump+1,yjump+1);\n        c++;\n        yjump+=f;\n        if((yjump==(y-1))&&(xjump==(x-1)))\n        yjump+=f;\n        if(yjump==g)\n        {\n            if(g==m)\n            {\n                g=-1;\n                f=-1;\n                yjump=m-1;\n            }\n            else\n            {\n                g=m;\n                f=1;\n                yjump=0;\n            }\n            xjump++;\n            if(xjump==n)\n            xjump=0;\n        }\n    }\n}"}
{"similarity_score": 0.8045454545454546, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "05f274587e6d850a5fcd6cf4900136e0", "bug_code_uid": "9b976ae308e01b46f22bc9e855818055", "src_uid": "f8d064c90f1f2b4a18386795dbcd9cb9", "apr_id": "865dc6cbf85ceb8f334c477dc254e160", "difficulty": null, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "main(i,j,k){long long n,m,p;for(scanf(\"%*d\");~scanf(\"%lld\",&n);){for(m=n,k=-1,i=2;i*i<=m;i++){for(j=-1;m%j<1;j++)m/=i;\nif(j>k)k=j,p=i;}if(k<0&&m>1)k=0,p=m;printf(\"%d \",k+1);while(k--)printf(\"%lld \",p),n/=p;printf(\"%lld \",n);}}", "fixed": "k;main(j){long long n,m,i,p;for(scanf(\"%*d\");~scanf(\"%lld\",&n);k=0){for(m=n,i=2;i*i<=m;i++){for(j=-1;m%i<1;\nj++)m/=i;if(j>k)k=j,p=i;}if(!k)p=m;printf(\"%d \",k+1);while(k--)printf(\"%lld \",p),n/=p;printf(\"%lld \",n);}}"}
{"similarity_score": 0.638689866939611, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "6d2330017c79901e687de547ab61485d", "bug_code_uid": "396b47df548b974d67144a85df0bdc29", "src_uid": "d646834d58c519d5e9c0545df2ca4be2", "apr_id": "dcd58572c34a1ef6d15f0d5c04d37685", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\nint main(){\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n    int a[n],b[n];\n    for(int i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }    \n    bool can=true;\n    for(int i=0;i<n-1;i++){\n        if(a[i+1]>b[i]){\n            can=false;\n        }\n    }\n    if(b[n-1]<m){\n        can=false;\n    }\n    if(can){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n    return 1;\n}", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n\nint main(){\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n    int a[n],b[n];\n    for(int i=0;i< n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n\n    int c[m];\n    for(int i=0;i<m;i++){\n        c[i]=i+1;\n    }\n    \n    for(int i=0;i<n;i++){\n        for(int j=a[i];j<=b[i]-1;j++){\n            c[j]=0;\n        }\n    }\n\n    bool can=true;\n    for(int i=0;i<m;i++){\n        if(!c[i]==0){\n            can=false;\n        }\n    }\n\n    if(can){\n        printf(\"YES\");\n    }else {\n        printf(\"NO\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9949636261891438, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e038ffd218dfdf6e845f22c9cd103f4f", "bug_code_uid": "33a6a5463a96c8ef671d91cf9a865030", "src_uid": "1e17039ed5c48e5b56314a79b3811a40", "apr_id": "10996cb9168e7ca53ca394a3619cde7c", "difficulty": 1300, "tags": ["dsu", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int m,n,f;\n    int i,j;\n    int x;\n    int a[100010];\n    int b[100010];\n    memset(b,0,sizeof(b));\n    scanf(\"%d%d%d\",&m,&n,&f);\n    for(i=1; i<=m; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>f)\n            b[i]=1;\n    }\n    int sum=0;\n    for(j=0; j<m; j++)\n    {\n        if(b[j]==0&&b[j+1]==1)\n            sum++;\n    }\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&x);\n        if(x==1)\n        {\n            int temp;\n            scanf(\"%d\",&x);\n            scanf(\"%d\",&temp);\n            a[x]+=temp;\n            if(a[x]>f)\n            {\n                b[x]=1;\n                if(b[x-1]==1&&b[x+1]==1)sum--;\n                else if(b[x-1]==1||b[x+1]==1);\n                else sum++;\n            }\n\n        }\n        else\n        {\n            printf(\"%d\\n\",sum);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int m,n,f;\n    int i,j;\n    int x;\n    int a[100010];\n    int b[100010];\n    memset(b,0,sizeof(b));\n    scanf(\"%d%d%d\",&m,&n,&f);\n    for(i=1; i<=m; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]>f)\n            b[i]=1;\n    }\n    int sum=0;\n    for(j=0; j<m; j++)\n    {\n        if(b[j]==0&&b[j+1]==1)\n            sum++;\n    }\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&x);\n        if(x==1)\n        {\n            int temp;\n            scanf(\"%d\",&x);\n            scanf(\"%d\",&temp);\n            a[x]+=temp;\n            if(b[x]==0&&a[x]>f)\n            {\n                b[x]=1;\n                if(b[x-1]==1&&b[x+1]==1)sum--;\n                else if(b[x-1]==1||b[x+1]==1);\n                else sum++;\n            }\n\n        }\n        else\n        {\n            printf(\"%d\\n\",sum);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9330985915492958, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d8ac3e85679dcfbbdfb175680db387d6", "bug_code_uid": "49875617261d1b552f70dbb6bbff84de", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "05104c24ff72b26cf1ed7ce3d10d4f72", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,c[300001],m=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;++i)\n\tscanf(\"%d\",&c[i]);\n\tfor(i=n-1;i>=0;--i)\n\t{\n\t\tif(c[0]!=c[i])\n\t\t\tm=i;\n\t}\n\tfor(i=0;i<n;++i)\n\t{\n\t\tif(c[i]!=c[n-1])\n\t\t{\n\t\t\tif(m<n-1-i)\n\t\t\tm=n-1-i;\n\t\t}\n\t}\n\tprintf(\"%d\",m);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,c[300001],m=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;++i)\n\tscanf(\"%d\",&c[i]);\n\tfor(i=n-1;i>=0;--i)\n\t{\n\t\tif(c[0]!=c[i])\n\t\t{\n\t\t\tm=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=0;i<n;++i)\n\t{\n\t\tif(c[i]!=c[n-1])\n\t\t{\n\t\t\tif(m<n-1-i)\n\t\t\tm=n-1-i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\",m);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8449138410227904, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "af6820d10283d059adc43b925ecd7e91", "bug_code_uid": "86688ee6c40524273d683ad30e64a4ec", "src_uid": "b9f0c38c6066bdafa2e4c6daf7f46816", "apr_id": "69f7f907fbdc4dacf76a80447172d2cd", "difficulty": 900, "tags": ["constructive algorithms", "sortings", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid swap(char *a, char *b)\n{\n    char t = *a;\n    *a = *b;\n    *b = t;\n}\n\nint ispalin(char *s)\n{\n    int len = strlen(s);\n\n    for(int i = 0; i < len >> 1; i++)\n        if(s[i] != s[len - i - 1])\n            return 0;\n\n    for(int i = 1; i < len; i++)\n        if(s[0] != s[i])\n            return 1;\n\n    return 2;\n}\n\nint main()\n{\n    int t;\n    char s[100] = {0};\n\n    scanf(\"%d\", &t);\n    for(int i = 0; i < t; i++) \n    {\n        scanf(\"%s\", s);\n        int k = ispalin(s);\n        switch(k)\n        {\n            int len = strlen(s);\n            case 0: puts(s); break;\n            case 1:\n            for(int i = 0; i < len - 1; i++)\n                if(s[i] != s[i + 1])\n                {\n                    swap(&s[i],&s[i + 1]);\n                    break;\n                }\n            puts(s);\n            break;\n            case 2: puts(\"-1\"); break;\n        }\n\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nvoid swap(char *a, char *b)\n{\n    char t = *a;\n    *a = *b;\n    *b = t;\n}\n\nint ispalin(char *s)\n{\n    int len = strlen(s);\n\n    for(int i = 0; i < len >> 1; i++)\n        if(s[i] != s[len - i - 1])\n            return 0;\n\n    for(int i = 1; i < len; i++)\n        if(s[0] != s[i])\n            return 1;\n\n    return 2;\n}\n\nint main()\n{\n    int t;\n    char s[1001] = {0};\n\n    scanf(\"%d\", &t);\n    for(int i = 0; i < t; i++) \n    {\n        scanf(\"%s\", s);\n        int k = ispalin(s), len = strlen(s);\n\n        if(k == 2) puts(\"-1\");\n        else if(k == 1) \n        {\n            for(int i = 0; i < len - 1; i++)\n                if(s[i] != s[i + 1])\n                {\n                    swap(&s[i],&s[i + 1]);\n                    break;\n                }\n            puts(s);\n        }\n        else puts(s);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.17103448275862068, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "6567ad1c4ce3e8711341cfda31b75750", "bug_code_uid": "56a4bd0e3d9d7397e2afaa35db858d79", "src_uid": "cdcf95e29d3260a07dded74286fc3798", "apr_id": "d175e110b48b9535c52d3b846798868c", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\r\n#include<cstdio>\r\nusing namespace std;\r\nint main() \r\n{\r\n\tint t;\r\n\tcin >> t;\r\n\twhile (t--) {\r\n\t\tint n,i,m;\r\n\t\tcin >> n;\r\n\t\tm = n;\r\n\t\tif (n == 3) {\r\n\t\t\tcout << \"-1\" << endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (i = 1; i <= n; i++,m--) {\r\n\t\t\t\tcout << m << \" \";\r\n\t\t\t}\r\n\t\t\tcout << endl;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}//submitTime:1668048855068\n", "fixed": "#include<stdio.h>\r\nint a[200005];\r\nint main()\r\n{\r\n\tint t,N,i,j;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t  {\r\n\t  \tscanf(\"%d\",&N);\r\n\t  \tif(N==3)\r\n\t  \tprintf(\"-1\\n\");\r\n\t  \telse\r\n\t  \t{\r\n\t  \t  a[N-1]=2;\r\n\t  \t  a[N]=1;\r\n\t  \t  for(j=1;j<=N-2;j++)\r\n\t  \t   a[j]=j+2;\r\n\t  \t  for(j=1;j<=N;j++)\r\n\t  \t    printf(\"%d \",a[j]);\r\n\t  \t   printf(\"\\n\");\r\n\t\t}\r\n\t  }\r\n\treturn 0;\r\n}//submitTime:1668093384357\n"}
{"similarity_score": 0.9046087888531619, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "2d4bc12961aecc2da83e3734d7325192", "bug_code_uid": "4639b5a714ef1fe1c532f692f56f0b2e", "src_uid": "c01fc2cb6efc7eef290be12015f8d920", "apr_id": "98e551b425423ff51953703c620a88ba", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,c=0,j,x,y;\n    scanf(\"%d\",&n);\n    char a[n];\n    scanf(\"%s\",&a);\n    for(i=1;i<n;i++)\n    {\n        if(a[i]!=a[0])\n        {\n          c=1;\n          break;\n        }\n    }\n    if(c==0)\n    {\n        for(i=1;i<n;i++)\n        printf(\"%c\",a[i]);\n    }\n    else\n    {\n        for(i=n-2;i>=0;i++)\n\t\t{\n\t\t\tx=a[i],y=a[i-1];\n\t\t\tif(y>x)\n\t\t\t{\n\t\t\tbreak;\n\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tfor(j=0;j<=i;j++)\n\t\t{\n\t\tif(j!=i-1)\n\t\tprintf(\"%c\",a[j]);\n\t\t}\n\t}\n}\n\t\t\n\t", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,c=0,j,x,y;\n    scanf(\"%d\",&n);\n    char a[n];\n    scanf(\"%s\",&a);\n    for(i=1;i<n;i++)\n    {\n        if(a[i]!=a[0])\n        {\n          c=1;\n          break;\n        }\n    }\n    if(c==0)\n    {\n        for(i=1;i<n;i++)\n        printf(\"%c\",a[i]);\n    }\n    else\n    {\n        for(i=0;i<n-1;i++)\n\t\t{\n\t\t\tx=a[i],y=a[i+1];\n\t\t\tif(x>y)\n\t\t\t{\n\t\t\tbreak;\n\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\tif(j!=i)\n\t\tprintf(\"%c\",a[j]);\n\t\t}\n\t}\n}"}
{"similarity_score": 0.9995267392333176, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9248640aa62f833fd008a7a85927fa15", "bug_code_uid": "43b78e5d1ede5fe0506186d77b79909f", "src_uid": "f0402399cbaf8997993ac2ee59a60696", "apr_id": "2605aeddfa91c88cd0198d70534e4de9", "difficulty": 1100, "tags": ["greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#define sz 100000\r\nint main (){\r\n  long long int i,n,t;\r\n\r\n         char a[sz];\r\n         int b[sz];\r\n    scanf(\"%lld\",&t);\r\n    while(t--){\r\n        scanf(\"%lld\",&n);\r\n        scanf(\"%s\",a);\r\n     long long sum=0;\r\n    for(i=0;i<n;i++){\r\n        if(a[i]=='L') sum+=i;\r\n        else sum+=(n-(i+1));\r\n    }\r\n    int k=0,r=0,sk=0;\r\n    for(i=0;i<n;i++){\r\n      while(r<=i&&sk<=n/2){\r\n        if(k==0){\r\n            if(a[sk]=='L'){\r\n                a[sk]=='R';\r\n                if(sk<(n-(sk+1))){\r\n                sum-=sk;\r\n                sum+=(n-(sk+1));}\r\n                r++;\r\n            }\r\n            k=1;\r\n        }\r\n        if(r>i||sk>n/2) break;\r\n                if(k==1){\r\n            if(a[n-sk-1]=='R'){\r\n                a[n-sk-1]=='L';\r\n                if((n-(n-sk))<(n-sk-1)){\r\n                sum-=(n-(n-sk));\r\n                sum+=n-sk-1;\r\n                r++;}\r\n            }\r\n            k=0;\r\n            sk++;\r\n        }\r\n          if(r>i||sk>n/2) break;}\r\n\r\n      printf(\"%lld \",sum);}\r\n\r\n   printf(\"\\n\");\r\n    }\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#define sz 1000000\r\nint main (){\r\n  long long int i,n,t;\r\n\r\n         char a[sz];\r\n         int b[sz];\r\n    scanf(\"%lld\",&t);\r\n    while(t--){\r\n        scanf(\"%lld\",&n);\r\n        scanf(\"%s\",a);\r\n     long long sum=0;\r\n    for(i=0;i<n;i++){\r\n        if(a[i]=='L') sum+=i;\r\n        else sum+=(n-(i+1));\r\n    }\r\n    int k=0,r=0,sk=0;\r\n    for(i=0;i<n;i++){\r\n      while(r<=i&&sk<=n/2){\r\n        if(k==0){\r\n            if(a[sk]=='L'){\r\n                a[sk]=='R';\r\n                if(sk<(n-(sk+1))){\r\n                sum-=sk;\r\n                sum+=(n-(sk+1));}\r\n                r++;\r\n            }\r\n            k=1;\r\n        }\r\n        if(r>i||sk>n/2) break;\r\n                if(k==1){\r\n            if(a[n-sk-1]=='R'){\r\n                a[n-sk-1]=='L';\r\n                if((n-(n-sk))<(n-sk-1)){\r\n                sum-=(n-(n-sk));\r\n                sum+=n-sk-1;\r\n                r++;}\r\n            }\r\n            k=0;\r\n            sk++;\r\n        }\r\n          if(r>i||sk>n/2) break;}\r\n\r\n      printf(\"%lld \",sum);}\r\n\r\n   printf(\"\\n\");\r\n    }\r\n}\r\n\r\n"}
{"similarity_score": 0.9560439560439561, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9cb0dd01c1b634aef023e552b3b9179c", "bug_code_uid": "371ef19d6c6b8065a27bd74fdde6e052", "src_uid": "0671972bc2b6452d51d048329e6e0106", "apr_id": "bf40a48927801ddebb676b5e37787097", "difficulty": 900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,x,y;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(x-y==1)\n\t\t\tprintf(\"No\\n\");\n\t\telse\n\t\t\tprintf(\"yes\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int t,x,y;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld %lld\",&x,&y);\n\t\tif(x-y==1)\n\t\t\tprintf(\"No\\n\");\n\t\telse\n\t\t\tprintf(\"yes\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9985693848354793, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3459b066cccc43b79f3303ad127b4fa8", "bug_code_uid": "3bd4e81764973d398902b0b4dc0c85b8", "src_uid": "06898c5e25de2664895f512f6b766915", "apr_id": "d54381fea8c25d178f6f87542f346dfa", "difficulty": 1100, "tags": ["implementation", "sortings", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,k,total_small_len=0,same_len=0,len,temp,i,div,dif,div2;\n    scanf(\"%d %d\",&n,&k);\n    char t_pass[n+1][100],pass[101];\n    for(i=0;i<n;i++)\n        scanf(\" %s\",t_pass[i]);\n    scanf(\" %s\",pass);\n    len =strlen(pass);\n    for(i=0;i<n;i++)\n    {\n        temp=strlen(t_pass[i]);\n        if(temp<len)\n            total_small_len++;\n        else if(temp==len)\n            same_len++;\n    }\n\n    div=total_small_len/k;\n    dif=total_small_len-(k*div);\n\n    printf(\"%d \",(div*5)+(div*k)+dif+1);\n\n    same_len=same_len+dif-1;\n\n    div2=same_len/k;\n    dif=same_len-(k*div2);\n    printf(\"%d\",((div+div2)*5)+((div+div2)*k)+dif+1);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,k,total_small_len=0,same_len=0,len,temp,i,div,dif,div2;\n    scanf(\"%d %d\",&n,&k);\n    char t_pass[n+1][101],pass[101];\n    for(i=0;i<n;i++)\n        scanf(\" %s\",t_pass[i]);\n    scanf(\" %s\",pass);\n    len =strlen(pass);\n    for(i=0;i<n;i++)\n    {\n        temp=strlen(t_pass[i]);\n        if(temp<len)\n            total_small_len++;\n        else if(temp==len)\n            same_len++;\n    }\n\n    div=total_small_len/k;\n    dif=total_small_len-(k*div);\n\n    printf(\"%d \",(div*5)+(div*k)+dif+1);\n\n    same_len=same_len+dif-1;\n\n    div2=same_len/k;\n    dif=same_len-(k*div2);\n    printf(\"%d\",((div+div2)*5)+((div+div2)*k)+dif+1);\n    return 0;\n\n}\n"}
{"similarity_score": 0.9950738916256158, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f7a56059adfa59e98db02a48bcaa1e60", "bug_code_uid": "25848b1374ce14e04c91e0e252868ef4", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "fce58ed46a0237a929d8e9f98bb4f372", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid main()\r\n{\r\nint a,b,c,T;\r\nscanf(\"%d\",&t);\r\nwhile(T--){\r\nscanf(\"%d%d%d\",&a,&b,&c);\r\nif(a==(b+c)||b==(a+c)||c==(a+b)){\r\n    printf(\"YES\\n\");\r\n}\r\nelse\r\n{\r\n    printf(\"NO\\n\");\r\n}\r\n}\r\n}", "fixed": "#include<stdio.h>\r\nvoid main()\r\n{\r\nint a,b,c,T;\r\nscanf(\"%d\",&T);\r\nwhile(T--){\r\nscanf(\"%d%d%d\",&a,&b,&c);\r\nif(a==(b+c)||b==(a+c)||c==(a+b)){\r\n    printf(\"YES\\n\");\r\n}\r\nelse\r\n{\r\n    printf(\"NO\\n\");\r\n}\r\n}\r\n}"}
{"similarity_score": 0.9959016393442623, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d622a953c27fdf34ee198c39c70b04ef", "bug_code_uid": "f1945cdd6a9ef858d0c930d724516202", "src_uid": "7ac27da2546a50d453f7bb6cacef1068", "apr_id": "c349bafa395de823a434ac67ab12263e", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\n \r\nint main() {\r\n   long long int t;\r\n   scanf(\"%lld\", &t);\r\n   long long int a,b,c,x,y;\r\n   for (int i =0 ; i<t; i++){\r\n       scanf(\"%lld\", &a);\r\n       scanf(\"%lld\", &b);\r\n       scanf(\"%lld\", &c);\r\n       scanf(\"%lld\", &x);\r\n       scanf(\"%lld\", &y);\r\n    x = x -a;\r\n           \r\n       \r\n       if (x>0&&c>=x){\r\n          c = c-x;\r\n          x = 0;\r\n       }\r\n     \r\n     y = y-b;\r\n       \r\n       if (y>0&&c>=y){\r\n           c = c-y;\r\n           y = 0;\r\n          \r\n       }\r\n      \r\n       if (x==0&&y==0){\r\n           printf(\"YES\");\r\n           printf(\"\\n\");\r\n       }\r\n       else{\r\n       printf(\"NO\");\r\n       printf(\"\\n\");}\r\n   }\r\n    \r\n    return 0;\r\n}", "fixed": "\r\n// Online C compiler to run C program online\r\n#include <stdio.h>\r\n \r\nint main() {\r\n   long long int t;\r\n   scanf(\"%lld\", &t);\r\n   long long int a,b,c,x,y;\r\n   for (int i =0 ; i<t; i++){\r\n       scanf(\"%lld\", &a);\r\n       scanf(\"%lld\", &b);\r\n       scanf(\"%lld\", &c);\r\n       scanf(\"%lld\", &x);\r\n       scanf(\"%lld\", &y);\r\n    x = x -a;\r\n           \r\n       \r\n       if (x>0&&c>=x){\r\n          c = c-x;\r\n          x = 0;\r\n       }\r\n     \r\n     y = y-b;\r\n       \r\n       if (y>0&&c>=y){\r\n           c = c-y;\r\n           y = 0;\r\n          \r\n       }\r\n      \r\n       if (x<=0&&y<=0){\r\n           printf(\"YES\");\r\n           printf(\"\\n\");\r\n       }\r\n       else{\r\n       printf(\"NO\");\r\n       printf(\"\\n\");}\r\n   }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9601386481802426, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ee7ed488ddcd2aba183cf28c4572d624", "bug_code_uid": "bbef12a0db7042000149ade57a5f8f2b", "src_uid": "ac248c83c99d8a2262772816b5f4ac6e", "apr_id": "a98f5a531f85ae06bb00c26a313b1ef0", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    for(int i=1 ;i<=t;i++)\n    {\n        int a;\n        scanf(\"%d\",&a);\n        printf(\"%d\\n\",a);\n        for(int j=1; j<=a ; j++)\n        {\n            printf(\"%d\",j);\n\n\n        }\n\n\n\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    for(int i=1 ;i<=t;i++)\n    {\n        int a;\n        scanf(\"%d\",&a);\n        printf(\"%d\\n\",a);\n        for(int j=1; j<=a ; j++)\n        {\n            printf(\"%d \",j);\n\n\n        }\n        printf(\"\\n\");\n\n\n\n    }\n}\n"}
{"similarity_score": 0.45080500894454384, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "8c5c3d5ae6d2d471bb8e4fdc5b52dc64", "bug_code_uid": "29e6a8755046378ab425f23b11a44e95", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "72b0a8382b8dd06e8821c28cef962778", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) \n{\n\tint n,x=0;\n\tchar s[3];\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tif(s[1]=='+')\n\t\t{\n\t\t\tx++;\n\t\t}\n\t\tif(s[1]=='-')\n\t\t{\n\t\t\tx--;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",x);\n\treturn 0;\n}\n\t\t\t\t\t\t \t \t \t      \t\t\t    \t\t \t\t\t", "fixed": "#include<stdio.h>\nint main(){\n    int n,i;\n    char a[5];\n    int x;\n    x=0;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%s\",&a);\n        if(a[0]=='+'||a[1]=='+')\n            x++;\n        else if(a[0]=='-'||a[1]=='-')\n            x--;\n    }\n    printf(\"%d\\n\",x);\n    return 0;\n}\n\n\t\t  \t\t\t\t\t\t\t\t\t \t \t \t   \t \t   \t\t"}
{"similarity_score": 0.9519519519519519, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3a4c0a4190dbe46d96a819b1aedb7f46", "bug_code_uid": "8170948a92392f4aac419322d5be77ad", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "4f11138cd14c8fe1b3bae99907c8b9da", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main(void)\r\n{\r\n    int t,n,i,j=0,k;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&k);\r\n        for(i=1;j<k;i++)\r\n        {\r\n            if(i%3!=0&&i%10!=3)\r\n            {\r\n                j++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",i-1);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main(void)\r\n{\r\n    int t,n,i,j=0,k;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        j=0;\r\n        i=0;\r\n        scanf(\"%d\",&k);\r\n        for(i=1;j<k;i++)\r\n        {\r\n            if((i%3!=0)&&(i%10!=3))\r\n            {\r\n                j++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",i-1);\r\n    }\r\n}"}
{"similarity_score": 0.9986702127659575, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d4a98b5bf7aceddc4fb9e79f782e5576", "bug_code_uid": "e84b2b441d257b1f88dc4c4cf6395141", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "c7c191fc3ef0273f41b42d1af0f423ab", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int k=0;k<t;k++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n==1)\r\n            printf(\"0\\n\");\r\n        else if(n==2)\r\n            printf(\"1\\n\");\r\n        else\r\n        {\r\n            for(int i=2;i<30;i++)\r\n            {\r\n                if(n<(int)(pow(2,i)))\r\n                {\r\n                    printf(\"%d\\n\",(int)(pow(2,i-1)-1));\r\n                    break;\r\n                }\r\n                else if(n==(int)(pow(2,i)))\r\n                {\r\n                    printf(\"%d\\n\",(int)(pow(2,i)-1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int k=0;k<t;k++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(n==1)\r\n            printf(\"0\\n\");\r\n        else if(n==2)\r\n            printf(\"1\\n\");\r\n        else\r\n        {\r\n            for(int i=2;i<50;i++)\r\n            {\r\n                if(n<(int)(pow(2,i)))\r\n                {\r\n                    printf(\"%d\\n\",(int)(pow(2,i-1)-1));\r\n                    break;\r\n                }\r\n                else if(n==(int)(pow(2,i)))\r\n                {\r\n                    printf(\"%d\\n\",(int)(pow(2,i)-1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.5078597339782346, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "67ac59f142357812702393be0db701c1", "bug_code_uid": "0afd203a777877e1c6ab6419cc4088f0", "src_uid": "a4eeaf7252b9115b67b9eca5f2bf621d", "apr_id": "bd88cb259cde9b8c5c5ef1267ed39e65", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//problem A\r\n\r\n#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n    int t,i,x1,x2,p1,p2,r1,r2;\r\n\r\n    scanf(\"%d\",&t);\r\n\r\n    for(i=1; i<=t; i++)\r\n    {\r\n        scanf(\"%d %d\",&x1,&p1);\r\n        scanf(\"%d %d\",&x2,&p2);\r\n\r\n        r1 = x1*pow(10,p1);\r\n        r2 = x2*pow(10,p2);\r\n\r\n        if(r1>r2)\r\n            printf(\">\\n\");\r\n        else if(r1<r2)\r\n            printf(\"<\\n\");\r\n        else\r\n            printf(\"=\\n\");\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n \r\nint main()\r\n{\r\n    int n;\r\n    int x1, p1, x2, p2;\r\n    double a;\r\n    scanf(\"%d\", &n);\r\n    while(n--){\r\n        scanf(\"%d%d%d%d\", &x1, &p1, &x2, &p2);\r\n        a = x1 * pow(10.0, p1 - p2) / x2;\r\n        if(a > 1){\r\n            printf(\">\\n\");\r\n        }else if(a < 1)\r\n            printf(\"<\\n\");\r\n        else\r\n            printf(\"=\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9992044550517104, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "28461c84113dee4dbc4b791b32a563e6", "bug_code_uid": "71692e8c3bd0e477b0e62f214b9351df", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "4247246231eb5d227d8d4210034459ad", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int t,i,l;\n    char s[100]\n    scanf(\"%d\",&t);\n    while(t!=0)\n    {\n        scanf(\"%s\",s);\n        l = strlen(s);\n        if(l==2)\n        {\n            printf(\"%s\",s);\n        }\n        else\n        {\n            printf(\"%c\",s[0]);\n            for(i=2;i<=(l-2);i++)\n            {\n                if(s[i]==s[i-1])\n                {\n                    printf(\"%c\",s[i]);\n                    i = i+1;\n                }\n            }\n            printf(\"%c\",s[l-1]);\n        }\n        t--;\n        if(t!=0)\n        {\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int t,i,l;\n    char s[100];\n    scanf(\"%d\",&t);\n    while(t!=0)\n    {\n        scanf(\"%s\",s);\n        l = strlen(s);\n        if(l==2)\n        {\n            printf(\"%s\",s);\n        }\n        else\n        {\n            printf(\"%c\",s[0]);\n            for(i=2;i<=(l-2);i++)\n            {\n                if(s[i]==s[i-1])\n                {\n                    printf(\"%c\",s[i]);\n                    i = i+1;\n                }\n            }\n            printf(\"%c\",s[l-1]);\n        }\n        t--;\n        if(t!=0)\n        {\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.7028248587570621, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "402aaf7726582254f09cdbf0e8598819", "bug_code_uid": "0b9324a3a4e92633f0e65eb7e0e321af", "src_uid": "e22b10cdc33a165fbd73b45dc5fbedce", "apr_id": "09f0daf67fb53799e075edca6f3ee172", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint\nmain ()\n{\n  int i, n;\n  scanf (\"%d\", &n);\n  long long int b[n];\n  for (i = 0; i < n; i++)\n    {\n      scanf (\"%lld\", &b[i]);\n    }\n  long long int a[n];\n  for (i = 2; i < n; i++)\n    {\n      a[0] = b[0];\n      a[1] = b[1] + a[0];\n      if (a[i - 2] < a[i - 1])\n\t{\n\t  a[i] = b[i] + a[i - 1];\n\t}\n      else\n\t{\n\t  a[i] = b[i] + a[i - 2];\n\t}\n\n    }\n  for (i = 0; i < n; i++)\n    {\n      printf (\"%lld \", a[i]);\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint\nmain ()\n{\n  int i, j, m, n;\n  scanf (\"%d\", &n);\n  long long int b[n];\n  for (i = 0; i < n; i++)\n    {\n      scanf (\"%lld\", &b[i]);\n    }\n  long long int a[n];\n\n\n  a[0] = b[0];\n  a[1] = b[1] + a[0];\n  m = a[0];\n  if (m < a[1])\n    {\n      m = a[1];\n    }\n  for (i = 2; i < n; i++)\n    {\n      a[i] = b[i] + m;\n      if (m < a[i])\n\t{\n\t  m = a[i];\n\t}\n\n    }\n  for (i = 0; i < n; i++)\n    {\n      printf (\"%lld \", a[i]);\n    }\n}\n"}
{"similarity_score": 0.9247626004382761, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1d302f0e8be351854887bb34485a933d", "bug_code_uid": "14dbdf92358cb79c78e09194ad0692c0", "src_uid": "a4c82fffb31bc7e42870fd84e043e815", "apr_id": "377cc9ac3bfbcff2263346c79cdc1a7d", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tunsigned long int t;\n\tscanf(\"%lu\", &t);\n\tunsigned long int n[t],k[t];\n\tint res[t];\n\tfor (int i = 1; i <= t; i++)\n\t{\n\t\tscanf(\"%lu %lu\", &n[i], &k[i]);\n\t\tif (n[i] < k[i])\n\t\t{\n\t\t\tres[i] = 0;\n\t\t}\n\t\telse if (n[i] == k[i])\n\t\t{\n\t\t\tif (n[i]==1)\n\t\t\t\tres[i] = 1;\n\t\t\telse\n\t\t\t\tres[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif((n[i] + k[i]) % 2 == 0)\n\t\t\t{\n\t\t\t\tunsigned long int s = 1;\n\t\t\t\tfor ( int j = 0; j < k[i]; j++)\n\t\t\t\t\ts = s + 2;\n\t\t\t\tif (s <= n[i])\n\t\t\t\t\tres[i] = 1;\n\t\t\t\telse \n\t\t\t\t\tres[i] = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t\tres[i]=0;\n\t\t}\n\t}\n\tfor (int i = 1; i <= t; i++)\n\t{\n\t\tif (res[i] == 1)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\t\n}\n\t\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tunsigned long int t;\n\tscanf(\"%lu\", &t);\n\tunsigned long int n[t],k[t];\n\tint res[t];\n\tfor (int i = 1; i <= t; i++)\n\t{\n\t\tscanf(\"%lu %lu\", &n[i], &k[i]);\n\t\tif (n[i] < k[i])\n\t\t{\n\t\t\tres[i] = 0;\n\t\t}\n\t\telse if (n[i] == k[i])\n\t\t{\n\t\t\tif (n[i]==1)\n\t\t\t\tres[i] = 1;\n\t\t\telse\n\t\t\t\tres[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif((n[i] + k[i]) % 2 == 0)\n\t\t\t{\n\t\t\t\tunsigned long int m = k[i]*2 - 1;\n\t\t\t\tunsigned long int s = (1+m)*k[i]/2;\t\t\t\t\n\t\t\t\tif (s <= n[i])\n\t\t\t\t\tres[i] = 1;\n\t\t\t\telse \n\t\t\t\t\tres[i] = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t\tres[i]=0;\n\t\t}\n\t}\n\tfor (int i = 1; i <= t; i++)\n\t{\n\t\tif (res[i] == 1)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\t\n}\n\t\n"}
{"similarity_score": 0.9758812615955473, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "82e4c032ea5a63804220a821fc7aeeb0", "bug_code_uid": "6db12cc2bb5f0c9200f12b9a2d3ad0ff", "src_uid": "1cd295e204724335c63e685fcc0708b8", "apr_id": "1119b3f698d9e890a36d7acd738460e5", "difficulty": 1400, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int i,n;\n     long long int c=0,a,b;\n    scanf(\"%d\",&n);\nscanf( \"%I64d\",&a);\n\n        for(i=0;i<n-1;i++)\n        {scanf( \"%I64d\",&b);\n            if(b<a)\n{   c=c+a-b;\n    a=b;}\n       }\n       printf(\"%I64d\",c);\n\nreturn 0;\n\n\n    }\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int i,n;\n     long long int c=0,a,b;\n    scanf(\"%d\",&n);\nscanf( \"%I64d\",&a);\n\n        for(i=0;i<n-1;i++)\n        {scanf( \"%I64d\",&b);\n            if(b<a)\n{   c=c+a-b;\n    }\n    a=b;\n       }\n       printf(\"%I64d\",c);\n\nreturn 0;\n\n\n    }\n"}
{"similarity_score": 0.9408945686900958, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "140ecaf439e227c06d8d3a3de892475c", "bug_code_uid": "987b419f971e9e5e076008d09f2cdf45", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "ca26e7a0a1f5ffb877b699e90c046ef0", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,m;\n\tscanf(\"%I64d %I64d\",&n,&m);\n\tif (m>=n&&(m<=(2*n+2)))\n\t{\n\t\twhile (n||m)\n\t\t{\n\t\t\tif (n==1)\n\t\t\t{\n\t\t\t\tif (m==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"10\");\n\t\t\t\t\tm=m-1;\n\t\t\t\t}\n\t\t\t\telse if (m==2)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"101\");\n\t\t\t\t\tm=m-2;\n\t\t\t\t}\n\t\t\t\telse if (m==3)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"1101\");\n\t\t\t\t\tm=m-3;\n\t\t\t\t}\n\t\t\t\telse if (m==4)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"11011\");\n\t\t\t\t\tm=m-4;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((m>=n)&&(m<=(n+2))&&m!=2*n)\n\t\t\t{\n\t\t\t\tprintf(\"10\");\n\t\t\t\tm=m-1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tprintf(\"110\");\n\t\t\t\n\t\t\t\tm=m-2;\n\t\t\t}\n\t\tn--;\t\n\t\t}\n\t\t\n\t}\n\n\telse \n\t\tprintf(\"-1\");\n\t\t\n\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,m;\n\tscanf(\"%I64d %I64d\",&n,&m);\n\tif (m==(n-1))\n\t{\n\t\twhile (m--)\n\t\tprintf(\"01\");\n\t\tprintf(\"0\");\n\t\t\n\t}\n\telse if (m>=n&&(m<=(2*n+2)))\n\t{\n\t\twhile (n||m)\n\t\t{\n\t\t\tif (n==1)\n\t\t\t{\n\t\t\t\tif (m==1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"10\");\n\t\t\t\t\tm=m-1;\n\t\t\t\t}\n\t\t\t\telse if (m==2)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"101\");\n\t\t\t\t\tm=m-2;\n\t\t\t\t}\n\t\t\t\telse if (m==3)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"1101\");\n\t\t\t\t\tm=m-3;\n\t\t\t\t}\n\t\t\t\telse if (m==4)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"11011\");\n\t\t\t\t\tm=m-4;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((m>=n)&&(m<=(n+2))&&m!=2*n)\n\t\t\t{\n\t\t\t\tprintf(\"10\");\n\t\t\t\tm=m-1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tprintf(\"110\");\n\t\t\t\n\t\t\t\tm=m-2;\n\t\t\t}\n\t\tn--;\t\n\t\t}\n\t\t\n\t}\n\n\telse \n\t\tprintf(\"-1\");\n\t\t\n\t\treturn 0;\n}"}
{"similarity_score": 0.9944289693593314, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "baa576fb37b987393bc8a48a00fa2064", "bug_code_uid": "95d4de4059c83945b010840fd854d152", "src_uid": "08679e44ee5d3c3287230befddf7eced", "apr_id": "6eee54dbac02f27e5bee76be2640040f", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint cnt=0;\n\t\tchar a[100];\n\t\tchar b[100];\n\t\tchar c[100];\n\t\tscanf(\"%s\",a);\n\t\tscanf(\"%s\",b);\n\t\tscanf(\"%s\",c);\n\t\tfor(int i=0;i<strlen(a);i++){\n\t\t\tif(c[i]!=a[i] && c[i]!=b[i]){\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\tcnt++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(cnt==0){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t}\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint cnt=0;\n\t\tchar a[1000];\n\t\tchar b[1000];\n\t\tchar c[1000];\n\t\tscanf(\"%s\",a);\n\t\tscanf(\"%s\",b);\n\t\tscanf(\"%s\",c);\n\t\tfor(int i=0;i<strlen(a);i++){\n\t\t\tif(c[i]!=a[i] && c[i]!=b[i]){\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\tcnt++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(cnt==0){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t}\n\t}\n}"}
{"similarity_score": 0.8883374689826302, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "63c08415d84bf32068792ed5e4216e81", "bug_code_uid": "18ff9ba8b6350a4fa5d438d0c966d2f0", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "d776804f8f82724622306480e1363df2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    char buf[3],old;\n    int n,s;\n        scanf(\"%d\",&n);\n        while(n--){\n            scanf(\"%s\",buf);\n        s+=old!=buf[0];\n        old=buf[0];\n        }\n    printf(\"%d\\n\",s);\n}", "fixed": "\n    char buf[3],old; n,s;\n    main(){\n        scanf(\"%d\",&n);\n        while(n--){\n            scanf(\"%s\",buf);\n        s+=old!=buf[0];\n        old=buf[0];\n        }\n    printf(\"%d\\n\",s);\n}"}
{"similarity_score": 0.9984, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c6ec6f83eefb095e8ddfeeff274b63f6", "bug_code_uid": "96a4f53f7ff2609cce43d74b4c42c9c5", "src_uid": "09faf19627d2ff00c3821d4bc2644b63", "apr_id": "bd291eec63e21da5353d1a699b29f017", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t)\n    {\n        long long int i = 0, n;\n        scanf(\"%lld\", &n);\n        long long int ar[n];\n\n        while (i < n)\n            scanf(\"%lld\", &ar[i++]);\n\n        long long int min = ar[n - 1];\n        long long int count = 0;\n        i = n - 2;\n        while (i >= 0)\n        {\n            if (min > ar[i])\n            {\n                min = ar[i];\n            }\n            else if (min < ar[i])\n            {\n                count++;\n            }\n            i--;\n        }\n        printf(\"%lld\", count);\n        t--;\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t)\n    {\n        long long int i = 0, n;\n        scanf(\"%lld\", &n);\n        long long int ar[n];\n\n        while (i < n)\n            scanf(\"%lld\", &ar[i++]);\n\n        long long int min = ar[n - 1];\n        long long int count = 0;\n        i = n - 2;\n        while (i >= 0)\n        {\n            if (min > ar[i])\n            {\n                min = ar[i];\n            }\n            else if (min < ar[i])\n            {\n                count++;\n            }\n            i--;\n        }\n        printf(\"%lld\\n\", count);\n        t--;\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.6712328767123288, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "6c4f5cf1c16ad2d32781ca9bf9c3c245", "bug_code_uid": "b587489e8bb815281b55f8190f831145", "src_uid": "1d9d34dca11a787d6e2345494680e717", "apr_id": "769a02055695380ee4afced3e51a4496", "difficulty": 800, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint a[1000000];\r\nint main()\r\n{\r\n\tint t;int n;int i;\r\n\tint m;int q;int l=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint sum=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\tsum+=a[i];\r\n\t\t}\r\n\t\tint sum1=0; int l=0;\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\t//if(a[i]==2)  sum1+=a[i];\r\n\t\t\t\r\n\t\t\tif(a[i]==1)  \r\n\t\t\t{\r\n\t\t\tsum1+=a[i];\r\n\t\t\tl++;\r\n\t\t}\r\n\t\t}\r\n\t//\tprintf(\"%d\",l);\r\n\t\tm=(2*sum1-sum)%2;\r\n\t\tq=(sum-2*sum1)/2%2;\r\n\t\tif((sum1>=sum/2)&&m==0) printf(\"yes\\n\");\r\n\t\telse if((sum1<sum/2)&&q==0)  printf(\"yes\\n\");\r\n\t\telse if(l==n/2&&l%2==0)  printf(\"yes\\n\");\r\n\t\telse printf(\"no\\n\");\r\n\t//if(sum1<=sum/2);  printf(\"yes\\n\");\r\n\t//else if(sum1>sum/2)\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint a[1000000];\r\nint main()\r\n{\r\n\tint t;int n;int i;\r\n\tint m;int q;int l=0;\r\n\tscanf(\"%d\",&t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint sum=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\tsum+=a[i];\r\n\t\t}\r\n\t\tint sum1=0; int l=0;\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\t//if(a[i]==2)  sum1+=a[i];\r\n\t\t\t\r\n\t\t\tif(a[i]==2)  \r\n\t\t\t{\t\t\r\n\t\t\tsum1 += a[i];\r\n\t\t\tl++;\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tif(sum1<=sum/2&&(sum-2*sum1)%2==0)   printf(\"yes\\n\");\r\n\t\telse if(sum1>sum/2&&(n-l)%2==0&&(n-l)>0)   printf(\"yes\\n\");\r\n\t\telse if(l%2==0&&(n-l)%2==0)   printf(\"yes\\n\");\r\n\t\telse printf(\"no\\n\");\t\r\n\r\n}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9682758620689655, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f70840d714e481c1468d2ce84aa21ae8", "bug_code_uid": "4ee0e59d739b4cb0dac75a2e98e807a8", "src_uid": "c9da10199ad1a5358195b693325e628b", "apr_id": "e5a4865a0883f9bf00032669696e2608", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 200001\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tint a[N],b[N];\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint i;\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tint m;\n\t\tscanf(\"%d\",&m);\n\t\tfor(i=0;i<m;i++){\n\t\t\tscanf(\"%d\",&b[i]);\n\t\t}\n\t\tint sum=0;\n\t\tfor(i=0;i<m;i++){\n\t\t\tsum+=b[i];\n\t\t}\n\t\tprintf(\"%d\\n\",a[sum%n]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define N 200001\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tint a[N],b[N];\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint i;\n\t\tfor(i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tint m;\n\t\tscanf(\"%d\",&m);\n\t\tfor(i=0;i<m;i++){\n\t\t\tscanf(\"%d\",&b[i]);\n\t\t}\n\t\tint sum=0;\n\t\tfor(i=0;i<m;i++){\n\t\t\t//sum+=b[i];\n\t\t\tsum=(sum+b[i])%n;\n\t\t}\n\t\tprintf(\"%d\\n\",a[sum%n]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9732620320855615, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "3b35358b55ad9aa0a77ef63e4d5e6a06", "bug_code_uid": "03d000130188cd2b90df4143261f9fc3", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "2980cfe6e1d56f409c56bd85ec3a17c2", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int n,x,r,d,count=0,i=0;\n    char o[2];\n    scanf(\"%ld%ld\",&n,&x);r=x;\n    for(i=0;i<n;++i)\n    {\n        scanf(\"%s%ld\",&o,&d);\n        if(o[0]=='+')\n                r+=d;\n        else\n            {\n                if(d<=r) r-=d;\n                else count++;\n            }\n    }\n    printf(\"%ld %ld\\n\",r,count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,x,r,d,count=0,i=0;\n    char o[2];\n    scanf(\"%lld%lld\",&n,&x);r=x;\n    for(i=0;i<n;++i)\n    {\n        scanf(\"%s%lld\",&o,&d);\n        if(o[0]=='+')\n                r+=d;\n        else\n            {\n                if(d<=r) r-=d;\n                else count++;\n            }\n    }\n    printf(\"%lld %lld\\n\",r,count);\n    return 0;\n}\n"}
{"similarity_score": 0.4432234432234432, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "66258ed9eac7d18a3edd4895aed9f01d", "bug_code_uid": "bc682bf25aeea62f1dcc14e3925f4775", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "05284bb00bf93b3d9be1d7470c659806", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint lcm(int a,int b)\n{\nint big,l;\na>b?big=a:big=b;\nl=big;\nwhile(l%a!=0||l%b!=0)\nl+=big;\nreturn l;\n}\nint main()\n{\nint n,i,p;\nlong long int s[10000],a,o[10000];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%I64d\",&s[i]);\np=4*s[i];\na=lcm(p,s[i]+1);\no[i]=a/(s[i]+1)+1;\n}\nfor(i=0;i<n;i++)\nprintf(\"%I64d\\n\",o[i]);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,i,o,n;\n    scanf(\"%I64d\",&t);\n    for(i=0;i<t;i++)\n    {scanf(\"%I64d\",&n);\n    o=(n%2==0?4*n+1:n%4==3?n+1:2*n+1);\n    printf(\"%I64d\\n\",o);}\n    return 0;\n    }\n"}
{"similarity_score": 0.9897196261682243, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d91e38da2ec889d881c9a8918d1b05ff", "bug_code_uid": "554f42e7eb5e71a3ccac8b2e3533130a", "src_uid": "080287f34b0c1d52eb29eb81dada41dd", "apr_id": "32b62d312c6d47394137fd6e9509e322", "difficulty": 1900, "tags": ["greedy", "constructive algorithms", "combinatorics", "math", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmpfunc (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\nint find(int k,int a[],int n)\n{\n\tint i;\n\tfor(i=0;i<2*n;i++)\n\t\tif(a[i]==k)\n\t\t\treturn i;\n}\nint main()\n{\n\tint j,last=1,r,i,n,x=1,st=0,a[100],c,k=0,arr[100],ans[100],f,s=0,t=0,b[1000]={0};\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tarr[i]=a[i];\n\t\tb[a[i]]++;;\n\t}\n\tqsort(a,2*n,sizeof(int),cmpfunc);\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tif(a[i]==a[k])\n\t\t{\n\t\t\tx++;\n\t\t\tif(x<=3-st)\n\t\t\t\tif(last==0)\n\t\t\t\t\ts++;\n\t\t\t\telse\n\t\t\t\t\tt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx=1;\n\t\t\tif(last==0)\n\t\t\t\ts++;\n\t\t\telse\n\t\t\t\tt++;\n\t\t\tst=1;\n\t\t\tk=i;\n\t\t}\n\t}\n\tif(s>t)\n\t\twhile(s-t>=2)\n\t\t{\n\t\t\ts--;\n\t\t\tt++;\n\t\t}\n\telse\n\t\twhile(t-s>=2)\n\t\t{\n\t\t\tt--;\n\t\t\ts++;\n\t\t}\n\tfor(i=10;i<100;i++)\n\t\tif(b[i]>1)\n\t\t\tfor(j=0;j<2*n;j++)\n\t\t\t\tif(arr[j]==i) \n\t\t\t\t{\n\t\t\t\t\tans[j]=last+1;\n\t\t\t\t\tlast=1-last;\n\t\t\t\t}\n\tfor(i=10;i<100;i++)\n\t\tif(b[i]==1)\n\t\t\tfor(j=0;j<2*n;j++)\n\t\t\t\tif(arr[j]==i)\n\t\t\t\t{\n\t\t\t\t\tans[j]=last+1;\n\t\t\t\t\tlast=1-last;\n\t\t\t\t}\n\tprintf(\"%d\\n\",s*t);\n\tfor(i=0;i<2*n;i++)\n\t\tprintf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmpfunc (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\nint find(int k,int a[],int n)\n{\n\tint i;\n\tfor(i=0;i<2*n;i++)\n\t\tif(a[i]==k)\n\t\t\treturn i;\n}\nint main()\n{\n\tint j,last=1,r,i,n,x=1,st=0,a[500],c,k=0,arr[500],ans[500],f,s=0,t=0,b[1000]={0};\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tarr[i]=a[i];\n\t\tb[a[i]]++;;\n\t}\n\tqsort(a,2*n,sizeof(int),cmpfunc);\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tif(a[i]==a[k])\n\t\t{\n\t\t\tx++;\n\t\t\tif(x<=3-st)\n\t\t\t\tif(last==0)\n\t\t\t\t\ts++;\n\t\t\t\telse\n\t\t\t\t\tt++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx=1;\n\t\t\tif(last==0)\n\t\t\t\ts++;\n\t\t\telse\n\t\t\t\tt++;\n\t\t\tst=1;\n\t\t\tk=i;\n\t\t}\n\t}\n\tif(s>t)\n\t\twhile(s-t>=2)\n\t\t{\n\t\t\ts--;\n\t\t\tt++;\n\t\t}\n\telse\n\t\twhile(t-s>=2)\n\t\t{\n\t\t\tt--;\n\t\t\ts++;\n\t\t}\n\tfor(i=10;i<100;i++)\n\t\tif(b[i]>1)\n\t\t\tfor(j=0;j<2*n;j++)\n\t\t\t\tif(arr[j]==i) \n\t\t\t\t{\n\t\t\t\t\tans[j]=last+1;\n\t\t\t\t\tlast=1-last;\n\t\t\t\t}\n\tfor(i=10;i<100;i++)\n\t\tif(b[i]==1)\n\t\t\tfor(j=0;j<2*n;j++)\n\t\t\t\tif(arr[j]==i)\n\t\t\t\t{\n\t\t\t\t\tans[j]=last+1;\n\t\t\t\t\tlast=1-last;\n\t\t\t\t}\n\tprintf(\"%d\\n\",s*t);\n\tfor(i=0;i<2*n;i++)\n\t\tprintf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9922480620155039, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a49863ceda3b8389cc1dab60559da4ad", "bug_code_uid": "cc2f92af4c8543f99262f8ed75b05948", "src_uid": "75ec99318736a8a1b62a8d51efd95355", "apr_id": "cfbca7d4e0e1d56d49d5e0481135aa0b", "difficulty": 2000, "tags": ["combinatorics", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _USE_MATH_DEFINES\n#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <stdbool.h>\n#include <float.h>\n#include <limits.h>\n#include <malloc.h>\n#include <memory.h>\n#include <complex.h>\n#include <errno.h>\n#include <time.h>\n#define Max(X,Y) ((X)>(Y) ? (X) : (Y))\n#define Min(X,Y) ((X)<(Y) ? (X) : (Y))\n#define MOD 998244353\n#define N 300005\nlong long a[12]={0,4,10,20,35,56,83,116,155,198,244,292};\nint n;\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tif (n<=11) printf(\"%lld\\n\",a[n]); \n\telse printf(\"%lld\\n\",a[11]+49*(n-11));\n\treturn 0;\n}\n", "fixed": "#define _USE_MATH_DEFINES\n#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <stdbool.h>\n#include <float.h>\n#include <limits.h>\n#include <malloc.h>\n#include <memory.h>\n#include <complex.h>\n#include <errno.h>\n#include <time.h>\n#define Max(X,Y) ((X)>(Y) ? (X) : (Y))\n#define Min(X,Y) ((X)<(Y) ? (X) : (Y))\n#define MOD 998244353\n#define N 300005\nlong long a[12]={0,4,10,20,35,56,83,116,155,198,244,292},n;\n\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tif (n<=11) printf(\"%lld\\n\",a[n]); \n\telse printf(\"%lld\\n\",a[11]+49*(n-11));\n\treturn 0;\n}\n"}
{"similarity_score": 0.9500693481276006, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "56fc76daf15f9d6a2e4ab564e5e3d6c6", "bug_code_uid": "e264140dc7665c4b3221217896fce361", "src_uid": "aa77158bf4c0854624ddd89aa8b424b3", "apr_id": "0cf9c688312de7005d16eb3589922347", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n\tint p,q,l,r,i,j,k,n,m=0,s=0;\n\tscanf(\"%d %d %d %d\\n\",&p,&q,&l,&r);\n\tint a[55];\n\tint b[55];\n\tint c[55];\n\tint d[55];\n\tfor(i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%d %d\",&a[i],&b[i]);\n\t}\n\tfor(i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%d %d\",&c[i],&d[i]);\n\t}\n\tfor(i=l;i<=r;i++)\n\t{\n\t\tfor(j=1;j<=p;j++)\n\t\t{\n\t\t\tm=0;\n\t\t\tfor(k=1;k<=q;k++)\n\t\t\t{\n\t\t\t\tif(c[k]+i-1<=b[j]&&d[k]+i-1>=b[j])\n\t\t\t\t{\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(c[k]+i-1<=a[j]&&d[k]+i-1>=a[j])\n\t\t\t\t{\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(c[k]+i-1>=a[j]&&d[k]+i-1<=b[j])\n\t\t\t\t{\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(c[k]+i-1<=a[j]&&d[k]+i-1>=b[j])\n\t\t\t\t{\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(m!=0)\n\t\t\t\t{\n\t\t\t\t\ts++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(m!=0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",s);\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n\tint p,q,l,r,i,j,k,n,m=0,s=0;\n\tscanf(\"%d %d %d %d\\n\",&p,&q,&l,&r);\n\tint a[55];\n\tint b[55];\n\tint c[55];\n\tint d[55];\n\tfor(i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%d %d\",&a[i],&b[i]);\n\t}\n\tfor(i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%d %d\",&c[i],&d[i]);\n\t}\n\tfor(i=l;i<=r;i++)\n\t{\n\t\tfor(j=1;j<=p;j++)\n\t\t{\n\t\t\tm=0;\n\t\t\tfor(k=1;k<=q;k++)\n\t\t\t{\n\t\t\t\tif(c[k]+i<=b[j]&&d[k]+i>=b[j])\n\t\t\t\t{\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(c[k]+i<=a[j]&&d[k]+i>=a[j])\n\t\t\t\t{\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(c[k]+i>=a[j]&&d[k]+i<=b[j])\n\t\t\t\t{\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(c[k]+i<=a[j]&&d[k]+i>=b[j])\n\t\t\t\t{\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(m!=0)\n\t\t\t\t{\n\t\t\t\t\ts++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(m!=0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",s);\n}\n"}
{"similarity_score": 0.9943977591036415, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c4d28d31a405003f329189ee0769ef66", "bug_code_uid": "d18ca9bc55cb643ea3ba10023a2d51c5", "src_uid": "bbf2dbdea6dd3aa45250ab5a86833558", "apr_id": "9f584ceabce90a4289db257753ac3314", "difficulty": 1300, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1000];\n\tscanf(\"%s\",a);\n\tint arr[26],j,n,count=0;\n\tfor(j=0;j<strlen(a);j++)\n        {\n \t\tarr[a[j]-'a']=arr[a[j]-'a']+1;\n        }\n\tfor(j=0;j<26;j++)\n\t{\n\t\tif(arr[j]%2!=0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count==0 || count%2!=0)\n\t{\n\t\tprintf(\"First\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"Second\\n\");\n\t}\n\treturn 0;\n}\n\n\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1000];\n\tscanf(\"%s\",a);\n\tint arr[26]={0},j,n,count=0;\n\tfor(j=0;j<strlen(a);j++)\n        {\n \t\tarr[a[j]-'a']=arr[a[j]-'a']+1;\n        }\n\tfor(j=0;j<26;j++)\n\t{\n\t\tif(arr[j]%2!=0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif(count==0 || count%2!=0)\n\t{\n\t\tprintf(\"First\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"Second\\n\");\n\t}\n\treturn 0;\n}\n\n\t\n"}
{"similarity_score": 0.9984871406959153, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ec9bd30804696f86ffb7263f11e661ed", "bug_code_uid": "76df8fe8e44140f2295f7ff6092d79fd", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "73484441099e157ff8f35ecb34b36a02", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, i, m;\n\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++)\n    {\n        if(i == 0 || i%2 == 0 )\n            printf(\"I hate \");\n        else\n            printf(\"I love \");\n\n        if(i == n-1) \n            break;\n        \n        printf(\"that \");\n    }\n\n    printf(\"it.\");\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, i, m;\n\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++)\n    {\n        if(i == 0 || i%2 == 0 )\n            printf(\"I hate \");\n        else\n            printf(\"I love \");\n\n        if(i == n-1) \n            break;\n        \n        printf(\"that \");\n    }\n\n    printf(\"it\");\n\n    return 0;\n}"}
{"similarity_score": 0.9959967974379503, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c29a99ef48cac49b34df40c8c26b2910", "bug_code_uid": "bcbaead2f1e153672b297cfe3f65c2ad", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "3ed2ac1763bb564e7b87981f086c72af", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n   int main(){\n\t  int i,j,n,s = 0,CASE = 0,max = 1,saat[100011] = {0},a,b,k,l;\n\n\t   scanf(\"%d\",&n);\n\n\t   for(i = 0; i < n; i++)\n\t   {  \n\t\t   scanf(\"%d %d\",&k,&l);\n\t\t   saat[i] = k*100+l;\t   \n\t\t \t   \n\t\t   if(i || n == 1)\t\n\t\t     {\n\t\t\t\t if(saat[i] == saat[i - 1])\n\t\t  \t\t    s++;\n\t\t   \t\t else \n\t\t\t\t\t if(s > max)\n\t\t\t             max = s;\n\t\t\t\t if(i == n-1)\n\t\t\t\t\t if(s > max)\n\t\t\t\t\t\t max = s + 1;\n                \n\t\t         if(saat[i] != saat[i - 1])\n\t\t\t\t\t\t s = 1;\n\t         }\n\t   }\n\t   for(i = 0; i < n; i++)\n\t\t   if(saat[i])\n\t\t\t   CASE = 1;\n\t   \n\t   CASE ? printf(\"%d\",max) : printf(\"%d\",n);\n\n\t   return 0;\n   }\n", "fixed": "#include<stdio.h>\n   int main(){\n\t  int i,j,n,s = 1,CASE = 0,max = 1,saat[100011] = {0},a,b,k,l;\n\n\t   scanf(\"%d\",&n);\n\n\t   for(i = 0; i < n; i++)\n\t   {  \n\t\t   scanf(\"%d %d\",&k,&l);\n\t\t   saat[i] = k*100+l;\t   \n\t\t \t   \n\t\t   if(i || n == 1)\t\n\t\t     {\n\t\t\t\t if(saat[i] == saat[i - 1])\n\t\t  \t\t    s++;\n\t\t   \t\t else \n\t\t\t\t\t if(s > max)\n\t\t\t             max = s;\n\t\t\t\t if(i == n-1)\n\t\t\t\t\t if(s > max)\n\t\t\t\t\t\t max = s ;\n                \n\t\t         if(saat[i] != saat[i - 1])\n\t\t\t\t\t\t s = 1;\n\t         }\n\t   }\n\t   for(i = 0; i < n; i++)\n\t\t   if(saat[i])\n\t\t\t   CASE = 1;\n\t   \n\t   CASE ? printf(\"%d\",max) : printf(\"%d\",n);\n\n\t   return 0;\n   }\n"}
{"similarity_score": 0.9979445015416238, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "853670934e559dc45657e433c97fa5b3", "bug_code_uid": "9235db74f7bec88ea7a31f37df22c1b5", "src_uid": "c1f247150831e9b52389bae697a1ca3d", "apr_id": "56e27a22193194e5211cc19fc8992993", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#define max(a,b) a>b?a:b\n#define min(a,b) a<b?a:b\n#define N 2001\n#define M 2001\ntypedef long long ll;\nchar a[N][M];\nint k, sum = 0,n,m;\n\nvoid findWays()\n{\n    for(int i = 1; i <= n; i++)\n    {\n        int tk = 0;\n        for(int j = 1; j <= m; j++)\n        {\n            if(a[i][j]=='.'){\n                tk++;\n                if(tk>=k)\n                sum++;\n            }else\n                tk = 0;\n        }\n    }\n    if(k==1)\n    return;\n    for(int i = 1; i <= m; i++)\n    {\n        int tk = 0;\n        for(int j = 1; j <= n; j++)\n        {\n            if(a[i][j]=='.'){\n                tk++;\n                if(tk>=k)\n                sum++;\n            }else\n                tk = 0;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= m; j++)\n        scanf(\" %c\",&a[i][j]);\n    }\n    findWays();\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#define max(a,b) a>b?a:b\n#define min(a,b) a<b?a:b\n#define N 2001\n#define M 2001\ntypedef long long ll;\nchar a[N][M];\nint k, sum = 0,n,m;\n\nvoid findWays()\n{\n    for(int i = 1; i <= n; i++)\n    {\n        int tk = 0;\n        for(int j = 1; j <= m; j++)\n        {\n            if(a[i][j]=='.'){\n                tk++;\n                if(tk>=k)\n                sum++;\n            }else\n                tk = 0;\n        }\n    }\n    if(k==1)\n    return;\n    for(int i = 1; i <= m; i++)\n    {\n        int tk = 0;\n        for(int j = 1; j <= n; j++)\n        {\n            if(a[j][i]=='.'){\n                tk++;\n                if(tk>=k)\n                sum++;\n            }else\n                tk = 0;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= m; j++)\n        scanf(\" %c\",&a[i][j]);\n    }\n    findWays();\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.998911860718172, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f91e464d9bb0ef32463f2775019b96e7", "bug_code_uid": "082180a64286f5248f9afbb50602f30f", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "6dbd79e4d8651f2829c20ccb31e0ddb7", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char *argv[]) {\n\tint n,m,k,hole,a,b;\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tint result = 1;\n\tint holes[100001] ={0};\n\tfor (int i = 0; i < m; i++) {\n\t\tscanf(\"%d\",&hole);\n\t\tholes[hole] = 1;\n\t}\n\tif (holes[1] == 1) {\n\t\tprintf(\"1\");\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < k; i++) {\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif (result != a && result != b) continue;\n\t\tresult = (result==a)?b:a;\n\t\tif (holes[result] == 1) break;\n\t}\n\tprintf(\"%d\",result);\n}", "fixed": "#include <stdio.h>\n\nint main(int argc, char *argv[]) {\n\tint n,m,k,hole,a,b;\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tint result = 1;\n\tint holes[1000001] ={0};\n\tfor (int i = 0; i < m; i++) {\n\t\tscanf(\"%d\",&hole);\n\t\tholes[hole] = 1;\n\t}\n\tif (holes[1] == 1) {\n\t\tprintf(\"1\");\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < k; i++) {\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tif (result != a && result != b) continue;\n\t\tresult = (result==a)?b:a;\n\t\tif (holes[result] == 1) break;\n\t}\n\tprintf(\"%d\",result);\n}"}
{"similarity_score": 0.5486725663716814, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9cf2938df1a688c33859cc7f72ef50b3", "bug_code_uid": "6a0a006ca20e2b5bb8af4fb37e3865e1", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "cc5ef40eecb2db1381792fc52bef9dc5", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main () {\r\n\r\n    int k;\r\n    scanf (\"%d\", &k);\r\n\r\n    for (int i = 1; i <= k; i++) {\r\n\r\n        long long n, x, t;\r\n        scanf (\"%lld %lld %lld\", &n, &x, &t);\r\n\r\n        long long f = 0;\r\n        long long finish = x + t;\r\n        for (int j = 1; j <= n; j++) {\r\n\r\n            while (t > x) {\r\n                f++;\r\n                x += x;\r\n            }\r\n            x += x;\r\n            t += x;\r\n\r\n        }\r\n\r\n        printf (\"%lld\", f);\r\n        }\r\n    return 0;\r\n    }", "fixed": "#include <stdio.h>\r\n\r\nint main () {\r\n\r\n    int k;\r\n    scanf (\"%d\", &k);\r\n\r\n    for (int i = 1; i <= k; i++) {\r\n\r\n        long long n, x, t;\r\n        scanf (\"%lld %lld %lld\", &n, &x, &t);\r\n\r\n        long long variable, answer;\r\n        \r\n        variable = t/x;\r\n        \r\n        if (n <= variable) {\r\n            answer = (n-1) * n / 2;\r\n        } else {\r\n            answer = variable * (variable + 1)/2 + (n - variable - 1) * variable;\r\n        }\r\n\r\n        printf (\"%lld\\n\", answer);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9769392033542977, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9c723c0ae2ad27d58ef7a0b34579d5b1", "bug_code_uid": "6287a1c4a01931d4042e4e1c2be17f2a", "src_uid": "1637670255f8bd82a01e2ab20cdcc9aa", "apr_id": "d21729ddbf1f691e5170de6d71a4356a", "difficulty": 1100, "tags": ["data structures", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nmain()\r\n{\r\n\tint t,i,n,j;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n],b[n+1]={0};\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tb[a[j]]=j;\r\n\t\t}\r\n\t\tif(n==1)\r\n\t\t{\r\n\t\t\tprintf(\"1\\n\");continue;\r\n\t\t}\r\n\t\twhile(1)\r\n\t\t{\r\n\t\t\twhile(b[n]==-1)\r\n\t\t\tn--;\r\n\t\t\tfor(int j=b[n];j<n&&b[a[j]]!=-1;j++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\",a[j]);\r\n\t\t\t\tb[a[j]]=-1;\r\n\t\t\t\tif(n!=1)\r\n\t\t\t\tprintf(\" \");\r\n\t\t\t}\r\n\t\t\tif(n<=1)\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\nmain()\r\n{\r\n\tint t,i,n,j;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=0;i<t;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[100000],b[100000+1]={0};\r\n\t\tfor(j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tb[a[j]]=j;\r\n\t\t}\r\n\t\tif(n==1)\r\n\t\t{\r\n\t\t\tprintf(\"1\\n\");continue;\r\n\t\t}\r\n\t\twhile(1)\r\n\t\t{\r\n\t\t\twhile(b[n]==-1)\r\n\t\t\tn--;\r\n\t\t\tfor(int j=b[n];j<n&&b[a[j]]!=-1;j++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\",a[j]);\r\n\t\t\t\tb[a[j]]=-1;\r\n\t\t\t\tif(n!=1)\r\n\t\t\t\tprintf(\" \");\r\n\t\t\t}\r\n\t\t\tif(n<=1)\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9518213866039953, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9259f7de61d447de6cb2220cecee151e", "bug_code_uid": "2f6693ffb28d8b217dbba62dccee5a59", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "422519ad374fd73a298b0d42e1dffed0", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void* a,const void* b)\n{\n\treturn *(int*)a-*(int*)b;\n}\n\nint main()\n{\n\tint n,i,j,c=0;\n\tint a[100009];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tqsort(a,n,4,cmp);\n\tif(n==1||n==2)\n\tprintf(\"%d\",c);\n\telse\n\t{\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]!=a[0])\n\t\t\tbreak;\n\t}\n\tfor(j=n-2;j>=0;j--)\n\t\tif(a[j]!=a[n-1])\n\t\t\tbreak;\nprintf(\"%d\",j+1-i);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void* a,const void* b)\n{\n\treturn *(int*)a-*(int*)b;\n}\n\nint main()\n{\n\tint n,i,j,c=0;\n\tint a[100009];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tqsort(a,n,4,cmp);\n\tif(n==1||n==2)\n\t\tprintf(\"%d\",c);\n\telse\n\t{\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]!=a[0])\n\t\t\tbreak;\n\t}\n\tfor(j=n-2;j>=0;j--)\n\t\tif(a[j]!=a[n-1])\n\t\t\tbreak;\n\tif(j+1-i>=0)\n\t\tprintf(\"%d\",j+1-i);\n\telse\n\t\tprintf(\"%d\",c);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8247863247863247, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "3d159426af39a401007799cbb10671f2", "bug_code_uid": "42d6759e31d978da02e1bab3f607d4a0", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "01fa1e283ae95c8109046a1854694eb2", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int na,nb,k,m,a1[100000],b1[100000],i,j,l,count=0;\n    scanf(\"%I64d %I64d %I64d %I64d\",&na,&nb,&k,&m);\n    for(i=0; i<na; i++){\n        scanf(\"%I64d\",&a1);\n    }\n    for(i=0; i<nb; i++){\n        scanf(\"%I64d\",&b1);\n    }\n    for(j=0; j<m; j++){\n        for(l=0; l<k; l++){\n            if(a1[l]>b1[j]){\n                count++;\n            }\n        }\n    }\n    if(count==0){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int na,nb,k,m,a1[100000],b1[100000],i,j,l,count=0,b;\n    scanf(\"%I64d %I64d %I64d %I64d\",&na,&nb,&k,&m);\n    for(i=0; i<na; i++){\n        scanf(\"%I64d\",&a1[i]);\n    }\n    for(i=0; i<nb; i++){\n        scanf(\"%I64d\",&b1[i]);\n    }\n    if(a1[k-1]>=b1[nb-m]){\n        count++;\n    }\n    if(count==0){\n        printf(\"YES\\n\");\n    }\n    else{\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9858490566037735, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0bd5e31f3a87c4680aecd2ade922038c", "bug_code_uid": "a77e931d9c511593c4ddc3665b1f74c6", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "ecde43777e90ac3277a86f10d9a97db2", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i;\n    scanf(\"%d %d\",&n,&k);\n    char c='a';\n    for(i=1;i<=n;i++)\n    {\n        printf(\"%c\",c);\n        c++;\n        if(i==k)\n            c='a';\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i;\n    scanf(\"%d %d\",&n,&k);\n    char c='a';\n    for(i=1;i<=n;i++)\n    {\n        printf(\"%c\",c);\n        c++;\n        if(i%k==0)\n            c='a';\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9814126394052045, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "bc988bed479f367da1813ca0ccdce462", "bug_code_uid": "ba8251c0f607d7ea59a19130912ea391", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "5bb3e47f45512a5c746b264142597fff", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n  long long int n, a, b;\n  long long int i;\n  scanf(\"%I64d %I64d %I64d\", &n, &a, &b);\n  long int x;\n  long long int res, money;\n  for(i =0;i<n;i++){\n    scanf(\"%ld\", &x);\n    res = ((x*a)%b)/a;  \n    printf(\"%I64d\",res);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n  long long int n, a, b;\n  long long int i;\n  scanf(\"%I64d %I64d %I64d\", &n, &a, &b);\n  long long int x;\n  long long int res, money;\n  for(i =0;i<n;i++){\n    scanf(\"%I64d\", &x);\n    res = ((x*a)%b)/a;  \n    printf(\"%I64d \",res);\n    }\n}"}
{"similarity_score": 0.326271186440678, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "58bca364317ba9f5e45b3d5161da2ceb", "bug_code_uid": "9c7f77913212cd101be0dce298da9edc", "src_uid": "910c0e650d48af22fa51ab05e8123709", "apr_id": "cf4b05840fbfb2f0d7373a8a1ecb600a", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tint n,len,p=0,x,p2,y;\n\tchar s[20],res[20];\n\tscanf(\"%d \", &n);\n\twhile (n--){\n\t\tscanf(\"%s\", s);\n\t\tp2 = 0, p = 0;\n\t\tif (s[0] == 'R'&&s[1] < 58)\n\t\t\twhile (s[p] != 'C'&&s[p]!=0) p++;\n\t\t\n\t\tif (s[p]=='C'&&s[0] == 'R'&&s[1]<='9'){\n\t\t\tp = 1, x = 0,y=456976;\n\t\t\twhile (s[p] != 'C') p++;\n\t\t\tp++;\n\t\t\twhile (p != len){\n\t\t\t\tx *= 10;\n\t\t\t\tx += s[p++] - '0';\n\t\t\t}\n\t\t\twhile (x){\n\t\t\t\tif (x / y){\n\t\t\t\t\tres[p2++] = x / y + 64;\n\t\t\t\t\tx %= y;\n\t\t\t\t}\n\t\t\t\ty /= 26;\n\t\t\t\t\n\t\t\t}\n\t\t\tp = 1;\n\t\t\twhile (s[p]!='C')\n\t\t\t\tres[p2++] = s[p++];\n\t\t\tres[p2] = 0; \n\t\t}\n\t\telse{\n\t\t\tp = 0, y = 0;\n\t\t\tres[p2++] = 'R';\n\t\t\twhile (s[p] > '9') p++;\n\t\t\twhile (s[p]!=0) res[p2++] = s[p++];\n\t\t\tp = 0;\n\t\t\tres[p2++] = 'C';\n\t\t\twhile (s[p] > '9'){\n\t\t\t\ty *= 26;\n\t\t\t\ty += (s[p++] - 64);\n\t\t\t}\n\t\t\tfor (int i = 1000000; i>0;i/=10)\n\t\t\t\tif (y / i) \n\t\t\t\t\tres[p2++] = ((y / i) % 10)+'0';\n\t\t\tres[p2] = 0;\n\t\t}\n\t\tprintf(\"%s\\n\", res);\n\t\tmemset(s, 0, sizeof(s));\n\t\tmemset(res, 0, sizeof(res));\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nvoid go(int x, int y){\n\tif (!x) return;\n\tint k = (x-1)%y;\n\tgo((x-k+1)/26, y);\n\tprintf(\"%c\", k + 65);\n}\nint main(){\n\tint n,p,x,p2,y;\n\tchar s[25];\n\tscanf(\"%d \", &n);\n\twhile (n--){\n\t\tscanf(\"%s\", s);\n\t\tp2 = 0, p = 0;\n\t\tif (s[0] == 'R'&&s[1] < 58)\n\t\t\twhile (s[p] != 'C'&&s[p]!=0) p++;\n\t\t\n\t\tif (s[p]=='C'&&s[0] == 'R'&&s[1]<='9'){\n\t\t\tp = 1, x = 0,y=26;\n\t\t\twhile (s[p] != 'C') p++;\n\t\t\tp++;\n\t\t\twhile (s[p]!=0){\n\t\t\t\tx *= 10;\n\t\t\t\tx += s[p++]-'0';\n\t\t\t}\n\t\t\tgo(x, y);\n\t\t\tp = 1;\n\t\t\twhile (s[p]!='C') printf(\"%c\",s[p++]);\n\t\t}\n\t\telse{\n\t\t\tp = 0, y = 0;\n\t\t\tprintf(\"R\");\n\t\t\twhile (s[p] > '9') p++;\n\t\t\twhile (s[p] != 0) printf(\"%c\", s[p++]);\n\t\t\tp = 0;\n\t\t\tprintf(\"C\");\n\t\t\twhile (s[p] > '9'){\n\t\t\t\ty *= 26;\n\t\t\t\ty += (s[p++] - 64);\n\t\t\t}\n\t\t\tfor (int i = 1000000; i>0;i/=10)\n\t\t\t\tif (y / i) \n\t\t\t\t\tprintf(\"%c\", ((y / i) % 10)+'0');\n\t\t}\n\t\tputs(\"\");\n\t\tmemset(s, 0, sizeof(s));\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9882352941176471, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "caa51bbe6e7a6032edd808c347d25851", "bug_code_uid": "f8644a7513ef47633febda875144d69b", "src_uid": "7d774a003d2e3e8ae6fe1912b3998c96", "apr_id": "40093146566e49dd23fb7bdaa7fc34e7", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n,m;\r\n\t\tscanf(\"%d%d\",&n,&m);\r\n\t\tlong long sum=0;\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tsum=sum+i;\r\n\t\t}\r\n\t\tfor(int i=2;i<=m;i++){\r\n\t\t\tsum=sum+i*n;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",sum);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n,m;\r\n\t\tscanf(\"%d%d\",&n,&m);\r\n\t\tlong long sum=0;\r\n\t\tfor(int i=1;i<=m;i++){\r\n\t\t\tsum=sum+i;\r\n\t\t}\r\n\t\tfor(int i=2;i<=n;i++){\r\n\t\t\tsum=sum+i*m;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",sum);\r\n\t}\r\n}"}
{"similarity_score": 0.9833729216152018, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0aa05ab758239899230b5cdb219dec94", "bug_code_uid": "6ed6cac522cce7ba8c8432cf7d35cc9e", "src_uid": "9bfbd68e61f4d2f3d404fd0413aded35", "apr_id": "62ee529e3727fb2e35866f6625ab33a8", "difficulty": 1600, "tags": ["math", "constructive algorithms", "two pointers", "interactive"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint p[10004];\n\tint x, y;\n\tint res[2];\n\tint i, j;\n\tfor (i = 0; i < n; i++)\n\t\tp[i] = -1;\n\ti = 0;\n\tfor (int a = 0; a < n - 1; a++)\n\t{\n\t\tj = 0;\n\t\twhile (p[j] > 0 || j == i)\n\t\t\tj++;\n\t\tprintf(\"? %d %d\\n\", i + 1, j + 1);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &res[0]);\n\t\tprintf(\"? %d %d\\n\", j + 1, i + 1);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &res[1]);\n\t\tif (res[0] < res[1])\n\t\t\tp[j] = res[1];\n\t\telse\n\t\t{\n\t\t\tp[i] = res[0];\n\t\t\ti++;\n\t\t}\n\t}\n\tfor (i = 0; i < n; i++)\n\t\tif (p[i] < 0)\n\t\t\tp[i] = n;\n\tprintf(\"!\");\n\tfor (i = 0; i < n; i++)\n\t\tprintf(\" %d\", p[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint p[10004];\n\tint x, y;\n\tint res[2];\n\tint i, j;\n\tfor (i = 0; i < n; i++)\n\t\tp[i] = -1;\n\ti = 0;\n\tfor (int a = 0; a < n - 1; a++)\n\t{\n\t\tj = 0;\n\t\twhile (p[j] > 0 || j == i)\n\t\t\tj++;\n\t\tprintf(\"? %d %d\\n\", i + 1, j + 1);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &res[0]);\n\t\tprintf(\"? %d %d\\n\", j + 1, i + 1);\n\t\tfflush(stdout);\n\t\tscanf(\"%d\", &res[1]);\n\t\tif (res[0] < res[1])\n\t\t\tp[j] = res[1];\n\t\telse\n\t\t{\n\t\t\tp[i] = res[0];\n\t\t\twhile (p[i] > 0)\n\t\t\t\ti++;\n\t\t}\n\t}\n\tfor (i = 0; i < n; i++)\n\t\tif (p[i] < 0)\n\t\t\tp[i] = n;\n\tprintf(\"!\");\n\tfor (i = 0; i < n; i++)\n\t\tprintf(\" %d\", p[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.7604994324631101, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "082f88e500f92eb9e94fac2ee3c25f0f", "bug_code_uid": "853e16276a04f451ef9c3abc133e3e29", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "ec09fa75777a0fd53be1beb4b7009a7c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char const *argv[])\n{\n\tint n, c;\n\tscanf(\"%d %d\", &n, &c);\n\tint *num = (int *)malloc(n*sizeof(int));\n\tint j = 0;\n\twhile((scanf(\"%d\", &num[j])) == 1){\n\t\tj++;\n\t\tif(j == n)\n\t\t\tbreak;\n\t}\n\tint count = 0;\n\tfor (int i = 0; i < n - 1; ++i)\n\t{\n\t\tif(i == 0)\n\t\t\tcount++;\n\t\telse{\n\t\t\tif(num[i + 1] - num[i] <= c)\n\t\t\t\tcount++;\n\t\t\telse\n\t\t\t\tcount = 0;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", count + 1);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char const *argv[])\n{\n\tint n, c;\n\tscanf(\"%d %d\", &n, &c);\n\tint *num = (int *)malloc(n*sizeof(int));\n\tint j = 0;\n\twhile((scanf(\"%d\", &num[j])) == 1){\n\t\tj++;\n\t\tif(j == n)\n\t\t\tbreak;\n\t}\n\tint count = 0;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tif(i == 0)\n\t\t\tcount++;\n\t\telse{\n\t\t\tif(num[i] - num[i - 1] <= c)\n\t\t\t\tcount++;\n\t\t\telse\n\t\t\t\tcount = 1;\n\t\t}\n\n\t\t\n\t}\n\n\tprintf(\"%d\\n\", count);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.8875219683655536, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9200505ac7fc2b803c143f771079e737", "bug_code_uid": "e6d0b8717f45efcdd04a03d9c42303fa", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "3cfd9f54f878c0d55dd183d43aad5ac6", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n int functions(int a, int b, int c){\r\n    \r\n     if(a>b && b>c){\r\n        return b;\r\n     }\r\n     else if(c>b && b>a){\r\n        return b;\r\n     }\r\n      else if(a>c && c>b){\r\n        return c;\r\n     }\r\n      else if(b>c && c>a){\r\n        return c;\r\n     }\r\n      else if(c>a && a>b){\r\n        return a;\r\n     }\r\n      else if(b>a && a>c){\r\n        return a;\r\n     }\r\n}\r\nint main(){\r\n    int a;\r\n    int b;\r\n    int c;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n     printf(\" %d\",functions(a,b,c));\r\n    return 0;\r\n     \r\n}", "fixed": "#include<stdio.h>\r\n int functions(int a, int b, int c){\r\n    \r\n     if(a>b && b>c){\r\n        return b;\r\n     }\r\n     else if(c>b && b>a){\r\n        return b;\r\n     }\r\n      else if(a>c && c>b){\r\n        return c;\r\n     }\r\n      else if(b>c && c>a){\r\n        return c;\r\n     }\r\n      else if(c>a && a>b){\r\n        return a;\r\n     }\r\n      else if(b>a && a>c){\r\n        return a;\r\n     }\r\n}\r\nint main(){\r\n    int t; \r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t ; i++){\r\n int a;\r\n    int b;\r\n    int c;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n     printf(\"%d\\n\",functions(a,b,c));\r\n    }\r\n   \r\n    return 0;\r\n     \r\n}"}
{"similarity_score": 0.8379052369077307, "equal_cnt": 18, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 11, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "e277d060c6ffb5901aba1cf05bc1ff50", "bug_code_uid": "dd183bac83f52ae4607f5e84488192d3", "src_uid": "168f2a740d21a3a916a9d560fbcffeb9", "apr_id": "57fe6c829b59bfb1556b349efad06915", "difficulty": 800, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n  int t,n,k,c,a[n],b[n],i=0,res[t];\r\n  scanf(\"%d\",&t);\r\n  for(int z=0;z<t;z++)\r\n  { \r\n    \r\n    scanf(\"%d %d\",&n,&k);\r\n    int h=n;\r\n    c=k;\r\n    for(int x=0;x<n;x++)\r\n    {\r\n      scanf(\"%d\",&a[x]);\r\n    }\r\n    for(int x=0;x<n;x++)\r\n    {\r\n      scanf(\"%d\",&b[x]);\r\n    }\r\n    \r\n    for(int j=0;j<h;j++)\r\n    {\r\n      \r\n      i=0;\r\n      while(i<n)\r\n      {\r\n      if(a[i]<=c)\r\n      {\r\n        \r\n        c=c+b[i];\r\n        for (int l=i;l<n-1;l++)  \r\n        {  \r\n          a[l]=a[l+1];  \r\n          b[l]=b[l+1];\r\n        } \r\n        n--;\r\n        //printf(\"k now is %d\\n\",c);\r\n        \r\n        \r\n      }\r\n      else\r\n      {\r\n        i++;\r\n      }\r\n      }\r\n\r\n      \r\n    }\r\n\r\n    \r\n   printf(\"%d\\n\",c);\r\n  }\r\n  \r\n  return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n  int t;//n,k,c,a[n],b[n],i=0,res[t];\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  { \r\n    int n,k;\r\n    scanf(\"%d %d\",&n,&k);\r\n    //int h=n;\r\n    //c=k;\r\n    int a[n],b[n];\r\n    for(int x=0;x<n;x++)\r\n    {\r\n      scanf(\"%d\",&a[x]);\r\n    }\r\n    for(int x=0;x<n;x++)\r\n    {\r\n      scanf(\"%d\",&b[x]);\r\n    }\r\n    \r\n    for(int j=0;j<n;j++)\r\n    {\r\n      \r\n      //i=0;\r\n      for(int i=0;i<n;i++)\r\n      {\r\n      if(a[i]<=k&&a[i]!=-1)\r\n      {\r\n        k+=b[i];\r\n        //c=c+b[i];\r\n        /*for (int l=i;l<n-1;l++)  \r\n        {  \r\n          a[l]=a[l+1];  \r\n          b[l]=b[l+1];\r\n        } \r\n        n--;*/\r\n        //printf(\"k now is %d\\n\",c);\r\n        a[i]=-1;\r\n        \r\n      }\r\n      /*else\r\n      {\r\n        i++;\r\n      }*/\r\n      }\r\n\r\n      \r\n    }\r\n\r\n    \r\n   printf(\"%d\\n\",k);\r\n  }\r\n  \r\n  return 0;\r\n}"}
{"similarity_score": 0.2901849217638691, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "673811659a43fe7b75d8bc1a1b24e0d1", "bug_code_uid": "3012abd3c879bee6aed52812b722026f", "src_uid": "f79a926e18a3f81b24f2fc3ae5c8f928", "apr_id": "1fe8e9127021d8b0183f204806aeb8cf", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<malloc.h>\n\nint main(){\n\t\n\tint a;\n\t\n\tscanf(\"%d\",&a);\n\t\n\tif(a%4==1){\n\t\tprintf(\"0 A\");\n\t\treturn 0;\n\t}\n\tif(a%4==2){\n\t\tprintf(\"1 B\");\n\t\treturn 0;\n\t}\n\tif(a%4==0){\n\t\tprintf(\"1 A\");\n\t\treturn 0;\n\t}\n\tif(a%4==3){\n\t\tprintf(\"2 A\");\n\t\treturn 0;\n\t}\n\t\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<malloc.h>\n#include<string.h>\n#include<math.h>\n\nint cmp(const void*a, const void*b){\n\treturn *(int*)a-*(int*)b;\n}\n\nvoid sort(int*base,int num,int size){\n\tqsort(base,num,size,cmp);\n}\n\nint main(){\n\t\n\t\n\t\n\tint T;\n\tscanf(\"%d\",&T);\n\tint x[T],n;\n\t\n\tfor(int i=0;i<T;++i){\n\t\tscanf(\"%d %d\",&n,&x[i]);\n\t\t\n\t}\n\t\n\tfor(int i=0;i<T;++i)\n\t\tprintf(\"%d\\n\",2*x[i]);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.8289036544850499, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c4f1c3b31cca39ca5a83d472abbd7acc", "bug_code_uid": "7f7ad8633e338811dd539b7e25100a54", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "182a401c444828860861cb3b0d0f2c4a", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\n    int n,i;\n    scanf(\"%d\",&n);\n\n    int niza[100001];\n\n    for(i=0;i<n;i++)\n\n        scanf(\"%d\",&niza[i]);\n\n    int br=0;\n\n    br+=niza[0];\n\n    for(i=1;i<n;i++)\n\n        {\n            if(niza[i]<niza[i-1])\n\n                {\n                    br+=niza[i-1];\n                    br+=niza[i];\n                }\n            else\n\n                {\n                    br+=(niza[i]-niza[i-1])+1;\n\n                }\n\n\n        }\n\n\n    br+=n;\n\n    printf(\"%d\\n\",br);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\n    int n,i;\n    scanf(\"%d\",&n);\n\n    int niza[100001];\n\n    for(i=0;i<n;i++)\n\n        scanf(\"%d\",&niza[i]);\n\n    int br=0;\n\n    br+=niza[0];\n\n    for(i=1;i<n;i++)\n\n        {\n            if(niza[i]<niza[i-1])\n\n                {\n                    while(niza[i]!=niza[i-1])\n\n                        {\n                            br+=1;\n                            niza[i-1]--;\n                        }\n\n                    br++;\n                }\n            else\n\n                {\n                    br+=(niza[i]-niza[i-1])+1;\n\n                }\n\n\n        }\n\n\n    br+=n;\n\n    printf(\"%d\\n\",br);\n    return 0;\n}\n"}
{"similarity_score": 0.985945945945946, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "22458abee9a2fb5e72f52e5ca7dcce89", "bug_code_uid": "6392628a214e8f8aa1a54ef5c8250562", "src_uid": "fcd88c7b64da4b839cda4273d928429d", "apr_id": "07748cf908d157f06ceba1f019575d91", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define sf scanf\n#define pf printf\nint main(void) {\n\tint x,first,ans1,ans2,ans=0;\n\tsf(\"%d\",&x);\n\tsf(\"%d\",&first);\n\tif(first==1)ans1=1;\n\telse ans1=0;\n\tans2=ans1;\n\tint ans3=ans1;\n\tint k=0;\n\tfor(int i=1;i<x;i++){\n\t    int y;\n\t    sf(\"%d\",&y);\n\t    if(y==0){\n\t        if(k==0)ans3=ans1;\n\t        if(ans1>ans) ans=ans1;\n\t        ans1=0;\n\t        k++;\n\t    }\n\t    else ans1++;\n\t}\n\tif(ans1+ans3>ans) ans=ans1+ans3;\n\tpf(\"%d\",ans);\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#define sf scanf\n#define pf printf\nint main(void) {\n\tint x,first,ans1,ans2,ans=0;\n\tsf(\"%d\",&x);\n\tsf(\"%d\",&first);\n\tif(first==1)ans1=1;\n\telse ans1=0;\n\tans2=ans1;\n\tint ans3=ans1;\n\tint k=0;\n\tfor(int i=1;i<x;i++){\n\t    int y;\n\t    sf(\"%d\",&y);\n\t    if(y==0){\n\t        if(k==0 && first==1 )ans3=ans1;\n\t        if(ans1>ans) ans=ans1;\n\t        ans1=0;\n\t        k++;\n\t    }\n\t    else ans1++;\n\t}\n\tif(ans1+ans3>ans) ans=ans1+ans3;\n\tpf(\"%d\",ans);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6777493606138107, "equal_cnt": 11, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "4679cb187b7e5b0087c291a188a3cd24", "bug_code_uid": "52767be9c85894d2f173eb1b319f8b2c", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "e16d2a196331b5e88231f5f40b5b4282", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<string.h>\n#include<math.h>\n\n\n\n\nmain()\n{\n    //freopen(\"out.txt\", \"r\", stdin);\n\n    int n, m, c = 1, i, t, j, t1, sum = 0;\n\n    scanf(\"%d\", &n);\n    int a[n];\n    for(i = 1; i<=n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        sum = sum + a[i];\n        a[i] = sum;\n    }\n\n    a[0] = 0;\n\n\n    scanf(\"%d\", &m);\n    int q;\n    for(i = 0; i<m; i++)\n    {\n        scanf(\"%d\", &q);\n        for(j = 1; j<=n; j++)\n        {\n            if(q>=a[j-1] && q<=a[j])\n            {\n                printf(\"%d\\n\", j);\n                break;\n            }\n        }\n    }\n\n    /*for(i = 0; i<n; i++)\n        printf(\"%d \", a[i]);*/\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n//#include<string.h>\n#include<math.h>\n\n\n\n\nmain()\n{\n    //freopen(\"out.txt\", \"r\", stdin);\n\n    int n, m, c = 1, i, t, j, t1, sum = 0;\n\n    scanf(\"%d\", &n);\n    int a[n];\n    for(i = 1; i<=n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        sum = sum + a[i];\n        a[i] = sum;\n    }\n\n    a[0] = 0;\n\n\n    scanf(\"%d\", &m);\n    int q;\n    for(i = 0; i<m; i++)\n    {\n        scanf(\"%d\", &q);\n\n        int m, f=1, l = n, index = -1;\n        while(f<=l)\n        {\n            m = (f+l)/2;\n            if(q<=a[m] && q>=a[m-1])\n            {\n                if(q==a[m-1])\n                    index = m - 1;\n                else\n                    index = m;\n                break;\n            }\n            else if(a[m]>q)\n                l = m - 1;\n            else\n                f = m + 1;\n        }\n\n        printf(\"%d\\n\", index);\n    }\n\n    /*for(i = 0; i<n; i++)\n        printf(\"%d \", a[i]);*/\n\n\n\n\n}\n"}
{"similarity_score": 0.966542750929368, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cf98cb095543ebb6949e098391811d2b", "bug_code_uid": "4e975f8e4f4e37d0c25dc6bf0278dee6", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "4c19a1de6b955e4dbde9fe62c8fa9913", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n];\n    int i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    int j;\n    int lmax=1;\n    int c=1;\n    for(i=1;i<n;i++)\n    {\n       if(a[i]>a[i-1])\n       {\n           c++;\n       }\n       else\n       {\n           if(c>lmax)\n           lmax=c;\n           c=1;\n       }\n    }\n    printf(\"%d\",lmax);\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n];\n    int i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    int j;\n    int lmax=1;\n    int c=1;\n    for(i=1;i<n;i++)\n    {\n       if(a[i]>a[i-1])\n       {\n           c++;\n       }\n       else\n       {\n           if(c>lmax)\n           lmax=c;\n           c=1;\n       }\n    }\n    if(c>lmax)\n    lmax=c;\n    printf(\"%d\",lmax);\n}\n"}
{"similarity_score": 0.3734249713631157, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "92adff8562cde758f0e3a4f5cc8cbcd6", "bug_code_uid": "100e617603204d53508b16ddc7ecd1af", "src_uid": "30ad5bdc019fcd8a4e642c90decca58f", "apr_id": "70358371243c7b7cb3cb1d8b76e83763", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int n,i,j;\n        scanf(\"%d\",&n);\n        int a[n],count=0;\n        for(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n        for(i=0;i<n;i++)\n        {\n                for(j=0;j<i;j++)\n                {\n                        if(a[i]==a[j])\n                                break;\n                }\n                if(i==j)\n                        count++;\n        }\n        if(count==n || count==1) printf(\"%d\",count-1);\n        else printf(\"%d\",count);\n        return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n        int a[10001]={0};\n        int n;\n        scanf(\"%d\",&n);\n        int i,b;\n        for(i=0;i<n;i++)\n        {\n                scanf(\"%d\",&b);\n                a[b]++;\n        }\n        int max=0;\n        for(i=0;i<10001;i++)\n        {if(a[i]>max)max=a[i];\n        }\n        printf(\"%d\\n\",n-max);\n        return 0;\n}\n"}
{"similarity_score": 0.9812550937245313, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "3077f98edaae0a97428c3374b6207303", "bug_code_uid": "e70b062670f10c43dc81ba3818f4fbc7", "src_uid": "fd94aea7ca077ee2806653d22d006fb1", "apr_id": "a3abc9988d329e2ecdf69dc2259877b8", "difficulty": 1700, "tags": ["dp", "hashing", "string suffix structures", "binary search", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// Author: Ernesto Carvajal Lastres. Madrid, Spain.\n#include <stdio.h>\n#include <string.h>\n#define maxn 1000002\n\nchar s[maxn]; int pre[maxn]; bool mark[maxn];\n\nint main()\n{\n    gets(s + 1);\n    int len = strlen(s + 1) + 1;\n    int j = 0;\n    for (int i = 2; i < len; i++)\n    {\n        while (j > 0 && s[j + 1] != s[i]) j = pre[j];\n        if (s[j + 1] == s[i]) j++;\n        pre[i] = j;\n    }\n    for (int i = 1; i < len - 1; i++) mark[pre[i]] = true;\n    int slen = pre[len - 1];\n    while (slen > 0 && !mark[slen]) slen = pre[slen];\n    s[slen + 1] = 0;\n    puts(slen > 0 ? s + 1 : \"Just a legend\");\n    return 0;\n}\n", "fixed": "// Author: Ernesto Carvajal Lastres. Madrid, Spain.\n#include <stdio.h>\n#include <string.h>\n#define maxn 1000002\n\nchar s[maxn]; int pre[maxn]; int mark[maxn];\n\nint main()\n{\n    gets(s + 1);\n    int len = strlen(s + 1) + 1;\n    int j = 0, i;\n    for (i = 2; i < len; i++)\n    {\n        while (j > 0 && s[j + 1] != s[i]) j = pre[j];\n        if (s[j + 1] == s[i]) j++;\n        pre[i] = j;\n    }\n    for (i = 1; i < len - 1; i++) mark[pre[i]] = 1;\n    int slen = pre[len - 1];\n    while (slen > 0 && !mark[slen]) slen = pre[slen];\n    s[slen + 1] = 0;\n    puts(slen > 0 ? s + 1 : \"Just a legend\");\n    return 0;\n}\n"}
{"similarity_score": 0.996996996996997, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "70e965195c4127f76646ae87fa2c815d", "bug_code_uid": "713b5a8a7d1318d7fae9d00bf15bc380", "src_uid": "a6b6d9ff2ac5c367c00a64a387cc9e36", "apr_id": "9df48b9125cf7850c5407f845b746fe7", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tint testcases;\r\n\tint n;\r\n\tint q,r;\r\n\tint ans;\r\n\tscanf(\"%d\",&testcases);\r\n\twhile(testcases--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tq=n/6;\r\n\t\tr=n%6;\r\n\t\tans=q*14;\r\n\t\tif(n>6){\r\n\t\t\tif(r==0){\r\n\t\t\t\tans+=0;\r\n\t\t\t}\r\n\t\t\telse if(r==1){\r\n\t\t\t\tans+=1;\r\n\t\t\t}\r\n\t\t\telse if(r==2){\r\n\t\t\t\tans+=4;\r\n\t\t\t}\r\n\t\t\telse if(r==3){\r\n\t\t\t\tans+=7;\r\n\t\t\t}\r\n\t\t\telse if(r==4){\r\n\t\t\t\tans+=10;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tans+=11;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(n==1){\r\n\t\t\t\tans=1;\r\n\t\t\t}\r\n\t\t\telse if(n==2){\r\n\t\t\t\tans=4;\r\n\t\t\t}\r\n\t\t\telse if(n==3){\r\n\t\t\t\tans=7;\r\n\t\t\t}\r\n\t\t\telse if(n==4){\r\n\t\t\t\tans=10;\r\n\t\t\t}\r\n\t\t\telse if(n==5){\r\n\t\t\t\tans=11;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tans=14;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tint testcases;\r\n\tint n;\r\n\tint q,r;\r\n\tint ans;\r\n\tscanf(\"%d\",&testcases);\r\n\twhile(testcases--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tq=n/6;\r\n\t\tr=n%6;\r\n\t\tans=q*16;\r\n\t\tif(n>6){\r\n\t\t\tif(r==0){\r\n\t\t\t\tans+=0;\r\n\t\t\t}\r\n\t\t\telse if(r==1){\r\n\t\t\t\tans+=1;\r\n\t\t\t}\r\n\t\t\telse if(r==2){\r\n\t\t\t\tans+=4;\r\n\t\t\t}\r\n\t\t\telse if(r==3){\r\n\t\t\t\tans+=7;\r\n\t\t\t}\r\n\t\t\telse if(r==4){\r\n\t\t\t\tans+=10;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tans+=11;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(n==1){\r\n\t\t\t\tans=1;\r\n\t\t\t}\r\n\t\t\telse if(n==2){\r\n\t\t\t\tans=4;\r\n\t\t\t}\r\n\t\t\telse if(n==3){\r\n\t\t\t\tans=7;\r\n\t\t\t}\r\n\t\t\telse if(n==4){\r\n\t\t\t\tans=10;\r\n\t\t\t}\r\n\t\t\telse if(n==5){\r\n\t\t\t\tans=11;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tans=16;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n}"}
{"similarity_score": 0.5852417302798982, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "3ae28a3de29d550995d67ac72ae8b606", "bug_code_uid": "a653cf8632e453bde09a7956990fd0dd", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "d6e7588189ccc5962ba6854a79d92414", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i = 1;i <= t;i++)\n    {\n        int a,b,c,d;\n        long long int s,l;\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        s = b;\n        l = b;\n        while(s < a)\n        {\n            if(c > d)\n            {\n               s += c - d;\n               l += c;\n            }\n            else\n            {\n                l = -1;\n                break;\n            }\n        }\n        printf(\"%lld\\n\",l);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i = 1; i <= t; i++)\n    {\n        int a,b,c,d;\n        long long int s,l,m,f;\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        s = a - b;\n        l = b;\n        m = c - d;\n        if(b < a)\n        {\n            if(c > d)\n            {\n                if(s % m != 0)\n                {\n                    f = (s / m) + 1;\n                }\n                else\n                {\n                    f = s / m;\n                }\n                l = b + (f * c);\n            }\n            else\n            {\n                l = -1;\n            }\n\n        }\n        printf(\"%lld\\n\",l);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9938080495356038, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a777da35b075a2c562ea5af45ea42ffd", "bug_code_uid": "d323e4c4045895f7220e1825597c1d58", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "36d2ea552013ff1b411e8cbf380ab273", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint min(int x,int y){\n\tif(y<x)\n\treturn y;\n\treturn x;\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar c[1000];\n\tscanf(\"%s\",c);\n\tint dem1=0,dem0=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(c[i]=='1')\n\t\tdem1++;\n\t\telse if(c[i]=='0')\n\t\tdem0++;\n\t}\n\tint m=min(dem0,dem1);\n\tprintf(\"%d\",n-m*2);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint min(int x,int y){\n\tif(y<x)\n\treturn y;\n\treturn x;\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tchar c[900000];\n\tscanf(\"%s\",c);\n\tint dem1=0,dem0=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(c[i]=='1')\n\t\tdem1++;\n\t\telse if(c[i]=='0')\n\t\tdem0++;\n\t}\n\tint m=min(dem0,dem1);\n\tprintf(\"%d\",n-m*2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9934640522875817, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "002470b70c2e19c480b33a13c6b0e702", "bug_code_uid": "644fef817cd81621a6efc918835ef368", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "7b45be4562a7fa7eb543b264c9f84f2c", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char ch1[100000],ch2[100000];\n    int a,b;\n    scanf(\"%s%s\",ch1,ch2);\n    a=strlen(ch1);\n    b=strlen(ch2);\n    if(a!=b)printf(\"%d\",(a>b)?a:b);\n    else\n    {\n        if(!strcmp(ch1,ch2))printf(\"-1\");\n        else printf(\"%d\",a);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char ch1[100001],ch2[100001];\n    int a,b;\n    scanf(\"%s%s\",ch1,ch2);\n    a=strlen(ch1);\n    b=strlen(ch2);\n    if(a!=b)printf(\"%d\",(a>b)?a:b);\n    else\n    {\n        if(!strcmp(ch1,ch2))printf(\"-1\");\n        else printf(\"%d\",a);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8753709198813057, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "5281022f80c18c88dacdaf4e21cf84ea", "bug_code_uid": "1cdb02930c09a2b643d83af9af561109", "src_uid": "ecd9bbc05b97f3cd43017dd0eddd014d", "apr_id": "1dd07707510c8f05bbcc91bb026b45de", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,max=0,num,i,start=0,end=0;\n\tscanf(\"%I64d\",&n);\n\tlong long int a[n];\n\tlong long int arr[10000][3];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tarr[a[i]][0]++;\n\t\tif(arr[a[i]][0]==1)\n\t\t{\n\t\t\tarr[a[i]][1]=i;\n\t\t\tarr[a[i]][2]=i;\n\t\t}\n\t\tarr[a[i]][2]=i;\n\t\tif(arr[a[i]][0]>max)\n\t\t{\n\t\t\tmax=arr[a[i]][0];\n\t\t\tstart=arr[a[i]][1];\n\t\t\tend=arr[a[i]][2];\n\t\t}\n\t\tif(arr[a[i]][0]==max)\n\t\t{\n\t\t\tif(arr[a[i]][2]-arr[a[i]][1]<end-start)\n\t\t\t{\n\t\t\t\tstart=arr[a[i]][1];\n\t\t\t\tend=arr[a[i]][2];\n\t\t\t}\n\t\t}\n\t}\n\tstart++;\n\tend++;\n\tprintf(\"%I64d %I64d\",start,end);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,max=0,num,i,start=0,end=0;\n\tscanf(\"%I64d\",&n);\n\tlong long int a[n];\n\tlong long int arr[1000001][3]={0};\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tarr[a[i]][0]++;\n\t\tif(arr[a[i]][0]==1)\n\t\t{\n\t\t\tarr[a[i]][1]=i;\n\t\t\tarr[a[i]][2]=i;\n\t\t}\n\t\tarr[a[i]][2]=i;\n\t\tif(arr[a[i]][0]>max)\n\t\t{\n\t\t\tmax=arr[a[i]][0];\n\t\t\tstart=arr[a[i]][1];\n\t\t\tend=arr[a[i]][2];\n\t\t}\n\t\tif(arr[a[i]][0]==max)\n\t\t{\n\t\t\tif(arr[a[i]][2]-arr[a[i]][1]<end-start)\n\t\t\t{\n\t\t\t\tstart=arr[a[i]][1];\n\t\t\t\tend=arr[a[i]][2];\n\t\t\t}\n\t\t\tif(arr[a[i]][2]-arr[a[i]][1]==end-start)\n\t\t\t{\n\t\t\t\tif(arr[a[i]][2]+arr[a[i]][1]<end+start)\n\t\t\t\t{\n\t\t\t\t\tstart=arr[a[i]][1];\n\t\t\t\t\tend=arr[a[i]][2];\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstart++;\n\tend++;\n\tprintf(\"%I64d %I64d\",start,end);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9485981308411215, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "27edfced00cd5fc5ef51858e96c47d16", "bug_code_uid": "9358cbcac07350c81aa743ee19cbb8b4", "src_uid": "91be5db48b44a44adff4c809ffbb8e3e", "apr_id": "a4c3d99ea761c37a3fe865c04d5fc94f", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\ndouble s;\nint n,c,i,a,b,max=-1,d;\nscanf(\"%d%d\",&n,&c);\nfor(i=1;i<=n;i++)\n{\nscanf(\"%d%d\",&a,&b);\ns=a+(b/100.0);\nif(c>=s&&b!=0)\n{\nd=100-b;\nif(d>=max)\nmax=d;\n}\n}\nprintf(\"%d\",max);\n}", "fixed": "#include<stdio.h>\nint main()\n{\ndouble s;\nint n,c,i,a,b,max=-1,d;\nscanf(\"%d%d\",&n,&c);\nfor(i=1;i<=n;i++)\n{\nscanf(\"%d%d\",&a,&b);\ns=a+(b/100.0);\nif(c>=s)\n{\nd=100-b;\nif(d==100)\nd=0;\nif(d>=max)\nmax=d;\n}\n}\nprintf(\"%d\",max);\n}"}
{"similarity_score": 0.8760683760683761, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "254b8a8f483365538fdb1309540d98bb", "bug_code_uid": "252d3df8dbf04ae81def35c8084a85d1", "src_uid": "926ec28d1c80e7cbe0bb6d209e664f48", "apr_id": "3f2ba489c86669b57fb7096d0b53ebf4", "difficulty": 1500, "tags": ["data structures", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nlong long int aray[200004], ans[200001];\nlong long int comp(const void *a, const void *b)\n{\n    return (*(long long int*)a - *(long long int*)b);\n}\nint main()\n{\n    long long int i, j, k, n, q, a, b, sum=0, mx=0;\n    scanf(\"%lld %lld\", &n, &q);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\", &aray[i]);\n    }\n    for(i=0;i<q;i++){\n        scanf(\"%lld %lld\", &a, &b);\n        for(j=a-1;j<b;j++){\n            ans[j]++;\n        }\n        if(mx<b){\n            mx=b;\n        }\n    }\n    qsort(aray,n,sizeof(long long int),comp);\n    qsort(ans,mx,sizeof(long long int),comp);\n    for(i=0;i<mx;i++){\n        sum+=(ans[i]*aray[i]);\n    }\n    printf(\"%lld\", sum);\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nlong long int aray[200004], ans[200001];\nlong long int comp(const void *a, const void *b)\n{\n    return (*(long long int*)a - *(long long int*)b);\n}\nint main()\n{\n    long long int i, j, k, n, q, a, b, sum=0, mx=0;\n    scanf(\"%lld %lld\", &n, &q);\n    for(i=0;i<n;i++){\n        scanf(\"%lld\", &aray[i]);\n    }\n    for(i=0;i<q;i++){\n        scanf(\"%lld %lld\", &a, &b);\n        ans[a-1]++;\n        ans[b]--;\n    }\n    for(i=1;i<n;i++){\n        ans[i]+=ans[i-1];\n    }\n    qsort(aray,n,sizeof(long long int),comp);\n    qsort(ans,n,sizeof(long long int),comp);\n\n    for(i=0;i<n;i++){\n        sum+=(aray[i]*ans[i]);\n\n    }\n    printf(\"%lld\", sum);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.14300306435137897, "equal_cnt": 11, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "773212e12df7b425ecfdae5d3c6d97c2", "bug_code_uid": "87e01a3fbb7482211612cdb3a003be91", "src_uid": "2535fc09ce74b829c26e1ebfc1ee17c6", "apr_id": "02e6b3c093efa03228ab4fb64db0b0a7", "difficulty": 1500, "tags": ["data structures", "greedy", "trees"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": " \n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define MAXN 300005\n#define ll long long\nusing namespace std;\nint n,m,num,z,cnt,aw,ans;\nint a[MAXN];\nstring s;\n\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=2*n;i++)\n    {\n    \tcin>>s;\n    \tif(s[0]=='a') scanf(\"%d\",&a[++cnt]);\n    \telse\n    \t{\n    \t\tz++;\n    \t\tif(a[cnt]!=z&&cnt>num)\n    \t\t{\n    \t\t\tans++;\n    \t\t\tnum=cnt-1;\n    \t\t}\n\t\t\tcnt--;\n    \t\tnum=min(num,cnt);\n    \t}//234546\n    }//123456\n    cout<<ans;\n    return 0;\n}", "fixed": " \n#include<stdio.h>\n#include<string.h>\n\nint count=0,sum=0,in=0,out=1;\nint a[300000+5];\n\nvoid add(int add)\n{\n\ta[++in]=add;\n\tsum++;\n}\n\nvoid removee()\n{\n\tif(in==0)\n\t{out++;}\n\telse if(a[in]!=out)\n\t{count++;in=0;out++;}\n\telse if(a[in]==out)\n\t{in--;out++;}\n}\n\nint main()\n\n{\n\tint n;\n    int i,j;\n\tchar k[6];\n    \n\tscanf(\"%d\",&n);\n\n\tfor(i=1;i<=2*n;i++)\n\t{\n\t\tscanf(\"%s\",k);\n\t\tif(k[0]=='a')\n\t\t{\n\t\t\tscanf(\"%d\",&j);\n\t\t\tadd(j);\n\t\t}\n\t\telse\n\t\t{removee();}\n\t}\n\n\tprintf(\"%d\",count);\n\treturn 0;\n\n}"}
{"similarity_score": 0.1917808219178082, "equal_cnt": 9, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "e57d97443f7663219791176be08f70a6", "bug_code_uid": "c8c63fe6f0367c8732c1f27ce368141e", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "109caae89a6cbc1cded3ae5722fd290b", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char d[10001][33],temp[33];\n    int a[100001];\n    int n,i,b,s,j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tb=0;\n\t\tgets(temp);\n\t\tfor(j=0;j<s;j++)\n        {\n\t\t\tif(strcmp(temp,d[j])==0)\n            {\n\t\t\t\tb=1;\n\t\t\t\ta[j]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(b)\n            printf(\"%s%d\\n\",d[j],a[j]);\n\t\telse\n\t\t{\n\t\t\tstrcpy(d[j],temp);\n\t\t\ts++;\n\t\t\tputs(\"OK\");\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n\tint n,i,j,s=0;\n\tscanf(\"%d\\n\",&n);\n\tint b[n+1];\n\tchar a[n][33],c[33];\n\tfor(i=0;i<n;i++)\n\t    b[i]=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tgets(c);\n\t\tfor(j=0;j<s;j++)\n\t\t{\n\t\t\tif(strcmp(c,a[j])==0)\n\t\t\tbreak;\n\t\t}\n\t\tif(j==s)\n\t\t{\n\t\t    printf(\"OK\\n\");\n\t\t    strcpy(a[s++],c);\n        }\n\t\telse\n\t\t{\n\t\t\tb[j]++;\n\t\t\tprintf(\"%s%d\\n\",c,b[j]);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9929245283018868, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b92e98764d53a76eb17022cbf0f3842f", "bug_code_uid": "9c2f4dc49c28024a157ae9c8cb5218d1", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "4bb8995a5ac998e69a00f8437ecc1701", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int tes,i,b=0,c=0,d=0;\n    int a;\n    scanf(\"%I64d\",&tes);\n    for(i=0;i<tes;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a==1)\n        b++;\n        else if(a==2)\n        c++;\n        else\n        d++;\n    }\n    if(b>=c && b>=d)\n    printf(\"%I64d\\n\",c+d);\n    else if(c>=b && c>=d)\n    printf(\"%I64d\\n\",b+d);\n    else if(d>=b && d>=c)\n    printf(\"%I64d\\n\",c+d);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int tes,i,b=0,c=0,d=0;\n    int a;\n    scanf(\"%I64d\",&tes);\n    for(i=0;i<tes;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a==1)\n        b++;\n        else if(a==2)\n        c++;\n        else\n        d++;\n    }\n    if(b>=c && b>=d)\n    printf(\"%I64d\\n\",c+d);\n    else if(c>=b && c>=d)\n    printf(\"%I64d\\n\",b+d);\n    else if(d>=b && d>=c)\n    printf(\"%I64d\\n\",b+c);\n    return 0;\n}\n"}
{"similarity_score": 0.9548229548229549, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "6e51dcabf76c34033809e7d51d5e26f8", "bug_code_uid": "bc1e86fecfffac9a15b1f761811508a3", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "6aa37380869466d87f281be3c82edbed", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "lude <stdio.h>\nint main()\n{\n    int a,i;\n    scanf(\"%d\",&a);\n    char bha[a],c,d;\n\n    scanf(\"%s\",bha);\n    for(i=1;i<a;i+=2)\n    {\n        c=bha[i];\n        d=bha[i-1];\n        if(c==d)\n        {\n            if(d=='a')\n            {\n                bha[i-1]='b';\n            }\n            else\n            {\n                bha[i-1]='a';\n            }\n        }\n    }\n    printf(\"%s\",bha);\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\n    int a,i,e=0;\n    scanf(\"%d\",&a);\n    char bha[a],c,d;\n\n    scanf(\"%s\",bha);\n    for(i=1;i<a;i+=2)\n    {\n        c=bha[i];\n        d=bha[i-1];\n        if(c==d)\n        {\n            e++;\n            if(d=='a')\n            {\n                bha[i-1]='b';\n            }\n            else\n            {\n                bha[i-1]='a';\n            }\n        }\n    }\n    printf(\"%d\\n%s\",e,bha);\n}\n\n"}
{"similarity_score": 0.994328922495274, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4ab11ebbed423b7e9677847bb2c94353", "bug_code_uid": "918329ac8eddacc5a665ef2741b18659", "src_uid": "f4bb0b8f285b0c8cbaf469964505cc56", "apr_id": "a227b743608c9f2b4c3853ace551fb72", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tint array[100005] = {}, ifDouble = 0, Ands[100005] = {};\n\tfor (int i = 0; i < n; i++) {\n\t\tint tmp;\n\t\tscanf(\"%d\", &tmp);\n\t\tarray[tmp]++;\n\t\tif (array[tmp] > 1)\n\t\t\tifDouble = 1;\n\t}\n\n\tif (ifDouble)\n\t\tprintf(\"0\");\n\telse {\n\t\tint ans = 0;\n\t\tfor (int i = 1; i < 100001; i++) {\n\t\t\tint and = i & m;\n\t\t\tif (array[i] && and != i) {\n\t\t\t\tAnds[and]++;\n\t\t\t\tif (array[and])\n\t\t\t\t\tans = 1;\n\t\t\t\telse if (Ands[and] > 1 && ans == 0)\n\t\t\t\t\tans = 2;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\", ans);\n\t}\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tint array[100005] = {}, ifDouble = 0, Ands[100005] = {};\n\tfor (int i = 0; i < n; i++) {\n\t\tint tmp;\n\t\tscanf(\"%d\", &tmp);\n\t\tarray[tmp]++;\n\t\tif (array[tmp] > 1)\n\t\t\tifDouble = 1;\n\t}\n\n\tif (ifDouble)\n\t\tprintf(\"0\");\n\telse {\n\t\tint ans = -1;\n\t\tfor (int i = 1; i < 100001; i++) {\n\t\t\tint and = i & m;\n\t\t\tif (array[i] && and != i) {\n\t\t\t\tAnds[and]++;\n\t\t\t\tif (array[and])\n\t\t\t\t\tans = 1;\n\t\t\t\telse if (Ands[and] > 1 && ans == -1)\n\t\t\t\t\tans = 2;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\", ans);\n\t}\n}"}
{"similarity_score": 0.8056112224448898, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8b72cd71d49b9e483168c8172fcc578d", "bug_code_uid": "a1ff84756d1efe260264ae21d6033379", "src_uid": "4c387ab2a0d028141634ade32ae97d03", "apr_id": "0d8205645019569c6ebba82087c16c6b", "difficulty": 1300, "tags": ["constructive algorithms", "graphs", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint sum1=0,sum2=0,mid,i;\n\tif(n%2==0)\n\t\tmid=n/2;\n\telse\n\t\tmid=(n+1)/2;\n\tint arr[mid],k=0;\n\tif(n%4==0)\n\t{\t\n\t\tfor(i=1;i<=mid;i++)\n\t\t{\n\t\t\tif(i%2==1)\n\t\t\t{\n\t\t\t\tsum1+=n+1;\n\t\t\t\tarr[k++]=i;\n\t\t\t\tarr[k++]=n-i+1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tsum2+=n+1;\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor(i=1;i<mid;i++)\n\t\t{\n\t\t\tif(i%2==1)\n\t\t\t{\n\t\t\t\tsum1+=n+1;\n\t\t\t\tarr[k++]=i;\n\t\t\t\tarr[k++]=n-i+1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tsum2+=n+1;\n\t\t}\n\t\tif(k!=mid)\n\t\t\tarr[k++]=mid;\n\t\tif(n%2==0)\n\t\t{\n\t\t\tsum1+=mid;\n\t\t\tsum2+=mid+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(sum1>sum2)\n\t\t\t\tsum2+=mid;\n\t\t\telse\n\t\t\t\tsum1+=mid;\n\t\t}\n\t}\n\tif(n==3)\n\t{\n\t\tprintf(\"0\\n\");\n\t\tprintf(\"2 1 2\\n\");\n\t}\n\telse{\n\tint diff=(sum1-sum2)>=0?sum1-sum2:sum2-sum1;\n\tprintf(\"%d\\n\",diff);\n\tprintf(\"%d \",mid);\n\tfor(i=0;i<k;i++)\n\t\tprintf(\"%d \",arr[i]);\n\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint sum1=0,sum2=0,mid,i;\n\tif(n%2==0)\n\t\tmid=n/2;\n\telse\n\t\tmid=(n+1)/2;\n\tint arr[mid],k=0;\n\tif(n%4==0)\n\t{\t\n\t\tfor(i=1;i<=mid;i++)\n\t\t{\n\t\t\tif(i%2==1)\n\t\t\t{\n\t\t\t\tsum1+=n+1;\n\t\t\t\tarr[k++]=i;\n\t\t\t\tarr[k++]=n-i+1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tsum2+=n+1;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(n%2==0 || n==1){\n\t\tfor(i=1;i<mid;i++)\n\t\t{\n\t\t\tif(i%2==1)\n\t\t\t{\n\t\t\t\tsum1+=n+1;\n\t\t\t\tarr[k++]=i;\n\t\t\t\tarr[k++]=n-i+1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tsum2+=n+1;\n\t\t}\n\t\tif(k!=mid)\n\t\t\tarr[k++]=mid;\n\t\tif(n%2==0)\n\t\t{\n\t\t\tsum1+=mid;\n\t\t\tsum2+=mid+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(sum1>sum2)\n\t\t\t\tsum2+=mid;\n\t\t\telse\n\t\t\t\tsum1+=mid;\n\t\t}}\n\t\telse\n\t\t{\n\t\t\tsum1+=3;\n\t\t\tsum2+=3;\n\t\t\tarr[k++]=1;\n\t\t\tarr[k++]=2;\n\t\t\tint y;\n\t\t\tif(((n-3)/2)%2==1)\n\t\t\t{\n\t\t\t\t y=3+(n-3)/2;\n\t\t\t}\n\t\t\telse\n\t\t\t\ty=4+(n-3)/2;\n\t\t\tfor(i=4;i<y;i++)\n\t\t\t{\n\t\t\t\tif(i%2==0)\n\t\t\t\t{\n\t\t\t\t\tsum1+=n+4;\n\t\t\t\t\tarr[k++]=i;\n\t\t\t\t\tarr[k++]=n-i+4;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsum2+=n+4;\n\t\t\t}\n\n\t\t\t\n\t\t\tif(((n-3)/2)%2==1)\n\t\t\t{\n\t\t\t\tsum1+=1;\n\t\t\t\tarr[k++]=(n+4)/2;\n\t\t\t}\n\n\n\t\t}\n\n\t}\n\tif(n==3)\n\t{\n\t\tprintf(\"0\\n\");\n\t\tprintf(\"2 1 2\\n\");\n\t}\n\telse{\n\tint diff=(sum1-sum2)>=0?sum1-sum2:sum2-sum1;\n\tprintf(\"%d\\n\",diff);\n\tprintf(\"%d \",mid);\n\tfor(i=0;i<k;i++)\n\t\tprintf(\"%d \",arr[i]);\n\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9784172661870504, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0fc7b27ca8104b4534eba439c4d666d9", "bug_code_uid": "74c2a893ea87b581bb12a843b3b6a90a", "src_uid": "8d911f79dde31f2c6f62e73b925e6996", "apr_id": "63c813b6d81119fb1e0a4512d94940fc", "difficulty": 900, "tags": ["dfs and similar", "trees", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint emp[2000],n,i,j,c,res;\n\nint main(){\n\t\n\t//printf(\"donnez le nombre des employ\u00e9es : \\n\");\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=1;i<=n;i++){\n\t//printf(\"L' employ\u00e9 %d : \\n\",i);\n\tscanf(\"%d\",&emp[i]);\n\t}\n\t\n\t\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=i,c=0;j!=-1;j=emp[j],c++);\n\t\tif(res<c) \n\t\t{   res=c; }\n\t}\n\tprintf(\"il y'a %d Niveaux\",res);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n\nint emp[2000],n,i,j,c,res;\n\nint main(){\n\t\n\t//printf(\"donnez le nombre des employ\u00e9es : \\n\");\n\tscanf(\"%d\",&n);\n\t\n\tfor(i=1;i<=n;i++){\n\t//printf(\"L' employ\u00e9 %d : \\n\",i);\n\tscanf(\"%d\",&emp[i]);\n\t}\n\t\n\t\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=i,c=0;j!=-1;j=emp[j],c++);\n\t\tif(res<c) \n\t\t{   res=c; }\n\t}\n\tprintf(\"%d\",res);\n}"}
{"similarity_score": 0.649379932356257, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "4f0198d2d916aff203985672d3d8c90c", "bug_code_uid": "f9254ed88377e682782d86b1995bdc32", "src_uid": "e65b2a81689bb13b90a02a9ccf1d4125", "apr_id": "05fd6a59b3843afd0d705d3141a5a0de", "difficulty": 1100, "tags": ["binary search", "ternary search", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int t;\n scanf(\"%d\",&t);\n while(t--)\n {\n     int n,d,ans;\n     scanf(\"%d %d\",&n,&d);\n     if(d<=n)\n        printf(\"YES\\n\");\n     else if(d>n)\n     {\n        ans=d/n;\n        if(ans>1)\n        {\n            ans=(d/(d/n+1))+1;\n            if(ans>=n)\n            printf(\"YES\\n\");\n         else\n             printf(\"NO\\n\");\n        }\n     else\n     {\n        ans=d/n+(d/(d/n+1))+1;\n\n         if(ans>=n)\n            printf(\"YES\\n\");\n         else\n             printf(\"NO\\n\");\n     }\n\n     }\n }\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n int t;\n scanf(\"%d\",&t);\n while(t--)\n {\n     int n,d;\n     double ans;\n     scanf(\"%d %d\",&n,&d);\n     if(d<=n)\n        printf(\"YES\\n\");\n     else\n     {\n         ans=(n-1)/2;\n        ans=ans+(d/(ans+1));\n        if(ans<=n)\n        printf(\"YES\\n\");\n            else\n             printf(\"NO\\n\");\n\n     }\n }\n   return 0;\n}\n"}
{"similarity_score": 0.3705616526791478, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "e905c465f036dfe115e02f508be2c52e", "bug_code_uid": "0f480d7f02f707866b5d959f66922e73", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "fdc8672272322f7cc9880808dccf012e", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a[100000],b[100000],c[100000],i,j,k,q=0,m=0,p;\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor (j=0;j<n-1;j++)\n\t{\n\t\tscanf(\"%d\",&b[j]);\n\t}\n\tfor (k=0;k<n-2;k++)\n\t{ \n\t\tscanf(\"%d\",&c[k]);\n\t}\n\tfor (i=0;i<n;i++)\n\t{\n\t\tfor (j=0;j<n-1;j++)\n\t\t{\n\t\t\tif (a[i]==b[j])\n\t\t\t{\n\t\t\t\tq=0;\n\t\t\t\tb[j]=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tq=1;\n\t\t\t}\n\t\t}\n\t\tif (q==1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",a[i]);\n\t\t\ta[i]=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (i=0;i<n;i++)\n\t{\n\t\tfor (j=0;j<n-2;j++)\n\t\t{\n\t\t\tif (a[i]==c[j])\n\t\t\t{\n\t\t\t\tm=0;\n\t\t\t\tc[j]=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tm=1;\n\t\t\t}\n\t\t}\n\t\tif (m==1 && a[i]!=0)\n\t\t{\n\t\t\tprintf(\"%d\\n\",a[i]);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,a[100000],b[100000],c[100000],i,j,k,m=0,p=0;\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor (j=0;j<n-1;j++)\n\t{\n\t\tscanf(\"%d\",&b[j]);\n\t}\n\tfor (k=0;k<n-2;k++)\n\t{\n\t\tscanf(\"%d\",&c[k]);\n\t}\n    qsort(a,n,sizeof(int),compare);\n    qsort(b,n-1,sizeof(int),compare);\n    qsort(c,n-2,sizeof(int),compare);\n    for (i=0;i<n-1;i++)\n    {\n        if (a[i]!=b[i])\n        {\n            m=1;\n            break;\n        }\n    }\n    if (m==1){\n        printf(\"%d\\n\",a[i]);\n    }\n    else{\n        printf(\"%d\\n\",a[n-1]);\n    }\n    for (i=0;i<n-2;i++){\n        if (b[i]!=c[i]){\n            p=1;\n            break;\n        }\n    }\n    if (p==1){\n        printf(\"%d\",b[i]);\n    }\n    else{\n        printf(\"%d\",b[n-2]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.6445012787723785, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "2d97a56b7dfc44ec0807697fdcebeafc", "bug_code_uid": "321d7db37cd9c95b4c1738ba09de16ec", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "97736ab5fc33701d6a574233af14734e", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t100\n\nint main() {\n\tstatic int ii[N];\n\tint n, i, j, a, good, k;\n\n\tscanf(\"%d\", &n);\n\tk = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tgood = 1;\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tscanf(\"%d\", &a);\n\t\t\tif (a == 1 || a == 3) {\n\t\t\t\tgood = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (good)\n\t\t\tii[k++] = i + 1;\n\t}\n\tprintf(\"%d\\n\", k);\n\tfor (i = 0; i < k; i++)\n\t\tprintf(\"%d \", ii[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t100\n\nint main() {\n\tstatic int ii[N];\n\tint n, i, j, a, good, k;\n\n\tscanf(\"%d\", &n);\n\tk = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tgood = 1;\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tscanf(\"%d\", &a);\n\t\t\tif (a == 1 || a == 3)\n\t\t\t\tgood = 0;\n\t\t}\n\t\tif (good)\n\t\t\tii[k++] = i + 1;\n\t}\n\tprintf(\"%d\\n\", k);\n\tfor (i = 0; i < k; i++)\n\t\tprintf(\"%d \", ii[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.3750855578370979, "equal_cnt": 36, "replace_cnt": 19, "delete_cnt": 2, "insert_cnt": 15, "fix_ops_cnt": 36, "lang": "GNU C11", "fix_code_uid": "e5fe39f39bbc0a0a6dba042fae36d405", "bug_code_uid": "500049e3639a85eb69c560338d578f00", "src_uid": "4abdd16670a796be3a0bff63b9798fed", "apr_id": "7f9871e93588e351b85a7018d0861214", "difficulty": 1100, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n     int b,c=0,d=0,i,j=0,t,n,l,s,sum=0;\n    scanf(\"%d\",&n);\n\n  int a[n];\n\n        for(i=0;i<n;i++)\n        {\n     scanf(\"%d%d\",&a[i],&b);\n     if(b!=0)\n     {\n         c=c+b;\n         d=d+a[i];\n         a[i]=0;\n  j++;\nif(j>1)\n{c=c-1;}\n\n     }\n\n        }\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<n;j++)\n            {\n                if(a[i]>a[j])\n                  {\n                     s=a[i];\n                a[i]=a[j];\n                a[j]=s;}\n            }\n        }\n       \n\n        if(c==0)\n            printf(\"%d\\n\",a[0]);\n\n            else{\n        for(i=0;i<c;i++)\n        {//printf(\"%d\\n\",a[i]);\n            sum=sum+a[i];\n        }\nprintf(\"%d\\n\",sum+d);\n}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    long long int n,b,c=0,s=0,max,i,j,x=0,l;\n\n    scanf(\"%lld\", &n);\n    long long int a[n+1];\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld %lld\", &a[i],&b);\n        if(b>0)\n        {\n            s+=a[i];\n            a[i]=0;\n            c+=b;\n            if(x>0)\n            {c=c-1;}\n            x++;\n        }\n    }\n\n    if(c==0)\n    {\n        c=1;\n    }\n    if(c>n)\n    {\n        c=n;\n    }\n\n    for(i=1;i<=c;i++)\n    {\n        max=a[1];\n        l=1;\n        for(j=1;j<=n;j++)\n        {\n            if(max<a[j])\n            {\n                max=a[j];\n                l=j;\n            }\n        }\n        s+=max;\n        a[l]=0;\n    }\n\n    printf(\"%lld\\n\", s);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.6614583333333334, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "41d291c90d5f1795cea566873c474e78", "bug_code_uid": "94d9586a5557c3dee2f16c3aea404f5b", "src_uid": "260666df22ee510fcce3ebdfbb8b71a2", "apr_id": "8058c3bd4bbad3fd2620a2f31ff23073", "difficulty": 1000, "tags": ["combinatorics", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n;\n    double sum=0.0;\n    scanf(\"%d\",&n);\n    for(n;n!=0;n--)\n    {\n            sum+=(double)1/n;\n    }\n        printf(\"%lf\",sum);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    long double sum=0.00;\n    scanf(\"%d\",&n);\n    while(n!=0)\n    {\n            sum+=(long double)1/n;\n            n--;\n    }\n        printf(\"%llf\",sum);\n      return 0;\n}\n"}
{"similarity_score": 0.9993136582017845, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "31c028103710463a03921e45233e386d", "bug_code_uid": "77dbb8ebeca98ccefba3b9597430e451", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "3b0f33f6008b595f21ee117e33f7b62e", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\nint main(){\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t){\r\n        long long int w,h,n,flag=0,x=1;\r\n        scanf(\"%lld %lld %lld\",&w,&h,&n);\r\n        \r\n        while(1){\r\n            if(w%2==0){\r\n                w=w/2;\r\n                flag++;\r\n            }\r\n            else if(h%2==0){\r\n                h=h/2;\r\n                flag++;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n        if(flag!=0){\r\n            \r\n        \r\n        while(flag){\r\n            x=x*2;\r\n        \r\n            flag--;\r\n        }\r\n        }\r\n        if(x>n){\r\n        printf(\"YES\\n\");}\r\n        else\r\n        printf(\"NO\\n\");\r\n        \r\n        \r\n        t--;\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n \r\nint main(){\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t){\r\n        long long int w,h,n,flag=0,x=1;\r\n        scanf(\"%lld %lld %lld\",&w,&h,&n);\r\n        \r\n        while(1){\r\n            if(w%2==0){\r\n                w=w/2;\r\n                flag++;\r\n            }\r\n            else if(h%2==0){\r\n                h=h/2;\r\n                flag++;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n        if(flag!=0){\r\n            \r\n        \r\n        while(flag){\r\n            x=x*2;\r\n        \r\n            flag--;\r\n        }\r\n        }\r\n        if(x>=n){\r\n        printf(\"YES\\n\");}\r\n        else\r\n        printf(\"NO\\n\");\r\n        \r\n        \r\n        t--;\r\n    }\r\n}"}
{"similarity_score": 0.8893854748603351, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "fb0c1f53adba4ae053aadb3558afccde", "bug_code_uid": "b7bf6b507785b5ea44f73648080da7cf", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "66a65ddc11b4be9acab2549087ef246e", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int a[110],b,d,i,j,p=0,k,s,l,o=0,o1=0,f=0,t=1,f1=0,f2=0,t2=0,t3=0,m2=0,m3=0;\n\n   char c,c1;\n   scanf(\"%d\",&l);d=0;\n   for(i=1;i<=l;i++)\n   {\nd++;\nscanf(\"%c%c%d\",&c1,&c,&a[i]);\n\n   if(c=='-'){\n   for(j=i-1;j>=1;j--)\n   {\n       t=0;t2=1;\n      if(a[i]==a[j]){d--;p=1;break;}\n\nelse p=0;\n   }m2++;}if(c=='+'&&m2!=0){m3++;}\n   if(m2>=m3&&c=='+'&&m2!=0&&m3!=0)d--;\n}\nprintf(\"%d\\n\",d);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   int a[150],b,d,i,j,p=0,k,s,l,o=0,o1=0,f=0,t=1,f1=0,f2=0,t2=0,t3=0,m2=0,m3=0;\n\n   char c,c1;\n   scanf(\"%d\",&l);d=0;\n   for(i=1;i<=l;i++)\n   {\n\nscanf(\"%c%c%d\",&c1,&c,&a[i]);\nd++;\n   if(c=='-'){m2++;\n   for(j=i-1;j>=1;j--)\n   {\n       t=0;t2=1;\n      if(a[i]==a[j]){d--;p=1;break;}\n\nelse p=0;\n   }}if(c=='+'&&m2!=0)m3++;\n   if(m2>=m3&&c=='+'&&m2!=0&&m3!=0){d--;}\n   if(m2==m3){m2=0;m3=0;}\n}\nprintf(\"%d\\n\",d);\n}"}
{"similarity_score": 0.1956241956241956, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "08e55178132bbd54a5cde212a96b1f3d", "bug_code_uid": "da93397d38da968d2e5d13808e642b52", "src_uid": "c047040426e736e9085395ed9666135f", "apr_id": "c52520ad3bd368febb19459be5c98cc2", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <inttypes.h>\nint main()\n{\n\tint64_t n;\n\tscanf(\"%\"PRId64\"\",&n);\n\tint64_t ar[n],pos,num,i;\n\tint flag;\n\tar[0]=2;\n\tpos=1;\n\tfor(num=3;;num++)\n\t{\n\t\tflag = 0;\n\t\tfor(i=0;i<pos;i++)\n\t\t{\n\t\t\tif(num%ar[i]==0)\n\t\t\t{\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==0)\n\t\t{\n\t\t\tar[pos++]=num;\n\t\t}\n\t\tif(pos == n)\n\t\t\tbreak;\n\t}\n\tfor(i=0;i<pos;i++)\n\t\tprintf(\"%\"PRId64\" \",ar[i]);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n\tint num,ct=0,lim;\n\tscanf(\"%d\",&lim);\n\tfor(num=3;;num++)\n\t{\n\t\tif(isPrime(num))\n\t\t{\n\t\t\tprintf(\"%d \",num);\n\t\t\tct++;\n\t\t}\t\t\n\t\tif(ct==lim)\n\t\t\tbreak;\n\t}\n\treturn 0;\n}\n\nint isPrime(int n)\n{\n\tint i,lim=sqrt(n)+1,flag;\n\tfor(i=2;i<=lim;i++)\n\t{\n\t\tflag=1;\n\t\tif(n%i==0)\n\t\t{\n\t\t\tflag=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag == 1)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}"}
{"similarity_score": 0.8223684210526315, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "deb2e20f8641cf3c37ae5fac43f01883", "bug_code_uid": "d6dbd39b4d87874a5aebb74d5720075e", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "32bb8825430370002a37bd24c158c543", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "main() {\n  char p, v, t, n, i = 0;\n  scanf(\"%d\", &n);\n\n  while (n--) {\n    scanf(\"%d %d %d\", &p, &v, &t);\n    if (p + v + t > 1) i++;\n  }\n\n  puts(i);\n}", "fixed": "int main() {\n\tint p, v, t, n, i = 0;\n\tscanf(\"%d\", &n);\n\n\twhile (n--) {\n\t\tscanf(\"%d %d %d\", &p, &v, &t);\n\t\tif (p + v + t > 1) i++;\n\t}\n\n\tprintf(\"%d\", i);\n}"}
