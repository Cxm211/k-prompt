{"id": "/data/all/data/neagle/gokibitz", "bugType": "no-inner-declarations", "problem": "\t\t\tfunction addCommentsToSgf(callback) {\n\t\t\t\tComment.find({ kifu: kifu._id })", "fixed": "\t\t\tvar addCommentsToSgf = function (callback) {\n\t\t\t\tComment.find({ kifu: kifu._id })", "message": "Move function declaration to function body root."}
{"id": "/data/all/data/openlayers/openlayers", "bugType": "no-invalid-this", "problem": "var _ol_geom_MultiLineString_ = function(coordinates, opt_layout) {\n  _ol_geom_SimpleGeometry_.call(this);\n  ", "fixed": "var MultiLineString = function(coordinates, opt_layout) {\n  _ol_geom_SimpleGeometry_.call(this);\n  ", "message": "Unexpected 'this'."}
{"id": "/data/all/data/qooxdoo/qooxdoo", "bugType": "no-throw-literal", "problem": "  if (columnIdArr.length != columnNameArr.length) {\n    throw \"columnIdArr and columnNameArr have different length: \"\n      + columnIdArr.length + \" != \" + columnNameArr.length;\n  }", "fixed": "  if (columnIdArr.length != columnNameArr.length) {\n    throw new Error(\"columnIdArr and columnNameArr have different length: \"\n      + columnIdArr.length + \" != \" + columnNameArr.length);\n  }", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/sentsin/layui", "bugType": "comma-style", "problem": "    ,fieldElem = elem.find('input,select,textarea') \n    ,filter = button.attr('lay-filter') \n    ,nameIndex = 0; \n    ", "fixed": "    ,fieldElem = elem.find('input,select,textarea') \n    ,filter = button.attr('lay-filter'); \n   \n    ", "message": "',' should be placed last."}
{"id": "/data/all/data/RavelLaw/e3", "bugType": "no-unreachable", "problem": "        return [];\n        break;\n    }", "fixed": "        return [];\n    }", "message": "Unreachable code."}
{"id": "/data/all/data/misantronic/rbtv.youtube", "bugType": "no-empty", "problem": "        item = JSON.parse(item);\n    } catch (e) {\n    }", "fixed": "        item = JSON.parse(item);\n    } catch (e) {\n        $.noop();\n    }", "message": "Empty block statement."}
{"id": "/data/all/data/devpunks/snuggsi", "bugType": "no-unused-labels", "problem": "        \n    resource:\n      typeof resource === 'object'", "fixed": "        \n        \n      typeof resource === 'object'", "message": "'resource:' is defined but never used."}
{"id": "/data/all/data/jasperla/node-vcard", "bugType": "no-unused-vars", "problem": "var u             = require('underscore');\nvar util          = require('util');\nvar validFields   = require('./lib/fields');", "fixed": "var u             = require('underscore');\nvar validFields   = require('./lib/fields');", "message": "Unused variable."}
{"id": "/data/all/data/hrdaya/UltraDate.js", "bugType": "guard-for-in", "problem": "    var keys = Object.getOwnPropertyNames(Date.prototype);\n    for (var i in keys) {\n        (function (key) {", "fixed": "    var keys = Object.getOwnPropertyNames(Date.prototype);\n    for (var i = 0, len = keys.length; i < len; i++) {\n        (function (key) {", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/forCrowd/WealthFramework", "bugType": "no-redeclare", "problem": "                    \n                    for (var i = 0; i < self.ElementCellSet.length; i++) {\n                        var cell = self.ElementCellSet[i];\n                        cell.setAggressiveRating(false);", "fixed": "                    \n                    self.ElementCellSet.forEach(function (cell) {\n                        cell.setAggressiveRating(false);", "message": "Redeclaring variable."}
{"id": "/data/all/data/oskariorg/oskari-frontend", "bugType": "no-redeclare", "problem": "            }\n            var datum = clsSelector(datum) + clsSelector(coordinate);\n            dropdowns[\"geodetic-coordinate\"].find(datum).show();\n            Object.keys( instances ).forEach( function ( key ) {", "fixed": "            }\n            var classesToShow = clsSelector(datum) + clsSelector(coordinate);\n            dropdowns[\"geodetic-coordinate\"].find(classesToShow).show();\n            Object.keys( instances ).forEach( function ( key ) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/Colorless-Green-Ideas/MaterialDjango", "bugType": "no-useless-escape", "problem": "\t'punctuation': /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n\t'operator': /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/]?|[><\\/]=?|[-+*^=~]/\n};", "fixed": "\t'punctuation': /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n\t'operator': /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n};", "message": "Unnecessary escape character."}
{"id": "/data/all/data/WebVella/WebVella-ERP", "bugType": "no-inner-declarations", "problem": "\t\t\t\t}\n\t\t\t\tfunction uploadProgressCallback(response) {\n\t\t\t\t\t$timeout(function () {", "fixed": "\t\t\t\t}\n\t\t\t\tpopupData.uploadProgressCallback = function(response) {\n\t\t\t\t\t$timeout(function () {", "message": "Move function declaration to function body root."}
{"id": "/data/all/data/tidepool-org/uploader", "bugType": "no-debugger", "problem": "    this.cfg.tzoUtil = new TZOUtil(this.cfg.timezone, mostRecent, this.postRecords);\ndebugger;\n    this.buildCBGRecords();", "fixed": "    this.cfg.tzoUtil = new TZOUtil(this.cfg.timezone, mostRecent, this.postRecords);\n    this.buildCBGRecords();", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/node-red/node-red-nodes", "bugType": "no-redeclare", "problem": "        else if(req.query.apikey) {\r\n            var pb = new PushBullet(req.query.apikey);\r\n            pb.devices(function(err, chans) {\r", "fixed": "        else if(req.query.apikey) {\r\n            pb = new PushBullet(req.query.apikey);\r\n            pb.devices(function(err, chans) {\r", "message": "Redeclaring variable."}
{"id": "/data/all/data/Viglino/ol-ext", "bugType": "no-invalid-this", "problem": "\t\t\t\t}\n\t\t\t}, this);\n\t};", "fixed": "\t\t\t\t}\n\t\t\t}.bind(this));\n\t};", "message": "Unexpected 'this'."}
{"id": "/data/all/data/accordproject/template-studio", "bugType": "no-unused-vars", "problem": "import PropTypes from 'prop-types';\nimport { Segment, Icon, Table, Label, Button, Form, Modal } from 'semantic-ui-react';\nimport saveAs from 'file-saver';", "fixed": "import PropTypes from 'prop-types';\nimport { Icon, Label, Dropdown } from 'semantic-ui-react';\nimport saveAs from 'file-saver';", "message": "Unused variable."}
{"id": "/data/all/data/CleverStack/cleverstack-cli", "bugType": "no-useless-escape", "problem": "    matches: [\n      /\\.module\\(\\ 'Testing2.factories'\\ \\)/,\n      /\\.factory\\(\\ 'Testing2Factory',\\ function\\(\\)\\ {/\n    ]", "fixed": "    matches: [\n      /\\.module\\('Testing2.factories'\\)/,\n      /\\.factory\\('Testing2Factory',\\ function\\(\\)\\ {/\n    ]", "message": "Unnecessary escape character."}
{"id": "/data/all/data/nickjillings/js-xtract", "bugType": "no-extend-native", "problem": "Float64Array.prototype.xtract_get_data_frames = function (frame_size, hop_size, copy) {\n    if (typeof frame_size !== \"number\") {", "fixed": "Float64Array.prototype.xtract_get_data_frames = Float32Array.prototype.xtract_get_data_frames = function (frame_size, hop_size, copy) {\n    if (typeof frame_size !== \"number\") {", "message": "Float64Array prototype is read only, properties should not be added."}
{"id": "/data/all/data/gocom/dense", "bugType": "no-extra-semi", "problem": ";(function (factory)\n{", "fixed": "(function (factory)\n{", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/blaise-io/xssnake", "bugType": "no-extra-bind", "problem": "            var index = data[0], location = data[1];\n            XSS.game.apples[index] = new Apple(index, location[0], location[1]);\n        }.bind(this));\n    },", "fixed": "            var index = data[0], location = data[1];\n            XSS.room.game.apples[index] = new Apple(index, location[0], location[1]);\n        });\n    }", "message": "The function binding is unnecessary."}
{"id": "/data/all/data/Merchello/Merchello", "bugType": "no-console", "problem": "            $scope.toggleAllProvinces = toggleAllProvinces;\n            console.info($scope.dialogData);\n            ", "fixed": "            $scope.toggleAllProvinces = toggleAllProvinces;\n            ", "message": "Unexpected console statement."}
{"id": "/data/all/data/heroku/heroku-pg-extras", "bugType": "no-extra-boolean-cast", "problem": "function * ensureNonStarterPlan (db) {\n  if (!!db.plan.name.match(/(dev|basic)$/)) {\n    throw new Error(`This operation is not supported by Hobby tier databases.`)", "fixed": "function * ensureNonStarterPlan (db) {\n  if (db.plan.name.match(/(dev|basic)$/)) {\n    throw new Error(`This operation is not supported by Hobby tier databases.`)", "message": "Redundant double negation."}
{"id": "/data/all/data/SAP/openui5", "bugType": "no-invalid-this", "problem": "\t\t\t\tthis._oBusyDialog.open();\n\t\t\t\tjQuery.sap.delayedCall(1000, this, function () {\n\t\t\t\t\tthis._oBusyDialog.close();\n\t\t\t\t});", "fixed": "\t\t\t\tthis._oBusyDialog.open();\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tthis._oBusyDialog.close();\n\t\t\t\t}.bind(this), 1000);", "message": "Unexpected 'this'."}
{"id": "/data/all/data/ekalinin/sitemap.js", "bugType": "no-console", "problem": "app.listen(3000, async () => {\n   await fn().catch(console.error);\n  console.log('pipeline done')", "fixed": "app.listen(3000, async () => {\n  console.log('pipeline done')", "message": "Unexpected console statement."}
{"id": "/data/all/data/SGrondin/bottleneck", "bugType": "no-invalid-this", "problem": "  module.exports = Sync;\n}).call(this);", "fixed": "  module.exports = Sync;\n}).call(undefined);", "message": "Unexpected 'this'."}
{"id": "/data/all/data/Esri/solutions-webappbuilder-widgets", "bugType": "no-unreachable", "problem": "          }\n          return false;\n          break;\n        default:", "fixed": "          }\n          return false;\n        default:", "message": "Unreachable code."}
{"id": "/data/all/data/ippontech/tatami", "bugType": "no-invalid-this", "problem": "\t\t\t.data('login', axisy[j]).click(function () {\n\t\t\t\tlistUserTweets(this.data('login'));\n\t\t\t})", "fixed": "\t\t\t.data('login', axisy[j]).click(function () {\n\t\t\t\twindow.location = \"/tatami/profile/\" + this.data('login');\n\t\t\t})", "message": "Unexpected 'this'."}
{"id": "/data/all/data/CMP-Studio/DawnChorus", "bugType": "no-dupe-keys", "problem": "              <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n              <Text style={[styles.instructionText, { fontSize: 36, textAlign: 'right', fontSize: 36, color: GREEN, marginRight: 20, width: 50 }]}>\n                 3.", "fixed": "              <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                <Text style={[styles.instructionText, { fontSize: 36, textAlign: 'right', color: GREEN, marginRight: 20, width: 50 }]}>\n                 3.", "message": "Duplicate key 'fontSize'."}
{"id": "/data/all/data/massimocandela/BGPlay", "bugType": "no-array-constructor", "problem": "    node.graphId = this.nodeId;\r\n    node.vectors = new Array();\r\n    node.edges = 0;\r", "fixed": "    node.graphId = this.nodeId;\r\n    node.vectors = [];\r\n    node.edges = 0;\r", "message": "The array literal notation [] is preferable."}
{"id": "/data/all/data/actum/gulp-dev-stack", "bugType": "no-unused-vars", "problem": "import glob from 'glob';\nimport gulpicon from 'gulpicon/tasks/gulpicon';\nimport svgmin from 'gulp-svgmin';\nimport del from 'del';", "fixed": "import glob from 'glob';\nimport del from 'del';", "message": "Unused variable."}
{"id": "/data/all/data/qiao/mdwatch", "bugType": "comma-style", "problem": "#!/usr/bin/env node\nvar path    = require('path')\n  , mdwatch = require('../');\nfunction usage(mes) {", "fixed": "#!/usr/bin/env node\nvar path    = require('path');\nvar mdwatch = require('../');\nfunction usage(mes) {", "message": "',' should be placed last."}
