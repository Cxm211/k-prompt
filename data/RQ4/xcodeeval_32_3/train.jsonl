{"similarity_score": 0.9823562891291975, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "bd8caf237cccd5620b9ec4f701b75c9d", "bug_code_uid": "241af9eabefc85af7cd32c8dc6b9d518", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "c92c3751ad892ac0bb79096053560590", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n     int n;\n     scanf(\"%d\",&n);\n     int a[n],i,pos1[n],pos2[n],pos3[n];\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%d\",&a[i]);\n     }\n     int j,k,l,o,p,c=0,d=0,e=0;\n     for(j=1;j<=n;j++)\n     {\n          if(a[j]==1)\n          {\n               c++;\n               pos1[c]=j;\n          }\n          else if(a[j]==2)\n          {\n               d++;\n               pos2[d]=j;\n          }\n          else\n          {\n               e++;\n               pos[3]=j;\n               }\n     }\n     int min;\n     if(c!=0 || d!=0||e!=0)\n     {\n          if(c<d && c<e)\n          min=c;\n          else if(d<c &&d<e)\n          min=d;\n          else \n          min=e;\n          printf(\"%d\",min);\n          for(k=1;k<=min;k++)\n          {\n               printf(\"%d %d %d\\n\",pos1[k],pos2[k],pos3[k]);\n          }\n     }\n     else\n     printf(\"0\");\n}", "fixed": "#include <stdio.h>\nint main()\n{\n     int n;\n     scanf(\"%d\",&n);\n     int a[n],i,pos1[n],pos2[n],pos3[n];\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%d\",&a[i]);\n     }\n     int j,k,l,o,p,c=0,d=0,e=0;\n     for(j=1;j<=n;j++)\n     {\n          if(a[j]==1)\n          {\n               c++;\n               pos1[c]=j;\n          }\n          else if(a[j]==2)\n          {\n               d++;\n               pos2[d]=j;\n          }\n          else\n          {\n               e++;\n               pos3[e]=j;\n               }\n     }\n     int min;\n     if(c!=0 &&  d!=0 && e!=0)\n     {\n          if(c<=d && c<=e)\n          min=c;\n          else if(d<=c &&d<=e)\n          min=d;\n          else \n          min=e;\n          printf(\"%d\\n\",min);\n          \n          for(k=1;k<=min;k++)\n          {\n               printf(\"%d %d %d\\n\",pos1[k],pos2[k],pos3[k]);\n          }\n     }\n     else\n     printf(\"0\");\n}"}
{"similarity_score": 0.9593147751605996, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6862c37217bee4f201142688442ed026", "bug_code_uid": "d0c9a687348e5a25b39df6ad5918fc36", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "d430f5cc48868d488cc2189acb5eeec0", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\t//printf(\"\\n\");\n\tchar a[n][100];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&a[i]);\n\t\t//printf(\"\\n\");\n\t}\n\tint s;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\ts=strlen(a[i]);\n\t\tif(s>10&&s<=100)\n\t\t{\n\t\t\tprintf(\"%c%d%c\\n\",a[i][0],s-2,a[i][s-1]);\n\t\t\t//printf(\"\\n\");\n\t\t}\n\t\telse if(s<=10)\n\t\t{\n\t\t\tprintf(\"%s\",a[i]);\n\t\t    printf(\"\\n\");\n\t\t}\n\t\telse if(s>100)\n\t\t{\n\t\t    printf(\"%c%d%c\",a[i][0],98,a[i][99]);\n\t\t}\n\t\t\n\t}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\t//printf(\"\\n\");\n\tchar a[n][100];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&a[i]);\n\t\t//printf(\"\\n\");\n\t}\n\tint s;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\ts=strlen(a[i]);\n\t\tif(s>10&&s<=100)\n\t\t{\n\t\t\tprintf(\"%c%d%c\\n\",a[i][0],s-2,a[i][s-1]);\n\t\t\t//printf(\"\\n\");\n\t\t}\n\t\telse if(s<=10)\n\t\t{\n\t\t\tprintf(\"%s\",a[i]);\n\t\t    printf(\"\\n\");\n\t\t}\n\t\telse if(s>100)\n\t\t{\n\t\t    printf(\"%c%d%c\",a[i][0],98,a[i][99]);\n\t\t    printf(\"\\n\");\n\t\t}\n\t\t\n\t}\n}"}
{"similarity_score": 0.9461883408071748, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "54bf04a46c61986c7f2aa389aa51d6f7", "bug_code_uid": "2776859d3610734eb4a7427d2860ccf2", "src_uid": "f82058f6ba3ce0da15a5ce059674af35", "apr_id": "d059024541fd4025b86524949010a084", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        int n;\n        scanf(\"%d\",&n);\n        for(int j=0;j<n;j++){\n            printf(\"1 \");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        int n;\n        scanf(\"%d\",&n);\n        for(int j=0;j<n;j++){\n            printf(\"1 \");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.7347242921013413, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8e472c16e2d17b7d20c66f6ca2b7c798", "bug_code_uid": "de23171732ff988e1c607e32b7083076", "src_uid": "d3a0402de1338a1a542a86ac5b484acc", "apr_id": "7a20fbdefb9a54e0f50e9d5836b1b553", "difficulty": 1600, "tags": ["dp", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(void){\n  int n,*knights,i,j,k,flg;\n  scanf(\"%d\",&n);\n  knights=(int *)calloc(n,sizeof(int));\n  for(i=0;i<n;i++) scanf(\"%d\",knights+i);\n  for(i=1;i<=n/3;i++){//polygon num\n    flg=0;\n    if(n%i!=0) continue;\n    for(j=0;j<i;j++){//begin from?\n      flg=0;\n      for(k=j;k<n;k+=i){\n\tif(knights[k]==0){\n\t  flg=1;\n\t  break;\n\t}\n      }\n      if(flg==0) break;\n    }\n    if(flg==0) break;\n  }\n  if(flg==0){\n      puts(\"YES\");\n    }else{\n      puts(\"NO\");\n    }\t\n\t\n  /*      flg=0;\n      k=j;\n      do{\n\tif(*(knights+k)==0){\n\t  flg=1;\n\t  break;\n\t}\n\tk+=i;\n\tk%=n;\n      }while(!(k>=j && k<j+i));\n      if(flg==0){\n\tputs(\"YES\");\n\tbreak;\n      }\n    }\n    if(flg==0) break;\n  }\n  if(flg==1) puts(\"NO\");*/\n  free(knights);\n  return 0;\n}\n\n\n  \n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(void){\n  int n,*knights,i,j,k,flg;\n  scanf(\"%d\",&n);\n  knights=(int *)calloc(n,sizeof(int));\n  for(i=0;i<n;i++) scanf(\"%d\",knights+i);\n  for(i=1;i<=n/3;i++){//polygon num\n    flg=0;\n    if(n%i!=0){\n      flg=1;\n      continue;\n    }\n    for(j=0;j<i;j++){//begin from?\n      flg=0;\n      for(k=j;k<n;k+=i){\n\tif(knights[k]==0){\n\t  flg=1;\n\t  break;\n\t}\n      }\n      if(flg==0) break;\n    }\n    if(flg==0) break;\n  }\n  if(flg==0){\n      puts(\"YES\");\n    }else{\n      puts(\"NO\");\n    }\t\n  free(knights);\n  return 0;\n}\n\n\n  \n"}
{"similarity_score": 0.9914724275156339, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0c8918f98ea88b2b33bd65454434962d", "bug_code_uid": "14f9b852ac07a1f63b2f221f62814bc8", "src_uid": "9b1b082319d045cf0ec6d124f97a8184", "apr_id": "0c990e9d510186909dd55520916cc5c0", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    char a[100001],a1[100001];\n    int n,i,l,l1=1,flag=0,c0=0,c1=0,s=0;\n    scanf(\"%d\",&n);\n    while(n--)\n        {scanf(\"%s\",a);\n        l=strlen(a);\n        if(l==1 && a[0]=='0')\n            flag=1;\n        else\n        {   for(i=0;i<l;i++)\n            {\n                if(a[i]=='0')\n                    c0++;\n                else if(a[i]=='1')\n                    c1++;\n            }\n            if(c0==l-1 && c1==1)\n                s+=c0;\n            else\n            {\n                for(i=0;i<l;i++)\n                    a1[i]=a[i];\n                l1=l;\n            }\n        }\n        c0=0,c1=0;\n        }\n        if(flag==1)\n            printf(\"0\");\n        else\n        {\n            for(i=0;i<l1;i++)\n                printf(\"%c\",a1[i]);\n            for(i=0;i<s;i++)\n                printf(\"0\");\n        }\n        return 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n    char a[100001],a1[100001];\n    int n,i,l,l1=1,flag=0,c0=0,c1=0,s=0;\n    scanf(\"%d\",&n);\n    a1[0]='1';\n    while(n--)\n        {scanf(\"%s\",a);\n        l=strlen(a);\n        if(l==1 && a[0]=='0')\n            flag=1;\n        else\n        {   for(i=0;i<l;i++)\n            {\n                if(a[i]=='0')\n                    c0++;\n                else if(a[i]=='1')\n                    c1++;\n            }\n            if(c0==l-1 && c1==1)\n                s+=c0;\n            else\n            {\n                for(i=0;i<l;i++)\n                    a1[i]=a[i];\n                l1=l;\n            }\n        }\n        c0=0,c1=0;\n        }\n        if(flag==1)\n            printf(\"0\");\n        else\n        {\n            for(i=0;i<l1;i++)\n                printf(\"%c\",a1[i]);\n            for(i=0;i<s;i++)\n                printf(\"0\");\n        }\n        return 0;\n}"}
{"similarity_score": 0.9886621315192744, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f14384565ae20bed1dab82c4d7e968fd", "bug_code_uid": "76fa334d9d7cee900e8fa667e9721b90", "src_uid": "ac7d117d58046872e9d665c9f99e5bff", "apr_id": "d0aea0b003dfa6d94b944173673d7df5", "difficulty": 800, "tags": ["brute force", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    for(int k=0;k<=t;k++)\r\n    {\r\n        long long int n;\r\n        scanf(\"%lld\",&n);\r\n        long long int ans=0;\r\n         for(long long int i=1;i<=9;i++)\r\n         {\r\n            for(long long int j=i;j<=n;)\r\n            {\r\n                ans++;\r\n                j=(j*10)+i;\r\n            }\r\n        }\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n    return 0;", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    for(int k=0;k<t;k++)\r\n    {\r\n        long long int n;\r\n        scanf(\"%lld\",&n);\r\n        long long int ans=0;\r\n         for(long long int i=1;i<=9;i++)\r\n         {\r\n            for(long long int j=i;j<=n;)\r\n            {\r\n                ans++;\r\n                j=(j*10)+i;\r\n            }\r\n        }\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n    return 0;\r\n\r\n\r\n}\r\n"}
{"similarity_score": 0.9900426742532006, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e123dbf8742cb83875dd21cd3aa5bfa8", "bug_code_uid": "036f0cadcb766c30e4f4bb08b5b28a1f", "src_uid": "6422d76f71702e77808b1cc041962bb8", "apr_id": "7e2a0eb3acb0096935871b4838b2a41a", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\ntypedef long long ll;\r\n\r\nint abs(int n)\r\n{\r\n    if(n>=0)\r\n        return n;\r\n    else\r\n        return -n;\r\n}\r\n\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int A[t][2], B[t][2], F[t][2];\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\", &A[i][0]);\r\n        scanf(\"%d\", &A[i][1]);\r\n        scanf(\"%d\", &B[i][0]);\r\n        scanf(\"%d\", &B[i][1]);\r\n        scanf(\"%d\", &F[i][0]);\r\n        scanf(\"%d\", &F[i][1]);\r\n    }\r\n    \r\n    for(int i=0;i<t;i++)\r\n    {\r\n        if(A[i][0]==B[i][0] && A[i][0]==F[i][0] && ((A[i][1]>F[i][1] && B[i][1]<F[i][1]) || (A[i][1]<F[i][1] && B[i][1]>F[i][1])))\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][1]-B[i][1])+2);\r\n        }\r\n        else if(A[i][1]==B[i][1] && A[i][1]==F[i][1] && ((A[i][0]<F[i][0] && B[i][0]>F[i][0]) || (A[i][0]>F[i][0] && B[i][0]<F[i][0])))\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][0]-B[i][0])+2);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][1]+A[i][0]-B[i][1]-B[i][0]));\r\n        }\r\n    }\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\ntypedef long long ll;\r\n\r\nint abs(int n)\r\n{\r\n    if(n>=0)\r\n        return n;\r\n    else\r\n        return -n;\r\n}\r\n\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int A[t][2], B[t][2], F[t][2];\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\", &A[i][0]);\r\n        scanf(\"%d\", &A[i][1]);\r\n        scanf(\"%d\", &B[i][0]);\r\n        scanf(\"%d\", &B[i][1]);\r\n        scanf(\"%d\", &F[i][0]);\r\n        scanf(\"%d\", &F[i][1]);\r\n    }\r\n    \r\n    for(int i=0;i<t;i++)\r\n    {\r\n        if(A[i][0]==B[i][0] && A[i][0]==F[i][0] && ((A[i][1]>F[i][1] && B[i][1]<F[i][1]) || (A[i][1]<F[i][1] && B[i][1]>F[i][1])))\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][1]-B[i][1])+2);\r\n        }\r\n        else if(A[i][1]==B[i][1] && A[i][1]==F[i][1] && ((A[i][0]<F[i][0] && B[i][0]>F[i][0]) || (A[i][0]>F[i][0] && B[i][0]<F[i][0])))\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][0]-B[i][0])+2);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][1]-B[i][1])+abs(A[i][0]-B[i][0]));\r\n        }\r\n    }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.44061302681992337, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "3314503c7691854ac7e4ba5cdbdfa654", "bug_code_uid": "309647d4b7c66521c140e6b75f6ab024", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "12054096715ee99da6733aa0790fc452", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n   int a,n,m,i;\n   scanf(\"%d\",&a);\n   for(i=0;i<a;i++){\n    scanf(\"%d %d\",&n,&m);\n    if(n==1)printf(\"0\");\n    if(n==2)printf(\"%d\",m);\n    if(n>2)printf(\"%d\",m*2);\n   }\n}", "fixed": "    #include<stdio.h>\n    int main()\n    {\n    \tlong long int t,n,m,i;\n    \tscanf(\"%lld\",&t);\n    \tfor(i=0;i<t;i++)\n    \t{\n    \t\tscanf(\"%lld%lld\",&n,&m);\n    \t\tif(n==2)\n    \t\t{\n    \t\t\tprintf(\"%lld\\n\",m);\n    \t\t}\n    \t\telse if(n==1)\n    \t\t\tprintf(\"0\\n\");\n    \t\telse\n    \t\t{\n    \t\t\tprintf(\"%lld\\n\",2*m);\n    \t\t}\n    \t}\n    }\n\n"}
{"similarity_score": 0.16759776536312848, "equal_cnt": 15, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "3edb740341963ba056a6fe0409291016", "bug_code_uid": "8676ba7383a66897413c6bc34b4ed9cb", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "6878902d4504dcc7d488f7d78d1bf5df", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,w;\n    scanf(\"%d\",&t);\n    for(w=0;w<t;w++)\n    {\n        int q,d,a[105],i,n;\n        scanf(\"%d%d\",&q,&d);\n        for(i=0;i<q;i++)\n            scanf(\"%d\",&a[i]);\n        for(i=0;i<q;i++)\n        {\n            n=1;\n            a[i]=a[i]-7;\n            for(;a[i]>7;a[i]-=7)\n            {\n                if(a[i]%10==0||a[i]%7==0)\n                {\n                    printf(\"YES\\n\");\n                    n=0;\n                    break;\n                }\n            }\n            if(n)\n                printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n\n\t\t\t\t \t \t\t      \t\t  \t\t   \t \t\t\t", "fixed": "#include<stdio.h>\nint t,q,d,tmp;\nint main()\n{\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d\", &q, &d);\n\t\tfor(int i=1; i<=q; ++i)\n\t\t{\n\t\t\tint ok = 0;\n\t\t\tscanf(\"%d\", &tmp);\n\t\t\tif(tmp >= 10 * d) ok = 1;\n\t\t\telse \n\t\t\t{\n\t\t\t\tfor(int j=1; j<10; ++j)\n\t\t\t\t{\n\t\t\t\t\tif(tmp >= j*d && (tmp - j*d) % 10 == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tok = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok > 0) puts(\"YES\"), ok = 0;\n\t\t\telse puts(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n  \t\t \t  \t\t\t  \t\t \t\t\t \t\t\t\t\t \t\t\t \t"}
{"similarity_score": 0.3824959481361426, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "391a995b1d01a8dbdb84bac58a3db854", "bug_code_uid": "b9d041474131fbb1530798632564c95c", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "7adfc9cd572777e0172c2e62a37362ca", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main () { v\n    int t,a,b,i,j;\n    scanf(\"%d\\n\",&t);\n\n    while(t>0){\n        scanf(\"%d %d\\n\",&a,&b);\n        i=a%b;\n        j=b-i;\n        printf(\"%d\\n\",i);\n    t--;\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main () {\n    int t,j,i;\n\n    scanf(\"%d\",&t);\n    int a[t],b[t];\n\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n    }\n    for(i=0;i<t;i++)\n    {\n        if(a[i]>b[i]){\n            if(a[i]%b[i]==0)\n            {\n                j=0;}\n            else {\n                j=b[i]-a[i]%b[i];}\n            }\n        else {\n                j=b[i]-a[i];}\n        printf(\"%d\\n\",j);\n    }\n}\n"}
{"similarity_score": 0.6346265199768385, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "0f5c84a8356398938317b3d82a226ea8", "bug_code_uid": "5b7d93f3708b7a0ca371ba4779ef9ad8", "src_uid": "3545385c183c29f9b95aa0f02b70954f", "apr_id": "01fecb5c98e464408bf97163e2a54e7c", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,flag,a[13845],b[13854],i;\n    flag=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]%2==0)\n        {\n            b[i]=a[i]/2;\n        }\n        else\n        {\n            flag++;\n            if(flag%2==0)\n            {\n                if(a[i]>0)\n                    b[i]=a[i]/2;\n                else\n                    b[i]=a[i]/2;\n            }\n            else\n            {\n                if(a[i]>0)\n                    b[i]=a[i]/2+1;\n                else\n                    b[i]=a[i]/2-1;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d\\n\",b[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,a[13845],b[13854],i,neg,pos;\n    neg=0;pos=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]%2==0)\n        {\n            b[i]=a[i]/2;\n        }\n        else\n        {\n            if(a[i]>0)\n            {\n                if(pos%2==0)\n                {\n                    b[i]=a[i]/2;\n                    pos++;\n                }\n                else\n                {\n                    b[i]=a[i]/2+1;\n                    pos++;\n                }\n            }\n            else\n            {\n                if(neg%2==0)\n                {\n                    b[i]=a[i]/2;\n                    neg++;\n                }\n                else\n                {\n                    b[i]=a[i]/2-1;\n                    neg++;\n                }\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d\\n\",b[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.43583902809415337, "equal_cnt": 17, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "a62dd3fa58a42d7623c2582383141f5a", "bug_code_uid": "32a7f607e8deebc7a5ca729c6285eef2", "src_uid": "ce0579e9c5b4c157bc89103c76ddd4c3", "apr_id": "840a4919d17617147802190aeee457a0", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    while(n--)\r\n    {\r\n        int n, hours, minutes;\r\n        scanf(\"%d %d %d\", &n, &hours, &minutes);\r\n        int h[n], m[n]; long holders[n];\r\n        long holding=hours*60+minutes;\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d %d\",&h[i], &m[i]);\r\n            holders[i]=h[i]*60+m[i];\r\n        }\r\n        long  check=holders[0];\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            if(check>holders[i])\r\n            check=holders[i];\r\n        }\r\n        check=check-holding;\r\n        if(check<0)\r\n        {\r\n            check=1440+check;\r\n        }\r\n        printf(\"%d %d\\n\", check/60, check%60);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    while(n--)\r\n    {\r\n      int hold1=1440;\r\n      int number, hrs, minutes;\r\n      scanf(\"%d%d%d\", &number, &hrs, &minutes);\r\n      int hold2=hrs*60+minutes;\r\n      while(number--)\r\n      {\r\n        int h_, m_;\r\n        scanf(\"%d%d\", &h_, &m_);\r\n        int hold3=(h_*60+m_);\r\n        if(hold3>=hold2)\r\n        hold3=hold3-hold2;\r\n        else if(hold3<hold2)\r\n        hold3=1440-(hold2-hold3);\r\n        if(hold3<hold1)\r\n        hold1=hold3;\r\n      }\r\n      printf(\"%d %d\\n\", hold1/60, hold1%60);\r\n    }\r\n}"}
{"similarity_score": 0.9912536443148688, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1b3b27c3a52060d337cef16a612f8766", "bug_code_uid": "2e41b25e68cf07d40f71490c3158897e", "src_uid": "54e2b6bea0dc6ee68366405945af50c6", "apr_id": "92980ec229d3eccebaa0287c721f4719", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n;\n    int i;\n    int temp;\n    \n    long int headmove=0;\n    \n    scanf(\"%d\", &n);\n\n    int frag[n];\n    \n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &temp);\n        frag[temp-1]=i;\n    }\n    \n    for(i=0; i<n-1; i++)\n    {\n        if(frag[i]-frag[i+1]>0)\n        {\n            headmove+=(frag[i]-frag[i+1]);\n        }\n        else\n        {\n            headmove+=(frag[i+1]-frag[i]);\n        }\n    }\n    \n    printf(\"%ld\", headmove);\n    \n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n;\n    int i;\n    int temp;\n    \n    long long int headmove=0;\n    \n    scanf(\"%d\", &n);\n\n    int frag[n];\n    \n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &temp);\n        frag[temp-1]=i;\n    }\n    \n    for(i=0; i<n-1; i++)\n    {\n        if(frag[i]-frag[i+1]>0)\n        {\n            headmove+=(frag[i]-frag[i+1]);\n        }\n        else\n        {\n            headmove+=(frag[i+1]-frag[i]);\n        }\n    }\n    \n    printf(\"%I64d\", headmove);\n    \n    \n    return 0;\n}"}
{"similarity_score": 0.5390070921985816, "equal_cnt": 12, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "c753660dd6da9a727b04059e1d68c493", "bug_code_uid": "f9c46f612c4af2957f0f772855f741bc", "src_uid": "679a1e455073d3ea3856aa16516ba8ba", "apr_id": "2b28f52ceb7beb229ec4ea23f7617a73", "difficulty": 1100, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        char str[100+5];\n        int i,s;\n        scanf(\"%s\",str);\n        s=strlen(str);\n        for(i=0;i<s;i++)\n        {\n            printf(\"01\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        char str[100+5];\n        int i,s,one=0,zero=0;\n        scanf(\"%s\",str);\n        s=strlen(str);\n        for(i=0; i<s; i++)\n        {\n            if(str[i]=='1')\n                one++;\n            else\n                zero++;\n        }\n        if(one==s)\n        {\n            for(i=0; i<s; i++)\n            {\n                printf(\"11\");\n            }\n        }\n        else if(zero==s)\n        {\n            for(i=0; i<s; i++)\n            {\n                printf(\"00\");\n            }\n        }\n            else\n            {\n                for(i=0; i<s; i++)\n                {\n                    printf(\"01\");\n                }\n            }\n            printf(\"\\n\");\n        }\n        return 0;\n    }\n"}
{"similarity_score": 0.3700440528634361, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4d32dd3059548b93917bcf3841feb632", "bug_code_uid": "d37eeb0c388e7147a10d89fe5ebfe757", "src_uid": "1eaff8e0ec4614753699128af74b2471", "apr_id": "4d9bbfb1cdc4377e211a20de0b4d6502", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,i;\n\t    scanf(\"%d\",&n);\n\t    int a[n],arr[n];\n\t     for(i=0;i<n;i++)\n\t     {\n\t         scanf(\"%d\",&a[i]);\n\t     }\n\t     if(n%2==0)\n\t     {\n\t         for(i=0;i<n-1;i++)\n\t         {\n\t             arr[i]=a[i+1];\n\t             arr[i+1]=a[i];\n\t             i++;\n\t         }\n\t         for(i=0;i<n;i++)\n\t               printf(\"%d \",arr[i]);\n\t         printf(\"\\n\");\n\t     }\n\t     else\n\t     {\n\t         int div=n/2;\n\t         int p=0;\n\t         for(i=div;i<n;i++)\n\t         {\n\t                arr[p]=a[i];\n\t                p++;\n\t         }\n\t         for(i=0;i<div;i++)\n\t         {\n\t             arr[p]=a[i];\n\t             p++;\n\t         }\n\t         for(i=0;i<n;i++)\n\t                printf(\"%d \",arr[i]);\n\t         printf(\"\\n\");\n\t                \n\t     }\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,i;\n\t    scanf(\"%d\",&n);\n\t    int a[n],arr[n];\n\t     for(i=0;i<n;i++)\n\t     {\n\t         scanf(\"%d\",&a[i]);\n\t     }\n\t     for(i=n-1;i>=0;i--)\n\t         printf(\"%d \",a[i]);\n\t     printf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4948064211520302, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "3c206453fe90b527ffb5db31b4caa5b1", "bug_code_uid": "bb61a9e69ff00bcb8e72d30ba263fa43", "src_uid": "dc31adef80f06897ea2f5ef76854bcf1", "apr_id": "dcea6e9169faf40cb57e1549fb1d50a7", "difficulty": 1200, "tags": ["implementation", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i,j,n,m,count=1;\n    scanf(\"%d %d\",&n,&m);\n    char board[n][m];\n    for(i=0;i<n;i++)\n    for(j=0;j<m;j++)\n    scanf(\" %c\",&board[i][j]);\n    \n    for(i=0;i<n;i++)\n    {\n    \tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(board[i][j]=='.' && count % 2 == 1)\n\t\t\tboard[i][j]='B';\n\t\t\tif(board[i][j]=='.' && count % 2 == 0)\n\t\t\tboard[i][j]='W';\n\t\t\t++count;\n\t\t}\n\t}\n    for(i=0;i<n;i++)\n    {\n    \tfor(j=0;j<m;j++)\n    \tprintf(\"%c\",board[i][j]);\n    \tprintf(\"\\n\");\n\t}\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,j,n,m;\n    scanf(\"%d %d\",&n,&m);\n    char board[n][m];\n    for(i=0;i<n;i++)\n    for(j=0;j<m;j++)\n    scanf(\" %c\",&board[i][j]);\n    \n    for(i=0;i<n;i++)\n    {\n    \tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(board[i][j]=='.' && i % 2 == 0 )\n\t\t\t{\n\t\t\t\tif(j % 2 == 0)\n\t\t\t\tboard[i][j]='B';\n\t\t\t\telse\n\t\t\t\tboard[i][j]='W';\n\t\t\t}\n\t\t\tif(board[i][j]=='.' && i % 2 == 1)\n\t\t\t{\n\t\t\t\tif(j % 2 == 1)\n\t\t\t\tboard[i][j]='B';\n\t\t\t\telse\n\t\t\t\tboard[i][j]='W';\n\t\t\t}\n\t\t}\n\t}\n    for(i=0;i<n;i++)\n    {\n    \tfor(j=0;j<m;j++)\n    \tprintf(\"%c\",board[i][j]);\n    \tprintf(\"\\n\");\n\t}\n}\n"}
{"similarity_score": 0.47571189279731996, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c5aead13900289fe0b240af690a4a07a", "bug_code_uid": "66dfe4b414a425085cbaa670dac73aab", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "cb4ab589b619d989799bd2cefcc220f2", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar a[101];\n\tint n;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tgets(a);\n\tint cnt=0;\n\tfor (int i=1;i<n;i++){\n\t\tif(a[i-1]==a[i]){\n\t\t\tif(a[i-1]=='a') a[i]='b';\n\t\t\telse a[i]='a';\n\t\t\tcnt++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\n\tfor (int i=0;i<n;i++) printf(\"%c\",a[i]);\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar a[2000000];\n\tint n;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tgets(a);\n\tint cnt=0;\n\tfor (int i=0;i<n;i=i+2){\n\t\tif(a[i]==a[i+1]){\n\t\t\tcnt++;\n\t\t\tif (a[i]=='a') a[i+1]='b';\n\t\t\telse a[i+1]='a';\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\n\tfor (int i=0;i<n;i++) printf(\"%c\",a[i]);\n}"}
{"similarity_score": 0.5104895104895105, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "877a4c3b4533395ff01efd266252b60b", "bug_code_uid": "afd544064be7d813a0cdb2c2c7e601e9", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "9a38126a87e37e02ea7eb897cf77a5c6", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,c=0,m=0;\n    scanf(\"%I64d\",&n);printf(\"%d\",n);\n    for(i=0;n!=0;i++){m=n%10;n/=10;printf(\"%d\",m);}\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){char s[1000000];scanf(\"%s\",s);printf(\"%s\",s);printf(\"%s\",strrev(s));}\n"}
{"similarity_score": 0.830220713073005, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2174e2af5c988d019f07b572286ea0df", "bug_code_uid": "b141b21c1d3fd0d4f8bb5edb857b4803", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "0ea131c72684292ac33962cee99b87ac", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    long long int a,b,c,d;\n    scanf(\"%I64d\",&a);\n    scanf(\"%I64d\",&b);\n    if(b>2*a+2)\n    {\n       printf(\"-1\");\n       return 0;\n    }\n    if(a>b+1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    while(b>a+1)\n    {  // printf(\"*\");\n        printf(\"110\");\n        b=b-2;\n        a=a-1;\n    }\n    if(a>b)\n    { printf(\"0\");\n      a--;\n     }\n     while(a>0&&b>0)\n     {\n         printf(\"10\");\n         a--;\n         b--;\n     }\n     if(a>0)\n        printf(\"0\");\n     if(b>0)\n        printf(\"1\");\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long long int a,b,c,d;\n    scanf(\"%I64d\",&a);\n    scanf(\"%I64d\",&b);\n    if(b>2*a+2)\n    {\n       printf(\"-1\");\n       return 0;\n    }\n    if(a>b+1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    while(b>a+1&&a!=0)\n    {  // printf(\"*\");\n        printf(\"110\");\n        b=b-2;\n        a=a-1;\n    }\n    if(a>b)\n    { printf(\"0\");\n      a--;\n     }\n     while(a>0&&b>0)\n     {\n         printf(\"10\");\n         a--;\n         b--;\n     }\n     while(a>0)\n      {\n          printf(\"0\");\n          a--;\n      }\n     while(b>0)\n       {\n        printf(\"1\");\n        b--;\n       }\n     return 0;\n}\n"}
{"similarity_score": 0.7319098457888493, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "06196df356d2b1e05d639ca0c730104e", "bug_code_uid": "c47dcdc5fc5876d814ea3bf5d273886a", "src_uid": "468e8a14dbdca471f143f59b945508d0", "apr_id": "58a0c688c33b8e6ceb287025e92c8144", "difficulty": 1500, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint rst[100005] = {0};\nint chg[100005] = {0};\nint m, n =0;\nint i,j = 0;\nint bak[100005] = {0};\n\nint main (void)\n{\n    scanf(\"%d%d\",&n,&m);\n\n    for(i=0;i<=n-1;i++){scanf(\"%d\",&chg[i]);}\n\n    for(i=0;i<=m-1;i++){scanf(\"%d\",&rst[i]);}\n\n    int amb = 0;\n    int pos = 1;\n\n    for(i=0;i<=m-1;i++)\n    {\n        int times = 0;\n        for(j=0;j<=n-1;j++)\n        {\n            if(chg[j]==rst[i])\n               {times++;\n                bak[i]=j+1;}\n        }\n        if(times == 0){pos = 0;}\n        if(times > 1){amb = 1;}\n    }\n\n    if(pos == 0){printf(\"Impossible\");}\n    \n    else if(amb == 1){printf(\"Ambiguity\");}\n\n    else if(pos == 1)\n    {\n        printf(\"Possible\\n\");\n        for(i=0;i<=m-1;i++){printf(\"%d \",bak[i]);}\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint rst[100005] = {0};\nint chg[100005] = {0};\nint m, n =0;\nint i,j = 0;\nint bak[100005] = {0};\nint rep[100005] = {0};\n\nint main (void)\n{\n    scanf(\"%d%d\",&n,&m);\n\n    for(i=0;i<=n-1;i++)\n    {\n            scanf(\"%d\",&chg[i]);\n            bak[chg[i]]=i+1;\n            rep[chg[i]]++;\n    }\n\n    for(i=0;i<=m-1;i++){scanf(\"%d\",&rst[i]);}\n\n    int amb = 0;\n    int pos = 1;\n\n    for(i=0;i<=m-1;i++)\n    {\n        if(bak[rst[i]])\n        {\n            if(rep[rst[i]]>1)\n            {\n                amb = 1;\n            }\n        }\n        else{pos = 0;}\n    }\n\n    if(pos == 0){printf(\"Impossible\");}\n\n    else if(amb == 1){printf(\"Ambiguity\");}\n\n    else if(pos == 1)\n    {\n        printf(\"Possible\\n\");\n        for(i=0;i<=m-1;i++){printf(\"%d \",bak[rst[i]]);}\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9192708333333334, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0d80a37a4a852891dd22fc94c3d56d20", "bug_code_uid": "33e5a6761b296f095f9efa88e1104af3", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "0c46d681cfb1a3a95d09a90029269e31", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n, i;\n    int pc;\n    scanf(\"%d\", &n);\n    if(n==2){\n        printf(\"2\");\n    }\n    else if(n%2 != 0){\n    pc = (n/2) - 1;\n    for(i=1;i<=pc;i++){\n        printf(\"2 \");\n    }\n    printf(\"3\");\n    }\n    else{\n            pc = n/2;\n        for(i=1;i<=pc;i++){\n            printf(\"2 \");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n, i;\n    int pc;\n    scanf(\"%d\", &n);\n    if(n==2){\n        printf(\"1\\n2 \");\n    }\n    else if(n%2 != 0){\n    pc = (n/2) - 1;\n    printf(\"%d\\n\",pc+1);\n    for(i=1;i<=pc;i++){\n        printf(\"2 \");\n    }\n    printf(\"3\");\n    }\n    else{\n            pc = n/2;\n            printf(\"%d\\n\",pc);\n        for(i=1;i<=pc;i++){\n            printf(\"2 \");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3239524702939337, "equal_cnt": 18, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 9, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "5a912217c45f6ef8043180208bc566f0", "bug_code_uid": "6fc8f17c91b1aadb9a20a98c222d90fb", "src_uid": "51f922bb2c51f50b5c3b55725dd7766e", "apr_id": "25425c5d8b9a9f34cc2d4c9d8a94bf52", "difficulty": 1100, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n\n{\n    int n,m,t,i,j,sum,k,min;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d %d\",&n,&m);\n\n        int x[n];\n\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&x[i]);\n\n            for(j=0;j<n;j++)\n     {\n       min=j;\n\n       for(i=j+1;i<n;i++)\n       {\n           if(x[i]<x[min])\n           {\n               min=i;\n           }\n       }\n            k=x[min];\n           x[min]=x[j];\n           x[j]=k;\n\n        }\n\n\n        sum=0;\n        for(i=0;i<n;i++)\n        {\n            sum=sum+x[i];\n        }\n\n        k=n;\n\n\n        for(i=0;i<n;i++)\n        {\n            if(sum/k>=m) {printf(\"%d\\n\",k); break;}\n\n        sum=sum-x[i]; k--;\n        }\n\n        if(i==n) printf(\"0\\n\");\n}\n}\n\n", "fixed": "#include<stdio.h>\n\n\nvoid merge(long long int x[],long long int l,long long int m,long long int h)\n{  long long int i=l, j=m+1, k=l, y[h+1];\n    while(i<=m&&j<=h)\n    { if(x[i]<=x[j]) y[k++]=x[i++]; else y[k++]=x[j++];}\n    while(j<=h) y[k++]=x[j++]; while(i<=m) y[k++]=x[i++];\n    for(i=l;i<=h;i++)  x[i]=y[i]; }\n\nvoid sort(long long int x[],long long int l,long long int h)\n{    if(l<h) { long long int m=(l+h)/2;\n   sort(x,l,m);  sort(x,m+1,h);  merge(x,l,m,h);} }\n\n\nint main()\n\n{\n    long long int n,m,t,i,j,k,max,c;\n\n\n\n    scanf(\"%lld\",&t);\n\n    while(t--)\n    {\n        double sum=0;\n        scanf(\"%lld %lld\",&n,&m);\n\n        long long int x[n];\n\n        for(i=0;i<n;i++)\n            scanf(\"%lld\",&x[i]);\n\n            sort(x,0,n-1);\n\n         for(i=n-1,c=0;i>-1;i--)\n     {\n          sum+=x[i];\n          if(sum/(n-i)>=m)  c++;\n     }\n\n        printf(\"%lld\\n\",c);\n}\n}\n"}
{"similarity_score": 0.4416243654822335, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "035dfae253a0a5402701f6379e2b1440", "bug_code_uid": "a5cad815c678293e33659282891374db", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "a8687c1a9dc0ed3f2b64bb74c986d00f", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int n,N,d;\n    char s[102];\n    scanf(\"%d\",&N);\n    getchar();\n    while(N--)\n    {\n        gets(s);\n        d=strlen(s);\n        n=d-2;\n        if(d<10)\n            printf(\"%s\\n\",s);\n        else\n            printf(\"%c%d%c\\n\",s[0],n,s[d-1]);\n    }\n    return 0;\n}\n\n\t   \t\t\t  \t\t   \t\t\t\t \t  \t \t\t \t\t\t\t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int n,i,m;\n    char s[9999];\n    while(~scanf(\"%d\",&n))\n    {\n        getchar();\n        for(i=0; i<n; i++)\n        {\n            gets(s);\n            m=strlen(s);\n            if(m<=10)\n                printf(\"%s\\n\",s);\n            else\n                printf(\"%c%d%c\\n\",s[0], m-2,s[m-1]);\n        }\n    }\n}\n\n\t  \t       \t\t  \t \t\t\t\t\t \t\t\t   \t"}
{"similarity_score": 0.6424474187380497, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "223a967c7c32ad8d59a14ee1b829cf05", "bug_code_uid": "943880cfb341cc5d4e57b5b8056ea1e4", "src_uid": "fbde86a29f416b3d83bcc63fb3776776", "apr_id": "726593ffe590c0efb2a8c4846a56a96f", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main ()\n{\n    int n,i;\n    printf(\"enter no\")\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++)\n    {\n        if(i%3==1)\n        printf(\"a\");\n        else if(i%3==2)\n        printf(\"b\");\n        else\n        printf(\"c\");\n    }\n}", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++)\n    {\n        if(i%4==1)\n        printf(\"a\");\n        else if(i%4==2)\n        printf(\"a\");\n        else if(i%4==3)\n        printf(\"b\");\n        else\n        printf(\"b\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.8598382749326146, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1201e6606795724ffeb47ead00199a6c", "bug_code_uid": "832a217e42128daf92e984bef037c7b1", "src_uid": "fce6d690c2790951f7e04c622c3c2d44", "apr_id": "fbc9548af4f82712a00c86005dab6e9b", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n   int n;\r\n   scanf(\"%d\",&n);\r\n   while(n--){\r\n     float d;\r\n     int x,y,f;\r\n     scanf(\"%d %d\",&x,&y);\r\n     \r\n     d=sqrt(x*x+y*y);\r\n     f=d;\r\n     if(f==d){\r\n       printf(\"1\\n\");\r\n     }\r\n     else if(f==0){\r\n       printf(\"0\\n\");\r\n     }\r\n     else{\r\n       printf(\"2\\n\");\r\n     }\r\n     \r\n   }\r\n   return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n   int n;\r\n   scanf(\"%d\",&n);\r\n   while(n--){\r\n     float d;\r\n     int x,y,f;\r\n     scanf(\"%d %d\",&x,&y);\r\n     \r\n     d=sqrt(x*x+y*y);\r\n     f=d;\r\n     if(f==0){\r\n       printf(\"0\\n\");\r\n     }\r\n     else if(f==d){\r\n       printf(\"1\\n\");\r\n     }\r\n     else{\r\n       printf(\"2\\n\");\r\n     }\r\n     \r\n   }\r\n   return 0;\r\n}"}
{"similarity_score": 0.9958592132505176, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ff5d318d8aa24d33a462766df32ca649", "bug_code_uid": "78e3d47e8f2cd7a001e0597eb398ec3d", "src_uid": "db4a25159067abd9e3dd22bc4b773385", "apr_id": "38fb959330a4164b70a98e7cfc1894e1", "difficulty": 900, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    double a[100][2],b,c,d,dist,p;\n    int i,j,n,k;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%lf\",&a[i][j]);\n        }\n    }\n    dist=0;\n    for(i=0;i<n-1;i++)\n    {\n        b=(a[i][0]-a[i+1][0])*(a[i][0]-a[i+1][0]);\n        c=(a[i][1]-a[i+1][1])*(a[i][1]-a[i+1][1]);\n        d=b+c;\n        dist=dist+sqrt(d);\n    }\n    p=dist/50;\n    printf(\"%lf\",p);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    double a[100][2],b,c,d,dist,p;\n    int i,j,n,k;\n    scanf(\"%d%d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<2;j++)\n        {\n            scanf(\"%lf\",&a[i][j]);\n        }\n    }\n    dist=0;\n    for(i=0;i<n-1;i++)\n    {\n        b=(a[i][0]-a[i+1][0])*(a[i][0]-a[i+1][0]);\n        c=(a[i][1]-a[i+1][1])*(a[i][1]-a[i+1][1]);\n        d=b+c;\n        dist=dist+sqrt(d);\n    }\n    p=(dist/50)*k;\n    printf(\"%lf\",p);\n    return 0;\n}\n"}
{"similarity_score": 0.9887096774193549, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7af537055930609f100316b5d419672e", "bug_code_uid": "f687c013922e4a65edf3ee46c5219991", "src_uid": "5993b5bf231fabd3c2af90124c41f118", "apr_id": "93ad8d0ecf913e459eb3fe4ee01ddfbd", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int i,j,m,n,k;\n    long long int l;\n    scanf(\"%I64d\", &m);\n    long long int a[m];\n    for(i=0;i<m;i++){\n        if(m<1||m>200000)break;\n        scanf(\"%I64d\", &a[i]);\n    }\n    l=0;\n    for(i=m-1;i>=0;i--){\n        if(m<1||m>200000)break;\n        if(a[i]<1||a[i]>1000000000)break;\n        if(a[i+1]>a[i]&&i!=m-1)a[i]=a[i];\n        else if(a[i]>a[i+1]&&a[i+1]!=0&&i!=m-1)a[i]=a[i+1]-1;\n        else if(a[i]==a[i+1]&&a[i+1]!=0&&i!=m-1)a[i]=a[i]-1;\n        else if(a[i+1]==0&&i!=m-1)a[i]=0;\n        l=l+a[i];\n        if(i==0&&l<2147483647)printf(\"%I64d\\n\", l);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int i,j,m,n,k;\n    long long int l;\n    scanf(\"%I64d\", &m);\n    long long int a[m];\n    for(i=0;i<m;i++){\n        if(m<1||m>200000)break;\n        scanf(\"%I64d\", &a[i]);\n    }\n    l=0;\n    for(i=m-1;i>=0;i--){\n        if(m<1||m>200000)break;\n        if(a[i]<1||a[i]>1000000000)break;\n        if(a[i+1]>a[i]&&i!=m-1)a[i]=a[i];\n        else if(a[i]>a[i+1]&&a[i+1]!=0&&i!=m-1)a[i]=a[i+1]-1;\n        else if(a[i]==a[i+1]&&a[i+1]!=0&&i!=m-1)a[i]=a[i]-1;\n        else if(a[i+1]==0&&i!=m-1)a[i]=0;\n        l=l+a[i];\n        if(i==0)printf(\"%I64d\\n\", l);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9975460122699387, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "50adf8881bd96c7907839629153d8eed", "bug_code_uid": "aa8d68d20897f3c5f74b7cd533c381d7", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "db663506a1d8716eca29dfdcc002afaf", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n   char s1[1001],s2[1001];\n   int i,flg=0;\n   gets(s1);//(s1,1001,stdin);\n   gets(s2);//(s2,1001,stdin);\n   int l=strlen(s1)-1;\n   int m=strlen(s2)-1;\n    \n   if (l==m)\n   {\n      for (i=0;i<l;i++)\n      {\n        \n         if ((s1[i]=='a'||s1[i]=='e'||s1[i]=='i'||s1[i]=='o'||s1[i]=='u') && (s2[i]=='a'||s2[i]=='e'||s2[i]=='i'||s2[i]=='o'||s2[i]=='u'))\n          flg++;\n         else\n          {  if (!(s1[i]=='a'||s1[i]=='e'||s1[i]=='i'||s1[i]=='o'||s1[i]=='u') && !(s2[i]=='a'||s2[i]=='e'||s2[i]=='i'||s2[i]=='o'||s2[i]=='u'))\n              flg++;\n              else\n              { flg=0; break;}\n           }\n      }\n      if (flg==0)\n              printf(\"NO\");\n           else \n              printf(\"YES\");}\n   else \n      printf(\"NO\");\n    \nreturn 0;\n}\n   \n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n   char s1[1001],s2[1001];\n   int i,flg=0;\n   gets(s1);//(s1,1001,stdin);\n   gets(s2);//(s2,1001,stdin);\n   int l=strlen(s1);\n   int m=strlen(s2);\n    \n   if (l==m)\n   {\n      for (i=0;i<l;i++)\n      {\n        \n         if ((s1[i]=='a'||s1[i]=='e'||s1[i]=='i'||s1[i]=='o'||s1[i]=='u') && (s2[i]=='a'||s2[i]=='e'||s2[i]=='i'||s2[i]=='o'||s2[i]=='u'))\n          flg++;\n         else\n          {  if (!(s1[i]=='a'||s1[i]=='e'||s1[i]=='i'||s1[i]=='o'||s1[i]=='u') && !(s2[i]=='a'||s2[i]=='e'||s2[i]=='i'||s2[i]=='o'||s2[i]=='u'))\n              flg++;\n              else\n              { flg=0; break;}\n           }\n      }\n      if (flg==0)\n              printf(\"NO\");\n           else \n              printf(\"YES\");}\n   else \n      printf(\"NO\");\n    \nreturn 0;\n}\n   \n"}
{"similarity_score": 0.9943995021779714, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d1a94de8e35dadd5dc7e94ff06b14af4", "bug_code_uid": "e90533283d77296ef47bc75faaa1ad85", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "e9cdba7b5003f786435f8a083c64c1e8", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint a,b,c,d=0,e=0,f=0,j=0,k,x=0,y=0,z=0,w=0,r=0,t=0;\n\tscanf(\"%d\",&a);\n\tint s[a];\n\tint i;\n\tfor(i=1;i<=a;i++)\n\t{\n\t\tscanf(\"%d\",&s[i]);\n\t\tif(s[i]==1)\n\t\t{\n\t\t\td++;\n\t\t\t}\n\t\t\telse if(s[i]==2)\n\t\t{\n\t\t\te++;\n\t\t\t}else\n\t\t\t{\n\t\t\t\tf++;\n\t\t\t}\n\t\t\t\n\t}\n\tif(d==0||e==0||f==0)\n\t{\n\t\tprintf(\"0\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\tif(d<=f&&d<=e)\n\t\t\t\t{ j=d;\n\t\t\t\t\tprintf(\"%d\\n\",d);\n\t\t}else if(e<=f&&e<=d)\n\t\t{ j=e;\n\t\t\tprintf(\"%d\\n\",e);\n\t\t}else\n\t\t{j=f;\n\t\t\tprintf(\"%d\\n\",f);\n\t\t}for(k=j;k!=0;k--)\n\t\t{ for(i=1;i<=a;i++)\n\t\t {\n\t\t \tif(s[i]==1&&x==0&&i!=w)\n\t\t \t{ x=1;\n\t\t \t\tw=i;\n\t\t \t\tprintf(\"%d \",i);\n\t\t \t}else if(s[i]==2&&y==0&&i!=r)\n\t\t \t{ y=1;\n\t\t \t\tr=i;\n\t\t \t\tprintf(\"%d \",i);\n\t\t \t}else if(s[i]==3&&z==0&&i!=t)\n\t\t \t{ z=1;\n\t\t \t\tt=i;\n\t\t \t\tprintf(\"%d \",i);\n\t\t \t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tx=0;\n\t\ty=0;\n\t\tz=0;\n\t\t}\n\t\t}\n\t\treturn 0;\n\t\t}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint a,b,c,d=0,e=0,f=0,j=0,k,x=0,y=0,z=0,w=0,r=0,t=0;\n\tscanf(\"%d\",&a);\n\tint s[a];\n\tint i;\n\tfor(i=1;i<=a;i++)\n\t{\n\t\tscanf(\"%d\",&s[i]);\n\t\tif(s[i]==1)\n\t\t{\n\t\t\td++;\n\t\t\t}\n\t\t\telse if(s[i]==2)\n\t\t{\n\t\t\te++;\n\t\t\t}else\n\t\t\t{\n\t\t\t\tf++;\n\t\t\t}\n\t\t\t\n\t}\n\tif(d==0||e==0||f==0)\n\t{\n\t\tprintf(\"0\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\tif(d<=f&&d<=e)\n\t\t\t\t{ j=d;\n\t\t\t\t\tprintf(\"%d\\n\",d);\n\t\t}else if(e<=f&&e<=d)\n\t\t{ j=e;\n\t\t\tprintf(\"%d\\n\",e);\n\t\t}else\n\t\t{j=f;\n\t\t\tprintf(\"%d\\n\",f);\n\t\t}for(k=j;k!=0;k--)\n\t\t{ for(i=1;i<=a;i++)\n\t\t {\n\t\t \tif(s[i]==1&&x==0&&i>w)\n\t\t \t{ x=1;\n\t\t \t\tw=i;\n\t\t \t\tprintf(\"%d \",i);\n\t\t \t}else if(s[i]==2&&y==0&&i>r)\n\t\t \t{ y=1;\n\t\t \t\tr=i;\n\t\t \t\tprintf(\"%d \",i);\n\t\t \t}else if(s[i]==3&&z==0&&i>t)\n\t\t \t{ z=1;\n\t\t \t\tt=i;\n\t\t \t\tprintf(\"%d \",i);\n\t\t \t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tx=0;\n\t\ty=0;\n\t\tz=0;\n\t\t}\n\t\t}\n\t\treturn 0;\n\t\t}\n"}
{"similarity_score": 0.3148936170212766, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "b5ea82ca886e85fb422265a113d7001f", "bug_code_uid": "3a5073f74384776f604fb46b782b3173", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "f4321ebf5e177c4ea8ba905425e54a14", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,i;\n\n    scanf(\"%d\",&n);\n    int a[n];\n    double s=0,r;\n    double b[n];\n\n    for(i=0;i<n;i++){\n       scanf(\"%d\",&a[i]);\n    }\n\n   double max=100.00;\n\n\n    //for(i=0;i<n;i++){\n       // printf(\"%d\\n\",a[i]);\n\n    for(i=0;i<n;i++){\n        b[i]=(a[i]/max);\n        s=s+b[i];\n    }\n\n\n    r=(s/n);\n\n    printf(\"%.12lf\",r*100);\n\n    return 0;\n}\n", "fixed": "   \n    #include <stdio.h>\n\n    int main()\n    {\n        int n;\n        scanf(\"%d\", &n);\n\n        float a[n],s = 0;\n        int i;\n\n        for(i = 0; i < n; i++)\n        {\n            scanf(\"%f\", &a[i]);\n            s = s + a[i];\n        }\n\n        double j = s/n;\n        printf(\"%.12f\", j);\n\n        return 0;\n    }\n\n\n"}
{"similarity_score": 0.1651376146788991, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "dcc081aea7f03bf5427371ff3676b0f2", "bug_code_uid": "b4d0efb83e1c25412bbb31913259e577", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "dfe1531ef1881073c471318495d19a56", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\n/*long int check(long int *arr, long int a, long int b,long int n)\n{\n\n\n    long int x= a^b;\n    long int i;\n    for(i=0;i<n;i++)\n        if(arr[i]==x)\n        return 1;\n\n\n\n    if(i==n)\n        return 0;\n\n} */\nint main()\n{\n    long int n;\n    scanf(\"%ld\",&n);\n\n    long int *a=(long int *)malloc(n*sizeof(long int));\n    long int *b=(long int *)malloc(n*sizeof(long int));\n\n    int i;\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&a[i]);\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&b[i]);\n   /* int j,count=0;\n    for(i=0;i<n;i++)\n        for(j=0;j<n;j++)\n        if(check(a,a[i],b[j],n)==1||check(b,a[i],b[j],n)==1)\n           count++; */\n\n\n        printf(\"Karen \\n\");\n\n\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{   FILE* ifp, * ofp;\n    int n,m,i;\n\n    ifp = fopen(\"input.txt\",\"r\");\n    ofp = fopen(\"output.txt\",\"a\");\n    fscanf(ifp,\"%d %d\", &n,&m);\n\n\n    if(n>=m)\n    {\n        for(i=0;i<m;i++)\n            fprintf(ofp,\"BG\");\n        for(i=0;i<n-m;i++)\n            fprintf(ofp,\"B\");\n    }\n\n    else if(n<m)\n    {\n        for(i=0;i<n;i++)\n            fprintf(ofp,\"GB\");\n        for(i=0;i<m-n;i++)\n            fprintf(ofp,\"G\");\n    }\n\n}\n"}
{"similarity_score": 0.9448441247002398, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "3efbbb81d996c6c9012fe1f9859c0bef", "bug_code_uid": "c8d0e7e1c7e2e4dfd4bba9e66daf5f93", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "e3bee2cf606a07f566d84c65b2f04c06", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,c,d,e,sum=0;\n\tscanf(\"%d\",&n);\n\te=n;\n\twhile(e--)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tsum+=a;\n\t}\n\tscanf(\"%d%d\",&b,&c);\n\tn=n-2;\n\tif(b>c)\n\t{\n\t\tint t=b;\n\t\tb=c;\n\t\tc=t;\n\t}\n\twhile(n--)\n\t{\n\t\tscanf(\"%d\",&d);\n\t\tif(d>b)\n\t\t{\n\t\t\tb=d;\n\t\t}\n\t\telse if(d>c)\n\t\t{\n\t\t\tc=d;\n\t\t}\n\t\t\tif(b>c)\n\t{\n\t\tint t=b;\n\t\tb=c;\n\t\tc=t;\n\t}\n\t}\n\tif(sum<=b+c)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,e;\n\t__int64 a,b,c,d,sum=0;\n     scanf(\"%d\",&n);\n\te=n;\n\twhile(e--)\n\t{\n\t\tscanf(\"%I64d\",&a);\n\t\tsum+=a;\n\t}\n\tscanf(\"%I64d%I64d\",&b,&c);\n\tn=n-2;\n\tif(b>c)\n\t{\n\t\tint t=b;\n\t\tb=c;\n\t\tc=t;\n\t}\n\twhile(n--)\n\t{\n\t\tscanf(\"%I64d\",&d);\n\t\tif(d>b)\n\t\t{\n\t\t\tb=d;\n\t\t}\n\t\telse if(d>c)\n\t\t{\n\t\t\tc=d;\n\t\t}\n\t\t\tif(b>c)\n\t{\n\t\tint t=b;\n\t\tb=c;\n\t\tc=t;\n\t}\n\t}\n\tif(sum<=b+c)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n"}
