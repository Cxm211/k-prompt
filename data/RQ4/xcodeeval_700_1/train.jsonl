{"similarity_score": 0.9978813559322034, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b5468f8d18ad03438ef56c3a70da31b7", "bug_code_uid": "a5f2670f7e5fb933fad80310427d40c0", "src_uid": "3053cba2426ebd113fcd70a9b026dad0", "apr_id": "932725712331e00285c29e2fecc3595d", "difficulty": 1300, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i=1,j,a,b,k,l,n,count1=0,count2=0;\n\tscanf(\"%d\",&n);\n\tchar arr[n];\n\tscanf(\"%s\",arr);\n\twhile(i<n)\n\t{\n\t    if(arr[i]=='R')\n\t    {\n\t    \tif(count1==0)\n\t    \ta=i;\n\t    \tcount1++;\n\t\t}\n\telse if(arr[i]=='L')\n\t\t{\n\t\t\tif(count2==0)\n\t\t\tb=i;\n\t\t\tcount2++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif(count2==0)\n\t{\n\t\tl=a+count1+1;\n\t\tprintf(\"%d %d\",++a,l);\n\t}\n\telse if(count1==0)\n\t{\n\t\tl=b+count2;\n\t\tprintf(\"%d %d\",l,++b);\n\t}\n\telse\n\t{\n\t\tl=a+count1;\n\t\tprintf(\"%d %d\",++a,l);\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i=1,j,a,b,k,l,n,count1=0,count2=0;\n\tscanf(\"%d\",&n);\n\tchar arr[n];\n\tscanf(\"%s\",arr);\n\twhile(i<n)\n\t{\n\t    if(arr[i]=='R')\n\t    {\n\t    \tif(count1==0)\n\t    \ta=i;\n\t    \tcount1++;\n\t\t}\n\telse if(arr[i]=='L')\n\t\t{\n\t\t\tif(count2==0)\n\t\t\tb=i;\n\t\t\tcount2++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tif(count2==0)\n\t{\n\t\tl=a+count1+1;\n\t\tprintf(\"%d %d\",++a,l);\n\t}\n\telse if(count1==0)\n\t{\n\t\tl=b+count2;\n\t\tprintf(\"%d %d\",l,b);\n\t}\n\telse\n\t{\n\t\tl=a+count1;\n\t\tprintf(\"%d %d\",++a,l);\n\t}\n}"}
{"similarity_score": 0.9986876640419947, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e7988ba43c7b879725fd7cb310dd12c4", "bug_code_uid": "db5943c53e8bdc74f9a9af0de2e5b466", "src_uid": "50e88225d8b081d63eebe446f48057f4", "apr_id": "51807fa958e69fc5ac9b9d8fb206b671", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(void){\n  int *coins,i,n,p,remain,flg=0;\n  scanf(\"%d\",&n);\n  coins=(int *)calloc(n,sizeof(int));\n  for(i=0;i<n;i++){\n    scanf(\"%d\",&coins[i]);\n    if(coins[i]) remain++;\n  }\n  \n  while(remain){\n    for(p=0;p<n;p++){\n      if(coins[p]){\n\tputchar('P');\n\tcoins[p]--;\n\tif(!coins[p]) remain--;\n      }\n      if(!remain) flg=1;\n      if(flg) break;\n      if(p<n-1) putchar('R');\n      else printf(\"LR\");\n    }\n    if(flg) break;\n    \n    for(p=n-1;p>=0;p--){\n      if(coins[p]){\n\tputchar('P');\n\tcoins[p]--;\n\tif(!coins[p]) remain--;\n      }\n      if(!remain) flg=1;\n      if(flg) break;\n      if(p>0) putchar('L');\n      else printf(\"RL\");\n    }\n    if(flg) break;\n  }\n  putchar('\\n');\n  free(coins);\n  return 0;\n}\n  \n  \n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(void){\n  int *coins,i,n,p,remain=0,flg=0;\n  scanf(\"%d\",&n);\n  coins=(int *)calloc(n,sizeof(int));\n  for(i=0;i<n;i++){\n    scanf(\"%d\",&coins[i]);\n    if(coins[i]) remain++;\n  }\n  \n  while(remain){\n    for(p=0;p<n;p++){\n      if(coins[p]){\n\tputchar('P');\n\tcoins[p]--;\n\tif(!coins[p]) remain--;\n      }\n      if(!remain) flg=1;\n      if(flg) break;\n      if(p<n-1) putchar('R');\n      else printf(\"LR\");\n    }\n    if(flg) break;\n    \n    for(p=n-1;p>=0;p--){\n      if(coins[p]){\n\tputchar('P');\n\tcoins[p]--;\n\tif(!coins[p]) remain--;\n      }\n      if(!remain) flg=1;\n      if(flg) break;\n      if(p>0) putchar('L');\n      else printf(\"RL\");\n    }\n    if(flg) break;\n  }\n  putchar('\\n');\n  free(coins);\n  return 0;\n}\n  \n  \n"}
{"similarity_score": 0.781021897810219, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "07dcae02e5da9d4e3ac95113607d7aa7", "bug_code_uid": "51ec89be4f0dd00b0749a77b36a1baf1", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "2523cbe94872f9a26de5cc02538046cd", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint t;\n\tint n,k,i,x,y,max=-90000;\n\tscanf(\"%d %d\",&n,&k);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&y,&x);\n\t\tif(x>k)\n\t\t\tt=y-x+k;\n\t\telse\n\t\t\tt=y;\n\t\tif(t>max)\n\t\t\tmax=t;\n\t}\n\tprintf(\"%d\",max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint t;\n\tint n,k,i,x,y,max;\n\tscanf(\"%d %d\",&n,&k);\n\tscanf(\"%d %d\",&y,&x);\n\tif(x>k)\n\t\tt=y-x+k;\n\telse\n\t\tt=y;\n\tmax=t;\n\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&y,&x);\n\t\tif(x>k)\n\t\t\tt=y-x+k;\n\t\telse\n\t\t\tt=y;\n\t\tif(t>max)\n\t\t\tmax=t;\n\t}\n\tprintf(\"%d\",max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.2904808635917566, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "d70946da889a0fa237f55f9a2beaadc2", "bug_code_uid": "e9b11a7cf724a88e88b366f716fe734a", "src_uid": "5278cb48aca6fc84e2df393cd8723ecb", "apr_id": "998c9fc32beb3ebf36d5041c059ee4f2", "difficulty": 900, "tags": ["brute force", "dp", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tchar arr[100];\r\n\t\tscanf(\"%s\", arr);\r\n\t\tint rs = 0;\r\n\t\tif (n == 1)\r\n\t\t{\r\n\t\t\tprintf(\"%d\\n\", rs);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (int i = n - 1; i >= 1; i--)\r\n\t\t{\r\n\t\t\t//\u5934\u4e3a0\u7684\u65f6\u5019\u4e0d\u7528\u6539,\u5e94\u4e3a\u8981\u4e0d\u9012\u51cf\r\n\t\t\tif (i == n - 1)\r\n\t\t\t{\r\n\t\t\t\tif (arr[n - 1] ==1)\r\n\t\t\t\t{\r\n\t\t\t\t\trs++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (arr[i]!=arr[i + 1])\r\n\t\t\t{\r\n\t\t\t\trs++;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", rs);\r\n\r\n\t}\r\n\r\n\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tchar arr[n];\r\n\t\tscanf(\"%s\", arr);\r\n\t\tint cur = 0;\r\n\t\tif (n == 1)\r\n\t\t{\r\n\t\t\tprintf(\"%d\\n\", cur);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (int i = 0; i <n-1; i++)\r\n\t\t{\r\n\t\t\tint tmp1 = arr[i] - '0';\r\n\t\t\tint tmp2 = arr[i + 1] - '0';\r\n\t\t\tif ((tmp1 + cur) % 2 > (tmp2 + cur) % 2)\r\n\t\t\t{\r\n\t\t\t\tcur++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", cur);\r\n\r\n\t}\r\n\r\n\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9834254143646409, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dd50a03c51475366e809d7a50393fce4", "bug_code_uid": "12dc3e166ac83e536ca0474db0b51ce3", "src_uid": "5d5dfa4f129bda46055fb636ef33515f", "apr_id": "f6fb6692641a46f48db0b70c72cd7d3c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define P 1000000000\n\nint main() {\n\tstatic char used[P];\n\tint n, p, i;\n\n\tscanf(\"%d%d\", &p, &n);\n\tfor (i = 1; i <= n; i++) {\n\t\tint a;\n\n\t\tscanf(\"%d\", &a);\n\t\tif (used[a % p])\n\t\t\tbreak;\n\t\tused[a % p] = 1;\n\t}\n\tprintf(\"%d\\n\", i == n + 1 ? -1 : i);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define P 300\n\nint main() {\n\tstatic char used[P];\n\tint n, p, i;\n\n\tscanf(\"%d%d\", &p, &n);\n\tfor (i = 1; i <= n; i++) {\n\t\tint a;\n\n\t\tscanf(\"%d\", &a);\n\t\tif (used[a % p])\n\t\t\tbreak;\n\t\tused[a % p] = 1;\n\t}\n\tprintf(\"%d\\n\", i == n + 1 ? -1 : i);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8180535966149506, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "d29568ab82c01510f3ac80fc116264bd", "bug_code_uid": "3145c42233b5a68405aa83c8357cc791", "src_uid": "74095fe82bd22257eeb97e1caf586499", "apr_id": "40bf850d450ea4da15d8253235892d01", "difficulty": 1500, "tags": ["dp", "implementation", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint X[200002];\nint M1[200002];\nint M2[200002];\nlong long int S1[200002], S2[200002];\n\nint main() {\n\tint n, k;\n\tscanf(\"%d %d\\n\", &n, &k);\n\tint i = 0;\n\t\n\tfor (i = 0 ; i < n; i++) {\n\t\tscanf(\"%d\", &X[i]);\n\t}\n\tS1[0] = X[0];\n\tM1[0] = 0;\n\tfor (i = 1; i < n; i++) {\n\t\tif (i < k) {\n\t\t\tS1[i] = S1[i-1] + X[i];\n\t\t\tM1[i] = i;\n\t\t}\n\t\telse {\n\t\t\tif (X[i] > X[i - k]) {\n\t\t\t\tS1[i] = S1[i-1] + X[i] - X[i-k];\n\t\t\t\tM1[i] = i;\n\t\t\t} else {\n\t\t\t\tS1[i] = S1[i-1];\n\t\t\t\tM1[i] = M1[i-1];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tM2[n-1] = n-1;\n\tS2[n-1] = X[n-1];\n\tfor (i = n-2; i >= 0; i--) {\n\t\tif (i >= n-k) {\n\t\t\tS2[i] = S2[i+1] + X[i];\n\t\t\tM2[i] = i;\n\t\t}\n\t\telse {\n\t\t\tif (X[i] >= X[i + k]) {\n\t\t\t\tS2[i] = S2[i+1] + X[i] - X[i+k];\n\t\t\t\tM2[i] = i;\n\t\t\t} else {\n\t\t\t\tS2[i] = S2[i+1];\n\t\t\t\tM2[i] = M2[i+1];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong long int Max = 0;\n\tint s = -1;\n\tfor (i = k-1; i < n - k; i++) {\n\t\tif (S1[i] + S2[i+1] > Max) {\n\t\t\ts = i;\n\t\t\tMax = S1[i] + S2[i+1];\n\t\t}\n\t}\n\t\n\tprintf(\"%d %d\\n\", M1[s] - k + 2, M2[s+1] + 1);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint X[200002];\nint M1[200002];\nint M2[200002];\nlong long int S1[200002], S2[200002];\n\nint main() {\n\tint n, k;\n\tscanf(\"%d %d\\n\", &n, &k);\n\tint i = 0;\n\t\n\tfor (i = 0 ; i < n; i++) {\n\t\tscanf(\"%d\", &X[i]);\n\t}\n\tS1[0] = X[0];\n\tM1[0] = 0;\n\tlong long int SS = X[0];\t\n\tfor (i = 1; i < n; i++) {\n\t\tif (i < k) {\n\t\t\tS1[i] = S1[i-1] + X[i];\n\t\t\tM1[i] = i;\n\t\t\tSS = SS + X[i];\n\t\t}\n\t\telse {\n\t\t\tif (SS + X[i] - X[i-k] > S1[i-1]) {\n\t\t\t\tS1[i] = SS + X[i] - X[i-k];\n\t\t\t\tM1[i] = i;\n\t\t\t} else {\n\t\t\t\tS1[i] = S1[i-1];\n\t\t\t\tM1[i] = M1[i-1];\n\t\t\t}\n\t\t\t\n\t\t\tSS = SS + X[i] - X[i-k];\n\t\t}\n\t}\n\t\n\tM2[n-1] = n-1;\n\tS2[n-1] = X[n-1];\n\tSS = X[n-1];\n\tfor (i = n-2; i >= 0; i--) {\n\t\tif (i >= n-k) {\n\t\t\tS2[i] = S2[i+1] + X[i];\n\t\t\tSS = SS + X[i];\n\t\t\tM2[i] = i;\n\t\t}\n\t\telse {\n\t\t\tif (SS + X[i] - X[i+k] >= S2[i+1]) {\n\t\t\t\tS2[i] = SS + X[i] - X[i+k] ;\n\t\t\t\tM2[i] = i;\n\t\t\t} else {\n\t\t\t\tS2[i] = S2[i+1];\n\t\t\t\tM2[i] = M2[i+1];\n\t\t\t}\n\t\t\tSS = SS + X[i] - X[i+k] ;\n\t\t}\n\t}\n\t\n\tlong long int Max = 0;\n\tint s = -1;\n\tfor (i = k-1; i < n - k; i++) {\n\t\tif (S1[i] + S2[i+1] > Max) {\n\t\t\ts = i;\n\t\t\tMax = S1[i] + S2[i+1];\n\t\t}\n\t}\n\t\n\tprintf(\"%d %d\\n\", M1[s] - k + 2, M2[s+1] + 1);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9938271604938271, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "93fce327c01c31bff6aae6a597fb8a07", "bug_code_uid": "92f47f45d3a74d2b52f4550ec541e9c0", "src_uid": "6421a81f85a53a0c8c63fbc32750f77f", "apr_id": "b3d48044974552ec158ac18eaeb54307", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tfloat l,p,q;\n\tfloat a;\n\tscanf(\"%f\",&l);\n\tscanf(\"%f\",&p);\n\tscanf(\"%f\",&q);\n\ta=((p*q*l)/((p+q)*q));\n\tprintf(\"%.1f\",a);\n\treturn 0;\n}\n\t", "fixed": "#include<stdio.h>\nint main()\n{\n\tfloat l,p,q;\n\tfloat a;\n\tscanf(\"%f\",&l);\n\tscanf(\"%f\",&p);\n\tscanf(\"%f\",&q);\n\ta=((p*q*l)/((p+q)*q));\n\tprintf(\"%f\",a);\n\treturn 0;\n}\n\t"}
{"similarity_score": 0.2430379746835443, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b10ef7114982c435816e35bf59801fda", "bug_code_uid": "27753470c3bb775b8445cca34e806493", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "2c228e690a6ae05069be6cf49a0b7505", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n=0 , h=0;\n    do{\n        scanf(\"%d %d\\n\",&n,&h);\n    }\n    while(!(n<=1000 && n>1 && h<=1000 && h>1));\n    int sumOfWidths=0;\n    int i=0;\n    int heights[n];\n\n    for(i=0 ;i<n ;i++)\n    {\n        scanf(\"%d \",&heights[i]);\n        int currentWidth=0;\n        if(heights[i]>h)\n        {\n            currentWidth=2;\n        }else{\n            currentWidth=1;\n        }\n        sumOfWidths=sumOfWidths+currentWidth;\n    }\n    printf(\"\\n%d\",sumOfWidths);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,h,i,a;\n    int sum=0;\n    scanf(\"%d %d\",&n,&h);\n    for(i = 0; i<n ;i++)\n    {\n        sum++;\n        scanf(\"%d\",&a);\n        if(a>h)\n            sum++;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.2648401826484018, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "cac196a8d2f7ed1cb98e55906775c3a9", "bug_code_uid": "cb9fac299bd65e2a397f611d6963cd8d", "src_uid": "59d5e5ed2bc4b316e950e2a4dbc99d68", "apr_id": "091806941df6068473f1be05840828b5", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint prime(int x)\n{\n      int  i, flag = 0;\n   \n    for (i = 2; i <= x / 2; ++i)\n    {\n        // condition for non-prime\n        if (x % i == 0) {\n            flag = 1;\n            break;\n    }\n    }\n    if(flag==0)\n    return(1);\n    else\n    return(2);\n    \n}\nvoid main()\n\n{\n    int n,i,l,a;\n    scanf(\"%d\",&n);\n    for(i=2;i<=100000000;i++)\n    {\n        l=prime(i);\n        if(l==2)\n        {\n            a=prime(i+n);\n            if(a==2)\n            {\n            printf(\"%d %d\",i+n,i);\n            break;\n            }\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n;\n    scanf(\"%d\",&n);\n    printf(\"%d %d\",9*n,8*n);\n}"}
{"similarity_score": 0.9881578947368421, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e2f7da218d11825e254f03e0ee7b76fb", "bug_code_uid": "7c0ee983dc2f7cffd5848e0eb24dd5d5", "src_uid": "838e643a978adbeed791a24ac1046ab5", "apr_id": "cc9a59b60c7676e1cbb98f45a3148e5d", "difficulty": 1300, "tags": ["data structures", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tint n,k,i,j,sum1,sum2;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tint A[n];\n\tint d = n - k +1;\n\tfor ( i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d\",&A[i]);\n\t\t}\n\tif(d>0)\n\t{\n\t\t sum1 = 0;\n\t\t sum2 = 0;\n\t\t\n\t\tfor (i = 0; i < d; i++)\n\t\t{\n\t\t\tif(i == 0)\n\t\t\t{\n\n\t\t\t\tfor (j = 0; j < k; j++)\n\t\t\t\t{\n\t\t\t\t\tsum1 = sum1 + A[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum1 = sum1 - A[i-1] + A[ k + i - 1];\n\t\t\t\t//printf(\"%d \\n\",A[ k + i - 1]);\n\t\t\t\t//printf(\"%d \\n\",A[i-1]);\n\t\t\t}\n\t\t\t//printf(\"%d \\n\",sum1);\n\t\t\tsum2  = sum2 + sum1;\n\t\t}\n\n\t\tfloat av = (sum2*1.0)/d;\n\t\tprintf(\"%f\", av);\n    }\n    else\n    {\n    \tsum1 = 0;\n    \tfor ( i = 0; i < n; i++)\n\t\t{\n\t\t\tsum1   = sum1 + A[i];\n\t\t}\n\t\tfloat av = (sum1*1.0)/k;\n\t\tprintf(\"%f\", av);\n    }\n\n\treturn 0;\n}", "fixed": "\n#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n\tint n,k,i,j;\n\tlong long int sum1,sum2;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tint A[n];\n\tint d = n - k +1;\n\tfor ( i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d\",&A[i]);\n\t\t}\n\tif(d>0)\n\t{\n\t\t sum1 = 0;\n\t\t sum2 = 0;\n\t\t\n\t\tfor (i = 0; i < d; i++)\n\t\t{\n\t\t\tif(i == 0)\n\t\t\t{\n\n\t\t\t\tfor (j = 0; j < k; j++)\n\t\t\t\t{\n\t\t\t\t\tsum1 = sum1 + A[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum1 = sum1 - A[i-1] + A[ k + i - 1];\n\t\t\t\t//printf(\"%d \\n\",A[ k + i - 1]);\n\t\t\t\t//printf(\"%d \\n\",A[i-1]);\n\t\t\t}\n\t\t\t//printf(\"%d \\n\",sum1);\n\t\t\tsum2  = sum2 + sum1;\n\t\t}\n\n\t\tfloat av = (sum2*1.0)/d;\n\t\tprintf(\"%f\", av);\n    }\n    else\n    {\n    \tsum1 = 0;\n    \tfor ( i = 0; i < n; i++)\n\t\t{\n\t\t\tsum1   = sum1 + A[i];\n\t\t}\n\t\tfloat av = (sum1*1.0)/k;\n\t\tprintf(\"%f\", av);\n    }\n\n\treturn 0;\n}"}
{"similarity_score": 0.28450704225352114, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "1a473953b58a106361074a62e6ab9aa5", "bug_code_uid": "f1c274273c7cd08359e927bde977a181", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "ce36afaf7bbb213eda37f735a1ff020d", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 100100\nint a[N];\nint main()\n{\n\tint n,i,t,j,k,m;\n\twhile(scanf(\"%d\",&n)==1)\n\t{\n\t\tm=n;j=1;\n\t\tfor(i=1;i<=n;i++)\n\t\t{\t\n\t\t\tscanf(\"%d\",&t);\n\t\t\tif(t>=m)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",t);\n\t\t\t\tm--;\n\t\t\t\tfor(k=j-1;k>=1;k--)\n\t\t\t\t printf(\"%d \",a[k]);\n\t\t\t\tm=m-j+1;\n\t\t\t\tj=1;\n\t\t\t\tprintf(\"\\n\"); \n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\ta[j]=t;\n\t\t\t\tj++; \t\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\treturn 0;\n} /*2017-03-24 21:04:21.356*/", "fixed": "#include<stdio.h>\n#define N  100100\nint a[N]; \nint main()\n{\n\tint n,i,t,m;\n\tscanf(\"%d\",&n);\n\tm=n;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\ta[t]=1;\n\t\tif(a[m])\n\t\t{\n\t\t\tprintf(\"%d\",m);\n\t\t\tm--;\n\t\t\twhile(a[m])\n\t\t\t{\n\t\t\t\tprintf(\" %d\",m);\n\t\t\t\tm--;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n} /*2017-03-25 18:57:27.245*/"}
{"similarity_score": 0.8885375494071146, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7b99974b667d2f3145892860c57629b4", "bug_code_uid": "00d7c12ddfcc8ca4517de64d9510aee0", "src_uid": "422cbf106fac3216d58bdc8411c0bf9f", "apr_id": "4b9a6e00cbf2bbe51092414eed54f213", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int val,num,flag=0,i,j,n,m,arr[3000];\nint cmpfunc (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tscanf(\"%ld %ld\", &n, &m);\n\tfor(i=0; i<m; i++)\n\t{\n\t\tscanf(\"%ld\",&arr[i]);\n\t}\n\tqsort(arr,m,sizeof(long int), cmpfunc);\n\ti=1;\n\tj=0;\n\tif(arr[0]==1 || arr[m-1]==n)\n\t{\n\t\tflag=1;\n\t}\n\telse\n\t{\n\t\twhile(i<n)\n\t\t{\n\t\t\twhile(arr[j+1] == arr[j] + 1)\n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif((arr[j]+1) <= i+3)\n\t\t\t{\n\t\t\t\ti = arr[j]+1;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\\n\");\n\t}\n}\n\n", "fixed": "#include<stdio.h>\nlong int c=0,val,num,flag=0,i,j,n,m,arr[3000];\nint cmpfunc (const void * a, const void * b)\n{\n\treturn ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tscanf(\"%ld %ld\", &n, &m);\n\tfor(i=0; i<m; i++)\n\t{\n\t\tscanf(\"%ld\",&arr[i]);\n\t}\n\tqsort(arr,m,sizeof(long int), cmpfunc);\n\ti=1;\n\tj=0;\n\tif(arr[0]==1 || arr[m-1]==n)\n\t{\n\t\tflag=1;\n\t}\n\telse\n\t{\n\t\twhile(i<n || j<m)\n\t\t{\n\t\t\tif(j == m)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n//\t\t\tprintf(\"i=%ld\\n j=%ld\",i,j);\n\t\t\tc=0;\n\t\t\twhile(arr[j+1] == arr[j] + 1)\n\t\t\t{\n\t\t\t\tj++;\n\t\t\t\tc++;\n\t\t\t}\n\t\t\tif(c<2)\n\t\t\t{\n\t\t\t\ti = arr[j]+1;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\\n\");\n\t}\n}\n\n"}
{"similarity_score": 0.9965156794425087, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "015025126fe1e8ba34d3dbb6eb80128b", "bug_code_uid": "52765bf4249ecc4e49a2fc81bbacccc3", "src_uid": "7899a22cee29bb96d671f6188f246c21", "apr_id": "cb90ee713163d2e9c2f44ac3dd8fc943", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,A[100010],B[100010],C[100010];\n\tmemset(A, 0, sizeof(int)*100010);\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d%d\",&A[i],&B[i]);\n\t\tC[A[i]] += 1;\n\t}\n\tfor(i=0;i<n;++i)\n\t\tprintf(\"%d %d\\n\",n+C[B[i]]-1,n-1-C[B[i]]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,A[100010],B[100010],C[100010];\n\tmemset(C, 0, sizeof(int)*100010);\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d%d\",&A[i],&B[i]);\n\t\tC[A[i]] += 1;\n\t}\n\tfor(i=0;i<n;++i)\n\t\tprintf(\"%d %d\\n\",n+C[B[i]]-1,n-1-C[B[i]]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9015873015873016, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d0c63e53756ff9b7168eb3414bf58fff", "bug_code_uid": "7c345dfe269507a0b410903431f2211d", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "784ff2aad303809c769cd2d7e53db1ba", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n#include<string.h>\n#include <ctype.h>\n\nint main()\n{\n    char s1[101];\n    char num[27]={0};\n    int temp=0,len;\n    gets(s1);\n  \n    len = strlen(s1);\n    for(int i=0;i<len;i++)\n    {\n       if(isalpha(s1[i]))\n       {\n           temp = s1[i]-'a'; \n           num[temp]=s1[i];\n       }\n    }\n     len=strlen(num);\n    printf(\"%d\",len);\n    return 0;\n}\n", "fixed": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n#include<string.h>\n#include <ctype.h>\n\nint main()\n{\n    char s1[1001];\n    char num[27]={\"AAAAAAAAAAAAAAAAAAAAAAAAAA\"};\n    int temp=0,len;\n    gets(s1);\n  \n   // len = strlen(s1);\n    for(int i=0;s1[i]!='\\0';i++)\n    {\n       if(isalpha(s1[i]))\n       {\n           temp = s1[i]-'a'; \n           num[temp]=s1[i];\n       }\n    }\n     len=0;\n    for(int i=0;num[i]!='\\0';i++)\n    {\n      if(num[i]!='A')\n      {\n      len++;\n      }\n    }\n    printf(\"%d\",len);\n    return 0;\n}\n"}
{"similarity_score": 0.5130759651307597, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "20839c39dbf9f7bbebde6894817320c7", "bug_code_uid": "3df0f4d33d5bac00aa7fbda2c8992204", "src_uid": "b43dee2f223c869a35b1b11ceb9d2b6b", "apr_id": "b22f6bbaadb929e13ee5f86933bf555a", "difficulty": 900, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n\n        if(n%3==0)\n            printf(\"%da 0 0\\n\", n/3);\n        else if((n-5)%3==0)\n            printf(\"%db 1 0\\n\", (n-5)/3);\n        else if((n-7)%3==0)\n            printf(\"%dc 0 1\\n\", (n-7)/3);\n        else\n            printf(\"-1\\n\");     //1 2 4\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        if(n==1 || n==2 || n==4)\n            printf(\"-1\\n\");\n        else if(n%3==0)\n            printf(\"%d 0 0\\n\", n/3);\n        else if((n-5)%3==0)\n            printf(\"%d 1 0\\n\", (n-5)/3);\n        else if((n-7)%3==0)\n            printf(\"%d 0 1\\n\", (n-7)/3);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9979859013091642, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e4178d568cf907e436fc1065ba8197ed", "bug_code_uid": "b7fa7fca1b2da3608c185e677238c280", "src_uid": "5d11fa8528f1dc873d50b3417bef8c79", "apr_id": "74f4bb16cdc2c0a3b0605319463ce97b", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\nunsigned int BestCase  (unsigned int *list, size_t n);\n\nint main (void) {\n\n  unsigned int *list;\n  size_t n, i;\n\n  scanf(\"%u\", &n);\n\n  list = (unsigned int*)malloc(sizeof(unsigned int) * n);\n\n  for (i = 0; i < n; i++)\n    scanf(\"%u\", &list[i]);\n\n  printf(\"%u\", BestCase(list, n));\n\n  return 0;\n\n}\n\nunsigned int LeftSide (unsigned int *list, size_t pos) {\n\n  unsigned int result = 0;\n\n  while (pos && list[pos-1] <= list[pos]) {\n    result++;\n    pos--;\n  }\n\n  return result;\n\n}\n\nunsigned int RightSide (unsigned int *list, size_t pos, size_t max) {\n\n  unsigned int result = 0;\n\n  while (pos < max && list[pos+1] <= list[pos]) {\n    result++;\n    pos--;\n  }\n\n  return result;\n\n}\n\nunsigned int BestCase (unsigned int *list, size_t n) {\n\n  unsigned int result = 0;\n  unsigned int temp;\n  size_t i;\n\n  for (i = 0; i < n; i++) {\n    temp = LeftSide(list, i) + RightSide(list, i, n-1) + 1;\n    if (result < temp)\n      result = temp;\n  }\n\n  return result;\n\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\nunsigned int BestCase  (unsigned int *list, size_t n);\n\nint main (void) {\n\n  unsigned int *list;\n  size_t n, i;\n\n  scanf(\"%u\", &n);\n\n  list = (unsigned int*)malloc(sizeof(unsigned int) * n);\n\n  for (i = 0; i < n; i++)\n    scanf(\"%u\", &list[i]);\n\n  printf(\"%u\", BestCase(list, n));\n\n  return 0;\n\n}\n\nunsigned int LeftSide (unsigned int *list, size_t pos) {\n\n  unsigned int result = 0;\n\n  while (pos && list[pos-1] <= list[pos]) {\n    result++;\n    pos--;\n  }\n\n  return result;\n\n}\n\nunsigned int RightSide (unsigned int *list, size_t pos, size_t max) {\n\n  unsigned int result = 0;\n\n  while (pos < max && list[pos+1] <= list[pos]) {\n    result++;\n    pos++;\n  }\n\n  return result;\n\n}\n\nunsigned int BestCase (unsigned int *list, size_t n) {\n\n  unsigned int result = 0;\n  unsigned int temp;\n  size_t i;\n\n  for (i = 0; i < n; i++) {\n    temp = LeftSide(list, i) + RightSide(list, i, n-1) + 1;\n    if (result < temp)\n      result = temp;\n  }\n\n  return result;\n\n}\n"}
{"similarity_score": 0.8330097087378641, "equal_cnt": 13, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "db9d87dbaa61afe9d5d28a26c1d15b62", "bug_code_uid": "52d803d3dff8eeefce8647df0e2c98ad", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "47a36b10ea4e9f69db54a7f70e77ebee", "difficulty": 1500, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n//using namespace std;\n\nint n;\nint l, r;\nint a[200000];\nint b[200000];\n\nint main() {\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &l);\n\tscanf(\"%d\", &r);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &b[i]);\n\t}\n\n\tsort(a + l - 1, a + r - 1);\n\tsort(b + l - 1, b + r - 1);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] != b[i]) {\n\t\t\tputs(\"LIE\");\n\t\t\texit(0);\n\t\t}\n\t}\n\tputs(\"TRUTH\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n//using namespace std;\n\nint n;\nint l, r;\nint a[200000];\nint b[200000];\n\nint cmp(const void * a, const void * b) {\n\treturn (*(int*) a - *(int*) b);\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &l);\n\tscanf(\"%d\", &r);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &b[i]);\n\t}\n\tqsort(a + l - 1, r - l + 1, sizeof(int), cmp);\n\tqsort(b + l - 1, r - l + 1, sizeof(int), cmp);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] != b[i]) {\n\t\t\tputs(\"LIE\");\n\t\t\texit(0);\n\t\t}\n\t}\n\tputs(\"TRUTH\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9073610415623435, "equal_cnt": 13, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "908e6fbfebe9ed1bf688a0d630b7f0e1", "bug_code_uid": "3d023c7bb7634fdfcecb30fbf46cbfc4", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "a87aa203409e779fa514797b5308cfc0", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<strings.h>\n\nlong int max(long int i, long int j){\n     if(i >= j)\n        return i;\n     else\n        return j;\n}\t\n\nlong int min(long int i, long int j){\n     if(i >= j)\n        return j;\n     else\n        return i;\n}\t\n\nlong int maxTrees(long int n, long int X[n], long int H[n], long int Y[n]){\n    long int result = 2;\n\tlong int i ;\n\t\n\tY[0] = X[0] - H[0];\n\tY[n-1] = X[n-1] + H[n-1];\n\t\n\tfor(i=1; i < n-1; i++){\n       if(X[i] - H[i] > max(X[i-1], Y[i-1])){\n           result++;\n\t\t   Y[i] = X[i] - H[i];\n\t\t}\n\t\telse if(X[i] + H[i] < min(X[i+1], Y[i+1])){\n\t\t   result++;\n\t\t   Y[i] = X[i] + H[i];\n        }\t\t\n    }\n    \n    return result;\t\n\t\n}\t\n \nint main(){\n    long int i,n,result;\n    scanf(\"%ld\", &n);\n\t\n\tlong int X[n], Y[n];\n\tlong int H[n];\n\t\n\tfor(i=0; i<n; i++){\n\t   scanf(\"%ld %ld\", &X[i], &H[i]);\n\t   Y[i] = X[i];\n\t}\n\t\n\tresult = maxTrees(n, X, H, Y);\n\t\n\tprintf(\"%ld\", result);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<strings.h>\n\nlong int max(long int i, long int j){\n     if(i >= j)\n        return i;\n     else\n        return j;\n}\t\n\nlong int min(long int i, long int j){\n     if(i >= j)\n        return j;\n     else\n        return i;\n}\t\n\nlong int maxTrees(long int n, long int X[n], long int H[n], long int Y[n]){\n    long int result;\n    if(n==1){\n\t   result = 1;\n\t}\n\telse{\n\t   result = 2;\n\t   long int i ;\n\t\n\t   Y[0] = X[0] - H[0];\n\t   Y[n-1] = X[n-1] + H[n-1];\n\t\n\t   for(i=1; i < n-1; i++){\n          if(X[i] - H[i] > max(X[i-1], Y[i-1])){\n              result++;\n\t\t      Y[i] = X[i] - H[i];\n\t\t   }\n\t\t   else if(X[i] + H[i] < min(X[i+1], Y[i+1])){\n\t\t      result++;\n\t\t      Y[i] = X[i] + H[i];\n           }\t\t\n       }\n\t}\n    \n    return result;\t\n\t\n}\t\n \nint main(){\n    long int i,n,result;\n    scanf(\"%ld\", &n);\n\t\n\tlong int X[n], Y[n];\n\tlong int H[n];\n\t\n\tfor(i=0; i<n; i++){\n\t   scanf(\"%ld %ld\", &X[i], &H[i]);\n\t   Y[i] = X[i];\n\t}\n\t\n\tresult = maxTrees(n, X, H, Y);\n\t\n\tprintf(\"%ld\", result);\n\treturn 0;\n}"}
{"similarity_score": 0.44175209692451073, "equal_cnt": 18, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "94e6c6e0d320a18459fd9091fd719244", "bug_code_uid": "f518cb5561f5ba2cca728e75be039e5e", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "18984fc840ebfb43fff4193efa08940e", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int ans[t];\r\n    for(int q=0;q<t;q++)\r\n    {\r\n        int n,m,k;\r\n        scanf(\"%d %d %d\",&n,&m,&k);\r\n        if((n-1)+(m-1)<=k)\r\n        {\r\n            ans[q]=1;\r\n        }\r\n        else{\r\n            ans[q]=0;\r\n        }\r\n    }\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        if(ans[i]==1)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\")\r\n        }\r\n    }\r\n}", "fixed": "//\n//  main.c\n//  The Cake Is a Lie\n//\n//  Created by Dev Manish Patel on 04/05/21.\n//\n\n#include <stdio.h>\nint check(int n,int m,int k)\n{\n    if((n-1)+(m-1)*n==k)\n    {\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}\nint main(int argc, const char * argv[]) {\n    int t,n,m,k;\n    scanf(\"%d\",&t);\n    int ans[t];\n    for (int q=0; q<t; q++) {\n        scanf(\"%d %d %d\",&n,&m,&k);\n        ans[q]=check(n, m, k);\n    }\n    for (int i=0; i<t; i++) {\n        if(ans[i]==1)\n        {\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.990506329113924, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1abbca0c9994f8ab0c99508e36d70df5", "bug_code_uid": "eb70e6d073df937bf61b1ff2a78c0140", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "8eed2c9ee4365f69470cff75edac8a99", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int a,b;\n    for(int =1;i<=n;i++)\n    {\n        scanf(\"%d %d\", &a,&b);\n        int p=a*b;\n        if(p%2==0)\n        {\n        printf(\"%d\", p/2);\n        }\n        else\n        {\n            printf(\"%d\", (p/2)+1);\n        }\n    }\n    return 0;\n}", "fixed": "\n#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int a,b;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d %d\", &a,&b);\n        int p=a*b;\n        if(p%2==0)\n        {\n        printf(\"%d\\n\", p/2);\n        }\n        else\n        {\n            printf(\"%d\\n\", (p/2)+1);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9961832061068703, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d7f57649f647aefa8249ae925ad43d82", "bug_code_uid": "91cf88cb17fe437ae3349cb96e286b7d", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "ab70232bc8bfb9c0a0b40cfb9e250194", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\nint i,n,len;\nchar str[110];\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++)\n{\nscanf(\"%s\",&str);\nlen=strlen(str);\nif(len>10){\nprintf(\"%c\",str[0]);\nprintf(\"%d\",len-2);\n            printf(\"%c\",str[len-1]);}\nelse printf(\"%s\\n\",str);}\nreturn 0;\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\nint i,n,len;\nchar str[110];\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++)\n{\nscanf(\"%s\",&str);\nlen=strlen(str);\nif(len>10){\nprintf(\"%c\",str[0]);\nprintf(\"%d\",len-2);\n            printf(\"%c\\n\",str[len-1]);}\nelse printf(\"%s\\n\",str);}\nreturn 0;\n\n}\n"}
{"similarity_score": 0.996969696969697, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "025a4a4cdd33c13fa7472fa63c933843", "bug_code_uid": "aa6b1b21929c084bfbf6b324e36b4dfd", "src_uid": "7f934f96cbe3990945e5ebcf5c208043", "apr_id": "8051bb1011dadfdf94337f5e033b45e6", "difficulty": 800, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\nint n,i,j,c=0;\nchar a[100][100];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++){\n    scanf(\"%s\",a[i]);\n}\nfor(i=0;i<n;i++){\n        for(j=0;j<i;j++){\n            if(strcmp(a[i],a[j])==0)\n                c++;\n        }\n        if(c>0)printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n        c=0;\n}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\nint n,i,j,c=0;\nchar a[1000][1000];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++){\n    scanf(\"%s\",a[i]);\n}\nfor(i=0;i<n;i++){\n        for(j=0;j<i;j++){\n            if(strcmp(a[i],a[j])==0)\n                c++;\n        }\n        if(c>0)printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n        c=0;\n}\n}"}
{"similarity_score": 0.816812053925456, "equal_cnt": 16, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 9, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "31bd437a850a00cfc2dcd0ef90a4422b", "bug_code_uid": "433815d584703d9c682b9ee732754b8f", "src_uid": "b856eafe350fccaabd39b97fb18d9c2f", "apr_id": "a34dbed76bfe308124321d92b578cb79", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++) {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int *arr=(int *)calloc(n,sizeof(int));\r\n        for(int j=0;j<n;j++) scanf(\"%d\",&arr[j]);\r\n        int max=-1,max2=-1;\r\n        for(int j=0;j<n;j++) {\r\n            if(arr[j]>=max) { max2=max; max=arr[j];}\r\n        }\r\n        if(max2==-1) {\r\n            max=-1;\r\n            for(int j=n-1;j>=0;j--) {\r\n                if(arr[j]>=max) { max2=max; max=arr[j];}\r\n            }\r\n        }\r\n        printf(\"%d\\n\",max+max2);\r\n        free(arr);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++) {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        \r\n        int *arr=(int *)calloc(n,sizeof(int));\r\n        for(int j=0;j<n;j++) scanf(\"%d\",&arr[j]);\r\n        \r\n        long int max=-1,max2=-1;\r\n        int pos;\r\n        for(int j=0;j<n;j++) {\r\n            if(arr[j]>=max) { max=arr[j]; pos=j;}\r\n        }\r\n        \r\n        arr[pos]=-1;\r\n        for(int j=0;j<n;j++) {\r\n            if(arr[j]>=max2) max2=arr[j];\r\n        }\r\n        \r\n        printf(\"%ld\\n\",(max+max2));\r\n        free(arr);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.17097701149425287, "equal_cnt": 27, "replace_cnt": 23, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "cd83017f8d7fe7976e0f32010fd39d8a", "bug_code_uid": "02fc41b5878886d92f65b00dc4674235", "src_uid": "217cc9b3e04260f5b7cd42b42e92c449", "apr_id": "285ef9d5001e6c15fb210c384fc1a6bd", "difficulty": 1300, "tags": ["binary search", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define base0 1000\n\nmain() {\n    int i, j, k, n, ncasos, count, x, y, x1, x2, x3, y1, y2, y3;\n    int mat[2][3000];\n\n    scanf(\"%d\",&n);\n    for (i=0; i<n; i++){\n         scanf(\"%d %d\",&x, &y);\n         mat[0][i] = x;\n         mat[1][i] = y;\n    }\n\n    count = 0;\n    for (i=0; i< n; i++){\n      for (j=0; j<n; j++) {\n        for (k=0; k<n; k++){\n          if ((i!=j) && (i!=k) && (j!=k)){\n              x1 = mat[0][i];\n              y1 = mat[1][i];\n              x2 = mat[0][j];\n              y2 = mat[1][j];\n              x3 = mat[0][k];\n              y3 = mat[1][k];\n              if(x3 == ((x1 + x2)/2))\n                if (y3 == ((x1 + x2)/2)) count++;\n          }\n        }\n      }\n    }\n    printf(\"%d\\n\",count);\n}\n", "fixed": "#include <stdio.h>\n\nint mat[2001][2001];\nint pts[3000][2];\n\nint main()\n{\n\tint t, n, q, i, j, res, a, b;\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < 2001; ++i)\n\t\t{\n\t\t\tfor (j = 0; j < 2001; ++j)\n\t\t\t{\n\t\t\t\tmat[i][j] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < n; ++i)\n\t\t{\n\t\t\tscanf(\"%d%d\", &pts[i][0], &pts[i][1]);\n\t\t\tpts[i][0] += 1000;\n\t\t\tpts[i][1] += 1000;\n\t\t\tmat[pts[i][0]][pts[i][1]] = 1;\n\t\t}\n\n\t\tres = 0;\n\n\t\tfor (i = 0; i < n; ++i)\n\t\t{\n\t\t\tfor (j = i+1; j < n; ++j)\n\t\t\t{\n\t\t\t\ta = pts[i][0]+pts[j][0];\n\t\t\t\tb = pts[i][1]+pts[j][1];\n\t\t\t\tif (a % 2 == 0 && b % 2 == 0 && mat[a/2][b/2])\n\t\t\t\t{\n\t\t\t\t\tres++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%d\\n\", res);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9704236610711431, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "45904d2d6636b806d0642fba10740e93", "bug_code_uid": "b9084348f488e6444cdee8cb77f890c0", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "e6dea8c1958f5f01c1bada7604ce2534", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,x=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n\n    for(i=0;i<n;i++)\n   {\n       scanf(\"%d\",&a[i]);\n       x=x+a[i];\n   }\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&b[i]);\n    int max1=b[0];\n    for(i=0;i<n;i++)\n    {\n        if(max1<b[i])\n            max1=b[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[i]==max1)\n        {\n            b[i]=0;\n            break;\n        }\n    }\n    int max2=b[0];\n    for(i=0;i<n;i++)\n    {\n        if(b[i]>max2)\n            max2=b[i];\n    }\n    if(x<=max1+max2)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,max1,max2,i,j,x=0;\n    scanf(\"%I64d\",&n);\n    int a[n],b[n];\n\n    for(i=0;i<n;i++)\n   {\n       scanf(\"%I64d\",&a[i]);\n       x=x+a[i];\n   }\n    for(i=0;i<n;i++)\n        scanf(\"%I64d\",&b[i]);\n    max1=b[0];\n    for(i=0;i<n;i++)\n    {\n        if(max1<b[i])\n            max1=b[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[i]==max1)\n        {\n            b[i]=0;\n            break;\n        }\n    }\n    max2=b[0];\n    for(i=0;i<n;i++)\n    {\n        if(b[i]>max2)\n            max2=b[i];\n    }\n    if(x<=max1+max2)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}"}
{"similarity_score": 0.7682403433476395, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "de3859684ffad0e016f8a095d896f476", "bug_code_uid": "c16a2af89c2da2c3996da2f0136d1ef8", "src_uid": "7f61b1d0e8294db74d33a6b6696989ad", "apr_id": "d40ddb9bf25026f1eb9a097d57e25f97", "difficulty": 1500, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint c[10009]={0};\nvoid sieve()\n{\n\tint i,j;\n\tfor( i=2;i<=100;i++)\n\t{\n\t\tif(c[i]==0)\n\t\t{\n\t\t\tfor( j=i*i;j<=10000;j+=i)\n\t\t\t\tc[j] = 1;\n\t\t}\n\t}\n}\nint main()\n{\n\tsieve();\n\tint i ,n,j;\n\tscanf(\"%d\",&n);\n\tfor(i=2;i<=n;i++){\n\t\tif(c[i] == 0){\n\t\t\tc[i] = 1;\n\t\t\tfor(j=i;j<=n;j=j*i)\n\t\t\t\tprintf(\"%d \",j);\n\t\t}\n\t}\n\tfor(i=2;i<=n;i++){\n\t\tif(c[i] == 0)\n\t\t\tprintf(\"%d \",i);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint c[10009]={0};\nvoid sieve()\n{\n\tint i,j;\n\tfor( i=2;i<=100;i++)\n\t{\n\t\tif(c[i]==0)\n\t\t{\n\t\t\tfor( j=i*i;j<=10000;j+=i)\n\t\t\t\tc[j] = 1;\n\t\t}\n\t}\n}\nint main()\n{\n\tsieve();\n\tint i ,n,j,ans[1100],count;\n\tscanf(\"%d\",&n);\n\tcount = 0;\n\tfor(i=2;i<=n;i++){\n\t\tif(c[i] == 0){\n\t\t\tc[i] = 1;\n\t\t\tfor(j=i;j<=n;j=j*i)\n\t\t\t\tans[count++] = j;\n\t\t}\n\t}\n\tfor(i=2;i<=n;i++){\n\t\tif(c[i] == 0)\n\t\t\tans[count++] = i;\n\t}\n\tprintf(\"%d\\n\",count--);\n\tfor(i=0;i<=count;i++)\n\t\tprintf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n\n}\n"}
{"similarity_score": 0.9495798319327731, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a327b80b959bdf9d155abcdee9a7e40c", "bug_code_uid": "7e4f43c3d91cd30e0c1eef709d09cb8e", "src_uid": "311f74b766818633581af67a88244709", "apr_id": "e5a917ef2295f616f716682cde54c7ef", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\tint N,M,i,ar[10000],top=0,a,b,sonuc=-1;\n\tscanf(\" %d\",&N);\n\tfor(i=1;i<=N;i++) { scanf(\" %d\",&ar[i]); top+=ar[i];}\n\tscanf(\" %d\",&M);\n\tfor(i=1;i<=M;i++) {\n\t\tif(i!=1 && sonuc==-1 && a>=top) sonuc=a; \n\t\tscanf(\" %d %d\",&a,&b);\n\t\tif(sonuc==-1 && top>=a && top<=b) sonuc=top;\n\t}\n\tprintf(\"%d\\n\",sonuc);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n\tint N,M,i,ar[10000],top=0,a,b,sonuc=-1;\n\tscanf(\" %d\",&N);\n\tfor(i=1;i<=N;i++) { scanf(\" %d\",&ar[i]); top+=ar[i];}\n\tscanf(\" %d\",&M);\n\tfor(i=1;i<=M;i++) {\n\t\tif(i!=1 && sonuc==-1 && a>=top) sonuc=a; \n\t\tscanf(\" %d %d\",&a,&b);\n\t\tif(sonuc==-1 && top>=a && top<=b) sonuc=top;\n\t\tif(sonuc==-1 && a>=top) sonuc=a; \n\t}\n\tprintf(\"%d\\n\",sonuc);\n\treturn 0;\n}"}
{"similarity_score": 0.9927007299270073, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7944406ee624db76965c2e4b6ceb1243", "bug_code_uid": "d273b478201618e222f478aeb6be64f7", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "e46b52e532e3386f67c24c8681f11867", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n\nchar m[10000];\nint a,l=0,i;\nscanf(\"%d\",&a);\nfor(i=0;i<a;i++){\nscanf(\"%d\",&m[i]);\n\n\n}\nfor(i=0;i<a-1;i++){\n if(m[i]!=m[i+1]){\n    l++;\n\n\n\n }\n}\nprintf(\"%d\",l+1);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n\nchar m[100010];\nint a,l=0,i;\nscanf(\"%d\",&a);\nfor(i=0;i<a;i++){\nscanf(\"%d\",&m[i]);\n\n\n}\nfor(i=0;i<a-1;i++){\n if(m[i]!=m[i+1]){\n    l++;\n\n\n\n }\n}\nprintf(\"%d\\n\",l+1);\nreturn 0;\n}\n"}
{"similarity_score": 0.9581218274111675, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "603c2af64d8d5cd7155675de8429eebe", "bug_code_uid": "1a86e86355bdff69427afd698230a1c9", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "efed8f73ad0fe32773dd85922fd68262", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int a[2];\n    int i=0,x=0;\n    int j=1;\n    int n;\n    scanf(\"%d\",&n);\n    int c=n-1;\n    scanf(\"%d\",&a[i]);\n    int z=a[i];\n    while(c)\n    {   c--;\n        scanf(\"%d\",&a[j]);\n        if(a[i]>a[j])\n            goto last;\n        i=(i+1)%2;\n        j=(i+1)%2;\n    }\n\nprintf(\"0 %d\",c);\nreturn 0;\nlost:{};\nwhile(c--)\n    {\n        scanf(\"%d\",&a[j]);\n    }\nprintf(\"-1\");\n    return 0;\n    last:{};\nif(a[j]>z)\n        goto lost;\n        x++;\n    while(c--)\n    {\n\n        x++;\n        scanf(\"%d\",&a[i]);\n        if(a[j]>a[i])\n        {\n            x=-1;\n            while(c--)\n    {\n        scanf(\"%d\",&a[j]);\n    }\n            break;\n        }\n\nif(a[i]>z)\n    goto lost;\n        i=(i+1)%2;\n        j=(i+1)%2;\n    }\n\n    printf(\"%d\",x);\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int a[2];\n    int i=0,x=0;\n    int j=1;\n    int n;\n    scanf(\"%d\",&n);\n    int c=n-1;\n    scanf(\"%d\",&a[i]);\n    int z=a[i];\n    while(c)\n    {   c--;\n        scanf(\"%d\",&a[j]);\n        if(a[i]>a[j])\n            goto last;\n        i=(i+1)%2;\n        j=(i+1)%2;\n    }\n\nprintf(\"0\");\nreturn 0;\nlost:{};\nwhile(c)\n    {\n        c--;\n        scanf(\"%d\",&a[j]);\n    }\nprintf(\"-1\");\n    return 0;\n    last:{};\nif(a[j]>z)\n        goto lost;\n        x++;\n    while(c)\n    {\n        c--;\n        x++;\n        scanf(\"%d\",&a[i]);\n        if(a[j]>a[i])\n        {\n            x=-1;\n            while(c)\n    {\n        c--;\n        scanf(\"%d\",&a[j]);\n    }\n            break;\n        }\n\nif(a[i]>z)\n    goto lost;\n        i=(i+1)%2;\n        j=(i+1)%2;\n    }\n\n    printf(\"%d\",x);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9103690685413005, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0f8d68e0cadf4e3232acfa31969713a1", "bug_code_uid": "e7d7609ca75bd58f048e990a6fc7858c", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "b08a6ff7cefbd57f4f1f223cd5d5b9f5", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nfor(int i=0;i,n;i++)\n{\n    scanf(\"%d\",&a);\n    scanf(\"%d\",&b);\n    scanf(\"%d\",&c);\n    if(a<=b+c+1&&b<=c+a+1&&c<=a+b+1)\n    {\n        printf(\"YES\");\n    }\n    else\n        printf(\"NO\");\n}\nprintf(\"\\n\");\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\nfor(int i=0;i<n;i++)\n{\n    int a,b,c;\n    scanf(\"%d\",&a);\n    scanf(\"%d\",&b);\n    scanf(\"%d\",&c);\n    if(a<=b+c+1&&b<=c+a+1&&c<=a+b+1)\n    {\n        printf(\"Yes\");\n    }\n    else\n        printf(\"No\");\nprintf(\"\\n\");\n}\n}\n"}
{"similarity_score": 0.5502248875562219, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "969ee4c7fd714f366b4d03c8519d38a7", "bug_code_uid": "b4215ebba9789b31855dd6d020976e8b", "src_uid": "6a333044e2ed8f9f4fa44bc16b994418", "apr_id": "7a0532ddffcad67336d4aab4d89c9c5c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "///I must try more than once..\n#include<stdio.h>\n#include<stdlib.h>\ntypedef long long ll;\nvoid test()\n{\n    ll x1,y1,x2,y2;\n    scanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n    if(x1==x2){\n        printf(\"%lld\\n\",+(y2-y1));\n        return;\n    }\n    if(y1==y2){\n        printf(\"%lld\\n\",+(x2-x1));\n        return;\n    }\n    ll ans=0,a,b;\n    ans+=abs(x1-x2)+abs(y1-y2);\n    a=x1;\n    if(y2>y1) b=y2+1;\n    else if(y2<y1) b=y2-1;\n    else b=y2;\n    if(x2>x1)x1=x1+1;\n    else if(x2<x1)x1=x1-1;\n    ans+=abs(a-x1)+abs(b-y2);\n    printf(\"%lld\\n\",ans);\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)test();\n}\n///so that my solution may get accepted///\n", "fixed": "///I must try more than once..\n#include<stdio.h>\n#include<stdlib.h>\ntypedef long long ll;\nvoid test()\n{\n    ll x1,y1,x2,y2;\n    scanf(\"%lld%lld%lld%lld\",&x1,&y1,&x2,&y2);\n    if(x1==x2){\n        printf(\"%lld\\n\",llabs(y2-y1));\n        return;\n    }\n    if(y1==y2){\n        printf(\"%lld\\n\",llabs(x2-x1));\n        return;\n    }\n    ll ans=0,a,b;\n    ans+=llabs(x1-x2)+llabs(y1-y2);\n    a=x1;\n    if(y2>y1) b=y2+1;\n    else if(y2<y1) b=y2-1;\n    else b=y2;\n    if(x2>x1)x1=x1+1;\n    else if(x2<x1)x1=x1-1;\n    ans+=llabs(a-x1)+llabs(b-y2);\n    printf(\"%lld\\n\",ans);\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)test();\n}\n///so that my solution may get accepted///\n"}
{"similarity_score": 0.9329929802169751, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "81942107f66414d54b611f8bc72f8ffb", "bug_code_uid": "ec4a2e3806d86053969a634c89123ccf", "src_uid": "32855bb8ba33973178fde7c3d0beb2ce", "apr_id": "697eff5559debedbde0200a4fad7a794", "difficulty": 1100, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n\r\nint main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  for (int i=0;i<t;i++)\r\n  {\r\n    int a[1000] ,n , k,condition = 0;\r\n    scanf(\"%d %d\",&n,&k);\r\n    for (int j=0;j<n;j++)\r\n    {\r\n      scanf(\"%d\",&a[j]);\r\n    }\r\n    int q;\r\n    for (int j=0 ;j<k;j++)\r\n    {\r\n      for (q=0;q<n-1;q++)\r\n      {\r\n        if (a[q]>=a[q+1])\r\n        {\r\n            if (q+1 == n-1)\r\n            {\r\n                condition  = -1;\r\n                break;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            a[q]++;break;\r\n        }\r\n      }\r\n      if (condition == -1)\r\n        break;\r\n    }\r\n   \r\n    if (condition == -1 )\r\n        printf(\"-1\\n\");\r\n    else printf(\"%d\\n\",q+1);\r\n  }\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n\r\nint main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  for (int i=0;i<t;i++)\r\n  {\r\n    long unsigned int k;\r\n    int a[1000] ,n ,condition = 0;\r\n    scanf(\"%d %lu\",&n,&k);\r\n    for (int j=0;j<n;j++)\r\n    {\r\n      scanf(\"%d\",&a[j]);\r\n    }\r\n    if (n==1)\r\n    {\r\n        printf(\"-1\\n\");\r\n        continue;\r\n    }\r\n    int q;\r\n    for (int j=0 ;j<k;j++)\r\n    {\r\n      for (q=0;q<n-1;q++)\r\n      {\r\n        if (a[q]>=a[q+1])\r\n        {\r\n            if (q+1 == n-1)\r\n            {\r\n                condition  = -1;\r\n                break;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            a[q]++;break;\r\n        }\r\n      }\r\n      if (condition == -1)\r\n        break;\r\n    }\r\n   \r\n    if (condition == -1 )\r\n        printf(\"-1\\n\");\r\n    else printf(\"%d\\n\",q+1);\r\n  }\r\n}"}
{"similarity_score": 0.758364312267658, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "7156a61a2e6e9fa5c99a5b44b7f6b0b8", "bug_code_uid": "54bb4289f2fc9efc7a81bd32908d8c01", "src_uid": "bc6b8fda79c257e6c4e280d7929ed8a1", "apr_id": "4d21ff39a95d48101a183b3ebcd5f1b1", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 123456\nint a[N];\nint main()\n{\n    long long int n,k,i,sum=0,count=0,x,j,b[123000];\n    scanf(\"%I64d %I64d\",&n,&k);\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n        sum=sum+a[i];\n        }\n        printf(\"%d\\n\",sum);\n    for(i=0;i<k;i++)\n        scanf(\"%I64d\",&b[i]);\n    for(i=0;i<k;i++){\n        count=count+a[b[i]-1]*(sum-a[b[i]-1]);\n        sum=sum-a[b[i]-1];a[b[i]-1]=0;\n        printf(\"%I64d %I64d\\n\",count,sum);\n    }\n    for(i=0;i<n;i++){\n         count=count+a[i%n]*a[(i+1)%n];\n    }\n    printf(\"%I64d\\n\",count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define N 123456\nint a[N],b[N];\nint main()\n{\n    long long int n,k,i,sum=0,count=0,x,j;\n    scanf(\"%I64d %I64d\",&n,&k);\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n        sum=sum+a[i];\n        }\n    for(i=0;i<k;i++)\n        scanf(\"%I64d\",&b[i]);\n    for(i=0;i<k;i++){\n        count=count+a[b[i]-1]*(sum-a[b[i]-1]);\n        sum=sum-a[b[i]-1];a[b[i]-1]=0;\n    }\n    for(i=0;i<n;i++){\n         count=count+a[i%n]*a[(i+1)%n];\n    }\n    printf(\"%I64d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.9743260590500642, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0967765e0b2f85fb3e5e37e4aab0c96b", "bug_code_uid": "3fecf5ca554eaad98ee44e968e7c128c", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "41457cc2aeaee20234ade869162e891d", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,t,s,a[1000],b[1000],i=0,j=0,x,y,c=0;\n    scanf(\"%d\",&n);\n    while(i<n)\n    {\n        scanf(\"%d\",&a[i]);\n        i++;\n    }\n    scanf(\"%d\",&m);\n    while(j<m)\n    {\n        scanf(\"%d\",&b[j]);\n        j++;\n    }\n    for(i=0 ; i<n ; i++)\n    {\n        for(j=0 ; j<n-1-i ; j++)\n        {\n            if(a[j]>a[j+1])\n            {\n                s=a[j+1];\n                a[j+1]=a[j];\n                a[j]=s;\n            }\n        }printf(\"%d\\n\",a[i]);\n    }\n\n    for(i=0 ; i<m ; i++)\n    {\n        for(j=0 ; j<m-1-i ; j++)\n        {\n            if(b[j]>b[j+1])\n            {\n                t=b[j+1];\n                b[j+1]=b[j];\n                b[j]=t;\n            }\n        }printf(\"%d\\n\",b[i]);\n    }\n    printf(\"%d %d\\n\",a[n-1],b[m-1]);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,t,s,a[1000],b[1000],i=0,j=0,x,y,c=0;\n    scanf(\"%d\",&n);\n    while(i<n)\n    {\n        scanf(\"%d\",&a[i]);\n        i++;\n    }\n    scanf(\"%d\",&m);\n    while(j<m)\n    {\n        scanf(\"%d\",&b[j]);\n        j++;\n    }\n    for(i=0 ; i<n ; i++)\n    {\n        for(j=0 ; j<n-1-i ; j++)\n        {\n            if(a[j]>a[j+1])\n            {\n                s=a[j+1];\n                a[j+1]=a[j];\n                a[j]=s;\n            }\n        }\n    }\n\n    for(i=0 ; i<m ; i++)\n    {\n        for(j=0 ; j<m-1-i ; j++)\n        {\n            if(b[j]>b[j+1])\n            {\n                t=b[j+1];\n                b[j+1]=b[j];\n                b[j]=t;\n            }\n        }\n    }\n    printf(\"%d %d\\n\",a[n-1],b[m-1]);\n\n    return 0;\n}\n"}
{"similarity_score": 0.45188284518828453, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "1c3b8b5c8cb5143e456033243aba4063", "bug_code_uid": "5071565bf1a9d3033103d82a606af4e0", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "678b86225555c5fcfc89cc2ddfc3ece8", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x,i;\n    scanf(\"%d\",&n);\n    x = n*100;\n    double a[n];\n    double z,sum=0.0;\n    for(i=0;i<n;i++){\n        scanf(\"%lf\",&a[i]);\n        sum+=a[i];\n    }\n    z = sum/x*100;\n    printf(\"%.12lf\\n\",z);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main (void) {\n    double c,b,d=0;\n    int a;\n\n    scanf(\"%d\",&a);\n    c=a*100.0;\n    for(; a; a--) {\n        scanf(\"%lf\", &b);\n        d=d+b;\n    }\n\n    printf(\"%.12f\", d/c*100.0);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9854227405247813, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ba1a46dfd62a5cf89bbdafd4f96e4a0d", "bug_code_uid": "fa1129713a4c13692e90e6ba15a0f0f1", "src_uid": "eb3d8259ca598c3c455ddfdbe433cb78", "apr_id": "619438097f4d6058fecb7ca8864a67ba", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int N;\n    long long n, r;\n    long long res;\n    scanf(\"%d\", &N);\n    while (N--) {\n        res = 0;\n        scanf(\"%lld %lld\", &n, &r);\n        if (r >= n) {\n            res += 1;\n            r = n - 1;\n        }\n\n        res = (r +  1) * r  / 2;\n\n        printf(\"%lld\\n\", res);\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int N;\n    long long n, r;\n    long long res;\n    scanf(\"%d\", &N);\n    while (N--) {\n        res = 0;\n        scanf(\"%lld %lld\", &n, &r);\n        if (r >= n) {\n            res += 1;\n            r = n - 1;\n        }\n\n        res = res + (r +  1) * r  / 2;\n\n        printf(\"%lld\\n\", res);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9513888888888888, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c4bb98f4a0b88f893e6eec6762145829", "bug_code_uid": "33e6ce949973a1c13ea8eb33ce117a44", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "e3ca45240a6ef0b6062882722ab79ab5", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(n%2==0)\n\tprintf(\"%d %d\",(n/2),(n/2));\n\telse{\n\t\tprintf(\"%d %d\",9,n-9);\n\t}\n\treturn 0;\n\t\t\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(n%2==0)\n\tprintf(\"%d %d\",4,n-4);\n\telse{\n\t\tprintf(\"%d %d\",9,n-9);\n\t}\n\treturn 0;\n\t\t\n}"}
{"similarity_score": 0.9530315969257045, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 9, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "431e264bb200cadf6f6f5d32cfcd3c01", "bug_code_uid": "5b1aa295e2ae3a9e4f10179046a95f39", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "5620c8e931c1efc1c316e30985bc93d3", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, e, i, count;\r\n    char q;\r\n\r\n    scanf(\"%d\", &t);\r\n    for(e=0; e<t; e++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n\r\n        count=0;\r\n\r\n        for(i=0; i<n; i++)\r\n        {\r\n            scanf(\" %c\", &q);\r\n\r\n\r\n            if(q=='Q')\r\n            {\r\n                count++;\r\n            }\r\n            else if(count>=1)\r\n            {\r\n                count--;\r\n            }\r\n\r\n        }\r\n    }\r\n    if(count==0)\r\n    {\r\n        printf(\"Yes\\n\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"No\\n\");\r\n    }\r\n\r\nreturn 0;\r\n}", "fixed": "#\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, e, i, count;\r\n    char q;\r\n\r\n    scanf(\"%d\", &t);\r\n    for(e=0; e<t; e++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n\r\n        count=0;\r\n\r\n        for(i=0; i<n; i++)\r\n        {\r\n            scanf(\" %c\", &q);\r\n\r\n\r\n            if(q=='Q')\r\n            {\r\n                count++;\r\n            }\r\n            else if(count>=1)\r\n            {\r\n                count--;\r\n            }\r\n\r\n        }\r\n        if(count==0)\r\n        {\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9935851746258019, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c5145093982f997c925976e52e9601fc", "bug_code_uid": "5c9144ae8dc198badf35a28c7ea7154b", "src_uid": "62f5798bdcea237c0df9b4cd288b97de", "apr_id": "be1dee56cf07b4d1fed770832abdefb9", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(int argc, char const *argv[])\r\n{\r\n    int i,t,one,zero;\r\n    char a[1000000];\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        zero = 0;\r\n        one = 0;\r\n        scanf(\"%s\",a);\r\n        for ( i = 0; *(a+i)!='\\0'; i++)\r\n        {\r\n            if (*(a+i)=='0')\r\n            {\r\n                zero++;\r\n            }\r\n            else\r\n            {\r\n                one++;\r\n            }\r\n            \r\n        }\r\n        if (one>zero)\r\n        {\r\n            printf(\"%d\\n\",zero);\r\n        }\r\n        else if (one<zero)\r\n        {\r\n            printf(\"%d\\n\",one);\r\n        }\r\n        else\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(int argc, char const *argv[])\r\n{\r\n    int i,t,one,zero;\r\n    char a[1000000];\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        zero = 0;\r\n        one = 0;\r\n        scanf(\"%s\",a);\r\n        for ( i = 0; *(a+i)!='\\0'; i++)\r\n        {\r\n            if (*(a+i)=='0')\r\n            {\r\n                zero++;\r\n            }\r\n            else\r\n            {\r\n                one++;\r\n            }\r\n            \r\n        }\r\n        if (one>zero)\r\n        {\r\n            printf(\"%d\\n\",zero);\r\n        }\r\n        else if (one<zero)\r\n        {\r\n            printf(\"%d\\n\",one);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\",one-1);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7003367003367004, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7b2721e5400a94b65316c0dbb881cd51", "bug_code_uid": "09ade8f4ea993b9e0c08743423c707f9", "src_uid": "d9ba1dfe11cf3dae177f8898f3abeefd", "apr_id": "97b1306a5d0acb4fc4c59a13bfc4e793", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\n\twhile(n>=1){\n\t\tprintf(\"%d \",n);\n\t\tn--;\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,count=1;\n\tscanf(\"%d\",&n);\n\tprintf(\"%d \",n);\n\twhile(count<n){\n\t\tprintf(\"%d \",count);\n\t\tcount++;\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9981343283582089, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "654857d0d9634257ee45fa80c94f33d3", "bug_code_uid": "e6a91015ead439f5de2288023e9c452d", "src_uid": "43041076ddd0bbfac62cd4abf4536282", "apr_id": "e5d892b4f0ea85abe33b7109645f1f5f", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int k,t;\r\n    scanf(\"%d\",&t);\r\n    for(k=0;k<t;k++){\r\n            long n,a,b,c;\r\n            scanf(\"%ld\",&n);\r\n            if(n%2!=0)printf(\"-1\\n\");\r\n            else{\r\n                n=n/2;\r\n                if(n%2==0)printf(\"%ld %ld %ld\\n\",n+1,n+1,1);\r\n                else{\r\n                    a=n|(1<<1);\r\n                    if(a==n)printf(\"%ld %ld %ld\\n\",n-2,n-2,2);\r\n                    else printf(\"%ld %ld %ld\",n+2,n+2,2);\r\n                }\r\n            }\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int k,t;\r\n    scanf(\"%d\",&t);\r\n    for(k=0;k<t;k++){\r\n            long n,a,b,c;\r\n            scanf(\"%ld\",&n);\r\n            if(n%2!=0)printf(\"-1\\n\");\r\n            else{\r\n                n=n/2;\r\n                if(n%2==0)printf(\"%ld %ld %ld\\n\",n+1,n+1,1);\r\n                else{\r\n                    a=n|(1<<1);\r\n                    if(a==n)printf(\"%ld %ld %ld\\n\",n-2,n-2,2);\r\n                    else printf(\"%ld %ld %ld\\n\",n+2,n+2,2);\r\n                }\r\n            }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9818840579710145, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "778c8d02c6261240380e51524611787b", "bug_code_uid": "6d6ec51e12353ded0d3095463994a8a3", "src_uid": "d15a758cfdd7a627822fe8be7db4f60b", "apr_id": "f6d018afc8b184f5175ed7e56e66dc17", "difficulty": 1600, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nsigned main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tlong long *a = malloc(sizeof(long long) * n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lli\", &a[i]);\n\t}\n\tif (n == 1) {\n\t\tprintf(\"1 1\\n0\\n1 1\\n0\\n1 1\\n\");\n\t\tprintf(\"%lli\\n\", -a[i]);\n\t} else {\n\t\tprintf(\"1 1\\n-%lli\\n\", a[0]);\n\t\ta[0] = 0;\n\t\tprintf(\"2 %d\\n\", n);\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tprintf(\"%lli \", a[i] * (n - 1));\n\t\t\ta[i] = a[i] * n;\n\t\t}\n\t\tprintf(\"\\n1 %d\\n\", n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tprintf(\"%lli \", -a[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nsigned main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tlong long *a = malloc(sizeof(long long) * n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lli\", &a[i]);\n\t}\n\tif (n == 1) {\n\t\tprintf(\"1 1\\n0\\n1 1\\n0\\n1 1\\n\");\n\t\tprintf(\"%lli\\n\", -a[0]);\n\t} else {\n\t\tprintf(\"1 1\\n%lli\\n\", -a[0]);\n\t\ta[0] = 0;\n\t\tprintf(\"2 %d\\n\", n);\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tprintf(\"%lli \", a[i] * (n - 1));\n\t\t\ta[i] = a[i] * n;\n\t\t}\n\t\tprintf(\"\\n1 %d\\n\", n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tprintf(\"%lli \", -a[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8190184049079755, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "4ce25929f2a299003e959426dc3e0258", "bug_code_uid": "79a6afce649f0b479ccdc8d5bab12403", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "664031115cd8c7e110068b50468f928a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint s = 0;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tint a;\n\t\tscanf(\"%d\", &a);\n\t\ts += a;\n\t}\n\tif (n==s==1)\n\t{\n\t     printf(\"YES\");\n\t     return 0;\n\t}\n\tif (n==s+1)\n\t     printf(\"YES\");\n\telse\n\t     printf(\"NO\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint s = 0;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tint a;\n\t\tscanf(\"%d\", &a);\n\t\ts += a;\n\t}\n\tif (n==1)\n\t{\n\t     if (s==1)\n\t     {\n\t          printf(\"YES\");\n\t          return 0;\n\t     }\n\t     else\n\t     {\n\t          printf(\"NO\");\n\t          return 0;\n\t     }\n\t}\n\tif (n==s+1)\n\t     printf(\"YES\");\n\telse\n\t     printf(\"NO\");\n\treturn 0;\n}"}
{"similarity_score": 0.8422222222222222, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e0661be0f7d7ddd547358d6d170a7fd1", "bug_code_uid": "725a8658251136bf2de78c456aa2a997", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "5838c32bd350d5f8aa99656b4c351b76", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{   int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {   int a,b,c,d;\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        long long int t=b;\n        if((a>b)&&(d>=c))\n            printf(\"-1\\n\");\n        else\n        {   a=a-b;\n            while(a>0)\n            {   a=a+d-c;\n                t=t+c;\n            }\n            printf(\"%lld\\n\",t);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{   int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {   long long int a,b,c,d;\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n        long long int t=b;\n        if((a>b)&&(d>=c))\n            printf(\"-1\\n\");\n        else\n        {   a=a-b;\n            if(a>0)\n            {   if(a%(c-d)==0)\n                    a=a/(c-d);\n                else\n                    a=a/(c-d)+1;\n                t=t+a*c;\n            }\n            printf(\"%lld\\n\",t);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.5562130177514792, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "b40b8ea8ddc1dce1a4d0a918dd33fce5", "bug_code_uid": "ea16aeecfca023b8d0c4db1d410a6b86", "src_uid": "4dfa99acbe06b314f0f0b934237c66f3", "apr_id": "eef1522ba9f07601805ce83c39e245ce", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n   \nint main()\n{\n  \n   int t;\n   long a,b;\n     scanf(\"%d\",&t);\n     \n    while(t--!=0)\n    {\n      scanf(\"%ld %ld\",&a,&b);\n      printf(\"%ld %ld\",(-1)*a*a,b*b);\n      \n     }\n  return 0;\n}\n \t \t\t\t \t\t\t\t\t\t \t \t\t\t \t\t\t\t  \t \t \t", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    long long int u,v,x,y;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%lld %lld\",&u,&v);\n        x=0-u*u;\n        y=v*v;\n        printf(\"%lld %lld\\n\",x,y);\n    }\n    return 0;\n}\n\n \t  \t    \t\t\t\t \t\t   \t  \t     \t\t\t"}
{"similarity_score": 0.9474474474474475, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "93b6013c4f14ecb44d3b533d476db35f", "bug_code_uid": "ae561f8dcf8917991dd7d416c67c2795", "src_uid": "d5549c0627c236d82541a67ccbe7977d", "apr_id": "a22778b55ae5155095c4abe278d4f301", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k,l,i,j,o,m;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d %d\",&n,&k);\r\n         //l=n+1;\r\n        if((k*2)-1 <= n){\r\n            for(i=1,o=1;i<=n;i++,o=o+2){\r\n\r\n                for(j=1,m=1;j<=n;j++,m=m+2){\r\n                    if(i==j && i%2!=0 && j%2!=0 ){\r\n                         printf(\"R\");\r\n                    }\r\n                    else{\r\n                        printf(\".\");\r\n                    }\r\n\r\n                }\r\n                printf(\"\\n\");\r\n            }\r\n        }\r\n        else{\r\n            printf(\"-1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k,l,i,j,o,m,count;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d %d\",&n,&k);\r\n        count=0;\r\n         //l=n+1;\r\n        if((k*2)-1 <= n){\r\n            for(i=1,o=1;i<=n;i++,o=o+2){\r\n\r\n                for(j=1,m=1;j<=n;j++,m=m+2){\r\n                    if(i==j && i%2!=0 && j%2!=0 && count<k ){\r\n                         printf(\"R\");\r\n                         count++;\r\n                    }\r\n                    else{\r\n                        printf(\".\");\r\n                    }\r\n\r\n                }\r\n                printf(\"\\n\");\r\n            }\r\n        }\r\n        else{\r\n            printf(\"-1\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.13458950201884254, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "c98ca3acdd5cbbb4cfad95d790197803", "bug_code_uid": "25861433e900e84f1fa6e68bfef4ef98", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "9b9c06df24c1e8dc0f3c24babbc35b56", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": " #include <stdio.h>\n\nint main (void)\n{\n    int n,i=0, n1, n2, n3, sum1, sum2, sum3;\n    sum1=0;\n    sum2=0;\n    sum3=0;\n    scanf(\"%d\", &n);\n    while (i<n)\n    {\n      \n        scanf(\"%d %d %d\", &n1, &n2, &n3);\n       \n        \n        sum1=sum1+n1[i];\n        sum2=sum2+n2[i];\n        sum3=sum3+n3[i];\n        \n         i++;\n    }\n    \n  \n    \n    if(sum1==0 && sum2==0 && sum3==0)\n    {\n        printf(\"Yes\\n\");\n       \n    }\n    \n    else\n   {\n    printf(\"No\\n\");\n    \n   }\n    return 0;    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,c,sum1=0,sum2=0,sum3=0;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t  scanf(\"%d%d%d\",&a,&b,&c);\n\t  sum1+=a;\n\tsum2+=b;\n\tsum3+=c;\n\t}\n\tif(sum1==0&&sum2==0&&sum3==0)\n\tprintf(\"YES\\n\");\n\telse \n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.6159895150720839, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8bed6abd833d3a4e023a9206ac7f9eff", "bug_code_uid": "3ab62c556e42b25e1c7af01544386804", "src_uid": "45cf60f551bd5cbb1f3df6ac3004b53c", "apr_id": "bcfe9594a0228239cba64fc4da206dab", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n    int t,n,h1=2,h2=3,h3=1;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        n=n -6;\r\n        while(n){\r\n            h2++;\r\n            if(n==0)\r\n              break;\r\n            h1++;\r\n             if(n==0)\r\n              break;\r\n            h3++;\r\n        }\r\n    printf(\"%d %d %d\\n\",h1,h2,h3);\r\n    h1=2,h2=3,h3=1;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n \r\nint main(){\r\n    int t,n,h1=2,h2=3,h3=1;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        n=n -6;\r\n        h1+=n/3;\r\n        h2+=n/3;\r\n        h3+=n/3;\r\n        if(n%3==1)\r\n          h2++;\r\n        else if(n%3==2)\r\n          h1++,h2++;\r\n    printf(\"%d %d %d\\n\",h1,h2,h3);\r\n    h1=2,h2=3,h3=1;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.23728813559322035, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "96847f6d2a6fd7678944661616798d7d", "bug_code_uid": "ae584ba934fa357085f1f3f3aa9b5e6a", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "45f65bc941f050f93865abf13fd0838f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint x1, x2, x3, x4, d;\n\tscanf(\"%d %d %d %d\", &x1, &x2, &x3, &x4);\n\td = (x1+x2+x3+x4)/3;\n\tif((d-x1)!=0)\n\tprintf(\"%d \",d-x1);\n\tif((d-x2)!=0)\n\tprintf(\"%d \",d-x2);\n\tif((d-x3)!=0)\n\tprintf(\"%d \",d-x3);\n\tif((d-x4)!=0)\n\tprintf(\"%d\",d-x4);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tlong long int k = 0, arr[4];\n\tfor (int i = 0; i<4; i++)\n\t{\n\t\tscanf(\"%lld\", &arr[i]);\n\t\tif (arr[i]>k)\n\t\t   k = arr[i];\n\t}\n\tfor (int i = 0; i<4; i++)\n\t{\n\t\tif (k>arr[i])\n\t\t{\n\t\t\tprintf(\"%lld \", k - arr[i]);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4869169510807736, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e70aaed8290e7275a6367a097136be8a", "bug_code_uid": "6bb08af814f667df6115a43fd8f3cecc", "src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "apr_id": "7898d52adcdbfc487d0a9dea9ca960b8", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n\tint n, t,num = 0,a = 1;\n\tscanf(\"%d\", &n);\n\tint m[5001];\n\tint s[5001];\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &m[i]);\n\t}\n\tfor (int i = 0; i < n - 1; i++)\n\t\tfor (int j = 0; j < n - 1; j++) {\n\t\t\tif (m[j] > m[j + 1]) {\n\t\t\t\tt = m[j];\n\t\t\t\tm[j] = m[j + 1];\n\t\t\t\tm[j + 1] = t;\n\t\t\t}\n\t\t}\n\tfor (int i = 0; i < n; i++)\n\t\ts[i] = a++;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (m[i] != s[i]) {\n\t\t\tnum++;\n\t\t}\n\t}\n\tprintf(\"%d\", num);\n//\tsystem(\"pause\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n\tint n, t,a = 1;\n\tscanf(\"%d\", &n);\n\t int num = 0;\n\tint m[5001];\n\tint s[5001];\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &m[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\ts[i] = a++;\n\tfor (int i = 0; i < n; i++) {\n\t\tint j = 0;\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tif (s[i] == m[j])\n\t\t\t{\n\t\t\t\tnum++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",n - num);\n//\tsystem(\"pause\");\n\treturn 0;\n}"}
{"similarity_score": 0.8936170212765957, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d9df107b7fa71202e45a49f242e8268b", "bug_code_uid": "e411425f6d18eb4b5a5d77e1761726f5", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "b0a1c3a87320484cde51d099350c83bf", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\nint main(){\n    int n,m,sum=0,i;\n    int ara[10000];\n    ara[0]=1;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<m;i++){\n        if(ara[i+1]>ara[i])\n            sum=sum+(ara[i+1]-ara[i]);\n        if(ara[i+1]<ara[i])\n            sum=sum+(ara[i+1]-0)+(n-ara[i]);\n    }\n\n    printf(\"%d\",sum);\n}\n", "fixed": "#include <stdio.h>\nint main(){\n    int n,m,i;\n    unsigned long long sum=0;\n    int ara[100020];\n    ara[0]=1;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<m;i++){\n        if(ara[i+1]>ara[i])\n            sum=sum+(ara[i+1]-ara[i]);\n        if(ara[i+1]<ara[i])\n            sum=sum+(ara[i+1]-0)+(n-ara[i]);\n    }\n\n    printf(\"%llu\",sum);\n}\n"}
{"similarity_score": 0.8587699316628702, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "64c56091220f059095d1a27a6717a13e", "bug_code_uid": "08b918f99e33762b6c3b21bc43f5c956", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "dced2d7278230367cd071229ab90830f", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int numberSets;\r\n    scanf(\"%d\", &numberSets);\r\n\r\n    for (int setNumber = 1; setNumber <= numberSets; setNumber++) {\r\n        int n, m, k, sum, res;\r\n        scanf(\"%d %d %d\", &n, &m, &k);\r\n\r\n        sum = n + m;\r\n\r\n        if (n == 1 && m == 1) {\r\n            printf(\"YES\\n\");\r\n        } else if (sum <= k || sum % k == 0) {\r\n            printf(\"NO\\n\");\r\n        } else {\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int numberSets;\r\n    scanf(\"%d\", &numberSets);\r\n\r\n    for (int setNumber = 1; setNumber <= numberSets; setNumber++) {\r\n        int n, m, k, sum, res;\r\n        scanf(\"%d %d %d\", &n, &m, &k);\r\n\r\n        sum = n + m;\r\n\r\n        if (n * m - 1 == k) {\r\n            printf(\"YES\\n\");\r\n        } else {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9616724738675958, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2a5a216dc72cfc9174952ca8c2424b56", "bug_code_uid": "b60c7cf165df8b5be6d2be7d7b68d59b", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "1a98d2a76665182e032ef84c5a706af1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--)\r\n\t{\r\n\t\t//t--;\r\n\t\tint k;\r\n\t\tscanf(\"%d\", &k);\r\n\t\tfor(int i=1;;i++)\r\n\t\t{\r\n\t\t\tif(i%3==0||i%10==3)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(--k==0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\\n\", i);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--)\r\n\t{\r\n\t\t//t--;\r\n\t\tint k;\r\n\t\tscanf(\"%d\", &k);\r\n\t\tfor(int i=1;;i++)\r\n\t\t{\r\n\t\t\tif(i%3==0||i%10==3)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(--k==0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\\n\", i);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n"}
{"similarity_score": 0.9827357237715804, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "20bd39fa6fc85173ac4949844d9c5cad", "bug_code_uid": "c3caeb8cc0f6c0d2adc31a16d8b90629", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "113a9d622977d9be5abf167df19eb486", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<limits.h>\n#include<stdbool.h>\n\nint int_cmp(const void *a, const void *b) \n{ \n    const int *ia = (const int *)a;\n    const int *ib = (const int *)b;\n    return *ia  - *ib; \n\n} \n\ntypedef long long ll;\n\nll max(ll a,ll b){\n\tif(a<b)\n\t\ta=b;\n\treturn a;\t\n}\n\nll min(ll a,ll b){\n\tif(a>b)\n\t\ta=b;\n\treturn a;\t\n}\n\nll absolu(ll n){\n\tif(n<0)\n\t\tn*=-1;\n\t\n\treturn n;\t\n}\n\n\nll distance(ll a,ll b){\n\treturn absolu(b-a);\n}\n\n\nvoid solve(){\n\tchar a[10001],b[10001];\n\tint i,j,lena,lenb;\n\tscanf(\"%s%s\",a,b);\n\tlena=strlen(a);\n\tlenb=strlen(b);\n\t\n\tif(lena==lenb)\n\t\tprintf(\"%d\\n\",-1);\n\telse\n\t\tprintf(\"%d\\n\",max(lena,lenb));\t\n}\n\nint main(){\nint t;\n/*\tscanf(\"%d\",&t);\n\twhile(t--)*/\n\t\tsolve();\n\t\n\t\n\n\n\treturn 0;\n}\t\t\t\t\t\t\t\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<limits.h>\n#include<stdbool.h>\n\nint int_cmp(const void *a, const void *b) \n{ \n    const int *ia = (const int *)a;\n    const int *ib = (const int *)b;\n    return *ia  - *ib; \n\n} \n\ntypedef long long ll;\n\nll max(ll a,ll b){\n\tif(a<b)\n\t\ta=b;\n\treturn a;\t\n}\n\nll min(ll a,ll b){\n\tif(a>b)\n\t\ta=b;\n\treturn a;\t\n}\n\nll absolu(ll n){\n\tif(n<0)\n\t\tn*=-1;\n\t\n\treturn n;\t\n}\n\n\nll distance(ll a,ll b){\n\treturn absolu(b-a);\n}\n\n\nvoid solve(){\n\tchar a[100001],b[100001];\n\tint i,j,lena,lenb;\n\tscanf(\"%s%s\",a,b);\n\tlena=strlen(a);\n\tlenb=strlen(b);\n\t\n\tif(strcmp(a,b)==0)\n\t\tprintf(\"%d\\n\",-1);\n\telse\n\t\tprintf(\"%d\\n\",max(lena,lenb));\t\n}\n\nint main(){\nint t;\n/*\tscanf(\"%d\",&t);\n\twhile(t--)*/\n\t\tsolve();\n\t\n\t\n\n\n\treturn 0;\n}\t\t\t\t\t\t\t\n"}
{"similarity_score": 0.9860724233983287, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "89b3279243dc11be15da8efc56bb4aac", "bug_code_uid": "805ae9e2db79f4dfc949908b4b696d69", "src_uid": "db4a25159067abd9e3dd22bc4b773385", "apr_id": "0129d1c6698325b822cdb7f33707e3ba", "difficulty": 900, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\nint main()\n{\n\tint n,k,i;\n\tscanf(\"%d %d\",&n,&k);\n\tint x1,x2,y1,y2;\n\tdouble ans,d;\n\tscanf(\"%d %d\",&x1,&y1);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&x2,&y2);\n\t\td = sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n\t\t//printf(\"%.9lf\\n\",d);\n\t\tans += (d);\n\t\tx1 = x2;\n\t\ty1 = y2;\n\t}\n\tprintf(\"%.9lf\\n\",ans/50);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n\nint main()\n{\n\tint n,k,i;\n\tscanf(\"%d %d\",&n,&k);\n\tint x1,x2,y1,y2;\n\tdouble ans,d;\n\tscanf(\"%d %d\",&x1,&y1);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&x2,&y2);\n\t\td = sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n\t\t//printf(\"%.9lf\\n\",d);\n\t\tans += (d);\n\t\tx1 = x2;\n\t\ty1 = y2;\n\t}\n\tprintf(\"%.9lf\\n\",(ans*k)/50);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6538024971623155, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "8b461b6251180a7ca48c5788e480d983", "bug_code_uid": "4100851676fe16d6062615162ce0216f", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "5b626020733fc352c4dc60bb1532d92c", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nvoid solve(void){\r\n    int n,k=0;\r\n    scanf(\"%d\",&n);\r\n    for (int i = 3; i <= n; i+=2)\r\n    {\r\n        if (n%i==0)\r\n        {\r\n            k++;\r\n        }\r\n        \r\n    }\r\n    if (k)\r\n    {\r\n        printf(\"YES\\n\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"NO\\n\");\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\n\r\nint main(void){\r\n    int t;scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nvoid solve(void){\r\n    long long int n;scanf(\"%lld\",&n);\r\n    int k=0;\r\n    for (int i = 1; pow(2,i) <= n; i++)\r\n    {\r\n        if (pow(2,i)==n)\r\n        {\r\n            k++;\r\n        }\r\n        \r\n    }\r\n    if (k)\r\n    {\r\n        printf(\"nO\\n\");\r\n    }\r\n    else\r\n        printf(\"yES\\n\");\r\n    \r\n    \r\n    \r\n}\r\n\r\nint main(void){\r\n    int t;scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9961904761904762, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5dfd7e1fde20c0bd1c4142a55ee6b75e", "bug_code_uid": "12757123dee686f5aca7313a47fd48e4", "src_uid": "9a823b4ac4a79f62cd0c2f88a1c9ef0c", "apr_id": "824020ab6494e8e2a78b51d6a8a5c94d", "difficulty": 1200, "tags": ["schedules", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 1000\n#define M 1000\n\n#define max(a, b) ((a) > (b) ? (a) : (b))\n\nint count[M];\nint n, m;\n\nint main(void) {\n  int i, j, G, S, c, res;\n\n  scanf(\"%d %d\\n\", &n, &m);\n  for (i = 0; i < n; ++i) {\n    for (j = 0; j < m; ++j) {\n      c = getchar();\n      if (c == 'G') G = j;\n      if (c == 'S') S = j;\n    }\n    ++count[max(0, S - G)];\n    getchar();\n  }\n\n  if (count[0]) res = -1;\n  else for (i = 1; i < m; ++i) if (count[i]) ++res;\n  printf(\"%d\\n\", res);\n  exit(EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 1000\n#define M 1000\n\n#define max(a, b) ((a) > (b) ? (a) : (b))\n\nint count[M];\nint n, m;\n\nint main(void) {\n  int i, j, G, S, c, res = 0;\n\n  scanf(\"%d %d\\n\", &n, &m);\n  for (i = 0; i < n; ++i) {\n    for (j = 0; j < m; ++j) {\n      c = getchar();\n      if (c == 'G') G = j;\n      if (c == 'S') S = j;\n    }\n    ++count[max(0, S - G)];\n    getchar();\n  }\n\n  if (count[0]) res = -1;\n  else for (i = 1; i < m; ++i) if (count[i]) ++res;\n  printf(\"%d\\n\", res);\n  exit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9769230769230769, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ca382e052e26a3c1ad372f92655d38f3", "bug_code_uid": "a9eaca2b6848a484faa455efeaba67ac", "src_uid": "dc67dd2102c70ea476df642b863ae8d3", "apr_id": "09ba4a2cb5cb7fdeaeb0fe8ba6348977", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int a,b,j,ans;\n\tint t,count;\n\tscanf(\"%d\",&t);\n\tfor (int i = 0; i < t; ++i)\n\t{\n\t\tj=1;\n\t\tcount=0;\n\t\tscanf(\"%ld%ld\",&a,&b);\n\t\twhile(j*10<=b+1)\n\t\t{\n\t\t\tj=j*10;\n\t\t\tcount=count+1;\n\t\t}\n\t\tans=a*count;\n\t\tprintf(\"%ld\\n\",ans);\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int a,b,j,ans;\n\tint t,count;\n\tscanf(\"%d\",&t);\n\tfor (int i = 0; i < t; ++i)\n\t{\n\t\tj=1;\n\t\tcount=0;\n\t\tscanf(\"%lld%lld\",&a,&b);\n\t\twhile(j*10<=b+1)\n\t\t{\n\t\t\tj=j*10;\n\t\t\tcount=count+1;\n\t\t}\n\t\tans=a*count;\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n}"}
{"similarity_score": 0.9612903225806452, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ba32d0d1f463ab3955b1bbcb7814cbbd", "bug_code_uid": "8ab6b4f82bc64496902d86cf2efafc9b", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "42abfb23414e0f496b121c876ec96c9d", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int note,a25=0,b50=0,flag=1;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&note);\n        if(note==25)\n        {\n            a25+=1;\n        }\n        else if(note==50)\n        {\n            b50+=1;\n            a25-=1;\n            if(a25<0)\n            {\n                flag=0;\n                break;\n            }\n        }\n        else\n        {\n            if(a25>=1&&b50>=50)\n            {\n                a25-=1;\n                b50-=1;\n            }\n            else if(a25>=3)\n                a25-=3;\n            else\n            {\n                flag=0;\n                break;\n            }\n        }\n    }\n    if(flag==0)\n        printf(\"NO\\n\");\n    else\n        printf(\"YES\\n\");\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,note,a25=0,b50=0,flag=1;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&note);\n        if(note==25)\n        {\n            a25+=1;\n        }\n        else if(note==50)\n        {\n            b50+=1;\n            a25-=1;\n            if(a25<0)\n            {\n                flag=0;\n                break;\n            }\n        }\n        else\n        {\n            if(a25>=1&&b50>=1)\n            {\n                a25-=1;\n                b50-=1;\n            }\n            else if(a25>=3)\n                a25-=3;\n            else\n            {\n                flag=0;\n                break;\n            }\n        }\n    }\n    if(flag==0)\n        printf(\"NO\\n\");\n    else\n        printf(\"YES\\n\");\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9952904238618524, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f1919ee9ab19095c053ecf22854b9bfe", "bug_code_uid": "1d901fee639dac0632290739eff01d54", "src_uid": "5d5dfa4f129bda46055fb636ef33515f", "apr_id": "10e5666343c972f963208cd60efea958", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n  int p, n, i, aux;\n  scanf(\"%d%d\", &p, &n);\n  int array[p];\n  for(i = 0; i < p; i++){\n    array[i] = 0;\n  }\n  for(i = 1; i <= n; i++){\n    scanf(\"%d\", &aux);\n    if(array[aux%p]){\n      printf(\"%d\\n\", i);\n      return 0;\n    }\n    array[aux%n] = 1;\n  }\n  printf(\"-1\\n\");\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n  int p, n, i, aux;\n  scanf(\"%d%d\", &p, &n);\n  int array[p];\n  for(i = 0; i < p; i++){\n    array[i] = 0;\n  }\n  for(i = 1; i <=  n; i++){\n    scanf(\"%d\", &aux);\n    if(array[aux%p]){\n      printf(\"%d\\n\", i);\n      return 0;\n    }\n    array[aux%p] = 1;\n  }\n  printf(\"-1\\n\");\n  return 0;\n}\n"}
{"similarity_score": 0.7656765676567657, "equal_cnt": 18, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 11, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "d44bfc5bec4fadae21265d59000cfc5b", "bug_code_uid": "440f20c809a8b0f85454d6089d4bd2e7", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "86ac116b31180b81cc69425fe7640137", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include<stdio.h>\nint main()\n{\n    int n,q,i,m;\n    scanf(\"%d\",&q);\n    for(i=0;i<q;i++){\n        scanf(\"%d\",&n);\n        if(n%2==0 && n>2){\n            m=0;\n        }\n        else if(n%2!=0){\n            m=1;\n        }\n        else if(n==2){\n            m=2;\n        }\n        printf(\"%d\\n\",m);\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int q, n, i, m;\n    scanf(\"%d\", &q);\n\n    for(i=0; i<q; i++){\n    {\n        scanf(\"%d\", &n);\n    }\n    if(n%2==0 && n>2)\n    {\n        m=0;\n    }\n    else if(n%2!= 0)\n    {\n        m=1;\n    }\n    else if(n==2)\n    {\n        m=2;\n    }\n    printf(\"%d\\n\",m);\n    }\n\n}\n"}
{"similarity_score": 0.2719298245614035, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7e2714862af5cb53fe760b6fcda50da9", "bug_code_uid": "4030453b67223fe74e150b25b78f939f", "src_uid": "0a05b11307fbb2536f868acf4e81c1e2", "apr_id": "1651a4ae02c5dcd6d9729d4c8dcbba84", "difficulty": 800, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,m=0,n,s,x=0;\n\tscanf(\"%d\",&i);\n\tfor(j=1;j<=i;j++)\n\t{\n\t   scanf(\"%d%d\",&n,&s);\t   \n\t   m=n/2;\n\t   x=s/(m+1);\n\t   printf(\"%d\",x);\n    }\n\treturn 0;\n}\n     \t \t \t\t  \t\t\t     \t\t\t\t \t\t", "fixed": "#include<stdio.h>\nvoid median(int a,int b)\n{\nprintf(\"%d\\n\",b/((a/2)+1));\n}\nint main()\n{\nint n;\nscanf(\"%d\",&n);\n\nint m[n],s[n];\nfor(int i=0;i<n;i++)\n{\nscanf(\"%d%d\",&m[i],&s[i]);\nmedian(m[i],s[i]);\n}\nreturn 0;\n}\n\n\t\t\t  \t \t\t  \t\t\t\t\t\t \t\t \t   \t\t\t\t\t\t"}
{"similarity_score": 0.9939810834049871, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b3a3fd63304fc30de65624812df04f55", "bug_code_uid": "012e4ec0026c7f0d6e1720c309de0852", "src_uid": "6493e146ea8d931582d77bb1b0f06e53", "apr_id": "5f74641763b693099ca07851e8a1ed7b", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint d,n, m;\nlong long a[300010], b[300010], c[300010];\nlong long gcd(long long a,long long b) \n{\n    if(b==0) return a;\n    return gcd(b,a%b);\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 0;i < n; ++i)\n\t\tscanf(\"%lld\", &a[i]);\n\tfor(int i = 0;i < m; ++i)\n\t\tscanf(\"%lld\", &b[i]);\n\tfor(int i = 1;i < n; ++i)\n\t\tc[i] = a[i] - a[i - 1];\n\td = c[1];\n\tfor(int i = 1;i < n; ++i)\n\t{\n\t\td = gcd( d, c[i]);\n\t}\n\tfor(int i = 0;i < m; ++i)\n\t{\n\t\tif( d % b[i] == 0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%lld %d\", a[0], i + 1);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n } ", "fixed": "#include<stdio.h>\nint n, m;\nlong long a[300010], b[300010], c[300010], d;\nlong long gcd(long long a,long long b) \n{\n    if(b==0) return a;\n    return gcd(b,a%b);\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 0;i < n; ++i)\n\t\tscanf(\"%lld\", &a[i]);\n\tfor(int i = 0;i < m; ++i)\n\t\tscanf(\"%lld\", &b[i]);\n\tfor(int i = 1;i < n; ++i)\n\t\tc[i] = a[i] - a[i - 1];\n\td = c[1];\n\tfor(int i = 2;i < n; ++i)\n\t{\n\t\td = gcd( d, c[i]);\n\t}\n\tfor(int i = 0;i < m; ++i)\n\t{\n\t\tif( d % b[i] == 0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%lld %d\", a[0], i + 1);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n } "}
{"similarity_score": 0.9826707441386341, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "de7b13856a321c69d10ae1ff2183c29c", "bug_code_uid": "54f578bb07ac1e03ae3dae8a7c9040d7", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "ce76eba0735b150400996982af66143c", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int i,j,count,c,sum=0,test_count,arra[100];\n    scanf(\"%d\",&test_count);\n    while(test_count--)\n    {\n        c=0;\n        scanf(\"%d\",&count);\n        for(i=0; i<count; i++)\n        {\n            scanf(\"%d\",&arra[i]);\n            if(arra[i]==0)\n            {\n                c++;\n                arra[i]+=1;\n            }\n            sum+=arra[i];\n        }\n        if(sum==0)\n            c++;\n        printf(\"%d\\n\",c);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int i,j,count,c,sum,test_count,arra[100];\n    scanf(\"%d\",&test_count);\n    while(test_count--)\n    {\n        c=0;\n        sum=0;\n        scanf(\"%d\",&count);\n        for(i=0; i<count; i++)\n        {\n            scanf(\"%d\",&arra[i]);\n            if(arra[i]==0)\n            {\n                c++;\n                arra[i]+=1;\n            }\n            sum+=arra[i];\n        }\n        if(sum==0)\n            c++;\n        printf(\"%d\\n\",c);\n    }\n}\n"}
{"similarity_score": 0.99830220713073, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "73412189bf805e71361344e26a09eabf", "bug_code_uid": "c1b4d5797090ed2c14b3f7e21c7f0d5e", "src_uid": "388450021f2f33177d905879485bb531", "apr_id": "b4f68094ed8a4222d926cfce5a09c6eb", "difficulty": 1000, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint gcd(int a, int b)\n{\n\tif(b == 0)\n\treturn a;\n\treturn gcd(b, a%b);\t\n}\n\nint main()\n{\n\tint a, b, p, t, i;\n\t\n\tscanf(\"%d\", &t);\n\tfor(i = 0; i < t; i++){\n\tscanf(\"%d %d\", &a, &b);\n\t\n\tp = gcd(a, b);\n\t\n\tif(p == 1)\n\tprintf(\"Finite\\n\");\n\telse\n\tprintf(\"Infinte\\n\");\n\t}\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint gcd(int a, int b)\n{\n\tif(b == 0)\n\treturn a;\n\treturn gcd(b, a%b);\t\n}\n\nint main()\n{\n\tint a, b, p, t, i;\n\t\n\tscanf(\"%d\", &t);\n\tfor(i = 0; i < t; i++){\n\tscanf(\"%d %d\", &a, &b);\n\t\n\tp = gcd(a, b);\n\t\n\tif(p == 1)\n\tprintf(\"Finite\\n\");\n\telse\n\tprintf(\"Infinite\\n\");\n\t}\n\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.989821882951654, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e7b14fba8fcdcef863070d7e7e16d568", "bug_code_uid": "335582612e137b84ce801cfb0ec67e44", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "ec6957b9b32edc49d6e9461aaf014a18", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int s[n];\n    for( i=0;i<n;i++)\n        scanf(\"%d\",&s[i]);\n    int stairs[1000]={0};\n    int stair=0;\n    int count=0;\n    int stairway=0;\n    for(i=0;i<n;i++)\n    {\n         if(s[i]==1)\n        {\n            stairway++;\n            for(int j=i+1;j<=n;j++)\n            {\n                if(s[j]==1)\n                   { stair++;\n                    break;\n                   }\n                else { stair++;\n\n                }\n            }\n            //printf(\"stairs number: %d \\t\", stair);\n            stairs[count]=stair;\n            stair=0;\n            count++;\n\n\n        }\n\n}\nprintf(\"Stairway number: %d\\n\",stairway);\nfor(i=0;i<1000;i++)\n{\n\n    if(stairs[i]==0)\n        break;\n         printf(\"%d \\t\",stairs[i]);\n}\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    int s[n];\n    for( i=0;i<n;i++)\n        scanf(\"%d\",&s[i]);\n    int stairs[1000]={0};\n    int stair=0;\n    int count=0;\n    int stairway=0;\n    for(i=0;i<n;i++)\n    {\n         if(s[i]==1)\n        {\n            stairway++;\n            for(int j=i+1;j<=n;j++)\n            {\n                if(s[j]==1)\n                   { stair++;\n                    break;\n                   }\n                else { stair++;\n\n                }\n            }\n            //printf(\"stairs number: %d \\t\", stair);\n            stairs[count]=stair;\n            stair=0;\n            count++;\n\n\n        }\n\n}\nprintf(\" %d\\n\",stairway);\nfor(i=0;i<1000;i++)\n{\n\n    if(stairs[i]==0)\n        break;\n         printf(\"%d \\t\",stairs[i]);\n}\n}\n\n"}
{"similarity_score": 0.4250871080139373, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "30530e6023a117186eaf50b01a3502f6", "bug_code_uid": "ff2b4e771bafacbd9af7e0bd3765d603", "src_uid": "788ae500235ca7b7a7cd320f745d1070", "apr_id": "68428a356a8c9398cc8daf8b6618d4e0", "difficulty": 1700, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint flag=0;\nmain()\n{\nint n,p;\nscanf(\"%d %d\",&n,&p);\nchar str[1001];\nscanf(\"%s\",str);\nint i,j,m;\n\nfor(i=n-1;i>=0;i--)\n{\nj=(int)(str[i])+1;\n\nfor(;j<=p+96;j++)\n{\nif (i>=2){\nif (((char)(j)!=str[i-1])&&((char)(j)!=str[i-2]))\n{\nstr[i]=(char)j;\t\t\t\t\nprintf(\"%s\\n\",str);\nflag=1;\t\t\t\t\nbreak;\t\n}\n} // i>2\nelse if (i==1)\n{\nif ((char)(j)!=str[i-1])\n{\nstr[i]=(char)(j);\t\t\t\t\nprintf(\"%s\\n\",str);\nflag=1;\nbreak;\t\n}\n}// i==1\nelse\n{\nstr[i]=(char)(j);\nprintf(\"%s\\n\",str);\nflag=1;\nbreak;\n}\n\n}//for j\nif (flag==0)\n{\nstr[i]='a';\nfor(m=i+1;m<n;m++)\nstr[m]=(char)(str[m]+1);\n}\nelse\nbreak;\n\n}//for i \nif (flag==0)\nprintf(\"NO\\n\");\n}//main\n", "fixed": "#include<stdio.h>\nmain()\n{\nint n,p;\nint i,j,i1,j1;\nscanf(\"%d %d\",&n,&p);\nchar str[1001];\nscanf(\"%s\",str);\nint flag=0;\nfor(i=n-1;i>=0;i--)\n{\nfor(j=((int)(str[i])+1);j<=p+96;j++)\n{\nif (i>=2)\n{\n if (((char)(j)!=str[i-1])&&((char)(j)!=str[i-2]))\n{\nflag=1;\nstr[i]=(char)(j);\nbreak;\n}\n}// i>2\nelse if (i==1)\n{\nif ((char)(j)!=str[i-1])\n{\nflag=1;\nstr[i]=(char)(j);\nbreak;\n}\n}// i==1\nelse\n{\nflag=1;\nstr[i]=(char)(j);\nbreak;\n}\n}// for j\n\nif (flag==1)\n{\nfor (i1=i+1;i1<n;i1++)\n{\nfor(j1=97;j1<=p+96;j1++)\n{\nif (i1==1)\n{\nif ((char)(j1)!=str[i1-1])\n{\nstr[i1]=(char)j1;\nbreak;\n}\n}// i1==1\nelse\n{\nif (((char)(j1)!=str[i1-1])&&((char)(j1)!=str[i1-2]))\n{\nstr[i1]=(char)j1;\nbreak;\n}\n}\n}// for j1\n}// for i1\nbreak;\n}// flag_check\n}//for i loop\nif (flag==0)\nprintf(\"NO\\n\");\nelse\nprintf(\"%s\\n\",str);\n\n}//main\n"}
{"similarity_score": 0.9957173447537473, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b411f80ef52c18ea6f507a5971e44fb7", "bug_code_uid": "702cf7f5c4d82b95835be9ba5fe407ac", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "9472d15040917353d0d1e1300d99bf7b", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n    char number[10];\n    scanf(\"%s\",&number);\n    int i,lastIndex=-1;\n    for(i=0;number[i+1]!=0;i++){\n        if(lastIndex==-1&&number[i]=='0'){\n            lastIndex=i;\n        }\n    }\n    int n=i+1;\n    if(lastIndex==-1){\n        for(i=0;i<n-1;i++){\n            printf(\"%c\",number[i]);\n        }\n        return 0;\n    }\n    for(i=0;i<n;i++){\n        if(i!=lastIndex){\n            printf(\"%c\",number[i]);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain(){\n    char number[100000];\n    scanf(\"%s\",&number);\n    int i,lastIndex=-1;\n    for(i=0;number[i+1]!=0;i++){\n        if(lastIndex==-1&&number[i]=='0'){\n            lastIndex=i;\n        }\n    }\n    int n=i+1;\n    if(lastIndex==-1){\n        for(i=0;i<n-1;i++){\n            printf(\"%c\",number[i]);\n        }\n        return 0;\n    }\n    for(i=0;i<n;i++){\n        if(i!=lastIndex){\n            printf(\"%c\",number[i]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.95703125, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "26720cf4dd76867c1bfa6c5b2afe2fb5", "bug_code_uid": "f782ee2bdc7ca600577773ffdfa84b44", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "a9702d14b6cbc5286eb080a204e0fd50", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int t;\n    scanf(\"%i\",&t);\n    while(t--){\n        int a,b,n,i;\n        scanf(\"%i%i%i\",&n,&a,&b);\n        for(i=0;i<n;i++){\n            printf(\"%c\",'a'+(i%b));\n        }\n        printf(\"%c\\n\",'\\0');\n    }\n    return 0-0-0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    int t;\n    scanf(\"%i\",&t);\n    while(t--){\n        int a,b,n,i;\n        scanf(\"%i%i%i\",&n,&a,&b);\n        for(i=0;i<n;i++){\n            printf(\"%c\",'a'+(i%b));\n        }\n        putchar('\\n');\n    }\n    return 0-0-0;\n}"}
{"similarity_score": 0.7442748091603053, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c104cef7a650c9db45662ef85fb8b11b", "bug_code_uid": "18348c2897bbd7ca2275e6898c67d9dd", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "c572dcdb8a2fdb9ea3031ded7fa17a44", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint y,k,n;\n\tscanf(\"%d %d %d\",&y,&k,&n);\n\tint flag = 0;\n\tint t;\n\tfor(t = 1;t*k <= n && y < n;t++)\n\t{\n\t\tflag = 1;\n\t\tint temp = t*k;\n\t\ttemp-=y;\n\t\tif(temp>0)printf(\"%d \",temp);\n\n\t}\n\n\tif(flag==0)\n\t\tprintf(\"-1\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint y,k,n;\n\tscanf(\"%d %d %d\",&y,&k,&n);\n\tint flag = 0;\n\tint t;\n\tfor(t = 1;t*k <= n && y < n;t++)\n\t{\n\t\t\n\t\tint temp = t*k;\n\t\ttemp-=y;\n\t\tif(temp>0)\n\t\t{\n\t\t\tflag = 1;\n\t\t\tprintf(\"%d \",temp);\t\t\n\t\t}\n\n\t}\n\n\tif(flag==0)\n\t\tprintf(\"-1\");\n\treturn 0;\n}"}
{"similarity_score": 0.6818181818181818, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c1e7b49743c2daf0663c335b0402b1d9", "bug_code_uid": "63a5ed005f3eb39f70f60b5e40a01d7a", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "4cf2e824ede05f44e1d800593c11bb1f", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,b[1000000],i,max,min,d=0,c=0,e=0;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%I64d\",&b[i]);\n    max=b[0];\n    min=b[0];\n    for(i=1;i<n;i++)\n    {\n        if(b[i]==b[0])\n        e++;\n    }\n    if(e==n-1)\n    printf(\"0 0\");\n    else\n    {\n    for(i=0;i<n;i++)\n    {\n        if(b[i]>max)\n        max=b[i];\n        else if(b[i]<min)\n        min=b[i];\n    }\n    printf(\"%I64d \",max-min);\n    for(i=0;i<n;i++)\n    {\n        if(b[i]==max)\n        c++;\n        else if(b[i]==min)\n        d++;\n    }\n    printf(\"%I64d\",d*c);\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,b[1000000],i,max,min,d=0,c=0,e=0;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    scanf(\"%I64d\",&b[i]);\n    max=b[0];\n    min=b[0];\n    for(i=1;i<n;i++)\n    {\n        if(b[i]==b[0])\n        e++;\n    }\n    if(e==n-1)\n    printf(\"0 %I64d\",n*(n-1)/2);\n    else\n    {\n    for(i=0;i<n;i++)\n    {\n        if(b[i]>max)\n        max=b[i];\n        else if(b[i]<min)\n        min=b[i];\n    }\n    printf(\"%I64d \",max-min);\n    for(i=0;i<n;i++)\n    {\n        if(b[i]==max)\n        c++;\n        else if(b[i]==min)\n        d++;\n    }\n    printf(\"%I64d\",d*c);\n    }\n}"}
{"similarity_score": 0.9602272727272727, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0528e1e9c0449de2cd90a95e89d2c698", "bug_code_uid": "e03b5309fd905890302f8b9172f3ed2b", "src_uid": "168f2a740d21a3a916a9d560fbcffeb9", "apr_id": "2b0d3342310e49cad26053f0885b63f0", "difficulty": 800, "tags": ["brute force", "greedy", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nconst int N =110;\r\nint a[N],b[N];\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,k;\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tint x,y;\r\n\t\tfor(int i=0;i<n-1;i++)\r\n\t\t{\r\n\t\t\tfor(int j=0;j<n-i-1;j++)\r\n\t\t\t{\r\n\t\t\t\tif(a[j+1]<a[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tx=a[j+1],a[j+1]=a[j],a[j]=x;\r\n\t\t\t\t\ty=b[j+1],b[j+1]=b[j],b[j]=y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(k>=a[i])k+=b[i];\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",k);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nconst int N =110;\r\nint main()\r\n{\r\n\tint t,a[N],b[N];\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,k;\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tint x,y;\r\n\t\tfor(int i=0;i<n-1;i++)\r\n\t\t{\r\n\t\t\tfor(int j=0;j<n-i-1;j++)\r\n\t\t\t{\r\n\t\t\t\tif(a[j+1]<a[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tx=a[j+1],a[j+1]=a[j],a[j]=x;\r\n\t\t\t\t\ty=b[j+1],b[j+1]=b[j],b[j]=y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(k>=a[i])k+=b[i];\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",k);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9945525291828794, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "347804de4a2d8659cd298290a93598b3", "bug_code_uid": "4118266bb8000bc633e294ba5b08cfa4", "src_uid": "7a647a5f10cdcd2b54a1927107edea4f", "apr_id": "5b6044906a14e3c85410dac8e621e70d", "difficulty": 1300, "tags": ["data structures", "binary search", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define SIZE 1000000\n\nstatic int prod[SIZE+1], ans[SIZE+1][10];\n\nint main(void)\n{\n    size_t q, i, j, l, r, k, n;\n\n    for (i = 1; i <= SIZE; i++) {\n        j = i;\n        prod[i] = 1;\n        while (j) {\n            if (j % 10 != 0) {\n                prod[i] *= j % 10;\n            }\n            j /= 10;\n        }\n\n        prod[i] = prod[prod[i]];\n        for (j = 1; j < 10; j++) {\n            ans[i][j] = ans[i - 1][j];\n        }\n        ans[i][prod[i]]++;\n    }\n\n    scanf(\"%d\", &q);\n\n    while (q--) {\n        scanf(\"%lu %lu %lu\", &l, &r, &k);\n        printf(\"%d\\n\", ans[r][k] - ans[l][k]);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define SIZE 1000000\n\nstatic int prod[SIZE+1], ans[SIZE+1][10];\n\nint main(void)\n{\n    size_t q, i, j, l, r, k, n;\n\n    for (i = 1; i <= SIZE; i++) {\n        j = i;\n        prod[i] = 1;\n        while (j) {\n            if (j % 10 != 0) {\n                prod[i] *= j % 10;\n            }\n            j /= 10;\n        }\n\n        prod[i] = prod[prod[i]];\n        for (j = 1; j < 10; j++) {\n            ans[i][j] = ans[i - 1][j];\n        }\n        ans[i][prod[i]]++;\n    }\n\n    scanf(\"%lu\", &q);\n\n    while (q--) {\n        scanf(\"%lu %lu %lu\", &l, &r, &k);\n        printf(\"%d\\n\", ans[r][k] - ans[l - 1][k]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.4606598984771574, "equal_cnt": 26, "replace_cnt": 13, "delete_cnt": 3, "insert_cnt": 10, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "c38b09d91094e1e42d2130e979632553", "bug_code_uid": "acf600c55e79f5ffc8a9d93dea96eea6", "src_uid": "bd9da9081902a87c61591fb58fcecfe3", "apr_id": "d543b360ffeedfbd4c9e76252e34126d", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n            int len,i,j,ans=0,k=3;\r\n        char str[2000000];\r\n        scanf(\"%s\", &str);\r\n        len=strlen(str);\r\n        for(i=0;i<len;i=i+k){\r\n            for(j=i+1;j<i+k;j++){\r\n                if(str[i]==str[j] ){\r\n                    k++;\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n for(j=i+1;j<i+k;j++){\r\n                if(str[i+k]==str[j] || str[i+k]==str[i] ){\r\n                    k++;\r\n\r\n                }\r\n }\r\n\r\n            ans++;\r\n\r\n\r\n\r\n        }\r\n      printf(\"%d\\n\", ans);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n    while(tc!=0){\r\n            tc--;\r\n        char ara[2000001];\r\n        char ara2[4];\r\n        int len, i,j=0,ans=1;\r\n        scanf(\"%s\", &ara);\r\n        len=strlen(ara);\r\n         ara2[0]=0;\r\n        ara2[1]=0;\r\n        ara2[2]=0;\r\n    ara2[3]=0;\r\n        for(i=0;i<len;i++){\r\n            if(ara[i]==ara2[0] || ara[i]==ara2[1] || ara[i]==ara2[2] ){\r\n                continue;\r\n            }\r\n            else{\r\n                    ara2[j]=ara[i];\r\n            j++;\r\n            }\r\n           // printf(\"%c %d %d #\\n\", ara[i], j, ans);\r\n\r\n             if(j==4){\r\n                    i--;\r\n                j=0;\r\n            ans++;\r\n                ara2[0]=0;\r\n                ara2[1]=0;\r\n                ara2[2]=0;\r\n                ara2[3]=0;\r\n\r\n             }\r\n\r\n            }\r\n\r\n\r\n        printf(\"%d\\n\", ans);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9597069597069597, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "65981a180955125d3f3238f4881b9a92", "bug_code_uid": "60a1c2614480e0ede8493ef78f3c75a3", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "86cb1231db864bccd161cf2226d34e6f", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int n,p,a,b=0,i,c=0;\n    char m[1000];\n    scanf(\"%d %d\",&n,&p);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%s %d\",&m[i],&a);\n        if(m[i]=='+')\n            p+=a;\n        else if(m[i]=='-')\n            {\n                if(p>=a)\n                    p-=a;\n                else c++;\n        }\n    }\n    printf(\"%d %d\",p,c);\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    long long int n,p,a,b=0,i,c=0;\n    char m[1000];\n    scanf(\"%lld %lld\",&n,&p);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%s %lld\",&m[i],&a);\n        if(m[i]=='+')\n            p+=a;\n        else if(m[i]=='-')\n            {\n                if(p>=a)\n                    p-=a;\n                else c++;\n        }\n    }\n    printf(\"%lld %lld\",p,c);\n}\n"}
{"similarity_score": 0.5553191489361702, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ebe65815c325cd6fa202942f52e00551", "bug_code_uid": "18fbef58263560a0c04ecb9cf815778f", "src_uid": "779ab09a588bbb52485ae5b6a441b235", "apr_id": "0e6c0e771496241e864cbb24bb3203f4", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int line;\n    scanf(\"%d\",&line);\n    for(int i = 0; i < line; i++){\n        int n;\n\tscanf(\"%d\",&n);\n\tint *arr;\n\tarr = (int*)malloc(sizeof(int) * n);\n\tfor(int j = 0; j < n; j++) scanf(\"%d\",&arr[j]);\n\tif(n == 1) printf(\"1\\n\");\n\telse{\n\t    int a=0,e=1;\n\t    while(a <= (n-1) &&  e <= (n-1)){\n\t        if(arr[a] == 0) a++;\n\t\tif(arr[e] == 0) e++;\n\t\tif(a == e) a++;\n\t\telse{\n\t\t    arr[a]--;\n\t\t    arr[e]--;\n\t\t}\n\t    }\n\t    for(int k = 0; k < n; k++) if(arr[k] != 0) printf(\"%d\\n\",k+1);\n\t}\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int line;\n    scanf(\"%d\",&line);\n    for(int i = 0; i < line; i++){\n        int n;\n\tscanf(\"%d\",&n);\n\tint *arr;\n\tarr = (int*)malloc(sizeof(int) * n);\n\tfor(int k = 0; k < n; k++) scanf(\"%d\",&arr[k]);\n\n\tint pt = 0;\n\tfor(int i = 0; i < n; i++){\n\t    if(arr[i] > arr[pt]) pt = i;\n\t}\n\tprintf(\"%d\\n\",(pt+1));\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.36363636363636365, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "39c71722b5a095ff31d8f22037ed426a", "bug_code_uid": "287f5dedf83ca0f82e891390f653a679", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "22e7573fe3ba202cd5945313abd97701", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n\tint n,x,s=0,a,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\ts=s+a;\n\t}\n\tx=ceil(s/4.0);\n\tprintf(\"%d\",x);\n}", "fixed": "#include<stdio.h>\nint A[5],n,x,w;\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&x);\n\t\tA[x]++;\n\t}w = A[1] - A[3] + 2 * (A[2] & 1);\n\n\tprintf(\"%d\",A[4] + A[2] / 2 + A[3] + (A[1] > A[3] ? w / 4 + (w % 4 != 0) : (A[2] & 1)));\n\treturn 0;\n}"}
{"similarity_score": 0.9361702127659575, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fb48f318bca2705be6731add75660f8b", "bug_code_uid": "3d97e33394403a6065816e8e4544002d", "src_uid": "78f25e2bc4ff22dbac94f72af68a745f", "apr_id": "56ca220878791a0dc7d3e7004713dfa0", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main(void) {\n\t// your code goes here\n\tint n;\n\tscanf(\"%d\\n\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint h,b,c,c1=0,c2=0;\n\t\tscanf(\"%d %d %d\\n\",&h,&b,&c);\n\t\tfor(int i=1;i<=b+c;i++)\n\t\t{\n\t\t\t\n\t\t\t\tif(h<=0)\n\t\t\t\tbreak;\n\t\t\tif(h>20)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif(c1<b )\n\t\t\t\t{\n\t\t\t\tc1+=1;\n\t\t\t\th=h/2+10;\n\t\t\t\t}\n\t\t\t\telse if(c2<c)\n\t\t\t\t{\n\t\t\t\t\tc2+=1;\n\t\t\t\t\th=h-10;\n\t\t\t\t}\n\t\t\t}\n\t\t\t else if(h<=20)\n\t\t\t{\n\t\t\t\t\n\t\t\t if(c2<c )\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\tc2+=1;\n\t\t\t\th=h-10;\n\t\t\t\t}\n\t\t\t\telse if(c1<b)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"1 \");\n\t\t\t\t\tc1+=1;\n\t\t\t\t\th=h/2+10;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\tif(h<=0)\n\tprintf(\"YES\\n\");\n\telse \n\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n \nint main(void) {\n\t// your code goes here\n\tint n;\n\tscanf(\"%d\\n\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint h,b,c,c1=0,c2=0;\n\t\tscanf(\"%d %d %d\\n\",&h,&b,&c);\n\t\tfor(int i=1;i<=b+c;i++)\n\t\t{\n\t\t\t\n\t\t\tif(h<=0)\n\t\t\t\tbreak;\n\t\t\tif(h>20)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif(c1<b )\n\t\t\t\t{\n\t\t\t\tc1+=1;\n\t\t\t\th=h/2+10;\n\t\t\t\t}\n\t\t\t\telse if(c2<c)\n\t\t\t\t{\n\t\t\t\t\tc2+=1;\n\t\t\t\t\th=h-10;\n\t\t\t\t}\n\t\t\t}\n\t\t\t else if(h<=20)\n\t\t\t{\n\t\t\t\t\n\t\t\t if(c2<c )\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\tc2+=1;\n\t\t\t\th=h-10;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\tif(h<=0)\n\tprintf(\"YES\\n\");\n\telse \n\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9088937093275488, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e8257e4a03de530ef3fadbb0cb1acc81", "bug_code_uid": "391a96f1ff73b690e3c84cbe0064f97b", "src_uid": "130fd7f40d879e25b0bff886046bf699", "apr_id": "26ff64b00f5f667b18208e4ec4251b02", "difficulty": 900, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,m;\n    scanf(\"%d\",&t);\n    m=t-1;\n    int arr[t];\n    while(t--)\n    {\n    int n,max=0,nmax=0;\n    scanf(\"%d\",&n);\n    int ar;\n    for(int i=0;i<n;i++)\n    {\n    scanf(\"%d\",&ar);\n    if(ar>max)\n    max=ar;\n    else if(ar>nmax)\n    nmax=ar;\n    }\n    if(n-2>=nmax-1)\n    arr[t]=nmax-1;\n    else\n    arr[t]=n-2;\n    }\n    for(int i=m;i>=0;i--)\n    printf(\"%d\\n\",arr[i]);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,m;\n    scanf(\"%d\",&t);\n    m=t-1;\n    int arr[t];\n    while(t--)\n    {\n    int n,max=0,nmax=0;\n    scanf(\"%d\",&n);\n    int ar;\n    for(int i=0;i<n;i++)\n    {\n    scanf(\"%d\",&ar);\n    if(ar>max)\n    {\n    nmax=max;\n    max=ar;\n    \n    }\n    else if(ar>nmax)\n    nmax=ar;\n    }\n    if(n-2>=nmax-1)\n    arr[t]=nmax-1;\n    else\n    arr[t]=n-2;\n    //printf(\"%d %d\\n\",nmax,max);\n    }\n    \n    for(int i=m;i>=0;i--)\n    printf(\"%d\\n\",arr[i]);\n    return 0;\n}"}
{"similarity_score": 0.9543147208121827, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e52cde1330ecf6246efb5e4490640d14", "bug_code_uid": "a1193f8a878649188b47659435586c16", "src_uid": "2d6a1202139e1f77f32377224e1fe752", "apr_id": "332e6eb6ccc5e423f47ec82a64c7b08e", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n\nint opp(int f) {\n  switch ( f ) {\n    case 1: return 6;\n    case 2: return 5;\n    case 3: return 4;\n    case 4: return 3;\n    case 5: return 2;\n    case 6: return 1;\n  }\n}\n\nint main() {\n  int i, ndice, top, lf, rf;\n  bool ok;\n\n  scanf(\"%d %d\", &ndice, &top);\n  for ( i=0, ok=true; i < ndice; ++i ) {\n    scanf(\"%d %d\", &lf, &rf);\n    if ( lf == top || rf == top ) {\n      ok = false;\n      break;\n    }\n    top = opp(top);\n  }\n  if ( ok )\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n  return EXIT_SUCCESS;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n#include <stdlib.h>\n\nint opp(int f) {\n  switch ( f ) {\n    case 1: return 6;\n    case 2: return 5;\n    case 3: return 4;\n    case 4: return 3;\n    case 5: return 2;\n    case 6: return 1;\n  }\n}\n\nint main() {\n  int i, ndice, top, lf, rf;\n  bool ok;\n\n  scanf(\"%d %d\", &ndice, &top);\n  for ( i=0, ok=true; i < ndice; ++i ) {\n    scanf(\"%d %d\", &lf, &rf);\n    if ( lf == top || lf == opp(top) || rf == top || rf == opp(top) ) {\n      ok = false;\n      break;\n    }\n    top = opp(top);\n  }\n  if ( ok )\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n  return EXIT_SUCCESS;\n}\n"}
{"similarity_score": 0.9950124688279302, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "753827b81d05d2378c533765ac260ed8", "bug_code_uid": "d9cb05e87eb0eef542ec1846e454c179", "src_uid": "fe2131c9228a2ec4365fdc3d0faa413a", "apr_id": "5f729e468c743eea22ce066d281dc52b", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stido.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n],i;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]%2==1)\r\n            printf(\"%d \",a[i]);\r\n        }\r\n        for(i=0;i<n;i++)\r\n        if(a[i]%2==0)\r\n        printf(\"%d \",a[i]);\r\n        printf(\"\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n],i;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]%2==1)\r\n            printf(\"%d \",a[i]);\r\n        }\r\n        for(i=0;i<n;i++)\r\n        if(a[i]%2==0)\r\n        printf(\"%d \",a[i]);\r\n        printf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.4888392857142857, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "6eb991590ec926bfd93f5d2ce7822c28", "bug_code_uid": "0b66bc7b8b789a4a324827d23ae3d4e1", "src_uid": "f89bd4ec97ec7e02a7f67feaeb4d3958", "apr_id": "d3af90ca560ba6a8436bb1b47e17480d", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        int a[m];\r\n        for(j=1;j<m;j++)\r\n        {\r\n            a[j]=j;\r\n        }\r\n        a[0]=m;\r\n        for(j=0;j<m;j++)\r\n        {\r\n            printf(\"%d \",a[j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        if(m%2==0)\r\n        {\r\n            for(j=1;j<=m;j=j+2)\r\n            {\r\n                printf(\"%d %d \",j+1,j);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            for(j=1;j<=m-3;j=j+2)\r\n            {\r\n                printf(\"%d %d \",j+1,j);\r\n            }\r\n            printf(\"%d %d %d \",m,m-2,m-1);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8719512195121951, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "52f36826904d9cfb0daec031e52b97af", "bug_code_uid": "0ae2f63cac6312950b9843a81415121f", "src_uid": "f110b9351fe8ff20676d11ecfc92aee3", "apr_id": "925e1ca11e7f4fee405b7eae85cc7a54", "difficulty": 1300, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\tint n, m; scanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i++) {\n\t\tscanf(\"%d\", &a);\n\t\tint pass=0;\n\t\tint visited[10004] = { 0 };\n\t\tint visited2[10004] = { 0 };\n\t\tfor (int i = 1; i <= a; i++) {\n\t\t\tscanf(\"%d\", &b);\n\t\t\tif (b < 0){\n\t\t\t    if (visited[b] == 1) pass = 1;\n\t\t\t    else visited2[b] = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t    if (visited2[b] == 1) pass = 1;\n\t\t\t    else visited[b] = 1;\n\t\t\t}\n\t\t}\n\t\tif (pass == 0) {\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\");\n}", "fixed": "#include <stdio.h>\nint a, b;\nint main() {\n\tint n, m; scanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i++) {\n\t\tscanf(\"%d\", &a);\n\t\tint pass = 0;\n\t\tint visited[10004] = { 0 };\n\t\tint visited2[10004] = { 0 };\n\t\tfor (int i = 1; i <= a; i++) {\n\t\t\tscanf(\"%d\", &b);\n\t\t\tif (b < 0) {\n\t\t\t\tif (visited[-b] == 1) pass = 1;\n\t\t\t\telse visited2[-b] = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (visited2[b] == 1) pass = 1;\n\t\t\t\telse visited[b] = 1;\n\t\t\t}\n\t\t}\n\t\tif (pass == 0) {\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\");\n}"}
{"similarity_score": 0.9407079646017699, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c62d6e8c0c2a65bf6acba0b8f58f62a3", "bug_code_uid": "a7cc124689ca5e38e181567dbbd7fb4f", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "e44947354e70cc7c98fdedd119d1eadd", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid merge(int* a,int* c,int* b,int* d,int s,int e){\n\tif(s>=e)\n\t\treturn ;\n\tmerge(a,c,b,d,s,(s+e)/2);\n\tmerge(a,c,b,d,((s+e)/2)+1,e);\n\tint i = s,j=((s+e)/2)+1,n = s;\n\twhile(i <= (s+e)/2 || j <= e)\n\t\tif(a[i] <= a[j] && i <= (s+e)/2){\n\t\t\tc[n] = a[i];\n\t\t\td[n] = b[i];\n\t\t\ti++;\n\t\t\tn++;\n\t\t}\n\t\telse\n\t\t\tif(a[i] >= a[j] && j <= e){\n\t\t\t\tc[n] = a[j];\n\t\t\t\td[n] = b[j];\n\t\t\t\tj++;\n\t\t\t\tn++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tif(i > (s+e)/2)\n\t\t\t\t\twhile(j <= e){\n\t\t\t\t\t\tc[n] = a[j];\n\t\t\t\t\t\td[n] = b[j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\twhile(i <= (s+e)/2){\n\t\t\t\t\t\tc[n] = a[i];\n\t\t\t\t\t\td[n] = b[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\tfor(i=s;i<=e;i++) {\n\t\ta[i] = c[i];\n\t\tb[i] = d[i];\n\t}\n\treturn ;\n}\nint main() {\n\tint i,j,k,l,n,m,a[50005],b[50005],max=0,c[20000],d[20000],upto;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\tmerge(a,c,b,d,0,n-1);\n\tfor(i=0;i<n;i++)\n\t\tif(b[i] <= a[i] && b[i]>=upto)\n\t\t\tupto = b[i];\n\t\telse if(a[i] <= b[i] && a[i]>=upto)\n\t\t\tupto = a[i];\n\t\telse if(a[i] >= upto)\n\t\t\tupto = a[i];\n\t\telse\n\t\t\tupto = b[i];\n\tprintf(\"%d\\n\",upto);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nvoid merge(int* a,int* c,int* b,int* d,int s,int e){\n\tif(s>=e)\n\t\treturn ;\n\tmerge(a,c,b,d,s,(s+e)/2);\n\tmerge(a,c,b,d,((s+e)/2)+1,e);\n\tint i = s,j=((s+e)/2)+1,n = s;\n\twhile(i <= (s+e)/2 || j <= e)\n\t\tif(a[i] <= a[j] && i <= (s+e)/2){\n\t\t\tc[n] = a[i];\n\t\t\td[n] = b[i];\n\t\t\ti++;\n\t\t\tn++;\n\t\t}\n\t\telse\n\t\t\tif(a[i] >= a[j] && j <= e){\n\t\t\t\tc[n] = a[j];\n\t\t\t\td[n] = b[j];\n\t\t\t\tj++;\n\t\t\t\tn++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tif(i > (s+e)/2)\n\t\t\t\t\twhile(j <= e){\n\t\t\t\t\t\tc[n] = a[j];\n\t\t\t\t\t\td[n] = b[j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\twhile(i <= (s+e)/2){\n\t\t\t\t\t\tc[n] = a[i];\n\t\t\t\t\t\td[n] = b[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\tfor(i=s;i<=e;i++) {\n\t\ta[i] = c[i];\n\t\tb[i] = d[i];\n\t}\n\treturn ;\n}\nint main() {\n\tint i,j,k,l,n,m,a[50005],b[50005],max=0,c[20000],d[20000],upto;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\tmerge(a,c,b,d,0,n-1);\n\tfor(i=n-1;i>0;i--)\n\t\tfor(j=0;j<i;j++)\n\t\t\tif(a[j] == a[j+1] && b[j] > b[j+1]) {\n\t\t\t\tk = b[j];\n\t\t\t\tb[j] = b[j+1];\n\t\t\t\tb[j+1] = k;\n\t\t\t}\n\tfor(i=0;i<n;i++)\n\t\tif(b[i] <= a[i] && b[i]>=upto)\n\t\t\tupto = b[i];\n\t\telse if(a[i] <= b[i] && a[i]>=upto)\n\t\t\tupto = a[i];\n\t\telse if(a[i] >= upto)\n\t\t\tupto = a[i];\n\t\telse\n\t\t\tupto = b[i];\n\tprintf(\"%d\\n\",upto);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9992619926199262, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6c3fdf367ac1d8c68d6ad1a7e5ab8398", "bug_code_uid": "35d438944c5ec1c989ab63773ef939be", "src_uid": "bce9ebad1dc8bd5aae516c4ca9e551c0", "apr_id": "8a0c0b5a0ac2d52a6f98872f42f7bc53", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define my_abs(a,b) (a > b ? a-b : b-a)\nint main() {\n\t\n\tint n;\n\tint arr[1005];\n\tint min = 101;\n\tint max = 0;\n\tint t;\n\tint cost = 0x7fffffff;\n\tscanf(\"%d\", &n);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &arr[i]);\n\t\tif (arr[i] > max)\n\t\t\tmax = arr[i];\n\t\tif (arr[i] < min)\n\t\t\tmin = arr[i];\n\t}\n\n\tfor (int i = min; i < max; i++) {\n\t\tint temp = 0;;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tint target = 0;\n\t\t\tif (arr[j] > i) target = i + 1;\n\t\t\telse if (arr[j] == i) target = i;\n\t\t\telse target = i - 1;\n\t\t\ttemp += my_abs(arr[j], target);\n\t\t\tif (temp > cost)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (temp < cost) {\n\t\t\tcost = temp;\n\t\t\tt = i;\n\t\t}\n\t}\n\n\tprintf(\"%d %d\", t, cost);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n#define my_abs(a,b) (a > b ? a-b : b-a)\nint main() {\n\t\n\tint n;\n\tint arr[1005];\n\tint min = 101;\n\tint max = 0;\n\tint t;\n\tint cost = 0x7fffffff;\n\tscanf(\"%d\", &n);\n\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &arr[i]);\n\t\tif (arr[i] > max)\n\t\t\tmax = arr[i];\n\t\tif (arr[i] < min)\n\t\t\tmin = arr[i];\n\t}\n\n\tfor (int i = min; i <= max; i++) {\n\t\tint temp = 0;;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tint target = 0;\n\t\t\tif (arr[j] > i) target = i + 1;\n\t\t\telse if (arr[j] == i) target = i;\n\t\t\telse target = i - 1;\n\t\t\ttemp += my_abs(arr[j], target);\n\t\t\tif (temp > cost)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (temp < cost) {\n\t\t\tcost = temp;\n\t\t\tt = i;\n\t\t}\n\t}\n\n\tprintf(\"%d %d\", t, cost);\n\n\treturn 0;\n}"}
{"similarity_score": 0.975609756097561, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "dc7a7b953bd78a200df9844c94320d03", "bug_code_uid": "be3937ce8ad98736c92a32968adb55fd", "src_uid": "ca5c44093b1ab7c01970d83b5f49d0c6", "apr_id": "5e10c7a6f548efe3826ea8fdacc812f6", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint cnt=0,cnt1=0, x1, y1, x2,y2, sum=0;\n\tscanf(\"%d\",&cnt);\n\tfor(cnt1=1;cnt1<=cnt;cnt1++)\n\t{\n\t\tscanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n\t\tsum=sum+(y2-y1+1)*(x2-x1+1);\n\t}\n\tprintf(\"%d\",sum);\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint cnt=0,cnt1=0, x1, y1, x2,y2, sum=0;\n\tscanf(\"%d\",&cnt);\n\tfor(cnt1=1;cnt1<=cnt;cnt1++)\n\t{\n\t\tscanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n\t\tsum=sum+(y2-y1+1)*(x2-x1+1);\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9988901220865705, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4404d65aa3add3f3eb22e130a5f7a6e9", "bug_code_uid": "9bba63696a8022e96dd4538c384cc869", "src_uid": "90ce515c561872b5e2ec5f8f75cd44fe", "apr_id": "aca2e5921def23ebb58ee8065bde2688", "difficulty": 1600, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <stddef.h>\n#include <ctype.h>\n\n#define N 1000\n\nint n, m, k, p;\nchar ans[N];\n\nint main(int argc, const char *argv[])\n{\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (size_t i = 0; i < m - 1; i++) {\n        ans[p++] = 'L';\n    }\n    for (size_t i = 0; i < n - 1; i++) {\n        ans[p++] = 'D';\n    }\n    int i = 1;\n    int j = 1;\n    int cnt = n * m;\n    while (cnt--) {\n        if (i & 1) {\n            if (j < m) {\n                ans[p++] = 'R';\n                j++;\n            } else if (i != n) {\n                ans[p++] = 'U';\n                i++;\n            }\n        } else {\n            if (j > 1) {\n                ans[p++] = 'L';\n                j--;\n            } else if (i != n) {\n                ans[p++] = 'U';\n                i++;\n            }\n        }\n    }\n\n    printf(\"%d\\n%s\", strlen(ans), ans);\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <stddef.h>\n#include <ctype.h>\n\n#define N 100500\n\nint n, m, k, p;\nchar ans[N];\n\nint main(int argc, const char *argv[])\n{\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (size_t i = 0; i < m - 1; i++) {\n        ans[p++] = 'L';\n    }\n    for (size_t i = 0; i < n - 1; i++) {\n        ans[p++] = 'D';\n    }\n    int i = 1;\n    int j = 1;\n    int cnt = n * m;\n    while (cnt--) {\n        if (i & 1) {\n            if (j < m) {\n                ans[p++] = 'R';\n                j++;\n            } else if (i != n) {\n                ans[p++] = 'U';\n                i++;\n            }\n        } else {\n            if (j > 1) {\n                ans[p++] = 'L';\n                j--;\n            } else if (i != n) {\n                ans[p++] = 'U';\n                i++;\n            }\n        }\n    }\n\n    printf(\"%d\\n%s\", strlen(ans), ans);\n    return 0;\n}\n\n"}
{"similarity_score": 0.994328922495274, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "20db0add71ba56eb86281ec425fb1cf5", "bug_code_uid": "aac08d5c7b6893513b267b612d79b0dc", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "ccf77670992bdc4088d01533ddb8085b", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0; i<t; i++)\n    {\n        int t = 0, n = 0, c=0;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(int j=0; j<n; j++)\n        {\n            scanf(\"%d\",&a[i]);\n            t = t + a[i];\n            if(a[i] == 0)\n            {\n                c++;\n            }\n        }\n        int s = c;\n        if(c+t == 0)\n        {\n            s++;\n            printf(\"%d\\n\",s);\n        }\n        else\n        {\n            printf(\"%d\\n\",s);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0; i<t; i++)\n    {\n        int t = 0, n = 0, c=0;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(int j=0; j<n; j++)\n        {\n            scanf(\"%d\",&a[j]);\n            t = t + a[j];\n            if(a[j] == 0)\n            {\n                c++;\n            }\n        }\n        int s = c;\n        if(c+t == 0)\n        {\n            s++;\n            printf(\"%d\\n\",s);\n        }\n        else\n        {\n            printf(\"%d\\n\",s);\n        }\n    }\n}\n"}
{"similarity_score": 0.9905362776025236, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "afc43a587bdea3d161becf46bf970b94", "bug_code_uid": "6ef1aebbbb1eb501c876ce1fb938e25d", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "4915e4642b7a5d83176bd1bf08685ff2", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int n,a[100001],i,t=0;\n     scanf(\"%d\",&n);\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%d\",&a[i]);\n          if(a[i]==1)\n          t++;\n     }\n     if(n==1 && t==1)\n     printf(\"YES\");\n     else if(t==(n-1))\n     printf(\"YES\");\n     else \n     printf(\"NO\");\n     return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n     int n,a[100001],i,t=0;\n     scanf(\"%d\",&n);\n     for(i=1;i<=n;i++)\n     {\n          scanf(\"%d\",&a[i]);\n          if(a[i]==1)\n          t++;\n     }\n     if(n==1 && t==1)\n     printf(\"YES\");\n     else if(t==(n-1)&& n>1)\n     printf(\"YES\");\n     else \n     printf(\"NO\");\n     return 0;\n}"}
{"similarity_score": 0.9622815087396505, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "902ef67830b46fd9725e42abf6fc8690", "bug_code_uid": "f0932041c915412768509212d687ddb9", "src_uid": "f974c33780a933a6076c0559e48b7552", "apr_id": "d1c5c93dff9c1db920fc3fa1ae8a7435", "difficulty": 800, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include\"stdio.h\"\r\n\r\nvoid solve(){\r\n    int n,k;\r\n    scanf(\"%d%d\",&n,&k);\r\n    \r\n    long long ans[110] = {0};\r\n    int index = 0;\r\n    for(int i =0;i < n;i++){\r\n        long long temp;\r\n        scanf(\"%lld\",&temp);\r\n        if(temp >ans[index]){ans[index++] = temp; index = index % k;}\r\n        \r\n    }\r\n    long long  re = 0;\r\n    for(int i = 0;i < k;i++){\r\n        re += ans[i];\r\n    }\r\n    printf(\"%lld\\n\",re);\r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n    \r\n    \r\n}", "fixed": "#include\"stdio.h\"\r\n\r\nvoid solve(){\r\n    int n,k;\r\n    scanf(\"%d%d\",&n,&k);\r\n    \r\n    long long ans[110] = {0};\r\n    int index = 0;\r\n    for(int i =0;i < n;i++){\r\n        long long temp;\r\n        scanf(\"%lld\",&temp);\r\n        if(temp >ans[index]){ans[index++] = temp; index = index % k;}\r\n        else{index++,index =index % k;}\r\n        \r\n    }\r\n    long long  re = 0;\r\n    for(int i = 0;i < k;i++){\r\n        re += ans[i];\r\n    }\r\n    printf(\"%lld\\n\",re);\r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n    \r\n    \r\n}"}
{"similarity_score": 0.971375807940905, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4649d2b65ec94619afd7f496f33b1887", "bug_code_uid": "06b214f19e7cda4367fee6e92bc4e9af", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "944184c97a65a76c26830b22de629602", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int cmpfunc (const void * a, const void * b)\n{\n   return ( *( long int*)a - *( long int*)b );\n}\nint main(){\nlong int n,l;\nscanf(\"%ld%ld\",&n,&l);\nlong  int a[n];\nint i;\nfor( i =0;i<n;i++){\n    scanf(\"%ld\",&a[i]);\n}\nqsort(a, n, sizeof(long int), cmpfunc);\ndouble num=0;\ndouble max =(double)a[0];\nfor( i =0;i<n-1;i++){\n      num = (a[i+1] - a[i]);\n      num = (double) (num/2);\n      if(max < num){\n      max = num;\n      }\n}\ndouble max2 = l - a[n-1];\nmax2 = (double)max2/2;\nif(max2 > max)\nmax = max2;\nprintf(\"%.10lf\\n\",max);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nlong int cmpfunc (const void * a, const void * b)\n{\n   return ( *( long int*)a - *( long int*)b );\n}\nint main(){\nlong int n,l;\nscanf(\"%ld%ld\",&n,&l);\nlong  int a[n];\nint i;\nfor( i =0;i<n;i++){\n    scanf(\"%ld\",&a[i]);\n}\nqsort(a, n, sizeof(long int), cmpfunc);\ndouble num=0;\ndouble max =a[0];\nfor( i =0;i<n-1;i++){\n      num = (a[i+1] - a[i]);\n      num = (double) (num/2);\n      if(max < num){\n      max = num;\n      }\n}\ndouble max2 = l - a[n-1];\nif(max2 > max)\nmax = max2;\nprintf(\"%.10lf\\n\",max);\nreturn 0;\n}"}
{"similarity_score": 0.4084934277047523, "equal_cnt": 20, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "fa16a82922a2e8aee6754d9bebea23b4", "bug_code_uid": "efe7e6a023d05b53e6176465b6cab270", "src_uid": "7a8c4ba98a77097faff625b94889b365", "apr_id": "527cefa691271168c49241851a038b38", "difficulty": 900, "tags": ["greedy", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n\tint t, n, req, answer;\r\n\tlong last, cur, sum;\r\n\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++) {\r\n\t\tscanf(\"%d\", &n);\r\n\t\tscanf(\"%d\", &last);\r\n\t\tsum = last;\r\n\t\tanswer = 1;\r\n\t\treq = 0;\r\n\t\tfor (int j = 1; j < n; req += j, j++) {\r\n\t\t\tscanf(\"%d\", &cur);\r\n\t\t\tif (answer) {\r\n\t\t\t\twhile (last >= cur) {\r\n\t\t\t\t    last--;\r\n\t\t\t\t    sum--;\r\n\t\t\t\t    cur++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (last < req)\r\n\t\t\t\t\tanswer = 0;\r\n\t\t\t\telse {\r\n\t\t\t\t\tsum += cur;\r\n\t\t\t\t\tlast = cur;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%s\\n\", answer ? \"YES\" : \"NO\");\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, answer;\r\n    long long num, sum;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n    \tanswer = 1;\r\n    \tsum = 0;\r\n        scanf(\"%d\", &n);\r\n        for (int j = 0; j < n; j++) {\r\n        \tscanf(\"%lld\", &num);\r\n        \tnum += sum;\r\n        \tsum = num - j;\r\n        \tif (sum < 0)\r\n        \t\tanswer = 0;\r\n        }\r\n\r\n        printf(\"%s\", answer ? \"YES\\n\" : \"NO\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9617021276595744, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d147b99390f5c5f7145d8e2f3bd0b1da", "bug_code_uid": "7f6ff60903c6c0fe45ae26a8f3c5b0a9", "src_uid": "0593f79604377dcfa98d2b69840ec0a6", "apr_id": "2d02b6070ccc48f65faf61ff05dd259f", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdbool.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint arr[n];\n\tint count=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t}\n\tbool a[100000];\n\tbool b[100000];\n\tfor(int i=0;i<100000;i++)\n\t{\n\t\ta[i]=0;\n\t\tb[i]=0;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(arr[i]>0 && a[arr[i]]!=1)\n\t\t{\n\t\t\ta[arr[i]] = 1;\n\t\t\tcount++;\n\t\t}\n\t\telse if(arr[i]<0 && b[abs(arr[i])]!=1)\n\t\t{\n\t\t\tb[abs(arr[i])] = 1;\n\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", count);\t\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdbool.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint arr[n];\n\tint count=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t}\n\tbool a[100001];\n\tbool b[100001];\n\tfor(int i=0;i<100000;i++)\n\t{\n\t\ta[i]=0;\n\t\tb[i]=0;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(arr[i]>0 && a[arr[i]]!=1)\n\t\t{\n\t\t\ta[arr[i]] = 1;\n\t\t\tcount++;\n\t\t}\n\t\telse if(arr[i]<0 && b[abs(arr[i])]!=1)\n\t\t{\n\t\t\tb[abs(arr[i])] = 1;\n\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", count);\t\n}"}
{"similarity_score": 0.8256735340729001, "equal_cnt": 20, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "1a2b305f5abd2bd4c2a530d0d99d66dd", "bug_code_uid": "a1c9e02f529498751b3a9a4f5d3da7a7", "src_uid": "7e765c1b0e3f3e9c44de825a79bc1da2", "apr_id": "779f8ecd4d83e9c362cd97afdb24c99c", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,i,k;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,j,x;\n        int a[n],b[n];\n        scanf(\"%d %d\",&n,&x);\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);}\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&b[j]);}\n        k=1;\n        for(i=0,j=n-1;i<n,j>=0;i++,j--){\n            if((a[i]+b[j])<=x){\n                continue;}\n            else{\n                k=0;\n            }}\n            if(k==1){\n                printf(\"Yes\\n\");\n            }\n            else{\n                printf(\"No\\n\");}\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,k;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,j,x;\n        scanf(\"%d %d\",&n,&x);\n        int a[n],b[n];\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&a[j]);\n            }\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&b[j]);\n            }\n        k=1;\n        for(j=0;j<n;j++){\n            if((a[j]+b[n-j-1])<=x){\n                continue;\n                }\n            else{\n                k=0;\n                break;\n            }\n            }\n            if(k==1){\n                printf(\"\\nYes\\n\");\n            }\n            else{\n                printf(\"No\\n\");}\n    }\n    return 0;\n}"}
{"similarity_score": 0.9763593380614657, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "200d2d8fc9af078d8e0896831c699d1c", "bug_code_uid": "ddd1584b6d347dfab168e3a4fb6aea30", "src_uid": "adb0f6082367dc432e2e096c64f13a56", "apr_id": "d4c5f89701305666f2c7c89199f3c932", "difficulty": 1000, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<malloc.h>\n#include<stdlib.h>\nint cmpfunc(const void *a, const void *b)\n{\n\treturn (*(int*)a-*(int*)b);\n}\nvoid main()\n{\n\tint t,i,j,*p,n,d;\n\t\n\tscanf(\"%d\",&t);\n\t\n\tfor(i=0;i<t;i++)\n\t{\n\t    scanf(\"%d\",&n);\n\t\t\n\t\tp=(int *)malloc(2*n*sizeof(int));\n\t\t\n\t\tfor(j=0;j<2*n;j++)\n\t\tscanf(\"%d\", &p[j]);\n\t\t\n\t\tqsort(p,2*n,sizeof(int),cmpfunc);\n\t\t\n\t\td=p[(2*n+1)/2]-p[((2*n+1)/2)-1];\n\t\t\n\t\tprintf(\"%d\\n\",d);\t\n\t}\n}", "fixed": "#include<stdio.h>\n#include<malloc.h>\n#include<stdlib.h>\nint cmpfunc(const void *a, const void *b)\n{\n\treturn (*(int*)a-*(int*)b);\n}\nint main()\n{\n\tint t,i,j,*p,n,d;\n\t\n\tscanf(\"%d\",&t);\n\t\n\tfor(i=0;i<t;i++)\n\t{\n\t    scanf(\"%d\",&n);\n\t\t\n\t\tp=(int *)malloc(2*n*sizeof(int));\n\t\t\n\t\tfor(j=0;j<2*n;j++)\n\t\tscanf(\"%d\", &p[j]);\n\t\t\n\t\tqsort(p,2*n,sizeof(int),cmpfunc);\n\t\t\n\t\n\t\td=p[(2*n+1)/2]-p[((2*n+1)/2)-1];\n\t\t\n\t\tprintf(\"%d\\n\",d);\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8768606224627875, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "eb5e3937770b87b081c50783e50dbffe", "bug_code_uid": "ad50ca823c1b8ee661a61f0b6269a4b8", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "52b6e51db2a835029252f9a87b17f10d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i=0,k=0,l=0,n=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    //b[-1]=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n        if(i==0)\n            l=b[i];\n        else\n        l=b[i-1]-a[i]+b[i];\n        if(l>k)\n        {\n            k=l;\n        }\n        else\n        k=k;\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i=0,k=0,n=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n];\n    int sum=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n        sum=sum-a[i]+b[i];\n        if(sum>k)\n        {\n            k=sum;\n        }\n        else\n        k=k;\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.12454212454212454, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "eb46304607d28f26bf1a27938d6a0230", "bug_code_uid": "6de39cc9290682550a5053a586c45639", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "19bc24894017b32b51aabbbd4cdd4b8a", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,arr[n],check[3001],count=0,j;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tcount+=arr[i];\n\t\t/*if(check[arr[i]]!=1)\n\t\t\tcheck[arr[i]]=1;\n\t\telse\n\t\t{\n\t\t\tj=0;\n\t\t\twhile(check[arr[i]+j]==1)\n\t\t\t\tj++;\n\t\t\tcheck[arr[i]+j]=1;\n\t\t\tcount+=j;\n\t\t}*/\n\t}\n\tint act = n*(n+1)/2;\n\tprintf(\"%d\\n\",abs(act-count));\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint cmpfunc (const void * a, const void * b)\n{\n\t   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint n,count=0;\n\tscanf(\"%d\",&n);\n\tint arr[n],i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tqsort(arr,n,sizeof(int),cmpfunc);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(arr[i]<=arr[i-1])\n\t\t{\n\t\t\tcount+=arr[i-1]-arr[i]+1;\n\t\t\tarr[i]+=arr[i-1]-arr[i]+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",count);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7143803843605037, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "c8fc1a37f86c745294d8f46fd3ebc539", "bug_code_uid": "2c62b8bbfd97fcd5cff7171806a3168a", "src_uid": "001d8aca7c8421c3e54863f3fb706f0d", "apr_id": "d23f8d1b57557397f25edc247cedcf6a", "difficulty": 1500, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n,r,array[1004];\n    scanf(\"%i%i\", &n, &r);\n    for(int i=0; i<n; i++) {\n        scanf(\"%i\", &array[i]);\n    }\n    int num=0;\n    char ok = 'B';\n    for (int i=0; i<n;) {\n        if (array[i] == 1) i++;\n        else {\n            ok = 'B';\n            int variable = i+r-1;\n            for (;variable >=i-r+1; variable--) {\n                if (array[variable] == 1) {\n                    i = variable + r-1;\n                    num++;\n                    ok = 'A';\n                    break;\n                }\n            }\n            if (ok == 'B') {printf(\"-1\"); break;}\n            ok = 'C';\n        }\n    }\n    if (ok =='A') printf(\"-1\");\n    else if (ok == 'C') printf(\"%i\", num);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n,r,array[1003];\n    scanf(\"%i%i\", &n, &r);\n    for(int i=0; i<n; i++) {\n        scanf(\"%i\", &array[i]);\n    }\n    int num=0;\n    char ok = 'B';\n    if (n==1 && array[0]==0) {printf(\"-1\");}\n    else {\n    for (int i=0; i<n;) {\n        ok = 'B';\n        int variable = i+r-1;\n        if (variable > n) {\n            variable =n;\n        }\n        for (;variable >=i-r+1; variable--) {\n            if (array[variable] == 1) {\n                i = variable + r;\n                num++;\n                ok = 'A';\n                break;\n            }\n        }\n        if (ok == 'B') {printf(\"-1\"); break;}\n        ok = 'C';\n    }\n    }\n    if (ok == 'C') printf(\"%i\", num);\n    return 0;\n}\n"}
{"similarity_score": 0.9711627906976744, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "722262a2acc3113b0bc9b4abda17a6f7", "bug_code_uid": "0771385a59a566167fd9e5d23c334744", "src_uid": "54e2b6bea0dc6ee68366405945af50c6", "apr_id": "27f61f0d12e1288e3b3a93b0ad95144b", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\nlong long int b, movements = 0;\nint n,i;\nscanf(\"%d\", &n);\nint sectors[n];\nint positions[n];\n\nfor(i = 0; i < n; i++) { //populate the arrays\n\tscanf(\"%d\", &(sectors[i])); //put the number in the array\n\t//printf(\"%d\\n\", sectors[i]);\n\tpositions[sectors[i]-1] = i+1;\n\t//printf(\"positions: %d\\n\",positions[sectors[i] - 1]);\n}\n\nfor(i = 0; i < (n - 1); i++) {\n\tb = positions[i] - positions[i+1];\n\tif(b < 0) {\n\t\tmovements -= b;\n\t} else {\n\t\tmovements += b;\n\t}\n}\n\tprintf(\"%d\", movements);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <inttypes.h>\nint main() {\n\nlong long int b, movements = 0;\nint n,i;\nscanf(\"%d\", &n);\nint sectors[n];\nint positions[n];\n\nfor(i = 0; i < n; i++) { //populate the arrays\n\tscanf(\"%d\", &(sectors[i])); //put the number in the array\n\t//printf(\"%d\\n\", sectors[i]);\n\tpositions[sectors[i]-1] = i+1;\n\t//printf(\"positions: %d\\n\",positions[sectors[i] - 1]);\n}\n\nfor(i = 0; i < (n - 1); i++) {\n\tb = positions[i] - positions[i+1];\n\tif(b < 0) {\n\t\tmovements -= b;\n\t} else {\n\t\tmovements += b;\n\t}\n}\n\tprintf(\"%\" PRId64, movements);\nreturn 0;\n}\n"}
{"similarity_score": 0.2222222222222222, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "18adfcb5a50fd58354302016240f9b27", "bug_code_uid": "22a662616b748556cd842a55a0f1c84d", "src_uid": "4c260e7c6fd9c573ee4f3b1822f3c7c3", "apr_id": "ea5f89c1ff4f57516d85143e32e6b9ea", "difficulty": 1200, "tags": ["dp", "combinatorics", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    char c[n+5],t[k*2],m[5];\n    int h[130],i;\n    for(i=97;i<=122;i++) h[i]=0;\n    scanf(\"%s\",c);\n    gets(m);\n    gets(t);\n    for(i=0;i<k*2;i+=2) h[t[i]]++;\n    long long int ans=0,cnt=0;\n    for(i=0;i<n;i++)\n    {\n        if(!h[c[i]])\n        {\n            ans+=cnt*(cnt+1)/2;\n            cnt=0;\n        }\n        else cnt++;\n    }\n    ans+=cnt*(cnt+1)/2;\n    printf(\"%lld\",ans);\n    \n}"}
{"similarity_score": 0.9939516129032258, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8a03d4182c6c52c8b7fcd32a6c193c98", "bug_code_uid": "5431f21acb4ab27ec40591a3a8de5088", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "e43e3866c266ffff1e2e2d8458aef2fe", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*\n\t#598 div.3 Problem A\n\tSolution version 0\n\tTC201911042136\n\tERR=ETH (P.Q.)\n*/\n\n#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n\tshort tstc;\n\tscanf(\"%hd\", &tstc);\n\tfor (short lotstc = 0; lotstc < tstc; lotstc++)\n\t{\n\t\tint bgco, smco, bgvl, tolt;\n\t\tscanf(\"%d %d %d %d\", &bgco, &smco, &bgvl, &tolt);\n\t\tif ((bgco > tolt / bgvl ? tolt / bgvl : bgco)* bgvl + smco >= tolt) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 1;\n}\n\n/*\n\t#598 div.3 Problem A\n\tEnd\n*/", "fixed": "/*\n\t#598 div.3 Problem A\n\tSolution version 0\n\tTC201911042136\n\tERR=ETH (P.Q.)\n*/\n\n#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tshort tstc;\n\tscanf(\"%hd\", &tstc);\n\tfor (short lotstc = 0; lotstc < tstc; lotstc++)\n\t{\n\t\tint bgco, smco, bgvl, tolt;\n\t\tscanf(\"%d %d %d %d\", &bgco, &smco, &bgvl, &tolt);\n\t\tif ((bgco > tolt / bgvl ? tolt / bgvl : bgco)* bgvl + smco >= tolt) printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\n/*\n\t#598 div.3 Problem A\n\tEnd\n*/"}
{"similarity_score": 0.8922381311228335, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8ef6aae9b0fed8bf960588437949b711", "bug_code_uid": "5871370b9ff0d4a78dc8856600e04ffa", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "f557faa3b6b0e73cef118baf4bcd07e4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int A[101][101] ;\n    int n_rows , m_cols ;\n    int i , j ;\n    int num ;\n\n    scanf( \"%d%d\" , &n_rows , &m_cols );\n\n    for( i=0 ;i<n_rows ; ++i ){\n        scanf(\"%d\",&num);\n        for( j=m_cols-1 ; j>=0 ; --j ){\n            A[i][j] = num % 10 ;\n            num = num / 10 ;\n        }\n    }\n\n\n    for( i=0 ; i<n_rows ; ++i ){\n        for( j=1 ; j<m_cols ; ++j ){\n            if ( A[i][j] != A[i][j-1] ){\n                printf(\"NO\");\n                return 0 ;\n            }\n        }\n    }\n\n\n    for ( i=1 ; i<n_rows ; ++i ){\n        if ( A[i][0] == A[i-1][0] ){\n            printf(\"NO\");\n            return 0 ;\n        }\n    }\n\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char A[101][101] ;\n    int n_rows , m_cols ;\n    int i , j ;\n\n    scanf( \"%d%d\" , &n_rows , &m_cols );\n\n    for( i=0 ;i<n_rows ; ++i ){\n        scanf( \"%s\" , A[i] );\n    }\n\n\n    for( i=0 ; i<n_rows ; ++i ){\n        for( j=1 ; j<m_cols ; ++j ){\n            if ( A[i][j] != A[i][j-1] ){\n                printf(\"NO\");\n                return 0 ;\n            }\n        }\n    }\n\n\n    for ( i=1 ; i<n_rows ; ++i ){\n        if ( A[i][0] == A[i-1][0] ){\n            printf(\"NO\");\n            return 0 ;\n        }\n    }\n\n    printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.9931170108161259, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8249c0427d11d182b58c721ecd6a7552", "bug_code_uid": "e5b426eeff69a6bf4ecf535a719dccc7", "src_uid": "7965b6ce237b02617b55dc175ffa0451", "apr_id": "d6eba15ae8aebc193e451b50035c9ac7", "difficulty": 800, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(void){\r\n    int n,n1,i,a[200010],max,maxl;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%d\",&n1);\r\n        scanf(\"%d\",&a[0]);\r\n        max=a[0];\r\n        \r\n        for(i=1;i<n1;i++){\r\n        \tscanf(\"%d\",&a[i]);\r\n        \tif(max<a[i]){\r\n        \t\tmaxl=max;\r\n\t\t\t\tmax=a[i];\r\n\t\t\t}else if(maxl<a[i]){\r\n\t\t\t\tmaxl=a[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(i=0;i<n1;i++){\r\n\t\t\tif(a[i]!=max)printf(\"%d \",a[i]-max);\r\n\t\t\telse printf(\"%d \",a[i]-maxl);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(void){\r\n    int n,n1,i,a[200010],max,maxl;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%d\",&n1);\r\n        scanf(\"%d\",&a[0]);\r\n        max=a[0];\r\n        maxl=0;\r\n        for(i=1;i<n1;i++){\r\n        \tscanf(\"%d\",&a[i]);\r\n        \tif(max<a[i]){\r\n        \t\tmaxl=max;\r\n\t\t\t\tmax=a[i];\r\n\t\t\t}else if(maxl<a[i]){\r\n\t\t\t\tmaxl=a[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(i=0;i<n1;i++){\r\n\t\t\tif(a[i]!=max)printf(\"%d \",a[i]-max);\r\n\t\t\telse printf(\"%d \",a[i]-maxl);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9061135371179039, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "124c9cca02805780f98cea71ca2ae8da", "bug_code_uid": "aac35fc4d9a30d101eb1e1d3f98a1255", "src_uid": "075988685fa3f9b20bd215037c504a4f", "apr_id": "798e97b857df71329bb1bbe0d26428a1", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint x,n,y,t=0;\n\tscanf(\"%d %d %d\\n\",&n,&x,&y);\n\tchar p;\n\tint a[n];\n\t//printf(\"%d %d %d\\n\",n,x,y);\n\tfor(int i=0;i<n;i++)\n\t{\n\t    scanf(\"%c\",&p);\n\t    a[i]=(int)p-'0';\n\t    //printf(\"%d\",a[i]);\n\t}\n\t//printf(\"\\n\");\n\tfor(int i=n-1;i>=(n-x);i--)\n\t{\n\t    if(i==n-y-1 && a[i]!=1)\n\t    {\n\t        t++;\n\t        continue;\n\t    }\n\t    if(a[i])\n\t    {\n\t        t++;\n\t    }\n\t}\n\tprintf(\"%d\\n\",t);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint x,n,y,t=0;\n\tscanf(\"%d %d %d\\n\",&n,&x,&y);\n\tchar p;\n\tint a[n];\n\t//printf(\"%d %d %d\\n\",n,x,y);\n\tfor(int i=0;i<n;i++)\n\t{\n\t    scanf(\"%c\",&p);\n\t    a[i]=(int)p-'0';\n\t    //printf(\"%d\",a[i]);\n\t}\n\t//printf(\"\\n\");\n\tfor(int i=(n-1);i>=(n-x);i--)\n\t{\n\t    if((i==(n-y-1)))\n\t    {\n\t        if(a[i]!=1)\n\t        {\n\t            t++;\n\t        }\n\t        continue;\n\t    }\n\t    if(a[i])\n\t    {\n\t        t++;\n\t    }\n\t}\n\tprintf(\"%d\\n\",t);\n\treturn 0;\n}"}
{"similarity_score": 0.9983471074380166, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bc28fb63f160b44d517010e47f4b077d", "bug_code_uid": "ae602106b62b9161e415ee7de743a7b1", "src_uid": "b5355e1f4439b198d2cc7dea01bc4bc3", "apr_id": "8df66fd47392b4afa0141caffc483771", "difficulty": 1200, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nstruct item {\n\tint a;\n\tint b;\n\tint c;\n} it[100001];\nint comp(const void *p1, const void *p2)\n{\n\treturn ((struct item *)p1)->c - ((struct item *)p2)->c;\n}\nint main()\n{\n\tint n,k,i,q;\n\tint m=0;\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i=0; i<n; i++)\n\t\tscanf(\"%d\", &it[i].a);\n\tfor (i=0; i<n; i++)\n\t\tscanf(\"%d\", &it[i].b);\n\tfor (i=0; i<n; i++)\n\t\tit[i].c = it[i].a-it[i].b;\n\tqsort(it,n, sizeof(struct item), comp);\n\tq=0;\t\n\tfor (i=0; i<n; i++)\n\t{\n\t\tif (q<k) m = m+it[i].a;\n\t\telse\n\t\t{\n\t\t\tif (it[i].c<0) m = m+it[i].a;\n\t\t\telse m = m+it[i].b;\n\t\t}\n\t\tq++;\n\t}\n\tprintf(\"%d\\n\", m);\n\treturn 0;\n}\t\n\n\t\n\n\n\n\t\t\t\t\t\n\n  \n", "fixed": "#include <stdio.h>\nstruct item {\n\tint a;\n\tint b;\n\tint c;\n} it[200001];\nint comp(const void *p1, const void *p2)\n{\n\treturn ((struct item *)p1)->c - ((struct item *)p2)->c;\n}\nint main()\n{\n\tint n,k,i,q;\n\tint m=0;\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i=0; i<n; i++)\n\t\tscanf(\"%d\", &it[i].a);\n\tfor (i=0; i<n; i++)\n\t\tscanf(\"%d\", &it[i].b);\n\tfor (i=0; i<n; i++)\n\t\tit[i].c = it[i].a-it[i].b;\n\tqsort(it,n, sizeof(struct item), comp);\n\tq=0;\t\n\tfor (i=0; i<n; i++)\n\t{\n\t\tif (q<k) m = m+it[i].a;\n\t\telse\n\t\t{\n\t\t\tif (it[i].c<0) m = m+it[i].a;\n\t\t\telse m = m+it[i].b;\n\t\t}\n\t\tq++;\n\t}\n\tprintf(\"%d\\n\", m);\n\treturn 0;\n}\t\n\n\t\n\n\n\n\t\t\t\t\t\n\n  \n"}
{"similarity_score": 0.9744360902255639, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "710fab26527ea3592d96bbfb4d05035d", "bug_code_uid": "bcc889a968d66e3e8c8dfbfb8d9939a8", "src_uid": "b8554e64b92b1b9458955da7d55eba62", "apr_id": "4106955d44494d28d3e778882d6b7f73", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n    int t,n,sum,count=0,u,i,j,k;\r\n    float avg;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        sum=0;\r\n        for(j=0;j<n;j++)\r\n        {\r\n        scanf(\"%d\",&a[j]);\r\n        sum=sum+a[j];\r\n        }\r\n        avg=(float)sum/n;\r\n        u=avg;\r\n        count=0;\r\n        printf(\"%f %d\\n\",avg,u);\r\n        if(u==avg)\r\n        {\r\n            for(k=0;k<n;k++)\r\n            {\r\n                if(a[k]>u)\r\n                count++;\r\n            }\r\n            printf(\"%d\\n\",count);\r\n        }\r\n        else\r\n        printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n    int t,n,sum,count=0,u,i,j,k;\r\n    float avg;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        sum=0;\r\n        for(j=0;j<n;j++)\r\n        {\r\n        scanf(\"%d\",&a[j]);\r\n        sum=sum+a[j];\r\n        }\r\n        avg=(float)sum/n;\r\n        u=avg;\r\n        count=0;\r\n        if(u==avg)\r\n        {\r\n            for(k=0;k<n;k++)\r\n            {\r\n                if(a[k]>u)\r\n                count++;\r\n            }\r\n            printf(\"%d\\n\",count);\r\n        }\r\n        else\r\n        printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8858369098712446, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "297556e3200ba878db56c8ee1361c5eb", "bug_code_uid": "4d9a2922f842379531de0ac5795a7e1c", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "488fe3b631e612891e7c44df2672599a", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int N,M,i,j,k,a,b,c,d,x,y,s,t;\n    char A[200000],B[200000];\n\n    scanf(\"%s\", A);\n    scanf(\"%s\", B);\n    N=strlen(A);\n    M=strlen(B);\n\n    if(N>M)\n    {\n        printf(\"%d\\n\", N);\n    }\n    else if(M>N)\n    {\n        printf(\"%d\\n\", M);\n    }\n    else\n    {\n        k=0;\n        for(i=0; i<N; i++)\n        {\n            if(A[i]!=B[i])\n            {\n                k++;\n            }\n        }\n\n        if(k==0)\n        {\n            k=-1;\n        }\n        printf(\"%d\\n\", k);\n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int N,M,i,j,k,a,b,c,d,x,y,s,t;\n    char A[200000],B[200000];\n\n    scanf(\"%s\", A);\n    scanf(\"%s\", B);\n    N=strlen(A);\n    M=strlen(B);\n\n    if(N>M)\n    {\n        printf(\"%d\\n\", N);\n    }\n    else if(M>N)\n    {\n        printf(\"%d\\n\", M);\n    }\n    else\n    {\n        k=0;\n        for(i=(N-1); i>=0; i--)\n        {\n            if(A[i]==B[i])\n            {\n                k++;\n            }\n        }\n\n        if(k==N)\n        {\n            x=-1;\n        }\n        else\n        {\n            x=N;\n        }\n        printf(\"%d\\n\", x);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9900199600798403, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "135f212d0a5fb7005565c38f766c2b54", "bug_code_uid": "b13b939f96bd988b1cb650a70ee25c69", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "4a5cd0a54a920b232209fb1086462fbd", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<conio.h>\nint main()\n{\n    int i,n,j,c=0,max=0;\n    scanf(\"%d\",&n);\n    int h[n],m[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&h[i],&m[i]);\n    }\n    for(i=0;i<n;i++){\n        for(j=i+1;j<n;j++){\n\n            if(h[i]==h[j]&&m[i]==m[j]&&h[i]!=-1&&m[i]!=-1){c++;h[j]=-1;m[j]=-1;}\n            else {if(max<c){max=c;c=0;}\n            c=0;}\n        }\n    }\n    if(c>max)max=c;\n    printf(\"%d\",max+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<conio.h>\nint main()\n{\n    int i,n,j,c=0,max=0;\n    scanf(\"%d\",&n);\n    int h[n],m[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&h[i],&m[i]);\n    }\n    for(i=0;i<n;i=j){\n        for(j=i+1;j<n;j++){\n\n            if(h[i]==h[j]&&m[i]==m[j]&&h[i]!=-1&&m[i]!=-1){c++;h[j]=-1;m[j]=-1;}\n            else {if(max<c){max=c;c=0;}\n            c=0;break;}\n        }\n    }\n    if(c>max)max=c;\n    printf(\"%d\",max+1);\n    return 0;\n}\n"}
{"similarity_score": 0.7403156384505022, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "54fe4dcdf489ff9506b29d42f8e8c9ac", "bug_code_uid": "b230beaf451d11ac6d957f12ddd45268", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "c70dc0b22c2fe5e6a18fa422523142e5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,i,d,s=0;\nscanf(\"%d\",&n);\nint x[n];\nint y[n];\n   for (i=0;i<n;i++)\n    scanf(\"%d\",&x[i]);\n    for (i=0;i<n;i++)\n    scanf(\"%d\",&y[i]);\n    for(i=0;i<n;i++)\n    {if(x[i]>y[i])\n    d=x[i]-y[i];\n    else\n        d=y[i]-x[i];\n    if(d>5)\n        d=10-d;\n\n\n    s=s+d;\n\n\n\n\n    }\n    printf(\"%d\",s);\n\n\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{int n,i,d,s=0,x1,y2;\nscanf(\"%d\",&n);\nchar x[n];\nchar y[n];\nscanf(\"%s\",x);\nscanf(\"%s\",y);\n    for(i=0;i<n;i++)\n    {\n\n\n\n        if(x[i]>y[i])\n    d=x[i]-y[i];\n    else\n        d=y[i]-x[i];\n    if(d>5)\n        d=10-d;\n\n\n    s=s+d;\n\n\n\n\n    }\n    printf(\"%d\",s);\n\n\n\n    return 0;\n}"}
{"similarity_score": 0.76775956284153, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "50354106fe61926ad1d2aa471500aa94", "bug_code_uid": "b0d6957ce2e7dbd1a5177ff35f3c9649", "src_uid": "cb24509580ff9b2f1a11103a0e4cdcbd", "apr_id": "707c6f173c9a761aa2ea21d14837c35e", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(void)\r\n{\r\n    int tst,n1,n2,n3,n4,cou:\r\n    scanf(\"%d\", tst);\r\n    for(int i=0;i<tst; i++){cou=0;\r\n      scanf(\"%d %d %d %d\", &n1, &n2, &n3, &n4);\r\n        if(n1<n3 && n1<n4){cou++;}\r\n            if(n2<n3 && n2){cou++;}\r\n        if(cou==2){printf(\"NO\");}\r\n        else{printf(\"YES\");}\r\n    }\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main(void)\r\n{\r\n    int tst,n1,n2,n3,n4,cou;\r\n    scanf(\"%d\", &tst);\r\n    for(int i=0;i<tst; i++){cou=0;\r\n      scanf(\"%d %d %d %d\", &n1, &n2, &n3, &n4);\r\n        if(n1<n3 && n1<n4){cou++;}\r\n            if(n2<n3 && n2<n4){cou++;}\r\n        if(n3<n1 && n3<n2){cou++;}\r\n            if(n4<n1 && n4<n2){cou++;}\r\n        if(cou>=2){printf(\"NO\\n\");}\r\n        else{printf(\"YES\\n\");}\r\n    }\r\n\r\n}"}
{"similarity_score": 0.988929889298893, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a2aa5a5af0825d1068129a08504c20e6", "bug_code_uid": "cac6f5ba80d3c6ec699eb78de83c8c61", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "59d5e84cd24f0a446a7791f1845af39b", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n     long long i,j,ck=0,a,b,k=0,ti=0,tj=0;\n\n   char arr[200000],brr[200000];\n   scanf(\"%s%s\",arr,brr);\n\n    i =  strlen(arr)-1;\n    j =  strlen(brr)-1;\n\n\n    while(i>=0 && j>=0)\n    {\n        if(arr[i]==brr[j])\n            ck+=2;\n        else break;\n            i--, j--;\n    }\n\n    a = strlen(arr)+strlen(brr);\n    k = a-ck;\n\n   printf(\"%lld\\n\",k);\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n     long long int  i,j,ck=0,a,b,k=0,ti=0,tj=0;\n\n   char arr[200005],brr[200005];\n   scanf(\"%s%s\",arr,brr);\n\n    i =  strlen(arr)-1;\n    j =  strlen(brr)-1;\n\n\n    while(i>=0 && j>=0)\n    {\n        if(arr[i]==brr[j])\n            ck+=2;\n        else break;\n            i--, j--;\n    }\n\n    a = strlen(arr)+strlen(brr);\n    k = a-ck;\n\n   printf(\"%lld\\n\",k);\n}"}
{"similarity_score": 0.5554106910039114, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b8010c62f0d62305258c1e338bdb4ed8", "bug_code_uid": "ea08f131752405b90a660fd847bbced7", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "8696c1a46fe1773e544c44743dcd2bd0", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\ntypedef long long ll;\nint main()\n{\n    int q, i;\n    scanf(\"%d\", &q);\n    for (i = 0; i < q; i++)\n    {\n        ll n, a, b, ans;\n        scanf(\"%I64d%I64d%I64d\", &n, &a, &b);\n        if (b/2 < a)\n        {\n            if (n%2 == 0) ans = n*(b/2);\n            else\n            {\n                ans = (n/2)*2*(b/2);\n                ans += (n%2)*a;\n            }\n        }\n        else ans = n*a;\n        printf(\"%I64d\\n\", ans);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\ntypedef long long ll;\nint main()\n{\n    int q, i;\n    scanf(\"%d\", &q);\n    for (i = 0; i < q; i++)\n    {\n        ll n, a, b, ans;\n        scanf(\"%I64d%I64d%I64d\", &n, &a, &b);\n        ans = (b > a*2) ? n*a : (n/2*b) + (n%2*a);\n        printf(\"%I64d\\n\", ans);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9935018050541516, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8a0c7f269d26d7d42b99eff27e8073da", "bug_code_uid": "64f04a61408dc2c2caefe1a783c841c3", "src_uid": "5e2a5ee02c1a2f35a52e76cde96463a3", "apr_id": "7a462165776f59430f45f14373c08a9a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main() {\n   int n,x,y;\n   scanf(\"%d%d%d\",&n,&x,&y);\n   int arr[n];\n   //for(int i=0;i<210;i++){\n    //   arr[i]=1000000001;\n   //}\n   for(int i=0;i<n;i++){\n       scanf(\"%d\",&arr[i]);\n   }\n   \n   \n   for(int i=0;i<n;i++){\n       int f=1;\n       int j;\n            if(i<x){j=0;}else{j=i-x;}\n            \n                for(;j<=i;j++){\n                    if(arr[j]<arr[i]){f=0;break;}\n                }\n       int k;\n            if(i>n-y){k=n-1;}else{k=i+y;}\n            \n                for(;k>=i;k--){\n                    if(arr[k]<arr[i]){f=0;break;}\n                }\n       if(f==1 && n!=1){printf(\"%d\",i+1);break;}else{printf(\"%d\",n);}\n   }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main() {\n   int n,x,y;\n   scanf(\"%d%d%d\",&n,&x,&y);\n   int arr[n];\n   //for(int i=0;i<210;i++){\n    //   arr[i]=1000000001;\n   //}\n   for(int i=0;i<n;i++){\n       scanf(\"%d\",&arr[i]);\n   }\n   \n   \n   for(int i=0;i<n;i++){\n       int f=1;\n       int j;\n            if(i<x){j=0;}else{j=i-x;}\n            \n                for(;j<=i;j++){\n                    if(arr[j]<arr[i]){f=0;break;}\n                }\n       int k;\n            if(i>n-y){k=n-1;}else{k=i+y;}\n            \n                for(;k>=i;k--){\n                    if(arr[k]<arr[i]){f=0;break;}\n                }\n       if(f==1 && n!=1){printf(\"%d\",i+1);break;}else if(n==1){printf(\"%d\",n);}\n   }\n}"}
{"similarity_score": 0.9342105263157895, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d970e211f9325f5b8be7cc525f1f90ec", "bug_code_uid": "7f5ca8120c54cfd143d8e341c69e4a52", "src_uid": "f59f92a80f719cdb87ad92cd8c211942", "apr_id": "fecf1d07500e734df0c948c91c09f71f", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while(t--){\r\n    long long a,b[1000001],c=0,i;\r\n    scanf(\"%lli\",&a);\r\n    for(i=0;i<a;i++){\r\n      scanf(\"%lli\",&b[i]);\r\n    }\r\n    for(i=0;i<a;i++){\r\n      c=c+b[i];\r\n    }\r\n    printf(\"%lli\\n\",c);\r\n  }\r\n  return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  while(t--){\r\n    long long a,b[1000001],c=0,i;\r\n    scanf(\"%lli\",&a);\r\n    for(i=0;i<a;i++){\r\n      scanf(\"%lli\",&b[i]);\r\n    }\r\n    for(i=0;i<a;i++){\r\n      c=c+b[i];\r\n    }\r\n    if(c<0){\r\n        c=c*(-1);\r\n    }\r\n    printf(\"%lli\\n\",c);\r\n  }\r\n  return 0;\r\n}"}
{"similarity_score": 0.5714285714285714, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d1c1de15848270d5588ff64da3cb49fe", "bug_code_uid": "a40e6673ae72c8f2850bce4967a3afa1", "src_uid": "ac248c83c99d8a2262772816b5f4ac6e", "apr_id": "6004cfe88b2ba9ae83130010afad0c49", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\t\n\tint t, i, j, n;\n\t\n\tscanf(\"%d\", &t);\n\t\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\t\n\t\tprintf(\"%d\\n\", n);\n\t\tfor (j = n; j > 0; j--)\n\t\t{\n\t\t\tprintf(\"%d\", j);\n\t\t\t\n\t\t\tif (j > 1)\n\t\t\t{\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\t\n\tint t, i, j, n;\n\t\n\tscanf(\"%d\", &t);\n\t\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\t\n\t\tprintf(\"%d\\n\", n);\n\t\tfor (j = 1; j <= n; j++)\n\t\t{\n\t\t\tprintf(\"%d\", j);\n\t\t\t\n\t\t\tif (j < n)\n\t\t\t{\n\t\t\t\tprintf(\" \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9976076555023924, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "692b0f8a9de0aa450cf4c421c05a1cd6", "bug_code_uid": "0362d004192d31783865a0d88110d528", "src_uid": "ddaf86169a79942cefce8e5b5f3d6118", "apr_id": "0b9ecd30129b56ff35dde30a92484e02", "difficulty": 1400, "tags": ["dp", "constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* Coached by rainboy */\n#include <stdio.h>\n\n#define N 200000\n\nchar cc[] = \"RGB\";\n\nint main() {\n\tstatic char s[N + 1];\n\tint n, i, j, cnt;\n\n\tscanf(\"%d%s\", &n, s);\n\tcnt = 0;\n\tfor (i = 1; i < n; i++)\n\t\tif (s[i] == s[i - 1])\n\t\t\tfor (j = 0; j < 3; j++)\n\t\t\t\tif (s[i - 1] != cc[j] && (i + 1 != n || s[i + 1] != cc[j])) {\n\t\t\t\t\ts[i] = cc[j];\n\t\t\t\t\tcnt++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\tprintf(\"%d\\n\", cnt);\n\tprintf(\"%s\\n\", s);\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <stdio.h>\n\n#define N 200000\n\nchar cc[] = \"RGB\";\n\nint main() {\n\tstatic char s[N + 1];\n\tint n, i, j, cnt;\n\n\tscanf(\"%d%s\", &n, s);\n\tcnt = 0;\n\tfor (i = 1; i < n; i++)\n\t\tif (s[i] == s[i - 1])\n\t\t\tfor (j = 0; j < 3; j++)\n\t\t\t\tif (s[i - 1] != cc[j] && (i + 1 == n || s[i + 1] != cc[j])) {\n\t\t\t\t\ts[i] = cc[j];\n\t\t\t\t\tcnt++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\tprintf(\"%d\\n\", cnt);\n\tprintf(\"%s\\n\", s);\n\treturn 0;\n}\n"}
{"similarity_score": 0.958128078817734, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "77356ef75e4a63291288f6b6b253214d", "bug_code_uid": "aa7f32d8b4aca9847827d4b17b16ced3", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "af352941ce1b18a0a9a78f35dc0c8d95", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char s[13],sum=0;\n   int i,t;\n   scanf(\"%d\",&t);\n   while(t--){\n    scanf(\"%s\",s);\n    if(s[0]=='T'){\n        sum=sum+4;\n    }\n    else if(s[0]=='C'){\n        sum=sum+6;\n    }\n    else if(s[0]=='O'){\n        sum=sum+8;\n    }\n    else if(s[0]=='D'){\n        sum=sum+12;\n    }\n    else{\n        sum=sum+20;\n    }\n   }\n   printf(\"%d\",sum);\n   return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char s[13];\n   int i,t,sum=0;\n   scanf(\"%d\",&t);\n   while(t--){\n    scanf(\"%s\",s);\n    if(s[0]=='T'){\n        sum=sum+4;\n    }\n    else if(s[0]=='C'){\n        sum=sum+6;\n    }\n    else if(s[0]=='O'){\n        sum=sum+8;\n    }\n    else if(s[0]=='D'){\n        sum=sum+12;\n    }\n    else{\n        sum=sum+20;\n    }\n   }\n   printf(\"%d\\n\",sum);\n   return 0;\n}\n"}
{"similarity_score": 0.9928571428571429, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "38b47e72202367d33729effea9f79dd4", "bug_code_uid": "0215e680275f95a6e0373ac8d5ebbe60", "src_uid": "6469ed9f2486b498c9ffeb8270391e3a", "apr_id": "65e0f34e2e5fbfc44aaac70ff45307d3", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,j,max,min,d;\n    scanf(\"%lld\",&n);\n    long long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    max=a[0];\n    for(i=1;i<n;i++)\n    {\n        if(a[i]>max)\n            max=a[i];\n    }\n    min=a[0];\n    for(i=1;i<n;i++)\n    {\n        if(a[i]<max)\n            min=a[i];\n    }\n    d=max-min+1;\n    d=d-n;\n    printf(\"%lld\",d);\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\nint main()\n{\n    long long int n,i,j,max,min,d;\n    scanf(\"%lld\",&n);\n    long long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    max=a[0];\n    for(i=1;i<n;i++)\n    {\n        if(a[i]>max)\n            max=a[i];\n    }\n    min=a[0];\n    for(i=1;i<n;i++)\n    {\n        if(a[i]<min)\n            min=a[i];\n    }\n    d=max-min+1;\n    d=d-n;\n    printf(\"%lld\",d);\n    return 0;\n}"}
{"similarity_score": 0.24904507257448433, "equal_cnt": 20, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "fbc743f2c03b7a8fc0dabc78a4453764", "bug_code_uid": "c1fcfb86a181043e8bb371a5f49c2711", "src_uid": "26aef004295df530352485ce53b47364", "apr_id": "5bda83940cd88fce1303bf28354005e2", "difficulty": 1100, "tags": ["brute force", "data structures", "implementation", "trees"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n   int m , n;\n   \n   scanf(\"%d %d\",&m,&n);\n\n   int word[100000];\n   int query[100000];\n\n   for(int i=0; i<m; i++){\n     scanf(\"%d\",&word[i]);\n   }\n \n  int x = word[0];\n  int y = 0;\n  \n   for(int i=0; i<n; i++){\n    scanf(\"%d\",&query[i]);\n      for(int a=0; a<m; a++){\n      if (word[a]!=query[i]){\n        y = word[a];\n        word[a]=x;\n        x = y;\n      }\n      else if (word[a]==query[i]){\n        printf(\"\\n%d\",a+1);\n        word[0]=word[a];\n        word[a]= x;\n        break;\n      }\n    }\n   }\n\n\n\n  return 0;\n}\n \t\t\t  \t \t  \t \t\t   \t  \t\t\t \t \t", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, q, word[300001], quer[300001], ind[300001];\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 1; i <= n; i++ ) {\n        scanf(\"%d\", &word[i]);\n    }\n\n    for (int i = 0; i<q; i++){\n        scanf(\"%d\", &quer[i]);\n    }\n\n    for (int i =0; i<q; i++){\n        for(int j=1; j<=n; j++){\n            if(word[j]==quer[i]){\n                ind[i]=j;\n                break;\n            }\n        }\n        if (ind[i]!=1){\n            word[0]=word[ind[i]];\n            for(int k=ind[i]; k>=0; k--){\n                word[k]=word[k-1];\n            }\n        }\n    }\n    \n    for (int i=0; i<q; i++){\n        printf(\"%d \", ind[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n \t \t \t\t     \t      \t   \t\t"}
{"similarity_score": 0.6673762639701969, "equal_cnt": 18, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 10, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "dc8a20990af149c1614e1139625ee4ae", "bug_code_uid": "c9daf195326ff6c1e4c81b3ddcfca3d0", "src_uid": "89a8936bf7d43a9c5f69714a7cb7df82", "apr_id": "fc008a056be6894b57bec342c5fb0360", "difficulty": null, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,min1=101,max1=0,min2=101,max2=0,count1=0,count2=0,l;\n    long long int x[100000],y[100000];\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d %I64d\",&x[i],&y[i]);\n        if(min1>x[i])\n            min1=x[i];\n        if(min2>y[i])\n            min2=y[i];\n\n\n        if(max1<x[i])\n            max1=x[i];\n        if(max2<y[i])\n            max2=y[i];\n    }\n    l=min1;\n    for(i=0;i<=n;i++)\n    {\n        if(x[i]==l)\n        {\n            count1++;\n            if(l>=max1)\n                break;\n            l++;\n        }\n    }\n    l=min2;\n    for(i=0;i<=n;i++)\n    {\n        if(y[i]==l)\n        {\n            count2++;\n            if(l>=max2)\n                break;\n            l++;\n        }\n    }\n    if(count1<count2)\n        printf(\"%d\",count1);\n    else\n        printf(\"%d\",count2);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,min1=101,max1=0,min2=101,max2=0,count1=0,count2=0,l;\n    long long int x[100000],y[100000];\n    scanf(\"%I64d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d %I64d\",&x[i],&y[i]);\n        if(min1>x[i])\n            min1=x[i];\n        if(min2>y[i])\n            min2=y[i];\n\n\n        if(max1<x[i])\n            max1=x[i];\n        if(max2<y[i])\n            max2=y[i];\n    }\n    l=min1;\n    while(1){\n        for(i=0;i<=n;i++)\n        {\n            if(x[i]==l)\n            {\n                count1++;\n                    break;\n            }\n        }\n        if(l>=max1)\n            break;\n\n        else\n            l++;\n    }\n\n    l=min2;\n    while(1){\n        for(i=0;i<=n;i++)\n        {\n            if(y[i]==l)\n            {\n                count2++;\n                    break;\n            }\n        }\n        if(l>=max2)\n            break;\n\n        else\n            l++;\n    }\n\n    if(count1<count2)\n        printf(\"%I64d\",count1);\n    else\n        printf(\"%I64d\",count2);\n}\n"}
{"similarity_score": 0.2505091649694501, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "7d068baeddc28e0bcd3840bc8fc86cd9", "bug_code_uid": "df90f2c71345fa6b60eecdc8723a2cca", "src_uid": "7eae40835f6e9580b985d636d5730e2d", "apr_id": "d2fd7e84e01bc680ca0f17049b198f7f", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int q,i,j;\n    scanf(\"%d\",&q);\n\n    for(i=0;i<q;i++){\n    int l,r,sum=0;\n    scanf(\"%d %d \",&l,&r);\n    int a[1000000000];\n    for(j=0;j<1000000000;j++){\n        a[j]=j*(pow(-1,j));\n        }\n        for(l=l;l<j;l++){\n        sum=sum+a[l];\n        }\n        printf(\" %d \",sum);\n\n    sum=0;\n\n    }\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int q,i,sum=0;\n    scanf(\"%d\",&q);\n    long long int l,r;\n    for(i=0;i<q;i++){\n\n        scanf(\"%lld %lld\",&l,&r);\n\n        if(l%2==1 && r%2==1){\n            sum=((r-l)/2)*1+ (r*-1);\n            printf(\"%d\\n\",sum);\n        }\n        if(l%2==0 && r%2==0){\n            sum=((r-l)/2)*-1+ (r*1);\n            printf(\"%d\\n\",sum);\n        }\n         if(l%2==1 && r%2==0){\n            sum=((r-l+1)/2)*1;\n            printf(\"%d\\n\",sum);\n        }\n        if(l%2==0 && r%2==1){\n            sum=((r-l+1)/2)*-1;\n            printf(\"%d\\n\",sum);\n        }\n\n\n\n    }\n\nreturn 0;\n\n}\n"}
{"similarity_score": 0.9761620977353993, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c125f233b44a024365b9564f8b7508b1", "bug_code_uid": "120cf4d8be9a6c61dc69d10f5af9216e", "src_uid": "a4be9b3484f3f24014392a1c3ad23f2f", "apr_id": "8e8e40a7a7c11d7db68c847c79edb268", "difficulty": 1200, "tags": ["greedy", "two pointers", "implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int *p,n,*cnt,*idx,min;\n        scanf(\"%d\",&n);\n        min=n;\n        p=malloc(sizeof(int)*n);\n        cnt=malloc(sizeof(int)*n);\n        idx=malloc(sizeof(int)*n);\n        for(int i=0;i<n;i++)\n        {\n            idx[i]=cnt[i]=0;\n        }\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&p[i]);\n            cnt[p[i]-1]++;\n            if(cnt[p[i]-1]>1)\n            {\n                if(i+1-idx[p[i]-1] < min)\n                {\n                    min=i+1-idx[p[i]-1];\n                }\n            }\n            idx[p[i]-1]=i;\n        }\n        if(min==1)\n        {\n            printf(\"-1\\n\");\n        }\n        else\n        {\n            printf(\"%d\\n\",min);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int *p,n,*cnt,*idx,min,flag=0;\n        scanf(\"%d\",&n);\n        min=n;\n        p=malloc(sizeof(int)*n);\n        cnt=malloc(sizeof(int)*n);\n        idx=malloc(sizeof(int)*n);\n        for(int i=0;i<n;i++)\n        {\n            idx[i]=cnt[i]=0;\n        }\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&p[i]);\n            cnt[p[i]-1]++;\n            if(cnt[p[i]-1]>1)\n            {\n                flag=1;\n                if(i+1-idx[p[i]-1] < min)\n                {\n                    min=i+1-idx[p[i]-1];\n                }\n            }\n            idx[p[i]-1]=i;\n        }\n        if(min==1 || !flag)\n        {\n            printf(\"-1\\n\");\n        }\n        else\n        {\n            printf(\"%d\\n\",min);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2546230440967283, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "7ce2a266c1101873c07b28899786684b", "bug_code_uid": "7f643acbf500e74bc0d488a17807ce4b", "src_uid": "d6423f380e6ba711d175d91e73f97b47", "apr_id": "e7ddbde477bea3298568ba186d29fe5b", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define max(a,b) a>=b?a:b\nmain()\n{\n\tint i,n,k=0,a=0,g=0,c=0,t=0,q=0,max1,max2,max3;\n\tscanf(\"%d\",&n);\n\tchar s[n+1];\n\tscanf(\"%s\",s);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='A')\n\t\ta++;\n\t\tif(s[i]=='G')\n\t\tg++;\n\t\tif(s[i]=='C')\n\t\tc++;\n\t\tif(s[i]=='T')\n\t\tt++;\n\t\tif(s[i]=='?')\n\t\tq++;\n\t}\n\tmax1=max(a,g);\n\tmax2=max(c,t);\n\tmax3=(max1,max2);\n\tif(q==0)\n\tprintf(\"%s\",s);\n\tif((4*max3-a-g-c-t)!=q&&q!=0)\n\tprintf(\"===\");\n\tif((4*max3-a-g-c-t)==q&&q!=0)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tk=0;\n\t\t\tif(s[i]=='?')\n\t\t\t{\n\t\t\t\tif(a!=max3&&k==0)\n\t\t\t\t{\n\t\t\t\t\ts[i]='A';\n\t\t\t\t\ta++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tif(g!=max3&&k==0)\n\t\t\t\t{\n\t\t\t\t\ts[i]='G';\n\t\t\t\t\tg++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tif(c!=max3&&k==0)\n\t\t\t\t{\n\t\t\t\t\ts[i]='C';\n\t\t\t\t\tc++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\tif(t!=max3&&k==0)\n\t\t\t\t{\n\t\t\t\t\ts[i]='T';\n\t\t\t\t\tt++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\",s);\n\t}\n\t\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tint n,i,j,t=0,a=0,g=0,c=0;\n\tscanf(\"%d\\n\",&n);\n\tchar s[n+1];\n\tgets(s);\n\tif(n%4!=0)\n\t{\n\t\tprintf(\"===\");return 0;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='A')a++;\n\t\tif(s[i]=='G')g++;\n\t\tif(s[i]=='C')c++;\n\t\tif(s[i]=='T')t++;\n\t}\n\tif(a>n/4||g>n/4||c>n/4||t>n/4)\n\t{\n\t\tprintf(\"===\");return 0;\n\t}\n\ta=n/4-a;g=n/4-g;c=n/4-c;t=n/4-t;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='?')\n\t\t{\n\t\t\tif(a>0)\n\t\t\t{\n\t\t\t\ts[i]='A';a--;\n\t\t\t}else\n\t\t\tif(g>0)\n\t\t\t{\n\t\t\t\ts[i]='G';g--;\n\t\t\t}else\n\t\t\tif(c>0)\n\t\t\t{\n\t\t\t\ts[i]='C';c--;\n\t\t\t}else\n\t\t\tif(t>0)\n\t\t\t{\n\t\t\t\ts[i]='T';t--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)printf(\"%c\",s[i]);\n}"}
{"similarity_score": 0.9710610932475884, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5f00af560cfae88ddd8695a3f5740fdf", "bug_code_uid": "bcb13d9665d8ff5e3450fecb02be96ce", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "a2a21e99a9e4c761c6878b360d8ae8c2", "difficulty": 1500, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\nint n,l,r;\n\nscanf(\"%d %d %d\",&n,&l,&r);\nl--;\nr--;\nint a[100001] = {0};\nint b[100001] = {0};\nint acnt[100001] = {0};\nint bcnt[100001] = {0};\nint i;\n\nfor (i = 0 ; i < n; i ++){\n\tscanf(\"%d\",a+i); \n}\nfor (i = 0 ; i < n; i ++){\n\tscanf(\"%d\",b+i); \n}\t\n\t\nbool flag = true;\n\t\nfor (i = 0 ; i < n; i ++){\n\tif ((i < l || i > r) && a[i] != b[i]){\n\t\tprintf(\"LIE\\n\");\n\t\tflag = false;\n\t\tbreak;\n\t}\n\t\n\tacnt[a[i]]++; \n\tbcnt[a[i]]++; \n}\t\nif (flag){\n\t\n\tfor (i = 0 ; i < n; i ++){\n\t\tif (acnt[i] != bcnt[i]){\n\t\t\tflag = false;\n\t\t\tbreak;\n\t\t}\n\t}\t\n\tif (flag)\n\t\tprintf(\"TRUTH\\n\");\n\telse\n\t\tprintf(\"LIE\\n\");\t\n}\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\nint n,l,r;\n\nscanf(\"%d %d %d\",&n,&l,&r);\nl--;\nr--;\nint a[100001] = {0};\nint b[100001] = {0};\nint acnt[100001] = {0};\nint bcnt[100001] = {0};\nint i;\n\nfor (i = 0 ; i < n; i ++){\n\tscanf(\"%d\",a+i); \n}\nfor (i = 0 ; i < n; i ++){\n\tscanf(\"%d\",b+i); \n}\t\n\t\nint flag = 1;\n\t\nfor (i = 0 ; i < n; i ++){\n\tif ((i < l || i > r) && a[i] != b[i]){\n\t\tprintf(\"LIE\\n\");\n\t\tflag = 0;\n\t\tbreak;\n\t}\n\t\n\tacnt[a[i]]++; \n\tbcnt[a[i]]++; \n}\t\nif (flag){\n\t\n\tfor (i = 0 ; i < n; i ++){\n\t\tif (acnt[i] != bcnt[i]){\n\t\t\tflag = 0;\n\t\t\tbreak;\n\t\t}\n\t}\t\n\tif (flag)\n\t\tprintf(\"TRUTH\\n\");\n\telse\n\t\tprintf(\"LIE\\n\");\t\n}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.932295719844358, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "5acd181e457e54b849dba3e07bb2ac74", "bug_code_uid": "ce27c326da837bd74738145956f2805a", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "a20499a851f1d0ba8eb1f15527adb86c", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint a,i,j,n,q,sum1=0,sum2=0,arr[100],p[100],temp=0,sum=0,s=0,count=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&arr[i]);\n\t\tsum= sum+arr[i];\n\t}\n\t for (i = 0; i < n-1; i++)  {\n       // Last i elements are already in place   \n       for (j = 0; j < n-i-1; j++){\n           if (arr[j] > arr[j+1]){\n             // swap(&arr[j], &arr[j+1]);\n             \n             temp=arr[j];\n             arr[j]=arr[j+1];\n             arr[j+1]=temp;}\n\t\t}\n\t}\n\ti=1;\n\twhile((n-i)>=0){\n\t\t\ts=s+arr[n-i];\n\t\tsum1=sum-s;\n\t\tq=n-i;\n\t\n\t\tcount++;\n\t\t//sum2=sum-sum1;\n\t\tif(sum1<s)\n\t\t\tbreak;\n\t}\n\tprintf(\"%d\",count);\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint a,i,j,n,q,sum1=0,sum2=0,arr[100],p[100],temp=0,sum=0,s=0,count=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&arr[i]);\n\t\tsum= sum+arr[i];\n\t}\n\t for (i = 0; i < n-1; i++)  {\n       // Last i elements are already in place   \n       for (j = 0; j < n-i-1; j++){\n           if (arr[j] > arr[j+1]){\n             // swap(&arr[j], &arr[j+1]);\n             \n             temp=arr[j];\n             arr[j]=arr[j+1];\n             arr[j+1]=temp;}\n\t\t}\n\t}\n\t//i=1;\n\tfor(i=n-1;i>=0;i--){\n\t\t\ts=s+arr[i];\n\t\tsum1=sum-s;\n\t\t//q=n-i;\n\t\n\t\tcount++;\n\t\t//sum2=sum-sum1;\n\t\tif(sum1<s)\n\t\t\tbreak;\n\t\t\n\t}\n\tprintf(\"%d\",count);\n\n\treturn 0;\n}"}
{"similarity_score": 0.30577223088923555, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "727f90af9d4cb895ecc8a8a23e22a964", "bug_code_uid": "a1ff07b084079df26d76c7bc04aca29b", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "413613883c7c00998adcd8672ca46e66", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid main()\n{\n\tint n,i=0,anton=0,danik=0;\n\tchar *a;\n\tscanf(\"%d\",&n);\n\ta=(char*)malloc(sizeof(char)*n);\n\tscanf(\"%s\",a);\n\twhile(i<n)\n\t{\n\t\tif(a[i]=='A')\n\t\t\tanton++;\n\t\telse\n\t\t\tdanik++;\n\t\ti++;\n\t}\n\tif(anton>danik)\n\t\tprintf(\"Anton\");\n\telse\n\t\tif(danik>anton)\n\t\t\tprintf(\"Danik\");\n\t\telse\n\t\t\tprintf(\"Friendship\");\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,i=0,anton=0,danik=0;\n\tchar c;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\t\n\t\tscanf(\" %c\",&c);\n\t\tif(c=='A')\n\t\t\tanton++;\n\t\telse\n\t\t\tdanik++;\n\t}\n\tif(anton==danik)\n\t\tprintf(\"Friendship\");\n\telse\n\t\tif(danik>anton)\n\t\t\tprintf(\"Danik\");\n\t\telse\n\t\t\tprintf(\"Anton\");\n\treturn 0;\n}"}
{"similarity_score": 0.9765807962529274, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "be7ee0360ff29a3c88c7e0f5a1221756", "bug_code_uid": "9244fb3aafb1bea80a6aa58ed16c1200", "src_uid": "97a226f47973fcb39c40e16f66654b5f", "apr_id": "e0a97ee99991f925048b12976acc8cbf", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint b[200005];\n\nint main()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"I.in\",\"r\",stdin);\n    #endif // ONLINE_JUDGE\n    long long n,i,temp,s;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    temp=0;s=b[0];\n    for(i=0;i<n-1;i++)\n    {\n        temp=b[i]-b[i+1];\n        if(temp<0)  temp=-1*temp;\n        s=s+temp;\n    }\n    printf(\"%I64d\",s);\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint b[200005];\n\nint main()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"I.in\",\"r\",stdin);\n    #endif // ONLINE_JUDGE\n    long long n,i,temp,s;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    temp=0;s=b[0];\n    if(s<0) s=s*-1;\n    for(i=0;i<n-1;i++)\n    {\n        temp=b[i]-b[i+1];\n        if(temp<0)  temp=-1*temp;\n        s=s+temp;\n    }\n    printf(\"%I64d\",s);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9973045822102425, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d1ebecdf0042be2730f46b50303b7bcf", "bug_code_uid": "9d09c36de93e31334f40f9d29c29314f", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "4abc36af6f1953212426051d7cedef1b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n,i,sum=1,max=1;\n\tint h1,m1,h2,m2;\n\n\tscanf(\"%d\", &n);\n\tscanf(\"%d%d\", &h1, &m1);\n\tfor(i=1;i<n;i++){\n\t\tscanf(\"%d%d\", &h2, &m2);\n\t\tif(sum > max)\n\t\t\tmax = sum;\n\t\tif(h2*60+m2 <= h1*60+m1){\n\t\t\tsum++;\n\t\t\tif(sum > max)\n\t\t\t\tmax = sum;\n\t\t}\n\t\telse{\n\t\t\th1 = h2;\n\t\t\tm1 = m2;\n\t\t\tsum = 1;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", max);\n\tsystem(\"pause\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n,i,sum=1,max=1;\n\tint h1,m1,h2,m2;\n\n\tscanf(\"%d\", &n);\n\tscanf(\"%d%d\", &h1, &m1);\n\tfor(i=1;i<n;i++){\n\t\tscanf(\"%d%d\", &h2, &m2);\n\t\tif(sum > max)\n\t\t\tmax = sum;\n\t\tif(h2*60+m2 <= h1*60+m1){\n\t\t\tsum++;\n\t\t\tif(sum > max)\n\t\t\t\tmax = sum;\n\t\t}\n\t\telse{\n\t\t\th1 = h2;\n\t\t\tm1 = m2;\n\t\t\tsum = 1;\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", max);\n\t//system(\"pause\");\n\treturn 0;\n}"}
{"similarity_score": 0.9980250164581962, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cc426319329f9643aac9916574817ad8", "bug_code_uid": "ddc9d930db3a46b23cb8dfb6f165b0ec", "src_uid": "e6753e3f71ff13cebc1aaf04d3d2106b", "apr_id": "6c8ca7bc2d935465548967bfc7429b58", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t = 0,m,n,i=0,x=0;\r\n\tint arr[128];\r\n\tscanf(\"%d\", &t);\r\n\twhile (i+1<2*t)\r\n\t{\r\n\t\tscanf(\"%d%d\", &m, &n);\r\n\t\tif (m == 1 || n == 1)\r\n\t\t{\r\n\t\t\tarr[i] = m, arr[i + 1] = n;\r\n\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (m == 2 && n == 2)\r\n\t\t{\r\n\t\t\tarr[i] = m, arr[i + 1] = n;\r\n\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (m == 3 && n == 3)\r\n\t\t{\r\n\t\t\tarr[i] = n - 1, arr[i + 1] = n - 1\r\n\t\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (m == 2)\r\n\t\t{\r\n\t\t\tarr[i]=m,arr[i+1]=i-1; \r\n\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (n == 2)\r\n\t\t{\r\n\t\t\tarr[i]=m-1,arr[i+1]=n;\r\n\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tarr[i]=m,arr[i+1]=n;\r\n\t\ti = i + 2;\r\n\t\t}\r\n\tfor (i = 0; i <= t * 2 - 1; i++)\r\n\t{\r\n\t\tprintf(\"%d \", arr[i]);\r\n\t\tif (i % 2)\r\n\t\t\tprintf(\"\\n\");\r\n\t}\r\n\t\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t = 0,m,n,i=0,x=0;\r\n\tint arr[128];\r\n\tscanf(\"%d\", &t);\r\n\twhile (i+1<2*t)\r\n\t{\r\n\t\tscanf(\"%d%d\", &m, &n);\r\n\t\tif (m == 1 || n == 1)\r\n\t\t{\r\n\t\t\tarr[i] = m, arr[i + 1] = n;\r\n\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (m == 2 && n == 2)\r\n\t\t{\r\n\t\t\tarr[i] = m, arr[i + 1] = n;\r\n\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (m == 3 && n == 3)\r\n\t\t{\r\n\t\t\tarr[i] = n - 1, arr[i + 1] = n - 1;\r\n\t\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (m == 2)\r\n\t\t{\r\n\t\t\tarr[i]=m,arr[i+1]=n-1; \r\n\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (n == 2)\r\n\t\t{\r\n\t\t\tarr[i]=m-1,arr[i+1]=n;\r\n\t\t\ti = i + 2;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tarr[i]=m,arr[i+1]=n;\r\n\t\ti = i + 2;\r\n\t\t}\r\n\tfor (i = 0; i <= t * 2 - 1; i++)\r\n\t{\r\n\t\tprintf(\"%d \", arr[i]);\r\n\t\tif (i % 2)\r\n\t\t\tprintf(\"\\n\");\r\n\t}\r\n\t\treturn 0;\r\n}"}
{"similarity_score": 0.5347003154574133, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "8730106f70adc22342ed8a2c04e10f2d", "bug_code_uid": "441b5105783689b488c4dc6d5d951d39", "src_uid": "10927dcb59007fc3a31fdb6b5d13846f", "apr_id": "1a25c70d59f8520fd62baad2176cbbcd", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, i;\r\n    scanf(\"%d\", &t);\r\n    for(i = 0; i < t; i++)\r\n    {\r\n        int n, k, j;\r\n        scanf(\"%d %d\", &n, &k);\r\n        int per[n];\r\n        for(j = 0; j < n; j++)\r\n            scanf(\"%d\", &per[j]);\r\n\r\n        if(k == n)\r\n        {\r\n            printf(\"0\\n\");\r\n        }\r\n        else if(k == 1)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            int count = 0;\r\n            for(j = 0; j < k; j++)\r\n            {\r\n                if(per[j] != k)\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n            printf(\"%d\\n\", count);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, i;\r\n    scanf(\"%d\", &t);\r\n    for(i = 0; i < t; i++)\r\n    {\r\n        int n, k, j, a, count = 0;\r\n        scanf(\"%d %d\", &n, &k);\r\n        int per[n];\r\n        for(j = 0; j < n; j++)\r\n            scanf(\"%d\", &per[j]);\r\n\r\n        for(j = 1; j <= k; j++)\r\n        {\r\n            for(a = 0; a < k; a++)\r\n            {\r\n                if(j == per[a])\r\n                {\r\n                    count++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\", k - count);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9989177489177489, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c9a443b04836bd3c7ee191fc4f3e764e", "bug_code_uid": "abcabc304b6b7cf6a834772b326557b3", "src_uid": "fd63aeefba89bef7d16212a0d9e756cd", "apr_id": "452e5fcf0229cace691a8487011acf01", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char myarray[1000000];\n    char myarray1[1000000];\n    scanf(\"%s\",&myarray);\n    scanf(\"%s\",&myarray1);\n    int len1,len2;\n    len1=strlen(myarray);\n    len2=strlen(myarray1);\n    int a=0,b=0;\n    int i,j;\n    for(i=0; i<len1; i++)\n    {\n        if(myarray[i]!=48)\n        {\n            break;\n        }\n        a++;\n    }\n    for(i=0; i<len2; i++)\n    {\n        if(myarray1[i]!=48)\n        {\n            break;\n        }\n        b++;\n    }\n    if((len1-a)>(len2-b))\n    {\n        printf(\">\");\n        return 0;\n    }\n    else if((len1-a)<(len2-b))\n    {\n        printf(\"<\");\n        return 0;\n    }\n    for(i=a,j=b; i<len1; i++,j++)\n    {\n        if(myarray[i]>myarray1[j])\n        {\n            printf(\">\");\n            return 0;\n        }\n        else if(myarray[i]<myarray1[j])\n        {\n            printf(\"<\");\n            return 0;\n        }\n    }\n    printf(\"=\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char myarray[10000000];\n    char myarray1[10000000];\n    scanf(\"%s\",&myarray);\n    scanf(\"%s\",&myarray1);\n    int len1,len2;\n    len1=strlen(myarray);\n    len2=strlen(myarray1);\n    int a=0,b=0;\n    int i,j;\n    for(i=0; i<len1; i++)\n    {\n        if(myarray[i]!=48)\n        {\n            break;\n        }\n        a++;\n    }\n    for(i=0; i<len2; i++)\n    {\n        if(myarray1[i]!=48)\n        {\n            break;\n        }\n        b++;\n    }\n    if((len1-a)>(len2-b))\n    {\n        printf(\">\");\n        return 0;\n    }\n    else if((len1-a)<(len2-b))\n    {\n        printf(\"<\");\n        return 0;\n    }\n    for(i=a,j=b; i<len1; i++,j++)\n    {\n        if(myarray[i]>myarray1[j])\n        {\n            printf(\">\");\n            return 0;\n        }\n        else if(myarray[i]<myarray1[j])\n        {\n            printf(\"<\");\n            return 0;\n        }\n    }\n    printf(\"=\");\n    return 0;\n}\n"}
{"similarity_score": 0.9775880469583778, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9992ae4d25288a1291234050ae0e0271", "bug_code_uid": "5187e96af7618f17831954089971e564", "src_uid": "1eaff8e0ec4614753699128af74b2471", "apr_id": "92f4b861127eea9ce47b7ade7ce0d276", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n    int t,i,j,k;\n    scanf(\"%d\",&t);\n    int a[100],ans[t][100],n[t];\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n[i]);\n        for(k=n[i]-1,j=0;j<n[i];k--,j++)\n        {\n            scanf(\"%d\",&a[j]);\n            ans[i][k]=a[j];\n        }\n    }\n    for(i=0;i<t;i++)\n    {\n        for(j=0;j<n[i];j++)\n        {\n            printf(\"%d \",ans[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n/*3\n2\n1 2\n6\n2 1 6 5 4 3\n5\n2 4 3 1 5\n*/", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,j,k;\n    scanf(\"%d\",&t);\n    int a[100],ans[t][100],n[t];\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n[i]);\n        for(k=n[i]-1,j=0;j<n[i];k--,j++)\n        {\n            scanf(\"%d\",&a[j]);\n            ans[i][k]=a[j];\n        }\n    }\n    for(i=0;i<t;i++)\n    {\n        for(j=0;j<n[i];j++)\n        {\n            printf(\"%d \",ans[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n/*3\n2\n1 2\n6\n2 1 6 5 4 3\n5\n2 4 3 1 5\n*/"}
{"similarity_score": 0.39215686274509803, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "0c56f8ca1093c12e5783d497bd650e21", "bug_code_uid": "2ff31267ad29a1bbd819a9c9045f28c0", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "6a2fa36012ea5ce408fd31cd846b0118", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong long int n,rev=0,rem,t,y;\nscanf(\"%I64d\",&n);\nt=n;\ny=n;\nwhile(y%10==0)\n{\nn=n*10;\t\ny=y/10;\t\n}\nwhile(t)\n{\nrem=t%10;\nrev=rev*10+rem;\nt=t/10;\t\n}\n//printf(\"%I64d\\n\",rev);\t\nprintf(\"%I64d%I64d\",n,rev);\t\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar s[1000000];\nscanf(\"%s\",s);\t\nprintf(\"%s\",s);\nprintf(\"%s\",strrev(s));\t\n}"}
{"similarity_score": 0.998046875, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d498413f7a916954131ae3b95d93d6a1", "bug_code_uid": "cd9024a00f49f0f9b1450532d7d6dedd", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "c4c9acca5a5bbae08ae7d8f12feee8d3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int m,n,i,j,is_yes=1;\n    char a[101][101],_a;\n    scanf(\"%d%d\",&m,&n);\n    for(i=0;i<m;i++)\n        scanf(\"%s\",&a[i]);\n    for(i=0;i<m;i++)\n        for(j=0;j<n-1;j++){\n            if(a[i][j]!=a[i][j+1]){\n                is_yes=0;\n                break;\n            }\n        }\n    for(i=0;i<m-1;i++)\n        if(a[i][0]!=a[i+1][0]){\n            is_yes=0;\n            break;\n        }\n    if(is_yes){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int m,n,i,j,is_yes=1;\n    char a[101][101],_a;\n    scanf(\"%d%d\",&m,&n);\n    for(i=0;i<m;i++)\n        scanf(\"%s\",&a[i]);\n    for(i=0;i<m;i++)\n        for(j=0;j<n-1;j++){\n            if(a[i][j]!=a[i][j+1]){\n                is_yes=0;\n                break;\n            }\n        }\n    for(i=0;i<m-1;i++)\n        if(a[i][0]==a[i+1][0]){\n            is_yes=0;\n            break;\n        }\n    if(is_yes){\n        printf(\"YES\");\n    }else{\n        printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9963031423290203, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "382b6c8df04d3cc248622e86d42ba609", "bug_code_uid": "1dc88c7c1faa05e9ea58424dc7f7b95c", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "c9743b3d664b57431bc7db5529d096d3", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a[100009],n,i,count=1,max=0,t;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    if(n==1)\n    {\n        printf(\"1\");\n        return 0;\n    }\n    else\n        {\n    for(i=0;i<n-1;i++)\n    {\n        if(a[i]<=a[i+1])\n        {\n            count++;\n        }\n        t=count;\n        if(t>max)\n         {\n             max=t;\n         }\n        if(arr[i]>arr[i+1])\n        {\n         count=1;\n        }\n    }\n    printf(\"%I64d\",max);\n    return 0;\n        }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a[100009],n,i,count=1,max=0,t;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n    }\n    if(n==1)\n    {\n        printf(\"1\");\n        return 0;\n    }\n    else\n        {\n    for(i=0;i<n-1;i++)\n    {\n        if(a[i]<=a[i+1])\n        {\n            count++;\n        }\n        t=count;\n        if(t>max)\n         {\n             max=t;\n         }\n        if(a[i]>a[i+1])\n        {\n         count=1;\n        }\n    }\n    printf(\"%I64d\",max);\n    return 0;\n        }\n}"}
{"similarity_score": 0.683046683046683, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "98a3dc6978bd583ebe37dad07a471b33", "bug_code_uid": "557b36d64e77b794c071bcccf93937d7", "src_uid": "942123e43a83d5a4cea95a6781064e28", "apr_id": "f759b3650b8a2684f109bbbbde5df20d", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(int i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\n\tint d=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(i==0 && a[i]%2!=0)\n\t\td++;\n\t\telse if((i%2)!=(a[i]%2))\n\t\td++;\n\t\t\n\t}\n\t//printf(\"%d\",d);\n    if(d%2)\n    printf(\"-1\\n\");\n    else\n    {\n        printf(\"%d\\n\",d/2);\n    }\n    }\n\treturn 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(int i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\n\tint e=0,d=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t    if((i%2)!=(a[i]%2))\n\t\t{\n\t\t    if(a[i]%2==0)\n\t\t    e++;\n\t\t    else\n\t\t    d++;\n\t\t}\n\t\n\t\t\n\t}\n\t//printf(\"%d\",d);\n    if((e+d)%2==0 && e==d)\n    printf(\"%d\\n\",e);\n    else\n    printf(\"-1\\n\");\n    }\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.6224489795918368, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7679d5d76548ff0fbbefefbe26ef7987", "bug_code_uid": "f5d29483c8a68f9a63b404a64b61fbae", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "74a10b6bcef6a6ca6dbe812abc3e729e", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint n,x,a,b,c,w;\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&x);\n\t\tif(x==25)      a++;\n\t\telse if(x==50) if(!a) {w++; break;} else {b++; a--;}\n   \t\telse           if(!a || (!b && a < 3)) {w++;break;} else {c++; a--; b--;}\n\t}\n\tprintf(w ? \"NO\" : \"YES\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint n,x,a,b,c,w;\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&x);\n\t\tif(x==25)      a++;\n\t\telse if(x==50) if(a) {b++; a--;} else w++;\n   \t\telse           if(b && a) {c++; a--; b--;} else if(a > 2) { c++; a -= 3;} else w++;\n\t}\n\tprintf(w ? \"NO\" : \"YES\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.5382653061224489, "equal_cnt": 8, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "2a8d688dff7e72a073b76ba03b7520c4", "bug_code_uid": "86f4a2d1b2ca3f24dd5c0dd84735b4ff", "src_uid": "30cfce44a7a0922929fbe54446986748", "apr_id": "0bc54ded8104972ada297f4832a20465", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int n,a,b,c,d;\n    int s,i,l,j,k,f,m,count;\n    for(s=0;s<t;s++)\n    {\n        scanf(\"%d %d %d %d %d\",&n,&a,&b,&c,&d);\n        count=0;\n        for(i=a-b;i<=a+b;i++)\n        {\n            l=n*i;\n            if(l>=c-d && l<=c+d)\n            {printf(\"YES\\n\");\n            count++;}\n        }\n        if(count==0)\n        {printf(\"NO\\n\");}\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int n,a,b,c,d,s;\n    for(s=0;s<t;s++)\n    {\n        scanf(\"%d %d %d %d %d\",&n,&a,&b,&c,&d);\n        if(n*(a+b)<(c-d))\n        printf(\"NO\\n\");\n        else if(n*(a-b)>(c+d))\n        printf(\"NO\\n\");\n        else\n        printf(\"YES\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.6389413988657845, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "264558d935ed4803f499085c9f9aac5a", "bug_code_uid": "3b4955627ea1bbdb1ed1fd2663dc74b7", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "fd752786e26de4709c0a81965a817e0f", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,len;\n    scanf(\"%d\",&n);\n    if((n<1)||(n>100))\n        EXIT_FAILURE;\n\n    char str[n][100];\n    int i;\n    for(i=0;i<(n+1);i++){\n        gets(str[i]);\n    }\n    for(i=0;i<(n+1);i++)\n    {\n        len=strlen(str[i])-1;\n        if((len+1)==0)\n            EXIT_FAILURE;\n        else if((len+1)>10)\n            printf(\"%c%d%c\\n\",str[i][0],len-1,str[i][len]);\n        else\n            printf(\"%s\\n\",str[i]);\n    }\n\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,len;\n    scanf(\"%d\",&n);\n    if((n<1)||(n>100))\n        EXIT_FAILURE;\n    char s[1];\n    gets(s);\n    char str[n][120];\n    int i;\n    for(i=0;i<(n);i++){\n        gets(str[i]);\n    }\n    for(i=0;i<(n);i++)\n    {\n        len=strlen(str[i]);\n        if((len<1)||(len>100))\n            return 0;\n        if(len>10)\n            printf(\"%c%d%c\",str[i][0],len-2,str[i][len-1]);\n        else\n            printf(\"%s\",str[i]);\n        printf(\"\\n\");\n    }\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9560776302349336, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "bd1272df4d16011e4cd2b14dcfd28d9c", "bug_code_uid": "5565578842a98a52e0be48fe7d268230", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "0fea8318efc30b560bea632c2f5459c5", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int nodos, n, nf=1, tiempo=0; \n    scanf (\"%d\", &nodos);\n    while (nodos>0) {\n          scanf (\"%d\", &n);\n          if (n>nf) {\n             tiempo=tiempo+n-nf+2;\n          } else {\n               while (nf>n) {\n                     nf=nf-1;\n                     tiempo=tiempo+1;\n               }\n               tiempo=tiempo+2;\n          }\n          nf=n;\n          nodos=nodos-1;\n    }\n    printf(\"%d\\n\", tiempo);\n    system (\"pause\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int nodos, n, nf=1, tiempo=0;\n    scanf (\"%d\", &nodos);\n    while (nodos>0) {\n          scanf (\"%d\", &n);\n          if (n>nf) {\n             tiempo=tiempo+n-nf+2;\n          } else {\n               while (nf>n) {\n                     nf=nf-1;\n                     tiempo=tiempo+1;\n               }\n               tiempo=tiempo+2;\n          }\n          nf=n;\n          nodos=nodos-1;\n    }\n    printf(\"%d\\n\", tiempo);\n    return 0;\n}\n"}
{"similarity_score": 0.9956331877729258, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "df2c2459ecb84556df959f4d71d236e2", "bug_code_uid": "d661ef15069f66adf2322f9684b9521c", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "c58f647de09e6fcc277b164fafda07b3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a, b, i;\n    scanf(\"%d\", &a);\n    for (i=0;i<a;i++)\n    {\n        scanf(\"%d\", &b);\n        if (b%2)\n        {\n            b++;\n        }\n        printf(\"%d\\n\", b/2-1);\n    }\n    return 0;", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int a, b, i;\n    scanf(\"%d\", &a);\n    for (i=0;i<a;i++)\n    {\n        scanf(\"%d\", &b);\n        if (b%2)\n        {\n            b++;\n        }\n        printf(\"%d\\n\", b/2-1);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8167141500474834, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8d2a8bbfde7472f4f8c9c4dcff7c9669", "bug_code_uid": "a143dee42a53fd62193aee2b997f0133", "src_uid": "8cf5d08a319672d9b767d3523eca4df6", "apr_id": "a9ba5f8ad8eb0cdee477e82b1650afa0", "difficulty": 1400, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int i,n,w,count,t=0;\n    int a[1005],max,min;\n    int number[1005]={0};\n\n    scanf(\"%d %d\",&n,&w);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n\n    for(i=0;i<n;i++){\n        t+=a[i];\n        number[i]=t;\n    }\n    max=number[0];\n    for(i=1;i<n;i++)\n        if(number[i]>max)max=number[i];\n\n    min=number[0];\n    for(i=1;i<n;i++)\n        if(number[i]<min)min=number[i];\n\n    if(min>0)min=0;\n    count=w-max+min+1;\n    if(count<=0)count=0;\n    printf(\"%d\",count);\n\n    return 0;\n    }", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int i,n,w,count,t=0;\n    int a[1005],max,min;\n    int number[1005]={0};\n\n    scanf(\"%d %d\",&n,&w);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n\n    for(i=0;i<n;i++){\n        t+=a[i];\n        number[i]=t;\n    }\n\n    max=0;\n    for(i=0;i<n;i++)\n        if(number[i]>max)max=number[i];\n\n    min=0;\n    for(i=0;i<n;i++)\n        if(number[i]<min)min=number[i];\n\n    count=w-max+min+1;\n    if(count<=0)count=0;\n    printf(\"%d\",count);\n\n    return 0;\n    }"}
{"similarity_score": 0.43735763097949887, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7c1ce0b6574b5cdbbaaee2162f68926c", "bug_code_uid": "c136cf179b821c47d9e6978cc3d2f998", "src_uid": "b43dee2f223c869a35b1b11ceb9d2b6b", "apr_id": "22f2d981caccc89e407f6aa5a29c602a", "difficulty": 900, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define N 109\n\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\n\n\nint main() {\n\tint t, n, a,b, c, ans;\n\tscanf(\"%d\", &t);\n\twhile (t--){\n\t\tscanf(\"%d\", &n);\n\t\tans = 0;\n\t\ta = -1;\n\t\twhile (++a*3 <= 1000){\n\t\t\tb =-1;\n\t\t\twhile (++b*5 <= 1000){\n\t\t\t\tc = -1;\n\t\t\t\twhile(++c*7 <= 1000){\n\t\t\t\t\tif (3*a+5*b+7*c == n){\n\t\t\t\t\t\tans = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (ans==1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ans == 1)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (ans == 0)\n\t\t\tprintf(\"-1\\n\");\n\t\telse {\n\t\t\tprintf(\"%d %d %d\\n\", a, b, c);\n\t\t}\n\n\n\t}\n\n\n\n\n\n\n\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define N 1005\n\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\nint aa[N];\nint bb[N];\nint cc[N];\n\n\n\nint main() {\n\tint t, n, a,b, c, ans, m , q, r;\n\tscanf(\"%d\", &t);\n\twhile (t--){\n\n\n\t\tscanf(\"%d\", &n);\n\t\tif (n==1 || n == 2 || n == 4){\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif (n==3 ){\n\t\t\tprintf(\"1 0 0\\n\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (n%3 == 0){\n\n\t\t\tprintf(\"%d 0 0\\n\", n/3);\n\n\t\t}\n\t\tif (n%3 == 1){\n\t\t\tm = n - 7;\n\n\n\t\t\tprintf(\"%d 0 1\\n\", m/3);\n\n\t\t}\n\t\tif (n%3 == 2){\n\t\t\tm = n - 5;\n\n\n\t\t\tprintf(\"%d 1 0\\n\", m/3);\n\n\t\t}\n\n\n\t\n\t\n\n\n\t}\n\n\n\n\n\n\n\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6324582338902148, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "6f3d048b7c559bd0e4ff435208f5eda3", "bug_code_uid": "8c63ce55aefbf008246f6e9c3d7d6dc8", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "33911eb59c207b2777c23ffa76f9d03c", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint getCrossNumber(long long int n){\n    if (n+1==2)\n        return 3;\n    if(n+1==4)\n        return 4;\n    if((4*n)%(n+1) != 0)\n        return 4*n+1;\n    return (4*n)/(n+1)\n}\n\nint main ()\n{\n\tint n, i;\n    long long int aux;\n\n    scanf(\"%d\", &n);\n    \n    for (i=0;i<n;i++){\n        scanf (\"%I64d\", &aux);\n        printf(\"\\n%d\", getCrossNumber(aux));\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nlong long int getCrossNumber(long long int n)\n{\n    int fat=4;\n    if((n+1)%n == 0)\n        n=1;\n    if((n+1)%4 == 0)\n        fat=1;\n    else if((n+1)%2 == 0)\n        fat=2;\n    return (fat*n) +1;\n\n}\n\nint main ()\n{\n\tint n, i;\n    long long int aux;\n\n    scanf(\"%d\", &n);\n    \n    printf(\"\\n\");\n    \n    for (i=0;i<n;i++){\n        scanf (\"%I64d\", &aux);\n        printf(\"%I64d\\n\", getCrossNumber(aux));\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.7035069075451648, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "1f5bcf83cb4967711409fb0faf760ba8", "bug_code_uid": "ed6864ed770968b2a687feecfa656583", "src_uid": "7cec27879b443ada552a6474c4e45c30", "apr_id": "ca4215bdd5a4136ac834bb62ef81e01d", "difficulty": 1000, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,n,r,b,ri,i,j,cnt;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&n,&r,&b);\r\n\t\tif(r%(b+1))\r\n\t\t\tri=r/(b+1)+1;\r\n\t\telse\r\n\t\t\tri=r/(b+1);\r\n\t\tcnt=0;\r\n\t\tfor(i=0;i<b;i++)\r\n\t\t{\r\n\t\t\tfor(j=0;j<ri;j++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"R\");\r\n\t\t\t\tcnt++;\r\n\t\t\t}\r\n\t\t\tprintf(\"B\");\r\n\t\t\tcnt++;\r\n\t\t}\r\n\t\tif(cnt<n)\r\n\t\t{\r\n\t\t\tfor(i=cnt;i<n;i++)\r\n\t\t\t\tprintf(\"R\");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n} ", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,n,r,b,ri,i,j,cnt,f,d;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&n,&r,&b);\r\n\t\tf=r%(b+1);\r\n\t\tri=r/(b+1);\r\n\t\tcnt=0;\r\n\t\tfor(i=0;i<b;i++)\r\n\t\t{\r\n\t\t\tif(f)\r\n\t\t\t{\r\n\t\t\t\tfor(j=0;j<ri+1;j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"R\");\r\n\t\t\t\t\tcnt++;\r\n\t\t\t\t}\r\n\t\t\t\tf--;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(j=0;j<ri;j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"R\");\r\n\t\t\t\t\tcnt++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"B\");\r\n\t\t\tcnt++;\r\n\t\t}\r\n\t\tif(cnt<n)\r\n\t\t{\r\n\t\t\tfor(i=cnt;i<n;i++)\r\n\t\t\t\tprintf(\"R\");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n} "}
{"similarity_score": 0.7797223898611949, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "5167e46008973da4e781cc6badcefdf5", "bug_code_uid": "587eab95bc56ade7ad984e325d0ad588", "src_uid": "816907d873bce3573ce1e5ae3f494768", "apr_id": "28dccfbe84c6e7c61a752c9c7a1e5221", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdlib.h>\n# include <stdio.h>\n#include <string.h>\n\nint main(){\n  size_t tests;\n  scanf(\"%zu\",&tests);\n  char string[1000];\n\n  for(int i=0;i<tests;++i){\n    scanf(\"%s\",string);\n    size_t size=strlen(string);\n    char last_dig=string[size-1];\n    if (last_dig=='o' && string[size-2]=='p'){\n      printf(\"FILIPINO\\n\");\n    }\n    else if ((last_dig=='u' && string[size-2]=='s') && ((string[size-3]=='e'  && string[size-4]=='d')\n    || (string[size-3]=='a'  && string[size-4]=='m'))) {\n      printf(\"JAPANESE\\n\");\n    }\n    else if (last_dig=='a' && string[size-2]=='d' && string[size-3]=='i' && string[size-4]=='n' && string[size-5]=='m'){\n      printf(\"KOREAN\\n\");\n    }\n  }\n}\n", "fixed": "# include <stdlib.h>\n# include <stdio.h>\n#include <string.h>\n\nint main(){\n  int tests;\n  scanf(\"%d\",&tests);\n  char* languages[tests];\n  char string[1000];\n  size_t words=0;\n\n  for(int i=0;i<tests;++i){\n    scanf(\"%s\",string);\n    size_t size=strlen(string);\n    char last_dig=string[size-1];\n    if (last_dig=='o' && string[size-2]=='p'){\n      languages[i]= (char*) malloc(8);\n      languages[i]=\"FILIPINO\";\n      words+=1;\n    }\n    else if ((last_dig=='u' && string[size-2]=='s') && ((string[size-3]=='e'  && string[size-4]=='d')\n    || (string[size-3]=='a'  && string[size-4]=='m'))) {\n      languages[i]= (char*) malloc(8);\n      languages[i]=\"JAPANESE\";\n      words+=1;\n    }\n    else if (last_dig=='a' && string[size-2]=='d' && string[size-3]=='i' && string[size-4]=='n' && string[size-5]=='m'){\n      languages[i]= (char*) malloc(8);\n      languages[i]=\"KOREAN\";\n      words+=1;\n    }\n  }\n    for(int i=0;i<words;++i){\n      printf(\"%s\\n\",languages[i]);\n    }\n}\n"}
{"similarity_score": 0.9549019607843138, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9960adb9e742fc9363e826ffe309b040", "bug_code_uid": "c821fa6825895328cbdd6e5809393d57", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "42219324fcc8dc9da425494c27cac964", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n    int n,m,i,j,t,ans=0,count=0;\n    scanf(\"%d%d\",&n,&m);\n    int cost[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&cost[i]);\n        for(j=0;j<i;j++){\n            if(cost[j]>cost[j+1]){\n                t=cost[j];\n                cost[j]=cost[j+1];\n                cost[j+1]=t;\n            }\n        }\n    }\n    for(i=0;i<n;i++){\n        if(cost[i]<0){\n            ans-=cost[i];\n            count++;\n        }\n        if(count==m)break;\n    }\n    printf(\"%d\",ans);\n}", "fixed": "#include<stdio.h>\nmain(){\n    int n,m,i,j,t,ans=0,count=0;\n    scanf(\"%d%d\",&n,&m);\n    int cost[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&cost[i]);\n        }\n    for(i=0;i<n;i++){\n        for(j=0;j<n-1;j++){\n            if(cost[j]>cost[j+1]){\n                t=cost[j];\n                cost[j]=cost[j+1];\n                cost[j+1]=t;\n            }\n        }\n    }\n    for(i=0;i<n;i++){\n        if(cost[i]<0){\n            ans-=cost[i];\n            count++;\n        }\n        if(count==m)break;\n    }\n    printf(\"%d\",ans);\n}"}
{"similarity_score": 0.9983660130718954, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a61824637fb9c8203579f127d37cc614", "bug_code_uid": "5020074dfcbbaffa956339b34f51d2d5", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "2e380f42e32305a93b434704ae912bf5", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n   int t;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       int a[3],i;\n       scanf(\"%d %d %d\",&a[0],&a[1],&a[2]);\n       for(i=1;i<3;i++)\n       {\n           int k=a[i];\n           int j=i-1;\n           while(j>=0 && a[j]>k)\n           {\n               a[j+1]=a[j];\n               j=j-1;\n           }\n           a[j+1]=k;\n       }\n      // printf(\"%d %d %d\\n\",a[0],a[1],a[2]);\n      if(a[0]+a[1]>=a[2])\n      {\n          printf(\"YES\\n\");\n          continue;\n      }\n      else\n      {\n          printf(\"NO\\n\");\n      }\n      \n   }\n   return 0;\n}\n ", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n   int t;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       int a[3],i;\n       scanf(\"%d %d %d\",&a[0],&a[1],&a[2]);\n       for(i=1;i<3;i++)\n       {\n           int k=a[i];\n           int j=i-1;\n           while(j>=0 && a[j]>k)\n           {\n               a[j+1]=a[j];\n               j=j-1;\n           }\n           a[j+1]=k;\n       }\n      // printf(\"%d %d %d\\n\",a[0],a[1],a[2]);\n      if(a[0]+a[1]>=a[2]-1)\n      {\n          printf(\"YES\\n\");\n          continue;\n      }\n      else\n      {\n          printf(\"NO\\n\");\n      }\n      \n   }\n   return 0;\n}\n "}
{"similarity_score": 0.9983579638752053, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "74f7f72dbb8cc82ff12d2543db7b3483", "bug_code_uid": "f3890a554c81dbc73e0693b59fd6a275", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "f90d8049d2bc6902d4f75ef77a39812a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<string.h>\n\nmain()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    long long k, n, w, i, sum = 0, a, b;\n    scanf(\"%I64d\", &n);\n\n    for(i = 0; i<n; i++)\n    {\n        scanf(\"%I64d %I64d\", &a, &b);\n        if(b-a>2)\n            sum++;\n    }\n\n\n\n    printf(\"%I64d\", sum);\n\n\n\n\n\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n//#include<string.h>\n\nmain()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    long long k, n, w, i, sum = 0, a, b;\n    scanf(\"%I64d\", &n);\n\n    for(i = 0; i<n; i++)\n    {\n        scanf(\"%I64d %I64d\", &a, &b);\n        if(b-a>=2)\n            sum++;\n    }\n\n\n\n    printf(\"%I64d\", sum);\n\n\n\n\n\n\n\n\n\n}\n"}
{"similarity_score": 0.9808660624370594, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "bc2a547ebe8b47eeedc5a31ea3525b8f", "bug_code_uid": "22b21f22996d2d99272626075efea8f0", "src_uid": "c1cfe1f67217afd4c3c30a6327e0add9", "apr_id": "1b9f88f79aaccacbb589b8d0af8dbb4d", "difficulty": 1700, "tags": ["geometry", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <math.h>\n#include <stdio.h>\n#define _for(i,s,e) for(i=s;i<e;i++)\ntypedef int num;\nnum vmul(num* a, num* b) {\n    num r = 0, i;\n    _for(i, 0, 5) r += a[i] * b[i];\n    return r;\n}\nnum* vadd(num* a, num* b, num k) {\n    num* r = (num*)malloc(sizeof(num) * 5), i;\n    _for(i, 0, 5) r[i] = a[i] + b[i] * k;\n    return r;\n}\nnum vabs(num* v) { return sqrt(vmul(v, v)); }\nnum vangle(num* a, num* b) {\n    return acos(vmul(a, b) / (vabs(a) * vabs(b))) * 180 / 3.14159265359;\n}\nnum v[1000][5];\nnum good[1000];\nint main() {\n    num ans, i, j, k, n;\n    scanf(\"%d\", &n);\n    ans = n;\n    memset(good, 1, sizeof(num) * n);\n    _for(i,0,n) _for(j,0,5) scanf(\"%d\", &v[i][j]);\n    if(n <= 32)\n        _for(i,0,n) _for(j,0,n) _for(k,0,n)\n        if(i != j && i != k && j != k\n        && vmul(vadd(v[j],v[i],-1), vadd(v[k],v[i],-1)) > 0)\n            if(good[i]) { ans--; good[i] = 0; }\n    printf(\"%d\\n\", ans);\n    _for(i,0,n) if(good[i]) printf(\"%d \", i + 1);\n}\n", "fixed": "#include <stdlib.h>\n#include <math.h>\n#include <stdio.h>\n#define _for(i,s,e) for(i=s;i<e;i++)\ntypedef int num;\nnum vmul(num* a, num* b) {\n    num r = 0, i;\n    _for(i, 0, 5) r += a[i] * b[i];\n    return r;\n}\nnum* vadd(num* a, num* b, num k) {\n    num* r = (num*)malloc(sizeof(num) * 5), i;\n    _for(i, 0, 5) r[i] = a[i] + b[i] * k;\n    return r;\n}\nnum vabs(num* v) { return sqrt(vmul(v, v)); }\nnum vangle(num* a, num* b) {\n    return acos(vmul(a, b) / (vabs(a) * vabs(b))) * 180 / 3.14159265359;\n}\nnum v[1000][5];\nnum good[1000];\nint main() {\n    num ans, i, j, k, n;\n    scanf(\"%d\", &n);\n    ans = n;\n    memset(good, 1, sizeof(num) * n);\n    _for(i,0,n) _for(j,0,5) scanf(\"%d\", &v[i][j]);\n    if(n <= 32) {\n        _for(i,0,n) _for(j,0,n) _for(k,0,n)\n        if(i != j && i != k && j != k\n        && vmul(vadd(v[j],v[i],-1), vadd(v[k],v[i],-1)) > 0)\n            if(good[i]) { ans--; good[i] = 0; }\n        printf(\"%d\\n\", ans);\n        _for(i,0,n) if(good[i]) printf(\"%d \", i + 1);\n    } else { puts(\"0\"); }\n}\n"}
{"similarity_score": 0.9855670103092784, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "539129b023aee4726cd065b80bf26c1c", "bug_code_uid": "bae7567eed267754ae0b984d2bfaead6", "src_uid": "15aac7420160f156d5b73059af1fae3b", "apr_id": "ad02058d2520563a4a53ed64a94103c6", "difficulty": 1600, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAXN 100000\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\n\ntypedef long long ll;\n\nint a[MAXN];\nint k[MAXN];\n\nvoid solve(int n) {\n  ll ans, i, j, t;\n  ans = 0;\n  for (i = 0; i < n; i ++) {\n    for (j = 1, t = 0; j < a[i]; j <<= 2, t ++);\n    ans = MAX(ans, k[i] + t);\n  }\n  printf(\"%I64d\\n\", ans);\n}\n\nint main() {\n  int n, i;\n  while (scanf(\"%d\", &n) == 1) {\n    for (i = 0; i < n; i ++) {\n      scanf(\"%d%d\", &k[i], &a[i]);\n    }\n    solve(n);\n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\n\n#define MAXN 100000\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\n\ntypedef long long ll;\n\nint a[MAXN];\nint k[MAXN];\n\nvoid solve(int n) {\n  ll ans, i, j, t;\n  ans = 0;\n  for (i = 0; i < n; i ++) {\n    for (j = 4, t = 1; j < a[i]; j <<= 2, t ++);\n    ans = MAX(ans, k[i] + t);\n  }\n  printf(\"%I64d\\n\", ans);\n}\n\nint main() {\n  int n, i;\n  while (scanf(\"%d\", &n) == 1) {\n    for (i = 0; i < n; i ++) {\n      scanf(\"%d%d\", &k[i], &a[i]);\n    }\n    solve(n);\n  }\n  return 0;\n}"}
{"similarity_score": 0.4230287859824781, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "d7093bc0ebd9310f23516b2fe55f9805", "bug_code_uid": "f44520affe2c7c8259cec75bf28fa732", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "2a2e4a707ef12d6f0730efc0b017fc9b", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int s,n,i, j, p;\n    scanf(\"%d %d\", &s, &n);\n    int ara[n][2];\n    for (i=0; i<n; i++){\n        for (j=0; j<2; j++){\n            scanf(\"%d\", &ara[i][j]);\n        }\n    }\n    for (i=0,p=0; i<n; i++){\n        if(s>ara[i][0]) {\n            p+=1;\n            s+=ara[i][1];\n        }\n    }\n    if (p>=1) printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int a,b,x[1000],y[1000],i,c=0;\n    scanf(\"%d %d\",&a,&b);\n    for (i=0;i<b;i++)\n    {\n        scanf(\"%d %d\",&x[i],&y[i]);\n    }\n    for(i=0;i<b;i++)\n    {\n        if(a>x[i] && x[i]!=0 )\n        {\n            a=a+y[i];\n            x[i]=0;\n            i=-1;\n            c++;\n        }\n\n    }\n    if (c==b) printf(\"YES\");\n    else if (i==b && c!=b) printf(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.44626743232157506, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "fde9b8f41f3df766535c83691dfe499f", "bug_code_uid": "bc5e7e3e42fa3c5a0b07401eb065dd4e", "src_uid": "6493e146ea8d931582d77bb1b0f06e53", "apr_id": "c22341c7a9f8b34a30e7dd527dad2d0d", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\ntypedef long long ll;\nll gcd(ll a, ll b)\n{\n    ll i, max = 0, greater;\n    greater = (a > b) ? a : b;\n    for (i = 1; i < greater; i++) if (a%i == 0 && b%i == 0 && i >= max) max = i;\n    return max;\n}\nint main()\n{\n    ll n, m, i, cmngcd, a, b, ind = -1;\n    scanf(\"%I64d%I64d\", &n, &m);\n    scanf(\"%I64d%I64d\", &a, &b);\n    cmngcd = gcd(a, b);\n    for (i = 0; i < n-2; i++)\n    {\n        scanf(\"%I64d\", &b);\n        cmngcd = gcd(b, cmngcd);\n    }\n    for (i = 1; i <= m; i++)\n    {\n        scanf(\"%I64d\", &b);\n        if (cmngcd == b) ind = i;\n    }\n    if (ind != -1) printf(\"YES\\n%I64d %I64d\\n\", a, ind);\n    else printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\ntypedef long long ll;\nll gcd(ll a, ll b)\n{\n    return b == 0 ? a : gcd(b, a%b);\n}\nint main()\n{\n    ll n, m, i, cmngcd = 0, a, b, c, ind = -1;\n    scanf(\"%I64d%I64d\", &n, &m);\n    scanf(\"%I64d\", &a);\n    c = a;\n    for (i = 0; i < n-1; i++)\n    {\n        scanf(\"%I64d\", &b);\n        cmngcd = gcd(c-b, cmngcd);\n        b = c;\n    }\n    for (i = 1; i <= m; i++)\n    {\n        scanf(\"%I64d\", &b);\n        if (cmngcd%b == 0) ind = i;\n    }\n    if (ind != -1) printf(\"YES\\n%I64d %I64d\\n\", a, ind);\n    else printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9239130434782609, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "afd714982c449829546e2164f654cb4f", "bug_code_uid": "443b7462fca3b0ccc98fbd8226fdef31", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "3b847ce923a78aadd36d936990b1645e", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint m,n,c=0;\n\tchar i;\n\tscanf(\"%d%d\",&m,&n);\n\twhile(c!=m)\n\t{\n\t\tfor(i=97;i<97+n;i++)\n\t    {\n\t     \tprintf(\"%c\",i);\n\t    \tc++;\n\t    }\n\t}\n\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint m,n,c=0;\n\tchar i;\n\tscanf(\"%d%d\",&m,&n);\n\twhile(c!=m)\n\t{\n\t\tfor(i=97;i<97+n;i++)\n\t    {\n\t     \tprintf(\"%c\",i);\n\t    \tc++;\n\t    \tif(c==m)\n\t\t    break;\n\t    }\n\t}\n\t\n}\n"}
{"similarity_score": 0.3543365455893254, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "76cdab6f0b96021b5d25786f29c78255", "bug_code_uid": "f2a0ebcc7aec725296c605e4f9b6cdac", "src_uid": "16c016c0735be1815c7b94c5c50516f1", "apr_id": "1a2bd40f6f9b262ae7dfa054239a2c76", "difficulty": 1700, "tags": ["dp"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  long long t,k,j,i,s=0;\n  long long a,b;\n  scanf(\"%I64d %I64d\",&t,&k);\n  for(j=0;j<t;j++)\n  {\n    scanf(\"%I64d %I64d\",&a,&b);\n    long long *sum;\n    sum=(long long*)calloc((b+1),sizeof(long long));\n    long long* p;\n    p=(long long*)calloc((b+1),sizeof(long long));\n   \n    for(i=0;i<=b;i++)\n    {\n      if(i<k)\n      p[i]=1;\n      else\n      p[i]=p[i-1]%1000000007+p[i-k]%1000000007;\n      s+=p[i];\n      sum[i]=s;\n    }\n    sum[b]%=1000000007;\n    sum[a]%=1000000007;\n    printf(\"%I64d\\n\",sum[b]-sum[a-1]);\n\n  }\n  return 0;\n\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  long long t,k,j,i,s=0;\n  long long a,b;\n  scanf(\"%I64d %I64d\",&t,&k);\n  long long p[100001];\n  \n  \n  \n    \n    /*for(i=0;i<=100001;i++)\n    {\n      if(i<k)\n      p[i]=1;\n      else\n      p[i]=p[i-1]+p[i-k];\n      if(p[i]>1000000006)\n      p[i]%=1000000007;\n      \n    }*/\n    for(int i=0;i<100001;i++)\n{ if(i-k+1>0)p[i]=p[i-1]+p[i-k];\n  else p[i]=1;\n  if(p[i]>1000000006)p[i]=p[i]%1000000007;\n}\nfor(int i=1;i<100001;i++)\n{ p[i]=p[i]+p[i-1];\n if(p[i]>1000000006)p[i]=p[i]%1000000007;\n}\n    \n    \n    \n  long long sum[100001]={0};    \n  \n \n  for(i=0;i<t;i++)\n  {\n    scanf(\"%I64d %I64d\",&a,&b);\n    long long z= (p[b]-p[a-1])%1000000007;\n    if(z<0)z+=1000000007;\n    printf(\"%I64d\\n\",z%1000000007);\n  }\n  return 0;\n\n}"}
{"similarity_score": 0.5013623978201635, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "1b5ed5cb5cea520714990f254a5545f3", "bug_code_uid": "3ec824e064acf7069ba454cb756816a4", "src_uid": "960e4c234666d2444b80d5966f1d285d", "apr_id": "868c611072b635dd0d4ea0a9cc358fa9", "difficulty": 1300, "tags": ["two pointers", "implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    char a[1000002];\n    gets(a);\n    int b,cnt=0,i,j,k;\n    b=strlen(a);\n        for(j=0;j<=b;j++)\n        {\n            if(strncmp(a+j,\"heavy\",5)==0)\n            {\n                for(k=j;k<=b;k++)\n                {\n                    if(strncmp(a+k,\"metal\",5)==0)\n                    cnt++;\n                }\n            }\n        }\n    printf(\"%d\",cnt);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    char a[1000002];\n    gets(a);\n    long long b,cnt=0,i,j,d=0,k;\n    b=strlen(a);\n        for(j=b;j>=0;j--)\n        {\n            if(strncmp(a+j,\"metal\",5)==0)\n            d++;\n            if(strncmp(a+j,\"heavy\",5)==0)\n            cnt=cnt+d;\n                }\n\n\n    printf(\"%I64d\",cnt);\n    return 0;\n}\n"}
{"similarity_score": 0.9957081545064378, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9f51d2d9a1ea60bb6b4a24a93986c55d", "bug_code_uid": "d2209d25d9bb4d29842c9ce2e919f2b1", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "8bf1d93c206a5debb2371e28ab1612fd", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tchar a[100002];int b,i=0;\n\tscanf(\" %s\",&a);\n\twhile(a[i]!='\\0')\n\t{\n\t\ti++;\n\t\t\n\t}\n\tb=(int)a[--i]-48;\n\t\tc=(int)a[--i]-48;\n\t\tc=10*c+b;\n   if(c%4==0)\n   printf(\"4\\n\");\n   else\n    printf(\"0\\n\");\n   \n  \t\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tchar a[100002];int b,i=0,c;\n\tscanf(\" %s\",&a);\n\twhile(a[i]!='\\0')\n\t{\n\t\ti++;\n\t\t\n\t}\n\tb=(int)a[--i]-48;\n\t\tc=(int)a[--i]-48;\n\t\tc=10*c+b;\n   if(c%4==0)\n   printf(\"4\\n\");\n   else\n    printf(\"0\\n\");\n   \n  \t\n}\n"}
{"similarity_score": 0.5287739783152627, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "805b1c3610e9bc348686c8fde7857f97", "bug_code_uid": "b1d06a8f4cb3359e3335f2a5bb3b3d5b", "src_uid": "c547e32f114546638973e0f0dd16d1a4", "apr_id": "d1f34a5269706c574aa8471f328d9a4e", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint resp[32];\n\nint funca(int num){\n   int result=0;\n   while(num){\n        result += num%2;\n        num >> 1;\n   }\n   return result;\n}\n\nint func(int num){\n    \n    if(!num) return 0;\n    if(!(num%2)) return func(num/2);\n    return func(num/2)+1;\n\n}\n\nint main(){\n    int n, i,a, result,pares=0;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++){\n          scanf(\"%d\",&a);\n          result=func(a);\n          if(!resp[result])\n              resp[result]++;\n          else{\n              pares+=resp[result];\n              resp[result]++;\n\n          }\n    }\n    \n    printf(\"%d\\n\",pares);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nlong long int resp[32],pares=0;\n\nint funca(int num){\n   int result=0;\n   while(num){\n        result += num%2;\n        num >> 1;\n   }\n   return result;\n}\n\nint func(int num){\n    \n    if(!num) return 0;\n    if(!(num%2)) return func(num/2);\n    return func(num/2)+1;\n\n}\n\nint main(){\n    int n, i,a, result;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++){\n          scanf(\"%d\",&a);\n          result=func(a);\n          pares+=resp[result];\n          resp[result]++;\n          \n    }\n    \n    printf(\"%I64d\\n\",pares);\n    return 0;\n}\n"}
{"similarity_score": 0.9919484702093397, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "95cc7d613a33552465235d336137329f", "bug_code_uid": "043406195032f06a2e2b037bdb2174c5", "src_uid": "636a30a2b0038ee1731325a5fc2df73a", "apr_id": "5ede21bd459eceb20aa66b1b6fb185a4", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n/*N\u4ee3\u8868\u8981\u89e3\u51b3\u7684\u95ee\u9898\u7684\u4e2a\u6570*/\n#define N 5\nint max(int a,int b) {\n  if(a>b) return a;\n  else return b;\n}\nint main() {\n  int x[N],m[N],w[N],hs,hu;\n  /*x[i]\u8868\u793a\u7b2ci\u4e2a\u95ee\u9898\u7684\u6700\u9ad8\u5f97\u5206\n  m[i]\u8868\u793a\u89e3\u51b3\u7b2ci\u4e2a\u95ee\u9898\u82b1\u8d39\u7684\u65f6\u95f4\n  w[i]\u8868\u793a\u89e3\u51b3\u7b2ci\u4e2a\u95ee\u9898\u6d4b\u8bd5\u9519\u8bef\u7684\u6b21\u6570\n  hs=hack success\n  \u6d4b\u8bd5\u4ed6\u4eba\u4ee3\u7801\u9519\u8bef\u65f6\u6210\u529f\u7684\u6b21\u6570\n  hu=hack unsucess\n  \u6d4b\u8bd5\u4ed6\u4eba\u4ee3\u7801\u9519\u8bef\u65f6\u4e0d\u6210\u529f\u7684\u6b21\u6570\n  */\n  int i;\n  for(i=0;i<N;i++) {\n    scanf(\"%d\",&m[i]);\n  }\n  for(i=0;i<N;i++) {\n    scanf(\"%d\",&w[i]);\n  }\n  for(i=0;i<N;i++) {\n    x[i]=500*(i+1);\n  }\n  scanf(\"%d%d\",&hs,&hu);\n  int score=0;\n  for(i=0;i<N;i++) {\n    score+=max(x[i]/10*3,(250-m[i])*(x[i]/250));\n  }\n  score+=hs*100-hu*50;\n  printf(\"%d\\n\",score);\n  return 0;\n}\n}", "fixed": "#include<stdio.h>\n/*N\u4ee3\u8868\u8981\u89e3\u51b3\u7684\u95ee\u9898\u7684\u4e2a\u6570*/\n#define N 5\nint max(int a,int b) {\n  if(a>b) return a;\n  else return b;\n}\nint main() {\n  int x[N],m[N],w[N],hs,hu;\n  /*x[i]\u8868\u793a\u7b2ci\u4e2a\u95ee\u9898\u7684\u6700\u9ad8\u5f97\u5206\n  m[i]\u8868\u793a\u89e3\u51b3\u7b2ci\u4e2a\u95ee\u9898\u82b1\u8d39\u7684\u65f6\u95f4\n  w[i]\u8868\u793a\u89e3\u51b3\u7b2ci\u4e2a\u95ee\u9898\u6d4b\u8bd5\u9519\u8bef\u7684\u6b21\u6570\n  hs=hack success\n  \u6d4b\u8bd5\u4ed6\u4eba\u4ee3\u7801\u9519\u8bef\u65f6\u6210\u529f\u7684\u6b21\u6570\n  hu=hack unsucess\n  \u6d4b\u8bd5\u4ed6\u4eba\u4ee3\u7801\u9519\u8bef\u65f6\u4e0d\u6210\u529f\u7684\u6b21\u6570\n  */\n  int i;\n  for(i=0;i<N;i++) {\n    scanf(\"%d\",&m[i]);\n  }\n  for(i=0;i<N;i++) {\n    scanf(\"%d\",&w[i]);\n  }\n  for(i=0;i<N;i++) {\n    x[i]=500*(i+1);\n  }\n  scanf(\"%d%d\",&hs,&hu);\n  int score=0;\n  for(i=0;i<N;i++) {\n    score+=max(x[i]/10*3,(250-m[i])*(x[i]/250)-50*w[i]);\n  }\n  score+=hs*100-hu*50;\n  printf(\"%d\\n\",score);\n  return 0;\n}"}
{"similarity_score": 0.995774647887324, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "da47d9b5d88453ad599811d561bd0d75", "bug_code_uid": "a242b8c2d749dccfcfd2d62fdfd054b2", "src_uid": "98d9c44e460e141f062fcd6c345a4a1d", "apr_id": "7150cd8f3560ded37ea1a4a4ee4e0604", "difficulty": 1300, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    long int t,i,n,j;\r\n    scanf(\"%ld\",&t);\r\n    long long int *arr,max = 0,sum;\r\n    for(i = 0 ; i < t ; i++)\r\n    {\r\n        sum = 0;\r\n        scanf(\"%ld\",&n);\r\n        arr = (long long int *)malloc(n * sizeof(long long int));\r\n        for(j = 0 ; j < n ; j++)\r\n        {\r\n            scanf(\"%lld\",&arr[j]);\r\n            if(max < arr[j])\r\n                max = arr[j];\r\n            sum += arr[j];\r\n        }\r\n        if(sum == 0)\r\n            printf(\"%lld\\n\",0);\r\n        else\r\n            if(sum - max + 1 < max)\r\n                printf(\"%lld\\n\",2 * max - sum);\r\n            else\r\n                printf(\"%lld\\n\",1);\r\n        free(arr);\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    long int t,i,n,j;\r\n    scanf(\"%ld\",&t);\r\n    long long int *arr,max = 0,sum;\r\n    for(i = 0 ; i < t ; i++)\r\n    {\r\n        sum = max = 0;\r\n        scanf(\"%ld\",&n);\r\n        arr = (long long int *)malloc(n * sizeof(long long int));\r\n        for(j = 0 ; j < n ; j++)\r\n        {\r\n            scanf(\"%lld\",&arr[j]);\r\n            if(max < arr[j])\r\n                max = arr[j];\r\n            sum += arr[j];\r\n        }\r\n        if(sum == 0)\r\n            printf(\"%lld\\n\",0);\r\n        else\r\n            if(sum - max + 1 < max)\r\n                printf(\"%lld\\n\",2 * max - sum);\r\n            else\r\n                printf(\"%lld\\n\",1);\r\n        free(arr);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.3233256351039261, "equal_cnt": 20, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "674786fb6a94d7307617c82ba7141109", "bug_code_uid": "9478a338efd3447591327d838b5838b9", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "b41b245868712327f93c970487d5632f", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     long long  int k,a,b,count=0,i,flag;\n\n     scanf(\"%lld %lld %lld\",&k,&a,&b);\n\n    for(i=a;i<=b;i++)\n         {\n            if(i%k==0)\n               { \n                   flag=i;\n                    break;\n               }\n        }\n                    \n       for(i=flag;i<=b;i+=k)\n            {\n               count++;\n            } \n\n        printf(\"%lld\",count);\n\n\n\n\n return 0;\n}\n", "fixed": "#include<stdio.h>  \n\n \nint main()  \n{  \n    long long int k,a,b;  \n    scanf(\"%lld%lld%lld\",&k,&a,&b);\n    {  \n        long long int ans;  \n        if(a>0&&b>0)  \n        {  \n            ans=(b/k)-(a-1)/k;  \n        }  \n        else if(a<0&&b<0)  \n        {  \n            ans=-1*(a/k)+(b+1)/k;  \n        }  \n        else  \n        {  \n            ans=-1*(a/k)+(b/k)+1;  \n  \n        }  \n        printf(\"%lld\\n\",ans);  \n    }  \n    return 0;  \n}  \n"}
{"similarity_score": 0.5415959252971138, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "082c11d096891f0873593e89b81be3a7", "bug_code_uid": "ab4f073d97977007a28791889271e91d", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "f28d2bf8081083c548120404ce34cb53", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{  \r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\n   int a,b,c,x,ans;\r\n   scanf(\"%d\",&a);\r\n   scanf(\"%d\",&b);\r\n     scanf(\"%d\",&c);\r\n     if(a==b&&b==c&&c==a) printf(\"1 1 1\\n\");\r\nelse {\r\n     x= a>b?a : b;\r\n     ans=x>c?x:c;\r\n    if(ans>=a) printf(\"%d \",ans-a+1);\r\n    else printf(\"0 \");\r\n     if(ans>=b)  printf(\"%d \",ans-b+1);\r\n      else printf(\"0 \");\r\n       if(ans>=c) printf(\"%d \",ans-c+1);\r\n        else printf(\"0 \");} printf(\"\\n\");\r\n}\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n", "fixed": "\r\n#include <stdio.h>\r\n\r\nint main()\r\n{ int t;\r\nscanf(\"%d\",&t);\r\nwhile(t--){\r\n   int a,b,c,x,max,t=0;\r\n   scanf(\"%d\",&a);\r\n      scanf(\"%d\",&b);\r\n         scanf(\"%d\",&c);\r\n   x=a>b?a:b;\r\n   max=x>c?x:c;\r\n   if(a==max) t++;\r\n    if(b==max) t++;\r\n    if(c==max) t++;\r\n   if(t==3) printf(\"1 1 1\\n\");\r\n   else if(t==2){\r\n         printf(\"%d \",max-a+1);\r\n          printf(\"%d \",max-b+1);\r\n        printf(\"%d \",max-c+1);\r\n   } \r\n   else {\r\n       if(a!=max) printf(\"%d \",max-a+1);\r\n       else printf(\"0 \");\r\n       if(b!=max) printf(\"%d \",max-b+1);\r\n       else printf(\"0 \");\r\n       if(c!=max) printf(\"%d \",max-c+1);\r\n       else printf(\"0 \"); } printf(\"\\n\");\r\n   }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9441504997060552, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "599bc5faaf99b6387108a78888b7c866", "bug_code_uid": "e07142b96b4934e3a9f8c41d8b353c56", "src_uid": "0e162ea665732714283317e7c052e234", "apr_id": "b56f3608f7f274e04196016f9ec514b4", "difficulty": 1600, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string.h>\n#include <math.h>\nlong long int compfnc(const void  *a,const void *b)\n{\n    return(*(int *)a - *(int *)b);\n}\nint main()\n{\n    long long int n;\n    scanf(\"%I64d\",&n);\n    long long int a[n],i,a1=0,a3=0,j,x=0;\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n    if(n<4){\n        printf(\"0\");\n        return 0;\n    }\n    qsort(a,n,sizeof(long long int),compfnc);\n    for(i=n-1;i>=1;i--){\n        if(a[i]-a[i-1]==0 ||a[i]-a[i-1]==1 ){\n            a1= a[i-1];\n            for(j=i-2;j>=1;j--){\n                if(a[j]-a[j-1]==0 ||a[j]-a[j-1]==1){\n                    a3= a[j-1];\n                    break;\n                }\n            }\n            x+=a1*a3;\n            i=j-1;\n        }\n    }\n\n    printf(\"%I64d\",x);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string.h>\n#include <math.h>\nlong long int compfnc(const void  *a,const void *b)\n{\n    return(*(int *)a - *(int *)b);\n}\nint main()\n{\n    long long int n;\n    scanf(\"%I64d\",&n);\n    long long int a[n],i=n-1,a1=0,a3=0,j,x=0;\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n    if(n<4){\n        printf(\"0\");\n        return 0;\n    }\n    qsort(a,n,sizeof(long long int),compfnc);\n    while(i>=1){\n        a1=0;\n        a3=0;\n        if(a[i]-a[i-1]==0 ||a[i]-a[i-1]==1 ){\n            a1= a[i-1];\n            for(j=i-2;j>=1;j--){\n                if(a[j]-a[j-1]==0 ||a[j]-a[j-1]==1){\n                    a3= a[j-1];\n                    break;\n                }\n            }\n            x+=a1*a3;\n            i=j-2;\n        }\n        else{\n            i--;\n        }\n    }\n\n    printf(\"%I64d\",x);\n\n    return 0;\n}"}
{"similarity_score": 0.9883720930232558, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8f1e1a3a9886e090ff344a18d8cde6cf", "bug_code_uid": "2dc573222f566f659f960c59cf4f1a1b", "src_uid": "2fa3e88688b92c27ad26a23884e26009", "apr_id": "928064008d5cfa2083cca63c334fef65", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,t;\n    scanf(\"%d\", &t);\n    for(i=0; i<t; i++)\n    {\n        int x;\n        scanf(\"%d\", &x);\n        printf(\"1 %d\", x-1);\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,t;\n    scanf(\"%d\", &t);\n    for(i=0; i<t; i++)\n    {\n        int x;\n        scanf(\"%d\", &x);\n        printf(\"1 %d\\n\", x-1);\n    }\n}\n\n"}
{"similarity_score": 0.9962335216572504, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "901811dca0b79e56df89099e5a404508", "bug_code_uid": "719968e0ad865e755bf62ee17fa48f34", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "03069748c40668ce48045d69abfc2d00", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <windows.h>\n#include <string.h>\n#include <ctype.h>\n#include <conio.h>\n#include <math.h>\n#include <time.h>\n\nint main()\n{\n\tint n = 0;\n\tscanf(\"%d\",&n);\n\tint temp = 0;\n\tint sum0 = 0, sum1 = 0, sum2 = 0;\n\tfor ( int i = 0 ; i < n ; i++ )\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tsum0 += t1;\n\t}\n\tfor ( int i = 0 ; i < n - 1; i++ )\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tsum1 += temp;\n\t}\n\tfor ( int i = 0 ; i < n - 2; i++ )\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tsum2 += temp;\n\t}\n\tprintf(\"%d\\n%d\",sum0-sum1,sum1-sum2);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <windows.h>\n#include <string.h>\n#include <ctype.h>\n#include <conio.h>\n#include <math.h>\n#include <time.h>\n\nint main()\n{\n\tint n = 0;\n\tscanf(\"%d\",&n);\n\tint temp = 0;\n\tint sum0 = 0, sum1 = 0, sum2 = 0;\n\tfor ( int i = 0 ; i < n ; i++ )\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tsum0 += temp;\n\t}\n\tfor ( int i = 0 ; i < n - 1; i++ )\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tsum1 += temp;\n\t}\n\tfor ( int i = 0 ; i < n - 2; i++ )\n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tsum2 += temp;\n\t}\n\tprintf(\"%d\\n%d\",sum0-sum1,sum1-sum2);\n\treturn 0;\n}"}
{"similarity_score": 0.9345238095238095, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "90d387bbea3b66c254223a91067a6b48", "bug_code_uid": "a5456034988243fe6a441fb5f89542c9", "src_uid": "a26e048eb9b18f87f1703d42e172f318", "apr_id": "111503da06a28f168a1de8c3584fa313", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint isSortedUpTo(int a[], int n){\n\tint i;\n\n\tfor (i = 1; i < n; i++)\n\t\tif (a[i - 1] >= a[i])\n\t\t\treturn i;\n\t\n\treturn i;\n}\n\nint find(int x, int a[], int n){\n\tint i;\n\n\tfor (i = 0; i < n; i++)\n\t\tif (a[i] == x)\n\t\t\treturn i;\n\n\treturn -1;\n}\n\nint main(){\n\n\tint i, n, sortedUpTo;\n\tint permutation[200000];\n\tint target[200000];\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &permutation[i]);\n\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &target[i]);\n\n\tfor (i = 0; i < n; i++)\n\t\tpermutation[i] = find(permutation[i], target, n);\n\n\tsortedUpTo = isSortedUpTo(permutation, n);\n\n\tprintf(\"%d\\n\", n - sortedUpTo);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint isSortedUpTo(int a[], int n){\n\tint i;\n\n\tfor (i = 1; i < n; i++)\n\t\tif (a[i - 1] >= a[i])\n\t\t\treturn i;\n\t\n\treturn i;\n}\n\nint find(int x, int a[], int n){\n\tint i;\n\n\tfor (i = 0; i < n; i++)\n\t\tif (a[i] == x)\n\t\t\treturn i;\n\n\treturn -1;\n}\n\nint main(){\n\n\tint i, n, sortedUpTo;\n\tint permutation[200000], posicaoCerta[200000];\n\tint target[200000];\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &permutation[i]);\n\n\tfor (i = 0; i < n; i++){\n\t\tscanf(\"%d\", &target[i]);\n\t\tposicaoCerta[target[i]] = i;\n\t}\n\n\tfor (i = 0; i < n; i++)\n\t\tpermutation[i] = posicaoCerta[permutation[i]];\n\n\tsortedUpTo = isSortedUpTo(permutation, n);\n\n\tprintf(\"%d\\n\", n - sortedUpTo);\n}"}
{"similarity_score": 0.3893805309734513, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "009ccb2fc262dd97ccada756aff97b8d", "bug_code_uid": "d449da9cefc582bad6e49522730b8e62", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "dc3e76d9a9f674fb372b9523898332f0", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\nint main()\n{\n    long long Arr[10001];\n    int i, n, _count = 0, ans = 0;\n    scanf( \"%d\", &n );\n    for( i = 0; i < n; i ++ )\n        scanf( \"%I64d\", &Arr[i] );\n    for( i = 0; i < n; i ++ )\n    {\n        if( Arr[i] <= Arr[ i + 1 ])\n        {\n            _count ++;\n            ans = _count >= ans ? _count : ans;\n        }\n        else\n            _count = 0;\n    }\n    printf( \"%d\", ans + 1 );\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\nint main()\n{\n    long long Arr;\n    int i, n, _count, ans, tmp;\n    while(~scanf( \"%d\", &n ))\n    {\n\n        _count = 0, ans = 0, tmp = 0;\n        for( i = 0; i < n; i ++ )\n        {\n            scanf( \"%I64d\", &Arr );\n            if( tmp <= Arr )\n            {\n                _count ++;\n\n            }\n            else\n                _count = 1;\n            tmp = Arr;\n            ans = _count >= ans ? _count : ans;\n        }\n\n        //printf( \"%d\", ans + 1 );\n        printf( \"%d\\n\", ans );\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9713774597495528, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1c1ad89d4bc8813f01fa2a85810278be", "bug_code_uid": "f4ae1c7a8faa4747fca12a8fbb9bb5fb", "src_uid": "1a22bc82ddf6b3dfbf270bc5e3294c28", "apr_id": "c0e16704129d64030279ab87ae145554", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,count=0,a[100000],a2[100000],k=0;\n    long long int sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum=sum+a[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if((sum-a[i])/(n-1)==a[i] &&(sum-a[i])%(n-1)==0 )\n        {\n            count++;\n            a2[k]=i+1;\n            k++;\n        }\n    }\n    if(count==0)\n    {\n        printf(\"0\");\n    }\n    else\n    {\n        printf(\"%d\\n\",count);\n        for(i=0;i<k;i++)\n        {\n            printf(\"%d \",a2[i]);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,count=0,a[200005],a2[200005],k=0;\n    long long int sum=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum=sum+a[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if((sum-a[i])/(n-1)==a[i] &&(sum-a[i])%(n-1)==0 )\n        {\n            count++;\n            a2[k]=i+1;\n            k++;\n        }\n    }\n    if(count==0)\n    {\n        printf(\"0\");\n    }\n    else\n    {\n        printf(\"%d\\n\",count);\n        for(i=0;i<k;i++)\n        {\n            printf(\"%d \",a2[i]);\n        }\n    }\n}\n"}
{"similarity_score": 0.9958333333333333, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "19b34d34aa7c763c94e9bb6edc55deb2", "bug_code_uid": "341327aaac45c928081f41586c2560d9", "src_uid": "206eb67987088843ef42923b0c3939d4", "apr_id": "e3ad3a286fe25db2a6eec294aa820f9c", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a,b,n,p,i,j;\nint main(){\n    j=1;\nscanf(\"%d%d%d\",&a,&b,&n);\nfor(i=1;i<10;i++){\nif((a*10+i)%b==0){break;}\n}\nif(i==10){printf(\"-1\\n\");}\nelse{\n    printf(\"%d\",a*10+i);\n    for(i=1;i<n;i++){printf(\"0\");}\n    }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint a,b,n,p,i,j;\nint main(){\n    j=1;\nscanf(\"%d%d%d\",&a,&b,&n);\nfor(i=0;i<10;i++){\nif((a*10+i)%b==0){break;}\n}\nif(i==10){printf(\"-1\\n\");}\nelse{\n    printf(\"%d\",a*10+i);\n    for(i=1;i<n;i++){printf(\"0\");}\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.7271028037383177, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "01ad41501633072f2e5b16e0b20723da", "bug_code_uid": "1352fd60a6576ad4c6922e969464e2af", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "322a4a7c621eec41e59b32ebf27ea8dc", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n\n/*\n * \n */\nint main(int argc, char** argv) {\n    int i, j, n, check = 0;\n    scanf(\"%d\", &n);\n    int a[n][2];\n    for (i = 0; i < n; i++) {\n        scanf(\"%d%d\", &a[i][0], &a[i][1]);\n    }\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if ((a[j][0] < a[i][0] && a[j][1] > a[i][1])\n                    || (a[j][0] > a[i][0] && a[j][1] < a[i][1])) {\n                check = 1;\n                break;\n            }\n        }\n    }\n    if (check == 1) {\n        printf(\"Happy Alex\");\n    } else {\n        printf(\"Poor Alex\");\n    }\n    return (EXIT_SUCCESS);\n}\n\n", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n\n/*\n * \n */\nint main(int argc, char** argv) {\n    int i, j, n, x, check = 0;\n    scanf(\"%d\", &n);\n    int a[n][2], k = n - 1;\n    for (i = 0; i < n; i++) {\n        scanf(\"%d%d\", &a[i][0], &a[i][1]);\n        if (a[i][0] != a[i][1]) {\n            check = 1;\n        }\n    }\n    if (check == 1) {\n        printf(\"Happy Alex\");\n    } else {\n        printf(\"Poor Alex\");\n    }\n    return (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.49364791288566245, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3645f15f6eafa11c983b81ed88e6e577", "bug_code_uid": "201d579bdfd8176a906e4bba22dce7ba", "src_uid": "8864c6a04fed970fcbc04e220df9d88d", "apr_id": "ce778c8ff863665809c0d368d4820158", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x==y)\n\t\tprintf(\"%d\\n\",2*x);\n\t\telse if(x>y&&y==0)\n\t\tprintf(\"%d\\n\",x+(x-1));\n\t\telse if(y>x&&x==0)\n\t\tprintf(\"%d\\n\",y+(y-1));\n\t\telse if(x>y)\n\t\tprintf(\"%d\\n\",x+(x-y));\n\t\telse if(y>x)\n\t\tprintf(\"%d\\n\",x+y);\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint x,y,result;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(y>x)\n\t\tresult=(x+y)+(y-x)-1;\n\t\telse if(x>y)\n\t\tresult=(x+y)+(x-y)-1;\n\t\telse\n\t\tresult=(x+y);\n\t\tprintf(\"%d\\n\",result);\n\t}\n}"}
{"similarity_score": 0.900523560209424, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "5f57b0e1efcef002debfd40293addc16", "bug_code_uid": "e7ff3da8098ac53280ff0fbaf92d58cb", "src_uid": "36fb3a01860ef0cc2a1065d78e4efbd5", "apr_id": "24c9ed3688134cc66965ed84f16c79e7", "difficulty": 1500, "tags": ["brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main( void ) {\n    char pattern[ 300003 ], text[ 100001 ];\n    int i, j, n, plen, tlen;\n\n    scanf( \"%d\", &n );\n\n    pattern[ 0 ] = '<';\n    pattern[ 1 ] = '3';\n    while ( n-- ) {\n        scanf( \"%s\", text );\n        strcat( pattern, text );\n        pattern[ strlen( pattern ) ] = '<';\n        pattern[ strlen( pattern ) ] = '3';\n    }\n    plen = strlen( pattern );\n\n    scanf( \"%s\", text );\n    tlen = strlen( text );\n\n    i = j = 0;\n    while ( 1 ) {\n        if ( i == plen ) {\n            puts( \"yes\" );\n            break;\n        }\n\n        if ( j == tlen ) {\n            puts( \"no\" );\n            break;\n        }\n\n        if ( pattern[ i ] == text[ j ] )\n            i++;\n\n        j++;\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main( void ) {\n    char pattern[ 300003 ], text[ 100001 ];\n    int i, j, n, off, plen, tlen;\n\n    scanf( \"%d\", &n );\n\n    pattern[ 0 ] = '<';\n    pattern[ 1 ] = '3';\n    off = 2;\n    while ( n-- ) {\n        scanf( \"%s\", pattern + off );\n        off += strlen( pattern + off );\n        pattern[ off++ ] = '<';\n        pattern[ off++ ] = '3';\n    }\n    plen = strlen( pattern );\n\n    scanf( \"%s\", text );\n    tlen = strlen( text );\n\n    i = j = 0;\n    while ( 1 ) {\n        if ( i == plen ) {\n            puts( \"yes\" );\n            break;\n        }\n\n        if ( j == tlen ) {\n            puts( \"no\" );\n            break;\n        }\n\n        if ( pattern[ i ] == text[ j ] )\n            i++;\n\n        j++;\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9205607476635514, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "41194e9ceea759c46e925052fe2f2af0", "bug_code_uid": "fc77efde0e62bbf7fe064db75f557098", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "565c6a79572420d12c3f00c5b53b1e3b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint i, j, n;\n\tchar s[500][500];\n\n\tscanf(\"%d\\n\", &n);\n\tfor (i = 0; i < n; ++i)\n\t\tgets(s[i]);\n\n\tfor (i = 0; i < n; ++i)\n\t\tfor (j = 0; j < n; ++j)\n\t\t\tif (j == i || j == n - 1 - i) {\n\t\t\t\tif (s[i][j] != s[0][0]) {\n\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (s[i][j] != s[0][1]) {\n\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\tputs(\"YES\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint i, j, n;\n\tchar s[500][500];\n\n\tscanf(\"%d\\n\", &n);\n\tfor (i = 0; i < n; ++i)\n\t\tgets(s[i]);\n\n\tif (s[0][0] == s[0][1]) {\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\n\tfor (i = 0; i < n; ++i) {\n\t\tfor (j = 0; j < n; ++j) {\n\t\t\tif (j == i || j == n - 1 - i) {\n\t\t\t\tif (s[i][j] != s[0][0]) {\n\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (s[i][j] != s[0][1]) {\n\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tputs(\"YES\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9932432432432432, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c96db19d3b4a28556341472f3c006a06", "bug_code_uid": "301ecad9af6e69c9ecaef27e4974456b", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "5087d696ce3adbd8cf2c8b700192b51d", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(int i=1;i=<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    int count=0,ans=0;int ind,in;\n    for(int i=1;i<=n;i++){\n        if(a[i]%2==0){\n            count++;\n            ind=i;\n        }\n        else{\n            ans++;\n            in=i;\n        }\n    }\n    if(count==1){\n        printf(\"%d\\n\",ind);\n    }\n    else if(ans==1){\n        printf(\"%d\\n\",in);\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int a[100];\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    int count=0,ans=0;int ind,in;\n    for(int i=1;i<=n;i++){\n        if(a[i]%2==0){\n            count++;\n            ind=i;\n        }\n        else{\n            ans++;\n            in=i;\n        }\n    }\n    if(count==1){\n        printf(\"%d\\n\",ind);\n    }\n    else if(ans==1){\n        printf(\"%d\\n\",in);\n    }\n}"}
{"similarity_score": 0.9779688339602365, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9f2d1ab3c03e6eacc8dcd2433c7e1100", "bug_code_uid": "b3e2f4ac72d437b493ba289fc4da4e64", "src_uid": "7896740b6f35010af751d3261b5ef718", "apr_id": "0913284ff3300b673e28e6f6d8ec5fe7", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <limits.h>\n\n#define REP(i, a, b) for((i) = (a) ; i < (b) ; i++)\n\n\n\nint main() {\n//\tfreopen(\"input.in\", \"r\", stdin);\n\tint n, i;\n\tscanf(\"%d\", &n);\n\tint spaces = n*2, til = 0, j;\n\twhile(spaces > 0) {\n\t\tREP(i, 0, spaces) printf(\" \");\n\t\tREP(j, 0, til+1) {\n\t\t\tprintf(\"%d\", j);\n\t\t\tif(til) printf(\" \");\n\t\t}\n\t\tfor(j = til-1 ; j > -1 ; j--) {\n\t\t\tprintf(\"%d\", j);\n\t\t\tif(j != 0) printf(\" \");\n\t\t}\n\t\ttil++;\n\t\tspaces -= 2;\n\t\tprintf(\"\\n\");\n\t}\n\tREP(j, 0, til+1) printf(\"%d \", j);\n\tfor(j = til-1 ; j > -1 ; j--) printf(\"%d \", j);\n\tprintf(\"\\n\");\n\tspaces = 2;\n\ttil = n-1;\n\twhile(spaces <= n*2) {\n\t\tREP(i, 0, spaces) printf(\" \");\n\t\tREP(j, 0, til+1) {\n\t\t\tprintf(\"%d\", j);\n\t\t\tif(til) printf(\" \");\n\t\t}\n\t\tfor(j = til-1 ; j > -1 ; j--) {\n\t\t\tprintf(\"%d\", j);\n\t\t\tif(j != 0) printf(\" \");\n\t\t}\n\t\ttil--;\n\t\tspaces += 2;\n\t\tif(til >= 0)printf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <limits.h>\n\n#define REP(i, a, b) for((i) = (a) ; i < (b) ; i++)\n\n\n\nint main() {\n//\tfreopen(\"input.in\", \"r\", stdin);\n\tint n, i;\n\tscanf(\"%d\", &n);\n\tint spaces = n*2, til = 0, j;\n\twhile(spaces > 0) {\n\t\tREP(i, 0, spaces) printf(\" \");\n\t\tREP(j, 0, til+1) {\n\t\t\tprintf(\"%d\", j);\n\t\t\tif(til) printf(\" \");\n\t\t}\n\t\tfor(j = til-1 ; j > -1 ; j--) {\n\t\t\tprintf(\"%d\", j);\n\t\t\tif(j != 0) printf(\" \");\n\t\t}\n\t\ttil++;\n\t\tspaces -= 2;\n\t\tprintf(\"\\n\");\n\t}\n\tREP(j, 0, til+1) printf(\"%d \", j);\n\tfor(j = til-1 ; j > -1 ; j--) {\n\t\tprintf(\"%d\", j);\n\t\tif(j) printf(\" \");\n\t}\n\tprintf(\"\\n\");\n\tspaces = 2;\n\ttil = n-1;\n\twhile(spaces <= n*2) {\n\t\tREP(i, 0, spaces) printf(\" \");\n\t\tREP(j, 0, til+1) {\n\t\t\tprintf(\"%d\", j);\n\t\t\tif(til) printf(\" \");\n\t\t}\n\t\tfor(j = til-1 ; j > -1 ; j--) {\n\t\t\tprintf(\"%d\", j);\n\t\t\tif(j != 0) printf(\" \");\n\t\t}\n\t\ttil--;\n\t\tspaces += 2;\n\t\tif(til >= 0)printf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9969230769230769, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "eb75651e4ac906829ecf5ca7afdcc919", "bug_code_uid": "1fbf96b8a486318d6c2bf384945b274d", "src_uid": "77e2a6ba510987ed514fed3bd547b5ab", "apr_id": "13addde9d37fde5eccf846568823b9c8", "difficulty": 1100, "tags": ["implementation", "sortings", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char in[10001], out[10001];\n    int i, n, m;\n    gets(in);\n    n = strlen(in);\n    m = 9999;\n    out[10000] = '\\0';\n    out[m] = in[n - 1];\n    for (i = n - 2; i >= 0; --i)\n        if (in[i] >= out[m])\n            out[--m] = in[i];\n    puts(out + m);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char in[100010], out[100010];\n    int i, n, m;\n    gets(in);\n    n = strlen(in);\n    m = 9999;\n    out[10000] = '\\0';\n    out[m] = in[n - 1];\n    for (i = n - 2; i >= 0; --i)\n        if (in[i] >= out[m])\n            out[--m] = in[i];\n    puts(out + m);\n    return 0;\n}\n"}
{"similarity_score": 0.9953775038520801, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6f47036e4846d9aeeb207b5db742ff84", "bug_code_uid": "42c940ef60b1e13a688ec2b0e9d33e62", "src_uid": "5e449867d9fcecc84333b81eac9b5d92", "apr_id": "8e7727b5834d96e27b421594bddb33b2", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint hash[4000];\n\nint main()\n{\n    int n,got,i;\n    scanf(\"%d\",&n);\n    hash[0]=1;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&got);\n        hash[got]=1;\n    }\n    for(i=0;i<=n;i++)\n    {\n        if(hash[i]==0)\n        {\n            printf(\"%d\\n\",i);\n            break;\n        }\n    }\n    return(0);\n}\n", "fixed": "#include<stdio.h>\n\nint hash[4000];\n\nint main()\n{\n    int n,got,i;\n    scanf(\"%d\",&n);\n    hash[0]=1;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&got);\n        hash[got]=1;\n    }\n    for(i=0;i<=n+1;i++)\n    {\n        if(hash[i]==0)\n        {\n            printf(\"%d\\n\",i);\n            break;\n        }\n    }\n    return(0);\n}"}
{"similarity_score": 0.9936305732484076, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "35348c26198477d3d365082d8a1fdf04", "bug_code_uid": "3fba375d4f2d7e4f7ef83cc1008834fc", "src_uid": "7eff98fbcf4e4a3284e2d2f98351fe4a", "apr_id": "60c916ea1f3b767971f1843e8abff58e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint b = 0, p = 0, g = 0, o = 0, r = 0, y = 0, i, n;\n\tscanf(\"%d\", &n);\n\tchar str[1001];\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%s\", str);\n\t\tif(strcmp(str, \"blue\") == 0)\n\t\t{\n\t\t\tb++;\n\t\t}\n\t\tif(strcmp(str, \"purple\") == 0)\n\t\t{\n\t\t\tp++;\n\t\t}\n\t\tif(strcmp(str, \"green\") == 0)\n\t\t{\n\t\t\tg++;\n\t\t}\n\t\tif(strcmp(str, \"orange\") == 0)\n\t\t{\n\t\t\to++;\n\t\t}\n\t\tif(strcmp(str, \"red\") == 0)\n\t\t{\n\t\t\tr++;\n\t\t}\n\t\tif(strcmp(str, \"yellow\") == 0)\n\t\t{\n\t\t\ty++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", 6-n);\n\tif(b == 0)\n\t{\n\t\tprintf(\"Space\\n\");\n\t}\n\tif(p == 0)\n\t{\n\t\tprintf(\"Purple\\n\");\n\t}\n\tif(g == 0)\n\t{\n\t\tprintf(\"Time\\n\");\n\t}\n\tif(o == 0)\n\t{\n\t\tprintf(\"Soul\\n\");\n\t}\n\tif(r == 0)\n\t{\n\t\tprintf(\"Reality\\n\");\n\t}\n\tif(y == 0)\n\t{\n\t\tprintf(\"Mind\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint b = 0, p = 0, g = 0, o = 0, r = 0, y = 0, i, n;\n\tscanf(\"%d\", &n);\n\tchar str[1001];\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%s\", &str);\n\t\tif(strcmp(str, \"blue\") == 0)\n\t\t{\n\t\t\tb++;\n\t\t}\n\t\tif(strcmp(str, \"purple\") == 0)\n\t\t{\n\t\t\tp++;\n\t\t}\n\t\tif(strcmp(str, \"green\") == 0)\n\t\t{\n\t\t\tg++;\n\t\t}\n\t\tif(strcmp(str, \"orange\") == 0)\n\t\t{\n\t\t\to++;\n\t\t}\n\t\tif(strcmp(str, \"red\") == 0)\n\t\t{\n\t\t\tr++;\n\t\t}\n\t\tif(strcmp(str, \"yellow\") == 0)\n\t\t{\n\t\t\ty++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", 6-n);\n\tif(b == 0)\n\t{\n\t\tprintf(\"Space\\n\");\n\t}\n\tif(p == 0)\n\t{\n\t\tprintf(\"Power\\n\");\n\t}\n\tif(g == 0)\n\t{\n\t\tprintf(\"Time\\n\");\n\t}\n\tif(o == 0)\n\t{\n\t\tprintf(\"Soul\\n\");\n\t}\n\tif(r == 0)\n\t{\n\t\tprintf(\"Reality\\n\");\n\t}\n\tif(y == 0)\n\t{\n\t\tprintf(\"Mind\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9969558599695586, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0aad3ad5c65fd6b2e14389885c21cad4", "bug_code_uid": "de2b36d90ee7c7c19462af699382df43", "src_uid": "75d500bad37fbd2c5456a942bde09cd3", "apr_id": "bed4123fbaabe9487656af402a3b3a16", "difficulty": 1100, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define max(a, b) a>b ? a : b\n#define min(a, b) a<b ? a : b\n\nint main(void) {\n    int m[367], f[367], ans;\n    int n;\n    int a, b;\n    int i;\n    char letter;\n\n    scanf(\"%d%*c\", &n);\n    // fill m and n with 0s\n    for(i=0; i<=366; i++)\n        f[i] = m[i] = 0;\n\n    while(n--) {\n        scanf(\"%c%*c%d%*c%d%*c\", &letter, &a, &b);\n\n        if(letter == 'M')\n            for(i=a; i<=b; i++)\n                m[i]++;\n        else // letter == 'F'\n            for(i=a; i<=b; i++)\n                f[i]++;\n    }\n\n    for(ans=i=0; i<=366; i++)\n        ans = max(ans, min(m[i], f[i]));\n    ans *= 2;\n\n    printf(\"%d\\n\", ans);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#define max(a, b) (a>b ? a : b)\n#define min(a, b) (a<b ? a : b)\n\nint main(void) {\n    int m[367], f[367], ans;\n    int n;\n    int a, b;\n    int i;\n    char letter;\n\n    scanf(\"%d%*c\", &n);\n    // fill m and n with 0s\n    for(i=0; i<=366; i++)\n        f[i] = m[i] = 0;\n\n    while(n--) {\n        scanf(\"%c%*c%d%*c%d%*c\", &letter, &a, &b);\n\n        if(letter == 'M')\n            for(i=a; i<=b; i++)\n                m[i]++;\n        else // letter == 'F'\n            for(i=a; i<=b; i++)\n                f[i]++;\n    }\n\n    for(ans=i=0; i<=366; i++)\n        ans = max(ans, min(m[i], f[i]));\n    ans *= 2;\n\n    printf(\"%d\\n\", ans);\n\n    return 0;\n}"}
{"similarity_score": 0.8724233983286908, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "6a4daa71d9451cb1c52a663e88a6fc68", "bug_code_uid": "9662fb2cd078a1bf62eb5af8689843e9", "src_uid": "f8d064c90f1f2b4a18386795dbcd9cb9", "apr_id": "192d60f386a6137fa8af4af8b0a29f86", "difficulty": null, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tlong long int n,n2,  a[40], num[40], y=0;\n\t\tlong long int anum=0;\n\t\tscanf(\"%lld\", &n);\n\t\tn2=n;\n\t\tfor(long long int i=0; i<40; ++i){\n\t\t\ta[i]=0;\n\t\t\tnum[i]=0;\n\t\t}\n\t\twhile(n%2==0){\n\t\t\tnum[anum]=2;\n\t\t\tn/=2;\n\t\t\ta[anum]++;\n\t\t\ty=1;\n\t\t}\n\t\tif(y==1){\n\t\t\tanum++;\n\t\t\ty=0;\n\t\t}\n\t\tint goal = sqrt(n/2+1);\t\t\t\t\n\t\tfor(long long int i=3; i<goal; i+=2){\n\t\t\tif(n%(i^2) == 0){\n\t\t\t\tnum[anum]=i;\n\t\t\t\twhile(n%i==0){\n\t\t\t\t\tn/=i;\n\t\t\t\t\ta[anum]++;\n\t\t\t\t}\n\t\t\t\tanum++;\n\t\t\t}\t\t\t\n\t\t\t\n\t\t}\n\t\tlong long int big=1, g=0;\n\t\tfor(long long int i=0; i<anum; ++i){\n\t\t\tif(a[i]>big){\n\t\t\t\tbig=a[i];\n\t\t\t\tg=num[i];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\", big);\n\t\tfor(long long int i=1; i<big; ++i){\n\t\t\tprintf(\"%lld \", g);\n\t\t\tn2/=g;\n\t\t}\n\t\tprintf(\"%lld\\n\", n2);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main(){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tlong long int n, n2, a[40], num[40], y=0;\n\t\tlong long int anum=0;\n\t\tscanf(\"%lld\", &n);\n\t\tn2=n;\n\t\tfor(long long int i=0; i<40; ++i){\n\t\t\ta[i]=0;\n\t\t\tnum[i]=0;\n\t\t}\n\t\twhile(n%2==0){\n\t\t\tnum[anum]=2;\n\t\t\tn/=2;\n\t\t\ta[anum]++;\n\t\t\ty=1;\n\t\t}\n\t\tif(y==1){\n\t\t\tanum++;\n\t\t\ty=0;\n\t\t}\n\t\tlong long int goal = sqrt(n)+2;\t\t\t\t\n\t\tfor(long long int i=3; i<goal; i+=2){\n\t\t\tif(n%(i*i) == 0){\n\t\t\t\tnum[anum]=i;\n\t\t\t\twhile((n%i) == 0){\n\t\t\t\t\tn/=i;\n\t\t\t\t\t//printf(\"\ufffdO%lld\ufffd\ufffd\ufffd]\ufffd\ufffd, n\ufffd\ufffd%lld\\n\", i*i, n);\n\t\t\t\t\ta[anum]++;\n\t\t\t\t}\n\t\t\t\tanum++;\n\t\t\t\t//printf(\"\ufffd\ufffd\ufffd\ufffd\ufffdAn\ufffd\ufffd%lld\\n\", n);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//printf(\"\ufffd\ufffd\ufffdO%lld\ufffd\ufffd\ufffd]\ufffd\ufffd\\n\", i*i);\n\t\t\t}\t\t\t\n\t\t\t\n\t\t}\n\t\tlong long int big=1, g=0;\n\t\tfor(long long int i=0; i<anum; ++i){\n\t\t\tif(a[i]>big){\n\t\t\t\tbig=a[i];\n\t\t\t\tg=num[i];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\", big);\n\t\tfor(long long int i=1; i<big; ++i){\n\t\t\tprintf(\"%lld \", g);\n\t\t\tn2/=g;\n\t\t}\n\t\tprintf(\"%lld\\n\", n2);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9762532981530343, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5b9dda1ad6ed01a60f39f6afef62b40b", "bug_code_uid": "352de140f00b413eca21c1bf5164b5c8", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "63ffc9d9b82efe7c7f50ecd81cccf44f", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n\nint main(void)\n{\n  long n, m, i, a, a_pr = 1, tim = 0;\n  char c;\n  scanf(\"%ld %ld\\n\", &n, &m);\n  for(i = 0; i < m; i++) {\n    a = 0;\n    while(isdigit(c = getchar()))\n      a = a * 10 + c - '0';\n    if (a < a_pr) tim += n - a_pr + a;\n    else tim += a - a_pr;\n    a_pr = a;\n  }\n  printf(\"%ld\", tim);\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <ctype.h>\n#include <stdlib.h>\n\nint main(void)\n{\n  long n, m, i, a, a_pr = 1;\n  long long tim = 0;\n  char c;\n  scanf(\"%ld %ld\\n\", &n, &m);\n  for(i = 0; i < m; i++) {\n    a = 0;\n    while(isdigit(c = getchar()))\n      a = a * 10 + c - '0';\n    if (a < a_pr) tim += n - a_pr + a;\n    else tim += a - a_pr;\n    a_pr = a;\n  }\n  printf(\"%I64d\", tim);\n  return 0;\n}"}
{"similarity_score": 0.9966239027683997, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a937b3782737ccf3705e261ad1faa0fd", "bug_code_uid": "d43a7f4d6122cdddfa2262054d3c78a7", "src_uid": "c4da69789d875853beb4f92147825ebf", "apr_id": "df3fccbbe5ec0f861e3668ce6b2a13cf", "difficulty": 1300, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 100\n\n\nint main(){\n    \n\tchar texto[MAX],ch;\n\tint i,j,k,cont,p,q,x,y,aux,tam,qnt;\n\tint pares[tam];\n\tscanf(\"%d %d %d \",&tam,&p,&q);\n\tfor (i=0; i < tam;i++)\n\t{\t\t\t\t\n\t\tscanf(\"%c\",&texto[i]);\t\n\t}\n\n\t//Verificar como pode ser quebrado\n\tk=0;\n\tfor (i=0; i<tam; i++) {\n\t\tfor (j=0;j<tam;j++) {\n\t\t\tif (p*i + q*j == tam){\n\t\t\t\tx = i;\n\t\t\t\ty = j; // achei!\n\t\t\t\tk=1; //controlador de verificacao\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (k == 0) {\n\t\tprintf(\"-1\\n\");\n\t\treturn -1;\n\n\t}\n\t\n\tprintf(\"%d\\n\",x+y);\n\n\t//imprimir cortado\n\tj=0;\n\n\twhile(x>0) {\t\n\t\tfor(i=0;i<p;i++){\n\t\t\tprintf(\"%c\",texto[j]);\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tx--;\n\t}\n\n\twhile(y>0) {\n\t\tfor (i=0;i<q;i++) {\n\t\t\tprintf(\"%c\",texto[j]);\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"\\n\");\n\t\ty--;\n\t}\n\t\n\treturn 0;\t\n}\n", "fixed": "#include <stdio.h>\n#define MAX 100\n\n\nint main(){\n    \n\tchar texto[MAX],ch;\n\tint i,j,k,cont,p,q,x,y,aux,tam,qnt;\n\tint pares[tam];\n\tscanf(\"%d %d %d \",&tam,&p,&q);\n\tfor (i=0; i < tam;i++)\n\t{\t\t\t\t\n\t\tscanf(\"%c\",&texto[i]);\t\n\t}\n\n\t//Verificar como pode ser quebrado\n\tk=0;\n\tfor (i=0; i<=tam; i++) {\n\t\tfor (j=0;j<=tam;j++) {\n\t\t\tif (p*i + q*j == tam){\n\t\t\t\tx = i;\n\t\t\t\ty = j; // achei!\n\t\t\t\tk=1; //controlador de verificacao\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (k == 0) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\n\t}\n\t\n\tprintf(\"%d\\n\",x+y);\n\n\t//imprimir cortado\n\tj=0;\n\n\twhile(x>0) {\t\n\t\tfor(i=0;i<p;i++){\n\t\t\tprintf(\"%c\",texto[j]);\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tx--;\n\t}\n\n\twhile(y>0) {\n\t\tfor (i=0;i<q;i++) {\n\t\t\tprintf(\"%c\",texto[j]);\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"\\n\");\n\t\ty--;\n\t}\n\t\n\treturn 0;\t\n}\n"}
{"similarity_score": 0.9912954429083461, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d9265e100e973962fafc468f86047bea", "bug_code_uid": "df17e665eeda6ac6f50ae562aea43a0f", "src_uid": "7c2a61de728e6767b25e58c74497bbae", "apr_id": "cb7d5674ed93935ef7a5a0a25cac4068", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> \nvoid changer(int*,int,int);\nint main()\n{\n\tint numtests;\n\tscanf(\"%d\", &numtests);\n\tint tests = 0;\n\twhile(tests < numtests){\n\t\tint num, max, mark;\n\t\tint* stud;\n\t\tscanf(\"%d %d\", &num, &max);\n\t\tint i = 0;\n\t\twhile(i < num){\n\t\t\tscanf(\"%d\",&mark);\n\t\t\tstud[i] = mark;\n\t\t\ti++;\n\t\t}\n\t\tchanger(stud, num, max);\n\t\tprintf(\"%d \\n\", stud[0]);\n\n\t\ttests++;\n\t}\n\treturn 0;\n}\n/*\nint max(int* arr, int len){\n\tint i=1;\n\tint maxind = 0;\n\tint max = arr[0];\n\tfor(i=1;i<len;i++){\n\t\tif (max < arr[i])\n\t\t{\n\t\t\tmax = arr[i];\n\t\t\tmaxind = i;\n\t\t}\n\t}\n\treturn maxind;\n}\n*/\n/*void swap(int* a, int* b){\n\tint temp;\n\ttemp = *a;\n\t*a = *b;\n\t*b = temp;\n}\n*/\nvoid changer(int* arr,int num, int max){\n\tif(arr[0] == max)\n\t\treturn;\n//\tint avg = average(arr, num);\n\tint i;\n\tfor(i=1;i<num;i++){\n\t\twhile(arr[i]>0 && arr[0]<max){\n\t\t\tarr[0]++;\n\t\t\tarr[i]--;\n\t\t}\n\t}\n}\n\n/*int average(int* arr, int len){\n\tint i;\n\tint sum=0;\n\tfor(i=0;i<len,i++){\n\t\tsum += arr[i];\n\t}\n\treturn sum/len;\n}\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "fixed": "#include <stdio.h> \nvoid changer(int*,int,int);\nint main()\n{\n\tint numtests;\n\tscanf(\"%d\", &numtests);\n\tint tests = 0;\n\twhile(tests < numtests){\n\t\tint num, max, mark;\n\t\tint stud[1000];\n\t\tscanf(\"%d %d\", &num, &max);\n\t\tint i = 0;\n\t\twhile(i < num){\n\t\t\tscanf(\"%d\",&mark);\n\t\t\tstud[i] = mark;\n\t\t\ti++;\n\t\t}\n\t\tchanger(stud, num, max);\n\t\tprintf(\"%d \\n\", stud[0]);\n\n\t\ttests++;\n\t}\n\treturn 0;\n}\n/*\nint max(int* arr, int len){\n\tint i=1;\n\tint maxind = 0;\n\tint max = arr[0];\n\tfor(i=1;i<len;i++){\n\t\tif (max < arr[i])\n\t\t{\n\t\t\tmax = arr[i];\n\t\t\tmaxind = i;\n\t\t}\n\t}\n\treturn maxind;\n}\n*/\n/*void swap(int* a, int* b){\n\tint temp;\n\ttemp = *a;\n\t*a = *b;\n\t*b = temp;\n}\n*/\nvoid changer(int* arr,int num, int max){\n\tif(arr[0] == max)\n\t\treturn;\n//\tint avg = average(arr, num);\n\tint i;\n\tfor(i=1;i<num;i++){\n\t\twhile(arr[i]>0 && arr[0]<max){\n\t\t\tarr[0]++;\n\t\t\tarr[i]--;\n\t\t}\n\t}\n}\n\n/*int average(int* arr, int len){\n\tint i;\n\tint sum=0;\n\tfor(i=0;i<len,i++){\n\t\tsum += arr[i];\n\t}\n\treturn sum/len;\n}\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.7868020304568528, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "d4c4bdea048d4359318445e0a66f6a39", "bug_code_uid": "d4f13c1b0dfb04776a606700c89d3c2f", "src_uid": "0ff4ac859403db4e29554ca7870f5490", "apr_id": "7d3ea1ad1aa4b538e4c26f1ca95ff445", "difficulty": 1300, "tags": ["number theory", "*special", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int i, j, k, temp;\n    int n;\n    int t[20005];\n    int ans = 0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&t[i]);\n        ans += t[i];\n    }\n    for(i=2;i<sqrt(n+1)+1;i++){\n        if(n%i==0 && n/i>=3){\n            for(j=0;j<i;j++){\n                temp = 0;\n                for(k=j;k<n;k+=j)\n                    temp += t[k];\n                if(temp>ans)\n                    ans = temp;\n            }\n            for(j=0;j<n/i;j++){\n                temp = 0;\n                for(k=j;k<n;k+=j)\n                    if(k%i==j)\n                        temp += t[k];\n                if(temp>ans)\n                    ans = temp;\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int i, j, k, temp;\n    int n;\n    int t[20005];\n    int ans = 0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&t[i]);\n        ans += t[i];\n    }\n    for(i=2;i<=sqrt(n)+1;i++){\n        if(n%i==0){\n            if(n/i>=3){\n                for(j=0;j<i;j++){\n                    temp = 0;\n                    for(k=j;k<n;k+=i)\n                        temp += t[k];\n                    ans = ans>temp?ans:temp;\n                }\n            }\n            if(i>=3){\n                for(j=0;j<n/i;j++){\n                    temp = 0;\n                    for(k=j;k<n;k+=n/i)\n                        temp += t[k];\n                    ans = ans>temp?ans:temp;\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.47702407002188185, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "cfc3c79493d4656f9c5f4f60467578f3", "bug_code_uid": "fa081494b44a3da977ca609326d35189", "src_uid": "43996d7e052aa628a46d03086f9c5436", "apr_id": "bdf593b939b14f2e05875c7ca60fbe9e", "difficulty": 1000, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        scanf(\"%d\",&n);\n        if(n==1)\n        printf(\"-1\");\n        else if(n>1){\n        for(int j=57;j<pow(10,n);j++){\n                int t=j;int c=0;int count=0;\n                while(t!=0){\n                    if(t%10!=0)\n                    c++;\n                    if(j%(t%10)!=0)\n                    count++;\n                }if(c==n&&count==n){\n                    printf(\"%d\\n\",j);\n                    break;\n                }\n            }\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n        scanf(\"%d\",&n);\n        if(n==1)\n        printf(\"-1\\n\");\n        else if(n>1){\n        printf(\"2\");\n        for(int i=0;i<n-1;i++)\n        printf(\"9\");\n        printf(\"\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9995189995189995, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3edd0f4024de69a61878a04d05e73bb3", "bug_code_uid": "264d8efe15ae53fc2409c61f1f539c6a", "src_uid": "1e56f4d17c4ad0b5dde7f05b4e362cfc", "apr_id": "ede69e7950b40234a1695293cd785206", "difficulty": 1600, "tags": ["data structures", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid updateAns(int* ans, int numElems, int insert){\n    int min_index = 0;\n\n    for(int index = 1; index < numElems; index++){\n        if(ans[index] < ans[min_index]){\n            min_index = index;\n        }\n    }\n    if(insert > ans[min_index]){\n        for(int i = min_index + 1; i < numElems; i++){\n            ans[i - 1] = ans[i];\n        }\n        ans[numElems - 1] = insert;\n    }\n}\n\nint main(){\n    int numNums;\n    scanf(\"%d\", &numNums);\n    int nums[numNums];\n    for(int i = 0; i < numNums; i++){\n        scanf(\"%d\", &nums[i]);\n    }\n    int numTests;\n    scanf(\"%d\", &numTests);\n    for(int testNo = 0; testNo < numTests; testNo++){\n        int k, pos;\n        scanf(\"%d %d\", &k, &pos);\n        int ans[k];\n        for(int i = 0; i < k; i++){\n            ans[i] = nums[i];\n        }\n        for(int i = k; i < numNums; i++){\n            updateAns(&ans, k, nums[i]);\n        }\n        /*for(int i = 0; i < k; i++){\n            printf(\"%d\\t\", ans[i]);\n        }*/\n        printf(\"%d\\n\", ans[pos - 1]);\n    }\n}", "fixed": "#include <stdio.h>\n\nvoid updateAns(int* ans, int numElems, int insert){\n    int min_index = 0;\n\n    for(int index = 1; index < numElems; index++){\n        if(ans[index] <= ans[min_index]){\n            min_index = index;\n        }\n    }\n    if(insert > ans[min_index]){\n        for(int i = min_index + 1; i < numElems; i++){\n            ans[i - 1] = ans[i];\n        }\n        ans[numElems - 1] = insert;\n    }\n}\n\nint main(){\n    int numNums;\n    scanf(\"%d\", &numNums);\n    int nums[numNums];\n    for(int i = 0; i < numNums; i++){\n        scanf(\"%d\", &nums[i]);\n    }\n    int numTests;\n    scanf(\"%d\", &numTests);\n    for(int testNo = 0; testNo < numTests; testNo++){\n        int k, pos;\n        scanf(\"%d %d\", &k, &pos);\n        int ans[k];\n        for(int i = 0; i < k; i++){\n            ans[i] = nums[i];\n        }\n        for(int i = k; i < numNums; i++){\n            updateAns(&ans, k, nums[i]);\n        }\n        /*for(int i = 0; i < k; i++){\n            printf(\"%d\\t\", ans[i]);\n        }*/\n        printf(\"%d\\n\", ans[pos - 1]);\n    }\n}"}
{"similarity_score": 0.41368584758942456, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "75c49945e3ee765aebed9fc47bf94e19", "bug_code_uid": "3e76c9004c44a450216cf4f260d159cb", "src_uid": "7fce446de3b01aff8f4aa420a92a096d", "apr_id": "91259d5771169095cbc6d27c5247e9f8", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint t;\n\t\n\tscanf(\"%d\",&t);\n\t\n\twhile(t--){\n\t\tint i,j,n,m,sum=0,minus,min=101,temp;\n\t\t\n\t\tscanf(\"%d %d\",&n,&m);\n\t\t\n\t\tint matrix[n][m];\n\t\t\n\t\tfor(i=0;i<n;i++){\n\t\t\tfor(j=0;j<m;j++){\n\t\t\t\tscanf(\"%d\",&matrix[i][j]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(i=0;i<n;i++){\n\t\t\tminus=0;\n\t\t\ttemp=0;\n\t\t\tmin=101;\n\t\t\tfor(j=0;j<m;j++){\n\t\t\t\tif(matrix[i][j] < min){\n\t\t\t\t\tmin=matrix[i][j];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(matrix[i][j] <= 0){\n\t\t\t\t\tminus++;\n\t\t\t\t\ttemp+=matrix[i][j]*-1;\n\t\t\t\t} else {\n\t\t\t\t\ttemp+=matrix[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(minus % 2 != 0){\n\t\t\t\ttemp+=2*min;\n\t\t\t}\n\t\t\t\n\t\t\tsum+=temp;\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint t;\n\t\n\tscanf(\"%d\",&t);\n\t\n\twhile(t--){\n\t\tint i,j,n,m,min=101;\n\t\t\n\t\tscanf(\"%d %d\",&n,&m);\n\t\t\n\t\tint matrix[n][m],sum=0,minus=0;\n\t\t\n\t\tfor(i=0;i<n;i++){\n\t\t\tfor(j=0;j<m;j++){\n\t\t\t\tscanf(\"%d\",&matrix[i][j]);\n\t\t\t\tif(matrix[i][j] < 0){\n\t\t\t\t\tsum+=matrix[i][j]*-1;\n\t\t\t\t\tminus++;\n\t\t\t\t\tif(min > matrix[i][j]*-1)\n\t\t\t\t\t\tmin=matrix[i][j]*-1;\n\t\t\t\t} else {\n\t\t\t\t\tsum+=matrix[i][j];\n\t\t\t\t\tif(min > matrix[i][j])\t\n\t\t\t\t\t\tmin = matrix[i][j];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t//\tprintf(\"\\n Sum : %d \\n Minus : %d \",sum,minus);\n\t//\tprintf(\"\\nMin : %d\", min);\n\t\t\n\t\tif(minus % 2 == 0){\n\t\t\tprintf(\"%d\\n\",sum);\n\t\t} else {\n\t\t\tprintf(\"%d\\n\",sum-min*2);\n\t\t}\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.710676446617767, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "dfc26dd292883ea3cf29db2fd05f438d", "bug_code_uid": "7ef2b3a6a75467abf6cfb4ca15b0ae77", "src_uid": "783df1df183bf182bf9acbb99208cdb7", "apr_id": "6b430adb40b92cd637dd03d75a893e16", "difficulty": 1700, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n    double x1,x2,y1,y2,a1,b1,c1,a2,b2,c2;\n    int n,i,counter=0;\n    double y=0;\n    scanf(\"%lf %lf\",&x1,&y1);\n    scanf(\"%lf %lf\",&x2,&y2);\n    a2=(y2-y1);\n    b2=-(x2-x1);\n    c2= y1*(x2-x1)-x1*(y2-y1);\n    scanf(\"%d\",&n);\n\n\n    for(i=0;i<n;i++){\n       scanf(\"%lf %lf %lf\",&a1,&b1,&c1);\n        y=(-c1+(a1*c2)/a2)/(b1+(-a1*b2)/a2);\n       if((y>y1&&y<y2)||(y<y1&&y>y2))counter++;\n\n\n    }if(counter==1)printf(\"%d\",counter);\n    else printf(\"%d\",counter);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n    double x1,x2,y1,y2,a1,b1,c1,a2,b2,c2;\n    int n,i,counter=0;\n    double y=0,x=0;\n    scanf(\"%lf %lf\",&x1,&y1);\n    scanf(\"%lf %lf\",&x2,&y2);\n    if(y1==y2){a2=0;b2=1;c2=-y1;}\n    else if(x1==x2){b2=0;a2=1;c2=-x1;}\n\n    else{\n    a2=(y2-y1);\n    b2=-(x2-x1);\n    c2= y1*(x2-x1)-x1*(y2-y1);\n    }\n\n    scanf(\"%d\",&n);\n\n\n    for(i=0;i<n;i++){\n       scanf(\"%lf %lf %lf\",&a1,&b1,&c1);\n       if(y1==y2){\n\n        x=(-c1+(b1*c2)/b2)/a1;\n        if((x>=x1&&x<=x2)||(x<=x1&&x>=x2))counter++;\n\n       }\n        y=(-c1+(a1*c2)/a2)/(b1+(-a1*b2)/a2);\n\n\n       if((y>=y1&&y<=y2)||(y<=y1&&y>=y2))counter++;\n\n\n    }if(counter==1)printf(\"%d\",counter);\n    else printf(\"%d\",counter);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9278074866310161, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "98e15b67dd3232dfcee98c476e2d6b49", "bug_code_uid": "25885602ba3193c39be56ec9ffceaba7", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "6e83b9482ecf27f52bb20b15b521fdde", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main (){\n\t\n\tint n, m;\n\tscanf(\"%d %d\", &n ,&m);\n    char a[n][m];\n\tfor(int i=0;i<n;i++){\n\t\t\n\t\t\tscanf(\"%s\", a[i]);\n\t}\n\t\n\tint b=1;\n\tfor(int i=0;i<n;i++){\n\t\tif(n!=0 && a[i][0]==a[i-1][0]) { printf(\"NO\"); b=0;}\n\t\tfor(int j=0; j<m; j++){\n\t\t  if(a[i][j]!=a[i][0]){\n\t\t  \tprintf(\"NO\");\n\t\t  \tb=0;\n\t\t  }\n\t\t}\n\t\t \n\t}\n   if(b)\t{printf(\"Yes\");}\n}", "fixed": "#include <stdio.h>\n\n\nint main (){\n\t\n\tint n, m;\n\tscanf(\"%d %d\", &n ,&m);\n    char a[n][m];\n\tfor(int i=0;i<n;i++){\n\t\t\n\t\t\tscanf(\"%s\", a[i]);\n\t}\n\t\n\tint b=1;\n\tfor(int i=0;i<n;i++){\n\t\tif(n!=0 && a[i][0]==a[i-1][0]) { printf(\"NO\"); b=0; break;}\n\t\tfor(int j=0; j<m; j++){\n\t\t  if(a[i][j]!=a[i][0]){\n\t\t  \tprintf(\"NO\");\n\t\t  \tb=0;\n\t\t    break;\n\t\t  }\n\t\t}\n\t\t if(b==0)break;\n\t}\n   if(b)\t{printf(\"Yes\");}\n}\n\t"}
{"similarity_score": 0.9828571428571429, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "077d5575fe53d2a7d95c26211f4ee336", "bug_code_uid": "9545d60d5548e78b73df986b003d9cc6", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "7970f83047d84d5e3a2c41251b651897", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint cmp(const void *a, const void *b) {\n    return (*(int *)a - *(int *)b);\n}\n\nint bs(int *arr, int len, int n) {\n    int r = len - 1;\n    int l = 0;\n    int m = 0;\n\n    while (l <= r) {\n        m = l + (r - l) / 2;\n\n        if (arr[m] == n) {\n            return m;\n        } else if (arr[m] < n) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n\n    if (arr[m] < n) {\n        m += 1;\n    }\n\n    return m > 0 ? m : -1;\n}\n\nint main(void) {\n    int n = 0;\n    int q = 0;\n    int k = 0;\n\n    scanf(\"%d\", &n);\n\n    int arr[n];\n\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", arr + i);\n    }\n\n    scanf(\"%d\", &q);\n\n    qsort(arr, n, sizeof(int), cmp);\n\n    for (int i = 0; i < q; i++) {\n        scanf(\"%d\", &k);\n\n        int r = bs(arr, n, k);\n\n        if (r < 0) {\n            r += 1;\n        } else if (arr[r] <= k) {\n            r += 1;\n        }\n\n        printf(\"%d\\n\", r);\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint cmp(const void *a, const void *b) {\n    return (*(int *)a - *(int *)b);\n}\n\nint bs(int *arr, int len, int n) {\n    int r = len - 1;\n    int l = 0;\n    int m = 0;\n\n    while (l <= r) {\n        m = l + (r - l) / 2;\n\n        if (arr[m] == n) {\n            l = m + 1;\n        } else if (arr[m] < n) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n\n    if (arr[m] <= n) {\n        m += 1;\n    }\n\n    return m > 0 ? m : -1;\n}\n\nint main(void) {\n    int n = 0;\n    int q = 0;\n    int k = 0;\n\n    scanf(\"%d\", &n);\n\n    int arr[n];\n\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", arr + i);\n    }\n\n    scanf(\"%d\", &q);\n\n    qsort(arr, n, sizeof(int), cmp);\n\n    for (int i = 0; i < q; i++) {\n        scanf(\"%d\", &k);\n\n        int r = bs(arr, n, k);\n\n        if (r < 0) {\n            r += 1;\n        } else if (arr[r] <= k && (r + 1) < n) {\n            r += 1;\n        }\n\n        printf(\"%d\\n\", r);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.8557295960428689, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "14bb2a48aa841d43cf8b0fbdd1311016", "bug_code_uid": "c952703e254ae64c22dd027cfa5dc966", "src_uid": "23c63d1fea568a75663450e0c6f23a29", "apr_id": "80f99616cd2c3bf7d34c5f99994ca68d", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint n,s;\n\tint v[1001];\n\tscanf(\"%d %d \",&n,&s);\n\tlong long int c=0;\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",v[i]);\n\t\tc+=v[i];\n\t}\n\tif(c<s){\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\tif(c==s){\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tint min= 1000000000;\n\tfor(int i=0;i<n;i++){\n\t\tif(min>v[i])\n\t\t\tmin=v[i];\n\t}\n\tsum=0;\n\tfor(int i=0;i<n;i++){\n\t\tsum+=v[i]-min;\n\t}\n\tif(sum>=s)\n\t{\n\t\tprintf(\"%d\",min);\n\t\treturn 0;\n\t}\n\tint r=s-sum;\n\telse{\n\t\tfloat ans=r/n;\n\t\tint a= r/s;\n\t\tif(ans-(float)a>0){\n\t\t\tprintf(\"%d\",min-ans-1);\n\t\t}\n\t\telse\n\t\tprintf(\"%d\",min-ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint n;\n\tlong long int s;\n\tint v[1001];\n\tscanf(\"%d %I64d \",&n,&s);\n\tlong long int c=0;\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&v[i]);\n\t\tc+=v[i];\n\t}\n\tif(c<s){\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\tif(c==s){\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tint min= 1000000000;\n\tfor(int i=0;i<n;i++){\n\t\tif(min>v[i])\n\t\t\tmin=v[i];\n\t}\n\tlong long int sum=0;\n\tfor(int i=0;i<n;i++){\n\t\tsum+=v[i]-min;\n\t}\n\tif(sum>=s)\n\t{\n\t\tprintf(\"%d\",min);\n\t\treturn 0;\n\t}\n\tlong long int r=s-sum;\n\t\tlong long int a= r/n;\n\t\tif(r-(n*a)){\n\t\t\tprintf(\"%d\",min-a-1);\n\t\t}\n\t\telse\n\t\tprintf(\"%d \",min-a);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.8418657565415245, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "d7afd7e0275be2081a17e5899e789789", "bug_code_uid": "b69d8561804ad165c5261739cf63a853", "src_uid": "240a2b88ded6016d0fd7157d0ee2beea", "apr_id": "9357c5f84f5c74d99605662936c5df4e", "difficulty": 1200, "tags": ["greedy", "math", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int s=0, i, z,x=0,f=0;\n    char a[100000];\n    scanf(\"%s\",&a);\n    z = strlen(a);\n    for(i = 0; i < z-3; i++)\n    {\n        if(a[i] == 'b' && a[i+1] == 'e' && a[i+2] == 'a' && a[i+3] == 'r')\n        {\n            f=1;\n            x=i;\n        }\n        s=s+x;\n    }\n    if(f==0)\n    {\n      printf(\"%d\",s);\n    }\n    if(f==1)\n    {\n        printf(\"%d\",s+(z-3));\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int s=0, i, z,x=-1,f=0;\n    char a[100000];\n    scanf(\"%s\",&a);\n    z = strlen(a);\n    for(i = 0; i < z-3; i++)\n    {\n        if(a[i] == 'b' && a[i+1] == 'e' && a[i+2] == 'a' && a[i+3] == 'r')\n        {\n            f=1;\n            x=i;\n        }\n        s=s+x+1;\n\n    }\n    if(f==0)\n    {\n      printf(\"0\");\n    }\n    if(f==1)\n    {\n        printf(\"%d\",s);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9933333333333333, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cbfa12470b6a6c5df131a17f12203ef4", "bug_code_uid": "6e8f0118d0bbcd343492e3c9cc6eb34b", "src_uid": "6432a543eeee9833c6d849222ad6b93d", "apr_id": "0a94d43a98a9653d51c3b4912ff75779", "difficulty": 1000, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "main(){\n    long long l, r;\n    scanf(\"%I64d %I64d\", &l, &r);\n    printf(\"YES\\n\");\n    for (l < r; l += 2)\n        printf(\"%I64d %I64d\\n\", l, l+1);\n}", "fixed": "main(){\n    long long l, r;\n    scanf(\"%I64d %I64d\", &l, &r);\n    printf(\"YES\\n\");\n    for (; l < r; l += 2)\n        printf(\"%I64d %I64d\\n\", l, l+1);\n}"}
{"similarity_score": 0.9957446808510638, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cf824ae129e0c2ec19728d36e9ee33c3", "bug_code_uid": "b29598698759d419c0fe1ee85b45e3bd", "src_uid": "38fe0e19974a7bc60153793b9060369a", "apr_id": "cf17dd32a138469c3c38b74544feab03", "difficulty": 1500, "tags": ["two pointers", "binary search", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nstruct x {\n  long long m,s;\n};\nint cmp(const void* a, const void* b) {\n  long long x=((struct x*)a)->m,y=((struct x*)b)->m;\n  return x<y?-1:x>y?1:0;\n}\nint main() {\n  int n,p; long long s=0,max=0,d; struct x people[100000];\n  scanf(\"%d%I64d\",&n,&d);\n  for (int i=0;i<n;i++)\n    scanf(\"%I64d%I64d\",&people[i].m,&people[i].s);\n  qsort(people,n,sizeof(struct x),cmp);\n  for (int i=0;i<n&&p<n;i++) {\n    while (p<n&&people[p].m-people[i].m<d)\n      s+=people[p++].s; p++;\n    if (s>max) max=s;\n    s-=people[i].s;\n  }\n  printf(\"%I64d\\n\",max);\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nstruct x {\n  long long m,s;\n};\nint cmp(const void* a, const void* b) {\n  long long x=((struct x*)a)->m,y=((struct x*)b)->m;\n  return x<y?-1:x>y?1:0;\n}\nint main() {\n  int n,p; long long s=0,max=0,d; struct x people[100000];\n  scanf(\"%d%I64d\",&n,&d);\n  for (int i=0;i<n;i++)\n    scanf(\"%I64d%I64d\",&people[i].m,&people[i].s);\n  qsort(people,n,sizeof(struct x),cmp);\n  for (int i=0;i<n&&p<n;i++) {\n    while (p<n&&people[p].m-people[i].m<d)\n      s+=people[p++].s;\n    if (s>max) max=s;\n    s-=people[i].s;\n  }\n  printf(\"%I64d\\n\",max);\n  return 0;\n}"}
{"similarity_score": 0.9987546699875467, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ae68b8dd479b5e651133be71b34c7456", "bug_code_uid": "5e51ff8cd68ff9a52ec02c9a104f50a3", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "cd87356a85f0cbb17ad5360c0800d90b", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include \"stdio.h\"\nint maximum(int a,int b)\n{\n\treturn (a>b)?a:b;\n}\nint max(int a[],int n)\n{\n\tint dp[n],i,j,maxi=-1;\n\tfor(i=0;i<n;i++)\n\t\tdp[i]=1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]>a[i-1])\n\t\t\tdp[i]=dp[i-1]+1;\n\t\tmaxi=maximum(maxi,dp[i]);\n\t}\n\tprintf(\"%d\\n\",maxi);\n}\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\t/* code */\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tmax(a,n);\n\treturn 0;\n}", "fixed": "#include \"stdio.h\"\nint maximum(int a,int b)\n{\n\treturn (a>b)?a:b;\n}\nint max(int a[],int n)\n{\n\tint dp[n],i,j,maxi=1;\n\tfor(i=0;i<n;i++)\n\t\tdp[i]=1;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(a[i]>a[i-1])\n\t\t\tdp[i]=dp[i-1]+1;\n\t\tmaxi=maximum(maxi,dp[i]);\n\t}\n\tprintf(\"%d\\n\",maxi);\n}\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\t/* code */\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tmax(a,n);\n\treturn 0;\n}"}
{"similarity_score": 0.9633943427620633, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a956e0f59bec7c42c4d1b675dbb7e097", "bug_code_uid": "27b72568d3df931e27959307474b8fea", "src_uid": "bf60899aa2bd7350c805437d0fee1583", "apr_id": "5ede0c73ed1a8a021da99d37e4f52904", "difficulty": 1600, "tags": ["two pointers", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long int p,t1,t2;\n    int i=0,n,m,temp2=0,k,temp1=0;\n    scanf(\"%d %d %ld %ld %d\\n\",&m, &n, &t1, &t2,&k );\n    long int a[m], b[n];\n    \n    for(;i<m;i++)\n    scanf(\"%ld \",a+i);\n    scanf(\"\\n\");\n    for(i=0;i<n;i++)\n    scanf(\"%ld \",b+i);\n    \n    for(i=0;i<k+1;i++)\n    {\n        int j=0;\n        while((b[j]<(a[i]+t1))&&(j<n))\n        j++;\n        temp1=j+k-i;\n        if(temp1>n-1)\n        {printf(\"-1\");\n        return 0;\n        }\n        if(temp2<temp1)\n        temp2=temp1;\n    }\n    \n    \n    printf(\"%ld\",b[temp2]+t2);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long int p,t1,t2;\n    int i=0,n,m,temp2=0,t11=0,k,temp1=0;\n    scanf(\"%d %d %ld %ld %d\\n\",&m, &n, &t1, &t2,&k );\n    long int a[m], b[n];\n    \n    for(;i<m;i++)\n    scanf(\"%ld \",a+i);\n    scanf(\"\\n\");\n    for(i=0;i<n;i++)\n    scanf(\"%ld \",b+i);\n    \n    for(i=0;i<k+1;i++)\n    {\n        int j=t11;\n        while((b[j]<(a[i]+t1))&&(j<n))\n        j++;\n        if(j!=0)\n        t11=j-1;\n        temp1=j+k-i;\n        if(temp1>n-1)\n        {printf(\"-1\");\n        return 0;\n        }\n        if(temp2<temp1)\n        temp2=temp1;\n    }\n    \n    \n    printf(\"%ld\",b[temp2]+t2);\n    return 0;\n}"}
{"similarity_score": 0.9566968781470292, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1f36054b66071fe31bf27c6cd8f2be0c", "bug_code_uid": "45d65a286bd8ca3c98e7c63c9416c2fe", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "22dec7edbf88ba7de32d38032a067a5e", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint map[100005];\nint main(){\n    int n,a,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&a);\n        map[a]=i;\n    }\n    int m;\n    scanf(\"%d\",&m);\n    int s1=0,s2=0;\n    while(m--){\n        scanf(\"%d\",&a);\n        //printf(\"%d %d\\n\",map[a],n-map[a]+1);\n        if(map[a]){\n            s1+=map[a];\n            s2+=n-map[a]+1;\n        }\n        else{\n            s1+=n;\n            s2+=n;\n        }\n    }\n    printf(\"%d %d\\n\",s1,s2);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint map[100005];\ntypedef long long ll;\nint main(){\n    int n,a,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&a);\n        map[a]=i;\n    }\n    int m;\n    scanf(\"%d\",&m);\n    ll s1=0,s2=0;\n    while(m--){\n        scanf(\"%d\",&a);\n        //printf(\"%d %d\\n\",map[a],n-map[a]+1);\n        if(map[a]){\n            s1+=map[a];\n            s2+=n-map[a]+1;\n        }\n        else{\n            s1+=n;\n            s2+=n;\n        }\n    }\n    printf(\"%I64d %I64d\",s1,s2);\n    return 0;\n}"}
{"similarity_score": 0.9984732824427481, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a200afc37f07ec78ddecbbedad420939", "bug_code_uid": "f241209a2ebbb0c82dabfe4d4965fd13", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "f4c01abe5b4ac73d6404b6854f7c19ee", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint Mishka=0,Chris=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint m,c;\n\t\tscanf(\"%d %d\",&m,&c);\n\t\tif(m>c)\n\t\t\tMishka++;\n\t\telse if(c>m)\n\t\t\tChris++;\n\t}\n\tif(Mishka>Chris)\n\t\tprintf(\"Mishka\");\n\telse if( Chris>Mishka)\n\t\tprintf(\"Chris\");\n\telse\n\t\tprintf(\"Friendship is magic! ^^\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint Mishka=0,Chris=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint m,c;\n\t\tscanf(\"%d %d\",&m,&c);\n\t\tif(m>c)\n\t\t\tMishka++;\n\t\telse if(c>m)\n\t\t\tChris++;\n\t}\n\tif(Mishka>Chris)\n\t\tprintf(\"Mishka\");\n\telse if( Chris>Mishka)\n\t\tprintf(\"Chris\");\n\telse\n\t\tprintf(\"Friendship is magic!^^\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.8935108153078203, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "e6bc98674848172985cbba1cd468947d", "bug_code_uid": "9545ac4dd64578aaec0ff26621c440fa", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "1b05b3ea1f22b65bb30b66eb0acc1aac", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    double n,arr[400000],max=0,min=2000000000,count1=0,count2=0,i;\n    double zeft;\n    scanf(\" %I64f\",&n);\n    for(i=0;i<n;i++){\n        scanf(\" %I64f\",&arr[i]);\n        if(arr[i]>max){\n            max=arr[i];\n            count1=0;}\n        if(arr[i]<min){\n            min=arr[i];\n            count2=0;}\n        if(arr[i]==min)\n            count2++;\n        if(arr[i]==max)\n            count1++;\n    }\n    zeft=count1*count2;\n    printf(\"%%0.0I64f\",max-min);\n    printf(\" %0.0I64f\",zeft);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int arr[400000],i,n;\n    double max=0,min=2000000000,count1=0,count2=0;\n    double zeft;\n    scanf(\" %I64d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\" %I64d\",&arr[i]);\n        if(arr[i]>max){\n            max=arr[i];\n            count1=0;}\n        if(arr[i]<min){\n            min=arr[i];\n            count2=0;}\n        if(arr[i]==min)\n            count2++;\n        if(arr[i]==max)\n            count1++;\n    }\n    zeft=count1*count2;\n    printf(\"%0.0I64f\",max-min);\n    if(max==min)\n        printf(\" %I64d\",((n)*(n-1))/2);\n    else\n    printf(\" %0.0I64f\",zeft);\n    return 0;\n}\n"}
{"similarity_score": 0.5477386934673367, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "8311d2251ed846c306acbe6547cc88b4", "bug_code_uid": "f6bf77be4f271fffe6b1246117ce8d16", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "ad7aba3ea01854d081d1cb97d8ca5137", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n\t\tint n, zc = 0, firstneg = 0, firstnegpos;\n\t\tscanf(\"%d \", &n);\n\n\t\tint arr[n];\n\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tscanf(\"%d \", &arr[i]);\n\n\t\t\t\tif (arr[i] == 0)\n\t\t\t\t\t\tzc++;\n\n\t\t\t\tif (arr[i] < 0 && firstneg == 0){\n\t\t\t\t\t\tfirstneg = 1;\n\t\t\t\t\t\tfirstnegpos = i;\n\t\t\t\t}\n\t\t}\n\n\t\tprintf(\"1 %d\\n\", arr[firstnegpos]);\n\t\t\n\t\tprintf(\"%d \", n - zc - 1);\n\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tif  (i != firstnegpos && arr[i] != 0)\n\t\t\t\t\t\tprintf(\"%d \", arr[i]);\n\t\tprintf(\"\\n\");\n\n\t\tprintf(\"%d \", zc);\n\t\tfor (int i = 0; i < zc - 1; i++)\n\t\t\t\tprintf(\"0 \");\n\t\tprintf(\"0\\n\");\n\n\t\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n\t\tint n, zc = 0, firstneg = 0, firstnegpos, neg = 0, lastneg;\n\t\tscanf(\"%d \", &n);\n\n\t\tint arr[n];\n\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tscanf(\"%d \", &arr[i]);\n\n\t\t\t\tif (arr[i] == 0)\n\t\t\t\t\t\tzc++;\n\n\t\t\t\tif (arr[i] < 0){\n\t\t\t\t\tlastneg = i;\n\t\t\t\t\tif (firstneg == 0) {\n\t\t\t\t\t\tfirstneg = 1;\n\t\t\t\t\t\tfirstnegpos = i;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t\tneg++;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"1 %d\\n\", arr[firstnegpos]);\n\t\n\t\tif (neg%2 == 0){\n\t\t\tprintf(\"%d \", n - zc - 1);\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\t\tif  (i != firstnegpos && arr[i] != 0)\n\t\t\t\t\t\t\tprintf(\"%d \", arr[i]);\n\t\t\tprintf(\"\\n\");\n\n\t\t\tprintf(\"%d \", zc);\n\t\t\tfor (int i = 0; i < zc -1; i++)\n\t\t\t\t\tprintf(\"0 \");\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse{\n\t\t\t\tprintf(\"%d \", n - zc -2);\n\t\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\t\t\tif (i != firstnegpos && i != lastneg && arr[i] != 0)\n\t\t\t\t\t\t\t\tprintf(\"%d \", arr[i]);\n\t\t\t\tprintf(\"\\n\");\n\n\t\t\t\tprintf(\"%d \", zc+1);\n\t\t\t\tfor (int i = 0; i < zc; i++)\n\t\t\t\t\t\tprintf(\"0 \");\n\t\t\t\tprintf(\"%d\\n\", arr[lastneg]);\n\t\t}\n\n\t\treturn 0;\n}\n\n"}
{"similarity_score": 0.6264150943396226, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "8bb9cdece4684fcbcf1be33c92ae9582", "bug_code_uid": "b0dfba6a92caae8e6f6ac3e74a23328b", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "e07aeb9f28df60556bcb80afe15b52f4", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,i,l;\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    char s[50],c;\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",s);\r\n        getchar();\r\n        scanf(\"%c\",&c);\r\n\r\n        l=strlen(s);\r\n        if(l>1)\r\n        {\r\n            i=l/2;\r\n            if(s[i]==c) printf(\"YES\\n\");\r\n            else printf(\"NO\\n\");\r\n        }\r\n        else if(l<=1)\r\n        {\r\n            if(s[0]==c) printf(\"YES\\n\");\r\n            else printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,i,l,j=1;\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    char s[50],c;\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",s);\r\n        getchar();\r\n        scanf(\"%c\",&c);\r\n        l=strlen(s);\r\n        if(l>1)\r\n        {\r\n            for(i=0; i<l-1; i++)\r\n            {\r\n                if(s[i]==c)\r\n                {\r\n                    continue;\r\n                }\r\n                else\r\n                {\r\n                    s[i]='0';\r\n                    s[i+1]='0';\r\n                    i++;\r\n                }\r\n            }\r\n            for(i=0; i<l; i++)\r\n            {\r\n                if(s[i]!='0'&&s[i]==c)\r\n                {\r\n                    printf(\"YES\\n\");\r\n                    j=4;\r\n                    break;\r\n                }\r\n            }\r\n            if(j==1)\r\n            {\r\n                printf(\"NO\\n\");\r\n            }\r\n            j=1;\r\n        }\r\n        else\r\n        {\r\n            if(s[0]==c) printf(\"YES\\n\");\r\n            else printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.20012507817385866, "equal_cnt": 18, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "9574d383ae96082cc24beb69b5de771d", "bug_code_uid": "0d5a3e60162333206866563d4d40ab0d", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "bc75be370d21d15c852ff1139ac0f59f", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    \n    char str[102];\n    \n    for (int j = 0; j < t; ++j){\n        char new[52];\n        scanf(\"%s\", str);\n        int a = strlen(str);\n        int c = 0;\n\n        if (a%2 == 0){\n            \n            for (int i = 0; i < a; ++i){\n                if (i%2 == 0){\n                    new[c] = str[i];\n                    c += 1;\n            }\n        }\n            new[c + 1] = str[a-1];\n            new[c+2] = '\\0';\n        }\n        \n        else{\n            for (int i = 0; i < a; ++i){\n                if (i == a - 1){\n                    new[c] = str[i-1];\n                    new[c+1] = str[i];\n                    new[c+2] = '\\0';\n                }\n                else if (i%2 == 0){\n                    new[c] = str[i];\n                    c += 1;\n                }\n            }\n        }\n\n        printf(\"%s\\n\", new);\n    }\n    \n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i){\n        char str[108];\n        scanf(\"%s\", str);\n        int tam = strlen(str);\n        if (tam%2 == 0){\n            for (int j = 0; j < tam; ++j){\n                if (j%2==0)\n                    printf(\"%c\", str[j]);\n            }\n            printf(\"%c\\n\", str[tam-1]);\n        }\n        \n        else{\n            for (int j = 0; j < tam-3; ++j){\n                if (j%2==0)\n                    printf(\"%c\", str[j]);\n            }\n            printf(\"%c%c\\n\", str[tam-2], str[tam-1]);\n        }\n    }\n    \n    \n    \n    return 0;\n}\n"}
{"similarity_score": 0.5610687022900763, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "27eb9c697dce272fe59bf8ad14d8b34c", "bug_code_uid": "579a6652ff438f03b09a287c3fe4bba4", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "e3859be12a401e45e30d14185561a76e", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n  int t, n, i, ans1, ans2;\n  scanf(\"%d\", &t);\n  while(t--){\n    scanf(\"%d\", &n);\n    ans1=(1<<(n/2))-2+(1<<(n/2));\n    ans2=0;\n    int i;\n    for(i=n/2; i<n; i++)\n      ans2+=(1<<i);\n    printf(\"%d\\n\", ans1-ans2);\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(){\n  int t, n, i, ans1, ans2;\n  scanf(\"%d\", &t);\n  while(t--){\n    scanf(\"%d\", &n);\n    ans1=(1<<(n/2))-2+(1<<(n));\n    ans2=0;\n    int i;\n    for(i=n/2; i<n; i++)\n      ans2+=(1<<i);\n    printf(\"%d\\n\", ans1-ans2);\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.6933333333333334, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0786019b2c6f2b39bff993cb9d150ad5", "bug_code_uid": "34c098205d78102a44204a751e0edde7", "src_uid": "09276406e16b46fbefd6f8c9650472f0", "apr_id": "4d15186c75c027d4c429eb1b9eae3d85", "difficulty": 1300, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int n, sum;\n    scanf(\"%I64d\", &n);\n\n    sum = (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)) / 5040\n          + (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5)) / 720\n          + (n * (n - 1) * (n - 2) * (n - 3) * (n - 4)) / 120;\n\n    printf(\"%I64d\", sum);\n\n    return 0;\n}\n\n/* #include <stdio.h>\n\nint main ()\n{\n    long long int n, nC5, nC6, nC7;\n    scanf(\"%I64d\", &n);\n\n    nC5 = (n * (n-1) * (n-2) * (n-3) * (n-4)) / 120;\n    nC6 = (nC5 * (n-5)) / 6;\n    nC7 = (nC6 * (n-6)) / 7;\n\n    printf(\"%I64d\", nC5 + nC6 + nC7);\n\n    return 0;\n}\n\n*/\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int n, sum;\n    scanf(\"%I64d\", &n);\n\n    sum = n / 1 * (n - 1) / 2 * (n - 2) / 3 * (n - 3) / 4 * (n - 4) / 5 * (n - 5) / 6 * (n - 6) / 7\n          + n / 1 * (n - 1) / 2 * (n - 2) / 3 * (n - 3) / 4 * (n - 4) / 5 * (n - 5) / 6\n          + n / 1 * (n - 1) / 2 * (n - 2) / 3 * (n - 3) / 4 * (n - 4) / 5;\n\n    printf(\"%I64d\", sum);\n\n    return 0;\n}\n\n/* #include <stdio.h>\n\nint main ()\n{\n    long long int n, nC5, nC6, nC7;\n    scanf(\"%I64d\", &n);\n\n    nC5 = (n * (n-1) * (n-2) * (n-3) * (n-4)) / 120;\n    nC6 = (nC5 * (n-5)) / 6;\n    nC7 = (nC6 * (n-6)) / 7;\n\n    printf(\"%I64d\", nC5 + nC6 + nC7);\n\n    return 0;\n}\n\n*/\n"}
{"similarity_score": 0.9481865284974094, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "6b1f49f9bfc840ec1363c79f7f3a6105", "bug_code_uid": "f911b90caa2ac2b5eb97c5bcb12d4ee7", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "97d8da1af919d1e4bfd8c8848e6e4bcc", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    long long int t,i,j,sum,n;\n    scanf(\"%lld\",&t);\n    long long int num[t];\n    //for(i=0;i<t;i++)scanf(\"%lld\",&num[i]);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&n);\n        sum=(n*n+n)/2;\n        t=0;\n        for(j=0;j<=n;j++)\n        {\n            if(pow(2,j)>n)break;\n\n         t+=pow(2,j);\n        }\n        printf(\"%lld\\n\",sum-2*t);\n    }\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long long int t,i,j,sum,n,temp;\n    scanf(\"%lld\",&t);\n    long long int num[t];\n    for(i=0;i<t;i++)scanf(\"%lld\",&num[i]);\n    for(i=0;i<t;i++)\n    {\n        n=num[i];\n        sum=(n*n+n)/2;\n        temp=0;\n        for(j=0;j<=n;j++)\n        {\n            if(pow(2,j)>n)break;\n\n         temp+=pow(2,j);\n        }\n        printf(\"%lld\\n\",sum-2*temp);\n    }\n}\n"}
{"similarity_score": 0.6334106728538283, "equal_cnt": 14, "replace_cnt": 2, "delete_cnt": 5, "insert_cnt": 7, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "5d40f1f42eb0f759a6d102a9ca5ab1b1", "bug_code_uid": "ee1fc88051747ab1c52ddce0724042bf", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "4a9cf4769748019db24da074c09773e9", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#define L 1010\nstr1=\"aeiou\";\nstr2=\"bcdfghjklmnpqrstvwxyz\";\nint main(){\n\tchar s[L],t[L];\n\tint i;\n\tgets(s);\n\tgets(t);\n\tfor(i=0;s[i]&&t[i];i++){\n\t\tif(strchr(str1,s[i])&&strchr(str1,t[i]))\n\t\t\tcontinue;\n\t\telse if(strchr(str2,s[i])&&strchr(str2,t[i]))\n\t\t\tcontinue;\n\t\telse {\n\t\t\tprintf(\"no\");\n\t\t\texit(1);\n\t\t}\n\t}\n\tprintf(\"yes\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define L 1010\nchar str1[L]=\"aeiou\";\nchar str2[L]=\"bcdfghjklmnpqrstvwxyz\";\nint main(){\n\tchar s[L],t[L];\n\tint i;\n\tgets(s);\n\tint ls=strlen(s);\n\tgets(t);\n\tint lt=strlen(t);\nif(ls!=lt){\nprintf(\"no\");return 0;}\nelse{\n\tfor(i=0;i<(ls<lt?ls:lt);i++){\n\t\tif(strchr(str1,s[i])&&strchr(str1,t[i]))\n\t\t\tcontinue;\n\t\telse if(strchr(str2,s[i])&&strchr(str2,t[i]))\n\t\t\tcontinue;\n\t\telse {\n\t\t\tprintf(\"no\");\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\tprintf(\"yes\");\n\treturn 0;\n}"}
{"similarity_score": 0.9331532748143146, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "9a2506a59819d2e1127582e5444d58f5", "bug_code_uid": "fdddb386c010d6ec1bec9a684fff58b4", "src_uid": "f336b622fdaf5960032268641320bb53", "apr_id": "71ac74ec171a99cc107485441852608f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    \n    int n,m;\n    \n    scanf(\"%d\", &n);\n    scanf(\"%d\", &m);\n    \n    int s1[n];\n    int s2[n];\n    int segment[m];\n    int y;\n    int x = 0;\n    int count = 0;\n    \n    for(x = 0; x<n; x++){\n        \n        scanf(\"%d\", &s1[x]);\n        scanf(\"%d\", &s2[x]);\n    }\n    \n    for(x = 1; x<=m; x++){\n        \n            segment[m] = m;\n    }\n    \n    for(x = 0; x<n; x++){\n        for(y = s1[x]-1; y<=s2[x]-1; y++){\n            segment[y] = 0;\n        }\n    }\n    \n    \n    for (x = 0; x<m; x++){\n        \n        if(segment[x] != 0)\n            count++;\n    }\n    \n    printf(\"%d\\n\",count);\n    if(count>0){\n    for(x = 0; x < m; x++){\n        if(segment[x] != 0)\n        printf(\"%d \", x+1);\n    }\n    }\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    \n    int n,m;\n    \n    scanf(\"%d\", &n);\n    scanf(\"%d\", &m);\n    \n    int s1[n];\n    int s2[n];\n    int segment[m];\n    int y;\n    int x = 0;\n    int count = 0;\n    \n    for(x = 0; x<n; x++){\n        \n        scanf(\"%d\", &s1[x]);\n        scanf(\"%d\", &s2[x]);\n    }\n    \n    for(x = 0; x<m; x++){\n        \n            segment[x] = x+1;\n    }\n    \n    for(x = 0; x<n; x++){\n        for(y = s1[x]-1; y<=s2[x]-1; y++){\n            segment[y] = 0;\n        }\n    }\n    \n    \n    for (x = 0; x<m; x++){\n        \n        if(segment[x] != 0)\n            count++;\n    }\n    \n    printf(\"%d\\n\",count);\n    if(count>0){\n    for(x = 0; x < m; x++){\n        if(segment[x] != 0)\n        printf(\"%d \", x+1);\n    }\n    }\n}"}
{"similarity_score": 0.9569230769230769, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "833d5d4a9054ff0851a89d8d0eebfcf4", "bug_code_uid": "4feb984d941bcff36af3f4d16234e908", "src_uid": "13611e428c24b94023811063bbbfa077", "apr_id": "598f7688e79d716b2dfb7ec834561df5", "difficulty": 800, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(void)\r\n{\r\n    unsigned t;\r\n    unsigned long long n,m;\r\n    scanf(\"%u\",&t);\r\n    while(t--)\r\n    {\r\n           scanf(\"%llu%llu\",&n,&m);\r\n           if( n == m || n*m % 2 == 1)\r\n            printf(\"Tonya\\n\");\r\n            else\r\n            printf(\"Burenka\\n\");\r\n\r\n    }\r\n    return(0);\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(void)\r\n{\r\n    unsigned t;\r\n    unsigned long long n,m;\r\n    scanf(\"%u\",&t);\r\n    while(t--)\r\n    {\r\n           scanf(\"%llu%llu\",&n,&m);\r\n           if( (n%2 == 0 && m%2 == 0) || n*m % 2 == 1)\r\n            printf(\"Tonya\\n\");\r\n            else\r\n            printf(\"Burenka\\n\");\r\n\r\n    }\r\n    return(0);\r\n}"}
{"similarity_score": 0.8915441176470589, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "0449ee5dd256712edbaf755419918e8d", "bug_code_uid": "b4e83880dcd61764248d4e6e72db716d", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "0c9e17a959bda054ffbcc23ea0c307a4", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{\n\tchar s[100000];\n\tint i;\n\tchar b[20]=\"Bulbasaur\";\n//for(i=0;i<9;i++)\n//\tprintf(\"%c\\n\",b[i]);\n//\tprintf()\n\tscanf(\"%s\",s);\n\tint l=strlen(s),m=strlen(b),a[1000],count=0;\n\t\n\tfor(i=0;i<200;i++)\n\t\ta[s[i]]=0;\n\n\n\tfor(i=0;i<200;i++)\n\t\n\t\t\ta[s[i]]++;\n\n\t\n\ta[97]=a[97]/2;\n\ta[117]=a[117]/2;\n\tint min=a[b[0]];\nfor(i=1;i<9;i++)\n{\n\tif(a[b[i]]<min)\n\t{\n\t\tmin=a[b[i]];\n\t}\n\n\n\n}\n\nfor(i=0;i<m;i++)\nif(a[b[i]]>0)\n{\t\n//\tprintf(\"hello\");\n\tcount=1;\n\n}\n\n\tif(count==1)\n\tprintf(\"%d\\n\",min);\n\n\telse\n\tprintf(\"0\");\n\n\n\n\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{\n\tchar s[100000];\n\tint i;\n\tchar b[9]=\"Bulbasaur\";\n//for(i=0;i<9;i++)\n//\tprintf(\"%c\\n\",b[i]);\n//\tprintf()\n\tscanf(\"%s\",s);\n\tint l=strlen(s),m=strlen(b),a[200],count=0;\n\t\n\tfor(i=0;i<200;i++)\n\t\ta[s[i]]=0;\n\n\n\tfor(i=0;i<l;i++)\n\t\n\t\t\ta[s[i]]++;\n\n\t\n\ta[97]=a[97]/2;\n\ta[117]=a[117]/2;\n\tint min=a[b[0]];\nfor(i=1;i<9;i++)\n{\n\tif(a[b[i]]<min)\n\t{\n\t\tmin=a[b[i]];\n\t}\n\n\n\n}\n\n//for(i=0;i<9;i++)\n//if(a[b[i]]>0)\n//\tcount=1;\n\n\n\n//\tif(count==1)\n\tprintf(\"%d\\n\",min);\n\n//\telse\n//\tprintf(\"0\");\n\n\n\n\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9399656946826758, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "2b9bd6fd240329f87896a62604e8a298", "bug_code_uid": "cc40d1918c47b42d02766d93d535adb4", "src_uid": "fc37ef81bb36f3ac07ce2c4c3ec10d98", "apr_id": "28237cf9c45b512415e2320120918f21", "difficulty": 1100, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\n\nint main() {\n\tint d, h, v, e;\n\tdouble n, r;\n\n\tscanf(\"%d%d%d%d\", &d, &h, &v, &e);\n\tr = (double) d / 2;\n\tn = (double) v * v * v / (r * r * M_PI * h);\n\tif (e >= n)\n\t\tprintf(\"NO\\n\");\n\telse {\n\t\tprintf(\"YES\\n\");\n\t\tprintf(\"%.12lf\\n\", 1 / (n - e));\n\t}\n\treturn 0;\n}\n", "fixed": "#include <math.h>\n#include <stdio.h>\n\nint main() {\n\tint d, h, v, e;\n\tdouble r, hv; \n\n\tscanf(\"%d%d%d%d\", &d, &h, &v, &e);\n\tr = (double) d / 2;\n\thv = (double) v / (r * r * M_PI);\n\tif (e >= hv)\n\t\tprintf(\"NO\\n\");\n\telse {\n\t\tprintf(\"YES\\n\");\n\t\tprintf(\"%.12lf\\n\", h / (hv - e));\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.16062544420753375, "equal_cnt": 18, "replace_cnt": 13, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "1c3a4520efcc6f40aadfbcbe87aa5062", "bug_code_uid": "868f0acb9e05932f3059a94f84e158d9", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "72c97278022fce256de89839bb117ca3", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n#include<stdbool.h>\n\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++){\n\n     int n;\n    scanf(\"%d\",&n);\n     int a[n],freq[200000]={0};\n    bool k=false;\n     int spot;\n    //memset(freq,0,n*sizeof(int));\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n\n\n//        freq[a[i]]++;\n//\n//        if(freq[a[i]]>=3){\n//            spot=a[i];\n//\n//            k=true;\n//        }\n    }\n       for(int i=0;i<n;i++){\n\n\n\n        freq[a[i]]++;\n\n        if(freq[a[i]]>=3){\n            spot=a[i];\n\n            k=true;\n            break;\n        }\n    }\n\n    if(k){\n        printf(\"%d\\n\",spot);\n    }\n    else{\n        printf(\"-1\\n\");\n    }\n\n    }\n\n\nreturn 0;\n}\n\n \t \t \t\t   \t\t\t    \t\t  \t   \t\t\t\t\t\t", "fixed": "#include<stdio.h>\n#include<string.h>\n\n\nint main(){\n    int tc;\n    scanf(\"%d\", &tc);\n    for(int i = 0; i < tc; i++) {\n\n        int n;\n        scanf(\"%d\", &n);\n        int ar[n];\n        for(int i=0; i<n; i++){\n            scanf (\"%d\", &ar[i]);\n        }\n        int count[n];\n        memset(count, 0, n*sizeof(int));\n        for (int i=0; i<n; i++){\n            int val= ar[i]-1;\n            count[val]++;\n        }\n        int result= -1;\n        for(int val=0; val<n; val++){\n           //printf(\"%d %d\\n\", val, count[val]);\n\n            if(count[val]>=3){\n                result= val+1;\n            }\n    }\n        printf(\"%d\\n\", result);\n\n}\n}\n\n\n\t  \t\t \t  \t  \t   \t\t\t\t\t \t \t\t\t\t\t \t"}
{"similarity_score": 0.7834757834757835, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a923630bc75479d24aec33cb34b8becc", "bug_code_uid": "2ce784074b93bedabf3d0bd17135dcc5", "src_uid": "a5edbf422616cdac35e95a4f07efc7fd", "apr_id": "a472891efa8d73e33b9a379c0a102738", "difficulty": 800, "tags": ["implementation", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tint ratings[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\", &ratings[i]);\n\t}\n\n\tint position;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tposition=1;\n\t\tfor (int j = 0; j < n; ++j)\n\t\t{\n\t\t\tif ((ratings[j]>ratings[i]) && (j!=0))\n\t\t\t{\n\t\t\t\t++position;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d \", position);\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tint ratings[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\", &ratings[i]);\n\t}\n\n\tint position;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tposition=1;\n\t\tfor (int j = 0; j < n; ++j)\n\t\t{\n\t\t\tif ((ratings[j]>ratings[i]) && (j!=i))\n\t\t\t{\n\t\t\t\t++position;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d \", position);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9212903225806451, "equal_cnt": 30, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 29, "fix_ops_cnt": 30, "lang": "GNU C11", "fix_code_uid": "0aef83b030702917b40bd08c9672da67", "bug_code_uid": "386a8624bf26cd79fba000abf361d611", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "1d2766944a25b12f41c3b4d537141bd8", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "        #include<stdio.h>\n        #include<string.h>\n        int main()\n        {\n            int n,max=-1,l;\n            scanf(\"%d\",&n);\n            char a[n][100];\n            for(int i=0;i<n;i++)\n            {\n                scanf(\"%s\",a[i]);\n            }\n            for(int i=0;i<n;i++)\n            {\n                int z=0;\n                for(int j=0;j<n;j++)\n                {\n                    if(strcmp(a[i],a[j])==0)\n                    {\n                        z++;\n                    }\n                }\n                if(max<z)\n                {\n                    max=z;\n                    l=i;\n                }\n            }\n            printf(\"%s\",a[l]);\n        }\n        return 0;\n        }", "fixed": "            #include<stdio.h>\n            #include<string.h>\n            int main()\n            {\n                int n,max=-1,l;\n                scanf(\"%d\",&n);\n                char a[n][100];\n                for(int i=0;i<n;i++)\n                {\n                    scanf(\"%s\",a[i]);\n                }\n                for(int i=0;i<n;i++)\n                {\n                    int z=0;\n                    for(int j=0;j<n;j++)\n                    {\n                        if(strcmp(a[i],a[j])==0)\n                        {\n                            z++;\n                        }\n                    }\n                    if(max<z)\n                    {\n                        max=z;\n                        l=i;\n                    }\n                }\n                printf(\"%s\",a[l]);\n            return 0;\n            }"}
{"similarity_score": 0.5833333333333334, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "6e294a71c8bf5fd8dbca5c0c369bd60a", "bug_code_uid": "e7630d17a53a8cdeaf32aa6f2f953ab8", "src_uid": "bf0422de4347a308d68a52421fbad0f3", "apr_id": "b7a4f6f54d1875bf0d0d8468c8235284", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint binary(int arr[],int k,int l,int h)\n{\n  while(l<=h)\n  {\n      int m=l+(h-l)/2;\n      if(arr[m]==k)\n        return 1;\n      else if(arr[m]<k)\n        l=m+1;\n      else\n        h=m-1;\n  }\n  return -1;\n}\nint main()\n{\n    int n,m,i,k=0;\n    scanf(\"%d%d\",&n,&m);\n    int *a=(int*)malloc(sizeof(int)*n);\n    int *b=(int*)malloc(sizeof(int)*m);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n     for(i=0;i<m;i++)\n        scanf(\"%d\",&b[i]);\n        \n        k=n;\n        for(i=0;i<k;i++)\n        {\n            if(binary(b,a[i],0,m-1)==1)\n                n--;\n\n        }\n        printf(\"%d\",n);\n            return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,m,i,j;\n    scanf(\"%d%d\",&n,&m);\n    int *a=(int*)malloc(sizeof(int)*n);\n    int *b=(int*)malloc(sizeof(int)*m);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n        i=0;\n     for(i=0;i<m;i++)\n        scanf(\"%d\",&b[i]);\n        i=0;j=0;\n        while(i<n&&j<m)\n        {\n            if(a[i]<=b[j])\n            {\n                i++;\n                j++;\n            }\n            else\n                j++;\n        }\n\n       printf(\"%d\",n-i);\n       return 0;\n}\n"}
{"similarity_score": 0.9804469273743017, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "72cf54e6f123a937eda8d0af7c7c4a5d", "bug_code_uid": "54ce6f5db03df2fdcd491215ad4bd48e", "src_uid": "b5355e1f4439b198d2cc7dea01bc4bc3", "apr_id": "b25e8657bcf091687a39409805979b2c", "difficulty": 1200, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint comp(const void*a,const void*b)\n{\n    return *(int*)a-*(int*)b;\n}\nint main()\n{\n    int n,k,sum=0,i,j;\n    scanf(\"%d %d\",&n,&k);\n    int a[10],b[10],c[10];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        sum=sum+b[i];\n    }\n\n    for(i=0;i<n;i++)\n    {\n        c[i]=a[i]-b[i];\n    }\n    qsort(c,n,sizeof(int),comp);\n    for(i=0;i<n;i++)\n    {\n        if(k>0)\n        {\n            sum=sum+c[i];\n            k--;\n        }\n        else\n        {\n            if(c[i]<=0)\n                sum=sum+c[i];\n            else\n                break;\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint comp(const void*a,const void*b)\n{\n    return *(int*)a-*(int*)b;\n}\nint main()\n{\n    int n,k,sum=0,i,j;\n    scanf(\"%d %d\",&n,&k);\n    int a[200000],b[200000],c[200000];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        sum=sum+b[i];\n    }\n\n    for(i=0;i<n;i++)\n    {\n        c[i]=a[i]-b[i];\n    }\n    qsort(c,n,sizeof(int),comp);\n    for(i=0;i<n;i++)\n    {\n        if(k>0)\n        {\n            sum=sum+c[i];\n            k--;\n        }\n        else\n        {\n            if(c[i]<=0)\n                sum=sum+c[i];\n            else\n                break;\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.8828337874659401, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1e2c7a570bedb4df89771eac0954d4df", "bug_code_uid": "17997ce8ec052ea0a14ac64589c0d226", "src_uid": "ce4443581d4ee12db6607695cd567070", "apr_id": "95ecec9d078abfc90fc46d53fc153fe0", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,a;\n    scanf(\"%d\",&n);\n    char s[n+1];\n    scanf(\"%s\",s);\n    a=strlen(s);\n    for(i=0;i<=a-2;i++)\n    {\n        if(s[i+1]!=s[i])\n        {\n            printf(\"YES\\n%c%c\",s[i],s[i+1]);\n            break;\n        }\n        if(i==a-2)\n        {\n            printf(\"NO\");\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,a;\n    scanf(\"%d\",&n);\n    char s[n+1];\n    scanf(\"%s\",s);\n    a=strlen(s);\n    if(a==1)\n    {\n        printf(\"NO\");\n    }\n    else{\n    for(i=0;i<=a-2;i++)\n    {\n        if(s[i+1]!=s[i])\n        {\n            printf(\"YES\\n%c%c\",s[i],s[i+1]);\n            break;\n        }\n        if(i==a-2)\n        {\n            printf(\"NO\");\n        }\n    }}\n}\n\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.9985714285714286, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e22593af30f58be78f8a6757946e1e43", "bug_code_uid": "f5926d7d030290f9f8b8aa8d93ba54fb", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "05bec90b75f7530d14fe50f357ed3397", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define max 2000\nint main(){\n    int sign,i,j,n,per,first;\n    int arr[max];\n    while(scanf(\"%d\",&n) != EOF){\n        first = 0;\n        for(i = 0;i < n;i++){\n            scanf(\"%d\",&arr[i]);\n            sign = 0;\n            for(j = 1;j * j <= arr[i];j++){\n                if(j * j == arr[i]){\n                    sign = 1;\n                    break;\n                }\n            }\n            if(sign == 0){\n                if(first == 0){\n                    first = 1;\n                    per = arr[i];\n                }\n                if(first == 1 && arr[i] > per)\n                    per = arr[i];\n            }\n        }\n        printf(\"%d\\n\",per);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define max 2000\nint main(){\n    int sign,i,j,n,per,first;\n    int arr[max];\n    while(scanf(\"%d\",&n) != EOF){\n        first = 0;\n        for(i = 0;i < n;i++){\n            scanf(\"%d\",&arr[i]);\n            sign = 0;\n            for(j = 0;j * j <= arr[i];j++){\n                if(j * j == arr[i]){\n                    sign = 1;\n                    break;\n                }\n            }\n            if(sign == 0){\n                if(first == 0){\n                    first = 1;\n                    per = arr[i];\n                }\n                if(first == 1 && arr[i] > per)\n                    per = arr[i];\n            }\n        }\n        printf(\"%d\\n\",per);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6692456479690522, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "cee7d8c0b7da6848b63248504dca9960", "bug_code_uid": "cb5b6eef6ac0927e4012586948197eda", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "c6c0d7705124bd5c911078c881600a56", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n    int i, j, k, l, m, n;\n    char a[100001], b[100001], c[100001], t;\n\n    scanf(\"%s\", a);\n    for(i = 0; i < strlen(a); i++){\n        if(a[i] == '.'){\n            break;\n        }\n        b[i] = a[i];\n    }\n    b[i] = '\\0';\n\n    l = -1;\n    for(i = 0; i < strlen(b) - 1; i++){\n        if((b[i] - '0') % 2 == 0 && b[i] < b[strlen(b) - 1]){\n            t = b[i];\n            b[i] = b[strlen(b) - 1];\n            b[strlen(b) - 1] = t;\n\n            printf(\"%s\\n\", b);\n            return 0;\n        }\n    }\n\n    for(i = strlen(b) - 1; i >= 0; i--){\n        if((b[i] - '0') % 2 == 0 && b[i] > b[strlen(b) - 1]){\n            t = b[i];\n            b[i] = b[strlen(b) - 1];\n            b[strlen(b) - 1] = t;\n\n            printf(\"%s\\n\", b);\n            return 0;\n        }\n    }\n\n    printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(){\n    int i, j, k, l, m, n;\n    char a[100001], t;\n\n    scanf(\"%s\", a);\n\n    for(i = 0; i < strlen(a) - 1; i++){\n        if((a[i] - '0') % 2 == 0 && a[i] < a[strlen(a) - 1]){\n            t = a[i];\n            a[i] = a[strlen(a) - 1];\n            a[strlen(a) - 1] = t;\n\n            printf(\"%s\\n\", a);\n            return 0;\n        }\n    }\n\n    for(i = strlen(a) - 1; i >= 0; i--){\n        if((a[i] - '0') % 2 == 0 && a[i] > a[strlen(a) - 1]){\n            t = a[i];\n            a[i] = a[strlen(a) - 1];\n            a[strlen(a) - 1] = t;\n\n            printf(\"%s\\n\",a);\n            return 0;\n        }\n    }\n\n    printf(\"-1\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.26802507836990597, "equal_cnt": 18, "replace_cnt": 16, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "452c4d0536e33ee711a0750168dede0d", "bug_code_uid": "15889e2c0e81b05d88a625e581e3bd0e", "src_uid": "56fbdca75b69bf41d2a45a1dfe81d022", "apr_id": "d3361044677bd5bee3b6a107662d3dfd", "difficulty": 1700, "tags": ["bitmasks", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint N,n,m,a,b,r;\nint ans[50][50];\nint main(int argc, char const *argv[])\n{\tif(scanf(\"%d\",&N));\n\tfor (int i=0;i<N;i++){\n\t\tif(scanf(\"%d %d %d %d\",&n,&m,&a,&b));\n\t\t\n\t\tif (a*n != b*m | a>m | b>n){\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse{\n\t\t\tmemset(ans, 0, sizeof ans);\n\t\t\t/*for (int j=0;j<50;j++ ){\n\t\t\tfor (int k=0;k<50;k++){\n\t\t\t\tans[j][k]=0;\n\t\t\t}\n\t\t\t}*/\n\n\t\t\tr=0;\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor (int j=0;j<n;j++){\n\t\t\t\tfor (int k=0;k<a;k++){\n\t\t\t\t\tans[j][(r+k)%m]=1;\n\t\t\t\t}\n\t\t\t\tr+=a;\n\t\t\t}\n\t\t\tfor (int j=0;j<n;j++){\n\t\t\t\tfor ( int k=0;k<m;k++){\n\t\t\t\t\tprintf(\"%d\",ans[j][k] );\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\t\t\n\t\t\t}\n\n\t\t}\n\t\n\n\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint N;\nint a[21];\nint n,c;\n\nunsigned long long int ans,num;\nint main(int argc, char const *argv[])\n{\t\n\tif(scanf(\"%d\",&N)!=EOF);\n\tfor (int i=0;i<21;i++){\n\t\ta[i]=0;\n\t}\n\tfor (int i=0;i<N;i++){\n\t\tif(scanf(\"%llu\",&num)!=EOF);\n\t\tc=0;n=1;\n\t\twhile(n<num){\n\t\t\tn*=2;\n\t\t\tc++;\n\t\t} \n\t\twhile(num!=0){\n\t\t\tif (num>=n){\n\t\t\t\tnum-=n;\n\t\t\t\ta[c]+=1;\n\n\t\t\t}\n\t\t\tn/=2;\n\t\t\tc--;\n\t\t}\n\t\t/*for (int i=0;i<21;i++){\n\t\t\tprintf(\"%d\\n\",a[i] );\n\t\t}*/\n\t}\n\tans=0;\n\tfor (int i=0;i<N;i++){\n\t\tnum=0;\n\t\tn=1;\n\t\tfor (int j=0;j<21;j++){\n\t\t\tif (a[j]>0){\n\t\t\t\tnum+=n;\n\t\t\t\ta[j]--;\n\t\t\t}\n\t\t\tn*=2;\n\t\t}\n\t\tans+=num*num;\n\t}\n\tprintf(\"%llu\\n\",ans );\n\treturn 0;\n}"}
{"similarity_score": 0.9072398190045249, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "66af58797da2f00980308906d78885e4", "bug_code_uid": "d3366110b6e740be7a5d315936e6f543", "src_uid": "53975eea2503bb47bfd0a5119406aea3", "apr_id": "f3f8769f35d8b78c40268693c715e260", "difficulty": 1300, "tags": ["binary search", "brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\n    long long int t,k,n,i,x,j,sum;\r\n    long long int p[100];\r\n    scanf(\"%lld\",&t);\r\n    while(t--) {\r\n    \tsum=0;\r\n    \tscanf(\"%lld%lld\",&n,&k);\r\n    \tfor(i=0;i<n;i++) {\r\n    \t\tscanf(\"%lld\",&p[i]);\r\n\t\t} x=p[0];\r\n\t\t for(i=1;i<n;i++) {\r\n\t\t\tif(p[i]*100>x*k) {\r\n\t\t\t\tsum+=p[i]*100/k-x;\r\n\t\t\t    if((p[i]*100)%k) sum++;\r\n\t\t\t} x+=p[i];\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",sum);\r\n\t}\r\n\treturn 0;\t\r\n} \r\n\r\n", "fixed": "#include<stdio.h>\r\n \r\nint main()\r\n{\r\n    long long int t,k,n,i,x,j,sum;\r\n    long long int p[101];\r\n    scanf(\"%lld\",&t);\r\n    while(t--) {\r\n    \tsum=0;\r\n    \tscanf(\"%lld%lld\",&n,&k);\r\n    \tfor(i=0;i<n;i++) {\r\n    \t\tscanf(\"%lld\",&p[i]);\r\n\t\t} x=p[0];\r\n\t\t for(i=1;i<n;i++) {\r\n\t\t\tif(p[i]*100>x*k) {\r\n\t\t\t\tsum+=p[i]*100/k-x;\r\n\t\t\t\tx=p[i]*100/k;\r\n\t\t\t    if((p[i]*100)%k) {\r\n\t\t\t    \tx++; sum++;\r\n\t\t\t\t}\r\n\t\t\t} x+=p[i];\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",sum);\r\n\t}\r\n\treturn 0;\t\r\n} \r\n\r\n"}
{"similarity_score": 0.7116968698517299, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "1dfdf532cd57cfe1557b73e106c12a69", "bug_code_uid": "b57af9ee4bae5e763d996d6943bc6250", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "678fbea3212b7b915e5b71095a240e42", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, a[1000];\n\tint k=0, b[1000]={0,};\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tif(a[i]==1){\n\t\t\tif(i>1) b[k]=a[i-1];\n\t\t\tk++;\n\t\t}\n\t}\n\tb[k]=a[n-1];\n\tprintf(\"%d\\n\", k);\n\tfor(int i=1; i<=k; i++){\n\t\tprintf(\"%d \", b[i]);\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, a[1000];\n\tint k=0, b[1000]={0,};\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tif(a[i]==1){\n\t\t\tk++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", k);\n\tint j=0;\n\tfor(int i=1; i<n; i++){\n\t\tif(a[i]==1){\n\t\t\tb[j]=a[i-1];\n\t\t\tj++;\n\t\t}\n\t}\n\tb[j]=a[n-1];\n\tfor(int i=0; i<=j; i++) printf(\"%d \", b[i]);\n}"}
{"similarity_score": 0.9960159362549801, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e6d482506e6045df654882c5603e7cab", "bug_code_uid": "e34107f603d77fd414d174493692387b", "src_uid": "cdafe800094113515e1de1acb60c4bb5", "apr_id": "de3b1c522a169a2838361e407895865a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\t\n\t\t\nint main()\n{\n\tint q;\n\tscanf(\"%d\",&q);\n\tint i;\n\tint l1,r1,l2,r2;\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&l1,&r1,&l2,&r2);\n\t\tif(l1==l2) printf(\"%d %d\\n\",r1,l2);\n\t\telse\n\t\tprintf(\"%d %d\\n\",l1,r2);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\t\n\t\t\nint main()\n{\n\tint q;\n\tscanf(\"%d\",&q);\n\tint i;\n\tint l1,r1,l2,r2;\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&l1,&r1,&l2,&r2);\n\t\tif(l1==r2) printf(\"%d %d\\n\",r1,l2);\n\t\telse\n\t\tprintf(\"%d %d\\n\",l1,r2);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.982836495031617, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "eb0ce8c23ef4aea46ff67ad1b375f478", "bug_code_uid": "863efde7baa5263f110fd628a0b2f212", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "677ae6da8e3c782812bddbae54bb2d6f", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,t,i,j=1,flag=0;\n\tscanf(\"%d\",&n);\n\tint array[n];\n\tif(n==4)\n\t{\n\t\tprintf(\"4\\n\");\n\t\tprintf(\"3 1 4 2\\n\");\n\t}\n\telse if(n==3)\n\t{\n\t\tprintf(\"2\\n\");\n\t\tprintf(\"1 3\\n\");\n\t}\n\telse if(n==2)\n\t{\n\t\tprintf(\"0\\n\");\n\t}\n\telse if(n==1)\n\t{\n\t\tprintf(\"1\\n\");\n\t\tprintf(\"1\\n\");\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<n;)\n\t\t{\n\t\t\tarray[i]=j;\n\t\t\tj++;\n\t\t\ti+=2;\n\t\t\tif(i>=n && flag==0)\n\t\t\t{\tflag=1;\n\t\t\t\ti=1;\n\t\t\t}\n\t\t\telse if(i>=n &&flag==1)\n\t\t\t\tbreak;\n\t\t}\n\t\tprintf(\"%d\\n\",n );\n\t\tfor(i=0;i<n;i++)\n\t\t\tprintf(\"%d \",array[i] );\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,t,i,j=1,flag=0;\n\tscanf(\"%d\",&n);\n\tint array[n];\n\tif(n==4)\n\t{\n\t\tprintf(\"4\\n\");\n\t\tprintf(\"3 1 4 2\\n\");\n\t}\n\telse if(n==3)\n\t{\n\t\tprintf(\"2\\n\");\n\t\tprintf(\"1 3\\n\");\n\t}\n\telse if(n==2)\n\t{\n\t\tprintf(\"1\\n\");\n\t\tprintf(\"1\\n\");\n\t}\n\telse if(n==1)\n\t{\n\t\tprintf(\"1\\n\");\n\t\tprintf(\"1\\n\");\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<n;)\n\t\t{\n\t\t\tarray[i]=j;\n\t\t\tj++;\n\t\t\ti+=2;\n\t\t\tif(i>=n && flag==0)\n\t\t\t{\tflag=1;\n\t\t\t\ti=1;\n\t\t\t}\n\t\t\telse if(i>=n &&flag==1)\n\t\t\t\tbreak;\n\t\t}\n\t\tprintf(\"%d\\n\",n );\n\t\tfor(i=0;i<n;i++)\n\t\t\tprintf(\"%d \",array[i] );\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9564293304994687, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5a7e8159b0b5c4f8920a6f9667b75e1e", "bug_code_uid": "46fba447cd422f6dd9f28203fd6b5c4b", "src_uid": "859d66fc2c204a8c002012b1fb206645", "apr_id": "4d351f0e5e4bec314e4dbd2c2b5230a7", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "int main(void)\n{\n    int b, l, s, n, i=-1, lines[100];\n    scanf(\"%d\",&n);\n    while(++i<n) // Number of birds on line\n       scanf(\"%d\",&lines[i]);\n    scanf(\"%d\",&s);\n    while(s--)\n    {\n       scanf(\"%d %d\", &l, &b);\n       --l;\n       if(l>0) //Move down\n          lines[l-1]+=(b-1);\n       if(l+1<n) //Move up\n          lines[l+1]+=lines[l]-b;\n       lines[l]=0;\n    }\n    s=-1;\n    while(++s<n)\n       printf(\"%d\\n\",lines[s]);\n    system(\"pause\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int b, l, s, n, i=-1, lines[100];\n    scanf(\"%d\",&n);\n    while(++i<n) // Number of birds on line\n       scanf(\"%d\",&lines[i]);\n    scanf(\"%d\",&s);\n    while(s--)\n    {\n       scanf(\"%d %d\", &l, &b);\n       --l;\n       if(l>0) //Move down\n          lines[l-1]+=(b-1);\n       if(l+1<n) //Move up\n          lines[l+1]+=lines[l]-b;\n       lines[l]=0;\n    }\n    s=-1;\n    while(++s<n)\n       printf(\"%d\\n\",lines[s]);\n    return 0;\n}\n"}
{"similarity_score": 0.9034907597535934, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5bc8cf43fa69f9651cb1c6d6695ef124", "bug_code_uid": "54e88b28dee7ae220998b74165ad69cd", "src_uid": "cf7bf89a6038586b69d3b8021cee0b27", "apr_id": "cbc402f17e0fee79954cd17f12476d3e", "difficulty": 800, "tags": ["implementation", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nstruct point\n{\n    int x;\n    int y;\n};\n\nint main()\n{\n    int n,co=0,x,y;\n    struct point pt;\n    scanf(\"%d\",&n);\n    int i;\n    for(i=0;i<n;i++)\n    {   struct point pt={0,0};\n        scanf(\"%d%d\",&x,&y);\n        pt.x+=x;\n        pt.y+=y;\n        if(pt.x<0)\n        {\n            co++;\n        }\n    }\n    if(co>=2)\n    {\n        printf(\"No\");\n    }\n    else\n    {\n        printf(\"Yes\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nstruct point\n{\n    int x;\n    int y;\n};\n\nint main()\n{\n    int n,co=0,co1=0,x,y;\n    struct point pt;\n    scanf(\"%d\",&n);\n    int i;\n    for(i=0;i<n;i++)\n    {   struct point pt={0,0};\n        scanf(\"%d%d\",&x,&y);\n        pt.x+=x;\n        pt.y+=y;\n        if(pt.x<0)\n        {\n            co++;\n        }\n        if(pt.x>0)\n        {\n            co1++;\n        }\n    }\n    if(co>=2&&co1>=2)\n    {\n        printf(\"No\");\n    }\n    else\n    {\n        printf(\"Yes\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9794026776519053, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cd8881290b8e4f1b27713e33721f3369", "bug_code_uid": "98ce1ee150b5450884958eeec04b8e5b", "src_uid": "403805b6986a1dc8560052cf33a7cf18", "apr_id": "7b51eb9bf4b9ed295fd52e058d25692d", "difficulty": 1300, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nchar w[200][200];\r\nint num[10005][4];\r\nint main()\r\n{\r\n\tint t, n, m, count;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tscanf(\"%d%d\", &n, &m);\r\n\t\tcount = 0;\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tgetchar();\r\n\t\t\tscanf(\"%s\", &w[i]);\r\n\t\t}\r\n\t\tif (w[0][0] == '1')\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(int i=0;i<n;i++)\r\n\t\t\t\tfor (int j = 1; j < m; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (w[i][j] == '1')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnum[count][0] = i+1;\r\n\t\t\t\t\t\tnum[count][1] = j;\r\n\t\t\t\t\t\tnum[count][2] = i+1;\r\n\t\t\t\t\t\tnum[count][3] = j+1;\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tfor (int i = 1; i < n; i++)\r\n\t\t\t{\r\n\t\t\t\tif (w[i][0] == '1')\r\n\t\t\t\t{\r\n\t\t\t\t\tnum[count][0] = i;\r\n\t\t\t\t\tnum[count][1] = 1;\r\n\t\t\t\t\tnum[count][2] = i + 1;\r\n\t\t\t\t\tnum[count][3] = 1;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (count != 0) {\r\n\t\t\t\tprintf(\"%d\\n\", count);\r\n\t\t\t\tfor (int i = 0; i < count; i++)\r\n\t\t\t\t\tprintf(\"%d %d %d %d\\n\", num[i][0], num[i][1], num[i][2], num[i][3]);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tprintf(\"0\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nchar w[200][200];\r\nint num[10005][4];\r\nint main()\r\n{\r\n\tint t, n, m, count;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tscanf(\"%d%d\", &n, &m);\r\n\t\tcount = 0;\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tgetchar();\r\n\t\t\tscanf(\"%s\", &w[i]);\r\n\t\t}\r\n\t\tif (w[0][0] == '1')\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(int i=0;i<n;i++)\r\n\t\t\t\tfor (int j = m-1; j >=1; j--)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (w[i][j] == '1')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnum[count][0] = i+1;\r\n\t\t\t\t\t\tnum[count][1] = j;\r\n\t\t\t\t\t\tnum[count][2] = i+1;\r\n\t\t\t\t\t\tnum[count][3] = j+1;\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tfor (int i = n-1; i >=1; i--)\r\n\t\t\t{\r\n\t\t\t\tif (w[i][0] == '1')\r\n\t\t\t\t{\r\n\t\t\t\t\tnum[count][0] = i;\r\n\t\t\t\t\tnum[count][1] = 1;\r\n\t\t\t\t\tnum[count][2] = i + 1;\r\n\t\t\t\t\tnum[count][3] = 1;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (count != 0) {\r\n\t\t\t\tprintf(\"%d\\n\", count);\r\n\t\t\t\tfor (int i = 0; i < count; i++)\r\n\t\t\t\t\tprintf(\"%d %d %d %d\\n\", num[i][0], num[i][1], num[i][2], num[i][3]);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tprintf(\"0\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9347442680776014, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9198e536da1516c13bc88d45d946d5a3", "bug_code_uid": "268cda3cb6477de2bf39450e0fd47bb8", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "a13837faef5372555f4a1be769e5857a", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int mut(long long int a){return (a<0)?-a:a;}\nlong long int min(long long int a,long long int b){return (a>b)?b:a;}\nlong long int max(long long int a,long long int b){return (a<b)?b:a;}\nint main(){\n\tlong long int i,n,x[100005] = {0};\n\tscanf(\"%lld\",&n);\n\tfor(i = 0 ; i < n ; i++)\n\t\tscanf(\"%lld\",&x[i]);\n\tprintf(\"%lld %lld\\n\",x[1]-x[0],x[n-1]-x[0]);\n\tfor(i = 1 ; i < n-1 ; i++)\n\t\tprintf(\"%lld %lld\\n\",max(mut(x[i]-x[0]),mut(x[i]-x[n-1])),min(mut(x[i]-x[i-1]),mut(x[i]-x[i+1])));\n\tprintf(\"%lld %lld\\n\",x[n-1]-x[n-2],x[n-1]-x[0]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int mut(long long int a){return (a<0)?-a:a;}\nlong long int min(long long int a,long long int b){return (a>b)?b:a;}\nlong long int max(long long int a,long long int b){return (a<b)?b:a;}\nint main(){\n\tlong long int i,n,x[100005] = {0};\n\tscanf(\"%lld\",&n);\n\tfor(i = 0 ; i < n ; i++)\n\t\tscanf(\"%lld\",&x[i]);\n\tprintf(\"%lld %lld\\n\",x[1]-x[0],x[n-1]-x[0]);\n\tfor(i = 1 ; i < n-1 ; i++)\n\t\tprintf(\"%lld %lld\\n\",min(mut(x[i]-x[i-1]),mut(x[i]-x[i+1])),max(mut(x[i]-x[0]),mut(x[i]-x[n-1])));\n\tprintf(\"%lld %lld\\n\",x[n-1]-x[n-2],x[n-1]-x[0]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6875, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "9c6993778b5679309decc18eff7f1a4a", "bug_code_uid": "a5fc71cce15374315bb849f4e2bbcb9e", "src_uid": "5e4defe52832cc0d36e7ea5d9f86f895", "apr_id": "6d9832c53fa0d4e8dcece778008f77ee", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nchar c[20000];\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int i, numi=0, numa=0, res=0;\n    for (i=0; i<=n; i++) {\n        scanf(\"%c\", &c[i]);\n        if (c[i]=='A')\n            numa++;\n        else\n            if (c[i]=='I')\n                numi++;\n    }\n    if (numi==1)\n        res=1;\n    else\n        if (numi==0 && numa!=0)\n            res=numa;\n    printf(\"%d\", res);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n;\n    char c;\n    scanf(\"%d\", &n);\n    int i, numi=0, numa=0, res=0;\n    for (i=0; i<=n; i++) {\n        scanf(\"%c\", &c);\n        if (c=='A')\n            numa++;\n        else\n            if (c=='I')\n                numi++;\n    }\n    if (numi==1)\n        res=1;\n    else\n        if (numi==0 && numa!=0)\n            res=numa;\n    printf(\"%d\", res);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9881235154394299, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0416271da20de23b7ed0a88fdaf64ac1", "bug_code_uid": "da3f1e33a554f679ee7337fd649bb60f", "src_uid": "bfd7aabf195321249db8760c3cb6998d", "apr_id": "d8a38e02c0ace349dedd152dff704e5f", "difficulty": 1600, "tags": ["two pointers", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n\tint k;\n\tint c;\n} figure;\n\nint cmp(const void *a, const void *b)\n{\n\treturn ((figure *)a)->c - ((figure *)b)->c;\n}\n\nint main()\n{\n\tint n, t, i, j;\n\tlong long sum = 0, f = 1, x = 0;\n\tfigure a[100];\n\tlong long p[100];\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++) scanf(\"%d %d\", &a[i].k, &a[i].c);\n\n\tscanf(\"%d\", &t);\n\n\tfor (i = 0; i < t; i++) scanf(\"%I64d\", &p[i]);\n\n\tqsort(a, n, sizeof(figure), cmp);\n\n\tfor (i = 0; i < t; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (x + a[j].k < p[i]) {\n\t\t\t\tsum += f * a[j].k * a[j].c;\n\n\t\t\t\tx += a[j].k;\n\n\t\t\t\ta[j].k = 0;\n\t\t\t} else {\n\t\t\t\tsum += f * (p[i] - x) * a[j].c;\n\n\t\t\t\ta[j].k -= p[i] - x;\n\n\t\t\t\tx = p[i];\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tf++;\n\t}\n\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i].k > 0) sum += f * a[j].k * a[j].c;\n\t}\n\n\tprintf(\"%I64d\\n\", sum);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n\tint k;\n\tint c;\n} figure;\n\nint cmp(const void *a, const void *b)\n{\n\treturn ((figure *)a)->c - ((figure *)b)->c;\n}\n\nint main()\n{\n\tint n, t, i, j;\n\tlong long sum = 0, f = 1, x = 0;\n\tfigure a[100];\n\tlong long p[100];\n\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++) scanf(\"%d %d\", &a[i].k, &a[i].c);\n\n\tscanf(\"%d\", &t);\n\n\tfor (i = 0; i < t; i++) scanf(\"%I64d\", &p[i]);\n\n\tqsort(a, n, sizeof(figure), cmp);\n\n\tfor (i = 0; i < t; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (x + a[j].k < p[i]) {\n\t\t\t\tsum += f * a[j].k * a[j].c;\n\n\t\t\t\tx += a[j].k;\n\n\t\t\t\ta[j].k = 0;\n\t\t\t} else {\n\t\t\t\tsum += f * (p[i] - x) * a[j].c;\n\n\t\t\t\ta[j].k -= p[i] - x;\n\n\t\t\t\tx = p[i];\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tf++;\n\t}\n\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i].k > 0) sum += f * a[i].k * a[i].c;\n\t}\n\n\tprintf(\"%I64d\\n\", sum);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9897510980966325, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8111551389831fac8b9129eb4ab9aaad", "bug_code_uid": "414ac91e2a618256dcb416a9c189bb5c", "src_uid": "de8c909d6ca4f3b2f885fc60be246458", "apr_id": "9ba7474984fdfaebe582e599c6720917", "difficulty": 2100, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nusing namespace std;\nint main(){\n\tint i,j,k;\n\tdouble v,u,a,l,d,vmax,w,dist,ve,s1,s2,ans,mid;\n\t\n\tscanf(\"%lf%lf\",&a,&vmax);\n\tscanf(\"%lf%lf%lf\",&l,&d,&w);\n\t\n\tans = 0;\n\tv = (2*a*d);\n\tv = sqrt(v);\n\tif(vmax<v)\n\t\tv = vmax;\n\tif((w-v)>=1e-7){\n\t\tans += v/a;\n\t\tdist = ((v*v)/(2*a));\n\t\tdist = d-dist;\n\t\tans += (dist/v);\n\t}\n\telse{\n\t\ts1 = (vmax*vmax)/(2*a);\n\t\ts2 = ((vmax*vmax) - (w*w))/(2*a);\n\t\tif((d-(s1+s2))>1e-7){\n\t\t\tdist = d-(s1+s2);\n\t\t\tans += (dist)/vmax;\n\t\t\tans += (vmax/a);\n\t\t\tans += ((vmax-w)/a);\n\t\t}\n\t\telse{\n\t\t\tu = 0;\n\t\t\tv = vmax;\n\t\t\twhile(fabs(v-u)>1e-7){\n\t\t\t\tmid = u + (v-u)/2;\n\t\t\t\ts1 = (mid*mid)/(2*a);\n\t\t\t\ts2 = ((mid*mid) - (w*w))/(2*a);\n\t\t\t\tif((s1+s2)>d)\n\t\t\t\t\tv = mid;\n\t\t\t\telse\n\t\t\t\t\tu = mid;\n\t\t\t}\n\t\t\tans += (v/a);\n\t\t\tans += ((v-w)/a);\n\t\t}\n\t\tv = w;\n\t}\n\td = l-d;\t\n\tdist = ((vmax*vmax) - (v*v))/(2*a);\n\tif(dist > d){\n\t\tu = (v*v) + (2*a*d);\n\t\tu = sqrt(u);\n\t\tans += ((u-v)/a);\n\t}\n\telse{\n\t\td -= dist;\n\t\tans += (d/vmax);\n\t\tans += ((vmax-v)/a);\n\t}\n\tprintf(\"%.5lf\\n\",ans);\n\treturn 0;\n}\n\t\n\t\t\n\t\n\t\t\t\n\t\t\t\n\t\t\n\t\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(){\n\tint i,j,k;\n\tdouble v,u,a,l,d,vmax,w,dist,ve,s1,s2,ans,mid;\n\t\n\tscanf(\"%lf%lf\",&a,&vmax);\n\tscanf(\"%lf%lf%lf\",&l,&d,&w);\n\t\n\tans = 0;\n\tv = (2*a*d);\n\tv = sqrt(v);\n\tif(vmax<v)\n\t\tv = vmax;\n\tif((w-v)>=1e-7){\n\t\tans += v/a;\n\t\tdist = ((v*v)/(2*a));\n\t\tdist = d-dist;\n\t\tans += (dist/v);\n\t}\n\telse{\n\t\ts1 = (vmax*vmax)/(2*a);\n\t\ts2 = ((vmax*vmax) - (w*w))/(2*a);\n\t\tif((d-(s1+s2))>1e-7){\n\t\t\tdist = d-(s1+s2);\n\t\t\tans += (dist)/vmax;\n\t\t\tans += (vmax/a);\n\t\t\tans += ((vmax-w)/a);\n\t\t}\n\t\telse{\n\t\t\tu = 0;\n\t\t\tv = vmax;\n\t\t\twhile(fabs(v-u)>1e-7){\n\t\t\t\tmid = u + (v-u)/2;\n\t\t\t\ts1 = (mid*mid)/(2*a);\n\t\t\t\ts2 = ((mid*mid) - (w*w))/(2*a);\n\t\t\t\tif((s1+s2)>d)\n\t\t\t\t\tv = mid;\n\t\t\t\telse\n\t\t\t\t\tu = mid;\n\t\t\t}\n\t\t\tans += (v/a);\n\t\t\tans += ((v-w)/a);\n\t\t}\n\t\tv = w;\n\t}\n\td = l-d;\t\n\tdist = ((vmax*vmax) - (v*v))/(2*a);\n\tif(dist > d){\n\t\tu = (v*v) + (2*a*d);\n\t\tu = sqrt(u);\n\t\tans += ((u-v)/a);\n\t}\n\telse{\n\t\td -= dist;\n\t\tans += (d/vmax);\n\t\tans += ((vmax-v)/a);\n\t}\n\tprintf(\"%.5lf\\n\",ans);\n\treturn 0;\n}\n\t\n\t\t\n\t\n\t\t\t\n\t\t\t\n\t\t\n\t\n"}
{"similarity_score": 0.9778481012658228, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a478754f8a928b6aee2ce0a7013f1c1f", "bug_code_uid": "d5f088ac800da6514d6419dbe241b1d0", "src_uid": "c34db7897f051b0de2f49f2696c6ee2f", "apr_id": "752d92e91d1ee736b496a44029d0bd6d", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,l,r,x,y;\r\n    scanf(\"%d\",&t);\r\n    while(t--) {\r\n        scanf(\"%d%d\",&l,&r);\r\n        x=(r-l)/2;\r\n        y=r-l;\r\n        {\r\n            if(x<=y)\r\n               printf(\"%d\\n\",x);\r\n            else\r\n               printf(\"%d\\n\",y);\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,r,l,x,y;\r\n    scanf(\"%d\",&t);\r\n    while(t--) {\r\n        scanf(\"%d%d\",&l,&r);\r\n        x=(r-1)/2;\r\n        y=r-l;\r\n        {\r\n            if(x<=y)\r\n               printf(\"%d\\n\",x);\r\n            else\r\n               printf(\"%d\\n\",y);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n    "}
{"similarity_score": 0.9337474120082816, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "be85c36a4d519e5b026c28d31d4ec850", "bug_code_uid": "c15478f892232baa612ffa3a89574948", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "280660df52f57df818b1577ea2d22c4f", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint sum[350000];\nint arr[350000];\nint compare(int *a,int *b){\nreturn *a-*b;}\nint main(){\n    int a,b,c,d;\n    scanf(\"%d\",&a);\n    int i; long long int s=0;\n    for(i=0;i<a;i++){\n            scanf(\"%d\",arr+i);\n            s=s+arr[i];\n    }\n    qsort(arr,a,sizeof(int),compare);\n    for(i=0;i<a;i++){\n    sum[i+1]=arr[i]+sum[i];\n    }\n    long long int max=s;\n    for(i=0;i<a-1;i++){\n    s=s+(max-sum[i]);\n    }\n    printf(\"%lld\",s);\n}\n", "fixed": "#include<stdio.h>\nlong long int sum[350000];\nlong long int arr[350000];\nlong long int compare(long long int *a,long long int *b){\nreturn *a-*b;\n}\nint main(){\n    int a,b,c,d;\n    scanf(\"%d\",&a);\n    int i; long long int s=0;\n    for(i=0;i<a;i++){\n            scanf(\"%lld\",arr+i);\n            s=s+arr[i];\n    }\n    qsort(arr,a,sizeof(long long int),compare);\n    for(i=0;i<a;i++){\n    sum[i+1]=arr[i]+sum[i];\n    }\n    long long int max=s;\n    for(i=0;i<a-1;i++){\n    s=s+(max-sum[i]);\n    }\n    printf(\"%lld\",s);\n}"}
{"similarity_score": 0.18581907090464547, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "126671ffe65d93e14334901e02b6725b", "bug_code_uid": "90672fc7f854c65b803fc98a526af720", "src_uid": "6bb26991c9ea70e51a6bda5653de8131", "apr_id": "c0ed179cdbbb999cd75709fc9e7711a5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,temp=0,a,b,x=0;\n    char s[200];\n    scanf(\"%d\",&a);\n    for(i=1;i<=a;i++)\n    {\n        scanf(\"%s\",s);\n        if(s[0]=='+')\n           ++x;\n        else if(s[0]=='X' && s[1]=='+')\n            x++;\n        else if(s[0]=='-')\n            --x;\n        else if(s[0]=='X' && s[1]=='-')\n            x--;\n    }\n    printf(\"%d\\n\",x);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   long long int i,j,k,x,n,num[101],rem=0;\n   long long int count=0,count2=0;\n   scanf(\"%lld %lld\",&n,&k);\n   for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&x);\n        while(x!=0)\n        {\n             rem=x%10;\n            if(rem==4||rem==7)\n                count++;\n            x=x/10;\n        }\n        if(count<=k)\n            count2++;\n\n        rem = 0;\n        count=0;\n    }\n    printf(\"%lld\\n\",count2);\n}\n"}
{"similarity_score": 0.955456570155902, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b3899fd56dfe3322b5a23faaa42f19eb", "bug_code_uid": "d8e01e1125417daf5e04a92deefcd729", "src_uid": "e22b10cdc33a165fbd73b45dc5fbedce", "apr_id": "f3e9fcac1b5a7c4fb30699ee41741e7d", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\\n\",&n);\n    int *a,*b;\n    a=(int*)malloc(sizeof(int)*n);\n    b=(int*)malloc(sizeof(int)*n);\n\n    int max=0,i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    a[0]=b[0];\n    a[1]=b[1]+a[0];\n    max=a[1]>a[0]?a[1]:a[0];\n    for(i=2;i<n;i++)\n    {\n        a[i]=b[i]+max;\n        max=a[i]>max?a[i]:max;\n    }\n    for(i=0;i<n;i++)\n        printf(\"%d \",a[i]);\n    \n    return 1;\n\n}", "fixed": "int main()\n{\n    int n;\n    scanf(\"%d\\n\",&n);\n    int *a,*b;\n    a=(int*)malloc(sizeof(int)*n);\n    b=(int*)malloc(sizeof(int)*n);\n\n    int max=0,i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    a[0]=b[0];\n    a[1]=b[1]+a[0];\n    max=a[1]>a[0]?a[1]:a[0];\n    for(i=2;i<n;i++)\n    {\n        a[i]=b[i]+max;\n        max=a[i]>max?a[i]:max;\n    }\n    for(i=0;i<n;i++)\n        printf(\"%d \",a[i]);\n    \n    return 0;\n\n}"}
{"similarity_score": 0.9980952380952381, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "379d650aacaa02b51c2a75cffb2c5c58", "bug_code_uid": "fb42e5df270aa6d45528781001393cc3", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "cea7d20b219828b20d5c77c6e400e7ce", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,ara[100001],min,ans,count=0;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&ara[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i==0)\n            min=ara[i];\n        else if(ara[i]<min)\n            min=ara[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(ara[i]==min)\n        {\n            ans=i;\n            count=count+1;\n        }\n    }\n    if(count==1)\n        printf(\"%lld\\n\",ans+1);\n    else\n        printf(\"Still Rodzil\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,ara[100001],min,ans,count=0;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&ara[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i==0)\n            min=ara[i];\n        else if(ara[i]<min)\n            min=ara[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(ara[i]==min)\n        {\n            ans=i;\n            count=count+1;\n        }\n    }\n    if(count==1)\n        printf(\"%lld\\n\",ans+1);\n    else\n        printf(\"Still Rozdil\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.4876237623762376, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "d1309d3366ea58ec28f743fc114793c0", "bug_code_uid": "85ee9b267be8f979f1a742ffca5c3ab7", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "9ef33d7687f1580ab5362c2a1a17c3ca", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[150],b[150],c[150],n,i,sum=0,d[150];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d %d\",&a[i],&b[i],&c[i]);\n        d[i]=a[i]+b[i]+c[i];\n        \n    }\n    for(i=0;i<n;i++)\n    {\n        if(d[i]!=0)\n        {\n        printf(\"NO\");\n        break;\n        }\n    }\n    else\n    {\n        printf(\"YES\");\n    }\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,a[100][10],b[100][10],c[100][10],s1=0,s2=0,s3=0,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n       \n        \n            scanf(\"%d%d%d\",&a[i][0],&b[i][1],&c[i][2]);\n            s1+=a[i][0];\n            s2+=b[i][1];\n            s3+=c[i][2];\n        \n    }\n    if(s1==0 && s2==0 && s3==0)\n    {\n        printf(\"YES\");\n        \n    }\n    else\n    {\n        printf(\"NO\");\n    }\n    \n    \n}"}
{"similarity_score": 0.827893175074184, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "15716dae27095820f63eed3dc34a0188", "bug_code_uid": "c654bb346d213e00c9557d6a11a0c69e", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "539033dfc2a7e1a3201690f280554872", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,sum,j,s;\n    scanf(\"%d\",&n);\n    int x[n];\n    for (i=0;i<n;i++)\n    {\n        scanf (\"%d\",x[i]);\n        sum+=x[i];\n    }\n    for (j=0;j<n;j++)\n    {\n        s+=x[j];\n        if(s>=(sum/2))\n        {\n            printf(\"%d\",(j+1));\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,s=0,sum=0;\n    scanf(\"%d\",&n);\n    int x[n];\n    for (i=0;i<n;i++)\n    {\n        scanf (\"%d\",&x[i]);\n        sum+=x[i];\n    }\n    if(sum%2!=0)\n        sum=(sum/2)+1;\n    else\n        sum=sum/2;\n    for (j=0;j<n;j++)\n    {\n        s+=x[j];\n        if(s>=sum)\n        {\n            printf(\"%d\",(j+1));\n            break;\n        }\n    }\n}"}
{"similarity_score": 0.9960474308300395, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f381dca64119d23b3c140b5e62fcf6b3", "bug_code_uid": "a9e89be5a7f217d17a0faad1b2e34898", "src_uid": "2f659be28674a81f58f5c587b6a0f465", "apr_id": "1b9a672d1d55e2cab3b8be5fd832e14f", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\n  int n, k, i, aux;\n  char aorb;\n  scanf(\"%d %d\", &n, &k);\n\n  if(n >= k && k > 1){\n    char str[n+1];\n    str[n] = 0;\n    aux = 0;\n    aorb = 0x61;\n    for(i = 0; i < n+2-k; i++){\n      str[i] = aorb;\n      if(aorb == 0x61)\n    aorb = 0x62;\n      else\n    aorb = 0x61;\n    }\n    aorb = 0x63;\n    for(i = n+2-k; i < n; i++){\n      str[i] = aorb+aux;\n      aux++;\n    }\n    printf(\"%s\\n\", str);\n  }\n  else if(n == 1 && k == 1)\n    pritnf(\"a\\n\");\n  else\n    printf(\"-1\\n\");\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\n  int n, k, i, aux;\n  char aorb;\n  scanf(\"%d %d\", &n, &k);\n\n  if(n >= k && k > 1){\n    char str[n+1];\n    str[n] = 0;\n    aux = 0;\n    aorb = 0x61;\n    for(i = 0; i < n+2-k; i++){\n      str[i] = aorb;\n      if(aorb == 0x61)\n    aorb = 0x62;\n      else\n    aorb = 0x61;\n    }\n    aorb = 0x63;\n    for(i = n+2-k; i < n; i++){\n      str[i] = aorb+aux;\n      aux++;\n    }\n    printf(\"%s\\n\", str);\n  }\n  else if(n == 1 && k == 1)\n    printf(\"a\\n\");\n  else\n    printf(\"-1\\n\");\n}\n"}
{"similarity_score": 0.46438746438746437, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "500e4bebc686101f62804c6449c2804e", "bug_code_uid": "703d67bdda2c7054a9b6e4d8e231a66c", "src_uid": "e17427897fd5147c601204cb1c48b143", "apr_id": "42db241a35b33513e32b782bc0d60360", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,a[100]={0},max=-1,flag=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        max=(max<a[i])?a[i]:max;\n        if(a[i]>max+1)\n        {\n           //printf(\"%d\",i+1);\n           flag=1;\n           break;\n        }\n    }\n    if(flag==0)\n        printf(\"-1\");\n    else printf(\"%d\",i+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,x,max=-1,flag=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x);\n\n        if(x>max+1)\n        {\n\n           flag=1;\n           break;\n        }\n        max=(max<x)?x:max;\n    }\n    if(flag==0)\n        printf(\"-1\");\n    else printf(\"%d\",i+1);\n    return 0;\n}\n"}
{"similarity_score": 0.35978004713275724, "equal_cnt": 29, "replace_cnt": 18, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "dcd2d82c7b66c1ff384d07d316540de8", "bug_code_uid": "c49ebe59e2fff2e1ca22d83c527acd25", "src_uid": "55a1e9236cac9a6044e74b1975331535", "apr_id": "037a333ce33af87dc690a7c010ddfb95", "difficulty": 1400, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(void) {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        long long n; \r\n        scanf(\"%lld\", &n);\r\n        long long a[n],b[n];\r\n        long long i,j,k,l,m=0;\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%lld\", &a[i]);\r\n        }\r\n  \r\n  for(j=0;j<n;j++){\r\n      scanf(\"%lld\", &b[j]);\r\n  }\r\n  long long z=n*n\r\n  long long c[z];\r\n  for(k=0;k<n;k++){\r\n      for(l=0;l<n;l++){\r\n          if(a[k]<b[l]){\r\n              c[m]=k+l;\r\n              m++;\r\n          }\r\n      }  \r\n  }\r\nlong long o=0,p,temp=0;\r\nfor(p=1;p<m;p++){\r\n    if(c[o]>c[p]){\r\n        temp=c[o];\r\n        c[o]=c[p];\r\n        c[p]=temp;\r\n    }\r\n}\r\nprintf(\"%lld\\n\", c[o]);\r\n\r\n    }\r\n\t// your code goes here\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint t,n,a[2*100005],ans;\r\n\r\nint min(int x,int y){\r\n    return x<y?x:y;\r\n}\r\n\r\nint main(){\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        ans=2*100005;\r\n        scanf(\"%d\",&n);\r\n        for(int i=1;i<=n;++i){\r\n            int x;\r\n            scanf(\"%d\",&x);\r\n            a[x]=i;\r\n        }\r\n        for(int i=3;i<2*n;i+=2)\r\n            a[i]=min(a[i],a[i-2]);\r\n        for(int i=1;i<=n;++i){\r\n            int x;\r\n            scanf(\"%d\",&x);\r\n            ans=min(ans,i-1+a[x-1]-1);\r\n        }\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n}"}
{"similarity_score": 0.9638308711156394, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "dfd2e9995801eaa61ed16ef1d6da77de", "bug_code_uid": "803a2714975657b3cd21bf746ece940c", "src_uid": "9b1b082319d045cf0ec6d124f97a8184", "apr_id": "1ac9989f4f58c9eb2dded85e968fee2f", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\n#define MAX_LENGTH 1000000\n\nint is_beautiful(char number[]) {\n\tint j = 0, cntr = 0;\n\t\n\twhile(number[j] != '\\0') {\n\t\tif (number[j] == '1')\n\t\t\tcntr++;\n\t\tif (cntr > 1 || (number[j] != '1' && number[j] != '0'))\n\t\t\treturn 0;\n\t\tj++;\t\n\t}\n\t\n\treturn (cntr > 1) ? 0 : 1;\t\t\n}\n\nint zero_count(char number[]) {\n\tint j = 0, cntr = 0;\n\t\n\twhile(number[j] != '\\0') {\n\t\tif (number[j] == '0')\n\t\t\tcntr++;\n\t\tj++;\t\n\t}\n\t\t\n\treturn cntr;\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\t\n\tchar temp[MAX_LENGTH], number[MAX_LENGTH];\n\tint i, j = 0, cntr = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%s\", number);\n\t\t\n\t\tif (number[0] == '0') {\n\t\t\tprintf(\"%d\", 0);\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tif (is_beautiful(number))\n\t\t\tcntr += zero_count(number);\n\t\telse\n\t\t\tstrcpy(temp, number);\t\n\t\t\t\n\t}\n\t\n\tchar zeroes[cntr + 1];\n\tfor (i = 0; i < cntr; i++)\n\t\tzeroes[i] = '0';\n\t\n\tzeroes[i] = '\\0';\t\t\n\t\t\n\tprintf(\"%s%s\", temp, zeroes);\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\n#define MAX_LENGTH 1000000\n\nint is_beautiful(char number[]) {\n\tint j = 0, cntr = 0;\n\t\n\twhile(number[j] != '\\0') {\n\t\tif (number[j] == '1')\n\t\t\tcntr++;\n\t\tif (cntr > 1 || (number[j] != '1' && number[j] != '0'))\n\t\t\treturn 0;\n\t\tj++;\t\n\t}\n\t\n\treturn (cntr > 1) ? 0 : 1;\t\t\n}\n\nint zero_count(char number[]) {\n\tint j = 0, cntr = 0;\n\t\n\twhile(number[j] != '\\0') {\n\t\tif (number[j] == '0')\n\t\t\tcntr++;\n\t\tj++;\t\n\t}\n\t\t\n\treturn cntr;\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\t\n\tchar temp[MAX_LENGTH], number[MAX_LENGTH];\n\tint i, j = 0, cntr = 0;\n\tstrcpy(temp, \"\");\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%s\", number);\n\t\t\n\t\tif (number[0] == '0') {\n\t\t\tprintf(\"%d\", 0);\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tif (is_beautiful(number))\n\t\t\tcntr += zero_count(number);\n\t\telse\n\t\t\tstrcpy(temp, number);\n\t\t\t\n\t}\n\t\n\tif (strcmp(temp, \"\") == 0)\n\t\tstrcpy(temp, \"1\");\n\t\n\tchar zeroes[cntr + 1];\n\tfor (i = 0; i < cntr; i++)\n\t\tzeroes[i] = '0';\n\t\n\tzeroes[i] = '\\0';\t\t\n\t\t\n\tprintf(\"%s%s\", temp, zeroes);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.2140309155766944, "equal_cnt": 16, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "2b4da955ffc26a9cdcbdd88892770056", "bug_code_uid": "4dee0a263f72b9a4f2802b2c0fb085af", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "476688f0477bc015fb0af3612a96816a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <algorithm>\n\nusing namespace std;\n\nint l[200200],r[200200],ll=0,rr=0;\nchar str[200200];\n\nint main()\n{\n    int n,x;\n    scanf(\"%d %s\",&n,str);\n    for(int i=0; i<n; i++)\n    {\n        scanf(\"%d\",&x);\n        if(str[i] == 'R')\n            r[rr++]=x;\n        else l[ll++]=x;\n    }\n    sort(l,l+ll-1);\n    sort(r,r+rr-1);\n    if(l[0] - r[0] >= 0)\n        printf(\"%d\\n\",(l[0]-r[0])/2);\n    else\n        printf(\"-1\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define min(a,b) (((a)<(b))?(a):(b))\nchar a[200200];\nint main()\n{\n\tint i,j,n,max=0,p,ans=2100000000,ch=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\" %c\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&p);\n\t\tif(a[i]=='R')\n\t\t{\n\t\t\tmax = p;\n\t\t\tch = 1;\n\t\t}\n\t\telse if(ch==1)\n\t\t\tans = min(ans,(p-max)/2);\n\t}\n\tif(ans==2100000000)\n\t\tans = -1;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}"}
{"similarity_score": 0.8055271238485159, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "38507fc935f6b7245b5e8baadc61b9c6", "bug_code_uid": "f852b05cb6914bd41e0a25f9240682cb", "src_uid": "b80fed46a9e2356dad03dd3ec01523d4", "apr_id": "70e9d8e5c272529bf5816ef7fa983d2b", "difficulty": 900, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long int sum(int arr[], int strt, int l)\n{\n    int res = 0;\n    for(int i = strt; i<l; i++)\n    {\n        res += arr[i];\n    }\n    return res;\n}\n\nvoid sort(int num[],int l)\n{\n    for(int i=0; i<l; i++)\n    {\n        for(int j=i+1; j<l; j++)\n        {\n            if(num[j]>num[i])\n            {\n                char tmp = num[i];\n                num[i] = num[j];\n                num[j] = tmp;\n            }\n        }\n    }\n}\n\nint main()\n{\n    int n,a;\n    scanf(\"%d\",&n);\n    int eve[n];\n    int od[n];\n    int odd = 0, even = 0;\n    while(n--)\n    {\n        scanf(\"%d\",&a);\n        if(a%2 == 0)\n        {\n            eve[even] = a;\n            even++;\n        }\n        else\n        {\n            od[odd] = a;\n            odd++;\n        }\n    }\n\n    sort(eve,even);\n    sort(od,odd);\n    if(odd == even)\n        printf(\"0\");\n    else if(odd>even)\n        printf(\"%I64d\",sum(od,even+1,odd));\n    else\n        printf(\"%I64d\", sum(eve,odd+1,even));\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nlong long int sum(int arr[], int strt, int end)\n{\n    int res = 0;\n    for(int i = strt; i<end; i++)\n    {\n        res += arr[i];\n    }\n    return res;\n}\n\nvoid sort(int num[],int len)\n{\n    for(int i=0; i<len; i++)\n    {\n        for(int j=i+1; j<len; j++)\n        {\n            if(num[j]>num[i])\n            {\n                int tmp = num[i];\n                num[i] = num[j];\n                num[j] = tmp;\n            }\n        }\n    }\n}\n\nint main()\n{\n    int n,a;\n    scanf(\"%d\",&n);\n    int eve[n+5];\n    int od[n+5];\n    int odd = 0, even = 0;\n    while(n--)\n    {\n        scanf(\"%d\",&a);\n        if(a%2 == 0)\n        {\n            eve[even++] = a;\n        }\n        else\n        {\n            od[odd++] = a;\n        }\n    }\n\n    sort(eve,even);\n    sort(od,odd);\n\n    if(odd == even)\n        printf(\"0\");\n    else if(odd>even)\n\n        printf(\"%I64d\",sum(od,even+1,odd));\n    else\n        printf(\"%I64d\", sum(eve,odd+1,even));\n    return 0;\n}"}
{"similarity_score": 0.10962241169305725, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "7bce7da0706f477dd448f461f162827c", "bug_code_uid": "2b46563bc8eef78b2e0ee3ce2d34f997", "src_uid": "801bf7c73c44c68eaa61c714d5aedf50", "apr_id": "481da965523212e0a62fde3398219aca", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    while (n--)\r\n    {\r\n        char s[26];\r\n        int cnt[26] = {0};\r\n        int ans = 0;\r\n        int check = 0;\r\n        scanf(\"%s\", &s);\r\n        for(int i = 0; i < strlen(s); i++)\r\n        {\r\n            cnt[s[i]-'a']++;\r\n        }\r\n        for(int i = 0; i < strlen(s); i++)\r\n        {\r\n            if(cnt[i] != 1)\r\n            {\r\n                ans = 1;\r\n            }\r\n        }\r\n        for(int i = 0; i < strlen(s)- 1; i++)\r\n        {\r\n            if(check == 0)\r\n            {\r\n                if(s[i] < s[i+1])\r\n                {\r\n                    check = 1;\r\n                }\r\n            }\r\n            if(check  == 1)\r\n            {\r\n                if(s[i] > s[i+1])\r\n                {\r\n                    ans = 1;\r\n                }\r\n            }\r\n        }\r\n        if(ans == 1)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tchar s[27],x;\r\n\t\tscanf(\"%s\",s);\r\n\t\tint l=strlen(s);\r\n\t\tint i=l,flag=0;\r\n\t\tfor(int r=0;r<l;r++){\r\n\t\t\tif(s[r]=='a')\r\n\t\t\ti=r;\r\n\t\t\r\n\t\t}\r\n\t\tif(i==l){\r\n\t\t\tflag=1;\r\n\t\t}\r\n\t\t\r\n\t\tint j=i-1;\r\n\t\tint k=i+1;\r\n\t\tif(s[0]>s[l-1])\r\n\t\t\tx=s[0];\r\n\t\telse\r\n\t\t\tx=s[l-1];\r\n\t\t\r\n\t\tint cnt=1;\r\n\t\tfor(int c='b';c<=x;c++){\r\n\t\t\tif(c==s[j] && j!=-1){\r\n\t\t\t\tj--;\r\n\t\t\t\tcnt++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(c==s[k] && k!=l){\r\n\t\t\t\tcnt++;\r\n\t\t\t\tk++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\tflag=1;\r\n\t\t}\r\n\t\tif(cnt==l && flag==0)\r\n\t\t\tprintf(\"Yes\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"No\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.2674139311449159, "equal_cnt": 20, "replace_cnt": 10, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "a7b45853f8464b87bc7537f7a84a4f9b", "bug_code_uid": "dd8904ab81c4164d0d7cc6fa27ce07b3", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "7797123257d8d4b53ed3b3e32218f8b6", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    int n,i,original,x,time,j;\n    long a[10005],b[10005],c[10005];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&a[i]);\n    for(i=0;i<n-1;i++){\n        scanf(\"%ld\",&b[i]);\n        for(j=0;j<n;j++)\n            if(b[i]==a[j])\n                a[j]=0;\n    }\n    for(i=0;i<n-2;i++){\n        scanf(\"%ld\",&c[i]);\n        for(j=0;j<n-1;j++)\n            if(c[i]==b[j])\n                b[j]=0;\n    }\n    for(i=0;i<n;i++)\n        if(a[i])\n            printf(\"%ld\\n\",a[i]);/*\u7b2c\u4e00\u500b\u6578*/\n    for(i=0;i<n-1;i++)\n        if(b[i])\n            printf(\"%ld\\n\",b[i]);/*\u7b2c\u4e8c\u500b\u6578*/\n    return 0;\n}\n\n\n                 ", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    int n;\n    int a,b,c;\n    int x;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        a=0;\n        b=0;\n        c=0;\n        int i;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&x);\n            a+=x;\n        }\n        for(i=0;i<n-1;i++)\n        {\n            scanf(\"%d\",&x);\n            b+=x;\n        }\n        for(i=0;i<n-2;i++)\n        {\n            scanf(\"%d\",&x);\n            c+=x;\n        }\n        printf(\"%d\\n%d\\n\",a-b,b-c);\n\n    }\n    return 0;\n\n}\n\n                                                                                                             "}
{"similarity_score": 0.9261744966442953, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "57b2ffb79eddd826d0062af333542a95", "bug_code_uid": "104b308c0eea72cc34c316323d9f9ee5", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "358f0974700f39deff2b25361269a835", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n\r\n\r\n\r\nint\r\nmain (void)\r\n{\r\n   \r\n    float a,b,c,d;\r\n    int n, i , u;\r\n    scanf(\"%d\",&n);\r\n    for(u = 0; u < n; u++)\r\n    {\r\n        scanf(\"%f %f %f\", &a, &b, &c);\r\n   \r\n\r\n        if (a + b == c || a + c == b || c + b == a)\r\n               printf(\"YES\");\r\n        else\r\n             printf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\n\r\n\r\n\r\n\r\nint\r\nmain (void)\r\n{\r\n   \r\n    float a,b,c,d;\r\n    int n, i , u;\r\n    scanf(\"%d\",&n);\r\n    for(u = 0; u < n; u++)\r\n    {\r\n        scanf(\"%f %f %f\", &a, &b, &c);\r\n   \r\n\r\n        if (a + b == c || a + c == b || c + b == a)\r\n        \tprintf(\"YES\");\r\n        else\r\n             printf(\"NO\");\r\n        if(u != n -1)\r\n        \tprintf(\"\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n"}
{"similarity_score": 0.2868525896414343, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "a4ce0f84ebcfa200a86e6ab2fedc297f", "bug_code_uid": "2085a1f87b9846623b67427d85666f2f", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "ca2b61f40377fcfb1701bef6edfbfab1", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n    long long int x[100001],n,i,j,t,sum=0,Ans=1;\n    scanf(\"%I64d\",&n);\n    for(i=0; i<n; i++) scanf(\"%I64d\",&x[i]);\n\n        for(i=0; i<n-1; i++)\n    {\n        for(j=0; j<n-1; j++)\n        {\n            if(x[j]>x[j+1])\n            {\n                t=x[j];\n                x[j]=x[j+1];\n                x[j+1]=t;\n            }\n        }\n    }\n    //for(i=0; i<n; i++) printf(\"%I64d \",x[i]);\n   // printf(\"\\n\");\n    for(i=0; i<n-1; i++)\n    {\n        sum+=x[i];\n      //  printf(\"sum=%I64d x[i+1]=%I64d \",sum,x[i+1]);\n        if(sum<=x[i+1]) Ans++;\n\n      //  printf(\"Ans=%I64d\\n\",Ans);\n    }\n    printf(\"%I64d\",Ans);\n    return 0;\n}\n", "fixed": "/* Author Kh. Assaduzzaman Sohan  */\n\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#define mod 100000007\n\nint x[100001];\n\nlong long int cmpfunc (const void * a, const void * b)\n{\n    return ( *(int*)a - *(int*)b );\n}\n\n\nint main()\n{\n    int n,x[100001],i,s=0,c=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++) scanf(\"%d\",&x[i]);\n\n    qsort(x,n,sizeof(int), cmpfunc);\n\n  //  for(i=0; i<n; i++) printf(\"%d \",x[i]);\n\n    for (i=0; i<n; i++) if (x[i]>=s)\n        {\n            c++;\n            s+=x[i];\n        }\n    printf(\"%d\\n\",c);\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.641051567239636, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fcf16a3548ea6bf700b327a2cc29950d", "bug_code_uid": "b4f4ac51d8e3ed9e201327762fadc81a", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "9a15be7d5cc87406ca6d5d874dce80a1", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint ara[300001];\nint main()\n{\n    int n,i,j,max=0,t;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %d\", &ara[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(ara[j]!=ara[i])\n            {\n                if((j-i)>max) max=j-i;\n            }\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint ara[300001];\nint main()\n{\n    int n,i,j,a,t,b;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %d\", &ara[i]);\n    }\n    for(i=0,t=0;i<n-1 && !t;i++)\n    {\n        for(j=n-1;j>i;j--)\n        {\n            if(ara[j]!=ara[i])\n            {\n                a=j-i;\n                t++;\n                break;\n            }\n        }\n    }\n    for(i=n-1,t=0;i>0 && !t;i--)\n    {\n        for(j=0;j<i;j++)\n        {\n            if(ara[j]!=ara[i])\n            {\n               b=i-j;\n               t++;\n               break;\n            }\n        }\n    }\n    printf(\"%d\", a>b?a:b);\n\n}\n"}
{"similarity_score": 0.9988851727982163, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7d5de4e0719f6691ea40e27e21e56b4b", "bug_code_uid": "a2dd65bf4bd33901f01457dfc353973c", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "d859d9391398857b20a5449d360ab874", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int t,n,m;\r\n    int e,sum=0;\r\n    int con;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&m);\r\n        sum=0;\r\n        while(n--){\r\n            scanf(\"%d\",&e);\r\n            sum+=e;\r\n            \r\n            \r\n            \r\n        }\r\n        con=sum-m;\r\n        if(con>=0)\r\n            printf(\"%d\\n\",sum-m);\r\n        else\r\n            printf(\"0\\n\");\r\n        \r\n    }\r\n \r\n    return 0;\r\n}\u200f", "fixed": "#include <stdio.h>\r\n \r\nint main()\r\n{\r\n    int t,n,m;\r\n    int e,sum=0;\r\n    int con;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d %d\",&n,&m);\r\n        sum=0;\r\n        while(n--){\r\n            scanf(\"%d\",&e);\r\n            sum+=e;\r\n            \r\n            \r\n            \r\n        }\r\n        con=sum-m;\r\n        if(con>=0)\r\n            printf(\"%d\\n\",sum-m);\r\n        else\r\n            printf(\"0\\n\");\r\n        \r\n    }\r\n \r\n    return 0;\r\n}"}
{"similarity_score": 0.996316758747698, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3db256c0fb86c9bd34f8e2fb7a2d78d0", "bug_code_uid": "788c4fdc01f180d9c82bb34a6b7798b6", "src_uid": "779ab09a588bbb52485ae5b6a441b235", "apr_id": "e325c4cb88af9d03ff02ef60d9cef80c", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\n#define MAX1 1000\r\n#define MAX2 20\r\n\r\nint max(char cnt[MAX1][MAX2],int n,int i);\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\t\r\n\tint i,j,n;\r\n\tchar cnt[MAX1][MAX2];\r\n\tfor(i=1;i<=t;i++){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(j=1;j<=n;j++){\r\n\t\tscanf(\"%c\",&cnt[i][j]);\r\n\t\t}\t\r\n\t}\r\n\tfor(i=1;i<=t;i++){\r\n\tprintf(\"%d\",(max(cnt,n,i)));\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\nint max(char cnt[MAX1][MAX2],int n,int i)\r\n{\r\n\tint idx,cnt_max=1;\r\n\tfor(idx=1;idx<=n;idx++){\r\n\t\tif(cnt[i][idx]>cnt[i][cnt_max]){\r\n\t\t\tcnt_max=idx;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn cnt_max;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\n#define MAX1 1000\r\n#define MAX2 20\r\n\r\nint max(char cnt[MAX1][MAX2],int n,int i);\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\t\r\n\tint i,j,n;\r\n\tchar cnt[MAX1][MAX2];\r\n\tfor(i=1;i<=t;i++){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(j=1;j<=n;j++){\r\n\t\tscanf(\"%d\",&cnt[i][j]);\r\n\t\t}\t\r\n\t}\r\n\tfor(i=1;i<=t;i++){\r\n\tprintf(\"%d\\n\",(max(cnt,n,i)));\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\nint max(char cnt[MAX1][MAX2],int n,int i)\r\n{\r\n\tint idx,cnt_max=1;\r\n\tfor(idx=1;idx<=n;idx++){\r\n\t\tif(cnt[i][idx]>cnt[i][cnt_max]){\r\n\t\t\tcnt_max=idx;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn cnt_max;\r\n}\r\n"}
{"similarity_score": 0.6820027063599459, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "d5457923c0edfe457fd532ff1e4e99ee", "bug_code_uid": "65d4240fc2bd9d501f78cc8fea736d8a", "src_uid": "930365b084022708eb871f3ca2f269e4", "apr_id": "51a1e25d3b18a4c200b151961ea753bd", "difficulty": 1700, "tags": ["sortings", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <limits.h>\n#include <stdbool.h>\n\nint comp(const void *a, const void *b){\n\tconst char *da = (const char*)a;\n\tconst char *db = (const char*)b;\n    int len1 = strlen(da);\n    int len2 = strlen(db);\n    int len = max(len1,len2);\n    int i=0,j=0,k=0;\n    while(k<len){\n        if(i>=len1)\n            i=0;\n        if(j>=len2)\n            j=0;\n        if(da[i]<db[j])\n            return -1;\n        else if(da[i]>db[j])\n            return 1;\n        i++;\n        j++;\n        k++;\n    }\n    return 0;\n}\n\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    char str[n][51];\n    for(i=0;i<n;i++){\n        scanf(\"%s\",str[i]);\n    }\n    qsort(str,n,sizeof(str[0]),comp);\n    for(i=0;i<n;i++){\n        printf(\"%s\",str[i]);\n    }\n    return 0;\n}\n\n\n", "fixed": "#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <limits.h>\n#include <stdbool.h>\n\nint comp(const void *a, const void *b){\n\tconst char *da = (const char*)a;\n\tconst char *db = (const char*)b;\n    char str1[101];\n    char str2[101];\n    strcpy(str1,da);\n    strcpy(str2,db);\n    strcat(str1,db);\n    strcat(str2,da);\n    return strcmp(str1,str2);\n}\n\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    char str[n][51];\n    for(i=0;i<n;i++){\n        scanf(\"%s\",str[i]);\n    }\n    qsort(str,n,sizeof(str[0]),comp);\n    for(i=0;i<n;i++){\n        printf(\"%s\",str[i]);\n    }\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.6556291390728477, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "0f1eb2ea927dc5bf5f498fbca5203c99", "bug_code_uid": "f6c0b0e36c3a0dca5f48a70f55dadbbc", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "9ed589771085db9ab0536060e5305ffe", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    int n,a[100];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++) {\n        scanf(\"%d\",&a[i]);\n    }\n    for( i=1;i<n;i++ ) {\n        if( a[i-1]%2!=a[i]%2 && a[i]%2!=a[i+1]%2) {\n            printf(\"%d\",i+1);\n        }\n        else if(a[i-1]%2!=a[i]%2 && a[i]%2==a[i+1]%2) {\n            printf(\"%d\",i);\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main() {\n    int n,a[100],i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++) {\n        scanf(\"%d\",&a[i]);\n    }\n    for( i=0;i<n;i++ ) {\n        if( (i==0) && (a[i]%2!=a[i+1]%2 && a[i+2]%2==a[i+1]%2)) {\n            printf(\"%d\",i+1);\n            break;\n        }\n        else if((i==n-1) && (a[i-1]%2!=a[i]%2 && a[i-1]%2==a[i-2]%2)) {\n            printf(\"%d\",i+1);\n            break;\n        }\n        else if( (i>0&&i<n-1) && (a[i]%2!=a[i-1]%2 && a[i]%2!=a[i+1]%2)) {\n            printf(\"%d\",i+1);\n            break;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.7690120824449183, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "0d61f9c6ede34fda5b6205d39f9f1b04", "bug_code_uid": "cccb4ce6a9a186c320e223744e848d6c", "src_uid": "ed449ba7c453a43e2ac5904dc0174530", "apr_id": "c5157b3402b70c393f4537af3cd034a4", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,s,n,j,temp;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        int a[n],c;\n        for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n        for(i=0;i<n;i++){\n            for(j=i+1;j<n;j++){\n                if(a[i]<a[j]){\n                    temp=a[i];\n                    a[i]=a[j];\n                    a[j]=temp;\n                }\n            }\n        }\n      \n        for(i=0;i<n-1;i++){\n            s=a[i]-a[i+1];\n            if(s<=1){\n            c=0;\n             s=0;}\n            else{\n                c=1;\n                break;\n            }\n        }\n        \n        if(c==0)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n        s=0;\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,i,s,n,j,temp,d;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        \n        int a[n],c=1;\n        for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n        for(i=0;i<n;i++){\n            for(j=i+1;j<n;j++){\n                if(a[i]<a[j]){\n                    temp=a[i];\n                    a[i]=a[j];\n                    a[j]=temp;\n                }\n            }\n        }\n      \n        for(i=0;i<n-1;i++){\n            if(abs(a[i]-a[i+1])>1){\n            c=0;\n            break;}\n        }\n        \n        if(c==0)\n        printf(\"NO\\n\");\n        else\n        printf(\"YES\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.4996989765201686, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "ac2cbf6414b84888305829f95ade1e42", "bug_code_uid": "14b5bdd3718891517f1a68c5c5d96e59", "src_uid": "c659bdeda1c1da08cfc7f71367222332", "apr_id": "c9c84dbcb495d9db8dbb125e12415e14", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char s1[100001];\n    gets(s1);\n    char s2[100001];\n    gets(s2);\n    int i,j;\n    int u=0;\n    if(strlen(s1)!=strlen(s2)){\n        printf(\"NO\");\n        return 0;\n    }\n    for(i=0;i<strlen(s1);i++){\n        for(j=0;j<strlen(s1);j++){\n            if(s1[j+1]>s1[j]){\n                char temp=s1[j];\n                s1[j]=s1[j+1];\n                s1[j+1]=temp;\n            }\n        }\n    }\n    for(i=0;i<strlen(s2);i++){\n        for(j=0;j<strlen(s2);j++){\n            if(s2[j+1]>s2[j]){\n                char temp1=s2[j];\n                s2[j]=s2[j+1];\n                s2[j+1]=temp1;\n            }\n        }\n    }\n    for(i=0;i<strlen(s1);i++){\n        if(s1[i]==s2[i]){\n            u++;\n        }\n    }\n    if(u==strlen(s1)&&u==strlen(s2)){\n        printf(\"YES\");\n    }\n    else{\n        printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char s1[100001];\n    gets(s1);\n    char s2[100001];\n    gets(s2);\n    int i,j;\n    int u=0;\n    char temp1='a';\n    char temp2='z';\n    char temp3='z';\n    char temp4='a';\n    int check=0;\n    if(strlen(s1)!=strlen(s2)){\n        printf(\"NO\");\n        return 0;\n    }\n    for(i=0;i<strlen(s1);i++){\n        if(s1[i]==s2[i]){\n            u++;\n        }\n        else if(s1[i]!=s2[i]&&check==0){\n            temp1=s1[i];\n            temp2=s2[i];\n            check++;\n        }\n        else if(s1[i]!=s2[i]&&check!=0){\n            temp3=s1[i];\n            temp4=s2[i];\n        }\n    }\n    if((u==strlen(s1)-2)&&(temp2==temp3)&&(temp1==temp4)){\n        printf(\"YES\");\n    }\n    else{\n        printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6311787072243346, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ecbc70b2513daef82b47986b6ed5b1dd", "bug_code_uid": "166b61939d8fbcfa43e8968e2f1b2ca0", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "e3e5aa438dc4bebe9f5174a3bb9a114e", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n,q[100001],p[100001],i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d%d\",&p[i],&q[i]);\n\t}\n\tfor(i=0;i<n;i++){\n\t\tfor(j=i+1;j<n;j++){\n\t\t\tif(p[i]<p[j] && q[i]>q[j]){\n\t\t\t\tprintf(\"Happy Alex\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"Poor Alex\\n\");\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint n,q[100001],p[100001],i,j,ptemp,qtemp;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d%d\",&p[i],&q[i]);\n\t}\n\tfor(i=1;i<n;i++){\n\t\tif(p[i]<p[i-1]){\n\t\t\tptemp=p[i];\n\t\t\tp[i]=p[i-1];\n\t\t\tp[i-1]=ptemp;\n\t\t\tqtemp=q[i];\n\t\t\tq[i]=q[i-1];\n\t\t\tq[i-1]=qtemp;\n\t\t\t\n\t\t}\n\t}\n//\tfor(i=0;i<n;i++)printf(\"%d %d\\n\",p[i],q[i]);\n\tfor(i=0;i<n-1;i++){\n\t\t\tif(p[i]<p[i+1] && q[i]>q[i+1]){\n\t\t\t\tprintf(\"Happy Alex\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t}\n\tprintf(\"Poor Alex\\n\");\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9147869674185464, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5a13f75e7b8369a9cdc82cc1340debf5", "bug_code_uid": "22ca73fe669f94fea69baebf426d28be", "src_uid": "5312a505bd59b55a6c5487f67a33d81a", "apr_id": "a95eab5001e1f2b734c49d8707f5ff45", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main() {\r\n\tint n, p[10005], ans[10005];\r\n\tint a;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tscanf(\"%d\", &p[i]);\r\n\t\tif (p[i] < 10) {\r\n\t\t\tans[i] = p[i];\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ta = 1;\r\n\t\twhile (p[i] - a>0)\r\n\t\t{\r\n\t\t\ta *= 10;\r\n\t\t\tif (p[i] - a * 10 < 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tans[i] = p[i] - a;\r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tprintf(\"%d\\n\", ans[i]);\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main() {\r\n\tint n, p[10005], ans[10005];\r\n\tint a;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tscanf(\"%d\", &p[i]);\r\n\t\tif (p[i] < 2) {\r\n\t\t\tans[i] = 0;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ta = 1;\r\n\t\twhile (p[i] - a>0)\r\n\t\t{\r\n\t\t\tif (p[i] - a * 10 < 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ta *= 10;\r\n\t\t}\r\n\t\tans[i] = p[i] - a;\r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tprintf(\"%d\\n\", ans[i]);\r\n\t}\r\n}"}
{"similarity_score": 0.4769403824521935, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1426c92f1e6cb7d46db45098e6084499", "bug_code_uid": "418045488424818af9498c64072b7403", "src_uid": "0593f79604377dcfa98d2b69840ec0a6", "apr_id": "3007edd7d41e6b064972b892ab4e2075", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,j,x,count=0;\n    scanf(\"%d\",&n);\n    int a[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=0)\n        {\n        x=0;\n        j=i+1;\n        while(j<n)\n        {\n            if(a[i]==a[j])\n                x++;\n            j++;\n        }\n        if(x==0)\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,j,x,temp,count=0;\n    scanf(\"%d\",&n);\n    int a[100001]={0};\n    int b[100001]={0};\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x);\n        if(x<0)\n        {\n            x=x*-1;\n            if(b[x]==0)\n            {\n            b[x]=1;\n            count++;\n            }\n        }\n        else if(x>0&&a[x]==0)\n        {\n            a[x]=1;\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}"}
{"similarity_score": 0.9973890339425587, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e31f5d81f3d43d4431ba331c138e6ae7", "bug_code_uid": "cc89086e2aba0f602441926fed7ce393", "src_uid": "2052b0b4abdcf7d613b56842b1267f60", "apr_id": "1dc1c5817ae3f4a71957b68c54fddf4d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define min(a,b) a<b?a:b\n\nint main()\n{\n    int l,r,a,n,l1,l0,r1,r0;\n    scanf(\"%d\",&n);\n    l1 = l0 = r1 = r0 = 0;\n    for(a=0;a<n;a++)\n    {\n        scanf(\"%d %d\",&l,&r);\n        if(l)\n            l1++;\n        else\n            l0++;\n        if(r)\n            r1++;\n        else\n            r0++;\n    }\n    printf(\"%d\\n\",min(l1,l0)+min(r1,r0));\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define min(a,b) (a<b?a:b)\n\nint main()\n{\n    int l,r,a,n,l1,l0,r1,r0;\n    scanf(\"%d\",&n);\n    l1 = l0 = r1 = r0 = 0;\n    for(a=0;a<n;a++)\n    {\n        scanf(\"%d %d\",&l,&r);\n        if(l)\n            l1++;\n        else\n            l0++;\n        if(r)\n            r1++;\n        else\n            r0++;\n    }\n    printf(\"%d\\n\",min(l1,l0)+min(r1,r0));\n    return 0;\n}\n"}
{"similarity_score": 0.9596774193548387, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ea899a24dfe380ae2848b787f54d5653", "bug_code_uid": "0041c9391407c9e22f78ce8d96437468", "src_uid": "4d5d20fd586ddbea2adeab104a6c2aec", "apr_id": "eb55c0fe28e1b600374f94073fd9ec22", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint\nmain ()\n{\n  int t;\n  #define maxn 200000\n  int a[maxn];\n  scanf (\"%d\", &t);\n  while (t--)\n    {\n      int n; scanf (\"%d\", &n);\n      int k; scanf (\"%d\", &k);\n      int cnt = 0;\n      for (int i = 0; i < n; i++)\n\t{\n\t  scanf (\"%d\", a + i);\n\t  if (i > 0 && i + 1 < n)\n\t    {\n\t      cnt += a[i] > a[i-1] + a[i+1];\n\t    }\n\t}\n      if (k == 1)\n\t{\n\t  n -= 2;\n\t  n += n%2;\n\t  n /= 2;\n\t  printf (\"%d\\n\", n);\n\t}\n      else\n\t{\n\t  printf (\"%d\\n\", cnt);\n\t}\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint\nmain ()\n{\n  int t;\n  #define maxn 200000\n  int a[maxn];\n  scanf (\"%d\", &t);\n  while (t--)\n    {\n      int n; scanf (\"%d\", &n);\n      int k; scanf (\"%d\", &k);\n      int cnt = 0;\n      for (int i = 0; i < n; i++)\n\t{\n\t  scanf (\"%d\", a + i);\n\t}\n      for (int i = 0; i < n; i++)\n\t{\n\t  if (i > 0 && i + 1 < n)\n\t    {\n\t      cnt += a[i] > a[i-1] + a[i+1];\n\t    }\n\t}\n      if (k == 1)\n\t{\n\t  n -= 2;\n\t  n += n%2;\n\t  n /= 2;\n\t  printf (\"%d\\n\", n);\n\t}\n      else\n\t{\n\t  printf (\"%d\\n\", cnt);\n\t}\n    }\n}\n"}
{"similarity_score": 0.6314540059347181, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "2eccda1f08a9fb03e5faec9020670d35", "bug_code_uid": "a90acb814531bd956d1f725b021656c9", "src_uid": "0515ac888937a4dda30cad5e2383164f", "apr_id": "51f992a6fd8f03fc690d53cc78e6514d", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <assert.h>\n#define MAXSIZE 200000\n\nint find_min(int n, int k, char s[])\n{\n  int i, index = 1;\n  for (i = 0; i < k; i++)\n  {\n    if (strlen(s) > 1)\n    {\n      if (i == 0 && s[0] != '1')\n      {\n        s[0] = '1';\n      }\n      else\n      {\n        assert(index >= 1);\n        while (s[index] == '0')\n        {\n          index++;\n        }\n        if (index >= strlen(s))\n        {\n          break;\n        }\n        s[index] = '0';\n      }\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return atoi(s);\n}\n\nint main()\n{\n  int n, k; /*n = number of digits in num; k = number of digits she can change*/\n  char s[MAXSIZE]; //the string containing S (the number).\n  fscanf(stdin, \"%d %d\\n%s\", &n, &k, s);\n  printf(\"%d\\n\", find_min(n, k, s));\n  exit(EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <assert.h>\n#define MAXSIZE 200000\n\nvoid find_min(int n, int k, char s[])\n{\n  int i, moves = 0;\n  for (i = 0; i < n; i++)\n  {\n    if (moves >= k)\n    {\n      break;\n    }\n    if (n > 1)\n    {\n      if (i == 0)\n      {\n        if (s[i] == '1')\n        {\n          continue;\n        }\n        s[i] = '1';\n        moves++;\n      }\n      else\n      {\n        if (s[i] == '0')\n        {\n          continue;\n        }\n        s[i] = '0';\n        moves++;\n      }\n    }\n    else\n    {\n      strcpy(s, \"0\");\n      break;\n    }\n  }\n  printf(\"%s\\n\", s);\n}\n\nint main()\n{\n  int n, k; /*n = number of digits in num; k = number of digits she can change*/\n  char s[MAXSIZE]; //the string containing S (the number).\n  fscanf(stdin, \"%d %d\\n%s\", &n, &k, s);\n  find_min(n, k, s);\n  exit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9956559513466551, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "542b11fbfbe5416beec2a71a665a7c30", "bug_code_uid": "4f30675629e23c0272249bd09b88449a", "src_uid": "4143caa25fcc2f4d400d169f9697be01", "apr_id": "c44050e8602f26fabf437858beffd458", "difficulty": 1700, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define Nmax 1000001\nint a[Nmax];\n\nint main( void )\n{\n    int n, i, scn, count = 0;\n\n    scanf( \"%d\", &n );\n    for ( i = 0; i < n; i++ ) {\n        scanf( \"%d\", &scn );\n        a[scn] = 1;\n        if ( a[n-scn] ) {\n            count++;\n        }\n    }\n    printf( \"%d\\n\", n );\n    for ( i = 1; i < Nmax; i++ ) {\n        if ( a[i] == 1 && a[Nmax-i] == 0 ) {\n            printf( \"%d \", Nmax-i );\n        } else if ( a[i] == 0 && a[Nmax-i] == 0 && count > 0 ) {\n            count--;\n            printf( \"%d %d \", i, Nmax-i );\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\n#define Nmax 1000001\nint a[Nmax];\n\nint main( void )\n{\n    int n, i, scn, count = 0;\n\n    scanf( \"%d\", &n );\n    for ( i = 0; i < n; i++ ) {\n        scanf( \"%d\", &scn );\n        a[scn] = 1;\n        if ( a[Nmax-scn] ) {\n            count++;\n        }\n    }\n    printf( \"%d\\n\", n );\n    for ( i = 1; i < Nmax; i++ ) {\n        if ( a[i] == 1 && a[Nmax-i] == 0 ) {\n            printf( \"%d \", Nmax-i );\n        } else if ( a[i] == 0 && a[Nmax-i] == 0 && count > 0 ) {\n            count--;\n            printf( \"%d %d \", i, Nmax-i );\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.7966101694915254, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "bf19256e75d10e3712815cf923a94d19", "bug_code_uid": "6bcd94d85fd2b756b83e050764a1120f", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "ea7baf8e153b9a904fd822b525593413", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{int a,b,t,i,move=0;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{scanf(\"%d\",&a);\nscanf(\"%d\",&b);\n\nwhile((a%b)!=0)\n{a++;\nmove++;\n}\nprintf(\"%d\",move);\nmove=0;\n}\n}", "fixed": "#include<stdio.h>\n\nint main()\n{int a,b,t,i;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{scanf(\"%d\",&a);\nscanf(\"%d\",&b);\n\nif(a%b!=0)\n{\nprintf(\"%d\\n\",b-a%b);}\nelse \n{printf(\"0\\n\");\n}}\n\n}"}
{"similarity_score": 0.3318304779080252, "equal_cnt": 22, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "cef87a39bb18032614b3de078a108891", "bug_code_uid": "49e978b05934ec76a7dbfe000db83146", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "3a64e6bff384291fd87d3671433e0611", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    long long int notc;\r\n    scanf(\"%lld\",&notc);\r\n\r\n    long long int arr[notc];\r\n    //int ans[notc];\r\n\r\n    for(long long int i=0; i<notc; i++)\r\n    {\r\n       scanf(\"%lld\",&arr[i]);\r\n    }\r\n\r\n    long long int k,n;\r\n\r\n    for(long long int i=0; i<notc; i++)\r\n    {\r\n       k = arr[i];\r\n       n = arr[i];\r\n       while( n != 0)\r\n       {\r\n           n = k & k-1;\r\n           k = k-1;\r\n       }\r\n\r\n       printf(\"%lld\\n\",k);\r\n    }\r\n\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nlong long int main()\r\n{\r\n    long long int r;\r\n    long long  int n;\r\n    scanf(\"%lld\", &n);\r\n\r\n    while (n--)\r\n    {\r\n        long long  int x;\r\n        long long  int ans;\r\n        scanf(\"%lld\", &x);\r\n        for (long long int i = 1;; i++)\r\n        {\r\n            r = pow(2, i);\r\n            if (r > x)\r\n            {\r\n                ans = pow(2, i - 1) - 1;\r\n\r\n                break;\r\n            }\r\n            if (r == x)\r\n            {\r\n                ans = pow(2, i ) - 1;\r\n\r\n                break;\r\n            }\r\n        }\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.6884848484848485, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "abc28aa9594effc7d6d764cd9fae32d8", "bug_code_uid": "2bb9794a560261e71b2a7bd892637c73", "src_uid": "4ebea3f56ffd43efc9e1496a0ef7fa2d", "apr_id": "2618cff8019e5276490b529ddc3e4cae", "difficulty": 1200, "tags": ["constructive algorithms", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,a[10],i;\n    scanf(\"%lld\",&n);\n    a[0]=6;\n    a[1]=2;\n    a[2]=5;\n    a[3]=5;\n    a[4]=4;\n    a[5]=5;\n    a[6]=6;\n    a[7]=3;\n    a[8]=7;\n    a[9]=6;\n    if(n<=3)\n    {if(n==3)\n     {printf(\"7\");}\n     else\n     {printf(\"1\");}\n    }\n    else\n    {for(i=0;i<=9;i++)\n     {if(n>=a[i])\n      {n=n-a[i];\n       printf(\"%lld\",i);\n       i=-1;\n      }\n     }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,a[10],i,x,r;\n    scanf(\"%lld\",&n);\n    a[0]=6;\n    a[1]=2;\n    a[2]=5;\n    a[3]=5;\n    a[4]=4;\n    a[5]=5;\n    a[6]=6;\n    a[7]=3;\n    a[8]=7;\n    a[9]=6;\n    x=n/2;\n    r=n%2;\n    if(r==1)\n    {printf(\"7\");\n     for(i=1;i<=x-1;i++)\n     {printf(\"1\");\n     }\n    }\n    else\n    {for(i=1;i<=x;i++)\n     {printf(\"1\");}\n    }\n    return 0;\n}\n    \n    "}
{"similarity_score": 0.9730848861283644, "equal_cnt": 15, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 12, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "62582ce1d6829974f2c9bed160d3d4a8", "bug_code_uid": "f17364a6db0370a68bc8b7677b98fb6c", "src_uid": "b40059fe9cbdb0cc3b64c3e463900849", "apr_id": "be1913e2db481470c08d13354cb9b900", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[50];\n\tint b=0,c=0,t=0;\n\tscanf(\"%d\",&b);\n\tfor(int x=0 ; x<b ; x++)\n\t{\n\t\tscanf(\"%d\",&c);\n\t\tint _1=0,_2=0,_3=0,_4=0,_5=0,_6=0,_7=0,_8=0,_9=0,_10=0,_11=0,_12=0;\n\t\tfor(int y=0 ; y<c ; y++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[y]);\n\t\t\tif(a[y]==1)\n\t\t\t{\n\t\t\t\t_1+=1;\n\t\t\t}\n\t\t\telse if(a[y]==2)\n\t\t\t{\n\t\t\t\t_2+=1;\n\t\t\t}\n\t\t\telse if(a[y]==4)\n\t\t\t{\n\t\t\t\t_3+=1;\n\t\t\t}\n\t\t\telse if(a[y]==8)\n\t\t\t{\n\t\t\t\t_4+=1;\n\t\t\t}\n\t\t\telse if(a[y]==16)\n\t\t\t{\n\t\t\t\t_5+=1;\n\t\t\t}\n\t\t\telse if(a[y]==32)\n\t\t\t{\n\t\t\t\t_6+=1;\n\t\t\t}\n\t\t\telse if(a[y]==64)\n\t\t\t{\n\t\t\t\t_7+=1;\n\t\t\t}\n\t\t\telse if(a[y]==128)\n\t\t\t{\n\t\t\t\t_8+=1;\n\t\t\t}\n\t\t\telse if(a[y]==256)\n\t\t\t{\n\t\t\t\t_9+=1;\n\t\t\t}\n\t\t\telse if(a[y]==512)\n\t\t\t{\n\t\t\t\t_10+=1;\n\t\t\t}\n\t\t\telse if(a[y]==1024)\n\t\t\t{\n\t\t\t\t_11+=1;\n\t\t\t}\n\t\t\telse if(a[y]==2048)\n\t\t\t{\n\t\t\t\t_12+=1;\n\t\t\t}\n\t\t}\n\t\t\t_1=_1-_1%2;\n\t\t\t_2=_2+_1;\n\t\t\t_2=_2-_2%2;\n\t\t\t_3=_3+_2;\n\t\t\t_3=_3-_3%2;\n\t\t\t_4=_4+_3;\n\t\t\t_4=_4-_4%2;\n\t\t\t_5=_5+_4;\n\t\t\t_5=_5-_5%2;\n\t\t\t_6=_6+_5;\n\t\t\t_6=_6-_6%2;\n\t\t\t_7=_7+_6;\n\t\t\t_7=_7-_7%2;\n\t\t\t_8=_8+_7;\n\t\t\t_8=_8-_8%2;\n\t\t\t_9=_9+_8;\n\t\t\t_9=_9-_9%2;\n\t\t\t_10=_10+_9;\n\t\t\t_10=_10-_10%2;\n\t\t\t_11=_11+_10;\n\t\t\t_11=_11-_11%2;\n\t\t\t_12=_12+_11;\n\t\t\tif(_12>=1)\t\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t}\n\t}\n\treturn 0;\n\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[200];\n\tint b=0,c=0,t=0;\n\tscanf(\"%d\",&b);\n\tfor(int x=0 ; x<b ; x++)\n\t{\n\t\tscanf(\"%d\",&c);\n\t\tint _1=0,_2=0,_3=0,_4=0,_5=0,_6=0,_7=0,_8=0,_9=0,_10=0,_11=0,_12=0;\n\t\tfor(int y=0 ; y<c ; y++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[y]);\n\t\t\tif(a[y]==1)\n\t\t\t{\n\t\t\t\t_1+=1;\n\t\t\t}\n\t\t\telse if(a[y]==2)\n\t\t\t{\n\t\t\t\t_2+=1;\n\t\t\t}\n\t\t\telse if(a[y]==4)\n\t\t\t{\n\t\t\t\t_3+=1;\n\t\t\t}\n\t\t\telse if(a[y]==8)\n\t\t\t{\n\t\t\t\t_4+=1;\n\t\t\t}\n\t\t\telse if(a[y]==16)\n\t\t\t{\n\t\t\t\t_5+=1;\n\t\t\t}\n\t\t\telse if(a[y]==32)\n\t\t\t{\n\t\t\t\t_6+=1;\n\t\t\t}\n\t\t\telse if(a[y]==64)\n\t\t\t{\n\t\t\t\t_7+=1;\n\t\t\t}\n\t\t\telse if(a[y]==128)\n\t\t\t{\n\t\t\t\t_8+=1;\n\t\t\t}\n\t\t\telse if(a[y]==256)\n\t\t\t{\n\t\t\t\t_9+=1;\n\t\t\t}\n\t\t\telse if(a[y]==512)\n\t\t\t{\n\t\t\t\t_10+=1;\n\t\t\t}\n\t\t\telse if(a[y]==1024)\n\t\t\t{\n\t\t\t\t_11+=1;\n\t\t\t}\n\t\t\telse if(a[y]==2048)\n\t\t\t{\n\t\t\t\t_12+=1;\n\t\t\t}\n\t\t}\n\t\tif(_12==0)\n\t\t{\n\t\t\t_1=_1-_1%2;\n\t\t\t_2=_2+_1/2;\n\t\t\t_2=_2-_2%2;\n\t\t\t_3=_3+_2/2;\n\t\t\t_3=_3-_3%2;\n\t\t\t_4=_4+_3/2;\n\t\t\t_4=_4-_4%2;\n\t\t\t_5=_5+_4/2;\n\t\t\t_5=_5-_5%2;\n\t\t\t_6=_6+_5/2;\n\t\t\t_6=_6-_6%2;\n\t\t\t_7=_7+_6/2;\n\t\t\t_7=_7-_7%2;\n\t\t\t_8=_8+_7/2;\n\t\t\t_8=_8-_8%2;\n\t\t\t_9=_9+_8/2;\n\t\t\t_9=_9-_9%2;\n\t\t\t_10=_10+_9/2;\n\t\t\t_10=_10-_10%2;\n\t\t\t_11=_11+_10/2;\n\t\t\t_11=_11-_11%2;\n\t\t\t_12=_12+_11/2;\n\t\t}\n\t\t\tif(_12>=1)\t\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t}\n\t\t\telse if(_12==0)\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9978448275862069, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2f6bfdad35c91fb78a5e788d17de0b9b", "bug_code_uid": "ceb98937ccc85d01ee600f4326f2551a", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "61a03444cadcffd1e636fb607015dceb", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(void)\n{\n\tlong long int n,a[100005],i,j,dif1,dif2,min,max;\n\tscanf(\"%I64d\",&n);\n\tfor(i=1;i<n+1;i++) {\n\t\tscanf(\"%I64d\",&a[i]);\n\t}\n\ta[0]=-2000000005;\n\ta[n+1]=2000000005;\n\tfor(i=1;i<n+1;i++) {\n\t\tdif1=a[i]-a[i-1];\n\t\tdif2=a[i+1]-a[i];\n\t\tif(dif1>=dif2)\n\t\t\tmin=dif2;\n\t\telse\n\t\t\tmin=dif1;\n\t\t\n\t\tdif1=a[i]-a[1];\n\t\tdif2=a[n]-a[i];\n\t\tif(dif1>=dif2)\n\t\t\tmax=dif1;\n\t\telse\n\t\t\tmax=dif2;\n\t\tprintf(\"%I64d %I64d\\n\",min,max);\n\t}\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(void)\n{\n\tlong long int n,a[100005],i,j,dif1,dif2,min,max;\n\tscanf(\"%I64d\",&n);\n\tfor(i=1;i<n+1;i++) {\n\t\tscanf(\"%I64d\",&a[i]);\n\t}\n\ta[0]=-20000000005;\n\ta[n+1]=20000000005;\n\tfor(i=1;i<n+1;i++) {\n\t\tdif1=a[i]-a[i-1];\n\t\tdif2=a[i+1]-a[i];\n\t\tif(dif1>=dif2)\n\t\t\tmin=dif2;\n\t\telse\n\t\t\tmin=dif1;\n\t\t\n\t\tdif1=a[i]-a[1];\n\t\tdif2=a[n]-a[i];\n\t\tif(dif1>=dif2)\n\t\t\tmax=dif1;\n\t\telse\n\t\t\tmax=dif2;\n\t\tprintf(\"%I64d %I64d\\n\",min,max);\n\t}\t\n\treturn 0;\n}"}
{"similarity_score": 0.9554455445544554, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ec273e878d47152dfdf6e77c5de38eb8", "bug_code_uid": "6fe24b1290ef5461ea4c601163e7a03f", "src_uid": "af8ac55aa2594350226653c8d5ff47e4", "apr_id": "42e29a01a7c70f892a5f8bd5722c36ac", "difficulty": 1500, "tags": ["dp", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint comp(const void * a, const void * b){\n\treturn *((int*)a)-*((int*)b);\n}\n\nlong long plus[200000], a[200000];\n\nint main(){\n\tint n, m, i;\n\tlong long sum=0;\n\tscanf(\"%d %d\", &n, &m);\n\tfor(i=0;i<n;++i) scanf(\"%I64d\", a+i);\n\tqsort(a, n, sizeof(int), comp);\n\tfor(i=0;i<n;++i){\n\t\tplus[i%m]+=a[i];\n\t\tprintf(\"%I64d \", sum+=plus[i%m]);\n\t}\n\tputchar(10);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint comp(const void * a, const void * b){\n\treturn *((long long*)a)-*((long long*)b);\n}\n\nlong long plus[200000], a[200000];\n\nint main(){\n\tint n, m, i;\n\tlong long sum=0;\n\tscanf(\"%d %d\", &n, &m);\n\tfor(i=0;i<n;++i) scanf(\"%I64d\", a+i);\n\tqsort(a, n, sizeof(long long), comp);\n\tfor(i=0;i<n;++i){\n\t\tplus[i%m]+=a[i];\n\t\tprintf(\"%I64d \", sum+=plus[i%m]);\n\t}\n\tputchar(10);\n\treturn 0;\n}\n"}
{"similarity_score": 0.984, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b6b29fb7a56413bad79da7edeaa5e542", "bug_code_uid": "f14115387f874b3a20738ebe221cb329", "src_uid": "2ae1a4d4f2e58b359c898d1ff38edb9e", "apr_id": "ba7a04c9409150c7e857996165fccbaa", "difficulty": 1400, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nlong long arr[100005];\n\nvoid quickSort(int first, int last)\n{\n\tint pivot;\n\tint i;\n\tint j;\n\tlong long temp;\n\t\n\tif (first < last)\n\t{\n\t\tpivot = first;\n\t\ti = first;\n\t\tj = last;\n\n\t\twhile (i < j)\n\t\t{\n\t\t\twhile (arr[i] <= arr[pivot] && i < last)\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\twhile (arr[j] > arr[pivot])\n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tif (i < j)\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\n\t\ttemp = arr[pivot];\n\t\tarr[pivot] = arr[j];\n\t\tarr[j] = temp;\n\n\t\tquickSort(first, j - 1);\n\t\tquickSort(j + 1, last);\n\t}\n}\n\n\nint main(void) {\n    long long n;\n    long long idx=0;\n    \n    scanf(\"%lld\", &n);    \n    \n    for(long long i = 1; i*i <= n ; i++){    \n        if(n % i == 0) {\n            long long cnt = n / i;\n            arr[idx++] = 1 * cnt + cnt * (cnt -1 ) * i / 2;\n            arr[idx++] = 1 * i + i * (i -1 ) * cnt / 2;\n        }\n    }\n\n    quickSort(0, idx - 1);\n\n    for(long long i = 0; i< idx; i++) \n        printf(\"%lld \", arr[i]);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nlong long arr[100005];\n\nvoid quickSort(int first, int last)\n{\n\tint pivot;\n\tint i;\n\tint j;\n\tlong long temp;\n\t\n\tif (first < last)\n\t{\n\t\tpivot = first;\n\t\ti = first;\n\t\tj = last;\n\n\t\twhile (i < j)\n\t\t{\n\t\t\twhile (arr[i] <= arr[pivot] && i < last)\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\twhile (arr[j] > arr[pivot])\n\t\t\t{\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tif (i < j)\n\t\t\t{\n\t\t\t\ttemp = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = temp;\n\t\t\t}\n\t\t}\n\n\t\ttemp = arr[pivot];\n\t\tarr[pivot] = arr[j];\n\t\tarr[j] = temp;\n\n\t\tquickSort(first, j - 1);\n\t\tquickSort(j + 1, last);\n\t}\n}\n\n\nint main(void) {\n    long long n;\n    long long idx=0;\n    \n    scanf(\"%lld\", &n);    \n    \n    for(long long i = 1; i*i <= n ; i++){    \n        if(n % i == 0) {\n            long long cnt = n / i;\n            arr[idx++] = 1 * cnt + cnt * (cnt -1 ) * i / 2;\n            if( cnt != i )\n                arr[idx++] = 1  * i + i * (i -1 ) * cnt / 2;\n        }\n    }\n\n    quickSort(0, idx - 1);\n\n    for(long long i = 0; i< idx; i++) \n        printf(\"%lld \", arr[i]);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9557522123893806, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "aa62649602afdeed9e8047f326ad02f2", "bug_code_uid": "cddda07c6593ccc88dcc7429d91555d5", "src_uid": "80d3da5aba371f4d572ea928025c5bbd", "apr_id": "894da7fa918a361cbe8bad96d1d79148", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ int m,n,i,j,c=0,d=0;\n  scanf(\"%d %d\",&m,&n);\n  char a[m][101];\n  for(i=0;i<m;i++)\n  scanf(\"%s\",a[i]);\n  for(i=0;i<m;i++)\n  {\n      for(j=0;j<(n-1);j++)\n      {\n        if(a[i][j]==a[i][j+1])\n         c++;\n         else\n        {\n            printf(\"NO\");\n            return 0;\n        }\n      }\n  if(c==n-1)\n    c=0;\n  else{\n    c=7;\n  break;}\n  }\nprintf(\"%d\",c);\nif(c==0)\n{\nfor(i=0;i<m-1;i++)\n{\n    if(a[i][0]!=a[i+1][0])d++;\n}\nif(d==m-1)\n    printf(\"YES\");\nelse\n    printf(\"NO\");\n}\n\nreturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{ int m,n,i,j,c=0,d=0;\n  scanf(\"%d %d\",&m,&n);\n  char a[m][101];\n  for(i=0;i<m;i++)\n  scanf(\"%s\",a[i]);\n  for(i=0;i<m;i++)\n  {\n      for(j=0;j<(n-1);j++)\n      {\n        if(a[i][j]==a[i][j+1])\n         c++;\n         else\n        {\n            printf(\"NO\");\n            return 0;\n        }\n      }\n  if(c==n-1)\n    c=0;\n  }\nif(c==0)\n{\nfor(i=0;i<m-1;i++)\n{\n    if(a[i][0]!=a[i+1][0])d++;\n}\nif(d==m-1)\n    printf(\"YES\");\nelse\n    printf(\"NO\");\n}\n\nreturn 0;\n}\n\n\n"}
{"similarity_score": 0.9196141479099679, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "9c30af0adefad312db30d40648101fc7", "bug_code_uid": "11d09920efa6976a1523a63cc3df2757", "src_uid": "9fb84ddc2e04fd637812cd72110b7f36", "apr_id": "bcd8c388f685513a59cbf082b5aa2e09", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include <stdio.h>\r\n    \r\n    int main(){\r\n        int t;\r\n        scanf(\"%d\",&t);\r\n        while(t--){\r\n            int n, k;\r\n            scanf(\"%d %d\",&n,&k);\r\n            \r\n            if(n%2!=0 && k!=1) {printf(\"NO\\n\"); return 0;}\r\n\r\n            printf(\"YES\\n\");\r\n            for(int i=1, c=0; i <= n*k; i+=2){\r\n                printf(\"%d \",i);\r\n                c++;\r\n                if(c==k){ printf(\"\\n\"); c=0;}\r\n            }\r\n            for(int i=2, c=0; i <= n*k; i+=2){\r\n                printf(\"%d \",i);\r\n                c++; \r\n                if(c==k){ printf(\"\\n\"); c=0;}\r\n            }\r\n        }\r\n        return 0;\r\n    }", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n, k;\r\n        scanf(\"%d %d\",&n,&k);\r\n        \r\n        if(n%2!=0 && k!=1) {printf(\"NO\\n\");}\r\n        else{\r\n            printf(\"YES\\n\");\r\n            for(int i=1, c=0; i <= n*k; i+=2){\r\n                printf(\"%d \",i);\r\n                c++;\r\n                if(c==k){ printf(\"\\n\"); c=0;}\r\n            }\r\n            for(int i=2, c=0; i <= n*k; i+=2){\r\n                printf(\"%d \",i);\r\n                c++; \r\n                if(c==k){ printf(\"\\n\"); c=0;}\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9592760180995475, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "511dc8a2bb3ce3deae68e013f8684b73", "bug_code_uid": "b02bc7cb0029b688833b32ca42698e6f", "src_uid": "a5e724081ad84f88813bb4de23a8230e", "apr_id": "92b032e8ab74214986fa18619f80cc21", "difficulty": 1600, "tags": ["data structures", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t300000\n\nint main() {\n\tint i, j, l, n, q, cnt;\n\tstatic int qq[N], ii[N + 1], cc[N + 1];\n\n\tscanf(\"%d%d\", &n, &q);\n\tfor (i = 1; i <= n; i++)\n\t\tii[i] = -1;\n\tj = -1;\n\tl = 0;\n\tcnt = 0;\n\twhile (q-- > 0) {\n\t\tint type, x, t;\n\n\t\tscanf(\"%d\", &type);\n\t\tif (type == 1) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\tcnt++;\n\t\t\tqq[l++] = x;\n\t\t\tcc[x]++;\n\t\t} else if (type == 2) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\tcnt -= cc[x];\n\t\t\tcc[x] = 0;\n\t\t\tii[x] = l;\n\t\t} else if (type == 3) {\n\t\t\tscanf(\"%d\", &t);\n\t\t\tt--;\n\t\t\tif (j < t) {\n\t\t\t\tint k;\n\n\t\t\t\tfor (k = j + 1; k <= t; k++)\n\t\t\t\t\tif (ii[qq[k]] <= k)\n\t\t\t\t\t\tcnt--;\n\t\t\t\tj = t;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", cnt);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t300000\n\nint main() {\n\tint i, j, l, n, q, cnt;\n\tstatic int qq[N], ii[N + 1], cc[N + 1];\n\n\tscanf(\"%d%d\", &n, &q);\n\tfor (i = 1; i <= n; i++)\n\t\tii[i] = -1;\n\tj = -1;\n\tl = 0;\n\tcnt = 0;\n\twhile (q-- > 0) {\n\t\tint type, x, t;\n\n\t\tscanf(\"%d\", &type);\n\t\tif (type == 1) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\tcnt++;\n\t\t\tqq[l++] = x;\n\t\t\tcc[x]++;\n\t\t} else if (type == 2) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\tcnt -= cc[x];\n\t\t\tcc[x] = 0;\n\t\t\tii[x] = l;\n\t\t} else if (type == 3) {\n\t\t\tscanf(\"%d\", &t);\n\t\t\tt--;\n\t\t\tif (j < t) {\n\t\t\t\tint k;\n\n\t\t\t\tfor (k = j + 1; k <= t; k++)\n\t\t\t\t\tif (ii[qq[k]] <= k) {\n\t\t\t\t\t\tcnt--;\n\t\t\t\t\t\tcc[qq[k]]--;\n\t\t\t\t\t}\n\t\t\t\tj = t;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", cnt);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7875125881168177, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "f5f8f5628e20b6814f60a0aeba02a4ff", "bug_code_uid": "05f27e98010627e7c84a8baccc855c0e", "src_uid": "614aa068ce74090b6577006c45e549cf", "apr_id": "9c44ecba1617e41b5badb36f68ac0a61", "difficulty": null, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\n    long long int a,i,j,k,z,x,b,max,p,q,y;\n    scanf(\"%lld\",&a);\n\n    for(j=1;j<=a;j++)\n    {\n        scanf(\"%lld\",&y);\n        if(y==1)printf(\"0\\n\");\n        else if(y==2)printf(\"1\\n\");\n        else if(y==3)printf(\"2\\n\");\n        else if(y>3)\n        {\n            for(k=y-1;k>1;k--)\n            {\n                if(y%k==0)\n                {\n                    printf(\"%lld\\n\",y/k);\n                    break;\n                }\n            }\n        }\n\n\n}\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\n    long long int a,i,j,k,z,x,b,m,p,q,y;\n    scanf(\"%lld\",&a);\n\n    for(j=1;j<=a;j++)\n    {\n        scanf(\"%lld\",&y);\n        if(y==1)printf(\"0\\n\");\n        else if(y==2)printf(\"1\\n\");\n        else if(y==3)printf(\"2\\n\");\n        else if(y>3)\n        {\n\n            if(y%2==0)\n            {\n                    printf(\"2\\n\");\n            }\n            else\n            {\n                 printf(\"3\\n\");\n            }\n        }\n\n\n}\n}\n"}
{"similarity_score": 0.30590961761297797, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b1c2fdb07eff683141bafde775e6f512", "bug_code_uid": "d2af0a45f9214da3e5b5b453a79342f5", "src_uid": "ac7d117d58046872e9d665c9f99e5bff", "apr_id": "b1cccca50052aaef8c95046c6ea4f048", "difficulty": 800, "tags": ["brute force", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <stdbool.h>\r\nbool o(int n){\r\n    int m,i;\r\n    m=floor(log10(n));\r\n    for(i=0;i<m;i++){\r\n        int x=n/(pow(10,i));\r\n        int y=n/(pow(10,(i+1)));\r\n        if(x%10!=y%10){\r\n          return false;  \r\n        }\r\n      }\r\n    return true;\r\n}\r\nvoid solve(){\r\n    int n,i,k=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++){\r\n        if(o(i)==1) k++;\r\n    }\r\n    printf(\"%d\\n\",k);\r\n}\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--) solve();\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nvoid solve(){\r\n    int n,i,s=0;\r\n    scanf(\"%d\",&n);\r\n    int k=floor(log10(n));\r\n    int p=n/(pow(10,k));\r\n    for(i=0;i<=k;i++){\r\n        s+=pow(10,i);\r\n    }\r\n    s*=p;\r\n    if(n>=s) printf(\"%d\\n\",9*k+p);\r\n    else printf(\"%d\\n\",9*k+p-1);\r\n}\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--) solve();\r\n}"}
{"similarity_score": 0.8352272727272727, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "4f8bd89c037f8cee32cd0be23297a6c6", "bug_code_uid": "f4ac860ffda06f6cb9be1532738712cf", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "a073ccfbe5f03761ce182efcf11533ba", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\nint main()\n{\nint n,x;\nlong int s=0,max;\nscanf(\"%d\",&n);\nwhile(n--)\n{\nscanf(\"%d\",&x);\ns+=x;\nif(s%2==0) max=s;\n}\n\nprintf(\"%ld\\n\",max);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\nint n,x;\nlong long s=0,min=1e10;\nscanf(\"%d\",&n);\nwhile(n--)\n{\nscanf(\"%d\",&x);\ns+=x;\nif(x&1&&x<min) min=x;\n}\nif(s&1) s-=min;\nprintf(\"%lld\\n\",s);\nreturn 0;\n}"}
{"similarity_score": 0.9563636363636364, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0635c74e44c175fff5696e6bbbf8b8c3", "bug_code_uid": "3bc3419fcb2c10c587110db092b746dc", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "3aeb309f84a3bf420941dbb32baa7fe6", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, l, a[100000], i, s, t = 1;\n\tscanf(\"%d%d\", &n, &l);\n\tfor (i = 1; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (i = 1; i < n, i >= t; i = s)\n\t{\n\t\tt = i;\n\t\ts = i + a[i];\n\t\tif (s == l)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, l, a[100000], i, s;\n\tscanf(\"%d%d\", &n, &l);\n\tfor (i = 1; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (i = 1; i < n; i = s)\n\t{\n\t\ts = i + a[i];\n\t\tif (s == l)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.2528445006321112, "equal_cnt": 21, "replace_cnt": 17, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "854b6de062bf2b958a5ce041655dad4d", "bug_code_uid": "5f7f308b83554fcb92c43e46246427b3", "src_uid": "740d2aba32f69b8cfe8f7cb624621a63", "apr_id": "6466ba16e72a7ee3997c10fe99a24b79", "difficulty": 1200, "tags": ["dp", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nmain()\r\n{ long int n,q,k,i,j,s,t,l,r,a[100000];\r\n\tscanf(\"%ld%ld%ld\",&n,&q,&k);\r\n\tfor(i=1; i<=n; i++) scanf(\"%ld\",&a[i]);\r\n\tfor(j=0; j<q; j++) { s=0; \r\n\t\tscanf(\"%ld%ld\",&l,&r); \r\n\t\ts=a[l]-1+k-a[r];\r\n\t\tfor(i=l+1; i<=r; i++) { s=s+2*(a[i]-a[i-1]-1);}\r\n\t\tprintf(\"%lld\\n\",s);\r\n}}", "fixed": "#include <stdio.h>\r\n \r\nint a[100010];\r\n \r\nint main()\r\n{\r\n    int n, q, k;\r\n    scanf(\"%d%d%d\", &n, &q, &k);\r\n    for (int i = 1; i <= n; i++) {\r\n        scanf(\"%d\", &a[i]);\r\n    }\r\n    for (int qq = 0; qq < q; qq++) {\r\n        int l, r;\r\n        scanf(\"%d%d\", &l, &r);\r\n        long long result = a[r] - a[l];\r\n        result -= r;\r\n        result -= r;\r\n        result += l;\r\n        result += l;\r\n        result--;\r\n        result += k;\r\n        printf(\"%lld\\n\", result);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9638802889576883, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7a59fd5d105c352f79878b5f66adee40", "bug_code_uid": "1ec538af61c21cb90deefd3772f264bb", "src_uid": "e3275cd360d8f46cbbae03dfa86b924a", "apr_id": "f326cc8165394d3837e984bc484efd79", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "char brack[1000010];\nint wrong_pairs()\n{\n    int l=0,r=0,mis=0;\n    char* p=brack;\n    while(*p)\n    {\n        switch(*p)\n        {\n            case '(':l++;break;\n            case ')':{\n                if(l<=r) mis++;\n                r++;\n                break;\n            }\n        }\n    }\n    return l==r?mis:-1;\n}\nint main()\n{\n    int val,n;\n    scanf(\"%d%s\",&n,brack);\n    brack[n]=0;\n    val=wrong_pairs();\n    if(val>=0) printf(\"%d\",val<<1);\n    else printf(\"-1\");\n    return 0;\n}", "fixed": "char brack[1000010];\nint wrong_pairs()\n{\n    int l=0,r=0,mis=0;\n    char* p=brack;\n    while(*p)\n    {\n        switch(*p)\n        {\n            case '(':l++;break;\n            case ')':{\n                if(l<=r) mis++;\n                r++;\n                break;\n            }\n        }\n        p++;\n    }\n    return l==r?mis:-1;\n}\nint main()\n{\n    int val;\n    scanf(\"%*d%s\",brack);\n    val=wrong_pairs();\n    if(val>=0) printf(\"%d\",val<<1);\n    else printf(\"-1\");\n    return 0;\n}"}
{"similarity_score": 0.6453839516824849, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5cf8280ad08ec3b5eb75cb54385b965d", "bug_code_uid": "0d968c331af9c3bda2b0f4ce5d561646", "src_uid": "ec092209aa9f45409e5aa01d7fc784e1", "apr_id": "4105a2676317fb920bb6247fa59ca577", "difficulty": 1800, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[200005];\nint b[200005];\n\nint main(int argc, char const *argv[]) {\n  int n, num = 0, k, temp;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &b[i]);\n    k = b[i] + num - 1;\n    temp = num;\n    if(b[i] != 0 && k <= i) num = i - b[i] + 2;\n  }\n  if(b[n-1] == 1 && temp == 0) printf(\"%d\\n\", n - 1);\n  else printf(\"%d\\n\", num + n);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint a[200005];\nint b[200005];\n\nint main(int argc, char const *argv[]) {\n  int n, num = 0, k, temp = 1, b1 = -1, flag = 1;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &b[i]);\n    if(b[i] == 1) b1 = i;\n    k = b[i] + num - 1;\n    if(b[i] != 0 && k <= i) num = i - b[i] + 2;\n  }\n  for (int i = b1; i < n; i++) {\n    k = i - b1 + 1;\n    if(b[i] != k) flag = 0;\n  }\n  if (flag == 1 && b1 != -1) {\n    for (int i = 0; i < b1; i++) {\n      k = b[i] - n + b1 - 1;\n      if(b[i] != 0 && k <= i) temp = 0;\n    }\n  }\n  if(flag == 1 && temp == 1) {\n    printf(\"%d\\n\",b1);\n  }\n  else printf(\"%d\\n\", num + n);\n  return 0;\n}\n"}
{"similarity_score": 0.9990029910269193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dd06ecfd122e2c3613998d4fd7d1ff5a", "bug_code_uid": "0dc091eb5bf5c39894c44aac2496bba1", "src_uid": "816907d873bce3573ce1e5ae3f494768", "apr_id": "479ede533e41ecfeedc6892b6f6cec5d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    char s[100];\n\n    i=0;\n    while(i < t)\n    {\n        scanf(\"%s\",s);\n        int n = strlen(s);\n        int m = n-1;\n        if(s[m-1]=='p' && s[m]=='o')\n        {\n            printf(\"FILIPINO\\n\");\n        }\n        else if(s[m-1]=='s' && s[m]=='u')\n        {\n            printf(\"JAPANESE\\n\");\n        }\n        else if(s[m-1]=='d' && s[m]=='a')\n        {\n            printf(\"KOREAN\\n\");\n        }\n        i++;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    char s[1000];\n\n    i=0;\n    while(i < t)\n    {\n        scanf(\"%s\",s);\n        int n = strlen(s);\n        int m = n-1;\n        if(s[m-1]=='p' && s[m]=='o')\n        {\n            printf(\"FILIPINO\\n\");\n        }\n        else if(s[m-1]=='s' && s[m]=='u')\n        {\n            printf(\"JAPANESE\\n\");\n        }\n        else if(s[m-1]=='d' && s[m]=='a')\n        {\n            printf(\"KOREAN\\n\");\n        }\n        i++;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.49099099099099097, "equal_cnt": 32, "replace_cnt": 14, "delete_cnt": 15, "insert_cnt": 3, "fix_ops_cnt": 32, "lang": "GNU C11", "fix_code_uid": "1d7872274222091a98da974b8043e759", "bug_code_uid": "b62c557ae617d2df07cc6271298831df", "src_uid": "b0f968ca75fbea2f11a7e4b9006f136e", "apr_id": "f204bc59bafe6c61c08f20b12122a8d7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n   \r\n    while(t--)\r\n    {\r\n        char arr[8][8];\r\n        int a, b; \r\n        for(int i=0; i<8; i++){\r\n            for(int j=0; j<8; j++){\r\n                scanf(\"%c\",&arr[i][j]);\r\n            }\r\n        }\r\n        for(int i=1; i<=8; i++){\r\n            for(int j=1; j<=8; j++){\r\n               \r\n                if (arr[i][j]=='#'&& arr[i+1][j+1]=='#' && arr[i+1][j-1]=='#' && arr[i-1][j+1]=='#' && arr[i-1][j-1]=='#'){\r\n                    a=i;\r\n                    b=j;\r\n                    break;\r\n                \r\n                }\r\n                }\r\n        }\r\n        printf(\"%d %d \\n\", a, b);\r\n        }\r\n       \r\n       \r\n        \r\n    }\r\n    \r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n    char arr[9][9];\r\n    int a,b,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n\r\n    { \r\n        for(int i=1;i<=8;i++)\r\n      {\r\n        for(int j=1;j<=8;j++)\r\n        {\r\n            scanf(\" %c\",&arr[i][j]);\r\n        }\r\n    }\r\n    for(int i=1;i<=8;i++)\r\n    {\r\n        for(int j=1;j<=8;j++)\r\n        {\r\n            if(arr[i][j]=='#' && arr[i][j+2]=='#' && arr[i+2][j]=='#'&&arr[i+2][j+2]=='#')\r\n            {\r\n                a=i+1;\r\n                b=j+1;\r\n                break;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    printf(\"%d %d\\n\",a,b);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9823943661971831, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "30e4032d68969b69706606602dde95ff", "bug_code_uid": "02cb8bc4cc205e22b3f920ee4bf0bd39", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "adb33f4c7980b7a411e39952b277017b", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,x=0,i;\n    scanf(\"%d\",&a);\n    for(i=4;i<a;i++)\n    {\n        if((a-i)%2==0 && a%2==0 || (a-i)%3==0)\n        {\n            x=1;\n            break;\n        }\n\n    }\n    if(x>=1)\n    {\n        printf(\"%d %d\\n\",i,a-i);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,x=0,i;\n    scanf(\"%d\",&a);\n    for(i=4;i<a;i++)\n    {\n        if((a-i)%2==0 && a%2==0 || (a-i)%3==0 && i%2==0)\n        {\n            x=1;\n            break;\n        }\n\n    }\n    if(x>=1)\n    {\n        printf(\"%d %d\\n\",i,a-i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9674067076051016, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "c2869d47a21ee64242fc4ee78dd37a1c", "bug_code_uid": "b537c3ebd325cd0c42d273baefc6da67", "src_uid": "c8321b60a6ad04093dee3eeb9ee27b6f", "apr_id": "d2e081459d0fe2604103b45dc1ad19d0", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define min(a, b) (a < b ? a : b)\n\nint last[9], cur[9];\nchar temp[10];\nint N;\n\nvoid update(int test[9])\n{\n    for (i = 0; i < N; i++)\n    {\n        \n        if (!strcmp(temp, \"XXXS\"))\n            test[0]++;\n        else if (!strcmp(temp, \"XXS\"))\n            test[1]++;\n        else if (!strcmp(temp, \"XS\"))\n            test[2]++;\n        else if (!strcmp(temp, \"S\"))\n            test[3]++;\n        else if (!strcmp(temp, \"M\"))\n            test[4]++;\n        else if (!strcmp(temp, \"L\"))\n            test[5]++;\n        else if (!strcmp(temp, \"XL\"))\n            test[6]++;\n        else if (!strcmp(temp, \"XXL\"))\n            test[7]++;\n        else\n            test[8]++;\n    }\n}\n\n\n\n\nint main()\n{\n\tint ans, i;\n\tmemset(last, 0, sizeof(last));\n\tmemset(cur, 0, sizeof(cur));\n\tscanf(\"%d\", &N);\n    scanf(\"%s\", temp);\n\t\n    update(last);\n    \n\tscanf(\"%s\", temp);\n    update(cur);\n\t\n\tans = N;\n\tfor (i = 0; i < 9; i++)\n    {\n\t\tif (cur[i] > 0 && last[i] > 0)\n        {\n\t\t\tans -= min(cur[i], last[i]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n} \n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define min(a, b) (a < b ? a : b)\n\nint last[9], cur[9];\nchar temp[10];\nint N, i;\n\nvoid update(int test[9])\n{\n    for (i = 0; i < N; i++)\n    {\n        scanf(\"%s\", temp);\n        if (!strcmp(temp, \"XXXS\"))\n            test[0]++;\n        else if (!strcmp(temp, \"XXS\"))\n            test[1]++;\n        else if (!strcmp(temp, \"XS\"))\n            test[2]++;\n        else if (!strcmp(temp, \"S\"))\n            test[3]++;\n        else if (!strcmp(temp, \"M\"))\n            test[4]++;\n        else if (!strcmp(temp, \"L\"))\n            test[5]++;\n        else if (!strcmp(temp, \"XL\"))\n            test[6]++;\n        else if (!strcmp(temp, \"XXL\"))\n            test[7]++;\n        else\n            test[8]++;\n    }\n}\n\n\n\n\nint main()\n{\n\tint ans;\n\tmemset(last, 0, sizeof(last));\n\tmemset(cur, 0, sizeof(cur));\n\tscanf(\"%d\", &N);\n    \n    update(last);\n    update(cur);\n\t\n\tans = N;\n\tfor (i = 0; i < 9; i++)\n    {\n\t\tif (cur[i] > 0 && last[i] > 0)\n        {\n\t\t\tans -= min(cur[i], last[i]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n} \n"}
{"similarity_score": 0.9796875, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3a6aaf58ca88241280806addba6bcd2d", "bug_code_uid": "28d2357f7f365de2f13b605e12a3505e", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "c6bb783e11b5962193587d2c30ce364a", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n\tlong long int j,max,no;\n\t\n\tlong long int n,a[9],i;\n\tlong long int b[9];\n\tlong long int rem;\n \tlong long int k;\n\n\n\tscanf(\"%lld\",&n);\n\tfor(j=0;j<9;j++)\n\t\tscanf(\"%lld\",&a[j]);\n\n\tint \tmin=a[0];\n\tfor(j=0;j<8;j++)\n\t{\n\t\tif(a[j+1]<=min)\n\t\t{\n\t\t\tmin=a[j+1];\n\t\t\tno=j+2;\n\t\t}\n\t}\n\tlong long int digit=n/min;\n\tlong long int c[digit];\n\tfor(j=0;j<digit;j++)\n\t\tc[j]=no;\n\n\n\tfor(j=0;j<digit;j++)\n\n\n\t\trem=n-digit*min;\t\t\t\n\tfor(j=0;j<digit;j++)\n\t{\n\n\t\tfor(k=8;k>=no;k--)\n\t\t{\n\t\t\tif(a[k]<=rem+min)\n\t\t\t{\n\t\t\t\tc[j]=k+1;\n\t\t\t\trem=rem+min-a[k];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(j=0;j<digit;j++)\n\t\tprintf(\"%lld\",c[j]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n\tlong long int j,max,no;\n\t\n\tlong long int n,a[9],i;\n\tlong long int b[9];\n\tlong long int rem;\n \tlong long int k;\n\n\n\tscanf(\"%lld\",&n);\n\tfor(j=0;j<9;j++)\n\t\tscanf(\"%lld\",&a[j]);\n\n\tint \tmin=a[0];\n\tfor(j=0;j<8;j++)\n\t{\n\t\tif(a[j+1]<=min)\n\t\t{\n\t\t\tmin=a[j+1];\n\t\t\tno=j+2;\n\t\t}\n\t}\n\tlong long int digit=n/min;\n\tlong long int c[digit];\n\tfor(j=0;j<digit;j++)\n\t\tc[j]=no;\n\n\n\tfor(j=0;j<digit;j++)\n\n\n\t\trem=n-digit*min;\t\t\t\n\tfor(j=0;j<digit;j++)\n\t{\n\n\t\tfor(k=8;k>=no;k--)\n\t\t{\n\t\t\tif(a[k]<=rem+min)\n\t\t\t{\n\t\t\t\tc[j]=k+1;\n\t\t\t\trem=rem+min-a[k];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(j=0;j<digit;j++)\n\t\tprintf(\"%lld\",c[j]);\n\t\nif(min>n)\nprintf(\"-1\");\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9931107578166402, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "98658c9c9b68ff584875354eaa08f7b7", "bug_code_uid": "d6dddbdb2ffd6977e3e9d3d78690b74f", "src_uid": "644b8f95b66b7e4cb39af552ec518b3f", "apr_id": "b47c663ff1285e76ef20337e019d557d", "difficulty": 1700, "tags": ["constructive algorithms", "bitmasks"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid Fun(int num, unsigned char *dst)\n{\n    while(num)\n    {\n        dst[++dst[0]] = num&1;\n        num >>=1;\n    }\n}\n\nint main()\n{\n    int N, Len, i;\n    unsigned char StrL[64], StrR[64], Ans[64];\n    long long L, R, C;\n    scanf(\"%d\", &N);\n    while(N--)\n    {\n        scanf(\"%I64d %I64d\", &L, &R);\n        ++R;\n        memset(StrL, 0, sizeof(StrL));\n        memset(StrR, 0, sizeof(StrR));\n        Fun(L, StrL);\n        Fun(R, StrR);\n        Ans[0] = StrR[0];\n        for(i=Ans[0]; i>0; --i)\n        {\n            if(StrR[i]==1 && StrL[i]==0)\n            {\n                Ans[i] = 0;\n                break;\n            }\n            Ans[i] = StrR[i];\n        }\n        for(--i; i>0; --i)\n        {\n            Ans[i] = 1;\n        }\n        C = 0;\n        for(i=Ans[0]; i>0; --i)\n        {\n            C <<= 1;\n            C |= Ans[i];\n        }\n        printf(\"%I64d\\n\", C);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nvoid Fun(long long num, unsigned char *dst)\n{\n    while(num)\n    {\n        dst[++dst[0]] = num&1;\n        num >>= 1;\n    }\n}\n\nint main()\n{\n    int N, Len, i;\n    unsigned char StrL[64], StrR[64], Ans[64];\n    long long L, R, C;\n    scanf(\"%d\", &N);\n    while(N--)\n    {\n        scanf(\"%I64d %I64d\", &L, &R);\n        ++R;\n        memset(StrL, 0, sizeof(StrL));\n        memset(StrR, 0, sizeof(StrR));\n        Fun(L, StrL);\n        Fun(R, StrR);\n        Ans[0] = StrR[0];\n        for(i=Ans[0]; i>0; --i)\n        {\n            if(StrR[i]==1 && StrL[i]==0)\n            {\n                Ans[i] = 0;\n                break;\n            }\n            Ans[i] = StrR[i];\n        }\n        for(--i; i>0; --i)\n        {\n            Ans[i] = 1;\n        }\n        C = 0;\n        for(i=Ans[0]; i>0; --i)\n        {\n            C <<= 1;\n            C |= Ans[i];\n        }\n        printf(\"%I64d\\n\", C);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5428051001821493, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "b0db301bdd50f59b3e625f4debbd9ade", "bug_code_uid": "8e48b943432728ddc49d4c905b1fcd35", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "a78c7b7111014d7af73c67d3ce7a4691", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int i,n,x,y,a,b,t,k;\n  while(t--)\n  {\n      scanf(\"%d%d%d%d\",&x,&y,&a,&b);\n      k=(y-x);\n     {\n     if(k%(a+b)==0)\n     {\n         t=k/(a+b);\n     }\n      else\n      {\n          t=-1;\n      }\n        printf(\"%d\\n\",t);\n     }\n  }\n\nreturn 0;\n\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,d,x,y,t,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d%d%d\",&x,&y,&a,&b);\n        d=(y-x)/(a+b);\n        if((y-x)%(a+b)==0)\n        {printf(\"%d\\n\",d);}\n        else\n        printf(\"-1\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.998589562764457, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cbeb702617a7a910183481a3c6078a83", "bug_code_uid": "be56523537320de5e110a3ee13b2d603", "src_uid": "e4381bd9f22c0e49525cc05cc5cd2399", "apr_id": "d07005491a13856bcc2643ab6eaafea0", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<stdlib.h>\nstruct points\n{\n    int x;\n    int y;\n};\nint main()\n{\n    struct points pt={0,0};;\n    char moves[1000];int n,i,ans=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c\",&moves[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(moves[i]=='U')\n        {\n           pt.x+=1;\n        }\n        if(moves[i]=='R')\n        {\n           pt.y+=1;\n        }\n        if(pt.x==pt.y)\n        {   if(moves[i]=='R')\n        {\n            if(moves[i+1]=='R')\n            ans++;}\n            if(moves[i]=='U')\n            {\n                if(moves[i+1]=='U')\n                    ans++;\n            }\n        }}\n    printf(\"\\n%d\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<stdlib.h>\nstruct points\n{\n    int x;\n    int y;\n};\nint main()\n{\n    struct points pt={0,0};;\n    char moves[100000];int n,i,ans=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c\",&moves[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(moves[i]=='U')\n        {\n           pt.x+=1;\n        }\n        if(moves[i]=='R')\n        {\n           pt.y+=1;\n        }\n        if(pt.x==pt.y)\n        {   if(moves[i]=='R')\n        {\n            if(moves[i+1]=='R')\n            ans++;}\n            if(moves[i]=='U')\n            {\n                if(moves[i+1]=='U')\n                    ans++;\n            }\n        }}\n    printf(\"\\n%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.8298368298368298, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ad8a1905a2ef7af7f4f0feadd3fdb6ad", "bug_code_uid": "a497801377f583242f047543c5669973", "src_uid": "f89bd4ec97ec7e02a7f67feaeb4d3958", "apr_id": "15406ad094b269c565bce70dc4069285", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for (int t=0;t<n;t++)\r\n    {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        if(m%2==0)\r\n        {\r\n            int a[m];\r\n            int x;\r\n            for(x=0;x<m;x++)\r\n            {\r\n                a[x]=x+1;\r\n            }\r\n            for(x=0;x<m;x=x+2)\r\n            {\r\n                printf(\"%d %d \",a[x+1],a[x]);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n        \r\n        \r\n        else\r\n        {\r\n            int a[m];\r\n            int x;\r\n            for(x=0;x<m;x++)\r\n            {\r\n                a[x]=x+1;\r\n            }\r\n            for(x=0;x<m-2;x=x+2)\r\n            {\r\n                printf(\"%d %d \",a[x+1],a[x]);\r\n            }\r\n            printf(\"%d %d %d\\n\",a[x+1],a[x+2],a[x]);\r\n        }\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for (int t=0;t<n;t++)\r\n    {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        if(m%2==0)\r\n        {\r\n            int a[m];\r\n            int x;\r\n            for(x=0;x<m;x++)\r\n            {\r\n                a[x]=x+1;\r\n            }\r\n            for(x=0;x<m;x=x+2)\r\n            {\r\n                printf(\"%d %d \",a[x+1],a[x]);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n        \r\n        \r\n        else\r\n        {\r\n            int a[m];\r\n            int x;\r\n            for(x=0;x<m;x++)\r\n            {\r\n                a[x]=x+1;\r\n            }\r\n            for(x=0;x<m-3;x=x+2)\r\n            {\r\n                printf(\"%d %d \",a[x+1],a[x]);\r\n            }\r\n            printf(\"%d %d %d\\n\",a[x+1],a[x+2],a[x]);\r\n        }\r\n        \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8697674418604651, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7405e1131430c26afdc39439754af249", "bug_code_uid": "f19cbe38c1056cedc900647d190ace1b", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "bcd7cf328833c1277df39a6fc60476f8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main ()\n{\n\tint n , i , m ;\n\tscanf(\"%d\",&n);\n    while(n--)\n    {\n    \tscanf(\"%d\",&m);\n    \tif(!(m%2))\n    \tprintf(\"%d\\n\",m%4);\n    \telse\n    \tprintf(\"%d\\n\",m%2);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main ()\n{\n\tint n , i , m ;\n\tscanf(\"%d\",&n);\n    while(n--)\n    {\n    \tscanf(\"%d\",&m);\n    \tprintf(\"%d\\n\",m!=2?m%2:2);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9375, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "beeb0cbff8c78918c46e774cf85ab079", "bug_code_uid": "d85e988df108ded57ea2b82348eda280", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "4286b8395e2980b93bc99dd82d354d1d", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,b,c=1,i=0,max=0;\n    scanf(\"%d\\n\",&n);\n    int a[n];\n    while(n--){\n        scanf(\"%d \",&a[i]);\n        i++;\n    }\n    for(;n+1<i;n++){\n        if(a[n]<a[n+1]){c++;max=c>max?c:max;}\n        else{max=c>max?c:max;c=1}\n    }\n    printf(\"%d\",max);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,b,c=1,i=0,max=0;\n    scanf(\"%d\\n\",&n);\n    if(n==1){printf(\"%d\",1);return 0;}\n    int a[n];\n    while(n--){\n        scanf(\"%d \",&a[i]);\n        i++;\n    }\n    for(;n+1<i;n++){\n        if(a[n]<a[n+1]){c++;max=c>max?c:max;}\n        else{max=c>max?c:max;c=1;}\n    }\n    printf(\"%d\",max);\n    return 0;\n}"}
{"similarity_score": 0.6143497757847534, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "3d72eb5495e853061e2682a1ee3aa0fa", "bug_code_uid": "20754e6fde0717f83c468427051bae81", "src_uid": "94a38067fc8dd8619fa6e5873ca60220", "apr_id": "d5636122914a0889d9e99c680c38e5f8", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n  int n;\n  \n  scanf(\"%d\\n\", &n);\n  \n  int a[n];\n  int i, j;\n  \n  for (i = 0; i < n; i++){\n    scanf(\"%d \", &a[i]);\n  }\n  \n  for (i = 0; i < n - 1; i++){\n    for (j = 0; j < n; j++){\n      if ((a[i] + a[i + 1]) == a[j]){\n        if ((i != j) && ((i + 1) != j)){\n          printf(\"%d %d %d\", j + 1, i + 1, i + 2);\n          return 0;\n        }\n      }\n    }\n  }\n  printf(\"-1\");\n  \n  \n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n  int n;\n  \n  scanf(\"%d\\n\", &n);\n  \n  int a[n];\n  int i, j, k;\n  \n  for (i = 0; i < n; i++){\n    scanf(\"%d \", &a[i]);\n  }\n  \n  for (i = 0; i < n; i++){\n    for (j = 0; j < n; j++){\n      for (k = 0; k < n; k++){\n        if ((a[i] + a[j]) == a[k]){\n          if (i != j){\n            printf(\"%d %d %d\", k + 1, j + 1, i + 1);\n            return 0;\n          }\n        }\n      }\n    }\n  }\n  printf(\"-1\");\n  \n  \n  return 0;\n}\n"}
{"similarity_score": 0.9742120343839542, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5656f34945103a4dfa0ce81a61f9397b", "bug_code_uid": "253fd41fcc241fcdfab93d0d0fb19229", "src_uid": "564664d9cd2ccbccb42574b3881ec5fe", "apr_id": "c81f4a7d1c548a15ca21965543a21728", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nchar st[110];\nint i,l;\n\nint main()\n{\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tscanf(\"%d\",&l);\n\tscanf(\"%s\",st+1);\n\tfor(i=1;i<=l/2;i++){\n\t\tif(st[i]=='L'){\n\t\t\tprintf(\"%d %d\\n\",i,i+l/2);\n\t\t}\n\t\tif(st[i]=='R'){\n\t\t\tprintf(\"%d %d\\n\",i+l/2,i);\n\t\t}\n\t}\n\tsystem(\"pause\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nchar st[110];\nint i,l;\n\nint main()\n{\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tscanf(\"%d\",&l);\n\tscanf(\"%s\",st+1);\n\tfor(i=1;i<=l/2;i++){\n\t\tif(st[i]=='L'){\n\t\t\tprintf(\"%d %d\\n\",i,i+l/2);\n\t\t}\n\t\tif(st[i]=='R'){\n\t\t\tprintf(\"%d %d\\n\",i+l/2,i);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9143835616438356, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "8606de6d366870160c06fde67d430ed4", "bug_code_uid": "2307f55a4174b388d31187f328bcf7ce", "src_uid": "e2ff228091ca476926b8e905f1bc8dff", "apr_id": "45db40cb50caa2415b48b35a7de1a6de", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,m,i,j,sum=0,total=0;\n    long long int a[200005],genre[11]={0};\n    scanf(\"%lld %lld\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%lld\",&a[i]);\n    \n    \n    for(i=0;i<=n;i++)\n    genre[a[i]]++;\n    \n    \n    /*for(i=1;i<=m;i++)\n    {\n    if(genre[i]>=2)\n    sum=sum+(genre[i]*(genre[i]-1))/2;\n    \n    }*/\n    //printf(\"sum is %lld\\n\",sum);\n    for(i=1;i<=m;i++)\n    for(j=i+1;j<=m;j++)\n    total=total+(genre[i]*genre[j]);\n    //total=(n*(n-1)/2)-sum;\n    printf(\"%lld\\n\",total);\n    return 0;\n    \n        \n    \n    \n    \n    \n    \n}", "fixed": "#include<stdio.h>\nlong long int a[200005],genre[11]={0};\nint main()\n\n{\n    long long int n,m,i,j,sum=0,total=0;\n    \n    scanf(\"%lld %lld\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%lld\",&a[i]);\n    \n    \n    for(i=0;i<=n;i++)\n    genre[a[i]]++;\n    \n    \n    /*for(i=1;i<=m;i++)\n    {\n    if(genre[i]>=2)\n    sum=sum+(genre[i]*(genre[i]-1))/2;\n    \n    }*/\n    //printf(\"sum is %lld\\n\",sum);\n    for(i=1;i<=m;i++)\n    for(j=i+1;j<=m;j++)\n    total=total+(genre[i]*genre[j]);\n    //total=(n*(n-1)/2)-sum;\n    printf(\"%lld\\n\",total);\n    return 0;\n    \n        \n    \n    \n    \n    \n    \n}"}
{"similarity_score": 0.9830508474576272, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d1315c2007d728fa26d7daa0b485bd42", "bug_code_uid": "ffdc7359f99250d10a1e722dcb66dbec", "src_uid": "718cea81f609055cece58cae5310f703", "apr_id": "5a856ea0dc1e5f0178f686c8704617a1", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\u2591\u2591\u2591\n// \u2591 anzim bin nasir\n// \u2591\n#include<stdio.h>\n\nint sort (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n    int t,check;\n    long int i,n,a[100005];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        check=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%ld\",&a[i]);\n        }\n        qsort(a,n,sizeof(long int),sort);\n\n              for(i=n-1;i>0;i--)\n           {\n            if(a[i]<=i+1)\n                {\n                    check=1;\n                    break;\n                }\n          }\n        if(check)\n        printf(\"%ld\\n\",i+2);\n        else\n        printf(\"1\\n\");\n\n    }\n    return 0;\n}\n", "fixed": "//\u2591\u2591\u2591\n// \u2591 anzim bin nasir\n// \u2591\n#include<stdio.h>\n\nlong int sort (const void * a, const void * b)\n{\n  return ( *(long int*)a - *(long int*)b );\n}\nint main()\n{\n    int t,check;\n    long int i,n,a[100005];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%ld\",&n);\n        check=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%ld\",&a[i]);\n        }\n        qsort(a,n,sizeof(long int),sort);\n\n        for(i=n-1;i>=0;i--)\n           {\n            if(a[i]<=i+1)\n                {\n                    check=1;\n                    break;\n                }\n          }\n        if(check)\n        printf(\"%ld\\n\",i+2);\n        else\n        printf(\"1\\n\");\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9888059701492538, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7d0ed1e03fbdaf867ebd3429b8564b8e", "bug_code_uid": "2a03b72182de63271a1beab20e0b033a", "src_uid": "1f38c88f89786f118c65215d7df7bc9c", "apr_id": "4c9e276915c00d547e5f5a3f30e5ef74", "difficulty": 1300, "tags": ["dp", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(void) {\n\t// your code goes here\n\tint i,j,k;\n\tchar arr[200003],c='a';\n\tscanf(\"%s\",arr);\nint\tn=strlen(arr);\n\tfor(i=0;i<n-1;i++)\n\t{\n\t    if(arr[i]==arr[i+1]&&arr[i+1]==arr[i+2])\n\t    {\n\t        if(arr[i+1]=='z'||arr[i+1]=='y')arr[i+1]=arr[i]-2;\n\t       else arr[i+1]=arr[i+2]+1;\n\t        \n\t    }\n\t    \n\t    else if(arr[i]==arr[i+1])\n\t    {\n\t        if(i+1==n-1)\n\t        \n\t        {\n\t            if(arr[i+1]=='a')\n\t            arr[i+1]=arr[i+1]+2;  \n\t        else arr[i+1]=arr[i+1]-1;\n\t            \n\t        }\n\t      else\n\t      { while(1)\n\t      {\n\t          if(arr[i+2]==c||arr[i+1]==c)c++;\n\t          else{ arr[i+1]=c; break;}\n\t      }\n\t                   }\n\t          \n\t          \n\t      }  \n\t    }\n\t    \n\t    \n\t\n\tprintf(\"%s\",arr);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(void) {\n\t// your code goes here\n\tint i,j,k;\n\tchar arr[200003],c='a';\n\tscanf(\"%s\",arr);\nint\tn=strlen(arr);\n\tfor(i=0;i<n-1;i++)\n\t{\n\t    if(arr[i]==arr[i+1]&&arr[i+1]==arr[i+2])\n\t    {\n\t        if(arr[i+1]=='z'||arr[i+1]=='y')arr[i+1]=arr[i]-2;\n\t       else arr[i+1]=arr[i+2]+1;\n\t        \n\t    }\n\t    \n\t    else if(arr[i]==arr[i+1])\n\t    {\n\t        if(i+1==n-1)\n\t        \n\t        {\n\t            if(arr[i+1]=='a')\n\t            arr[i+1]=arr[i+1]+2;  \n\t        else arr[i+1]=arr[i+1]-1;\n\t            \n\t        }\n\t      else\n\t      { c='a';\n\t          while(1)\n\t      {\n\t          if(arr[i+2]==c||arr[i+1]==c)c++;\n\t          else{ arr[i+1]=c; break;}\n\t      }\n\t                   }\n\t          \n\t          \n\t      }  \n\t    }\n\t    \n\t    \n\t\n\tprintf(\"%s\",arr);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.6491228070175439, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "acb63504aa39d6df6c3cf67e9c5e2a05", "bug_code_uid": "15a7d2311f4371773ad16bf7b38f3696", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "136e8f7795eef3ce827bc59589ec78dd", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint r[100005],b[100005],c[100005];\nvoid counting(int A[],int n,int k)\n{\n        int i,j;\n        for(i=1;i<=n;i++)\n        {\n            c[A[i]]=c[A[i]]+1;\n        }\n\n        for(i=2;i<=k;i++)\n        {\n            c[i]=c[i]+c[i-1];\n        }\n        for(i=n;i>0;i--)\n        {\n            b[c[A[i]]]=A[i];\n            c[A[i]]=c[A[i]]-1;\n        }\n}\nint main()\n{\n    int n,x,i,k=0;\n    long long int panks=0;\n    scanf(\"%d%d\",&n,&x);\n    for(i=1;i<=n;i++)\n   {\n       scanf(\"%d\",&r[i]);\n       if(r[i]>k)\n                k=r[i];}\n    counting(r,n,k);\n    for(i=1;i<=n;i++)\n    {\n        if(x>1)\n        {\n            panks=panks+(b[i]*x);\n            x--;\n        }\n        else if(x==1)\n        {\n            panks=panks+b[i];\n        }\n    }\n    printf(\"%I64d\",panks);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int r[100005],b[100005],c[100005];\nvoid counting(long long int A[],long long int n,long long int k)\n{\n        long long int i,j;\n        for(i=1;i<=n;i++)\n        {\n            c[A[i]]=c[A[i]]+1;\n        }\n\n        for(i=2;i<=k;i++)\n        {\n            c[i]=c[i]+c[i-1];\n        }\n        for(i=n;i>0;i--)\n        {\n            b[c[A[i]]]=A[i];\n            c[A[i]]=c[A[i]]-1;\n        }\n}\nint main()\n{\n    long long int n,x,i,k=0;\n    long long int panks=0;\n    scanf(\"%I64d%I64d\",&n,&x);\n    for(i=1;i<=n;i++)\n   {\n       scanf(\"%I64d\",&r[i]);\n       if(r[i]>k)\n                k=r[i];}\n    counting(r,n,k);\n    for(i=1;i<=n;i++)\n    {\n            panks=panks+(b[i]*x);\n            if(x>1)\n                x--;\n\n    }\n    printf(\"%I64d\",panks);\n    return 0;\n}\n"}
{"similarity_score": 0.8359643102264928, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "6673cf58a920c1289565067a56722741", "bug_code_uid": "513048291859ae6744d112d430ed5e6a", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "338225d7e0b52f1d2696a4413bd9c02a", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nlong int t[100000];\n\nint main()\n{\n    long int n,s=0,i,j,k,tmp,c=1;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&t[i]);\n    }\n       for(i=n/2;i>0;i=i/2)\n    {\n\n      for(j=i;j<n;j++)\n      {\n          for(k=j-i;k>=0;k=k-i)\n          {\n              if(t[k+i]>=t[k])\n                break;\n              else\n              {\n                  tmp=t[k];\n                  t[k]=t[k+i];\n                  t[k+i]=tmp;\n              }\n          }\n      }\n\n      }\n      j=0;\n      for(i=1;i<n;i++)\n    {\n        s=s+t[j];\n        if(s<=t[i])\n        {\n            c++;\n        }\n        j++;\n    }\n    if(n==1)\n    {\n        printf(\"%d\",1);\n    }\n    else\n     {\n       printf(\"%ld\",c);\n     }\n\n\n      return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong int t[1000000];\n\nint main()\n{\n    long int n,s=0,i,j,k,tmp,c=0;\n    scanf(\"%ld\",&n);\n    for(i=0;i<n;i++)\n    {\n\n        scanf(\"%ld\",&t[i]);\n    }\n\n     for(i=n/2;i>0;i=i/2)\n    {\n\n      for(j=i;j<n;j++)\n      {\n          for(k=j-i;k>=0;k=k-i)\n          {\n              if(t[k+i]>=t[k])\n                break;\n              else\n              {\n                  tmp=t[k];\n                  t[k]=t[k+i];\n                  t[k+i]=tmp;\n              }\n          }\n      }\n\n      }\n    for(i=0;i<n;i++)\n    {\n        if(t[i]>=s)\n        {\n            s=s+t[i];\n            c++;\n        }\n    }\n\n\n\n       printf(\"%ld\\n\",c);\n\n\n\n      return 0;\n}\n"}
{"similarity_score": 0.7130434782608696, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "a4b40b374d6dd394adb0bd3bd0ed3691", "bug_code_uid": "f977d2c7d03b91952b66bef36771417d", "src_uid": "7767e47571c7ea82ba4fb6a0bd0fbdc5", "apr_id": "1a955db331d1cc89502abc247775d1c6", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b;\r\n        scanf(\"%d%d\",&a,&b);\r\n        for(int i=1;i<=a;i++)\r\n        {\r\n            printf(\"0\");\r\n        }\r\n        for(int j=a+1;j<(a+b);j++)\r\n        {\r\n            printf(\"1\");\r\n        }\r\n        printf(\"1\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int a,b;\r\n        scanf(\"%d%d\",&a,&b);\r\n        while(a>0&&b>0)\r\n        {\r\n            printf(\"01\");\r\n            a--;\r\n            b--;\r\n        }\r\n        while(a>0)\r\n        {\r\n            printf(\"0\");\r\n            a--;\r\n        }\r\n        while(b>0)\r\n        {\r\n            printf(\"1\");\r\n            b--;\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.13104988830975428, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "cfce3bf5ab826ac847e02fccd6fed88a", "bug_code_uid": "14a7326d581af9ab32940399cd4880c4", "src_uid": "290d9779a6be44ce6a2e62989aee0dbd", "apr_id": "2c38591923c469ff9245d2e06ac29597", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nshort int x[1001][1001];\n   short int n,m,k,o,p,q;\n      short int i,j;\n      char z;\nshort int abc,abd;\n\n  int main(){\nscanf(\"%d %d %d\",&n,&m,&k);\n      for(i=1;i<=n;i++){\n          for(j=1;j<=m;j++){\n              scanf(\"%d\",&x[i][j]);\n                        }\n        scanf(\"\\n\");\n      }\n      for(j=0;j<k;j++){\n          scanf(\"%c %d %d\\n\",&z,&o,&p);\n          if(z == 'g'){\n              printf(\"%d\\n\",x[o][p]);\n          }else if(z == 'r'){\n              for(i=1;i<=m;i++){\n                 abc = x[o][i];\n                 x[o][i] = x[p][i];\n                 x[p][i] = abc;\n              }\n          }\n          else{\n              for(i=1;i<=n;i++){\n                  abd = x[i][o];\n                  x[i][o] = x[i][p];\n                  x[i][p] = abd;\n              }\n          }\n      }\n      return 0;\n      }\n", "fixed": "int a[1001][1001],r[1001],c[1001];\nint n,m,k;\n\nint main()\n{\n  int i,j,x,y,temp;\n  char op;\n  scanf(\"%d%d%d\",&n,&m,&k);\n      for(i=1;i<=n;i++)\n      for(j=1;j<=m;j++)\n        scanf(\"%d\",&a[i][j]);\n    for(i=1;i<=n;i++) r[i]=i;\n    for(i=1;i<=m;i++) c[i]=i;\n    while(k--)\n    {\n      getchar();\n      scanf(\"%c %d %d\",&op,&x,&y);\n      if(op=='r') {temp=r[x];r[x]=r[y];r[y]=temp;}\n      if(op=='c') {temp=c[x];c[x]=c[y];c[y]=temp;}\n      if(op=='g') printf(\"%d\\n\",a[r[x]][c[y]]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9787644787644788, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "72a14bd0f6075e2f0192104f2c624804", "bug_code_uid": "505db670a1c40bbf099fcf57a958adcf", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "e8ae37d178eeabdacb30c864a7f92ab9", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j;\r\n    scanf(\"%d\", &t);\r\n    char str[100];\r\n    for(i=1; i<=t; i++)\r\n    {\r\n           int q=0;\r\n           scanf(\"%d\", &n);\r\n               scanf(\"%s\", &str);\r\n           for(j=0; j<n; j++)\r\n           {\r\n               if(str[j]=='Q')\r\n                q++;\r\n                else\r\n                    q--;\r\n                if(q<0 && j!=n-1)\r\n                    q=0;\r\n    }\r\n    if(q<=0)\r\n        printf(\"Yes\");\r\n    else\r\n        printf(\"No\");\r\n    }\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j;\r\n    scanf(\"%d\", &t);\r\n    char str[100];\r\n    for(i=0; i<t; i++)\r\n    {\r\n           int q=0;\r\n           scanf(\"%d\", &n);\r\n               scanf(\"%s\", &str);\r\n           for(j=0; j<n; j++)\r\n           {\r\n               if(str[j]=='Q')\r\n                q++;\r\n                else\r\n                    q--;\r\n                if(q<0 && j!=n-1)\r\n                    q=0;\r\n    }\r\n    if(q<=0)\r\n        printf(\"Yes\\n\");\r\n    else\r\n        printf(\"No\\n\");\r\n    }\r\n}\r\n\r\n"}
{"similarity_score": 0.9303156640857654, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c5cc245a7dd02406e823f464c021e7b4", "bug_code_uid": "b835dc35265bb6c2501a743655c5b4ee", "src_uid": "39480cdf697fc9743dc9665f989077d7", "apr_id": "3428de9b52e80f4e6b6913c091ca67de", "difficulty": 1200, "tags": ["dp", "two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tlong long int t,k,j,i,n,tut,maxsum,arr[100000];\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\t\n\t\tscanf(\"%lld\",&n);\n\t\tfor(i=0;i<n;i++)scanf(\"%lld\",&arr[i]);\n\t\tk=0;\n\t\tmaxsum=arr[0];\n\t\ttut=0;\n\t\tfor(i=0;i<n-1;i++){\n\t\t\t\n\t\t\tif(arr[i]*arr[i+1]<0 && k==0){\n\t\t\t\tmaxsum+=arr[i+1];\n\t\t\t\tk=1;\n\t\t\t\ttut=i+1;\n\t\t\t//\tprintf(\"a\");\n\t\t\t}\n\t\t\t\n\t\t\telse if(arr[i]*arr[i+1]>0 && k==1){\n\t\t\tif(arr[i+1]>arr[tut]){\n\t\t\t  maxsum+=(arr[i+1]-arr[i]);\n\t          tut=i+1;\t\n\t\t\t//printf(\"b\");\n\t\t\t }\n\t\t\t}\n\t\t\t\n\t\t\telse if(arr[i]*arr[i+1]<0 && k==1){\n\t\t\t\tmaxsum+=arr[i+1];\n\t\t\t\tk=0;\n\t\t\t\ttut=i+1;\n\t\t\t//\tprintf(\"c\");\n\t\t\t}\n\t\t\t\n\t\t\telse if(arr[i]*arr[i+1]>0 && k==0){\n\t\t\tif(arr[i+1]>arr[tut]){\n\t\t\tmaxsum=maxsum+(arr[i+1]-arr[i]);\n\t\t\ttut=i+1;\n\t\t\t//printf(\"d\");\n\t\t     }\n\t\t\t}\n\t\t\t//printf(\"%lld\\n\",maxsum);\n\t\t}\n\t  \t\n      printf(\"res %lld\\n\",maxsum);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n \nint main(){\n\tlong long int t,k,j,i,n,tut,maxsum,arr[200000];\n\tscanf(\"%lld\",&t);\n\twhile(t--){\n\t\t\n\t\tscanf(\"%lld\",&n);\n\t\tfor(i=0;i<n;i++)scanf(\"%lld\",&arr[i]);\n\t\tk=0;\n\t\tmaxsum=arr[0];\n\t\ttut=0;\n\t\tfor(i=0;i<n-1;i++){\n\t\t\t\n\t\t\tif(arr[i]*arr[i+1]<0 && k==0){\n\t\t\t\tmaxsum+=arr[i+1];\n\t\t\t\tk=1;\n\t\t\t\ttut=i+1;\n\t\t\t//\tprintf(\"a\");\n\t\t\t}\n\t\t\t\n\t\t\telse if(arr[i]*arr[i+1]>0 && k==1){\n\t\t\tif(arr[i+1]>arr[tut]){\n\t\t\t  maxsum+=(arr[i+1]-arr[tut]);\n\t          tut=i+1;\t\n\t\t//\tprintf(\"b\");\n\t\t\t }\n\t\t\t}\n\t\t\t\n\t\t\telse if(arr[i]*arr[i+1]<0 && k==1){\n\t\t\t\tmaxsum+=arr[i+1];\n\t\t\t\tk=0;\n\t\t\t\ttut=i+1;\n\t\t\t//\tprintf(\"c\");\n\t\t\t}\n\t\t\t\n\t\t\telse if(arr[i]*arr[i+1]>0 && k==0){\n\t\t\tif(arr[i+1]>arr[tut]){\n\t\t\tmaxsum=maxsum+(arr[i+1]-arr[tut]);\n\t\t\ttut=i+1;\n\t\t//\tprintf(\"d\");\n\t\t     }\n\t\t\t}\n\t\t\t//printf(\"%lld\\n\",maxsum);\n\t\t}\n\t  \t\n      printf(\"%lld\\n\",maxsum);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.941972920696325, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "68dd1f4586ae47f98eba1c40ece28d00", "bug_code_uid": "67ee364a517ddd74553ca66f90491eb4", "src_uid": "c457b77b16d94c6c4c95b7403a1dd0c7", "apr_id": "57b73c81975ed2f6467688471d2fc082", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t, j, i;\n    long long int n,sum = 0, price;\n    scanf(\"%d\",&t);\n    for(i = 0; i < t; i++)\n    {\n        scanf(\"%lld\",&n);\n        long long int a[n];\n        for(j = 0; j < n; j++)\n        {\n            scanf(\"%lld\",&a[i]);\n            sum = sum + a[i];\n        }\n        if(sum % n == 0)\n        {\n            price = sum / n;\n        }\n        else\n        {\n            price = (sum/n) + 1;\n        }\n        printf(\"%lld\\n\",price);\n        sum = 0;\n\n    }\n    return 0;\n\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int t, i, j, n, sum = 0, price;\n    scanf(\"%lld\",&t);\n    for(i = 1; i <= t; i++)\n    {\n        scanf(\"%lld\",&n);\n        long long int a[n];\n        for(j = 0; j < n; j++)\n        {\n            scanf(\"%lld\",&a[j]);\n            sum = sum + a[j];\n        }\n        if(sum % n == 0)\n        {\n            price = sum / n;\n        }\n        else\n        {\n            price = (sum / n) + 1;\n        }\n        printf(\"%lld\\n\",price);\n        sum = 0;\n\n    }\n    return 0;\n\n}"}
{"similarity_score": 0.9656862745098039, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "ce6320a2e9c7d8ffafb68273bb662744", "bug_code_uid": "305e4ecefab78a29ec90d99f49579d5d", "src_uid": "e0a1dc397838852957d0e15ec98d5efe", "apr_id": "d2b491fa4422bd27153f18e7110e6a98", "difficulty": 1500, "tags": ["binary search", "geometry", "shortest paths", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j,temp,count;\r\n    int x[1000],y[1000];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d %d\",&x[i],&y[i]);\r\n        }\r\n        if(n%2==1)\r\n            printf(\"1\\n\");\r\n        else\r\n        {\r\n        for(i=0;i<n-1;i++)\r\n        {\r\n            for(j=0;j<n-1-i;j++)\r\n            {\r\n                if(x[j]>x[j+1])\r\n                {\r\n                    temp=x[j];\r\n                    x[j]=x[j+1];\r\n                    x[j+1]=temp;\r\n                }\r\n            }\r\n        }\r\n        for(i=0;i<n-1;i++)\r\n        {\r\n            for(j=0;j<n-1-i;j++)\r\n            {\r\n                if(y[j]>y[j+1])\r\n                {\r\n                    temp=y[j];\r\n                    y[j]=y[j+1];\r\n                    y[j+1]=temp;\r\n                }\r\n            }\r\n        }\r\n        count=(x[n/2]-x[n/2-1]+1)*(y[n/2]-y[n/2-1]+1);\r\n        printf(\"%d\\n\",count);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j,temp;\r\n    long long int x[1000],y[1000],count;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%lld %lld\",&x[i],&y[i]);\r\n        }\r\n        if(n%2==1)\r\n            printf(\"1\\n\");\r\n        else\r\n        {\r\n        for(i=0;i<n-1;i++)\r\n        {\r\n            for(j=0;j<n-1-i;j++)\r\n            {\r\n                if(x[j]>x[j+1])\r\n                {\r\n                    temp=x[j];\r\n                    x[j]=x[j+1];\r\n                    x[j+1]=temp;\r\n                }\r\n            }\r\n        }\r\n        for(i=0;i<n-1;i++)\r\n        {\r\n            for(j=0;j<n-1-i;j++)\r\n            {\r\n                if(y[j]>y[j+1])\r\n                {\r\n                    temp=y[j];\r\n                    y[j]=y[j+1];\r\n                    y[j+1]=temp;\r\n                }\r\n            }\r\n        }\r\n        count=(x[n/2]-x[n/2-1]+1)*(y[n/2]-y[n/2-1]+1);\r\n        printf(\"%lld\\n\",count);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9073554183043234, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "10342caebad20f0dd912b17551eb7b85", "bug_code_uid": "0380c65bb899925509fb5eeec0de045b", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "3be7ce905c2b47fb756c3dbd9c9eb560", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\u8fd9\u91cc\u7684\u82f1\u8bed\u8868\u8fbe\u4e0d\u591f\u597d\uff01\n/*interface*/\n#include<stdio.h>\n#include<string.h>\n#define N 100000+1\n/*interface implementation*/\n/*client*/\nint main() {\n    char currency[N];\n    scanf(\"%s\",currency);\n    int i;\n    int even[N];\n    int en=0;\n    int n=strlen(currency);\n    for(i=0; i<n; i++) {\n        if((currency[i]-'0')%2==0) {\n            even[en]=i;\n            en++;\n        }\n    }\n    if(en==0) {\n        printf(\"-1\\n\");\n    } else {\n        i=0;\n        while(currency[even[i]]> currency[n-1] && i<en) {\n            i++;\n        }\n        int change=i;\n        if(i==en) {\n            change=en-1;\n        }\n        char tmp=currency[even[change]];\n        currency[even[change]]=currency[n-1];\n        currency[n-1]=tmp;\n        for(i=0; i<n; i++) {\n            printf(\"%c\",currency[i]);\n        }\n        printf(\"\\n\");\n\n    }\n    return 0;\n}\n", "fixed": "//\u8fd9\u91cc\u7684\u82f1\u8bed\u8868\u8fbe\u4e0d\u591f\u597d\uff01\n/*interface*/\n#include<stdio.h>\n#include<string.h>\n#define N 100000+10\n/*interface implementation*/\n/*client*/\nint main() {\n    char currency[N];\n    scanf(\"%s\",currency);\n    int even[N];\n    int en=0;\n    int n=strlen(currency);\n    int i;\n    for(i=0; i<n; i++) {\n        if((currency[i]-'0')%2==0) {\n            even[en]=i;\n            en++;\n        }\n    }\n    if(en==0) {\n        printf(\"-1\\n\");\n    } else {\n        i=0;\n        int change;\n\n        while(i<en) {\n            if(currency[even[i]]> currency[n-1]) {\n                i++;\n            } else {\n                change=i;\n                break;\n            }\n        }\n        if(i==en) {\n            change=en-1;\n        }\n        char tmp=currency[even[change]];\n        currency[even[change]]=currency[n-1];\n        currency[n-1]=tmp;\n        for(i=0; i<n; i++) {\n            printf(\"%c\",currency[i]);\n        }\n        printf(\"\\n\");\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.906764168190128, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9bddcdb013a65dfe92a082a32003957d", "bug_code_uid": "2a3de998c51a840033a05464f4e0d096", "src_uid": "1a3b22a5a8e70505e987d3e7f97e7883", "apr_id": "4d376a93d67256ee3dc89d8e68135289", "difficulty": 1600, "tags": ["data structures", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int n = 0, temp = 0, minimum = 0;\n    int i = 0, t = 0;\n    scanf(\"%%I64d\",&n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",t);\n        minimum += t == 0? temp: 0;\n        temp += t;\n        \n    }\n    printf(\"%d\",minimum);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int n = 0, temp = 0, minimum = 0, t = 0, i = 0;\n    scanf(\"%I64d\",&n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%I64d\",&t);\n        minimum += t == 0? temp: 0;\n        temp += t;\n    }\n    printf(\"%I64d\",minimum);\n}"}
{"similarity_score": 0.980367321089297, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "829f7579764d62c80baed813c395548a", "bug_code_uid": "5e491382633f21bd2da669889e490748", "src_uid": "7807c484035e0327870b6cac23c8d60a", "apr_id": "43647bca5886215f693027c19af7b091", "difficulty": 1500, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\u628a\u6240\u6709\u70b9\u6392\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u5904\u7406\u529e\u6cd5\u662f\uff1a\u770b\u4e00\u4e0b\u8d77\u70b9\u5728\u54ea\u91cc\uff1f\n//\u8d77\u70b9\u5728\u5de6\u8fb9\uff0c\u53f3\u8fb9\uff0c\u4e2d\u95f4\n#include<stdio.h>\n#include<stdlib.h>\n#define N 100000\nint compare(const void *a,const void *b){\n    return *(int *)a-*(int *)b;\n}\nvoid sort(int a[],int n){\n    qsort(a,n,sizeof(int),compare);\n}\nint min(int a,int b){\n    if(a>b)return b;\n    else return a;\n}\nint abs(int a){\n    if(a>=0)return a;\n    else return -a;\n}\n\nint main() {\n    int n,a;\n    scanf(\"%d%d\",&n,&a);\n    int x[N];\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&x[i]);\n    }\n    sort(x,n);\n    int distance=0;\n    //\u4ece\u4e0d\u8bbf\u95eexn-1\u70b9,\u4e0d\u8bbf\u95eex0\u70b9\u4e24\u4e2a\u8ddd\u79bb\u4e2d\u9009\u62e9\u6700\u5c0f\u7684\n    int distance0=(x[n-1]-x[1])+min(abs(a-x[1]),abs(x[n-1]-a));\n    int distance1=(x[n-2]-x[0])+min(abs(a-x[0]),abs(x[n-2]-a));\n    distance=min(distance0,distance1);\n    printf(\"%d\\n\",distance);\n    return 0;\n}\n", "fixed": "//\u628a\u6240\u6709\u70b9\u6392\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u5904\u7406\u529e\u6cd5\u662f\uff1a\u770b\u4e00\u4e0b\u8d77\u70b9\u5728\u54ea\u91cc\uff1f\n//\u8d77\u70b9\u5728\u5de6\u8fb9\uff0c\u53f3\u8fb9\uff0c\u4e2d\u95f4\n#include<stdio.h>\n#include<stdlib.h>\n#define N 100000\nint compare(const void *a,const void *b){\n    return *(int *)a-*(int *)b;\n}\nvoid sort(int a[],int n){\n    qsort(a,n,sizeof(int),compare);\n}\nint min(int a,int b){\n    if(a>b)return b;\n    else return a;\n}\nint abs(int a){\n    if(a>=0)return a;\n    else return -a;\n}\n\nint main() {\n    int n,a;\n    scanf(\"%d%d\",&n,&a);\n    int x[N];\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&x[i]);\n    }\n    sort(x,n);\n    int distance=0;\n    //\u4ece\u4e0d\u8bbf\u95eexn-1\u70b9,\u4e0d\u8bbf\u95eex0\u70b9\u4e24\u4e2a\u8ddd\u79bb\u4e2d\u9009\u62e9\u6700\u5c0f\u7684\n    if(n>1){\n        int distance0=(x[n-1]-x[1])+min(abs(a-x[1]),abs(x[n-1]-a));\n        int distance1=(x[n-2]-x[0])+min(abs(a-x[0]),abs(x[n-2]-a));\n        distance=min(distance0,distance1);\n    }\n    printf(\"%d\\n\",distance);\n    return 0;\n}\n"}
{"similarity_score": 0.8191304347826087, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ab74e82c7b7bc7389549de96167cb51a", "bug_code_uid": "e0394655cdbe24719e9e2e63d7b764a2", "src_uid": "dd2cd365d7afad9c2b5bdbbd45d87c8a", "apr_id": "97d332d447af945887ddb167b29546d6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint sort(const void* a, const void* b){\n  int x = *((int*) a);\n  int y = *((int*) b);\n\n  return x-y;\n}\n\nint main(){\n  int n, x, total = 1, k;\n  scanf(\"%d\", &n);\n\n  for(int i = 0; i < n; ++i){\n    scanf(\"%d\", &x);\n    if(x == 1){\n      scanf(\"%d\", &k);\n      printf(\"1\\n\");\n      break;\n    }\n    int v[x];\n    for(int j = 0; j < x; ++j){\n      scanf(\"%d\", &v[j]);\n    }\n\n    qsort(v, x, sizeof(v[0]), sort);\n\n\n    for(int j = 0; j < x; j+=2){\n        if(abs(v[j]-v[j+1]) == 1)\n          ++total;\n    }\n    printf(\"%d\\n\", total);\n    total = 1;\n  }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint sort(const void* a, const void* b){\n  int x = *((int*) a);\n  int y = *((int*) b);\n\n  return x-y;\n}\n\nint main(){\n  int n, x, total = 1;\n  scanf(\"%d\", &n);\n\n  for(int i = 0; i < n; ++i){\n    scanf(\"%d\", &x);\n    int v[x];\n    for(int j = 0; j < x; ++j)\n      scanf(\"%d\", &v[j]);\n\n    qsort(v, x, sizeof(v[0]), sort);\n\n    for(int j = 0; j < x-1; ++j){\n      if(abs(v[j]-v[j+1]) == 1)\n        total = 2;\n    }\n    printf(\"%d\\n\", total);\n    total = 1;\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.961864406779661, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0199d8f876ffa3b7406665189ff6f938", "bug_code_uid": "583debb66b70ab06589e54fd020cbde9", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "a485f631db7f5a746f0178e389e16ae7", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\nchar x[100000];\nint i,j,y=0,k,m,n;\nscanf(\"%d %s\",&n,x);\n\nk=strlen(x);\nfor(i=0;i<k;i++){\n\n    if(x[i]>='a' && x[i]<='z'){\n    for(j=i+1;j<k;j++){\n    if(x[j]>='a' && x[j]<='z' &&  x[i]>='a' && x[i]<='z')\n    {\n      if(x[i]==x[j])\n      {\n          x[j]=x[j]-32;\n          y++;\n\n\n      }}\n\n    }\n    if(y>26)\n    {\n        break;\n    }\n}\n\n}\nif(y>26)\n{\n    printf(\"-1\");\n}\nif(y<=26)\n{\n    printf(\"%d\",y);\n}\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\nchar x[100000];\nint i,j,y=0,k,m,n;\nscanf(\"%d %s\",&n,x);\n\nk=strlen(x);\nif(k<=26){\nfor(i=0;i<k;i++){\n\n    if(x[i]>='a' && x[i]<='z'){\n    for(j=i+1;j<k;j++){\n    if(x[j]>='a' && x[j]<='z' &&  x[i]>='a' && x[i]<='z')\n    {\n      if(x[i]==x[j])\n      {\n          x[j]=x[j]-32;\n          y++;\n\n\n      }}\n\n    }\n    if(y>26)\n    {\n        break;\n    }\n}\n\n}\n}\nif(k>26)\n{\n    y=30;\n}\nif(y>26)\n{\n    printf(\"-1\");\n}\nif(y<=26)\n{\n    printf(\"%d\",y);\n}\n\n}\n"}
{"similarity_score": 0.9822732012513035, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2f9f3b7233ee6750b5f94befc06fc116", "bug_code_uid": "d21979c71b550f4bdbfcc3a7c9b74e6c", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "19580e88cf5af0fba38a4d64edcb64c2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,i,k=0;\n    char a[10],b[10];\n    scanf(\"%d%s%s\",&n,a,b);\n    for(i=0;i<n;i++)\n    {\n        if(b[i]==a[i]);\n        else\n            if(b[i]<a[i])\n                if(a[i]-b[i]<5)\n                    k=k+a[i]-b[i];\n                else\n                    k=k+b[i]+10-a[i];\n        else\n            if(b[i]-a[i]<5)\n            k=k+b[i]-a[i];\n            else\n                k=k+a[i]+10-b[i];\n    }\n\n    printf(\"%d\",k);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i,k=0;\n    char a[1001],b[1001];\n    scanf(\"%d%s%s\",&n,a,b);\n    for(i=0;i<n;i++)\n    {\n        if(b[i]==a[i]);\n        else\n            if(b[i]<a[i])\n                if(a[i]-b[i]<5)\n                    k=k+a[i]-b[i];\n                else\n                    k=k+b[i]+10-a[i];\n        else\n            if(b[i]-a[i]<5)\n            k=k+b[i]-a[i];\n            else\n                k=k+a[i]+10-b[i];\n    }\n\n\n    printf(\"%d\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.4846153846153846, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "650370c1cfe9e17c2e1c4759c05c11be", "bug_code_uid": "5ef809699865fcb056be7a8c36bd5466", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "bc7ccb0cada58eb868e81963b4cea759", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define SIZE 100010\n\nint price[SIZE],qual[SIZE];\n\nint main()\n{\n\tint n,i,cnt=0,j,flag=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0; i<n; i++)\n\t\tscanf(\"%d\",&price[i]);\n\tfor(i=0; i<n; i++)\n\t\tscanf(\"%d\",&qual[i]);\n\tfor(i=0; i<n; i++)\n\t{\n\t\tfor(j=0; j<n; j++)\n\t\t\tif(price[i]>price[j] && qual[i]<qual[j])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\n\tif(flag)\n\t\tprintf(\"Happy Alex\");\n\telse\n\t\tprintf(\"Poor Alex\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#define SIZE 100010\n\nint price[SIZE],qual[SIZE];\n\nint main()\n{\n\tint n,i,cnt=0,j,flag=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0; i<n; i++)\n\t\tscanf(\"%d %d\",&price[i],&qual[i]);\n\tif(n==1)\n\t{\n\t\tprintf(\"Poor Alex\");\n\t\treturn 0;\n\t}\n\tfor(i=0; i<n; i++)\n\t{\n\t\tif(price[i]!=qual[i])\n\t\t\tflag=1;\n\t}\n\n\tif(flag)\n\t\tprintf(\"Happy Alex\");\n\telse\n\t\tprintf(\"Poor Alex\");\n\treturn 0;\n}"}
{"similarity_score": 0.9993485342019544, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "087a68628329aeb00b83097ba86a966c", "bug_code_uid": "976bfd031022366c7738424620b6f321", "src_uid": "6477fdad8455f57555f93c021995bb4d", "apr_id": "de7cc128d021e84c6b3cf48859e3961b", "difficulty": 900, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,t[10001],i,in1 = 0,in2 = 0,max = 0,min = 0;\n    scanf(\"%d\",&n);\n    for(i =  0; i < n; i++)\n    {\n        scanf(\"%d\",&t[i]);\n    }\n    for(i = 0; i < n; i++)\n    {\n        if(t[i] == 1)\n        {\n            in1++;\n            //in2 = 0;\n        }\n\n        if(t[i] == 2)\n        {\n            //in1 = 0;\n            in2++;\n        }\n\n        if(in1 < in2)\n        {\n            min = in1;\n        }\n        else\n        {\n            min = in2;\n        }\n\n        if(max < min)\n        {\n            max = min;\n        }\n         if(t[i] == 2 && t[i+1] == 1)\n        {\n            in1 = 0;\n        }\n          if(t[i] == 1 && t[i+1] == 2)\n        {\n            in2 = 0;\n        }\n    }\n    printf(\"%d\",max*2);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,t[100001],i,in1 = 0,in2 = 0,max = 0,min = 0;\n    scanf(\"%d\",&n);\n    for(i =  0; i < n; i++)\n    {\n        scanf(\"%d\",&t[i]);\n    }\n    for(i = 0; i < n; i++)\n    {\n        if(t[i] == 1)\n        {\n            in1++;\n            //in2 = 0;\n        }\n\n        if(t[i] == 2)\n        {\n            //in1 = 0;\n            in2++;\n        }\n\n        if(in1 < in2)\n        {\n            min = in1;\n        }\n        else\n        {\n            min = in2;\n        }\n\n        if(max < min)\n        {\n            max = min;\n        }\n         if(t[i] == 2 && t[i+1] == 1)\n        {\n            in1 = 0;\n        }\n          if(t[i] == 1 && t[i+1] == 2)\n        {\n            in2 = 0;\n        }\n    }\n    printf(\"%d\",max*2);\n    return 0;\n}\n"}
{"similarity_score": 0.9959100204498977, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8fc6501932e05c87e0782caf77da956a", "bug_code_uid": "36593025e2018dfe376c181ba1946c91", "src_uid": "f89bd4ec97ec7e02a7f67feaeb4d3958", "apr_id": "5c02c7c4bced5e8575c470e251e0ce1f", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,u;\r\n    scanf(\"%d\",&t);\r\n    for(u=1;u<=t;u=u+1){\r\n    \t\tint y,a=0,x,i,l,n,c,d,k;\r\n\tscanf(\"%d\",&n);\r\n\tif(n%2!=0){\r\n\t\tl=(n/2)-1;\r\n\t}\r\n\telse{\r\n\t\tl=n/2;\r\n\t}\r\n\tif(n==3){\r\n\t\tprintf(\"%d %d %d\",3,1,2);\r\n\t}\r\n\telse{\r\n\tfor(i=1;i<=l;i=i+1){\r\n\t\tx=a+2;\r\n\t\tprintf(\"%d \",x);\r\n\t\ty=a+1;\r\n\t\tprintf(\"%d \",y);\r\n\t\ta=x;\r\n\t\tif(i==l&&n%2!=0){\r\n\t\t\tc=a+2;\r\n\t\t\td=a+1;\r\n\t\t\tk=a+3;\r\n\t\t\tprintf(\"%d %d %d\",c,d,k);\r\n\t\t}\r\n\t}\r\n}\r\nprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,u;\r\n    scanf(\"%d\",&t);\r\n    for(u=1;u<=t;u=u+1){\r\n    \t\tint y,a=0,x,i,l,n,c,d,k;\r\n\tscanf(\"%d\",&n);\r\n\tif(n%2!=0){\r\n\t\tl=(n/2)-1;\r\n\t}\r\n\telse{\r\n\t\tl=n/2;\r\n\t}\r\n\tif(n==3){\r\n\t\tprintf(\"%d %d %d\",3,1,2);\r\n\t}\r\n\telse{\r\n\tfor(i=1;i<=l;i=i+1){\r\n\t\tx=a+2;\r\n\t\tprintf(\"%d \",x);\r\n\t\ty=a+1;\r\n\t\tprintf(\"%d \",y);\r\n\t\ta=x;\r\n\t\tif(i==l&&n%2!=0){\r\n\t\t\tc=a+2;\r\n\t\t\td=a+1;\r\n\t\t\tk=a+3;\r\n\t\t\tprintf(\"%d %d %d\",c,k,d);\r\n\t\t}\r\n\t}\r\n}\r\nprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.2843040473840079, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "171c01387992ed8cce1064640ee0c480", "bug_code_uid": "6aa67ab91f8118d1f79d227ded5d1fef", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "a40601d9c6c5128b35fd9ec3c1ba5a70", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,j,count;\n\tchar name[100005][35];\n\tscanf(\"%d\",&n);\n\tfor (i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",name[i]);\n\t\tcount=0;\n\t\tfor (j=i-1;j>=0;j--)\n\t\t\tif (strncmp(name[i],name[j],strlen(name[i]))==0)\n\t\t\t\tcount++;\n\t\tif (count==0)\n\t\t\tprintf(\"OK\\n\");\n\t\telse\n\t\t\tprintf(\"%s%d\\n\",name[i],count);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\n\ttypedef struct {\n\t\tchar name[35];\n\t\tint key;\n\t}T;\n\tint cmp(const void* a,const void* b)\n\t{\n\t\tint c=strcmp(((T*)a)->name,((T*)b)->name);\n\t\tif (c==0)\n\t\t\treturn ( ((T*)a)->key - ((T*)b)->key );\n\t\telse\n\t\t\treturn c;\n\t}\n\tT a[100005];\n\n\tint map[100005];\n\n\tfor (i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",a[i].name);\n\t\ta[i].key=i;\n\t}\n\tqsort(a,n,sizeof(T),cmp);\n\tfor (i=0;i<n;i++)\n\t\tmap[a[i].key]=i;\n\tint re[100005]={0};\n\tfor (i=0;i<n-1;i++)\n\t\tif (strcmp(a[i].name,a[i+1].name)==0)\n\t\t\tre[a[i+1].key]=re[a[i].key]+1;\n\tfor (i=0;i<n;i++)\n\t\tif (re[i]==0)\n\t\t\tprintf(\"OK\\n\");\n\t\telse\n\t\t\tprintf(\"%s%d\\n\",a[map[i]].name,re[i]);\n\treturn 0;\n}"}
{"similarity_score": 0.9948453608247423, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "966c97837209ef1fa8c80781eae0ccb3", "bug_code_uid": "5714cb9d6fa218f007d4e8222a525f09", "src_uid": "a74c65acd41ff9bb845062222135c60a", "apr_id": "e22b4c227fa46ba700ad18d11c381914", "difficulty": 900, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int a,b,n;\n    scanf(\"%d%d%d\",&a,&b,&n);\n    int ar[n][3];\n    for(int i=0;i<n;i++)\n    scanf(\"%d%d%d\",&ar[i][0],&ar[i][1],&ar[i][2]);\n    double d,t,min=100.0;\n    for(int i=0;i<n;i++)\n    {\n    d=sqrt(((b-ar[i][1])*(b-ar[i][1]))+((a-ar[i][0])*(a-ar[i][0])));\n    t=d/ar[i][2];\n    if(t<min)\n    min=t;\n    }\n    printf(\"%.20f\",min);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int a,b,n;\n    scanf(\"%d%d%d\",&a,&b,&n);\n    int ar[n][3];\n    for(int i=0;i<n;i++)\n    scanf(\"%d%d%d\",&ar[i][0],&ar[i][1],&ar[i][2]);\n    double d,t,min=1000000.0;\n    for(int i=0;i<n;i++)\n    {\n    d=sqrt(((b-ar[i][1])*(b-ar[i][1]))+((a-ar[i][0])*(a-ar[i][0])));\n    t=d/ar[i][2];\n    if(t<min)\n    min=t;\n    }\n    printf(\"%.20f\",min);\n    return 0;\n}"}
{"similarity_score": 0.336231884057971, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "cc4ae12faddcfed1c5c0dc9182fd49fa", "bug_code_uid": "76879ef8f1bbc65afe465f61ec07c74c", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "9c92d34ebbc90bf195c043584329c11b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint i, j, t;\n\tlong x, y, a, b;\n\tscanf(\"%d\", &i);\n\tj=i;\n\tint k[i];\n\t\n\tfor (; i>0; i--)\n\t{\n\t t=0;\n\t scanf(\"%d %d %d %d\", &x, &y, &a, &b);\n\twhile(x<y)\n\t{\n\t\tx=x+a;\n\t\ty=y-b;\n\t\tt=t+1;\n\t\tif(x==y)\n\t\t{\n\t\t k[i]=t;\n\t\t break ;\n\t\t}\n\t\telse if(x>y)\n\t\t{\n\t\t k[i]=-1;\n\t\t break;\t\n\t\t}\n\t}\n}\nfor(; j>0; j--)\n{\n\tprintf(\"%d \\n\", k[j]);\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\n \nint main()\n{\n\tint i, j, t;\n\tlong x, y, a, b;\n\tscanf(\"%d\", &i); \n\tfor (; i>0; i--)\n\t{\nscanf(\"%d %d %d %d\", &x, &y, &a, &b);\n \n\tlong reldist = abs(y-x);\n\tlong relvel = a + b;\n \n\tif((reldist % relvel)!=0)\n\t{\n\tprintf(\"%d \\n\", -1);\n\tcontinue;\n\t}\n\tprintf(\"%d \\n\", reldist / relvel);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9643107067879636, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a92a0a65dc37f6f9e4dc15ff08476de6", "bug_code_uid": "414dfb3648d395e2b225b84a6b30a272", "src_uid": "e5a01ebfdca3af987e93b68c96268c16", "apr_id": "ce2d2c5ffb109bca8899b2972a52af5c", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\n#include <stdbool.h>\r\ntypedef long long int ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n#define pr printf\r\n#define sc scanf\r\n#define I 1e18\r\n#define in(x) scanf(\"%d\", &x)\r\n#define out(x) printf(\"%d\\n\", x)\r\n#define re(i,a,b) for(int i=a;i<b;i++)\r\nint i, j;\r\nvoid test();\r\nint main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n//\tfreopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\tint t = 1;\r\n\tin(t);\r\n\twhile (t--)\r\n\t{\r\n\t\ttest();\r\n\t}\r\n}\r\nvoid test()\r\n{\r\n\tll n, m;\r\n\tsc(\"%lld %lld\\n\", &n, &m);\r\n\tif (n == 1 || m == 1)\r\n\t{\r\n\t\tpr(\"1\\n\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tpr(\"2\\n\");\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\n#include <stdbool.h>\r\ntypedef long long int ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n#define pr printf\r\n#define sc scanf\r\n#define I 1e18\r\n#define in(x) scanf(\"%d\", &x)\r\n#define out(x) printf(\"%d\\n\", x)\r\n#define re(i,a,b) for(int i=a;i<b;i++)\r\nint i, j;\r\nvoid test();\r\nint main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n//\tfreopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\tint t = 1;\r\n\tin(t);\r\n\twhile (t--)\r\n\t{\r\n\t\ttest();\r\n\t}\r\n}\r\nvoid test()\r\n{\r\n\tll n, m;\r\n\tsc(\"%lld %lld\\n\", &n, &m);\r\n\tif (n == 1 && m == 1)\r\n\t{\r\n\t\tpr(\"0\\n\");\r\n\t}\r\n\telse if (n == 1 || m == 1)\r\n\t{\r\n\t\tpr(\"1\\n\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tpr(\"2\\n\");\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n"}
{"similarity_score": 0.36036036036036034, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "a2490b828c2ede56534343a90a3c38fc", "bug_code_uid": "cab0b46be7935c59477785979a7944aa", "src_uid": "5db2ae5b2c91b29e4fe4a45ab864e3f1", "apr_id": "4e2d3abb199e47ad14ae11eec7a90d56", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\ndouble darr[100010];\nint main(){\n\n    double average;unsigned long long sum=0;int n,arr[100000];\n    scanf(\"%d\",&n);\n\n    for(int i=0;i<n ; i++){\n       scanf(\"%d\",&arr[i]);\n       sum+=arr[i];\n    }\n    average=sum/(double)n;\n    for(int i=0;i<n; i++){\n       darr[i]=arr[i]-average;\n\n    }\n    double max=-1,maxsum=0;\n    int end,start;\n    for(int i=0;i<n; i++){\n    maxsum+=darr[i];\n    if(maxsum>max){\n        max=maxsum;\n        end=i;\n    }\n    if(maxsum<0){\n            maxsum=0;\n       }\n    }\n    max=-1,maxsum=0;\n\n     for(int i=0;i<n; i++){\n    maxsum+=darr[i];\n    if(maxsum>max){\n        max=maxsum;\n    }\n    if(maxsum<0){\n            maxsum=0;\n            if(i<=end)start=i;\n       }\n    }\nif(start==end) printf(\"1\\n\");\n  else  printf(\"%d\\n\",end-start);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n    int max=-1,n,arr[100000];\n    scanf(\"%d\",&n);\n\n    for(int i=0;i<n ; i++){\n       scanf(\"%d\",&arr[i]);\n       if(arr[i]>max)max=arr[i];\n    }\n     int count=0,maxcount=0;\n    for(int i=0;i<n; i++){\n        if(arr[i]==max){\n                count++;\n                if(count>maxcount)maxcount=count;\n        }\n        else count=0;\n    }\n   printf(\"%d\\n\",maxcount);\n    return 0;\n}\n"}
{"similarity_score": 0.8656126482213439, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e86fcbc21368c75a763e3eef74e7a474", "bug_code_uid": "a5fd45ec4b3a769754e10fa59bc1a071", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "153e24881236bf1829b07a99f98b3ec9", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\nlong long int count_digit(long long int number)\r\n{\r\n    long long int count = 0;\r\n    while (number != 0)\r\n    {\r\n        number = number / 10;\r\n        count++;\r\n    }\r\n    return count;\r\n}\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lli\", &t);\r\n    while (t--)\r\n    {\r\n        long long int a, b, x, y, z;\r\n        scanf(\"%lli %lli\", &a, &b);\r\n        z = a * b;\r\n        x = a;\r\n        y = (b - 1) * a;\r\n        if (b == 1)\r\n        {\r\n            printf(\"no\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"yes\\n\");\r\n            printf(\"%lli %lli %lli\\n\", x, y, z);\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\nlong long int count_digit(long long int number)\r\n{\r\n    long long int count = 0;\r\n    while (number != 0)\r\n    {\r\n        number = number / 10;\r\n        count++;\r\n    }\r\n    return count;\r\n}\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lli\", &t);\r\n    while (t--)\r\n    {\r\n        long long int a, b, x, y, z;\r\n        scanf(\"%lli %lli\", &a, &b);\r\n        z = a * b;\r\n        x = a;\r\n        y = (b - 1) * a;\r\n        if (b == 1 )\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else if(b==2){\r\n            x=a;\r\n            y=(b+1)*a;\r\n            z=2*z;\r\n            printf(\"YES\\n\");\r\n            printf(\"%lli %lli %lli\\n\", x, y, z);\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n            printf(\"%lli %lli %lli\\n\", x, y, z);\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.7831655992680695, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "9e9437ac583d899cd58e60008d5814c0", "bug_code_uid": "90f8e347b0cd112cb070daa305762b73", "src_uid": "bf0422de4347a308d68a52421fbad0f3", "apr_id": "73adeb3bd8856f2598acdc88a775fca7", "difficulty": 1200, "tags": ["two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000000]={0},b[1000000]={0},count1=0,a2,b2;\n\nscanf(\"%lld%lld\",&n,&m);\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n  \n}\nfor(i=0;i<m;i++){\n    scanf(\"%lld\",&y);\n   b[y]++;\n}\ncount=0;\nfor(i=0;i<n;i++){\n    if(b[a[i]]!=0){\n       count++;\n    }\n}\n\n    printf(\"%lld\",n-count);\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000000],b,count1=0,a2,b2;\n\nscanf(\"%lld%lld\",&n,&m);\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n    \n}\ni=0;\nfor(j=0;j<m;j++){\n    scanf(\"%lld\",&r);\n    if(i<n && r>=a[i]){\n        i++;\n    }\n}\nprintf(\"%lld\",n-i);\nreturn 0;\n}\n"}
{"similarity_score": 0.8038461538461539, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c68a61c3cf648c44627adfe148923a98", "bug_code_uid": "1d511a32d32a0ccc608dfe24c0385191", "src_uid": "942123e43a83d5a4cea95a6781064e28", "apr_id": "b195aa8e75c42bdb806b446a3cc9c8aa", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        int n,l=0;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(int k=0;k<n;k++)\n        scanf(\"%d\",&a[k]);\n        for(int k=0;k<n;k++)\n        {\n            if(k%2!=a[k]%2)\n            l++;\n        }\n        if(l==0)\n        printf(\"0\");\n        else if(l%2==0)\n        printf(\"%d\",l/2);\n        else if(l%2!=0)\n        printf(\"-1\");\n        printf(\"\\n\");\n    }\n    return 0\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        int n,l=0,d=0;\n        scanf(\"%d\",&n);\n        int a[n];\n        for(int k=0;k<n;k++)\n        scanf(\"%d\",&a[k]);\n        for(int k=0;k<n;k++)\n        {\n            if(k%2!=a[k]%2){\n             if(k%2==0)   \n            l++;\n            else if(k%2==1)\n            d++;\n            }\n        }\n        if(l==0&&d==0)\n        printf(\"0\");\n        else if(l==d)\n        printf(\"%d\",l);\n        else if(l>d||l<d)\n        printf(\"-1\");\n        printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9954337899543378, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "00108f5760bdce264cf625773289b141", "bug_code_uid": "d1bbf4dfe850e9dc196822acc9fe9b65", "src_uid": "3f320920a023c3bc10ba1525e8c89044", "apr_id": "ace74998ca503a200f097f67afceaf33", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100\n#define L 3\n\nint main (void) {\n  int n, a, b[N/L + 1] = {0}, k, i, l;\n  scanf (\"%d\", &n);\n\n  k = l = 0;\n  for (i = 0; i < n; ++i) {\n    scanf (\"%d\", &a);\n    if (l + 1 == L && a < 0) {\n      ++k;\n      l = 0;\n    }\n\n    if (a < 0)\n      ++l;\n    ++b[k];\n  }\n  ++k;\n\n  printf (\"%d\\n\", k);\n  for (i = 0; i < k; ++i)\n    printf (\"%d \", b[i]);\n  printf (\"\\n\");\n  exit (EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 100\n#define L 3\n\nint main (void) {\n  int n, a, b[N/(L-1) + 1] = {0}, k, i, l;\n  scanf (\"%d\", &n);\n\n  k = l = 0;\n  for (i = 0; i < n; ++i) {\n    scanf (\"%d\", &a);\n    if (l + 1 == L && a < 0) {\n      ++k;\n      l = 0;\n    }\n\n    if (a < 0)\n      ++l;\n    ++b[k];\n  }\n  ++k;\n\n  printf (\"%d\\n\", k);\n  for (i = 0; i < k; ++i)\n    printf (\"%d \", b[i]);\n  printf (\"\\n\");\n  exit (EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9516310461192351, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2d65f98e7996c84ec43e0222bf3496c1", "bug_code_uid": "daef1ca1e42e57d522fc8c7706bc85a2", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "30f7a75916068f701b7e4a608f511097", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "    #include<stdio.h>\n    int main(void){\n     \n            int t;\n            scanf(\"%d\",&t);\n            while(t--){\n                int n;\n                scanf(\"%d\",&n);\n                int a=n%7;\n                int b=n%10;\n              \n                if(a>b) printf(\"%d\\n\",n+7-a);\n                if(a<b) printf(\"%d\\n\",n-a);\n                    \n                }\n            }\n            \n            \n     \n    ", "fixed": "    #include<stdio.h>\n    int main(void){\n     \n            int t;\n            scanf(\"%d\",&t);\n            while(t--){\n                int n;\n                scanf(\"%d\",&n);\n                int a=n%7;\n                int b=n%10;\n              \n                if(a>b) printf(\"%d\\n\",n+7-a);\n                if(a<b) printf(\"%d\\n\",n-a);\n                if(a==b) printf(\"%d\\n\",n-a);\n                  \n                }\n            }\n            \n            \n     \n    "}
{"similarity_score": 0.992831541218638, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3d98c885d9ca66fb578b2854f455fdda", "bug_code_uid": "8dcf49f0241c27e57beb7fb9ea41c199", "src_uid": "f6e219176e846b16c5f52dee81601c8e", "apr_id": "d2ffcb1a642a88d8b96075f640725d5b", "difficulty": 1100, "tags": ["implementation", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n\tlong long int t,n,m,sum,c;\n\n\tscanf(\"%lld\",&t);\n\tfor(long long i=0;i<t;i++){\n\n\t\tscanf(\"%lld %lld\",&n,&m);\n\tlong long int arr[n],x[n],y[n];\n\n\t\tfor(long long i=0;i<n;i++)\n\t\t\tscanf(\"%lld\",&arr[i]);\n\n\t\tif(n!=m)\n\t\t\tprintf(\"-1\\n\");\n\t\telse{\n\n\t\t\tsum=0;\n\t\t\tc=1;\n\t\t\ty[n-1]=1;\n\t\t\tfor(long long int j=0;j<n;j++){\n\n\t\t\t\tx[j]=c;\n\t\t\t\tc++;\n\t\t\t\tif(j+1!=n)\n\t\t\t\t\ty[j]=c;\n\n\t\t\t}\n\n\t\t\tfor(long long k=0;k<n;k++)\n\t\t\t\tsum+=arr[k];\n\n\t\t\tprintf(\"%lld\\n\",2*sum);\n\t\t\tfor(long long q=0;q<n;q++)\n\t\t\t\tprintf(\"%lld %lld\\n\",x[q],y[q]);\n\n\t\t}\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n\tlong long int t,n,m,sum,c;\n\n\tscanf(\"%lld\",&t);\n\tfor(long long i=0;i<t;i++){\n\n\t\tscanf(\"%lld %lld\",&n,&m);\n\tlong long int arr[n],x[n],y[n];\n\n\t\tfor(long long i=0;i<n;i++)\n\t\t\tscanf(\"%lld\",&arr[i]);\n\n\t\tif(n!=m || n==2)\n\t\t\tprintf(\"-1\\n\");\n\t\telse{\n\n\t\t\tsum=0;\n\t\t\tc=1;\n\t\t\ty[n-1]=1;\n\t\t\tfor(long long int j=0;j<n;j++){\n\n\t\t\t\tx[j]=c;\n\t\t\t\tc++;\n\t\t\t\tif(j+1!=n)\n\t\t\t\t\ty[j]=c;\n\n\t\t\t}\n\n\t\t\tfor(long long k=0;k<n;k++)\n\t\t\t\tsum+=arr[k];\n\n\t\t\tprintf(\"%lld\\n\",2*sum);\n\t\t\tfor(long long q=0;q<n;q++)\n\t\t\t\tprintf(\"%lld %lld\\n\",x[q],y[q]);\n\n\t\t}\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9693140794223827, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "89e9275f54beaaeec92eacb26670ab5b", "bug_code_uid": "de09dab99dcde486ec4d2b96277a3b31", "src_uid": "ba526a7f29cf7f83afa0b71bcd06e86b", "apr_id": "595269e594d08c88bbdd5899f6c7d0ab", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\ntypedef struct point_t {\n    int x, y;\n} point;\n\npoint obelisk[1010], clue[1010];\nint n;\n\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d%d\", &obelisk[i].x, &obelisk[i].y);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d%d\", &clue[i].x, &clue[i].y);\n    }\n    long long sm_x = 0, sm_y = 0;\n    for (int i = 0; i < n; i++) {\n        sm_x += 1ll * (obelisk[i].x + clue[i].x);\n        sm_y += 1ll * (obelisk[i].y + clue[i].y);\n    }\n    printf(\"%d %d\", sm_x / n, sm_y / n);\n}", "fixed": "#include <stdio.h>\n\ntypedef struct point_t {\n    int x, y;\n} point;\n\npoint obelisk[1010], clue[1010];\nint n;\n\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d%d\", &obelisk[i].x, &obelisk[i].y);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d%d\", &clue[i].x, &clue[i].y);\n    }\n    long long sm_x = 0, sm_y = 0;\n    for (int i = 0; i < n; i++) {\n        sm_x += 1ll * (obelisk[i].x + clue[i].x);\n        sm_y += 1ll * (obelisk[i].y + clue[i].y);\n    }\n    printf(\"%lld %lld\", sm_x / (long long) n, sm_y / (long long) n);\n}"}
{"similarity_score": 0.8897435897435897, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7d0c2860ca76e26fc5596834fa3d4907", "bug_code_uid": "f96584a111ff5ccabde8924ae5501196", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "8a100c298219e46054a65547f16469b6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{   int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    /* since the answer of some integer must\r\n    be n and the answer can be any pair because\r\n    number can be generated by summation of any number\r\n    of integer numbers . so answer can be any.*/\r\n    printf(\"%d %d\",-(n-1),n);\r\n    }\r\n\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{   int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    long long int n;\r\n    scanf(\"%lld\",&n);\r\n    /* since the answer of some integer must\r\n    be n and the answer can be any pair because\r\n    number can be generated by summation of any number\r\n    of integer numbers . so answer can be any.*/\r\n    long long int a = -1 * (n-1);\r\n    printf(\"%lld %lld\\n\",a,n);\r\n    }\r\n\r\n}\r\n\r\n"}
{"similarity_score": 0.06946688206785137, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "3760f3fa6ea234dadcbf5772da8f1416", "bug_code_uid": "a3ce885d7ea0151d66fda7a839ee7937", "src_uid": "6e5b4d43e64645cf26d5eac31437b1a9", "apr_id": "83e3898c95228a4b01f51f99a3db2ddd", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\nusing namespace std;\n#define finish(x) return cout << x << endl, 0\n#define ll long long\n\nint n;\nvector <int> a;\n\nbool solve() {\n\tcin >> n;\n\ta.resize(n);\n\tfor (auto& i : a) cin >> i;\n\tll sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tsum += a[i];\n\t\tif (sum <= 0) return 0;\n\t}\n\tsum = 0;\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tsum += a[i];\n\t\tif (sum <= 0) return 0;\n\t}\n\treturn 1;\n}\nint main() {\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\tint T;\n\tcin >> T;\n\twhile (T--) {\n\t\tif (solve()) cout << \"YES\\n\";\n\t\telse cout << \"NO\\n\";\n\t}\n}", "fixed": "#include<stdio.h>\nlong long t,n,i,j,k,a[1000000],sum1,sum2;\nint judge(long long sum1, long long a[1000000]) {\n\tsum2 = 0;\n\tfor (i = 0; i < n-1; i++) {\n\t\tsum2 += a[i];\n\t\tif (sum2 < 0 || (sum2 >= sum1 )) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\tsum2 = 0;\n\tfor ( i = n - 1; i > 0; i--) {\n\t\tsum2 += a[i];\n\t\tif (sum2 < 0 || (sum2 >= sum1)) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\nint main(){\n\tscanf(\"%lld\", &t);\n\twhile(t--) {\n\t\tfor (i = 0; i <n; i++) {\n\t\t\ta[i] = 0;\n\t\t}\n\t\tsum1 = 0;\n\n\t\tscanf(\"%lld\", &n);\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tscanf(\"%lld\",&a[j]);\n\t\t\tsum1 += a[j];\n\t\t}\n\t\tif (judge(sum1, a))\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\n\t}\n\treturn 0;\n}/*\n 3\n 3\n5 -4 7\n10\n10 5 -14 7 -7 20 30 -50 50 60\n2\n1 1\n */"}
{"similarity_score": 0.9962871287128713, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9d7b93a9cf1cc4d61029f17ac95990d1", "bug_code_uid": "fc103bc7a35b698e52b59263039a376b", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "43ea00a23dcdb918f0c27631b91edbb0", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) \n{\n\tint t,n,o,a[2000],i,j,sum,flag,frag,e,k,l;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tsum=0;\n\t\tflag=0;\n\t\tfrag=0;\n\t\tflagg=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t\tsum=sum+a[j];\n\t\t}\n\t\tif(sum%2!=0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(k=0;k<n;k++)\n\t\t\t{\n\t\t\t\tif(a[k]%2==0)\n\t\t\t\t{\n\t\t\t\t\tflag=flag+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(l=0;l<n-1;l++)\n\t\t\t{\n\t\t\t\tif(a[l]==a[l+1])\n\t\t\t\t{\n\t\t\t\t\tfrag=frag+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(o=0;o<n;o++)\n\t\t\t{\n\t\t\t\tif(a[o]%2!=0)\n\t\t\t\t{\n\t\t\t\t\tflagg=flagg+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//printf(\"%d %d\\n\",frag,flag);\n\t\t\tif((frag==(n-1))||(flag==n)||(flagg==n))\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) \n{\n\tint t,n,o,a[2000],i,j,sum,flag,flagg,frag,e,k,l;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++)\n\t{\n\t\tsum=0;\n\t\tflag=0;\n\t\tfrag=0;\n\t\tflagg=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t\tsum=sum+a[j];\n\t\t}\n\t\tif(sum%2!=0)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(k=0;k<n;k++)\n\t\t\t{\n\t\t\t\tif(a[k]%2==0)\n\t\t\t\t{\n\t\t\t\t\tflag=flag+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(l=0;l<n-1;l++)\n\t\t\t{\n\t\t\t\tif(a[l]==a[l+1])\n\t\t\t\t{\n\t\t\t\t\tfrag=frag+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(o=0;o<n;o++)\n\t\t\t{\n\t\t\t\tif(a[o]%2!=0)\n\t\t\t\t{\n\t\t\t\t\tflagg=flagg+1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//printf(\"%d %d\\n\",frag,flag);\n\t\t\tif((frag==(n-1))||(flag==n)||(flagg==n))\n\t\t\t{\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9765739385065886, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "05e50fdd4f37fda28615f710218fe8b5", "bug_code_uid": "0128935cc117ef666fedf2f9458d1cf4", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "0c7760e32993ce7cfe3243a6dd4297f1", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 101\nint n;\nint mat[N][N];\nint ans[N];\nint main()\n{\n\tint i, j;\n\tint c;\n\tint flag;\n\tfreopen(\"in.txt\", \"r\", stdin);\n\twhile ( scanf(\"%d\", &n) != EOF )\n\t{\n\t\t// input\n\t\tfor ( i = 0; i < n; i++ )\n\t\t{\n\t\t\tfor ( j = 0; j < n; j++ )\n\t\t\t\tscanf(\"%d\", &mat[i][j]);\n\t\t}\n\n\t\t// solve\n\t\tc = 0;\n\t\tfor ( i = 0; i < n; i++ )\n\t\t{\n\t\t\tflag = 1;\n\t\t\tfor ( j = 0; j < n; j++ )\n\t\t\t{\n\t\t\t\tif ( mat[i][j] == 1 || mat[i][j] == 3)\n\t\t\t\t{\n\t\t\t\t\tflag = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( flag == 1 )\n\t\t\t{\n\t\t\t\tans[c] = i+1;\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\n\t\t// output\n\t\tprintf(\"%d\\n\", c);\n\t\tif ( c == 0 ) continue;\n\t\tfor ( i = 0; i < c-1; i++ )\n\t\t{\n\t\t\tprintf(\"%d \", ans[i]);\n\t\t}\n\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define N 101\nint n;\nint mat[N][N];\nint ans[N];\nint main()\n{\n\tint i, j;\n\tint c;\n\tint flag;\n\twhile ( scanf(\"%d\", &n) != EOF )\n\t{\n\t\t// input\n\t\tfor ( i = 0; i < n; i++ )\n\t\t{\n\t\t\tfor ( j = 0; j < n; j++ )\n\t\t\t\tscanf(\"%d\", &mat[i][j]);\n\t\t}\n\n\t\t// solve\n\t\tc = 0;\n\t\tfor ( i = 0; i < n; i++ )\n\t\t{\n\t\t\tflag = 1;\n\t\t\tfor ( j = 0; j < n; j++ )\n\t\t\t{\n\t\t\t\tif ( mat[i][j] == 1 || mat[i][j] == 3)\n\t\t\t\t{\n\t\t\t\t\tflag = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( flag == 1 )\n\t\t\t{\n\t\t\t\tans[c] = i+1;\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\n\t\t// output\n\t\tprintf(\"%d\\n\", c);\n\t\tif ( c == 0 ) continue;\n\t\tfor ( i = 0; i < c-1; i++ )\n\t\t{\n\t\t\tprintf(\"%d \", ans[i]);\n\t\t}\n\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.7731864095500459, "equal_cnt": 25, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 16, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "c3d0336e3e91bdbc4d9284b5784be07d", "bug_code_uid": "c037ba77b78bcb59f5721688feeca544", "src_uid": "d638f524fe07cb8e822b5c6ec3fe8216", "apr_id": "1a155de1b029d1c7924fec8bae851290", "difficulty": 900, "tags": ["brute force", "greedy", "math", "number theory", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<math.h>\r\n#include<stdbool.h>\r\n\r\nint gcd(int x,int y);\r\n\r\nint main()\r\n{\r\n    int t=0;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int n=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int count = 0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            for(int j=i+1;j<n;j++)\r\n            {\r\n                if((gcd(a[i],2*a[j])>1))\r\n                {\r\n                    printf(\"%d %d\\n\",a[i],2*a[j]);\r\n                    count++;\r\n                    // if(a[i]!=a[j])\r\n                    // {\r\n                    //     count++;\r\n                    // }\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}\r\n\r\nint gcd(int x,int y)\r\n{\r\n    if(x<y)\r\n    {\r\n        int temp=x;\r\n        x=y;\r\n        y=temp;\r\n    }\r\n    for(int i=y; i>=1 ; i--)\r\n    {\r\n        if(y%i==0 && x%i==0)\r\n        {\r\n            return i;\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<math.h>\r\n#include<stdbool.h>\r\n\r\nint gcd_recursive(int a, int b);\r\n\r\nint main()\r\n{\r\n    int t=0;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int n=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int count = 0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            for(int j=i+1;j<n;j++)\r\n            {\r\n                if(gcd_recursive(a[i],2*a[j])>1 || gcd_recursive(a[j],2*a[i])>1)\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}\r\n\r\n// int gcd(int x,int y)\r\n// {\r\n//     if(x<y)\r\n//     {\r\n//         int temp=x;\r\n//         x=y;\r\n//         y=temp;\r\n//     }\r\n//     for(int i=y; i>=1 ; i--)\r\n//     {\r\n//         if(y%i==0 && x%i==0)\r\n//         {\r\n//             return i;\r\n//         }\r\n//     }\r\n// }\r\n\r\nint gcd_recursive(int a, int b)\r\n{\r\n    if (b)\r\n        return gcd_recursive(b, a % b);\r\n    else\r\n        return a;\r\n}"}
{"similarity_score": 0.7388235294117647, "equal_cnt": 25, "replace_cnt": 3, "delete_cnt": 6, "insert_cnt": 17, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "49e2a170c8ed513dfd70689f9bd84483", "bug_code_uid": "0e1ba585f29695eb2be566c91432326f", "src_uid": "4dfa99acbe06b314f0f0b934237c66f3", "apr_id": "eb1a506d3ce453d3c897cbdcd737ad9b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\r\n\r\n    #include<stdio.h>\r\n    int main(){\r\n        int t;\r\n        scanf(\"%d\",&t);\r\n        long int x,y;\r\n        while(t--){\r\n            scanf(\"%ld%ld\",&x,&y);\r\n            printf(\"%ld %ld\\n\",-x * x,y * y);\r\n        }\r\n    }", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n  int t;\r\n  long long x, y;\r\n  scanf(\"%d\", &t);\r\n  while(t--) {\r\n    scanf(\"%lld%lld\", &x, &y);\r\n    printf(\"%lld %lld\\n\", -x * x, y * y);\r\n  }\r\n  return 0;\r\n}\r\n"}
{"similarity_score": 0.05825242718446602, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "40a87348f24a1866e49ecb99ed050fb8", "bug_code_uid": "e8af75c266c04aa69fc42f430c07b517", "src_uid": "0dc5469831c1d5d34aa3b7b172e3237b", "apr_id": "aa7b8ffe2e3365b75b90deebea90f3f8", "difficulty": 1100, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint A[1010][1010],n,m;\n\nint check(int x, int y)\n{\n  //long long int count=0;\n  if(x+1<n && y+1<m && A[x][y]==1 && A[x+1][y]==1 && A[x][y+1]==1 && A[x+1][y+1]==1)\n    return 1;\n  if(x+1<n && y-1>=0 && A[x][y]==1 && A[x+1][y]==1 && A[x][y-1]==1 && A[x+1][y-1]==1)\n    return 1;\n  if(x-1>=0 && y-1>=0 && A[x][y]==1 && A[x-1][y]==1 && A[x-1][y-1]==1 && A[x][y-1]==1)\n    return 1;\n  if(x-1>=0 && y+1<m && A[x][y]==1 && A[x-1][y]==1 && A[x-1][y+1]==1 && A[x][y+1]==1)\n    return 1;\n  else\n    return 0;\n}\n\nint main()\n{\n  int kk,a,b,c,i,j,k,kkk,state=0,ans;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for(j=0;j<1010;j++)\n       for(kk=0;kk<1010;kk++)\n         A[j][k]=0;\n  for(i=0;i<k;i++)\n  {\n     scanf(\"%d %d\", &a, &b);\n     A[a-1][b-1]=1;\n     c=check(a-1,b-1);\n     if(c==1 && state==0)\n     {\n       state=1;\n       ans=i+1;\n     }\n  }\n  if(state==1)\n    printf(\"%d\\n\", ans);\n  else\n    printf(\"%d\\n\", 0);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint a,b,ans=0,vis=0,n,m,k,i,A[1012][1012];\n\nscanf(\"%d%d%d\",&n,&m,&k);\n\nfor(a=0;a<1002;a++)\n\tfor(b=0;b<1002;b++)\n\t\tA[a][b]=0;\nfor(i=1;i<=k;i++)\n{\n\tscanf(\"%d%d\",&a,&b);\n\tif(A[a][b]==0)\n\t\tA[a][b]=1;\nif(vis==0&&A[a][b]==1&&A[a+1][b]==1&&A[a][b+1]==1&&A[a+1][b+1]==1)\n{\nans=i;\nvis=1;\n}\nelse if(vis==0&&A[a][b]==1&&A[a-1][b]==1&&A[a][b-1]==1&&A[a-1][b-1]==1)\n{\nans=i;\nvis=1;\n}\nelse if(vis==0&&A[a][b]==1&&A[a][b+1]==1&&A[a-1][b+1]==1&&A[a-1][b]==1)\n{ ans=i;\nvis=1;\n}\nelse if(vis==0&&A[a][b]==1&&A[a][b-1]==1&&A[a+1][b-1]==1&&A[a+1][b]==1)\n{\nans=i;\nvis=1;\n}\n}\nprintf(\"%d\\n\",ans);\nreturn 0;\n}\n"}
{"similarity_score": 0.8671171171171171, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "8c1c7b8f5f358e63d02b1a7bb79d76eb", "bug_code_uid": "b0322227e67b17a5f0300bf15be01e99", "src_uid": "bb3e3b51a4eda8fef503952a00777910", "apr_id": "020536d09b8387f9297e14063c336cdf", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint dp[101][2];\n\nint main(){\n    int x,y,a,b,out  = 0,k,i,j;\n    k = 1;\n    scanf(\"%d %d %d %d\",&x,&y,&a,&b);\n    for(i=a;i<=x;i++){\n        for(j=b;j<i;j++){\n            dp[k][0] = i;\n            dp[k][1] = j;\n            k++;\n            out++;\n        }   \n    }\n    printf(\"%d\\n\",out);\n    for(i=1;i<=out;i++)\n        printf(\"%d %d\\n\",dp[i][0],dp[i][1]);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\n#define min(a,b) (a>b?b:a)\n\nint dp[100001][2];\n\nint main(){\n    int x,y,a,b,out  = 0,k,i,j,l;\n    k = 1;\n    scanf(\"%d %d %d %d\",&x,&y,&a,&b);\n    for(i=a;i<=x;i++){\n        l = min(i,y);\n        for(j=b;j<=l;j++){\n            if(i==j)\n                break;\n            dp[k][0] = i;\n            dp[k][1] = j;\n            k++;\n            out++;\n        }   \n    }\n    printf(\"%d\\n\",out);\n    for(i=1;i<=out;i++)\n        printf(\"%d %d\\n\",dp[i][0],dp[i][1]);\n    return 0;\n}"}
{"similarity_score": 0.9578438147892191, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "61028f2183ec8f551a6e53c73749566f", "bug_code_uid": "2927ccd1b32b676ee74bfab15ba62a2a", "src_uid": "96dee17800e147350bd37e60f66f49dd", "apr_id": "7249f3232406a2702f224b06713f0a60", "difficulty": 1000, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    long long int z,n,m,k,x,res,y,i,largest,secondlarge;\n    scanf(\"%I64d %I64d %I64d\",&n,&m,&k);\n    long long int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n    largest=a[0];\n    secondlarge=a[0];\n    for(i=0;i<n;i++){\n            if(a[i]>largest){largest=a[i];}\n        }\n    for(i=0;i<n;i++){\n        if(a[i]==largest){a[i]=0;break;}\n\n    }\n    for(i=0;i<n;i++){\n            if(a[i]>secondlarge){secondlarge=a[i];}\n        }\n\n    if(m<=k)res=largest*m;\n    else{\n        x=m/(k+1);\n        y=m-x*(k+1);\n        z=m-(x*k+y);\n        res=(x*k+y)*largest+z*secondlarge;\n\n    }\n    printf(\"%I64d\",res);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    long long int z,n,m,k,x,res,y,i,largest,secondlarge;\n    scanf(\"%I64d %I64d %I64d\",&n,&m,&k);\n    long long int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n    if(n==2 && m==2 && k==1){printf(\"%d\",3);}\n    else{\n    largest=a[0];\n    secondlarge=a[0];\n    for(i=0;i<n;i++){\n            if(a[i]>largest){largest=a[i];}\n        }\n    for(i=0;i<n;i++){\n        if(a[i]==largest){a[i]=0;break;}\n\n    }\n    for(i=0;i<n;i++){\n            if(a[i]>secondlarge){secondlarge=a[i];}\n        }\n\n    if(m<=k)res=largest*m;\n    else{\n        x=m/(k+1);\n        y=m-x*(k+1);\n        z=m-(x*k+y);\n        res=(x*k+y)*largest+z*secondlarge;\n\n    }\n    printf(\"%I64d\",res);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9897048730267674, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1fa974f3e7c492f3992f96477c71d8c1", "bug_code_uid": "b04c739888c37752281e1443042fb995", "src_uid": "aa3b5895046ed34e89d5fcc3264b3944", "apr_id": "2559f0a762054df17ac89e42f0631dea", "difficulty": 1300, "tags": ["two pointers", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 200000\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tstatic char s[N + 1];\n\tstatic int aa[N];\n\tint n, k, i, damage;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tscanf(\"%s\", s);\n\tdamage = 0;\n\tfor (i = 0; i < n; ) {\n\t\tint j;\n\n\t\tfor (j = i; j < n && s[j] == s[i]; j++)\n\t\t\tdamage += aa[j];\n\t\tj--;\n\t\tif (j - i + 1 > k) {\n\t\t\tstatic int bb[N];\n\t\t\tint h;\n\n\t\t\tfor (h = i; h <= j; h++)\n\t\t\t\tbb[h - i] = aa[h];\n\t\t\tqsort(bb, j - i + 1, sizeof *bb, compare);\n\t\t\tfor (h = 0; h < (j - i + 1) - k; h++)\n\t\t\t\tdamage -= bb[h];\n\t\t}\n\t\ti = j + 1;\n\t}\n\tprintf(\"%d\\n\", damage);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define N 200000\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tstatic char s[N + 1];\n\tstatic int aa[N];\n\tint n, k, i;\n\tlong long damage;\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tscanf(\"%s\", s);\n\tdamage = 0;\n\tfor (i = 0; i < n; ) {\n\t\tint j;\n\n\t\tfor (j = i; j < n && s[j] == s[i]; j++)\n\t\t\tdamage += aa[j];\n\t\tj--;\n\t\tif (j - i + 1 > k) {\n\t\t\tstatic int bb[N];\n\t\t\tint h;\n\n\t\t\tfor (h = i; h <= j; h++)\n\t\t\t\tbb[h - i] = aa[h];\n\t\t\tqsort(bb, j - i + 1, sizeof *bb, compare);\n\t\t\tfor (h = 0; h < (j - i + 1) - k; h++)\n\t\t\t\tdamage -= bb[h];\n\t\t}\n\t\ti = j + 1;\n\t}\n\tprintf(\"%lld\\n\", damage);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9903069466882067, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4ca493b341468efb3c99bd96dc7e6423", "bug_code_uid": "75f6d6f0ff61315c31b74ed60138a8e0", "src_uid": "17cf2d6f59773925b228188b5a47b710", "apr_id": "fa87f3a8e5b13c95a7909e308468e54d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t, a, b,c,d,k,x,y,num,s[1000][3],i=0;\n    scanf(\"%d\\n\",&t);\n    int many =t;\n    while(t--){\n        num = 0;\n        scanf(\"%d %d %d %d %d\",&a, &b,&c,&d,&k);\n        for(int x=0;x<=k;x++){\n            y=k-x;\n            if(x*c>=a&&y*d>=b){\n                s[i][0]=x,s[i][1]=y,s[i][2]='\\n';\n                num++;\n                break;\n            }\n        }\n        if(num==0) s[i][0]=-1,s[i][1]='\\n';\n        i++;\n\n    }\n    for(int j=0;j<many;j++){\n        if(s[j][1]=='\\n')\n        printf(\"%d\\n\",s[j][0]);\n        else printf(\"%d %d\\n\", s[j][0],s[j][1]);\n\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t, a, b,c,d,k,x,y,num,s[1000][3],i=0;\n    scanf(\"%d\\n\",&t);\n    int many =t;\n    while(t--){\n        num = 0;\n        scanf(\"%d %d %d %d %d\",&a, &b,&c,&d,&k);\n        for(int x=0;x<=k;x++){\n            y=k-x;\n            if(x*c>=a&&y*d>=b){\n                s[i][0]=x,s[i][1]=y,s[i][2]='\\n';\n                num++;\n                break;\n            }\n        }\n        if(num==0) s[i][0]=-1,s[i][1]=-1;\n        i++;\n\n    }\n    for(int j=0;j<many;j++){\n        if(s[j][1]==-1)\n        printf(\"%d\\n\",s[j][0]);\n        else printf(\"%d %d\\n\", s[j][0],s[j][1]);\n\n    }\n    return 0;\n}"}
{"similarity_score": 0.8449074074074074, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c0cd8fcbac04640b1520afb8ea4fb710", "bug_code_uid": "fa7d8c7cfd0aee5d2c637f863e647b82", "src_uid": "50e88225d8b081d63eebe446f48057f4", "apr_id": "0d3626b38c10bc2525e4b9b33a00b5da", "difficulty": 1200, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,a[301],b[301],n,flag=0,cnt=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=0;\n\t}\n\tflag=0;\n\twhile(flag==0)\n\t{\n\t\tcnt=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(b[i]<a[i])\n\t\t\t{\n\t\t\t\tb[i]++;\n\t\t\t\tprintf(\"P\");\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tif(i<n-1)\n\t\t\tprintf(\"R\");\n\t\t}\n\t\tif(cnt==0)\n\t\t{\n\t\t\tflag=1;\n\t\t}\n\t\tfor(i=n-2;i>=0&&flag==0;i--)\n\t\t{\n\t\t\tprintf(\"L\");\n\t\t\tif(b[i]<a[i])\n\t\t\t{\n\t\t\t\tcnt++;\n\t\t\t\tb[i]++;\n\t\t\t\tprintf(\"P\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,a[301],b[301],n,flag=0,cnt=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=0;\n\t}\n\tflag=0;\n\twhile(flag==0)\n\t{\n\t\tcnt=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(b[i]<a[i])\n\t\t\t{\n\t\t\t\tb[i]++;\n\t\t\t\tprintf(\"P\");\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tif(i<n-1)\n\t\t\tprintf(\"R\");\n\t\t}\n\t\tfor(i=n-2;i>=0;i--)\n\t\t{\n\t\t\tprintf(\"L\");\n\t\t}\n\t\tif(cnt==0)\n\t\t{\n\t\t\tflag=1;\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.997920997920998, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f8080164482fdd641d98dc43a1748866", "bug_code_uid": "f6ce75316acaa89d470b677f030d5167", "src_uid": "2ae1a4d4f2e58b359c898d1ff38edb9e", "apr_id": "e94aa14bb96870bbb87eb00b03d04e62", "difficulty": 1400, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint compare(const void *a,const void *b){\n\tif(*(long long*)a>*(long long*)b)return 1;\n\telse if(*(long long*)a==*(long long*)b)return 0;\n\telse return -1;\n}\nint main(){\n\tlong long n,i;\n\tint count=0;\n\tlong long fun[100000];\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i*i<=n;i++){\n\t\tif(n%i==0){\n\t\t\tfun[count++]=n*(i-1)/2+i;\n\t\t\tif(i*i!=n)fun[count++]=n*(n/i-1)/2+n/i;\n\t\t}\n\t}\n\tqsort(fun,count,sizeof(long long),compare);\n\tfor(i=0;i<count;i++)printf(\"%d \",fun[i]);\t\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint compare(const void *a,const void *b){\n\tif(*(long long*)a>*(long long*)b)return 1;\n\telse if(*(long long*)a==*(long long*)b)return 0;\n\telse return -1;\n}\nint main(){\n\tlong long n,i;\n\tint count=0;\n\tlong long fun[100000];\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i*i<=n;i++){\n\t\tif(n%i==0){\n\t\t\tfun[count++]=n*(i-1)/2+i;\n\t\t\tif(i*i!=n)fun[count++]=n*(n/i-1)/2+n/i;\n\t\t}\n\t}\n\tqsort(fun,count,sizeof(long long),compare);\n\tfor(i=0;i<count;i++)printf(\"%lld \",fun[i]);\t\n}"}
{"similarity_score": 0.8807947019867549, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "6198ea37eb59d9d1af89b89138cad250", "bug_code_uid": "e24c5c47efe2c76edd7675f79800e83e", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "df7bde7e95ea51f85d3496c9cc99ecc2", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j=0,l;\n\tchar a[9999],b[9999];\n\tscanf(\"%s%s\",a,b);\n\tfor(i=0;i<strlen(a);i++)\n\t{\n\t\tif(a[i]!=b[i])\n\t\t\tj++;\n\t}\n\tint k=0;\n\tif(j%2!=0)\n\t{\n\t\tprintf(\"impossible\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<strlen(a);i++)\n\t\t{\n\t\t\tif(a[i]!=b[i])\n\t\t\t{\n\t\t\t\tif(k%2==0)\n\t\t\t\t{\n\t\t\t\tprintf(\"%c\",b[i]);\n\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c\",a[i]);k++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%c\",a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\t\t\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j=0,l,len;\n\tchar a[999999],b[999999];\n\tscanf(\"%s%s\",a,b);\n\tlen=strlen(a);\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(a[i]!=b[i])\n\t\t\tj++;\n\t}\n\tint k=0;\n\tif(j%2!=0)\n\t{\n\t\tprintf(\"impossible\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<len;i++)\n\t\t{\n\t\t\tif(a[i]!=b[i])\n\t\t\t{\n\t\t\t\tif(k%2==0)\n\t\t\t\t{\n\t\t\t\tprintf(\"%c\",b[i]);\n\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c\",a[i]);k++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%c\",a[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9230769230769231, "equal_cnt": 11, "replace_cnt": 0, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "209522d5202384d35b134b7c815a65e3", "bug_code_uid": "589f990b4c71d2725c4b4b5468e648dd", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "b967dd5ed9d1a3a60827749ca7336f4d", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n#define N 110\n\nint main()\n{\n    int n,m,i,j,a[N][N],tmp[N],max = 1,flag = 1;\n    scanf(\"%d %d\",&n,&m);//n\ufffd\ufffd\u02be\ufffd\ufffd\u0461\ufffd\u02f5\ufffd\ufffd\ufffd\u013f\ufffd\ufffdm\ufffd\ufffd\u02be\ufffd\ufffd\ufffd\u0435\ufffd\ufffd\ufffd\u013f\n    for (i = 1; i <= m; i++){\n        for (j = 1; j <= n; j++){\n            scanf(\"%d\",&a[i][j]);\n            //if (a[i][j] > a[i][max]){//\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0638\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u04bb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u00b1\ufffd\u0421\ufffd\ufffd\ufffd\u01f8\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0221\ufffd\ufffd\ufffd\u01f4\ufffd\ufffd\ufffd\n                //max = j;//\ufffd\ufffd\ufffd\ufffd\u01b1\ufffd\ufffd\ufffd\ufffd\ufffd\u02f5\ufffd\ufffd\u00b1\ufffd\ufffd\u00bc\ufffd\ufffd\n            //}\n        }\n        //\u01b1\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u02fc\ufffd\ufffd\ufffd\n        //tmp[max]++;\n    }\n    for (i = 1; i <= m; i++){\n        for (j = 2; j <= n; j++){\n            if (a[i][j] > a[i][max]){\n                max = j;\n            }\n        }\n        tmp[max]++;\n    }\n\n    for (i = 2; i <= n; i++){\n        if (tmp[i] > tmp[flag]){//\u012c\ufffd\u03f5\ufffd\u04bb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03aa1\ufffd\ufffd\ufffd\u00b1\ufffd\u0421\n            flag = i;\n        }\n    }\n    printf(\"%d\",flag);\n    return 0;\n\n}\n", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n#define N 110\n\nint main()\n{\n    int n,m,i,j,a[N][N],tmp[N],flag = 1;\n    scanf(\"%d %d\",&n,&m);//n\ufffd\ufffd\u02be\ufffd\ufffd\u0461\ufffd\u02f5\ufffd\ufffd\ufffd\u013f\ufffd\ufffdm\ufffd\ufffd\u02be\ufffd\ufffd\ufffd\u0435\ufffd\ufffd\ufffd\u013f\n    for (i = 1; i <= m; i++){\n        int max = 1;\n        for (j = 1; j <= n; j++){\n            scanf(\"%d\",&a[i][j]);\n            if (a[i][j] > a[i][max]){//\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0638\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u04bb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u00b1\ufffd\u0421\ufffd\ufffd\ufffd\u01f8\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0221\ufffd\ufffd\ufffd\u01f4\ufffd\ufffd\ufffd\n                max = j;//\ufffd\ufffd\ufffd\ufffd\u01b1\ufffd\ufffd\ufffd\ufffd\ufffd\u02f5\ufffd\ufffd\u00b1\ufffd\ufffd\u00bc\ufffd\ufffd\n            }\n        }\n        //\u01b1\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u02fc\ufffd\ufffd\ufffd\n        tmp[max]++;\n    }\n    /*\n    for (i = 1; i <= m; i++){\n        int max = 1;//\u00ff\ufffd\u03bd\ufffd\ufffd\u00b1\ufffd\ufffd\ufffd\u0421\ufffd\ufffd\ufffd\ufffd\u03aa\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n        for (j = 2; j <= n; j++){\n            if (a[i][j] > a[i][max]){\n                max = j;\n            }\n        }\n        tmp[max]++;\n        printf(\"%d,%d\\n\",tmp[max],max);\n    }\n    */\n\n    for (i = 2; i <= n; i++){\n        if (tmp[i] > tmp[flag]){//\u012c\ufffd\u03f5\ufffd\u04bb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03aa1\ufffd\ufffd\ufffd\u00b1\ufffd\u0421\n            flag = i;\n        }\n    }\n    printf(\"%d\",flag);\n    return 0;\n\n}\n"}
{"similarity_score": 0.8699439950217797, "equal_cnt": 13, "replace_cnt": 3, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "78ffc2698d0f7a7c02e8de764d310652", "bug_code_uid": "19bf43eb061ea2fe8e51749247587d7f", "src_uid": "3d4df21eebf32ce15841179bb85e6f2f", "apr_id": "4d49943e0957b3d2da42c95067dd49be", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <memory.h>\n\n#define DATA_SIZE 5005\n\nint data[DATA_SIZE];\nint target1[DATA_SIZE];\nint target2[DATA_SIZE];\n\nint main()\n{\n\tmemset(data, 0, sizeof(data));\n\tmemset(target1, 0, sizeof(target1));\n\tmemset(target2, 0, sizeof(target2));\n\tint n, k, res = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\", data + i);\n\t\ttarget1[data[i]]++;\n\t\ttarget2[data[i]] = 1;\n\t\tif (target1[data[i]] > k)\n\t\t{\n\t\t\tres = -1;\n\t\t}\n\t}\n\tif (res == -1)\n\t{\n\t\tprintf(\"NO\\n\");\n\t} else\n\t{\n\t    printf(\"YES\\n\")\n\t\tint k_ptr = k;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t{\n\t\t\tif (target2[data[i]] && k_ptr > target1[data[i]])\n\t\t\t{\n\t\t\t\ttarget2[data[i]] = 0;\n\t\t\t\tint temp = target1[data[i]];\n\t\t\t\ttarget1[data[i]] = k_ptr;\n\t\t\t\tk_ptr -= temp;\n\t\t\t}\n\t\t\tprintf(\"%d \", target1[data[i]]--);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <memory.h>\n\n#define DATA_SIZE 5005\n\nint data[DATA_SIZE];\nint target1[DATA_SIZE];\nint target2[DATA_SIZE];\n\nint main()\n{\n\tmemset(data, 0, sizeof(data));\n\tmemset(target1, 0, sizeof(target1));\n\tmemset(target2, 0, sizeof(target2));\n\tint n, k;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\", data + i);\n\t\ttarget1[data[i]]++;\n\t\ttarget2[data[i]] = 1;\n\t\tif (target1[data[i]] > k)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"YES\\n\");\n\tint k_ptr = k;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tif (k_ptr > target1[data[i]])\n\t\t{\n\t\t\tif (target2[data[i]])\n\t\t\t{\n\t\t\t\ttarget2[data[i]] = 0;\n\t\t\t\tint temp = target1[data[i]];\n\t\t\t\ttarget1[data[i]] = k_ptr;\n\t\t\t\tk_ptr -= temp;\n\t\t\t}\n\t\t} else\n\t\t{\n\t\t\ttarget2[data[i]] = 0;\n\t\t}\n\t\tprintf(\"%d \", target1[data[i]]--);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5643410852713179, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "25e1022825fe67322d1c319487de6f29", "bug_code_uid": "782c326a2318afd51b0f18b1abb31b5d", "src_uid": "f3dde329830d8c479b3dab9d5df8baf5", "apr_id": "2fb059e27c6313a33b9eb009424c1aa5", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long int n,i,j;\n    long long int k=0;\n    scanf(\"%ld\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(a[i]== -a[j])\n            k++;\n        }\n    }\n    printf(\"%lld\", k);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    long int n,i,j,m;\n    long long int k=0,sum=0,c[21]={0};\n    scanf(\"%ld\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n    c[a[i]+10]++;\n    for(i=0;i<10;i++)\n    sum = sum + c[i]*c[20-i];\n    printf(\"%lld\",(sum) + (c[10]*(c[10]-1))/2 );\n    return 0;\n}"}
{"similarity_score": 0.9815340909090909, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1aaf7adda15c69d9e55e213880c71743", "bug_code_uid": "c67b8db632c0ee18d90588259699557e", "src_uid": "21c0e12347d8be7dd19cb9f43a31be85", "apr_id": "d131422f329359073e3e08293ca3123e", "difficulty": 1700, "tags": ["hashing", "divide and conquer", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#pragma warning(disable:4996)\n#define true 1\n#define false 0\n#include<stdio.h>\n#include<string.h>\nchar str1[200001], str2[200001];\nint equivalent(char *sa, char *sb, int len) {\n\tint flag = 1;\n\tfor(int i=0;i<len;++i)\n\t\tif (sa[i] != sb[i]) { flag = 0; break; }\n\tif (flag)return true;\n\n\treturn\t(equivalent(sa, sb + (len >> 1), len >> 1) && equivalent(sa + (len >> 1), sb, len >> 1)) ||\n\t\t\t(equivalent(sa, sb, len >> 1) && equivalent(sa + (len >> 1), sb + (len >> 1), len >> 1));\n}\nint main()\n{\n\tint len;\n\twhile (~scanf(\"%s%s\", str1, str2)) {\n\t\tlen = strlen(str1);\n\t\tif (len != strlen(str2) || !equivalent(str1,str2,len)) {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#pragma warning(disable:4996)\n#define true 1\n#define false 0\n#include<stdio.h>\n#include<string.h>\nchar str1[200001], str2[200001];\nint equivalent(char *sa, char *sb, int len) {\n\tint flag = 1;\n\tfor(int i=0;i<len;++i)\n\t\tif (sa[i] != sb[i]) { flag = 0; break; }\n\tif (flag)return true;\n\tif (len & 1)return false;\n\treturn\t(equivalent(sa, sb + (len >> 1), len >> 1) && equivalent(sa + (len >> 1), sb, len >> 1)) ||\n\t\t\t(equivalent(sa, sb, len >> 1) && equivalent(sa + (len >> 1), sb + (len >> 1), len >> 1));\n}\nint main()\n{\n\tint len;\n\twhile (~scanf(\"%s%s\", str1, str2)) {\n\t\tlen = strlen(str1);\n\t\tif (len != strlen(str2) || !equivalent(str1,str2,len)) {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9026915113871635, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e75cb9e35c5f165362a499e072af6956", "bug_code_uid": "1d975eeca64349b02269b2ebe0173360", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "015ce0b0f56e0d5567ba1c0ad8174b10", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,output=0;\nscanf(\"%d\",&n);\nwhile(n!=0)\n{\nint a,b,c;\nscanf(\"%d %d %d\",&a,&b,&c);\nint count=0;\nif(a==1)\ncount++;\nif(b==1)\ncount++;\nif(c==1)\ncount++;\nif(count>=2)\n  output++;\nprintf(\"%d\",output);\nn--;\n}\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,output=0;\nscanf(\"%d\",&n);\n\nwhile(n!=0)\n{\nint a,b,c;\nscanf(\"%d %d %d\",&a,&b,&c);\nint count=0;\nif(a==1)\ncount++;\nif(b==1)\ncount++;\nif(c==1)\ncount++;\nif(count>=2)\n  output++;\n  \nn--;  \n}\nprintf(\"%d\",output);\n\n\n}"}
{"similarity_score": 0.9850523168908819, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "01eee477d49bcaf64feb93957c2119c7", "bug_code_uid": "0818142053d4b79a51d1a5af4acd31b7", "src_uid": "54c748dd983b6a0ea1af1153d08f1c01", "apr_id": "1cdfe2c3d4d5c6215c5c984975d0127b", "difficulty": 1100, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint i, j, n;\nchar s[3005];\n\nint main(void)\n{\n\twhile (scanf(\"%d\", &n) != EOF) {\n\t\tmemset(s, 0, sizeof(s));\n\t\tscanf(\"%s\", s);\n\t\t\n\t\tint len = strlen(s);\n\t\ti = 0;\n\t\tint c = 0;\n\t\tint cnt = 0;\n\t\tchar pre = '\\0';\n\t\twhile (i < len) {\n\t\t\tif (s[i] == '.') {\n\t\t\t\tcnt++;\n\t\t\t} else if (s[i] == 'R' && pre == '\\0') {\n\t\t\t\tc = cnt;\n\t\t\t} else if (s[i] == 'R' && pre == 'L' && cnt % 2 == 1) {\n\t\t\t\tc += 1;\n\t\t\t} else if (s[i] == 'L' && pre == 'R' && cnt % 2 == 1) {\n\t\t\t\tc += 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (s[i] != '.') {\n\t\t\t\tpre = s[i];\n\t\t\t\tcnt = 0;\n\t\t\t}\n\t\t\t\n\t\t\ti++;\n\t\t}\n\t\t\n\t\tif (pre == 'L' || pre == '\\0') {\n\t\t\tc += cnt;\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\", c);\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint i, j, n;\nchar s[3005];\n\nint main(void)\n{\n\twhile (scanf(\"%d\", &n) != EOF) {\n\t\tmemset(s, 0, sizeof(s));\n\t\tscanf(\"%s\", s);\n\t\t\n\t\tint len = strlen(s);\n\t\ti = 0;\n\t\tint c = 0;\n\t\tint cnt = 0;\n\t\tchar pre = '\\0';\n\t\twhile (i < len) {\n\t\t\tif (s[i] == '.') {\n\t\t\t\tcnt++;\n\t\t\t} else if (s[i] == 'R' && pre == '\\0') {\n\t\t\t\tc = cnt;\n\t\t\t} else if (s[i] == 'R' && pre == 'L') {\n\t\t\t\tc += cnt;\n\t\t\t} else if (s[i] == 'L' && pre == 'R' && cnt % 2 == 1) {\n\t\t\t\tc += 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (s[i] != '.') {\n\t\t\t\tpre = s[i];\n\t\t\t\tcnt = 0;\n\t\t\t}\n\t\t\t\n\t\t\ti++;\n\t\t}\n\t\t\n\t\tif (pre == 'L' || pre == '\\0') {\n\t\t\tc += cnt;\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\", c);\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9979674796747967, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "98eda7f0168ae98be510c70fe732adc1", "bug_code_uid": "9e99f7772a6c3644cbb9d0203688ddad", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "e271fe4fd6af6a62ae5af8038ae8ca2b", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar s[105][10];\nint count[105];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%s\",s[i]);\n\tint j,ans;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tans=strcmp(s[i],s[j]);\n\t\t\t\tif(ans==0)\n\t\t\t\t\tcount[i]++;\n\t\t}\n\t}\n\tint max,index;\n\tmax=count[0];\n\tindex=0;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(count[i]>max)\n\t\t{\n\t\t\tmax=count[i];\n\t\t\tindex=i;\n\t\t}\n\t}\n\tint len;\n\tlen=strlen(s[index]);\n\tfor(i=0;i<len;i++)\n\t\tprintf(\"%c\",s[index][i]);\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar s[105][15];\nint count[105];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%s\",s[i]);\n\tint j,ans;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tans=strcmp(s[i],s[j]);\n\t\t\t\tif(ans==0)\n\t\t\t\t\tcount[i]++;\n\t\t}\n\t}\n\tint max,index;\n\tmax=count[0];\n\tindex=0;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(count[i]>max)\n\t\t{\n\t\t\tmax=count[i];\n\t\t\tindex=i;\n\t\t}\n\t}\n\tint len;\n\tlen=strlen(s[index]);\n\tfor(i=0;i<len;i++)\n\t\tprintf(\"%c\",s[index][i]);\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.8419580419580419, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "14164a9f80b89e1b46f00f4b4fbd17ab", "bug_code_uid": "ffb6ab98925b59dd92e52ec4ab29e2e8", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "78c766ac7eb8c031534412f1f9929ab4", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(int *a, int *b)\n{\n\treturn *a - *b;\n}\n\nint BinarySearch_UpperBound(int arr[], int n, int temp)\n{\n\tint first = 0, last = n - 1, middle;\n\n\twhile(first <= last){\n\t\tmiddle = (first + last) / 2;\n\t\tif(temp <= arr[middle])\n            last = middle - 1;\n\t\telse\n\t\t\tfirst = middle + 1;\n\t}\n\treturn last + 2;\n}\n\nint main()\n{\n    int n, m, i, j, sum = 0, temp;\n\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &temp);\n        sum = sum + temp;\n        arr[i] = sum;\n    }\n    qsort(arr, n, sizeof *arr, cmp);\n    printf(\"\\n\");\n\n    for(i=0; i<n; i++)\n        printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n\n    scanf(\"%d\", &m);\n    for(i=0; i<m; i++){\n\t\tscanf(\"%d\", &temp);\n\t\tprintf(\"%d\\n\", BinarySearch_UpperBound(arr, n, temp));\n\t}\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint BinarySearch_LowerBound(int arr[], int n, int temp)\n{\n\tint first = 0, last = n - 1, middle;\n\n\twhile(first <= last){\n\t\tmiddle = (first + last) / 2;\n\t\tif(temp <= arr[middle])\n            last = middle - 1;\n\t\telse\n\t\t\tfirst = middle + 1;\n\t}\n\treturn first + 1;\n}\n\nint main()\n{\n    int n, m, i, sum = 0, temp;\n\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &temp);\n        sum = sum + temp;\n        arr[i] = sum;\n    }\n\n    scanf(\"%d\", &m);\n    for(i=0; i<m; i++){\n\t\tscanf(\"%d\", &temp);\n\t\tprintf(\"%d\\n\", BinarySearch_LowerBound(arr, n, temp));\n\t}\n\n    return 0;\n}\n"}
{"similarity_score": 0.2810333963453056, "equal_cnt": 33, "replace_cnt": 19, "delete_cnt": 9, "insert_cnt": 5, "fix_ops_cnt": 33, "lang": "GNU C11", "fix_code_uid": "305cf4a5d7d196c7d3621735c0124922", "bug_code_uid": "a28bb0018008e541cc71364509d9b1e5", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "f95a717f8cdb7f8f8bbabbd8645527ae", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int number_of_test_case;\n    scanf(\"%d\", &number_of_test_case);\n    int i;\n    for (i = 0; i < number_of_test_case; i++)\n    {\n        int number_of_element;\n        scanf(\"%d\", &number_of_element);\n        int array[number_of_element];\n        int j;\n        for (j = 0; j < number_of_element; j++)\n        {\n            scanf(\"%d\", &array[j]);\n        }\n        int count_number[10] = {0};\n        for (int j = 0; j < number_of_element; j++)\n        {\n            count_number[array[j]]++;\n        }\n        int three_times_in_array_number = -1;\n        for (int k = 0; k < 10; k++)\n        {\n            if (count_number[k] >= 3)\n            {\n                three_times_in_array_number = k;\n                break;\n            }\n        }\n        printf(\"%d\\n\", three_times_in_array_number);\n    }\n    return 0;\n}\n            \t\t\t\t \t \t \t\t\t \t\t\t \t\t", "fixed": "#include<stdio.h>\n\nint main(){\n\n    int t;\n    scanf(\"%d\", &t);\n    for(int i=0; i<t; i++){\n        int n, flag = 0, v;\n        scanf(\"%d\", &n);\n        int ar[n];\n        for(int j=0; j<n; j++){\n            scanf(\"%d\", &ar[j]);\n        }\n\n        int count[299991]={0};\n        for(int j = 0; j<n; j++){\n            int val = ar[j];\n            count[val]++;\n        }\n        for(int val = 0; val<n+1; val++){\n            if(count[val]>=3){\n                flag = 1;\n                v = val;\n            }\n        }\n        if(flag == 1){\n            printf(\"%d\\n\", v);\n        }\n        else{\n            printf(\"%d\\n\", -1);\n        }\n\n    }\n\n\n    return 0;\n}\n//&**%\n\n\t \t\t\t  \t \t \t  \t\t\t\t  \t \t\t\t\t \t \t"}
{"similarity_score": 0.04246284501061571, "equal_cnt": 6, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5f9e741eede74c781896a8c204b2ba84", "bug_code_uid": "001f0e0bb44830611e3c482c6513382e", "src_uid": "5df6eb50ead22b498bea69bb84341c06", "apr_id": "502803c7ede384910da204f645819932", "difficulty": 1100, "tags": ["greedy", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+10;\nint a[N];\nint main()\n{\n    int n,f=1,i;\n    ios::sync_with_stdio(false);\n    cin>>n;\n    for(i=0; i<n; i++)\n        cin>>a[i];\n    sort(a,a+n);\n    int time=a[0];\n    for(i=1; i<n; i++)\n    {\n        if(time>a[i])\n            continue; \n        else\n        {\n            ans++;\n            time+=a[i];\n        }\n    }\n    cout<<f<<endl;\n    return 0;\n}\n\n \t\t \t \t  \t\t\t\t\t\t\t \t    \t\t  \t \t \t", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,count,t,q,sum,flag,i,j;\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tsum=1;\n\t\tcount=0;\n\t\tflag=-1;\n\t\tscanf(\"%lld%lld\",&t,&q);\n\t\tfor(sum=1,count=0;;)\n\t\t{\n\t\t\tif(sum>=t)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tprintf(\"%lld\\n\",count);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(sum>q)\n\t\t\tbreak;\n\t\t\tsum*=2;\n\t\t\tcount++;\n\t\t}\n\t\tif(flag==-1)\n\t\t{\n\t\t\tif((t-sum)%q==0)\n\t\t\tprintf(\"%lld\\n\",count+(t-sum)/q);\n\t\t\telse printf(\"%lld\\n\",count+1+(t-sum)/q);\n\t\t}\n\t}\n\treturn 0;\n}\n \t  \t  \t\t   \t   \t\t\t\t\t  \t\t \t \t"}
{"similarity_score": 0.9610983981693364, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "04bb14d45f85272766363845c3d197d4", "bug_code_uid": "0f0ed06931138524d814804f3a4ae6fa", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "be3bf589915712775699c6c9aa8c3346", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{int t,flag,result;\nscanf(\"%d\",&t);\nfor(int i=0;i<t;i++)\n  {flag=0;\n  result=0;\n    long long   x,y,a,b;\n    scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n    k=y-x;\n    l=a+b;\n    if((k%l)==0)\n    {\n        flag=1;\n        printf(\"%d\\n\",k/l);\n    }\n   /* long  pos1,pos2;\n    pos1=x;\n    pos2=y;\n   \n    while(pos1<=pos2)\n    {\n    \n        if(pos1==pos2)\n        { printf(\"%d\\n\",result);\n            flag=1;\n            break;\n        }\n        pos1=pos1+a;\n        pos2=pos2-b;\n       // printf(\"%d\\t%d\\t%d\\n\",result,pos1,pos2);\n        result++;\n    }*/\n        \n    \n   if(flag==0)\n   {printf(\"-1\\n\");\n  }\n  }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{int t,flag,result;\n  long long   x,y,a,b,l,k;\nscanf(\"%d\",&t);\nfor(int i=0;i<t;i++)\n  {flag=0;\n  result=0;\n  \n    scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n    k=y-x;\n    l=a+b;\n    if((k%l)==0)\n    {\n        flag=1;\n        printf(\"%lld\\n\",k/l);\n    }\n   /* long  pos1,pos2;\n    pos1=x;\n    pos2=y;\n   \n    while(pos1<=pos2)\n    {\n    \n        if(pos1==pos2)\n        { printf(\"%d\\n\",result);\n            flag=1;\n            break;\n        }\n        pos1=pos1+a;\n        pos2=pos2-b;\n       // printf(\"%d\\t%d\\t%d\\n\",result,pos1,pos2);\n        result++;\n    }*/\n        \n    \n   if(flag==0)\n   {printf(\"-1\\n\");\n  }\n  }\n    return 0;\n}"}
{"similarity_score": 0.952, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a5c426b2ee2deaef6957b3e0b33544f7", "bug_code_uid": "7134310c2bdeb29da0f9f6d8a0c9cd2c", "src_uid": "ac4aac095e71cbfaf8b79262d4038095", "apr_id": "f9db3aad84f7ed3c08bb68239c0802d8", "difficulty": 1200, "tags": ["data structures", "hashing", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  for(int i=1; i<=t; i++){\r\n    int check[1000001]={};\r\n    int n, k, ans=0;\r\n    scanf(\"%d\", &n);\r\n    for(int j=1; j<=n; j++){\r\n      scanf(\"%d\", &k);\r\n      check[k-j+n]++;\r\n    }\r\n    for(int j=1; j<=2*n-1; j++){\r\n      ans+=check[j]*(check[j]-1)/2;\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n  }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n  int t;\r\n  scanf(\"%d\", &t);\r\n  for(int i=1; i<=t; i++){\r\n    long long int check[400001]={};\r\n    int n, k;\r\n    long long int ans=0;\r\n    scanf(\"%d\", &n);\r\n    for(int j=1; j<=n; j++){\r\n      scanf(\"%d\", &k);\r\n      check[k-j+n]++;\r\n    }\r\n    for(int j=1; j<=2*n-1; j++){\r\n      ans+=check[j]*(check[j]-1)/2;\r\n    }\r\n    printf(\"%lld\\n\", ans);\r\n  }\r\n}"}
{"similarity_score": 0.5632839224629419, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "5d58c613b4f816e694c02a4d976c97e9", "bug_code_uid": "f1e4c6dfff43da7d4ba466d1bb8ccb11", "src_uid": "5bffe38e3ac9511a30ee02b4ec5cb1d5", "apr_id": "5ed23495ce1c423680bbfd703213cdf1", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() \r\n{\r\n\tint N;\r\n\tscanf(\"%d\",&N);\r\n\tint i,a1,a2,a3;\r\n\tfor(i=1;i<=N;i++){\r\n\t\tscanf(\"%d %d %d\",&a1,&a2,&a3);\r\n\t\tint X;\r\n\t    X=a1+a3-2*a2;\r\n\t    if(X>=0){\r\n\t\t    for(X;X-3>0;X-=3);\r\n\t        if(X==3)printf(\"0\\n\");\r\n\t        if(X==2)printf(\"-1\\n\");\r\n\t        if(X==0||X==1)printf(\"%d\\n\",X);\r\n\t    }\r\n\t    if(X<0){\r\n\t\t    for(X;X+3<0;X+=3);\r\n\t\t    if(X==-3)printf(\"0\\n\");\r\n\t\t    if(X==-2)printf(\"1\\n\");\r\n\t\t    if(X==-1)printf(\"-1\\n\");\r\n        }\r\n    }\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main() \r\n{\r\n\tint N;\r\n\tscanf(\"%d\",&N);\r\n\tint i,a1,a2,a3;\r\n\tfor(i=1;i<=N;i++){\r\n\t\tscanf(\"%d %d %d\",&a1,&a2,&a3);\r\n\t\tint X,y;\r\n\t    X=a1+a3-2*a2;\r\n\t    if(X>=0){\r\n\t\t    y=X%3;\r\n\t\t    if(y!=2)printf(\"%d\\n\",y);\r\n\t\t    else printf(\"1\\n\");\r\n\t    }\r\n\t    if(X<0){\r\n\t\t    y=X%3;\r\n\t\t    if(y!=-2)printf(\"%d\\n\",-y);\r\n\t\t    else printf(\"1\\n\");\r\n        }\r\n    }\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.6325411334552102, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "9026705a9ee08907f0387ffbe42a741a", "bug_code_uid": "098df04d1f752380b9db18e610456840", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "4a7d43b9ace3627cb62cc1dd80111603", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdbool.h>\ntypedef long long ll;\nchar s[100001];\nint main(void) {\n    scanf(\"%s\",s);\n    int i,j,k,l=strlen(s),f1=0,f2=0;\n    for(i=0;i<l-1;i++)\n    {\n        if(s[i]=='A'&&s[i+1]=='B' && !f1)\n        {\n            f1=1;\n            i++;\n        }\n        else if(s[i]=='B'&&s[i+1]=='A' && !f2)\n        {\n            f2=1;\n            i++;\n        }\n    }\n    if(f1&f2)\n    {\n        puts(\"YES\");\n    }\n    else puts(\"NO\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdbool.h>\ntypedef long long ll;\nchar s[100001];\nint l;\nint main(void) {\n    scanf(\"%s\",s);\n    int i,j,k;\n    l=strlen(s);\n    int ab[l],ba[l],sz1=0,sz2=0;\n    for(i=0;i<l-1;i++)\n    {\n        if(s[i]=='A'&&s[i+1]=='B')ab[sz1++]=i;\n        if(s[i]=='B'&&s[i+1]=='A')ba[sz2++]=i;\n    }\n    for(i=0;i<sz1;i++)\n    {\n        for(j=0;j<sz2;j++)\n        {\n            if(abs(ab[i]-ba[j])>1)\n            {\n                puts(\"YES\");\n                return 0;\n            }\n        }\n    }\n    puts(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.8164665523156089, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9ccbf0b37967f6ff0898c2edbce41b4e", "bug_code_uid": "8fccd97f960b591e55d77eecb0471fcf", "src_uid": "7225266f663699ff7e16b726cadfe9ee", "apr_id": "257d1cdc0e4bd92e89e337d47c20204c", "difficulty": 2200, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int p,h1,a1,x1,y,h2,a2,x2,y2;\nlong long int hone(long long int h)\n{\n\treturn (x1*h+y)%p;\n}\nlong long int htwo(long long int h)\n{\n\treturn (x2*h+y2)%p;\n}\nint main()\n{\n\tscanf(\"%lld %lld %lld %lld %lld %lld %lld %lld %lld\",&p,&a1,&h1,&x1,&y,&a2,&h2,&x2,&y2);\n\tlong long int i,hi=a1,c=0,d=1,h=hone(h1),o=0;\n\twhile(hi!=h1 && c<=p)\n\t{\n\t\thi=hone(hi);\n\t\tc++;\n\t}\n\twhile(h!=h1 && d<=p)\n\t{\n\t\th=hone(h);\n\t\td++;\n\t}\n\tif(c>p)\n\t\tprintf(\"-1\\n\");\n\telse\n\t{\n\t\thi=a2;\n\t\tfor(i=0;i<c;i++)\n\t\t\thi=htwo(hi);\n\t\tif(hi==h2)\n\t\t\tprintf(\"%lld\\n\",c);\n\t\telse if(d>p)\n\t\t\tprintf(\"-1\\n\");\n\t\telse\n\t\t{\n\t\t\twhile(hi!=h2 && o<=p)\n\t\t\t{\n\t\t\t\thi=htwo(hi);\n\t\t\t\to++;\n\t\t\t}\n\t\t\tif(o>p)\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\telse if(o==d)\n\t\t\t\tprintf(\"%lld\\n\",c+o);\n\t\t\telse{\n\t\t\t\thi=htwo(hi);\n\t\t\t\tint oo=1;\n\t\t\t\twhile(hi!=h2 && oo<=p)\n\t\t\t\t{\n\t\t\t\t\thi=htwo(h2);\n\t\t\t\t\too++;\n\t\t\t\t}\n\t\t\t\tif(oo>p)\n\t\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%lld\\n\",c+o*d);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int p,h1,a1,x1,y,h2,a2,x2,y2;\nlong long int hone(long long int h)\n{\n\treturn (x1*h+y)%p;\n}\nlong long int htwo(long long int h)\n{\n\treturn (x2*h+y2)%p;\n}\nint main()\n{\n\tscanf(\"%lld %lld %lld %lld %lld %lld %lld %lld %lld\",&p,&a1,&h1,&x1,&y,&a2,&h2,&x2,&y2);\n\tlong long int i,hi=a1,c=0,d=1,h=hone(h1),o=0,a,b;\n\twhile(hi!=h1 && c<=p)\n\t{\n\t\thi=hone(hi);\n\t\tc++;\n\t}\n\twhile(h!=h1 && d<=p)\n\t{\n\t\th=hone(h);\n\t\td++;\n\t}\n\tif(c>p)\n\t\tprintf(\"-1\\n\");\n\telse\n\t{\n\t\thi=a2;\n\t\tfor(i=0;i<c;i++)\n\t\t\thi=htwo(hi);\n\t\tif(hi==h2)\n\t\t\tprintf(\"%lld\\n\",c);\n\t\telse if(d>p)\n\t\t\tprintf(\"-1\\n\");\n\t\telse\n\t\t{\n\t\t\ta=1;b=0;\n\t\t\tfor(i=0;i<d;i++)\n\t\t\t{\n\t\t\t\ta=(a*x2)%p;\n\t\t\t\tb=(b*x2+y2)%p;\n\t\t\t}\n\t\t\twhile(hi!=h2 && o<=p)\n\t\t\t{\n\t\t\t\thi=(a*hi+b)%p;\n\t\t\t\to++;\n\t\t\t}\n\t\t\tif(o>p)\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"%lld\\n\",c+o*d);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.6751754945756222, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "368a8a22d1f19ef40b2d65503ccbf457", "bug_code_uid": "ee1794c765e0cba623b5a0be1a7174f8", "src_uid": "c9b322a9138410a82e541179272eb6bf", "apr_id": "a7a08614e64939a0c8045c7e57e63465", "difficulty": 1300, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint min(int a, int b)\n{\n    if (a < b)\n    {\n        return a;\n    }\n    else\n    {\n        return b;\n    }\n}\n\n\nint compare(const void * x2, const void * x1)\n{\n  return ( *(int*)x1 - *(int*)x2 );\n}\n\nint main()\n{\n\n    int i, n, f, a[100000][2];\n    scanf(\"%d %d\", &n, &f);\n\n    for (i = 0; i < n; ++i)\n    {\n        int t, p;\n        scanf(\"%d%d\", &t, &p);\n        a[i][0] = min(2*t, p);\n        a[i][1] = min(t, p);\n    }\n    //printf(\"\\n\\n%d %d\\n%d %d\\n%d %d\", a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1]);\n    qsort (a, n, sizeof(a[i]), compare);\n    //printf(\"\\n\\n%d %d\\n%d %d\\n%d %d\", a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1]);\n    long long s = 0;\n    for ( i = 0; i < f; ++i)\n    {\n        s += a[i][0];\n        //printf(\"%d\\n\", s);\n    }\n    for (i = f; i <= n; ++i)\n    {\n        s += a[i][1];\n    }\n    printf(\"%I64d\", s);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint min(int a, int b)\n{\n    if (a < b)\n    {\n        return a;\n    }\n    else\n    {\n        return b;\n    }\n}\n\n\nint compare(const void * x2, const void * x1)\n{\n  return ( *(int*)x1 - *(int*)x2 );\n}\n\nint main()\n{\n\n    int i, n, f, a[100005];\n    scanf(\"%d %d\", &n, &f);\n    long long s = 0;\n\n    for (i = 0; i < n; ++i)\n    {\n        int t, p;\n        scanf(\"%d%d\", &t, &p);\n        s += min(t, p);\n        a[i] = min(2*t, p) - min(p, t);\n    }\n    qsort (a, n, sizeof(a[i]), compare);\n    for (i = 0; i < f; ++i)\n    {\n        s += a[i];\n    }\n    printf(\"%I64d\", s);\n    return 0;\n}\n"}
{"similarity_score": 0.5662921348314607, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "e5f8e5c7c35190244aa3ba8ae81071dc", "bug_code_uid": "0817a54e70d42a4fd5946060f8dfbdc2", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "f008560e0d1af5239cc3bf90fe8d9e56", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//Codeforces 508 //B. Anton and currency you all know //Codeforces Round #288 (Div. 2)\n#if 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tchar n[100001];\n\tint n_len;\n\tint i;\n\tchar rear;\n\tchar temp=-1;\n\tint adress;\n\n\tgets(n);\n\tn_len = strlen(n);\n\trear = n[n_len-1];\n\tif(rear % 2) //\ufffd\ufffd\ufffd\ufffd \u0226\ufffd\ufffd\ufffd\ufffd\ufffd \u00a6\ufffd\ufffd\ufffd\ufffd \u00e3\ufffd\u01be\ufffd\ufffd\ufffd\n\t{\n\t\tfor(i=n_len-1; i>=0; i--)\n\t\t{\n\t\t\tif(!(n[i] % 2)) // 0 \ufffd\u0336\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t\t{\n\t\t\t\tif(temp <= rear)\n\t\t\t\t{\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tadress = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(temp != -1)\n\t\t{\n\t\t\tn[adress] = n[n_len-1];\n\t\t\tn[n_len-1] = temp;\n\t\t}\n\t}\n\telse //\ufffd\ufffd\ufffd\ufffd \u00a6\ufffd\ufffd\ufffd\ufffd\ufffd \u0226\ufffd\ufffd\ufffd\ufffd \u00e3\ufffd\u01be\ufffd\ufffd\ufffd\n\t{\n\t\tfor(i=n_len-1; i>=0; i--)\n\t\t{\n\t\t\tif((n[i] % 2)) //\ufffd\ufffd\ufffd\ufffd 0 \ufffd\u0336\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t\t{\n\t\t\t\tif(temp <= rear)\n\t\t\t\t{\n\t\t\t\t\ttemp = n[i];\n\t\t\t\t\tadress = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(temp != -1)\n\t\t{\n\t\t\tn[adress] = n[n_len-1];\n\t\t\tn[n_len-1] = temp;\n\t\t}\n\t}\n\tif(temp == -1)\n\t\tprintf(\"-1\");\n\telse \n\t\tprintf(\"%s\", n);\n\treturn 0;\n}\n#endif\n", "fixed": "//Codeforces 508 //B. Anton and currency you all know //Codeforces Round #288 (Div. 2)\n#if 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tchar n[100001];\n\tint n_len;\n\tint i;\n\tchar rear;\n\tchar a;\n\tint a_ad=-1;\n\n\n\tgets(n);\n\tn_len = strlen(n);\n\trear = n[n_len-1];\n\tif(rear % 2) //\ufffd\ufffd\ufffd\ufffd \u0226\ufffd\ufffd\ufffd\ufffd\ufffd \u00a6\ufffd\ufffd\ufffd\ufffd \u00e3\ufffd\u01be\ufffd\ufffd\ufffd\n\t{\n\t\tfor(i=0; i<n_len-1; i++)\n\t\t{\n\t\t\tif(!(n[i] % 2)) // 0 \ufffd\u0336\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t\t{\n\t\t\t\ta = n[i];\n\t\t\t\ta_ad = i;\n\t\t\t\tif(n[i] <= rear)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(a_ad != -1)\n\t\t{\n\t\t\tn[a_ad] = n[n_len-1];\n\t\t\tn[n_len-1] = a;\n\t\t}\n\t}\n\telse //\ufffd\ufffd\ufffd\ufffd \u00a6\ufffd\ufffd\ufffd\ufffd\ufffd \u0226\ufffd\ufffd\ufffd\ufffd \u00e3\ufffd\u01be\ufffd\ufffd\ufffd\n\t{\n\t\tfor(i=0; i<n_len-1; i++)\n\t\t{\n\t\t\tif((n[i] % 2)) //\ufffd\ufffd\ufffd\ufffd 0 \ufffd\u0336\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n\t\t\t{\n\t\t\t\ta = n[i];\n\t\t\t\ta_ad = i;\n\t\t\t\tif(n[i] <= rear)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(a_ad != -1)\n\t\t{\n\t\t\tn[a_ad] = n[n_len-1];\n\t\t\tn[n_len-1] = a;\n\t\t}\n\t}\n\tif(a_ad == -1)\n\t\tprintf(\"-1\");\n\telse \n\t\tprintf(\"%s\", n);\n\treturn 0;\n}\n#endif\n"}
{"similarity_score": 0.6811451135241856, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4b7d53f1416e9a2b725a8f2ca8c4aa43", "bug_code_uid": "db73e5f24411967146227c45d62aa128", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "5c0b5af839a9e7425bdc49a8695a8f8a", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n\n{\n    int t,a,b,i,ans=0;\n\n    scanf(\"%d\",&t);\n\n    for (i=1;i<=t;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n\n        if (b<a)\n        {\n            b=a+b;\n            a=b-a;\n            b=b-a;\n        }\n\n        while(a!=b)\n        {\n            if (b>=(a+10))\n            {\n                a+=10;\n                ans++;\n            }\n            else\n            {\n                a=b;\n                ans++;\n            }\n        }\n\n        printf(\"%d\",ans);\n        if (i!=t) printf(\"\\n\");\n        ans=0;\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n\n{\n    int t,a,b,i,ans;\n\n    scanf(\"%d\",&t);\n\n    for (i=1;i<=t;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n\n        if (b<a)\n        {\n            b=a+b;\n            a=b-a;\n            b=b-a;\n        }\n\n        if ((b-a)%10==0)\n        {\n            ans = (b-a)/10;\n        }\n        else ans=(b-a)/10+1;\n\n        printf(\"%d\",ans);\n        if (i!=t) printf(\"\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9992169146436961, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "19d08b703877cdcc23f266b534dffbed", "bug_code_uid": "1bdda15edea91d5746d225a4661d8f05", "src_uid": "18458f6ab66db560a51887c944f26f0f", "apr_id": "1969009bfb94b590e24f13d01520ace6", "difficulty": 1800, "tags": ["dp", "sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tlong int n,k;\n\tscanf(\"%ld %ld\",&n,&k);\n\tint a[n];\n\tlong int count[n+1];\n\tfor (int i = 0; i <=n; ++i)\n\t{\n\t\tcount[i]=0;\n\t}\n\tlong int t = 0,t1 =-1 ,t2 =0;\n\ta[0]=2;\n\tlong int i = 1;\n\tfor (; a[i-1] >=0; ++i)\n\t{\tscanf(\"%d\",&a[i]);\n\t\tt1++;\n\t\tif ((i == n )&&(a[i]>=0))\n\t\t{ \n\t\t\tprintf(\"0\" );\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t}\n\tlong int max  = 0;\n\tlong int nv = 1;\n\tfor (; i <=n; ++i)\n\t{\tscanf(\"%d\",&a[i]);\n\t\tif (a[i]>=0)\n\t\t{\n\t\t\tt++;\n\t\t}\n\t\telse{\n\t\t\tif (t>max)\n\t\t\t{\n\t\t\t\tmax  = t ;\n\t\t\t}\n\t\t\tcount[t]++;\n\t\t\tt =0 ;\n\t\t\tnv++;\n\t\t}\n\t}\n\n\tif (nv>k)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 1;\n\t}\n\n\tfor (long int i = n; a[i]>=0; i--)\n\t{\tt2++;\n\t\t\n\t}\n\t\n\tlong int rem = k - nv ;\n\t\n\tlong int start = 1;\n\twhile((rem>0)&&(start<=max)){\n\t\tif(rem>=(start*count[start])){\n\t\t\trem = rem -start*count[start];\n\t\t\tcount[start]=0;\t\n\t\t\tstart++;\t\n\t\t}\n\t\telse if(rem>start){\n\t\t\tcount[start] -= rem/start ; \n\t\t\trem = rem - (rem/start)*start ;\n\n\t\t}\n\t\telse break ;\n\t\t\n\t}\n\t//printf(\"%ld\\n\",rem );\n\tif(rem>=t2){\n\t\t\tt2  = 0;\n\t\t}\n\tif (count[max]==0)\n\t{\tif (t2!=0)\n\t\t{\n\t\tprintf(\"2\");\n\t\t}\n\t\telse{\n\t\tprintf(\"1\");}\n\t\treturn 0;\n\t}\n\telse{\n\t\tlong int ans = 0;\n\n\t\twhile(start<=max){\n\t\t\t\n\t\t\tans= ans + count[start];\n\t\t\t\n\t\t\tstart++;\n\t\t}\n\t\tans = 2*ans + 1;\n\t\t\n\t\tif (t2!=0){\n\t\t\tans++;\n\t\t}\n\t\tprintf(\"%ld\\n\",ans );\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tlong int n,k;\n\tscanf(\"%ld %ld\",&n,&k);\n\tint a[n];\n\tlong int count[n+1];\n\tfor (int i = 0; i <=n; ++i)\n\t{\n\t\tcount[i]=0;\n\t}\n\tlong int t = 0,t1 =-1 ,t2 =0;\n\ta[0]=2;\n\tlong int i = 1;\n\tfor (; a[i-1] >=0; ++i)\n\t{\tscanf(\"%d\",&a[i]);\n\t\tt1++;\n\t\tif ((i == n )&&(a[i]>=0))\n\t\t{ \n\t\t\tprintf(\"0\" );\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t}\n\tlong int max  = 0;\n\tlong int nv = 1;\n\tfor (; i <=n; ++i)\n\t{\tscanf(\"%d\",&a[i]);\n\t\tif (a[i]>=0)\n\t\t{\n\t\t\tt++;\n\t\t}\n\t\telse{\n\t\t\tif (t>max)\n\t\t\t{\n\t\t\t\tmax  = t ;\n\t\t\t}\n\t\t\tcount[t]++;\n\t\t\tt =0 ;\n\t\t\tnv++;\n\t\t}\n\t}\n\n\tif (nv>k)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\n\tfor (long int i = n; a[i]>=0; i--)\n\t{\tt2++;\n\t\t\n\t}\n\t\n\tlong int rem = k - nv ;\n\t\n\tlong int start = 1;\n\twhile((rem>0)&&(start<=max)){\n\t\tif(rem>=(start*count[start])){\n\t\t\trem = rem -start*count[start];\n\t\t\tcount[start]=0;\t\n\t\t\tstart++;\t\n\t\t}\n\t\telse if(rem>start){\n\t\t\tcount[start] -= rem/start ; \n\t\t\trem = rem - (rem/start)*start ;\n\n\t\t}\n\t\telse break ;\n\t\t\n\t}\n\t//printf(\"%ld\\n\",rem );\n\tif(rem>=t2){\n\t\t\tt2  = 0;\n\t\t}\n\tif (count[max]==0)\n\t{\tif (t2!=0)\n\t\t{\n\t\tprintf(\"2\");\n\t\t}\n\t\telse{\n\t\tprintf(\"1\");}\n\t\treturn 0;\n\t}\n\telse{\n\t\tlong int ans = 0;\n\n\t\twhile(start<=max){\n\t\t\t\n\t\t\tans= ans + count[start];\n\t\t\t\n\t\t\tstart++;\n\t\t}\n\t\tans = 2*ans + 1;\n\t\t\n\t\tif (t2!=0){\n\t\t\tans++;\n\t\t}\n\t\tprintf(\"%ld\\n\",ans );\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7607913669064749, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "4a88547ec125fcd3adfc133f0e8d688f", "bug_code_uid": "ba4a1e38cbee2af8634f0aed3178ccef", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "ff71dcce6206f596fa6651609489972d", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h> \n\nint hash(char *s)\n{\n\tint A=54059, B=76963, C=99331, h=37;\n\twhile (*s) \n\t{\n    \th=(h*A)^(s[0]*B);\n     \ts++;\n   \t}\n   \treturn h%C;\n}\n\nint main()\n{\n\tint b[100000][10], n, h, j, c;\n\tchar s[100000][10][33], p;\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; ++i)\n\t{\n\t\tscanf(\"%s\", p);\n\t\th=hash(p);\n\t\tj=0;\n\t\tc=0;\n\t\twhile(s[h][j])\n\t\t{\n\t\t\tif(strcmp(s[h][j], p)==0)\n\t\t\t{\n\t\t\t\tprintf(\"%s%d\\n\", p, b[h][j]);\n\t\t\t\tc=1;\n\t\t\t\t++b[h][j];\n\t\t\t}\n\t\t}\n\t\tif(c==0)\n\t\t{\n\t\t\tprintf(\"%s\\n\", p);\n\t\t\tstrcpy(s[h][j], p);\n\t\t\tb[h][j]=1;\n\t\t}\n\t\t\n\t}\n}", "fixed": "#include <stdio.h>\n#include <string.h> \n\nstatic int b[100000][10], n, h, j, c;\nstatic char s[100000][10][33], p[33];\n\nint hash(char *s)\n{\n\tunsigned int A=54059, B=76963, C=99331, h=37;\n\twhile(*s) \n\t{\n\th=(h*A)^(s[0]*B);\n\ts++;\n\t}\n\treturn h%C;\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; ++i)\n\t{\n\t\tscanf(\"%s\", p);\n\t\th=hash(p);\n\t\tj=0;\n\t\tc=0;\n\t\twhile(s[h][j][0]!='\\0')\n\t\t{\n\t\t\tif(strcmp(s[h][j], p)==0)\n\t\t\t{\n\t\t\t\tprintf(\"%s%d\\n\", p, b[h][j]);\n\t\t\t\tc=1;\n\t\t\t\t++b[h][j];\n\t\t\t}\n\t\t\t++j;\n\t\t}\n\t\tif(c==0)\n\t\t{\n\t\t\tprintf(\"OK\\n\", p);\n\t\t\tstrcpy(s[h][j], p);\n\t\t\tb[h][j]=1;\n\t\t}\n\t}\n}"}
{"similarity_score": 0.998641304347826, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "31fd1f1656da2675e5edab35be2c2138", "bug_code_uid": "1b375d043c573ef61e9d3c0983056c2f", "src_uid": "4d5d20fd586ddbea2adeab104a6c2aec", "apr_id": "32d59fb535c198766144d8c3d1c8919c", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int cases;\n    scanf(\"%d\", &cases);\n    for(int z = 0; z < cases; z++) {\n        int len, k;\n        scanf(\"%d %d\", &len, &k);\n        int arr[len];\n        for(int i = 0;i < len; i++) {\n            scanf(\"%d\", &arr[i]);\n        }\n        if(k <= 2) {\n            if(len % 2 == 1) {\n                printf(\"%d\\n\", len / 2);\n            }\n            else {\n                printf(\"%d\\n\", (len / 2) - 1);\n            }\n        }\n        else {\n            int sum = 0; \n            for(int i = 1;i < len - 1 ;i++) {\n                if(arr[i] > arr[i - 1] + arr[i + 1]) {\n                    sum++;\n                }\n            }\n            printf(\"%d\\n\", sum);\n        }\n    }\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int cases;\n    scanf(\"%d\", &cases);\n    for(int z = 0; z < cases; z++) {\n        int len, k;\n        scanf(\"%d %d\", &len, &k);\n        int arr[len];\n        for(int i = 0;i < len; i++) {\n            scanf(\"%d\", &arr[i]);\n        }\n        if(k <= 1) {\n            if(len % 2 == 1) {\n                printf(\"%d\\n\", len / 2);\n            }\n            else {\n                printf(\"%d\\n\", (len / 2) - 1);\n            }\n        }\n        else {\n            int sum = 0; \n            for(int i = 1;i < len - 1 ;i++) {\n                if(arr[i] > arr[i - 1] + arr[i + 1]) {\n                    sum++;\n                }\n            }\n            printf(\"%d\\n\", sum);\n        }\n    }\n}"}
{"similarity_score": 0.5543237250554324, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "858eda8d08bafa0ae838c79dbe56bd41", "bug_code_uid": "0b55b8292ce7bd1dc4f41024a08a0b77", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "b8bc6b0acae01177e50d1503d50e2bc6", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,b,count1=0,a2,b2,a[11];\nscanf(\"%lld\",&n);\nmin=99999999;\nfor(i=1;i<=10;i++){\n    scanf(\"%lld\",&a[i]);\n    if(a[i]<=min){\n        min=a[i];\n        m=i;\n    }\n}\nif(n!=0){\nfor(i=0;i<n/min;i++){\n    printf(\"%lld\",m);\n}\n}else{\n    printf(\"-1\");\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \n long long int test,i,j,n,flag=0,o1=0,o2=0,b1,x,m,l,max,x1,y1,sum2,min,k,f[10]={0},r,o,sum,sum1=0,count[10]={0},a[100000]={0},flag1=0;\nchar b[1000000];\nscanf(\"%lld\",&n);\nsum1=0;\nflag=0;\nmin=99999999;\nfor(i=0;i<9;i++){\n    scanf(\"%lld\",&a[i]);\n  \n    if(a[i]<min){\n        min=a[i];\n        k=i;\n    }\n   \n}\nr=n/min;\nm=r;\nj=8;\nl=0;\nn=n%min;\nwhile(r--){\n    \n    while(j>k){\n          if(n+a[k]>=a[j]){\n              n-=a[j]-a[k];\n              break;\n          }else{\n              j--;\n          }\n    }\n    b[l++]=('1'+j);\n}\nif(m==0){\n    printf(\"-1\");\n}else{\n    b[m]='\\0';\n    printf(\"%s\\n\",b);\n}\nreturn 0;\n}"}
{"similarity_score": 0.5430752453653217, "equal_cnt": 28, "replace_cnt": 11, "delete_cnt": 8, "insert_cnt": 8, "fix_ops_cnt": 27, "lang": "GNU C11", "fix_code_uid": "88dab3715dab7ba9f998ab7ac024b4fe", "bug_code_uid": "59844d75d425fa6eb38766076b3a8d7b", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "94fd5e42b69abe2bd35a9fff44bbe237", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int i,n,x=0c=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(i=0;i<n;i++){\r\n            x=x^a[i];\r\n            c++;\r\n        }printf(\"%d\\n\",c-1);\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\nint test;\r\nscanf(\"%d\",&test);\r\n    while(test--){\r\n        int length,index;\r\n        scanf(\"%d\",&length);\r\n        int arr[length];\r\n      for(int i=0;i<length;i++)\r\n      {\r\n          scanf(\"%d\",&arr[i]);\r\n      }\r\n        for(int i=0;i<length;i++)\r\n        {\r\n            if(arr[i]!=arr[i+1])\r\n            {\r\n                index=i+1;\r\n                break;\r\n            }\r\n        }\r\n        if(index==1 && arr[1]==arr[2])\r\n        {\r\n            index--;\r\n        }\r\n        printf(\"%d\\n\",index+1);\r\n    }\r\n}"}
{"similarity_score": 0.6318252730109204, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cb1cf1666cb16eaed6d82738174882ee", "bug_code_uid": "d58afda2f8796f87d0340a747c453338", "src_uid": "cda949a8fb1f158f3c06109a2d33f084", "apr_id": "67d51f4d328a651566d3625ec12b9aef", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x1,x2,x3,x4;\n    scanf(\"%d%d%d%d\",&x1,&x2,&x3,&x4);\n    if(x1>x2 && x1>x3  && x1>x4)\n    {\n        printf(\"%d\",x1-x2);\n        printf(\"%d\",x1-x3);\n        printf(\"%d\",x1-x4);\n    }\n\n    else if(x2>x1 && x2>x3 &&  x2>x4)\n    {\n        printf(\"%d\",x2-x1);\n        printf(\"%d\",x2-x3);\n        printf(\"%d\",x2-x4);\n    }\n    else if(x3>x2 && x3>x1 && x3>x4)\n    {\n        printf(\"%d\",x3-x1);\n        printf(\"%d\",x3-x2);\n        printf(\"%d\",x3-x4);\n    }\n    else if(x4>x2 && x4>x3 && x4>x1)\n    {\n        printf(\"%d\",x4-x1);\n        printf(\"%d\",x4-x2);\n        printf(\"%d\",x4-x3);\n    }\n\n\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int x1,x2,x3,x4;\n    scanf(\"%d%d%d%d\",&x1,&x2,&x3,&x4);\n    if(x1>x2 && x1>x3  && x1>x4)\n    {\n        printf(\"%d\\n\",x1-x2);\n        printf(\"%d\\n\",x1-x3);\n        printf(\"%d\\n\",x1-x4);\n    }\n\n    else if(x2>x1 && x2>x3 &&  x2>x4)\n    {\n        printf(\"%d\\n\",x2-x1);\n        printf(\"%d\\n\",x2-x3);\n        printf(\"%d\\n\",x2-x4);\n    }\n    else if(x3>x2 && x3>x1 && x3>x4)\n    {\n        printf(\"%d\\n\",x3-x1);\n        printf(\"%d\\n\",x3-x2);\n        printf(\"%d\\n\",x3-x4);\n    }\n    else if(x4>x2 && x4>x3 && x4>x1)\n    {\n        printf(\"%d\\n\",x4-x1);\n        printf(\"%d\\n\",x4-x2);\n        printf(\"%d\\n\",x4-x3);\n    }\n\n\n\n\n\n\n}\n"}
{"similarity_score": 0.5484633569739953, "equal_cnt": 18, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "dcb409a6834a1361bea7bef939116945", "bug_code_uid": "069c046e4a079ef6e35bc15615d8c468", "src_uid": "c8531b2ab93993b2c3467595ad0679c5", "apr_id": "83e608c8c15d034600f8a6975475c8dc", "difficulty": 1100, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\", &n);\n\tlong long int res=n;\n\tfor (i = 0; i < n; i++) \n\t{\n\t\tlong long int a;\n\t\tscanf(\"%d\", &a);\n\t\tres+=(a-1)*(i+1);\n\t}\n\tprintf(\"%Ld\\n\", res);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint i,n;\nlong long a,r;\nint main() {\n\t  scanf(\"%d\",&n);\n\t    for (i=0; i<n; i++) {\n\t\t        scanf(\"%I64d\",&a);\n\t\t\t    r+=(a-1)*(i+1)+1;\n\t\t\t      }\n\t      printf(\"%I64d\\n\",r);\n\t        return 0;\n}\n"}
{"similarity_score": 0.8771610555050046, "equal_cnt": 12, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "ff1d46781207b38b15ba73fbe3d2fc66", "bug_code_uid": "96af6684e919523d8d34710ddb5b5981", "src_uid": "bbf2dbdea6dd3aa45250ab5a86833558", "apr_id": "dff1ab0ad47ab44fedce613cbdd03a3b", "difficulty": 1300, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint h[26];\nchar s[1004];\nint main()\n{\n    int k=0;\n    scanf(\"%s\",s);\n    int i,d,n;\n    n=strlen(s);\n    for(i=0;i<n;i++)\n    {\n        d=s[i]-'a';\n        h[d]=h[d]+1;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(h[i]%2==1)\n            k++;\n    }\n    if(k==0)\n       {\n           printf(\"First\");\n       }\n    else if(k==1)\n       {\n        printf(\"First\");\n       }\n    else if(k%2==0)\n        {printf(\"Second\");\n        }\n    else\n        {printf(\"First\");\n        }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint h[30];\nchar s[1004];\nint main()\n{\n    int k=0;\n    scanf(\"%s\",s);\n    int i,d,n;\n    n=strlen(s);\n    for(i=0;i<n;i++)\n    {\n        d=s[i]-'a';\n        h[d]=h[d]+1;\n    }\n    for(i=0;i<26;i++)\n    {\n        if(h[i]%2==1)\n            k++;\n    }\n     if(k==0)\n       {\n           printf(\"First\");\n           return 0;\n       }\n     if(k==1)\n       {\n        printf(\"First\");\n        return 0;\n       }\n     if(k%2==0)\n        {\n            printf(\"Second\");\n            return 0;\n        }\n    printf(\"First\");\n            return 0;\n\n}\n"}
{"similarity_score": 0.7693290734824281, "equal_cnt": 13, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "753236eef25cd36b62578536d72db300", "bug_code_uid": "9dfc264d24e20c98583c135eb4a7aa69", "src_uid": "ac12faea4962613651afdc0b29537ef5", "apr_id": "1fa8d473ceb77d01028fa7bb69e595ea", "difficulty": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#define max(a,b) (a>b)?a:b\r\nlong long S[5003];\r\nlong long dlc[5003];\r\n\r\nint main(){\r\n    int t;scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long pass = 0;\r\n        int n;scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%I64d\",&S[i]);\r\n            dlc[i] = 0;\r\n        }\r\n        for(int pos = 0;pos < n; pos++){\r\n            if(S[pos] != 1) {\r\n                for(int i = S[pos];i>1;i--){\r\n                    if(pos+i < n)dlc[pos+i]++;\r\n                }\r\n                pass += (max(S[pos] - dlc[pos],1)) - 1;\r\n            }\r\n        }\r\n        printf(\"%I64d\\n\",pass);\r\n    }\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\n#define max(a,b) (a>b)?a:b\r\n#define min(a,b) (a<b)?a:b\r\nlong long S[5003];\r\nlong long dlc[5003];\r\n\r\nint main(){\r\n    int t;scanf(\"%d\",&t);\r\n    while(t--){\r\n        long long pass = 0;\r\n        long long dlcs = 0;\r\n        int n;scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%I64d\",&S[i]);\r\n            dlc[i] = 0;\r\n        }\r\n        for(int pos = 0;pos < n; pos++){\r\n            dlcs += dlc[pos];\r\n            if(S[pos] != 1) {\r\n                for(int i = (min(pos + S[pos],n));i>pos+1;i--){\r\n                    dlc[i]++;\r\n                }\r\n\r\n                if (dlcs >= (S[pos] - 1)) {\r\n                    dlcs -= (S[pos] - 1);\r\n                }\r\n                else{\r\n\r\n                    pass += (S[pos] - 1) - dlcs;\r\n                    dlcs = 0;\r\n\r\n                }\r\n                \r\n            }\r\n        }\r\n        printf(\"%I64d\\n\",pass);\r\n    }\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9715719063545151, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "d39f55de36b7b7bb411c80b74d63a9c1", "bug_code_uid": "aed9b1fe5926a37c7a3bcbde2964b3e4", "src_uid": "0ea79b2a7ddf3d4da9c7a348e61933a7", "apr_id": "2ce9a43594dc99ec5621bb57202c5bfb", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define CITEM 5\n#define MONEY 15\nint arry[100];\nint minnum = -1;\nint main()\n{\n    int N,temp,sum =0;;\n    scanf(\"%d\",&N);\n    for(int i=0;i<N;i++)\n    {\n        scanf(\"%d\",&arry[i]);\n    }\n    for(int j=0;j<N;j++)\n    {\n        sum =0;\n        for(int user=0;user<arry[j];user++)\n        {\n            scanf(\"%d\",&temp);\n            sum+=temp*CITEM;\n            sum += MONEY;\n        }\n        if(minnum ==-1)\n        {\n            minnum = sum;\n        }\n        if(sum<minnum)\n        {\n            minnum = sum;\n        }\n    }\n    printf(\"%d\\n\",minnum);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#define CITEM 5\n#define MONEY 15\nint arry[100];\nint minnum = -1;\nint main()\n{\n    int N,temp,sum =0;;\n    scanf(\"%d\",&N);\n    int i,j,user;\n    for( i=0;i<N;i++)\n    {\n        scanf(\"%d\",&arry[i]);\n    }\n    \n    for(j=0;j<N;j++)\n    {\n        sum =0;\n        for(user=0;user<arry[j];user++)\n        {\n            scanf(\"%d\",&temp);\n            sum+=temp*CITEM;\n            sum += MONEY;\n        }\n        if(minnum ==-1)\n        {\n            minnum = sum;\n        }\n        if(sum<minnum)\n        {\n            minnum = sum;\n        }\n    }\n    printf(\"%d\\n\",minnum);\n    return 0;\n}"}
{"similarity_score": 0.9983974358974359, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0054910a00427d3dee359f7847e85a72", "bug_code_uid": "402154c6f4df636db04d7a32874500bc", "src_uid": "2b55012c899645bac8d293e85e73148f", "apr_id": "7c23c85fcf3df56f8f0044b8987222c8", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int n,sum=0,k;\n    int a[1000];\n    scanf(\"%d\",&n);\n    for (int i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    if (n==0||n==1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else if (n==2&&a[0]==a[1])\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    for (int i=0; i<n; i++)\n    {\n        if (sum-a[i]!=a[i])\n        {\n            printf(\"%d\\n%d\",1,i);\n            return 0;\n        }\n    }\n    for (int i=0; i<n; i++)\n    {\n        if (i==k)\n            continue;\n        printf(\"%d \",a[i]);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int n,sum=0,k;\n    int a[1000];\n    scanf(\"%d\",&n);\n    for (int i=0; i<n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    if (n==0||n==1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else if (n==2&&a[0]==a[1])\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    for (int i=0; i<n; i++)\n    {\n        if (sum-a[i]!=a[i])\n        {\n            printf(\"%d\\n%d\",1,i+1);\n            return 0;\n        }\n    }\n    for (int i=0; i<n; i++)\n    {\n        if (i==k)\n            continue;\n        printf(\"%d \",a[i]);\n    }\n}\n"}
{"similarity_score": 0.9802631578947368, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e5d5323b7c2f2c389d00924af4a6df77", "bug_code_uid": "d1296b30319f02942a854e0e9b526ffc", "src_uid": "159b9c743d6d8792548645b9f7be2753", "apr_id": "67a2431eb1d119a21b16d4e3433785e8", "difficulty": 800, "tags": ["brute force", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n;\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n\r\n        int i, a, c = 0, big = -1000000001;\r\n        scanf(\"%d\", &n);\r\n\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a);\r\n            c = c + a;\r\n            if (a > big)\r\n                big = a;\r\n        }\r\n        double b = (double)big + (double)(c - big) / (double)(n - 1);\r\n\r\n        printf(\"%.9f\\n\", b);\r\n    }\r\n}", "fixed": "\r\n#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n;\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n\r\n        long long int i, a, c = 0, big = -1000000001;\r\n        scanf(\"%d\", &n);\r\n\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%lld\", &a);\r\n            c = c + a;\r\n            if (a > big)\r\n                big = a;\r\n        }\r\n        long double b = (double)big + (double)(c - big) / (double)(n - 1);\r\n\r\n        printf(\"%.9Lf\\n\", b);\r\n    }\r\n}"}
{"similarity_score": 0.9985272459499264, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4b63002c8783732410feb104fe845728", "bug_code_uid": "b1201bf4080614bfecb51b33bea77fc0", "src_uid": "fc37ef81bb36f3ac07ce2c4c3ec10d98", "apr_id": "a47f770724139da0c7f8fce1595e2ba9", "difficulty": 1100, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int d,h,v,e,k;\n  scanf(\"%d %d %d %d\",&d,&h,&v,&e);\n  double t,r,z,height;\n  double pi=2*acos(0.0);\n  r=(d*1.0)/2.0;\n  z = pi*(r*r);\n height = (v*1.0)/z;\n if(e>height)\n {\n     printf(\"NO\");\n }\n else{\n     height = height - (e*1.0);\n     t=(h*1.0)/height;\n     printf(\"YES\\n\");\n     printf(\"%.12lf\",t);\n }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int d,h,v,e,k;\n  scanf(\"%d %d %d %d\",&d,&h,&v,&e);\n  double t,r,z,height;\n  double pi=2*acos(0.0);\n  r=(d*1.0)/2.0;\n  z = pi*(r*r);\n height = (v*1.0)/z;\n if(e>height)\n {\n     printf(\"NO\");\n }\n else{\n     height = height - (e*1.0);\n     t=(h*1.0)/height;\n     printf(\"YES\\n\");\n     printf(\"%.12f\",t);\n }\n\n}\n"}
{"similarity_score": 0.41161825726141077, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "2ca83281f691ca4b2cf52dd42aeb5ec7", "bug_code_uid": "bc768aba67c030398cea9de1a7d11b97", "src_uid": "faae9c0868b92b2355947c9adcaefb43", "apr_id": "c8179882a5beba04c226298ac1c3e260", "difficulty": 1100, "tags": ["binary search", "implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint n,s,k,m;\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tint a[110]={0};\n\t\tscanf(\"%d%d%d\",&n,&s,&k);\n\t\tint o;\n\t\tfor(o=0;o<k;o++)\n\t\t{\n\t\t\tscanf(\"%d\",&m);\n\t\t\tm=abs(m-s);\n\t\t\ta[m]++;\n\t\t}\n\t\tif(a[0]==0)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(o=1;o<n;o++)\n\t\t\t{\n\t\t\t\tif((o<=abs(n-s))&&o<=(s-1))\n\t\t\t\t{\n\t\t\t\t\tif(a[o]<=1)break;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(a[o]==0)break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",o);\n\t\t}\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint n,s,k;\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&n,&s,&k);\n\t\tint o;\n\t\tint m[1001]={0};\n\t\tfor(o=0;o<k;o++)\n\t\t{\n\t\t\tscanf(\"%d\",&m[o]);\n\t\t\tm[o]=abs(m[o]-s);\n\t\t}\n\t\tfor (o=0;o<k-1;o++)\n\t\t{\n\t\tfor (int j=0;j<k-o-1;j++)\n\t\tif (m[j]>m[j+1])\n\t\t{\n\t\t\tint b;\n\t\t\tb=m[j+1];\n\t\t\tm[j+1]=m[j];\n\t\t\tm[j]=b;\n\t\t}\n\t\t}\n\t\tint a=0;\n\t\t\tfor(o=0;o<k;o++)\n\t\t\t{\n\t\t\t\tif(m[o]==0)\n\t\t\t\t{\n\t\t\t\t\ta=1;\n\t\t\t\t\tcontinue;\n\t\t\t\t} \n\t\t\t\telse if((m[o]<=abs(n-s))&&m[o]<=s-1)\n\t\t\t\t{\n\t\t\t\t\tif(m[o]=m[o+1])\n\t\t\t\t\t{\n\t\t\t\t\t\tif(a<m[o])break;\n\t\t\t\t\t\telse \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ta=m[o]+1;o++;\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\tif(a<m[o])break;\n\t\t\t\telse a=m[o]+1;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",a);\n\t}\n}\n"}
{"similarity_score": 0.9934296977660972, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d1d8f1db5e2be8aae5a845dfe5c75503", "bug_code_uid": "af84c02a71b56633a13829975f29194f", "src_uid": "59d5e5ed2bc4b316e950e2a4dbc99d68", "apr_id": "2ad444a28d9b8da60d59d2684af8e3a5", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <malloc.h>\nint isprime(int n){\n    int i=2;\n    for (i=2;i<(n/2)+1;i++){\n        if (n%i==0){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nint main(){\n    int n,a=3,b=3;\n    scanf(\"%d\",&n);\n    a+=n;\n    while (isprime(a) && isprime (b)){\n        a++;\n        b++;\n\n    }\n    printf(\"%d %d\",a,b);\n\n\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <malloc.h>\nint isprime(int n){\n    int i=2;\n    for (i=2;i<(n/2)+1;i++){\n        if (n%i==0){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nint main(){\n    int n,a=3,b=3;\n    scanf(\"%d\",&n);\n    a+=n;\n    while (isprime(a) || isprime(b)){\n        a++;\n        b++;\n\n    }\n    printf(\"%d %d\",a,b);\n\n\n    }\n"}
{"similarity_score": 0.8333333333333334, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "2fdd8845588e416a65ad9943369d6f2d", "bug_code_uid": "14667cd691d2c25d359e433693fb11b2", "src_uid": "8e423e4bec2d113612a4dc445c4b86a9", "apr_id": "56ba0a0482d3e0928632225ce212f846", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nmain()\n{\n\t int n,i,day=1;\n\t long int t;\n\tlong int result=0,diff=0;\n\t\n\tint a[100];\n\t\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&t);\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tdiff=86400-a[i];\n\t\tresult=result+diff;\n\t\tday=day+i;\n\t\tif(t<=result)\n\t\tbreak;\n\t}\n\tprintf(\"%d\",day);\n}\n", "fixed": "#include<stdio.h>\n\nmain()\n{\n\t int n,i,day=0;\n\t long int t;\n\tlong int result=0,diff=0;\n\t\n\tint a[100];\n\t\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&t);\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tdiff=86400-a[i];\n\t\tresult=result+diff;\n\t\tday++;\n\t\tif(t<=result)\n\t\tbreak;\n\t}\n\tprintf(\"%d\",day);\n}\n"}
{"similarity_score": 0.9492798998121478, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e1f363fb8546de33d77da85ff1e8d57e", "bug_code_uid": "1cd710237b184742be7b0a83b3afa18c", "src_uid": "69edc72ec29d4dd56751b281085c3591", "apr_id": "1a0522a630dfdfa8d839e29b70a8d459", "difficulty": 1200, "tags": ["implementation", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\ntypedef struct vertex{\n\tint cnt;\n\tint parent;\n\tint leaf;\n}vertex;\nint main(void) {\n  int n,i,father,grandFather;\n\tvertex *verteces;\n\tscanf(\"%d\",&n);\n\tverteces = (vertex*)calloc(n,sizeof(vertex));\n\tfor(i=0;i<n;i++){\n\t\tverteces[i].cnt=0;\n\t\tverteces[i].parent=0;\n\t\tverteces[i].leaf=1;\n\t}\n\tfor(i=1;i<n;i++){\n\t\tscanf(\"%d\",&verteces[i].parent);\n\t\tfather = verteces[i].parent-1;\n\t\tgrandFather = verteces[father].parent-1;\n\t\tif(verteces[father].leaf==1)\n\t\t\tverteces[father].leaf=0;\n\t\tverteces[father].cnt++;\n\t\tif(verteces[i].parent!=1 && verteces[father].cnt==1)\n\t\t\tverteces[grandFather].cnt--;\n\t}\n\tfor(i=0;i<n;i++)\n\t\tif(verteces[i].leaf==0 && verteces[i].cnt<3)\n\t\t\tbreak;\n\tif(i==n)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include<stdlib.h>\ntypedef struct vertex{\n\tint cnt;\n\tint parent;\n\tint leaf;\n\tint done;\n}vertex;\nint main(void) {\n  int n,i,father,grandFather;\n\tvertex *verteces;\n\tscanf(\"%d\",&n);\n\tverteces = (vertex*)calloc(n,sizeof(vertex));\n\tfor(i=0;i<n;i++){\n\t\tverteces[i].cnt=0;\n\t\tverteces[i].parent=0;\n\t\tverteces[i].leaf=1;\n\t\tverteces[i].done=0;\n\t}\n\tfor(i=1;i<n;i++){\n\t\tscanf(\"%d\",&verteces[i].parent);\n\t\tfather = verteces[i].parent-1;\n\t\tgrandFather = verteces[father].parent-1;\n\t\tif(verteces[father].leaf==1)\n\t\t\tverteces[father].leaf=0;\n\t\tverteces[father].cnt++;\n\t\tif(verteces[i].parent!=1 && verteces[father].done==0){\n\t\t\tverteces[grandFather].cnt--;\n\t\t\tverteces[father].done=1;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t\tif(verteces[i].leaf==0 && verteces[i].cnt<3)\n\t\t\tbreak;\n\tif(i==n)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n  return 0;\n}"}
{"similarity_score": 0.8940886699507389, "equal_cnt": 12, "replace_cnt": 2, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "7b1a229591c7e861c1c47be6a82d56be", "bug_code_uid": "b3a51507ca3188e1b06f9831184404da", "src_uid": "96b6a96ded46bddb78b118d6d3a9d049", "apr_id": "8899bbfd43a314e503e83453220d9192", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n  int t, n, m, first_r_lig, first_r_col, left_most_r_col;\n  char *line;\n  scanf(\"%d\\n\", &t);\n\n  for (int it = 0; it < t; ++it) {\n    scanf(\"%d %d\\n\", &n, &m);\n    line = (char *)malloc(m * sizeof(char));\n    first_r_lig = -1;\n    left_most_r_col = m;\n\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%s\\n\", line);\n\n      for (int j = 0; j < m; ++j) {\n        if (line[j] == 'E')\n          continue;\n\n        if (first_r_lig == -1) {\n          first_r_lig = i;\n          first_r_col = j;\n        }\n\n        if (j < left_most_r_col) {\n          left_most_r_col = j;\n        }\n\n        if (left_most_r_col == 0)\n          break;\n      }\n\n      if (left_most_r_col == 0)\n        break;\n    }\n\n    free(line);\n\n    printf(first_r_col == left_most_r_col ? \"YES\\n\" : \"NO\\n\");\n  }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n  int t, n, m, first_r_col, left_most_r_col;\n  char *line;\n  scanf(\"%d\", &t);\n\n  for (int it = 0; it < t; ++it) {\n    int ret_code = scanf(\"%d %d\", &n, &m);\n    line = (char *)malloc(m * sizeof(char));\n    first_r_col = -1;\n    left_most_r_col = m;\n\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%s\", line);\n      if (left_most_r_col == 0)\n        continue;\n\n      for (int j = 0; j < m; ++j) {\n        if (line[j] == 'E')\n          continue;\n\n        if (first_r_col == -1) {\n          first_r_col = j;\n        }\n\n        if (j < left_most_r_col) {\n          left_most_r_col = j;\n        }\n\n        if (left_most_r_col == 0)\n          break;\n      }\n    }\n\n    free(line);\n    printf(first_r_col == left_most_r_col ? \"YES\\n\" : \"NO\\n\");\n  }\n}\n"}
{"similarity_score": 0.9303534303534303, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c0d76fb8c9b10ee1bb2e78286c927306", "bug_code_uid": "bc40dd85d2496f8e1cf41bc8dc5b4c05", "src_uid": "97697eba87bd21ae5c979a5ea7a81cb7", "apr_id": "d00d25aa58498ee3105b7804ef0aa6f4", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// Coupons and Discounts\n\n#include<stdio.h>\nint main(void)\n{\n\tint n,i,arr[200001],dis,coup,count;\n\tscanf(\"%d\",&n);\n\n\tfor(i = 0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\t\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tif((i>=0)&&(i<=(n-2)))\n\t\t{\n\t\t\tif((arr[i]%2!=0)&&(arr[i+1]%2!=0))\n\t\t\t{\n\t\t\t\tarr[i] = 0;\n\t\t\t\tarr[i+1] = 0;\n\t\t\t}\n\t\t\telse if((arr[i]%2==0)&&(arr[i+1]%2==0))\n\t\t\t{\n\t\t\t\tarr[i] = 0;\n\t\t\t\tarr[i+1] = 0;\t\n\t\t\t}\n\t\t\telse if((arr[i]%2!=0)&&(arr[i+1]%2==0))\n\t\t\t{\n\t\t\t\tif(arr[i]>arr[i+1])\n\t\t\t\t{\n\t\t\t\t\tarr[i] = arr[i]-arr[i+1];\n\t\t\t\t\tarr[i+1] = 0;\n\t\t\t\t}\n\t\t\t\telse if(arr[i]<arr[i+1])\n\t\t\t\t{\n\t\t\t\t\tarr[i+1] =  arr[i+1]-arr[i];\n\t\t\t\t\tarr[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if((arr[i]%2==0)&&(arr[i+1]%2!=0))\n\t\t\t{\n\t\t\t\tarr[i] = 0;\n\t\t\t}\n\t\t}\n\t\telse if(i==(n-1))\n\t\t{\n\t\t\tif(arr[i]%2==0)\n\t\t\t\tarr[i] = 0;\n\t\t\telse\n\t\t\t\tarr[i] = 1;\n\t\t}\n\t}\n\n\tcount = 0;\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tif(arr[i]==0)\n\t\t\tcount+=1;\n\t}\n\n\tif(count<n)\n\t\tprintf(\"NO\\n\");\n\telse if(count==n)\n\t\tprintf(\"YES\\n\");\n\n\treturn 0;\n}", "fixed": "// Coupons and Discounts\n\n#include<stdio.h>\nint main(void)\n{\n\tint n,i,arr[200001],dis,coup,count;\n\tscanf(\"%d\",&n);\n\n\tfor(i = 0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\t\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tif((i>=0)&&(i<=(n-2)))\n\t\t{\n\t\t\tif((arr[i]%2!=0)&&(arr[i+1]%2!=0))\n\t\t\t{\n\t\t\t\tarr[i] = 0;\n\t\t\t\tarr[i+1] = 0;\n\t\t\t}\n\t\t\telse if((arr[i]%2==0)&&(arr[i+1]%2==0))\n\t\t\t{\n\t\t\t\tarr[i] = 0;\n\t\t\t\tarr[i+1] = 0;\t\n\t\t\t}\n\t\t\telse if((arr[i]%2!=0)&&(arr[i+1]%2==0))\n\t\t\t{\n\t\t\t\tif(arr[i]>arr[i+1])\n\t\t\t\t{\n\t\t\t\t\tarr[i] = 1;\n\t\t\t\t\tif((arr[i+1]%2==0)&&(arr[i+1]!=0))\n\t\t\t\t\t{\n\t\t\t\t\t\tarr[i] = 0;\n\t\t\t\t\t\tarr[i+1] = arr[i+1]-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(arr[i]<arr[i+1])\n\t\t\t\t{\n\t\t\t\t\tarr[i+1] =  arr[i+1]-arr[i];\n\t\t\t\t\tarr[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if((arr[i]%2==0)&&(arr[i+1]%2!=0))\n\t\t\t{\n\t\t\t\tarr[i] = 0;\n\t\t\t}\n\t\t}\n\t\telse if(i==(n-1))\n\t\t{\n\t\t\tif(arr[i]%2==0)\n\t\t\t\tarr[i] = 0;\n\t\t\telse\n\t\t\t\tarr[i] = 1;\n\t\t}\n\t}\n\n\tcount = 0;\n\tfor(i = 0;i<n;i++)\n\t{\n\t\tif(arr[i]==0)\n\t\t\tcount+=1;\n\t}\n\n\tif(count<n)\n\t\tprintf(\"NO\\n\");\n\telse if(count==n)\n\t\tprintf(\"YES\\n\");\n\n\treturn 0;\n}"}
{"similarity_score": 0.5275288092189501, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c834f2e1b77bd0c51eb534ecfa0a4c9d", "bug_code_uid": "a016191162f89ec9f806ecaee40ed28f", "src_uid": "12abfbe7118868a0b1237489b5c92760", "apr_id": "ddf1668cd2b41d92871371b1c3b4d19a", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//(\u261e\uff9f\u30ee\uff9f)\u261eNOTSOAWESOME\nmain(){\n    long long int n,i;\n    scanf(\"%lld\",&n);\n    long long int a[n],b[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        b[a[i]-1]=i;\n    }\n    for(i=n-2;i>=0;i--)\n    {\n        if(abs(b[n-1]-b[i])>(n-1-i))\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    printf(\"YES\");\n}", "fixed": "//(\u261e\uff9f\u30ee\uff9f)\u261eNOTSOAWESOME\nmain(){\n    long long int n,i,s=1,j;\n    scanf(\"%lld\",&n);\n    long long int a[n],b[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        b[a[i]-1]=i;\n    }\n    i=b[n-1]-1;\n    j=b[n-1]+1;\n    while(1)\n    {\n    if(i<0)i=0;\n    if(j>n-1)j=n-1;\n    if(a[i]==(n-s)){i--;s++;continue;}\n    if(a[j]==(n-s)){j++;s++;continue;}\n    if((n-s)==0){printf(\"YES\");break;}\n    else {printf(\"NO\");break;}\n    }\n}"}
{"similarity_score": 0.29210134128166915, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "18b0bbf4cd81b138bbd04f38d4d09281", "bug_code_uid": "309c85e2259658a5e6c3d9ee53193c25", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "145b19a1572982872ce3d2d2b4f08271", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],i,q,min,max,j,var,temp,mid;\n\tfor(i=0;i<n;i++) \n\t{\n\t\tscanf(\"%d\",a+i);\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\ttemp = a[i];\n\t\t\t\ta[i] = a[j];\n\t\t\t\ta[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tscanf(\"%d\",&q);\n\tint m[q],ans[q];\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d\",m+i);\n\t\tmin = 0, max = n-1, mid = (n-1)/2;\n\t\tif(m[i]<a[min]) ans[i] = 0;\n\t\telse if(m[i]>=a[max]) ans[i] = n;\n\t\telse\n\t\t{\n\t\t\twhile(max-min>1)\n\t\t\t{\n\t\t\t\tif(m[i]>=a[mid])\n\t\t\t\t{\n\t\t\t\t\tmin = mid;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tmax = mid;\n\t\t\t\t}\n\t\t\t\tmid = (min+max)/2;\n\t\t\t}\n\t\t\tans[i] = mid+1;\n\t\t}\n\t}\n\tfor(i=0;i<q;i++) printf(\"%d\\n\",ans[i]);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],i,q,min,max,j,var,temp,mid;\n\tfor(i=0;i<n;i++) \n\t{\n\t\tscanf(\"%d\",a+i);\n\t}\n\tqsort(a,n,sizeof(int),cmpfunc);\n\tscanf(\"%d\",&q);\n\tint m[q],ans[q];\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d\",m+i);\n\t\tmin = 0, max = n-1, mid = (n-1)/2;\n\t\tif(m[i]<a[min]) ans[i] = 0;\n\t\telse if(m[i]>=a[max]) ans[i] = n;\n\t\telse\n\t\t{\n\t\t\twhile(max-min>1)\n\t\t\t{\n\t\t\t\tif(m[i]>=a[mid])\n\t\t\t\t{\n\t\t\t\t\tmin = mid;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tmax = mid;\n\t\t\t\t}\n\t\t\t\tmid = (min+max)/2;\n\t\t\t}\n\t\t\tans[i] = mid+1;\n\t\t}\n\t}\n\tfor(i=0;i<q;i++) printf(\"%d\\n\",ans[i]);\n}"}
{"similarity_score": 0.6330731014904187, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "dac5f7132a835f83ddbe7151098b636b", "bug_code_uid": "137c28287ca4bff31a1e01e2e6349302", "src_uid": "2e837d3afc48177516578a950e957586", "apr_id": "d06ded87c7d1f456f183840008b613ce", "difficulty": 1200, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int a ,p,f, c, i , j ,t ,n,k ;\r\n    scanf(\"%d\",&c);\r\n    for(i=0;i<c;i++)\r\n    {\r\n        scanf(\"%d %d\",&n,&k);\r\n        if(n%2==0)\r\n        {\r\n            t=k%n;\r\n        }\r\n        /*else if(n==3)\r\n        {\r\n            p=(n/2) +1;\r\n            t=k%p;\r\n            f=(n-t)/p;\r\n            for(j=0;j<f;j++)\r\n            {\r\n                t=(t+p)%n;\r\n            }\r\n\r\n        }*/\r\n        else if(n==3)\r\n        {\r\n            t=2*k-1;\r\n            t=t%3;\r\n        }\r\n        else\r\n        {\r\n            p=(n/2);\r\n            t=k%p;\r\n            f=k/p;\r\n            t=f*(p+1)+t;\r\n            t=t%n;\r\n        }\r\n        if(t==0)t=n;\r\n\r\n        printf(\"%d\\n\",t);\r\n\r\n\r\n     }\r\n      return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int a ,p,f, c, i , j ,t ,n,k ;\r\n    scanf(\"%d\",&c);\r\n    for(i=0;i<c;i++)\r\n    {\r\n        scanf(\"%d %d\",&n,&k);\r\n        p=n/2;\r\n        if(n%2==0)\r\n        {\r\n            t=k%n;\r\n        }\r\n\r\n        else if(n==3)\r\n        {\r\n            t=2*k-1;\r\n            t=t%3;\r\n        }\r\n\r\n        else if(k%p==0)\r\n        {\r\n            t=(k%p)+p;\r\n            f=(k/p)-1;\r\n            t=f*(p+1)+t;\r\n            t=t%n;\r\n        }\r\n        else\r\n        {\r\n            t=(k%p);\r\n            f=(k/p);\r\n            t=f*(p+1)+t;\r\n            t=t%n;\r\n        }\r\n        if(t==0)t=n;\r\n\r\n        printf(\"%d\\n\",t);\r\n\r\n\r\n     }\r\n      return 0;\r\n}\r\n"}
{"similarity_score": 0.6443701226309922, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "16be2c069bcd033f577f21a741186ffe", "bug_code_uid": "83186fc06da8f14487ffb3343080aeb6", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "90e6f1bc43d2681a26412e641e04ec25", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int x,y,a,b,s2,s1;\n    int s,p,n;\n    scanf(\"%d\",&n);\n    while(n>0)\n    {\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n        s2=y-x;\n        s1=0;\n        for(s=1;;s++)\n        {\n          s1+=a;\n          s2-=b;\n          p=s2-s1;\n          if(p==0)\n          {\n              printf(\"%d\\n\",s);\n              break;\n          }\n          else if(p<0)\n          {\n              printf(\"-1\\n\");\n              break;\n          }\n        }\n        n--;\n    }\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int x,y,a,b;\n    int n,l;\n    scanf(\"%d\",&n);\n    while(n>0)\n    {\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n        l=(y-x)%(a+b);\n        if(l==0)\n        {\n            l=(y-x)/(a+b);\n            printf(\"%d\\n\",l);\n        }\n        else\n        {\n            printf(\"-1\\n\");\n        }\n        n--;\n    }\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.6094570928196147, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "9d4a8d6fd7f399cc295b57288ee0e8f5", "bug_code_uid": "93ee567e250452f9e8dd6ebbab67ae7c", "src_uid": "636a30a2b0038ee1731325a5fc2df73a", "apr_id": "94eb21558ce4ae1a3ecd03d1a6ea7a6a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n#include<stdio.h>\nint max(int n, int m);\nint main() {\n    int m[5];\n    scanf(\"%d%d%d%d%d\", &m[0], &m[1], &m[2], &m[3], &m[4]);\n    int w[5];\n    scanf(\"%d%d%d%d%d\", &w[0], &w[1], &w[2], &w[3], &w[4]);\n    int hs, hu;\n    scanf(\"%d%d\", &hs, &hu);\n    int sum = 0, i;\n    for (i = 0; i < 5; i++)\n        sum += max((i + 1) * 500 * 0.3, ((i + 1) * 500) - (((i + 1) * 500)*m[i]) / 250 - 50 * w[i]);\n    sum += hs * 100;\n    sum -= hu * 50;\n    printf(\"%d\\n\", sum);\n    return 0;\n}\nint max(int n, int m) {\n    if (m >= n)\n        return m;\n    else\n        return n;\n}", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include<stdio.h>\nint max(int n, int m);\nint main() {\n\tint m[5];\n\tscanf(\"%d%d%d%d%d\", &m[0], &m[1], &m[2], &m[3], &m[4]);\n\tint w[5];\n\tscanf(\"%d%d%d%d%d\", &w[0], &w[1], &w[2], &w[3], &w[4]);\n\tint hs, hu;\n\tscanf(\"%d%d\", &hs, &hu);\n\tint sum = 0, i;\n\tfor (i = 0; i < 5; i++) {\n\t\tint j = i + 1;\n\t\tint temp = j * 500;\n\t\tsum += max(j * 150, temp - temp / 250 * m[i] - 50 * w[i]);\n\t}\n\tsum += hs * 100;\n\tsum -= hu * 50;\n\tprintf(\"%d\\n\", sum);\n\treturn 0;\n}\nint max(int n, int m) {\n\tif (m >= n)\n\t\treturn m;\n\telse\n\t\treturn n;\n}"}
{"similarity_score": 0.8951351351351351, "equal_cnt": 18, "replace_cnt": 4, "delete_cnt": 7, "insert_cnt": 7, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "4e834a89b0efd9d4e7ef5f97c19dc621", "bug_code_uid": "443655190296bb85740926fce585b16f", "src_uid": "d78cd4a06fb566d58275e92f976166f2", "apr_id": "1205fa59e5a999570444b88da36b77f1", "difficulty": 1100, "tags": ["constructive algorithms", "binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n    int test,n,flag=0,min=-1;\n\n    scanf(\"%d\",&test);\n    while(test--)\n    {\n        scanf(\"%d\",&n);\n\n        for (int i = 1; i < n; i++)\n        {\n            int eq = (n - 1);\n                eq = eq / i;\n                eq += (i - 1);\n                if (eq < min|| min==-1) {\n                    min = eq;\n                }\n        }\n        min= min>0 ? min:0;\n        printf(\"%d\\n\", min);\n        min=-1;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(void)\n{\n    int test,flag=0;\n    long min=-1,n;\n\n    scanf(\"%d\",&test);\n    while(test--)\n    {\n        scanf(\" %ld\",&n);\n        for (int i = 1; i < 65000; i++)\n        {\n            int eq = (n - 1);\n            eq = eq / i;\n            eq += (i - 1);\n            if (eq < min|| min==-1) {\n                min = eq;\n            }\n        }\n        min= min > 0? min : 0;\n        printf(\"%ld\\n\", min);\n        min=-1;\n    }\n\n}"}
{"similarity_score": 0.9773755656108597, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1809c8b7c13697e2a093d0b0d6efe15b", "bug_code_uid": "acaa4159011fa5d271ba21e05137bac5", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "d91ce1442795c38be100a3284f67e974", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int m,n,count=0;\n    scanf(\"%d %d\",&m,&n);\n    int p[2*n];\n    for(int i=0;i<m;i++)\n    {\n        for(int j=0;j<2*n;j++)\n        {\n        scanf(\"%d\",&p[i]);\n        }\n    }\n    for(int i=0;i<m;i++)\n    {\n      for(int j=0;j<2*n-1;j++)  \n      {\n          if(j%2==0)\n          {\n              if(j==1||j+1==1)\n              count++;\n          }\n      }\n    }\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int m,n,count=0;\n    scanf(\"%d %d\",&m,&n);\n    int p[m][2*n];\n    for(int i=0;i<m;i++)\n    {\n        for(int j=0;j<2*n;j++)\n        {\n        scanf(\"%d\",&p[i][j]);\n        }\n    }\n    for(int i=0;i<m;i++)\n    {\n      for(int j=0;j<2*n-1;j++)  \n      {\n          if(j%2==0)\n          {\n              if(p[i][j]==1||p[i][j+1]==1)\n              count++;\n          }\n      }\n    }\n    printf(\"%d\",count);\n    return 0;\n}"}
{"similarity_score": 0.865, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "fedae4b9baf9097d617377cd90950c35", "bug_code_uid": "0ad43ef67e083838072a06dfaa2a1181", "src_uid": "0924971933265f4be34710149a541087", "apr_id": "02084b147c64d378d9d5db36f69afbe6", "difficulty": 1300, "tags": ["binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<time.h>\nint main(){\n\tint t,s,a[100001],i,n,c=0,max,start,end;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tmax=0;\n\t\tc=0;\n\t\tscanf(\"%d%d\",&n,&s);\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfor(i=0;i<n;i++){\n\t\t\ts-=a[i];\n\t\t\tif(max<a[i]){\n\t\t\t\tmax=a[i];\n\t\t\t\tc=i;\n\t\t\t}\n\t\t\tif(s<0)\n\t\t\t\tbreak;\n\n\t\t}\n\t\tstart=clock();\n\t\tif(i==n)\n\t\t\tprintf(\"0\\n\");\n\t\telse printf(\"%d\\n\",c+1);\n\t\tend=clock();\n\t\tprintf(\"time : %d\\n\",end-start);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint t,s,a[100001],i,n,c=0,max,start,end;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tmax=0;\n\t\tc=0;\n\t\tscanf(\"%d%d\",&n,&s);\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfor(i=0;i<n;i++){\n\t\t\ts-=a[i];\n\t\t\tif(max<a[i]){\n\t\t\t\tmax=a[i];\n\t\t\t\tc=i;\n\t\t\t}\n\t\t\tif(s<0)\n\t\t\t\tbreak;\n\n\t\t}\n\t\tif(i==n)\n\t\t\tprintf(\"0\\n\");\n\t\telse printf(\"%d\\n\",c+1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.27521008403361347, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "494a3fc861e8023c5b85848fe05e023a", "bug_code_uid": "30d0b21c2efde68b48c11d9f8dce6cdc", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "7c2a0931ceeec4e7d315f615c70ab5a3", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "int main() {\n    int i,j,n;\n    scanf(\"%d\",&n);\n    int counter[n]={0};\n    char usernames[n][32],database[n][32];\n    for(i=0;i<n;i++) {\n        strcpy(database[i],gets(usernames[i]));\n        for(j=0;j<i;j++)\n            if(strcmp(database[j],database[i])==0) {\n                printf(\"%s%d\\n\",++counter);\n                break;\n            }\n            else if(j==i-1)\n                printf(\"OK\\n\");\n    }\n}", "fixed": "int main() {\n    int i,j,n;\n    scanf(\"%d\\n\",&n);\n    int *counter=(int*) malloc(n*sizeof(int));\n    for(i=0;i<n;i++)\n        counter[i]=0;\n    char usernames[n][35],database[n][35];\n    printf(\"OK\\n\");\n    for(i=0;i<n;i++) {\n        strcpy(database[i],gets(usernames[i]));\n        for(j=0;j<i;j++)\n            if(strcmp(database[j],database[i])==0) {\n                printf(\"%s%d\\n\",database[j],++counter[j]);\n                i--,n--;\n                break;\n            }\n            else if(j==i-1)\n                printf(\"OK\\n\");\n    }\n}"}
{"similarity_score": 0.2761394101876676, "equal_cnt": 20, "replace_cnt": 16, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "8c27db323cbb4982d5c740955f9be93b", "bug_code_uid": "b97a53e2a329c4c7f95d0f17bc8ae6d0", "src_uid": "08f1ba79ced688958695a7cfcfdda035", "apr_id": "28771ae1543e1e81011e2eb0b51a692a", "difficulty": 1400, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[105];\nint main()\n{\n  int n;\n  int state=0;\n  int count=0,sum=0;\n  scanf(\"%d\",&n);\n  for(int i=0;i<n;i++){\n    scanf(\"%d\",a+i);\n  }\n  for(int i=0;i<n;i++){\n    if(a[i]==3){\n      count++;\n      continue;\n    }\n    else if(a[i]==0){\n      sum+=count;\n    }\n    else if(state==0){\n      sum=sum+count+1;\n    }\n    else if((count%2==0&&a[i]!=state)||(count%2==1&&a[i]==state)){\n      sum=sum+count+1;\n    }\n    else if((count%2==0&&a[i]==state)||(count%2==1&&a[i]!=state)){\n      sum=sum+count;\n    }\n    count=0;\n    state=a[i];\n  }\n  sum+=count;\n  printf(\"%d\",n-sum);\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#define INF 105\nint f[INF][3];\nint a[INF];\nint min(int a,int b,int c);\nint main()\n{\n  int n;\n  scanf(\"%d\",&n);\n  for(int i=0;i<n;i++){\n    scanf(\"%d\",a+i);\n  }\n  f[0][0]=f[0][1]=f[0][2]=0;\n  for(int i=1;i<=n;i++){\n    f[i][0]=min(f[i-1][0],f[i-1][1],f[i-1][2])+1;\n    if(a[i-1]==0){\n      f[i][1]=f[i][2]=INF;\n    }\n    else if(a[i-1]==1){\n      f[i][1]=min(f[i-1][0],f[i-1][2],f[i-1][1]+1);\n      f[i][2]=INF;\n    }\n    else if(a[i-1]==2){\n      f[i][1]=INF;\n      f[i][2]=min(f[i-1][0],f[i-1][1],f[i-1][2]+1);\n    }\n    else{\n      f[i][2]=min(f[i-1][0],f[i-1][1],f[i-1][2]+1);\n      f[i][1]=min(f[i-1][0],f[i-1][2],f[i-1][1]+1);\n    }\n  }\n  printf(\"%d\\n\",min(f[n][0],f[n][1],f[n][2]));\n  return 0;\n}\nint min(int a,int b,int c){\n  if(a<b){\n    if(a<=c)\n      return a;\n    else\n      return c;\n  }\n  else\n    {\n      if(b<=c)\n\treturn b;\n      else \n\treturn c;\n    }\n}\n"}
{"similarity_score": 0.9649122807017544, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "075f2a09d0616e3a39cdc105f104ed91", "bug_code_uid": "f876680cfb68daf5ce705686e4e02377", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "2195d670b3442f65a5692e0ae4e7fa75", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    \n    char s[100000];int m;\n    scanf(\"%s\",&s);\n    m=strlen(s);\n    int n;\n    n=s[m-1]-'0';\n    if(n%4==0)\n    printf(\"4\");\n    else\n    printf(\"0\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    \n    char s[100000];int m;\n    scanf(\"%s\",&s);\n    m=strlen(s);\n    int n;\n    n=(s[m-2]-'0')*10+s[m-1]-'0';\n    if(n%4==0)\n    printf(\"4\");\n    else\n    printf(\"0\");\n    return 0;\n}"}
{"similarity_score": 0.8212407991587802, "equal_cnt": 13, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "831eac28ee6a31a6b143c89eeade28bf", "bug_code_uid": "58bbe1cee805dc83f1432653bee9e507", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "c6492b0e0817521ce52149daaa5f3fba", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint b[1000000];\nint main()\n{\n\tint t,n,a[9],i,j,min=9000000,idx,k,l,flag=1;\n//\tscanf(\"%d\",&t);\n//\tfor(i=0;i<t;i++)\n//\t{\n\t\tscanf(\"%d\",&n);\n\t\tfor(j=0;j<9;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t\tif(min>=a[j])\n\t\t\t{\n\t\t\t\tmin=a[j];\n\t\t\t\tidx=j+1;\n\t\t\t}\n\t\t}\n\t\tfor(j=0;j<n/min;j++)\n\t\t{\n\t\t\tb[j]=idx ;\n\t\t}\n\t\tif(min>n)\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(n%min==0)\n\t\t{\n\t\t\tfor(j=0;j<n/min;j++)\n\t\t\t\tprintf(\"%d\",b[j]);\n\t\t\tprintf(\"\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tn=((n-(n/min)*min+min));\n\t\t\tfor(k=0;k<n/min;k++)\n\t\t\t{\n\t\t\t\tfor(j=8;j>=0;j++)\n\t\t\t\t{\n\t\t\t\t\tif(n>a[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tn -= a[j];\n\t\t\t\t\t\tb[k]=j+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\tif(flag)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tj=0;\n\t\t\twhile(b[j]!=0)\n\t\t\t{\n\t\t\t\tprintf(\"%d\",b[j]);\n\t\t\t\t\tj++;\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n//\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint b[1000000];\nint main()\n{\n\tint t,n,a[9],i,j,min=9000000,idx,k,l,flag=1,d;\n//\tscanf(\"%d\",&t);\n//\tfor(i=0;i<t;i++)\n//\t{\n\t\tscanf(\"%d\",&n);\n\t\td=n;\n\t\tfor(j=0;j<9;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t\tif(min>=a[j])\n\t\t\t{\n\t\t\t\tmin=a[j];\n\t\t\t\tidx=j+1;\n\t\t\t}\n\t\t}\n\t//\tprintf(\"the value of n is %d\\n\",n);\n\t\tfor(j=0;j<n/min;j++)\n\t\t{\n\t\t\tb[j]=idx ;\n\t\t}\n\t\tif(min>n)\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(n%min==0)\n\t\t{\n\t\t\tfor(j=0;j<n/min;j++)\n\t\t\t\tprintf(\"%d\",b[j]);\n\t\t\tprintf(\"\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tn=((n-(n/min)*min+min));\n\t\t//\tprintf(\"the new value of n is %d\\n\",n);\n\t\t\tfor(k=0;k<d/min;k++)\n\t\t\t{\n\t\t\t\tfor(j=8;j>=0;j--)\n\t\t\t\t{\n\t\t\t\t\tif(n>=a[j])\n\t\t\t\t\t{\n//\t\t\t\t\t\tprintf(\"the value of a[%d] is %d\\n\",j,a[j]);\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tn = n-a[j]+min;\n//\t\t\t\t\t\tprintf(\"the value of n after the swap is %d\\n\",n);\n\t\t\t\t\t\tb[k]=j+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tflag=1;\n\t\t\t\t}\n//\t\t\t\tprintf(\"the value of flag is %d\\n\",flag);\n\t\t\t\tif(flag)\n\t\t\t\t\tbreak;\n\t\t\t\telse\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tj=0;\n\t\t\twhile(b[j]!=0)\n\t\t\t{\n\t\t\t\tprintf(\"%d\",b[j]);\n\t\t\t\t\tj++;\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n//\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8582677165354331, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7f56b9b5e45938d37f478c353ff45048", "bug_code_uid": "0363423a0603003402d12309da35214d", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "2bad799635da406643a9f2debfd31c30", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,j,a,b,d[100],x,sum=0,k;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n-1;i++)\n    {scanf(\"%d\",&d[i]);}\n    scanf(\"%d %d\",&a,&b);\n    x=b-a;\n    for(i=1;i<=n-1;i++)\n    {if(i<=x)\n    sum=sum+d[i];}\n\n  printf(\"%d\",sum);\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int n,i,j,a,b,d[100],x,sum=0,k;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n-1;i++)\n    {scanf(\"%d\",&d[i]);}\n    scanf(\"%d %d\",&a,&b);\n    for(i=a;i<=n-1;i++)\n    {if(i<b)\n    sum=sum+d[i];}\n\n  printf(\"%d\",sum);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9867075664621677, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "24892094584bd25f86a4f263693b20f7", "bug_code_uid": "563140759f91b803020ae061301fa344", "src_uid": "447c17cba953d6e2da50c242ac431ab4", "apr_id": "f376d6328f369bae05c59b0ea286d033", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,i,k,j,m,b[500],s,c,sum,h,t;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tsum=0;\r\n\t\th=0;\r\n\t\tscanf(\"%d%d\",&m,&s);\r\n\t\tfor(j=0;j<m;j++) scanf(\"%d\",&b[j]);\r\n\t\tfor(j=0;j<m;j++)\r\n\t\t{\r\n\t\t\tfor(k=j+1;k<m;k++)\r\n\t\t\t{\r\n\t\t\t\tif(b[k]<b[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tt=b[j];\r\n\t\t\t\t\tb[j]=b[k];\r\n\t\t\t\t\tb[k]=t;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tj=0;\r\n\t\tfor(c=1;;c++)\r\n\t\t{\r\n\t\t\tif(c==b[j])\r\n\t\t\t{\r\n\t\t\t\tj++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}else sum+=c;\r\n\t\t\tif(sum>s)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(sum==s)\r\n\t\t\t{\r\n\t\t\t\tif(c<b[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tif(b[j]-c!=1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}else\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile(j<m-1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(b[j+1]-b[j]==1) j++;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\t\t\t\t\th=-1;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(h==0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(h==-1) break;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,i,k,j,m,s,c,sum,h,t;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tsum=0;\r\n\t\th=0;\r\n\t\tint b[500]={0};\r\n\t\tscanf(\"%d%d\",&m,&s);\r\n\t\tfor(j=0;j<m;j++) scanf(\"%d\",&b[j]);\r\n\t\tfor(j=0;j<m;j++)\r\n\t\t{\r\n\t\t\tfor(k=j+1;k<m;k++)\r\n\t\t\t{\r\n\t\t\t\tif(b[k]<b[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tt=b[j];\r\n\t\t\t\t\tb[j]=b[k];\r\n\t\t\t\t\tb[k]=t;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tj=0;\r\n\t\tfor(c=1;;c++)\r\n\t\t{\r\n\t\t\tif(c==b[j])\r\n\t\t\t{\r\n\t\t\t\tj++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}else sum+=c;\r\n\t\t\tif(sum>s)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(sum==s)\r\n\t\t\t{\r\n\t\t\t\tif(c<b[j])\r\n\t\t\t\t{\r\n\t\t\t\t\tif(b[j]-c!=1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}else\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile(j<m-1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(b[j+1]-b[j]==1) j++;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\t\t\t\t\th=-1;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(h==0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(h==-1) break;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9983552631578947, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "96625fa34906bbd15459be7615d79e70", "bug_code_uid": "fe765591cb2cc00429778054dad6cf4f", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "cc06dd635b6b3e4f867095d1b031741e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,i,j;\n    scanf(\"%d%d\",&a,&b);\n    for(i=1,c=1; i<=a; i++,c++)\n    {\n        for(j=1; j<=b; j++)\n        {\n            if(i%2!=0)\n                printf(\"*\");\n                   else if(i%2==0&&c%4==0)\n            {\n                if(j==1)\n                    printf(\"#\");\n                else\n                    printf(\".\");\n            }\n            else if(i%2==0&&c%2==0)\n            {\n                if(j==b)\n                    printf(\"#\");\n                else\n                    printf(\".\");\n            }\n\n\n        }\n        printf(\"\\n\");\n    }\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,i,j;\n    scanf(\"%d%d\",&a,&b);\n    for(i=1,c=1; i<=a; i++,c++)\n    {\n        for(j=1; j<=b; j++)\n        {\n            if(i%2!=0)\n                printf(\"#\");\n                   else if(i%2==0&&c%4==0)\n            {\n                if(j==1)\n                    printf(\"#\");\n                else\n                    printf(\".\");\n            }\n            else if(i%2==0&&c%2==0)\n            {\n                if(j==b)\n                    printf(\"#\");\n                else\n                    printf(\".\");\n            }\n\n\n        }\n        printf(\"\\n\");\n    }\n\n\n}\n"}
{"similarity_score": 0.946524064171123, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "75f30b10935f29dc2c284c29dab0b521", "bug_code_uid": "953593db4a3c3b084ce5bbdb4b34d845", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "fb89f5a37fa52544c796def2f7df766d", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int oc;\n    int n=0,num=0,loc=0,lon=0,i=0,flag=0,oc1=0;\n    while (scanf(\"%d\",&n)!=EOF)\n    {\n        flag=1;\n        num=0;\n        scanf(\"%d\",&loc);\n        scanf(\"%d\",&lon);\n        num++;\n        oc=loc;\n        for (i=1;i<n;i++)\n        {\n            if (flag) scanf(\"%d%d\",&loc,&lon);\n            if (flag==0) flag=1;\n            if (loc-lon>oc)\n            {\n                oc=loc;\n                num++;\n            }\n            else\n            {\n                if (i==n-1) break;\n                flag=0;\n                oc1=loc+lon;\n                scanf(\"%d%d\",&loc,&lon);\n                if (oc1<loc)\n                {\n                    oc=oc1;\n                    num++;\n                }\n            }\n        }\n        if (oc<loc) num++;\n        if (n==99999)\n            else if (n==15) printf(\"10\\n\");\n            else printf(\"%d\\n\",num);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int oc;\n    int n=0,num=0,loc=0,lon=0,i=0,flag=0,oc1=0;\n    while (scanf(\"%d\",&n)!=EOF)\n    {\n        flag=1;\n        num=0;\n        scanf(\"%d\",&loc);\n        scanf(\"%d\",&lon);\n        num++;\n        oc=loc;\n        for (i=1;i<n;i++)\n        {\n            if (flag) scanf(\"%d%d\",&loc,&lon);\n            if (flag==0) flag=1;\n            if (loc-lon>oc)\n            {\n                oc=loc;\n                num++;\n            }\n            else\n            {\n                if (i==n-1) break;\n                flag=0;\n                oc=loc;\n                oc1=loc+lon;\n                scanf(\"%d%d\",&loc,&lon);\n                if (oc1<loc)\n                {\n                    oc=oc1;\n                    num++;\n                }\n            }\n\n        }\n        if (oc<loc) num++;\n        printf(\"%d\\n\",num);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6946249261665682, "equal_cnt": 33, "replace_cnt": 29, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 33, "lang": "GNU C11", "fix_code_uid": "cacfaf90a21bb2f4912bcaaea99c47b5", "bug_code_uid": "48f879e04fef08a686c01b920bc296ca", "src_uid": "468e8a14dbdca471f143f59b945508d0", "apr_id": "4ab0e304a4bc7b8c7e4f9fdcbfafad00", "difficulty": 1500, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint mark[100001];\nint mark2[100001];\nint mark3[100001];\n\nint main(){\n\tint n, m;\n\tint f[100000];\n\tint b[100000];\n\tint a[100000];\n\tint i, j;\n\tint status=0; //0 = Possible, 1 = Ambiguity, 2 = Impossible\n\t\n\tscanf(\"%d %d\", &n, &m);\n\t\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &f[i]);\n\t\tmark2[f[i]]++;\n\t}\n\tfor(i=0; i<m; i++){\n\t\tscanf(\"%d\", &b[i]);\n\t\tmark3[b[i]]++;\n\t}\n\t\n\tfor(i=0; i<n && status != 2; i++){\n\t\tmark[f[i]]++;\n\t\tif(mark[f[i]] > 1 && mark3[f[i]] > 0) status = 1;\n\t\tif(mark2[b[i]] == 0 && i<m) status = 2;\n\t}\n\t\n\tif(status == 1){\n\t\tprintf(\"Ambiguity\");\n\t\treturn 0;\n\t} else if(status == 2){\n\t\tprintf(\"Impossible\");\n\t\treturn 0;\n\t}\n\t\n\tprintf(\"Possible\\n\");\n\t\n\tfor(i=0; i<m; i++){\n\t\tj=0;\n\t\twhile(f[j] != b[i]) j++;\n\t\tprintf(\"%d \", j+1);\n\t}\n\t\n\t\n\t\n}\n", "fixed": "#include <stdio.h>\n\nint mark[100001];\nint mark2[100001];\nint mark3[100001];\n\nint main(){\n    int n, m;\n    int f[100000];\n    int b[100000];\n    int a[100000];\n    int i, j;\n    int status=0; //0 = Possible, 1 = Ambiguity, 2 = Impossible\n    \n    scanf(\"%d %d\", &n, &m);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%d\", &f[i]);\n        mark2[f[i]]++;\n    }\n    for(i=0; i<m; i++){\n        scanf(\"%d\", &b[i]);\n        mark3[b[i]]++;\n    }\n    \n    for(i=0; i<n; i++){\n        mark[f[i]]++;\n        if(mark[f[i]] > 1 && mark3[f[i]] > 0) status = 1;   }\n    for(i=0; i<m; i++){\n        if(mark2[b[i]] == 0) status = 2;\n    }\n    \n    if(status == 1){\n        printf(\"Ambiguity\");\n        return 0;\n    } else if(status == 2){\n        printf(\"Impossible\");\n        return 0;\n    }\n    \n    printf(\"Possible\\n\");\n    \n    for(i=0; i<m; i++){\n        j=0;\n        while(f[j] != b[i]) j++;\n        printf(\"%d \", j+1);\n    }\n    \n    \n    \n}"}
{"similarity_score": 0.8507071765322158, "equal_cnt": 40, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 30, "fix_ops_cnt": 40, "lang": "GNU C11", "fix_code_uid": "2d45d49f674892fb1c264837a4077920", "bug_code_uid": "3a3512e38da3c2d128708c9d65d3427c", "src_uid": "02062d1afe85e3639edddedceac304f4", "apr_id": "ad6cc6e218350a8eab9bd1f395b43e63", "difficulty": 1100, "tags": ["dp", "binary search", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n       int n;\n       scanf(\"%d\",&n);\n       if(n<=1)\n       {\n           printf(\"0\");\n           continue;\n       }\n       else\n       {\n           int count=0\n           for(int j=2,k=0;n<=1;k++)\n           {\n               int flag=0;\n               if(n==j)\n               {\n                   count++;\n                   break;\n               }\n               else\n               {\n                   if(n>j && n<(j+5+3*k))\n                   {\n                       n=n-j;\n                       count++;\n                       flag=1;\n                   }\n               }\n               if(flag==1)\n               {\n                   j=2;\n                   k=-1;\n               }\n               else\n               j=j+5+3*k;\n           }\n       }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        if(n<=1)\n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        \n            int count=0;\n            for(int j=2,k=0;n>1;)\n            {\n                int flag=0;\n                if(n==j)\n                {\n                    count++;\n                    break;\n                }\n                else{\n                    int temp=j+5+3*k;\n                    if(n>j && n<temp)\n                    {\n                        n=n-j;\n                        count++;\n                        flag=1;\n                        \n                    }\n                }\n                if(flag==1)\n                {\n                    j=2;\n                    k=0;\n                }\n                else\n                {\n                    j=j+5+3*k;\n                    k++;\n                }\n            }\n            printf(\"%d\\n\",count);\n        \n    }\n\n    return 0;\n}"}
{"similarity_score": 0.6644204851752021, "equal_cnt": 18, "replace_cnt": 7, "delete_cnt": 8, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "ad875c3ec24c455b5e378541bb9d2300", "bug_code_uid": "3c05064f490f42ebd1980a838f8032e3", "src_uid": "6ae754639d96790c890f9d1ab259332a", "apr_id": "4d20edfedce93f85c8285738704c900f", "difficulty": 1000, "tags": ["brute force", "geometry", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,a,n,b,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        if(n%2!=0){\r\n            printf(\"NO\\n\");\r\n            break;\r\n        }\r\n        else if(n%2==0){\r\n        a=n/2;b=n/4;\r\n        for(i=1;i<=5000;i++){\r\n            if(i*i==a){\r\n                printf(\"YES\\n\");\r\n                break;\r\n            }\r\n            else if(n%4==0){\r\n                for(i=1;i<=5000;i++){\r\n                    if(i*i==b){\r\n                        printf(\"YES\\n\");\r\n                        break;\r\n                    }\r\n                    else{\r\n                        printf(\"NO\\n\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n                break;\r\n            }\r\n            }\r\n        }\r\n        }\r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,a,n,b,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        if(n%2!=0){\r\n            printf(\"NO\\n\");\r\n            \r\n        }\r\n        else{\r\n            a=n/2;\r\n            b=sqrt(a);\r\n            i=sqrt(n);\r\n            if(b*b==a){\r\n                printf(\"YES\\n\");\r\n                \r\n            }\r\n            else if(i*i==n){\r\n                printf(\"YES\\n\");\r\n                \r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.450402144772118, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 18, "lang": "GNU C", "fix_code_uid": "62a5ab2a22670f043c58b428bf42f0a8", "bug_code_uid": "e2af4c3af3adb69ed9d80960a03abedd", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "750afe89cc2f08c802326ffe4d826686", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main( ){\n    int i,j,n,m;\n    scanf(\"%d%d\",&n,&m);\n    printf(\"%d\\n\",n+m-1);\n    for(i=1;i<=m;i++)\n    printf(\"%d %d\\n\",1,i);\n    for(i=2;i<n;i++)\n        printf(\"%d %d\\n\",i,m);\n    system(\"pause\");\n    return 0;\n} \n\n\n                                                           ", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int n,m,num,i,j;\n    while(scanf(\"%d%d\",&n,&m)!=EOF)\n    {\n          num=m+n-1;\n          printf(\"%d\\n\",num);\n          for(j=1;j<=m;j++)\n             printf(\"1 %d\\n\",j);\n          for(i=2;i<=n;i++)\n             printf(\"%d 1\\n\",i);\n    }\n    return 0;\n}\n\n\n                                                                                  "}
{"similarity_score": 0.858148893360161, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6a6de8350bf7563f521d827cd8d831d9", "bug_code_uid": "69444eaa17818dc03367aa949a3ef973", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "0adc79060195405df382ba3913426fac", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tlong int i,n;\n\tscanf(\"%ld\",&n);\n\tlong int a[n],p=0,q=0,r=0,s=0,k=0;\n\tfor(i=0;i<n;i++)\n{\n\tscanf(\"%ld\",&a[i]);\n}\nfor(i=0;i<n;i++)\n{\n\tif(a[i]==4)\n\tp++;\n\tif(a[i]==3)\n\tq++;\n\tif(a[i]==2)\n\tr++;\n\tif(a[i]==1)\n\ts++;\n}\nk=k+p;\nif(q==s)\n{\n\tk=k+q;\n\tif(r%2==0)\n\tk=k+(r/2);\n\telse\n\tk=k+(r/2)+1;\n\t\n}\nif(q<s)\n{\n\tk=k+q;\n\tif(r>1)\n\t{\n    k=k+(r/2);\n\t\n\t\n\tif(r%2==0)\n\t{if((s-q)%4==0)\n\tk=k+((s-q)/4);\n\telse\n\tk=k+((s-q)/4)+1;\n\t\n\t}\n\t\n\t if(r%2==1)\n\t {\n\t\tif(s-q>1)\n\t\t{\n\t\t k=k+1;\n\t\t \n\t\t if((s-q-2)%4==0)\n\t     k=k+((s-q-2)/4);\n\t     else\n\t     k=k+((s-q-2)/4)+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t  k=k+1;\n\t\t}\n\t }\n\t}\n\tif(r==1)\n\t{\n\t\t\n\t\tif(s<=1)\n\t\t{\t\n\t\t k=k+1;\n\t\t \n\t\t}\n\t\telse\n\t\t{\n\t\t\t\n\t\t k=k+1;\n\t\t s=s-2;\n\t\t\n\t\t if(s%4==0)\n\t     \n     \t\t\n     \tk=k+(s/4);\n\t     \n\t     else\n\t     k=k+(s/4)+1;\n\t     \n\t    }\n\t   \n\t}\n\tif(r==0)\n\t{\n\t\tif(s%4==0)\n\t    k=k+(s/4);\n\t    else\n\t    k=k+(s/4)+1;\n\t\n\t}\n}\nif(q>s)\n{\n\tk=k+q;\n\t\n\tif(r%2==0)\n\t{\n\tk=k+(r/2);}\n\telse\n\tk=k+(r/2)+1;\n}\n\n\nprintf(\"%ld\",k);\nreturn 0;\n}\n    \n    ", "fixed": "#include<stdio.h>\nint main(){\n\tlong int i,n;\n\tscanf(\"%ld\",&n);\n\tlong int a[n],p=0,q=0,r=0,s=0,k=0;\n\tfor(i=0;i<n;i++)\n{\n\tscanf(\"%ld\",&a[i]);\n}\nfor(i=0;i<n;i++)\n{\n\tif(a[i]==4)\n\tp++;\n\tif(a[i]==3)\n\tq++;\n\tif(a[i]==2)\n\tr++;\n\tif(a[i]==1)\n\ts++;\n}\nk=k+p;\nif(q==s)\n{\n\tk=k+q;\n\tif(r%2==0)\n\tk=k+(r/2);\n\telse\n\tk=k+(r/2)+1;\n\t\n}\nif(q<s)\n{\n\tk=k+q;\n\tif(r>1)\n\t{\n    k=k+(r/2);\n\t\n\t\n\tif(r%2==0)\n\t{if((s-q)%4==0)\n\tk=k+((s-q)/4);\n\telse\n\tk=k+((s-q)/4)+1;\n\t\n\t}\n\t\n\t if(r%2==1)\n\t {\n\t\tif(s-q>1)\n\t\t{\n\t\t k=k+1;\n\t\t \n\t\t if((s-q-2)%4==0)\n\t     k=k+((s-q-2)/4);\n\t     else\n\t     k=k+((s-q-2)/4)+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t  k=k+1;\n\t\t}\n\t }\n\t}\n\tif(r==1)\n\t{\n\t\t\n\t\tif(s-q<=1)\n\t\t{\t\n\t\t k=k+1;\n\t\t \n\t\t}\n\t\telse\n\t\t{\n\t\t\t\n\t\t k=k+1;\n\t\t \n\t\t\n\t\t if((s-q-2)%4==0)\n\t     \n     \t\t\n     \tk=k+((s-q-2)/4);\n\t     \n\t     else\n\t     k=k+((s-q-2)/4)+1;\n\t     \n\t    }\n\t   \n\t}\n\tif(r==0)\n\t{\n\t\tif((s-q)%4==0)\n\t    k=k+((s-q)/4);\n\t    else\n\t    k=k+((s-q)/4)+1;\n\t\n\t}\n}\nif(q>s)\n{\n\tk=k+q;\n\t\n\tif(r%2==0)\n\t{\n\tk=k+(r/2);}\n\telse\n\tk=k+(r/2)+1;\n}\n\n\nprintf(\"%ld\",k);\nreturn 0;\n}\n    \n    "}
{"similarity_score": 0.9859154929577465, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d989050fdd5bc3c58a2f1356f7a4805e", "bug_code_uid": "875741d7fddaa7e59e31682ad38ad8ef", "src_uid": "aa77158bf4c0854624ddd89aa8b424b3", "apr_id": "718d52cb37d4137cf00a58ab0ad4e1c6", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 1000\n\nint main(void)\n{\n    int p, q, l, r, value = 0, i, j, m, flag;\n    int a[MAX], b[MAX], c[MAX], d[MAX];\n\n    scanf(\"%d%d%d%d\", &p, &q, &l, &r);\n    for (i = 0; i < p; i++)\n        scanf(\"%d%d\", &a[i], &b[i]);\n    for (i = 0; i < q; i++)\n        scanf(\"%d%d\", &c[i],&d[i]);\n    for (i = l; i <= r; i++)\n    {\n        n = 0;\n        for (j = 0; j < q; j++)\n        {\n            if (n == 1)\n                break;\n            for (m = 0; m < p; m++)\n            {\n                if ((c[j]+i) >= a[m] && (c[j]+i) <= b[m] || (d[j]+i) <= b[m] && (d[j]+i) >= a[m] || (c[j]+i) <= a[m] && (d[j]+i) >= b[m])\n                {\n                    n = 1;\n                    value++;\n                    break;\n                }\n            }\n        }\n    }\n    printf(\"%d\", value);\n    return 0;\n}\n\n\n                                   ", "fixed": "#include <stdio.h>\n#define MAX 1000\n\nint main(void)\n{\n    int p, q, l, r, value = 0, i, j, m, n;\n    int a[MAX], b[MAX], c[MAX], d[MAX];\n\n    scanf(\"%d%d%d%d\", &p, &q, &l, &r);\n    for (i = 0; i < p; i++)\n        scanf(\"%d%d\", &a[i], &b[i]);\n    for (i = 0; i < q; i++)\n        scanf(\"%d%d\", &c[i],&d[i]);\n    for (i = l; i <= r; i++)\n    {\n        n = 0;\n        for (j = 0; j < q; j++)\n        {\n            if (n == 1)\n                break;\n            for (m = 0; m < p; m++)\n            {\n                if ((c[j]+i) >= a[m] && (c[j]+i) <= b[m] || (d[j]+i) <= b[m] && (d[j]+i) >= a[m] || (c[j]+i) <= a[m] && (d[j]+i) >= b[m])\n                {\n                    n = 1;\n                    value++;\n                    break;\n                }\n            }\n        }\n    }\n    printf(\"%d\", value);\n    return 0;\n}\n\n\n                "}
{"similarity_score": 0.9902597402597403, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f95545d48fa4d672a4eb519022e1a51b", "bug_code_uid": "5e15e0e6e2e54cbabb87086afe957f9b", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "0b24d0fd561fc460b78026d87a6d99cb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n int b,c,d,e;\n     int i,j,m=0,w=1,q=0;\n     int a[4],s=0;\n     for(i=0;i<n;i++)\n     {\n         scanf(\"%d %d %d %d\",&b,&c,&d,&e);\n         a[i]=b+c+d+e;\n          m=a[0];\n          if(m<a[i])\n            w++;\n\n\n     }\n     printf(\"%d\\n\",w);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int b,c,d,e;\n     int i,j,m=0,w=1,q=0;\n    int a[n],s=0;\n     for(i=0;i<n;i++)\n     {\n         scanf(\"%d %d %d %d\",&b,&c,&d,&e);\n         a[i]=b+c+d+e;\n          m=a[0];\n          if(m<a[i])\n            w++;\n\n\n     }\n     printf(\"%d\\n\",w);\n\n}\n"}
{"similarity_score": 0.7135678391959799, "equal_cnt": 14, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 9, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "fc5c5903710ea9e935939294a4f8deb9", "bug_code_uid": "c93a73a019e5dcfb2d292d56bf31a0cf", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "e351763e3b399fcf9877fb9854a7fcbd", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nint main()\n{\n\tint n,m,i,j,k;\n\tscanf(\"%d %d\",&n,&k);\n\tif(k%n==0)\n\tprintf(\"%d\\n\",k/n);\n\telse \n\tprintf(\"%d\\n\",k/n+1);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long n,m,i,j,k;\n\tscanf(\"%lld %lld\",&n,&k);\n\tif(k==0)\n\t\tprintf(\"0\\n\");\n\telse if(k%n==0)\n\t\t\tprintf(\"%lld\\n\",k/n);\n\t\telse \n\t\t\tprintf(\"%lld\\n\",k/n+1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9981167608286252, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "edd65d48f7a0200c0c264ec1d0e1ce6f", "bug_code_uid": "bfbc716a5c3f72dd11762a6d0c26c20f", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "360dcf1ae7abe81834e0ee7102272550", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i,l[100]={0},n=0,nX,nY,x;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&nX);\n    for(i=0;i<nX;i++)       //little x can pass these levels\n    {\n    scanf(\"%d\",&x);\n    l[x]++;\n    }\n    scanf(\"%d\",&nY);\n    for(i=0;i<nY;i++)       //little y can pass these levels\n    {\n    scanf(\"%d\",&x);\n    l[x]++;\n    }\n    for(i=1;i<=n;i++)  \n    {\n        if(l[i]==0)\n        {\n        printf(\"Oh, My keyboard!\");\n       return 0;\n        }\n    }\n\n        printf(\"I become the guy.\");\n  \n    \n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i,l[100]={0},n=0,nX,nY,x;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&nX);\n    for(i=0;i<nX;i++)       //little x can pass these levels\n    {\n    scanf(\"%d\",&x);\n    l[x]++;\n    }\n    scanf(\"%d\",&nY);\n    for(i=0;i<nY;i++)       //little y can pass these levels\n    {\n    scanf(\"%d\",&x);\n    l[x]++;\n    }\n    for(i=1;i<=n;i++)  \n    {\n        if(l[i]==0)\n        {\n        printf(\"Oh, my keyboard!\");\n       return 0;\n        }\n    }\n\n        printf(\"I become the guy.\");\n  \n    \n\n    return 0;\n}\n"}
{"similarity_score": 0.9203084832904884, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0b4962b2537817ad77b211816eb78e26", "bug_code_uid": "5f0ded7b76c0cc08bb1646165a29fd3c", "src_uid": "beab56c5f7d2996d447320a62b0963c2", "apr_id": "33b40b7d9ca58dabe475e8bf8439dee2", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    long long int p,n,a,b,k;\n    scanf(\"%lld\",&p);\n    while(p--)\n    {\n        scanf(\"%lld %lld %lld\",&n,&a,&b);\n        if(2*a<b)\n        {\n            printf(\"%lld\",n*a);\n\n        }\n        else\n        {\n            k=(n/2)*b;\n            if(n&1)\n            {\n                k=k+a;\n            }\n            printf(\"%lld\",k);\n        }\n\n    }\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    long long int p,n,a,b,k;\n    scanf(\"%lld\",&p);\n    while(p--)\n    {\n        scanf(\"%lld %lld %lld\",&n,&a,&b);\n        if(2*a<b)\n        {\n            printf(\"%lld\\n\",n*a);\n\n        }\n        else\n        {\n            k=(n/2)*b;\n            if(n&1)\n            {\n                k=k+a;\n            }\n            printf(\"%lld\\n\",k);\n        }\n\n    }\n\n\n\n\n}\n"}
{"similarity_score": 0.7803958529688972, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "1f5ed54f8946818fb7fdee35c6964b6f", "bug_code_uid": "40fd77990d09f2348e7253650ac9ef02", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "991a766ff889cde293eaf8eb1b2376d6", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <limits.h>\n#include <stdbool.h>\n\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    long long cnt[n+1];\n    long long dp[n+1];\n    dp[0] = 0;\n    for(i=0;i<=n;i++){\n        cnt[i]=0;\n    }\n    for(i=0;i<n;i++){\n        long long a;\n        scanf(\"%lld\",&a);\n        cnt[a]++;\n    }\n    dp[1] = cnt[1];\n    for(i=2;i<=n;i++){\n        dp[i] = max(dp[i-1],dp[i-2]+cnt[i]*i);\n    }\n    printf(\"%lld\",dp[n]);\n    return 0;\n}\n\n\n", "fixed": "#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <limits.h>\n#include <stdbool.h>\n\nlong long cnt[100001];\nlong long dp[100001];\n\nlong long max(long long a, long long b){\n\treturn (a>b)?a:b;\n}\n\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        long long a;\n        scanf(\"%lld\",&a);\n        cnt[a]++;\n    }\n    dp[1] = cnt[1];\n    for(i=2;i<100001;i++){\n        dp[i] = max(dp[i-1],dp[i-2]+cnt[i]*i);\n    }\n    printf(\"%lld\",dp[100000]);\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9944954128440368, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "86101f91dd4b630e6173a10ae13b73d4", "bug_code_uid": "ea0a07c7aa54cea6adc40ef52eff82e3", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "b622e7bd2bd0778fb9652d93fc27869c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int x,i;\n    scanf(\"%d\",&x);\n    for (i=1;i<x;i++)\n{if(i%2==1)\n   {\n    printf(\"I hate that \");}\nelse\n   {\n    printf(\"I love that \");\n    }\n}\nif (x%2==1)\n    printf(\"I hate it.\");\n    if(x%2==0)\n        printf(\"I love it.\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int x,i;\n    scanf(\"%d\",&x);\n    for (i=1;i<x;i++)\n{if(i%2==1)\n   {\n    printf(\"I hate that \");}\nelse\n   {\n    printf(\"I love that \");\n    }\n}\nif (x%2==1)\n    printf(\"I hate it\");\n    if(x%2==0)\n        printf(\"I love it\");\nreturn 0;\n}"}
{"similarity_score": 0.9636493228795439, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "924a813b834c4cb765e1c60afabf3f13", "bug_code_uid": "430107a72ab545d4c118f8397992107e", "src_uid": "097e35b5e9c96259c54887158ebff544", "apr_id": "65015d4585e1cd960328d29f8b81bd67", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[100001];\nint b[100001];\nint d[100001];\nint main()\n{\n\tint n,cnt=0,i,j,r,t;\n\tscanf(\"%d\",&n);\n\tint ara[100001];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%d\",&ara[i]);\n\t\tr=ara[i];\n\t\tif (a[r-1]==0){\n\t\ta[r-1]=i+1;\n\t\td[r-1]=d[r-1]+1;\n\t\tb[r-1]=2;\n\t\tcnt++;\n\t\t}\n\t\telse{\n\t\t\tt=a[r-1];\n\t\t\td[r-1]=d[r-1]+1;\n\t\t\t\n\t\t\tif (d[r-1]>2){\n\t\t\t\t\n\t\t\t\tif (ara[i-t]!=r){\n\t\t\t\t\tb[r-1]=0;\n\t\t\t\t\tcnt--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t\n\t\t\t\ta[r-1]=i-t+1;\n\t\t\t\tb[r-1]=1;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\n\t/*for (i=0;i<20;i++){\n\t\tprintf(\"%d %d\\n\",a[i],b[i]);\n\t}*/\n\tfor (i=0;i<100001;i++){\n\t\tif (b[i]==1){\n\t\t\tprintf(\"%d %d\\n\",i+1,a[i]);\n\t\t}\n\t\telse if (b[i]==2){\n\t\t\tprintf(\"%d %d\\n\",i+1,0);\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint a[100001];\nint b[100001];\nint d[100001];\nint c[100001];\nint main()\n{\n\tint n,cnt=0,i,j,r,t;\n\tscanf(\"%d\",&n);\n\tint ara[100001];\n\tfor (i=0;i<n;i++){\n\t\tscanf(\"%d\",&ara[i]);\n\t\tr=ara[i];\n\t\tif (c[r-1]==0){\n\t\tif (a[r-1]==0){\n\t\ta[r-1]=i+1;\n\t\td[r-1]=d[r-1]+1;\n\t\tb[r-1]=2;\n\t\tcnt++;\n\t\t}\n\t\telse{\n\t\t\tt=a[r-1];\n\t\t\td[r-1]=d[r-1]+1;\n\t\t\t\n\t\t\tif (d[r-1]>2){\n\t\t\t\t\n\t\t\t\tif (ara[i-t]!=r){\n\t\t\t\t\tb[r-1]=0;\n\t\t\t\t\tc[r-1]=1;\n\t\t\t\t\tcnt--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t\n\t\t\t\ta[r-1]=i-t+1;\n\t\t\t\tb[r-1]=1;\n\t\t\t}\n\t\t}\n\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\n\t/*for (i=0;i<20;i++){\n\t\tprintf(\"%d %d\\n\",a[i],b[i]);\n\t}*/\n\tfor (i=0;i<100001;i++){\n\t\tif (b[i]==1){\n\t\t\tprintf(\"%d %d\\n\",i+1,a[i]);\n\t\t}\n\t\telse if (b[i]==2){\n\t\t\tprintf(\"%d %d\\n\",i+1,0);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.865992414664981, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "054ff871e90052c0e17a88e8b2830f7a", "bug_code_uid": "e9b9fe6228d3b5067e35032a7c860ec4", "src_uid": "73e8984cceded15027c4ab89c5624a92", "apr_id": "9515caa8a3fc1c594a1f32a41e95d7e7", "difficulty": 1600, "tags": ["dp", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#define N 1000005\nint a[N],b[N];\ntypedef struct{\n     int x;\n     int y;\n}sort;\nsort hotel[N];\nint cmpfunc(const void*a,const void*b)\n{\n     sort * sortA=(sort*)a;\n     sort * sortB=(sort*)b;\n    return (sortA->x- sortB->x);\n}\nint main()\n{\n    int n,i,j,l,r,sum=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n         scanf(\"%d %d\",&hotel[i].x,&hotel[i].y);\n    }\n    qsort(hotel,n,sizeof(sort),cmpfunc);\n   // for(i=0;i<n;i++)\n//printf(\"%d %d\\n\",hotel[i].x,hotel[i].y);\n    for(i=0;i<n;)\n    {\n         for(j=i+1;j<n;j++)\n         {\n              if(hotel[i].y<hotel[j].x)\n              {\n                   sum++;\n                   break;\n              }\n         }\n         i+=j;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#define N 1000005\nint a[N],b[N];\ntypedef struct{\n     int x;\n     int y;\n}sort;\nsort hotel[N];\nint cmpfunc(const void*a,const void*b)\n{\n     sort * sortA=(sort*)a;\n     sort * sortB=(sort*)b;\n    return (sortA->y- sortB->y);\n}\nint main()\n{\n    int n,i,j,l,r,sum=1,max=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n         scanf(\"%d %d\",&hotel[i].x,&hotel[i].y);\n    }\n    qsort(hotel,n,sizeof(sort),cmpfunc);\n   // for(i=0;i<n;i++)\n//printf(\"%d %d\\n\",hotel[i].x,hotel[i].y);\n    max=hotel[0].y;\n    for(i=1;i<n;i++)\n    {\n              if(max<hotel[i].x)\n              {\n                   sum++;\n                   max=hotel[i].y;\n              }\n         \n    }\n    printf(\"%d\",sum);\n    return 0;\n}"}
{"similarity_score": 0.997920997920998, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8716273cd6602999baf107dd95473ef0", "bug_code_uid": "6765ae5e9edbb9c9eb809e8ecb138321", "src_uid": "beaeeb8757232b141d510547d73ade04", "apr_id": "d52c6b3d86a1b369a9b9f36880f6bdc0", "difficulty": 1200, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[100000];\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint count=0;\n\tint j=n+1;\n\tfor(int i=n;i>=1;i--){\n\t\tif(i<j) count++;\n\t\tif(j>=i-a[i]) j=i-a[i];\n\t}\n\tprintf(\"%d\\n\",count);\n}", "fixed": "#include<stdio.h>\nint a[1000000];\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint count=0;\n\tint j=n+1;\n\tfor(int i=n;i>=1;i--){\n\t\tif(i<j) count++;\n\t\tif(j>=i-a[i]) j=i-a[i];\n\t}\n\tprintf(\"%d\\n\",count);\n}"}
{"similarity_score": 0.2689721421709894, "equal_cnt": 17, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "8909367b4edb09c6f77fe6f91d1cf0d5", "bug_code_uid": "66afd40e02602e3b7b65ba5b258860dd", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "163466cd001179661d40c8ec81434842", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,j,b,c=0,d=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(j=0;j<n-1;j++)\n        for(i=0;i<n-j-1;i++)\n    if(a[i]>a[i+1]){\n        b=a[i];\n        a[i]=a[i+1];\n        a[i+1]=b;\n    }\n    for(i=0;i<n;i++){\n        if(a[0]==a[n-1])break;\n        if(a[i]==a[0])c++;\n        if(a[i]==a[n-1])d++;\n    }\n    if(a[0]==a[n-1])printf(\"0 %d\",n*(n-1)/2);\n    else printf(\"%d %d\",a[n-1]-a[0],c*d);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i;\n    long long int n,max,min,c=0,e=0,d=0;\n    scanf(\"%I64d\",&n);\n    long long int ar[n];\n    for(i=0;i<n;i++)\n    scanf(\"%I64d\",&ar[i]);\nmax=ar[0];min=ar[0];\n    for(i=0;i<n;i++){\n        if(ar[i]>max)max=ar[i];\n          if(ar[i]<min)min=ar[i];\n            if(ar[i]==ar[0])c++;\n    }\n   if(c==n)\nprintf(\"0 %I64d\",n*(n-1)/2);\nelse {\n    for(i=0;i<n;i++){\n        if(ar[i]==max)d++;\n      else  if(ar[i]==min)e++;\n         }\n printf(\"%I64d %I64d\",max-min,d*e);\n        }\n    return 0;\n}\n"}
{"similarity_score": 0.986468200270636, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6b5c172720bc120ec7e1b6f1de5b9cf9", "bug_code_uid": "2c9ba7a5810bc42c1c05fa1dfba6cb81", "src_uid": "bd5912fe2c5c37658f28f6b159b39645", "apr_id": "a389ccfdfe92b447b36f74a58428d919", "difficulty": 1000, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char str[100];\n    int n, i, j, a = 0, c = 0, p = 0;\n    scanf(\"%s\", str);\n    scanf(\"%d\", &n);\n    int l = strlen(str);\n    if(n > l){\n        printf(\"impossible\");\n        a = 1;\n    }\n    else{\n        for(i = 0; i < l; i++){\n            if(str[i] == '0'){\n                continue;\n            }\n            p++;\n            for(j = i+1; j < l; j++){\n                if(str[j] == '0'){\n                    continue;\n                }\n\n                if(str[i] == str[j]){\n                    str[j] = '0';\n                }\n            }\n        }\n    }\n\n    if(a == 0){\n        if(n <= p){\n            printf(\"0\");\n        }\n        else{\n            printf(\"%d\", n-p);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[1000];\n    int n, i, j, a = 0, c = 0, p = 0;\n    scanf(\"%s\", str);\n    scanf(\"%d\", &n);\n    int l = strlen(str);\n    if(n > l){\n        printf(\"impossible\");\n        a = 1;\n    }\n    else{\n        for(i = 0; i < l; i++){\n            if(str[i] == '0'){\n                continue;\n            }\n            p++;\n            for(j = i+1; j < l; j++){\n                if(str[j] == '0'){\n                    continue;\n                }\n\n                if(str[i] == str[j]){\n                    str[j] = '0';\n                }\n            }\n        }\n    }\n\n    if(a == 0){\n        if(n <= p){\n            printf(\"0\");\n        }\n        else{\n            printf(\"%d\", n-p);\n        }\n    }\n}\n"}
{"similarity_score": 0.768361581920904, "equal_cnt": 38, "replace_cnt": 9, "delete_cnt": 16, "insert_cnt": 12, "fix_ops_cnt": 37, "lang": "GNU C11", "fix_code_uid": "7892fbef482edf03c8f88231babe28a9", "bug_code_uid": "c932a907d3c0634e879d100be44fa2a4", "src_uid": "816907d873bce3573ce1e5ae3f494768", "apr_id": "fc8911815574efb82329564572d45353", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n {\n     char a[1000];\n     int i;\n     int t;\n     scanf(\"%d\",&t);\n\n        for(int j=1;j<=t;j++)\n        {\n        scanf(\"%s\",&a);\n\n        for(i=0;i<100;i++)\n        {\n          if(a[i]=='p'&&a[i+1]=='o')\n          {\n              printf(\"FILIPINO\");\n              break;\n          }\n          else if(a[i]=='d'&&a[i+1]=='e'&&a[i+2]=='s'&&a[i+3]=='u')\n               {\n                printf(\"JAPANESE\");\n                break;\n               }\n          else if (a[i]=='m'&&a[i+1]=='a'&&a[i+2]=='s'&&a[i+3]=='u')\n               {\n                printf(\"JAPANESE\");\n                break;\n               }\n          else if (a[i]=='m'&&a[i+1]=='n'&&a[i+2]=='i'&&a[i+3]=='d'&&a[i+4]=='a')\n                {\n                    printf(\"KOREAN\");\n                    break;\n                }\n        }\n        printf(\"\\n\");\n     }\n\n     return 0;\n\n }\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main ()\n{\n    char a[1000];\n    int i;\n    int t;\n    scanf(\"%d\",&t);\n\n    for(int j=1; j<=t; j++)\n    {\n        scanf(\"%s\",&a);\n\n        for(i=strlen(a)-1; i>=0; i--)\n        {\n            if(a[i-1]=='p'&&a[i]=='o')\n            {\n                printf(\"FILIPINO\");\n                break;\n            }\n            else if(a[i-3]=='d'&&a[i-2]=='e'&&a[i-1]=='s'&&a[i]=='u')\n            {\n                printf(\"JAPANESE\");\n                break;\n            }\n            else if (a[i-3]=='m'&&a[i-2]=='a'&&a[i-1]=='s'&&a[i]=='u')\n            {\n                printf(\"JAPANESE\");\n                break;\n            }\n            else if (a[i-4]=='m'&&a[i-3]=='n'&&a[i-2]=='i'&&a[i-1]=='d'&&a[i]=='a')\n            {\n                printf(\"KOREAN\");\n                break;\n            }\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.7351664254703328, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "94031ff81d1d60cf33bcdf76e2d68605", "bug_code_uid": "6c797f519293ade55dae8950f6cd017e", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "c327699b995681e34b0b5232fe5d4b7f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a,b,c[50000][3],d,e,f,g;\n\tscanf(\"%d\",&a);\n\tb=1;\n\twhile(b<=a)\n\t{\n\t\td=1;\n\t\twhile(d<=3)\n\t\t{\n\t\t\tscanf(\"%d\",&c[b][d]);\n\t\t\td=d+1;\n\t\t}\n\t\tb=b+1;\n\t}\n\te=1;\n\twhile(e<=a)\n\t{\n\t\tf=c[e][3];\n\t\twhile(f>=0)\n\t\t{\n\t\tg=f%c[e][1];\n\t\tif(g==c[e][2])\n\t\t{\n\t\t\tprintf(\"%d\\n\",f);\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf=f-1;\n\t\t}\n\t}\n\te=e+1;\n}}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint h,a,b,c[50000][3],d,e,f,g;\n\tscanf(\"%d\",&a);\n\tb=1;\n\twhile(b<=a)\n\t{\n\t\td=1;\n\t\twhile(d<=3)\n\t\t{\n\t\t\tscanf(\"%d\",&c[b][d]);\n\t\t\td=d+1;\n\t\t}\n\t\tb=b+1;\n\t}\n\te=1;\n\twhile(e<=a)\n\t{\n\t\tf=c[e][3]%c[e][1];\n\t\tg=c[e][3]-f;\n\t\th=g+c[e][2];\n\t\tif(h<=c[e][3])\n\t\t{\n\t\t\tprintf(\"%d\\n\",h);\n\t\t}\n\t\telse\n\t\t{h=h-c[e][1];printf(\"%d\\n\",h);\n\t\t}\n\t\te=e+1;\n\t}}"}
{"similarity_score": 0.984182776801406, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b03295a3639bebfd41082b3486a09d35", "bug_code_uid": "0e9cbd7833d5f1deb6ca394a375e0000", "src_uid": "240a2b88ded6016d0fd7157d0ee2beea", "apr_id": "e78888b65ab03ef3f118ade08ef9726d", "difficulty": 1200, "tags": ["greedy", "math", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar a[5005];\nint i,l,k=0,count=0;\nscanf(\"%s\",&a);\nl=strlen(a);\nfor(i=0;i<l-3;i++)\n{\nif(a[i]=='b'&&a[i+1]=='e'&&a[i+2]=='a'&&a[i+3]=='r')\n{\n    count +=(l-i-3);\n    count +=k*(l-i-3);\n}\nelse\nk++;\n}\nprintf(\"%d\",count);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar a[5005];\nint i,l,k=0,count=0;\nscanf(\"%s\",&a);\nl=strlen(a);\nfor(i=0;i<l-3;i++)\n{\nif(a[i]=='b'&&a[i+1]=='e'&&a[i+2]=='a'&&a[i+3]=='r')\n{\n    count +=(l-i-3);\n    count +=k*(l-i-3);\n    k=0;\n}\nelse\nk++;\n}\nprintf(\"%d\",count);\nreturn 0;\n}\n"}
{"similarity_score": 0.35960044395116536, "equal_cnt": 25, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "9d0b4318b8055d79c9fb152db4f356d1", "bug_code_uid": "053eb911866ce43e8beb37f904be4ba6", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "58e79ff7f1ac47199cf0b607ab492095", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int test,i,j,length,count=0,p,q;\n    char s[100];\n    scanf(\"%d\",&test);\n    for(i=1; i<=test; i++)\n    {\n        scanf(\"%d\",&length);\n        scanf(\"%s\",s);\n        for(j=0; j<=length; j++)\n        {\n             if(s[j]=='8')\n             {\n                 break;\n             }\n             else if(s[j]!='8')\n             {\n                 count++;\n             }\n        }\n        p=count;\n        q=length-p;\n        if(q>=11)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n            printf(\"NO\\n\");\n    }\n}\n\n", "fixed": "    #include<stdio.h>\n    main()\n    {\n    \tint t, n, i;\n    \tchar a[1001];\n    \tscanf(\"%d\", &t);\n    \twhile (t--)\n    \t{\n    \t\tscanf(\"%d\", &n);\n    \t\tscanf(\"%s\", a);\n    \t\tfor (i = 0; i < n; i++)\n    \t\t\tif (a[i] == '8')\n    \t\t\t\tbreak;\n    \t\tif ((n - i) >= 11)\n    \t\t\tprintf(\"YES\\n\");\n    \t\telse\n    \t\t\tprintf(\"NO\\n\");\n    \t}\n    }\n"}
{"similarity_score": 0.9782608695652174, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e7358c635902de47cc0e20bd55b9306e", "bug_code_uid": "e35a581ac26d426fe1eb6cf6f6e1146c", "src_uid": "aceadc8eadf6d5efd7c5a9fbc0396423", "apr_id": "878226a894c202a7cb5d3b09c0514d07", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,n,i,k=0;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    scanf(\"%d\",&n);\n    int ara[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if((i>b)&&(i<c))\n        {\n            k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,n,i,k=0;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    scanf(\"%d\",&n);\n    int ara[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if((ara[i]>b)&&(ara[i]<c))\n        {\n            k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    return 0;\n}\n"}
{"similarity_score": 0.9975669099756691, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b5f12860ec1f012b49d4e7c699aff3f1", "bug_code_uid": "808e874ed384b158f6bd9500490d41c5", "src_uid": "19f2c21b18e84f50e251b1dfd557d32f", "apr_id": "5a64503d83aaf1824f4a034f80f12a18", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar s[1000000];\nlong long i=0,j=0,l=0,r=0,rvalue=0,lvalue=0,p=0,value=0;\nscanf(\"%s\",s);\nlong long len;\nlen=strlen(s);\nfor(i=0;i<l;i++)\n{\n    if(s[i]=='^')\n    {\n        p=i;\n        break;\n    }\n}\nfor(i=0;i<=p-1;i++)\n{\n    l=i;\n    if(s[i]=='=')\n    value=0;\n    else\n    value=s[i]-48;\n    lvalue=lvalue+(value*(p-l));\n}\nfor(j=p+1;j<len;j++)\n{\n    r=j;\n    if(s[j]=='=')\n    value=0;\n    else\n    value=s[j]-48;\n\n    rvalue=rvalue+(value*(r-p));\n}\nif(lvalue>rvalue)\nprintf(\"left\\n\");\nelse if(lvalue<rvalue)\nprintf(\"right\\n\");\nelse\nprintf(\"balance\\n\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar s[1000000];\nlong long i=0,j=0,l=0,r=0,rvalue=0,lvalue=0,p=0,value=0;\nscanf(\"%s\",s);\nlong long len;\nlen=strlen(s);\nfor(i=0;i<len;i++)\n{\n    if(s[i]=='^')\n    {\n        p=i;\n        break;\n    }\n}\nfor(i=0;i<=p-1;i++)\n{\n    l=i;\n    if(s[i]=='=')\n    value=0;\n    else\n    value=s[i]-48;\n    lvalue=lvalue+(value*(p-l));\n}\nfor(j=p+1;j<len;j++)\n{\n    r=j;\n    if(s[j]=='=')\n    value=0;\n    else\n    value=s[j]-48;\n    rvalue=rvalue+(value*(r-p));\n}\nif(lvalue>rvalue)\nprintf(\"left\\n\");\nelse if(lvalue<rvalue)\nprintf(\"right\\n\");\nelse\nprintf(\"balance\\n\");\nreturn 0;\n}\n"}
{"similarity_score": 0.7927461139896373, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c150e0e583ad14227b685e4de384c5c3", "bug_code_uid": "c893eb1625c1f18f7182c218a751f76d", "src_uid": "2bb893703cbffe9aeaa0bed02f42a05c", "apr_id": "a4750fc01b06fd400fcc4932706b1c46", "difficulty": 1300, "tags": ["implementation", "number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int i,j,n;\n\tscanf(\"%lld\",&n);\n\tlong long int a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n        while(a[i]%2==0)\n        {\n            a[i]=s[i]/2;\n        }\n        while(s[i]%3==0)\n        {\n            s[i]=s[i]/3;\n        }\n\t}\n\tfor(i=1;i<n;i++)\n\t\tif(s[i]!=s[0]){\n\t\t\tprintf(\"No\");\n\t\t\treturn 0;\n\t\t}\n        printf(\"Yes\\n\");\n\t\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int i,j,n;\n\tscanf(\"%lld\",&n);\n\tlong long int a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n        while(a[i]%2==0)\n        {\n            a[i]=a[i]/2;\n        }\n        while(a[i]%3==0)\n        {\n            a[i]=a[i]/3;\n        }\n\t}\n\tfor(i=1;i<n;i++)\n\t\tif(a[i]!=a[0]){\n\t\t\tprintf(\"No\");\n\t\t\treturn 0;\n\t\t}\n        printf(\"Yes\");\n\t\treturn 0;\n}\n"}
{"similarity_score": 0.6230769230769231, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "597ff7d9a6255271ead7fc017816047d", "bug_code_uid": "4603b08a6a62f9c6ad1c689af6250920", "src_uid": "94278e9c55f0fc82b48145ebecbc515f", "apr_id": "3e560ef13473f1ecd43854bad1863fec", "difficulty": 1100, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main() {\n\n    int n;\n    scanf(\"%d\", &n);\n\n    if(n <= 26) {\n\n        for(int i = 0; i < n; i++)\n            printf(\"%c\", 'a' + i);\n\n        return 0;\n\n    }\n\n    char* a = malloc(n + 1);\n    a[1] = 'a';\n    a[2] = 'b';\n    a[3] = 'c';\n    a[4] = 'd';\n\n    for(int i = 5; i <= n; i++)\n        a[i] = a[i - 4];\n\n    a[n + 1] = '\\0';\n\n    puts(a + 1);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main() {\n\n    int n;\n    scanf(\"%d\", &n);\n\n    char* a = malloc(n + 1);\n    a[1] = 'a';\n    a[2] = 'b';\n    a[3] = 'c';\n    a[4] = 'd';\n\n    for(int i = 5; i <= n; i++)\n        a[i] = a[i - 4];\n\n    a[n + 1] = '\\0';\n\n    puts(a + 1);\n    return 0;\n}\n"}
{"similarity_score": 0.9985486211901307, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6fd4105e98a523bcf128242b72974f91", "bug_code_uid": "ed6e97f5b39e02d43b00e94a3ed8c376", "src_uid": "eea7860e6bbbe5f399b9123ebd663e3e", "apr_id": "3a41bac1d0ae08585405818af57b4061", "difficulty": 1400, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main( )\n{\n\tint n,a[100005]={0},i,j,k,b[100005]={0},max=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]%2==0)\n\t\t{\n\t\t\tb[2]++;\n\t\t\twhile(a[i]%2==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/2;\n\t\t\t\t//\t\t\t\tprintf(\"a[i] is %d\\n\",a[i]);\n\t\t\t}\n\t\t}\n\t\tfor(j=3;j<=sqrt(a[i]);j+=2)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tb[j]++;\n\t\t\t}\n\t\t\twhile(a[i]%j==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/j;\n\t\t\t\t//\t\t\t\tprintf(\"a[i] is %d\\n\",a[i]);\n\t\t\t}\n\t\t}\n\t\tif(a[i]>2)\n\t\t{\n\t\t\tb[a[i]]++;\n\t\t}\n\t}\n\tfor(j=1;j<100005;j++)\n\t{\n\t\tif(b[j]>=max)\n\t\t{\n\t\t\tmax=b[j];\n\t\t\t//\t\t\tprintf(\"max is %d\\n\",max);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max);\n//\tprintf(\"b[7] is %d\\n\",b[7]);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main( )\n{\n\tint n,a[100005]={0},i,j,k,b[100005]={0},max=1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]%2==0)\n\t\t{\n\t\t\tb[2]++;\n\t\t\twhile(a[i]%2==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/2;\n\t\t\t\t//\t\t\t\tprintf(\"a[i] is %d\\n\",a[i]);\n\t\t\t}\n\t\t}\n\t\tfor(j=3;j<=sqrt(a[i]);j+=2)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tb[j]++;\n\t\t\t}\n\t\t\twhile(a[i]%j==0)\n\t\t\t{\n\t\t\t\ta[i]=a[i]/j;\n\t\t\t\t//\t\t\t\tprintf(\"a[i] is %d\\n\",a[i]);\n\t\t\t}\n\t\t}\n\t\tif(a[i]>2)\n\t\t{\n\t\t\tb[a[i]]++;\n\t\t}\n\t}\n\tfor(j=1;j<100005;j++)\n\t{\n\t\tif(b[j]>=max)\n\t\t{\n\t\t\tmax=b[j];\n\t\t\t//\t\t\tprintf(\"max is %d\\n\",max);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max);\n//\tprintf(\"b[7] is %d\\n\",b[7]);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8079019073569482, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "aca0c9ae6624ee3272a164b71f39f169", "bug_code_uid": "c4a6c4892dffa5fa93892e19b625c418", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "cf058739ae130126b0c14deb20bc3fe6", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,m,k,a[1000001],b[300001][2],i,d=1,l=0,j,x=0;\n    scanf(\"%lld %lld %lld\",&n,&m,&k);\n    for(i=1;i<=m;i++)\n    {scanf(\"%lld\",&a[i]);}\n    for(i=1;i<=k;i++)\n    {scanf(\"%lld %lld\",&b[i][0],&b[i][1]);}\n    for(i=1;i<=m;i++)\n    {if(a[i]==1)\n     {printf(\"1\");\n      l++;\n      break;\n     }\n    }\n    if(l==0)\n    {\n      for(i=1;i<=k;i++)\n     { if(b[i][0]==d)\n       {d=b[i][1];}\n      else\n      {if(b[i][1]==d)\n       {d=b[i][0];}\n      }\n      for(j=1;j<=m;j++)\n      {if(d==a[j])\n       {x++;\n        break;\n       }\n      }\n      if(x!=0)\n      {break;}\n     }\n     printf(\"%lld\",d);\n    }\n    return 0;\n}\n       \n       \n       \n       \n       \n       \n       \n       \n       \n       ", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,m,k,a[1000001],c[1000001],b[300001][2],i,d=1,l=0,j,x=0;\n    scanf(\"%lld %lld %lld\",&n,&m,&k);\n    for(i=1;i<=1000001;i++)\n    {a[i]=0;}\n    for(i=1;i<=m;i++)\n    {scanf(\"%lld\",&c[i]);}\n    for(i=1;i<=m;i++)\n    {a[c[i]]=1;}\n    for(i=1;i<=k;i++)\n    {scanf(\"%lld %lld\",&b[i][0],&b[i][1]);}\n    if(a[1]==1)\n    {l++;\n     printf(\"1\");\n    }\n    if(l==0)\n    {\n      for(i=1;i<=k;i++)\n     { if(b[i][0]==d)\n       {d=b[i][1];}\n      else\n      {if(b[i][1]==d)\n       {d=b[i][0];}\n      }\n      if(a[d]==1)\n      {x++;}\n      if(x!=0)\n      {break;}\n     }\n     printf(\"%lld\",d);\n    }\n    return 0;\n}\n       \n       \n       \n       \n       \n       \n       \n       \n       \n       "}
{"similarity_score": 0.3008849557522124, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "b9c87b1c3da881909938a5d1cf012ed7", "bug_code_uid": "42901bfdb991153aab8c5d72565c41f8", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "912c7087b6ccb6c6d200a51c354ab1d4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int t;\n    char ch[4],n=0;\n    scanf (\"%d\", &t);\n    int i;\n    if (t==150)\n        printf(-150\\n);\n    else\n    {\n        \n    \n    for (i=0;i<=t;i++)\n    {\n        scanf(\"%s\", ch);\n\n    if (ch[1]=='+')\n    n++;\n        else\n        n--;\n    }\n        printf(\"%d\\n\", n);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int t;\n    char ch[4];\n    int n=0;\n    scanf (\"%d\", &t);\n    int i;\n    for (i=1;i<=t;i++)\n    {\n        scanf(\"%s\", ch);\n\n    if (ch[1]=='+' || ch[0]=='+' || ch[2]=='+')\n    n++;\n        else if (ch[0]=='-' || ch[1]=='-' || ch[2]=='-')\n        n--;\n    }\n        printf(\"%d\\n\", n);\n\n}"}
{"similarity_score": 0.2929427430093209, "equal_cnt": 19, "replace_cnt": 15, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "bd29dd00766f1bb3d8462fa093c5f984", "bug_code_uid": "e201be1ea0d7550c9922779af100b871", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "5e6b8e34595628fca3894a0dab2b5425", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main() {\n\tint k;\n\tscanf(\"%d\", &k);\n\twhile (k--) {\n\t\tlong long a, b, c;\n\t\tscanf(\"%lld %lld %lld\", &a, &b, &c);\n\t\tlong long d = c / b;\n \n\t\tif (n >= d + 1) {\n\t\t\tprintf(\"%lld\\n\", ((d) * (d + 1) / 2) + (d * (a - d - 1)));\n\t\t}\n\t\telse {\n\t\t\tprintf(\"%lld\\n\", (a - 1) * (a) / 2);\n\t\t}\n\t}\n\treturn 0;\n}\n\t\t  \t\t \t\t  \t \t \t \t \t\t\t \t   \t\t \t", "fixed": "#include<stdio.h>\nvoid main()\n{\n\tlong long int value,sum,n,x,t;\n\tint i,j,k;\n\tscanf(\"%d\",&k);\n\twhile(k--) {\n\t\tsum=0;\n\t\tscanf(\"%lld%lld%lld\",&n,&x,&t);\n\t\tif(x>t) {\n\t\t\tprintf(\"%lld\\n\",sum);\n\t\t\tcontinue;\n\t\t} \n\t\telse {\n\t\t\tvalue=t/x;\n\t\t\tif(value<n) {\n\t\t\t\tsum=(n-value)*value;\n\t\t\t\tsum+=(value-1)*value/2;\n\t\t\t} else {\n\t\t\t\tsum+=(n-1)*n/2;\n\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%lld\\n\",sum);\n\t\t}\n\t\t\n\t}\n    \t\t\t \t\t \t  \t \t \t \t\t\t\t\t\t \t\t\t"}
{"similarity_score": 0.980590717299578, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c8f5d8402a1f6b87e681a89b0f76a3da", "bug_code_uid": "d981d3cc7aaf49dd284c0f7ac1455193", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "a9703f349e591e189ac963b42274094e", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include<stdio.h>\n# include<stdlib.h>\n\nint main()\n{\n\tint n,sell=0,x=0,l=0;\n\tlong long int v;\n\tscanf(\"%d%I64d\",&n,&v);\n\tlong long int num[n][50],no[n],team[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%I64d\",&num[i][0]);\n\t\tfor (int k = 1; k <=num[i][0] ; ++k)\n\t\t{\n\t\t\tscanf(\"%I64d\",&num[i][k]);\n\t\t}\n\t}\n\tfor (int i = 0; i <n ; ++i)\n\t{\n\t\tfor (int k = 1; k <=num[i][0] ; ++k)\n\t\t{\n\t\t\tif (v>num[i][k])\n\t\t\t{\n\t\t\t\tsell+=1;\n\t\t\t\tno[x]=i+1;\n\t\t\t\tx++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\nif (sell==0)\n\t{\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"%d\\n\",sell);\n\tfor (int i = 0; i < x; ++i)\n\t{\n\t\tprintf(\"%I64d\\t\",no[i]);\n\t}\n}", "fixed": "# include<stdio.h>\n# include<stdlib.h>\n\nint main()\n{\n\tint n,sell=0,x=0,l=0;\n\tlong long int v;\n\tscanf(\"%d%lld\",&n,&v);\n\tlong long int num[n][51],no[n],team[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%lld\",&num[i][0]);\n\t\tfor (int k = 1; k <=num[i][0] ; ++k)\n\t\t{\n\t\t\tscanf(\"%lld\",&num[i][k]);\n\t\t}\n\t}\n\n\tfor (int i = 0; i <n ; ++i)\n\t{\n\t\tfor (int k = 1; k <=num[i][0] ; ++k)\n\t\t{\n\t\t\tif (v>num[i][k])\n\t\t\t{\n\t\t\t\tsell+=1;\n\t\t\t\tno[x]=i+1;\n\t\t\t\tx++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\nif (sell==0)\n\t{\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"%d\\n\",sell);\n\tfor (int i = 0; i < x; ++i)\n\t{\n\t\tprintf(\"%lld\\t\",no[i]);\n\t}\n}"}
{"similarity_score": 0.9801699716713881, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9faf7335d94b8b888c50d367c69fcfdb", "bug_code_uid": "0bb7e2e4304b5dd2f24a6246030052aa", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "33c5a556ff6bc75413215509dc12f0e7", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n   int t,q;\n   scanf(\"%d\",&t);\n   for(q=0;q<t;q++)\n   {\n     int n,m;\n     scanf(\"%d %d\",&n,&m);\n     if(m>n)\n        printf(\"NO\\n\");\n     else if(n==m)\n     printf(\"YES\\n\");\n     else{\n        if(n%2==0 && m%2!=0)\n        printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n\n\n\n\n     }\n\n\n\n\n\n\n\n\n\n\n\n\n\n   }\n\n\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n   int t,q;\n   scanf(\"%d\",&t);\n   for(q=0;q<t;q++)\n   {\n     int n,m;\n     scanf(\"%d %d\",&n,&m);\n     if(m>n)\n        printf(\"NO\\n\");\n     else if(n==m)\n     printf(\"YES\\n\");\n     else{\n        if(n%m==0)\n        printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n\n\n\n\n     }\n\n\n\n\n\n\n\n\n\n\n\n\n\n   }\n\n\n  return 0;\n}\n"}
{"similarity_score": 0.8571428571428571, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "5561af01409de6a7fa87e752f86bb858", "bug_code_uid": "a4237c70a34f4acef96052b8aa1223f6", "src_uid": "1bcf130890495bcca67b4b0418476119", "apr_id": "df149b6fcf9e7b2343e1387e155fb535", "difficulty": 1700, "tags": ["geometry", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long a,b;\n    scanf(\"%lld %lld\",&a,&b);\n    if(a<b){\n        printf(\"-1\");\n        return;\n    }\n    int k=1;\n    double x;\n    while(1){\n        x=(a+b)/(2.0*(k));\n\n        if(x<b)break;\n        k++;\n    }\n    x=(a+b)/(2.0*(k-1));\n    printf(\"%.12f\\n\",x);\n   // printf(\"%f\",x);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long a,b;\n    scanf(\"%lld %lld\",&a,&b);\n    if(a<b){\n        printf(\"-1\");\n        return 0;\n    }\n    int k=1;\n    double x;\n    x= (a+b)/(2.0*((a+b)/(2*b)));\n    printf(\"%.12f\\n\",x);\n   // printf(\"%f\",x);\n    return 0;\n}\n"}
{"similarity_score": 0.5095986038394416, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "df680514c9d15620c529dd6ce595e038", "bug_code_uid": "176a61a730d79337734a0cd215b3bbee", "src_uid": "f00eb0452f5933103f1f77ef06473c6a", "apr_id": "03ad17018b1716e9674ac280b2336332", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint t; \nlong n, k, q;\n\nint main()\n{\n    scanf(\"%d\", &t);\n    for (int i = 1; i <= t; i++)\n    {\n        scanf(\"%ld %ld\", &n, &k);\n        if (k >= n) printf(\"1\\n\");\n        else\n        {\n            q = (int)sqrt(n);\n            if (q > k) q = k; \n            for (int j = q; j > 0; j--) \n                    if (n % j == 0)  \n                        if (n / j <= k) { printf(\"%ld\\n\", j);  break; }\n                        else { printf(\"%d\\n\", n / j);  break; }\n                   \n        }\n    }\n    \n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint t; \nlong n, k, q, v1, v2, v;\n\nint main()\n{\n    scanf(\"%d\", &t);\n    for (int i = 1; i <= t; i++)\n    {\n        scanf(\"%ld %ld\", &n, &k);\n        if (k >= n) printf(\"1\\n\");\n        else\n        {   v = n;\n            for (int j = 1; j * j <= n ; j++) \n                    if (n % j == 0)  \n                      { \n                        if (j <= k)  v = v < n / j ? v :  n / j;\n                        if (n / j <= k)  v = v < j ? v : j;\n                      }\n            printf(\"%d\\n\", v);              \n        }\n    }\n    \n\n    return 0;\n}"}
{"similarity_score": 0.3412698412698413, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "86cb8c83b2056756d8667c2f15dc403d", "bug_code_uid": "ff9af98bb9005c1f2830297fc1593f52", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "58bf2b85c802380d0fdc6ea2c57231b3", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int count = 0,i;\n    char c;\n    scanf(\" %d\",&i);\n    fflush(stdin);\n    while((c = getc(stdin)) != '\\0')    \n    {\n        if(c == 'A')\n            count++;\n        else\n            count--;\n  //      fflush(stdin);\n    }\n    if(count > 0)\n        printf(\"Anton\");\n    else if(count < 0)\n        printf(\"Danik\");\n    else\n        printf(\"Friendship\");\n    printf(\"\\n\");\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i,count = 0;\n    scanf(\"%d\",&n);\n    char s[n];\n    scanf(\" %s\",s);\n    for(i = 0; s[i] ; i++)\n        if(s[i] == 'A')\n            count++;\n        else\n            count--;\n    if(count > 0)\n        printf(\"Anton\");\n    else if (count < 0)\n        printf(\"Danik\");\n    else\n        printf(\"Friendship\");\n}"}
{"similarity_score": 0.9635941130906274, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d0328a92d36ffa3a6aaf53d70d4c8163", "bug_code_uid": "fb918a33fa988e99888418ff915e9a89", "src_uid": "f2b2d12ab1c8a511d2ca550faa9768d4", "apr_id": "337fc4db9944f3fd655c7626da78e5bb", "difficulty": 2500, "tags": ["dp", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n#define maxn 1000010 \r\n#define mod 998244353\r\nlong long n,k,p[maxn],ans=0;\r\n\r\nvoid go()\r\n{\r\n\tscanf(\"%lld%lld\", &n, &k);\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tscanf(\"%lld\", p+i);\r\n\tfor(int i=n-k+1;i<=n;i++)\r\n\t\tif(p[i]>0)\r\n\t\t\t{ puts(\"0\"); return; }\r\n\tans=1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tif(i-k<=0)\r\n\t\t\tans=ans*i%mod;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(p[i-k]>0)\r\n\t\t\t{\r\n\t\t\t\tif(p[i-k]+k>=i)\r\n\t\t\t\t{\r\n\t\t\t\t\tans=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(p[i-k]==0)\r\n\t\t\t\tans=ans*min(i*1ll,(k+1))%mod;\r\n\t\t\telse\r\n\t\t\t\tans=ans*i%mod;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%lld\\n\", ans);\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--)\r\n\t\tgo();\r\n}", "fixed": "#include <stdio.h>\r\n\r\n#define maxn 1000010 \r\n#define mod 998244353\r\nlong long n,k,p[maxn],ans=0;\r\n\r\n#define min(x, y) (((x) < (y)) ? (x) : (y))\r\n\r\nvoid go()\r\n{\r\n\tscanf(\"%lld%lld\", &n, &k);\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tscanf(\"%lld\", p+i);\r\n\tfor(int i=n-k+1;i<=n;i++)\r\n\t\tif(p[i]>0)\r\n\t\t\t{ puts(\"0\"); return; }\r\n\tans=1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tif(i-k<=0)\r\n\t\t\tans=ans*i%mod;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(p[i-k]>0)\r\n\t\t\t{\r\n\t\t\t\tif(p[i-k]+k>=i)\r\n\t\t\t\t{\r\n\t\t\t\t\tans=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(p[i-k]==0)\r\n\t\t\t\tans=ans*min(i*1ll,(k+1))%mod;\r\n\t\t\telse\r\n\t\t\t\tans=ans*i%mod;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%lld\\n\", ans);\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile(t--)\r\n\t\tgo();\r\n}"}
{"similarity_score": 0.9803571428571428, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a2f30fece0e13f619c5e447795c2d612", "bug_code_uid": "cb74155b7126e00130847046a70ff8b1", "src_uid": "94a38067fc8dd8619fa6e5873ca60220", "apr_id": "ece558581759768c02bd17558735df97", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\n    int nr = 0;\n    scanf(\"%d\", &nr);\n    int worms [nr];\n    for (int i = 0; i < nr; i ++)\n    {\n        scanf(\"%d\", &worms[i]);\n    }\n    \n    for (int i = 0; i < nr; i++)\n    {\n        for (int j = 0; j < nr; j++)\n        {\n            for (int k = 0; k < nr; k++)\n            {\n                if (k != j && worms[k] == worms[i] + worms [j])\n                {\n                    printf(\"%d %d %d\", k, j, i);\n                    return 0;\n                }\n            }\n        }\n    }\n    printf(\"%d\", - 1);\n}", "fixed": "#include <stdio.h>\n\nint main ()\n{\n    int nr = 0;\n    scanf(\"%d\", &nr);\n    int worms [nr];\n    for (int i = 0; i < nr; i ++)\n    {\n        scanf(\"%d\", &worms[i]);\n    }\n    \n    for (int i = 0; i < nr; i++)\n    {\n        for (int j = 0; j < nr; j++)\n        {\n            for (int k = 0; k < nr; k++)\n            {\n                if (k != j && i != j && worms[k] == worms[i] + worms [j])\n                {\n                    printf(\"%d %d %d\", k + 1, j + 1, i + 1);\n                    return 0;\n                }\n            }\n        }\n    }\n    printf(\"%d\", - 1);\n}"}
{"similarity_score": 0.8682328907048008, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "b8608166cdfc62300162aea704922e24", "bug_code_uid": "a92e8b855e5bdf667a3022eef3e5d8a4", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "121cd54066496b06c7350b583f23635d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n        char string[10000];\n        int countA=0;\n        int n=0;\n        scanf(\"%d\",&n);\n        scanf(\"%s\",string);\n\n        for(int i=0;i<n;i++)\n                if(string[i]=='A')\n                        countA=countA+1;\n\n        if((countA)>(n-countA))\n                printf(\"A\");\n        else if((countA)==(n-countA))\n                printf(\"Friendship\");\n        else\n                printf(\"D\");\n\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n        char string[100000];\n        int countA=0;\n        int n=0;\n        scanf(\"%d\",&n);\n        scanf(\"%s\",string);\n        \n        for(int i=0;i<n;i++)\n                if(string[i]=='A')\n                        countA=countA+1;\n        \n        int m =n-countA;\n        if(countA>m)\n                printf(\"Anton\");\n        else if(countA==m)\n                printf(\"Friendship\");\n        else\n                printf(\"Danik\");\n\n        return 0;\n}"}
{"similarity_score": 0.9962453066332916, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6ecc603e329a3622656d08d1dbf88355", "bug_code_uid": "d76bda2e12558b7b7e48a83c2e16f2c1", "src_uid": "3185ae6b4b681a10a21d02e67f08fd19", "apr_id": "5682d5aaf12e86bd7e8b050905db5ac3", "difficulty": 1600, "tags": ["number theory", "games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[105];\nint gcd(int a,int b)\n{\n    if(b==0) return a;\n    else return (b,a%b);\n}\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    int g=a[0],mx=a[0];\n    for(i=1;i<n;i++)\n    {\n        g=gcd(g,a[i]);\n        if(a[i]>mx) mx=a[i];\n    }\n    int turns=mx/g;\n    if((turns-n)&1) puts(\"Alice\");\n    else puts(\"Bob\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint a[105];\nint gcd(int a,int b)\n{\n    if(b==0) return a;\n    else return gcd(b,a%b);\n}\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    int g=a[0],mx=a[0];\n    for(i=1;i<n;i++)\n    {\n        g=gcd(g,a[i]);\n        if(a[i]>mx) mx=a[i];\n    }\n    int turns=mx/g;\n    if((turns-n)&1) puts(\"Alice\");\n    else puts(\"Bob\");\n    return 0;\n}"}
{"similarity_score": 0.17707150964812712, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "680d031b9e45ac6782ab417e907ec8da", "bug_code_uid": "f00ae9cd79b5277ef55f7a586b20a64f", "src_uid": "02b7ff5e0b7f8cd074d9e76251c2725e", "apr_id": "17c2befd63af3561e4cdcda3639b1712", "difficulty": 1200, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n\n    int a[n+2];\n    int i,j,k,pos=1;\n\n    for(i=1;i<=n;i++)\n    a[i]=-1;\n\n\n    for(i=1;i<=n;i++)\n    {\n        int left,cnt;\n        left=n-i+1;\n        left=(i%left) +1;\n\n        for(j=pos,cnt=0;;j++)\n        {\n            if(j>n)\n            j=1;\n    \n            if(a[j]==-1)\n            cnt++;//    printf(\"        Cnt=%d\\n\",cnt);    \n\n            if(cnt==left)\n            break;\n        }\n\n    a[j]=i; //printf(\"Cur=%d\\n\",a[j]);\n    pos=j;\n\n    }\n\n    for(k=1;k<=n;k++)\n    printf(\"%d \",a[k]);\n//  printf(\"\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n\n    int lef,rig;\n    lef=1;\n    rig=n;\n\n    while(rig-lef>=1)\n    {\n        printf(\"%d %d \",lef,rig);\n        lef+=1;\n        rig-=1;\n    }\n    \n    if(n%2==1)\n    printf(\"%d\",((n/2)+1));\n    return 0;\n}"}
{"similarity_score": 0.969140950792327, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "943927de6bc80b15124196b2a5d3670f", "bug_code_uid": "1b990329930fca807d0a5559093d8cf8", "src_uid": "7896740b6f35010af751d3261b5ef718", "apr_id": "d29072ba3fe59a4f2acb4917a5ebaa4b", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,j,k,c=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<2*n+1;i++)\n    {\n      if(i<=n)  for(j=0;j<n-i;j++)\n          printf(\"  \");\n      else for(j=0;j<i-n;j++)  printf(\"  \");\n    if(i<=n)  for(j=0;j<=i;j++)\n      {\n         if(i==0) printf(\"%d\",j); else printf(\"%d \",j);\n      }\n      else {k=i; for(j=0;j<=2*n-i;j++)  printf(\"%d \",j);}\n      \n      if(j==1);\n      else for(k=j-2;k>=0;k--)\n      {\n          if(k==0) printf(\"%d\",k);\n       else  printf(\"%d \",k);\n      }\n      printf(\"\\n\");\n    }\n    \n      \n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,j,k,c=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<2*n+1;i++)\n    {\n      if(i<=n)  for(j=0;j<n-i;j++)\n          printf(\"  \");\n      else for(j=0;j<i-n;j++)  printf(\"  \");\n    if(i<=n)  for(j=0;j<=i;j++)\n      {\n         if(i==0) printf(\"%d\",j); else printf(\"%d \",j);\n      }\n      else {k=i; for(j=0;j<=2*n-i;j++)  if(i==2*n) printf(\"%d\",j);else printf(\"%d \",j);}\n      \n      if(j==1);\n      else for(k=j-2;k>=0;k--)\n      {\n          if(k==0) printf(\"%d\",k);\n       else  printf(\"%d \",k);\n      }\n\n           printf(\"\\n\");\n    }\n    \n      \n}"}
{"similarity_score": 0.988110964332893, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "89574148c6215346a9844fa41ab2cf37", "bug_code_uid": "6ade70a87bcbcb97c41afd45e99f67e8", "src_uid": "12abfbe7118868a0b1237489b5c92760", "apr_id": "c662517f0138f64e0047925cf5183577", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,c=0,mx,mx_i;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tscanf(\"%d\",&a[0]);\n\tmx=a[0];\n\tfor(i=1;i<n;i++){\n\tscanf(\"%d\",&a[i]);\n\tif(a[i]>mx){\n\tmx=a[i];\n\tmx_i=i;}\n\t}\n\tfor(i=mx_i-1;i>=0;i--){\n\t\tif(a[i]>a[i+1]){\n\t\t\tc=-1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=mx_i+1;i<n;i++){\n\t\tif(a[i]>a[i-1]){\n\t\t\tc=-1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(c==0)\n\tprintf(\"YES\");\n\telse\n\tprintf(\"NO\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,c=0,mx,mx_i;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tscanf(\"%d\",&a[0]);\n\tmx=a[0];\n\tmx_i=0;\n\tfor(i=1;i<n;i++){\n\tscanf(\"%d\",&a[i]);\n\tif(a[i]>mx){\n\tmx=a[i];\n\tmx_i=i;}\n\t}\n\tfor(i=mx_i-1;i>=0;i--){\n\t\tif(a[i]>a[i+1]){\n\t\t\tc=-1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=mx_i+1;i<n;i++){\n\t\tif(a[i]>a[i-1]){\n\t\t\tc=-1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(c==0)\n\tprintf(\"YES\");\n\telse\n\tprintf(\"NO\");\n}"}
{"similarity_score": 0.3117040630685264, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "f2618fc29b98e55ae922cf38dcbc28c8", "bug_code_uid": "44b30053c042b490969270bc4c1aa6e8", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "095eec14636474c0b48bcc22bf003f23", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint main(){\n//2;39\nchar a [100000],b1[100000];int i1[10],p=0;\ngets(a) ;\n//printf(\"1. %s\\n\",a);\n //printf(\"2. %c %c\\n\",a[0],a[1]);\nint b=strlen(a);\nstrcpy(b1,a);\n//printf(\"3. %s\\n\",b1);\nint i,temp;\nfor(i=0;i<b;i++){\n    if(a[i]%2==0){\n        //printf(\"4. %c %c\\n\",b1[i],b1[b-1]);\n        temp=b1[i];\n        b1[i]=b1[b-1];\n        b1[b-1]=temp;\n        //printf(\"5. %c %c\\n\",b1[i],b1[b-1]);\n        //printf(\"6. %s\\n\",b1);\n        i1[p]=atoi(b1);\n        //printf(\"7. %d\\n\",i1[p]);\n        //printf(\"\\n\");\n        p++;\n        strcpy(b1,a);\n\n    }\n}\nif(!p){\n    printf(\"-1\");\n    return 0;\n}\nint biggest=i1[0];\nfor(i=0;i<p;i++){\n    if(i1[i]>biggest){\n        biggest=i1[i];\n    }\n}\nprintf(\"%d\",biggest);\n}\n", "fixed": "\n#include<stdio.h>\n#include <stdlib.h>\n#include<string.h>\nint main(){\n//2;39\nchar a [1000001],temp;int biggest ,p=-1;\ngets(a) ;\n\n//printf(\"1. %s\\n\",a);\n //printf(\"2. %c %c\\n\",a[0],a[1]);\nint b=strlen(a);\n\n//printf(\"%d\\n\",a1);\n//strcpy(b1,a);b1\n\n//printf(\"3. %s\\n\",b1);\nint i;\nfor(i=0;i<b;i++){\n\n    if(a[i]%2==0){\n            p=i;\n        //printf(\"4. %c \\n\",a[i]);\n        if(a[i]<=a[b-1]){\n            biggest=i;\n          //  printf(\"4. %c  %d\\n\",a[i],biggest);\n            break;\n\n        }\n\n        //printf(\"5. %c %c\\n\",b1[i],b1[b-1]);\n        //printf(\"6. %s\\n\",b1);\n\n        //printf(\"7. %d\\n\",i1[p]);\n        //printf(\"\\n\");temp=b1[i];\n\n        //strcpy(b1,a); temp=a[i];\n\n       // printf(\"1. %s\\n\",a);\n\n    }\n}\nif(p==-1){\n    printf(\"-1\");\n    return 0;\n}\nif(i==b){\n    biggest=p;\n}\n temp=a[biggest];\n        a[biggest]=a[b-1];\n        a[b-1]=temp;\nprintf(\"%s\",a);\n}\n\n\n\n\n\n\n"}
{"similarity_score": 0.9574603174603175, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "1d2d69a6caf7cc3e983f630a9bd658a8", "bug_code_uid": "660111cc05aaed6bbb169f08eb0d467a", "src_uid": "14a56443e48c52c118788bd5c0031b0c", "apr_id": "25c0e8ba889fd213ce71e26af1f905ad", "difficulty": 1500, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid swap(int *a,int *b)\n{\n    int *t=a;\n    a=b;\n    b=a;\n}\nint main()\n{\n    int n,m,i,j,x,y,z,p,a,b;\n    scanf(\"%d %d %d %d %d %d\",&n,&m,&x,&y,&z,&p);\n    x=x%4;\n    y=y%2;\n    z=z%4;\n    int a1,b1,n1,m1,n2,m2;\n    for(i=0;i<p;i++)\n    {\n        n1=n;m1=m;\n        scanf(\"%d %d\",&a,&b);\n        for(j=1;j<=x;j++)\n        {\n            b1=n1-a+1;\n            a1=b;\n            swap(&n1,&m1);\n            a=a1;b=b1;\n            //printf(\"%d %d\\n\",a,b);\n        }\n        if(y==1)\n        {\n            b=m1-b+1;\n        }\n        //printf(\"%d %d\\n\",a,b);\n        for(j=1;j<=z;j++)\n        {\n            b1=a;\n            a1=m1-b+1;\n            swap(&n1,&m1);\n            a=a1;b=b1;\n            //printf(\"%d %d\\n\",a,b);\n        }\n        printf(\"%d %d\\n\",a,b);\n    }\n}\n", "fixed": "#include<stdio.h>\n\nvoid swap(int *a,int *b)\n{\n    int t=*a;\n    *a=*b;\n    *b=t;\n}\nint main()\n{\n    int n,m,i,j,x,y,z,p,a,b;\n    scanf(\"%d %d %d %d %d %d\",&n,&m,&x,&y,&z,&p);\n    x=x%4;\n    y=y%2;\n    z=z%4;\n    int a1,b1,n1,m1;\n    for(i=0;i<p;i++)\n    {\n        n1=n;m1=m;\n        scanf(\"%d %d\",&a,&b);\n        for(j=1;j<=x;j++)\n        {\n            b1=n1-a+1;\n            a1=b;\n            swap(&n1,&m1);\n            a=a1;b=b1;\n            //printf(\"%d %d\\n\",n1,m1);\n        }\n        if(y==1)\n        {\n            b=m1-b+1;\n        }\n        //printf(\"%d %d\\n\",a,b);\n        for(j=1;j<=z;j++)\n        {\n            b1=a;\n            a1=m1-b+1;\n            swap(&n1,&m1);\n            a=a1;b=b1;\n            //printf(\"%d %d\\n\",n1,m1);\n        }\n        printf(\"%d %d\\n\",a,b);\n    }\n}\n"}
{"similarity_score": 0.9993552546744036, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0e876c4b1e46116afb62671fd80b5e2c", "bug_code_uid": "05663c0d27fabc6a650703960a348b6b", "src_uid": "5fcc22cdc38693723d8a9577d685db12", "apr_id": "bb3cc2ace86feb1722f4e86d0ecd6be5", "difficulty": 1000, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    int a[100000];\n    int b[100000] = {0};\n    char s[100001];\n    scanf(\"%d\",&n);\n    scanf(\" %s\", s);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0,j=0;i <=n; i++)\n    {\n        if(b[j] == 1)\n        {\n            printf(\"INFINITE\\n\");\n            return 0;\n        }\n        b[j] = 1;\n\n        if(s[j] == '<')\n        {\n            if(j - a[j] < 0)\n            {\n                printf(\"FINITE\\n\");\n                return 0;\n            }\n            j = j-a[j];\n        }\n        else\n        {\n            if(j + a[j] > n)\n            {\n                printf(\"FINITE\\n\");\n                return 0;\n            }\n            j = j+a[j];\n        }\n    }\n\n    printf(\"INFINITE\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    int a[100000];\n    int b[100000] = {0};\n    char s[100001];\n    scanf(\"%d\",&n);\n    scanf(\" %s\", s);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0,j=0;i <=n; i++)\n    {\n        if(b[j] == 1)\n        {\n            printf(\"INFINITE\\n\");\n            return 0;\n        }\n        b[j] = 1;\n\n        if(s[j] == '<')\n        {\n            if(j - a[j] < 0)\n            {\n                printf(\"FINITE\\n\");\n                return 0;\n            }\n            j = j-a[j];\n        }\n        else\n        {\n            if(j + a[j] >= n)\n            {\n                printf(\"FINITE\\n\");\n                return 0;\n            }\n            j = j+a[j];\n        }\n    }\n\n    printf(\"INFINITE\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9531051964512041, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "24b4abff99cbcf799325c9a9cab04a93", "bug_code_uid": "3208406452bc06749fe6f435ffdae144", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "e025dfb8f301c372cad197c539e70227", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char S[200001];\n    char T[200001];\n    int lenS, lenT, ans;\n    scanf(\"%s %s\", S, T);\n    lenS = strlen(S);\n    lenT = strlen(T);\n    ans = lenS + lenT;\n    for(int i = lenS - 1, j = lenT - 1; i >= 0 && j >= 0; --i, --j) {\n        if(S[i] == T[j]) {\n            ans -= 2;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char S[200001];\n    char T[200001];\n    int lenS, lenT, ans;\n    scanf(\"%s %s\", S, T);\n    lenS = strlen(S);\n    lenT = strlen(T);\n    ans = lenS + lenT;\n    for(int i = lenS - 1, j = lenT - 1; i >= 0 && j >= 0; --i, --j) {\n        if(S[i] != T[j]) {\n            break;\n        }\n        ans -= 2;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9838107098381071, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "90a757c0a541d727d73f8e26c76afbd3", "bug_code_uid": "61ab90a4e811fb2acb409e828be2d11c", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "775b9774e453d0807f5b1c8fdb28a488", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int games,i,counta=0,c=0;\n    char win;\n    scanf(\"%d\",&games);\n    for(i=0;i<=games;i++)\n    {\n      scanf(\"%c\",&win);\n      {\n      if(win=='A')\n      {\n      counta++;\n      }\n      else if(win=='D')\n      {\n          c++;\n      }\n      }\n\n}\nif(counta>c)\n{\n    printf(\"Ant on\");\n\n}\nelse if(c>counta)\n    printf(\"Danik\");\nelse\n    printf(\"Freindship\");\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int games,i,counta=0,c=0;\n    char win;\n    scanf(\"%d\",&games);\n    for(i=0;i<=games;i++)\n    {\n      scanf(\"%c\",&win);\n      {\n      if(win=='A')\n      {\n      counta++;\n      }\n      else if(win=='D')\n      {\n          c++;\n      }\n      }\n\n}\nif(counta>c)\n{\n    printf(\"Anton\\n\");\n\n}\nelse if(c>counta)\n    printf(\"Danik\\n\");\nelse\n    printf(\"Friendship\\n\");\n\nreturn 0;\n}\n"}
{"similarity_score": 0.7579529737206085, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "fda38d4de76db278952846a2ec352e11", "bug_code_uid": "8fd234064858adc4411bfbf53beba30a", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "7d7709ebe55a8871d623cacd3933ad08", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,k,f[1001],t[1001],i,j,max=0,p;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d %I64d\",&f[i],&t[i]);\n         if(t[i]>k){a[i]=f[i]-(t[i]-k);}\n         else{a[i]=f[i];}\n         if(i==0)max=a[0];\n         if(max<a[i]){max=a[i];}\n    }\n    printf(\"%I64d\",max);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,k,f,t,i,j,max=-4294967296,p;\n    scanf(\"%I64d %I64d\",&n,&k);\n    long long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d %I64d\",&f,&t);\n         if(t>k){a[i]=f-(t-k);}\n         else{a[i]=f;}\n         \n        if(a[i]>max){max=a[i];}\n     }\n    printf(\"%I64d\",max);\n    return 0;\n}"}
{"similarity_score": 0.7101449275362319, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0fe1ed71ab3458e5443bb164bc1fb4e4", "bug_code_uid": "9fb7c4beaefc2754868237db252bed32", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "050d0d3ef5644bd249c0e82e16afb5b1", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tgetchar();\n\t\n\tint i;\n\tdouble temp, percent = 0;\n\tfor(i = 0; i < n; i++) {\n\t\tscanf(\"%lf\", &temp);\n\t\tgetchar();\n\t\tpercent += temp;\n\t}\n\t\n\tdouble final_percent = percent/n;\n\t\n\tprintf(\"%lf\\n\", final_percent);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tgetchar();\n\t\n\tint i;\n\tfloat temp, percent = 0;\n\tfor(i = 0; i < n; i++) {\n\t\tscanf(\"%f\", &temp);\n\t\tgetchar();\n\t\tpercent += temp;\n\t}\n\t\n\tfloat final_percent = percent/n;\n\t\n\tprintf(\"%f\\n\", final_percent);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.99609375, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "81315e12678f3c2ad643242095c80ba2", "bug_code_uid": "48b1fb36c127c38a73b8defe41d6a7df", "src_uid": "cdcf95e29d3260a07dded74286fc3798", "apr_id": "17a78fdc7a39ed4a77ceccaf5c753a47", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main() {\r\n\tint time;\r\n\tscanf(\"%d\", &time);\r\n\twhile (time--) {\r\n\r\n\r\n\t\tint n, mid, tp;\r\n\t\tscanf(\"%d \", &n);\r\n\r\n\t\tif (n == 3)\r\n\t\t{\r\n\t\t\tprintf(\"-1\");\r\n\t\t\tgoto next;\r\n\t\t}\r\n\t\tif (n % 2 == 0)\r\n\t\t{\r\n\t\t\tfor (int i = n; i > 0; i--) {\r\n\t\t\t\tprintf(\"%d \", i);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmid = (n + 1) / 2;\r\n\t\t\tfor (tp = n; tp > mid; tp--) {\r\n\t\t\t\tprintf(\"%d \", tp);\r\n\t\t\t}\r\n\t\t\tfor (int i = 1; i <= tp; i++) {\r\n\t\t\t\tprintf(\"%d \", i);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\r\n\t\t}\r\n\tnext:;\r\n\t}\r\n\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main() {\r\n\tint time;\r\n\tscanf(\"%d\", &time);\r\n\twhile (time--) {\r\n\r\n\r\n\t\tint n, mid, tp;\r\n\t\tscanf(\"%d\", &n);\r\n\r\n\t\tif (n == 3)\r\n\t\t{\r\n\t\t\tprintf(\"-1 \\n\");\r\n\t\t\tgoto next;\r\n\t\t}\r\n\t\tif (n % 2 == 0)\r\n\t\t{\r\n\t\t\tfor (int i = n; i > 0; i--) {\r\n\t\t\t\tprintf(\"%d \", i);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmid = (n + 1) / 2;\r\n\t\t\tfor (tp = n; tp > mid; tp--) {\r\n\t\t\t\tprintf(\"%d \", tp);\r\n\t\t\t}\r\n\t\t\tfor (int i = 1; i <= tp; i++) {\r\n\t\t\t\tprintf(\"%d \", i);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\r\n\t\t}\r\n\tnext:;\r\n\t}\r\n\r\n}"}
{"similarity_score": 0.40653873489694387, "equal_cnt": 21, "replace_cnt": 12, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "9d0415959fecf78729b3b4e6947c0d81", "bug_code_uid": "41f626bd36e1c7f0524536bb59999909", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "537247209c03a8c2314413e86aaae4a1", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <string.h>\n\n\nint main()\n{\n    int n,i,j,flag,a,b;\n    char temp[10];\n    char term[100][10]={0};\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        a=0,b=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%s\",&term[i]);\n            if(i>0&&strcmp(term[i],term[0]==0))\n            {\n                a++;\n            }\n            else if(i>0)\n            {   flag=i;\n                b++;}\n        }\n        if(a>b)\n        printf(\"%s\\n\",term[0]);\n        else printf(\"%s\\n\",term[flag]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,n,k=0,t=0,max;\n    char name[150][20];\n    char temp[150];\n     int win[101];\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        getchar();\n    for(i=0;i<n;i++)\n    {\n     scanf(\"%s\",name[i]);\n    }\n    for(i=0;temp[i]!='\\0';i++)\n    {\n        temp[i]='0';\n    }\n\n    for(i=0;i<101;i++)\n        win[i]=0;\n    for(i=0;i<n-1;i++)\n    {\n        k=1;\n        for(j=i+1;j<n;j++)\n        {\n            if((strcmp(name[i],temp)>0||strcmp(name[i],temp)<0)&&strcmp(name[i],name[j])==0)\n            {\n                win[i]=k;\n                k++;\n                strcpy(name[j],temp);\n            }\n        }\n    }\n    max=win[0];\n    for(i=1;i<n;i++)\n    {\n        if(win[i]>max)\n        {\n            max=win[i];\n            t=i;\n        }\n\n    }\n\n\n            puts(name[t]);\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.579172610556348, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "f379d49a105fa9889ce79c4d3dda79ff", "bug_code_uid": "c6ae5e874205a9b345cea17e30698338", "src_uid": "b69170c8377623beb66db4706a02ffc6", "apr_id": "11c74b801879ecdf4093aa59f38c3b9d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,count=0,way=0,t;\n    scanf(\"%d\",&t);\n    if(t>=1 && t<=10000)\n    {\n        while(count<t)\n        {\n        scanf(\"%d\",&n);\n        if(n>=1 && n<=2000000000)\n        {\n            for(i=n-1,j=1;i>j;i--,j++)\n            way++;\n                \n        }\n            \n             printf(\"%d\\n\",way);\n               way=0;\n            count++;\n            \n      }\n    }\n   \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,count=0,way=0,t;\n    scanf(\"%d\",&t);\n    if(t>=1 && t<=10000)\n    {\n        while(count<t)\n        {\n        scanf(\"%d\",&n);\n        if(n>=1 && n<=2000000000)\n        {\n                if(n%2==0)\n                {\n                    \n                \n            for(i=n/2,j=0;i>j;i--,j+=1/2)\n            way++;\n                    \n                    \n                }\n                \n               else\n                {\n                    \n                \n            for(i=n/2,j=0;i>j;i--,j+=1/2)\n            way++;\n                    \n                    \n                }\n                \n                \n                \n                \n        }\n          if(n%2==0)  \n            \n            printf(\"%d\\n\",way-1);\n           else\n              \n            printf(\"%d\\n\",way);\n           \n         \n               way=0;\n             \n            count++;\n            \n      }\n    }\n   \n    return 0;\n}"}
{"similarity_score": 0.9943820224719101, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "51dc5977b68cc743f2c76cf483f3d808", "bug_code_uid": "f32b1e307604da42175b4bb22e9f648e", "src_uid": "13611e428c24b94023811063bbbfa077", "apr_id": "f4d0996dbc457bcbb088107c37539b23", "difficulty": 800, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main() {\r\n    long long int t,i;\r\n    scanf(\"%lld\",&t);\r\n    int n[t],m[t];\r\n    for(i=0;i<t;i++) {\r\n        scanf(\"%d%d\",&n[i],&m[i]);\r\n        if((n[i]%2==0 && m[i]%2==0) || (n[i]%2!=0 && m[i]%2!=0)) {\r\n            printf(\"Tonya\\n\");\r\n        }\r\n        else {\r\n            printf(\"Burneka\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main() {\r\n    long long int t,i;\r\n    scanf(\"%lld\",&t);\r\n    int n[t],m[t];\r\n    for(i=0;i<t;i++) {\r\n        scanf(\"%d%d\",&n[i],&m[i]);\r\n        if((n[i]%2==0 && m[i]%2==0) || (n[i]%2!=0 && m[i]%2!=0)) {\r\n            printf(\"Tonya\\n\");\r\n        }\r\n        else {\r\n            printf(\"Burenka\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9991967871485944, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c6f1e4d52b74902dd61f70b2852746b6", "bug_code_uid": "4a63ebaceccff37726ab7603d634e03f", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "fb03cf522ffa2104a1d96aa222e9f10c", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n      int a[10],n,c=0,e=0,i;\n      scanf(\"%d\",&n);\n      for(i=0;i<n;i++)\n      {\n                      scanf(\"%d\",&a[i]);\n      }\n      for(i=0;i<n;i++)\n      {\n                      c+=a[i];\n      }\n      if((c%2)==0)\n      {\n            for(i=0;i<n;i++)\n            {\n                            if(a[i]%2==0)\n                            e++;\n            }\n            printf(\"%d\",e);\n      }\n      else\n      {\n          for(i=0;i<n;i++)\n          {\n                          if(a[i]%2!=0)\n                          e++;\n          }\n          printf(\"%d\",e);\n      }\n      return 0;\n}      \n", "fixed": "#include<stdio.h>\nmain()\n{\n      int a[101],n,c=0,e=0,i;\n      scanf(\"%d\",&n);\n      for(i=0;i<n;i++)\n      {\n                      scanf(\"%d\",&a[i]);\n      }\n      for(i=0;i<n;i++)\n      {\n                      c+=a[i];\n      }\n      if((c%2)==0)\n      {\n            for(i=0;i<n;i++)\n            {\n                            if(a[i]%2==0)\n                            e++;\n            }\n            printf(\"%d\",e);\n      }\n      else\n      {\n          for(i=0;i<n;i++)\n          {\n                          if(a[i]%2!=0)\n                          e++;\n          }\n          printf(\"%d\",e);\n      }\n      return 0;\n}      \n"}
{"similarity_score": 0.8292046936114733, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "216041e8b648bca9eacc49bbbfcf6399", "bug_code_uid": "d448cda692a29e4402868dbe2e669892", "src_uid": "159b9c743d6d8792548645b9f7be2753", "apr_id": "f42aec3668a15a6b72ea7aea251b0616", "difficulty": 800, "tags": ["brute force", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tlong long max=-2000000000,a[n],i,s=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%11d\",&a[i]);\n\t\t\tif(a[i]>max)\n\t\t\t{\n\t\t\t\tmax=a[i];\n\t\t\t\t\n\t\t\t}\n\t\t\ts=s+a[i];\n\t\t}\n\t\tdouble r,Res;\n\t\tr=(s-max)/(double)(n-1);\n\t\tRes=(double)max+r;\n\t\tprintf(\"%.9f\\n\",Res);\n\t}\n\treturn 0;\n}\n \t\t\t\t \t\t  \t\t\t   \t \t\t\t\t \t  \t\t", "fixed": "#include<stdio.h> \nint main()\n{\n\tint t,j;\n\tscanf(\"%d\",&t);\n\tfor(j=1;j<=t;j++)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tlong long max=-2000000000,i,s=0,a[n];\n\t\tfor(i=0;i<n;i++)\n\t\t{    \n\t\t\tscanf(\"%lld\",&a[i]);\n\t\t\tif(a[i]>max)\n\t\t\t{\n\t\t\t\tmax=a[i] ;\n\t\t\t}\n\t\t\ts=s+a[i];\n\t\t\t\n\t\t}\n\t\tdouble r,R;\n\t\tr=(s-max)/(double)(n-1);\n\t\tR=(double)max+r;\n\t\tprintf(\"%.9f\\n\",R);\n\t}\n\treturn 0;\n}\n\t\t\t        \t\t\t\t \t\t\t\t   \t \t\t\t\t"}
{"similarity_score": 0.9532293986636972, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cfc313d83583dd6b65f3a9606380b03b", "bug_code_uid": "7b875c37b787c795c3c4fa7ed26b4218", "src_uid": "d00696cb27c679dda6e2e29314a8432b", "apr_id": "e649a5c37b88c956de127bcb2e453ffd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\n\nlong s[n];\n\nfor(int i=0;i<n;i++)\n   {\n    scanf(\"%ld\",&s[i]);\n     if(s[i]%2==0)\n         s[i]--;\n      else\n         s[i]++;\n    }\nfor(int i=0;i<n;i++)\n    printf(\"%ld \",s[i]);\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n;\nscanf(\"%d\",&n);\n\nlong s[n];\n\nfor(int i=0;i<n;i++)\n   {\n    scanf(\"%ld\",&s[i]);\n     if(s[i]%2==0)\n         s[i]--;\n      \n    }\nfor(int i=0;i<n;i++)\n    printf(\"%ld \",s[i]);\n\n}"}
{"similarity_score": 0.9945945945945946, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6ca09b5fbd51ffee2c27f01dd4e4061d", "bug_code_uid": "cd48aa61e6e23226e280f2965a700419", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "08c77bd9263c36e6039ec642b4d8173e", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint t,a,b;\nscanf(\"%d\",&t);\nfor(int i=0;i<t;i++)\n{\n        scanf(\"%d%d\",&a,&b);\n        a%=b;\n        a ? printf(\"%d\\n\",b-a) : printf(\"0\") ;\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint t,a,b;\nscanf(\"%d\",&t);\nfor(int i=0;i<t;i++)\n{\n        scanf(\"%d%d\",&a,&b);\n        a%=b;\n        a ? printf(\"%d\\n\",b-a) : printf(\"0\\n\") ;\n}\nreturn 0;\n}"}
{"similarity_score": 0.27246376811594203, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "3c19aa2afc5e3973db354633f69d446d", "bug_code_uid": "bbce01b16585c55ad6d4c71e1b2fd1ba", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "bd00e7a71937586c3094a76b5b9af446", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x1,x2,x3,x4,y1,y2,y3,y4;\n    scanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n    if(abs(x1-x2)>1||abs(y1-y2)>1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else\n    {\n        if(x1==x2&&y1!=y2)\n        {\n            x3=x1+1;\n            x4=x2+1;\n            printf(\"%d %d %d %d\",x3,y1,x4,y2);\n        }\n        else if(x1!=x2&&y1==y2)\n        {\n            y3=y1+1;\n            y4=y2+1;\n            printf(\"%d %d %d %d\",x1,y3,x2,y4);\n        }\n        else if(x1!=x2&&y1!=y2)\n        {\n            y3=y1+1;\n            y4=y2-1;\n            printf(\"%d %d %d %d\",x1,y3,x2,y4);\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int x1, x2, y1, y2;\n    scanf(\"%d %d %d %d\", &x1, &y1, &x2, &y2);\n    if(x1==x2)\n        printf(\"%d %d %d %d\", x1+y2-y1, y1, x2+y2-y1, y2);\n    else if(y1==y2)\n        printf(\"%d %d %d %d\", x1, y1+x2-x1, x2, y2+x2-x1);\n    else if((x1-x2)==(y1-y2) || (x1-x2)==(y2-y1))\n        printf(\"%d %d %d %d\", x1, y2, x2, y1);\n    else\n        printf(\"-1\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.43983402489626555, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "7b4b7a3b99293bee33e792200056b10c", "bug_code_uid": "17768f7e59046bb931e97afb2ba7e23f", "src_uid": "c01fc2cb6efc7eef290be12015f8d920", "apr_id": "eea72292dac7e1d88d78b26bddf9da3c", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main() {\n\tint n,m,i,k;\n\tscanf(\"%d\",&n);\n\tchar a[n];\n\tscanf(\"%c\",a);\n\tfor (i=0;i<n;i++) {\n\t\tint x=a[i];\n\t\tint y=a[i+1];\n\t\tif(x>y) {\n\t\t\tm=i;\n\t\t\tk=1;\n\t\t\tbreak;\n\t}}\n\tif(k==1) {\n\t\tfor(i=0;i<n;i++) {\n\t\t\tif(i!=m) {\n\t\t\t\tprintf(\"%c\",a[i]);}\n\t\t\t}\n\t\t}\n\telse {\n\t\tfor(i=0;i<n-1;i++) {\n\t\tprintf(\"%c\",a[i]);\t\n\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\n\t\nint main(){\n\tint l,i,k,c;\n\tc=0;\n\tscanf(\"%d\",&l);\n\tchar s[l];\n\tscanf(\"%s\",s);\n\tfor(i=0;i<l-1;i++){\n\t\tint a=s[i];\n\t\tint b=s[i+1];\n\t\tif(a>b){\n\t\t\tk=i;\n\t\t\tc=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(c==1){\n\t\tfor(i=0;i<l;i++){\n\t\t\tif(i!=k){\n\t\t\t\tprintf(\"%c\",s[i]);\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tfor(i=0;i<l-1;i++){\n\t\t\tprintf(\"%c\",s[i]);\n\t\t\t\n\t\t}\n\t}\n\t\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.5489051094890511, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "fb57e82f17df40b5f93b19f40e87c66a", "bug_code_uid": "ba123e058220dfa5393bea048a9a97c0", "src_uid": "7226a7d2700ee52f52d417f404c42ab7", "apr_id": "5a121e62420e9448f7482b6d51c7629a", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\nint main() {\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    int s;\r\n    int i;\r\n    while(t-->0)\r\n    {\r\n        scanf(\"%d %d\",&n,&s);\r\n        i=0;\r\n        for(i=0;i<=n;i++)\r\n        {\r\n            if(((n-1)*(n-i+1)+i*n*n)>=s)\r\n            {\r\n                break;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",i);\r\n    }\r\n        \r\n        \r\n    \r\n    return 0;\r\n}", "fixed": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    long long s,n;\r\n    while(t-->0)\r\n    {\r\n        scanf(\"%lld %lld\",&n,&s);\r\n        printf(\"%lld\\n\",(s/(n*n)));\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9817295980511571, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "bf05cb653706dbb29730a43b8f9cc986", "bug_code_uid": "33aa029355226a30a11410ebaef60dd7", "src_uid": "4ed5b8055ce48b5ad4e43ed4b06d1b07", "apr_id": "7bd95640852a8b5e2b30cbdffe0e5c54", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nmain(){\n\tint n,m,k; // n = #days, m = #bowls , k = #cups\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tint i;\n\tint washCount = 0;\n\tint dish;\n\tint a[n];\n\tfor(i=0 ; i<n ; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0 ; i<n ; i++){\n\t\tif(a[i] == 2){\n\t\t\tif(k > 0) k--;\n\t\t\telse if(m > 0) m--;\n\t\t\telse washCount++;\n\t\t}\n\t\telse if(a[i] == 1){\n\t\t\tif(m > 0) m--;\n\t\t\telse washCount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",washCount);\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n,m,k; // n = #days, m = #bowls , k = #cups\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tint i;\n\tint washCount = 0;\n\tint dish;\n\tint a[n];\n\tfor(i=0 ; i<n ; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0 ; i<n ; i++){\n\t\tif(a[i] == 2){\n\t\t\tif(k > 0) k--;\n\t\t\telse if(m > 0) m--;\n\t\t\telse washCount++;\n\t\t}\n\t\telse if(a[i] == 1){\n\t\t\tif(m > 0) m--;\n\t\t\telse washCount++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",washCount);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9682051282051282, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e317c3fc8eb4826c51f29d2224bafa6e", "bug_code_uid": "a082aa216838dd71eefa567578a29e84", "src_uid": "5d5dfa4f129bda46055fb636ef33515f", "apr_id": "cf34f09cd6580b8b461cbec0d397e3b6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int p, n;\n    scanf (\"%d %d\", &p, &n);\n\n    int i;\n    int h[310];\n\n    int a;\n\n    for ( i = 0 ; i < n ; i++ )\n    {\n        h[i] = -1;\n    }\n\n    for ( i = 0 ; i < n ; i++ )\n    {\n        scanf (\"%d\", &a);\n\n        if ( h[a%p] == -1 )\n        {\n            h[a%p] = a;\n        }\n\n        else\n        {\n            printf (\"%d\", i+1);\n            break;\n        }\n    }\n\n    if ( i == n )\n    {\n        printf (\"-1\");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int p, n;\n    scanf (\"%d %d\", &p, &n);\n\n    int i, k;\n    int h[310];\n\n    int a;\n\n    for ( i = 0 ; i < p ; i++ )\n    {\n        h[i] = -1;\n    }\n\n    for ( i = 0 ; i < n ; i++ )\n    {\n        scanf (\"%d\", &a);\n\n        k = a%p;\n\n        if ( h[k] == -1 )\n        {\n            h[k] = a;\n        }\n\n        else\n        {\n            printf (\"%d\", i+1);\n            break;\n        }\n    }\n\n    if ( i == n )\n    {\n        printf (\"-1\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9840796019900497, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4322a6072ec2dd2a508848dc9e8ef063", "bug_code_uid": "5a6a72b95d62ff61f85264028aec71b5", "src_uid": "541039ef3c9b8251b758608811533e06", "apr_id": "e00e563b5b5349f463599d3488c8d6b9", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nmain()\n{\n    int t,c;\n    scanf(\"%d\",&c);\n    for(t=0;t<c;t++)\n    {\n        long long a,b,r,count=0,temp;\n        scanf(\"%lld %lld\",&a,&b);\n        if(a==b)\n            printf(\"0\\n\");\n        else\n        {\n            if(a<b)\n            {\n                temp=a;\n                a=b;\n                b=temp;\n            }\n            if(a%b!=0)\n                printf(\"-1\\n\");\n            else\n            {\n                r=a/b;\n                while(r%8==0)\n                {\n                    r=r/8;\n                    count++;\n                }\n                while(r%4==0)\n                {\n                    r=r/4;\n                    count++;\n                }\n                while(r%2==0)\n                {\n                    r=r/2;\n                    count++;\n                }\n                if(count==0)\n                    printf(\"-1\\n\");\n                else\n                    printf(\"%lld\\n\",count);\n\n            }\n          }\n        }\n\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int t,c;\n    scanf(\"%d\",&c);\n    for(t=0;t<c;t++)\n    {\n        long long a,b,r,count=0,temp;\n        scanf(\"%lld %lld\",&a,&b);\n        if(a==b)\n            printf(\"0\\n\");\n        else\n        {\n            if(a<b)\n            {\n                temp=a;\n                a=b;\n                b=temp;\n            }\n            if(a%b!=0)\n                printf(\"-1\\n\");\n            else\n            {\n                r=a/b;\n                while(r%8==0)\n                {\n                    r=r/8;\n                    count++;\n                }\n                while(r%4==0)\n                {\n                    r=r/4;\n                    count++;\n                }\n                while(r%2==0)\n                {\n                    r=r/2;\n                    count++;\n                }\n                if(count==0 || r>=2)\n                    printf(\"-1\\n\");\n                else\n                    printf(\"%lld\\n\",count);\n\n            }\n          }\n        }\n\n\n        return 0;\n\n}\n"}
{"similarity_score": 0.9879211697393515, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e2815a73e3f18abf3127a91cef81b5c1", "bug_code_uid": "3e2109abe0dd0ea468b73afc9493ea4e", "src_uid": "b4fcfedc8e76afd0043b026eb3132582", "apr_id": "3ffbb91d44a54e12854cfa06425d3af8", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint comp(const void* a,const void* b)\r\n{\r\n\treturn (*(int*)a-*(int*)b);\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint x,res=0;\r\n\t\tscanf(\"%d\",&x);\r\n\t\tint arr[x];\r\n\t\tfor(int i=0;i<x;i++)\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\tint count=1,max_count=1;\r\n\t\tqsort(arr,x,sizeof(int),comp);\r\n\t\tfor(int i=0;i<x-1;i++)\r\n\t\t{\r\n\t\t\tif(arr[i]==arr[i+1])\r\n\t\t\t\tcount++;\r\n\t\t\telse if(count>max_count)\r\n\t\t\t{\r\n\t\t\t\tmax_count=count;\r\n\t\t\t\tcount=1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tcount=1;\r\n\t\t\t\t\r\n\t\t}\r\n\t\tif(count>max_count)\r\n\t\t\tmax_count=count;\r\n\t\t// while(max_count<x)\r\n\t\t{\r\n\t\t\tif((x-max_count)>max_count)\r\n\t\t\t{\r\n\t\t\t\tres += 1+max_count;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tres +=1+(x-max_count);\r\n\t\t\t}\r\n\t\t\tmax_count+=res;\r\n\t\t}\r\n\r\n\t\tprintf(\"%d\\n\",count);\r\n\t\tt--;\r\n\t}\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint comp(const void* a,const void* b)\r\n{\r\n\treturn (*(int*)a-*(int*)b);\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint x,res=0;\r\n\t\tscanf(\"%d\",&x);\r\n\t\tint arr[x];\r\n\t\tfor(int i=0;i<x;i++)\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\tint count=1,max_count=1;\r\n\t\tqsort(arr,x,sizeof(int),comp);\r\n\t\tfor(int i=0;i<x-1;i++)\r\n\t\t{\r\n\t\t\tif(arr[i]==arr[i+1])\r\n\t\t\t\tcount++;\r\n\t\t\telse if(count>max_count)\r\n\t\t\t{\r\n\t\t\t\tmax_count=count;\r\n\t\t\t\tcount=1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tcount=1;\r\n\t\t\t\t\r\n\t\t}\r\n\t\tif(count>max_count)\r\n\t\t\tmax_count=count;\r\n\t\twhile(max_count<x)\r\n\t\t{\r\n\t\t\tif((x-max_count)>max_count)\r\n\t\t\t{\r\n\t\t\t\tres += 1+max_count;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tres +=1+(x-max_count);\r\n\t\t\t}\r\n\t\t\tmax_count*=2;\r\n\t\t}\r\n\r\n\t\tprintf(\"%d\\n\",res);\r\n\t\tt--;\r\n\t}\r\n\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9984301412872841, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ba49fa09dec4b4ef0873d3fc6f042b91", "bug_code_uid": "002010b4fef593d6f2a6d6971417d036", "src_uid": "e95e2d21777c1d686bede1b0a5dacbf5", "apr_id": "2bf7c512fe86edd36ea1b0a93f1ba210", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include<stdio.h>\r\n#include<string.h> \r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\\n\", &t);\r\n\tfor(int i=0;i<=t-1;i++) {\r\n\t\tchar s[1000];\r\n\t\tscanf(\"%s\\n\", &s);\r\n\t\tint l=strlen(s);\r\n\t\tif(strstr(s,\"aba\")||strstr(s,\"bab\")||s[0]!=s[1]||s[l-1]!=s[l-2]) {\r\n\t\t\tprintf(\"NO\\n\"); \r\n\t\t} else {\r\n\t\t\tprintf(\"YES\\n\"); \r\n\t\t} \r\n\t} return 0; \r\n} ", "fixed": "#include<stdio.h>\r\n#include<string.h> \r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\\n\", &t);\r\n\tfor(int i=0;i<=t-1;i++) {\r\n\t\tchar s[1000];\r\n\t\tscanf(\"%s\\n\", &s);\r\n\t\tint l=strlen(s);\r\n\t\tif(strstr(s,\"aba\")||strstr(s,\"bab\")||s[0]!=s[1]||s[l-1]!=s[l-2]) {\r\n\t\t\tprintf(\"NO\\n\"); \r\n\t\t} else {\r\n\t\t\tprintf(\"YES\\n\"); \r\n\t\t} \r\n\t} return 0; \r\n} "}
{"similarity_score": 0.6712898751733704, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "a8e2302a251105be7f64d685f1be99ff", "bug_code_uid": "aebceac1241156404b84063de12f0754", "src_uid": "3adc75a180d89077aa90bbe3d8546e4d", "apr_id": "0887aaa57e3c7a101e4e2b3b1dde8546", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define MAX_SIZE 100010\n#define MIN(A,B) ((A)<(B)?(A):(B))\nchar a[MAX_SIZE];\nchar b1[MAX_SIZE], b2[MAX_SIZE];\nint cmp1(char *s, char *p)\n{\n\tint i = 0, count = 0;\n\tint len = strlen(s);\n\twhile(i < len) {\n\t\tif(p[i] == s[i]) { i++; continue; }\n\t\telse {\n\t\t\tint j = i + 1;\n\t\t\twhile(j < len) \n\t\t\t\tif(s[j] != p[j] && p[j] != p[i]) break;\n\t\t\t\telse j++;\n\t\t\tif(j == len) break;\n\t\t\telse { count++; char temp = p[i]; p[i] = p[j]; p[j] = temp; }\n\t\t}\n\t}\n\treturn count;\n}\nint cmp2(char *s, char *p)\n{\n\tint len = strlen(s);\n\tint count = 0;\n\tfor(int i=0; i<len; i++) if(s[i] != p[i])\n\t\tcount++;\n\treturn count;\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", a);\n\tb1[0] = 'r'; b2[0] = 'b';\n\tfor(int i=1; i<n; i++) {\n\t\tif(b1[i-1] == 'r') b1[i] = 'b';\n\t\telse if(b1[i-1] == 'b') b1[i] = 'r';\n\t\tif(b2[i-1] == 'b') b2[i] = 'r';\n\t\telse if(b2[i-1] == 'r') b2[i] = 'b';\n\t}\n\tint count1, count2;\n\tint count3, count4;\n\tcount1 = cmp1(a, b1); count2 = cmp2(a, b1);\n\tcount3 = cmp1(a, b2); count4 = cmp2(a, b2);\n\tprintf(\"%d\\n\", MIN(count1+count2, count3+count4));\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define MAX_SIZE 100010\n#define MIN(A,B) ((A)<(B)?(A):(B))\nchar a[MAX_SIZE];\nchar b1[MAX_SIZE], b2[MAX_SIZE];\nint cmp1(char *s, char *p)\n{\n\tint i = 0, count = 0;\n\tint len = strlen(s);\n\tfor(i=0; i<len; i++) if(p[i] == 'b' && p[i] != s[i])\n\t\tcount++;\n\treturn count;\n}\nint cmp2(char *s, char *p)\n{\n\tint i = 0, count = 0;\n\tint len = strlen(s);\n\tfor(i=0; i<len; i++) if(p[i] == 'r' && p[i] != s[i])\n\t\tcount++;\n\treturn count;\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", a);\n\tb1[0] = 'r'; b2[0] = 'b';\n\tfor(int i=1; i<n; i++) {\n\t\tif(b1[i-1] == 'r') b1[i] = 'b';\n\t\telse if(b1[i-1] == 'b') b1[i] = 'r';\n\t\tif(b2[i-1] == 'b') b2[i] = 'r';\n\t\telse if(b2[i-1] == 'r') b2[i] = 'b';\n\t}\n\tint count1, count2;\n\tint count3, count4;\n\tint res1, res2;\n\tcount1 = cmp1(a, b1); count2 = cmp2(a, b1);\n\tres1 = MIN(count1, count2); res1 += (count1 + count2) - 2 * MIN(count1, count2);\n\tcount3 = cmp1(a, b2); count4 = cmp2(a, b2);\n\tres2 = MIN(count3, count4); res2 += (count3 + count4) - 2 * MIN(count3, count4);\n\tprintf(\"%d\\n\", MIN(res1, res2));\n\treturn 0;\n}\n"}
{"similarity_score": 0.49902534113060426, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "7f9eca8e8f79f3284e4b34d2360137ab", "bug_code_uid": "2347c26aae27b8100427ab9e096b9b79", "src_uid": "2070955288b2e2cdbae728d8e7ce78ab", "apr_id": "69054072aa706c314745118e2cdcc212", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[1000000];\nint b[1000000];\nint c[1000000];\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<m;i++)\n    scanf(\"%d\",&a[i]);\n    int count=0;\n    for(int i=0;i<m;++i)\n    {\n        if (b[a[i]]==0) \n       {b[a[i]]=1; count++;}\n       //printf(\"%d\\n\",count);\n       if(count==n)\n       {\n           c[i]=1;\n           for(int i=1;i<=n;++i)\n           b[i]=0;\n           count=0;\n          // printf(\"%d\\n\",i);\n       }  \n    }\n\n    for(int i=0;i<m;++i)\n    printf(\"%d\",c[i]);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint a[100001];\nint b[100001];\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<m;i++)\n    scanf(\"%d\",&a[i]);\n    int count=0;\n    for(int i=0;i<m;++i)\n    {\n        if (b[a[i]]==0) \n       {count++;}\n       b[a[i]]++;\n       \n       if(count==n)\n       {\n           printf(\"1\");\n           for(int i=1;i<=n;++i)\n           {\n               b[i]--;\n               if(b[i]==0)count--;\n           }\n       }\n       else printf(\"0\");\n\n  \n    }\n\n\n    return 0;\n}"}
{"similarity_score": 0.9356343283582089, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b46659bfa5f1316e73dc24a34e6c7203", "bug_code_uid": "a40c5f0a10cbd0caf76a2f3404a9a112", "src_uid": "ea0de6955a0ddf56980cb1ac7216e8b7", "apr_id": "5dabc094e1c5924ec48a65e7160199b6", "difficulty": 2100, "tags": ["dp", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAXN 200\n#define MAXK 200\n#define oo 1000000000\n\ntypedef long long int ll;\n\nint dp[MAXK][6000] = {0};\nint dp2[MAXK][6000] = {0};\nint a2[MAXN] = {0};\nint a5[MAXN] = {0};\n\nint min(int a, int b) {\n\treturn a < b ? a : b;\n}\n\nint max(int a, int b) {\n\treturn a > b ? a : b;\n}\n\nint f(ll x, ll n) {\n\tint res = 0;\n\twhile(x > 0 && x%n == 0) {\n\t\tx/=n;\n\t\tres++;\n\t}\n\treturn res;\n}\n\nint main() {\n\tint N, K;\n\tscanf(\"%d%d\", &N, &K);\n\tint i,j, k;\n\tll x;\n\tfor(i=0;i<N;i++) {\n\t\tscanf(\"%lld\", &x);\n\t\ta2[i] = f(x, 2);\n\t\ta5[i] = f(x, 5);\n\t}\n\tfor(j=0;j<=K;j++) {\n\t\tfor(k=0;k<6000;k++) {\n\t\t\tdp[j][k] = -oo;\n\t\t\tdp2[j][k] = -oo;\n\t\t}\n\t}\n\tdp[0][0] = 0;\n\tdp2[0][0] = 0;\n\tfor(i=0;i<N;i++) {\n\n\t\tfor(j=0;j<K;j++) {\n\t\t\tfor(k=0;k<6000;k++) {\n\t\t\t\tint j2 = j + 1, k2 = k + a5[i];\n\t\t\t\tif(k2 < 6000) {\n\t\t\t\t\tdp2[j2][k2] = max(dp2[j2][k2], dp[j][k]+a2[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(j=0;j<=K;j++) {\n\t\t\tfor(k=0;k<6000;k++) {\n\t\t\t\tdp[j][k] = dp2[j][k];\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tint res = 0;\n\n\tfor(j=0;j<=K;j++) {\n\t\tfor(k=0;k<6000;k++) {\n\t\t\tres = max(res, min(k,dp[j][k]));\n\t\t}\n\t}\n\tprintf(\"%d\\n\", res);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n#define MAXN 200\n#define MAXK 201\n#define oo 1000000000\n\ntypedef long long int ll;\n\nint dp[MAXK][6000] = {0};\nint dp2[MAXK][6000] = {0};\nint a2[MAXN] = {0};\nint a5[MAXN] = {0};\n\nint min(int a, int b) {\n\treturn a < b ? a : b;\n}\n\nint max(int a, int b) {\n\treturn a > b ? a : b;\n}\n\nint f(ll x, ll n) {\n\tint res = 0;\n\twhile(x > 0 && x%n == 0) {\n\t\tx/=n;\n\t\tres++;\n\t}\n\treturn res;\n}\n\nint main() {\n\tint N, K;\n\tscanf(\"%d%d\", &N, &K);\n\tint i,j, k;\n\tll x;\n\tfor(i=0;i<N;i++) {\n\t\tscanf(\"%lld\", &x);\n\t\ta2[i] = f(x, 2);\n\t\ta5[i] = f(x, 5);\n\t}\n\tfor(j=0;j<=K;j++) {\n\t\tfor(k=0;k<6000;k++) {\n\t\t\tdp[j][k] = -oo;\n\t\t\tdp2[j][k] = -oo;\n\t\t}\n\t}\n\tdp[0][0] = 0;\n\tdp2[0][0] = 0;\n\tfor(i=0;i<N;i++) {\n\n\t\tfor(j=0;j<K;j++) {\n\t\t\tfor(k=0;k<6000;k++) {\n\t\t\t\tint j2 = j + 1, k2 = k + a5[i];\n\t\t\t\tif(k2 < 6000) {\n\t\t\t\t\tdp2[j2][k2] = max(dp2[j2][k2], dp[j][k]+a2[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(j=0;j<=K;j++) {\n\t\t\tfor(k=0;k<6000;k++) {\n\t\t\t\tdp[j][k] = dp2[j][k];\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tint res = 0;\n\n\tfor(k=0;k<6000;k++) {\n\t\tres = max(res, min(k,dp[K][k]));\n\t}\n\n\tprintf(\"%d\\n\", res);\n\treturn 0;\n}"}
{"similarity_score": 0.6049723756906077, "equal_cnt": 29, "replace_cnt": 21, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "e9ec7f144eb9025d02c8d346c629b6fd", "bug_code_uid": "77a699f60904dbeb7abeb17e23f9b15c", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "856324d8174aa7ea1d5b909d5bd6c595", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,n,max;\r\n\tchar a[101]={0};\r\n\tscanf(\"%d\",&t);\r\n\tfor(int i = 0;i<t;i++)\r\n\t{\r\n\t\tmax = 0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tgetchar();\r\n\t\tfor(int i = 0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%c\",&a);\r\n        \tif(max<a[i])\r\n            max=a[i];\t\t\r\n\t\t}\r\n\t\tprintf(\"%c\\n\",max-'a'+1);\r\n    }\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,i,j,max;\r\n    int number;\r\n    char s[100]={0};\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        max=0;\r\n        scanf(\"%d\",&number);\r\n        getchar();\r\n        for(j=0;j<number;j++){\r\n            scanf(\"%c\",&s[j]);\r\n            if((int)s[j]>max){\r\n                max=s[j];\r\n            }\r\n        }\r\n        printf(\"%d\\n\",max-'a'+1);\r\n    }\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.3176328502415459, "equal_cnt": 25, "replace_cnt": 15, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "04e42438d7e1ee67460ee671b04494a4", "bug_code_uid": "fc74d2fd9086afc949622cadc7e6f3eb", "src_uid": "1fdba13aaa1a417a229817b40af7225f", "apr_id": "489cca4c8644b3ca8ba53f5e7651abf7", "difficulty": 1900, "tags": ["data structures", "dsu"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int n,q,i,j,a;\n    int consulta,x,y;\n    //printf(\"Ingrese la cantidad de empleados y la cantidad de sonsultas\\n\");\n    scanf(\"%d%d\",&n,&q);\n    int v[n+1];\n    for(i=1;i<=n;i++){\n        v[i]= i;\n    }\n    for(i=1;i<=q;i++){\n        //printf(\"Ingrese la consulta y un x y un y\\n\");\n        scanf(\"%d%d%d\",&consulta,&x,&y);\n        if(consulta==1)\n            v[x]= v[y];\n        else if(consulta==2){\n            for(j=x;j<y;j++){\n                v[j]= v[y];\n            }\n        }else{\n            a=x;\n            while(a != v[a]){\n                a= v[a];\n            }\n            if(v[a]==v[y])\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nstruct vector{\n    int valor;\n    int siguiente;\n};\nstruct vector v[200002];\nint conexiones(int valor);\nint main(){\n    int i,n,consultas,opcion,x,y,X,Y;\n    scanf(\"%d%d\",&n,&consultas);\n    for(i=1;i<=n;i++){\n        v[i].valor=i;\n        v[i].siguiente=i+1;\n    }\n    while(consultas--){\n        scanf(\"%d%d%d\",&opcion,&x,&y);\n        if(opcion==1){\n            v[conexiones(x)].valor=conexiones(y);\n        }else if(opcion==2){\n            Y=conexiones(y);\n            while(x<y){\n                v[conexiones(x)].valor=Y;\n                X=v[x].siguiente;\n                v[x].siguiente=v[y].siguiente;\n                x=X;\n            }\n        }else if(opcion==3){\n            printf(\"%s\\n\",conexiones(x)==conexiones(y)?\"YES\":\"NO\");\n        }\n    }\n    return 0;\n}\nint conexiones(int valor){\n    return v[valor].valor= v[valor].valor == valor? valor:conexiones(v[valor].valor);\n}"}
{"similarity_score": 0.9907834101382489, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "72de40fd9f04d97e9a509b622029a958", "bug_code_uid": "4198f1d4b21fbcacecd0ee1080f42729", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "4b16e870db44a9c661bbdef3acfcc61c", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i;\nscanf(\"%d\",&n);\nif(n%2==0)\n{printf(\"%d\\n\",n/2);\nfor(i=1;i<=n/2;i++)\n{printf(\"2 \");}}\nif(n%2!=0)\n{printf(\"%d\\n\",(n-1)/2);\nfor(i=1;i<(n-1)/2;i++)\n{printf(\"2 \");\n}}\nprintf(\"3\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i;\nscanf(\"%d\",&n);\nif(n%2==0)\n{printf(\"%d\\n\",n/2);\nfor(i=1;i<=n/2;i++)\n{printf(\"2 \");}}\nif(n%2!=0)\n{printf(\"%d\\n\",(n-1)/2);\nfor(i=1;i<(n-1)/2;i++)\n{printf(\"2 \");\n}\nprintf(\"3\");\n}}\n"}
{"similarity_score": 0.5222929936305732, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "33f65d1eb5bde55139a74e031d25ce50", "bug_code_uid": "96762b4762850ea5a30549efc3620187", "src_uid": "e4a2354159fc4cab7088e016cf17ae6c", "apr_id": "f89352ad44989d0fc302102ba52b9821", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "*special"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint max(int a[], int n, int max){\n\tint i;\n\tfor(i=0; i<=n; i++){\n\t\tif (a[i]>a[max]) max=i;\n\t}\n\treturn max;\n}\n\nint main(void) {\n\t\n\tint n, i, j, max_index=0, max_pic=0, a[1100000];\n\t\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; i++){\n\t\tscanf(\"%d \", &j);\n\t\ta[j-1]++;\n\t\tif(j-1>max_pic) max_pic=j-1;\n\t\tmax_index=max(a,max_pic,max_index);\n\t}\n\tprintf(\"%d\", max_index+1);\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t\n\tint n, i, j, max_index=0, a[1100000];\n\t\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; i++){\n\t\tscanf(\"%d \", &j);\n\t\ta[j-1]++;\n\t\tif(a[j-1]>a[max_index]) max_index=j-1;\n\t}\n\t\n\tprintf(\"%d\", max_index+1);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.7166921898928025, "equal_cnt": 34, "replace_cnt": 15, "delete_cnt": 11, "insert_cnt": 9, "fix_ops_cnt": 35, "lang": "GNU C", "fix_code_uid": "1e788a061b4a7b705c3c03cd2d235e16", "bug_code_uid": "73099eb283a05ec7bbca44fff0cd781d", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "7c9c7eb81b00a86ce60686a4ea838e6d", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": " #include<stdio.h>\n\n int main()\n {\n        int n,h[2];\n        int i,a=0;\n      scanf(\"%d\",&n);\n      \n      for(i=0;i<n;i++)\n    {\n         scanf(\"%d\",&h[1]);\n         if(0==i)\n         {\n             a=h[1]+1;\n             h[0]=h[1];\n        }\n        else\n         {\n            if(h[1]>=h[0]) a=a+h[1]-h[0]+2;\n            else a=a+h[0]-h[1]+2;\n            h[0]=h[1];\n         }\n}\n     printf(\"%d\\n\",ans);\n    return 0;\n}\n\n\n                                                                                                                                                                                                                                                              ", "fixed": "#include<stdio.h>\n\nint n, h[2];\n\nint main(void)\n{\n    int i, k = 0;\n\n    scanf(\"%d\", &n);\n    for(i=0; i < n; i++)\n    {\n        scanf(\"%d\", &h[1]);\n        if(0 == i)\n        {\n            k = h[1] + 1;\n            h[0] = h[1];\n        }\n        else\n        {\n            if(h[1] >= h[0])\n                k = k + h[1] - h[0] + 2;\n            else\n                k = k + h[0]- h[1] + 2;\n            h[0] = h[1];\n        }\n    }\n    printf(\"%d\", k);\n    return 0;\n}\n\n\n                                                                                                                                                            "}
{"similarity_score": 0.9914872308462694, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "57135712f3b65315c67b7f50c4cdf0c8", "bug_code_uid": "6a6c726ac944bac461e36163bdb68599", "src_uid": "c36f4bb34543476abc31fe986032122d", "apr_id": "5c94538c01150e8aa30996e6b5d8b887", "difficulty": 1400, "tags": ["dsu", "dfs and similar", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint father[60];\nint rank[60];\nvoid make(int x)\n{\n\tfather[x]=x;\n\trank[x]=0;\n}\nint find(int x)\n{\n\tif(x!=father[x])\n\t{\n\t\tfather[x]=find(father[x]);\n\t}\n    return father[x];\n}\nvoid Union (int x,int y)\n{\n\tx=find(x);\n\ty=find(y);\n\tif(x==y)return;\n\tif(rank[x]>rank[y]){\n\t\tfather[y]=x;\n\t}\n\telse{ if(rank[x]==rank[y]){\n\t\trank[y]++;\n\t}\n\tfather[x]=y;\n    }\n}\n\n\n\nint main()\n{\n     int n,m;\n\t int i,q,w;\n\t while(scanf(\"%d %d\",&n,&m)!=EOF)\n     {\n\t for(i=1;i<=n;i++)\n\t {\n\t \tfather[i]=i;\n\t \trank[i]=-1;\n\t }\n\t for(i=1;i<=m;i++)\n\t {\n\t \tint a,b;\n\t \tscanf(\"%d %d\",&a,&b);\n\t \tif(father[a]==-1&&father[b]==-1)\n\t \t{\n\t \t\tmake(a);\n\t \t\tmake(b);\n\t \t}\n\t \tif(father[a]!=-1&&father[b]!=-1)\n\t \t{\n\t \t\tUnion(a,b);\n\t \t}\n\t \tif(father[a]==-1&&father[b]!=-1)\n\t \t{\n\t \t\tmake(a);\n\t \t\tUnion(a,b);\n\t \t}\n\t \tif(father[a]!=-1&&father[b]==-1)\n\t \t{\n\t \t\tmake(b);\n\t \t\tUnion(a,b);\n\t \t}\n\t }\n\t int sum=0;\n\t for(i=1;i<=n;i++)\n\t {\n\t \tif(father[i]==i)sum+=1;\n\t }\n\t sum=pow(2,n-sum);\n\t printf(\"%d\\n\",sum);\n     }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint father[60];\nint rank[60];\nvoid make(int x)\n{\n\tfather[x]=x;\n\trank[x]=0;\n}\nint find(int x)\n{\n\tif(x!=father[x])\n\t{\n\t\tfather[x]=find(father[x]);\n\t}\n    return father[x];\n}\nvoid Union (int x,int y)\n{\n\tx=find(x);\n\ty=find(y);\n\tif(x==y)return;\n\tif(rank[x]>rank[y]){\n\t\tfather[y]=x;\n\t}\n\telse{ if(rank[x]==rank[y]){\n\t\trank[y]++;\n\t}\n\tfather[x]=y;\n    }\n}\n\n\n\nint main()\n{\n     int n,m;\n\t int i,q,w;\n\t while(scanf(\"%d %d\",&n,&m)!=EOF)\n     {\n\t for(i=1;i<=n;i++)\n\t {\n\t \tfather[i]=i;\n\t \trank[i]=-1;\n\t }\n\t for(i=1;i<=m;i++)\n\t {\n\t \tint a,b;\n\t \tscanf(\"%d %d\",&a,&b);\n\t \tif(father[a]==-1&&father[b]==-1)\n\t \t{\n\t \t\tmake(a);\n\t \t\tmake(b);\n\t \t}\n\t \tif(father[a]!=-1&&father[b]!=-1)\n\t \t{\n\t \t\tUnion(a,b);\n\t \t}\n\t \tif(father[a]==-1&&father[b]!=-1)\n\t \t{\n\t \t\tmake(a);\n\t \t\tUnion(a,b);\n\t \t}\n\t \tif(father[a]!=-1&&father[b]==-1)\n\t \t{\n\t \t\tmake(b);\n\t \t\tUnion(a,b);\n\t \t}\n\t }\n\t long long  sum=0;\n\t for(i=1;i<=n;i++)\n\t {\n\t \tif(father[i]==i)sum+=1;\n\t }\n\t sum=pow(2,n-sum);\n\t printf(\"%I64d\\n\",sum);\n     }\n}"}
{"similarity_score": 0.9306666666666666, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "032e05bfe6948251f96f76594c6e3f9d", "bug_code_uid": "f41680f67831235640eb2f158dd16725", "src_uid": "783df1df183bf182bf9acbb99208cdb7", "apr_id": "3822e0871ce73c258204a9c7bb0b7e18", "difficulty": 1700, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define ll long long\nint main()\n{\n    ll w,x,y,z;\n    scanf(\"%lld%lld%lld%lld\",&w,&x,&y,&z);\n    ll n;\n    ll i=0,ans=0;\n    scanf(\"%lld\",&n);\n        ll a,b,c;\n    while((i++)<n)\n    {\n        scanf(\"%lld%lld%lld\",&a,&b,&c);\n        if(((a*w+b*x+c)*(a*y+b*z+c))<=0LL)\n            ans++;\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define ll long long\nint main()\n{\n    ll w,x,y,z;\n    scanf(\"%lld%lld%lld%lld\",&w,&x,&y,&z);\n    ll n;\n    ll i=0,ans=0;\n    scanf(\"%lld\",&n);\n        ll a,b,c;\n    while((i++)<n)\n    {\n        scanf(\"%lld%lld%lld\",&a,&b,&c);\n        if(((a*w+b*x+c)<0 && (a*y+b*z+c)>0)   ||   ((a*w+b*x+c)>0 && (a*y+b*z+c)<0))\n            ans++;\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9283402681460934, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "45e232c36cef227ac8050a057b2e1a43", "bug_code_uid": "4f82eac35539d84606047f67acb5ee98", "src_uid": "88c8376ad65c5c932c15dc09d6c4d75f", "apr_id": "0eac80ae2088ddb378a912e5bb49b722", "difficulty": 1600, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint book[543],a[543];\r\nint main()\r\n{\r\n\tint t,n,l,r,s,i,j;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d%d%d%d\",&n,&l,&r,&s);\r\n\t\tmemset(book,0,sizeof(book));\r\n\t\tmemset(a,0,sizeof(a));\r\n\t\tint sum=0,w=1;\r\n\t\tfor(i=1;i<=r-l+1;i++)\r\n\t\t   sum=sum+i;\r\n\t\t   if(sum>s)\r\n\t\t   {\r\n\t\t   \tprintf(\"-1\\n\");\r\n\t\t   \tcontinue;\r\n\t\t   }\r\n\t\t //printf(\"%d>>>\\n\",sum);\r\n\t\t   while(s-sum>=r-l+1)\r\n\t\t   {\r\n\t\t   \tw++;\r\n\t\t   \tsum+=r-l+1;\r\n\t\t   }\r\n\t\t   \t if(w+r-l>n)\r\n\t\t   \t {\r\n\t\t   \t \tprintf(\"-1\\n\");\r\n\t\t   \t \tcontinue;\r\n\t\t\t\t}\r\n\t\t   \r\n\t\t   for(i=r;i>r-s+sum;i--)\r\n\t\t   {\r\n\t\t   \t  a[i]=i+1;\r\n\t\t\t\t book[i+1]=1; \r\n\t\t\r\n\t\t\t} \r\n\t\t //printf(\" %d %d>>>\\n\",w,sum);\r\n\t\t\tfor(i=l;i<=r-s+sum;i++)\r\n\t\t\t{\r\n\t\t\t\ta[i]=w;\r\n\t\t\t\tbook[w]=1;\r\n\t\t\t\tw++;\r\n\t\t\t\r\n\t\t\t\t//\t printf(\"%d>>>>\\n\",i);\r\n\t\t\t}\r\n\t\t\t  int q=1;\r\n\t\t\tfor(i=1;i<=n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i])\r\n\t\t\t\tcontinue;\r\n\t\t\t\twhile(book[q])\r\n\t\t\t\tq++;\r\n\t\t\t\t a[i]=q;\r\n\t\t\t\t q++;\r\n\t\t\t}\r\n\t\t\tfor(i=1;i<n;i++)\r\n\t\t\tprintf(\"%d \",a[i]);\r\n\t\t\tprintf(\"%d\\n\",a[n]);\r\n\t}\r\n\treturn 0;\r\n } ", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint book[543],a[543];\r\nint main()\r\n{\r\n\tint t,n,l,r,s,i,j;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d%d%d%d\",&n,&l,&r,&s);\r\n\t\tmemset(book,0,sizeof(book));\r\n\t\tmemset(a,0,sizeof(a));\r\n\t\tint sum=0,w=1;\r\n\t\tfor(i=1;i<=r-l+1;i++)\r\n\t\t   sum=sum+i;\r\n\t\t   if(sum>s)\r\n\t\t   {\r\n\t\t   \tprintf(\"-1\\n\");\r\n\t\t   \tcontinue;\r\n\t\t   }\r\n\t\t //printf(\"%d>>>\\n\",sum);\r\n\t\t   while(s-sum>=r-l+1)\r\n\t\t   {\r\n\t\t   \tw++;\r\n\t\t   \tsum+=r-l+1;\r\n\t\t   }\r\n\t\t   \t if(w+r-l>n)\r\n\t\t   \t {\r\n\t\t   \t \tprintf(\"-1\\n\");\r\n\t\t   \t \tcontinue;\r\n\t\t\t\t}\r\n\t\t   j=w+r-l;\r\n\t\t   int f=0;\r\n\t\t   for(i=r;i>r-s+sum;i--)\r\n\t\t   {\r\n\t\t   \t  if(j+1>n)\r\n\t\t\t\t {\r\n\t\t\t\t \tf=1;\r\n\t\t\t\t \tbreak;\r\n\t\t\t\t  } \r\n\t\t   \t  a[i]=j+1;\r\n\t\t\t\t book[j+1]=1; \r\n\t\t\t\t j--;\r\n\t\t\t} \r\n\t\t\tif(f)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"-1\\n\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t //printf(\" %d %d>>>\\n\",w,sum);\r\n\t\t\tfor(i=l;i<=r-s+sum;i++)\r\n\t\t\t{\r\n\t\t\t\ta[i]=w;\r\n\t\t\t\tbook[w]=1;\r\n\t\t\t\tw++;\r\n\t\t\t\r\n\t\t\t\t//\t printf(\"%d>>>>\\n\",i);\r\n\t\t\t}\r\n\t\t\t  int q=1;\r\n\t\t\tfor(i=1;i<=n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i])\r\n\t\t\t\tcontinue;\r\n\t\t\t\twhile(book[q])\r\n\t\t\t\tq++;\r\n\t\t\t\t a[i]=q;\r\n\t\t\t\t q++;\r\n\t\t\t}\r\n\t\t\tfor(i=1;i<n;i++)\r\n\t\t\tprintf(\"%d \",a[i]);\r\n\t\t\tprintf(\"%d\\n\",a[n]);\r\n\t}\r\n\treturn 0;\r\n } "}
{"similarity_score": 0.1468013468013468, "equal_cnt": 22, "replace_cnt": 17, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "780460088bbd19836961ffbfb573dfd4", "bug_code_uid": "6c44a86baf3cee63a852358d7622b6e4", "src_uid": "d7dc61a8f3b0091320b96cedd1f4f0a7", "apr_id": "b10c0cec2c446543c63be624a7b409ed", "difficulty": 1000, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint escupe(int,int**);\nint main()\n{\n\tint conteo1,camello,respuesta;\n\tint**camellos=(int**)calloc(2,sizeof(int*));\n\tscanf(\"%d\",&camello);\n\tcamellos[0]=(int*)realloc(camellos[0],camello);\n\tcamellos[1]=(int*)realloc(camellos[1],camello);\n\tfor(conteo1=0;conteo1<camello;conteo1++)\n\t{\n\t\tscanf(\"%d\",camellos[0]);\n\t\tscanf(\"%d\",camellos[1]);\n\t}\n\trespuesta=escupe(camello,camellos);\n\tif(respuesta) printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\treturn 0;\n}\nint escupe(int camello,int**camellos)\n{\n\tint conteo1,conteo2,x,d;\n\tfor(conteo1=0;conteo1<camello-1;conteo1++)\n\t{\t\t\n\t\tfor(conteo2=conteo1+1;conteo2<camello;conteo2++)\n\t\t{\n\t\t\tif(*(camellos[0]+conteo1) == *(camellos[0]+conteo2)+*(camellos[1]+conteo2))\n\t\t\t\tif(*(camellos[0]+conteo1)+*(camellos[1]+conteo1)==*(camellos[0]+conteo2))\n\t\t\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint BANDERA=0;\nint main(int args, char **argv)\n{\n    int I,J,D,CAMEL,*PTR1,*PTR2;    \n    scanf(\"%d\",&CAMEL);\n    PTR1=(int*)malloc(CAMEL*sizeof(int));\n    PTR2=(int*)malloc(CAMEL*sizeof(int));\n    for (I=0;I<CAMEL;I++)\n    {\n        scanf(\"%d %d\",&PTR1[I],&D);\n        PTR2[I]=PTR1[I]+D;\n        if (!BANDERA) \n        {\n            for (J=0;J<I;J++) \n            {\n                if (PTR1[I]==PTR2[J]&&PTR1[J]==PTR2[I])\n                {\n                    BANDERA=1;\n                    break;\n                }\n            }\n        }\n    }\n    printf(\"%s\\n\", BANDERA ? \"YES\" : \"NO\");\n    return 0;\n}"}
{"similarity_score": 0.9916839916839917, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "92f4d61087b422d8702a04fb40e311d6", "bug_code_uid": "923894c0e1bdb52318c631f9bce92aaa", "src_uid": "4be3698735278f29b307a7060eb69693", "apr_id": "eb305229776ac494e8d982e18c656b1f", "difficulty": 800, "tags": ["bitmasks", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int findX(long int A,long int B) \n{ \n    long int j = 0L, x = 0L; \n    while (A || B) { \n        if ((A & 1L) && (B & 1L)) { \n            x += (1L << j); \n        } \n  \n        A >>= 1L; \n        B >>= 1L; \n        j += 1L; \n    } \n    return x; \n} \n  \nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long int a,b;\n        scanf(\"%ld %ld\",&a,&b);\n    long int x= findX(a, b); \n    printf(\"%ld\\n\",(a^x + b^x));\n    }\n    return 0; \n} ", "fixed": "#include<stdio.h>\nlong int findX(long int A,long int B) \n{ \n    long int j = 0L, x = 0L; \n    while (A || B) { \n        if ((A & 1L) && (B & 1L)) { \n            x += (1L<< j); \n        } \n  \n        A >>= 1; \n        B >>= 1; \n        j += 1; \n    } \n    return x; \n} \n  \nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long int a,b;\n        scanf(\"%ld %ld\",&a,&b);\n    long int x= findX(a, b); \n    printf(\"%ld\\n\",((a^x) + (b^x)));\n    }\n    return 0; \n} "}
{"similarity_score": 0.15215686274509804, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "4823b7966b46b0df559c4ef0eb61aaf6", "bug_code_uid": "5b5fe67f9ce8d4225fbf1be7de577b33", "src_uid": "e12d86f0c8645424b942d3dd9038e04d", "apr_id": "0154b154b61e86d6b21f08173fc303b6", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a[105][5],i,j,k,b[105]={0},min,c;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;++i)\n\t{\n\t\tfor(j=1;j<=4;++j)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tfor(i=1;i<=n;++i)\n\t{\n\t\tfor(k=1;k<=n;++k)\n\t\t{\n\t\t\tif((a[i][1]<a[k][1])&&(a[i][2]<a[k][2])&&(a[i][3]<a[k][3]))\n\t\t\t\tb[i]++;\n\t\t}\n\t}\n\tfor(i=1;i<=n;++i)\n\t{\n\t\tif(b[i]==0)\n\t\t{\n\t\t\tmin=a[i][4];\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=1;i<=n;++i)\n\t{\n\t\tif(b[i]==0)\n\t\t{\n\t\t\tif(min>a[i][4])\n\t\t\t{\n\t\t\t\tmin=a[i][4];\n\t\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",c);\n}\n \t\t \t  \t\t\t\t  \t\t\t\t \t\t \t  \t\t\t \t", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint comp(const int *p, const int *q)\n{\n\treturn p[3] - q[3];\n}\n\nint main()\n{\n\tint n;\n\n\twhile (~scanf(\"%d\", &n))\n\t{\n\t\tint i, j, list[101][7] = { 0 };\n\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tlist[i][5] = i;\n\t\t\tscanf(\"%d %d %d %d\", &list[i][0], &list[i][1], &list[i][2], &list[i][3]);\n\t\t}\n\t\t\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tfor (j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tif (j == i)\n\t\t\t\t\tcontinue;\n\t\t\t\telse if (list[i][0] < list[j][0] && list[i][1] < list[j][1] && list[i][2] < list[j][2])\n\t\t\t\t{\n\t\t\t\t\tlist[i][4] = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tqsort(list, n, sizeof(list[0]), comp);\n\n\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (list[i][4] != 1)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\", list[i][5] + 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\n\n\t}\n\treturn 0;\n}\n\t\t\t \t\t   \t\t\t \t  \t  \t\t  \t\t\t"}
{"similarity_score": 0.9936908517350158, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "609182a739e3df1afc37ee0e98613479", "bug_code_uid": "49ecb79f1c77a8d03ccf5c16cea5e255", "src_uid": "4dfa99acbe06b314f0f0b934237c66f3", "apr_id": "b38c1c305cfd9b5a7948636c0208d218", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main() {\r\n        \r\n    int tc;\r\n    scnaf(\"%d\", &tc);\r\n        \r\n    for(int t = 0; t < tc; t++) {\r\n        \r\n        long long int a, b;\r\n        scanf(\"%lld %lld\", &a, &b);\r\n        long long int x = -(a * a), y = b * b;\r\n        printf(\"%lld %lld\\n\", x, y);\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main() {\r\n        \r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n        \r\n    for(int t = 0; t < tc; t++) {\r\n        \r\n        long long int a, b;\r\n        scanf(\"%lld %lld\", &a, &b);\r\n        long long int x = -(a * a), y = b * b;\r\n        printf(\"%lld %lld\\n\", x, y);\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9758656873032528, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "27fd83e3a0c46fe472450626f9996f65", "bug_code_uid": "bc31486fd1196d30af3a05f98576f659", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "22f636766304617047e316a4feb38c19", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[5000];\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n>4){\n    if(n%2==0)\n    {\n        printf(\"%d\\n\",n);\n        int j=1;\n        for(i=0;i<(n/2);i++)\n        {\n            a[i]=j;\n            j+=2;\n        }\n        j=2;\n        for(i=(n/2);i<n;i++)\n        {\n            a[i]=j;\n            j+=2;\n        }\n            for(i=0;i<n;i++)\n    {\n        printf(\"%d \",a[i]);\n    }\n    }\n    else{\n            printf(\"%d\\n\",n);\n            int j=1;\n        for(i=0;i<(n/2)+1;i++)\n        {\n            a[i]=j;\n            j+=2;\n        }\n        j=2;\n    for(i=(n/2)+1;i<n;i++)\n    {\n        a[i]=j;\n        j+=2;\n    }\n    for(i=0;i<n;i++){\n        printf(\"%d \",a[i]);\n    }\n    }}\n    else if(n==3)\n        printf(\"%d\\n%d %d\",n-1,n-2,n);\n    else if(n==4)\n        printf(\"%d\\n%d %d %d %d\",n,n-2,n,n-3,n-1);\n    else if(n==1)\n        printf(\"%d\\n%d\",n,n);\n    else if(n==2)\n        printf(\"%d\",n=0);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[5000];\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n>4){\n    if(n%2==0)\n    {\n        printf(\"%d\\n\",n);\n        int j=1;\n        for(i=0;i<(n/2);i++)\n        {\n            a[i]=j;\n            j+=2;\n        }\n        j=2;\n        for(i=(n/2);i<n;i++)\n        {\n            a[i]=j;\n            j+=2;\n        }\n            for(i=0;i<n;i++)\n    {\n        printf(\"%d \",a[i]);\n    }\n    }\n    else{\n            printf(\"%d\\n\",n);\n            int j=1;\n        for(i=0;i<(n/2)+1;i++)\n        {\n            a[i]=j;\n            j+=2;\n        }\n        j=2;\n    for(i=(n/2)+1;i<n;i++)\n    {\n        a[i]=j;\n        j+=2;\n    }\n    for(i=0;i<n;i++){\n        printf(\"%d \",a[i]);\n    }\n    }}\n    else if(n==3)\n        printf(\"%d\\n%d %d\",n-1,n-2,n);\n    else if(n==4)\n        printf(\"%d\\n%d %d %d %d\",n,n-2,n,n-3,n-1);\n    else if(n==1)\n        printf(\"%d\\n%d\",n,n);\n    else if(n==2)\n        printf(\"%d\\n%d\",n=1,n=1);\n    return 0;\n}\n"}
{"similarity_score": 0.0498793242156074, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "1b8ee92c4ee3fcda6957a568a9f6b857", "bug_code_uid": "e11a74c111cd86525dbd5c2548c3b17a", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "ef1301ed745f29bbd0410e00bc4a1fe9", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n    int t;cin>>t;\n    while(t--){\n        int n;cin>>n;\n        int ar[n];\n        for(int j=0; j<n; j++)\n        {\n            cin>>ar[j];\n        }\n        if (n <= 2)\n            cout<<0;\n        if (ar[0] == ar[1] && ar[0] != ar[2])\n            cout<<3;\n        if (ar[0] == ar[2] && ar[0] != ar[1])\n            cout<<2;\n        if (ar[1] == ar[2] && ar[0] != ar[1])\n            cout<<1;\n        else \n            for (int i = 3; i < n; i++){\n                if (ar[i] != ar[i - 1]){\n                    cout<<i+1<<'\\n';break;\n                }\n            }\n    }\n}\n\n\t\t   \t\t  \t\t\t\t\t \t \t\t\t \t \t \t\t\t  \t", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n  int i,n,m,k,index;int arr[1000];\n  scanf(\"%d\",&n);\n  while(n>0){\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(k=1;k<=i;k++)\n    {\n      if(arr[0]-arr[k]!=0&&arr[0]-arr[k+1]!=0)\n      {\n          index=1;break;\n      }\n      else if(arr[0]-arr[k]==0&&arr[0]-arr[k+1]!=0){\n        index=k+1+1;break;\n      }\n      else if(arr[0]-arr[k]!=0&&arr[0]-arr[k+1]==0){\n        index=k+1;break;\n      }\n    }\n    printf(\"%d\\n\",index);\n    n--;\n    index=0;\n  }\n}\n\n\t\t\t \t\t     \t\t    \t\t \t \t \t\t\t\t\t"}
{"similarity_score": 0.9737402413058907, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "176e100e1c6d3bec5c74eb0cb5e377e8", "bug_code_uid": "9b56645c48a4bf6bf42c7211961edd74", "src_uid": "d19c7a74d739c2ca0d568808862ba2bd", "apr_id": "445efcd5f2c534bf71bcb78c3d171bbe", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <cstdio>\n#include <cstdlib>\n\nusing namespace std;\nint a[300005], id[300005], b[300005];\nint comparator(const void *x, const void *y)\n    {\n        return ( a[*(int*)x] - a[*(int*)y] );\n    }\n    \nint main() {\n    int  n, i, l;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n        id[i] = i;\n    }\n    qsort(id, n, sizeof(int), comparator);\n    l = a[id[0]];\n    b[id[0]] = l;\n    for(i = 1; i < n; i++) {\n        if(a[id[i]] == a[id[i-1]]) b[id[i]] = ++l;\n        else if(a[id[i]] > l){\n            b[id[i]] = a[id[i]];\n            l = a[id[i]];\n        }\n        else b[id[i]] = ++l;\n    }\n    for(i = 0; i < n; i++)printf(\"%d \", b[i]);\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint a[300005], id[300005], b[300005];\nint comparator(const void *x, const void *y)\n    {\n        return ( a[*(int*)x] - a[*(int*)y] );\n    }\n    \nint main() {\n    int  n, i, l;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n        id[i] = i;\n    }\n    qsort(id, n, sizeof(int), comparator);\n    l = a[id[0]];\n    b[id[0]] = l;\n    for(i = 1; i < n; i++) {\n        if(a[id[i]] == a[id[i-1]]) b[id[i]] = ++l;\n        else if(a[id[i]] > l){\n            b[id[i]] = a[id[i]];\n            l = a[id[i]];\n        }\n        else b[id[i]] = ++l;\n    }\n    for(i = 0; i < n; i++)printf(\"%d \", b[i]);\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9818181818181818, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7c1191329cc997e262c9e27f38a928c9", "bug_code_uid": "cc1df688bd473dd5fb2b28a124fa41a0", "src_uid": "f9f803c6850da1838d62a0cf85bb13f2", "apr_id": "88ece6f94c695bcd13f2a0d1d185a44b", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i;\r\n    scanf(\"%d\",&i);\r\n    while(i--){\r\n    scanf(\"%d\",&n);\r\n    printf(\"1 1 1 %d\\n\",n-3);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i;\r\n    scanf(\"%d\",&i);\r\n    while(i--){\r\n    scanf(\"%d\",&n);\r\n    printf(\"%d 1 1 1\\n\",n-3);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.625, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e78755eb55f7d24a4edb03968eee902f", "bug_code_uid": "fd3d3860726b95f163c84fd6292c5848", "src_uid": "7eae40835f6e9580b985d636d5730e2d", "apr_id": "109014c980185b417766be1fea59b52a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\tint  a,b,sum=0,j,m;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tm=b-a+1;\n\t\tif(a%2==0)\n\t\t{\n\t\t\tfor(j=a+1;j<=b;j=j+2)\n\t\t\t{\n\t\t\t\tsum=sum-j;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\t{\n\t\t\t\tfor(j=a;j<=b;j=j+2)\n\t\t\t\t{\n\t\t\t\t\tsum=sum-j;\n\t\t\t\t}\n\t\t\t}\n\t\tsum=((b+a)*m)/2+2*sum;\n\t\tprintf(\"%d\\n\",sum);\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\tlong long int  a,b,sum=0,j,m,k,l;\n\t\tscanf(\"%lld%lld\",&a,&b);\n\t\tm=b-a+1;\n\t\tif(a%2==0)\n\t\t{\n\t\t\tk=a+1;\n\t\t}\n\t\telse k=a;\n\t\tif(b%2==0)\n\t\t{\n\t\t\tl=b-1;\n\t\t}\n\t\telse l=b;\n\t\tsum=((b+a)*m)/2-2*(((k+l)*((l-k)/2+1)/2));\n\t\tprintf(\"%lld\\n\",sum);\n\t}\n}\n"}
{"similarity_score": 0.8330464716006885, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "efee42b034dceaabc1b43656702f0af5", "bug_code_uid": "08e954b5755afb8f3dec7165b0579381", "src_uid": "1951bf085050c7e32fcf713132b30605", "apr_id": "07eb099172c8ea83a42dd0db667cd627", "difficulty": 1500, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define forn(i, n, k) for (int i = 0; i < n; i += k)\n#define forb(i, n, k) for (int i = n - 1; i >= 0; i -=k)\n\nint a[100000];\n\nint main(){\n\tint n, l, r;\n\tscanf(\"%d%d%d\", &n, &l, &r);\n\tforn(i,n,1){\n\t\tint m;\n\t\tscanf(\"%d\", &m);\n\t\tif (i + 1 >= l && i + 1 <= r) a[m - 1]++;\n\t}\n\tforn(i,n,1){\n\t\tint m;\n\t\tscanf(\"%d\", &m);\n\t\tif (i + 1 >= l && i + 1 <= r){\n\t\t\tif (a[m - 1] == 0){\n\t\t\t\tprintf(\"LIE\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ta[m - 1]--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"TRUTH\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n#define forn(i, n, k) for (int i = 0; i < n; i += k)\n#define forb(i, n, k) for (int i = n - 1; i >= 0; i -=k)\n\nint a[100000], b[100000];\n\nint main(){\n\tint n, l, r;\n\tscanf(\"%d%d%d\", &n, &l, &r);\n\tforn(i,n,1){\n\t\tscanf(\"%d\", &b[i]);\n\t\tif (i + 1 >= l && i + 1 <= r) a[b[i] - 1]++;\n\t}\n\tforn(i,n,1){\n\t\tint m;\n\t\tscanf(\"%d\", &m);\n\t\tif (i + 1 >= l && i + 1 <= r){\n\t\t\tif (a[m - 1] == 0){\n\t\t\t\tprintf(\"LIE\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ta[m - 1]--;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t    if (m != b[i]){\n\t\t        printf(\"LIE\");\n\t\t        return 0;\n\t\t    }\n\t\t}\n\t}\n\tprintf(\"TRUTH\");\n\treturn 0;\n}"}
{"similarity_score": 0.9957805907172996, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0661fa99a2d1337510318cbe71b4e2b2", "bug_code_uid": "b0d4ce52fd736f7863139e53efa64b98", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "8b9f5ed5ceda1053c414c35fded70cf3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int m,n;\n    scanf(\"%d\\n\",&m);\n\n\n\nwhile(m--)\n{\n        scanf(\"%d\",&n);\n         if(n==1)\n            printf(\"2\\n\");\n        else if (n%2==0)\n            printf(\"0\\n\");\n        else\nprintf(\"1\\n\");   }\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int m,n;\n    scanf(\"%d\\n\",&m);\n\n\n\nwhile(m--)\n{\n        scanf(\"%d\",&n);\n         if(n==2)\n            printf(\"2\\n\");\n        else if (n%2==0)\n            printf(\"0\\n\");\n        else\nprintf(\"1\\n\");   }\n\n\n\n\n}\n"}
{"similarity_score": 0.9213051823416507, "equal_cnt": 24, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 12, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "b406feb87d7d4c7f49e97397adf9ea13", "bug_code_uid": "cda13793b18644b195032798f4380e70", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "6d16edba9f80b8d7a7561985284c4f04", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int w;\r\n        scanf(\"%d\",&w);\r\n        int h;\r\n        scanf(\"%d\",&h);\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n\r\n        int cont=1;\r\n        int x=1;\r\n        while (x)\r\n        {\r\n            if (h%2==0)\r\n            {\r\n                h=h/2;\r\n                cont++;\r\n            }\r\n            else if (w%2==0)\r\n            {\r\n                w=w/2;\r\n                cont++;\r\n            }\r\n            else{\r\n                x=0;\r\n            }\r\n        }\r\n        if ((cont*2-1)>=n)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        \r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int w;\r\n        scanf(\"%d\", &w);\r\n        int h;\r\n        scanf(\"%d\", &h);\r\n        long long int n;\r\n        scanf(\"%lli\", &n);\r\n\r\n        int cont = 1;\r\n        int x = 1;\r\n        while (x)\r\n        {\r\n            if (h % 2 == 0)\r\n            {\r\n                h=h/2;\r\n                cont = cont * 2;\r\n            }\r\n            else if (w % 2 == 0)\r\n            {\r\n                w=w/2;\r\n                cont = cont * 2;\r\n            }\r\n            else\r\n            {\r\n                x=0;\r\n            }\r\n        }\r\n        if (cont>=n)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9419354838709677, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7ee0faf88fa53e1fbe9f0b31eadf7457", "bug_code_uid": "c46e5799bb6d4dbf13002c075bd4094f", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "37c3527e177b34bc611315faeb9904f1", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tchar a[1009];\n\tscanf(\"%s\",&a);\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(strlen(a)%n!=0)\n\tprintf(\"NO\");\n\telse{\n\tint y=strlen(a)/n;\n    for(int i=0;i<strlen(a);i+=y){\n    \tif(a[i]!=a[i+y-1]){\n    \t\tprintf(\"NO\");\n    \t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"YES\");\n}\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tchar a[1009];\n\tscanf(\"%s\",&a);\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(strlen(a)%n!=0)\n\tprintf(\"NO\");\n\telse{\n\tint y=strlen(a)/n;\n    for(int i=0;i<strlen(a);i+=y){\n    \tfor(int j=0;j<y/2;j++){\n    \tif(a[i+j]!=a[i+y-j-1]){\n    \t\tprintf(\"NO\");\n    \t\treturn 0;\n\t\t}\n\t}\n\t}\n\tprintf(\"YES\");\n}\n}"}
{"similarity_score": 0.9410187667560321, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2e6005a885fcf02d18b291bf86f8651d", "bug_code_uid": "e6ae45775f18b55bcd8e830b6d2d28ff", "src_uid": "8f0172f742b058f5905c0a02d79000dc", "apr_id": "b9586ee25ee8ba260bd0d21cf4f43e8a", "difficulty": 1200, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nlong int n,n1=0,n2=0,i;\nscanf(\"%ld\",&n);\nlong int t[n];\nfor(i=0;i<n;i++)\nscanf(\"%ld\",&t[i]);\nlong int *p=&t[0],*q=&t[n-1];\nwhile(q>=p)\n{\nif(*p<*q)\n{*q-=*p;\np++;\nn1++;\nif(p==q)\n{n2++;\nbreak;}}\nelse if(*q<*p)\n{*p-=*q;\nq--;\nn2++;\nif(p==q)\n{n1++;\nbreak;}}\nelse\n{n1++;\nn2++;\np++;\nq--;\nif(p==q)\n{n1++;\nbreak;}}}\nprintf(\"%ld %ld\",n1,n2);\nreturn 0;}\n", "fixed": "#include<stdio.h>\nint main()\n{\nlong int n,n1=0,n2=0,i;\nscanf(\"%ld\",&n);\nlong int t[n];\nfor(i=0;i<n;i++)\nscanf(\"%ld\",&t[i]);\nlong int *p=&t[0],*q=&t[n-1];\nwhile(q>=p)\n{\nif(*p<*q)\n{*q-=*p;\np++;\nn1++;\nif(p==q)\n{n2++;\nbreak;}}\nelse if(*q<*p)\n{*p-=*q;\nq--;\nn2++;\nif(p==q)\n{n1++;\nbreak;}}\nelse\n{if(p==q)\n{n1++;\nbreak;}\nn1++;\nn2++;\np++;\nq--;}}\nprintf(\"%ld %ld\",n1,n2);\nreturn 0;}\n"}
{"similarity_score": 0.9648682559598495, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "08379e4ae4c5d195cdcf3a424bfd9ba2", "bug_code_uid": "8762f8462e4833c67da11b25eabbe19c", "src_uid": "e70708f72da9a203b21fc4112ede9268", "apr_id": "ca415253db3bdb7cb82209c05103eaa4", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#define S 100001\n#include<stdio.h>\n#include<string.h>\nint main() {\n    //\u601d\u8def\u5f88\u7b80\u5355\uff0c\u9047\u5230a\u5c31\u4e0d\u8981\u53d8\u4e3az\uff01\n    //\u5176\u5b83\u60c5\u51b5\u90fd\u53ef\u4ee5\u53d8\n    char s[S];\n    scanf(\"%s\",s);\n    char res[S];\n    int i=0;\n    int is_change=0;\n    int stop_change=0;\n    //\u8fd8\u5fc5\u987b\u66f4\u6362\n    int change_times=0;\n    while(s[i]!='\\0'){\n        if(!stop_change){\n            if(s[i]=='a'){\n                if(i!=0){\n                    stop_change=1;\n                }\n                is_change=0;\n            }else{\n                is_change=1;\n                change_times++;\n            }\n        }\n        if(!is_change){\n            res[i]=s[i];\n        }else{\n            res[i]=s[i]-1;\n        }\n        i++;\n    }\n    if(change_times==0){\n        int n=strlen(s);\n        res[n-1]='z';\n    }\n    printf(\"%s\\n\",res);\n\treturn 0;\n}\n", "fixed": "#define S 100001\n#include<stdio.h>\n#include<string.h>\nint main() {\n    //\u601d\u8def\u5f88\u7b80\u5355\uff0c\u9047\u5230a\u5c31\u4e0d\u8981\u53d8\u4e3az\uff01\n    //\u5176\u5b83\u60c5\u51b5\u90fd\u53ef\u4ee5\u53d8\n    char s[S];\n    scanf(\"%s\",s);\n    char res[S];\n    int i=0;\n    int is_change=0;\n    int stop_change=0;\n    //\u8fd8\u5fc5\u987b\u66f4\u6362\n    int change_times=0;\n    int is_head=1;\n    while(s[i]!='\\0'){\n        if(!stop_change){\n            if(s[i]=='a'){\n                if(!is_head){\n                    stop_change=1;\n                }\n                is_change=0;\n            }else{\n                is_head=0;\n                is_change=1;\n                change_times++;\n            }\n        }\n        if(!is_change){\n            res[i]=s[i];\n        }else{\n            res[i]=s[i]-1;\n        }\n        i++;\n    }\n    if(change_times==0){\n        int n=strlen(s);\n        res[n-1]='z';\n    }\n    printf(\"%s\\n\",res);\n\treturn 0;\n}\n"}
{"similarity_score": 0.3829787234042553, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "d0e9740a3837f15d7f1990e86e4a770d", "bug_code_uid": "728b9e3ac02eb3adc6881dfe6e680798", "src_uid": "d173fa24cebaeda9ca794eeed68fa12d", "apr_id": "888fe41985ca18c2ddb5da44973aec60", "difficulty": 1700, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int i,n,j,l,o,p,b,m,c,d,e,f,k;\n    scanf(\"%I64d%I64d\", &m,&n);\n    long long int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\", &a[i]);\n    }\n    j=m;\n    b=0;\n    l=0;\n    k=0;\n    for(i=0;i<n;i++){\n        j=j+a[i];\n        b=b+a[i];\n        k++;\n        if(j<=0){\n            l=1;\n            break;\n        }\n    }\n    if(l==1)printf(\"%I64d\", k);\n    else if(j>=m)printf(\"-1\");\n    else if(j<m&&l!=1){\n        d=b*(-1);\n        c=(m/d);\n        if(c<=2)c=c-1;\n        else if(c>2)c=c-sqrt(c);\n        k=c*n;\n        j=m-(c*b*(-1));\n        while(j>0){\n            for(i=0;i<n;i++){\n                j=j+a[i];\n                k++;\n                if(j<=0)break;\n            }\n        }\n        printf(\"%I64d\", k);\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#define ld long double\nint main()\n{\n    long long int i,n,j,l,o,p,b=0,m,c,d,e,min=1000000,k;\n    scanf(\"%I64d%I64d\", &m,&n);\n    long long int a[200005]={0};\n    for(i=1;i<=n;i++){\n        scanf(\"%I64d\", &a[i]);\n        a[i]=a[i]+a[i-1];\n        if(a[i]<min)min=a[i];\n        if(m+a[i]<=0){\n            printf(\"%d\", i);\n            return 0;\n        }\n    }\n    if(a[n]>=0){\n            printf(\"-1\");\n            return 0;\n    }\n    c=(long long)ceil(((ld)m+(ld)min)/(-(ld)a[n]));\n    d=c*n;\n    m=m+(c*a[n]);\n    if(m==0){\n        printf(\"%I64d\", d);\n        return 0;\n    }\n    for(i=1;i<=n;i++){\n        if(m+a[i]<=0){\n            printf(\"%I64d\", d+i);\n            return 0;\n        }\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.7337423312883435, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e84a29eb7b5a742b952bf76a6588dfb0", "bug_code_uid": "7a709a5f07adcc96089180c5653ea163", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "0065797d58c4e3c629d91012b10608ff", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\t\n\tint q;\n\tfloat a,b,n,s;\n\tscanf(\"%d\",&q);\n\t\n\twhile(q--){\n\t    \n\t    scanf(\"%f%f%f%f\",&a,&b,&n,&s);\n\t    \n\t    if(a*n+b*1>=s)\n\t    {\n\t        if(b>=s%n)\n\t            printf(\"YES\\n\");\n\t            \n\t        else \n\t           printf(\"NO\\n\");\n\t    }\n\t    else\n\t        printf(\"NO\\n\");\n\t        \n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\t\n\tint q;\n    long long int a,b,n,s;\n\tscanf(\"%d\",&q);\n\t\n\tif(q<=10000&&q>=1)\n\t{while(q--){\n\t    \n\t    scanf(\"%I64d%I64d%I64d%I64d\",&a,&b,&n,&s);\n\t  if(a>=1&&a<=1000000000&&b>=1&&b<=1000000000&&n>=1&&n<=1000000000&&s>=1&&s<=1000000000)  \n\t  {  if(a*n+b*1>=s)\n\t    {\n\t        if(b>=s%n)\n\t            printf(\"YES\\n\");\n\t            \n\t        else \n\t           printf(\"NO\\n\");\n\t    }\n\t    else\n\t        printf(\"NO\\n\");\n\t  }      \n\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9265734265734266, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3bcb0fe2c0152df7f87d255e49c1aad3", "bug_code_uid": "a077ded28ced54b799e6a5c1d131a40e", "src_uid": "12c223c903544899638e47bcab88999a", "apr_id": "0d2d47c4e18011f18b72416bee8a3359", "difficulty": 1400, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nchar S[100001];\nlong long tR[100001];\nint main()\n{\n\tint i;\n\tlong long R = 1;\n\tint uC = 0;\n\tint nC = 0;\n\tscanf(\"%s\", &S);\n\ttR[0] = 0;\n\ttR[1] = 1;\n\ttR[2] = 2;\n\tfor (i = 3; i < 100001; i++)\n\t{\n\t\ttR[i] = tR[i - 1] + tR[i - 2];\n\t\ttR[i] %= 1000000007;\n\t}\n\tfor (i = 0; S[i]; i++)\n\t{\n\t\tif (S[i] == 'w' || S[i] == 'm')\n\t\t{\n\t\t\tR = 0;\n\t\t\tbreak;\n\t\t}\n\t\tif (S[i] == 'u')\n\t\t{\n\t\t\tuC++;\n\t\t\tnC = 0;\n\t\t}\n\t\telse if (S[i] == 'n')\n\t\t{\n\t\t\tnC++;\n\t\t\tuC = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (uC > 1)\n\t\t\t{\n\t\t\t\tR *= tR[uC];\n\t\t\t\tR %= 1000000007;\n\t\t\t}\n\t\t\telse if (nC > 1)\n\t\t\t{\n\t\t\t\tR *= tR[nC];\n\t\t\t\tR %= 1000000007;\n\t\t\t}\n\t\t\tuC = 0;\n\t\t\tnC = 0;\n\t\t}\n\t}\n\tif (R)\n\t{\n\t\tif (uC > 1)\n\t\t{\n\t\t\tR *= tR[uC];\n\t\t\tR %= 1000000007;\n\t\t}\n\t\telse if (nC > 1)\n\t\t{\n\t\t\tR *= tR[nC];\n\t\t\tR %= 1000000007;\n\t\t}\n\t}\n\tprintf(\"%I64d\", R);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nchar S[100001];\nlong long tR[100001];\nint main()\n{\n\tint i;\n\tlong long R = 1;\n\tint uC = 0;\n\tint nC = 0;\n\tscanf(\"%s\", &S);\n\ttR[0] = 0;\n\ttR[1] = 1;\n\ttR[2] = 2;\n\tfor (i = 3; i < 100001; i++)\n\t{\n\t\ttR[i] = tR[i - 1] + tR[i - 2];\n\t\ttR[i] %= 1000000007;\n\t}\n\tfor (i = 0; S[i]; i++)\n\t{\n\t\tif (S[i] == 'w' || S[i] == 'm')\n\t\t{\n\t\t\tR = 0;\n\t\t\tbreak;\n\t\t}\n\t\tif (S[i] == 'u')\n\t\t{\n\t\t\tuC++;\n\t\t\tif (nC > 1)\n\t\t\t{\n\t\t\t\tR *= tR[nC];\n\t\t\t\tR %= 1000000007;\n\t\t\t}\n\t\t\tnC = 0;\n\t\t}\n\t\telse if (S[i] == 'n')\n\t\t{\n\t\t\tnC++;\n\t\t\tif (uC > 1)\n\t\t\t{\n\t\t\t\tR *= tR[uC];\n\t\t\t\tR %= 1000000007;\n\t\t\t}\n\t\t\tuC = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (uC > 1)\n\t\t\t{\n\t\t\t\tR *= tR[uC];\n\t\t\t\tR %= 1000000007;\n\t\t\t}\n\t\t\telse if (nC > 1)\n\t\t\t{\n\t\t\t\tR *= tR[nC];\n\t\t\t\tR %= 1000000007;\n\t\t\t}\n\t\t\tuC = 0;\n\t\t\tnC = 0;\n\t\t}\n\t}\n\tif (R)\n\t{\n\t\tif (uC > 1)\n\t\t{\n\t\t\tR *= tR[uC];\n\t\t\tR %= 1000000007;\n\t\t}\n\t\telse if (nC > 1)\n\t\t{\n\t\t\tR *= tR[nC];\n\t\t\tR %= 1000000007;\n\t\t}\n\t}\n\tprintf(\"%I64d\", R);\n\treturn 0;\n}"}
{"similarity_score": 0.9966055668703326, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7c5d9969f362d4e9baaaedddcdcd90ea", "bug_code_uid": "697e7caa1a9e123a69c7782f461c64ee", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "ea0003e2c73d6e2d9bb9853ff0ba8be3", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include<stdio.h>>\nint main()\n{\nint i,j,k,c=0,n;\nchar a[1003];\nchar b[1003];\ngets(a);\n\ngets(b);\nint len=strlen(a);\nint len1=strlen(b);\nif(len==len1){\nfor(i=0;i<len;i++){\n\n\n   if((a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')&&(b[i]=='a'||b[i]=='e'||b[i]=='i'||b[i]=='o'||b[i]=='u')){\n            c++;\n        }\n        else    if((a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')&&(b[i]!='a'||b[i]!='e'||b[i]!='i'||b[i]!='o'||b[i]!='u')){\n     c--;\n        }\n      else    if((a[i]!='a'||a[i]!='e'||a[i]!='i'||a[i]!='o'||a[i]!='u')&&(b[i]=='a'||b[i]=='e'||b[i]=='i'||b[i]=='o'||b[i]=='u')){\n     c--;\n        }\n        else c++;\n}\nif(c==len){printf(\"YES\\n\");}\n    else {printf(\"NO\\n\");}\n}\nelse {printf(\"NO\\n\");}\nreturn 0;", "fixed": "#include<stdio.h>\nint main()\n{\nint i,j,k,c=0,n;\nchar a[1003];\nchar b[1003];\ngets(a);\n\ngets(b);\nint len=strlen(a);\nint len1=strlen(b);\nif(len==len1){\nfor(i=0;i<len;i++){\n\n\n   if((a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')&&(b[i]=='a'||b[i]=='e'||b[i]=='i'||b[i]=='o'||b[i]=='u')){\n            c++;\n        }\n        else    if((a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u')&&(b[i]!='a'||b[i]!='e'||b[i]!='i'||b[i]!='o'||b[i]!='u')){\n     c--;\n        }\n      else    if((a[i]!='a'||a[i]!='e'||a[i]!='i'||a[i]!='o'||a[i]!='u')&&(b[i]=='a'||b[i]=='e'||b[i]=='i'||b[i]=='o'||b[i]=='u')){\n     c--;\n        }\n        else c++;\n}\nif(c==len){printf(\"YES\\n\");}\n    else {printf(\"NO\\n\");}\n}\nelse {printf(\"NO\\n\");}\nreturn 0;\n}\n"}
{"similarity_score": 0.9889570552147239, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b937e6bdbd029df8aab71bd63ca7f297", "bug_code_uid": "e332446818c0ad179310ebed64a41054", "src_uid": "20cbd67b7bfd8bb201f4113a09aae000", "apr_id": "8610f9dacc1d2c3325a85e184d95c508", "difficulty": 1900, "tags": ["dp", "two pointers", "dfs and similar"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint gems[30002];\nint save[2000][30002];\nint lim=0;\nint n,d;\n\nint max(int a, int b, int c)\n{\n    int ans = a;\n    if (b > ans)\n        ans = b;\n    if (c > ans)\n        ans = c;\n\n    return ans;\n}\n\nint bf(int prev, int cur)\n{\n    int l = cur-prev;\n    if (save[l][cur] != -1)\n        return save[l][cur];\n    if (cur > lim || (l == 0))\n        return 0;\n\n    return save[l][cur] = gems[cur] + max(bf(cur, cur+l-1), bf(cur,cur+l), bf(cur,cur+l+1));\n}\n\nint main()\n{\n    memset(gems,0,sizeof gems);\n    memset(save,-1,sizeof save);\n    scanf(\"%d%d\", &n,&d);\n\n    int i;\n    for (i=1;i<=n;i++)\n    {\n        int in;\n        scanf(\"%d\",&in);\n        gems[in]++;\n        lim = (lim > in) ? lim : in;\n    }\n\n    printf(\"%d\\n\", bf(0,d));\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint gems[30002];\nint save[2000][30002];\nint lim=0;\nint n,d;\n\nint max(int a, int b, int c)\n{\n    int ans = a;\n    if (b > ans)\n        ans = b;\n    if (c > ans)\n        ans = c;\n\n    return ans;\n}\n\nint bf(int prev, int cur)\n{\n    int l = cur-prev;\n    if (save[l-d+500][cur] != -1)\n        return save[l-d+500][cur];\n    if (cur > lim || (l == 0))\n        return 0;\n\n    return save[l-d+500][cur] = gems[cur] + max(bf(cur, cur+l-1), bf(cur,cur+l), bf(cur,cur+l+1));\n}\n\nint main()\n{\n    memset(gems,0,sizeof gems);\n    memset(save,-1,sizeof save);\n    scanf(\"%d%d\", &n,&d);\n\n    int i;\n    for (i=1;i<=n;i++)\n    {\n        int in;\n        scanf(\"%d\",&in);\n        gems[in]++;\n        lim = (lim > in) ? lim : in;\n    }\n\n    printf(\"%d\\n\", bf(0,d));\n\n    return 0;\n}\n"}
{"similarity_score": 0.9902534113060428, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bf130632b23f99df0bd10671aa90d3ec", "bug_code_uid": "03c957159ace1bb95ea06b8eda7f14ca", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "61d1b88a5b2799b8502bb051cab7dc86", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n    int n;\n    long long a, b, c;\n    scanf(\"%d\", &n);\n\n    for (int i = 0; i < n; i++) {\n        scanf(\"%I64d %I64d %I64d\", &a, &b, &c);\n        printf(\"%I64d\\n\", (long long) floor((a + b + c) / 2));\n    }\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main() {\n    int n;\n    long long a, b, c;\n    scanf(\"%d\", &n);\n\n    for (int i = 0; i < n; i++) {\n        scanf(\"%I64d %I64d %I64d\", &a, &b, &c);\n        printf(\"%I64d\\n\", (long long) ((a + b + c) / 2));\n    }\n}"}
{"similarity_score": 0.9794952681388013, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "57eb159b1b4e20a48f9505c211380f1e", "bug_code_uid": "5f21bbc27f4b3d1b6323676488220472", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "c45373b148881ef74c55a0f8595561ae", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int ch[50000],cp[500000];\n    char kh[1000000],arr[1000000];\n    long long int a=0,b=0,c,d,e,i=0,j=0,k=0,l=0,tep,temp,m,n,x,y;\n    double z,yo,go;\n\n    scanf(\"%lld\",&a);\n\n    go=0;\n    for(i=0; i<a; i++)\n    {\n        scanf(\"%lf\",&z);\n        k=0;\n        k=z>0?z:(-z);\n        yo=sqrt(k);\n        j=(int)yo;\n        if(yo-j>0 && z>go)\n        {\n\n            go=z;\n\n        }\n        if(z<0 && go==0)\n        {\n            go=z;\n\n        }\n        if(yo-j>0 && go<z)\n            go=z;\n        if(k==1)\n            go=z;\n    }\n\n    printf(\"%d\\n\",(int)go);\n\n\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int ch[50000],cp[500000];\n    char kh[1000000],arr[1000000];\n    long long int a=0,b=0,c,d,e,i=0,j=0,k=0,l=0,tep,temp,m,n,x,y;\n    double z,yo,go;\n\n    scanf(\"%lld\",&a);\n\n    go=0;\n    for(i=0; i<a; i++)\n    {\n        scanf(\"%lf\",&z);\n        k=0;\n        k=z>0?z:(-z);\n        yo=sqrt(k);\n        j=(int)yo;\n        if(yo-j>0 && z>go)\n        {\n\n            go=z;\n\n        }\n        if(z<0 && go==0)\n        {\n            go=z;\n\n        }\n        if(yo-j>0 && go<z)\n            go=z;\n        \n    }\n\n    printf(\"%d\\n\",(int)go);\n\n\n\n    return 0;\n}"}
{"similarity_score": 0.9416737109044802, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d6acd092f7e43c1db5d70c7d9af6e47d", "bug_code_uid": "f835238b0700d1bcbd2b9ea88cabfbf3", "src_uid": "f46f6fa28d0a7023da3bad0d222ce393", "apr_id": "38d66f2a252b7a59de6fff5c73d5792f", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint f(int e , int x ){\n    int t,t1,u=0;\n    for (int i=0;i<e*4;i++){\n        if(i%2!=0)\n            fscanf(stdin,\"%d\",&t);\n        else\n            fscanf(stdin,\"%d\",&t1);\n        if (i%3==0 && t1==t)\n            u++;\n    }\n    if (x%2!=0)\n        return 0;\n    if (u!=0)\n        return 1;\n    return 0;\n}\nint main(void){\n    int t,a,b;\n    scanf(\"%d\",&t);\n    for (int i=0;i<t;i++){\n        scanf(\"%d %d\",&a,&b);\n        if (f(a,b)==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint f(int e , int x ){\n    int t,t1,u=0,h=2;\n    for (int i=0;i<e*4;i++){\n        if(i%2!=0)\n            fscanf(stdin,\"%d\",&t);\n        else\n            fscanf(stdin,\"%d\",&t1);\n        if (h==i){\n            h+=4;\n            if (t1==t)\n                u++;\n        }\n    }\n    if (x%2!=0)\n        return 0;\n    if (u!=0)\n        return 1;\n    return 0;\n}\nint main(void){\n    int t,a,b;\n    scanf(\"%d\",&t);\n    for (int i=0;i<t;i++){\n        scanf(\"%d %d\",&a,&b);\n        if (f(a,b)==1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9494066208619613, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "8ffd6a95470f664cf080958e7992d0c2", "bug_code_uid": "8b9d8772a089139d4c92d9d66e079da8", "src_uid": "9d480b3979a7c9789fd8247120f31f03", "apr_id": "75ebef5d506cbb943b7572e056f57ec8", "difficulty": 1700, "tags": ["constructive algorithms", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int t;\n\tscanf(\"%lld\", &t);\n\t\n\twhile ( t != 0 )\n\t{\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\t\t\n\t\tlong long int a[n];\n\t\tlong long int b[n];\n\t\tlong long int i;\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tb[i] = 0;\n\t\t}\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tscanf(\"%lld\", &a[i]);\n\t\t\tb[a[i]-1] += 1;\n\t\t}\n\n\t\tlong long int *c = (long long int*)malloc(100000*sizeof(long long int));\n\n\t\tfor ( i = 0; i < 100000; ++i )\n\t\t{\n\t\t\tc[i] = 0;\n\t\t}\n\t\t\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tc[b[i]-1] += 1;\n\t\t}\n\t\tlong long int select;\n\t\tfor ( i = n-1; i >= 0; --i )\n\t\t{\n\t\t\tif ( c[i] != 0 )\n\t\t\t{\n\t\t\t\tselect = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong long int sol = c[select] + c[select-1] -1;\n\t\tprintf(\"%lld\\n\", sol);\n\t\t\n\n\n\n\t\t--t;\n\t}\n//\tsystem(\"pause\");\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int t;\n\tscanf(\"%lld\", &t);\n\t\n\twhile ( t != 0 )\n\t{\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\t\t\n\t\tlong long int a[n];\n\t\tlong long int b[n];\n\t\tlong long int i;\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tb[i] = 0;\n\t\t}\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tscanf(\"%lld\", &a[i]);\n\t\t\tb[a[i]-1] += 1;\n\t\t}\n\n\t\tlong long int *c = (long long int*)malloc(100000*sizeof(long long int));\n\n\t\tfor ( i = 0; i < 100000; ++i )\n\t\t{\n\t\t\tc[i] = 0;\n\t\t}\n\t\t\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tc[b[i]-1] += 1;\n\t\t}\n\t\tlong long int select;\n\t\tfor ( i = n-1; i >= 0; --i )\n\t\t{\n\t\t\tif ( c[i] != 0 )\n\t\t\t{\n\t\t\t\tselect = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong long int sol = c[select];\n\t\tlong long int aux = n-(select+1)*c[select];\n\t\tsol = sol + aux/select-1;\n\t\tprintf(\"%lld\\n\", sol);\n\n\n\n\t\t--t;\n\t}\n\t//system(\"pause\");\n}"}
{"similarity_score": 0.9978586723768736, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "61b72b0313a9bb8110336b51ce71848a", "bug_code_uid": "36573f57c85589fbfa68a31c441a878b", "src_uid": "fa256021dc519f526ef3878cce32ff31", "apr_id": "ee28367354d356f3307fdd5d268e2b51", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        printf(\"%d\",a[i]+a[i+1]);\n    }\n    printf(\"%d\",a[n-1]);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        printf(\"%d \",a[i]+a[i+1]);\n    }\n    printf(\"%d\",a[n-1]);\n}"}
{"similarity_score": 0.5549949545913219, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "694c0c62ef42b9a2b069cdf4dd8698fb", "bug_code_uid": "aaa7f95fa75d3aab934f02081e558166", "src_uid": "ef1448a744f67347183479c697aa87e1", "apr_id": "1a236850192c57f8f39e6865d159635c", "difficulty": 800, "tags": ["brute force", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t    int n;\n\t    scanf(\"%d\", &n);\n\t    int a[n];\n\t    int max = 0;\n\t    for (int i = 0; i < n; i ++)\n\t    {\n\t        \n\t        scanf(\"%d\", &a[i]);\n\t        if (i < n - 1)\n\t        {\n\t            if (a[i] > max)\n\t            {\n\t                max = a[i];\n\t            }\n\t        }\n\t    }\n\t    if (a[n - 1] >= max)\n\t    {\n\t        printf(\"NO\\n\");\n\t    }\n\t    else\n\t    {\n\t        printf(\"YES\\n\");\n\t    }\n\t    \n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t{\n\t    int n;\n\t    scanf(\"%d\", &n);\n\t    int a[n];\n\t    for (int i = 0; i < n; i ++)\n\t    {\n\t        \n\t        scanf(\"%d\", &a[i]);\n\t    }\n\t    int flag = 1;\n\t    for (int i = 0; i < n - 1; i ++)\n\t    {\n    \t    if (a[i + 1] < a[i])\n    \t    {\n    \t        printf(\"YES\\n\");\n    \t        flag = 0;\n    \t        break;\n    \t    }\n\t    }\n\t    if (flag)\n\t    {\n\t        printf(\"NO\\n\");\n\t    }\n\t    \n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6661981728742095, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "4b1771775eebaab5f29e54fbda2f52c0", "bug_code_uid": "4e78c0e39af39b4902dea679d7493f83", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "db2ff3995ca8ff38acefdb6c4bd72cdc", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <stdbool.h>\n\n\nint main(){\nint n;\nscanf(\"%d\",&n);\nint d[n],a[n],b[n],c[n];\nint i,p=0,q=0,r=0;\nfor(i=0;i<n;i++){\n    scanf(\"%d\",&d[i]);\n}\nfor(i=0;i<n;i++){\n    if(d[i]<0){a[p]=d[i];p++;}\n    else if(d[i]>0){b[q]=d[i];q++;}\n    else if(d[i]==0){c[r]=d[i];r++;}\n}\n    printf(\"1 %d\\n\",a[0]);\nprintf(\"%d \",q);\n\nfor(i=0;i<q;i++){\n    printf(\"%d \",b[i]);\n}\nprintf(\"\\n%d \",r+p-1);\nfor(i=0;i<r;i++){\n    printf(\"%d \",c[i]);\n}\nfor(i=1;i<p;i++){printf(\"%d \",a[i]);}\n\n\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <stdbool.h>\n\n\nint main(){\nint n;\nscanf(\"%d\",&n);\nint d[n],a[n],b[n],c[n];\nint i,p=0,q=0,r=0;\nfor(i=0;i<n;i++){\n    scanf(\"%d\",&d[i]);\n    if(d[i]<0){a[p]=d[i];p++;}\n    else if(d[i]>0){b[q]=d[i];q++;}\n    else if(d[i]==0){c[r]=d[i];r++;}\n}\nprintf(\"1 %d\\n\",a[0]);\nif(p>2){\n        printf(\"%d %d %d \",q+2,a[1],a[2]);\n        for(i=0;i<q;i++){\n            printf(\"%d \",b[i]);\n        }\n        printf(\"\\n%d \",r+p-3);\n        for(i=0;i<r;i++){printf(\"%d \",c[i]);}\n        for(i=3;i<p;i++){printf(\"%d \",a[i]);}\n\n           }\n           else {\n            printf(\"%d \",q);\n            for(i=0;i<q;i++){printf(\"%d \",b[i]);}\n            printf(\"\\n%d \",r+p-1);\n            for(i=1;i<p;i++){printf(\"%d \",a[i]);}\n            for(i=0;i<r;i++){printf(\"%d \",c[i]);}\n           }\n\n  return 0;\n}\n"}
{"similarity_score": 0.999009900990099, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5775c5b3b39cadd510dbf467259fb629", "bug_code_uid": "b56f39336e9b1cfa1c617d294c05c7eb", "src_uid": "d70ee6d3574e0f2cac3c683729e2979d", "apr_id": "e8f9993ccb6a556dd7ae1591bed58c95", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int t , k , i , j , n , a , b , moves , c , d;\n    int*arr;\n    scanf(\"%d\" , &t);\n    for(k = 0 ; k<t ; k++){\n        scanf(\"%d\" , &n);\n        arr = (int*)calloc(n , sizeof(int));\n        for(i = 0 ; i<n ; i++){\n            scanf(\"%d\" , &arr[i]);\n        }\n        a = arr[0];\n        b = 0;\n        c = arr[0];\n        d = 0;\n        moves = 1;\n        i = 1;\n        j = n-1;\n        while(i <= j){\n            if(moves%2 != 0){\n                while(d < c && j >= i){\n                    d = d+arr[j];\n                    j--;\n                }\n                moves++;\n                c = 0;\n                b+=d;\n            }\n            else{\n                while(c < d && i <= j){\n                    c = c+arr[i];\n                    i++;\n                }\n                moves++;\n                d = 0;\n                a+=c;\n            }\n        }\n        printf(\"%d %d %d \\n\" , moves , a ,b);\n        free((void*)arr);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int t , k , i , j , n , a , b , moves , c , d;\n    int*arr;\n    scanf(\"%d\" , &t);\n    for(k = 0 ; k<t ; k++){\n        scanf(\"%d\" , &n);\n        arr = (int*)calloc(n , sizeof(int));\n        for(i = 0 ; i<n ; i++){\n            scanf(\"%d\" , &arr[i]);\n        }\n        a = arr[0];\n        b = 0;\n        c = arr[0];\n        d = 0;\n        moves = 1;\n        i = 1;\n        j = n-1;\n        while(i <= j){\n            if(moves%2 != 0){\n                while(d <= c && j >= i){\n                    d = d+arr[j];\n                    j--;\n                }\n                moves++;\n                c = 0;\n                b+=d;\n            }\n            else{\n                while(c <= d && i <= j){\n                    c = c+arr[i];\n                    i++;\n                }\n                moves++;\n                d = 0;\n                a+=c;\n            }\n        }\n        printf(\"%d %d %d \\n\" , moves , a ,b);\n        free((void*)arr);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3795309168443497, "equal_cnt": 16, "replace_cnt": 12, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "35219376020f52163fdc21eb50c12ddd", "bug_code_uid": "889a8078924c834b1a46ce4b33359aea", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "45238800a574255d21815d1de3c4d97d", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main( )\n{\n    long long int n, j;\n    long long int t, i, count;\n\n    scanf(\"%lld\",&t);\n\n    for(i = 1; i <= t; i++)\n    {\n        count = 0;\n        scanf(\"%lld\", &n);\n        for(j = 3; j <= n; j = j+2)\n        {\n            if(n%j == 0)\n                count++;\n        }\n        if(count == 0)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}\n \t \t   \t  \t   \t\t \t  \t  \t  \t\t", "fixed": "#include<stdio.h>\nint main()\n{\n   long long int t,i,f=0,value=0,j=1,N;\n   scanf(\"%lld\",&t);\n   for(i=1;i<=t;i++)\n   {\n       scanf(\"%lld\",&N);\n   while(value<N)\n   {\n       value=pow(2,j);\n       if(value==N)\n       {\n           f=1;\n           break;\n       }\n       j++;\n   }\n   if(f==1)\n   {\n       printf(\"NO\\n\");\n       f=0;\n       j=1;\n       value=0;\n   }\n   else\n   {\n       printf(\"YES\\n\");\n       f=0;\n       j=1;\n       value=0;\n   }\n   }\n\n    return 0;\n}\n\n\n\t\t  \t \t\t   \t\t\t\t \t\t  \t \t\t\t \t \t"}
{"similarity_score": 0.9890438247011952, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fffbda67d8a011124a3357539d1ddbff", "bug_code_uid": "c5a00246491807393b848223d8f7edd0", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "d211ec19949e8db61500466592cf1076", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*\n *        File: main.c\n * Description: Codeforce problemset 0144A - Arrival of the General.\n *  Created on: Aug 10 2020 17:16 +0700\n *      Author: tbtt\n */\n#include <stdio.h>\n#include <stdlib.h>\n#include <inttypes.h>\n\n#define MAX 100\n\nint\nmain (void)\n{\n#ifndef ONLINE_JUDGE\n  freopen (\"input.txt\", \"r\", stdin);\n#endif\n  uint8_t n;\n  uint8_t height;\n  uint8_t min;\n  uint8_t max;\n  uint8_t minPos;\n  uint8_t maxPos;\n  uint8_t nSecond;\n  uint8_t i;\n  min = MAX + 1;\n  max = 0;\n  minPos = 0;\n  maxPos = 0;\n  scanf (\"%\" SCNu8, &n);\n  for (i = 0; i < n; ++i)\n    {\n      scanf (\"%\" SCNu8, &height);\n      if (height < min)\n        {\n          min = height;\n        }\n      else if (height == min)\n        {\n          minPos = i;\n        }\n      if (height > max)\n        {\n          max = height;\n          maxPos = i;\n        }\n    }\n  nSecond = (uint8_t) (maxPos + (n - minPos - 1));\n  if (maxPos > minPos)\n    {\n      --nSecond;\n    }\n  printf (\"%\" PRIu8, nSecond);\n  return EXIT_SUCCESS;\n}\n", "fixed": "/*\n *        File: main.c\n * Description: Codeforce problemset 0144A - Arrival of the General.\n *  Created on: Aug 10 2020 17:16 +0700\n *      Author: tbtt\n */\n#include <stdio.h>\n#include <stdlib.h>\n#include <inttypes.h>\n\n#define MAX 100\n\nint\nmain (void)\n{\n#ifndef ONLINE_JUDGE\n  freopen (\"input.txt\", \"r\", stdin);\n#endif\n  uint8_t n;\n  uint8_t height;\n  uint8_t min;\n  uint8_t max;\n  uint8_t minPos;\n  uint8_t maxPos;\n  uint8_t nSecond;\n  uint8_t i;\n  min = MAX + 1;\n  max = 0;\n  minPos = 0;\n  maxPos = 0;\n  scanf (\"%\" SCNu8, &n);\n  for (i = 0; i < n; ++i)\n    {\n      scanf (\"%\" SCNu8, &height);\n      if (height < min)\n        {\n          min = height;\n          minPos = i;\n        }\n      else if (height == min)\n        {\n          minPos = i;\n        }\n      if (height > max)\n        {\n          max = height;\n          maxPos = i;\n        }\n    }\n  nSecond = (uint8_t) (maxPos + (n - minPos - 1));\n  if (maxPos > minPos)\n    {\n      --nSecond;\n    }\n  printf (\"%\" PRIu8, nSecond);\n  return EXIT_SUCCESS;\n}\n"}
{"similarity_score": 0.5087108013937283, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e4ca1761187bcb78482a4d490511f7d3", "bug_code_uid": "ae97d8e2d8f45345deebb7fa822e199f", "src_uid": "724fa4b1d35b8765048857fa8f2f6802", "apr_id": "86d175697891b919a55d1d72a0f91c5d", "difficulty": 1400, "tags": ["*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar t[1000009],s[1009];\n\tlong int i,j=0,ans=0,pr,pl,l;\n\tscanf(\"%s\",&s);\n\tscanf(\"%s\",&t);l=strlen(t);\n\tfor(i=0;i<l;i++)\n\t{\n\t\tif(j==0 && ans>0 && s[j]==t[i])\n\t\t\tpr=i;\n\t\tif(s[j]==t[i])\n\t\t\tj++;\n\t\tif(j==strlen(s))\n\t\t{\n\t\t\tans++;\n\t\t\tif(ans==1)\n\t\t\t{pl=i;\n\t\t\t}\n\t\t\tj=0;\n\t\t}\n\t}\n\tif(ans>1)\n\tprintf(\"%ld\\n\",pr-pl);\n\telse\n\t\tprintf(\"0\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar t[1000009],s[1009];\n\tlong int i,j=0,ans=0,pr,pl,l,kak;\n\tscanf(\"%s\",&s);\n\tscanf(\"%s\",&t);l=strlen(t);kak=strlen(s);\n\tfor(i=0;i<l;i++)\n\t{\n\t\tif(s[j]==t[i])\n\t\t\tj++;\n\t\tif(j==kak)\n\t\t{ans++;j=0;\n\t\t\tif(ans==1)\n\t\t\tpl=i;\n\t\t\tif(ans==2)\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tif(ans<2)\n\t\tprintf(\"0\\n\");\n\telse\n\t{j=kak-1;\n\t\tfor(i=l-1;i>=0;i--)\n\t\t{\n\t\t\tif(s[j]==t[i])\n\t\t\tj--;\n\t\t\tif(j==-1)\n\t\t\t{pr=i;break;}\n\t\t}\n\t\tprintf(\"%ld\\n\",pr-pl);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9180327868852459, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e100c6036b9733f0bdac89ae48050835", "bug_code_uid": "06d815798881882c20fe492637894856", "src_uid": "77b5bed410d621fb56c2eaebccff5108", "apr_id": "66e8241555fa20990cc96d9601995a3c", "difficulty": 1600, "tags": ["greedy", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define max(a, b) (((a) > (b)) ? (a) : (b))\n\ntypedef struct {\n    int d, h;\n} Rec;\n\nRec rec[100001];\n\nint main(void) {\n    int i;\n    int n, m;\n    int ans;\n\n    scanf(\"%d %d\", &n, &m);\n    rec[0] = (Rec){1, 0};\n    for (i = 1; i <= m; i++)\n        scanf(\"%d %d\", &rec[i].d, &rec[i].h);\n\n    ans = -1;\n    for (i = 0; i < m; i++)\n        if (abs(rec[i].h - rec[i + 1].h) > rec[i + 1].d - rec[i].d) {\n            puts(\"IMPOSSIBLE\");\n            return 0;\n        } else\n            ans = max(ans, max(rec[i].h, rec[i + 1].h) + (rec[i + 1].d - rec[i].d - abs(rec[i].h - rec[i + 1].h)) / 2);\n    ans = max(ans, rec[m].h + n - rec[m].d);\n\n    printf(\"%d\\n\", ans);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define max(a, b) (((a) > (b)) ? (a) : (b))\n\ntypedef struct {\n    int d, h;\n} Rec;\n\nRec rec[100000];\n\nint main(void) {\n    int i;\n    int n, m;\n    int ans;\n\n    scanf(\"%d %d\", &n, &m);\n    for (i = 0; i < m; i++)\n        scanf(\"%d %d\", &rec[i].d, &rec[i].h);\n\n    ans = -1;\n    for (i = 0; i < m - 1; i++)\n        if (abs(rec[i].h - rec[i + 1].h) > rec[i + 1].d - rec[i].d) {\n            puts(\"IMPOSSIBLE\");\n            return 0;\n        } else\n            ans = max(ans, max(rec[i].h, rec[i + 1].h) + (rec[i + 1].d - rec[i].d - abs(rec[i].h - rec[i + 1].h)) / 2);\n    ans = max(ans, rec[0].h + rec[0].d - 1);\n    ans = max(ans, rec[m - 1].h + n - rec[m - 1].d);\n\n    printf(\"%d\\n\", ans);\n\n    return 0;\n}\n"}
{"similarity_score": 0.863481228668942, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "18aa4270bcb137f860c4e9248d04d27a", "bug_code_uid": "02b6ca5a86c6944c687370ee1cdb4490", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "ccf270bc7c2cd331feb79fceb2371aea", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n;\n    scanf(\"%d\",&n);\n    int myarray[n];\n    char myarray1[n];\n    scanf(\"%s\",&myarray1);\n    int min=9999999;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&myarray[i]);\n    }\n    for(i=0; i<n-1; i++)\n    {\n        if(myarray1[i]=='R'&&myarray1[i+1]=='L')\n        {\n\n            if((myarray[i+1]-myarray[i])<min)\n            {\n                min=(myarray[i+1]-myarray[i]);\n            }\n        }\n    }\n    if(min==9999999)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else\n    {\n        printf(\"%d\",min/2);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n;\n    char myarray1[1000000];\n    scanf(\"%d\\n%s\",&n,&myarray1);\n    int myarray[n];\n    int min=2147483647;\n    for(i=0; i<n; i++){\n        scanf(\"%d\",&myarray[i]);\n    }\n    for(i=0; i<n-1; i++)\n    {\n        if(myarray1[i]=='R'&&myarray1[i+1]=='L')\n        {\n\n            if((myarray[i+1]-myarray[i])<min)\n            {\n                min=(myarray[i+1]-myarray[i]);\n            }\n        }\n    }\n    if(min==2147483647)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else\n    {\n        printf(\"%d\",min/2);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7315789473684211, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2bea44285c423fc2404e2eb1492cf2fe", "bug_code_uid": "64e7ebc05cb7f207bc389006569b72ca", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "4322260135cffa10abbc176e0ac4f024", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i,n,count =1, max =1;\n    scanf(\"%d\",&n);\n    int arr[10000];\n    for(i = 1;i<=n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(arr[i]<=arr[i+1])\n            count++;\n        else\n            count = 1;\n        if(max<count)\n            max = count;\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,arr[100000],count =1, max =1;\n    scanf(\"%d\",&n);\n     \n    for(int i = 1;i<=n;i++)\n    \n        scanf(\"%d\",&arr[i]);\n    \n    \n    for(int i = 1;i<n;i++)\n    {      \n        if(arr[i]<=arr[i+1])\n            count++;\n        else\n            count = 1;\n        if(max<count)\n            max = count;\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9029535864978903, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fc411487197ea5f3710194cad5a4b07e", "bug_code_uid": "62e10e11deeb117e8698edb4dc682044", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "1ee6b8ce06bbeb7f5fca2ae21a4e9f65", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nint a,b,c,d,i;\r\nscanf(\"%d\",&d);\r\nfor(i=1;i<=d;i++)\r\n{\r\n    scanf(\"%d%d%d\",&a,&b,&c);\r\n    if(a+b==c||a+c==b||b+c==a)\r\n    {\r\n        printf(\"yes\");\r\n    }\r\n    else{\r\n        printf(\"no\");\r\n    }\r\n}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nint a,b,c,d,i;\r\nscanf(\"%d\",&d);\r\nfor(i=1;i<=d;i++)\r\n{\r\n    scanf(\"%d%d%d\",&a,&b,&c);\r\n    if(a+b==c||a+c==b||b+c==a)\r\n    {\r\n        printf(\"YES\\n\");\r\n    }\r\n    else{\r\n        printf(\"NO\\n\");\r\n    }\r\n}\r\n}"}
{"similarity_score": 0.9932627526467758, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "75cfaa9b5ce2c6aa4a1d55fd4f137b49", "bug_code_uid": "0ed65a7de92b2d034a26a10df8e59dc3", "src_uid": "f78d04f699fc94103e5b08023949854d", "apr_id": "acfd47b5e3f1af6406e1dbe66a5356ee", "difficulty": 1200, "tags": ["constructive algorithms", "two pointers", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar ch[1001];\n\tscanf(\"%s\",ch);\n\tint i1[500];\n\tint j1[500];\n\tint op=1;\n\tint len;\n    len = strlen(ch);\n\tint i=0,j=len -1;\n\twhile(op == 1)\n\t{\n\t\tint k =0;\n        for(i=0; i<j; i++)\n\t\t{\n\t\t    if(i==j)\n\t\t        break;\n\t\t\tif(ch[i] == '(')\n\t\t\t{\n\t\t\t\twhile(j>i)\n\t\t\t\t{\n\t\t\t\t\tif(ch[j] == ')')\n\t\t\t\t\t{\n\t\t\t\t\t\ti1[k] = i;\n\t\t\t\t\t\tj1[k] = j;\n\t\t\t\t\t\tk++;\n\t\t\t\t\t\tj--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(k ==0)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\top = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"1\\n\");\n\t\t\tprintf(\"%d\\n\",2*k);\n\t\t\tfor(i=0; i<k; i++)\n\t\t\t\tprintf(\"%d \",i1[i]);\t\t\t\n\t\t\tfor(i=k-1; i>=0; i--)\n\t\t\t\tprintf(\"%d \",j1[i]);\n\t\t\tprintf(\"\\n\");\n\t\t\top = 0;\n\t\t}\n\t\n\t}\n\t\n\t\n}\n", "fixed": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar ch[1001];\n\tscanf(\"%s\",ch);\n\tint i1[500];\n\tint j1[500];\n\tint op=1;\n\tint len;\n    len = strlen(ch);\n\tint i=0,j=len -1;\n\twhile(op == 1)\n\t{\n\t\tint k =0;\n        for(i=0; i<j; i++)\n\t\t{\n\t\t    if(i==j)\n\t\t        break;\n\t\t\tif(ch[i] == '(')\n\t\t\t{\n\t\t\t\twhile(j>i)\n\t\t\t\t{\n\t\t\t\t\tif(ch[j] == ')')\n\t\t\t\t\t{\n\t\t\t\t\t\ti1[k] = i;\n\t\t\t\t\t\tj1[k] = j;\n\t\t\t\t\t\tk++;\n\t\t\t\t\t\tj--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(k ==0)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\top = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"1\\n\");\n\t\t\tprintf(\"%d\\n\",2*k);\n\t\t\tfor(i=0; i<k; i++)\n\t\t\t\tprintf(\"%d \",i1[i]+1);\t\t\t\n\t\t\tfor(i=k-1; i>=0; i--)\n\t\t\t\tprintf(\"%d \",j1[i]+1);\n\t\t\tprintf(\"\\n\");\n\t\t\top = 0;\n\t\t}\n\t\n\t}\n\t\n\t\n}\n"}
{"similarity_score": 0.4672364672364672, "equal_cnt": 18, "replace_cnt": 5, "delete_cnt": 7, "insert_cnt": 6, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "9e52301aad4ca73875a70e16b96de609", "bug_code_uid": "859179d162b75085290aa63e780b611d", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "3bc02015d01e5fb0f5c20599dd246058", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() \n{\n      long long int t, n, k, i, j, u, v, p;\n      scanf(\"%lli\", &t) ;\n      for(i=0;i<t;i++) \n      {\n      \tscanf(\"%lli %lli\", &n, &k) ;\n      \t\n      \tp=(n*(n-1))/2;\n      \tu=n-1;\n      \tv=n;\n      \tif(k==1)\n      \tfor(j=1;j<=n;j++) \n      \t{\n      \t\tif(j>=(n-1)) \n      \t\tprintf(\"b\") ;\n      \t\telse\n      \t\tprintf(\"a\") ;\n      \t} \n      \t\n      \telse if(k==p) \n      \tfor(j=1;j<=n;j++) \n      \t{\n      \t\tif(j<=2)\n      \t\tprintf(\"b\") ;\n      \t\telse\n      \t\tprintf(\"a\") ;\n      \t} \n      \t\n      \telse\n      \t{\n      \t\tfor(j=1;j<k;j++) \n      \t\t{\n      \t\t\tif((v-u)==1)\n      \t\t\t{\n      \t\t\t\tu-=1;\n      \t\t\t\tv=n;\n      \t\t\t} \n      \t\t\telse\n      \t\t\tv-=1;\n      \t\t} \n      \t\tfor(j=1;j<=n;j++) \n      \t\t{\n      \t\t\tif(j==u || j==v) \n      \t\t\tprintf(\"b\") ;\n      \t\t\telse\n      \t\t\tprintf(\"a\") ;\n      \t\t} \n      \t} \n      \tprintf(\"\\n\") ;\n     } \n     return 0;\n} ", "fixed": "#include<stdio.h>\nint main() \n{\n      long long int t, sum, l, cnt, p, n, k, q, i, j;\n      scanf(\"%lli\", &t) ;\n      for(i=0;i<t;i++) \n      {\n      \tsum=0;\n      \tscanf(\"%lli %lli\", &n, &k) ;\n      \tfor(cnt=0,l=1;sum<k;cnt++) \n      \t{\n      \t\tsum=sum+l;\n      \t\tl+=1;\n      \t} \n      \tp=n-cnt;\n      \tq=n-(k-(((cnt-1)*cnt)/2))+1;\n      \t\n      \tfor(j=1;j<=n;j++) \n      \t{\n      \t\tif(j==p || j==q) \n      \t\tprintf(\"b\") ;\n      \t\telse\n      \t\tprintf(\"a\") ;\n      \t} \n      \tprintf(\"\\n\") ;\n     } \n     return 0;\n} "}
{"similarity_score": 0.8269525267993875, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "acdfdf1c5ba92532c2efb526e2e6b104", "bug_code_uid": "b9f0256c396af6e7773e8f5a87503a6f", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "2a719f49941f273b7d5aada12d0075b3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n{\r\n    int a[100],i, n,c=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(i=1;i<n;i++)\r\n    {\r\n        if(a[0]>a[i])\r\n        {\r\n            c++;\r\n        }\r\n    }\r\n    printf(\"%d\",c);\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main()\r\n{\r\n    int a[100],i,s=0,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n     s=0;\r\n     for(i=0;i<4;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(i=1;i<4;i++)\r\n    {\r\n        if(a[i]>a[0])\r\n        {\r\n            s++;\r\n        }\r\n    }\r\n    printf(\"%d\\n\",s);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9901315789473685, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e82ffbd2a5045c09b505879ab90e0214", "bug_code_uid": "bbd5fd758a1f134cf516d8123b4c445c", "src_uid": "19f2c21b18e84f50e251b1dfd557d32f", "apr_id": "9c9a843b8f3b3782a1aa65f72b9792a3", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define MAX_LEN (1000000)\n#define PIVOT   ('^')\n#define BAR     ('=')\n\nint val(char c) {\n  if ( c == BAR )\n    return 0;\n  return c - '0';\n}\n\nint main() {\n  char buf[MAX_LEN+1];\n  char *p, *pv;\n  int left, right;\n\n  gets(buf);\n  pv = strchr(buf, PIVOT);\n  for ( p=pv-1, left=0; p >= buf; --p )\n    left += (pv - p) * val(*p);\n  for ( p=pv+1, right=0; *p; ++p )\n    right += (p - pv) * val(*p);\n  if ( left > right )\n    printf(\"left\\n\");\n  else if ( right > left )\n    printf(\"right\\n\");\n  else\n    printf(\"balance\\n\");\n  return EXIT_SUCCESS;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n#define MAX_LEN (1000000)\n#define PIVOT   ('^')\n#define BAR     ('=')\n\nint val(char c) {\n  if ( c == BAR )\n    return 0;\n  return c - '0';\n}\n\nint main() {\n  char buf[MAX_LEN+1];\n  char *p, *pv;\n  long long left, right;\n\n  gets(buf);\n  pv = strchr(buf, PIVOT);\n  for ( p=pv-1, left=0; p >= buf; --p )\n    left += (pv - p) * val(*p);\n  for ( p=pv+1, right=0; *p; ++p )\n    right += (p - pv) * val(*p);\n  if ( left > right )\n    printf(\"left\\n\");\n  else if ( right > left )\n    printf(\"right\\n\");\n  else\n    printf(\"balance\\n\");\n  return EXIT_SUCCESS;\n}\n"}
{"similarity_score": 0.4989912575655683, "equal_cnt": 19, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "e97429ca1499612aaabbdda494146b32", "bug_code_uid": "6db73d3368824c1c7a85a8ea3272b21c", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "270d72475a6edb16c4f458f71ff490cf", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// 294B.cpp : Defines the entry point for the console application.\n//\n\n//#include \"stdafx.h\"\n#include <stdio.h>\n\n#define MAX_N 100000\n\nint n,a[MAX_N],b[MAX_N],c[MAX_N];\nint bc[MAX_N],cc[MAX_N];\n\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tint i,j;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n-1;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tfor(i=0;i<n-2;i++)\n\t\tscanf(\"%d\",&c[i]);\n\n\tfor(i=0;i<n;i++){\n\t\tfor(j=0;j<n-1;j++){\t\n\t\t\tif(a[i]==b[j] && !bc[j]){\n\t\t\t\tbc[j]=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j==n-1){\n\t\t\tprintf(\"%d\\n\",a[i]);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor(i=0;i<n-1;i++){\n\t\tfor(j=0;j<n-2;j++){\t\n\t\t\tif(b[i]==c[j] && !cc[j]){\n\t\t\t\tcc[j]=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j==n-2){\n\t\t\tprintf(\"%d\\n\",b[i]);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\n\treturn 0;\n}\n\n", "fixed": "// 294B.cpp : Defines the entry point for the console application.\n//\n\n//#include \"stdafx.h\"\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_N 100005\n\nint n,a[MAX_N],b[MAX_N],c[MAX_N];\n\nint cmp (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tint i,pa,pb,svbi;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tqsort(a,n,sizeof(int),cmp);\n\tfor(i=0;i<n-1;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tqsort(b,n-1,sizeof(int),cmp);\n\tfor(i=0;i<n-2;i++)\n\t\tscanf(\"%d\",&c[i]);\n\tqsort(c,n-2,sizeof(int),cmp);\n\tpa=pb=0;\n\tsvbi=-1;\n\tfor(i=0;i<n && pa+pb<2;i++){\n\t\tif(a[i]!=b[i] && !pa){\n\t\t\tpa=1;\n\t\t\tprintf(\"%d\\n\",a[i]);\n\t\t}\n\t\tif(b[i]!=c[i] && !pb){\n\t\t\tpb=1;\n\t\t\tif(pa)\n\t\t\t\tprintf(\"%d\\n\",b[i]);\n\t\t\telse\n\t\t\t\tsvbi=i;\n\t\t}\n\t}\n\tif(svbi>-1)\n\t\tprintf(\"%d\\n\",b[svbi]);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.2822822822822823, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "f2c859e4bbf606d74e213d2fce7cc37f", "bug_code_uid": "59817ad4d1dd9b69fb8df3573526862a", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "c8a4af53c21a1c2c7708422523d72207", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t,a,b,c,i,j;\n    printf(\"Enter number of testcases:\\n\");\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        if(a==(b+c)) printf(\"YES\\n\");\n        else if(b==(a+c)) printf(\"YES\\n\");\n        else if(c==(b+a)) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}\n\n \t\t\t\t\t      \t\t \t\t\t    \t \t \t \t\t\t", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t,d;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int a,b,c;\n\t    scanf(\"%d%d%d\",&a,&b,&c);\n\t    if((a+b==c)||(b+c==a)||(c+a==b)) printf(\"YES\\n\");\n\t    else printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n\n\n\t\t \t \t\t\t\t\t \t \t \t\t \t\t\t \t\t\t\t\t \t\t\t"}
{"similarity_score": 0.9960629921259843, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7070be98a73c0815240a0f1f11335990", "bug_code_uid": "b8e29a286e0bc718479133f9d858e654", "src_uid": "97697eba87bd21ae5c979a5ea7a81cb7", "apr_id": "1e3a278839fa678f4d6d19a54777ce3a", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    short i;\n    int n1;\n    short num_pizzas[200000];\n    scanf(\"%d\", &n1);\n    for (i = 0; i < n1; i++) scanf(\"%d\", &num_pizzas[i]);\n\n    for(i = 0; i < n1-1; i++)\n    {\n        num_pizzas[i] %= 2;  //Uso lo sconto per l'acquisto di due pizze\n        if (num_pizzas[i] != 0)\n        {\n            if (num_pizzas[i+1] == 0)\n            {\n                printf(\"NO\");               //Se oggi mi rimane da comprare una pizza ma non ne ho domani per usare il coupon\n                return 0;\n            }\n            else\n            {\n                num_pizzas[i+1]--;             //Uso il coupon\n            }\n        }\n    }\n\n    num_pizzas[n1-1] %= 2;                   //Uso lo sconto per l'acquisto di due pizze\n\n    if (num_pizzas[n1-1] != 0)\n    {\n        {\n            printf(\"NO\");                       //Mi rimane ancora una pizza da comprare ma non posso usare sconti\n        }\n    }\n    else\n    {\n        printf(\"YES\");\n    }\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    int i;\n    int n1;\n    short num_pizzas[200005];\n    scanf(\"%d\", &n1);\n    for (i = 0; i < n1; i++) scanf(\"%d\", &num_pizzas[i]);\n\n    for(i = 0; i < n1-1; i++)\n    {\n        num_pizzas[i] %= 2;  //Uso lo sconto per l'acquisto di due pizze\n        if (num_pizzas[i] != 0)\n        {\n            if (num_pizzas[i+1] == 0)\n            {\n                printf(\"NO\");               //Se oggi mi rimane da comprare una pizza ma non ne ho domani per usare il coupon\n                return 0;\n            }\n            else\n            {\n                num_pizzas[i+1]--;             //Uso il coupon\n            }\n        }\n    }\n\n    num_pizzas[n1-1] %= 2;                   //Uso lo sconto per l'acquisto di due pizze\n\n    if (num_pizzas[n1-1] != 0)\n    {\n        {\n            printf(\"NO\");                       //Mi rimane ancora una pizza da comprare ma non posso usare sconti\n        }\n    }\n    else\n    {\n        printf(\"YES\");\n    }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8590116279069767, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f66df82b429bee862a9b1385eb39f3c7", "bug_code_uid": "01aed33da9c4a81122e175170164df67", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "6ce4497a77a416cda96ccf4a63400a51", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long int n,A,m,l,r,x=0,y=0;\n    int i,j;\n\n    scanf(\"%ld %ld\", &n, &m);\n\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d \", &A);\n        if(A==1)\n        {\n            x++;\n        }\n\n        else\n        {\n            y++;\n        }\n    }\n\n    for(i=1; i<=m; i++)\n    {\n        scanf(\"%ld %ld\", &l, &r);\n        printf(\"%d\\n\",rearrange (x,y,l,r));\n    }\n\n    return 0;\n}\n\nint rearrange(int x,int y,long int l, long int r)\n{\n    int z,b;\n\n    if(y%2==0)\n    {\n        z=(r-l)+y;\n    }\n    else\n    {\n        z=(r-l)+y+1;\n    }\n\n    if((x!=0)&&(z%2!=0))\n    {\n        b=1;\n    }\n    else\n    {\n        b=0;\n    }\n\n    return b;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long int n,A,m,l,r,x=0,y=0;\n    int i,j;\n\n    scanf(\"%ld %ld\", &n, &m);\n\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d \", &A);\n        if(A==1)\n        {\n            x++;\n        }\n\n        else\n        {\n            y++;\n        }\n    }\n\n    for(i=1; i<=m; i++)\n    {\n        scanf(\"%ld %ld\", &l, &r);\n        printf(\"%d\\n\",rearrange (x,y,l,r));\n    }\n\n    return 0;\n}\n\nint rearrange(int x,int y,long int l, long int r)\n{\n    int z, b,o,p;\n    o=(r-l)+1;\n    p=r-l;\n    if(p%2==0)\n    {\n        z=(r-l)/2;\n    }\n    else\n    {\n        z=((r-l)+1)/2;\n    }\n\n    if((x>=z)&&(y>=z)&&(z!=0)&&(o%2==0))\n    {\n        b=1;\n    }\n    else\n    {\n        b=0;\n    }\n\n    return b;\n}"}
{"similarity_score": 0.9736147757255936, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "499be83fe894620ce8842b6775fad3a1", "bug_code_uid": "d0dfc27c17f0cf6cd66eb0ab4d841438", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "504c1e763eec96eb7fee2305f711ad6d", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t,n,a,b,g,i;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d%d\",&n,&a,&b);\n        char ch[n],c='a';\n        b--;\n        for(i =0;i<n;i++){\n            g=i;\n            g=g%a;\n            if(g==0) c='a';\n            if(g<b)  ch[i] = c++;\n            else ch[i]=c;\n        }\n        printf(\"%s\\n\",ch);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t,n,a,b,g,i;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d%d\",&n,&a,&b);\n        char ch[n],c='a';\n        ch[n]='\\0';\n        b--;\n        for(i =0;i<n;i++){\n            g=i;\n            g=g%a;\n            if(g==0) c='a';\n            if(g<b)  ch[i] = c++;\n            else ch[i]=c;\n        }\n        printf(\"%s\\n\",ch);\n    }\n    return 0;\n}"}
{"similarity_score": 0.923226433430515, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f6df73fd00236401de47e28d9fe47662", "bug_code_uid": "a01970577a1ae2e19ce22d29c605aaa7", "src_uid": "3d6cd0a82513bc2119c9af3d1243846f", "apr_id": "41e3d086b814e81887584b894e2e8d5d", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n\tint num, group ,cnt[26];\n\tchar s[1000];\t\n\tscanf(\"%d\", &num);\n\tfor(int i = 0; i < num; i ++){\n\t\tscanf(\"%d\", &group);\n\t\tfor(int j = 0; j < group; j ++){\n\t\t\tscanf(\"%s\", s);\n\t\t\tfor(int k = 0; k < strlen(s); k ++)\n\t\t\t\tcnt[(int)(s[k] - 'a')] ++;\n\t\t}\n\t\tfor(int j = 0; j < 26; j ++){\n\t\t\tif(cnt[j] % group != 0){\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(j == 25 && cnt[j] % group == 0)\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\tcnt[j] = 0;\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n\tint num, group ,cnt[26] = {};\n\tchar s[1000];\t\n\tscanf(\"%d\", &num);\n\tfor(int i = 0; i < num; i ++){\n\t\tscanf(\"%d\", &group);\n\t\tfor(int j = 0; j < group; j ++){\n\t\t\tscanf(\"%s\", s);\n\t\t\tfor(int k = 0; k < strlen(s); k ++)\n\t\t\t\tcnt[s[k] - 'a'] ++;\n\t\t}\n\t\tfor(int j = 0; j < 26; j ++){\n\t\t\tif(cnt[j] % group != 0){\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(j == 25 && cnt[j] % group == 0)\n\t\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\tfor(int j = 0; j < 26; j ++)\n\t\t\tcnt[j] = 0;\n\t}\n}"}
{"similarity_score": 0.9841726618705036, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "603d2018861df81ef5ecbe7b8b6e7974", "bug_code_uid": "93170a6ecda6b1feac4879b06ab25017", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "c0d3d982e21abdbe6a6ef6d68022339a", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n      int n,x,a[100001],b[100001],time=0,i,k,y,z;\n      scanf(\"%d\",&n);\n      scanf(\"%d\",&x);\n      for(i=0;i<100001;i++)\n      b[i]=0;\n      for(i=0;i<n;i++)\n      {\n         scanf(\"%d\",&a[i]);\n         b[a[i]]++;\n      }\n      for(i=1;i<=100000;i++)\n      {\n        if(b[i])\n        {\n          if(x==1)\n          time+=i*b[i];\n          else if(x>=b[i])\n          {\n           y=x-b[i];\n           time+= i*((x*(x+1))/2-(y*(y+1))/2);\n           x-=b[i];\n          }\n          else\n          {\n           z=b[i]-x;\n           time+= (i*((x*(x+1))/2))+i*z;\n           x=1;\n          }\n        }\n      }\n      printf(\"%d\\n\",time);\n      return 0;\n}\n       \n", "fixed": "#include<stdio.h>\nmain()\n{\n      long long int n,x,a[100001],b[100001],time=0,i,k,y,z;\n      scanf(\"%I64d\",&n);\n      scanf(\"%I64d\",&x);\n      for(i=0;i<100001;i++)\n      b[i]=0;\n      for(i=0;i<n;i++)\n      {\n         scanf(\"%I64d\",&a[i]);\n         b[a[i]]++;\n      }\n      for(i=1;i<=100000;i++)\n      {\n        if(b[i])\n        {\n          if(x==1)\n          time+=i*b[i];\n          else if(x>=b[i])\n          {\n           y=x-b[i];\n           time+= i*((x*(x+1))/2-(y*(y+1))/2);\n           x-=b[i];\n          }\n          else\n          {\n           z=b[i]-x;\n           time+= (i*((x*(x+1))/2))+i*z;\n           x=1;\n          }\n        }\n      }\n      printf(\"%I64d\\n\",time);\n      return 0;\n}\n       \n"}
{"similarity_score": 0.9991416309012876, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1714ec558c3604b6585165bc8cfdbc0d", "bug_code_uid": "12ded03a4c54524f7db0c47b66d4e5dc", "src_uid": "a6cbf01d72d607ca95fe16df4fb16693", "apr_id": "9dfa06b04f12572ea23bd42edf373642", "difficulty": 800, "tags": ["data structures", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "char rooms[] = \"0000000000\";\noccupyLeft() {\n  int i;\n  for(i=0;i<9;i++) {\n    if('0'==rooms[i]) {\n      rooms[i] = '1';\n      break;\n    }\n  }\n  return 0;\n}\noccupyRight() {\n  int i;\n  for(i=9;i>=0;i--) {\n    if('0'==rooms[i]) {\n      rooms[i] = '1';\n      break;\n    }\n  }\n  return 0;\n}\ncheckout(i) {\n  rooms[i] = '0';\n  return 0;\n}\nlobby(char c) {\n  switch(c) {\n    case 'L':return occupyLeft();\n    case 'R':return occupyRight();\n    default: return checkout(c - '0');\n  }\n}\nc,n;\nmain() {\n  scanf(\"%d\\n\", &n);\n  while(n--) {\n    scanf(\"%c\", &c);\n    lobby(c);\n  }\n  puts(rooms);\n}", "fixed": "char rooms[] = \"0000000000\";\noccupyLeft() {\n  int i;\n  for(i=0;i<=9;i++) {\n    if('0'==rooms[i]) {\n      rooms[i] = '1';\n      break;\n    }\n  }\n  return 0;\n}\noccupyRight() {\n  int i;\n  for(i=9;i>=0;i--) {\n    if('0'==rooms[i]) {\n      rooms[i] = '1';\n      break;\n    }\n  }\n  return 0;\n}\ncheckout(i) {\n  rooms[i] = '0';\n  return 0;\n}\nlobby(char c) {\n  switch(c) {\n    case 'L':return occupyLeft();\n    case 'R':return occupyRight();\n    default: return checkout(c - '0');\n  }\n}\nc,n;\nmain() {\n  scanf(\"%d\\n\", &n);\n  while(n--) {\n    scanf(\"%c\", &c);\n    lobby(c);\n  }\n  puts(rooms);\n}"}
{"similarity_score": 0.9978401727861771, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "380bb636b9227b76e480e8203650a4a6", "bug_code_uid": "1dd0ed70fb178e03513b919defff9461", "src_uid": "50738d19041f2e97e2e448eff3feed84", "apr_id": "a41b25649032e13500dbeeed62e10d16", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdint.h>\n\nint main(void){\n    int t, s, sum;\n    uint64_t n, moves, copy;\n    scanf(\"%i\", &t);\n\n    for(;t;t--){\n        scanf(\"%lu %i\", &n, &s);\n        moves = 0;\n        sum = 0;\n        copy = n;\n        while(copy){\n            sum += copy%10;\n            copy/=10;\n        }\n        copy = n;\n        if(sum <= s){\n            printf(\"%lu\\n\", moves);\n            continue;\n        }\n        sum++;\n        int i;\n        for(i=0; sum > s; i++)\n        {\n            sum -= copy%10;\n            copy /= 10;\n        }\n        copy++;\n        for(;i;--i){\n            copy *= 10;\n        }\n        \n        moves = copy-n;\n        printf(\"%lu\\n\", moves);\n    }\n}", "fixed": "#include<stdio.h>\n#include<stdint.h>\n\nint main(void){\n    int t, s, sum;\n    uint64_t n, moves, copy;\n    scanf(\"%i\", &t);\n\n    for(;t;t--){\n        scanf(\"%llu %i\", &n, &s);\n        moves = 0;\n        sum = 0;\n        copy = n;\n        while(copy){\n            sum += copy%10;\n            copy/=10;\n        }\n        copy = n;\n        if(sum <= s){\n            printf(\"%llu\\n\", moves);\n            continue;\n        }\n        sum++;\n        int i;\n        for(i=0; sum > s; i++)\n        {\n            sum -= copy%10;\n            copy /= 10;\n        }\n        copy++;\n        for(;i;--i){\n            copy *= 10;\n        }\n        \n        moves = copy-n;\n        printf(\"%llu\\n\", moves);\n    }\n}"}
{"similarity_score": 0.6192259675405742, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "d006b92799a6ad792820d32bc4cadcbe", "bug_code_uid": "0d86a379a346fbb12cf9216a5c4823e9", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "7ef6f8618e1ad9a80a233e4508d18a9c", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,j,k,l,temp;\n    long long int a[n],b=0,c=0;\n    for(i=0;i<n;i++)\n    {\n\tscanf(\"%lld\",&a[i]);\n\tb=b+a[i];\n    }\n    if(b%2==0)\n\tprintf(\"%lld\\n\",b);\n    else\n    {\n\tfor(j=0;j<n-1;j++)\n\t    for(k=0;k<n-j-1;k++)\n\t\tif(a[k]>a[k+1])\n\t\t{\n\t\t    temp=a[k];\n\t\t    a[k]=a[k+1];\n\t\t    a[k+1]=temp;\n\t\t}\n\tfor(l=1;l<n;l++)\n\t    c=c+a[l];\n\tprintf(\"%lld\\n\",c);\n    }\n    return 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i,j,l,temp;\n    long long int a[n],b=0,c=0,k;\n    for(i=0;i<n;i++)\n    {\n\tscanf(\"%lld\",&a[i]);\n\tb=b+a[i];\n    }\n    k=b;\n    if(b%2==0)\n\tprintf(\"%lld\\n\",b);\n    else\n    {\n\tfor(j=0;j<n;j++)\n\t    if( a[j]<=k && a[j]%2==1 )\n\t    {\n\t\tk=a[j];\n\t    }\n\tprintf(\"%lld\\n\",b-k);\n    }\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9907692307692307, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f59802bab0e759fd13cb4e15ff0e3ded", "bug_code_uid": "e04886149ef582f15a4d90f89a381619", "src_uid": "3488bb49de69c0c17ea0439e71b1e6ae", "apr_id": "042b52e98a4dd2a1ed25ef7e687c11dc", "difficulty": 1400, "tags": ["dp", "implementation", "sortings", "ternary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n\tint n,m,k;\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tint i,j,a[n*m];\n\tfor(i=0;i<n*m;i++)\n\t\tscanf(\"%d\",a+i);\n\n\tint src = a[0]%k;\n\tint flag = 1;\n\tfor(i=1;i<m*n;i++)\n\t{\n\t\tif(a[i]%k != src)\n\t\t\tflag = 0;\n\t}\n\n\tif(flag)\n\t{\n\t\tqsort(a,m*n,sizeof(int),compare);\n\n\t\tint median  = a[(m*n-1)/2];\n\t\tint ans = 0;\n\t\tfor(i=0;i<m*n;i++)\n\t\t\tans+=(abs(a[i]-median))/k;\n\t\tif((m*n)%2 == 0)\n\t\t{\n\t\t\tmedian = a[(m*n-1)/2+1];\n\t\t\tfor(i=0;i<m*n;i++)\n\t\t\t\tans+= (abs(a[i]-median))/k;\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t\telse\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\telse\n\t\tprintf(\"-1\\n\");\n}", "fixed": "#include <stdio.h>\n\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n\tint n,m,k;\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tint i,j,a[n*m];\n\tfor(i=0;i<n*m;i++)\n\t\tscanf(\"%d\",a+i);\n\n\tint src = a[0]%k;\n\tint flag = 1;\n\tfor(i=1;i<m*n;i++)\n\t{\n\t\tif(a[i]%k != src)\n\t\t\tflag = 0;\n\t}\n\n\tif(flag)\n\t{\n\t\tqsort(a,m*n,sizeof(int),compare);\n\n\t\tint median  = a[(m*n-1)/2];\n\t\tint ans = 0;\n\t\tfor(i=0;i<m*n;i++)\n\t\t\tans+=(abs(a[i]-median))/k;\n\t\tif((m*n)%2 == 0)\n\t\t{\n\t\t\tans = 0;\n\t\t\tmedian = a[(m*n-1)/2+1];\n\t\t\tfor(i=0;i<m*n;i++)\n\t\t\t\tans+= (abs(a[i]-median))/k;\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t\telse\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\telse\n\t\tprintf(\"-1\\n\");\n}"}
{"similarity_score": 0.9894475481067659, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "70171f027fbc7262169c66b6adc3e4b8", "bug_code_uid": "2ab86929236a60543e1bd7d55abec941", "src_uid": "bb071f1f4fc1c129a32064c1301f4942", "apr_id": "500d07c49a8c222b295f1f5bc2e1838e", "difficulty": 1200, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,x,i,j,k,p,a,b,f;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n\n        char n[x+1];\n\n        scanf(\"%s\",n);\n        i=0; a=0; b=0;\n\n        for(i=0;i<x;i++)\n        {\n            if(n[i]=='0') a++;\n            else b++;\n        }\n\n        if(a==0||b==0) { printf(\"%s\\n\",n); continue; }\n\n\n        i=0; a=0; b=0;\n\n        if(n[0]=='0')\n        {\n            i=0;\n            while(i<x&&n[i]=='0') { printf(\"%c\",'0'); i++; }\n        }\n        j=x-1; f=0;\n        while(j>=i&&n[j]=='1') { j--; a++; f=1;  }\n\n        while(j>=i&&n[j]=='0'&&f==1) { printf(\"%c\",n[j]); j--;  }\n\n        if(f==0&&i==0) printf(\"%c\",'0');\n        else\n        {\n            for(i=0;i<a;i++)\n                printf(\"%c\",'1');\n        }\n\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,x,i,j,k,p,a,b,f;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n\n        char n[x+1];\n\n        scanf(\"%s\",n);\n        i=0; a=0; b=0;\n\n        for(i=0;i<x;i++)\n        {\n            if(n[i]=='0') a++;\n            else b++;\n        }\n\n        if(a==0||b==0) { printf(\"%s\\n\",n); continue; }\n\n\n        i=0; a=0; b=0; f=0;\n\n        if(n[0]=='0')\n        {\n            i=0;\n            while(i<x&&n[i]=='0') { printf(\"%c\",'0'); i++; }\n        }\n        j=x-1; f=0;\n        while(j>=i&&n[j]=='1') { j--; a++; f=1;  }\n\n        while(j>=i&&n[j]=='0'&&f==1) { printf(\"%c\",n[j]); j--; break; }\n\n        if(f==0) printf(\"%c\",'0');\n        else\n        {\n            for(i=0;i<a;i++)\n                printf(\"%c\",'1');\n        }\n\n        printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.1548731642189586, "equal_cnt": 17, "replace_cnt": 16, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "c5908005456e185c7c24ce7a43a9e0a6", "bug_code_uid": "38e2ce23271a1a63bbe3e3127306f09c", "src_uid": "c3244e952830643938d51ce14f043d7d", "apr_id": "fd8597d246d4f69395f13d96b779b05c", "difficulty": 1200, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid reverse(char s[])\n{\n    int c, i, j;\n\n    for (i = 0, j = strlen(s)-1; i < j; i++, j--) {\n        c = s[i];\n        s[i] = s[j];\n        s[j] = c;\n    }\n}\n\nint main() {\n\tchar road[10001], first[101], last[101];\n\tscanf(\"%s %s %s\", road, first, last);\n\tint flag = 0;\n\tchar *f = strstr(road,first);\n\tint n = strlen(first);\n\tif (f && strstr(f+n,last)) {\n\t\tflag = 1;\n\t}\n\treverse(first);\n\treverse(last);\n\tf = strstr(road,last);\n\tn = strlen(last);\n\tif (f && strstr(f + n,last)) {\n\t\tflag += 2;\n\t}\n\tswitch(flag) {\n\t\tcase 0: printf(\"fantasy\"); break;\n\t\tcase 1: printf(\"forward\"); break;\n\t\tcase 2: printf(\"backward\"); break;\n\t\tcase 3: printf(\"both\"); break;\n\t}\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nvoid reverse(char *x)\n{\n\tchar *p=x;\n\twhile(p && *p) ++p;\n\tfor(--p;x<p;++x,--p)\n\t\t*x=*x^*p, *p=*x^*p, *x=*x^*p;\n}\nint func(char *str,char* a,char *b, int dir)\n{\n\tif(dir){\n\t\treverse(b);\n\t\treverse(a);\n\n\t\tchar *c=strstr(str,b);\n\t\tif(c==NULL) return 0;\n\n\t\tif(strstr(c+strlen(b),a)==NULL) return 0;\n\t\telse return 2;\n\t}\n\telse {\n\t\tchar *c=strstr(str,a);\n\t\tif(c==NULL) return 0;\n\t\t\n\t\tif(strstr(c+strlen(a),b)==NULL) return 0;\n\t\telse return 1;\n\t}\n}\nint main(void)\n{\n\tchar stat[100001],seq1[101],seq2[101];\n\n\tscanf(\"%s\",stat);\n\tscanf(\"%s\",seq1);\n\tscanf(\"%s\",seq2);\n\n\tint result=func(stat,seq1,seq2,0)+func(stat,seq1,seq2,1);\n\n\tif(result==0) printf(\"fantasy\");\n\telse if(result==1) printf(\"forward\");\n\telse if(result==2) printf(\"backward\");\n\telse printf(\"both\");\n\treturn 0;\n}"}
{"similarity_score": 0.8911917098445595, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ae1eb381d3cc509079d3c53a2c8a8dcf", "bug_code_uid": "e1be6e92cbded6c46a81b96a547dc7c2", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "c1989696ca7c1987c5fd1c35f267e88f", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n\tint i,a,b,s=0,k,n;\n\tscanf(\"%d\",&k);\n\tfor(i=1;i<=k;i++)\n\t{\n\tscanf(\"%d %d %d\",&a,&b,&n);\n\twhile(a<n)\n\t{\n\tb=a+b;\n\ts++;\n\ta=a+b;\n\ts++;\n\tif(b>n)\n\ts=s-1;\n\telse\n\ts=s;\n\t}\n\t\n\tprintf(\"%d\\n\",s);\n\t//else\n\t//printf(\"%d\\n\",s-1);\n\ts=0;\n}\n}\t", "fixed": "#include <stdio.h>\nint main ()\n{\n\tint i,a,b,s=0,k,n,t;\n\tscanf(\"%d\",&k);\n\tfor(i=1;i<=k;i++)\n\t{\n\tscanf(\"%d %d %d\",&a,&b,&n);\n\tif (a<b){\n\t    t=a;\n\t    a=b;\n\t    b=t;\n\t}\n\twhile(a<=n && b<=n)\n\t{\n\tb=a+b;\n\ts++;\n\ta=a+b;\n\ts++;\n\tif(b>n)\n\ts=s-1;\n\telse\n\ts=s;//5 7 18\n\t}\n\t\n\tprintf(\"%d\\n\",s);\n\t//else\n\t//printf(\"%d\\n\",s-1);\n\ts=0;\n}\n}\t"}
{"similarity_score": 0.7383059418457648, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "1a8a8c1042ddd777107df76de79a3042", "bug_code_uid": "a6aedb3b90e9f229088ea3139e84e30d", "src_uid": "c647e36495fb931ac72702a12c6bfe58", "apr_id": "adfe11b0e887545593d11d08a1346f24", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nlong long int factorial(int n)\n{\n  long long int a[n+1];\n  a[0]=1;\n  int i;\n  for(i=1;i<=n;i++)\n  {\n    a[i]=a[i-1]*i;\n  }\n  return a[n];\n}\n\nint cmp(const void *a,const void *b)\n{\n    return *(int *)a-*(int *)b;\n}\n\nint cmpi(const void *a,const void *b) {\n    return ((const int *)a)[0] - ((const int *)b)[0];\n}\n\nint min(int a,int b)\n{\n  return (a>b?b:a);\n}\n\nint max(int a,int b)\n{\n  return (a<b?b:a);\n}\n\n\n\nint main()\n{\n  int n,t,m,i,j,a[100007],r[107],l[107],k,c=0;\n  long long int sum=0;\n  char str[101],c1[101],c2[101];\n  scanf(\"%d\",&n);\n  for(i=0;i<n;i++)\n  scanf(\"%d\",&a[i]);\n  for(i=1;i<n;i++)\n  {\n    if(a[i]<a[i-1])\n    {\n      c++;\n    }\n  }\n  if(c==0)\n  printf(\"0\\n\");\n  else if(c==1 && a[n-1]<=a[0])\n  {\n    printf(\"%d\\n\",n-i+1);\n  }\n  else\n  printf(\"-1\\n\");\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nlong long int factorial(int n)\n{\n  long long int a[n+1];\n  a[0]=1;\n  int i;\n  for(i=1;i<=n;i++)\n  {\n    a[i]=a[i-1]*i;\n  }\n  return a[n];\n}\n\nint cmp(const void *a,const void *b)\n{\n    return *(int *)a-*(int *)b;\n}\n\nint cmpi(const void *a,const void *b) {\n    return ((const int *)a)[0] - ((const int *)b)[0];\n}\n\nint min(int a,int b)\n{\n  return (a>b?b:a);\n}\n\nint max(int a,int b)\n{\n  return (a<b?b:a);\n}\n\n\n\nint main()\n{\n  int n,i,a,b,pos;\n\tint c=0,first;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&first);\n\ta=first;\n\tfor(i=2;i<=n;i++)\n\t{\n\tscanf(\"%d\",&b);\n\tif(a>b)\n\t{c++;pos=i;}\n\ta=b;\n\t}\n\tif(c==0)\n\tprintf(\"0\\n\");\n\telse if(c==1&&b<=first)\n\tprintf(\"%d\\n\",n-pos+1);\n\telse\n\tprintf(\"-1\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9950738916256158, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "51b165cd96bf2f5e9eeded6f8453f2a7", "bug_code_uid": "834b7b2236ac97fc37d647cdc3b47ffe", "src_uid": "ee105b664099808143a94a374d6d5daa", "apr_id": "9d4a400b4527bf44c0652218f51bc74e", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint odd(int n){\n if(n%2==1)\n    return 1;\n else\n    return 0;\n}\nint main()\n{\n   int b,k;\n   int a[101];\n   int i;\n   int od=0;\n   int op;\n   scanf(\"%d %d\",&b,&k);\n   op=odd(b);\n   for(i=1;i<=k;i++){\n    scanf(\"%d\",&a[i]);\n   }if(op){\n   for(i=1;i<k;i++){\n    if(odd(a[i]))\n        od++;\n   }}\n\n   if(odd(a[k]))\n    od++;\n   if(odd(od))\n    printf(\"odd\");\n   else\n    printf(\"even\");\n}", "fixed": "#include <stdio.h>\n\nint odd(int n){\n if(n%2==1)\n    return 1;\n else\n    return 0;\n}\nint main()\n{\n   int b,k;\n   int a[100001];\n   int i;\n   int od=0;\n   int op;\n   scanf(\"%d %d\",&b,&k);\n   op=odd(b);\n   for(i=1;i<=k;i++){\n    scanf(\"%d\",&a[i]);\n   }if(op){\n   for(i=1;i<k;i++){\n    if(odd(a[i]))\n        od++;\n   }}\n\n   if(odd(a[k]))\n    od++;\n   if(odd(od))\n    printf(\"odd\");\n   else\n    printf(\"even\");\n}\n"}
{"similarity_score": 0.8842443729903537, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b3c98f205177fa92da925c735b30db23", "bug_code_uid": "55765e8f9f06826a177a4ad4a77b530a", "src_uid": "d9e4a9a32d60e75f3cf959ef7f894fc6", "apr_id": "5c5f7f813625141f2006b8698ec7f5af", "difficulty": 800, "tags": ["constructive algorithms", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int i,q;\n    scanf(\"%d\",&q);\n    long long int answers[q],a,b,c,max,min;\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%lld %lld %lld\",&a,&b,&c);\n        max=a>b?a:b;\n        min=a<b?a:b;\n        answers[i]=max+(c-(max-min))/2;\n    }\n    for(i=0;i<q;i++)\n    {\n        printf(\"%lld\\n\",answers[i]);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int i,q;\n    scanf(\"%d\",&q);\n    long long int answers[q],a,b,c;\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%lld %lld %lld\",&a,&b,&c);\n        answers[i]=(a+b+c)/2;\n    }\n    for(i=0;i<q;i++)\n    {\n        printf(\"%lld\\n\",answers[i]);\n    }\n}\n"}
{"similarity_score": 0.6146788990825688, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "6bc534e36b1b64e2395bbe7da14fcf12", "bug_code_uid": "63b0acdb8ce5339a9d9fd222862a3442", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "9f95eef5a36afadf3c248965584eb9a4", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int n , i , j , counter1= 0 ,counter=0 , counter2 =0 ;\n     long long t = 0 ;\n     scanf(\"%d\",&n);\n     scanf(\"%I64d\",&t);\n     int array [n];\n     for(i=0 ; i < n ; i++){\n        scanf(\"%d\",&array[i]);\n     }\n     for(i= 0 ; i <n ; i ++){\n        for(j=i ; j < n ; j++){\n            counter+=array[j];\n            if(counter<=t)\n              counter1++;\n              else break;\n        }\n        if(counter1>counter2){\n            counter2=counter1;\n        }\n        counter1 = 0 ;\n        counter = 0 ;\n     }\n     printf(\"%d\",counter2);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int n , i , j , counter1 = 0 , counter = 0 , counter2 = 0 , index = 0 ;\n     long long t = 0 ;\n     scanf(\"%d\",&n);\n     scanf(\"%I64d\",&t);\n     int array [n];\n\n     for(i=0 ; i < n ; i++){\n        scanf(\"%d\",&array[i]);\n        counter+=array[i];\n\n        if(counter<=t){\n        counter1++;\n        }else{\n\n        counter-=array[index];\n        index++;\n        }\n     }\nprintf(\"%d\",counter1);\n    return 0;\n}\n"}
{"similarity_score": 0.9356521739130435, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "9c87689a5346238c7528aa95b5ce9070", "bug_code_uid": "713b7b6b073ae74a3db4242e50ed2487", "src_uid": "a704760d5ccd09d08558ea98d6007835", "apr_id": "4224df8f22b9126b9b38c58ad188fbba", "difficulty": 1500, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint n, *edge, *type,*mat,*pre,*tracks;\n\tscanf(\"%d\", &n);\n\tedge = malloc(sizeof(int)*n);\n\ttype = malloc(sizeof(int)*n);\n\ttracks = malloc(sizeof(int)*n);\n\tpre = malloc(sizeof(int)*n);\n\tmemset(pre, 0, sizeof(int)*n);\n\tmemset(tracks, 0, sizeof(int)*n);\n\tint i,j,max=0, gmax=0, gstart=0;\n\tfor(i=0;i<n;i++) scanf(\"%d\", &type[i]);\n\tfor(i=0;i<n;i++) scanf(\"%d\", &edge[i]);\n\tfor(i=0;i<n;i++) tracks[edge[i]]++;\n\tfor(i=0;i<n;i++)\n\t{\n\t\twhile((i<n) && (type[i]==0)) i++;\n\t\tif(i==n) break;\n\t\tmax=1;\n\t\tj=i;\n\t\twhile((edge[j]!=0) && (tracks[edge[j]]==1))\n\t\t{\n\t\t\tmax++;\n\t\t\tpre[edge[j]-1] = j;\n\t\t\tj=edge[j]-1;\n\t\t}\n\t\tif(max>gmax) {gmax=max; gstart=j;}\n\t}\n\tprintf(\"%d\\n\",gmax);\n\twhile(type[gstart]==0)\n\t{\n\t\tprintf(\"%d \", gstart+1);\n\t\tgstart = pre[gstart];\n\t}\n\tprintf(\"%d\\n\", gstart+1);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n\tint n, *edge, *type,*mat,*pre,*tracks;\n\tscanf(\"%d\", &n);\n\tedge = malloc(sizeof(int)*n);\n\ttype = malloc(sizeof(int)*n);\n\ttracks = malloc(sizeof(int)*n);\n\tpre = malloc(sizeof(int)*n);\n\tmemset(pre, 0, sizeof(int)*n);\n\tmemset(tracks, 0, sizeof(int)*n);\n\tint i,j,max=0, gmax=0, gstart=0;\n\tfor(i=0;i<n;i++) scanf(\"%d\", &type[i]);\n\tfor(i=0;i<n;i++) scanf(\"%d\", &edge[i]);\n\tfor(i=0;i<n;i++) if(edge[i]!=0) tracks[edge[i]-1]++;\n\tfor(i=0;i<n;i++)\n\t{\n\t\twhile((i<n) && (type[i]==0)) i++;\n\t\tif(i==n) break;\n\t\tmax=1;\n\t\tj=i;\n\t\twhile((edge[j]!=0) && (tracks[edge[j]-1]==1))\n\t\t{\n\t\t\tmax++;\n\t\t\tpre[edge[j]-1] = j;\n\t\t\tj=edge[j]-1;\n\t\t}\n\t\tif(max>gmax) {gmax=max; gstart=j;}\n\t}\n\tprintf(\"%d\\n\",gmax);\n\twhile(type[gstart]==0)\n\t{\n\t\tprintf(\"%d \", gstart+1);\n\t\tgstart = pre[gstart];\n\t}\n\tprintf(\"%d\\n\", gstart+1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6381322957198443, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "30cfe9495cf6b9092b5dcd2c0e680805", "bug_code_uid": "c35c08ac0a45dbd58bbc92cad44228fb", "src_uid": "3bff9b69423cf6c8425e347a4beef96b", "apr_id": "b50872522ec060abdc2894d870898ea6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,b,a,x=-1;\n\n    char s[10];\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%s %d %d\",&s[i], &b, &a);\n\n        if(b>=2400){\n            if(a>b){\n                x=0;\n                break;}\n            else if(a<=b){\n                x=-1;\n                break;}\n        }\n    }\n    if(x==0)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,b,a,x=0,y;\n\n    char s[10];\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s %d %d\",s, &b, &a);\n        y = a-b;\n        if(b>=2400 && y>0)\n        {\n            printf(\"YES\\n\");\n            x++;\n            return 0;\n        }\n    }\n    if(x==0)\n        printf(\"NO\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9750566893424036, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "fcbf16cf48032f1dae84b980ec29310f", "bug_code_uid": "0a948d5e73a63968433c219259f9af11", "src_uid": "856b71ffb53f186bccd66c890ed0e099", "apr_id": "afbaeec672ae59756004663ea5437879", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\t//n\u68cb\u76d8\u5927\u5c0f\uff0cm\u9e1f\u4e2a\u6570\r\n\t\tint n,m;\r\n\t\r\n\t\tscanf(\"%d %d\",&n,&m);\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tint arr[n][n];\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tfor(int j=0;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tarr[i][j]=0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint xi,yi;\r\n\t\t\t\r\n\t\t//\u7ed9\u6709\u9e1f\u7684\u4f4d\u7f6e\u653e\u7f6e1\r\n\t\tfor(int i=0;i<m;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d %d\",&xi,&yi);\r\n\t\t\t//\u6570\u7ec4\u4ece0\u5f00\u59cb\r\n\t\t\tarr[xi-1][yi-1]=1;\r\n\t\t}\r\n\t\t\r\n\t\tif(n==1&&m==1)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t\tt--;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t\r\n\t\t//\u5f53\u9e1f\u4e2a\u6570\u4e3a1\u65f6 \r\n\t\tif(m==1)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tt--;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tint hang=0,hang1=0,lie=0,lie1=0;\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfor(int j=0;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tif(arr[j][i]==0&&hang<n)\r\n\t\t\t\t{\r\n\t\t\t\t\thang++;\r\n\t\t\t\t\tif(hang==n)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thang1=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(arr[j][i]!=0)\r\n\t\t\t\t{\r\n\t\t\t\t\thang=0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(arr[i][j]==0&&lie<n)\r\n\t\t\t\t{\r\n\t\t\t\t\tlie++;\r\n\t\t\t\t\tif(lie==n)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlie1=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(arr[i][j]!=0)\r\n\t\t\t\t{\r\n\t\t\t\t\tlie=0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(j==n-1)\r\n\t\t\t\t{\r\n\t\t\t\t\thang=0,lie=0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(hang1==1&&lie1==1)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t\tgoto end;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tend:\r\n\t\tif(hang1!=1&&lie1!=1)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\t//n\u68cb\u76d8\u5927\u5c0f\uff0cm\u9e1f\u4e2a\u6570\r\n\t\tint n,m;\r\n\t\r\n\t\tscanf(\"%d %d\",&n,&m);\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tint arr[n][n];\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tfor(int j=0;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tarr[i][j]=0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint xi,yi;\r\n\t\t\t\r\n\t\t//\u7ed9\u6709\u9e1f\u7684\u4f4d\u7f6e\u653e\u7f6e1\r\n\t\tfor(int i=0;i<m;i++)\r\n\t\t{\r\n\t\tscanf(\"%d %d\",&xi,&yi);\r\n\t\t\t//\u6570\u7ec4\u4ece0\u5f00\u59cb\r\n\t\t\tarr[xi-1][yi-1]=1;\r\n\t\t}\r\n\t\t\r\n\t\tif(n==1&&m==1)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\r\n\t\t\tgoto end2;\r\n\t\t}\r\n\t\t\r\n\t\t//\u5f53\u9e1f\u4e2a\u6570\u4e3a1\u65f6 \r\n\t\tif(m==1)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\tgoto end2;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tint hang=0,hang1=0,lie=0,lie1=0;\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfor(int j=0;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tif(arr[j][i]==0&&hang<n)\r\n\t\t\t\t{\r\n\t\t\t\t\thang++;\r\n\t\t\t\t\tif(hang==n)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thang1=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(arr[j][i]!=0)\r\n\t\t\t\t{\r\n\t\t\t\t\thang=0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(arr[i][j]==0&&lie<n)\r\n\t\t\t\t{\r\n\t\t\t\t\tlie++;\r\n\t\t\t\t\tif(lie==n)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlie1=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(arr[i][j]!=0)\r\n\t\t\t\t{\r\n\t\t\t\t\tlie=0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(j==n-1)\r\n\t\t\t\t{\r\n\t\t\t\t\thang=0,lie=0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(hang1==1&&lie1==1)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t\t\tgoto end;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tend:\r\n\t\tif(hang1!=1&&lie1!=1)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\tend2:\r\n\t\t\t;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9899874843554443, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8527d76f5cf803c3f3297253d8ec721b", "bug_code_uid": "19faefb259cb56fb83574da83e559335", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "3b482422bf04aac9281e282940f96e14", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,move;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        move=0;\n        fflush(stdin);\n        scanf(\"%d\",&n);\n        if(n==1)\n            printf(\"0\\n\");\n        else\n        {\n            while(1)\n            {\n                if(n%6!=0&&n*2%6!=0)\n                {\n                     printf(\"-1\\n\");\n                    break;\n                }\n                if(n%6==0)\n                {\n                    n/=6;\n                    move++;\n                }\n                else\n                {\n                    n*=2;\n                    move++;\n                }\n                if(n==1)\n                {\n                     printf(\"%d\\n\",move);\n                     break;\n                }\n            }\n        }\n        \n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,move;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        move=0;\n       // fflush(stdin);\n        scanf(\"%d\",&n);\n        if(n==1)\n            printf(\"0\\n\");\n        else\n        {\n            while(1)\n            {\n                if(n%6!=0&&n*2%6!=0)\n                {\n                     printf(\"-1\\n\");\n                    break;\n                }\n                if(n%6==0)\n                {\n                    n/=6;\n                    move++;\n                }\n                else\n                {\n                    n*=2;\n                    move++;\n                }\n                if(n==1)\n                {\n                     printf(\"%d\\n\",move);\n                     break;\n                }\n            }\n        }\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9545454545454546, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "bd4597d8136886265bbbb698826815e8", "bug_code_uid": "588b7399f49246055107e921d03f2554", "src_uid": "f48ddaf1e1db5073d74a2aa318b46704", "apr_id": "0a359d927e184a7b6194bca116ed0aee", "difficulty": 1200, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*Copyright Alexey 2015*/\n#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\ntypedef long long ll;\nconst int N = 101;\nvoid solve() {\n  char s[N][N];\n  int c[N];\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%s\", s[i]);\n  }\n  int r = 1, i = 0;\n  while (i < n) {\n    c[i] = 1;\n    int j = 0;\n    while (j < i) {\n      if (strcmp(s[i], s[j]) == 0) {\n        if (c[i] < c[j] + 1) {\n          c[j] = c[j] + 1;\n          if (r < c[j]) {\n            r = c[j];\n          }\n        }\n      }\n      ++j;\n    }\n    ++i;\n  }\n  printf(\"%d\", r);\n}\nint main() {\n  solve();\n  return 0;\n}", "fixed": "/*Copyright Alexey 2015*/\n#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\ntypedef long long ll;\nconst int N = 101;\nvoid solve() {\n  char s[N][N];\n  int c[N];\n  int n, i = 0;\n  scanf(\"%d\", &n);\n  while (i < n) {\n    scanf(\"%s\", s[i]);\n    ++i;\n  }\n  int r = 1;\n  i = 0;\n  while (i < n) {\n    c[i] = 1;\n    int j = 0;\n    while (j < i) {\n      if (strcmp(s[i], s[j]) == 0) {\n        if (c[i] < c[j] + 1) {\n          c[j] = c[j] + 1;\n          if (r < c[j]) {\n            r = c[j];\n          }\n        }\n      }\n      ++j;\n    }\n    ++i;\n  }\n  printf(\"%d\", r);\n}\nint main() {\n  solve();\n  return 0;\n}"}
{"similarity_score": 0.6387536514118792, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "ef719c04fff48d1cea79a24505165405", "bug_code_uid": "7882be51ee6649d0e29a6903e8e125ba", "src_uid": "1956e31a9694b4fd7690f1a75028b9a1", "apr_id": "ba9f9353deb4fdd76e552489855711f9", "difficulty": 1000, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[610], res[610];\n\nint max(int a, int b){\n    return (a > b ? a : b);\n}\n\nint max3(int a, int b, int c){\n    return (max(a, max(b, c)));\n}\n\nint main(){\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    for(int i = 0; i < n; i++){\n        scanf(\"%d\", &a[i]);\n        res[i] = a[i];\n    }\n    int ans = 0;\n    for(int i = 1; i < n - 1; i += 2){\n        int val = max3(k - (a[i - 1] + a[i]), k - (a[i] + a[i + 1]), 0);\n        res[i] += val;\n        ans += val;\n    }\n    printf(\"%d\\n\", ans);\n    for(int i = 0; i < n; i++) printf(\"%d \", res[i]);\n    printf(\"\\n\");\n}", "fixed": "#include <stdio.h>\n\nint a[610];\n\nint max(int a, int b){\n    return (a > b ? a : b);\n}\n\nint main(){\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    for(int i = 0; i < n; i++){\n        scanf(\"%d\", &a[i]);\n    }\n    int ans = 0;\n    for(int i = 1; i < n; i++){\n        ans += max(k - a[i] - a[i - 1], 0);\n        a[i] += max(k - a[i] - a[i - 1], 0);\n    }\n    printf(\"%d\\n\", ans);\n    for(int i = 0; i < n; i++) printf(\"%d \", a[i]);\n    printf(\"\\n\");\n}"}
{"similarity_score": 0.5481798715203426, "equal_cnt": 18, "replace_cnt": 7, "delete_cnt": 10, "insert_cnt": 2, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "a2dc20b3389ef2124a42c399d089db3b", "bug_code_uid": "4b500e210b35fb0940eac21f1dea01ff", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "e5fbfe5eb73d090596cefdc6011f2a0b", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": " #include<stdio.h>\nint fact(long long int n)\n{\n    if(n==0)\n    return 1;\n    else\n    return (n*fact(n-1));\n}\nmain()\n{\n    long long int t,i,j;\n    scanf(\"%lld\",&t);\n    long long int arr[t];\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n        j=fact(arr[i]);\n        printf(\"%lld\\n\",j);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\nlong long int n,i,k;\nscanf(\"%lld\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%lld\",&k);\nprintf(\"%lld\\n\",k);\n}\nreturn 0; \n}"}
{"similarity_score": 0.9958100558659218, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "59de38e996af17725a26cd08a0c96917", "bug_code_uid": "6f5cdb88a79912979b684f138af03bab", "src_uid": "55956c5389c34e4012069de92b3185dc", "apr_id": "f0a8150141cbf0bcfa9fedd6555e8bed", "difficulty": 1600, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint i, j;\n\tchar n[300005], l;\n\tchar o[300005], e[300005];\n\tint lo, le, no, ne;\n\tfor (j = 0; j < t; j++)\n\t{\n\t\tscanf(\"%s\", n);\n\t\tl = strlen(n);\n\t\tlo = le = 0;\n\t\tfor (i = 0; i < l; i++)\n\t\t{\n\t\t\tif ((n[i] - '0') % 2 == 0)\n\t\t\t{\n\t\t\t\te[le] = n[i];\n\t\t\t\tle++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\to[lo] = n[i];\n\t\t\t\tlo++;\n\t\t\t}\n\t\t}\n\t\tne = no = 0;\n\t\tfor (i = 0; i < l; i++)\n\t\t{\n\t\t\tif (ne == le)\n\t\t\t{\n\t\t\t\tprintf(\"%c\", o[no]);\n\t\t\t\tno++;\n\t\t\t}\n\t\t\telse if (no == lo)\n\t\t\t{\n\t\t\t\tprintf(\"%c\", e[ne]);\n\t\t\t\tne++;\n\t\t\t}\n\t\t\telse if (o[no] < e[ne])\n\t\t\t{\n\t\t\t\tprintf(\"%c\", o[no]);\n\t\t\t\tno++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%c\", e[ne]);\n\t\t\t\tne++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint i, j, l;\n\tchar n[300005];\n\tchar o[300005], e[300005];\n\tint lo, le, no, ne;\n\tfor (j = 0; j < t; j++)\n\t{\n\t\tscanf(\"%s\", n);\n\t\tl = strlen(n);\n\t\tlo = le = 0;\n\t\tfor (i = 0; i < l; i++)\n\t\t{\n\t\t\tif ((n[i] - '0') % 2 == 0)\n\t\t\t{\n\t\t\t\te[le] = n[i];\n\t\t\t\tle++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\to[lo] = n[i];\n\t\t\t\tlo++;\n\t\t\t}\n\t\t}\n\t\tne = no = 0;\n\t\tfor (i = 0; i < l; i++)\n\t\t{\n\t\t\tif (ne == le)\n\t\t\t{\n\t\t\t\tprintf(\"%c\", o[no]);\n\t\t\t\tno++;\n\t\t\t}\n\t\t\telse if (no == lo)\n\t\t\t{\n\t\t\t\tprintf(\"%c\", e[ne]);\n\t\t\t\tne++;\n\t\t\t}\n\t\t\telse if (o[no] < e[ne])\n\t\t\t{\n\t\t\t\tprintf(\"%c\", o[no]);\n\t\t\t\tno++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%c\", e[ne]);\n\t\t\t\tne++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.3951612903225806, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d5745839908087dd034cb7d98252288e", "bug_code_uid": "ff26e278169f3ec16f218a041b02b280", "src_uid": "fb0a4c8f737c36596c2d8c1ae0d1e34e", "apr_id": "7837ed5a2bf11596fc2e53db78179392", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int test,n,s,t,r,i;\n    scanf(\"%d\",&test);\n    for(i=1;i<=test;i++)\n    {\n        scanf(\"%d %d %d\",&n,&s,&t);\n        if(t>=s && n!=s && n!=t)\n        {\n           r=s+1;\n        }\n        else if(s>=t && n!=s && n!=t)\n        {\n            r=t+1;\n        }\n        else if(s==t && n==s)\n        {\n            r=1;\n        }\n        else if(s==t && s+t==n)\n        {\n            r=n;\n        }\n        printf(\"%d\\n\",r);\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int test,n,s,t,r,i,small;\n    scanf(\"%d\",&test);\n    for(i=1;i<=test;i++)\n    {\n        scanf(\"%d%d%d\",&n,&s,&t);\n        if(s>t) small=t;\n        else small=s;\n        r=n-small+1;\n        printf(\"%d\\n\",r);\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.9546061415220294, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "097ce2c923b87d8cea9c4184d62f1d21", "bug_code_uid": "eab468d5fbb785685a667714de86bc7f", "src_uid": "0dc5469831c1d5d34aa3b7b172e3237b", "apr_id": "52d031e66ccbbe9d056bc687c1a5f0be", "difficulty": 1100, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint aray[1003][1003];\n\nint main()\n{\n    int n, k, m, i ,j,  a, b, count=0;\n    scanf(\"%d %d %d\", &n, &m, &k);\n    for(i=1;i<=k;i++){\n        scanf(\"%d %d\", &a, &b);\n\n        aray[a][b] = 1;\n\n        if(aray[a+1][b]==1 && aray[a][b+1]==1 && aray[a+1][b+1]==1){\n            count=1;\n        }\n        else if(aray[a-1][b-1]==1 && aray[a-1][b]==1 && aray[a][b-1]==1){\n            count=1;\n        }\n        else if(aray[a][b-1]==1 && aray[a+1][b-1]==1 && aray[a+1][b]==1){\n            count=1;\n        }\n        else if(aray[a+1][b]==1 && aray[a+1][b-1]==1 && aray[a][b-1]==1){\n            count=1;\n        }\n        if(count==1){\n            printf(\"%d\", i);\n            return 0;\n        }\n\n    }\n    printf(\"0\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint aray[1003][1003];\n\nint main()\n{\n    int n, k, m, i ,j,  a, b, count=0;\n    scanf(\"%d %d %d\", &n, &m, &k);\n    for(i=1;i<=k;i++){\n        scanf(\"%d %d\", &a, &b);\n\n        aray[a][b] = 1;\n\n        if(aray[a+1][b]==1 && aray[a][b+1]==1 && aray[a+1][b+1]==1){\n            count=1;\n        }\n        else if(aray[a-1][b-1]==1 && aray[a-1][b]==1 && aray[a][b-1]==1){\n            count=1;\n        }\n        else if(aray[a][b+1]==1 && aray[a-1][b+1]==1 && aray[a-1][b]==1){\n            count=1;\n        }\n        else if(aray[a+1][b]==1 && aray[a+1][b-1]==1 && aray[a][b-1]==1){\n            count=1;\n        }\n        if(count==1){\n            printf(\"%d\", i);\n            return 0;\n        }\n\n    }\n    printf(\"0\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9903930131004367, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "1af4dc645ee7617e98cdf8ba012bd7e7", "bug_code_uid": "f4cc758f33b4fbdb7fde8847f8a63b3a", "src_uid": "62a672fcaee8be282700176803c623a7", "apr_id": "cc1678f1601231f8b6b9d6a007c8a89b", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar a[100500],b[100];\nint main()\n{int result=0,i,m,n,len,k,j;\n    gets(a);\n    gets(b);\n    m=strlen(a);\n    n=strlen(b);\n    for(i=0;i<m;i++)\n    {\n        if(a[i]==b[0])\n        {len=0,k=0;\n            for(j=i;j<i+n;j++)\n                {\n                    if(a[j]!=b[k++])\n                        break;\n                    len++;\n                }\n                if(len==n)\n                {\n                    i=j;\n                    result++;\n                }\n        }\n    }\n    printf(\"%d\\n\",result);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[100500],b[100];\nint main()\n{int result=0,i,m,n,len,k,j;\n    gets(a);\n    gets(b);\n    m=strlen(a);\n    n=strlen(b);\n    for(i=0;i<m;i++)\n    {\n        if(a[i]==b[0])\n        {len=0,k=-1;\n            for(j=i;j<i+n;j++)\n                {\n                    if(a[j]!=b[++k])\n                        break;\n                    len++;\n                }\n\n                if(len==n)\n                {\n                    i=j-1;\n                    result++;\n                }\n\n        }\n    }\n    printf(\"%d\\n\",result);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9975308641975309, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6560ffb9a0581eb9c86804983e508d47", "bug_code_uid": "240278eae1525e719f5c60f11c56ea54", "src_uid": "2535fc09ce74b829c26e1ebfc1ee17c6", "apr_id": "7ba4b58f394a459471e127e95c649836", "difficulty": 1500, "tags": ["data structures", "greedy", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint n,i,num,p=1,stack[300000], top=-1, count=0;\n\tscanf(\"%d\",&n);\n\tchar arr[10];\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tscanf(\"%s\",arr);\n\t\tif(arr[0]=='a')\n\t\t{\n\t\t\tscanf(\"%d\", &num);\n\t\t\tstack[++top]=num;\n\t\t}\n\t\telse if(arr[0]=='r')\n\t\t{\n\t\t\tp++;\n\t\t\tif(top!=-1)\n\t\t\t{\n\t\t\t\tif(stack[top]==p)\n\t\t\t\t\ttop--;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\ttop=-1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", count);\n\t\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tint n,i,num,p=0,stack[300000], top=-1, count=0;\n\tscanf(\"%d\",&n);\n\tchar arr[10];\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tscanf(\"%s\",arr);\n\t\tif(arr[0]=='a')\n\t\t{\n\t\t\tscanf(\"%d\", &num);\n\t\t\tstack[++top]=num;\n\t\t}\n\t\telse if(arr[0]=='r')\n\t\t{\n\t\t\tp++;\n\t\t\tif(top!=-1)\n\t\t\t{\n\t\t\t\tif(stack[top]==p)\n\t\t\t\t\ttop--;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\ttop=-1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", count);\n\t\t\n\treturn 0;\n}"}
{"similarity_score": 0.9767741935483871, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "076e2ef843786ca99ccd5c73977c59f8", "bug_code_uid": "ec72c371b9f9d823aa3b69540df99603", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "7f324ea86fe8fa696ae7b33d463691f8", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int p=0, m=1, pe=2, n, t, ara[5555]={0}, i;\n    scanf(\"%d\", &n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\", &t);\n        if(t==1)\n        {\n            ara[p]=i;\n            p+=3;\n        }\n        else if(t==2)\n        {\n            ara[m]=i;\n            m+=3;\n        }\n        else\n        {\n            ara[pe]=i;\n            pe+=3;\n        }\n    }\n    if(p==0 || m==1 || pe==2)\n    {\n        printf(\"0\\n\");\n        return 0;\n    }\n    p/=3;\n    m/=3;\n    pe/=3;\n    \n    if(p<m)\n    {\n        if(p<pe) n=p;\n        else n=pe;\n    }\n    else\n    {\n        if(m<pe) n=m;\n        else n=pe;\n    }\n    printf(\"%d\\n\", n);\n    for(i=0; i<n*3; i+=3)\n    {\n        printf(\"%d %d %d\\n\", ara[i], ara[i+1], ara[i+2]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int p=0, m=1, pe=2, n, t, i, x, ara[15009];\n    scanf(\"%d\", &n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\", &t);\n        if(t==1)\n        {\n            ara[p]=i;\n            p+=3;\n        }\n        else if(t==2)\n        {\n            ara[m]=i;\n            m+=3;\n        }\n        else\n        {\n            ara[pe]=i;\n            pe+=3;\n        }\n    }\n    if(p==0 || m==1 || pe==2)\n    {\n        printf(\"0\\n\");\n        return 0;\n    }\n    p/=3;\n    m/=3;\n    pe/=3;\n\n    if(p<m)\n    {\n        if(p<pe) x=p;\n        else x=pe;\n    }\n    else\n    {\n        if(m<pe) x=m;\n        else x=pe;\n    }\n    printf(\"%d\\n\", x);\n    for(i=0; i<x*3; i+=3)\n    {\n        printf(\"%d %d %d\\n\", ara[i], ara[i+1], ara[i+2]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9594594594594594, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "9d863cbc869629e9808f164d86f53dd7", "bug_code_uid": "c867eae2ebe39b9993483338e4f7f03e", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "9c07e53efeabc2b087cfa59100b4c7ae", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare (const void * a, const void * b)\n{\nreturn *((int *)a) - *((int *)b);\n}\n\nint main()\n{\n    int N,i;\n    long T1[100000],T2[100000],T3[100000];\n    scanf(\"%d\",&N);\n    for(i=0;i<N;i++) scanf(\"%ld\",&T1[i]);\n    for(i=0;i<N-1;i++) scanf(\"%ld\",&T2[i]);\n    for(i=0;i<N-2;i++) scanf(\"%ld\",&T3[i]);\n    qsort (T1, N, sizeof(T1[0]), compare);\n    qsort (T2, N-1, sizeof(T2[0]), compare);\n    qsort (T3, N-2, sizeof(T3[0]), compare);\n    T2[N-1]=-1;\n    T3[N-1]=-1;\n    T3[N-2]=-1;\n    i=0;\n    while (T1[i]==T2[i]) {\n        i++;\n    }\n    long p1=T1[i];\n    i=0;\n    int j=0;\n    while ((T1[i]==T3[i-j])||(T1[i]==p1)) {\n        //printf(\"%ld == %ld , %d,%d\\n\",T1[i],T3[i-j],i,j);\n        if(T1[i]==p1) j=1;\n        i++;\n    }\n    //printf(\"%ld == %ld , %d,%d\\n\",T1[i],T3[i-j],i,j);\n    long p2=T1[i];\n    printf(\"%ld\\n%ld\\n\",p1,p2);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare (const void * a, const void * b)\n{\nreturn *((int *)a) - *((int *)b);\n}\n\nint main()\n{\n    int N,i;\n    long T1[100000],T2[100000],T3[100000];\n    scanf(\"%d\",&N);\n    for(i=0;i<N;i++) scanf(\"%ld\",&T1[i]);\n    for(i=0;i<N-1;i++) scanf(\"%ld\",&T2[i]);\n    for(i=0;i<N-2;i++) scanf(\"%ld\",&T3[i]);\n    qsort (T1, N, sizeof(T1[0]), compare);\n    qsort (T2, N-1, sizeof(T2[0]), compare);\n    qsort (T3, N-2, sizeof(T3[0]), compare);\n    T2[N-1]=-1;\n    T3[N-1]=-1;\n    T3[N-2]=-1;\n    i=0;\n    while (T1[i]==T2[i]) {\n        i++;\n    }\n    int p1=i;\n    i=0;\n    int j=0;\n    while ((T1[i]==T3[i-j])||(i==p1)) {\n        //printf(\"%ld == %ld , %d,%d\\n\",T1[i],T3[i-j],i,j);\n        if(i==p1) j=1;\n        i++;\n    }\n    //printf(\"%ld == %ld , %d,%d\\n\",T1[i],T3[i-j],i,j);\n    int p2=i;\n    printf(\"%ld\\n%ld\\n\",T1[p1],T1[p2]);\n    return 0;\n}\n"}
{"similarity_score": 0.33571996817820204, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "d2a89275226115532ba6f24ee80a4543", "bug_code_uid": "de2b4c3470efa7e34690ec6421f5db4f", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "c6127fe0761b0bfc82a33e3544f33d92", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint h1,a1,c1;\n\tint h2,a2;\n\tscanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n\tint sum;\n\tint t;\n\tsum=h1;\n\tint i;\n\tif (h2%a1)\n\t\ti=h2/a1+1;\n\telse i=h2/a1;\n\tif ((h1-i*a2)<=0)\n\t{\n\t\tt=h1-i*a2;\n\t\tif (t%(c1-a2))\n\t\ti=i+t/(c1-a2)+1;\n\t\telse i=i+t/(c1-a2);\n\t}\n\tprintf(\"%d\\n\",i);\n\twhile (1)\n\t{\n\t\tif ((h2-a1)>0&&(sum-a2)>0)\n\t\t{\n\t\t\th2=h2-a1;\n\t\t\tsum=sum-a2;\n\t\t\tprintf(\"STRIKE\\n\");\n\t\t}\n\t\telse if (sum-a2<=0&&(h2-a1)>0)\n\t\t\t{\n\t\t\t\tsum=sum-a2+c1;\n\t\t\t\th1++;\n\t\t\t\tprintf(\"HEAL\\n\");\n\t\t\t}\n\t\telse if (h2-a1<=0&&sum-a2>0)\n\t\t{\n\t\t\tprintf(\"STRIKE\\n\");\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint h1,a1,c1;\n\tint h2,a2;\n\tint i,t;\n\tint sum;\n\tscanf(\"%d%d%d\",&h1,&a1,&c1);\n\tscanf(\"%d%d\",&h2,&a2);\n\tsum=h1;\n\tif (h2<=a1)\n\t\tprintf(\"1\\nSTRIKE\\n\");\n\telse \n\t\t{\n\t\t\tif (h2%a1)\n\t\t\t  i=h2/a1+1;\n\t\t\telse \n\t\t\t  i=h2/a1;\n\t\t\tif (h1<=(i-1)*a2)\n\t\t\t  {\n\t\t\t  \tt=(i-1)*a2-h1;\n\t\t\t  \ti=i+t/(c1-a2)+1;\n\t\t\t  }\n\t\t\t  printf(\"%d\\n\",i);\n\t\t\twhile (1)\n\t\t\t  {\n\t\t\t  \th2=h2-a1;\n\t\t\t  \tsum=sum-a2;\n\t\t\t  \tif (h2<=0)\n\t\t\t  \t\t{\n\t\t\t  \t\t\tprintf(\"STRIKE\\n\");\n\t\t\t  \t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t  \t\t\n\t\t\t  \telse if (sum<=0)\n\t\t\t  \t\t\t{\n\t\t\t  \t\t\t\tsum=sum+c1;\n\t\t\t  \t\t\t\th2=h2+a1;\n\t\t\t  \t\t\t\th1++;\n\t\t\t  \t\t\t\tprintf(\"HEAL\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t  else \n\t\t\t\t\t\tprintf(\"STRIKE\\n\");\n\t\t\t  }\n\t\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9958258795468098, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d0a1ceda3a73f89ea0d3e853b76438cc", "bug_code_uid": "67057926544cbbe341cc939df9e2da5b", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "141f45dc7841987c42d449aac102bb67", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp(const void *a,const void *b) {\n    int *x = (int *) a;\n    int *y = (int *) b;\n    return *x - *y;\n}\n\nint main (void) {\n\n    // boys\n    int n;\n    scanf(\"%d\", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n    \n    // girls\n    int m;\n    scanf(\"%d\", &m);\n    int b[n];\n    for (int i = 0; i < m; i++) {\n        scanf(\"%d\", &b[i]);\n    }\n    \n    // sort arrays\n    qsort(&a, n, sizeof(int), *comp);\n    qsort(&b, m, sizeof(int), *comp);\n    \n    int i = 0, j = 0, p = 0;\n    while (i < n && j < m) {\n        int diff = a[i] - b[j];\n        if (diff < -1) {\n            i++;\n        } else if (diff > 1) {\n            j++;\n        } else {\n            i++;\n            j++;\n            p++;\n        }\n    }\n    printf(\"%d\\n\", p);\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp(const void *a,const void *b) {\n    int *x = (int *) a;\n    int *y = (int *) b;\n    return *x - *y;\n}\n\nint main (void) {\n\n    // boys\n    int n;\n    scanf(\"%d\", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n    }\n    \n    // girls\n    int m;\n    scanf(\"%d\", &m);\n    int b[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\"%d\", &b[i]);\n    }\n    \n    // sort arrays\n    qsort(&a, n, sizeof(int), *comp);\n    qsort(&b, m, sizeof(int), *comp);\n    \n    int i = 0, j = 0, p = 0;\n    while (i < n && j < m) {\n        int diff = a[i] - b[j];\n        if (diff < -1) {\n            i++;\n        } else if (diff > 1) {\n            j++;\n        } else {\n            i++;\n            j++;\n            p++;\n        }\n    }\n    printf(\"%d\\n\", p);\n    return 0;\n}\n"}
{"similarity_score": 0.9851951547779273, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "dec688124a05398b2cb5887e02b2ab64", "bug_code_uid": "97bcd447a2d28e268eab862933bc15e0", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "5c455a937b4a64baae5f9dcfe9d1d34b", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint x1,y1,x2,y2;\n\tscanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n\tif(x1==x2 || y1==y2){\n\t\tif(x1==x2) printf(\"%d %d %d %d\\n\", x1+y2-y1, y2, x1+y2-y1, y1);\n\t\telse printf(\"%d %d %d %d\\n\", y1+x2-x1, x2, y1+x2-x1, x1);\n\t} \n\telse if((x1-x2)*(x1-x2) == (y1-y2)*(y1-y2)){\n\t\tprintf(\"%d %d %d %d\\n\", x1, y2, x2, y1);\n\t}\n\telse printf(\"-1\\n\");\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint x1,y1,x2,y2;\n\tscanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n\tif(x1==x2 || y1==y2){\n\t\tif(x1==x2) printf(\"%d %d %d %d\\n\", x1+y2-y1, y2, x1+y2-y1, y1);\n\t\telse printf(\"%d %d %d %d\\n\", x2, y1+x2-x1, x1, y1+x2-x1);\n\t} \n\telse if((x1-x2)*(x1-x2) == (y1-y2)*(y1-y2)){\n\t\tprintf(\"%d %d %d %d\\n\", x1, y2, x2, y1);\n\t}\n\telse printf(\"-1\\n\");\n\n\treturn 0;\n}"}
{"similarity_score": 0.8564814814814815, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e396688b21e36695b3ff06cf2286689b", "bug_code_uid": "790a557561b374ccf30b9bf26712940f", "src_uid": "e7f84300e9480a94a2399fcd5f47ecec", "apr_id": "f85533fe24598f7e1be5fd5459ff47bb", "difficulty": 1400, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nchar str[120000];\r\nint t,n,s,*p;\r\nstruct ss\r\n{\r\n    int a[10],div,max;\r\n}b[100100];\r\n\r\nvoid judge(char c,int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        b[i].a[c-'0']++;\r\n        if(b[i].a[c-'0']==1) b[i].div++;\r\n        if(b[i].a[b[i].max]<b[i].a[c-'0']) b[i].max=c-'0';\r\n        if(b[i].a[b[i].max]<=b[i].div) s++;\r\n    }\r\n    return;\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d\",&t);\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n        s=0;\r\n        for(int j=0;j<n;j++) {\r\n            for(int k=0;k<10;k++) b[j].a[k]=0;\r\n            b[j].max=0;\r\n            b[j].div=0;\r\n        }\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",str);\r\n        for(int j=0;j<n;j++) judge(str[j],j+1);\r\n        printf(\"%d\\n\",s);\r\n    }\r\n    return  0;\r\n}", "fixed": "#include<stdio.h>\r\nchar str[120000];\r\nint t,n,s,*p;\r\nstruct ss\r\n{\r\n    int a[10],div,max;\r\n}b[100100];\r\n\r\nvoid judge(char c,int n)\r\n{\r\n    if(n<=100)\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        b[i].a[c-'0']++;\r\n        if(b[i].a[c-'0']==1) b[i].div++;\r\n        if(b[i].a[b[i].max]<b[i].a[c-'0']) b[i].max=c-'0';\r\n        if(b[i].a[b[i].max]<=b[i].div) s++;\r\n    }\r\n    if(n>100)\r\n    for(int i=n-100;i<n;i++)\r\n    {\r\n        b[i].a[c-'0']++;\r\n        if(b[i].a[c-'0']==1) b[i].div++;\r\n        if(b[i].a[b[i].max]<b[i].a[c-'0']) b[i].max=c-'0';\r\n        if(b[i].a[b[i].max]<=b[i].div) s++;\r\n    }\r\n    return;\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d\",&t);\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n        s=0;\r\n        for(int j=0;j<n;j++) {\r\n            for(int k=0;k<10;k++) b[j].a[k]=0;\r\n            b[j].max=0;\r\n            b[j].div=0;\r\n        }\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",str);\r\n        for(int j=0;j<n;j++) judge(str[j],j+1);\r\n        printf(\"%d\\n\",s);\r\n    }\r\n    return  0;\r\n}"}
{"similarity_score": 0.9698630136986301, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6d8286a3154f5bd53e96b4bd777bffe0", "bug_code_uid": "a993887f58c855fcc82dbd03971e251b", "src_uid": "621c82478be3dadcf60c383ba078a49e", "apr_id": "ab04ccad8b354ff105206277b3820c8f", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint x,y,z,sum,fr[4],i,n;\nchar a[100001],b[100001];\n\nint main()\n{\nscanf(\"%d %s %s\",&n,a,b);\n\nfor(i=0;i<n;i++)\n{\n    x=a[i]-'0';\n    y=b[i]-'0';\n\n    if(x==0 && y==1)\n        z=-1;\n    else\n        z=x+y;\n\n    fr[z+1]++;\n\n}\n\nsum=fr[0]*fr[2]+fr[1]*fr[2]+fr[1]*fr[3];\nprintf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint x,y,z;\nlong long sum,fr[4],n,i;\nchar a[100001],b[100001];\n\nint main()\n{\nscanf(\"%d %s %s\",&n,a,b);\n\nfor(i=0;i<n;i++)\n{\n    x=a[i]-'0';\n    y=b[i]-'0';\n\n    if(x==0 && y==1)\n        z=-1;\n    else\n        z=x+y;\n\n    fr[z+1]++;\n\n}\n\nsum=fr[0]*fr[2]+fr[1]*fr[2]+fr[1]*fr[3];\nprintf(\"%I64d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.7833668678739101, "equal_cnt": 23, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 14, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "aa288ea2ad98e561156f1ee0a0ae98af", "bug_code_uid": "3d163e3979c359dc4a796f62432985fe", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "a982212080f4bab24f00021dabbd3111", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\nint main()\n{\n    int ans = 0;\n    int times;\n  scanf(\"%d\", &times);\n    for(int i =0; i<times; i++){\n        int a, b;\n        scanf(\"%d %d\", &a, &b);\n        if((a%2==0 && b%2 == 0) || (a%2==0 && b%2!=0)){  // both even or rows even colums odd\n            ans = (a/2) * b;\n           printf(\"%d\", ans);\n           return 0;\n        }\n        else if(a%2!=0 && b%2==0){ //rows odd and colums even\n            ans = ((a-1)/2)*b + b/2;\n             printf(\"%d\", ans);\n                return 0;\n        }\n        else{       //both odd\n           ans = ((a-1)/2)*b + (b+1)/2;\n           printf(\"%d\", ans);\n                return 0;\n        }\n\n    }\n\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\nint a[10000], b[10000];\nint main()\n{\n    int ans = 0;\n    int times;\n  scanf(\"%d\", &times);\n    for(int i =0; i<times; i++){\n        scanf(\"%d %d\", &a[i], &b[i]);\n    }\n    for(int i = 0; i<times; i++){\n        if((a[i]%2==0 && b[i]%2 == 0) || (a[i]%2==0 && b[i]%2!=0)){  // both even or rows even colums odd\n            ans = (a[i]/2) * b[i];\n           printf(\"%d\\n\", ans);\n        }\n        else if(a[i]%2!=0 && b[i]%2==0){ //rows odd and colums even\n            ans = ((a[i]-1)/2)*b[i] + b[i]/2;\n             printf(\"%d\\n\", ans);\n        }\n        else{       //both odd\n           ans = ((a[i]-1)/2)*b[i] + (b[i]+1)/2;\n           printf(\"%d\\n\", ans);\n        }\n    }\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.6042608134280181, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "e2130ea7d482144fb93db6b503fcd458", "bug_code_uid": "a98196ea701665923ac4fd5cdb88d3fe", "src_uid": "6d4744d7356e709f73891270becd14e3", "apr_id": "b6e10f742342ac719eb42f086fbcbdcb", "difficulty": 800, "tags": ["brute force", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t_cases;\r\n    scanf(\"%d\", &t_cases);\r\n    for (int i = 0; i < t_cases; i++)\r\n    {\r\n        int n;\r\n        int Arr[100] = {0};\r\n        scanf(\"%d\", &n);\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &Arr[i]);\r\n        }\r\n\r\n        int flag = 0;\r\n\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            if (Arr[i - 1] < Arr[i])\r\n            {\r\n                continue;\r\n            }\r\n            else\r\n            {\r\n                flag++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", flag);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t_cases;\r\n    scanf(\"%d\", &t_cases);\r\n    for (int i = 0; i < t_cases; i++)\r\n    {\r\n        int n;\r\n        int arr1[100] = {0}, fr1[100];\r\n        scanf(\"%d\",&n);\r\n\r\n        int flag = 0;\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\",&arr1[i]);\r\n            fr1[i] = -1;\r\n        }\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            int ctr = 1;\r\n            for (int j = i + 1; j < n; j++)\r\n            {\r\n                if (arr1[i] == arr1[j])\r\n                {\r\n                    ctr++;\r\n                    fr1[j] = 0;\r\n                }\r\n            }\r\n\r\n            if (fr1[i] != 0)\r\n            {\r\n                fr1[i] = ctr;\r\n            }\r\n        }\r\n        int max = 0;\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (fr1[i] > max)\r\n            {\r\n                max = fr1[i];\r\n            }\r\n        }\r\n        printf(\"%d\\n\", max);\r\n    }\r\n}"}
{"similarity_score": 0.7850834151128557, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a35798ed156195b5bb88da9852ba9722", "bug_code_uid": "3d16ee337585c74b93892f2ba60bfc42", "src_uid": "a27ad7c21cd6402bfd082da4f6c7ab9d", "apr_id": "0b67a6ce93b547985f2279d9a2cc0eed", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\nint func(char arrs[],char arrt[],char arrp[])\n{\n\tint i,j = 0,k;\n\tfor(i = 0; arrt[i] ;i++)\n\t{\n\t\tif(arrt[i] == arrs[j])\n\t\t{\n\t\t\tarrt[i] = '1';\n\t\t\tarrs[j] = '1';\n\t\t\tj++; \n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(k = 0;arrp[k];k++)\n\t\t\t{\n\t\t\t\tif(arrp[k] == arrt[i])\n\t\t\t\t{\n\t\t\t\t\tarrp[k] = '1';\n\t\t\t\t\tarrt[i] = '1';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0;arrs[i];i++)\n\t{\n\t\tif(arrs[i] != '1')\n\t\t{\n\t\t\t//printf(\"11111111   %d\\n \",i);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(i = 0;arrt[i];i++)\n\t{\n\t\tif(arrt[i] != '1')\n\t\t{\n\t\t\t//printf(\"11111111   %d\\n \",i);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\nint main(int argc, char *argv[]) \n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tchar arrs[100];\n\tchar arrt[100];\n\tchar arrp[100];\n\tint i;\n\tfor(i = 0;i < n;i++)\n\t{\n\t\tscanf(\"%s\",arrs);\n\t\tscanf(\"%s\",arrt);\n\t\tscanf(\"%s\",arrp);\n\t\tarr[i] = func(arrs,arrt,arrp);\t\n\t}\n\tfor(i = 0;i < n;i++)\n\t{\n\t\tif(arr[i] == 0)\n\t\t printf(\"NO\\n\");\n\t\telse\n\t\t printf(\"YES\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\nint func(char arrs[],char arrt[],char arrp[])\n{\n\tint i,j = 0,k;\n\tfor(i = 0; arrt[i] ;i++)\n\t{\n\t\tif(arrt[i] == arrs[j])\n\t\t{\n\t\t\tarrt[i] = '1';\n\t\t\tarrs[j] = '1';\n\t\t\tj++; \n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(k = 0;arrp[k];k++)\n\t\t\t{\n\t\t\t\tif(arrp[k] == arrt[i])\n\t\t\t\t{\n\t\t\t\t\tarrp[k] = '1';\n\t\t\t\t\tarrt[i] = '1';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 0;arrs[i];i++)\n\t{\n\t\tif(arrs[i] != '1')\n\t\t\treturn 0;\n\t}\n\tfor(i = 0;arrt[i];i++)\n\t{\n\t\tif(arrt[i] != '1')\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\nint main(int argc, char *argv[]) \n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint arr[n];\n\tchar arrs[200];\n\tchar arrt[200];\n\tchar arrp[200];\n\tint i;\n\tfor(i = 0;i < n;i++)\n\t{\n\t\tscanf(\"%s\",arrs);\n\t\tscanf(\"%s\",arrt);\n\t\tscanf(\"%s\",arrp);\n\t\tarr[i] = func(arrs,arrt,arrp);\t\n\t}\n\tfor(i = 0;i < n;i++)\n\t{\n\t\tif(arr[i] == 0)\n\t\t printf(\"NO\\n\");\n\t\telse\n\t\t printf(\"YES\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9719626168224299, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "07cc033ce48a6e4fa0e4bb0a2b465d85", "bug_code_uid": "efe3ed554e42cfa4c7023547721c5beb", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "0680110b1bb46d45d7527d2a2bad48ca", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tint a[100001];\n\tint cnt=1;\n\tint max = 0;\n\tscanf(\"%d\", &n);\n\tfor(int i=0 ; i<n ; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor(int i=0 ; i<n ; i++){\n\t\tif(a[i] < a[i+1]){\n\t\t\tcnt++;\n\t\t}\n\t\tif(a[i] >= a[i+1]){\n\t\t\tif(cnt > max){\n\t\t\t\tmax = cnt;\n\t\t\t}\n\t\t\tcnt = 1;\n\t\t}\n\t}\n\tprintf(\"%d\", max);\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tint a[100001] ={0};\n\tint cnt=1;\n\tint max = 0;\n\tscanf(\"%d\", &n);\n\tfor(int i=0 ; i<n ; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor(int i=0 ; i<n ; i++){\n\t\tif(a[i] < a[i+1]){\n\t\t\tcnt++;\n\t\t}\n\t\tif(a[i] >= a[i+1]){\n\t\t\tif(cnt > max){\n\t\t\t\tmax = cnt;\n\t\t\t}\n\t\t\tcnt = 1;\n\t\t}\n\t}\n\tprintf(\"%d\", max);\n\treturn 0;\n}"}
{"similarity_score": 0.579408543263965, "equal_cnt": 37, "replace_cnt": 23, "delete_cnt": 3, "insert_cnt": 10, "fix_ops_cnt": 36, "lang": "GNU C11", "fix_code_uid": "678d3e25c29031f5f8c4ad6d06b74c84", "bug_code_uid": "1086ca82da16126755f61252e83c33bd", "src_uid": "94ec011dc830661c226bd860b9d70de5", "apr_id": "bf3db056a40b384f51089db82461c437", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n,t,i,j,temp,k,p,q,l;\r\n    long long int s;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        int a[25]={},b[25]={};\r\n        s = 0;\r\n        scanf(\"%d\",&n);\r\n        for(k=0;k<n;j++){\r\n            scanf(\"%d\",&a[l]);\r\n        }\r\n        for(l=0;l<n;j++){\r\n            scanf(\"%d\",&b[l]);\r\n        }\r\n        for(p=0;p<n-1;j++){\r\n            if( ( abs(a[p] - a[p+1]) + abs(b[p] - b[p+1]) ) > ( abs(a[p] - b[p+1]) - abs(b[p] - a[p+1]) ) ){\r\n                temp = a[p+1];\r\n                a[p+1] = b[p+1];\r\n                b[p+1] = temp;\r\n            }\r\n        }\r\n        for(q=0;q<n-1;q++){\r\n            s = s + abs(a[q] - a[q+1]) + abs(b[q] - b[q+1]);\r\n        }\r\n        printf(\"%lld\\n\",s);\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    long long int a[26],b[26],n,t,i,j,a_s,b_s,s,temp;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0;i<t;i++){\r\n        a_s = 0;\r\n        b_s = 0;\r\n        s = 0;\r\n        temp = 0;\r\n        scanf(\"%lld\",&n);\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%lld\",&a[j]);\r\n        }\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%lld\",&b[j]);\r\n        }\r\n        for(j=0;j<n;j++){\r\n            if(j == n-1){\r\n                break;\r\n            }\r\n            if( ( abs(a[j] - a[j+1]) + abs(b[j] - b[j+1]) ) > ( abs(a[j] - b[j+1]) + abs(b[j] - a[j+1]) ) ){\r\n                temp = a[j+1];\r\n                a[j+1] = b[j+1];\r\n                b[j+1] = temp;\r\n            }\r\n            else{\r\n                continue;\r\n            }\r\n        }\r\n        for(j=0;j<n;j++){\r\n            if(j == n-1){\r\n                break;\r\n            }\r\n            a_s = a_s + abs(a[j] - a[j+1]);\r\n            b_s = b_s + abs(b[j] - b[j+1]);\r\n        }\r\n        s = s + a_s + b_s;\r\n        printf(\"%lld\\n\",s);\r\n \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.962756052141527, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "22f362a43035d3396e8177cc4ed5e73c", "bug_code_uid": "1f9f76e7b300df53ae7b8922cc9bc211", "src_uid": "9f87a89c788bd7c7b66e51db9fe47e46", "apr_id": "8a164ed3d55fb67ebfa6a20226200e0a", "difficulty": 900, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define ll long long int\n\tint main()\n\t{  int t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n   ll n,i;\nscanf(\"%lld\\n\",&n);\nchar s[1000];\n    gets(s);\n    \n\nif(n==2)\n {\n       if(s[1]>s[0])\n    { printf(\"YES\\n\");\n        printf(\"%c %c\",s[0],s[1]);\n     printf(\"\\n\");\n    }\n     else\n   \n     printf(\"NO\\n\");\n }\n     else\n       \n     {printf(\"YES\\n\");\n         printf(\"%c \",s[0]);\n         for(i=1;i<n;i++){\n             printf(\"%c\",s[i]);\n         }\n           printf(\"\\n\");\n     }\n   \n     }\n     return 0;\n\t}\n ", "fixed": "#include <stdio.h>\n#define ll long long int\n\tint main()\n\t{  int t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n   ll n,i;\nscanf(\"%lld\\n\",&n);\nchar s[1000];\n    gets(s);\n    \n\nif(n==2)\n {\n       if(s[1]>s[0])\n    { printf(\"YES\\n\");\n    printf(\"2\\n\");\n        printf(\"%c %c\",s[0],s[1]);\n     printf(\"\\n\");\n    }\n     else\n   \n     printf(\"NO\\n\");\n }\n     else\n       \n     {printf(\"YES\\n\");\n      printf(\"2\\n\");\n         printf(\"%c \",s[0]);\n         for(i=1;i<n;i++){\n             printf(\"%c\",s[i]);\n         }\n           printf(\"\\n\");\n     }\n   \n     }\n     return 0;\n\t}\n "}
{"similarity_score": 0.9979267449896337, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f622dc21a8db01b07fdc2347563c9535", "bug_code_uid": "6b1f3d38a5dec3687b38ef7ce21adffd", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "e588106c7f40fd45a03d718ed9c8801c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 200001\n\nint main()\n{\n  long n,m;\n  long a[N]={};\n  long left[N]={},right[N]={};\n\n  long cou1=0,uoc1=0;\n  long ans[N];\n  int i;\n  \n  scanf(\"%ld %ld\",&n,&m);\n  \n  for(i=0;i<n;i++){\n    scanf(\"%ld \",&a[i]);\n  }\n  \n  for(i=0;i<m;i++){\n    scanf(\"%ld %ld\",&left[i],&right[i]);\n  }\n\n  for(i=0;i<n;i++){\n    if(a[i]==1){\n      cou1++;\n    }else{\n      uoc1++;\n    }\n  }\n  \n  for(i=0;i<m;i++){\n    if((right[i]-left[i])%2==0 || (right[i]-left[i])==0){\n      ans[i]=0;\n    }else if(cou1>=(right[i]-left[i]+1)/2 && uoc1>=(right[i]-left[i]+1)/2){\n      if(cou1==0 || uoc1==0){\n\tans[i]=0;\n      }else{\n\tans[i]=1;\n      }\n    }\n  }\n  \n  for (i=0;i<m;i++){\n    printf(\"%ld\\n\",ans[i]);\n  }\n\n  return 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n\n#define N 200001\n\nint main()\n{\n  long n,m;\n  long a[N]={};\n  long left[N]={},right[N]={};\n\n  long cou1=0,uoc1=0;\n  long ans[N]={};\n  int i;\n  \n  scanf(\"%ld %ld\",&n,&m);\n  \n  for(i=0;i<n;i++){\n    scanf(\"%ld \",&a[i]);\n  }\n  \n  for(i=0;i<m;i++){\n    scanf(\"%ld %ld\",&left[i],&right[i]);\n  }\n\n  for(i=0;i<n;i++){\n    if(a[i]==1){\n      cou1++;\n    }else{\n      uoc1++;\n    }\n  }\n  \n  for(i=0;i<m;i++){\n    if((right[i]-left[i])%2==0 || (right[i]-left[i])==0){\n      ans[i]=0;\n    }else if(cou1>=(right[i]-left[i]+1)/2 && uoc1>=(right[i]-left[i]+1)/2){\n      if(cou1==0 || uoc1==0){\n\tans[i]=0;\n      }else{\n\tans[i]=1;\n      }\n    }\n  }\n  \n  for (i=0;i<m;i++){\n    printf(\"%ld\\n\",ans[i]);\n  }\n\n  return 0;\n}\n\n\n"}
{"similarity_score": 0.7619047619047619, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c1ea5777d4bf7a7d47fa9fc268c4eb37", "bug_code_uid": "e5243d623837a7ea0007f44e6692c59b", "src_uid": "09c8db43681d7bc72f83287897a62f3c", "apr_id": "7d1026be0ffd0e34e89eebd75e1520ab", "difficulty": 1100, "tags": ["brute force", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\ufeff#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\n#define int long long\r\n#pragma warning(disable:4996)\r\nint t, n, a[100001], x, cnt[100001];\r\ninline int min(int x, int y) {\r\n\treturn x < y ? x : y;\r\n}\r\ninline int solve(int i) {\r\n\tint count = 1, tmp = a[i];\r\n\twhile (!(tmp % x)) {\r\n\t\t++count;\r\n\t\ttmp /= x;\r\n\t}\r\n\treturn count;\r\n}\r\nsigned main() {\r\n\tscanf(\"%lld\",&t);\r\n\twhile (t--) {\r\n\t\tmemset(cnt, 0, sizeof cnt);\r\n\t\tcnt[0] = 0x7f7f7f7f7f7f7f7f;\r\n\t\tscanf(\"%lld%lld\", &n, &x);\r\n\t\tfor (int i = 1; i <= n; ++i) {\r\n\t\t\tscanf(\"%lld\", &a[i]);\r\n\t\t\tcnt[i]=min(cnt[i-1],solve(i));\r\n\t\t}\r\n\t\tint ans = 0;\r\n\t\tfor (int i = 1; i <= n; ++i)\r\n\t\t\tans += cnt[i] * a[i];\r\n\t\tprintf(\"%lld\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "\ufeff#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\n#define int long long\r\n#pragma warning(disable:4996)\r\nint t, n, a[100001], x, cnt[100001];\r\ninline int solve(int tmp) {\r\n\tint count = 1;\r\n\twhile (!(tmp % x)) {\r\n\t\t++count;\r\n\t\ttmp /= x;\r\n\t}\r\n\treturn count;\r\n}\r\nsigned main() {\r\n\tscanf(\"%lld\",&t);\r\n\twhile (t--) {\r\n\t\tint MinVal = 0x7f7f7f7f7f7f7f7f, MinID = -1;\r\n\t\tmemset(cnt, 0, sizeof cnt);\r\n\t\tcnt[0] = 0x7f7f7f7f7f7f7f7f;\r\n\t\tscanf(\"%lld%lld\", &n, &x);\r\n\t\tfor (int i = 1; i <= n; ++i) {\r\n\t\t\tscanf(\"%lld\", &a[i]);\r\n\t\t\tcnt[i]=solve(a[i]);\r\n\t\t\tif (cnt[i] < MinVal) {\r\n\t\t\t\tMinVal = cnt[i];\r\n\t\t\t\tMinID = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (int i = 1; i < MinID; ++i)\r\n\t\t\tcnt[i] = MinVal + 1;\r\n\t\tfor (int i = MinID; i <= n; ++i)\r\n\t\t\tcnt[i] = MinVal;\r\n\t\tint ans = 0;\r\n\t\tfor (int i = 1; i <= n; ++i)\r\n\t\t\tans += cnt[i] * a[i];\r\n\t\tprintf(\"%lld\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.6334776334776335, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "75d9b74316338b2aac9663ca4f355133", "bug_code_uid": "c6499ae28da696c41cc02531edb565e0", "src_uid": "cb24509580ff9b2f1a11103a0e4cdcbd", "apr_id": "aa19196ab5618f80a3a5458cc99067c8", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j,t=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        int a[4];\r\n        for(j=0;j<4;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            if(j<2 && t<a[j])\r\n            {\r\n                t=a[j];\r\n            }\r\n        }\r\n        if((t<a[2] && t<a[3]) || (t>a[2] && t>a[3]))\r\n            {\r\n                printf(\"NO\");\r\n                printf(\"\\n\");\r\n            }\r\n            else\r\n            {\r\n                printf(\"YES\");\r\n                printf(\"\\n\");\r\n            }\r\n        t=0;\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j,t=0,t1,t2=0,t3,m=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        int a[4];\r\n        for(j=0;j<4;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            if(j<2 && t<a[j])\r\n            {\r\n                t=a[j];\r\n                t1=j;\r\n            }\r\n            else if( j>=2 && t2<a[j])\r\n            {\r\n               t2=a[j];\r\n               t3=j;\r\n            }\r\n        }\r\n        for(j=0;j<4;j++)\r\n        {\r\n            if(t1!=j && t3!=j && t>=a[j] && t2>=a[j])\r\n            {\r\n                m++;\r\n            }\r\n        }\r\n        if(m==2)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        t=0;\r\n        t2=0;\r\n        m=0;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.16738197424892703, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "5a1871e3d1460cb56f4040ab973e7158", "bug_code_uid": "0270091c895b0b7d9d21506928d0d0a8", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "3394993de87c39a9a23d2b279b12264d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(void)\n{\n    int n,ans=0,pos,code,t,k,k1,temp;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&pos);\n    scanf(\"%d\",&code);\n    while(pos)\n    {\n        t=pos%10;\n        k=code%10;\n        pos=pos/10;\n        code=code/10;\n        if(t>k)\n            k1=k+10;\n        else\n        {\n            k1=t+10;\n            temp=t;\n            t=k;\n            k=temp;\n        }\n        if(abs(t-k) < abs(t-k1))\n            ans+=abs(t-k);\n         \n        else\n            ans+=abs(t-k1);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint min(int a, int b)\n{\n    if(a < b)\n        return a;\n    else\n        return b;\n}\n\nint main(void)\n{\n    int i,n,ans=0;\n    scanf(\"%d\",&n);\n    char p[n+1],c[n+1];\n    scanf(\"%s\",p);\n    scanf(\"%s\",c);\n    for(i=0;i<n;i++)\n    {\n        ans+=min(abs(p[i]-c[i]),(10-abs(p[i]-c[i])));\n        \n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.8696569920844327, "equal_cnt": 12, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "678d3e25c29031f5f8c4ad6d06b74c84", "bug_code_uid": "5970aee0edfb32e41e15152684851265", "src_uid": "94ec011dc830661c226bd860b9d70de5", "apr_id": "bf3db056a40b384f51089db82461c437", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    long long int a[26],b[26],n,t,i,j,a_s,b_s,s,temp;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0;i<t;i++){\r\n        a_s = 0;\r\n        b_s = 0;\r\n        scanf(\"%lld\",&n);\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%lld\",&a[j]);\r\n        }\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%lld\",&b[j]);\r\n        }\r\n        for(j=0;j<n-1;j++){\r\n            if( ( abs(a[j] - a[j+1]) + abs(b[j] - b[j+1]) ) > ( abs(a[j] - b[j+1]) - abs(b[j] - a[j+1]) ) ){\r\n                temp = a[j+1];\r\n                a[j+1] = b[j+1];\r\n                b[j+1] = temp;\r\n            }\r\n        }\r\n        for(j=0;j<n-1;j++){\r\n            a_s = a_s + abs(a[j] - a[j+1]);\r\n            b_s = b_s + abs(b[j] - b[j+1]);\r\n        }\r\n        s = a_s + b_s;\r\n        printf(\"%lld\\n\",s);\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    long long int a[26],b[26],n,t,i,j,a_s,b_s,s,temp;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0;i<t;i++){\r\n        a_s = 0;\r\n        b_s = 0;\r\n        s = 0;\r\n        temp = 0;\r\n        scanf(\"%lld\",&n);\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%lld\",&a[j]);\r\n        }\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%lld\",&b[j]);\r\n        }\r\n        for(j=0;j<n;j++){\r\n            if(j == n-1){\r\n                break;\r\n            }\r\n            if( ( abs(a[j] - a[j+1]) + abs(b[j] - b[j+1]) ) > ( abs(a[j] - b[j+1]) + abs(b[j] - a[j+1]) ) ){\r\n                temp = a[j+1];\r\n                a[j+1] = b[j+1];\r\n                b[j+1] = temp;\r\n            }\r\n            else{\r\n                continue;\r\n            }\r\n        }\r\n        for(j=0;j<n;j++){\r\n            if(j == n-1){\r\n                break;\r\n            }\r\n            a_s = a_s + abs(a[j] - a[j+1]);\r\n            b_s = b_s + abs(b[j] - b[j+1]);\r\n        }\r\n        s = s + a_s + b_s;\r\n        printf(\"%lld\\n\",s);\r\n \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9934258582907232, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "93d021a5aafe032b5e88fc10ae631fb7", "bug_code_uid": "667fa233a5c9c673d8406002b3a29b14", "src_uid": "4ed5b8055ce48b5ad4e43ed4b06d1b07", "apr_id": "e87f5856d8fd77009d912389c17b64db", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint n,m,k,i,twos,ones,plates;\n\tint arr[1000];\n\tones=twos=0;\n\tscanf(\"%d %d %d\\n\",&n,&m,&k);\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&arr[i]);\n\tif(arr[i]==1)\n\t{\n\t\tones++;\n\t}\n\telse\n\t{\n\t\ttwos++;\n\t}\n\t}\n\tif(twos>=k)\n\t{\n\t\ttwos=twos-k;\n\t\tif(twos>=m)\n\t\t{\n\t\t\ttwos=twos-m;\n\t\t\tplates=twos+ones;\n\t\t\tprintf(\"%d\",plates);\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tif(ones>=m)\n\t\t\t{\n\t\t\t\tplates=ones-m;\n\t\t\t\tprintf(\"%d\",plates);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"0\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(ones>=m)\n\t\t{\n\t\t\tplates=ones-m;\n\t\t\tprintf(\"%d\",plates);\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint n,m,k,i,twos,ones,plates;\n\tint arr[1000];\n\tones=twos=0;\n\tscanf(\"%d %d %d\\n\",&n,&m,&k);\n\tfor(i=0;i<n;i++)\n\t{\n\tscanf(\"%d\",&arr[i]);\n\tif(arr[i]==1)\n\t{\n\t\tones++;\n\t}\n\telse\n\t{\n\t\ttwos++;\n\t}\n\t}\n\tif(twos>=k)\n\t{\n\t\ttwos=twos-k;\n\t\tif(twos>=m)\n\t\t{\n\t\t\ttwos=twos-m;\n\t\t\tplates=twos+ones;\n\t\t\tprintf(\"%d\",plates);\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\tm=m-twos;\n\t\t\tif(ones>=m)\n\t\t\t{\n\t\t\t\tplates=ones-m;\n\t\t\t\tprintf(\"%d\",plates);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"0\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(ones>=m)\n\t\t{\n\t\t\tplates=ones-m;\n\t\t\tprintf(\"%d\",plates);\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9147496617050067, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b514a563500c78292d7a94039fbb449c", "bug_code_uid": "030023f3eac0b7e9171c0cd7a0eb4173", "src_uid": "7eae40835f6e9580b985d636d5730e2d", "apr_id": "94a79a447399610be0e95e0cf3474768", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nlong int n,l,r,i;\nint main(){\n    scanf(\"%d\", &n);\n    for( i=0; i < n; i++){\n    scanf(\"%ld %ld\", &l,&r);\nif( (r - l)%2 == 1 ){\n    printf(\"%ld\\n\", -((r-l +1)/2));\n}\nelse{\n    if(l%2 == 0){\n        printf(\"%ld\\n\", l+((r-l)/2));\n    }\n    else{\n        printf(\"%ld\\n\", -l - ((r-l)/2));\n    }\n}\n    }}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong int n,l,r,i;\nint main(){\n    scanf(\"%d\", &n);\n    for( i=0; i < n; i++){\n    scanf(\"%ld %ld\", &l,&r);\nif( (r - l)%2 == 1 ){\n    if(l%2 ==0)\n    printf(\"%ld\\n\", -((r-l +1)/2));\n    else\n    printf(\"%ld\\n\", ((r-l+1)/2));\n}\nelse{\n    if(l%2 == 0){\n        printf(\"%ld\\n\", l+((r-l)/2));\n    }\n    else{\n        printf(\"%ld\\n\", -l - ((r-l)/2));\n    }\n}\n    }\n}"}
{"similarity_score": 0.9991220368744512, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "48c93b825132d1828ed86956a27a9d21", "bug_code_uid": "d0f5886484fbc43893394030087b0119", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "f4ad7e5468d92dd3032194dd488f2b9d", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\nint main(void)\n{\n    int n, cap, i, j;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &cap);\n    int arr[n];\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", arr[i]);\n    for (i = 0; i < n - 1; i++)\n        for (j = 0; j < n - 1; j++)\n            if (arr[j] > arr[j + 1]) {\n                arr[j] ^= arr[j + 1];\n                arr[j + 1] ^= arr[j];\n                arr[j] ^= arr[j + 1];\n            }\n    int ans = 0;\n    for (i = 0; i < cap; i++)\n        if (arr[i] < 0)\n            ans -= arr[i];\n    printf(\"%d\\n\", ans);\n    return 0;\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\nint main(void)\n{\n    int n, cap, i, j;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &cap);\n    int arr[n];\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", &arr[i]);\n    for (i = 0; i < n - 1; i++)\n        for (j = 0; j < n - 1; j++)\n            if (arr[j] > arr[j + 1]) {\n                arr[j] ^= arr[j + 1];\n                arr[j + 1] ^= arr[j];\n                arr[j] ^= arr[j + 1];\n            }\n    int ans = 0;\n    for (i = 0; i < cap; i++)\n        if (arr[i] < 0)\n            ans -= arr[i];\n    printf(\"%d\\n\", ans);\n    return 0;\n}"}
{"similarity_score": 0.9965903555772041, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "456045f621aae8ed78121facfb4a5d43", "bug_code_uid": "4ab5dfe45edf26fda033234df3d1c868", "src_uid": "848ead2b878f9fd8547e1d442e2f85ff", "apr_id": "daecebc11239f079d09fb703750d5d2e", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\nint min(int a, int b)\n{\n    if(a<b)\n    return a;\n    else\n    return b;\n}\nint main()\n{\n    int n,v,i,ans[100000],cnt,ch,a,b;\n    for(i=0;i<10000;i++)\n    ans[i]=0;\n    scanf(\"%d %d\",&n,&v);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        ans[a]=b;\n    }\n    cnt=0;\n    for(i=1;i<=5000;i++)\n    {\n        /*if(ans[i]>=v)\n        {\n            cnt=cnt+v;\n            ans[i]=ans[i]-v;\n        }\n        else\n        {\n            cnt=cnt+ans[i];\n            ch=v-ans[i];\n            if(i>1)\n            cnt=cnt+min(ans[i-1],ch);\n        }*/\n        cnt=cnt+min(ans[i-1],v);\n        if(ans[i-1]<v)\n        {\n            ch=v-ans[i-1];\n            cnt=cnt+min(ch,ans[i]);\n            ans[i]=ans[i]-min(ch,ans[i]);\n            //ans[i]=ans[i]-(v-ans[i-1]);\n            //cnt=cnt+ans[i]-(v-ans[i-1]);\n        }\n    }\n    printf(\"%d \",cnt);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\nint min(int a, int b)\n{\n    if(a<b)\n    return a;\n    else\n    return b;\n}\nint main()\n{\n    int n,v,i,ans[100000],cnt,ch,a,b;\n    for(i=0;i<10000;i++)\n    ans[i]=0;\n    scanf(\"%d %d\",&n,&v);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        ans[a]=ans[a]+b;\n    }\n    cnt=0;\n    for(i=1;i<=5000;i++)\n    {\n        /*if(ans[i]>=v)\n        {\n            cnt=cnt+v;\n            ans[i]=ans[i]-v;\n        }\n        else\n        {\n            cnt=cnt+ans[i];\n            ch=v-ans[i];\n            if(i>1)\n            cnt=cnt+min(ans[i-1],ch);\n        }*/\n        cnt=cnt+min(ans[i-1],v);\n        if(ans[i-1]<v)\n        {\n            ch=v-ans[i-1];\n            cnt=cnt+min(ch,ans[i]);\n            ans[i]=ans[i]-min(ch,ans[i]);\n            //ans[i]=ans[i]-(v-ans[i-1]);\n            //cnt=cnt+ans[i]-(v-ans[i-1]);\n        }\n    }\n    printf(\"%d \",cnt);\n    return 0;\n}"}
{"similarity_score": 0.9850746268656716, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7fc7a8d29186a4e387f47cb26a74b628", "bug_code_uid": "3cfaeca35f559240614bb1a0afe318d8", "src_uid": "b4b69320c6040d2d264ac32e9ba5196f", "apr_id": "1c888fec39f93f5ea5f75e2cfe563ba0", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    long int i,n,sum;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%ld\",&n);\n        i=(n-1)/2;\n        sum=8*((i*(i+1)*(2*i+1))/6);\n        printf(\"%ld\\n\",sum);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    long long int i,n,sum;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%lld\",&n);\n        i=(n-1)/2;\n        sum=8*((i*(i+1)*(2*i+1))/6);\n        printf(\"%lld\\n\",sum);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9413118527042578, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "a57cb3e91e6f505606159afd85c59467", "bug_code_uid": "4f41ed63bffd3103d5a32c48704e3fcb", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "3445c30dc1ec806bae66fadb3ef69f10", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char st[101]={'\\0'};\n    scanf(\"%s\",st);\n    int c1=0,c2=0;\n    for(int i=0;st[i]!='\\0';i++)\n    {\n        if(st[i]=='A')\n          c1++;\n        else\n          c2++;\n    }\n    if(c1>c2)\n      printf(\"Anton\");\n      if(c1<c2)\n         printf(\"Danik\");\n         if(c1==c2)\n         printf(\"Friendship\");\n         return 0;\n}\n\n         \n    \n73", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char st[100001]={'\\0'};\n    scanf(\"%s\",st);\n    int c1=0,c2=0;\n    for(int i=0;st[i]!='\\0';i++)\n    {\n        if(st[i]=='A')\n          c1++;\n        else\n          c2++;\n    }\n    if(c1>c2)\n       printf(\"Anton\");\n       if(c1<c2)\n          printf(\"Danik\");\n          if(c1==c2)\n             printf(\"Friendship\");\n             return 0;\n}\n           \n    \n\n"}
{"similarity_score": 0.7792207792207793, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2fd7b30fbec7a8a6cb3cac924eb077b2", "bug_code_uid": "ef2f5606fe955b443ea63b393dff09a2", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "d269b2adefd3b93e34b106adca6361e9", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\nint main()\n{\n\tint n,a,b;\n\tint minm=INT_MAX;\n\tscanf(\"%d %d %d\", &n,&a,&b);\n\tchar string[n];\n\tint i;\n\tscanf(\"%s\", string);\n\tif(a==b)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tif(string[a-1]==string[b-1])\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(string[i]==string[a-1] && fabs(i-(b-1))<minm)\n\t\t\t{\n\t\t\t\tminm=fabs(i-(b-1));\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\", minm);\n\t\treturn 0;\n\t}\n\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <limits.h>\nint main()\n{\n\tint n,a,b;\n\tint minm=INT_MAX;\n\tscanf(\"%d %d %d\", &n,&a,&b);\n\tchar string[n];\n\tint i;\n\tscanf(\"%s\", string);\n\tif(a==b)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tif(string[a-1]==string[b-1])\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tprintf(\"1\");\n\t\treturn 0;\n\t}\n\n}"}
{"similarity_score": 0.6933066933066933, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "0d6ab6b009c95540204bad1498825f1d", "bug_code_uid": "59d095feded2fa2554ef5c1b8a709939", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "727044e570f0515b7d39309ae316594f", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\nint occa(char s[]){\nint i=0,k=0;\nwhile(i<strlen(s) && k<strlen(s)/2+1 ){\n    if(s[i]=='A')k++;\n    i++;\n}\n\n\nreturn k;\n}\n\n\n\nint main(){\nchar *s;\nint n,i;\nscanf(\"%d\",&n);\ns=malloc(n*sizeof(char));\nscanf(\"%s\",s);\n\n\nif()\n\n\nif(strlen(s)%2==0){\n\n\n\n    if(occa(s)>strlen(s)/2)\n    printf(\"Anton\");\nelse if(occa(s)<strlen(s)/2)\n    printf(\"Danik\");\nelse\n    printf(\"Friendship\");\n\n\n\n}else{\n\n\n\n\nif(occa(s)>=strlen(s)/2+1)\n    printf(\"Anton\");\nelse if(occa(s)<strlen(s)/2+1)\n    printf(\"Danik\");\nelse\n    printf(\"Friendship\");\n    }\n\n\n\n\n\nreturn 0;}\n", "fixed": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\nint occ(char s[]){\nint i=0,a=0,d=0;\nwhile(i<strlen(s)){\n    if(s[i]=='A')a++;\n    else if(s[i]=='D')d++;\n    i++;\n}\n\n\nreturn (a-d);\n}\n\n\n\nint main(){\nchar *s;\nint n,i;\nscanf(\"%d\",&n);\ns=malloc(n*sizeof(char));\nscanf(\"%s\",s);\n\n\nif(occ(s)>0)\n    printf(\"Anton\");\nelse if(occ(s)<0)\n    printf(\"Danik\");\nelse\n        printf(\"Friendship\");\n\n\n\n\n\nreturn 0;}\n"}
{"similarity_score": 0.8919449901768173, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0ef4f94bfb48e714a0752ac2decc3e71", "bug_code_uid": "3900788abbd045f50d50b2330ebd6e7d", "src_uid": "d497431eb37fafdf211309da8740ece6", "apr_id": "34d42d39b5ee50d61622d97e8ec8a2d1", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[1000];\nint main()\n{\n    int h1,a1,c1;\n    int h2,a2,i;\n    int s=0;\n    scanf(\"%d %d %d\\n\",&h1,&a1,&c1);\n    scanf(\"%d %d\",&h2,&a2);\n    for(i=1;;i++)\n    {\n           if(h1<=a2)\n           {\n               h1+=c1;\n               h1-=a2;\n               a[i]=2;\n        }\n          else\n          {\n              h2-=a1;\n              h1-=a2;\n              a[i]=1;\n          }\n        s++;\n        if(h2<=0)\n        break;\n        }\n        printf(\"%d\\n\",s);\n        for(i=1;i<=s;i++)\n        {\n            if(a[i]==2)\n            printf(\"HEAL\\n\");\n            else if(a[i]==1)\n            printf(\"STRIKE\\n\");\n        }\n    \n    return 0;\n    \n    \n    \n    \n}", "fixed": "#include<stdio.h>\nint a[100000];\nint main()\n{\n    int h1,a1,c1;\n    int h2,a2,i;\n    int s=0;\n    scanf(\"%d %d %d\\n\",&h1,&a1,&c1);\n    scanf(\"%d %d\",&h2,&a2);\n    for(i=1;;i++)\n    {\n           if(h1<=a2)\n           {\n             if(h2>a1)\n               {h1+=c1;\n               h1-=a2;\n               a[i]=2;\n               }\n             else {\n                \n              h2-=a1;\n              h1-=a2;\n              a[i]=1;\n             }\n        }\n          else\n          {\n              h2-=a1;\n              h1-=a2;\n              a[i]=1;\n          }\n        s++;\n        if(h2<=0)\n        break;\n        }\n        printf(\"%d\\n\",s);\n        for(i=1;i<=s;i++)\n        {\n            if(a[i]==2)\n            printf(\"HEAL\\n\");\n            else if(a[i]==1)\n            printf(\"STRIKE\\n\");\n        }\n    \n    return 0;\n    \n    \n    \n    \n}"}
{"similarity_score": 0.9984871406959153, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "eca9f37caa5cd664281f71d99eeab189", "bug_code_uid": "7848d8e58fe4f970b4be2bb2ebaacd0d", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "79ca0292eb4381f29eed13f2defd42a9", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,max,min;\n    scanf(\"%d\",&n);\n    int ara[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    min=ara[1]-ara[0];\n    max=ara[n-1]-ara[0];\n    printf(\"%d %d\\n\",min,max);\n    for(i=1;i<n-1;i++)\n    {\n        if(ara[i]-ara[i-1]>ara[i+1]-ara[i]){\n            min=ara[i+1]-ara[i];\n        }\n        else{\n            min=ara[i]-ara[i-1];\n        }\n        if(ara[i]-ara[0]>ara[n-1]-ara[i]){\n            max=ara[i]-ara[0];\n        }\n        else{\n            max=ara[n-1]-ara[i];\n        }\n        printf(\"%d %d\",min,max);\n    }\n    min=ara[n-1]-ara[n-2];\n    max=ara[n-1]-ara[0];\n    printf(\"%d %d\",min,max);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,max,min;\n    scanf(\"%d\",&n);\n    int ara[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    min=ara[1]-ara[0];\n    max=ara[n-1]-ara[0];\n    printf(\"%d %d\\n\",min,max);\n    for(i=1;i<n-1;i++)\n    {\n        if(ara[i]-ara[i-1]>ara[i+1]-ara[i]){\n            min=ara[i+1]-ara[i];\n        }\n        else{\n            min=ara[i]-ara[i-1];\n        }\n        if(ara[i]-ara[0]>ara[n-1]-ara[i]){\n            max=ara[i]-ara[0];\n        }\n        else{\n            max=ara[n-1]-ara[i];\n        }\n        printf(\"%d %d\\n\",min,max);\n    }\n    min=ara[n-1]-ara[n-2];\n    max=ara[n-1]-ara[0];\n    printf(\"%d %d\",min,max);\n}"}
{"similarity_score": 0.9663865546218487, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ffff3c1d91237a2ebfe5561bcdd1cb05", "bug_code_uid": "ef1e0afb141fd1c0bf9e5f63a7d5a898", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "e5786b6edfbe185c8bec9f0f10324eed", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int i,n;\n   long long c;\n   char b[1001];\n   scanf(\"%d\",&n);\n   long long a[1000]={1,1};\n   for(i=2;i<n;i++)\n   a[i]=a[i-1]+a[i-2];\n   for(i=0;i<n;i++){\n        c=a[i];\n     if(c<=n) b[c]='O';}\n   for(i=1;i<=n;i++){\n        if(b[i]!='O'){\n      b[i]='o';}\n    }\n    b[n+1]='\\0';\n    for(i=1;i<=n;i++)\n        printf(\"%c\",b[i]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   int i,n;\n   long long c;\n   char b[1010];\n   scanf(\"%d\",&n);\n   long long a[1000]={1,1};\n   for(i=2;i<=n;i++)\n   a[i]=a[i-1]+a[i-2];\n   for(i=0;i<17;i++){\n        c=a[i];\n     if(c<=n) b[c]='O';}\n   for(i=1;i<=n;i++){\n        if(b[i]!='O'){\n      b[i]='o';}\n    }\n\n    for(i=1;i<=n;i++)\n        printf(\"%c\",b[i]);\n}\n"}
{"similarity_score": 0.9960526315789474, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a853f8fa5e1f17c6d8f1b997e70a5b35", "bug_code_uid": "ace8234fc95116a9b0432e7dbbf3d6d1", "src_uid": "4ca13794471831953f2737ca9d4ba853", "apr_id": "60d87023073344cb19ed94797ee15ab5", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int T;\r\n    int n,m,r,c;\r\n    scanf(\"%d\",&T);\r\n    int i,j;\r\n    while(T--)\r\n    {\r\n        int result=2;\r\n\r\n        char a[55][55];\r\n        int f=0;\r\n        scanf(\"%d%d%d%d\",&n,&m,&r,&c);\r\n        getchar();\r\n        for(i=0;i<n;i++)\r\n        {\r\n            for(j=0;j<m;j++)\r\n            {\r\n                scanf(\"%c\",&a[i][j]);\r\n                if(a[i][j]=='B')f=1;\r\n            }\r\n            getchar();\r\n        }\r\n        if(f==0)result=-1;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(a[r][c]=='B')result=0;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(i=1;i<=m;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[r][i]=='B')\r\n\t\t\t\t\tresult=1;\r\n\t\t\t\t}\r\n\t\t\t\tfor(i=1;i<=n;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[i][c]=='B')\r\n\t\t\t\t\tresult=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",result);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int T;\r\n    int n,m,r,c;\r\n    scanf(\"%d\",&T);\r\n    int i,j;\r\n    while(T--)\r\n    {\r\n        int result=2;\r\n\r\n        char a[55][55];\r\n        int f=0;\r\n        scanf(\"%d%d%d%d\",&n,&m,&r,&c);\r\n        getchar();\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            for(j=1;j<=m;j++)\r\n            {\r\n                scanf(\"%c\",&a[i][j]);\r\n                if(a[i][j]=='B')f=1;\r\n            }\r\n            getchar();\r\n        }\r\n        if(f==0)result=-1;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(a[r][c]=='B')result=0;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(i=1;i<=m;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[r][i]=='B')\r\n\t\t\t\t\tresult=1;\r\n\t\t\t\t}\r\n\t\t\t\tfor(i=1;i<=n;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(a[i][c]=='B')\r\n\t\t\t\t\tresult=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",result);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.34146341463414637, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3b396cc82d6f33ddc2c0bed482068aee", "bug_code_uid": "85ef4bd7f401beaf668e464bc3dc2c7c", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "04bf0f09dc0f41ea895cd2f218b3d9c6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int m[n],c[n],i,sm=0,sc=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&m[i],&c[i]);\n        sm=sm+m[i];\n        sc=sc+c[i];\n    }\n    if(sm<sc)\n        printf(\"Chris\\n\");\n    else if(sm>sc)\n        printf(\"Mishka\\n\");\n    else if(sm==sc)\n        printf(\"Friendship is magic!^^\\n\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,a,b,sm=0,sc=0;\n    scanf (\"%d\",&n);\n    while (n--)\n    {\n        scanf (\"%d%d\",&a,&b);\n        if (a>b)\n            sm++;\n        else if(a<b)\n            sc++;\n        /*else\n            sm++;\n            sc++;*/\n    }\n    if (sm==sc)\n    {\n        printf (\"Friendship is magic!^^\\n\");\n    }\n    else if (sm>sc)\n    {\n        printf (\"Mishka\\n\");\n    }\n    else\n        printf (\"Chris\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.998995983935743, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b7e29d2b9d2462244654a6576eb4423c", "bug_code_uid": "8acca67317d546854afe10e5b07f5a69", "src_uid": "ee523bb4da5cb794e05fb62b7da8bb89", "apr_id": "d7f78ddf28fec62fb737e4bbf228b8f8", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    freopen(\"in.txt\", \"r\", stdin);\n    int a,b,c,i,j,k,m;\n    int s[300010]={0},s1[4];\n    int f,g;\n    scanf(\"%d %d\",&a,&b);\n    for(i=1;i<=b;i++){\n            f=0;\n           for(j=1;j<=3;j++){\n            scanf(\"%d\",&s1[j]);\n        }\n        for(j=1;j<=3;j++){\n                c=s1[j];\n            if(s[c]!=0){\n                f=s[c];\n                m=f;\n                break;\n            }\n        }\n        if(f==0){\n            s[s1[1]]=1;\n            s[s1[2]]=2;\n            s[s1[3]]=3;\n        }\n        else if(f!=0){\n            for(k=1;k<=3;k++){\n                if(f==1){\n                    if(s1[k]!=c){s[s1[k]]=m+1;m++;}\n                }\n                else if(f==2){\n                    if(s1[k]!=c){s[s1[k]]=m-1;m=m+2;}\n                }\n                else if(f==3){\n                    if(s1[k]!=c){s[s1[k]]=m-1;m--;}\n                }\n            }\n        }\n    }\n    for(i=1;i<=a;i++){\n        printf(\"%d \",s[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    int a,b,c,i,j,k,m;\n    int s[300010]={0},s1[4];\n    int f,g;\n    scanf(\"%d %d\",&a,&b);\n    for(i=1;i<=b;i++){\n            f=0;\n           for(j=1;j<=3;j++){\n            scanf(\"%d\",&s1[j]);\n        }\n        for(j=1;j<=3;j++){\n                c=s1[j];\n            if(s[c]!=0){\n                f=s[c];\n                m=f;\n                break;\n            }\n        }\n        if(f==0){\n            s[s1[1]]=1;\n            s[s1[2]]=2;\n            s[s1[3]]=3;\n        }\n        else if(f!=0){\n            for(k=1;k<=3;k++){\n                if(f==1){\n                    if(s1[k]!=c){s[s1[k]]=m+1;m++;}\n                }\n                else if(f==2){\n                    if(s1[k]!=c){s[s1[k]]=m-1;m=m+2;}\n                }\n                else if(f==3){\n                    if(s1[k]!=c){s[s1[k]]=m-1;m--;}\n                }\n            }\n        }\n    }\n    for(i=1;i<=a;i++){\n        printf(\"%d \",s[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9023383768913342, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "de4e556969ef931038f0d4b6c7a39c57", "bug_code_uid": "761967922673568d6feba84357c03a30", "src_uid": "7bbb4b9f5eccfe13741445c815a4b1ca", "apr_id": "247efd2620beda40e53defd96221a79a", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ int t,i,s,j,q,n[101],d[101],a[101][1000];\n\tscanf(\"%d\",&t);\n\tfor(i=0; i<t; i++) {\n\t\tscanf(\"%d%d\",&n[i],&d[i]);\n\t\tfor(j=0; j<n[i]; j++) scanf(\"%d\",&a[i][j]);\n\t};\n\tj=0;\n\tfor(i=0; i<t ;i++) {\n\tq=n[i];\n\tfor(j=1; j<n[i]; j++) {\n\twhile(q>=j&&a[i][j]>0) {\n\t\ta[i][0]++;\n\t\tq=q-j;\n\t\ta[i][j]--;\n\t};} \n\t\t\tprintf(\"%d\\n\",a[i][0]);\n\t\t}\n\t}\n\n", "fixed": "#include<stdio.h>\nint main()\n{ int t,i,s,j,q,n[101],d[101],a[101][1000];\n\tscanf(\"%d\",&t);\n\tfor(i=0; i<t; i++) {\n\t\tscanf(\"%d%d\",&n[i],&d[i]);\n\t\tfor(j=0; j<n[i]; j++) scanf(\"%d\",&a[i][j]);\n\t};\n\tj=0;\n\tfor(i=0; i<t ;i++) {\n\tq=d[i];\n\tfor(j=1; j<n[i]; j++) {if(a[i][j]!=0) {\n\twhile(q>=j&&a[i][j]>0) {\n\t\ta[i][0]++;\n\t\tq=q-j;\n\t\ta[i][j]--;\n\t};} }\n\t\t\tprintf(\"%d\\n\",a[i][0]);\n\t\t}\n\t}\n\n"}
{"similarity_score": 0.9445876288659794, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7082fa2aceb9495eff7109b2f5fd328b", "bug_code_uid": "8ca7594cefa34aafeb68d1cf295c01c0", "src_uid": "8e7c0b703155dd9b90cda706d22525c9", "apr_id": "8e0a235a7a7f5199e63357eb039134b8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\nint a=0,b=0,c,d,k,m,count,i,num,arr[20000];\r\nscanf(\"%d\",&count);\r\nfor(i=0;i<count*2;i++)\r\n{\r\nscanf(\"%d\",&arr[i]);\r\ni++;\r\nscanf(\"%d\",&arr[i]);\r\n}\r\nprintf(\"\\n\");\r\nfor(i=0;i<count*2;i++)\r\n{\r\n    c=arr[i];\r\n    i++;\r\n    d=arr[i];\r\n    if(c!=0 && d!=0)\r\n    {\r\n    if((c%2!=0 && d%2!=0) || (c%2==0 && d%2==0))\r\n    {\r\n       m=(c+d)/2;\r\n       num=1;\r\n       if(c>d)\r\n      {\r\n       k=(c-d)/2;\r\n       a=m-k;\r\n       b=m+k;\r\n       num++;\r\n      }\r\n       else if(c<d)\r\n       {\r\n       k=(d-c)/2;\r\n       a=m-k;\r\n       b=m+k;\r\n       num++;\r\n}\r\n       else\r\n       {\r\n        num=1;\r\n}\r\n\r\n}\r\n      else\r\n{\r\n    num=-1;\r\n\r\n}\r\n    }\r\n    else if(c==0 && d==0)\r\n    {\r\n        num=0;\r\n    }\r\n\r\n\r\n   printf(\"%d\\n\",num);\r\n}\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\nint a=0,b=0,c,d,k,m,count,i,num,arr[20000];\r\nscanf(\"%d\",&count);\r\nfor(i=0;i<count*2;i++)\r\n{\r\nscanf(\"%d\",&arr[i]);\r\ni++;\r\nscanf(\"%d\",&arr[i]);\r\n}\r\nprintf(\"\\n\");\r\nfor(i=0;i<count*2;i++)\r\n{\r\n    c=arr[i];\r\n    i++;\r\n    d=arr[i];\r\n    if(c!=0 || d!=0)\r\n    {\r\n    if((c%2!=0 && d%2!=0) || (c%2==0 && d%2==0))\r\n    {\r\n       m=(c+d)/2;\r\n       num=1;\r\n       if(c>d)\r\n      {\r\n       k=(c-d)/2;\r\n       a=m-k;\r\n       b=m+k;\r\n       num++;\r\n      }\r\n       else if(c<d)\r\n       {\r\n       k=(d-c)/2;\r\n       a=m-k;\r\n       b=m+k;\r\n       num++;\r\n}\r\n       else\r\n       {\r\n        num=1;\r\n}\r\n\r\n}\r\n      else\r\n{\r\n    num=-1;\r\n\r\n}\r\n    }\r\n    else if(c==0 && d==0)\r\n    {\r\n        num=0;\r\n    }\r\n\r\n\r\n   printf(\"%d\\n\",num);\r\n}\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.9078498293515358, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "16c875d68cbd5f628f8355cfa82798e1", "bug_code_uid": "8890320b14f2dbaa19526cc8edd28ca1", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "130726e8da4cecc924d4e1437b83a682", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,a,i,p=0,ac=0;\n    scanf(\"%d\\n\",&n);\n    for (i=0;i<n;i++){\n        for (i=0;i<3;i++){\n            scanf(\"%c\",&a);\n            if(a==1)\n            ac++;\n        }\n        if(acc>1)\n        p++;\n        scanf(\"\\n\");\n    }\n    printf(\"%d\",p);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,a,i,j,p=0,ac=0;\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++){\n        ac=0;\n        for (j=0;j<3;j++){\n            scanf(\"%d\",&a);\n            if(a==1)\n            ac++;\n        }\n        if(ac>1)\n        p++;\n    }\n    printf(\"%d\",p);\n    return 0;\n}\n"}
{"similarity_score": 0.9517241379310345, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7afd2f63a7379ac2379bea0c9902d37f", "bug_code_uid": "fbe4b2890e6fd88504e9c919b24ef20f", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "4fc48d67612de27aac36666ce4b8ac11", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\nint n,i,c;\nprintf(\"enter n\\n\");\nscanf(\"%d\",&n);\nchar a[100];\nfor(i=0;i<=n;i++){\n\tgets(a);\n\tif((c=strlen(a))>10)\n\tprintf(\"%c%d%c\\n\",a[0],c-2,a[c-1]);\nelse\nputs(a);}\n\n return 0;}\n \n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\nint n,i,c;\nscanf(\"%d\",&n);\nchar a[100];\nfor(i=0;i<=n;i++){\n\tgets(a);\n\tif((c=strlen(a))>10)\n\tprintf(\"%c%d%c\\n\",a[0],c-2,a[c-1]);\nelse\nputs(a);}\n\n return 0;}\n \n"}
{"similarity_score": 0.901307966706302, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cf9f638b298c3a495e6cfeb9e14c5429", "bug_code_uid": "2a5685a388465abc8a966c4244d4871c", "src_uid": "30cfce44a7a0922929fbe54446986748", "apr_id": "9153477053a34611bb741e3370aeaf68", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,a,b,c,d,i;\n    long long int min_w_rice,max_w_rice;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d%d%d%d%d\",&n,&a,&b,&c,&d);\n        min_w_rice=(a-b)*n;\n        max_w_rice=(a+b)*n;\n        if(min_w_rice>=c-d && min_w_rice<=c+d)\n            printf(\"YES\");\n        else if(max_w_rice>=c-d && max_w_rice<=c+d)\n            printf(\"YES\");\n        else\n            printf(\"NO\");\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,a,b,c,d,i;\n    long long int min_w_rice,max_w_rice;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d%d%d%d%d\",&n,&a,&b,&c,&d);\n        min_w_rice=(a-b)*n;\n        max_w_rice=(a+b)*n;\n        if(max_w_rice>=c-d && min_w_rice<=c+d)\n            printf(\"YES\");\n        else\n            printf(\"NO\");\n        printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.8283464566929134, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "5d88af08d402dae861ccf2239fb19275", "bug_code_uid": "f1a4dc60ec8585f2261a5a146ec0fcbf", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "aac25c2f4232c352bd5a44bd46cbc83b", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int i,k=0,t;\r\n    scanf(\"%d\",&t);\r\n    for(t=t;t>0;t--)\r\n    {k=1;\r\n    char s[50],c;\r\n    scanf(\"%s %c\",s,&c);\r\n    if((strlen(s)==1)||strlen(s)==2)\r\n    {if(strlen(s)==1&&s[0]==c)\r\n    printf(\"YES\\n\");\r\n    else\r\n\r\n        printf(\"NO\\n\");}\r\n    else if(s[0]==c||s[strlen(s)-1]==c)\r\n    {\r\n        printf(\"YES\\n\");\r\n\r\n\r\n    }\r\n\r\n\r\nelse\r\n{\r\n\r\n\r\n\r\n\r\n    for(i=2;i<strlen(s)-2;i++)\r\n    {\r\n    if(s[i]==c)\r\n    {k=0;\r\n    break;\r\n    }\r\n\r\n\r\n\r\n\r\n    }\r\n    if(k==0)\r\n    printf(\"YES\\n\");\r\n    else\r\n    printf(\"NO\\n\");\r\n\r\n}}\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int i,k=1,t;\r\n    scanf(\"%d\",&t);\r\n    for(t=t;t>0;t--)\r\n    {k=1;\r\n    char s[50],c;\r\n    scanf(\"%s %c\",s,&c);\r\n    if((strlen(s)==1)||strlen(s)==2)\r\n    {if(strlen(s)==1&&s[0]==c)\r\n    printf(\"YES\\n\");\r\n    else\r\n\r\n        printf(\"NO\\n\");}\r\n    else if(s[0]==c||s[strlen(s)-1]==c)\r\n    {\r\n        printf(\"YES\\n\");\r\n\r\n\r\n    }\r\n\r\n\r\nelse\r\n{\r\nfor(i=0;i<strlen(s);i++)\r\n{\r\n\r\n    if(s[i]==c)\r\n    {\r\n        if(i%2==0&&(strlen(s)-1-i)%2==0)\r\n        {\r\n            k=0;\r\n            break;\r\n\r\n        }\r\n\r\n    }\r\n  if(k==0)\r\n        break;\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nif(k==0)\r\n    printf(\"YES\\n\");\r\nelse\r\n    printf(\"NO\\n\");\r\n\r\n\r\n\r\n\r\n}}}\r\n"}
{"similarity_score": 0.8873239436619719, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "f102bb73a40f37a23a2e267003012fb5", "bug_code_uid": "83a9215b44f526f8be2e2dcaa40d2e3a", "src_uid": "287505698b6c850a768ee35d2e37753e", "apr_id": "b639d21e8bdc35c2e6730528904fb697", "difficulty": null, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\tint n,r,l;\n\twhile(T--)\n\t{\n\t\tscanf(\"%d %d %d\",&n,&l,&r);\n\t\tint k;\n\t\tk = n/l;\n\t\tif(r*k >= n)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse\n\t\t\tprintf(\"No\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\tint n,r,l;\n\twhile(T--)\n\t{\n\t\tscanf(\"%d %d %d\",&n,&l,&r);\n\t\tint k1,k2;\n\t\tk1 = n/l;\n\t\tk2 = n/r;\n\t\tif(k1>k2 || k2*r==n || k1*l==n)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse\n\t\t\tprintf(\"No\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.42857142857142855, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "01fb41acf933f125a57ae6ed9af28d6d", "bug_code_uid": "382f52de6b89e63aa273e8e7f02472ff", "src_uid": "d9ba1dfe11cf3dae177f8898f3abeefd", "apr_id": "0220306031862b6b6e3e7a8d64eade64", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, i;\n    scanf(\"%d\", &n);\n    for(i = n; i >0 ; i--){\n        printf(\"%d \", i);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, i;\n    scanf(\"%d\", &n);\n    int a[n + 1];\n    for(i = 1; i <= n ; i++){\n        a[i] = i;\n    }\n    int k = n, temp;\n    while(k>1){\n        temp = a[k];\n        a[k] = a[k - 1];\n        a[k - 1] = temp;\n        k--;\n    }\n    for(i = 1; i <= n; i++)\n        printf(\"%d \", a[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.8463611859838275, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "26aa830933ddd0449a39e4d4158f9372", "bug_code_uid": "36269c0ff7a2e27d379aaa1df48b00c0", "src_uid": "f4982de28aca7080342eb1d0ff87734c", "apr_id": "db262a3ea2dce6a405ddde2162adbbf0", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint t,h,m,a,b;\nscanf(\"%d\",&t);\nwhile(t>0)\n{\nscanf(\"%d%d\",&h,&m);\nif(h<24&&m<60)\n  {\n  a=1440-((h*60)+m);\n  printf(\"%d\",a);\n   }\n\n  if(h==0&&m==0)\n   break;\n   t--;\n   retun 0;\n}}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint t,h,m,a;\nscanf(\"%d\",&t);\nwhile(t--)\n{\nscanf(\"%d%d\",&h,&m);\nif(h<24&&m<60)\n  {\n  a=1440-((h*60)+m);\n  printf(\"%d\\n\",a);\n  }\n}}\n"}
{"similarity_score": 0.6850044365572315, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e7a22a81826989534f3be8dbdfafcda6", "bug_code_uid": "d4d86de04364a2315ce5af9b38a7827d", "src_uid": "b37bbf1fe9ac5144cfa230633ccbdd79", "apr_id": "6bd427263f9a0c571868c3573da53df9", "difficulty": 800, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n                 int t,n,i;\n                 char s[103],s1[55];\n                 scanf(\"%d\",&t);\n                 while(t--)\n                 {\n                     scanf(\"%d\",&n);\n                     scanf(\"%s\",s);\n                      for(i=0;i<n;i++)\n                      {\n                          s1[i]=s[i];\n                      }\n\n                     for(i=0;i<n;i++)\n                     {\n                         printf(\"%c\",s1[i]);\n                     }\n                     printf(\"\\n\");\n                 }\n\n\n                    return 0;\n\n            }\n\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n                 int t,n,i;\n                 char s[103];\n                 scanf(\"%d\",&t);\n                 while(t--)\n                 {\n                     scanf(\"%d\",&n);\n                     scanf(\"%s\",s);\n\n\n                     for(i=0;i<2*n-1;i+=2)\n                     {\n                         printf(\"%c\",s[i]);\n                     }\n                     printf(\"\\n\");\n                 }\n\n\n                    return 0;\n\n            }\n\n\n\n"}
{"similarity_score": 0.7177121771217713, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "79ff2cf9527c31df694384361ca2d5e7", "bug_code_uid": "320121f6d0f185141e7c1d01e76bbf02", "src_uid": "447ebe088a0a60a7a44a3fc76056bc65", "apr_id": "06629f9bcde86fcd25961f8f73ec5d7d", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\nint i,j,t,n;\nint flag=1;\nunsigned long long int p,q,m;\nlong long int a[92]={0}; \n\n//scanf(\"%d\",&t);\n//while(t--)\n//{\nscanf(\"%llu %llu\",&p,&q);\nscanf(\"%d\",&n);\n\nfor(i=0;i<n;i++)\nscanf(\"%llu\",&a[i]);\ni=0;\nwhile(flag ==1 && i!=n )\n{\n//printf(\"%d\\n\",p/q);\n\nif(a[i+1]==1 && p/q == a[i]+a[i+1])\n{\nm=q;\nq = p -a[i]*q;\np=m;\ni++;\n}\n\n\nelse if(p/q == a[i])\n{\nm=q;\nq = p - a[i]*q;\np=m;\ni++;\n}\n\nelse flag=0;\n}\n\nif(flag == 0)\nprintf(\"NO\\n\");\n\nelse \nprintf(\"YES\\n\");\n\n//}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\nint i,j,t,n;\nint flag=1;\nunsigned long long int p,q,m;\nlong long int a[92]={0}; \n\n//scanf(\"%d\",&t);\n//while(t--)\n//{\nscanf(\"%llu %llu\",&p,&q);\nscanf(\"%d\",&n);\n\nfor(i=0;i<n;i++)\nscanf(\"%llu\",&a[i]);\ni=0;\n\nif((p==10 && q==3 && n==1 && a[0]==3)||(p==1337 && q==42 && n==1 &&a[0]==31))\nflag=0;\n\n\n\nwhile(flag ==1 && i!=n )\n{\n\nif(q==0)\n{flag=0;break;}\n\nif(q==0)\n{flag=0;break;}\n\nif((a[i+1]==1 && p/q == a[i]+a[i+1])||(p/q == a[i]))\n{\nm=q;\nq = p -a[i]*q;\np=m;\ni++;\n}\n\n\n\n\nelse flag=0;\n}\n\nif(flag == 0)\nprintf(\"NO\\n\");\n\nelse \nprintf(\"YES\\n\");\n\n//}\nreturn 0;\n}\n"}
{"similarity_score": 0.9068150208623088, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c1ec40d43da6710202502d2d6a7d7a61", "bug_code_uid": "4fa35dd7641a6979f360c8d35765245c", "src_uid": "5088d1d358508ea3684902c8e32443a3", "apr_id": "1eeef250b017aab670dd43cb4e6b319b", "difficulty": 1200, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long a[200000];\nint main()\n{\n    long long n,i,max=1,count=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&a[i]);\n    for(i=1;i<n;i++)\n        if(a[i-1]*2>=a[i])\n        count++;\n    else\n    {\n        if(max<count)\n            max=count;\n            count=1;\n    }\n    printf(\"%lld\\n\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint a[200001];\nint main()\n{\n    int n,i,max=1,count=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=1;i<n;i++)\n        if(a[i-1]*2>=a[i])\n        count++;\n    else\n    {\n        if(max<count)\n            max=count;\n            count=1;\n    }\n    if(max<count)\n        max=count;\n    printf(\"%d\\n\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.3951890034364261, "equal_cnt": 16, "replace_cnt": 7, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "72742ee333509ea883759e433c986896", "bug_code_uid": "b6235581cc4922f06c1fcbba5bcfced7", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "f77fea2cf1110ee87fc69751e12fc095", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int arr1[n];\n    int i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &arr1[i]);\n    }\n    int arr2[n];\n    int j;\n    int max_index=0;\n    for(j=0;j<n;j++)\n    {\n        max_index=0;\n        for(i=0;i<n;i++)\n        {\n            if(arr1[i]>arr1[max_index])\n            {\n                max_index=i;\n            }\n        }\n        arr2[j]=arr1[max_index];\n        arr1[max_index]=0;\n    }\n    int sum=0;\n    for(i=2;i<=n;i++)\n    {\n        sum+=i*arr2[n-i+1];\n    }\n    sum+=n*arr2[0];\n    printf(\"%d\", sum);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare(const void *p, const void *q)\n{\n    int x=*(int*)p;\n    int y=*(int*)q;\n    if(x>y)\n    return 1;\n    if(x==y)\n    return 0;\n    if(x<y)\n    return -1;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    \n    int arr[n];\n    int i;\n    for(i=0;i<n;i++)\n    scanf(\"%d\", &arr[i]);\n    \n    qsort(arr,n,sizeof(int),compare);\n    \n    long long int sum=0;\n    \n    for(i=0;i<n;i++)\n    sum+=(long long int)arr[i]*(i+2);\n    sum-=(long long int)arr[n-1];\n    \n    printf(\"%lld\", sum);\n    return 0;\n}"}
{"similarity_score": 0.9399585921325052, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "9940c5ef7900c7580374fafca60ca698", "bug_code_uid": "135fbe212f42aa3fc4e835e81a07b5aa", "src_uid": "dc5ddfc2d2e5589eb91aa33744c8fd14", "apr_id": "56a5fb473a5f733a6037d38ddb6aa158", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int d,n,ans=0,i,a;\n\n    scanf(\"%d%d\",&d,&n);\n\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a);\n        if(i!=0)\n        ans=ans+d-a;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int d,n,ans=0,i;\nint a[10000];\n    scanf(\"%d%d\",&d,&n);\n\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        if(i!=n-1)\n        ans=ans+d-a[i];\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.582010582010582, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "29affc5b92ef9d880f5cc554b6efc6ed", "bug_code_uid": "5a41b3e4ea7d0605e3b1a42eb9ac8b04", "src_uid": "806dcdab8364f5169334e172a192598a", "apr_id": "2a50128b33adc5c2c3a8023048666a76", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint a, b,c;\r\n\tscanf(\"%d %d\", &a, &b);\r\n\tc = a * b;\r\n\tprintf(\"%d\", c);\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,ans[10000];\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tint a,b,c;\r\n\t\tscanf(\"%d %d\", &a, &b);\r\n\t\tc = a * b;\r\n\t\tans[i] = c;\r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tprintf(\"%d\\n\", ans[i]);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9912609238451935, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "956d2998ce0e3302ccc19fcef36f5223", "bug_code_uid": "822e6bd74b55fe21a9564ed9fb2b7bf9", "src_uid": "4ed5b8055ce48b5ad4e43ed4b06d1b07", "apr_id": "a770dbe851cd5b19d53d68d4be0004d1", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, m, k, dish1 = 0, dish2 = 0, curr, total = 0;\n    scanf(\"%d %d %d\", &n, &m, &k);\n    for (int i=0; i<n; i++){\n        scanf(\"%d\", &curr);\n        if (curr == 1) dish1++;\n        else dish2++;\n    }\n    m-=dish1;\n    if (m < 0) {\n        total-=m;\n        m = 0;\n    }\n    k+=m;\n    k-=dish2;\n    if (k < 0) total-=k;\n    printf(\"%d\\n\",total);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, m, k, dish1 = 0, dish2 = 0, curr, total = 0, i;\n    scanf(\"%d %d %d\", &n, &m, &k);\n    for (i=0; i<n; i++){\n        scanf(\"%d\", &curr);\n        if (curr == 1) dish1++;\n        else dish2++;\n    }\n    m-=dish1;\n    if (m < 0) {\n        total-=m;\n        m = 0;\n    }\n    k+=m;\n    k-=dish2;\n    if (k < 0) total-=k;\n    printf(\"%d\\n\",total);\n    return 0;\n}"}
{"similarity_score": 0.42550582464745557, "equal_cnt": 24, "replace_cnt": 14, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "e978ba47a16e87ceba6b7e3819192061", "bug_code_uid": "84f7672f2d336d99e10369f4fcb06e49", "src_uid": "0a30830361b26838b192d7de1efcdd2f", "apr_id": "6f383fa4ea0fdf58f8135fb20006470d", "difficulty": 1500, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n    int i;\n    char s[100001], s2[100001], *p;\n    int len, sharp_num, cnt;\n    int left, right;\n\n    scanf(\"%s%n \", s, &len);\n    strcpy(s2, s);\n\n    sharp_num = 0;\n    for (i = len - 1; i >= 0; i--)\n        if (s2[i] == '#')\n            if (sharp_num++)\n                s2[i] = ')';\n\n    p = s2;\n    for (left = 0; *p != '#'; left++, p++)\n        if (*p == ')')\n            left -= 2;\n\n    for (right = 0, i = len - 1; s2[i] != '#'; right++, i--)\n        if (s2[i] == '(')\n            right -= 2;\n\n    if (right < 0 || left - right < 1) {\n        puts(\"-1\");\n        return 0;\n    }\n\n    cnt = 0;\n    for (i = 0; i < len; i++)\n        if (s[i] == '#')\n            printf(\"%d\\n\", ++cnt == sharp_num ? left - right : 1);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n    int i;\n    char s[100001];\n    int len, numSharp, rIdx, left, right;\n\n    scanf(\"%s%n\", s, &len);\n\n    numSharp = 0;\n    for (i = len - 1; i >= 0; i--)\n        if (s[i] == '#')\n            if (!numSharp++)\n                rIdx = i;\n\n    left = 0;\n    for (i = 0; i < rIdx; i++) {\n        left += (s[i] == '(') * 2 - 1;\n        if (left < 0) {\n            puts(\"-1\");\n            return 0;\n        }\n    }\n\n    right = 0;\n    for (i = len - 1; i > rIdx; i--) {\n        right += (s[i] == ')') * 2 - 1;\n        if (right < 0) {\n            puts(\"-1\");\n            return 0;\n        }\n    }\n\n    if (left - right < 1) {\n        puts(\"-1\");\n        return 0;\n    }\n\n    for (i = 0; i < numSharp; i++)\n        printf(\"%d\\n\", i == numSharp - 1 ? left - right : 1);\n\n    return 0;\n}\n"}
{"similarity_score": 0.5464743589743589, "equal_cnt": 13, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "08832601c9f8ccabad6a790aedcefc90", "bug_code_uid": "d980f7430608357580fe31a44c118b4a", "src_uid": "5d5dfa4f129bda46055fb636ef33515f", "apr_id": "26d966b1034d3922710f324133ae7532", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\nint main()\n{   int  out=0;\n__int64   p,n,i,j;\n__int64   a[1001];\n__int64  mod[1001];\nwhile(scanf(\"%I64d %I64d\",&p,&n)!=EOF)\n{\n    memset(a,0,sizeof(a));\n    memset(mod,0,sizeof(mod));\n    out=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        mod[i]=a[i]%p;\n        \n    }\n    for(i=1;i<=n&&out!=1;i++)\n    {\n        for(j=i+1;j<=n&&out!=1;j++)\n        {\n            if(mod[i]==mod[j])\n            {\n                \n                \n                printf(\"%I64d\\n\",j);\n                out=1;\n            }\n        }\n    }\n    if(!out){\n        printf(\"-1\\n\");\n    }\n}\nreturn 0;\n}", "fixed": "#include<string.h>\n#include<stdio.h>\nint main()\n{   int  out=0;\n__int64   p,n,i,j;\n__int64   a[1001];\n__int64  mod[1001];\nwhile(scanf(\"%I64d %I64d\",&p,&n)!=EOF)\n{\n\tmemset(a,0,sizeof(a));\n\tmemset(mod,0,sizeof(mod));\n\tout=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tmod[i]=a[i]%p;\n\t\t\n\t}\n/*\t\tfor(i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d \",mod[i]);\n\t\t\n\t}\n\t\tprintf(\"\\n\");\n\t\t*/\n\tfor(i=2;i<=n&&out!=1;i++)\n\t{\n\t\tfor(j=1;j<=i-1&&out!=1;j++)\n\t\t{\n\t\t\t//printf(\"%I64d-%I64d    \",i,j);\n\t\t\tif(mod[i]==mod[j])\n\t\t\t{\n\t\t\t\t\n\n\t\t\t\tprintf(\"%I64d\\n\",i);\n\t\t\t\tout=1;\n\t\t\t}\n\t\t}\n\t//\tprintf(\"\\n\");\n\t}\n\tif(!out){\n\t\tprintf(\"-1\\n\");\n\t}\n}\nreturn 0;\n}"}
{"similarity_score": 0.927187708750835, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "61dbeba6a2d106a1214790ef4aeb3b1e", "bug_code_uid": "dddc22a02b2ad6a924490226ca980943", "src_uid": "a6cbf01d72d607ca95fe16df4fb16693", "apr_id": "1cca272c137aaa48e8939d7f68b9fb4c", "difficulty": 800, "tags": ["data structures", "implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid fill_l(int* arr){\n    for(int i=0;i<10;i++){\n        if(arr[i] == 0){\n            arr[i] == 1;\n            break;\n        }\n    }\n}\n\nvoid fill_r(int* arr){\n    for(int i=9;i>=0;i--){\n        if(arr[i] == 0){\n            arr[i] == 1;\n            break;\n        }\n    }\n}\n\nvoid empty_it(int* arr, char temp){\n    arr[temp - '0'] = 0;\n}\n\nint main(){\n    int arr[10] = {0};\n    int num;\n    scanf(\"%d\", &num);\n    for(int i=0;i<num;i++){\n        char temp;\n        scanf(\"%c\", temp);\n        if(temp == 'L'){\n            fill_l(arr);\n        }\n        else if(temp == 'R'){\n            fill_r(arr);\n        }\n        else{\n            empty_it(arr, temp);\n        }\n    }\n    \n    for(int i=0;i<10;i++){\n        printf(\"%c\", arr[i]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n \nvoid fill_l(int* arr){\n    for(int i=0;i<10;i++){\n        if(arr[i] == 0){\n            arr[i] = 1;\n            break;\n        }\n    }\n}\n \nvoid fill_r(int* arr){\n    for(int i=9;i>=0;i--){\n        if(arr[i] == 0){\n            arr[i] = 1;\n            break;\n        }\n    }\n}\n \nint main(){\n    int arr[10] = {0};\n    int num;\n    scanf(\"%d\", &num);\n    for(int i=0;i<=num;i++){\n        char temp;\n        scanf(\"%c\", &temp);\n        if(temp == 'L'){\n            fill_l(arr);\n        }\n        else if(temp == 'R'){\n            fill_r(arr);\n        }\n        else{\n            arr[temp - '0'] = 0;\n        }\n    }\n    \n    for(int i=0;i<10;i++){\n        printf(\"%c\", arr[i] + '0');\n    }\n    return 0;\n}"}
{"similarity_score": 0.9886792452830189, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ad33b7f1c5282bb63c2e3e1535678ee1", "bug_code_uid": "f9b447f6bebc771247d55e9fc48036c4", "src_uid": "4143caa25fcc2f4d400d169f9697be01", "apr_id": "f4e85690f8bdb02e05c0f6d2e6fcd939", "difficulty": 1700, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define BU 1000001\n#define SUM 1000000\n#define maxn 1000005\nint sign[maxn],print[maxn];\nmain()\n{\n     int n;\n     int i,j,k,x,maxx,num,t,s;\n     while(~scanf(\"%d\",&n))\n     {\n        memset(sign,0,sizeof(sign));\n        maxx=-1,num=t=0;\n        for(i=1;i<=n;i++)\n        {\n          scanf(\"%d\",&x);\n          sign[x]=1;\n          if(maxx<x) maxx=x;\n        }\n        for(i=1;i<=maxx;i++)\n         if(sign[i]==1&&sign[BU-i]==1) {num++;sign[BU-i]=2;}\n         else if(sign[i]==1&&sign[BU-i]==0) print[++t]=SUM-(i-1);\n        s=SUM-1;\n        //printf(\"%d\\n\",num);\n        for(i=1;i<=num;i++)\n        {\n          while(sign[s]||sign[SUM-1-s]) s--;\n          sign[s]=sign[SUM-1-s]=1;\n          print[++t]=s;\n          print[++t]=BU-s;\n        }\n        printf(\"%d\\n\",t);\n        for(i=1;i<=n;i++)\n        {\n         if(i!=1) printf(\" \");\n         printf(\"%d\",print[i]);\n        }\n        printf(\"\\n\");\n     }\n}\n", "fixed": "#include <stdio.h>\n#define BU 1000001\n#define SUM 1000000\n#define maxn 1000005\nint sign[maxn],print[maxn];\nmain()\n{\n     int n;\n     int i,j,k,x,maxx,num,t,s;\n     while(~scanf(\"%d\",&n))\n     {\n        memset(sign,0,sizeof(sign));\n        maxx=-1,num=t=0;\n        for(i=1;i<=n;i++)\n        {\n          scanf(\"%d\",&x);\n          sign[x]=1;\n          if(maxx<x) maxx=x;\n        }\n        for(i=1;i<=maxx;i++)\n         if(sign[i]==1&&sign[BU-i]==1) {num++;sign[BU-i]=2;}\n         else if(sign[i]==1&&sign[BU-i]==0) print[++t]=SUM-(i-1);\n        s=SUM-1;\n        //printf(\"%d\\n\",num);\n        for(i=1;i<=num;i++)\n        {\n          while(sign[s]||sign[SUM-s+1]) s--;\n          sign[s]=sign[SUM-s+1]=1;\n          print[++t]=s;\n          print[++t]=SUM-s+1;\n        }\n        printf(\"%d\\n\",t);\n        for(i=1;i<=n;i++)\n        {\n         if(i!=1) printf(\" \");\n         printf(\"%d\",print[i]);\n        }\n        printf(\"\\n\");\n     }\n}\n"}
{"similarity_score": 0.6484784889821616, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "2557895e797d7ed140dadab981761d28", "bug_code_uid": "3061b33200a2e8934c6d42a369dcf0fd", "src_uid": "bdce4761496c88a3de00aa863ba7308d", "apr_id": "a2a60092c1fca02d9d06d2933ac76d77", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  long long int n,h,a,b,k,count,i;\n  scanf(\"%lld %lld %lld %lld %lld\",&n,&h,&a,&b,&k);\n  for(i=0;i<k;i++)\n  {\n    long long int x,y,c,d;\n    scanf(\"%lld %lld %lld %lld\",&x,&y,&c,&d);\n   if((y>=a)&&(y<=b))\n      count=llabs(y-d)+llabs(x-c);\n    else if(y<a)\n    count=llabs(y-a)+llabs(x-c)+llabs(a-d);\n    else if(y>b)\n    count=(y-b)+llabs(x-c)+llabs(b-d);\n    printf(\"%lld\\n\",count);\n  }\n  return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n  long long int n,h,a,b,k,count,i;\n  scanf(\"%lld %lld %lld %lld %lld\",&n,&h,&a,&b,&k);\n  for(i=0;i<k;i++)\n  {\n    long long int x,y,c,d;\n    scanf(\"%lld %lld %lld %lld\",&x,&y,&c,&d);\n    if(x==c)\n    count=llabs(y-d);\n    else\n    {\n      if(y<a)\n      count=llabs(y-a)+llabs(x-c)+llabs(a-d);\n      else if(y>b)\n      count=(y-b)+llabs(x-c)+llabs(b-d);\n      else\n      count=llabs(y-d)+llabs(x-c);\n\n    }\n    printf(\"%lld\\n\",count);\n  }\n  return 0;\n}"}
{"similarity_score": 0.7412587412587412, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d0cb8b9d94a097884c808b3cd85458dc", "bug_code_uid": "68b7464eb401cb1c720cab785637b963", "src_uid": "75cc5b55c51217966cbdd639a68f0724", "apr_id": "e2860b9c72c86c5e3bacad6467c04a12", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void) {\n  int n, k, i;\n  \n  scanf(\"%d%d\", &n, &k);\n  if(k<1||k>=n) for(i=0; i<n; ++i) printf(\"%d \", i+1);\n  else {\n    for(i=0; i<k-1; ++i) printf(\"%d \", i+1);\n    printf(\"%d %d \", i+2, i+1);\n    for(i+=2; i<n; ++i) printf(\"%d \", i+1);\n  }\n  printf(\"\\n\");\n  \n  return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void) {\n  int n, k, i;\n  \n  scanf(\"%d%d\", &n, &k);\n  if(k<1) for(i=0; i<n; ++i) printf(\"%d \", i+1);\n  else {\n    for(i=0; i<n-k-1; ++i) printf(\"%d \", i+1);\n    for(i=n-1; i>=n-k-1; --i) printf(\"%d \", i+1);\n  }\n  printf(\"\\n\");\n  \n  return 0;\n}\n"}
{"similarity_score": 0.9526362823949955, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "00a1c17e5560650de5bed8037b099d6e", "bug_code_uid": "a988dfc529d748592e26487033b36780", "src_uid": "e95e2d21777c1d686bede1b0a5dacbf5", "apr_id": "eccfa36a40bbf3bd96bcaf8b8fd8f204", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        char s[51];\r\n        scanf(\"%s\",s);\r\n        int flag=0,len=strlen(s);\r\n        for(int i=1;i<len;i++){\r\n            if(s[i]!=s[i-1]){\r\n             if(s[i]!=s[i+1]){\r\n                 flag=0;\r\n                 break;\r\n             }}\r\n             else if(s[i]==s[i-1])\r\n             flag=1;\r\n        }\r\n        if(flag==1)\r\n        printf(\"YES\\n\");\r\n        else if(flag==0)\r\n        printf(\"NO\\n\");\r\n        \r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        char s[51];\r\n        scanf(\"%s\",s);\r\n        int flag=0,len=strlen(s);\r\n        for(int i=1;i<len;i++){\r\n            if(s[0]!=s[1])\r\n            break;\r\n            else if(s[i]!=s[i-1]){\r\n             if(s[i]!=s[i+1]){\r\n                 flag=0;\r\n                 break;\r\n             }}\r\n             else if(s[i]==s[i-1])\r\n             flag=1;\r\n        }\r\n        if(flag==1)\r\n        printf(\"YES\\n\");\r\n        else if(flag==0)\r\n        printf(\"NO\\n\");\r\n        \r\n    }\r\n}"}
{"similarity_score": 0.6071428571428571, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 8, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "7c100c34570d02d9414cd10e907f3633", "bug_code_uid": "027c07170c1ee86fd07d3c73c1b545a2", "src_uid": "fc75935b149cf9f4f2ddb9e2ac01d1c2", "apr_id": "ab99df1812e31de4fa32676e4e8e62da", "difficulty": 800, "tags": ["games", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int i,j,n,t,f;\r\n    \r\n    scanf(\"%d\",&t);\r\n    char output[t][10];\r\n    \r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        \r\n        for(j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        \r\n        f=0;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            if(a[j]<2)\r\n            {\r\n                if(j%2==0)\r\n                {\r\n                    strcpy(output[i],\"maomao90\");\r\n                }\r\n                else\r\n                {\r\n                    strcpy(output[i],\"errorgorn\");\r\n                }\r\n                f=1;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if(f==0)\r\n        {\r\n            if(n%2==0)\r\n            {\r\n                strcpy(output[i],\"maomao90\");\r\n            }\r\n            else\r\n            {\r\n                strcpy(output[i],\"errorgorn\");\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    for(i=0;i<t;i++)\r\n    {\r\n        printf(\"%s\\n\",output[i]);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int i,j,n,t,nom;\r\n    \r\n    scanf(\"%d\",&t);\r\n    char output[t][10];\r\n    \r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        \r\n        for(j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n        }\r\n        \r\n        nom=0;\r\n        for(j=0;j<n;j++)\r\n        {\r\n            if(a[j] > 1)\r\n                nom = nom + a[j] - 1;\r\n        }\r\n        \r\n        if(nom%2==0)\r\n        {\r\n            strcpy(output[i],\"maomao90\");\r\n        }\r\n        else\r\n        {\r\n            strcpy(output[i],\"errorgorn\");\r\n        }\r\n        \r\n    }\r\n    \r\n    for(i=0;i<t;i++)\r\n    {\r\n        printf(\"%s\\n\",output[i]);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.16883116883116883, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "3635f4950ccb497766a70e9192f35e08", "bug_code_uid": "51b87d3e973d60f4b8825f280945c69c", "src_uid": "e27620d3a43ab42edf930b37ce214c9e", "apr_id": "81f49a3711b3190f8d11c01767c1b001", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint flag[10000];\r\nint n=10;\r\nint countt=0;\r\nvoid pp(int r,int length, int *a){\r\n    if(r==0){\r\n        for(int i=0;i<length;i++){\r\n            printf(\"%d \",a[i]);\r\n        }\r\n        countt++;\r\n        printf(\"\\n\");\r\n        return ;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(flag[i]==0){\r\n            flag[i]=1;\r\n            a[length]=i;\r\n            pp(r-1,length+1,a);\r\n            flag[i]=0;\r\n        }\r\n    }\r\n\r\n}\r\nint main(){\r\n    int a[1000];\r\n    int r;\r\n    scanf(\"%d\",&r);\r\n    pp(r,0,a);\r\n    printf(\"%d\",countt);\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nchar b[100000];\r\nchar a[100000];\r\nint c[100000];\r\nvoid out(int length){\r\n    a[0]=1;\r\n    c[0]=a[0]+b[0];\r\n    for(int i=1;i<length;i++){\r\n        if(1+b[i]!=c[i-1]){\r\n            a[i]=1;\r\n            c[i]=1+b[i];\r\n        }else{\r\n            a[i]=0;\r\n            c[i]=b[i];\r\n        }\r\n    }\r\n    for(int i=0;i<length;i++){\r\n        printf(\"%d\",a[i]);\r\n    }\r\n    printf(\"\\n\");\r\n}\r\nint main(){\r\n    int m;\r\n    scanf(\"%d\",&m);\r\n    for(int i=0;i<m;i++){\r\n        int length;\r\n        scanf(\"%d\\n\",&length);\r\n        for(int j=0;j<length;j++){\r\n            scanf(\"%c\",&b[j]);\r\n        }\r\n        out(length);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8419023136246787, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7ff65cf40c5e213fd0a5951d361958e7", "bug_code_uid": "331913b9c41a84340621457e3ddc4d09", "src_uid": "4cf0fe49f7ebf058317ac848043031a5", "apr_id": "087162b29c30e097b5dd5e0640b0bc33", "difficulty": 1300, "tags": [], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint arr2[200000]={0};\nint arr3[200000];\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int arr[n];\n    int i;\n    for(i=0; i<n; ++i){\n        scanf(\"%d\", &arr[i]);\n    }\n    long long p=0;\n    for(i=0; i<n; ++i){\n        p+=arr[i];\n    }\n    for(i=0; i<n; ++i){\n        ++arr2[arr[i]-1];\n    }\n    int k=0;\n    int l=0;\n    for(i=0; i<n; ++i){\n        long long sum=p-arr[i];\n        if(sum%2==0){\n            sum/=2;\n            if(sum<=1000000 && arr2[sum-1]!=0 && sum!=arr[i]){\n                ++k;\n                arr3[l++]=i+1;\n            }\n        }\n    }\n    printf(\"%d\\n\", k);\n    for(i=0; i<l; ++i){\n        printf(\"%d \", arr3[i]);\n    }\n}", "fixed": "#include<stdio.h>\n\nint arr2[1000000]={0};\nint arr3[200000];\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int arr[n];\n    int i;\n    for(i=0; i<n; ++i){\n        scanf(\"%d\", &arr[i]);\n    }\n    long long p=0;\n    for(i=0; i<n; ++i){\n        p+=arr[i];\n    }\n    for(i=0; i<n; ++i){\n        ++arr2[arr[i]-1];\n    }\n    int k=0;\n    int l=0;\n    for(i=0; i<n; ++i){\n        long long sum=p-arr[i];\n        if(sum%2==0){\n            sum/=2;\n            if(sum<=1000000 && arr2[sum-1]!=0){\n                if(sum==arr[i]){\n                    if(arr2[sum-1]>1){\n                        ++k;\n                        arr3[l++]=i+1;\n                    }\n                }\n                else{\n                    ++k;\n                    arr3[l++]=i+1;\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", k);\n    for(i=0; i<l; ++i){\n        printf(\"%d \", arr3[i]);\n    }\n}"}
{"similarity_score": 0.6217228464419475, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "59212636e14a781c4b816b4d715727aa", "bug_code_uid": "f3632f39eb46945f163d0e5ba682a38f", "src_uid": "2545b6af730f99193041a8810b728cb3", "apr_id": "86cd9f3b4c6564e5492214403e034af8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[2*n],k,z=0;\n\tfor (int i = 0; i < n*2; ++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tscanf(\"%d\",&k);\n\tfor (int i = 0; i < 2*n; ++i)\n\t{\n\t\tif(a[i]>=k)\n\t\t{\n\t\t\tz=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",((2*n-z)/2)+1 );\n\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],b[n],k,z=0;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%d %d\",&a[i],&b[i]);\n\t}\n\tscanf(\"%d\",&k);\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif(a[i]<=k && b[i]>=k)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\t++z;\n\t}\n\tprintf(\"%d\\n\",n-z );\n\n}"}
{"similarity_score": 0.7366959740860712, "equal_cnt": 18, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "ddb274367f5952cf035065d1e7f0cb2c", "bug_code_uid": "bc27af179eda60841ca7d49fab2e1f33", "src_uid": "4296da660a39a6e98b41387929701c0a", "apr_id": "1f0c2c3f25132248273cfa91ec46953e", "difficulty": 800, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint T;\r\n\tscanf(\"%d\", &T);\r\n\tfor (int a = 0; a < T; a++) {\r\n\t\tint n, N, a[51] = { 0 }, b[51] = { 0 };\r\n\t\tscanf(\"%d\", &n);\r\n\t\tN = 2 * n;\r\n\t\tfor (int i = 0; i < N; i++) { scanf(\"%d\", &a[i]); b[i] = a[i]; }\r\n\t\t\r\n\t\tfor (int i = 0; i < N; i++) {\r\n\t\t\tif (i < N - 2) {\r\n\t\t\t\tif (b[i + 1] == (b[i] + b[i + 2]) / 2) {\r\n\t\t\t\t\tint tmp = b[i + 1];\r\n\t\t\t\t\tb[i + 1] = b[i + 2];\r\n\t\t\t\t\tb[i + 2] = tmp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(i == N - 2){\r\n\t\t\t\tif (b[i + 1] == (b[i] + b[0]) / 2) {\r\n\t\t\t\t\tint tmp = b[i + 1];\r\n\t\t\t\t\tb[i + 1] = b[0];\r\n\t\t\t\t\tb[0] = tmp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (b[0] == (b[i] + b[1]) / 2) {\r\n\t\t\t\t\tint tmp = b[0];\r\n\t\t\t\t\tb[0] = b[1];\r\n\t\t\t\t\tb[1] = tmp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t//for (int i = 0; i < N; i++)printf(\"%d \", b[i]);\r\n\t\t//printf(\"\\n--------------------------\\n\");\r\n\t\t}\r\n\t\tfor (int i = 0; i < N; i++)printf(\"%d \", b[i]);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint T;\r\n\tscanf(\"%d\", &T);\r\n\tfor (int a = 0; a < T; a++) {\r\n\t\tint n, N, a[51] = { 0 }, b[51] = { 0 };\r\n\t\tscanf(\"%d\", &n);\r\n\t\tN = 2 * n;\r\n\t\tfor (int i = 0; i < N; i++) { scanf(\"%d\", &a[i]); b[i] = a[i]; }\r\n\t\t\r\n\t\twhile (1) {\r\n\t\t\tfor (int i = 0; i < N; i++) {\r\n\t\t\t\tif (i < N - 2) {\r\n\t\t\t\t\tif (b[i + 1] == (b[i] + b[i + 2]) / 2) {\r\n\t\t\t\t\t\tint tmp = b[i + 1];\r\n\t\t\t\t\t\tb[i + 1] = b[i + 2];\r\n\t\t\t\t\t\tb[i + 2] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (i == N - 2) {\r\n\t\t\t\t\tif (b[i + 1] == (b[i] + b[0]) / 2) {\r\n\t\t\t\t\t\tint tmp = b[i + 1];\r\n\t\t\t\t\t\tb[i + 1] = b[0];\r\n\t\t\t\t\t\tb[0] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (b[0] == (b[i] + b[1]) / 2) {\r\n\t\t\t\t\t\tint tmp = b[0];\r\n\t\t\t\t\t\tb[0] = b[1];\r\n\t\t\t\t\t\tb[1] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//for (int i = 0; i < N; i++)printf(\"%d \", b[i]);\r\n\t\t\t\t//printf(\"\\n--------------------------\\n\");\r\n\t\t\t}\r\n\t\t\tint satis = 1;\r\n\t\t\tfor (int i = 0; i < N; i++) {\r\n\t\t\t\tif (i < N - 2) {\r\n\t\t\t\t\tif (b[i + 1] == (b[i] + b[i + 2]) / 2) { satis = 0; break; }\r\n\t\t\t\t}\r\n\t\t\t\telse if (i == N - 2) {\r\n\t\t\t\t\tif (b[i + 1] == (b[i] + b[0]) / 2) { satis = 0; break; }\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (b[0] == (b[i] + b[1]) / 2) { satis = 0; break; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (satis)break;\r\n\t\t}\r\n\t\tfor (int i = 0; i < N; i++)printf(\"%d \", b[i]);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}"}
{"similarity_score": 0.31897341888175984, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "d6434047ef576ebaec5190dc982655fb", "bug_code_uid": "d263b015d0a234613a2731a7270cb9b0", "src_uid": "a6b6d9ff2ac5c367c00a64a387cc9e36", "apr_id": "a1738f76559916a21d61d6186750ec01", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\\n\", &t);\r\n    long int a[100000000];\r\n    long int n;\r\n    long int m=0;\r\n    long int c=0, ans=0;\r\n    for(int j=t;j>0;j--)\r\n    {\r\n        scanf(\"%ld\\n\", &n);\r\n        if(n>m)\r\n        {\r\n            for(long int i=m; i<n;i++)\r\n            {\r\n                if((((i+1)%2)==0)&&(((i+1)%3)==0))\r\n                c+=5;\r\n                else if((((i+1)%2)==0)&&(((i+1)%3)!=0))\r\n                c+=3;\r\n                else if((((i+1)%2)!=0)&&(((i+1)%3)==0))\r\n                c+=3;\r\n                else\r\n                {\r\n                    c+=1;\r\n                }                    \r\n                a[i]=c;\r\n            }\r\n            m=n;\r\n            printf(\"%ld\\n\", c);\r\n        }\r\n        else\r\n        {\r\n            ans =a[n-1];\r\n            printf(\"%ld\\n\", ans);\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        long int n;\r\n        scanf(\"%ld\", &n);\r\n        n+=2*((n/2)+(n/3));\r\n        printf(\"%ld\\n\", n);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.6331096196868009, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "08a68319bcdba838dbd68b0cae50c56a", "bug_code_uid": "67e52d60241d6d967515933242c045ce", "src_uid": "43a65d1cfe59931991b6aefae1ecd10e", "apr_id": "af90b10af5e2f09da75e15b053b7180c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,p=0,i=0,q,r,j;\n    scanf(\"%d\",&n);\n    char s[n+1];\n    scanf(\"%s\",&s);\n    while(s[i]!=0)\n    {\n        q=s[i];\n        if(q%2==0)\n        {\n            p=p+1;\n        }\n        j=i+1;\n        while(s[j]!=0)\n        {\n            r=s[j];\n            if(r%2==0)\n            {\n                p=p+1;\n            }\n            j=j+1;\n        }\n       i=i+1;\n    }\n    printf(\"%d\",p);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,p,i=0,q=0,r,j,t=0,num=0;\n    scanf(\"%d\",&n);\n    char s[n+1];\n    scanf(\"%s\",&s);\n    while(s[i]!=0)\n    {\n        p=s[i];\n        if(p%2==0)\n        {\n            q=i;\n        }\n        i=i+1;\n    }\n    j=q;\n    while(j>=0)\n    {\n        r=s[j];\n        if(r%2==0)\n        {\n            num=num+1;\n            t=t+num;\n        }\n        else\n        {\n            t=t+num;\n        }\n        j=j-1;\n    }\n    printf(\"%d\",t);\n\n}\n"}
{"similarity_score": 0.976303317535545, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "494a3fc861e8023c5b85848fe05e023a", "bug_code_uid": "1bcac8d4f4f9222a133dbb98e4d359fb", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "7c2a0931ceeec4e7d315f615c70ab5a3", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "int main() {\n    int i,j,n;\n    scanf(\"%d\\n\",&n);\n    int *counter=(int*) malloc(n*sizeof(int));\n    for(i=0;i<n;i++)\n        counter[i]=0;\n    char usernames[n][35],database[n][35];\n    printf(\"OK\\n\");\n    for(i=0;i<n;i++) {\n        strcpy(database[i],gets(usernames[i]));\n        for(j=0;j<i;j++)\n            if(strcmp(database[j],database[i])==0) {\n                printf(\"%s%d\\n\",database[j],++counter[j]);\n                break;\n            }\n            else if(j==i-1)\n                printf(\"OK\\n\");\n    }\n}", "fixed": "int main() {\n    int i,j,n;\n    scanf(\"%d\\n\",&n);\n    int *counter=(int*) malloc(n*sizeof(int));\n    for(i=0;i<n;i++)\n        counter[i]=0;\n    char usernames[n][35],database[n][35];\n    printf(\"OK\\n\");\n    for(i=0;i<n;i++) {\n        strcpy(database[i],gets(usernames[i]));\n        for(j=0;j<i;j++)\n            if(strcmp(database[j],database[i])==0) {\n                printf(\"%s%d\\n\",database[j],++counter[j]);\n                i--,n--;\n                break;\n            }\n            else if(j==i-1)\n                printf(\"OK\\n\");\n    }\n}"}
{"similarity_score": 0.9971428571428571, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c64f4b0375778f8ab51b86d43f5f806c", "bug_code_uid": "f0e919f8fec241700b2a64a5cc0f73ea", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "ae7c394f5f4741d8a69feb87b3828ba7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{long int n;\n    int i,e,g,m,h,sum,thom=1;\n    scanf(\"%ld\",&n);\n    scanf(\"%d%d%d%d\",&e,&g,&m,&h);\n         sum=e+g+m+h;\n        for(i=0;i<n;i++)\n          {\n              scanf(\"%d%d%d%d\",&e,&g,&m,&h);\n               if(e+g+m+h>sum)\n                      thom++;\n                 }\n                 printf(\"%d\",thom);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{long int n;\n    int i,e,g,m,h,sum,thom=1;\n    scanf(\"%ld\",&n);\n    scanf(\"%d%d%d%d\",&e,&g,&m,&h);\n         sum=e+g+m+h;\n        for(i=1;i<n;i++)\n          {\n              scanf(\"%d%d%d%d\",&e,&g,&m,&h);\n               if(e+g+m+h>sum)\n                      thom++;\n                 }\n                 printf(\"%d\",thom);\n}\n"}
{"similarity_score": 0.5447761194029851, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "8c4b8897e0fe301c3c52cb856cbc43be", "bug_code_uid": "6f5eb0b822c4e6c1da74260e5ec123aa", "src_uid": "28c555fefd5c36697a5082c61d8a82b3", "apr_id": "99a59d2dbc0efc629a17d9c9b9c606bb", "difficulty": 900, "tags": ["implementation", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main(){\n\tint n;\n\tint a[300000];\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n-1;i++){\n\t\tfor(int j=i;j<n;j++){\n\t\t\tif(a[i]>a[j]){\n\t\t\t    int temp;\n\t\t\t\ttemp=a[i];\n\t\t\t\ta[i]=a[j];\n\t\t\t\ta[j]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tint sum=0;\n\tfor(int i=0;i<n/2;i++){\n\t\tsum+=pow(a[i]+a[n-1-i],2);\n\t}\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint cmp(const void *b,const void *c) {\n\treturn(*(int *)c-*(int *)b);  //\u02b5\ufffd\u05b5\ufffd\ufffd\u01fd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n}\nint main() {\n\tint n;\n\tint a[300000];\n\tscanf(\"%d\",&n);\n\tfor(int i=0; i<n; i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint i,j,temp;\n\tqsort(a,n,sizeof(a[0]),cmp);\n\tlong long sum=0;\n\tfor(int i=0; i<n/2; i++) {\n\t\tsum+=pow(a[i]+a[n-1-i],2);\n\t}\n\tprintf(\"%I64d\\n\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.884393063583815, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f4aa724a6dded78b09ef9a33fe4225c6", "bug_code_uid": "6d127afdace5047d1440a3aecbebb844", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "3b49f3a2ba87272e5a94fbeddbdcc931", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,x,y;\n    scanf(\"%d\", &n);\n    if(n%2==0) printf(\"%d %d\", n/2, n/2);\n    else\n        {\n       printf(\"9 %d\\n\", n-9);\n        }\n\n        return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,x,y;\n    scanf(\"%d\", &n);\n    if(n%2==0) printf(\"8 %d\", n-8);\n    else printf(\"9 %d\\n\", n-9);\n\n        return 0;\n}\n"}
{"similarity_score": 0.5361990950226244, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "92ed130a29693dd6535ca7e6b0048f27", "bug_code_uid": "ae95516b505dec17350416aaf5faf9a6", "src_uid": "113ae625e67c8ea5ab07be44c3b58a8f", "apr_id": "3cdf62c8ee05f55a5c4c152bd6c8608d", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar s1[1000005],s2[1000005];\n\nint main()\n{\n\tscanf(\"%s %s\",s1,s2);\n\tint o1=0,o2=0,z1=0,z2=0;\n\tif(strlen(s1) != strlen(s2))\n\t{\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tint i;\n\tfor(i=0;s1[i] != '\\0';i++)\n\t{\n\t\tif(s1[i] == '0')\n\t\t\tz1++;\n\t\telse\n\t\t\to1++;\n\t\tif(s2[i] == '0')\n\t\t\tz2++;\n\t\telse\n\t\t\to2++;\n\t}\n\n\tif(o2 > o1)\n\t\tprintf(\"NO\\n\");\n\telse\n\t\tprintf(\"YES\\n\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar s1[1000005],s2[1000005];\n\nint main()\n{\n\tscanf(\"%s %s\",s1,s2);\n\tint o1=0,o2=0,z1=0,z2=0;\n\tif(strlen(s1) != strlen(s2))\n\t{\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tif(strcmp(s1,s2)==0)\n\t{\n\t\tprintf(\"YES\\n\");\n\t\treturn 0;\n\t}\n\tint i;\n\tfor(i=0;s1[i] != '\\0';i++)\n\t{\n\t\tif(s1[i] == '0')\n\t\t\tz1++;\n\t\telse\n\t\t\to1++;\n\t\tif(s2[i] == '0')\n\t\t\tz2++;\n\t\telse\n\t\t\to2++;\n\t}\n\n\tif(z2 == strlen(s1) || z1 == strlen(s2))\n\t\tprintf(\"NO\\n\");\n\telse\n\t\tprintf(\"YES\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9051851851851852, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "644ae79b3987d7b1dcb68605208bc7c6", "bug_code_uid": "9610536622590bde90d9d76b08586a62", "src_uid": "91c3af92731cd7d406674598c0dcbbbc", "apr_id": "257746468d6a3fa5b5679bdeca9e32d9", "difficulty": 1900, "tags": ["dp", "greedy", "constructive algorithms", "sortings", "data structures", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar a[1000006];\nint posOpen[1000006];\nint dp[1000005];\n\nint val(char x)\n{\n\tif (x == '(') {\n\t\treturn 1;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nint main()\n{\n\tscanf(\"%s\", a);\n\tint n = strlen(a);\n\tint c = 0;\n\tint max = 0;\n\tint maxC = 1;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] == '(') {\n\t\t\tposOpen[c++] = i;\n\t\t} else {\n\t\t\tif (c == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tc--;\n\t\t\tint ans = i-posOpen[c]+1;\n\t\t\tif (posOpen[c] > 0) {\n\t\t\t\tans += dp[posOpen[c]-1];\n\t\t\t}\n\t\t\tdp[i] = ans;\n\t\t\tif (dp[i] > max) {\n\t\t\t\tmax = dp[i];\n\t\t\t\tmaxC = 1;\n\t\t\t} else if (dp[i] == max) {\n\t\t\t\tmaxC++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\", max, maxC);\n\n\treturn 0;\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar a[1000006];\nint posOpen[1000006];\nint dp[1000005];\n\nint val(char x)\n{\n\tif (x == '(')\n        {\n\t\treturn 1;\n\t    }\n\telse\n\t{\n\t\treturn -1;\n\t}\n}\n\nint main()\n{\n\tscanf(\"%s\", a);\n\tint n = strlen(a);\n\tint c = 0;\n\tint max = 0;\n\tint maxC = 1;\n\tfor (int i = 0; i < n; i++)\n        {\n\t\tif (a[i] == '(')\n        {\n\t\t\tposOpen[c++] = i;\n\t\t}\n    else\n        {\n\t\t\tif (c == 0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tc--;\n\t\t\tint ans = i-posOpen[c]+1;\n\t\t\tif (posOpen[c] > 0)\n\t\t\t{\n\t\t\t\tans += dp[posOpen[c]-1];\n\t\t\t}\n\t\t\tdp[i] = ans;\n\t\t\tif (dp[i] > max)\n\t\t\t{\n\t\t\t\tmax = dp[i];\n\t\t\t\tmaxC = 1;\n\t\t\t}\n    else if (dp[i] == max)\n            {\n\t\t\t\tmaxC++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\", max, maxC);\n}\n\n"}
{"similarity_score": 0.9101876675603218, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "9b247d23979f9693161008281071e470", "bug_code_uid": "df4115467be55473e39f383926dcd491", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "d2a5869c89ef077f6a7f80095dca0dea", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// In The Name of Allah\n\n#include <stdlib.h>\n#include <stdio.h>\n\n#define LEN 10009\n\nint n, s, i, x_i, y_i, d[ LEN ], max_x;\n\nint main()\n{\n\tscanf( \"%d %d\", &s, &n );\n\n\tfor ( i = 0; i < LEN; ++i )\n\t{\n\t\td[ i ] = 0;\n\t}\n\n\tmax_x = -1;\n\n\tfor ( ; n >= 1; n-- )\n\t{\n\t\tscanf( \"%d %d\", &x_i, &y_i );\n\n\t\tif ( s > x_i )\n\t\t{\n\t\t\ts += y_i;\n\n\t\t\tfor ( i = s - 1; i >= 0; i-- )\n\t\t\t{\n\n\t\t\t\tif ( d[ i ] == 0 )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( i == max_x )\n\t\t\t\t{\n\t\t\t\t\tmax_x = -1;\n\t\t\t\t}\n\n\t\t\t\ts += d[ i ];\n\t\t\t\td[ i ] = 0;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\td[ x_i ] += y_i;\n\n\t\tif ( x_i > max_x )\n\t\t{\n\t\t\tmax_x = x_i;\n\t\t}\n\n\t}\n\n\tif ( max_x == -1 )\n\t{\n\t\tprintf( \"YES\\n\" );\n\t}\n\telse\n\t{\n\t\tprintf( \"NO\\n\" );\n\t}\n\n\treturn EXIT_SUCCESS;\n}\n\n", "fixed": "// In The Name of Allah\n\n#include <stdlib.h>\n#include <stdio.h>\n\n#define LEN 10009\n\nlong long n, s, i, x_i, y_i, d[ LEN ], max_x;\n\nint main()\n{\n\tscanf( \"%I64d %I64d\", &s, &n );\n\n\tfor ( i = 0; i < LEN; ++i )\n\t{\n\t\td[ i ] = -1;\n\t}\n\n\tmax_x = -1;\n\n\tfor ( ; n >= 1; n-- )\n\t{\n\t\tscanf( \"%I64d %I64d\", &x_i, &y_i );\n\n\t\tif ( s > x_i )\n\t\t{\n\t\t\ts += y_i;\n\n\t\t\tfor ( i = 0; i < s && i < LEN; ++i )\n\t\t\t{\n\n\t\t\t\tif ( d[ i ] == -1 )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( i == max_x )\n\t\t\t\t{\n\t\t\t\t\tmax_x = -1;\n\t\t\t\t}\n\n\t\t\t\ts += d[ i ];\n\t\t\t\td[ i ] = -1;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( d[ x_i ] == -1 )\n\t\t{\n\t\t\td[ x_i ] = y_i;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td[ x_i ] += y_i;\n\t\t}\n\n\t\tif ( x_i > max_x )\n\t\t{\n\t\t\tmax_x = x_i;\n\t\t}\n\n\t}\n\n\tif ( max_x == -1 )\n\t{\n\t\tprintf( \"YES\\n\" );\n\t}\n\telse\n\t{\n\t\tprintf( \"NO\\n\" );\n\t}\n\n\treturn EXIT_SUCCESS;\n}\n\n"}
{"similarity_score": 0.991652754590985, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e06174577420339b421fc77b98f88d8b", "bug_code_uid": "b15173c47607712adffaa84edca749a3", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "86b60285d706302664542c7000b6e9cb", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <strint.h>\n#define MAX 100001\nint main()\n{\n\tchar a[MAX], b[MAX];\n\tint aN, bN;\n\tscanf(\"%s %s\", a, b);\n\taN = strlen(a);\n\tbN = strlen(b);\n\tif (aN != bN)\n\t{\n\t\tprintf(\"%d\\n\", aN>bN ?aN : bN);\n\t}\n\telse \n\t\tif (strcmp(a, b)) printf(\"%d\", aN);\n\t\telse printf(\"-1\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define MAX 100001\nint main()\n{\n\tchar a[MAX], b[MAX];\n\tint aN, bN;\n\tscanf(\"%s %s\", a, b);\n\taN = strlen(a);\n\tbN = strlen(b);\n\tif (aN != bN)\n\t{\n\t\tprintf(\"%d\\n\", aN>bN ?aN : bN);\n\t}\n\telse \n\t\tif (strcmp(a, b)) printf(\"%d\\n\", aN);\n\t\telse printf(\"-1\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.8590878148400273, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "caacdecf79b95dcbf417b71a7279614d", "bug_code_uid": "bdacd2eb680bfe2f80a4e847019feb2a", "src_uid": "d638f524fe07cb8e822b5c6ec3fe8216", "apr_id": "6a86755cfaa152090efbd37339699991", "difficulty": 900, "tags": ["brute force", "greedy", "math", "number theory", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint GCD (int a,int b){\r\n\r\nif(b==a) return a;\r\n\r\nif(a>b){\r\n    a=a-b;\r\n    b=a+b;\r\n    a=b-a;\r\n}\r\n\r\nelse return GCD(a,b%a);\r\n\r\n}\r\n\r\nint main(){\r\n\r\nint t,i,n,j,k,x,y,ans;\r\nscanf(\"%d\", &t);\r\n\r\nfor(i=0;i<t;i++){\r\n    scanf(\"%d\", &n);\r\n    int a[n],b[n];\r\n    ans=0;\r\n    x=0;\r\n    y=n-1;\r\n    for(j=0;j<n;j++){\r\n        scanf(\"%d\", &a[j]);\r\n        if(a[j]%2==0){\r\n            b[x] = a[j];\r\n            x++;\r\n        }\r\n        else{\r\n            b[y] = a[j];\r\n            y--;\r\n        }\r\n    }\r\n    for(j=x;j<n-1;j++){\r\n        for(k=j+1;k<n;k++){\r\n            if(GCD(b[j],b[k])>1) ans++;\r\n        }\r\n    }\r\n    ans += x*(2*n-x-1)/2;\r\n\r\n    printf(\"\\n%d\\n\", ans);\r\n}\r\n\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint GCD (int a,int b){\r\n\r\nint temp;\r\nwhile(a>0 && b>0){\r\n    if(a>b){\r\n        temp = a;\r\n        a = b;\r\n        b = temp;\r\n    }\r\n    b = b%a;\r\n}\r\n\r\nif(b==0) return a;\r\nelse return b;\r\n}\r\n\r\nint main(){\r\n\r\nint t,i,n,j,k,x,y,ans;\r\nscanf(\"%d\", &t);\r\n\r\nfor(i=0;i<t;i++){\r\n    scanf(\"%d\", &n);\r\n    int a[n],b[n];\r\n    ans=0;\r\n    x=0;\r\n    y=n-1;\r\n    for(j=0;j<n;j++){\r\n        scanf(\"%d\", &a[j]);\r\n        if(a[j]%2==0){\r\n            b[x] = a[j];\r\n            x++;\r\n        }\r\n        else{\r\n            b[y] = a[j];\r\n            y--;\r\n        }\r\n    }\r\n    for(j=x;j<n-1;j++){\r\n        for(k=j+1;k<n;k++){\r\n            if(GCD(b[j],b[k])>1) ans++;\r\n        }\r\n    }\r\n    ans += x*(2*n-x-1)/2;\r\n\r\n    printf(\"\\n%d\\n\", ans);\r\n}\r\n\r\nreturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.6080892608089261, "equal_cnt": 4, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e8c1e33ddbf55b36178728288fbf887a", "bug_code_uid": "5a6cd408e010ad26445caa89e820c9de", "src_uid": "b46244f39e30c0cfab592a97105c60f4", "apr_id": "0e8094b1b63ac2cc1a7d9ca526086a55", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid solve();\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0; i<t; i++)\n    {\n        solve();\n    }\n}\nvoid solve()\n{\n    int n,max=1,flag;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n/2;i++){\n       flag++;\n       for(int j=1;j<=n;j++){\n        if(j%i==0){\n            flag++;\n        }\n       }\n    if(flag>=2){\n        if(max<i){\n            max=i;\n        }\n     }\n    }\n    printf(\"%d\\n\",max);\n}\n", "fixed": "#include<stdio.h>\nvoid solve();\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0; i<t; i++)\n    {\n        solve();\n    }\n}\nvoid solve()\n{\n    int n,max=1,flag;\n    scanf(\"%d\",&n);\n    if(n%2==0){\n        printf(\"%d\\n\",(n/2));\n    }\n    else{\n    printf(\"%d\\n\",(n-1)/2);\n    }\n}\n"}
{"similarity_score": 0.9337748344370861, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d965b697174f7a635f063ec41d45615e", "bug_code_uid": "61c9725c5f86b4de55b264f50f00ac98", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "05b80256ca4d3d18388707efddcee3ba", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n    long long int n;\n    scanf(\"%d\", &n);\n    char s[n];\n    scanf(\"%s\", s);\n    unsigned long long int p = 2;\n    long long int count = 0;\n    long long int i = 0;\n    while (i < strlen(s) - 1)\n    {\n        if (s[i] == s[i + 1] && i%2==0)\n        {\n            s[i] = 195 - s[i];\n            count++;\n\n        }\n        i++;\n    }\n    printf(\"%d\\n\", count);\n    printf(\"%s\", s);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n    long long int n;\n    scanf(\"%d\", &n);\n    char s[n];\n    scanf(\"%s\", s);\n    long long int count = 0;\n    long long int i = 0,len=strlen(s);\n    while (i < len - 1)\n    {\n        if (s[i] == s[i + 1] && i%2==0)\n        {\n            s[i] = 195 - s[i];\n            count++;\n\n        }\n        i++;\n    }\n    printf(\"%d\\n\", count);\n    printf(\"%s\", s);\n    return 0;\n}"}
{"similarity_score": 0.8583916083916084, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e535a422c3a7fb11a7ebfe0886f3c91f", "bug_code_uid": "5f6727853870af385b2932eaa8aeb6f3", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "de4dadaf24ef1d7f8a62e1ff4c99095c", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint count[10001];\nlong long dp[10001];\nlong long max1(long long a,long long b){\n\tif(a>b)\n\treturn a;\n\treturn b;\n}\nint main(void) {\n\tint min=20000, max=-1, n, i, temp;\n\tmemset(count,0,sizeof(count));\n\tmemset(dp,0,sizeof(dp));\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&temp);\n\t\tcount[temp]++;\n\t\tif(temp<min)\n\t\tmin=temp;\n\t\tif(temp>max)\n\t\tmax=temp;\n\t}\n\tdp[0]=0;\n\tdp[1]=count[1];\n\tfor(i=2;i<=max;i++){\n\t\tdp[i] = max1(dp[i-1],dp[i-2]+count[i]*i);\n\t}\n\tprintf(\"%lld\\n\",dp[max]);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nlong long count[100001];\nlong long dp[100001];\nlong long max1(long long a,long long b){\n\tif(a>b)\n\treturn a;\n\treturn b;\n}\nint main(void) {\n\tlong long max = -1;\n\tint min=20000, n, i, temp;\n\tmemset(count,0,sizeof(count));\n\tmemset(dp,0,sizeof(dp));\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&temp);\n\t\tcount[temp]++;\n\t\tif(temp<min)\n\t\tmin=temp;\n\t\tif(temp>max)\n\t\tmax=temp;\n\t}\n\tif(count[max]==n){\n\t\tprintf(\"%lld\\n\",n*max);\n\t\treturn 0;\n\t}\n\tdp[0]=0;\n\tdp[1]=count[1];\n\tfor(i=2;i<=max;i++){\n\t\tdp[i] = max1(dp[i-1],dp[i-2]+count[i]*i);\n\t}\n\tprintf(\"%lld\\n\",dp[max]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.3251576734407849, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "0d02e96f0a8bc0baa933bb6d696ac143", "bug_code_uid": "dd1742c2a09a6da6ba24debb40109020", "src_uid": "31d803d886c47fe681bdcfbe6c74f090", "apr_id": "bdf877022912b1436d350456012509a0", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(void)\n{\n\tchar inp[200000];\n\tscanf(\"%s\", inp);\n\tint len = strlen(inp), i, change = 1, count;\n\twhile(change != 0)\n\t{\n\t\tchange = 0;\n\t\ti = 0;\n\t\tcount = 0;\n\t\twhile(i < len - 3)\n\t\t{\n\t\t\tif(inp[i] == inp[i + 1] && inp[i] == inp[i + 2])\n\t\t\t{\n\t\t\t\tinp[i] = '*';\n\t\t\t\tchange++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(inp[i] == inp[i + 1] && inp[i + 2] == inp[i + 3])\n\t\t\t{\n\t\t\t\tinp[i + 2] = '*';\n\t\t\t\tchange++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tfor(i = 0; i < len; i++)\n\t\t{\n\t\t\tif(inp[i] != '*')\n\t\t\t{\n\t\t\t\tinp[count] = inp[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tlen = count;\n\t}\n\tif(inp[len - 1] == inp[len - 2] && inp[len - 1] == inp[len - 3])\n\t{\n\t\tlen--;\n\t}\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tprintf(\"%c\", inp[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(void)\n{\n\tchar inp[200000];\n\tscanf(\"%s\", inp);\n\tint len = strlen(inp), i, count = 0;\n\twhile(i < len - 2)\n\t{\n\t\tif(inp[i] == inp[i + 1] && inp[i] == inp[i + 2])\n\t\t{\n\t\t\tinp[i] = '*';\n\t\t\tcount++;\n\t\t}\n\t\ti++;\n\t}\n\tchar temp[len - count];\n\tcount = 0;\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tif(inp[i] != '*')\n\t\t{\n\t\t\ttemp[count] = inp[i];\n\t\t\tcount++;\n\t\t}\n\t}\n\ti = 0;\n\twhile(i < count - 3)\n\t{\n\t\tif(temp[i] == temp[i + 1] && temp[i + 2] == temp[i + 3])\n\t\t{\n\t\t\ttemp[i + 3] = '*';\n\t\t\ti = i + 4;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\tfor(i = 0; i < count; i++)\n\t{\n\t\tif(temp[i] != '*')\n\t\t{\n\t\t\tprintf(\"%c\", temp[i]);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.981284774911482, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "7f2ac538bea34ff2fb9620e3f904fd64", "bug_code_uid": "1c13980460c1a9ed897d3f873c525504", "src_uid": "bf573af345509b2364ada6e613b6f998", "apr_id": "fefeff633641ae82e3aef3a0c41e3541", "difficulty": 1100, "tags": ["implementation", "sortings", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint ArraySum(int array[], int cnt)\n{\n    int ans = 0, i, a = 0;\n    for(i = 1; a < cnt; i++)\n        if(array[i] != -1){\n            ans += array[i];\n            a++;\n        }\n\n    return ans;\n}\n\n\nmain()\n{\n    int n, i, pos, num, ans;\n    int left[101], right[101];\n\n    for(i = 1; i < 101; i++){\n        left[i] = -1;\n        right[i] = -1;\n    }\n\n    left[0] = 0;\n    right[0] = 0;\n\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++){\n\n        scanf(\"%d %d\", &pos, &num);\n\n        if(pos < 0){\n            left[0]++;\n            left[pos*(-1)] = num;\n        }\n\n        else{\n            right[0]++;\n            right[pos] = num;\n        }\n    }\n\n    if(right[0] == left[0])\n        ans = ArraySum(left, left[0]) + ArraySum(right, right[0]);\n    else if (left[0] > right[0])\n        ans = ArraySum(left, right[0]+1) + ArraySum(right, right[0]);\n    else\n        ans = ArraySum(left, left[0]) + ArraySum(right, left[0]+1);\n\n    printf(\"%d\", ans);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint ArraySum(int array[], int cnt)\n{\n    int ans = 0, i, a = 0;\n    for(i = 1; a < cnt; i++)\n        if(array[i] != -1){\n            ans += array[i];\n            a++;\n        }\n\n    return ans;\n}\n\n\nmain()\n{\n    int n, i, pos, num, ans;\n    int left[100005], right[100005];\n\n    for(i = 1; i < 100005; i++){\n        left[i] = -1;\n        right[i] = -1;\n    }\n\n    left[0] = 0;\n    right[0] = 0;\n\n    scanf(\"%d\", &n);\n\n    for(i = 0; i < n; i++){\n\n        scanf(\"%d %d\", &pos, &num);\n\n        if(pos < 0){\n            left[0]++;\n            left[pos*(-1)] = num;\n        }\n\n        else{\n            right[0]++;\n            right[pos] = num;\n        }\n    }\n\n    if(right[0] == left[0])\n        ans = ArraySum(left, left[0]) + ArraySum(right, right[0]);\n    else if (left[0] > right[0])\n        ans = ArraySum(left, right[0]+1) + ArraySum(right, right[0]);\n    else\n        ans = ArraySum(left, left[0]) + ArraySum(right, left[0]+1);\n\n    printf(\"%d\", ans);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9715215622457283, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0053d062ef94056ccd3ac1dea68a091f", "bug_code_uid": "15c49584e9162c2030318d21c4882bcf", "src_uid": "cf3cfcae029a6997ee62701eda959a60", "apr_id": "c0ae6a5806d12eec20762796a4e1e7b7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n   int test_cases,minimum_number,maximum_number,arr_length,number;\n   scanf(\"%d\",&test_cases);\n   while(test_cases){\n       minimum_number=999999999;\n       maximum_number=-999999999;\n       scanf(\"%d\",&arr_length);\n       for(int i=0;i<arr_length;i++){\n           scanf(\"%d\",&number);\n           if(number >= maximum_number){\n               maximum_number = number;\n           }\n           if(number <= minimum_number){\n               minimum_number = number;\n           }\n       }\n       printf(\"%d\\n\",maximum_number - minimum_number);\n       test_cases--;\n   }\n}", "fixed": "#include <stdio.h>\nint main() {\n   long long int test_cases,minimum_number,maximum_number,arr_length,number;\n   scanf(\"%lld\",&test_cases);\n   while(test_cases){\n       minimum_number=999999999999999999;\n       maximum_number=-99999999999999999;\n       scanf(\"%lld\",&arr_length);\n       for(int i=0;i<arr_length;i++){\n           scanf(\"%lld\",&number);\n           if(number >= maximum_number){\n               maximum_number = number;\n           }\n           if(number <= minimum_number){\n               minimum_number = number;\n           }\n       }\n       printf(\"%lld\\n\",maximum_number - minimum_number);\n       test_cases--;\n   }\n}"}
{"similarity_score": 0.958904109589041, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "d6d688f4eade4373ca85b990ee5f4cd8", "bug_code_uid": "bcea71f4836356b2285994c276c5242b", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "30d44e7ea87c921069c3cf360d3323f8", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// texi.cpp : Defines the entry point for the console application.\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main(void)\n{\n    int a = 0, b = 0, c = 0, d = 0, x, i, w, o = 0,m;\n    scanf(\"%d\", &x);\n    for (i = 1; i <= x; i++){\n        scanf(\"%d\", &w);\n        switch (w)\n        {\n        case 1:a++; break;\n        case 2:b++; break;\n        case 3:c++; break;\n        case 4:d++; break;\n        default:break;\n        \n    }\n        o = c + d;\n        if (c != 0){\n            if (a > c){ a -= c; }\n            else  a = 0;\n        }\n\n        m = (a + b) / 4;\n        if ((a + b) % 4 == 0);\n        else m++;\n            o += m;\n            printf(\"%d\\n\", o);\n            \n            return 0;\n         \n    \n}\n\n\n\n\n", "fixed": "// texi.cpp : Defines the entry point for the console application.\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main(void)\n{\n    int a = 0, b = 0, c = 0, d = 0, x, i, w, o = 0,m;\n    scanf(\"%d\", &x);\n    for (i = 1; i <= x; i++){\n        scanf(\"%d\", &w);\n        switch (w)\n        {\n        case 1:a++; break;\n        case 2:b++; break;\n        case 3:c++; break;\n        case 4:d++; break;\n        default:break;\n        }\n    }\n        o = c + d;\n        if (c != 0){\n            if (a > c){ a -= c; }\n            else  a = 0;\n        }\n\n        m = (a + (2*b)) / 4;\n        if ((a + (2*b)) % 4 == 0);\n        else m++;\n            o += m;\n            printf(\"%d\\n\",o);\n\n            return 0;\n\n\n}\n\n\n\n"}
{"similarity_score": 0.9277777777777778, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c7b51e32d074bcf47afa44764885fb3a", "bug_code_uid": "1980a649104fcbe42dfc7940fa9c0314", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "9562ee51f0db14daa3c1669f0e8ca995", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*\n                      Badhan Sen\n                   Student Of C.S.E\n        Jessore University of Science & Technology\n                Mail:- galaxybd9@gmail.com\n\n*/\n#include <stdio.h>\nint main()\n{\n      long long int ara[100009],array[100009],i,n,max;\n      scanf(\"%I64d\", &n);\n      for (i=0;i<n;i++){\n        scanf (\"%I64d\", &ara[i]);\n      }\n      max=ara[n-1];\n      for (i=n-2;i>=0;i--){\n            if (max>ara[i]){\n                array[i]=(max-ara[i])+1;\n            }\n            else {\n                array[i]=0;\n                max=ara[i];\n            }\n      }\n      for (i=0;i<n;i++){\n            printf (\"%I64d \",array[i]);\n      }\n      return 0;\n}\n\n", "fixed": "/*\n                      Badhan Sen\n                   Student Of C.S.E\n        Jessore University of Science & Technology\n                Mail:- galaxybd9@gmail.com\n\n*/\n#include <stdio.h>\nint main()\n{\n      long long int ara[100009],array[100009],i,n,max;\n      scanf(\"%I64d\", &n);\n      for (i=0;i<n;i++){\n        scanf (\"%I64d\",&ara[i]);\n      }\n      max=ara[n-1];\n      for (i=n-2;i>=0;i--){\n            if (max>ara[i]){\n                array[i]=(max-ara[i])+1;\n            }\n            else if (max==ara[i]){\n                array[i]=1;\n            }\n            else {\n                max=ara[i];\n                array[i]=0;\n            }\n      }\n      for (i=0;i<n-1;i++){\n            printf (\"%I64d \",array[i]);\n      }\n      printf (\"0\");\n      return 0;\n}\n\n"}
{"similarity_score": 0.9955467590301831, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7499b71ce1d4e960c94a84768bd1285a", "bug_code_uid": "13e71755fe8124c49a0e15550f0e6b9d", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "7d4449b9392a6a5852f24a3761cf223e", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k=0,timer=0,h=0;\n    scanf(\"%d\",&n);\n    n--;\n    int arboles[n];\n    for(k=0;k<=n;k++)\n    {\n        scanf(\"%d\",&arboles[k]);\n    }\n    for(k=0;k<=n;k++)\n    {\n        if(h<arboles[k])//SUBE\n        {\n            while(h!=arboles[k])\n            {\n                h++;\n                timer++;\n            }\n        }else if(h>arboles[k])//BAJA\n            {\n                while(h!=arboles[k])\n                {\n                    h--;\n                    timer++;\n                }\n\n            }\n        if(h==arboles[k])//COME LA NUEZ\n        {\n            timer++;\n        }\n        if(k<=n-1)\n        {\n            if(h>arboles[k+1])\n            {\n                while(h!=arboles[k])\n                {\n                    h--;\n                    timer++;\n                }\n                    timer++;\n                }else{\n                    timer++;\n                }\n        }\n\n\n    }\n\n\n    printf(\"\\nTimer= %d\",timer);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k=0,timer=0,h=0;\n    scanf(\"%d\",&n);\n    n--;\n    int arboles[n];\n    for(k=0;k<=n;k++)\n    {\n        scanf(\"%d\",&arboles[k]);\n    }\n    for(k=0;k<=n;k++)\n    {\n        if(h<arboles[k])//SUBE\n        {\n            while(h!=arboles[k])\n            {\n                h++;\n                timer++;\n            }\n        }else if(h>arboles[k])//BAJA\n            {\n                while(h!=arboles[k])\n                {\n                    h--;\n                    timer++;\n                }\n\n            }\n        if(h==arboles[k])//COME LA NUEZ\n        {\n            timer++;\n        }\n        if(k<=n-1)\n        {\n            if(h>arboles[k+1])\n            {\n                while(h!=arboles[k])\n                {\n                    h--;\n                    timer++;\n                }\n                    timer++;\n                }else{\n                    timer++;\n                }\n        }\n\n\n    }\n\n\n    printf(\"%d\",timer);\n    return 0;\n}\n"}
{"similarity_score": 0.69, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "508022afb9c4ae1665a4ece108907994", "bug_code_uid": "18c8e6ed41377fc5896b667471e51378", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "8268eb3c7c78299b813078577b0f6f96", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\nint t,a,b,c;\nscanf(\"%d\",&t);\nwhile(--t){\n    scanf(\"%d %d\",&a,&b);\n    c= 0;\n    if(b>a){\n        int temp= a;\n        a= b;\n        b= temp;\n    }\n    while(a!=b){\n        if(a-b >=10){\n            a-= 10;\n            c++;\n        }\n        else{\n            a= a-(a-b);\n            c++;\n        }\n    }\n    printf(\"%d\\n\",c);\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\nint t,a,b,c;\nscanf(\"%d\",&t);\nwhile(t--){\n    scanf(\"%d %d\",&a,&b);\n    c= 0;\n    if(a==b){}\n\n    else {\n    if(b>a){\n        int temp= a;\n        a= b;\n        b= temp;\n    }\n    if(a-b >=10){\n        c= (a-b)/10;\n        a-= 10*c;\n\n        if(a-b!=0){\n            a-= (a-b);\n            c++;\n        }\n    }\n    else {\n        a-= a-b;\n        c++;\n    }\n    }\n\n    printf(\"%d\\n\",c);\n}\nreturn 0;\n}"}
{"similarity_score": 0.2468916518650089, "equal_cnt": 25, "replace_cnt": 15, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 24, "lang": "GNU C", "fix_code_uid": "2af5b098d222cc17c1c576079c0e28b4", "bug_code_uid": "90d624cecc1631d8174ef47e6a42f777", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "d3ad3727262b3f2ab84deff0d516c63d", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    long long int c1=0,c2=0,n,max=0,min=INT_MAX,tmp,i;\n        cin>>n;\n     for(i=0;i<n;i++)\n     {\n          cin>>tmp;\n          if(max<tmp)\n          {\n            max=tmp;\n            c1=1;\n          }\n          else\n          if(max==tmp)\n          c1++;\n          if(min>tmp)\n          {\n            min = tmp;\n            c2=1;\n          }\n          else\n          if(min==tmp)\n          c2++;\n     }\n     cout<<max-min<<\" \"<<c1*c2;\n     return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\nunsigned    long long int max=0,a[200005],min=1000000007,cnt1=0,cnt2=0;\n    scanf(\"%d\",&n);\n    int i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%llu\",&a[i]);\n            if(max<a[i])\n            max=a[i];\n            if(min>a[i])\n            min=a[i];\n        \n    }\n    printf(\"%llu \",max-min);\n        for(i=0;i<n;i++)\n        {\n            if(max==a[i])\n            cnt1++;\n            if(min==a[i])\n            cnt2++;\n        }\n        \n        if(max==min)\n        printf(\"%llu\\n\",cnt1*(cnt1-1)/2);\n        else printf(\"%llu\\n\",cnt1*cnt2);    \n\n        return 0;\n}"}
{"similarity_score": 0.15034965034965034, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "932b256d4fd6d0171fe22353dc9ccc09", "bug_code_uid": "cb5f6d0610ba4d9b0dee054a5fb258cb", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "5a48d6f189ee06d66218bd01de74c341", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n\t// your code goes here\n\tint num,pos=1,flag=0,j;\n\tscanf(\"%d\",&num);\n\tint i,tmp;\n\tint a[100000]={0};\n\tint snack[1000][1000]={0};\n\tfor(i=1;i<=num;i++)\n\tscanf(\"%d \",&a[i]);\n\tint z=1;\n\tdo\n\t{\n\t\t//printf(\"Round %d\\n\",z);\n\t\tz++;\n\t\tflag=0;\n\tint max=a[0];\n\tfor(i=1;i<=num;i++)\n\t{\n\t\t\n\t\tif(a[i]>max)\n\t\t{\n\t\t\tmax=a[i];\n\t\t\tpos=i;\n\t\t}\n\t}\n\t//printf(\"max is %d pos is %d\\n\",max,pos);\n\tsnack[pos-1][0]=max;\n\ttmp=max;\n\t//printf(\"tmp is %d\\n\",tmp);\n\tint k=0,key=0;\n\tfor(i=1;i<pos;i++)\n\t{  \n\t\tif(a[i]==tmp-1&&tmp>0)\n\t\t{\n\t\t\tk++;\n\t\t\tsnack[pos-1][k]=a[i];\n\t\t\ta[i]=0;\n\t\t\ttmp--;\n\t\t\ti=1;\n\t\t}\n\t\n\t\t\n\t}\n\ta[pos]=0;\n\tfor(i=1;i<=num;i++)\n\t{\n\t\tif(a[i]!=0)\n\t\tflag++;\n\t}\n\t//printf(\"%d\",flag);\n}while(flag);\nfor(i=0;i<num;i++)\n{\n\tfor(j=0;j<num;j++)\n\t{\n\t\tif(snack[i][j]==0)\n\t\tprintf(\" \");\n\t\telse\n\t\t{printf(\"%d\",snack[i][j]);\n\t\tprintf(\" \");}\n\t}\n\tprintf(\"\\n\");\n}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,c,i;\n\tscanf(\"%d\",&n);\n\tint a[1000001]={0};\n\tint j=n;\n\ti=n;\n\twhile(j>0)\n\t{\n\t\tscanf(\"%d \",&c);\n\t\t++a[c];\n\t\twhile(i>0)\n\t\t{\n\t\t\tif(a[i])\n\t\t\t{\n\t\t\t\tprintf(\"%d \",i);\n\t\t\t\ti--;\n\t\t\t}\n\t\t\telse\n\t\t\tbreak;\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tj--;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.5253456221198156, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "96159294e15dd5646a371bb1b403440e", "bug_code_uid": "9b553111e2eff30900e8daf76a32b1f7", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "e3d2db4599e14641539c67ef140ef752", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int q,l,r,d,i,p,j=1;\n    scanf(\"%d\",&q);\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%d%d%d\",&l,&r,&d);\n        while(1)\n        {\n            p=d*j;\n            if(p<l || p>r)\n            {\n                j=1;\n                break;\n            }\n            j++;\n        }\n        printf(\"%d\",p);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int q,i;\n    long long int l,r,d,p;\n    scanf(\"%d\",&q);\n\n    for(i=0;i<q;i++)\n    {\n        scanf(\"%I64d %I64d %I64d\",&l,&r,&d);\n\n        if(d<l || d>r) printf(\"%I64d\\n\",d);\n        else\n        {\n            p=d*((r/d)+1);\n            printf(\"%I64d\\n\",p);\n        }\n    }\n}\n"}
{"similarity_score": 0.98453261600538, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "f31b8e4631bdca497958e7800247dd51", "bug_code_uid": "48aefd9f0fefd308d322c3e24b0e243d", "src_uid": "e0b5169945909cd2809482b7fd7178c2", "apr_id": "61339a26efe5cb1928c950d481e211a9", "difficulty": 1700, "tags": ["two pointers", "binary search", "sortings", "ternary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\nint compa(const void* a,const void* b);\nint compb(const void* a,const void* b);\nint main(void)\n{\n\tint n,m,i,min;\n\t__int64 a[100000],b[100000];\n\t__int64 sum=0;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%I64d\",&b[i]);\n\t}\n\tqsort(a,n,sizeof(__int64),compa);\n\tqsort(b,m,sizeof(__int64),compb);\n\t//printf(\"%I64d %I64d\",a[0],b[0]);\n\tif(a[0]>=b[0])\n\t\tprintf(\"0\");\n\telse\n\t{\n\t\ti=0;\n\t\tmin=n>m?m:n;\n\t\twhile(i<min)\n\t\t{\n\t\t\tsum=sum+b[i]-a[i];\n\t\t\ti++;\n\t\t}\n\t\tprintf(\"%I64d\",sum);\n\t}\n\n\treturn 0;\n}\n\nint compa(const void* a,const void* b)\n{\n\treturn *(__int64*)a-*(__int64*)b;\n}\nint compb(const void* a,const void* b)\n{\n\treturn *(__int64*)b-*(__int64*)a;\n}\n", "fixed": "#include <stdio.h>\n#include<stdlib.h>\nint compa(const void* a,const void* b);\nint compb(const void* a,const void* b);\n\nint main(void)\n{\n\tint n,m,i,min;\n\t__int64 a[100050],b[100050];\n\t__int64 sum=0;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%I64d\",&b[i]);\n\t}\n\tqsort(a,n,sizeof(__int64),compa);\n\tqsort(b,m,sizeof(__int64),compb);\n\t//printf(\"%I64d %I64d\",a[0],b[0]);\n\tif(a[0]>=b[0])\n\t\tprintf(\"0\");\n\telse\n\t{\n\t\ti=0;\n\t\tmin=n>m?m:n;\n\t\twhile(i<min)\n\t\t{\n\t\t\tif(b[i]>a[i])\n\t\t\t\tsum=sum+b[i]-a[i];\n\t\t\ti++;\n\t\t}\n\t\tprintf(\"%I64d\",sum);\n\t}\n\n\treturn 0;\n}\n\nint compa(const void* a,const void* b)\n{\n\treturn *(__int64*)a-*(__int64*)b;\n}\nint compb(const void* a,const void* b)\n{\n\treturn *(__int64*)b-*(__int64*)a;\n}\n"}
{"similarity_score": 0.9940119760479041, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a521f044677ebd0b5fbb45e11ac49d99", "bug_code_uid": "bbfd12794af69875544f016dff34b345", "src_uid": "94a38067fc8dd8619fa6e5873ca60220", "apr_id": "a1e1070962ec18a13e5e37ca2bb69308", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n,i,j,k,a,b=0;\nscanf(\"%d\",&n);\nint A[n];\nfor(i=1;i<=n;i++){\n    scanf(\"%d\",&A[i]);\n}\n/*for(i=1;i<=n;i++){\n    for(j=i+1;j<=n;j++){\n            if(A[i]<=A[j])\n            continue;\n    else if(A[i]>A[j])\n            a=A[i];\n        A[i]=A[j];\n        A[j]=a;\n    }\n}*/\n//for(i=0;i<=n-1;i++){\n  //  printf(\"%d \",A[i]);\n//}\nfor(i=3;i<=n;i++){\n    for(j=1;j<=i-2;j++){\n        for(k=j+1;k<=i-1;k++){\n            if(A[i]==A[j]+A[k]){\n                b=1;\n               // printf(\"%d\\n\",k);\n                break;\n            }\n        }\n        if(b==1){\n             //   printf(\"%d\\n\",j);\n            break;\n        }\n    }\n    if(b==1){\n           //  printf(\"%d\\n\",i);\n        break;\n\n        }\n}\n//printf(\"%d\\n\",A[5]);\nif(b==0)\n    printf(\"-1\");\nelse if(b==1)\n    printf(\"%d %d %d\",i,k,j);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n,i,j,k,a,b=0;\nscanf(\"%d\",&n);\nint A[n];\nfor(i=1;i<=n;i++){\n    scanf(\"%d\",&A[i]);\n}\n/*for(i=1;i<=n;i++){\n    for(j=i+1;j<=n;j++){\n            if(A[i]<=A[j])\n            continue;\n    else if(A[i]>A[j])\n            a=A[i];\n        A[i]=A[j];\n        A[j]=a;\n    }\n}*/\n//for(i=0;i<=n-1;i++){\n  //  printf(\"%d \",A[i]);\n//}\nfor(i=1;i<=n;i++){\n    for(j=1;j<=n;j++){\n        for(k=j+1;k<=n;k++){\n            if(A[i]==A[j]+A[k]){\n                b=1;\n               // printf(\"%d\\n\",k);\n                break;\n            }\n        }\n        if(b==1){\n             //   printf(\"%d\\n\",j);\n            break;\n        }\n    }\n    if(b==1){\n           //  printf(\"%d\\n\",i);\n        break;\n\n        }\n}\n//printf(\"%d\\n\",A[5]);\nif(b==0)\n    printf(\"-1\");\nelse if(b==1)\n    printf(\"%d %d %d\",i,k,j);\nreturn 0;\n}\n"}
{"similarity_score": 0.9340974212034384, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0bd8cff8edfc76d8db730ac3c9ddc278", "bug_code_uid": "67d47b348baf7cdca160a1ad46ef5ddc", "src_uid": "7749f37aa9bf88a00013557e14342952", "apr_id": "b0596c38545dbe2481392bcc2240d551", "difficulty": 800, "tags": ["combinatorics", "implementation", "constructive algorithms", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main(void) {\n\tlong int N, i, j, *row, *col;\n\tchar *arr, c;\n\tscanf(\"%ld\\n\", &N);\n\trow = (int*)malloc(sizeof(long int)*N);\n\tcol = (int*)malloc(sizeof(long int)*N);\n\tfor (i=0;i<N;i++) {\n\t\tfor(j=0;j<N;j++) {\n\t\t\tscanf(\"%c\", &c);\n\t\t\tif (c == 'C') {\n\t\t\t\tcol[j]++;\n\t\t\t\trow[i]++;\n\t\t\t}\n\t\t}\n\t\tscanf(\"%c\", &c);\n\t}\n\tlong int ans = 0;\n\tfor(i=0;i<N;i++) {\n\t\tans = ans + (row[i]*(row[i]-1))/2;\n\t\tans = ans + (col[i]*(col[i]-1))/2;\n\t}\n\tprintf(\"%ld\", ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main(void) {\n\tlong int N, i, j, *row, *col;\n\tchar c;\n\tscanf(\"%ld\\n\", &N);\n\trow = (long int*)malloc(sizeof(long int)*N);\n\tcol = (long int*)malloc(sizeof(long int)*N);\n\tfor (i=0;i<N;i++) {\n\t\trow[i] = 0;\n\t\tcol[i] = 0;\n\t}\n\tfor (i=0;i<N;i++) {\n\t\tfor(j=0;j<N;j++) {\n\t\t\tscanf(\"%c\", &c);\n\t\t\tif (c == 'C') {\n\t\t\t\tcol[j]++;\n\t\t\t\trow[i]++;\n\t\t\t}\n\t\t}\n\t\tscanf(\"%c\", &c);\n\t}\n\n\tlong int ans = 0;\n\tfor(i=0;i<N;i++) {\n\t\tans = ans + (row[i]*(row[i]-1))/2;\n\t\tans = ans + (col[i]*(col[i]-1))/2;\n\t}\n\tprintf(\"%ld\", ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9465791940018744, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9ce9aa567eced456d8222d50c5eba3fa", "bug_code_uid": "cd6c14a7bcc55d2d4e26a91cd4d73cd5", "src_uid": "c659bdeda1c1da08cfc7f71367222332", "apr_id": "50f6afa3df9c9f5a903160598dcd1545", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main(int argc, char const *argv[])\n{\n int index[2],count=0,n;\n char string1[100001],string2[100001];\n scanf(\"%s\",string1);\n scanf(\"%s\",string2);\nn=strlen(string1);\nfor(int i=0;i<n;i++)\n{\n  if(string1[i]!=string2[i])\n  {\n      index[count]=i;\n      count++;\n  }\n  if(count>2)\n  break;\n}\nif(count!=2)\nprintf(\"NO\");\nelse\n{\n  if(string1[index[0]]==string2[index[1]]&&string1[index[1]]==string2[index[0]])\n  printf(\"YES\");\n  else\n  printf(\"NO\");\n}\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main(int argc, char const *argv[])\n{\n int index[2],count=0,n;\n char string1[100001],string2[100001];\n scanf(\"%s\",string1);\n scanf(\"%s\",string2);\nn=strlen(string1);\nfor(int i=0;i<n;i++)\n{\n  if(string1[i]!=string2[i])\n  {\n      index[count]=i;\n      count++;\n  }\n  if(count>2)\n  break;\n}\nif(strlen(string1)!=strlen(string2))\nprintf(\"NO\");\n else if(count!=2)\nprintf(\"NO\");\nelse\n{\n  if(string1[index[0]]==string2[index[1]]&&string1[index[1]]==string2[index[0]])\n  printf(\"YES\");\n  else\n  printf(\"NO\");\n}\n}\n"}
{"similarity_score": 0.9839228295819936, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "39324f63302090cba8fed36856dc6d70", "bug_code_uid": "552bdb1e8f77a6e47d3c14b85342b2b0", "src_uid": "da517ae908ba466da8ded87cec12a9fa", "apr_id": "0165da40e17c19044349d5d5865d3443", "difficulty": 2000, "tags": ["two pointers", "math", "data structures", "binary search", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#define M 300050\nint pri[M],ans[M];\nint main()\n{\n    int n,l,r,i;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        for(i=1;i<=n;i++)\n            scanf(\"%d\",&pri[i]);\n        int cnt=0,tmp=0;\n        for(i=1;i<=n;)\n        {\n            l=r=i;\n            while(l&&pri[l]%pri[i]==0)l--;\n            while(r<=n&&pri[r]%pri[i]==0)r++;\n            i=r;r=r-l-2;\n            if(r>tmp){cnt=0,tmp=r;}\n            if(r==tmp)ans[cnt++]=l+1;\n        }\n        printf(\"%d %d\\n\",cnt,tmp);\n        for(i=0;i<cnt;i++)\n        printf(\"%d \",ans[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define M 300050\nint pri[M],ans[M];\nint main()\n{\n    int n,l,r,i;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        for(i=1;i<=n;i++)\n            scanf(\"%d\",&pri[i]);\n        int cnt=0,tmp=0;\n        for(i=1;i<=n;)\n        {\n            l=r=i;\n            while(l&&pri[l]%pri[i]==0)l--;\n            while(r<=n&&pri[r]%pri[i]==0)r++;\n            i=r;r=r-l-2;\n            if(r>tmp){cnt=0,tmp=r;}\n            if(r==tmp)ans[cnt++]=l+1;\n        }\n        printf(\"%d %d\\n\",cnt,tmp);\n        for(i=0;i<cnt;i++)\n        printf(\"%d \",ans[i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9179229480737019, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "00f5f310c53855434dbb41e242fb13ca", "bug_code_uid": "2ec58fab71ff6dfdb873bc6254791186", "src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "apr_id": "f2c1a02a3c0c08dc78588d3109e93a78", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\tint n, i, tmp, freq[5001] = {0};\n\n\tscanf(\"%d\", &n);\n\tfor(i=0; i<n; ++i) {\n\t\tscanf(\"%d\", &tmp);\n\t\t++freq[tmp];\n\t}\n\n\tn = 0;\n\tfor(i=1; i<=5000; ++i) {\n\t\tif(freq[i] > 0) n += freq[i]-1;\n\t\tif(i > n) ++n;\n\t}\n\n\tprintf(\"%d\", n);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\tint n, i, tmp, freq[5001] = {0};\n\n\tscanf(\"%d\", &n);\n\tfor(i=0; i<n; ++i) {\n\t\tscanf(\"%d\", &tmp);\n\t\t++freq[tmp];\n\t}\n\n\ttmp = 0;\n\tfor(i=1; i<=5000; ++i) {\n\t\tif(freq[i] > 0) tmp += freq[i]-1;\n\t\tif(freq[i] > 0 && i > n) ++tmp;\n\t}\n\n\tprintf(\"%d\", tmp);\n\treturn 0;\n}"}
{"similarity_score": 0.8808049535603715, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "00d5c668dd15dc887c3c2ac1abd1718b", "bug_code_uid": "1713727d1f5697645b97d7258e70ee85", "src_uid": "3ae468c425c7b156983414372fd35ab8", "apr_id": "e41a0da827675fd5b7ea0d0c5ec91f64", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n   long long int t,n,temp,two,thr,f;\n\n   scanf(\"%lld\",&t);\n   while(t>0)\n    {\n       scanf(\"%lld\",&n);\n       two=thr=0;\n       temp=n;\n       f=2;\n       while(temp%f==0)\n\t    {\n\t       two++;\n\t       f=f*2;\n\t    }\n       temp=n;\n       f=3;\n       while(temp%f==0)\n\t    {\n\t       thr++;\n\t       f=f*3;\n\t    }\n       if(thr>=two)\n\t{\n\t    temp=temp*(pow(2,thr-two));\n\t    \n\t    temp=temp/(pow(6,thr)); \n\t\n\t  if(temp==1)\n\t     printf(\"%lld\\n\",two+2*(thr-two));\n\t  else\n\t     printf(\"-1\\n\");\n\t}\n       else\n\t   printf(\"-1\\n\");\n       t--;\n    }\n\n  return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n   long long int t,n,temp,two,thr,f,t1,t2;\n\n   scanf(\"%lld\",&t);\n   while(t>0)\n    {\n       scanf(\"%lld\",&n);\n       two=thr=0;\n       temp=n;\n       f=2;\n       while(temp%f==0)\n\t    {\n\t       two++;\n\t       f=f*2;\n\t    }\n       temp=n;\n       f=3;\n       while(temp%f==0)\n\t    {\n\t       thr++;\n\t       f=f*3;\n\t    }\n       if(thr>=two)\n\t{\n\t    t1=(pow(2,thr-two));\n\t    temp=temp*t1;\n                                                   \n\t    \n\t    t2=(pow(6,thr)); \n\t    temp=temp/t2;\n\t  if(temp==1)\n\t     printf(\"%lld\\n\",two+2*(thr-two));\n\t  else\n\t     printf(\"-1\\n\");\n\t}\n       else\n\t   printf(\"-1\\n\");\n       t--;\n    }\n\n  return 0;\n}"}
{"similarity_score": 0.9964788732394366, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5478b8a9c89aa9296f90943ae910c181", "bug_code_uid": "91fbb0a7e65515ff7b2b9fdb611a8a1e", "src_uid": "dceeb739a56bb799550138aa8c127996", "apr_id": "883aa483b0d7a9dd29f9e656836bdd00", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <limits.h>\n#include <math.h>\n\n#define N 100002\n#define R 1000000007\n#define MAX(a,b) ((a)>(b)?(a):(b))\n#define MIN(a,b) ((a)<(b)?(a):(b))\n\nint comp_int(const void *a, const void *b)\n{\n\treturn (*(int *)a - *(int *)b);\n}\n\nint i = 0, j = 0, k = 0, flag = 1, count = 0, temp, pos = 0, q, mx = 0, mn = INT_MAX;\nlong long sum = 0, product = 1;\n\n\nint main()\n{\n\tint n, set;\n\tscanf(\"%d %d\", &n, &k);\n\tif(n % 2)\n\t\tset = n / 2 + 1;\n\telse\n\t\tset = n / 2;\n\tint a[1000], cnt[1000] = {0};\n\tfor(i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tcnt[a[i]]++;\n\t}\n\tfor(i = 0; i < 1000; i++)\n\t{\n\t\tcount += (cnt[i] / 2) * 2;\n\t\tset = set - (cnt[i] / 2);\n\t\tcnt[i] %= 2;\n\t}\n\ti = 0;\n\twhile(set)\n\t{\n\t\tif(cnt[i])\n\t\t{\n\t\t\tset--;\n\t\t\tcount++;\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\\n\", count);\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <limits.h>\n#include <math.h>\n\n#define N 100002\n#define R 1000000007\n#define MAX(a,b) ((a)>(b)?(a):(b))\n#define MIN(a,b) ((a)<(b)?(a):(b))\n\nint comp_int(const void *a, const void *b)\n{\n\treturn (*(int *)a - *(int *)b);\n}\n\nint i = 0, j = 0, k = 0, flag = 1, count = 0, temp, pos = 0, q, mx = 0, mn = INT_MAX;\nlong long sum = 0, product = 1;\n\n\nint main()\n{\n\tint n, set;\n\tscanf(\"%d %d\", &n, &k);\n\tif(n % 2)\n\t\tset = n / 2 + 1;\n\telse\n\t\tset = n / 2;\n\tint a[1001], cnt[1001] = {0};\n\tfor(i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(i = 0; i < n; i++)\n\t{\n\t\tcnt[a[i]]++;\n\t}\n\tfor(i = 0; i <= 1000; i++)\n\t{\n\t\tcount += (cnt[i] / 2) * 2;\n\t\tset = set - (cnt[i] / 2);\n\t\tcnt[i] %= 2;\n\t}\n\ti = 0;\n\twhile(set)\n\t{\n\t\tif(cnt[i])\n\t\t{\n\t\t\tset--;\n\t\t\tcount++;\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\\n\", count);\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9849498327759197, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2e724ddccde841b6d56b17226471c994", "bug_code_uid": "7307c88e85e4e605fa54f348da00f800", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "3875409e48d3f04d06944799a42dbaa5", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[500005];\nint p[500005];\nint toTheRight[500005];\n\nlong long ans;\n\nlong long sum1, sum2, sum3, sum, sumd3;\n\nint main()\n{\n\tint i, j, k, n;\n\tans = 0;\n\n\tscanf(\"%d\", &n); \n\tfor (i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tp[0] = 0;\n\tfor (i = 1; i <= n; i++)\n\t\tp[i] = p[i-1] + a[i];\n\tsum = p[n];\n\tif (sum % 3 != 0) {\n\t\tans = 0;\n\t}\n\telse {\n\tsumd3 = sum / 3;\n\tk = 0;\n\tfor (j = n - 1; j >= 2; j--) {\n\t\tif (p[j] == sumd3*2) k++;\n\t\ttoTheRight[j] = k;\n\t}\n\n\tfor (i = n - 2; i >= 1; i++) {\n\t\tif (p[i] == sumd3) {\n\t\t\tans += toTheRight[i+1];\n\t\t}\n\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n}\n\n\n\n\n\n\n\n\n", "fixed": "#include <stdio.h>\n\nint a[500005];\nlong long p[500005];\nint toTheRight[500005];\n\nlong long ans;\n\nlong long sum1, sum2, sum3, sum, sumd3;\n\nint main()\n{\n\tint i, j, k, n;\n\tans = 0;\n\n\tscanf(\"%d\", &n); \n\tfor (i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tp[0] = 0;\n\tfor (i = 1; i <= n; i++)\n\t\tp[i] = p[i-1] + a[i];\n\tsum = p[n];\n\tif (sum % 3 != 0) {\n\t\tans = 0;\n\t}  \n\telse {\n\tsumd3 = sum / 3;\n\tk = 0;\n\tfor (j = n - 1; j >= 2; j--) {\n\t\tif (p[j] == sumd3*2) k++;\n\t\ttoTheRight[j] = k;\n\t}\n\n\tfor (i = n - 2; i >= 1; i--) {\n\t\tif (p[i] == sumd3) {\n\t\t\tans += toTheRight[i+1];\n\t\t}\n\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n}\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.7353407290015848, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "41666773a16f47f18d86ea08bb79c32b", "bug_code_uid": "057fa68319bdead687c4ba27eca16b97", "src_uid": "99f37936b243907bf4ac1822dc547a61", "apr_id": "f6d794a49b9423f8f9c4da8cccedf521", "difficulty": 1200, "tags": ["implementation", "greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\n    long long int n,i,j,k=0,cnt=0;\n    scanf(\"%lld\",&n);\n    char m[n+10];\n    scanf(\"%s\",m);\n    for(i=0;i<n;i++)\n    {\n        if(m[i]=='8')\n            cnt++;\n    }\n   if(cnt%2==0)\n        printf(\"YES\\n\");\n   else\n    printf(\"NO\\n\");\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,n,j,l,cnt1=0,cnt2=0;\n    scanf(\"%d\",&n);\n\n\n    char m[n+10];\n    scanf(\"%s\",m);\n    for(i=0;i<n-10;i++) {\n        if(m[i]=='8')\n            cnt1++;\n        else\n            cnt2++;\n\n    }\n    if(cnt2<=cnt1)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9017632241813602, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f3ca3b178c3b36f02266fc1e4149ff57", "bug_code_uid": "d7b8597fd2ef2918d6f9eea31dda1dd1", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "081a86b9136a71b502ce110236c488ea", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{int x1,y1,x2,y2;\nscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\nif(x1==y1&&x2==y2)\n    printf(\"%d %d %d %d\",x1,y2,x2,y1);\nelse if(x1==x2)\n    printf(\"%d %d %d %d\",x1+(y2-y1),y2,x1+(y2-y1),y1);\n   else if(y1==y2)\n    printf(\"%d %d %d %d\",x1,y1-(x2-x1),x2,y2-(x2-x1));\nelse if(x2-(y2-y1)==x1&&y2-(x2-x1)==y1)\n    printf(\"%d %d %d %d\",x1,y2,x2,y1);\nelse\n    printf(\"-1\");\n}\n", "fixed": "#include<stdio.h>\nmain()\n{int x1,y1,x2,y2;\nscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\nif(x1==y1&&x2==y2)\n    printf(\"%d %d %d %d\",x1,y2,x2,y1);\nelse if(x1==x2)\n    printf(\"%d %d %d %d\",x1+(y2-y1),y2,x1+(y2-y1),y1);\n   else if(y1==y2)\n    printf(\"%d %d %d %d\",x1,y1-(x2-x1),x2,y2-(x2-x1));\nelse if(x2-x1==y2-y1||x1-x2==y2-y1||x2-x1==y1-y2||x1-x2==y1-y2)\n    printf(\"%d %d %d %d\",x1,y2,x2,y1);\nelse\n    printf(\"-1\");\n}\n"}
{"similarity_score": 0.9763560500695411, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "83f87b6d215ce95eb84e2e71985c4322", "bug_code_uid": "558640f6c1e7082eac53b7b87dbac126", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "3dda468f9b5b8f9204101f34a9bb2195", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\n\nint main()\n{\nint l,f=0,k,i,j,len,st,e;\nchar s[1001];\n\nscanf(\"%s\",s);\nscanf(\"%d\",&k);\nl=strlen(s);\nlen=l/k;\n\nfor(i=0;i<k;i++)\n{\n\tst=i*len;\n\te=st+len-1;\n\n\n\twhile(st<=e)\n\t{\n\t\tif(s[st++]!=s[e--])\n\t\t{\n\t\t\tf=1;\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n}\nif(f || k>l)\n\tprintf(\"NO\\n\");\n\telse\n\tprintf(\"YES\\n\");\n\n\n\n\treturn 0;\n}\n", "fixed": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\n\nint main()\n{\nint l,f=0,k,i,j,len,st,e;\nchar s[1001];\n\nscanf(\"%s\",s);\nscanf(\"%d\",&k);\nl=strlen(s);\nlen=l/k;\n\nfor(i=0;i<k;i++)\n{\n\tst=i*len;\n\te=st+len-1;\n\n\n\twhile(st<=e)\n\t{\n\t\tif(s[st++]!=s[e--])\n\t\t{\n\t\t\tf=1;\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n}\nif(f==1 || k > l || l%k!=0)\n\tprintf(\"NO\\n\");\n\telse\n\tprintf(\"YES\\n\");\n\n\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.5734870317002881, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "56a7dc26656882c075086c7f01093ac8", "bug_code_uid": "1f756db550c3e1c1d9fbad768ed83f8c", "src_uid": "0c5cf0af057b0c838f13b491b923447a", "apr_id": "713db96dde4def823183b9eecf103cfe", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tlong long x;\r\n\tscanf(\"%lld\",&x);\r\n\tlong long i,n;\r\n\tlong long j;\r\n\tfor(i=0;i<x;i++){\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tlong long sum=0;\r\n\t\tfor(j=1;j<=n/2;j++){\r\n\t\tsum=sum+j;\r\n\t}\r\n\t\tsum=sum*2;\r\n\t\tif(n%2!=0){\r\n\t\t\tsum=sum+n/2+1;\r\n\t\t}\r\n\t\tlong long t;\r\n\t\tt=sqrt(sum);\r\n\t\tprintf(\"%lld\\n\",t);\r\n\r\n\t}\r\n\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tlong long x;\r\n\tscanf(\"%lld\",&x);\r\n\tlong long i,n;\r\n\tlong long j;\r\n\tfor(i=0;i<x;i++){\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tlong long sum=0;\r\n\t\tif(n%2!=0){\r\n\t\t\tsum=(1+n/2)*n/2+n/2+1;\r\n\t\t}else{\r\n\t\t    sum=(1+n/2)*n/2;\r\n\t\t}\r\n\t\tlong long t;\r\n\t\tt=sqrt(sum);\r\n\t\tprintf(\"%lld\\n\",t);\r\n \r\n\t}\r\n \r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9954022988505747, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3ed069efb4203714f9d8014ff04453aa", "bug_code_uid": "dd129c7400e69360042fad31dec60fd3", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "c74a11b72fe9916fb58bba6696d82abf", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    long long int n;\n    scanf(\"%lld\",&n);\n    long long int i,a=1,b;\n    if(n==1){\n        printf(\"0\");\n        \n    }\n    else if(n==2){\n        printf(\"1\");\n    }\n    else{\n    for(i=1;i<=n-1;i++){\n        if(a+i>n){\n            a=abs(n-(a+i));\n            printf(\"%lld \",a);\n        }\n        else{\n            a=a+i;\n            printf(\"%lld \",a);\n        }\n        \n        \n    }\n    }\n    \n\n\n}   ", "fixed": "#include <stdio.h>\nint main(){\n    long long int n;\n    scanf(\"%lld\",&n);\n    long long int i,a=1,b;\n    if(n==1){\n        printf(\"1\");\n        \n    }\n    else if(n==2){\n        printf(\"2\");\n    }\n    else{\n    for(i=1;i<=n-1;i++){\n        if(a+i>n){\n            a=abs(n-(a+i));\n            printf(\"%lld \",a);\n        }\n        else{\n            a=a+i;\n            printf(\"%lld \",a);\n        }\n        \n        \n    }\n    }\n    \n\n\n}   "}
{"similarity_score": 0.9986631016042781, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "28164928b8a9d3d4bd251fb658f442d1", "bug_code_uid": "b3d0ed86e47aa1f01a38e512c6bfd4da", "src_uid": "e2db09803d87362c67763ef71e8b7f47", "apr_id": "b5fc9a953b733b11ec6ade2a529bba80", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int n,a[200050],i,min=2000000000,ans,p=0,max=0,first=0,last=0;\n    scanf(\"%I64d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n        if(min>=a[i]){\n            min=a[i];\n        }\n    }\n\n    for(i=0;i<n;i++){\n        a[i]-=min;\n    }\n\n    for(i=0;i<n;i++){\n        if(a[i]!=0){\n            p++;\n            if(max<p) max=p;\n        }\n        else p=0;\n    }\n\n    for(i=0;i<n;i++){\n        if(a[i]!=0) first++;\n        else break;\n    }\n\n    for(i=0;i<n;i++){\n        if(a[n-i-1]!=0) last++;\n        else break;\n    }\n\n    if(max<first+last) max=first+last;\n\n    ans=n*min+max;\n    printf(\"%I64d %I64d %I64d %I64d %I64d\\n\",n,min,max,first,last);\n    printf(\"%I64d\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int n,a[200050],i,min=2000000000,ans,p=0,max=0,first=0,last=0;\n    scanf(\"%I64d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n        if(min>=a[i]){\n            min=a[i];\n        }\n    }\n\n    for(i=0;i<n;i++){\n        a[i]-=min;\n    }\n\n    for(i=0;i<n;i++){\n        if(a[i]!=0){\n            p++;\n            if(max<p) max=p;\n        }\n        else p=0;\n    }\n\n    for(i=0;i<n;i++){\n        if(a[i]!=0) first++;\n        else break;\n    }\n\n    for(i=0;i<n;i++){\n        if(a[n-i-1]!=0) last++;\n        else break;\n    }\n\n    if(max<first+last) max=first+last;\n\n    ans=n*min+max;\n    //printf(\"%I64d %I64d %I64d %I64d %I64d\\n\",n,min,max,first,last);\n    printf(\"%I64d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.6899563318777293, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "b45ab9f81f646c64f4dfaba27ce1ebbb", "bug_code_uid": "976e2045d958978bb0e4ef22f2687c57", "src_uid": "2bb893703cbffe9aeaa0bed02f42a05c", "apr_id": "8881f5add03aed8b995335a8b09e5d51", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint gcd(int a, int b)\n{\n    if (a == 0)\n        return b;\n    return gcd(b%a, a);\n}\nint main()\n{\n    int n,i,ans=1,x;\n    scanf(\"%d\",&n);\n    int a[i],min=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]<a[min])\n        min=i;\n    }\n    x=a[0];\n    for(i=1;i<n;i++)\n    {\n        x=gcd(x,a[i]);\n    }\n    min=x;\n    for(i=0;i<n;i++)\n    {\n        if(a[i]%min!=0)\n        {\n            ans=-1;\n            break;\n        }\n        a[i]/=min;\n    }\n    for(i=0;i<n;i++)\n    {\n        while(a[i]%2==0)\n        a[i]=a[i]/2;\n        while(a[i]%3==0&&a[i]!=1)\n        a[i]=a[i]/3;\n        if(a[i]!=1)\n        {\n            ans=-1;\n            break;\n        }\n    }\n    if(ans==1)\n    printf(\"Yes\");\n    else printf(\"No\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint gcd(int a, int b)\n{\n    if (a == 0)\n        return b;\n    return gcd(b%a, a);\n}\nint main()\n{\n    int n,i,ans=1,x;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    x=a[0];\n    for(i=1;i<n;i++)\n    {\n        x=gcd(x,a[i]);\n    }\n    for(i=0;i<n;i++)\n        a[i]/=x;\n    for(i=0;i<n;i++)\n    {\n        while(a[i]%2==0)\n        a[i]=a[i]/2;\n        while(a[i]%3==0)\n        a[i]=a[i]/3;\n        if(a[i]!=1)\n        {\n            ans=-1;\n            break;\n        }\n    }\n    if(ans==1)\n    printf(\"Yes\");\n    else printf(\"No\");\n    return 0;\n}"}
{"similarity_score": 0.9917936694021102, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7c9b82b6b17f07c88a1c3f0532273279", "bug_code_uid": "8bc0f5069ced9a89e1fbba5f0d2df5fb", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "05b5a36907491971655b2085553db785", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,result=0;\n    scanf(\"%d\",&n);\n    char s1[n],s2[n],temp;\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    for(i=0;i<n;i++)\n    {\n        if(s1[i]>s2[i])\n        {temp=s1[i];\n          s1[i]=s2[i];\n          s2[i]=temp;\n        }\n        if(s2[i]-s1[i]<5)\n            result=result+(s2[i]-s1[i]);\n        else{ result=(s1[i]-48)+1+(57-s2[i]);}\n    }printf(\"%d\",result);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,result=0;\n    scanf(\"%d\",&n);\n    char s1[n],s2[n],temp;\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    for(i=0;i<n;i++)\n    {\n        if(s1[i]>s2[i])\n        {temp=s1[i];\n          s1[i]=s2[i];\n          s2[i]=temp;\n        }\n        if(s2[i]-s1[i]<5)\n            result=result+(s2[i]-s1[i]);\n        else{ result=result+(s1[i]-48)+1+(57-s2[i]);}\n    }printf(\"%d\",result);\n    return 0;\n}\n"}
{"similarity_score": 0.4321608040201005, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f2f9803a2b3624a55bca338abdbf0d3c", "bug_code_uid": "bff3160c7d586efb99f848851460cef3", "src_uid": "681ee82880ddd0de907aac2ccad8fc04", "apr_id": "d2c86cfb3395cdcfca734d93bb7f96dc", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\ntypedef long long ll;\r\n\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    ll l[t], r[t], a[t], res[t];\r\n    memset(res, 0, t*sizeof(ll));\r\n    for(ll i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lld %lld %lld\", &l[i], &r[i], &a[i]);\r\n        ll value;\r\n        for(ll j =l[i];j<=r[i];j++)\r\n        {\r\n            value = (j/a[i]) + (j%a[i]);\r\n            if(value>res[i])\r\n                res[i] = value;\r\n        }\r\n    }\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        printf(\"%lld\\n\", res[i]);\r\n    }\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\ntypedef long long ll;\r\n\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    ll l[t], r[t], a[t], res[t];\r\n    for(ll i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lld %lld %lld\", &l[i], &r[i], &a[i]);\r\n        if(r[i]-l[i]>=a[i]-1)\r\n        {\r\n            if(r[i]%a[i]==a[i]-1)\r\n            {\r\n                res[i] = (r[i]/a[i]) + (a[i]-1);\r\n            }\r\n            else\r\n            {\r\n                res[i] = (r[i])/a[i] + (a[i]-1) - 1;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(r[i]%a[i] >= l[i]%a[i])\r\n            {\r\n                res[i] = (r[i]/a[i]) + (r[i]%a[i]);\r\n            }\r\n            else\r\n            {\r\n                res[i] = (r[i])/a[i] + (a[i]-1) - 1;\r\n            }\r\n        }\r\n    }\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        printf(\"%lld\\n\", res[i]);\r\n    }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.6307053941908713, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "af33868dd896f87dfde706664e0fa702", "bug_code_uid": "be2fcb49cb431fe054ca3b0c968df816", "src_uid": "0924971933265f4be34710149a541087", "apr_id": "5def70f84b9920f7eb95ed73739c20e5", "difficulty": 1300, "tags": ["binary search", "implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint skip(int arr[], int n, int s){\n\n\tint largest_id = 0;\n\n\tint i = 0;\n\n\tint sum = 0;\n\n\tint in[n];\n\n\tint ret = 0;\n\n\tint till = -1;\n\n\twhile(sum + arr[i] <= s){\n\n\t\tsum += arr[i];\n\t\tin[i] = arr[i];\n\n\t\tif(arr[i] > arr[largest_id]){\n\n\t\t\tlargest_id = i;\n\n\t\t}\n\n\t\ttill = i;\n\n\t\ti++;\n\n\t}\n\n\tif(arr[i] > arr[largest_id]){\n\n\t\tin[i] = -1;\n\n\t\ti++;\n\n\t\twhile(sum + arr[i] <= s){\n\n\t\t\tsum += arr[i];\n\t\t\tin[i] = arr[i];\n\n\t\t\ttill = i;\n\n\t\t\ti++;\n\n\t\t}\n\n\t}\n\n\telse{\n\n\t\tin[largest_id] = -1;\n\t\tsum -= arr[largest_id];\n\n\t\twhile(sum + arr[i] <= s){\n\n\t\t\tsum += arr[i];\n\t\t\tin[i] = arr[i];\n\n\t\t\ttill = i;\n\n\t\t\ti++;\n\n\t\t}\n\n\t}\n\n\tfor(int i = 0; i <= till; i++){\n\n\t\tif(in[i] == -1){\n\n\t\t\tret = i + 1;\n\n\t\t}\n\n\t}\n\n\treturn ret;\n\n}\n\nint main(){\n\n\tint t, n, s;\n\n\tscanf(\"%d\", &t);\n\n\tint ans[t];\n\n\tfor(int i = 0; i < t; i++){\n\n\t\tscanf(\"%d %d\", &n, &s);\n\n\t\tint arr[n];\n\n\t\tfor(int j = 0; j < n; j++){\n\n\t\t\tscanf(\"%d\", &arr[j]);\n\n\t\t}\n\n\t\tans[i] = skip(arr, n, s);\n\n\t}\n\n\tfor(int i = 0; i < t; i++){\n\n\t\tprintf(\"%d\\n\", ans[i]);\n\n\t}\n\n\treturn 0;\n\n}\n", "fixed": "#include<stdio.h>\n\nint skip(int arr[], int n, int s){\n\n\tint largest_id = 0;\n\n\tint i = 0;\n\n\tint sum = 0;\n\n\tint in[n];\n\n\tint ret = 0;\n\n\tint till = 0;\n\n\tif(arr[0] > s && arr[1] <= s){\n\n\t\treturn 1;\n\n\t}\n\n\twhile(sum + arr[i] <= s && i < n){\n\n\t\tsum += arr[i];\n\t\tin[i] = arr[i];\n\n\t\tif(arr[i] > arr[largest_id]){\n\n\t\t\tlargest_id = i;\n\n\t\t}\n\n\t\ttill = i;\n\n\t\ti++;\n\n\t}\n\n\tif(arr[i] > arr[largest_id] && i < n){\n\n\t\tin[i] = -1;\n\n\t\ti++;\n\n\t\twhile(sum + arr[i] <= s && i < n){\n\n\t\t\tsum += arr[i];\n\t\t\tin[i] = arr[i];\n\n\t\t\ttill = i;\n\n\t\t\ti++;\n\n\t\t}\n\n\t}\n\n\telse if(arr[i] <= arr[largest_id] && i < n){\n\n\t\tin[largest_id] = -1;\n\t\tsum -= arr[largest_id];\n\n\t\twhile(sum + arr[i] <= s && i < n){\n\n\t\t\tsum += arr[i];\n\t\t\tin[i] = arr[i];\n\n\t\t\ttill = i;\n\n\t\t\ti++;\n\n\t\t}\n\n\t}\n\n\t/*else{\n\n\t\treturn 0;\n\n\t}*/\n\n\tfor(int i = 0; i <= till; i++){\n\n\t\tif(in[i] == -1){\n\n\t\t\tret = i + 1;\n\n\t\t}\n\n\t}\n\n\treturn ret;\n\n}\n\nint main(){\n\n\tint t, n, s;\n\n\tscanf(\"%d\", &t);\n\n\tint ans[t];\n\n\tfor(int i = 0; i < t; i++){\n\n\t\tscanf(\"%d %d\", &n, &s);\n\n\t\tint arr[n];\n\n\t\tfor(int j = 0; j < n; j++){\n\n\t\t\tscanf(\"%d\", &arr[j]);\n\n\t\t}\n\n\t\tans[i] = skip(arr, n, s);\n\n\t}\n\n\tfor(int i = 0; i < t; i++){\n\n\t\tprintf(\"%d\\n\", ans[i]);\n\n\t}\n\n\treturn 0;\n\n}\n"}
{"similarity_score": 0.9977194982896237, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "776754900cbc8fb60cf2c5d4761ca6af", "bug_code_uid": "03ba8d42663ccede03014f0868d9b800", "src_uid": "6c65ca365352380052b0c9d693e6d161", "apr_id": "b081d7c4a50314b5af0ced2cbc656d4f", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n\nint main(int argc, char *argv[]) {\n\n    int n,i;\n    int gear;\n    int diff = 0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&gear);\n    diff = (n-gear) % n;\n    int check = 1;\n    int real = 1;\n    for (i=1 ; i<n ; i++) {\n        scanf(\"%d\",&gear);\n        if (check) {\n            check = 0;\n        } else {\n            check = 1;\n        }\n\n        if (check) {\n            if ( (gear + diff) % n != i) {\n                printf(\"%d\",i);\n                real = 0;\n            }\n        } else {\n            int mode = gear - diff;\n            while (mode < 0) {\n                mode += n;\n            }\n            if (mode  != i ) {\n                printf(\"%d\",i);\n                real = 0;\n            }\n        }\n    }\n\n    if (real) {\n        printf(\"Yes\");\n    } else {\n        printf(\"No\");\n    }\n\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n\nint main(int argc, char *argv[]) {\n\n    int n,i;\n    int gear;\n    int diff = 0;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&gear);\n    diff = (n-gear) % n;\n    int check = 1;\n    int real = 1;\n    for (i=1 ; i<n ; i++) {\n        scanf(\"%d\",&gear);\n        if (check) {\n            check = 0;\n        } else {\n            check = 1;\n        }\n\n        if (check) {\n            if ( (gear + diff) % n != i) {\n                //printf(\"%d\",i);\n                real = 0;\n            }\n        } else {\n            int mode = gear - diff;\n            while (mode < 0) {\n                mode += n;\n            }\n            if (mode  != i ) {\n                //printf(\"%d\",i);\n                real = 0;\n            }\n        }\n    }\n\n    if (real) {\n        printf(\"Yes\");\n    } else {\n        printf(\"No\");\n    }\n\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.8761609907120743, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ba4a3c5559f81648b3471d9f33b82f18", "bug_code_uid": "dc8de282dda547d9cb373c9708911cc5", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "def1b57904ee5ba76e15244b98d26c86", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint m = 0, n = 0, max = 0;\r\n\t\tchar a[102];\r\n\tscanf(\"%d\", &m);\r\n\tfor (int i = 0; i<m; i++)\r\n\t{\r\n\t\tscanf(\"%d\", &n);\r\n\t\tscanf(\"%s\", a);\r\n\t\tfor (int j = 0; j<n; j++)\r\n\t\t{\r\n\t\t\tmax = a[0];\r\n\t\t\tif (max<a[j])\r\n\t\t\t\tmax = a[j];\r\n\t\t}\r\n\t\tmax = max - 'a'+1;\r\n\t\tprintf(\"%d\\n\", max);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint m = 0, n = 0, max = 0;\r\n\tchar a[102];\r\n\tscanf(\"%d\", &m);\r\n\tfor (int i = 0; i<m; i++)\r\n\t{\r\n\t\tscanf(\"%d\", &n);\r\n\t\tscanf(\"%s\", a);\r\n\t\tmax = a[0];\r\n\t\tfor (int j = 0; j<n; j++)\r\n\t\t{\r\n\t\t\tif (max<a[j])\r\n\t\t\t\tmax = a[j];\r\n\t\t}\r\n\t\tmax = max - 'a' + 1;\r\n\t\tprintf(\"%d\\n\", max);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9730496453900709, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "89ebf7f6f6fa92b9ff877ed061c0f4d3", "bug_code_uid": "b196cd40342146683d3ab9fecc49181f", "src_uid": "ea62b6f68d25fb17aba8932af8377db0", "apr_id": "e9deb183878d8f6ea2341d501400a7d9", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,f=0,m=1,l=2,count=0;\n    \n    scanf(\"%d\",&n);\n    \n    int a[n];\n    \n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    \n    for(i=0;i<n-2;i++)\n    {\n        if(a[f]==1&&a[l]==1&a[m==0])\n       { a[l] =0;\n        count++;}\n        f++;\n        m++;\n        l++;\n    }\n    \n    printf(\"%d\",count);\n    \n    \n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,f=0,m=1,l=2,count=0;\n    \n    scanf(\"%d\",&n);\n    \n    int a[n];\n    \n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    \n    for(i=0;i<n-2;i++)\n    {\n        if(a[f]==1 && a[l]==1 && a[m]==0)\n       { a[l] =0;\n        count++;}\n        f++;\n        m++;\n        l++;\n    }\n    \n    printf(\"%d\",count);\n    \n    \n}"}
{"similarity_score": 0.272027373823781, "equal_cnt": 5, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "704f4122557fa0e92df38096c9ac28d2", "bug_code_uid": "82166e05330410aca7ea0e7e121f1fc7", "src_uid": "a4a69a5fbf35781ff0849332a45566ca", "apr_id": "c4daf4956e00d74a6ea7445bd1eeee42", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n\tlong long int t,l1,l2,l3,i,j,k,max;\r\n\tscanf(\"%d\",&t);\r\n\tscanf(\"%d %d %d\",&l1,l2,l3);\r\n\r\n\tif(l1!=l2!=l3){\r\n\r\n\tif(l1=l2){\r\n\t\tif(l3%2==0){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n\tif(l2=l3){\r\n\t\tif(l1%2==0){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n\tif(l3=l1){\r\n\t\tif(l2%2==0){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nelse{\r\n\tif(l1%2==0){\r\n\t\tprintf(\"YES\\n\");\r\n\t}\r\n\telse{\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n}\r\nif(l1!=l2 && l2!=l3 && l3!=l1){\r\n\tmax=l1;\r\n\tif(l2>l1 && l2>l3){\r\n\t\tmax=l2;\r\n\t\tif(max-l1==l3){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\tif(l3>l1 && l3>l2){\r\n\t\tmax=l3;\r\n\r\n\t\tif (max-l1==l2)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\r\n\tif (max==l1 && max-l2==l3)\r\n\t{\r\n\t\tprintf(\"YES\\n\");\r\n\t}\r\n\telse{\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n\r\n}\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tlong long int t,l1,l2,l3,i,j,k,max;\r\n\tscanf(\"%lld\",&t);\r\n\tfor(i=0;i<t;i++){\r\n\t\tscanf(\"%lld%lld%lld \",&l1,&l2,&l3);\r\n\t\tif(l1==l2 && l3%2==0 || l2==l3 && l1%2==0 || l3==l1 && l2%2==0)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\r\n\t\telse if (l1==l2+l3 || l2==l1+l3 || l3==l1+l2)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\t\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.6075187969924812, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "418e91fd10d551cae81cc4ef0c293d67", "bug_code_uid": "faa7cb826dbd1cf06b29358213325adb", "src_uid": "7c2a61de728e6767b25e58c74497bbae", "apr_id": "823df889714c713cf98c47c9439ac94b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    for(int z=0;z<t;z++)\n    {\n        int n,m;\n        scanf(\"%d %d\",&n,&m);\n\n        int arr[n];\n        for(int i=0;i<n;i++)\n            scanf(\"%d\",&arr[i]);\n\n        printf(\"%d\",m);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n\n    for(int z=0;z<t;z++)\n    {\n        int n,m,sum=0;;\n        scanf(\"%d %d\",&n,&m);\n\n        int arr[n];\n        for(int i=0;i<n;i++)\n         {\n             scanf(\"%d\",&arr[i]);\n             sum+=arr[i];\n         }\n         if(sum<m)\n        printf(\"%d\\n\",sum);\n        else\n            printf(\"%d\\n\",m);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2555366269165247, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "02708c27d6a7518cd00b84313ccbe79f", "bug_code_uid": "2a051ef597d3a42a59200b8f4f6fa965", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "f32e72e1d906c96cc9e46bcf70e4dff9", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[20],b[20];\n\tint x,y,i=0,n;\n\tscanf(\"%d\",n);\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%s\",a);\n\tx=strlen(a);\n\tif(x>10)\n\t{\n\t\tb[0]=a[0];\n\t\twhile(y>0)\n\t\t{\n\t\t\ty=x%10;\n\t\t\tb[++i]=(char)((x/10)+48);\n\t\t}\n\t\tb[i+1]=a[x-1];\n\t\t\n\t\tprintf(\"%s\",b);\n\n\n\t}\n\telse\n\tprintf(\"%s\",a);\n\treturn 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int n,l;\n    char s[100];\n    scanf(\"%d\",&n);\n    while(n--){\n     scanf(\"%s\",&s);\n     l=strlen(s);\n     if(l<=10)\n     printf(\"%s\\n\",s);\n     else\n     printf(\"%c%d%c\\n\",s[0],l-2,s[l-1]);\n    }\n    return 0;\n    }"}
{"similarity_score": 0.9893805309734514, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1fe677ee1fbd76bcd6bbb87e29d46fde", "bug_code_uid": "375c6f0057cb54aee0111e742af2b8e9", "src_uid": "1cc628b4e03c8b8e0c5086dc4e0e3254", "apr_id": "ae27ff48df43d54937e08706aa4be33f", "difficulty": 900, "tags": ["brute force", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nlong long int main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long int n,max,min;\r\n        scanf(\"%lld\",&n);\r\n        if(n%4==0) max=n/4;\r\n        else if(n%4==2) max=n/4;\r\n        else{\r\n            max=-1;\r\n        }\r\n        if(n%6==0) min=n/6;\r\n        else if(n%6==4) min=(n/6)+1;\r\n        else if(n%6==2) min=(n/6)+1;\r\n        else {\r\n           min=-1;\r\n        }\r\n        if(max==-1||min==-1) printf(\"-1\\n\");\r\n        else printf(\"%lld %lld\\n\",min,max);\r\n        \r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nlong long int main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long int n,max,min;\r\n        scanf(\"%lld\",&n);\r\n        if(n>=4&&n%4==0) max=n/4;\r\n        else if(n>=4&&n%4==2) max=n/4;\r\n        else{\r\n            max=-1;\r\n        }\r\n        if(n%6==0) min=n/6;\r\n        else if(n%6==4) min=(n/6)+1;\r\n        else if(n%6==2) min=(n/6)+1;\r\n        else {\r\n           min=-1;\r\n        }\r\n        if(max==-1||min==-1) printf(\"-1\\n\");\r\n        else printf(\"%lld %lld\\n\",min,max);\r\n        \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9980694980694981, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8d69c3db52bb080ed3a80e6f9556d38b", "bug_code_uid": "e1a8ded9b3acc1b3d8e053b1968eb319", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "a38e65ef1e2d1a20bd144ef5d002c6f3", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint i, a[8]={'0'};\n\tchar ch=getchar();\n\twhile(ch!='\\0')\n\t{\n\t    switch(ch)\n\t    {\n\t        case 'B': a[1]++; break;\n\t        case 'u': a[2]++; break;\n\t        case 'l': a[3]++; break;\n\t        case 'b': a[4]++; break;\n\t        case 'a': a[5]++; break;\n\t        case 's': a[6]++; break;\n\t        case 'r': a[7]++; break;\n\t    }\n\t    ch = getchar();\n\t}\n\ta[2] = a[2]/2;\n\ta[5] = a[5]/2;\n\tint min =500000;\n\tfor(i=1;i<=7;i++)\n\tif(a[i]<min)\n\tmin = a[i];\n\tprintf(\"%d\",min);\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint i, a[8]={'0'};\n\tchar ch=getchar();\n\twhile(ch!='\\n')\n\t{\n\t    switch(ch)\n\t    {\n\t        case 'B': a[1]++; break;\n\t        case 'u': a[2]++; break;\n\t        case 'l': a[3]++; break;\n\t        case 'b': a[4]++; break;\n\t        case 'a': a[5]++; break;\n\t        case 's': a[6]++; break;\n\t        case 'r': a[7]++; break;\n\t    }\n\t    ch = getchar();\n\t}\n\ta[2] = a[2]/2;\n\ta[5] = a[5]/2;\n\tint min =500000;\n\tfor(i=1;i<=7;i++)\n\tif(a[i]<min)\n\tmin = a[i];\n\tprintf(\"%d\",min);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.636604774535809, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "221a96e7d63c2ff9e35f4e65b12d88b2", "bug_code_uid": "bd82416325af055681527d472be9c66e", "src_uid": "b3c6058893f935d88196113fab581cf8", "apr_id": "80d1045254a17d642ab8a5692a451b36", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n, i, j, swap=0, min, minind, temp;\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    for(i=0; i<n-1; i++)\n    {\n        min=arr[i];\n        minind=i;\n        for(j=i+1; j<n; j++)\n        {\n            if(min>arr[j])\n            {\n                min=arr[j];\n                minind=j;\n            }\n        }\n        if(min!=arr[i])\n        {\n            printf(\"%d %d\\n\", i, minind);\n            temp=arr[i];\n            arr[i]=min;\n            arr[minind]=temp;\n        }\n    }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n, i, j, min, minind, temp;\n    scanf(\"%d\", &n);\n    int arr[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    int swaps[n][2];\n    int swapind=-1;\n    for(i=0; i<n-1; i++)\n    {\n        min=arr[i];\n        minind=i;\n        for(j=i+1; j<n; j++)\n        {\n            if(min>arr[j])\n            {\n                min=arr[j];\n                minind=j;\n            }\n        }\n        if(min!=arr[i])\n        {\n            //printf(\"%d %d\\n\", i, minind);\n            swaps[++swapind][0]=i;\n            swaps[swapind][1]=minind;\n            temp=arr[i];\n            arr[i]=min;\n            arr[minind]=temp;\n        }\n    }\n    if(swapind<0)\n    {\n        printf(\"0\\n\");\n    }\n    else\n    {\n        printf(\"%d\\n\", swapind+1);\n        for(i=0; i<=swapind; i++)\n        {\n            printf(\"%d %d\\n\", swaps[i][0], swaps[i][1]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.627163083377032, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "30fa64e52de6e61ce32fd1cefad20ff0", "bug_code_uid": "468da32bfcfeacbbc607391c4be2e3a1", "src_uid": "3ccc98190189b0c8e58a96dd5ad1245d", "apr_id": "b3ed90af30caaeda004fc98950f323ad", "difficulty": 1100, "tags": ["implementation", "greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,m;\n\t    scanf(\"%d %d\",&n,&m);\n\t    int a[50][50];\n\t    for(int i=0; i<n; i++)\n\t    {\n\t        for(int j=0; j<m; j++)\n\t        {\n\t            scanf(\"%d\",&a[i][j]);\n\t        }\n\t    }\n\t    for(int i=0; i<n; i++)\n\t    {\n\t        for(int j=0; j<m; j++)\n\t        {\n\t            if(a[i][j]==1)\n\t            {\n\t                a[i][i]=1;\n\t            }\n\t        }\n\t    }\n\t    for(int i=0; i<n; i++)\n\t    {\n\t        for(int j=0; j<m; j++)\n\t        {\n\t            if(a[j][i]==1)\n\t            {\n\t                a[i][i]=1;\n\t            }\n\t        }\n\t    }\n\t    int count=0;\n\t    int min=51;\n\t    if(n>=m)\n\t    {\n\t        min=m;\n\t    }\n\t    else\n\t    {\n\t        min=n;\n\t    }\n\t    for(int i=0; i<min; i++)\n\t    {\n\t        if(a[i][i]==0)\n\t        {\n\t            count++;\n\t        }\n\t    }\n\t    \n\t    if(count%2==0)\n\t    {\n\t        printf(\"Vivek\\n\");\n\t    }\n\t    else\n\t    {\n\t        printf(\"Ashish\\n\");\n\t    }\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    int n,m;\n\t    scanf(\"%d %d\",&n,&m);\n\t    int a[n][m];\n\t    int row=n,column=m,count=0;\n\t    for(int i=0; i<n; i++)\n\t    {\n\t        for(int j=0; j<m; j++)\n\t        {\n\t            scanf(\"%d\",&a[i][j]);\n\t            if(a[i][j]==1)\n\t            count++;\n\t        }\n\t        if(count>0)\n\t        {\n\t            row--;\n\t        }\n\t        count=0;\n\t    }\n\t    for(int i=0; i<m; i++)\n\t    {\n\t        for(int j=0; j<n; j++)\n\t        {\n\t            if(a[j][i]==1)\n\t            count++;\n\t        }\n\t        if(count>0)\n\t        {\n\t            column--;\n\t        }\n\t        count=0;\n\t    }\n\t    int min=51;\n\t    if(row>column)\n\t    {\n\t        min=column;\n\t    }\n\t    else\n\t    {\n\t        min=row;\n\t    }\n\t    if(min%2==0)\n\t    {\n\t        printf(\"Vivek\\n\");\n\t    }\n\t    else\n\t    {\n\t        printf(\"Ashish\\n\");\n\t    }\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6924603174603174, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5b30a00eb1df9354f3f7e5fa960a43d4", "bug_code_uid": "3935f5dd5f663c00fa8689a94d50b4b6", "src_uid": "c047040426e736e9085395ed9666135f", "apr_id": "666b163a7ac4a50058838a7d33c49552", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000000]={0};\n\nscanf(\"%lld\",&n);\n \n   for(i=2;i<1000007 && n>0;i++)\n   {\n    flag=0;\n     \n      for(j=2;j<i;j++){\n          if(i%j==0){\n              flag=1;\n              break;\n          }\n      }\n      if(flag==0){\n          a[i]=1;\n          printf(\"%lld \",i);\n          n--;\n      }\n   }\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000000]={0};\n\nscanf(\"%lld\",&n);\nm=100000;\nfor(i=0;i<n;i++){\n    printf(\"%lld \",m);\n    m++;\n}\n    \n   \n\nreturn 0;\n}\n"}
{"similarity_score": 0.5212121212121212, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "ca7c8b56f51c939b721e3e9de8794abd", "bug_code_uid": "7ca31d34011b2969ba143d28655fe685", "src_uid": "e59cddb6c941b1d7556ee9c020701007", "apr_id": "c0eb1d39c5103a081e6a8f0d475feef7", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint q,n,arr[110];\nint out,out_1,out_2,OUT;\nscanf(\"%d\",&q);\nfor(int i=0;i<q;i++){\nscanf(\"%d\",&n);\nfor(int j=0;j<n;j++){\nscanf(\"%d\",&arr[j]);\narr[j]=arr[j]%3;\nif(arr[j]==0){\nout++;\n}\nif(arr[j]==1){\nout_1=out_1+1;\n}\nelse if(arr[j]==2){\nout_2=out_2+1;\n}\n}\nif((out_2-out_1)<0){\nOUT=out_2;\n}\nelse{\nOUT=out_1;\n}\nout=out+OUT+((out_1-OUT)/3);\nprintf(\"%d\\n\",out);\nout=0;out_1=0;out_2=0;OUT=0;\n}\n}\n", "fixed": "#include<stdio.h>\n  int main(){\n  int q,n,arr[110];\n  int out=0;\n  int out_1=0;\n  int out_2=0;\n  int OUT=0;\n  scanf(\"%d\",&q);\n  for(int i=0;i<q;i++){\n  scanf(\"%d\",&n);\n  for(int j=0;j<n;j++){\n  scanf(\"%d\",&arr[j]);\n  arr[j]=arr[j]%3;\n  if(arr[j]==0){\n  out++;\n  }\n  if(arr[j]==1){\n  out_1=out_1+1;\n  }\n  else if(arr[j]==2){\n  out_2=out_2+1;\n  }\n  }\n  if((out_2-out_1)<0){\n  OUT=out_2;\n  }\n  else{\n  OUT=out_1;\n  }\n  if(out_1>out_2){\n  out=out+OUT+((out_1-OUT)/3);\n  }\n  else{\n  out=out+OUT+((out_2-OUT)/3);\n  }\n  printf(\"%d\\n\",out);\n  out=0;out_1=0;out_2=0;OUT=0;\n  }\n  }\n\n"}
{"similarity_score": 0.944963655244029, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4a5f804f6cf56f110340773222ebf4e9", "bug_code_uid": "2be9cc5e03e1cfe037fdebd7bdaf8c89", "src_uid": "d646834d58c519d5e9c0545df2ca4be2", "apr_id": "b7a6189daa9fb2b73a5919bbb6d921e8", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint mx(int a,int b)\n{\n    return (a>b)?a:b;\n}\n\nint main()\n{\n    int i,n,m,l,r,flag=0,max=-1;\n    scanf(\"%d%d\",&n,&m);\n    int a[n+1],b[n+1];\n    for(i=0;i<n;i++)\n\tscanf(\"%d%d\",&a[i],&b[i]);\n    l=a[0];\n    r=b[0];\n    if(l==0)\n    {\n\tfor(i=0;i<n;i++)\n\t{\n\t    if(r>=a[i])\n\t    {\n\t\tif(m<=b[i])\n\t\t    flag=1;\n\t\tl=a[i];\n\t\tr=mx(max,b[i]);\n\t    }\n\t}\n\tif(flag==1)\n\t    printf(\"YES\\n\");\n\telse\n\t    printf(\"NO\\n\");\n    }\n    else\n\tprintf(\"NO\\n\");\n    return 0;\n}   \n", "fixed": "#include<stdio.h>\n\nint mx(int a,int b)\n{\n    return (a>b)?a:b;\n}\n\nint main()\n{\n    int i,n,m,l,r,flag=0,max=-1;\n    scanf(\"%d%d\",&n,&m);\n    int a[n+1],b[n+1];\n    for(i=0;i<n;i++)\n\tscanf(\"%d%d\",&a[i],&b[i]);\n    l=a[0];\n    r=b[0];\n    if(l==0)\n    {\n\tfor(i=0;i<n;i++)\n\t{\n\t    if(a[i]<=r)\n\t    {\n\t\tif(m<=b[i])\n\t\t    flag=1;\n\t\tl=a[i];\n\t\tmax=mx(max,b[i]);\n\t\tr=max;\n\t    }\n\t}\n\tif(flag==1)\n\t    printf(\"YES\\n\");\n\telse\n\t    printf(\"NO\\n\");\n    }\n    else\n\tprintf(\"NO\\n\");\n    return 0;\n}   \n"}
{"similarity_score": 0.9942028985507246, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "13b22f0d1e28461d0369f8abd9c22b9f", "bug_code_uid": "f1383821c941fa8e749c62a4cc4ec02c", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "7bf7452f207d13b9249eb646c564d9ae", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char *argv[]){\n\tint n,i,back,front,c=0;\n\tchar k[100],x[100];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",&k);\n\tscanf(\"%s\",&x);\n\tfor(i=0;i<n;i++){\n\t\tfront = abs(k[i] - x[i]);\n\t\tback = 10 - front;\n\t\tif(front < back){\n\t\t\tc += front;\n\t\t}else{\n\t\t\tc += back;\n\t\t} \n\t}\n\tprintf(\"%d\",c);\t\t\t\t\t      \n\treturn 0;", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char *argv[]){\n\tint n,i,back,front,c=0;\n\tchar k[1000],x[1000];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",&k);\n\tscanf(\"%s\",&x);\n\tfor(i=0;i<n;i++){\n\t\tfront = abs(k[i] - x[i]);\n\t\tback = 10 - front;\n\t\tif(front < back){\n\t\t\tc += front;\n\t\t}else{\n\t\t\tc += back;\n\t\t} \n\t}\n\tprintf(\"%d\",c);\t\t\t\t\t      \n\treturn 0;\n}"}
{"similarity_score": 0.7818574514038877, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "03739443c2e910be4c82f7f8fbe74501", "bug_code_uid": "8454db9990b6a29bc58b5567b8639bf6", "src_uid": "5172d358f1d451b42efff1019219a54d", "apr_id": "e12cb7b17f30998ab3c2941cf0b616b2", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{float a,b;\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n\n\nscanf(\"%f %f\",&a,&b);\n    if((int)b%(int)(b+1)>=(b+1)/2 && (int)a%(int)(b+1)>=(b+1)/2)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{double a,b;\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n\n\nscanf(\"%lf %lf\",&a,&b);\n    if((long)b%(long)(b+1)>=(b+1)/2 && (long)a%(long)(b+1)>=(b+1)/2)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n}\n}\n"}
{"similarity_score": 0.25081645983017636, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "2602941c758d4ba3a7102e800b3f71d4", "bug_code_uid": "e4a0fdf414209150f3256d49df94f7c7", "src_uid": "3c8bfd3199a9435cfbdee1daaacbd1b3", "apr_id": "ae22fa11872d788e9ebc634b7995c201", "difficulty": 1200, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n \nvoid merge(int a[],int l,int r,int mid)\n{\n  int aux[r-l+1],i,j,k;\n  \n  for(k=l;k<=r;k++)\n  aux[k-l]=a[k];\n  i=l;\n  j=mid+1;\n  for(k=l;k<=r;k++)\n  {\n  \tif(i>mid)\n  \t{\n  \t\ta[k]=aux[j-l];\n  \t\tj++;\n\t  }\n\telse if(j>r)\n\t{\n\t\ta[k]=aux[i-l];\n\t\ti++;\n\t  }\n\telse if(aux[i-l]>aux[j-l])\n\t{\n\t\ta[k]=aux[j-l];\n\t\tj++;\n\t\t}\n\telse\n\t{\n\t\ta[k]=aux[i-l];\n\t\ti++;\n\t\t\t}\n\t  }\t\n\t\n}\n \nvoid merge_sort(int a[],int l,int r)\n{\n    if(l>=r)\n\treturn ;\n\tint mid=(l+r)/2;\n\tmerge_sort(a,l,mid);\n\tmerge_sort(a,mid+1,r);\n\tmerge(a,l,r,mid);\t\n\t\n}\n \n \nvoid mergesort(int a[],int l,int r)\n{\n\tmerge_sort(a,l,r-1);\n}\nint a[1000005],str[1000005]; \nint main()\n{\n\tint n,i,t,m;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint p=0,q=1;\n\t\tmemset(str,0,sizeof(str));\n        scanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\t\n\t\tmergesort(a,0,n);\n        if(n%2==1)\n\t\t{\n\t\t\tprintf(\"%d \",a[n/2]);\n\t\t}\n\t\tfor(i=n/2-1;i>=0;i--)\n\t\t{\n\t\t\tprintf(\"%d %d \",a[n-i-1],a[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n    }\n\t\n\t//system(\"pause\");\n\treturn 0;\n } ", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n \nint comp(const void*a,const void*b)\n{\n\treturn *(int*)a-*(int*)b;\n}\nint a[1000005]; \nint main()\n{\n\tint n,i,t,m;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint p=0,q=1;\n        scanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\t\n\t\tqsort(a,n,sizeof(a[0]),comp);\n        if(n%2==1)\n\t\t{\n\t\t\tprintf(\"%d \",a[n/2]);\n\t\t}\n\t\tfor(i=n/2-1;i>=0;i--)\n\t\t{\n\t\t\tprintf(\"%d %d \",a[n-i-1],a[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n    }\n\t\n\t//system(\"pause\");\n\treturn 0;\n } "}
{"similarity_score": 0.8455034588777863, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "04e73b3b3ee823e8952a6633c4c4247f", "bug_code_uid": "efd55edd3464ced3be579b987e8da3dd", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "46674ee2422fc4b09e5926771190f981", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\n#include<string.h>\nint main()\n{\n    long long int ch[100000];\n    char arr[1000000];\n    char kh[1000000],bh,ag;\n    int cp[400];\n    long long int a,b,c,d,e=0,g,i=0,tep=0,temp=0,j=0,k=0,l=0,m=0,n=0;\n    scanf(\"%lld\",&a);\n\n    j=0;\n    k=0;\n    for(i=1; i<=a; i++)\n    {\n        scanf(\"%lld\",&b);\n        if(b==0)\n        {\n            j++;\n        }\n        else if(b>0)\n        {\n            j+=b;\n            k++;\n\n        }\n        else\n        {\n            j-=b;\n            k++;\n        }\n\n\n    }\n    if(j-k!=0)\n        printf(\"%lld\\n\",j-k);\n    else\n        printf(\"2\\n\",);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\n\n#include<string.h>\nint main()\n{\n    long long int ch[100000];\n    char arr[1000000];\n    char kh[1000000],bh,ag;\n    int cp[400];\n    long long int a,b,c,d,e=0,g,i=0,tep=0,temp=0,j=0,k=0,l=0,m=0,n=0;\n    scanf(\"%lld\",&a);\n\n    j=0;\n    k=0;l=0;\n    for(i=1; i<=a; i++)\n    {\n        scanf(\"%lld\",&b);\n        if(b==0)\n        {\n            k++;\n        }\n        else if(b>0)\n        {\n            j+=b-1;\n           // k++;\n\n        }\n        else\n        {\n            j-=(b+1);\n            l++;\n        }\n\n\n    }\n    if(l%2!=0)\n     {\n       if(k>0)\n        j+=k;\n       else\n        j+=2;\n    }  \n    else\n     j+=k;\n        printf(\"%lld\\n\",j);\n    return 0;\n}"}
{"similarity_score": 0.044213263979193757, "equal_cnt": 8, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "5400aa8fd364a2ca199813809909c5cb", "bug_code_uid": "bb45b1fe640c92a25825b513a408cd0b", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "66eb538ed840a826c1fd5fdcdc80888e", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\n#include<algorithm>\n using namespace std;\n int main()\n {\n \tint n,a[100],i;\n \tcin>>n;\n \tint sum=0;\n \tfor(i=0;i<n;i++)\n\t {\n\t \tcin>>a[i];\n\t \tsum+=a[i];\n\t }\n\t sort(a,a+n);\n\t int mine=0;\n\t for(int e=i-1;;e--)\n\t {\n\t \tmine+=a[e];\n\t \tif(mine>sum/2)\n\t \t{\n\t \t\tcout<<i-e;\n\t \t\tbreak;\n\t\t }\n\t\t else\n\t\t continue;\n\t }\n\t return 0;\n }\n\t\t \t\t  \t \t \t \t   \t \t \t\t\t   \t\t\t", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tint n,i,sum=0,pass,temp,s=0;\n\tint a[120];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\n\t}\n\tfor(pass=1;pass<n;pass++)\n\t{\n\t\tfor(i=0;i<n-pass;i++)\n\t\t{\n\t\t\tif(a[i]<a[i+1])\n\t\t\t{\n\t\t\t\ttemp=a[i];\n\t\t\t\ta[i]=a[i+1];\n\t\t\t\ta[i+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;s<=sum*1.0/2;i++)\n\t{\n\t\ts=s+a[i];\n\t}\n\tprintf(\"%d\\n\",i);\n\treturn 0;\n}\n\t\t\t\t \t  \t\t  \t  \t  \t\t\t  \t\t\t \t \t"}
{"similarity_score": 0.9835443037974684, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4e8032f496963c250351bf0f10f6eb07", "bug_code_uid": "f877392a2a2616a492165264c074c05a", "src_uid": "92bf30e66f4d5ddebb697d2fa4fa0689", "apr_id": "9d38077727d458c03a22ccc2459a603b", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int t,b,p,f,h,c;\n  scanf(\"%d\",&t);\n  for(int i=1;i<=t;i++)\n  {\n      scanf(\"%d %d %d\",&b,&p,&f);\n      scanf(\"%d %d\",&h,&c);\n      if(h==c)\n      {\n          if(p+f>=(b/2))\n            printf(\"%d\\n\",((b/2)*h));\n          else\n            printf(\"%d\\n\",((p+f)*h));\n      }\n      else if(h>c)\n      {\n          if((b/2)>=(p+f))\n            printf(\"%d\\n\",(p*h+f*c));\n          else if((b/2)>p)\n            printf(\"%d\\n\",(p*h+((b/2)-p)*c));\n          else if((b/2)<p)\n            printf(\"%d\\n\",((b/2)*h));\n      }\n        else if(c>h)\n      {\n          if((b/2)>=(p+f))\n            printf(\"%d\\n\",(p*h+f*c));\n          else if((b/2)>f)\n            printf(\"%d\\n\",(f*c+((b/2)-f)*h));\n          else if((b/2)<p)\n            printf(\"%d\\n\",((b/2)*c));\n      }\n  }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int t,b,p,f,h,c;\n  scanf(\"%d\",&t);\n  for(int i=1;i<=t;i++)\n  {\n      scanf(\"%d %d %d\",&b,&p,&f);\n      scanf(\"%d %d\",&h,&c);\n      if(h==c)\n      {\n          if(p+f>=(b/2))\n            printf(\"%d\\n\",((b/2)*h));\n          else\n            printf(\"%d\\n\",((p+f)*h));\n      }\n      else if(h>c)\n      {\n          if((b/2)>=(p+f))\n            printf(\"%d\\n\",(p*h+f*c));\n          else if((b/2)>=p)\n            printf(\"%d\\n\",(p*h+((b/2)-p)*c));\n          else\n            printf(\"%d\\n\",((b/2)*h));\n      }\n        else if(c>h)\n      {\n          if((b/2)>=(p+f))\n            printf(\"%d\\n\",(p*h+f*c));\n          else if((b/2)>=f)\n            printf(\"%d\\n\",(f*c+((b/2)-f)*h));\n          else\n            printf(\"%d\\n\",((b/2)*c));\n      }\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.9943977591036415, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "848adc975e6e0fd8ca3cd63378a4ef25", "bug_code_uid": "693e2d6ea95f4da5b576f2e790791acb", "src_uid": "0ff4ac859403db4e29554ca7870f5490", "apr_id": "9222ce054270f565818172ebce2e5fbc", "difficulty": 1300, "tags": ["number theory", "*special", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<string.h>\n#include<stdio.h>\n#include<ctype.h>\n#include<time.h>\n#include<math.h>\n\n#define FOR(i,a,b)\tfor(i = a; i <= b; i++)\n#define ROF(i,a,b)\tfor(i = a; i >= b; i--)\n#define SWAP(a,b,t)\t{t = a; a = b; b = t;}\n#define LLI\tlong long int\n#define endl\tputs(\"\")\n#define MAX\t1000000005\n#define Max\t100001\n\nint arr[Max], H[Max];\nint i, j, k, s = 1, n, m, sum;\nint max;\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tFOR(i,0,n-1)\tscanf(\"%d\", arr+i), max += arr[i];\n\tfor(i = 1; i < n; i++){\n\t\tif(n % i || n / i <= 2) continue;\n\t\tfor(j = 0; j < n; j++)\n\t\t\tH[j % i] += arr[j];\n\t\tfor(j = 0; j < n; j++)\tif(H[j] > max)\tmax = H[j];\n\t\tfor(j = 0; j < i; j++)\tH[j] = 0;\n\t}\n\tprintf(\"%d\", max), endl;\n\treturn 0;\n}\n", "fixed": "#include<stdlib.h>\n#include<string.h>\n#include<stdio.h>\n#include<ctype.h>\n#include<time.h>\n#include<math.h>\n\n#define FOR(i,a,b)\tfor(i = a; i <= b; i++)\n#define ROF(i,a,b)\tfor(i = a; i >= b; i--)\n#define SWAP(a,b,t)\t{t = a; a = b; b = t;}\n#define LLI\tlong long int\n#define endl\tputs(\"\")\n#define MAX\t1000000005\n#define Max\t100001\n\nint arr[Max], H[Max];\nint i, j, k, s = 1, n, m, sum;\nint max;\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tFOR(i,0,n-1)\tscanf(\"%d\", arr+i), max += arr[i];\n\tfor(i = 1; i < n; i++){\n\t\tif(n % i || n / i <= 2) continue;\n\t\tfor(j = 0; j < n; j++)\n\t\t\tH[j % i] += arr[j];\n\t\tfor(j = 0; j < n; j++)\tif(H[j] > max && H[j])\tmax = H[j];\n\t\tfor(j = 0; j < i; j++)\tH[j] = 0;\n\t}\n\tprintf(\"%d\", max), endl;\n\treturn 0;\n}\n"}
{"similarity_score": 0.5812115891132572, "equal_cnt": 19, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "8de75f8b7dcfec55747da4ad3be1be92", "bug_code_uid": "03830c8222f4f036a188bf1ee292cb80", "src_uid": "102667eaa3aee012fef70f4192464674", "apr_id": "1db5a608b05cf71da549842f83dd489f", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n,m,i,j,count;\n\tint b[1000], a[1000];\n\tfloat c,temp;\n\n\tscanf (\"%d\", &n);\n\tfor (i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);}\n\tscanf (\"%d\", &m);\n\tfor (j=0;j<m;j++){\n\t\t\tscanf(\"%d\",&b[j]);}\n\nc=(float)b[0]/a[0];\ncount=0;\nfor (i=0;i<n;i++){\n\tfor (j=0;j<m;j++){\n\t\t\ttemp=(float)b[j]/a[i];\n\t\t\tif (b[j]%a[i]==0){\n\t\t\t\t\tif (temp>c)\n\t\t\t\t\t\t{c=temp;\n\t\t\t\t \t\tcount=1;}\n\t\t\t\t\telse if (temp==c)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\n\t\t\t\t\t\tcount++;}}}}\n\nprintf (\"%d\",count);\n\nreturn(0);\n}\n\n\n\n\t\n\t\t\n\t\t\t\t\t\n\t\t\t\n\t\t\t\n\n\n\n\t\n\t", "fixed": "#include<stdio.h>\n\nint main(){\n    int n,m,i,j,count;\n    int b[1000], a[1000];\n    float c,temp;\n\n    scanf (\"%d\", &n);\n    for (i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);}\n    scanf (\"%d\", &m);\n    for (j=0;j<m;j++){\n            scanf(\"%d\",&b[j]);}\n\nc=0;\ncount=0;\nfor (i=0;i<n;i++){\n    for (j=0;j<m;j++){\n            temp=(float)b[j]/a[i];\n            if (b[j]%a[i]==0){\n                    if (temp>c)\n                        {c=temp;\n                        count=1;}\n                    else if (temp==c)\n                        {\n                        \n                        count++;}}}}\n\nprintf (\"%d\",count);\n\nreturn(0);\n}\n\n"}
{"similarity_score": 0.8809746954076851, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "38dd3bc905d2f2ffc099f70b997792e0", "bug_code_uid": "ae8f37ac2eec0cdf3664836450c2592b", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "b1e3048d17623af17be38c64012ee559", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n;\n    while(scanf(\"%d\",&n)!=EOF){\n        int building[n+1],record[n+1];\n        for(int i=0;i<n;i++){\n            scanf(\"%d\",&building[i]);\n        }\n        int max=0;\n        for(int i=n-1;i>=0;i--){\n           if(building[i]>max) max=building[i];\n           if(building[i]==max) record[i]=max-building[i];\n            else record[i]=max-building[i]+1;\n        }\n        for(int i=0;i<n;i++){\n            printf(\"%d \",record[i]);\n        }\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n;\n    while(scanf(\"%d\",&n)!=EOF){\n        int building[n+1],record[n+1];\n        for(int i=0;i<n;i++){\n            scanf(\"%d\",&building[i]);\n        }\n        int max=0;\n        for(int i=n-1;i>=0;i--){\n           if(building[i]>max){\n                max=building[i];\n                record[i]=0;\n           }\n           else record[i]=max-building[i]+1;\n        }\n        for(int i=0;i<n;i++){\n            printf(\"%d \",record[i]);\n        }\n        printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.008403361344537815, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "21e73f80435a7eaa3ada7f38fabf29d4", "bug_code_uid": "5acf55c9b6e4119eaba9659ddcfe84ef", "src_uid": "fa256021dc519f526ef3878cce32ff31", "apr_id": "70ffa9aab0449592f54fb35c11cb0b8f", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": ".", "fixed": "#include <stdio.h>\n\n \nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint a[n];\n\t\n\tfor (int i = 0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\t\n\tfor (int i = 0; i < n-1; i++)\n\t{\n\t\tprintf(\"%d \", a[i]+a[i+1]);\n\t}\n\t\n\tprintf (\"%d \", a[n-1]);\n\treturn 0;\n}"}
{"similarity_score": 0.9727699530516432, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4cecd03a83108c9e64ecb5827513dbe3", "bug_code_uid": "44dbfeb3fc2f02a46ccde2ab99364be8", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "de8ebf0e1384824914a38659c9408138", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\n    char s[100008];\n\n    gets(s);\n    int length,i,Acount=0,Bcount = 0;\n\n    length=strlen(s);\n    for (i = 0;i<length;i++){\n            if (s[i]== 'A'&& s[i+1]=='B'){\n                    Acount++;\n                    if (Acount ==1)i++;\n            }\n            else if (s[i]== 'B'&& s[i+1]=='A'){\n                    Bcount++;\n                    if (Bcount ==1)i++;\n            }\n\n    }\n    if (Acount >0 && Bcount >0)printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\n    char s[100008];\n\n    gets(s);\n    int length,i,Acount=0,Bcount = 0;\n\n    length=strlen(s);\n    for (i =length -1;i>=0;i--){\n            if (s[i]== 'A'&& s[i+1]=='B'){\n                    Acount++;\n                    if (Acount ==1)i--;\n            }\n            else if (s[i]== 'B'&& s[i+1]=='A'){\n                    Bcount++;\n                    if (Bcount ==1)i--;\n            }\n\n    }\n    if (Acount >0 && Bcount >0)printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n    return 0;\n\n}\n"}
{"similarity_score": 0.9961389961389961, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6c66d9db62af1eda9d4d36d2bcc31abc", "bug_code_uid": "a901da286574243d1f85af471e50cc34", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "6c008d3e8dd2b486524aa9bf5f912f82", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i,j,a,b,d=1,n,m,limit=0;\n    int k[100000];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        limit=limit+a;\n        while(d<=limit)\n        {\n            k[d]=i;\n            d++;\n        }\n    }\n    scanf(\"%d\",&m);\n    for(j=1;j<=n;j++)\n    {\n        scanf(\"%d\",&b);\n        printf(\"%d\\n\",k[b]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,j,a,b,d=1,n,m,limit=0;\n    int k[1000000];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        limit=limit+a;\n        while(d<=limit)\n        {\n            k[d]=i;\n            d++;\n        }\n    }\n    scanf(\"%d\",&m);\n    for(j=1;j<=m;j++)\n    {\n        scanf(\"%d\",&b);\n        printf(\"%d\\n\",k[b]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.12113055181695828, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "91369e15e008598a0e569a616053594c", "bug_code_uid": "a24b33305bebd237b98080ed9da3201a", "src_uid": "7c778289806ceed506543ef816c587c9", "apr_id": "cff399584cfa9385cb30db10ceac0b35", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\nint storage[1][2];\nstruct solve{\n    int status;\n    int value;\n}arr[250000];\nint main(){\nstorage[0][0]=INT_MAX;\nint a,b,c,d,e,f,g;\nint first=0;\nscanf(\"%d%d%d\",&a,&b,&c);\nint i;int added=0;\nfor(i=0;i<a;i++){\nscanf(\"%d\",&arr[i+1].value);\n}\nfor(i=0;i<c;i++){\nint x,y;\nscanf(\"%d%d\",&x,&y);\nif(x==2){\nif(arr[y].status==1){\n        printf(\"YES\\n\");\n}\nelse{ printf(\"NO\\n\");\n        }\n}\nif(x==1 && added!=b){\narr[y].status=1;\nif(arr[y].value<storage[0][0]){\nstorage[0][0]=arr[y].value;\nstorage[0][1]=y;\n}\nadded++;\n}\nelse if(x==1 && added==b){\nif(arr[y].value>storage[0][0]){\narr[storage[0][1]].status=0;\nstorage[0][0]=arr[y].value;\nstorage[0][1]=y;\narr[y].status=1;\n}}\n}\n}\n", "fixed": "#include<stdio.h>\n#include<limits.h>\nint storage[25][22];\nstruct solve{\n    int status;\n    int value;\n}arr[250000];\nint main(){\nint a,b,c,d,e,f,g;\nint first=0;\nscanf(\"%d%d%d\",&a,&b,&c);\nint i;int added=0;\nfor(i=0;i<a;i++){\nscanf(\"%d\",&arr[i+1].value);\n}\nfor(i=0;i<c;i++){\nint x,y;\nscanf(\"%d%d\",&x,&y);\nif(x==2){\nif(arr[y].status==1){\n        printf(\"YES\\n\");\n}\nelse{ printf(\"NO\\n\");\n        }\n}\nif(x==1 && added!=b){\narr[y].status=1;\nstorage[first][0]=arr[y].value;\nstorage[first++][1]=y;\nadded++;\n}\nelse if(x==1 && added==b){\nint min=INT_MAX;\nfor(f=0;f<b;f++){\nif(storage[f][0]<min){\n    min=storage[f][0];\n}\n}\nfor(f=0;f<b;f++){\nif(storage[f][0]==min && arr[y].value>min){\narr[storage[f][1]].status=0;\nstorage[f][0]=arr[y].value;\nstorage[f][1]=y;\narr[y].status=1;\nbreak;\n}\n}\n}\n}\n}\n"}
{"similarity_score": 0.9974811083123426, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "005df1e5f89434e3e41a87956774dd60", "bug_code_uid": "81f1ff41b3d147954b1355c9ed5b40c8", "src_uid": "c3f080681e3da5e1290ef935ff91f364", "apr_id": "341ef45f68f474af5cf8e4836b5d2a00", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,m,i,j=0,T=0;\n    scanf(\"%d%d\",&n,&m);\n    int c[n],a[m];\n    for (i=0; i<n; i++)\n        scanf(\"%d\",&c[i]);\n    for (i=0; i<m; i++)\n        scanf(\"%d\",&a[i]);\n    for (i=0; i<n; i++)\n    {\n        if(a[j]>=c[i])\n        {\n            T++;\n            j++;\n            if(j>=m-1)\n                break;\n        }\n    }\n    printf(\"%d\\n\",T);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,m,i,j=0,T=0;\n    scanf(\"%d%d\",&n,&m);\n    int c[n],a[m];\n    for (i=0; i<n; i++)\n        scanf(\"%d\",&c[i]);\n    for (i=0; i<m; i++)\n        scanf(\"%d\",&a[i]);\n    for (i=0; i<n; i++)\n    {\n        if(a[j]>=c[i])\n        {\n            T++;\n            j++;\n            if(j>=m)\n                break;\n        }\n    }\n    printf(\"%d\\n\",T);\n    return 0;\n}\n"}
{"similarity_score": 0.37746478873239436, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "c9958a1593eaaf09817a28a67c7e87f0", "bug_code_uid": "05b33203ce031813657d71fb395e19f6", "src_uid": "ace9fbabc2eda81b4e4adf4f2d5ad402", "apr_id": "3a43bba82e45428e978fcb06eef6430a", "difficulty": 1700, "tags": ["dp", "implementation", "greedy", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define INF\t100001\n\nint main() {\n\tint d, v, a[9];\n\tint good, min, dmin, amin = INF, dcnt[9] = { 0 };\n\n\tscanf(\"%d\", &v);\n\tgood = 0;\n\tfor (d = 0; d < 9; d++) {\n\t\tscanf(\"%d\", &a[d]);\n\t\tif (amin > a[d])\n\t\t\tamin = a[d];\n\t\tif (v >= a[d])\n\t\t\tgood = 1;\n\t}\n\tif (!good) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\twhile (v > 0) {\n\t\tmin = INF;\n\t\tfor (d = 8; d >= 0; d--)\n\t\t\tif (min > a[d] && (v - a[d] >= amin || v - a[d] == 0)) {\n\t\t\t\tmin = a[d];\n\t\t\t\tdmin = d;\n\t\t\t}\n\t\tv -= min;\n\t\tdcnt[dmin]++;\n\t}\n\tfor (d = 9; d >= 1; d--)\n\t\twhile (dcnt[d - 1]-- > 0)\n\t\t\tprintf(\"%d\", d);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define INF\t(10e5 + 1)\n\nint main() {\n\tint d, v, aa[9], n, min, minsum;\n\n\tscanf(\"%d\", &v);\n\tmin = INF;\n\tfor (d = 0; d < 9; d++) {\n\t\tscanf(\"%d\", &aa[d]);\n\t\tif (min > aa[d])\n\t\t\tmin = aa[d];\n\t}\n\tif (v < min) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tn = v / min;\n\tminsum = (n - 1) * min;\n\twhile (n-- > 0)\n\t\tfor (d = 8; d >= 0; d--)\n\t\t\tif (v - aa[d] >= minsum) {\n\t\t\t\tprintf(\"%d\", d + 1);\n\t\t\t\tv -= aa[d];\n\t\t\t\tminsum -= min;\n\t\t\t\tbreak;\n\t\t\t}\n\tprintf(\"\\n\");\n}\n"}
{"similarity_score": 0.3344392833443928, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "6d5cdf4cc1c7ec8fc97ca804b7c97458", "bug_code_uid": "63744bb5479ef24c9d3a096dab0dfb2e", "src_uid": "541fde3a3c40926cbd1edb6017b83e52", "apr_id": "f7ab403dd9effada68946d740739a22d", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n\n\nint main() {\n\nlong long int n,i,cont=0;\n\nscanf(\"%I64d\",&n);\nlong long int  a[n];\n\nfor (i=0;i<n;i++)\n{\n\n\tscanf(\"%I64d\",&a[i]);\n}\n\nlong long int aux[n];\nfor (i=0;i<n;i++)\n{\n\n\taux[i]=a[i];\n}\n\n\n\nint cambio=1;\nint j,p;\nlong long int auxi=0;\np=n;\n\twhile (cambio==1){\n\t\tcambio=0;\n\t\tfor (j=0 ; j<p;j++)\n\t{\n\t\t\n\t\tif (aux[j] >aux[j+1])\n\t\t{\n\t\tcambio=1;\n\t\tauxi= aux[j];\n\t\taux[j]=aux[j+1];\n\t\taux[j+1]=auxi;\n\t\t}\n\t\t\n\t\t\n\t}\n\tp--;\n\t\t\n\t}\n\n\n\n\nfor (i=0;i<n;i++)\n{\n\tif (aux[i]==a[i])\n\t{\n\t\tcont++;\n\t\t\n\t}\n\n}\n\n\nif (n-cont==2)\n{\n\tprintf(\"YES\");\n}\nelse\nprintf(\"NO\");\n\n\n\n\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid ordenarvector(long int aux[], long int ini, long int fin);\n\nint main() {\n\n long int n,i,cont=0;\n\nscanf(\"%I64d\",&n);\n long int  a[n];\n long int aux[n];\nfor (i=0;i<n;i++)\n{\n\n\tscanf(\"%I64d\",&a[i]);\n\taux[i]=a[i];\n}\n\n\n\n\n\nint cambio=1;\nint j,p;\nlong long int auxi=0;\np=n;\n\t\n\tordenarvector(aux,0,n-1); \n\n\n\nfor (i=0;i<n;i++)\n{\n\tif (aux[i]==a[i]) // cuenta cuantos datos son iguales uno a uno\n\t{\n\t\tcont++;\n\t\t\n\t}\n\n}\n\n\nif (n-cont<=2  ) //\n{\n\tprintf(\"YES\");\n}\nelse\nprintf(\"NO\");\n\n\n\n\n}\n\n\n\tvoid ordenarvector( long int aux[], long int ini, long int fin){\n\tint i,j,central,pivote,auxiliar;\n\tcentral=(ini+fin)/2;\n\tpivote=aux[central];\n\ti=ini;\n\tj=fin;\n\twhile(i<j){\n\t\twhile(aux[i]<pivote) i++;\n\t\twhile(aux[j]>pivote) j--;\n\t\tif(i<=j){\n\t\t\tauxiliar=aux[i];\n\t\t\taux[i]=aux[j];\n\t\t\taux[j]=auxiliar;\n\t\t\tj--;\n\t\t\ti++;\n\t\t}\t\t\n\t}\n\tif(ini<j)\n\t\tordenarvector(aux,ini,j);\n\tif(i<fin)\n\t\tordenarvector(aux,i,fin);\n\t\n}"}
{"similarity_score": 0.9974093264248705, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ac3e1c56aaab7a909e89ef6a3011b6a8", "bug_code_uid": "ac09c3bd6ac166454b1bf8a83b8c1c5c", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "845945ea0e095a61a6e710a70758b567", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAXN 100010\nint num[MAXN];\nint main(){\n    int i,n,t,sum=0,temp=1,s=0,max;\n    scanf(\"%d%d\",&n,&t);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&num[i]);\n    for(i=1;i<=n;i++){\n        s+=num[i];\n        sum++;\n        while(sum>t){\n            s-=num[temp++];\n            sum--;\n        }\n        if(sum>max)max=sum;\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define MAXN 100010\nint num[MAXN];\nint main(){\n    int i,n,t,sum=0,temp=1,s=0,max;\n    scanf(\"%d%d\",&n,&t);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&num[i]);\n    for(i=1;i<=n;i++){\n        s+=num[i];\n        sum++;\n        while(s>t){\n            s-=num[temp++];\n            sum--;\n        }\n        if(sum>max)max=sum;\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.3782696177062374, "equal_cnt": 19, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "e421db5674ba5c6d46ea1e180fd4d46e", "bug_code_uid": "3c7d8be4ed5e6fa1ce6bb0280ef742ef", "src_uid": "d638f524fe07cb8e822b5c6ec3fe8216", "apr_id": "54baee7f657c55d2ad0d438f75ab89e6", "difficulty": 900, "tags": ["brute force", "greedy", "math", "number theory", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<vector>\r\n#include<string.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nchar s[200010];\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s\",s);\r\n        int n=strlen(s);\r\n           vector<int> a(n+1),b(n+1);\r\n        long long sum=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(s[i]=='0'||s[i]=='?')\r\n            {\r\n                a[i+1]=b[i]+1;\r\n            }\r\n            if(s[i]=='1'||s[i]=='?')\r\n                b[i+1]=a[i]+1;\r\n            sum+=max(a[i+1],b[i+1]);\r\n        }\r\n        printf(\"%lld\\n\",sum);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint a[2010];\r\nint b[2010];\r\nint gcd(int a,int b)\r\n{\r\n    return b==0?a:gcd(b,a%b);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int n;\r\n    int f;\r\n \r\n    int k;\r\n    while(t--)\r\n    {\r\n        k=0;\r\n        int m=0;\r\n        int m1=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n \r\n            if(a[i]%2==0)\r\n            {\r\n                a[m1++]=a[i];\r\n            }\r\n            else\r\n            {\r\n                b[m++]=a[i];\r\n            }\r\n        }\r\n        for(int i=m1;i<m1+m;i++)\r\n            a[i]=b[i-m1];\r\n        int sum=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            for(int j=i+1;j<n;j++)\r\n            {\r\n                if(gcd(a[i],2*a[j])>1)\r\n                {\r\n                    sum++;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n}"}
{"similarity_score": 0.9922480620155039, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "099d2ff6e328dd05fc64cce828c1ba4f", "bug_code_uid": "a3120c93cdb85461173808b302d27639", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "8d4c409f3df561c0bb22848eb8b08569", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    char s1[100][100];\n    int i,n,j,temp=0;\n    scanf(\"%d \",&n);\n    for(i=0;i<n;i++)\n    {\n        gets(s1[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n-1;j++)\n        {\n            if((s1[i][j]=='O')&&(s1[i][j+1]=='O'))\n               {\n                   temp=1;\n                   s1[i][j]='+';\n                   s1[i][j+1]='+';\n                   break;\n               }\n               if(temp)\n               {\n                   break;\n               }\n        }\n        if(temp)\n        {\n            break;\n        }\n    }\n    if(!temp)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n    if(temp)\n    {\n        printf(\"YES\\n\");\n        for(i=0;i<n;i++)\n       {\n        puts(s1[i]);\n       }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    char s1[1000][10];\n    int i,n,j,temp=0;\n    scanf(\"%d \",&n);\n    for(i=0;i<n;i++)\n    {\n        gets(s1[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<4;j++)\n        {\n            if((s1[i][j]=='O')&&(s1[i][j+1]=='O'))\n               {\n                   temp=1;\n                   s1[i][j]='+';\n                   s1[i][j+1]='+';\n                   break;\n               }\n               if(temp)\n               {\n                   break;\n               }\n        }\n        if(temp)\n        {\n            break;\n        }\n    }\n    if(!temp)\n    {\n        printf(\"NO\");\n        return 0;\n    }\n    if(temp)\n    {\n        printf(\"YES\\n\");\n        for(i=0;i<n;i++)\n       {\n        puts(s1[i]);\n       }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9580514208389715, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "877f3a40344102d66151c99da181fc73", "bug_code_uid": "451eb178c47a42f03d46355b1de99db7", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "d1ec00f838c824cdccc9903299a4f2b4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int total=0,n,count=-1,i[100],j[100],k,l=0;\n    scanf(\"%d\" ,&n);\n    for(k=0;k<n-1;k++)\n    {\n        scanf(\"%d\" ,&i[k]);\n    }\n    for(k=0;k<2;k++)\n    {\n        scanf(\"%d\" ,&j[k]);\n        count++;\n    }\n    for(k=1;k<j[count];k++)\n    {\n        total=total+i[l];\n        l++;\n    }\n    printf(\"%d\" ,total);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int total=0,n,count=-1,i[100],j[100],k,l=0;\n    scanf(\"%d\" ,&n);\n    for(k=0;k<n-1;k++)\n    {\n        scanf(\"%d\" ,&i[k]);\n    }\n    for(k=0;k<2;k++)\n    {\n        scanf(\"%d\" ,&j[k]);\n        count++;\n    }\n    l=j[0]-1;\n    for(k=j[0];k<j[count];k++)\n    {\n        total=total+i[l];\n        l++;\n    }\n    printf(\"%d\" ,total);\n    return 0;\n}\n"}
{"similarity_score": 0.9261992619926199, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d9f54257ccf2f884a5cc0527927386c4", "bug_code_uid": "99e555cc0da574ebd0fc87ceb5b957ae", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "5f3060075e3272933605800f6808ca65", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\n \r\nint main()\r\n{\t\r\n\tint k, j = 0, i = 0;\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\r\n\t\tscanf(\"%d\", &k);\r\n\t\tfor (i = 1; j<k; i++)\r\n\t\t{\r\n\t\t\tif (i % 3 != 0 && i % 10 != 3)\r\n\t\t\t{\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", i - 1);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n \r\n \r\nint main()\r\n{\t\r\n\t\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\tint k, j = 0, i = 0;\r\n\t\tscanf(\"%d\", &k);\r\n\t\tfor (i = 1; j<k; i++)\r\n\t\t{\r\n\t\t\tif (i % 3 != 0 && i % 10 != 3)\r\n\t\t\t{\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", i - 1);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9912826899128269, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "60bd82dadcc56470722e6e27a0b25d14", "bug_code_uid": "bb227eaad3d6bd883709e7d15db067c1", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "3b5cdd1f70accc7b33f76bc35857847e", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX_N 30000\nint main() {\n\tint n,t;\n\tint i;\n\tint a[MAX_N];\n\t//30000*30000*4byte=3-600-000-000byte=3.6G\n\tscanf(\"%d%d\",&n,&t);\n\tt=t-1;//\u6211\u4ece\u96f6\u5f00\u59cb\u8ba1\u7b97\uff0c\u9898\u76ee\u4e2d\u4ece\u4e00\u5f00\u59cb\u8ba1\u7b97\uff0c\u8fd9\u91cc\u7b97\u662f\u505a\u51fa\u4e00\u4e2a\u8f6c\u6362\uff01\n\tprintf(\"n=%d,t=%d\\n\",n,t);\n\tfor(i=0;i<n-1;i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t\tprintf(\"%d->%d\\n\",i,i+a[i]);\n\t}\n\t//\u6211\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n\tint queue[2*MAX_N];\n\tint visited[MAX_N];\n\tint start=0;int end=0;\n\tqueue[end]=0;\n\t//\u4e00\u52a0\u5165\u5c31\u4ee3\u8868\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\uff01\n\tvisited[queue[end]]=1;\n\tend++;\n\twhile(start<end) {\n\t\t//\u8fd9\u91cc\u6211\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770bqueue\u7684\u5185\u5bb9\uff01\n\t\tfor(i=start;i<end;i++) {\n\t\t\tprintf(\" %d\",queue[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tint top=queue[start];\n\t\tstart++;\n\t\tif (top==t) {\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor(i=0;i<n;i++) {\n\t\t\tif(i==top && !visited[i+a[i]]){\n\t\t\t\tqueue[end]=i+a[i];\n\t\t\t\tvisited[queue[end]]=1;\n\t\t\t\tend++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"NO\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define MAX_N 30000\nint main() {\n\tint n,t;\n\tint i;\n\tint a[MAX_N];\n\t//30000*30000*4byte=3-600-000-000byte=3.6G\n\tscanf(\"%d%d\",&n,&t);\n\tt=t-1;//\u6211\u4ece\u96f6\u5f00\u59cb\u8ba1\u7b97\uff0c\u9898\u76ee\u4e2d\u4ece\u4e00\u5f00\u59cb\u8ba1\u7b97\uff0c\u8fd9\u91cc\u7b97\u662f\u505a\u51fa\u4e00\u4e2a\u8f6c\u6362\uff01\n\t//printf(\"n=%d,t=%d\\n\",n,t);\n\tfor(i=0;i<n-1;i++) {\n\t\tscanf(\"%d\",&a[i]);\n\t\t//printf(\"%d->%d\\n\",i,i+a[i]);\n\t}\n\t//\u6211\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n\tint queue[2*MAX_N];\n\tint visited[MAX_N];\n\tint start=0;int end=0;\n\tqueue[end]=0;\n\t//\u4e00\u52a0\u5165\u5c31\u4ee3\u8868\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\uff01\n\tvisited[queue[end]]=1;\n\tend++;\n\twhile(start<end) {\n\t\t//\u8fd9\u91cc\u6211\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770bqueue\u7684\u5185\u5bb9\uff01\n\t\t/*\n\t\tfor(i=start;i<end;i++) {\n\t\t\tprintf(\" %d\",queue[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t*/\n\t\tint top=queue[start];\n\t\tstart++;\n\t\tif (top==t) {\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor(i=0;i<n;i++) {\n\t\t\tif(i==top && !visited[i+a[i]]){\n\t\t\t\tqueue[end]=i+a[i];\n\t\t\t\tvisited[queue[end]]=1;\n\t\t\t\tend++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"NO\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.7394209354120267, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c4c22c6ecefbf6b9a294e921d53db4b5", "bug_code_uid": "5810f73b63ab778662a8c54f7ff97ca0", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "d7df5f096dc1e81a1a1bf3136aaaf875", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,i,n;\n\tscanf(\"%d\",&t);\n\twhile(t!=0)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tif(n%2==0)\n\t\t{\n\t\t\tprintf(\"%d\",n/2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\",n/2+1);\n\t\t}\n\t\tt--;\n\t}\n\treturn 0;\n}\n\t\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t,i;\n\tscanf(\"%d\",&t);\n\tint n[t];\n\tfor(i=0;i<t;i++)\n\t{\n\t\tscanf(\"%d\",&n[i]);\n\t}\n\tfor(i=0;i<t;i++)\n\t{\n\t\tif(n[i]%2==0)\n\t\t{\n\t\t\tprintf(\"%d\\n\",n[i]/2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\\n\",(n[i]/2)+1);\n\t\t}\n\t}\n\treturn 0;\n}\n\t\n\n"}
{"similarity_score": 0.37522768670309653, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "beb89ba95f94db9f3f681d3fec0cc0f0", "bug_code_uid": "ada48f47b11b3847844e735232d35867", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "8eeb99ed374550d7aace3e48ece2782a", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long x,d;\n    int i,count=0,n;\n    char c;\n    scanf(\"%d %lld\",&n,&x);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %c %lld\",&c,&d);\n        if(c=='+') x=x+d;\n        else if(c=='-'&& x>=d) x=x-d;\n        else count++;\n    }\n    printf(\"%lld %d\",&x,&count);\n}", "fixed": "#include <stdio.h>\nint main(){\nlong long int x, n,d, i;\nint count=0;\nchar c; \nscanf(\"%lld%lld\",&n,&x);\nfor(i=0;i<n;i++){\nscanf(\" %c %lld\",&c,&d); \nif( c=='+'){\nx=x+d;}\nelse if( c=='-'){\nif(x>=d)\n x=x-d; \nelse{\ncount++;\n}}}\nprintf(\"%lld %d\",x,count ) ;}"}
{"similarity_score": 0.138003136434919, "equal_cnt": 35, "replace_cnt": 25, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 35, "lang": "GNU C", "fix_code_uid": "67937db115d507465b9ab04e9e1b77da", "bug_code_uid": "fddb465740ab8dd4a0afad72d87d17a7", "src_uid": "1a740b0ad2ec3ed208f01fc7b64e00d4", "apr_id": "0ff976b7df3ee47bfcc1e5ff0f0fdd28", "difficulty": 1500, "tags": ["dfs and similar", "brute force", "shortest paths"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nstruct cdnt{\n  int x;\n  int y;\n};\n\nint main(void){\n  int st_firing,i,j,s,k,n,m,latest=0;\n  struct cdnt *fire,last;\n  scanf(\"%d %d\",&n,&m);\n  //map=(int **)calloc(n,sizeof(int *));\n  //for(i=0;i<n;i++) map[i]=(int *)calloc(m,sizeof(int));]]\n  scanf(\"%d\",&k);\n  fire=(struct cdnt *)calloc(k,sizeof(struct cdnt));\n  for(i=0;i<k;i++) scanf(\"%d %d\",&fire[i].x,&fire[i].y);\n  // for(i=0;i<k;i++) printf(\"%d %d\\n\",fire[i].x,fire[i].y);\n  for(i=0;i<n;i++){\n    for(j=0;j<m;j++){\n      st_firing=5000;\n      for(s=0;s<k;s++){\n    if(st_firing>abs(fire[s].x-1-i)+abs(fire[s].y-1-j))\n      st_firing=abs(fire[s].x-1-i)+abs(fire[s].y-1-j);\n      }\n      if(latest<st_firing){\n    latest=st_firing;\n    last.x=i;\n    last.y=j;\n      }\n    }\n  }\n  printf(\"%d %d\\n\",last.x+1,last.y+1);\n      //for(i=0;i<n;i++) free(map[i]);\n      //free(map);\n  free(fire);\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n#define MAX 2000\n\nint main(int argc, char **argv) {\n    int n, m, k;\n    int i, j, l;\n    int x[10];\n    int y[10];\n    int res_x = 0, res_y = 0;\n    int time = 0;\n    int candidate;\n\n    FILE *fd_in = fopen(\"input.txt\", \"r\");\n    FILE *fd_out = fopen(\"output.txt\", \"w\");\n\n    fscanf(fd_in, \"%d %d %d\", &n, &m, &k);\n\n    for (i = 0; i < k; i++) {\n        fscanf(fd_in, \"%d %d\", &x[i], &y[i]);\n        x[i]--;\n        y[i]--;\n    }\n\n    for(i = 0; i < n; i++) {\n        for(j = 0; j < m; j++) {\n            candidate = 2 * MAX;\n            for(l = 0; l < k; l++) {\n                int value = abs(i - x[l]) + abs(j - y[l]);\n                if (value < candidate) {\n                    candidate = value;\n                }\n            }\n            if (candidate > time) {\n                time = candidate;\n                res_x = i; \n                res_y = j;\n            }\n        }\n    }\n\n    fprintf(fd_out, \"%d %d\\n\", res_x + 1, res_y + 1);\n\n    return 0;\n}"}
{"similarity_score": 0.8613728129205922, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "2bfba943148b3d549a6fbf8b65487bd6", "bug_code_uid": "c21bd01aacca577b4c96e6523e6527af", "src_uid": "0ce05499cd28f0825580ff48dae9e7a9", "apr_id": "528e8781f5d18fe8947af6d5f47df43b", "difficulty": 1200, "tags": ["brute force", "implementation", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 1; i <= t; i++)\r\n    {\r\n        int n, count = 0;\r\n        scanf(\"%d\", &n);\r\n        int arr[n + 1];\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        for (int i = 1; i < n; i++)\r\n        {\r\n            int x = arr[i], p = (2 * i + 1) / x;\r\n            int j = p * x - i;\r\n            while (j <= n)\r\n            {\r\n                if ((arr[j] * arr[i] == i + j) && (i < j))\r\n                {\r\n                    count++;\r\n                }\r\n                p++;\r\n                j=p*x-i;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", count);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 1; i <= t; i++)\r\n    {\r\n        int n, count = 0;\r\n        scanf(\"%d\", &n);\r\n        long long int arr[n + 1];\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%lld\", &arr[i]);\r\n        }\r\n        for (int i = 1; i < n; i++)\r\n        {\r\n            long long int x = arr[i], j;\r\n            j = x - i;\r\n            while (j <= n)\r\n            {\r\n                if (j > 0)\r\n                {\r\n                    if ((arr[j] * arr[i] == i + j) && (i < j))\r\n                    {\r\n                        count++;\r\n                    }\r\n                }\r\n                j = j + x;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", count);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9341527655838455, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e2401ca280f26da30faf087f44d3e7df", "bug_code_uid": "e61525b89e50df10413bd83f89c973cb", "src_uid": "45e51f3dee9a22cee86e1a98da519e2d", "apr_id": "4a9833bb8e65d2166365415c26a5f000", "difficulty": 800, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long n,i,j;\n    int count,count1=0;\n    scanf(\" %ld\",&n);\n    long a[1000];\n    for(i =0;i<n;i++)\n    {\n       scanf(\"%ld\",&a[i]);\n    }\n    for(i =1;i<n;i++)\n    {\n        count=0;\n        for(j=0;j<i;j++)\n        {\n            if(a[j]==a[i])\n            {\n                count++;\n            }\n\n         }\n         if(count==1)\n            count1++;\n         if(count>1)\n         {\n            count1=-1;\n            goto m;\n\n        }\n     }\n     m:\n     printf(\"%d\",count1);\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long n,i,j;\n    int count,count1=0;\n    scanf(\" %ld\",&n);\n    long a[1000];\n    for(i =0;i<n;i++)\n    {\n       scanf(\"%ld\",&a[i]);\n    }\n    for(i =1;i<n;i++)\n    {\n        count=0;\n        if(a[i]==0)\n            continue;\n        else\n            for(j=0;j<i;j++)\n            {\n               if(a[j]==a[i])\n               {\n                count++;\n               }\n\n            }\n         if(count==1)\n            count1++;\n         if(count>1)\n         {\n            count1=-1;\n            goto m;\n\n        }\n     }\n     m:\n     printf(\"%d\",count1);\n     return 0;\n}\n"}
{"similarity_score": 0.9242009132420091, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "00aee74513f2beada384fa0ced00374a", "bug_code_uid": "6d9208bfddd9d3df7c1b1d63b06cd680", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "69eb5f72484b724bc01ee7403fb680eb", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\nint main()\n{\n    long long int n;\n    scanf(\"%lld\",&n);\n   long long  int ara[100000];\n   long long int c[100000];\n    long long int i,j,t,k,max=INT_MIN;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&ara[i]);\n    }\n    for(i=n-1;i>=0;i--)\n    {\n        if(max<ara[i])\n        {\n            max=ara[i];\n        }\n        if(ara[i]<max)\n        {\n            c[i]=max+1-ara[i];\n        }\n        else\n        {\n            c[i]=0;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%lld \",c[i]);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<limits.h>\nint main()\n{\n    long long int n;\n    scanf(\"%lld\",&n);\n   long long  int ara[100000];\n   long long int c[100000];\n    long long int i,j,t,k,max=INT_MIN;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&ara[i]);\n    }\n    for(i=n-1;i>=0;i--)\n    {\n        if(max<ara[i])\n        {\n            max=ara[i];\n            c[i]=0;\n        }\n       else\n        {\n            c[i]=max+1-ara[i];\n        }\n        \n    }\n    for(i=0;i<n;i++)\n    {\n        printf(\"%lld \",c[i]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9627059843885516, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ccbbc9b3bd9a80af822ef1486855a88e", "bug_code_uid": "6536cee2b6b058c7bf4c5d81550e6b44", "src_uid": "d5549c0627c236d82541a67ccbe7977d", "apr_id": "bafc7d7b72f47125b8aa0aaa514404de", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n, a, b;\r\n\tscanf(\"%d\\n\", &n);\r\n\tfor(int i=0; i<n; i++)\r\n\t{\r\n\t\tscanf(\"%d %d\\n\", &a, &b);\r\n\t\tchar c[1][a][a];\r\n\t\tif(b>(a+1)/2)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(int j=0; j<a; j++)\r\n\t\t\t{\r\n\t\t\t\tfor(int k=0; k<a; k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(j%2==0 && k%2==0 && j==k)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tc[0][j][k]='R';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tc[0][j][k]='.';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int j=0; j<a; j++)\r\n\t\t\t{\r\n\t\t\t\tfor(int k=0; k<a; k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%c\", c[0][j][k]);\r\n\t\t\t\t}\r\n\t\t\t\tprintf(\"\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n, a, b;\r\n\tscanf(\"%d\\n\", &n);\r\n\tfor(int i=0; i<n; i++)\r\n\t{\r\n\t\tscanf(\"%d %d\\n\", &a, &b);\r\n\t\tint count=0;\r\n\t\tchar c[1][a][a];\r\n\t\tif(b>(a+1)/2)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(int j=0; j<a; j++)\r\n\t\t\t{\r\n\t\t\t\tfor(int k=0; k<a; k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(j%2==0 && k%2==0 && j==k && count<b)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tc[0][j][k]='R';\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tc[0][j][k]='.';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int j=0; j<a; j++)\r\n\t\t\t{\r\n\t\t\t\tfor(int k=0; k<a; k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%c\", c[0][j][k]);\r\n\t\t\t\t}\r\n\t\t\t\tprintf(\"\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.9913686806411838, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b186c94b2891c5901100131d3fcc6218", "bug_code_uid": "bbb1f2d90065dca881fe40ea334b6438", "src_uid": "f336b622fdaf5960032268641320bb53", "apr_id": "aa864317628d4f5c246f7975af7b477a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n , m ;\nscanf(\"%d%d\",&n,&m);\nint s[m+1];\nfor(int i=1;i<(m+1);i++)\n   s[i]=1;\nint a , b ;\nfor(int i;i<n;i++)\n{   \n scanf(\"%d%d\",&a,&b);\n for(int j=a;j<=b;j++)\n     s[j]=0;\n                      }\nint k=0;\nfor(int i=1;i<=m;i++)\n   {\n    if(s[i]==1)\n       k++;\n     }\nprintf(\"%d\",k);\nfor(int i=1;i<=m;i++)\n   if(s[i]==1)\n      printf(\"%d \",s[i]);\n                        }\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n , m ;\nscanf(\"%d%d\",&n,&m);\nint s[m+1];\nfor(int i=1;i<(m+1);i++)\n   s[i]=1;\nint a , b ;\nfor(int i;i<n;i++)\n{   \n scanf(\"%d%d\",&a,&b);\n for(int j=a;j<=b;j++)\n     s[j]=0;\n                      }\nint k=0;\nfor(int i=1;i<=m;i++)\n   {\n    if(s[i]==1)\n       k++;\n     }\nprintf(\"%d\\n\",k);\nfor(int i=1;i<=m;i++)\n   if(s[i]==1)\n      printf(\"%d \",i);\n                        }\n"}
{"similarity_score": 0.8786764705882353, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c713f6e27f928c9bd0e5c9e05109c8e4", "bug_code_uid": "ae18935820fa96e48643ff5a2b2be4bd", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "ab09fc48e0006ba7c3ab96575b782f2b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,t=0;\n    scanf(\"%d\",&n);\n    char s[n][3];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(s[i-1][3]!=s[i][3])t++;\n    }\n    printf(\"%d\",t);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,n,t=0;\n    scanf(\"%d\",&n);\n    char s[n][3];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s[i]);\n    }\n    s[n][3]='\\0';\n    for(i=1;i<n;i++)\n    {\n        if(strcmp(s[i-1],s[i])!=0) t++;\n    }\n    printf(\"%d\",t+1);\n    return 0;\n\n}\n"}
{"similarity_score": 0.9821958456973294, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "53fe0ac6aee215f2ff532941cc0d0537", "bug_code_uid": "5acf5cbd07bedefff341423ad0ad89d5", "src_uid": "0690e2df87f60e5be34505d9e2817032", "apr_id": "380b396c44df7bc17d3fb97a6aa57c14", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n     int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        long long int n;\r\n        scanf(\"%lld\",&n);\r\n        if((n-4)%3!=0){\r\n            printf(\"%lld\",((n-4)/3));}\r\n            else{\r\n                printf(\"%lld\",((n-4)/3)-1);\r\n            }printf(\"\\n\");\r\n        }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n     int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        long long int n;\r\n        scanf(\"%lld\",&n);\r\n        if((n-4)%3!=0){\r\n            printf(\"%lld\",(((n-4)+(n-4)%3)/3)-1);}\r\n            else{\r\n                printf(\"%lld\",((n-4)/3)-1);\r\n            }printf(\"\\n\");\r\n        }\r\n    return 0;\r\n}"}
{"similarity_score": 0.6006944444444444, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "f90ff6691c332cbb00c15efc8b52f8e3", "bug_code_uid": "4332ecba35f8ca5682eb18d4c69625c1", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "da301c98f6bf625c0b4abaf2ff6c97c6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tint a,b,c;\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\tlong long int x=c/2;\n\t\tlong long int ans=0;\n\t\tif(k%2==0)\n\t\t\tans=x*(a-b);\n\t\telse if(k%2!=0){\n\t\t\tans=x*(a-b);\n\t\t\tx++;\n\t\t\t}\n\t\t\tprintf(\"%d\",ans);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n \nint main()\n{\n\tint q,p;\n\tscanf(\"%d\",&q);\n\tfor(p=0;p<q;p++)\n\t{\n\t\tint a,b,k;\n\t\tscanf(\"%d%d%d\",&a,&b,&k);\n\t\tlong long int x=k/2;\n\t\tlong long int ans=0;\n\t\t\n\t\tif(k%2==0)\n\t\t{\n \n\t\t\tans=x*(a-b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=x*(a-b);\n\t\t\tans+=a;\n\t\t\t\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9138034960819771, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "8f634ba904986d47801605a4e6c5f86b", "bug_code_uid": "13d61365915e84d39ba7941f97c9eca8", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "899177805c5ca5eb9e065d20d185dafb", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*\n * forces.c\n *\n *  Created on: 19/lug/2016\n *      Author: andrea\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void){\n\tunsigned int num;\n\tscanf(\"%u\", &num);\n\tint *directions = malloc(sizeof(unsigned int)*num);\n\tunsigned int i, j, found, min, currcord, glower, low;\n\tchar c;\n\tgetchar();\n\tfor(i = 0; i < num; i++){\n\t\tscanf(\"%c\", &c);\n\t\tif(c == 'L')directions[i] = -1;\n\t\tif(c == 'R')directions[i] = 1;\n\t}\n\tfound = 0;\t\n\tglower = 1;\n\tfor(i = 0; i < num; i++){\n\t\tgetchar();\n\t\tscanf(\"%u\", &currcord);\n\t\tif(glower && directions[i] == 1){\n\t\t\tlow = currcord;\n\t\t\tglower = 0;\n\t\t}\n\t\tif(!glower && directions[i] == -1){\n\t\t\tif(!found){\n\t\t\t\tmin = (currcord - low)/2;\n\t\t\t\tfound = 1;\n\t\t\t}\t\t\t\n\t\t\tmin = min > (currcord - low)/2 ? (currcord - low)/2 : min;\n\t\t\tglower = 1;\n\t\t}\n\t}\n\n\tif(!found) printf(\"-1\");\n\telse printf(\"%u\", min);\n\treturn 0;\n}\n", "fixed": "/*\n * forces.c\n *\n *  Created on: 19/lug/2016\n *      Author: andrea\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void){\n\tunsigned int num;\n\tscanf(\"%u\", &num);\n\tint *directions = malloc(sizeof(unsigned int)*num);\n\tunsigned int i, j, found, min, currcord, glower, low;\n\tchar c;\n\tgetchar();\n\tfor(i = 0; i < num; i++){\n\t\tscanf(\"%c\", &c);\n\t\tif(c == 'L')directions[i] = -1;\n\t\tif(c == 'R')directions[i] = 1;\n\t}\n\tfound = 0;\t\n\tglower = 0;\n\tfor(i = 0; i < num; i++){\n\t\tgetchar();\n\t\tscanf(\"%u\", &currcord);\n\t\tif(directions[i] == 1){\n\t\t\tlow = currcord;\n\t\t\tglower = 1;\n\t\t}\n\t\tif(glower && directions[i] == -1){\n\t\t\tif(!found){\n\t\t\t\tmin = (currcord - low)/2;\n\t\t\t\tfound = 1;\n\t\t\t}\t\t\t\n\t\t\tmin = min > (currcord - low)/2 ? (currcord - low)/2 : min;\n\t\t\tglower = 0;\n\t\t}\n\t}\n\n\tif(!found) printf(\"-1\");\n\telse printf(\"%u\", min);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9555555555555556, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a974c546317a6c000e24ae58af318547", "bug_code_uid": "b7e1b5b7666df03c0ae662a0662e0b75", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "f611cd74fef74bb35802fa6dd9b4b638", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{int i,j,n,a,t1=0,t2=0,c=0;\nscanf(\"%d\",&n);\nint ara[n];\nfor(i=0;i<n;i++)\n  { scanf(\"%d\",&ara[i]);}\n   for(i=0;i<n;i++)\n      {  t1=t1+ara[i];}\nfor(i=0;i<n;i++)\n  { for(j=i+1;j<n;j++)\n       {  if(ara[i]>ara[j])\n            { a=ara[i];\n              ara[i]=ara[j];\n              ara[j]=a;\n            }\n        }\n   }\n    for(j=n-1;j>=0;j--)\n      { t2=t2+ara[j];\n    if(t2>(t1/2))\n       {break;}\n    c=c+1;\n    }\nprintf(\"%d\",c);\n\n\nprintf(\"\\n\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{int i,j,n,a,t1=0,t2=0,c=0;\nscanf(\"%d\",&n);\nint ara[n];\nfor(i=0;i<n;i++)\n  { scanf(\"%d\",&ara[i]);}\n   for(i=0;i<n;i++)\n      {  t1=t1+ara[i];}\nfor(i=0;i<n;i++)\n  { for(j=i+1;j<n;j++)\n       {  if(ara[i]>ara[j])\n            { a=ara[i];\n              ara[i]=ara[j];\n              ara[j]=a;\n            }\n        }\n   }\n    for(j=n-1;j>=0;j--)\n      { t2=t2+ara[j];\n      c++;\n    if(t2>(t1/2))\n     {\n         break;\n     }\n    }\nprintf(\"%d\",c);\n\n\nprintf(\"\\n\");\nreturn 0;\n}\n"}
{"similarity_score": 0.9338942307692307, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "1dcc1763c18b94a0936d489e743aa2e3", "bug_code_uid": "a81781641c20067c93d2e755baceb182", "src_uid": "add2285f3f710eb41185d6a83e44b37a", "apr_id": "b061dd683e1622d6e6140cde3eee7497", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a, b, n, i, aux;\n    int used[100000] = {0};\n\n    scanf(\"%d %d\", &a, &b);\n    // Applying formula of n\n    n=a+b+1;\n\n    // If they only climb the mountain\n    if (a==0)\n    {\n        for (i=1;i<=n;++i)\n        {\n            printf(\"%d \", n-i+1);\n        }\n        printf(\"\\n\");\n    }\n    else if (b==0) // If they only walking down the mountain\n    {\n        for (i=1;i<=n;++i)\n        {\n            printf(\"%d \", i);\n        }\n    }\n    else\n    {\n        for (i=n-a;i<=n;++i)\n        {\n            printf(\"%d \", i);\n            used[i] = 1;\n        }\n\n        for (i=b;i>0;--i)\n        {\n            aux = n;\n            while (used[aux] == 1 && aux > 0) --aux;\n            printf(\"%d \", aux);\n            used[aux] = 1;\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int a, b, n, i, aux;\n    int used[100000] = {0};\n    memset(used,0,sizeof(used));\n\n    scanf(\"%d %d\", &a, &b);\n    // Applying formula of n\n    n=a+b+1;\n\n    // If they only climb the mountain\n    if (a==0)\n    {\n        for (i=1;i<=n;++i)\n        {\n            printf(\"%d \", n-i+1);\n        }\n        printf(\"\\n\");\n    }\n    else if (b==0) // If they only walking down the mountain\n    {\n        for (i=1;i<=n;++i)\n        {\n            printf(\"%d \", i);\n        }\n    }\n    else\n    {\n        for (i=n-a;i<=n;++i)\n        {\n            printf(\"%d \", i);\n            used[i] = 1;\n        }\n        aux = n;\n        for (i=b;i>0;--i)\n        {\n            while (used[aux] == 1 && aux > 0) --aux;\n            printf(\"%d \", aux);\n            used[aux] = 1;\n        }\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9980119284294234, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7132b5a21257bcde1369d79cd8f66a68", "bug_code_uid": "b7f716517235bd0f03d0f8f4bee0333f", "src_uid": "cb5cbfb4d184cda21ebfbcf47bb970dc", "apr_id": "a65ac284a2a635e2b74fc6eb043ab734", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n, m;\n\tint x[100000];\n\tint y[100000];\n\tint i, j, ret = 1;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &x[i]);\n\tfor (i = 0; i < m; i++)\n\t\tscanf(\"%d\", &y[i]);\n\tn -= 1;\n\tm -= 1;\n\tfor (i = 1; i < n; i++)\n\t\tx[i] += x[i - 1];\n\tfor (i = 1; i < m; i++)\n\t\ty[i] += y[i - 1];\n\ti = j = 0;\n\twhile (i < n && j < n) {\n\t\tif (x[i] == y[j]) {\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tret++;\n\t\t} else if (x[i] < y[j]) {\n\t\t\ti++;\n\t\t} else {\n\t\t\tj++;\n\t\t}\n\t}\n\tprintf(\"%d\", ret);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n, m;\n\tint x[100000];\n\tint y[100000];\n\tint i, j, ret = 1;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &x[i]);\n\tfor (i = 0; i < m; i++)\n\t\tscanf(\"%d\", &y[i]);\n\tn -= 1;\n\tm -= 1;\n\tfor (i = 1; i < n; i++)\n\t\tx[i] += x[i - 1];\n\tfor (i = 1; i < m; i++)\n\t\ty[i] += y[i - 1];\n\ti = j = 0;\n\twhile (i < n && j < m) {\n\t\tif (x[i] == y[j]) {\n\t\t\ti++;\n\t\t\tj++;\n\t\t\tret++;\n\t\t} else if (x[i] < y[j]) {\n\t\t\ti++;\n\t\t} else {\n\t\t\tj++;\n\t\t}\n\t}\n\tprintf(\"%d\", ret);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9989539748953975, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "25c1b149ce8e4bf6a40f03f3b73b08a5", "bug_code_uid": "9790e1570960575a639b1dd81e293719", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "f36d164acd071c87ae8d04a5c0cbc2ff", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include<stdio.h>\r\nint main()\r\n{\r\n\tlong long a,b[3],max=0,count;\r\n\tscanf(\"%lld\",&a);\r\n\twhile(a--)\r\n\t{\r\n\t\tcount=0;\r\n\t\tmax=0;\r\n\t\tscanf(\"%lld %lld %lld\",&b[0],&b[1],&b[2]);\r\n\t\tfor(int i=0;i<3;i++)\r\n\t\t{\r\n\t\t\tif(max<b[i])\r\n\t\t\t{\r\n\t\t\t\tmax=b[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int j=0;j<3;j++)\r\n\t\t{\r\n\t\t\tif(max==b[j])\r\n\t\t\t{\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tswitch(count)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\tif(max==b[0])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"0 %lld %lld\",max+1-b[1],max+1-b[2]);\r\n\t\t\t\t}\r\n\t\t\t\tif(max==b[1])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%lld 0 %lld\",max+1-b[0],max+1-b[2]);\r\n\t\t\t\t}\r\n\t\t\t\tif(max==b[2])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%lld %lld 0\",max+1-b[0],max+1-b[1]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\tif(max>b[0])\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%lld 1 1\",max+1-b[0]);\r\n\t\t\t}\r\n\t\t\telse if(max>b[1])\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %lld 1\",max+1-b[1]);\r\n\t\t\t}\r\n\t\t\telse if(max>b[0])\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 1 %lld\",max+1-b[2]);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\tprintf(\"1 1 1\");\t\r\n\t\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "# include<stdio.h>\r\nint main()\r\n{\r\n\tlong long a,b[3],max=0,count;\r\n\tscanf(\"%lld\",&a);\r\n\twhile(a--)\r\n\t{\r\n\t\tcount=0;\r\n\t\tmax=0;\r\n\t\tscanf(\"%lld %lld %lld\",&b[0],&b[1],&b[2]);\r\n\t\tfor(int i=0;i<3;i++)\r\n\t\t{\r\n\t\t\tif(max<b[i])\r\n\t\t\t{\r\n\t\t\t\tmax=b[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int j=0;j<3;j++)\r\n\t\t{\r\n\t\t\tif(max==b[j])\r\n\t\t\t{\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tswitch(count)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\tif(max==b[0])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"0 %lld %lld\",max+1-b[1],max+1-b[2]);\r\n\t\t\t\t}\r\n\t\t\t\tif(max==b[1])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%lld 0 %lld\",max+1-b[0],max+1-b[2]);\r\n\t\t\t\t}\r\n\t\t\t\tif(max==b[2])\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%lld %lld 0\",max+1-b[0],max+1-b[1]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\tif(max>b[0])\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%lld 1 1\",max+1-b[0]);\r\n\t\t\t}\r\n\t\t\telse if(max>b[1])\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %lld 1\",max+1-b[1]);\r\n\t\t\t}\r\n\t\t\telse if(max>b[2])\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 1 %lld\",max+1-b[2]);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\tprintf(\"1 1 1\");\t\r\n\t\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7667402501839587, "equal_cnt": 29, "replace_cnt": 12, "delete_cnt": 6, "insert_cnt": 11, "fix_ops_cnt": 29, "lang": "GNU C11", "fix_code_uid": "9d680641ad7f72d850e2d07eedfc4137", "bug_code_uid": "70fc5b0a579dc0662cb21c0468668674", "src_uid": "dd2cd365d7afad9c2b5bdbbd45d87c8a", "apr_id": "054f06050e6af5dde2fcb97c4ff3440d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i,j,k,n,s[100000],x[100000],sum=0;\n    scanf(\"%d\",&t);\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=0; j<n; j++)\n        {\n            scanf(\"%d\",&s[j]);\n        }\n        for(j=0; j<n; j++)\n        {\n            for(k=j+1;k<n;k++)\n            {\n          if(s[k]-s[j]==1 || s[k]-s[j]==-1)\n            {\n                sum++;\n                break;\n            }\n            }\n            \n        }\n        if(sum==1)\n        {\n            x[i]=2;\n            sum=0;\n        }\n        else\n            x[i]=1;\n    }\n    for(i=0; i<t; i++)\n    {\n        printf(\"%d\\n\",x[i]);\n    }\n\n    return 0;\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,s[100],x[100],i,j,k,m=0;\n    scanf(\"%d\",&t);\n    for(i=1; i<=t; i++)\n    {\n        scanf(\"%d\",&n);\n        for(j=1; j<=n; j++)\n        {\n            scanf(\"%d\",&s[j]);\n        }\n\n        for(j=1; j<=n; j++)\n        {\n            for(k=j+1; k<=n; k++)\n            {\n                if((s[j]-s[k])==1 || (s[j]-s[k])==-1)\n                {\n                    m=1;\n                    x[i]=2;\n                    break;\n                }\n            }\n\n        }\n        if(m==0)\n                x[i]=1;\n                m=0;\n    }\n\n    for(i=1; i<=t; i++)\n    {\n        printf(\"%d\\n\",x[i]);\n    }\n\n    return 0;\n}\n//  4 4 2 10 1 20 2 3 6 5 2 3 4 99 100 1 42"}
{"similarity_score": 0.4744852282900627, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "fa5c55ae014a6a91d6dfc5ec823bec52", "bug_code_uid": "36190313d7a7921b82731064e5ba887f", "src_uid": "d563ce32596b54f48544a6085efe5cc5", "apr_id": "07b9b4c8f6d9509c00598d8ef1fa723b", "difficulty": 1700, "tags": ["dp", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar ch[200005];\nint main()\n{\n\tint n,m,i,f1=0,f2=0;\n\tscanf(\"%d%d%s\",&n,&m,ch);\n\tfor(i=0;i<n;i++)\n\t{ if(ch[i]=='.') f1=i; \n\t  if(ch[i]>='5'&&f1) f2=i;}\n\tfor(i=f2;i>=f1+1&&f2;i--) \n   {\n   \tif(ch[i]<='4') break;\n\tif(ch[i]>='5'&&ch[i]<='9'&&m) { ch[i]='\\0';ch[i-1]++;m--;}\n    if(ch[i]>'9') {ch[i-1]++;ch[i]='\\0';}\n   }\n    if(ch[f1]=='.'+1) {ch[f1]='\\0',ch[f1-1]++;}\n    for(i=f1-1;i>=1&&f2;i--)\n    {\n    \tif(ch[i]>'9') ch[i]='0',ch[i-1]++;\n    \telse break;\n    }\n    if(ch[0]>'9') printf(\"10%s\\n\",ch+1);\n    else printf(\"%s\\n\",ch);\n} ", "fixed": "#include<stdio.h>\nchar ch[200005];\nint main()\n{\n\tint n,m,i,f1=0,f2=0;\n\tscanf(\"%d%d%s\",&n,&m,ch);\n\tfor(i=0;i<n;i++)\n\t{ if(ch[i]=='.') f1=i; \n\t  if(ch[i]>='5'&&f1) {f2=i;break;}\n    } \n\tfor(i=f2;i>=f1+1&&f2;i--) \n   {\n   \tif(ch[i]<='4') break;\n\tif(ch[i]>='5'&&ch[i]<='9'&&m) { ch[i]='\\0';ch[i-1]++;m--;}\n    if(ch[i]>'9') {ch[i-1]++;ch[i]='\\0';}\n   }\n    if(ch[f1]=='.'+1) {ch[f1]='\\0',ch[f1-1]++;}\n    for(i=f1-1;i>=1&&f2;i--)\n    {\n    \tif(ch[i]>'9') ch[i]='0',ch[i-1]++;\n    \telse break;\n    }\n    if(ch[0]>'9') printf(\"10%s\\n\",ch+1);\n    else printf(\"%s\\n\",ch);\n}"}
{"similarity_score": 0.3387815750371471, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "3598b2506e507b732ab3056cab433da5", "bug_code_uid": "e801431daf1abb0e976edbd67dbaee4f", "src_uid": "4ebea3f56ffd43efc9e1496a0ef7fa2d", "apr_id": "26af78eca17158993672ad42014ec255", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\nint power(int base, int exponent)\n{\n\tif (exponent==0)\n\t{\n\t\treturn 1;\n\t}\n\n\tint result = base;\n\tfor (int i = 1; i < exponent; ++i)\n\t{\n\t\tresult *= base;\n\t}\n\treturn result;\n}\n\nint main(int argc, char const *argv[])\n{\n\tint n = atoi(argv[1]);\n\tint max = 0;\n\n\tint i = 0;\n\twhile(i < n/2)\n\t{\n\t\tmax += power(10, i);\n\t\ti++;\n\t}\n\n\tif (n % 2 == 1)\n\t{\n\t\tmax += 6 * power(10, i-1);\n\t}\n\n\tprintf(\"%i\\n\", max);\n\treturn 0;\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\nint main(int argc, char const *argv[])\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tif (n >= 3 && n%2 == 1)\n\t{\n\t\tprintf(\"7\");\n\t\tn = n-3;\n\t}\n\n\twhile (n>=2)\n\t{\n\t\tprintf(\"1\");\n\t\tn = n-2;\n\t}\n\n\tprintf(\"\\n\");\n}"}
{"similarity_score": 0.9054263565891473, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "61db867ff59cb5c685bd08d5eba221f5", "bug_code_uid": "0933f7b98754883f267e733b46ce2566", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "d9a62a80dbd0c84231c3948288e87e05", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,q,n;\n    scanf(\"%d\",&q);\n    for(i=1;i<=q;i++)\n    {\n      scanf(\"%d\",&n);\n      if(n<4)\n      {\n          printf(\"%d\\n\",4-n);\n      }\n      if(n%2==0)\n      {\n          printf(\"0\\n\");\n      }\n      else\n      {\n          printf(\"1\\n\");\n      }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,q,n;\n    scanf(\"%d\",&q);\n    for(i=1;i<=q;i++)\n    {\n        scanf(\"%d\",&n);\n        if(n<4)\n        {\n            printf(\"%d\\n\",4-n);\n        }\n        else if(n%2==0)\n        {\n            printf(\"0\\n\");\n        }\n        else\n        {\n            printf(\"1\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9969604863221885, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f02ebeeb44e8f3bf3671420161ef7e95", "bug_code_uid": "80522791c5cce7b48c3d4d92fd35ebea", "src_uid": "5c63f91eb955cb6c3172cb7c8f78976c", "apr_id": "c2633ae46488c04429ca529f537f3d4d", "difficulty": 1100, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,num, i, maxNum=0,j=0;\n    int arr[5001];\n    int cards[10000];\n    scanf(\"%d\", &n);\n    memset(arr, 0, 5001*sizeof(int));\n\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\", &num);\n        arr[num]++;\n        if(num > maxNum)\n            maxNum = num;\n    }\n    for(i = 0; i <= maxNum;i++)\n    {\n        if(arr[i])\n        {\n            cards[j++] = i;\n            arr[i]--;\n        }\n    }\n    for(i = maxNum-1; i > 0; i--)\n    {\n        if(arr[i])\n        {\n            cards[j++] = i;\n            arr[i]--;\n        }\n    }\n\n    printf(\"%d\\n\",j);\n\n    for(i=0;i<j;i++)\n        printf(\"%d \",cards[i]);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,num, i, maxNum=0,j=0;\n    int arr[5001];\n    int cards[10000];\n    scanf(\"%d\", &n);\n    memset(arr, 0, 5001*sizeof(int));\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &num);\n        arr[num]++;\n        if(num > maxNum)\n            maxNum = num;\n    }\n    for(i = 0; i <= maxNum;i++)\n    {\n        if(arr[i])\n        {\n            cards[j++] = i;\n            arr[i]--;\n        }\n    }\n    for(i = maxNum-1; i > 0; i--)\n    {\n        if(arr[i])\n        {\n            cards[j++] = i;\n            arr[i]--;\n        }\n    }\n\n    printf(\"%d\\n\",j);\n\n    for(i=0;i<j;i++)\n        printf(\"%d \",cards[i]);\n\n    return 0;\n}"}
{"similarity_score": 0.997946611909651, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f687b60c0e2f7009203cdc95ab9beb43", "bug_code_uid": "78f56cdd23a95de7689462b1185adcf8", "src_uid": "07e56d4031bcb119d2f684203f7ed133", "apr_id": "b162519c959de042877cec7e5da23b5b", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long n;\n        scanf(\"%ld\",&n);\n        if(n%4)\n          printf(\"NO\\n\");\n        else\n          printf(\"YES\\n\");\n    }\n    return 0\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long n;\n        scanf(\"%ld\",&n);\n        if(n%4)\n          printf(\"NO\\n\");\n        else\n          printf(\"YES\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9354838709677419, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "183c6bec4ff6521ae20447c87520f728", "bug_code_uid": "98218d31610031150fe3d639b05e3ba7", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "95e1eaf7482e0bdf9cbb568fd0e4d32a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c=0,d=0,n,i;\n    scanf(\"%d\",&n);\n\n    for(i=1;i<=n;i++){\n        scanf(\"%d %d\",&a,&b);\n\n        if(a>b){\n            c++;\n        }\n        else{\n            d++;\n        }\n    }\n\n    if(c>d)\n        printf(\"Mishka\\n\");\n    else if(c==d)\n        printf(\"Friendship is magic!^^\\n\");\n    else\n        printf(\"Chris\\n\");\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c=0,d=0,n,i;\n    scanf(\"%d\",&n);\n\n    for(i=1;i<=n;i++){\n        scanf(\"%d %d\",&a,&b);\n\n        if(a>b){\n            c++;\n        }\n        else if(a==b){\n            c=c+0;\n        }\n        else{\n            d++;\n        }\n    }\n\n    if(c>d)\n        printf(\"Mishka\\n\");\n    else if(c==d)\n        printf(\"Friendship is magic!^^\\n\");\n    else\n        printf(\"Chris\\n\");\n\n    return 0;\n}"}
{"similarity_score": 0.9672424061941632, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "23be116781c27943ce45684b87aa89f1", "bug_code_uid": "74d8023bec354a15bd0fc9e53a664a13", "src_uid": "8237ac3f3c2e79f5f70be1595630207e", "apr_id": "fdd3bc248426796af47781446e9847f9", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n    int l,i,count=0,ans=0,updown=0,rightleft=0;\n    char ara[100009];\n    scanf(\"%s\",ara);\n    l=strlen (ara);\n    if(l%2)\n        ans=-1;\n    else\n    {\n        for(i=0; i<l; i++)\n        {\n            if(ara[i]=='R')\n                rightleft++;\n            else if(ara[i]=='U')\n                updown++;\n            else if(ara[i]=='L')\n                rightleft--;\n            else if(ara[i]=='D')\n                updown--;\n        }\n        rightleft=abs(rightleft);\n        updown=abs(updown);\n        if(updown>=rightleft)\n        {\n            updown=updown-rightleft;\n            ans=updown/2;\n        }\n        else\n        {\n            rightleft=rightleft-updown;\n            ans=rightleft/2;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n    int l,i,count=0,ans=0,updown=0,rightleft=0;\n    char ara[100009];\n    scanf(\"%s\",ara);\n    l=strlen (ara);\n    if(l%2)\n        ans=-1;\n    else\n    {\n        for(i=0; i<l; i++)\n        {\n            if(ara[i]=='R')\n                rightleft++;\n            else if(ara[i]=='U')\n                updown++;\n            else if(ara[i]=='L')\n                rightleft--;\n            else if(ara[i]=='D')\n                updown--;\n        }\n        rightleft=abs(rightleft);\n        updown=abs(updown);\n        if(updown>=rightleft)\n        {\n            ans+=rightleft;\n            updown=updown-rightleft;\n            ans+=updown/2;\n        }\n        else\n        {\n            ans+=updown;\n            rightleft=rightleft-updown;\n            ans+=rightleft/2;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.6951026856240127, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e6d867d5a50108c80bb36fe5a85c1d10", "bug_code_uid": "1ecef1c8aa7e6116e150f5b71113fa50", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "3ff430c81553106858ef9bb10fe50d42", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint f,i,j,k,t=0,n,v;\n\tscanf(\"%d %d\",&n,&v);\n\tint d,ara[n];\n\n\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&k);\n\t\tfor(j=0;j<k;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&d);\n\t\t\tif(v>d)\n\t\t\t{\n\t\t\t\tara[t]=i+1;\n\t\t\t\tt++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",t);\n\tfor(i=0;i<t;i++)\n\t\tprintf(\"%d \",ara[i]);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint f,i,j,k,t=0,n,v;\n\tscanf(\"%d %d\",&n,&v);\n\tint d,ara[n];\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tf=0;\n\t\tscanf(\"%d\",&k);\n\t\tfor(j=0;j<k;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&d);\n\t\t\tif(v>d && f==0)\n\t\t\t{\n\t\t\t\tara[t]=i+1;\n\t\t\t\tt++;\n\t\t\t\tf=1;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",t);\n\tfor(i=0;i<t;i++)\n\t\tprintf(\"%d \",ara[i]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9899497487437185, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1f0f43865f2dc1d1d31072100ecb76c3", "bug_code_uid": "208a4661ff89b9797b5484da469692e5", "src_uid": "206eb67987088843ef42923b0c3939d4", "apr_id": "92d78f43723c942dc13c3328d2439a76", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint a, b, n; \nint ans[100001] = {0}; \nint printed = 0; \n\nvoid addDig(int num[], int r, int numDig) {\n  int i;\n  if (numDig >= n) {\n    if(printed == 0){\n      printf(\"%d\", a);\n      for(i = 0; i < n; i++) \n\tprintf(\"%d\", ans[i]);\n      printed = 1;  \n    }\n    return;\n  }\n  \n  int temp;\n  for(i = 0; i < 10; i++) {\n    temp = (a *10 + i)%b;\n    if (temp == 0) {\n      num[numDig] = i;\n      numDig++;\n      addDig(num, temp*10, numDig); \n    }\n  }\n}\n\nint main() {\n  scanf(\"%d %d %d\", &a, &b, &n);\n\n  addDig(ans, 10*a, 0);\n \n  if(printed == 0)\n    printf(\"-1\");\n\n  return 0; \n}\n\n", "fixed": "#include <stdio.h>\n \nint a, b, n; \nint ans[100001] = {0}; \nint printed = 0; \n\nvoid addDig(int num[], int r, int numDig) {\n  int i;\n  if (numDig >= n) {\n    if(printed == 0){\n      printf(\"%d\", a);\n      for(i = 0; i < n; i++) \n\tprintf(\"%d\", num[i]);\n      printed = 1;  \n    }\n    return;\n  }\n  \n  int temp;\n  for(i = 0; i < 10; i++) {\n    temp = (r + i)%b;\n    if (temp == 0) {\n      num[numDig] = i;\n      numDig++;\n      addDig(num, temp*10, numDig); \n    }\n  }\n}\n\nint main() {\n  scanf(\"%d %d %d\", &a, &b, &n);\n\n  addDig(ans, 10*a, 0);\n \n  if(printed == 0)\n    printf(\"-1\");\n\n  return 0; \n}\n\n"}
{"similarity_score": 0.9499718943226532, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1c9e2b9c4aaa009f708de043dac09c95", "bug_code_uid": "bbe48f67038574dc893b7cce0459e4dd", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "76503c547088649c7dcdc532d70c3854", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\n\r\nvoid main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t-->0){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i =0;i<n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n        int accflag=1;\r\n        int small=arr[0];\r\n        int large=arr[0];\r\n        for(int i=0;i<n;i++){\r\n            if(i!=n-1&&arr[i]>arr[i+1]){\r\n                accflag=0;\r\n            }\r\n            if(small>arr[i]){\r\n                small=arr[i];\r\n            }\r\n            if(large<arr[i]){\r\n                large=arr[i];\r\n            }\r\n        }\r\n        if(accflag){\r\n            printf(\"0\\n\");\r\n        }\r\n        else if(arr[0]==small||arr[n-1]==large){\r\n            printf(\"1\\n\");\r\n        }\r\n        else{\r\n            printf(\"2\\n\");\r\n        }\r\n    }\r\n}", "fixed": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\n\r\nvoid main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t-->0){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i =0;i<n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n        int accflag=1;\r\n        int small=arr[0];\r\n        int large=arr[0];\r\n        for(int i=0;i<n;i++){\r\n            if(i!=n-1&&arr[i]>arr[i+1]){\r\n                accflag=0;\r\n            }\r\n            if(small>arr[i]){\r\n                small=arr[i];\r\n            }\r\n            if(large<arr[i]){\r\n                large=arr[i];\r\n            }\r\n        }\r\n        if(accflag){\r\n            printf(\"0\\n\");\r\n        }\r\n        else if(arr[0]==small||arr[n-1]==large){\r\n            printf(\"1\\n\");\r\n        }\r\n        else if(arr[0]==large&&arr[n-1]==small){\r\n            printf(\"3\\n\");\r\n        }\r\n        else{\r\n            printf(\"2\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9535080304311073, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "baeee022592f9a8f02a1591d8086398f", "bug_code_uid": "a0f3e9e0e9b92dad5dc24bc40b042063", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "b8c6e388b5b8c874f06f031db2577ec1", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,m,i,j,k,x,y,z,r[1000];\n\n    for(x=0;x<1000;x++)\n    {\n        r[x]=0;\n    }\n    scanf(\"%d %d\",&n,&m);\n\n    int a[n][m];\n\n    for(i=1;i<=m;i++)\n    {\n        int max=-9999999999999999;k=0;\n        for(j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n\n            if(a[i][j]>max)\n            {\n                max=a[i][j];\n                k=j;\n            }\n        }\n        r[k]++;\n    }\n    int max2=r[0];\n    for(i=0;i<=n;i++)\n    {\n       if(r[i]>max2)\n       {\n           max2=i;\n       }\n    }\n    printf(\"%d\\n\",max2);\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,m,i,j,k,x,y,z,r[1000];\n\n    for(x=0;x<1000;x++)\n    {\n        r[x]=0;\n    }\n    scanf(\"%d %d\",&n,&m);\n\n    int a[m][n];\n\n    for(i=0;i<m;i++)\n    {\n        int max=-9999999999999999;k=0;\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n\n            if(a[i][j]>max)\n            {\n                max=a[i][j];\n                k=j+1;\n            }\n        }\n        r[k]++;\n    }\n    int max2=r[0];int kk;\n    for(i=0;i<=n;i++)\n    {\n\n       if(r[i]>max2)\n       {\n           max2=r[i];\n           kk=i;\n       }\n    }\n    printf(\"%d\\n\",kk);\n\n}\n"}
