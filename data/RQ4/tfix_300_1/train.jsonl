{"id": "/data/all/data/tategakibunko/nehan.js", "bugType": "no-caller", "problem": "    var restart_pos = recur_pos + tag_name.length + 2; \n    var close_pos2 = arguments.callee(buff.substring(restart_pos), tag_name, open_tag_rex, close_tag);\n    if(close_pos2 < 0){", "fixed": "    var restart_pos = recur_pos + tag_name.length + 2; \n    var close_pos2 = __find_close_pos(buff.substring(restart_pos), tag_name, open_tag_rex, close_tag);\n    if(close_pos2 < 0){", "message": "Avoid arguments.callee."}
{"id": "/data/all/data/nathanaschbacher/nodiak", "bugType": "no-invalid-this", "problem": "        else {\n            this.props = props;\n            _return(err, props || {});\n        }", "fixed": "        else {\n            _this.props = props;\n            _return(err, _this.props);\n        }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/DeMille/node-usbmux", "bugType": "comma-style", "problem": "function startRelay(portPair) {\n  var devicePort = portPair[0]\n    , relayPort = portPair[1];", "fixed": "function startRelay(portPair) {\n  var devicePort = portPair[0];\n  var relayPort = portPair[1];", "message": "',' should be placed last."}
{"id": "/data/all/data/digitalcraig/adt-pulse-mqtt", "bugType": "no-cond-assign", "problem": "      action= {'newstate':'stay','prev_state':prev_state};\n  }\n  else if (msg =\"disarm\") {\n     action= {'newstate':'disarm','prev_state':prev_state};", "fixed": "      action= {'newstate':'stay','prev_state':prev_state};\n  }\n  else if (msg ==\"disarm\") {\n     action= {'newstate':'disarm','prev_state':prev_state};", "message": "Expected a conditional expression and instead saw an assignment."}
{"id": "/data/all/data/SEED-platform/seed", "bugType": "no-undef", "problem": "    var refreshObjects = function () {\n      var propertyColumnNames = _.map($scope.propertyColumns, 'name');\n      var taxlotColumnNames = _.map($scope.taxlotColumns, 'name');\n      var promises = [];", "fixed": "    var refreshObjects = function () {\n      \n      \n      var promises = [];", "message": "Undefined variable."}
{"id": "/data/all/data/kripod/knex-orm", "bugType": "prefer-spread", "problem": "  withRelated(...props) {\n    const relationNames = [].concat.apply([], props);\n    const relationEntries = Object.entries(this.model.related);", "fixed": "  withRelated(...props) {\n    const relationNames = flattenArray(props);\n    const relationEntries = Object.entries(this.model.related);", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/mwaylabs/bikini", "bugType": "no-console", "problem": "        },\n        function(foo, error) {\n          console.error(error);\n          return done();\n        }", "fixed": "        },\n        function(error) {\n          return done(error);\n        }", "message": "Unexpected console statement."}
{"id": "/data/all/data/lodash/lodash", "bugType": "no-process-exit", "problem": "      console.error(exception);\n      process.exit();\n    }", "fixed": "      console.error(exception);\n    }", "message": "Don't use process.exit(); throw an error instead."}
{"id": "/data/all/data/elastic/kibana", "bugType": "no-unused-vars", "problem": "          <div className={optionsClassname}\n            onClick={e => props.switchTab('options')}>Options</div>\n        </div>", "fixed": "          <div className={optionsClassname}\n            onClick={() => props.switchTab('options')}>Options</div>\n        </div>", "message": "Unused variable."}
{"id": "/data/all/data/appium/appium", "bugType": "no-undef", "problem": "  describe('command timeout disabled via desired caps (0)', function () {\n    var driver;", "fixed": "  describe('check implicit wait', function () {\n    var driver;", "message": "Undefined variable."}
{"id": "/data/all/data/hannahhoward/a1atscript", "bugType": "no-self-assign", "problem": "      var directive = new ConstructorFn(...args);\n      directive.link = directive.link;\n      directive.compile = directive.compile;\n      return directive;", "fixed": "      var directive = new ConstructorFn(...args);\n      assign(directive, ConstructorFn.prototype);\n      return directive;", "message": "'directive.link' is assigned to itself."}
{"id": "/data/all/data/moneybutton/yours-bitcoin", "bugType": "generator-star-spacing", "problem": "    it('should initialize a new BIP32 correctly from test vector 2 seed', function () {\n      return asink(function *() {\n        let hex = vector2_master\n        let bip32 = yield BIP32().asyncFromSeed(new Buffer(hex, 'hex'), 'mainnet')", "fixed": "    it('should initialize a new BIP32 correctly from test vector 2 seed', function () {\n      return asink(function * () {\n        let hex = vector2master\n        let bip32 = yield BIP32().asyncFromSeed(new Buffer(hex, 'hex'), 'mainnet')", "message": "Missing space after *."}
{"id": "/data/all/data/gabrielelana/mongoose-eventful", "bugType": "guard-for-in", "problem": "      for (var index in options.emitChangedOnVirtualFields) {\n        var virtualFieldPath = options.emitChangedOnVirtualFields[index]\n        doc.$__.virtualFieldsPreviousValue[virtualFieldPath] = doc.get(virtualFieldPath)", "fixed": "      options.emitChangedOnVirtualFields.forEach(function(virtualFieldPath) {\n        doc.$__.virtualFieldsPreviousValue[virtualFieldPath] = doc.get(virtualFieldPath)", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/ioBroker/ioBroker.history", "bugType": "no-redeclare", "problem": "                        \n                        var y = lastY + (postLastValue.val - lastY) * (options.end - lastTS) / (postLastValue.ts - lastTS);\n                        options.result.push({ts: options.end, val: y});\n                    } else {", "fixed": "                        \n                        var _y = lastY + (postLastValue.val - lastY) * (options.end - lastTS) / (postLastValue.ts - lastTS);\n                        options.result.push({ts: options.end, val: _y});\n                    } else {", "message": "Redeclaring variable."}
{"id": "/data/all/data/melonjs/melonJS", "bugType": "no-undef", "problem": "\t\t\n\t\tme.game.world.removeChild(me.game.world.getEntityByProp(\"name\", \"HUD\")[0]);\n\t\t", "fixed": "\t\t\n\t\tme.game.world.removeChild(this.HUD);\n\t\t", "message": "Undefined variable."}
{"id": "/data/all/data/clappr/clappr", "bugType": "no-invalid-this", "problem": "      if (!this.playbackType) {\n        this.playbackType = this.el.globoGetType();\n        if (this.playbackType) {\n          this.playbackType = this.playbackType.toLowerCase();\n          this.updateSettings();\n        }", "fixed": "      if (!this.playbackType) {\n        this.playbackType = this.el.globoGetType()\n        if (this.playbackType) {\n          this.playbackType = this.playbackType.toLowerCase()\n          this.updateSettings()\n        }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/foam-framework/foam", "bugType": "no-debugger", "problem": "      Object_forEach(args, function(v, k) {\n        debugger;\n        this.Y[k] = v;", "fixed": "      Object_forEach(args, function(v, k) {\n        this.Y[k] = v;", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/jquense/react-widgets", "bugType": "no-dupe-keys", "problem": "  itemComponent:  CustomPropTypes.elementType,\n  onChange:       React.PropTypes.func,\n  ", "fixed": "  itemComponent:  CustomPropTypes.elementType,\n  onSelect:       React.PropTypes.func,\n  ", "message": "Duplicate key 'onChange'."}
{"id": "/data/all/data/tc39/test262", "bugType": "no-invalid-this", "problem": "  return false;\n }\nassertTrue(testcase.call(this));", "fixed": "  return false;\n }\nrunTestCase(testcase);", "message": "Unexpected 'this'."}
{"id": "/data/all/data/serverless/site", "bugType": "no-unused-vars", "problem": "import { dashboard } from 'src/constants/newUrls.js'\nimport FrameworkLogo from 'src/components/pages/features-common/FrameworkLogo'\nimport HeroButton from 'src/components/pages/features-common/HeroButton'", "fixed": "import { dashboard } from 'src/constants/newUrls.js'\nimport { HeroButton, HeroFrameworkLogo } from 'src/components'", "message": "Unused variable."}
{"id": "/data/all/data/OpenRoberta/openroberta-lab", "bugType": "no-console", "problem": "        $('#simRobot').addClass('typcn-' + robotGroup);\n        console.log('6');\n        \n        switch (getConnection()) {", "fixed": "        $('#simRobot').addClass('typcn-' + robotGroup);\n        \n        switch (getConnection()) {", "message": "Unexpected console statement."}
{"id": "/data/all/data/eminga/cldraw", "bugType": "no-redeclare", "problem": "\t\t\t});\n\t\t\tfor (var i = 0; i < subId.length; i++) {\n\t\t\t\torder[i] = subId[i][1];", "fixed": "\t\t\t});\n\t\t\tfor (let i = 0; i < subId.length; i++) {\n\t\t\t\torder[i] = subId[i][1];", "message": "Redeclaring variable."}
{"id": "/data/all/data/mdns-js/node-mdns-js", "bugType": "no-extra-bind", "problem": "\r\n    self._all.on('broadcast', function () {\r\n      internal.broadcast(sock, serviceType);\r\n    }.bind(this));\r\n\r", "fixed": "\r\nvar debug = require('debug')('mdns:browser');\r\n\r", "message": "The function binding is unnecessary."}
{"id": "/data/all/data/QubitProducts/cherrytree", "bugType": "no-redeclare", "problem": "      var self = this;\n      var location = this.location = location || this.defaultLocation();\n      this.previousUrl = location.getURL();", "fixed": "      var self = this;\n      location = this.location = location || this.defaultLocation();\n      this.previousUrl = location.getURL();", "message": "Redeclaring variable."}
{"id": "/data/all/data/briansorahan/fun-js", "bugType": "prefer-rest-params", "problem": "fun.min = function() {\n    return Math.min.apply(null, arguments);\n};", "fixed": "fun.min = function(ns) {\n    return fun.isArray(ns) ? Math.min.apply(null, ns) : undefined;\n};", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/sr3d/activejs-1584174", "bugType": "prefer-spread", "problem": "        }\n        return ActiveSupport.log.apply(ActiveSupport,arguments || {});\n    }", "fixed": "        }\n        return ActiveSupport.log(arguments);\n    }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/nhn/tui.chart", "bugType": "prefer-spread", "problem": "    init: function() {\n        this._lineTypeInit.apply(this, arguments);\n    }", "fixed": "    init: function(rawData, theme, options) {\n        rawDataHandler.removeSeriesStack(rawData.series);\n        this._lineTypeInit(rawData, theme, options);\n    }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/ildar-shaimordanov/jsxt", "bugType": "prefer-rest-params", "problem": "{\r\n\tvar options = arguments[1] || {};\r\n\r", "fixed": "{\r\n\tvar options = options || {};\r\n\r", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/imbrianj/switchBoard", "bugType": "guard-for-in", "problem": "            for (subdevice in currentState.value.devices) {\n              subdevices[device].subDevices[i] = currentState.value.devices[subdevice].label;\n              i += 1;\n            }", "fixed": "            for (subdevice in currentState.value.devices) {\n              if (currentState.value.devices.hasOwnProperty(subdevice)) {\n                subdevices[device].subDevices[i] = currentState.value.devices[subdevice].label;\n                i += 1;", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/OperationCode/front-end", "bugType": "no-undef", "problem": "    cy.get('h1').should('have.text', 'Code Schools');\n    cy.wait('@codeSchools');\n  });", "fixed": "    cy.get('h1').should('have.text', 'Code Schools');\n  });", "message": "Undefined variable."}
{"id": "/data/all/data/notadd/neditor", "bugType": "no-empty", "problem": "            me.fireEvent('aftergetscene');\r\n            try{\r\n            }catch(e){}\r\n            return {\r", "fixed": "g, '>'));\r\n            me.fireEvent('aftergetscene');\r\n\r\n            return {\r", "message": "Empty block statement."}
{"id": "/data/all/data/molnarg/node-http2", "bugType": "prefer-spread", "problem": "  this._log.info('Closing server');\n  this._server.close.apply(this._server, arguments);\n};", "fixed": "  this._log.info('Closing server');\n  this._server.close(callback);\n};", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/nnava/nnava.github.io", "bugType": "no-dupe-keys", "problem": "        getAvanzaCourtageSumBuy: getAvanzaCourtageSumBuy,\n        getCourtageYears, getCourtageYears\n    };", "fixed": "        getAvanzaCourtageSumBuy: getAvanzaCourtageSumBuy,\n        getCourtageYears: getCourtageYears\n    };", "message": "Duplicate key 'getCourtageYears'."}
{"id": "/data/all/data/HDF-NI/hdf5.node", "bugType": "require-yield", "problem": "        it(\"should set filter \", function*() {\n            const group = file.createGroup('pmc/refinement');", "fixed": "        it(\"should set filter \", function(done) {\n            const group = file.createGroup('pmc/refinement');", "message": "This generator function does not have 'yield'."}
{"id": "/data/all/data/jacomyal/sigma.js", "bugType": "prefer-spread", "problem": "    if (container)\n      collectedNodes.push.apply(collectedNodes, container);\n    ", "fixed": "    if (container)\n      extend(collectedNodes, container);\n    ", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/TerriaJS/terriajs", "bugType": "no-unused-vars", "problem": "var greenTableStyle;\nvar RealXMLHttpRequest;\nvar fakeServer;", "fixed": "var greenTableStyle;\nvar fakeServer;", "message": "Unused variable."}
{"id": "/data/all/data/redcamel/RedGL2", "bugType": "no-extra-semi", "problem": "\t\tthis.checkUniformAndProperty();\n\t\t;\n\t\tconsole.log(this);", "fixed": "\t\tthis.checkUniformAndProperty();\n\t\tconsole.log(this);", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/hsiW/WishBot", "bugType": "no-unused-vars", "problem": "    return new Promise((resolve, reject) => {\n        pool.query('DELETE FROM server_settings WHERE guild_id = ' + guild.id, (err, result) => {\n            if (err) reject(err);", "fixed": "    return new Promise((resolve, reject) => {\n        pool.query('DELETE FROM server_settings WHERE guild_id = ' + guild.id, err => {\n            if (err) reject(err);", "message": "Unused variable."}
{"id": "/data/all/data/rmurphey/mulberry", "bugType": "no-unreachable", "problem": "      console.error('These are the components I know about', this.involved);\n      throw(\"Did not find required components for capability\", this.declaredClass);\n      return;\n    }", "fixed": "      console.error('These are the components I know about', this.involved);\n      throw(\"Did not find required components for capability \" + this.declaredClass);\n    }", "message": "Unreachable code."}
{"id": "/data/all/data/zurb/pizza", "bugType": "no-undef", "problem": "      $(existing_group[0]).children().remove();\n      var g = Snap(existing_group[0]);\n    } else {", "fixed": "      $(existing_group[0]).children().remove();\n      var g = existing_group[0];\n    } else {", "message": "Undefined variable."}
{"id": "/data/all/data/s-yadav/jsonQ", "bugType": "no-cond-assign", "problem": "                        \n                        if (type = 'object') {\n                            delete jsonVal[key];", "fixed": "                        \n                        if (jsonType == 'object') {\n                            delete jsonVal[key];", "message": "Expected a conditional expression and instead saw an assignment."}
{"id": "/data/all/data/RallyTools/rally-node", "bugType": "no-invalid-this", "problem": "                this.get.restore();\n                this.get = sinon.stub(request.Request.prototype, 'get', function(options) {\n                    var start = options.qs.start,", "fixed": "                this.get.restore();\n                sinon.stub(request.Request.prototype, 'get', function(options) {\n                    var start = options.qs.start,", "message": "Unexpected 'this'."}
{"id": "/data/all/data/keithmorris/gulp-nunit-runner", "bugType": "no-redeclare", "problem": "var runner = function gulpNunitRunner(opts) {\n\toptions = opts;\n\tif (!opts || !opts.executable) {", "fixed": "var runner = function gulpNunitRunner(opts) {\n\t\n\tif (!opts || !opts.executable) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/popeindustries/buddy", "bugType": "comma-style", "problem": "File.prototype.getAllDependencies = function (asReferences) {\n\tvar self = this\n\t\t, deps = []\n\t\t, key = asReferences ? 'dependencyReferences' : 'dependencies';", "fixed": "'use strict';", "message": "',' should be placed last."}
{"id": "/data/all/data/canjs/canjs", "bugType": "no-unused-vars", "problem": "\t},\n\teach = $.each,\n\thookup = function(val, prop, parent){", "fixed": "\t},\n\tmakeArray = $.makeArray,\n\teach = $.each,\n\thookup = function(val, prop, parent){", "message": "Unused variable."}
{"id": "/data/all/data/mbnuqw/sidebery", "bugType": "no-invalid-this", "problem": "  const receiving = [], windows = []\n  for (let windowId in this.windows) {\n    if (!this.windows.hasOwnProperty(windowId)) continue\n    receiving.push(browser.runtime.sendMessage({", "fixed": "  const receiving = [], windows = []\n  for (let window of Object.values(this.windows)) {\n    receiving.push(browser.runtime.sendMessage({", "message": "Unexpected 'this'."}
{"id": "/data/all/data/proactjs/proactjs", "bugType": "no-dupe-keys", "problem": "  constructor: ProAct.AutoPropertyProvider,\n  constructor: ProAct.SimplePropertyProvider,", "fixed": "  constructor: ProAct.SimplePropertyProvider,", "message": "Duplicate key 'constructor'."}
{"id": "/data/all/data/teddy-gustiaux/youtube-rss-finder", "bugType": "no-case-declarations", "problem": "            case 'playlist':\n                const playlistId = new URLSearchParams(this.currentUrl.search).get('list');\n                this.identifier = playlistId === null ? null : `playlist_id=${playlistId}`;", "fixed": "            case 'playlist':\n                playlistId = new URLSearchParams(this.currentUrl.search).get('list');\n                this.identifier = playlistId === null ? null : `playlist_id=${playlistId}`;", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/nightwatchjs/nightwatch", "bugType": "no-invalid-this", "problem": "    this.client.api.perform(function() {\n      assert.equal(expect.assertion.waitForMs, 100);", "fixed": "    return this.client.start(function() {\n      assert.equal(expect.assertion.waitForMs, 100);", "message": "Unexpected 'this'."}
{"id": "/data/all/data/megamsys/nilavu", "bugType": "no-invalid-this", "problem": "\t\tcase \"hp cloud\":\n\t\talert($(this).find(\"option:selected\").text())\n\t\t\t", "fixed": "\t\tcase \"hp cloud\":\n\t\t\n\t\t\t", "message": "Unexpected 'this'."}
{"id": "/data/all/data/ChartIQ/finsemble-seed", "bugType": "no-redeclare", "problem": "\t\t\t\t} catch (err) {\n\t\t\t\t\tvar msg = \"Caught an error when using the YellowFin webservice (GETALLUSERREPORTS): \"\n\t\t\t\t\tLogger.error(msg, err);", "fixed": "\t\t\t\t} catch (err) {\n\t\t\t\t\tlet msg = \"Caught an error when using the YellowFin webservice (GETALLUSERREPORTS): \"\n\t\t\t\t\tLogger.error(msg, err);", "message": "Redeclaring variable."}
{"id": "/data/all/data/atmajs/MaskJS", "bugType": "no-unreachable", "problem": "\t\t\treturn _merge((wrapperNode || contentNodes), placeholders, tmplNode, clonedParent);\n\t\t\treturn wrapperNode || contentNodes;\n\t\t}", "fixed": "\t\t\treturn _merge((wrapperNode || contentNodes), placeholders, tmplNode, clonedParent);\n\t\t}", "message": "Unreachable code."}
{"id": "/data/all/data/piroor/treestyletab", "bugType": "prefer-spread", "problem": "\tif (aItemsToOpen.length <= 0)\n\t\treturn this.__treestyletab__openTabset.apply(this, allArgs);\n\tvar w = aWindow && aWindow.document.documentElement.getAttribute('windowtype') == 'navigator:browser' ?", "fixed": "\tif (aItemsToOpen.length <= 0)\n\t\treturn this.__treestyletab__openTabset(aItemsToOpen, aEvent, aWindow, ...aArgs);\n\tvar w = aWindow && aWindow.document.documentElement.getAttribute('windowtype') == 'navigator:browser' ?", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/Dhaulagiri/ember-cli-twitter-typeahead", "bugType": "no-extra-bind", "problem": "          }\n        }.bind(this),\n        empty: function() {\n          return \"<span class='tt-suggestion enter-suggest'>Empty</span>\";", "fixed": "          }\n        },\n        empty() {\n          return \"<span class='tt-suggestion enter-suggest'>Empty</span>\";", "message": "The function binding is unnecessary."}
{"id": "/data/all/data/pgbross/vue-material-adapter", "bugType": "guard-for-in", "problem": "    for (let key in components) {\n      describe(key, () => {", "fixed": "    Object.keys(components).forEach(key => {\n      describe(key, () => {", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/NationStates/NationStatesPlusPlus", "bugType": "no-invalid-this", "problem": "\tevent.preventDefault();\n\tvar $form = $( this ),\n\t\tchkValue = $('input[name=\"chk\"]').val(),\n\t\tmessageValue = $('textarea[name=\"message\"]').val(),", "fixed": "\tevent.preventDefault();\n\tvar chkValue = $('input[name=\"chk\"]').val(),\n\t\tmessageValue = $('textarea[name=\"message\"]').val(),", "message": "Unexpected 'this'."}
{"id": "/data/all/data/s-a/iron-node", "bugType": "no-extra-semi", "problem": "\t\tdone();\n\t};", "fixed": "\t\tdone();\n\t}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/ofrohn/d3-celestial", "bugType": "use-isnan", "problem": "    \n    if (!cfg.stars.colors || parseFloat(prop.bv) == NaN) {return cfg.stars.color; }\n    return bvcolor(prop.bv);", "fixed": "    \n    if (!cfg.stars.colors || isNaN(prop.bv)) {return cfg.stars.color; }\n    return bvcolor(prop.bv);", "message": "Use the isNaN function to compare with NaN."}
{"id": "/data/all/data/ionic-team/ionic-cli", "bugType": "no-unreachable", "problem": "    }\n    q.resolve(result);\n  });", "fixed": "    }\n    return q.resolve(result);\n  });", "message": "Unreachable code."}
{"id": "/data/all/data/nodejam/nodejam", "bugType": "no-unreachable", "problem": "            return;\n            yield 0;\n        }", "fixed": "            return;\n        }", "message": "Unreachable code."}
{"id": "/data/all/data/Dash-Industry-Forum/dash.js", "bugType": "no-invalid-this", "problem": "            this.debug.log(\"Set current time on video.\");\n            this.system.notify(\"setCurrentTime\");", "fixed": "            this.debug.log(\"Set current time on video: \" + time);\n            this.system.notify(\"setCurrentTime\");", "message": "Unexpected 'this'."}
{"id": "/data/all/data/plaidev/bolt-rpc", "bugType": "prefer-spread", "problem": "    next = function() {\n      var args, err;\n      err = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return cb.apply(null, [err].concat(__slice.call(args)));\n    };", "fixed": "      options: options\n    };", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/racker/gutsy", "bugType": "no-debugger", "problem": "      if(!start && !end){\n        debugger;\n        context.end = poller_data ? poller_data.end : new Date();", "fixed": "      if(!start && !end){\n        context.end = poller_data ? poller_data.end : new Date();", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/Studio-42/elFinder", "bugType": "no-invalid-this", "problem": "\t\t\t\t\t\t\t\t\tcancel();\n\t\t\t\t\t\t\t\t\tedit(file, $(this).val(), editor).fail(function(err) { err && fm.error(err); });\n\t\t\t\t\t\t\t\t}", "fixed": "\t\t\t\t\t\t\t\t\tcancel();\n\t\t\t\t\t\t\t\t\tedit(file, selEncoding.val(), editor).fail(function(err) { err && fm.error(err); });\n\t\t\t\t\t\t\t\t}", "message": "Unexpected 'this'."}
{"id": "/data/all/data/gitana/alpaca", "bugType": "no-dupe-keys", "problem": "        getFieldType: function() {\n            return \"uppercase\";\n        }", "fixed": "        getDescription: function() {\n            return \"Text field for uppercase text.\";\n        }", "message": "Duplicate key 'getFieldType'."}
{"id": "/data/all/data/layerhq/layer-ui-web", "bugType": "no-useless-escape", "problem": "        if (!videoId) {\n          var urlMatches = match.match(/https:\\/\\/www\\.youtube\\.com\\/watch\\?v\\=(.*)$/);\n          if (urlMatches) videoId = urlMatches[1];", "fixed": "        if (!videoId) {\n          const urlMatches = match.match(/https:\\/\\/www\\.youtube\\.com\\/watch\\?v=(.*)$/);\n          if (urlMatches) videoId = urlMatches[1];", "message": "Unnecessary escape character."}
{"id": "/data/all/data/InfantLab/YourBrain", "bugType": "no-undef", "problem": "\t\t});\t\t\n\t\tTi.UI.currentWindow.add(coverView);", "fixed": "\t\t});\t\t\n\t\twin.add(coverView);", "message": "Undefined variable."}
{"id": "/data/all/data/davidhoksza/MolArt", "bugType": "no-undef", "problem": "    pv3d = new PV3D({\n        uniprotId: uniprotId,", "fixed": "    const protestant = new Protestant({\n        uniprotId: uniprotId,", "message": "Undefined variable."}
{"id": "/data/all/data/matthewmueller/array", "bugType": "prefer-spread", "problem": "  this.emit('unshift', ret);\n  if(args.length) this.emit.apply(this, ['add'].concat(args));\n  return ret;", "fixed": "  this.emit('unshift', ret);\n  for(var i = 0, len = args.length; i < len; i++) this.emit('add', args[i]);\n  return ret;", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/ddnlink/ddn", "bugType": "no-redeclare", "problem": "\t}\n\tvar generatorPublicKeyBuffer = new Buffer(block.generatorPublicKey, 'hex');\n\tfor (var i = 0; i < generatorPublicKeyBuffer.length; i++) {\n\t\tbb.writeByte(generatorPublicKeyBuffer[i]);", "fixed": "\t}\n\tconst generatorPublicKeyBuffer = new Buffer(block.generatorPublicKey, 'hex');\n\tfor (let i = 0; i < generatorPublicKeyBuffer.length; i++) {\n\t\tbb.writeByte(generatorPublicKeyBuffer[i]);", "message": "Redeclaring variable."}
{"id": "/data/all/data/IntelOpenDesign/MakerNode", "bugType": "no-undef", "problem": "    cat.jsplumb_ready = true;\n    \n    $(document).trigger('jsplumb-ready');\n});", "fixed": "    cat.jsplumb_ready = true;\n});", "message": "Undefined variable."}
{"id": "/data/all/data/Exelord/ember-initials", "bugType": "no-invalid-this", "problem": "  ],\n  initialsObserver: Ember.observer('name', 'seedText', 'fontSize', 'fontWeight', 'fontFamily', 'textColor', 'defaultName', function () {\n    this.set('src', this.createInitials());\n  }),", "fixed": "  ],\n  initialsObserver: Ember.observer('name', 'seedText', 'fontSize', 'fontWeight', 'fontFamily', 'textColor', 'defaultName', 'size', function () {\n    this.notifyPropertyChange('src');\n  }),", "message": "Unexpected 'this'."}
{"id": "/data/all/data/chirashijs/chirashi", "bugType": "no-case-declarations", "problem": "    case 'rotate':\n      let cosValue = Math.cos(value)\n      let sinValue = Math.sin(value)\n      matrix[0] *= cosValue", "fixed": "    case 'rotate':\n      cosValue = Math.cos(value)\n      sinValue = Math.sin(value)\n      matrix[0] *= cosValue", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/OpenNebula/one", "bugType": "no-undef", "problem": "      type: \"single\",\n      call: OpenNebula.Zone.show,\n      callback: fillPopPup,\n      error: onError\n    },", "fixed": "      type: \"single\",\n      call: OpenNebulaZone.show,\n      \n      error: Notifier.onError\n    },", "message": "Undefined variable."}
{"id": "/data/all/data/arose/ngl", "bugType": "no-redeclare", "problem": "    if( ext === \"gz\" ){\n        var binData = pako.ungzip( data );\n    }else if( ext === \"zip\" ){", "fixed": "    if( ext === \"gz\" ){\n        binData = pako.ungzip( data );\n    }else if( ext === \"zip\" ){", "message": "Redeclaring variable."}
{"id": "/data/all/data/svelto/svelto", "bugType": "no-unused-vars", "problem": "(function ( window, document, undefined ) {\n  'use strict';", "fixed": "(function () {\n  'use strict';", "message": "Unused variable."}
{"id": "/data/all/data/mateogianolio/sshync", "bugType": "no-process-exit", "problem": "              console.log('[' + '!'.red + ']', 'mkdir -p'.bold, remotedir.bold, 'failed');\n              process.exit();\n            }", "fixed": "              console.log('[' + '!'.red + ']', 'mkdir -p'.bold, remotedir.bold, 'failed');\n              return;\n            }", "message": "Don't use process.exit(); throw an error instead."}
{"id": "/data/all/data/FontoXML/fontoxpath", "bugType": "no-constant-condition", "problem": "\t\t\tlet convertedValue;\n\t\t\tif (value.instanceOfType('xs:string') || 'xs:untypedAtomic') {\n\t\t\t\tconvertedValue = value.value;", "fixed": "\t\t\tlet convertedValue;\n\t\t\tif (value.instanceOfType('xs:string') || value.instanceOfType('xs:untypedAtomic')) {\n\t\t\t\tconvertedValue = value.value;", "message": "Unexpected constant condition."}
{"id": "/data/all/data/jlord/reporobot", "bugType": "no-undef", "problem": "      var q = async.queue(function (mergePr, callback) {\n          if (err) console.log([new Date(), message, err])\n          callback()", "fixed": "      var q = async.queue(function (mergePr, callback) {\n          callback()", "message": "Undefined variable."}
{"id": "/data/all/data/SAPConversationalAI/bot-connector", "bugType": "no-invalid-this", "problem": "    isTyping: this.isTyping,\n    conversations: this.conversations,\n    channels: this.channels.map(c => c.serialize || c),\n  }", "fixed": "    isTyping: this.isTyping,\n    defaultDelay: this.defaultDelay,\n  }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/insin/reactodo", "bugType": "comma-style", "problem": ", addProject: function(projectName) {\n    if (!this.state.addingProject) {", "fixed": "  addProject(projectName) {\n    if (!this.state.addingProject) {", "message": "',' should be placed last."}
{"id": "/data/all/data/TryGhost/Ghost-Admin", "bugType": "no-invalid-this", "problem": "    href: Ember.String.htmlSafe('javascript:;'),\n    scrollTo: on('click', function () {\n        let anchor = this.get('anchor');\n        let $el = Ember.$(anchor);", "fixed": "    href: Ember.String.htmlSafe('javascript:;'),\n    click() {\n        let anchor = this.get('anchor');\n        let $el = Ember.$(anchor);", "message": "Unexpected 'this'."}
{"id": "/data/all/data/transferwise/components", "bugType": "no-unused-vars", "problem": "import React from 'react';\nimport SlidingPanel from '../slidingPanel';\nimport { shallow, mount } from 'enzyme';", "fixed": "import React from 'react';\nimport { shallow, mount } from 'enzyme';", "message": "Unused variable."}
{"id": "/data/all/data/magda-io/magda", "bugType": "no-unused-vars", "problem": "  }\n  renderOption(option, onClick, optionMax, onFocus){\n    if(!option){", "fixed": "  }\n  renderOption(option, optionMax){\n    if(!option){", "message": "Unused variable."}
{"id": "/data/all/data/rilleralle/k8s-graph", "bugType": "no-unused-vars", "problem": "io.on('connection', function(socket){\n    console.log('a user connected');\n    poll();", "fixed": "io.on('connection', function(){\n    poll();", "message": "Unused variable."}
{"id": "/data/all/data/mymonero/mymonero-app-js", "bugType": "no-unreachable", "problem": "\t\t\tthrow \"nil self.wallet undefined in \" + self.constructor.name + \"/\" + \"_setup_startObserving_wallet`\"\n\t\t\treturn\n\t\t}", "fixed": "\t\t\tthrow \"nil self.wallet undefined in \" + self.constructor.name + \"/\" + \"_setup_startObserving_wallet`\"\n\t\t}", "message": "Unreachable code."}
{"id": "/data/all/data/nicolaschan/bell", "bugType": "no-invalid-this", "problem": "\tcheckNewSectionOverlap(schedule, section);\n\tthis.sections.push(section);\n\tcheckAllSectionOverlap(schedule, this.sections);\n};", "fixed": "\tcheckNewSectionOverlap(schedule, section);\n\tschedule.push(section);\n\tcheckAllSectionOverlap(schedule);\n};", "message": "Unexpected 'this'."}
{"id": "/data/all/data/pulilab/vue-people", "bugType": "no-unused-vars", "problem": "import { getTokensFromCookie } from '~/utilities/auth';\nexport const isDjangoAPIRequest = (url) => {\n  const pieces = url.split('/').filter(p => p !== '');", "fixed": "export const isDjangoAPIRequest = (url) => {\n  const pieces = url.split('/').filter(p => p !== '');", "message": "Unused variable."}
{"id": "/data/all/data/DeviaVir/zenbot", "bugType": "valid-typeof", "problem": "  fitness: function(phenotype) {\n    if (typeof phenotype.sim === 'undfined') return 0;\n    ", "fixed": "  fitness: function(phenotype) {\n    if (typeof phenotype.sim === 'undefined') return 0;\n    ", "message": "Invalid typeof comparison value."}
{"id": "/data/all/data/hugomrdias/prettier-stylelint", "bugType": "no-global-assign", "problem": "require = require('@std/esm')(module);\nmodule.exports = require('./src/index.js');", "fixed": "module.exports = require('./src/index.js');", "message": "Read-only global 'require' should not be modified."}
{"id": "/data/all/data/adnan-wahab/pathgl", "bugType": "comma-style", "problem": "pathgl.fragmentShader = [\n  'precision mediump float;'\n, 'uniform sampler2D texture;'\n, 'uniform vec2 resolution;'", "fixed": "].join('\\n\\n')\npathgl.fragmentShader = [\n  'uniform sampler2D texture;'\n, 'uniform vec2 resolution;'", "message": "',' should be placed last."}
{"id": "/data/all/data/microsoft/pai", "bugType": "no-console", "problem": "    } catch (error) {\n      console.log(error)\n      throw error.response;", "fixed": "    } catch (error) {\n      throw error.response;", "message": "Unexpected console statement."}
{"id": "/data/all/data/nodeca/nodeca.core", "bugType": "no-unreachable", "problem": "        logFatalError(err);\n        process.exit(1);\n        return;\n      }", "fixed": "        logFatalError(err);\n        N.shutdown(1);\n        return;\n      }", "message": "Unreachable code."}
{"id": "/data/all/data/magicdawn/yun-playlist-downloader", "bugType": "generator-star-spacing", "problem": "exports.needDownload = co.wrap(function*(url, filename, skipExists) {\n  ", "fixed": "exports.needDownload = async function(url, filename, skipExists) {\n  ", "message": "Missing space after *."}
{"id": "/data/all/data/aaroncox/chainbb", "bugType": "no-redeclare", "problem": "      };\n      var option = {};\n    }", "fixed": "      };\n      option = {};\n    }", "message": "Redeclaring variable."}
{"id": "/data/all/data/krisnye/ion", "bugType": "no-unused-vars", "problem": "import Compiler from \"./Compiler\"\nimport {read, write} from \"./common\"\nimport * as HtmlLogger from \"./HtmlLogger\"", "fixed": "import Compiler from \"./Compiler\"", "message": "Unused variable."}
{"id": "/data/all/data/coderaiser/cloudcmd", "bugType": "no-invalid-this", "problem": "                CloudCommander.jsload('lib/client/editor/codemirror/pack/xml.pack.js',\r\n                    createEditorDiv(this));\r\n            };\r", "fixed": "                CloudCommander.jsload('lib/client/editor/codemirror/pack/xml.pack.js',\r\n                    createEditorDiv);\r\n            };\r", "message": "Unexpected 'this'."}
{"id": "/data/all/data/pierrec/node-atok", "bugType": "comma-style", "problem": "Tknzr.prototype.flush = function () {\n  var buf = this.buffer\n    , offset = this.offset\n    , mode = this._bufferMode\n  ", "fixed": "Tknzr.prototype.flush = function () {\n  var data = this._slice()\n  ", "message": "',' should be placed last."}
{"id": "/data/all/data/nhn/tui.editor", "bugType": "no-self-assign", "problem": "        className = className || ('uic' + this.id);\n        tagName = tagName;\n        $el = $('<' + tagName + ' class=\"' + className + '\"/>');", "fixed": "        className = className || ('uic' + this.id);\n        $el = $('<' + tagName + ' class=\"' + className + '\"/>');", "message": "'tagName' is assigned to itself."}
{"id": "/data/all/data/sapegin/sweet", "bugType": "no-extra-semi", "problem": "\t\t\to.files[key].path = normalizePath(o.files[key].path);\n\t\t};\n\t}", "fixed": "\t\t\to.files[key].path = normalizePath(o.files[key].path);\n\t\t}\n\t}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/GooTechnologies/goojs", "bugType": "guard-for-in", "problem": "\t\tif (arguments.length === 1 && typeof (arguments[0]) === \"object\") {\n\t\t\tfor ( var i in arguments[0]) {\n\t\t\t\tthis.data[i] = arguments[0][i];", "fixed": "\t\tif (arguments.length === 1 && typeof (arguments[0]) === \"object\") {\n\t\t\tfor ( var i = 0; i < arguments[0].length; i++) {\n\t\t\t\tthis.data[i] = arguments[0][i];", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/strongloop/loopback-datasource-juggler", "bugType": "no-self-assign", "problem": "      if (data && data.countBeforeLimit) {\n        data.countBeforeLimit = data.countBeforeLimit;\n      }", "fixed": "      if (data && data.countBeforeLimit) {\n        results.countBeforeLimit = data.countBeforeLimit;\n      }", "message": "'data.countBeforeLimit' is assigned to itself."}
{"id": "/data/all/data/rhaldkhein/mithril-data", "bugType": "no-invalid-this", "problem": "\tvar customStoreData = {};\n\tvar customStore = function(initVal, key, factorykey) {\n\t\tvar prefix = this.prefix || '';\n\t\tfactorykey = factorykey ? (factorykey + '.') : '';", "fixed": "\tvar customStoreData = {};\n\tvar customStore = function(initVal, key, factorykey, options) {\n\t\tvar prefix = options.prefix || '';\n\t\tfactorykey = factorykey ? (factorykey + '.') : '';", "message": "Unexpected 'this'."}
{"id": "/data/all/data/davemckenna01/shync", "bugType": "no-invalid-this", "problem": "  suite('_cmdCb()', function(){\n    test('should expect a return code and a domain', function(){\n      var ssh = new Shync(this.opts);\n      ssh.cb = sinon.stub();", "fixed": "  suite('_cmdCb()', function(){\n    test('should update Shync.domains state object', function(){\n      var ssh = new Shync(this.opts);\n      ssh.cb = sinon.stub();", "message": "Unexpected 'this'."}
{"id": "/data/all/data/secret-tech/backend-ico-dashboard", "bugType": "no-invalid-this", "problem": "    it('should send transation by mnemonic', async () => {\n      await this.client.sendTransactionByMnemonic({\n          to: (await this.client.web3.eth.getAccounts())[0],", "fixed": "    it('should send transation by mnemonic', async () => {\n      ", "message": "Unexpected 'this'."}
{"id": "/data/all/data/AnalyticalGraphicsInc/cesium", "bugType": "guard-for-in", "problem": "        for (var key in namespaceMap) {\n            reg = RegExp('[<| ]' + key + ':');\n            declaration = 'xmlns:' + key + '=';\n            if (reg.test(text) && text.indexOf(declaration) === -1) {", "fixed": "        for (var key in namespaceMap) {\n            if (namespaceMap.hasOwnProperty(key)) {\n                reg = RegExp('[<| ]' + key + ':');\n                declaration = 'xmlns:' + key + '=';", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/nakardo/node-gameboy", "bugType": "no-unreachable", "problem": "                \n                if (pos < 0xff80) return this._io[pos - 0xff00];\n                else return this._zram[pos - 0xff80];\n                return this._if;\n        }", "fixed": "            return this._bios[pos];\n        }", "message": "Unreachable code."}
{"id": "/data/all/data/basic-web-components/basic-web-components", "bugType": "no-undef", "problem": "window.Basic.ClickSelectionMixin = ClickSelectionMixin;\nwindow.Basic.Collective = Collective;\nwindow.Basic.ComposableMixin = ComposableMixin;", "fixed": "window.Basic.ClickSelectionMixin = ClickSelectionMixin;\nwindow.Basic.ComposableMixin = ComposableMixin;", "message": "Undefined variable."}
{"id": "/data/all/data/datenanfragen/website", "bugType": "no-case-declarations", "problem": "                break;\n            case 'email':\n                let email_blob = new Blob(\n                    [", "fixed": "                break;\n            case 'email': {\n                let email_blob = new Blob(\n                    [", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/nodejam/nodejam", "bugType": "generator-star-spacing", "problem": "    },\n    function*(siteConfig) {\n        const logger = getLogger(siteConfig.quiet, \"database\");", "fixed": "    },\n    async function(siteConfig) {\n        const logger = getLogger(siteConfig.quiet, \"database\");", "message": "Missing space after *."}
{"id": "/data/all/data/mqttjs/mqtt-packet", "bugType": "comma-style", "problem": "  for (var i = 0; i < subs.length; i++) {\n    var sub = subs[i]\n      , topic = sub.topic\n      , qos = sub.qos;", "fixed": "'use strict'", "message": "',' should be placed last."}
{"id": "/data/all/data/CleverStack/cleverstack-cli", "bugType": "no-unused-vars", "problem": "  , fs      = Promise.promisifyAll( require( 'fs' ) )\n  , search  = require( path.join( __dirname, 'search'   ) )\n  , utils   = require( path.join( __dirname, 'utils'    ) );", "fixed": "  , fs      = Promise.promisifyAll( require( 'fs' ) )\n  \n  \n  , utils   = require( path.join( __dirname, 'utils'    ) );", "message": "Unused variable."}
{"id": "/data/all/data/mouse0270/bootstrap-notify", "bugType": "no-extra-semi", "problem": "\t\tthis.init();\n\t};\n\t$.extend(Notify.prototype, {", "fixed": "\t\tthis.init();\n\t}\n\t$.extend(Notify.prototype, {", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/thlorenz/replpad", "bugType": "comma-style", "problem": "  , divider = require('./divider')\n  , config =  require('../../../config/current')\n  , readmeConf = config.readme ", "fixed": "  , divider = require('./divider')\n  , config =  require('../../../config/current');", "message": "',' should be placed last."}
{"id": "/data/all/data/raineorshine/solidity-repl", "bugType": "no-useless-escape", "problem": "    const warnings = compilationFirstPass.errors\n      .filter(err => err.match(/\\: Warning\\: /) && !err.match('Unused local variable'))", "fixed": "    const warnings = compilationFirstPass.errors\n      .filter(err => err.match(/: Warning: /) && !err.match('Unused local variable'))", "message": "Unnecessary escape character."}
{"id": "/data/all/data/crossfilter/crossfilter", "bugType": "no-undef", "problem": "function heapselect_by(f) {\n  var heap = heap_by(f);\n  ", "fixed": "function heapselect_by(f) {\n  var heap = xFilterHeap.by(f);\n  ", "message": "Undefined variable."}
{"id": "/data/all/data/scott-w/reps-js", "bugType": "no-undef", "problem": "    local.destroy();\n    const indexes = _.map(window.localStorage, (v, k) => k);\n    const keys = _.map(indexes, (i) => window.localStorage.key(i));\n    const toRemove = _.filter(keys, (key) => reObj.exec(key) !== null);", "fixed": "    local.destroy();\n    const indexes = _.map(root.localStorage, (v, k) => k);\n    const keys = _.map(indexes, (i) => root.localStorage.key(i));\n    const toRemove = _.filter(keys, (key) => reObj.exec(key) !== null);", "message": "Undefined variable."}
{"id": "/data/all/data/apiko-dev/GitterMobile", "bugType": "no-debugger", "problem": "    this.prepareDataSources()\n    debugger\n    const {activeRoom, rooms, route: { roomId }, dispatch, listViewData} = this.props", "fixed": "    this.prepareDataSources()\n    const {activeRoom, rooms, route: { roomId }, dispatch, listViewData} = this.props", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/jasonmit/nest-cli", "bugType": "guard-for-in", "problem": "    for (let attrKey in attributes) {\n      let alias = attrKey;\n      const attribute = attributes[attrKey];\n      if (attribute.options.alias) {", "fixed": "    for (let attrKey in attributes) {\n      if (attributes.hasOwnProperty(attrKey)) {\n        let alias = attrKey;\n        const attribute = attributes[attrKey];", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/wix/media-platform-js-sdk", "bugType": "prefer-rest-params", "problem": "        fileManager.uploadFile('/demo/' + rand + '.image.jpg', __dirname + '/../files/image.jpg', null, function (error, response) {\n            console.log(arguments);\n            if (error) {", "fixed": "        fileManager.uploadFile('/demo/' + rand + '.image.jpg', __dirname + '/../files/image.jpg', null, function (error, response) {\n            if (error) {", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/arangodb/arangodb", "bugType": "no-useless-escape", "problem": "  for (let n = 0; n < cases.length; ++n) {\n    let splitted = cases[n].split(/[,;\\.|]/);\n    for (let m = 0; m < splitted.length; ++m) {", "fixed": "  for (let n = 0; n < cases.length; ++n) {\n    let splitted = expandWildcard(cases[n]).split(/[,;|]/);\n    for (let m = 0; m < splitted.length; ++m) {", "message": "Unnecessary escape character."}
{"id": "/data/all/data/fossasia/star-me", "bugType": "prefer-rest-params", "problem": "Promise.all([StarRepos.reduce(function(a, b) {\nconsole.log(arguments,\"what\")\n    return a.then(function(){return starRepo(b)});", "fixed": "Promise.all([StarRepos.reduce(function(a, b) {\n    return a.then(function(){return starRepo(b)});", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/basiljs/basil.js", "bugType": "no-unused-vars", "problem": "b.test(\"EnvironmentTests\", {\n  setUpTest: function(b) {\n  },", "fixed": "basilTest(\"EnvironmentTests\", {\n  setUpTest: function() {\n  },", "message": "Unused variable."}
{"id": "/data/all/data/maptalks/maptalks.js", "bugType": "prefer-spread", "problem": "            points = [points];\n            points.push.apply(points, holePoints);\n        }", "fixed": "            points = [points];\n            pushIn(points, holePoints);\n        }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/baby-loris/bla", "bugType": "no-unreachable", "problem": "            return parsedValue;\n            break;\n        case 'Boolean':", "fixed": "            return parsedValue;\n        case 'Boolean':", "message": "Unreachable code."}
{"id": "/data/all/data/thx/magix", "bugType": "no-useless-escape", "problem": "    };\n    var PathRelativeReg = /\\/\\.(?:\\/|$)|\\/[^\\/.]+?\\/\\.{2}(?:\\/|$)|([^:\\/])\\/\\/+|\\.{2}\\\nvar PathTrimFileReg = /\\/[^\\/]*$/;", "fixed": "    };\n    var PathRelativeReg = /\\/\\.(?:\\/|$)|\\/[^\\/]+?\\/\\.{2}(?:\\/|$)|\\/\\/+|\\.{2}\\\nvar PathTrimFileReg = /\\/[^\\/]*$/;", "message": "Unnecessary escape character."}
{"id": "/data/all/data/facebookarchive/powereditor", "bugType": "no-invalid-this", "problem": "      if (!soft) {\n        models.Completion.withTransaction(tx, function() { this.dbDrop(); });\n        models.BCT.withTransaction(tx, function() { this.dbDrop(); });\n      }", "fixed": "      if (!soft) {\n        models.BCT.withTransaction(tx, function() { this.dbDrop(); });\n      }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/regularjs/regular", "bugType": "no-throw-literal", "problem": "        if( !name || !value ) throw \"invalid style in command: style\";\n        styles[name] = value;", "fixed": "        if( !name || !value ) throw Error(\"invalid style in command: style\");\n        styles[name] = value;", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/typicode/hotel", "bugType": "no-console", "problem": "        new EventSource('/_/events').onmessage = (event) => {\n          console.log(Object.keys(JSON.parse(event.data)))\n          Vue.set(this, 'list', JSON.parse(event.data))", "fixed": "        new EventSource('/_/events').onmessage = (event) => {\n          Vue.set(this, 'list', JSON.parse(event.data))", "message": "Unexpected console statement."}
{"id": "/data/all/data/adlnet/xAPI-Dashboard", "bugType": "no-console", "problem": "\t\t\tconsole.log(aggregateData);\n\t\t\tisChartBusy = false;", "fixed": "\t\t\tisChartBusy = false;", "message": "Unexpected console statement."}
{"id": "/data/all/data/microsoft/pai", "bugType": "guard-for-in", "problem": "    let resultObj = {'items': []};\n    for (let i in esResult.body.hits.hits) {\n      resultObj['items'].push(esResult.body.hits.hits[i]._source.ObjectSnapshot);", "fixed": "    let resultObj = {'items': []};\n    for (let i = 0; i < esResult.body.hits.hits.length; i++) {\n      resultObj['items'].push(esResult.body.hits.hits[i]._source.ObjectSnapshot);", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/akre54/Backbone.NativeView", "bugType": "prefer-rest-params", "problem": "  var elementRemoveEventListener = ElementProto.removeEventListener ? function() {\n    return this.removeEventListener.apply(this, arguments)\n  } : function(eventName, listener) {", "fixed": "  var elementRemoveEventListener = ElementProto.removeEventListener ? function(eventName, listener, useCapture) {\n    return this.removeEventListener(eventName, listener, useCapture);\n  } : function(eventName, listener) {", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/indico/newdle", "bugType": "no-unused-vars", "problem": "import {useHistory} from 'react-router';\nimport {Button, Container, Header, Input, Message} from 'semantic-ui-react';\nimport {", "fixed": "import {useHistory} from 'react-router';\nimport {Button, Container, Header, Input} from 'semantic-ui-react';\nimport {", "message": "Unused variable."}
{"id": "/data/all/data/kvz/locutus", "bugType": "guard-for-in", "problem": "    for (key in inputArr) {\n        val = inputArr[key];\n        if (false === __array_search(val, tmp_arr2)) {\n            tmp_arr2[key] = val;", "fixed": "    for (key in inputArr) {\n        if (inputArr.hasOwnProperty) {\n            val = inputArr[key];\n            if (false === __array_search(val, tmp_arr2)) {", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/vertigo-io/vertigo-university", "bugType": "guard-for-in", "problem": "\t\tfor (var prop in mapping) {\n\t\t\tvar urlList = mapping[prop];\n\t\t\tfor (var i = 0; i < urlList.length; i++) {\n\t\t\t\tvar curUrl = urlList[i];", "fixed": "\t\tfor (var prop in mapping) {\n\t\t\tif (mapping.hasOwnProperty(prop)) {\n\t\t\t\tvar urlList = mapping[prop];\n\t\t\t\tfor (var i = 0; i < urlList.length; i++) {", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/mozilla/bespinclient", "bugType": "no-invalid-this", "problem": "            document.title = filename + ' - editing with Bespin';\n            this.commandLine.showHint('Saved file: ' + file.name);\n            this.hub.publish(\"editor:clean\");", "fixed": "            document.title = filename + ' - editing with Bespin';\n            command.showHint('Saved file: ' + file.name);\n            this.hub.publish(\"editor:clean\");", "message": "Unexpected 'this'."}
{"id": "/data/all/data/Saleslogix/argos-saleslogix", "bugType": "no-undef", "problem": "            var view = App.getView(context.id),\n                entry = view && view.entry,\n                getV = Sage.Platform.Mobile.Utility.getValue;", "fixed": "            var view = App.getView(context.id),\n                entry = view && view.entry;", "message": "Undefined variable."}
{"id": "/data/all/data/UniversalAvenue/react-compose", "bugType": "prefer-spread", "problem": "var merge = function merge(arr) {\n  return _lodash2.default.assign.apply(_lodash2.default, [{}].concat(_toConsumableArray(arr)));\n};", "fixed": "var merge = function merge(arr) {\n  return _assign3.default.apply(_assign3.default.apply.placeholder, [{}].concat(_toConsumableArray(arr)));\n};", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/mozilla/pdf.js", "bugType": "no-redeclare", "problem": "                var matrix = dict.get('Matrix');\n                var pattern = Pattern.parseShading(shading, matrix, xref,\n                                                   resources);\n                args = pattern.getIR();", "fixed": "                var matrix = dict.get('Matrix');\n                pattern = Pattern.parseShading(shading, matrix, xref,\n                                               resources);\n                args = pattern.getIR();", "message": "Redeclaring variable."}
{"id": "/data/all/data/graalvm/graaljs", "bugType": "no-extra-semi", "problem": "  return fromObject(arg);\n};", "fixed": "  return fromObject(arg);\n}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/bittorrenttorque/btapp", "bugType": "guard-for-in", "problem": "\t\t\t\r\n\t\t\tfor(var t in this.files) {\r\n\t\t\t\tvar view = this.files[t];\r\n\t\t\t\t$(this.el).append(view.render().el);\r", "fixed": "\t\t\t\r\n\t\t\tfor(var i = 0; this.files && i < this.files.length; i++) {\r\n\t\t\t\tvar view = this.files[i];\r\n\t\t\t\t$(this.el).append(view.render().el);\r", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/Imaginea/mViewer", "bugType": "no-redeclare", "problem": "    var hasPriv = privilegesAPI.hasPrivilege('createIndex',this.props.currentItem, this.props.currentDb);\n    if(hasPriv){\n      this.setState({showAuth : false});    }", "fixed": "    const hasPriv1 = privilegesAPI.hasPrivilege('createIndex',this.props.currentItem, this.props.currentDb);\n    if(hasPriv1){\n      this.setState({showAuth : false});    }", "message": "Redeclaring variable."}
{"id": "/data/all/data/JKHeadley/rest-hapi", "bugType": "no-redeclare", "problem": "        var linkingModel = mongoose.model(\n          linkingModel.modelName,", "fixed": "        linkingModel = mongoose.model(\n          linkingModel.modelName,", "message": "Redeclaring variable."}
{"id": "/data/all/data/0xfe/vexflow", "bugType": "no-undef", "problem": "    convertToGlyph: function(acc, next) {\n      var glyph_data = Vex.Flow.accidentalCodes(acc.type);\n      var glyph = new Vex.Flow.Glyph(glyph_data.code, this.glyphFontScale);", "fixed": "    convertToGlyph: function(acc, next) {\n      var glyph_data = Flow.accidentalCodes(acc.type);\n      var glyph = new Glyph(glyph_data.code, this.glyphFontScale);", "message": "Undefined variable."}
{"id": "/data/all/data/loopasam/pubmed-watcher", "bugType": "use-isnan", "problem": "\t\t\t\n\tif(score != NaN){\n\t\tarticle.append('<div class=\"progress progress-striped\" style=\"margin-bottom: 0px;\"><div class=\"bar\" style=\"width: ' + score + '%;\">'+score+'% relative relatedness</div></div>');", "fixed": "\t\t\t\n\tif(score != undefined){\n\t\tarticle.append('<div class=\"progress progress-striped\" style=\"margin-bottom: 0px;\"><div class=\"bar\" style=\"width: ' + score + '%;\">'+score+'% relative relatedness</div></div>');", "message": "Use the isNaN function to compare with NaN."}
{"id": "/data/all/data/videojs/http-streaming", "bugType": "guard-for-in", "problem": "      widthBytes[i] = 'width'.charCodeAt(i);\n    }\n    for (i in 'height') {\n      heightBytes[i] = 'height'.charCodeAt(i);", "fixed": "      widthBytes[i] = 'width'.charCodeAt(i);\n    }\n    for (i = 0; i < 'height'.length; i++) {\n      heightBytes[i] = 'height'.charCodeAt(i);", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/thealjey/webcompiler", "bugType": "prefer-rest-params", "problem": "function markdownToArray() {\n  var markdown = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n  markdown = (0, _trim2.default)(markdown);", "fixed": "function markdownToArray(markdown = '') {\n  markdown = (0, _trim2.default)(markdown);", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/rmariuzzo/checkboxes.js", "bugType": "no-invalid-this", "problem": "            $(this).click();\n            expect($(this).prop('checked')).toBe(i < 3); \n        });", "fixed": "            $(this).click();\n        });", "message": "Unexpected 'this'."}
{"id": "/data/all/data/Alfresco/alfresco-js-api", "bugType": "no-invalid-this", "problem": "    this['lastName'] = lastName;\n    this['email'] = email;", "fixed": "    _this['email'] = email;", "message": "Unexpected 'this'."}
{"id": "/data/all/data/facebook/react", "bugType": "no-invalid-this", "problem": "  },\n  onCancel: React.autoBind(function() {\n    if (this.props.onCancel) {\n      this.props.onCancel();", "fixed": "  },\n  onCancel: function() {\n    if (this.props.onCancel) {\n      this.props.onCancel();", "message": "Unexpected 'this'."}
{"id": "/data/all/data/pgilad/gulp-sitemap", "bugType": "no-invalid-this", "problem": "            if (file.isDirectory()) {\n                this.push(file);\n                return cb();\n            }", "fixed": "            if (file.isDirectory()) {\n                cb(file);\n                return;\n            }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/bootstrap-vue/bootstrap-vue", "bugType": "no-unused-vars", "problem": "import { loadFixture, testVM, nextTick, setData } from '../../../tests/utils';", "fixed": "import { loadFixture, testVM } from '../../../tests/utils'", "message": "Unused variable."}
{"id": "/data/all/data/pixelpicosean/voltar", "bugType": "no-unreachable", "problem": "                return this.linear_velocity;\n            } break;\n            case BodyState.ANGULAR_VELOCITY: {\n                return this.angular_velocity;\n            } break;", "fixed": "                return this.linear_velocity;", "message": "Unreachable code."}
{"id": "/data/all/data/onsip/SIP.js", "bugType": "no-invalid-this", "problem": "    var exception = function(status) {\n      this.code = 5;\n      this.name = 'INVALID_STATE_ERROR';", "fixed": "    var exception = function(status) {\n      this.code = 3;\n      this.name = 'INVALID_STATE_ERROR';", "message": "Unexpected 'this'."}
{"id": "/data/all/data/dpricha89/cloudsu", "bugType": "no-redeclare", "problem": "    var key;\n    var account;\n    if (account.type === 'CMS') {", "fixed": "    var key;\n    if (account.type === 'CMS') {", "message": "Redeclaring variable."}
{"id": "/data/all/data/kissio/kiss.io", "bugType": "no-extra-semi", "problem": "  this.expect('Opcode', 2, this.processPacket);  \n};", "fixed": "  this.expect('Opcode', 2, this.processPacket);  \n}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/ff0000-ad-tech/wp-creative-server", "bugType": "no-undef", "problem": "\t\t\n\t\tconst target = state.getTarget(\n\t\t\ttargets.generateId(size, index)", "fixed": "\t\t\n\t\tconst target = state.getTargets(\n\t\t\ttargets.generateId(size, index)", "message": "Undefined variable."}
{"id": "/data/all/data/elkarte/Elkarte", "bugType": "no-unreachable", "problem": "\t\t\treturn true;\n\t\tbreak;\n\t\t", "fixed": "\t\t\treturn true;\n\t\t", "message": "Unreachable code."}
{"id": "/data/all/data/lmenezes/elasticsearch-kopf", "bugType": "no-useless-escape", "problem": "\t\t\t} else {\n\t\t\t\tcontent += '<div class=\\\"json-content\\\"\">' + formatValue(x)+ ',</div>';\t\n\t\t\t}", "fixed": "\t\t\t} else {\n\t\t\t\tcontent += '<div>' + formatValue(x)+ ',</div>';\t\n\t\t\t}", "message": "Unnecessary escape character."}
{"id": "/data/all/data/onivim/oni", "bugType": "no-unused-vars", "problem": "const Q = require(\"q\")\nconst path = require(\"path\")\nconst rgb = (r, g, b) => `rgb(${r}, ${g}, ${b})`", "fixed": "const path = require(\"path\")\nconst rgb = (r, g, b) => `rgb(${r}, ${g}, ${b})`", "message": "Unused variable."}
{"id": "/data/all/data/mathjax/MathJax", "bugType": "no-dupe-keys", "problem": "        0x2017: {alias: 0x23AF, dir:H}, \n        0x203E: {alias: 0x00AF, dir:H}, \n        0x2212: {alias: 0x23AF, dir:H}, ", "fixed": "        0x2017: {alias: 0x23AF, dir:H}, \n        0x2212: {alias: 0x23AF, dir:H}, ", "message": "Duplicate key '8254'."}
{"id": "/data/all/data/calvinmetcalf/immediate", "bugType": "no-throw-literal", "problem": "\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow (\"setImmediate.js: shoot me now! there's no way I'm implimenting an evaluated handler\");\n\t\t\t\t\t\t}", "fixed": "\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"setImmediate.js: shoot me now! there's no way I'm implementing an evaluated handler!\");\n\t\t\t\t\t\t}", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/uikit/uikit", "bugType": "no-extra-semi", "problem": "    return Animations;\n};\nexport function translate(value = 0) {", "fixed": "    return Animations;\n}\nexport function translate(value = 0) {", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/mtford90/siesta", "bugType": "no-caller", "problem": "        \n        ssf = ssf || arguments.callee;\n        if (ssf && Error.captureStackTrace) {", "fixed": "        \n        if (ssf && Error.captureStackTrace) {", "message": "Avoid arguments.callee."}
{"id": "/data/all/data/tensorflow/tensorboard", "bugType": "no-undef", "problem": "            runInitializer.call(this);\n            var tagInitializer = tf_storage.getStringInitializer(this._getPersistenceKey(Type.TAG), { defaultValue: '', polymerProperty: '_tagRegex' });\n            tagInitializer.call(this);", "fixed": "            runInitializer.call(this);\n            var tagInitializer = this._storageBinding.getInitializer(this._getPersistenceKey(Type.TAG), { defaultValue: '', polymerProperty: '_tagRegex' });\n            tagInitializer.call(this);", "message": "Undefined variable."}
{"id": "/data/all/data/eclipse/orion.client", "bugType": "guard-for-in", "problem": "\t\t\t}\n\t\t\tfor(var key in instrumentationJSON){\n\t\t\t\tvar value = instrumentationJSON[key];", "fixed": "\t\t\t}\n\t\t\tObject.keys(instrumentationJSON).forEach(function(key) {\n\t\t\t\tvar value = instrumentationJSON[key];", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/serialport/node-serialport", "bugType": "no-unused-vars", "problem": "      };\n      var port = new SerialPort('/dev/exists', { flowcontrol : ['pumpkins'] }, false, errorCallback);\n    });", "fixed": "      };\n      this.port = new SerialPort('/dev/exists', { flowcontrol: ['pumpkins'] }, false, errorCallback);\n    });", "message": "Unused variable."}
{"id": "/data/all/data/bitshares/bitsharesjs", "bugType": "no-extra-semi", "problem": "        return this.recoverPublicKey(sha256(buffer));\n    };", "fixed": "        return this.recoverPublicKey(sha256(buffer));\n    }", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/naptha/tesseract.js", "bugType": "no-undef", "problem": "  } catch (err) {\n    if (isBrowser && err instanceof DOMException) {\n      ", "fixed": "  } catch (err) {\n    if (isWebWorker && err instanceof DOMException) {\n      ", "message": "Undefined variable."}
{"id": "/data/all/data/deepjs/deepjs", "bugType": "no-invalid-this", "problem": "\t\tfunc._isDone_ = true;\n\t\taddInChain.call(this, func);\n\t\treturn this;\n\t});", "fixed": "\t\tfunc._isDone_ = true;\n\t\treturn self._enqueue(func);\n\t});", "message": "Unexpected 'this'."}
{"id": "/data/all/data/hyperledger/fabric-test", "bugType": "valid-typeof", "problem": "    if (language == 'golang') {\n        chaincodePath = uiContent.deploy.chaincodePath;\n    } else if (typeof(goPath) !== '') {\n        chaincodePath = path.join(goPath, 'src', uiContent.deploy.chaincodePath);", "fixed": "    if (language == 'golang') {\n        chaincodePath = uiContent.deploy.chaincodePath;\n    } else if (goPath !== '') {\n        chaincodePath = path.join(goPath, 'src', uiContent.deploy.chaincodePath);", "message": "Invalid typeof comparison value."}
{"id": "/data/all/data/topojson/topojson", "bugType": "no-redeclare", "problem": "    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (var i = 0, n = endArcs.length; i < n; ++i) {\n        var endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {", "fixed": "    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/agershun/alasql", "bugType": "no-inner-declarations", "problem": "\t\t\t\tfunction s2ab(s) {\n\t\t\t\t\tvar buf = new ArrayBuffer(s.length);", "fixed": "\t\t\t\tvar s2ab = function(s) {\n\t\t\t\t\tvar buf = new ArrayBuffer(s.length);", "message": "Move function declaration to function body root."}
{"id": "/data/all/data/quantopian/qgrid", "bugType": "no-invalid-this", "problem": "        this.filter_value_max = ui.values[1];\n        this.filter_elem.find(\".min-value\").html(this.filter_value_min);\n        this.filter_elem.find(\".max-value\").html(this.filter_value_max);", "fixed": "        this.filter_value_max = ui.values[1];\n        this.set_value(this.filter_value_min, this.filter_value_max);", "message": "Unexpected 'this'."}
{"id": "/data/all/data/qooxdoo/qooxdoo", "bugType": "no-undef", "problem": "    name         : \"nextState\",\n    type         : qx.constant.Type.STRING\n  });", "fixed": "    name         : \"nextState\",\n    type         : \"string\"\n  });", "message": "Undefined variable."}
{"id": "/data/all/data/mde/fleegix-js-javascript-toolkit", "bugType": "no-throw-literal", "problem": "  setAttribute: function (unit, n) {\n    if (isNaN(n)) { throw('Units must be a number.'); }\n    var dt = new Date(this.year, this.month, this.date,", "fixed": "  setAttribute: function (unit, n) {\n    if (isNaN(n)) { throw new Error('Units must be a number.'); }\n    var dt = new Date(this.year, this.month, this.date,", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/medikoo/es5-ext", "bugType": "no-invalid-this", "problem": "module.exports = f(function () {\n\treturn create(getPrototypeOf(this),\n\t\tgetOwnPropertyNames(this).reduce(function (o, key) {", "fixed": "module.exports = function () {\n\treturn create(getPrototypeOf(this),\n\t\tgetOwnPropertyNames(this).reduce(function (o, key) {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/sir-dunxalot/ember-easy-form-extensions", "bugType": "no-invalid-this", "problem": "  if (options.hash.text || options.hash.textBinding) {\n    return Ember.Handlebars.helpers.view.call(this, Ember.EasyForm.Hint, options);\n  }", "fixed": "  if (options.hash.text || options.hash.textBinding) {\n    return EasyFormShims.viewHelper(this, Ember.EasyForm.Hint, options);\n  }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/moneyhub/navy", "bugType": "no-invalid-this", "problem": "  this.Then(/I should see that my local copy is no longer applied/, async function () {\n    const url = `http:\n    expect((await fetch(url)", "fixed": "  this.Then(/I should see that my local copy is no longer applied/, async function () {\n    const url = await this.navy.url(TEST_SERVICE_NAME)\n    expect((await fetch(url)", "message": "Unexpected 'this'."}
{"id": "/data/all/data/missioncommand/emp3-web", "bugType": "no-redeclare", "problem": "  var layerNames, config, url;\n    var layerNames, useProxy, url, config;\n    this.id = wms.coreId;", "fixed": "  var layerNames, config, url;\n    this.id = wms.coreId;", "message": "Redeclaring variable."}
{"id": "/data/all/data/svgdotjs/svg.textmorph.js", "bugType": "valid-typeof", "problem": "    if(typeof cb == 'boolen'){\n      lazy = cb;", "fixed": "    if(typeof cb == 'boolean'){\n      lazy = cb;", "message": "Invalid typeof comparison value."}
{"id": "/data/all/data/foam-framework/foam", "bugType": "no-constant-condition", "problem": "FOAM.lookup = function(key, opt_X) {\n  if ( ! typeof key === 'string' ) return key;\n  var path = key.split('.');", "fixed": "FOAM.lookup = function(key, opt_X) {\n  if ( ! ( typeof key === 'string' ) ) return key;\n  var path = key.split('.');", "message": "Unexpected constant condition."}
{"id": "/data/all/data/chen-robert/ftw", "bugType": "no-invalid-this", "problem": "\r\neloUtil.ratingChange = (elo, opponentElo, score, opponentScore) => {\r\n  const result = this.scoreToResult(score, opponentScore);\r\n  const winChance = 1 / (1 + (10 ** ((opponentElo - elo) / 400)));\r", "fixed": "\r\neloUtil.ratingChange = function(elo, opponentElo, score, opponentScore){\r\n  const result = this.scoreToResult(score, opponentScore);\r\n  const winChance = 1 / (1 + (10 ** ((opponentElo - elo) / 400)));\r", "message": "Unexpected 'this'."}
{"id": "/data/all/data/ideaportriga/nexus-bridge", "bugType": "prefer-rest-params", "problem": "      N19_REACT_PR.prototype.BindData = function() {\n        SiebelAppFacade.N19_REACT_PR.superclass.BindData.apply(this, arguments)\n      }", "fixed": "      N19_REACT_PR.prototype.BindData = function() {\n        \n      }", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/jsonmaur/cdnex", "bugType": "no-process-exit", "problem": "        if (!overwrite) {\n          console.log(chalk.red('change your output and try again.'))\n          process.exit(1)\n        }", "fixed": "        if (!overwrite) {\n          throw new Error(chalk.red('change your output and try again.'))\n        }", "message": "Don't use process.exit(); throw an error instead."}
{"id": "/data/all/data/softindex/uikernel", "bugType": "no-invalid-this", "problem": "      cb(err, data);\n    }.bind(this));\n  }),", "fixed": "      cb(err, data);\n    }.bind(this));\n  },", "message": "Unexpected 'this'."}
{"id": "/data/all/data/bgrsquared/d3-react-squared", "bugType": "no-case-declarations", "problem": "    case SET_EVENT:\n      const {data, event, eventGroup} = action.event;\n      const timeStamp = new Date().getTime();", "fixed": "    case SET_EVENT:\n    {\n      const { data, event, eventGroup } = action.event;\n      const timeStamp = new Date().getTime();", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/qualiancy/carbon", "bugType": "comma-style", "problem": "var fork = require('child_projess').fork\n  , debug = require('debug')('carbon:balancer')\n  , env = process.env.NODE_ENV", "fixed": "var debug = require('debug')('carbon:balancer')\n  , env = process.env.NODE_ENV", "message": "',' should be placed last."}
{"id": "/data/all/data/HelixDesignSystem/helix-ui", "bugType": "no-extra-boolean-cast", "problem": "        set indeterminate (value) {\n            if (Boolean(value)) {\n                this.setAttribute('indeterminate', '');", "fixed": "        set indeterminate (value) {\n            if (value) {\n                this.setAttribute('indeterminate', '');", "message": "Redundant Boolean call."}
{"id": "/data/all/data/CapivaraJS/capivarajs", "bugType": "no-array-constructor", "problem": "            capivara.isObject({}) &&\n            capivara.isObject(new Array())\n        ).toBeTruthy();", "fixed": "            capivara.isObject({}) &&\n            capivara.isObject([]),\n        ).toBeTruthy();", "message": "The array literal notation [] is preferable."}
{"id": "/data/all/data/simov/grant", "bugType": "no-invalid-this", "problem": "      else if (provider.transport === 'session') {\n        this.session.grant.response = data\n        this.response.redirect(provider.callback || '')", "fixed": "      else if (provider.transport === 'session') {\n        session.response = data\n        this.response.redirect(provider.callback || '')", "message": "Unexpected 'this'."}
{"id": "/data/all/data/philbooth/check-types.js", "bugType": "guard-for-in", "problem": "        for (property in duck) {\n            if (thing.hasOwnProperty(property) === false) {\n                return false;\n            }", "fixed": "        for (property in duck) {\n            if (duck.hasOwnProperty(property)) {\n                if (thing.hasOwnProperty(property) === false) {\n                    return false;", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/josdejong/jsoneditor", "bugType": "no-extra-bind", "problem": "    var onBlurHandler = function (e) {\n        rs.hideDropDown();\n        \n    }.bind(rs);", "fixed": "'use strict'", "message": "The function binding is unnecessary."}
{"id": "/data/all/data/levindoneto/IoT-Modelling-Tool", "bugType": "no-fallthrough", "problem": "                typeDB = 'SensingDevice';\n            case 'Actuator':\n                typeDB = 'ActuatingDevice';", "fixed": "                typeDB = 'SensingDevice';\n                break;\n            case 'Actuator':\n                typeDB = 'ActuatingDevice';", "message": "Expected a 'break' statement before 'case'."}
{"id": "/data/all/data/uikit/uikit", "bugType": "no-case-declarations", "problem": "                    case 'backgroundColor':\n                    case 'borderColor':\n                        const [start, end, p] = getStep(steps, percent);\n                        css[prop] = `rgba(${", "fixed": "                    case 'backgroundColor':\n                    case 'borderColor': {\n                        const [start, end, p] = getStep(steps, percent);\n                        css[prop] = `rgba(${", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/whitecolor/ts-node-dev", "bugType": "comma-style", "problem": "    , polling = process.platform == 'win32'\n    , called = false", "fixed": "    , polling = process.platform == 'win32'", "message": "',' should be placed last."}
{"id": "/data/all/data/mattm/abtestcalculator", "bugType": "no-unreachable", "problem": "\t\treturn dpr / bsr;\n\t\t4+4;\n\t},", "fixed": "\t\treturn dpr / bsr;\n\t},", "message": "Unreachable code."}
{"id": "/data/all/data/odota/rapier", "bugType": "no-unused-vars", "problem": "var BitStream = require('./BitStream');\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;", "fixed": "var BitStream = require('./BitStream');\nvar EventEmitter = require('events').EventEmitter;", "message": "Unused variable."}
{"id": "/data/all/data/mjanssen/graduation-frontend-setups", "bugType": "no-unused-vars", "problem": "import React from 'react';\nimport Input from '../Input/Input';\nimport Paragraph from '../Paragraph/Paragraph';", "fixed": "import React from 'react';", "message": "Unused variable."}
{"id": "/data/all/data/intersel/Blapy", "bugType": "no-useless-escape", "problem": "\t\t});\n\t\tapp.post(/\\#\\/(.*)/, function() \n\t\t\t\t{", "fixed": "\t\t});\n\t\tapp.post(/(.*)/, function() \n\t\t\t\t{", "message": "Unnecessary escape character."}
{"id": "/data/all/data/snyk/snyk", "bugType": "prefer-spread", "problem": "      }\n      return module.apply(null, arguments);\n    };", "fixed": "      }\n      return module(...args);\n    };", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/apache/shindig", "bugType": "guard-for-in", "problem": "        \n        for (var key in actionObj) {\n          actionClone[key.substring(1)] = actionObj[key];\n        }\n        ", "fixed": "        \n        for (var key in actionObj) {\n          if(actionObj.hasOwnProperty(key)) {\n            actionClone[key.substring(1)] = actionObj[key];\n          }", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/expressjs/express", "bugType": "comma-style", "problem": "      var app = express()\n        , calls = 0;\n      app.use(function(req, res){", "fixed": "      var app = express()\n      app.use(function(req, res){", "message": "',' should be placed last."}
{"id": "/data/all/data/kenchris/jakecache", "bugType": "no-undef", "problem": "    \n    return caches.keys().then(cacheNames => {\n      return Promise.resolve(!!cacheNames.length);\n    });\n  }).then(upgrade => {", "fixed": "    \n    return caches.keys().then(cacheNames => {\n      return Promise.resolve(!!cacheNames.length)\n    })\n  }).then(upgrade => {", "message": "Undefined variable."}
{"id": "/data/all/data/bassman5/MickAngularSeed", "bugType": "no-invalid-this", "problem": "  this.Then(/^I enter invalid email addresses$/, function (table, callback) {\n    this.LoginPage.passwordInput().clear();\n    this.LoginPage.passwordInput().sendKeys('aPassword');\n    var tests = table.rows().map(function (row) {", "fixed": "  this.Then(/^I enter invalid email addresses$/, function (table, callback) {\n    this.LoginPage.typePassword('aPassword');\n    var tests = table.rows().map(function (row) {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/cowbell/mopster", "bugType": "no-invalid-this", "problem": "export default Ember.Route.extend({\n  beforeModel: () => {\n    this.controllerFor(\"application\").set(\"bare\", true);\n  },", "fixed": "export default Ember.Route.extend({\n  beforeModel: function () {\n    this.controllerFor(\"application\").set(\"bare\", true);\n  },", "message": "Unexpected 'this'."}
{"id": "/data/all/data/TalkingData/inmap", "bugType": "no-unused-vars", "problem": "} from './../common/util';\nimport State from './../config/OnState';\nimport LineStringAnimationConfig from './../config/LineStringAnimationConfig';", "fixed": "} from './../common/util';\nimport LineStringAnimationConfig from './../config/LineStringAnimationConfig';", "message": "Unused variable."}
{"id": "/data/all/data/OSBI/saiku", "bugType": "no-redeclare", "problem": "        Saiku.ui.unblock();\n        var html = '<div id=\"fancy_results\" class=\"workspace_results\" style=\"overflow:visible\">' + html + '</div>';\n        this.remove();", "fixed": "        Saiku.ui.unblock();\n        html = '<div id=\"fancy_results\" class=\"workspace_results\" style=\"overflow:visible\">' + html + '</div>';\n        this.remove();", "message": "Redeclaring variable."}
{"id": "/data/all/data/2600hz/monster-ui", "bugType": "no-dupe-keys", "problem": "\t\tlogin: function() {\n\t\t\tprivateWebphone.login();\n\t\t},\n\t\tlogin: function(args) {\n\t\t\tprivateWebphone.loginWebphoneUser(args);", "fixed": "\t\tinit: function() {\n\t\t\tprivateWebphone.init();\n\t\t},\n\t\tlogin: function(args) {\n\t\t\tprivateWebphone.loginWebphoneUser(args);", "message": "Duplicate key 'login'."}
{"id": "/data/all/data/entrylabs/entryjs", "bugType": "no-invalid-this", "problem": "        addSpaceInput.onfocus = _setFocused;\n        addSpaceInput.onblur = _setBlurredTimer(function() {\n            Entry.do('listAddSetName', this.value);\n        });", "fixed": "        addSpaceInput.onfocus = _setFocused;\n        addSpaceInput.onblur = function() {\n            Entry.do('listAddSetName', this.value);\n        };", "message": "Unexpected 'this'."}
{"id": "/data/all/data/adobe/node-smb-server", "bugType": "no-duplicate-case", "problem": "        break;\n      case errno.code.ENOENT:\n        status = consts.STATUS_NO_SUCH_FILE;\n        break;", "fixed": "        break;", "message": "Duplicate case label."}
{"id": "/data/all/data/CartoDB/carto.js", "bugType": "no-debugger", "problem": "    if (!type) {\n      debugger;\n      cdb.log.error(\"creating a layer without type\");", "fixed": "    if (!type) {\n      cdb.log.error(\"creating a layer without type\");", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/jquery/jquery-mobile", "bugType": "no-redeclare", "problem": "\t\t} else {\n\t\t\tvar menu = $( this.element ).customselect().data( \"customselect\" );\n\t\t}", "fixed": "\t\t} else {\n\t\t\tmenu = $( this.element ).customselect().data( \"customselect\" );\n\t\t}", "message": "Redeclaring variable."}
{"id": "/data/all/data/abecms/abecms", "bugType": "no-redeclare", "problem": "  case 'IN':\n    var values = getWhereValuesToCompare(where, jsonDoc, jsonOriginalDoc)\n    isNotCorrect = true", "fixed": "  case 'IN':\n    values = getWhereValuesToCompare(where, jsonDoc, jsonOriginalDoc)\n    isNotCorrect = true", "message": "Redeclaring variable."}
{"id": "/data/all/data/SparkPost/sparkpost-api-documentation", "bugType": "comma-style", "problem": "    ]\n    , staticTempDir = 'static/'\n    , striptags = require('striptags');", "fixed": "    ]\n    , staticTempDir = 'static/';", "message": "',' should be placed last."}
{"id": "/data/all/data/enricomarino/is", "bugType": "no-new-wrappers", "problem": "  t.ok(isFalse(false), 'false is false');\n  t.ok(isFalse(new Boolean(false)), 'object false is false');\n  t.notOk(isFalse(true), 'true is not false');", "fixed": "  t.ok(isFalse(false), 'false is false');\n  t.ok(isFalse(Object(false)), 'object false is false');\n  t.notOk(isFalse(true), 'true is not false');", "message": "Do not use Boolean as a constructor."}
{"id": "/data/all/data/arackaf/mongo-graphql-starter", "bugType": "no-unused-vars", "problem": "import { ObjectId } from \"mongodb\";\nimport processHook from \"./processHook\";\nimport { processInsertion, processInsertions } from \"./dbHelpers\";", "fixed": "import { ObjectId } from \"mongodb\";\nimport { processInsertions } from \"./dbHelpers\";", "message": "Unused variable."}
{"id": "/data/all/data/SAP/openui5", "bugType": "no-undef", "problem": "\t\t\tonAfterRendering: function() {\n\t\t\t\tsap.ui.Device.orientation.attachHandler(jQuery.proxy(this._fnOrientationChange, this));\n\t\t\t},", "fixed": "\t\t\tonAfterRendering: function() {\n\t\t\t\tDevice.orientation.attachHandler(jQuery.proxy(this._fnOrientationChange, this));\n\t\t\t},", "message": "Undefined variable."}
{"id": "/data/all/data/schteppe/cannon.js", "bugType": "guard-for-in", "problem": "CANNON.ObjectPool.prototype.release = function(){\n    for(var i in arguments)\n        this.objects.push(arguments[i]);", "fixed": "CANNON.ObjectPool.prototype.release = function(){\n    var Nargs = arguments.length;\n    for(var i=0; i!==Nargs; i++){\n        this.objects.push(arguments[i]);", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/iLanguage/iLanguage", "bugType": "no-cond-assign", "problem": "                    data.user.permissions = [];\n                  }\n                  if(data.user.hotkeys = {empty: \"hotkey\"}){\n                    data.user.hotkeys = [];", "fixed": "                    data.user.permissions = [];\n                  }\n                  if(data.user.hotkeys == {empty: \"hotkey\"}){\n                    data.user.hotkeys = [];", "message": "Expected a conditional expression and instead saw an assignment."}
{"id": "/data/all/data/jelovirt/dita-generator", "bugType": "no-undef", "problem": "\t\t\t}\n\t\t\tval = toPt(val);\n\t\t\tvar f = 0.9;", "fixed": "\t\t\t}\n\t\t\tv= toPt(v);\n\t\t\tvar f = 0.9;", "message": "Undefined variable."}
{"id": "/data/all/data/pixelandtonic/garnishjs", "bugType": "no-invalid-this", "problem": "                this.trigger('dragStart');\n                this.settings.onDragStart();\n            }, this));\n        },", "fixed": "                this.trigger('dragStart');\n                this.settings.onDragStart();\n            }.bind(this));\n        },", "message": "Unexpected 'this'."}
{"id": "/data/all/data/guiqui/react-timeline-gantt", "bugType": "no-debugger", "problem": "    renderSiderow(){\n        debugger\n        let result=[];", "fixed": "    renderSiderow(){\n        let result=[];", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/neveldo/mapael-maps", "bugType": "no-redeclare", "problem": "\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar yfactor = -102.17420080747;\n\t\t\t\t\t\t\tvar yoffset = 1888.497;\n\t\t\t\t\t\t\tvar y = (lat * yfactor) + yoffset;\n\t\t\t\t\t\t} else if (lat < 6.479067 && lat > 1.241358 && lon > -55.823364 && lon < -49.308472) {", "fixed": "\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tyfactor = -102.17420080747;\n\t\t\t\t\t\t\tyoffset = 1888.497;\n\t\t\t\t\t\t\ty = (lat * yfactor) + yoffset;\n\t\t\t\t\t\t} else if (lat < 6.479067 && lat > 1.241358 && lon > -55.823364 && lon < -49.308472) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/thmsbfft/oryoki", "bugType": "no-extra-bind", "problem": "    e.preventDefault()\n    hide()\n  }.bind(this))", "fixed": "    e.preventDefault()\n    hide()\n  })", "message": "The function binding is unnecessary."}
{"id": "/data/all/data/isiahmeadows/simple-require-loader", "bugType": "no-invalid-this", "problem": "    }\n})(this)", "fixed": "    }\n})(this.r = {}, function () {}) ", "message": "Unexpected 'this'."}
{"id": "/data/all/data/panva/node-oidc-provider", "bugType": "generator-star-spacing", "problem": "module.exports = function getSessionHandler(provider) {\n  return function * sessionHandler(next) {\n    this.oidc.session = yield provider.get('Session').get(this);\n    yield next;", "fixed": "module.exports = function getSessionHandler(provider) {\n  return function* sessionHandler(next) {\n    this.oidc.session = yield provider.Session.get(this);\n    yield next;", "message": "Unexpected space before *."}
{"id": "/data/all/data/mozilla/pdf.js", "bugType": "no-invalid-this", "problem": "    messageHandler.on('FetchBuiltInCMap', function(data) {\n      if (this.destroyed) {\n        return Promise.reject(new Error('Worker was destroyed'));", "fixed": "    messageHandler.on('FetchBuiltInCMap', (data) => {\n      if (this.destroyed) {\n        return Promise.reject(new Error('Worker was destroyed'));", "message": "Unexpected 'this'."}
{"id": "/data/all/data/brianc/node-postgres", "bugType": "no-redeclare", "problem": "var EventEmitter = require('events').EventEmitter;\nvar sys = require('sys');var sys = require('sys');\nvar Result = require(__dirname + \"/result\");\nvar types = require(__dirname + \"/types\");", "fixed": "var EventEmitter = require('events').EventEmitter;\nvar util = require('util');", "message": "Redeclaring variable."}
{"id": "/data/all/data/vega/vega", "bugType": "no-invalid-this", "problem": "      b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n      b.init(this._model, this._renderer, mark, group.items[i], this, group._id, inherit);\n      this._children[group._id].push({ ", "fixed": "      b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n      b.init(this._model, mark, group.items[i], this, group._id, inherit);\n      this._children[group._id].push({ ", "message": "Unexpected 'this'."}
{"id": "/data/all/data/learningequality/kolibri", "bugType": "prefer-spread", "problem": "  emit(...args) {\n    coreApp.emit.apply(coreApp, args);\n  }", "fixed": "  emit(...args) {\n    coreApp.emit(...args);\n  }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/rempl/rempl", "bugType": "no-undef", "problem": "            \n            var args = basis.array(arguments);\n            var callback = false;", "fixed": "            \n            var args = utils.slice(arguments);\n            var callback = false;", "message": "Undefined variable."}
{"id": "/data/all/data/Human-Connection/API", "bugType": "no-unreachable", "problem": "      case 'resendVerifySignup':\n        return buildEmail('verify-email', 'Confirm Signup', 'verify', user);\n        break;\n      case 'verifySignup':", "fixed": "      case 'resendVerifySignup':\n        return buildEmail('verify-email', 'Confirm signup', 'verify', user);\n      case 'verifySignup':", "message": "Unreachable code."}
{"id": "/data/all/data/brodybits/prettierx", "bugType": "no-fallthrough", "problem": "      );\n    case \"es5\":\n      return \"es5\";\n    case \"all\":", "fixed": "      );\n      return \"es5\";\n    case \"es5\":\n      return \"es5\";\n    case \"all\":", "message": "Expected a 'break' statement before 'case'."}
{"id": "/data/all/data/googlearchive/firebase-util", "bugType": "no-unreachable", "problem": "          return true;\n          break;\n        case '$value':", "fixed": "          return true;\n        case '$value':", "message": "Unreachable code."}
{"id": "/data/all/data/applitopia/immutable-sorted", "bugType": "no-this-before-super", "problem": "    }\n    this.name = 'indexed reverse';\n    this.__reversedIndices = !!(maintainIndices ^ sequence.__reversedIndices);", "fixed": "    }\n    this.__reversedIndices = !!(maintainIndices ^ sequence.__reversedIndices);", "message": "'this' is not allowed before 'super()'."}
{"id": "/data/all/data/ryejs/rye", "bugType": "comma-style", "problem": "    function removeEvent (element, event) {\n        var id = util.getUid(element)\n          , evt = events.parseEvent(event)\n          , eventType = listeners[id] && listeners[id][evt.name]", "fixed": "Rye.define('DOMEvents', function(){", "message": "',' should be placed last."}
{"id": "/data/all/data/simpleweb/romulus-cli", "bugType": "no-constant-condition", "problem": "if (process.env['NODE_ENV'] = 'development') {\n  const Logger = require('./Logger.js');", "fixed": "if (process.env['NODE_ENV'] === 'development') {\n  const Logger = require('./Logger.js');", "message": "Unexpected constant condition."}
{"id": "/data/all/data/kvz/locutus", "bugType": "no-undef", "problem": "    var js_code = this.file_get_contents(filename);\n    var script_block = document.createElementNS ? document.createElementNS('http:\n    script_block.type = 'text/javascript';", "fixed": "    var js_code = this.file_get_contents(filename);\n    var script_block = d.createElementNS ? d.createElementNS('http:\n    script_block.type = 'text/javascript';", "message": "Undefined variable."}
{"id": "/data/all/data/h2non/rocky", "bugType": "prefer-spread", "problem": "      if (headArgs && !res.headersSent) {\n        res.writeHead.apply(res, headArgs)\n      }", "fixed": "      if (headArgs && !res.headersSent) {\n        res.writeHead(headArgs)\n      }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/wuyouzhuguli/FEBS-Shiro", "bugType": "no-array-constructor", "problem": "            $form.find(\"input[name='remark']\").val(role.remark);\n            var menuArr = new Array();\n            for (var i = 0; i < role.menuIds.length; i++) {", "fixed": "            $form.find(\"input[name='remark']\").val(role.remark);\n            var menuArr = [];\n            for (var i = 0; i < role.menuIds.length; i++) {", "message": "The array literal notation [] is preferable."}
{"id": "/data/all/data/zurb/tribute", "bugType": "no-extra-bind", "problem": "                    }\n                    return function () {return '<li class=\"no-match\">No match!</li>'}.bind(this)\n                })(noMatchTemplate),", "fixed": "                    }\n                    return noMatchTemplate\n                })(noMatchTemplate),", "message": "The function binding is unnecessary."}
{"id": "/data/all/data/RubyLouvre/avalon", "bugType": "no-redeclare", "problem": "                    callback.apply(this, args)\n            }\n            for (var i = 0, callback; callback = all[i++]; ) {\n                if (isFunction(callback))", "fixed": "                    callback.apply(this, args)\n            }\n            for (i = 0; callback = all[i++]; ) {\n                if (isFunction(callback))", "message": "Redeclaring variable."}
{"id": "/data/all/data/TiddlyWiki/TiddlyWiki", "bugType": "no-redeclare", "problem": "\t\t}\n\t\tvar btn = createTiddlyButton(createTiddlyElement(popup,\"li\"),caption,null,config.commands.syncing.onChooseServer);\n\t\tbtn.setAttribute(\"tiddler\",title);", "fixed": "\t\t}\n\t\tbtn = createTiddlyButton(createTiddlyElement(popup,\"li\"),caption,null,config.commands.syncing.onChooseServer);\n\t\tbtn.setAttribute(\"tiddler\",title);", "message": "Redeclaring variable."}
{"id": "/data/all/data/graphology/graphology", "bugType": "prefer-spread", "problem": "    if (object[k] instanceof Set)\n      edges.push.apply(edges, take(object[k].values(), object[k].size));\n    else", "fixed": "    if (object[k] instanceof Set)\n      object[k].forEach(edgeData => edges.push(edgeData.key));\n    else", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/meteor/meteor", "bugType": "no-invalid-this", "problem": "          \n          if (client !== self.client) return;\n          f.apply(this, arguments);\n        }, description)", "fixed": "          \n          if (client !== this.client) return;\n          f.apply(this, arguments);\n        }, description)", "message": "Unexpected 'this'."}
{"id": "/data/all/data/ludumdare/ludumdare", "bugType": "no-constant-condition", "problem": "\t\t\t\tNewPath = '/games';\n\t\t\telse if ( false )\n\t\t\t\tNewPath = '/articles';", "fixed": "\t\t\t\tNewPath = '/games';\n\t\t\telse if ( node['articles'] > 0 )\n\t\t\t\tNewPath = '/articles';", "message": "Unexpected constant condition."}
{"id": "/data/all/data/nodejam/nodejam", "bugType": "no-invalid-this", "problem": "        yield exec(\"cp \" + dest + \" \" + clientDest);\n        yield restartNeeded.call(this);\n    }, \"server_jsx_compile\");", "fixed": "        yield exec(\"cp \" + dest + \" \" + clientDest);\n        this.queue('restart_server');\n    }, \"server_jsx_compile\");", "message": "Unexpected 'this'."}
{"id": "/data/all/data/zaknelson/hike.io", "bugType": "no-invalid-this", "problem": "\t\t\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\t\t\t$(this).css(\"opacity\", \"1\");\n\t\t\t\t\t\t\t\t});", "fixed": "\t\t\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\t\t\tpreview.css(\"opacity\", \"1\");\n\t\t\t\t\t\t\t\t});", "message": "Unexpected 'this'."}
{"id": "/data/all/data/cubehouse/themeparks", "bugType": "no-useless-escape", "problem": "var regex_legendTimes = /([0-9]+(?:\\:[0-9]+)?[ap]m)\\s*\\-\\s*([0-9]+(?:\\:[0-9]+)?[ap]m)/i;\nfunction ParseOpeningLegend(legendData) {", "fixed": "var regex_legendTimes = /([0-9]+(?::[0-9]+)?[ap]m)\\s*-\\s*([0-9]+(?::[0-9]+)?[ap]m)/i;\nfunction ParseOpeningLegend(legendData) {", "message": "Unnecessary escape character."}
{"id": "/data/all/data/nhn/tui.image-editor", "bugType": "no-invalid-this", "problem": "        fabric.Image.fromURL(url, $.proxy(function(oImage) {\n            var canvas = this.getCanvas(),\n                scaleFactor = this.calcInitialScale(oImage);", "fixed": "        fabric.Image.fromURL(url, $.proxy(function(oImage) {\n            var canvas = this.getCanvas();", "message": "Unexpected 'this'."}
{"id": "/data/all/data/appbaseio/mirage", "bugType": "no-redeclare", "problem": "            else if (self.allowHF) {\n                var bodyHeight = $('body').height();\n                setTimeout(function () {", "fixed": "            else if (self.allowHF) {\n                setTimeout(function () {", "message": "Redeclaring variable."}
{"id": "/data/all/data/stevenmhunt/tmpl.loader", "bugType": "no-array-constructor", "problem": "\t\n\tvar _onRegister = new Array();\r\n\tvar onRegister = function(name, lambda) {\r", "fixed": "\t\n\tvar _onRegister = [];\r\n\tvar onRegister = function(name, lambda) {\r", "message": "The array literal notation [] is preferable."}
{"id": "/data/all/data/enyojs/extra", "bugType": "no-cond-assign", "problem": "\t\t\tvar videos = inResponse && inResponse.feed && inResponse.feed.entry || [];\r\n\t\t\tfor (var i=0, l; v=videos[i]; i++) {\r\n\t\t\t\tl = v.id.$t;\r", "fixed": "\t\t\tvar videos = inResponse && inResponse.feed && inResponse.feed.entry || [];\r\n\t\t\tvar v;\r\n\t\t\tfor (var i=0, l; (v=videos[i]); i++) {\r\n\t\t\t\tl = v.id.$t;\r", "message": "Expected a conditional expression and instead saw an assignment."}
{"id": "/data/all/data/flowtsohg/mdx-m3-viewer", "bugType": "no-extra-semi", "problem": "    out[7] = uint8[7];\n    return out;\n};", "fixed": "  out[7] = uint8[7];\n  return out;\n}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/Jermolene/TiddlyWiki5", "bugType": "prefer-spread", "problem": "\tEditTextWidget.prototype.execCommand = function(command ) {\n\t\tthis.engine.execCommand.apply(this.engine,Array.prototype.slice.call(arguments,0));\n\t};", "fixed": "\t\tnewEvent.shiftKey = event.shiftKey;\n\t\treturn !this.parentDomNode.dispatchEvent(newEvent);\n\t};", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/sharmalab/Datascope", "bugType": "no-console", "problem": "  TABLE_DATA = dimensions[filteringAttributes[0][\"name\"]].top(Infinity);\n  console.log(TABLE_DATA)\n  results[\"table_data\"] = {", "fixed": "  TABLE_DATA = dimensions[filteringAttributes[0][\"name\"]].top(Infinity);\n  results[\"table_data\"] = {", "message": "Unexpected console statement."}
{"id": "/data/all/data/ijprest/keyboard-layout-editor", "bugType": "no-undef", "problem": "\tvar keycap_html, keycap_svg, keyboard_svg;\n\t$(document).ready(function() {\n\t\tkeycap_html = doT.template($('#keycap_html').html(), {__proto__: doT.templateSettings, varname:\"key, sizes, parms, $sanitize, lightenColor\"});", "fixed": "\tvar keycap_html, keycap_svg, keyboard_svg;\n\t$renderKey.init = function() {\n\t\tkeycap_html = doT.template($('#keycap_html').html(), {__proto__: doT.templateSettings, varname:\"key, sizes, parms, $sanitize, lightenColor\"});", "message": "Undefined variable."}
{"id": "/data/all/data/goblindegook/littlefoot", "bugType": "no-case-declarations", "problem": "    case '%':\n      const rootSize = property === 'fontSize' ? fontSize : /width/i.test(property) ? element.clientWidth : element.clientHeight\n      return Math.round(size / 100 * rootSize)", "fixed": "    case '%':\n      const widthOrHeight = /width/i.test(property) ? element.clientWidth : element.clientHeight\n      const rootSize      = property === 'font-size' ? fontSize : widthOrHeight\n      return Math.round(size / 100 * rootSize)", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/typeiii/jquery-csv", "bugType": "guard-for-in", "problem": "        lineValues = [];\n        for (j in line) {\n          var strValue = line[j].toString();", "fixed": "        lineValues = [];\n        for (j = 0; j < line.length; j++) {\n          var strValue = line[j].toString();", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/andrepolischuk/messg", "bugType": "no-invalid-this", "problem": "}.call(this);", "fixed": "module.exports = messg;", "message": "Unexpected 'this'."}
{"id": "/data/all/data/Imaginea/uvCharts", "bugType": "no-undef", "problem": "\tself.graphdef = graphdef;\n\tself.config = $.extend(true, {}, uv.config, config);\n\tself.max(self.graphdef.stepup)", "fixed": "\tself.graphdef = graphdef;\n\tself.config = uv.util.clone({}, uv.config, config);\n\tself.max(self.graphdef.stepup)", "message": "Undefined variable."}
{"id": "/data/all/data/be5invis/Sarasa-Gothic", "bugType": "no-invalid-this", "problem": "\r\n\tforany.file(`build/ttc", "fixed": "\r\n\tforany.file(`out/ttc", "message": "Unexpected 'this'."}
{"id": "/data/all/data/hanshuebner/html-scrabble", "bugType": "prefer-rest-params", "problem": "    triggerEvent = function() {\n        console.log.apply(console, arguments);\n    }", "fixed": "    triggerEvent = function() {\n        \n    }", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/phantombuster/nickjs", "bugType": "no-console", "problem": "\t_initialize(callback) {\n\t\tconsole.log(\"init\")\n\t\t", "fixed": "\t_initialize(callback) {\n\t\t\n\t\t", "message": "Unexpected console statement."}
{"id": "/data/all/data/aaaristo/dyngodb", "bugType": "prefer-rest-params", "problem": "            {\n                var p, modifiers= {}, args= arguments;\n                p= dyn.promise('results','notfound');", "fixed": "            {\n                var p, modifiers= {};\n                p= dyn.promise('results','notfound');", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/MailOnline/mol-video-ad-sdk", "bugType": "no-extra-boolean-cast", "problem": "  isDestroyed () {\n    return !Boolean(this.element);\n  }", "fixed": "  isDestroyed () {\n    return this[destroyed];\n  }", "message": "Redundant Boolean call."}
{"id": "/data/all/data/OpenZeppelin/openzeppelin-contracts-ethereum-package", "bugType": "no-invalid-this", "problem": "    it('should reject payments after end', async function () {\n      await advanceToBlock(this.endBlock)\n      await this.crowdsale.send(value).should.be.rejectedWith(EVMThrow)", "fixed": "    it('should reject payments after end', async function () {\n      await increaseTime(moment.duration(2.1, 'week'))\n      await this.crowdsale.send(value).should.be.rejectedWith(EVMThrow)", "message": "Unexpected 'this'."}
{"id": "/data/all/data/SkyzohKey/M-Droid", "bugType": "no-unused-vars", "problem": "import styles from './styles';\nimport sharedStyles from '../../bootstrap/sharedStyles';\nexport default class Drawer extends Component {", "fixed": "import styles from './styles';\nexport default class Drawer extends Component {", "message": "Unused variable."}
{"id": "/data/all/data/KIDx/ACdream", "bugType": "comma-style", "problem": "var nextURL = \"\";\nvar $footTime = $('span#timer')\n,   $contest_current = $('#contest_current');\nvar current_user = $footTime.attr('user');", "fixed": "var nextURL = \"\";\nvar $footTime = $('span#timer');\nvar $contest_current = $('#contest_current');\nvar current_user = $footTime.attr('user');", "message": "',' should be placed last."}
{"id": "/data/all/data/rain1017/quick-pomelo", "bugType": "no-extra-boolean-cast", "problem": "            }\n            var level = !!key ? 'info' : 'warn';\n            logger[level]('%s %j => %s => %j', sessionOrParam, msg, key, server.id);\n            cb(null, server.id);", "fixed": "            }\n            logger.debug('%s %j => %s => %j', sessionOrParam, msg, key, server.id);\n            cb(null, server.id);", "message": "Redundant double negation."}
{"id": "/data/all/data/google/qpp", "bugType": "no-invalid-this", "problem": "            onTracepoint(trace);  \n          }.bind(this));      \n        } else {", "fixed": "            onTracepoint(trace);  \n          });      \n        } else {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/coalescejs/coalesce", "bugType": "no-this-before-super", "problem": "    this._params = params;\n    this._hints = {};\n    super();", "fixed": "    this._params = params;\n    super();", "message": "'this' is not allowed before 'super()'."}
{"id": "/data/all/data/rezozero/starting-blocks", "bugType": "no-throw-literal", "problem": "        if (!page) {\n            throw \"Nav update method needs a Page object.\";\n        }", "fixed": "        if (!page) {\n            throw new Error('Nav update method needs a Page object.')\n        }", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/osmlab/changeset-map", "bugType": "no-console", "problem": "        cmap.on('clearFeature', function () {\n            console.log('triggered clearFeature');\n            clearFeature();", "fixed": "        cmap.on('clearFeature', function () {\n            clearFeature();", "message": "Unexpected console statement."}
{"id": "/data/all/data/JimmyVV/httplive", "bugType": "no-debugger", "problem": "        });\n        debugger\n        track.samples = mp4Samples;", "fixed": "        });\n        track.samples = mp4Samples;", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/stefanocudini/leaflet-search", "bugType": "no-redeclare", "problem": "\t\t\t{\n\t\t\t\tvar that = this;\n\t\t\t\tthis._recordsFromJsonp(inputText, function(data) {", "fixed": "\t\t\t{\n\t\t\t\tthat = this;\n\t\t\t\tthis._recordsFromJsonp(inputText, function(data) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/wavesjs/waves-lfo", "bugType": "no-this-before-super", "problem": "  constructor(options = {}) {\n    this.type = 'audio-in';\n    ", "fixed": "  constructor(options = {}) {\n    \n    ", "message": "'this' is not allowed before 'super()'."}
{"id": "/data/all/data/EtherDream/jsproxy-browser", "bugType": "no-undef", "problem": "}\nconst IS_WORKER = !self.window\nconst WORKER_URL = IS_WORKER && decUrlStrAbs(location.href)", "fixed": "}\nconst IS_SW = env.isEnvSw()\nconst IS_WORKER = env.isEnvWorker()\nconst WORKER_URL = IS_WORKER && decUrlStrAbs(location.href)", "message": "Undefined variable."}
{"id": "/data/all/data/apache/tez", "bugType": "no-invalid-this", "problem": "      that.send(\"error\", error);\n      Ember.run.later(that, \"reload\", this.get(\"polling.interval\") * 3);\n    });", "fixed": "      that.send(\"error\", error);\n      Ember.run.later(that, \"reload\", that.get(\"polling.interval\") * 3);\n    });", "message": "Unexpected 'this'."}
{"id": "/data/all/data/simoami/mimik", "bugType": "prefer-rest-params", "problem": "    },\n    format: function format(tpl) {\n        var str = arguments[0], out = str, args = Array.prototype.splice.call(arguments, 1);\n        if(typeof str === 'string' && str.indexOf('{') > -1) {", "fixed": "    },\n    format: function format(str) {\n        var out = str, args = Array.prototype.splice.call(arguments, 1);\n        if(typeof str === 'string' && str.indexOf('{') > -1) {", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/SheetJS/sheetjs", "bugType": "no-throw-literal", "problem": "\tif(typeof v === 'string') return v;\n\tthrow \"unsupported value in General format: \" + v;\n};", "fixed": "\tif(typeof v === 'string') return v;\n\tthrow new Error(\"unsupported value in General format: \" + v);\n};", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/pablodenadai/angular2-seed-project", "bugType": "no-redeclare", "problem": "}\nfunction karmaTypescript(root) {\n\tvar root = 'src/scripts';\n\tvar glob = 'src/scripts*.ts';", "fixed": "}\nfunction karmaTypescript() {\n\tvar root = 'src/scripts';\n\tvar glob = 'src/scripts*.ts';", "message": "Redeclaring variable."}
{"id": "/data/all/data/Jimdo/angular-fontselect", "bugType": "no-throw-literal", "problem": "    if (!font) {\n      throw 'Font with stack \"' + stack + '\" not found.';\n    }", "fixed": "    if (!font) {\n      throw new Error ('Font with stack \"' + stack + '\" not found.');\n    }", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/trimethyl/trimethyl", "bugType": "no-undef", "problem": "exports.option = optionDialog = function(options, cancelIndex, callback, opt) {\n\tif (OS_ANDROID && cancelIndex>=0) {", "fixed": "exports.option = function optionDialog(options, cancelIndex, callback, opt) {\n\tif (OS_ANDROID && cancelIndex>=0) {", "message": "Undefined variable."}
{"id": "/data/all/data/soliton4/nodeMirror", "bugType": "prefer-rest-params", "problem": "    \"class\": \"offlineWidget\",\n    \"domConstruct\": (function(){\n    var PL$11 = arguments;\n    ", "fixed": "    \"class\": \"offlineWidget\",\n    \"buildRendering\": (function(){\n    ", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/uraway/react-social-sharebuttons", "bugType": "no-invalid-this", "problem": "    bundler.bundle()\n      .on('error', (err) => { console.error(err); this.emit('end'); })\n      .pipe(source('build.js'))", "fixed": "    bundler.bundle()\n      .on('error', (err) => { console.error(err); })\n      .pipe(source('build.js'))", "message": "Unexpected 'this'."}
{"id": "/data/all/data/RSamaium/RPG-JS", "bugType": "no-undef", "problem": "\t\tif (!this.data[map_id][event_id]) {\n\t\t\tthis.data[map_id][event_id] = {};\n\t\t}\n\t   this.data[map_id][event_id] = value;\n\t   global.game_map.refreshEvents();", "fixed": "\t\tif (!this.data[map_id][event_id]) {\n\t\t\tthis.data[map_id][event_id] = {};\n\t\t}\n\t   this.data[map_id][event_id][key] = value;\n\t   global.game_map.refreshEvents();", "message": "Undefined variable."}
{"id": "/data/all/data/arturbien/React95", "bugType": "no-unused-vars", "problem": "import Plastic from \"../assets/images/plastic.jpg\";\nimport Tape from \"../assets/images/tape.png\";\nimport Clouds from \"../assets/images/clouds.jpg\";", "fixed": "import Plastic from \"../assets/images/plastic.jpg\";\nimport Clouds from \"../assets/images/clouds.jpg\";", "message": "Unused variable."}
{"id": "/data/all/data/tidepool-org/blip", "bugType": "no-unreachable", "problem": "        throw new Error('Error getting user at /email-verification');\n        return cb();\n      }", "fixed": "        throw new Error('Error getting user at /email-verification');\n      }", "message": "Unreachable code."}
{"id": "/data/all/data/zhongdeming428/Jerry", "bugType": "no-extra-boolean-cast", "problem": "    el.removeEventListener(eventType, callback);\n  } else if (!!window.detachEvent) {\n    el.detachEvent('on' + eventType, callback);", "fixed": "    el.removeEventListener(eventType, callback);\n  } else if (window.detachEvent) {\n    el.detachEvent('on' + eventType, callback);", "message": "Redundant double negation."}
{"id": "/data/all/data/fallroot/copy-url-for-alfred", "bugType": "no-empty", "problem": "      return this.app.windows.at(0)[this.key.currentTab]()\n    } else {\n    }", "fixed": "      return this.app.windows.at(0)[this.key.currentTab]()\n    }", "message": "Empty block statement."}
{"id": "/data/all/data/digitalplaywright/ember-declarative-authorization", "bugType": "no-console", "problem": "  \t  var args = {};\n  \t  console.log(target);\n  \t  if(activity != null) { args['activity'] = activity; }; ", "fixed": "  \t  var args = {};\n  \t  if(activity != null) { args['activity'] = activity; }; ", "message": "Unexpected console statement."}
{"id": "/data/all/data/ethersheet-collective/EtherSheet", "bugType": "no-invalid-this", "problem": "      .focus(function() {\n         this.setNav(false);\n      })\n      .focusout(function() {", "fixed": "      .focus(function() {\n         es.setNav(false);\n      })\n      .focusout(function() {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/jed/dynamo", "bugType": "comma-style", "problem": "  get: function() {\n    var arg = shift.call(arguments)\n      , obj", "fixed": "var Table = require(\"./Table\")", "message": "',' should be placed last."}
{"id": "/data/all/data/abalabahaha/eris", "bugType": "prefer-spread", "problem": "    getInvites() {\n        return this.guild.shard.client.getChannelInvites.apply(this.guild.shard.client, this.id);\n    }", "fixed": "    getInvites() {\n        return this.guild.shard.client.getChannelInvites.call(this.guild.shard.client, this.id);\n    }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/chemerisuk/better-dom", "bugType": "no-invalid-this", "problem": "        return function(property, value) {\n            var el = this._node,\n                propType = typeof property,", "fixed": "        DOMElement.prototype.css = function(property, value) {\n            var el = this._node,\n                propType = typeof property,", "message": "Unexpected 'this'."}
{"id": "/data/all/data/asmblah/jemul8", "bugType": "no-debugger", "problem": "        }, \"SHRD\": function (cpu) {\n            debugger;\n            util.panic(\"Execute (SHRD) :: unsupported\");", "fixed": "        }, \"SHRD\": function (cpu) {\n            util.panic(\"Execute (SHRD) :: unsupported\");", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/rgbkrk/atom-script", "bugType": "no-extra-semi", "problem": "  }\n};\nCodeContext.initClass();", "fixed": "  }\n}\nCodeContext.initClass();", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/emberjs/ember.js", "bugType": "prefer-spread", "problem": "    Ember.deprecate('Usage of Ember.Deferred is deprecated.', false, { url: 'http:\n    this._super.apply(this, arguments);\n  }", "fixed": "    Ember.deprecate('Usage of Ember.Deferred is deprecated.', false, { url: 'http:\n    this._super(...arguments);\n  }", "message": "Use the spread operator instead of '.apply()'."}
