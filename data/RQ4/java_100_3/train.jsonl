{"fixCommitSHA1": "64dff91895f9df55fe3a07217a333efa4d37d92a", "projectName": "apache.hbase", "bugType": "Wrong Function Name", "problem": "         Class<?> c = makeClass(className, proceedOnExceptions);\n         if (c != null) {\n           if (!classes.add(c)) {\n            LOG.error(\"Ignoring duplicate class \" + className);\n           }\n         }\n       }", "fixed": "         Class<?> c = makeClass(className, proceedOnExceptions);\n         if (c != null) {\n           if (!classes.add(c)) {\n            LOG.warn(\"Ignoring duplicate class \" + className);\n           }\n         }\n       }", "sourceBeforeFix": "LOG.error(\"Ignoring duplicate class \" + className)", "sourceAfterFix": "LOG.warn(\"Ignoring duplicate class \" + className)"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( ( VAR_2 ) == null ) || ( VAR_2 . equals ( STRING_1 ) ) ) return ; TYPE_2 . METHOD_2 ( ( STRING_2 + ( VAR_2 . METHOD_3 ( ) ) ) ) ; VAR_1 . METHOD_4 ( STRING_3 , VAR_2 . METHOD_3 ( ) ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) == null ) || ( VAR_2 . equals ( STRING_1 ) ) ) return ; TYPE_2 . METHOD_2 ( ( STRING_2 + ( VAR_2 . METHOD_3 ( ) ) ) ) ; VAR_1 . METHOD_4 ( STRING_3 , VAR_2 . METHOD_3 ( ) ) ; super . METHOD_1 ( VAR_1 ) ; }\n"}
{"problem": "public TYPE_1 METHOD_1 ( ) { java.lang.System.out.println ( ( ( ( ( ( VAR_1 ) + STRING_1 ) + ( source . METHOD_2 ( ) ) ) + STRING_2 ) + ( VAR_2 ) ) ) ; if ( source . METHOD_2 ( ) ) return VAR_2 ; else { TYPE_1 VAR_3 = VAR_2 . METHOD_3 ( VAR_4 ) ; return new TYPE_1 ( VAR_3 . METHOD_4 ( ) , VAR_3 . METHOD_5 ( ) , VAR_3 . METHOD_6 ( ) , VAR_2 . METHOD_7 ( ) ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( ) { if ( source . METHOD_2 ( ) ) return VAR_2 ; else { TYPE_1 VAR_3 = VAR_2 . METHOD_3 ( VAR_4 ) ; return new TYPE_1 ( VAR_3 . METHOD_4 ( ) , VAR_3 . METHOD_5 ( ) , VAR_3 . METHOD_6 ( ) , VAR_2 . METHOD_7 ( ) ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } int i = index . METHOD_2 ( ) ; int VAR_2 = i % ( VAR_1 . size ( ) ) ; TYPE_1 VAR_3 = VAR_1 . get ( VAR_2 ) ; return VAR_3 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ) { return null ; } int i = index . METHOD_2 ( ) ; int VAR_2 = i % ( VAR_1 . size ( ) ) ; TYPE_1 VAR_3 = VAR_1 . get ( VAR_2 ) ; return VAR_3 ; }\n"}
{"fixCommitSHA1": "486d1df6b22e089bfe2f62b7f487ad09fb4d5fc3", "projectName": "facebook.presto", "bugType": "Change Identifier Used", "problem": "                     else if (any(taskStates, equalTo(TaskState.ABORTED))) {\n                         stageState.set(StageState.FAILED);\n                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + stageState));\n                     }\n                     else if (currentState != StageState.PLANNED && currentState != StageState.SCHEDULING) {", "fixed": "                     else if (any(taskStates, equalTo(TaskState.ABORTED))) {\n                         stageState.set(StageState.FAILED);\n                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + currentState));\n                     }\n                     else if (currentState != StageState.PLANNED && currentState != StageState.SCHEDULING) {", "sourceBeforeFix": "\"A task is in the ABORTED state but stage is \" + stageState", "sourceAfterFix": "\"A task is in the ABORTED state but stage is \" + currentState"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 , FLOAT_1 , FLOAT_2 ) ; VAR_2 . METHOD_3 ( INT_1 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; VAR_2 . METHOD_5 ( VAR_5 ) ; if ( ! ( VAR_2 . METHOD_6 ( ) ) ) { VAR_2 . METHOD_7 ( VAR_6 ) ; VAR_2 . start ( ) ; } else { VAR_6 = VAR_2 . METHOD_8 ( ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 , FLOAT_1 , FLOAT_2 ) ; VAR_2 . METHOD_3 ( INT_1 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; VAR_2 . METHOD_5 ( VAR_5 ) ; } if ( ! ( VAR_2 . METHOD_6 ( ) ) ) { VAR_2 . start ( ) ; } }\n"}
{"fixCommitSHA1": "4b52e5d010469405c1ec24baa2f8457f3eada222", "projectName": "libgdx.libgdx", "bugType": "Change Identifier Used", "problem": " \t}\r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n\t\tInputProcessor[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n\t\t\t\tif (items[i].touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r", "fixed": " \t}\r\n \tpublic boolean touchDown (int screenX, int screenY, int pointer, int button) {\r\n\t\tObject[] items = processors.begin();\r\n \t\ttry {\r\n \t\t\tfor (int i = 0, n = processors.size; i < n; i++)\r\n\t\t\t\tif (((InputProcessor)items[i]).touchDown(screenX, screenY, pointer, button)) return true;\r\n \t\t} finally {\r\n \t\t\tprocessors.end();\r\n \t\t}\r", "sourceBeforeFix": "InputProcessor[]", "sourceAfterFix": "Object[]"}
{"problem": "private TYPE_1 METHOD_1 ( java.util.Map < TYPE_2 , TYPE_1 > VAR_1 , java.util.Map < TYPE_2 , TYPE_3 > VAR_2 ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { TYPE_1 type = this ; if ( VAR_2 != null ) { type = TYPE_1 . METHOD_2 ( this , true , false , VAR_2 ) ; } return new TYPE_4 ( ) . METHOD_3 ( type , VAR_1 , VAR_2 ) ; } else { return this ; } }\n", "fixed": "private TYPE_1 METHOD_1 ( java.util.Map < TYPE_2 , TYPE_1 > VAR_1 , java.util.Map < TYPE_2 , TYPE_3 > VAR_2 ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { TYPE_1 type = this ; if ( VAR_2 != null ) { type = TYPE_1 . METHOD_2 ( this , true , false , VAR_2 ) ; } return new TYPE_4 ( ) . METHOD_3 ( type , VAR_1 , VAR_2 , true , false ) ; } else { return this ; } }\n"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; VAR_5 = ( ( TYPE_4 ) ( view . METHOD_3 ( VAR_6 ) ) ) ; java.util.ArrayList < java.lang.Integer > VAR_7 = METHOD_4 ( ) . METHOD_5 ( VAR_8 ) ; int VAR_9 = METHOD_4 ( ) . getInt ( VAR_10 ) ; METHOD_6 ( VAR_7 , VAR_9 ) ; return view ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { android.view.View view = VAR_1 . METHOD_2 ( VAR_4 , VAR_2 , false ) ; this . view = view ; java.util.ArrayList < java.lang.Integer > VAR_7 = METHOD_4 ( ) . METHOD_5 ( VAR_8 ) ; int VAR_9 = METHOD_4 ( ) . getInt ( VAR_10 ) ; METHOD_6 ( VAR_7 , VAR_9 ) ; return view ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedGoogleDriveEndpointBuilder\n             extends\n                 AdvancedGoogleDriveEndpointConsumerBuilder, AdvancedGoogleDriveEndpointProducerBuilder {\n         default GoogleDriveEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedGoogleDriveEndpointBuilder\n             extends\n                 AdvancedGoogleDriveEndpointConsumerBuilder, AdvancedGoogleDriveEndpointProducerBuilder {\n         default GoogleDriveEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public void METHOD_1 ( long VAR_1 ) { if ( VAR_2 ) { throw new TYPE_1 ( STRING_1 ) ; } if ( VAR_1 <= 0 ) { VAR_3 . METHOD_2 ( new TYPE_2 ( STRING_2 ) ) ; } else { VAR_3 . METHOD_3 ( item ) ; VAR_3 . METHOD_4 ( ) ; } VAR_2 = true ; }\n", "fixed": "public void METHOD_1 ( long VAR_1 ) { if ( VAR_2 ) { return ; } VAR_2 = true ; if ( VAR_1 <= 0 ) { VAR_3 . METHOD_2 ( new TYPE_2 ( STRING_2 ) ) ; } else { VAR_3 . METHOD_3 ( item ) ; VAR_3 . METHOD_4 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 , VAR_4 ) ; TYPE_3 . assertThat ( VAR_3 ) . isEmpty ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = TYPE_2 . METHOD_5 ( VAR_6 , VAR_2 , VAR_4 ) ; TYPE_3 . assertThat ( VAR_5 ) . METHOD_6 ( VAR_7 , VAR_8 ) ; }\n", "fixed": "public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 , VAR_4 ) ; TYPE_3 . assertThat ( VAR_3 ) . isEmpty ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = TYPE_2 . METHOD_5 ( VAR_6 , VAR_2 ) ; TYPE_3 . assertThat ( VAR_5 ) . METHOD_6 ( VAR_7 , VAR_8 ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory computeFunctionNames =\n       new PassFactory(\"computeFunctionNames\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory computeFunctionNames =\n       new PassFactory(\"computeFunctionNames\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "f9c863f126519ad2cfd7af4cef3eed04e8f87ea3", "projectName": "alibaba.fastjson", "bugType": "Same Function More Args", "problem": "             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"processKey\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;C)Ljava/lang/String;\");\n         } else if (propertyClass == long.class) {\n            mw.visitVarInsn(LLOAD, context.var(\"long\"));\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"processKey\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;J)Ljava/lang/String;\");\n         } else if (propertyClass == float.class) {", "fixed": "             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"processKey\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;C)Ljava/lang/String;\");\n         } else if (propertyClass == long.class) {\n            mw.visitVarInsn(LLOAD, context.var(\"long\", 2));\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"processKey\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;J)Ljava/lang/String;\");\n         } else if (propertyClass == float.class) {", "sourceBeforeFix": "context.var(\"long\")", "sourceAfterFix": "context.var(\"long\",2)"}
{"problem": "public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException { TYPE_2 = TYPE_3 . METHOD_2 ( STRING_1 ) ; VAR_1 = ( TYPE_2 . isEmpty ( ) ) ? false : true ; VAR_2 = ( ( TYPE_2 . size ( ) ) == INT_1 ) ? true : false ; assertTrue ( ( ( VAR_1 ) && ( VAR_2 ) ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException { java.io.File [ ] file = new java.io.File [ ] { new java.io.File ( STRING_1 ) } ; TYPE_2 = TYPE_3 . METHOD_2 ( file ) ; VAR_1 = ( TYPE_2 . isEmpty ( ) ) ? false : true ; VAR_2 = ( ( TYPE_2 . size ( ) ) == INT_1 ) ? true : false ; assertTrue ( ( ( VAR_1 ) && ( VAR_2 ) ) ) ; }\n"}
{"fixCommitSHA1": "28a04af5f4b957b75ba7dbf6486999b75547673c", "projectName": "libgdx.libgdx", "bugType": "Same Function More Args", "problem": " \t\t\t\tif (koala.velocity.y > 0) {\r\n \t\t\t\t\tkoala.position.y = tile.y - Koala.HEIGHT;\r\n\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n \t\t\t\t\tlayer.setCell((int)tile.x, (int)tile.y, null);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tkoala.position.y = tile.y + tile.height;\r", "fixed": " \t\t\t\tif (koala.velocity.y > 0) {\r\n \t\t\t\t\tkoala.position.y = tile.y - Koala.HEIGHT;\r\n\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\t\t\t\tlayer.setCell((int)tile.x, (int)tile.y, null);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tkoala.position.y = tile.y + tile.height;\r", "sourceBeforeFix": "Gdx.input.getX()", "sourceAfterFix": "Gdx.input.getX(i)"}
{"problem": "public java.util.Set < TYPE_1 > METHOD_1 ( java.util.Collection < TYPE_2 > VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = new java.util.HashSet < TYPE_1 > ( ) ; for ( TYPE_3 VAR_3 : VAR_4 . METHOD_2 ( VAR_1 ) ) { VAR_2 . add ( METHOD_3 ( VAR_3 ) ) ; } return VAR_2 ; }\n", "fixed": "public java.util.Set < TYPE_1 > METHOD_1 ( java.util.Collection < TYPE_2 > VAR_1 ) { java.util.Set < TYPE_1 > VAR_2 = new java.util.HashSet < TYPE_1 > ( ) ; for ( TYPE_3 VAR_3 : VAR_4 . METHOD_1 ( VAR_1 ) ) { VAR_2 . add ( METHOD_3 ( VAR_3 ) ) ; } return VAR_2 ; }\n"}
{"problem": "private void METHOD_1 ( ) { if ( VAR_1 ) { final TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_2 ) ( VAR_2 . METHOD_3 ( ) ) ) ; VAR_4 . METHOD_4 ( true ) ; VAR_4 . METHOD_5 ( ) . METHOD_6 ( VAR_5 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { final TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) ; VAR_4 = ( ( TYPE_2 ) ( VAR_2 . METHOD_3 ( ) ) ) ; VAR_4 . METHOD_4 ( true ) ; VAR_4 . METHOD_5 ( ) . METHOD_6 ( VAR_5 ) ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = null ; java.lang.String VAR_4 = VAR_2 + ( VAR_5 class ) ; synchronized ( VAR_4 . METHOD_2 ( ) ) { try { VAR_3 = VAR_6 . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_2 VAR_7 ) { VAR_8 . error ( ( STRING_1 + VAR_2 ) , VAR_7 ) ; } } return VAR_3 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_1 VAR_3 = null ; java.lang.String VAR_4 = VAR_2 + ( VAR_5 class ) ; synchronized ( VAR_4 . METHOD_2 ( ) ) { VAR_3 = VAR_6 . METHOD_1 ( VAR_1 , VAR_2 ) ; } return VAR_3 ; }\n"}
{"problem": "static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.util.HashMap < java.lang.String , java.lang.String > params ) { java.lang.String VAR_2 = STRING_1 ; int VAR_3 = VAR_1 . METHOD_2 ( STRING_2 ) ; if ( VAR_3 > ( - 1 ) ) { java.lang.String [ ] VAR_4 = VAR_1 . split ( STRING_3 ) ; if ( ( VAR_4 . length ) == INT_1 ) { params = TYPE_1 . METHOD_3 ( VAR_4 [ 1 ] ) ; VAR_2 = VAR_4 [ 0 ] ; } } else { VAR_2 = VAR_1 ; params = null ; } return VAR_2 ; }\n", "fixed": "static java.lang.String [ ] METHOD_1 ( java.lang.String VAR_1 ) { int VAR_3 = VAR_1 . METHOD_2 ( STRING_2 ) ; if ( VAR_3 > ( - 1 ) ) { java.lang.String [ ] VAR_4 = VAR_1 . split ( STRING_3 ) ; if ( ( VAR_4 . length ) == INT_1 ) { return VAR_4 ; } } return null ; }\n"}
{"problem": "public void METHOD_1 ( int line , int position ) { try { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ( line - 1 ) ) ; final int offset = ( ( VAR_1 . METHOD_5 ( ) ) + position ) - 1 ; super . METHOD_6 ( offset , 0 ) ; } catch ( TYPE_3 VAR_2 ) { VAR_3 . METHOD_7 ( VAR_2 ) ; } }\n", "fixed": "public void METHOD_1 ( int line , int position ) { try { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ( line - 1 ) ) ; final int offset = ( ( VAR_1 . METHOD_5 ( ) ) + position ) - 1 ; super . METHOD_6 ( offset , 1 ) ; } catch ( TYPE_3 VAR_2 ) { VAR_3 . METHOD_7 ( VAR_2 ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "           \"functions are set.\");\n   \n  private final PassFactory generateExports =\n       new PassFactory(\"generateExports\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "           \"functions are set.\");\n   \n  final PassFactory generateExports =\n       new PassFactory(\"generateExports\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "5f66fbd181273bff71207c060123a197664c23e1", "projectName": "thinkaurelius.titan", "bugType": "Change Modifier", "problem": " \t}\n \t@Override\n\tpublic void forceDelete() {\n \t\tsuper.forceDelete();\n \t\tentity.remove();\n \t}", "fixed": " \t}\n \t@Override\n\tpublic synchronized void forceDelete() {\n \t\tsuper.forceDelete();\n \t\tentity.remove();\n \t}", "sourceBeforeFix": "1", "sourceAfterFix": "33"}
{"fixCommitSHA1": "d68c8b72360903da9812fd17fe9e13016855fff7", "projectName": "yusuke.twitter4j", "bugType": "Change Modifier", "problem": "         });\n     }\n    private static transient Dispatcher dispatcher;\n     @Override\n     public void shutdown() {", "fixed": "         });\n     }\n    private static transient volatile Dispatcher dispatcher;\n     @Override\n     public void shutdown() {", "sourceBeforeFix": "138", "sourceAfterFix": "202"}
{"problem": "public void METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { VAR_2 = METHOD_2 ( ) ; } if ( ( ( VAR_1 ) == 1 ) && ( ( VAR_3 ) == ( VAR_4 . get ( 0 ) ) ) ) { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; } METHOD_6 ( ) ; METHOD_7 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { METHOD_6 ( ) ; if ( ( VAR_1 ) > 0 ) { VAR_2 = METHOD_2 ( ) ; } if ( ( ( VAR_1 ) == 1 ) && ( ( VAR_3 ) == ( VAR_4 . get ( 0 ) ) ) ) { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; } METHOD_7 ( ) ; }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; switch ( id ) { case VAR_1 : METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; return true ; case VAR_3 : METHOD_6 ( ) ; return true ; case VAR_4 : android.content.Intent intent = new android.content.Intent ( VAR_5 , VAR_6 ) ; METHOD_7 ( intent , VAR_7 ) ; return true ; case VAR_8 : VAR_9 = false ; break ; } return super . METHOD_1 ( item ) ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 item ) { int id = item . METHOD_2 ( ) ; switch ( id ) { case VAR_1 : if ( METHOD_3 ( ) ) { METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; } return true ; case VAR_3 : METHOD_6 ( ) ; return true ; case VAR_4 : android.content.Intent intent = new android.content.Intent ( VAR_5 , VAR_6 ) ; METHOD_7 ( intent , VAR_7 ) ; return true ; case VAR_8 : VAR_9 = false ; break ; } return super . METHOD_1 ( item ) ; }\n"}
{"problem": "public void METHOD_1 ( java.util.List < java.lang.Integer > VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { if ( VAR_1 . contains ( VAR_2 . get ( i ) . getId ( ) ) ) { VAR_2 . get ( i ) . METHOD_2 ( null ) ; VAR_2 . remove ( i ) ; } } }\n", "fixed": "public void METHOD_1 ( java.util.List < java.lang.Integer > VAR_1 ) { for ( int i = 0 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { if ( VAR_1 . contains ( VAR_2 . get ( i ) . getId ( ) ) ) { VAR_2 . remove ( i ) ; } } }\n"}
{"problem": "public void update ( TYPE_1 VAR_1 , java.lang.Object arg ) { if ( ( VAR_1 . getClass ( ) ) == ( VAR_2 class ) ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 ) ) ; METHOD_1 ( VAR_4 , VAR_3 . METHOD_2 ( ) , null , VAR_3 . METHOD_3 ( ) , VAR_5 , VAR_6 ) ; METHOD_1 ( VAR_7 , VAR_3 . METHOD_4 ( ) , null , ( ( VAR_3 . METHOD_3 ( ) ) / INT_1 ) , VAR_8 , VAR_9 ) ; } }\n", "fixed": "public void update ( TYPE_1 VAR_1 , java.lang.Object arg ) { if ( ( VAR_1 . getClass ( ) ) == ( VAR_2 class ) ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 ) ) ; METHOD_1 ( VAR_4 , VAR_3 . METHOD_2 ( ) , null , VAR_3 . METHOD_3 ( ) , VAR_5 , VAR_6 ) ; METHOD_1 ( VAR_7 , VAR_3 . METHOD_4 ( ) , null , VAR_3 . METHOD_3 ( ) , VAR_8 , VAR_9 ) ; } }\n"}
{"fixCommitSHA1": "e70960913c07d921dea470857f9bcdb67f38959f", "projectName": "checkstyle.checkstyle", "bugType": "Change Modifier", "problem": "      * Set the format for the influence of this check.\n      * @param format a <code>String</code> value\n      */\n    public void setInfluenceFormat(String format) {\n         influenceFormat = format;\n     }", "fixed": "      * Set the format for the influence of this check.\n      * @param format a <code>String</code> value\n      */\n    public final void setInfluenceFormat(String format) {\n         influenceFormat = format;\n     }", "sourceBeforeFix": "1", "sourceAfterFix": "17"}
{"problem": "public void METHOD_1 ( java.lang.String name , java.lang.CharSequence text ) throws java.io.IOException { METHOD_2 ( ) ; try { VAR_1 . append ( TYPE_1 . METHOD_3 ( name , VAR_2 ) ) ; if ( ( text != null ) && ( ( text . length ( ) ) > 0 ) ) { VAR_1 . append ( STRING_1 ) . append ( TYPE_1 . METHOD_3 ( text . toString ( ) , VAR_2 ) ) ; } } catch ( TYPE_2 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String name , java.lang.CharSequence text ) throws java.io.IOException { METHOD_2 ( ) ; try { VAR_1 . append ( TYPE_1 . METHOD_3 ( name , VAR_2 ) ) ; VAR_1 . append ( STRING_1 ) ; if ( ( text != null ) && ( ( text . length ( ) ) > 0 ) ) { VAR_1 . append ( TYPE_1 . METHOD_3 ( text . toString ( ) , VAR_2 ) ) ; } } catch ( TYPE_2 VAR_3 ) { VAR_3 . METHOD_4 ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 != null ) && ( TYPE_2 . isEmpty ( VAR_2 . trim ( ) ) ) ) { return ; } VAR_1 . METHOD_3 ( VAR_2 ) ; }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 = ( VAR_2 != null ) ? VAR_2 . trim ( ) : VAR_2 ; if ( TYPE_2 . isEmpty ( VAR_2 ) ) { return ; } VAR_1 . METHOD_3 ( VAR_2 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_3 ) ; METHOD_4 ( VAR_1 , VAR_3 , STRING_4 ) ; METHOD_4 ( VAR_1 , VAR_3 , STRING_2 ) ; METHOD_4 ( VAR_1 , VAR_3 , STRING_5 ) ; METHOD_3 ( VAR_4 , VAR_2 , STRING_6 ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( VAR_1 , VAR_2 , STRING_3 ) ; METHOD_4 ( VAR_1 , VAR_3 , STRING_4 ) ; METHOD_4 ( VAR_1 , VAR_3 , STRING_2 ) ; METHOD_4 ( VAR_1 , VAR_3 , STRING_5 ) ; }\n"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Wrong Function Name", "problem": "* @see <a href=\"http:\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }", "fixed": "* @see <a href=\"http:\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites.json\",\"page\",String.valueOf(page),true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites.json\",\"page\",String.valueOf(page),true))"}
{"problem": "public static java.lang.String METHOD_1 ( java.lang.String key ) { java.lang.String value ; try { value = VAR_1 . get ( key ) ; if ( STRING_1 . equals ( value ) ) { return null ; } } catch ( java.lang.Exception VAR_2 ) { VAR_3 . error ( STRING_2 , VAR_2 ) ; } return null ; }\n", "fixed": "public static java.lang.String METHOD_1 ( java.lang.String key ) { java.lang.String value ; try { value = VAR_1 . get ( key ) ; if ( STRING_1 . equals ( value ) ) { return null ; } return value ; } catch ( java.lang.Exception VAR_2 ) { VAR_3 . error ( STRING_2 , VAR_2 ) ; } return null ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; VAR_1 = TYPE_2 . METHOD_3 ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) ; VAR_3 = new TYPE_3 ( ) . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_2 ) . build ( ) ; VAR_5 = TYPE_4 . METHOD_6 ( VAR_6 class ) ; VAR_7 = TYPE_4 . METHOD_6 ( VAR_8 class ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( ) ; VAR_1 = TYPE_2 . METHOD_3 ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) ; VAR_3 = new TYPE_3 ( ) . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_2 ) . build ( ) ; VAR_5 = METHOD_6 ( VAR_6 class ) ; VAR_7 = METHOD_6 ( VAR_8 class ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_3 = VAR_1 . length ; VAR_4 = new java.util.Random ( ) ; VAR_5 = VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_6 = VAR_1 [ VAR_5 ] ; VAR_7 = METHOD_2 ( ) . METHOD_3 ( VAR_8 ) ; VAR_9 = VAR_7 . length ; VAR_10 = VAR_4 . METHOD_4 ( VAR_9 ) ; VAR_11 = VAR_7 [ VAR_10 ] ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 = METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; VAR_3 = VAR_1 . length ; VAR_4 = new java.util.Random ( ) ; VAR_7 = METHOD_2 ( ) . METHOD_3 ( VAR_8 ) ; VAR_9 = VAR_7 . length ; VAR_10 = VAR_4 . METHOD_4 ( VAR_9 ) ; VAR_11 = VAR_7 [ VAR_10 ] ; }\n"}
{"problem": "public void add ( int id , int type , int x , int y ) { VAR_1 [ 0 ] [ VAR_2 ] [ 0 ] = id ; VAR_1 [ 0 ] [ VAR_2 ] [ 1 ] = type ; VAR_1 [ 0 ] [ VAR_2 ] [ INT_1 ] = x ; VAR_1 [ 0 ] [ VAR_2 ] [ INT_2 ] = y ; ( VAR_2 ) ++ ; }\n", "fixed": "public void add ( int id , int type , int x , int y ) { add [ 0 ] . add ( id ) ; add [ 1 ] . add ( type ) ; add [ INT_1 ] . add ( x ) ; add [ INT_2 ] . add ( y ) ; }\n"}
{"problem": "public boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( int a = 0 ; a < ( ( VAR_1 . size ( ) ) - 1 ) ; a ++ ) { if ( ( VAR_1 . get ( a ) . METHOD_2 ( ) ) < ( VAR_1 . get ( ( a + 1 ) ) . METHOD_2 ( ) ) ) { return false ; } } return true ; }\n", "fixed": "public boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( int a = 0 ; a < ( ( VAR_1 . size ( ) ) - 1 ) ; a ++ ) { if ( ( VAR_1 . get ( a ) . METHOD_2 ( ) ) > ( VAR_1 . get ( ( a + 1 ) ) . METHOD_2 ( ) ) ) { return false ; } } return true ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 p ) { for ( TYPE_2 VAR_1 : METHOD_2 ( p ) ) { if ( VAR_1 . METHOD_3 ( ) . equals ( VAR_2 ) ) { VAR_1 . METHOD_4 ( VAR_3 ) ; } else { VAR_1 . METHOD_5 ( ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 p ) { for ( TYPE_2 VAR_1 : METHOD_2 ( p ) ) { if ( VAR_1 . METHOD_3 ( ) . equals ( VAR_2 ) ) { VAR_1 . METHOD_4 ( VAR_3 ) ; } else if ( VAR_1 . METHOD_3 ( ) . equals ( VAR_3 ) ) { VAR_1 . METHOD_5 ( ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; } else { VAR_1 . METHOD_4 ( VAR_4 ) ; } } }\n"}
{"problem": "public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 ) { if ( VAR_1 ) getActivity ( ) . METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; else getActivity ( ) . METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_5 ) ; VAR_6 = false ; } else VAR_6 = VAR_1 ; }\n", "fixed": "public void METHOD_1 ( boolean VAR_1 ) { if ( VAR_2 ) { android.view.View view = getActivity ( ) . METHOD_2 ( VAR_3 ) ; if ( view != null ) { if ( VAR_1 ) view . METHOD_3 ( VAR_4 ) ; else view . METHOD_3 ( VAR_5 ) ; VAR_6 = false ; } } else VAR_6 = VAR_1 ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedMailEndpointBuilder\n             extends\n                 AdvancedMailEndpointConsumerBuilder, AdvancedMailEndpointProducerBuilder {\n         default MailEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedMailEndpointBuilder\n             extends\n                 AdvancedMailEndpointConsumerBuilder, AdvancedMailEndpointProducerBuilder {\n         default MailEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "private void METHOD_1 ( int VAR_1 , java.util.List < java.lang.Integer > VAR_2 ) { if ( ( VAR_3 [ VAR_1 ] . size ( ) ) == 0 ) VAR_2 . add ( VAR_1 ) ; for ( int i = 0 ; i < ( VAR_3 [ VAR_1 ] . size ( ) ) ; i ++ ) { METHOD_1 ( VAR_3 [ VAR_1 ] . get ( i ) , VAR_2 ) ; } }\n", "fixed": "private void METHOD_1 ( int VAR_1 , java.util.List < java.lang.Integer > VAR_2 ) { if ( ( VAR_3 [ VAR_1 ] . size ( ) ) == 0 ) { VAR_2 . add ( VAR_1 ) ; } for ( int i = 0 ; i < ( VAR_3 [ VAR_1 ] . size ( ) ) ; i ++ ) { if ( VAR_1 < ( VAR_3 [ VAR_1 ] . get ( i ) ) ) { METHOD_1 ( VAR_3 [ VAR_1 ] . get ( i ) , VAR_2 ) ; } } }\n"}
{"problem": "public java.lang.Long METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; if ( VAR_2 != null ) { java.lang.String VAR_5 = ( ( VAR_6 . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_4 . METHOD_3 ( ) ) ; return VAR_3 . METHOD_4 ( VAR_5 , VAR_7 class ) . METHOD_5 ( STRING_2 , VAR_2 ) . METHOD_6 ( ) . METHOD_7 ( ) ; } return null ; }\n", "fixed": "public java.lang.Long METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , VAR_1 ) ; if ( VAR_2 != null ) { java.lang.String VAR_5 = ( ( VAR_6 . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_4 . METHOD_3 ( ) ) ; return VAR_3 . METHOD_4 ( VAR_5 , VAR_7 class ) . METHOD_5 ( STRING_2 , VAR_2 ) . METHOD_6 ( ) . METHOD_7 ( ) ; } return - 1L ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { switch ( view . getId ( ) ) { case VAR_1 : if ( ( VAR_2 . size ( ) ) > 0 ) { java.lang.String [ ] VAR_3 = new java.lang.String [ VAR_2 . size ( ) ] ; VAR_3 = VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_3 ( getActivity ( ) , VAR_4 , VAR_3 , VAR_5 ) ; VAR_6 = VAR_4 . getText ( ) . toString ( ) ; } break ; } }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { switch ( view . getId ( ) ) { case VAR_1 : if ( ( VAR_2 . size ( ) ) > 0 ) { java.lang.String [ ] VAR_3 = new java.lang.String [ VAR_2 . size ( ) ] ; VAR_3 = VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_3 ( getActivity ( ) , VAR_4 , VAR_3 , VAR_5 ) ; } break ; } }\n"}
{"fixCommitSHA1": "fcbae65716a5006d4adee83eeafe35ed48ef1278", "projectName": "aws.aws-sdk-java", "bugType": "Change Caller in Function Call", "problem": "                 startChildWorkflowExecutionParameters.setTaskPriority(taskPriority);\n             }\n            String lambdaRole = options.getLambdaRole();\n             if (lambdaRole != null) {\n                 startChildWorkflowExecutionParameters.setLambdaRole(lambdaRole);\n             }", "fixed": "                 startChildWorkflowExecutionParameters.setTaskPriority(taskPriority);\n             }\n            String lambdaRole = optionsOverride.getLambdaRole();\n             if (lambdaRole != null) {\n                 startChildWorkflowExecutionParameters.setLambdaRole(lambdaRole);\n             }", "sourceBeforeFix": "options.getLambdaRole()", "sourceAfterFix": "optionsOverride.getLambdaRole()"}
{"problem": "public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = VAR_2 ; METHOD_3 ( ) ; assertEquals ( VAR_1 , VAR_3 ) ; METHOD_4 ( ) ; VAR_1 = VAR_2 ; METHOD_5 ( STRING_1 ) ; METHOD_3 ( ) ; assertEquals ( VAR_1 , VAR_4 ) ; VAR_1 = VAR_2 ; METHOD_5 ( STRING_2 ) ; METHOD_3 ( ) ; assertEquals ( VAR_1 , VAR_5 ) ; }\n", "fixed": "public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = VAR_2 ; METHOD_3 ( ) ; assertEquals ( VAR_1 , VAR_3 ) ; METHOD_4 ( ) ; VAR_1 = VAR_2 ; METHOD_5 ( STRING_1 ) ; METHOD_3 ( ) ; assertEquals ( VAR_1 , VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Throwable { try { VAR_1 = false ; TYPE_1 VAR_2 = METHOD_2 ( ( ( getClass ( ) . METHOD_3 ( ) ) + STRING_1 ) , source ) ; VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 , STRING_2 ) ; } finally { VAR_1 = false ; } }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Throwable { try { VAR_1 = false ; TYPE_1 VAR_2 = METHOD_2 ( ( ( getClass ( ) . METHOD_3 ( ) ) + STRING_1 ) , source ) ; VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 , STRING_2 ) ; } finally { VAR_1 = true ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { TYPE_3 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . getContext ( ) ) ; TYPE_4 VAR_4 ; if ( VAR_2 == ( VAR_5 ) ) { android.view.View VAR_6 = VAR_3 . METHOD_3 ( VAR_7 , VAR_1 , false ) ; VAR_4 = new TYPE_5 ( VAR_6 ) ; } else { android.view.View VAR_6 = VAR_3 . METHOD_3 ( VAR_8 , VAR_1 , false ) ; VAR_4 = new TYPE_6 ( VAR_6 ) ; } return VAR_4 ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 ) { TYPE_4 VAR_4 ; TYPE_3 VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . getContext ( ) ) ; if ( VAR_2 == ( VAR_5 ) ) { android.view.View VAR_6 = VAR_3 . METHOD_3 ( VAR_7 , VAR_1 , false ) ; VAR_4 = new TYPE_5 ( VAR_6 ) ; } else { android.view.View VAR_6 = VAR_3 . METHOD_3 ( VAR_8 , VAR_1 , false ) ; VAR_4 = new TYPE_6 ( VAR_6 ) ; } return VAR_4 ; }\n"}
{"fixCommitSHA1": "486b290863a66641b0ec30dbf2d9e349733cae44", "projectName": "apache.hbase", "bugType": "Change Identifier Used", "problem": "    */\n   public void split(final String tableNameOrRegionName)\n   throws IOException, InterruptedException {\n    split(Bytes.toBytesBinary(tableNameOrRegionName));\n   }\n   /**", "fixed": "    */\n   public void split(final String tableNameOrRegionName)\n   throws IOException, InterruptedException {\n    split(Bytes.toBytes(tableNameOrRegionName));\n   }\n   /**", "sourceBeforeFix": "Bytes.toBytesBinary(tableOrRegionName)", "sourceAfterFix": "Bytes.toBytes(tableOrRegionName)"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   \n  private final PassFactory specializeInitialModule =\n       new PassFactory(\"specializeInitialModule\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   \n  final PassFactory specializeInitialModule =\n       new PassFactory(\"specializeInitialModule\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "private static int METHOD_1 ( java.lang.String name ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { if ( ( VAR_2 . names [ i ] ) == name ) { return i ; } } return - 1 ; }\n", "fixed": "private static int METHOD_1 ( java.lang.String name ) { for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ( VAR_1 . get ( i ) ) == name ) { return i ; } } return - 1 ; }\n"}
{"problem": "public java.lang.Integer METHOD_1 ( ) throws TYPE_1 { if ( VAR_1 . isEmpty ( ) ) { synchronized ( VAR_1 ) { METHOD_2 ( STRING_1 , java.lang.Thread . METHOD_3 ( ) . getName ( ) ) ; VAR_1 . METHOD_4 ( ) ; } } java.lang.Integer value ; synchronized ( VAR_1 ) { value = VAR_1 . remove ( ) ; VAR_1 . METHOD_5 ( ) ; } return value ; }\n", "fixed": "public java.lang.Integer METHOD_1 ( ) throws TYPE_1 { while ( VAR_1 . isEmpty ( ) ) { synchronized ( VAR_1 ) { METHOD_2 ( STRING_1 , java.lang.Thread . METHOD_3 ( ) . getName ( ) ) ; VAR_1 . METHOD_4 ( ) ; } } java.lang.Integer value ; synchronized ( VAR_1 ) { value = VAR_1 . remove ( ) ; VAR_1 . METHOD_5 ( ) ; } return value ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface AdvancedReactiveStreamsEndpointBuilder\n             extends\n                 AdvancedReactiveStreamsEndpointConsumerBuilder, AdvancedReactiveStreamsEndpointProducerBuilder {\n         default ReactiveStreamsEndpointBuilder basic() {", "fixed": "     \n    public interface AdvancedReactiveStreamsEndpointBuilder\n             extends\n                 AdvancedReactiveStreamsEndpointConsumerBuilder, AdvancedReactiveStreamsEndpointProducerBuilder {\n         default ReactiveStreamsEndpointBuilder basic() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"fixCommitSHA1": "c30e67b81a0d9ac45c4151d20a960e542ad97b4f", "projectName": "dropwizard.dropwizard", "bugType": "Wrong Function Name", "problem": "     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n        when(request.getRequestURI()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         final RuntimeException ex = new RuntimeException(\"whoops\");", "fixed": "     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         final RuntimeException ex = new RuntimeException(\"whoops\");", "sourceBeforeFix": "request.getRequestURI()", "sourceAfterFix": "request.getServletPath()"}
{"fixCommitSHA1": "a8b6696e713b96d2af3c549f6e26735bb306c6ab", "projectName": "Graylog2.graylog2-server", "bugType": "Change Identifier Used", "problem": "  */\n public class RadioKafkaInput extends KafkaInput {\n    private static final Logger LOG = LoggerFactory.getLogger(KafkaInput.class);\n     public static final String NAME = \"Graylog2 Radio Input (Kafka)\";", "fixed": "  */\n public class RadioKafkaInput extends KafkaInput {\n    private static final Logger LOG = LoggerFactory.getLogger(RadioKafkaInput.class);\n     public static final String NAME = \"Graylog2 Radio Input (Kafka)\";", "sourceBeforeFix": "KafkaInput.class", "sourceAfterFix": "RadioKafkaInput.class"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) , STRING_1 , true , TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) ) ; if ( VAR_2 != ( VAR_3 ) ) { if ( ( VAR_4 . METHOD_5 ( ) ) || ( VAR_2 == ( VAR_5 ) ) ) { new TYPE_5 ( ) . execute ( ) ; } } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) , STRING_1 , true , TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) ) ; if ( VAR_2 != ( VAR_3 ) ) { new TYPE_5 ( ) . execute ( ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 , boolean VAR_3 ) { TYPE_2 VAR_4 = null ; TYPE_3 VAR_5 = null ; try { VAR_4 = METHOD_2 ( ) ; VAR_5 = METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( VAR_7 ) ; METHOD_5 ( VAR_5 , VAR_1 , VAR_2 ) ; return new TYPE_4 ( VAR_5 . put ( VAR_1 , VAR_8 ) , VAR_4 , VAR_5 , VAR_3 ) ; } catch ( java.lang.Exception VAR_9 ) { throw new TYPE_5 ( VAR_9 ) ; } }\n", "fixed": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 , boolean VAR_3 ) { TYPE_2 VAR_4 = null ; TYPE_3 VAR_5 = null ; try { VAR_4 = METHOD_2 ( ) ; VAR_5 = ( VAR_3 ) ? METHOD_3 ( ) : METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( VAR_7 ) ; METHOD_5 ( VAR_5 , VAR_1 , VAR_2 ) ; return new TYPE_4 ( VAR_5 . put ( VAR_1 , VAR_8 ) , VAR_4 , VAR_5 , VAR_3 ) ; } catch ( java.lang.Exception VAR_9 ) { throw new TYPE_5 ( VAR_9 ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   }\n   \n  private final PassFactory checkGlobalNames =\n       new PassFactory(\"Check names\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   }\n   \n  final PassFactory checkGlobalNames =\n       new PassFactory(\"Check names\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n     /**", "sourceBeforeFix": "id=15858", "sourceAfterFix": "id=10858"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory collapseAnonymousFunctions =\n       new PassFactory(\"collapseAnonymousFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory collapseAnonymousFunctions =\n       new PassFactory(\"collapseAnonymousFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 message = new TYPE_1 ( ) ; message . obj = TYPE_2 . METHOD_2 ( VAR_1 . get ( VAR_2 . METHOD_3 ( ) ) . METHOD_4 ( ) ) ; VAR_3 = VAR_4 ; VAR_5 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( message ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 message = new TYPE_1 ( ) ; message . obj = TYPE_2 . METHOD_2 ( VAR_1 . get ( ( ( ( VAR_2 . METHOD_3 ( ) ) != 0 ) && ( ( VAR_2 . METHOD_3 ( ) ) >= ( VAR_1 . size ( ) ) ) ? ( VAR_1 . size ( ) ) - 1 : VAR_2 . METHOD_3 ( ) ) ) . METHOD_4 ( ) ) ; VAR_3 = VAR_4 ; VAR_5 . METHOD_5 ( ) ; VAR_6 . METHOD_6 ( message ) ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( VAR_2 , STRING_1 ) ) . METHOD_4 ( new TYPE_2 ( STRING_2 ) ) ; TYPE_1 . METHOD_2 ( this . VAR_1 . METHOD_3 ( VAR_3 class , STRING_1 ) ) . METHOD_4 ( new TYPE_2 ( STRING_2 ) ) ; TYPE_3 . METHOD_5 ( this . VAR_4 . METHOD_6 ( STRING_3 , STRING_4 , STRING_5 , STRING_1 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( this . VAR_1 . METHOD_3 ( VAR_2 , STRING_1 ) ) . METHOD_4 ( new TYPE_2 ( STRING_2 ) ) ; METHOD_2 ( this . VAR_1 . METHOD_3 ( VAR_3 class , STRING_1 ) ) . METHOD_4 ( new TYPE_2 ( STRING_2 ) ) ; TYPE_3 . METHOD_5 ( this . VAR_4 . METHOD_6 ( STRING_3 , STRING_4 , STRING_5 , STRING_1 ) ) ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n     /**", "sourceBeforeFix": "id=15835", "sourceAfterFix": "id=10835"}
{"fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "projectName": "libgdx.libgdx", "bugType": "Change Identifier Used", "problem": " \t}\r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n\t\tGL20.glUniform4(location, v);\r\n \t}\r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r", "fixed": " \t}\r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r", "sourceBeforeFix": "GL20.glGetShader(shader,pname,params)", "sourceAfterFix": "GL20.glGetShaderiv(shader,pname,params)"}
{"fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926", "projectName": "apache.flink", "bugType": "Change Identifier Used", "problem": " \t * \n \t * @return The closed DataStream\n \t */\n\tpublic DataStream<OUT> writeAsText(String path) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), 1, null);\n \t}", "fixed": " \t * \n \t * @return The closed DataStream\n \t */\n\tpublic DataStreamSink<OUT> writeAsText(String path) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), 1, null);\n \t}", "sourceBeforeFix": "DataStream<OUT>", "sourceAfterFix": "DataStreamSink<OUT>"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 obj = new TYPE_1 ( ) ; obj . METHOD_2 ( TYPE_2 . METHOD_3 ( INT_1 , INT_2 , 1 ) ) ; TYPE_3 view = VAR_1 . METHOD_4 ( obj , VAR_2 class ) ; TYPE_4 . assertEquals ( STRING_1 , view . METHOD_5 ( ) ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 obj = new TYPE_1 ( ) ; obj . METHOD_2 ( TYPE_2 . METHOD_3 ( INT_1 , INT_2 , 1 ) ) ; TYPE_3 view = VAR_1 . METHOD_4 ( obj , VAR_2 class ) ; assertEquals ( STRING_1 , view . METHOD_5 ( ) ) ; }\n"}
{"problem": "public static int METHOD_1 ( final int VAR_1 , final TYPE_1 VAR_2 , final float x ) { return ( ( int ) ( ( ( ( ( double ) ( x ) ) / ( ( double ) ( VAR_1 ) ) ) * ( VAR_2 . METHOD_2 ( ) ) ) + ( VAR_2 . METHOD_3 ( ) ) ) ) ; }\n", "fixed": "public static int METHOD_1 ( final int VAR_1 , final TYPE_1 VAR_2 , final float x ) { return ( ( int ) ( java.lang.Math.round ( ( ( ( ( ( double ) ( x ) ) / ( ( double ) ( VAR_1 ) ) ) * ( VAR_2 . METHOD_2 ( ) ) ) + ( VAR_2 . METHOD_3 ( ) ) ) ) ) ) ; }\n"}
{"fixCommitSHA1": "3757a700a89638e5747d966bdaa8266b62c974c8", "projectName": "google.guava", "bugType": "Change Modifier", "problem": "     assertEquals(bytes, encoding.decode(encoded));\n   }\n  private void assertFailsToDecode(BaseEncoding encoding, String cannotDecode) {\n     try {\n       encoding.decode(cannotDecode);\n       fail(\"Expected IllegalArgumentException\");", "fixed": "     assertEquals(bytes, encoding.decode(encoded));\n   }\n  private static void assertFailsToDecode(BaseEncoding encoding, String cannotDecode) {\n     try {\n       encoding.decode(cannotDecode);\n       fail(\"Expected IllegalArgumentException\");", "sourceBeforeFix": "2", "sourceAfterFix": "10"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , TYPE_2 VAR_2 , TYPE_3 state ) { int position = VAR_2 . METHOD_2 ( view ) ; if ( position > ( VAR_3 ) ) { VAR_4 = VAR_5 ; } if ( ( position % ( VAR_3 ) ) != 0 ) { VAR_6 = VAR_5 ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , android.view.View view , TYPE_2 VAR_2 , TYPE_3 state ) { int position = VAR_2 . METHOD_2 ( view ) ; if ( position >= ( VAR_3 ) ) { VAR_4 = VAR_5 ; } if ( ( position % ( VAR_3 ) ) != 0 ) { VAR_6 = VAR_5 ; } }\n"}
{"fixCommitSHA1": "9d87dbad9f0c649c8244586cfea3ca25731da893", "projectName": "google.closure-compiler", "bugType": "Change Identifier Used", "problem": "   \n  abstract void throwInternalError(String msg, Exception cause);\n   /**\n    * Gets the current coding convention.", "fixed": "   \n  abstract void throwInternalError(String msg, Throwable cause);\n   /**\n    * Gets the current coding convention.", "sourceBeforeFix": "Exception cause", "sourceAfterFix": "Throwable cause"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory checkRegExp =\n       new PassFactory(\"checkRegExp\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory checkRegExp =\n       new PassFactory(\"checkRegExp\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory deadAssignmentsElimination =\n       new PassFactory(\"deadAssignmentsElimination\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory deadAssignmentsElimination =\n       new PassFactory(\"deadAssignmentsElimination\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public static void METHOD_1 ( ) { int count = 0 ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ( VAR_1 . get ( i ) ) == ( VAR_2 . get ( i ) ) ) { count ++ ; } else { } } java.lang.System.out.println ( ( STRING_1 + count ) ) ; }\n", "fixed": "public static void METHOD_1 ( ) { int count = 0 ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( ( VAR_1 . get ( i ) ) == ( VAR_2 . get ( ( i + 1 ) ) ) ) { count ++ ; } else { } } java.lang.System.out.println ( ( STRING_1 + count ) ) ; }\n"}
{"problem": "public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( STRING_1 , ( ( ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 . token ) ) ) . getText ( ) ) + STRING_2 ) ) ; VAR_1 . commit ( ) ; METHOD_4 ( ) ; android.content.Intent intent = new android.content.Intent ( METHOD_5 ( ) , VAR_3 class ) ; intent . METHOD_6 ( VAR_4 ) ; METHOD_5 ( ) . METHOD_7 ( intent ) ; }\n", "fixed": "public void METHOD_1 ( android.view.View view ) { VAR_1 . METHOD_2 ( STRING_1 , ( ( ( ( TYPE_1 ) ( METHOD_3 ( VAR_2 . token ) ) ) . getText ( ) ) + STRING_2 ) ) ; VAR_1 . commit ( ) ; METHOD_4 ( ) ; android.content.Intent intent = new android.content.Intent ( this , VAR_3 class ) ; intent . METHOD_6 ( VAR_4 ) ; this . METHOD_7 ( intent ) ; }\n"}
{"problem": "public void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 VAR_3 ) throws java.lang.Exception { if ( ( this . METHOD_2 ( ) . METHOD_3 ( ) [ VAR_2 ] ) != VAR_3 ) { TYPE_2 VAR_4 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_4 ( STRING_1 ) ) ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; VAR_4 . METHOD_6 ( VAR_3 ) ; TYPE_4 VAR_5 = new TYPE_4 ( ) ; this . METHOD_7 ( VAR_5 . METHOD_8 ( VAR_4 ) . toString ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_1 VAR_3 ) throws java.lang.Exception { if ( ( this . METHOD_2 ( ) . METHOD_3 ( ) [ ( VAR_2 - 1 ) ] ) != VAR_3 ) { TYPE_2 VAR_4 = ( ( TYPE_2 ) ( TYPE_3 . METHOD_4 ( STRING_1 ) ) ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; VAR_4 . METHOD_6 ( VAR_3 ) ; TYPE_4 VAR_5 = new TYPE_4 ( ) ; this . METHOD_7 ( VAR_5 . METHOD_8 ( VAR_4 ) . toString ( ) ) ; } }\n"}
{"problem": "public void remove ( java.lang.Object element ) { for ( int i = 0 ; i < ( count ) ; i ++ ) { if ( VAR_1 [ i ] . equals ( element ) ) { for ( int j = i ; j < ( count ) ; j ++ ) { VAR_1 [ j ] = VAR_1 [ ( j + 1 ) ] ; } ( count ) -- ; break ; } } }\n", "fixed": "public void remove ( java.lang.Object element ) { for ( int i = 0 ; i < ( count ) ; i ++ ) { if ( VAR_1 [ i ] . equals ( element ) ) { for ( int j = i ; j < ( ( count ) - 1 ) ; j ++ ) { VAR_1 [ j ] = VAR_1 [ ( j + 1 ) ] ; } ( count ) -- ; break ; } } }\n"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Change Identifier Used", "problem": "      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }", "fixed": "      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",true))"}
{"fixCommitSHA1": "575dd59c7893e6a41f8b0da6b9f5a107580d40d0", "projectName": "alibaba.canal", "bugType": "Wrong Function Name", "problem": "                     switch (len) {\r\n                         case 1:\r\n                            value = buffer.getInt8();\r\n                             break;\r\n                         case 2:\r\n                             value = buffer.getUint16();\r", "fixed": "                     switch (len) {\r\n                         case 1:\r\n                            value = buffer.getUint8();\r\n                             break;\r\n                         case 2:\r\n                             value = buffer.getUint16();\r", "sourceBeforeFix": "buffer.getInt8()", "sourceAfterFix": "buffer.getUint8()"}
{"problem": "public boolean METHOD_1 ( java.lang.String str ) { if ( METHOD_2 ( str ) ) return false ; if ( METHOD_3 ( str ) ) { try { if ( ( METHOD_4 ( str ) ) != null ) return false ; } catch ( java.lang.Exception VAR_1 ) { return false ; } } return true ; }\n", "fixed": "public boolean METHOD_1 ( java.lang.String str ) { if ( METHOD_2 ( str ) ) return false ; if ( METHOD_3 ( str ) ) { try { if ( ( METHOD_4 ( str ) ) != null ) return false ; } catch ( java.lang.Exception VAR_1 ) { } } return true ; }\n"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface MongoDbEndpointBuilder\n             extends\n                 MongoDbEndpointConsumerBuilder, MongoDbEndpointProducerBuilder {\n         default AdvancedMongoDbEndpointBuilder advanced() {", "fixed": "     \n    public interface MongoDbEndpointBuilder\n             extends\n                 MongoDbEndpointConsumerBuilder, MongoDbEndpointProducerBuilder {\n         default AdvancedMongoDbEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 = false ; if ( VAR_1 ) { for ( int i = 0 ; i < ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ; ++ i ) { TYPE_1 VAR_4 = METHOD_4 ( i ) ; VAR_4 . METHOD_5 ( false ) ; VAR_4 . METHOD_6 ( ) ; } } else { TYPE_2 . METHOD_7 ( this , VAR_5 , VAR_6 ) . show ( ) ; } }\n", "fixed": "protected void METHOD_1 ( java.lang.Boolean VAR_1 ) { VAR_2 = false ; for ( int i = 0 ; i < ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ; ++ i ) { TYPE_1 VAR_4 = METHOD_4 ( i ) ; VAR_4 . METHOD_5 ( false ) ; if ( VAR_1 ) { VAR_4 . METHOD_6 ( ) ; } } if ( ! VAR_1 ) { TYPE_2 . METHOD_7 ( this , VAR_5 , VAR_6 ) . show ( ) ; } }\n"}
{"problem": "private void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) { public boolean METHOD_4 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_5 ( this ) ; TYPE_3 . METHOD_6 ( getActivity ( ) ) ; return true ; } } ) ; }\n", "fixed": "private void METHOD_1 ( final android.view.View VAR_1 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) { public boolean METHOD_4 ( ) { VAR_1 . METHOD_2 ( ) . METHOD_5 ( this ) ; TYPE_3 . METHOD_6 ( getActivity ( ) ) ; return true ; } } ) ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String data ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 . METHOD_3 ( ) , VAR_5 ) ; TYPE_3 . METHOD_4 ( ) ; TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_2 + VAR_1 ) ) ; VAR_3 . execute ( data ) ; }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String data ) { TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_1 + VAR_1 ) ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 . METHOD_3 ( ) , VAR_5 ) ; TYPE_3 . METHOD_4 ( ) ; TYPE_1 . METHOD_2 ( VAR_2 , ( STRING_2 + VAR_1 ) ) ; VAR_3 . execute ( data ) ; TYPE_3 . METHOD_4 ( ) ; }\n"}
{"fixCommitSHA1": "038ea1803bae1cf3be279b36395b4de4e0ff39b5", "projectName": "openhab.openhab", "bugType": "Change Identifier Used", "problem": " \t * Validates Username and Password then saved sercurityToken to a variable\n \t */\n \tprivate void login() throws InvalidLoginException, IOException {\n\t\tlogger.debug(\"attempting to login\");\n \t\tString url = String\n \t\t\t\t.format(\"%s/api/user/validate?appId=%s&SecurityToken=null&username=%s&password=%s\",\n \t\t\t\t\t\tWEBSITE, enc(appId), enc(userName), enc(password));", "fixed": " \t * Validates Username and Password then saved sercurityToken to a variable\n \t */\n \tprivate void login() throws InvalidLoginException, IOException {\n\t\tlogger.trace(\"attempting to login\");\n \t\tString url = String\n \t\t\t\t.format(\"%s/api/user/validate?appId=%s&SecurityToken=null&username=%s&password=%s\",\n \t\t\t\t\t\tWEBSITE, enc(appId), enc(userName), enc(password));", "sourceBeforeFix": "logger.debug(\"myq ReturnCode: {}\",returnCode)", "sourceAfterFix": "logger.trace(\"myq ReturnCode: {}\",returnCode)"}
{"problem": "private void METHOD_1 ( ) { METHOD_2 ( ) ; boolean VAR_1 = false ; try { VAR_2 = VAR_3 . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_4 ) { VAR_1 = true ; } catch ( TYPE_2 fail ) { METHOD_4 ( fail . METHOD_5 ( ) , fail ) ; METHOD_6 ( VAR_5 , VAR_6 ) ; } catch ( TYPE_3 VAR_7 ) { METHOD_4 ( ( STRING_1 + ( getName ( ) ) ) , VAR_7 ) ; throw VAR_7 ; } if ( VAR_1 ) { METHOD_7 ( ) ; } }\n", "fixed": "private void METHOD_1 ( ) { METHOD_2 ( ) ; boolean VAR_1 = false ; try { VAR_2 = VAR_3 . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_4 ) { VAR_1 = true ; } catch ( TYPE_2 fail ) { METHOD_4 ( fail . METHOD_5 ( ) , fail ) ; METHOD_6 ( fail ) ; } catch ( TYPE_3 VAR_7 ) { METHOD_4 ( ( STRING_1 + ( getName ( ) ) ) , VAR_7 ) ; throw VAR_7 ; } if ( VAR_1 ) { METHOD_7 ( ) ; } }\n"}
{"problem": "static TYPE_1 get ( java.lang.String url ) { TYPE_1 VAR_1 = new TYPE_1 ( url ) ; try { TYPE_2 response = TYPE_3 . METHOD_1 ( url ) . execute ( ) ; if ( ( response . METHOD_2 ( ) ) == INT_1 ) { java.lang.System.err.println ( ( STRING_1 + ( response . METHOD_2 ( ) ) ) ) ; VAR_1 = response . METHOD_3 ( ) ; } } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } return VAR_1 ; }\n", "fixed": "static TYPE_1 get ( java.lang.String url ) { TYPE_1 VAR_1 = new TYPE_1 ( url ) ; try { TYPE_2 response = TYPE_3 . METHOD_1 ( url ) . execute ( ) ; if ( ( response . METHOD_2 ( ) ) == INT_1 ) { VAR_1 = response . METHOD_3 ( ) ; } else { java.lang.System.err.println ( ( STRING_1 + ( response . METHOD_2 ( ) ) ) ) ; } } catch ( java.io.IOException VAR_2 ) { VAR_2 . METHOD_4 ( ) ; } return VAR_1 ; }\n"}
{"problem": "public static int METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; ( VAR_2 ) ++ ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_4 . METHOD_4 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_4 . METHOD_5 ( ) ; for ( int i = ( VAR_1 . size ( ) ) - 1 ; i >= 0 ; i -- ) { VAR_5 . METHOD_3 ( VAR_1 . get ( i ) ) ; VAR_1 . remove ( i ) ; } int VAR_6 = VAR_2 ; return VAR_6 ; }\n", "fixed": "public static int METHOD_1 ( ) { ( VAR_2 ) ++ ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_4 . METHOD_4 ( ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; VAR_4 . METHOD_5 ( ) ; for ( int i = ( VAR_1 . size ( ) ) - 1 ; i >= 0 ; i -- ) { VAR_5 . METHOD_3 ( VAR_1 . get ( i ) ) ; VAR_1 . remove ( i ) ; } int VAR_6 = VAR_2 ; return VAR_6 ; }\n"}
{"project": "Lang", "bugId": 4, "problem": "  */\n public class LookupTranslator extends CharSequenceTranslator {\n    private final HashMap<CharSequence, CharSequence> lookupMap;\n     private final int shortest;\n     private final int longest;", "fixed": "  */\n public class LookupTranslator extends CharSequenceTranslator {\n    private final HashMap<String, CharSequence> lookupMap;\n     private final int shortest;\n     private final int longest;", "observations": "Type change with adjust in related calls/operations.", "repairActions": ["assignExpChange", "mcAdd", "objInstMod", "varReplMc", "varTyChange"], "repairPatterns": ["initFix", "wrongVarRef"]}
{"fixCommitSHA1": "e7bf415427b37bbc760ff9b9c69650db8ec477e4", "projectName": "spring-projects.spring-boot", "bugType": "Change Identifier Used", "problem": " \t@Configuration\n \t@ConditionalOnBean(JavaMailSenderImpl.class)\n\t@ConditionalOnEnablednHealthIndicator(\"mail\")\n \tpublic static class MailHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<MailHealthIndicator, JavaMailSenderImpl> {", "fixed": " \t@Configuration\n \t@ConditionalOnBean(JavaMailSenderImpl.class)\n\t@ConditionalOnEnabledHealthIndicator(\"mail\")\n \tpublic static class MailHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<MailHealthIndicator, JavaMailSenderImpl> {", "sourceBeforeFix": "@ConditionalOnEnablednHealthIndicator(\"db\")", "sourceAfterFix": "@ConditionalOnEnabledHealthIndicator(\"db\")"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String path ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_5 , path ) ; VAR_2 . METHOD_6 ( VAR_6 , new TYPE_3 ( ) ) ; METHOD_7 ( VAR_1 , VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String path ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_5 , path ) ; VAR_2 . METHOD_6 ( VAR_6 , new TYPE_3 ( ) ) ; METHOD_7 ( VAR_1 , VAR_2 ) ; }\n"}
{"problem": "private static void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < TYPE_2 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 VAR_3 : VAR_1 . METHOD_2 ( ) ) { long index = 0 ; for ( TYPE_2 VAR_4 : VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ) { if ( ( VAR_4 . METHOD_5 ( ) ) != index ) { VAR_4 . METHOD_6 ( index ) ; VAR_2 . add ( VAR_4 ) ; } index ++ ; } } VAR_1 . METHOD_7 ( VAR_2 , VAR_2 ) ; }\n", "fixed": "private static void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < TYPE_2 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 VAR_3 : VAR_1 . METHOD_2 ( ) ) { int index = 0 ; for ( TYPE_2 VAR_4 : VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ) { if ( ( VAR_4 . METHOD_5 ( ) ) != index ) { VAR_4 . METHOD_6 ( index ) ; VAR_2 . add ( VAR_4 ) ; } index ++ ; } } VAR_1 . METHOD_7 ( VAR_2 , VAR_2 ) ; }\n"}
{"problem": "static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { TYPE_1 name = null ; name = new TYPE_1 ( ( ( ( ( VAR_1 + STRING_1 ) + ( TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) ) + STRING_2 ) + ( VAR_2 . METHOD_4 ( ) . getId ( ) ) ) ) ; return name ; }\n", "fixed": "static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { TYPE_1 name = new TYPE_1 ( ( ( ( ( VAR_1 + STRING_1 ) + ( TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) ) + STRING_2 ) + ( VAR_2 . METHOD_4 ( ) . getId ( ) ) ) ) ; return name ; }\n"}
{"problem": "public static java.lang.String METHOD_1 ( byte [ ] buffer , int start , int length ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( ( length - start ) ) ; for ( int i = start ; i < ( start + length ) ; i ++ ) { VAR_1 . append ( java.lang.String.format ( STRING_1 , buffer [ i ] ) ) ; } return VAR_1 . toString ( ) ; }\n", "fixed": "public static java.lang.String METHOD_1 ( byte [ ] buffer , int start , int length ) { java.lang.StringBuilder VAR_1 = new java.lang.StringBuilder ( length ) ; for ( int i = start ; i < ( start + length ) ; i ++ ) { VAR_1 . append ( java.lang.String.format ( STRING_1 , buffer [ i ] ) ) ; } return VAR_1 . toString ( ) ; }\n"}
{"fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf", "projectName": "yusuke.twitter4j", "bugType": "Change Identifier Used", "problem": "* @see <a href=\"http:\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n     /**", "fixed": "* @see <a href=\"http:\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n     /**", "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\",true))", "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\",true))"}
{"fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a", "projectName": "apache.flink", "bugType": "Change Identifier Used", "problem": " \t\tfinal Sink normalizedPersons = new Sink(\"normalizedPersons.json\").withInputs(replace);\n \t\texpectedPlan.setSinks(normalizedPersons);\n\t\tassertEquals(expectedPlan, actualPlan);\n \t}\n }", "fixed": " \t\tfinal Sink normalizedPersons = new Sink(\"normalizedPersons.json\").withInputs(replace);\n \t\texpectedPlan.setSinks(normalizedPersons);\n\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n }", "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)", "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"}
{"problem": "public void METHOD_1 ( byte [ ] VAR_1 ) { final java.lang.String text = METHOD_2 ( VAR_1 ) ; METHOD_3 ( ( STRING_1 + text ) ) ; METHOD_4 ( new TYPE_1 ( ) { public void METHOD_5 ( ) { ( ( TYPE_2 ) ( METHOD_6 ( VAR_2 ) ) ) . setText ( text ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( byte [ ] VAR_1 ) { final java.lang.String text = METHOD_2 ( VAR_1 ) ; METHOD_3 ( text ) ; METHOD_4 ( new TYPE_1 ( ) { public void METHOD_5 ( ) { ( ( TYPE_2 ) ( METHOD_6 ( VAR_2 ) ) ) . setText ( text ) ; } } ) ; }\n"}
{"fixCommitSHA1": "1adccc7a5bdc515f01ae6bd644097ab85336bd84", "projectName": "hazelcast.hazelcast", "bugType": "Same Function More Args", "problem": "         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.loadAll(true);", "fixed": "         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.loadAll(true);", "sourceBeforeFix": "hazelcastFactory.newHazelcastClient()", "sourceAfterFix": "hazelcastFactory.newHazelcastClient(newClientConfig())"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( VAR_3 ) ) { id = TYPE_2 . METHOD_2 ( context , VAR_1 ) ; VAR_3 = true ; } TYPE_3 . METHOD_3 ( VAR_1 , ( STRING_1 + VAR_1 ) ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( VAR_3 ) ) { id = TYPE_2 . METHOD_2 ( context , VAR_1 ) ; VAR_3 = true ; } TYPE_3 . METHOD_3 ( VAR_1 , ( STRING_1 + VAR_1 ) ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_2 . toString ( ) ) ; }\n"}
{"fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f", "projectName": "libgdx.libgdx", "bugType": "Wrong Function Name", "problem": " \t}\r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n\t\tGL20.glUniform1(location, v);\r\n \t}\r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \tpublic void glUniform2f (int location, float x, float y) {\r", "fixed": " \t}\r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \tpublic void glUniform2f (int location, float x, float y) {\r", "sourceBeforeFix": "GL20.glGetVertexAttrib(index,pname,params)", "sourceAfterFix": "GL20.glGetVertexAttribiv(index,pname,params)"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n     /**", "sourceBeforeFix": "id=15835", "sourceAfterFix": "id=10835"}
