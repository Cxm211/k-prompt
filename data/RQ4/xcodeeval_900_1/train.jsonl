{"similarity_score": 0.9423434593924365, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b6c7eb70faebfd22f5e6f800e445f71f", "bug_code_uid": "27ea393e1d916c8f9d0326cb793f43b6", "src_uid": "2c67ee95eba7ffbbed99cb488abb5f3d", "apr_id": "88bc9eaaab7d73dd595987c829ec06e8", "difficulty": 1000, "tags": ["geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint max(int a, int b) { return a > b ? a : b; }\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, a, b, c, n, m, t, w, h;\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n           c = 0;    \r\n           scanf(\"%d %d\", &w, &h);\r\n           for(x = 0; x < 4; x++)\r\n           {\r\n                 scanf(\"%d\", &k);\r\n                 for(y = 0; y < k; y++)\r\n                 {\r\n                      scanf(\"%d\", &a);\r\n                      if(!y) b = a;\r\n                      else if(y == k - 1) b = a - b;     \r\n                 }\r\n                 \r\n                 if(x < 2) c = max(c, b * h);\r\n                 else c = max(c, b * w);\r\n           }\r\n           \r\n           printf(\"%d\\n\", c);\r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nlong long max(long long a, long long b) { return a > b ? a : b; }\r\n\r\nint main()\r\n{\r\n     int x, y, z, i, j, k, n, m, t;\r\n     long long a, b, c, w, h;\r\n     \r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n           c = 0;    \r\n           scanf(\"%lld %lld\", &w, &h);\r\n           for(x = 0; x < 4; x++)\r\n           {\r\n                 scanf(\"%d\", &k);\r\n                 for(y = 0; y < k; y++)\r\n                 {\r\n                      scanf(\"%lld\", &a);\r\n                      if(!y) b = a;\r\n                      else if(y == k - 1) b = a - b;     \r\n                 }\r\n                 \r\n                 if(x < 2) c = max(c, b * h);\r\n                 else c = max(c, b * w);\r\n           }\r\n           \r\n           printf(\"%lld\\n\", c);\r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.9938271604938271, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e4da776132b6caf4c52ec3da126b8c8c", "bug_code_uid": "99c56e6147bafc4132100486328e9bdd", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "2606efd33a84d7643b5b3f848f3c5e96", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    if(n%3==0)\n        printf(\"1 1 %d\",n-2);\n    else\n        printf(\"1 2 %d\",n-2);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    if(n%3==0)\n        printf(\"1 1 %d\",n-2);\n    else\n        printf(\"1 2 %d\",n-3);\n    return 0;\n}\n"}
{"similarity_score": 0.8900169204737732, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3e6b327144110e755d16049f6e438c63", "bug_code_uid": "6146fea2764fd9ee1b6a93ee8690e566", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "f6af3ebdc5ba8f1f5332e12a4013f685", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n\tint *input;\n\tint n;\n\tint i;\n\tint firstMin, secondMin;\n\n\tscanf(\" %d\", &n);\n\t\n\tinput = (int *) calloc(n, sizeof(int));\n\t\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\" %d\", &input[i]);\n\t}\n\n\tif(n >= 2){\n\t\tfirstMin = secondMin = 101; /* where -100 <= i <= 100 */\n\n\t\tfor(i = 0; i < n; i++){\n\t\t\tif(firstMin > input[i]){\n\t\t\t\tsecondMin = firstMin;\n\t\t\t\tfirstMin = input[i];\n\t\t\t}else if(secondMin > input[i] && firstMin != input[i]){\n\t\t\t\tsecondMin = input[i];\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\", secondMin);\n\t}else{\n\t\tprintf(\"NO\");\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n\tint *input;\n\tint n;\n\tint i;\n\tint firstMin, secondMin;\n\n\tscanf(\" %d\", &n);\n\t\n\tinput = (int *) calloc(n, sizeof(int));\n\t\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\" %d\", &input[i]);\n\t}\n\n\tif(n >= 2){\n\t\tfirstMin = secondMin = 101; /* where -100 <= i <= 100 */\n\n\t\tfor(i = 0; i < n; i++){\n\t\t\tif(firstMin > input[i]){\n\t\t\t\tsecondMin = firstMin;\n\t\t\t\tfirstMin = input[i];\n\t\t\t}else if(secondMin > input[i] && firstMin != input[i]){\n\t\t\t\tsecondMin = input[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tif(n < 2 || secondMin == 101){\n\t\tprintf(\"NO\");\n\t}else{\n\t\tprintf(\"%d\", secondMin);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9773755656108597, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dbc8d70cfda9f446f179c6f4fa9e052e", "bug_code_uid": "3d35ffb85a91db2d17073508888b0ca2", "src_uid": "f44041707694eece7de0cc7c087f57d9", "apr_id": "bd95b844691f520d638172002e2d25bb", "difficulty": 1900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tint i, j;\n\tint a[200005];\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++)\n\t\t\tscanf(\"%d\", &a[m * i + j]);\n\tint ans = 0, v;\n\tint count[200005];\n\tfor (j = 0; j < m; j++)\n\t{\n\t\tfor (i = 0; i < n; i++)\n\t\t\tcount[i] = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (a[m * i + j] % m == (j + 1) % m)\n\t\t\t\tcount[(i - (a[m * i + j] - 1) / m + n) % n]++;\n\t\tv = n;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (v > i + n - count[i])\n\t\t\t\tv = i + n - count[i];\n\t\tans += v;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tint i, j;\n\tint a[200005];\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++)\n\t\t\tscanf(\"%d\", &a[m * i + j]);\n\tint ans = 0, v;\n\tint count[200005];\n\tfor (j = 0; j < m; j++)\n\t{\n\t\tfor (i = 0; i < n; i++)\n\t\t\tcount[i] = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (a[m * i + j] % m == (j + 1) % m && a[m * i + j] <= n * m)\n\t\t\t\tcount[(i - (a[m * i + j] - 1) / m + n) % n]++;\n\t\tv = n;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (v > i + n - count[i])\n\t\t\t\tv = i + n - count[i];\n\t\tans += v;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.9939393939393939, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0104192dbdf52057425d57e8cd977e28", "bug_code_uid": "0c675a771e5619d61decce2ceba7b2b8", "src_uid": "354658f565e265c2a1ce37355d6466e1", "apr_id": "8e28545cf8f6012ef1a2ee8791528c62", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main ()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\t\r\n\t\r\n\tint a[105];\r\n\tint i,n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++)\r\n\tscanf(\"%1d\",&a[i]);\r\n\t\r\n\tif(n>=3)\r\n\tprintf(\"NO\\n\");\r\n\telse if(n==1)\r\n\tprintf(\"YES\\n\");\r\n\telse if(n==2&&a[1]!=a[2])\r\n\tprintf(\"YES\\n\");\r\n\telse\r\n\tprintf(\"NO\\n\");\r\n\t\r\n}\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main ()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\t\r\n\t\r\n\tint a[105];\r\n\tint i,n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++)\r\n\tscanf(\"%1d\",&a[i]);\r\n\t\r\n\tif(n>=3)\r\n\tprintf(\"NO\\n\");\r\n\telse if(n==1)\r\n\tprintf(\"YES\\n\");\r\n\telse if(n==2&&a[0]!=a[1])\r\n\tprintf(\"YES\\n\");\r\n\telse\r\n\tprintf(\"NO\\n\");\r\n\t\r\n}\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.7050691244239631, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "0b2e13b71a168a1c7010a4febed0bbd9", "bug_code_uid": "2b428cee7e310256245a219e55e85d3c", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "45d9a902e4c43952889d46d016907c75", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long n,i,s;\n    scanf(\"%ld\",&n);\n    long a[n+1];\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&a[i]);\n    s=a[0];\n    for(i=0;i<n-1;i++)\n    {\n        s+=a[i+1]-a[i];\n    }\n    printf(\"%d\",s);\n\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long n,i,s,max=-20;\n    scanf(\"%ld\",&n);\n    long a;\n    for(i=0;i<n;i++){\n        scanf(\"%ld\",&a);\n        if(max<a)\n            max=a;\n    }\n    printf(\"%ld\",max);\n\n}\n\n"}
{"similarity_score": 0.9978540772532188, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f654e09a4547f4db4bce207baa07d62e", "bug_code_uid": "ec002e7bc898d5b75b59ea03cd38d760", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "9e50e8091f6bf45dc672bfb92f507c94", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,min,c=0,d=0;\n    scanf(\"%d\",&n);\n    int city[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&city[i]);\n    }\n    min=city[0];\n    for(i=1;i<n;i++)\n    {\n        if(city[i]<min)\n        {\n            min=city[i];\n            d=i+1;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(city[i]==min)\n        {\n            c++;\n        }\n    }\n    if(c==1) printf(\"%d\",d);\n    else printf(\"Still Rozdil\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,min,c=0,d=1;\n    scanf(\"%d\",&n);\n    int city[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&city[i]);\n    }\n    min=city[0];\n    for(i=1;i<n;i++)\n    {\n        if(city[i]<min)\n        {\n            min=city[i];\n            d=i+1;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(city[i]==min)\n        {\n            c++;\n        }\n    }\n    if(c==1) printf(\"%d\",d);\n    else printf(\"Still Rozdil\");\n    return 0;\n}"}
{"similarity_score": 0.3378582202111614, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "98e460e296a2a5aef586a7b51ca77281", "bug_code_uid": "1732e16ecbd80ea909e09588db46c50a", "src_uid": "0b9be2f076cfa13cdc76c489bf1ea416", "apr_id": "987d06f5503af66823dd04634444537e", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\nchar *a;\r\nint main()\r\n{\r\n\tint t,i,j,k,flag,len,sum1,sum2,l;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t{\tflag=1;sum1=0;sum2=0;\r\n\t\ta=(char *)malloc(sizeof(char ));\r\n\t\tscanf(\"%s\",a);\r\n\t\tlen=strlen(a);\r\n\t\tfor(l=0;l<len;l++)\r\n\t\t{\r\n\t\t\tif(a[l]=='A')sum1++;\r\n\t\t\telse sum2++;\r\n\t\t}\r\n\t\tif(a[len-1]!='B')flag=0;\r\n\t\telse\r\n\t\t{\r\n\t\t\tj=0,k=len-1;\r\n\t\t\twhile(k>j)\r\n\t\t\t{\r\n\t\t\t\tif(a[k]=='B'&&a[j]=='A')\r\n\t\t\t\t{\r\n\t\t\t\t\tk--;j++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\twhile(a[k]=='A')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tk--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(a[j]!='A')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag=0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(sum2>sum1)\r\n\t\t\tflag=0;\r\n\t\tif(flag==0)\r\n\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\tprintf(\"YES\\n\");\r\n\t\tfree(a);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nchar a[200005];\r\nint main()\r\n{\r\n\tint t,i,j,k,flag,len,sum1,sum2,l,m;\r\n\tscanf(\"%d\",&t);\r\n\tgetchar();\r\n\tfor(i=1;i<=t;i++)\r\n\t{\tflag=1;sum1=0;sum2=0;m=0;\r\n\t\twhile((a[m]=getchar())!='\\n')\r\n\t\t{\r\n\t\t\tm++;\r\n\t\t}\r\n\t\ta[m]='\\0';\r\n\t\tlen=m;\r\n\t\tif(a[len-1]=='A')flag=0;\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(l=0;l<len;l++)\r\n\t\t\t{\r\n\t\t\t\tif(a[l]=='A')\r\n\t\t\t\t{\r\n\t\t\t\t\tsum1++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tsum2++;\r\n\t\t\t\t\tif(sum1<sum2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag=0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tif(flag==0)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.641051567239636, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fcf16a3548ea6bf700b327a2cc29950d", "bug_code_uid": "b4f4ac51d8e3ed9e201327762fadc81a", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "9a15be7d5cc87406ca6d5d874dce80a1", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint ara[300001];\nint main()\n{\n    int n,i,j,max=0,t;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %d\", &ara[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(ara[j]!=ara[i])\n            {\n                if((j-i)>max) max=j-i;\n            }\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint ara[300001];\nint main()\n{\n    int n,i,j,a,t,b;\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\" %d\", &ara[i]);\n    }\n    for(i=0,t=0;i<n-1 && !t;i++)\n    {\n        for(j=n-1;j>i;j--)\n        {\n            if(ara[j]!=ara[i])\n            {\n                a=j-i;\n                t++;\n                break;\n            }\n        }\n    }\n    for(i=n-1,t=0;i>0 && !t;i--)\n    {\n        for(j=0;j<i;j++)\n        {\n            if(ara[j]!=ara[i])\n            {\n               b=i-j;\n               t++;\n               break;\n            }\n        }\n    }\n    printf(\"%d\", a>b?a:b);\n\n}\n"}
{"similarity_score": 0.9907120743034056, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d5de74d2af987715440d9b5ac1ab9c3c", "bug_code_uid": "9a44171277e6933d3349ddaf92cf1514", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "04c5283fa50211767f2e52f37d811caf", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n,k,y,mult,x,cont,i;\n    cont=0;\n    scanf(\"%d %d %d\",&y,&k,&n);\n    for(i=1;i<n;i++){\n        mult=k*i;\n        x=mult-y;\n        if(x>=1 && (mult)<n){\n            printf(\"%d \",x);\n            cont++;\n        }\n    }\n    if(cont==0){\n        printf(\"%d\",-1);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int n,k,y,mult,x,cont,i;\n    cont=0;\n    scanf(\"%d %d %d\",&y,&k,&n);\n    for(i=1;i<=n/k;i++){\n        mult=k*i;\n        x=mult-y;\n        if(x>=1 && (mult)<=n){\n            printf(\"%d \",x);\n            cont++;\n        }\n    }\n    if(cont==0){\n        printf(\"%d\",-1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9985007496251874, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a86f4257cbd60d3a78db7366d3a3374c", "bug_code_uid": "09cb01d7e59996c39aacc1a94e85c665", "src_uid": "fa256021dc519f526ef3878cce32ff31", "apr_id": "acc20f8a4359b1252464daf268b74b04", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,x,i,j;\n    scanf(\"%d\",&n);\n    int a[n];\n    a[0]=0;\n    int b[n];\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n;i++){\n        b[i-1]=a[i-1]+a[i];\n    }\n    b[i-1]=a[i-1];\n    for(i=1;i<=n;i++){\n        printf(\"%d\",b[i]);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,x,i,j;\n    scanf(\"%d\",&n);\n    int a[n];\n    a[0]=0;\n    int b[n];\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n;i++){\n        b[i-1]=a[i-1]+a[i];\n    }\n    b[i-1]=a[i-1];\n    for(i=1;i<=n;i++){\n        printf(\"%d \",b[i]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9819277108433735, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "700d16c426eb96e2bfbf237a73a9661d", "bug_code_uid": "d89cee44606d57fab98d3d11873c9fd7", "src_uid": "8c23fcc84c6921bc2a95ff0586516321", "apr_id": "4f58dc54f7b84e40f1119044a597db4a", "difficulty": 1500, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct s\n{\n\tint cost;\n\tint pos;\n}node;\n\nint fo[300010];\nint oa[600010];\nnode arr[300010];\nlong long int cost = 0;\n\nint cmpfunc(node* a, node* b)\n{\n\treturn(b->cost - a->cost);\n}\n\nint main()\n{\n\tint n, k, i, j;\n\tfor (i = 0; i < 600010; i++) oa[i] = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &arr[i].cost);\n\t\tarr[i].pos = i+1;\n\t}\n\tqsort(arr, n, sizeof(node), cmpfunc);\n\tj = k + 1;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (j >= arr[i].pos)\n\t\t{\n\t\t\twhile (oa[j] != 0) j++;\n\t\t\tfo[arr[i].pos] = j;\n\t\t\toa[j] = 1;\n\t\t\tcost += (j - arr[i].pos)*arr[i].cost;\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfo[arr[i].pos] = arr[i].pos;\n\t\t\toa[arr[i].pos] = 1;\n\t\t}\n\t}\n\tprintf(\"%I64d\\n\", cost);\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tprintf(\"%d \", fo[i]);\n\t}\n\tprintf(\"%d\\n\", fo[n]);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct s\n{\n\tint cost;\n\tint pos;\n}node;\n\nint fo[300010];\nint oa[600010];\nnode arr[300010];\nlong long int cost = 0;\n\nint cmpfunc(node* a, node* b)\n{\n\treturn(b->cost - a->cost);\n}\n\nint main()\n{\n\tint n, k, i, j;\n\tfor (i = 0; i < 600010; i++) oa[i] = 0;\n\tscanf(\"%d %d\", &n, &k);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &arr[i].cost);\n\t\tarr[i].pos = i+1;\n\t}\n\tqsort(arr, n, sizeof(node), cmpfunc);\n\tj = k + 1;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (j >= arr[i].pos)\n\t\t{\n\t\t\twhile (oa[j] != 0) j++;\n\t\t\tfo[arr[i].pos] = j;\n\t\t\toa[j] = 1;\n\t\t\tcost += (long long int)(j - arr[i].pos)*(long long int)arr[i].cost;\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfo[arr[i].pos] = arr[i].pos;\n\t\t\toa[arr[i].pos] = 1;\n\t\t}\n\t}\n\tprintf(\"%I64d\\n\", cost);\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tprintf(\"%d \", fo[i]);\n\t}\n\tprintf(\"%d\\n\", fo[n]);\n\treturn 0;\n}"}
{"similarity_score": 0.34844868735083534, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "a68547eeca418f3abadc24627320fbc7", "bug_code_uid": "ecc564df1991403c4836f7ad2dcc7cf3", "src_uid": "8a1ceac1440f7cb406f12d9fc2ca0e20", "apr_id": "40496eec777c74ad4239286f59f84468", "difficulty": 800, "tags": ["binary search", "constructive algorithms", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int long long  a, b,m=0,y=0,i;\r\n        scanf(\"%lld %lld\", &a, &b);\r\n        if(a==0||b==0||(a+b)<4){\r\n            printf(\"0\\n\");\r\n        }\r\n        else if (a == b)\r\n        {\r\n            printf(\"%lld\\n\", (a + b) / 4);\r\n        }\r\n        else\r\n        {\r\n            if(a<b){\r\n                m = a;\r\n            }\r\n                else\r\n                {\r\n                    m = b;\r\n                }\r\n//printf(\"%lld*\\n\",m);\r\n            for (i=m;i>=1;i--)\r\n            {\r\n               // printf(\"Nab\");\r\n                y = ((a - i) + (b - i));\r\n                if (y >=(i*2))\r\n                {\r\n                    printf(\"%lld\\n\",i);\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint long long min(int long a,int long long b){\r\n if(a<b)\r\n return a;\r\n else\r\n    return b;\r\n\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int long long  a, b;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        int long long k=min(min(a,b),(a+b)/4);\r\n        printf(\"%lld\\n\",k);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8737060041407867, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a8b6aab1d232e7cc036eb4429e089795", "bug_code_uid": "fc28cf186409a1a240e5d53fe85aa8ae", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "0919c6b14e13475c547b7c3e96d3454e", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tunsigned long long int t,i,n;\n\tscanf(\"%llu\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%llu\",&n);\n\t\tif(n%2==0)\n\t\tprintf(\"%I64d\\n\",(4*n)+1);\n\t\telse\n\t\tprintf(\"%I64d\\n\",(2*n)+1);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tunsigned long long int t,i,n;\n\tscanf(\"%I64d\",&t);\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%I64d\",&n);\n\t\tif(n%2==0)\n\t\tprintf(\"%I64d\\n\",(4*n)+1);\n\t\telse if((n+1)%4==0)\n\t\tprintf(\"%I64d\\n\",n+1);\n\t\telse\n\t\tprintf(\"%I64d\\n\",(2*n)+1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.6617429837518464, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "7ccaba5ab5f06e1ba1f1551d40ffae76", "bug_code_uid": "d2547b952c0f78228be6310081c7c74e", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "89b4ac851251ae3c2598915e37cc71ba", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint n,v[105],a[105],lengthV,lengthA,i,level,i,j,k;\nvoid sortare(int *v,int length)\n{\n    int k=0,i;\n    do{\n        for(i=0;i<length-1;i++)\n        {\n            if(v[i]>v[i+1])\n            {\n                int aux=v[i];\n                v[i]=v[i+1];\n                v[i+1]=aux;\n                k=1;\n            }\n        }\n    }while(k);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&lengthV);\n\n    for(k=0;k<lengthV;k++)\n    {\n        scanf(\"%d\",&v[k]);\n    }\n\n    scanf(\"%d\",&lengthA);\n\n    for(k=0;k<lengthA;k++)\n    {\n        scanf(\"%d\",&a[k]);\n    }\n    sortare(v,lengthV);\n    sortare(a,lengthA);\n    i=j=0;\n    while(level!=n&&(i<lengthV||j<lengthA))\n    {\n         for(;i<lengthV;i++)\n         {\n             if(v[i]==level+1)\n                level++;\n         }\n\n         for(;j<lengthA;j++)\n         {\n             if(a[j]==level+1)\n                level++;\n         }\n    }\n    if(level==n)\n        printf(\"I become the guy.\");\n    else\n        printf(\"Oh, my keyboard!\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint n,v[205],lengthV,lengthA,level,i,j,k;\nvoid sortare(int *v,int length)\n{\n    do{\n            k=0;\n        for(i=0;i<length-1;i++)\n        {\n            if(v[i]>v[i+1])\n            {\n                int aux=v[i];\n                v[i]=v[i+1];\n                v[i+1]=aux;\n                k=1;\n            }\n        }\n    }while(k);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&lengthV);\n\n    for(k=0;k<lengthV;k++)\n    {\n        scanf(\"%d\",&v[k]);\n    }\n\n    scanf(\"%d\",&lengthA);\n\n    for(;k<lengthA+lengthV;k++)\n    {\n        scanf(\"%d\",&v[k]);\n    }\n    sortare(v,lengthV+lengthA);\n    if(v[0]==1)\n        level=1;\n    for(i=0;i<lengthA+lengthV;i++)\n    {\n        if(v[i]+1<v[i+1])\n        {\n            printf(\"Oh, my keyboard!\");\n            return 0;\n        }\n        if(v[i]+1==v[i+1])\n            level++;\n    }\n    if(level==n)\n        printf(\"I become the guy.\");\n        else\n        printf(\"Oh, my keyboard!\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.8527131782945736, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "76ab72344bb47042302abe5d816818a5", "bug_code_uid": "dc52fbd16969eba0877e2b7e71bf2968", "src_uid": "f0c22161cb5a9bc17320ccd05517f867", "apr_id": "c09b659ed23570f84612dbdeef27a74b", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int a,b,c,x,y,z;\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n\r\n        x=2*b+a;\r\n        y=b;\r\n        z=x*c+c;\r\n\r\n        printf(\"%d %d %d\\n\",x,y,z);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int a,b,c;\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        printf(\"%d %d %d\\n\",a+b+c,b+c,c);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.5184331797235023, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "812924559d5f4de996a4717c9f4b3a91", "bug_code_uid": "11f4dbf0f8cd1f5004ba591b382fb8e3", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "1c11675487e4fc29b41c1817a608102e", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    long long int n,i,c=0,j,temp;\n    scanf(\"%lld\",&n);\n    char s[n];\n    scanf(\"%s\",&s);\n\n    int l = strlen(s);\n    for(i=0; i<l-1; i++)\n    {\n        for(j=i+1; j<l; j++)\n        {\n            if(s[i]>s[j])\n            {\n                temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n\n    }\n    for(i=0;i<l;i++){\n        if(s[i]=='z')\n            printf(\"0 \");\n        else if(s[i]=='n')\n            printf(\"1 \");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    long long int n,i,c=0,d=0,j,temp;\n    scanf(\"%lld\",&n);\n    char s[n];\n    scanf(\"%s\",&s);\n\n    int l = strlen(s);\n\n    for(i=0;i<l;i++){\n        if(s[i]=='z')\n            c++;\n        else if(s[i]=='n')\n            d++;\n    }\n\n    while(d--)\n        printf(\"1 \");\n\n     while(c--)\n        printf(\"0 \");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9967182372245663, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6106d91e456b9be6317e766f112b43dc", "bug_code_uid": "48d0cc2d471df4b246782fed059aa292", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "97537c3b8509f149221020b0670dbd2d", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef int lint;\nvoid merge(lint l, lint mid1, lint mid2, lint r, lint a[]);\n\nvoid mergesort(lint a[], lint l, lint r) // left and right ends of array\n{\n\tif(l>=r)\n\t\treturn;\n\n\tlint mid = l+ (r-l)/2;\n\tmergesort(a,l,mid);\n\tmergesort(a, mid+1, r);\n\tmerge(l, mid, mid+1, r, a);\n}\nvoid merge(lint l, lint mid1, lint mid2, lint r, lint a[])\n{\n\tlint i=l, j=mid2, k=0 ,c[100]={0};\n\n\twhile(i<=mid1 && j<=r)\n\t{\n\t\tif(a[i]<a[j])\n\t\t\tc[k++]=a[i++];\n\t\telse\n\t\t\tc[k++]=a[j++];\n\t}\n\n\twhile(i<=mid1)\n\t\tc[k++]=a[i++];\n\twhile(j<=r)\n\t\tc[k++]=a[j++];\n         \n\tk=0;\n\tfor(i=l; i<=mid1; i++)\n\t\ta[i]=c[k++];\n\tfor(i=mid2; i<=r; i++)\n\t\ta[i]=c[k++];\n}\nint main()\n{\n\tlint a[100], i, N, L;\n\tscanf(\"%d\", &N);\n\tscanf(\"%d\", &L);\n\tfor(i=0; i<N; i++)\n\t\tscanf(\"%d\", &a[i]);\n\n\tmergesort(a, 0, N-1);\n\tlint max=0;\n         double d;\n\t\n         \tfor(i=0; i<N-1; i++)\n\t\tif(a[i+1]-a[i]>max)\n\t\t\tmax=a[i+1]-a[i];\n\t\t\n\t\td=(double)max/2;\n\t\tif(L-a[N-1]>d)\n\t\t\td=(double)(L-a[N-1]);\n\n\t        if(a[0]>d)\n\t            d=(double)(a[0]);\t       \n\t       \n\t\tprintf(\"%.10lf\\n\",d);\n\n\n\treturn 0;\n}\n\n\n\n\n\n", "fixed": "#include<stdio.h>\ntypedef int lint;\nvoid merge(lint l, lint mid1, lint mid2, lint r, lint a[]);\n\nvoid mergesort(lint a[], lint l, lint r) // left and right ends of array\n{\n\tif(l>=r)\n\t\treturn;\n\n\tlint mid = l+ (r-l)/2;\n\tmergesort(a,l,mid);\n\tmergesort(a, mid+1, r);\n\tmerge(l, mid, mid+1, r, a);\n}\nvoid merge(lint l, lint mid1, lint mid2, lint r, lint a[])\n{\n\tlint i=l, j=mid2, k=0 ,c[100000]={0};\n\n\twhile(i<=mid1 && j<=r)\n\t{\n\t\tif(a[i]<a[j])\n\t\t\tc[k++]=a[i++];\n\t\telse\n\t\t\tc[k++]=a[j++];\n\t}\n\n\twhile(i<=mid1)\n\t\tc[k++]=a[i++];\n\twhile(j<=r)\n\t\tc[k++]=a[j++];\n         \n\tk=0;\n\tfor(i=l; i<=mid1; i++)\n\t\ta[i]=c[k++];\n\tfor(i=mid2; i<=r; i++)\n\t\ta[i]=c[k++];\n}\nint main()\n{\n\tlint a[1000000], i, N, L;\n\tscanf(\"%d\", &N);\n\tscanf(\"%d\", &L);\n\tfor(i=0; i<N; i++)\n\t\tscanf(\"%d\", &a[i]);\n\n\tmergesort(a, 0, N-1);\n\tlint max=0;\n         double d;\n\t\n         \tfor(i=0; i<N-1; i++)\n\t\tif(a[i+1]-a[i]>max)\n\t\t\tmax=a[i+1]-a[i];\n\t\t\n\t\td=(double)max/2;\n\t\tif(L-a[N-1]>d)\n\t\t\td=(double)(L-a[N-1]);\n\n\t        if(a[0]>d)\n\t            d=(double)(a[0]);\t       \n\t       \n\t\tprintf(\"%.10lf\\n\",d);\n\n\n\treturn 0;\n}\n\n\n\n\n\n"}
{"similarity_score": 0.938851142680667, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "669f49ab83697e3b45afc6ad299c248b", "bug_code_uid": "19c84121b211d5c29522e959062e0ab0", "src_uid": "9edbe28b5be43a9cc6c633db98bc5a36", "apr_id": "302ce92a7c7b8957b01e700ded9ee85a", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    long int currterm,k,t,i,*arr,j,n;\r\n    scanf(\"%ld\",&t);\r\n    for(i = 0 ; i < t ; i++)\r\n    {\r\n        scanf(\"%ld %ld\",&n,&k);\r\n        arr = (long int *)malloc(k * sizeof(long int));\r\n        for(j = 0 ; j < k ; j++)\r\n            scanf(\"%ld\",&arr[j]);\r\n        if(arr[0]%(n - k + 1) == 0)\r\n            currterm = arr[0]/(n - k + 1);\r\n        else\r\n            currterm = arr[0]/(n - k + 1) + 1;\r\n        for(j = 0 ; j < k - 1 ; j++)\r\n        {\r\n            if(currterm > arr[j + 1] - arr[j])\r\n            {\r\n                printf(\"No\\n\");\r\n                break;\r\n            }\r\n            currterm = arr[j + 1] - arr[j];\r\n        }\r\n        if(j == k - 1)\r\n            printf(\"Yes\\n\");\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    long int currterm,k,t,i,*arr,j,n;\r\n    scanf(\"%ld\",&t);\r\n    for(i = 0 ; i < t ; i++)\r\n    {\r\n        scanf(\"%ld %ld\",&n,&k);\r\n        arr = (long int *)malloc(k * sizeof(long int));\r\n        for(j = 0 ; j < k ; j++)\r\n            scanf(\"%ld\",&arr[j]);\r\n        if(arr[0]%(n - k + 1) == 0)\r\n            currterm = arr[0]/(n - k + 1);\r\n        else\r\n            if(arr[0] >= 0)\r\n                currterm = arr[0]/(n - k + 1) + 1;\r\n            else\r\n                currterm = arr[0]/(n - k + 1);\r\n        for(j = 0 ; j < k - 1 ; j++)\r\n        {\r\n            if(currterm > arr[j + 1] - arr[j])\r\n            {\r\n                printf(\"No\\n\");\r\n                break;\r\n            }\r\n            currterm = arr[j + 1] - arr[j];\r\n        }\r\n        if(j == k - 1)\r\n            printf(\"Yes\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.4348422496570645, "equal_cnt": 25, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 10, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "4b673768c3d63962e5c94b0eea603575", "bug_code_uid": "f2d28b6db9009473a8f43688270852f0", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "b161ec293eaa87aa9730ee778c104dfb", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j,k=0;\n    scanf(\"%d\",&n);\n    long long int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        k=0;\n        for(j=1;j<=a[i]/2);j++){\n            if((a[i]%j)==0){\n                k++;\n            }\n            if(k>2){\n                break;\n            }\n        }\n        if(k==2){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n        int i,j,l,t;\n        double m;\n        scanf(\"%d\",&t);\n        long long int a[t];\n\n        for(i=0;i<t;i++){\n            scanf(\"%lld\",&a[i]);\n        }\n        for(i=0;i<t;i++){\n\n            if(a[i]==1){\n                printf(\"NO\\n\");\n                continue;\n            }\n            m=sqrt(a[i]);\n            l=(int)m;\n            if(m!=l){\n                printf(\"NO\\n\");\n                continue;\n            }\n            else if(l%2==0){\n                if(l==2){\n                    printf(\"YES\\n\");\n                    continue;\n                }\n                printf(\"NO\\n\");\n                continue;\n            }\n            else{\n                for(j=3;j*j<=l;j=j+2){\n                    if(l%j==0){\n                        printf(\"NO\\n\");\n                        goto A;\n                    }\n                }\n                printf(\"YES\\n\");\n                A:j=2;\n            }\n        }\n        return 0;\n    }\n"}
{"similarity_score": 0.9840737636211232, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "27908eff3fae0444c8a0a1ab8ce513c1", "bug_code_uid": "b02589ccf1188c7ea3c67dd7b84e5075", "src_uid": "e512285d15340343e34f596de2be82eb", "apr_id": "8d2f5b954c0653d3158872e157813b19", "difficulty": 1300, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n, k, i, a[100], max, min, j, c=1; \n    scanf(\"%d %d\", &n, &k);\n    max = min = 1; \n    for(i = 0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        if(a[i]>=max) max = a[i];\n        else if(a[i]<=min) min = a[i];\n    }\n    if(max - min > k) \n        printf(\"NO\\n\");\n    else\n    {\n        printf(\"YES\\n\");\n       for(i = 0; i<n; i++)\n       {    c=1;\n            for(j=0; j<a[i]; j++)\n            {   if(c>k) c = 1;\n                printf(\"%d \", c);\n                c++;\n            }\n            printf(\"\\n\");\n       }\n    }\n    return 0;\n        \n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n, k, i, a[100], max, min, j, c=1; \n    scanf(\"%d %d\", &n, &k); \n    max = -1; min = 100; \n    for(i = 0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n        if(a[i]>=max) max = a[i];\n        else if(a[i]<=min) min = a[i];\n    }\n    if(max - min > k) \n        printf(\"NO\\n\");\n    else\n    {\n        printf(\"YES\\n\");\n       for(i = 0; i<n; i++)\n       {    c=1;\n            for(j=0; j<a[i]; j++)\n            {   if(c>k) c = 1;\n                printf(\"%d \", c);\n                c++;\n            }\n            printf(\"\\n\");\n       }\n    }\n    return 0;\n        \n}"}
{"similarity_score": 0.9971631205673759, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "be10c3267f7e3019ca72cbd4015c205b", "bug_code_uid": "367f7cd8cd4a86cf77a1c3a222cd3f52", "src_uid": "4867d014809bfc1d90672b32ecf43b43", "apr_id": "4b766806dad114f186286dded4814f70", "difficulty": 1900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define M 100005\n#define MM 1000000007\nint a[M];\n__int64 sum=0,s=1;\n\n__int64 solve(__int64 x,__int64 b)\n{\n    __int64 r=1,base=x;\n    while (b)\n    {\n\n    if (b&1)\n        r=r*base%MM;\n    base=base*base%MM;\n    b>>=1;\n    }\n    return r;\n}\n\nint main()\n{\n    int n,m;\n    __int64 x;\n\n    int i;\n    scanf (\"%d%I64d\",&n,&x);\n    for (i=1;i<=n;i++)\n    {\n        scanf (\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    sum-=a[n];\n    m=0;\n    for (i=a[n];i>0;i++)\n    {\n        while (n&&a[n]==i)\n        {\n            n--;\n            m++;\n        }\n        if (m%x)\n            break;\n        sum++;\n        m/=x;\n    }\n   printf (\"%I64d\\n\", solve(x,sum));\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define M 100005\n#define MM 1000000007\nint a[M];\n__int64 sum=0,s=1;\n\n__int64 solve(__int64 x,__int64 b)\n{\n    __int64 r=1,base=x;\n    while (b)\n    {\n\n    if (b&1)\n        r=r*base%MM;\n    base=base*base%MM;\n    b>>=1;\n    }\n    return r;\n}\n\nint main()\n{\n    int n,m;\n    __int64 x;\n\n    int i;\n    scanf (\"%d%I64d\",&n,&x);\n    for (i=1;i<=n;i++)\n    {\n        scanf (\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    sum-=a[n];\n    m=0;\n    for (i=a[n];i>0;i--)\n    {\n        while (n&&a[n]==i)\n        {\n            n--;\n            m++;\n        }\n        if (m%x)\n            break;\n        sum++;\n        m/=x;\n    }\n   printf (\"%I64d\\n\", solve(x,sum));\n    return 0;\n}\n"}
{"similarity_score": 0.9047619047619048, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4412c57318fea45bfac6072bf4644767", "bug_code_uid": "748a03606e68ed02485664d75e363a84", "src_uid": "10c9b2d70030f7ed680297455d1f1bb0", "apr_id": "604cd9c9a110a73ca1b99559cdd7ec98", "difficulty": 1300, "tags": ["data structures", "constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint t, n, i, k;\n\tchar a[1001];\n\tchar b[1001];\n\tint c[3005];\n\tint l, r;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%d\", &n);\n\t\tscanf(\"%s\", a);\n\t\tscanf(\"%s\", b);\n\t\tk = 0;\n\t\t/*for(i = 1; i < n; i++){\n\t\t\tif(a[i] != a[i - 1]){\n\t\t\t\tc[k++] = i;\n\t\t\t}\n\t\t}\n\t\tif(a[n - 1] == '1'){\n\t\t\tc[k++] = n;\n\t\t}\n\t\tfor(i = n - 1; i >= 1; i--){\n\t\t\tif(b[i] == '1'){\n\t\t\t\tc[k++] = i + 1;\n\t\t\t\tc[k++] = 1;\n\t\t\t\tc[k++] = i + 1;\n\t\t\t}\n\t\t}\n\t\tif(b[i] == '1'){\n\t\t\tc[k++] = 1;\n\t\t}*/\t\n\t\tl = 0;\n\t\tr = n - 1;\n\t\tfor(i = 0; i < n; i++){\n\t\t\tif(i % 2 == 0){\n\t\t\t\tif(a[n - 1 - i] == b[l]){\n\t\t\t\t\tc[k++] = 1;\n\t\t\t\t\tc[k++] = n - i;\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tc[k++] = n - i;\n\t\t\t\t}\n\t\t\t\tl++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(b[r] == '0')\n\t\t\t\t\tb[r] = '1';\n\t\t\t\telse\n\t\t\t\t\tb[r] = '0';\n\t\t\t\tif(a[n - 1 - i] == b[r]){\n\t\t\t\t\tc[k++] = 1;\n\t\t\t\t\tc[k++] = n - i;\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tc[k++] = n - i;\n\t\t\t\t}\n\t\t\t\tr--;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%d \", k);\n\t\tfor(i = 0; i < k; i++){\n\t\t\tprintf(\"%d \", c[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\tint t, n, i, k;\n\tchar a[1001];\n\tchar b[1001];\n\tint c[3005];\n\tint l, r;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%d\", &n);\n\t\tscanf(\"%s\", a);\n\t\tscanf(\"%s\", b);\n\t\tk = 0;\n\t\t/*for(i = 1; i < n; i++){\n\t\t\tif(a[i] != a[i - 1]){\n\t\t\t\tc[k++] = i;\n\t\t\t}\n\t\t}\n\t\tif(a[n - 1] == '1'){\n\t\t\tc[k++] = n;\n\t\t}\n\t\tfor(i = n - 1; i >= 1; i--){\n\t\t\tif(b[i] == '1'){\n\t\t\t\tc[k++] = i + 1;\n\t\t\t\tc[k++] = 1;\n\t\t\t\tc[k++] = i + 1;\n\t\t\t}\n\t\t}\n\t\tif(b[i] == '1'){\n\t\t\tc[k++] = 1;\n\t\t}*/\t\n\t\tl = 0;\n\t\tr = n - 1;\n\t\tfor(i = 0; i < n; i++){\n\t\t\tif(i % 2 == 0){\n\t\t\t\tif(b[n - 1 - i] == a[l]){\n\t\t\t\t\tc[k++] = 1;\n\t\t\t\t\tc[k++] = n - i;\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tc[k++] = n - i;\n\t\t\t\t}\n\t\t\t\tl++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a[r] == '0')\n\t\t\t\t\ta[r] = '1';\n\t\t\t\telse\n\t\t\t\t\ta[r] = '0';\n\t\t\t\tif(b[n - 1 - i] == a[r]){\n\t\t\t\t\tc[k++] = 1;\n\t\t\t\t\tc[k++] = n - i;\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tc[k++] = n - i;\n\t\t\t\t}\n\t\t\t\tr--;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%d \", k);\n\t\tfor(i = 0; i < k; i++){\n\t\t\tprintf(\"%d \", c[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.8480096501809409, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "2915a5fa118bc0700e6ecda0f0f90751", "bug_code_uid": "3db44ae7703a30d289ac061bd66d1597", "src_uid": "1b9a204dd08d61766391a3b4d2429df2", "apr_id": "4d8df091c84035fe2aa6d9d859c9e487", "difficulty": 800, "tags": ["bitmasks", "constructive algorithms", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int i,n;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n\r\n    int j,k,a[n+5],x=0,y=0,z=0,m;\r\n\r\n        for(j=1;j<=n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]%2==0)\r\n                x=x+1;\r\n            else\r\n                y=y+1;\r\n        }\r\n        if(n==y)\r\n            printf(\"0\\n\");\r\n        else if(y>=1&&y!=n)\r\n            printf(\"%d\\n\",x);\r\n        else\r\n        {\r\n            m=a[1];\r\n            for(k=2;k<=n;k++)\r\n            {\r\n                if(m>a[k])\r\n                    m=a[k];\r\n            }\r\n            while(m%2==0)\r\n            {\r\n                m=m/2;\r\n                z=z+1;\r\n            }\r\n            printf(\"%d\\n\",(n+z)-1);\r\n        }\r\n\r\n    }\r\n   return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int i,n;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n\r\n    int j,k,a[n+5],x=0,y=0,z,m,h=50;\r\n\r\n        for(j=1;j<=n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]%2==0)\r\n                x=x+1;\r\n            else\r\n                y=y+1;\r\n        }\r\n        if(n==y)\r\n            printf(\"0\\n\");\r\n        else if(y>=1&&y!=n)\r\n            printf(\"%d\\n\",x);\r\n        else\r\n        {\r\n            for(k=1;k<=n;k++)\r\n            {   z=0;\r\n                m=a[k];\r\n                while(m%2==0)\r\n                {\r\n                   m=m/2;\r\n                   z=z+1;\r\n                }\r\n                if(h>z)\r\n                {\r\n                  h=z;\r\n                }\r\n            }\r\n            printf(\"%d\\n\",(n+h)-1);\r\n        }\r\n\r\n    }\r\n   return 0;\r\n}\r\n"}
{"similarity_score": 0.8711340206185567, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "72342846faaba64b81d4a663b62886ec", "bug_code_uid": "7dcbd25135e66624dd9db662a59e888a", "src_uid": "c02357c4d959e300f970f66f9b3107eb", "apr_id": "b4c1d487a19888b7a699bf98668eb129", "difficulty": 800, "tags": ["games", "greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n    for(int j=0;j<t;j++){\n        char stringa[100];\n        scanf(\"%s\", stringa);\n        for(int i=0;i<strlen(stringa);i++){\n            if(i%2==0){\n                if(int(stringa[i])==97)stringa[i]='b';\n                else if(int(stringa[i])>97)stringa[i]='a';\n            }else if(i%2==1){\n                if(int(stringa[i])==122)stringa[i]='y';\n                else if(int(stringa[i])<122 && int(stringa[i])>96)stringa[i]='z';\n            }\n        }\n        printf(\"%s\\n\", stringa);\n    }\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n    for(int j=0;j<t;j++){\n        char stringa[100];\n        scanf(\"%s\", stringa);\n        for(int i=0;i<strlen(stringa);i++){\n            if(i%2==0){\n                if((int)stringa[i]==97)stringa[i]='b';\n                else if((int)stringa[i]>97)stringa[i]='a';\n            }else if(i%2==1){\n                if((int)stringa[i]==122)stringa[i]='y';\n                else if((int)stringa[i]<122 && (int)stringa[i]>96)stringa[i]='z';\n            }\n        }\n        printf(\"%s\\n\", stringa);\n    }\n}\n\n"}
{"similarity_score": 0.9808126410835214, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "6371c7e66c092c855aaa0e2fd354e5af", "bug_code_uid": "cd5e5d8c82c810385d89663c32907761", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "d861c38b1fdfceb8313be49ee1eb735c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint t = 0, n = 0, i = 0, j = 0, x = 0, count = 0;\r\n\tint a[1000];\r\n\tchar s[11];\r\n\tchar tun = '0';\r\n\tchar name[5] = { 'T','i','m','u','r' };\r\n\tmemset(a, 0, sizeof(a));\r\n\tscanf_s(\"%d\", &t);\r\n\twhile (i < t)\r\n\t{\r\n\t\tmemset(s, 0, sizeof(s));\r\n\t\tscanf_s(\"%d\", &n);\r\n\t\ttun = getchar();\r\n\t\tgets_s(s);\r\n\t\tif (n != 5)\r\n\t\t{\r\n\t\t\ta[i] = 2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (j = 0; j < 5; j++)\r\n\t\t\t{\r\n\t\t\t\tfor (x = 0; s[x] != '\\0'; x++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name[j] == s[x])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (count == 5)\r\n\t\t\t{\r\n\t\t\t\ta[i] = 1;\r\n\t\t\t}\r\n\t\t\telse if (count != 5)\r\n\t\t\t{\r\n\t\t\t\ta[i] = 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\tfor (i = 0; a[i] != 0; i++) \r\n\t{\r\n\t\tif (a[i] == 1)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse if (a[i] == 2)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint t = 0, n = 0, i = 0, j = 0, x = 0, count = 0;\r\n\tint a[1000];\r\n\tchar s[11];\r\n\tchar tun = '0';\r\n\tchar name[5] = { 'T','i','m','u','r' };\r\n\tmemset(a, 0, sizeof(a));\r\n\tscanf(\"%d\", &t);\r\n\twhile (i < t)\r\n\t{\r\n\t\tcount = 0;\r\n\t\tmemset(s, 0, sizeof(s));\r\n\t\tscanf(\"%d\", &n);\r\n\t\ttun = getchar();\r\n\t\tgets(s);\r\n\t\tif (n != 5)\r\n\t\t{\r\n\t\t\ta[i] = 2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (j = 0; j < 5; j++)\r\n\t\t\t{\r\n\t\t\t\tfor (x = 0; s[x] != '\\0'; x++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name[j] == s[x])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (count == 5)\r\n\t\t\t{\r\n\t\t\t\ta[i] = 1;\r\n\t\t\t}\r\n\t\t\telse if (count != 5)\r\n\t\t\t{\r\n\t\t\t\ta[i] = 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\tfor (i = 0; i < t; i++) \r\n\t{\r\n\t\tif (a[i] == 1)\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse if (a[i] == 2)\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9973924380704041, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a199aa507224e23c7a1227bcc236d925", "bug_code_uid": "312f130f9d455d6f9e26127ddd83c5fe", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "e44facacc8006b06dc54fbd02e819a48", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,d=0,i=0,t=0;\n    char str1[1000]={0},str2[1000]={0};\n    scanf(\"%d%s%s\",&n,&str2,&str1);\n    while(i<n)\n    {\n\n\n        if(str1[i]>str2[i])\n        {\n            d=str1[i]-str2[i];\n        }\n        else\n        {\n            d=str2[i]-str1[i];\n        }\n        if(d>5)\n        {\n            t=t+10-d;\n        }\n        else\n        {\n            t=t+d;\n        }\n        i++;\n    }\n\n    /*for(i=1;i<=n;i++)\n    {\n        o=a%10;p=b%10;\n        a=a/10;b=b/10;\n        if(o>=p)\n        {\n            j=o-p;\n        }\n        else\n        {\n            j=p-o;\n        }\n\n        if(j<=5)\n        {\n            t=t+j;\n        }\n        else\n        {\n            t=t+10-j;\n        }\n\n    }*/\n    printf(\"%d\",t);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,d=0,i=0,t=0;\n    char str1[1001]={0},str2[1001]={0};\n    scanf(\"%d%s%s\",&n,&str2,&str1);\n    while(i<n)\n    {\n\n\n        if(str1[i]>str2[i])\n        {\n            d=str1[i]-str2[i];\n        }\n        else\n        {\n            d=str2[i]-str1[i];\n        }\n        if(d>5)\n        {\n            t=t+10-d;\n        }\n        else\n        {\n            t=t+d;\n        }\n        i++;\n    }\n\n    /*for(i=1;i<=n;i++)\n    {\n        o=a%10;p=b%10;\n        a=a/10;b=b/10;\n        if(o>=p)\n        {\n            j=o-p;\n        }\n        else\n        {\n            j=p-o;\n        }\n\n        if(j<=5)\n        {\n            t=t+j;\n        }\n        else\n        {\n            t=t+10-j;\n        }\n\n    }*/\n    printf(\"%d\",t);\n    return 0;\n}\n"}
{"similarity_score": 0.9916067146282974, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1f24b5dfde346e3e75feb707617353e0", "bug_code_uid": "b268c44d2b96d87fe5ce801fb601ce47", "src_uid": "586a15030f4830c68f2ea1446e80028c", "apr_id": "f864cbcb2eac365d9800f4dea96f72f7", "difficulty": 1000, "tags": ["two pointers", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char a[4000];\n   long long i,t,c,d,n,j,k,temp;\n   scanf(\"%lld\",&t);\n   for(j=0;j<t;j++)\n   {\n       scanf(\"%s\",a);\n    n=strlen(a);\n        for(i=0;i<n;)\n        {\n            if(a[i]==a[i+1])\n            {\n                a[i]=0;a[i+1]=0;\n                i+=2;\n\n            }\n            else{i++;}\n        }\n        for(i=0;i<n;i++)\n        {\n            for(k=1;k<n;k++)\n            {\n                if(a[k]<a[k-1])\n                {\n                    temp=a[k];\n                    a[k]=a[k-1];\n                    a[k-1]=temp;\n                }\n            }\n\n        }\n        for(i=0;i<n;i++)\n        {\n            if(a[i]==0)\n            {\n                continue;\n            }\n            printf(\"%c\",a[i]);\n        }\n        printf(\"\\n\");\n   }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char a[4000];\n   long long i,t,c,d,n,j,k,temp;\n   scanf(\"%lld\",&t);\n   for(j=0;j<t;j++)\n   {\n       scanf(\"%s\",a);\n    n=strlen(a);\n        for(i=0;i<n;)\n        {\n            if(a[i]==a[i+1])\n            {\n                a[i]=0;a[i+1]=0;\n                i+=2;\n\n            }\n            else{i++;}\n        }\n        for(i=0;i<n;i++)\n        {\n            for(k=1;k<n;k++)\n            {\n                if(a[k]<a[k-1])\n                {\n                    temp=a[k];\n                    a[k]=a[k-1];\n                    a[k-1]=temp;\n                }\n            }\n\n        }\n        for(i=0;i<n;i++)\n        {\n            if(a[i]==0||a[i]==a[i-1])\n            {\n                continue;\n            }\n            printf(\"%c\",a[i]);\n        }\n        printf(\"\\n\");\n   }\n    return 0;\n}"}
{"similarity_score": 0.9932126696832579, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c39dcacd7a745c25844cc0dc41b68427", "bug_code_uid": "19d9ae290f9c5154a45a52d85397959d", "src_uid": "5392996bd06bf52b48fe30b64493f8f5", "apr_id": "e9e4e1c0d49936b246cae116f433663e", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,i;\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    scanf(\"%d %d\",&n,&m);\n    if(n>m)\n    {\n        for(i=1;i<=m;i++)\n        printf(\"BG\");\n        for(i=m+1;i<=n;i++)\n        printf(\"B\");\n        printf(\"\\n\");\n    }\n    else\n    {\n        for(i=1;i<=n;i++)\n        printf(\"GB\");\n        for(i=n+1;i<=m;i++)\n        printf(\"G\");\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i;\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    scanf(\"%d %d\",&n,&m);\n    if(n>m)\n    {\n        for(i=1;i<=m;i++)\n        printf(\"BG\");\n        for(i=m+1;i<=n;i++)\n        printf(\"B\");\n        printf(\"\\n\");\n    }\n    else\n    {\n        for(i=1;i<=n;i++)\n        printf(\"GB\");\n        for(i=n+1;i<=m;i++)\n        printf(\"G\");\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.996116504854369, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8cfdbcd2ebe20f139d4411bab911fad2", "bug_code_uid": "1a8fe76bebdceddd1effcc63335200bf", "src_uid": "bdd98d17ff0d804d88d662cba6a61e8f", "apr_id": "539e24281856d2f93eacd1aa13516300", "difficulty": 1100, "tags": ["data structures", "dsu", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\ntypedef struct kisi{\n\tchar onceki[20],sonraki[20];\n} kisi;\n\nint main()\n{\n\tint n,i=0,sayac=0,u=0,durum=0,j,p;\n\tscanf(\"%d\",&n);\n\tkisi a[n];\n\twhile(sayac<n)\n\t{\n\t\tdurum=0;\n\t\tsayac++;\n\t\tscanf(\"%s %s\",a[i].onceki,a[i].sonraki);\n\t\tfor(j=0;j<i;j++)\n\t\t{\n\t\t\tif(!strcmp(a[j].sonraki,a[i].onceki))\n\t\t\t{\n\t\t\t\tstrcpy(a[j].sonraki,a[i].sonraki);\n\t\t\t\tdurum=1;\n\t\t\t}\n\t\t}\n\t\tif(durum==0)\n\t\t\ti++;\n\t}\n\tprintf(\"%d\\n\",i);\n\tfor(j=0;j<i;j++)\n\t\tprintf(\"%s %s\\n\",a[j].onceki,a[j].sonraki);\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\ntypedef struct kisi{\n\tchar onceki[21],sonraki[21];\n} kisi;\n\nint main()\n{\n\tint n,i=0,sayac=0,u=0,durum=0,j,p;\n\tscanf(\"%d\",&n);\n\tkisi a[n];\n\twhile(sayac<n)\n\t{\n\t\tdurum=0;\n\t\tsayac++;\n\t\tscanf(\"%s %s\",a[i].onceki,a[i].sonraki);\n\t\tfor(j=0;j<i;j++)\n\t\t{\n\t\t\tif(!strcmp(a[j].sonraki,a[i].onceki))\n\t\t\t{\n\t\t\t\tstrcpy(a[j].sonraki,a[i].sonraki);\n\t\t\t\tdurum=1;\n\t\t\t}\n\t\t}\n\t\tif(durum==0)\n\t\t\ti++;\n\t}\n\tprintf(\"%d\\n\",i);\n\tfor(j=0;j<i;j++)\n\t\tprintf(\"%s %s\\n\",a[j].onceki,a[j].sonraki);\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9433406916850625, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7c3a823b42c68b4d2e8261a2fbc68342", "bug_code_uid": "041c92a5901a47379b8788589ea32c79", "src_uid": "d5549c0627c236d82541a67ccbe7977d", "apr_id": "37669ae1ad563907eae6d32e31763ea4", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, k, max, i, j;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d%d\", &n, &k);\r\n        if (n % 2 == 0)\r\n            max = n / 2;\r\n        else\r\n            max = (n + 1) / 2;\r\n        if (k > max)\r\n        {\r\n            printf(\"-1\\n\");\r\n            continue;\r\n        }\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            for (j = 0; j < n; j++)\r\n            {\r\n                if (i == j && i % 2 == 0)\r\n                    printf(\"R\");\r\n                else\r\n                    printf(\".\");\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, k, max, i, j;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n\r\n        scanf(\"%d%d\", &n, &k);\r\n        if (n % 2 == 0)\r\n            max = n / 2;\r\n        else\r\n            max = (n + 1) / 2;\r\n        if (k > max)\r\n        {\r\n            printf(\"-1\\n\");\r\n            continue;\r\n        }\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            for (j = 0; j < n; j++)\r\n            {\r\n                if (i == j && i % 2 == 0 && k > 0)\r\n                {\r\n                    printf(\"R\");\r\n                    k--;\r\n                }\r\n                else\r\n                    printf(\".\");\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9882121807465619, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "10f8493e244f6b52a216fcc39d6d5172", "bug_code_uid": "faffa566da0405efc74fb46767115993", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "570dd7d207d6962f4c6ab61c0ff36662", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n\t\n\tint n,l,max;\n\tscanf(\"%d %d\",&n,&l);\n\tint a[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\tint sabit=a[i];\n\t\t\t\ta[i]=a[j];\n\t\t\t\ta[j]=sabit;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\tif(a[0]>l-a[n-1])\n\t{\n\t\tmax=2*a[0];\n\t}\n\telse\n\t{\n\t\tmax=2*(l-a[n-1]);\n\t}\n\tfor(int i=0;i<n-1;i++)\n\t{\n\t\tif(a[i+1]-a[i]>max)\n\t\t{\n\t\t\tmax=(a[i+1]-a[i]);\n\t\t}\n\t}\n\t//\n\tdouble sonuc=(double) max/2;\n\tprintf(\"%lf\",sonuc);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n\t\n\tint n,l,max;\n\tscanf(\"%d %d\",&n,&l);\n\tint a[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\tint sabit=a[i];\n\t\t\t\ta[i]=a[j];\n\t\t\t\ta[j]=sabit;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\tif(a[0]>l-a[n-1])\n\t{\n\t\tmax=2*a[0];\n\t}\n\telse\n\t{\n\t\tmax=2*(l-a[n-1]);\n\t}\n\tfor(int i=0;i<n-1;i++)\n\t{\n\t\tif(a[i+1]-a[i]>max)\n\t\t{\n\t\t\tmax=(a[i+1]-a[i]);\n\t\t}\n\t}\n\t//\n\tdouble sonuc=max/2.0;\n\tprintf(\"%f\",sonuc);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9172714078374455, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "36ea9d6b22314855cbb3d6501c513eec", "bug_code_uid": "1064ebce0a1cf77db7674659952652d1", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "bac39db7fe1b9d4cecda3982485cf499", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tchar a[1000][20];\n\tint n,i=0,sum=0;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\twhile(n--)\n\t{\n\t\tgets(a[i]);\n\t\tif(a[i][0]=='T')\n\t\t{\n\t\t\tsum+=4;\n\t\t}\n\t\tif(a[i][0]=='C')\n\t\t{\n\t\t\tsum+=6;\n\t\t}\n\t\tif(a[i][0]=='O')\n\t\t{\n\t\t\tsum+=8;\n\t\t}\n\t\tif(a[i][0]=='D')\n\t\t{\n\t\t\tsum+=12;\n\t\t}\n\t\tif(a[i][0]=='I')\n\t\t{\n\t\t\tsum+=20;\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tchar a[200005];\n\tint n,sum=0;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\twhile(n--)\n\t{\n\t\tgets(a);\n\t\tif(a[0]=='T')\n\t\t{\n\t\t\tsum+=4;\n\t\t}\n\t\tif(a[0]=='C')\n\t\t{\n\t\t\tsum+=6;\n\t\t}\n\t\tif(a[0]=='O')\n\t\t{\n\t\t\tsum+=8;\n\t\t}\n\t\tif(a[0]=='D')\n\t\t{\n\t\t\tsum+=12;\n\t\t}\n\t\tif(a[0]=='I')\n\t\t{\n\t\t\tsum+=20;\n\t\t}\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7521367521367521, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 5, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "1e5b8351b760cbc3e73c736c74c8f5c6", "bug_code_uid": "a8fde29b2aedc273c3f9298843ea3b9b", "src_uid": "aa77158bf4c0854624ddd89aa8b424b3", "apr_id": "cc3e37ebe8ee8b3c7c8831996614de19", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\nint main()\n{\n    int online[1001] = {0};\n    int Xonline[1001] = {0};\n    int p, q, l, r, i;\n    int a, b, include;\n    int c, d;\n    int t;\n    int resp = 0;\n    int suitable = 0;\n    scanf(\"%d %d %d %d\", &p, &q, &l, &r);\n    while (p>0)\n    {\n        scanf(\"%d %d\", &a, &b);\n        for (i=a; i<=b; i++)\n            online[i] = 1;\n        p--;\n    }\n    while (q>0)\n    {\n        scanf(\"%d %d\", &c, &d);\n        for (i=c; i<=d; i++)\n        {\n            Xonline[i] = 1;\n        }\n        q--;\n    }\n    for (t = l; t<=r; t++)\n    {\n        suitable = 0;\n        for (i = t; i-t <=r && i-t >=l && !suitable; i++)\n        {\n            if (Xonline[i-t] && online[i])\n                suitable = 1;\n        }\n        if (suitable == 1)\n            resp++;\n    }\n    printf(\"%d\\n\", resp);\n}", "fixed": "#include <stdlib.h>\n#include<stdio.h>\n\nint main()\n{\n    int p, q, r, l;\n    int a, b, c, d;\n    int Y[1001] = {0};\n    int X[1001] = {0};\n    int i, j;\n    int t;\n    int suitable, resp = 0;\n    scanf(\"%d %d %d %d\", &p, &q, &l, &r);\n    while (p>0)\n    {\n        scanf(\"%d %d\", &a, &b);\n        for (i=a; i<=b; i++)\n        {\n            Y[i] = 1;\n        }\n        p--;\n    }\n    while (q>0)\n    {\n        scanf(\"%d %d\", &c, &d);\n        for (i=c; i<=d; i++)\n        {\n            X[i] = 1;\n        }\n        q--;\n    }\n    for (t = l; t<=r; t++)\n    {\n        suitable = 0;\n        for (i=0; i<=1000 && !suitable; i++)\n        {\n            if (i-t >= 0 && Y[i] && X[i-t])\n                suitable = 1;\n        }\n        if (suitable == 1)\n            resp++;\n    }\n    printf(\"%d\\n\", resp);\n    return 0;\n}\n"}
{"similarity_score": 0.07761194029850746, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "b26b2fdefc532f9b1422cec80b2297e0", "bug_code_uid": "5f33109e3fcd91ec48f36e862248f7fe", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "c0e32552f51d4ea1b6940884c5fe4510", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\t__int64 a[110],b[110],c[110], sum1=0,sum2=0,sum3=0;\n\tint i,n;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tsum1+=a[i];\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tscanf(\"%I64d\",&b[i]);\n\t\tsum2+=b[i];\n\t}\n\tfor(i=0;i<n-2;i++)\n\t{\n\t\tscanf(\"%I64d\",&c[i]);\n\t\tsum3+=c[i];\n\t}\n\tprintf(\"%I64d\\n%I64d\",sum1-sum2,sum2-sum3);\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n \nint main(){\n\tint i,n,m,sum1,sum2,sum3;\n\tscanf(\"%d\",&n);\n\tsum1=sum2=sum3=0;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&m);\n\t\tsum1+=m;\n\t}\n\tfor(i=0;i<(n-1);i++){\n\t\tscanf(\"%d\",&m);\n\t\tsum2+=m;\n\t}\n\tfor(i=0;i<(n-2);i++){\n\t\tscanf(\"%d\",&m);\n\t\tsum3+=m;\n\t}\n\tprintf(\"%d\\n%d\\n\",sum1-sum2,sum2-sum3);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6973886328725039, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c0e6855d0223dfc3e6feb60c99a854c3", "bug_code_uid": "cd11556c634364eb9a438bc537576e84", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "04eb5e9320cc0ce786f7392212cbe6de", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,d;\n    int i,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lli%lli%lli%lli\",&a,&b,&c,&d);\n        if(b>=a)\n        {\n            printf(\"%lli\\n\",b);\n        }\n        else\n        {\n            if(c<=d)\n            {\n                printf(\"-1\\n\");\n            }\n            else\n            {\n                a=a-b;\n                while(a>0)\n                {\n                    b=b+c;\n                    a=a-(c-d);\n                }\n                printf(\"%lli\\n\",b);\n            }\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int a,b,c,d,k;\n    int i,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lli%lli%lli%lli\",&a,&b,&c,&d);\n        if(b>=a)\n        {\n            printf(\"%lli\\n\",b);\n        }\n        else\n        {\n            if(c<=d)\n            {\n                printf(\"-1\\n\");\n            }\n            else\n            {\n                if((a-b)%(c-d)==0)\n                {\n                     k=(a-b)/(c-d);\n                    printf(\"%lli\\n\",(k*c)+b);\n                }\n                else\n                {\n                    k=(a-b)/(c-d);\n                    k=k+1;\n                    printf(\"%lli\\n\",(k*c)+b);\n                }\n            }\n        }\n    }\n}\n"}
{"similarity_score": 0.9219143576826196, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "349ae552e48d04b4c4045929e99d281f", "bug_code_uid": "c34696abef656629c6fb8a78ea3b40ad", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "6fd92f76882655da4bea8c534737b3eb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint T,*n;\nscanf(\"%d\",&T);\nn=(int*)malloc(T*sizeof(int));\nfor(i=0;i<T;i++){\nscanf(\"%d\",(n+i));}\nfor(i=0;i<T;i++)\nprintf(\"\\n%d\",((*(n+i)/2)+(*(n+i)%2)));\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\nint T,*n,i;\nscanf(\"%d\",&T);\nn=(int*)malloc(T*sizeof(int));\nfor(i=0;i<T;i++){\nscanf(\"%d\",(n+i));}\nfor(i=0;i<T;i++)\nprintf(\"\\n%d\",((*(n+i)/2)+(*(n+i)%2)));\nreturn 0;\n}"}
{"similarity_score": 0.9940711462450593, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e555b6c51e44d2cc932ae1d3e78d99c4", "bug_code_uid": "e7bcd80d02827a33f556f3f2f5c2cdbc", "src_uid": "7324428d9e6d808f55ad4f3217046455", "apr_id": "5e80a5a4ad3265eaf98c8543984f0d67", "difficulty": 1400, "tags": ["binary search", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n ,k;\n    scanf(\"%i %i\", &n,&k);\n    int z[100000] ={0};\n    int sum[50001] ={0};\n    for (int i =0;i<n;i++)\n        scanf(\"%i\",&z[i]);\n    int min =0;\n    if (k == n/2)\n    {\n        min = z[0] + z[n-1];\n    }\n    else\n    {\n        min = z[n-1];\n        n = n-k+1;\n    }\n     for (int i =0;i<n;i++)\n    {\n            sum [i]= z[i] + z[n-i-1];\n            if (sum[i] > min)\n            {\n                min = sum[i];\n            }\n    }\n    printf(\"%i\", min);\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n ,k;\n    scanf(\"%i %i\", &n,&k);\n    int z[100000] ={0};\n    int sum[50001] ={0};\n    for (int i =0;i<n;i++)\n        scanf(\"%i\",&z[i]);\n    int min =0;\n    if (k == n/2)\n    {\n        min = z[0] + z[n-1];\n    }\n    else\n    {\n        min = z[n-1];\n        n = 2*(n-k);\n    }\n     for (int i =0;i<n;i++)\n    {\n            sum [i]= z[i] + z[n-i-1];\n            if (sum[i] > min)\n            {\n                min = sum[i];\n            }\n    }\n    printf(\"%i\", min);\n}\n"}
{"similarity_score": 0.9882854100106496, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "09eca08ad3424f4a7f6695760e33c5e7", "bug_code_uid": "96d31d3e2d063f85ca92fb3b0d67795d", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "06a53ababc3ac8cb6d4b7df6d1e383d0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,c,count_m=0,count_c=0,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&m,&c);\n        if(m>c)\n        {\n            count_m+=1;\n        }\n        else\n            count_c+=1;\n    }\n    if(count_m<count_c)\n    {\n        printf(\"Chris\");\n    }\n\n    if(count_c==count_m)\n    {\n        printf(\"Friendship is magic!^^\");\n    }\n    if(count_c<count_m)\n    {\n        printf(\"Mishka\");\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,c,count_m=0,count_c=0,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&m,&c);\n        if(m>c)\n        {\n            count_m+=1;\n        }\n        if(c>m)\n            count_c+=1;\n    }\n    if(count_m<count_c)\n    {\n        printf(\"Chris\");\n    }\n\n    if(count_c==count_m)\n    {\n        printf(\"Friendship is magic!^^\");\n    }\n    if(count_c<count_m)\n    {\n        printf(\"Mishka\");\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.12021857923497267, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "30fed7390f3801c4f172825194bee7ad", "bug_code_uid": "bc355b8f7829d819d2a8b9966303624f", "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842", "apr_id": "d7729c7ccd01fe0e34c21d748434605c", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a, b;\n    scanf(\"%d %d\", &a, &b);\n    if (a == b) {\n        printf(0);\n    }\n    else if (a < b) {\n        if((b - a) % 2 == 0) {\n            printf(2);\n        }\n        else {\n            printf(1);\n        }\n    }\n    else if (a > b) {\n        if ((a - b) % 2 == 0) {\n            printf(1);\n        }\n        else {\n            printf(2);\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint x (int a, int b)\n{\n    if ( a == b) {\n        return 0;\n    }\n    int d = abs (a - b);\n    if (a > b) {\n        if (d % 2 == 0) {\n            return 1;\n        }\n        return 2;\n    }\n    else {\n        if (d % 2 == 0) {\n            return 2;\n        }\n        return 1;\n    }\n}\nint main ()\n{\n    int a, b, t, tc;\n    scanf (\"%d\", &tc);\n    for (t = 0; t < tc; t++) {\n        scanf (\"%d %d\", &a, &b);\n        printf (\"%d\\n\", x (a, b));\n    }\n    return 0;\n}"}
{"similarity_score": 0.9147982062780269, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e4fe03e34d2ab6bb85df43c03e217c79", "bug_code_uid": "2ff9b3996057a9a69b3dc28ccfaef2ff", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "6df35a233bb878d8ac77e2335aa55177", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    long long int t, n, ans = 0, p2 = 1, sum = 0;\n    scanf(\"%I64d\", &t);\n    while(t--){\n        scanf(\"%I64d\", &n);\n        ans = n*(n + 1)/2;\n        while(p2 <= n){\n            sum += p2;\n            p2 = 2 * p2;\n        }\n        printf(\"%I64d\\n\", ans - 2 * sum);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    long long int t, n, ans = 0, sum, p2;\n    scanf(\"%I64d\", &t);\n    while(t--){\n        p2 = 1;\n        sum = 0;\n        scanf(\"%I64d\", &n);\n        ans = n*(n + 1)/2;\n        while(p2 <= n){\n            sum += p2;\n            p2 = 2 * p2;\n        }\n        printf(\"%I64d\\n\", ans - (2 * sum));\n    }\n    return 0;\n}"}
{"similarity_score": 0.5252525252525253, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "5bc1d6764e606498cd261e1f8b20c54f", "bug_code_uid": "3a49879f97a799b07887788548658bc1", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "4960442bc70dcb9b558340fe6ebf8d76", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,t,i,j;\n\tscanf(\"%d %d\",&n,&t);\n\tint a[n+1],c,max=0;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tc=0;\n\t\tfor(j=i;j<=n;j++)\n\t\t{\n\t\t\tc=c+a[j];\n\t\t\tif(c>t)\n\t\t\t\tbreak;\n\t\t}\n\t\tc=j-i;\n\t\tif(c>max)\n\t\t\tmax=c;\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,t,i,j;\n\tscanf(\"%d %d\",&n,&t);\n\tint a[n+1],c=0,max=0;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=1,j=1;i<=n && j<=n;i++)\n\t{\n\t\tfor(;j<=n;j++)\n\t\t{\n\t\t\tif(c+a[j]>t)\n\t\t\t\tbreak;\n\t\t\tc=c+a[j];\n\t\t}\n\t\tif(max<j-i)\n\t\t\tmax=j-i;\n\t\tc=c-a[i];\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9975786924939467, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9318e1cbe19f5c50e5b7344f1c1a5bba", "bug_code_uid": "c0a68d3e6e899438c49e61585a48a40f", "src_uid": "bb7bace930d5c5f231bfc2061576ec45", "apr_id": "cc5562ac5562dcbd85367eca40c3d272", "difficulty": 1100, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    if(n>1)\n    {\n        printf(\"Yes\\n\");\n        printf(\"%d \",n/2);\n        for(int i=2;i<=n;i+=2)\n            printf(\"%d \",i);\n        int l=n/2;\n        if(n%2!=0)\n            l+=1;\n        printf(\"\\n%d \",l);\n        for(int i=1;i<=n;i+=2)\n            printf(\"%d \",i);\n        printf(\"\\n\");\n    }\n    else\n        printf(\"No\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    if(n>2)\n    {\n        printf(\"Yes\\n\");\n        printf(\"%d \",n/2);\n        for(int i=2;i<=n;i+=2)\n            printf(\"%d \",i);\n        int l=n/2;\n        if(n%2!=0)\n            l+=1;\n        printf(\"\\n%d \",l);\n        for(int i=1;i<=n;i+=2)\n            printf(\"%d \",i);\n        printf(\"\\n\");\n    }\n    else\n        printf(\"No\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.3225331369661267, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "25e374763dcc79187a535cd006a9d303", "bug_code_uid": "2461f7cd00036210d14887a3af120e63", "src_uid": "3696b769bfd32cba34e739b74e13693f", "apr_id": "b6ac4d6633b26582d18776018a423683", "difficulty": 1600, "tags": ["dp", "implementation", "divide and conquer", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint N,n;\n#define max 200000\nint o[max][max],e[max][max],c[max][max];\n\nint main(int argc, char const *argv[])\n{\n\tif(scanf(\"%d\",&N)!=EOF){};\n\tfor (int i=0;i<N;i++){\n\t\tif(scanf(\"%d\",&n)!=EOF){};\n\t\tfor (int j=0;j<n;j++){\n\t\t\tif (j%2){\n\t\t\t\tif (scanf(\"%d\",&o[j][j]));\n\t\t\t\te[j][j]=0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (scanf(\"%d\",&o[j][j]));\n\t\t\t\te[j][j]=0;\n\t\t\t}\n\n\t\t\t}\n\t\t\n\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint N,n;\n#define max 200000\nlong long int a[max],b[max];\nlong long int s,e,k,l,sum,odd,even,maxsum;\nint main(int argc, char const *argv[])\n{\n\tif(scanf(\"%d\",&N)!=EOF);\n\tfor (int i=0;i<N;i++){\n\t\todd=even=s=e=k=l=sum=maxsum=0;\n\t\tif(scanf(\"%d\",&n)!=EOF){};\n\t\tfor (int j=0;j<n;j++){\n\t\t\tif(scanf(\"%lld\",&a[j])!=EOF);\n\t\t\t}\n\t\tfor (int j=0;j<n-1;j+=2){\n\t\t\teven+=a[j];\n\t\t\todd+=a[j+1];\n\t\t\tsum=odd-even;\n\t\t\tif (sum>maxsum){\n\t\t\t\tmaxsum=sum;\n\t\t\t\te=j+1;\n\t\t\t\ts=k;\n\t\t\t}\n\t\t\telse if (sum<0){\n\t\t\t\tk=j+2;\n\t\t\t\teven=odd=sum=0;\n\t\t\t}\n\t\t}\n\t\teven=odd=sum=0;\n\t\tk=l=1;\n\t\tfor (int j=1;j<n-1;j+=2){\n\t\t\todd+=a[j];\n\t\t\teven+=a[j+1];\n\t\t\tsum=odd-even;\n\t\t\tif (sum>maxsum){\n\t\t\t\tmaxsum=sum;\n\t\t\t\te=j+1;\n\t\t\t\ts=k;\n\t\t\t}\n\t\t\telse if (sum<0){\n\t\t\t\tk=j+2;\n\t\t\t\teven=odd=sum=0;\n\t\t\t}\n\t\t}\n\tsum=0;\n\t\n\tfor (int j=0;j<n;j++){\n\t\tif (j==s && e!=0){\n\t\t\tj=e+1;\n\t\t}\n\t\tif (j<n && j%2==0){\n\t\t\tsum+=a[j];\n\t\t}\n\n\t}\n\tfor (int j=s;j<e+1;j++){\n\t\tif (j%2==1){\n\t\t\tsum+=a[j];\n\t\t}\n\t}\n\t\n\tprintf(\"%lld\\n\",sum );\t\t\n\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9792, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "53ba642349f16a2c7edbe3cedddbfd05", "bug_code_uid": "e28c3f34fa65b581eead09624416990e", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "bafc7993fe74c50a0ad1245ffeae3b97", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\\n\",&n);\n    int t,x;\n    while(n--){\n        scanf(\"%d %d\\n\",&t,&x);\n        if(t<3){\n            printf(\"%d\\n\",1);\n            break;\n        }\n        if((t-2)%x!=0){printf(\"%d\\n\",(t-2)/x+2);}\n        else{printf(\"%d\\n\",(t-2)/x+1);}\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\\n\",&n);\n    int t,x;\n    while(n--){\n        scanf(\"%d %d\\n\",&t,&x);\n        if(t<3){\n            printf(\"%d\\n\",1);\n            continue;\n        }\n        if((t-2)%x!=0){printf(\"%d\\n\",(t-2)/x+2);}\n        else{printf(\"%d\\n\",(t-2)/x+1);}\n    }\n    return 0;\n}"}
{"similarity_score": 0.9287833827893175, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "1715545c385d28f388118679d4937c23", "bug_code_uid": "cefae9be73fbff9854c7ea3d71ed1cc6", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "f6079a041cdb381d69261ba2f1c5eaa0", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint a[100100];\nint z[100100];\nvoid merge(int i,int j);\nint main(){\n    int i,r,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",a+i);\n    }\n    merge(0,n-1);\n    r=1;\n    z[0]=a[0];\n    for(i=r=1;i<n;i++){\n        if(z[r-1]<=a[i]){\n            z[r]=a[i]+z[r-1];\n            r++;\n        }\n    }\n    printf(\"%d\",r);\n}\nvoid merge(int i,int j){\n    int x,y,z,m;\n    if(j-i>1){\n        int l[j-i];\n        m=(i+j)/2;\n        merge(i,m);\n        merge(m+1,j);\n        x=i;\n        y=m+1;\n        for(z=0;z<(j-i);z++){\n            if(x>m){\n                l[z]=a[y];\n            }else if(y>j){\n                l[z]=a[x];\n            }else if(a[x]<a[y]){\n                l[z]=a[x++];\n            }else{\n                l[z]=a[y++];\n            }\n        }\n        x=i;\n        for(z=0;z<(j-i);z++,x++){\n            a[x]=l[z];\n        }\n    }else if(j-i){\n        if(a[i]>a[j]){\n            m=a[i];\n            a[i]=a[j];\n            a[j]=m;\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint a[100100];\nint z[100100];\nvoid merge(int i,int j);\nint main(){\n    int i,r,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",a+i);\n    }\n    merge(0,n-1);\n    r=1;\n    z[0]=a[0];\n    for(i=1;i<n;i++){\n        if(z[r-1]<=a[i]){\n            z[r]=a[i]+z[r-1];\n            r++;\n        }\n    }\n    printf(\"%d\",r);\n    return 0;\n}\nvoid merge(int i,int j){\n    int x,y,z,m;\n    if(j-i>1){\n        int l[j-i];\n        m=(i+j)/2;\n        merge(i,m);\n        merge(m+1,j);\n        x=i;\n        y=m+1;\n        for(z=0;z<(j-i+1);z++){\n            if(x>m){\n                l[z]=a[y++];\n            }else if(y>j){\n                l[z]=a[x++];\n            }else if(a[x]<a[y]){\n                l[z]=a[x++];\n            }else{\n                l[z]=a[y++];\n            }\n        }\n        x=i;\n        for(z=0;x<=j;z++,x++){\n            a[x]=l[z];\n        }\n    }else if(j-i){\n        if(a[i]>a[j]){\n            m=a[i];\n            a[i]=a[j];\n            a[j]=m;\n        }\n    }\n}"}
{"similarity_score": 0.6469893742621016, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "950d6d9b909c49fa5ddf47a5ae7dc394", "bug_code_uid": "f8a51a3fd48f6834f1ea4d9910ab6944", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "78ed33382dd1bb346098d740cbc5c09a", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int cases,i,num,j;\n    scanf(\"%d\",&cases);\n    for(i=0;i<cases;i++)\n    {\n        scanf(\"%d\",&num);\n        if(num==3)\n        printf(\"4\\n\");\n        else\n        {\n            num=num/2;\n            for(j=0;j<num;j++)\n            printf(\"1\");\n            printf(\"\\n\");\n        }\n        \n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int cases,i,num,j,rem;\n    scanf(\"%d\",&cases);\n    for(i=0;i<cases;i++)\n    {\n        scanf(\"%d\",&num);\n            rem=num%2;\n            num=num/2;\n            if(rem==0)\n            {\n                for(j=0;j<num;j++)\n                printf(\"1\");\n                printf(\"\\n\");\n            }\n            else\n            {\n                printf(\"7\");\n                for(j=0;j<num-1;j++)\n                printf(\"1\");\n                printf(\"\\n\");\n            }\n        \n    }\n}"}
{"similarity_score": 0.5657686212361331, "equal_cnt": 25, "replace_cnt": 6, "delete_cnt": 7, "insert_cnt": 12, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "fc0bf38595fd3a7e295c7f1f554c4f4d", "bug_code_uid": "3c143cc2ce143c7813864c53b7078240", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "efb22a017ad255443d9625b1ad90c988", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid main()\r\n{\r\n     int t;\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n          int n,ans=0;\r\n          scanf(\"%d\",&n);\r\n          int a[n];\r\n          for(int i=1;i<=n;i++)\r\n          {\r\n               scanf(\"%d\",&a[i]);\r\n              \r\n          }\r\n         for(int i=1;i<=n;i++){\r\n         for(int j=1;j<=n;j++){\r\n              if(a[i]!=a[j]){\r\n               ans=i;\r\n              break;\r\n         }\r\n          \r\n     }\r\n     if(ans!=0)\r\n     break;\r\n         }\r\n     printf(\"%d\\n\",ans);\r\n}\r\n}", "fixed": "#include<stdio.h>\r\nvoid main(){\r\n            int t;\r\n            scanf(\"%d\",&t);\r\n            while(t--){\r\n                        int n,i,j,c;\r\n                        scanf(\"%d\",&n);\r\n                        int a[n];\r\n                        for(i=1;i<=n;i++){\r\n                                    scanf(\"%d\",&a[i]);\r\n                        }\r\n                         for(i=1;i<=n;i++){\r\n                                     c=0;\r\n                                    for(j=1;j<=n;j++) \r\n                                    if(a[i]==a[j] && i!=j)\r\n                                    c++;\r\n                                    if(c==0)\r\n                                    printf(\"%d\\n\",i);\r\n                         }\r\n            }\r\n}"}
{"similarity_score": 0.27769110764430577, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "98dcf98338eef527ad9e5045becfefc3", "bug_code_uid": "b527a6ab61f7bfa38744f92504aa6e8f", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "32a37e9713728cca9d40a408218baaea", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[4],cal=0;\n    scanf(\"%d %d %d %d\",a[0],a[1],a[2],a[3]);\n    char s[100000];\n    scanf(\"%s\",s);\n    for(int i=0;i<strlen();i++)\n    {\n        cal+=a[s[i]-49];\n    }\n    printf(\"%d\",cal);\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[4],cal=0;\n    for(int i=0;i<4;i++)\n     scanf(\"%d\",&a[i]);\n    char s[100000];\n    scanf(\"%s\",s);\n    for(int i=0;i<strlen(s);i++)\n    {\n        if(s[i]=='1')\n         cal+=a[0];\n        if(s[i]=='2')\n         cal+=a[1];\n        if(s[i]=='3')\n         cal+=a[2];\n        if(s[i]=='4')\n         cal+=a[3];\n    }\n    printf(\"%d\",cal);\n}"}
{"similarity_score": 0.9978401727861771, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c56b6c133c96a843369b8f7284121d62", "bug_code_uid": "66e7201e98a228bdef03ed31429f92d2", "src_uid": "c569b47cf80dfa98a7105e246c3c1e01", "apr_id": "4117f10faab7259c8d61713fbfcc0127", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main(){\r\n    int n;\r\n    char ar[50][50],a;\r\n    scanf(\"%d\",&n);\r\n    for (int i=0;i<n;i++){\r\n        scanf(\"%s\\n\",ar[i]);\r\n        scanf(\"%c\",&a);\r\n        for(int j=0;j<strlen(ar[i]);j+=2){\r\n            if(ar[i][j]==a){\r\n                printf(\"YES\\n\");\r\n                break;\r\n            }else if(j==strlen(ar[i])-1){\r\n                printf(\"NO\\n\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main(){\r\n    int n;\r\n    char ar[5000][50],a;\r\n    scanf(\"%d\",&n);\r\n    for (int i=0;i<n;i++){\r\n        scanf(\"%s\\n\",ar[i]);\r\n        scanf(\"%c\",&a);\r\n        for(int j=0;j<strlen(ar[i]);j+=2){\r\n            if(ar[i][j]==a){\r\n                printf(\"YES\\n\");\r\n                break;\r\n            }else if(j==strlen(ar[i])-1){\r\n                printf(\"NO\\n\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9939024390243902, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bd305c9ab6598ca14f25ef9f55b14b73", "bug_code_uid": "b6371a15f04dbe180e1212d03bbfb667", "src_uid": "0c5cf0af057b0c838f13b491b923447a", "apr_id": "24bdc8c28155db3c451de507af613076", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n\tint i,moka;\r\n\tscanf(\"%d\",&moka);\r\n\tfor(i=0;i<moka;i++){\r\n\t\tint m;\r\n\t\tscanf(\"%d\",&m);\r\n\t\tprintf(\"%d\\n\",(i+1)/2);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n\tint i,moka;\r\n\tscanf(\"%d\",&moka);\r\n\tfor(i=0;i<moka;i++){\r\n\t\tint m;\r\n\t\tscanf(\"%d\",&m);\r\n\t\tprintf(\"%d\\n\",(m+1)/2);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.355893536121673, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "0a5c1ffab299cacf03f5532134409c31", "bug_code_uid": "859a4556828234b8ef8f133969ccd2cf", "src_uid": "ff0843cbd7c3a07c7d7d0be46b03a700", "apr_id": "befac04ddf1e98dd285fdce786ad8412", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint array[400001];\nmain()\n{\n    int n,i,j,k,l,flag=-1,count=0;\n    char st[200000];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",st);\n    for(i=0;i<n;i++) scanf(\"%d\",&array[i*2]);\n    for(i=0;i<n;i++)\n    {\n        if(st[i]=='L') array[i*2+1] = -1;\n        else array[i*2+1]=1;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(flag==-1)\n        {\n            if(array[i*2+1]==1) flag=0;\n        }\n        if(flag==0)\n        {\n            if(array[i*2+1]==-1) flag =1;\n        }\n        if(flag==1) break;\n    }\n    if(flag==1)\n    {\n        while(1){\n       for(i=0;i<n;i++)\n       {\n           array[i*2]+=array[i*2+1];\n       }\n       count++;\n       for(i=0;i<n-1;i++)\n       {\n           if(array[i*2]==array[i*2+2])\n           {\n              flag=2;\n              break;\n           }\n       }\n       if(flag==2) break;\n        }\n        printf(\"%d\\n\",count);\n    }\n    else printf(\"-1\\n\");\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint array[400001];\nmain()\n{\n    int n,i,b=-1,flag=-1,count=0;\n    char st[200000];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",st);\n    for(i=0;i<n;i++) scanf(\"%d\",&array[i]);\n    for(i=0;i<n;i++)\n    {\n        if(st[i]=='R' && st[i+1]=='L')\n        {\n            if((b==-1)||((array[i+1]-array[i])/2)<b) b=(array[i+1]-array[i])/2;\n\n        }\n\n    }\n    printf(\"%d\\n\",b);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9698558322411533, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a1af97cbf4d12f357aff9cabedd874e5", "bug_code_uid": "85b6efca3f1564049dc45912704f8ea2", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "9764603cf0e8b6453bf940eb8f0a56cf", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid main()\n{\n     int number_friends,h_of_wall,h_of_person;\n     int counter=0;\n    scanf(\"%d %d\",&number_friends,&h_of_wall);\n\n    for(int i=0;i<number_friends;i++)\n    {\n        scanf(\"%d\",&h_of_person);\n        if(h_of_person<h_of_wall)\n            counter++;\n        else\n            counter+=2;\n    }\n    printf(\"%d\",counter);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n     int number_friends,h_of_wall,h_of_person;\n     int counter=0;\n    scanf(\"%d %d\",&number_friends,&h_of_wall);\n\n    for(int i=0;i<number_friends;i++)\n    {\n        scanf(\"%d\",&h_of_person);\n        if(h_of_person<=h_of_wall)\n            counter++;\n        else\n            counter+=2;\n    }\n    printf(\"%d\",counter);\n    return 0;\n}\n"}
{"similarity_score": 0.8122699386503067, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f50695f2973b6e2b386192e35f089b1d", "bug_code_uid": "f463e267808b1fadb70bb49ea8baddfd", "src_uid": "5babbb7c5f6b494992ffa921c8e19294", "apr_id": "c137c977f793a183d0168cecbae38764", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int n,d,i,count=0;\n    scanf(\"%lld %lld\",&n,&d);\n    long long int arr[n];\n    for(i=0;i<n;i++)\n    scanf(\"%lld\",arr+i);\n    for(i=0;i<n-1;i++)\n    {\n        if(arr[i]+d==arr[i+1]-d)\n        count++;\n        else if(arr[i]+d<arr[i+1]-d)\n        count+=2;\n    }\n    if(arr[0]-d>=-pow(10,9))\n    count++;\n    if(arr[n-1]+d<=pow(10,9))\n    count++;\n    printf(\"%lld\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int n,d,i,count=0;\n    scanf(\"%lld %lld\",&n,&d);\n    long long int arr[n];\n    for(i=0;i<n;i++)\n    scanf(\"%lld\",arr+i);\n    for(i=0;i<n-1;i++)\n    {\n        if(arr[i]+d==arr[i+1]-d)\n        count++;\n        else if(arr[i]+d<arr[i+1]-d)\n        count+=2;\n    }\n    printf(\"%lld\",count+2);\n    return 0;\n}"}
{"similarity_score": 0.9968102073365231, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "a632dca90eef62150058c6afbd426045", "bug_code_uid": "e39889a02009633c799f4fcdf16567dd", "src_uid": "822e8f394a59329fa05c96d7fb35797e", "apr_id": "31d2524aa76152aa136e606c1bb5bd0a", "difficulty": 1100, "tags": ["number theory", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b)\n{\n  return ( *(double*)a-*(double*)b);\n}\nint main()\n{\n  int i;\n  double n,n1,n2,a[200002],sum1=0,sum2=0;\n  double ans,avg1,avg2;\n  scanf(\"%lf %lf %lf\",&n,&n1,&n2);\n  for(i=0;i<n;i++)\n    scanf(\"%lf\",&a[i]);\n  qsort(a,n,sizeof(double),cmp);\n  if(n1>n2)\n    {\n      for(i=n-n2;i<n;i++)\n\tsum1+=a[i];\n      for(i=n-n1-n2;i<n-n2;i++)\n\tsum2+=a[i];\n      printf(\"%lf\\n\",(sum1/n2)+(sum2/n1));\n    }\n    else\n    {\n      for(i=n-n1;i<n;i++)\n\tsum1+=a[i];\n      for(i=n-n1-n2;i<n-n1;i++)\n\tsum2+=a[i];\n      printf(\"%lf\\n\",(sum1/n2)+(sum2/n1));\n    }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b)\n{\n  return ( *(double*)a-*(double*)b);\n}\nint main()\n{\n  int i;\n  double n,n1,n2,a[200002],sum1=0,sum2=0;\n  double ans,avg1,avg2;\n  scanf(\"%lf %lf %lf\",&n,&n1,&n2);\n  for(i=0;i<n;i++)\n    scanf(\"%lf\",&a[i]);\n  qsort(a,n,sizeof(double),cmp);\n  if(n1>n2)\n    {\n      for(i=n-n2;i<n;i++)\n\tsum1+=a[i];\n      for(i=n-n1-n2;i<n-n2;i++)\n\tsum2+=a[i];\n      printf(\"%lf\\n\",(sum1/n2)+(sum2/n1));\n    }\n    else\n    {\n      for(i=n-n1;i<n;i++)\n\tsum1+=a[i];\n      for(i=n-n1-n2;i<n-n1;i++)\n\tsum2+=a[i];\n      printf(\"%lf\\n\",(sum1/n1)+(sum2/n2));\n    }\n  return 0;\n}\n"}
{"similarity_score": 0.9992673992673993, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "090c6ae66842a24c6776687e2fec4727", "bug_code_uid": "8c3ba419e73a9e369de8cb68a6845d36", "src_uid": "1f4c057dff45f229b4dca49cd4e0438d", "apr_id": "fc0b26c9ec94d4dfb68e850e402893c9", "difficulty": 1000, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid shell_sort(int array[], int size){\n\tint step, i, j, temp;\n\tfor (step = size / 2; step > 0; step /= 2) {      \n\t\tfor (i =step ; i < size; i++) {     \n            for (j = 0; j < i; j++) {                \n\t\t\t\tif (array[j] > array[i]) {           \n\t\t\t\t\ttemp = array[j];\n\t\t\t\t\tarray[j] = array[i];\n\t\t\t\t\tarray[i] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(void){\n    int n;\n    scanf(\"%d\",&n);\n    int number[2*n];\n\n    for(int i=0; i<(2*n); i++)\n        scanf(\"%d\",&number[i]);\n\n    shell_sort(number, 2*n);\n\n    if(number[0]==number[(2*n)-1]){\n        printf(\"%d\",-1);\n        return 0;\n    }\n    for(int i=0; i<(2*n); i++){\n        printf(\"%d\",number[i]);\n    }\n\n\n}\n", "fixed": "#include <stdio.h>\nvoid shell_sort(int array[], int size){\n\tint step, i, j, temp;\n\tfor (step = size / 2; step > 0; step /= 2) {      \n\t\tfor (i =step ; i < size; i++) {     \n            for (j = 0; j < i; j++) {                \n\t\t\t\tif (array[j] > array[i]) {           \n\t\t\t\t\ttemp = array[j];\n\t\t\t\t\tarray[j] = array[i];\n\t\t\t\t\tarray[i] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(void){\n    int n;\n    scanf(\"%d\",&n);\n    int number[2*n];\n\n    for(int i=0; i<(2*n); i++)\n        scanf(\"%d\",&number[i]);\n\n    shell_sort(number, 2*n);\n\n    if(number[0]==number[(2*n)-1]){\n        printf(\"%d\",-1);\n        return 0;\n    }\n    for(int i=0; i<(2*n); i++){\n        printf(\"%d \",number[i]);\n    }\n\n\n}\n"}
{"similarity_score": 0.8841245533435427, "equal_cnt": 18, "replace_cnt": 14, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "bbda105e2bbed83b89467102fba69e14", "bug_code_uid": "8c920cedd86b36e9494792d5d6ac6103", "src_uid": "f1d3032f1cb07ad6187a37c84376510d", "apr_id": "23fc1eaaab93bbbe3f467aee1acef40d", "difficulty": 800, "tags": ["brute force", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int arr[2*n];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        int x,y;\r\n        scanf(\"%d %d\",&x,&y);\r\n        double a,b,c,d;\r\n        a=(3*x + y)/2.0;\r\n        b=(y-x)/2.0;\r\n        c=(x-y)/2.0;\r\n        d=(3*y + x)/2.0;\r\n        if((x+y)%2==0)\r\n        {\r\n            arr[2*i]=1;\r\n            arr[2*i +1]=((x+y)/2)-1;\r\n        }\r\n        else if(x+y==0)\r\n        {\r\n            arr[2*i]=0;\r\n            arr[2*i +1]=0;\r\n        }\r\n        else if((y-x)%2==0 && x>=0)\r\n        {\r\n            arr[2*i]=x;\r\n            arr[2*i +1]=(y-x)/2;\r\n        }\r\n        else if((x-y)%2==0 && y>=0)\r\n        {\r\n            arr[2*i]=(x-y)/2;\r\n            arr[2*i +1]=y;\r\n        }\r\n        else\r\n        {\r\n            arr[2*i]=-1;\r\n            arr[2*i +1]=-1;\r\n        }\r\n    }\r\n    for(int j=0;j<n;j++)\r\n    {\r\n        printf(\"%d %d\\n\",arr[2*j],arr[2*j +1]);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int arr[2*n];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        int x,y;\r\n        scanf(\"%d %d\",&x,&y);\r\n        double a,b,c,d;\r\n        a=(3*x + y)/2.0;\r\n        b=(y-x)/2.0;\r\n        c=(x-y)/2.0;\r\n        d=(3*y + x)/2.0;\r\n        if(x+y==0)\r\n        {\r\n            arr[2*i]=0;\r\n            arr[2*i +1]=0;\r\n        }\r\n        else if((y-x)%2==0 && x>=0 && (y-x)>=0)\r\n        {\r\n            arr[2*i]=x;\r\n            arr[2*i +1]=(y-x)/2;\r\n        }\r\n        else if((x-y)%2==0 && y>=0 && x-y>=0)\r\n        {\r\n            arr[2*i]=(x-y)/2;\r\n            arr[2*i +1]=y;\r\n        }\r\n        else if((x+y)%2==0 &&(x+y)>=2)\r\n        {\r\n            arr[2*i]=1;\r\n            arr[2*i +1]=((x+y)/2)-1;\r\n        }\r\n        else\r\n        {\r\n            arr[2*i]=-1;\r\n            arr[2*i +1]=-1;\r\n        }\r\n    }\r\n    for(int j=0;j<n;j++)\r\n    {\r\n        printf(\"%d %d\\n\",arr[2*j],arr[2*j +1]);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.4260515603799186, "equal_cnt": 15, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "1054ed498100e132f712508dfbeca7b1", "bug_code_uid": "0a35e100b618520709c0cd499da015a6", "src_uid": "d3684227d1f12cf36dc302e1ffee8370", "apr_id": "ef9deea14a1362dc0e48ad4ed2178e35", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\nint main(int argc, char const *argv[])\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tint fi=0,sd=0,cf=0,cs=0;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif (a[i]>0)\n\t\t{\n\t\t\tfi=fi+a[i];\n\t\t\tcf++;\n\t\t}\n\t\telse if (a[i]<0)\n\t\t{\n\t\t\tsd=sd+a[i]*(-1);\n\t\t\tcs++;\n\t\t}\n\t}\n\tif (fi!=sd)\n\t{\n\t\tif (fi>sd)\n\t\t{\n\t\t\tprintf(\"first\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"second\\n\");\n\t\t}\n\t}\n\telse{\n\t\t// if (cf!=cs)\n\t // \t{\n\t\t// \tif (cf>cs)\n\t\t// \t{\n\t\t// \t\tprintf(\"first\\n\");\n\t\t// \t}\n\t\t// \telse{\n\t\t// \t\tprintf(\"second\\n\");\n\t\t// \t}\n\t\t// }\n\t\tif (a[n-1]>0)\n\t\t{\n\t\t\tprintf(\"first\\n\");\n\t\t}\n\t\telse if (a[n-1]<0)\n\t\t{\n\t\t\tprintf(\"second\\n\");\t\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}", "fixed": "#include \"stdio.h\"\n#include \"limits.h\"\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tint b[200001];\n\tint c[200001];\n\tint cf=0,cs=0;\n\tlong long fi=0,sd=0;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif (a[i]>0)\n\t\t{\n\t\t\tfi=fi+a[i];\n\t\t\tb[cf++]=a[i];\n\t\t}\n\t\telse if (a[i]<0)\n\t\t{\n\t\t\tsd=sd+a[i]*(-1);\n\t\t\tc[cs++]=(-1)*a[i];\n\t\t}\n\t}\n\tif (fi!=sd)\n\t{\n\t\tif (fi>sd)\n\t\t{\n\t\t\tprintf(\"first\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"second\\n\");\n\t\t}\n\t}\n\telse{\n\t\tint i=0,j=0;\n\t\twhile(i<cf&&j<cs){\n\t\t\tif (b[i]==c[j])\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (b[i]>c[j])\n\t\t\t\t{\n\t\t\t\t\tprintf(\"first\\n\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tprintf(\"second\\n\");\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tif (cf>cs)\n\t\t{\n\t\t\tprintf(\"first\\n\");\n\t\t}\n\t\tif (cs>cf)\n\t\t{\n\t\t\tprintf(\"second\\n\");\n\t\t}\n\t\tif (a[n-1]>0)\n\t\t{\n\t\t\tprintf(\"first\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"second\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9986320109439124, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7f9d1419f5c33e62cb746dec67e26ae9", "bug_code_uid": "b22e63f93da33ae6c20bc9eaa6afbe39", "src_uid": "a457e22fc8ff882c15ac57bca6960657", "apr_id": "ff0da166d7ff5a3d4ea58fda2fc25571", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\n\nint main()\n{\n    int i,j,k,m,n,t=0,l;\n    char s[1000];\n    gets(s);\n    l=strlen(s);\n    for(i=0; i<=l-5; i++)\n    {\n        if(s[i]=='h')\n        {\n            break;\n        }\n    }\n    for(j=i+1; i<=l-4; j++)\n    {\n        if(s[j]=='e')\n        {\n            break;\n        }\n    }\n    for(k=j+1; k<=l-3; k++)\n    {\n        if(s[k]=='i')\n        {\n            break;\n        }\n    }\n    for(m=k+1; m<=l-2; m++)\n    {\n        if(s[m]=='d')\n        {\n            break;\n        }\n    }\n    for(n=m+1; n<=l-1; n++)\n    {\n        if(s[n]=='i')\n        {\n            t++;\n            break;\n        }\n    }\n    if(t){printf(\"YES\");}\n    else{printf(\"NO\");}\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<conio.h>\n#include<string.h>\n\nint main()\n{\n    int i,j,k,m,n,t=0,l;\n    char s[1000];\n    gets(s);\n    l=strlen(s);\n    for(i=0; i<=l-5; i++)\n    {\n        if(s[i]=='h')\n        {\n            break;\n        }\n    }\n    for(j=i+1; j<=l-4; j++)\n    {\n        if(s[j]=='e')\n        {\n            break;\n        }\n    }\n    for(k=j+1; k<=l-3; k++)\n    {\n        if(s[k]=='i')\n        {\n            break;\n        }\n    }\n    for(m=k+1; m<=l-2; m++)\n    {\n        if(s[m]=='d')\n        {\n            break;\n        }\n    }\n    for(n=m+1; n<=l-1; n++)\n    {\n        if(s[n]=='i')\n        {\n            t++;\n            break;\n        }\n    }\n    if(t){printf(\"YES\");}\n    else{printf(\"NO\");}\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9957805907172996, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2012a649f27a4704890da3787b41f330", "bug_code_uid": "35d6384738462b669746ca3a453e115b", "src_uid": "821d48c9a67d37ad7acc50d4d0d0d723", "apr_id": "71877ed3f143ce08476148004d1bf053", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,a,b,c,d;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n        printf(\"%lld %lld %lld\",b,b,c);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,a,b,c,d;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n        printf(\"%lld %lld %lld\",b,c,c);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9161727349703641, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "43142013d7adfcb1cfe031967133296a", "bug_code_uid": "3d9d1b1aa20efa01cdfe6d2c4bd49e2d", "src_uid": "91cefa6793e77b3e4f4896616a164ff2", "apr_id": "17b9dcac64dac12729bf7c408596250f", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char a[100005];\n    int i, j, count=0, len;\n\n    scanf(\"%s\", a);\n    len=strlen(a);\n\n    for(i=0;i<len;i++)\n    {\n        if(a[i]=='1')\n            count++;\n    }\n    //printf(\"count %d\\n\", count);\n\n    for(i=0;i<len;i++)\n    {\n        if(a[i]=='0')\n        {\n            printf(\"0\");\n        }\n        else if(a[i]=='2')\n        {\n            for(j=0;j<count;j++)\n            {\n                printf(\"1\");\n            }\n            printf(\"2\");\n        }\n    }\n    for(;j<count;j++)\n    {\n        printf(\"1\");\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char a[100005];\n    int i, j, count=0, len;\n\n    scanf(\"%s\", a);\n    len=strlen(a);\n\n    for(i=0;i<len;i++)\n    {\n        if(a[i]=='1')\n            count++;\n    }\n    //printf(\"count %d\\n\", count);\n\n    for(i=0;i<len;i++)\n    {\n        if(a[i]=='0')\n        {\n            printf(\"0\");\n        }\n        else if(a[i]=='2')\n        {\n            while(count)\n            {\n                printf(\"1\");\n                count--;\n            }\n            printf(\"2\");\n        }\n    }\n    while(count)\n    {\n        printf(\"1\");\n        count--;\n    }\n}\n"}
{"similarity_score": 0.7991360691144709, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e38f36d434f660acf6cb831b270d41d6", "bug_code_uid": "34b1b42323c2191c4d877af37cfc8567", "src_uid": "c36f4bb34543476abc31fe986032122d", "apr_id": "971514db1e16ae37dacdde88f8e79cc7", "difficulty": 1400, "tags": ["dsu", "dfs and similar", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint n, m;\nint* reacted;\nint** relation;\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    int i, j, A, B;\n    long long int danger = 1;\n\n    reacted = (int*)malloc(n * sizeof(int));\n    relation = (int**)malloc(n * sizeof(int**));\n    for(i = 0; i < n; i++) {\n        relation[i] = (int*)malloc(n * sizeof(int));\n        for(j = 0; j < n; j++)\n            relation[i][j] = 0;\n    }\n\n    for(i = 0; i < m; i++) {\n        scanf(\"%d%d\", &A, &B);\n        relation[A - 1][B - 1] = 1;\n        relation[B - 1][A - 1] = 1;\n    }\n\n\n    for(i = 0; i < n; i++)\n        reacted[i] = 0;\n\n    for(i = 0; i < n; i++) {\n        if(reacted[i] == 1)\n            danger *= 2;\n        for(j = 0; j < n; j++) {\n            if(relation[i][j] == 1)\n                reacted[j] = 1;\n        }\n    }\n\n    printf(\"%I64\\n\", danger);\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint n, m;\nint* reacted;\nint** relation;\n\nvoid reacting(int x) {\n    int i;\n    reacted[x] = 1;\n    for(i = 0; i < n; i++) {\n        if(relation[x][i] == 1 && reacted[i] == 0) {\n            reacting(i);\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    int i, j, A, B;\n    long long int danger = 1;\n\n    reacted = (int*)malloc(n * sizeof(int));\n    relation = (int**)malloc(n * sizeof(int**));\n    for(i = 0; i < n; i++) {\n        relation[i] = (int*)malloc(n * sizeof(int));\n        for(j = 0; j < n; j++)\n            relation[i][j] = 0;\n    }\n\n    for(i = 0; i < m; i++) {\n        scanf(\"%d%d\", &A, &B);\n        relation[A - 1][B - 1] = 1;\n        relation[B - 1][A - 1] = 1;\n    }\n\n\n    for(i = 0; i < n; i++) {\n        reacted[i] = 0;\n        danger *= 2;\n    }\n\n    for(i = 0; i < n; i++) {\n        if(reacted[i] == 0) {\n            danger /= 2;\n            reacting(i);\n        }\n    }\n\n    printf(\"%I64d\\n\", danger);\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.9988545246277205, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f452cdab4018876a3e5792bafc692850", "bug_code_uid": "cc2b9f19647b8d94a8ad7d1f024ec5e8", "src_uid": "f9c16d5c72fe139aa91bc1a9e44d4dc2", "apr_id": "31c50c8129954b05b28fd6a327a3cc80", "difficulty": 1700, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint cmp(const void * a,const void *b)\n{\n\tint *c,*d;\n\tc=(int *)a;\n\td=(int *)b;\n\treturn (*d)-(*c);\n}\nint main(void)\n{\n\tint p1[100],p2[100],sum=0,N,pos1=0,pos2=0,count,tmp,swidth=0;\n\tscanf(\"%d\",&N);\n\t\n\tfor(count=0;count < N;count++){\n\t\tscanf(\"%d\",&tmp);\n\t\tif(tmp==1){\n\t\t\tscanf(\"%d\",&p1[pos1]);\n\t\t\tpos1++;\n\t\t\tsum+=1;\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%d\",&p2[pos2]);\n\t\t\tpos2++;\n\t\t\tsum+=2;\n\t\t}\n\t}\n\tqsort(p1,pos1,sizeof(int),cmp);\n\tqsort(p2,pos2,sizeof(int),cmp);\n\tif(pos1!=0)\n\t\tpos1--;\n\tif(pos2!=0)\n\t\tpos2--;\n\twhile(1){\n\t\t\n\t\tif(pos2>=0 && p2[pos2]+swidth <= sum -2 && ((pos1 >= 0&& p2[pos2] <= p1[pos1])\n\t\t||(pos1 >= 1&& p2[pos2] <= p1[pos1]+p1[pos1-1]))){\n\t\t\tswidth+=p2[pos2];\n\t\t\tsum-=2;\n\t\t\tpos2--;\n\t\t}\n\t\telse if(pos1>=0 && p1[pos1]+swidth<=sum){\n\t\t\tswidth+=p1[pos1];\n\t\t\tsum-=1;\n\t\t\tpos1--;\n\t\t}\n\t\telse\n\t\t\tbreak;\n\t\t\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint cmp(const void * a,const void *b)\n{\n\tint *c,*d;\n\tc=(int *)a;\n\td=(int *)b;\n\treturn (*d)-(*c);\n}\nint main(void)\n{\n\tint p1[100],p2[100],sum=0,N,pos1=0,pos2=0,count,tmp,swidth=0;\n\tscanf(\"%d\",&N);\n\t\n\tfor(count=0;count < N;count++){\n\t\tscanf(\"%d\",&tmp);\n\t\tif(tmp==1){\n\t\t\tscanf(\"%d\",&p1[pos1]);\n\t\t\tpos1++;\n\t\t\tsum+=1;\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%d\",&p2[pos2]);\n\t\t\tpos2++;\n\t\t\tsum+=2;\n\t\t}\n\t}\n\tqsort(p1,pos1,sizeof(int),cmp);\n\tqsort(p2,pos2,sizeof(int),cmp);\n\tif(pos1!=0)\n\t\tpos1--;\n\tif(pos2!=0)\n\t\tpos2--;\n\twhile(1){\n\t\t\n\t\tif(pos2>=0 && p2[pos2]+swidth <= sum -2 && ((pos1 >= 0&& p2[pos2] <= p1[pos1])\n\t\t||(pos1 >= 1&& p2[pos2] <= p1[pos1]+p1[pos1-1]))){\n\t\t\tswidth+=p2[pos2];\n\t\t\tsum-=2;\n\t\t\tpos2--;\n\t\t}\n\t\telse if(pos1>=0 && p1[pos1]+swidth<=sum-1){\n\t\t\tswidth+=p1[pos1];\n\t\t\tsum-=1;\n\t\t\tpos1--;\n\t\t}\n\t\telse\n\t\t\tbreak;\n\t\t\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.5369220151828847, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1e07c4255e73758c79d86bf9ba565df5", "bug_code_uid": "b4666125255b3f7d22d07bfe4e17a579", "src_uid": "4f8eac547bbd469a69de2f4aae4a87f0", "apr_id": "41c0a0e9773773e49129668a3904c645", "difficulty": 900, "tags": ["bitmasks", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#define max(a,b) (a>b?a:b)\r\n#define min(a,b) (a>b?b:a)\r\n\r\nint a[105],b[105];\r\nint t,n, max1, min1;\r\nint main()\r\n{\r\n\tregister int i,j;\r\n\tint k1,k2,k3;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    \tmax1=0;\r\n    \tmin1=0x7f7f7f7f;\r\n    \tscanf(\"%d\",&n);\r\n    \tfor(i=1;i<=n;i++)\r\n    \t{\r\n    \t\tscanf(\"%d\",&a[i]);\r\n    \t\tmin1=min(a[i],min1);\r\n    \t}\r\n    \t\r\n    \tfor(i=2;i<=n;i++)\r\n    \t{\r\n    \t\tfor(j=1;j<=n-i+1;j++)\r\n    \t\t{\r\n    \t\t\tfor(k1=1;k1<j;k1++)\r\n    \t\t\t{\r\n    \t\t\t\tmax1=max(max1,a[k1]);\r\n    \t\t\t\t//printf(\"%d \",a[k1]);\r\n    \t\t\t}\r\n    \t\t\tfor(k2=j;k2<=j+i-1;k2++)\r\n    \t\t\t{\r\n    \t\t\t\tmax1=max(max1, a[k2]&a[j+j+i-1-k2]);\r\n    \t\t\t\t//printf(\"a[%d]&a[%d]:%d \",k2,j+j+i-1-k2,a[k2]&a[j+j+i-1-k2]);\r\n    \t\t\t}\r\n    \t\t\tfor(k3=j+i;k3<=n;k3++)\r\n    \t\t\t{\r\n    \t\t\t\tmax1=max(max1, a[k3]);\r\n    \t\t\t\t//printf(\"%d \",a[k3]);\r\n    \t\t\t}\r\n    \t\t\t\tmin1=min(min1,max1);\r\n    \t\t\t//printf(\"\\n\");\r\n    \t\t}\r\n    \t}\r\n    \tprintf(\"%d\\n\",min1);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#define max(a,b) (a>b?a:b)\r\n#define min(a,b) (a>b?b:a)\r\n\r\nint a[105],b[105];\r\nint t,n, max1, min1;\r\nint main()\r\n{\r\n\tregister int i,j;\r\n\tint k1,k2,k3;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n    \tscanf(\"%d\",&n);\r\n    \tfor(i=1;i<=n;i++)\r\n    \t{\r\n    \t\tscanf(\"%d\",&a[i]);\r\n    \t\tmax1=max(max1,a[i]);\r\n    \t}\r\n    \tmin1=a[1];\r\n    \tfor(i=2;i<=n;i++)\r\n    \tmin1=min1&a[i];\r\n    \tprintf(\"%d\\n\",min1);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9866666666666667, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c2066b0a4057cc55c50ed0ae40c57ff2", "bug_code_uid": "acceb0c3d6e87f4489ee68b8fe737f36", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "5d74bb6d7fb184387b6c2ee80f5e873e", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[100000],i,b,w=0,x=0,y=0,z=0,s=0,n,c=0;\n    scanf(\"%d\", &n);\n    for(b=0;b<n;b++)\n    {\n        scanf(\"%d\", &a[b]);\n    }\n    for(b=0;b<n;b++)\n    {\n        if(a[b]%4==0)\n        w++;\n        else if(a[b]%3==0)\n        x++;\n        else if(a[b]%2==0)\n        y++;\n        else\n        z++;\n    }\n    if(w==0&&x==0)\n    {\n        if((y*2+z)%4==0)\n        printf(\"%d\", (y*2+z)/4);\n        else\n        printf(\"%d\", (y*2+z)/4+1);\n    }\n    else\n    {\n        if(z>=x)\n    z=z-x;\n    else\n    z=0;\n    s=w+x+y/2+(y%2+z)/4;\n    if((y%2+z)%4==0)\n    {\n        printf(\"%d\",s);\n    }\n    else\n    printf(\"%d\", s+1);\n\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[100000],i,b,w=0,x=0,y=0,z=0,s=0,n,c=0;\n    scanf(\"%d\", &n);\n    for(b=0;b<n;b++)\n    {\n        scanf(\"%d\", &a[b]);\n    }\n    for(b=0;b<n;b++)\n    {\n        if(a[b]%4==0)\n        w++;\n        else if(a[b]%3==0)\n        x++;\n        else if(a[b]%2==0)\n        y++;\n        else\n        z++;\n    }\n    if(w==0&&x==0)\n    {\n        if((y*2+z)%4==0)\n        printf(\"%d\", (y*2+z)/4);\n        else\n        printf(\"%d\", (y*2+z)/4+1);\n    }\n    else\n    {\n        if(z>x)\n    z=z-x;\n    else\n    z=0;\n\n    s=w+x+y/2+((y%2)*2+z)/4;\n    if(((y%2)*2+z)%4==0)\n    {\n        printf(\"%d\",s);\n    }\n    else\n    printf(\"%d\", s+1);\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.992526158445441, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6b620df6c34c5059bd54e9d53541edf2", "bug_code_uid": "424c1af891442d45faf012fd49e4b62a", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "efc37291c6664d9773943f9a547d282c", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tlong int n,a[100000],i;\n\tlong long int sum=0;\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%ld\",&a[i]);\n\t\tsum+=a[i];\n\t}\n\tlong min=sum;\n\tif(sum%2==0)\n\t\tprintf(\"%lld\\n\",sum);\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[i]<min && a[i]%2!=0)\n\t\t\t\tmin=a[i];\n\t\t}\n\t\tprintf(\"%lld\\n\",sum-min);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tlong int n,a[100000],i;\n\tlong long int sum=0;\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%ld\",&a[i]);\n\t\tsum+=a[i];\n\t}\n\tlong long min=sum;\n\tif(sum%2==0)\n\t\tprintf(\"%lld\\n\",sum);\n\telse\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[i]<min && a[i]%2!=0)\n\t\t\t\tmin=a[i];\n\t\t}\n\t\tprintf(\"%lld\\n\",sum-min);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9798792756539235, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ee35521ddb03f5fc10103f72eb84c752", "bug_code_uid": "7fc0533fea8b2d8451f57961a9360817", "src_uid": "30cfce44a7a0922929fbe54446986748", "apr_id": "853c87b99982adeee4e69a00ca9f0852", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n        int t,i;\n        scanf(\"%d\",&t);\n        for(i=1;i<=t;i++){\n                int n,a,b,c,d,j,k,p,q,r,s;\n                scanf(\"%d%d%d%d%d\",&n,&a,&b,&c,&d);\n                p=a-b;\n                q=a+b;\n                r=c-d;\n                s=c+d;\n                if((n*p)>=r&&(n*p)<=s||(n*q)<=s&&(n*q)>=r){\n                                printf(\"YES\\n\");\n                }\n                else\n                        printf(\"NO\\n\");\n\n        }\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n        int t,i;\n        scanf(\"%d\",&t);\n        for(i=1;i<=t;i++){\n                int n,a,b,c,d,j,k,p,q,r,s;\n                scanf(\"%d%d%d%d%d\",&n,&a,&b,&c,&d);\n                p=a-b;\n                q=a+b;\n                r=c-d;\n                s=c+d;\n                if((n*p)<=s&&(n*q)>=r){\n                                printf(\"YES\\n\");\n                }\n                else\n                        printf(\"NO\\n\");\n\n        }\n        return 0;\n}\n"}
{"similarity_score": 0.25296442687747034, "equal_cnt": 19, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "e18bd71ae1535ae22454a605eaf5134e", "bug_code_uid": "2679dee2522ca66016b2c1b96aa54ca6", "src_uid": "fefec879efd4f524de00684adee7cd19", "apr_id": "d3d3b9084767752d465d1c70e7f23cd3", "difficulty": 800, "tags": ["brute force", "dfs and similar", "dp", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nchar a[4][104]; \nint main (){\n\tint n=0,m,i,j,num,v,b,k;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tv=0;\n\t\tscanf(\"%d\",&m);\n\t\tfor(i=1;i<=2;i++){\n\t\t\tscanf(\"%d\",&b);\n\t\t\tk=1;\n\t\t\tfor(j=1;j<=m;j++){\n\t\t\t\ta[i][j]=b/k%10;\n\t\t\t\tk*=10;\n\t\t\t} \n\t\t}\n\t\tfor(i=2;i<=m;i++){\n\t\t\tnum=0;\n\t\t\tfor(j=1;j<=2;j++){\n\t\t\t\tif(a[j][i]==0){\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t}if(num>=1){\n\t\t\t\tv++;\n\t\t\t}\n\t\t}if(v==m-1){\n\t\t\tprintf(\"YES\\n\");\n\t\t}else {\n\t\t\tprintf(\"NO\\n\"); \n\t\t}\n\t\t\n\t}\n\t\n\treturn 0;\n} \n\t \t\t   \t\t   \t\t   \t \t  \t\t\t\t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char a[100][100];\n    int n,m,i,t,j,k,p=0;\n    scanf(\"%d\",&n);\n    for(j=0;j<n;j++)\n    {\n        scanf(\"%d\",&m);\n        scanf(\"%s\",a[0]);\n        scanf(\"%s\",a[1]);\n        for(i=0;i<m-1;i++)\n        {\n            if(a[0][i+1]=='0'||a[1][i+1]=='0')\n                p=p+0;\n            else\n                p++;\n        }\n        if(p==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n        p=0;\n    }\n    return 0;\n}\n\t \t\t\t    \t \t  \t\t    \t\t  \t\t\t\t  \t"}
{"similarity_score": 0.9886578449905482, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "45758f1a5fb7236327a0c62c603e4510", "bug_code_uid": "2fe97dad7b609a7b09b735b2527f02af", "src_uid": "c611808e636d9307e6df9ee0e706310b", "apr_id": "4f297483adcfff0dc63093c0e9437ec9", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[100],b[100],h[100],v[100],i,j,k,x,l,m,n,p,q;\n    scanf(\"%d\",&n);\n    for(i=0;i<n*n;i++)\n    {\n        scanf(\"%d%d\",&h[i],&v[i]);\n     }\n    printf(\"1 \");p=1;x=0;q=1;\n    l=-6;m=-7;\n    a[0]=h[0];b[0]=v[0];\n    for(i=1;i<n*n;i++)\n    {\n       for(j=0;j<=x;j++)\n        {\n            if(h[i]!=a[j]&&v[i]!=b[j])l=m;\n            else {l=m+1;break;}\n           \n        }\n   // printf(\"%d   %d\\n\",l,m);\n      if(l==m)\n {x++;a[p]=h[i];b[q]=v[i];p++;q++;printf(\"%d \",i+1);}\n       \n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[100000],b[100000],h[100000],v[100000],i,j,k,x,l,m,n,p,q;\n    scanf(\"%d\",&n);\n    for(i=0;i<n*n;i++)\n    {\n        scanf(\"%d%d\",&h[i],&v[i]);\n     }\n    printf(\"1 \");p=1;x=0;q=1;\n    l=-6;m=-7;\n    a[0]=h[0];b[0]=v[0];\n    for(i=1;i<n*n;i++)\n    {\n       for(j=0;j<=x;j++)\n        {\n            if(h[i]!=a[j]&&v[i]!=b[j])l=m;\n            else {l=m+1;break;}\n           \n        }\n   // printf(\"%d   %d\\n\",l,m);\n      if(l==m)\n {x++;a[p]=h[i];b[q]=v[i];p++;q++;printf(\"%d \",i+1);}\n       \n    }\n}"}
{"similarity_score": 0.33620689655172414, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "8f913c63f58e57892b8302a1e28175cd", "bug_code_uid": "6fa4a99177b8139d7a9fc11ab87b2ded", "src_uid": "2c58d94f37a9dd5fb09fd69fc7788f0d", "apr_id": "d79f52b1625ab44cee95f62489f4505c", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main()\n{ int n,t[100],i,cp,j,nb;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&t[i]);\n}\ni=0;\ncp=1;\nnb=0;\nwhile ((i<n)&&(nb==cp-1))\n {j=i+1; cp=1;\nwhile(t[i]==t[j])\n{\n    j++;\n    cp++;\n}\nif (cp==1)\n{\n    i++;\n}\nif (cp!=1)\n{\n    j=0; nb=0;\n    while ((j<n)&&(t[j]!=t[i])&&(nb<=cp-1))\n    {\n    t[j]=0;\n    j++;\n    nb++;\n    }\n\n}\n\ni++;\n}\n\nif (j==cp-2)\n{\n    printf(\"YES\");\n}\nelse\n{\n    printf(\"NO\");\n}\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n\n\nint main()\n{ int n,t[1000],v[1000],nb,i,j,k,s;\nscanf(\"%d\",&n);\nfor (i=0;i<n;i++)\n{\n    scanf(\"%d\",&t[i]);\n}\nv[0]=t[0];\nk=1;\nfor(i=1;i<n;i++)\n{\n    j=0;\n    while((j<k)&&(v[j]!=t[i]))\n    {\n        j++;\n    }\n    if (j==k)\n        {v[k]=t[i];\n         k++;}\n}\nfor (i=0;i<k;i++)\n{ nb=0;\n    for (j=0;j<n;j++)\n    {\n        if (t[j]==v[i])\n           {nb++;}\n\n    }\n    v[i]=nb;\n}\nj=0;\ns=0;\nwhile (j<k)\n{   if (j==0)\n        {j++;}\n    else\n        {s=s+v[j];\n         j++;}\n}\ni=0;\nwhile ((i<k)&&(v[i]-1<=s))\n{ i++;\n    j=0;\n    s=0;\nwhile (j<k)\n{   if (j==i)\n        {j++;}\n    else\n        {s=s+v[j];\n         j++;}\n}\n\n\n\n}\nif (i==k)\n    printf(\"YES\");\nelse\n    printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.934409687184662, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "aa68e496600e22dabaf61e99fa6e9bd8", "bug_code_uid": "27ffbd6457b076b5780ccd1ca88325fa", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "c9a99f2fbfa9437f330f053d2d40b81e", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tfloat max=0;\n\tint a[1000], n, i, l;\n\tscanf(\" %d %d\",&n,&l);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\" %d\",&a[i]);\n\tqsort(a, n, sizeof(int), cmpfunc);\n\tfor(i=1;i<n;i++)\n\t\tif(a[i]-a[i-1]>max)\n\t\t\tmax=a[i]-a[i-1];\n\tif(max/2>a[0]&&max/2>n-a[n-1])\n\t\tprintf(\"%f\",max/2);\n\telse if(a[0]>=n-a[n-1]&&a[0]>=max/2)\n\t\tprintf(\"%f\",float(a[0]));\n\telse\n\t\tprintf(\"%f\",float(n-a[n-1]));\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tdouble max=0;\n\tint a[1000], n, i, l;\n\tscanf(\" %d %d\",&n,&l);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\" %d\",&a[i]);\n\tqsort(a, n, sizeof(int), cmpfunc);\n\tfor(i=1;i<n;i++)\n\t\tif(a[i]-a[i-1]>max)\n\t\t\tmax=a[i]-a[i-1];\n\tif(max/2>a[0]&&max/2>l-a[n-1])\n\t\tprintf(\"%f\",max/2);\n\telse if(a[0]>=l-a[n-1]&&a[0]>=max/2)\n\t\tprintf(\"%d\",a[0]);\n\telse\n\t\tprintf(\"%d\",l-a[n-1]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.39544235924932974, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9fe30df86dd9f0a77550170c460e80ce", "bug_code_uid": "8a9dd99791ae7e1d5a402afafcea4618", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "3d262388e40d22f0d98ff48bf112b94b", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid nezzar(int count[],int n,int q);\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   int n,q;\r\n   for(int i=0;i<t;i++)\r\n   {\r\n       scanf(\"%d%d\",&n,&q);\r\n       int count[n];\r\n       for(int j=0;j<n;j++)\r\n       {\r\n           scanf(\"%d\",&count[j]);\r\n       }\r\n       nezzar(count,n,q);\r\n   }\r\n}\r\nvoid nezzar(int count[],int n,int q)\r\n{\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        if(count[i]%q==4)\r\n            printf(\"NO\\n\");\r\n        else\r\n            printf(\"YES\\n\");\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nvoid nezzar(int count[],int n,int q)\r\n{\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        if(q==1)\r\n        {\r\n            printf(\"YES\\n\");\r\n            continue;\r\n        }\r\n        else if(count[i]%10==q)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else if(count[i]>=10*q)\r\n        {\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else\r\n        {\r\n            while(count[i]>0)\r\n            {\r\n                count[i]=count[i]-q;\r\n                if(count[i]%10==q)\r\n                {\r\n                    printf(\"YES\\n\");\r\n                    break;\r\n                }\r\n                else if(count[i]<0)\r\n                    printf(\"NO\\n\");\r\n            }\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int n,q;\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&q);\r\n        int count[n];\r\n        for(int j=0;j<n;j++)\r\n        {\r\n            scanf(\"%d\",&count[j]);\r\n        }\r\n        nezzar(count,n,q);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9992082343626286, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "90d25f0060e731d939846457b7ca0253", "bug_code_uid": "e21c41019f92c382069f6b92e5c7bf1e", "src_uid": "c3ee6419adfc85c80f35ecfdea6b0d43", "apr_id": "b5b905a32adb5765cf157600ccaeeb00", "difficulty": 1200, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main () {\n  int t = 0;\n  int n = 0;\n  int a[200000] = {};\n  \n  int res = 0;\n  \n  res = scanf(\"%d\", &t);\n  while (t > 0) {\n    int is_ok = 1;\n    res = scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n      res = scanf(\"%d\", a+i);\n    }\n    for (int i = 1; i < n; i++) {\n      if (a[i-1] > a[i]) {\n        is_ok = 0;\n      }\n    }\n    if (is_ok > 0) {\n      printf(\"0\\n\");\n    } else if (a[n-2] > a[n-1] || a[n-1] <= 0) {\n      printf(\"-1\\n\");\n    } else {\n      printf(\"%d\\n\", n-2);\n      for (int i = n-2; i > 0; i--) {\n        printf(\"%d %d %d\\n\", i, i+1, n);\n      }\n    }\n    t--;\n  }\n  \n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main () {\n  int t = 0;\n  int n = 0;\n  int a[200000] = {};\n  \n  int res = 0;\n  \n  res = scanf(\"%d\", &t);\n  while (t > 0) {\n    int is_ok = 1;\n    res = scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n      res = scanf(\"%d\", a+i);\n    }\n    for (int i = 1; i < n; i++) {\n      if (a[i-1] > a[i]) {\n        is_ok = 0;\n      }\n    }\n    if (is_ok > 0) {\n      printf(\"0\\n\");\n    } else if (a[n-2] > a[n-1] || a[n-1] < 0) {\n      printf(\"-1\\n\");\n    } else {\n      printf(\"%d\\n\", n-2);\n      for (int i = n-2; i > 0; i--) {\n        printf(\"%d %d %d\\n\", i, i+1, n);\n      }\n    }\n    t--;\n  }\n  \n  return 0;\n}\n"}
{"similarity_score": 0.75177304964539, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d86561e35560f279746a32c0f28d7471", "bug_code_uid": "8635a271328adb4b263cb58dccb43f3f", "src_uid": "cdafe800094113515e1de1acb60c4bb5", "apr_id": "f04bf0ac70218424515deffbb1eb959c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int n,i;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n                int l1,r1,l2,r2;\n                scanf(\"%d%d%d%d\",&l1,&r1,&l2,&r2);\n                if(l1<l2)\n                        printf(\"%d %d\\n\",l1,r2);\n                else printf(\"%d %d\\n\",l2,r1);\n        }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n        int n,i;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n        {\n                int l1,r1,l2,r2;\n                scanf(\"%d%d%d%d\",&l1,&r1,&l2,&r2);\n                if(l1!=l2)\n                        printf(\"%d %d\\n\",l1,l2);\n                else if(l1!=r2)\n                        printf(\"%d %d\\n\",l1,r2);\n                else if(r1!=l2)\n                        printf(\"%d %d\\n\",r1,l2);\n                else if(r1!=r2)\n                        printf(\"%d %d\\n\",r1,r2);\n        }\n}\n"}
{"similarity_score": 0.7559808612440191, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "e1d2d0c17c4736cc842e64e13e0f7626", "bug_code_uid": "8b258ecaf0c78616893fe19e72aca249", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "722ee9932b0ab641516c327d3a9dabbe", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\n\n\n\n\nvoid main() {\n\tint n,j,i,p,k;\n\tscanf(\"%d\",&n);\n\tp=0; k =1;\n\tfor(i=1;i<=n; i++)\n\t{\n\t\tfor(j=0;j<n/2;j++) { printf(\"%d %d \",k+j,n*n-p); p++; }\n\t\tk+= n/2;\n\t\tprintf(\"\\n\");\n\t}\n}\n", "fixed": "#include <stdio.h>\nmain() {\n    int n,j,i,p,k;\n    scanf(\"%d\",&n);\n    p=0; k =1;\n    for(i=1;i<=n; i++)\n    {\n        for(j=0;j<n/2;j++) { printf(\"%d %d \",k+j,n*n-p); p++; }\n        k+= n/2;\n        printf(\"\\n\");\n    }\n}"}
{"similarity_score": 0.39486673247778875, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "17bc43dfaea78e4cfd2e6bcae757e6d0", "bug_code_uid": "ac5a0b87f1b1a565ec6352261b621b5a", "src_uid": "4aaa33f77fe1c89ae477bd5cfa04f0bf", "apr_id": "689d68681b22f1319368438d3811159c", "difficulty": 800, "tags": ["data structures", "greedy", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int t,n,i,a[400000],j;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        int flag=0;\r\n        scanf(\"%d\",&n);\r\n        for (i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);  \r\n        }\r\n        for (i=flag;i<n;i++)\r\n        {\r\n            for (j=i+1;j<n;j++)\r\n            {\r\n                if (a[i]==a[j])\r\n                {flag=i+1;}\r\n            }\r\n        }\r\n        printf(\"%d\\n\",flag);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint s[400000];\r\nint main()\r\n{\r\n    int t,n,i,a[400000];\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for (i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int flag=0;\r\n        memset(s,0,sizeof(s));\r\n        for(i=n;i>0;i--)\r\n\t\t{\r\n\t\t\tif(s[a[i]]>0)\r\n\t\t\t{\r\n\t\t\t\tflag=i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ts[a[i]]++;\r\n\t\t}\r\n        printf(\"%d\\n\",flag);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9953632148377125, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e87223932977879730aa878d666382af", "bug_code_uid": "16b77c122a9cd2fcfdcc1d3c8e178fed", "src_uid": "fa0fc36acf5a638917be7a2769cbfd80", "apr_id": "0c52c1e1a78c8449dead7029e6a6d225", "difficulty": 2000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t2021\n#define M\t(N * 5 / 2)\n\nint aa[N], ll[M], m;\n\nvoid reverse(int j) {\n\tint i, tmp;\n\n\tll[m] = j + 1, m++;\n\tfor (i = 0; i < j; i++, j--)\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n}\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n, h, i, j, k, bad;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]), aa[i]--;\n\t\tbad = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif ((i + aa[i]) % 2 != 0) {\n\t\t\t\tbad = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (bad) {\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor (i = n - 2; i > 0; i -= 2) {\n\t\t\tfor (j = 0; j < n; j++)\n\t\t\t\tif (aa[j] == i + 1)\n\t\t\t\t\tbreak;\n\t\t\tfor (k = 0; k < n; k++)\n\t\t\t\tif (aa[k] == i)\n\t\t\t\t\tbreak;\n\t\t\tif (j < k)\n\t\t\t\treverse(j), reverse(k - 1), reverse(k + 1), reverse(2), reverse(i + 1);\n\t\t\telse\n\t\t\t\treverse(j), reverse(j - k - 1), reverse(j - k + 1), reverse(2), reverse(i + 1);\n\t\t}\n\t\tprintf(\"%d\\n\", m);\n\t\tfor (h = 0; h < m; h++)\n\t\t\tprintf(\"%d \", ll[h]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t2021\n#define M\t(N * 5 / 2)\n\nint aa[N], ll[M], m;\n\nvoid reverse(int j) {\n\tint i, tmp;\n\n\tll[m] = j + 1, m++;\n\tfor (i = 0; i < j; i++, j--)\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n}\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n, h, i, j, k, bad;\n\n\t\tscanf(\"%d\", &n);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]), aa[i]--;\n\t\tbad = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif ((i + aa[i]) % 2 != 0) {\n\t\t\t\tbad = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (bad) {\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tm = 0;\n\t\tfor (i = n - 2; i > 0; i -= 2) {\n\t\t\tfor (j = 0; j < n; j++)\n\t\t\t\tif (aa[j] == i + 1)\n\t\t\t\t\tbreak;\n\t\t\tfor (k = 0; k < n; k++)\n\t\t\t\tif (aa[k] == i)\n\t\t\t\t\tbreak;\n\t\t\tif (j < k)\n\t\t\t\treverse(j), reverse(k - 1), reverse(k + 1), reverse(2), reverse(i + 1);\n\t\t\telse\n\t\t\t\treverse(j), reverse(j - k - 1), reverse(j - k + 1), reverse(2), reverse(i + 1);\n\t\t}\n\t\tprintf(\"%d\\n\", m);\n\t\tfor (h = 0; h < m; h++)\n\t\t\tprintf(\"%d \", ll[h]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9943342776203966, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9fcf4d8a67dafa06dc262b0a01da7273", "bug_code_uid": "e23b2ca02f8051a09a6896336a42f55a", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "8624759ad06d1a6d21e529f2efac90d9", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n,last=0,first=1000000000,max,min,i,num1,num2;\n    scanf(\"%lld\",&n);\n    int ara[100000];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&ara[i]);\n\n    min=ara[1]-ara[0];\n\n    max=ara[n-1]-ara[0];\n    printf(\"%lld %lld\\n\",max,min);\n\n    for(i=1;i<n-1;i++)\n    {\n        num1=ara[i]-ara[i-1];\n\n        num2=ara[i+1]-ara[i];\n\n        if(num1<num2) min=num1;\n        else min=num2;\n\n        num1=ara[i]-ara[0];\n        num2=ara[n-1]-ara[i];\n\n\n        if(num1>num2) max=num1;\n        else max=num2;\n        printf(\"%lld %lld\\n\",min,max);\n    }\n\n    min=ara[i]-ara[n-2];\n    max=ara[i]-ara[0];\n    printf(\"%lld %lld\\n\",min,max);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int n,last=0,first=1000000000,max,min,i,num1,num2;\n    scanf(\"%lld\",&n);\n    int ara[100000];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&ara[i]);\n\n    min=ara[1]-ara[0];\n\n    max=ara[n-1]-ara[0];\n    printf(\"%lld %lld\\n\",min,max);\n\n    for(i=1;i<n-1;i++)\n    {\n        num1=ara[i]-ara[i-1];\n\n        num2=ara[i+1]-ara[i];\n\n        if(num1<num2) min=num1;\n        else min=num2;\n\n        num1=ara[i]-ara[0];\n        num2=ara[n-1]-ara[i];\n\n\n        if(num1>num2) max=num1;\n        else max=num2;\n        printf(\"%lld %lld\\n\",min,max);\n    }\n\n    min=ara[i]-ara[n-2];\n    max=ara[i]-ara[0];\n    printf(\"%lld %lld\\n\",min,max);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9726495726495726, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "2274122b3c44e20e581fe0a858ef8c08", "bug_code_uid": "cd0cf9fdae7df261694a0118235a7d04", "src_uid": "783df1df183bf182bf9acbb99208cdb7", "apr_id": "e8b4c89ae8a0b55bb3f6065c4a22c76b", "difficulty": 1700, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define lld long long int\ntypedef struct point{\n    lld a;\n    lld b;\n}point;\nint main()\n{\n    lld aa,bb,cc,n,i,ans,u,f,ko=0;\n    point s,e;\n    scanf(\"%lld %lld %lld %lld %lld\",&(s.a),&(s.b),&(e.a),&(e.b),&n);\n    ans=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld %lld %lld\",&aa,&bb,&cc);\n        u=(aa*(s.a))+(bb*(s.b))+cc;\n        f=(aa*(e.a))+(bb*(e.b))+cc;\n        //printf(\"%d %d\\n\",u,f);\n        if((u < 0 && f > 0) || (u>0 && f < 0))\n            ans++;\n    }\n    if(ans!=0)\n        printf(\"%lld\\n\",ans);\n    else\n        printf(\"1\\n\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#define lld long long int\ntypedef struct point{\n    lld a;\n    lld b;\n}point;\nint main()\n{\n    lld aa,bb,cc,n,i,ans,u,f,ko=0;\n    point s,e;\n    scanf(\"%lld %lld %lld %lld %lld\",&(s.a),&(s.b),&(e.a),&(e.b),&n);\n    ans=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld %lld %lld\",&aa,&bb,&cc);\n        u=(aa*(s.a))+(bb*(s.b))+cc;\n        f=(aa*(e.a))+(bb*(e.b))+cc;\n        //printf(\"%d %d\\n\",u,f);\n        if((u < 0 && f > 0) || (u>0 && f < 0))\n            ans++;\n    }\n    //if(ans!=0)\n        printf(\"%lld\\n\",ans);\n    //else\n        //printf(\"1\\n\");\n    return 0;\n}"}
{"similarity_score": 0.953125, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9fc2faa37061c8d52415a9d7f6e65f8d", "bug_code_uid": "dcf2cc73c2b107f6e1bb9ec08a67b511", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "296498469b058b735601598452420cd2", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define MAX 1009\nint main()\n{\n\tchar A[MAX];\n\tscanf(\"%s\",A);\n\tint l=strlen(A),k,t,i,j,temp,cnt=0,state;\n\tscanf(\"%d\",&k);\n\tt=l/k;\n\ttemp=0;\n\tfor(i=0;i<k;i++)\n\t{\n\t\tstate=1;\n\t\tfor(j=0;j<t;j++)\n\t\t{\n\t\t\tif(A[temp+j]==A[temp+t-j-1])\n\t\t\t\tstate=1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttemp+=t;\n\t\tif(state==1)\n\t\t\tcnt++;\n\t}\n\tif(cnt==k)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define MAX 1009\nint main()\n{\n\tchar A[MAX];\n\tscanf(\"%s\",A);\n\tint l=strlen(A),k,t,i,j,temp,cnt=0,state;\n\tscanf(\"%d\",&k);\n\tt=l/k;\n\ttemp=0;\n\tif(l%k!=0)\n\t\tprintf(\"NO\\n\");\n\telse\n\t{\n\tfor(i=0;i<k;i++)\n\t{\n\t\tstate=1;\n\t\tfor(j=0;j<t;j++)\n\t\t{\n\t\t\tif(A[temp+j]==A[temp+t-j-1])\n\t\t\t\tstate=1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttemp+=t;\n\t\tif(state==1)\n\t\t\tcnt++;\n\t}\n\tif(cnt==k)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5967976710334789, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "6637b34b6de9ce071da216641fdfbe27", "bug_code_uid": "4908daf8681d3666f9f1263af8240acb", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "880e696893d6dcc429c31e47eb48dc25", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a,b;\n\tscanf(\"%d%d%d\",&n,&a,&b);\n\tint arr[n];\n\tfor(int j=0;j<n;j++)\n\tscanf(\"%d\",&arr[j]);\n\t\n\n//\tprintf(\"%d%d%d\",n,a,b);\n\n//\tfor(int j=0;j<n;j++)\n//\tprintf(\"%d\",arr[j]);\n\n\tif(arr[a-1]==arr[b-1])\n\tprintf(\"0\");\n\tif(arr[a-1]!=arr[b-1])\n\tprintf(\"1\");\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,s=1;\n\tscanf(\"%d%d%d\",&n,&a,&b);\n    char array[n];\n    int arr[n];\n\tscanf(\"%s\",array);\n\tfor(int j=0;j<n;j++)\n\t arr[j]=array[j]-'0';\n\n\t\n\t//printf(\"%d%d%d\",n,a,b);\n\n\t//for(int j=0;j<n;j++)\n\t//printf(\"%dh'\",arr[j]);\n\n\tif(arr[a-1]==arr[b-1])\n\tprintf(\"0\");\n\tif(arr[a-1]!=arr[b-1])\n\tprintf(\"1\");//printf(\"%da'%db'\",arr[a-1],arr[b-1]);}\n//\tprintf(\"%d%d%d\",n,a,b);\n}\n"}
{"similarity_score": 0.9990029910269193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dd06ecfd122e2c3613998d4fd7d1ff5a", "bug_code_uid": "0dc091eb5bf5c39894c44aac2496bba1", "src_uid": "816907d873bce3573ce1e5ae3f494768", "apr_id": "479ede533e41ecfeedc6892b6f6cec5d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    char s[100];\n\n    i=0;\n    while(i < t)\n    {\n        scanf(\"%s\",s);\n        int n = strlen(s);\n        int m = n-1;\n        if(s[m-1]=='p' && s[m]=='o')\n        {\n            printf(\"FILIPINO\\n\");\n        }\n        else if(s[m-1]=='s' && s[m]=='u')\n        {\n            printf(\"JAPANESE\\n\");\n        }\n        else if(s[m-1]=='d' && s[m]=='a')\n        {\n            printf(\"KOREAN\\n\");\n        }\n        i++;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    char s[1000];\n\n    i=0;\n    while(i < t)\n    {\n        scanf(\"%s\",s);\n        int n = strlen(s);\n        int m = n-1;\n        if(s[m-1]=='p' && s[m]=='o')\n        {\n            printf(\"FILIPINO\\n\");\n        }\n        else if(s[m-1]=='s' && s[m]=='u')\n        {\n            printf(\"JAPANESE\\n\");\n        }\n        else if(s[m-1]=='d' && s[m]=='a')\n        {\n            printf(\"KOREAN\\n\");\n        }\n        i++;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9053497942386831, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "43d5fc7bb74039763ed4ca2a2475d677", "bug_code_uid": "f41f44f2523e729c62ed963fc879775d", "src_uid": "6477fdad8455f57555f93c021995bb4d", "apr_id": "cc541670ddf0f7c4979a58a09ad4ae62", "difficulty": 900, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "p,c,l,m,i,t;main(a){for(;!i|a^3?~scanf(\"%d\",&a)?:(a=3):0;p=a)i++?a^p?t=l<c?l:c,m=m>t?m:t,l=c,c=1:++c:0;printf(\"%d\",2*m);}", "fixed": "p,c,l,m,t;main(a){for(scanf(\"%*d\");a^3?~scanf(\"%d\",&a)?:(a=3):0;p=a)a^p?t=l<c?l:c,m=m>t?m:t,l=c,c=1:++c;printf(\"%d\",2*m);}"}
{"similarity_score": 0.9993284083277367, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "88dd2077ab9e24501e03cddde7dfcfa2", "bug_code_uid": "3bcbed95980784ba35f4dfb21af821e6", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "b552a70d34d18837f0c529a825360e97", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n\t\r\n        int n,q,t,m;\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%d\",&q);\r\n        \r\n        int a[n];\r\n        int count=0;\r\n        for(int i=0;i<n;i++) {\r\n        \tscanf(\"%d\",&a[i]);\r\n        \tif(a[i]==1)count++;\r\n        \t\r\n        }\r\n        \r\n        for(int i=0;i<q;i++) {\r\n             scanf(\"%d\",&t);\r\n             scanf(\"%d\",&m);\r\n        \tif(t==1) {\r\n        \t\tif(a[m-1]==1)count--;\r\n        \t\telse if(a[m-1]==0)count++;\r\n        \t\ta[m-1]=1-a[m-1];\r\n        \t\t\r\n        \t\t\r\n        \t}\r\n        \telse if(t==2) {\r\n        \t\tif(m>count) {\r\n        \t\t\tprintf(\"0\\n\");\r\n        \t\t}\r\n        \t\telse {\r\n        \t\t\tprintf(\"1\\n\");\r\n        \t\t}\r\n        \t\t\r\n        \t}\r\n        }\r\n        \t\r\n       \r\n}\t\r\n\t\r\n\t\r\n}", "fixed": "#include<stdio.h>\r\nint main() {\r\n\t\r\n        int n,q,t,m;\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%d\",&q);\r\n        \r\n        int a[n];\r\n        int count=0;\r\n        for(int i=0;i<n;i++) {\r\n        \tscanf(\"%d\",&a[i]);\r\n        \tif(a[i]==1)count++;\r\n        \t\r\n        }\r\n        \r\n        for(int i=0;i<q;i++) {\r\n             scanf(\"%d\",&t);\r\n             scanf(\"%d\",&m);\r\n        \tif(t==1) {\r\n        \t\tif(a[m-1]==1)count--;\r\n        \t\telse if(a[m-1]==0)count++;\r\n        \t\ta[m-1]=1-a[m-1];\r\n        \t\t\r\n        \t\t\r\n        \t}\r\n        \telse if(t==2) {\r\n        \t\tif(m>count) {\r\n        \t\t\tprintf(\"0\\n\");\r\n        \t\t}\r\n        \t\telse {\r\n        \t\t\tprintf(\"1\\n\");\r\n        \t\t}\r\n        \t\t\r\n        \t}\r\n        }\r\n        \t\r\n       \r\n}\t\r\n\t\r\n\t\r\n"}
{"similarity_score": 0.7407407407407407, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "e0f90df922e80c275022ce3f61f4d1ad", "bug_code_uid": "8a4591edf843761259e69c22fb03a60d", "src_uid": "cf1eb164c4c970fd398ef9e98b4c07b1", "apr_id": "fd6409edadbbd9bd404510ff0420e3c1", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <limits.h>\n#include <malloc.h>\n#include <memory.h>\nint i,n,a[35],f[70000000]={0},sum,ans,c;\nchar s[1005][1005];\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (i=1;i<=n;i++) scanf(\"%s\",s[i]);\n\tfor (i=1,a[0]=1;i<=25;i++) a[i]=a[i-1]*2;\n\tfor (i=1,ans=0;i<=n;i++)\n\t{\n\t\tfor (sum=0,c='a';c<='z';c++) \n\t\tif (strchr(s[i],c)) sum+=a[c-'a'];\n\t\tif (!f[sum]) \n\t\t{\n\t\t\tf[sum]=1; \n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <limits.h>\n#include <malloc.h>\n#include <memory.h>\nint i,n,a[35],sum[1005],ans,c;\nchar s[1005][1005];\n\nint cmp(const void *x,const void *y)\n{\n\treturn *(int *)x-*(int *)y;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (i=1;i<=n;i++) scanf(\"%s\",s[i]);\n\tfor (i=1,a[0]=1;i<=25;i++) a[i]=a[i-1]*2;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tfor (sum[i]=0,c='a';c<='z';c++) \n\t\tif (strchr(s[i],c)) sum[i]+=a[c-'a'];\n\t}\n\tqsort(&sum[1],n,sizeof(int),cmp);\n\tfor (i=2,ans=1;i<=n;i++) \n\tif (sum[i]!=sum[i-1]) ans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.5273556231003039, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "df43c7cedcb44c27df1780300e6e99af", "bug_code_uid": "001c036a4557ec83c1f21bb4306ffd80", "src_uid": "15aac7420160f156d5b73059af1fae3b", "apr_id": "54bd5d7f6689d3610a1f8bf7fbd67586", "difficulty": 1600, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n\nint main(void) {\n   long long n,i,j,ans,cap1,x,flag;\n   long long l[100000],no[100000];\n   \n   \n   scanf(\"%I64d\",&n);\n  \n   for(i=1;i<=n;i++)\n   {\n       scanf(\"%I64d%I64d\",&l[i],&no[i]);\n   }    \n   j=1;\n   ans=l[n]+1;\n   while(pow(4,j)<no[n])\n   {\n       j++;\n       ans++;\n   }\n   no[n]=pow(4,j);\n   \n  for(i=n-1;i>1;i--)\n   {   flag=0;\n       cap1=1;\n       x=l[i+1]-l[i];\n       for(j=1;j<=x;j++)\n       {\n       cap1*=4;\n       if(cap1>=no[i])\n       {flag=1;\n       \n       break;\n       }\n       }\n       if(flag==0){\n       if(no[i+1]*cap1<no[i])\n       {   while(no[i+1]*cap1<no[i]){\n           ans++;\n           no[i+1]=pow(4,ans-l[i+1]);\n           }\n           \n       }}\n       no[i]=no[i+1]*cap1;\n   }\n   printf(\"%I64d\",ans);\n   \n       \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include<math.h>\n\nint main(void) {\n   long long n,i,j,ans[100000],cap1,x,best,t,u;\n   long long l[100000],no[100000];\n   \n   \n   scanf(\"%I64d\",&n);\n  \n   for(i=1;i<=n;i++)\n   {\n       scanf(\"%I64d%I64d\",&l[i],&no[i]);\n   }  \n   best=0;\n   for(i=1;i<=n;i++)\n   {\n       j=1;\n       ans[i]=l[i]+1;\n       while(pow(4,j)<no[i])\n       \n       {\n           j++;\n           ans[i]++;\n       }\n       if(ans[i]>best)\n       best=ans[i];\n       }\n   printf(\"%I64d\",best);\n   \n       \n    return 0;\n}"}
{"similarity_score": 0.17121354656632173, "equal_cnt": 27, "replace_cnt": 23, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "0ae64d776d5db16b475349c6ba875de7", "bug_code_uid": "25da2d46fd96255cdb37ec03420fd943", "src_uid": "ca6b162f945d4216055bf92d7263dbd5", "apr_id": "c12a9232c20e29180530a4cb326dcb73", "difficulty": 800, "tags": ["math", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\r\n#include<cstdio>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n, nac = 0, nb = 0;\r\n\tcin >> n;\r\n\tchar s[100];\r\n\tcin >> s;\r\n\tint l = strlen(s);\r\n\tfor (int i = 0; i < l; i++)\r\n\t{\r\n\t\tif (s[i] == 'A' || s[i] == 'C')nac++;\r\n\t\telse if (s[i] == 'B')nb++;\r\n\t}\r\n\tif (nac == nb)cout <<\"YES\" << endl;\r\n\telse cout <<\"NO\" << endl;\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n \r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);  //t\u7ec4\u8f93\u5165\r\n    int i;\r\n    getchar();  //\u5403\u6389t\u540e\u7684\u56de\u8f66\r\n    for(i=0; i<t; i++)\r\n    {\r\n        int numAC=0, numB=0;  //\u5b57\u6bcdA\u548cC\u7684\u6570\u91cfnumAC,\u5b57\u6bcdB\u7684\u6570\u91cfnumB\r\n        char ch;\r\n        ch=getchar();\r\n        while( ch != '\\n' )  //\u4ee5\u56de\u8f66\u4f5c\u4e3a\u6bcf\u7ec4\u8f93\u5165\u7684\u7ed3\u675f\u6807\u5fd7\r\n        {\r\n            if(ch=='A' || ch=='C')\r\n            {\r\n                numAC++;\r\n            }\r\n            else if(ch=='B')\r\n            {\r\n                numB++;\r\n            }\r\n            ch=getchar();\r\n        }\r\n \r\n        if(numAC == numB)\r\n        {\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.4380165289256198, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "ba9fdb113a596306403b14d30d49dbaf", "bug_code_uid": "ca3f503c06411d1d9772559219231b44", "src_uid": "fa256021dc519f526ef3878cce32ff31", "apr_id": "ce81c4493d907278c0d19843d2a8ee8a", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a[1002],b[1002],c[1002];\n    int n,i,j,k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=(n-1),j=0;i>=0,j<n;i--,j++){\n        c[j]=a[i];\n    }\n    b[0] = c[0];\n    for(i=1;i<n;i++){\n        b[i] = c[i-1] + c[i];\n    }\n    for(i=(n-1);i>=0;i--){\n        if(i!=(n-1)) printf(\" \");\n        printf(\"%d\",b[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int a[100005],b[100005];\n    int n,i,j,k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++){\n        b[i] = a[i] + a[i+1];\n    }\n    for(i=0;i<(n-1);i++){\n        printf(\"%d \",b[i]);\n    }\n    printf(\"%d\\n\",b[n-1]);\n    return 0;\n}\n"}
{"similarity_score": 0.6747474747474748, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "fc9ade0212b6c2a0725e504453208dd0", "bug_code_uid": "644423453360e64a15eacfce83f2d25a", "src_uid": "822e8f394a59329fa05c96d7fb35797e", "apr_id": "5d072cdee618ede525f0881ff9ea2f37", "difficulty": 1100, "tags": ["number theory", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void*a,const void*b)\n{\nreturn *(int*)b-*(int*)a;\n}\nint w[100005];\nint main()\n{\n\tint n,n1,n2;\n\tscanf(\"%d%d%d\",&n,&n1,&n2);\n\tfor(int i=0;i<n;i++)\n\tscanf(\"%d\",&w[i]);\n\tqsort(w,n,sizeof(w[0]),cmp);\n\tif(n1>n2)\n\t{\n\t\tint t=n1;\n\t\tn1=n2;\n\t\tn2=t;\n\t}\n\tint count1=0,count2=0;\n\tfor(int i=0;i<n1;i++) \n\t{\n\t\tcount1+=w[i];\n\t}\n\tfor(int i=n1;i<n1+n2;i++)\n\t{\n\t\tcount2+=w[i];\n\t}\n\tdouble ans1=(double)count1/n1;\n\tdouble ans2=(double)count2/n2; \n\tprintf(\"%.8lf\\n\",ans1+ans2);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void*a,const void*b)\n{\nreturn *(int*)b-*(int*)a;\n}\nint w[100005];\nint main()\n{\n\tint n,n1,n2;\n\tscanf(\"%d%d%d\",&n,&n1,&n2);\n\tfor(int i=0;i<n;i++)\n\tscanf(\"%d\",&w[i]);\n\tqsort(w,n,sizeof(w[0]),cmp);\n\tif(n1>n2)\n\t{\n\t\tint t=n1;\n\t\tn1=n2;\n\t\tn2=t;\n\t}\n\tdouble count1=0,count2=0;\n\tfor(int i=0;i<n1;i++) \n\t{\n\t\tcount1+=1.0*w[i];\n\t}\n\tfor(int i=n1;i<n1+n2;i++)\n\t{\n\t\tcount2+=1.0*w[i];\n\t}\n\tprintf(\"%.8lf\\n\",count1/n1+count2/n2);\n\treturn 0;\n}"}
{"similarity_score": 0.5102040816326531, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "4891d33f4b844291183eb609b91e26f3", "bug_code_uid": "9321293d9eef0e06e9c47b82fbae264e", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "ea30aba655e3316e8da835436bcfa3fa", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    int a[200],n,i,j,s;\n    scanf(\"%d\",&t);\n        for(i=0;i<t;i++)\n    scanf(\"%d\",&a[i]);\n    i=0;\n    while(t--)\n    {\n    for(j=3;j<=360;j++)\n    {\n       s=(180-360/j);\n       if(s==a[i])\n       {\n           printf(\"YES\\n\");\n           break;\n       }\n       else if(s!=a[i] &&j <360)\n       {\n\n           continue;\n       }\n       else if(s!=a[i] && j==360)\n       {\n           printf(\"NO\\n\");\n           break;\n       }\n    }\n    i++;\n    }\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,t,a[250];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(j=0;j<n;j++)\n    {\n        if(360%(180-a[j])==0)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.996662958843159, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f6176a7ea58b30f56b3c45a4c17918cb", "bug_code_uid": "62177b173d0b0fcbf8e2c7024910c93c", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "4fde0b66cbc6a4169540553c437c874e", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char *argv[])\n{\n\tunsigned long n,i=0;\n\tunsigned long count[3];\n\tint num;\n\tcount[0]=count[1]=count[2]=0;\n\tscanf(\"%ld\", &n);\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &num); count[num-1]++;\n\t}\n\tif(count[0]>=count[1] && count[0]>=count[2]) \n\t\tprintf(\"%ld\", count[1]+count[2]);\n\telse if(count[1]>=count[0] && count[1]>=count[2])\n\t\tprintf(\"%ld\", count[0]+count[2]);\n\telse \n\t\tprintf(\"%ld\", count[0]+count[2]);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n\nint main(int argc, char *argv[])\n{\n\tunsigned long n,i=0;\n\tunsigned long count[3];\n\tint num;\n\tcount[0]=count[1]=count[2]=0;\n\tscanf(\"%ld\", &n);\n\tfor(i=0; i<n; i++){\n\t\tscanf(\"%d\", &num); count[num-1]++;\n\t}\n\tif(count[0]>=count[1] && count[0]>=count[2]) \n\t\tprintf(\"%ld\", count[1]+count[2]);\n\telse if(count[1]>=count[0] && count[1]>=count[2])\n\t\tprintf(\"%ld\", count[0]+count[2]);\n\telse \n\t\tprintf(\"%ld\", count[0]+count[1]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9818799546998868, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "80910457d859488ea6b17f146efd478c", "bug_code_uid": "aa74091b55faca5e75a9b94770c9350a", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "0f616b00eda2d0dc7606942fd0bc94f3", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define rep(i,a,b) for (int i=a; i<b; i++)\nvoid scan(int *arr, int length) {\n    rep (i,0,length) scanf(\"%d\",(arr+i));\n}\nvoid sort(int *arr, int length) {\n    int temp;\n    rep (i,0,length-1) {\n        rep (j,i+1,length) {\n            if (arr[i]>arr[j]) {\n                temp=arr[i];\n                arr[i]=arr[j];\n                arr[j]=temp;\n            }\n        }\n    }\n}\nvoid tower(int *arr, int length, int *t, int *m) {\n    scan(arr,length);\n    sort(arr,length);\n    *t=1; *m=0;\n    int curlen=1;\n    rep (i,1,length) {\n        if (arr[i]==arr[i-1]) {\n            curlen++;\n        } else {\n            if ((*m)<curlen) *m=curlen;\n            (*t)++;\n            curlen=1;\n        }\n    }\n}\nint main() {\n    int len,tot,max; scanf(\"%d\\n\",&len);\n    int bars[len];\n    tower(bars,len,&tot,&max);\n    printf(\"%d %d\",max,tot);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#define rep(i,a,b) for (int i=a; i<b; i++)\nvoid scan(int *arr, int length) {\n    rep (i,0,length) scanf(\"%d\",(arr+i));\n}\nvoid sort(int *arr, int length) {\n    int temp;\n    rep (i,0,length-1) {\n        rep (j,i+1,length) {\n            if (arr[i]>arr[j]) {\n                temp=arr[i];\n                arr[i]=arr[j];\n                arr[j]=temp;\n            }\n        }\n    }\n}\nvoid tower(int *arr, int length, int *t, int *m) {\n    scan(arr,length);\n    sort(arr,length);\n    *t=1; *m=0;\n    int curlen=1;\n    rep (i,1,length) {\n        if (arr[i]==arr[i-1]) {\n            curlen++;\n        } else {\n            if ((*m)<curlen) *m=curlen;\n            (*t)++;\n            curlen=1;\n        }\n    }\n    if ((*m)<curlen) *m=curlen;\n}\nint main() {\n    int len,tot,max; scanf(\"%d\\n\",&len);\n    int bars[len];\n    tower(bars,len,&tot,&max);\n    printf(\"%d %d\",max,tot);\n    return 0;\n}"}
{"similarity_score": 0.4237427864798021, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "fbdda175677260fa3d30b159f3f9a936", "bug_code_uid": "82e269952e505fbb6bf67b5daa131a14", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "ec2639a6dd6bad787194b6efa574ab20", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int t, i, j, c, a, b, n, s, p, q;\n    \n    scanf(\"%lld\", &t);\n    \n    for(i = 1; i<=t; i++)\n    {\n        scanf(\"%lld%lld%lld%lld\", &a, &b, &n, &s);\n        c=0;\n        if(s<=b)\n            c++;\n        else\n        {\n        for(j=1;j<=a;j++)\n        {\n        p = j*n;\n        if(p>s)\n           break;\n        else\n           q = s-p;\n        if(q<=b)\n           {\n                c++;\n                break;\n           }\n        }\n        }\n        if(c==0)\n           printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int t, i, a, b, n, s, p, q, r;\n    \n    scanf(\"%lld\", &t);\n    \n    for(i = 1; i<=t; i++)\n    {\n        scanf(\"%lld%lld%lld%lld\", &a, &b, &n, &s);\n        \n        p = s/n;\n        \n        if(p<=a)\n        {\n            q = p*n;\n            r = s - q;\n            if(r<=b)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n        else\n        {\n            q = a*n;\n            r = s - q;\n            if(r<=b)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.7450236966824645, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "924649fe897c1d42550470ef6db74986", "bug_code_uid": "f8fb82b78abb7b9837bc57091ce17a17", "src_uid": "08cd22b8ee760a9d2dacb0d050dcf37a", "apr_id": "d229048e0491c459c4463a6b859558b9", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int t, n, k;\r\n    scanf (\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n        scanf (\"%d %d\", &n, &k);\r\n        char s[n];\r\n        scanf (\"%s\", s);\r\n\r\n        if (k==0 || *s==*strrev(s))\r\n        {\r\n            printf (\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf (\"2\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nchar* rev (char *s, int n)\r\n{\r\n    int i;\r\n    char *rs=(char*)calloc(n+1, sizeof(char));\r\n    for (i=0; i<n; i++)\r\n    {\r\n        rs[i]=s[(n-1)-i];\r\n    }\r\n    rs[i]='\\0';\r\n    return rs;\r\n}\r\n\r\nint main()\r\n{\r\n    int t, n, k;\r\n    scanf (\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n        scanf (\"%d %d\", &n, &k);\r\n        char s[n];\r\n        scanf (\"%s\", s);\r\n        char *g=rev(s, n);\r\n        if (k==0 || (strcmp (s, g)==0))\r\n        {\r\n            printf (\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf (\"2\\n\");\r\n        }\r\n        free(g);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9803921568627451, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fc2c450089265d332ffe8ccd9ac255fe", "bug_code_uid": "a3107a563c63ff683ac75a3fc47a13a3", "src_uid": "821d48c9a67d37ad7acc50d4d0d0d723", "apr_id": "14ec7f75ec638521ecb2921498af0a22", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "    #include<stdio.h>\n    int main()\n    {\n        int t;\n        scanf(\"%d\",&t);\n        long long int a,b,c,d;\n        while(t--)\n        {\n            scanf(\"%lld %lld %lld %lld\\n\",&a,&b,&c,&d);\n            printf(\"%lld %lld %lld\\n\",b,c,d);\n        }\n    }", "fixed": "#include<stdio.h>\nint main()\n    {\n        int t;\n        scanf(\"%d\",&t);\n        long long int a,b,c,d;\n        while(t--)\n        {\n            scanf(\"%lld %lld %lld %lld\\n\",&a,&b,&c,&d);\n            printf(\"%lld %lld %lld\\n\",b,c,c);\n        }\n    }"}
{"similarity_score": 0.7465587044534413, "equal_cnt": 19, "replace_cnt": 11, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "0d24d2373271c511d46ccee6b9d77d21", "bug_code_uid": "0cfadd7455de279cc2368b44bc6bdc2e", "src_uid": "3d0685162fbb432c37bb6aeb5fe51f94", "apr_id": "c12ddd8261d8bf0a4fc708c3be188911", "difficulty": 1200, "tags": ["binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[105];\nint cheak(int n,int h,int mid){\n\tint ans=0;\n\tfor(int i=1;i<n;++i){\n\t\tif(a[i]-a[i-1]<=mid){\n\t\t\tans+=a[i]-a[i-1];\n\t\t}\n\t\telse ans+=mid;\n\t\t}\n\t\tans+=mid;\n\t\tif(ans>=h)return 1;\n\t\telse return 0;\n}\nint fun(int h,int n)\n{\n\tint l=0,r=h-1;\n\twhile(l<r){\n\t\tint mid = (l+r)/2;\n\t    if(cheak(n,h,mid)){\n\t    \tr=mid;\n\t    }\n\t\telse l=mid+1;\n\t}\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n;\n\t\tint h;\n\t\tscanf(\"%d%d\",&n,&h);\n\t\tfor(int i=0;i<n;++i){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tint k;\n\t\tk=fun(h,n);\n\t\tprintf(\"%d\\n\",k);\n\t}\n\treturn 0;\n}\n\t\t    \t\t \t\t \t\t\t      \t   \t\t \t\t\t", "fixed": "#include<stdio.h>\nlong long a[105];\nlong long n;\nlong long h;\nlong long cheak(long long mid){\n\tlong long ans=0;\n\tfor(long long i=1;i<n;++i){\n\t\tif(a[i]-a[i-1]<=mid){\n\t\t\tans+=a[i]-a[i-1];\n\t\t}\n\t\telse ans+=mid;\n\t\t}\n\t\tans+=mid;\n\t\tif(ans>=h)return 1;\n\t\telse return 0;\n}\nlong long fun()\n{\n\tlong long l=1,r=h;\n\twhile(l<r){\n\t\tlong long mid = (l+r)/2;\n\t    if(cheak(mid)){\n\t    \tr=mid;\n\t    }\n\t\telse l=mid+1;\n\t}\n\treturn r;\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%lld%lld\",&n,&h);\n\t\tfor(long long i=0;i<n;++i){\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\t}\n\t\tlong long k;\n\t\tk=fun();\n\t\tprintf(\"%lld\\n\",k);\n\t}\n\treturn 0;\n}\n\t   \t \t  \t   \t\t\t\t\t\t \t   \t \t \t"}
{"similarity_score": 0.9979296066252588, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "04019a167b9a76c7e28cdbfce5ada299", "bug_code_uid": "778aec29cbbe8d40eb6ef6764862753d", "src_uid": "994a9cb52cf0fdab72be068eab1b27ef", "apr_id": "1ca4736c318a0cc6c72744616cc2d99c", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tlong long int a, b;\r\n\t\tscanf(\"%lld %lld\",&a,&b);\r\n\t\tif(a == b)\r\n\t\t{\r\n\t\t\tprintf(\"0 0\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tlong long int maxgcd= a-b;\r\n\t\tif(maxgcd < 0)\r\n\t\t{\r\n\t\t\tmaxgcd= 0-maxgcd;\r\n\t\t}\r\n\t\tprintf(\"%lld \",maxgcd);\r\n\t\tlong long int mod= a%maxgcd;\r\n\t\tprintf(\"%lld\\n\",mod);\r\n\t\tif(mod <= maxgcd/2)\r\n\t\t{\r\n\t\t\tprintf(\"%lld\\n\",mod);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"%lld\\n\",maxgcd-mod);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tlong long int a, b;\r\n\t\tscanf(\"%lld %lld\",&a,&b);\r\n\t\tif(a == b)\r\n\t\t{\r\n\t\t\tprintf(\"0 0\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tlong long int maxgcd= a-b;\r\n\t\tif(maxgcd < 0)\r\n\t\t{\r\n\t\t\tmaxgcd= 0-maxgcd;\r\n\t\t}\r\n\t\tprintf(\"%lld \",maxgcd);\r\n\t\tlong long int mod= a%maxgcd;\r\n\t\t//printf(\"%lld\\n\",mod);\r\n\t\tif(mod <= maxgcd/2)\r\n\t\t{\r\n\t\t\tprintf(\"%lld\\n\",mod);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"%lld\\n\",maxgcd-mod);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.06386554621848739, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "0856c44b32b2a87d2daf453790853a6c", "bug_code_uid": "045e58c3d6acf0c7c753a507027575fe", "src_uid": "5358fff5b798ac5e500d0f5deef765c7", "apr_id": "f753e7a7863c1a39ce4e19319e676f84", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <cstdio>\n\n#define ll long long\n\nusing namespace std;\n\nint main()\n{\n\tint n, d, m, l;\n\tll p = 0;\n\tscanf( \"%d%d%d%d\", &n, &d, &m, &l );\n\twhile(1)\n\t{\n\t\tif( p%m>l || p/n>=m )\n\t\t{\n\t\t\tprintf( \"%lld\", p );\n\t\t\tbreak;\n\t\t}\n\t\tif( p && p%m==0 )\n\t\t{\n\t\t\tprintf( \"%lld\", (((ll)n*m+d-1)/d)*d );\n\t\t\tbreak;\n\t\t}\n\t\tp += d;\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n, s[100000], ans, i, l, r;\n\nint main()\n{\n\tscanf( \"%d\", &n );\n\tfor( i = 0; i < n; i++ )\n\t{\n\t\tscanf( \"%d\", &s[i] );\n\t\tr += s[i];\n\t}\n\tfor( i = 0; i < n-1; i++ )\n\t{\n\t\tl += s[i], r -= s[i];\n\t\tif( l==r ) ans++;\n\t}\n\tprintf( \"%d\", ans );\n\treturn 0;\n}\n"}
{"similarity_score": 0.6340352874217416, "equal_cnt": 18, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "008128d5a02f773c55d241be51df0034", "bug_code_uid": "15b200ed4acaa7073d6d9dabbcd7bfc0", "src_uid": "d7601c9bb06a6852f04957fbeae54925", "apr_id": "a688755c96b2226855f51b11ed0d98dc", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\n#define MAX 100\n\nint main( void ) {\n\tint i, j;\n\tint n, m;\n\tchar p, colors[MAX + 1][MAX + 1];\n\tint deputies = 0;\n\tbool processed[MAX + 1] =  {false};\n\n\tscanf (\"%d %d %c\", &n, &m, &p);\n\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++){\n\t\t\tscanf (\"%c\", &colors[i][j]);\n\t\t}\n\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++)\n\t\t\tif (colors[i][j] != p && colors[i][j] != '.' && !processed[colors[i][j] - 'A']) {\n\t\t\t\tif (i > 0)\n\t\t\t\t\tif (colors[i - 1][j] == p) {\n\t\t\t\t\t\tdeputies++;\n\t\t\t\t\t}\n\t\t\t\tif (j > 0)\n\t\t\t\t\tif (colors[i][j - 1] == p)\n\t\t\t\t\t\tdeputies++;\n\t\t\t\tif (i < n)\n\t\t\t\t\tif (colors[i + 1][j] == p)\n\t\t\t\t\t\tdeputies++;\n\t\t\t\tif (j < m)\n\t\t\t\t\tif (colors[i][j + 1] == p)\n\t\t\t\t\t\tdeputies++;\n\t\t\t\tprocessed[colors[i][j] - 'A'] = true;\n\t\t\t}\n\n\t\t\tprintf(\"%d\\n\", deputies);\n} ", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n\n#define MAX 1000\n\nint main( void ) {\n\tint i, j;\n\tint n, m;\n\tchar p, colors[MAX + 1][MAX + 1];\n\tint deputies = 0;\n\tbool processed[MAX + 1] =  {false};\n\tbool proc = false;\n\n\tscanf (\"%d %d %c\", &n, &m, &p);\n\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++){\n\t\t\tscanf (\"%1s\", &colors[i][j]);\n\t\t}\n\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < m; j++) {\n\t\t\tproc = false;\n\t\t\tif (colors[i][j] != p && colors[i][j] != '.' && !processed[colors[i][j]]) {\n\t\t\t\tif (i > 0)\n\t\t\t\t\tif (colors[i - 1][j] == p) {\n\t\t\t\t\t\tdeputies++;\n\t\t\t\t\t\tproc = true;\n\t\t\t\t\t}\n\t\t\t\tif (j > 0)\n\t\t\t\t\tif (colors[i][j - 1] == p){\n\t\t\t\t\t\tdeputies++;\n\t\t\t\t\t\tproc = true;\n\t\t\t\t\t}\n\t\t\t\tif (i < n - 1)\n\t\t\t\t\tif (colors[i + 1][j] == p){\n\t\t\t\t\t\tdeputies++;\n\t\t\t\t\t\tproc = true;\n\t\t\t\t\t}\n\t\t\t\tif (j < m - 1)\n\t\t\t\t\tif (colors[i][j + 1] == p){\n\t\t\t\t\t\tdeputies++;\n\t\t\t\t\t\tproc = true;\n\t\t\t\t\t}\n\t\t\t\tif (proc) processed[colors[i][j]] = true;\n\t\t\t}\n\t\t}\n\n\tprintf(\"%d\\n\", deputies);\n\n\treturn 0;\n} "}
{"similarity_score": 0.9783132530120482, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "57892fa90244cde4f26e0aa9f666512d", "bug_code_uid": "87b5d6d81f3af0caefa7da27d32a8fac", "src_uid": "2b37f27a98ec8f80d0bff3f7ae8f2cff", "apr_id": "3f83e28baeb255b45f1178ef00f9f627", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\nint num,i,j,sort,cart,tt;\nscanf(\"%d\",&tt);\nwhile(tt--){\n    scanf(\"%d %d\",&num,&sort);\n    i=0;\n    while(i<(num-1)){\n        j=0;\n        while(j<sort){\n            printf(\"B\");\n            j+=1;\n        }\n        printf(\"\\n\");\n        i+=1;\n    }\n    j=0;\n    while(j<(sort-1)){\n        printf(\"B\");\n        j+=1;\n    }\n    printf(\"W\");\n}\n\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\nint num,i,j,sort,cart,tt;\nscanf(\"%d\",&tt);\nwhile(tt--){\n    scanf(\"%d %d\",&num,&sort);\n    i=0;\n    while(i<(num-1)){\n        j=0;\n        while(j<sort){\n            printf(\"B\");\n            j+=1;\n        }\n        printf(\"\\n\");\n        i+=1;\n    }\n    j=0;\n    while(j<(sort-1)){\n        printf(\"B\");\n        j+=1;\n    }\n    printf(\"W\");\n    printf(\"\\n\");\n}\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.44244105409153955, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "8d1f1d2079669796a2c28b715262cf8e", "bug_code_uid": "7a9fc8743aa0f24f0848b3a1b97df803", "src_uid": "6e5b4d43e64645cf26d5eac31437b1a9", "apr_id": "48024561afc6f87fe0a25e71efd406ed", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n    int t, flag = 0;\n    scanf(\"%d\", &t);\n    for(int i = 0; i < t; i++){\n        int n;\n        flag = 0;\n        scanf(\"%d\", &n);\n        for(int j = 0; j < n; j++){\n            int a;\n            scanf(\"%d\", &a);\n            \n            if(a < 0)\n                flag = 1;\n        }\n\n        if(!flag)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <limits.h>\n\nint cakes[100000];\nlong long max_segment(int *arr, const int len){\n    long long best_sum = arr[0];\n    long long curr_sum = arr[0];\n    for(int i = 1; i < len; i++){\n        curr_sum = (arr[i] > curr_sum + arr[i]) ? arr[i] : curr_sum + arr[i];\n        best_sum = (best_sum > curr_sum) ? best_sum : curr_sum;\n    }\n\n    return best_sum;\n}\n\nint main(){\n    int t;\n    scanf(\"%d\", &t);\n    for(int i = 0; i < t; i++){\n        int n;\n        long long yasser = 0;\n        long long l, r, x;\n        scanf(\"%d\", &n);\n        for(int j = 0; j < n; j++){\n            scanf(\"%d\", &cakes[j]);\n            yasser += cakes[j];\n        }\n\n        l = max_segment(cakes, n - 1);\n        r = max_segment(cakes + 1, n - 1);\n\n        x = (l > r) ? l : r;\n\n        if(yasser > x){\n            printf(\"YES\\n\");\n        }  \n        else{\n            printf(\"NO\\n\");\n        }\n            \n    }\n    return 0;\n}"}
{"similarity_score": 0.9626168224299065, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c893298d19adc8449b317f004f35c228", "bug_code_uid": "7b7eac591e6e51a169af3c3883c25e13", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "d2d784466f0fe5f5a6302d30cc1568c5", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long long int a,b;\r\n        scanf(\"%lld%lld\",&a,&b);\r\n        if(b==1){\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        long long int m=a*b;\r\n        long long int p=a;\r\n        long long int q=a*(b-1);\r\n       \r\n        printf(\"YES\\n\");\r\n        printf(\"%lld %lld %lld\\n\",p,q,m);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long long int a,b;\r\n        scanf(\"%lld%lld\",&a,&b);\r\n        if(b==1){\r\n            printf(\"NO\\n\");\r\n            continue;\r\n        }\r\n        if(b==2)\r\n        b=4;\r\n        long long int m=a*b;\r\n        long long int p=a;\r\n        long long int q=a*(b-1);\r\n       \r\n        printf(\"YES\\n\");\r\n        printf(\"%lld %lld %lld\\n\",p,q,m);\r\n    }\r\n}"}
{"similarity_score": 0.9785056294779939, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8b624d555a454944b3f5e2d3f3386561", "bug_code_uid": "650deccfa0f41386ee4283672834046c", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "1baab3b5468106856af4a06b2f8a6457", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int ara[n][2],sum=0,i,j,enter,sum1,sum2;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i][0]);\n        scanf(\"%d\",&ara[i][1]);\n        printf(\"\\n\");\n    }\n    enter=ara[0][1];\n    for(i=0,j=1;i<n-1;i++,j++)\n    {\n        sum1=enter-ara[j][0];\n        sum2=sum1+ara[j][1];\n        if(sum2>sum)\n        {\n            sum=sum2;\n        }\n        enter=sum1+ara[j][1];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int ara[n][2],sum,i,j,enter,sum1,sum2;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ara[i][0]);\n        scanf(\"%d\",&ara[i][1]);\n        printf(\"\\n\");\n    }\n    enter=ara[0][1];\n    sum=ara[0][1];\n    for(i=0,j=1;i<n-1;i++,j++)\n    {\n        sum1=enter-ara[j][0];\n        sum2=sum1+ara[j][1];\n        if(sum2>sum)\n        {\n            sum=sum2;\n        }\n        enter=sum1+ara[j][1];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.33657587548638135, "equal_cnt": 18, "replace_cnt": 16, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "3a9bed41bb1d2b474c1599dda5f5165c", "bug_code_uid": "2a639ec48c609b62b77e6eb3c1e8d034", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "73cd510d6a4a507fed8122e0b1e86758", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n__int64 gcd(__int64 a,__int64 b)\n{\n    __int64 t=a%b;\n    while(t!=0)\n    {\n        a=b;\n        b=t;\n        t=a%b;\n    }\n    return b;\n}\nint main()\n{\n    __int64 n,a,b,x,res,t,i,j;\n    while(scanf(\"%I64d%I64d%I64d\",&n,&a,&b) != EOF)\n    {\n        t=gcd(a,b);\n        b/=t;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%I64d\",&x);\n            t=x/b;res=x;\n            for(j=0;j<=x;j++)\n                if((x-j)%b==0)\n                {\n                    res=j;\n                    break;\n                }\n            printf(\"%I64d\",res);\n            if(i!=n-1)\n                printf(\" \");\n            else\n                printf(\"\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long n,a,b,x,res,t,i,j;\n\twhile(scanf(\"%I64d%I64d%I64d\",&n,&a,&b) != EOF)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%I64d\",&x);\n\t\t\tt=x*a/b;\n\t\t\tif(t*b%a==0)\n\t\t\t\tres=x-t*b/a;\n\t\t\telse\n\t\t\t\tres=x-t*b/a-1;\n\t\t\tprintf(\"%I64d\",res);\n\t\t\tif(i!=n-1)\n\t\t\t\tprintf(\" \");\n\t\t\telse\n\t\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7936507936507936, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "107a4deecb727db535c5e9e10620f79a", "bug_code_uid": "e6064d3a2eaf2a2db4c02b3c2176f786", "src_uid": "779ab09a588bbb52485ae5b6a441b235", "apr_id": "e18df92a58ec7c22b1c1e5c8da3d23b7", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main(void)\r\n{\r\n    int n,m=0;\r\n    int a[1000]={};\r\n    int tmp=0;\r\n\r\n    scanf(\"%d\",&m);\r\n\r\n    for(int k=0;k<m;++k)\r\n    {\r\n        memset(a,0,sizeof(a));\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;++i)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(int i=0;i<n-1;++i)\r\n        {\r\n            for(int j=0;j<n-1-i;++j)\r\n            {\r\n                if(a[j]>a[j+1])\r\n                {\r\n                    tmp = a[j];\r\n                    a[j] = a[j+1];\r\n                    a[j+1] = tmp;\r\n                }\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\",a[n-1]);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main(void)\r\n{\r\n    int n,m=0;\r\n    int a[1000][2]={};\r\n    int tmp,tmp2=0;\r\n\r\n    scanf(\"%d\",&m);\r\n\r\n    for(int k=0;k<m;++k)\r\n    {\r\n        memset(a,0,sizeof(a));\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;++i)\r\n        {\r\n            scanf(\"%d\",&a[i][0]);\r\n            a[i][1]=i+1;\r\n        }\r\n        for(int i=0;i<n-1;++i)\r\n        {\r\n            for(int j=0;j<n-1-i;++j)\r\n            {\r\n                if(a[j][0]>a[j+1][0])\r\n                {\r\n                    tmp = a[j][0];\r\n                    tmp2 = a[j][1];\r\n                    a[j][0] = a[j+1][0];\r\n                    a[j][1] = a[j+1][1];\r\n                    a[j+1][0] = tmp;\r\n                    a[j+1][1] = tmp2;\r\n                }\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\",a[n-1][1]);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8629032258064516, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "8300ea909d65290c47d9c09b2fdf3bcd", "bug_code_uid": "cb9d4d30047174ba6c0022a2f95c0d7a", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "bf74687a9eb87466d00fedce8b59ebef", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n\tlong long int x,y,i,arr[10005],t=0;\n\tscanf(\"%lld %lld\",&x,&y);\n\tfor(i=0;i<x;i++){\n\t\tscanf(\"%lld\",&arr[i]);\n\t\tt+=arr[i];\n\t\tif(t==y){\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(t>y){\n\t\t\tprintf(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n", "fixed": "#include<stdio.h>\nmain(){\n\tlong long int x,y,i,arr[30005]={0},t=0;\n\tscanf(\"%lld %lld\",&x,&y);\n\tfor(i=0;i<x-1;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\tfor(t=0;;){\n\t\tt+=arr[t];\n\t\tif(t==y-1){\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(t>y-1)break;\n\t}\n\tprintf(\"NO\");\n}\n"}
{"similarity_score": 0.19014084507042253, "equal_cnt": 29, "replace_cnt": 24, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "350bd95055287f93f02bcfd7ac79da6b", "bug_code_uid": "5d3b7dc6644455ecb8d246adbd7bad0a", "src_uid": "98c08a3b5e5b5bb78804ff797ba24d87", "apr_id": "9c59530efdfef107f4ca635290e90d95", "difficulty": 1000, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t,k;\n\tscanf(\"%d\",&t);\n\tchar h[1000000][1000000];//100005\n\tchar g[1]={'1'};\n\tfor(k=0;k<t;k++)\n\t{\n\t\n\tchar a[1000000];\n\tint i,j,count=1;\n\tscanf(\"%s\",a);\n\tchar b[3]={'a','b','c'};\n\t\n\tfor(i=0;i<strlen(a);i++)\n\t{\n\t\tif(a[i]=='?')\n\t\t{\n\t\t\tfor(j=0;j<3;j++)\n\t\t\t{\n\t\t\t\tif((b[j]!=a[i-1])&&(b[j]!=a[i+1]))\n\t\t\t\t{\n\t\t\t\t\ta[i]=b[j];\n\t\t\t\t\tcount=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tfor(i=0;i<strlen(a);i++)\n\t{\n\t\tif(a[i]==a[i+1])\n\t\t{\n\t\t\tcount=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(count==0)\n\tstrcpy(h[k],a);\n\telse\n\t{\n\t\t\n\t\tstrcpy(h[k],g);\n\t}\n\t\n}\nfor(k=0;k<t;k++)\n{\n\tif(strcmp(h[k],g)==0)\n\t{\n\t\tprintf(\"-1\\n\");\n\t}\n\telse\n\tprintf(\"%s\\n\",h[k]);\n}\n}", "fixed": "#include<stdio.h>\n#include<string.h.>\nint main ()\n{\n    int t;\n    scanf(\"%d \",&t);\n    while(t--)\n    {\n        char s[1000000];\n        gets(s);\n        int i;\n \n        for(i=0;s[i];i++)\n        {\n            if(s[i]==s[i+1] && (s[i]=='a' || s[i]=='b' || s[i]=='c'))\n            {\n                printf(\"-1\\n\");\n                goto x;\n            }\n        }\n \n        for(i=0;s[i];i++)\n        {\n            if(s[i]=='?')\n            {\n                if(s[i-1]!='a' && s[i+1]!='a')\n                    s[i]='a';\n                    else if(s[i-1]!='b' && s[i+1]!='b')\n                    s[i]='b';\n                     else if(s[i-1]!='c' && s[i+1]!='c')\n                    s[i]='c';\n \n            }\n        }\n        puts(s);\n \n        x : 1;\n    }\n}"}
{"similarity_score": 0.5069222577209798, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "b49e92e7ab5f6f3ed5a345ccd890753b", "bug_code_uid": "4e760f1ee74ed6dcb804c3bc256f070f", "src_uid": "44162a97e574594ac0e598368e8e4e14", "apr_id": "240e4ae7cec90f6cb76b00e50b5df4f1", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\n\tint a ,b ,i ,j ,temp;\n\tscanf(\"%d%d\", &a ,&b);\n\tint real[a] ,dummy[a];\n\tfor(i=0;i<a;i++){\n\t\t scanf(\"%d\",&real[i]);\n\t     dummy[i]=real[i];\n\t}\n\tint num[3];\n\twhile(b--){\n\t\tfor(i=0;i<3;i++) scanf(\"%d\", &num[i]);\n\t\tfor(i=num[0]-1;i<num[1]-1;i++){\n\t\t\tfor(j=i+1;j<num[1];j++){\n\t\t\t\tif(dummy[i]>dummy[j]){\n\t\t\t\t\ttemp=dummy[j];\n\t\t\t\t\tdummy[j]=dummy[i];\n\t\t\t\t\tdummy[i]=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t   \tif(real[num[2]-1]==dummy[num[2]-1]) printf(\"YES\\n\");\n\t   \telse printf(\"NO\\n\");\n\t   \tfor(i=0;i<a;i++) dummy[i]=real[i];\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\n\tint a ,b ,i ,c=0;\n\tscanf(\"%d%d\", &a ,&b);\n\tint real[a];\n\tfor(i=0;i<a;i++){\n\t\t scanf(\"%d\",&real[i]);\n\t}\n\tint num[3];\n\twhile(b--){\n\t\tc=0;\n\t\tfor(i=0;i<3;i++) scanf(\"%d\", &num[i]);\n\t    for(i=num[0]-1;i<num[1];i++) {\n\t    \tif(real[num[2]-1]>real[i]) {\n\t    \tc++;\n\t\t\t}\t\n\t\t}\n\t\tif(c+num[0]==num[2]) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.7299864314789688, "equal_cnt": 20, "replace_cnt": 13, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "7fb878115ed2054e12c602c15f06c243", "bug_code_uid": "39457466aea9f21a57a101a6ed4f96fe", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "6800781cd9fae2dc283a0c76d2d38962", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    long int l;\n    scanf(\"%d %ld\",&n,&l);\n    long int a[1002];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n-i;j++)\n                {\n                    if(a[i]>a[j])\n                    {\n                        long int temp=a[i];\n                        a[i]=a[j];\n                        a[j]=temp;\n                    }\n                }\n    }\n    double ans[1002]\n        ans[0]=a[0];\n        ans[n-1]=l-a[n-1];\n        for(i=1;i<n-1;i++)\n        {\n            ans[i]=(a[i]-a[i-1])/2;\n        }\n    double max=0;\n    for(i=0;i<n;i++)\n    {\n        if(ans[i]>max)\n        max=ans[i];\n    }\n    printf(\"%.9lf\\n\",max);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j;\n    long int l;\n    scanf(\"%d %ld\",&n,&l);\n    long int a[1002];\n    double dist[1002];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n                {\n                    if(a[i]<a[j])\n                    {\n                        long int temp=a[i];\n                        a[i]=a[j];\n                        a[j]=temp;\n                    }\n                }\n   }\n   dist[0]=a[0];\n   dist[n]=l-a[n-1];\n   double max=0;\n   for(i=1;i<n;i++)\n   {dist[i]=((float)(a[i])-(float)(a[i-1]))/(float)(2);\n   }\n   for(i=0;i<=n;i++)\n\t{\n\t\t{if(dist[i]>max)\n\t\tmax=dist[i];\n\t}}\n   printf(\"%.10lf\\n\",max);\n   \n    return 0;}\n"}
{"similarity_score": 0.9841456253669995, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4e8ea3d3568c32b1f03f4d2a40f62d5e", "bug_code_uid": "288b5bfa633ec07a9f62977a3ff8f274", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "45a9aebfdea88afec2f3411f56c738b7", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid r_pivot(long int *a,long int *b)\n{\n    srand(time(0));\n    long int i, *r=a+(rand()%(b-a+1));\n    i=*r;*r=*a;*a=i;\n}\nlong int h_partition(long int *a,long int *b)\n{\n    r_pivot(a,b);\n    long int pvt=*a, j;\n    a--;b++;\n    while(1)\n    {\n        while(1)\n        {\n            a++;\n            if(*a>=pvt)break;\n        }\n        while(1)\n        {\n            b--;\n            if(*b<=pvt)break;\n        }\n        if(a>=b) return b;\n        else {j=*a;*a=*b;*b=j;}\n    }\n\n}\nvoid sort(long int *a,long int *b)\n{\n    if(a<b)\n    {\n        long int *p=h_partition(a,b);\n        sort(a,p);\n        sort(p+1,b);\n    }\n}\nint main()\n{\n    int n, m, i, sum=0;\n    scanf(\"%d%d\",&n,&m);\n    int a[n];\n    for(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n    sort(a,a+n-1);\n    for(i=0;i<m;i++) sum+=a[i];\n    printf(\"%d\",sum<0?-1*sum:0);\n}\n", "fixed": "#include <stdio.h>\n\nvoid r_pivot(long int *a,long int *b)\n{\n    srand(time(0));\n    long int i, *r=a+(rand()%(b-a+1));\n    i=*r;*r=*a;*a=i;\n}\nlong int h_partition(long int *a,long int *b)\n{\n    r_pivot(a,b);\n    long int pvt=*a, j;\n    a--;b++;\n    while(1)\n    {\n        while(1)\n        {\n            a++;\n            if(*a>=pvt)break;\n        }\n        while(1)\n        {\n            b--;\n            if(*b<=pvt)break;\n        }\n        if(a>=b) return b;\n        else {j=*a;*a=*b;*b=j;}\n    }\n\n}\nvoid sort(long int *a,long int *b)\n{\n    if(a<b)\n    {\n        long int *p=h_partition(a,b);\n        sort(a,p);\n        sort(p+1,b);\n    }\n}\n\nint main()\n{\n    int n, m, i, sum=0;\n    scanf(\"%d%d\",&n,&m);\n    int a[n];\n    for(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n    sort(a,a+n-1);\n    for(i=0;i<m&&a[i]<0;i++)\n        sum+=a[i];\n    printf(\"%d\",sum<0?-1*sum:0);\n}\n"}
{"similarity_score": 0.9953775038520801, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "14bef054208303d0775f2f31d33db6ab", "bug_code_uid": "58d2893dcc23adc32f3075a93c66cf86", "src_uid": "c7a5b4a015e28dd3759569bbdc130e93", "apr_id": "509e79f3e0ce4ac6cb37e7e6cb4e2d86", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        char s;\r\n        scanf(\"%s\",&s);\r\n        int s1=s[0]+s[1]+s[2];\r\n        int s2=s[3]+s[4]+s[5];\r\n        if(s1==s2){\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else{\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        char s[6];\r\n        scanf(\"%s\",&s);\r\n        int s1=s[0]+s[1]+s[2];\r\n        int s2=s[3]+s[4]+s[5];\r\n        if(s1==s2){\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else{\r\n            printf(\"No\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9963235294117647, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "20fc1c935ea83f4ef3d6e9a05b3e8585", "bug_code_uid": "5b187d33898a4fc88eb8584d3326a199", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "477e8e285306f826a2395bb93dd9cc26", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int i,j,n,m;\r\n    scanf(\"%d\",&j);\r\n     while(j--)\r\n     {\r\n\r\nscanf(\"%d\",&n);\r\nm=1;\r\n\r\n        for(i=1;m<n;i++)\r\n        {\r\n\r\n        if(i%3!=0&&i%10!=3)\r\n\r\n                m++;\r\n\r\n        }\r\n        printf(\"%d\\n\",i-1);\r\n     }\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int i,j,n,m;\r\n    scanf(\"%d\",&j);\r\n     while(j--)\r\n     {\r\n\r\nscanf(\"%d\",&n);\r\nm=0;\r\n\r\n        for(i=1;m<n;i++)\r\n        {\r\n\r\n        if(i%3!=0&&i%10!=3)\r\n\r\n                m++;\r\n\r\n        }\r\n        printf(\"%d\\n\",i-1);\r\n     }\r\n}\r\n\r\n"}
{"similarity_score": 0.9613420860685631, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ccf1012e56c81dba22b1c0f7fbe7e6f8", "bug_code_uid": "36b8b7d2aa002f90e3fbb3daed474647", "src_uid": "33a31edb75c9b0cf3a49ba97ad677632", "apr_id": "8ded378c25af44b1d1858da023ab7c29", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint squarecheck(int n)\r\n{\r\n    if((n-pow(sqrt(n),2))==0)\r\n    return 1;\r\n    else \r\n    return 0;\r\n}\r\nvoid arraycheck(int *p,int n)\r\n{\r\n    int ans=0;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        ans=squarecheck(*(p+i));\r\n        if(ans==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n            break;\r\n        }\r\n    }\r\n    if(ans==1)\r\n    printf(\"NO\\n\");\r\n}\r\nint main()\r\n{\r\n    int n,m;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        int arr[m];\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            scanf(\"%d\",&arr[j]);\r\n            \r\n        }\r\n        arraycheck(arr,m);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint squarecheck(int n)\r\n{\r\n    float p=sqrt(n);\r\n    int p1=p;\r\n    if(p1==p)\r\n    return 1;\r\n    else \r\n    return 0;\r\n}\r\nvoid arraycheck(int *p,int n)\r\n{\r\n    int ans=0;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        ans=squarecheck(*(p+i));\r\n        if(ans==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n            break;\r\n        }\r\n    }\r\n    if(ans==1)\r\n    printf(\"NO\\n\");\r\n}\r\nint main()\r\n{\r\n    int n,m;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        int arr[m];\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            scanf(\"%d\",&arr[j]);\r\n            \r\n        }\r\n        arraycheck(arr,m);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9135802469135802, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0f42898063b331af829f643d95313fec", "bug_code_uid": "f6febe9f3f65340d29d00494976c4746", "src_uid": "8e423e4bec2d113612a4dc445c4b86a9", "apr_id": "aaa000d9b372a1be656a8004c496c756", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define day 86400\n\nint main() {\n\n\tint n, t, i;\n\tint sum=0;\n\tint days = 0;\n\tint *a;\n\n\n\tscanf(\"%d %d\\n\", &n, &t);\n\ta = (int*)malloc(n * sizeof(int));\n\t\n\tfor (i = 0; i < n; i++) {\n\t\tsum += day - a[i];\n\t\tdays++;\n\t\tif (sum >= t) break;\n\t}\n\tprintf(\"%d\\n\", days);\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define day 86400\n\nint main() {\n\n\tint n, t, i;\n\tint sum = 0;\n\tint days = 0;\n\tint *a;\n\n\tscanf(\"%d %d\\n\", &n, &t);\n\ta = (int*)malloc(n * sizeof(int));\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tsum += day - a[i];\n\t\tdays++;\n\t\tif (sum >= t) break;\n\t}\n\tprintf(\"%d\\n\", days);\n\t\n}"}
{"similarity_score": 0.9973226238286479, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "55c513c28618727bb0055d50d530cb91", "bug_code_uid": "eeab0442b78bf7e108b89b6176b146b6", "src_uid": "b3c6058893f935d88196113fab581cf8", "apr_id": "b2ff1d0ecb865add9c564d2c64095f8c", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<time.h>\nint main()\n{\nlong int a[3000];\nlong int b[3000];\nlong int temp;\nint no=0;\nint flag=0;\nint i,j,k=0;\n//int temp;\nint index;\nlong int key;\nint count=0;\nscanf(\"%d\",&no);\n//printf(\"no=%d\\n\",no);\nfor(i=0; i<no; i++)\n{\nscanf(\"%ld\",&a[i]);\n//printf(\"arr[%d]=%d\\n\",i,a[i]);\n\n}\n//printf(\"here\");\nfor(i=0;i<no-1;i++)\n{\n    flag=0;\n    key=a[i];\nfor(j=i+1;j<no;j++)\n{\n        if(key>a[j])\n        {\n            key=a[j];\n            index=j;\n            flag=1;\n        }\n}\nif(flag)\n{\n    b[k]=i;\n    k++;\n    b[k]=index;\n    k++;\ntemp=a[i];\na[i]=a[index];\na[index]=temp;\ncount++;\n}\n}\nprintf(\"%d\\n\",count);\nfor(k=0;k<2*count;k=k+2)\n{\n    printf(\"%ld %ld\\n\",b[k],b[k+1]);\n}\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<time.h>\nint main()\n{\nlong int a[6000];\nlong int b[6000];\nlong int temp;\nint no=0;\nint flag=0;\nint i,j,k=0;\n//int temp;\nint index;\nlong int key;\nint count=0;\nscanf(\"%d\",&no);\n//printf(\"no=%d\\n\",no);\nfor(i=0; i<no; i++)\n{\nscanf(\"%ld\",&a[i]);\n//printf(\"arr[%d]=%d\\n\",i,a[i]);\n\n}\n//printf(\"here\");\nfor(i=0;i<no-1;i++)\n{\n    flag=0;\n    key=a[i];\nfor(j=i+1;j<no;j++)\n{\n        if(key>a[j])\n        {\n            key=a[j];\n            index=j;\n            flag=1;\n        }\n}\nif(flag)\n{\n    b[k]=i;\n    k++;\n    b[k]=index;\n    k++;\ntemp=a[i];\na[i]=a[index];\na[index]=temp;\ncount++;\n}\n}\nprintf(\"%d\\n\",count);\nfor(k=0;k<2*count;k=k+2)\n{\n    printf(\"%ld %ld\\n\",b[k],b[k+1]);\n}\n\nreturn 0;\n}\n"}
{"similarity_score": 0.8833333333333333, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "cafd6621ccbf12c8ad95b311e87d32f3", "bug_code_uid": "71eebe3f7f5fc524fcb73f10f0e4e5c2", "src_uid": "b3108315889607dabcd3112bcfe3fb54", "apr_id": "32de81236054b3647f062ed322a3ed89", "difficulty": 1700, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n\tlong long int i,j,k,l,n,m=6;\n\tscanf(\"%lld\",&n);\n\tprintf(\"15\\n10\\n\");\n\tfor(i=2;i<n;i++,m*=2)\n\t\tprintf(\"%lld\\n\",m);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main() {\n\tlong long int i,j,k,l,n,m=6;\n\tscanf(\"%lld\",&n);\n\tif(n==2)\n\t\tprintf(\"-1\\n\");\n\telse {\n\t\tprintf(\"15\\n10\\n\");\n\t\tfor(i=2;i<n;i++,m*=2)\n\t\t\tprintf(\"%lld\\n\",m);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.32148626817447495, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "da34c8d958df7f2b2a5e618f446636ba", "bug_code_uid": "b8dbbcc0b9458206f5473c94e7a459aa", "src_uid": "2be73aa00a13be5274cf840ecd3befcb", "apr_id": "30b037b5d34a0fa3556d865396d1bed1", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[100000][2];\n    int i,j,n,left=0,right=0,pos=0;\n    scanf(\"%d\\n\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i][0],&a[i][1]);\n        if(a[i][0]>a[i][1])\n            left++;\n        else if(a[i][0]<a[i][1])\n            right++;\n        }\n    if((left==0 && right!=0) || (right==0 && left!=0))\n        pos=0;\n    else if((left==right) && (left!=0))\n        pos=1;\n    else if(left>right){\n        for(i=0;i<n;i++){\n            if(a[i][0]<a[i][1]){\n                pos=i+1;\n                break;}\n        }\n    }\n    else if(left<right){\n        for(i=0;i<n;i++){\n            if(a[i][0]>a[i][1]){\n                pos=i+1;\n                break;}\n        }\n    }\n    printf(\"%d\",pos);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint main()\n{\n    int a[100000][2],max,kmax;\n    int i,j,n,left=0,right=0,pos=0;\n    scanf(\"%d\\n\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i][0],&a[i][1]);\n        left+=a[i][0];\n        right+=a[i][1];\n    }\n    max=abs(left-right);\n    for(i=0;i<n;i++){\n         kmax=abs((left-a[i][0]+a[i][1])-(right-a[i][1]+a[i][0]));\n         if(kmax>max){\n         max=kmax;\n         pos=i+1;}\n    }\n    printf(\"%d\",pos);\n    return 0;\n}"}
{"similarity_score": 0.5944206008583691, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "ef73a1f72206d77be6e730721b015672", "bug_code_uid": "464f2cffeb0d37f355c124d03f8b0e5c", "src_uid": "24098df9c12d9704391949c9ff529c98", "apr_id": "d64bc0176c05c72928c6ecc54be082d1", "difficulty": 1300, "tags": ["data structures", "implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int n,i,j,k,l,name,ok;\n    scanf(\"%d\",&n);\n    char a[n][50];\n    for(i=0;i<n;i++)\n        scanf(\"%s\",a[i]);\n    for(i=0;i<n;i++)\n    {\n        name=1,ok=0;\n        for(j=i-1;j>=0;j--)\n        {\n            if(strcmp(a[i],a[j])==0){\n                printf(\"%s%d\\n\",a[i],name++);\n                ok=1;\n            }\n        }\n        if(ok==0)\n            printf(\"OK\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int n,i,j,p=0;\n    scanf(\"%d\",&n);\n    char a[n][100],s[100];\n    int b[100000]={0}; //rank\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s);\n        for(j=0;j<p;j++)\n        {\n            if(strcmp(s,a[j])==0)\n            {\n\n                b[j]++;\n                printf(\"%s%d\\n\",s,b[j]);\n\n                break;\n            }\n        }\n        strcpy(a[j],s);\n        if(j==p)\n        {\n            printf(\"OK\\n\");\n            p++;\n        }\n    }\n}\n"}
{"similarity_score": 0.9841688654353562, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c106dccaa45011c191f50387a0995806", "bug_code_uid": "e558b3bb6bfcc092fe27448d11653f5f", "src_uid": "d646834d58c519d5e9c0545df2ca4be2", "apr_id": "4ea9df3c204171328a98bf1e8691f03e", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int m,n,a,b,p=0,i=0,b1=0;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++){\n        scanf(\"%d%d\",&a,&b);\n        if (b1>=b) b=b1;\n        b1=b;\n        if(a<=p){\n            if(p>b) p=b;\n            if(p>=m){\n                printf(\"YES\");\n                return 0;\n            }\n        }\n        else break;\n    }\n    printf(\"NO\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int m,n,a,b,p=0,i=0,b1=0;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++){\n        scanf(\"%d%d\",&a,&b);\n        if (b1>=b) b=b1;\n        b1=b;\n        if(a<=p){\n             p=b;\n            if(p>=m){\n                printf(\"YES\");\n                return 0;\n            }\n        }\n        else break;\n    }\n    printf(\"NO\");\nreturn 0;\n}\n"}
{"similarity_score": 0.9430051813471503, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0fedef685dadf238f486caf7bc7fa804", "bug_code_uid": "2116e2d9ede28a996a978eb4c4d8fd72", "src_uid": "d4bcc53b470e4beaa078d5ce3785c6cb", "apr_id": "0a1086aff8f24fa4dbf0bb955504262c", "difficulty": 800, "tags": ["brute force", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tint a,i,d,j,tmp,p,n;\r\n\tscanf(\"%d\",&a);\r\n\tint arr[1000];\r\n\tjump2:for(i=0;i<a;i++)\r\n\t{\r\n\t\tn=0;\r\n\t\tp=1;\r\n\t\tscanf(\"%d\",&d);\r\n\t\tfor(j=0;j<d;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&arr[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<d-1;j++)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\tgoto jump1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(j==d-1)\r\n\t\t{\r\n\t\t\tprintf(\"0\");\r\n\t\t\tgoto jump2;\r\n\t\t}\r\n\t\tjump1:while(1)\r\n\t\t{\r\n\t\tif(p%2==0)\r\n\t\t{\r\n\t\t\tj=1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tj=0;\r\n\t\t}\r\n\t\tfor(;j<d-1;j+=2)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\ttmp=arr[j+1];\r\n\t\t\t\tarr[j+1]=arr[j];\r\n\t\t\t\tarr[j]=tmp;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tp++;\r\n\t\tfor(j=0;j<d-1;j++)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\tn++;\r\n\t\t\t\tgoto jump1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",p-1);\r\n\t\tbreak;\r\n\t}\r\n}\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tint a,i,d,j,tmp,p,n;\r\n\tscanf(\"%d\",&a);\r\n\tint arr[1000];\r\n\tfor(i=0;i<a;i++)\r\n\t{\r\n\tjump2:\tif(i>=a)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tn=0;\r\n\t\tp=1;\r\n\t\tscanf(\"%d\",&d);\r\n\t\tfor(j=0;j<d;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&arr[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<d-1;j++)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\tgoto jump1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(j==d-1)\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\ti++;\r\n\t\t\tgoto jump2;\r\n\t\t}\r\n\t\tjump1:while(1)\r\n\t\t{\r\n\t\tif(p%2==0)\r\n\t\t{\r\n\t\t\tj=1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tj=0;\r\n\t\t}\r\n\t\tfor(;j<d-1;j+=2)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\ttmp=arr[j+1];\r\n\t\t\t\tarr[j+1]=arr[j];\r\n\t\t\t\tarr[j]=tmp;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tp++;\r\n\t\tfor(j=0;j<d-1;j++)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\tn++;\r\n\t\t\t\tgoto jump1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",p-1);\r\n\t\tbreak;\r\n\t}\r\n}\r\n}"}
{"similarity_score": 0.9285714285714286, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "114c9c519c245e876beb61ea7f406c62", "bug_code_uid": "4b2083db1ec57f256c3485d3b28f1056", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "62dedaf9332c34c322ece98e7c6dfd68", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char x[100100];\n    int i;\n    int flag=0;\n        scanf(\"%s\",x);\n        for(i=0;i<strlen(x);i++)\n            {\n                if(flag==0 && (i+1)<(strlen(x)))\n\n                    {\n          if(x[i]== '1'){\n                printf(\"%c\",x[i]);\n          }\n          else  {flag=1;break;}\n                        }\n            }\n                for(i=i+1;i<strlen(x);i++)\n                    {\n\n                    printf(\"%c\",x[i]);\n\n\n            }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char x[100010];\n    int i;\n    int m;\n    int flag=0;\n        scanf(\"%s\",x);\n        m=strlen(x);\n        for(i=0;i<m;i++)\n\n            {\n                if(flag==0 && (i+1)<(m))\n\n                    {\n          if(x[i]== '1'){\n                printf(\"%c\",x[i]);\n          }\n          else  {flag=1;break;}\n                        }\n            }\n                for(i=i+1;i<m;i++)\n                    {\n                    printf(\"%c\",x[i]);\n                    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.6555183946488294, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "cd339298d42f2f4dd245d9fc2154377d", "bug_code_uid": "7e50b5cbeb85be0fd9a7ec2c52be905b", "src_uid": "b34846d90dc011f2ef37a8256202528a", "apr_id": "53cb093ac4aa957304cdb00d6940b545", "difficulty": 1200, "tags": ["greedy", "constructive algorithms", "math", "implementation", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nlong long int cmpfunc (const void * a, const void * b)\n{\n   return ( *(long long int*)a - *(long long int*)b );\n}\n\nint main()\n{\n    long long int b[3],l,i;\n    scanf(\"%lld %lld %lld\",&b[0],&b[1],&b[2]);\n    qsort(b,3, sizeof(long long int), cmpfunc);\n    long long int d,e;\n    d = b[2]-(b[1]+1);\n    e = b[2]-(b[0]+1);\n    //printf(\"%lld\",e);\n    if(d < 0)\n    {\n        d = 0;\n    }\n    if(e < 0)\n    {\n        e = 0;\n    }\n    printf(\"%lld\\n\",d+e);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nlong long int cmpfunc (const void * a, const void * b)\n{\n   return ( *(long long int*)a - *(long long int*)b );\n}\n\nint main()\n{\n    long long int b[3],l,i,j,temp;\n    scanf(\"%lld %lld %lld\",&b[0],&b[1],&b[2]);\n    for(i=0;i<3;i++)\n    {\n        for(j=i;j<3;j++)\n        {\n            if(b[j] < b[i])\n            {\n                temp = b[i];\n                b[i] = b[j];\n                b[j] = temp;\n            }\n        }\n        //printf(\"%lld \",b[i]);\n    }\n    long long int d,e;\n    d = b[2]-(b[1]+1);\n    e = b[2]-(b[0]+1);\n    if(d <= 0)\n    {\n        d = 0;\n    }\n    if(e <= 0)\n    {\n        e = 0;\n    }\n    printf(\"%lld\\n\",d+e);\n    return 0;\n}"}
{"similarity_score": 0.3463855421686747, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "d8cf79e089f9788354041ba817fa6e27", "bug_code_uid": "c370c588032218dff5e1747459f0d105", "src_uid": "9c429fd7598ea75acce09805a15092d0", "apr_id": "90bb77c3de2887466257d20adb689909", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n  int i,j;\n  char a[100005];\n  int  b[256]={0};\n  char *c=\"Bulbbasaur\";\n  scanf(\"%s\",a);\n  for(i=0;i<strlen(a);i++){\n     b[a[i]]++;\n}\n char *d=\"ulbasr\";\n int min=b['B'];\n b['u']=b['u']/2;\n b['a']=b['a']/2;\n for(i=0;i<strlen(d);i++){\n   if(min>b[d[i]]){\n    min=b[d[i]];\n   }\n }\n printf(\"%d\",min);\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n  int i,j;\n  char ch;\n  char a[100005];\n  int  b[256]={0};\n while((ch=getchar())!=EOF){\n    b[ch]++;\n}\n char *d=\"ulbasr\";\n int min=b['B'];\n b['u']=b['u']/2;\n b['a']=b['a']/2;\n for(i=0;i<strlen(d);i++){\n   if(min>b[d[i]]){\n    min=b[d[i]];\n   }\n }\n printf(\"%d\",min);\n}"}
{"similarity_score": 0.7334593572778828, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "296191e1a8be6834734b703642dd149c", "bug_code_uid": "3cfbc0272c39cf2d4f7395cad34d5877", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "3467d18771cab6dbd4681218de468e5f", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n, q;\n\tscanf(\"%d%d\", &n, &q);\n\tchar arr[n];\n\tint tmp;\n\tint freq_1 = 0;\n\tfor(int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &tmp);\n\t\tarr[i] = tmp - '0';\n\n\t\tfreq_1 += (tmp == 1);\n\t}\n\tint a, b;\n\tfor(int i = 0; i < q; i++) {\n\t\tscanf(\"%d %d\", &a, &b);\n\n\t\tswitch(a) {\n\t\tcase 1:\n\t\t\tarr[b-1] = 1 - arr[b-1];\n\t\t\tarr[b-1] == 1 ? freq_1++: freq_1--;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tprintf(\"%d\\n\", b <= freq_1);\n\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tint n, q;\n\tscanf(\"%d%d\", &n, &q);\n\tchar arr[n];\n\tint tmp;\n\tint freq_1 = 0;\n\tfor(int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &tmp);\n\t\tarr[i] = tmp;\n\n\t\tfreq_1 += (tmp == 1);\n\t}\n//\tfor(int i = 0; i < n; i++) printf(\"%d \", arr[i]);\n\n\tint a, b;\n\tfor(int i = 0; i < q; i++) {\n\t\tscanf(\"%d %d\", &a, &b);\n\n\t\tswitch(a) {\n\t\tcase 1:\n\t\t\tarr[b-1] ^= 1;\n//\t\t\tfor(int k = 0; k < n; k++)\n//\t\t\t\tprintf(\"%d \", arr[k]);\n\t\t\tarr[b-1] == 1 ? freq_1++: freq_1--;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tprintf(\"%d\\n\", b <= freq_1);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tfor(int k = 0; k < n; k++)\n\t\t\t\tprintf(\"%d \", arr[k]);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.6731813246471227, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "4b4cc8d6b1e1c48e50116b21416bf028", "bug_code_uid": "49057a6e29b3bcf6b303b5e27e37e5e0", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "aa5c24fd60191abc9980b5bbaaa5d741", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    long long int n,m,r,t,f;\n    double x,y;\n    scanf(\"%I64d %I64d\",&n,&m);\n    long long int ara[n],i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&ara[i]);\n    }\n    x=-1+sqrt(1+(8*m));\n    y=x/2;\n    r=y;\n    t=(r*(r+1))/2;\n    for(i=0;i<n;i++)\n    {\n        t++;\n        if(t==m)\n        {\n            break;\n        }\n    }\n    printf(\"%I64d\",ara[i]);\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    long long int n,m,r,t,f;\n    double x,y;\n    scanf(\"%I64d %I64d\",&n,&m);\n    long long int ara[n],i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&ara[i]);\n    }\n    x=-1+sqrt(1+(8*m));\n    y=x/2;\n    r=y;\n    t=(r*(r+1))/2;\n    if(t==m)\n    {\n        printf(\"%I64d\",ara[r-1]);\n    }\n    else\n    {\n         for(i=0;i<n;i++)\n         {\n            t++;\n            if(t==m)\n            {\n              break;\n            }\n         }\n         printf(\"%I64d\",ara[i]);\n\n    }\n\n\n\n\n}\n\n"}
{"similarity_score": 0.9609164420485176, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6e64a3c7fc4af3b259b6983d4a0cccd5", "bug_code_uid": "4c13c408ba9b37be94faf46747158c06", "src_uid": "09236a3faa7fce573a4e5e758287040f", "apr_id": "260189c0160e3b05bfc6849b119f1712", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n      int k,i;\n      scanf(\"%d\",&k);\n      for(i=1;i<=k;i++)\n      {\n            int n;\n            scanf(\"%d\",&n);\n            int a[n],j;\n            for(j=0;j<n;j++) scanf(\"%d\",&a[j]);\n            int x=0,z=0,k;\n            for(j=0;j<n;j++)\n            {\n                  for(k=0;k<n;k++)\n                  {\n                        if(a[k]>=a[j]) x++;\n                        //printf(\"%d \",x);\n                  }\n                  //printf(\"\\n\");\n                  //printf(\"%d\\n\",x);\n                  if(x>=a[j] && x>z) z=a[j];\n                  else if(x>z) z=x;\n                  if(z==n) break;\n                  x=0;\n            }\n            printf(\"%d\\n\",z);\n      }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n      int k,i;\n      scanf(\"%d\",&k);\n      for(i=1;i<=k;i++)\n      {\n            int n;\n            scanf(\"%d\",&n);\n            int a[n],j;\n            for(j=0;j<n;j++) scanf(\"%d\",&a[j]);\n            int x=0,z=0,k;\n            for(j=0;j<n;j++)\n            {\n                  for(k=0;k<n;k++)\n                  {\n                        if(a[k]>=a[j]) x++;\n                       //printf(\"%d \",x);\n                  }\n                  //printf(\"\\n\");\n                  //printf(\"%d\\n\",x);\n                  if(x>=a[j] && a[j]>z) z=a[j];\n                  else if(a[j]>z && x>z) z=x;\n                  //printf(\"z = %d\\n\",z);\n                  if(z==n) break;\n                  x=0;\n            }\n            printf(\"%d\\n\",z);\n      }\n}\n"}
{"similarity_score": 0.9755434782608695, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cb456b1b3b1a294596b6a6cf8dc9c965", "bug_code_uid": "0c4a603ee8921c85732014faba937163", "src_uid": "5de66fbb594bb317654366fd2290c4d3", "apr_id": "fb5e3f21bd525fc9b1dca18656992ed9", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include<string.h>\n#include<ctype.h>\nint main (){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor (int j=1;j<=n;j++){\n\t\tchar c[100];\n\t\tscanf(\"%s\",&c);\n\t\tint a[100],cnt=0;\n\t\tfor (int i=0;i<strlen(c);i++){\n\t\t\tif(c[i]=='1'){\n\t\t\t\ta[cnt]=i;\n\t\t\t\tcnt++;\n\t\t} \n\t\t\n\t}\n\t\tif(cnt==0) printf(\"0\");\n\t\telse printf(\"%d\",a[cnt-1]-a[0]-cnt+1);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include<string.h>\n#include<ctype.h>\nint main (){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor (int j=1;j<=n;j++){\n\t\tchar c[100];\n\t\tscanf(\"%s\",&c);\n\t\tint a[100],cnt=0;\n\t\tfor (int i=0;i<strlen(c);i++){\n\t\t\tif(c[i]=='1'){\n\t\t\t\ta[cnt]=i;\n\t\t\t\tcnt++;\n\t\t} \n\t\t\n\t}\n\t\tif(cnt==0) printf(\"0\");\n\t\telse printf(\"%d\",a[cnt-1]-a[0]-cnt+1);\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9983579638752053, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "19616440a8796845081e8a7c32c48d02", "bug_code_uid": "d5b81e400e31e091088e27b1dbc5d68a", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "bbec82a3ee4ba2f2c5bfca099c9ee107", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{   int n,i,flag=0,count=0;\n\n    scanf(\"%d\",&n);\n    char s[n][11];\n    for(i=0;i<n;i++)\n        scanf(\"%s\",s[i]);\n\n\n        if(n==1)\n\n    {\n        puts(s);\n    }\n    else\n{\n\n\n    for(i=0;i<n;i++)\n    {   if(strcmp(s[0],s[i])==0)\n            count++;\n        else\n            flag++;\n\n    }\n    if(count>flag)\n        printf(\"%s\",s[0]);\n    else\n    {\n        for(i=1;i<n;i++)\n        {\n            if(strcmp(s[0],s[i]!=0))\n               {\n                   printf(\"%s\",s[i]);\n                    break;\n               }\n\n        }\n    }\n}\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n\n{   int n,i,flag=0,count=0;\n\n    scanf(\"%d\",&n);\n    char s[n][11];\n    for(i=0;i<n;i++)\n        scanf(\"%s\",s[i]);\n\n\n        if(n==1)\n\n    {\n        puts(s);\n    }\n    else\n{\n\n\n    for(i=0;i<n;i++)\n    {   if(strcmp(s[0],s[i])==0)\n            count++;\n        else\n            flag++;\n\n    }\n    if(count>flag)\n        printf(\"%s\",s[0]);\n    else\n    {\n        for(i=1;i<n;i++)\n        {\n            if(strcmp(s[0],s[i])!=0)\n               {\n                   printf(\"%s\",s[i]);\n                    break;\n               }\n\n        }\n    }\n}\n    return 0;\n}\n"}
{"similarity_score": 0.3706777316735823, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "3da6935603cfd667fad67c29570509d0", "bug_code_uid": "3f06d1834143135119807ca7449afac2", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "1c9c98c5da2b59ad92ebf797cbd5e50e", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t,i,n,j;\n    scanf(\"%d\",&t);\n    for (i=1;i<=t;i++)\n    {   int l;\n        scanf(\"%d\",&n);\n        if (n%2==0)\n        {\n            for (j=2;j<n;j+=2)\n            {\n                if (n%j==0)\n                {\n                    int m=j;\n                    for (int k=2;m<n;k=k*2)\n                    {\n                        m=m+(j*k);\n                    }\n                    if (m==n)\n                       {l=j;\n                        break;\n                       }\n                }\n            }\n        }\n        else\n        {\n            for (j=1;j<n;j+=2)\n            {\n\n                if (n%j==0)\n                {\n                    int m=j;\n                    for (int k=2;m<n;k=k*2)\n                    {\n                        m=m+(j*k);\n\n                    }\n                    if (m==n)\n                        {l=j;\n                         break;\n                        }\n                }\n            }\n        }\n        printf(\"%d\\n\",l);\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\n    int t,i,n,m,x,j;\n    scanf(\"%d\",&t);\n    for (i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&n);\n        for (j=2;j<=29;j++)\n        {\n            m=pow(2,j);\n            if (n%(m-1)==0)\n               {\n                   x=n/(m-1);\n                   break;\n               }\n        }\n        printf(\"%d\\n\",x);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9315068493150684, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "7ee01e936d9e8caf60fe6fe18155f692", "bug_code_uid": "69c8435dfa44410219d5424d9eff8398", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "2a34cc683f6b57f6547f48b8c5d2ed52", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/*\nK-Divisible Sum\n1000\nhttps://codeforces.com/problemset/problem/1476/A\n*/\n\n#include <stdio.h>\n\nint main(){\n\n\tint i, t, n, k;\n\tlong long int c;\n\n\tscanf(\"%d\", &t);\n\n\twhile(t--){\n\t\tscanf(\"%d %d\", &n, &k);\n\n\t\tc = (n + k - 1) / k;\n\n\t\tk *= c;\n\n\t\tprintf(\"%d\\n\", (k + n - 1 )/ n);\n\t}\n\n\treturn 0;\n}\n", "fixed": "/*\nK-Divisible Sum\n1000\nhttps://codeforces.com/problemset/problem/1476/A\n*/\n\n#include <stdio.h>\n\nint main(){\n\n\tlong long int t, n, k, c;\n\n\tscanf(\"%lld\", &t);\n\n\twhile(t--){\n\t\tscanf(\"%lld %lld\", &n, &k);\n\n\t\tc = (n + k - 1) / k;\n\n\t\tk *= c;\n\n\t\tprintf(\"%lld\\n\", (k + n - 1 )/ n);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9989035087719298, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ea22556ce2663e4f705063f0dc05cf67", "bug_code_uid": "bead8245e65d6f24bca98ab5bc4909e9", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "654204162065f89af53073656a8e205c", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\r\nint main()\r\n{\r\n\tint testcases;\r\n\tscanf(\"%d\",&testcases);\r\n\twhile(testcases--)\r\n\t{\r\n\t\tlong long int totalsteps;\r\n\t\tscanf(\"%lld\",&totalsteps);\r\n\t\tlong long int answer = 0;\r\n\t\tif(totalsteps < 8 )\r\n\t\t{\r\n\t\t\tif(totalsteps == 0)\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 1 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 2 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 1;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 3 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 1;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 4 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 5 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 6 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 7 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 3;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(totalsteps%3 == 0)\r\n\t\t{\r\n\t\t\tanswer = (totalsteps/3);\r\n\t\t}\r\n\t\telse if(totalsteps%3 == 1)\r\n\t\t{\r\n\t\t\tanswer = (totalsteps/3) + 2;\r\n\t\t}\r\n\t\telse if(totalsteps%3 == 2)\r\n\t\t{\r\n\t\t\tanswer = (totalsteps/3) + 1;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",answer);\r\n\t\t\r\n\t}\r\n\t\r\n}\t", "fixed": "# include <stdio.h>\r\nint main()\r\n{\r\n\tint testcases;\r\n\tscanf(\"%d\",&testcases);\r\n\twhile(testcases--)\r\n\t{\r\n\t\tlong long int totalsteps;\r\n\t\tscanf(\"%lld\",&totalsteps);\r\n\t\tlong long int answer = 0;\r\n\t\tif(totalsteps < 8 )\r\n\t\t{\r\n\t\t\tif(totalsteps == 0)\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 1 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 2 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 1;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 3 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 1;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 4 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 5 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 6 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 2;\r\n\t\t\t}\r\n\t\t\tif(totalsteps == 7 )\r\n\t\t\t{\r\n\t\t\t\tanswer = 3;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(totalsteps%3 == 0)\r\n\t\t{\r\n\t\t\tanswer = (totalsteps/3);\r\n\t\t}\r\n\t\telse if(totalsteps%3 == 1)\r\n\t\t{\r\n\t\t\tanswer = (totalsteps/3) + 1;\r\n\t\t}\r\n\t\telse if(totalsteps%3 == 2)\r\n\t\t{\r\n\t\t\tanswer = (totalsteps/3) + 1;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",answer);\r\n\t\t\r\n\t}\r\n\t\r\n}\t"}
{"similarity_score": 0.9883720930232558, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "62e06f66293ed9677b8b633847402fa3", "bug_code_uid": "bab34d2d34439a94e1b6866747d8d820", "src_uid": "1c07882651ef6ebfc05e777d562e28b9", "apr_id": "5ed5ec184f8439c37039277247d9dad3", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    for(int t=1;t<=n;t++){\n        int count=0;\n        int begin,end;\n        scanf(\"%d\",&n);\n        int A[n+2];\n        for(int j=1;j<=n;j++){\n            scanf(\"%d\",&A[j]);\n        }\n        A[0]=-1;\n        A[n+1]=-1;\n        for(int i=1;i<=n;i++){\n            if(A[i]==1){\n                begin = i;\n                break;\n            } \n        }\n        for(int i=n;i>=1;i--){\n            if(A[i]==1){\n                end = i;\n                break;\n            }\n        }\n        if(begin == end) printf(\"%d\\n\",0);\n        for(int i= begin + 1;i < end;i++){\n            if(A[i]==0){\n                count++;\n            }\n        }\n        if(begin != end) printf(\"%d\\n\",count);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t,n,k;\n    scanf(\"%d\",&t);\n    for(int k=1;k<=t;k++){\n        int count=0;\n        int begin,end;\n        scanf(\"%d\",&n);\n        int A[n+2];\n        for(int j=1;j<=n;j++){\n            scanf(\"%d\",&A[j]);\n        }\n        A[0]=-1;\n        A[n+1]=-1;\n        for(int i=1;i<=n;i++){\n            if(A[i]==1){\n                begin = i;\n                break;\n            } \n        }\n        for(int i=n;i>=1;i--){\n            if(A[i]==1){\n                end = i;\n                break;\n            }\n        }\n        if(begin == end) printf(\"%d\\n\",0);\n        for(int i= begin + 1;i < end;i++){\n            if(A[i]==0){\n                count++;\n            }\n        }\n        if(begin != end) printf(\"%d\\n\",count);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7606741573033707, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "d86d2f2af40c2db4f655581d454be702", "bug_code_uid": "f6a16f704252a059606b7837c08cf933", "src_uid": "6e85f83d544eeb16f57523eb532abf04", "apr_id": "c92a0597892b85b67f6cf045863b5723", "difficulty": 1700, "tags": ["combinatorics", "dfs and similar", "brute force", "graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\n#define MAX_N (3000)\n#define MAX_M (30000)\n\ntypedef struct {\n  int * xs;\n  int n,cap;\n} list;\n\nlist adj[MAX_N+1];\n\nvoid list_add(list * lst, int x) {\n  if ( lst->n == lst->cap )\n    lst->xs = realloc(lst->xs, lst->cap = (lst->cap ? lst->cap*2 : 100));\n  lst->xs[lst->n++] = x;\n}\n\nint count_rhombi(int x, int y) {\n  int a,i,j,acc;\n\n  if ( x == y )\n    return 0;\n  for ( i=acc=0; i < adj[x].n; ++i ) {\n    a = adj[x].xs[i];\n    for ( j=0; j < adj[a].n; ++j )\n      if ( adj[a].xs[j] == y )\n        acc += 1;\n  }\n  return (acc * (acc-1)) / 2;\n}\n\nint main() {\n  int i,j,n,m,x,y,acc;\n\n  scanf(\"%d %d\\n\", &n, &m);\n  for ( i=0; i < m; ++i ) {\n    scanf(\"%d %d\", &x, &y);\n    list_add(&adj[x], y);\n  }\n  for ( i=1,acc=0; i <= n; ++i )\n    for ( j=1; j <= n; ++j )\n      acc += count_rhombi(i, j);\n  printf(\"%d\\n\", acc);\n  return EXIT_SUCCESS;\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\n#define MAX_N (3000)\n#define MAX_M (30000)\n\ntypedef struct {\n  int * xs;\n  int n,cap;\n} list;\n\nlist adj[MAX_N+1];\nint mx[MAX_N+1][MAX_N+1];\n\nvoid list_add(list * lst, int x) {\n  if ( lst->n == lst->cap ) {\n    lst->cap = lst->cap ? lst->cap*2 : 100;\n    lst->xs = realloc(lst->xs, lst->cap * sizeof(int));\n  }\n  lst->xs[lst->n++] = x;\n}\n\nint count_rhombi(int x, int y) {\n  int a,i,acc;\n\n  if ( x == y )\n    return 0;\n  for ( i=acc=0; i < adj[x].n; ++i ) {\n    a = adj[x].xs[i];\n    if ( mx[a][y] )\n      acc += 1;\n  }\n  return (acc * (acc-1)) / 2;\n}\n\nint main() {\n  int i,j,n,m,x,y,acc;\n\n  scanf(\"%d %d\\n\", &n, &m);\n  for ( i=0; i < m; ++i ) {\n    scanf(\"%d %d\", &x, &y);\n    list_add(&adj[x], y);\n    mx[x][y] = 1;\n  }\n  for ( i=1,acc=0; i <= n; ++i )\n    for ( j=1; j <= n; ++j )\n      acc += count_rhombi(i, j);\n  printf(\"%d\\n\", acc);\n  return EXIT_SUCCESS;\n}\n"}
{"similarity_score": 0.4253028263795424, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "8cfe253937bf02936710883c050a1efe", "bug_code_uid": "13968be55417b4b63a34328dc206ce4c", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "707786a38aeccd0e7a0e4d35a26698c3", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int test, n, x;\n\n    scanf(\"%d\", &test);\n\n    while (test--)\n    {\n        scanf(\"%d\", &n);\n\n        if (n % 3 == 0)\n            x = n / 3;\n        else if (n % 7==0)\n            x = n / 7;\n\n        printf(\"%d\\n\", x);\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int test, n, x, i, term, sum;\n    scanf(\"%d\", &test);\n\n    while (test--)\n    {\n        scanf(\"%d\", &n);\n        sum = 0;\n\n        for (i = 0; i < 30; i++)\n        {\n            term = pow(2, i);\n            sum += term;\n\n            if (n % sum == 0 && sum != 1)\n            {\n                x = n / sum;\n                printf(\"%d\\n\", x);\n                break;\n            }\n        }\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9391634980988594, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f2bea53824abc3c7e59ee47d6d6864db", "bug_code_uid": "587ea3969aa860aa7d405c91f160d749", "src_uid": "40d679f53417ba058144c745e7a2c76d", "apr_id": "56f9f4c43e64f7fad784cefda4209517", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n  int t;\n  scanf(\"%d\",&t);\n  while(t--){\n    int a,b,c,d;\n    if(a>=b && a>=c){\n       printf(\"%d\\n\",a);\n    }else if(b>=a && b>=c){\n     printf(\"%d\\n\",b);\n    }else{\n      printf(\"%d\\n\",c);\n    }\n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n  int t;\n  scanf(\"%d\",&t);\n  while(t--){\n    int a,b,c,d;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    if(a>=b && a>=c){\n       printf(\"%d\\n\",a);\n    }else if(b>=a && b>=c){\n     printf(\"%d\\n\",b);\n    }else{\n      printf(\"%d\\n\",c);\n    }\n  }\n  return 0;\n}"}
{"similarity_score": 0.5252525252525253, "equal_cnt": 23, "replace_cnt": 14, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "157ef389bd6e4e22cd5bd74f701dea29", "bug_code_uid": "f13172abee810b2bc0c8f1ef2d1b186b", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "52bfff80ce2a6197b3f29cafed7bc026", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,cnt=0,sum=0;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(i=0;i<n;i++) scanf(\"%d\",&arr[i]);\n    for(i=0;i<n;i++){\n        if(arr[i]>0) sum+=arr[i];\n        if(arr[i]<0){\n                i+=sum;\n        }\n\n    if(arr[i]<0){\n        cnt++;\n    }\n    }\n    printf(\"%d\",cnt);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint i,n,sum=0,cnt=0,x;\nscanf(\"%d\",&n);\nwhile(n--)\n\t{\n\tscanf(\"%d\",&x);\n\tsum+=x;\n\tif(sum<0)\n\t\t{\n\t\tsum=0;\n\t\tcnt++;\n\t\t}\n\t}\nprintf(\"%d\",cnt);\nreturn 0;\n}"}
{"similarity_score": 0.9802110817941952, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "20b4f6779e484585e35370ad85ccecbd", "bug_code_uid": "2479208d0382e728ce90a46f3fd4812f", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "e97012e023286dedbbf6e640e0cfc23e", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint comparator (const void * p1, const void * p2)\r\n{\r\n  return (*(int*)p1 - *(int*)p2);\r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\" , &t);\r\n    while(t--){\r\n        int n , count = 0;\r\n        scanf(\"%d\" , &n);\r\n        int A[n];\r\n\r\n        for(int i = 0; i < n; i++){\r\n            scanf(\"%d\" , &A[i]);\r\n        }\r\n\r\n        qsort(A, n, sizeof(int), comparator);\r\n\r\n        for(int i = n-1; i >= 0; i--){\r\n            if(A[i] == A[i-1]){\r\n                count += 1;\r\n                if(count == 2){\r\n                    printf(\"%d\\n\" , A[i]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(count < 2){\r\n            printf(\"-1\\n\");\r\n        }\r\n        \r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint comparator (const void * p1, const void * p2)\r\n{\r\n  return (*(int*)p1 - *(int*)p2);\r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\" , &t);\r\n    while(t--){\r\n        int n , count = 0;\r\n        scanf(\"%d\" , &n);\r\n        int A[n];\r\n\r\n        for(int i = 0; i < n; i++){\r\n            scanf(\"%d\" , &A[i]);\r\n        }\r\n\r\n        qsort(A, n, sizeof(int), comparator);\r\n\r\n        for(int i = n-1; i >= 0; i--){\r\n            if(A[i] == A[i-1]){\r\n                count += 1;\r\n                if(count == 2){\r\n                    printf(\"%d\\n\" , A[i]);\r\n                    break;\r\n                }\r\n            }\r\n            else{count = 0;}\r\n        }\r\n        if(count < 2){\r\n            printf(\"-1\\n\");\r\n        }\r\n        \r\n    }\r\n}"}
{"similarity_score": 0.9003215434083601, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0a43f1824e6dbf46e495f6cd4b710a00", "bug_code_uid": "af07e59e4e72e25c8e2701db24422809", "src_uid": "e27cff5d681217460d5238bf7ef6a876", "apr_id": "582f9376219a7836ab15b91fb98e8f28", "difficulty": 1200, "tags": ["binary search", "geometry", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main(int argc, char* argv[]) {\n    int n, r;\n    double ans, angle, target;\n    \n    scanf(\"%d%d\", &n, &r);\n    angle = M_PI / n;\n    target = sin(angle);\n    ans = target * r / (1.0 - target);\n    printf(\"%.7f\\n\", ans);\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\n# define PI 3.14159265358979323846\n\nint main(int argc, char* argv[]) {\n    int n, r;\n    double ans, angle, target;\n    \n    scanf(\"%d%d\", &n, &r);\n    angle = PI / n;\n    target = sin(angle);\n    ans = target * r / (1.0 - target);\n    printf(\"%.7f\\n\", ans);\n    \n    return 0;\n}\n"}
{"similarity_score": 0.9961685823754789, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b2917948b5df4af142647bf28c46dcb4", "bug_code_uid": "5d2c3e0127c928c936b3b118e1d340f0", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "6bfcccef87f0978427dc201cd8e1f1f4", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    int k=0,n,i;\n    char a[3];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%s\",&a);\n        if(a[1] == '+'){\n            k=k+1;\n        }else{\n            k=k-1;\n        }\n    }\n    printf(\"%d\",k);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void){\n    int k=0,n,i;\n    char a[5];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%s\",&a);\n        if(a[1] == '+'){\n            k=k+1;\n        }else{\n            k=k-1;\n        }\n    }\n    printf(\"%d\",k);\n    return 0;\n}"}
{"similarity_score": 0.8685524126455907, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c3d267013630f3db499d0465ac792e9f", "bug_code_uid": "bfed235fcb3d8dfde3792f8400ed8a4a", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "4ccf3c0ec7397c214a1ac09ee93fd7a1", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int a[100000],b,n,i,sum=0;\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0;i<n;i++){\n        sum=sum+a[i];\n    }\n    if(sum%2==0)\n        printf(\"Second\");\n    else\n        printf(\"First\");\n\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int a[10000000],b,n,i,sum=0;\n\n    scanf(\"%lld\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0;i<n;i++){\n        if(a[i]%2==0)\n            b++;\n    }\n    if(b==n)\n        printf(\"Second\");\n    else\n        printf(\"First\");\n\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.9101876675603218, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "9b247d23979f9693161008281071e470", "bug_code_uid": "df4115467be55473e39f383926dcd491", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "d2a5869c89ef077f6a7f80095dca0dea", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// In The Name of Allah\n\n#include <stdlib.h>\n#include <stdio.h>\n\n#define LEN 10009\n\nint n, s, i, x_i, y_i, d[ LEN ], max_x;\n\nint main()\n{\n\tscanf( \"%d %d\", &s, &n );\n\n\tfor ( i = 0; i < LEN; ++i )\n\t{\n\t\td[ i ] = 0;\n\t}\n\n\tmax_x = -1;\n\n\tfor ( ; n >= 1; n-- )\n\t{\n\t\tscanf( \"%d %d\", &x_i, &y_i );\n\n\t\tif ( s > x_i )\n\t\t{\n\t\t\ts += y_i;\n\n\t\t\tfor ( i = s - 1; i >= 0; i-- )\n\t\t\t{\n\n\t\t\t\tif ( d[ i ] == 0 )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( i == max_x )\n\t\t\t\t{\n\t\t\t\t\tmax_x = -1;\n\t\t\t\t}\n\n\t\t\t\ts += d[ i ];\n\t\t\t\td[ i ] = 0;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\td[ x_i ] += y_i;\n\n\t\tif ( x_i > max_x )\n\t\t{\n\t\t\tmax_x = x_i;\n\t\t}\n\n\t}\n\n\tif ( max_x == -1 )\n\t{\n\t\tprintf( \"YES\\n\" );\n\t}\n\telse\n\t{\n\t\tprintf( \"NO\\n\" );\n\t}\n\n\treturn EXIT_SUCCESS;\n}\n\n", "fixed": "// In The Name of Allah\n\n#include <stdlib.h>\n#include <stdio.h>\n\n#define LEN 10009\n\nlong long n, s, i, x_i, y_i, d[ LEN ], max_x;\n\nint main()\n{\n\tscanf( \"%I64d %I64d\", &s, &n );\n\n\tfor ( i = 0; i < LEN; ++i )\n\t{\n\t\td[ i ] = -1;\n\t}\n\n\tmax_x = -1;\n\n\tfor ( ; n >= 1; n-- )\n\t{\n\t\tscanf( \"%I64d %I64d\", &x_i, &y_i );\n\n\t\tif ( s > x_i )\n\t\t{\n\t\t\ts += y_i;\n\n\t\t\tfor ( i = 0; i < s && i < LEN; ++i )\n\t\t\t{\n\n\t\t\t\tif ( d[ i ] == -1 )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( i == max_x )\n\t\t\t\t{\n\t\t\t\t\tmax_x = -1;\n\t\t\t\t}\n\n\t\t\t\ts += d[ i ];\n\t\t\t\td[ i ] = -1;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( d[ x_i ] == -1 )\n\t\t{\n\t\t\td[ x_i ] = y_i;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td[ x_i ] += y_i;\n\t\t}\n\n\t\tif ( x_i > max_x )\n\t\t{\n\t\t\tmax_x = x_i;\n\t\t}\n\n\t}\n\n\tif ( max_x == -1 )\n\t{\n\t\tprintf( \"YES\\n\" );\n\t}\n\telse\n\t{\n\t\tprintf( \"NO\\n\" );\n\t}\n\n\treturn EXIT_SUCCESS;\n}\n\n"}
{"similarity_score": 0.5592417061611374, "equal_cnt": 16, "replace_cnt": 15, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "f773b846a323a4182e7a1d5d4f4959a9", "bug_code_uid": "8405b85d31e7cbc106ad0bbbab78a33f", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "47a76e12ce443ba6ec124ff8833c7596", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<cmath>\n\nint main()\n{\n\tint n,j,i;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tif(n%2==0)\n\t\t  printf(\"%d\\n\",n*n/2);\n\t\telse\n\t\t  printf(\"%d\\n\",n*n/2+1);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t    if((i+j)%2==0)\n\t\t\t\t{\n\t\t\t\t   printf(\"c\");\n\t\t\t\t}else{\n\t\t\t\t   printf(\".\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,j,i;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        if(n%2==0)\n          printf(\"%d\\n\",n*n/2);\n        else\n          printf(\"%d\\n\",n*n/2+1);\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<n;j++)\n            {\n                if((i+j)%2==0)\n                {\n                   printf(\"C\");\n                }else{\n                   printf(\".\");\n                }\n            }\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9649289099526066, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "aea7080830c05352e0eac930f6171b40", "bug_code_uid": "9ce3c9bee29515eddccaee0849ccd853", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "41467d817613591fb2459d7918226902", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int n,b[100005],max=0,min=1000000001,a=0,c=0,i,j;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&b[i]);\n        if(b[i]<min)\n            min=b[i];\n        if(b[i]>max)\n            max=b[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[i]==min)\n            a++;\n        if(b[i]==max)\n            c++;\n    }\n    if(max==min)\n        printf(\"0 %I64d\",(n*(n-1))/2);\n    else\n    {\n    j=c*a;\n    printf(\"%I64d %I64d\",max-min,j);\n    }\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\nlong long int b[300005];\nint main()\n{\n    long long int n,max=0,min=1000000001,a=0,c=0,i,j;\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&b[i]);\n        if(b[i]<min)\n            min=b[i];\n        if(b[i]>max)\n            max=b[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[i]==min)\n            a++;\n        if(b[i]==max)\n            c++;\n    }\n    if(max==min)\n        printf(\"0 %I64d\",(n*(n-1))/2);\n    else\n    {\n    j=c*a;\n    printf(\"%I64d %I64d\",max-min,j);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8914057295136576, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "2a3b1e0485c69c9f3d31afcc43063514", "bug_code_uid": "014282b6ccc2492c1c7da276cae066b9", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "98ba837a52a57e4f944f2e78b07dd5cf", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int min(long long int a[],long long int c[],long long int n)\n{\n    long long int min;\n    long long int l=-1,i;\n    min=1000000001;\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<=min&&c[i]==0)\n        {\n            min=a[i];\n            l=i;\n        }\n\n    }\n    if(l!=-1)\n        c[l]=1;\n  return l;\n}\nint main(){\n    long long int n;\nlong long int l,i;\nscanf(\"%lld\",&n);\nlong long int a[n],b[n],c[n],d;\nfor(i=0;i<n;i++){\n    scanf(\"%lld %lld\",&a[i],&b[i]);\n    c[i]=0;\n}\nl=min(a,c,n);\nd=b[l];\nwhile(l!=-1)\n{\n    //l=min(a,c,n);\n    if(b[l]>=d)\n        d=b[l];\n        else\n            d=a[l];\n        l=min(a,c,n);\n}\nprintf(\"%lld\",d);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int min(long long int a[],long long int b[],long long int c[],long long int n)\n{\n    long long int min;\n    long long int l=-1,i;\n    min=1000000001;\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==min && c[i]==0){\n            if(b[i]<b[l]){\n                min=a[i];\n                l=i;\n            }\n        }\n        if(a[i]<min&&c[i]==0)\n        {\n            min=a[i];\n            l=i;\n        }\n\n    }\n    if(l!=-1)\n        c[l]=1;\n  return l;\n}\nint main(){\n    long long int n;\nlong long int l,i;\nscanf(\"%lld\",&n);\nlong long int a[n],b[n],c[n],d;\nfor(i=0;i<n;i++){\n    scanf(\"%lld %lld\",&a[i],&b[i]);\n    c[i]=0;\n}\nl=min(a,b,c,n);\nd=b[l];\nwhile(l!=-1)\n{\n    //l=min(a,c,n);\n    if(b[l]>=d)\n        d=b[l];\n        else\n            d=a[l];\n        l=min(a,b,c,n);\n}\nprintf(\"%lld\",d);\nreturn 0;\n}\n"}
{"similarity_score": 0.9960106382978723, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7d32da4ef3a9d9272efde9422ede0b19", "bug_code_uid": "08aa0b465432b02b4e967fb0a72ade11", "src_uid": "a6f42cb2627a7d1f6e01860322c5aac5", "apr_id": "243684228839e4c543b1ab4b54939695", "difficulty": 900, "tags": ["data structures", "dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(void)\r\n{\r\n    long long m,n,b,e;\r\n    scanf(\"%lld %lld\",&m,&n);\r\n    long long a[200000];\r\n    a[0]=0;\r\n    for(int i=1;i<=m;i++)\r\n    {\r\n        scanf(\"%lld\",&a[i]);\r\n    }\r\n    long long g[m],c[m];\r\n    g[1]=0;\r\n    c[m]=0;\r\n    for(int i=2;i<=m;i++)\r\n    {\r\n        if(a[i]<a[i-1])\r\n            g[i]=g[i-1]+a[i-1]-a[i];\r\n        else\r\n            g[i]=g[i-1];\r\n    }\r\n    for(int i=m-1;i>=1;i--)\r\n    {\r\n        if(a[i]<a[i+1])\r\n            c[i]=c[i+1]+a[i+1]-a[i];\r\n        else\r\n            c[i]=c[i+1];\r\n    }\r\n\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"ll%d %lld\",&b,&e);\r\n        if(b<e)\r\n            printf(\"%lld\\n\",g[e]-g[b]);\r\n        else\r\n            printf(\"%lld\\n\",c[e]-c[b]);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(void)\r\n{\r\n    long long m,n,b,e;\r\n    scanf(\"%lld %lld\",&m,&n);\r\n    long long a[200000];\r\n    a[0]=0;\r\n    for(int i=1;i<=m;i++)\r\n    {\r\n        scanf(\"%lld\",&a[i]);\r\n    }\r\n    long long g[m],c[m];\r\n    g[1]=0;\r\n    c[m]=0;\r\n    for(int i=2;i<=m;i++)\r\n    {\r\n        if(a[i]<a[i-1])\r\n            g[i]=g[i-1]+a[i-1]-a[i];\r\n        else\r\n            g[i]=g[i-1];\r\n    }\r\n    for(int i=m-1;i>=1;i--)\r\n    {\r\n        if(a[i]<a[i+1])\r\n            c[i]=c[i+1]+a[i+1]-a[i];\r\n        else\r\n            c[i]=c[i+1];\r\n    }\r\n\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%lld %lld\",&b,&e);\r\n        if(b<e)\r\n            printf(\"%lld\\n\",g[e]-g[b]);\r\n        else\r\n            printf(\"%lld\\n\",c[e]-c[b]);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.22469135802469137, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "cbaa946d2f00daeed21ee50e2a3f57ee", "bug_code_uid": "188ed26f4835141f60246cd38e06b02f", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "a2754e42f1e49b982687a75a76038b39", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid max(int a[],int n)\n{\n    int i,ma=0;\n    for(i=0; i<n; i++)\n        if(a[i]>ma)\n            ma=a[i];\n    for(i=0; i<n; i++)\n        if(a[i]==ma)\n            a[i]=1000002;\n\n\n}\nvoid min(int a[],int n)\n{\n    int i,mi=1000001;\n    for(i=0; i<n; i++)\n        if(a[i]<mi)\n            mi=a[i];\n    for(i=0; i<n; i++)\n        if(a[i]==mi)\n            a[i]=-1;\n\n\n}\nint main()\n{\n    int n,a[1000],i,test=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n        for(i=0; i<n-1; i++)\n        {\n            if(a[i]==a[i+1])\n                test++;\n        }\n        if(test==n-1)\n        {\n            printf(\"%d\",a[0]);\n            return 0;\n        }\n    for(i=0; i<n-1; i++)\n    {\n        if(i%2==0)\n        {\n            max(a,n);\n        }\n        else\n        {\n            min(a,n);\n        }\n    }\n    for(i=0; i<n; i++)\n    {\n        if(a[i]!=-1&&a[i]!=1000002)\n        {\n            printf(\"%d\",a[i]);\n            return 0;\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,a[1000],j,t;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n        for(i=0;i<n;i++)\n            for(j=0;j<n;j++)\n        {\n            if(a[i]>a[j])\n            {\n               t=a[j];\n               a[j]=a[i];\n               a[i]=t;\n            }\n        }\n        if(n%2!=0)\n        {\n            printf(\"%d\",a[(n/2)]);\n        }\n        else\n        {\n            if(a[n/2]>a[(n/2)-1])\n                printf(\"%d\",a[(n/2)-1]);\n            else\n            printf(\"%d\",a[n/2]);\n        }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9936102236421726, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d223ba6e3d32bc3426a05bddc455aaf9", "bug_code_uid": "1eb9c7c72fefba778ea3d87f5ed0e22d", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "52e4e94ffe876a4f495eea7fb9f577c2", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long int i,n,top=0,min=10000000000,A[500000],min2=10000000000;\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor (i = 1; i <=n ; i++)\n\t{\n\t\tscanf(\"%lld\",&A[i]);\n\t\ttop=top+A[i];\n\t\tif(A[i]<min && A[i]%2==1) min=A[i];\n\t\t\n\t}\n\t\tif(top%2==0) printf(\"%d\",top);\t\n\t\telse\n\t\tprintf(\"%d\",top-min);\t\n\treturn 0;\t\n}\n", "fixed": "#include <stdio.h>\nlong long int i,n,top=0,min=10000000000,A[500000],min2=10000000000;\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor (i = 1; i <=n ; i++)\n\t{\n\t\tscanf(\"%lld\",&A[i]);\n\t\ttop=top+A[i];\n\t\tif(A[i]<min && A[i]%2==1) min=A[i];\n\t\t\n\t}\n\t\tif(top%2==0) printf(\"%lld\",top);\t\n\t\telse\n\t\tprintf(\"%lld\",top-min);\t\n\treturn 0;\t\n}\n"}
{"similarity_score": 0.6813768755516328, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ce652f53a1a5bd26a8508872d413f6c5", "bug_code_uid": "678c0880930ba05eee6f546422998d72", "src_uid": "0f960d19e576b7421a7c7a7166a884ea", "apr_id": "89d6e57bacb00c2de136b94ac9a3d827", "difficulty": 1300, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    long long int a,c,v,m;\n\t    scanf(\"%lld%lld%lld%lld\",&a,&c,&v,&m);\n\t    if((v+m)>(a+c))\n        {\n            printf(\"no\\n\");\n            continue;\n        }\n        if(a==0 || c==0)\n        {\n            if(m!=0)\n            {\n                printf(\"no\\n\");\n                continue;\n            }\n        }\n        if(a==c && c==v && v==m)\n        {\n            printf(\"yes\\n\");\n            continue;\n        }\n        else\n        {\n           int less=(a<c)?a:c;\n            if(less>=m)\n            printf(\"yes\\n\");\n            if(less<m)\n            printf(\"no\\n\");\n         \n\n            \n        }\n\t}\n}\n\n\n\n\n\n\n", "fixed": "#include <stdio.h>\n\nint main() {\n\t//code\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    long long int a,c,v,m;\n\t    scanf(\"%lld%lld%lld%lld\",&a,&c,&v,&m);\n\t    if((v+m)>(a+c))\n        {\n            printf(\"no\\n\");\n            \n        }\n      else\n        {\n            long long int less =(a<c)?a:c;\n            if(less>=m)\n            printf(\"yes\\n\");\n            else\n            printf(\"no\\n\");\n        }\n        \n        \t}\n}\n\n"}
{"similarity_score": 0.9908256880733946, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "22a5b87afd3867c08a6845162a65cff6", "bug_code_uid": "bb9009ccaa6fae179f6d9089d1726b94", "src_uid": "0c7e019e1e955cadacca55b4e823a3e5", "apr_id": "dbe48831359d85fd941b5dc1a56a1639", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tint t, n, i;\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tif (n % 4 == 2)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor (i = 0; i < n / 2; i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d\", 2 * i + 2);\n\t\t\t}\n\t\t\tfor (i = 0; i < (n / 2) - 1; i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d\", 2 * i + 1);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", 6 * (n / 4) - 1);\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tint t, n, i;\n    scanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tif (n % 4 == 2)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor (i = 0; i < n / 2; i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \", 2 * i + 2);\n\t\t\t}\n\t\t\tfor (i = 0; i < (n / 2) - 1; i++)\n\t\t\t{\n\t\t\t\tprintf(\"%d \", 2 * i + 1);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", 6 * (n / 4) - 1);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9426542872747132, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7f58401f2152a782e8c375b465a7a9cf", "bug_code_uid": "e552139f6aa8564774240fbc579ecdcd", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "2676fdf703b196284e019a0782e5b1b4", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,q=0,r=0;\n    char c,d;\n    scanf(\"%d\",&n);\n    char a[300][300];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\",&a[i][0]);\n    }\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(q==0)\n            {\n                c=a[0][0];\n                q++;\n            }\n            if(r==0)\n            {\n                d=a[0][1];\n                r++;\n            }\n            if((i==j)||((i+j)==(n-1)))\n            {\n                if(a[i][j]!=c)\n                {\n                    printf(\"NO\");\n                    return 0;\n                }\n            }\n            else\n            {\n                if(a[i][j]!=d)\n                {\n                    printf(\"NO\");\n                    return 0;\n                }\n            }\n\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,q=0,r=0;\n    char c,d;\n    scanf(\"%d\",&n);\n    char a[300][300];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\",&a[i][0]);\n    }\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(q==0)\n            {\n                c=a[0][0];\n                q++;\n            }\n            if(r==0)\n            {\n                d=a[0][1];\n                r++;\n            }\n            if(c==d)\n            {\n                printf(\"NO\");\n                return 0;\n            }\n            if((i==j)||((i+j)==(n-1)))\n            {\n                if(a[i][j]!=c)\n                {\n                    printf(\"NO\");\n                    return 0;\n                }\n            }\n            else\n            {\n                if(a[i][j]!=d)\n                {\n                    printf(\"NO\");\n                    return 0;\n                }\n            }\n\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.1346938775510204, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c56040bdb415c23fdfc416fe962a5b2b", "bug_code_uid": "7e5ea383a4fe3e9bba9f77008afb2ffd", "src_uid": "4c59b4d43b59c8659bf274f3e29d01fe", "apr_id": "c8e725c6cc4e1c797de03035a7a6c872", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{freopen(\"input.txt\",\"r\",stdin);\nfreopen(\"output.txt\",\"w\",stdout);\nint sum=0,i,a[101]={0},n,c=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n {scanf(\"%d\",&a[i]);\n  sum+=a[i];\n }\nfor(i=0;i<n;i++)\n {if((sum-a[i])%2==0)\n   c++;\n}\nprintf(\"%d\",c);\n\nreturn 0;\n}  \n", "fixed": "#include<stdio.h>\n\nint main()\n{int sum=0,i,a[101]={0},n,c=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n {scanf(\"%d\",&a[i]);\n  sum+=a[i];\n }\n \nfor(i=0;i<n;i++)\n {if((sum-a[i])%2==0)\n   c++;\n}\nprintf(\"%d\",c);\n\nreturn 0;\n}  \n"}
{"similarity_score": 0.9837837837837838, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "16d7119f5d89d6c3843ebc24a8b71ee5", "bug_code_uid": "3b6c492a9058f707fac40871877325d2", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "16d16fb08e05bed5499d8c2da3087778", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nlong long int ara[100000];\nint comparefunc(const void *a,const void *b)\n{\n    return (*(int*)a-*(int*)b);\n}\nint main()\n{\n   long long int i,n,m,x;\n    long long sum=0;\n    scanf(\"%lld%lld\",&n,&x);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&ara[i]);\n    qsort(ara,n,sizeof(int),comparefunc);\n    for(i=0;i<n;i++){\n        sum+=ara[i]*x;\n        if(x!=1)\n            x--;\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nlong long int ara[1000000];\nint comparefunc(const void *a,const void *b)\n{\n    return (*(int*)a-*(int*)b);\n}\nint main()\n{\n   long long int i,n,m,x;\n    long long int sum=0;\n    scanf(\"%lld%lld\",&n,&x);\n    for(i=0;i<n;i++)\n        scanf(\"%lld\",&ara[i]);\n    qsort(ara,n,sizeof(long long int),comparefunc);\n    for(i=0;i<n;i++){\n        sum+=ara[i]*x;\n        if(x!=1)\n            x--;\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.7781155015197568, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "15f9fa8559e6ff9e79e4826fa8e817fd", "bug_code_uid": "a03db5307382a8330ee1825000deef41", "src_uid": "9b4a8bc76d634935f6a1438e8a93a781", "apr_id": "ee272d38c98fe44cad87da1940cda925", "difficulty": 800, "tags": ["bitmasks"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <math.h>\r\n \r\n \r\nint calc(int n)\r\n{\r\n    int i = 0;\r\n    for(i = n-1; i >= 0 ; i--)\r\n    {\r\n        n &= i;\r\n        if ( n== 0)\r\n            break;\r\n            \r\n    }\r\n    return i;\r\n}\r\n \r\nint main()\r\n{\r\n    int t = 0;\r\n    int i = 0;\r\n    int* n = NULL;\r\n    int MAX_VAL = 0;\r\n    int k = 0;\r\n    \r\n    MAX_VAL = (int)pow(10, 9);\r\n    \r\n    scanf(\"%d\", &t);\r\n    if( (t > 3000) || (t < 1))\r\n    {\r\n        printf(\"out of range\");\r\n        return 1;\r\n    }\r\n    n = (int*)malloc(sizeof(int)*t);\r\n    if(n == NULL)\r\n    {\r\n        printf(\"malloc error\");\r\n        return 1;\r\n    }\r\n        \r\n    memset(n, 0, t);\r\n    \r\n    for ( i = 0 ; i < t ; i++)\r\n    {\r\n        scanf(\"%d\", &n[i]);\r\n        \r\n    }\r\n    for ( i = 0 ; i < t ; i++)\r\n        printf(\"%d\\n\", calc(n[i]));\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n \r\n \r\nint calc(int n)\r\n{\r\n    int result = 0;\r\n    int p = 1;\r\n    while(1)\r\n    {\r\n        n /= 2;\r\n        if (n==0)\r\n            break;\r\n        result+=p;\r\n        p *= 2;\r\n    }\r\n    return result;\r\n}\r\n \r\nint main()\r\n{\r\n    int t = 0;\r\n    int i = 0;\r\n    int* n = NULL;\r\n    int MAX_VAL = 0;\r\n    int k = 0;\r\n    \r\n    MAX_VAL = (int)pow(10, 9);\r\n    \r\n    scanf(\"%d\", &t);\r\n    if( (t > 30000) || (t < 1))\r\n    {\r\n        printf(\"out of range\");\r\n        return 1;\r\n    }\r\n    n = (int*)malloc(sizeof(int)*t);\r\n        \r\n    memset(n, 0, t);\r\n    \r\n    for ( i = 0 ; i < t ; i++)\r\n    {\r\n        scanf(\"%d\", &n[i]);\r\n \r\n    }\r\n    for ( i = 0 ; i < t ; i++)\r\n        printf(\"%d\\n\", calc(n[i]));\r\n    return 0;\r\n}"}
{"similarity_score": 0.923963133640553, "equal_cnt": 14, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 13, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "f6c4b2d241e604ac594fceeb378c0cf7", "bug_code_uid": "70566d96c6474ccf3624d1927dc6e436", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "f0a8274594d24a2a8bb5409d724ef248", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid main()\n{\n    int n,i,x,y,z,sumx=0,sumy=0,sumz=0;\n    scanf(\"%d\", &n);\n    if(n>=1 && n<=100)\n    {\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\", &x);\n        scanf(\"%d\", &y);\n        scanf(\"%d\", &z);\n        sumx=sumx+x;\n        sumy=sumy+y;\n        sumz=sumz+z;\n    }\n    if(sumx==0 && sumy==0 && sumz==0)\n    printf(\"YES\");\n    else\n    printf(\"NO\");\n    }\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,i,x,y,z,sumx=0,sumy=0,sumz=0;\n    scanf(\"%d\", &n);\n    if(n>=1 && n<=100)\n    {\n        for(i=1;i<=n;i++)\n        {\n            scanf(\"%d\", &x);\n            scanf(\"%d\", &y);\n            scanf(\"%d\", &z);\n            sumx=sumx+x;\n            sumy=sumy+y;\n            sumz=sumz+z;\n        }\n    if(sumx==0 && sumy==0 && sumz==0)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9750644883920895, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "3486c3b9bb220f56a0958ea58daa275d", "bug_code_uid": "a5238461acb02ff1a156d0ceb8b6a0d3", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "91222d4b29d40c810f0ab3a8fe5b2b3b", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint a[1000004];\nint main()\n{\n\tint n,y=2,i,b,m,k,t,c;\n\t\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tmemset(a,0,sizeof(int)*n);\n\twhile(m--){\n\t\tscanf(\"%d\",&t);\n\t\ta[t]=1;\n\t\tif(t==1){\n\t\t\ty=1;\n\t\t}\n\t}\n\ta[1]=2;\n\tc=-1;\n\t\n\twhile(k--){\n\t\tscanf(\"%d%d\",&i,&t);\n\t\tif(c==-1){\n\t\tif(a[i]==2){\n\t\t\tif(a[t]==1){\n\t\t\t\tc=t;\n\t\t\t}\n\t\t}\n\t\tif(a[t]==2){\n\t\t\tif(a[i]==1){\n\t\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tb=a[i]; a[i]=a[t]; a[t]=b;\n\t\t}\t\n\t}\n\tif(y==1){\n\t\tprintf(\"%d\",y);}\n\telse if(c==-1){\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(a[i]==2){\n\t\t\t\tprintf(\"%d\",i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}else printf(\"%d\",c);\n\t\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint a[1000004];\nint main()\n{\n\tint n,y=2,i,b,m,k,t,c;\n\t\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tmemset(a,0,sizeof(int)*n);\n\twhile(m--){\n\t\tscanf(\"%d\",&t);\n\t\ta[t]=1;\n\t\tif(t==1){\n\t\t\ty=1;\n\t\t}\n\t}\n\ta[1]=2;\n\tc=-1;\n\t\n\twhile(k--){\n\t\tscanf(\"%d%d\",&i,&t);\n\t\tif(c==-1){\n\t\tif(a[i]==2){\n\t\t\tif(a[t]==1){\n\t\t\t\tc=t;\n\t\t\t}\n\t\t}\n\t\tif(a[t]==2){\n\t\t\tif(a[i]==1){\n\t\t\t\tc=i;\n\t\t\t}\n\t\t}\n\t\tif(a[t]!=1&&a[i]!=1){\n\t\t\tb=a[i]; a[i]=a[t]; a[t]=b;\n\t\t}\n\t\t}\t\n\t}\n\tif(y==1){\n\t\tprintf(\"%d\",y);}\n\telse if(c==-1){\n\t\tfor(i=1;i<=n;i++){\n\t\t\tif(a[i]==2){\n\t\t\t\tprintf(\"%d\",i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}else printf(\"%d\",c);\n\t\n}"}
{"similarity_score": 0.9257425742574258, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0d65e1f094442a04812ef24a485736e9", "bug_code_uid": "786bbfb6524b4752c249313a29263471", "src_uid": "33a31edb75c9b0cf3a49ba97ad677632", "apr_id": "0fba1bf30a18060852dd59382a80c14d", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint check(int n){\r\n    if((int)sqrt(n)*sqrt(n) == n)\r\n        return 1;\r\n    return 0;\r\n}\r\nint main(){\r\n    int n ;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        int k,a[10000],i;\r\n        scanf(\"%d\",&k);\r\n        for( i = 0;i < k; i++)\r\n            scanf(\"%d\",&a[i]);\r\n        int s = 0;\r\n        for( i = 0;i < k; i++){\r\n            if(check(a[i])  == 0){\r\n                s++;\r\n                break;\r\n            }\r\n        }\r\n        if(s == 0)\r\n            printf(\"YES\\n\");\r\n        else\r\n             printf(\"NO\\n\");\r\n            \r\n        }\r\n        \r\n    \r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint check(int n){\r\n    if((int)sqrt(n)*sqrt(n) == n)\r\n        return 1;\r\n    return 0;\r\n}\r\nint main(){\r\n    int n ;\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        int k,a[10000],i;\r\n        scanf(\"%d\",&k);\r\n        for( i = 0;i < k; i++)\r\n            scanf(\"%d\",&a[i]);\r\n        int s = 0;\r\n        for( i = 0;i < k; i++){\r\n            if(check(a[i])  == 0){\r\n                s++;\r\n                break;\r\n            }\r\n        }\r\n        if(s == 0)\r\n            printf(\"NO\\n\");\r\n        else\r\n             printf(\"YES\\n\");\r\n            \r\n        }\r\n        \r\n    \r\n}"}
{"similarity_score": 0.9978632478632479, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2b35b7d0ca49d6c3ac619439f739b3e8", "bug_code_uid": "c4a538be51deb3471bf378ecfad35503", "src_uid": "20dd260775ea71b1fb5b42bcac90a6f2", "apr_id": "077771aaa3dde2a29a3a6d9b4908b654", "difficulty": 800, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint a[100000];\r\nint main() {\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tint m, min = 1000000, sum = 0;\r\n\t\tscanf(\"%d\", &m);\r\n\t\tfor (int j = 0; j < m; j++) {\r\n\t\t\tscanf(\"%d\", &a[j]);\r\n\t\t\tif (m == 1) {\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tif (min > a[j])min = a[j];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (m != 1) {\r\n\t\t\tfor (int j = 0; j < m; j++) {\r\n\t\t\t\tif (a[j] > min) {\r\n\t\t\t\t\tsum += (a[j] - min);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", sum);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint a[100000];\r\nint main() {\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tint m, min = 100000000, sum = 0;\r\n\t\tscanf(\"%d\", &m);\r\n\t\tfor (int j = 0; j < m; j++) {\r\n\t\t\tscanf(\"%d\", &a[j]);\r\n\t\t\tif (m == 1) {\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tif (min > a[j])min = a[j];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (m != 1) {\r\n\t\t\tfor (int j = 0; j < m; j++) {\r\n\t\t\t\tif (a[j] > min) {\r\n\t\t\t\t\tsum += (a[j] - min);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", sum);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9676025917926566, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6ce08b24b6107fcd35db2cdbfe0b24be", "bug_code_uid": "f9e509765abe24916790ada0eabbf1c0", "src_uid": "6214a85d2be0a908dcbfe089327cf51a", "apr_id": "7607be180791a7eea4e4f99bda9a438f", "difficulty": 1900, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define rep(i,n) REP(i,0,n)\n\nint main(){\n  int i,j,k,l,m,n;\n  int x,y,win;\n\n  while( scanf(\"%d%d%d\",&x,&y,&n)==3 ){\n    win = 0;\n    while(n--){\n      scanf(\"%d%d\",&i,&j);\n      i--; j--;\n      if(x-i-1 < i) i = x-i-1;\n      if(y-j-1 < j) j = y-j-1;\n      if(i<=3 || j<=3) win = 1;\n      if(i+j<=8) win = 1;\n    }\n    if(win) puts(\"YES\"); else puts(\"NO\");\n    break;\n  }\n\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define rep(i,n) REP(i,0,n)\n\nint main(){\n  int i,j,k,l,m,n;\n  int x,y,win;\n\n  while( scanf(\"%d%d%d\",&x,&y,&n)==3 ){\n    win = 0;\n    while(n--){\n      scanf(\"%d%d\",&i,&j);\n      i--; j--;\n      if(x-i-1 < i) i = x-i-1;\n      if(y-j-1 < j) j = y-j-1;\n      if(i<=4 || j<=4) win = 1;\n    }\n    if(win) puts(\"YES\"); else puts(\"NO\");\n    break;\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.27993779160186627, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "e80fc8ece18ed058ea8cd5bdecbbcada", "bug_code_uid": "4213ac97b825d293635152917771d5d7", "src_uid": "0f8ad0ea2befbbe036fbd5e5f6680c21", "apr_id": "e3f41177f631dffe97e6c4430deb4914", "difficulty": 1500, "tags": ["dp", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define N 100009\n\nint primes[N];\n\nvoid g(int n){\n  int k=0;\n  for(int i=2;i<=n;i++)\n    if(n%i==0)\n      if(primes[i]>k)\n        k=primes[i];\n  for(int i=2;i<=n;i++)\n    if(n%i==0)\n      primes[i]=k+1;\n}\n \n  \n\n\nint main(){\n  int n,k;\n  scanf(\"%d\", &n);\n  for(;n;n--){\n    scanf(\"%d\", &k);\n    g(k);  \n  }\n\n  k=1;\n  for(unsigned i=0;i<N;i++)\n    if(primes[i]>k)\n      k=primes[i];\n\n  printf(\"%d\", k);\n\n\n}\n", "fixed": "#include<stdio.h>\n\n\n#define N 100009\n\nunsigned primeMap[N];\nunsigned primes[N];\n\nunsigned sieve(unsigned n){\n  unsigned i, j, m=0;\n  for(i=0;i<n;i++)primeMap[i]=1;\n  for(i=2;i<n;i++){\n    if(primeMap[i]==1){\n      primes[m]=i;\n      m++;\n    }\n\t\tfor(j=0;j<m && primes[j]<=i && primes[j]*i<n;j++)\n\t\t\t  primeMap[primes[j]*i] = i;\n\t}\n\treturn m;\n}\n\nunsigned arr[N];\n\nunsigned max(unsigned a, unsigned b){\n\treturn a>b?a:b;\n}\n\nvoid g(unsigned n){\n  unsigned k, max0=0;\n\tfor(k=n;k>1;k = primeMap[k])\n\t\tmax0 = max(max0, arr[k/primeMap[k]]);\n\n\tfor(k=n;k>1;k = primeMap[k])\n\t  arr[k/primeMap[k]] = max0+1;\n}\n\nint main(){\n  unsigned n,k,m;\n\t\n\tm = sieve(N);\n\n  for(unsigned i=0;i<N;i++)\n\t  arr[i]=0;\n\t\n  scanf(\"%u\", &n);\n  for(unsigned i=0;i<n;i++){\n    scanf(\"%u\", &k);\n\t\tg(k);\n  }\n\n\n  k=1;\n  for(unsigned i=0;i<N;i++)\n    k=max(k, arr[i]);\n\n  printf(\"%u\", k);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.901743264659271, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8cfe375a48d0ae32a913911c28b08823", "bug_code_uid": "f6c472462332da1a6ea5927ac96ab803", "src_uid": "ee40e8b0ed2da53127f53eb694653a30", "apr_id": "a38afa584bac44b95538c01352477272", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nvoid loki()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,i,r=0,diff=0,temp=-1;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n],b[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(b[i]!=0)\r\n\t\t\t{\r\n\t\t\t\tdiff=a[i]-b[i];\r\n\t\t\t\tif(diff<0)\r\n\t\t\t\t{\r\n\t\t\t\t\tr=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif(temp==-1)\r\n\t\t\t\ttemp=diff;\r\n\t\t\t\tif(temp!=diff)\r\n\t\t\t\t{\r\n\t\t\t\t\tr=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(r==0)\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tloki();\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nvoid loki()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,i,r=0,diff=0,temp=-1,max=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint a[n],b[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tif(b[i]!=0)\r\n\t\t\t{\r\n\t\t\t\tdiff=a[i]-b[i];\r\n\t\t\t\tif(diff<0)\r\n\t\t\t\t{\r\n\t\t\t\t\tr=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif(temp==-1)\r\n\t\t\t\ttemp=diff;\r\n\t\t\t\tif(temp!=diff)\r\n\t\t\t\t{\r\n\t\t\t\t\tr=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(b[i]==0)\r\n\t\t\t{\r\n\t\t\t\tdiff=a[i]-b[i];\r\n\t\t\t\tif(max<diff)\r\n\t\t\t\tmax=diff;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(max>temp&&temp!=-1)\r\n\t\tr=1;\r\n\t\tif(r==0)\r\n\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tloki();\r\n}"}
{"similarity_score": 0.5775401069518716, "equal_cnt": 16, "replace_cnt": 6, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "c7f07840dfa4ccb0f9415d809ac6d931", "bug_code_uid": "94f194a1b82e9feb04ac75b32c68ebe7", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "998ae38493eac725eed3987c5224c8d9", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint cmpfunc(const void *a,const void *b)\n{\n    return (*(int*)a - *(int*)b);\n\n    }\nint main()\n{\n   int count = 0;\n   int n,m;\n   int min;\n   int i,j;\n   scanf(\"%d\",&n);\n   int a[n];\n   for(i = 0;i<n;i++)\n     scanf(\"%d\",&a[i]);\n    scanf(\"%d\",&m);\n   int b[m];\n   for(i = 0;i<m;i++)\n       scanf(\"%d\",&b[i]);\n  qsort(a,n,sizeof(int),cmpfunc);\n  qsort(b,m,sizeof(int),cmpfunc);\n  if(n<=m)\n  {\n      min = n;\n     }\n  else\n   min = m;\n\n   for(i = 0;i<min;i++)\n   {\n       p = a[i];\n       q = b[i];\n      if(abs(p-q)<=1)\n      {\n         count++;\n         }\n      }\n    printf(\"%d\\n\",count);\n  return 0;\n   }\n", "fixed": "#include <stdio.h>\nint cmpfunc(const void *a,const void *b)\n{\n    return (*(int*)a - *(int*)b);\n}\nint main()\n{\n   int i,j;\n   int min;\n   int n;\n   int count = 0;\n   scanf(\"%d\",&n);\n   int a[n];\n   for(i = 0;i<n;i++)\n   scanf(\"%d\",&a[i]);\n   int m;\n   scanf(\"%d\",&m);\n   int b[m];\n   for(i = 0;i<m;i++)\n   scanf(\"%d\",&b[i]);\n   qsort(a,n,sizeof(int),cmpfunc);\n   qsort(b,m,sizeof(int),cmpfunc);\n\n   for(i = 0;i<m;i++)\n   {\n      for(j = 0;j<n;j++)\n      {\n          if(a[j] != -1)\n         {\n            if(abs(b[i] - a[j])<=1)\n           { count++;\n            a[j] = -1;\n            break;\n           }\n\n         }\n        }\n      }\n    printf(\"%d\\n\",count);\n    return 0;\n    }\n"}
{"similarity_score": 0.45558086560364464, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e6cf7eb97f3a7829497b48af0388bfa4", "bug_code_uid": "97b0f2cf44d8ce2e75549ef71ff27fbd", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "b02449810f5db24fc2e2857ca346f4bd", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\nint n,b,d,i;\nscanf (\"%d%d%d\",&n,&b,&d);\nint a[n];\n\nfor (i=0;i<n;i++)\n{scanf (\"%d\",&a[i]);\n}\n\nint sum= 0;\nfor (i=0;i<n;i++)\nif (a[i]<=b)\n{\nsum =sum +a[i];\n}\n\nprintf (\"%d\",sum/10);\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint k,n,b,d,i,sum=0,count=0;\nscanf (\"%d%d%d\",&n,&b,&d);\n\nfor (i=0;i<n;i++)\n{\nscanf (\"%d\",&k);\nif (k<=b)\n{\nsum=sum+k;}\nif(sum>d)\n\n{count ++;\nsum=0;\n}\n}\nprintf (\"%d\",count);\nreturn 0;\n}\n"}
{"similarity_score": 0.99568345323741, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "441bd86937786ac7c5f103a5b3c8b25d", "bug_code_uid": "dcbd5209d630e25ab70f050fdd78138c", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "0aa6b2d5ecb62fd439ecce2871842894", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> \nint main() \n{  \n   char str[200];\n   int c = 0;\n   scanf(\"%[^\\n]%*c\", str);\n   int l = strlen(str);\n   \n   for(int i = 1 ; i<l-1 ; i=i+3){\n       for(int j = i+3 ; j<l-1 ; j=j+3 ){\n       if(str[i] == str[j] && str[j]!='0'){\n        str[j] = '0';\n        c = c+1;\n       }\n       }\n   }\n   printf(\"%d\",(l/3)-c);\n   return 0; \n}", "fixed": "#include <stdio.h> \nint main() \n{  \n   char str[1000];\n   int c = 0;\n   scanf(\"%[^\\n]%*c\", str);\n   int l = strlen(str);\n   \n   for(int i = 1 ; i<l-1 ; i=i+3){\n       for(int j = i+3 ; j<l-1 ; j=j+3 ){\n       if(str[i] == str[j] && str[j]!='0'){\n        str[j] = '0';\n        c = c+1;\n       }\n       }\n   }\n   printf(\"%d\",(l/3)-c);\n   return 0; \n}"}
{"similarity_score": 0.8849557522123894, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "967a391a0199880566ac908e9d95df8c", "bug_code_uid": "41c4f4b070a4f0fc1dbbaab8ea37e60c", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "72fcb29d96a10444af35729b6f40e52d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   long int t,i,c=0,k=0,p,q;\n    scanf(\"%ld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%ld%ld\",&p,&q);\n        if(p==q)\n          c++;\n        else if(p<q)\n            k++;\n    }\n    if(c==t)\n     printf(\"0\\n\");\n    else if(k<t)\n      printf(\"%ld\\n\",k);\n    else if(k==t)\n        printf(\"%ld\\n\",t);\n        return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n   long int t,i,c=0,k=0,l=0,p,q;\n    scanf(\"%ld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%ld%ld\",&p,&q);\n        if(p==q)\n          c++;\n        else if((abs(p-q))==1)\n            l++;\n        else if(p<q)\n              k++;\n    }\n    if((c==t)||(l==t))\n     printf(\"0\\n\");\n    else if(k<t)\n      printf(\"%ld\\n\",k);\n    else if(k==t)\n        printf(\"%ld\\n\",t);\n        return 0;\n}"}
{"similarity_score": 0.2746268656716418, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "da234ea346c48fe5288292a6a44daeb7", "bug_code_uid": "cb206d9afe033db0c0de7b9ebff70130", "src_uid": "9d3c0f689ae1e6215448463def55df32", "apr_id": "2a11c3fa6383127c4a2e02d22a626d14", "difficulty": 1200, "tags": ["data structures", "constructive algorithms", "implementation", "two pointers"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nmain()\n{\nchar s[1000000];\ngets(s);\nlong long int l=strlen(s),i,j,t,t1;\nlong long int a[99999]={0};\na[0]=1;\nint k=0;\nfor(i=0;i<(l-1);i++)\n{\nif(s[i]=='l')\n{\nj=k;\nt=a[j];\nwhile(t!=0){t1=a[j+1];a[j+1]=t;t=t1;j++;}\na[k]=i+2;\n}\nif(s[i]=='r')\n{\nk++;\nj=k;\nt=a[j];\nwhile(t!=0){t1=a[j+1];a[j+1]=t;t=t1;j++;}\na[k]=i+2;\n}\n}\ni=0;\nwhile(a[i]!=0)\n{printf(\"%I64d\\n\",a[i]);i++;}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nmain()\n{\nchar s[1000000];\ngets(s);\nlong long int i,h=1,n;\nn=strlen(s);\nint a[n];\nfor(i=-1;i<n-1;i++)\n{\nif(s[i+1]=='r')\nprintf(\"%d\\n\",i+2);\nelse\na[n-(h++)]=i+2;\n}\nfor(i=n-(h-1);i<n;i++)\nprintf(\"%d\\n\",a[i]);\nreturn 0;\n}\n"}
{"similarity_score": 0.9984202211690363, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3667e03e94a718198c7bf5ea8da0d25e", "bug_code_uid": "933c2eabfe66d051d0c10db9fc3853a1", "src_uid": "c80cdf090685d40fd34c3fd082a81469", "apr_id": "ffb09ab01f342fbb00e17afdbc9c117b", "difficulty": 2400, "tags": ["dp", "constructive algorithms", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t100\n#define M\t100\n\nvoid fill(int *aa, int n) {\n\tint i;\n\n\tif (n == 1) {\n\t\taa[0] = 1;\n\t\treturn;\n\t}\n\tif (n == 2) {\n\t\taa[0] = 3, aa[1] = 4;\n\t\treturn;\n\t}\n\tif (n % 2 == 0) {\n\t\tfor (i = 0; i < n - 1; i++)\n\t\t\taa[i] = 1;\n\t\taa[n - 1] = n / 2 - 1;\n\t}\n\tif (n % 2 == 1) {\n\t\taa[i] = 2;\n\t\tfor (i = 1; i < n - 1; i++)\n\t\t\taa[i] = 1;\n\t\taa[n - 1] = (n + 1) / 2;\n\t}\n}\n\nint main() {\n\tstatic int aa[N], bb[M];\n\tint n, m, i, j;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfill(aa, n);\n\tfill(bb, m);\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++)\n\t\t\tprintf(\"%d \", aa[i] * bb[j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t100\n#define M\t100\n\nvoid fill(int *aa, int n) {\n\tint i;\n\n\tif (n == 1) {\n\t\taa[0] = 1;\n\t\treturn;\n\t}\n\tif (n == 2) {\n\t\taa[0] = 3, aa[1] = 4;\n\t\treturn;\n\t}\n\tif (n % 2 == 0) {\n\t\tfor (i = 0; i < n - 1; i++)\n\t\t\taa[i] = 1;\n\t\taa[n - 1] = n / 2 - 1;\n\t}\n\tif (n % 2 == 1) {\n\t\taa[0] = 2;\n\t\tfor (i = 1; i < n - 1; i++)\n\t\t\taa[i] = 1;\n\t\taa[n - 1] = (n + 1) / 2;\n\t}\n}\n\nint main() {\n\tstatic int aa[N], bb[M];\n\tint n, m, i, j;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfill(aa, n);\n\tfill(bb, m);\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++)\n\t\t\tprintf(\"%d \", aa[i] * bb[j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7021943573667712, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "5d8c6412814ebfc6e74b834aec1f3389", "bug_code_uid": "c27d151242d13d38ecbb69d7f28fc5b0", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "e7261885d165a607c67d8b1dac906e5f", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int n,k,i=1;\n\t\n\tscanf(\"%ld %ld\",&n,&k);\nwhile(1)\n{\nif(k<=i*n)\n{\tprintf(\"%ld\",i);\nreturn 0;\n}\ni++;\n\n}\nreturn 0;\n}\n\t\n", "fixed": "#include<stdio.h>\nint main()\n{\nunsigned long long int n,k,i=1;\n\t\n\tscanf(\"%llu %llu\",&n,&k);\nif(k%n==0)\n\tprintf(\"%llu\",k/n);\nelse\nprintf(\"%llu\",(k/n+1));\nreturn 0;\n}\n\t\n"}
{"similarity_score": 0.9742962056303549, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dbd2040d70aa3d8567f365f789abf05d", "bug_code_uid": "acf7e07bc3278cadf5ad73d4bdbae1ad", "src_uid": "10927dcb59007fc3a31fdb6b5d13846f", "apr_id": "fe9d5d859229f3ac081b2129d2ad5163", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nvoid main()\r\n{\r\n    int t,i,j;\r\n    while(t--)\r\n    {\r\n        int n,k;\r\n        scanf(\"%d%d\",&n,&k);\r\n        int p[n];\r\n        for(i=1;i<=n;i++)\r\n         scanf(\"%d\",&p[i]);\r\n         int c=0;\r\n        for(i=1;i<=k;i++)\r\n        {\r\n            for(j=1;j<=k;j++)\r\n            {  if(p[j]==i)\r\n                c++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",k-c);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nvoid main()\r\n{\r\n    int t,i,j;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,k;\r\n        scanf(\"%d%d\",&n,&k);\r\n        int p[n];\r\n        for(i=1;i<=n;i++)\r\n         scanf(\"%d\",&p[i]);\r\n         int c=0;\r\n        for(i=1;i<=k;i++)\r\n        {\r\n            for(j=1;j<=k;j++)\r\n            {  if(p[j]==i)\r\n                c++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",k-c);\r\n    }\r\n}"}
{"similarity_score": 0.9387755102040817, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3d77d4411c9b2e6ff2fb2dc6ab30ff87", "bug_code_uid": "f43e9259800df0e561e975133907e116", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "50d73039fedbd1ccbccc1018cd4f6172", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n      int l[50],r[50],x,n,i,j,t=0;\n    scanf(\"%d%d\",&n,&x);\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&l[i],&r[i]);\n\n    j=(l[0]-1)%x;\n    t=t+j+r[0]+1-l[0];\n\n    for(i=1;i<n;i++)\n    {\n        j=(l[i]-1-r[i-1])%x;\n        t=t+j+r[i]+1-l[i];\n    }\n    printf(\"%d\",t);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n      int x,n,i,j,t=0;\n    scanf(\"%d%d\",&n,&x);\n    int l[n],r[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d%d\",&l[i],&r[i]);\n    j=(l[0]-1)%x;\n    t=t+j+r[0]+1-l[0];\n\n    for(i=1;i<n;i++)\n    {\n        j=(l[i]-1-r[i-1])%x;\n        t=t+j+r[i]+1-l[i];\n    }\n    printf(\"%d\",t);\n    return 0;\n}\n"}
{"similarity_score": 0.9101214574898785, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d9db8984c86c97355a620a6803eec9d8", "bug_code_uid": "ea2183d69fbd8bb6dad1145d35d67d81", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "af2a92257df2556f7a1521abe2e1d163", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,k,l;\n    scanf(\"%d\",&n);\n    int A[n],B[n];\n    if(n>2)\n    {\n        k=2;\n        scanf(\"%d %d\",&A[0],&B[0]);\n        scanf(\"%d %d\",&A[1],&B[1]);\n        for(i=2; i<n; i++)\n        {\n            scanf(\"%d %d\",&A[i],&B[i]);\n            if(A[i-1]-B[i-1]>A[i-2]||A[i-1]+B[i-1]<A[i])\n            {\n               k++;\n            }\n        }\n        printf(\"%d\\n\",k);\n    }\n    else\n    {\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d %d\",&A[i],&B[i]);\n        }\n        printf(\"%d\\n\",n);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,k,l;\n    scanf(\"%d\",&n);\n    int A[n],B[n];\n    if(n>2)\n    {\n        k=2;\n        scanf(\"%d %d\",&A[0],&B[0]);\n        scanf(\"%d %d\",&A[1],&B[1]);\n        for(i=2; i<n; i++)\n        {\n            scanf(\"%d %d\",&A[i],&B[i]);\n            if(A[i-1]-B[i-1]>A[i-2])\n            {\n               k++;\n            }\n            else if(A[i-1]+B[i-1]<A[i])\n            {\n                k++;\n                A[i-1]=A[i-1]+B[i-1];\n            }\n        }\n        printf(\"%d\\n\",k);\n    }\n    else\n    {\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d %d\",&A[i],&B[i]);\n        }\n        printf(\"%d\\n\",n);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9762419006479481, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "74baea68e5d5a4ff966f6ce3ae8f9949", "bug_code_uid": "ea7298265e6e3fbc6a28ea096eda3f88", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "168048fa30932d400cd7442f69f22327", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int i,n,j,fl=0,c=0;\n    scanf(\"%I64d\",&n);\n\n    long long int a[n];double b;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        b=pow(a[i],0.5);\n        if(b==(int)b&&a[i]!=1)\n        {\n            for(j=1; j<=b/2; j++)\n            {\n                if((int)b%j==0)c++;\n            }\n\n        }\n\n        if(c==1) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n        c=0;\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int i,n,j,fl=0,c=0;\n    scanf(\"%I64d\",&n);\n\n    long long int a[n];double b;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a[i]);\n        b=sqrt(a[i]);\n        if(b==(int)b&&a[i]!=1)\n        {\n            for(j=1; j<=sqrt(b); j++)\n            {\n                if((int)b%j==0)c++;\n            }\n\n        }\n\n        if(c==1) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n        c=0;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9535283993115319, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "490f05434560bf93ad9dc8bc45a81fc0", "bug_code_uid": "b3acc62e3f62e11b38dae6b3e94faa06", "src_uid": "288b36b64473326ea434dc74f05ae456", "apr_id": "5412ba7f33bf395b7f92b05ba0bcb17f", "difficulty": 800, "tags": ["bitmasks", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define ll long long\r\n\r\nint main()\r\n{\r\n    int tc;\r\n    scanf(\"%i\", &tc);\r\n    \r\n    for (int i = 0; i < tc; i++)\r\n    {\r\n        ll x;\r\n        scanf(\"%lld\", &x);\r\n        ll n = x;\r\n        \r\n        if (x % 2 != 0)\r\n        {\r\n            if (x != 1)\r\n            {\r\n                printf(\"1\\n\");\r\n            }\r\n            \r\n            else\r\n            {\r\n                printf(\"3\\n\");\r\n            }\r\n        }\r\n        \r\n        else\r\n        {\r\n            ll k = 0;\r\n            while (x&1 == 0)\r\n            {\r\n                x = x >> 1;\r\n                k++;\r\n            }\r\n            \r\n            if (pow(2, k) == n)\r\n            {\r\n                printf(\"%i\\n\", n + 1);\r\n            }\r\n            \r\n            else\r\n            {\r\n                printf(\"%i\\n\", pow(2, k));\r\n            }\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main()\r\n{\r\n    int tc;\r\n    scanf(\"%i\", &tc);\r\n    \r\n    for (int i = 0; i < tc; i++)\r\n    {\r\n        long long x;\r\n        scanf(\"%lld\", &x);\r\n        long long n = x;\r\n        \r\n        if ((x % 2) != 0)\r\n        {\r\n            if (x != 1)\r\n            {\r\n                printf(\"1\\n\");\r\n            }\r\n            \r\n            else\r\n            {\r\n                printf(\"3\\n\");\r\n            }\r\n        }\r\n        \r\n        else\r\n        {\r\n            long long k = 0;\r\n            while ((x&1) == 0)\r\n            {\r\n                x = x >> 1;\r\n                k++;\r\n            }\r\n            \r\n            if (pow(2, k) == n)\r\n            {\r\n                printf(\"%lld\\n\", n + 1);\r\n            }\r\n            \r\n            else\r\n            {\r\n                printf(\"%lld\\n\", (long long)pow(2, k));\r\n            }\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.5142857142857142, "equal_cnt": 24, "replace_cnt": 14, "delete_cnt": 5, "insert_cnt": 5, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "8a42e7082ec34526e1dca5353f7b0144", "bug_code_uid": "9b675dcc081678768e3a46e8c15534f6", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "f34d3e031033e476a0ca7772f268a0ff", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,c[100],d;\r\n    int i,j;\r\n    int f=0;\r\n    scanf(\"%d\",&a);\r\n    for(i=0;i<a;i++)\r\n    {\r\n        scanf(\"%d\",&b);\r\n        for(j=0;j<2*b;j++)\r\n        {\r\n            scanf(\"%d\",&c[j]);\r\n        }\r\n        for(j=0;j<2*b;j++)\r\n        {\r\n            if((c[j]+c[j+1])%2!=0)\r\n                j++;\r\n                f=f+1;\r\n        }\r\n        if (f==b)\r\n            printf(\"Yes\\n\");\r\n        else\r\n        {\r\n            printf(\"No\\n\");\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n = 0;\r\n        scanf(\"%d\", &n);\r\n        int A[2 * n];\r\n        int sum = 0;\r\n        int even = 0;\r\n        int odd = 0;\r\n        for (int i = 0; i < 2 * n; i++)\r\n        {\r\n            scanf(\"%d\", &A[i]);\r\n\r\n            if (A[i] % 2 == 0)\r\n            {\r\n                even++;\r\n            }\r\n            if (A[i] % 2 == 1)\r\n            {\r\n                odd++;\r\n            }\r\n        }\r\n        if (odd == even)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n\r\n}\r\n}\r\n"}
{"similarity_score": 0.37543859649122807, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "8140ab5f19a0c517d222b549ba0d2505", "bug_code_uid": "d0a0cd9929529ed5c4c276a52227529e", "src_uid": "a4c82fffb31bc7e42870fd84e043e815", "apr_id": "5c0523a0f15441bf805df6423f388b28", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include<stdio.h>\n     \n    int main(){\n        long long int n,t, k,i;\n        scanf(\"%d\",&t);\n        for(i = 1;i <= t;i++)\n        {scanf(\"%d\",&n);\n        scanf(\"%d\",&k);\n        if((n >= (k*k)) && (k+n)%2 == 0)\n        printf(\"\\nYES\");\n        else\n        printf(\"\\nNO\");\n            \n        }\n    return 0;\n    }", "fixed": "    #include <stdio.h>\n     \n    int main() {\n    \tint t;\n     \n    \tscanf(\"%d\", &t);\n    \twhile (t--) {\n    \t\tint n, k;\n     \n    \t\tscanf(\"%d%d\", &n, &k);\n    \t\tprintf(k <= n / k && n % 2 == k % 2 ? \"YES\\n\" : \"NO\\n\");\n    \t}\n    \treturn 0;\n    }"}
{"similarity_score": 0.9519038076152304, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a720cbcb50599e1611623d9cc871ff22", "bug_code_uid": "6bd33cfd0adcf33d2a5dd767c319f5e5", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "0aba4775313670d531f0445c5d4ca51b", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint  main()\n{\n    int i,j,n;\n    scanf(\"%d\",&n);\n    char g[6];\n    char a[n],b[n],c[n],d[n],e[n];\n    for(i=0;i<n;i++){\n        scanf(\" %c %c %c %c %c\",&a[i],&b[i],&e[i],&c[i],&d[i]);\n    }\n    for(i=0;i<n;i++){\n        if(((a[i]=='o')&&(b[i]=='o'))|| ((c[i]=='o')&&(d[i]=='o'))){\n            if(((a[i]=='o')&&(b[i]=='o'))){\n                a[i]='+';\n                b[i]='+';\n            }\n            else{\n                c[i]='+';\n                d[i]='+';\n            }\n             break;\n        }\n        else{\n            a[i]=a[i];\n            b[i]=b[i];\n            c[i]=c[i];\n            d[i]=d[i];\n        }\n  }\n int count=0;\n int m=0;\n while(m<n){\n        for(i=0;i<n;i++){\n    if(a[i]=='+'||b[i]=='+'||c[i]=='+'||d[i]=='+'){\n        count++;\n    }\n        }\n        m++;\n }\n if(count>0){\n    printf(\"YES\\n\");\n    for(i=0;i<n;i++){\n        printf(\"%c%c%c%c%c\\n\",a[i],b[i],e[i],c[i],d[i]);\n    }\n }\n else{\n    printf(\"NO\\n\");\n }\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint  main()\n{\n    int i,j,n;\n    scanf(\"%d\",&n);\n    char g[6];\n    char a[n],b[n],c[n],d[n],e[n];\n    for(i=0;i<n;i++){\n        scanf(\" %c %c %c %c %c\",&a[i],&b[i],&e[i],&c[i],&d[i]);\n    }\n    for(i=0;i<n;i++){\n        if(((a[i]=='O')&&(b[i]=='O'))|| ((c[i]=='O')&&(d[i]=='O'))){\n            if(((a[i]=='O')&&(b[i]=='O'))){\n                a[i]='+';\n                b[i]='+';\n            }\n            else{\n                c[i]='+';\n                d[i]='+';\n            }\n             break;\n        }\n        else{\n            a[i]=a[i];\n            b[i]=b[i];\n            c[i]=c[i];\n            d[i]=d[i];\n        }\n  }\n int count=0;\n int m=0;\n while(m<n){\n        for(i=0;i<n;i++){\n    if(a[i]=='+'||b[i]=='+'||c[i]=='+'||d[i]=='+'){\n        count++;\n    }\n        }\n        m++;\n }\n if(count>0){\n    printf(\"YES\\n\");\n    for(i=0;i<n;i++){\n        printf(\"%c%c%c%c%c\\n\",a[i],b[i],e[i],c[i],d[i]);\n    }\n }\n else{\n    printf(\"NO\\n\");\n }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9528907922912205, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c272cf8bb7ac9b8f68e0410efb0af594", "bug_code_uid": "50ddd266a86e00fc737ce85894e5bbf7", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "2c76c4fd9143b6e258ddd3bb0e029cc9", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main ()\n{\n    int n,x,i,a[100001],s=0,j,m;\n    scanf(\"%d%d\",&n,&x);\n    m=0;\n    for(i=0;i<n;i++)\n    {\n       scanf(\"%d\",&a[i]);\n\n    }\n    for(i=0;i<n;i++)\n    {\n        s=s+a[i];\n    }\n    if(abs(s)==x ||abs(s)<x)\n        printf(\"1\");\n    else if(abs(s)>x)\n    {\n     for(j=1;j<1001;j++)\n     {\n         m=x*j;\n         if(abs(s)<=m)\n            break;\n     }\n  printf(\"%d\",j);\n    }\n\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main ()\n{\n    int n,x,i,a[100001],s=0,j,m;\n    scanf(\"%d%d\",&n,&x);\n    m=0;\n    for(i=0;i<n;i++)\n    {\n       scanf(\"%d\",&a[i]);\n\n    }\n    for(i=0;i<n;i++)\n    {\n        s=s+a[i];\n    }\n    if(s==0)\n        printf(\"0\");\n    \n    else if(abs(s)==x ||abs(s)<x)\n        printf(\"1\");\n    else if(abs(s)>x)\n    {\n     for(j=1;j<1001;j++)\n     {\n         m=x*j;\n         if(abs(s)<=m)\n            break;\n     }\n  printf(\"%d\",j);\n    }\n\n\n    return 0;\n}"}
{"similarity_score": 0.9532820816085157, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "3bd499f0810dd27cf5376e89bd4006b1", "bug_code_uid": "01c1ba18c4a5ed060a157fb8a6d36bd2", "src_uid": "7eff98fbcf4e4a3284e2d2f98351fe4a", "apr_id": "14ff3cec902f67f99bf5fd907cf58df6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\n    int i,j,c=0,d=0,e=0,f=0,g=0,h=0,num;\n    scanf(\"%d\",&num);\n    char a[num][6];\n    char a1[]=\"purple\";\n    char a2[]=\"green\";\n    char a3[]=\"blue\";\n    char a4[]=\"orange\";\n    char a5[]=\"red\";\n    char a6[]=\"yellow\";\n    for(i=0;i<num;i++)\n    {\n        scanf(\" %s\",&a[i]);\n        if(strcmp(a[i],a1)==0){c=1;}\n        else if(strcmp(a[i],a2)==0){d=1;}\n        else if(strcmp(a[i],a3)==0){e=1;}\n        else if(strcmp(a[i],a4)==0){f=1;}\n        else if(strcmp(a[i],a5)==0){g=1;}\n        else if(strcmp(a[i],a6)==0){h=1;}\n\n    }\n        if(c==0){printf(\"Power\\n\");}\n        if(d==0){printf(\"Time\\n\");}\n         if(e==0){printf(\"Space\\n\");}\n         if(f==0){printf(\"Soul\\n\");}\n        if(g==0){printf(\"Reality\\n\");}\n         if(h==0){printf(\"Mind\\n\");}\n\n\n\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\n    int i,j,c=0,d=0,e=0,f=0,g=0,h=0,num,sum=0;\n    scanf(\"%d\",&num);\n    char a[num][6];\n    char a1[]=\"purple\";\n    char a2[]=\"green\";\n    char a3[]=\"blue\";\n    char a4[]=\"orange\";\n    char a5[]=\"red\";\n    char a6[]=\"yellow\";\n    for(i=0;i<num;i++)\n    {\n        scanf(\" %s\",&a[i]);\n        if(strcmp(a[i],a1)==0){c=1;sum++;}\n        else if(strcmp(a[i],a2)==0){d=1;sum++;}\n        else if(strcmp(a[i],a3)==0){e=1;sum++;}\n        else if(strcmp(a[i],a4)==0){f=1;sum++;}\n        else if(strcmp(a[i],a5)==0){g=1;sum++;}\n        else if(strcmp(a[i],a6)==0){h=1;sum++;}\n\n    }printf(\"%d\\n\",6-sum);\n        if(c==0){printf(\"Power\\n\");}\n        if(d==0){printf(\"Time\\n\");}\n         if(e==0){printf(\"Space\\n\");}\n         if(f==0){printf(\"Soul\\n\");}\n        if(g==0){printf(\"Reality\\n\");}\n         if(h==0){printf(\"Mind\\n\");}\n\n\n\n\n\n}\n"}
{"similarity_score": 0.9895833333333334, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "dc1bb6b90e819fc7f13fd6834424e41b", "bug_code_uid": "5a3989ce9db8bec1f9bcc03702cd76da", "src_uid": "d7fe15a027750c004e4f50175e1e20d2", "apr_id": "64b3bc88dba7d77e600d80b66cfa60da", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int s=0,i,n=0,j;\n    char c[100];\n\n    //for(i=0;i<100;i++)\n       while(scanf(\"%s\",c)!=EOF){\n      //  gets(c[i]);\n        if(c[0]=='+')\n        {\n            n++;\n        }\n        else if(c[0]=='-')\n        {\n            n--;\n        }\n        else\n        {   int num=0;\n            for(j=0;j<strlen(c);j++)\n            {   num++;\n                if(c[j]==':')\n                {\n                    num=0;\n                }\n\n            }\n            s+=num*n;\n        }\n    }\n    printf(\"%d\",s);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    int s=0,i,n=0,j;\n    char c[100];\n\n    //for(i=0;i<100;i++)\n       while( scanf(\"%[^\\n]%*c\", c)!=EOF){\n      //  gets(c[i]);\n        if(c[0]=='+')\n        {\n            n++;\n        }\n        else if(c[0]=='-')\n        {\n            n--;\n        }\n        else\n        {   int num=0;\n            for(j=0;j<strlen(c);j++)\n            {   num++;\n                if(c[j]==':')\n                {\n                    num=0;\n                }\n\n            }\n            s+=num*n;\n        }\n    }\n    printf(\"%d\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.967391304347826, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "98b55376cea418da8e9663d121486103", "bug_code_uid": "c13e34236bebde12e84266af3a604c2a", "src_uid": "0054f9e2549900487d78fae9aa4c2d65", "apr_id": "1f8b06663b74509848eb69c1f8f820ff", "difficulty": 1500, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main (void) {\n    int n;\n    scanf (\"%d\", &n);\n    int x[n+1], y[n+1];\n    int i;\n    for (i=0; i<=n; i++) {\n        scanf (\"%d %d\", &x[i], &y[i]);\n    }\n    int vx[n], vy[n];\n    int j=0;\n    for (i=1; i<=n; i++) {\n        vx[j]=x[i]-x[j];\n        vy[j]=y[i]-y[j];\n        j++;\n    }\n    int a[n];\n    int b=0;\n    for (i=1; i<=n; i++) {\n        a[b]=vx[b]*vy[i]-vx[i]*vy[b];\n        b++;\n    }\n    int s=0;\n    int z=0;\n    while (z<n) {\n        if (a[z]>0) {\n            s=s+1;\n            z++;\n        }\n        else {\n            z++;\n        }\n    }\n    printf (\"%d\\n\", s);\n    return 0;\n}\n\n/* 1480966339083 */", "fixed": "#include<stdio.h>\nint main (void) {\n    int n;\n    scanf (\"%d\", &n);\n    int x[10010], y[10010];\n    int i;\n    for (i=0; i<=n; i++) {\n        scanf (\"%d %d\", &x[i], &y[i]);\n    }\n    int vx[10010], vy[10010];\n    int j=0;\n    for (i=1; i<=n; i++) {\n        vx[j]=x[i]-x[j];\n        vy[j]=y[i]-y[j];\n        j++;\n    }\n    int a[n];\n    int b=0;\n    for (i=1; i<=n; i++) {\n        a[b]=vx[b]*vy[i]-vx[i]*vy[b];\n        b++;\n    }\n    int s=0;\n    int z=0;\n    while (z<n) {\n        if (a[z]>0) {\n            s=s+1;\n            z++;\n        }\n        else {\n            z++;\n        }\n    }\n    printf (\"%d\\n\", s);\n    return 0;\n}\n\n/* 1480967045754 */"}
{"similarity_score": 0.8939974457215837, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "909535cb9761fc93d1b0677365490904", "bug_code_uid": "a6df1f11790c47937d82447d906b8798", "src_uid": "1adb4675dc88208f8a05a2db49bb44cb", "apr_id": "0d3687e589f8246100ab76bf631390cb", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nint n, k, r[201], i;\n\nint peak(int i) {\n\treturn i%2!=0;\n}\n\nint main(void) {\n\tscanf(\"%d %d\", &n, &k);\n\tfor (i=0; i<2*n+1; ++i) scanf(\"%d\", &r[i]);\n\tfor (i=0; i<2*n+1; ++i) {\n\t\tif (peak(i)&&k>0) { --k; --r[i]; }\n\t}\n\tfor (i=0; i<2*n+1; ++i) printf(\"%d \", r[i]); printf(\"\\n\");\n\texit(EXIT_SUCCESS);\n}\n", "fixed": "#include <limits.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nint n, k, r[201], i;\n\nint peak(int i) {\n\tint m;\n\tif (i==0||i==200) return 0;\n\tm=r[i-1]>r[i+1]?r[i-1]:r[i+1];\n\treturn r[i]-m>1;\n}\n\nint main(void) {\n\tscanf(\"%d %d\", &n, &k);\n\tfor (i=0; i<2*n+1; ++i) scanf(\"%d\", &r[i]);\n\tfor (i=0; i<2*n+1; ++i) {\n\t\tif (peak(i)&&k>0) { --k; --r[i]; }\n\t}\n\tfor (i=0; i<2*n+1; ++i) printf(\"%d \", r[i]); printf(\"\\n\");\n\texit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9776674937965261, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "f6880a8ebca4864d9d162ecb93433241", "bug_code_uid": "3a6e5472fb76000c34bd81c5939aad48", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "ec26c56b613f9184ad63a33fe3fd3d20", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char *argv[])\n{\n    char input[100001];\n    int length,m,j,k,i,result[100001]={0};\n\n    while((input[length++]=getchar())!='\\n')\n        ;\n    scanf(\"%d\",&m);\n    for(i=m-1;i>=0;i--)\n    {\n     result[i]=result[i+1]+(input[i]==input[i+1]);\n    }\n    while(m--)\n    {\n      scanf(\"%d%d\",&j,&k);\n     printf(\"%d\\n\",result[j]-result[k]);\n    }  \n   \nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(int argc, char *argv[])\n{\n    char input[100001];\n    int length=0,m,j,k,i,result[100001]={0};\n\n    while((input[length++]=getchar())!='\\n')\n        ;\n    scanf(\"%d\",&m);\n    for(i=length-2;i>=0;i--)\n    {\n     result[i]=result[i+1]+(input[i]==input[i+1]);\n    }\n    while(m--)\n    {\n      scanf(\"%d%d\",&j,&k);\n     printf(\"%d\\n\",result[j-1]-result[k-1]);\n    }  \n   \nreturn 0;\n}"}
{"similarity_score": 0.8355263157894737, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c595b13d1f250a2c5a0796c0e36074aa", "bug_code_uid": "2fcaaa291743a16ba2fad774959f5caf", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "f4cb4af16bb1e50640de93277fb6a7c2", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int n,a[10000],i,col,row,t;\n    char d;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%c%d\",&row,&d,&col);\n        if(col%2==0)\n            a[i]=(col/2)*row;\n\n        else\n        {\n            t=(col/2)*row;\n            if(row%2==0)\n                t+=row/2;\n            else\n                t+=(row/2+1);\n        }\n        a[i]=t;\n    }\n    for(i=0;i<n;i++)\n        printf(\"%d\\n\",a[i]);\n\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    int n,a[10000],i,col,row,t;\n    char d;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%c%d\",&row,&d,&col);\n        if(col%2==0)\n            a[i]=(col/2)*row;\n\n        else\n        {\n            t=(col/2)*row;\n            if(row%2==0)\n                t+=row/2;\n            else\n                t+=(row/2)+1;\n                 a[i]=t;\n        }\n\n    }\n    for(i=0;i<n;i++)\n        printf(\"%d\\n\",a[i]);\n\n}\n"}
{"similarity_score": 0.9069148936170213, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4c467146954e1e27fd7fd703cddc6642", "bug_code_uid": "1e069669853d08f78c794a6505eceb86", "src_uid": "c9744e25f92bae784c3a4833c15d03f4", "apr_id": "bfafae42800a887a6a1c843eae074864", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    long int n,i,ini=0,fin=0,ban=0;\n    scanf(\"%ld\",&n);\n    long int a[n];\n    for(i=0 ; i<n ; i++){\n        scanf(\"%ld\",&a[i]);\n        if(i>0){\n            if(a[i]<a[i-1] && ban==0){\n                ini=i-1;\n                fin=i;\n                ban++;\n            }else if(a[i]<a[i-1] && ban==1){\n                ban=i;\n            }else if(a[i]<a[i-1] && ban>1){\n                ban++;\n            }else if(a[i]>a[i-1] && ban==1){\n                ban++;\n            }\n        }\n    }\n    if((fin!=n-1 && a[ini]>a[fin+1]) || (ini!=0 && a[ini-1]>a[fin])){\n        ban=ban+2;\n    }\n    if (ban>2){\n        printf(\"no\");\n    }else{\n        printf(\"yes\\n\");\n        printf(\"%ld %ld\",ini+1,fin+1);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    long int n,i,ini=0,fin=0,ban=0;\n    scanf(\"%ld\",&n);\n    long int a[n];\n    for(i=0 ; i<n ; i++){\n        scanf(\"%ld\",&a[i]);\n        if(i>0){\n            if(a[i]<a[i-1] && ban==0){\n                ini=i-1;\n                fin=i;\n                ban++;\n            }else if(a[i]<a[i-1] && ban==1){\n                fin=i;\n            }else if(a[i]>a[i-1] && ban==1){\n                ban++;\n            }else if(a[i]<a[i-1] && ban>1){\n                ban++;\n            }\n        }\n    }\n    if((fin!=n-1 && a[ini]>a[fin+1]) || (ini!=0 && a[ini-1]>a[fin])){\n        ban=ban+2;\n    }\n    if (ban>2){\n        printf(\"no\");\n    }else{\n        printf(\"yes\\n\");\n        printf(\"%ld %ld\",ini+1,fin+1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9988276670574443, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cb1a84de584fa8afeae0a5cc96a637f8", "bug_code_uid": "e30670647d8fb3fe7f7621fd97bcdec3", "src_uid": "49c47ebfd710a3733ce7ecb3a3c134a7", "apr_id": "338d527da8756dcdbf2b8f8494def1b6", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,m,i,q,p,t;\n    int a[110],b[110];\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)scanf(\"%d\",a+i);\n    for(i=0;i<m;i++)scanf(\"%d\",b+i);\n    p=q=a[0];\n    t=b[0];\n    for(i=1;i<n;i++){\n        if(p>a[i])p=a[i];\n        if(q<a[i])q=a[i];\n    }\n    for(i=1;i<m;i++)\n        if(t>b[i])t=b[i];\n    if(2*p>=t || t<q)printf(\"-1\\n\");\n    else\n        printf(\"%d\\n\",q>2*p ? q:2*p);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int n,m,i,q,p,t;\n    int a[110],b[110];\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)scanf(\"%d\",a+i);\n    for(i=0;i<m;i++)scanf(\"%d\",b+i);\n    p=q=a[0];\n    t=b[0];\n    for(i=1;i<n;i++){\n        if(p>a[i])p=a[i];\n        if(q<a[i])q=a[i];\n    }\n    for(i=1;i<m;i++)\n        if(t>b[i])t=b[i];\n    if(2*p>=t || t<=q)printf(\"-1\\n\");\n    else\n        printf(\"%d\\n\",q>2*p ? q:2*p);\n    return 0;\n}\n"}
{"similarity_score": 0.9953271028037384, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3218d853a66f3b16da33d107696b0166", "bug_code_uid": "d0815254bab2570a111eef1052f6182c", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "840efdd441a947a45438956acef740a6", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i,j,temp;\nscanf(\"%d\",&n);\nint arr[n];\nfor(i=0;i<n;i++)\nscanf(\"%d\",&arr[i]);\n\nfor ( i = 0 ; i <= n-2; i++ )\n{\n    for ( j = i + 1 ; j <= n-1 ; j++ )\n    {\n\t\t\tif ( arr[i] > arr[j] )\n\t\t\t{\n\t\t\t\ttemp = arr[i] ;\n\t\t\t\tarr[i] = arr[j] ;\n\t\t\t\tarr[j] = temp ;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(i=1;i<n;i++)\n    {\n\tif(arr[i]>arr[0])\n    {\n\tprintf(\"%d\",arr[i]);\n\treturn 0;\n    }\n    }\n    printf(\"-1\");\n    return 0;\n}\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i,j,temp;\nscanf(\"%d\",&n);\nint arr[n];\nfor(i=0;i<n;i++)\nscanf(\"%d\",&arr[i]);\n\nfor ( i = 0 ; i <= n-2; i++ )\n{\n    for ( j = i + 1 ; j <= n-1 ; j++ )\n    {\n\t\t\tif ( arr[i] > arr[j] )\n\t\t\t{\n\t\t\t\ttemp = arr[i] ;\n\t\t\t\tarr[i] = arr[j] ;\n\t\t\t\tarr[j] = temp ;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(i=1;i<n;i++)\n    {\n\tif(arr[i]>arr[0])\n    {\n\tprintf(\"%d\",arr[i]);\n\treturn 0;\n    }\n    }\n    printf(\"NO\");\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.9767441860465116, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c4a16bc045bdccbae7080e33dfc68793", "bug_code_uid": "b6c65ae544bbcbd5ccb2c4b8abce45d1", "src_uid": "dcca7c58ba7111125608f659a577c3a2", "apr_id": "2ebe9d3960fb8b6f23134116a219fdd8", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,s,min;\n    int a[101];\n    scanf(\"%d %d\",&n,&s);\n    for(int i=0;i<n;i++)\n    {\n        int h,m;\n        scanf(\"%d %d\",&h,&m);\n        a[i]=60*h+m;\n    }\n    if(a[0]>=s+1)\n    {\n        printf(\"0 0\");\n        return 0;\n    }\n    for(int i=0;i<n;i++)\n    {\n        if((a[i+1]-a[i])>=2*s+2)\n        {\n            min=a[i]+s+1;\n            printf(\"%d %d\",min/60, min%60);\n            return 0;\n        }\n    }\n    min= a[n-1]+s+1;\n    printf(\"%d\",min);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,s,min;\n    int a[101];\n    scanf(\"%d %d\",&n,&s);\n    for(int i=0;i<n;i++)\n    {\n        int h,m;\n        scanf(\"%d %d\",&h,&m);\n        a[i]=60*h+m;\n    }\n    if(a[0]>=s+1)\n    {\n        printf(\"0 0\");\n        return 0;\n    }\n    for(int i=0;i<n;i++)\n    {\n        if((a[i+1]-a[i])>=2*s+2)\n        {\n            min=a[i]+s+1;\n            printf(\"%d %d\",min/60, min%60);\n            return 0;\n        }\n    }\n    min= a[n-1]+s+1;\n    printf(\"%d %d\",min/60, min%60);\n    return 0;\n}\n"}
{"similarity_score": 0.9991474850809889, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "22718462b281934213c90d7916cbe24b", "bug_code_uid": "c0ef01d348b9864edd967251eb2c3d29", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "030d7fed7df7598482fc14c88f0ddafa", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int d2,s,n,j,f=-1 ,k,d,i,sum=0;\n scanf(\"%d %d\",&s,&n);\n int a[n],b[n];\n for(i=0;i<n;i++)\n {\n     scanf(\"%d %d\",&a[i],&b[i]);\n }\n\n for(i=0;i<n-1;i++)\n {\n     for(j=i+1;j<n;j++)\n     { d=a[i];d2=b[i];\n         if(a[i]>a[j])\n         {\n             a[i]=a[j]; b[i]=b[j];b[j]=d2; a[j]=d;\n         }\n     }\n }/*\n for(i=0;i<n;i++)\n {\n     printf(\"%d %d\\n\",a[i],b[i]);\n }\n*/\n for(i=0;i<n;i++)\n {\n     if(s>a[i])\n     {\n         s=s+b[i]; sum=sum+1;\n     }\n     if(s<a[i])\n     {\n        printf(\"NO\");break ;\n     }\n }\n if(sum==n)\n {\n     printf(\"YES\");\n }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int d2,s,n,j,f=-1 ,k,d,i,sum=0;\n scanf(\"%d %d\",&s,&n);\n int a[n],b[n];\n for(i=0;i<n;i++)\n {\n     scanf(\"%d %d\",&a[i],&b[i]);\n }\n\n for(i=0;i<n-1;i++)\n {\n     for(j=i+1;j<n;j++)\n     { d=a[i];d2=b[i];\n         if(a[i]>a[j])\n         {\n             a[i]=a[j]; b[i]=b[j];b[j]=d2; a[j]=d;\n         }\n     }\n }/*\n for(i=0;i<n;i++)\n {\n     printf(\"%d %d\\n\",a[i],b[i]);\n }\n*/\n for(i=0;i<n;i++)\n {\n     if(s>a[i])\n     {\n         s=s+b[i]; sum=sum+1;\n     }\n     if(s<=a[i])\n     {\n        printf(\"NO\");break ;\n     }\n }\n if(sum==n)\n {\n     printf(\"YES\");\n }\n}\n"}
{"similarity_score": 0.991044776119403, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "222170cf4476e1c0693ceb1942a7720e", "bug_code_uid": "a75111f0caf052b5ad8c6f5906174e13", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "8871f0f898d891fccb02b99ba9af2abc", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i,j,n,a,b;\nchar s[100];\nscanf(\"%d%d%d\",&n,&a,&b);\nscanf(\"%s\",s);\nif(s[a-1]==s[b-1])\n{\nprintf(\"0\");\n}\nelse\nprintf(\"1\");\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint i,j,n,a,b;\nchar s[100003];\nscanf(\"%d%d%d\",&n,&a,&b);\nscanf(\"%s\",s);\nif(s[a-1]==s[b-1])\n{\nprintf(\"0\");\n}\nelse\nprintf(\"1\");\nreturn 0;\n}\n"}
{"similarity_score": 0.9174721189591079, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "16abbf1163d81f4f8b02d07a816af860", "bug_code_uid": "70e5809c280fd66148373d421b664da4", "src_uid": "5de66fbb594bb317654366fd2290c4d3", "apr_id": "8c23c299bf64bd1b38ea026ed1e4040c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int noCases;\n    char str[256] = \"\";\n    scanf(\"%d\", &noCases);\n    int i, j;\n    int flag = 0, count = 0, sum = 0;\n    for(i = 0; i<noCases; i++)\n    {\n        scanf(\"%s\", str);\n        for(j = 0; str[j] != '\\0'; j++)\n        {\n            if(str[j] == '1' && str[j+1] == '0')\n                    flag = 1;\n            else if(str[j] == '0' && flag == 1)\n            {\n                count++;\n                if(str[j+1] == '1')\n                    sum += count;\n            }     \n        }\n        printf(\"%d\\n\", sum);\n        sum = count = 0;\n    }\n    \n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int noCases;\n    char str[256] = \"\";\n    scanf(\"%d\", &noCases);\n    int i, j;\n    int flag = 0, count = 0, sum = 0;\n    for(i = 0; i<noCases; i++)\n    {\n        scanf(\"%s\", str);\n        for(j = 0; str[j] != '\\0'; j++)\n        {\n            if(str[j] == '1' && str[j+1] == '0')\n                    flag = 1;\n            else if(str[j] == '0' && flag == 1)\n            {\n                count++;\n                if(str[j+1] == '1')\n                    {\n                        sum += count;\n                        count = 0;\n                    }\n                    \n            }     \n        }\n        printf(\"%d\\n\", sum);\n        flag = sum = count = 0;\n    }\n    \n}"}
{"similarity_score": 0.8894830659536542, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f25e37d928b254639f83d68647036175", "bug_code_uid": "5b7a879bc937f3f7226fe210e2b6fe72", "src_uid": "1fa93a236c36f75120af3534d6226fa9", "apr_id": "c6091ae198ee470410dbf1f95dc87553", "difficulty": 2500, "tags": ["constructive algorithms", "implementation", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define K\t300\n#define M\t1000000\n\nint main() {\n\tstatic int dd[K], ii[M], jj[M];\n\tint k, n, m, c, h, i, j;\n\n\tscanf(\"%d\", &k);\n\tfor (i = 0; i < k; i++)\n\t\tscanf(\"%d\", &dd[i]);\n\tm = 0;\n\twhile (k > 0) {\n\t\tn = dd[k - 1] + 1;\n\t\tc = dd[0];\n\t\tfor (i = n - c; i < n; i++)\n\t\t\tfor (j = 0; j < n; j++)\n\t\t\t\tif (i != j) {\n\t\t\t\t\tii[m] = i;\n\t\t\t\t\tjj[m] = j;\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\tfor (h = 1; h < k - 1; h++)\n\t\t\tdd[h - 1] = dd[h] - c;\n\t\tk -= 2;\n\t}\n\tprintf(\"%d\\n\", m);\n\tfor (h = 0; h < m; h++)\n\t\tprintf(\"%d %d\\n\", ii[h] + 1, jj[h] + 1);\n\treturn 0;\n}\n", "fixed": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define K\t300\n#define M\t1000000\n\nint main() {\n\tstatic int dd[K], ii[M], jj[M];\n\tint k, n, m, c, h, i, j;\n\n\tscanf(\"%d\", &k);\n\tfor (i = 0; i < k; i++)\n\t\tscanf(\"%d\", &dd[i]);\n\tm = 0;\n\twhile (k > 0) {\n\t\tn = dd[k - 1] + 1;\n\t\tc = dd[0];\n\t\tfor (j = n - c; j < n; j++)\n\t\t\tfor (i = 0; i < j; i++) {\n\t\t\t\tii[m] = i;\n\t\t\t\tjj[m] = j;\n\t\t\t\tm++;\n\t\t\t}\n\t\tfor (h = 1; h < k - 1; h++)\n\t\t\tdd[h - 1] = dd[h] - c;\n\t\tk -= 2;\n\t}\n\tprintf(\"%d\\n\", m);\n\tfor (h = 0; h < m; h++)\n\t\tprintf(\"%d %d\\n\", ii[h] + 1, jj[h] + 1);\n\treturn 0;\n}\n"}
{"similarity_score": 0.21281741233373638, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "ca758f80ee1097c8065a8efc774c362d", "bug_code_uid": "34021324c020263ac094fcbdda34ceca", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "18df6c5e01a91404e990d6aab3fb7583", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char x,y;\n    int n,a,j,i=0;\nscanf(\"%c%c\",&x,&y);\n    scanf(\"%d\",&n);\n    while(i<n)\n    {\n        \n        scanf(\"%d\",&a);\n        if(a<=10)\n        {\n            for(j=0;j<a;j++)\n            {\n            printf(\"%c\",x);\n            scanf(\"%c\",&x);\n            }\n            printf(\"\\n\");\n        }\n        else\n        {\n            scanf(\"%c%d%c\",&x,&a,&y);\n            printf(\"\\n\");\n        }\n        i++;\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,s;\n    char a[100];\n    scanf(\"%d\",&n);\n    \n        for(i=0;i<n;i++)\n        {\n            scanf(\"%s\",a);\n            s=strlen(a);\n            if(s<=10)\n            printf(\"%s\\n\",a); \n           else\n            printf(\"%c%d%c\\n\",a[0],s-2,a[s-1]);\n           \n        }\n    \n    \n  return 0;  \n}"}
{"similarity_score": 0.998389694041868, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "960e3c871a96d039383620cc78ef144a", "bug_code_uid": "a7db82790cc17b08b3bd02d7077d4a2a", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "bf26add34e7e88b1699e6c96d8acf943", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n], val;\r\n        int count[200000]={0};\r\n        for(int i=0; i<n; i++){\r\n            scanf(\"%d\",&a[i]);\r\n            val=a[i];\r\n            count[val]++;\r\n        }\r\n\r\n        for(int i=0; i<n; i++){\r\n             val=a[i];\r\n            if(count[val]>=3)\r\n            {\r\n                printf(\"%d\\n\",val);\r\n                break;\r\n            }\r\n            else if(i==n-1 && count[val]<3)\r\n                printf(\"-1\\n\");\r\n\r\n        }\r\n        }\r\n\r\n\r\n    }\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n], val;\r\n        int count[200001]={0};\r\n        for(int i=0; i<n; i++){\r\n            scanf(\"%d\",&a[i]);\r\n            val=a[i];\r\n            count[val]++;\r\n        }\r\n\r\n        for(int i=0; i<n; i++){\r\n             val=a[i];\r\n            if(count[val]>=3)\r\n            {\r\n                printf(\"%d\\n\",val);\r\n                break;\r\n            }\r\n            else if(i==n-1 && count[val]<3)\r\n                printf(\"-1\\n\");\r\n\r\n        }\r\n        }\r\n\r\n\r\n    }\r\n\r\n"}
{"similarity_score": 0.8871181938911022, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4d2a260cc96800f325ddf3159eac6c56", "bug_code_uid": "1f2aac94f06d33b6b27589c431dd42ed", "src_uid": "d7381f73ee29c9b89671f21cafee12e7", "apr_id": "db2b6c161b731ca6386f20894cfe9e05", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n, d, j, i, c = 0, t, a[1001];\n\tscanf(\"%d%d\", &n, &d);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (j = 1; j < n; j++)\n\t\tfor (i = 0; i < n - 1; i++)\n\t\t\tif (a[i] < a[i + 1])\n\t\t\t\tt = a[i], a[i] = a[i + 1], a[i + 1] = t;\n\tfor (i = 0; i < n - 1; i++)\n\t\tif (a[i] - a[i + 1] <= d)\n\t\t\tc++;\n\tprintf(\"%d\\n\", 2 * c);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n, d, j, i, c = 0, t, a[1001];\n\tscanf(\"%d%d\", &n, &d);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (j = 1; j < n; j++)\n\t\tfor (i = 0; i < n - 1; i++)\n\t\t\tif (a[i] < a[i + 1])\n\t\t\t\tt = a[i], a[i] = a[i + 1], a[i + 1] = t;\n\tfor (i = 0; i < n - 1; i++)\n\t\tfor (j = i + 1; j < n; j++)\n\t\t\tif (a[i] - a[j] <= d)\n\t\t\t\tc++;\n\t\t\telse\n\t\t\t\tbreak;\n\tprintf(\"%d\\n\", 2 * c);\n}"}
{"similarity_score": 0.9952076677316294, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1340192994246ac633627fcd3e12af1f", "bug_code_uid": "ba017b68584dbb6e3124d9021d5c422d", "src_uid": "86d5da999415fa75b3ee754a2a28605c", "apr_id": "64d08cf9c518c5a987a2392b777d9ec7", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n    if( *(long long int*)a - *(long long int*)b < 0 )\n        return -1;\n    if( *(long long int*)a - *(long long int*)b > 0 )\n        return 1;\n    if( *(long long int*)a - *(long long int*)b == 0 )\n        return 0;\n}\n\nint main()\n{\n    long long int n, i, sum = 0;\n    scanf(\"%I64d\", &n);\n    long long int arr[n];\n    for (i = 0; i < n; i++) scanf(\"%I64d\", &arr[i]);\n    qsort(arr, n, sizeof(long long int), cmpfunc);\n    for (i = 0; i < n; i++) sum += (abs(arr[i] - i));\n    printf(\"%I64d\\n\", sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint cmpfunc (const void * a, const void * b)\n{\n    if( *(long long int*)a - *(long long int*)b < 0 )\n        return -1;\n    if( *(long long int*)a - *(long long int*)b > 0 )\n        return 1;\n    if( *(long long int*)a - *(long long int*)b == 0 )\n        return 0;\n}\n\nint main()\n{\n    long long int n, i, sum = 0;\n    scanf(\"%I64d\", &n);\n    long long int arr[n];\n    for (i = 0; i < n; i++) scanf(\"%I64d\", &arr[i]);\n    qsort(arr, n, sizeof(long long int), cmpfunc);\n    for (i = 0; i < n; i++) sum += (abs(arr[i] - (i+1)));\n    printf(\"%I64d\\n\", sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9890829694323144, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "57a701b16faf79866a7dc8599dd31eeb", "bug_code_uid": "146b626b94fb438535cefb5e1a05a738", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "7a5e48f93241bc068ad5ab13558bafe6", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    long long k;\r\n    scanf(\"%lld\", &k);\r\n    for (int i = 1; i <= k; i++) {\r\n\r\n        long long n, x, t;\r\n        scanf(\"%lld %lld %lld\", &n, &x, &t);\r\n        \r\n        long long discontent;\r\n        if (n > t / x + 1)\r\n            discontent = (t / x * (t / x + 1) / 2 + (t / x * (n - 1 - t / x)));\r\n        else\r\n            discontent = (n - 1) * n / 2;\r\n\r\n        printf(\"%lld\", discontent);\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    long long k;\r\n    scanf(\"%lld\", &k);\r\n    for (int i = 1; i <= k; i++) {\r\n\r\n        long long n, x, t;\r\n        scanf(\"%lld %lld %lld\", &n, &x, &t);\r\n\r\n        long long discontent;\r\n        if (n > t / x + 1)\r\n            discontent = (t / x * (t / x + 1) / 2 + (t / x * (n - 1 - t / x)));\r\n        else\r\n            discontent = (n - 1) * n / 2;\r\n\r\n        printf(\"%lld\\n\", discontent);\r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7357340720221607, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "81db17f20dec354f8c3d20715df86f7d", "bug_code_uid": "19378411058ad6ceeda7c99f49aa49b2", "src_uid": "d4fc7e683f389e0c7bbee8e115cef459", "apr_id": "e550546c63b002329c4e82edc72212d4", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h> \r\nint main() \r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    for(int i=0;i<t;i++){\r\n     long long int n,k;\r\n     scanf(\"%lld %lld\",&n,&k);\r\n     if(k==4 || k==0){\r\n       printf(\"NO\\n\");  \r\n     }\r\n     if(k%2!=0){\r\n      printf(\"YES\\n\");\r\n      long long int w=0;\r\n      for(long long int i=1;i<=n;i++){\r\n       printf(\"%lld \",i);\r\n       w++;\r\n       if(w==2){\r\n        printf(\"\\n\");\r\n        w=0;\r\n       }\r\n      }\r\n     }\r\n     \r\n     if(k%2==0 && k!=4 && k!=0){\r\n      long long int a=n/4;\r\n      long long int b=0;\r\n      long long int c=2;\r\n      for(long long int i=0;;i++){\r\n       if(c>=n){\r\n        break;    \r\n       } \r\n       b++;\r\n       c=c+4;\r\n      }\r\n      if((a+b)>=(n/2)){\r\n       printf(\"YES\\n\");\r\n       for(long long int i=1;i<(a+1);i++){\r\n        printf(\"%lld %lld\\n\",(4*i)-1,4*i);  \r\n       }\r\n      long long int d=2;\r\n      for(long long int i=0;i<b;i++){\r\n       printf(\"%lld %lld\\n\",d,d-1);\r\n       d=d+4;\r\n      }\r\n      }\r\n      else{\r\n       printf(\"NO\\n\");   \r\n      }\r\n     }\r\n    }\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h> \r\nint main() \r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    for(int i=0;i<t;i++){\r\n     long long int n,k;\r\n     scanf(\"%lld %lld\",&n,&k);\r\n     if(k%4==0){\r\n       printf(\"NO\\n\");  \r\n     }\r\n     else if(k%2!=0){\r\n      printf(\"YES\\n\");\r\n      for(long long int i=1;i<=(n/2);i++){\r\n       printf(\"%lld %lld\\n\",(2*i)-1,(2*i));\r\n      \r\n      }\r\n     }\r\n     \r\n    else if(k%2==0 && k%4!=0){\r\n      long long int a=n/4;\r\n     \r\n       printf(\"YES\\n\");\r\n       for(long long int i=1;i<(a+1);i++){\r\n        printf(\"%lld %lld\\n\",(4*i)-1,4*i);  \r\n       }\r\n      long long int d=2;\r\n      for(long long int i=0;i<(n/2)-a;i++){\r\n       printf(\"%lld %lld\\n\",d,d-1);\r\n       d=d+4;\r\n      }\r\n    \r\n\r\n     }\r\n    }\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7985611510791367, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "643945d67fac661ee64adf4b43ae531c", "bug_code_uid": "f08a3e152b28936910f8eb37bb0d4955", "src_uid": "2052b0b4abdcf7d613b56842b1267f60", "apr_id": "45c560d00c46949bc9fce7e231483841", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int n,i,l,r,count=0,count1=0,count2=0,count3=0 ;\n\n    scanf(\"%d\",&n) ;\n    {\n    for(i=1 ; i<=n ; i++){\n        scanf(\"%d %d\",&l,&r) ;\n\n        if(l==0){\n            count++ ;\n        }\n        if(l==1){\n            count1++ ;\n        }\n        if(r==0){\n            count2++ ;\n        }\n        if(r==1){\n            count3++ ;\n        }\n    }\n        if(count<count1 && count2>count3){\n            printf(\"%d\\n\",count+count3) ;\n        }\n        else if(count>count1 && count3>count2){\n            printf(\"%d\\n\",count1+count2) ;\n        }\n}\n\nreturn 0 ;\n\n}", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,i,l,r,count=0,count1=0,count2=0,count3=0 ;\n\n    scanf(\"%d\",&n) ;\n\n    for(i=1 ; i<=n ; i++){\n        scanf(\"%d %d\",&l,&r) ;\n\n        if(l==0){\n            count++ ;\n        }\n        if(l==1){\n            count1++ ;\n        }\n        if(r==0){\n            count2++ ;\n        }\n        if(r==1){\n            count3++ ;\n        }\n    }\n    if(count<count1)\n        count1=count ;\n    if (count2<count3)\n        count3=count2 ;\n    printf(\"%d\\n\",count1+count3) ;\n\n\n\nreturn 0 ;\n\n}\n"}
{"similarity_score": 0.9952941176470588, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "88a9ab6e6834feaa4cd973fad06f3852", "bug_code_uid": "52d166fc75b022e3702695e56589f7d9", "src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "apr_id": "bf2088822eef96b4c321b295dce2e452", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n;long T;\n    scanf(\"%d\\n\",&n);\n    //printf(\"%d\\n\",n);\n    int i=0;\n    char h[2],m[2];\n    scanf(\"%c%c:%c%c\",h,h+1,m,m+1);\n    //printf(\"%c\",m[0]);\n    int ih,im;\n    ih=(h[0]-'0')*10+h[1]-'0';\n    im=(m[0]-'0')*10+m[1]-'0';\n    //printf(\"%d\",h[1]>'2');\n    if(n==24)\n    {\n        if((h[0]-'0')>=3)h[0]='0';\n        else if(h[0]=='2' && h[1]>='4')h[1]='0';\n        if(m[0]>='6')m[0]='0';\n    }\n    else if(n==12)\n    {\n        if(m[0]>='6')m[0]='0';\n        if(h[0]=='0' && h[1]=='0')h[1]='1';//printf(\"%c %c\\n\",h[0],h[1]);\n        if(h[0]=='1' && h[1]>'2')h[0]='0';\n        //printf(\"%c %c\\n\",h[0],h[1]);\n        if(h[0]>='2' && h[1]!=0)h[0]='0';\n        else if(h[0]>='2' && h[1]==0)h[0]='1';\n        //printf(\"%c %c\\n\",h[0],h[1]);\n    }\n    printf(\"%c%c:%c%c\",h[0],h[1],m[0],m[1]);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n;long T;\n    scanf(\"%d\\n\",&n);\n    //printf(\"%d\\n\",n);\n    int i=0;\n    char h[2],m[2];\n    scanf(\"%c%c:%c%c\",h,h+1,m,m+1);\n    //printf(\"%c\",m[0]);\n    int ih,im;\n    ih=(h[0]-'0')*10+h[1]-'0';\n    im=(m[0]-'0')*10+m[1]-'0';\n    //printf(\"%d\",h[1]>'2');\n    if(n==24)\n    {\n        if((h[0]-'0')>=3)h[0]='0';\n        else if(h[0]=='2' && h[1]>='4')h[1]='0';\n        if(m[0]>='6')m[0]='0';\n    }\n    else if(n==12)\n    {\n        if(m[0]>='6')m[0]='0';\n        if(h[0]=='0' && h[1]=='0')h[1]='1';//printf(\"%c %c\\n\",h[0],h[1]);\n        if(h[0]=='1' && h[1]>'2')h[0]='0';\n        //printf(\"%c %c\\n\",h[0],h[1]);\n        if(h[0]>='2' && h[1]!='0')h[0]='0';\n        else if(h[0]>='2' && h[1]=='0')h[0]='1';\n        //printf(\"%c %c\\n\",h[0],h[1]);\n    }\n    printf(\"%c%c:%c%c\",h[0],h[1],m[0],m[1]);\n    return 0;\n}"}
{"similarity_score": 0.9903614457831326, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d297e1a753d006872f722e26113d39b9", "bug_code_uid": "2adfffd37bf7541edf26ce72bafd9f0e", "src_uid": "2c7add49d423de44a2bc09de56ffacf1", "apr_id": "8a36fc2a213b39ed18ae9cb9b31ff413", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tchar a[8][8];\r\n\t\tint i,j;\r\n\t\tfor(int i=0; i<8; i++) {\r\n\t\t\tscanf(\"%s\",a[i]);\r\n\t\t}\r\n\t\tint isb = 0;\r\n\t\tfor(int i=0; i<8; i++) {\r\n\t\t\tint b = 0;\r\n\t\t\tfor(int j=0; j<8; j++)\r\n\t\t\t\tif(a[i][j]=='B') {\r\n\t\t\t\t\tb++;\r\n\t\t\t\t}\r\n\t\t\tif (b == 8) {\r\n\t\t\t\tisb = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(isb) {\r\n\t\t\tprintf(\"B\\n\");\r\n\t\t} else {\r\n\t\t\tprintf(\"R\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tchar a[9][9];\r\n\t\tint i,j;\r\n\t\tfor(int i=0; i<8; i++) {\r\n\t\t\tscanf(\"%s\",a[i]);\r\n\t\t}\r\n\t\tint isb = 0;\r\n\t\tfor(int i=0; i<8; i++) {\r\n\t\t\tint b = 0;\r\n\t\t\tfor(int j=0; j<8; j++)\r\n\t\t\t\tif(a[j][i]=='B') {\r\n\t\t\t\t\tb++;\r\n\t\t\t\t}\r\n\t\t\tif (b == 8) {\r\n\t\t\t\tisb = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(isb) {\r\n\t\t\tprintf(\"B\\n\");\r\n\t\t} else {\r\n\t\t\tprintf(\"R\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.7943706020328382, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "fe8b2702748cf1b393082bdf91d43a3d", "bug_code_uid": "8f4128e9edd15c09e06f2fec1667e986", "src_uid": "e1abc81cea4395ba675cf6ca93261ae8", "apr_id": "b491d87a228c7e7cf7c493970c1089c8", "difficulty": 1100, "tags": ["dp", "implementation", "*special", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX 200005\nint main()\n{\n    int w[MAX],h[MAX],ans,Max=1,max=0,sum=0,i,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&w[i],&h[i]);\n        sum+=w[i];\n    }\n    for(i=0;i<n;i++)\n    {\n          if(h[i]>Max)\n                Max=h[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(h[i]>max && h[i]<Max)\n            max=h[i];\n    }\n    if(max==0)\n        max=Max;\n    for(i=0;i<n;i++)\n    {\n        if(h[i]==Max)\n            ans=(sum-w[i])*max;\n        else\n            ans=(sum-w[i])*Max;\n            printf(\"%d \",ans);\n    }\n}\n\n", "fixed": "#include<stdio.h>\n#define MAX 200005\nint main()\n{\n    int w[MAX],h[MAX],ans,Max=1,max=0,sum=0,i,i_max,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&w[i],&h[i]);\n        sum+=w[i];\n    }\n    for(i=0;i<n;i++)\n    {\n          if(h[i]>Max){\n                Max=h[i];\n                i_max=i;\n          }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(h[i]>max && h[i]<=Max && i!=i_max)\n            max=h[i];\n    }\n\n    for(i=0;i<n;i++)\n    {\n        if(max==Max)\n            ans=(sum-w[i])*Max;\n        else\n        {\n            if(h[i]==Max)\n                ans=(sum-w[i])*max;\n            else\n                ans=(sum-w[i])*Max;\n\n        }\n            printf(\"%d \",ans);\n    }\n}\n\n"}
{"similarity_score": 0.9967948717948718, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "23ed997598b577f19e9b673a939c032b", "bug_code_uid": "fe691e883becdd0b4c508cb74bacdd05", "src_uid": "20dd260775ea71b1fb5b42bcac90a6f2", "apr_id": "4932e85cd8f9baed305a395d8f058901", "difficulty": 800, "tags": ["greedy", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n   while(t--){\r\n       int n;\r\n       scanf(\"%d\",&n); \r\n       int arr[n];\r\n    for(int i=0;i<n;i++){\r\n        scanf(\"%d\",&arr[i]);\r\n    }\r\n    for(int i=0;i<3;i++){\r\n       for(int j=i+1;j<3;j++){\r\n           if(arr[j]<arr[i]){\r\n               int temp = arr[j];\r\n               arr[j] = arr[i];\r\n               arr[i] = temp;\r\n           }\r\n       }\r\n    }\r\n       int sum=0;\r\n       for(int i=1;i<n;i++){\r\n           if(arr[i]!=arr[0]){\r\n               sum += arr[i]-arr[0];\r\n           }\r\n       }\r\n       printf(\"%d\\n\",sum);\r\n      }\r\n return 0;\r\n}   \r\n", "fixed": "#include <stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n   while(t--){\r\n       int n;\r\n       scanf(\"%d\",&n); \r\n       int arr[n];\r\n    for(int i=0;i<n;i++){\r\n        scanf(\"%d\",&arr[i]);\r\n    }\r\n    for(int i=0;i<n;i++){\r\n       for(int j=i+1;j<n;j++){\r\n           if(arr[j]<arr[i]){\r\n               int temp = arr[j];\r\n               arr[j] = arr[i];\r\n               arr[i] = temp;\r\n           }\r\n       }\r\n    }\r\n       int sum=0;\r\n       for(int i=1;i<n;i++){\r\n           if(arr[i]!=arr[0]){\r\n               sum += arr[i]-arr[0];\r\n           }\r\n       }\r\n       printf(\"%d\\n\",sum);\r\n      }\r\n return 0;\r\n}   \r\n"}
{"similarity_score": 0.3797881010594947, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "5fb8d2f717bbaafb9cbd5a46c32d6475", "bug_code_uid": "1953711dca0dde2f9ae1fff05d116f43", "src_uid": "6cb06a02077750327602a1a7eeac770f", "apr_id": "593fb6677e60e69e46e84a3e0005692e", "difficulty": 1200, "tags": ["dp", "two pointers", "implementation", "binary search"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#define N 1000050\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tchar s[N];\n\t\tscanf(\"%s\",s);\n\t\tint i,j,ll,dd,mm,min=N,c,d;\n\t\tint len=strlen(s);\n\t\tfor(i=1;i<len;i++){\n\t\t\tif(s[i]!=s[i-1]){\n\t\t\t\tll=mm=2;c=d=0;\n\t\t\t\tfor(j=i+1;j<len;j++){\n\t\t\t\t\tll++;\n\t\t\t\t\tif(s[j]!=s[i]&&s[j]!=s[i-1]){\n\t\t\t\t\t\tc=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(j=i-2;j>=0;j--){\n\t\t\t\t\tmm++;\n\t\t\t\t\tif(s[i]!=s[j]&&s[j]!=s[i-1]){\n\t\t\t\t\t\td=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t//\tprintf(\"%d %d\\n\",ll,mm);\n\t\t\t\tif(mm<3||!d)mm=N;\n\t\t\t\tif(ll<3||!c)ll=N;\n\t\t\t\tdd=ll<mm?ll:mm;\n\t\t\t\tif(dd<min)\n\t\t\t\t\tmin=dd;\n\t\t\t\tif(min==3)break;\n\t\t\t}\n\t\t}\n\t\tif(min==N){\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%d\\n\",min);\n\t}\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#define N 200050\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tchar s[N];\n\t\tscanf(\"%s\",s);\n\t\tint i,j,len=strlen(s),a[N],b[5],min=N,ll;\n\t\tfor(i=0;i<len;i++)\n\t\t\ta[i]=s[i]-48;\n\t\tb[1]=b[2]=b[3]=0;\n\t\tfor(i=0;i<len;i++){\n\t\t\tb[a[i]%4]++;\n\t\t\tif(i&&b[a[i]%4]>1&&a[i]!=a[i-1])\n\t\t\t\tb[a[i]%4]=1;\n\t\t\tif(b[1]&&b[2]&&b[3]){\n\t\t\t\tll=b[a[i-1]%4]+2;\n\t\t\t\tif(ll<min)\n\t\t\t\t\tmin=ll;\n\t\t\t\tb[1]=b[2]=b[3]=0;\n\t\t\t\tb[a[i]%4]=b[a[i-1]%4]=1;\n\t\t\t\ti=i-2;\n\t\t\t}\n\t\t}\n\t\tif(min==N)\n\t\t\tmin=0;\n\t\tprintf(\"%d\\n\",min);\n\t}\n}"}
{"similarity_score": 0.9230769230769231, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "11014d5f109e57805d67573f404a3a92", "bug_code_uid": "cb5d8dbb0e5d8601fc57452d3b6e54e5", "src_uid": "aa00fbde0b135addd2fdde0310e0377a", "apr_id": "dae56fc510147bea5a469c807fbd0113", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int n;\r\nlong long a, c;\r\nint main() {\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tscanf(\"%lld %lld\", &a, &c);\r\n\t\tlong long b = 0, x = 1, e = 0;\r\n\t\tfor (long long i = 1; i <= a; i *= 10) {\r\n\t\t\tb += (c / x % 10 - a / i % 10 + 10) % 10 * i;\r\n\t\t\tif (x > c)\r\n\t\t\t\te = 1;\r\n\t\t\telse if (c / x % 10 < a / i % 10) {\r\n\t\t\t\tif (c / x % 100 - a / i % 10 < 10)\r\n\t\t\t\t\tx *= 10;\r\n\t\t\t\telse e = 1;\r\n\t\t\t}\r\n\t\t\tx *= 10;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\", e ? -1 : c / x * x + b);\r\n\t}\r\n}", "fixed": "int n;\r\nlong long a, c;\r\nint main() {\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tscanf(\"%lld %lld\", &a, &c);\r\n\t\tlong long b = 0, x = 1, y = 1, e = 0;\r\n\t\tfor (; y <= a; y *= 10) {\r\n\t\t\tb += (c / x % 10 - a / y % 10 + 10) % 10 * y;\r\n\t\t\tif (x > c)\r\n\t\t\t\te = 1;\r\n\t\t\telse if (c / x % 10 < a / y % 10) {\r\n\t\t\t\tif (0 <= c / x % 100 - a / y % 10 && c / x % 100 - a / y % 10 < 10)\r\n\t\t\t\t\tx *= 10;\r\n\t\t\t\telse e = 1;\r\n\t\t\t}\r\n\t\t\tx *= 10;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\", e ? -1 : c / x * y + b);\r\n\t}\r\n}"}
{"similarity_score": 0.9825119236883942, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b20bc285b2522c0872abc70b7576765a", "bug_code_uid": "f6e6d3b189d592f1de4656cfb0741839", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "1e75244683207ee534d8544a42a6e1c1", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint comp (const int *i, const int *j)\n{\nreturn *i - *j;\n}\n\nint main()\n{\n    int n;\n    long int l, mx1, mx2;\n    float res = 0.0;\n    long int A[1000] = {0};\n\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &l);\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", A+i);\n    }\n    qsort(A,n,sizeof(int),(int(*) (const void *, const void *)) comp);\n\n    mx1 = 0;\n    mx2 = A[0]>(l - A[n-1]) ? A[0]:(l-A[n-1]);\n\n    for(int i = 1; i < n; i++)\n    {\n        if((A[i] - A[i-1]) > mx1) mx1 = A[i] - A[i-1];\n    }\n    res = (mx1/2.0>mx2)?((float)mx1)/2.0:mx2;\n    printf(\"%f\", res);\n\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint comp (const int *i, const int *j)\n{\nreturn *i - *j;\n}\n\nint main()\n{\n    int n;\n    long int l, mx1, mx2;\n    double res = 0.0;\n    long int A[1000] = {0};\n\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &l);\n    for(int i = 0; i < n; i++)\n    {\n        scanf(\"%d\", A+i);\n    }\n    qsort(A,n,sizeof(int),(int(*) (const void *, const void *)) comp);\n\n    mx1 = 0;\n    mx2 = A[0]>(l - A[n-1]) ? A[0]:(l-A[n-1]);\n\n    for(int i = 1; i < n; i++)\n    {\n        if((A[i] - A[i-1]) > mx1) mx1 = A[i] - A[i-1];\n    }\n    res = (mx1/2.0>mx2)?((double)mx1)/2.0:mx2;\n    printf(\"%f\", res);\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.5471349353049908, "equal_cnt": 18, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 9, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "ae44788f77eff73fdbe6ff8e2fe20eac", "bug_code_uid": "ad618ed458da606d92f921039e6420b3", "src_uid": "65eb0f3ab35c4d95c1cbd39fc7a4227b", "apr_id": "6714dc467762190ac870b1c9b5b9a82c", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint n,m,k,c; int eaten=0;\n\tint i,r;\n\t\tscanf(\"%d%d%d\",&n,&m,&k);\n\tint t_row[m];\n\t\n\tfor(i=0;i<n;i++){ \n\t\t//con cada fila puede comer c\n\t\t\tscanf(\"%d%d\",&r,&c);\n\t\t//ingresa como filas 1 para adelante, entonces se arregla para el vector\n\t\tt_row[r-1]=c;\n\t}\n\t\n\tfor(i=0;i<m;i++){ //por cada fila\n\t\tif(t_row[i]>=k){ \n\t\t//si con esa fila puede comer mas de lo que sobra, come todo y termina\n\t\t\teaten+=k;\n\t\t\tk=0;\n\t\t\tbreak;\n\t\t}else{\n\t\t//sino, come lo que puede con esa fila y se resta de lo que sobra\n\t\t\teaten+=t_row[i];\n\t\t\tk-=t_row[i];\n\t\t}\n\t}\n\tprintf(\"%d\",eaten);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tint n,m,k,c; int eaten=0;\n\tint i,r;\n\t\tscanf(\"%d%d%d\",&n,&m,&k);\n\tint t_row[m];\n\t//inicializo el vector de maximos por fila con -1, ya que 0 es entrada valida;\n\tfor(i=0;i<m;i++){\n\t\tt_row[i]=-1;\n\t}\n\t\n\tfor(i=0;i<n;i++){ \n\t\t/* con cada fila puede comer C,\n\t\tentonces solo se coloca el MAXIMO que puede con cada fila,\n\t\to sea, el menor entre los dientes de esa fila*/\n\t\t\tscanf(\"%d%d\",&r,&c);\n\t\t\t\n\t\tif(t_row[r-1]==-1) \t\n\t\t//si no se incializo esa fila, colocar C como max. de esa fila\n\t\t\tt_row[r-1]=c;\n\t\telse if (t_row[r-1]>c)  \n\t\t//si ya se inicializ\ufffd, comprobar que el nuevo C es menor y reemplazar\n\t\t\tt_row[r-1]=c;\n\t}\n\n\tfor(i=0;i<m;i++){ //por cada fila\n\t\tif(t_row[i]>-1) //si la fila puede usarse\n\t\t{ \n\t\t\tif(t_row[i]>=k){\n\t\t\t//si con esa fila puede comer mas de lo que sobra, come todo y termina\n\t\t\t\teaten+=k;\n\t\t\t\tk=0;\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t//sino, come lo que puede con esa fila y se resta de lo que sobra\n\t\t\t\teaten+=t_row[i];\n\t\t\t\tk-=t_row[i];\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",eaten);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9992737835875091, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "20af0a09067aa444451845bf4bcfe6c2", "bug_code_uid": "b48a9a4e72bd0f21153861454b01ba45", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "2b3061fbe4f107542e667e3bf3859d69", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>>\nint main()\n{\n    char a[1005,b[1005];\n    int ans=0,s=0,j,l,i,k=0,z;\n    gets (a);\n    l=strlen(a);\n    if (a[1]=='}')\n    {\n        printf(\"0\");\n        return 0;\n        ans=1;\n    }\n    if (ans==0)\n    {\n        ans=1;\n        b[0]=a[1];\n        s=1;\n    for (i=4;i<l;i=i+3)\n    {\n        b[s]=a[i];\n        s++;\n        for (j=0;j<s-1;j++)\n        {\n            if (a[i]==b[j])\n            {\n                z=0;\n                break;\n            }\n            else\n                {\n                    z=1;\n                }\n        }\n        if (z==1)\n            ans++;\n    }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>>\nint main()\n{\n    char a[1005],b[1005];\n    int ans=0,s=0,j,l,i,k=0,z;\n    gets (a);\n    l=strlen(a);\n    if (a[1]=='}')\n    {\n        printf(\"0\");\n        return 0;\n        ans=1;\n    }\n    if (ans==0)\n    {\n        ans=1;\n        b[0]=a[1];\n        s=1;\n    for (i=4;i<l;i=i+3)\n    {\n        b[s]=a[i];\n        s++;\n        for (j=0;j<s-1;j++)\n        {\n            if (a[i]==b[j])\n            {\n                z=0;\n                break;\n            }\n            else\n                {\n                    z=1;\n                }\n        }\n        if (z==1)\n            ans++;\n    }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9979253112033195, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ba3ca9baadb29a3f3ca9f729046e6b22", "bug_code_uid": "d2db1d5cb3b3817d84d5e0311c21296d", "src_uid": "14fc3a7fef44a02791aee62838c4c8c8", "apr_id": "551d69fa4456481fe2eedd86f2e5728e", "difficulty": 1000, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int m,n,i,j,count=0;\n    scanf(\"%d\",&m);\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n                    count++;\n    }\n    for(j=2;j<=m;j++)\n    {\n                    count++;\n    }\n    printf(\"%d \\n\",count);\n    for(i=1;i<=n;i++)\n    {\n                    j=1;\n                    printf(\"%d %d \\n\",j,i);\n    }\n    for(j=2;j<=n;j++)\n    {\n                     i=1;\n                     printf(\"%d %d \\n\",j,i);\n    }\n    return 0;\n}\n    \n    ", "fixed": "#include<stdio.h>\nint main()\n{\n    int m,n,i,j,count=0;\n    scanf(\"%d\",&m);\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n                    count++;\n    }\n    for(j=2;j<=m;j++)\n    {\n                    count++;\n    }\n    printf(\"%d \\n\",count);\n    for(i=1;i<=n;i++)\n    {\n                    j=1;\n                    printf(\"%d %d \\n\",j,i);\n    }\n    for(j=2;j<=m;j++)\n    {\n                     i=1;\n                     printf(\"%d %d \\n\",j,i);\n    }\n    return 0;\n}\n    \n    "}
{"similarity_score": 0.9796708615682478, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "281313eecfc05eb370d2d9061a46f812", "bug_code_uid": "237764594c7cfd880d942d873247a706", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "0fb3afdebce3c39afc99f89b0d2ff21b", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char ara[100];\n    gets(ara);\n    int len,i,c1,c2;\n    c1=0;\n    c2=0;\n    len=strlen(ara);\n    for(i=0;i<len;i++)\n    {\n        if(ara[i]=='A')\n        {\n            c1++;\n        }\n        else if(ara[i]=='D')\n        {\n            c2++;\n        }\n    }\n    if(c1>c2)\n    {\n        printf(\"Anton\");\n    }\n    else if(c2>c1)\n    {\n        printf(\"Danik\");\n    }\n    else\n    {\n        printf(\"Friendship\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char ara[1000000];\n    scanf(\"%s\",&ara);\n    int len,i,c1,c2;\n    c1=0;\n    c2=0;\n    len=strlen(ara);\n    for(i=0;i<len;i++)\n    {\n        if(ara[i]=='A')\n        {\n            c1++;\n        }\n        else if(ara[i]=='D')\n        {\n            c2++;\n        }\n    }\n    if(c1>c2)\n    {\n        printf(\"Anton\");\n    }\n    else if(c2>c1)\n    {\n        printf(\"Danik\");\n    }\n    else\n    {\n        printf(\"Friendship\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8156583629893238, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "4a5c6b66f0b8a76c8a134b28b67d3317", "bug_code_uid": "40f75c9b7e615e99664f9c99d7d4f955", "src_uid": "357dcc8fb7783d878cd2c4ed34eb437e", "apr_id": "3e3a841da180c4557cbcf13012b36040", "difficulty": 1000, "tags": ["brute force", "dp", "greedy", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int t, n, k1, k2, w ,b, i = 0, a[3001];\n    char c[101];\n    scanf(\"%d\", &t);\n    for (i = 0; i < t; i++){\n        k2 = 0;\n        scanf(\"%s\", c);\n        for (b = 0; b < strlen(c) - 3; b ++){\n            if (c[b] == '1' && c[b+1] == '1' && c[b+2] == '0' && c[b+3] == '0'){\n                k2 = 1;\n                break;\n            }\n        }\n        if (k2 == 0)\n            a[i] = 1;\n        else\n            a[i] = 0;\n    }\n    for (i = 0; i < t; i++){\n        if (a[i] == 1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int t, n, k1, k2, w ,b, i = 0, a[3001];\n    char c[101];\n    scanf(\"%d\", &t);\n    for (i = 0; i < t; i++){\n        k2 = 0;\n        k1 = 0;\n        scanf(\"%s\", c);\n        for (b = 0; b < strlen(c) - 1; b ++){\n            if (k2 == 0)\n                if (c[b] == '1' && c[b + 1] == '1') {\n                    k2 = 1;\n                }\n            if (k2 == 1)\n                if (c[b] == '0' && c[b+1] =='0'){\n                    k1 = 1;\n                    break;\n                }\n        }\n        if (k1 == 0)\n            a[i] = 1;\n        else\n            a[i] = 0;\n    }\n    for (i = 0; i < t; i++){\n        if (a[i] == 1)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9776422764227642, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "26daaa22426fa06e5fe9d712d545d9b8", "bug_code_uid": "d419040820fe655cf4460cc7deee64c7", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "4466299b403847eb293e943f003e41f5", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,x;\n\tscanf(\"%d\",&n);\n\tint p=n;\n\tchar a[6];\n\tchar b[1000][6];\n\tgetchar();\n\ti=-1;\n\tx=0;\n\twhile(n--)\n\t{\n\t\ti++;\n\t\tgets(a);\n\t\t\n\t\t\n\t\t\n\t\tif(x==1);\n\t\t\n\t\t\n\t\t else if(a[0]=='O'&&a[1]=='O'&&a[3]=='O'){\n\t\ta[0]='+';\n\t\ta[1]='+';\n\t\t\n\t\tx=1;\n\t\t}\n\t\telse if(a[4]=='O'&&a[1]=='O'&&a[3]=='O'){\n\t\ta[4]='+';\n\t\ta[3]='+';\n\t\tx=1;\n\t\t}\n\t\tstrcpy(b[i],a);\n\t}\n\tif(x!=1)\n\tprintf(\"NO\");\n\telse\n\t{\n\t\tprintf(\"YES\\n\");\n\t\tfor(i=0;i<p;i++)\n\t\tprintf(\"%s\\n\",b[i]);\n\t}\n\treturn 0;\n}\n\t\t\n\t\t", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,x;\n\tscanf(\"%d\",&n);\n\tint p=n;\n\tchar a[6];\n\tchar b[1000][6];\n\tgetchar();\n\ti=-1;\n\tx=0;\n\twhile(n--)\n\t{\n\t\ti++;\n\t\tgets(a);\n\t\t\n\t\t\n\t\t\n\t\tif(x==1);\n\t\t\n\t\t\n\t\t else if(a[0]=='O'&&a[1]=='O'){\n\t\ta[0]='+';\n\t\ta[1]='+';\n\t\t\n\t\tx=1;\n\t\t}\n\t\telse if(a[4]=='O'&&a[3]=='O'){\n\t\ta[4]='+';\n\t\ta[3]='+';\n\t\tx=1;\n\t\t}\n\t\tstrcpy(b[i],a);\n\t}\n\tif(x!=1)\n\tprintf(\"NO\");\n\telse\n\t{\n\t\tprintf(\"YES\\n\");\n\t\tfor(i=0;i<p;i++)\n\t\tprintf(\"%s\\n\",b[i]);\n\t}\n\treturn 0;\n}\n\t\t\n\t\t"}
{"similarity_score": 0.40310077519379844, "equal_cnt": 27, "replace_cnt": 16, "delete_cnt": 4, "insert_cnt": 7, "fix_ops_cnt": 27, "lang": "GNU C", "fix_code_uid": "0a8b3836354f1157ec80cbff6f107bdd", "bug_code_uid": "dbd334b0fab4e577fd3d907d4ed5fd35", "src_uid": "290d9779a6be44ce6a2e62989aee0dbd", "apr_id": "217140953f603f3bc320fd04e6bc314c", "difficulty": 1300, "tags": ["data structures", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint arr[50][50],n,m;\nint swaprow(int x,int y)\n{\n    int i,j,t;\n    for(i=0;i<m;i++)\n    {\n        t=arr[x][i];\n        arr[x][i]=arr[y][i];\n        arr[y][i]=t;\n    }\n}\nint swapcol(int x,int y)\n{\n    int t,i,j;\n    for(i=0;i<n;i++)\n    {\n        t=arr[i][x];\n        arr[i][x]=arr[i][y];\n        arr[i][y]=t;\n    }\n}\nint main()\n{\n    int i,j,k,x,y;\n    char q;\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%d\",&arr[i][j]);\n        }\n    }\n    for(i=0;i<k;i++)\n    {\n        scanf(\"%c %d %d\",&q,&x,&y);\n        if(q=='r')\n        {\n            swaprow(x-1,y);\n        }\n        else if(q=='c')\n        {\n            swapcol(x,y-1);\n        }\n        else\n        printf(\"%d\\n\",arr[x-1][y-1]);\n    }\n    return 0;   \n}", "fixed": "\n#include <stdio.h>\nint main(){\n    int n,m,k,i,j,array[1000][1000],row[1000],column[1000],x,y,temp,a=0;\n    char op;\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            scanf(\"%d\",&array[i][j]);\n        }\n    }\n    for(i=0;i<n;i++){\n        row[i]=i;\n    }\n    for(i=0;i<m;i++){\n        column[i]=i;\n    }\n    for(j=0;j<k*2;j++){\n        scanf(\"%c\",&op);\n        scanf(\"%d %d\",&x,&y);\n    \n        if(op=='c'){\n            //printf(\"c\");\n            temp=column[x-1];\n            column[x-1]=column[y-1];\n            column[y-1]=temp;\n        }\n        else if(op=='r'){\n            //printf(\"r\");\n            temp=row[x-1];\n            row[x-1]=row[y-1];\n            row[y-1]=temp;\n        }\n        if(op=='g'){\n            //printf(\"g\");\n            printf(\"%d\\n\",array[row[x-1]][column[y-1]]);\n    \n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.34408602150537637, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "cc3b803328d86cb39ce1d416ec37e558", "bug_code_uid": "ba51fd46c89d5fb4a95c58b002b62063", "src_uid": "bfc2e7de37db4a0a74cdd55f2124424a", "apr_id": "2fd022e3162667aec2f0a2542ee0cf54", "difficulty": 1500, "tags": ["bitmasks", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int o;\n    scanf(\"%d\",&o);\n    while(o--)\n    {\n        int n, i, j, temp, cnt=0, mini = 1000000008, maxi, keep;\n        scanf(\"%d\",&n);\n        int a[n+5];\n        for(i=0; i<n; i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=0; i<n-1; i++){\n            if(a[i] > a[i+1])break;\n        }\n        if(i == n-1){\n            printf(\"%d\\n\",0);\n            continue;\n        }\n        maxi = a[i];\n        for(j=i+1; j<n; j++){\n            if(a[j] < mini){\n                mini = a[j];\n            }\n        }\n        keep = maxi - mini;\n        int val=0;\n        for(i=0; val <= keep; i++){\n            val = pow(2,i);\n            cnt++;\n        }\n        printf(\"%d\\n\",cnt-1);\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint max(int a, int b){\n    return a > b? a: b;\n}\n\nint main(){\n    int o;\n    scanf(\"%d\",&o);\n    while(o--){\n        int n, a, i;\n        scanf(\"%d\",&n);\n\n        int Max = -1e9-5, x=0, cnt=0, diff=1;\n        for(i=0; i<n; i++){\n            scanf(\"%d\",&a);\n            x = max(x, Max-a);\n            Max = max(Max, a);\n        }\n\n        while(x>0){\n            cnt++;\n            x-=diff;\n            diff*=2;\n        }\n        printf(\"%d\\n\",cnt);\n    }\n}\n"}
{"similarity_score": 0.9200376293508937, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "b3dee5f23d15be311ed78fd3e486f6b2", "bug_code_uid": "13fefa09a4009d726556523e2e24ee79", "src_uid": "a9cd99d74418b5f227b358a910496b02", "apr_id": "297acf142ecf8e00e11e85f221d8f782", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint min;\nvoid update(int a)\n{\n    if(a<0)a=-a;\n    if(a>min)\n        min=a;\n}\nint main()\n{\n    int i,j,k,l,m,n,t,o,p,q,number;\n    int a[1000],b[1000];\n    char temp,s[310];\n    scanf(\"%s\",s);\n    i=0;\n    min=0;\n    number=0;\n    temp=s[0];\n    while(s[i])\n    {\n        if(s[i]=='+')\n        {\n            number++;\n            update(number);\n        }\n        else\n        {\n            number--;\n            update(number);\n        }\n        i++;\n    }\n    printf(\"%d\\n\",min);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint min,max;\nvoid update(int a)\n{\n    if(a<min)\n        min=a;\n    if(a>max)\n        max=a;\n}\nint main()\n{\n    int i,j,k,l,m,n,t,o,p,q,number;\n    char temp,s[310];\n    scanf(\"%s\",s);\n    i=0;\n    min=0;\n    number=0;\n    temp=s[0];\n    while(s[i])\n    {\n        if(s[i]=='+')\n        {\n            number++;\n            update(number);\n        }\n        else\n        {\n            number--;\n            update(number);\n        }\n        i++;\n    }\n    printf(\"%d\\n\",max-min);\n    return 0;\n}"}
{"similarity_score": 0.98, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e4f885c412d4a78364cd6e53e7aa5ef7", "bug_code_uid": "921a453589b7c2ca6c826f3aedf529fb", "src_uid": "3342e71884677534b7a126f89d441585", "apr_id": "012ffb0ecd97e386c4815115ada09c30", "difficulty": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmpfunc(const void*a,const void*b)\r\n{\r\n\treturn (*(int*)a-*(int*)b);\r\n}\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\nint n,i;\r\nscanf(\"%d\",&n);\r\nint arr[n],k,d,j;\r\nfor(i=0;i<n;i++)\r\n scanf(\"%d\",arr+i);\r\nqsort(arr,n,sizeof(int),cmpfunc);\r\nif(n==2){\r\n printf(\"%d %d\\n\",arr[0],arr[1]);\r\n continue;\r\n}\r\n\r\nd=arr[1]-arr[0];\r\nk=1;\r\nfor(i=2;i<n;i++)\r\n{\r\n\t\tif(d>(arr[i]-arr[i-1]))\r\n\t\t {\r\n\t\t \tk=i;\r\n\t\t }\r\n}\r\n\r\n\r\nfor(i=k;i<n;i++)\r\n{\r\n\r\n\t printf(\"%d \",arr[i]);\r\n}\r\nfor(i=0;i<k;i++)\r\n{\r\n\r\n\t printf(\"%d \",arr[i]);\r\n}\r\nprintf(\"\\n\");\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmpfunc(const void*a,const void*b)\r\n{\r\n\treturn (*(int*)a-*(int*)b);\r\n}\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\nint n,i;\r\nscanf(\"%d\",&n);\r\nint arr[n],k,d,j;\r\nfor(i=0;i<n;i++)\r\n scanf(\"%d\",arr+i);\r\nqsort(arr,n,sizeof(int),cmpfunc);\r\nif(n==2){\r\n printf(\"%d %d\\n\",arr[0],arr[1]);\r\n continue;\r\n}\r\n\r\nd=arr[1]-arr[0];\r\nk=1;\r\nfor(i=2;i<n;i++)\r\n{\r\n\t\tif(d>(arr[i]-arr[i-1]))\r\n\t\t {\r\n\t\t \td=arr[i]-arr[i-1];\r\n\t\t \tk=i;\r\n\t\t }\r\n}\r\n\r\n\r\nfor(i=k;i<n;i++)\r\n{\r\n\r\n\t printf(\"%d \",arr[i]);\r\n}\r\nfor(i=0;i<k;i++)\r\n{\r\n\r\n\t printf(\"%d \",arr[i]);\r\n}\r\nprintf(\"\\n\");\r\n}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9891891891891892, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c87a1c9cf4978b1d4e87a7d01ab014c0", "bug_code_uid": "46d01e30402a58c28353e5133db52634", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "9d6157f0d3dab44cbcbc70c81e3de6ef", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar a[10000000],g[10000];\n\nint main()\n{\n    long long int n,i,j,x=0,count=0,c=0;\n    scanf(\"%I64d\",&n);\n    getchar();\n    gets(a);\n    for(i=1;i<(2*n)-2;i+=2)\n    {\n        g[a[i-1]-32]++;\n        if(g[a[i]]>0)\n            g[a[i]]--;\n        else\n            count++;\n    }\n\n\n\n\n    printf(\"%I64d\\n\",count);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar a[10000000];\n\nint g[10000];\n\nint main()\n{\n    long long int n,i,j,x=0,count=0,c=0;\n    scanf(\"%I64d\",&n);\n    getchar();\n    gets(a);\n    for(i=1;i<(2*n)-2;i+=2)\n    {\n        g[a[i-1]-32]++;\n        if(g[a[i]]>0)\n            g[a[i]]--;\n        else\n            count++;\n    }\n\n\n\n\n    printf(\"%I64d\\n\",count);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9085037674919269, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5cdcec15ca6437de4bd55c69c1b95b17", "bug_code_uid": "dd33a484912e628e6fb005a3358c7462", "src_uid": "4296da660a39a6e98b41387929701c0a", "apr_id": "dade7c7d4edef74f158167fa579a4872", "difficulty": 800, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nvoid input(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&ar[i]);\r\n}\r\nint cmp(const void* a,const void* b)\r\n{\r\n    return (*(int*)a-*(int*)b);\r\n}\r\nvoid output(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        printf(\"%d \",ar[i]);\r\n    printf(\"\\n\");\r\n}\r\nvoid swap(int *x,int *y)\r\n{\r\n    int tmp=*x;\r\n    *x=*y;\r\n    *y=tmp;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int test_case=0;test_case<t;test_case++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        n=2*n;\r\n        int ar[n];\r\n        input(ar,n);\r\n        qsort(ar,n,sizeof(int),cmp);\r\n        for(int i=0;i<n-2;i++)\r\n        {\r\n            if((ar[i]+ar[i+2])/2 == ar[i+1])\r\n                swap(&ar[i],&ar[i+1]);\r\n        }\r\n        output(ar,n);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nvoid input(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&ar[i]);\r\n}\r\nint cmp(const void* a,const void* b)\r\n{\r\n    return (*(int*)a-*(int*)b);\r\n}\r\nvoid output(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        printf(\"%d \",ar[i]);\r\n    printf(\"\\n\");\r\n}\r\nvoid swap(int *x,int *y)\r\n{\r\n    int tmp=*x;\r\n    *x=*y;\r\n    *y=tmp;\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int test_case=0;test_case<t;test_case++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        n=2*n;\r\n        int ar[n];\r\n        input(ar,n);\r\n        qsort(ar,n,sizeof(int),cmp);\r\n        for(int i=0;i<n-2;i++)\r\n        {\r\n            if((ar[i]+ar[i+2])/2 == ar[i+1])\r\n                swap(&ar[i],&ar[i+1]);\r\n        }\r\n        for(int i=0;i<n-2;i++)\r\n        {\r\n            if((ar[i]+ar[i+2])/2 == ar[i+1])\r\n                swap(&ar[i],&ar[i+1]);\r\n        }\r\n        output(ar,n);\r\n    }\r\n}"}
{"similarity_score": 0.995850622406639, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "56f57c71500522c476b05d4a237a235e", "bug_code_uid": "bdecf408570062bb5d9b75aa80308b58", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "d6f7d860f050377bd075698737ec6dd0", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ \n    long long a,b,c,n,i;\n    int q;\n    scanf(\"%d\",&q);\n\n    for(i=1;i<=n;i++)\n    { scanf(\"%lld %lld %lld %lld\",&n,&a,&b,&c);\n    if(c%b<=a && n*b+a>=c)\n        printf(\"YES\\n\");\n    else printf(\"NO\\n\"); }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{ \n    long long a,b,c,n,i;\n    int q;\n    scanf(\"%d\",&q);\n\n    for(i=1;i<=q;i++)\n    { scanf(\"%lld %lld %lld %lld\",&n,&a,&b,&c);\n    if(c%b<=a && n*b+a>=c)\n        printf(\"YES\\n\");\n    else printf(\"NO\\n\"); }\n\n}\n"}
{"similarity_score": 0.438685208596713, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c6aec1ea5ca7226a331150a65fee519f", "bug_code_uid": "36f5fccbeacdf230e563f77966d9802a", "src_uid": "907893a0a78a7444d26bdd793d9c7499", "apr_id": "43614759bb79fed781b743bb08e61c57", "difficulty": 1300, "tags": ["data structures", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint iguales(int m,int vec[]);\nint main()\n{\n\tint n,m,i,men,medio,k=0,c=0;\n\tscanf(\"%d %d\",&n,&m);\n\tint vec[m];\n\tfor(i=0;i<m;i++){\n\t\tvec[i]=0;\n\t}\n\tif(m%2==0){\n\t\tmedio=m/2;\n\t}else\n\t\tmedio=m/2+1;\n\n\tmen=medio;\n\tvec[medio-1]++;\n\tprintf(\"%d\\n\",men);\n\tif(m%2!=0){\n\t\tfor(i=1;i<n;i++){\n\t\t\tif(!iguales(m,vec)){\n\t\t\t\tif(c%2==0){\n\t\t\t\t\tk++;\n\t\t\t\t\tmen=medio-k;\t\n\t\t\t\t}else{\n\t\t\t\t\tmen=medio+k;\t\n\t\t\t\t}\n\t\t\t\tc++;\n\t\t\t}else{\n\t\t\t\tk=0;c=0;\n\t\t\t\tmen=medio;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",men);\n\t\t\tvec[men-1]++;\n\t\t}\n\t}else{\n\t\tfor(i=1;i<n;i++){\n\t\t\tif(!iguales(m,vec)){\n\t\t\t\tif(c%2==0){\n\t\t\t\t\tk++;\n\t\t\t\t\tmen=medio+k;\t\n\t\t\t\t}else{\n\t\t\t\t\tmen=medio-k;\t\n\t\t\t\t}\n\t\t\t\tc++;\n\t\t\t}else{\n\t\t\t\tk=0;c=0;\n\t\t\t\tmen=medio;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",men);\n\t\t\tvec[men-1]++;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint iguales(int m,int vec[]){\n\tint i;\n\tfor(i=0;i<m-1;i++){\n\t\tif(vec[i]!=vec[i+1]){\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n//int iguales(int m,int vec[]);\nint main()\n{\n\tint n,m,i,men,medio,k=0,c=0;\n\tscanf(\"%d %d\",&n,&m);\n\t//int *vec=(int *)calloc(sizeof(int),m);\n\tif(m%2==0){\n\t\tmedio=m/2;\n\t}else\n\t\tmedio=m/2+1;\n\n\tmen=medio;\n\tprintf(\"%d\\n\",men);\n\tif(m%2!=0){\n\t\tfor(i=1;i<n;i++){\n\t\t\tif(c!=m-1){\n\t\t\t\tif(c%2==0){\n\t\t\t\t\tk++;\n\t\t\t\t\tmen=medio-k;\t\n\t\t\t\t}else{\n\t\t\t\t\tmen=medio+k;\t\n\t\t\t\t}\n\t\t\t\tc++;\n\t\t\t}else{\n\t\t\t\tk=0;c=0;\n\t\t\t\tmen=medio;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",men);\n\t\t}\n\t}else{\n\t\tfor(i=1;i<n;i++){\n\t\t\tif(c!=m-1){\n\t\t\t\tif(c%2==0){\n\t\t\t\t\tk++;\n\t\t\t\t\tmen=medio+k;\t\n\t\t\t\t}else{\n\t\t\t\t\tmen=medio-k;\t\n\t\t\t\t}\n\t\t\t\tc++;\n\t\t\t}else{\n\t\t\t\tk=0;c=0;\n\t\t\t\tmen=medio;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",men);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9927325581395349, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0f1c794bcccab4eacf0b703721ff53e6", "bug_code_uid": "f75cabc17f5508425e29260d973c99cd", "src_uid": "eadc7f5e1043ac431984ec921c62892d", "apr_id": "55342dc68d2101903d8c0fef71fd81cd", "difficulty": 1500, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdbool.h>\r\n\r\nint a[20007];\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 1; i <= t; i++){\r\n\t\tint n, m, pos;\r\n\t\tbool flag = false;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tm = n / 2;\r\n\t\tfor (int j = 1; j <= n; j++){\r\n\t\t\tscanf(\"%1d\", &a[j]);\r\n\t\t\tif (!flag && j > m && a[j] == 0){\r\n\t\t\t\tpos = j;\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (flag){\r\n\t\t\tprintf(\"1 %d 1 %d\\n\", pos - 1, pos);\r\n\t\t} else {\r\n\t\t\tm = n - m;\r\n\t\t\tfor (int j = 1; j <= m; j++){\r\n\t\t\t\tif (a[j] == 0){\r\n\t\t\t\t\tpos = j;\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (flag){\r\n\t\t\t\tprintf(\"%d %d %d %d\\n\", pos, n, pos + 1, n);\r\n\t\t\t} else {\r\n\t\t\t\tprintf(\"1 %d 2 %d\\n\", n - 1, n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdbool.h>\r\n\r\nint a[20007];\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 1; i <= t; i++){\r\n\t\tint n, m, pos;\r\n\t\tbool flag = false;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tm = n / 2;\r\n\t\tfor (int j = 1; j <= n; j++){\r\n\t\t\tscanf(\"%1d\", &a[j]);\r\n\t\t\tif (!flag && j > m && a[j] == 0){\r\n\t\t\t\tpos = j;\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (flag){\r\n\t\t\tprintf(\"1 %d 1 %d\\n\", pos, pos - 1);\r\n\t\t} else {\r\n\t\t\tm = n - m;\r\n\t\t\tfor (int j = 1; j <= m; j++){\r\n\t\t\t\tif (a[j] == 0){\r\n\t\t\t\t\tpos = j;\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (flag){\r\n\t\t\t\tprintf(\"%d %d %d %d\\n\", pos, n, pos + 1, n);\r\n\t\t\t} else {\r\n\t\t\t\tprintf(\"1 %d 2 %d\\n\", n - 1, n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9977827050997783, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "59f3958f1d37ddf314d59c1fed36f2f1", "bug_code_uid": "e4d11c028db070f28eb3e9423894f86f", "src_uid": "04753f73af685b4e7339d30d6d47c161", "apr_id": "1e92d5b188a3bdf5c737b89ad5aa0e9e", "difficulty": 1100, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define min(a,b) a>b?:b,a\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tlong long a,b,x,y,n,m;\n\t\tlong long s1,s2;\n\t\tscanf(\"%lld %lld %lld %lld %lld\",&a,&b,&x,&y,&n);\n\t\tm=n;\n\t\tif(a-n<x){\n\t\t\tn-=a-x;\n\t\t\tif(b-n<y)s1=x*y;\n\t\t\telse s1=x*(b-n);\n\t\t}\n\t\telse s1=b*(a-n);\n\t\tn=m;\n\t\tif(b-n<y){\n\t\t\tn-=b-x;\n\t\t\tif(a-n<x)s2=x*y;\n\t\t\telse s2=y*(a-n);\n\t\t}\n\t\telse s2=a*(b-n);\n\t\tprintf(\"%lld\\n\",s1<s2?s1:s2);\n\t}\n} ", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#define min(a,b) a>b?:b,a\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tlong long a,b,x,y,n,m;\n\t\tlong long s1,s2;\n\t\tscanf(\"%lld %lld %lld %lld %lld\",&a,&b,&x,&y,&n);\n\t\tm=n;\n\t\tif(a-n<x){\n\t\t\tn-=a-x;\n\t\t\tif(b-n<y)s1=x*y;\n\t\t\telse s1=x*(b-n);\n\t\t}\n\t\telse s1=b*(a-n);\n\t\tn=m;\n\t\tif(b-n<y){\n\t\t\tn-=b-y;\n\t\t\tif(a-n<x)s2=x*y;\n\t\t\telse s2=y*(a-n);\n\t\t}\n\t\telse s2=a*(b-n);\n\t\tprintf(\"%lld\\n\",s1<s2?s1:s2);\n\t}\n} "}
{"similarity_score": 0.9459901800327333, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f90b2e898d449ff9bb436b622b5ba064", "bug_code_uid": "a75b4aad6757457c99cb7e91d230e255", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "b8ef65ab714cf1a4e25e0c231eb0681e", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n int n,m,i,j,t,sum=0;\n scanf(\"%d%d\",&n,&m);\n int a[n];\n for(i=0;i<n;i++)\n scanf(\"%d\",&a[i]);\n for(i=0;i<n;i++)\n {\n  for(j=i+1;j<n;j++)\n  {\n   if(a[j]<a[i])\n   {\n    t=a[i];\n    a[i]=a[j];\n    a[j]=t;\n   }\n  }\n }\n for(i=0;i<m;i++)\n sum=sum+a[i];\n printf(\"%d\",(-1)*sum);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n int n,m,i,j,t,sum=0;\n scanf(\"%d%d\",&n,&m);\n int a[n];\n for(i=0;i<n;i++)\n scanf(\"%d\",&a[i]);\n for(i=0;i<n;i++)\n {\n  for(j=i+1;j<n;j++)\n  {\n   if(a[j]<a[i])\n   {\n    t=a[i];\n    a[i]=a[j];\n    a[j]=t;\n   }\n  }\n }\n for(i=0;i<m;i++)\n a[i]<0?sum=sum+a[i]:0;\n printf(\"%d\",(-1)*sum);\n}"}
{"similarity_score": 0.9702517162471396, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9a72a118c983b89f89eaea7ac0ed0bf2", "bug_code_uid": "d7b885a70fef93d3e518f7d0aa3b65cd", "src_uid": "d19c7a74d739c2ca0d568808862ba2bd", "apr_id": "1b61065bfd0b1ea9caba35fa5cd84998", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct bak\n{\n\tlong int data,index;\n}ba;\nint cmpm(const void *a,const void *b)\n{\t\n\tba *x=(ba*)a,*y=(ba*)b;\n\tif(x->data>y->data)\n\t\treturn 1;\n\telse\n\t\treturn -1;\n}\nint cmpi(const void *a,const void *b)\n{\n\tba *x=(ba*)a,*y=(ba*)b;\n\tif(x->index>y->index)\n\t\treturn 1;\n\telse\n\t\treturn -1;\n}\nint main()\n{\n\tba a[300009];\n\tlong int n,i;\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;i++)\n\t{scanf(\"%ld\",&(a[i].data));a[i].index=i;}\n\tqsort(a,n,sizeof(ba),cmpm);\n\tfor(i=0;i<n;i++)\n\t\tif(i>0 && a[i-1].data>=a[i].data)\n\t\t\ta[i].data=a[i-1].data+1;\n\tqsort(a,n,sizeof(ba),cmpi);\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%ld \",a[i].data);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\ntypedef struct bak\n{\n\tlong int data,index;\n}ba;\nint cmpm(const void *a,const void *b)\n{\t\n\tba *x=(ba*)a,*y=(ba*)b;\n\tif(x->data>y->data)\n\t\treturn 1;\n\telse if(x->data==y->data)\n\t\treturn 0;\n\telse\n\t\treturn -1;\n}\nint cmpi(const void *a,const void *b)\n{\n\tba *x=(ba*)a,*y=(ba*)b;\n\tif(x->index>y->index)\n\t\treturn 1;\n\telse\n\t\treturn -1;\n}\nint main()\n{\n\tba a[300009];\n\tlong int n,i;\n\tscanf(\"%ld\",&n);\n\tfor(i=0;i<n;i++)\n\t{scanf(\"%ld\",&(a[i].data));a[i].index=i;}\n\tqsort(a,n,sizeof(ba),cmpm);\n\tfor(i=0;i<n;i++)\n\t\tif(i>0 && a[i-1].data>=a[i].data)\n\t\t\ta[i].data=a[i-1].data+1;\n\tqsort(a,n,sizeof(ba),cmpi);\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%ld \",a[i].data);\n}\n"}
{"similarity_score": 0.9900426742532006, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e123dbf8742cb83875dd21cd3aa5bfa8", "bug_code_uid": "036f0cadcb766c30e4f4bb08b5b28a1f", "src_uid": "6422d76f71702e77808b1cc041962bb8", "apr_id": "7e2a0eb3acb0096935871b4838b2a41a", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\ntypedef long long ll;\r\n\r\nint abs(int n)\r\n{\r\n    if(n>=0)\r\n        return n;\r\n    else\r\n        return -n;\r\n}\r\n\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int A[t][2], B[t][2], F[t][2];\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\", &A[i][0]);\r\n        scanf(\"%d\", &A[i][1]);\r\n        scanf(\"%d\", &B[i][0]);\r\n        scanf(\"%d\", &B[i][1]);\r\n        scanf(\"%d\", &F[i][0]);\r\n        scanf(\"%d\", &F[i][1]);\r\n    }\r\n    \r\n    for(int i=0;i<t;i++)\r\n    {\r\n        if(A[i][0]==B[i][0] && A[i][0]==F[i][0] && ((A[i][1]>F[i][1] && B[i][1]<F[i][1]) || (A[i][1]<F[i][1] && B[i][1]>F[i][1])))\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][1]-B[i][1])+2);\r\n        }\r\n        else if(A[i][1]==B[i][1] && A[i][1]==F[i][1] && ((A[i][0]<F[i][0] && B[i][0]>F[i][0]) || (A[i][0]>F[i][0] && B[i][0]<F[i][0])))\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][0]-B[i][0])+2);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][1]+A[i][0]-B[i][1]-B[i][0]));\r\n        }\r\n    }\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\ntypedef long long ll;\r\n\r\nint abs(int n)\r\n{\r\n    if(n>=0)\r\n        return n;\r\n    else\r\n        return -n;\r\n}\r\n\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int A[t][2], B[t][2], F[t][2];\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d\", &A[i][0]);\r\n        scanf(\"%d\", &A[i][1]);\r\n        scanf(\"%d\", &B[i][0]);\r\n        scanf(\"%d\", &B[i][1]);\r\n        scanf(\"%d\", &F[i][0]);\r\n        scanf(\"%d\", &F[i][1]);\r\n    }\r\n    \r\n    for(int i=0;i<t;i++)\r\n    {\r\n        if(A[i][0]==B[i][0] && A[i][0]==F[i][0] && ((A[i][1]>F[i][1] && B[i][1]<F[i][1]) || (A[i][1]<F[i][1] && B[i][1]>F[i][1])))\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][1]-B[i][1])+2);\r\n        }\r\n        else if(A[i][1]==B[i][1] && A[i][1]==F[i][1] && ((A[i][0]<F[i][0] && B[i][0]>F[i][0]) || (A[i][0]>F[i][0] && B[i][0]<F[i][0])))\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][0]-B[i][0])+2);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\", abs(A[i][1]-B[i][1])+abs(A[i][0]-B[i][0]));\r\n        }\r\n    }\r\nreturn 0;\r\n}"}
{"similarity_score": 0.2395498392282958, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "bf7af179690947d4f43c6489b32eaf1b", "bug_code_uid": "8be457647aced123ff14080975d60619", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "51b9df66bf98b1ed0f12b61d70c43969", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (){\n\tint t, n;\n\tlong long int k, arr[100000];\n\tscanf(\"%d\", &t);\n\t\n\tfor (int i = 0; i < t; i++){\n\t\tscanf(\"%d %lld\", &n, &k);\n\t\tfor (int j = 0; j < n; j++){\n\t\t\tscanf(\"%lld\", &arr[j]);\n\t\t}\n\t\t\n\t\tfor (int l = k; l > 0; l--){\n\t\t\tint max = -999999999, min = 999999999;\n\t\t\tfor (int z = 0; z < n; z++){\n\t\t\t\tif (max < arr[z]){\n\n\t\t\t\t\tmax = arr[z];\n\t\t\t\t}\n\t\t\t\tif (min > arr[z]){\n\t\t\t\t\tmin = arr[z];\n\t\t\t\t}\n\t\t\t\tif (min == 0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < n; j++){\n\t\t\t\tarr[j] = max - arr[j];\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int j = 0; j < n; j++){\n\t\t\tprintf(\"%lld \", arr[j]);\n\t\t}\n\t\tputs(\"\");\n\t\n\t}\n\t\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main (){\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--){\n\t\tint n,k;\n\t\tscanf(\"%d %d\", &n, &k);\n\t\tint arr[n],max=-2000000000;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tscanf(\"%d\", &arr[i]);\n\t\t\tif(max<arr[i]){\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t}\n\t\tint odd[n],even[n],max2=-2000000000;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\todd[i]=max-arr[i];\n\t\t\tif(max2<odd[i]){\n\t\t\t\tmax2=odd[i];\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < n; i++){\n\t\t\teven[i]=max2-odd[i];\n\t\t}\n\t\tif(k%2==0){\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tprintf(\"%d \", even[i]);\n\t\t\t}\n\t\t}else{\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tprintf(\"%d \", odd[i]);\n\t\t\t}\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9858064516129033, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "92ecc93093e45fa11e1e5b36a3e38df1", "bug_code_uid": "637af2e33d79a7cbe6a02a4bbe3c15c3", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "d69435aae2863fc7a0f108a64ee718c1", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,p=0,q=0,len=0;\n    char a[1000];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",&a);\n    len = strlen(a);\n    for(i=0;i<len;i++){\n        if(a[i]==0)p++;\n        else if(a[i]==1)q++;\n    }\n    if(p==q){\n        printf(\"0\\n\");\n    }\n    else if(p>q){\n        printf(\"%d\\n\",p-q);\n    }\n    else printf(\"%d\\n\",q-p);\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,p=0,q=0,len=0;\n    char a[100000000];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",&a);\n    len = strlen(a);\n    for(i=0;i<len;i++){\n        if(a[i]=='0')p++;\n        else if(a[i]=='1')q++;\n    }\n    if(p==q){\n        printf(\"0\\n\");\n    }\n    else if(p>q){\n        printf(\"%d\\n\",p-q);\n    }\n    else printf(\"%d\\n\",q-p);\n        return 0;\n}\n"}
{"similarity_score": 0.9545454545454546, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "0e900ad80f2e8f11178d8b25e6a83a6d", "bug_code_uid": "d27f2f339b30f720f4e50d134963a983", "src_uid": "c659bdeda1c1da08cfc7f71367222332", "apr_id": "e353b1da2777e21a1caa481ae3330a50", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\n\nchar s[111111],t[111111];\nint i,d,z[111111];\nmain(c){\n    scanf(\"%s%s\",s,t);\n    if(strlen(s)!=strlen(t)){\n        puts(\"NO\");\n        return 0;\n    }\n    for(i=0;i<strlen(s);i++)\n        if(s[i]!=t[i]) z[d++]=i;\n\n    if(d!=2){\n        puts(\"NO\");\n        return 0;\n    }\n\n    puts(s[*z]==t[z[1]]&&s[z[1]]==t[*z]?\"YES\":\"NO\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\n\nchar s[111111],t[111111];\nint i,d,z[111111];\nmain(c){\n    scanf(\"%s%s\",s,t);\n    if(strlen(s)!=strlen(t)){\n        puts(\"NO\");\n        return 0;\n    }\n    for(i=0;s[i]&&d<3;i++) if(s[i]!=t[i]) z[d++]=i;\n\n    if(d!=2){\n        puts(\"NO\");\n        return 0;\n    }\n\n    puts(s[z[0]]==t[z[1]]&&s[z[1]]==t[z[0]]?\"YES\":\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.8427249789739276, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "ccd66cc8d4ae746147c079c55a473dd5", "bug_code_uid": "bb96d000a85f915eae6b5772ab3a7ed5", "src_uid": "aa3c015c20cb0c1789661fdc78ae9bec", "apr_id": "63fe34c91984815f75f2a5e2c7fc926b", "difficulty": 1300, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint a[200100];\nint p[200100];\n\nvoid sieve() {\n    memset(p, 1, sizeof(p));\n    p[0] = p[1] = 0;\n    for (int i = 2; i * i <= 200010; i++) {\n        if (p[i]) {\n            for (int j = i * i; j <= 200010; j += i) p[j] = 0;\n        }\n    }\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    sieve();\n    int val = 1;\n    for (int i = 2; i <= n; i++) {\n        if (p[i]) {\n            a[i] = val;\n            for (int j = i * i; j <= n; j += i) a[j] = val;\n            val++;\n        }\n    }\n    for (int i = 2; i <= n; i++) printf(\"%d \", a[i]);\n    printf(\"\\n\");\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint a[200100];\nint p[200100], f[200100];\n\nvoid sieve() {\n    memset(p, 1, sizeof(p));\n    p[0] = p[1] = 0;\n    for (int i = 2; i * i <= 200010; i++) {\n        if (p[i]) {\n            for (int j = i * i; j <= 200010; j += i) {\n                p[j] = 0; f[j] = i;\n            }\n        }\n    }\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    sieve();\n    int val = 1;\n    for (int i = 2; i <= n; i++) {\n        if (p[i]) a[i] = val++;\n        else a[i] = a[f[i]];\n    }\n    for (int i = 2; i <= n; i++) printf(\"%d \", a[i]);\n    printf(\"\\n\");\n}"}
{"similarity_score": 0.11602610587382162, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "688eea4f8069c8eeca4fe9361b7b6bda", "bug_code_uid": "cfaa054fe35f1d6eeb2787bbf3e5d531", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "a5b1658e698b8ccbf9830a49815a3bf6", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n\n{\n\n    int i;int j;int m;\n    int n;\n    scanf(\"number of coins %d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d \",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n            if(a[i]<a[j])\n            {\n                m = a[i];\n                a[i] = a[j];\n                a[j] = m;\n            }\n        }\n    }\n    int s=1;m=0;\n    for(i=0;i<n;i++)\n    {\n        m=m+a[i];\n        \n    }\n    for(i=1;i<n;i++)\n    {\n        if(a[0]>(m-a[0]))\n            printf(\"%d\",s);\n        else \n            {\n            a[0] = a[0] + a[i];\n            s = s + 1;\n        }\n        \n    }", "fixed": "#include <stdio.h>\n\nint main() {\n    int i, j, s, h;\n    int n;\n    int m = 0;\n\n    scanf(\"%d\", &n);\n    printf(\"\\n\");\n    int a[n];\n    for (i = 0; i < n;i++) {\n\n        scanf(\"%d\", &a[i]);\n\n\n    }\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            if (a[i] < a[j]) {\n                s = a[i];\n                a[i] = a[j];\n                a[j] = s;\n\n            }\n        }\n\n    }\n\n    h = 1;\n    for (i = 0; i < n; i++) {\n        m = m + a[i];\n\n    }\n    for (i = 1; i < n; i++)\n    {\n        if (a[0] > (m - a[0]))\n        {\n            break;\n        }\n        else\n        {\n            h = h + 1;\n            a[0] = a[0] + a[i];\n\n        }\n    }\n\n    printf(\"%d\", h);\n\n\n    return 0;\n}"}
{"similarity_score": 0.994994994994995, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "37c8eb73a4882d0e837511c6eea31e15", "bug_code_uid": "84d3a0ec75a1d76f07c5c64bc7f006a6", "src_uid": "53a3313f5d6ce19413d72473717054fc", "apr_id": "b9ece00dd036086bd0c71131b4c7d3ac", "difficulty": 900, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int k=1;k<=t;k++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int max=0,i,a[n];\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]>max)\n            max=i;\n        }\n        int flag=1;\n        for(i=0;i<n;i++)\n        {\n            if((max-a[i])%2==1)\n            flag=0;\n        }\n        if(flag)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int k=1;k<=t;k++)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int max=0,i,a[n];\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]>max)\n            max=a[i];\n        }\n        int flag=1;\n        for(i=0;i<n;i++)\n        {\n            if((max-a[i])%2==1)\n            flag=0;\n        }\n        if(flag)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.89120151371807, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "60d4aa70677095307baa692139d86810", "bug_code_uid": "7d4781d3688478d1494a2a22763d6238", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "560448f87173d4ee43a3552f3aa0ee6c", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nlong long max2 ( long long a , long long b ) {\r\n    return a > b ? a : b ;\r\n    }\r\n\r\nint main() {\r\n    int q;\r\n    scanf(\"%lld\", &q);\r\n\r\n    for (int setNumber = 1; setNumber <= q; setNumber++) {\r\n        long long n, x, t;\r\n        scanf(\"%lld %lld %lld\", &n, &x, &t);\r\n\r\n        long long gaps = t / x;\r\n        long long discontent = gaps * max2(0, n - gaps) + (gaps * gaps - gaps) / 2;\r\n\r\n        printf(\"%lld\\n\", discontent);\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nlong long min2 ( long long a , long long b ) {\r\n    return a < b ? a : b ;\r\n}\r\n\r\n\r\nlong long max2 ( long long a , long long b ) {\r\n    return a > b ? a : b ;\r\n}\r\n\r\nint main() {\r\n    int q;\r\n    scanf(\"%lld\", &q);\r\n\r\n    for (int setNumber = 1; setNumber <= q; setNumber++) {\r\n        long long n, x, t;\r\n        scanf(\"%lld %lld %lld\", &n, &x, &t);\r\n\r\n        long long gaps = t / x;\r\n        long long discontent = gaps * max2(0, n - gaps) + (min2(gaps * gaps, n*n) - min2(gaps, n)) / 2;\r\n\r\n        printf(\"%lld\\n\", discontent);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.987012987012987, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "cb93b53d0b76acd4246613389b5291c8", "bug_code_uid": "574b97dc5850f9a9f33b929dfe2f5bed", "src_uid": "5ebb0ee239d68ea33d9dac2d0bdd5f4e", "apr_id": "81afebe27125374ff33bf1f83aa27a01", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "bitmasks", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar * bin(int n,long x )\n{\n    char * ch=(char*)malloc((n*2)*sizeof(char));\n    strcpy(ch,\"\");\n    while(x!=0)\n    {\n        if (x%2==0) { strcat(ch,\"0\"); }\n        else { strcat(ch,\"1\"); }\n        x=x/2;\n    }\n    int i=strlen(ch);\n    for(;i<n;i++)\n        strcat(ch,\"0\");\n    return ch;\n}\nvoid main()\n{\n    int n,m,k,i,j,ami=0,cpt=0;\n    long x;\n    char b[1500][30];\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for (i=0;i<=m;i++)\n    {\n        scanf(\"%ld\",&x);\n        for (j=0;j<n;j++)\n            b[i][j]=bin(n,x)[j];\n    }\n    for(i=0;i<m;i++)\n    {\n        cpt=0;\n        for (j=0;j<n;j++)\n        {\n            if (b[i][j]!=b[m][j]) cpt++;\n            if (cpt>k)  break;\n        }\n        if ( cpt<=k ) ami++;\n    }\n    printf(\"%d\",ami);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar * bin(int n,long x )\n{\n    char * ch=(char*)malloc((n*2)*sizeof(char));\n    strcpy(ch,\"\");\n    while(x!=0)\n    {\n        if (x%2==0) { strcat(ch,\"0\"); }\n        else { strcat(ch,\"1\"); }\n        x=x/2;\n    }\n    int i=strlen(ch);\n    for(;i<n;i++)\n        strcat(ch,\"0\");\n    return ch;\n}\nint main()\n{\n    int n,m,k,i,j,ami=0,cpt=0;\n    long x;\n    char b[1500][30];\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for (i=0;i<=m;i++)\n    {\n        scanf(\"%ld\",&x);\n        for (j=0;j<n;j++)\n            b[i][j]=bin(n,x)[j];\n    }\n    for(i=0;i<m;i++)\n    {\n        cpt=0;\n        for (j=0;j<n;j++)\n        {\n            if (b[i][j]!=b[m][j]) cpt++;\n            if (cpt>k)  break;\n        }\n        if ( cpt<=k ) ami++;\n    }\n    printf(\"%d\",ami);\n    return 0;\n}\n"}
{"similarity_score": 0.9975669099756691, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8c8199e4c381fc5c48c4fbcaa234248a", "bug_code_uid": "f8ce030330f63000ca0c580c71873d22", "src_uid": "1c07882651ef6ebfc05e777d562e28b9", "apr_id": "70fcbdddaee74ff253a6926171ff8e57", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n  int t,n,i,x;\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d\",&n);\n   int count1=0,count2=0,l;\n    for(i=0;i<n;i++) \n    {\n      scanf(\"%d\", &x);\n      if (x==1) \n      {\n        l=1;\n        count2=0;\n      }\n      else \n      {\n        if (l) \n        {\n          count1++;\n          count2++;\n        }\n      }\n\n    }\n    printf(\"%d\\n\", count1-count2);\n  }\n\n  return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n  int t,n,i,x;\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d\",&n);\n   int count1=0,count2=0,l=0;\n    for(i=0;i<n;i++) \n    {\n      scanf(\"%d\", &x);\n      if (x==1) \n      {\n        l=1;\n        count2=0;\n      }\n      else \n      {\n        if (l) \n        {\n          count1++;\n          count2++;\n        }\n      }\n\n    }\n    printf(\"%d\\n\", count1-count2);\n  }\n\n  return 0;\n}"}
{"similarity_score": 0.9976470588235294, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "72433033c3bbdf9a9b4d9da2b3c9b421", "bug_code_uid": "b5ac864646e3750be5277327cbc2ac95", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "85315717f14a4e3483ebdc764a52e7e3", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n \n \nint main() {\n \n\tint t; scanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n, x; scanf(\"%d %d\", &n, &x);\n\t\tif (n <= 2) {\n\t\t\tprintf(\"1\\n\");\n\t\t} else {\n\t\t\tprintf(\"%d\\n\", 2 + (n-3) /x));\n\t\t}\n\t}\n \n\treturn 0;\n}", "fixed": "#include<stdio.h>\n \n \nint main() {\n \n\tint t; scanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n, x; scanf(\"%d %d\", &n, &x);\n\t\tif (n <= 2) {\n\t\t\tprintf(\"1\\n\");\n\t\t} else {\n\t\t\tprintf(\"%d\\n\", 2 + (n-3) /x);\n\t\t}\n\t}\n \n\treturn 0;\n}"}
{"similarity_score": 0.9916666666666667, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ca3825f887afca14ebb005627a209430", "bug_code_uid": "0cc0bfcca927f6064ab10b381e6f5c1a", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "0311a08f9e5a00a658ea34a1e73b441d", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n, a, b;\n    scanf(\"%d %d %d\", &n, &a, &b);\n    char c[n+5];\n    scanf(\"%s\", c);\n    if(c[a]==c[b])\n        printf(\"%c\", '0');\n    else\n        printf(\"%c\", '1');\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n, a, b;\n    scanf(\"%d %d %d\", &n, &a, &b);\n    char c[n+5];\n    scanf(\"%s\", c);\n    if(c[a-1]==c[b-1])\n        printf(\"%c\", '0');\n    else\n        printf(\"%c\", '1');\n    return 0;\n}"}
{"similarity_score": 0.7253333333333334, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e29bf701260a215a667e5076ba3a6196", "bug_code_uid": "627ea7919bfe650dc1b31063de644101", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "218e3a6b87bb4b2b1cefc2f30b8a186b", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000000],b[1000000]={0},count1=0,up,low,a2,b2;\n\nscanf(\"%lld%lld\",&n,&m);\ncount=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n    for(j=0;j<=i;j++){\n        b[count++]=a[j];\n    }\n   // printf(\"%lld %lld\\n\",a[i],b[count-1]);\n}\nprintf(\"%lld\",b[m-1]);\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\n\nint main(void){\n   \nlong long int test,i,j,n,count,flag=0,o1=0,o2=0,b1,x,m,l,max,sum2,min,f,c,r,o,sum1,sum=0,y,a[1000000],count1=0,up,low,a2,b2;\n\nscanf(\"%lld%lld\",&n,&m);\ncount=0;\nfor(i=0;i<n;i++){\n    scanf(\"%lld\",&a[i]);\n}\n  i=1; // printf(\"%lld %lld\\n\",a[i],b[count-1]);\nwhile(1){\n    if(m-i>0){\n        m-=i;\n    }else{\n        break;\n    }\n    i++;\n}\nprintf(\"%lld\",a[m-1]);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9682080924855492, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "51b79ec11ff807c897df18601c29231f", "bug_code_uid": "2768ee18f1b3e99ff1cf146fd43f707b", "src_uid": "016e00b2b960be792d4ec7fcfb7976e2", "apr_id": "98c368c51413b152a960f88c87c86323", "difficulty": 1300, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    long int i, j, k, l, m, n, minx, maxx, miny, maxy;\n\n    scanf(\"%ld\", &n);\n\n    minx = 10000000000;\n    miny = 10000000000;\n    maxx = -1;\n    maxy = -1;\n    for(i = 0; i < n; i++){\n        scanf(\"%d\", &j);\n        scanf(\"%d\", &k);\n\n        if(j < minx){\n            minx = j;\n        }\n        if(j > maxx){\n            maxx = j;\n        }\n        if(k < miny){\n            miny = k;\n        }\n        if(k > maxy){\n            maxy = k;\n        }\n    }\n\n    if((maxx - minx) > (maxy - miny)){\n        printf(\"%ld\\n\", (maxx - minx)*(maxx - minx));\n    }else{\n        printf(\"%ld\\n\", (maxy - miny) * (maxy - miny));\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    long long int i, j, k, l, m, n, minx, maxx, miny, maxy;\n\n    scanf(\"%I64d\", &n);\n\n    minx = 10000000000;\n    miny = 10000000000;\n    maxx = -10000000000;\n    maxy = -10000000000;\n    for(i = 0; i < n; i++){\n        scanf(\"%I64d\", &j);\n        scanf(\"%I64d\", &k);\n\n        if(j < minx){\n            minx = j;\n        }\n        if(j > maxx){\n            maxx = j;\n        }\n        if(k < miny){\n            miny = k;\n        }\n        if(k > maxy){\n            maxy = k;\n        }\n    }\n\n    if((maxx - minx) > (maxy - miny)){\n        printf(\"%I64d\\n\", (maxx - minx)*(maxx - minx));\n    }else{\n        printf(\"%I64d\\n\", (maxy - miny) * (maxy - miny));\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9266155531215772, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "88fb66065a8736bf1676fc277580ea3e", "bug_code_uid": "89354a69448ed77c0bf2bb86a5eb91ce", "src_uid": "af47635f631381b4578ba599a4f8b317", "apr_id": "e9ea9180936c587c27444fe7f097956f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,p,count;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    p=0;\n    count=0\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        {\n            p=p+1;\n        }\n        else\n        {\n            if(p>=1)\n            {\n                p=p-1;\n            }\n            else\n            {\n                count++;\n            }\n        }\n    }\n    printf(\"%d\",count);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,p,count;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    p=0;\n    count=0;\n    for(i=0;i<n;i++)\n    {\n        if(a[i]>0)\n        {\n            p=p+a[i];\n        }\n        else\n        {\n            if(p>=1)\n            {\n                p=p-1;\n            }\n            else\n            {\n                count++;\n            }\n        }\n    }\n    printf(\"%d\",count);\n}"}
{"similarity_score": 0.9949832775919732, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "22428f8d789b1f852ba805fc907c5c11", "bug_code_uid": "be19a38dbaf95641adad18e5ab8d4ae9", "src_uid": "f4804780d9c63167746132c35b2bdd02", "apr_id": "9d4d816e1a7a923c919e273c6f93ca52", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint temp[5];\n\nint cmp(const void *pa, const void *pb) {\n    return *(int *)pb - *(int *)pa;\n}\n\nint main() {\n    int a, b, c, x, y, z;\n    int t, i;\n    \n    scanf(\"%d\", &t);\n    for (i = 0; i < t; i++) {\n        scanf(\"%d%d%d\", &x, &y, &z);\n        temp[0] = x; temp[1] = y; temp[2] = z;\n        qsort(temp, 3, sizeof(temp[0]), cmp);\n        if (temp[0] != temp[1]) {\n            printf(\"NO\\n\");\n        } else {\n            printf(\"YES\\n\");\n            printf(\"%d %d %d\\n\", temp[0], temp[2], temp[2]);\n        }\n    }\n\n    system(\"pause\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint temp[10];\n\nint cmp(const void *pa, const void *pb) {\n    return *(int *)pb - *(int *)pa;\n}\n\nint main() {\n    int a, b, c, x, y, z;\n    int t, i;\n    \n    scanf(\"%d\", &t);\n    for (i = 0; i < t; i++) {\n        scanf(\"%d%d%d\", &x, &y, &z);\n        temp[0] = x; temp[1] = y; temp[2] = z;\n        qsort(temp, 3, sizeof(temp[0]), cmp);\n        if (temp[0] != temp[1]) {\n            printf(\"NO\\n\");\n        } else {\n            printf(\"YES\\n\");\n            printf(\"%d %d %d\\n\", temp[0], temp[2], temp[2]);\n        }\n    }\n\n    // system(\"pause\");\n    return 0;\n}"}
{"similarity_score": 0.9976019184652278, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1cff5d963cd38e55abad3775afe4f65a", "bug_code_uid": "5c9a742fa4873cdcfa0904e548f3454a", "src_uid": "cac8ca5565e06021a44bb4388b5913a5", "apr_id": "714e80661d3858711114531fafe9c5c0", "difficulty": 1300, "tags": ["constructive algorithms", "implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,i,j,s[100][2];\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<2;j++){\n\t\t\tscanf(\"%d\",&s[i][j]);\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tprintf(\"%d\",i%2);\n\t}\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,i,j,s[1000][2];\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=0;i<m;i++){\n\t\tfor(j=0;j<2;j++){\n\t\t\tscanf(\"%d\",&s[i][j]);\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tprintf(\"%d\",i%2);\n\t}\n    return 0;\n}\n\n"}
{"similarity_score": 0.8594704684317719, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c170a26497b114c4d01ccb19d5f73209", "bug_code_uid": "8517a478c4ab8baddb5a1e117627e47a", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "d149bbeecc352772f927abfb86921a89", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint num=0;\t\t\t\t\n\tfor(int i =1;i<n;i++){\n\t\twhile(a[i]<=a[i-1]){\n\t\ta[i]+=m;\n\t\tnum++;\t\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}", "fixed": "#include <stdio.h>\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint num=0;\t\t\t\t\n\tfor(int i =1;i<n;i++){\n\t\tif(a[i]<=a[i-1]){\n\t\tint y=(a[i-1]-a[i])/m+1;\n\t\ta[i]+=y*m;\n\t\tnum+=y;\t\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}"}
{"similarity_score": 0.9987775061124694, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c9e35ff1a467d5f3c5e06ff4d3ce869f", "bug_code_uid": "8b0886ccb6b49edee44aa0922caaafaa", "src_uid": "da2fb0ea61808905a133021223f6148d", "apr_id": "d47bbafd74f224d48112724235f605cf", "difficulty": 1300, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main(){\r\n\r\n    long long int n;\r\n    scanf(\"%d\", &n);\r\n    long long int a[n];\r\n    for(int i = 0; i < n; i++) scanf(\"%lld\", &a[i]);\r\n    \r\n    long long int resenje;\r\n    \r\n    for(int i = 0; i < n; i++){\r\n        \r\n        long long int nula = 0;\r\n        long long int potezi = 0;\r\n        \r\n        for(int j = i-1; j >= 0; j--) {\r\n        \r\n            nula += a[j] - nula%a[j];\r\n            potezi += nula/a[j];\r\n        }\r\n        \r\n        nula = 0;\r\n        \r\n        for(int k = i+1; k < n; k++){\r\n        \r\n            nula += a[k] - nula%a[k];\r\n            potezi += nula/a[k];\r\n        }\r\n        \r\n        if(i == 0) resenje = potezi;\r\n        else if(resenje > potezi) resenje = potezi;\r\n    }\r\n    \r\n    printf(\"%lld\\n\", resenje);\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main(){\r\n\r\n    long long int n;\r\n    scanf(\"%lld\", &n);\r\n    long long int a[n];\r\n    for(int i = 0; i < n; i++) scanf(\"%lld\", &a[i]);\r\n    \r\n    long long int resenje;\r\n    \r\n    for(int i = 0; i < n; i++){\r\n        \r\n        long long int nula = 0;\r\n        long long int potezi = 0;\r\n        \r\n        for(int j = i-1; j >= 0; j--) {\r\n        \r\n            nula += a[j] - nula%a[j];\r\n            potezi += nula/a[j];\r\n        }\r\n        \r\n        nula = 0;\r\n        \r\n        for(int k = i+1; k < n; k++){\r\n        \r\n            nula += a[k] - nula%a[k];\r\n            potezi += nula/a[k];\r\n        }\r\n        \r\n        if(i == 0) resenje = potezi;\r\n        else if(resenje > potezi) resenje = potezi;\r\n    }\r\n    \r\n    printf(\"%lld\\n\", resenje);\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.7610837438423645, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c62b8d9740793d633885d8098ef16529", "bug_code_uid": "d8eb78e8fb90560d192aa3058a28194a", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "03f77d9cf4ffbc01b1b628737a977fae", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,a[100000],b[100000]={0},i,j,f=0,h[100000],ped[100000];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++){\nscanf(\"%d\",&a[i]);\nscanf(\"%d\",&b[a[i]]);\n}\nfor(i=0;i<n;i++)\n++h[a[i]];\nfor(i=0;i<n;i++)\nh[a[i]]+=h[a[i-1]];\nfor(i=0;i<n;i++)\nped[(h[a[i]]--)-1]=a[i];\nfor(i=1;i<n;i++)\nif(ped[i]>ped[i-1]&&b[ped[i]]<b[ped[i-1]]){\nf=1;\nbreak;\n}\nif(f)\nprintf(\"Happy Alex\");\nelse\nprintf(\"Poor Alex\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,a[100002],b[100002],i,j,f=0,h[100002]={0},ped[100002];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++){\nscanf(\"%d\",&a[i]);\nscanf(\"%d\",&b[a[i]]);\n}\nfor(i=0;i<n;i++)\n++h[a[i]-1];\nfor(i=1;i<n;i++)\nh[i]+=h[i-1];\nfor(i=0;i<n;i++)\nped[(h[a[i]-1]--)-1]=a[i];\nfor(i=1;i<n;i++)\nif(ped[i]>ped[i-1]&&b[ped[i]]<b[ped[i-1]]){\nf=1;\nbreak;\n}\nif(f)\nprintf(\"Happy Alex\");\nelse\nprintf(\"Poor Alex\");\n}\n"}
{"similarity_score": 0.7566265060240964, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "bfefb3b86baad98a965785e543fbe0d1", "bug_code_uid": "1a390421aaa6ff7eba62bdab95acec10", "src_uid": "614aa068ce74090b6577006c45e549cf", "apr_id": "26c3bd654038fb51d8c8925a03dd428a", "difficulty": null, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<bits/stdc++.h>\nint t;\nint read()\n{\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')\n    {\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x;\n}\nint p(int x)\n{\n    if(x<4)return 1;\n    for(int i=2;i*i<=x;i++)\n    {\n        if(x%i==0)return x/i;\n    }\n    return 1;\n}\nint main()\n{\n    t=read();\n    while(t--)\n    {\n        int n=read(),x=p(n);\n        printf(\"%d\\n\",n/x-1+(x!=1));\n    }\n}", "fixed": "#include<stdio.h>\nint t,n;\nint read()\n{\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')\n    {\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x;\n}\nint main()\n{\n    t=read();\n    while(t--)\n    {\n        n=read();\n        printf(\"%d\\n\",n<4?n-1:(n&1)+2);\n    }\n}"}
{"similarity_score": 0.5712166172106825, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "3c6c9b4783df0a99b9415b51cf7ea063", "bug_code_uid": "a24517a952dc2b8ad3203c298278d91d", "src_uid": "859d66fc2c204a8c002012b1fb206645", "apr_id": "f87b9225896dd9041c88c2c9b75e1866", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[100];\n\nint main()\n{\n      int n,i,m,x, y;\n\n      scanf(\"%d\", &n);\n      for(i=0 ; i<n ; i++)\n            scanf(\"%d\", &a[i]);\n\n      scanf(\"%d\", &m);\n      while(m--)\n      {\n            scanf(\"%d %d\", &x, &y);\n            if(x==1)\n            {\n                  a[1] += a[0] - y;\n            }\n            else if(x==n)\n            {\n                  a[n-1] += y-1;\n            }\n            else\n            {\n                  a[x-2] += y-1;\n                  a[x] += a[x-1] - y;\n            }\n            a[x-1] = 0;\n      }\n\n      for(i=0 ; i<n ; i++)\n            printf(\"%d\\n\", a[i]);\n\n      return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n      int a[102], n, x, y, i, m;\n      scanf(\"%d\", &n);\n\n      for(i=0 ; i<n ; i++)\n            scanf(\"%d\", &a[i]);\n\n      scanf(\"%d\", &m);\n\n      while(m--)\n      {\n            scanf(\"%d %d\", &x, &y);\n            x -= 1;\n\n            if(x==0)\n            {\n                  a[x+1] += a[x] - y;\n                  a[x] = 0;\n                  continue;\n            }\n\n            if(x==n-1)\n            {\n                  a[x-1] += y-1;\n                  a[x] = 0;\n                  continue;\n            }\n\n            a[x+1] += a[x] - y;\n            a[x-1] += y-1;\n            a[x] = 0;\n      }\n\n      for(i=0 ; i<n ; i++)\n            printf(\"%d\\n\", a[i]);\n\n      return 0;\n}\n"}
{"similarity_score": 0.9787234042553191, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "908a0370c302a046b57dd7ef98302241", "bug_code_uid": "a0b3dcc6f262dd2ef70d04da72e93664", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "87d18874e2435285ff93a7c01ac7933a", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MIN(a,b) (a>b)?b:a\n\nint main(){\n    int sodd = -1;\n    int curr;\n    int n,i;\n    long long sum = 0;\n    scanf(\"%d\",&n);\n    for(i = 0; i < n; i++){\n        scanf(\"%d\",&curr);\n        if(curr % 2 != 0){\n            if(sodd == -1)\n                sodd = curr;\n            else\n                sodd = MIN(sodd,curr);\n        }\n        sum += curr;\n\n\n    }\n    if(sum % 2 == 0)\n        printf(\"%d\\n\",sum);\n    else{\n        printf(\"%d\\n\",sum-sodd);\n    }\n\n}\n", "fixed": "#include <stdio.h>\n\n#define MIN(a,b) (a>b)?b:a\n\nint main(){\n    int sodd = -1;\n    int curr;\n    int n,i;\n    unsigned long long  int  sum = 0;\n    scanf(\"%d\",&n);\n    for(i = 0; i < n; i++){\n        scanf(\"%d\",&curr);\n        if(curr % 2 != 0){\n            if(sodd == -1)\n                sodd = curr;\n            else\n                sodd = MIN(sodd,curr);\n        }\n        sum += curr;\n\n\n    }\n    if(sum % 2 == 0)\n        printf(\"%I64d\\n\",sum);\n    else{\n        printf(\"%I64d\\n\",sum-sodd);\n    }\n\n}\n"}
{"similarity_score": 0.9727740986019132, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1e3fff94c3367c529f3ff474ba4befde", "bug_code_uid": "cf2ce68d8301792931ac53d178358a49", "src_uid": "21c0e12347d8be7dd19cb9f43a31be85", "apr_id": "96d4f9a046479a87aa45cec53d7704f0", "difficulty": 1700, "tags": ["implementation", "hashing", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint test(const char *a, const char *b, int n)\n{\n\tint i = 0;\n\n\tfor( i = 0; i < n; i++ )\n\t\tif (*(a+i) != *(b+i))\n\t\t\tbreak;\n\n\tif i == n:\n\t\treturn 0;\n\n    if (n%2 == 1)\n        return 0;\n\n//    print(a1, a2, b1, b2)\n    if (test(a, b, n/2) == 1)\n        if (test(a+n/2, b+n/2, n/2) == 1)\n            return 1;\n\n    if ( test(a, b+n/2, n/2) == 1)\n        if ( test(a+n/2, b, n/2) == 1)\n            return 1;\n\n    return 0;\n}\n\nint main()\n{\n\tint ans = 0;\n\tchar a[200002], b[200002];\n\n\tscanf(\"%s\", a);\n\tscanf(\"%s\", b);\n\n    ans = test(a, b, strlen(a));\n\n    if (ans == 1)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\t\n\treturn 0;\n\n}\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint test(const char *a, const char *b, int n)\n{\n\tint i = 0;\n\n\tfor( i = 0; i < n; i++ )\n\t\tif (*(a+i) != *(b+i))\n\t\t\tbreak;\n\n\tif (i == n)\n\t\treturn 1;\n\n    if (n%2 == 1)\n        return 0;\n\n//    print(a1, a2, b1, b2)\n    if (test(a, b, n/2) == 1)\n        if (test(a+n/2, b+n/2, n/2) == 1)\n            return 1;\n\n    if ( test(a, b+n/2, n/2) == 1)\n        if ( test(a+n/2, b, n/2) == 1)\n            return 1;\n\n    return 0;\n}\n\nint main()\n{\n\tint ans = 0;\n\tchar a[200002], b[200002];\n\n\tscanf(\"%s\", a);\n\tscanf(\"%s\", b);\n\n    ans = test(a, b, strlen(a));\n\n    if (ans == 1)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\t\n\treturn 0;\n\n}\n\n"}
{"similarity_score": 0.4421272158498436, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b72d0884d8aa8233597005e826167c7b", "bug_code_uid": "7d44662b8228d01e20f7b4a19230f139", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "3f70d474d31a6e2b2af52acaeb343fec", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j,sum,max;\r\n    scanf(\"%d\",&n);\r\n    int arr[3];\r\n    for(i=0;i<n;i++)\r\n    {\r\n        for(j=0;j<3;j++)\r\n        {\r\n            scanf(\"%d\",&arr[j]);\r\n        }\r\n        int max=arr[0];\r\n        for(j=0;j<3;j++)\r\n        {\r\n            if(max<arr[j])\r\n            {\r\n                max=arr[j];\r\n            }\r\n        }\r\n        sum=0;\r\n        for(j=0;j<3;j++)\r\n        {\r\n            sum+=arr[j];\r\n        }\r\n        if(sum/max==2 || sum==0)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,a,b,c;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if((a+b)==c || (a+c)==b ||(b+c)==a)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.5517241379310345, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "c3da5a2c24ad16bc5a1615b9edebde8c", "bug_code_uid": "7b92881a2b4a92c351505c61e6292506", "src_uid": "c9b322a9138410a82e541179272eb6bf", "apr_id": "b550a200756ee598e2e2f76374474e77", "difficulty": 1300, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n void sort(int m,int x[ ])\n   {\n       int i, j, t;\n\n       for(i = 1; i <= m-1; i++)\n          for(j = 1; j <= m-i; j++)\n             if(x[j-1] >= x[j])\n             {\n                t = x[j-1];\n                x[j-1] = x[j];\n                x[j] = t;\n             }\n   }\nint main()\n{\n    int n,l,i;\n    scanf(\"%d %d\",&n,&l);\n    int a[n],b[n],c[n],p,q;\n    long long sm=0,dif=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n        if(a[i]>b[i])\n            p=b[i];\n        else p=a[i];\n        if((2*a[i])>b[i])\n            q=b[i];\n        else q=2*a[i];\n        c[i]=q-p;\n        sm+=q;\n    }\n    sort(n,c);\n    for (i=0;i<n-l;i++)\n    {\n        dif=dif+c[i];\n    }\n\n    printf(\"%I64d \",sm-dif);\n\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n    int n,l,i;\n    scanf(\"%d %d\",&n,&l);\n    int a[n],b[n],c[n],p,q;\n    long long sm=0,dif=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n        if(a[i]>b[i])\n            p=b[i];\n        else p=a[i];\n        if((2*a[i])>b[i])\n            q=b[i];\n        else q=2*a[i];\n        c[i]=q-p;\n        sm+=q;\n    }\n    qsort(c, n, sizeof(int), cmpfunc);\n    for (i=0;i<n-l;i++)\n    {\n        dif=dif+c[i];\n    }\n\n    printf(\"%I64d \",sm-dif);\n\n}\n"}
{"similarity_score": 0.5445420326223338, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "2f02d151689b69ccf13aaa5a939767e6", "bug_code_uid": "484cc9a8cbf5a8d50e48d3cc6c98d7f7", "src_uid": "adc43f273dd9b3f1c58b052a34732a50", "apr_id": "976a85646d66bf8cffd052a80570830c", "difficulty": 1600, "tags": ["dp", "two pointers", "math", "binary search", "brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define MAXN 1000000\n\nint main(void) {\n\tint k, i, n;\n\tchar str[MAXN + 3];\n\tscanf(\"%d\\n\", &k);\n\tgets(str);\n\t\n\tn = strlen(str);\n\tlong long sum[n + 2] = {1};\n\t\n\tlong long count = 0;\n\tint ptr = 0;\n\t\n\tfor (i = 0; i < n; i++){\n\t\tif (str[i] == '1') ptr++;\n\t\tif (ptr >= k) count += sum[ptr - k];\n\t\tsum[ptr]++;\n\t}\n\tprintf(\"%lld\\n\", count);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define MAXN 1000000\n\nint main(void) {\n\tint k, i, n;\n\tscanf(\"%d\\n\", &k);\n\tlong long sum[MAXN + 2];\n\tmemset(sum, 0, (MAXN+1)*sizeof(long long));\n\tsum[0] = 1;\n\t\n\tlong long count = 0;\n\tint ptr = 0;\n\tchar ch;\n\t\n\twhile ((ch = getchar()) != '\\n' && ch != EOF) {\n\t\tif (ch == '1') ptr++;\n\t\tif (ptr >= k) count += sum[ptr - k];\n\t\tsum[ptr]++;\n\t}\n\tprintf(\"%lld\\n\", count);\n\treturn 0;\n}"}
{"similarity_score": 0.9959239130434783, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "af3dba2c8de13350a01b85f643e74e10", "bug_code_uid": "fbc2ed6f6ba6858fa9ca306cf2aca5bc", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "1685c3052ac17dc9419a2434d0a1ec66", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i,n,a[5000],a1=0,a2=0,a3=0,s,x,y,z,o,j;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\nfor(i=0;i<n;i++)\n{\n\tif(a[i]==1)\n\ta1++;\n\tif(a[i]==2)\n\ta2++;\n\tif(a[3]==3)\n\ta3++;\n}\nif(a1==0||a2==0||a3==0)\nprintf(\"0\");\nelse\n{\nif(a1<=a2&&a1<=a3)\n{\nprintf(\"%d\",a1);\ns=a1;\n}\nelse if(a2<=a1&&a2<=a3)\n{\nprintf(\"%d\",a2);\ns=a2;\n}\nelse\n{\nprintf(\"%d\",a3);\ns=a3;\n}\n}\nfor(i=0;i<s;i++)\n{\n\tx=y=z=o=0;\n\tfor(j=0;j<n;j++)\n\t{\n\tif(a[j]==1)\n\t{\n\tx=j+1;\n\ta[j]=0;\n\to=1;\n\t}\n\tif(o==1)\n\tbreak;\n\t}\n\to=0;\n\tfor(j=0;j<n;j++)\n\t{\n\t\tif(a[j]==2)\n\t\t{\n\t\ty=j+1;\n\t\ta[j]=0;\n\t\to=1;\n\t\t}\n\t\tif(o==1)\n\t\tbreak;\n\t}\n\to=0;\n\tfor(j=0;j<n;j++)\n\t{\n\t\tif(a[j]==3)\n\t\t{\n\t\tz=j+1;\n\t\ta[j]=0;\n\t\to=1;\n\t\t}\n\t\tif(o==1)\n\t\tbreak;\n}\nprintf(\"\\n\");\nprintf(\"%d %d %d\",x,y,z);\n}\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint i,n,a[5000],a1=0,a2=0,a3=0,s,x,y,z,o,j;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\nscanf(\"%d\",&a[i]);\nfor(i=0;i<n;i++)\n{\n\tif(a[i]==1)\n\ta1++;\n\tif(a[i]==2)\n\ta2++;\n\tif(a[i]==3)\n\ta3++;\n}\nif(a1==0||a2==0||a3==0)\nprintf(\"0\");\nelse\n{\nif(a1<=a2&&a1<=a3)\n{\nprintf(\"%d\",a1);\ns=a1;\n}\nelse if(a2<=a1&&a2<=a3)\n{\nprintf(\"%d\",a2);\ns=a2;\n}\nelse\n{\nprintf(\"%d\",a3);\ns=a3;\n}\nfor(i=0;i<s;i++)\n{\n\tx=y=z=o=0;\n\tfor(j=0;j<n;j++)\n\t{\n\tif(a[j]==1)\n\t{\n\tx=j+1;\n\ta[j]=0;\n\to=1;\n\t}\n\tif(o==1)\n\tbreak;\n\t}\n\to=0;\n\tfor(j=0;j<n;j++)\n\t{\n\t\tif(a[j]==2)\n\t\t{\n\t\ty=j+1;\n\t\ta[j]=0;\n\t\to=1;\n\t\t}\n\t\tif(o==1)\n\t\tbreak;\n\t}\n\to=0;\n\tfor(j=0;j<n;j++)\n\t{\n\t\tif(a[j]==3)\n\t\t{\n\t\tz=j+1;\n\t\ta[j]=0;\n\t\to=1;\n\t\t}\n\t\tif(o==1)\n\t\tbreak;\n}\nprintf(\"\\n\");\nprintf(\"%d %d %d\",x,y,z);\n}\n}\n}"}
{"similarity_score": 0.9441201000834029, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4072ed6c348776710d4ae41704a7c084", "bug_code_uid": "a4c7f9e5338e54777e5ac792f3b2e34f", "src_uid": "dcb483886c81d2cc0ded065aa1e74091", "apr_id": "1dcd4df92579725c193c10fde92e904f", "difficulty": 1600, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MOD 1000000007\ntypedef long long ll;\nll a[100001],b[100001],d[100001];\nint main()\n{\n    ll n,k,i,l;\n    scanf(\"%lld%lld\",&n,&k);\n    l=n/k;\n    for(i=0;i<l;++i)\n        scanf(\"%lld\",a+i);\n    for(i=0;i<l;++i)\n        scanf(\"%lld\",b+i);\n    ll f=1,ans=1;\n    for(i=1;i<k;++i)\n        f*=10;\n    for(i=0;i<l;++i)\n    {\n        d[i]=(10*f-1)/a[i];\n        d[i]+=((b[i]*f-1)/a[i]);\n        d[i]-=(((b[i]+1)*f-1)/a[i]);\n        if(b[i])\n            ++d[i];\n    }\n    for(i=0;i<l;++i)\n        ans=(ans*d[i])%MOD;\n    printf(\"%lld\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define MOD 1000000007\ntypedef long long ll;\nll a[100001],b[100001],d[100001];\nint main()\n{\n    ll n,k,i,l;\n    scanf(\"%lld%lld\",&n,&k);\n    l=n/k;\n    for(i=0;i<l;++i)\n        scanf(\"%lld\",a+i);\n    for(i=0;i<l;++i)\n        scanf(\"%lld\",b+i);\n    ll f=1,ans=1;\n    for(i=1;i<k;++i)\n        f*=10;\n    for(i=0;i<l;++i)\n    {\n        d[i]=(10*f-1)/a[i];\n        if(b[i])\n            d[i]+=((b[i]*f-1)/a[i]);\n        d[i]-=(((b[i]+1)*f-1)/a[i]);\n        if(b[i])\n            ++d[i];\n        //printf(\"%lld \",d[i]);\n    }\n    for(i=0;i<l;++i)\n        ans=(ans*d[i])%MOD;\n    printf(\"%lld\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.7406199021207178, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "eb4f923ca65a5934e83ea6e16a7fe803", "bug_code_uid": "40f38df6d0a5d7033193d1df3c135db9", "src_uid": "68b7567880b9980d793dae2bce690356", "apr_id": "38143661a38ea0f9e9cde5f147d91be5", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint int_cmp_val(int a, int b){\n  if(a > b) return 1;\n  else if(a < b) return -1;\n  else return 0;\n}\n\nint int_cmp_lt(const void* a_ptr, const void* b_ptr){\n  int a = *(int*)a_ptr;\n  int b = *(int*)b_ptr;\n  return int_cmp_val(a, b);\n}\n\nint max_beauty(int* a, int n){\n  qsort(a, n, sizeof(int), int_cmp_lt);\n  int new_len = 0, prev = a[0], prev_count = 0;\n  for(int i = 1; i < n; i++){\n    if(a[i] == prev) prev_count++;\n    else new_len += (prev_count > 0) ? 2 : 1, prev_count = 0, prev = a[i];\n  }\n  if(new_len%2 == 0&& prev_count > 0) new_len+=2;\n  else if(new_len%2 == 0) new_len+=1;\n  return new_len/2 + new_len%2;\n}\n\nint main(){\n  int t, n;\n  fscanf(stdin, \"%d\", &t);\n  while(t--){\n    fscanf(stdin, \"%d\", &n);\n    int a[n];\n    for(int i = 0; i < n; i++) fscanf(stdin, \"%d\", &a[i]);\n    fprintf(stdout, \"%d\\n\", max_beauty(a, n));\n  }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint int_cmp_val(int a, int b){\n  if(a > b) return 1;\n  else if(a < b) return -1;\n  else return 0;\n}\n\nint int_cmp_lt(const void* a_ptr, const void* b_ptr){\n  int a = *(int*)a_ptr;\n  int b = *(int*)b_ptr;\n  return int_cmp_val(a, b);\n}\n\ntypedef int(*fn_cmp)(const void*, const void*);\n\nint max_beauty(int* a, int n, fn_cmp sort_fn){\n  qsort(a, n, sizeof(int), sort_fn);\n  int ndups = 0, nuniq = 0, prev = a[0], prev_count = 0;\n  for(int i = 1; i < n; i++){\n    if(a[i] == prev) prev_count++;\n    else if(prev_count > 0) ndups++, prev = a[i], prev_count = 0;\n    else nuniq++, prev = a[i], prev_count = 0;\n  }\n  if(prev_count > 0) ndups++;\n  else nuniq++;\n  return ndups + nuniq/2 + nuniq%2;\n}\n\nint main(){\n  int t, n;\n  fscanf(stdin, \"%d\", &t);\n  while(t--){\n    fscanf(stdin, \"%d\", &n);\n    int a[n];\n    for(int i = 0; i < n; i++) fscanf(stdin, \"%d\", &a[i]);\n    fprintf(stdout, \"%d\\n\", max_beauty(a, n, int_cmp_lt));\n  }\n}\n"}
{"similarity_score": 0.9983498349834984, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2d37aa243e369d25565cccd8a0b8176b", "bug_code_uid": "71a433e03ea2ac7fb05c543e71f95dc2", "src_uid": "ab7ab67941783da5c16f6294eb1910d9", "apr_id": "2d91a3956be474a9bed1bd0e535632d7", "difficulty": 800, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint fun(const void *a,const void *b)\r\n{\r\n    return (*(int*)a - *(int*)b);\r\n}\r\nint main(){\r\n    int t,n,a[1000],i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int s =0;\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        qsort(a,n,sizeof(int),fun);\r\n        if(n==1){\r\n            printf(\"1\\n\");\r\n        }\r\n        else{\r\n        for(i=0;i<n;i++){\r\n            if(a[i]==a[i+1])\r\n            s++;\r\n        }\r\n        if(s%2==0)\r\n        printf(\"%d\\n\",(n-s));\r\n        else \r\n        printf(\"%d\\n\",(n-s-1));\r\n        }\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint fun(const void *a,const void *b)\r\n{\r\n    return (*(int*)a - *(int*)b);\r\n}\r\nint main(){\r\n    int t,n,a[1000],i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int s =0;\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        qsort(a,n,sizeof(int),fun);\r\n        if(n==1){\r\n            printf(\"1\\n\");\r\n        }\r\n        else{\r\n        for(i=0;i<n-1;i++){\r\n            if(a[i]==a[i+1])\r\n            s++;\r\n        }\r\n        if(s%2==0)\r\n        printf(\"%d\\n\",(n-s));\r\n        else \r\n        printf(\"%d\\n\",(n-s-1));\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.6649874055415617, "equal_cnt": 29, "replace_cnt": 18, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 28, "lang": "GNU C11", "fix_code_uid": "2e82efbb2d416866f04281637a707c0a", "bug_code_uid": "bc0a4b83ed61e6d96bd50147f6985c2c", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "9562b9bdd01dfeea2be38104fec35f94", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,p=0,i,b; \n    float r=0;\n    scanf(\"%d\",&n); \n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&b);\n        p=p+b; \n    }\n    r=(float)(p/n);\n    printf(\"%.3f\",r);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint a;\n\t\n\tfloat  b, sum=0;\n\tscanf(\"%d\",&a);\n\tint i;\n\tfor(i=1;i<=a;i++)\n\t{\n\t\tscanf(\"%f\",&b);\n\t\tsum=sum+b;\n\t}\n\tsum=sum/a;\n\tprintf(\"%f\",sum);\n\treturn 0;\n\t}"}
{"similarity_score": 0.8620689655172413, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a7fa4a7a082087db68165efb15eb4869", "bug_code_uid": "d7a0f74c2428d619672429abbe9988f2", "src_uid": "43a65d1cfe59931991b6aefae1ecd10e", "apr_id": "95598b4602bfadd83821f2a6d8b09e63", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define SIZE 65001\n\nint main()\n{\n    int i,j,k,l,p,t,n,count=0;\n    char str[SIZE];\n    scanf(\"%d \",&n);\n    scanf(\"%s\",str);\n    for(i=0;i<n;i++){\n        for(j=i;j<n;j++){\n            if(str[j]%2==0)\n                count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define SIZE 65001\n\nint main()\n{\n    int i,j,k,l,p,t,n,count=0;\n    char str[SIZE];\n    scanf(\"%d \",&n);\n    scanf(\" %s\",str);\n    for(i=0;i<n;i++){\n        if(str[i]%2==0){\n            count+=i+1;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}\n "}
{"similarity_score": 0.6522911051212938, "equal_cnt": 21, "replace_cnt": 7, "delete_cnt": 8, "insert_cnt": 6, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "2e9f69f0fe39c5fe3d86053ff9038eb3", "bug_code_uid": "58269c09192dc393435049c49c0dabfb", "src_uid": "f5451b19cf835b1cb154253fbe4ea6df", "apr_id": "1b3d0603f94460d78c5590d80e2621bf", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int a[30],i,k,sum,max;\n    char s[1010];\n    while(scanf(\"%d\",&k)!=EOF)\n    {\n        getchar();\n        gets(s);sum=0;\n        memset(a,0,sizeof(a));\n        for(i=0;s[i]!='\\0';i++)\n        {\n            a[s[i]-'a'+1]+=1;\n        }\n        for(i=1;i<=26;i++)\n        {\n            if(a[i]!=0)\n            {\n                sum++;max=a[i];\n            }\n        }\n        if(sum==k)\n        {\n            for(i=1;i<=26;i++)\n            {\n                if(a[i]>0)\n                {\n                   if(max!=a[i])\n                   break;\n                }\n            }\n            if(i<=26)\n            printf(\"-1\\n\");\n            else\n            {\n                while(max--)\n                for(i=1;i<=26;i++)\n                {\n                    if(a[i]>0)\n                    printf(\"%c\",i+'a'-1);\n                }\n                printf(\"\\n\");\n            }\n        }\n        else\n        printf(\"-1\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char s[1010],s2[1010];\n    int a[30],i,j,k,mark,m,l;\n    while(scanf(\"%d\",&k)!=EOF)\n    {\n        getchar();\n        gets(s);mark=0;l=k;\n        memset(a,0,sizeof(a));\n        for(i=0;s[i]!='\\0';i++)\n        {\n            a[s[i]-'a'+1]+=1;\n        }\n        for(i=1;i<=26;i++)\n        {\n            if(a[i]%k!=0)\n            mark=1;\n        }\n        if(mark==1)\n        {\n           printf(\"-1\\n\"); continue ;\n        }\n        else\n        {\n            while(l--)\n            for(i=1,j=0;i<=26;i++)\n            {\n                if(a[i]>0)\n                {\n                    m=a[i]/k;\n                    while(m--)\n                    {\n                        printf(\"%c\",i+'a'-1);\n                    }\n                }\n            }\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9386503067484663, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cf98ff4d713f38f5e2182e511bf92fe4", "bug_code_uid": "2f710fb86ead04229a3f4765c44ca86e", "src_uid": "c768f3e52e562ae1fd47502a60dbadfe", "apr_id": "361a6578757a2ab33291dc9cc08e08f5", "difficulty": 1500, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar s[5005]={0};\n\tscanf(\"%s\",s);\n\tint i=0,j=0;\n\tint l=strlen(s);\n\tif(l==1 || l==2){printf(\"%d\\n\",l);return 0;}\n\tint prea[5005] = {0};\n\tint preb[5005] = {0};\n\tint sufa[5005] = {0};\n\tint sufb[5005] = {0};\n\n\tif(s[0]=='a')prea[0]=1;\n\telse preb[0]=1;\n\n\tfor(i=1;i<l;i++)\n\t{\n\t\tif(s[i]=='a')\n\t\t{\n\t\t\tprea[i]=prea[i-1]+1;\n\t\t\tpreb[i]=preb[i-1];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tprea[i]=prea[i-1];\n\t\t\tpreb[i]=preb[i-1]+1;\n\t\t}\n\t}\n\t\n\tsufa[l]=0;sufb[l]=0;\n\n\tif(s[l-1]=='a')sufa[l-1]=1;\n\telse sufb[l-1]=1;\n\t\n\tfor(i=l-2;i>=0;i--)\n\t{\n\t\tif(s[i]=='a')\n\t\t{\n\t\t\tsufa[i]=sufa[i+1]+1;\n\t\t\tsufb[i]=sufb[i+1];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsufa[i]=sufa[i+1];\n\t\t\tsufb[i]=sufb[i+1]+1;\n\t\t}\n\t}\n\n\tint max=0;\n\n\tfor(i=0;i<l;i++)\n\t{\n\t\tfor(j=i;j<l;j++)\n\t\t{\n\t\t\tif(prea[i]+(preb[j]-preb[i])+sufa[j+1]>max)max=prea[i]+(preb[j]-preb[i])+sufa[j+1];\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n\n// aba\n// a a\n// ba\n// ab\n\n// ababababababaabababababababaaba\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar s[5005]={0};\n\tscanf(\"%s\",s);\n\tint i=0,j=0;\n\tint l=strlen(s);\n\tif(l==1 || l==2){printf(\"%d\\n\",l);return 0;}\n\tint prea[5005] = {0};\n\tint preb[5005] = {0};\n\tint sufa[5005] = {0};\n\tint sufb[5005] = {0};\n\n\tif(s[0]=='a')prea[0]=1;\n\telse preb[0]=1;\n\n\tfor(i=1;i<l;i++)\n\t{\n\t\tif(s[i]=='a')\n\t\t{\n\t\t\tprea[i]=prea[i-1]+1;\n\t\t\tpreb[i]=preb[i-1];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tprea[i]=prea[i-1];\n\t\t\tpreb[i]=preb[i-1]+1;\n\t\t}\n\t}\n\t\n\tsufa[l]=0;sufb[l]=0;\n\n\tif(s[l-1]=='a')sufa[l-1]=1;\n\telse sufb[l-1]=1;\n\t\n\tfor(i=l-2;i>=0;i--)\n\t{\n\t\tif(s[i]=='a')\n\t\t{\n\t\t\tsufa[i]=sufa[i+1]+1;\n\t\t\tsufb[i]=sufb[i+1];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsufa[i]=sufa[i+1];\n\t\t\tsufb[i]=sufb[i+1]+1;\n\t\t}\n\t}\n\n\tint max=0;\n\n\tfor(j=0;j<=l;j++)\n\t{\n\t\tif(preb[j]+sufa[j+1]>max)max=preb[j]+sufa[j+1];\n\t}\n\n\tfor(i=0;i<=l;i++)\n\t{\n\t\tfor(j=i;j<=l;j++)\n\t\t{\n\t\t\tif(prea[i]+(preb[j]-preb[i])+sufa[j+1]>max)max=prea[i]+(preb[j]-preb[i])+sufa[j+1];\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n\n// aba\n// a a\n// ba\n// ab\n\n// ababababababaabababababababaaba\n"}
{"similarity_score": 0.9977324263038548, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "807fbb0abc0de38a049faa5cc4428e4e", "bug_code_uid": "0d7669439840d9671d6cbbe15d60049c", "src_uid": "84bd49becca69e126606d5a2f764dd91", "apr_id": "14e67830b09ada28de1abf3e7450e83c", "difficulty": 1400, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[1005],b[1005],n,i,j,count=0;\n    int v[1005]={0};\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n    }\n\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            if((a[i]==b[j]) && (i!=j))\n            {\n                v[j]=1;\n            }\n        }\n    }\n\n    for(i=0;i<n;i++) if(!v[i]) count++;\n\n    printf(\"%d\\n\",count);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[1005],b[1005],n,i,j,count=0;\n    int v[1005]={0};\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n    }\n\n\n    for(i=0; i<n; i++)\n    {\n        for(j=0; j<n; j++)\n        {\n            if((a[i]==b[j]) && (i!=j))\n            {\n                v[i]=1;\n            }\n        }\n    }\n\n    for(i=0;i<n;i++) if(!v[i]) count++;\n\n    printf(\"%d\\n\",count);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8820224719101124, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "7a07af10fedc60f67443da4cacd378fc", "bug_code_uid": "2a3a1aea04701d91ef9bf1506b6dfe37", "src_uid": "7b806b9a402a83a5b8943e7f3436cc9a", "apr_id": "24cbdc6c5f46976a846e846c6fba6a12", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n,i,j,c1=0,c2=0,temp=0;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<2*n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<2*n;i++)\n    {\n        for(j=0;j<(2*n)-1;j++)\n        {\n            if(a[j]<a[j+1])\n            {\n                temp=a[j+1];\n                a[j+1]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        c1=c1+a[i];\n        c2=c2+a[(2*n)-1-i];\n    }\n    if(c1>c2)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n,i,j,c1=0,temp=0;\n\tscanf(\"%d\",&n);\n\tint a[200];\n\tfor(i=0;i<2*n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<2*n;i++)\n    {\n        for(j=0;j<(2*n)-1;j++)\n        {\n            if(a[j]<a[j+1])\n            {\n                temp=a[j+1];\n                a[j+1]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n   if(a[n-1]==a[n])\n   c1=1;\n   \n    if(c1!=1)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n\n\treturn 0;\n}"}
{"similarity_score": 0.7628083491461101, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "9b08d77cb1f62f6d9ff85c149fbd8e01", "bug_code_uid": "732dd6a810f6289707361c9de27881d1", "src_uid": "0816295355375a2d3f1cd45852b86360", "apr_id": "c761659c78f66fea0a28065f5845ab9c", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t,i;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        long long int str,in,exp,k,g;\n        scanf(\"%lld %lld %lld\",&str,&in,&exp);\n        if((str+exp)<=in)\n        {\n            k=0;\n        }\n        else if((in+exp)<str)\n        {\n            k=exp+1;\n        }\n        else\n        {\n            if(str>=in)\n            {\n                k=(str-in)+(exp-(str-in))/2;\n            }\n            else\n            {\n                k=(in-str)+(exp-(in-str))/2;\n                k=exp-k;\n            }\n        }\n        printf(\"%lld\\n\",k);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,i;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        long long int str,in,exp,k,g;\n        scanf(\"%lld %lld %lld\",&str,&in,&exp);\n        if((str+exp)<=in)\n        {\n            k=0;\n        }\n        else if((in+exp)<str)\n        {\n            k=exp+1;\n        }\n        else\n        {\n            k=(str+exp+1-in)/2;\n        }\n        printf(\"%lld\\n\",k);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "5e432f74a9d36aa796bf6f2459aaa08b", "bug_code_uid": "34e0f7f7bab3bdd4b7f0c87aedc33e14", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "9aaaab62256b732c5496957b818926c2", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,i,j,t;\n    scanf(\"%d\",&n);\n    int a[n],b[n-1],c[n-2];\n    for(i=0;i<n;i++)\n        scanf(\"%d \",&a[i]);\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\",&b[i]);\n    for(i=0;i<n-2;i++)\n        scanf(\"%d\",&c[i]);\n    for(i=1;i<n;++i){\n        for(j=n-1;j>=i;--j){\n            if(a[j-1]>b[j]){\n                t=a[j-1];\n                a[j-1]=a[j];\n                a[j]=t;\n            }\n        }\n    }\n    for(i=1;i<n-1;++i){\n        for(j=n-1;j>=i;--j){\n            if(b[j-1]>b[j]){\n               t=b[j-1];\n                b[j-1]=b[j];\n                b[j]=t;\n\n            }\n        }\n    }\n     for(i=1;i<n-2;++i){\n        for(j=n-2;j>=i;--j){\n            if(c[j-1]>c[j]){\n               t=c[j-1];\n                c[j-1]=c[j];\n                c[j]=t;\n\n            }\n        }\n    }\n    for(i=0;i<n;i++){\n\n        if(a[i]!=b[i]){\n        printf(\"%d\\n\",a[i]);\n        break;\n        }\n    }\n    for(i=0;i<n-1;i++){\n        if(b[i]!=c[i]){\n        printf(\"%d\",b[i]);\n\n        }\n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,i,x=0,y=0,z=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n-1],c[n-2];\n    for(i=0;i<n;i++)\n        scanf(\"%d \",&a[i]);\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\",&b[i]);\n    for(i=0;i<n-2;i++)\n        scanf(\"%d\",&c[i]);\n    for(i=0;i<n;++i){\n        x+=a[i];\n    }\n    for(i=0;i<n-1;++i){\n        y+=b[i];\n    }\n     for(i=0;i<n-2;++i){\n        z+=c[i];\n    }\n     printf(\"%d\\n%d\",x-y,y-z);\n    return 0;\n}\n"}
{"similarity_score": 0.4806201550387597, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "1395d8df3ea7a55ece8cecef08b28c07", "bug_code_uid": "07438183c223b6f86eb43702c12ffe05", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "02d733a966c67c96fdaaf1a7e9cd5c85", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a,b,n,i;\n    scanf(\"%d\", &n);\n    for(i=1;i<=n;i++) {\n        scanf(\"%d %d\",&a,&b);\n        if(a>b) {\n            printf(\"Happy Alex\");\n        }\n        else if(a<b) {\n            printf(\"Happy Alex\");\n        }\n        else if(a==b) {\n            printf(\"Poor Alex\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main() {\n   long long int m,n,i,j,k,b,a,l=0;\n   scanf(\"%I64d\",&n);\n   for(i=0;i<n;i++) {\n        scanf(\"%I64d %I64d\",&a,&b);\n        if(a>b||b>a) {\n           l=1;\n\n        }\n   }\n   if(l==1)printf(\"Happy Alex\");\n   else printf(\"Poor Alex\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9750778816199377, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "97b04023e8e73a927e30ecd5c61f2cfe", "bug_code_uid": "5cf4c9da4223230d764800faa27937f3", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "0efb17c9dd2e53d7ee58aa5db7fde0f8", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\nchar ns[21][15],ms[21][15];\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",ns[i%n]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",ms[i%m]);\n\t}\n\tint q;\n\tscanf(\"%d\",&q);\n\tfor(int i=0,y;i<q;i++)\n\t{\n\t\tscanf(\"%d\",&y);\n\t\tprintf(\"%s%s\\n\",ns[y%n],ms[y%m]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nchar ns[21][15],ms[21][15];\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",ns[i%n]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",ms[i%m]);\n\t}\n\tint q;\n\tscanf(\"%d\",&q);\n\tfor(int i=0,y;i<q;i++)\n\t{\n\t\tscanf(\"%d\",&y);\n\t\tprintf(\"%s%s\\n\",ns[y%n],ms[y%m]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9649952696310312, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "45c8716bdba3216c825c3fa2464c8f71", "bug_code_uid": "3c19384845e7d680a04601c6693a8ce3", "src_uid": "636a30a2b0038ee1731325a5fc2df73a", "apr_id": "a78175cab94d1c4d7428caa034f3e12a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#define MAX(x, y) (((x) > (y)) ? (x) : (y))\n\nint main()\n{\n    double total, w, x[5] = {500, 1000, 1500, 2000, 2500};\n    double m[5];\n    int i;\n    for(i = 0; i < 5; i++)\n    {\n        scanf(\"%lf\", &m[i]);\n\n    }\n    for(i = 0; i < 5; i++)\n    {\n        scanf(\"%lf\", &w);\n        total += MAX(x[i] * 3 / 10, x[i] - x[i] * m[i] / 250 - w * 50);\n    }\n    scanf(\"%lf\", &w);\n    total += 100 * w;\n    scanf(\"%lf\", &w);\n    total -= 50 * w;\n    printf(\"%.0lf\", round(total));\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#define MAX(x, y) (((x) > (y)) ? (x) : (y))\n\nint main()\n{\n    double total, w, x[5] = {500, 1000, 1500, 2000, 2500};\n    double m[5];\n    int i;\n    for(i = 0; i < 5; i++)\n    {\n        scanf(\"%lf\", &m[i]);\n\n    }\n    for(i = 0; i < 5; i++)\n    {\n        scanf(\"%lf\", &w);\n        total += MAX(x[i] * 3 / 10, x[i] - x[i] * m[i] / 250 - w * 50);\n    }\n    scanf(\"%lf\", &w);\n    total += 100 * w;\n    scanf(\"%lf\", &w);\n    total -= 50 * w;\n    printf(\"%d\", (int)(total + 0.5));\n\n    return 0;\n}\n"}
{"similarity_score": 0.9591527987897126, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "91ece274ce34c3d89b3861e80e695e46", "bug_code_uid": "90ded806cf2457ab0773e5955da79286", "src_uid": "c0ad2a6d14b0c9e09af2221d88a34d52", "apr_id": "01b0ee4c052326f1c685c2a2cd143d1d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>;\r\n\r\nint main() {\r\n    int t, r, b, d;\r\n    scanf(\"%d\\n\", &t);\r\n    for (int i=0; i<t; i++) {\r\n        scanf(\"%d %d %d\\n\", &r, &b, &d);\r\n        if ((r*(d+1)>=b)&&(b*(d+1)>=r)) {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>;\r\n\r\nint main() {\r\n    int t;\r\n    long long int r, b, d;\r\n    scanf(\"%d\\n\", &t);\r\n    for (int i=0; i<t; i++) {\r\n        scanf(\"%lld %lld %lld\\n\", &r, &b, &d);\r\n        if ((r*(d+1)>=b)&&(b*(d+1)>=r)) {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9946902654867257, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "7b69f837fa1503c8f9934adc9723722c", "bug_code_uid": "50b7e54732151a0bb204b2b79f402455", "src_uid": "edd556d60de89587f1b8daa893538530", "apr_id": "b502e0b3474859fedcbbb75987fb7926", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(){\n\tint a,n,i,j,e = 1,k,u1,u2;\n\tchar arr1[3005][25],arr2[3005][25],ans[10000],c[3005][25];\n\n   scanf(\"%d %d\",&a,&n);\n\tfor(i = 1; i <= n; i++) scanf(\"%s %s\",arr1[i],arr2[i]);\n\tfor(i = 1; i <= a; i++)\n\t{\n\t\tscanf(\"%s\",ans);\n\t\tfor(j = 1; j <= n; j++)\n\t\t\tif(!strcmp(arr1[j],ans))\n\t\t\t{\n\t\t\t\tif(strlen(arr1[j]) <= strlen(arr2[j])) strcpy(c[e],arr1[j]);\n\t\t\t\telse                                   strcpy(c[e],arr2[j]);\n\t\t\te++;\n\t\t\tbreak;\n\t\t\t}\n\t}\n\n\tfor(i = 1; i <= e; i++) printf(\"%s \",c[i]);\n\n\treturn 0;\n}\n\t\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(){\n\tint a,n,i,j,e = 1,k,u1,u2;\n\tchar arr1[4005][25],arr2[4005][25],ans[10000],c[4005][25];\n\n   scanf(\"%d %d\",&a,&n);\n\tfor(i = 1; i <= n; i++) scanf(\"%s %s\",arr1[i],arr2[i]);\n\tfor(i = 1; i <= a; i++)\n\t{\n\t\tscanf(\"%s\",ans);\n\t\tfor(j = 1; j <= n; j++)\n\t\t\tif(!strcmp(arr1[j],ans))\n\t\t\t{\n\t\t\t\tif(strlen(arr1[j]) <= strlen(arr2[j])) strcpy(c[e],arr1[j]);\n\t\t\t\telse                                   strcpy(c[e],arr2[j]);\n\t\t\te++;\n\t\t\tbreak;\n\t\t\t}\n\t}\n\n\tfor(i = 1; i <= e; i++) printf(\"%s \",c[i]);\n\n\treturn 0;\n}\n\t\n\n"}
{"similarity_score": 0.9972640218878249, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "99f048e5984511b781cba0e401eb0274", "bug_code_uid": "7e01d81ceff0dd17efe6467ce3169e89", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "9c8f14cfede6f255ac73ad6623aa4b4b", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void * a, const void * b)\n{\n\treturn (*(int *)a - *(int *)b);\n}\n\nint main()\n{\n\tint n,i,j,count = 0,a[110000],q,num,low,last,mid;\n\n\tscanf(\"%d\",&n);\n\n\tfor(i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tqsort(a,n,sizeof(int),cmp);\n\n\tscanf(\"%d\",&q);\n\n\tfor(i = 0; i < q; i++)\n\t{\n\t\tscanf(\"%d\",&num);\n\n\t\tif(num < a[1])\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\n\t\t}\n\t\t\n\t\telse if(num >= a[n])\n\t\t{\n\t\t\tprintf(\"%d\\n\",n);\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\tlow = 1,last = n, mid;\n\n\t\t\twhile(low <= last)\n\t\t\t{\n\t\t\t\tmid = (low + last) / 2;\n\n\t\t\t\tif(num < a[mid])\n\t\t\t\t{\n\t\t\t\t\tlast = mid - 1;\n\t\t\t\t}\n\n\t\t\t\telse if(num >= a[mid])\n\t\t\t\t{\n\t\t\t\t\tlow = mid + 1;\n\n\t\t\t\t\tcount = mid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprintf(\"%d\\n\",count);\n\t\t}\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void * a, const void * b)\n{\n\treturn (*(int *)a - *(int *)b);\n}\n\nint main()\n{\n\tint n,i,j,count = 0,a[110000],q,num,low,last,mid;\n\n\tscanf(\"%d\",&n);\n\n\tfor(i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tqsort(a,n + 1,sizeof(int),cmp);\n\n\tscanf(\"%d\",&q);\n\n\tfor(i = 0; i < q; i++)\n\t{\n\t\tscanf(\"%d\",&num);\n\n\t\tif(num < a[1])\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\n\t\t}\n\t\t\n\t\telse if(num >= a[n])\n\t\t{\n\t\t\tprintf(\"%d\\n\",n);\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\tlow = 1,last = n, mid;\n\n\t\t\twhile(low <= last)\n\t\t\t{\n\t\t\t\tmid = (low + last) / 2;\n\n\t\t\t\tif(num < a[mid])\n\t\t\t\t{\n\t\t\t\t\tlast = mid - 1;\n\t\t\t\t}\n\n\t\t\t\telse if(num >= a[mid])\n\t\t\t\t{\n\t\t\t\t\tlow = mid + 1;\n\n\t\t\t\t\tcount = mid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprintf(\"%d\\n\",count);\n\t\t}\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.2507462686567164, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "860ecbda706a2f162e1832d754ede863", "bug_code_uid": "0d0aff848ad1972d5c34c37bb407fd9e", "src_uid": "b0b4cadc46f9fd056bf7dc36d1cf51f2", "apr_id": "db58119359f0e63b4b3195f97580b537", "difficulty": 1200, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n, m, i;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < n * 4; i++) {\n\t\tint a = i % 2 == 0 ? n * 2 + i / 2 + 1 : i / 2 + 1;\n\n\t\tif (a <= m)\n\t\t\tprintf(\"%d \", a);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N 1000\n\nint gcd(int a, int b) {\n\treturn b == 0 ? a : gcd(b, a % b);\n}\n\nint main() {\n\tstatic int aa[N], bb[N + N];\n\tint n, n_, i;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tn_ = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (i > 0 && gcd(aa[i - 1], aa[i]) != 1)\n\t\t\tbb[n_++] = 1;\n\t\tbb[n_++] = aa[i];\n\t}\n\tprintf(\"%d\\n\", n_ - n);\n\tfor (i = 0; i < n_; i++)\n\t\tprintf(\"%d \", bb[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.6927710843373494, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "5276a39453c6168c76928b94bb59e179", "bug_code_uid": "fe14a2eb41be1b0b300aa5b120251476", "src_uid": "a3df5d51538658e8c9356f9e848debcf", "apr_id": "066a9d4a37b46b41fa9b6c412ebf4a6a", "difficulty": 1100, "tags": ["binary search", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int t, n, m, x, a[150000];\r\nint f(const void* q, const void* w) { return *(int*)q - *(int*)w; }\r\nint main() {\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d %d\", &n, &m);\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\tqsort(a, n, 4, f);\r\n\t\twhile (m--) {\r\n\t\t\tint e = 0;\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\t\te += a[i];\r\n\t\t\t\tif (e >= x) {\r\n\t\t\t\t\tprintf(\"%d\\n\", i + 1);\r\n\t\t\t\t\tgoto p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tputs(\"-1\");\r\n\t\tp:;\r\n\t\t}\r\n\t}\r\n}", "fixed": "int t, n, m, x, a[150000];\r\nint f(const void* q, const void* w) { return *(int*)w - *(int*)q; }\r\nint main() {\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d %d\", &n, &m);\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\tqsort(a, n, 4, f);\r\n\t\tfor (int i = 1; i < n; i++)\r\n\t\t\ta[i] += a[i - 1];\r\n\t\twhile (m--) {\r\n\t\t\tint q = 0, w = n - 1;\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\twhile (q < w) {\r\n\t\t\t\tif (a[(q + w) / 2] < x)\r\n\t\t\t\t\tq = (q + w) / 2 + 1;\r\n\t\t\t\telse\r\n\t\t\t\t\tw = (q + w) / 2;\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\", a[q] < x ? -1 : q + 1);\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.2415954415954416, "equal_cnt": 23, "replace_cnt": 21, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 23, "lang": "GNU C", "fix_code_uid": "57d5f12a08434e2497e4858c5ff73c6d", "bug_code_uid": "1bdfa3ba94d47533149f0d18155e0dbb", "src_uid": "38fe0e19974a7bc60153793b9060369a", "apr_id": "71fe5b52d0ed26bb7a4c98445fe4b801", "difficulty": 1500, "tags": ["two pointers", "binary search", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <iostream>\n\nusing namespace std;\n\ntypedef struct{\n    int m;\n    int f;\n}friends;\n\nfriends v[100000];\n\nint compare(const void*a,const void*b){\n    friends x=*(friends*)a;\n    friends y=*(friends*)b;\n    if(x.m==y.m)\n    {\n        if(x.f>y.f)\n            return -1;\n        return 1;\n    }\n    if(x.m>y.m)\n        return -1;\n    return 1;\n}\n\nlong long sum[100001];\n\nint main()\n{\n    int n,d,i,j,p;\n    long long max=0;\n    fscanf(stdin,\"%d%d\",&n,&d);\n    for(i=0;i<n;i++)\n    {\n        fscanf(stdin,\"%d%d\",&v[i].m,&v[i].f);\n    }\n    qsort(v,n,sizeof(friends),compare);\n    for(i=1;i<=n;i++)\n        sum[i]+=sum[i-1]+v[i-1].f;\n    for(i=0;i<n;i++)\n    {\n        p=1<<17;\n        j=i;\n        while(p>0)\n        {\n            if(j+p<n && v[i].m-v[j+p].m<d)\n                j+=p;\n            p/=2;\n        }\n        if(sum[j+1]-sum[i]>max)\n            max=sum[j+1]-sum[i];\n    }\n    cout << max;\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct{\n    int bani;\n    int pp;\n}prieteni;\n\nprieteni v[100000];\n\nint compare(const void*a,const void*b){\n    prieteni x=*(prieteni*)a;\n    prieteni y=*(prieteni*)b;\n    if(x.bani==y.bani)\n        return x.pp-y.pp;\n    return x.bani-y.bani;\n}\n\nint main()\n{\n    long long int n,k,i,f,l,sum,best;\n    scanf(\"%lld%lld\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld%lld\",&v[i].bani,&v[i].pp);\n    }\n    qsort(v,n,sizeof(prieteni),compare);\n    f=0;\n    l=0;\n    sum=v[0].pp;\n    best=sum;\n    while(f<n){\n        while(l<n-1 && v[l+1].bani-v[f].bani<k)\n        {\n            l++;\n            sum+=v[l].pp;\n        }\n        f++;\n        if(best<sum)\n            best=sum;\n        sum-=v[f-1].pp;\n    }\n    printf(\"%lld \",best);\n    return 0;\n}\n"}
{"similarity_score": 0.9146757679180887, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "d861eea267ee26db3072e81c4db42404", "bug_code_uid": "bcd62086ca93079cf2fb748f5bdd2dde", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "95f8e35d7c9b3a2d1d80648af0c7d5df", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\nint main()\n{\nint n,t,i;\nscanf(\"%d %d\",&n,&t);\nint a[1000];\nfor(i=1;i<n;i++) scanf(\"%d\",&a[i]);\nfor(i=1;i<n;){\n    i=i+a[i];\n    if(i==t){\n        printf(\"YES\");\n        break;\n    }\n        if(i==n-1)\n            printf(\"NO\");\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\nint main()\n{\nint n,t,i;\nscanf(\"%d %d\",&n,&t);\nint a[n-1];\nfor(i=1;i<n;i++) scanf(\"%d\",&a[i]);\nfor(i=1;i<n;){\n    i=i+a[i];\n    if(i==t){\n        printf(\"YES\");\n        break;\n    }\n        if(i>=n){\n            printf(\"NO\");\n            break;\n            }\n\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9902912621359223, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ff5d31bbf0abe84fce0d2994292d301e", "bug_code_uid": "e032a607531166b61994ff15f3016884", "src_uid": "168dbc4994529f5407a440b0c71086da", "apr_id": "d098931ca76f6e3bdd8849038805973c", "difficulty": 1200, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long int t[10000+1];\nint main ()\n{\n    long long int i,n,x;\n    scanf(\"%I64d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%I64d\",&x);\n        if(x%3==0){\n            t[i]=x+1;\n        }\n        else if(x%2==0){\n            t[i]=4*x+1;\n        }\n        else{\n            t[i]=2*x+1;\n        }\n\n    }\n    for(i=1;i<=n;i++)\n    {\n        printf(\"%I64d\\n\",t[i]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nlong long int t[10000+1];\nint main ()\n{\n    long long int i,n,x;\n    scanf(\"%I64d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%I64d\",&x);\n        if((x+1)%4==0){\n            t[i]=x+1;\n        }\n        else if(x%2==0){\n            t[i]=4*x+1;\n        }\n        else{\n            t[i]=2*x+1;\n        }\n\n    }\n    for(i=1;i<=n;i++)\n    {\n        printf(\"%I64d\\n\",t[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.38491547464239273, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "d98c835e2480cc9bbd94b39313ef81c1", "bug_code_uid": "ae533e6d5f24acbfb9302fb6ba4f6199", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "17dbfcd53def3fefa9a24fa0f06f9749", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long n, i, j, sum=0;\n    long *a, *p;\n\n    scanf(\"ld\", &n);\n\n    a = (long*)malloc(n*sizeof(long));\n    p = (long*)malloc(n*sizeof(long));\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%ld %ld\", &a[i], &p[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        printf(\"%ld %ld\", a[i], p[i]);\n    }\n    for(i=0; i<n; i++)\n    {\n        if(p[i]>=p[i+1])\n        {\n            sum = sum+(a[i]*p[i]);\n        }\n\n        else\n        {\n            for(j=i; j<n; j++)\n            {\n                if(p[j]<=p[j+1])\n                    sum = sum+(a[j]*p[i]);\n                else\n                {\n                    i = j;\n                    break;\n                }\n            }\n        }\n        printf(\"%ld\\n\", sum);\n    }\n    printf(\"%ld\\n\", sum);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    long n, *a, *p, i, sum=0, j;\n\n    scanf(\"%ld\", &n);\n\n    a = (long*)malloc(n*sizeof(long));\n    p = (long*)malloc(n*sizeof(long));\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%ld %ld\", &a[i], &p[i]);\n    }\n\n    for(i=0; i<n; i++)\n    {\n        if(p[i]>p[i+1])\n        {\n            sum = sum+(a[i]*p[i]);\n        }\n\n        else\n        {\n            for(j=i; j<n; j++)\n            {\n                if(p[i]<=p[j])\n                {\n                    sum = sum+(a[j]*p[i]);\n                }\n\n                else\n                {\n                    break;\n                }\n            }\n            i = j-1;\n        }\n    }\n    printf(\"%ld\\n\", sum);\n\n    return 0;\n}"}
{"similarity_score": 0.9677777777777777, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "857aae9a8ad1af9fc31403a15f9fe4e7", "bug_code_uid": "0b40819017d557856824f512ddb946b6", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "fda0f6be50d225c3b34c004affecb159", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n    long long int n,q;\n    scanf(\"%lld %lld\",&n,&q);\n    long long int A[n],B[n];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&A[i]);\n    }\n\n    long long int t[q],x[q];\n    for(int i=0;i<q;i++)\n    {\n        scanf(\"%lld %lld\",&t[i],&x[i]);\n    }\n    long long int oneVal=0;\n    for(int i=0;i<n;i++)\n    {\n        if(A[i]==1)\n        {\n            oneVal++;\n        }\n    }\n\n    for(int i=0;i<q;i++)\n    {\n        if(t[i]==1)\n        {\n            if(A[x[i]-1]==0)\n            {\n                oneVal++;\n            }\n            else\n            {\n                oneVal--;\n            }\n        }\n        if(t[i]==2)\n        {\n            if(x[i]<=oneVal)\n            {\n                printf(\"1\\n\");\n            }\n            else\n            {\n                printf(\"0\\n\");\n            }\n        }\n    }\n\n\n\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n\n\nint main()\n{\n    long long int n,q;\n    scanf(\"%lld %lld\",&n,&q);\n    long long int A[n],B[n];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&A[i]);\n    }\n\n    long long int t[q],x[q];\n    for(int i=0;i<q;i++)\n    {\n        scanf(\"%lld %lld\",&t[i],&x[i]);\n    }\n    long long int oneVal=0;\n    for(int i=0;i<n;i++)\n    {\n        if(A[i]==1)\n        {\n            oneVal++;\n        }\n    }\n\n    for(int i=0;i<q;i++)\n    {\n        if(t[i]==1)\n        {\n            if(A[x[i]-1]==0)\n            {\n                oneVal++;\n                A[x[i]-1]=1;\n            }\n            else\n            {\n                oneVal--;\n                A[x[i]-1]=0;\n            }\n        }\n        if(t[i]==2)\n        {\n            if(x[i]<=oneVal)\n            {\n                printf(\"1\\n\");\n            }\n            else\n            {\n                printf(\"0\\n\");\n            }\n        }\n    }\n\n\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.900883218842002, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a6c210a91b7a45a3b62a6205620977b2", "bug_code_uid": "2b8d8fd53d1977589318e20af3950c4b", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "b771dadf95a74956a596ec140e3a8470", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\n\n\nint  prime(int n)\n{\n    int rt,i;\n    if(n<2)\n        return 0;\n    else if(n==2)\n        return 1;\n\n\n        for(i=2;i<n;i++)\n        {\n            if(n%i == 0)\n                return 0;\n        }\n        return 1;\n}\nint main()\n{\n    int n,x,y;\n    scanf(\"%d\",&n);\n\n    for(x=4;x<n;x++)\n        {\n        y=n-x;\n        if(prime(x)==0 && prime(y)==0 )\n            printf(\"%d %d\",x,y);\n    break;\n    }\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\n\n\nint  prime(int n)\n{\n    int rt,i;\n    if(n<2)\n        return 0;\n    else if(n==2)\n        return 1;\n\n\n        for(i=2;i<n;i++)\n        {\n            if(n%i == 0)\n                return 0;\n        }\n        return 1;\n}\nint main()\n{\n    int n,x,y;\n    scanf(\"%d\",&n);\n\n    for(x=4;x<n;x++)\n        {\n        y=n-x;\n        if(prime(x)==0 && prime(y)==0 )\n                        {\n                                printf(\"%d %d\",x,y);\n                                break;\n                        }\n\n    }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9595687331536388, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "ac4c8bf3b86fdd073cbc1a120dd177c1", "bug_code_uid": "38f53043725899ad1416eae87631c0ea", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "172977e2ad3d4a99455b57c6c4d79825", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,x,num,max=0;\n\tscanf(\"%d%d\",&n,&x);\n\tint i=0,A[100002]={0};\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d\",&num);\n\t\tA[num]+=1;\n\t\tif (num>max)\n\t\t\tmax=num;\n\t}\n\tlong long sum=0;\n\tfor(i=0;i<=max;++i)\n\t{if (A[i]!=0)\n\n\t\t{\n\t\twhile(A[i]!=0)\n\t\t{\n\t\t\tsum=sum+(x*i);\n\t\t\tif (x>1)\n\t\t\t\tx--;\n\t\t\tA[i]--;\n\t\t}\n\t\t\n\t\t}\n\t}\n\tprintf(\"%lld\",sum);\n\treturn 0;\n}\n\t \n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long n,x,num,max=0;\n\tscanf(\"%lld%lld\",&n,&x);\n\tlong long i=0,A[100002]={0};\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%lld\",&num);\n\t\tA[num]+=1;\n\t\tif (num>max)\n\t\t\tmax=num;\n\t}\n\tlong long sum=0;\n\tfor(i=0;i<=max;++i)\n\t{if (A[i]!=0)\n\n\t\t{\n\t\twhile(A[i]!=0)\n\t\t{\n\t\t\tsum=sum+(x*i);\n\t\t\tif (x>1)\n\t\t\t\tx--;\n\t\t\tA[i]--;\n\t\t}\n\t\t\n\t\t}\n\t}\n\tprintf(\"%lld\",sum);\n\treturn 0;\n}\n\t \n"}
{"similarity_score": 0.9975308641975309, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2a52fdc48f2d9c04580cc9159dce3f0f", "bug_code_uid": "2f020a6123dfa53b14823b5321bc2b75", "src_uid": "1539fc8ef4f4cdcd1e14faf4f1b4ee8b", "apr_id": "ee2eed877bf274466cbf504f2dcb7d18", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\n\nint main()\n{\nint t,n;\nscanf(\"%d\",&t);\nwhile(t--)\n{\nscanf(\"%d\",&n);\nchar str[n+10];\nscanf(\"%s\",str);\nint a[101],count=0,max=0;\nfor(int i=0;i<n;i++)\n\nif(str[i]=='A')\n{\na[count++]=i;\n}\n//printf(\"%d\\n\",a[count-1]);\nfor(int i=1;i<count;i++)\nif(a[i]-a[i-1]>max)\nmax=a[i]-a[i-1];\n//printf(\"%d %d\\n\",max,count);\nif((n-a[count-1]-1)>max)\nmax=n-a[count-1]-1;\nprintf(\"%d\\n\",max);\n}\nreturn 0;\n}\n", "fixed": "# include <stdio.h>\n\nint main()\n{\nint t,n;\nscanf(\"%d\",&t);\nwhile(t--)\n{\nscanf(\"%d\",&n);\nchar str[n+10];\nscanf(\"%s\",str);\nint a[101],count=0,max=0;\nfor(int i=0;i<n;i++)\n\nif(str[i]=='A')\n{\na[count++]=i;\n}\n//printf(\"%d\\n\",a[count-1]);\nfor(int i=1;i<count;i++)\nif(a[i]-a[i-1]>max)\nmax=a[i]-a[i-1]-1;\n//printf(\"%d %d\\n\",max,count);\nif((n-a[count-1]-1)>max)\nmax=n-a[count-1]-1;\nprintf(\"%d\\n\",max);\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9568, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "640b177cd6d04c551156cb326a534f4d", "bug_code_uid": "b641f1b40d5599967e9881dd4fd467a2", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "73f6ef3ce81d78474e897fbd9d59a552", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n    char s[200001],t[200001];\n    scanf(\"%s\",s);\n    scanf(\"%s\",t);\n    int k=0;\n    while(s[k]!=0)  k++;\n    int j=0;\n    while(t[j]!=0)  j++;\n    int out=k+j;\n    while(s[k-1]==t[j-1]){\n        k--; j--;\n        out-=2;\n    }\n    printf(\"%d\",out);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(void){\n    char s[200001],t[200001];\n    scanf(\"%s\",s);\n    scanf(\"%s\",t);\n    int k=0;\n    while(s[k]!=0)  k++;\n    int j=0;\n    while(t[j]!=0)  j++;\n    int out=k+j;\n    while(s[k-1]==t[j-1]){\n        k--; j--;\n        out-=2;\n        if(out==0)  break;\n    }\n    printf(\"%d\",out);\n    return 0;\n}"}
{"similarity_score": 0.4757213230119634, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b9302bdafbeaa411f8bd970268b98480", "bug_code_uid": "45a37a548b3acafc1f6a69e3233a3dec", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "43ffd73f1bc5875dc82aa4cf1bb91bb5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i;\nchar    string1[100]=\"I love it\";\n char   string2[100]=\"I hate it\";\n char   string3[100]=\"I hate that\";\n char   string4[100]=\"I love that\";\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        if(i==n)\n        {\n           if(i&1)\n                {\n                   puts(string2);\n                }\n                if(!(i&1))\n                {\n                    puts(string1);\n                }\n\n        }\n       if(i!=n)\n        {\n            if(i&1)\n            {\n                puts(string3);\n            }\n            if(!(i&1))\n            {\n                puts(string4);\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i;\nchar    string1[100]=\"I love it\";\n char   string2[100]=\"I hate it\";\n char   string3[100]=\"I hate that\";\n char   string4[100]=\"I love that\";\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        if(i==n)\n        {\n           if(i&1)\n                {\n                   printf(\"%s \",string2);\n                }\n                if(!(i&1))\n                {\n                    printf(\"%s \",string1);\n                }\n\n        }\n       if(i!=n)\n        {\n            if(i&1)\n            {\n                printf(\"%s \",string3);\n            }\n            if(!(i&1))\n            {\n               printf(\"%s \",string4);\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5298245614035088, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a9916e74bddeda16ac10a3e438a28d8b", "bug_code_uid": "8b598291407377c25974cb7045b8c817", "src_uid": "48f3ff32a11770f3b168d6e15c0df813", "apr_id": "3706ad6005f827074d21cdc5975e65a8", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int m,n,tipo,v,x=0,i;\n    scanf(\"%d%d\",&n,&m);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&tipo);\n        switch(tipo){\n        case 1:\n            scanf(\"%d%d\",&v,&x);\n            a[v-1]=x;\n        break;\n        case 2:\n            scanf(\"%d\",&x);\n            for(i=0;i<n;i++){\n                a[i]+=x;\n            }\n        break;\n        case 3:\n            scanf(\"%d\",&v);\n            printf(\"%d\",a[v-1]);\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int m,n,tipo,v,x=0,i,k,suma=0;\n\n    scanf(\"%d%d\",&n,&m);\n    int c[n];\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        c[i]=0;\n    }\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&tipo);\n        switch(tipo){\n        case 1:\n            scanf(\"%d%d\",&v,&x);\n            a[v-1]=x;\n            c[v-1]=suma*(-1);\n        break;\n        case 2:\n            scanf(\"%d\",&x);\n            suma+=x;\n        break;\n        case 3:\n            scanf(\"%d\",&v);\n            printf(\"%d\\n\",a[v-1]+c[v-1]+suma);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9914627205463858, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c29f6e647523fb815cb2ac8bbbbb8cc8", "bug_code_uid": "55c1fabddc1a51973bd75134eb457046", "src_uid": "3969ba3e3eb55a896663d2c5a5bc4a84", "apr_id": "4d6b0bc96880f7840db2d3e5bc3115ef", "difficulty": 1300, "tags": ["implementation", "sortings", "expression parsing", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[110];\n    int i=2,j,n,s;\n    char c;\n    scanf(\"%d\",&a[1]);\n    while(scanf(\"%c\",&c)!=EOF)\n    {\n        scanf(\"%d\",&n);\n        for(j=1; j<i; j++)\n            if(a[j]==n)\n                break;\n        if(j==i)\n            a[i++]=n;\n    }\n    n=--i;\n    for(i=n; i>1; i--)\n        for(j=1; j<i; j++)\n            if(a[i]<a[j])\n            {\n                s=a[i];\n                a[i]=a[j];\n                a[j]=s;\n            }\n     for(i=1;i<=n;i++)\n     {\n         if(i<=n)\n         if(a[i]+1==a[i+1])\n         {\n             j=i;\n             while(i<n&&a[i]+1==a[i+1])\n                i++;\n              if(j!=1)\n                    printf(\",\");\n             printf(\"%d-%d\",a[j],a[i]);\n         }\n         else\n         {\n             if(i!=1) printf(\",\");\n             printf(\"%d\",a[i]);\n         }\n     }\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[110];\n    int i=2,j,n,s;\n    char c;\n    scanf(\"%d\",&a[1]);\n    while(scanf(\"%c\",&c)!=EOF)\n    {\n        if(scanf(\"%d\",&n)==EOF) break;\n        for(j=1; j<i; j++)\n            if(a[j]==n)\n                break;\n        if(j==i)\n            a[i++]=n;\n    }\n    n=--i;\n    for(i=n; i>1; i--)\n        for(j=1; j<i; j++)\n            if(a[i]<a[j])\n            {\n                s=a[i];\n                a[i]=a[j];\n                a[j]=s;\n            }\n     for(i=1;i<=n;i++)\n     {\n         if(i<=n)\n         if(a[i]+1==a[i+1])\n         {\n             j=i;\n             while(i<n&&a[i]+1==a[i+1])\n                i++;\n              if(j!=1)\n                    printf(\",\");\n             printf(\"%d-%d\",a[j],a[i]);\n         }\n         else\n         {\n             if(i!=1) printf(\",\");\n             printf(\"%d\",a[i]);\n         }\n     }\n     return 0;\n}\n"}
{"similarity_score": 0.9920634920634921, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2940df4bcf41a37ed969cc7c1edc9f06", "bug_code_uid": "754ed5a8b107d4ce6f5b8fa81d9869db", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "8d234dc04c74b1da5d0adc3c00376587", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(int argc, char const *argv[])\n{\n    char a[100000],b[100000];\n    int l1,l2,i,r,c=0;\n        gets(a);\n        gets(b);\n        l1=strlen(a);\n        l2= strlen(b);\n        if(a[l1-2]!=b[l2-2]) r=l1+l2;\n        else\n        {\n            c++;\n            for(i=3;l1-i>=0&&l2-i>=0;i++)\n            {\n                \n                if (a[l1-i]==b[l2-i]) {\n                    c++;\n                }\n                else\n                {\n                    break;\n\n                }      \n            }\n            r=l1+l2-(2*c);\n        }\n        printf(\"%d\\n\",r-2);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(int argc, char const *argv[])\n{\n    char a[1000001],b[1000001];\n    int l1,l2,i,r,c=0;\n        gets(a);\n        gets(b);\n        l1=strlen(a);\n        l2= strlen(b);\n        if(a[l1-1]!=b[l2-1]) r=l1+l2;\n        else\n        {\n            c++;\n            for(i=2;l1-i>=0&&l2-i>=0;i++)\n            {\n                \n                if (a[l1-i]==b[l2-i]) {\n                    c++;\n                }\n                else\n                {\n                    break;\n\n                }      \n            }\n            r=l1+l2-(2*c);\n        }\n        printf(\"%d\\n\",r);\n    return 0;\n}\n"}
{"similarity_score": 0.997920997920998, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d3419dbb103735da344ae1b7a7da6b30", "bug_code_uid": "cd8adfd3290a4209af88258b9814aaed", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "1a2a4aa3d51c1758aa99d216d84ca21e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\t//code'\n\tint n,height,a,count =0;\n\tscanf(\"%d%d\",&n,&height);\n\tfor(int i=0;i<n;i++){\n\t    scanf(\"%d\",a);\n\t    if(a>height){\n\t        count += 2;\n\t    }\n\t    else count++;\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\t//code'\n\tint n,height,a,count =0;\n\tscanf(\"%d%d\",&n,&height);\n\tfor(int i=0;i<n;i++){\n\t    scanf(\"%d\",&a);\n\t    if(a>height){\n\t        count += 2;\n\t    }\n\t    else count++;\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}"}
{"similarity_score": 0.9988009592326139, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9924dce7d7504db4ae5ebbb92fc23f90", "bug_code_uid": "60b5b2ce8438d24c44ce6e132ec437b4", "src_uid": "842a0587147591ea38a20638f3a7960d", "apr_id": "bd75e57f1f7671de5d2c6846219bdb3e", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    \r\n    while (t--)\r\n    {\r\n        int n = 0, size = 0;\r\n        scanf(\"%d%d\", &n, &size);\r\n        \r\n        int s_size = 2 * (size - 3);\r\n        char s[s_size + 1];\r\n        for (size_t i = 0; i < s_size; ++i)\r\n            s[i] = i % 2 ? ' ' : '1';\r\n        s[s_size] = '\\0';\r\n        \r\n        int a = n - size + 3;\r\n        \r\n        if ( !(a % 8) )\r\n            printf(\"%d %d %d\", \r\n                a / 2, a / 4, a / 4);\r\n                \r\n        else if ( a % 2 )\r\n            printf(\"%d %d %d\", \r\n                1, (a - 1) / 2, (a - 1) / 2);\r\n                \r\n        else\r\n            printf(\"%d %d %d\",\r\n                2, (a - 2) / 2, (a - 2) / 2);\r\n       \r\n        printf(\" %s\", s);\r\n        printf(\"\\n\");\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    \r\n    while (t--)\r\n    {\r\n        int n = 0, size = 0;\r\n        scanf(\"%d%d\", &n, &size);\r\n        \r\n        int s_size = 2 * (size - 3);\r\n        char s[s_size + 1];\r\n        for (size_t i = 0; i < s_size; ++i)\r\n            s[i] = i % 2 ? ' ' : '1';\r\n        s[s_size] = '\\0';\r\n        \r\n        int a = n - size + 3;\r\n        \r\n        if ( !(a % 4) )\r\n            printf(\"%d %d %d\", \r\n                a / 2, a / 4, a / 4);\r\n                \r\n        else if ( a % 2 )\r\n            printf(\"%d %d %d\", \r\n                1, (a - 1) / 2, (a - 1) / 2);\r\n                \r\n        else\r\n            printf(\"%d %d %d\",\r\n                2, (a - 2) / 2, (a - 2) / 2);\r\n       \r\n        printf(\" %s\", s);\r\n        printf(\"\\n\");\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9990539262062441, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "26c35b96c439706f7aff09f978e38ab0", "bug_code_uid": "5eae156af1c69e294ae5a91ca1be6b60", "src_uid": "b3108315889607dabcd3112bcfe3fb54", "apr_id": "1b5016a855fcdcf37c29f8ffbdf6349c", "difficulty": 1700, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <string.h>\n#include <math.h>\n#include <float.h>\n\n/*---*/\n\n#define FOR(i, b, e)\tfor(i = (b); i <= (e); i++)\n#define FORL(i, b, e)\tfor(i = (b); i < (e); i++)\n#define FORD(i, e, b)\tfor(i = (e); i >= (b); i--)\n#define FOR0(i, e)\t\tFORL(i, 0, e)\n\n#define min(a, b)\t\t(((a) < (b)) ? (a) : (b))\n#define max(a, b)\t\t(((a) > (b)) ? (a) : (b))\n#define MINA(a, b)\t\tdo { if ((a) > (b)) (a) = (b); } while(0)\n#define MAXA(a, b)\t\tdo { if ((a) < (b)) (a) = (b); } while(0)\n#define MINA2(a, b, i, j)\t\tdo { if ((a) > (b)) { (a) = (b); (i) = (j); } } while(0)\n#define MAXA2(a, b, i, j)\t\tdo { if ((a) < (b)) { (a) = (b); (i) = (j); } } while(0)\n\n#define INT int\n\n/*---*/\n\nint main()\n{\n\tint n, i;\n#ifndef ONLINE_JUDGE\nchar s[1024];\nint c;\n#endif\n#ifndef ONLINE_JUDGE\nwhile((c = getchar()) != EOF) {\n\tungetc(c, stdin);\n#endif\n\tscanf(\"%d\", &n);\n\tif (n == 2)\n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"6\\n10\\n15\");\n\tFOR(i, 4, n)\n\t\tprintf(\"%d\\n\", i * 6);\n#ifndef ONLINE_JUDGE\n\tprintf(\"\\n\");\n\tgets(s);\n}\n#endif\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <string.h>\n#include <math.h>\n#include <float.h>\n\n/*---*/\n\n#define FOR(i, b, e)\tfor(i = (b); i <= (e); i++)\n#define FORL(i, b, e)\tfor(i = (b); i < (e); i++)\n#define FORD(i, e, b)\tfor(i = (e); i >= (b); i--)\n#define FOR0(i, e)\t\tFORL(i, 0, e)\n\n#define min(a, b)\t\t(((a) < (b)) ? (a) : (b))\n#define max(a, b)\t\t(((a) > (b)) ? (a) : (b))\n#define MINA(a, b)\t\tdo { if ((a) > (b)) (a) = (b); } while(0)\n#define MAXA(a, b)\t\tdo { if ((a) < (b)) (a) = (b); } while(0)\n#define MINA2(a, b, i, j)\t\tdo { if ((a) > (b)) { (a) = (b); (i) = (j); } } while(0)\n#define MAXA2(a, b, i, j)\t\tdo { if ((a) < (b)) { (a) = (b); (i) = (j); } } while(0)\n\n#define INT int\n\n/*---*/\n\nint main()\n{\n\tint n, i;\n#ifndef ONLINE_JUDGE\nchar s[1024];\nint c;\n#endif\n#ifndef ONLINE_JUDGE\nwhile((c = getchar()) != EOF) {\n\tungetc(c, stdin);\n#endif\n\tscanf(\"%d\", &n);\n\tif (n == 2)\n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"6\\n10\\n15\\n\");\n\tFOR(i, 4, n)\n\t\tprintf(\"%d\\n\", i * 6);\n#ifndef ONLINE_JUDGE\n\tprintf(\"\\n\");\n\tgets(s);\n}\n#endif\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7418546365914787, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "cf3e4b752fef5e3da04ea8aa22928352", "bug_code_uid": "2ed03fa955e4669c55c17124f9a01016", "src_uid": "b1e09df7c47dbd04992e64826337c28a", "apr_id": "840f0f7c5cd7ca2b8e5f20595ddb44dc", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1002],b[1002];\n\tshort int c[28],i,len1,len2,sum;\n\twhile(scanf(\"%s%s\",a,b)!=EOF)\n\t{\n\t\tlen1=strlen(a);\n\t\tlen2=strlen(b);\n\t\tfor(i=0;i<26;i++)c[i]=0;\n\t\tfor(i=0;i<len1;i++)c[a[i]-'a']++;\n\t\tfor(i=0;i<len2;i++)c[b[i]-'a']--;\n\t\tfor(i=0,sum=len2;i<26;i++)if(c[i]<0)sum+=c[i];\n\t\tif(sum<=0)printf(\"-1\\n\");\n\t\telse printf(\"%d\\n\",sum);\n\t}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[1002],b[1002];\n\tshort int c[28],d[28],i,len1,len2,sum;\n\twhile(scanf(\"%s%s\",a,b)!=EOF)\n\t{\n\t\tlen1=strlen(a);\n\t\tlen2=strlen(b);\n\t\tfor(i=0;i<26;i++)c[i]=d[i]=0;\n\t\tfor(i=0;i<len1;i++)c[a[i]-'a']++;\n\t\tfor(i=0;i<len2;i++)d[b[i]-'a']++;\n\t\tfor(i=0,sum=0;i<26;i++)if(c[i]==0 && d[i]){sum=-1;break;}else sum+=c[i]>d[i]?d[i]:c[i];\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9896640826873385, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "94acca6c043b1442fcd7053087bb74d8", "bug_code_uid": "57d0681dff4aff456ad841c415bddf52", "src_uid": "bf115b24d85a0581e709c012793b248b", "apr_id": "57007f5f0e04ae89bfbe301ecb176bc6", "difficulty": 1600, "tags": ["combinatorics", "number theory", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tlong long x,n,m,prod=1;\n\tscanf(\"%lld\",&n);\n\tscanf(\"%lld\",&m);\n\tlong long a[n];\n\tfor(int i=0;i<n;i++)\n\t    scanf(\"%d\",&a[i]);\n\tif(n>m)\n\t    printf(\"0\");\n\telse\n\t{\n\t    for(int i=0;i<n;i++)\n\t    {\n\t\t    for(int j=i+1;j<n;j++)\n\t\t    {\n\t\t\t    prod=prod*abs(a[i]-a[j]);\n\t\t\t    \n\t\t    }\n\t    }\n\t    printf(\"%lld\",prod%m);\n\t}\n\treturn 0;\n\t\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tlong long x,n,m,prod=1;\n\tscanf(\"%lld\",&n);\n\tscanf(\"%lld\",&m);\n\tlong long a[n];\n\tfor(int i=0;i<n;i++)\n\t    scanf(\"%d\",&a[i]);\n\tif(n>m)\n\t    printf(\"0\");\n\telse\n\t{\n\t    for(int i=0;i<n;i++)\n\t    {\n\t\t    for(int j=i+1;j<n;j++)\n\t\t    {\n\t\t\t    prod=prod*abs(a[i]-a[j]);\n\t\t\t    prod%=m;\n\t\t    }\n\t    }\n\t    printf(\"%lld\",prod%m);\n\t}\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.2538569424964937, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "c60bcae5224339d81338d0fbfb030080", "bug_code_uid": "80c9bca6f6dd16123d778b7989b04036", "src_uid": "ab6fefc6c15d4647bc601f1f9db21d3f", "apr_id": "a12fb8768a19fc399171b75d97d00b04", "difficulty": 900, "tags": ["dfs and similar", "dp", "greedy", "math", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\ntypedef long long ll;\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tll n;\r\n\tint cnt = 0;\r\n\twhile(t--){\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tcnt = 0;\r\n\t\tif(n%25 == 0) printf(\"0\\n\");\r\n\t\telse{\r\n\t\t\twhile(n%25 != 0){\r\n\t\t\t\tif((n%25)%10 == 0 || (n%25)%5 == 0 && n%25 >= 10) n = (n - n%100 + n%10*10)/10;\r\n\t\t\t\telse if(n%25 < 10) n /= 10;\r\n\t\t\t\telse if(n%25 < 25) n /= 100,cnt++;\r\n\t\t\t\tcnt++;\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\\n\",cnt);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\ntypedef long long ll;\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tll n;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tll m = n;\r\n\t\tint ch1 = 0,ch2 = 5;\r\n\t\tint min = 0x7fffffff;\r\n\t\tint l = 0;\r\n\t\tint sign = 0;\r\n\t\twhile(n){\r\n\t\t\tif(n%10 == ch1){//00\r\n//\t\t\t\tch1 = '0';\r\n\t\t\t\tsign++;\r\n\t\t\t}\r\n\t\t\telse l++;\r\n\t\t\tn /= 10;\r\n\t\t\tif(sign == 2) break;\r\n\t\t}\r\n\t\tmin = min<l?min:l;\r\n\t\tn = m;\r\n\t\tsign = 0;\r\n\t\tl = 0;\r\n\t\twhile(n){\r\n\t\t\tif(n%10 == ch1){//50\r\n\t\t\t\tch1 = 5;\r\n\t\t\t\tsign++;\r\n\t\t\t}\r\n\t\t\telse l++;\r\n\t\t\tn /= 10;\r\n\t\t\tif(sign == 2) break;\r\n\t\t}\r\n\t\tmin = min<l?min:l;\r\n\t\tn = m;\r\n\t\tsign = 0;\r\n\t\tl = 0;\r\n\t\twhile(n){\r\n\t\t\tif(n%10 == ch2){//75\r\n\t\t\t\tch2 = 7;\r\n\t\t\t\tsign++;\r\n\t\t\t}\r\n\t\t\telse l++;\r\n\t\t\tn /= 10;\r\n\t\t\tif(sign == 2) break;\r\n\t\t}\r\n\t\tmin = min<l?min:l;\r\n\t\tn = m;\r\n\t\tsign = 0;\r\n\t\tl = 0;\r\n\t\tch2 = 5;\r\n\t\twhile(n){\r\n\t\t\tif(n%10 == ch2){//25\r\n\t\t\t\tch2 = 2;\r\n\t\t\t\tsign++;\r\n\t\t\t}\r\n\t\t\telse l++;\r\n\t\t\tn /= 10;\r\n\t\t\tif(sign == 2) break;\r\n\t\t}\r\n\t\tmin = min<l?min:l;\r\n\t\tprintf(\"%d\\n\",min);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8292682926829268, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "63abdc032c91fd5e9a293f7b3ae40c09", "bug_code_uid": "5f2912e32a29e3a2b85210a666df3b45", "src_uid": "7bdb68ab0752f8df94b4d5c7df759dfb", "apr_id": "6b047360cf50ed99b6b9cb14cf0df0fd", "difficulty": 1300, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define MAX 5002\n\n\nint main()\n{\n\tint n, k, i, j, x;\n\tint a[MAX];\n\t\n\tscanf(\"%d%d\", &n, &k);\n\ta[0] = 0;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\ta[i] = a[i - 1] + x;\n\t}\n\tdouble sum, max = 0;\n\tfor (i = 1; i <= n-k+1; i++)\n\t{\n\t\tfor (j = k + i - 1; j <= n; j++)\n\t\t{\n\t\t\tmax = max >\t((a[j]-a[i-1])/(j-i+1)) ? max : ((a[j] - a[i - 1]) / (j - i + 1));\n\t\t}\n\t}\n\tprintf(\"%.8lf\", max);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define MAX 5002\n\n\nint main()\n{\n\tint n, k, i, j, x;\n\tdouble a[MAX];\n\t\n\tscanf(\"%d%d\", &n, &k);\n\ta[0] = 0;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\ta[i] = a[i - 1] + x;\n\t}\n\tdouble sum, max = 0;\n\tfor (i = 1; i <= n-k+1; i++)\n\t{\n\t\tfor (j = k + i - 1; j <= n; j++)\n\t\t{\n\t\t\tsum = ((a[j] - a[i - 1]) / (j - i + 1));\n\t\t\tif (sum > max)\n\t\t\t\tmax = sum;\n\t\t}\n\t}\n\tprintf(\"%.8lf\", max);\n\n\treturn 0;\n}"}
{"similarity_score": 0.48412698412698413, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "f36c3941bf51d212bdfde82ee2b7907b", "bug_code_uid": "704835efcb4b7b47a7be4909a4c4012a", "src_uid": "bc375e27bd52f413216aaecc674366f8", "apr_id": "8de049b50255de26c1f46e248c69beb9", "difficulty": 1300, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100001];\n    scanf(\"%s\",a);\n    int l=strlen(a);\n    int i,j;\n    int max=-1;\n    int pos=0;\n    int c=0;\n    for(i=0;i<l;i++)\n    {\n        int d=a[i]-48;\n        if(d%2==0)\n        {\n            c=1;\n            if(d>=max)\n            {\n            max=d;\n            pos=i;\n            }\n        }\n    }\n    if(c==1){\n    char temp;\n    temp=a[pos];\n    a[pos]=a[l-1];\n    a[l-1]=temp;\n    printf(\"%s\\n\",a);\n    }\n    else\n    printf(\"-1\\n\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100001];\n    scanf(\"%s\",a);\n    int l=strlen(a);\n    int i,j;j=0;\n    int max=-1;\n    int pos=0;\n    int c=0;int co=0;\n    int d=a[l-1]-48;\n    for(i=0;i<l-1;i++)\n    {\n        int e=(int)(a[i]-48);\n        if(e%2==0)\n        {\n            c=1;\n            if(e<d)\n            {\n                pos=i;\n                co=1;\n                break;\n            }\n        }\n    }\n    if(c==1){\n    char temp;\n        if(co==1)\n        {\n            temp=a[pos];\n            a[pos]=a[l-1];\n            a[l-1]=temp;\n        }\n        else\n        {\n            for(i=l-2;i>=0;i--)\n            {\n                int e=(int)(a[i]-48);\n                if(e>d&&(e%2==0))\n                {\n                    pos=i;\n                    break;\n                }\n            }\n            temp=a[pos];\n            a[pos]=a[l-1];\n            a[l-1]=temp;\n        }\n        printf(\"%s\\n\",a);\n    }\n    else\n    printf(\"-1\\n\");\n    return 0;\n}"}
{"similarity_score": 0.24549918166939444, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "2abf95ba3a3382da1aaed233e9562285", "bug_code_uid": "08e39da7a9ba597b6d5690155c85e179", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "20412e5b02b99ecd7b5dafa0b307cf61", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n\tint i;\n\tint a;\n\tint b;\n\tint c=0;\n\tint d;\n\tint e;\n\tint f;\n\tscnaf(\"%d\", &a);\n\tfor (i=0;i<a;i++)\n\t{\n\t  scanf(\"%d\", &b);\n\t  c=c+b;\n\t}\n\td=c/4;\n\te=c%4;\n\tif(e!=0)\n\t{\n\t  d+1;\n\t} \n\tprintf(\"%d\", d);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n\tint s;\n\tint c[5]={0};\n    scanf(\"%d\", &n);\n    while (n--)\n    {\n      scanf(\"%d\", &s);\n      c[s]=c[s]+1;\n    }\n    int t=c[4]+c[3]+c[2]/2;\n    c[1]=c[1]-c[3];\n    if (c[2]%2==1)\n    {\n      t=t+1;\n      c[1]=c[1]-2;\n    }\n    if(c[1]>0)\n    {\n      t=t+(c[1]+3)/4;\n    }\n    printf(\"%d\\n\", t);\n    return 0;\n}\n"}
{"similarity_score": 0.9080348499515973, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "afcde8e5ffcd376bba4befdc4aee58fe", "bug_code_uid": "63933bb487ac24ba9c1dc917e7540535", "src_uid": "d20cc952cdf3a99e7d980a0270c49f78", "apr_id": "581800ebecdd238b1338c986b74ff435", "difficulty": 1800, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n  int n,i,j;\n  scanf(\"%d\",&n);\n  int arr[n];\n  for(i=0;i<n;i++){\n    scanf(\"%d\",&arr[i]);\n  }\n  int m;\n  scanf(\"%d\",&m);\n\n  while(m--){\n\n  int x=0;\n   for(j=n-1;j>=1;j--){\n    for(i=j-1;i>=0;i--){\n      if(arr[i]>arr[j])\n           x++;\n\n    }\n   }\n\n   int l,r,l1,r1,temp;\n   scanf(\"%d%d\",&l1,&r1);\n   \n   int len=r1-l1+1;\n   x=x+(len)*(len-1)/2;\n\n  \n   if(x%2)\n    printf(\"odd\\n\");\n  else\n    printf(\"even\\n\");\n\n  }\n\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n  int n,i,j;\n  scanf(\"%d\",&n);\n  int arr[n];\n  for(i=0;i<n;i++){\n    scanf(\"%d\",&arr[i]);\n  }\n  int m;\n  scanf(\"%d\",&m);\n\n  int x=0;\n   for(j=n-1;j>=1;j--){\n    for(i=j-1;i>=0;i--){\n      if(arr[i]>arr[j])\n           x++;\n\n    }\n   }\n\n  while(m--){\n  \n   int t=x;\n   //printf(\"[%d  %d]\",t,x);\n   int l,r,l1,r1,temp;\n   scanf(\"%d%d\",&l1,&r1);\n   \n   int len=r1-l1+1;\n   x=x+(len)*(len-1)/2;\n  // printf(\"[%d]\",x);\n  \n   if(x%2)\n    printf(\"odd\\n\");\n  else\n    printf(\"even\\n\");\n\n  }\n\n  return 0;\n}"}
{"similarity_score": 0.5611510791366906, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "1300c8c93a29d43c6bd9805f5474348b", "bug_code_uid": "0d1adc3247a148aa8d1810a99a058bc7", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "5f10c2a5fdd48b46b97e447becf1ca19", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid *sort(int a[],int n){\n\tint c,d,swap;\n\tfor (c = 0 ; c < ( n - 1 ); c++)\n  \t{\n    \tfor (d = 0 ; d < n - c - 1; d++)\n    \t{\n      \t\tif ( a[d] > a[d+1]) /* For decreasing order use < */\n      \t\t{\n        \tswap       = a[d];\n        \ta[d]   = a[d+1];\n        \ta[d+1] = swap;\n      \t\t}\n    \t}\n  \t}\n  \treturn;\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tsort(a,n);\n\tint sum=0,cnt=0;\n\tint t;\n\tfor(t=0;t<n;t++){\n\t\tif(sum <= a[t] ){\n\t\t\tcnt = cnt +1;\n\t\t}\n\t\tsum = sum + a[t];\n\t}\n\t// for(i=0;i<n;i++){\n\t// \tprintf(\"%d \",a[i]);\n\t// }\n\tprintf(\"%d\\n\",cnt);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n// void *sort(int a[],int n){\n// \tint c,d,swap;\n// \tfor (c = 0 ; c < ( n - 1 ); c++)\n//   \t{\n//     \tfor (d = 0 ; d < n - c - 1; d++)\n//     \t{\n//       \t\tif ( a[d] > a[d+1])  // For decreasing order use < \n//       \t\t{\n//         \tswap       = a[d];\n//         \ta[d]   = a[d+1];\n//         \ta[d+1] = swap;\n//       \t\t}\n//     \t}\n//   \t}\n//   \treturn;\n// }\nint comp(const void * A, const void * B)\n{\n\t        return ( *(int*)A - *(int*)B );\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint i,a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t//sort(a,n);\n\tqsort (a,n,sizeof(int), comp);\n\tint sum=0,cnt=0;\n\tint t;\n\tfor(t=0;t<n;t++){\n\t\tif(sum <= a[t] ){\n\t\t\tcnt = cnt +1;\n\t\t\tsum = sum + a[t];\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt);\n\treturn 0;\n}"}
{"similarity_score": 0.6788990825688074, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "86edb93f3442b9191bbbd302ed34ec3e", "bug_code_uid": "15aa3a02354b495d56b8e1deb480ac7f", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "386fc288a8adcaaf3d9844fdce6679df", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tfloat x;\n\t\tint s=1,p=1;\n\t\twhile(n>0)\n\t\t{\n\t\t\tx=fn/s;\n\t\t\tint t= x;\n\t\t\tif (x==t)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",t);\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\tp=p*2;\n\t\t\t\ts= s+ p;\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\n\t}\n\treturn 0;\n\t\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint s=1,p=1;\n\t\twhile(n>0)\n\t\t{\t\n\t\t\tp=p*2;\n\t\t\ts= s+ p;\n\t\t\t\n\t\t\t\n\t\t\tif (n%s==0)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",n/s);\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\n\t}\n\treturn 0;\n\t\n}"}
{"similarity_score": 0.8651685393258427, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "260cae222e554f82c1275b07e538dd7a", "bug_code_uid": "6e1d5e7592b692b18f86135b8713ec6a", "src_uid": "5bffe38e3ac9511a30ee02b4ec5cb1d5", "apr_id": "c7f0a7c8ec67c5fa08282091016c4d5a", "difficulty": 800, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        int a1,a2,a3;\r\n        scanf(\"%d %d %d\",&a1,&a2,&a3);\r\n        int mean=a1+a3-2*a2;\r\n        printf(\"%d\\n\",mean%3);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while (t--)\r\n    {\r\n        int a1,a2,a3;\r\n        scanf(\"%d %d %d\",&a1,&a2,&a3);\r\n        int mean=a1+a3-2*a2;\r\n        if (mean%3==0)\r\n        printf(\"0\\n\");\r\n        else\r\n        printf(\"1\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9360126916975146, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "ef2b791368cf4eb6908c4dd27cef5487", "bug_code_uid": "59ea67bd88e23b0bef18bbb20df0c477", "src_uid": "b1706815238eb940060231848e43ffa8", "apr_id": "609b5c8f8614448a9c5d1f13a3c189cc", "difficulty": 1700, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t300000\n\nint pp[N], ii[N], uu[N * 5], vv[N * 5], cnt;\n\nvoid swap(int i, int j) {\n\tint p, q;\n\n\tif (i == j)\n\t\treturn;\n\tp = pp[i], q = pp[j];\n\tpp[i] = q;\n\tpp[j] = p;\n\tii[p] = j;\n\tii[q] = i;\n\tuu[cnt] = i;\n\tvv[cnt] = j;\n\tcnt++;\n}\n\nint main() {\n\tint n, h, i, p;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &p), p--;\n\t\tpp[i] = p;\n\t\tii[p] = i;\n\t}\n\th = n / 2;\n\tfor (i = 0; i < n; i++) {\n\t\tint j = ii[i];\n\n\t\tif (j == i)\n\t\t\tcontinue;\n\t\tif (j - i >= h)\n\t\t\tswap(i, j);\n\t\telse if (i >= h && j >= h) {\n\t\t\tswap(0, i);\n\t\t\tswap(0, j);\n\t\t\tswap(0, i);\n\t\t} else if (i < h && j < h) {\n\t\t\tswap(i, n - 1);\n\t\t\tswap(j, n - 1);\n\t\t\tswap(i, n - 1);\n\t\t} else {\n\t\t\tswap(i, n - 1);\n\t\t\tswap(0, n - 1);\n\t\t\tswap(0, j);\n\t\t\tswap(0, n - 1);\n\t\t\tswap(i, n - 1);\n\t\t}\n\t}\n\tfprintf(stdout, \"%d\\n\", cnt);\n\tfor (i = 0; i < cnt; i++)\n\t\tfprintf(stdout, \"%d %d\\n\", uu[i] + 1, vv[i] + 1);\n\treturn 0;\n}\n", "fixed": "/* practice with Dukkha */\n#include <stdio.h>\n\n#define N\t300000\n\nint pp[N], ii[N], uu[N * 5], vv[N * 5], cnt;\n\nvoid swap(int i, int j) {\n\tint p, q;\n\n\tif (i == j)\n\t\treturn;\n\tp = pp[i], q = pp[j];\n\tpp[i] = q;\n\tpp[j] = p;\n\tii[p] = j;\n\tii[q] = i;\n\tuu[cnt] = i;\n\tvv[cnt] = j;\n\tcnt++;\n}\n\nint main() {\n\tstatic char out[128];\n\tint n, h, i, p;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &p), p--;\n\t\tpp[i] = p;\n\t\tii[p] = i;\n\t}\n\th = n / 2;\n\tfor (i = 0; i < n; i++) {\n\t\tint j = ii[i];\n\n\t\tif (j == i)\n\t\t\tcontinue;\n\t\tif (j - i >= h)\n\t\t\tswap(i, j);\n\t\telse if (i >= h && j >= h) {\n\t\t\tswap(0, i);\n\t\t\tswap(0, j);\n\t\t\tswap(0, i);\n\t\t} else if (i < h && j < h) {\n\t\t\tswap(i, n - 1);\n\t\t\tswap(j, n - 1);\n\t\t\tswap(i, n - 1);\n\t\t} else {\n\t\t\tswap(i, n - 1);\n\t\t\tswap(0, n - 1);\n\t\t\tswap(0, j);\n\t\t\tswap(0, n - 1);\n\t\t\tswap(i, n - 1);\n\t\t}\n\t}\n\tsprintf(out, \"%d\", cnt);\n\tputs(out);\n\tfor (i = 0; i < cnt; i++) {\n\t\tsprintf(out, \"%d %d\", uu[i] + 1, vv[i] + 1);\n\t\tputs(out);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9988649262202043, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5ffb3a29761b7dee1c61dbacdef762cb", "bug_code_uid": "fa435b9adbf02e627ef6a5ccb55ed169", "src_uid": "6b4242ae9a52d36548dda79d93fe0aef", "apr_id": "7d5b88342834c18386daebfbbe2b93fe", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint find_eventually_falling_bumpers(char *, int);\nint main()\n{\n    int no_of_bumpers, no_of_bumpers_leading_to_fall;\n\n    scanf(\"%d\",&no_of_bumpers);\n\n    char *bumpers = malloc((no_of_bumpers+1)*sizeof(char));\n    scanf(\"%s\",bumpers);\n\n    no_of_bumpers_leading_to_fall = find_eventually_falling_bumpers(bumpers, no_of_bumpers);\n    printf(\"%d\\n\",no_of_bumpers_leading_to_fall);\n    free(bumpers);\n    return 0;\n}\n\nint find_eventually_falling_bumpers(char *bumpers, int no_of_bumpers)\n{\n    int i, fall_count = 0;\n\n    for(i = 0; (*(bumpers + i) == '<') && (*(bumpers + i) != '\\0'); i++,fall_count++);//No of < in the beginning before the first > or end of string\n\n    for(i = no_of_bumpers - 1; (*(bumpers + i) == '>') && ( i != 0); i--, fall_count++);//No of > in the end before the last < or beginning of string\n    return fall_count;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint find_eventually_falling_bumpers(char *, int);\nint main()\n{\n    int no_of_bumpers, no_of_bumpers_leading_to_fall;\n\n    scanf(\"%d\",&no_of_bumpers);\n\n    char *bumpers = malloc((no_of_bumpers+1)*sizeof(char));\n    scanf(\"%s\",bumpers);\n\n    no_of_bumpers_leading_to_fall = find_eventually_falling_bumpers(bumpers, no_of_bumpers);\n    printf(\"%d\\n\",no_of_bumpers_leading_to_fall);\n    free(bumpers);\n    return 0;\n}\n\nint find_eventually_falling_bumpers(char *bumpers, int no_of_bumpers)\n{\n    int i, fall_count = 0;\n\n    for(i = 0; (*(bumpers + i) == '<') && (*(bumpers + i) != '\\0'); i++,fall_count++);//No of < in the beginning before the first > or end of string\n\n    for(i = no_of_bumpers - 1; (*(bumpers + i) == '>') && ( i >= 0); i--, fall_count++);//No of > in the end before the last < or beginning of string\n    return fall_count;\n}\n"}
{"similarity_score": 0.9842312746386334, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b76f16e6b8c86edf158266c8877a920e", "bug_code_uid": "031957a853a5f7e6ef860a4e22d8504f", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "fcd6088dae854fa2e168533cc56d50f1", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint garland(int r, int g, int b){\n\n\tif(r == g || g == b || r == b){\n\n\t\treturn 1;\n\n\t}\n\n\telse{\n\n\t\tint largest = r;\n\n\t\tchar ch = 'r';\n\n\t\tif(g > largest){\n\n\t\t\tlargest = g;\n\t\t\tch = 'g';\n\n\t\t}\n\n\t\tif(b > largest){\n\n\t\t\tlargest = b;\n\t\t\tch = 'b';\n\n\t\t}\n\n\t\tif(ch == 'r' && g + b >= r - 1){\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t\telse if(ch == 'g' && r + b >= g - 1){\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t\telse if(ch == 'b' && r + g >= b - 1){\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t\telse{\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n}\n\nint main() {\n\n\tint t, r, g, b;\n\n\tscanf(\"%d\", &t);\n\n\tint ans[t];\n\n\tfor(int i = 0; i < t; i++){\n\n\t\tscanf(\"%d %d %d\", &r, &g, &b);\n\t\tans[i] = garland(r, g, b);\n\n\t}\n\n\tfor(int i = 0; i < t; i++){\n\n\t\tif(ans[i] == 1){\n\n\t\t\tprintf(\"Yes\\n\");\n\n\t\t}\n\n\t\telse{\n\n\t\t\tprintf(\"No\\n\");\n\n\t\t}\n\n\t}\n\n\treturn 0;\n\n}\n", "fixed": "#include<stdio.h>\n\nint garland(int r, int g, int b){\n\n\tif(r == g && g == b && r == b){\n\n\t\treturn 1;\n\n\t}\n\n\telse{\n\n\t\tint largest = r;\n\n\t\tchar ch = 'r';\n\n\t\tif(g > largest){\n\n\t\t\tlargest = g;\n\t\t\tch = 'g';\n\n\t\t}\n\n\t\tif(b > largest){\n\n\t\t\tlargest = b;\n\t\t\tch = 'b';\n\n\t\t}\n\n\t\tif(ch == 'r' && g + b >= r - 1){\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t\telse if(ch == 'g' && r + b >= g - 1){\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t\telse if(ch == 'b' && r + g >= b - 1){\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t\telse{\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n}\n\nint main() {\n\n\tint t, r, g, b;\n\n\tscanf(\"%d\", &t);\n\n\tint ans[t];\n\n\tfor(int i = 0; i < t; i++){\n\n\t\tscanf(\"%d %d %d\", &r, &g, &b);\n\t\tans[i] = garland(r, g, b);\n\n\t}\n\n\tfor(int i = 0; i < t; i++){\n\n\t\tif(ans[i] == 1){\n\n\t\t\tprintf(\"Yes\\n\");\n\n\t\t}\n\n\t\telse{\n\n\t\t\tprintf(\"No\\n\");\n\n\t\t}\n\n\t}\n\n\treturn 0;\n\n}\n"}
{"similarity_score": 0.987220447284345, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "30e5da35c9016c1ca6fcd854df5c4edc", "bug_code_uid": "114a9b8dad304508209f3c5ef93a892e", "src_uid": "955bc1e2769ea407ef02506bf1e4259b", "apr_id": "3368ca7a28e664b9174401b172556980", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n,i,temp;\r\n        scanf(\"%d\", &n);\r\n        int ara[n];\r\n        printf(\"%d \", n);\r\n        for(i=0;i<n-2;i++){\r\nprintf(\"%d \", i+1);\r\n        }\r\n        printf(\"%d\\n\",n-1);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        int n,i,temp;\r\n        scanf(\"%d\", &n);\r\n        int ara[n];\r\n        printf(\"%d \", n);\r\n        for(i=0;i<n-1;i++){\r\nprintf(\"%d \", i+1);\r\n        }\r\n        printf(\"\\n\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.3228200371057514, "equal_cnt": 21, "replace_cnt": 17, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "506118017fc0beddef33ff3ca9b91546", "bug_code_uid": "44a814390aed83a0bdbca189101795e6", "src_uid": "6e5b4d43e64645cf26d5eac31437b1a9", "apr_id": "c3239167ef6d0787eaf35ac69c895173", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n          int t,n,i,j=0;\n          scanf(\"%d\",&t);\n          while(t!=0)\n          {\n                    scanf(\"%d\",&n);\n                    \n                    int a[n];\n                    for(i=0;i<n;i++)\n                    {\n                       scanf(\"%d\",&a[i]);       \n                    }\n                    for(i=0;i<n;i++)\n                    {\n                              if(a[i]<=0)\n                              j++;\n                              \n                    }\n          }\n          if(j==0)\n          printf(\"Yes\");\n          else\n          printf(\"No\");\n          return 0;\n          \n}", "fixed": "# include<stdio.h>\n#define ll long long \nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tll sum=0;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tint i,flag=1;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tsum=sum+a[i];\n\t\t\tif(sum<=0)  flag=0;\n\t\t} \n\t\tsum=0;\n\t\tfor(i=n-1;i>=0;i--)\n\t\t{\n\t\t\tsum=sum+a[i];\n\t\t\tif(sum<=0)  flag=0;\n\t\t}\n\t\tif(flag)\n\t\t  printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9991546914623838, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "273530a6c00ad0bbd378981207fd3ba6", "bug_code_uid": "e672880b27d9a65fd64430259d7f75ce", "src_uid": "4585419ab2b7200770cfe1e607161e9f", "apr_id": "d8145477e18ae8dadfb38857d3493b9d", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nlong long int a[10000][2];\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char *argv[]) {\n\tint i,j,k,l;\n\tscanf(\"%d\",&l);\n\tfor(i=0;i<l/2;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i][0]);\n\t}\n\ta[0][1]=0;\n\tfor(i=1;i<l/2;i++)\n\t{\n\t\ta[i][1]=a[i-1][1];\n\t\ta[i][1]+=(((a[i][0]-a[i][1])-(a[i-1][0]-a[i-1][1]))*((a[i][0]-a[i][1])>(a[i-1][0]-a[i-1][1])));\t\t\n\t}\n\tfor(i=0;i<l/2;i++)\n\t{\n\t\tprintf(\"%lld \",a[i][1]);\n\t}\n\tfor(i=l/2-1;i>=0;i--)\n\t{\n\t\tprintf(\"%lld \",(a[i][0]-a[i][1]));\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong long int a[100000][2];\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\n\nint main(int argc, char *argv[]) {\n\tint i,j,k,l;\n\tscanf(\"%d\",&l);\n\tfor(i=0;i<l/2;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i][0]);\n\t}\n\ta[0][1]=0;\n\tfor(i=1;i<l/2;i++)\n\t{\n\t\ta[i][1]=a[i-1][1];\n\t\ta[i][1]+=(((a[i][0]-a[i][1])-(a[i-1][0]-a[i-1][1]))*((a[i][0]-a[i][1])>(a[i-1][0]-a[i-1][1])));\t\t\n\t}\n\tfor(i=0;i<l/2;i++)\n\t{\n\t\tprintf(\"%lld \",a[i][1]);\n\t}\n\tfor(i=l/2-1;i>=0;i--)\n\t{\n\t\tprintf(\"%lld \",(a[i][0]-a[i][1]));\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.14690451206715635, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "27d4878dadb60ce03fbbbad590d849c4", "bug_code_uid": "ad9f25fd41fba429088f75d1adf05f81", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "86248300ad725f528a9a6e1a942de038", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nconst int N = 2e5 + 10;\nint main()\n{\n    int t, i;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        int count[N] = {0};\n        int ans = -1;\n        for (i = 1; i <= n; i++)\n        {\n            int a;\n            scanf(\"%d\", &a);\n            count[a]++;\n        }\n        for (i = 1; i <= n; i++)\n        {\n            if (count[i] >= 3)\n            {\n                ans = i;\n            }\n        }\n        printf(\"%d\\n\", ans);\n    }\n\n    return 0;\n}\n  \t\t\t \t  \t\t\t\t\t  \t\t \t \t\t  \t  \t \t", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tint count=0;\n\tscanf(\"%d\",&t);\n\tint n,i,j;\n\tfor(i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],b[n+1];\n\t\tint ans=-1;\n\t\tfor(j=0;j<n+1;j++)\n\t\t\tb[j]=0;\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t\tb[a[j]]++;\n\t\t}\n\t\tfor(j=0;j<=n;j++)\n\t\t{\n\t\t\tif (b[j]>=3)\n\t\t\t{\n\t          ans=j; \n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n \t  \t\t     \t\t \t \t\t \t   \t\t \t\t\t\t\t"}
{"similarity_score": 0.18830525272547077, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "97e859fe6d0fa5327fb58e5a68ca5c7a", "bug_code_uid": "407a5b66e97bad30e1a8a308d3d6891f", "src_uid": "77e2a6ba510987ed514fed3bd547b5ab", "apr_id": "743752cbc7ef9369c141c67e281139da", "difficulty": 1100, "tags": ["implementation", "sortings", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nchar a[100002];\nint n;\nvoid del(int q,int k)\n{\n    int i;\n    for(i=q;i<n-k; i++)\n    {\n        a[i]=a[i+k];\n    }\n    for(i=n-k;i<n;i++)\n    {\n        a[i]=0;\n    }\n    n-=k;\n}\n\nint max(int l)\n{\n    int i,max;\n    max=l;\n    for(i=l+1; i<n; i++)\n    {\n        if(a[max]<a[i])\n        {\n        max=i;\n        }\n    }\n    return max;\n}\n\nint main()\n{\n    int i,k,s,l;\n   scanf(\"%s\",&a);\n   n=strlen(a);\n   for(i=0; i<n; i++)\n   {\n       s=max(i);\n       del(i,s-i);\n   }\n   printf(\"%s\",a);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nchar a[100002];\n_Bool p[100002];\nint n;\n\nint main()\n{\n    int i,k,s,max,l;\n   scanf(\"%s\",&a);\n   n=strlen(a);\n   max=a[n-1];\n   p[n-1]=1;\n   for(i=n-2; i>=0; i--)\n   {\n       if(max==a[i])\n       {\n           p[i]=1;\n       }\n       if(max<a[i])\n       {\n           p[i]=1;\n           max=a[i];\n       }\n   }\n   for(i=0; i<n; i++)\n   {\n       if(p[i]==1)\n       {\n           printf(\"%c\",a[i]);\n       }\n   }\n    return 0;\n}\n"}
{"similarity_score": 0.9494839760999457, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "40a4a7cb4f946fd5637bee6f881b011e", "bug_code_uid": "f738db4cb45f87c25081b8039a162099", "src_uid": "9e0d271b9bada1364dfcb47297549652", "apr_id": "ffa0b498dc9d58382d21add58a145090", "difficulty": 1600, "tags": ["dp", "two pointers", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nlong long int MOD= 1000000007;\nint pm_key=1;\n\nint max( int a,int b){\n    if(a>b) return a; else return b;\n}\nint min(int a,int b){\n    if(a<b) return a; else return b;\n}\n\n\nint main(){\n    int n,i=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n],c[n];\n    while (i<n) {\n        scanf(\"%d\",&a[i]);\n        if(i==0) b[i]=1;\n        else{\n            if(a[i]>a[i-1]) b[i]=b[i-1]+1;\n            else b[i]=1;\n        }\n        i++;\n    }\n    c[n-1]=1;\n    for (i=n-2; i>=0; i--) {\n        if(a[i]<a[i+1]) c[i]=c[i+1]+1;\n        else c[i]=1;\n    }\n    c[0]=1;\n    i=1;\n    int mx=1;\n    while (i<n-1) {\n        if(a[i+1]-a[i-1]>1){\n            mx=max(c[i+1]+b[i-1]+1, mx);\n        }\n        else{\n            mx=max(c[i+1]+1, mx);\n            mx=max(b[i-1]+1, mx);\n        }\n        i++;\n    }\n    printf(\"%d\\n\",mx);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nlong long int MOD= 1000000007;\nint pm_key=1;\n\nint max( int a,int b){\n    if(a>b) return a; else return b;\n}\nint min(int a,int b){\n    if(a<b) return a; else return b;\n}\n\nint main(){\n    int n,i=0;\n    scanf(\"%d\",&n);\n    int a[n],b[n],c[n];\n    while (i<n) {\n        scanf(\"%d\",&a[i]);\n        if(i==0) b[i]=1;\n        else{\n            if(a[i]>a[i-1]) b[i]=b[i-1]+1;\n            else b[i]=1;\n        }\n        i++;\n    }\n    c[n-1]=1;\n    for (i=n-2; i>=0; i--) {\n        if(a[i]<a[i+1]) c[i]=c[i+1]+1;\n        else c[i]=1;\n    }\n    if(n==1) printf(\"1\");\n    else{\n    c[0]=1;\n    i=1;\n    int mx=1;\n    while (i<n-1) {\n        if(a[i+1]-a[i-1]>1){\n            mx=max(c[i+1]+b[i-1]+1, mx);\n        }\n        else{\n            mx=max(c[i+1]+1, mx);\n            mx=max(b[i-1]+1, mx);\n        }\n        i++;\n    }\n    mx=max(mx, b[n-2]+1);\n    mx=max(mx, c[1]+1);\n    printf(\"%d\\n\",mx);\n    }\n    return 0;\n}"}
{"similarity_score": 0.13783783783783785, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "5008a34824e88308e68f328526aa8047", "bug_code_uid": "6224d62c8e4a5d15d60c984986c8b0c3", "src_uid": "7d1e8769a6b1d5c6680ab530d19e7fa4", "apr_id": "b0984a08bc7f2532de4ca2f8cdb7b180", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong n,c;\nlong long t,a[200000],b[200000];\nint main(){\n    scanf(\"%ld %lld %ld\", &n, &t, &c);\n    long i=-1,j;\n    for(;++i<n;scanf(\"%lld\", &a[i]));\n    for(i=-1; ++i<n-c;){\n        for(j=i-c+1>0?i-c+1:0; ++j<i+c-1<n?i+c-1:n;){\n           if(a[j]> t)\n           {\n               b[j]++;\n               break; \n           }\n        }\n    }\n    long q=0;\n    for(i=-1;++i<n; q+=b[i]);\n    printf(\"%ld\", q);\n    \n}", "fixed": "#include <stdio.h>\nint n,t,c, a[200002], cevap, b,i;\nint main(){\n    scanf(\"%d %d %d\", &n,&t,&c);\n    for(i=0;i<n;i++) scanf(\" %d\", &a[i]);\n    for(i=0;i<n;i++) {\n        if(a[i]>t) b++;\n        if((i>=c) && (a[i-c]>t)) b--;\n        if(!b && (i>=(c-1))) cevap++;\n    }\n    printf(\"%d\", cevap);\n    return 0; \n}"}
{"similarity_score": 0.9926739926739927, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c5db697e58c721b7a28acee29ce6ac09", "bug_code_uid": "114f41f810cadcc784a3069fbb74eab7", "src_uid": "7a8c4ba98a77097faff625b94889b365", "apr_id": "3820a5954fc36cea1faf698029e04620", "difficulty": 900, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint solve()\r\n{\r\n    int n,i;\r\n    long long int a[107],b[107],res=0,tmp;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)scanf(\"%lld\",&a[i]);\r\n    b[0]=0;res=0;\r\n    for(i=1;i<n;i++)b[i]=b[i-1]+1;\r\n    for(i=0;i<n;i++){\r\n        if(a[i]>b[i]){res+=a[i]-b[i];continue;}\r\n        if(a[i]+res<=b[i])res-=b[i]-a[i];\r\n        if(res<0)break;\r\n    }\r\n    if(i==n)printf(\"YES\\n\");\r\n    if(i<n)printf(\"NO\\n\");\r\n    return 0;\r\n}\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint solve()\r\n{\r\n    int n,i;\r\n    long long int a[107],b[107],res=0,tmp;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)scanf(\"%lld\",&a[i]);\r\n    b[0]=0;res=0;\r\n    for(i=1;i<n;i++)b[i]=b[i-1]+1;\r\n    for(i=0;i<n;i++){\r\n        if(a[i]>b[i]){res+=a[i]-b[i];continue;}\r\n        if(a[i]<b[i])res-=b[i]-a[i];\r\n        if(res<0)break;\r\n    }\r\n    if(i==n)printf(\"YES\\n\");\r\n    if(i<n) printf(\"NO\\n\");\r\n    return 0;\r\n}\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9665683382497542, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b5d917e5d343401d395134dceef91a13", "bug_code_uid": "c913bb964176f50945376c15b4421e1c", "src_uid": "267c04c77f97bbdf7697dc88c7bfa4af", "apr_id": "0b97309011057bdc09d9ff927684f2bc", "difficulty": 1300, "tags": ["data structures", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 100000\nint B1[MAX+1]={0};\nint S1[MAX+1]={0};\nint main()\n{\n    int p,q,n,s;\n    char ch;\n    int i;\n    scanf(\"%d %d\",&n,&s);\n    //B[MAX+1]={0};\n    //S[MAX+1]={0};\n     for(i=0;i<n;i++){\n        scanf(\" %c\",&ch);\n        scanf(\"%d %d\",&p,&q);\n        if(ch=='B'){\n            B1[p]=B1[p]+q;\n        }\n        else{\n            S1[p]=S1[p]+q;\n        }\n     }\n     int count=0,save=0;\n     for(i=1;i<=MAX;i++){\n        if(S1[i]){\n            count++;\n            if(count==n){\n                save=i;\n                break;\n            }\n            if(count==s){\n                save=i;\n                break;\n            }\n        }\n     }\n     for(i=save;i>=0;i--){\n        if(S1[i]){\n            printf(\"S %d %d\\n\",i,S1[i]);\n        }\n     }\n     count=0;\n    for(i=MAX;i>=0;i--){\n        if(B1[i]){\n            count++;\n            printf(\"B %d %d\\n\",i,B1[i]);\n        }\n        if(count==n){\n            break;\n        }\n        if(count==s){\n            break;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAX 100000\nint B1[MAX+1]={0};\nint S1[MAX+1]={0};\nint main()\n{\n    int p,q,n,s;\n    char ch;\n    int i;\n    scanf(\"%d %d\",&n,&s);\n    //B[MAX+1]={0};\n    //S[MAX+1]={0};\n     for(i=0;i<n;i++){\n        scanf(\" %c\",&ch);\n        scanf(\"%d %d\",&p,&q);\n        if(ch=='B'){\n            B1[p]=B1[p]+q;\n        }\n        else{\n            S1[p]=S1[p]+q;\n        }\n     }\n     int count=0,save=0;\n     for(i=1;i<=MAX;i++){\n        if(S1[i]){\n            count++;\n            save=i;\n            if(count==n){\n                break;\n            }\n            if(count==s){\n                break;\n            }\n        }\n     }\n     for(i=save;i>=0;i--){\n        if(S1[i]){\n            printf(\"S %d %d\\n\",i,S1[i]);\n        }\n     }\n     count=0;\n    for(i=MAX;i>=0;i--){\n        if(B1[i]){\n            count++;\n            printf(\"B %d %d\\n\",i,B1[i]);\n        }\n        if(count==n){\n            break;\n        }\n        if(count==s){\n            break;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9950900163666121, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "18b393db1904769971f6b682185ba197", "bug_code_uid": "5eb8f0a0e8594374d7d54c96b37c9664", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "c468dc4a6baf15354068e0b336124491", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\ninline int FAST_IO()\n{\tint x=0, Negativity=0;\n\tchar ch;\n\twhile (((ch=getchar()) < 48 || ch > 57) );\t\t// ASCII value 0->9\n\n\t\tx = ch-48;\n\twhile ((ch=getchar()) >= 48 && ch <= 57)\n\t\tx=x*10+ch-48;\n\treturn x;\n\n}\nint a1[100001];\nchar b[100001];\nint main()\n{\n    int f;\n    int i=0;\n    int j=0;\n    scanf(\"%s\",b);\n    int l=strlen(b);\n    int g=0;\n    j=1;\n   for(g=1;g<l;g++)\n    {\n            a1[j]=a1[j-1]+(b[g]==b[g-1]);\n            j++;\n\n    }\nint t=FAST_IO();\nint t1;\nint t2;\nfor(i=0;i<t;i++)\n{\n    t1=FAST_IO();\n     t2=FAST_IO();\n    printf(\"%d\\n\",a1[t2-1]-a1[t1-1]);\n}\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n int FAST_IO()\n{\tint x=0, Negativity=0;\n\tchar ch;\n\twhile (((ch=getchar()) < 48 || ch > 57) );\t\t// ASCII value 0->9\n\n\t\tx = ch-48;\n\twhile ((ch=getchar()) >= 48 && ch <= 57)\n\t\tx=x*10+ch-48;\n\treturn x;\n\n}\nint a1[100001];\nchar b[100001];\nint main()\n{\n    int f;\n    int i=0;\n    int j=0;\n    scanf(\"%s\",b);\n    int l=strlen(b);\n    int g=0;\n    j=1;\n   for(g=1;g<l;g++)\n    {\n            a1[j]=a1[j-1]+(b[g]==b[g-1]);\n            j++;\n\n    }\nint t=FAST_IO();\nint t1;\nint t2;\nfor(i=0;i<t;i++)\n{\n    t1=FAST_IO();\n     t2=FAST_IO();\n    printf(\"%d\\n\",a1[t2-1]-a1[t1-1]);\n}\n}\n\n"}
{"similarity_score": 0.9673500379650721, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "941d3687079e8c8fffdf2b58027b013a", "bug_code_uid": "f61acb2a77b742d96e26b51727744ea5", "src_uid": "71bc7c4eb577441f2563e40d95306752", "apr_id": "ecfb35ba0460473dd2edb0bfd3841e34", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid swap(long int *p,long int *q)\n{\n    long int temp;\n    temp=*p;\n    *p=*q;\n    *q=temp;\n}\n\n\nint main(void) {\n    int n,i,j;\n    long int a[5005],b[5005],min=-1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%ld\",&a[i]);\n      scanf(\"%ld\",&b[i]);\n    }\n    \n    for(i=0;i<n;i++)\n        for(j=0;j<n;j++)\n            if(a[i]<a[j])\n            {\n            swap(&a[i],&a[j]);\n            swap(&b[i],&b[j]);\n            }\n    min=b[0];\n    \n    for(i=0;i<n;i++)\n    {\n        if(b[i]>=min)\n        min=b[i];\n        else if(a[i]>min)\n        min=a[i];\n    }\n    \n    printf(\"%ld\",min);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nvoid swap(long int *p,long int *q)\n{\n    long int temp;\n    temp=*p;\n    *p=*q;\n    *q=temp;\n}\n\n\nint main(void) {\n    int n,i,j;\n    long int a[5005],b[5005],min=-1,e;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%ld\",&a[i]);\n      scanf(\"%ld\",&b[i]);\n    }\n    \n    for(i=0;i<n;i++)\n        for(j=0;j<n;j++)\n            if(a[i]<a[j])\n            {\n            swap(&a[i],&a[j]);\n            swap(&b[i],&b[j]);\n            }\n    min=b[0];\n    e=a[0];\n    \n    for(i=0;i<n;i++)\n    {\n        if(b[i]>=min)\n        {min=b[i];\n        e=a[i];}\n        else if(a[i]>min && a[i]!=e)\n        min=a[i];\n    }\n    \n    printf(\"%ld\",min);\n    return 0;\n}"}
{"similarity_score": 0.9968553459119497, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "669962ea591715d8e2984b66b87c0ace", "bug_code_uid": "4ca48104c6ac4d1a851e14be122f1a94", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "2322ae0fd8b95af343687c2ce204ab2e", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long int i,u,j,t,k,x,y;\nint main ()\n{\n\tscanf(\"%lld\",&x);\n\tfor (i=1; i <=x ; i++)\n\t{\n\t\tscanf(\"%lld\",&y);\n\t\t\tt=y*(y+1)/2;\n\t\t\tfor (k=1; k<=1000000000000000 ; k*=2)\n\t\t\t{\n\t\t\t\tif (y<k)\n\t\t\t     {\n\t\t\t\t\tbreak;\n\t\t\t\t }\n\t\t\t\t u=u+k;\n\t\t\t}\t\t\t\t\n\t\t\t\tt=t-(2*u);\n\t\tprintf(\"%lld\",t);\n\t\tt=0;\n\t\tu=0;\n\t}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nlong long int i,u,j,t,k,x,y;\nint main ()\n{\n\tscanf(\"%lld\",&x);\n\tfor (i=1; i <=x ; i++)\n\t{\n\t\tscanf(\"%lld\",&y);\n\t\t\tt=y*(y+1)/2;\n\t\t\tfor (k=1; k<=1000000000000000 ; k*=2)\n\t\t\t{\n\t\t\t\tif (y<k)\n\t\t\t     {\n\t\t\t\t\tbreak;\n\t\t\t\t }\n\t\t\t\t u=u+k;\n\t\t\t}\t\t\t\t\n\t\t\t\tt=t-(2*u);\n\t\tprintf(\"%lld\\n\",t);\n\t\tt=0;\n\t\tu=0;\n\t}\nreturn 0;\n}\n"}
{"similarity_score": 0.8258633357825128, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "c2738e062e0b96e0e9f0c981fd4c389a", "bug_code_uid": "0747b72247d4ecc99d317eb9e7c83ad8", "src_uid": "f9375003a3b64bab17176a05764c20e8", "apr_id": "422d691f333652ed5ec91556fcdd2c9e", "difficulty": 1400, "tags": ["sortings", "math", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N \t100\n\nlong long a[N + 1];\nchar used[N + 1];\nlong long t[N + 1];\n\nvoid go(long long *a, int n){\n\tint c, i, j, k;\n\tlong long p;\n\n\tfor(i = 0; i < n; i++){\n\t\tc = 0;\n\t\t\n\t\tmemset(used, 1, sizeof(used));\n\t\t\n\t\tp = a[i];\n\t\tt[c++] = p;\n\t\tused[i] = 0;\n\t\t\n\t\tfor(j = 0; j < n; j++){\n\t\t\tfor(k = 0; k < n; k++){\n\t\t\t\tif( (p / 3 == a[k] || p * 2 == a[k]) && used[k] ){\n\t\t\t\t\tp = a[k];\n\t\t\t\t\tt[c++] = p;\n\t\t\t\t\tused[k] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(c == n) break;\n\t}\n}\n\nint main(){\n\t\n\tint n, i;\n\tscanf(\"%d\", &n);\n\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%lld\", &a[i]);\n\t}\n\n\tgo(a, n);\n\n\tfor(i = 0; i < n; i++){\n\t\tprintf(\"%lld \", t[i]);\n\t}\n\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define N \t100\n\nlong long a[N + 1];\nchar used[N + 1];\nlong long t[N + 1];\n\nvoid go(long long *a, long long *t, int n){\n\tint c, i, j, k;\n\tlong long p;\n\n\tfor(i = 0; i < n; i++){\n\t\tc = 0;\n\t\t\n\t\tmemset(used, 1, sizeof(used));\n\t\t\n\t\tt[c++] = p = a[i];\n\t\tused[i] = 0;\n\t\t\n\t\tfor(j = 0; j < n; j++){\n\t\t\tfor(k = 0; k < n; k++){\n\t\t\t\tif( ( (p % 3 == 0 && p / 3 == a[k]) || p * 2 == a[k]) && used[k] ){\n\t\t\t\t\tt[c++] = p = a[k];\n\t\t\t\t\tused[k] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(c == n) break;\n\t}\n}\n\nint main(){\n\t\n\tint n, i;\n\tscanf(\"%d\", &n);\n\n\tfor(i = 0; i < n; i++){\n\t\tscanf(\"%lld\", &a[i]);\n\t}\n\n\tgo(a, t, n);\n\n\tfor(i = 0; i < n; i++){\n\t\tprintf(\"%lld \", t[i]);\n\t}\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.9847161572052402, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8d382b7ec7e97fc103a3b9ea0790ae48", "bug_code_uid": "2961100c649101c871da69e60c5923e1", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "85f334d629c94e5dc796c2c7ea94db47", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n//#include <stdlib.h>\n#include <string.h>\n//#include <math.h>\n//#include <algorithm>\n//#include <map>\n//using namespace std;\nint z[150];\nint main()\n{\n        //freopen(\"in.txt\", \"r\", stdin);\n        //freopen(\"out.txt\", \"w\", stdout);\n                memset(z,0,150*sizeof(int));\n        int n,f,c,num=0;\n        scanf(\"%d\",&n);\n        for(int x =1;x<=n;x++)\n        {\n                f=0;\n                for(int y =1;y<=n;y++)\n                        {\n                                scanf(\"%d\",&c);\n                                if(c==1||c==3)\n                                        f=1;\n                        }\n                if(f==0)\n                        {\n                        z[x]=1;\n                        num++;\n                        }\n        }\n        for(int x =1;x<=n;x++)\n                if(z[x]==1)\n                printf(\"%d \",x);\n        return 0;\n}\n", "fixed": "#include <stdio.h>\n//#include <stdlib.h>\n#include <string.h>\n//#include <math.h>\n//#include <algorithm>\n//#include <map>\n//using namespace std;\nint z[150];\nint main()\n{\n        //freopen(\"in.txt\", \"r\", stdin);\n        //freopen(\"out.txt\", \"w\", stdout);\n                memset(z,0,150*sizeof(int));\n        int n,f,c,num=0;\n        scanf(\"%d\",&n);\n        for(int x =1;x<=n;x++)\n        {\n                f=0;\n                for(int y =1;y<=n;y++)\n                        {\n                                scanf(\"%d\",&c);\n                                if(c==1||c==3)\n                                        f=1;\n                        }\n                if(f==0)\n                        {\n                        z[x]=1;\n                        num++;\n                        }\n        }\n        printf(\"%d\\n\",num);\n        for(int x =1;x<=n;x++)\n                if(z[x]==1)\n                printf(\"%d \",x);\n        return 0;\n}\n"}
{"similarity_score": 0.274858528698464, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "ccf2b9bed3d66b1c61370e5e931d1b64", "bug_code_uid": "c606896e9413179d6e34048a1d98fb79", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "bc05c706afe0b0d9f98c447fac3f5114", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n      int n,i,j;\n      scanf(\"%d\",&n);\n      if(n*n%2==0) printf(\"%d\\n\",n*n/2);\n      else printf(\"%d\\n\",n*n/2+1);\n      for(i=1;i<=n;i++)\n      {\n            if(i%2==0)\n            {\n                  for(j=1;j<=n;j++)\n                  {\n                        if(j%2==0) printf(\"C\");\n                        else printf(\".\");\n                  }\n            }\n            else\n           {\n                  for(j=1;j<=n;j++)\n                  {\n                        if(j%2==0) printf(\".\");\n                        else printf(\"C\");\n                  }\n           }\n           printf(\"\\n\");\n      }\n\n      return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n      int n,i,j;\n      scanf(\"%d\",&n);\n      char s1[n+2],s2[n+2];\n      for(i=0;i<n;i++)\n      {\n          if(i%2==0)\n          {\n                s1[i]='C';\n                s2[i]='.';\n          }\n          else\n          {\n                s1[i]='.';\n                s2[i]='C';\n          }\n      }\n      s1[n]='\\0';\n      s2[n]='\\0';\n      if(n*n%2==0) printf(\"%d\\n\",(n*n)/2);\n      else printf(\"%d\\n\",(n*n+1)/2);\n      for(i=0;i<n;i++)\n      {\n            if(i%2==0) printf(\"%s\\n\",s1);\n            else printf(\"%s\\n\",s2);\n      }\n\n      return 0;\n}\n"}
{"similarity_score": 0.5131995776135164, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "ed3709a932e2e5cfbe938cc84b5913a0", "bug_code_uid": "1b1789083d9c1796db956625c4bd5ee4", "src_uid": "d00b8423c3c52b19fec25bc63e4d4c1c", "apr_id": "73a90f16d13a1df7d9a3b438c229111a", "difficulty": 1500, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    double a,b,d;\n    int c;\n    scanf(\"%lf%lf\",&a,&b);\n    scanf(\"%d\",&c);\n    d=b;\n    while(c--)\n    {\n        for(;d>=4*a;d-=4*a);\n        if(d>=0&&d<=a) printf(\"%.4lf 0.0\\n\",d);\n        else if(d>a&&d<=2*a) printf(\"%.4lf %.4lf\\n\",a,d-a);\n        else if(d>2*a&&d<=3*a) printf(\"%.4lf %.4lf\\n\",3*a-d,a);\n        else printf(\"0.0 %.4lf\\n\",4*a-d);\n        d+=b;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\nint main()\n{\n    double a,b,d;\n    int c;\n    scanf(\"%lf%lf\",&a,&b);\n    scanf(\"%d\",&c);\n    long long t = ((b+d)/(4*a));\n    b=b-t*4*a;\n    d=0;\n    while(c--)\n    {\n        d+=b;\n        for(;d>=4*a;d-=4*a);\n        if(d>=0&&d<=a) printf(\"%.10lf 0.0\\n\",d);\n        else if(d>a&&d<=2*a) printf(\"%.10lf %.10lf\\n\",a,d-a);\n        else if(d>2*a&&d<=3*a) printf(\"%.10lf %.10lf\\n\",3*a-d,a);\n        else printf(\"0.0 %.10lf\\n\",4*a-d);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2334963325183374, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "c03354406836547e37f6c7f2d31767fa", "bug_code_uid": "de76ac9c7fe9fc3933aa11a82759b29b", "src_uid": "6477fdad8455f57555f93c021995bb4d", "apr_id": "6d3124e53f2ada3dd179e54516a2265f", "difficulty": 900, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define pf(x) printf(\"%lld\\n\",x);\n#define sf(x) scanf(\"%lld\",&x);\nint min(int x,int y)\n{\n    if(x>y)\n        return y;\n    else\n        return x;\n}\n\nint main()\n{\n    long long int i,j,n,x,tuna=0,eel=0,c=0,t,e,y=-1,ans=0;\n    sf(n);\n    for (i=0;i<n;i++)\n    {\n        sf(x);\n        if(x==1)\n        {\n            if(c==0)\n            {\n                y++;\n                e=eel;\n                eel=0;\n            }\n            c=1;\n            tuna++;\n        }\n        else\n        {\n            if(c==1&&i==0)\n            {\n                y++;\n                t=tuna;\n                tuna=0;\n            }\n            c=0;\n            eel++;\n        }\n        if (y%2==0)\n        {\n            if(min(tuna,eel)>ans)\n                ans=min(tuna,eel);\n        }\n\n    }\n    pf(2*ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nlong long int min(long long int x,long long int y)\n{\n    if(x>y)\n        return y;\n    else\n        return x;\n}\n\nint main()\n{\n    long long int i,j,k,n,x,y,t,e,ans;\n    ans=y=t=e=0;\n    scanf(\"%lld\",&n);\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&x);\n        if(x==1)\n            t++;\n        else if(x==2)\n            e++;\n        if((i!=0&&x!=y)||i==n-1)\n        {\n            if(x==1&&i!=n-1)\n                t--;\n            if(x==2&&i!=n-1)\n                e--;\n            if(min(t,e)>ans)\n            {\n                ans=min(t,e);\n            }\n            if (x==1)\n            {\n                t=1;\n            }\n            else if(x==2)\n                e=1;\n        }\n        y=x;\n\n    }\n    printf(\"%lld\\n\",2*ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9833679833679834, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2404f0ca9c1577724d449ec0d10e9070", "bug_code_uid": "5de1a5734a27745e85e01c7e9011f7f2", "src_uid": "88390110e4955c521867864a6f3042a0", "apr_id": "a60eecb6f54532f4ebdae717b2e682f5", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong a[10000000],b[10000000],sum=0,volume;\n\tlong n,i,j,key;\n\t\n\tscanf(\"%ld\",&n);\n\t\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%ld\",&a[i]);\n\t\n\t\n\t\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%ld\",&b[i]);\n\t\n\tfor(i=1;i<=n;i++)\n\tsum=sum+a[i];\n\t\n\t\n\tfor(i=2;i<=n;i++){\n\t\tkey=b[i];\n\t\tfor(j=i-1;j>=1;j--){\n\t\t\tif(key<b[j]){\n\t\t\t\tb[j+1]=b[j];\n\t\t\t\t\n\t\t\t}\n\t\t\telse \n\t\t\tbreak;\n\t\t}\n\t\tb[j+1]=key;\n\t}\n\n\t\n\tvolume=b[n-1]+b[n];\n\tif(volume>=sum)\n\tprintf(\"yes\");\n\telse \n\tprintf(\"no\");\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong a[10000000],b[10000000];\n\tlong double sum=0,volume;\n\tlong n,i,j,key;\n\t\n\tscanf(\"%ld\",&n);\n\t\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%ld\",&a[i]);\n\t\n\t\n\t\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%ld\",&b[i]);\n\t\n\tfor(i=1;i<=n;i++)\n\tsum=sum+a[i];\n\t\n\t\n\tfor(i=2;i<=n;i++){\n\t\tkey=b[i];\n\t\tfor(j=i-1;j>=1;j--){\n\t\t\tif(key<b[j]){\n\t\t\t\tb[j+1]=b[j];\n\t\t\t\t\n\t\t\t}\n\t\t\telse \n\t\t\tbreak;\n\t\t}\n\t\tb[j+1]=key;\n\t}\n\n\t\n\tvolume=b[n-1]+b[n];\n\tif(volume>=sum)\n\tprintf(\"yes\");\n\telse \n\tprintf(\"no\");\n\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.44508670520231214, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "06fbbb78e9435688cb16e6e0be48401e", "bug_code_uid": "e537d30f4420498162e12da643ce1cb7", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "c998ea542c7e40ab8c830f4432d82baf", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\nint t,a,b;\r\n\r\nif(a!=0){\r\nprintf(\"%d\\n\",(a+b*2+1));\r\n{\r\n\r\nelse{\r\nprintf(\"1\\n\");\r\nreturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n    scanf(\"%d%d\",&a,&b);\r\n    if(a==0){printf(\"1\\n\");}\r\n    else{printf(\"%d\\n\",(a+b*2+1));}\r\n    }\r\n        return 0;\r\n}\r\n"}
{"similarity_score": 0.8802440884820748, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "4b3ca5c65849fa625035a9bc193bb015", "bug_code_uid": "f61affb5304cacb8310f7de30e7ebced", "src_uid": "eba76d0491f88ac8d8450e457610b067", "apr_id": "91fb1bbcc88a1fd73397c0e660545481", "difficulty": 1900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\ntypedef long long LL;\nLL n,k;\n\nint main(void)\n{\n    //freopen(\"gcd.in\",\"r\",stdin);\n    //freopen(\"gcd.out\",\"w\",stdout);\n    scanf(\"%I64d%I64d\",&n,&k);\n    LL s=k*(k+1)/2,i,j,d=0;\n    for(i=1;i<=(int)sqrt(n)+1;i++)\n        if(n%i==0 && i>=s)\n        {\n            d=n/i;\n            break;\n        }\n    for(i=(int)sqrt(n)+1;i>=1 && !d;i--)\n        if(n%i==0 && n/i>=s)\n        {\n            d=i;\n            break;\n        }\n    if(!d) printf(\"-1\\n\");\n    else\n    {\n        for(i=1;i<k;i++)\n            printf(\"%I64d \",i*d);\n        printf(\"%I64d\\n\",(k+(n/d-s))*d);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\ntypedef long long LL;\nLL n,k;\n\nint main(void)\n{\n    //freopen(\"gcd.in\",\"r\",stdin);\n    //freopen(\"gcd.out\",\"w\",stdout);\n    scanf(\"%I64d%I64d\",&n,&k);\n    if(n*2/k/(k+1)==0)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    LL s=k*(k+1)/2,i,j,d=0;\n    for(i=1;i<=(int)sqrt(n)+1;i++)\n        if(n%i==0 && i>=s)\n        {\n            d=n/i;\n            break;\n        }\n    for(i=(int)sqrt(n)+1;i>=1 && !d;i--)\n        if(n%i==0 && n/i>=s)\n        {\n            d=i;\n            break;\n        }\n    for(i=1;i<k;i++)\n        printf(\"%I64d \",i*d);\n    printf(\"%I64d\\n\",(k+(n/d-s))*d);\n    return 0;\n}\n"}
{"similarity_score": 0.9904610492845787, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "1e14149ad0af29cffa838906352b73b9", "bug_code_uid": "351bf0cfa61da91585c2eba5cb4b28ad", "src_uid": "6c65ca365352380052b0c9d693e6d161", "apr_id": "edb142511bd0abcb9eae6303ff8bf1fb", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\ntypedef long long int lli;\n\nint main()\n{\n    int n;\n    int *a;\n    int i, diff, flag;\n    \n    scanf(\"%d\", &n);\n    \n    a = (int *)malloc(sizeof(int)*n);\n    \n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n    \n    diff = n - a[0];\n    flag = 0;\n    \n    for(i=1; i<n && !flag; i+=2)\n        if((a[i]+diff)%n != i)\n            flag = 1;\n    \n    for(i=2; i<n && !flag; i+=2)\n        if((a[i]+n-diff)%n != i)\n            flag = 1;\n    \n    if(flag)\n        printf(\"No\");\n    \n    else\n        printf(\"Yes\");\n    \n    free(a);\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\ntypedef long long int lli;\n\nint main()\n{\n    int n;\n    int *a;\n    int i, diff, flag;\n    \n    scanf(\"%d\", &n);\n    \n    a = (int *)malloc(sizeof(int)*n);\n    \n    for(i=0; i<n; i++)\n        scanf(\"%d\", &a[i]);\n    \n    diff = n - a[0];\n    flag = 0;\n    \n    for(i=1; i<n && !flag; i+=2)\n        if((a[i]-diff+n)%n != i)\n            flag = 1;\n    \n    for(i=2; i<n && !flag; i+=2)\n        if((a[i]+diff)%n != i)\n            flag = 1;\n    \n    if(flag)\n        printf(\"No\");\n    \n    else\n        printf(\"Yes\");\n    \n    free(a);\n    \n    return 0;\n}"}
{"similarity_score": 0.593103448275862, "equal_cnt": 13, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "e809071b2764fde954f92516ada556b3", "bug_code_uid": "32b756bd39166d182d577609981e9f37", "src_uid": "0690e2df87f60e5be34505d9e2817032", "apr_id": "de8f0b819d07bfea6a1be1a82f979576", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    long long int n,s,k,l,a[n];\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        s=n-3;\r\n        l=s/3;\r\n       printf(\"%lld\\n\",l-1);\r\n    }\r\n    \r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int sev;\r\n    scanf(\"%d\",&sev);\r\n   long long int a[sev];\r\n    for(int i=0;i<sev;i++)\r\n    {\r\n       \r\n       long long int n,l;\r\n       scanf(\"%lld\",&n);\r\n       \r\n       l=((n-3)/3)-1;\r\n       a[i]=l;\r\n    }\r\n    for(int i=0;i<sev;i++)\r\n    {\r\n        printf(\"%lld\\n\",a[i]);\r\n    }\r\n    return 0;\r\n    \r\n}"}
{"similarity_score": 0.9835902536051716, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ecf224090fbbab2289127ab274a1c952", "bug_code_uid": "a585be323dcd400f6894c3f1191821a8", "src_uid": "e46c6406d19e8679fd282d72882ae78d", "apr_id": "7c35cd924799df4f561da663c2a40617", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n//using namespace std;\n//#define PB push_back\n//#define MP make_pair\n//#define ll long long int\n//string s;\nchar s[1000005];\n//vector<pair<int ,pair<int ,int> > > V;\nint main()\n{\n    scanf(\"%s\",s);\n    int len = strlen(s);\n    if(len==1)\n    {\n        printf(\"0\\n\");\n        //cout<<\"0\"<<endl;\n        return 0;\n    }\n    int i = len-1,count=0,flag=0;\n    while(i>=0)\n    {\n        if(s[i]=='0')\n        {\n            count++;\n            i--;\n        }\n        else\n        {\n            int x=i;\n            while(s[i]!='0'&& i>=0)\n            {\n                s[i]='0';\n                i--;\n                if(!i)\n                {\n                    count = count + (x-i+1)+1;\n                    flag=1;\n                    break;\n                }\n\n            }\n            s[i]='1';\n            if(flag) break;\n            //i=x;\n            count+=(x-i + 1);\n        }\n    }\n    printf(\"%d\\n\",count);\n    //cout<<count<<endl;\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n//using namespace std;\n//#define PB push_back\n//#define MP make_pair\n//#define ll long long int\n//string s;\nchar s[1000005];\n//vector<pair<int ,pair<int ,int> > > V;\nint main()\n{\n    scanf(\"%s\",s);\n    int len = strlen(s);\n    if(len==1)\n    {\n        printf(\"0\\n\");\n        //cout<<\"0\"<<endl;\n        return 0;\n    }\n    int i = len-1,count=0,flag=0;\n    while(i>0)\n    {\n        if(s[i]=='0' )\n        {\n            //while(s[i]=='0')\n            count++;\n            i--;\n        }\n        else\n        {\n            int x=i;\n            while(s[i]!='0'&& i>=0)\n            {\n                s[i]='0';\n                i--;\n                if(!i)\n                {\n                    count = count + (x-i+1)+1;\n                    flag=1;\n                    break;\n                }\n\n            }\n            s[i]='1';\n            if(flag) break;\n            //i=x;\n            count+=(x-i + 1);\n        }\n    }\n    printf(\"%d\\n\",count);\n    //cout<<count<<endl;\n    return 0;\n}\n"}
{"similarity_score": 0.39759036144578314, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "3916888197dae6b3b34d5b85b8e05850", "bug_code_uid": "b990424c7ca1f28c6a268c91083c69ee", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "abd1069a5d0e6e9ad8f5336cb6b93e73", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N 100000\n\nint main() {\n\tstatic int aa[N];\n\tint n, m, i;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\twhile (m--) {\n\t\tstatic char used[N + 1];\n\t\tint l, j, k;\n\n\t\tscanf(\"%d\", &l), l--;\n\t\tk = 0;\n\t\tfor (j = l; j < n; j++)\n\t\t\tif (!used[aa[j]]) {\n\t\t\t\tk++;\n\t\t\t\tused[aa[j]] = 1;\n\t\t\t}\n\t\tprintf(\"%d\\n\", k);\n\t\tmemset(used, 0, sizeof used);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t100000\n#define A\t100000\n\nint main() {\n\tstatic int aa[N], dp[N];\n\tstatic char used[A + 1];\n\tint n, m, i, k;\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tk = 0;\n\tfor (i = n - 1; i >= 0; i--) {\n\t\tif (!used[aa[i]]) {\n\t\t\tk++;\n\t\t\tused[aa[i]] = 1;\n\t\t}\n\t\tdp[i] = k;\n\t}\n\twhile (m--) {\n\t\tint l;\n\n\t\tscanf(\"%d\", &l);\n\t\tprintf(\"%d\\n\", dp[l - 1]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5051334702258727, "equal_cnt": 24, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 23, "lang": "GNU C11", "fix_code_uid": "82f44ed499142c685c6196c4a91ea00c", "bug_code_uid": "c3f10d8c510b6de4a0e83fa8125329fe", "src_uid": "a8b4c115bedda3847e7c2e3620e3e19b", "apr_id": "2011419d6d69494e22af57b2e056a8fa", "difficulty": 1400, "tags": ["two pointers", "sortings", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <string.h>\n\nint main(){\n\tint d;\n\tscanf(\"%d\", &d);\n\tfor(int i=0; i<d; i++){\n\t\tint temp;\n\t\tscanf(\"%d\", &temp);\n\t\tint k;\n\t\tscanf(\"%d\", &k);\n\t\tint arr[k];\n\t\tfor(int j=0; j<k; j++){\n\t\t\tarr[j]=0;\n\t\t}\n\t\tfor(int j=0; j<temp; j++){\n\t\t\tint temp2;\n\t\t\tscanf(\"%d\", &temp2);\n\t\t\tarr[temp2%k]++;\n\t\t}\n\t\tint max=0;\n\t\tfor(int j=1; j<k; j++){\n\t\t\tint g=k-j+(arr[j]-1)*k;\n\t\t\tif(g>max) max=g;\n\t\t}\n\t\tif(max==0) max--;\n\t\tprintf(\"%d\\n\", max+1);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <string.h>\n\nint compare(const void* v1, const void* v2){\n    return (*(long long*)v1-*(long long*)v2);\n}\n\nint main(){\n\tint d;\n\tscanf(\"%d\", &d);\n\tfor(int i=0; i<d; i++){\n\t\tint temp;\n\t\tscanf(\"%d\", &temp);\n\t\tlong long k;\n\t\tscanf(\"%lld\", &k);\n\t\tlong long arr[temp];\n\t\tint size=0;\n\t\tfor(int j=0; j<temp; j++){\n\t\t\tlong long temp2;\n\t\t\tscanf(\"%lld\", &temp2);\n\t\t\tif(temp2%k!=0){\n\t\t\t\tarr[size]=temp2%k;\n\t\t\t\tsize++;\n\t\t\t}\n\t\t}\n\t\tqsort((void*)arr, size, sizeof(long long), compare);\n\t\tlong long max=1;\n\t\tlong long ans=0;\n\t\tlong long num=0;\n\t\tfor(int j=0; j<size-1; j++){\n\t\t\tif(arr[j]==arr[j+1]){\n\t\t\t\tmax++;\n\t\t\t\tif(j==size-2 && max>ans){\n\t\t\t\t\tans=max;\n\t\t\t\t\tnum=arr[j];\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(max>ans){\n\t\t\t\t\tans=max;\n\t\t\t\t\tnum=arr[j];\n\t\t\t\t}\t\n\t\t\t\tmax=1;\n\t\t\t}\n\t\t}\n\t\tif(ans!=0) ans=k-num+(ans-1)*k+1;\n\t\tif(size==1) ans=k+1-arr[0];\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7518394648829432, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "9794a567ecf23d04c39745b57d936121", "bug_code_uid": "57b9316d61694275f85517aa795c97ac", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "2b65f315524ad21680b583ebdfd65961", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t; //t:test cases,a: time to refreshed,b:time before the first alarm goes off ,c:time before every succeeding alarm goes off .\n    long long int a,b,c,d,count=1,dif ; // d: time spends to fall asleep again.\n    scanf(\"%d\",&t);\n    long long int results[t];\n    for(int i=0; i<t; i++)\n    {\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n        dif=c-d;\n        if(d>c&&a>b)\n            results[i]=-1;\n        else if(b>=a)\n            results[i]=b;\n        else\n        {\n            while((b+dif*count)<a)\n                count++;\n            results[i]=b+c*count;\n        }\n    }\n    for(int i=0; i<t; i++)\n        printf(\"%lld\\n\",results[i]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int t; //t:test cases,a: time to refreshed,b:time before the first alarm goes off ,c:time before every succeeding alarm goes off .\n    long long int a,b,c,d; // d: time spends to fall asleep again.\n    scanf(\"%d\",&t);\n    long long int results[t];\n    for(int i=0; i<t; i++)\n    {\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n        if(d>=c&&a>b)\n            results[i]=-1;\n        else if(b>=a)\n            results[i]=b;\n        else if(a>b&&c>d)\n        {  long long int dif_1=c-d,dif_2=a-b,multiple=(dif_2/dif_1);\n            if(dif_2%dif_1!=0)\n                multiple+=1;\n            results[i]=b+c*(multiple);\n        }\n    }\n    for(int i=0; i<t; i++)\n        printf(\"%lld\\n\",results[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.9970414201183432, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "578d632934f91735a24c016445449ecf", "bug_code_uid": "af10f78ea3d43791e763c97898d48e72", "src_uid": "ee105b664099808143a94a374d6d5daa", "apr_id": "bb03f9044fc86503a6b68173cc9e3de4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x,k,i,s=0;\n    scanf(\"%d %d\",&x,&k);\n    int n[k];\n    for(i=0;i<k;i++){\n        scanf(\"%d\",&n[i]);\n        s=s+n[i];  }\n    if(k%2==0)\n    {\n        if(n[k-1]%2==0) printf(\"even\");\n    else printf(\"odd\");\n    }\n    else\n    {\n        if(s%2==0) printf(\"even\");\n        else  printf(\"odd\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int x,k,i,s=0;\n    scanf(\"%d %d\",&x,&k);\n    int n[k];\n    for(i=0;i<k;i++){\n        scanf(\"%d\",&n[i]);\n        s=s+n[i];  }\n    if(x%2==0)\n    {\n        if(n[k-1]%2==0) printf(\"even\");\n    else printf(\"odd\");\n    }\n    else\n    {\n        if(s%2==0) printf(\"even\");\n        else  printf(\"odd\");\n    }\n}\n"}
{"similarity_score": 0.996875, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2e8391e05e0720d0ef7bb6b0e962d468", "bug_code_uid": "8f2a8abee233261f122cbe8a333ad0d3", "src_uid": "867b01e7141ef077964a8a0d4c6b762b", "apr_id": "71300098f276650ca0d64f0620da5e9a", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n\tint testcases;\r\n\tint n;\r\n\tint a[120][120];\r\n\tint count;\r\n\tint sum;\r\n\tint t,w;\r\n\tscanf(\"%d\",&testcases);\r\n\twhile(testcases--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tcount=0;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tfor(int j=0;j<n;j++){\r\n\t\t\t\tscanf(\"%1d\",&a[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tw=n;\r\n\t\tt=0;\r\n\t\twhile(w>0){\r\n\t\t\tfor(int i=t;i<t+w-1;i++){\r\n\t\t\t\tsum=a[t][t+i]+a[t+i][t+w-1]+a[t+w-1-i][t]+a[t+w-1][t+w-1-i];\r\n\t\t\t\tif(sum==0||sum==4){\r\n\t\t\t\t\tcount=count;\r\n\t\t\t\t}\r\n\t\t\t\telse if(sum==1||sum==3){\r\n\t\t\t\t\tcount+=1;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tcount+=2;\r\n\t\t\t\t}\t\t\r\n\t\t\t}\r\n\t\t\tt++;\r\n\t\t\tw=w-2;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",count);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n\tint testcases;\r\n\tint n;\r\n\tint a[120][120];\r\n\tint count;\r\n\tint sum;\r\n\tint t,w;\r\n\tscanf(\"%d\",&testcases);\r\n\twhile(testcases--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tcount=0;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tfor(int j=0;j<n;j++){\r\n\t\t\t\tscanf(\"%1d\",&a[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tw=n;\r\n\t\tt=0;\r\n\t\twhile(w>0){\r\n\t\t\tfor(int i=0;i<w-1;i++){\r\n\t\t\t\tsum=a[t][t+i]+a[t+i][t+w-1]+a[t+w-1-i][t]+a[t+w-1][t+w-1-i];\r\n\t\t\t\tif(sum==0||sum==4){\r\n\t\t\t\t\tcount=count;\r\n\t\t\t\t}\r\n\t\t\t\telse if(sum==1||sum==3){\r\n\t\t\t\t\tcount+=1;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tcount+=2;\r\n\t\t\t\t}\t\t\r\n\t\t\t}\r\n\t\t\tt++;\r\n\t\t\tw=w-2;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",count);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.4938488576449912, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "c012128eb7ff053325a190edf750a8ed", "bug_code_uid": "896078f3cd2300c3fa1f28342dab54b0", "src_uid": "28c555fefd5c36697a5082c61d8a82b3", "apr_id": "c22a815177a3b91bb05a675f6f2e403a", "difficulty": 900, "tags": ["implementation", "sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define mod 1000000007\n\nlong long arr[300005];\n\nint main() {\n\tint n;\n\t\n\tlong long result = 0;;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lld\", &arr[i]);\n\t}\n\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n - i - 1; j++) {\n\t\t\tif (arr[j] > arr[j+1]) {\n\t\t\t\tlong long temp = arr[j];\n\t\t\t\tarr[j] = arr[i];\n\t\t\t\tarr[i] = temp;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (int i = 0; i < (n >> 1); i++) {\n\t\tlong long temp = arr[i] + arr[n - i - 1];\n\t\tresult += temp * temp;\n\t}\n\n\tprintf(\"%lld\", result);\n\t \n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include<stdlib.h>\n\n#define mod 1000000007\n\nlong long arr[300005];\n\nint static compare(const void* first, const void* second)\n{\n\tif (*(long long *)first > *(long long*)second)\n\t\treturn 1;\n\telse if (*(long long*)first < *(long long*)second)\n\t\treturn -1;\n\telse\n\t\treturn 0;\n}\n\nint main() {\n\tint n;\n\n\tlong long result = 0;;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lld\", &arr[i]);\n\t}\n\n\tqsort(arr, n, sizeof(long long), compare);\n\n\tfor (int i = 0; i < (n >> 1); i++) {\n\t\tlong long temp = arr[i] + arr[n - i - 1];\n\t\tresult += temp * temp;\n\t}\n\n\tprintf(\"%lld\", result);\n\n\treturn 0;\n}"}
{"similarity_score": 0.3857482185273159, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "aee96f54af8fa7f7a3d3d339e70dcac9", "bug_code_uid": "a4e3e4526d15caae6b34585797b7007e", "src_uid": "0c2550b2df0849a62969edf5b73e0ac5", "apr_id": "1db28c28895c5f32aa0e46f59f19156f", "difficulty": 1300, "tags": ["dp", "number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*\n ============================================================================\n Name        : TechCup2017_2_C.c\n Author      : DroidCat\n ============================================================================\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint n, count;\n\nint find_composite(int a) {\n\tint i,n = 2,factor, count = 0;\n\twhile(count < a) {\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(n%i==0)\n\t\t\t{\n\t\t\t\tfactor=i;\n\t\t\t}\n\t\t}\n\t\tif(factor>1)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tn++;\n\t}\n\n\tn--;\n\n\treturn n;\n}\n\nint main(void) {\n\tscanf(\"%d\", &n);\n\n\tint a[n];\n\n\tfor(int i=0; i < n; i++) {\n\t\ta[i] = 0;\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\n\n\tfor(int i = 0; i < n; i++) {\n\t\tint t = a[i];\n\t\tif(t > 3 && t != 5 && t != 7) {\n\t\t\tint c = 1;\n\t\t\tcount = 0;\n\t\t\twhile(t != 0) {\n\t\t\t\tif(t >= find_composite(c)) {\n\t\t\t\t\twhile(t >= find_composite(c) && t != 9 && t != 6 && t != 0) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tt = t - find_composite(c);\n\t\t\t\t\t\tif(t == 9 || t == 6) {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tt=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(t < find_composite(c) && t != 0) {\n\t\t\t\t\tcount--;\n\t\t\t\t\tt = t + find_composite(c);\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(i > 0) {\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\tprintf(\"%d\", count);\n\t\t}\n\t\telse {\n\t\t\tif(i > 0) {\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\tprintf(\"-1\");\n\t\t}\n\t}\n\treturn EXIT_SUCCESS;\n}\n", "fixed": "/*\n ============================================================================\n Name        : TechCup2017_2_C.c\n Author      : DroidCat\n ============================================================================\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint n, count;\n\nint main(void) {\n\tscanf(\"%d\", &n);\n\n\tif(n <1 || n > 100000) {\n\t\treturn 1;\n\t}\n\n\tint a[n];\n\n\tfor(int i=0; i < n; i++) {\n\t\ta[i] = 0;\n\t\tscanf(\"%d\", &a[i]);\n\t\tif(a[i] < 1 || a[i] > 1000000000) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\n\tfor(int i = 0; i < n; i++) {\n\t\tint t = a[i];\n\t\tif(t > 3 && t != 5 && t != 7 && t != 11) {\n\t\t\tcount = t / 4;\n\t\t\tt = t - count*4;\n\t\t\tif(i > 0) {\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\tif(t == 0 || t == 2) {\n\t\t\t\tprintf(\"%d\", count);\n\t\t\t}\n\t\t\tif(t == 1 || t == 3) {\n\t\t\t\tcount--;\n\t\t\t\tprintf(\"%d\", count);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(i > 0) {\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t\tprintf(\"-1\");\n\t\t}\n\t}\n\treturn EXIT_SUCCESS;\n}\n"}
{"similarity_score": 0.9672131147540983, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4b1425ff1c40c70dbf3b7fdd6a22ef9b", "bug_code_uid": "cf8db7d08d7a14242e19c03cb0b2db0d", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "4eaca2ebd3745e8d4c7a880dd95a0996", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nconst int c = 3;\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    int c1, c2, n, k;\n    while (t > 0) {\n        scanf(\"%d\", &n);\n        k = n % c;\n        if (k == 1) {\n            c1 = n / c + 1;\n            c2 = n / c;\n        }\n        if (k == 2) {\n            c1 = n / c;\n            c2 = n / c + 1;\n        } else if (k == 0) {\n            c1 = n / c;\n            c2 = c1;\n        }\n        t -= 1;\n    }\n    printf(\"%d %d\", c1, c2);\n    return 0;\n}\n\n\n\n\n\n\n\n", "fixed": "#include <stdio.h>\n\nconst int c = 3;\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    int c1, c2, n, k;\n    while (t > 0) {\n        scanf(\"%d\", &n);\n        k = n % c;\n        if (k == 1) {\n            c1 = n / c + 1;\n            c2 = n / c;\n        }\n        if (k == 2) {\n            c1 = n / c;\n            c2 = n / c + 1;\n        } else if (k == 0) {\n            c1 = n / c;\n            c2 = c1;\n        }\n        t -= 1;\n        printf(\"%d %d\\n\", c1, c2);\n    }\n    return 0;\n}\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.8123149792776792, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d0c63e53756ff9b7168eb3414bf58fff", "bug_code_uid": "d01695685b7187a25171875c796bf364", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "784ff2aad303809c769cd2d7e53db1ba", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n#include<string.h>\n#include <ctype.h>\n\nint main()\n{\n    char s1[101];\n    char num[27]={\"AAAAAAAAAAAAAAAAAAAAAAAAAA\"};\n    int temp=0,len;\n    gets(s1);\n  \n    len = strlen(s1);\n    for(int i=0;i<len;i++)\n    {\n       if(isalpha(s1[i]))\n       {\n           temp = s1[i]-'a'; \n           num[temp]=s1[i];\n       }\n    }\n     len=0;\n    for(int i=0;num[i]!='\\0';i++)\n    {\n      if(num[i]!='A')\n      {\n      len++;\n      }\n    }\n    printf(\"%d\",len);\n    return 0;\n}\n", "fixed": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n#include<string.h>\n#include <ctype.h>\n\nint main()\n{\n    char s1[1001];\n    char num[27]={\"AAAAAAAAAAAAAAAAAAAAAAAAAA\"};\n    int temp=0,len;\n    gets(s1);\n  \n   // len = strlen(s1);\n    for(int i=0;s1[i]!='\\0';i++)\n    {\n       if(isalpha(s1[i]))\n       {\n           temp = s1[i]-'a'; \n           num[temp]=s1[i];\n       }\n    }\n     len=0;\n    for(int i=0;num[i]!='\\0';i++)\n    {\n      if(num[i]!='A')\n      {\n      len++;\n      }\n    }\n    printf(\"%d\",len);\n    return 0;\n}\n"}
{"similarity_score": 0.9751479289940829, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f57f2f65f021fd0ba14b22499130ddec", "bug_code_uid": "a537fc9c63dd37ca7f146981853c2b25", "src_uid": "08d13e3c71040684d5a056bd1b53ef3b", "apr_id": "aff9a7a29a3410663853899f691fb047", "difficulty": 1700, "tags": ["dp", "matrices"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int a, int b)\n{\n\tif(a<b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint main()\n{\n\tint ans,n,m,x,y,i,j,dp[2][1000],hash[1000]={0};\n\tchar a[1001][1001];\n\tscanf(\"%d %d %d %d\", &n, &m, &x, &y);\n\tfor(i=0; i<n; i++)\n\t{\n\t\tfor(j=0; j<=m; j++)\n\t\t{\n\t\t\tscanf(\"%c\", &a[i][j]);\n\t\t\tif(a[i][j] == '#')\n\t\t\thash[j] = hash[j] +1;\n\t\t}\n\t}\n/*\tfor(i=0; i<=m; i++)\n\t{\n\t\tprintf(\"i=%d hash[i]=%d\\n\",i,hash[i]);\n\t}*/\n\tfor(i=1; i<=m; i++)\n\t{\n\t\thash[i] = hash[i] + hash[i-1];\n\t//\tprintf(\"i=%d %d\\n\",i, hash[i]);\n\t}\n\tfor(i=0; i<=m; i++)\n\t{\n\t\tdp[0][i] = dp[1][i] = m*n;\n\t}\n\tdp[0][0]=0;\n\tdp[1][0]=0;\n\tfor(i=0; i<=m; i++)\n\t{\n\t\tfor(j=x; j<=y && i+j<=m; j++)\n\t\t{\n\t\tdp[0][i+j] = min(dp[0][i+j], dp[1][i] + hash[i+j]-hash[i]);\n\t\tdp[1][i+j] = min(dp[1][i+j], dp[0][i] + j*n -( hash[i+j]-hash[i]));\n\t\t}\n\t}\n\tans = min(dp[0][m], dp[1][m]);\n\tprintf(\"%d\\n\", ans);\n\n\n}\t\n\n", "fixed": "#include<stdio.h>\nint min(int a, int b)\n{\n\tif(a<b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nint main()\n{\n\tint ans,n,m,x,y,i,j,dp[2][1003]={0},hash[1003]={0};\n\tchar a[1002][1002];\n\tscanf(\"%d %d %d %d\", &n, &m, &x, &y);\n\tfor(i=0; i<n; i++)\n\t{\n\t\tfor(j=0; j<=m; j++)\n\t\t{\n\t\t\tscanf(\"%c\", &a[i][j]);\n\t\t\tif(a[i][j] == '#')\n\t\t\thash[j] = hash[j] +1;\n\t\t}\n\t}\n/*\tfor(i=0; i<=m; i++)\n\t{\n\t\tprintf(\"i=%d hash[i]=%d\\n\",i,hash[i]);\n\t}*/\n\tfor(i=1; i<=m; i++)\n\t{\n\t\thash[i] = hash[i] + hash[i-1];\n\t//\tprintf(\"i=%d %d\\n\",i, hash[i]);\n\t}\n\tfor(i=0; i<=m; i++)\n\t{\n\t\tdp[0][i] = dp[1][i] = m*n;\n\t}\n\tdp[0][0]=0;\n\tdp[1][0]=0;\n\tfor(i=0; i<=m; i++)\n\t{\n\t\tfor(j=x; j<=y && i+j<=m; j++)\n\t\t{\n\t\tdp[0][i+j] = min(dp[0][i+j], dp[1][i] + hash[i+j]-hash[i]);\n\t\tdp[1][i+j] = min(dp[1][i+j], dp[0][i] + j*n -( hash[i+j]-hash[i]));\n\t\t}\n\t}\n\tans = min(dp[0][m], dp[1][m]);\n\tprintf(\"%d\\n\", ans);\n\n\n}\t\n\n"}
{"similarity_score": 0.987012987012987, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "4f4d7791d2340641668c45054b0e5372", "bug_code_uid": "5060c137f2331efeacbea11684f35e12", "src_uid": "926ec28d1c80e7cbe0bb6d209e664f48", "apr_id": "9f477c61084dca808d57e873af3938a1", "difficulty": 1500, "tags": ["data structures", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint compare (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n    int n, q;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &q);\n    int array[n + 1], index_count[n + 1], i = 0, j = 0;\n    array[0] = 0;\n    index_count[0] = 0;\n    for(i = 1; i < (n + 1); i++)\n    {\n        scanf(\"%d\", &array[i]);\n        index_count[i] = 0;\n    }\n    int ql, qr;\n    for(i = 0; i < q; i++)\n    {\n        scanf(\"%d\", &ql);\n        scanf(\"%d\", &qr);\n        index_count[ql]++;\n        if(qr != n)\n        {\n            index_count[qr + 1]--;\n        }\n    }\n    for(i = 1; i <= n; i++)\n    {\n        index_count[i] = index_count[i] + index_count[i - 1];\n    }\n    qsort(array, n + 1, sizeof(int), compare);\n    qsort(index_count, n + 1, sizeof(int), compare);\n    long sum = 0;\n    for(i = n; i > 0; i--)\n    {\n        sum = sum + index_count[i]*array[i];\n    }\n    printf(\"%ld\\n\", sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint compare (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint main()\n{\n    int n, q;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &q);\n    int array[n + 1], index_count[n + 1], i = 0, j = 0;\n    array[0] = 0;\n    index_count[0] = 0;\n    for(i = 1; i < (n + 1); i++)\n    {\n        scanf(\"%d\", &array[i]);\n        index_count[i] = 0;\n    }\n    int ql, qr;\n    for(i = 0; i < q; i++)\n    {\n        scanf(\"%d\", &ql);\n        scanf(\"%d\", &qr);\n        index_count[ql]++;\n        if(qr != n)\n        {\n            index_count[qr + 1]--;\n        }\n    }\n    for(i = 1; i <= n; i++)\n    {\n        index_count[i] = index_count[i] + index_count[i - 1];\n    }\n    qsort(array, n + 1, sizeof(int), compare);\n    qsort(index_count, n + 1, sizeof(int), compare);\n    long long int sum = 0;\n    for(i = n; i > 0; i--)\n    {\n        sum = sum + (long long int)index_count[i]*array[i];\n    }\n    printf(\"%lld\\n\", sum);\n    return 0;\n}\n"}
{"similarity_score": 0.07716049382716049, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a22a6f4e013c980bfe20d898462b6450", "bug_code_uid": "fa20c6a79a61007bcb9dffc8228ab35a", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "26e7b6865b11b9c05b3f381bf5362d71", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid ajoute(int *h,int *m,int a)\n{  int s=(*h)*60+(*m);\n\ts=s+a;\n\t*h=s/60;\n\t*m=s%60;\n\tif(*h>23)\n\t*h=*h%24;\n}\nint main()\n{\n\tint m,h,a;\n\tscanf(\"%d:%d\",&h,&m);\n\tscanf(\"%d\",&a);\n\tajoute(&h,&m,a);\n\t\n    if (m<=9 &&h<=9)\n    printf(\"0%d:0%d\",h,m);\n    else \n    if(m>9 && h>9)\n    printf(\"%d:%d\",h,m);\n    else \n    if (m>9 && h<=9)\n    printf(\"0%d:%d\",h,m);\n    else\n    printf(\"%d:0%d\",h,m);\n    return 0;\n}\n    \n", "fixed": "#include<stdio.h>\nint main()\n{\nint t1[2000],a,b,n,s;\nscanf(\"%d%d\",&a,&b);\nfor ( int i=0;i<a;i++)\n   scanf(\"%d\",&t1[i]);\n\ns=0;\nfor(int i=0;i<a;i++)\n {\n  if (5-t1[i] >=b)\n   s=s+1;\n}\n n=s/3;\n\nprintf(\"%d\",n);\nreturn (0);\n}\n\n\n"}
{"similarity_score": 0.8058823529411765, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "b460a8f5d7c984abc5e9c717bac8020c", "bug_code_uid": "271cd7547db716d3ce23b069f8e86090", "src_uid": "977db81b5c1d3725e384e8f093655172", "apr_id": "beb18e73c0fc7a6b7de01fe74fcdcd93", "difficulty": 1500, "tags": ["dp", "two pointers", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tint t, i, j, k;\n\tchar s[100001];\n\tint cnt, max, flag;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%s\", &s);\n\t\tmax = -1;\n\t\t//flag = 0;\n\t\tfor(i = 0; i < 10; i++){\n\t\t\tfor(j = 0; j < 10; j++){\n\t\t\t\tflag = 0;\n\t\t\t\tcnt = 0;\n\t\t\t\tfor(k = 0; k < strlen(s); k++){\n\t\t\t\t\tif(flag == 0){\n\t\t\t\t\t\tif(s[k] - '0' == i){\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(s[k] - '0' == j){\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tflag = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//printf(\"%d %d %d\\n\", i, j, cnt);\n\t\t\t\tif(cnt > max){\n\t\t\t\t\tmax = cnt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", strlen(s) - max);\n\t\t\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tint t, i, j, k, cnt, max, flag;\n\tchar s[200001];\n\tchar c, d;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t\tscanf(\"%s\", &s);\n\t\tmax = -1;\n\t\t//flag = 0;\n\t\tfor(i = 0; i < 10; i++){\n\t\t\tfor(j = 0; j < 10; j++){\n\t\t\t\tflag = 0;\n\t\t\t\tcnt = 0;\n\t\t\t\tfor(k = 0; k < strlen(s); k++){\n\t\t\t\t\tif(flag == 0){\n\t\t\t\t\t\tif(s[k] - '0' == i){\n\t\t\t\t\t\t\tc = s[k];\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(s[k] - '0' == j){\n\t\t\t\t\t\t\td = s[k];\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tflag = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//printf(\"%d %d %d %d\\n\", i, j, cnt, max);\n\t\t\t\tif(cnt > max){\n\t\t\t\t\tif(c == d)\n\t\t\t\t\t\tmax = cnt;\n\t\t\t\t\telse if(cnt % 2 == 0)\n\t\t\t\t\t\tmax = cnt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", strlen(s) - max);\n\t\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9962073324905183, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a1fff1faa1107ecbf12df9bf86763deb", "bug_code_uid": "f350dcc2cd7c4638a29043638af91b5b", "src_uid": "2d4ad39d42b349765435b351897403da", "apr_id": "a61fa02844f23443825cd64f81974f5b", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int a,b,c;\n    double x1,x2,D;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    D=sqrt((b*b)-4*a*c));\n    x1=(-b+D)/(2*a));\n    x2=(-b-D)/(2*a));\n\n    if(x1>x2)\n        {\n            printf(\"%.20lf\\n\",x1);\n            printf(\"%.20lf\",x2);\n        }\n    else\n        {\n            printf(\"%.20lf\\n\",x2);\n            printf(\"%.20lf\",x1);\n        }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n    int a,b,c;\n    double x1,x2,D;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    D=sqrt((b*b)-4*a*c);\n    x1=(-b+D)/(2*a);\n    x2=(-b-D)/(2*a);\n\n    if(x1>x2)\n        {\n            printf(\"%.20lf\\n\",x1);\n            printf(\"%.20lf\",x2);\n        }\n    else\n        {\n            printf(\"%.20lf\\n\",x2);\n            printf(\"%.20lf\",x1);\n        }\n    return 0;\n}\n"}
{"similarity_score": 0.8983451536643026, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d6b23aab90bc76769841fc242c4aadf2", "bug_code_uid": "34e74a863525f999b7f67d356c33e7e7", "src_uid": "d8d33581ceb13da9bb99e90296bdd8f7", "apr_id": "fd64b941b394ba5b263d57f103e728af", "difficulty": 1100, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n \r\nint main() {\r\n    int q, n;\r\n    int p, t, cnt, g, f;\r\n    scanf(\"%d\", &q);\r\n    for (int k = 0; k < q; k++) {\r\n        scanf(\"%d\", &n);\r\n        cnt = 0;\r\n        g = -1;\r\n        f = 0;\r\n        scanf(\"%d\", &p);\r\n        for (int i = 0; i < n - 1; i++) {\r\n            scanf(\"%d\", &t);\r\n            if (p < t) {\r\n                cnt++;\r\n                if (g == -1) {\r\n                    g = i;\r\n                } if (i != g + 1)\r\n                    f = 1;\r\n            }\r\n            p = t;\r\n        }\r\n        if (n % 2 == 0 || (f && cnt < n - 1))\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n \r\nint main() {\r\n    int q, n;\r\n    int p, t, cnt, g, f, f1;\r\n    scanf(\"%d\", &q);\r\n    for (int k = 0; k < q; k++) {\r\n        scanf(\"%d\", &n);\r\n        cnt = 0;\r\n        g = -1;\r\n        f = 0;\r\n        f1 = 0;\r\n        scanf(\"%d\", &p);\r\n        for (int i = 0; i < n - 1; i++) {\r\n            scanf(\"%d\", &t);\r\n            if (p < t)\r\n                cnt++;\r\n            if (p == t) {\r\n                f1 = 1;\r\n            }\r\n            p = t;\r\n        }\r\n        if (n % 2 == 0 || (cnt < n - 1) || f1)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9961464354527938, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "34ce79537514a7ee2722e6ae5ead4843", "bug_code_uid": "463cc404c01cf24b1129a924b922fc2e", "src_uid": "67af292ff23880ad9fd4349729e36158", "apr_id": "537720e719fdfe0750162514526792f3", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{  int i,n,j,min=9999999999,max=9999999999,f=0,e=0;\nscanf(\"%d\",&n);\nint arr[n],c=1;\nfor(i=0;i<n;i++){\n    scanf(\"%d\",&arr[i]);\n    if(arr[i]<=min)\n      {\n\n\n        min=arr[i];}\n}\nint d[10000];\nfor(i=0;i<n;i++){\n    if(arr[i]==min){\n       for(j=i+1;j<n;j++){\n\n        if(arr[j]==min){\n                d[e++]=j-i;\n         break;\n\n        }\n\n}\n\n\n\n}}\nfor(i=0;i<e;i++){\n    if(d[i]<max){\n        max=d[i];\n    }\n}\n\nprintf(\"%d\",max);\n\n\n\n    return 0;}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{  int i,n,j,min=99999999999,max=99999999999,f=0,e=0;\nscanf(\"%d\",&n);\nint arr[n],c=1;\nfor(i=0;i<n;i++){\n    scanf(\"%d\",&arr[i]);\n    if(arr[i]<min)\n      {\n\n\n        min=arr[i];}\n}\nint d[100000];\nfor(i=0;i<n;i++){\n    if(arr[i]==min){\n       for(j=i+1;j<n;j++){\n\n        if(arr[j]==min){\n                d[e++]=j-i;\n         break;\n\n        }\n\n}\n\n\n\n}}\nfor(i=0;i<e;i++){\n    if(d[i]<max){\n        max=d[i];\n    }\n}\n\nprintf(\"%d\",max);\n\n\n\n    return 0;}\n"}
{"similarity_score": 0.6971153846153846, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "888e05bb8e832d637d38791739d263f8", "bug_code_uid": "adc77c3ea7273fdb4345283ae59e9753", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "4ca7bdd173c9561574a2802786c5e1d9", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tlong long int n,k,q;\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t!=0) {q=0;\n\t\tscanf(\"%lld%lld\",&n,&k);\n\t\twhile(n!=0) {\n\t\t\tif(n%k==0) {n=n/k; q++;} else {n--; q++;}\n\t}\n\tprintf(\"%lld\\n\",q);\n\tt--;\n\t}}\n", "fixed": "#include<stdio.h>\nmain()\n{\n\tlong long int n,k,q,w;\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t!=0) {q=0; w=0;\n\t\tscanf(\"%lld%lld\",&n,&k);\n\t\twhile(n!=0) { q++; w=w+n%k; n=n/k; }\n\tprintf(\"%lld\\n\",q+w-1);\n\tt--;\n\t}}\n"}
{"similarity_score": 0.9856353591160221, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0ff014f1e061a67c90b4e9422806a718", "bug_code_uid": "19dc7f37ad1f3e6303a51641781f0fed", "src_uid": "fd1b846c46a074f6afa1fa6e2844c3e2", "apr_id": "ac83caa684044468fd7be2e4838789e9", "difficulty": 1000, "tags": ["binary search", "greedy", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/**\r\n * @Author: Yang Li\r\n * @Date:   2022-03-21 20:46:18\r\n * @Last Modified by:   Yang Li\r\n * @Last Modified time: 2022-03-21 22:03:02\r\n */\r\n/*\r\n\u5bf9\u6240\u6709\u8001\u9f20\u4ece\u8fd1\u5230\u8fdc\u6392\u5e8f\uff0c\u7136\u540e\u8ba1\u7b97\u8fd9\u4e2a\u8001\u9f20\u8dd1\u5230\u6d1e\u91cc\u9700\u8981\u7684\u65f6\u95f4\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u4e4b\u524d\u7684\u732b\u5230\u6d1e\u91cc\u9700\u8981\u7684\u65f6\u95f4\r\n\u5df2\u53ea\u732b\u5230\u6d1e\u7684\u65f6\u95f4\uff0c\u7136\u540e\u5c31\u662f\u770b\u8fd9\u4e2a\u65f6\u95f4\u5185\u6709\u591a\u5c11\u53ea\u8001\u9f20\u53ef\u4ee5\u5230\u6d1e\u91cc\r\n*/\r\n# include <stdio.h>\r\n# include <stdlib.h>\r\n\r\nint comp(const void * a, const void * b) {\r\n    return *((int *) b) - *((int *) a);\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int n, k;\r\n    while (t--) {\r\n        scanf(\"%d %d\", &n, &k);\r\n        int x[k];\r\n        for (int i = 0; i < k; i++) {\r\n            scanf(\"%d\", &x[i]);\r\n        }\r\n        // \u9006\u5e8f\u6392\u5217\r\n        qsort(x, k, sizeof(int), comp);\r\n        int i = 0, step = 0;\r\n        while (i < k && step < x[i]) {\r\n            // printf(\"%d %d %d\\n\", i, x[i], step);\r\n            step += n-x[i];\r\n            i++;\r\n        }\r\n        printf(\"%d\\n\", i);\r\n    }\r\n    return 0;\r\n}\r\n// 9 8 7 5 4 4\r\n// 1 3 6 ", "fixed": "/**\r\n * @Author: Yang Li\r\n * @Date:   2022-03-21 20:46:18\r\n * @Last Modified by:   Yang Li\r\n * @Last Modified time: 2022-03-21 22:08:20\r\n */\r\n/*\r\n\u5bf9\u6240\u6709\u8001\u9f20\u4ece\u8fd1\u5230\u8fdc\u6392\u5e8f\uff0c\u7136\u540e\u8ba1\u7b97\u8fd9\u4e2a\u8001\u9f20\u8dd1\u5230\u6d1e\u91cc\u9700\u8981\u7684\u65f6\u95f4\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u4e4b\u524d\u7684\u732b\u5230\u6d1e\u91cc\u9700\u8981\u7684\u65f6\u95f4\r\n\u5df2\u53ea\u732b\u5230\u6d1e\u7684\u65f6\u95f4\uff0c\u7136\u540e\u5c31\u662f\u770b\u8fd9\u4e2a\u65f6\u95f4\u5185\u6709\u591a\u5c11\u53ea\u8001\u9f20\u53ef\u4ee5\u5230\u6d1e\u91cc\r\n*/\r\n# include <stdio.h>\r\n# include <stdlib.h>\r\n\r\nint comp(const void * a, const void * b) {\r\n    return *((int *) b) - *((int *) a);\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    int n, k;\r\n    while (t--) {\r\n        scanf(\"%d %d\", &n, &k);\r\n        int x[k];\r\n        for (int i = k; i > 0; --i) {\r\n            scanf(\"%d\", &x[i-1]);\r\n        }\r\n        // \u9006\u5e8f\u6392\u5217\r\n        qsort(x, k, sizeof(int), comp);\r\n        int i = 0, step = 0;\r\n        while (i < k && step < x[i]) {\r\n            // printf(\"%d %d %d\\n\", i, x[i], step);\r\n            step += n-x[i];\r\n            i++;\r\n        }\r\n        printf(\"%d\\n\", i);\r\n    }\r\n    return 0;\r\n}\r\n// 9 8 7 5 4 4\r\n// 1 3 6 "}
{"similarity_score": 0.8968957871396895, "equal_cnt": 15, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 13, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "b9535780941d07c37b8ec7f901d39b1b", "bug_code_uid": "51701062b4140da62fbe28cbd0827120", "src_uid": "5b1f33228a58d9e14bc9479767532c25", "apr_id": "52eb34c3170710da7e1bcd52a8c2e5d1", "difficulty": 1100, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint wins(int hc,int hm,int dc,int dm) {\r\n    int sm;\r\n    if (hm%dc!=0) {\r\n        sm=hm/dc+1;\r\n    }\r\n    else {\r\n        sm=hm/dc;\r\n    }\r\n    int sc;\r\n    if (hc%dm==0) {\r\n        sc=hc/dm;\r\n    }\r\n    else {\r\n        sc=hc/dm+1;\r\n    }\r\n    if (sm<sc+1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--) {\r\n        int s=0;\r\n        int hc,dc,hm,dm;\r\n        scanf(\"%d %d %d %d\",&hc,&dc,&hm,&dm);\r\n        int k,w,a;\r\n        scanf(\"%d %d %d\",&k,&w,&a);\r\n        for (int i=0;i<=k;i++) {\r\n            if (wins(hc+(a*i),hm,dc+(w*(k-i)),dm)) {\r\n                s=1;\r\n                break;\r\n            }\r\n        }\r\n        if (s) {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint wins(long long int hc,long long int hm,long long int dc,long long int dm) {\r\n    long long int sm;\r\n    if (hm%dc!=0) {\r\n        sm=hm/dc+1;\r\n    }\r\n    else {\r\n        sm=hm/dc;\r\n    }\r\n    long long int sc;\r\n    if (hc%dm==0) {\r\n        sc=hc/dm;\r\n    }\r\n    else {\r\n        sc=hc/dm+1;\r\n    }\r\n    if (sm<sc+1) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nint main() {\r\n    long long int t;\r\n    scanf(\"%lld\", &t);\r\n    while (t--) {\r\n        long long int s=0;\r\n        long long int hc,dc,hm,dm;\r\n        scanf(\"%lld %lld %lld %lld\",&hc,&dc,&hm,&dm);\r\n        long long int k,w,a;\r\n        scanf(\"%lld %lld %lld\",&k,&w,&a);\r\n        for (int i=0;i<=k;i++) {\r\n            if (wins(hc+(a*i),hm,dc+(w*(k-i)),dm)) {\r\n                s=1;\r\n                break;\r\n            }\r\n        }\r\n        if (s) {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.9987096774193548, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2b6f192f078b40776fb9ae43c7efb13e", "bug_code_uid": "901a1ee8dc2cf26466434af90eb21d8e", "src_uid": "f4779e16e0857e6507fdde55e6d4f982", "apr_id": "eae679703b3cccb6b4e591e697f3eb89", "difficulty": null, "tags": ["constructive algorithms", "probabilities"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h> \n#include<stdlib.h>\nvoid print_index(int a)\n{\n\tint n=0;\n\twhile(n!=a)\n\t{\n\t\tif(n!=a-1)\n\t\tprintf(\"%d\",n+2);\n\t\telse printf(\"1\");\n\t\tn++;\n\t}\n}\nint main()\n{\n\tint i=0,n,t;\n\tscanf(\"%d\",&t);\n\tint *p=NULL,*d=NULL;\n\tp=(int *)calloc(t,sizeof(int));\n\tfor(;i<t;i++)\n\t{\n\t\tscanf(\"%d\",p+i);\n\t}\n\tfor(i=0;i<t;i++)\n\t{\n\t\t\tprint_index(*(p+i));\n\t\t\tif(i!=t-1)\n\t\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h> \n#include<stdlib.h>\nvoid print_index(int a)\n{\n\tint n=0;\n\twhile(n!=a)\n\t{\n\t\tif(n!=a-1)\n\t\tprintf(\"%d \",n+2);\n\t\telse printf(\"1\");\n\t\tn++;\n\t}\n}\nint main()\n{\n\tint i=0,n,t;\n\tscanf(\"%d\",&t);\n\tint *p=NULL,*d=NULL;\n\tp=(int *)calloc(t,sizeof(int));\n\tfor(;i<t;i++)\n\t{\n\t\tscanf(\"%d\",p+i);\n\t}\n\tfor(i=0;i<t;i++)\n\t{\n\t\t\tprint_index(*(p+i));\n\t\t\tif(i!=t-1)\n\t\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.966168371361133, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ca1ceed055874cff59bd1cc9090719b0", "bug_code_uid": "28ba776c8088bc659d0609acdaeb4b6c", "src_uid": "3adc75a180d89077aa90bbe3d8546e4d", "apr_id": "4971e170b190a0f34cbf744f96c6e8ad", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n;\nint i;\nint key,k;\nint d;\nint ans1,ans2;\nchar ch[100005];\n\nvoid ifr();\nvoid ifb();\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",&ch);\n\ti=0;\n\tkey=0;\n\tk=0;\n\td=0;\n\tifr();\n\tk=k-key;\n\tif(k<0)\n\t\tk=-k;\n\tans1=(d-k)/2+k;\n\n\ti=0;\n\tkey=0;\n\tk=0;\n\td=0;\n\tifb();\n\tk=k-key;\n\tif(k<0)\n\t\tk=-k;\n\tans2=(d-k)/2+k;\n\tprintf(\"%d\\n\",ans1>=ans2?ans2:ans1);\n\tprintf(\"%d %d\\n\",ans1,ans2);           //\n\treturn 0;\n}\n\nvoid ifr()\n{\n\tif(i>=n)\n\t\treturn ;\n\telse\n\t{\n\t\tif(ch[i]=='r')\n\t\t\tk++;\n\t\telse\n\t\t\td++;\n\t\tkey++;\n\t\ti++;\n\t\tifb();\n\t}\n\treturn ;\n}\n\nvoid ifb()\n{\n\tif(i>=n)\n\t\treturn ;\n\telse\n\t{\n\t\tif(ch[i]=='b');\n\t\telse\n\t\t{\n\t\t\td++;\n\t\t\tk++;\n\t\t}\n\t\ti++;\n\t\tifr();\n\t}\n\treturn ;\n}\n", "fixed": "#include <stdio.h>\n\nint n;\nint i;\nint key,k;\nint d;\nint ans1,ans2;\nchar ch[100005];\n\nvoid ifr();\nvoid ifb();\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",&ch);\n\ti=0;\n\tkey=0;\n\tk=0;\n\td=0;\n\tifr();\n\tk=k-key;\n\tif(k<0)\n\t\tk=-k;\n\tans1=(d-k)/2+k;\n\n\ti=0;\n\tkey=0;\n\tk=0;\n\td=0;\n\tifb();\n\tk=k-key;\n\tif(k<0)\n\t\tk=-k;\n\tans2=(d-k)/2+k;\n\tprintf(\"%d\\n\",ans1>=ans2?ans2:ans1);\n\treturn 0;\n}\n\nvoid ifr()\n{\n\tif(i>=n)\n\t\treturn ;\n\telse\n\t{\n\t\tif(ch[i]=='r')\n\t\t\tk++;\n\t\telse\n\t\t\td++;\n\t\tkey++;\n\t\ti++;\n\t\tifb();\n\t}\n\treturn ;\n}\n\nvoid ifb()\n{\n\tif(i>=n)\n\t\treturn ;\n\telse\n\t{\n\t\tif(ch[i]=='b');\n\t\telse\n\t\t{\n\t\t\td++;\n\t\t\tk++;\n\t\t}\n\t\ti++;\n\t\tifr();\n\t}\n\treturn ;\n}\n"}
{"similarity_score": 0.10331632653061225, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "3f14cd9f9a5992bd6d2cb630f5a2dc33", "bug_code_uid": "12f0f4af786d83ccfaed4c6d22eb5b41", "src_uid": "386345016773a06b9e190a55cc3717fa", "apr_id": "acd68512ddf04e2a682fad541026b780", "difficulty": 1400, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "main(){\n    long long int n,num=1,length;\n    scanf(\"%lld\",&n);\n    if(n<3)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    while(--n)\n    {\n        num*=10;\n    }\n    length=num;\n    int count=0;\n    while(count!=4)\n    {\n        count=0;\n        if(num%2==0)\n            count++;\n        if(num%3==0)\n            count++;\n        if(num%5==0)\n            count++;\n        if(num%7==0)\n            count++;\n        num++;\n        if(length==num/10)\n        {\n            printf(\"-1\\n\");\n            return 0;\n        }\n    }\n    printf(\"%lld\\n\",num-1);\n    return 0;\n}\n", "fixed": "main () {\n    int n,i;\n    scanf(\"%d\", &n);\n    if(n<3)\n        printf(\"-1\");\n    else if(n==3)\n        printf(\"210\");\n    else {\n        if(n%6==0) {\n            printf(\"1\");\n            for(i = 1; i <= n-4;i++)\n                printf(\"0\");\n            printf(\"170\");\n        }\n        else if(n%6==1) {\n            printf(\"1\");\n            for(i = 1; i <= n-3;i++) printf(\"0\");\n            printf(\"20\");\n        }\n        else if(n%6==2) {\n            printf(\"1\");\n            for(i = 1; i <= n-4;i++) printf(\"0\");\n            printf(\"200\");\n        }\n        else if(n%6==3) {\n            printf(\"1\");\n            for(i = 1; i <= n-4;i++) printf(\"0\");\n            printf(\"110\");\n        }\n        else if(n%6==4) {\n            printf(\"1\");\n            for(i = 1; i <= n-3;i++) printf(\"0\");\n            printf(\"50\");\n        }\n        else if(n%6==5) {\n            printf(\"1\");\n            for(i = 1; i <= n-3;i++) printf(\"0\");\n            printf(\"80\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5963114754098361, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "dd499a122521d5278aa50c58f31bbb40", "bug_code_uid": "22356d722b1edf628bf4e6886c76efd5", "src_uid": "aeea2ca73f1b5c5b86fb508afcbec68a", "apr_id": "1122802beb35fa5439d06dfac88dde05", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d\",&n);\r\n        if(n%2==0){\r\n            int x=1,y=5;\r\n            printf(\"%d\\n\",n/2);\r\n            for(int j=1;j<=(n/2);j++){\r\n                printf(\"%d %d\\n\",x,y);\r\n                x=x+6;\r\n                y=y+6;\r\n            }\r\n        }\r\n        else{\r\n            int x=1,y=5;\r\n            printf(\"%d\\n\",(n+1)/2);\r\n            for(int j=1;j<=((n+1)/2)-1;j++){\r\n                printf(\"%d %d\\n\",x,y);\r\n                x=x+6;\r\n                y=y+6;\r\n            }\r\n            printf(\"%d %d\\n\",x,x+1);\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d\",&n);\r\n        int x=1,y=3*n;\r\n        printf(\"%d\\n\",(n+1)/2);\r\n        for(int j=1;j<=(n+1)/2;j++){\r\n            printf(\"%d %d\\n\",x,y);\r\n            x=x+3;\r\n            y=y-3;\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9487323943661972, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "0158557dc2944357739d7d88851a8b32", "bug_code_uid": "cf8cb7ab7235652c9e05c05eee632bc4", "src_uid": "9cc61be7dc9b79f46a3e796db0134173", "apr_id": "703913ec3e7bb5da625212d36da86c61", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\nint biggestnumberposition(int a[],int n);\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint k,n;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tint a[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tint positions[k];\n\tint sum=0;\n\n\n\tfor (int i = 0; i < k; ++i)\n\t{\n\t positions[i] =biggestnumberposition(a,n);\n\t sum=sum+a[positions[i]];\n\t a[positions[i]]=-1;\n\t}\n\tprintf(\"%d\\n\",sum);\n\tqsort(positions, k, sizeof(int), cmpfunc);\n\tprintf(\"%d \",(positions[0]+2));\n\n\tfor (int i = 1; i < k-1; ++i)\n\t{\n\t\tprintf(\"%d \",(1+positions[i]-positions[i-1]));\n\t}\n\tprintf(\"%d \",(n-positions[k-1]));\n\treturn 0;\n}\n\n\nint biggestnumberposition(int a[],int n)\n{\n\tint biggest = 0;\n\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tif (a[i]>a[biggest])\n\t\t{\n\t\t\t/* code */\n\t\t\tbiggest=i;\n\n\t\t}\n\t}\n\treturn biggest;\n}", "fixed": "#include<stdio.h>\n#include <stdlib.h>\nint biggestnumberposition(int a[],int n);\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint k,n;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tint a[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\n\tint positions[k];\n\tint sum=0;\n\n\n\tfor (int i = 0; i < k; ++i)\n\t{\n\t positions[i] =biggestnumberposition(a,n);\n\t sum=sum+a[positions[i]];\n\t a[positions[i]]=-1;\n\t}\n\tprintf(\"%d\\n\",sum);\n\tqsort(positions, k, sizeof(int), cmpfunc);\n\tif(k==1)\n\t{\n\t\tprintf(\"%d\",n);\n\t\treturn 0;\n\t}\n\tprintf(\"%d \",(positions[0]+1));\n\n\tfor (int i = 1; i < k-1; ++i)\n\t{\n\t\tprintf(\"%d \",(positions[i]-positions[i-1]));\n\t}\n\tif(k>1)\n\tprintf(\"%d \",(n-positions[k-2]-1));\n\treturn 0;\n}\n\n\nint biggestnumberposition(int a[],int n)\n{\n\tint biggest = 0;\n\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tif (a[i]>a[biggest])\n\t\t{\n\t\t\t/* code */\n\t\t\tbiggest=i;\n\n\t\t}\n\t}\n\treturn biggest;\n}"}
{"similarity_score": 0.9800629590766002, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e9966a4de305a012f03c1ba8cf395bc5", "bug_code_uid": "fcd360d58f91c63a84c6f3b0a4575e6d", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "b8a9d7d6ccb6acb1e88d146c31423f67", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define ll long long\nll k,L,R;\nll bin(ll L, ll R, ll i){\n\tif(!i) return 0;\n\tif(L+i*k<=R) return i+bin(L+i*k, R, i<<1);\n\tif(L+i*k >R) return   bin(L, R, i>>1);\n}\nint main(){\n\tscanf(\"%I64d%I64d%I64d\",&k,&L,&R);\n\tif(L==R)\t\t\t printf(\"%I64d\\n\", L%k==0);\n\telse if(R>=0&&L<=0)  printf(\"%I64d\\n\", bin(0, R,1)+bin(0,-L,1)+1);\n\telse if(R>0&&L>0)\t printf(\"%I64d\\n\", bin(0, R,1)-bin(0, L,1)+(L%k==0));\n\telse\t\t\t\t printf(\"%I64d\\n\", bin(0,-L,1)-bin(0,-R,1)+(R%k==0));\n}\n", "fixed": "#include <stdio.h>\n#define ll long long\nll k,L,R;\nll bin(ll L, ll R, ll i){\n\tif(!i) return 0;\n\tif(L+i*k<=R) return i+bin(L+i*k, R, i<<1);\n\tif(L+i*k >R) return   bin(L, R, i>>1);\n}\nint main(){\n\tscanf(\"%I64d%I64d%I64d\",&k,&L,&R);\n\tif(L==R)\t\t\t printf(\"%I64d\\n\", (ll)(L%k==0));\n\telse if(R>=0&&L<=0)  printf(\"%I64d\\n\", bin(0, R,1)+bin(0,-L,1)+1);\n\telse if(R>0&&L>0)\t printf(\"%I64d\\n\", bin(0, R,1)-bin(0, L,1)+(L%k==0));\n\telse\t\t\t\t printf(\"%I64d\\n\", bin(0,-L,1)-bin(0,-R,1)+(R%k==0));\n}"}
{"similarity_score": 0.6077947705969413, "equal_cnt": 16, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "79146c61ac4436351d0b3b587bdd5a21", "bug_code_uid": "71edf35ea8b77d3feea319c981e0a996", "src_uid": "d15cffca07768f8ce6fab7e13a6e7976", "apr_id": "854730debbe0f1d032e0629323f9f865", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long long int n,q;\r\n        scanf(\"%lld%lld\",&n,&q);\r\n        long long int i,a[n];\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%lld\",&a[i]);\r\n        }\r\n        while(q--)\r\n        {\r\n            long long int type,x,sum=0;\r\n            scanf(\"%lld%lld\",&type,&x);\r\n            if(type==0)\r\n            {\r\n                for(i=0;i<n;i++)\r\n                {\r\n                    if(a[i]%2==0)\r\n                    {\r\n                        a[i]+=x;\r\n                    }\r\n                    sum+=a[i];\r\n                }\r\n            }\r\n            else\r\n            {\r\n                for(i=0;i<n;i++)\r\n                {\r\n                    if(a[i]%2!=0)\r\n                    {\r\n                        a[i]+=x;\r\n                    }\r\n                    sum+=a[i];\r\n                }\r\n            }\r\n            printf(\"%lld\\n\",sum);\r\n        }\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long long int n,q,even=0,odd=0,sum=0;\r\n        scanf(\"%lld%lld\",&n,&q);\r\n        long long int i,a[n];\r\n        for(i=0; i<n; i++)\r\n        {\r\n            scanf(\"%lld\",&a[i]);\r\n            sum+=a[i];\r\n            if(a[i]%2==0)\r\n            {\r\n                even++;\r\n            }\r\n            else\r\n            {\r\n                odd++;\r\n            }\r\n        }\r\n        while(q--)\r\n        {\r\n\r\n            long long int type,x;\r\n            scanf(\"%lld%lld\",&type,&x);\r\n            if(type==0)\r\n            {\r\n                sum+=(even*x);\r\n                if(x%2!=0)\r\n                {\r\n                    odd+=even;\r\n                    even=0;\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                sum+=(odd*x);\r\n                if(x%2!=0)\r\n                {\r\n                    even+=odd;\r\n                    odd=0;\r\n                }\r\n\r\n            }\r\n            printf(\"%lld\\n\",sum);\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9682683590208522, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e6f1c6275c2f1986ceace2a586341ed1", "bug_code_uid": "fba1fe87fb19e8c4071fdfb799ecbc32", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "51f8d0e3f4982f132c0936fa4cd8c368", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n\tlong long int n,sum=0;\n\tint i;\n\tchar str[20][20];\n\tscanf(\"%lld\",&n);\n\t// for(i=0;i<n;i++)\n\t// {\n\t// \tscanf(\"%s\",str[i]);\n\t// }\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",str[i]);\n\t\tif(strcmp(str[i],\"Tetrahedron\")==0)\n\t\t{\n\t\t\tsum+=4;\n\t\t}\n\t\tif(strcmp(str[i],\"Cube\")==0)\n\t\t{\n\t\t\tsum+=6;\n\t\t}\n\t\tif(strcmp(str[i],\"Octahedron\")==0)\n\t\t{\n\t\t\tsum+=8;\n\t\t}\n\t\tif(strcmp(str[i],\"Dodecahedron\")==0)\n\t\t{\n\t\t\tsum+=12;\n\t\t}\n\t\tif(strcmp(str[i],\"Icosahedron\")==0)\n\t\t{\n\t\t\tsum+=20;\n\t\t}\n\t}\n\tprintf(\"%lld\",sum);\n\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n\tlong long int n,sum=0;\n\tint i;\n\t\n\tscanf(\"%lld\",&n);\n\tchar str[n][15];\n\t// for(i=0;i<n;i++)\n\t// {\n\t// \tscanf(\"%s\",str[i]);\n\t// }\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",str[i]);\n\t\tif(strcmp(str[i],\"Tetrahedron\")==0)\n\t\t{\n\t\t\tsum+=4;\n\t\t}\n\t\tif(strcmp(str[i],\"Cube\")==0)\n\t\t{\n\t\t\tsum+=6;\n\t\t}\n\t\tif(strcmp(str[i],\"Octahedron\")==0)\n\t\t{\n\t\t\tsum+=8;\n\t\t}\n\t\tif(strcmp(str[i],\"Dodecahedron\")==0)\n\t\t{\n\t\t\tsum+=12;\n\t\t}\n\t\tif(strcmp(str[i],\"Icosahedron\")==0)\n\t\t{\n\t\t\tsum+=20;\n\t\t}\n\t}\n\tprintf(\"%lld\",sum);\n\n}"}
{"similarity_score": 0.5719063545150501, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "7a6c1ff19249e7f433865bc0362c48bd", "bug_code_uid": "1e4e2d8215037094cafd4bf4c7bf33c0", "src_uid": "430f34fe715b8dcbcadf3b2c3e1e0381", "apr_id": "6970c33d9807e478888db01bcdca29b2", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while (t--)\r\n    {\r\n       long long int n;\r\n       int i,pos=0, neg=0,tpos=0,tneg=0,flag=1;\r\n       scanf(\"%lld\",&n);\r\n       long long int a[n];\r\n       for (i=0; i<n; i++)\r\n       {\r\n           scanf(\"%lld\",&a[i]);\r\n           if (a[i]>0)\r\n            pos++;\r\n           else if (a[i]<0)\r\n            neg++;\r\n       }\r\n       for (i=1; i<n; i++)//71 -35 7 -4 -11 -25\r\n       {\r\n           if (a[i-1]>a[i] && a[i]!=a[n-1])//71>-35\r\n            {\r\n                if (a[i-1]>0 && a[i]<0)//71<0 && -35>0\r\n                    a[i-1]=a[i-1]*(-1);\r\n                else if (a[i-1]<0 && a[i]<0)\r\n                    a[i]=a[i]*(-1);\r\n            }\r\n            else if (a[i-1]>a[i] && a[i]==a[n-1])\r\n                a[n-1]=a[n-1]*(-1);\r\n       }\r\n       for (i=1; i<n; i++)\r\n       {\r\n           if (a[i-1]>a[i])\r\n           {\r\n               flag=0;\r\n               break;\r\n           }\r\n       }\r\n      if (flag==1)\r\n        printf(\"yes\\n\");\r\n      else\r\n        printf(\"no\\n\");\r\n}\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while (t--)\r\n    {\r\n       long long int n;\r\n       int i,v=0,flag=1;\r\n       scanf(\"%lld\",&n);\r\n       long long int a[n+10];\r\n       for (i=0; i<n; i++)\r\n       {\r\n           scanf(\"%lld\",&a[i]);//2 2 2 2 -2\r\n           if (a[i]<0)\r\n            v++;\r\n       }\r\n       for (i=0; i<v; i++)\r\n        if (a[i]>0)\r\n        a[i]=a[i]*-1;//-2 2 2 2 -2\r\n       for (i=v; i<n; i++)\r\n       if (a[i]<0)\r\n       a[i]=a[i]*(-1);\r\n       for (i=1; i<n; i++)\r\n       {\r\n           if (a[i-1]>a[i])\r\n           {\r\n               flag=0;\r\n               break;\r\n           }\r\n       }\r\n       printf(flag?\"Yes\\n\" :\"No\\n\");\r\n\r\n}\r\n}//2 2 2 -1 -2=-2 -2 2 1 2\r\n"}
{"similarity_score": 0.9429657794676806, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "fb442cd2e86d4169422eb57a041a7599", "bug_code_uid": "8ab986b8787de5b9218376dea86629c3", "src_uid": "e7ffe7a54e2403805bde98d98fa0be3a", "apr_id": "491c7c24eea145ec6535ce00ac1445a1", "difficulty": 2300, "tags": ["sortings", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define MAXN 100000\n\nstruct Angle {\n    long double val;\n    int ind;\n};\n\ntypedef struct Angle Angle;\n\nint compare(const void *s, const void *t) {\n    return ((Angle*)s)->val > ((Angle*)t)->val ? 1 : -1;\n}\n\n\nint main() {\n    int n;\n    long double x, y;\n    Angle angle[MAXN];\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i) {\n        scanf(\"%Lf%Lf\", &x, &y);\n        angle[i].ind = i+1;\n        angle[i].val = acosl(x/sqrtl(x*x+y*y));\n        if (y < 0) angle[i].val = -angle[i].val;\n    }\n    qsort(angle, n, sizeof(Angle), compare);\n    int a = angle[n-1].ind, b = angle[0].ind;\n    long double min = 2*acosl(-1.0) - (angle[n-1].val - angle[0].val);\n    for (int i = 0; i < n-1; ++i) {\n        if (angle[i+1].val - angle[i].val < min) {\n            min = angle[i+1].val - angle[i].val;\n            a = angle[i].ind;\n            b = angle[i+1].ind;\n        }\n    }\n    printf(\"%d %d\\n\", a, b);\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define MAXN 100000\n\nstruct Angle {\n    long double val;\n    int ind;\n};\n\ntypedef struct Angle Angle;\n\nint compare(const void *s, const void *t) {\n    return ((Angle*)s)->val > ((Angle*)t)->val ? 1 : -1;\n}\n\n\nint main() {\n    int n, x, y;\n    Angle angle[MAXN];\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i) {\n        scanf(\"%d%d\", &x, &y);\n        angle[i].ind = i+1;\n        angle[i].val = atan2(y, x);\n    }\n    qsort(angle, n, sizeof(Angle), compare);\n    int a = angle[n-1].ind, b = angle[0].ind;\n    long double min = 2*acos(-1.0) - (angle[n-1].val - angle[0].val);\n    for (int i = 0; i < n-1; ++i) {\n        if (angle[i+1].val - angle[i].val < min) {\n            min = angle[i+1].val - angle[i].val;\n            a = angle[i].ind;\n            b = angle[i+1].ind;\n        }\n    }\n    printf(\"%d %d\\n\", a, b);\n}\n"}
{"similarity_score": 0.07888631090487239, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "a04021747c82bbb11a7d11ebe05e146f", "bug_code_uid": "079ff09c1f3e8a65bfefb52bdce3d31a", "src_uid": "e758ae072b8aed53038e4593a720276d", "apr_id": "adc3ee69bbb9eaad2038ea1fef2db167", "difficulty": 1700, "tags": ["data structures", "greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\n#include<string.h>\nusing namespace std;\nchar s[100010], u[100010], t[100010];\nint top = 0,ti=0,ui=0;\nint finish;\nvoid sTot()\n{\n\twhile (finish > top)\n\t{\n\t\tif (s[top] != 'X')\n\t\t\tt[ti++] = s[top++];\n\t\telse\n\t\t\ttop++;\n\t}\n}\nvoid tTou()\n{\n\twhile (ti >= 0)\n\t\tu[ui++] = t[--ti];\n\tu[ui] = '\\0';\n}\nint main()\n{\n\tcin >> s;\n\tint i;\n\tfor (i = 0; i < 26; i++)\n\t{\n\t\tchar flag = i + 'a';\n\t\tfinish = top;\n\t\twhile (s[finish] != '\\0')\n\t\t{\n\t\t\tif (s[finish] == flag)\n\t\t\t{\n\t\t\t\tu[ui++] = flag;\n\t\t\t\ts[finish] = 'X';\n\t\t\t\tsTot();\n\t\t\t\ttop = finish;\n\t\t\t}\n\t\t\tfinish++;\n\t\t}\n\t}\n\ttTou();\n\tprintf(\"%s\\n\",u);\n\n\treturn 0;\n}\n", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n\n#include <stdio.h>\n#include <string.h>\n#define MAX 100001\n\nchar s[MAX],t[MAX],u[MAX];\nint tindex = 0, uindex = 0,slength;\nint num[26];\n\nvoid sTot(int index);\nvoid tTov();\nvoid FindChaInT(int index);\n\nint main()\n{\n\tint i,index,tlenght,flag=0;\n\tmemset(num, 0, sizeof(num));\n\tscanf(\"%s\", s);\n\n\tslength = strlen(s);\n\n\tfor (i = 0; i < slength; i++)\n\t{\n\t\tnum[s[i] - 'a']++;\n\t}\n\n\tfor (i = 0; i < 26; i++)\n\t{\n\t\tif (num[i] != 0)\n\t\t{\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (i = 0; i < slength; i++)\n\t{\n\t\tt[tindex++] = s[i];\n\t\tif (s[i] == 'a' + index)\n\t\t{\n\t\t\ttTov();\n\t\t}\n\t\tnum[s[i] - 'a']--;\n\n\t\twhile (num[index] == 0 && index < 25)\n\t\t{\n\t\t\tindex++;\n\t\t\tflag = 1;\n\t\t}\n\n\t\tif (flag == 1)\n\t\t{\n\t\t\tFindChaInT(index);\n\t\t\tflag = 0;\n\t\t}\n\t}\n\n\ttlenght = tindex;\n\n\tfor (i = 0; i < tlenght; i++)\n\t{\n\t\ttTov();\n\t}\n\n\tu[uindex] = '\\0';\n\n\tprintf(\"%s\\n\", u);\n\n\treturn 0;\n}\n\n\nvoid tTov()\n{\n\tu[uindex++] = t[tindex-1];\n\ttindex--;\n}\n\nvoid FindChaInT(int index)\n{\n\tif (tindex == 0)\n\t{\n\t\treturn;\n\t}\n\tint i;\n\n\tfor (i = tindex - 1; i >= 0; i--)\n\t{\n\t\tif (t[i] <= 'a' + index)\n\t\t{\n\t\t\ttTov();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.6294117647058823, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "48e6542048fa9f86e344549cce339b45", "bug_code_uid": "e214b44ed7cf74ef089d232f6b21748d", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "6d1a224ec870667bf9ac3f5e8a3027d9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n     int a[5],b,x=0;\n     scanf(\"%d\",&a[1]);\n     scanf(\"%d\",&a[2]);\n     scanf(\"%d\",&a[3]);\n     scanf(\"%d\",&a[4]);\n     scanf(\"%d\",&b);\n     \n     while(b!=0)\n{\n      x=x+a[b%10];\n      b=b/10;\n}\n\nprintf(\"%d\",x);\n\nreturn(0);\n}\n     ", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n     int a[5],x=0,s=0,i;\n     char b[100000];\n     scanf(\"%d\",&a[1]);\n     scanf(\"%d\",&a[2]);\n     scanf(\"%d\",&a[3]);\n     scanf(\"%d\",&a[4]);\n     scanf(\"%s\",b);\n     \n     //printf(\"%s \\n\",b);\n     \n     s = strlen(b);\n     //printf(\"%d \\n\",s);\n     // printf(\"%d \\n\",b[1]);\n     for(i=0;i<s;i++)\n{\n      x=x+a[b[i]-48];\n      \n}\n\n\n\nprintf(\"%d\",x);\n\nreturn(0);\n}"}
{"similarity_score": 0.3961456102783726, "equal_cnt": 26, "replace_cnt": 16, "delete_cnt": 6, "insert_cnt": 3, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "12f29b8b6e5d3573092e8e66a0977055", "bug_code_uid": "bbc2201661253cfdc2bb589227931aab", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "54958e1af6eccf0d7d39b6d17b6531c6", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n\t long long int n=0, a=0, b=0, ans=0, t=0,i;\n\t int arr[100000];\n        scanf(\"%I64d %I64d %I64d\", &n, &a, &b);\n        for (i = 1; i <= n; ++i) {\n                scanf(\"%I64d\", &ans);\n                t = (ans*a)/b;\n                arr[i] = ans - (t * b) / a;\n                if((t*b)%a) arr[i]--;\n        }\n        printf(\"%I64d\", arr[1]);\n        for (i = 2; i <= n; ++i)\n                printf(\" %I64d\", arr[i]);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()  \n{  \n    long long n,a,b,t,y,l,r,mid;  \n  \n    scanf(\"%I64d%I64d%I64d\",&n,&a,&b);  \n    long long x,ans;  \n  \n    for (int i=0;i<n;i++)  \n    {  \n        scanf(\"%I64d\",&x);  \n        t=a*x/b;  \n        if ((t*b)%a==0)  \n        {  \n            y=t*b/a;  \n        }  \n        else  \n        {  \n            y=t*b/a + 1;  \n        }  \n        printf(\"%I64d \",x-y);  \n    }  \n    puts(\"\");  \n  \n  \n    return 0;  \n}"}
{"similarity_score": 0.991304347826087, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6ea255e6b83ad4326e74e66dd6247ae0", "bug_code_uid": "16dbcb6e3702c9fb2961eb3eb561c2cd", "src_uid": "40d679f53417ba058144c745e7a2c76d", "apr_id": "2f514d5ecc344fb00f17a241330eb249", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": " //bismillah\n #include<stdio.h>\nint main()\n{\n    int tc;\n    scanf(\"%d\",&tc);\n    while(tc--)\n    {\n        unsigned long long int  a,b,c;\n    scanf(\"%llu %llu %llu\",&a,&b,&c);\n    printf(\"%llu\\n\",a+1);\n\n    }\n\n    return 0;\n\n}\n", "fixed": " //bismillah\n #include<stdio.h>\nint main()\n{\n    int tc;\n    scanf(\"%d\",&tc);\n    while(tc--)\n    {\n        unsigned long long int  a,b,c;\n    scanf(\"%llu %llu %llu\",&a,&b,&c);\n    printf(\"%llu\\n\",a+b+c-1);\n\n    }\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.4497878359264498, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "c353f7306951031eb271e4775879ad00", "bug_code_uid": "da0e2c9cc1703edc9842c1ec9ba4b3cd", "src_uid": "0ac2a0954fe43d66eac32072c8ea5070", "apr_id": "a42c2d73628ebec6813a847ad9dd1b07", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <stdio.h>\n# include <string.h>\n# include <math.h>\nint main()\n{\n\tint n,i=1,j=2,k,l,m,a[100000];\n\tscanf(\"%d\",&n);\n\tk=n*n;\n\tl=1,m=k;\n\tif(n==2)\n\t\t{\n\t\tprintf(\"1 4\\n\");\n\t\tprintf(\"2 3\\n\");\n\t\t}\nelse\t{\n\t\t\n\tfor(i=1;i<=k;i++)\n\t\ta[i]=i;\n\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tprintf(\"%d %d \",a[l],a[m]);\n\t\t\tl=l+1;\n\t\t\tm=m-1;\n\t\t\tprintf(\"%d %d \",a[l],a[m]);\n\t\t\tl=l+1;\n\t\t\tm=m-1;\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\nreturn 0;\n}\n", "fixed": "# include <stdio.h>\n# include <string.h>\n# include <math.h>\nint main()\n{\n\tint n,i=1,j=2,k,l,m;\n\tscanf(\"%d\",&n);\n\tk=n*n;\n\tl=1,m=k;\n\t\t\n\tfor(i=1;i<=n;i++)\n\t\t{\n\t\tfor(j=1;j<=n/2;j++)\n\t\t\t{\n\t\t\tprintf(\"%d \",l);\n\t\t\tl++;\n\t\t\t}\n\t\tfor(j=1;j<=n/2;j++)\n\t\t\t{\n\t\t\tprintf(\"%d \",m);\n\t\t\tm--;\n\t\t\t}\n\t\tprintf(\"\\n\");\n\t\t}\n\t\t\nreturn 0;\n}\n"}
{"similarity_score": 0.8181818181818182, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e601ed6751110d913540c872f352f4a1", "bug_code_uid": "5754736e705bc6645b377b2a650af15d", "src_uid": "863a8124d46bb09b49fc88939fb5f364", "apr_id": "8e30efe3167dd0f217678e04d303669a", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <inttypes.h>\n#include <stdio.h>\n\nint main()\n{\n    int64_t x,y,z,a,b,c,k;\n    scanf (\"%I64d %I64d %I64d\",&x,&y,&z);\n    a=x%z;\n    b=y%z;\n    c=x/z+y/z;\n    if (((a<=b)&&(a>=z-b)) || ((b<=a)&&(b>=z-a))) {\n        ++c;\n        if (a<=b) k=z-b;\n        else k=z-a;\n    }\n    printf (\"%I64d %I64d\",c,k);\n    return 0;\n}\n", "fixed": "#include <inttypes.h>\n#include <stdio.h>\n\nint main()\n{\n    int64_t x,y,z,a,b,c,k;\n    scanf (\"%I64d %I64d %I64d\",&x,&y,&z);\n    a=x%z;\n    b=y%z;\n    c=x/z+y/z;\n    if ((a==0)||(b==0)) k=0;\n    else {\n        if (((a<=b)&&(a>=z-b)) || ((b<=a)&&(b>=z-a))) {\n            ++c;\n            if (a<=b) k=z-b;\n            else k=z-a;\n        } else k=0;\n    }\n    printf (\"%I64d %I64d\",c,k);\n    return 0;\n}\n"}
{"similarity_score": 0.9308176100628931, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8e695cea1160ae1c4426acf029e53e69", "bug_code_uid": "05e01120ef3f33ff5cdbc89fb2763a0f", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "b62cacda57dd2f17fed17d9fc7017282", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define LL long long \nint a,t,c,dt;\nint b[50];\n  \nvoid isort()\n{\n\tint i,j,key;\n    \n\tfor(i=1;i<a;i++)\n\t{\n\t\tj=i-1;\n\t\tkey=b[i];\n\n\t\twhile(j>=0 && b[j]>key)\n\t\t{\n\t\t\tb[j+1]=b[j];\n\t\t\tj-=1;\n\t\t}\n\t\tb[j+1]=key;\n\t}\n}\n    \n   \nint main()\n{\n   \tscanf(\"%d\",&a);\n   \tfor(int i=0;i<a;i++)\n   \t{\n   \t\tscanf(\"%d\",&b[i]);\n   \t\tt+=b[i];\n   \t}\n   \t\n   \tisort();\n   \t\n   \tint q=0;\n   \t\n   \twhile(t/2>=dt)\n   \t{\n   \t\tdt+=b[q];\n   \t\tq++;\n   \t}\n   \t\n   \tprintf(\"%d \",a-q);\n}", "fixed": "#include <stdio.h>\n#define LL long long \nint a,t,c,dt,sayac=0;\nint b[101];\n  \nvoid isort()\n{\n\tint i,j,key;\n    \n\tfor(i=1;i<a;i++)\n\t{\n\t\tj=i-1;\n\t\tkey=b[i];\n\n\t\twhile(j>=0 && b[j]<key)\n\t\t{\n\t\t\tb[j+1]=b[j];\n\t\t\tj-=1;\n\t\t}\n\t\tb[j+1]=key;\n\t}\n}\n    \n   \nint main()\n{\n   \tscanf(\"%d\",&a);\n   \tfor(int i=0;i<a;i++)\n   \t{\n   \t\tscanf(\"%d\",&b[i]);\n   \t\tt+=b[i];\n   \t}\n   \t\n   \tisort();\n   \t\n   \tint q=0;\n   \t\n   \twhile(t/2>=dt)\n   \t{\n   \t\tdt+=b[q];\n   \t\tq++;\n   \t\tsayac++;\n   \t}\n   \tprintf(\"%d \",sayac);\n}"}
{"similarity_score": 0.9556650246305419, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0864991da397ae8e7009d22da0c5bf8a", "bug_code_uid": "aa1d4282e7fd765983e776401fd51ede", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "93d68d9f8ee20b6e47e75d2630e34245", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n int n,i,j,c=0,t=0; scanf(\"%d\",&n);\n  char team[n][10],temp[10],res[10];\n  for(i=0;i<n;i++)\n  {\n  scanf(\"%s\",team[i]);\n  }\n  for(i=0;i<n;i++)\n  {\n        c=0;\n    strcpy(temp,team[i]);\n    for(j=0;j<n;j++)\n    {\n if(strcmp(temp,team[j])==0)\n    c++;\n    }\n    if(c>t){\n        t=c;\n     strcpy(res,temp);}\n  }\n  puts(res);\n   return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n int n,i,j,c=0,t=0; scanf(\"%d\",&n);\n  char team[n][11],temp[11],res[11];\n  for(i=0;i<n;i++)\n  {\n  scanf(\"%s\",team[i]);\n  }\n  for(i=0;i<n;i++)\n  {\n        c=0;\n    strcpy(temp,team[i]);\n    for(j=0;j<n;j++)\n    {\n if(strcmp(temp,team[j])==0)\n    c++;\n    }\n    if(c>t){\n        t=c;\n     strcpy(res,temp);}\n  }\n  puts(res);\n   return 0;\n}"}
{"similarity_score": 0.9401878398418191, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "693fe30b8229f94c4000db429353d411", "bug_code_uid": "d66f67004bd6d9bc02290425eae86baa", "src_uid": "6cec3662101b419fb734b7d6664fdecd", "apr_id": "86772f787fe3fe4d8534a4f065a8312c", "difficulty": 1600, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint find(int b[][2],int x)\n{\n\tint i;\n\tfor(i=1;i*i<=x;i++)\n\t\tif(x%i==0 && b[i][0]==1)\n\t\t\t\treturn b[i][1];\n\treturn -1;\n}\nvoid insert(int b[][2],int x)\n{\n\tint i;\n\tfor(i=1;i*i<=x;i++)\n\t\tif(x%i==0)\n\t\t{\n\t\t\tb[i][0]=b[x/i][0]=1;\n\t\t\tb[i][1]=b[x/i][1]=x;\n\t\t}\n\tb[1][1]=b[1][0]=0;\n\treturn;\n}\nvoid remov(int b[][2],int x)\n{\n\tint i;\n\tfor(i=1;i*i<=x;i++)\n\t\tif(x%i==0)\n\t\t{\n\t\t\tb[i][0]=b[x/i][0]=0;\n\t\t\tb[i][1]=b[x/i][1]=0;\n\t\t}\n\treturn;\n}\nint main()\n{\n\tint n,m,x,i,j,k;\n\tchar c;\n\tscanf(\"%d %d\",&n,&m);\n\tint a[100005]={0},b[100005][2]={0};\n\twhile(m--)\n\t{\n\t\tscanf(\" %c %d\",&c,&x);\n\t\tif(c=='+')\n\t\t{\n\t\t\tif(a[x]==1)\n\t\t\t\tprintf(\"Already on\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tk=find(b,x);\n\t\t\t\tif(k==-1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"Success\\n\");\n\t\t\t\t\tinsert(b,x);\n\t\t\t\t\ta[x]=1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tprintf(\"Conflict with %d\\n\",k);\n\t\t\t}\n\t\t}\n\t\telse if(c=='-')\n\t\t\tif(a[x]==0)\n\t\t\t\tprintf(\"Already off\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tremov(b,x);\n\t\t\t\ta[x]=0;\n\t\t\t\tprintf(\"Success\\n\");\n\t\t\t}\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint find(int b[][2],int x)\n{\n\tint i;\n\tfor(i=1;i*i<=x;i++)\n\t\tif(x%i==0)\n\t\t\tif(b[i][0]==1)\n\t\t\t\treturn b[i][1];\n\t\t\telse if(b[x/i][0]==1)\n\t\t\t\treturn b[x/i][1];\n\treturn -1;\n}\nvoid insert(int b[][2],int x)\n{\n\tint i;\n\tfor(i=1;i*i<=x;i++)\n\t\tif(x%i==0)\n\t\t{\n\t\t\tb[i][0]=b[x/i][0]=1;\n\t\t\tb[i][1]=b[x/i][1]=x;\n\t\t}\n\tb[1][1]=b[1][0]=0;\n\treturn;\n}\nvoid remov(int b[][2],int x)\n{\n\tint i;\n\tfor(i=1;i*i<=x;i++)\n\t\tif(x%i==0)\n\t\t{\n\t\t\tb[i][0]=b[x/i][0]=0;\n\t\t\tb[i][1]=b[x/i][1]=0;\n\t\t}\n\treturn;\n}\nint main()\n{\n\tint n,m,x,i,j,k;\n\tchar c;\n\tscanf(\"%d %d\",&n,&m);\n\tint a[100005]={0},b[100005][2]={0};\n\twhile(m--)\n\t{\n\t\tscanf(\" %c %d\",&c,&x);\n\t\tif(c=='+')\n\t\t{\n\t\t\tif(a[x]==1)\n\t\t\t\tprintf(\"Already on\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tk=find(b,x);\n\t\t\t\tif(k==-1)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"Success\\n\");\n\t\t\t\t\tinsert(b,x);\n\t\t\t\t\ta[x]=1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tprintf(\"Conflict with %d\\n\",k);\n\t\t\t}\n\t\t}\n\t\telse if(c=='-')\n\t\t\tif(a[x]==0)\n\t\t\t\tprintf(\"Already off\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tremov(b,x);\n\t\t\t\ta[x]=0;\n\t\t\t\tprintf(\"Success\\n\");\n\t\t\t}\n\t\t//for(i=0;i<10;i++)\n\t\t//\tprintf(\"%d %d\\n\",b[i][0],b[i][1]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.885923949299533, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "58f079f5a52899f9af9518c31f00bf59", "bug_code_uid": "a1816a0e6d731d2ff6b89b2f31b3be11", "src_uid": "4af59df1bc56ca8eb5913c2e57905922", "apr_id": "1c4566342d6c231625523987a838fd14", "difficulty": 800, "tags": ["brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint comp(const void *p1,const void *p2)\r\n{\r\n    return *(int *)p2-*(int *)p1;\r\n}\r\nint main()\r\n{\r\n    long long int t,n,count,sum1,sum,i;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        int arr[n];\r\n        sum1=0;\r\n        sum=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n            sum+=arr[i];\r\n        }\r\n        qsort(arr,n,sizeof(int),comp);\r\n        if(n%2!=0) count=n/2;\r\n        else count=(n/2)-1;\r\n        for(i=0;i<count;i++)\r\n        sum1+=arr[i];\r\n        if(sum1>sum-sum1) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint comp(const void *p1,const void *p2)\r\n{\r\n    return *(int *)p2-*(int *)p1;\r\n}\r\nint main()\r\n{\r\n    long long int t,n,count,sum1,sum,i;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        int arr[n];\r\n        sum1=0;\r\n        sum=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n            sum+=arr[i];\r\n        }\r\n        qsort(arr,n,sizeof(int),comp);\r\n        if(n%2!=0) count=n/2;\r\n        else count=(n/2)-1;\r\n        for(i=0;i<count;i++)\r\n        sum1+=arr[i];\r\n        if(n%2!=0)\r\n        {\r\n        if(sum1>sum-sum1) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            if(sum1>sum-sum1-arr[count]) printf(\"YES\\n\");\r\n            else printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.41491085899513774, "equal_cnt": 13, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "7970798708ac7e168cfdc132c2e0137b", "bug_code_uid": "d28514664eda3e35c935044350840e94", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "a452f8d827aa78774122f98145cc0032", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int p,a,b,c,i;\r\n        scanf(\"%d %d %d %d\",&p,&a,&b,&c);\r\n        int cnt1,cnt2,cnt3,temp;\r\n        for(i=1;;i++)\r\n        {\r\n            if(i*a>=p) {cnt1=i*a-p;break;}\r\n        }\r\n        for(i=1;;i++)\r\n        {\r\n            if(i*b>=p) {cnt2=i*b-p;break;}\r\n        }\r\n        for(i=1;;i++)\r\n        {\r\n            if(i*c>=p) {cnt3=i*c-p;break;}\r\n        }\r\n        if(cnt1<=cnt2&&cnt1<=cnt3) printf(\"%d\\n\",cnt1);\r\n        else if(cnt2<=cnt1&&cnt2<=cnt3) printf(\"%d\\n\",cnt2);\r\n        else if(cnt3<=cnt1&&cnt3<=cnt2) printf(\"%d\\n\",cnt3);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        long long p,a,b,c,i;\r\n        scanf(\"%lld %lld %lld %lld\",&p,&a,&b,&c);\r\n        long long cnt1,cnt2,cnt3,temp;\r\n        if(p%a&&p%b&&p%c)\r\n        {\r\n        cnt1=a-(p%a);\r\n        cnt2=b-(p%b);\r\n        cnt3=c-(p%c);\r\n        if(cnt1<=cnt2&&cnt1<=cnt3) printf(\"%lld\\n\",cnt1);\r\n        else if(cnt2<=cnt1&&cnt2<=cnt3) printf(\"%lld\\n\",cnt2);\r\n        else if(cnt3<=cnt1&&cnt3<=cnt2) printf(\"%lld\\n\",cnt3);\r\n        }\r\n        else printf(\"0\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6543438077634011, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "30808ef1474fd4921de68a7a458c6057", "bug_code_uid": "48cced394a21f5c5373061f48d6cd13f", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "39f5d308f7e6799e9ab059c330c1b29f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n, i, j;\n\tscanf(\"%d\", &n);\n\tlong long int jump=0, c, a, b;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\", &a, &b, &c);\n\t\tfor(j=1;j<=c;j++)\n\t\t{\n\t\t\tif(j%2!=0) jump=jump+a;\n\t\t\telse jump=jump-b;\n\t\t}\n\t\tprintf(\"%lld\\n\", jump);\n\t\tjump=0;\n\t}\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n, i, j;\n\tscanf(\"%d\", &n);\n\tlong long int jump, c, a, b;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\", &a, &b, &c);\n\t\t\n\t\tif(c%2!=0) jump=a+(a-b)*(c/2);\n\t\telse jump=(a-b)*(c/2);\n\t\tprintf(\"%lld\\n\", jump);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9652650822669104, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3add957b977ceafa4fd489709bee4638", "bug_code_uid": "3062a349dddb3d89ddb4d03578fcf5a5", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "40eae941b981372fa9bb868af0959a63", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\n\n\n\nint main(){\n    int n, children = 0;\n    long x,icePacks = 0;\n    char sign[2];\n    scanf(\"%d %ld\", &n, &x);\n\n    icePacks +=x;\n    for(int i = 0; i < n ; i++){\n        long value = 0;\n        scanf(\"%s %ld\",sign, &value);\n        if(sign[0] == '+'){\n            icePacks += value;\n        }\n        else{\n            if(icePacks >= value){\n                icePacks -= value;\n            }\n            else{\n                children++;\n            }\n        }\n    }\n    printf(\"%ld %d\",icePacks,children);\n\n}", "fixed": "#include <stdio.h>\n\n#include <stdint.h>\n\n\n\n\nint main(){\n    \n    int n, children = 0;\n    int64_t x,icePacks = 0;\n    char sign[2];\n    scanf(\"%d %lld\", &n, &x);\n\n    icePacks +=x;\n    for(int i = 0; i < n ; i++){\n        long value = 0;\n        scanf(\"%s %ld\",sign, &value);\n        if(sign[0] == '+'){\n            icePacks += value;\n        }\n        else{\n            if(icePacks >= value){\n                icePacks -= value;\n            }\n            else{\n                children++;\n            }\n        }\n    }\n    printf(\"%lld %d\",icePacks,children);\n\n}"}
{"similarity_score": 0.9379652605459057, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "45bf46fbe5daa23b05a8cb77ca328e6e", "bug_code_uid": "1bddfc7ae0602232920ef46feb123886", "src_uid": "f5451b19cf835b1cb154253fbe4ea6df", "apr_id": "764c25835888aaa7d7c2c4df84ee52e8", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int l,k,i,j=0;\n    char c[2005],a[26]={0};\n    scanf(\"%d %s\",&k,c);\n    for(i=0;c[i]!='\\0';i++)\n        a[c[i]-'a']++;\n     for(i=0;i<26;i++)\n        if(a[i]%k!=0)\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    for(l=0;l<k;l++)\n    for(i=0;i<26;i++)\n    for(j=0;j<a[j]/k;j++)\n        printf(\"%c\",i+'a');\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int l,k,i,j=0,a[26]={0};\n    char c[2005];\n    scanf(\"%d %s\",&k,c);\n    for(i=0;c[i]!='\\0';i++)\n        a[c[i]-'a']++;\n     for(i=0;i<26;i++)\n        if(a[i]%k!=0)\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    for(l=0;l<k;l++){\n    for(i=0;i<26;i++){\n    for(j=0;j<a[i]/k;j++){\n        printf(\"%c\",i+'a');}}}\n    return 0;\n}\n"}
{"similarity_score": 0.9941927990708479, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3fe95d1fbc290254c2ff335ee1c2bb37", "bug_code_uid": "41763363b59afd0ea7f200b9768cf7bf", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "2d4cd65465e0d07de3115bfc7cf1b643", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,t;\n    scanf(\"%d %d\",&n,&m);\n    int a[100005],d[100005]={0};\n    int v[100005];\n    for (int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    for(int i=n;i>=1;i--)\n    {\n        if(!v[a[i]])\n        d[i]++;\n        v[a[i]]=1;\n        \n    }\n    for (int i=n;i>=1;i--)\n    d[i]+=d[i+1];\n    for (int i=0;i<m;i++)\n    {\n        scanf(\"%d\",&t);\n        printf(\"%d\\n\",d[t]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,t;\n    scanf(\"%d %d\",&n,&m);\n    int a[100005],d[100005]={0};\n    int v[100005]={0};\n    for (int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    for(int i=n;i>=1;i--)\n    {\n        if(!v[a[i]])\n        d[i]++;\n        v[a[i]]=1;\n        \n    }\n    for (int i=n;i>=1;i--)\n    d[i]+=d[i+1];\n    for (int i=0;i<m;i++)\n    {\n        scanf(\"%d\",&t);\n        printf(\"%d\\n\",d[t]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.0817717206132879, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "d65b366ba5e2a22f22e3e25af3e2d96f", "bug_code_uid": "cd8d86daceb7645f37ebd7242f6602f5", "src_uid": "636a30a2b0038ee1731325a5fc2df73a", "apr_id": "6746313580eb4c96afae26a2a399d1dd", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid read_int_vec(int* vec, int len){\n\tint i; \n\tfor(i = 0; i < len; i++){\n\t\tscanf(\"%d\", &vec[i]);\n\t}\n}\n\nint max(int a, int b){\n\tprintf(\"max: %d %d\\n\", a, b);\n\treturn a > b?a:b;\n}\n\nint main(){\n\tint i, x, m[5], w[5], h[2], result;\n\n\tread_int_vec(m, 5);\n\tread_int_vec(w, 5);\n\tread_int_vec(h, 2);\n\n\tfor(i = 0, result = 0; i < 5; i++){\n\t\tx = 500*(i + 1);\n\t\t// printf(\"%d\\n\", max(0.3*x, (1 - (float)m[i]/250))*x);\n\t\tresult += max(0.3*x, (1 - (float)m[i]/250)*x - 50*w[i]);\n\t}\n\n\tresult += 100*h[0] - 50*h[1];\n\n\tprintf(\"%d\\n\", result);\n\n\treturn 0;\n}\n// 1452647796673", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX(a,b) ( ((a)>(b)) ? (a):(b) )\nint main(){\n    int m[5];\n    int w[5];\n    int h[2];\n    int i;\n    int score=0;\n    int a,b;\n\n    scanf (\"%d %d %d %d %d\", &m[0], &m[1], &m[2], &m[3], &m[4]);\n    scanf (\"%d %d %d %d %d\", &w[0], &w[1], &w[2], &w[3], &w[4]);\n    scanf (\"%d %d\", &h[0], &h[1]);\n\n    for (i=0; i<5; i++) {\n        a = 3 * ((i+1)*500) / 10;\n        b = ((250 - m[i]) * (i+1) * 2) - (50 * w[i]);\n        score += MAX (a, b);\n    }\n    score += h[0]*100;\n    score -= h[1]*50;\n\n    printf(\"%d\", score);\n\n    return 0;\n}\n// 1461161530594"}
{"similarity_score": 0.7098703888334995, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f3fe20135e2e486197f8f863d532a97e", "bug_code_uid": "36b6ae433e408be60be40143dfc19ffa", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "3fb9f339caa83ebc2f0fac3e753cd345", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint x[10001], y[10001], s, n;\nint ok = 0;\nint main()\n{\n\tscanf(\"%d %d\", &s, &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d %d\", &x[i], &y[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s > x[i]) {\n\t\t\ts += y[i];\n\t\t\tok = 1;\n\t\t}\n\t\telse {\n\t\t\tprintf(\"NO\\n\");\n\t\t\tok = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (ok)printf(\"YES\\n\");\n\t//system(\"pause\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint x[10001], y[10001], s, n;\nint ok = 0;\nint main()\n{\n\tscanf(\"%d %d\", &s, &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d %d\", &x[i], &y[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i+1; j < n; j++) {\n\t\t\tif (x[i] > x[j]) {\n\t\t\t\tint tmp = x[i];\n\t\t\t\tint tmp1 = y[i];\n\t\t\t\tx[i] = x[j];\n\t\t\t\ty[i] = y[j];\n\t\t\t\tx[j] = tmp;\n\t\t\t\ty[j] = tmp1;\n\t\t\t}\n\t\t}\n\t}\n\t//for (int i = 0; i < n; i++)printf(\"%d %d\\n\", x[i], y[i]);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s > x[i]) {\n\t\t\ts += y[i];\n\t\t\tok = 1;\n\t\t}\n\t\telse {\n\t\t\tprintf(\"NO\\n\");\n\t\t\tok = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (ok)printf(\"YES\\n\");\n\t//else print(\"NO\\n\");\n\t//system(\"pause\");\n\treturn 0;\n}"}
{"similarity_score": 0.24354731965585705, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "2f2d56d52bf3f07696aa243c6f99a837", "bug_code_uid": "c8bc31f3b02ccd26b9e050dc4aa41eb7", "src_uid": "cb24509580ff9b2f1a11103a0e4cdcbd", "apr_id": "34079480c0417151a77708bf26803dd1", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\r\n#include<stdio.h>\r\n\r\nint greater(int a, int b){\r\n    if (a>b){\r\n        return a;\r\n    }\r\n    else{\r\n        return b;\r\n    }\r\n}\r\n\r\nint smaller(int a, int b){\r\n    if (a>b){\r\n        return b;\r\n    }\r\n    else{\r\n        return a;\r\n    }\r\n}\r\nint main(){\r\n    int y,a,b; \r\n    scanf(\"%d\", &y);\r\n    int r[4][y];\r\n    for (a=0; a<4; a++){\r\n        for (b=0; b<y; b++){\r\n        scanf(\"%d\",&r[a][b]);\r\n        }\r\n    }\r\n    for (int i = 0; i<y;i++)\r\n        if ((greater(r[i][0],r[i][1])>=smaller(r[i][2],r[i][3]))&&(smaller(r[i][0],r[i][1])<=greater(r[i][2],r[i][3]))){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint max(int i,int j);\r\nint min(int i,int j);\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int o = 0; o<t; o++){\r\n        int i;\r\n    int *arr;\r\n    arr = malloc(4 * sizeof(int));\r\n    for(i=0; i < 4; i++)\r\n        scanf(\"%d\", &arr[i]);\r\n        // int arr[4];\r\n        int c,d,e,f;\r\n        // scanf(\"%d\",&arr);\r\n        c = max(arr[0],arr[1]);\r\n        d = max(arr[2],arr[3]);\r\n        e = min(arr[0],arr[1]);\r\n        f = min(arr[2],arr[3]);\r\n        if ((c>f)&&(d>e)){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}\r\n\r\nint max(int i,int j){\r\n    if (i>j){\r\n        return i;\r\n    }\r\n    else{\r\n        return j;\r\n    }\r\n}\r\n\r\n\r\nint min(int i,int j){\r\n    if (i>j){\r\n        return j;\r\n    }\r\n    else{\r\n        return i;\r\n    }\r\n}"}
{"similarity_score": 0.9943820224719101, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f37a84790a1743b92d96ea1d8c5c19b0", "bug_code_uid": "9439d624fcc838da7f7ec79eceef9b0d", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "feae3aef8d7250ebc7a3c167ea12b827", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int i,a[t],b[t];\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\", &a[i], &b[i]);\n    }\n    for(i=0;i<t;i++)\n    {\n        if((a[i]%b[i])==0)\n        {\n            printf(\"YES\");\n        }\n        if((a[i]%b[i]!=0))\n        {\n            printf(\"NO\");\n        }\n    }\n    \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int i,a[t],b[t];\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\", &a[i], &b[i]);\n    }\n    for(i=0;i<t;i++)\n    {\n        if((a[i]%b[i])==0)\n        {\n            printf(\"YES\\n\");\n        }\n        if((a[i]%b[i]!=0))\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.7117117117117117, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "2432a1cab9215ff779240515f984ee64", "bug_code_uid": "02a2118e2abeb1c11609dfc240569485", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "173081d487f971d58ffa71960ac75d27", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n\tint n,a[1000000];\n\tscanf(\" %d\",&n);\n\tint i;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\" %d\",&a[i]);\n\t}\n\t\n\tint max=0,count=1;\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tif(a[i]>=a[i-1]) count++;\n\t\telse{\n\t\t\tcount=1;\n\t\t}\n\t\tif(count>max) max=count;\n\t}\n\tprintf(\"%d\\n\",max );\n}", "fixed": "#include <stdio.h>\n\nint main(void){\n\tint n;\n\tint a[1000000];\n\tint count[1000000];\n\tscanf(\" %d\",&n);\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tscanf(\" %d\",&a[i]);\n\t}\n\tcount[0]=1;\n\tfor (int i = 1; i < n; ++i)\n\t{\n\t\tif(a[i]>=a[i-1]) count[i]=count[i-1]+1;\n\t\telse count[i]=1;\n\t}\n\tint max=0;\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tif(max<count[i]) max=count[i];\n\t}\n\tprintf(\"%d\\n\",max );\n}"}
{"similarity_score": 0.9940688018979834, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "47d42158ba60f97895f8ef3c67470ef9", "bug_code_uid": "e12eab5321e99d447c63fbf68f4c20ef", "src_uid": "59154ca15716f0c1c91a37d34c5bbf1d", "apr_id": "dce8149d8b8bfc47a1de24464a93a345", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<ctype.h>\n#include<time.h>\n#include<stdbool.h>\n\nint min(int a,int b)\n{\n   return ((a<b)?a:b);\n}\nint main()\n{\n   int n,k,l,r,sall,sk,avg,srest,x,i;\n   int a[1100]={0};\n   scanf(\"%d %d %d %d %d %d\",&n,&k,&l,&r,&sall,&sk);\n   x=sk/k;\n   srest=sall-sk;\n   for(i=0;i<k;++i) a[i]=x;\n   sk-=(x*k);\n   i=0;\n   while(i<k)\n   {\n      if(sk==0) break;\n      if(r>a[i])\n      {\n         x=min(r-a[i],sk);\n         sk-=x;\n         a[i]+=x;\n      }\n      ++i;\n   }\n   x=srest/(n-k);\n   avg=1e9;\n   for(i=0;i<k;++i) avg=min(avg,a[i]);\n   for(i=k;i<n;++i) a[i]=x;\n   srest-=(x*(n-k));\n   i=k;\n   while(i<n)\n   {\n      if(srest==0)break;\n      if(avg>a[i])\n      {\n         x=min(avg-a[i],srest);\n         srest-=x;\n         a[i]+=x;\n      }\n      ++i;\n   }\n   for(i=0;i<n;++i)printf(\"%d \",a[i]);\n   return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<ctype.h>\n#include<time.h>\n#include<stdbool.h>\n\nint min(int a,int b)\n{\n   return ((a<b)?a:b);\n}\nint main()\n{\n   int n,k,l,r,sall,sk,avg,srest,x,i;\n   int a[1100]={0};\n   scanf(\"%d %d %d %d %d %d\",&n,&k,&l,&r,&sall,&sk);\n   x=sk/k;\n   srest=sall-sk;\n   for(i=0;i<k;++i) a[i]=x;\n   sk-=(x*k);\n   i=0;\n   while(i<k)\n   {\n      if(sk==0) break;\n      if(r>a[i])\n      {\n         x=min(r-a[i],sk);\n         sk-=x;\n         a[i]+=x;\n      }\n      ++i;\n   }\n   if(k!=n){x=srest/(n-k);\n   avg=1e9;\n   for(i=0;i<k;++i) avg=min(avg,a[i]);\n   for(i=k;i<n;++i) a[i]=x;\n   srest-=(x*(n-k));\n   i=k;\n   while(i<n)\n   {\n      if(srest==0)break;\n      if(avg>a[i])\n      {\n         x=min(avg-a[i],srest);\n         srest-=x;\n         a[i]+=x;\n      }\n      ++i;\n   }}\n   for(i=0;i<n;++i)printf(\"%d \",a[i]);\n   return 0;\n}\n"}
{"similarity_score": 0.994328922495274, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fcac7163dc978da11f486fae86d7d4b2", "bug_code_uid": "e3dd41cec2b9b4ea7a08398d0435397f", "src_uid": "447ebe088a0a60a7a44a3fc76056bc65", "apr_id": "9702b7284529a422e4008a03128daa83", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,test,flag;\n\tlong long int p,q,t,x,arr[100];\n//\tscanf(\"%d\",&test);\n//\twhile(test--)\n//\t{\n\t\tflag=1;\n\t\n\t\tscanf(\"%lld%lld%d\",&p,&q,&n);\n\n\t\tfor(j=0;j<n;j++)\n\t\t\tscanf(\"%lld\",&arr[j]);\n\t\n\t\tj=0;\n\t\ti=1;\n\t\n\t\twhile(i<=n&&q!=0&&flag)\n\t\t{\n\t\t\tx=p/q;\n\t\t\tt=p;\n\t\t\tp=q;\n\t\t\tq=t-q*x;\n\t\t\n\t\t\tif((q!=0||i==n)&&(arr[j++]-x))\n\t\t\t\t\tflag=0;\t\n\t\t\ti++;\n\t\t}\n\n\t\t\t\t\tif(i!=(n+1))\n\t\t\t\t\tif((arr[j++]-(x-1))||(arr[j]-1))\n\t\t\t\t\tflag=0;\n\n\t\t\t\t\tif(flag)\n\t\t\t\t\tprintf(\"YES\");\t\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"NO\");\n//\t}\n\t\t\t\t\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,j,n,test,flag;\n\tlong long int p,q,t,x,arr[100];\n//\tscanf(\"%d\",&test);\n//\twhile(test--)\n//\t{\n\t\tflag=1;\n\t\n\t\tscanf(\"%lld%lld%d\",&p,&q,&n);\n\n\t\tfor(j=0;j<n;j++)\n\t\t\tscanf(\"%lld\",&arr[j]);\n\t\n\t\tj=0;\n\t\ti=1;\n\t\n\t\twhile(i<=n&&q!=0&&flag)\n\t\t{\n\t\t\tx=p/q;\n\t\t\tt=p;\n\t\t\tp=q;\n\t\t\tq=t-q*x;\n\t\t\n\t\t\tif((q!=0||i==n)&&(arr[j++]-x))\n\t\t\t\t\tflag=0;\t\n\t\t\ti++;\n\t\t}\n\n\t\t\t\t\tif(i!=(n+1))\n\t\t\t\t\tif((arr[j++]-(x-1))||(arr[j]-1))\n\t\t\t\t\tflag=0;\n\n\t\t\t\t\tif(flag&&q==0)\n\t\t\t\t\tprintf(\"YES\");\t\n\t\t\t\t\telse\n\t\t\t\t\tprintf(\"NO\");\n//\t}\n\t\t\t\t\treturn 0;\n}\n"}
{"similarity_score": 0.08878127522195318, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f482d8b4bfc846fc9c56aceecd2c7d78", "bug_code_uid": "6b52ea3e2d462ebcbfe3fa7ffa8f6b96", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "def9ee92366adbcefabf4a3aad872d62", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int NofCases;\r\n    scanf(\"%d\",&NofCases);\r\n    int LOfAryy;\r\n    \r\n    int n;int done;\r\n    \r\n    \r\n    int numbers[200000];\r\n    \r\n    for (int i = 0; i<NofCases; i++)\r\n    {\r\n        scanf(\"%d\",&LOfAryy);\r\n        done = 0;\r\n        for (int i = 0; i<200000; i++) numbers[i] = 0;\r\n        \r\n        for (int i = 0; i<LOfAryy; i++)\r\n        {\r\n           scanf(\"%d\",&n);\r\n           numbers[n]++; \r\n        }\r\n        \r\n        for (int i = 0; i<200000; i++)\r\n        {\r\n            if (numbers[i]>2)\r\n            {\r\n                printf(\"%i\\n\", i);\r\n                done = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (!done) printf(\"-1\\n\");\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\nint f()\r\n{\r\n    int size;int N; int x = -1;\r\n    scanf(\"%i\", &size);\r\n    \r\n    int arry[size+1];\r\n    \r\n   \r\n    for (int i = 0; i < size+1; i++) arry[i] = 0;    \r\n    \r\n    \r\n    for (int i = 0; i< size; i++)\r\n    {\r\n        scanf(\"%i\", &N);\r\n        if (++arry[N] > 2) x = N;\r\n    }\r\n    return x;\r\n}\r\n\r\nint main()\r\n{\r\n    int NOfTestCases;\r\n    scanf(\"%i\", &NOfTestCases);\r\n    \r\n    for (int i = 0; i< NOfTestCases; i++)\r\n    {\r\n       \r\n        printf(\"%i\\n\" ,f());\r\n        \r\n    }\r\n    \r\n}"}
{"similarity_score": 0.9723320158102767, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "f6a9d42013aa127353127df63beaf3b7", "bug_code_uid": "fbc1ea82bd691d2d14f34faebf6115e5", "src_uid": "016e00b2b960be792d4ec7fcfb7976e2", "apr_id": "97b7b5f23456e0c7baaaaa6738a3fb54", "difficulty": 1300, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int i,j,k,l,a[100000][2],diff1,diff,max=0,min=0,max1=0,min1=0,n;\n\tscanf(\"%lld\", &n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tscanf(\"%lld\", &a[i][j]);\n\t\t\tif(j==0)\n\t\t\t{\n\t\t\t\tif(i==0)\n\t\t\t\t{\n\t\t\t\t\tmax1=a[i][j];\n\t\t\t\t\tmin1=a[i][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j]<min1)\n\t\t\t\t{\n\t\t\t\t\tmin1=a[i][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j]>max1)\n\t\t\t\t{\n\t\t\t\t\tmax1=a[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(i==0)\n\t\t\t\t{\n\t\t\t\t\tmax=a[i][j];\n\t\t\t\t\tmin=a[i][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j]<min)\n\t\t\t\t{\n\t\t\t\t\tmin=a[i][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j]>max)\n\t\t\t\t{\n\t\t\t\t\tmax=a[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n//\tprintf(\"%lld %lld\", max,min);\n\tdiff=max-min;\n\tdiff1=max1-min1;\n\tif(diff>diff1)\n\t{\n\t\tprintf(\"%lld\\n\",diff*diff);\n\t}\n\telse\n\t{\n\t\tprintf(\"%lld\\n\", diff*diff);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int i,j,k,l,a[100000][2],diff1,diff,max=0,min=0,max1=0,min1=0,n;\n\tscanf(\"%lld\", &n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tscanf(\"%lld\", &a[i][j]);\n\t\t\tif(j==0)\n\t\t\t{\n\t\t\t\tif(i==0)\n\t\t\t\t{\n\t\t\t\t\tmax1=a[i][j];\n\t\t\t\t\tmin1=a[i][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j]<min1)\n\t\t\t\t{\n\t\t\t\t\tmin1=a[i][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j]>max1)\n\t\t\t\t{\n\t\t\t\t\tmax1=a[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(i==0)\n\t\t\t\t{\n\t\t\t\t\tmax=a[i][j];\n\t\t\t\t\tmin=a[i][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j]<min)\n\t\t\t\t{\n\t\t\t\t\tmin=a[i][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j]>max)\n\t\t\t\t{\n\t\t\t\t\tmax=a[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n//\tprintf(\"%lld %lld %lld %lld\", max,min,max1,min1);\n\tdiff=max-min;\n\tdiff1=max1-min1;\n\tif(diff>diff1)\n\t{\n\t\tprintf(\"%lld\\n\",diff*diff);\n\t}\n\telse\n\t{\n\t\tprintf(\"%lld\\n\", diff1*diff1);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.3458646616541353, "equal_cnt": 17, "replace_cnt": 9, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "72f73848a7d14184761c3d7e2e901316", "bug_code_uid": "df18ee0673eb4cac6155967b3e323557", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "551d043abfa1995a29e24996f4d9ada7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\nint main()\n{\n   int x,n,h;\n   scanf(\"%d %d\",&n,&h);\n   x= n;\n   int a[2*h+1];\n   int counter=0;\n   \n   for(int i = 0; i < n;i++)\n   {\n       scanf(\"%d\",&a[i]);\n   }\n    for(int i = 0; i < n;i++)\n   {\n       if(a[i] > h){\n           counter++;\n       }\n   }\n   int result;\n   result = n + counter;\n   printf(\"%d\",result);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,h,i,cnt=0;\n    scanf(\"%d%d\",&n,&h);\n    int a[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0; i<n; i++)\n    {\n        if(a[i]>h)\n        {\n            cnt+=2;\n        }\n        else\n            cnt++;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n}"}
{"similarity_score": 0.9940828402366864, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "856284d21c308eb8a4bf0c2baef6b06c", "bug_code_uid": "e2bc6bef16513be72576b5e142682208", "src_uid": "f7defb09175c842de490aa13a4f5a0c9", "apr_id": "870cf5adab66f6de932558b76f78a9fa", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define _CRT_SECURE_NO_WARNINGS\r\n/*\r\nVC2010 sucks\r\nwhy disallow scanf\r\nscanf is love\r\nscanf is life\r\n*/\r\n#define true 1\r\n#define false 0\r\n#define MAX 2147483647\r\n\r\nint main() {\r\n    int t = 0;\r\n    scanf(\"%d\\n\", &t);\r\n    for (int testcase = 0; testcase < t; testcase++) {\r\n        int a = 0;\r\n        int b = 0;\r\n        scanf(\"%d %d\\n\", &a, &b);\r\n        if (b < a) {\r\n            printf(\"%d %d\\n\", 0, 0);\r\n        } else if (b % a) {\r\n            printf(\"%d %d\\n\", 0, 0);\r\n        } else {\r\n            printf(\"%d %d\\n\", 1, a / b);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#define _CRT_SECURE_NO_WARNINGS\r\n/*\r\nVC2010 sucks\r\nwhy disallow scanf\r\nscanf is love\r\nscanf is life\r\n*/\r\n#define true 1\r\n#define false 0\r\n#define MAX 2147483647\r\n \r\nint main() {\r\n    int t = 0;\r\n    scanf(\"%d\\n\", &t);\r\n    for (int testcase = 0; testcase < t; testcase++) {\r\n        int a = 0;\r\n        int b = 0;\r\n        scanf(\"%d %d\\n\", &a, &b);\r\n        if (b < a) {\r\n            printf(\"%d %d\\n\", 0, 0);\r\n        } else if (b % a) {\r\n            printf(\"%d %d\\n\", 0, 0);\r\n        } else {\r\n            printf(\"%d %d\\n\", 1, b / a);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.1311881188118812, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "233fed2e781a1eb0e0d7a9eb3b97fb48", "bug_code_uid": "f6784c40ecf59fa5d1ef876b1df4ca53", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "3e61d39dda494c9b15ba2870974db2cf", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i=0;\nchar c;\nwhile((c=getchar())!='\\n'){\nif(c=='4' || c=='7')\ni++;\n}\nprintf(i==4|i==7? \"YES\" : \"NO\");\nreturn 0;\n}\n\t \t\t\t\t\t  \t\t\t   \t \t \t     \t\t   \t", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int m;\n    scanf(\"%d\", &m);\n    while (m--)\n    {\n        int x = 0;\n        int n;\n        scanf(\"%d\", &n);\n        int a[n];\n        for (int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &a[i]);\n        }\n        for (int i = 0; i < n - 2; i++)\n        {\n            if (a[i] != a[i + 1] && a[i] != a[i + 2])\n                x = i;\n            if (a[i] != a[i + 1] && a[i + 1] != a[i + 2])\n                x = i + 1;\n            if (a[i] != a[i + 2] && a[i + 1] != a[i + 2])\n                x = i + 2;\n        }\n\n        printf(\"%d\\n\", x+1);\n    }\n}\n \t\t  \t\t \t\t\t\t \t\t\t \t\t \t \t\t\t\t\t\t\t\t\t"}
{"similarity_score": 0.9303370786516854, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4d135cf187235772d9e2dd1f86d4205b", "bug_code_uid": "580e646f92f38f3f3062f4af6d02a78f", "src_uid": "63b20ab2993fddf2cc469c4c4e8027df", "apr_id": "e6e9d324a4ad75b01c6946bd02fd72dd", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    long int a,i,p1=0,p2=0;\n    scanf(\"%ld\",&a);\n    long int n[a];\n    for(i=0;i<a;i++){\n        scanf(\"%ld\",&n[i]);\n}\nfor(i=0;i<a;i++)\n{\n    if(n[i]==25)\n    p1++;\n    else if(n[i]==50)\n    {\n        if(p1>=1)\n        {\n            p1--;\n            p2++;\n        }\n        else\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    else if(n[i]==100)\n    {\n        if(p1>=3)\n            p1-=3;\n        else if(p1>=1 && p2>=1)\n        {\n            p1--;\n            p2--;\n        }\n        else\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    } }\n    printf(\"YES\");\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(){\n    long int a,i,p1=0,p2=0;\n    scanf(\"%ld\",&a);\n    long int n[a];\n    for(i=0;i<a;i++){\n        scanf(\"%ld\",&n[i]);\n}\nfor(i=0;i<a;i++)\n{\n    if(n[i]==25)\n    p1++;\n    else if(n[i]==50)\n    {\n        if(p1>=1)\n        {\n            p1--;\n            p2++;\n        }\n        else\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    else if(n[i]==100)\n    {\n        \n        if(p1>=1 && p2>=1)\n        {\n            p1--;\n            p2--;\n        }\n        else if(p1>=3)\n            p1-=3;\n        else\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n}\n    printf(\"YES\");\n    return 0;\n}"}
{"similarity_score": 0.41090555014605645, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "eac3067ad2eca6d69dd32b1a2f01116e", "bug_code_uid": "2e5fc2fa30874945593d01b580e1cf80", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "3721b3483c693ed20cf719c2599b4892", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a,i,m,q,j,p[100002] = { 0 },z,c=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        while(a--)\n        {\n            p[++c] = i+1;\n        }\n    }\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d\",&q);\n        printf(\"%d\\n\",p[q]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,a,s[100001]={ 0 },m,x;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        s[ i ] = s[ i-1 ] + a;\n    }\n\n    scanf(\"%d\",&m);\n    while(m--)\n    {\n        int low = 1,high = n,mid;\n        scanf(\"%d\",&x);\n        while(1)\n        {\n            mid = (low+high)/2;\n            if(high-low==1)\n            {\n                if(x<=s[low])\n                    mid = low;\n                else\n                 mid = high;\n                break;\n            }\n            if(x< s[ mid ])\n                high = mid;\n            else\n                low = mid;\n        }\n        printf(\"%d\\n\", mid);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.43097643097643096, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "931968c42b930c9ad9983e08889e6fc5", "bug_code_uid": "0bcd5fe06e4a43365a7d87a9b2986355", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "5a64d3831599fadf4354bcfc9df4b5d5", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n\tlong long int s , t , rem , res ;\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%lld\",&s);\n\t\tres=s;\n\t\trem=s;\n\t\twhile(rem>0)\n\t\t{\n\t\t\trem-=10;\n\t\t\tif(rem>=0)\n\t\t\t{\n\t\t\t\trem+=1;\n\t\t\t\tres+=1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",res);\n\t\t\n\t} \n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(void)\n{\n\tlong long int s , t , res ,rem ;\n\tscanf(\"%lld\",&t);\n\twhile (t--) {\n\t\tscanf(\"%lld\",&s);\n\t\tlong long int ans = 0;\n\t\tint pw = 1000 * 1000 * 1000;\n\t\twhile (s > 0) {\n\t\t\twhile (s < pw) pw /= 10;\n\t\t\tans += pw;\n\t\t\ts -= pw - pw / 10;\n\t\t};\n\t\tprintf(\"%lld\\n\",ans);\n\t} \n\treturn 0;\n}"}
{"similarity_score": 0.9380863039399625, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7bd03db46bc3915f5d59bd9b373e4660", "bug_code_uid": "3f266ac924802b924a7265a812853dbf", "src_uid": "91d5147fb602298e08cbdd9f86d833f8", "apr_id": "652a0d9e2d0e7d4d20978d8a9055087d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,a,b,c;\n    scanf(\"%d\",&n);\n    a=n/3;\n    if(a%3==0) a+=1;\n    n-=a;\n    b=n/2;\n    n-=b;\n    if(b%3==0&&(n+1)%3==0)\n    {\n        b+=1;\n        n--;\n    }\n    else if(b%3==0&&(n-1)%3==0)\n    {\n        b-=1;\n        n++;\n    }\n    else if(b%3!=0&&n%3==0)\n    {\n        if((b+1)%3==0)\n        {\n            b-=1;\n            n++;\n        }\n        else\n        {\n            b++;\n            n--;\n        }\n    }\n    printf(\"%d %d %d\",a,b,n);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,a,b,c;\n    scanf(\"%d\",&n);\n    a=n/3;\n    if(a%3==0) a+=1;\n    n-=a;\n    b=n/2;\n    n-=b;\n    if(b%3==0&&(n+1)%3==0)\n    {\n        b+=1;\n        n--;\n    }\n    else if(b%3==0&&(n-1)%3==0)\n    {\n        b-=1;\n        n++;\n    }\n    else if(b%3==0&&n%3==0)\n    {\n        b++;\n        n--;\n    }\n    else if(b%3!=0&&n%3==0)\n    {\n        if((b+1)%3==0)\n        {\n            b-=1;\n            n++;\n        }\n        else\n        {\n            b++;\n            n--;\n        }\n    }\n    printf(\"%d %d %d\",a,b,n);\n    return 0;\n}\n"}
{"similarity_score": 0.6444780635400907, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "17b5e0367dd8766a7666b63e5fe113ab", "bug_code_uid": "7a8076985cedbd4bd94eaae894b28538", "src_uid": "f4779e16e0857e6507fdde55e6d4f982", "apr_id": "0c528b638c593f16c45c167f43697ac4", "difficulty": null, "tags": ["constructive algorithms", "probabilities"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\tint n,i,x,y,t;\n\tscanf(\"%d\",&t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%d\",&n);\n\t\tfor(x=n;x>0;x--){\n\t\tif(x!=1)printf(\"%d \",x);\n\t\tif(x==1)printf(\"%d\",x);\n\t\t}\n\t\tif(i!=t-1)printf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\tint n,i,x,y,t,k,j,o;int a[1000];\n\tscanf(\"%d\",&t);\n\tfor(i=1;i<=t;i++){\n\t\tscanf(\"%d\",&n);\n\t\tif(n%2==0){\n\t\tfor(x=n;x>0;x--){\n\t\tif(x!=1)printf(\"%d \",x);\n\t\tif(x==1)printf(\"%d\",x);\n\t\t}\n\t}\n\t\tif(n%2!=0){\n\t\t\tfor(j=n;j>0;j--){\n\t\t\t a[j]=j;\n\t\t\t}\n\t\t\ta[0]=n;\n\t\t\tk=(n+1)/2;\n\t\t\ta[k]=k;\n\t\t\t\n\t\t\n\t\tfor(j=0;j<n;j++){\n\t\t\t\tif(j==0)printf(\"%d\",a[0]);\n\t\t\t\telse printf(\" %d\",a[j]);\n\t\t\t\t}\n\t}\nif(i!=t)printf(\"\\n\");\n}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.7120743034055728, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "cf324222ddfaae4fe1b1e3e621282676", "bug_code_uid": "cce6fc0f1dbbb8e5cd5638c1990b939e", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "ec8401a7b08c2b54781fb01ebcc30b03", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main() \n{\n    long long int y,k,n;\n    scanf(\"%lld %lld %lld\",&y,&k,&n);\n    long long int i,count=0;\n    for(i=1;i<n+1-y;i++)\n    {\n        if((i+y)%k==0)\n        {\n            printf(\"%lld \",i);\n            count++;\n        }\n    }\n    if(count==0)\n    printf(\"-1\");\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main() \n{\n    long long int y,k,n;\n    scanf(\"%lld %lld %lld\",&y,&k,&n);\n    long long int i,count=0;\n    for(i=1;i*k<=n;i++)\n    {\n        if(i*k-y>0)\n        {\n            count++;\n            printf(\"%lld \",i*k-y);\n        }\n    }\n    if(count==0)\n    printf(\"-1\");\n    return 0;\n}"}
{"similarity_score": 0.11366711772665765, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "d8fd30f649d8bb06f1a0631b80ff6695", "bug_code_uid": "7b2c9961ca3de44767f7ee82f4be26e7", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "732eb274a54c14157381b2691deaf2b5", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n, m, lbl[100001], mol[100001], sum, i, j;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &lbl[i]);\n    }\n    scanf(\"%d\", &m);\n    for(i=0; i<m; i++){\n        scanf(\"%d\", &mol[i]);\n    }\n    //sum = 0;\n    for(i=0; i<m; i++){\n        sum = 0;\n        for(j=0; j<n; j++){\n            sum = sum+ lbl[j];\n            if(sum>=mol[i]){\n                printf(\"%d\\n\", j+1);\n                break;\n            }\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint j,i,n,sum=0,m,x,a[1000000];\nscanf(\"%d\",&n);\nj=0;\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&x);\nsum+=x;\nfor( ;j<sum;j++)\na[j]=i+1;\n}\nscanf(\"%d\",&m);\nfor(i=0;i<m;i++)\n{\nscanf(\"%d\",&x);\nprintf(\"%d\\n\",a[x-1]);\n}\nreturn 0;\n}"}
{"similarity_score": 0.9947201689545935, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b1889d48e9012d0a9e63034da3dbc5aa", "bug_code_uid": "94632df7228e30c4c0f70ba4f1f6d3b7", "src_uid": "bacd613dc8a91cee8bef87b787e878ca", "apr_id": "10a34f06dec4771542d69a47cda76827", "difficulty": 1300, "tags": ["implementation", "hashing", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint i,j,a[n][m],b[n][m],k;\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++) {\n\t\t   scanf(\"%d\",&a[i][j]);\n\t\t   b[i][j] = 1;\n\t    }\n    }\n    for (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++) {\n\t\t   if (a[i][j] == 0) {\n\t\t   \tfor (k = 0; k < m; k++) {\n\t\t   \t\tb[i][k] = 0;\n\t\t   \t}\n\t\t   \tfor (k = 0; k < n; k++) {\n\t\t   \t\tb[k][j] = 0;\n\t\t   \t}\n\t\t   }\n\t    }\n    }\n    int d = 0;\n    for (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++) {\n\t\t   if (a[i][j] == 1) {\n\t\t   \tfor (k = 0; k < m; k++) {\n\t\t   \t\tif (b[i][k] == 1) {\n\t\t   \t\t\td++;\n\t\t   \t\t   }\n\t\t   \t}\n\t\t   \tfor (k = 0; k < n; k++) {\n\t\t   \t\tif (b[k][j] == 1) {\n\t\t   \t\t\td++;\n\t\t   \t\t}\n\t\t   \t}\n\t\t   if (d == 0) {\n\t\t     puts(\"NO\");\n\t\t     return  0;\n\t\t   }\n\t    }\n\t}\n    }\n    puts(\"YES\");\n    for (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++) {\n\t\t\tprintf(\"%d \",b[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\tprintf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main() {\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint i,j,a[n][m],b[n][m],k;\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++) {\n\t\t   scanf(\"%d\",&a[i][j]);\n\t\t   b[i][j] = 1;\n\t    }\n    }\n    for (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++) {\n\t\t   if (a[i][j] == 0) {\n\t\t   \tfor (k = 0; k < m; k++) {\n\t\t   \t\tb[i][k] = 0;\n\t\t   \t}\n\t\t   \tfor (k = 0; k < n; k++) {\n\t\t   \t\tb[k][j] = 0;\n\t\t   \t}\n\t\t   }\n\t    }\n    }\n    int d = 0;\n    for (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++) {\n\t\t\td = 0;\n\t\t   if (a[i][j] == 1) {\n\t\t   \tfor (k = 0; k < m; k++) {\n\t\t   \t\tif (b[i][k] == 1) {\n\t\t   \t\t\td++;\n\t\t   \t\t   }\n\t\t   \t}\n\t\t   \tfor (k = 0; k < n; k++) {\n\t\t   \t\tif (b[k][j] == 1) {\n\t\t   \t\t\td++;\n\t\t   \t\t}\n\t\t   \t}\n\t\t   if (d == 0) {\n\t\t     puts(\"NO\");\n\t\t     return  0;\n\t\t   }\n\t    }\n\t}\n    }\n    puts(\"YES\");\n    for (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < m; j++) {\n\t\t\tprintf(\"%d \",b[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\tprintf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9924528301886792, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "27fab44b6ee084ad7ae5029d54e7f512", "bug_code_uid": "c0fc3401bb139f27029959e1f2221d2b", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "68eee04000031042de1eb5890da00048", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//http://codeforces.com/contest/431/problem/A\n#include<stdio.h>\n\n//void sort(char *ptr, int n);\n//void upper(char *ptr);\n//void lower(char *ptr);\n\nint main(void)\n{\n\tint arr[4], i, calories=0;\n\tchar str[10001];\n\tfor(i=0;i<4;i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t}\n\tscanf(\"%s\", str);\n\ti=0;\n\twhile(str[i]!='\\0')\n\t{\n\t\tif(str[i]=='1')\n\t\t{\n\t\t\tcalories+=arr[0];\n\t\t}\n\t\tif(str[i]=='2')\n\t\t{\n\t\t\tcalories+=arr[1];\n\t\t}\n\t\tif(str[i]=='3')\n\t\t{\n\t\t\tcalories+=arr[2];\n\t\t}\n\t\tif(str[i]=='4')\n\t\t{\n\t\t\tcalories+=arr[3];\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\\n\", calories);\n\treturn 0;\n}\n\n/*\nvoid upper(char *ptr)\n{\n\tint i=0;\n\twhile(ptr[i]!='\\0')\n\t{\n\t\tif(ptr[i]>='a'&&ptr[i]<='z')\n\t\t\tptr[i]-=32;\n\t\ti++;\n\t}\n\tif(small>=capital)\n\t\tlower(str);\n\telse\n\t\tupper(str);\n}*/\n\n/*\nvoid lower(char *ptr)\n{\n\tint i=0;\n\twhile(ptr[i]!='\\0')\n\t{\n\t\tif(ptr[i]>='A'&&ptr[i]<='Z')\n\t\t\tptr[i]+=32;\n\t\ti++;\n\t}\n}/*\n\n\n/*void sort(char *ptr, int n)\n{\n\tint i, j, temp;\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<n-i-1;j++)\n\t\t{\n\t\t\tif(ptr[j]>ptr[j+1])\n\t\t\t\t{\n\t\t\t\t\ttemp=ptr[j];\n\t\t\t\t\tptr[j]=ptr[j+1];\n\t\t\t\t\tptr[j+1]=temp;\n\t\t\t\t}\n\n\t\t}\n\t}\n\n}*/\n", "fixed": "//http://codeforces.com/contest/431/problem/A\n#include<stdio.h>\n\n//void sort(char *ptr, int n);\n//void upper(char *ptr);\n//void lower(char *ptr);\n\nint main(void)\n{\n\tint arr[4], i, calories=0;\n\tchar str[100001];\n\tfor(i=0;i<4;i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t}\n\tscanf(\"%s\", str);\n\ti=0;\n\twhile(str[i]!='\\0')\n\t{\n\t\tif(str[i]=='1')\n\t\t{\n\t\t\tcalories+=arr[0];\n\t\t}\n\t\telse if(str[i]=='2')\n\t\t{\n\t\t\tcalories+=arr[1];\n\t\t}\n\t\telse if(str[i]=='3')\n\t\t{\n\t\t\tcalories+=arr[2];\n\t\t}\n\t\telse if(str[i]=='4')\n\t\t{\n\t\t\tcalories+=arr[3];\n\t\t}\n\t\ti++;\n\t}\n\tprintf(\"%d\\n\", calories);\n\treturn 0;\n}\n\n/*\nvoid upper(char *ptr)\n{\n\tint i=0;\n\twhile(ptr[i]!='\\0')\n\t{\n\t\tif(ptr[i]>='a'&&ptr[i]<='z')\n\t\t\tptr[i]-=32;\n\t\ti++;\n\t}\n\tif(small>=capital)\n\t\tlower(str);\n\telse\n\t\tupper(str);\n}*/\n\n/*\nvoid lower(char *ptr)\n{\n\tint i=0;\n\twhile(ptr[i]!='\\0')\n\t{\n\t\tif(ptr[i]>='A'&&ptr[i]<='Z')\n\t\t\tptr[i]+=32;\n\t\ti++;\n\t}\n}/*\n\n\n/*void sort(char *ptr, int n)\n{\n\tint i, j, temp;\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<n-i-1;j++)\n\t\t{\n\t\t\tif(ptr[j]>ptr[j+1])\n\t\t\t\t{\n\t\t\t\t\ttemp=ptr[j];\n\t\t\t\t\tptr[j]=ptr[j+1];\n\t\t\t\t\tptr[j+1]=temp;\n\t\t\t\t}\n\n\t\t}\n\t}\n\n}*/\n"}
{"similarity_score": 0.9927243330638642, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c6e51450c4bf93fa4daba5da136f6d12", "bug_code_uid": "01a58f28a455adc979c0c9ede72c60b1", "src_uid": "f5451b19cf835b1cb154253fbe4ea6df", "apr_id": "56a77dbabd7c8d3ccfc1042307702603", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n\nint main()\n{\n    int k;\n\tscanf(\"%d\",&k);\n\tchar str[1001];\n\tscanf(\"%s\",str);\n\tint length;\n\tlength = strlen(str);\n\tint i,arr[26]={0},store1[26];\n\tchar alphabets[26]  = \"abcdefghijklmnopqrstuvwxyz\";\n\tfor(i = 0; i < length; i++)\n\t{\n\t\t\tarr[str[i]-97]++;\n\t}\n\t\t//for(i=0;i<26;i++)\n\t\t//\tprintf(\"%d\\n\",arr[i]);\n\tint flag = 0;\n\tfor(i=0;i<26;i++)\n\t{\n\t\tif(arr[i]%(length/k) !=0)\n\t\t\t{\n\t\t\t\t//printf(\"%d\\n yes\",i);\n\t\t\t\t//printf(\"%d\\n yes 2\",arr[i]);\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n            else\n                store1[i] = arr[i]/(length/k);\n\t}\n//\t\tprintf(\"%d\\n\",flag);\n\t\tchar store[1000];\n\t\tint counter=0,l,iter;\n\t\tif(length == k)\n\t\t{\n\t\t\tfor(i=0;i<26;i++)\n\t\t\t{\n\t\t\t\tif(arr[i]!= length && arr[i]!=0)\n\t\t\t\t{\n\t\t\t\t\tflag = 1;\n\t\t\t\t//printf(\"%d\\n yes\",i);\n\t\t\t\t//printf(\"%d\\n yes 2\",arr[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        //for(i=0;i<26;i++)\n    \t//\tprintf(\"%d\\n\",store1[i]);\n\t\tif(flag == 1)\n\t\t\tprintf(\"-1\\n\");\n\t\telse if(length == k)\n\t\t\tprintf(\"%s\",str);\n\t\telse\n\t\t{\n\t\t\tfor(i=0;i<26;i++)\n\t\t\t{\n\t\t\t\t\t\tfor(iter= 0;iter<store1[i];iter++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstore[counter] = alphabets[i];\n\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=0;i<k;i++)\n\t\t\t{\n\t\t\t\tfor(l=0;l<counter;l++)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c\",store[l]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\n\nint main()\n{\n    int k;\n\tscanf(\"%d\",&k);\n\tchar str[1001];\n\tscanf(\"%s\",str);\n\tint length;\n\tlength = strlen(str);\n\tint i,arr[26]={0},store1[26];\n\tchar alphabets[26]  = \"abcdefghijklmnopqrstuvwxyz\";\n\tfor(i = 0; i < length; i++)\n\t{\n\t\t\tarr[str[i]-97]++;\n\t}\n\t\t//for(i=0;i<26;i++)\n\t\t//\tprintf(\"%d\\n\",arr[i]);\n\tint flag = 0;\n\tfor(i=0;i<26;i++)\n\t{\n\t\tif(arr[i]%k !=0)\n\t\t\t{\n\t\t\t\t//printf(\"%d\\n yes\",i);\n\t\t\t\t//printf(\"%d\\n yes 2\",arr[i]);\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n            else\n                store1[i] = arr[i]/k;\n\t}\n//\t\tprintf(\"%d\\n\",flag);\n\t\tchar store[1000];\n\t\tint counter=0,l,iter;\n\t\tif(length == k)\n\t\t{\n\t\t\tfor(i=0;i<26;i++)\n\t\t\t{\n\t\t\t\tif(arr[i]!= length && arr[i]!=0)\n\t\t\t\t{\n\t\t\t\t\tflag = 1;\n\t\t\t\t//printf(\"%d\\n yes\",i);\n\t\t\t\t//printf(\"%d\\n yes 2\",arr[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        //for(i=0;i<26;i++)\n    \t//\tprintf(\"%d\\n\",store1[i]);\n\t\tif(flag == 1)\n\t\t\tprintf(\"-1\\n\");\n\t\telse if(length == k)\n\t\t\tprintf(\"%s\",str);\n\t\telse\n\t\t{\n\t\t\tfor(i=0;i<26;i++)\n\t\t\t{\n\t\t\t\t\t\tfor(iter= 0;iter<store1[i];iter++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstore[counter] = alphabets[i];\n\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=0;i<k;i++)\n\t\t\t{\n\t\t\t\tfor(l=0;l<counter;l++)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c\",store[l]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.6440677966101694, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c90f1b8fb28ce59642f4aefd986ae179", "bug_code_uid": "a9b0b247a19d636b8cee82b6a1e9aaea", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "e90c9c70d76f95f6ef89862b1ce0da43", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong int flag=0,l,r,i,j;\n\t\tscanf(\"%ld%ld\",&l,&r);\n\t\tfor(i=l;i<r;i++)\n\t\t {\n\t\t \tfor(j=r;j>i;j--)\n\t\t \t{\n\t\t \t\tif(j%i==0)\n\t\t \t\t{\n\t\t \t\t\tprintf(\"%ld %ld\\n\",i,j);\n\t\t \t\t\tflag=1;\n\t\t \t\t\tbreak;\n\t\t\t\t }\n\t\t\t }\n\t\t\t if(flag==1)\n\t\t\t  break;\n\t\t }\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tlong int l,r;\n\t\tscanf(\"%ld%ld\",&l,&r);\n\t\tprintf(\"%ld %ld\\n\",l,2*l);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9917355371900827, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "652386977a8871eb7496bb8fc65a9d2b", "bug_code_uid": "e63dd12f2388047611fd120e8aa4fb97", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "042e12bf8ac272dfab58aead9c5d48e1", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint  main()\n{\n         int a,b,x,i,dif;\n         int div,result;\n         scanf(\"%d\",&x);\n\n         for(i=1;i<=x;i++)\n         {\n                     scanf(\"%d %d\",&a,&b);\n                     dif=a-b;\n                     div=dif/10;\n                    result=abs(div);\n\n                      if(div%10==0)\n                        printf(\"%d\\n\",result);\n\n                         else\n                                    printf(\"%d\\n\",result+1);\n\n}\n\nreturn 0;\n\n\n}\n", "fixed": "#include<stdio.h>\nint  main()\n{\n         int a,b,k,i,dif;\n         int div,result;\n         scanf(\"%d\",&k);\n\n         for(i=1;i<=k;i++)\n         {\n                     scanf(\"%d %d\",&a,&b);\n                     dif=a-b;\n                     div=dif/10;\n                    result=abs(div);\n\n                      if(dif%10==0)\n                        printf(\"%d\\n\",result);\n\n                         else\n                                    printf(\"%d\\n\",result+1);\n\n}\n\nreturn 0;\n\n\n}\n"}
{"similarity_score": 0.404344193817878, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9324f84e689e56319163f5b5d7146cf8", "bug_code_uid": "ca234e73922c37c86a6bb3f69e0b7bbb", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "471bf46c8ac33e70a5e5cf58ec729a58", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include<stdio.h>\n//#include<conio.h>\nvoid main(){\n    int n,num=0,i,m,count1=0,count_1=0,l,r,pair;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&num);\n        if(num==1)\n        count1+=1;\n        else \n        count_1+=1;\n    }\n    if(count1<count_1)\n    pair=count1;\n    else\n    pair=count_1;\n    for( i=0;i<m;i++){\n        scanf(\"%d %d\",&l,&r);\n        //  printf(\"%d %d\",count1,count_1);\n        if((r-l)%2==0)\n        printf(\"0\\n\");\n        else{\n            if((((r-l)+1)/2)<=pair)\n            printf(\"1\\n\");\n            else\n            printf(\"0\\n\");\n        }\n    }\n    \n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,num=0,i,m,count1=0,count_1=0,l,r,pair;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&num);\n        if(num==1)\n        count1+=1;\n        else \n        count_1+=1;\n    }\n    if(count1<count_1)\n    pair=count1;\n    else\n    pair=count_1;\n    for( i=0;i<m;i++){\n        scanf(\"%d %d\",&l,&r);\n        //  printf(\"%d %d\",count1,count_1);\n        if((r-l)%2==0)\n        printf(\"0\\n\");\n        else{\n            if((((r-l)+1)/2)<=pair)\n            printf(\"1\\n\");\n            else\n            printf(\"0\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.958570268074736, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "62d9145264be9733c8a97e17d0884136", "bug_code_uid": "cf2da23ebe96c0256d49deab206b2671", "src_uid": "8b926a19f380a56018308668c17c6928", "apr_id": "faad86b8a349868abab7587099b84da6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h> \r\n\r\n\r\nint main() {\r\n\tint T;\r\n\tscanf(\"%d\", &T);\r\n\tint flat; \r\n\twhile(T>0) {\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tlong long int a[n+5];\r\n\t\tint i; \r\n\t\tfor(i=0; i<n; i++) scanf(\"%lld\", &a[i]); \r\n\t\tint flat=1; \r\n\r\n\t\tif(n==1&&a[0]>1) flat=0;\r\n\t\telse if(n>1)  {\r\n\t\t\ti=0; \r\n\t\t\tlong long int max1=0, max2=0; \r\n\t\t\twhile(i<n) {\r\n\t\t\t\tif(a[i]>max1) max1=a[i];\r\n\t\t\t\ti++; \r\n\t\t\t} \r\n\t\t\ti=0; \r\n\t\t\twhile(i<n) {\r\n\t\t\t\tif(a[i]>max2 && a[i]<=max1) max2=a[i];\r\n\t\t\t\ti++; \r\n\t\t\t} \r\n\t\t\tif(max1>max2+1) flat=0;\r\n\t\t} \r\n\t\tif(flat==1) printf(\"yes\\n\"); else printf(\"no\\n\"); \t\r\n\t\tT--; \r\n\t} \r\n\treturn 0; \r\n}  \r\n", "fixed": "#include<stdio.h> \r\n\r\n\r\nint main() {\r\n\tint T;\r\n\tscanf(\"%d\", &T);\r\n\tint flat; \r\n\twhile(T>0) {\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tlong long int a[n+5];\r\n\t\tint i; \r\n\t\tfor(i=0; i<n; i++) scanf(\"%lld\", &a[i]); \r\n\t\tint flat=1; \r\n\r\n\t\tif(n==1&&a[0]>1) flat=0;\r\n\t\telse if(n>1)  {\r\n\t\t\ti=0; \r\n\t\t\tlong long int max1=0, max2=0; \r\n\t\t\twhile(i<n) {\r\n\t\t\t\tif(a[i]>max1) max1=a[i];\r\n\t\t\t\ti++; \r\n\t\t\t} \r\n\t\t\ti=0; \r\n\t\t\twhile(a[i]!=max1) i++; \r\n\t\t\ta[i]=0; \r\n\t\t\ti=0; \r\n\t\t\twhile(i<n) {\r\n\t\t\t\tif(a[i]>max2 && a[i]<=max1) max2=a[i];\r\n\t\t\t\ti++; \r\n\t\t\t} \r\n\t\t\tif(max1>max2+1) flat=0;\r\n\t\t} \r\n\t\tif(flat==1) printf(\"yes\\n\"); else printf(\"no\\n\"); \t\r\n\t\tT--; \r\n\t} \r\n\treturn 0; \r\n}  \r\n"}
{"similarity_score": 0.998911860718172, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "bec7fb2db20cc0dccdb64904b0b4fd20", "bug_code_uid": "e98376852ca01c3473c185cc2545cc6b", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "bb837923d1397a8dd1d144bee0a47a81", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int a[10005],y,n,k,z=0,s,i=1;\n    scanf(\"%d %d %d\",&y,&k,&n);\n    s=y;\n    if(y>=n)\n    printf(\"-1\");\n    else\n    {\n        while(y<=n)\n        {\n            y=k*i;\n            if(y<=n && y>s)\n            {\n                a[z]=y-s;\n                z++;\n            }\n            i++;\n        }\n        if(z>0){\n        for(i=0;i<z;i++)\n        printf(\"%d \",a[i]);}\n        else\n        printf(\"-1\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int a[100005],y,n,k,z=0,s,i=1;\n    scanf(\"%d %d %d\",&y,&k,&n);\n    s=y;\n    if(y>=n)\n    printf(\"-1\");\n    else\n    {\n        while(y<=n)\n        {\n            y=k*i;\n            if(y<=n && y>s)\n            {\n                a[z]=y-s;\n                z++;\n            }\n            i++;\n        }\n        if(z>0){\n        for(i=0;i<z;i++)\n        printf(\"%d \",a[i]);}\n        else\n        printf(\"-1\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.6666666666666666, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 7, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "4ecbcd0626802fad3c30b58457a62b39", "bug_code_uid": "6644eaa4a5eb4b3e8694e3e3b59b0070", "src_uid": "e0ec0cd81d2ec632ef89d207d80fa8a3", "apr_id": "5454c307b291560ad2c6733a388dcf86", "difficulty": 800, "tags": ["math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() \n{\n\tint t,a[7];\n\tscanf(\"%d\",&t);\n\twhile (t--) \n\t{\n\t\tfor (int i=0;i<7;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tprintf(\"%d %d %d\\n\",a[7]-a[5],a[1],a[5]-a[1]);\n\t}\n\treturn 0; \n}\n\t\t\t \t\t  \t  \t\t \t\t\t \t \t \t \t\t\t \t \t", "fixed": "int main()\n{\n\tint t;\n\tint a[1823];\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tfor (int i = 1; i <= 7; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[i]);\n\n\t\t}\n\t\tprintf(\"%d %d %d\\n\", a[1], a[2], a[7] - a[2] - a[1]);\n\t}\n\treturn 0;\n}\n \t\t\t\t\t\t \t  \t   \t\t   \t  \t \t\t \t\t\t"}
{"similarity_score": 0.9699812382739212, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d51e876131ee09d46ccf8970f5493d70", "bug_code_uid": "1dd99f74aaaeb403bfe3324a6962a696", "src_uid": "afce38aa7065da88d824d1d981b5b338", "apr_id": "c57b908b7aa1841f722b3a3ef6f55471", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t,n,x,odd,even,a;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d %d\",&n,&x);\n        odd=0,even=0;\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a);\n            if((a%2)==1)\n            odd++;\n            else\n            even++;\n        }\n        if(odd==0)\n        printf(\"No\\n\");\n        else{\n            if((odd%2)==0)\n            odd--;\n            if((odd+even)>=x)\n            printf(\"Yes\\n\");\n            else printf(\"No\\n\");\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int t,n,x,odd,even,a;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d %d\",&n,&x);\n        odd=0,even=0;\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a);\n            if((a%2)==1)\n            odd++;\n            else\n            even++;\n        }\n        if(odd==0)\n        printf(\"No\\n\");\n        else{\n            if((odd%2)==0)\n            odd--;\n            if(((odd+even)>=x)&((x%2)||((x%2==0)&(even!=0))))\n            printf(\"Yes\\n\");\n            else printf(\"No\\n\");\n        }\n    }\n}\n"}
{"similarity_score": 0.9213483146067416, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d6ee783caf8198e6c4d37daa0a44315f", "bug_code_uid": "0b5bbd9afcb64cd2abd4e90138c3cc85", "src_uid": "e59cddb6c941b1d7556ee9c020701007", "apr_id": "7e0a9c199eaedeb96c8815b9db091439", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define min(x,y) x<y?x:y\n#define abs(x) x>=0?x:-x\nint t,n,k,ans,ans1,ans2;\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);ans=ans1=ans2=0;\n\t\twhile(n--){\n\t\t\tscanf(\"%d\",&k);\n\t\t\tif(k%3==0) ans++;\n\t\t\telse\n\t\t\t\tif(k%3==1) ans1++;\n\t\t\t\telse ans2++;\n\t\t}\n\t\tans+=min(ans1,ans2);\n\t\tprintf(\"%d\",ans);\n\t\tans+=((abs(ans1-ans2))/3);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#define min(x,y) x<y?x:y\nint abs(int x){\n\tif(x>=0) return x;\n\telse return -x;\n}\nint t,n,k,ans,ans1,ans2;\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);ans=ans1=ans2=0;\n\t\twhile(n--){\n\t\t\tscanf(\"%d\",&k);\n\t\t\tif(k%3==0) ans++;\n\t\t\telse\n\t\t\t\tif(k%3==1) ans1++;\n\t\t\t\telse ans2++;\n\t\t}\n\t\tans+=min(ans1,ans2);\n//\t\tprintf(\"%d\",ans);\n\t\tans+=((abs(ans1-ans2))/3);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9909584086799277, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8f76856f689e96b7daca86bf6160b9cd", "bug_code_uid": "1c08f9e00e3d128c74fd2bf70f64ccde", "src_uid": "ec1a29826209a0820e8183cccb2d2f01", "apr_id": "5eaa5ce5e821ee5d814e69b1b56b4312", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include \"stdbool.h\"\n#include \"stdio.h\"\n#include \"stdint.h\"\n#include \"string.h\"\n#include \"ctype.h\"\n#include \"stdlib.h\"\n#include \"math.h\"\n\n#define PI 3.14159265358979323846264338327950288\n#define ll long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define MOD 1000000007\n#define N 100000\n\nint a[N];\nint n,k,a1=INT32_MAX,a2;\n\nint main() {\n    scanf(\"%d%d\", &n, &k);\n    for (int i=0; i<n; i++) {\n        scanf(\"%d\", &a[i]); a2 = max(a2,a[i]); a1=min(a1,a[i]);\n    }\n    printf(\"%d\", k<2?a1:(k>2?a2:max(a[0],a[n-1])));\n}", "fixed": "#include \"stdbool.h\"\n#include \"stdio.h\"\n#include \"stdint.h\"\n#include \"string.h\"\n#include \"ctype.h\"\n#include \"stdlib.h\"\n#include \"math.h\"\n\n#define PI 3.14159265358979323846264338327950288\n#define ll long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define MOD 1000000007\n#define N 100000\n\nint a[N];\nint n,k,a1=INT32_MAX,a2=INT32_MIN;\n\nint main() {\n    scanf(\"%d%d\", &n, &k);\n    for (int i=0; i<n; i++) {\n        scanf(\"%d\", &a[i]); a2 = max(a2,a[i]); a1=min(a1,a[i]);\n    }\n    printf(\"%d\", k<2?a1:(k>2?a2:max(a[0],a[n-1])));\n}"}
{"similarity_score": 0.9149888143176734, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "358df0dbd016328d4c6eaff3797bb286", "bug_code_uid": "b14e016930fc27e0a9b581024fb6efab", "src_uid": "8cf5d08a319672d9b767d3523eca4df6", "apr_id": "89c2b51763965bfbdabd416f3c8cce2e", "difficulty": 1400, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <limits.h>\n\nint n, w;\nint ps[1010];\nint mn = INT_MAX, mx = INT_MIN;\n\nint main() {\n    scanf(\"%d%d\", &n, &w);\n    int lb, rb;\n    for (int i = 1; i <= n; i++) {\n        int x;\n        scanf(\"%d\", &x);\n        ps[i] = ps[i - 1] + x;\n        if (mn > ps[i]) mn = ps[i];\n        if (mx < ps[i]) mx = ps[i];\n    }\n    lb = (mn >= 0) ? 0 : (-mn);\n    rb = w - mx;\n    printf(\"%d\\n\", rb - lb + 1);\n}", "fixed": "#include <stdio.h>\n#include <limits.h>\n\nint n, w;\nint ps[1010];\nint mn = INT_MAX, mx = INT_MIN;\n\nint main() {\n    scanf(\"%d%d\", &n, &w);\n    int lb, rb;\n    for (int i = 1; i <= n; i++) {\n        int x;\n        scanf(\"%d\", &x);\n        ps[i] = ps[i - 1] + x;\n        if (mn > ps[i]) mn = ps[i];\n        if (mx < ps[i]) mx = ps[i];\n    }\n    lb = (mn >= 0) ? 0 : (-mn);\n    rb = (mx > 0) ? (w - mx) : w;\n    int ans = (rb < lb) ? 0 : (rb - lb + 1);\n    printf(\"%d\\n\", ans);\n}"}
{"similarity_score": 0.17212012550425818, "equal_cnt": 20, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "c662b98a7621b1bca7fac23858a6c984", "bug_code_uid": "c887da480c7b0e2529e1a44281d78279", "src_uid": "81faa525ded9b209fb7d5d8fec95f38b", "apr_id": "10e066be3a8de3612855ffb1e5ec32b1", "difficulty": 1200, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tint n;\n\tfor (int i = 0; i < n; i++) {\n\t\tchar str[200];\n\t\tscanf(\"%s\", str);\n\n\t\tint low = 0, high = 0, digit = 0;\n\t\tfor (int j = 0; j < strlen(str); j++) {\n\t\t\tif (str[j] >= 'a' && str[j] <= 'z')\n\t\t\t\thigh++;\n\t\t\telse if (str[j] >= 'A' && str[j] <= 'Z')\n\t\t\t\tlow++;\n\t\t\telse\n\t\t\t\tdigit++;\n\t\t}\n\n\t\tif (low != 0 && high != 0 && digit != 0) {\n\t\t\tprintf(\"%s\\n\", str);\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (int j = 0; j < strlen(str); j++) {\n\t\t\tif (str[j] >= 'a' && str[j] <= 'z' && low > 1 && high == 0)\n\t\t\t\tstr[j] = 'A';\n\t\t\telse if (str[j] >= 'a' && str[j] <= 'z' && low > 1 && digit == 0)\n\t\t\t\tstr[j] = '0';\n\t\t\telse if (str[j] >= 'A' && str[j] <= 'Z' && high > 1 && low == 0)\n\t\t\t\tstr[j] = 'a';\n\t\t\telse if (str[j] >= 'A' && str[j] <= 'Z' && high > 1 && digit == 0)\n\t\t\t\tstr[j] = '1';\n\t\t\telse if (digit > 1 && low == 0)\n\t\t\t\tstr[j] = 'a';\n\t\t\telse\n\t\t\t\tstr[j] = 'A';\n\n\t\t\tif (low != 0 && high != 0 && digit != 0) {\n\t\t\t\tprintf(\"%s\\n\", str);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tchar s[200] = {};\n\t\tscanf(\"%s\", s);\n\t\tint upper = 0, low = 0, digit = 0;\n\t\tfor (int j = 0; j < strlen(s); j++) {\n\t\t\tif (islower(s[j]))\n\t\t\t\tlow++;\n\t\t\telse if (isdigit(s[j]))\n\t\t\t\tdigit++;\n\t\t\telse\n\t\t\t\tupper++;\n\t\t}\n\n\t\tif (low == 0 && upper == 0) {\n\t\t\ts[0] = 'A';\n\t\t\ts[1] = 'a';\n\t\t}\n\t\telse if (low == 0 && digit == 0) {\n\t\t\ts[0] = 'a';\n\t\t\ts[1] = '1';\n\t\t}\n\t\telse if (upper == 0 && digit == 0) {\n\t\t\ts[0] = 'A';\n\t\t\ts[1] = '1';\n\t\t}\n\t\telse if (low == 0)\n\t\t\tfor (int k = 0; k < strlen(s); k++) {\n\t\t\t\tif (isupper(s[k]) && upper > 1) {\n\t\t\t\t\ts[k] = 'a';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (isdigit(s[k]) && digit > 1) {\n\t\t\t\t\ts[k] = 'a';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\telse if (upper == 0)\n\t\t\tfor (int k = 0; k < strlen(s); k++) {\n\t\t\t\tif (islower(s[k]) && low > 1) {\n\t\t\t\t\ts[k] = 'A';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (isdigit(s[k]) && digit > 1) {\n\t\t\t\t\ts[k] = 'A';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\telse if (digit == 0)\n\t\t\tfor (int k = 0; k < strlen(s); k++) {\n\t\t\t\tif (isupper(s[k]) && upper > 1) {\n\t\t\t\t\ts[k] = '1';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (islower(s[k]) && low > 1) {\n\t\t\t\t\ts[k] = '1';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\tprintf(\"%s\\n\", s);\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.7551622418879056, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "6e1a9f41bd6e2a50fc18fbe8f04d1607", "bug_code_uid": "75bff552ec09e8dc70d47cda4a588afc", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "f77a66dbc30865d36a85d53a5c696dec", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,k;\n\tint arr[1000];\n\tscanf(\"%d %d\",&n,&k);\n\tint i,sum=0,count=0;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tsum=sum+arr[i];\n\t}\n\t\n\tif (sum>0)\n\t{\n\t\tif (sum<k)\n\t\t{\n\t\t\tprintf(\"1\");\n\t\t}\n\t\telse \n\t\t{\n\t\t\twhile(sum>k)\n\t\t\t{\n\t\t\t\n\t\t\t\tsum=sum-k;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\t\n\t\t\n\t\n\t\tprintf(\"%d\",count+1);\n\t}\n\t\n\tif (sum<0)\n\t{\n\t\tif (k>0)\n\t\t\tk=-k;\n\t\tprintf(\"Sum %d\\n\",sum);\n\t\tprintf(\"k %d\\n\",k);\n\t\t\n\t\telse\n\t\t{\n\t\t\twhile(sum<k)\n\t\t\t{\n\t\t\t\tsum=sum-k;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\t\n\t\tprintf(\"%d\",count+1);\n\t}\n\t\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,k;\n\tint arr[1000];\n\tscanf(\"%d %d\",&n,&k);\n\tint i,sum=0,count=0;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tsum=sum+arr[i];\n\t}\n\t\n\tif (sum==0)\n\t\tprintf(\"0\");\n\tif (sum>0)\n\t{\n\tif (sum<k)\n\t{\n\t\t;\n\t\n\t}\n\telse \n\t{\n\t\twhile(sum>k)\n\t\t{\n\t\t\t\n\t\t\t\tsum=sum-k;\n\t\t\t\tcount++;\n\t\t}\n\t}\n\t\t\n\t\n\tprintf(\"%d\",count+1);\n\t}\n\t\n\tif (sum<0)\n\t{\n\tk=-k;\n\tif (sum>k)\n\t{\n\t\t;\n\t\t\n\t}\n\telse\n\t{\n\t\twhile(sum<k)\n\t\t{\n\t\t\tsum=sum-k;\n\t\t\tcount++;\n\t\t}\n\t}\n\tprintf(\"%d\",count+1);\n\t}\n\t\nreturn 0;\n }\n"}
{"similarity_score": 0.9873417721518988, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3a84361c50d409c97da1e7f0b463421d", "bug_code_uid": "5f38cd07489d8178f0ca36e9772244a4", "src_uid": "8e423e4bec2d113612a4dc445c4b86a9", "apr_id": "c315ca0c21e0b976c1cdc73871d57bdc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, t, i, j;\n    scanf(\"%d %d\", &n, &t);\n    int days[n + 1];\n    for(i = 0; i < n; i++)\n        scanf(\"%d\", &days[i]);\n\n    int canRead = 0, count = 0;\n    for(i = 0; i < n; i++)\n    {\n        count++;\n        canRead = 86400 - days[i];\n        if(canRead >= t)\n        {\n            break;\n        }\n    }\n    printf(\"%d\\n\", count);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, t, i, j;\n    scanf(\"%d %d\", &n, &t);\n    int days[n + 1];\n    for(i = 0; i < n; i++)\n        scanf(\"%d\", &days[i]);\n\n    int canRead = 0, count = 0;\n    for(i = 0; i < n; i++)\n    {\n        count++;\n        canRead = canRead + 86400 - days[i];\n        if(canRead >= t)\n        {\n            break;\n        }\n    }\n    printf(\"%d\\n\", count);\n    return 0;\n\n}\n"}
{"similarity_score": 0.750597609561753, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "27af81e02d7b7a4f259783d40862e0c3", "bug_code_uid": "95303317366f2841d7d6a84aed821a14", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "5e3b4cddd5be36ba9881bd86f50512f2", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int r[t];\n    long a,b,c,n,d;\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%ld %ld %ld %ld\",&a,&b,&c,&n);\n        d=a+c+n-(2*b);\n        if(d>0&&d%3==0)\n        {\n            r[i]=1;\n        }\n        else\n        {\n            r[i]=0;\n        }\n    }\n    for(int i=0;i<t;i++)\n    {\n        if(r[i]==1)\n        {\n            printf(\"YES\\n\");\n        }\n        else if(r[i]==0)\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int t;\n    long a,b,c,n,x,y,d,z;\n    scanf(\"%d\",&t);\n    int r[t];\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%ld %ld %ld %ld\",&a,&b,&c,&n);\n        x=c+n+b-(2*a);\n        if(x%3==0&&x>=0)\n        {\n          d=x/3;\n          y=a-b+d;\n          z=n-d-y;\n          if(y>=0&&z>=0)\n          {\n              r[i]=0;\n          }\n          else\n          {\n              r[i]=1;\n          }\n        }\n        else\n        {\n            r[i]=1;\n        }\n    }\n    for(int i=0;i<t;i++)\n    {\n        if(r[i]==0)\n        {\n            printf(\"YES\\n\");\n        }\n        else if(r[i]==1)\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9989106753812637, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "477eaa8712c45a48a82c39109b3363c4", "bug_code_uid": "3580139a8ee1d64370b999497410a4a2", "src_uid": "07ac198c1086323517540ecd0669eb4c", "apr_id": "1c5685e297c02feb3c4114d9ae2e8ba4", "difficulty": 1600, "tags": ["brute force", "data structures", "dfs and similar", "greedy", "implementation", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N\t400000\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int jj[N], dd[N], qu[N], qu_[N];\n\t\tstatic char deleted[N];\n\t\tint n, k, h, i, j, cnt, cnt_;\n\n\t\tscanf(\"%d%d\", &n, &k);\n\t\tmemset(jj, 0, n * sizeof *jj), memset(dd, 0, n * sizeof *dd);\n\t\tfor (h = 0; h < n - 1; h++) {\n\t\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\t\tjj[i] ^= j, dd[i]++, jj[j] ^= i, dd[j]++;\n\t\t}\n\t\tmemset(deleted, 0, n * sizeof *deleted);\n\t\tcnt = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (dd[i] == 1)\n\t\t\t\tqu[cnt++] = i;\n\t\twhile (k-- && cnt) {\n\t\t\tcnt_ = 0;\n\t\t\tfor (h = 0; h < cnt; h++) {\n\t\t\t\ti = qu[h];\n\t\t\t\tdeleted[i] = 1;\n\t\t\t\tif (dd[i] == 1) {\n\t\t\t\t\tj = jj[i];\n\t\t\t\t\tjj[j] ^= i, dd[j]--;\n\t\t\t\t\tif (dd[j] == 1)\n\t\t\t\t\t\tqu_[cnt_++] = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemcpy(qu, qu_, (cnt = cnt_) * sizeof *qu_);\n\t\t}\n\t\tcnt = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (!deleted[i])\n\t\t\t\tcnt++;\n\t\tprintf(\"%d\\n\", cnt);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\n#define N\t400000\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int jj[N], dd[N], qu[N], qu_[N];\n\t\tstatic char deleted[N];\n\t\tint n, k, h, i, j, cnt, cnt_;\n\n\t\tscanf(\"%d%d\", &n, &k);\n\t\tmemset(jj, 0, n * sizeof *jj), memset(dd, 0, n * sizeof *dd);\n\t\tfor (h = 0; h < n - 1; h++) {\n\t\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\t\tjj[i] ^= j, dd[i]++, jj[j] ^= i, dd[j]++;\n\t\t}\n\t\tmemset(deleted, 0, n * sizeof *deleted);\n\t\tcnt = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (dd[i] <= 1)\n\t\t\t\tqu[cnt++] = i;\n\t\twhile (k-- && cnt) {\n\t\t\tcnt_ = 0;\n\t\t\tfor (h = 0; h < cnt; h++) {\n\t\t\t\ti = qu[h];\n\t\t\t\tdeleted[i] = 1;\n\t\t\t\tif (dd[i] == 1) {\n\t\t\t\t\tj = jj[i];\n\t\t\t\t\tjj[j] ^= i, dd[j]--;\n\t\t\t\t\tif (dd[j] == 1)\n\t\t\t\t\t\tqu_[cnt_++] = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemcpy(qu, qu_, (cnt = cnt_) * sizeof *qu_);\n\t\t}\n\t\tcnt = 0;\n\t\tfor (i = 0; i < n; i++)\n\t\t\tif (!deleted[i])\n\t\t\t\tcnt++;\n\t\tprintf(\"%d\\n\", cnt);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7942238267148014, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "c91d396f76072d3b14c0e7a7bb5b3a11", "bug_code_uid": "7a877d1974d7bcd27597a285eb9b71ec", "src_uid": "2401d34db475853661d6e1e1cb5a8216", "apr_id": "eed3c0a97c9981d54a356b86413350db", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint compare(const void *a,const void *b);\nint main()\n{\n\tint cnt,n;\n\tint m,i,arr[100005],fin[100005];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tqsort(arr,n,sizeof(int),compare);\n\ti=0;\n\tm=n-1;\n\twhile(i<=m)\n\t{\n\t\tfin[cnt]=arr[i];\n\t\tcnt++;\n\t\tif(i!=m)\n\t\t{\n\t\t\tfin[cnt]=arr[m];\n\t\t\tcnt++;\n\t\t}\n\t\ti++;\n\t\tm--;\n\t}\n\tfor(i=0;i<cnt;i++)\n\t{\n\t\tprintf(\"%d \",fin[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\nint compare(const void *a,const void *b)\n{\n\treturn ((*(int *)a)-(*(int *)b));\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint compare(const void *a,const void *b);\nint main()\n{\n\tint cnt=0,n;\n\tint m,i,arr[100005],fin[100005];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tqsort(arr,n,sizeof(int),compare);\n\ti=0;\n\tm=n-1;\n\tif(n!=1)\n\t{\n\t\twhile(i<=m)\n\t\t{\n\t\t\tfin[cnt]=arr[i];\n\t\t\tcnt++;\n\t\t\tif(i!=m)\n\t\t\t{\n\t\t\t\tfin[cnt]=arr[m];\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\ti++;\n\t\t\tm--;\n\t\t}\n\n\t\tfor(i=0;i<cnt;i++)\n\t\t{\n\t\t\tprintf(\"%d \",fin[i]);\n\t\t}\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",arr[0]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\nint compare(const void *a,const void *b)\n{\n\treturn ((*(int *)a)-(*(int *)b));\n}\n"}
{"similarity_score": 0.4485387547649301, "equal_cnt": 15, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "9a15b9f1b1f06501fd78b13563e8908c", "bug_code_uid": "4e13c174ad530d1ad3fa0d9d43f1f8b9", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "5a9a075f16a4051cb7399b5a622c02e8", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main( void )\n{\n    int x, y, k, n, suma, res;\n    int flag = 1;\n\n    scanf( \"%d %d %d\", &y, &k, &n );\n\n    x = 1;\n    suma = x + y;\n\n    if( k > y )\n    {\n        x = k - y;\n        suma = x + y;\n    }\n\n    while( suma <= n )\n    {\n        if( flag )\n        {\n            if( k > y )\n            {\n                printf( \"%d \", x );\n                x += k;\n                flag = 0;\n            }\n            else\n            {\n                res = suma % k;\n\n                if( !res )\n                {\n                    printf( \"%d \", x );\n                    flag = 0;\n                    x += k;\n                }\n                else\n                {\n                    x++;\n                }\n\n                suma = x + y;\n            }\n        }\n        else\n        {\n            printf( \"%d \", x );\n            x += k;\n            suma = x + y;\n        }\n    }\n\n    if( x == 1 || flag )\n    {\n        x = -1;\n        printf( \"%d\", x );\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main( void )\n{\n    int x, y, k, n, suma, res, i;\n    int flag = 1;\n\n    scanf( \"%d %d %d\", &y, &k, &n );\n\n    x = 1;\n    suma = x + y;\n\n    if( k >= y )\n    {\n        x = k - y;\n        if( x == 0 )\n        {\n            x = k;\n        }\n    }\n    else\n    {\n        for( i = 2; k * i <= y; i++ );\n        x = k*i - y;\n    }\n\n    suma = x + y;\n\n    while( suma <= n )\n    {\n        printf( \"%d \", x );\n        x += k;\n        suma = x + y;\n        flag = 0;\n    }\n\n    if( flag )\n    {\n        x = -1;\n        printf( \"%d\", x );\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8012422360248447, "equal_cnt": 12, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "ffad29278959e4d622ddf961195b9127", "bug_code_uid": "456762b0faeabfc513138bbadafef26f", "src_uid": "96e2ba997eff50ffb805b6be62c56222", "apr_id": "bda3442bcf1c8fb56f52e20fe05680ad", "difficulty": 1400, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n\ntypedef long int ll;\n\n\nint main()\n{\n\tll n,m,i,ans1=0,ans2=0,cnt[26],cnt1[26];\n\tchar s[200005],t[200005];\n\tscanf(\"%s%s\",s,t);\n\tn=strlen(s);\n\tm=strlen(t);\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(cnt1,0,sizeof(cnt1));\n\n\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(t[i]>'Z')\n\t\t{\n\t\t\tcnt[t[i]-'a']++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcnt1[t[i]-'A']++;\n\t\t}\n\t}\n    for(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tif(cnt[s[i]-'a']>0)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tcnt[s[i]-'a']--;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt1[s[i]-'A']>0)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tcnt1[s[i]-'A']--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tif(cnt1[s[i]-'a']>0)\n\t\t\t{\n\t\t\t\tans2++;\n\t\t\t\tcnt1[s[i]-'a']--;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt[s[i]-'A']>0)\n\t\t\t{\n\t\t\t\tans2++;\n\t\t\t\tcnt[s[i]-'A']--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%ld %ld\\n\",ans1,ans2);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n\ntypedef long int ll;\n\n\nint main()\n{\n\tll n,m,i,ans1=0,ans2=0,cnt[26],cnt1[26],c[26],c1[26];\n\tchar s[200005],t[200005];\n\tscanf(\"%s%s\",s,t);\n\tn=strlen(s);\n\tm=strlen(t);\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(cnt1,0,sizeof(cnt1));\n\tmemset(c,0,sizeof(c));\n\tmemset(c1,0,sizeof(c1));\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tc[s[i]-'a']++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc1[s[i]-'A']++;\n\t\t}\n\t}\n\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(t[i]>'Z')\n\t\t{\n\t\t\tcnt[t[i]-'a']++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcnt1[t[i]-'A']++;\n\t\t}\n\t}\n\n    for(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tif(cnt[s[i]-'a']>0)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tcnt[s[i]-'a']--;\n\t\t\t\tc[s[i]-'a']--;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt1[s[i]-'A']>0)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tc1[s[i]-'A']--;\n\t\t\t\tcnt1[s[i]-'A']--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(s[i]>'Z')\n\t\t{\n\t\t\tif(cnt1[s[i]-'a']>0&&c[s[i]-'a']>0)\n\t\t\t{\n\t\t\t\tans2++;\n\t\t\t\tcnt1[s[i]-'a']--;\n\t\t\t\tc[s[i]-'a']--;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(cnt[s[i]-'A']>0&&c1[s[i]-'A']>0)\n\t\t\t{\n\t\t\t\tans2++;\n\t\t\t\tc1[s[i]-'A']--;\n\t\t\t\tcnt[s[i]-'A']--;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%ld %ld\\n\",ans1,ans2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9627118644067797, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d87b8fb984bbabaa7e724b84fe596edd", "bug_code_uid": "884411af03b259a1f4486d2427883ff9", "src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "apr_id": "ef16b58e89678bd3802291923c8874a7", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n    int n,a[1000001],i,max=0,curr=0,r;\n    char c;\n    for(i=0;i<=1000000;i++)\n    a[i]=0;\n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c %c\",&c,&c);\n        scanf(\"%d\",&r);\n        if(c=='+')\n        {\n            a[r]=1;\n            if(max<=curr)\n            {\n                max++;\n            }\n            curr++;\n        }\n        if(c=='-')\n        {\n            if(a[r]==0)\n            {\n                max++;\n            }\n            a[r]=0;\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n    int n,a[1000001],i,max=0,curr=0,r;\n    char c;\n    for(i=0;i<=1000000;i++)\n    a[i]=0;\n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c %c\",&c,&c);\n        scanf(\"%d\",&r);\n        if(c=='+')\n        {\n            a[r]=1;\n            if(max<=curr)\n            {\n                max++;\n            }\n            curr++;\n        }\n        if(c=='-')\n        {\n            if(a[r]==1)\n            curr--;\n            if(a[r]==0)\n            {\n                max++;\n            }\n            a[r]=0;\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.8767123287671232, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "60e96765fd2a6e48d11f75ac47acd9cc", "bug_code_uid": "45c94112199f0d276c744b5699da3b68", "src_uid": "5fcc22cdc38693723d8a9577d685db12", "apr_id": "e911f71dee18a542c954ad4434219e12", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int largo;\n    char direction[100000];\n    int step[100000];\n    int marked[100000];\n    marked[0] = 1;\n    int pos;\n    int i;\n    pos = 0;\n    scanf(\"%i\",&largo);\n    scanf(\"%s\",&direction);\n    for(i=0; i < largo; i++)\n    {\n        scanf(\"%d\",&step[i]);\n        marked[i]=0;\n    }\n    while(1)\n    {\n        if(direction[pos]=='>')\n        {\n            pos = pos + step[pos];\n            marked[pos] = marked[pos] + 1;\n        }\n        else\n        {\n            pos = pos - step[pos];\n            marked[pos] = marked[pos] + 1;\n        }\n        if(pos > largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n        if(marked[pos] == 2)\n        {\n            printf(\"INFINITE\");\n            return 0;\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int largo;\n    char direction[100000];\n    int step[100000];\n    int marked[100000];\n    marked[0] = 1;\n    int pos;\n    int i;\n    pos = 0;\n    scanf(\"%i\",&largo);\n    scanf(\"%s\",&direction);\n    for(i=0; i < largo; i++)\n    {\n        scanf(\"%d\",&step[i]);\n        marked[i]=0;\n    }\n    while(1)\n    {\n        if(direction[pos]=='>')\n        {\n            pos = pos + step[pos];\n            if(pos >= largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n            marked[pos] = marked[pos] + 1;\n        }\n        else\n        {\n            pos = pos - step[pos];\n            if(pos >= largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n            marked[pos] = marked[pos] + 1;\n        }\n        if(pos >= largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n        if(marked[pos] == 2)\n        {\n            printf(\"INFINITE\");\n            return 0;\n        }\n    }\n}\n"}
{"similarity_score": 0.971830985915493, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fa7e9a3058c640103075776b0f9a6c56", "bug_code_uid": "80376636908acba028ce671b04c35c9c", "src_uid": "5993b5bf231fabd3c2af90124c41f118", "apr_id": "ab71599d65bddc43a3076009010a14ca", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\nint min(int a, int b) {\n\tif (b < 0) {\n\t\treturn 0;\n\t}\n\treturn a > b ? b : a;\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tint* a = new int[n];\n\tint i, j;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tint maxlimit = a[n - 1] > 0 ? a[n-1] -1: 0;\n\tlong count = a[n - 1];\n\tfor (i = n - 2; i >= 0; i--) {\n\t\tint temp = min(a[i], maxlimit);\n\t\tcount += temp;\n\t\tmaxlimit = temp-1;\n\t}\n\tprintf(\"%ld\\n\", count);\n\n}\n", "fixed": "\n#include <stdio.h>\n\nint min(int a, int b) {\n\tif (b < 0) {\n\t\treturn 0;\n\t}\n\treturn a > b ? b : a;\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tint a[n];\n\tint i, j;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tint maxlimit = a[n - 1] > 0 ? a[n-1] -1: 0;\n\tlong long count = a[n - 1];\n\tfor (i = n - 2; i >= 0; i--) {\n\t\tint temp = min(a[i], maxlimit);\n\t\tcount += temp;\n\t\tmaxlimit = temp-1;\n\t}\n\tprintf(\"%I64d\\n\", count);\n\n}\n"}
{"similarity_score": 0.18777679362267494, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a70b014319938ad395711ae0deb042ef", "bug_code_uid": "b166ab29472e8028cf6e7973bc0786a5", "src_uid": "80fdb95372c1e8d558b8c8f31c9d0479", "apr_id": "ef4f310b03864164542ec12b2d32ca42", "difficulty": 1100, "tags": ["hashing", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int n , len, i,j,k ;\n    char s[200000] ;\n    scanf(\"%d\", &n);\n    scanf(\"%s\", &s);\n    len = 2 * n - 2 ;\n     k = n-1 ;\n    for(i=0;i < len;  i++){\n       // if(s[i] == s[i+1] -'A' + 'a'){\n\n                //printf(\"testb4  %d %d \\n\", i,k);\n            for(j=i+1 ; j < len ;j= j +2){\n                if(s[i] == s[j] - 'A' + 'a'){\n                    k-- ;\n                        //printf(\"test %d  %d\\n\", j, k);\n                    s[j] = '0' ;\n                    break ;\n                    }\n\n            }\n        }\n       // printf(\"%s\\n\", s);\n        printf(\"%d\", k);\n        return 0;\n        }\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar s[200005]  ;\n\nint n , k , i , j , a[27] , p ;\n\nint main()\n{\n    scanf(\"%d\", &n) ;\n\n    n = 2 * n - 2 ;\n\n    scanf(\"%s\", &s) ;\n\n    for ( i = 0 ; i < n ; i++)\n    {\n        if( i%2 == 0 )\n        {\n            p = s[i] - 'a' ;\n            a[p]++ ;\n        }\n        else\n        {\n            p = s[i] - 'A' ;\n\n            if( a[p] != 0 ) a[p]-- ;\n            else k++ ;\n        }\n\n    }\n\n    printf(\"%d\", k) ;\n return 0 ;\n }\n"}
{"similarity_score": 0.997737556561086, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b9179e96254a68a77652b32272c4604d", "bug_code_uid": "ebd66973470941397e0107c2e9954a94", "src_uid": "5ebb0ee239d68ea33d9dac2d0bdd5f4e", "apr_id": "8262aa1cc17258602d780c3fd4fff070", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "bitmasks", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<limits.h>\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n    int n,m,k,i,j,a[1001][40],t,x,cnt,ans=0;\n    for(i=0;i<=1000;i++)\n    {\n        for(j=0;j<40;j++)\n        a[i][j]=0;\n    }\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for(i=1;i<=m+1;i++)\n    {\n        scanf(\"%d\",&t);\n        cnt=0;\n        for(j=0;j<n;j++)\n        {\n            x=pow(2,j);\n            if(x&t)\n            {\n                a[i][j]=1;\n                cnt++;\n            }\n            else\n            a[i][j]=0;\n        }\n    }\n    for(i=1;i<=m;i++)\n    {\n        cnt=0;\n        for(j=0;j<n;j++)\n        {\n            if((a[i][j]==1&&a[m+1][j]==0)||(a[i][j]==0&&a[m+1][j]==1))\n            cnt++;\n        }\n        if(cnt<=k)\n        ans++;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<limits.h>\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n    int n,m,k,i,j,a[1002][40],t,x,cnt,ans=0;\n    for(i=0;i<=1001;i++)\n    {\n        for(j=0;j<40;j++)\n        a[i][j]=0;\n    }\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for(i=1;i<=m+1;i++)\n    {\n        scanf(\"%d\",&t);\n        cnt=0;\n        for(j=0;j<n;j++)\n        {\n            x=pow(2,j);\n            if(x&t)\n            {\n                a[i][j]=1;\n                cnt++;\n            }\n            else\n            a[i][j]=0;\n        }\n    }\n    for(i=1;i<=m;i++)\n    {\n        cnt=0;\n        for(j=0;j<n;j++)\n        {\n            if((a[i][j]==1&&a[m+1][j]==0)||(a[i][j]==0&&a[m+1][j]==1))\n            cnt++;\n        }\n        if(cnt<=k)\n        ans++;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}"}
{"similarity_score": 0.9962825278810409, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "44f8c72fb9f921cac16ecc754b063df4", "bug_code_uid": "b1f6f057a30fd59f296e556a9bf9bb92", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "e7755d63d5f44f39123a97b322028e9d", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{   int n,t,a,i;long double t1;\n    scanf(\"%d\",&n);\n    t=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        t=(t+a);\n    }\n    t1=((long double)t/(long double)(n*100));\n    t1=((lonf double)(t1*100));\n    printf(\"%.12llf\",t1);\n}", "fixed": "#include<stdio.h>\nint main()\n{   int n,t,a,i;long double t1;\n    scanf(\"%d\",&n);\n    t=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a);\n        t=(t+a);\n    }\n    t1=((long double)t/(long double)(n*100));\n    t1=((long double)(t1*100));\n    printf(\"%.12llf\",t1);\n}"}
{"similarity_score": 0.9986684420772304, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "70560e10bf00ce88c6697e3703466edb", "bug_code_uid": "423775fcb849fcbd36007a4a131586f7", "src_uid": "a375dd323b7adbfa9f1cad9aa48f7247", "apr_id": "1c2db1c7d1fa882a14e4de634f5d0d0d", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n\tint j,i,a,b,c,d;\n\tscanf(\"%d\",&i);\n\tfor(j =0;j<i;j++)\n\t{\t\n\t\tint res=0;\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tscanf(\"%d %d\",&c,&d);\n\t\tif(a==c) \n\t\t\tif (b+d==c) res=1;\n\t\tif(a==d)\n\t\t\tif(b+c==a) res=1;\n\t\tif(b==c)\n\t\t\tif(a+d==b) res=1;\n\t\tif(b==d)\n\t\t\tif(a+c==d)res=1;\n\t\tif(res==1)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\\\n\");\n\t\t\t\n\t}\n\t\n} ", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n\tint j,i,a,b,c,d;\n\tscanf(\"%d\",&i);\n\tfor(j =0;j<i;j++)\n\t{\t\n\t\tint res=0;\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tscanf(\"%d %d\",&c,&d);\n\t\tif(a==c) \n\t\t\tif (b+d==c) res=1;\n\t\tif(a==d)\n\t\t\tif(b+c==a) res=1;\n\t\tif(b==c)\n\t\t\tif(a+d==b) res=1;\n\t\tif(b==d)\n\t\t\tif(a+c==d)res=1;\n\t\tif(res==1)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t\t\t\n\t}\n\t\n} "}
{"similarity_score": 0.9975308641975309, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c377a76166d1bdad92e065ec80dfd9bd", "bug_code_uid": "4c872b0bba28193752703557086625ad", "src_uid": "ac248c83c99d8a2262772816b5f4ac6e", "apr_id": "c6667c2849551124db31cb004b47f5dd", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint m;\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tprintf(\"%d\\n\",n)\n\t\tint i;\n\t\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%d \",i);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n} //2 3 5\n", "fixed": "#include<stdio.h>\nint main(){\n\tint m;\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tprintf(\"%d\\n\",n);\n\t\tint i;\n\t\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%d \",i);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n} //2 3 5\n"}
{"similarity_score": 0.9407894736842105, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3a201e0cf190201c0eca90fa564781d6", "bug_code_uid": "4d24c1975a05a19eb06389436594b2bb", "src_uid": "27ddccc777ef9040284ab6314cbd70e7", "apr_id": "70680e7c45ad99023731435cd997f98d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int a, b, r;\n    scanf(\"%d\", &r);\n    while(r){\n    scanf(\"%d %d\", &a, &b);\n    printf(\"%d\", a+b);\n\n    r--;\n    }\n   \n\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int a, b, r;\n    scanf(\"%d\", &r);\n    while(r--){\n    scanf(\"%d %d\", &a, &b);\n    printf(\"%d\\n\", a+b);\n\n    }\n}\n"}
{"similarity_score": 0.9987357774968394, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7ae682fcea609ed14789661c7806bb80", "bug_code_uid": "33df909dab6522914d8cb8d28169fc79", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "b7ecc1ac62a8a766c77779b643e08163", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint priche(int n);\n\nint main()\n{\n    long long n,a,b,i,j;\n\n    scanf(\"%lld\",&n);\n\n    a=3;\n    for(;;){\n        a++;1\n        b=n-a;\n        i=priche(a);\n        j=priche(b);\n\n        if(i==1 && j==1)break;\n\n\n    }\n\n    printf(\"%lld %lld\",a,b);\n\n    return 0;\n}\n\nint priche(int n)\n{\n    long long i;\n\n    for(i=2;i<=n/2;i++){\n        if(n%i==0)return 1;\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint priche(int n);\n\nint main()\n{\n    long long n,a,b,i,j;\n\n    scanf(\"%lld\",&n);\n\n    a=3;\n    for(;;){\n        a++;\n        b=n-a;\n        i=priche(a);\n        j=priche(b);\n\n        if(i==1 && j==1)break;\n\n\n    }\n\n    printf(\"%lld %lld\",a,b);\n\n    return 0;\n}\n\nint priche(int n)\n{\n    long long i;\n\n    for(i=2;i<=n/2;i++){\n        if(n%i==0)return 1;\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8356997971602435, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4e6322c18543379da373c89ab130b010", "bug_code_uid": "6000a372fd0c62f1ee3ea66369d99020", "src_uid": "ed449ba7c453a43e2ac5904dc0174530", "apr_id": "6191a2df99b00c206028aa4f1f04b39e", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint issep(int array[], int length);\n\nint main(void)\n{\n  int linenum;\n\n  scanf(\"%d\", &linenum);\n\n  int len[linenum];\n  int numbers[linenum][50];\n\n  for (int i = 0; i < linenum; i++)\n  {\n    getchar();\n    scanf(\"%d\", &len[i]);\n\n    for (int j = 0; j < len[i]; j++)\n    {\n      getchar();\n      scanf(\"%d\", &numbers[i][j]);\n    }\n  }\n\n  for(int i = 0; i < linenum; i++)\n  {\n    if (len[i] == 1)\n    {\n      printf(\"YES\\n\");\n    }\n    else if (issep(numbers[i], len[i]) == 1)\n    {\n      printf(\"NO\\n\");\n    }\n    else if (issep(numbers[i], len[i]) == 0)\n    {\n      printf(\"YES\\n\");\n    }\n  }\n}\n\nint issep(int array[], int length)\n{\n  int counter;\n\n  for (int i = 0; i < length; i++)\n  {\n    counter = 0;\n    for (int j = 0; j < length; j++)\n    {\n      if (array[i] - array[j] > 1 || array[j] - array[i] > 1 || i == j)\n      {\n        counter++;\n      }\n    }\n    if (counter == length)\n    {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint issep(int array[], int length);\n\nint main(void)\n{\n  int linenum;\n\n  scanf(\"%d\", &linenum);\n\n  int len[linenum];\n  int numbers[linenum][50];\n\n  for (int i = 0; i < linenum; i++)\n  {\n    getchar();\n    scanf(\"%d\", &len[i]);\n\n    for (int j = 0; j < len[i]; j++)\n    {\n      getchar();\n      scanf(\"%d\", &numbers[i][j]);\n    }\n  }\n\n  for(int i = 0; i < linenum; i++)\n  {\n    if (len[i] == 1)\n    {\n      printf(\"YES\\n\");\n    }\n    else if (issep(numbers[i], len[i]) == 1)\n    {\n      printf(\"NO\\n\");\n    }\n    else if (issep(numbers[i], len[i]) == 0)\n    {\n      printf(\"YES\\n\");\n    }\n  }\n}\n\nint issep(int array[], int length)\n{\n  int counter, c;\n\n  for (int i = 0; i < length; i++)\n  {\n    counter = 0;\n    c = 0;\n    for (int j = 0; j < length; j++)\n    {\n      if (array[j] - array[i] != 1)\n      {\n        counter++;\n      }\n      if (array[i] - array[j] >= 0)\n      {\n        c++;\n      }\n      if (counter == length && c != length)\n      {\n        return 1;\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.846793930494371, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9dfa6392370d15cf19ffdf366a2c47cc", "bug_code_uid": "c35bfe625e1d4b4dc616e4e735e8bfb8", "src_uid": "6458ad752e019ffb87573c8bfb712c18", "apr_id": "aa092b50dc315f0d6450dce815fd125d", "difficulty": 1100, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main(void) {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,k;\n        scanf(\"%d%d\",&n,&k);\n        int c;\n        c=k/2;\n        int sum=0;\n        int a[n];\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(k%2==0)\n            {\n         if(a[i]==c)\n         {\n             sum=sum+1;\n             if(sum%2!=0)\n             {\n                 a[i]=0;\n             }\n             if(sum%2==0)\n             {\n                 a[i]=1;\n             }\n         }\n            if(a[i]<c)\n            {\n             a[i]=0;\n            }\n            if(a[i]>c)\n            {\n                a[i]=1;\n            }\n            }\n            else{\n                if(a[i]<=c)\n            {\n             a[i]=0;\n            }\n            if(a[i]>c)\n            {\n                a[i]=1;\n            }\n            }\n        }\n        for(int i=0;i<n;i++)\n        {\n         printf(\"%d \",a[i]);\n        }\n        printf(\"\\n\");\n    }\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n \nint main(void) {\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,k;\n        scanf(\"%d%d\",&n,&k);\n        int c;\n        c=k/2;\n        int sum=0;\n        int a[n];\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(k%2==0)\n            {\n            if(a[i]<c)\n            {\n             a[i]=0;\n            }\n            else if(a[i]>c)\n            {\n                a[i]=1;\n            }\n             else if(a[i]==c)\n         {\n             sum=sum+1;\n             if(sum%2!=0)\n             {\n                 a[i]=0;\n             }\n             if(sum%2==0)\n             {\n                 a[i]=1;\n             }\n         }\n            }\n            else{\n                if(a[i]<=c)\n            {\n             a[i]=0;\n            }\n            else if(a[i]>c)\n            {\n                a[i]=1;\n            }\n            }\n        }\n        for(int i=0;i<n;i++)\n        {\n         printf(\"%d \",a[i]);\n        }\n        printf(\"\\n\");\n    }\n\treturn 0;\n}"}
{"similarity_score": 0.9979253112033195, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "729622debdf7baea18770a246b3ac7fa", "bug_code_uid": "7eecd8106378919f2ab1f1158cddb23b", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "12a70fda212723e036b64c19948060e9", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//***Bismillahir Rahmanir Rahim***\n// RJ_Hossan\n#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    long t;\n    scanf(\"%ld\",&t);\n    while(t--)\n    {\n        long s;\n        scanf(\"%ld\",&s);\n        long pro = 0,pro1;\n        while(n)\n        {\n             pro1=s%10;\n            pro=pro+(s-pro1);\n            s=s/10;\n            if(s>0)\n            {\n               s = s+pro1;\n            }\n        }\n         pro = pro+pro1;\n         printf(\"%ld\\n\",pro);\n    }\n   return 0;\n}", "fixed": "//***Bismillahir Rahmanir Rahim***\n// RJ_Hossan\n#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    long t;\n    scanf(\"%ld\",&t);\n    while(t--)\n    {\n        long s;\n        scanf(\"%ld\",&s);\n        long pro = 0,pro1;\n        while(s)\n        {\n             pro1=s%10;\n            pro=pro+(s-pro1);\n            s=s/10;\n            if(s>0)\n            {\n               s = s+pro1;\n            }\n        }\n         pro = pro+pro1;\n         printf(\"%ld\\n\",pro);\n    }\n   return 0;\n}"}
{"similarity_score": 0.7407407407407407, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "17eefebe553517d806267669cc09b85c", "bug_code_uid": "29f0d6a3c7b5ab2130b3528305965050", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "7117a79c142e34d9a60af0be59bcb149", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main()\n{\n\tint n;\n\tint x[n];\n\tint y[n];\n\tint z[n];\n\tint s=0;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tif ((n>=1) && (n<=1000))\n\t{\n\t   for(int i=0 ; i<n ; i++)\n\t   {\n\t        scanf(\"%d\",&x[i]);\n\t\t    scanf(\"%d\",&y[i]);\n\t\t    scanf(\"%d\",&z[i]);\n\t\t\n\t\t    if ((x[i] + y[i] + z[i]) >=2)\n\t\t    {\n\t\t        s+=1;\n\t\t    }\n\t    }\n\t    printf(\"%d\",s);\n\t}\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tshort i,n;\n\tshort x[n];\n\tshort y[n];\n\tshort z[n];\n\tshort s=0;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tif ((n>=1) && (n<=1000))\t\n\t{\n\t    for(i=0;i<n;i++)\n\t    {   \n\t\t    scanf(\"%d\",&x[i]);\n\t\t    scanf(\"%d\",&y[i]);\n\t\t    scanf(\"%d\",&z[i]);\n\t\t\n\t\t    if ((x[i]+y[i]+z[i]) >=2)\n\t\t\t{    \n\t            s=s+1;\n\t\t\t}\n\t    }\n\t}\n\t\n\tprintf(\"%d\",s);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9327354260089686, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5ea160edd6b60f5286959e5ede535dad", "bug_code_uid": "1380c1537dcbbd1941b1c03a3e822e53", "src_uid": "863a8124d46bb09b49fc88939fb5f364", "apr_id": "57cf85696291165c51d9433a662f1d71", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nlong long min(long long a, long long b){\n    return (a < b ? a : b);\n}\n\nint main(){\n    long long x, y, z;\n    long long res, mn;\n    scanf(\"%lld%lld%lld\", &x, &y, &z);\n\n    res = (x / z) + (y / z);\n    x %= z; y %= z;\n    if(x + y >= z) mn = min(z - x, z - y);\n    else mn = 0;\n    printf(\"%lld %lld\\n\", res, mn);\n}", "fixed": "#include <stdio.h>\n \nlong long min(long long a, long long b){\n    return (a < b ? a : b);\n}\n \nint main(){\n    long long x, y, z;\n    long long res, mn;\n    scanf(\"%lld%lld%lld\", &x, &y, &z);\n \n    res = (x + y) / z;\n    x %= z; y %= z;\n    if(x + y >= z) mn = min(z - x, z - y);\n    else mn = 0;\n    printf(\"%lld %lld\\n\", res, mn);\n}"}
{"similarity_score": 0.9985141158989599, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b8c01bf78e98586ca4be4364041030eb", "bug_code_uid": "67051f7f818e549a62fae8dd7c18353d", "src_uid": "85b78251160db9d7ca1786e90e5d6f21", "apr_id": "91d486f7350e49dcabbcc8201609117f", "difficulty": 2200, "tags": ["probabilities", "implementation", "trees", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define N 100050\nstruct node{\n\tint to,next;\n}k[N];\nint edges=0,a[N],vis[N],head[N];\nvoid add(int u,int v)\n{\n\tk[edges].to=v;\n\tk[edges].next=head[u];\t\n\thead[u]=edges++;\n}\nvoid dfs(int j,int dep)\n{\n\ta[j]=dep;\n\tvis[j]=1;\n\tfor(int i=head[j];i!=-1;i=k[i].next)\n\t{\n\t\tif(!vis[k[i].to])\n\t\t\tdfs(k[i].to,dep+1);\n\t}\n}\nint main()\n{\n\tint n;\n\tdouble res=0;\n\tmemset(a,0,sizeof(a));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint p,q;\n\t\tscanf(\"%d%d\",&p,&q);\n\t\tadd(p,q);\n\t\tadd(q,p);\n\t}\n\tdfs(1,1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tres+=(double)1.0/(double)a[i];\n\t}\n\tprintf(\"%lf\\n\",res);\n\treturn 0;\n} ", "fixed": "#include<stdio.h>\n#include<string.h>\n#define N 200050\nstruct node{\n\tint to,next;\n}k[N];\nint edges=0,a[N],vis[N],head[N];\nvoid add(int u,int v)\n{\n\tk[edges].to=v;\n\tk[edges].next=head[u];\t\n\thead[u]=edges++;\n}\nvoid dfs(int j,int dep)\n{\n\ta[j]=dep;\n\tvis[j]=1;\n\tfor(int i=head[j];i!=-1;i=k[i].next)\n\t{\n\t\tif(!vis[k[i].to])\n\t\t\tdfs(k[i].to,dep+1);\n\t}\n}\nint main()\n{\n\tint n;\n\tdouble res=0;\n\tmemset(a,0,sizeof(a));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint p,q;\n\t\tscanf(\"%d%d\",&p,&q);\n\t\tadd(p,q);\n\t\tadd(q,p);\n\t}\n\tdfs(1,1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tres+=(double)1.0/(double)a[i];\n\t}\n\tprintf(\"%lf\\n\",res);\n\treturn 0;\n} "}
{"similarity_score": 0.9973992197659298, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bc7e4419ea0e54e20a30ab96e6e9d7ae", "bug_code_uid": "4a8984178606edb0b3e2736548bf9786", "src_uid": "ce4443581d4ee12db6607695cd567070", "apr_id": "8e3848bfd75087b1295dd79000713f3c", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nvoid PrintSubstring(int start, int end, char *s)\n{\n\tfor(start; start <= end; start++)\n\t\tprintf(\"%c\", s[start]);\n}\n\n_Bool IsDiverse(int start, int end, char s[])\n{\t\n\tshort unsigned int count['z' - 'a'] = {0};\n\tshort unsigned int length = end - (start - 1);\n\tfor(start; start <= end; start++)\n\t{\n\t\tcount[s[start] - 'a']++;\n\t\tif(count[s[start] - 'a'] > length/2)\n\t\t\treturn 0;\n\t}\n\n\treturn 1;\n}\n\nint main(int argc, char* argv[])\n{\n\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tchar s[n];\n\n\tscanf(\"%s\", s);\n\n\tint i, j, length = strlen(s);\n\tfor(i = 0; i < length - 1; i++)\n\t{\n\t\tfor(j = i + 1; j < length; j++)\n\t\t{\n\t\t\tif(IsDiverse(i, j, s))\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tPrintSubstring(i, j, s);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"NO\");\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nvoid PrintSubstring(int start, int end, char *s)\n{\n\tfor(start; start <= end; start++)\n\t\tprintf(\"%c\", s[start]);\n}\n\n_Bool IsDiverse(int start, int end, char s[])\n{\t\n\tshort unsigned int count['z' - 'a' + 1] = {0};\n\tshort unsigned int length = end - (start - 1);\n\tfor(start; start <= end; start++)\n\t{\n\t\tcount[s[start] - 'a']++;\n\t\tif(count[s[start] - 'a'] > length/2)\n\t\t\treturn 0;\n\t}\n\n\treturn 1;\n}\n\nint main(int argc, char* argv[])\n{\n\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tchar s[n];\n\n\tscanf(\"%s\", s);\n\n\tint i, j, length = strlen(s);\n\tfor(i = 0; i < length - 1; i++)\n\t{\n\t\tfor(j = i + 1; j < length; j++)\n\t\t{\n\t\t\tif(IsDiverse(i, j, s))\n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\tPrintSubstring(i, j, s);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"NO\");\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9437819420783645, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0ffb348a35c7596c9a925adff090d2f7", "bug_code_uid": "dffb4638d3fe2a46a5167a13bda89114", "src_uid": "a74c65acd41ff9bb845062222135c60a", "apr_id": "a5eeca1998fdf752fd3325804a8cba8d", "difficulty": 900, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <tgmath.h>\nint main()\n{\n\tint n,a,b,x,y,i,v;\n\tdouble k,min;\n\tscanf(\"%i%i\",&a,&b);\n\tscanf(\"%i\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%i%i%i\",&x,&y,&v);\n\t\tk=(a-x)*(a-x)+(b-y)*(b-y);\n\t\tk=(float)k/(v*v);\n\t\tif(k<min||i==0)\n\t\t\tmin=k;\n\t}\n\tprintf(\"%.8f\",min*2);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <tgmath.h>\nint main()\n{\n\tint n,a,b,x,y,i,v;\n\tdouble k,min;\n\tscanf(\"%i%i\",&a,&b);\n\tscanf(\"%i\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%i%i%i\",&x,&y,&v);\n\t\tk=(a-x)*(a-x)+(b-y)*(b-y);\n\t\tk=sqrt((float)k)/(float)v;\n\t\tif(k<min||i==0)\n\t\t\tmin=k;\n\t}\n\tprintf(\"%.8f\",min);\n\treturn 0;\n}"}
{"similarity_score": 0.592292089249493, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "20d39c4e2f462797e1307e983fddde9c", "bug_code_uid": "ee16eecce2078ea3c09b437729df8cdf", "src_uid": "e2ff228091ca476926b8e905f1bc8dff", "apr_id": "58ecd2b33eb50d574045c06669cb7f72", "difficulty": 1100, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n\n        int n,genre;\n        int i,j;\n\n        scanf(\"%d %d\",&n,&genre);\n\n        int g[n];\n        unsigned int count=0;\n\n        for(i=0;i<n;i++)\n                scanf(\"%d\",&g[i]);\n\n        for(i=0;i<n;i++) {\n                for(j=i+1;j<n;j++) {\n                        if(g[i]!=g[j])\n                                count++;\n                }\n        }\n\n        printf(\"%d\",count);\n        return 0;\n}", "fixed": "#include<stdio.h>\n\nint main() {\n        int a[200000],m,freq[11]={0};\n        int n;\n        int i,j=0,k,count=0;\n        scanf(\"%d %d\",&n,&m);\n        for(i=0;i<n;i++) {\n                scanf(\"%d\",&a[i]);\n        }\n        for(i=0;i<n;i++)\n                freq[a[i]]++;\n        for(i=1;i<11;i++)\n                if(freq[i]>0)\n                        j++;\n        for(i=1;i<11;i++) {\n                for(k=1+i;k<11;k++) {\n                        count+=(freq[k])*(freq[i]);\n                }\n        }\n        printf(\"%d\",count);\n        return 0;\n}"}
{"similarity_score": 0.7885714285714286, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0aa6339d1c287d8819aa736024d2d5c2", "bug_code_uid": "9e7ee8af7c9bb674f4c4ee9218fe3371", "src_uid": "9d3c0f689ae1e6215448463def55df32", "apr_id": "d11c7c783cabc11a55c5db61d3887282", "difficulty": 1200, "tags": ["data structures", "constructive algorithms", "implementation", "two pointers"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main(void){\nint i,k=0,*a,n;\n//float lower=0,upper;\nchar s[1111111];\nscanf(\"%1000001s%*c\",s);n=strlen(s)-1;a=(int *)calloc(strlen(s),sizeof(int));\nfor(i=0;i<strlen(s);i++){if(s[i]=='r'){a[k++]=i;}else if(s[i]=='l'){a[n--]=i;}}\nfor(i=0;i<strlen(s);i++){printf(\"%d\\n\",a[i]+1);}\n free(a);\nreturn 0;}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main(void){\nint i,k=0,*a,n,p;\n//float lower=0,upper;\nchar s[1111111];\nscanf(\"%1000001s%*c\",s);a=(int *)calloc(strlen(s),sizeof(int));p=strlen(s);n=p-1;\nfor(i=0;i<p;i++){if(s[i]=='r'){a[k++]=i;}else if(s[i]=='l'){a[n--]=i;}}\nfor(i=0;i<p;i++){printf(\"%d\\n\",a[i]+1);}\n free(a);\nreturn 0;}"}
{"similarity_score": 0.9261603375527426, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c1acb84f4eee76b8ba09123226e444fa", "bug_code_uid": "c411a53d0d08d2b58b0e8513702fbedb", "src_uid": "7224ffd4776af4129739e1b28f696050", "apr_id": "38dc24bc1dbe52fa4adb46fa7588e044", "difficulty": 1100, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int a,b,c,d,x,y,x1,y1,x2,y2,xx,yy;\n    int t,i;\n    scanf(\"%d\",&t);\n   while(t--)\n    {\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        scanf(\"%d %d %d %d %d %d\",&x,&y,&x1,&y1,&x2,&y2);\n        xx=x,yy=y;\n        x+=-a+b,y+=-c+d;\n        if(x>x1&&x<x2&&y>y1&&y<=y2&&(x2>x1||a+b==0)&&(y2>y1||c+d==0))\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\n    int t,i;\n    scanf(\"%d\",&t);\n    int a,b,c,d,x,y,x1,y1,x2,y2,xx,yy;\n     while(t--)\n     {\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        scanf(\"%d %d %d %d %d %d\",&x,&y,&x1,&y1,&x2,&y2);\n        xx=x,yy=y;\n        x+=-a+b,y+=-c+d;\n        if(x>=x1&&x<=x2&&y>=y1&&y<=y2&&(x2>x1||a+b==0)&&(y2>y1||c+d==0))\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n     }\n    return 0;\n}\n"}
{"similarity_score": 0.5902410346854792, "equal_cnt": 10, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "2e5bee809947b1829d6b5880e643fb2d", "bug_code_uid": "13fa015ac5699a5ccbcfac41c2d103bb", "src_uid": "db9cec57d8ed5e914818ce9b439eb0f9", "apr_id": "1b8c3cedbade8aa68e651c1d5af0dc13", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        long long int c=0,m=0,n=0;\n        char s[2*100000];\n        scanf(\"%s\",s);\n        for(long long int i=0;i<strlen(s);i++){\n            if(s[i]=='('){\n                for(long long int j=i+1;j<strlen(s);j++){\n                    if(j>m){\n                    if(s[j]==')'){\n                        c++;\n                        m=j;\n                        break;\n                    }\n                    }\n                }\n            }\n        }\n        for(long long int i=0;i<strlen(s);i++){\n            if(s[i]=='['){\n                for(long long int j=i+1;j<strlen(s);j++){\n                    if(j>n){\n                    if(s[j]==']'){\n                        c++;\n                        n=j;\n                        break;\n                    }\n                    }\n                }\n            }\n        }\n        printf(\"%lld\\n\",c);\n    }\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        long long int c=0,k=0,ans=0;;\n        char s[2*100000];\n        scanf(\"%s\",s);\n        for(long long int i=0;i<strlen(s);i++){\n            if(s[i]=='('){\n                c++;\n            }\n            else if(s[i]==')'){\n                if(c>0){\n                    c--;\n                    ans++;\n                }\n            }\n        }\n        for(long long int i=0;i<strlen(s);i++){\n            if(s[i]=='['){\n                k++;\n            }\n            else if(s[i]==']'){\n                if(k>0){\n                    k--;\n                    ans++;\n                }\n            }\n        }\n        printf(\"%lld\\n\",ans);\n    }\n}"}
{"similarity_score": 0.9003880983182406, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "16232f4cd2eac06319a8649ac48d5537", "bug_code_uid": "bb07bc4955ac693de3c45b215a97a3d5", "src_uid": "64a375c7c49591c676dbdb039c93d218", "apr_id": "b85befd751c9e93dd88f72034d57dd89", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t,a,b,n,res,rem;\n\tres=0;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{   rem=0;\n\t    scanf(\"%d\",&a);\n\t    scanf(\"%d\",&b);\n\t    scanf(\"%d\",&n);\n\t    rem=(n+1)%3;\n\t    if(n==0)\n\t    res=a;\n\t    else if(n==1)\n\t    res=b;\n\t    else if(rem==2)\n\t    res=a;\n\t    else if(rem==1)\n\t    res=b;\n\t    else\n\t    res=a^b;\n\t    printf(\"%d\\n\",res);\n\t    \n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t,a,b,n,res,rem;\n\tres=0;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{   rem=0;\n\t    scanf(\"%d\",&a);\n\t    scanf(\"%d\",&b);\n\t    scanf(\"%d\",&n);\n\t    rem=(n)%3;\n\t    if(rem==0)\n\t    res=a;\n\t    else if(rem==1)\n\t    res=b;\n\t    else\n\t    res=a^b;\n\t    printf(\"%d\\n\",res);\n\t    \n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.8296943231441049, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "00a6fd7491073a1b9a43ae63a285572c", "bug_code_uid": "9b10a913b019fa0daa1da70eb0145134", "src_uid": "7224ffd4776af4129739e1b28f696050", "apr_id": "59f1dac80fa65cd6f598401c9e302166", "difficulty": 1100, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;++i)\n    {\n        int a,b,c,d,x,y,x1,y1,x2,y2;\n        scanf(\"%d %d %d %d\",&a,&b,&c&d);\n        scanf(\"%d %d %d %d %d %d\",&x,&y,&x1,&y1,&x2,&y2);\n        if(x==x1==x2 && a+b!=0)\n            printf(\"no\");\n        else if(y==y1==y2 && c+d!=0)\n            printf(\"no\");\n        else\n            {\n                if(x1<=x-a+b<=x2 && y1<=y-c+d<=y2)\n                    printf(\"yes\");\n                else\n                    printf(\"no\");\n            }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;++i)\n    {\n        int a,b,c,d,x,y,x1,y1,x2,y2;\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n        scanf(\"%d %d %d %d %d %d\",&x,&y,&x1,&y1,&x2,&y2);\n        if(x==x1 && x==x2 && a+b!=0)\n            printf(\"no\\n\");\n        else if(y==y1 && y==y2 && c+d!=0)\n            printf(\"no\\n\");\n        else\n            {\n                if(x1<=x-a+b && x-a+b<=x2 && y1<=y-c+d && y-c+d<=y2)\n                    printf(\"yes\\n\");\n                else\n                    printf(\"no\\n\");\n            }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9981851179673321, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c57b4be0f78672333e559bbc655d9b3a", "bug_code_uid": "03f3f392e35d9f81b49875dd0eb72aa6", "src_uid": "4d743a00e11510c824080ad7f1804021", "apr_id": "f36f6d908029cd18e32d2ca73f8dbb01", "difficulty": 900, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{int i,j,k,t=0,n, a[100];\nscanf(\"%d%d\",&n,&k);\nfor(i=0;i<n;i++)\n{scanf(\"%d\",&a[i]);}\nfor(i=0;i<n;i++){\nfor(j=0;j<n-i-1;j++)\nif(a[j]>a[j+1])\n{t=a[j];a[j]=a[j+1];a[j+1]=t;}t=0;\n}\nif(k>=n)\n    printf(\"-1\");\nelse\n    printf(\"%d %d\",a[n-k],a[n-k]);\n}\n", "fixed": "#include <stdio.h>\nint main()\n{int i,j,k,t=0,n, a[100];\nscanf(\"%d%d\",&n,&k);\nfor(i=0;i<n;i++)\n{scanf(\"%d\",&a[i]);}\nfor(i=0;i<n;i++){\nfor(j=0;j<n-i-1;j++)\nif(a[j]>a[j+1])\n{t=a[j];a[j]=a[j+1];a[j+1]=t;}t=0;\n}\nif(k>n)\n    printf(\"-1\");\nelse\n    printf(\"%d %d\",a[n-k],a[n-k]);\n}\n"}
{"similarity_score": 0.8080985915492958, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "570e42e19a4532a2fc6ef60d6d74e283", "bug_code_uid": "b913818683c41db76a3a32b0aa3d21bc", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "75a4c92e9600eee343e6ac02a656a88f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, count=0;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        count=0;\r\n        scanf(\"%d\", &n);\r\n        int a[n], b[n];\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n            scanf(\"%d\", &b[i]);\r\n            if((a[i]+b[i])%2!=0)\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n        if(count==n)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, odd=0, even=0;\r\n    scanf(\"%d\", &t);\r\n    while(t--){\r\n        odd=0;\r\n        even=0;\r\n        scanf(\"%d\", &n);\r\n        int a[2*n];\r\n        for(int i=0; i<2*n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n            if(a[i]%2!=0)\r\n            {\r\n               odd++;\r\n            }\r\n            else\r\n            {\r\n                even++;\r\n            }\r\n        }\r\n        if(even==odd)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9895833333333334, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "00a80450f56dc9e64016510ace17a105", "bug_code_uid": "c69a225ea0a924bd056fb478a9b9e58c", "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189", "apr_id": "486b62ec8519e1289472113641607610", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(int argc, char * argv[]) {\n\n    int t, n;\n    uint64_t k;\n\n    fscanf(stdin, \"%d\", &t);\n    \n    while (t--) {\n        fscanf(stdin, \"%d %llu\", &n, &k);\n\n        // only care about parity, k cannot be 0\n        k &= 1;\n\n        int * arr = (int *) malloc(n * sizeof(int));\n\n        int min = 1000000001, max = -1000000001;\n        for (int i = 0; i < n; i++) {\n            int num;\n            fscanf(stdin, \"%d\", &num);\n\n            arr[i] = num;\n\n            min = (min < num ? min : num);\n            max = (max > num ? max : num);\n        }\n\n        if (k) {\n            // k is odd\n            for (int i = 0; i < n; i++) {\n                printf(\"%d \", max - arr[i]);\n            }\n        }\n        else {\n            // k is even\n            for (int i = 0; i < n; i++) {\n                printf(\"%d \", arr[i] - min);\n            }\n        }\n        printf(\"\\n\");\n\n\n\n    }\n\n    return 0;\n}\n\n\n", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n\n\nint main(int argc, char * argv[]) {\n\n    int t, n;\n    uint64_t k;\n\n    fscanf(stdin, \"%d\", &t);\n    \n    while (t--) {\n        fscanf(stdin, \"%d %llu\", &n, &k);\n\n        // only care about parity, k cannot be 0\n        k &= 1;\n\n        int * arr = (int *) malloc(n * sizeof(int));\n\n        int min = 1000000001, max = -1000000001;\n        for (int i = 0; i < n; i++) {\n            int num;\n            fscanf(stdin, \"%d\", &num);\n\n            arr[i] = num;\n\n            min = (min < num ? min : num);\n            max = (max > num ? max : num);\n        }\n\n        if (k) {\n            // k is odd\n            for (int i = 0; i < n; i++) {\n                printf(\"%d \", max - arr[i]);\n            }\n        }\n        else {\n            // k is even\n            for (int i = 0; i < n; i++) {\n                printf(\"%d \", arr[i] - min);\n            }\n        }\n        printf(\"\\n\");\n\n\n\n    }\n\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9234393404004712, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "cec91ca85af0351909d049fc09a6daa8", "bug_code_uid": "f49f53037bddcd7f5a74adde3c45f92a", "src_uid": "ad9fd71025c5f91cece740ea95b0eb6f", "apr_id": "326c3ffab1499fc8d8510a6a7f99d876", "difficulty": 1500, "tags": ["dfs and similar", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n long int n,i,t,k,m1=0,m2=0,ans=0;\nscanf(\"%ld\",&n);\nlong int a[n+1],visit[n+1];\nfor(i=1;i<=n;i++){\nscanf(\"%ld\",&a[i]);\n}\nfor(i=1;i<=n;i++){\nvisit[i]=0;\n}\nfor(i=1;i<=n;i++){\nif(visit[i]==0){\nt=i;\nk=0;\nwhile(visit[t]!=1){\nvisit[t]=1;\nt=a[t];\nk++;\n}\nans=ans+k*k;\nif(m1<k){\nm2=m1;\nm1=k;\n}\nelse if(m2<k){\nm2=k;}}}\n//printf(\"%d %d\\n\",ans,m1*m2);\nans=ans+2*m1*m2;\nprintf(\"%ld\\n\",ans);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\nlong long int n,i,t,k,m1=0,m2=0,ans=0;\nscanf(\"%lld\",&n);\n int a[100005],visit[100005];\nfor(i=1;i<=n;i++){\nscanf(\"%d\",&a[i]);\n}\nfor(i=1;i<=n;i++){\nvisit[i]=0;\n}\nfor(i=1;i<=n;i++){\nif(visit[i]==0){\nt=i;\nk=0;\nwhile(visit[t]!=1){\nvisit[t]=1;\nt=a[t];\nk++;\n}\nans=ans+k*k;\nif(m1<k){\nm2=m1;\nm1=k;\n}\nelse {if(m2<k)\nm2=k;}}}\n//printf(\"%d %d\\n\",ans,m1*m2);\nans=ans+(2*m1*m2);\nprintf(\"%lld\\n\",ans);\nreturn 0;\n}\n"}
{"similarity_score": 0.24867162592986186, "equal_cnt": 8, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "82df4fc6d2c7bb71646817dd0ba8c393", "bug_code_uid": "255aa3f3915a646168610e1e93e4fb76", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "2bac918916361d17a13bb646d5345afa", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[1000],n,i,p=0,q=0,r=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n;i++) {\n        if(a[i]==1) {\n            p++;\n        }\n        else if(a[i]==2) {\n            q++;\n        }\n        else if(a[i]==3) {\n            r++;\n        }\n    }\n    if(p>=q&&p>=r) {\n        printf(\"%d\",n-p);\n    }\n    else if(q>p&&q>=r) {\n        printf(\"%d\",n-q);\n    }\n    else {\n        printf(\"%d\",n-r);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,n,i,p=0,q=0,r=0;\n    scanf(\"%d\",&n);\n    //while(n!=0)\n    for(i=1;i<=n;i++) {\n        scanf(\"%d\",&a);\n        if(a==1){\n            p++;\n        }\n        else if(a==2) {\n            q++;\n        }\n        else {\n            r++;\n        }\n        //n--;\n    }\n    if(p>=q&&p>=r) {\n        printf(\"%d\",q+r);\n    }\n    else if(q>p&&q>=r) {\n        printf(\"%d\",p+r);\n    }\n    else {\n        printf(\"%d\",p+q);\n    }\n}\n"}
{"similarity_score": 0.9075144508670521, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "3735c7ace3a5eb01dd342c756b20ac9f", "bug_code_uid": "f047874f51b5379c83a2e1d3b0e688bb", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "3d3a9e64309cf70474611ac718bd2781", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[101],n,i=l,t;\nscanf(\"%d\",&n);\nfor(;i<=n;i++){\n    scanf(\"%d\",&t);\n    a[t]=i;\n}\nfor(i=1;i<=n;i++)\nprintf(\"%d\",a[i]);\n}", "fixed": "#include<stdio.h>\nint main(){\n    int a[101],n,i=1,t;\n    scanf(\"%d\",&n);\n    for(;i<=n;i++){\n        scanf(\"%d\",&t);\n        a[t]=i;\n    }\n    for(i=1;i<=n;i++)\n    printf(\"%d \",a[i]);\n}"}
{"similarity_score": 0.7134831460674157, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "54d63ccebba83e40f049b177fe43608e", "bug_code_uid": "160820f62a6b05f75be339d1d62c637e", "src_uid": "e59cddb6c941b1d7556ee9c020701007", "apr_id": "30ec068e8aa695aa6b7e971e35aa3461", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int cases,i,n,x,x1,x2;\n    scanf(\"%lld \",&cases);\n    while(cases)\n{\n   x=0; x1=0; x2=0;\n    scanf(\"%lld\",&n);\n   long long int a[n];\n   \n    for(i=0;i<n;i++)\n    scanf(\"%lld\",&a[i]);\n    \n    for(i=0;i<n;i++)\n    {\n        if(a[i]%3=0)\n        x++;\n        else if(a[i]==1)\n        x1++;\n        else if(a[i]==2)\n        x2++;\n    }\n    if(x2>=x1)\n    printf(\"%lld\\n\",x+(x2+x1)/2);\n    else \n    printf(\"%lld\\n\",x+(x2+x1-1)/2);\n    \n    cases--;\n }\n  return 0;\n}\n    ", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int cases,i,n,x,x1,x2;\n    scanf(\"%lld \",&cases);\n    while(cases)\n{\n   x=0; x1=0; x2=0;\n    scanf(\"%lld\",&n);\n   long long int a[n];\n   \n    for(i=0;i<n;i++)\n  {\n      scanf(\"%lld\",&a[i]);\n        if(a[i]%3==0)\n        x++;\n        else if(a[i]%3==1)\n        x1++;\n        else\n        x2++;\n    }\n    if(x2==x1)\n    printf(\"%lld\\n\",x+x1);\n    else if(x2>x1)\n    printf(\"%lld\\n\",x+(2*x1+x2)/3);\n    else\n    printf(\"%lld\\n\",x+(2*x2+x1)/3);\n\n    cases--;\n }\n  return 0;\n}\n    "}
{"similarity_score": 0.6682080924855491, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7c13d8801a9ae2ec2b5c4d6b9cf72b55", "bug_code_uid": "d479c1cfaceb169e55a2fb0b0272dd6d", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "949abc1c256ebc104e780ea0b1290c70", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    int i,d=0;\n    for(i=0;i<t;i++){\n        scanf(\"%d\",&n);\n        for(int x=1;x>=1;x++){\n            for(int k=2;k>=2;k++){\n                if(x*(pow(2,k)-1)==n){\n                    printf(\"%d\",x);\n                    d=1;\n                    break;\n                }\n            }\n            if(d==1) {\n                break;\n            }\n        }\n        \n    }\n    \n    \n    \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    int i,d=0;\n    for(i=0;i<t;i++){\n        scanf(\"%d\",&n);\n            for(int k=2;k>=2;k++){\n                if((n)%(int)(pow(2,k)-1)==0){\n                    printf(\"%d\\n\",n/(int)(pow(2,k)-1));\n                    break;\n                }\n            }\n        \n    }\n    \n    \n    \n    return 0;\n}"}
{"similarity_score": 0.5584826132771338, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b414e76cd3338ee74950a5022433bec5", "bug_code_uid": "2410201596259488ca6b4f0f78b8a94b", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "af4f2a967563710186ea3fa88caefabf", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint T;\r\n\tscanf(\"%d\",&T);\r\n\tint n;\r\n\tint a[200000];\r\n\twhile(T--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tgetchar();\r\n\t\tint i;\r\n\t\tint b[10];\r\n\t\tint j;\r\n\t\tmemset(b,0,sizeof(b));\r\n\t\tfor(i=0;i<n;++i)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\t++b[a[i]];\r\n\t\t}\r\n\t\tfor(i=0;i<10;++i)\r\n\t\t{\r\n\t\t\tj=0;\r\n\t\t\tif(b[i]>=3)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\\n\",i);\r\n\t\t\t\t++j;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(j==0)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint T;\r\n\tscanf(\"%d\",&T);\r\n\tint n;\r\n\tint a[200000];\r\n\tint b[200001];\r\n\twhile(T--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tgetchar();\r\n\t\tint i;\r\n\t\tint j=0;\r\n\t\tmemset(b,0,sizeof(b));\r\n\t\tfor(i=0;i<n;++i)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\t++b[a[i]];\r\n\t\t}\r\n\t\tfor(i=0;i<n;++i)\r\n\t\t{\r\n\t\t\tif(b[a[i]]>=3)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\\n\",a[i]);\r\n\t\t\t\tj=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(j)\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9987293519695044, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a6a24c34a37e1f1dc3493790897ddd58", "bug_code_uid": "a7edab29feb4a2218f402379e725a088", "src_uid": "6dea4611ca210b34ae2da93ebfa9896c", "apr_id": "aca0b5af35f4d95987f1e60446352573", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint max(int a[],int );\nint min(int a[],int ,int );\nint main()\n{ int m,n,i,j,t,a[1000]={0};\nscanf(\"%d %d\",&m,&n);\nscanf(\"%d\",&a[0]);\nfor(i=1;i<n;i++)\n{scanf(\"%d\",&a[i]);\nj=i-1;\nt=a[i];\nwhile(t>a[j])\n{a[j+1]=a[j];\na[j]=t;\nif(j==0)\n break;\n\nj--;\n}}\n\n\nprintf(\"%d %d\",max(a,m),min(a,m,n));\nreturn 0;\n}\n\nint max(int a[],int m)\n{int i,t,k,j=0,s=0;\nfor(j=1;j<=m;j++)\n{\n         s+=a[0];\n    a[0]=a[0]-1;k=1;t=a[0];\n    while(t<a[k])\n    {\n        a[k-1]=a[k];\n        a[k]=t;\n        if(a[k+1]==0)\n        break;\n        k++;\n    }\n}\n\nreturn(s);\n}\nint min(int a[],int m,int n)\n{\n    int i,t,j,s=0;\n    for(i=n-1;i>=0&&m>0;i--)\n    {m-=a[i];\n    if(m<0)\n    break;\ns+=(a[i]*(a[i]+1))/2;\n    }\n\n    if(m<0)\n   {m+=a[i];\n   for(t=0;t<m;t++)\n   s+=a[i]-t;}\n    return(s);\n\n}\n\n\n\n\n\n\n", "fixed": "#include<stdio.h>\nint max(int a[],int );\nint min(int a[],int ,int );\nint main()\n{ int m,n,i,j,t,a[1001]={0};\nscanf(\"%d %d\",&m,&n);\nscanf(\"%d\",&a[0]);\nfor(i=1;i<n;i++)\n{scanf(\"%d\",&a[i]);\nj=i-1;\nt=a[i];\nwhile(t>a[j])\n{a[j+1]=a[j];\na[j]=t;\nif(j==0)\n break;\n\nj--;\n}}\n\n\nprintf(\"%d %d\",max(a,m),min(a,m,n));\nreturn 0;\n}\n\nint max(int a[],int m)\n{int i,t,k,j=0,s=0;\nfor(j=1;j<=m;j++)\n{\n         s+=a[0];\n    a[0]=a[0]-1;k=1;t=a[0];\n    while(t<a[k])\n    {\n        a[k-1]=a[k];\n        a[k]=t;\n        if(a[k+1]==0)\n        break;\n        k++;\n    }\n}\n\nreturn(s);\n}\nint min(int a[],int m,int n)\n{\n    int i,t,j,s=0;\n    for(i=n-1;i>=0&&m>0;i--)\n    {m-=a[i];\n    if(m<0)\n    break;\ns+=(a[i]*(a[i]+1))/2;\n    }\n\n    if(m<0)\n   {m+=a[i];\n   for(t=0;t<m;t++)\n   s+=a[i]-t;}\n    return(s);\n\n}\n\n\n\n\n\n\n"}
{"similarity_score": 0.33070866141732286, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "49d1dc0270cd985f5cb75516221e1933", "bug_code_uid": "17833cfa4be8d38c302de49e36c6475f", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "1350dfb407aa10e6cc9918dc058a4b57", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid swap(int* a,int* b)\n{\n\tint tmp=*a;\n\t*a=*b;\n\t*b=tmp;\n\treturn;\n}\nint a[100000];\nint main()\n{\n\tint n,x,s=0;\n\tscanf(\"%d%d\",&n,&x);\n\tint i,j;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n-1;i++)\n\t\tfor(j=i+1;j<n;j++)\n\t\t\tif(a[i]>a[j])\n\t\t\t\tswap(&a[i],&a[j]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\ts+=a[i]*x;\n\t\tif(x>1)\n\t\t\tx--;\n\t}\n\tprintf(\"%d\\n\",s);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define t 1000000000000\nunsigned long long int a[100000],L[100000],R[100000];\nvoid merge(unsigned long long int a[],int f,int l,int m)\n{\n\tint i,j,k,n1,n2;\n\tn1=m-f+1;\n\tn2=l-m;\n\tfor(i=f,j=0;i<=m;i++,j++)\n\t\tL[j]=a[i];\n\tfor(i=m+1,j=0;i<=l;i++,j++)\n\t\tR[j]=a[i];\n\tfor(i=0,j=0,k=f;i<n1&&j<n2;k++)\n\t{\n\t\tif(L[i]<=R[j])\n\t\t\ta[k]=L[i++];\n\t\telse\n\t\t\ta[k]=R[j++];\n\t}\n\twhile(i<n1)\n\t\ta[k++]=L[i++];\n\twhile(j<n2)\n\t\ta[k++]=R[j++];\n\treturn;\n}\nvoid sort(unsigned long long int a[],int f,int l)\n{\n\tif(f<l)\n\t{\n\t\tint m=(f+l)/2;\n\t\tsort(a,f,m);\n\t\tsort(a,m+1,l);\n\t\tmerge(a,f,l,m);\n\t}\n\treturn;\n}\nvoid Msort(unsigned long long int a[],int n)\n{\n\tint f=0,l=n-1;\n\tsort(a,f,l);\n\treturn;\n}\nint main()\n{\n\tint n,x;\n\tunsigned long long int s=0;\n\tscanf(\"%d%d\",&n,&x);\n\tint i,j;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tMsort(a,n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\ts+=(a[i]*x)%t;\n\t\tif(x>1)\n\t\t\tx--;\n\t}\n\tprintf(\"%llu\\n\",s);\n\treturn 0;\n}\n"}
{"similarity_score": 0.35960044395116536, "equal_cnt": 25, "replace_cnt": 15, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "9d0b4318b8055d79c9fb152db4f356d1", "bug_code_uid": "053eb911866ce43e8beb37f904be4ba6", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "58e79ff7f1ac47199cf0b607ab492095", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int test,i,j,length,count=0,p,q;\n    char s[100];\n    scanf(\"%d\",&test);\n    for(i=1; i<=test; i++)\n    {\n        scanf(\"%d\",&length);\n        scanf(\"%s\",s);\n        for(j=0; j<=length; j++)\n        {\n             if(s[j]=='8')\n             {\n                 break;\n             }\n             else if(s[j]!='8')\n             {\n                 count++;\n             }\n        }\n        p=count;\n        q=length-p;\n        if(q>=11)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n            printf(\"NO\\n\");\n    }\n}\n\n", "fixed": "    #include<stdio.h>\n    main()\n    {\n    \tint t, n, i;\n    \tchar a[1001];\n    \tscanf(\"%d\", &t);\n    \twhile (t--)\n    \t{\n    \t\tscanf(\"%d\", &n);\n    \t\tscanf(\"%s\", a);\n    \t\tfor (i = 0; i < n; i++)\n    \t\t\tif (a[i] == '8')\n    \t\t\t\tbreak;\n    \t\tif ((n - i) >= 11)\n    \t\t\tprintf(\"YES\\n\");\n    \t\telse\n    \t\t\tprintf(\"NO\\n\");\n    \t}\n    }\n"}
{"similarity_score": 0.8413205537806177, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "515fb2644bb7e737194ca09a34f37050", "bug_code_uid": "dd1bd7f738e7c7985f8733a7cbb31b48", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "6b8f703b667d94c87682decaafe341cc", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#define ll long long\r\nint main(void)\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    if (T<1 || T>104){return 1;}\r\n    while(T--)\r\n    {\r\n        int a,b;\r\n        scanf(\"%d %d\",&a,&b);\r\n        if(a==0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            int k=a*1+b*2+1;\r\n            printf(\"%d\\n\",k);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n#define ll long long\r\nint main(void)\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    if (T<1 || T>10000){return 1;}\r\n    while(T--)\r\n    {\r\n        long long int a,b;\r\n        long long int k=1;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        while(a<0||b<0)\r\n        {\r\n            return 1;\r\n        }\r\n        if(a==0)\r\n        {\r\n            printf(\"%lld\\n\",k);\r\n        }\r\n        if(a!=0) \r\n        {\r\n            k+=(a*1+b*2);\r\n            printf(\"%lld\\n\",k);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.3147353361945637, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "8316d5664fd7b1ce7e83a678aa73a4fc", "bug_code_uid": "abc3b8c43b08abe7cd88981299bb4259", "src_uid": "beaeeb8757232b141d510547d73ade04", "apr_id": "d10069241cd1d38974649caa1a7741d6", "difficulty": 1200, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main( )\n{\n    int n,i,j,temp,count;\n    int a[10000];\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    if(n>0)\n\t\tcount=1;\n\ttemp=(n-1)-a[n-1];\n\tfor (j = n-2; j >=0 ;--i)\n\t{\n\t\tif(i<temp)\n\t\t\tcount++;\n\t\tj=i-a[i];\n\t\tif(j<temp)\n\t\t\ttemp=j;\n\n\t}\n\tprintf(\"%d\\n\",count );\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define max(a,b) (a>b?a:b)\nlong long k[1000006];\n\nint main()\n{\n    long long n,i;\n    long long cnt = 0;\n    long long left = 0;\n\n    scanf(\"%I64d\",&n);\n    for(i=1; i<=n; i++)\n        scanf(\"%I64d\",&k[i]);\n\n    for(i=n; i>=1; i--)\n    {\n        if(left!=0)cnt++, left--;\n        left = max(k[i], left);\n    }\n    printf(\"%I64d\",n-cnt);\n}\n"}
{"similarity_score": 0.6604292790313704, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c2905a8f4d5a63340243d2e4e8627a92", "bug_code_uid": "4c572ec011caedf95290429d83d04181", "src_uid": "6fc3da19da8d9ab024cdd5acfc4f4164", "apr_id": "48896b312456b8a239077af307766bc2", "difficulty": 1300, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#define MAXN 1000\n\nint main()\n{\n    int n, a[MAXN], b[MAXN], p[MAXN] = {0}, cnt = 0, idx;\n    bool used[MAXN+1] = {false};\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    for (int i = 0; i < n; i++)\n        scanf(\"%d\", &b[i]);\n    for (int i = 0; i < n; i++) {\n        if (a[i] != b[i]) {\n            cnt++;\n            idx = i;\n        } else {\n            p[i] = a[i];\n            used[p[i]] = true;\n        }\n    }\n    if (cnt == 1) {\n        int i = 1;\n        while (used[i]) i++;\n        p[idx] = i;\n    } else {\n        for (int i = 0; i < n; i++)\n            if (!p[i]) {\n                p[i] = used[a[i]]? b[i]: a[i];\n                used[p[i]] = true;\n            }\n    }\n    printf(\"%d\", p[0]);\n    for (int i = 1; i < n; i++)\n        printf(\" %d\", p[i]);\n    puts(\"\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n#define MAXN 1000\n\nint main()\n{\n    int n, a[MAXN], b[MAXN], p[MAXN] = {0}, diff[2], cnt = 0;\n    bool used[MAXN+1] = {false};\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    for (int i = 0; i < n; i++)\n        scanf(\"%d\", &b[i]);\n    for (int i = 0; i < n; i++) {\n        if (a[i] == b[i]) {\n            p[i] = a[i];\n            used[p[i]] = true;\n        } else\n            diff[cnt++] = i;\n    }\n    if (cnt == 1) {\n        int left = 1;\n        while (used[left]) left++;\n        p[diff[0]] = left;\n    } else {\n        if (!used[a[diff[0]]] && !used[b[diff[1]]]) {\n            p[diff[0]] = a[diff[0]];\n            p[diff[1]] = b[diff[1]];\n        } else {\n            p[diff[0]] = b[diff[0]];\n            p[diff[1]] = a[diff[1]];\n        }\n    }\n    printf(\"%d\", p[0]);\n    for (int i = 1; i < n; i++)\n        printf(\" %d\", p[i]);\n    puts(\"\");\n    return 0;\n}\n"}
{"similarity_score": 0.780045351473923, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "e7a7d81f96fb7c147dece1753c53fceb", "bug_code_uid": "5a90f482e47cba27180972544248d8c8", "src_uid": "0690e2df87f60e5be34505d9e2817032", "apr_id": "3467908405dc8cf8a0cb7375d6326d40", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(void){\r\n    int min=0;\r\n    int t,n;\r\n    printf(\"\");\r\n    scanf(\"%d\",&t);\r\n    while(t--) {\r\n    printf(\"\");\r\n    scanf(\"%d\",&n);\r\n    min=(n-3)/3-1\r\n    printf(min)  \r\n        \r\n    \r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main(void){\r\n    int min=0;\r\n    int t,i,n;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n         scanf(\"%d\",&n);\r\n          min=(n-3)/3-1;\r\n          printf(\"%i\\n\",min);\r\n        \r\n    \r\n    }\r\n}"}
{"similarity_score": 0.9987405541561712, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dbbf63de634a6549e998fa8c88c5469f", "bug_code_uid": "c3065f4e9a79ef45707c429af9621944", "src_uid": "96b6a96ded46bddb78b118d6d3a9d049", "apr_id": "998207f3adb999c0d456d1b87e220791", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\ntypedef struct s_cor\n{\n\tint\tx;\n\tint\ty;\n\tint\tc;\n}t_cor;\n\nint\tmain(void)\n{\n\tint\tn;\n\tint\ti;\n\tint\tj;\n\tint\tx;\n\tint\ty;\n\tint k;\n\tint\tret;\n\tt_cor\tcor;\n\n\tscanf(\"%d\", &n);\n\ti = -1;\n\twhile (++i < n)\n\t{\n\t\tret = 1;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tchar\ts[x][y];\n\t\tj = -1;\n\t\twhile (++j < x)\n\t\t\tscanf(\"%s\", s[j]);\n\t\tj = -1;\n\t\twhile (++j < x)\n\t\t{\n\t\t\tk = -1;\n\t\t\twhile (++k < y)\n\t\t\t{\n\t\t\t\tif (s[j][k] == 'R')\n\t\t\t\t{\n\t\t\t\t\tcor.x = j;\n\t\t\t\t\tcor.y = k;\n\t\t\t\t\tgoto block;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tblock:\n\t\tj = -1;\n\t\twhile (++j < x)\n\t\t{\n\t\t\tk = -1;\n\t\t\twhile (++k < y)\n\t\t\t{\n\t\t\t\tif (s[j][k] == 'R')\n\t\t\t\t{\n\t\t\t\t\tif (j == 0 && k == 0)\n\t\t\t\t\t\tret = 0;\n\t\t\t\t\tif ((j > cor.x && k < cor.y))\n\t\t\t\t\t\tret = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ret == 0)\n\t\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t\tprintf(\"YES\\n\");\n\t}\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\ntypedef struct s_cor\n{\n\tint\tx;\n\tint\ty;\n\tint\tc;\n}t_cor;\n\nint\tmain(void)\n{\n\tint\tn;\n\tint\ti;\n\tint\tj;\n\tint\tx;\n\tint\ty;\n\tint k;\n\tint\tret;\n\tt_cor\tcor;\n\n\tscanf(\"%d\", &n);\n\ti = -1;\n\twhile (++i < n)\n\t{\n\t\tret = 1;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tchar\ts[x][y];\n\t\tj = -1;\n\t\twhile (++j < x)\n\t\t\tscanf(\"%s\", s[j]);\n\t\tj = -1;\n\t\twhile (++j < x)\n\t\t{\n\t\t\tk = -1;\n\t\t\twhile (++k < y)\n\t\t\t{\n\t\t\t\tif (s[j][k] == 'R')\n\t\t\t\t{\n\t\t\t\t\tcor.x = j;\n\t\t\t\t\tcor.y = k;\n\t\t\t\t\tgoto block;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tblock:\n\t\tj = -1;\n\t\twhile (++j < x)\n\t\t{\n\t\t\tk = -1;\n\t\t\twhile (++k < y)\n\t\t\t{\n\t\t\t\tif (s[j][k] == 'R')\n\t\t\t\t{\n\t\t\t\t\tif (j == 0 && k == 0)\n\t\t\t\t\t\tret = 1;\n\t\t\t\t\tif ((j > cor.x && k < cor.y))\n\t\t\t\t\t\tret = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ret == 0)\n\t\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t\tprintf(\"YES\\n\");\n\t}\n}\n"}
{"similarity_score": 0.8346368715083798, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "865ca31327c304a4826bcb212adf76d3", "bug_code_uid": "91dbe2bdf9dc6c06cc605093c23a9a2f", "src_uid": "1f29461c42665523d0a4d56b13f7e480", "apr_id": "0b1386775b146db83fde4cf503527021", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int t, r, g, b,  H, M, L;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\",&r, &g, &b);\n        {\n            if (r>g)\n            {\n                M=r;\n                L=g;\n            }\n            else\n            {\n                M=g;\n                L=r;\n            }\n            if (M>b)\n            {\n                H=M;\n                if(L>b)\n                {\n                    M=L;\n                    L=b;\n                }\n                else\n                {\n                    M=b;\n                }\n            }\n            else\n            {\n                H=b;\n            }\n\n        }\n        int a = L/2;\n        int H1 = H - (L-a);\n        int M1 = M - a;\n        if((M+L)>H && H!=M && H!=L){\n            printf(\"%d\\n\",H);\n        }\n        else if (H1>M1)\n        {\n            printf(\"%d\\n\",(M1+L));\n        }else\n        {\n            printf(\"%d\\n\",(H1+L));\n        }\n\n\n\n\n    }\n\n\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int t, r, g, b,  H, M, L;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\",&r, &g, &b);\n        {\n            if (r>g)\n            {\n                M=r;\n                L=g;\n            }\n            else\n            {\n                M=g;\n                L=r;\n            }\n            if (M>b)\n            {\n                H=M;\n                if(L>b)\n                {\n                    M=L;\n                    L=b;\n                }\n                else\n                {\n                    M=b;\n                }\n            }\n            else\n            {\n                H=b;\n            }\n\n        }\n\n        if (H>(M+L))\n        {\n            printf(\"%d\\n\",(M+L));\n        }else\n        {\n            printf(\"%d\\n\",(H+M+L)/2);\n        }\n\n\n\n\n    }\n\n\n}\n"}
{"similarity_score": 0.9461172741679873, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "6b0301b11f0c2b30c32f5528badaa2c3", "bug_code_uid": "114fbab28e273f926102746d5cfe9c23", "src_uid": "a4c82fffb31bc7e42870fd84e043e815", "apr_id": "38e8621299203b2bb1bf3b8858ace6c6", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nvoid main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while (t)\n    {long int n,k;\n    scanf(\"%ld %ld\",&n,&k);\n    if(k==1)\n    {\n        if(n%2==0)\n        {\n            printf(\"NO\\n\");\n\n        }\n        else\n        {\n            printf(\"YES\\n\");\n        }\n    }\n    else if(n==2 && k==2)\n    {\n        printf(\"NO\\n\");\n    }\n    else\n    {\n       long int last=1+((k-2)*2);\n       long int sum=((1+last)*(k-1))/2;\n        if((n-sum)>last && (n-sum)%2!=0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    t--;\n    }\n    \n}", "fixed": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while (t--)\n    {long long int n,k;\n    scanf(\"%lld %lld\",&n,&k);\n    if(k==1)\n    {\n        if(n%2==0)\n        {\n            printf(\"NO\\n\");\n        }\n        else\n        {\n            printf(\"YES\\n\");\n        }\n    }\n    else if(n==2 && k==2)\n    {\n        printf(\"NO\\n\");\n    }\n    else\n    {\n       long long int last=1+((k-2)*2);\n       long long int sum=((1+last)*(k-1))/2;\n        if((n-sum)>last && ((n-sum)%2)!=0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    }\n    \n}"}
{"similarity_score": 0.9940357852882704, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9ed59e8eb48898d8a1dd8adf7c1ff0d6", "bug_code_uid": "a8b82bdec79e8358dec506cfc18c9b4c", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "46d284c155aafd12b5cb68090a5d91e5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n\tint n,i,j,a,b,sum;\n\tsum = 0;\n\tscanf(\"%d\",&n);\n\tint d[n-1];\n\tfor(i = 0;i < n-1;i++){\n\t\tscanf(\"%d\",&d[i]);\n\t}\n\tscanf(\"%d %d\",&a,&b);\n\t\n\t\n\tfor(i = a-1;i <= b-a;i++){\n\t\tsum += d[i];\n\t}\n\t\n\tprintf(\"%d\",sum);\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main() {\n\tint n,i,j,a,b,sum;\n\tsum = 0;\n\tscanf(\"%d\",&n);\n\tint d[n-1];\n\tfor(i = 0;i < n-1;i++){\n\t\tscanf(\"%d\",&d[i]);\n\t}\n\tscanf(\"%d %d\",&a,&b);\n\t\n\t\n\tfor(i = a-1;i < b-1;i++){\n\t\tsum += d[i];\n\t}\n\t\n\tprintf(\"%d\",sum);\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9993079584775086, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "49faa70ba2c98b9268835d74f0954ba1", "bug_code_uid": "f4e93fdb7c7b434843cfe47e82f6da80", "src_uid": "06e9649963715e56d97297c6104fbc00", "apr_id": "cf3f6cc7d6272469c2d1c34c149d0c76", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//Date:24-08-16\n\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include<float.h>\n#include<math.h>\n#include<ctype.h>\n#include<limits.h>\n#include<time.h>\n#define ll long long\n#define For(i,n)\tfor(i=0;i<n;i++)\n#define rep(i ,a ,b)\tfor(i=a;i<=b;i++)\n#define mset(a ,value)\tmemset(a ,value ,sizeof(a))\n#define s(a)\tscanf(\"%d\" ,&a);\n#define ls(a)\tscanf(\"%ld\" ,&a)\n#define reg(i)\tregister int i\n#define infinite INT_MAX\n#define MAX 300001\nint min(int a,int b){\treturn (a<b?a:b);\t}\nint max(int a,int b){\treturn (a>b?a:b);\t}\nint main(){\n\tint n ,b ,d ,i;\n\tscanf(\"%d %d %d\" ,&n ,&b ,&d);\n\tll t=0 ,c=0;\n\tint a[n];\n\tFor(i ,n){\ts(a[i]);\t\n\t\tif(a[i]<b)\tt+=a[i];\n\t\tif(t>d)\t\tc++ ,t=0;\n\t}\n\tprintf(\"%I64d\" ,c);\n}", "fixed": "//Date:24-08-16\n\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<stdbool.h>\n#include<float.h>\n#include<math.h>\n#include<ctype.h>\n#include<limits.h>\n#include<time.h>\n#define ll long long\n#define For(i,n)\tfor(i=0;i<n;i++)\n#define rep(i ,a ,b)\tfor(i=a;i<=b;i++)\n#define mset(a ,value)\tmemset(a ,value ,sizeof(a))\n#define s(a)\tscanf(\"%d\" ,&a);\n#define ls(a)\tscanf(\"%ld\" ,&a)\n#define reg(i)\tregister int i\n#define infinite INT_MAX\n#define MAX 300001\nint min(int a,int b){\treturn (a<b?a:b);\t}\nint max(int a,int b){\treturn (a>b?a:b);\t}\nint main(){\n\tint n ,b ,d ,i;\n\tscanf(\"%d %d %d\" ,&n ,&b ,&d);\n\tll t=0 ,c=0;\n\tint a[n];\n\tFor(i ,n){\ts(a[i]);\t\n\t\tif(a[i]<=b)\tt+=a[i];\n\t\tif(t>d)\t\tc++ ,t=0;\n\t}\n\tprintf(\"%I64d\" ,c);\n}"}
{"similarity_score": 0.38857142857142857, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "4967d8819fb7791a31327a37f1db6845", "bug_code_uid": "4921cb471af40b94b15a6ce7fca70c3c", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "0e4d50e92f94abdb4907454ef6533cb2", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint c,m,l,r,i,j;\nchar a[1000000];\ngets(a);\nscanf(\"%d\",&m);\nfor(i=0;i<m;i++)\n{\n    c=0;\nscanf(\"%d%d\",&l,&r);\nfor(j=l;j<r;j++)\n{\nif(a[j-1]==a[j])\n{\nc=c+1;\n}\n}\nprintf(\"%d\\n\",c);\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint c,m,l,r,i,j,a2[100000];\nchar a[1000000];\ngets(a);\nscanf(\"%d\",&m);\nc=0;\nint L=strlen(a);\nfor(i=1;i<L;i++)\n{\nif(a[i-1]==a[i])\n{\n    c=c+1;\na2[i]=c;\n}\nelse\n    a2[i]=c;\n}\na2[i]=c;\n//for(i=1;i<L;i++)\n   // printf(\"%d\\n\",a2[i]);\nfor(i=0;i<m;i++)\n{\nscanf(\"%d%d\",&l,&r);\nc=a2[r-1]-a2[l-1];\nif(l==1)\nprintf(\"%d\\n\",a2[r-1]);\nelse if(r==L)\nprintf(\"%d\\n\",a2[r]-a2[l-1]);\nelse if((r-l)==1)\nprintf(\"%d\\n\",a2[l]-a2[l-1]);\nelse\nprintf(\"%d\\n\",c);\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.927652733118971, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5afa701591bd6200b4b7c2347db4f3cc", "bug_code_uid": "916085215fb785c029f74d06069f1de6", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "3868ed6c1fa1e57d23b78737bde03d5c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n,i,j,t,x;\n    scanf(\"%d\",&n);\n    int d[n],u[n],c[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&d[i],&u[i]);\n    }\n    c[0]=u[0]-d[1];\n    t=u[0]-d[1];\n    for(i=1;i<=n;i++){\n        t=t+u[i];\n        c[i]=t;\n        t=c[i]-d[i+1];\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            if(c[i]<c[j]){\n                x=c[j];\n                c[j]=c[i];\n                c[i]=x;\n            }\n        }\n    }\n    if(u[0]>=1 && d[1]>=1 && c[n-1]==0){\n        printf(\"%d\",u[0]);\n    }\n    else{\n    printf(\"%d\",c[n-1]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i,j,t,x;\n    scanf(\"%d\",&n);\n    int d[n],u[n],c[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&d[i],&u[i]);\n    }\n    c[0]=u[0]-d[1];\n    t=u[0]-d[1];\n    for(i=1;i<=n;i++){\n        t=t+u[i];\n        c[i]=t;\n        t=c[i]-d[i+1];\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            if(c[i]<c[j]){\n                x=c[j];\n                c[j]=c[i];\n                c[i]=x;\n            }\n        }\n    }\n    if(u[0]==d[1] && c[n-1]==0){\n        printf(\"%d\",u[0]);\n    }\n    else if(u[0]>c[n-1]){\n        printf(\"%d\",u[0]);\n\n    }\n    else {\n        printf(\"%d\",c[n-1]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9662618083670715, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "5d27eaa8949b229fc76ef0500c05b97e", "bug_code_uid": "1bad646aff75593cca0d4fdb29f75e05", "src_uid": "6e5b4d43e64645cf26d5eac31437b1a9", "apr_id": "586b1269c91ec8f6d61516a1cb2ad389", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long int ll;\nint main(){ \n\tint num,i,n,a,b;\n\tscanf(\"%d\",&num);\n\twhile(num--)\n\t{\n\t\tll sum=0,n,max=0;\n\t\ta=b=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%lld\",&n);\n\t\t\tsum = sum + n;\n\t\t\tif(sum>max)\n\t\t\tmax=sum,a=i;\n\t\t\tif(sum<=0)\n\t\t\tsum=0,b=i;\n\t\t}\n\t\tif(b==0&&a==n)\n\t\tprintf(\"YES\\n\");\n\t\telse \n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\ntypedef long long int ll;\nint main(){ \n\tint num,n,i,a,b;\n\tscanf(\"%d\",&num);\n\twhile(num--)\n\t{\n\t\tll sum=0,num2,max=0;\n\t\ta=b=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%lld\",&num2);\n\t\t\tsum = sum + num2;\n\t\t\tif(sum>max)\n\t\t\tmax=sum,a=i;\n\t\t\tif(sum<=0)\n\t\t\tsum=0,b=i;\n\t\t}\n\t\tif(b==0&&a==n&&sum>=max)\n\t\tprintf(\"YES\\n\");\n\t\telse \n\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.6833046471600689, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "b56f5b584292b18b7514b4f67436a456", "bug_code_uid": "3b329f962dd52bff3717f74723a19117", "src_uid": "9438ce92e10e846dd3ab7c61a1a2e3af", "apr_id": "96c1ace0fcf4de44a18ef527dbfa3b0a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n    int n , m;\n    scanf(\"%d %d\",&n,&m);\n    int arr[m+1],i,j;\n    for(i=0;i<m+1;i++)\n    {\n        arr[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        int q,num;\n        scanf(\"%d\",&q);\n        for(j=0;j<q;j++)\n        {\n            scanf(\"%d\",&num);\n            arr[num]=1;\n        }\n\n\n    }\n    int flag =0;\n    for(i=1;i<m+1;i++)\n    {\n        if(arr[i]==0)\n        {\n            flag =1;\n            i=n+2;\n        }\n    }\n    (flag==1)?printf(\"NO\"):printf(\"YES\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n    int n , m,count=0;\n    scanf(\"%d %d\",&n,&m);\n    int arr[m+1],i,j;\n    for(i=0;i<m+1;i++)\n    {\n        arr[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        int q,num;\n        scanf(\"%d\",&q);\n        for(j=0;j<q;j++)\n        {\n            scanf(\"%d\",&num);\n            if(arr[num]!=1)\n            {\n                arr[num]=1;\n                count++;\n            }\n        }\n\n\n    }\n    if(count==m)\n    {\n        printf(\"YES\");\n    }\n    else\n    {\n        printf(\"NO\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9892802450229708, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6bc4adcd93321765de2b2165728e36bd", "bug_code_uid": "4199d8d8ff0da6974f2b62e37e6461f1", "src_uid": "d7dc61a8f3b0091320b96cedd1f4f0a7", "apr_id": "1c5f2fa335762e460c5b567696f649bd", "difficulty": 1000, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint BANDERA=0;\nint main(int args, char **argv)\n{\n    int I,J,D,CAMEL,*PTR1,*PTR2;    \n    scanf(\"%d\",&CAMEL);\n    PTR1=(int*)malloc(CAMEL*sizeof(int));\n    PTR2=(int*)malloc(CAMEL*sizeof(int));\n    for (I=0;I<CAMEL;I++)\n    {\n        I++;\n        scanf(\"%d %d\",&PTR1[I],&D);\n        PTR2[I]=PTR1[I]+D;\n        if (!BANDERA) \n        {\n            for (J=0;J<I;J++) \n            {\n                if (PTR1[I]==PTR2[J]&&PTR1[J]==PTR2[I])\n                {\n                    BANDERA=1;\n                    break;\n                }\n            }\n        }\n    }\n    printf(\"%s\\n\", BANDERA ? \"YES\" : \"NO\");\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint BANDERA=0;\nint main(int args, char **argv)\n{\n    int I,J,D,CAMEL,*PTR1,*PTR2;    \n    scanf(\"%d\",&CAMEL);\n    PTR1=(int*)malloc(CAMEL*sizeof(int));\n    PTR2=(int*)malloc(CAMEL*sizeof(int));\n    for (I=0;I<CAMEL;I++)\n    {\n        scanf(\"%d %d\",&PTR1[I],&D);\n        PTR2[I]=PTR1[I]+D;\n        if (!BANDERA) \n        {\n            for (J=0;J<I;J++) \n            {\n                if (PTR1[I]==PTR2[J]&&PTR1[J]==PTR2[I])\n                {\n                    BANDERA=1;\n                    break;\n                }\n            }\n        }\n    }\n    printf(\"%s\\n\", BANDERA ? \"YES\" : \"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.40653873489694387, "equal_cnt": 21, "replace_cnt": 12, "delete_cnt": 7, "insert_cnt": 2, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "9d0415959fecf78729b3b4e6947c0d81", "bug_code_uid": "41f626bd36e1c7f0524536bb59999909", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "537247209c03a8c2314413e86aaae4a1", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <string.h>\n\n\nint main()\n{\n    int n,i,j,flag,a,b;\n    char temp[10];\n    char term[100][10]={0};\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        a=0,b=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%s\",&term[i]);\n            if(i>0&&strcmp(term[i],term[0]==0))\n            {\n                a++;\n            }\n            else if(i>0)\n            {   flag=i;\n                b++;}\n        }\n        if(a>b)\n        printf(\"%s\\n\",term[0]);\n        else printf(\"%s\\n\",term[flag]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int i,j,n,k=0,t=0,max;\n    char name[150][20];\n    char temp[150];\n     int win[101];\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        getchar();\n    for(i=0;i<n;i++)\n    {\n     scanf(\"%s\",name[i]);\n    }\n    for(i=0;temp[i]!='\\0';i++)\n    {\n        temp[i]='0';\n    }\n\n    for(i=0;i<101;i++)\n        win[i]=0;\n    for(i=0;i<n-1;i++)\n    {\n        k=1;\n        for(j=i+1;j<n;j++)\n        {\n            if((strcmp(name[i],temp)>0||strcmp(name[i],temp)<0)&&strcmp(name[i],name[j])==0)\n            {\n                win[i]=k;\n                k++;\n                strcpy(name[j],temp);\n            }\n        }\n    }\n    max=win[0];\n    for(i=1;i<n;i++)\n    {\n        if(win[i]>max)\n        {\n            max=win[i];\n            t=i;\n        }\n\n    }\n\n\n            puts(name[t]);\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.6645865834633385, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c156413c84c9c3a139d5aebbe74386c0", "bug_code_uid": "b3361ef44f11105f81f0b4a6156d5a61", "src_uid": "80a03e6d513f4051175cd5cd1dea33b4", "apr_id": "4e094383c3d4983104392b769dae8260", "difficulty": 1100, "tags": ["dp", "binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint f(int a[],int m,int x)\n{\n\n\nif(a[m]>x)\nreturn 1;\nelse\nreturn 0;\n\n}\nint bs(int a[],int x,int n)\n{\n\nint l=0,h=n-1;\nwhile(l<h)\n{\nint m=l+(h-l)/2;\n\nif(f(a,m,x)==1)\n\nh=m;\nelse\nl=m+1;\n\n\n\n}\nif(a[n-1]==x)\nreturn l+1;\nelse return l;\n\n}\nint main()\n{int n,k,j,i;\nscanf(\"%d\",&n);\nint a[100000];\n\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\n\n}\nscanf(\"%d\",&j);\nbubbleSort(a,n);\nwhile(scanf(\"%d\",&k)!=EOF)\n{\n\nprintf(\"%d\\n\",bs(a,k,n));\n\n}\n\nreturn 0;}\nvoid bubbleSort(int arr[], int n)\n{\n   int i, j;\n   for (i = 0; i < n-1; i++)\n\n\n       for (j = 0; j < n-i-1; j++)\n           if (arr[j] > arr[j+1])\n              swap(&arr[j], &arr[j+1]);\n}\nvoid swap(int *xp, int *yp)\n{\n    int temp = *xp;\n    *xp = *yp;\n    *yp = temp;\n}\n", "fixed": "#include<stdio.h>\n\n\nint f(int a[],int m,int x)\n{\n\n\nif(a[m]>x)\nreturn 1;\nelse\nreturn 0;\n\n}\nint cmpfunc (const void * a, const void * b)\n{\n   return ( *(int*)a - *(int*)b );\n}\n\nint bs(int a[],int x,int n)\n{\n\nint l=0,h=n-1;\nwhile(l<h)\n{\nint m=l+(h-l)/2;\n\nif(f(a,m,x)==1)\n\nh=m;\nelse\nl=m+1;\n\n\n\n}\nif(x>=a[n-1])\nreturn l+1;\nelse return l;\n\n}\nint main()\n{int n,k,j,i;\nscanf(\"%d\",&n);\nint a[100000];\n\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\n\n}\nscanf(\"%d\",&j);\n qsort(a, n, sizeof(int), cmpfunc);\nwhile(j--)\n{\nscanf(\"%d\",&k);\nprintf(\"%d\\n\",bs(a,k,n));\n\n}\n\nreturn 0;}\n\n"}
{"similarity_score": 0.10231814548361311, "equal_cnt": 17, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "cdb26b25eca9d27e0358cd5ef54e7c6b", "bug_code_uid": "433f8f8d734285ce452f1fdf56949d32", "src_uid": "91c3af92731cd7d406674598c0dcbbbc", "apr_id": "f68263a3fd6b33b9473705bd9449e626", "difficulty": 1900, "tags": ["dp", "greedy", "constructive algorithms", "sortings", "data structures", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n \nint check(char a[],long n){\n\tint ktra=0;long i;\n\tif(a[0]==')'||a[n-1]=='(')return 0;\n\telse for(i=0;i<n;i++){\n\t\tif(a[i]=='(')ktra++;\n\t\telse ktra--;\n\t\tif (ktra<0)return 0;\n\t}\n\tif(ktra==0)return 1;\n\telse return 0;\n}\nlong maxx(char a[]){\n\tlong i,k,max1=0,max2,len=strlen(a);\n\tfor(i=0;i<len;i++){\n\t\tif(a[i]==')')continue;\n\t\tk=0;max2=i;\n\t\twhile(1){\n\t\t\tif(a[i]=='(')k++;\n\t\t\telse k--;\n\t\t\tif(k<0)break;\n\t\t\ti++;\n\t\t}\n\t\tmax2=i-max2;\n\t\tif(max2>max1)max1=max2;\n\t}\n\treturn max1;\n}\nint main(){\nchar s[1000001];\nlong len,i,n=0,max,m;\nscanf(\"%s\",s);\nlen=strlen(s);\nmax=maxx(s);\nif(max==0)printf(\"0 1\");\nelse{\nfor(i=0;i<=len-max;i++)if(check(s+i,max)==1)n++;\nprintf(\"%d %d\",max,n);\n}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar s[1000001];\n\tgets(s);\n\tint n = strlen(s);\n\tint i,dp[n];\n\tfor(i=0;i<n;++i)\tdp[i]=0;\n\tfor(i=1;i<n;i++) \n\t{\n\t\tif(s[i]==')')\t\t\n\t\t{\n\t\t\tif(i-dp[i-1]-1<0)\t\t\t\t\tdp[i] = 0;\n\t\t\telse if(s[i]!=s[i-dp[i-1]-1])\t\t\n\t\t\t{\n\t\t\t\tdp[i] = dp[i-1] + 2;\n\t\t\t\tif(i-dp[i-1]-2>=0)\t\t\t\tdp[i] += dp[i-dp[i-1]-2];\n\t\t\t}\n\t\t\telse\t\t\t\t\t\t\t\tdp[i] = 0;\n\t\t}\n\t}\n\tint cnt = 0;\n\tint mx = 0;\n\tfor(i=0;i<n;++i)if(mx<dp[i])mx=dp[i];\n\tfor(i=0;i<n;i++) \t\tif(dp[i] == mx)\t\tcnt++;\n\tif(mx == 0)\t\tprintf(\"0 1\");\n\telse\t\t\tprintf(\"%d %d\",mx,cnt);\n}"}
{"similarity_score": 0.9717825189263593, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8eb6b827f32e54961492b1dc650c2bf6", "bug_code_uid": "dacb41cf0d54942a7661bae26ff56333", "src_uid": "2f12b2bb23497119bb70ca0839991d68", "apr_id": "51842ec089508f71d91101428a6f33c1", "difficulty": 1300, "tags": ["binary search", "data structures", "math", "two pointers"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmpfunc(const void*a,const void *b)\r\n{\r\n\treturn (*(int*)a-*(int*)b);\r\n}\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\n\tint n,i,j,x,y,s1=0,s2=0;\r\n\tscanf(\"%d %d %d\",&n,&x,&y);\r\n\tint arr[n];\r\n\tfor(i=0;i<n;i++)\r\n\t scanf(\"%d\",arr+i);\r\n\tqsort(arr,n,sizeof(int),cmpfunc);\r\n\ti=0;\r\n\tj=n-1;\r\n\twhile(j>i)\r\n\t{\r\n\t\tint p=arr[i]+arr[j];\r\n\t\tif(p<x)\r\n\t\t{\r\n\t\t\ts1+=j-i;\r\n\t\t\ti++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t  if(p>x)\r\n\t  {\r\n\t  \tj--;\r\n\t  \tcontinue;\r\n\t  }\r\n\t}\r\n\ti=0;\r\n\tj=n-1;\r\n\twhile(j>i)\r\n\t{\r\n\t  int p=arr[i]+arr[j];\r\n\t  if(p>y)\r\n\t  {\r\n\t  \tj--;\r\n\t  \tcontinue;\r\n\t  }\r\n\t  if(p<y)\r\n\t  {\r\n\t  \ts2+=j-i;\r\n\t  \ti++;\r\n\t  \tcontinue;\r\n\t  }\r\n\t }\r\n  \r\n  printf(\"%d\\n\",s2-s1);\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef long long int lli;\r\nint cmpfunc(const void*a,const void *b)\r\n{\r\n\treturn (*(int*)a-*(int*)b);\r\n}\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\n\tint n,i,j,x,y;\r\n\tlli s1=0,s2=0;\r\n\tscanf(\"%d %d %d\",&n,&x,&y);\r\n\tint arr[n];\r\n\tfor(i=0;i<n;i++)\r\n\t scanf(\"%d\",arr+i);\r\n\tqsort(arr,n,sizeof(int),cmpfunc);\r\n\ti=0;\r\n\tj=n-1;\r\n\twhile(j>i)\r\n\t{\r\n\t\tint p=arr[i]+arr[j];\r\n\t\tif(p<x)\r\n\t\t{\r\n\t\t\ts1+=j-i;\r\n\t\t\ti++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t  if(p>=x)\r\n\t  {\r\n\t  \tj--;\r\n\t  \tcontinue;\r\n\t  }\r\n\t}\r\n\ti=0;\r\n\tj=n-1;\r\n\twhile(j>i)\r\n\t{\r\n\t  int p=arr[i]+arr[j];\r\n\t  if(p>y)\r\n\t  {\r\n\t  \tj--;\r\n\t  \tcontinue;\r\n\t  }\r\n\t  if(p<=y)\r\n\t  {\r\n\t  \ts2+=j-i;\r\n\t  \ti++;\r\n\t  \tcontinue;\r\n\t  }\r\n\t }\r\n  \r\n  printf(\"%lld\\n\",s2-s1);\r\n}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.7365208545269583, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ca62734bf66d2b7af39bf14f8757ffe1", "bug_code_uid": "899d20faabaefdbe708f2f19f259a76e", "src_uid": "4f02ac641ab112b9d6aee222e1365c09", "apr_id": "6379b92f2799067cf01849635de8de1f", "difficulty": 1000, "tags": ["data structures", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nint main(){\n\tdouble n;\n\tscanf(\"%lf\\n\",&n);\n\tint a[(int)n];\n\tfor (int i = 0; i < n; i++)\n  \t\tscanf(\"%d\", &a[i]);\n\tint d=0;\n\tqsort( a, n, sizeof(int), cmpfunc );\n\tfor (int i=1; i<n+1;i++){\n\t\tfor (int j=0; j<n;j++){\n\n\t\t\tif (a[j]>=i){\n\t\t\t\td++;\n\t\t\t\ta[j]=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/*for (int j=0;j<n;j++){\n\t\tprintf(\"%d \",a[j]);\n        }*/\n\tprintf(\"\\n\");\n\tprintf(\"%d\\n\",d);\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint cmpfunc (const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\n\nint main(){\n\tdouble n;\n\tscanf(\"%lf\\n\",&n);\n\tint a[(int)n];\n\tfor (int i = 0; i < n; i++)\n  \t\tscanf(\"%d\", &a[i]);\n\tint d=0;\n\tqsort( a, n, sizeof(int), cmpfunc );\n\tint b=1;\n\t\tfor (int j=0; j<n;j++){\n\n\t\t\tif (a[j]>=b){\n\t\t\t\tb++;\n\t\t\t\td++;\n\t\t\t}\n\t\t}\n\t/*for (int j=0;j<n;j++){\n\t\tprintf(\"%d \",a[j]);\n        }*/\n\tprintf(\"%d\\n\",d);\n}\n\n\n"}
{"similarity_score": 0.811965811965812, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "a1b8b2c78854a50f9f6e6fe08b5f7394", "bug_code_uid": "8da83a4ad5daef11147c4ad120fc262e", "src_uid": "ad242f98f1c8eb8d30789ec672fc95a0", "apr_id": "238c17c13589759785d5863cf23a19f6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long t;\r\n    scanf(\"%ld\",&t);\r\n    while(t--)\r\n    {\r\n        long n,arr[100],f=2;\r\n        for(long a=0;a<100;a++)\r\n            arr[a]=0;\r\n        scanf(\"\\n%ld\",&n);\r\n        for(long a=0;a<n;a++)\r\n        {\r\n            long temp;\r\n            scanf(\"%*c%ld\",&temp);\r\n            if(temp==0)\r\n            {\r\n                f=0;\r\n                break;\r\n            }\r\n            else\r\n                arr[temp-1]++;\r\n            if(arr[temp-1]>1)\r\n                f=1;\r\n\r\n        }\r\n        printf(\"%ld\\n\",n-1+f);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long t;\r\n    scanf(\"%ld\",&t);\r\n    while(t--)\r\n    {\r\n        long n,arr[101],f=2;\r\n        for(long a=0;a<101;a++)\r\n            arr[a]=0;\r\n        scanf(\"\\n%ld\",&n);\r\n        for(long a=0;a<n;a++)\r\n        {\r\n            long temp;\r\n            scanf(\"%*c%ld\",&temp);\r\n            if(temp==0&&f!=0)\r\n                f=0;\r\n            arr[temp]++;\r\n            if(arr[temp]>1&&f==2)\r\n                f=1;\r\n\r\n        }\r\n        if(f)\r\n            printf(\"%ld\\n\",n-1+f);\r\n        else\r\n            printf(\"%ld\\n\",n+f-arr[0]);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9973890339425587, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "bcb7b00acf94930abc92f0ce7c59e848", "bug_code_uid": "fd58c46637cf2bf28aa5f8f96776196d", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "b05553242c6ffeec8bd1d8d606a51749", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n,t,sum=1;\n\tint i=1;\n\tint a[40000];\n\tscanf(\"%d %d\",&n,&t);\n\tfor(i=1;i<n;i++){\n\t   if(i==n-1){scanf(\"%d\",&a[i]); }\n\t\telse{scanf(\"%d \",&a[i]);}\n\t}\n\ti=1;   \n    while(i!=n){\n        \n        \n        sum+=a[i];\n        \n        printf(\"%d\\n\",sum);\n        i=sum;\n        if(sum==t){printf(\"YES\\n\");return 0;}\n    }\t\t\n\t\n\t\n\tprintf(\"NO\\n\");\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n,t,sum=1;\n\tint i=1;\n\tint a[40000];\n\tscanf(\"%d %d\",&n,&t);\n\tfor(i=1;i<n;i++){\n\t   if(i==n-1){scanf(\"%d\",&a[i]); }\n\t\telse{scanf(\"%d \",&a[i]);}\n\t}\n\ti=1;   \n    while(i!=n){\n        \n        \n        sum+=a[i];\n        \n       // printf(\"%d\\n\",sum);\n        i=sum;\n        if(sum==t){printf(\"YES\\n\");return 0;}\n    }\t\t\n\t\n\t\n\tprintf(\"NO\\n\");\nreturn 0;\n}"}
{"similarity_score": 0.9689857502095558, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "027e6710a1f38050695cf6dbe39b0f77", "bug_code_uid": "9eebf5c3c2812c6c0cbc4be69248a19e", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "e6b9658178778634634a964ea44856f9", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong max(long x,long y)\n{\n    if(x>y)\n        return x;\n    return y;\n}\nint main()\n{\n    long n,i;\n    scanf(\"%ld\",&n);\n    long array[n];\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&array[i]);\n    long dp[n],equal[n];\n    dp[n-1]=array[n-1];\n    equal[n-1]=0;\n    for(i=n-2;i>=0;i--)\n    {\n        dp[i]=max(array[i],dp[i+1]);\n        if(array[i]==dp[i+1])\n            equal[i]=1;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(dp[i]!=array[i]||equal[i])\n            printf(\"%ld \",dp[i]-array[i]+1);\n        else\n            printf(\"%d \",0);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong max(long x,long y)\n{\n    if(x>y)\n        return x;\n    return y;\n}\nint main()\n{\n    long n,i;\n    scanf(\"%ld\",&n);\n    long array[n];\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&array[i]);\n    long dp[n],equal[n];\n    dp[n-1]=array[n-1];\n    equal[n-1]=0;\n    for(i=n-2;i>=0;i--)\n    {\n        dp[i]=max(array[i],dp[i+1]);\n        if(array[i]==dp[i+1])\n            equal[i]=1;\n        else\n            equal[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(dp[i]!=array[i]||equal[i])\n            printf(\"%ld \",dp[i]-array[i]+1);\n        else\n            printf(\"%d \",0);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.322180916976456, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "a516716071362c4b23d3fd4cfba17509", "bug_code_uid": "15de64719b1752429281376d493d3417", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "15b06b4252dab61ce1827a4584efb61a", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<bits/stdc++.h>\nusing namespace std ;\n\nint main()\n{\nint i,j;\nint n;\nscanf(\"%d\",&n);\nint a[n],sum[n];\n\nfor(i=0;i<n;i++)\nsum[i]=0;\n\n\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\n}\n/*\nfor(i=0;i<n;i++)\nfor(j=0;j<=i;j++)\nsum[i]+=a[j];\n*/\n\nint k;\nscanf(\"%d\",&k);\n\nwhile(k--)\n{\nint num;\nint z;\nscanf(\"%d\",&num);\n\nfor(i=0;i<n;i++)\n{\n    if(num>a[i])\n    {\n        num=num-a[i];\n    }\n\n    else\n    {\n        z=i;\n        break;\n    }\n}\n\nprintf(\"%d\\n\",z+1);\n\n\n}\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint hash[1000000]={0};\n\nint main()\n{\nint i,j,f,l=0;\nint n;\nscanf(\"%d\",&n);\nint a[n+1];\na[0]=0;\nj=0;\nfor(i=1;i<=n;i++)\n{\nscanf(\"%d\",&a[i]);\n\nfor(;j<a[i]+l;j++)\nhash[j] = i ;\n\nl=j;\n\n}\n\n\n\nint k;\nscanf(\"%d\",&k);\n\nwhile(k--)\n{\nint num;\nint z;\nscanf(\"%d\",&num);\n\n\nprintf(\"%d\\n\",hash[num-1]);\n\n\n}\n\nreturn 0;\n}\n"}
{"similarity_score": 0.7869565217391304, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "cb0c5ee1c336f4ae6b84923e6578db99", "bug_code_uid": "21a624578e3e5d645db421dc8c2896c8", "src_uid": "066906ee58af5163636dac9334619ea7", "apr_id": "0d75feefdb946cb147e9be061f11b41b", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\n \nint main() {\nint n,x,i=0,num,sum=0;\nscanf(\"%d%d\",&n,&x);\nwhile(i < n) {\nscanf(\"%d\",&num);\nsum=sum+num;\ni++;\n}\nif(abs(sum) > x)\nprintf(\"%d\",(abs(sum)/x)+1);\nelse\nprintf(\"1\");\n \nreturn 0;\n}", "fixed": " #include<stdio.h>\n#include <stdlib.h>\n#include <math.h>\n \nint main() {\nint n,x,i=0,num,sum=0;float p;\nscanf(\"%d%d\",&n,&x);\nwhile(i < n) {\nscanf(\"%d\",&num);\nsum=sum+num;\ni++;\n}\np=(float)abs(sum)/x;\nprintf(\"%.0f\",ceil(p));\nreturn 0;\n}"}
{"similarity_score": 0.7878787878787878, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "55ade6d25e7c02074548be6a5eb8c83a", "bug_code_uid": "9d298743001956844e408dbdd36a2661", "src_uid": "fa253aabcccd487d09142ea882abbc1b", "apr_id": "9cff4e255f333fb77a73c2f0e4bd7f62", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint t,l,n;\nscanf(\"%d\",&t);\nfor(int i=1;i<=t;i++){\nscanf(\"%d%d\",&l,&n);\nint j=0;\nwhile(j<l){\nint c=97;\nfor(int k=1;k<=n;k++){\nprintf(\"%c\",c);\nc++;\n}\nj=j+n;\nif((l-j)<n)\nn = l-j;\n}\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint t,i,l,n;\nscanf(\"%d\",&t);\nfor(int i=1;i<=t;i++){\nscanf(\"%d%d\",&l,&n);\nint b=0;\nwhile(b<l){\nint a=97;\nfor(int k=1;k<=n;k++){\nprintf(\"%c\",a);\na++;\n}\nb=b+n;\nif((l-b)<n)\n    n=l-b;\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.9932432432432432, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "527567b5565932e4035eb5875425e7a1", "bug_code_uid": "3aa09727ffb82a0848e4a43f91b78ff5", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "faf02aa5dfd1b6a7818b0593f3bb8177", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a[1001], b[1001] = {0};\n    int  i, n;\n    scanf(\"%d\", &n);\n\n    a[0] = a[1] = 1;\n    b[1] = 1;\n\n    for(i = 2; i <= n; i++)\n    {\n        a[i] = a[i-1] + a[i-2];\n        b[a[i]] = 1;\n        if(a[i] > n)\n            break;\n        //printf(\"%d \", a[i]);\n    }\n\n    for(i=1; i <= n; i++)\n    {\n        if(b[i] == 1)\n            printf(\"O\");\n        else\n            printf(\"o\");\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int a[10000], b[10000] = {0};\n    int  i, n;\n    scanf(\"%d\", &n);\n\n    a[0] = a[1] = 1;\n    b[1] = 1;\n\n    for(i = 2; i <= n; i++)\n    {\n        a[i] = a[i-1] + a[i-2];\n        b[a[i]] = 1;\n        if(a[i] > n)\n            break;\n        //printf(\"%d \", a[i]);\n    }\n\n    for(i=1; i <= n; i++)\n    {\n        if(b[i] == 1)\n            printf(\"O\");\n        else\n            printf(\"o\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9899543378995433, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4614dafe4a59025759af7563d7ef21cb", "bug_code_uid": "3b6c60bfe14e05a6a6ebc66b212b8b8b", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "258a60fb6e7f9ebb43aab42dc2f3135c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nstruct code{\n    char b[100];\n};\nint main(){\n\n\n   int t;\n   scanf(\"%d\\n\",&t);\n  struct code codes[t];\n\nfor(int i = 0;i<t;++i){\n    \n    scanf(\"%s\",codes[i].b);  \n}\n\nfor(int i = 0;i<t;++i){\n   \n    \n    int len = strlen(codes[i].b);\n    \n\n    if(len ==2 ){\n        printf(\"%s\\n\",codes[i].b);\n    }\n\n    else if(len>2)\n    {\n        \n        for(int j = 0;j<len;j+=2){\n            printf(\"%c\",codes[i].b[j]);\n        }printf(\"%c\",codes[i].b[len-1]);\n        \n    \n    \n   printf(\"\\n\"); \n    }\n\n}\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nstruct code{\n    char b[101];\n};\nint main(){\n\n\n   int t;\n   scanf(\"%d\\n\",&t);\n  struct code codes[t];\n\nfor(int i = 0;i<t;++i){\n    \n    scanf(\"%s\",codes[i].b);  \n}\n\nfor(int i = 0;i<t;++i){\n   \n    \n    int len = strlen(codes[i].b);\n    \n\n    if(len ==2 ){\n        printf(\"%s\\n\",codes[i].b);\n    }\n\n    else if(len>2)\n    {\n        \n        for(int j = 0;j<len;j+=2){\n            printf(\"%c\",codes[i].b[j]);\n        }\n        printf(\"%c\",codes[i].b[len-1]);\n        \n    \n    \n   printf(\"\\n\"); \n    }\n\n}\n\nreturn 0;\n}"}
{"similarity_score": 0.922077922077922, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1a384312203ccfda2e43b74dae7066f4", "bug_code_uid": "3d16e0a461a3638f7e5b855792d485dd", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "d0b5e9f053870cdb42ff981fb9190818", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nchar s[123456];\nint cnt[1234567];\nint main(){\n\n\tscanf(\"%s\", s );\n\n\tint len = strlen(s);\n\tfor(int i = 0; i < len - 1 ;i++){\n\t\tif(s[i] == s[i + 1]){\n\t\t\tcnt [i + 1] = cnt [i] + 1; \n\t\t}\n\t\telse{\n\t\t\tcnt [i + 1] = cnt [i];\n\t\t}\n\t}\n\tcnt[len] = cnt[len - 1];\n\n\tfor(int i = 0; i <=len ; i++){\n\t\tprintf(\"%d \", cnt[i]);\n\t}\n\tputs(\"\");\n\n\tint m; \n\tscanf(\"%d\", &m);\n\n\twhile(m--){\n\t\tint l,r;\n\t\tscanf(\"%d%d\" , &l, &r);\n\t\tprintf(\"%d\\n\", cnt[r-1] - cnt[l-1] );\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nchar s[123456];\nint cnt[1234567];\nint main(){\n\n\tscanf(\"%s\", s );\n\n\tint len = strlen(s);\n\tfor(int i = 0; i < len - 1 ;i++){\n\t\tif(s[i] == s[i + 1]){\n\t\t\tcnt [i + 1] = cnt [i] + 1; \n\t\t}\n\t\telse{\n\t\t\tcnt [i + 1] = cnt [i];\n\t\t}\n\t}\n\tcnt[len] = cnt[len - 1];\n\n\tint m; \n\tscanf(\"%d\", &m);\n\n\twhile(m--){\n\t\tint l,r;\n\t\tscanf(\"%d%d\" , &l, &r);\n\t\tprintf(\"%d\\n\", cnt[r-1] - cnt[l-1] );\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.31565160445317614, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "f91fba7c4bf41163b3fa10a1489246fe", "bug_code_uid": "8c226f1be4c4f4e553a2bbc3db1e979d", "src_uid": "f00eb0452f5933103f1f77ef06473c6a", "apr_id": "c9da9eedd5fa5f5ffe9fa44869630da0", "difficulty": 1300, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n//long long int size=1e9+1;\n\nint is_prime(int n)\n{\n    int i,root;\n    if(n==2)return 1;\n    if(n%2==0)return 0;\n    root=sqrt(n);\n    for(i=3;i<=root;i=i+2){\n        if(n%i==0)return 0;\n    }\n    return 1;\n}\nint main()\n{\n    long long int i,j,m,n,a,b,t,k;\n    scanf(\"%lld\", &t);\n    for(i=0;i<t;i++){\n        scanf(\"%lld%lld\", &n,&k);\n        if(n<=k)printf(\"1\\n\");\n        else{\n            if(1==is_prime(n))printf(\"%lld\\n\", n);\n            else{\n                for(m=k;m>=1;m--){\n                    if(n%m==0){\n                        printf(\"%lld\\n\", n/m);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n\nint main()\n{\n   // sieve();\n    long long int i,j,m,n,a,b,t,k,ans;\n    scanf(\"%lld\", &t);\n    for(i=0;i<t;i++){\n        scanf(\"%lld%lld\", &n,&k);\n        ans=n;\n        int det=0;\n        if(n<=k)printf(\"1\\n\", n);\n        else if(k==1)printf(\"%lld\\n\", n);\n        else{\n            for(j=2;j*j<=n;j++){\n                if(n%j==0&&j<=k){\n                    ans=j;\n                    //break;\n                    if(n/ans<=k){\n                        det=1;\n                        break;\n                    }\n                    if(n/ans>k)ans=n/ans;\n                }\n                //if(det==1)break;\n            }\n            if(det==1)printf(\"%lld\\n\", ans);\n            else printf(\"%lld\\n\", ans);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8702290076335878, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "94f34dd776bc1d3912507161c428e662", "bug_code_uid": "a505a532825912d8a5376bc94e6a28cb", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "f7806f4aafef0aea08eae4c7f32f2931", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint c1 = 0;\n\tint c2 = 0;\n\tint i, j, num;\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &num);\n\t\tif(num == 5)\n\t\t\tc1++;\n\t\telse\n\t\t\tc2++;\n\t}\n\tif(c1/9==0)\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tfor(i=0; i*9<c1; i++)\n\t{\n\t\tfor(j=0; j<9; j++)\n\t\t\tprintf(\"5\");\n\t}\n\tfor(i=0; i<c2; i++)\n\t\tprintf(\"0\");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint c1 = 0;\n\tint c2 = 0;\n\tint i, j, num;\n\tfor(i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d\", &num);\n\t\tif(num == 5)\n\t\t\tc1++;\n\t\telse\n\t\t\tc2++;\n\t}\n\tif(c2 == 0)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tif(c1<9 && c2!= 0)\n\t{\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t\n\t}\n\tfor(i=1; i*9<=c1; i++)\n\t{\n\t\tfor(j=0; j<9; j++)\n\t\t\tprintf(\"5\");\n\t}\n\tfor(i=0; i<c2; i++)\n\t\tprintf(\"0\");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9938144329896907, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a5bebe1a656f8efc3cf9451feabc60c4", "bug_code_uid": "d2be9035c1cb91845466d15943141ec3", "src_uid": "67cf9f83ed791a614bd01c5e0310813f", "apr_id": "148cf344e96f21dff5a561b0f3ed79be", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n//int s=0;\n\nint main()\n{int x=0;\n\tint a[1000],b;\n\tscanf(\"%d\",&b);\n\tfor(int i=0;i<b;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<b-1;i++)\n\t\tif((a[i]>=a[i-1] && a[i+1]<=a[i]) ||(a[i]<a[i-1] && a[i+1]>a[i]))\n\tx++;\n\tprintf(\"%d\",x);\n}\n", "fixed": "#include<stdio.h>\n//int s=0;\n\nint main()\n{int x=0;\n\tint a[1000],b;\n\tscanf(\"%d\",&b);\n\tfor(int i=0;i<b;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<b-1;i++)\n\t\tif((a[i]>a[i-1] && a[i+1]<a[i]) || (a[i]<a[i-1] && a[i+1]>a[i]))\n\tx++;\n\tprintf(\"%d\",x);\n}\n"}
{"similarity_score": 0.959349593495935, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "03365af2357668641a0c44ea85307cf8", "bug_code_uid": "611e0c66cb684d7bf173f1f51949da88", "src_uid": "ed449ba7c453a43e2ac5904dc0174530", "apr_id": "c2d0ea18eedbf81581d00bdd4b893b57", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nconst int M = 102;\n\nint cm(const void *a, const void *b){ return (int *)a -(int *)b;}\n\nint main(){\n    int i,n,t;\n    scanf(\"%i\",&t);\n    while(t--){\n    int a[M],ans=1;\n    scanf(\"%i\",&n);\n    for(i = 0; i < n; ++i)\n        scanf(\"%i\",a+i);\n    \n    qsort(a,n,sizeof a[0],cm);\n\n    for(i = 0; (i < n-1) && ans == 1 ; ++i)\n        if(a[i+1]-a[i]>1)\n            ans = 0;\n    \n    if(ans) printf(\"YES\\n\"); else printf(\"NO\\n\");\n    }\n    return 0-0-0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nconst int M = 102;\n\nint cm(const void *a, const void *b){ return *(int *)a -*(int *)b;}\n\nint main(){\n    int i,n,t;\n    scanf(\"%i\",&t);\n    while(t--){\n    int a[M],ans=1;\n    scanf(\"%i\",&n);\n    for(i = 0; i < n; ++i)\n        scanf(\"%i\",a+i);\n    \n    qsort(a,n,sizeof a[0],cm);\n\n    for(i = 0; (i < n-1) && (ans == 1) ; ++i)\n        if(a[i+1]-a[i]>1)\n            ans = 0;\n    \n    if(ans) printf(\"YES\\n\"); else printf(\"NO\\n\");\n    }\n    return 0-0-0;\n}"}
{"similarity_score": 0.746941403734707, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0b86b0dee9729a7eed44fdafa5c17430", "bug_code_uid": "3a16a7eff0b143500e330356c8e8f647", "src_uid": "357dcc8fb7783d878cd2c4ed34eb437e", "apr_id": "7d5cf76fb6f054921ae1529c49e4226a", "difficulty": 1000, "tags": ["brute force", "dp", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        char str[105];\r\n        int j,flag1=-1,flag2=-1,var1=0,var2=0;\r\n        scanf(\"%s\",str);\r\n        int len=strlen(str);\r\n        for(j=0;j<len-1;j++)\r\n        {\r\n            if(flag1==-1 && str[j]=='0' && str[j+1]=='0')\r\n            {\r\n                flag1=1;\r\n                var1=j;\r\n            }\r\n            if(flag2==-1 && str[j]=='1' && str[j+1]=='1')\r\n            {\r\n                flag2=1;\r\n                var2=j;\r\n            }\r\n        }\r\n        if(flag1!=-1 && flag2!=-1 && var1>var2)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        char str[105];\r\n        int j,flag1=-1,flag2=-1,var1=0,var2=0;\r\n        scanf(\"%s\",str);\r\n        int len=strlen(str);\r\n        for(j=0;j<len-1;j++)\r\n        {\r\n            if(str[j]=='1' && str[j+1]=='1')\r\n            {\r\n                flag1=1;\r\n                var1=j;\r\n            }\r\n            if(flag1==1 && str[j]=='0' && str[j+1]=='0')\r\n            {\r\n                flag2=1;\r\n                break;//var2=j;\r\n            }\r\n        }\r\n        if(flag1==1 && flag2==1)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.923226433430515, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f6df73fd00236401de47e28d9fe47662", "bug_code_uid": "a01970577a1ae2e19ce22d29c605aaa7", "src_uid": "3d6cd0a82513bc2119c9af3d1243846f", "apr_id": "41e3d086b814e81887584b894e2e8d5d", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n\tint num, group ,cnt[26];\n\tchar s[1000];\t\n\tscanf(\"%d\", &num);\n\tfor(int i = 0; i < num; i ++){\n\t\tscanf(\"%d\", &group);\n\t\tfor(int j = 0; j < group; j ++){\n\t\t\tscanf(\"%s\", s);\n\t\t\tfor(int k = 0; k < strlen(s); k ++)\n\t\t\t\tcnt[(int)(s[k] - 'a')] ++;\n\t\t}\n\t\tfor(int j = 0; j < 26; j ++){\n\t\t\tif(cnt[j] % group != 0){\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(j == 25 && cnt[j] % group == 0)\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\tcnt[j] = 0;\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(){\n\tint num, group ,cnt[26] = {};\n\tchar s[1000];\t\n\tscanf(\"%d\", &num);\n\tfor(int i = 0; i < num; i ++){\n\t\tscanf(\"%d\", &group);\n\t\tfor(int j = 0; j < group; j ++){\n\t\t\tscanf(\"%s\", s);\n\t\t\tfor(int k = 0; k < strlen(s); k ++)\n\t\t\t\tcnt[s[k] - 'a'] ++;\n\t\t}\n\t\tfor(int j = 0; j < 26; j ++){\n\t\t\tif(cnt[j] % group != 0){\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(j == 25 && cnt[j] % group == 0)\n\t\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\tfor(int j = 0; j < 26; j ++)\n\t\t\tcnt[j] = 0;\n\t}\n}"}
{"similarity_score": 0.9218390804597701, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d9640156bf43328d8dd5c0e9ec84c603", "bug_code_uid": "4234888ae150cac2f10be009ccbc57e3", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "069a60a520bc9b4e67d742c7297721fe", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main() {\n    char s1[200001];\n    char s2[200001];\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    //printf(\"%s^^^^%s\",s1,s2);\n    int a,b,count=0,i;\n    a=strlen(s1);\n    b=strlen(s2);\n    int min=b;\n    if(a<b)\n    {\n        min=a;\n    }\n    for(i=0;i<min;i++)\n    {\n        if(a>b)\n        {\n        //printf(\"%c^^^^%c^^^^\\n\",s1[(a+b-min)-1-i],s2[min-1-i]);\n            if(s1[(a+b-min)-1-i]==s2[min-1-i])\n            {\n                count++;\n            }\n        }\n        else\n        {\n            //printf(\"%c^^^^%c^^^^\\n\",s2[(a+b-min)-1-i],s1[min-1-i]);\n            if(s1[min-1-i]==s2[a+b-min-1-i])\n            {\n                count++;\n            }\n        }\n    }\n    //printf(\"%d^^^\",count);\n    printf(\"%d\\n\",a+b-count-count);\n\t//code\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main() {\n    char s1[200001];\n    char s2[200001];\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    //printf(\"%s^^^^%s\",s1,s2);\n    int a,b,count=0,i;\n    a=strlen(s1);\n    b=strlen(s2);\n    int min=b;\n    if(a<b)\n    {\n        min=a;\n    }\n    for(i=0;i<min;i++)\n    {\n        if(a>b)\n        {\n        //printf(\"%c^^^^%c^^^^\\n\",s1[(a+b-min)-1-i],s2[min-1-i]);\n            if(s1[(a+b-min)-1-i]==s2[min-1-i])\n            {\n                count++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        else\n        {\n            //printf(\"%c^^^^%c^^^^\\n\",s2[(a+b-min)-1-i],s1[min-1-i]);\n            if(s1[min-1-i]==s2[a+b-min-1-i])\n            {\n                count++;\n            }\n            else\n            {\n                break;\n            }\n        }\n    }\n   // printf(\"%d^^^\",count);\n    printf(\"%d\\n\",a+b-count-count);\n\t//code\n\treturn 0;\n}"}
{"similarity_score": 0.9828660436137072, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6045967b437fc5464aa4ee2240c2c07d", "bug_code_uid": "562e08e3acbbb7f2d11c4a16cd39e3f8", "src_uid": "d9bd63e03bf51ed87ba73cd15e8ce58d", "apr_id": "575b5c0d5f0c77729e649b36ffbb41de", "difficulty": 1500, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint pn, w;\n\tscanf(\"%d %d\", &pn, &w);\n\tint t[2002];\n\tdouble input;\n\tfor(int i = 0 ; i < pn ; i++){\n\t\tscanf(\"%lf\", &input);\n\t\tt[i*2] = input;\n\t}\n\tfor(int i = 0 ; i < pn ; i++){\n\t\tscanf(\"%lf\", &input);\n\t\tif(i==0){\n\t\t\tt[2*pn-1] = input;\n\t\t\tcontinue;\n\t\t}\n\t\tt[2*i-1] = input;\n\t}\n\t\n\n/* n(i+1) = n(i) - (n(i)+w) / t[i];\n * n(i+1) + (w / t[i]) = (1-1/t[i])n(i);\n */\n\t\n\tfloat base = 0.f;\n\tfor(int t_idx = 2 * pn - 1; t_idx >= 0 ; t_idx--){\n\t\tif(t[t_idx] == 1){\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn(0);\n\t\t}\n\t\tfloat value = (base + ((double)w / t[t_idx])) / (1.f - (1.f / t[t_idx]));\n\t\tbase = value;\n\t}\n\n\tprintf(\"%f\\n\", base);\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\tint pn, w;\n\tscanf(\"%d %d\", &pn, &w);\n\tint t[2002];\n\tdouble input;\n\tfor(int i = 0 ; i < pn ; i++){\n\t\tscanf(\"%lf\", &input);\n\t\tt[i*2] = input;\n\t}\n\tfor(int i = 0 ; i < pn ; i++){\n\t\tscanf(\"%lf\", &input);\n\t\tif(i==0){\n\t\t\tt[2*pn-1] = input;\n\t\t\tcontinue;\n\t\t}\n\t\tt[2*i-1] = input;\n\t}\n\t\n\n/* n(i+1) = n(i) - (n(i)+w) / t[i];\n * n(i+1) + (w / t[i]) = (1-1/t[i])n(i);\n */\n\t\n\tdouble base = 0.f;\n\tfor(int t_idx = 2 * pn - 1; t_idx >= 0 ; t_idx--){\n\t\tif(t[t_idx] == 1){\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn(0);\n\t\t}\n\t\tdouble value = (base + ((double)w / t[t_idx])) / (1.f - (1.f / t[t_idx]));\n\t\tbase = value;\n\t}\n\n\tprintf(\"%f\\n\", base);\n}\n"}
{"similarity_score": 0.1893939393939394, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "a57511fe558597802be93cc91c167250", "bug_code_uid": "912eb46dd317822cb5e59d8ef9203366", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "45be402d5575cbb7f3587d08c669151f", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\t__int64 s=0,y=0,x=0,n,t,i,j,a[120],total;\n\tscanf(\"%I64d\",&t);\n\tfor(j=1;j<=t;j++)\n\t{\n\t\tscanf(\"%I64d\",&n);\n\t\tfor(i=1;n>=1&&n<=1e9;n--,i++)\n\t\t{\n\t\t\tx=x+i;\n\t\t}\n\t\tfor(y=0;pow(2,y)<=n;y++)\n\t\t{\n\t\t\ts=pow(2,y)+s;\n\t\t}\n\t\ttotal=x-2*s;\n\t\ta[j]=total;\n\t}\n\tprintf(\"%I64d\\n\",a[j]);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint w[50000],k=0,i,t;\n\t__int64 n,sum; \n    for(i=1;i<=1000000000;i*=2)\n    {        \n\t\tw[k++]=i;\n    }    \n    scanf(\"%d\",&t);\n    while(t--) \n\t{       \n\t\tscanf(\"%d\",&n);\n        if(n%2==0)\n            sum=n/2*(n+1);\n        else            \n\t\t\tsum=(n+1)/2*n;\n        i=0;\n        while(w[i]<=n)\n        {            \n\t\t\tsum-=2*w[i];\n            i++;\n        }        \n\t\tprintf(\"%I64d\\n\",sum);\n    }    \n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9102880658436214, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "bac6a9b1737ae7cb7361a7a136d9e415", "bug_code_uid": "9df22bdb65ba380aa89e66766a20b9fb", "src_uid": "b01602b51b9103c0f31c3f50b32aa88d", "apr_id": "4885885cb22bfcb3fa9623c148491098", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int A[100001];\n    int n, s, t;\n    int i, cou, value;\n\n    scanf(\"%d%d%d\", &n, &s, &t);\n\n    if (s == t)\n    {\n        printf(\"0\");\n        return 0;\n    }\n\n    for (i = 1; i<= n; i++)\n    {\n        scanf(\"%d\", &value);\n        A[value] = i;\n    }\n\n    cou = 1;\n\n    while (1)\n    {\n        if (A[t] == s)\n        {\n            printf(\"%d\", cou);\n            return 0;\n        }\n        if (A[t] == t)\n        {\n            printf(\"-1\");\n            return 0;\n        }\n        t = A[t];\n        cou++;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int A[100001];\n    int n, s, t;\n    int i, cou, value;\n\n    scanf(\"%d%d%d\", &n, &s, &t);\n\n    if (s == t)\n    {\n        printf(\"0\");\n        return 0;\n    }\n\n    for (i = 1; i<= n; i++)\n    {\n        scanf(\"%d\", &value);\n        A[value] = i;\n    }\n\n    cou = 1;\n\n    while (1)\n    {\n        if (A[t] == s)\n        {\n            printf(\"%d\", cou);\n            return 0;\n        }\n        if (A[t] == t)\n        {\n            printf(\"-1\");\n            return 0;\n        }\n        t = A[t];\n        cou++;\n        if (cou > n)\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9924453280318092, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b8f38b4ebdae7feedbcbab8680c51ee7", "bug_code_uid": "8a84ea6680e508b67220a130b575fff6", "src_uid": "3060ecad253a2b4d4fac39e91fcd6c95", "apr_id": "a63bc8a3724fcd6b25c575ec32b69dcc", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tchar str[1002];\n\tchar temp[1001];\n\tscanf(\"%s\",str);\n\tint i=0,digit,flag=0,j=0,carry=0;\n\twhile(i<strlen(str))\n\t{\n\t\tif(str[i]=='.')\n\t\t\tbreak;\n\t\telse if(str[i+1]!='.')\n//\t\t\tprintf(\"%c\",str[i]);\n\t\t\ttemp[i]=str[i];\n\t\telse if(str[i+1]=='.')\n\t\t{\n\t\t\tif(str[i]=='9' && str[i+2]>='5')\n//\t\t\t\tprintf(\"GOTO Vasilisa\\n\");\n\t\t\t\tflag=1;\n\t\t\telse if(str[i+2]<'5')\n\t\t\t{\t\n//\t\t\t\tprintf(\"entered 2nd case\\n\");\n//\t\t\t\tprintf(\"%c\\n\",str[i]);\n\t\t\t\ttemp[i]=str[i];\n\t\t\t}\n\t\t\telse if(str[i+2]>='5')\n\t\t\t{\t\n//\t\t\t\tif(str[i]<'9')\n//\t\t\t\t{\n\t\t\t\t\tdigit=str[i]-'0';\n\t\t\t\t\tdigit++;\n//\t\t\t\tprintf(\"entered 3rd case\\n\");\n//\t\t\t\tprintf(\"%c\\n\",digit+'0');\n\t\t\t\t\ttemp[i]=digit+'0';\n//\t\t\t\t}\n/*\t\t\t\telse if(str[i]=='9')\n\t\t\t\t{\n\t\t\t\t\ttemp[i]='0';\n\t\t\t\t\tj=i-1;\n\t\t\t\t\tcarry=1;\n\t\t\t\t\twhile(j>=0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdigit=str[j]-'0';\n\t\t\t\t\t\tdigit+=carry;\n\t\t\t\t\t\ttemp[j]=digit%10+'0';\n\t\t\t\t\t\tcarry=digit/10;\n\t\t\t\t\t\tif(carry==0)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n//\tfor(j=0;j<i;j++)\n//\t\tprintf(\"%c\",temp[j]);\n//\tprintf(\"\\n\");\n\tif(flag==1)\n\t\tprintf(\"GOTO Vasilisa.\\n\");\n\telse\n\t{\n//\t\tif(carry!=0)\n//\t\t\tprintf(\"%c\",carry+'0');\n\t\tj=0;\n//\t\tprintf(\"before while\\n\");\n\t\twhile(j<i)\n\t\t{\t\n\t\t\tprintf(\"%c\",temp[j]);\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tchar str[1002];\n\tchar temp[1002];\n\tscanf(\"%s\",str);\n\tint i=0,digit,flag=0,j=0,carry=0;\n\twhile(i<strlen(str))\n\t{\n\t\tif(str[i]=='.')\n\t\t\tbreak;\n\t\telse if(str[i+1]!='.')\n//\t\t\tprintf(\"%c\",str[i]);\n\t\t\ttemp[i]=str[i];\n\t\telse if(str[i+1]=='.')\n\t\t{\n\t\t\tif(str[i]=='9')\n//\t\t\t\tprintf(\"GOTO Vasilisa\\n\");\n\t\t\t\tflag=1;\n\t\t\telse if(str[i+2]<'5')\n\t\t\t{\t\n//\t\t\t\tprintf(\"entered 2nd case\\n\");\n//\t\t\t\tprintf(\"%c\\n\",str[i]);\n\t\t\t\ttemp[i]=str[i];\n\t\t\t}\n\t\t\telse if(str[i+2]>='5')\n\t\t\t{\t\n//\t\t\t\tif(str[i]<'9')\n//\t\t\t\t{\n\t\t\t\t\tdigit=str[i]-'0';\n\t\t\t\t\tdigit++;\n//\t\t\t\tprintf(\"entered 3rd case\\n\");\n//\t\t\t\tprintf(\"%c\\n\",digit+'0');\n\t\t\t\t\ttemp[i]=digit+'0';\n//\t\t\t\t}\n/*\t\t\t\telse if(str[i]=='9')\n\t\t\t\t{\n\t\t\t\t\ttemp[i]='0';\n\t\t\t\t\tj=i-1;\n\t\t\t\t\tcarry=1;\n\t\t\t\t\twhile(j>=0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdigit=str[j]-'0';\n\t\t\t\t\t\tdigit+=carry;\n\t\t\t\t\t\ttemp[j]=digit%10+'0';\n\t\t\t\t\t\tcarry=digit/10;\n\t\t\t\t\t\tif(carry==0)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n//\tfor(j=0;j<i;j++)\n//\t\tprintf(\"%c\",temp[j]);\n//\tprintf(\"\\n\");\n\tif(flag==1)\n\t\tprintf(\"GOTO Vasilisa.\\n\");\n\telse\n\t{\n//\t\tif(carry!=0)\n//\t\t\tprintf(\"%c\",carry+'0');\n\t\tj=0;\n//\t\tprintf(\"before while\\n\");\n\t\twhile(j<i)\n\t\t{\t\n\t\t\tprintf(\"%c\",temp[j]);\n\t\t\tj++;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9976415094339622, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "bf496c87bc5edd37bc17dec6923c203b", "bug_code_uid": "89079f5af40df1b87c4abadd620edd96", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "eb69b34f347496158799014d08451a7d", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar Rax[1000],Rbx[1000];\nint ps(long long n){\n    long long i;\n    for (i=0;i<=n/2;i++){\n        if (i*i==n)\n            return 1;\n    }\n    return 0;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    long long max=-10000000,a;\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a);\n        if ((a>max)&&(ps(a)==0))\n            max=a;\n    }\n    printf(\"%I64d\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nchar Rax[1000],Rbx[1000];\nint ps(long long n){\n    long long i;\n    for (i=0;i<=n;i++){\n        if (i*i==n)\n            return 1;\n    }\n    return 0;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int i;\n    long long max=-10000000,a;\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a);\n        if ((a>max)&&(ps(a)==0))\n            max=a;\n    }\n    printf(\"%I64d\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9675572519083969, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1de024a19c234124a19aa77b416eabcc", "bug_code_uid": "05780e3f7bcdf8e9f68a0503c41c3799", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "dbc32ebba8c69fe724f89b71d76c5552", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\n#define SC1(x)        scanf(\"%d\",&x)\n#define SCS(x)          scanf(\"%s\",x)\n#define PF1(x)          printf(\"%d\\n\",x)\n#define REP(i,n)        for(i=0;i<(n);i++)\n#define FOR(i,a,b)      for(i=(a);i<=(b);i++)\n#define FOR2(i,a,b)      for(i=(a);i<=(b);i=i+2)\n\n\nint main(){\nint i,cmpt=0,n;SC1(n);\nchar s[100001];\nSCS(s);\nFOR2(i,0,n-1){\nif(s[i] == 'a' && s[i+1] = 'a') {cmpt++;s[i] = 'b';}\nif(s[i] == 'b' && s[i+1] == 'b') {cmpt++;s[i] = 'a';}\n\n}\n\nPF1(cmpt);\nprintf(\"%s\", s);\n\n\n\nreturn 0;\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\n#define SC1(x)        scanf(\"%d\",&x)\n#define SCS(x)          scanf(\"%s\",x)\n#define PF1(x)          printf(\"%d\\n\",x)\n#define REP(i,n)        for(i=0;i<(n);i++)\n#define FOR(i,a,b)      for(i=(a);i<=(b);i++)\n#define FOR2(i,a,b)      for(i=(a);i<=(b);i=i+2)\n\n\nint main(){\nint i,cmpt=0,n;SC1(n);\nchar s[n];SCS(s);\nFOR2(i,0,n-1){\n\nif( s[i] == 'a' && s[i+1] == 'a') {cmpt++;s[i] = 'b';}\nelse if( s[i] == 'b' && s[i+1] == 'b') {cmpt++;s[i] = 'a';}\n\n}\nPF1(cmpt);\nprintf(\"%s\", s);\n\n\n\nreturn 0;\n}"}
{"similarity_score": 0.9934711643090316, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "58b7d9a16b82309c47071dfdcb4a06b6", "bug_code_uid": "fda55f8a52d3b179beb067093882ff1b", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "49f72e72e79e987aee6bec94c32b0f9f", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n , q;\r\n    scanf(\"%d%d\",&n , &q);\r\n    int Array[n];\r\n    int zero=0 , ones=0;;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&Array[i]);\r\n        if(Array[i]==0)\r\n        zero++;\r\n        else\r\n        ones++;\r\n    }\r\n\r\n    int query[2][n];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d%d\",&query[0][i],&query[1][i]);\r\n       \r\n    }\r\n     for(int i=0;i<n;i++)\r\n    {\r\n        if(query[0][i]==1)\r\n        {\r\n            if(Array[query[1][i]-1]==1)\r\n            {\r\n                ones--;\r\n                zero++;\r\n                Array[query[1][i]-1]=0;\r\n            }\r\n            else\r\n            {\r\n                zero--;\r\n                ones++;\r\n                Array[query[1][i]-1]=1;\r\n            }\r\n        }\r\n        else{\r\n            if(query[1][i]<=ones)\r\n            printf(\"1\\n\");\r\n            else \r\n            printf(\"0\\n\");\r\n        }\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n , q;\r\n    scanf(\"%d%d\",&n , &q);\r\n    int Array[n];\r\n    int zero=0 , ones=0;;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&Array[i]);\r\n        if(Array[i]==0)\r\n        zero++;\r\n        else\r\n        ones++;\r\n    }\r\n\r\n    int query[2][q];\r\n    for(int i=0;i<q;i++)\r\n    {\r\n        scanf(\"%d%d\",&query[0][i],&query[1][i]);\r\n       }\r\n     for(int i=0;i<q;i++)\r\n    {\r\n        if(query[0][i]==1)\r\n        {\r\n            if(Array[query[1][i]-1]==1)\r\n            {\r\n                ones--;\r\n                zero++;\r\n                Array[query[1][i]-1]=0;\r\n            }\r\n            else\r\n            {\r\n                zero--;\r\n                ones++;\r\n                Array[query[1][i]-1]=1;\r\n            }\r\n        }\r\n        else{\r\n            if(query[1][i]<=ones)\r\n            printf(\"1\\n\");\r\n            else \r\n            printf(\"0\\n\");\r\n        }\r\n    }\r\n}"}
{"similarity_score": 0.7080366225839267, "equal_cnt": 15, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "25676ec2f14bb9438dc873a774b1f841", "bug_code_uid": "f891aa016ed3eeef95ae62399c140580", "src_uid": "6eb60f09a7cfcb52c86d154635c655ca", "apr_id": "60520203631b3945f6b5a3c5664f1c85", "difficulty": 1500, "tags": ["sortings", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n, m;\nint a[2010], b[2010], t[2010];\n\nint min(int a, int b) {\n    return (a < b ? a : b);\n}\n\nvoid swap(int *a, int *b) {\n    int t;\n    t = *a; *a = *b; *b = t;\n}\n\nvoid bs(int *a, int n) {\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[i] > a[j]) swap(&a[i], &a[j]);\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &b[i]);\n    bs(b, n);\n    int res = (int) 2e9;\n    for (int i = 0; i < n; i++) {\n        int x = (b[0] + m - a[i]) % m;\n        int ok = 1;\n        for (int j = 0; j < n; j++) {\n            t[j] = (a[j] + x) % m;\n        }\n        bs(t, n);\n        for (int j = 0; j < n; j++) {\n            if (t[j] != b[j]) {\n                ok = 0; break;\n            }\n        }\n        if (ok) res = min(res, x);\n    }\n    printf(\"%d\\n\", res);\n}", "fixed": "#include <stdio.h>\n\nint n, m;\nint a[2010], b[2010], t[2010];\n\nint min(int a, int b) {\n    return (a < b ? a : b);\n}\n\nvoid swap(int *a, int *b) {\n    int t;\n    t = *a; *a = *b; *b = t;\n}\n\nvoid qs(int *a, int l, int r) {\n    int piv = a[l + (r - l) / 2];\n    int i = l, j = r;\n    while (i <= j) {\n        while (a[i] < piv) i++;\n        while (a[j] > piv) j--;\n        if (i <= j) {\n            swap(&a[i], &a[j]);\n            i++; j--;\n        }\n    }\n    if (i <= r) qs(a, i, r);\n    if (l <= j) qs(a, l, j);\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &b[i]);\n    qs(b, 0, n - 1);\n    int res = (int) 2e9;\n    for (int i = 0; i < n; i++) {\n        int x = (b[0] + m - a[i]) % m;\n        int ok = 1;\n        for (int j = 0; j < n; j++) t[j] = (a[j] + x) % m;\n        qs(t, 0, n - 1);\n        for (int j = 0; j < n && ok; j++) {\n            if (b[j] != t[j]) ok = 0;\n        }\n        if (ok) res = min(res, x);\n    }\n    printf(\"%d\\n\", res);\n}"}
{"similarity_score": 0.9973404255319149, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0422b93af1c7d6a0f8386585696b28fe", "bug_code_uid": "907ef6db48a430966a2720ec750b666c", "src_uid": "6422d76f71702e77808b1cc041962bb8", "apr_id": "35f38961a8b56661e50300ecc31fc48d", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint max(int x, int y) {\r\n  int c = x > y ? x : y;\r\n  return c;\r\n}\r\n\r\nint min(int x, int y) {\r\n  int c = x > y ? y : x;\r\n  return c;\r\n}\r\nint main() {\r\n  int n;\r\n  scanf(\"%d\", &n);\r\n  while (n--) {\r\n    int a, b, c, d, e, f;\r\n    scanf(\"%d %d %d %d %d %d\", &a, &b, &c, &d, &e, &f);\r\n    if ((c == a && c == e) || (d == b && d == f)) {\r\n      int x = abs(c - a);\r\n      int y = abs(d - b);\r\n\r\n      if ((e > min(a, c) && e < max(a, c)) ||\r\n          (e > min(b, d) && e < max(b, d))) {\r\n        printf(\"%d\\n\", max(x, y) + 2);\r\n      } else {\r\n        printf(\"%d\\n\", max(x, y));\r\n      }\r\n\r\n    } else {\r\n      int l = abs(a - c);\r\n      int m = abs(b - d);\r\n      printf(\"%d\\n\", l + m);\r\n    }\r\n  }\r\n  return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint max(int x, int y) {\r\n  int c = x > y ? x : y;\r\n  return c;\r\n}\r\n\r\nint min(int x, int y) {\r\n  int c = x > y ? y : x;\r\n  return c;\r\n}\r\nint main() {\r\n  int n;\r\n  scanf(\"%d\", &n);\r\n  while (n--) {\r\n    int a, b, c, d, e, f;\r\n    scanf(\"%d %d %d %d %d %d\", &a, &b, &c, &d, &e, &f);\r\n    if ((c == a && c == e) || (d == b && d == f)) {\r\n      int x = abs(c - a);\r\n      int y = abs(d - b);\r\n\r\n      if ((e > min(a, c) && e < max(a, c)) ||\r\n          (f > min(b, d) && f < max(b, d))) {\r\n        printf(\"%d\\n\", max(x, y) + 2);\r\n      } else {\r\n        printf(\"%d\\n\", max(x, y));\r\n      }\r\n\r\n    } else {\r\n      int l = abs(a - c);\r\n      int m = abs(b - d);\r\n      printf(\"%d\\n\", l + m);\r\n    }\r\n  }\r\n  return 0;\r\n}"}
{"similarity_score": 0.9586776859504132, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8491b7f1efa43315406e2314e3d7e147", "bug_code_uid": "b7720870c05045525bec9e1d4d92a0ef", "src_uid": "01adc5002997b7f5c79eeb6d9b3dc60b", "apr_id": "b0842cf32ee1e2498cac3bf23b4be25d", "difficulty": 1900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nlong long m[1000005], num[1000005];\nint main()\n{\n\tlong long n, sma = 0, lar = 0, same = 0, dev = 0, move = 0, mindev;\n\tscanf(\"%I64d\", &n);\n\tmemset(num, 0, sizeof(num));\n\tmemset(m, 0, sizeof(m));\n\tfor (long long i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%I64d\", &m[i]);\n\t\tdev += abs(m[i] - i);\n\t\tif (m[i] > i)\n\t\t{\n\t\t\tlar++;\n\t\t\tnum[m[i] - i]++;\n\t\t}\n\t\telse if (m[i] == i)\n\t\t\tsame++;\n\t\telse\n\t\t{\n\t\t\tsma++;\n\t\t\tnum[n + m[i] - i]++;\n\t\t}\n\t}\n\tmindev = dev;\n\tfor (long long i = 1; i < n; i++)\n\t{\n\t\tdev -= abs(m[n - i + 1] - n) + lar;\n\t\tdev += abs(m[n - i + 1] - 1) + sma + same - 1;\n\t\tif (m[n - i + 1] < n && m[n - i + 1]>=1)\n\t\t\tsma--;\n\t\tsma += same;\n\t\tsame = num[i];\n\t\tlar = n - same - sma;\n\t\tif (dev < mindev)\n\t\t{\n\t\t\tmindev = dev;\n\t\t\tmove = i;\n\t\t}\n\t}\n\tprintf(\"%I64d %I64d\\n\", mindev, move);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nlong long m[1000005], num[1000005];\nint main()\n{\n\tlong long n, sma = 0, lar = 0, same = 0, dev = 0, move = 0, mindev;\n\tscanf(\"%I64d\", &n);\n\tmemset(num, 0, sizeof(num));\n\tmemset(m, 0, sizeof(m));\n\tfor (long long i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%I64d\", &m[i]);\n\t\tdev += abs(m[i] - i);\n\t\tif (m[i] > i)\n\t\t{\n\t\t\tlar++;\n\t\t\tnum[m[i] - i]++;\n\t\t}\n\t\telse if (m[i] == i)\n\t\t\tsame++;\n\t\telse\n\t\t{\n\t\t\tsma++;\n\t\t\tnum[n + m[i] - i]++;\n\t\t}\n\t}\n\tmindev = dev;\n\tfor (long long i = 1; i < n; i++)\n\t{\n\t\tdev -= abs(m[n - i + 1] - n) + lar;\n\t\tdev += abs(m[n - i + 1] - 1) + sma + same - 1;\n\t\tif (m[n - i + 1] < n )\n\t\t\tsma--;\n\t\tif (m[n - i + 1] == n)\n\t\t\tsame--;\n\t\tsma += same;\n\t\tsame = num[i];\n\t\tlar = n - same - sma;\n\t\tif (dev < mindev)\n\t\t{\n\t\t\tmindev = dev;\n\t\t\tmove = i;\n\t\t}\n\t}\n\tprintf(\"%I64d %I64d\\n\", mindev, move);\n\treturn 0;\n}"}
{"similarity_score": 0.7113924050632912, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "a584bc7af3ca6492e340ceafa858ea54", "bug_code_uid": "8eb8ab8256d4a70a538ab2458c738414", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "5efedc0c44fafd6c30103b9340aff77d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            if(i%2==0){printf(\"#\");}\n            else{\n                if(j==m-1){printf(\"#\");}\n                else{printf(\".\");}\n            }\n            if(j==m-1){printf(\"\\n\");}\n        }\n    }\n\n\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\n    int n,m,i,j;\n    scanf(\"%d %d\",&n,&m);\n    for(i=1;i<=n;i++){\n        for(j=1;j<=m;j++){\n            if(i%2!=0){printf(\"#\");}\n            else{\n                if(i%4==0){if(j==1){printf(\"#\");}\n                else{printf(\".\");}}\n                else{\n                    if(j==m){printf(\"#\");}\n                else{printf(\".\");}\n                }\n            }\n            if(j==m){printf(\"\\n\");}}\n\n    }\n\n\n\nreturn 0;\n}"}
{"similarity_score": 0.9943262411347518, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9d227dfbd0371083adb483d2a63754e1", "bug_code_uid": "4a37b62b1bd0c412dc006eea18e01f1a", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "e5839759c55c635877d04c3eb3f06895", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, p, q, sum = 0;\n    double output = 0;\n    int arr[1000];\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &p);\n    for(int i = 0; i < p; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    scanf(\"%d\", &q);\n    for(int i = p; i < p+q; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    for(int i = 0; i < p+q; i++)\n    {\n        for(int j = i+1; j < p+q; j++)\n        {\n            if(arr[i] == arr[j])\n                arr[j] = 0;\n        }\n    }\n    for(int i = 0; i < p+q; i++)\n    {\n        sum += arr[i];\n    }\n    output = n/2*(1+n);\n    if(sum == output)\n    {\n        printf(\"I become the guy.\");\n    }\n    else\n        printf(\"Oh, my keyboard!\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, p, q, sum = 0;\n    double output = 0;\n    int arr[1000];\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &p);\n    for(int i = 0; i < p; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    scanf(\"%d\", &q);\n    for(int i = p; i < p+q; i++)\n    {\n        scanf(\"%d\", &arr[i]);\n    }\n    for(int i = 0; i < p+q; i++)\n    {\n        for(int j = i+1; j < p+q; j++)\n        {\n            if(arr[i] == arr[j])\n                arr[j] = 0;\n        }\n    }\n    for(int i = 0; i < p+q; i++)\n    {\n        sum += arr[i];\n    }\n    output = (double)n/2*(1+n);\n    if(sum == output)\n    {\n        printf(\"I become the guy.\");\n    }\n    else\n        printf(\"Oh, my keyboard!\");\n    return 0;\n}\n"}
{"similarity_score": 0.9532587228439763, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "ac2cbf6414b84888305829f95ade1e42", "bug_code_uid": "e1f7aa9a714ea311be1db2cbd7839e51", "src_uid": "c659bdeda1c1da08cfc7f71367222332", "apr_id": "c9c84dbcb495d9db8dbb125e12415e14", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char s1[100001];\n    gets(s1);\n    char s2[100001];\n    gets(s2);\n    int i,j;\n    int u=0;\n    char temp1;\n    char temp2;\n    char temp3;\n    char temp4;\n    int check=0;\n    if(strlen(s1)!=strlen(s2)){\n        printf(\"NO\");\n        return 0;\n    }\n    for(i=0;i<strlen(s1);i++){\n        if(s1[i]==s2[i]){\n            u++;\n        }\n        else if(s1[i]!=s2[i]&&check==0){\n            temp1=s1[i];\n            temp2=s2[i];\n        }\n        else if(s1[i]!=s2[i]&&check!=0){\n            temp3=s1[i];\n            temp4=s2[i];\n        }\n    }\n    if(u==strlen(s1)-2&&(temp2==temp3)&&(temp1==temp4)){\n        printf(\"YES\");\n    }\n    else{\n        printf(\"NO\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char s1[100001];\n    gets(s1);\n    char s2[100001];\n    gets(s2);\n    int i,j;\n    int u=0;\n    char temp1='a';\n    char temp2='z';\n    char temp3='z';\n    char temp4='a';\n    int check=0;\n    if(strlen(s1)!=strlen(s2)){\n        printf(\"NO\");\n        return 0;\n    }\n    for(i=0;i<strlen(s1);i++){\n        if(s1[i]==s2[i]){\n            u++;\n        }\n        else if(s1[i]!=s2[i]&&check==0){\n            temp1=s1[i];\n            temp2=s2[i];\n            check++;\n        }\n        else if(s1[i]!=s2[i]&&check!=0){\n            temp3=s1[i];\n            temp4=s2[i];\n        }\n    }\n    if((u==strlen(s1)-2)&&(temp2==temp3)&&(temp1==temp4)){\n        printf(\"YES\");\n    }\n    else{\n        printf(\"NO\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6428571428571429, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "b6ae5c6b2604dca54b17ad573b16d837", "bug_code_uid": "fc3c105c1ef14d1a06a8f071b6d381d4", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "907e735f1f9d3887422d857010f2aac5", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,k,i,j,len;\n    char str[1000];\n    gets(str);\n    n=strlen(str);\n    if(n==2){\n        len=0;\n    }\n    else{\n    len=(n/3);\n    }\n    for(i=1;i<n-1;i+=2){\n        for(j=i+2;j<n-1;j+=2){\n            if(str[i]==str[j]){\n                break;\n            }\n        }\n        if(j!=n){\n            len=len-1;\n        }\n    }\n    printf(\"%d\",len);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,k,i,j,len;\n    char str[1000];\n    gets(str);\n    n=strlen(str);\n    if(n==2){\n        len=0;\n    }\n    else if(n>=3){\n        len=(n/3);\n        for(i=1;i<n-1;i+=3){\n            for(j=i+3;j<n;j+=3){\n                if(str[i]==str[j]){\n                    break;\n                }\n            }\n            if(j<n){\n                len=len-1;\n            }\n        }\n    }\n    printf(\"%d\",len);\n    return 0;\n}\n"}
{"similarity_score": 0.4675834970530452, "equal_cnt": 18, "replace_cnt": 6, "delete_cnt": 7, "insert_cnt": 5, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "ce4a725173c63b47ba6fc021392cd34a", "bug_code_uid": "7ed754741458e6b0e96d037d4345074c", "src_uid": "b7e36ca8a96dd7951359070d4953beec", "apr_id": "14fbcd3f6e77bf5d188bfa7c377ddd68", "difficulty": 800, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,x,y;\n    printf(\"%d\",n);\n    for(int i=1;i<=n;i++){\n        printf(\"%d\",x);\n        for(y=1;y<=100000;y++){\n        for(int a=2;a<(x+y);a++){\n            if((x+y)%a!=0)\n                print(\"%d\",y);\n            else\n                continue;\n        }\n        }\n    }\n}\n\t     \t     \t\t  \t   \t \t \t\t\t \t \t", "fixed": "#include<stdio.h>\nint main(){\n    int t,n;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        printf(\"%d\\n\",n);\n    }\n}\n   \t \t\t\t\t  \t\t\t  \t    \t\t \t \t\t\t\t"}
{"similarity_score": 0.5901960784313726, "equal_cnt": 23, "replace_cnt": 17, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "5fba13df1580535e588febd2a9dd5c49", "bug_code_uid": "8db10e25813a2ddb6de2f30d07861b8a", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "b92dfd5819e837e42aea2ebbbe375805", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,sum=0;\n    char str[20];\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n        if(str==\"Icosahedron\")\n        sum=sum+20;\n      else if(str==\"Cube\")\n        sum=sum+6;\n    else if(str==\"Tetrahedron\")\n        sum=sum+4;\n       else if(str==\"Dodecahedron\")\n        sum=sum+12;\n       else if(str==\"Octahedron\")\n        sum=sum+8;\n   }\n\n    printf(\"%d\",&sum);\n    return 0;\n\n\n\n\n\n\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int sum=0;\n    while(n--)\n        {\n        char s[30];\n        scanf(\"%s\",&s);\n        if(strcmp(s,\"Tetrahedron\")==0)\n        {\n            sum=sum+4;\n        }\n        else if(strcmp(s,\"Cube\")==0){\n            sum=sum+6;\n        }\n        else if(strcmp(s,\"Octahedron\")==0)\n        {\n            sum=sum+8;\n        }\n        else if(strcmp(s,\"Dodecahedron\")==0)\n        {\n            sum=sum+12;\n        }\n        else if(strcmp(s,\"Icosahedron\")==0)\n        {\n            sum=sum+20;\n        }\n    }\n    printf(\"%d\",sum);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7494824016563147, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "cd34751c777eb703bb108c41c6c3b8f8", "bug_code_uid": "b38b6583ff55e5b17d4560f5f2aafe79", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "60e68a480cbbc5ecba6b8c4f95f0cd56", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main(){\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n    int n,r=0;\n    scanf(\"%d\",&n);\n    int m = n;\n    while((n/10)>=9){\n        r = r+n/10;\n        n = n%10 + n/10;\n    }\n    if(m%10==9)\n        r = r+1;\n    printf(\"%d\\n\",r+m+1);\n}\nreturn;\n}\n", "fixed": "#include<stdio.h>\n\nvoid main(){\nint t;\nscanf(\"%d\",&t);\nwhile(t--)\n{\n    int n,r=0;\n    scanf(\"%d\",&n);\n    int m = n;\n    while(n>9){\n        r = r+n/10;\n        n = n%10 + n/10;\n    }\n    printf(\"%d\\n\",r+m);\n}\nreturn;\n}\n"}
{"similarity_score": 0.3937007874015748, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "a211f079f1f0083e54110019a6611086", "bug_code_uid": "ff29ae6cc75b6521598641aecdebbc4c", "src_uid": "6324ca46b6f072f8952d2619cb4f73e6", "apr_id": "667bd99f895d6dc21f8c89865359ada0", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tint n, m, k;\n\twhile (t--)\n\t{\n\t\tscanf(\"%d %d %d\", &n, &m, &k);\n\t\tint a = n / k;\n\t\tif (a >= m)\n\t\t{\n\t\t\tprintf(\"%d\\n\", m);\n\t\t\tcontinue;\n\t\t}\n\t\telse if(a < m)\n\t\t{\n\t\t\tprintf(\"%d\\n\", a - ((m-a) % (k-1) + (m-a) / (k-1)));\n\t\t}\n\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint n,m,k;\n\tfor(;t>0;t--)\n\t{\n\t\tscanf(\"%d %d %d\",&n,&m,&k);\n\t\tif(n/k>m)\n\t\t\tprintf(\"%d\\n\",m);\n\t\telse\n\t\t\tprintf(\"%d\\n\",n/k-(m-n/k+k-2)/(k-1));\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.8890356671070013, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8b7b072046452e5e9c5ec6b72910ba9f", "bug_code_uid": "e29fe8c49c2feb2e12f7546a95748637", "src_uid": "6854ad3597f9f41d475aacb774b823ed", "apr_id": "21ad7db97a2dafaa27e3771c1a22a273", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int i,j,t,n,k,p;\r\n    scanf(\"%d\",&t);\r\n    for (i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        int a[n];\r\n        for (j=0;j<n;j++) scanf(\"%d\",&a[j]);\r\n        for (j=0;j<n-1;j++)\r\n        {\r\n            if (a[j]>0)\r\n            {\r\n                p=j;\r\n                break;\r\n            }\r\n        }\r\n        if (j<n-1)\r\n        {\r\n            for (j=0;j<k;j++)\r\n            {\r\n                a[p]--;a[n-1]++;\r\n                if (a[p]==0)\r\n                {\r\n                    p++;\r\n                    if (p==n-1) break;\r\n                }\r\n            }\r\n        }\r\n        for (j=0;j<n;j++) printf(\"%d \",a[j]);\r\n        printf(\"\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int i,j,t,n,k,p;\r\n    scanf(\"%d\",&t);\r\n    for (i=0;i<t;i++)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        int a[n];\r\n        for (j=0;j<n;j++) scanf(\"%d\",&a[j]);\r\n        for (j=0;j<n-1;j++)\r\n        {\r\n            if (a[j]>0)\r\n            {\r\n                p=j;\r\n                break;\r\n            }\r\n        }\r\n        if (j<n-1)\r\n        {\r\n            for (j=0;j<k;j++)\r\n            {\r\n                a[p]--;a[n-1]++;\r\n                if (a[p]==0)\r\n                {\r\n                    for (;p<n-1;p++)\r\n                    {\r\n                        if (a[p]>0) break;\r\n                    }\r\n                    if (p==n-1) break;\r\n                }\r\n            }\r\n        }\r\n        for (j=0;j<n;j++) printf(\"%d \",a[j]);\r\n        printf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.5626740947075209, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "638e24537f676d5cce38194324b580c8", "bug_code_uid": "5624aadad5634f0c92a25c6efc8c50db", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "8033d31c7293970f0fc40e641e4cecaf", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    char s[10000];\n    scanf(\"%s\",s);\n    int k,j,m,c,a,b;\n    scanf(\"%d\",&m);\n    for(j=0;j<m;j++)\n    {\n        c=0;\n        scanf(\"%d %d\",&a,&b);\n        for(k=a;k<b;k++)\n            if(s[k-1]==s[k])\n            c++;\n        printf(\"%d\\n\",c);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    char s[100000];\n    scanf(\"%s\",s);\n    int k,j,m,a,b,d=0,c[100001]={0},n=0;\n    scanf(\"%d\",&m);\n    while(s[n]!='\\0')\n        n++;\n    for(k=0;k<=n;k++)\n        {\n            if(s[k-1]==s[k])\n              c[k]=++d;\n            else\n                c[k]=d;\n        }\n    for(j=0;j<m;j++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        printf(\"%d\\n\",c[b-1]-c[a-1]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9855072463768116, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d20dc5e78ed77e3bcc8a83e3af398711", "bug_code_uid": "19e4bfb414de9cdd0d19ae84382e2da8", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "24115ccf8c18390b6dde31e3c70a1d3b", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,b,i=0,max=0,a[100001];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%d\",&a[i]);\n        b=sqrt(a[i]);\n        if(b*b!=a[i])\n        {\n           if(a[i]>max)\n                max=a[i];\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,b,i=0,max=-1000005,a[100001];\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%d\",&a[i]);\n        b=sqrt(a[i]);\n        if(b*b!=a[i])\n        {\n           if(a[i]>max)\n                max=a[i];\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9539666993143977, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "969d80bb1d83e0c487494c99b49c5057", "bug_code_uid": "428140fce83f172b56d06bffa1553569", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "2d27d1223ece394f2d2a6b73839dc016", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n, temp;\n    \n    scanf(\"%d\", &n);\n    \n    if (n % 2 == 0)\n    {\n        printf(\"%d\\n\", n / 2);\n        for(int i = 0; i < n / 2; i++)\n        {\n            printf(\"2 \");\n        }\n        puts(\"\");\n        return 0;\n    }\n    else\n    {\n        temp = n - 3;\n        \n        printf(\"3 \");\n        \n        for(int i = 0; i < temp / 2; i++)\n        {\n            printf(\"2 \");\n        }\n        \n        puts(\"\");\n    }\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n, temp;\n    \n    scanf(\"%d\", &n);\n    \n    if (n % 2 == 0)\n    {\n        printf(\"%d\\n\", n / 2);\n        for(int i = 0; i < n / 2; i++)\n        {\n            printf(\"2 \");\n        }\n        puts(\"\");\n        return 0;\n    }\n    else\n    {\n        temp = n - 3;\n        \n        printf(\"%d\\n\", temp / 2 + 1);\n        \n        printf(\"3 \");\n        \n        for(int i = 0; i < temp / 2; i++)\n        {\n            printf(\"2 \");\n        }\n        \n        puts(\"\");\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.9182389937106918, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1abdc8751201730633d978730eed2d76", "bug_code_uid": "aeb1c2591bfcb5a0db8376589823f559", "src_uid": "2545b6af730f99193041a8810b728cb3", "apr_id": "7ec16e483077f997912be507d8f585c3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,l[100],r[100],i,k,count=0;\n    scanf(\"%d\",&n);\n    printf(\"\\n\");\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&l[i],&r[i]);\n    }\n    scanf(\"%d\",&k);\n    for(i=0;i<n;i++)\n    {\n        if(k>=l[i] && k<=r[i])\n        {\n            break;\n        }\n        else\n        {\n            count++;\n        }\n    }\n    printf(\"--\\n%d\",n-count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,l[100],r[100],i,k,count=0;\n    scanf(\"%d\",&n);\n    printf(\"\\n\");\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&l[i],&r[i]);\n    }\n    scanf(\"%d\",&k);\n    for(i=0;i<n;i++)\n    {\n        if(k>=l[i] && k<=r[i])\n        {\n            break;\n        }\n        else\n        {\n            count++;\n        }\n    }\n    printf(\"%d\",n-count);\n    \n    return 0;\n}"}
{"similarity_score": 0.9897610921501706, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6441459fa866cfe85de360e2febe8b9b", "bug_code_uid": "fbab273f0994d1786ef015305e91b7a9", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "1c5379617107a9c5c5ecb7e393092056", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    char s[102];\n    scanf(\"%d %s\", &n,s);\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='n')\n        {\n            printf(\"1 \");\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='z')\n        {\n            printf(\"0 \");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    char s[1000000];\n    scanf(\"%d %s\", &n,s);\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='n')\n        {\n            printf(\"1 \");\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(s[i]=='z')\n        {\n            printf(\"0 \");\n        }\n    }\n}\n"}
{"similarity_score": 0.8697282099343955, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "22f71e59a6c4a219b935791f5de30ebc", "bug_code_uid": "46adcc3df8299569cce9a1fccd282988", "src_uid": "afce38aa7065da88d824d1d981b5b338", "apr_id": "9d11f8ff7a198c16cbc90e23303cb47f", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (int i = 0; i < t; i++) {\n\t\tint n, x, k;\n\t\tscanf(\"%d %d\", &n, &x);\n\t\tint o = 0;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d\", &k);\n\t\t\tif (k % 2 != 0) {\n\t\t\t\to++;\n\t\t\t}\n\t\t}\n\t\tif (n == x) {\n\t\t\tif (o % 2 == 0) {\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t}\n\t\t}\n\t\telse if (n < x) {\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse {\n\t\t\tif (o == 0) {\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t}\n\t\t}\n\t}\n}", "fixed": "#include <stdio.h>\n \nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (int i = 0; i < t; i++) {\n\t\tint n, x, k;\n\t\tscanf(\"%d %d\", &n, &x);\n\t\tint o = 0;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d\", &k);\n\t\t\tif (k % 2 != 0) {\n\t\t\t\to++;\n\t\t\t}\n\t\t}\n\t\tif (n == x) {\n\t\t\tif (o % 2 == 0) {\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t}\n\t\t}\n\t\telse if (n < x) {\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\telse {\n\t\t\tif (o == 0) {\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t}\n\t\t\telse if (o == n) {\n\t\t\t\tif (x % 2 == 0) {\n\t\t\t\t\tprintf(\"No\\n\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t}\n\t\t}\n\t}\n}"}
{"similarity_score": 0.9957173447537473, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b411f80ef52c18ea6f507a5971e44fb7", "bug_code_uid": "702cf7f5c4d82b95835be9ba5fe407ac", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "9472d15040917353d0d1e1300d99bf7b", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain(){\n    char number[10];\n    scanf(\"%s\",&number);\n    int i,lastIndex=-1;\n    for(i=0;number[i+1]!=0;i++){\n        if(lastIndex==-1&&number[i]=='0'){\n            lastIndex=i;\n        }\n    }\n    int n=i+1;\n    if(lastIndex==-1){\n        for(i=0;i<n-1;i++){\n            printf(\"%c\",number[i]);\n        }\n        return 0;\n    }\n    for(i=0;i<n;i++){\n        if(i!=lastIndex){\n            printf(\"%c\",number[i]);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nmain(){\n    char number[100000];\n    scanf(\"%s\",&number);\n    int i,lastIndex=-1;\n    for(i=0;number[i+1]!=0;i++){\n        if(lastIndex==-1&&number[i]=='0'){\n            lastIndex=i;\n        }\n    }\n    int n=i+1;\n    if(lastIndex==-1){\n        for(i=0;i<n-1;i++){\n            printf(\"%c\",number[i]);\n        }\n        return 0;\n    }\n    for(i=0;i<n;i++){\n        if(i!=lastIndex){\n            printf(\"%c\",number[i]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9377382465057179, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4aefa0ca0163746502d3ac11cb26317d", "bug_code_uid": "1aa82ff71f76cce7a4aea407e6b622ff", "src_uid": "a0a6cdda2ce201767bf5418f445a44eb", "apr_id": "77966766271cff90f8cd68ba51d7199d", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\n\nint main(){\n\n    int b,a, par,impar;\n\n    scanf(\"%d\", &a );\n\n    for (int i = 0; i < a; i++){\n        scanf(\"%d\", b);\n        if (b%2==0) {\n            par++;\n        } else\n        impar++;\n    }\n\n    if (par < impar) {\n        printf(\"%d\\n\", par );\n    } else\n        printf(\"%d\\n\", impar );\n\n\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\n\nint main(){\n\n    int b,a, par = 0,impar = 0;\n\n    scanf(\"%d\", &a );\n\n    for (int i = 0; i < a; i++){\n        scanf(\"%d\", &b);\n        if (b%2==0) {\n            ++par;\n        } else\n            ++impar;\n    }\n\n    if (par < impar) {\n        printf(\"%d\\n\", par );\n    } else\n        printf(\"%d\\n\", impar );\n\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9862475442043221, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1532679dd182ada708cb3d37e334bb65", "bug_code_uid": "00b0e8514e947eee271766aa51143b7b", "src_uid": "afce38aa7065da88d824d1d981b5b338", "apr_id": "9149163bf375aab3d4e6ce07ef117b16", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,x,i,j,k,p,s,c;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&x,&k);\n        int n,a=0,b=0;\n        for(i=0;i<x;i++)\n        {\n            scanf(\"%d\",&n);\n            if(n%2==0) a++;\n            else b++;\n        }\n\n        if(b>=k||(a+b==k&&b%2==1)) printf(\"Yes\\n\");\n        else if(a>=k&&b>0) printf(\"Yes\\n\");\n        else if(a+b>k&&( ((k-a)==b&&b%2==1)||(k-a<b&&b>0)) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,x,i,j,k,p,s,c;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&x,&k);\n        int n,a=0,b=0;\n        for(i=0;i<x;i++)\n        {\n            scanf(\"%d\",&n);\n            if(n%2==0) a++;\n            else b++;\n        }\n\n        if(b>=k&&k%2==1||(a+b==k&&b%2==1)) printf(\"Yes\\n\");\n        else if(a>=k&&b>0) printf(\"Yes\\n\");\n        else if(a>0&&a+b>k&&( ((k-a)==b&&b%2==1)||(k-a<b&&b>0))) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n}\n"}
{"similarity_score": 0.9893162393162394, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a03213cb1769906189070d30c328df2d", "bug_code_uid": "f23155db76449fe4a1099fbd69ce0bc3", "src_uid": "288f147bb8a3c30b0bb712a01c65109b", "apr_id": "2c6dc1388898b0b58206744be89dc621", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main(){\r\nint n,t,a[1000001],b=0;\r\n\tscanf(\"%d\",&t);\r\nfor(int i=0;i<t;i++){\r\nscanf(\"%d\",&n);\r\n\r\nfor(int i=0;i<n;i++)\r\n{ scanf(\"%d\",&a[i]);}\r\nfor(int i=0;i<n;i++){\r\nfor( int j=0;j<n-1;j++)\r\n{\r\nif(a[j]<a[j+1]){\r\nb=a[j];\r\na[j]=a[j+1];\r\na[j+1]=b;\r\n\t}\r\n}\r\n }\r\nfor(int i=0;i<n-1;i++)\r\n{\r\nif(a[i]>a[i+1]){b++;}\r\nelse\r\n{\r\n\tprintf(\"NO\\n\");\r\n\tbreak;\r\n}\r\n}\r\nif(b==(n-1)){printf(\"YES\\n\");}\r\n\r\n\tb=0;\r\n\t}\r\nreturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main(){\r\nint n,t,a[1000001],b,c=0;\r\n\tscanf(\"%d\",&t);\r\nfor(int i=0;i<t;i++){\r\nscanf(\"%d\",&n);\r\n\r\nfor(int i=0;i<n;i++)\r\n{ scanf(\"%d\",&a[i]);}\r\nfor(int i=0;i<n;i++){\r\nfor( int j=0;j<n-1;j++)\r\n{\r\nif(a[j]<a[j+1]){\r\nb=a[j];\r\na[j]=a[j+1];\r\na[j+1]=b;\r\n\t}\r\n}\r\n }\r\nfor(int i=0;i<n-1;i++)\r\n{\r\nif(a[i]>a[i+1]){c++;}\r\nelse\r\n{\r\n\tprintf(\"NO\\n\");\r\n\tbreak;\r\n}\r\n}\r\nif(c==(n-1)){printf(\"YES\\n\");}\r\n\r\n\tc=0;\r\n\t}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.9949899799599199, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "7ac10f68622dc3d907eac25f1fd55230", "bug_code_uid": "129c340c60b7eb91aa8b4daa6e1daccf", "src_uid": "37447ade3cad88e06c1f407576e4a041", "apr_id": "56b17938ad1ec104d5a0604892a92407", "difficulty": 1800, "tags": ["string suffix structures", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[10005],b[10005],c[10005],d[10005],next[10005];\nint n,m;\nvoid getNext()\n{\n    int j, k;\n    j = 0; k = -1; next[0] = -1;\n    while(j < m-1)\n        if(k == -1 || b[j] == b[k])\n            next[++j] = ++k;\n        else\n            k = next[k];\n}\nint KMP_Count()\n{\n    int ans = 0;\n    int i, j = 0;\n\n    if(n == 1 && m == 1) \n    {\n        if(a[0] == b[0])\n            return 1;\n        else\n            return -1;\n    }\n    getNext();\n    for(i = 0; i < n-1; i++)\n    {\n        while(j > 0 && a[i] != b[j])\n            j = next[j];\n        if(a[i] == b[j])\n            j++;\n        if(j == m-1)\n        {\n            ans++;\n            j = next[j];\n        }\n    }\n    return ans;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\t\n\tfor(int i=0;i<n;i++)\n\tscanf(\"%d\",&c[i]);\n\tfor(int i=0;i<m;i++)\n\tscanf(\"%d\",&d[i]);\n\tif(m==1)\n\t{\n\t\tprintf(\"%d\\n\",n);\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<n;i++)\n\ta[i]=c[i+1]-c[i];\n\t\n\n\t\n\tfor(int i=0;i<m;i++)\n\tb[i]=d[i+1]-d[i];\n\n\tprintf(\"%d\\n\",KMP_Count());\n}", "fixed": "#include<stdio.h>\nint a[1000005],b[1000005],c[1000005],d[1000005],next[1000005];\nint n,m;\nvoid getNext()\n{\n    int j, k;\n    j = 0; k = -1; next[0] = -1;\n    while(j < m-1)\n        if(k == -1 || b[j] == b[k])\n            next[++j] = ++k;\n        else\n            k = next[k];\n}\nint KMP_Count()\n{\n    int ans = 0;\n    int i, j = 0;\n\n    if(n == 1 && m == 1) \n    {\n        if(a[0] == b[0])\n            return 1;\n        else\n            return -1;\n    }\n    getNext();\n    for(i = 0; i < n-1; i++)\n    {\n        while(j > 0 && a[i] != b[j])\n            j = next[j];\n        if(a[i] == b[j])\n            j++;\n        if(j == m-1)\n        {\n            ans++;\n            j = next[j];\n        }\n    }\n    return ans;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\t\n\tfor(int i=0;i<n;i++)\n\tscanf(\"%d\",&c[i]);\n\tfor(int i=0;i<m;i++)\n\tscanf(\"%d\",&d[i]);\n\tif(m==1)\n\t{\n\t\tprintf(\"%d\\n\",n);\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<n;i++)\n\ta[i]=c[i+1]-c[i];\n\t\n\n\t\n\tfor(int i=0;i<m;i++)\n\tb[i]=d[i+1]-d[i];\n\n\tprintf(\"%d\\n\",KMP_Count());\n}"}
{"similarity_score": 0.7653846153846153, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "06b179e2210a752e499a1ee2ddb5fb1d", "bug_code_uid": "9d42290362fbf4fdf14ef6af98054231", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "f43e83da7ef9b2a79a2b7384b1271fcc", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n+1],p[n];\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&a[i],&p[i]);\n\t}\n\tint sum=0;\n\ta[0]=a[1];\n    for (int i=1;i<=n;i++){\n    \tif (p[i]>p[i-1]) p[i]=p[i-1];\n    \tsum=sum+a[i]*p[i];\n\t}\n\tprintf(\"%d\",sum); \n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],p[n];\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&a[i],&p[i]);\n\t}\n\tint sum= a[1]*p[1];\n\tint h=p[1];\n\tfor (int i=2;i<=n;i++){\n\t\tif (p[i]<h) h=p[i];\n\t\tsum=sum+a[i]*h;\n\t\t\n\t}\n\tprintf(\"%d\",sum); \n}"}
{"similarity_score": 0.48, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "a9ecef036843e5b0b1f000274fc8ff24", "bug_code_uid": "0737bd06a184450d52f21f6965c2c450", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "5386370986a49b6033faf31967a142e6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tlong long l = 0, t = 0, r = 0,n=0;\n\tint j;\n\tscanf(\"%lld\", &t);\n\tfor (j =1; j <= t; j++)\n\t{\n\t\tscanf(\"%lld\", &n);\n\t\tl = 1 - n;\n\t\tr = n;\n\t\tprintf(\"%lld %lld\", l, r);\n\t}\n\treturn 0;\n}\n\n\t  \t\t    \t   \t\t  \t\t\t   \t\t    \t", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long n[10000],r[10000],l[10000],i,j;\n\tscanf(\"%lld\",&j);\n\tfor(i=1;i<=j;i++)\n\t{\n\t\tscanf(\"%lld\",&n[i]);\n\t\tl[i]=-n[i]+1;\n\t\tr[i]=n[i];\t\n\t}\n\t\n\tfor(i=1;i<=j;i++)\n\t{\n\t\tprintf(\"%lld %lld\\n\",l[i],r[i]);\n\t}\n\t\n\treturn 0; \n} \n \t    \t \t\t   \t\t  \t\t\t \t\t\t \t\t\t \t"}
{"similarity_score": 0.8607142857142858, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "74a288bb08b0b026aedbc5b41fc632fe", "bug_code_uid": "a1c091a9ad0e3e47d47c4bfca69062e3", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "94591a06c9cf23d5417c1e4049cb1f9b", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\n\tint n ,i ,c=0 ,d=0 ,j;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=1;i<n;i++){\n\t\tc=0;\n\t\tfor(j=0;j<i;j++){\n\t\t\tif(a[i]<=a[j]) c++;\n\t\t}\n\t\tif(c==0 || c==i) d++;\n\t}\n\t\n\tprintf(\"%d\",d);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\n\tint n ,i ,c=0 ,d=0 ,j;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(i=1;i<n;i++){\n\t\tc=0;\n\t\tfor(j=0;j<i;j++){\n\t\t\tif(a[i]==a[j]) break;\n\t\t\tif(a[i]<=a[j]) c++;\n\t\t}\n\t\tif((c==0 || c==i) && j==i ) d++;\n\t}\n\t\n\tprintf(\"%d\",d);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9974747474747475, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d46afc83bbd578d073c0870f52d4ae0d", "bug_code_uid": "5496cfb84fcdf7bcb43522286998d771", "src_uid": "6fbf41dc32d1c28351d78a9ec5fc0026", "apr_id": "f0a77597041c0a99b20a13007f3b40f9", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int t,n,k,mid,flag;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        flag=0;\r\n        char st[1000];\r\n        scanf(\"%d%d\",&n,&k);\r\n        getchar();\r\n        scanf(\"%s\",st);\r\n        if(k==0)\r\n            printf(\"YES\\n\");\r\n        else if(k*2==n)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            for(int i=0;i<=k;i++)\r\n            {\r\n               if(st[i]==st[n-1-i])\r\n                continue;\r\n               else\r\n               {\r\n                   flag=1;\r\n                   break;\r\n               }\r\n            }\r\n            if(flag)\r\n            {\r\n                printf(\"NO\\n\");\r\n            }\r\n            else\r\n                printf(\"YES\\n\");\r\n        }\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int t,n,k,mid,flag;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        flag=0;\r\n        char st[1000];\r\n        scanf(\"%d%d\",&n,&k);\r\n        getchar();\r\n        scanf(\"%s\",st);\r\n        if(k==0)\r\n            printf(\"YES\\n\");\r\n        else if(k*2==n)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            for(int i=0;i<k;i++)\r\n            {\r\n               if(st[i]==st[n-1-i])\r\n                continue;\r\n               else\r\n               {\r\n                   flag=1;\r\n                   break;\r\n               }\r\n            }\r\n            if(flag==1)\r\n            {\r\n                printf(\"NO\\n\");\r\n            }\r\n            else\r\n                printf(\"YES\\n\");\r\n        }\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.2619047619047619, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "4d05d3faab8ac1041252c364effb27c4", "bug_code_uid": "4b6cd5be03a2f78df3070f979466f9c9", "src_uid": "206eb67987088843ef42923b0c3939d4", "apr_id": "b6909db918e66e04094deec973ec9b1d", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\nusuing namespace std;\nint main()\n{\n    long long int a, b, n, i, j;\n    cin>>a>>b>>n;\n    for(i=1;i<=n;i++)\n    {\n                     a*=10;\n                     for(j=0;j<=9;j++)\n                     if((a+j)%b == 0)\n                     {\n                                a+=j;\n                                break;\n                     }\n                     if(j==10)\n                     {\n                              cout<<-1\n                              break;\n                     }                      \n    }\n    if(i==n+1)\n    cout<<a\n//getch();\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a, b, n, i;\n    scanf(\"%d %d %d\",&a, &b, &n);\n    a*=10;\n    for(i=0;i<=9;i++)\n    if((a+i)%b==0)\n    {\n                  a+=i;\n                  break;\n    }\n    if(i==10)\n    {\n             printf(\"-1\");\n             //getch();\n             return 0;\n    }\n    else\n    {\n        printf(\"%d\",a);\n        for(i=1;i<n;i++)\n        printf(\"0\");\n    }\n//getch();    \nreturn 0;\n}\n"}
{"similarity_score": 0.8492201039861352, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "05228943ca5a7e2cbbdc8be0faa51fe1", "bug_code_uid": "e9bede59ce9f8180cbb11a0b845e829f", "src_uid": "55595ff38a08b80bc86cf1ebae6f55af", "apr_id": "7ea0901a3947cc92892da96e37de16e5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t,n,m;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif(n==1){\n\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse if(m==1){\n\t\t    printf(\"YES\\n\");\n\t\t}\n\t\telse if(n==2&&m==2){\n\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse{\n\t\t     printf(\"NO\\n\");\n\t\t}\n\t}", "fixed": "#include <stdio.h>\nint main(){\n\tint t,n,m;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif(n==1){\n                printf(\"YES\\n\");\n                }\n\t\telse if(m==1){\n          printf(\"YES\\n\");\n\t\t}\n\t\telse if(n==2&&m==2){\n                printf(\"YES\\n\");\n\t\t}\n\t\telse {\n                printf(\"NO\\n\");\n\t\t}\n\t}\n}\n\n\n"}
{"similarity_score": 0.9960068454078722, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "6a8ec8fe5bbbce871831d71c41dac706", "bug_code_uid": "6576b22270934c00be24a64924884d57", "src_uid": "d3684227d1f12cf36dc302e1ffee8370", "apr_id": "7ee8ef4bf93dd71a8c7269cb9047f5e4", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n\n\nint F[200000],S[200000];\nint main()\n{\n    long long int n,i,temp,flag=1;\n    scanf(\"%d\",&n);\n    long long int counteri=0,counterii=0,sum1=0,sum2=0;\n    for(i=0;i<n;++i){\n        scanf(\"%d\",&temp);\n        if(temp>0){\n            sum1+=temp;\n            F[counteri++]=temp;\n        }\n        else{\n            sum2+=(-temp);\n            S[counterii++]=-temp;\n        }\n    }\n    if(sum1>sum2||sum2>sum1){\n        printf(\"%s\",sum1>sum2?\"first\":\"second\");\n        return 0;\n    }\n    else{\n        for(i=0;i<(counteri>counterii?counterii:counteri);++i){\n            if(F[i]!=S[i]){\n                if(F[i]>S[i]){printf(\"%s\",\"first\");return 0;}\n                if(F[i]<S[i]){printf(\"%s\",\"second\");return 0;}\n                break;\n            }\n        }\n\n            }\n           printf(\"%s\",temp>0?\"first\":\"second\");\n    return 0;\n}", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n\n\nint F[200000],S[200000];\nint main()\n{\n    long long int n,i,temp,flag=1;\n    scanf(\"%I64d\",&n);\n    long long int counteri=0,counterii=0,sum1=0,sum2=0;\n    for(i=0;i<n;++i){\n        scanf(\"%I64d\",&temp);\n        if(temp>0){\n            sum1+=temp;\n            F[counteri++]=temp;\n        }\n        else{\n            sum2+=(-temp);\n            S[counterii++]=-temp;\n        }\n    }\n    if(sum1>sum2||sum2>sum1){\n        printf(\"%s\",sum1>sum2?\"first\":\"second\");\n        return 0;\n    }\n    else{\n        for(i=0;i<(counteri>counterii?counterii:counteri);++i){\n            if(F[i]!=S[i]){\n                if(F[i]>S[i]){printf(\"%s\",\"first\");return 0;}\n                if(F[i]<S[i]){printf(\"%s\",\"second\");return 0;}\n                break;\n            }\n        }\n\n            }\n           printf(\"%s\",temp>0?\"first\":\"second\");\n    return 0;\n}\n"}
{"similarity_score": 0.33800494641385, "equal_cnt": 20, "replace_cnt": 9, "delete_cnt": 10, "insert_cnt": 1, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "fb5d21e771e9314333e8688728f135a2", "bug_code_uid": "1e50d68034465ac6760a653e1e9cbd00", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "15300743c231d539dbbb031c8c2508b1", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/*\n * input size of both arrays, their elements, as well as k and m\n * check if the elements of a are smaller than each element of b\n * if so, count the number of the above cases\n * if this count is equal or greater than k, then count the number of such cases\n * if this number is equal or greater than m, print yes, else no\n */\n\n#include <stdio.h>\n\nint main()\n{\n\tint n1, n2, i, j;\n\tint k, m, k_count = 0, m_count = 0;\n\t\n\tscanf(\"%d %d\", &n1, &n2);\n\tscanf(\"%d %d\", &k, &m);\n\t\n\tint a[n1], b[n2];\n\t\n\tfor (i = 0; i < n1; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\n\tfor (i = 0; i < n2; i++)\n\t{\n\t\tscanf(\"%d\", &b[i]);\n\t}\n\t\n\t  \n\t \n\tfor (i = 0; i < n2; i++)\n\t{\n\t\tk_count = 0;\n\t\t \n\t\tfor (j = 0; j < n1; j++)\n\t\t{\n\t\t\tif (a[j] < b[i]) \n\t\t\t{\n\t\t\t\tk_count++;\n\t\t\t}\n\t\t}\n\t\t \n\t\tif (k_count >= k)\n\t\t{\n\t\t\tm_count++;\n\t\t}\n\t}\n\t \n\tif (m_count >= m)\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\t \n\telse\n\t{\n\t\tprintf(\"NO\\n\");\n\t}\n\t \n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n1, n2, k, m, i;\n\n\tscanf(\"%d %d\",&n1, &n2);\n\tscanf(\"%d %d\",&k, &m);\n\n\tint a[n1], b[n2];\n\n\tfor(i=0; i<n1; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\t\n\n\tfor(i=0; i<n2; i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t}\t\n\n\tif (a[k-1] < b[n2-m])\n\t{\n\t\tprintf(\"YES\\n\");\n\t}\n\t\n\telse\n\t{\n\t\tprintf(\"NO\\n\");\n\t}\t\n\n    return 0;\n}\n"}
{"similarity_score": 0.9556400506970849, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "dc5c4dae066058dc62eb0fdfc4655456", "bug_code_uid": "d2f31eb76f6341725a8daf7d9c960ad4", "src_uid": "e2db09803d87362c67763ef71e8b7f47", "apr_id": "793c945c5696b8cd37bb96207b7a129d", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint a[2000020], b[2000020];\nint main()\n{\n    int n, nmin, nmax = 0, m=1, flag = 0, j = 0;\n    memset(b,0,sizeof(b));\n    scanf(\"%d\", &n);\n    for (int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n        if (flag == 0){\n            nmin = a[i];\n            flag = 1;\n        }\n        if (nmin > a[i]) nmin = a[i];\n    }\n    for (int i=1;i<=n;i++)\n        a[i] -= nmin;\n    for (int i=1;i<=n;i++){\n        if (a[i]==0){\n            m = i-1;\n            break;\n        }\n    }\n    for (int i=m+1;i<=n;i++){\n        if (a[i] != 0) b[j]++;\n        else ++j;\n    }\n    b[j] += m;\n    for (int i=0;i<=n;i++){\n        if (b[i] == 0) continue;\n        if (nmax < b[i])\n            nmax = b[i];\n    }\n    printf(\"%d\\n\",n*nmin+nmax);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n__int64 int a[2000020], b[2000020];\nint main()\n{\n    int n, m=1, flag = 0, j = 0;\n    __int64 nmin, nmax = 0;\n    memset(b,0,sizeof(b));\n    scanf(\"%d\", &n);\n    for (int i=1;i<=n;i++){\n        scanf(\"%I64d\",&a[i]);\n        if (flag == 0){\n            nmin = a[i];\n            flag = 1;\n        }\n        if (nmin > a[i]) nmin = a[i];\n    }\n    for (int i=1;i<=n;i++)\n        a[i] -= nmin;\n    for (int i=1;i<=n;i++){\n        if (a[i]==0){\n            m = i-1;\n            break;\n        }\n    }\n    for (int i=m+1;i<=n;i++){\n        if (a[i] != 0) b[j]++;\n        else ++j;\n    }\n    b[j] += m;\n    for (int i=0;i<=n;i++){\n        if (b[i] == 0) continue;\n        if (nmax < b[i])\n            nmax = b[i];\n    }\n    printf(\"%I64d\\n\",n*nmin+nmax);\n\n    return 0;\n}\n"}
{"similarity_score": 0.951310861423221, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "b814de06733c86fc2054d90cfd804bee", "bug_code_uid": "cbdf4171f9964de18b650db71bb915f6", "src_uid": "c7e49c643dd8738f273c0d24e56c505f", "apr_id": "4562283787b9488ebd349ec1de8bdf87", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#define MAX 100000\n\nint num[MAX];\n\n\nmain()\n{\n\tint i,j,k;\n\tint n;\n\tint sum,temp,inx;\n\n\tscanf(\"%d\",&n);\n\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&num[i]);\n\tsum = 0;\n\tfor(i=0;i<n-1;i++)\t\n\t{\n\t\tj = 1;\t\n\t\ttemp = i+j;\n\t\twhile(temp < n) \n\t\t{\n\t\t\tinx = temp;\n\t\t\tj*=2;\n\t\t\ttemp =i+j;\n\t\t}\n\n\t\tsum += num[i];\n\t\tnum[inx] += num[i];\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\n\treturn 0;\n}\n\n\t\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#define MAX 100000\n\nint num[MAX];\n\n\nmain()\n{\n\tint i,j,k;\n\tint n;\n\tint temp,inx;\n\tunsigned long long int sum;\n\n\tscanf(\"%d\",&n);\n\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&num[i]);\n\tsum = 0;\n\tfor(i=0;i<n-1;i++)\t\n\t{\n\t\tj = 1;\t\n\t\ttemp = i+j;\n\t\twhile(temp < n) \n\t\t{\n\t\t\tinx = temp;\n\t\t\tj*=2;\n\t\t\ttemp =i+j;\n\t\t}\n\n\t\tsum += num[i];\n\t\tnum[inx] += num[i];\n\t\tprintf(\"%I64u\\n\",sum);\n\t}\n\n\treturn 0;\n}\n\n\t\n\n"}
{"similarity_score": 0.1883720930232558, "equal_cnt": 17, "replace_cnt": 10, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "974a9be144436628f2b8b901c293f4bc", "bug_code_uid": "51e27bfc66befeb7924aff2109fb7fc0", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "a5941215b2f280c1fccb1773bc7af0fb", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n,a,sum=0,i,min1=1000001;\n\n\tscanf(\"%d\", &n);\n\tif(n == 1){\n\t\tscanf(\"%d\", a);\n\t\tprintf(\"%d\", a);\n\t\treturn 0;\n\t}\n\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\", &a);\n\t\tif(a < min1)\n\t\t\tmin1 = a;\n\t\tsum += a;\n\t}\n \n\tif(n % 2 == 0)\n\t\tsum = (n/2+1)*sum;\n\telse\n\t\tsum = (n/2+2)*sum - min1 ;\n\n\tprintf(\"%d\", sum);\n\t//system(\"pause\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *A,const void *B);\n\nint main()\n{\n    long long i,j,n,t;\n    long long sum=0,num,a[1000000];\n\n    scanf(\"%I64d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%I64d\",&a[i]);\n    }\n\n    qsort( a, n, sizeof(long long), cmp);\n\n    for(i=0;i<n-1;i++){\n        num=(i+2)*a[i];\n        sum += num;\n    }\n\n    num = n*a[n-1];\n    sum += num;\n\n    printf(\"%I64d\", sum);\n    return 0;\n}\n\nint cmp(const void *A,const void *B)\n{\n    return *(int *)A-*(int *)B;\n}"}
{"similarity_score": 0.8835534213685474, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "280cd47da9a1ae85e4a2a9c39c58203b", "bug_code_uid": "4bca5e3b74f407331754e0491cf902d7", "src_uid": "43b8e9fb2bd0ec5e0250a33594417f63", "apr_id": "8c20a58e439d6ab7b00b2a648c3f418f", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t, n, k, N, x;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d %d\", &n, &k);\n        N=n;\n\n        if(n%k==0)\n            printf(\"%d\\n\", n);\n\n        else\n        {\n            while(N%k!=0)\n                N--;\n\n            x=n-N;\n\n            if(x>k/2)\n                N+=(k/2);\n            else\n                N+=x;\n\n            printf(\"%d\\n\", N);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t, n, k, N, x, y;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d %d\", &n, &k);\n\n        if(n%k==0)\n            printf(\"%d\\n\", n);\n\n        else\n        {\n            x=n%k;\n            y=n-x;\n\n            if(x>k/2)\n                y+=(k/2);\n            else\n                y+=x;\n\n            printf(\"%d\\n\", y);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9164370982552801, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "9501fe739851bf7dbf938d9c0eee760b", "bug_code_uid": "51473dc9e297b90430b0869a3b9f8952", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "0e3a6ba654e1b7036c34ca1651110b05", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n \nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    int i;\n    for(i=0; i<t; i++)\n    {\n        int n,k=2;\n        float x;\n        scanf(\"%d\", &n);\n        int intpart;\n        float decpart;\n        while(1)\n        {\n           x=n/(pow(2,k)-1);\n           intpart = (int)x;\n           decpart = x-intpart;\n           if(decpart == 0.0f)\n           {\n               break;\n           }\n           k++;\n        }\n        printf(\"%d\\n\", intpart);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n \nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    int i;\n    for(i=0; i<t; i++)\n    {\n        int n,k=2;\n        double x;\n        scanf(\"%d\", &n);\n        int intpart;\n        //float decpart;\n        while(1)\n        {\n           x=n/(pow(2,k)-1);\n           intpart = (int)x;\n           //decpart = x-intpart;\n           /*if(decpart == 0.0f)\n           {\n               break;\n           }*/\n           if(x==intpart)\n           {\n               break;\n           }\n           k++;\n        }\n        printf(\"%d\\n\", intpart);\n    }\n    return 0;\n}"}
{"similarity_score": 0.13464235624123422, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "3a2bd60a9b4e99177959e8cfe990dc88", "bug_code_uid": "fb3c2d1cd5eeaae8eba8f66eb3b79666", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "c09bd6589d89ed1616acfb15b6be6b01", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main (){\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tint input[m];\n\tfor(int i=0;i<m;i++)scanf(\"%d\",&input[i]);\n\tint sum=0,j=0;;\n\tfor(int i=1;i>0;i++){\n\t\tif(i==5)i=1;\n\t\tif(j==m)break;\n\t\tif(input[j]==i){\n\t\t\tsum++;\n\t\t\tdo{j++;\n\t\t\t}while(input[j]==i);\n\t\t\t\n\t\t}\n\t\telse{sum++;\n\t\t}\n\t\t\n\t\t\n\t}\n\tprintf(\"%d\",sum-1);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int n,m,sum,i;\n    scanf(\"%lld%lld\",&n,&m);\n    int a[100005];\n    for(i=0; i<m; i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    sum=a[0]-1;\n    for(i=0; i<m-1; i++)\n    {\n        if(a[i]>a[i+1])\n        {\n            sum+=a[i+1]+n-a[i];\n        }\n        else\n            sum+=a[i+1]-a[i];\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}"}
{"similarity_score": 0.5609756097560976, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "c2939d4d9d2c2978da40b91b7690e7c7", "bug_code_uid": "bcab20f73265b0508b7a878183b750e3", "src_uid": "2e8f7f611ba8d417fb7d12fda22c908b", "apr_id": "d5311f577d68de55696ef44ed3e390c6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main(){\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        int sum=0;n,a[n];\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++){\n            scanf(\"%d\",a+i);\n            sum+=a[i];\n        }\n        if((sum%2==0){\n            printf(\"NO\\n\");\n        }\n        else printf(\"YES\\n\");\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    \n    int t;\n    scanf(\"%d\",&t);\n    for(int z=0;z<t;z++){\n        int n;\n        scanf(\"%d\",&n);\n        int a[n],sum=0,nodd=0,neven=0;\n        for(int i=0;i<n;i++){\n            scanf(\"%d\",a+i);\n            sum+=a[i];\n            if(a[i]%2==0) neven+=1;\n            else nodd+=1;\n        }\n        if((sum%2)!=0){\n            printf(\"YES\\n\");\n            continue;\n            \n        }\n        if(nodd==0 || neven==0){\n            printf(\"NO\\n\");\n            continue;\n        }\n        printf(\"YES\\n\");\n        \n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9979612640163099, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "69bc2685956018795739703006ae18ae", "bug_code_uid": "cb4a43085f1f1b63888ebeabc166a18d", "src_uid": "8a4a46710104de78bdf3b9d5462f12bf", "apr_id": "7e52072c1e35f29dcf3284355a11021f", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,count=0;\nlong int m,i,a[1000][1000]={0},index[1000][1000]={0},x,y,max,min=10000000,j;\nscanf(\"%d %ld\",&n,&m);\nfor(i=0;i<m;i++)\n    {\n    scanf(\"%ld %ld\",&x,&y);\n    a[x-1][y-1]=1;\n    index[x-1][y-1]=i+1;\n    }\nif(n>=3)\n{\nfor(i=0;i<=n-3;i++)\n    {\n    for(j=0;j<=n-3;j++)\n        {\n        if(a[i][j]==1&&a[i+1][j]==1&&a[i+2][j]==1&&a[i][j+1]==1&&a[i+1][j+1]==1&&a[i+2][j+1]==1&&a[i][j+2]==1&&a[i+1][j+2]==1&&a[i+2][j+2]==1)\n            {max=0;\n            for(x=i;x<i+3;x++)\n                {\n                for(y=j;y<j+3;y++)\n                    {\n                    if(index[x][y]>max)\n                        {\n                        max=index[x][y];\n                        }\n                    }\n                }\n            if(max<min)\n                {\n                min=max;count=1;\n                }\n            }\n        }\n    }\nif(count==1)\n    {\n    printf(\"%ld\",min);\n    }\nelse\n    {\n    printf(\"-1\");\n    }\nreturn(0);\n}\n}", "fixed": "#include<stdio.h>\nint main()\n{\nint n,count=0;\nlong int m,i,a[1000][1000]={0},index[1000][1000]={0},x,y,max,min=10000000,j;\nscanf(\"%d %ld\",&n,&m);\nfor(i=0;i<m;i++)\n    {\n    scanf(\"%ld %ld\",&x,&y);\n    a[x-1][y-1]=1;\n    index[x-1][y-1]=i+1;\n    }\nif(n>=3)\n{\nfor(i=0;i<=n-3;i++)\n    {\n    for(j=0;j<=n-3;j++)\n        {\n        if(a[i][j]==1&&a[i+1][j]==1&&a[i+2][j]==1&&a[i][j+1]==1&&a[i+1][j+1]==1&&a[i+2][j+1]==1&&a[i][j+2]==1&&a[i+1][j+2]==1&&a[i+2][j+2]==1)\n            {max=0;\n            for(x=i;x<i+3;x++)\n                {\n                for(y=j;y<j+3;y++)\n                    {\n                    if(index[x][y]>max)\n                        {\n                        max=index[x][y];\n                        }\n                    }\n                }\n            if(max<min)\n                {\n                min=max;count=1;\n                }\n            }\n        }\n    }\n}\nif(count==1)\n    {\n    printf(\"%ld\",min);\n    }\nelse\n    {\n    printf(\"-1\");\n    }\n\nreturn(0);\n}\n"}
{"similarity_score": 0.5584415584415584, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "905bdac138d6129d619174226d232735", "bug_code_uid": "3e9f3149e5716b5c757be2235378cefd", "src_uid": "dc548fe1d8683b4b0ee4e0fa67638185", "apr_id": "13896e1af3d217e50dd2bb613a1f5d48", "difficulty": 1200, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long ll;\nint main(){\n\tll N,k,arr[100000];\n\tfor(int i=0;i<100000;i++)\n\t\tarr[i]=(i+1)*2;\n\tscanf(\"%lld%lld\",&N,&k);\n\tif(N==k)\n\t\tprintf(\"-1\");\n\telse{\n\t\tfor(int i = 0;i<N;i++){\n\t\t\tprintf(\"%lld \",arr[i]);\n\t\t}\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef long long ll;\nint main(){\n\tll N,k,arr[100000],temp;\n\tfor(int i=0;i<100000;i++)\n\t\tarr[i]=i+1;\n\tscanf(\"%lld%lld\",&N,&k);\n\tif(N==k)\n\t\tprintf(\"-1\");\n\telse{\n\t\tif((N-k-1)%2==0){\n\n\t\t\tfor(int i = k+1;i<N;i+=2){\n\t\t\t\ttemp=arr[i];\n\t\t\t\tarr[i]=arr[i+1];\n\t\t\t\tarr[i+1]=temp;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\ttemp=arr[0];\n\t\t\tarr[0]=arr[N-1];\n\t\t\tarr[N-1]=temp;\n\t\t\tfor(int i=k+1;i < N-1;i+=2){\n\t\t\t\ttemp=arr[i];\n\t\t\t\tarr[i]=arr[i+1];\n\t\t\t\tarr[i+1]=temp;\n\t\t\t}\n\t\t}\n\tfor(int i=0;i<N;i++)\n\t\tprintf(\"%lld \",arr[i]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.905511811023622, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "d0477c4b4b44cb3a87650cae37abeea2", "bug_code_uid": "16911e08d2784d13b6297104356d32ea", "src_uid": "7804152ee14264afef019c5ad33094f9", "apr_id": "8dae8805e7b1f2906ae52e07647a2a11", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int i,j,n,v,k,d,a[3003]= {0},x=0,m;\n    scanf(\"%ld %ld\",&n,&v);\n    for(i=0; i<n; i++)\n    {\n        m=0;\n        scanf(\"%ld\",&k);\n        for(j=0; j<k; j++)\n        {\n            scanf(\"%ld\",&d);\n            if(v>d)\n            {\n                m=1;\n                break;\n            }\n        }\n        if(m)\n        {\n            a[x]=i+1;\n            x++;\n        }\n    }\n    printf(\"%ld\\n\",x);\n    for(i=0; i<x; i++)\n    {\n        printf(\"%d \",a[i]);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int i,j,n,v,k,d,a[40004]={0},x=0,m=0;\n    scanf(\"%I64d %I64d\",&n,&v);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&k);\n        for(j=0; j<k; j++)\n        {\n            scanf(\"%I64d\",&d);\n            if(v>d)\n            {\n                m=1;\n            }\n        }\n        if(m==1)\n        {\n            a[x]=i+1;\n            x++;\n            m=0;\n        }\n    }\n    printf(\"%I64d\\n\",x);\n    for(i=0; i<x; i++)\n    {\n        printf(\"%I64d \",a[i]);\n    }\n}\n"}
{"similarity_score": 0.7986230636833046, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "da71662a3084880b14124c0f12d239c3", "bug_code_uid": "e007c6bf58bf663e1ebcab3213b0c833", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "80ac47eb96a5e07de02ee4c2044ebe41", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void){\nint num,disc[3],decision,count,i;\nscanf(\"%d\",&num);\ndecision = 0;\nfor(i = 0;i < num;i++){\n    scanf(\"%d %d %d\",disc[0],disc[1],disc[2]);\n    count = disc[0] + disc[1] + disc[2];\n    if(count >= 2)\n        decision++;\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(void){\nint num,disc[3],decision,count;\nscanf(\"%d\",&num);\ndecision = 0,count = 0;\nfor(int i = 0;i < num;i++){\n    scanf(\"%d %d %d\",&disc[0],&disc[1],&disc[2]);\n    count = disc[0] + disc[1] + disc[2];\n    if(count >= 2){\n        decision++;\n        }\n}\nprintf(\"%d\",decision);\nreturn 0;\n}\n"}
{"similarity_score": 0.6235606731620903, "equal_cnt": 32, "replace_cnt": 18, "delete_cnt": 4, "insert_cnt": 10, "fix_ops_cnt": 32, "lang": "GNU C11", "fix_code_uid": "e93af308d267e7483cde8f6fe82e4df7", "bug_code_uid": "c8ac3e47289917caf26d21fbcb85c7fb", "src_uid": "99d2b0386d101da802ac508ef8f7325b", "apr_id": "04c0619dcafb5ad561233759855ad5a9", "difficulty": null, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int t,n,i,j,c;\n    scanf(\"%d\",&t);\n    while(t--){\n       scanf(\"%d\",&n);\n        int cnt[n+1],index[n+1],a[n];\n        for(i=0;i<n+1;i++){\n        \tcnt[i]=0;\n        \tindex[i]=-1;\n        }\n       for(i=0;i<n;i++){\n       \tscanf(\"%d\",&a[i]);\n       \tc=a[i];\n       \tcnt[c]++;\n       \tindex[c]=i+1;\n       }\n       c=-1;\n       for(i=0;i<n;i++){\n       \tif(cnt[i]==1){\n       \t\tc=index[i];\n       \t\tbreak;\n       \t}\n       }\n       printf(\"%d\\n\",c);\n\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        int a[n];\n        int cnt[n+1],c,index[n+1];\n        for(int k=0;k<n+1;k++)\n        {\n            cnt[k]=0;\n            index[k]=-1;\n        }\n        for(int j=0;j<n;j++)\n        {\n            scanf(\"%d\",&a[j]);\n            c=a[j];\n            cnt[c]++;\n            index[c]=j+1;\n        }\n        c=-1;\n        for(int k=1;k<=n;k++)\n        {\n            if(cnt[k]==1)\n            {\n                c=index[k];\n                break;\n            }\n        }\n        printf(\"%d\\n\",c);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.36574585635359114, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "8625bae0ff1d68202b7d93938b664530", "bug_code_uid": "5ac8f121fb8872b5db663252f4f68f0f", "src_uid": "ff3216bcb009cb963d7e734ceb0e9722", "apr_id": "53218c9d8d1a1680c9f6994acf7ecf9d", "difficulty": 1000, "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint gcd (long long int j,long long int i){\r\n\tlong long int t;\r\n\tdo{\r\n\t\tt=j%i;\r\n\t\tj=i;\r\n\t\ti=t;\r\n\t}while(t!=0);\r\n\treturn j;\r\n}\r\n\r\nlong long int a[21];\r\n\r\nint gcdall(int n){\r\n\tint i,i1,judge=0;\r\n\tif(n==1&&a[1]==1){\r\n\t\tjudge=1;\r\n\t}\r\n\tfor(i=1;i<n;i++){\r\n\t\tfor(i1=i+1;i1<=n;i1++){\r\n\t\t\tif(gcd(a[i],a[i1])==1){\r\n\t\t\t\tjudge=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(judge==1){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn judge;\r\n}\r\n\r\nint main ()\r\n{\r\n\tint t,n,i,i1;\r\n\t\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\t\r\n\t\tint result;\r\n\t\tlong long int pre_a;\r\n\t\tfor (i=1;i<=n;i++){\r\n\t\t\tscanf(\"%lld\",&a[i]);\r\n\t\t}\r\n\t\tif(gcdall(n)==1){\r\n\t\t\tresult=0;\r\n\t\t}else{\r\n\t\t\tpre_a=a[n];\r\n\t\t\ta[n]=gcd(a[n],n);\r\n\t\t\tif(gcdall(n)==1){\r\n\t\t\t\tresult=1;\r\n\t\t\t}else{\r\n\t\t\t\ta[n]=pre_a;\r\n\t\t\t\ta[n-1]=gcd(a[n-1],n-1);\r\n\t\t\t\tif(gcdall(n)==1){\r\n\t\t\t\t\tresult=2;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tresult=3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",result);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint gcd (long long int j,long long int i){\r\n\tlong long int t;\r\n\tdo{\r\n\t\tt=j%i;\r\n\t\tj=i;\r\n\t\ti=t;\r\n\t}while(t!=0);\r\n\treturn j;\r\n}\r\n\r\nlong long int a[21];\r\n\r\nint gcdall(int n){\r\n\tint i,i1,judge=0;\r\n\tlong long int x=a[1];\r\n\tif(n==1&&a[1]==1){\r\n\t\tjudge=1;\r\n\t}\r\n\tfor(i=1;i<=n;i++){\r\n\t\tx=gcd(a[i],x);\r\n\t}\r\n\tif(x==1){\r\n\t\tjudge=1;\r\n\t}\r\n\treturn judge;\r\n}\r\n\r\nint main ()\r\n{\r\n\tint t,n,i,i1;\r\n\t\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\t\r\n\t\tint result;\r\n\t\tlong long int pre_a;\r\n\t\tfor (i=1;i<=n;i++){\r\n\t\t\tscanf(\"%lld\",&a[i]);\r\n\t\t}\r\n\t\tif(gcdall(n)==1){\r\n\t\t\tresult=0;\r\n\t\t}else{\r\n\t\t\tpre_a=a[n];\r\n\t\t\ta[n]=gcd(a[n],n);\r\n\t\t\tif(gcdall(n)==1){\r\n\t\t\t\tresult=1;\r\n\t\t\t}else{\r\n\t\t\t\ta[n]=pre_a;\r\n\t\t\t\ta[n-1]=gcd(a[n-1],n-1);\r\n\t\t\t\tif(gcdall(n)==1){\r\n\t\t\t\t\tresult=2;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tresult=3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",result);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.6546003016591252, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "4c34581e8f29e6d1eae842a3a1993fcd", "bug_code_uid": "7498b94d18abb07d8d286b2cec124e3b", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "76c1b55dd130a62e2c74b933e42fd0c8", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n\tlong long n, x, t;\r\n\tint k = 0;\r\n\tlong long sum = 0;\r\n\tscanf(\"%d\", &k);\r\n\twhile (k--) {\r\n\t\tscanf(\"%lld%lld%lld\", &n, &k, &t);\r\n\t\tlong long p = t / k;\r\n\t\tsum = 0;\r\n\t\tif (n <= p) {\r\n\t\t\tsum = n * (n - 1) / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsum = p * (1 + p) / 2 + (n - p - 1) * p;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\", sum);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main() {\r\n\tlong long n, x, t;\r\n\tint k = 0;\r\n\tscanf(\"%d\", &k);\r\n\twhile (k--) {\r\n\t\tscanf(\"%lld%lld%lld\", &n, &x, &t);\r\n\t\tlong long p = t / x;\r\n\t\tif (n <= p) {\r\n\t\t\tprintf(\"%lld\\n\", (n - 1) * n / 2);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"%lld\\n\", (p + 1) * p / 2 + (n - p - 1) * p);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9935691318327974, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2b1fbfc02f44d8ca0b332db65f4a6492", "bug_code_uid": "f72cb3723e5c3b02828f9d0985c62348", "src_uid": "8b50a0eb2e1c425455b132683d3e6047", "apr_id": "5c2d9ee8a0553411d728da71020feabc", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf (\"%d\",&t);\n    long long int a[2][1001];\n    for (int i = 0; i < t; i++)\n    {\n        scanf (\"%lld %lld\",&a[0][i],&a[1][i]);\n        \n    }\n    for (int i = 0; i < t; i++)\n    {\n        if (a[0][i]<=2)\n        {\n            printf (\"%d\\n\",1);\n        }\n        else\n        {\n            if ((a[0][i]-2)%2==0)\n            {\n                printf (\"%d\\n\",(a[0][i]-2)/a[1][i]+1);\n            }\n            else\n            {\n                printf (\"%d\\n\",(a[0][i]-2)/a[1][i]+2);\n            }\n            \n        }\n        \n        \n    }\n    return 0;\n    \n    \n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int t;\n    scanf (\"%d\",&t);\n    long long int a[2][1001];\n    for (int i = 0; i < t; i++)\n    {\n        scanf (\"%lld %lld\",&a[0][i],&a[1][i]);\n        \n    }\n    for (int i = 0; i < t; i++)\n    {\n        if (a[0][i]<=2)\n        {\n            printf (\"%d\\n\",1);\n        }\n        else\n        {\n            if ((a[0][i]-2)%a[1][i]==0)\n            {\n                printf (\"%d\\n\",(a[0][i]-2)/a[1][i]+1);\n            }\n            else\n            {\n                printf (\"%d\\n\",(a[0][i]-2)/a[1][i]+2);\n            }\n            \n        }\n        \n        \n    }\n    return 0;\n    \n    \n}"}
{"similarity_score": 0.9975369458128078, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1630713755d47e82bcf93d99635cbc85", "bug_code_uid": "3e590de991f99baa6ab8548c7544841d", "src_uid": "7e765c1b0e3f3e9c44de825a79bc1da2", "apr_id": "472ef303acc9b5c1b8b321136c75946c", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "include<stdio.h>\n \nint main() {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n,x;\n\t\tscanf(\"%d %d\",&n,&x);\n\t\tint a[n],b[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tfor(int i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&b[i]);\n\t\t}\n\t\tint j=n-1;\n\t\tint c=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif((a[i]+b[j--])>x){\n\t\t\t\tc=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(c==0){\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n \nint main() {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n,x;\n\t\tscanf(\"%d %d\",&n,&x);\n\t\tint a[n],b[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t}\n\t\tfor(int i=0;i<n;i++){\n\t\t\tscanf(\"%d\",&b[i]);\n\t\t}\n\t\tint j=n-1;\n\t\tint c=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif((a[i]+b[j--])>x){\n\t\t\t\tc=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(c==0){\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.4171322160148976, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "50368c27df8e2a32f1d3364327405934", "bug_code_uid": "6e1828dd16b662028729e66f3da4fd31", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "dc2b248a4b36a42ca62e82cfefe68785", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char s[102],s1[102];\n    gets(s);\n    //puts(s);\n    int i,c=1,j=0,k,t;\n    if(s[0]=='{' &&s[1]=='}'){\n        printf(\"0\");\n        return 0;\n    }\n\n    for(i=0;i<strlen(s);i++){\n        if(s[i]>='a' && s[i]<='z'){\n            s1[j]=s[i];\n            j++;\n        }\n    }\n    s1[j]='\\0';\n    //puts(s1);\n    for(i=0;i<strlen(s1);i++){\n        for(k=i+1;k<strlen(s1);k++){\n            if(s1[i]>s1[k]){\n                t=s1[i];\n                s1[i]=s1[k];\n                s1[k]=t;\n            }\n        }\n    }\n    //puts(s1);\n    //printf(\"%d\",strlen(s1));\n    for(i=0;i<strlen(s1)-1;i++){\n        if(s1[i]!=s1[i+1]){\n            //printf(\"%c\\n\",s1[i]);\n            c++;\n        }\n    }\n    printf(\"%d\",c);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char s[1010],s1[1010];\n    gets(s);\n    //puts(s);\n    int i,c=1,j=0,k,t;\n    if(s[0]=='{' &&s[1]=='}'){\n        printf(\"0\");\n        return 0;\n    }\n\n    for(i=0;i<strlen(s);i++){\n        if(s[i]>='a' && s[i]<='z'){\n            s1[j]=s[i];\n            //printf(\"at j=%d %c\\n \",j,s1[j]);\n            j++;\n        }\n    }\n    s1[j]='\\0';\n    //puts(s1);\n    for(i=0;i<strlen(s1);i++){\n        for(k=i+1;k<strlen(s1);k++){\n            if(s1[i]>s1[k]){\n                t=s1[i];\n                s1[i]=s1[k];\n                s1[k]=t;\n            }\n        }\n    }\n   // puts(s1);\n    //printf(\"%d\\n\",strlen(s1));\n    for(i=0;i<strlen(s1)-1;i++){\n        if(s1[i]!=s1[i+1]){\n            //printf(\"%c\\n\",s1[i]);\n            c++;\n        }\n    }\n    printf(\"%d\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.8977900552486188, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c75e8e473ba1e75467d5a3bc48bb1974", "bug_code_uid": "c495069dc1e02cf676043ee7ed9c2566", "src_uid": "e4381bd9f22c0e49525cc05cc5cd2399", "apr_id": "8e6c2acd25126600fc14b54614501c45", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(int argc, char const *argv[])\n{\n\tint x1=0,y1=0,ans=0,n,mode;\n\tchar a[100001];\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\",&a);\n\tfor(int i=0;i<n;i++){\n\t\tif(x1>y1) \n\t\t\tmode=1; \n\t\telse if(y1>x1)\n\t\t\tmode=0;\n\t\tif(a[i]=='U') \n\t\t\ty1++;\n\t\telse if(a[i]=='R') \n\t\t\tx1++;\n\t\tif((mode==1&&y1>x1)||(mode==0&&x1>y1)) \n\t\t\tans++;\n\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint x1=0,y1=0,ans=0,n,mode;\n\tchar a[100001];\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\",&a);\n\tfor(int i=0;i<n;i++){\n\t\tif(x1>y1) \n\t\t\tmode=1; \n\t\telse if(y1>x1)\n\t\t\tmode=0;\n\t\tif(a[i]=='U') \n\t\t\ty1++;\n\t\telse if(a[i]=='R') \n\t\t\tx1++;\n\t\tif(i)\n\t\tif((mode==1&&y1>x1)||(mode==0&&x1>y1)) \n\t\t\tans++;\n\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.7042735042735043, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "734a839694c284da60daf966f55b216d", "bug_code_uid": "72b895c3706ac18501adc203acf81dca", "src_uid": "06212223295c56a78a5d4e55c53a63e0", "apr_id": "82269a841351238e115545ac5a5b2047", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    while (n--)\n    {\n        int len;\n        scanf(\"%d\", &len);\n\n        char* types = calloc(1000000000, sizeof(char));\n        int totalTypes = 0;\n        {\n            int index;\n            for (index = 0; index < len; index++) {\n                int type;\n                scanf(\"%d\", &type);\n                if (!types[type]) {\n                    types[type] = 1;\n                    totalTypes++;\n                }\n            }\n        }\n        {\n            int index;\n            for (index = 1; index <= len; index++)\n                printf(\"%d \", index < totalTypes ? totalTypes : index);\n            printf(\"\\n\");\n        }\n        free(types);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfunc (const void * a, const void * b) {\n    return ( *(int*)a - *(int*)b );\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    while (n--)\n    {\n        int len;\n        scanf(\"%d\", &len);\n\n        int* types = malloc(len * sizeof(int));\n        {\n            int index;\n            for (index = 0; index < len; index++) {\n                int type;\n                scanf(\"%d\", &type);\n                types[index] = type;\n            }\n        }\n        qsort(types, len, sizeof(int), cmpfunc);\n        int totalTypes = 1;\n        {\n            int index;\n            for (index = 1; index < len; index++)\n                if (types[index - 1] != types[index])\n                    totalTypes++;\n        }\n        {\n            int index;\n            for (index = 1; index <= len; index++)\n                printf(\"%d \", index < totalTypes ? totalTypes : index);\n            printf(\"\\n\");\n        }\n        free(types);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9832512315270936, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5ccc46ff1201c62e839ac068941d44fc", "bug_code_uid": "0dbd7eb3658abd307aeead77b99621fa", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "a50c3b2b915db40a076a2c25df8f3657", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint a[100010],f[100010],ans[100010],l[100010];\nmain()\n{\n    int i,j,k,n,m;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<m;i++)\n    scanf(\"%d\",&l[i]);\n    ans[n-1]=1;\n    for(i=n-2;i>=0;i--)\n    {\n        if(f[a[i]]==0)\n        {\n            ans[i]=ans[i+1]+1;\n            f[a[i]]=1;\n\n        }\n\n        else\n        ans[i]=ans[i+1];\n    }\n    for(i=0;i<m;i++)\n    {\n        printf(\"%d\\n\",ans[l[i]-1]);\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint a[100010],f[100010],ans[100010],l[100010];\nmain()\n{\n    int i,j,k,n,m;\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=0;i<m;i++)\n    scanf(\"%d\",&l[i]);\n    ans[n-1]=1;\n    f[a[n-1]]=1;\n    for(i=n-2;i>=0;i--)\n    {\n        if(f[a[i]]==0)\n        {\n            ans[i]=ans[i+1]+1;\n            f[a[i]]=1;\n\n        }\n\n        else\n        ans[i]=ans[i+1];\n    }\n    for(i=0;i<m;i++)\n    {\n        printf(\"%d\\n\",ans[l[i]-1]);\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9549902152641878, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "9f6f27256f3610736ac114ed63fe1324", "bug_code_uid": "388e7c30a752b0335c0c81584043dd37", "src_uid": "5aad0a82748d931338140ae81fed301d", "apr_id": "987be68548f08ea6d3726e636fcc896a", "difficulty": 1700, "tags": ["combinatorics", "number theory", "probabilities", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint f(int l, int r,int p)\n{\n\treturn (r-l+p-1)/p;\n}\n\ndouble  pr(int l,int r,int p)\n{\n\treturn (double)f(l,r,p)/((double)r - (double)l + 1.0);\n}\nint main()\n{\n\tint n,p;\n\tscanf(\"%d %d\",&n,&p);\n\tdouble exp = 0;\n\tint l[n],r[n],i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",l+i,r+i);\n\t}\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tdouble f1,f2;\n\t\tf1 = pr(l[i],r[i],p);\n\t\tint temp = i+1;\n\t\tif(i>n-1) temp = 0;\n\t\tf2 = pr(l[temp],r[temp],p);\n\t\texp+=((f1+f2 - f1*f2)*2000);\n\t}\n\tprintf(\"%lf\\n\",exp);\n\treturn 0;\n\n}", "fixed": "#include <stdio.h>\n\nint f(int l, int r,int p)\n{\n\treturn r/p - (l-1)/p;\n}\n\ndouble  pr(int l,int r,int p)\n{\n\treturn (double)f(l,r,p)/((double)r - (double)l + 1.0);\n}\nint main()\n{\n\tint n,p;\n\tscanf(\"%d %d\",&n,&p);\n\tdouble exp = 0;\n\tint l[n],r[n],i;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",l+i,r+i);\n\t}\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\tdouble f1,f2;\n\t\tf1 = pr(l[i],r[i],p);\n\t\tint temp = i+1;\n\t\tif(temp>n-1) temp = 0;\n\t\tf2 = pr(l[temp],r[temp],p);\n\t\texp+=((f1+f2 - f1*f2)*2000);\n\t\t//printf(\"%d %d %d\\n\",fi);\n\t}\n\tprintf(\"%lf\\n\",exp);\n\treturn 0;\n\n}"}
{"similarity_score": 0.8441479684657368, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "d91d0c76ddd85d0304fafe1c216c1400", "bug_code_uid": "5977abed35c572fdfcb72aa45ecaa6bc", "src_uid": "822e8f394a59329fa05c96d7fb35797e", "apr_id": "099e70a9ae762391d918da8bc7dfa996", "difficulty": 1100, "tags": ["number theory", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<stdbool.h>\nfloat max(float a,float b)\n{\n\tif(a>b) return a;\n\telse return b;\n}\n\nint main()\n{\n\tint n;\n\tfloat n1,n2;\n\tscanf(\"%d%f%f\",&n,&n1,&n2);\n\tfloat a[n],temp;\n\tfor(int i=0;i<n;i++) scanf(\"%f\",&a[i]);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{temp=a[i];a[i]=a[j];a[j]=temp;}\n\t\t}\n\t}\n//\tfor(int i=0;i<n;i++) printf(\"%f \",a[i]);\n\tint i=n-1;\n\tfloat m=n1+n2-max(n1,n2),sum1=0;\n\twhile(m!=0 && i>=0)\n\t{\n\t\tsum1=sum1+a[i];\n\t\tm--;\n\t\ti--;\n\t}\n\tm=max(n1,n2);\n\tfloat sum2=0;\n\twhile(m!=0 && i>=0)\n\t{\n\t\tsum2=sum2+a[i];\n\t\tm--;\n\t\ti--;\n\n\t}\n\tdouble ans=((sum2/max(n1,n2))+(sum1/(n1+n2-max(n1,n2))));\n\tprintf(\"%lf\",ans);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<stdbool.h>\nfloat max(float a,float b)\n{\n\tif(a>b) return a;\n\telse return b;\n}\n\nint main()\n{\n\tint n;\n\tfloat n1,n2,bucket[1000000]={0};\n\tscanf(\"%d%f%f\",&n,&n1,&n2);\n\tint  a[n],temp;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tbucket[a[i]]++;\n\t}\n\tint i,j=0;\n\tfor(i=0;i<1000000;i++)\n\t{\n\t\twhile(bucket[i]!=0)\n\t\t{\n\t\t\ta[j]=i;\n\t\t\tj++;\n\t\t\tbucket[i]--;\n\t\t}\n\t}\n\n/*\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{temp=a[i];a[i]=a[j];a[j]=temp;}\n\t\t}\n\t}*/\n//\tfor(int i=0;i<n;i++) printf(\"%f \",a[i]);\n\ti=n-1;\n\tfloat m=n1+n2-max(n1,n2),sum1=0;\n\twhile(m!=0 && i>=0)\n\t{\n\t\tsum1=sum1+a[i];\n\t\tm--;\n\t\ti--;\n\t}\n\tm=max(n1,n2);\n\tfloat sum2=0;\n\twhile(m!=0 && i>=0)\n\t{\n\t\tsum2=sum2+a[i];\n\t\tm--;\n\t\ti--;\n\n\t}\n\tdouble ans=((sum2/max(n1,n2))+(sum1/(n1+n2-max(n1,n2))));\n\tprintf(\"%lf\",ans);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9975429975429976, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6266cea73af24db43cd0ad9782397dcf", "bug_code_uid": "5112630a956ba75d2886d3b240dcb5c0", "src_uid": "447ebe088a0a60a7a44a3fc76056bc65", "apr_id": "ae8426d1328fa9a0688192a1341585fc", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n\tint t,z;\n\tscanf (\"%d\",&t);\n\tfor (z=0;z<1;z++)\n\t{\nint n,i;\t\t\nlong long int x,y,dif=1,ar[90]={0};\n\t\tscanf(\"%lld %lld\",&x,&y);\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%lld\",&ar[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(dif==0||ar[i]>x/y)\n\t\t\t\tbreak;\n\t\t\tdif=x-ar[i]*y;\n\t\t\tx=y;\n\t\t\ty=dif;\n\t\t}\n\t\tif(dif==0&&i==n)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n\tint t,z;\n\t//scanf (\"%d\",&t);\n\tfor (z=0;z<1;z++)\n\t{\nint n,i;\t\t\nlong long int x,y,dif=1,ar[90]={0};\n\t\tscanf(\"%lld %lld\",&x,&y);\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%lld\",&ar[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(dif==0||ar[i]>x/y)\n\t\t\t\tbreak;\n\t\t\tdif=x-ar[i]*y;\n\t\t\tx=y;\n\t\t\ty=dif;\n\t\t}\n\t\tif(dif==0&&i==n)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;}\n"}
{"similarity_score": 0.9891304347826086, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6a997083e17cad43f129d2e56146e3b9", "bug_code_uid": "6fa185d46a346d1064a12a6e7864e1f2", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "14718b7c240892289466a865302ce7f5", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "b,r,m=100;main(a){scanf(\"%*d\");for(;scanf(\"%d%d\",&a,&b)-2;m=b<m?b:m,r+=m*a);printf(\"%d\",r);}", "fixed": "b,r,m=100;main(a){scanf(\"%*d\");for(;scanf(\"%d%d\",&a,&b)/2;m=b<m?b:m,r+=m*a);printf(\"%d\",r);}"}
{"similarity_score": 0.9977973568281938, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "fdd553fbf311f0221b0ac8cd2093cccb", "bug_code_uid": "4f2a80c90fb800c2e3cec720a11449ee", "src_uid": "34aa41871ee50f06e8acbd5eee94b493", "apr_id": "7dc5ca353e5762c1cb5a96586bf67e0f", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint r[n],b[n],g[n],great=0,i;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d %d %d\",&r[i],&b[i],&g[i]);\n\t\t\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(r[i]>b[i]){\n\t\t\tif(r[i]>g[i]){\n\t\t\t\tgreat=r[i];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tgreat=g[i];\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(b[i]>g[i]){\n\t\t\t\tgreat=b[i];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tgreat=g[i];\n\t\t\t}\n\t\t}\n\t\tif((great-2)<=(r[i]+g[i]+b[i]-great)){\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n\t\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint r[n],b[n],g[n],great=0,i;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d %d %d\",&r[i],&b[i],&g[i]);\n\t\t\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(r[i]>b[i]){\n\t\t\tif(r[i]>g[i]){\n\t\t\t\tgreat=r[i];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tgreat=g[i];\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(b[i]>g[i]){\n\t\t\t\tgreat=b[i];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tgreat=g[i];\n\t\t\t}\n\t\t}\n\t\tif((great-1)<=(r[i]+g[i]+b[i]-great)){\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n\t\n}\n"}
{"similarity_score": 0.9985272459499264, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "53088035103c2d91878079a2f7ab379d", "bug_code_uid": "d3cc36d6d0c9735d8ce87c2faff20be1", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "f7d41354108105731cd8e5ce5f4b98ad", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tlong long int i,j,k,l,m=1,n,t;\n\tl=1;\n\t//printf(\"Enter the number's n and t\\n\");\n\tscanf(\"%lld%lld\",&n,&t);\n\tfor(i=1;i<n;i++)\n\t{scanf(\"%lld\",&k);\n      if(l==t&&m==1) {printf(\"YES\"); m=22;}\n      if(l==i) l=i+k;\n\t}\n\tif(m==1&&l==t) {printf(\"YES\"); m==22;}\n\tif(m==1) printf(\"NO\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tlong long int i,j,k,l,m=1,n,t;\n\tl=1;\n\t//printf(\"Enter the number's n and t\\n\");\n\tscanf(\"%lld%lld\",&n,&t);\n\tfor(i=1;i<n;i++)\n\t{scanf(\"%lld\",&k);\n      if(l==t&&m==1) {printf(\"YES\"); m=22;}\n      if(l==i) l=i+k;\n\t}\n\tif(m==1&&l==t) {printf(\"YES\"); m=22;}\n\tif(m==1) printf(\"NO\");\n\treturn 0;\n}"}
{"similarity_score": 0.46153846153846156, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "14a269ba3af719616422915023b2b4dd", "bug_code_uid": "cc081d2aaebf3ed4356ffc356f824cd8", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "6c20f62573f9824867716c776f7f61f5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n        long int n, c, count = 0;\n        scanf(\"%ld %ld\", &n, &c);\n        long int ara[n], i, j, f=0;\n\n        for(i=0; i<n; i++){\n                scanf(\"%ld\", &ara[i]);\n        }\n\n        for(i=0; i<n; i++){\n                if(i == n-1 && f) count++;\n                else if(ara[i] + c >= ara[i+1]) {\n                        count++;\n                        f = 1;\n                }\n\n                else {\n                        count=0;\n                        f  = 0;\n                }\n        }\n\n        printf(\"%ld\\n\", count);\n        return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n        long int n, c, count = 0;\n        scanf(\"%ld %ld\", &n, &c);\n        long int ara[n], i, j;\n\n        for(i=0; i<n; i++){\n                scanf(\"%ld\", &ara[i]);\n                if(i>0){\n                        if(ara[i] - ara[i-1] <= c) count++;\n                        else count = 0;\n                }\n        }\n\n        printf(\"%ld\\n\", count+1);\n        return 0;\n}\n"}
{"similarity_score": 0.6268922528940338, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "92fbe207cda98b6b1568fb6fc3540533", "bug_code_uid": "819d85115a6429b97ba73d20f0b91333", "src_uid": "d3aa0632053634e0602b995cfb476d83", "apr_id": "52d1b00dee9b426046161efbb1d0b0b0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t,n,a;\r\n\tint tab[1000];\r\n\tscanf(\"%d\",&t);\r\n\tfor(int i = 0 ; i < t ; i++)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int y = 0 ; y < n ; y++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a);\r\n\t\t\ttab[y] = a;\r\n\t\t}\r\n\t\tint f = 1;\r\n\t\tfor( int x = 0 ; x < n ; x++)\r\n\t\t{\r\n\t\t\tif(tab[x] == 1)\r\n\t\t\t{\r\n\t\t\t\tf++;\r\n\t\t\t}\r\n\t\t\tif((x > 0 )&& (tab[x] == 1 ) && (tab[x - 1] == 1))\r\n\t\t\t{\r\n\t\t\t\tf = f + 4;\r\n\t\t\t}\r\n\t\t\tif(tab[x] == 0 && n == 1)\r\n\t\t\t{\r\n\t\t\t\tf = f + 0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif(tab[x] == 0 && tab[x + 1] == 0 )\r\n\t\t\t{\r\n\t\t\t\tf = -1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(tab[x] == 0)\r\n\t\t\t\tf = f + 0;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", f);\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t,n,a;\r\n\tint tab[1000];\r\n\tscanf(\"%d\",&t);\r\n\tfor(int i = 0 ; i < t ; i++)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int y = 0 ; y < n ; y++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a);\r\n\t\t\ttab[y] = a;\r\n\t\t}\r\n\t\tint f = 1;\r\n\t\tfor( int x = 0 ; x < n ; x++)\r\n\t\t{\r\n\t\t\tif((x > 0 )&& (tab[x] == 1 ) && (tab[x - 1] == 1))\r\n\t\t\t\tf = f + 5;\r\n\t\t\telse if((x > 0 )&& (tab[x] == 0 ) && (tab[x - 1] == 0))\r\n\t\t\t{\r\n\t\t\t\tf = -1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse if (tab [x] == 1)\r\n\t\t\t\tf++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", f);\r\n\t}\r\n}"}
{"similarity_score": 0.9596774193548387, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "3e6f63e378b3ebb1eab1c944fd7ced22", "bug_code_uid": "ea48ef5adc8642d2c8fbc9c6baca65f5", "src_uid": "d504d894b2f6a830c4d3b4edc54395be", "apr_id": "b613c68ffa79fa37810acb2d164ca894", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,k,i,j,c=0,flag=0;\n\tchar s[300010];\n\tscanf(\"%d %d\",&n,&k);\n\tscanf(\"%s\",s);\n\tfor(i=1;i<n-1;i++)\n\t{\n\t\tif(s[i]=='#' && i<n-1-k)\n\t\t{\n\t\t\tc=1;\n\t\t\tfor(j=i+1;j<i+1+k;j++)\n\t\t\t\tif(s[j]=='#')\n\t\t\t\t\tc++;\n\t\t\tif(c>=k)\n\t\t\t{\n\t\t\t\tflag =1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti=i+k;\n\t\t}\n\t}\n\tif(flag==1)\n\t\tprintf(\"NO \\n\");\n\telse\n\t\tprintf(\"YES \\n\");\n\treturn 0;\t\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,k,i,j,c=0,flag=0;\n\tchar s[300010];\n\tscanf(\"%d %d\",&n,&k);\n\tscanf(\"%s\",s);\n\tfor(i=1;i<n-1;i++)\n\t{\n\t\tif(s[i]=='#' && i<n-k)\n\t\t{\n\t\t\tc=1;\n\t\t\tfor(j=i+1;j<i+k;j++)\n\t\t\t\tif(s[j]=='#')\n\t\t\t\t\tc++;\n\t\t\t\telse\n\t\t\t\t\tbreak;\t\n\t\t\tif(c>=k)\n\t\t\t{\n\t\t\t\tflag =1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti=j;\n\t\t}\n\t}\n\tif(flag==1)\n\t\tprintf(\"NO \\n\");\n\telse\n\t\tprintf(\"YES \\n\");\n\treturn 0;\t\t\n}\n"}
{"similarity_score": 0.9959839357429718, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fad29f97bfc86e79ce4a070eea60b77e", "bug_code_uid": "41bea45be8668b3c4b900b615c431582", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "ed05ee4588f1834b8fb9c7145a59e012", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main(){\n int i,n,t;\n long long int s,x,g;\n scanf(\"%d\",&n);\n for(i=0;i<n;i++){\n  scanf(\"%lld\",&x);\n  t=0;g=x;\n  while(g){g/=2;t++;}g=1;\n  while(t--){g*=2;}\n  printf(\"%lld\",(x+x*x)/2-2*g+2);\n }\n return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main(){\n int i,n,t;\n long long int s,x,g;\n scanf(\"%d\",&n);\n for(i=0;i<n;i++){\n  scanf(\"%lld\",&x);\n  t=0;g=x;\n  while(g){g/=2;t++;}g=1;\n  while(t--){g*=2;}\n  printf(\"%lld\\n\",(x+x*x)/2-2*g+2);\n }\n return 0;\n}\n"}
{"similarity_score": 0.974155069582505, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "321b9ba2a25beef8d96d1c91204e72f0", "bug_code_uid": "a85d5f08578f622f4eab6a5f58c47ed0", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "a9edc260a3332534c45d7fab40527e60", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    while(n>0)\n    {\n        int i = 0;\n        while(i < k && n > 0)\n        {\n            putchar('a'+ i);\n            n--;\n            i++;\n        }\n        n--;\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    while(n>0)\n    {\n        int i = 0;\n        while(i < k && n > 0)\n        {\n            putchar('a'+ i);\n            n--;\n            i++;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9972144846796658, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "3d975cd0a055093243135a943b8bcc05", "bug_code_uid": "373618cd39abb0665520850f72c21e6a", "src_uid": "409073ef839a7d0cdb900c06ee4a841c", "apr_id": "1d46a9ab2c08920017cf3de070938de0", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int tt=0;tt<t;tt++){\n\t\tint n,m;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tchar a[n][m];\n\t\tfor(int i=0;i<n;i++){\n\t\t\t\tscanf(\"%s\",&a[i]);\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tif(a[i][n-1]!='D'){\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<m-1;i++){\n\t\t\tif(a[n-1][i]!='R'){\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int tt=0;tt<t;tt++){\n\t\tint n,m;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tchar a[n][m];\n\t\tfor(int i=0;i<n;i++){\n\t\t\t\tscanf(\"%s\",&a[i]);\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tif(a[i][m-1]!='D'){\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<m-1;i++){\n\t\t\tif(a[n-1][i]!='R'){\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}"}
{"similarity_score": 0.8309636650868878, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "6e01c51d0a76b514f43efcdb86372e5a", "bug_code_uid": "daebb30351ca2f30164e159c13df205d", "src_uid": "840a4e16454290471faa5a27a3c795d9", "apr_id": "c9ff089bcf8b5d3bbff5fd51dbc91fe2", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main () {\n\tlong long int test,t,x[1006],r;\n\tscanf(\"%lld\",&test);\n\tfor (t=0;t<test;t++)\n\t{\n\t\tscanf(\"%lld\",&x[t]);\n\t}\n\n//\tfor (t=0;t<test;t++)\n//\tprintf(\"%lld\",x[t]);\t\n\n\tfor (t=0;t<test;t++)\n\t{\n\t\tr=x[t]%14;\n\n\t\tif (r>=1 && r<=6)\n\t\tprintf(\"YES\\n\");\n\t\t\n\t\telse\n\t\tprintf(\"NO\\n\");\n\t}\n\n\treturn 0;\n}\t\n\n", "fixed": "#include<stdio.h>\nint main () {\n\tlong long int test,t,x[1006],r;\n\tscanf(\"%lld\",&test);\n\tfor (t=0;t<test;t++)\n\t{\n\t\tscanf(\"%lld\",&x[t]);\n\t}\n\n\tfor (t=0;t<test;t++)\n\t{\n\t\tif (x[t]>14)\n\t\t{\n\t\t\tr=x[t]%14;\n\n\t\t\tif (r>=1 && r<=6)\n\t\t\tprintf(\"YES\\n\");\n\t\t\n\t\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\n\t\telse\n\t\tprintf(\"NO\\n\");\t\n\t}\n\n\treturn 0;\n}\t\n\n"}
{"similarity_score": 0.9989189189189189, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f9362a328d454c63367dc17164787375", "bug_code_uid": "7112c7ca1f73f9fc7043eb737c961330", "src_uid": "d5549c0627c236d82541a67ccbe7977d", "apr_id": "8a3b9ecfc6b04c5063f1f7ec89e0a154", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//A. Stable Arrangement of Rooks \r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n \r\nint main()\r\n{\r\n\tint test;\r\n\tscanf(\"%d\",&test);\r\n\twhile(test--)\r\n\t{\r\n\t\tint n,k;\r\n\t\tscanf(\"%d   %d\\n\",&n,&k);\r\n\t\tif(n==1 && k==1)\r\n\t\t{\r\n\t\t\tprintf(\"R\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint t;\r\n\t\t\tif(n%2 == 0)\r\n\t\t\t{\r\n\t\t\t\tt = n/2;\r\n\t\t\t}\r\n\t\t\tif(n%2 != 0)\r\n\t\t\t{\r\n\t\t\t\tt = n/2+1;\r\n\t\t\t}\r\n             \r\n\t\t\tint count = k;\r\n\t\t\tif(t<k)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\\n\",-1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(int i =1; i<=n; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(int j=1; j<=n; j++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(i==j)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(i%2!=0 && j%2!=0)\r\n\t\t\t\t\t\t    {\r\n\t\t\t\t\t\t\t    if(count > 0)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprintf(\"R\");\r\n\t\t\t\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprintf(\".\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprintf(\".\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\".\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tprintf(\"\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "//A. Stable Arrangement of Rooks \r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n \r\nint main()\r\n{\r\n\tint test;\r\n\tscanf(\"%d\",&test);\r\n\twhile(test--)\r\n\t{\r\n\t\tint n,k;\r\n\t\tscanf(\"%d   %d\\n\",&n,&k);\r\n\t\tif(n==1 && k==1)\r\n\t\t{\r\n\t\t\tprintf(\"R\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint t;\r\n\t\t\tif(n%2 == 0)\r\n\t\t\t{\r\n\t\t\t\tt = n/2;\r\n\t\t\t}\r\n\t\t\tif(n%2 != 0)\r\n\t\t\t{\r\n\t\t\t\tt = n/2+1;\r\n\t\t\t}\r\n             \r\n\t\t\tint count = k;\r\n\t\t\tif(t<k)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\\n\",-1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(int i =1; i<=n; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(int j=1; j<=n; j++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(i==j)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(i%2!=0 && j%2!=0)\r\n\t\t\t\t\t\t    {\r\n\t\t\t\t\t\t\t    if(count > 0)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprintf(\"R\");\r\n\t\t\t\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprintf(\".\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprintf(\".\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\".\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tprintf(\"\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8603104212860311, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "86dc3b09b5745cdaf3d62412bd304440", "bug_code_uid": "c74e727072404b9d19f76663e9a8f74f", "src_uid": "816907d873bce3573ce1e5ae3f494768", "apr_id": "3b52029e4f6ea51ff71cea38fc47df49", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n    short n;\n    scanf(\"%d\",&n);\n    char *str[n]; \n    for(int i=0;i<n;i++)\n    {\n        char sttr[1000];\n        scanf(\"%s\",sttr);\n        str[i]=(char *)malloc(strlen(sttr)+1);\n        strcpy(str[i],sttr);\n        int a=strlen(str[i]);\n        char *temp=(char *)malloc(a+1);\n        char temps[a+1];\n        int q;\n        for(q=0;q<a;q++)\n            temps[q]=*(str[i]+a-q-1);\n        temps[q]=0;\n        strcpy(temp,temps);\n        str[i]=temp;\n        if(strstr(str[i],\"op\"))\n            printf(\"FILIPINO\\n\");\n        else if(strstr(str[i],\"adinm\"))\n            printf(\"KOREAN\\n\");\n        else if(strstr(str[i],\"used\")||strstr(str[i],\"usam\"))\n            printf(\"JAPANESE\\n\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n    short n;\n    scanf(\"%d\",&n);\n    char *str[n]; \n    for(int i=0;i<n;i++)\n    {\n        char sttr[1000];\n        scanf(\"%s\",sttr);\n        str[i]=(char *)malloc(strlen(sttr)+1);\n        strcpy(str[i],sttr);\n        int a=strlen(str[i]);\n        char *temp=(char *)malloc(a+1);\n        char temps[a+1];\n        int q;\n        for(q=0;q<a;q++)\n            temps[q]=*(str[i]+a-q-1);\n        temps[q]=0;\n        strcpy(temp,temps);\n        str[i]=temp;\n        if(/*strstr(str[i],\"op\")*/str[i][0]=='o'&&str[i][1]=='p')\n            printf(\"FILIPINO\\n\");\n        else if(/*strstr(str[i],\"adinm\")*/str[i][0]=='a'&&str[i][1]=='d'&&str[i][2]=='i'&&str[i][3]=='n'&&str[i][4]=='m')\n            printf(\"KOREAN\\n\");\n        else if(/*strstr(str[i],\"used\")*/(str[i][0]=='u'&&str[i][1]=='s'&&str[i][2]=='e'&&str[i][3]=='d')||/*strstr(str[i],\"usam\")*/(str[i][0]=='u'&&str[i][1]=='s'&&str[i][2]=='a'&&str[i][3]=='m'))\n            printf(\"JAPANESE\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.8809523809523809, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0623bdea36a2cb82494c7925cad39acb", "bug_code_uid": "15c085bba34c0d3c142476b3a0062d6c", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "39c61fde55ad3aa43362f59df541ee95", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t,n;\n\tscanf(\"%d\",&t);\n\n\tint i;\n\tfor(i=0;i<t;i++)\n\t{\n\n\t\tint a[26]={0};\n\t\tint flag=0;\n\t\tscanf(\"%d\",&n);\n\t\tchar b[n];\n\t\tint j; \n\t\tfflush(stdin);\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\t//b[j]=getch();\n\t\t\tscanf(\"%c\",&(b[j]));\n\t\t}\n\t\t//fflush(stdin);\n\t\t\n\t\ta[b[0]-'A']=1;\n\t\tfor(j=1;j<n;j++)\n\t\t{\n\t\t\tif(b[j]!=b[j-1])\n\t\t\t{\n\t\t\t\tif(a[b[j]-'A']!=0)\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[b[j]-'A']=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag==0)\n\t\t\tprintf(\"YES\\n\");\n\t}\n\n\treturn 0;\n}\n\t   \t\t \t\t\t \t \t\t\t\t   \t \t\t\t\t  \t", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t,n;\n\tscanf(\"%d\",&t);\n\n\tint i;\n\tfor(i=0;i<t;i++)\n\t{\n\n\t\tint a[26]={0};\n\t\tint flag=0;\n\t\tscanf(\"%d\",&n);\n\t\tchar b[n];\n\t\tint j; \n\t\t//fflush(stdin);\n\t\t//int x=getch();\n\t\t//for(j=0;j<n;j++)\n\t\tj=0;\n\t\twhile(j<n)\n\t\t{\n\t\t\t//b[j]=getch();\n\t\t\tscanf(\"%c\",&(b[j]));\n\t\t\tif(b[j]<'A')\n\t\t\t\tcontinue;\n\t\t\tj++;\n\t\t}\n\t\t//fflush(stdin);\n\t\t\n\t\ta[b[0]-'A']=1;\n\t\tfor(j=1;j<n;j++)\n\t\t{\n\t\t\tif(b[j]!=b[j-1])\n\t\t\t{\n\t\t\t\tif(a[b[j]-'A']!=0)\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[b[j]-'A']=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(flag==0)\n\t\t\tprintf(\"YES\\n\");\n\t}\n\n\treturn 0;\n}\n  \t \t \t\t   \t\t \t\t\t \t  \t \t \t\t  \t"}
{"similarity_score": 0.4675324675324675, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "039d2320464b36f620cd8570c65f9ee7", "bug_code_uid": "1432bda691026ac440b1da878de014ad", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "716281055caa611260dad33141ae4df3", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint LCM (int x, int y,int r){\n     int lcm = 0;\n     int i;\n     for (i = x;i<=r ; i++){\n      if (((i % x) == 0) && ((i % y) == 0)){\n\t  lcm = i;\n\t  break;\n\t    }\n      }\n  return lcm;\n }\n\nint main (){\n  int t;\n  scanf (\"%d\", &t);\n  while (t){\n      int l, r;\n      scanf (\"%d %d\", &l, &r);\n      \n      int i, j,flag=0;\n      for (i = l; i <= r; i++){\n\t   for (j = i + 2; j <= r; j++){\n\t      int lcm = LCM (i, j,r);\n\t      if ((lcm >= l) && (lcm <= r)){\n\t\t       printf (\"%d %d\\n\", i, j);\n\t\t \n\t\t          flag = 1;\n\t\t          break;\n\t\t      }\n\t     }\n\t     if(flag == 1) break;\n\t     \n\t  }\n\t  if(flag == 0) printf(\"-1 -1\\n\");\n\t  t--;\n    }\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\n\n\nint main (){\n  int t;\n  scanf (\"%d\", &t);\n  while (t){\n      int l, r;\n      scanf (\"%d %d\", &l, &r);\n      if((r-l)>=l){\n          printf(\"%d %d\\n\", l,2*l); \n      }\n      else printf(\"-1 -1\\n\");\n\t  t--;\n    }\n  return 0;\n}\n"}
{"similarity_score": 0.9951040391676866, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "eedef02185baa62fd511678c80d8ac8f", "bug_code_uid": "6683c48af538c1cc40b0febb9d72c154", "src_uid": "86a2e0854f9faf0b119d0d5e4b8fe952", "apr_id": "36224aa58146fb19453bc7170b5aa1fb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int z = 0; z < t; z++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        char a[n];\r\n        scanf(\"%s\", a);\r\n        char b[n];\r\n        scanf(\"%s\", b);\r\n\r\n        int d = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (a[i] == 'R')\r\n            {\r\n                if (b[i] != 'R')\r\n                {\r\n                    d = 1;\r\n                    break;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (b[i] == 'R')\r\n                {\r\n                    d = 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (d == 0)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int z = 0; z < t; z++)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        char a[n + 1];\r\n        scanf(\"%s\", a);\r\n        char b[n + 1];\r\n        scanf(\"%s\", b);\r\n\r\n        int d = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (a[i] == 'R')\r\n            {\r\n                if (b[i] != 'R')\r\n                {\r\n                    d = 1;\r\n                    break;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (b[i] == 'R')\r\n                {\r\n                    d = 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (d == 0)\r\n            printf(\"YES\\n\");\r\n        else\r\n            printf(\"NO\\n\");\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.39600665557404324, "equal_cnt": 13, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "8ff3510d6cc50625ca512d7a5f759eb7", "bug_code_uid": "67cfdf1f603e2109657062756373d151", "src_uid": "bf8bbbb225813cdf42e7a2e454f0b787", "apr_id": "d8c68405fff2560de4d80fe3fa63648c", "difficulty": 1900, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nusing namespace std;\nbool bj[1000005];\n\nint main()\n{\n\tint n, a, now = 2, ans;\n\tscanf(\"%d\", &n);\n\tbool flag = false;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &a);\n\t\tans = now;\n\t\tif (!flag&&a>ans)\n\t\t\tans = a;\n\t\twhile (bj[ans])\n\t\t\t++ans;\n\t\tprintf(\"%d \", ans);\n\t\tif (ans>a)\n\t\t\tflag = true;\n\t\tfor (int j = now; j*j <= ans; ++j)\n\t\t{\n\t\t\tif (ans%j)\n\t\t\t\tcontinue;\n\t\t\twhile (ans%j == 0)\n\t\t\t\tans /= j;\n\t\t\tif (!bj[j])\n\t\t\t\tfor (int t = j; t<1000005; t += j)\n\t\t\t\t\tbj[t] = true;\n\t\t}\n\t\tif (ans != 1)\n\t\t\tfor (int j = ans; j<1000005; j += ans)\n\t\t\t\tbj[j] = true;\n\t\twhile (bj[now])\n\t\t\t++now;\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint vi[10000001]={0};\nint main()\n{\n\tint n, a, now = 2;\n\tint ans;\n\tscanf(\"%d\", &n);\n\tint flag = 0;\n\tint i;\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", &a);\n\t\tans = now;\n\t\tif (!flag&&a>ans)\n\t\t\tans = a;\n\t\twhile (vi[ans])\n\t\t\tans++;\n\t\tprintf(\"%d \", ans);\n\t\tif (ans>a)\n\t\t\tflag = 1;\n\t\tfor (int j = now; j*j <= ans; j++)\n\t\t{\n\t\t\tif (ans%j)\n\t\t\t\tcontinue;\n\t\t\twhile (ans%j == 0)\n\t\t\t\tans /= j;\n\t\t\tif (!vi[j])\n\t\t\t\tfor (int t = j; t<10000001; t += j)\n\t\t\t\t\tvi[t] = 1;\n\t\t}\n\t\tif (ans != 1)\n\t\t\tfor (int j = ans; j<10000001; j += ans)\n\t\t\t\tvi[j] = 1;\n\t\twhile (vi[now])\n\t\t\tnow++;\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5442477876106194, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d23b29bdcaba1bf01daeadcf22208612", "bug_code_uid": "0b9c848e62ccc84ff08d8eb125579413", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "471616196dd70780f15648175b57dcff", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint n,a,b;\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\tscanf(\"%d %d\",&a,&b);\r\n\t\tif(b==1) printf(\"NO\\n\");\r\n\t\telse printf(\"YES\\n%d %d %d \\n\",a,a*b,a*(b+1));\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n\r\nint t;\r\n\r\nscanf(\"%d\",&t);\r\n\r\nfor (int i=0; i<t; i++) {\r\n\r\nlong long a,b;\r\n\r\nscanf(\"%lld%lld\",&a,&b);\r\n\r\nif (b==1){ printf(\"NO\\n\");\r\n\r\n}\r\n\r\nelse {\r\n\r\nprintf(\"YES\\n%lld %lld %lld\\n\",a,a*b, a* (b+1));\r\n\r\n} }\r\n\r\nreturn 0;\r\n\r\n}"}
{"similarity_score": 0.4734576757532281, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "48e2acc62982d0a74776f3a95d9d328a", "bug_code_uid": "275c8fdf66a05772917d83636685038b", "src_uid": "4ebea3f56ffd43efc9e1496a0ef7fa2d", "apr_id": "50d830483b25d0bf34de2ea206d0c346", "difficulty": 1200, "tags": ["constructive algorithms", "*special", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdbool.h>\n\nvoid main()\n{\n    int n;\n    scanf(\"%d\",n);\n    int ans=0,temp=0,temp2=0;\n    temp=n/3;\n    if(n%3==2) temp2=1;\n    int i;\n    for(i=0;i<temp;i++)\n        printf(\"7\");\n    if(temp2) printf(\"1\");\n\n}\n", "fixed": "#include<stdio.h>\n\nvoid main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int ans=0,temp=0,temp2=0;\n   /* dp[1]=0;\n    dp[2]=1;\n    dp[3]=7;\n    dp[4]=7;\n    dp[5]=71;\n    dp[6]=77;\n    dp[7]=77;\n    dp[8]=771;\n    dp[9]=777;\n    dp[10]=777;\n    dp[11]=7771;\n    dp[12]=7777;\n    dp[13]=7777;\n    dp[14]=77771;\n*/\n    temp=n/2;\n    if(n%2!=0) {printf(\"7\");\n    temp--;\n    }\n    int i;\n    for(i=0;i<temp;i++)\n        printf(\"1\");\n\n    exit(0);\n}\n"}
{"similarity_score": 0.8396694214876033, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5014247d6078064b8541a284163ba4c6", "bug_code_uid": "6679adf1ecb1e842719527a0ec1fe23f", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "cb584b4e4ebab72b41c657ffbd75fa82", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a,b,i=1,t;\n    scanf(\"%d\",&t);\n\n    for(int j=0;j<t;j++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        while(b*i<a)\n            i++;\n        printf(\"%d\\n\",b*i-a);\n        i=1;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a,b,i=1,t;\n    scanf(\"%d\",&t);\n    int x;\n    for(int j=0;j<t;j++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        while(b*i<a)\n        {\n            x=a-b*i;\n            x/=b;\n            x=x>0?x:1;\n            i+=x;\n        }\n        printf(\"%d\\n\",b*i-a);\n        i=1;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4880450070323488, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "45c0d9c83ae27d511205d532cb475151", "bug_code_uid": "a64269450fa01232fa709e9623e20027", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "ecd09404ac8439d8a93bb4132acbdadb", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int i, l1, l2, count = 0;\n    char str1[10001], str2[10001];\n    scanf(\"%s %s\", str1, str2);\n\n    l1 = strlen(str1);\n    l2 = strlen(str2);\n\n    if(l1 >= l2){\n        for(i=0; i<l1; i++){\n            if(str1[i] != str2[i])\n                count++;\n            else\n                break;\n        }\n        if(count == 0)\n            printf(\"-1\");\n        else\n            printf(\"%d\", count);\n    }\n\n    else{\n        for(i=0; i<l2; i++){\n            if(str2[i] != str1[i])\n                count++;\n            else\n                break;\n        }\n        if(count == 0)\n            printf(\"-1\");\n        else\n            printf(\"%d\", count);\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int i, l1, l2, p = 0;\n    char str1[100001], str2[100001];\n    scanf(\"%s %s\", str1, str2);\n\n    l1 = strlen(str1);\n    l2 = strlen(str2);\n\n    if(l1 >= l2){\n        for(i=0; i<l1; i++){\n            if(str1[i] != str2[i]){\n                p = 1;\n                break;\n            }\n        }\n        if(p == 1)\n            printf(\"%d\", l1);\n        else\n            printf(\"-1\");\n    }\n\n    else{\n        for(i=0; i<l2; i++){\n            if(str2[i] != str1[i]){\n                p = 1;\n                break;\n            }\n        }\n        if(p == 1)\n            printf(\"%d\", l2);\n        else\n            printf(\"-1\");\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9964830011723329, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b2cc1209c77c8bd95322a01fc5bc7f23", "bug_code_uid": "5bf36e0750b66416ca471a89ce62feff", "src_uid": "7a8c4ba98a77097faff625b94889b365", "apr_id": "64c89b5a1ac25d51dfc36e720c0ed9ee", "difficulty": 900, "tags": ["greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--)\r\n   {\r\n       int n;\r\n       long long a[110],b,s,i;\r\n       scanf(\"%d\",&n);\r\n       for(i=0;i<n;i++)\r\n       {\r\n           scanf(\"%lld\",&a[i]);\r\n\r\n       }s=0;\r\n       for(i=0;i<n;i++)\r\n       {s+=a[i];\r\n       if(s<=i*(i+1)/2)\r\n        break;\r\n       }\r\n       if(i==n)printf(\"YES\\n\");\r\n       else printf(\"NO\\n\");   }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--)\r\n   {\r\n       int n;\r\n       long long a[110],b,s,i;\r\n       scanf(\"%d\",&n);\r\n       for(i=0;i<n;i++)\r\n       {\r\n           scanf(\"%lld\",&a[i]);\r\n\r\n       }s=0;\r\n       for(i=0;i<n;i++)\r\n       {s+=a[i];\r\n       if(s<i*(i+1)/2)\r\n        break;\r\n       }\r\n       if(i==n)printf(\"YES\\n\");\r\n       else printf(\"NO\\n\");   }\r\n}"}
{"similarity_score": 0.7689243027888446, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "01018c6de16378634d92c2f218c4f49e", "bug_code_uid": "2df3e2f7308bf30c1cd2e4bfbc697139", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "6935eb7cb930e205123b69bd899af65a", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t>0)\n\t{\n\t\tint l,r,a=3,b,c,d;\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tif(2*l<=r) {printf(\"%d %d\\n\",l,2*l);goto k;\n\t\t}\n\t\telse if(l%2==0) \n\t\t{\twhile (a<=r)\n\t\t{if((l*a/2)<=r) {printf(\"%d %d\\n\",l,l*a/2);goto k;\n\t\t}\n\t\telse a+=2;} \t}\n\t\tprintf(\"-1 -1\\n\");\n\tk:\tt--;\t\t\n\t}\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t>0)\n\t{\n\t\tint l,r,a=3,b,c,d;\n\t\tscanf(\"%d %d\",&l,&r);\n\t\tif(2*l<=r) printf(\"%d %d\\n\",l,2*l);\n\t\telse \n\t\tprintf(\"-1 -1\\n\");\n\t\tt--;\t\t\n\t}\n}\n"}
{"similarity_score": 0.9496514329976762, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0a9222691d6d0a90b12c6871e4d3b5be", "bug_code_uid": "1cb638a02ded118464f2d910082c99cb", "src_uid": "0d70984ab8bd7aecd68c653adf54fc08", "apr_id": "404c1044024064b0a41899046673aa67", "difficulty": 1200, "tags": ["*special", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <string.h>\nint changes(char* str)\n{\n    int j;\n    for(j=0;j<strlen(str);j++)\n    {\n        if(str[j]>='A'&& str[j]<='Z')\n            str[j]=str[j]-'A'+'a';\n        if(str[j]=='o')\n            str[j]='0';\n        if(str[j]=='l'||str[j]=='i')\n            str[j]='1';\n    }\n}\n\nint main()\n{\n    char s[50];\n    char str[50];\n    int n,flag=0,i,j;\n    scanf(\"%s\",s);\n    changes(s);\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",str);\n        changes(str);\n        if(strcmp(str,s)==0)\n            flag=1;\n    }\n    if(flag==0)\n        printf(\"Yes\\n\");\n    else\n        printf(\"No\\n\");\n\n\n}", "fixed": "#include<stdio.h>\n#include <string.h>\nint changes(char* str)\n{\n    int j;\n    for(j=0;j<strlen(str);j++)\n    {\n        if(str[j]>='A'&& str[j]<='Z')\n            str[j]=str[j]-'A'+'a';\n        if(str[j]=='o')\n            str[j]='0';\n        if(str[j]=='l'||str[j]=='i'|| str[j]=='L'||str[j]=='I')\n            str[j]='1';\n    }\n}\n\nint main()\n{\n    char s[60];\n    char str[60];\n    int n,flag=0,i,j;\n    scanf(\"%s\",s);\n    changes(s);\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",str);\n        changes(str);\n        if(strcmp(str,s)==0)\n            flag=1;\n    }\n    if(flag==0)\n        printf(\"Yes\\n\");\n    else\n        printf(\"No\\n\");\n\n\n}"}
{"similarity_score": 0.9818181818181818, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7487212b8e7069d192d3b0fe1b5627c8", "bug_code_uid": "47eef71fc33570b19a0ccc3ad85d6338", "src_uid": "e27620d3a43ab42edf930b37ce214c9e", "apr_id": "d14b9e1bb1f682265f59b57ee1a77354", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n\tint t, n, i, j;\r\n\tchar a[n];\r\n\tchar b[n];\r\n\tchar c,d,e;\r\n\tscanf(\"%d\\n\",&t);\r\n\tfor (i=1;i<=t;i++){\r\n\t \r\n\tscanf(\"%d\\n\",&n);\r\n\tscanf(\"%[^\\n]%*c\",b);\r\n\r\n\ta[0]='1';\r\n\tfor (j=1;j<n;j++){\r\n\r\n\ta[j]='1';\r\n\t\r\n\tc=a[j]+b[j];\r\n\td=a[j-1]+b[j-1];\r\n\te=a[j+1]+b[j+1];\r\n\r\n\tif (c==d){\r\n\ta[j]='0';\r\n\t}\r\n\r\n\t\r\n\r\n\t}\r\n\r\n    printf(\"%s\\n\",a);\r\n\r\n\t}\r\n\r\n\treturn 0;\r\n\t\r\n\t\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n\tint t, n, i, j;\r\n\tchar a[100001];\r\n\tchar b[100001];\r\n\tchar c,d,e;\r\n\tscanf(\"%d\\n\",&t);\r\n\tfor (i=1;i<=t;i++){\r\n\t \r\n\tscanf(\"%d\\n\",&n);\r\n\tscanf(\"%[^\\n]%*c\",b);\r\n\r\n\ta[0]='1';\r\n\tfor (j=1;j<n;j++){\r\n\r\n\ta[j]='1';\r\n\t\r\n\tc=a[j]+b[j];\r\n\td=a[j-1]+b[j-1];\r\n\te=a[j+1]+b[j+1];\r\n\r\n\tif (c==d){\r\n\ta[j]='0';\r\n\t}\r\n\r\n\t\r\n\r\n\t}\r\n\r\n    printf(\"%s\\n\",a);\r\n\r\n\t}\r\n\r\n\treturn 0;\r\n\t\r\n\t\r\n}"}
{"similarity_score": 0.3097744360902256, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "3695c20ead59022fe9a2aa091589486e", "bug_code_uid": "320596cb99ff50b06d4cbdca15089d57", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "f67486a5c31981a267c7db4283f0db7e", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t    int n,k;\n\t    scanf(\"%d %d\",&n,&k);\n\t    while(k--){\n\t        int c=0,i;\n\t        for(i=2;i<=n;i++){\n\t            if(n%i==0){\n\t                c=i;\n\t                break;\n\t            }\n\t        }\n\t        n=n+c;\n\t    }\n\t    printf(\"%d\\n\",n);\n\t}\n\treturn 0;\n}", "fixed": "#include  <stdio.h>\nlong long f(long long n){\n    for(long long i=2;i<=n;i++){\n        if(n%i==0)return i;\n    }\n    return 1;\n}\nint main(){\n    int t;scanf(\"%d\",&t);\n    while(t--){\n       long long n,k;scanf(\"%lld%lld\",&n,&k);\n       if(k>0){\n           n=n+f(n);\n           n=n+2*(k-1);\n       }printf(\"%lld\\n\",n);\n    }\n    \n}"}
{"similarity_score": 0.8022792022792022, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "3853dfbb283228f7cf38984720ba7e5f", "bug_code_uid": "b93372e916ce6eb898afae10a205f2a9", "src_uid": "0560658d84cbf91c0d86eea4be92a4d9", "apr_id": "7e36d39cb4a500ffd6e733220f2975e3", "difficulty": 1500, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <string.h>\n#include <stdlib.h>\nint main(int argc, char const *argv[])\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tint count[n+1],flag[n+1];\n\tfor(int i=0;i<=n;i=i+1){\n\t\tcount[i]=0;\n\t\tflag[i]=0;\n\t}\n\tfor(int i=0;i<n;i=i+1){\n\t\tscanf(\"%d\",&a[i]);\n\t\tcount[a[i]]+=1;\n\t}\n\tint num=0;\n\tint missing_num[n];\n\tint j=0;\n\tfor (int i = 1; i <= n; i=i+1)\n\t{\n\t\tif(count[i]==0){\n\t\t\tmissing_num[j]=i;\n\t\t\tj=j+1;\n\t\t}\n\t}\n\tint k=0;\n\tfor (int i = 0; i < n; i=i+1)\n\t{\n\t\tif(count[a[i]]>1){\n\t\t\tif(missing_num[k]<a[i]){\n\t\t\t\ta[i]=missing_num[k];\n\t\t\t\tcount[a[i]]-=1;\n\t\t\t\tk+=1;\n\t\t\t}else{\n\t\t\t\tif(flag[a[i]]==0){\n\t\t\t\t\tflag[a[i]]=1;\n\t\t\t\t}else{\n\t\t\t\t\ta[i]=missing_num[k];\n\t\t\t\t\tcount[a[i]]-=1;\n\t\t\t\t\tk+=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",j);\n\tfor (int i = 0; i < n; i=i+1)\n\t{\n\t\tprintf(\"%d \",a[i]);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <string.h>\n#include <stdlib.h>\nint main(int argc, char const *argv[])\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tint count[n+1],flag[n+1];\n\tfor(int i=0;i<=n;i=i+1){\n\t\tcount[i]=0;\n\t\tflag[i]=0;\n\t}\n\tfor(int i=0;i<n;i=i+1){\n\t\tscanf(\"%d\",&a[i]);\n\t\tcount[a[i]]+=1;\n\t}\n\tint num=0;\n\tint missing_num[n];\n\tint j=0;\n\tfor (int i = 1; i <= n; i=i+1)\n\t{\n\t\tif(count[i]==0){\n\t\t\tmissing_num[j]=i;\n\t\t\t//printf(\"%d \",missing_num[j]);\n\t\t\tj=j+1;\n\t\t}\n\t}\n//\tprintf(\"%d\\n\",a[n-1]);\n\tint k=0;\n\tfor (int i = 0; i < n; i=i+1)\n\t{\n\t\tif(count[a[i]]>1){\n\t\t\tif(missing_num[k]<a[i]){\n\t\t\t\tcount[a[i]]=count[a[i]]-1;\n\t\t\t\ta[i]=missing_num[k];\n\t\t\t\tk+=1;\n\t\t\t}else{\n\t\t\t\tif(flag[a[i]]==0){\n\t\t\t\t\tflag[a[i]]=1;\n\t\t\t\t}else{\n\t\t\t\t\tcount[a[i]]=count[a[i]]-1;\n\t\t\t\t\ta[i]=missing_num[k];\n\t\t\t\t\tk+=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",j);\n\tfor (int i = 0; i < n; i=i+1)\n\t{\n\t\tprintf(\"%d \",a[i]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9966777408637874, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "33127bc912c7f50001ffbcb8d576e54b", "bug_code_uid": "7109fcfd9ed7940acba1cb29b2b64790", "src_uid": "dd2cd365d7afad9c2b5bdbbd45d87c8a", "apr_id": "29ec08c76a5db1e9a24b045a0c8a88da", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(void)\n{\n\tint t, i;\n\tscanf(\"%d\",&t);\n\twhile(t!=0)\n\t{\n\t\tint n, team=0, temp;\n\t\tscanf(\"%d\",&n);\n\t\tint ar[n];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&ar[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t\tfor(j=0;j<n-i-1;j++)\n\t\t\t\tif(ar[j]>ar[j+1])\n\t\t\t\t{\n\t\t\t\t\ttemp=ar[j];\n\t\t\t\t\tar[j]=ar[j+1];\n\t\t\t\t\tar[j+1]=temp;\n\t\t\t\t}\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(abs(ar[i]-ar[i-1])<=1)\n\t\t\t{\n\t\t\t\t\tteam=1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",team+1);\n\t\tt--;\n\t}\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(void)\n{\n\tint t, i, j;\n\tscanf(\"%d\",&t);\n\twhile(t!=0)\n\t{\n\t\tint n, team=0, temp;\n\t\tscanf(\"%d\",&n);\n\t\tint ar[n];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&ar[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t\tfor(j=0;j<n-i-1;j++)\n\t\t\t\tif(ar[j]>ar[j+1])\n\t\t\t\t{\n\t\t\t\t\ttemp=ar[j];\n\t\t\t\t\tar[j]=ar[j+1];\n\t\t\t\t\tar[j+1]=temp;\n\t\t\t\t}\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(abs(ar[i]-ar[i-1])<=1)\n\t\t\t{\n\t\t\t\t\tteam=1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",team+1);\n\t\tt--;\n\t}\n}"}
{"similarity_score": 0.946058091286307, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "efa4cb483d55fb84a450fe1d76615988", "bug_code_uid": "e116f12028d2725f9d5dd3c30a947836", "src_uid": "57f0f36905d7769167b7ba9d3d9be351", "apr_id": "b0915e7e28fbf35f06dd0dfabc625f2a", "difficulty": 1100, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <limits.h>\r\n\r\nint gcd(int a, int b)\r\n{\r\n    if (a == 0)\r\n    {\r\n        return b;\r\n    }\r\n    return gcd(b % a, a);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        int min = INT_MAX;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            min = arr[i] < min ? arr[i] : min;\r\n        }\r\n        int gc = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            gc = gcd(gc, arr[i] - min);\r\n        }\r\n        if (gc)\r\n            printf(\"%d\\n\", gc);\r\n        else\r\n            printf(\"-1\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <limits.h>\r\n\r\nint gcd(int a, int b)\r\n{\r\n    if (a == 0)\r\n    {\r\n        return b;\r\n    }\r\n    return gcd(b % a, a);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        int min = INT_MAX;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            min = arr[i] < min ? arr[i] : min;\r\n        }\r\n        int gc = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            gc = gcd(gc, arr[i] - min);\r\n        }\r\n        if (!gc)\r\n            gc = -1;\r\n        printf(\"%d\\n\", gc);\r\n    }\r\n}"}
{"similarity_score": 0.9934782608695653, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "125ab8f1dcbc730a9fd9031e9156050d", "bug_code_uid": "fe36bb062dbdc694516ab55634e7a4ad", "src_uid": "e59cddb6c941b1d7556ee9c020701007", "apr_id": "60d32e4bf21ac7c86b170e29bad591a4", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tlong int n,t,a;\n\tscanf(\"%d\",&t);\n\tfor(int _=0;_<t;_++)\n\t{\t\n\t\tlong int c0=0,c1=0,c2=0;\n\t\tscanf(\"l%d\",&n);\n\t\tint i=0;\n\t\twhile(i<n){\n\t\t\tscanf(\"%ld\",&a);\n\t\t\tif(a%3==0){\n\t\t\t\tc0++;\n\t\t\t}\n\t\t\telse if(a%3==1){\n\t\t\t\tc1++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tc2++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif(c1==c2) c0+=c1;\n\t\telse if(c1>c2)\n\t\t{\n\t\t\tc0+=c2;\n\t\t\tc1-=c2;\n\t\t\tc0=c0+(c1/3);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc0+=c1;\n\t\t\tc2-=c1;\n\t\t\tc0=c0+(2*c2)/3;\n\t\t}\n\t\tprintf(\"%d \\n\",c0);\n\t}return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tlong int n,t,a;\n\tscanf(\"%d\",&t);\n\tfor(int _=0;_<t;_++)\n\t{\t\n\t\tlong int c0=0,c1=0,c2=0;\n\t\tscanf(\"%ld\",&n);\n\t\tint i=0;\n\t\twhile(i<n){\n\t\t\tscanf(\"%ld\",&a);\n\t\t\tif(a%3==0){\n\t\t\t\tc0++;\n\t\t\t}\n\t\t\telse if(a%3==1){\n\t\t\t\tc1++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tc2++;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif(c1==c2) c0+=c1;\n\t\telse if(c1>c2)\n\t\t{\n\t\t\tc0+=c2;\n\t\t\tc1-=c2;\n\t\t\tc0=c0+(c1/3);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc0+=c1;\n\t\t\tc2-=c1;\n\t\t\tc0=c0+(c2)/3;\n\t\t}\n\t\tprintf(\"%d \\n\",c0);\n\t}return 0;\n}\n"}
{"similarity_score": 0.9805735430157262, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0653c982daa3e2791f46ddb6db7283aa", "bug_code_uid": "d972cef25afde7d7b43d979dae0507b9", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "e0d515a43b8cbcb674c7552d493446f8", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   long long int n,i,max=-1,min=90000000001,cmax,cmin,p;\n    scanf(\"%I64d\",&n);\n    int a;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a);\n        if(a>max)\n        {\n            max=a;\n            cmax=0;\n        }\n        if(a<min)\n        {\n            min=a;\n            cmin=0;\n        }\n        if(max==a)\n            cmax=cmax+1;\n        if(min==a)\n            cmin=cmin+1;\n    }\n    p=cmin*cmax;\n    if(max==min)\n    {\n        p=n*(n-1);\n        p=p/2;\n    }\n    printf(\"%d %d\\n\",max-min,p);\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n   long long int n,i,max=-1,min=90000000001,cmax,cmin,p,a;\n    scanf(\"%I64d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&a);\n        if(a>max)\n        {\n            max=a;\n            cmax=0;\n        }\n        if(a<min)\n        {\n            min=a;\n            cmin=0;\n        }\n        if(max==a)\n            cmax=cmax+1;\n        if(min==a)\n            cmin=cmin+1;\n    }\n    p=cmin*cmax;\n    if(max==min)\n    {\n        p=n*(n-1);\n        p=p/2;\n    }\n    printf(\"%I64d %I64d\\n\",max-min,p);\n}\n"}
{"similarity_score": 0.2824506749740395, "equal_cnt": 21, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "f7c37bf40ab4702b09cca6ef02f04d14", "bug_code_uid": "850ceee569a345be97b4ec20a6ef1b16", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "70fff258b47c4634a0fff323be7f6f76", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nlong long t,n,x,A[100000],B[100000],min,max,i,s,h;\nscanf(\"%lld\",&t);\nfor(h=1;h<=t;h++)\n{\n    s=0;\n    max=0;\n    scanf(\"%lld%lld\",&n,&x);\n    for(i=1;i<=n;i++)\n    {\n\n        scanf(\"%lld\",&A[i]);\n        s=s+A[i];\n        if(A[i]%x!=0)\n        {\n            B[i]=A[i]/x+1;\n        }\n        else\n            B[i]=A[i]/x;\n        max=max+B[i];\n    }\n    min=s/x;\n\n    printf(\"%lld %lld\\n\",min,max);\n}\nreturn 0;\n}\n\n\n\n\t\t    \t\t\t\t  \t  \t\t \t\t \t\t\t\t\t\t\t\t", "fixed": "#include <stdio.h>\nint main()\n{\n    int a[100005],t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int max = 0,min = 0,sum = 0;\n        int n,x,i;\n        scanf(\"%d%d\",&n,&x);\n        for( i = 1; i <= n; i++)\n        {\n            scanf(\"%d\",&a[i]);\n            sum = sum+a[i];\n            max = max+(a[i] + x - 1) / x;\n        }\n        min = (sum + x - 1) / x;\n        printf(\"%lld %lld\\n\",min,max);\n    }\n    return 0;\n}\n\n    \t   \t \t \t\t      \t \t\t\t\t \t \t\t"}
{"similarity_score": 0.9098712446351931, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "d137a988a7041311d2ceceee416f0d1e", "bug_code_uid": "0172c7e03d03622d6d53ef0d55d01d34", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "053296d50ae86969d73e2ce4e7b117b0", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,k,j,m,n,a[100][100];\n\tlong long int sum=0,count=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<3;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tfor(k=0;k<n;k++)\n\t{\n\t\tfor(m=0;m<3;m++)\n\t\t{\n\t\t\tsum=sum+a[m][k];\n\t\t}\n\tif(sum==0)\n\t\tcount++;\n\t}\n\tif(count==3)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}\n\t\t\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i,k,j,m,n,a[100][100];\n\tlong long int count=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<3;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tfor(k=0;k<3;k++)\n\t{\n\t\tint sum=0;\n\t\tfor(m=0;m<n;m++)\n\t\t{\n\t\t\tsum=sum+a[m][k];\n\t\t}\n\tif(sum==0)\n\t\tcount++;\n\t}\n\tif(count==3)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}\n\t\t\n\n"}
{"similarity_score": 0.8442028985507246, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2749171342d0654d47766c06f7a544e1", "bug_code_uid": "b9c80b69ae17440f3543bb54f51e7417", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "de9ebb2e2bb298b8d38131c901dd4500", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\tint n,i,j=0,k;\n\tchar str1[1002],str2[1002];\n\tscanf(\"%d\",&n);\n\tscanf(\"%s%s\",str1,str2);\n\tfor(i=0;i<n;i++)\n\t{   j = fabs(str1[i] - str2[i]);\n\t\tif(j>5)\n\t\t\tj = 10-j;\n\t\tk = k + j;\n\t}\n\tprintf(\"%d\",k);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint main()\n{\n\tint n,i,j=0,k=0;\n\tscanf(\"%d\",&n);\n\tchar str1[n],str2[n];\n\tscanf(\"%s%s\",str1,str2);\n\tfor(i=0;i<n;i++)\n\t{   j = fabs(str1[i] - str2[i]);\n\t\tif(j>5)\n\t\t\tj = 10-j;\n\t\tk = k + j;\n\t}\n\tprintf(\"%d\",k);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.6388489208633094, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "36779b46951a98df53da9668a2efbee8", "bug_code_uid": "81238b2112881659ac40c2c909ee089f", "src_uid": "be3295b4d43a11ee94022b103f4221a5", "apr_id": "1124894ce4045d651c11f48c75300cba", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 1; i <= t; i++){\r\n\t\tint n;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tprintf(\"%d \", n);\r\n\t\tfor (int j = 2; j <= n; j++){\r\n\t\t\tprintf(\"%d \", j - 1);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint p[100007];\r\n\r\nint gcd(int a, int b){\r\n\treturn b == 0 ? a : gcd(b, a % b);\r\n}\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 1; i <= t; i++){\r\n\t\tint n, t;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tt = n;\r\n\t\tfor (int j = n; j >= 1; j--){\r\n\t\t\tif (gcd(j, t) == 1){\r\n\t\t\t\tp[j] = t;\r\n\t\t\t\tt = j - 1;\r\n\t\t\t} else {\r\n\t\t\t\tp[j] = j - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (int j = 1; j <= n; j++){\r\n\t\t\tprintf(\"%d \", p[j]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.8504347826086956, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "69ae0228924c535b71a5e5515b9b8ca7", "bug_code_uid": "e09b97bbd5a5f234ec18d146748f3a6b", "src_uid": "471f80e349e70339eedd20d45b16e253", "apr_id": "4aed88ac54795d4e7d7ff1b6dc1bb31a", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main( void )\n{\n    int t, n, l, r;\n\n    scanf( \"%d\", &t );\n\n    while( t > 0 ) {\n        scanf( \"%d\", &n );\n\n        int time = 0;\n        while( n > 0 ) {\n            scanf( \"%d %d\", &l, &r );\n\n            if( time < r ) {\n                if( time < l )\n                    printf( \"%d \", l );\n                else\n                    printf( \"%d \", l + time );\n\n                time += 1;\n            } else {\n                printf( \"%d \", 0 );\n            }\n\n            n--;\n        }\n        printf( \"\\n\" );\n        t--;\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main( void )\n{\n    int t, n, l, r;\n\n    scanf( \"%d\", &t );\n\n    while( t > 0 ) {\n        scanf( \"%d\", &n );\n\n        int time = 0;\n        while( n > 0 ) {\n            scanf( \"%d %d\", &l, &r );\n\n            if( time <= l ) {\n                printf( \"%d \", l );\n                time = l + 1;\n            } else if( time <= r ) {\n                printf( \"%d \", time );\n                time += 1;\n            } else {\n                printf( \"%d \", 0 );\n            }\n            n--;\n        }\n        printf( \"\\n\" );\n        t--;\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8187702265372169, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c1dc30ce4857d394144145c8b7ea4607", "bug_code_uid": "2f4a1d957f50225ff2d32241cd527e39", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "a1e8f2c83ced9af65e6cc5347f46c755", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint n, m, a[100001], x, s = 0, i = 0;\n\tscanf(\"%d\", &n);\n\twhile (n--)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\ts = s + x;\n\t\ta[i++] = s;\n\t}\n\tint t = i;\n\tscanf(\"%d\", &m);\n\twhile (m--)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\tfor (i = 0; i < t; i++)\n\t\t\tif (x <= a[i])\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\", i + 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tint n, m, a[1000001], x, s = 0, i;\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\ts = s + x;\n\t\ta[s] = i + 1;\n\t}\n\tscanf(\"%d\", &m);\n\twhile (m--)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\tfor (i = x; i <= s; i++)\n\t\t\tif (a[i] > 0)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\", a[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n}"}
{"similarity_score": 0.8557377049180328, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "edc681fd47a1a144564dffac62f6b1d2", "bug_code_uid": "acb039705bcd44cb2fb5e60b486b461d", "src_uid": "bcc758394d012519f0865479b3c6770c", "apr_id": "224fcc71ffd512f94f84f405436bbc9a", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint comp(const void *pa, const void *pb)\n{\n\t long long int*a = (long long int*)pa;\n    long long int*b = (long long int*)pb;\n    return a[1] - b[1];\n    \n}\nint main()\n{\nint n, curPop;\nscanf(\"%d%d\",&n,&curPop);\nint i,x,y,pop;\nlong long int a[1001][2];\nfor(i=0;i<n;i++)\n{\n\tscanf(\"%d%d%d\",&x,&y,&pop);\n\ta[i][0]=(x*x+y*y);\n\ta[i][1]=pop;\n\n}\n\nqsort(a,n,sizeof(a[0]),comp);\ni=0;\nwhile(curPop<1000000)\n{\n\tcurPop=curPop+a[i][1];\n\ti++;\n}\nprintf(\"%.7f\\n\",sqrt(a[i-1][0]) );\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\nint comp(const void *pa, const void *pb)\n{\n\t long long int*a = (long long int*)pa;\n    long long int*b = (long long int*)pb;\n    return a[0] - b[0];\n    \n}\nint main()\n{\nint n, curPop;\nscanf(\"%d%d\",&n,&curPop);\nlong long int i,x,y,pop;\nlong long int a[1001][2];\nfor(i=0;i<n;i++)\n{\n\tscanf(\"%lld%lld%lld\",&x,&y,&pop);\n\ta[i][0]=(x*x+y*y);\n\ta[i][1]=pop;\n\n}\n\nqsort(a,n,sizeof(a[0]),comp);\ni=0;\n//for(i=0;i<n;i++)\n//printf(\"%lld %lld\\n\",a[i][0],a[i][1]);\n//i=0;\nint flag=0;\nwhile(curPop<1000000)\n{\n\tcurPop=curPop+a[i][1];\n\ti++;\n\tif(curPop<1000000 && i==n)\n\t\tflag=1;\n\n}\nif(flag)\nprintf(\"-1\\n\");\nelse\nprintf(\"%.7f\\n\",sqrt(a[i-1][0]) );\nreturn 0;\n}"}
{"similarity_score": 0.6760204081632653, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "8abcb83d02c533093237de8895425935", "bug_code_uid": "9cb0c0af896bf675e3d2cd2bf4e572d7", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "9dbe9525d40c7ba96725eeedba0310d2", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main ()\n{\n    int n,i,j,count=0 ;\n    scanf(\"%d\",&n);\n\n    for(i=0; i<n; i++)\n\n    {\n        int f[3];\n        for(j=0; j<3; j++)\n        {\n\n\n\n            scanf(\"%d\",&f[i]);\n        }\n        if(f[0]+f[1]+f[2]>=2)\n        {\n            count++;\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n    printf(\"%d\",count);\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main ()\n{\n    int n,i,j,count=0,a[1000][3],s ;\n    scanf(\"%d\",&n);\n\n    for(i=0; i<n; i++)\n\n    {\n        for(j=0; j<3; j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(i=0; i<n; i++)\n    {\n        s=a[i][0]+a[i][1]+a[i][2];\n\n\n        if(s>=2)\n        {\n            count++;\n        }\n        else\n        {\n            count=count+0;\n        }\n\n\n    }\n    printf(\"%d\",count);\n    return 0;\n\n\n\n\n\n}\n\n\n\n\n"}
{"similarity_score": 0.7765118317265557, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "785e24d698049774b414bc1b200149ec", "bug_code_uid": "366ff3cc8b871975f5f855a2978ce0ee", "src_uid": "42b425305ccc28b0d081b4c417fe77a1", "apr_id": "dd13e0cba46a9d877fce680f73671f75", "difficulty": 1200, "tags": ["constructive algorithms", "games"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define forn(i, n) for (int i = 0; i < int(n); i++)\r\n\r\n\r\nvoid solve(){\r\n    int n; scanf(\"%d\", &n);\r\n    int zeros = 0;\r\n    forn(i, n){\r\n        int temp;\r\n        scanf(\"%1d\", &temp);\r\n\r\n        if ((n==1) && (temp == 0)){\r\n            printf(\"BOB\\n\");\r\n            return;\r\n        }\r\n    }\r\n    if (zeros == 1){\r\n        printf(\"BOB\\n\");\r\n        return;\r\n    }\r\n\r\n    if (zeros%2 == 0){\r\n        printf(\"BOB\\n\");\r\n    }\r\n    if (zeros%2){\r\n        printf(\"ALICE\\n\");\r\n    }\r\n}\r\n\r\n\r\n\r\nint main(){\r\n    int t; scanf(\"%d\", &t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#define forn(i, n) for (int i = 0; i < (int)(n); i++)\r\n\r\n\r\nvoid solve(){\r\n    int n; scanf(\"%d\", &n);\r\n    int zeros = 0;\r\n    forn(i, n){\r\n        int temp;\r\n        scanf(\"%1d\", &temp);\r\n\r\n        if (temp == 0){zeros++;}\r\n    }\r\n\r\n\r\n    if ((zeros%2 == 0) || (zeros == 1)){\r\n        printf(\"BOB\\n\");\r\n        return;\r\n    }\r\n    if (zeros%2){\r\n        printf(\"ALICE\\n\");\r\n        return;\r\n    }\r\n}\r\n\r\n\r\n\r\nint main(){\r\n    int t; scanf(\"%d\", &t);\r\n    while(t--){\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.6, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "cf00b95f2e8e3952a07d1c39d3477e75", "bug_code_uid": "f8c8edd6dbcb962c5e8a97dd413a73d6", "src_uid": "447c17cba953d6e2da50c242ac431ab4", "apr_id": "c4293746d32611cf4a33760915956a51", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tint m , s;\r\n\t\tint flag = 0;\r\n\t\tscanf(\"%d%d\", &m, &s);\r\n\t\tint b[51];\r\n\t\tint sum = 0;\r\n\t\tfor (int i = 0;i < m;i++) {\r\n\t\t\tscanf(\"%d\", &b[i]);\r\n\t\t\tsum += b[i];\t\t\t\t\t\t\t\r\n\t\t}\r\n\t\tfor (int i = 0;i < 100;i++) {\r\n\t\t\tif (i * (i + 1) == (s + sum)*2)\r\n\t\t\t\tflag = 1;\r\n\t\t}\r\n\t\tif (flag)printf(\"Yes\\n\");\r\n\t\telse printf(\"No\\n\");\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tint m , s;\r\n\t\tint flag = 1;\r\n\t\tscanf(\"%d%d\", &m, &s);\r\n\t\tint b[51];\r\n\t\tint a[100];\r\n\t\tint cnt=m;\r\n\t\tint k = 0;\r\n\t\tfor (int i = 0;i < m;i++) {\r\n\t\t\tscanf(\"%d\", &b[i]);\r\n\t\t\tif (b[i] == 0)\r\n\t\t\t\tflag = 0;\r\n\t\t}\r\n\t\tfor (int i = 1;;i++) {\r\n\t\t\tif (s <= 0 && cnt == 0) {\r\n\t\t\t\tif (s < 0)flag = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tint mark = 0;\r\n\t\t\ta[k++] = i;\r\n\t\t\tfor (int j = 0;j < m;j++) {\r\n\t\t\t\tif (b[j] == i) {\r\n\t\t\t\t\tmark = 1;\r\n\t\t\t\t\tcnt--;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (mark)continue;\r\n\t\t\telse s -= i;\t\t\r\n\t\t}\r\n\r\n\t\tif (flag)printf(\"Yes\\n\");\r\n\t\telse printf(\"No\\n\");\r\n\t}\r\n}"}
{"similarity_score": 0.9808660624370594, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1818811bbe54f5c5b2e6606125b7d1fd", "bug_code_uid": "76004c78b0460eed054cbc81f611e74c", "src_uid": "b7e36ca8a96dd7951359070d4953beec", "apr_id": "f8c63319c76455bde97d443a49f2bf33", "difficulty": 800, "tags": ["constructive algorithms", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        if(n != 3 && n % 2 != 0)\r\n        {\r\n            printf(\"%d\\n\", n+3);\r\n        }\r\n        else if(n != 2 && n % 2 == 0)\r\n        {\r\n            printf(\"%d\\n\", n+2);\r\n        }\r\n        else if(n == 2)\r\n        {\r\n            printf(\"%d\\n\", n+7);\r\n        }\r\n        else if(n == 3)\r\n        {\r\n            printf(\"%d\\n\", n+5);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        if(n != 3 && n % 2 != 0)\r\n        {\r\n            printf(\"%d\\n\", 3);\r\n        }\r\n        else if(n != 2 && n % 2 == 0)\r\n        {\r\n            printf(\"%d\\n\", 2);\r\n        }\r\n        else if(n == 2)\r\n        {\r\n            printf(\"%d\\n\", 7);\r\n        }\r\n        else\r\n        {\r\n            printf(\"%d\\n\", 5);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9046979865771813, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b4c8e02a2ba3639693aa31aea6dbf53a", "bug_code_uid": "024a77f2a94b3df8c1ef55c34ea4a62a", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "4901422d10603f9481ff8051499956c6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint\nmain ()\n{\n  int n, h, loop = 0, array[10], width = 0, loop2 = 0;\n\n  scanf (\"%d\", &n);\n  scanf (\"%d\", &h);\n  scanf (\"%d\", &array);\n    \n  for (loop = 0; loop < n; loop++)\n    {\n\n      if (array[loop] > h)\n\t{\n\t  width = width + 2;\n\n\t}\n\n      else\n\t{\n\t  width = width + 1;\n\t}\n\n    }\n  printf (\"%d\", width);\n  return 0;\n}\n", "fixed": "\n#include <stdio.h>\n\nint\nmain ()\n{\n  int n, h, loop = 0, array[100000], width = 0, loop2 = 0;\n\n  scanf (\"%d\", &n);\n  scanf (\"%d\", &h);\n  for (loop = 0; loop < n; loop++)\n    {\n      scanf (\"%d\", &array[loop]);\n    }\n  \n  for (loop = 0; loop < n; loop++)\n\n    {\n\n      if (array[loop] > h)\n\t{\n\t  width = width + 2;\n\n\t}\n\n      else\n\t{\n\t  width = width + 1;\n\t}\n\n    }\n  printf (\"%d\", width);\n  return 0;\n}\n"}
{"similarity_score": 0.04824561403508772, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a7382ceeba6cf3d23f1a3c855c0096a3", "bug_code_uid": "846b322b707bbf94a92e9f25dbeb3606", "src_uid": "0593f79604377dcfa98d2b69840ec0a6", "apr_id": "35dcf86dbe91e22f19525adcb9765d62", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint cmp(void *p1,void *p2){\nint a=*(int *)p1;\nint b=*(int *)p2;\nreturn a-b;\n}\n\nint main()\n{\n    int n,a[100000],i,count=0,flag=0;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n        scanf(\"%d\",&a[i]);\n        if(n==1 && a[0]==0){\n            printf(\"0\");\n            return;\n        }\n        qsort(a,n,4,cmp);\n        for(i=1; i<n; i++){\n                if(a[i]==a[i-1])\n                count++;\n                if(a[i-1]==0)\n                    flag=1;\n\n        }\n        if(flag==1)\n            printf(\"%d\",n-count-1);\n        else\n        printf(\"%d\",n-count);\n\n\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint a[100005];\nint b[100005];\nint main()\n{\n\tint cost=0,i,x,n;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(x>0)\n\t\t\ta[x]++;\n\t\tif(x<0)\n\t\t\tb[-x]++;\n\t}\n\tfor(i=1;i<100005;i++)\n\t{\n\t\tif(a[i])\n\t\t\tcost++;\n\t\tif(b[i])\n\t\t\tcost++;\n\t}\n\tprintf(\"%d\",cost);\n\treturn 0;\n}"}
{"similarity_score": 0.9783132530120482, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "29619beb6d780f8607645d7deacff825", "bug_code_uid": "c3221c0991dfd9ec3bde16a6a848722e", "src_uid": "2dc69231824db013161e4f223e25ccb9", "apr_id": "a904784ba313ad2ae6efe0f788890674", "difficulty": 900, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmpfunc(const void *a, const void *b) { return (*(int *)a - *(int *)b); }\n\nint main() {\n  int items, queries;\n  scanf(\"%d %d\", &items, &queries);\n\n  int prices[items];\n\n  for (int i = 0; i < items; i++) {\n    scanf(\"%d\", &prices[i]);\n  }\n\n  qsort(prices, items, sizeof(int), cmpfunc);\n\n  long values[items + 1];\n  values[0] = 0;\n\n  for (int i = 1, j = items - 1; i <= items; i++, j--) {\n    values[i] = values[i - 1] + prices[j];\n  }\n\n  int x, y;\n  while (queries-- > 0) {\n    scanf(\"%d %d\", &x, &y);\n    printf(\"%ld\\n\", values[x] - values[x - y]);\n  }\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define ll long long\n\nint cmpfunc(const void *a, const void *b) { return (*(int *)a - *(int *)b); }\n\nint main() {\n  int items, queries;\n  scanf(\"%d %d\", &items, &queries);\n\n  int prices[items];\n\n  for (int i = 0; i < items; i++) {\n    scanf(\"%d\", &prices[i]);\n  }\n\n  qsort(prices, items, sizeof(int), cmpfunc);\n\n  ll values[items + 1];\n  values[0] = 0;\n\n  for (int i = 1, j = items - 1; i <= items; i++, j--) {\n    values[i] = values[i - 1] + prices[j];\n  }\n\n  int x, y;\n  while (queries-- > 0) {\n    scanf(\"%d %d\", &x, &y);\n    printf(\"%lld\\n\", values[x] - values[x - y]);\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.5439642324888226, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "82d719216898512a21c97e0475bc4a80", "bug_code_uid": "2b918df2d6c736e31b57365e01130b17", "src_uid": "422cbf106fac3216d58bdc8411c0bf9f", "apr_id": "1ed6be3623abb3c7204e62668c8e0c43", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n long int n;\n int m,*p,i,j,temp,c=1;\n scanf(\"%ld %d\",&n,&m);\n p=(int *)malloc(m+1);\n for(i=0;i<m;i++)\n scanf(\"%d\",&p[i]);\n  if(p[0]==1||p[m]==n)\n  {\n   printf(\"NO\\n\");\n    return 0;\n    }\n  else\n   {\n     for(i=m-1;i>0&&c;i--)\n     { c=0;\n       for(j=0;j<i;j++)\n        {\n        if(p[j]>p[j+1])\n         { c=1;\n           temp=p[j];\n           p[j]=p[j+1];\n           p[j+1]=temp;\n         }\n     }\n   }\n    c=1;\n   for(i=0;i<m&&c;i++)\n   {  c=0;\n     if(p[i]==(p[i+1]-1)&&p[i+1]==(p[i+2]-1))\n         {\n         printf(\"NO\\n\");\n           c=1;\n           break;\n          }     \n   }\n   if(c==0)\n   printf(\"YES\\n\");\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n long int n;\n int m,*p,i,j,temp;\n scanf(\"%ld %d\",&n,&m);\n  p=(int *)malloc(m*sizeof(int));\n for(i=0;i<m;i++)\n scanf(\"%d\",&p[i]);\n     for(i=m-1;i>0;i--)\n     {\n       for(j=0;j<i;j++)\n        {\n        if(p[j]>p[j+1])\n         {\n           temp=p[j];\n           p[j]=p[j+1];\n           p[j+1]=temp;\n         }\n     }\n   }\n      if(m>0)\n      {\nif(p[0]==1||p[m-1]==n)\n  {\n   printf(\"NO\\n\");\n    return 0;\n    }\nelse\n    {\n   for(i=0;i<m;i++)\n   {\n     if(p[i]==(p[i+1]-1)&&p[i+1]==(p[i+2]-1))\n         {\n         printf(\"NO\\n\");\n           return ;\n          }\n   }\n    }\n      }\n printf(\"YES\\n\");\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9160671462829736, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "dccf5e362f57dd845eabbf98dfc5848a", "bug_code_uid": "cba3c6304520120dad474afa2c3c1d76", "src_uid": "0e21f1c48c8c0463b2ffa7275eddc633", "apr_id": "61520d7e7e02a539671cda08007b0b2a", "difficulty": 1300, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h> \n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tn *= 90;\n\t\n\twhile(n--)\n\t{\n\t\tchar c;\n\t\tc=getchar();\n\t\tif (c=='1') printf(\"2\");\n\t\telse printf(\"%c\",c);\n\t}\n\t\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h> \n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tgetchar();\n\tn *= 90;\n\t\n\twhile(n--)\n\t{\n\t\tchar c;\n\t\tc=getchar();\n\t\tif (c=='1') putchar('2');\n\t\telse putchar(c);\n\t}\n\t\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9458544839255499, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d4906d9e6d473c56cf83a18d8899d03c", "bug_code_uid": "21b0a0bc86a26614307fc9bf888dd05f", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "170b2769cfa7f4c306b474dd7f1ba0fd", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n    \n    int a;\n    int c = 0;\n    int cw = 0;\n    char d[33];\n    scanf(\"%d\", &a);\n    \n    while (cw < a) {\n        scanf(\"%s\", d);\n        \n        if (strcmp(d, \"Tetrahedron\") == 0){\n            c = c + 4;\n        } else if (strcmp(d, \"Cube\") == 0) {\n            c = c + 6;\n        } else if (strcmp(d, \"Octahedron\") == 0) {\n            c = c + 8;\n        } else if (strcmp(d, \"Dodecahedron\") == 0) {\n            c = c + 12;\n        } else if (strcmp(d, \"Icosahedron\") == 0) {\n            c = c + 20;\n        }\n    \n        ++cw;\n    }", "fixed": "#include <stdio.h>\n\nint main() {\n    \n    int a;\n    int c = 0;\n    int cw = 0;\n    char d[33];\n    scanf(\"%d\", &a);\n    \n    while (cw < a) {\n        scanf(\"%s\", d);\n        \n        if (strcmp(d, \"Tetrahedron\") == 0){\n            c = c + 4;\n        } else if (strcmp(d, \"Cube\") == 0) {\n            c = c + 6;\n        } else if (strcmp(d, \"Octahedron\") == 0) {\n            c = c + 8;\n        } else if (strcmp(d, \"Dodecahedron\") == 0) {\n            c = c + 12;\n        } else if (strcmp(d, \"Icosahedron\") == 0) {\n            c = c + 20;\n        } ++cw;\n        \n    }\n    \n    printf(\"%d\", c);\n    return 0;\n}"}
{"similarity_score": 0.8043478260869565, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "c9623bdd85ee0ced59220083da7bc72c", "bug_code_uid": "a1ddb156b50d937e6b3e8eb79ab5bb89", "src_uid": "ec8060260a6c7f4ff3e6afc9fd248afc", "apr_id": "edc666ea42be5ddc05e738c77ab7507f", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    while(n--){\n    long long int a,b,c,d,s=0,x=0,p=0;\n    scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n    s=a/d;\n    x=s/b;\n    p=x+s*c;\n    printf(\"%lld\\n\",p);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int h;\n    scanf(\"%d\",&h);\n    while(h--){\n    long long int s,a,b,c,x=0,p=0,d=0;\n    scanf(\"%lld %lld %lld %lld\",&s,&a,&b,&c);\n    x=s/c;\n    p=x/a;\n    d=x+p*b;\n    printf(\"%lld\\n\",d);\n    }\n}\n"}
{"similarity_score": 0.9317329332333083, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "1531d2492a98bc689855281565710099", "bug_code_uid": "185d72b832b87950e8c1058023a53b6d", "src_uid": "a1951e7d11b504273765fc9fb2f18a5e", "apr_id": "6c6b90dcca4e2b831d3075f146ec2620", "difficulty": 1100, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\nint main(){\n\tint t=0;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n=0;\n\t\tscanf(\"%d\",&n);\n\t\tif(n==1){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse{\n\t\tint val=0;\n\t\tint max_freq=0;\n\t\tint distinct=0;\n\t\tint* arr=(int*)calloc(n,sizeof(int));\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&val);\n\t\t\tarr[val-1]=arr[val-1]+1;\n\n\t\t}\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(arr[i]>0){\n\t\t\t\tdistinct++;\n\n\t\t\t}\n\t\t\tif(arr[i]>=max_freq){\n\t\t\t\tmax_freq=arr[i];\n\t\t\t}\n\t\t}\n\t\tif(distinct==max_freq){\n\t\t\tprintf(\"%d\\n\",distinct-1);\n\t\t}\n\t\telse if(distinct>max_freq){\n\t\t\tprintf(\"%d\\n\",max_freq);\n\t\t}\n\t\telse if(max_freq>distinct){\n\t\t\tprintf(\"%d\\n\",distinct);\n\t\t}\n\n\n\t   }//else\n\n\t}\n\treturn 0;\n\n}", "fixed": "#include <stdio.h>\n#include<stdlib.h>\nint main(){\n\tint t=0;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint n=0;\n\t\tscanf(\"%d\",&n);\n\t\t\n\t\tint val=0;\n\t\tint max_freq=0;\n\t\tint distinct=0;\n\t\tint* arr=(int*)calloc(n,sizeof(int));\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&val);\n\t\t\tarr[val-1]=arr[val-1]+1;\n\n\t\t}\n\t\tif(n==1){\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse {\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(arr[i]>0){\n\t\t\t\tdistinct++;\n\n\t\t\t}\n\t\t\tif(arr[i]>=max_freq){\n\t\t\t\tmax_freq=arr[i];\n\t\t\t}\n\t\t}\n\t\tif(distinct==max_freq){\n\t\t\tprintf(\"%d\\n\",distinct-1);\n\t\t}\n\t\telse if(distinct>max_freq){\n\t\t\tprintf(\"%d\\n\",max_freq);\n\t\t}\n\t\telse if(max_freq>distinct){\n\t\t\tprintf(\"%d\\n\",distinct);\n\t\t}\n\n\n\t\t }//else\n\n\n\t  \n\n\t}\n\treturn 0;\n\n}"}
{"similarity_score": 0.9419023136246787, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0a2945399bbcac63f4a8ec4ab3f6ff7c", "bug_code_uid": "1c7ca83698bab261942210e7b0060335", "src_uid": "b6ac7c30b7efdc7206dbbad5cfb86db7", "apr_id": "c3e725acce9a8f5d798696dc23dcc67d", "difficulty": 1500, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\ntypedef long long ll ll;\ntypedef long long int ll;\nint main()\n{\n    ll n;\n    scanf(\"%d\", &n);\n    ll sum = 0;\n    ll ar[n - 1];\n    ll i = 0;\n    ll arr[200010] = {0};\n    ll j = 0;\n    while (j <= 20000)\n    {\n        arr[j++] = 0;\n    }\n    while (i < n - 1)\n    {\n        scanf(\"%d\", &ar[i]);\n        sum = sum + ((n - (i + 1)) * ar[i]);\n        i++;\n    }\n\n    ll base = ((n * (n - 1)) / 2) - sum;\n    if (base % n != 0 && n != 200000)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    base /= n;\n    //printf(\"%d\", base);\n    ll temp = base;\n    i = 0;\n    while (i < n - 1)\n    {\n        temp += ar[i];\n\n        if (temp + 1 <= 0 || temp + 1 > n || arr[temp + 1] != 0)\n        {\n            printf(\"-1\");\n            return 0;\n        }\n        arr[temp + 1] = 1;\n        i++;\n    }\n\n    i = 0;\n\n    printf(\"%d\", (base + 1));\n\n    while (i < n - 1)\n    {\n        base += ar[i];\n        printf(\" %d\", (base + 1));\n        i++;\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\ntypedef long long int ll;\nint main()\n{\n    ll n;\n    scanf(\"%lld\", &n);\n    ll sum = 0;\n    ll ar[n - 1];\n    ll i = 0;\n    ll arr[200010] = {0};\n    ll j = 0;\n    while (j <= 20000)\n    {\n        arr[j++] = 0;\n    }\n    while (i < n - 1)\n    {\n        scanf(\"%lld\", &ar[i]);\n        sum = sum + ((n - (i + 1)) * ar[i]);\n        i++;\n    }\n\n    ll base = ((n * (n - 1)) / 2) - sum;\n    if (base % n != 0 && n != 200000)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    base /= n;\n    //printf(\"%lld\", base);\n    ll temp = base;\n    i = 0;\n    while (i < n - 1)\n    {\n        temp += ar[i];\n\n        if (temp + 1 <= 0 || temp + 1 > n || arr[temp + 1] != 0)\n        {\n            printf(\"-1\");\n            return 0;\n        }\n        arr[temp + 1] = 1;\n        i++;\n    }\n\n    i = 0;\n\n    printf(\"%lld\", (base + 1));\n\n    while (i < n - 1)\n    {\n        base += ar[i];\n        printf(\" %lld\", (base + 1));\n        i++;\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9964539007092199, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "be1ef2305ff8a7101b8e21eb3f7e8bec", "bug_code_uid": "fe0d04f2001bc39da0d90997ba03a24a", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "286e9aced7b6415bc9f70d2d9e9ed8e1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    long long int t, l, r, n;\r\n    scanf(\"%lld\", &t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%lld\", &n);\r\n        l = -(n-1);\r\n        r = n;\r\n        printf(\"%lld %lld\", l, r);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    long long int t, l, r, n;\r\n    scanf(\"%lld\", &t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%lld\", &n);\r\n        l = -(n-1);\r\n        r = n;\r\n        printf(\"%lld %lld\\n\", l, r);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9346153846153846, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "c02b2aa3b0e15bf3087ea81264293df3", "bug_code_uid": "c007d0c9bc155dd654c2681130b079ea", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "e25cc611c69dffe674ea872e39865786", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char arr[1000];\n    long long int i,temp,flag=0;\n    gets(arr);\n    for(i=0;arr[i]!='\\0';i++)\n    {\n        if(arr[i]=='0')\n        {\n            temp=i;\n            flag++;\n            break;\n        }\n    }\n    if(flag==0)\n    {\n        for(i=1;arr[i]!='\\0';i++)\n        {\n            printf(\"%c\",arr[i]);\n        }\n    }\n\n    for(i=0;arr[i]!='\\0';i++)\n    {\n        if(i!=temp&&flag!=0)\n        {\n            printf(\"%c\",arr[i]);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    char arr[100000];\n    long long int i,temp,flag=0,x;\n    gets(arr);\n    x=strlen(arr);\n    for(i=0;i<x;i++)\n    {\n        if(arr[i]=='0')\n        {\n            temp=i;\n            flag++;\n            break;\n        }\n    }\n    if(flag==0)\n    {\n        for(i=1;i<x;i++)\n        {\n            printf(\"%c\",arr[i]);\n        }\n    }\n\n    for(i=0;i<x;i++)\n    {\n        if(i!=temp&&flag!=0)\n        {\n            printf(\"%c\",arr[i]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9957081545064378, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "544143d890d509fcbc7df1e17f5e7089", "bug_code_uid": "043542d2ea48405784d1f992bafb29b1", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "2a0f099d7776876008744d9f22828e37", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;scanf(\"%d\",&n);\n    int a[n],b[n];\n    for(int i=0;i<n;i++)\n    {scanf(\"%d\",&a[i]);\n        b[a[i]]=i+1;\n    }\n    for(int i=0;i<n;i++)\n    {\n        printf(\"%d \",b[i]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;scanf(\"%d\",&n);\n    int a[n],b[n];\n    for(int i=0;i<n;i++)\n    {scanf(\"%d\",&a[i]);\n        b[a[i]-1]=i+1;\n    }\n    for(int i=0;i<n;i++)\n    {\n        printf(\"%d \",b[i]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8413793103448276, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ae0f2f0b51f44a277eca3a5b3c0852d1", "bug_code_uid": "527079ce4575db1fa70bdf076842f2fa", "src_uid": "b3978805756262e17df738e049830427", "apr_id": "b9320bb945ac8ca49548741eed9be76d", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    long long int n,m;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld\",&n,&m);\n        if(n==m)\n            printf(\"YES\\n\");\n        else if(n<=3)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    long long int n,m;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld\",&n,&m);\n        if(n==m)\n            printf(\"YES\\n\");\n        else if(n==1)\n            printf(\"NO\\n\");\n        else if(n<=3 && m<=3)\n            printf(\"YES\\n\");\n        else if(n<=3)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9862155388471178, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e6136a419949b2adb4ebaf35fa98ebbf", "bug_code_uid": "16d1d3fd55cdbf3a2d430bd12712c4eb", "src_uid": "6581dbaff7eb52b63ccfe9c0c4117c09", "apr_id": "d3f3817885e35b2bd517e9a18aaf0e3e", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(void)\n{\n    char str[5000];\n    int i = 0, a = 0, b = 0, c = 0, flag = 1;\n    gets(str);\n    int len = strlen(str);\n    if(str[i] == 'a')\n    {\n        while(str[i] == 'a')\n        {\n            a++;\n            i++;\n        }\n    }\n    else\n        flag = 0;\n\n    if(str[i] == 'b')\n    {\n        while(str[i] == 'b')\n        {\n            b++;\n            i++;\n        }\n    }\n    else\n        flag  = 0;\n\n    if(str[i] == 'c')\n    {\n        while(str[i] == 'c')\n        {\n            c++;\n            i++;\n        }\n    }\n    else\n        flag = 0;\n    if(flag)\n    {\n        if(c == b || c == a)\n            if(i == len)\n                printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n        }\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(void)\n{\n    char str[5000];\n    int i = 0, a = 0, b = 0, c = 0, flag = 1;\n    gets(str);\n    int len = strlen(str);\n    if(str[i] == 'a')\n    {\n        while(str[i] == 'a')\n        {\n            a++;\n            i++;\n        }\n    }\n    else\n        flag = 0;\n\n    if(str[i] == 'b')\n    {\n        while(str[i] == 'b')\n        {\n            b++;\n            i++;\n        }\n    }\n    else\n        flag  = 0;\n\n    if(str[i] == 'c')\n    {\n        while(str[i] == 'c')\n        {\n            c++;\n            i++;\n        }\n    }\n    else\n        flag = 0;\n    if(flag)\n    {\n        if( (c == b || c == a) && i == len)\n                printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n        }\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9357097390197326, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b9ad50ff4a0556ac2f8c9c69706c48dd", "bug_code_uid": "7e6bf8b70f3c3b32d2cb7b4ef4dc4ca5", "src_uid": "63098c9d5ef90d445a6a4aa0f037a9c7", "apr_id": "57bd8c66aeaa9f832cabc72561607a87", "difficulty": 1400, "tags": ["dp", "greedy", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<memory.h>\nint n,m;\nint edge[102][102],siz[102],next[102];\nint gao(int a,int fa){\n\tint b,c=0,d;\n\tif(siz[a]==1&&fa!=0) {next[a]=0;return 0;}\n\tfor(b=0;b<siz[a];b++)\n\tif(edge[a][b]!=fa) \n\t{\n\t\td=gao(edge[a][b],a)+1;\n\t\tif(d>c) {c=d;next[a]=edge[a][b];}\n\t}\n\treturn c;\n}\nint main(){\n\tint a,b,c,d,e,f,ans=0;\n\tscanf(\"%d\",&n);\n\tfor(a=0;a<n;a++)\n\t{\n\t\tscanf(\"%d\",&m);\n\t\tmemset(edge,0,sizeof edge);\n\t\tmemset(siz,0,sizeof siz);\n\t\tmemset(next,0,sizeof next);\n\t\tfor(b=1;b<m;b++)\n\t\t{\n\t\tscanf(\"%d%d\",&d,&e);\n\t\tedge[d][siz[d]]=e;\n\t\tedge[e][siz[e]]=d;\n\t\tsiz[d]++;\n\t\tsiz[e]++;\n\t    }\n\t    c=gao(1,0);\n\t    b=1;\n\t    while(next[b]!=0) b=next[b];\n\t    c=gao(b,0);\n\t    ans+=c;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<memory.h>\nint n,m;\nint edge[102][102],siz[102],next[102];\nint gao(int a,int fa){\n\tint b,c=0,d;\n\tif(siz[a]==1&&fa!=0) {next[a]=0;return 0;}\n\tfor(b=0;b<siz[a];b++)\n\tif(edge[a][b]!=fa) \n\t{\n\t\td=gao(edge[a][b],a)+1;\n\t\tif(d>c) {c=d;next[a]=edge[a][b];}\n\t}\n\treturn c;\n}\nint main(){\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tint a,b,c,d,e,f,ans=0;\n\tscanf(\"%d\",&n);\n\tfor(a=0;a<n;a++)\n\t{\n\t\tscanf(\"%d\",&m);\n\t\tmemset(edge,0,sizeof edge);\n\t\tmemset(siz,0,sizeof siz);\n\t\tmemset(next,0,sizeof next);\n\t\tfor(b=1;b<m;b++)\n\t\t{\n\t\tscanf(\"%d%d\",&d,&e);\n\t\tedge[d][siz[d]]=e;\n\t\tedge[e][siz[e]]=d;\n\t\tsiz[d]++;\n\t\tsiz[e]++;\n\t    }\n\t    c=gao(1,0);\n\t    b=1;\n\t    while(next[b]!=0) b=next[b];\n\t    c=gao(b,0);\n\t    ans+=c;\n\t}\n\tprintf(\"%d\\n\",ans);\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}"}
{"similarity_score": 0.9947089947089947, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "0c0fbe9369c911ea4a72dd5699250c31", "bug_code_uid": "52ceae6a186d954ee6002d7dbddb8c71", "src_uid": "b81e7a786e4083cf7188f718bc045a85", "apr_id": "4ea6af3a1abd510bcf3959528603d7b1", "difficulty": 1800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define min(a,b) ((a)<(b)?(a):(b))\n\nint main()\n{\n   int i,n,m,k,a,ans;\n   scanf(\"%d%d%d\",&n,&m,&k);\n   if (!(n&1))\n      printf(\"0\\n\");\n   else\n   {\n      ans=min((long long)k/((n+1)/2)*m,1000000);\n      for (i=1;i<=n;i++)\n      {\n         scanf(\"%d\",&a);\n         if (i&1)\n            ans=min(ans,a);\n      }\n      printf(\"%d\\n\",ans);\n   }   \n   return 0;\n}\n", "fixed": "#include <stdio.h>\n#define min(a,b) ((a)<(b)?(a):(b))\n\nint main()\n{\n   int i,n,m,k,a,ans;\n   scanf(\"%d%d%d\",&n,&m,&k);\n   if (!(n&1))\n      printf(\"0\\n\");\n   else\n   {\n      ans=min((long long)m/((n+1)/2)*k,1000000);\n      for (i=1;i<=n;i++)\n      {\n         scanf(\"%d\",&a);\n         if (i&1)\n            ans=min(ans,a);\n      }\n      printf(\"%d\\n\",ans);\n   }   \n   return 0;\n}\n"}
{"similarity_score": 0.23210831721470018, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "c98ca3acdd5cbbb4cfad95d790197803", "bug_code_uid": "57c6b54313e789e033beaf0aac09158f", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "9b9c06df24c1e8dc0f3c24babbc35b56", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (void)\n{\n\tint a,b,c,d=0,e=0,f=0,n;\n\n\tscanf(\"%d\", &n);\n\n\tfor(int i=0; i<n; i++)\n\t{\n\t\tscanf(\"%d %d %d\", &a, &b, &c);\n\n\t\td=d+a;\n\t\te=e+b;\n\t\tf=f+c;\n\n\t}\n\n\tif(d==0 && e==0 && f==0)\n\t{\n\t\tprintf(\"Yes\\n\");\n\t\treturn 0;\n\t}\n\n\tprintf(\"No\\n\");\n\treturn 1;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,c,sum1=0,sum2=0,sum3=0;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t  scanf(\"%d%d%d\",&a,&b,&c);\n\t  sum1+=a;\n\tsum2+=b;\n\tsum3+=c;\n\t}\n\tif(sum1==0&&sum2==0&&sum3==0)\n\tprintf(\"YES\\n\");\n\telse \n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9874301675977654, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "628f8cb01b7669fc9f470c604cad3f5b", "bug_code_uid": "a4daa76a22b6eb4ef7900f5478fb2383", "src_uid": "513234db1bab98c2c2ed6c7030c1ac72", "apr_id": "8e157bdac3e70c9af13147d88036083c", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, x, count[8] = {0};\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i)\n    {\n        scanf(\"%d\", &x);\n        count[x] += 1;\n    }\n\n    bool solution;\n    if (count[5] == 0 && count[7] == 0 && count[2] >= count[4] && count[1] == count[4] + count[6] && count[2] + count[3] == count[4] + count[6])\n    {\n        for (int i = 0; i < count[4]; ++i)\n        {\n            printf(\"1 2 4\\n\");\n        }\n        count[2] -= count[4];\n        for (int i = 0; i < count[2]; ++i)\n        {\n            printf(\"1 2 6\\n\");\n        }\n        for (int i = 0; i < count[3]; ++i)\n        {\n            printf(\"1 3 6\\n\");\n        }\n    }\n    else\n    {\n        printf(\"-1\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, x, count[8] = {0};\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i)\n    {\n        scanf(\"%d\", &x);\n        count[x] += 1;\n    }\n\n\n    if (count[5] == 0 && count[7] == 0 && count[2] >= count[4] && count[1] == count[4] + count[6] && count[2] + count[3] == count[4] + count[6])\n    {\n        for (int i = 0; i < count[4]; ++i)\n        {\n            printf(\"1 2 4\\n\");\n        }\n        count[2] -= count[4];\n        for (int i = 0; i < count[2]; ++i)\n        {\n            printf(\"1 2 6\\n\");\n        }\n        for (int i = 0; i < count[3]; ++i)\n        {\n            printf(\"1 3 6\\n\");\n        }\n    }\n    else\n    {\n        printf(\"-1\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.8434782608695652, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a10a13c4b8c6337d70f31f116ec4e4c3", "bug_code_uid": "2cb7bd86216faad615565c16b0a450ff", "src_uid": "2bb893703cbffe9aeaa0bed02f42a05c", "apr_id": "a751bb465d9ccecad31bbfabf5a3f23b", "difficulty": 1300, "tags": ["implementation", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\n\tunsigned int n, c; scanf (\"%d\",&n); float B;\n\tunsigned int a[n];\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tscanf (\"%d\",&a[i]);\n\t\twhile ((a[i]%2)==0)\n\t\t\ta[i]=a[i]/2;\n\t\twhile ((a[i]%3)==0)\n\t\t\ta[i]=a[i]/3;\n\t}\n\tfor (int i=0;i<n;i++)\n\t\tif (a[i]!=a[0])\n\t\t{\n\t\t\tprintf(\"No\");\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t\tprintf(\"Yes\");\n}\n", "fixed": "#include <stdio.h>\n\nint main ()\n{\n\tunsigned int n, c; scanf (\"%d\",&n); float B;\n\tunsigned int a[n];\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tscanf (\"%d\",&a[i]);\n\t\twhile ((a[i]%2)==0)\n\t\t\ta[i]=a[i]/2;\n\t\twhile ((a[i]%3)==0)\n\t\t\ta[i]=a[i]/3;\n\t}\n\tfor (int i=0;i<n;i++)\n\t\tif (a[i]!=a[0])\n\t\t{\n\t\t\tc=0;\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t\tc=1;\n\tif (c)\n\t\tprintf (\"Yes\");\n\telse\n\t\tprintf (\"No\");\n}\n"}
{"similarity_score": 0.9907834101382489, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "72de40fd9f04d97e9a509b622029a958", "bug_code_uid": "4198f1d4b21fbcacecd0ee1080f42729", "src_uid": "98fd00d3c83d4b3f0511d8afa6fdb27b", "apr_id": "4b16e870db44a9c661bbdef3acfcc61c", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i;\nscanf(\"%d\",&n);\nif(n%2==0)\n{printf(\"%d\\n\",n/2);\nfor(i=1;i<=n/2;i++)\n{printf(\"2 \");}}\nif(n%2!=0)\n{printf(\"%d\\n\",(n-1)/2);\nfor(i=1;i<(n-1)/2;i++)\n{printf(\"2 \");\n}}\nprintf(\"3\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i;\nscanf(\"%d\",&n);\nif(n%2==0)\n{printf(\"%d\\n\",n/2);\nfor(i=1;i<=n/2;i++)\n{printf(\"2 \");}}\nif(n%2!=0)\n{printf(\"%d\\n\",(n-1)/2);\nfor(i=1;i<(n-1)/2;i++)\n{printf(\"2 \");\n}\nprintf(\"3\");\n}}\n"}
{"similarity_score": 0.4810606060606061, "equal_cnt": 14, "replace_cnt": 3, "delete_cnt": 8, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "125b47d8350214aa67cb4b74c4ecb8d3", "bug_code_uid": "ebfd77d515cae9a810b85ca804eee69f", "src_uid": "6d5ecac49fe1320eef1391b6d5cf5f0d", "apr_id": "d10be9603e73d6c699898b6c706fa6ab", "difficulty": 1000, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define MAXN 200000\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    int t, n, temp, arr[MAXN];\r\n    int i, j, k, count;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        count = n / 2;\r\n        for (i = 0; i < n && count; i++)\r\n        {\r\n            for (j = 0; j < n && count; j++)\r\n            {\r\n                if (arr[i] != arr[j])\r\n                {\r\n                    temp = arr[i] % arr[j];\r\n                    for (k = 0; k < n; k++)\r\n                    {\r\n                        if (arr[k] == temp)\r\n                            break;\r\n                    }\r\n                    if (k == n)\r\n                    {\r\n                        printf(\"%d %d\\n\", arr[i], arr[j]);\r\n                        count--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#define MAXN 1000000\r\nint main()\r\n{\r\n    int t, n, arr[MAXN], min, count;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n            if (i == 0)\r\n                min = arr[i];\r\n            else if (min > arr[i])\r\n                min = arr[i];\r\n        }\r\n        count = n / 2;\r\n        for (int i = 0; i < n && count; i++)\r\n        {\r\n            if (arr[i] != min)\r\n            {\r\n                printf(\"%d %d\\n\", arr[i], min);\r\n                count--;\r\n            }\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8447552447552448, "equal_cnt": 18, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "d8257806c0eb6f8aa4524956f990cfa4", "bug_code_uid": "6cbe4807876d08a9633ecbb0e43a39a8", "src_uid": "224a0b09547ec1441474efbd8e06353b", "apr_id": "ab98c00daf9ad0edb1dfcd5c3388ef4b", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, j;\r\n    scanf(\"%d\", &t);\r\n    for (j = 1; j <= t; t++)\r\n    {\r\n        int n, i, maxN = 101;\r\n        scanf(\"%d\", &n);\r\n        int ara[n+1];\r\n        for (i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &ara[i]);\r\n        }\r\n        int max[maxN];\r\n        for (i = 0; i < maxN; i++)\r\n        {\r\n            max[i] = 0;\r\n        }\r\n        for (i = 1; i <= n; i++)\r\n        {\r\n            max[ara[i]] += 1;\r\n        }\r\n        int index ;\r\n        for (i = 1; i <= n; i++)\r\n        {\r\n            if (max[ara[i]] == 1)\r\n            {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",index);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, j;\r\n    scanf(\"%d\", &t);\r\n    for (j = 1; j <= t; j++)\r\n    {\r\n        int i, n, maxN = 101;\r\n        scanf(\"%d\", &n);\r\n\r\n        int input[n+1];\r\n        for (i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &input[i]);\r\n        }\r\n\r\n        int max[maxN];\r\n        for (i = 1; i <= maxN; i++)\r\n        {\r\n            max[i] = 0;\r\n        }\r\n\r\n        for (i = 1; i <= n; i++)\r\n        {\r\n            max[input[i]] += 1;\r\n        }\r\n\r\n        int index = 0;\r\n\r\n        for (i = 1; i <= n; i++)\r\n        {\r\n            if (max[input[i]] == 1)\r\n            {\r\n                index = i;\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\", index);\r\n    }\r\n}"}
{"similarity_score": 0.629190304280557, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "d53070907403814d5160ec55274a6b36", "bug_code_uid": "7ce96e60849f19db6a76b1db3224a66e", "src_uid": "31c43b62784a514cfdb9ebb835e94cad", "apr_id": "c3d7a52b0819935d6a83f1ce4bf22ddf", "difficulty": 1100, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "# include <string.h>\n# include <stdio.h>\n\nint compare( int *a, int *b){  return *a - *b; } \n\nchar listName[102][100];\nint cont[1000], nlist, n, m, price[1000];\n\nvoid add(char *name) {\n   int x;\n   for( x = 0; x < nlist; x++){\n       if(strcmp( listName[x], name) == 0){\n       \t cont[x]++;\n         return;\t\n       }\t\n   }\n   strcpy(listName[x], name);\n   cont[x] = 1;\n   nlist++;\n}\n\nmain(){\n  int x, y, z, L, T;\n  char name[100];\n  scanf(\"%d %d\", &n, &m);\n  for(x = 0; x < n; x++) scanf(\"%d\", &price[x]);\n  qsort( price, n, sizeof(int), compare);\n  memset( cont, 0, sizeof(cont));\n  nlist = 0;\n  for(x = 0; x < m; x++){\n  \tscanf(\"%s\", name);\n  \tadd(name);\n  }\n  L = T = 0;\n  qsort( cont, nlist, sizeof(int), compare);\n  for( x = 0; x < nlist; x++)\n     L+= price[ x ] * cont[x];\n  for( x = 0; x < nlist; x++)\n     T+= price[ n - x - 1 ] * cont[nlist - x - 1];\n     \n  printf(\"%d %d\\n\", L, T);\n  return 0;\t\n}", "fixed": "# include <string.h>\n# include <stdio.h>\n\nint compare( int *a, int *b){  return *a - *b; } \n\nchar listName[102][100];\nint cont[1000], nlist, n, m, price[1000];\n\nvoid add(char *name) {\n   int x;\n   for( x = 0; x < nlist; x++){\n       if(strcmp( listName[x], name) == 0){\n       \t cont[x]++;\n         return;\t\n       }\t\n   }\n   strcpy(listName[x], name);\n   cont[x] = 1;\n   nlist++;\n}\n\nchar line[100000];\nmain(){\n  int x, y, z, L, T;\n  char name[100], *buf;\n  gets(line); sscanf(line, \"%d %d\", &n, &m);\n  gets(line);\n  for(buf = strtok(line, \" \"), x = 0; x < n; x++, buf = strtok( NULL , \" \")) sscanf(buf, \"%d\", &price[x]);\n  qsort( price, n, sizeof(int), compare);\n  memset( cont, 0, sizeof(cont));\n  nlist = 0;\n  for(x = 0; x < m; x++){\n \tgets(line); \t\n   \tadd(line);\n  }\n  L = T = 0;\n  qsort( cont, nlist, sizeof(int), compare);\n  for( x = 0; x < nlist; x++)\n     L+= price[ nlist - x - 1 ] * cont[x];\n  for( x = 0; x < nlist; x++)\n     T+= price[ n - x - 1 ] * cont[nlist - x - 1];\n     \n  printf(\"%d %d\\n\", L, T);\n  return 0;\t\n}"}
{"similarity_score": 0.9640933572710951, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "abfa79bdcd554736fb9aeecac4d67a34", "bug_code_uid": "bd4c994c62d155f96d948cdb454630d3", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "7d4c80ff4f94963b67a89532e98c73cb", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint t[200];\nint main(){\n    int a ,b,i,j,k,h,min,test,max,test1,ma,mi,f;\n   \n    \n   \n    mi=0;\n    ma=0;\n  \n        scanf(\"%d\",&b);\n        for(j=0;j<b;j++){\n            scanf(\"%d\",&t[j]);\n        }\n       int MAX=0;\n      int MIN =t[0];\n \n       for(i=0;i<b;i++)\n       {\n          if (t[i]< MIN){\n           MIN =t[i];\n             mi=i;}\n            if (t[i]>MAX){\n           MAX = t[i];\n            ma=i;\n              }\n        }\n \n        f=ma+b-(mi+1);\n        \n        printf(\"%d\",f);\n        \n    return 0 ;\n}", "fixed": "#include<stdio.h>\nint t[200];\nint main(){\n    int a ,b,i,j,k,h,min,test,max,test1,ma,mi,f;\n   \n    \n   \n    mi=0;\n    ma=0;\n  \n        scanf(\"%d\",&b);\n        for(j=0;j<b;j++){\n            scanf(\"%d\",&t[j]);\n        }\n       int MAX=0;\n      int MIN =t[0];\n \n       for(i=0;i<b;i++)\n       {\n          if (t[i]<= MIN){\n           MIN =t[i];\n             mi=i;}\n            if (t[i]>MAX){\n           MAX = t[i];\n            ma=i;\n              }\n        }\n \n        f=ma+b-(mi+1);\n        if(mi<ma)\n            f=f-1 ;\n        \n        printf(\"%d\",f);\n        \n    return 0 ;\n}\n"}
{"similarity_score": 0.9557109557109557, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "eb499196cee40fa96acf7b1158480ade", "bug_code_uid": "6d01805c92b36a1e96701bdad3ae6645", "src_uid": "f99a23bc65a1f5cdbf7909dba573ce51", "apr_id": "13210ce3aa1cfd6ab496fda6b135d860", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define max(a,b) a>b?a:b\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[100001];\n    int i;\n    int ans=2;\n    int max=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i>1)\n        {\n            if(a[i]==(a[i-1]+a[i-2]))\n                ans++;\n            else\n                ans=2;\n        }\n        max=max(ans,max);\n    }\n    printf(\"%d\\n\",max);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#define max(a,b) a>b?a:b\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[100001];\n    int i;\n    int ans=2;\n    int max=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i>1)\n        {\n            if(a[i]==(a[i-1]+a[i-2]))\n                ans++;\n            else\n                ans=2;\n        }\n        max=max(ans,max);\n    }\n    if(max==2 && n==1)\n        max=1;\n    printf(\"%d\\n\",max);\n    return 0;\n}\n"}
{"similarity_score": 0.9317199654278306, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "56b6ead9d17c0da583151e94c4968359", "bug_code_uid": "9f3c8080bfe2690d11d42aadfa3a0aa2", "src_uid": "a2085c2d21b2dbe4cc27a15fa4a1ec4f", "apr_id": "f9a00346f4bca55842a2d427a2935219", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    long long int n,m,i;\n    long long int a[200010];\n    scanf(\"%lld %lld\",&n,&m);/*n=number of days,m=number of names to be written in each page*/\n    a[0]=0;\n    printf(\"\\n\");\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld%,a[i]\");\n    }\n    for(i=1;i<=n;i++)\n    {\n        a[i]+=a[i-1];\n        if(i==1)\n        {\n            printf(\"%lld\",a[i]/m);\n        }\n        else\n        {\n            printf(\"%lld\",(a[i]/m)-(a[i-1]/m));\n        }\n        if(i==n)\n            printf(\"\\n\");\n        else\n            printf(\" \");\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    long long int n,m,i;\n    long long int a[200010];\n    scanf(\"%lli\",&n);\n    scanf(\"%lli\",&m);/*n=number of days,m=max number of names to be written in each page*/\n    a[0]=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lli\",&a[i]);\n    }\n    for(i=1;i<=n;i++)\n    {\n        a[i]+=a[i-1];\n        if(i==1)\n        {\n            printf(\"%lli\",a[i]/m);\n        }\n        else\n        {\n            printf(\"%lli\",a[i]/m-a[i-1]/m);\n        }\n        if(i==n)\n            printf(\"\\n\");\n        else\n            printf(\" \");\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9969040247678018, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f81ba68532083ec58ea19feb24054a6b", "bug_code_uid": "e6f9dcd7208eeca2f4a44070f0c03380", "src_uid": "b1e09df7c47dbd04992e64826337c28a", "apr_id": "b752a31481bf48f4df1501d897c20b20", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\n\nint main()\n{\n   char s1[1000];\n   char s2[1000];\n   gets(s1);\n   gets(s2);\n   int t1[26];\n   int t2[26];\n\n   int i,x;\n   for(i=0;i<26;i++)\n   {\n       t1[i]=0;\n       t2[i]=0;\n   }\n   for(i=0;i<strlen(s1);i++)\n   {\n       t1[s1[i]-97]++;\n\n   }\n   for(i=0;i<strlen(s2);i++)\n   {\n       t2[s2[i]-97]++;\n\n   }\n\nx=0;\n    for(i=0;i<26;i++)\n    {\n        if((t1[i]==0)&&(t2[i]>0))\n        {\n            printf(\"%d\",-1);\n            return 0;\n        }\n        if(t1[i]>=t2[i])\n            x=x+t2[i];\n\n        if(t1[i]<t2[i])\n            x=x+t1[i];\n\n\n    }\n\n\n   printf(\"%d\",x);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<string.h>\n\nint main()\n{\n   char s1[1002];\n   char s2[1002];\n   gets(s1);\n   gets(s2);\n   int t1[26];\n   int t2[26];\n\n   int i,x;\n   for(i=0;i<26;i++)\n   {\n       t1[i]=0;\n       t2[i]=0;\n   }\n   for(i=0;i<strlen(s1);i++)\n   {\n       t1[s1[i]-97]++;\n\n   }\n   for(i=0;i<strlen(s2);i++)\n   {\n       t2[s2[i]-97]++;\n\n   }\n\nx=0;\n    for(i=0;i<26;i++)\n    {\n        if((t1[i]==0)&&(t2[i]>0))\n        {\n            printf(\"%d\",-1);\n            return 0;\n        }\n        if(t1[i]>=t2[i])\n            x=x+t2[i];\n\n        if(t1[i]<t2[i])\n            x=x+t1[i];\n\n\n    }\n\n\n   printf(\"%d\",x);\n    return 0;\n}\n"}
{"similarity_score": 0.997195737521032, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "af665ba723f7f3f8f7582457be288625", "bug_code_uid": "ea52eb9afeb8afc6f94a4687beb7c0a1", "src_uid": "127d7f23a0ac8fcecccd687565d6f35a", "apr_id": "1555de06343c5821eabcfb63e973a459", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\n//  main.c\n//  1569A Balanced Substring\n//\n//  Created by Admin on 2.01.2022.\n//\n\n#include <stdio.h>\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    int t;\n    scanf(\"%d\", &t);\n    while(t--) {\n        int n, ans1 = -1, ans2 = -1;\n        char str[55];\n        scanf(\"%d %s\", &n, str);\n        int ar[n + 1];\n        ar[0] = 0;\n        for(int i = 1; i <= n; i++) {\n            ar[i] = ar[i - 1];\n            if(str[i - 1] == 'a')\n                ar[i]++;\n            else\n                ar[i]--;\n        }\n        for(int i = 1; i < n; i++)  {\n            for(int j = i + 1; j < n; j++)\n                if(ar[j] - ar[i - 1] == 0) {\n                    ans1 = i;\n                    ans2 = j;\n                    break;\n                }\n            if(ans1 != -1)\n                break;\n        }\n        printf(\"%d %d\\n\", ans1, ans2);\n    }\n    return 0;\n}\n", "fixed": "//\n//  main.c\n//  1569A Balanced Substring\n//\n//  Created by Admin on 2.01.2022.\n//\n\n#include <stdio.h>\n\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    int t;\n    scanf(\"%d\", &t);\n    while(t--) {\n        int n, ans1 = -1, ans2 = -1;\n        char str[55];\n        scanf(\"%d %s\", &n, str);\n        int ar[n + 1];\n        ar[0] = 0;\n        for(int i = 1; i <= n; i++) {\n            ar[i] = ar[i - 1];\n            if(str[i - 1] == 'a')\n                ar[i]++;\n            else\n                ar[i]--;\n        }\n        for(int i = 1; i <= n; i++)  {\n            for(int j = i + 1; j <= n; j++)\n                if(ar[j] - ar[i - 1] == 0) {\n                    ans1 = i;\n                    ans2 = j;\n                    break;\n                }\n            if(ans1 != -1)\n                break;\n        }\n        printf(\"%d %d\\n\", ans1, ans2);\n    }\n    return 0;\n}\n\n\n\n"}
{"similarity_score": 0.9939393939393939, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e1ceae0cab78758c57fa919707ac330f", "bug_code_uid": "a7fdbcf20fb313d59bd394027ef667ca", "src_uid": "f9f803c6850da1838d62a0cf85bb13f2", "apr_id": "e3df9f918c40412c8eef52bf0b1cb2f7", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\t\r\n\tstatic int t;\r\n\tint n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tprintf(\"%d %d %d %d\\n\",n-2,1,1,1);\r\n\r\n\t}\r\n } \r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\t\r\n\tstatic int t;\r\n\tint n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tprintf(\"%d %d %d %d\\n\",n-3,1,1,1);\r\n\r\n\t}\r\n } \r\n"}
{"similarity_score": 0.9065934065934066, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "aaca5e7a2b5c60f59a7c54a09f5264bd", "bug_code_uid": "f36ef1e697361143910ebf3315a9633d", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "6bd7b6e8c25b1db0000b19487da22e3a", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,j,tmp;\n\tint a[100];\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=0;j<n-i;j++)\n\t\t\tif (a[j] < a[j - i])\n\t\t\t{\n\t\t\t\ttmp = a[j];\n\t\t\t\ta[j] = a[j-1];\n\t\t\t\ta[j-1] = tmp;\n\t\t\t}\n\tfor(i=1;i<n;i++)\n\t\tif(a[i]>a[i-1])\n\t\t{\n\t\t\tprintf(\"%d\\n\", a[i]);\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,j,tmp;\n\tint a[100];\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(i=0;i<n;i++)\n\t\tfor(j=1;j<n-i;j++)\n\t\t\tif (a[j] < a[j - 1])\n\t\t\t{\n\t\t\t\ttmp = a[j];\n\t\t\t\ta[j] = a[j-1];\n\t\t\t\ta[j-1] = tmp;\n\t\t\t}\n\tfor(i=1;i<n;i++)\n\t\tif(a[i]>a[i-1])\n\t\t{\n\t\t\tprintf(\"%d\\n\", a[i]);\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.888268156424581, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "b54949265daf495ecc018021b11bd3ab", "bug_code_uid": "e7c8e76f9d83580a05d6172e72bbd091", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "27d7325a1c5968cec58c565a1d713fe0", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint Is_prime(int a)\n{\n\tfor(int i=2; i<a; i++)\n\t{\n\t\tif(a%i == 0)\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nint main()\n{\n\tint n,x,y;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tif(n%2 == 0)\n\t\tprintf(\"%d %d\", n/2, n/2);\n\telse\n\t{\n\t\tx=n/2;\n\t\ty = n/2 + 1;\n\t\t\n\t\twhile(Is_prime(x) == 1 || Is_prime(y) == 1)\n\t\t{\n\t\t\t\tx--;\n\t\t\t\ty++;\n\t\t}\n\t\t\n\t\tprintf(\"%d %d\", x, y);\n\t} \n\t\n\t\n\t\n\t\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint Is_prime(int a)\n{\n\tfor(int i=2; i<a; i++)\n\t{\n\t\tif(a%i == 0)\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nint main()\n{\n\tint n,x,y;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tif(n%2 == 0)\n\t{\n\t\tx=n/2;\n\t\ty=n/2;\n\t}\n\telse \n\t{\n\t\tx=n/2;\n\t\ty = n/2 + 1;\n\t}\n\t\t\n\twhile(Is_prime(x) == 1 || Is_prime(y) == 1)\n\t{\n\t\t\tx--;\n\t\t\ty++;\n\t}\n\t\n\tprintf(\"%d %d\", x, y);\n\t\n\t\n\t\n\t\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9891540130151844, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e2c8713c05631efbb03eae0b004d160e", "bug_code_uid": "8671ac56275354772fa089767de439df", "src_uid": "0b4362204bb9f0e95eaf7e2949315c8f", "apr_id": "7090f08b0b5accf72497ebde4d3b1419", "difficulty": 2100, "tags": ["dp", "dfs and similar", "trees"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint eCnt, eLast[25], ePrev[400005], eTar[400005];\nvoid AddEdge(int u, int v) {\n\tePrev[++eCnt] = eLast[u];\n\teTar[eCnt] = v;\n\teLast[u] = eCnt;\n}\n\nint m;\nlong long ans, f[25], g[25], h[25][5], t[25];\nvoid Solve(int now, int far) {\n\tint i, j, k, next;\n\tf[now] = 1;\n\tg[now] = 0;\n\th[now][0] = 1;\n\tfor (i = eLast[now]; i; i = ePrev[i]) {\n\t\tif ((next = eTar[i]) == far) continue;\n\t\tSolve(next, now);\n\t\tans += f[now] * g[next] + g[now] * f[next];\n\t\tfor (j = 0; j < m; ++j)\n\t\t\tfor (k = 0; k < m; ++k)\n\t\t\t\tans += (1 + (j + k + 1 > m)) * h[now][j] * h[next][k];\n\t\tf[now] += f[next];\n\t\tg[now] += g[next] + h[next][m - 1];\n\t\tfor (j = 0; j < m; ++j) h[now][(j + 1) % m] += h[next][j];\n\t}\n}\n\nint main(int argc, char *argv[]) {\n\tint n, i, u, v;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 1; i < n; ++i) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tAddEdge(u, v);\n\t\tAddEdge(v, u);\n\t}\n\tSolve(1, 0);\n\tprintf(\"%I64d\\n\", ans);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint eCnt, eLast[200005], ePrev[400005], eTar[400005];\nvoid AddEdge(int u, int v) {\n\tePrev[++eCnt] = eLast[u];\n\teTar[eCnt] = v;\n\teLast[u] = eCnt;\n}\n\nint m;\nlong long ans, f[200005], g[200005], h[200005][5], t[200005];\nvoid Solve(int now, int far) {\n\tint i, j, k, next;\n\tf[now] = 1;\n\tg[now] = 0;\n\th[now][0] = 1;\n\tfor (i = eLast[now]; i; i = ePrev[i]) {\n\t\tif ((next = eTar[i]) == far) continue;\n\t\tSolve(next, now);\n\t\tans += f[now] * g[next] + g[now] * f[next];\n\t\tfor (j = 0; j < m; ++j)\n\t\t\tfor (k = 0; k < m; ++k)\n\t\t\t\tans += (1 + (j + k + 1 > m)) * h[now][j] * h[next][k];\n\t\tf[now] += f[next];\n\t\tg[now] += g[next] + h[next][m - 1];\n\t\tfor (j = 0; j < m; ++j) h[now][(j + 1) % m] += h[next][j];\n\t}\n}\n\nint main(int argc, char *argv[]) {\n\tint n, i, u, v;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 1; i < n; ++i) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tAddEdge(u, v);\n\t\tAddEdge(v, u);\n\t}\n\tSolve(1, 0);\n\tprintf(\"%I64d\\n\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.7793618465716226, "equal_cnt": 11, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "f270ae0dcf1ee811edd6786cf710b65b", "bug_code_uid": "e1ba5281461951916cd0b289074bce08", "src_uid": "d3aa0632053634e0602b995cfb476d83", "apr_id": "5038ed3a7d9b0e54ce1877695fbc280d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int i=0;\r\n        int a[n];\r\n        while(i<n)\r\n            scanf(\"%d\",&a[i++]);\r\n\r\n\r\n        int len=1,j=0;\r\n        while(j<n)\r\n        {\r\n           if(a[j]==0 && j!=0)\r\n           {\r\n               if(a[j-1]==0)\r\n               {\r\n                 len=-1;\r\n                 break;\r\n               }\r\n               if(a[j-1]==1)\r\n                    len=len+1;\r\n           }\r\n           if(a[j]==1 && j!=0)\r\n           {\r\n               if(a[j-1]==1)\r\n                len=len+5;\r\n               else if(a[j-1]==0)\r\n                len=len+1;\r\n           }\r\n           j++;\r\n        }\r\n        printf(\"%d\\n\",len);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        int i=0;\r\n        int a[n];\r\n        while(i<n)\r\n            scanf(\"%d\",&a[i++]);\r\n\r\n\r\n        int len=1,j=0;\r\n        while(j<n)\r\n        {\r\n           if(a[j]==0)\r\n           {\r\n               if(a[j+1]==0)\r\n                {\r\n                    len=-1;\r\n                    break;\r\n                }\r\n           }\r\n           if(a[j]==1)\r\n           {\r\n               len=len+1;\r\n               if(a[j+1]==1)\r\n               {\r\n                   len=len+4;\r\n\r\n               }\r\n           }\r\n           j++;\r\n        }\r\n        printf(\"%d\\n\",len);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.42016806722689076, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "76376e650da0debe7fb0bc3ae000509f", "bug_code_uid": "2acb512919a5a38afc096a2118c8c8ae", "src_uid": "cfad2cb472e662e037f3415a84daca57", "apr_id": "d2cd6eb84517709388183eab7423c6e5", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint a[3000];\nint main()\n{\n    int n, x, y, i, j, res;\n    scanf(\"%d\", &n);\n    res=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\", &x, &y);\n        if(y<=9)\n            x=((x*10)+y);\n        else\n            x=((x*100)+y);\n\n        a[x]++;\n        if(a[x]>res) res=a[x];\n    }\n\n    printf(\"%d\\n\", res);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n, x, y, i, j, res, count;\n    scanf(\"%d\", &n);\n    int b[n][2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\", &b[i][0], &b[i][1]);\n    }\n    //for(i=0;i<n;i++)\n        //printf(\"%d %d\\n\", b[i][0], b[i][1]);\n\n    res=1;\n    for(j=0;j<n;j++)\n    {\n        if(b[j][0]==-1) continue;\n        count=1;\n        for(i=j+1;i<n;i++)\n        {\n            if(b[j][0]==b[i][0]&&b[j][1]==b[i][1])\n            {\n                count++;\n                b[i][0]=-1;\n                if(count>res) res=count;\n            }\n        }\n    }\n    printf(\"%d\\n\", res);\n    return 0;\n}\n"}
{"similarity_score": 0.9852941176470589, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5b112e135a43a42a4c70301d44823ca4", "bug_code_uid": "afb2166ed2c4b566ff6353b488896046", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "88a3bf34930ea3887446814244e6a671", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint N,NUM[100],i,Z=0,T[200]={0},min,X=0;\n\tint j,temp;\n\tscanf(\"%d\",&N);\n\tfor(i=0;i<N;i++)\n\tscanf(\"%d\",&NUM[i]);\n\tfor(i=0;i<N;i++)\n\t{\n\t\tfor(j=0;j<N-1;j++)\n\t\t{\n\t\t\tif(NUM[j]>NUM[j+1])\n\t\t\t{\n\t\t\t\ttemp=NUM[j];\n\t\t\t\tNUM[j]=NUM[j+1];\n\t\t\t\tNUM[j+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tZ=0;\n\t\n\tfor(i=0;i<N;i++)\n\t{\n\t\tif(i==0)\n\t\t{\n\t\t\tmin=NUM[0];\n\t\t\tT[Z]=min;\n\t\t\tZ++;\n\t\t\tX++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(min<NUM[i])\n\t\t\t{\n\t\t\t\tmin=NUM[i];\n\t\t\t\tT[Z]=min;\n\t\t\t\tZ++;\n\t\t\t\tX++;\n\t\t\t}\n\t\t}\n\t}\n\tif(X<=2)\n\t{\n\t\tprintf(\"NO\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",T[1]);\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint N,NUM[100],i,Z=0,T[200]={0},min,X=0;\n\tint j,temp;\n\tscanf(\"%d\",&N);\n\tfor(i=0;i<N;i++)\n\tscanf(\"%d\",&NUM[i]);\n\tfor(i=0;i<N;i++)\n\t{\n\t\tfor(j=0;j<N-1;j++)\n\t\t{\n\t\t\tif(NUM[j]>NUM[j+1])\n\t\t\t{\n\t\t\t\ttemp=NUM[j];\n\t\t\t\tNUM[j]=NUM[j+1];\n\t\t\t\tNUM[j+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tZ=0;\n\t\n\tfor(i=0;i<N;i++)\n\t{\n\t\tif(i==0)\n\t\t{\n\t\t\tmin=NUM[0];\n\t\t\tT[Z]=min;\n\t\t\tZ++;\n\t\t\tX++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(min<NUM[i])\n\t\t\t{\n\t\t\t\tmin=NUM[i];\n\t\t\t\tT[Z]=min;\n\t\t\t\tZ++;\n\t\t\t\tX++;\n\t\t\t}\n\t\t}\n\t}\n\tif(X<2)\n\t{\n\t\tprintf(\"NO\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",T[1]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.799459824442944, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "c991078e462339979f4908f320a74164", "bug_code_uid": "f7e749e03bda40b7d230c920773a9b40", "src_uid": "b8554e64b92b1b9458955da7d55eba62", "apr_id": "ad634e0df171da6e5aef3023dc43a5dc", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        int n1;\r\n        scanf(\"%d\", &n1);\r\n        int sum = 0;\r\n        int A[n1];\r\n        for (int j = 0; j < n1; j++)\r\n        {\r\n            scanf(\"%d\", &A[j]);\r\n            sum += A[j];\r\n        }\r\n        if (sum % n1 != 0)\r\n        {   //printf(\"%d\",sum%n1);\r\n            printf(\"-1\\n\");\r\n            return 0;\r\n        }\r\n        int ct = 0;\r\n        for (int k = 0; k < n1; k++)\r\n        {\r\n            if (A[k] > (sum / n1))\r\n            {\r\n                ct++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", ct);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    int Ans[n];\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        int n1;\r\n        scanf(\"%d\", &n1);\r\n        int sum = 0;\r\n        int A[n1];\r\n        for (int j = 0; j < n1; j++)\r\n        {\r\n            scanf(\"%d\", &A[j]);\r\n            sum += A[j];\r\n        }\r\n        int ct = 0;\r\n        if (sum % n1 != 0)\r\n        {   //printf(\"%d\",sum%n1);\r\n            Ans[i-1]=-1;    \r\n        }\r\n        else\r\n        {\r\n            for (int k = 0; k < n1; k++)\r\n            {\r\n                if (A[k] > (sum / n1))\r\n                {\r\n                    ct++;\r\n                }\r\n            }\r\n            Ans[i-1]=ct;\r\n        }\r\n        \r\n    }\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        printf(\"%d\\n\",Ans[i]);\r\n    }\r\n    \r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.45342706502636204, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d20822c38fe80f57e041de31f85b758e", "bug_code_uid": "27b8ee47360a1805fdfe0fbd3e6dd3ca", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "0d860e45e565afbebacf66333713fff4", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint compute1(long long int n)\n{\n   long long int i,c=0;\n    for(i=2;i<=n;i++)\n        {\n            if(n%i==0)\n               {\n                c++;\n               }\n\n            if(c==1)\n             {\n             n=n+i;\n             break;\n             }\n        }\n        return n;\n}\nint compute(long long int n,long long int k)\n{\n    long long int t,i,j,f,c=0;\n         for(j=0;j<k;j++)\n        {\n            c=0;\n            n=compute1(n);\n        }\n        return n;\n}\nint main()\n{\n    long long int t,i,j,n,k,f,c=0;\n    scanf(\"%lld\\n\",&t);\n    for(f=0;f<t;f++)\n    {\n      scanf(\"%lld %lld\\n\",&n,&k);\n       printf(\"%lld\\n\",compute(n,k));\n    }\n    return 0;\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,j,n,k,f,c=0;\n    scanf(\"%d\\n\",&t);\n    for(f=0;f<t;f++)\n    {\n        scanf(\"%d %d\\n\",&n,&k);\n        c=0;\n        for(i=2;i<=n;i++)\n        {\n            if(n%i==0)\n               {\n                c++;\n               }\n\n            if(c==1)\n             {\n             n=n+i;\n             break;\n             }\n        }\n       // n=n+((k-1)*2);\n       printf(\"%d\\n\",(n+((k-1)*2)));\n    }\n    return 0;\n\n}"}
{"similarity_score": 0.3671766342141864, "equal_cnt": 25, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "e1208779ab29fc6dfe0046200bfbb144", "bug_code_uid": "6fa8d3caddade30016467bd28ca516cf", "src_uid": "5de66fbb594bb317654366fd2290c4d3", "apr_id": "d75aeb104fa844201d7852f976b3fe2d", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t, count=0, i, j, k;\n    char s[101];\n\n    scanf(\"%d\",&t);\n\n    int a[t];\n\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%s\",s);\n\n        for(j=0; s[j]!='\\0'; j++)\n        {\n            if(s[j]=='0')\n            {\n                for(k=j; s[k]!='\\0'; k++)\n                {\n                    if(s[k]=='1')\n                    {\n                        count++;\n                    }\n                }\n            }\n            break;\n        }\n        a[i] = count;\n        count = 0;\n    }\n\n    for(i=0; i<t; i++)\n        printf(\"%d\\n\",a[i]);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int t,i,l;\n    \n    scanf(\"%d\",&t);\n    \n    while(t--)\n    {\n        char s[101];\n        int count=0;\n        \n        scanf(\"%s\",s);\n        \n        l=strlen(s);\n        \n        for(i=0; i<=l-1; i++)\n        {\n            if(s[i]=='1')\n            {\n                while(s[i+1]!='\\0')\n                {\n                    if(s[i+1]=='0')\n                        count++;\n                    i++;\n                }\n                while(s[l-1]!='\\0')\n                {\n                    if(s[l-1]=='1')\n                    {\n                        goto print;\n                    }\n                    else\n                        count--;\n                    l--;\n                }\n            }\n        }\nprint:\n        printf(\"%d\\n\",count);\n    }\n    \n    return 0;\n}\n"}
{"similarity_score": 0.9821826280623608, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9da4345d9e5c1e1107fa9e5177105614", "bug_code_uid": "7eb03c610e11c216bfb6be0602d9045c", "src_uid": "aa00fbde0b135addd2fdde0310e0377a", "apr_id": "fb7de5dcf33502cceca831a5389adaf5", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int i;\r\n        long long a,b;\r\n        long long s=0;\r\n        long long p=1;\r\n        long long l1,l2;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        while(b!=0)\r\n        {\r\n              //s=0;\r\n              l1=a%10;\r\n              l2=b%10;\r\n              b=b/10;\r\n              a=a/10;\r\n              if(l1>l2)\r\n              {\r\n                l2=l2+10*(b%10);\r\n                b=b/10;\r\n              }\r\n               if(l2-l1>9 || l1>l2)\r\n               {\r\n                  printf(\"-1\\n\");\r\n                  break;\r\n               }\r\n                s=s+p*(l2-l1);\r\n                p=p*10;\r\n         }\r\n          if(a!=0)\r\n          {\r\n              printf(\"-1\\n\");\r\n              break;\r\n          }\r\n          if(s!=0){\r\n            printf(\"%lld\\n\",s);}\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,j;\r\n    scanf(\"%d\",&t);\r\nj:  \r\n      while(t--)\r\n    {\r\n        int i;\r\n        long long a,b;\r\n        long long s=0;\r\n        long long p=1;\r\n        long long l1,l2;\r\n        scanf(\"%lld %lld\",&a,&b);\r\n        while(b!=0)\r\n        {\r\n              //s=0;\r\n              l1=a%10;\r\n              l2=b%10;\r\n              b=b/10;\r\n              a=a/10;\r\n              if(l1>l2)\r\n              {\r\n                l2=l2+10*(b%10);\r\n                b=b/10;\r\n              }\r\n               if(l2-l1>9 || l1>l2)\r\n               {\r\n                  printf(\"-1\\n\");\r\n                  goto j;\r\n               }\r\n                s=s+p*(l2-l1);\r\n                p=p*10;\r\n         }\r\n          if(a!=0)\r\n          {\r\n              printf(\"-1\\n\");\r\n              goto j;\r\n          }\r\n          if(s!=0){\r\n            printf(\"%lld\\n\",s);}\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9915014164305949, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2d4770065a5ce4c0cf9051bb182d1f14", "bug_code_uid": "8a4c8fe6d088555ac88c3fe7238a167d", "src_uid": "54e2b6bea0dc6ee68366405945af50c6", "apr_id": "bd488720a43f00028bfaff7c291c27c8", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define _abs(x) (x > 0 ? x : -x)\n\nint main(void){\n\t\tint n;\n\t\tlong long result = 0;\n\t\tscanf(\"%d\", &n);\n\t\tint sector[n];\n\t\tfor(int i = 0, temp; i < n; i++){\n\t\t\tscanf(\"%d\", &temp);\n\t\t\tsector[temp - 1] = i;\n\t\t}\n\t\tfor(int j = 0; j < n - 1; j++){\n\t\t\tresult += _abs(sector[j] - sector[j + 1]);\n\t\t}\n\t\tprintf(\"%I64d\", result);\n\t\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define _abs(x) ((x) > 0 ? (x) : -(x))\n\nint main(void){\n\t\tint n;\n\t\tlong long result = 0;\n\t\tscanf(\"%d\", &n);\n\t\tint sector[n];\n\t\tfor(int i = 0, temp; i < n; i++){\n\t\t\tscanf(\"%d\", &temp);\n\t\t\tsector[temp - 1] = i;\n\t\t}\n\t\tfor(int j = 0; j < n - 1; j++){\n\t\t\tresult += _abs(sector[j] - sector[j + 1]);\n\t\t}\n\t\tprintf(\"%I64d\", result);\n\t\treturn 0;\n}"}
{"similarity_score": 0.4281150159744409, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "abefa202337f26ba13c18b161ea3c2a8", "bug_code_uid": "df518ceed551b2d3953ea1a6f55f0356", "src_uid": "b5355e1f4439b198d2cc7dea01bc4bc3", "apr_id": "6a0ddabeced7eafc46f87ff3fd929e7b", "difficulty": 1200, "tags": ["constructive algorithms", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"math.h\"\n#include \"string.h\"\nint a[200005],b[200005],c[200005];\nint main()\n{\n    int i,j,n,k,cou1=0,s=0,max,change;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0; i<n; i++)scanf(\"%d\",&a[i]);\n    for(i=0; i<n; i++)scanf(\"%d\",&b[i]);\n    for(i=0; i<n; i++)\n    {\n        c[i]=b[i]-a[i];\n    }\n    for(i=1; i<n; i++)\n    {\n        for (j=1; j<n; j++)\n        {\n            if(c[j-1]<c[j])\n            {\n                change=c[j];\n                c[j]=c[j-1];\n                c[j-1]=change;\n                change=a[j];\n                a[j]=a[j-1];\n                a[j-1]=change;\n                change=b[j];\n                b[j]=b[j-1];\n                b[j-1]=change;\n\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i<k||c[i]>0)s+=a[i];\n        else s+=b[i];\n    }\n    printf(\"%d\",s);\n    return 0;\n}\n", "fixed": "#include \"stdio.h\"\n#include \"stdlib.h\"\n#include \"math.h\"\n#include \"string.h\"\nint quicksort(int num[],int l,int r)\n{\n    int key,i,j;\n    i=l;\n    j=r;\n    key=num[(l+r)/2];\n    while(i<=j)\n    {\n        while(num[i]<key)\n        {\n            i++;\n        }\n        while(num[j]>key)\n        {\n            j--;\n        }\n\n        if(i<=j)\n        {\n            int change;\n            change=num[i];\n            num[i]=num[j];\n            num[j]=change;\n            i++;\n            j--;\n        }\n    }\n\n    if(l<j)\n    {\n        quicksort(num,l,j);\n    }\n    if(i<r)\n    {\n        quicksort(num,i,r);\n    }\n}\nint a[200005],b[200005],c[200005];\nint main()\n{\n    int i,j,n,k,cou1=0,s=0,max,change;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0; i<n; i++){scanf(\"%d\",&a[i]);s+=a[i];}\n    for(i=0; i<n; i++)scanf(\"%d\",&b[i]);\n    for(i=0; i<n; i++)\n    {\n        c[i]=b[i]-a[i];\n    }\n    quicksort(c,0,n-1);\n    for(i=0;i<n-k;i++)\n    {\n        if(c[i]>0)break;\n        else s+=c[i];\n    }\n    printf(\"%d\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.8986212489862125, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f5134e7128b717b999e8d869b9b0ae0a", "bug_code_uid": "345969cc54f1568a679f77fe498d8db7", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "b502af62fa81bcdbe5cf3b8d89e405a7", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,a=0,b=0;\n    scanf(\"%d\",&n);int pos[n],neg[n];\n    for(int i=0; i<n; i++)\n    {int no;\n        scanf(\"%d\",&no);\n        if(no==0){}\n        else if(no>0){pos[a]=no;a++;}\n        else{neg[b]=no;b++;}\n\n\n    }\n    if(a==0)\n    {\n        pos[0]=neg[b-1];\n        pos[1]=neg[b-2];\n        b-=2;a+=2;\n    }\n    printf(\"%d \",b);\n    for(int i=0; i<b; i++)\n        printf(\"%d \",neg[i]);\n    printf(\"\\n%d \",a);\n    for(int i=0; i<a; i++)\n        printf(\"%d \",pos[i]);\n    printf(\"\\n%d %d\",1,0);\n\n\n\n\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n,a=0,b=0;\n    scanf(\"%d\",&n);int pos[n],neg[n];\n    for(int i=0; i<n; i++)\n    {int no;\n        scanf(\"%d\",&no);\n        if(no==0){}\n        else if(no>0){pos[a]=no;a++;}\n        else{neg[b]=no;b++;}\n\n\n    }\n    if(a==0)\n    {\n        pos[0]=neg[b-1];\n        pos[1]=neg[b-2];\n        b-=2;a+=2;\n    }\n    int q=0;\n    if(b%2==0)\n    {\n        q=neg[b-1];b--;\n    }\n    printf(\"%d \",b);\n    for(int i=0; i<b; i++)\n        printf(\"%d \",neg[i]);\n    printf(\"\\n%d \",a);\n    for(int i=0; i<a; i++)\n        printf(\"%d \",pos[i]);\n        if(q==0)\n    printf(\"\\n%d %d\",1,0);\n    else\n       printf(\"\\n%d %d %d\",2,0,q);\n\n\n\n\n}\n"}
{"similarity_score": 0.9684813753581661, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "36967f74a89e73970adafa2ff8e4de3a", "bug_code_uid": "cbb8bd31710aca855c73fae6241b0ef2", "src_uid": "b15bc7ff01f239a7e4377868a7dda0a6", "apr_id": "c7f77e32e706b0510128a373e7996d1c", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    \n    int a,b,c,d,e,f,g,i,j,k=1,n,m;\n    scanf(\"%d%d\",&a,&b);\n    if(((a*a)/2)+1<b)\n    printf(\"NO\\n\");\n    \n    else\n    {printf(\"YES\\n\");\n        for(i=1;i<=a;i++)\n        {\n            for(j=1;j<=a;j++)\n            { \n                \n   if(i%2!=0 && j%2!=0&&k<=b)\n                {printf(\"L\");\n                    k++;}\n      \n   else if( i%2==0 && j%2==0&&k<=b)\n              { printf(\"L\");  \n                    k++;}  \n                else \n                printf(\"S\");\n            }\n            \n            printf(\"\\n\");\n            \n        }\n        \n        \n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    \n    int a,b,c,d,e,f,g,i,j,k=1,n,m;\n    scanf(\"%d%d\",&a,&b);\n    if(a%2==0)\n    m=0;\n    else\n    m=1;\n    if(((a*a)/2)+m<b)\n    printf(\"NO\\n\");\n    \n    else\n    {printf(\"YES\\n\");\n        for(i=1;i<=a;i++)\n        {\n            for(j=1;j<=a;j++)\n            { \n                \n   if(i%2!=0 && j%2!=0&&k<=b)\n                {printf(\"L\");\n                    k++;}\n      \n   else if( i%2==0 && j%2==0&&k<=b)\n              { printf(\"L\");  \n                    k++;}  \n                else \n                printf(\"S\");\n            }\n            \n            printf(\"\\n\");\n            \n        }\n        \n        \n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n}"}
{"similarity_score": 0.869140625, "equal_cnt": 19, "replace_cnt": 5, "delete_cnt": 13, "insert_cnt": 1, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "4838c2da69c6e3e029b715d4c95b8975", "bug_code_uid": "5991bfa45d6ebee60f2c8307b1f78a02", "src_uid": "dc67dd2102c70ea476df642b863ae8d3", "apr_id": "ce82c19e964ac87a1fa12a64ed03eeb7", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "    #include<stdio.h>\n    #include<math.h>\n     \n    void main()\n    {\n        //input no. of test cases\n        int n, i;\n        scanf(\"%d\", &n);\n            \n        for(i=0;i<n;i++)\n        {\n            int A, B, b, flag = 0;;\n            scanf(\"%d %d\",&A,&B);\n            for(b=9; b<=B; b=b*10+9) //we have to get a*(b+1)+b = a*(10 to the power something)+b; so b is of form pow(10,k)-1 \n            {\n                flag = flag + A;   //updating flag if found a pair\n            }\n            printf(\"\\n%d\\n\",flag);\n        }\n    }", "fixed": "#include<stdio.h>\n#include<math.h>\n     \nint main()\n{\n    //input no. of test cases\n    int n, i;\n    scanf(\"%d\", &n);\n        \n    for(i=0;i<n;i++)\n    {\n        int A, B, b;\n        long long int flag = 0;\n        scanf(\"%d %d\",&A,&B);\n        for(b=9; b<=B; b=b*10+9) //we have to get a*(b+1)+b = a*(10 to the power something)+b; so b is of form pow(10,k)-1 \n        {\n            flag = flag + A;   //updating flag if found a pair\n        }\n        printf(\"\\n%lld\\n\",flag);\n    }\n}"}
{"similarity_score": 0.9818181818181818, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3176368432562139dfd6118261793ab1", "bug_code_uid": "dba6f91588a4c7c1249d02e613d8722f", "src_uid": "cf3cfcae029a6997ee62701eda959a60", "apr_id": "6d5f788cafb97557db78aaf5936a6e9b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid solve(int size, int *arr)\r\n{\r\n    int min = INT_MAX, max = INT_MIN;\r\n    int i;\r\n    for (i = 0; i < size; i++)\r\n    {\r\n        if (arr[i] < min)\r\n            min = arr[i];\r\n\r\n        if (arr[i] > max)\r\n            max = arr[i];\r\n    }\r\n\r\n    printf(\"%d\\n\", max - min);\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int n, i, a;\r\n    int size;\r\n    int *arr;\r\n\r\n    scanf(\"%d\", &n);\r\n\r\n    while (n--)\r\n    {\r\n        scanf(\"%d\", &size);\r\n\r\n        arr = (int *)malloc(sizeof(int) * size);\r\n        for (i = 0; i < size; i++)\r\n        {\r\n            scanf(\"%d\", &a);\r\n            arr[i] = a;\r\n        }\r\n\r\n        solve(size, arr);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid solve(int size, int *arr)\r\n{\r\n    int min = 2147483647, max = 0;\r\n    int i;\r\n    for (i = 0; i < size; i++)\r\n    {\r\n        if (arr[i] < min)\r\n            min = arr[i];\r\n\r\n        if (arr[i] > max)\r\n            max = arr[i];\r\n    }\r\n\r\n    printf(\"%d\\n\", max - min);\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int n, i, a;\r\n    int size;\r\n    int *arr;\r\n\r\n    scanf(\"%d\", &n);\r\n\r\n    while (n--)\r\n    {\r\n        scanf(\"%d\", &size);\r\n\r\n        arr = (int *)malloc(sizeof(int) * size);\r\n        for (i = 0; i < size; i++)\r\n        {\r\n            scanf(\"%d\", &a);\r\n            arr[i] = a;\r\n        }\r\n\r\n        solve(size, arr);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.98989898989899, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "98c6c0d69322b175749b814790f25212", "bug_code_uid": "f0b781d9739465d8d80b4ac5cb5b62ed", "src_uid": "00acb3b54975820989a788b9389c7c0b", "apr_id": "63ab31fe08f384ff29c8afec085fa453", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int i,n,L,a,t[100005]={0},l[100005]={0},count=0;\n\n    scanf(\"%d %d %d\",&n,&L,&a);\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&t[i],&l[i]);\n\n    t[n]=L;\n    count+=t[0]/a;\n    for(i=0;i<n;i++){\n        count+=(t[i+1]-(t[i]+l[i]))/a;\n    }\n\n    if(n==0)count+=L/a;\n\n    printf(\"%d\",count);\n\n    return 0;\n    }", "fixed": "#include<stdio.h>\n\nint main(){\n    int i,n,L,a,t[100005]={0},l[100005]={0},count=0;\n\n    scanf(\"%d %d %d\",&n,&L,&a);\n    for(i=0;i<n;i++)\n        scanf(\"%d %d\",&t[i],&l[i]);\n\n    if(n>0)t[n]=L;\n    count+=t[0]/a;\n    for(i=0;i<n;i++){\n        count+=(t[i+1]-(t[i]+l[i]))/a;\n    }\n\n    if(n==0)count+=L/a;\n\n    printf(\"%d\",count);\n\n    return 0;\n    }"}
{"similarity_score": 0.42950819672131146, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "80df8a36e7cf63e2e624274d2dd74f70", "bug_code_uid": "34d0b96dfe89b82f29028e154ba83da3", "src_uid": "98de093d78f74273e0ac5c7886fb7a41", "apr_id": "b71196b93ca143a1948da9679ec90445", "difficulty": 1600, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    unsigned long long a,b,k,sum;\n    scanf(\"%llu %llu %llu\",&k,&a,&b);\n\n    while(a%k!=0) a++;\n    while(b%k!=0) b--;\n\n    sum=abs(a/k-b/k)+1;\n\n    printf(\"%llu\\n\",sum);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long k,a,b,sum;\n    scanf(\"%I64d %I64d %I64d\",&k,&a,&b);\n    if(b>=0) b=(b/k)*k;\n    else if(b<0)\n    {\n        if(b%k!=0)\n            b=((b/k)-1)*k;\n    }\n    if(a>=0)\n    {\n        if(a%k!=0)\n        {\n            a=((a/k)+1)*k;\n        }\n    }\n    else if(a<0)\n        a=(a/k)*k;\n\n    sum=(b/k)-(a/k)+1;\n    printf(\"%I64d\\n\",sum);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8521082441787288, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "6ffafa13bc0e4d8b9ea29f318f7ac650", "bug_code_uid": "1bf4aec19bdfd4b4ca8cc98736d85e30", "src_uid": "67a70d58415dc381afaa74de1fee7215", "apr_id": "1cdcfab99d082a40ce9187c755ceb4e7", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nlong int ar[30],ar1[30];\nchar s[300002],s1[2],s2[2];\nint main(void) {\n    long int i,j,k,m,n,q;\n    char a,b;\n    for(i=0;i<30;i++)\n    {\n    ar[i]=i;\n    ar1[i]=0;\n    }\n    scanf(\"%ld%ld%s\",&n,&q,&s);\n    for(j=0;j<q;j++)\n    {\n        scanf(\"%s %s\",&s1,&s2);\n        k=s1[0]-'a';\n        m=s2[0]-'a';\n        //printf(\"%ld %ld\\n\",k,m);\n        //printf(\"%s %s %ld\\n\",s1,s2,q);\n        for(i=0;i<25;i++)\n        {\n            if(ar[i]==m&&ar1[i]==0)\n            {\n            ar[i]=k;\n            ar1[i]=1;\n            }\n            if(ar[i]==k&&ar1[i]==0)\n            ar[i]=m;\n        }\n        for(i=0;i<25;i++)\n        {\n        ar1[i]=0;\n        //if(j==q-1)\n        //printf(\"%ld \",ar[i]);\n        }\n        //printf(\"\\n\");\n    }\n    for(i=0;i<strlen(s);i++)\n    {\n        s[i]=ar[s[i]-'a']+'a';\n    }\n    printf(\"%s\\n\",s);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nlong int ar[30],ar1[30];\nchar s[300002],s1[2],s2[2];\nint main(void) {\n    long int i,j,k,m,n,q;\n    char a,b;\n    for(i=0;i<30;i++)\n    {\n    ar[i]=i;\n    ar1[i]=0;\n    }\n    scanf(\"%ld%ld%s\",&n,&q,&s);\n    for(j=0;j<q;j++)\n    {\n        scanf(\"%s %s\",&s1,&s2);\n        k=s1[0]-'a';\n        m=s2[0]-'a';\n        for(i=0;i<26;i++)\n        {\n            if(ar[i]==m&&ar1[i]==0)\n            {\n            ar[i]=k;\n            ar1[i]=1;\n            }\n            if(ar[i]==k&&ar1[i]==0)\n            ar[i]=m;\n        }\n        for(i=0;i<26;i++)\n        ar1[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        s[i]=ar[s[i]-'a']+'a';\n    }\n    printf(\"%s\\n\",s);\n    return 0;\n}"}
{"similarity_score": 0.7748478701825557, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "6978335692b19fca313ad5584718c7ef", "bug_code_uid": "f8fa273c87bc6638623aab86e15627ce", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "7017e07f8679c31a1eef61e98fdee862", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    long long int a,b,n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld %lld\",&a,&b);\n        if(a%b==0)\n            printf(\"0\");\n        else\n            printf(\"%lld\\n\",b-(a%b));\n    }\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int t,i,x;\n  long long int a,b;\n  scanf(\"%d\",&t);\n  for(i=0;i<t;i++)\n  {\n      scanf(\"%lld %lld\",&a,&b);\n      x=b*(a/b+1)-a;\n      if(a%b==0)\n        printf(\"%d\\n\",a%b);\n      else\n\n      printf(\"%d\\n\",x);\n  }\n\n}\n"}
{"similarity_score": 0.9951219512195122, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "21253d108f29cf7de0c6ce8f2b9a7289", "bug_code_uid": "da6e9f1ae840f493e785aa2db186d8d7", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "9a5831b88186f93e2e43be77d93f4730", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tint fa=0,fb=0,f=0;\n\tchar a[1000];\n\tchar b[1000];\n\tscanf(\"%s\",a);\n\tscanf(\"%s\",b);\nfor(int i=0;i<strlen(a);i++){\n\tfa=0;\n\tfb=0;\n\tif(a[i]=='a'||a[i]=='i'||a[i]=='e'||a[i]=='o'||a[i]=='u')\n\t\tfa=1;\n\tif(b[i]=='a'||b[i]=='i'||b[i]=='e'||b[i]=='o'||b[i]=='u')\n\t\tfb=1;\n\tif(fa==fb)\n\t    f++;\n}\nif(f==strlen(a)&&strlen(a)==strlen(b))\nprintf(\"YES\");\nelse\nprintf(\"NO\");\n }", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n\tint fa=0,fb=0,f=0;\n\tchar a[1001];\n\tchar b[1001];\n\tscanf(\"%s\",a);\n\tscanf(\"%s\",b);\nfor(int i=0;i<strlen(a);i++){\n\tfa=0;\n\tfb=0;\n\tif(a[i]=='a'||a[i]=='i'||a[i]=='e'||a[i]=='o'||a[i]=='u')\n\t\tfa=1;\n\tif(b[i]=='a'||b[i]=='i'||b[i]=='e'||b[i]=='o'||b[i]=='u')\n\t\tfb=1;\n\tif(fa==fb)\n\t    f++;\n}\nif(f==strlen(a)&&strlen(a)==strlen(b))\nprintf(\"YES\");\nelse\nprintf(\"NO\");\n }"}
{"similarity_score": 0.8815977175463623, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "48c3c98bb114451f11fdb07601821e67", "bug_code_uid": "8cf701d82dbc5e357aa89e007630718c", "src_uid": "816907d873bce3573ce1e5ae3f494768", "apr_id": "2e19a160e8a62695eef25bdcf3ac24d7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,i,j,len;\n    scanf(\"%d\",&t);\n    char str[100];\n\n    for(i=0; i<t; i++)\n    {\n        gets(str);\n        len=strlen(str);\n        if(str[len-1]=='o')printf(\"FILIPINO\\n\");\n        if(str[len-1]=='u')printf(\"JAPANESE\\n\");\n        if(str[len-1]=='a')printf(\"KOREAN\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,i=0,len;\n    scanf(\"%d\",&t);\n    char str[1000];\n\n    while(i<t)\n    {\n        scanf(\"%s\",str);\n        len=strlen(str);\n        if(str[len-1]=='o')printf(\"FILIPINO\\n\");\n        else if(str[len-1]=='u')printf(\"JAPANESE\\n\");\n        else printf(\"KOREAN\\n\");\n        i++;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8476454293628809, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "edcb7b2faaea48646131c70aad7c2299", "bug_code_uid": "7ddb6e8cf0b16bb358328197f24b4dc5", "src_uid": "9c84eb518c273942650c7262e5d8b45f", "apr_id": "96744b989fb7c47e7b816835341086ba", "difficulty": 1100, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\n\tint n,d,m,x,y;\n\tscanf(\"%d %d\",&n,&d);\n\tif(1<=d && d<n && n<=100)\n\tscanf(\"%d\",&m);\n\tif(m>=1 && m<=100)\n\tfor(int i=0;i<m;i++)\n\t{\n\tscanf(\"%d %d\",&x,&y);\n\tif(x>=0 && y>=0 && x<=(n-d) && y<=(n-d) && x<=n && y<=n && y>=d && x>=d)\n\t{\n\tprintf(\"YES\\n\");\t\n\t}\n\telse\n\tprintf(\"NO\\n\");\n}\n\n\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main()\n{\n\tint n,d,m,x,y;\n\tscanf(\"%d %d\",&n,&d);\n\tif(1<=d && d<n && n<=100)\n\tscanf(\"%d\",&m);\n\tif(m>=1 && m<=100)\n\tfor(int i=0;i<m;i++)\n\t{\n\tscanf(\"%d %d\",&x,&y);\n\tif((x+y)>=d && (x+y)<=(2*n-d)&& (x-y)<=d && (x-y)>=(-d))\n\t{\n\tprintf(\"YES\\n\");\t\n\t}\n\telse\n\tprintf(\"NO\\n\");\n}\n\n\n}\n"}
{"similarity_score": 0.9436619718309859, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "00265c829a5ac6b75f34aa8092937dc2", "bug_code_uid": "711c60372326be7f61ac1c733661643b", "src_uid": "3c06e3cb2d8468e738b736a9bf88b4ca", "apr_id": "68e78aec789298ad939b52fa25186693", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\n\nint main()\n{\n   char a[20],b[20];\n   int n;\n   char c[20],d[20];\n\n   scanf(\"%s\",a);\n   scanf(\"%s\",b);\n   scanf(\"%d\",&n);\n\n   while(n>=0)\n   {\n      printf(\"%s \",a);\n      printf(\"%s\\n\",b);\n\n      scanf(\"%s\",c);\n      scanf(\"%s\",d);\n\n\n     if(!strcmp(a,c))\n     {\n         strcpy(a,d);\n         continue;\n     }\n    if(!strcmp(b,d))\n     {\n         strcpy(b,c);\n         continue;\n     }\n    if(!strcmp(b,c))\n     {\n         strcpy(b,d);\n         continue;\n     }\n   if(!strcmp(a,d))\n     {\n         strcpy(a,c);\n         continue;\n     }\n\n\n\n\n       n--;\n   }\n\n\n\n\n\n\n  return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\n\nint main()\n{\n   char a[20],b[20];\n   int n;\n   char c[20],d[20];\n\n   scanf(\"%s\",a);\n   scanf(\"%s\",b);\n   scanf(\"%d\",&n);\n\n   while(n>=0)\n   {\n      printf(\"%s \",a);\n      printf(\"%s\\n\",b);\n\n      scanf(\"%s\",c);\n      scanf(\"%s\",d);\n\n\n     if(!strcmp(a,c))\n     {\n         strcpy(a,d);\n         n--;\n         continue;\n     }\n    if(!strcmp(b,d))\n     {\n         strcpy(b,c);\n         n--;\n         continue;\n     }\n    if(!strcmp(b,c))\n     {\n         strcpy(b,d);\n         n--;\n         continue;\n     }\n   if(!strcmp(a,d))\n     {\n         strcpy(a,c);\n         n--;\n         continue;\n     }\n\n\n\n\n\n   }\n\n  return 0;\n\n}\n"}
{"similarity_score": 0.3694412770809578, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "d8f41f977abc22c68e9ed8b22bc6889c", "bug_code_uid": "1b606093a1f0aa2b7a7cd64108df72ec", "src_uid": "b978ca6fdef4a02cc027485294caa0f5", "apr_id": "2ea0e5f9a1f528adb347dea63dbcf9e3", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint cmp(const void * a, const void * b){\n   return ( *(int*)a - *(int*)b );\n}\n\nint main(){\n    int t , n , i , last , ans=0 , a[100005];\n    scanf(\"%d\",&t);\n    while(t--){\n        ans=0;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n        qsort(a,n,sizeof(a[0]),cmp);\n        for(i=0;i<n;i++){\n            if(a[i+1] != a[i]) ans++;\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint cmp(const void *a, const void *b){\n\treturn (*(int*)b)-(*(int*)a);\n}\n\nint main(){\n    int t, i, j, n, a[100001], ans, tmp;\n\tscanf(\"%d\", &t);\n\tfor(i=0;i<t;i++){\n\t\tscanf(\"%d\", &n);\n\t\tans=n;\n\t\tfor(j=0;j<n;j++){\n\t\t\tscanf(\"%d\", &a[j]);\n\t\t}\n\t\tqsort(a, n, sizeof(int), cmp);\n\t\tfor(j=1;j<n;j++){\n\t\t\tif(a[j]==a[j-1]) ans--;\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9971401334604385, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8cf8d5c43cda7425883083ffd69abcce", "bug_code_uid": "9cd0d59eeeb45d9aa6906095159b4b4f", "src_uid": "b856eafe350fccaabd39b97fb18d9c2f", "apr_id": "c7942c12a1d5930517ab4de7354d630d", "difficulty": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#include<stdio.h>\r\n\r\nint main() {\r\n   int t;\r\n   scanf(\"%d\", &t);\r\n   while(t--) {\r\n       int n;\r\n       long long int arr[20001], max1 = 0, max2 = 0, j;\r\n       scanf(\"%d\", &n);\r\n       for(int i = 0; i < n; i++) {\r\n           scanf(\"%lld \", &arr[i]);\r\n           if(arr[i] >= max1) {\r\n               max2 = max1;\r\n               max1 = arr[i];\r\n           }\r\n           else if(max2 >= arr[i]) max2 = arr[i];\r\n       }\r\n       printf(\"%lld\\n\", max1 + max2);\r\n       \r\n   }\r\n    \r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#include<stdio.h>\r\n\r\nint main() {\r\n   int t;\r\n   scanf(\"%d\", &t);\r\n   while(t--) {\r\n       int n;\r\n       long long int arr[20001], max1 = 0, max2 = 0, j;\r\n       scanf(\"%d\", &n);\r\n       for(int i = 0; i < n; i++) {\r\n           scanf(\"%lld \", &arr[i]);\r\n           if(arr[i] >= max1) {\r\n               max2 = max1;\r\n               max1 = arr[i];\r\n           }\r\n           else if(max2 < arr[i]) max2 = arr[i];\r\n       }\r\n       printf(\"%lld\\n\", max1 + max2);\r\n       \r\n   }\r\n    \r\n}\r\n"}
{"similarity_score": 0.9990186457311089, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "12deecc24de5e6ec77418976d82bfba3", "bug_code_uid": "c91d46079c76dac976a47e73d69ff370", "src_uid": "f4982de28aca7080342eb1d0ff87734c", "apr_id": "f595e4db90497d5a8a8cba6e25043960", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint calcMinutes(h,m);\n\nint main()\n{\n    int counter = 0, n , hours, minutes;\n    scanf(\"%d\",&n);\n\n    while(counter < n)\n    {\n        scanf(\"%d %d\",&hours,minutes);\n        if(hours>=0 && hours<=23 && minutes>=0 && minutes<=60) {\n            printf(\"%d\\n\",calcMinutes(hours,minutes));\n            counter++;\n        }\n    }\n    return 0;\n}\n\nint calcMinutes(int h,int m) {\n    int hoursRes = (23 - h) * 60;\n    int minsRes  = (60 - m);\n    return (hoursRes+minsRes);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint calcMinutes(h,m);\n\nint main()\n{\n    int counter = 0, n , hours, minutes;\n    scanf(\"%d\",&n);\n\n    while(counter < n)\n    {\n        scanf(\"%d %d\",&hours,&minutes);\n        if(hours>=0 && hours<=23 && minutes>=0 && minutes<=60) {\n            printf(\"%d\\n\",calcMinutes(hours,minutes));\n            counter++;\n        }\n    }\n    return 0;\n}\n\nint calcMinutes(int h,int m) {\n    int hoursRes = (23 - h) * 60;\n    int minsRes  = (60 - m);\n    return (hoursRes+minsRes);\n}\n"}
{"similarity_score": 0.996078431372549, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ff47cb1d249d2f33299df23ea48b389d", "bug_code_uid": "7c4e93110deed3d55eb2bbe1964a4dd1", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "15763ff9442626291e7e5798acde65af", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int a,b;\n\n    scanf(\"%d\",&b);\n\n    for(int i=1;i<=b;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a<=2)\n            printf(\"2\");\n        else\n        {\n            printf(\"%d\\n\",a%=2);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n    int a,b;\n\n    scanf(\"%d\",&b);\n\n    for(int i=1;i<=b;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a<=2)\n            printf(\"2\\n\");\n        else\n        {\n            printf(\"%d\\n\",a%=2);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8561872909698997, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "01cbc40c67199cc9a8729512086b52ed", "bug_code_uid": "b87ee6dd6420c8a92d9f638426abdced", "src_uid": "5aae6b27f35852512a250751ef957ab9", "apr_id": "86fa9bf549a53195e89ce60801dad8e4", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int tt = 0; tt < t; tt++){\r\n        int n, m, i, j;\r\n        scanf(\"%d %d %d %d\", &n, &m, &i, &j);\r\n        printf(\"0 0 %d %d\\n\", n, m);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int tt = 0; tt < t; tt++){\r\n        int n, m, i, j;\r\n        scanf(\"%d %d %d %d\", &n, &m, &i, &j);\r\n        printf(\"1 1 %d %d\\n\", n, m);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9825282631038027, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "57a5c5a9d33a3917fc8b26a4eb01e183", "bug_code_uid": "76f2beb6cc6275db29696d2d4c904b9f", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "b2834e56f1202118e95cb56145525963", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\nint cmpfunc (const void * a1, const void * b1)\n { return ( *(int*)b1 - *(int*)a1 ); }\n\nmain()\n{\n\tint t,arr[450001],arr2[50001],ok=0; scanf(\"%d\",&t);\n\tfor(int a=0;a<500000;a++) arr2[a]=1;\n\tfor(int a=0;a<t;a++)\n\tscanf(\"%d\",&arr[a]);\n\tfor(int d=0;d<t-1;d++)\n\t{\n\t\tif(arr[d+1]>=arr[d]) arr2[ok]++;\n\t\telse ok++;\n\t}\n\tqsort(arr2,ok+1,sizeof(int),cmpfunc);\n\tprintf(\"%d\",arr2[0]);\n//\tprintf(\"arr2[0]=%d arr2[1]=%d ok= %d %d\",arr2[0],arr2[1],ok,arr2[0]+1);\n}\n", "fixed": "#include<stdio.h>\n#include <stdlib.h>\nint cmpfunc (const void * a1, const void * b1)\n { return ( *(int*)b1 - *(int*)a1 ); }\n\nmain()\n{\n\tint t,arr[250001],arr2[200001],ok=0; scanf(\"%d\",&t);\n\tfor(int a=0;a<200001;a++) arr2[a]=1;\n\tfor(int a=0;a<t;a++)\n\tscanf(\"%d\",&arr[a]);\n\tfor(int d=0;d<t-1;d++)\n\t{\n\t\tif(arr[d+1]>=arr[d]) arr2[ok]++;\n\t\telse ok++;\n\t}\n\tqsort(arr2,ok+1,sizeof(int),cmpfunc);\n\tprintf(\"%d\",arr2[0]);\n//\tprintf(\"arr2[0]=%d arr2[1]=%d ok= %d %d\",arr2[0],arr2[1],ok,arr2[0]+1);\n}\n"}
{"similarity_score": 0.998003992015968, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "adc71e3ac49c852fb728957c58805262", "bug_code_uid": "f4595eff2a755e962497d8bca4c1eab0", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "5b53fb72d7ef093d7fcc346c60ddb8c2", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint q,t;\n\tscanf(\"%d\",&t);\n\t\n\tfor(q=0;q<t;q++)\n\t{\n\t\tint n,m;\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tif(n!=1&&n!=2)\n\t\t{\t\n\t\t\tm = 2*m;\n\t\t\tprintf(\"%d \\n\",m);\n\t\t}\n\t\t\n\t\tif(n==11)\n\t\t\t\tprintf(\"0\\n\");\n\t\tif(n==2)\n\t\t\t\tprintf(\"%d\\n\",m);\n\t\t\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint q,t;\n\tscanf(\"%d\",&t);\n\t\n\tfor(q=0;q<t;q++)\n\t{\n\t\tint n,m;\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tif(n!=1&&n!=2)\n\t\t{\t\n\t\t\tm = 2*m;\n\t\t\tprintf(\"%d \\n\",m);\n\t\t}\n\t\t\n\t\tif(n==1)\n\t\t\t\tprintf(\"0\\n\");\n\t\tif(n==2)\n\t\t\t\tprintf(\"%d\\n\",m);\n\t\t\n\t}\n}\n"}
{"similarity_score": 0.9341317365269461, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aca0c9ae6624ee3272a164b71f39f169", "bug_code_uid": "5becaed77ac38bf809278b6b492afb6e", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "cf058739ae130126b0c14deb20bc3fe6", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,m,k,a[1000001],c[1000001],b[300001][2],i,d=1,l=0,j,x=0;\n    scanf(\"%lld %lld %lld\",&n,&m,&k);\n    for(i=1;i<=1000001;i++)\n    {a[i]=0;}\n    for(i=1;i<=m;i++)\n    {scanf(\"%lld\",&c[i]);}\n    for(i=1;i<=m;i++)\n    {a[c[i]]=1;}\n    for(i=1;i<=k;i++)\n    {scanf(\"%lld %lld\",&b[i][0],&b[i][1]);}\n    for(i=1;i<=m;i++)\n    {if(a[i]==1)\n     {printf(\"1\");\n      l++;\n      break;\n     }\n    }\n    if(l==0)\n    {\n      for(i=1;i<=k;i++)\n     { if(b[i][0]==d)\n       {d=b[i][1];}\n      else\n      {if(b[i][1]==d)\n       {d=b[i][0];}\n      }\n      if(a[d]==1)\n      {x++;}\n      if(x!=0)\n      {break;}\n     }\n     printf(\"%lld\",d);\n    }\n    return 0;\n}\n       \n       \n       \n       \n       \n       \n       \n       \n       \n       ", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,m,k,a[1000001],c[1000001],b[300001][2],i,d=1,l=0,j,x=0;\n    scanf(\"%lld %lld %lld\",&n,&m,&k);\n    for(i=1;i<=1000001;i++)\n    {a[i]=0;}\n    for(i=1;i<=m;i++)\n    {scanf(\"%lld\",&c[i]);}\n    for(i=1;i<=m;i++)\n    {a[c[i]]=1;}\n    for(i=1;i<=k;i++)\n    {scanf(\"%lld %lld\",&b[i][0],&b[i][1]);}\n    if(a[1]==1)\n    {l++;\n     printf(\"1\");\n    }\n    if(l==0)\n    {\n      for(i=1;i<=k;i++)\n     { if(b[i][0]==d)\n       {d=b[i][1];}\n      else\n      {if(b[i][1]==d)\n       {d=b[i][0];}\n      }\n      if(a[d]==1)\n      {x++;}\n      if(x!=0)\n      {break;}\n     }\n     printf(\"%lld\",d);\n    }\n    return 0;\n}\n       \n       \n       \n       \n       \n       \n       \n       \n       \n       "}
{"similarity_score": 0.8300300300300301, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "abc9ed4abc812efd04a7652bb0098dd3", "bug_code_uid": "559296f84803d34ea87acca27fbee0bd", "src_uid": "f8a89510fefbbc8e5698efe8a0c30927", "apr_id": "fe4761ba69f7058171e45a998964079d", "difficulty": 800, "tags": ["data structures", "implementation"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint hs(char s[]){\r\n    int id=0;\r\n    for(int i=0;i<3;i++){\r\n        id=id*26+(s[i]-'a'+1);\r\n    }\r\n    return id;\r\n}\r\nchar s[1000000][30];\r\nint hash[100000000]={0};\r\nint main(){\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tint mid;\r\n\t\tint id;\r\n\t\tscanf(\"%d\",&mid);\r\n\t\tfor(int k=0;k<3*mid;k++){\r\n\t\t\tscanf(\"%s\",&s[k]);\r\n\t\t\tid=hs(s[k]);\r\n\t\t\thash[id]++;\r\n\t\t}\r\n\t\tfor(int k=0;k<3*mid;k++){\r\n\t\t\tif(hash[hs(s[k])]==3) hash[hs(s[k])*100]=0;\r\n\t\t\tif(hash[hs(s[k])]==2) hash[hs(s[k])*100]=1;\r\n\t\t\tif(hash[hs(s[k])]==1) hash[hs(s[k])*100]=3;\r\n\t\t}\r\n\t\tint sum=0;\r\n\t\tfor(int i=0;i<3;i++){\r\n\t\t\tsum=0;\r\n\t\t\tfor(int j=mid*i;j<mid*(i+1);j++){\r\n\t\t\t\tsum+=hash[hs(s[j])*100];\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\",sum);\r\n\t\t\tprintf(i< 2 ? \" \" : \"\\n\");\r\n\t\t}\r\n\t\tmemset(hash,0,sizeof(hash));\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint hs(char s[]){\r\n    int id=0;\r\n    for(int i=0;i<3;i++){\r\n        id=id*26+(s[i]-'a'+1);\r\n    }\r\n    return id;\r\n}\r\nchar s[10000][30];\r\nint hash[20000]={0};\r\nint bhash[20000]={0};\r\nint main(){\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tint mid;\r\n\t\tint id;\r\n\t\tscanf(\"%d\",&mid);\r\n\t\tfor(int k=0;k<3*mid;k++){\r\n\t\t\tscanf(\"%s\",&s[k]);\r\n\t\t\tid=hs(s[k]);\r\n\t\t\thash[id]++;\r\n\t\t}\r\n\t\tfor(int k=0;k<3*mid;k++){\r\n\t\t\tif(hash[hs(s[k])]==3) bhash[hs(s[k])]=0;\r\n\t\t\tif(hash[hs(s[k])]==2) bhash[hs(s[k])]=1;\r\n\t\t\tif(hash[hs(s[k])]==1) bhash[hs(s[k])]=3;\r\n\t\t}\r\n\t\tint sum=0;\r\n\t\tfor(int i=0;i<3;i++){\r\n\t\t\tsum=0;\r\n\t\t\tfor(int j=mid*i;j<mid*(i+1);j++){\r\n\t\t\t\tsum+=bhash[hs(s[j])];\r\n\t\t\t}\r\n\t\t\tprintf(\"%d\",sum);\r\n\t\t\tprintf(i< 2 ? \" \" : \"\\n\");\r\n\t\t}\r\n\t\tmemset(hash,0,sizeof(hash));\r\n\t\tmemset(bhash,0,sizeof(bhash));\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9969230769230769, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d11e0ef6a14730174276731111e53b41", "bug_code_uid": "19d82f7fd11e2c692e5038eae968f0d4", "src_uid": "e0ba8e0bfd9e1365daa41e1d14610200", "apr_id": "839675b9ea6191038a783616ed63f349", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n    int a[2002],i,j,n;\n\n    scanf(\"%d\",&n);\n\n    for(i = 1; i <= n; i++){\n\n        scanf(\"%d\",&a[i]);\n    }\n    printf(\"%d\\n\",n + 1);\n\n    printf(\"1 %d 2100\\n\",n);\n\n    for(i = 1; i <= n; i++){\n\n        a[i] = a[i] + 2100;\n\n        printf(\"2 %d %d\\n\",i,a[i] - (i - 1));\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\n    int a[2002],i,j,n;\n\n    scanf(\"%d\",&n);\n\n    for(i = 1; i <= n; i++){\n\n        scanf(\"%d\",&a[i]);\n    }\n    printf(\"%d\\n\",n + 1);\n\n    printf(\"1 %d 21000\\n\",n);\n\n    for(i = 1; i <= n; i++){\n\n        a[i] = a[i] + 21000;\n\n        printf(\"2 %d %d\\n\",i,a[i] - (i - 1));\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9465648854961832, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "4f219db5a4a7414c98769850ef0b5813", "bug_code_uid": "d5404c3787c5fddac46052b0be8530cf", "src_uid": "f79a926e18a3f81b24f2fc3ae5c8f928", "apr_id": "5966ef54f9e204da0c7cbb96d58fdc94", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main() {\n    long long n,x;\n    int count,i;\n    scanf(\"%d\",&count);\n    for(i = 0; i < count;i++) {\n        scanf(\"%d %d\",&n,&x);\n        printf(\"%d\\n\",2*x);\n    }\n}", "fixed": "#include<stdio.h>\n\nint main() {\n    long long n,x;\n    int count,i;\n    scanf(\"%d\",&count);\n    for(i = 0; i < count;i++) {\n        scanf(\"%d %d\",&n,&x);\n        printf(\"%d\\n\",2*x);\n    }\n    return 0;\n}"}
{"similarity_score": 0.6894117647058824, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "efded78ae7a8ba10650b268e9fdea62e", "bug_code_uid": "7a0a72fff6ae9e8abd1787ada1068bb6", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "562b05330a016fbfbe879b72bf099a02", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n,j;\n    long long int i,sum1=0,sum2=0,sum3=0;\n    scanf(\"%d\",&n);\n    for(j=1;j<=n;j++)\n    {\n        scanf(\"%lld\",&i);\n        sum1+=i;\n    }\n    for(j=1;j<=n-1;j++)\n    {\n        scanf(\"%lld\",&i);\n        sum2+=i;\n    }\n    printf(\"%lld\",sum2-sum1);\n    \n    for(j=1;j<=n-2;j++)\n    {\n        scanf(\"%lld\",&i);\n        sum3+=i;\n    }\n    printf(\"%lld\",sum2-sum3);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,j;\n    long long int i,sum1=0,sum2=0,sum3=0;\n    scanf(\"%d\",&n);\n    for(j=1;j<=n;j++)\n    {\n        scanf(\"%lld\",&i);\n        sum1+=i;\n    }\n    for(j=1;j<=n-1;j++)\n    {\n        scanf(\"%lld\",&i);\n        sum2+=i;\n    }\n    printf(\"%lld\\n\",sum1-sum2);\n    \n    for(j=1;j<=n-2;j++)\n    {\n        scanf(\"%lld\",&i);\n        sum3+=i;\n    }\n    printf(\"%lld\",sum2-sum3);\n    return 0;\n}\n"}
{"similarity_score": 0.9963459196102314, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "524105f32feb8b9da985eafb2b5f0c92", "bug_code_uid": "6f413f6fdb0fab9e982bf4865b9e5a17", "src_uid": "357dcc8fb7783d878cd2c4ed34eb437e", "apr_id": "e27f87ec86dbc567dfb615ac99540050", "difficulty": 1000, "tags": ["brute force", "dp", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\n#define MAX_LEN (100)\r\nchar str[1+ MAX_LEN +1];\r\n\r\nint D[2][1 + MAX_LEN + 1];\r\n\r\n\r\nint main(void)\r\n{\r\n\tint T;\r\n\tint len;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tscanf(\"%s\", str+1);\r\n\t\tfor (len=1;str[len];len++)\r\n\t\t{\r\n\t\t\tstr[len] -= '0';\r\n\t\t}\r\n\r\n\t\tD[0][0] = 1;\r\n\t\tD[1][0] = 1;\r\n\t\tD[0][1] = str[1] == 0;\r\n\t\tD[1][1] = str[1] == 1;\r\n\r\n\t\tfor (int i = 2; i<len; i++)\r\n\t\t{\r\n\t\t\tD[0][i] = (str[i] == 0) && (D[0][i - 2] || D[0][i - 1]);\r\n\t\t\tD[1][i] = (str[i] == 1) && (D[1][i - 2] || D[1][i - 1] || D[2][i - 2] || D[2][i - 1]);\r\n\t\t\tD[2][i] = (str[i] == 1) && (D[0][i - 2] || D[0][i - 1]);\r\n\t\t}\r\n\r\n\t\tif (D[0][len - 1] || D[1][len - 1] || D[2][len - 1] || D[0][len - 2] || D[1][len - 2] || D[2][len - 2])\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\n#define MAX_LEN (100)\r\nchar str[1+ MAX_LEN +1];\r\n\r\nint D[3][1 + MAX_LEN];\r\n\r\n\r\nint main(void)\r\n{\r\n\tint T;\r\n\tint len;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tscanf(\"%s\", str+1);\r\n\t\tfor (len=1;str[len];len++)\r\n\t\t{\r\n\t\t\tstr[len] -= '0';\r\n\t\t}\r\n\r\n\t\tD[0][0] = 1;\r\n\t\tD[1][0] = 1;\r\n\t\tD[0][1] = str[1] == 0;\r\n\t\tD[1][1] = str[1] == 1;\r\n\r\n\t\tfor (int i = 2; i<len; i++)\r\n\t\t{\r\n\t\t\tD[0][i] = (str[i] == 0) && (D[0][i - 2] || D[0][i - 1]);\r\n\t\t\tD[1][i] = (str[i] == 1) && (D[1][i - 2] || D[1][i - 1] || D[2][i - 2] || D[2][i - 1]);\r\n\t\t\tD[2][i] = (str[i] == 1) && (D[0][i - 2] || D[0][i - 1]);\r\n\t\t}\r\n\r\n\t\tif (D[0][len - 1] || D[1][len - 1] || D[2][len - 1] || D[0][len - 2] || D[1][len - 2] || D[2][len - 2])\r\n\t\t{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9917203311867525, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "52a3c9910be3125cbe7c320f722957c0", "bug_code_uid": "6c3bc572a4e56e38cae6484003466f69", "src_uid": "b8d8f0e86ecb600f7559a6aec629946e", "apr_id": "5ed4bc2e6eccc5c33cddeac2b887c411", "difficulty": 1300, "tags": [], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nvoid sort(int a[], int l,int r)\n{\nint pivot,i,j,q,temp;\n if(l<r)\n {   pivot = a[r];\n\ti = l-1;\n   for( j= l;j<=r-1;j++)\n\t{\n\t\tif(a[j]>pivot)\n\t\t{\n\t\t\ti++;\n\t\t\t temp = a[i];\n  \t\t\t a[i] = a[j];\n  \t\t\t a[j] = temp;\n  \n\t\t}\n\t}\n   temp = a[i+1];\n   a[i+1] = a[r];\n   a[r] = temp;\n  \n   q=i+1;\n   sort(a,l,q-1);\n   sort(a,q+1,r);\n   \n }\n}\n\nint main()\n{\nint i,n,k,sum=0;\nint f[2000] ;\n\nscanf(\"%d%d\",&n,&k);\n\nfor(i=0;i<n;i++)\nscanf(\"%d\",&f[i]);\nsort(f,0,n-1);\n\nfor(i=0;i<n;i +=k)\n{\n\tsum += (f[i]-1)*2;\n}\n\nprintf(\"%d\",sum);\n\n\t\n\t\n}\n\n\n\n\n", "fixed": "#include<stdio.h>\n\n\nvoid sort(int a[], int l,int r)\n{\nint pivot,i,j,q,temp;\n if(l<r)\n {   pivot = a[r];\n\ti = l-1;\n   for( j= l;j<=r-1;j++)\n\t{\n\t\tif(a[j]>pivot)\n\t\t{\n\t\t\ti++;\n\t\t\t temp = a[i];\n  \t\t\t a[i] = a[j];\n  \t\t\t a[j] = temp;\n  \n\t\t}\n\t}\n   temp = a[i+1];\n   a[i+1] = a[r];\n   a[r] = temp;\n  \n   q=i+1;\n   sort(a,l,q-1);\n   sort(a,q+1,r);\n   \n }\n}\n\nint main()\n{\nint i,n,k,sum=0;\nint f[2000] ;\n\nscanf(\"%d%d\",&n,&k);\n\nfor(i=0;i<n;i++)\nscanf(\"%d\",&f[i]);\nsort(f,0,n-1);\n\nfor(i=0;i<n;i +=k)\n{\n\tsum += (f[i]-1)*2;\n}\n\nprintf(\"%d\",sum);\n\n\t\nreturn 0;\t\n}\n\n\n\n\n"}
{"similarity_score": 0.8374558303886925, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "387793b68dd89208b5f65947e66bb245", "bug_code_uid": "c4956f9eb1df0c65ec98f5dd3206d34b", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "72269baac558c82ee21511b86a138469", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n,h;\n\t\n\tscanf(\"%d,%d\",&n,&h);\n\t\n\tint arr[n-1];\n\t\n\tfor (int i=0;i<n;i++)\n\t    scanf(\"%d\",&arr[i]);\n\t    \n\tint width=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t    if(arr[i]>h)\n\t    width+=2\n\t    else\n\t    width++\n\t}\n\tprintf(\"%d\",width)\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint n,h;\n\t\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&h);\n\t\n\tint arr[n];\n\t\n\tfor (int i=0;i<n;i++)\n\t    scanf(\"%d\",&arr[i]);\n\t\n\tint width=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t    if(arr[i]>h)\n\t        width+=2;\n\t    else\n\t        width++;\n\t}\n\tprintf(\"%d\",width);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.8663101604278075, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "bfed24c2383d893c6b902b539229b564", "bug_code_uid": "9b11a7514576c8d7a45c6d579d9b5a6d", "src_uid": "8e423e4bec2d113612a4dc445c4b86a9", "apr_id": "48fd290a3cebd3678069699b6617a77e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,t,a;\n\twhile(scanf(\"%d %d\",&n,&t)!=EOF)\n\t{\n\t\tint sum=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a);\n\t\t\tt =t- (86400-a);  \n            if(t<=0) \n            {\n            \tsum = i;\n            \tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\t\tint n,t,a;\n\t\tscanf(\"%d %d\",&n,&t);\n\t\tint sum=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a);\n\t\t\tt=t-(86400-a);  \n            if(t<=0) \n            {\n            \tsum=i;\n            \tbreak;\n\t\t\t}\n\t\t}\n\t\t\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9868995633187773, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "20e0be2523bcb14b758619c189caabf4", "bug_code_uid": "a3329c8105f16ed79f8c1030068363e0", "src_uid": "8135173b23c6b48df11b1d2609b08080", "apr_id": "9a4e10c2141c4badf4adcf7be8ed1916", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar mirror[100005];\nlong int l,i,j;\nint flag=1;\n    scanf(\"%s\",&mirror);\n    l=strlen(mirror);\n    j=(l/2)+1;\n    for(i=0;i<j;i++)\n    {\n        if(mirror[i]=='A' || mirror[i]=='H' || mirror[i]=='I' || mirror[i]=='M' || mirror[i]=='N' || mirror[i]=='O' ||  mirror[i]=='T' || mirror[i]=='U' || mirror[i]=='V' || mirror[i]=='W' ||mirror[i]=='X' ||mirror[i]=='Y')\n        {\n            if(mirror[i]!=mirror[l-i-1])\n        {\n            flag=0;\n            break;\n        }\n        }\n        else\n        {\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1)\n    printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\nchar mirror[100005];\nlong int l,i,j;\nint flag=1;\n    scanf(\"%s\",&mirror);\n    l=strlen(mirror);\n    j=(l/2)+1;\n    for(i=0;i<j;i++)\n    {\n        if(mirror[i]=='A' || mirror[i]=='H' || mirror[i]=='I' || mirror[i]=='M' || mirror[i]=='O' ||  mirror[i]=='T' || mirror[i]=='U' || mirror[i]=='V' || mirror[i]=='W' ||mirror[i]=='X' ||mirror[i]=='Y')\n        {\n            if(mirror[i]!=mirror[l-i-1])\n        {\n            flag=0;\n            break;\n        }\n        }\n        else\n        {\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1)\n    printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.9842105263157894, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c40d6365f5cb31a5c897721acec5c808", "bug_code_uid": "964e20fc518efe0c6ebf8b73fc12b7ec", "src_uid": "821d48c9a67d37ad7acc50d4d0d0d723", "apr_id": "a9675115d6666e9095dbf0bdc4330d7c", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main(){\n\nlong long int num,a,b,c,d,tt;\nscanf(\"%lld\",&tt);\n\nwhile(tt--){\nscanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n\n  printf(\"%lld %lld %lld\\n\",a,b,b);\n\n\n\n}\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\n\nint main(){\n\nlong long int num,a,b,c,d,tt;\nscanf(\"%lld\",&tt);\n\nwhile(tt--){\nscanf(\"%lld%lld%lld%lld\",&a,&b,&c,&d);\n\n  printf(\"%lld %lld %lld\\n\",b,c,c);\n\n\n\n}\nreturn 0;\n}\n\n"}
{"similarity_score": 0.967948717948718, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "f8c0b3f79bc6eb45371774a7a0094061", "bug_code_uid": "d73bbeac26c70d9316f098a3d415947d", "src_uid": "97a226f47973fcb39c40e16f66654b5f", "apr_id": "e58dc27c74a32e2ccb0e2962bc232d91", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n    int tam, i;\n    long int aux1, aux2 = 0, ans = 0;\n    scanf(\"%d\", &tam);\n    for(i=0; i<tam; i++){\n        scanf(\"%ld\", &aux1);\n        if(aux2 > aux1) ans += aux2 - aux1;\n        else ans += aux1 - aux2;\n        aux2 = aux1;\n    }\n    printf(\"%ld\", ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(void){\n    int tam, i;\n    double aux1, aux2 = 0, ans = 0;\n    scanf(\"%d\", &tam);\n    for(i=0; i<tam; i++){\n        scanf(\"%lf\", &aux1);\n        if(aux2 > aux1) ans += aux2 - aux1;\n        else ans += aux1 - aux2;\n        aux2 = aux1;\n    }\n    printf(\"%.0lf\", ans);\n    return 0;\n}\n"}
{"similarity_score": 0.7471590909090909, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f513eeb9dafad841e5e385ff95c3c4eb", "bug_code_uid": "ea98befaaf8acdea1241d6a9bc2629e2", "src_uid": "d04cbe78b836e53b51292401c8c969b2", "apr_id": "31b98ed462355916db5ffbfccd8abd64", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    long long int t,n,i,num;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        if(n%3==0){\n            printf(\"%d\\n\",n/3);\n        }\n        else{\n            printf(\"%d\\n\",n/7);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    int t,n,i,num;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        if(n%3==0){\n            printf(\"%d\\n\",n/3);\n        }\n        else{\n            for(i=3;;i=i+2){\n                num=(pow(2,i))-1;\n                if(n%num==0){\n                    printf(\"%d\\n\",n/num);\n                    break;\n                }\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9914529914529915, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d235f7122ccfa0f3a3d586b6fbae8391", "bug_code_uid": "2274143a7dde3b089dddcb97e8ed13d3", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "52b6f41893475a67ce6948812b9c75dd", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t, a, b, c; scanf(\"%d\", &t);\r\n    while(t--){\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        if(a == b + c || b == a + c || c == a + b) printf(\"YES\");\r\n        else printf(\"NO\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t, a, b, c; scanf(\"%d\", &t);\r\n    while(t--){\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        if(a == b + c || b == a + c || c == a + b) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9945652173913043, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f06fa5fe060ce84c09e25bee6e1c79f5", "bug_code_uid": "b376ea08e7aa8b9f1ca3023b0f88b1d2", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "297c7e0dfae87511bbb551edd354533a", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(int argc, char **argv) {\n\tlong long int n, k, ans;\n\twhile (scanf(\"%lld%lld\", n, k) == 2) {\n\t\tans = k/n + (k%n!=0);\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(int argc, char **argv) {\n\tlong long int n, k, ans;\n\twhile (scanf(\"%lld%lld\", &n, &k) == 2) {\n\t\tans = k/n + (k%n!=0);\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9525, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "bbd516d8e374f76f60ac573efaf44334", "bug_code_uid": "f59a687be311a94c9fea8b834daa3773", "src_uid": "1ae2942b72ebb7c55359c41e141900d7", "apr_id": "0c1bbfe43b98bb6525e1621894aadf73", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint i, j, n, c[5], g[5], p[50], pp;\n\nint main(void) {\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; ++i) scanf(\"%d\", &p[i]);\n\tfor (i=0; i<5; ++i) scanf(\"%d\", &c[i]);\n\tfor (i=0; i<n; ++i) {\n\t\tpp+=p[i];\n\t\tfor (j=4; j>=0; --j) {\n\t\t\tg[j]+=pp/c[j];\n\t\t\tpp%=c[j];\n\t\t}\n\t}\n\tfor (i=0; i<5; ++i) printf(\"%d \", g[i]); printf(\"\\n\");\n\tprintf(\"%d\\n\", pp);\n\texit(EXIT_SUCCESS);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint i, j, n, c[5], p[50];\nlong long pp, g[5];\n\nint main(void) {\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; ++i) scanf(\"%d\", &p[i]);\n\tfor (i=0; i<5; ++i) scanf(\"%d\", &c[i]);\n\tfor (i=0; i<n; ++i) {\n\t\tpp+=p[i];\n\t\tfor (j=4; j>=0; --j) {\n\t\t\tg[j]+=pp/c[j];\n\t\t\tpp%=c[j];\n\t\t}\n\t}\n\tfor (i=0; i<5; ++i) printf(\"%I64d \", g[i]); printf(\"\\n\");\n\tprintf(\"%I64d\\n\", pp);\n\texit(EXIT_SUCCESS);\n}\n"}
{"similarity_score": 0.9047178538390379, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "afaa8cd9a922810997e1d17db71caca8", "bug_code_uid": "f5b454ffa7f14b315f8bb8a2132c1024", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "4fe53325b05dbe9ff8d153cc29e0bcc4", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\nint main(){\n    int n , max_length=0, length;\n    int a[100000];\n\n    scanf(\"%d\",&n);\n\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n\n    length = 1;\n    for(int i=0;i<(n-1);i++){\n\n        if(a[i+1] > a[i])\n            length +=1;\n        else{\n            if(length > max_length){\n                max_length = length;\n                length = 1;\n            }\n        }\n    }\n    if(length > max_length){\n       max_length = length;\n        length = 1;\n    }\n\n    printf(\"%d\\n\",max_length);\n\n}", "fixed": "#include<stdio.h>\n\n\nint main(){\n    int n , max_length=0, length;\n    long a[100000];\n\n    scanf(\"%d\",&n);\n\n    for(int i=0;i<n;i++)\n        scanf(\"%ld\",&a[i]);\n\n    length = 1;\n    for(int i=0;i<(n-1);i++){\n\n        if(a[i+1] > a[i])\n            length +=1;\n        else{\n            // printf(\"%d %d\\n\",i,length);\n            if(length > max_length){\n                max_length = length;\n            }\n            length = 1;\n        }\n    }\n    if(length > max_length){\n       max_length = length;\n        length = 1;\n    }\n\n    printf(\"%d\\n\",max_length);\n\n}"}
{"similarity_score": 0.9298751200768491, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "9a0533a4d44b61ebe5834d438d062435", "bug_code_uid": "e99628d7639b0d9d3dd2b1e2a77eba4f", "src_uid": "838e643a978adbeed791a24ac1046ab5", "apr_id": "4657b8b41ae74d548827e3e172fe4421", "difficulty": 1300, "tags": ["data structures", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int n,k,j,i,p;\n    scanf(\"%d%d\",&n,&k);\n    p = k;\n    double sum = 0;\n    int s[n];\n    for(j = 0;j<n;j++)\n        scanf(\"%d\",&s[j]);\n    if(k>(n-k+1))\n            k = n-k+1;\n    for(j = 1,i = 0;j<k;j++,i++)\n        {\n            sum+=s[i]*j+s[n-1-i]*j;\n        }\n    while(i<=n-1-i)\n        {\n            sum+=s[i]*k+s[n-1-i]*k;\n            if(i==n-1-i)\n                sum-=s[i]*k;\n            i++;\n        }\n    printf(\"%.10lf\\n\",sum/(n-p+1));\n   return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nlong long n,k,j,i,p,s[200000];\nint main()\n{\n    scanf(\"%I64d%I64d\",&n,&k);\n    p = k;\n    double sum = 0;\n    for(j = 0;j<n;j++)\n        scanf(\"%I64d\",&s[j]);\n    if(k>(n-k+1))\n            k = n-k+1;\n    for(j = 1,i = 0;j<k;j++,i++)\n        {\n            sum+=s[i]*j+s[n-1-i]*j;\n        }\n    while(i<=n-1-i)\n        {\n            sum+=s[i]*k+s[n-1-i]*k;\n            if(i==n-1-i)\n                sum-=s[i]*k;\n            i++;\n        }\n    printf(\"%.10lf\\n\",sum/(n-p+1));\n   return 0;\n}\n"}
{"similarity_score": 0.30267558528428096, "equal_cnt": 19, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 12, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "d191455163f1d36a4e56738720f0aadd", "bug_code_uid": "8037b13cb444029811804d9baf6c1c3a", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "e10cc65c166e71225d5f198880f0e657", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,test[1000][4],i,j,c=0;\n    scanf(\"%lld\",&n);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<4;j++)\n        {\n        scanf(\"%lld\",&test[i][j]);\n        }\n    }\n     for(i=0;i<n;i++)\n     {\n        for(j=1;;j++)\n        {\n            if((test[i][1]-test[i][3])>=(test[i][0]+test[i][2]))\n            {\n                test[i][0]=(test[i][0]+test[i][2]);\n                test[i][1]=(test[i][1]-test[i][3]);\n                c++;\n            }\n            else if((test[i][1]-test[i][3])<(test[i][0]+test[i][2])) break;\n        }\n       if(c==(j-1)) printf(\"%d\\n\",c);\n       else printf(\"-1\\n\");\n    }\n    return 0;\n}\n", "fixed": "    #include<stdio.h>\n    int main()\n    {\n        int t, i;\n        long long int x, y, a, b, time, d;\n        scanf(\"%d\", &t);\n        for(i=0; i<t; i++)\n        {\n            scanf(\"%lld %lld %lld %lld\", &x, &y, &a, &b);\n            d=y-x;\n            time=d/(a+b);\n            {\n                if(d%(a+b)==0)\n                {\n                    printf(\"%d\\n\", time);\n                }\n                else\n                {\n                    printf(\"-1\\n\");\n                }\n            }\n        }\n        return 0;\n    }\n\n"}
{"similarity_score": 0.8758389261744967, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "43ef10a48d2995689438eccaa3693df6", "bug_code_uid": "c487c1440d7683fbf9fd0d27380fdc62", "src_uid": "f0806ab99cf4da228abe3cd8073884d9", "apr_id": "92677d473b4b01f300fcb5014c296ce6", "difficulty": 1200, "tags": ["greedy", "constructive algorithms", "math", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tlong long x ;\n\t\tscanf(\"%lld\", &x);\n\n\t\tint i = 1 ;\n\t\tint s = 0 ;\n\t\tint c = 0;\n\t\twhile (1) {\n\t\t\tlong long v = (i * (i + 1)) / 2;\n\t\t\ts += v;\n\t\t\tif (s > x) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tc++;\n\t\t\ti = (2 * i + 1);\n\t\t}\n\n\t\tprintf(\"%d\", c);\n\t}\n}", "fixed": "#include<stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tlong long x ;\n\t\tscanf(\"%lld\", &x);\n\n\t\tlong long i = 1 ;\n\t\tlong long s = 0 ;\n\t\tint c = 0;\n\t\twhile (1) {\n\t\t\ts += (i * (i + 1)) / 2;\n\t\t\tif (s > x) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tc++;\n\t\t\ti = (2 * i + 1);\n\t\t}\n\n\t\tprintf(\"%d\\n\", c);\n\t}\n}"}
{"similarity_score": 0.95952023988006, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b7866c3cda45ef99979d60ca0d03cffa", "bug_code_uid": "e6c1ad2caf0ae70fa0ee8cd29ca0c8ce", "src_uid": "d9fd10700cb122b148202a664e7f7689", "apr_id": "65bc7204a15a6e745970f21649f89e33", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n    int t, i, a, b, n, p;\n    scanf(\"%d\",&t)\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        n= a/b;\n        n= n+1;\n        if(a%b != 0){\n        p= b*n - a;\n        printf(\"%d \\n\",p);\n        }\n        else{\n            printf(\"0 \\n\");\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t, i, a, b, n, p;\n    scanf(\"%d\",&t);\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d\",&a);\n        scanf(\"%d\",&b);\n        n= a/b;\n        n= n+1;\n        if(a%b != 0){\n        p= b*n - a;\n        printf(\"%d \\n\",p);\n        }\n        else{\n            printf(\"0 \\n\");\n        }\n    }\n    return 0;\n    \n}"}
{"similarity_score": 0.8216432865731463, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "123bc8a2116b4c3f9a38790fe847f69e", "bug_code_uid": "9443cee6e780d3f0963bece2574b8323", "src_uid": "d6e44bd8ac03876cb03be0731f7dda3d", "apr_id": "628b2caafac73684e2b3d1441c450657", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdint.h>\n#include <stdlib.h>\n\nint cmp(const int *a, const int *b)\n{\n\tif (*a < *b)\n\t\treturn -1;\n\telse if (*a > *b)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\n\n#define MIN(a, b) ((a) < (b) ? (a) : (b))\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\n\nint main()\n{\n\tint n, k, m, i;\n\tuint64_t sum = 0;\n\tdouble best = 0, cur;\n\tint a[100009];\n\n\tscanf(\"%d%d%d\", &n, &k, &m);\n\n\tfor (i = 0; i < n; ++i) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tsum += a[i];\n\t}\n\n\tqsort(a, n, sizeof(int), cmp);\n\n\tfor (i = 0; i < MIN(n, m + 1); ++i) {\n\t\tcur = sum + MIN((m - i), k * (n - i));\n\t\tcur /= (n - i);\n\t\tif (cur > best)\n\t\t\tbest = cur;\n\t\tsum -= a[i];\n\t}\n\tprintf(\"%f\\n\", (double)best);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdint.h>\n#include <stdlib.h>\n\nint cmp(const long long unsigned *a, const long long unsigned *b)\n{\n\tif (*a < *b)\n\t\treturn -1;\n\telse if (*a > *b)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\n\n#define MIN(a, b) ((a) < (b) ? (a) : (b))\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\n\n#ifdef __linux__\n#define T \"%llu\"\n#else\n#define T \"%I64u\"\n#endif\n\nint main()\n{\n\tlong long unsigned n, k, m, i;\n\tlong long unsigned sum = 0;\n\tdouble best = 0, cur;\n\tlong long unsigned a[100009];\n\n\tscanf(T T T, &n, &k, &m);\n\n\tfor (i = 0; i < n; ++i) {\n\t\tscanf(T, &a[i]);\n\t\tsum += a[i];\n\t}\n\n\tqsort(a, n, sizeof(long long unsigned), cmp);\n\n\tfor (i = 0; i < MIN(n, m + 1); ++i) {\n\t\tcur = sum + MIN((m - i), k * (n - i));\n\t\tcur /= (n - i);\n\t\tif (cur > best)\n\t\t\tbest = cur;\n\t\tsum -= a[i];\n\t}\n\tprintf(\"%f\\n\", (double)best);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9782813975448537, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "aff67d7895c4c14ecd2da0a4aff68375", "bug_code_uid": "8de4e3afcc78491e04e6c84da70a452b", "src_uid": "43bb8fec6b0636d88ce30f23b61be39f", "apr_id": "cb0fc48763df2a265cb526cf9caca6b1", "difficulty": 1100, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a,b,c,i,d,j,k,f;\n    char s1[10000],s2[10000],s3[10000];\n    gets(s1);\n    scanf(\"%d\",&k);\n    a=strlen(s1);\n    if(a%k==0) {\n        c=a/k;\n        b=c;\n    for(;b<=a;b=b+c){\n        i=0;\n        d=b-c;\n    while(i<c){\n        s2[i]=s1[d];\n        d++;\n        i++;\n    }\n        s2[c]='\\0';\n    strcpy(s3,s2);\n    strrev(s2);\n    f=strcmp(s2,s3);\n    if(f==0) continue;\n    else {printf(\"NO\"); break;}\n    }\n    if(f==0) printf(\"YES\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a,b,c,i,d,j,k,f;\n    char s1[10000],s2[10000],s3[10000];\n    gets(s1);\n    scanf(\"%d\",&k);\n    a=strlen(s1);\n    if(a%k==0) {\n        c=a/k;\n        b=c;\n    for(;b<=a;b=b+c){\n        i=0;\n        d=b-c;\n    while(i<c){\n        s2[i]=s1[d];\n        d++;\n        i++;\n    }\n        s2[c]='\\0';\n    strcpy(s3,s2);\n    strrev(s2);\n    f=strcmp(s2,s3);\n    if(f==0) continue;\n    else {printf(\"NO\"); break;}\n    }\n    if(f==0) printf(\"YES\");\n    }\n    else printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.958904109589041, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fca8ffb915fede22290b431b66554bcf", "bug_code_uid": "bf3263b1bb3aa2cb1e15a421ba2c3165", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "26002e4708ca1ad113213a028177cbd0", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\n    int n,i,j,flag=0,flag2=1;\n\n    scanf (\"%d%*c\",&n);\n    char s[n][5];\n\n    for (i=0; i<n; i++)\n    {\n        gets(s[i]);\n        for (j=1; j<5; j++)\n        {\n            if (flag2)\n            {\n               if((s[i][j]==s[i][j-1])&&(s[i][j]=='O'))\n               {\n                  flag=1;\n                s[i][j]='+';\n                 s[i][j-1]='+';\n                 flag2=0;\n               }\n        }\n\n            }\n\n\n    }\n    if (flag)\n    {\n        printf (\"YES\\n\");\n        for (i=0; i<n; i++)\n        {\n            printf (\"%s\",s[i]);\n            if(n>1)\n                printf (\"\\n\");\n        }\n\n    }\n    else\n        printf (\"NO\");\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\n    int n,i,j,flag=0,flag2=1;\n\n    scanf (\"%d%*c\",&n);\n    char s[n][10];\n\n    for (i=0; i<n; i++)\n    {\n        gets(s[i]);\n        for (j=1; j<5; j++)\n        {\n            if (flag2)\n            {\n               if((s[i][j]==s[i][j-1])&&(s[i][j]=='O'))\n               {\n                  flag=1;\n                s[i][j]='+';\n                 s[i][j-1]='+';\n                 flag2=0;\n               }\n        }\n\n            }\n\n\n    }\n    //for (i=0;i<n;i++)\n       // printf (\"%s\\n\",s[i]);\n    if (flag)\n    {\n        printf (\"YES\\n\");\n        for (i=0; i<n; i++)\n        {\n            printf (\"%s\",s[i]);\n            if(n>1)\n                printf (\"\\n\");\n\n        }\n\n    }\n    else\n        printf (\"NO\");\n    return 0;\n\n}\n"}
{"similarity_score": 0.7848761408083442, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "dcdf162c1fd82928afc218bc1f723a8f", "bug_code_uid": "c6e56d29f0a2b45fd54c571be0161adb", "src_uid": "ccfe798f5dc63c492ff54cf40bb40613", "apr_id": "3c48341c352124923f615b1957afef8e", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n int t;\n scanf(\"%d\", &t);\n while(t--)\n {\n    int a, b, ans=0, count=0;\n    scanf(\"%d %d\", &a, &b);\n    ans= abs(b-a);\n    while(ans!=0)\n    {\n      if(ans>=5){ans-=5; count++;}\n      else if(ans>=2){ans-=2; count++;}\n      else if(ans>=1){ans-=1; count++;}\n    }\n   printf(\"%d\\n\", count);\n }\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n int t;\n scanf(\"%d\", &t);\n while(t--)\n {\n    int a, b, ans=0, count=0,n;\n    scanf(\"%d %d\", &a, &b);\n    ans= abs(b-a);\n    while(ans!=0)\n    {\n      if(ans>=5){n=(int)ans/5; ans-=n*5; count+=n;}\n      else if(ans>=2){n=(int) ans/2; ans-=n*2; count+=n;}\n      else if(ans>=1){n= (int)ans/1; ans-=n*1; count+=n;}\n    }\n   printf(\"%d\\n\", count);\n }\n  return 0;\n}\n"}
{"similarity_score": 0.999128160418483, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8ec0462f1f7d80ee827e7e7de3b5bb2c", "bug_code_uid": "1ed01ff7abf9a8d9dec3225534a9869c", "src_uid": "e344de8280fb607c556671db9cfbaa9e", "apr_id": "7afa7b27ec7e5037e4e1068d332a63bf", "difficulty": 800, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{   \nint i,j,x=0,a[3][2],n,m,c,r;\nchar s,e;\nscanf(\"%d%d\",&n,&m);\nscanf(\"%c\",&e);\nfor(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%c\",&s);\n            if(s=='*')\n            {\n                a[x][0]=i;\n                a[x][1]=j;\n                x++;\n            }\n        }\n    scanf(\"%c\",&e);\n    }\nif(a[0][0]  ==a[1][0]) r=a[2][0];\nelse if(a[0][0]==a[2][0]) r=a[1][0];\nelse r=a[0][0];\nif(a[0][1]  ==a[1][1]) c=a[2][1];\nelse if(a[0][1]==a[2][1]) c=a[1][1];\nelse c=a[0][1];\nprintf(\"%d %d\\n\",r+1,c+1);\n    retun 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{   \nint i,j,x=0,a[3][2],n,m,c,r;\nchar s,e;\nscanf(\"%d%d\",&n,&m);\nscanf(\"%c\",&e);\nfor(i=0;i<n;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%c\",&s);\n            if(s=='*')\n            {\n                a[x][0]=i;\n                a[x][1]=j;\n                x++;\n            }\n        }\n    scanf(\"%c\",&e);\n    }\nif(a[0][0]  ==a[1][0]) r=a[2][0];\nelse if(a[0][0]==a[2][0]) r=a[1][0];\nelse r=a[0][0];\nif(a[0][1]  ==a[1][1]) c=a[2][1];\nelse if(a[0][1]==a[2][1]) c=a[1][1];\nelse c=a[0][1];\nprintf(\"%d %d\\n\",r+1,c+1);\n    return 0;\n}"}
{"similarity_score": 0.8399098083427283, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "02c5ef772c17a3e2b4526de8ece3a9b2", "bug_code_uid": "a535277d5d70ccb826539cda6983c9bf", "src_uid": "4ebea3f56ffd43efc9e1496a0ef7fa2d", "apr_id": "501e44e98f30237b76ca72299249bf05", "difficulty": 1200, "tags": ["constructive algorithms", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/*     *******************Bismillahir Rahmanir Rahim************************\n                          **************************\n                          #    MD. ASFAKUL GHANI   #\n                          #       *ProMAGFAT*      #\n                          #         CSE-25         #\n                          #JAHANGIRNAGAR UNIVERSITY#\n                          #    Dhaka,Bangladesh    #\n                          &&&&&&&&&&&&&&&&&&&&&&&&&#\n*/\n\n#include <stdio.h>\n#define Im int main()\n#define ll long long\n\nint a1[]={6,2,5,5,4,5,6,3,7,6};\nIm\n{\n    //fasterIO;\n\n    int n,i;\n    scanf(\"%d\",&n);\n\n    int cnt=0;\n    int p=n/6;\n    for (i=0;i<p;i++) printf(\"9\");\n    n%=6;\n    int q=n/3;\n    for (i=0;i<q;i++)printf(\"7\");\n    if (n%3==2) printf(\"1\\n\");\n\n    // main();\n\n    return 0;\n}\n\n\n", "fixed": "/*     *******************Bismillahir Rahmanir Rahim************************\n                          **************************\n                          #    MD. ASFAKUL GHANI   #\n                          #       *ProMAGFAT*      #\n                          #         CSE-25         #\n                          #JAHANGIRNAGAR UNIVERSITY#\n                          #    Dhaka,Bangladesh    #\n                          &&&&&&&&&&&&&&&&&&&&&&&&&#\n*/\n\n#include <stdio.h>\n#define Im int main()\n#define ll long long\n\nint a1[]={6,2,5,5,4,5,6,3,7,6};\nIm\n{\n    //fasterIO;\n\n    int n,i;\n    scanf(\"%d\",&n);\n\n    int cnt=0;\n    int p=n/2;\n    if (n%2==0&&n>2)\n    for (i=0;i<p;i++) printf(\"1\");\n    else {\n        if (n&1){\n            printf(\"7\");\n            n-=3;\n            n/=2;\n            for (i=0;i<n;i++) printf(\"1\");\n        }\n        else {\n            n/=2;\n            for (i=0;i<n;i++) printf(\"1\");\n        }\n        printf(\"\\n\");\n    }\n\n    // main();\n\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9923076923076923, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b5dcfdcccfde386412768b592117f4a0", "bug_code_uid": "47108df98f9d391d8a394a15a2f08c31", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "62300a5196b93751ced32fe68c1918d7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,a,b,sum=0,x;\n    scanf(\"%d\",&n);\n    int arr[n-1];\n    for(i=0;i<n-1;i++)\n    scanf(\"%d\",&arr[i]);\n    scanf(\"%d %d\",&a,&b);\n    x=b-a;\n    for(i=a-1;i<x;i++)\n    sum=sum+arr[i];\n    printf(\"%d\",sum);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a,b,sum=0,x;\n    scanf(\"%d\",&n);\n    int arr[n-1];\n    for(i=0;i<n-1;i++)\n    scanf(\"%d\",&arr[i]);\n    scanf(\"%d %d\",&a,&b);\n    x=b-a;\n    for(i=a-1;i<b-1;i++)\n    sum=sum+arr[i];\n    printf(\"%d\",sum);\n    return 0;\n}"}
{"similarity_score": 0.6775147928994083, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "554189bc01777359e898f6f84cc627b4", "bug_code_uid": "3f5957a7e6e17cd08fb3d0c79f1a4777", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "5c31d611af406e660f28bea7d7b727d6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,c,res=0,t=0;\n    scanf(\"%i%i\", &n, &c);\n    int sec[n];\n    for(int i=0; i<n; i++){\n        scanf(\"%i\", &sec[i]);\n        t++;\n        if( (sec[i]-sec[i-1])>c ){\n            if( (t-1)>res ){\n                res=t-1;\n            }\n            t=1;\n        }\n    }\n    res=fmax(res,t);\n    printf(\"%i\", res);\n    return 0;\n};\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,c,t=0;\n    scanf(\"%i%i\", &n, &c);\n    int sec[n];\n    for(int i=0; i<n; i++){\n        scanf(\"%i\", &sec[i]);\n        t++;\n        if( (sec[i]-sec[i-1])>c ){\n            t=1;\n        }\n    };\n    printf(\"%i\",t );\n    return 0;\n};\n\n"}
{"similarity_score": 0.9822834645669292, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0856b4ee59cac2b284f53b36f50b7dd7", "bug_code_uid": "1a0f6d3d832c166ab61197f38205256a", "src_uid": "6b0d00ecfa260a33e313ae60d8f9ee06", "apr_id": "c964a190d6b9c4e4b3d5aeec53a7891c", "difficulty": 1800, "tags": ["dp", "greedy", "math", "implementation", "data structures"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar ch[1000];\n\tscanf(\"%s\",ch);\n\tint l=strlen(ch);\n\tint x,y;\n\tlong long ans=0;\n\tfor(int i=0;i<l;i++)\n\t{\n         x=y=0;\n         for(int j=i;j<l;j++)\n\t\t {\n\t\t \tif(ch[j]=='(') x++;\n\t\t \telse if(ch[j]==')') x--;\n\t\t \telse if(ch[j]=='?')\n\t\t\t{\n\t\t\t\ty++; x--;   //  \u5148\u628a\uff1f \u5f53\uff09 \uff08 \u4e0d\u591f\u65f6\u5728\u5f53\uff08\n\t\t\t}\n\t\t\tif(x==0) ans++;\n\t\t\t//if(t>0) continue;\n\t\t\tif(x<0&&y==0) break;//  ? busou wufd bian cheng (;\n\t\t\tif(x<0)\n\t\t\t{\n\t\t\t\tx+=2;\n\t\t\t\ty--;\n\t\t\t}\n\t\t }\n\t}\n\tprintf(\"%I64d\\n\",ans);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar ch[10000];\n\tscanf(\"%s\",ch);\n\tint l=strlen(ch);\n\tint x,y;\n\tlong long ans=0;\n\tfor(int i=0;i<l;i++)\n\t{\n         x=0;\n         y=0;\n         for(int j=i;j<l;j++)\n\t\t {\n\t\t \tif(ch[j]=='(') x++;\n\t\t \telse if(ch[j]==')') x--;\n\t\t \telse if(ch[j]=='?')\n\t\t\t{\n\t\t\t\ty++; x--;   //  \u5148\u628a\uff1f \u5f53\uff09 \uff08 \u4e0d\u591f\u65f6\u5728\u5f53\uff08\n\t\t\t}\n\t\t\tif(x==0) ans++;\n\t\t\t//if(t>0) continue;\n\t\t\telse if(x<0&&y==0) break;//  ? busou wufd bian cheng (;\n\t\t\tif(x<0)\n\t\t\t{\n\t\t\t\tx+=2;\n\t\t\t\ty--;\n\t\t\t}\n\t\t }\n\t}\n\tprintf(\"%I64d\\n\",ans);\n}\n"}
{"similarity_score": 0.9900811541929666, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "53f34d21176466c4aa103ea764fa7598", "bug_code_uid": "6ada4f96782b0b5ac2a9c97ae908b55b", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "b5a52f4be642a72824d3ff4d68c43f14", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint is_squre(int n)\n{\n    int p=sqrt(n);\n    if(p*p==n){\n        return 0;\n    }\n    return 1;\n}\nint main()\n{\n    int n,ara[100],i,max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<n;i++){\n        if(ara[i]>0 )\n            if(!is_squre(ara[i])){\n            ara[i]=0;\n        }\n    }\n    max=ara[0];\n    for(i=0;i<n;i++){\n        if(max<ara[i]){\n            max=ara[i];\n        }\n    }\n    printf(\"%d\",max);\n\n\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint is_squre(int n)\n{\n    int p=sqrt(n);\n    if(p*p==n){\n        return 0;\n    }\n    return 1;\n}\nint main()\n{\n    int n,ara[1002],i,max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    for(i=0;i<n;i++){\n        if(ara[i]>=0 )\n            if(!is_squre(ara[i])){\n            ara[i]=-1000000;\n        }\n    }\n    max=ara[0];\n    for(i=0;i<n;i++){\n        if(max<ara[i]){\n            max=ara[i];\n        }\n    }\n    printf(\"%d\",max);\n\n\n\n    return 0;\n}"}
{"similarity_score": 0.6927044952100221, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "437b4f1ef6194a72a47e499cf37140b4", "bug_code_uid": "acb16000b4646f94e98a10ed5151c489", "src_uid": "1f41c017102f4a997be324a4ec9b7fd6", "apr_id": "f86750d567735e265d9813f7baca5952", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong int n,bone=1;\n\tint m, k;\n\tint* cup;\n\tscanf(\"%ld %d %d\", &n, &m, &k);\n\tcup = (int*)malloc(n * sizeof(int));\n\tint a = n;\n\twhile (n)\n\t{\n\t\tcup[a-1] = 0;\n\t\ta--;\n\t}\n\twhile (m > 0)\n\t{\n\t\tint i;\n\t\tscanf(\"%d\", &i);\n\t\tcup[i-1] = -1;\n\t\tm--;\n\t}\n\twhile (k > 0)\n\t{\n\t\tint i, j,temp;\n\t\tscanf(\"%d %d\", &i, &j);\n\t\tif (bone==i && cup[j - 1] == -1) //\u662f\u5426\u4ea4\u6362\u5230\u7a7a\u6d1e\n\t\t{\n\t\t\tbone = j;\n\t\t\tbreak;\n\t\t}\n\t\telse if (bone==i) //\u6b63\u5e38\u4ea4\u6362\n\t\t{\n\t\t\tcup[i - 1] = 0;\n\t\t\tcup[j - 1] = 1;\n\t\t\tbone = j;\n\t\t}\n\t\tk--;\n\n\t}\n\tprintf(\"%ld\", bone);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong int n,bone=1;\n\tint m, k;\n\tint* cup;\n\tscanf(\"%ld %d %d\", &n, &m, &k);\n\tcup = (int*)malloc(n * sizeof(int));\n\tint a;\n\ta= n;\n\twhile (a)\n\t{\n\t\tcup[a-1] = 0;\n\t\ta--;\n\t}\n\tcup[0] = 1;\n\twhile (m > 0)\n\t{\n\t\tint i;\n\t\tscanf(\"%d\", &i);\n\t\tcup[i-1] = -1;\n\t\tm--;\n\t}\n\t\n\twhile (k > 0)\n\t{\n\t\tint i, j,temp;\n\t\tscanf(\"%d %d\", &i, &j);\n\t\tif (cup[bone - 1] == -1)break;\n\t\tif (bone == i || bone == j)\n\t\t{\n\t\t\tif (bone == i&&cup[j - 1] == -1) //\u662f\u5426\u4ea4\u6362\u5230\u7a7a\u6d1e\n\t\t\t{\n\t\t\t\tbone = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (cup[i - 1] == -1 && bone == j)\n\t\t\t{\n\t\t\t\tbone = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse  //\u6b63\u5e38\u4ea4\u6362\n\t\t\t{\n\t\t\t\ttemp = cup[i - 1];\n\t\t\t\tcup[i - 1] = cup[j - 1];\n\t\t\t\tcup[j - 1] = temp;\n\t\t\t\tif (cup[i - 1] == 1)bone = i;\n\t\t\t\telse bone = j;\n\t\t\t}\n\t\t}\n\t\tk--;\n\t}\n\tprintf(\"%ld\", bone);\n\treturn 0;\n}"}
{"similarity_score": 0.9992695398100804, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "32e754ed3ecf3dfbefbd18c359ca12ee", "bug_code_uid": "5c3e98620c63486e2be7261d8ebc2b26", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "87222c0f4b80dbeb06fc7dc2b9b071eb", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int s,n,x[1001],y[1001],i,c=0,z=0,temp,j,p,q,temp1;\n    scanf(\"%d%d\",&s,&n);\n    for(i=0;i<n;i++)scanf(\"%d%d\",&x[ i ],&y[ i ]);\n     for(i=0;i<n;i++)\n     {\n         for(j=i+1;j<n;j++)\n         {\n             if(x[ i ]>x[ j ])\n             {\n                 temp=x[ i ];\n                 x[ i ] = x[ j ];\n                 x[ j ] = temp;\n                 temp1=y[ i ];\n                 y[ i ] = y[ j ];\n                 y[ j ] = temp;\n             }\n         }\n     }\n     for(i=0;i<n;i++)\n     {\n         if(x[ i ]>=s)\n         {\n             printf(\"NO\");\n             return 0;\n         }\n         else s=s+y[ i ];\n     }\n       printf(\"YES\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int s,n,x[1001],y[1001],i,c=0,z=0,temp,j,p,q,temp1;\n    scanf(\"%d%d\",&s,&n);\n    for(i=0;i<n;i++)scanf(\"%d%d\",&x[ i ],&y[ i ]);\n     for(i=0;i<n;i++)\n     {\n         for(j=i+1;j<n;j++)\n         {\n             if(x[ i ]>x[ j ])\n             {\n                 temp=x[ i ];\n                 x[ i ] = x[ j ];\n                 x[ j ] = temp;\n                 temp1=y[ i ];\n                 y[ i ] = y[ j ];\n                 y[ j ] = temp1;\n             }\n         }\n     }\n     for(i=0;i<n;i++)\n     {\n         if(x[ i ]>=s)\n         {\n             printf(\"NO\");\n             return 0;\n         }\n         else s=s+y[ i ];\n     }\n       printf(\"YES\");\n}\n"}
{"similarity_score": 0.9612220916568742, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "dcd78b91c56030e6ad124fdbbde4a580", "bug_code_uid": "406f8875d0ff881387a8d11199cb843e", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "79f785abf96e3342c9b922c82febce44", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    long int n,k,i,j=0,l,m=200000,o=0,p,q;\n    long int a[200000];\n    scanf(\"%ld %ld\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%ld\",&a[i]); j++;\n        o=o+a[i];\n        if(j==k)\n        {\n            if(m>o)\n            {\n                o=m;\n                p=i;\n            }\n            j=j-1;\n            o=o-a[i-k+1];\n        }\n    }\n    printf(\"%ld\",p-k+2);\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    long long int n,k,i,j=0,l,m=2000000000001,o=0,p,q;\n    long long int a[200000];\n    scanf(\"%I64d %I64d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%I64d\",&a[i]); j++;\n        o=o+a[i];\n        if(j==k)\n        {\n            if(m>o)\n            {\n                o=m;\n                p=i;\n            }\n            j=j-1;\n            o=o-a[i-k+1];\n        }\n    }\n    printf(\"%I64d\",p-k+2);\n}\n"}
{"similarity_score": 0.988009592326139, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "28534981ec5dd30a98fc4023621d4b07", "bug_code_uid": "76f4548180b25c3ed6b4270c599b325c", "src_uid": "646cec22d98636447038e61e7dfb9db3", "apr_id": "8a35e65042eb68168dc0c456b8241c1c", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void){\n\tint n,k,a[100000],start,rugan[100000],min;\n\tint i,j,b;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tfor(i=0;i<n;i++)scanf(\"%d\",&a[i]);\n\t\n\t\n\tmin=0;\n\tfor(i=0;i<k-1;i++)min=min+a[i];\n\tb=0;\n\t\n\tfor(i=0;i<k;i++){\n\t\trugan[i]=0;\n\t\tj=i;\n\t\twhile(j<n){\n\t\trugan[i]=rugan[i]+a[j];\n\t\tj=j+k;\n\t\t\t  }\n\t\tif(rugan[i]<min){\n\t\t\t\tmin=rugan[i];\n\t\t\t\tb=i;\t\t\n\t\t\t\t}\n\t\t\t  }\n\t\t\t  \t\t  \n\tprintf(\"%d\",b+1);\n\t\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void){\n\tint n,k,a[100000],start,rugan[100000],min;\n\tint i,j,b;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&k);\n\tfor(i=0;i<n;i++)scanf(\"%d\",&a[i]);\n\t\n\t\n\tmin=0;\n\tfor(i=0;i<n;i++)min=min+a[i];\n\tb=0;\n\t\n\tfor(i=0;i<k;i++){\n\t\trugan[i]=0;\n\t\tj=i;\n\t\twhile(j<n){\n\t\trugan[i]=rugan[i]+a[j];\n\t\tj=j+k;\n\t\t\t  }\n\t\t\t  \n\t\tif(rugan[i]<min){\n\t\t\t\tmin=rugan[i];\n\t\t\t\tb=i;\t\t\n\t\t\t\t}\n\t\t\t  }\n\t\t\t  \t\t  \n\tprintf(\"%d\",b+1);\n\t\n\nreturn 0;\n}\n"}
{"similarity_score": 0.9821989528795811, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7b6e506f5a29ee0bc36f44a39850c3ed", "bug_code_uid": "b324cb62355fcc21b9c2bc803ca1245e", "src_uid": "e63de0fffd00b2da103545a7f1e405be", "apr_id": "ed76f2dac241941bce5383dd8e8e0642", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main ()\n{\nlong int  n ;\nlong int i;\nlong int y = 0;\n\nlong int count  = 0;\nlong int a[100001];\nscanf(\"%ld\",&n);\nfor(i = 0;i <n;i++) {\nscanf(\"%ld\",&a[i]);\n}\nfor(i =0 ;i < n ;i ++) {\nif(a[i] == i) {\ncount ++;\n}\n}\n\nif(count == n) {\nprintf(\"%ld\",count);\n\n}\n\nfor ( i = 0; i < n ; i++) {\n\nif( a[i] != i ){\n\n\n\nint t = a[i] ;\nif( a[t] == i ) {\n\n\n\n\n\ny++; \nprintf(\"%ld\",count + 2) ;\nbreak ;\n\n\n}\n}\n}\n\n\nif ( y == 0) {\nprintf(\"%ld\",count +1 );\n\n}\nreturn 0 ;\n}\n", "fixed": "#include <stdio.h>\n\nint main ()\n{\nlong int  n ;\nlong int i;\nlong int y = 0;\n\nlong int count  = 0;\nlong int a[100001];\nscanf(\"%ld\",&n);\nfor(i = 0;i <n;i++) {\nscanf(\"%ld\",&a[i]);\n}\nfor(i =0 ;i < n ;i ++) {\nif(a[i] == i) {\ncount ++;\n}\n}\n\nif(count == n) {\n\nprintf(\"%ld\",count);\n\n\n}\n\nfor ( i = 0; i < n ; i++) {\n\nif( a[i] != i ){\n\n\n\nint t = a[i] ;\nif( a[t] == i ) {\n\n\n\n\n\ny++;\nprintf(\"%ld\",count + 2) ;\nbreak ;\n\n\n}\n}\n}\n\n\nif ( y == 0 && count != n) {\nprintf(\"%ld\",count +1 );\n\n}\nreturn 0 ;\n}\n"}
{"similarity_score": 0.9065981148243359, "equal_cnt": 2, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "157ed18a5a1346ec85418fd276fcc4df", "bug_code_uid": "065a98b36cd06f393d9ed2efee25b52c", "src_uid": "f89bd4ec97ec7e02a7f67feaeb4d3958", "apr_id": "52be35d5c190cb1a1398277d04bd3e8a", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,i;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif(n%2==0)\r\n\t\t{\r\n\t\t\tint e=2,o=1;\r\n\t\t\tfor(i=0;i<n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(i%2==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d \",e);\r\n\t\t\t\t\te=e+2;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d \",o);\r\n\t\t\t\t\to=o+2;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint e=4,o=5;\r\n\t\t\tprintf(\"3 1 2\");\r\n\t\t\tfor(i=3;i<n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(i%2==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d \",e);\r\n\t\t\t\t\te=e+2;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\" %d \",o);\r\n\t\t\t\t\to=o+2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,i;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif(n%2==0)\r\n\t\t{\r\n\t\t\tint e=2,o=1;\r\n\t\t\tfor(i=0;i<n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(i%2==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d \",e);\r\n\t\t\t\t\te=e+2;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d \",o);\r\n\t\t\t\t\to=o+2;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint e=4,o=5;\r\n\t\t\tprintf(\"3 1 2 \");\r\n\t\t\t\r\n\t\t\tfor(i=3;i<n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(i%2==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d \",e);\r\n\t\t\t\t\te=e+2;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d \",o);\r\n\t\t\t\t\to=o+2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.903420523138833, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "544e840ea91ea724814a6aacf180391f", "bug_code_uid": "1b36c23fbe83c677e7d43544aeed9754", "src_uid": "7896740b6f35010af751d3261b5ef718", "apr_id": "12bb3e375dbcf870d0b214c49edcb17d", "difficulty": 1000, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=n;i>=0;i--)\n\t{\n\t\tfor(j=1;j<=i;j++)\n\t\t\tprintf(\"  \");\n\t\tfor(j=0;j<=(n-i);j++)\n\t\t\tprintf(\"%d \",j);\n\t\tfor(j=n-i-1;j>=1;j--)\n\t\t\tprintf(\"%d \",j);\n\t\tif(i!=n)\n\t\t\tprintf(\"0\"); \n\t\tprintf(\"\\n\");\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=i;j++)\n\t\t\tprintf(\"  \");\n\t\tfor(j=0;j<=(n-i);j++)\n\t\t\tprintf(\"%d \",j);\n\t\tfor(j=n-i-1;j>=1;j--)\n\t\t\tprintf(\"%d \",j);\n\t\tif(i!=n)\n\t\t\tprintf(\"0\");\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=n;i>=0;i--)\n\t{\n\t\tfor(j=1;j<=i;j++)\n\t\t\tprintf(\"  \");\n\t\tfor(j=0;j<=(n-i);j++)\n\t\t{\n\t\t\tprintf(\"%d\",j);\n\t\t\tif(i!=n)\n\t\t\t\tprintf(\" \");\n\t\t}\n\t\tfor(j=n-i-1;j>=1;j--)\n\t\t\tprintf(\"%d \",j);\n\t\tif(i!=n)\n\t\t\tprintf(\"0\"); \n\t\tprintf(\"\\n\");\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=i;j++)\n\t\t\tprintf(\"  \");\n\t\tfor(j=0;j<=(n-i);j++)\n\t\t{\n\t\t\tprintf(\"%d\",j);\n\t\t\tif(i!=n)\n\t\t\t\tprintf(\" \");\n\t\t}\n\t\tfor(j=n-i-1;j>=1;j--)\n\t\t\tprintf(\"%d \",j);\n\t\tif(i!=n)\n\t\t\tprintf(\"0\");\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9921722113502935, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f7f46404bde15a910acc4a12aab4e6fb", "bug_code_uid": "54a4e80405f4ffb39a08b19dd6e2acab", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "6d56a18131f29c042e5425da74046f06", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,n,k,i,ys,m;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%lld %lld\",&n,&k);\r\n        if(k==1)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            while(n>k)\r\n            {\r\n                k=k*2;\r\n            }\r\n\r\n            ys=k%n;\r\n            m=k/n;\r\n            if(ys!=0)\r\n            {\r\n                m++;\r\n            }\r\n            printf(\"%lld\\n\",m);\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t,n,k,i,ys,m;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%lld %lld\",&n,&k);\r\n        if(k==1||n%k==0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            while(n>k)\r\n            {\r\n                k=k*2;\r\n            }\r\n\r\n            ys=k%n;\r\n            m=k/n;\r\n            if(ys!=0)\r\n            {\r\n                m++;\r\n            }\r\n            printf(\"%lld\\n\",m);\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n"}
{"similarity_score": 0.9048275862068965, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "b86ac99516dbe4df3d038bd8d03612bd", "bug_code_uid": "c4c13e117b4750473c1339ec466e9726", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "85db4aec54e79d364c8dfb4b71ccdfc9", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int y,k,n,b=0;\n   int i;\n   scanf(\"%d %d %d\",&y,&k,&n);\n   for(i=0;i<=n;i++)\n   {\n      if(i%k==0 && i-y>0){\n         printf(\"%d \",i-y),b=1;\n         break;}\n   }\n   i+=k;\n   i-=y;\n   for(;i<=n-y;i+=k)\n   {\n         printf(\"%d \",i);\n   }\n   if(!b) printf(\"-1\");\n   printf(\"\\n\");\n\n   return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n   int y,k,n,b=0;\n   int i;\n   scanf(\"%d %d %d\",&y,&k,&n);\n   i=((y/k)+1)*k;\n   if(i<=n)\n      printf(\"%d \",i-y),b=1; /*\n   for(i=0;i<=n;i++)\n   {\n      if(i%k==0 && i-y>0){\n         printf(\"%d \",i-y),b=1;\n         break;}\n   } */\n   i+=k;\n   i-=y;\n   for(;i<=n-y;i+=k)\n   {\n         printf(\"%d \",i),b=1;\n   }\n   if(!b) printf(\"-1\");\n   printf(\"\\n\");\n\n   return 0;\n}"}
{"similarity_score": 0.38333333333333336, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8894905e043d7153ae8f4e6423277c85", "bug_code_uid": "af5311bd4107723fb75614a004cfcbf5", "src_uid": "9ad07b42358e7f7cfa15ea382495a8a1", "apr_id": "8aadd2663267fca6cef140d465589f65", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\nlong long int a[100000000];\n\nint main()\n{\n    long long int n,k,y,i;\n    scanf(\"%lld %lld \",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=0;i<k;i++)\n    {\n        k=k-(i+1);\n    }\n     printf(\"%lld\",a[k-1]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    long long int n,k,y,i;\n    scanf(\"%lld %lld \",&n,&k);\n    long long int a[100000];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n\n    for(i=0;i+1<k;i++)\n    {\n        k=k-(i+1);\n\n    }\n     printf(\"%lld\\n\",a[k-1]);\n    return 0;\n}\n"}
{"similarity_score": 0.9540481400437637, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "40b96f67a8c8a14bd640663c350b3ff3", "bug_code_uid": "405575cd7236c06f31cd9ee448c497b5", "src_uid": "6b94dcd088b0328966b54acefb5c6d22", "apr_id": "04dc917533f2c55e3b90dd219d745574", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\tint t;\n\n\tscanf(\"%d\", &t);\n\n\twhile(t--){\n\t\tint n, k;\n\t\tscanf(\"%d %d\", &n, &k);\n\n\t\tint n1 = n - k + 1;\n\t\tif(n1 > 0 && n1 % 2 == 1){\n\t\t\tprintf(\"YES\");\n\t\t\tfor(int i = 0; i < k - 1; i++) printf(\"1 \");\n\t\t\tprintf(\"%d\\n\", n1);\n\t\t}\n\n\t\tint n2 = n - 2*(k - 1);\n\t\tif(n2 > 0 && n2 % 2 == 0){\n\t\t\tprintf(\"YES\");\n\t\t\tfor(int i = 0; i < k - 1; i++) printf(\"2 \");\n\t\t\tprintf(\"%d\\n\", n2);\n\t\t}\n\n\t\tprintf(\"NO\\n\");\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n\tint t;\n\n\tscanf(\"%d\", &t);\n\n\twhile(t--){\n\t\tint n, k;\n\t\tscanf(\"%d %d\", &n, &k);\n\n\t\tint n1 = n - (k - 1);\n\t\tif(n1 > 0 && n1 % 2 == 1){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor(int i = 0; i < k - 1; i++) printf(\"1 \");\n\t\t\tprintf(\"%d\\n\", n1);\n\t\t\tcontinue;\n\t\t}\n\n\t\tint n2 = n - 2*(k - 1);\n\t\tif(n2 > 0 && n2 % 2 == 0){\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor(int i = 0; i < k - 1; i++) printf(\"2 \");\n\t\t\tprintf(\"%d\\n\", n2);\n\t\t\tcontinue;\n\t\t}\n\n\t\tprintf(\"NO\\n\");\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9972572682391662, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "49b82922497b88b0826b276ac11a7b98", "bug_code_uid": "b6964f52be2952bb2397d1b3e4ecdde1", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "5ca3f9d9fc3f1ba060c2fd416e125900", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/******************************************************************************\r\n\r\n                            Online C Compiler.\r\n                Code, Compile, Run and Debug C program online.\r\nWrite your code in this editor and press \"Run\" button to compile and execute it.\r\n\r\n*******************************************************************************/\r\n\r\n#include <stdio.h>\r\n\r\nvoid steps (int num);\r\n\r\nint main()\r\n{\r\n    int input, t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\", &input);\r\n        steps(input);\r\n    }\r\n}\r\n\r\nvoid steps (int c)\r\n{\r\n    int n;\r\n    if ((c == 2) || (c == 3))\r\n        n = 1;\r\n    else if ((c == 1) || (c == 4))\r\n        n = 2;\r\n    else if (c > 4)\r\n    {\r\n        if (c % 3 == 1)\r\n            n = (c - 4)/3 + 2;\r\n        if (c % 3 == 2)\r\n            n = c/3 + 1;\r\n        else\r\n            n = c/3;\r\n    }\r\n    printf(\"%d\\n\", n);\r\n}", "fixed": "/******************************************************************************\r\n\r\n                            Online C Compiler.\r\n                Code, Compile, Run and Debug C program online.\r\nWrite your code in this editor and press \"Run\" button to compile and execute it.\r\n\r\n*******************************************************************************/\r\n\r\n#include <stdio.h>\r\n\r\nvoid steps (int num);\r\n\r\nint main()\r\n{\r\n    int input, t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        scanf(\"%d\", &input);\r\n        steps(input);\r\n    }\r\n}\r\n\r\nvoid steps (int c)\r\n{\r\n    int n;\r\n    if ((c == 2) || (c == 3))\r\n        n = 1;\r\n    else if ((c == 1) || (c == 4))\r\n        n = 2;\r\n    else if (c > 4)\r\n    {\r\n        if (c % 3 == 1)\r\n            n = (c - 4)/3 + 2;\r\n        else if (c % 3 == 2)\r\n            n = c/3 + 1;\r\n        else\r\n            n = c/3;\r\n    }\r\n    printf(\"%d\\n\", n);\r\n}"}
{"similarity_score": 0.939304655274013, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ed70b1ab86809d9db47ede7222f6f574", "bug_code_uid": "138032d6948119746945169c924bc583", "src_uid": "bcc758394d012519f0865479b3c6770c", "apr_id": "b5943d8b9c548c3d3e82564019d207ac", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<math.h>\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nstruct\tstr\t\n{\n\tint\tx,y,k;\n\tdouble\tdis;\n};\n\nint\tcomp(const void * a,const void * b);\nint\tmain(void)\n{\n\tint\t\tn,k;\n\tint\t\tindex,sum_pop;\n\tstruct str\t* s;\n\tdouble\tsum_dis;\n\n\tscanf(\"%d%d\",&n,&k);\n\tsum_pop = k;\n\ts = (struct str *)malloc(sizeof(struct str) * n);\n\n\tfor(index = 0;index < n;index ++)\n\t{\n\t\tscanf(\"%d%d%d\",&s[index].x,&s[index].y,&s[index].k);\n\t\ts[index].dis = sqrt(s[index].x * s[index].x + s[index].y * s[index].y);\n\t}\n\tqsort(s,n,sizeof(struct str),comp);\n\t\n\tfor(index = 0;index < n;index ++)\n\t{\n\t\tif(sum_pop >= 1000000)\n\t\t{\n\t\t\tprintf(\"%.8lf\\n\",sum_dis);\n\t\t\treturn\t0;\n\t\t}\n\t\tsum_pop += s[index].k;\n\t\tsum_dis = s[index].dis;\n\t}\n\tprintf(\"-1\\n\");\n\n\treturn\t0;\n}\n\nint\tcomp(const void * a,const void * b)\n{\n\treturn\t(*(struct str *)a).dis > (*(struct str *)b).dis ? 1 : -1;\n}\n", "fixed": "#include<math.h>\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nstruct\tstr\t\n{\n\tint\tx,y,k;\n\tdouble\tdis;\n};\n\nint\tcomp(const void * a,const void * b);\nint\tmain(void)\n{\n\tint\t\tn,k;\n\tint\t\tindex,sum_pop;\n\tstruct str\t* s;\n\tdouble\tsum_dis;\n\n\tscanf(\"%d%d\",&n,&k);\n\tsum_pop = k;\n\ts = (struct str *)malloc(sizeof(struct str) * n);\n\n\tfor(index = 0;index < n;index ++)\n\t{\n\t\tscanf(\"%d%d%d\",&s[index].x,&s[index].y,&s[index].k);\n\t\ts[index].dis = sqrt(s[index].x * s[index].x + s[index].y * s[index].y);\n\t}\n\tqsort(s,n,sizeof(struct str),comp);\n\n\tfor(index = 0;index < n;index ++)\n\t{\n\t\tsum_pop += s[index].k;\n\t\tsum_dis = s[index].dis;\n\t\tif(sum_pop >= 1000000)\n\t\t{\n\t\t\tprintf(\"%.8lf\\n\",sum_dis);\n\t\t\treturn\t0;\n\t\t}\n\t}\n\tprintf(\"-1\\n\");\n\n\treturn\t0;\n}\n\nint\tcomp(const void * a,const void * b)\n{\n\treturn\t(*(struct str *)a).dis > (*(struct str *)b).dis ? 1 : -1;\n}\n"}
{"similarity_score": 0.6940397350993377, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "c36171d6f047fcd762bf3770bd685960", "bug_code_uid": "a3ce951274e32883dcbdb5d85d437d08", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "a660b0634aae77417dad9b23d7171850", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    long long int a, b, x, y, money, t;\n    scanf(\"%lld\", &t);\n    while(t--)\n    {\n\n        scanf(\"%lld %lld\", &x, &y);\n        scanf(\"%lld %lld\", &a, &b);\n\n        if(x==y)\n            printf(\"%lld\\n\", x*b);\n\n        else if(x<0 || y<0)\n        {\n            money=abs(x)*a + abs(y)*a;\n            printf(\"%lld\\n\", money);\n        }\n        else\n        {\n            if(x>y)\n            {\n                money=(x-y)*a + y*b;\n                printf(\"%lld\\n\", money);\n            }\n            else\n            {\n                money=(y-x)*a + x*b;\n                printf(\"%lld\\n\", money);\n            }\n        }\n\n\n    }\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    long long int a, b, x, y, money, t;\n    scanf(\"%lld\", &t);\n    while(t--)\n    {\n\n        scanf(\"%lld %lld\", &x, &y);\n        scanf(\"%lld %lld\", &a, &b);\n\n        if(x==y)\n            if(b>2*a) printf(\"%lld\\n\", 2*x*a);\n            else printf(\"%lld\\n\", x*b);\n\n        else if(x<0 || y<0)\n        {\n            money=abs(x)*a + abs(y)*a;\n            printf(\"%lld\\n\", money);\n        }\n\n        else if(b>2*a){\n            printf(\"%lld\\n\", x*a+y*a);\n        }\n        else\n        {\n            if(x>y)\n            {\n                money=(x-y)*a + y*b;\n                printf(\"%lld\\n\", money);\n            }\n            else\n            {\n                money=(y-x)*a + x*b;\n                printf(\"%lld\\n\", money);\n            }\n        }\n\n\n    }\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.9844236760124611, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e895a3b1664a6a1759c0c7c27d4fdee8", "bug_code_uid": "6c855af6809410d0e23a923766f30be1", "src_uid": "4671380d70876044e0ec7a9cab5e25ae", "apr_id": "5b47afa3117eddf6a15ab97600fb6544", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint arr[100001], mark[100001], num[100001];\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++){\n        scanf(\"%d\", &arr[i]);\n    }\n    int ans = 0, cnt = 0;\n    for(int i = 0; i < n; i++){\n        num[arr[i]] = cnt;\n        if(!mark[arr[i]]){\n            cnt++;\n            mark[arr[i]] = 1;\n        }\n    }\n    for(int i = 0; i <= n; i++){\n        ans += num[i];\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint arr[100001], mark[100001], num[100001];\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++){\n        scanf(\"%d\", &arr[i]);\n    }\n    long long ans = 0, cnt = 0;\n    for(int i = 0; i < n; i++){\n        num[arr[i]] = cnt;\n        if(!mark[arr[i]]){\n            cnt++;\n            mark[arr[i]] = 1;\n        }\n    }\n    for(int i = 0; i <= n; i++){\n        ans += num[i];\n    }\n    printf(\"%I64d\\n\", ans);\n    return 0;\n}\n"}
{"similarity_score": 0.9785992217898832, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "f84847fa4a3cb47d81b940f2a4c8cf96", "bug_code_uid": "4f4ba18745e69506852f5a9edad7aed6", "src_uid": "7b56edf7cc71a1b3e39b3057a4387cad", "apr_id": "982989e71b94be840414073cd8194b7e", "difficulty": 1600, "tags": ["dp", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nchar S[100007];\nint main(){\n\tint i,n,res,m;\n\tchar l;\n\tm=0;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",S);\n\tres=1;\n\tl=S[0];\n\tfor(i=1;i<n;i++){\n\t\tif(l!=S[i]){\n\t\t\tres++;\n\t\t}\n\t\telse{\n\t\t\tif(i==2 || i==n-2){\n\t\t\t\tm++;\n\t\t\t}\n\t\t}\n\t\tl=S[i];\n\t}\n\t\n\tif(res==n){\n\t\tprintf(\"%d\",n);\n\t}\n\telse{\n\t\tif(res==n-1 && n!=2 && n!=3 ){\n\t\t\tif(m==1 && n!=4 ){\n\t\t\t\tprintf(\"%d\",n-1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"%d\",n);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(n==2 || n==3){\n\t\t\t\tprintf(\"%d\",n);\n\t\t\t}\n\t\t\telse\n\t\t\t\tprintf(\"%d\",res+2);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nchar S[100007];\nint main(){\n\tint i,n,res,m;\n\tchar l;\n\tm=0;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",S);\n\tres=1;\n\tl=S[0];\n\tfor(i=1;i<n;i++){\n\t\tif(l!=S[i]){\n\t\t\tres++;\n\t\t}\n\t\telse{\n\t\t\tif(i==2 || i==n-2){\n\t\t\t\tm++;\n\t\t\t}\n\t\t}\n\t\tl=S[i];\n\t}\n\t\n\tif(res==n){\n\t\tprintf(\"%d\",n);\n\t}\n\telse{\n\t\tif(res==n-1 && n!=2 && n!=3 ){\n\t\t\t//if(m==1 && n!=4 ){\n\t\t\t//\tprintf(\"%d 2\",n-1);\n\t\t\t//}\n\t\t\t//else{\n\t\t\t\tprintf(\"%d\",n);\n\t\t\t//}\n\t\t}\n\t\telse{\n\t\t\tif(n==2 || n==3){\n\t\t\t\tprintf(\"%d\",n);\n\t\t\t}\n\t\t\telse\n\t\t\t\tprintf(\"%d\",res+2);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n"}
{"similarity_score": 0.9804432855280313, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "23b8a75edc9407858516a3188c6f6fc4", "bug_code_uid": "31e5e39f9b1757b03680e9117f0fc070", "src_uid": "5698e6fd934b9f6b847d7e30a3d06f2b", "apr_id": "0a245cedff545f58351b45311e30f4fa", "difficulty": 800, "tags": ["brute force", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n#define int long long\r\n#define M 1000000007\r\n\r\nint dif(int a,int b)\r\n{\r\n    return (a>b)?a-b:b-a;\r\n}\r\n\r\n\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%llu\",&t);\r\n    while(t--)\r\n    {\r\n        int n,x,i,k,min=0,flag=0,max=0;\r\n        scanf(\"%llu\",&n);\r\n        while(n--)\r\n        {\r\n            scanf(\"%lld\",&x);\r\n            if(x>max) max=x;\r\n            if(x<min) min=x;\r\n            if(x<0) flag=1;\r\n        }\r\n        if(flag==1) printf(\"No\\n\");\r\n        else\r\n        {\r\n            if(min==0)\r\n            k=max+1;\r\n            else k=max;\r\n            printf(\"%lld\\n\",k);\r\n            for(i=min;i<=max;i++)\r\n                printf(\"%lld \",i);\r\n            printf(\"\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\n#define int long long\r\n#define M 1000000007\r\n\r\nint dif(int a,int b)\r\n{\r\n    return (a>b)?a-b:b-a;\r\n}\r\n\r\n\r\nint main(void)\r\n{\r\n    int t;\r\n    scanf(\"%llu\",&t);\r\n    while(t--)\r\n    {\r\n        int n,x,i,k,min=0,flag=0,max=0;\r\n        scanf(\"%llu\",&n);\r\n        while(n--)\r\n        {\r\n            scanf(\"%lld\",&x);\r\n            if(x>max) max=x;\r\n            if(x<min) min=x;\r\n            if(x<0) flag=1;\r\n        }\r\n        if(flag==1) printf(\"No\\n\");\r\n        else\r\n        {\r\n            printf(\"Yes\\n\");\r\n            if(min==0)\r\n            k=max+1;\r\n            else k=max;\r\n            printf(\"%lld\\n\",k);\r\n            for(i=min;i<=max;i++)\r\n                printf(\"%lld \",i);\r\n            printf(\"\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9011264080100125, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "bcc5dd82eb3f4651355a0219b2144673", "bug_code_uid": "8c8f97d6026c1851f26ffef533c14a94", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "ad232fca1e550b5adfc90f233b223f22", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ninline void min(int a,int b){\n    if(a<b) return a;\n    return b;\n}\ninline void abs(int x){\n    if(x<0) return -x;\n    return x;\n}\nint main(){\n    int T;\n    scanf(\"%d\",T);\n    while(T--){\n        long long a,b,x,y;\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n        if(a*2<b) printf(\"%lld\\n\",a*(x+y));\n        else printf(\"%lld\\n\",min(x,y)*b+abs(x-y)*a);\n    }\n}", "fixed": "#include<stdio.h>\ninline long long min(long long a,long long b){\n    if(a<b) return a;\n    return b;\n}\ninline long long abs(long long x){\n    if(x<0) return -x;\n    return x;\n}\nint main(){\n    int T;\n    scanf(\"%d\",&T);\n    while(T--){\n        long long a,b,x,y;\n        scanf(\"%lld%lld%lld%lld\",&x,&y,&a,&b);\n        if(a*2<b) printf(\"%lld\\n\",a*(x+y));\n        else printf(\"%lld\\n\",min(x,y)*b+abs(x-y)*a);\n    }\n}"}
{"similarity_score": 0.8587479935794543, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "50eccd2646ad21bfdb388cb43ffbdc01", "bug_code_uid": "f8b83b160bfb98c2edc4035c93bf6f8b", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "185b14650fc7c4bfefbb7826343c89f4", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n#include <time.h>\n#include <limits.h>\n\n#define PI 3.141592653589793\n#define max(a,b) (a < b) ? (b) : (a)\n#define min(a,b) (a > b) ? (b) : (a)\n#define FOR(i,a,b) for(i = a ; i <= b ; i++)\n#define ROF(i,a,b) for(i = a ; i >= b ; i--)\n#define RAD(x) ((x)*PI)/180\n#define y1 y_1\n#define ll long long\n#define endl printf(\"\\n\")\n#define MAX 100005\n\nint i, n, x, l, r, ans;\n\nint main () {\n\tscanf(\"%d %d\",&n ,&x);\n\tFOR(i, 1, n){\n\t\tscanf(\"%d %d\",&l ,&r);\n\t\tr -= r%x;\n\t\tif(l%x)\n\t\tl -= l%x - 1;\n\t\tans += ((r - l)/x + 1)*x;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n#include <time.h>\n#include <limits.h>\n\n#define PI 3.141592653589793\n#define max(a,b) (a < b) ? (b) : (a)\n#define min(a,b) (a > b) ? (b) : (a)\n#define FOR(i,a,b) for(i = a ; i <= b ; i++)\n#define ROF(i,a,b) for(i = a ; i >= b ; i--)\n#define RAD(x) ((x)*PI)/180\n#define y1 y_1\n#define ll long long\n#define endl printf(\"\\n\")\n#define MAX 100005\n\nint i, n, x, l, r, ans, p = 1;\n\nint main () {\n\tscanf(\"%d %d\",&n ,&x);\n\tFOR(i, 1, n){\n\t\tscanf(\"%d %d\",&l ,&r);\n\t\tans += (l - p) % x;\n\t\tans += r - l + 1;\n\t\tp = r + 1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9316508937960042, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "76da693b15b8e5e8d638f809c14943c7", "bug_code_uid": "821593f57741959ca40cc0f9ec5466f6", "src_uid": "3fe51d644621962fe41c32a2d90c7f94", "apr_id": "d82d905f6395fce8b35fbb96cb13b47d", "difficulty": 800, "tags": ["dp", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int flag = 0;\n        int array[n];\n        for(int i=0; i < n; i++)\n        {\n            scanf(\"%d\",&array[i]);\n            if(array[i]%2==0)\n                flag = i;\n        }\n        if(flag)\n            printf(\"1\\n%d\\n\",flag+1);\n        else if(n==1 && array[0]%2!=0)\n            printf(\"-1\\n\");\n        else\n            printf(\"2\\n1 2\\n\");\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        int flag = 0;\n        int array[n];\n        for(int i=0; i < n; i++)\n        {\n            scanf(\"%d\",&array[i]);\n            if(array[i]%2==0)\n                flag = i+1;\n        }\n        if(flag)\n            printf(\"1\\n%d\\n\",flag);\n        else if(n==1)\n            printf(\"-1\\n\");\n        else\n            printf(\"2\\n1 2\\n\");\n    }\n}"}
{"similarity_score": 0.984081041968162, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "4216b019887c53220db7b3b8b4ed046f", "bug_code_uid": "7c96eab56488333d639b6b5e07ef89ba", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "ac05551ee2e4afd13375c8b2404fcd8e", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b)\n{\n\treturn (*(int *)a-*(int *)b);\n}\nint main()\n{\n\tint n,arr[100000];\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tqsort(arr,n,sizeof(int),cmp);\n\tif(n%2==0)\n\t{\n\t\tprintf(\"%d\\n\",arr[n/2]);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",arr[(n+1)/2]);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void *a,const void *b)\n{\n\treturn (*(int *)a-*(int *)b);\n}\nint main()\n{\n\tint n,arr[100000];\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t}\n\tqsort(arr,n,sizeof(int),cmp);\n\tif(n%2==0)\n\t{\n\t\tprintf(\"%d\\n\",arr[(n/2)-1]);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",arr[((n+1)/2)-1]);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.7172932330827068, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "38f38c09b97f197e5a1555084c7ff312", "bug_code_uid": "2fc92b4f74466ea78ce9369fbbc30b6b", "src_uid": "a4a69a5fbf35781ff0849332a45566ca", "apr_id": "640a8c8227e046c0515da390980efbd5", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint a[3]; \r\nint main(){\r\n\tint i,t,j,m;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tfor(i=0;i<3;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\tfor(i=0;i<2;i++){\r\n\t\tfor(j=i+1;j<3;j++){\r\n\t\t\tif(a[i]>a[j]){\r\n\t\t\t\tm=a[j];\r\n\t\t\t\ta[j]=a[i];\r\n\t\t\t\ta[i]=m;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(a[0]==a[1]&&a[1]==a[2]){\r\n\t\tprintf(\"NO\\n\"); \r\n\t}\r\n\tif(a[0]==a[1]&&a[1]!=a[2]){\r\n\t\tif(a[2]%2==0){printf(\"YES\\n\");}\r\n\t\telse {printf(\"NO\\n\");}\r\n\t}\r\n\tif(a[0]!=a[1]&&a[1]==a[2]){\r\n\t\tif(a[0]%2==0){printf(\"YES\\n\");}\r\n\t\telse {printf(\"NO\\n\");}\r\n\t}\r\n\tif(a[0]!=a[1]&&a[1]!=a[2]){\r\n\t\tif(a[2]==a[0]+a[1]){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}else{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n\treturn 0; \r\n\r\n}\r\n\t\r\n", "fixed": "#include <stdio.h>\r\nint a[3]; \r\nint main(){\r\n\tint i,t,j,m;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tfor(i=0;i<3;i++){\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\tfor(i=0;i<2;i++){\r\n\t\tfor(j=i+1;j<3;j++){\r\n\t\t\tif(a[i]>a[j]){\r\n\t\t\t\tm=a[j];\r\n\t\t\t\ta[j]=a[i];\r\n\t\t\t\ta[i]=m;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(a[0]==a[1]&&a[1]==a[2]){\r\n\t\tif(a[0]%2!=0){\r\n\t\tprintf(\"NO\\n\");\r\n\t\t}else {printf(\"YES\\n\");} \r\n\t}\r\n\tif(a[0]==a[1]&&a[1]!=a[2]){\r\n\t\tif(a[2]%2==0){printf(\"YES\\n\");}\r\n\t\telse {printf(\"NO\\n\");}\r\n\t}\r\n\tif(a[0]!=a[1]&&a[1]==a[2]){\r\n\t\tif(a[0]%2==0){printf(\"YES\\n\");}\r\n\t\telse {printf(\"NO\\n\");}\r\n\t}\r\n\tif(a[0]!=a[1]&&a[1]!=a[2]){\r\n\t\tif(a[2]==a[0]+a[1]){\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}else{\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n\treturn 0; \r\n\r\n}\r\n\t\r\n"}
{"similarity_score": 0.90216271884655, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "a6961434a05ac5546f3fe6d2c966a4b3", "bug_code_uid": "4c515927a2f32c0a0cebb132518e4d5d", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "9bdbbc335d21d97fd98127ebe03f18a5", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint n, i, j;\n\tscanf(\"%d\", &n);\n\tchar a[n][n], ch;\n\t\n\tfor(i = 0; i < n; i++)\tscanf(\"%s\", a[i]);\n\t\n\tch = a[0][0];\n\tfor(i = 0; i < n; i++){\n\t\tif(ch != a[i][i] || ch != a[i][n - 1 - i]){\n\t\t\tprintf(\"NO\\n\"); return 0;\n\t\t}\n\t}\n\t\n\tch = a[0][1];\n\t\n\tfor(i = 0; i < n; i++){\n\t\tfor(j = 0; j < n; j++){\n\t\t\tif((j != i && j != n - 1 - i) && (ch != a[i][j])){\n\t\t\t\tprintf(\"NO\\n\"); return 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprintf(\"YES\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint n, i, j;\n\tscanf(\"%d\", &n);\n\tchar a[n][n], ch, sch;\n\t\n\tfor(i = 0; i < n; i++)\tscanf(\"%s\", a[i]);\n\t\n\tch = a[0][0];\n\tfor(i = 0; i < n; i++){\n\t\tif(ch != a[i][i] || ch != a[i][n - 1 - i]){\n\t\t\tprintf(\"NO\\n\"); return 0;\n\t\t}\n\t}\n\t\n\tsch = a[0][1];\n\tif(sch != ch){\n\t\tfor(i = 0; i < n; i++){\n\t\t\tfor(j = 0; j < n; j++){\n\t\t\t\tif((j != i && j != n - 1 - i) && (sch != a[i][j])){\n\t\t\t\t\tprintf(\"NO\\n\"); return 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"YES\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.46455834242093785, "equal_cnt": 17, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "0b5789ba1dd011ae32e3b6e5ce58a045", "bug_code_uid": "93e40cde7544dbc7c2f3fbf65452a44f", "src_uid": "ef32a8f37968629673547db574261a9d", "apr_id": "6e2f545bbbd9467c0c8dfd77e344e719", "difficulty": 1400, "tags": ["two pointers", "binary search", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAXN 100002\nint main()\n\n{\n    int n, i, sum[MAXN], t, x, max = 0, j;\n    scanf(\"%d %d\",&n,&t);\n\n    sum[0] = 0;\n    for(i = 1;i <= n; ++i){\n        scanf(\"%d\",&x);\n        sum[i] = sum[i - 1] + x;\n        if(sum[i] <= t)\n            max = i;\n    }\n\n\n    for(i = 1;i < n; ++i)\n        for(j = i + 1;j <= n; ++j)\n            if(sum[j] - sum[i] <= t){\n                if(j - i > max)\n                max = j - i;}\n                else\n                break;\n\n\n   printf(\"%d\",max);\n\n\n\n\n\n\n}\n", "fixed": "#include <stdio.h>\n#define MAXN 100002\n#define MAXB 410000\n\nint main()\n\n{\n    int n, i, a[MAXN], t, x, max = 0, j = 1, numar, k = 1, sum = 0;\n    scanf(\"%d %d\",&n,&t);\n\n\n    for(i = 1;i <= n; ++i){\n     scanf(\"%d\",&a[i]);\n     sum = sum + a[i];\n     while(sum > t){\n        sum = sum - a[j];\n        ++j;\n        }\n\n        if(max < i - j + 1)\n            max = i - j + 1;\n    }\n\n   printf(\"%d\",max);\n\n}\n"}
{"similarity_score": 0.9991783073130649, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6bb064c6e4c3872c7e2e1a022cf1dcbf", "bug_code_uid": "e3394f4aeed924aaf59063e3716c8963", "src_uid": "ecbc339ad8064681789075f9234c269a", "apr_id": "42b4ed3d6b55fa8b8a79a4d40601087b", "difficulty": 1700, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    unsigned long long int k, n, d, m, l, bobcrd = 0;\n    scanf(\"%llu %llu %llu %llu\", &n, &d, &m, &l);\n    k = 1;\n    while(k < n){\n        bobcrd += (((k-1)*m+l-bobcrd)/d)*d;\n        if(bobcrd <= ((k-1)*m+l))\n            bobcrd += d;\n        k += (bobcrd - (k-1)*m)/m;\n        if((k-1)*m+l<=bobcrd)\n            k++;\n        if(bobcrd<=(k-1)*m){\n            printf(\"%llu\", bobcrd);\n            return 0;\n        }\n    }\n    bobcrd += (((k-1)*m+l-bobcrd)/d)*d;\n    if(bobcrd <= ((k-1)*m+l))\n        bobcrd += d;\n    printf(\"%llu\", bobcrd);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    unsigned long long int k, n, d, m, l, bobcrd = 0;\n    scanf(\"%llu %llu %llu %llu\", &n, &d, &m, &l);\n    k = 1;\n    while(k < n){\n        bobcrd += (((k-1)*m+l-bobcrd)/d)*d;\n        if(bobcrd <= ((k-1)*m+l))\n            bobcrd += d;\n        k += (bobcrd - (k-1)*m)/m;\n        if((k-1)*m+l<=bobcrd)\n            k++;\n        if(bobcrd<(k-1)*m){\n            printf(\"%llu\", bobcrd);\n            return 0;\n        }\n    }\n    bobcrd += (((k-1)*m+l-bobcrd)/d)*d;\n    if(bobcrd <= ((k-1)*m+l))\n        bobcrd += d;\n    printf(\"%llu\", bobcrd);\n    return 0;\n}\n"}
{"similarity_score": 0.9476135040745053, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6e0d9ebcc0dd587c6ae41105daadf0e1", "bug_code_uid": "6d41928d0d58765cdfaa0cbf31b4527d", "src_uid": "76ecde4a445bbafec3cda1fc421e6d42", "apr_id": "c417f246d490b324fb9662ae0e04a1f9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include<stdio.h>\nint main()\n{\n    int n,m,c,i,c1=0,c2=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&m,&c);\n        if(m>c)\n        {\n            c1++;\n        }\n        else c2++;\n    }\n\n    if(c1>c2)\n    {\n        printf(\"Mishka\");\n    }\n    else if(c2>c1)\n    {\n        printf(\"Chris\");\n    }\n    else if(c1==c2)\n    {\n        printf(\"Friendship is magic!^^\");\n    }\n}\n\n\n\n\n\n\n\n\n\n", "fixed": "\n#include<stdio.h>\nint main()\n{\n    int n,m,c,i,c1=0,c2=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&m,&c);\n        if(m>c)\n        {\n            c1++;\n        }\n        else if(c>m)\n        {\n            c2++;\n        }\n\n\n    }\n\n    if(c1>c2)\n    {\n        printf(\"Mishka\");\n    }\n    else if(c2>c1)\n    {\n        printf(\"Chris\");\n    }\n    else if(c1==c2)\n    {\n        printf(\"Friendship is magic!^^\");\n    }\n}\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.9153439153439153, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "44add6a73b35fcf90571c039fa7bbbfd", "bug_code_uid": "f3e2a462dc44b0dbd9504989d6fd6397", "src_uid": "5c33d1f970bcc2ffaea61d5407b877b2", "apr_id": "9c73071467b31351d87e5baeb5607c66", "difficulty": 1100, "tags": ["sortings", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nstruct ne{\n\tchar num[105];\n\tint number;\n};\nstruct ne bb[101];\nint main()\n{\n\tint a,i,j,n=5;\n\tint t;\n\tint flag; \n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tflag=0;\n\t\tfor(a=0;a<n;a++)\n\t\t{\n\t\t\tscanf(\"%s\",bb[a].num);\n\t\t\tbb[a].number=strlen(bb[a].num);\n\t\t}\n\t\t//\u7ed3\u6784\u4f53\u4e2d,\u524d\u9762\u4e00\u90e8\u5206\u662f\u5b57\u7b26\u4e32,\u7136\u540e\u662f\u5b57\u7b26\u4e32\u957f\u5ea6\n\t\t//\u5148\u5192\u6ce1\u6392\u4e2a\u5e8f\n\t\tfor(i=0;i<n-1;i++)\n\t\t{//\u8ba9\u957f\u5ea6\u5c0f\u7684\u5b57\u7b26\u4e32\u5728\u524d\n\t\t\tfor(j=0;j<n-1;j++)\n\t\t\t{\n\t\t\t\tif(bb[j].number>bb[j+1].number)\n\t\t\t\t{\n\t\t\t\t\tne t; \n\t\t\t\t\tt=bb[j];\n\t\t\t\t\tbb[j]=bb[j+1];\n\t\t\t\t\tbb[j+1]=t;\n\t\t\t\t}\n\t\t\t}\n\t\t } \n\t\t //\u6bd4\u8f83\u5b57\u7b26\u4e32\u524d\u4e00\u4e2a\u662f\u4e0d\u662f\u540e\u4e00\u4e2a\u7684\u5b50\u96c6\n\t\t//\u795e\u5947\u7684strstr\u51fd\u6570... \n\t\t//\u5f53\u5b57\u7b26\u4e32\u76f8\u540c\u65f6\u8fd4\u56de\u7684\u4e0d\u662fNIULL\\ \n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(strstr(bb[i].num,bb[i-1].num)==NULL)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tprintf(\"%s\\n\",bb[i-1].num); \n\t\t\t\tprintf(\"%s\\n\",bb[i].num);\n\t\t\t}\n\t\t } \n\t\t if(flag==1)\n\t\t printf(\"NO\\n\");\n\t\t if(flag==0)\n\t\t {\n\t\t \tprintf(\"YES\\n\");\n\t\t \tfor(i=0;i<n;i++)\n\t\t \t{\n\t\t \t\tprintf(\"%s\\n\",bb[i].num);\n\t\t\t }\n\t\t  } \n\t}\n\t\n } ", "fixed": "#include <stdio.h>\n#include <string.h>\nstruct ne{\n\tchar num[105];\n\tint number;\n};\nstruct ne bb[102];\nint main()\n{\n\tint a,i,j,n=5;\n\tint t;\n\tint flag; \n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tflag=0;\n\t\tfor(a=0;a<n;a++)\n\t\t{\n\t\t\tscanf(\"%s\",bb[a].num);\n\t\t\tbb[a].number=strlen(bb[a].num);\n\t\t}\n\t\t//\u7ed3\u6784\u4f53\u4e2d,\u524d\u9762\u4e00\u90e8\u5206\u662f\u5b57\u7b26\u4e32,\u7136\u540e\u662f\u5b57\u7b26\u4e32\u957f\u5ea6\n\t\t//\u5148\u5192\u6ce1\u6392\u4e2a\u5e8f\n\t\tfor(i=0;i<n-1;i++)\n\t\t{//\u8ba9\u957f\u5ea6\u5c0f\u7684\u5b57\u7b26\u4e32\u5728\u524d\n\t\t\tfor(j=0;j<n-1;j++)\n\t\t\t{\n\t\t\t\tif(bb[j].number>bb[j+1].number)\n\t\t\t\t{\n\t\t\t\t\tbb[101]=bb[j];\n\t\t\t\t\tbb[j]=bb[j+1];\n\t\t\t\t\tbb[j+1]=bb[101];\n\t\t\t\t}\n\t\t\t}\n\t\t } \n\t\t //\u6bd4\u8f83\u5b57\u7b26\u4e32\u524d\u4e00\u4e2a\u662f\u4e0d\u662f\u540e\u4e00\u4e2a\u7684\u5b50\u96c6\n\t\t//\u795e\u5947\u7684strstr\u51fd\u6570... \n\t\t//\u5f53\u5b57\u7b26\u4e32\u76f8\u540c\u65f6\u8fd4\u56de\u7684\u4e0d\u662fNIULL\\ \n//\t\ti=1; \n\n\n\n\t\tfor(i = 1;i<n;i++)\n\t\t{\n\t\t\tif(strstr(bb[i].num,bb[i-1].num)==NULL)\n\t\t\t{\n\t\t\t\tflag=1;\n//\t\t\t\tprintf(\"%s\\n\",bb[i-1].num); \n//\t\t\t\tprintf(\"%s\\n\",bb[i].num);\n\t\t\t}\n\t\t\tif(bb[i].number==bb[i-1].number)\n\t\t\t{\n\t\t\t\tif(strcmp(bb[i].num,bb[i-1].num))\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t}\n\t\t } \n\t\t if(flag==1)\n\t\t printf(\"NO\\n\");\n\t\t if(flag==0)\n\t\t {\n\t\t \tprintf(\"YES\\n\");\n\t\t \tfor(i=0;i<n;i++)\n\t\t \t{\n\t\t \t\tprintf(\"%s\\n\",bb[i].num);\n\t\t\t }\n\t\t  } \n\t}\n\t\n } "}
{"similarity_score": 0.9453924914675768, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f3adbaab522f4b35fdc6977ed2effe46", "bug_code_uid": "44a60bf476f5efce60cd79daef0a6242", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "daf6548ec09057b9106f2e13274edcd2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i, count=1;\n    int a[10005];\n    scanf(\"%d\", &n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        if(a[i]!=a[i+1])\n        {\n            count++;\n        }\n    }\n    printf(\"%d\", count);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i, count=1;\n    scanf(\"%d\", &n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(i=0;i<n-1;i++)\n    {\n        if(a[i]!=a[i+1])\n        {\n            count++;\n        }\n    }\n    printf(\"%d\", count);\n    return 0;\n}\n"}
{"similarity_score": 0.9435897435897436, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5342229d5107d403e5cc1f6fe8a965e5", "bug_code_uid": "ec18978bfaedd45e07a401ae21869e45", "src_uid": "b5ef56f2eb482682414c32fba83a3949", "apr_id": "29b04c97796c3fc55a9ede1f20bcbed3", "difficulty": 1400, "tags": ["data structures", "dp", "sortings", "two pointers"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    short t, n, k;\n    int a1, a2;\n    scanf(\"%hd\", &t);\n    int sc[200005] = {};\n    while (t--)\n    {\n        scanf(\"%hd %hd\", &n, &k);\n        scanf(\"%d\", &a1);\n        for (int i = 2; i <= n; ++i)\n        {\n            scanf(\"%d\", &a2);\n            sc[i] = sc[i - 1] + (((long long)a2 << 1) > a1);\n            a1 = a2;\n        }\n        int ans = 0;\n        for (int i = 1; i <= n - k; ++i)\n        {\n            auto l = sc[i + k] - sc[i];\n            if (l == k)\n                ans++;\n        }\n        printf(\"%d\\n\", ans);\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    short t;\n    int n, k;\n    scanf(\"%hd\", &t);\n    int sc[200005] = {};\n    while (t--)\n    {\n        scanf(\"%d %d\", &n, &k);\n        int a1;\n        scanf(\"%d\", &a1);\n        for (int i = 2; i <= n; ++i)\n        {\n            int a2;\n            scanf(\"%d\", &a2);\n            sc[i] = sc[i - 1] + (((long long)(a2) << 1) > a1);\n            a1 = a2;\n        }\n        int ans = 0;\n        for (int i = 1; i <= n - k; ++i)\n        {\n            auto l = sc[i + k] - sc[i];\n            if (l == k)\n                ans++;\n        }\n        printf(\"%d\\n\", ans);\n    }\n}"}
{"similarity_score": 0.9642857142857143, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ee742e53827246b481a83fff53f46f0c", "bug_code_uid": "f635a4538359bc4b0d0e78b43d1f9c75", "src_uid": "0ee86e75ff7a47a711c9eb41b34ad1a5", "apr_id": "198e132f41155b11f22067fe80126cb7", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],c[n];\n\t\tint i=0,j=1,temp,max,k=0;\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tc[0]=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tc[i+1]=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(a[i]==j)\n\t\t\tc[j]++;\n\t\t}\n\t}\n\t\tmax=c[0];\n\tfor(i=0;i<n;i++)\n\t{\n         if(max < c[i])\n         {\n         \tmax=c[i];\n\t\t }\n\t\t\n\t}\n\tint r[max-1];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]==1 && i!=0)\n\t\tr[k++]=a[i-1];\n\t}\n\tprintf(\"%d\\n\",max);\n\tfor(i=0;i<max-1;i++)\n\tprintf(\"%d \",r[i]);\n\tprintf(\"%d\",a[n-1]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],c[n+1];\n\t\tint i=0,j=1,temp,max,k=0;\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tc[0]=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tc[i+1]=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(a[i]==j)\n\t\t\tc[j]++;\n\t\t}\n\t}\n\t\tmax=c[1];\n\tfor(i=1;i<n+1;i++)\n\t{\n         if(max < c[i])\n         {\n         \tmax=c[i];\n\t\t }\n\t\t\n\t}\n\tint r[max-1];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]==1 && i!=0)\n\t\tr[k++]=a[i-1];\n\t}\n\tprintf(\"%d\\n\",max);\n\tfor(i=0;i<max-1;i++)\n\tprintf(\"%d \",r[i]);\n\tprintf(\"%d\",a[n-1]);\n}\n"}
{"similarity_score": 0.5528455284552846, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "0dd9971527fce70437473eaccc3c9144", "bug_code_uid": "40efe616e774428b210812bc344c5334", "src_uid": "3ec1b7027f487181dbdfb12f295f11ae", "apr_id": "ea62e9399849944db8095cf3bc1f541a", "difficulty": 900, "tags": ["brute force", "dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<math.h>\r\nint main ()\r\n{\r\n    int t,n,j,i,x;\r\n    scanf(\"%d\",&t);\r\n    for(i=1; i<=t; i++)\r\n    {\r\n        scanf(\"%d\",&x);\r\n        if(x>=2020)\r\n        {\r\n            n=x%10;\r\n            x=x-n*2021;\r\n            if(x%2020==0)\r\n                printf(\"YES\\n\");\r\n            else\r\n                printf(\"NO\\n\");\r\n        }\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main ()\r\n{\r\n    int t,n,j,i,x,k,f=0;\r\n    scanf(\"%d\",&t);\r\n    for(i=1; i<=t; i++)\r\n    {\r\n        scanf(\"%d\",&x);\r\n        for(j=0; j<=x/2020; j++)\r\n            for(k=0; k<=x/2021; k++)\r\n                if(j*2020+k*2021==x)\r\n                {\r\n                    printf(\"YES\\n\");\r\n                    f=1;\r\n                    break;\r\n                }\r\n        if(f==0) printf(\"NO\\n\");\r\n        f=0;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.4329268292682927, "equal_cnt": 20, "replace_cnt": 8, "delete_cnt": 5, "insert_cnt": 7, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "ca44536ccc78c41cc68d12d1c8ea6d98", "bug_code_uid": "f2145567882a5a4f7f88b7eea90a10c6", "src_uid": "3851854541b4bd168f5cb1e8492ed8ef", "apr_id": "e09f3e123c6746f4b0540a94c3da687a", "difficulty": 800, "tags": ["brute force", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        int n, d = 0, s = 0, b = 0;\r\n        scanf(\"%d\", &n);\r\n\r\n        char a[n];\r\n\r\n        for (int c = 0; c < n; c++)\r\n        {\r\n            scanf(\"%c\", &a[c]);\r\n        }\r\n\r\n        while (d < n)\r\n        {\r\n            for (int j = s; j < n; j++)\r\n            {\r\n                if (a[j] = a[j + 1])\r\n                {\r\n                    d = d + 1;\r\n                }\r\n                else if (a[j] != a[j + 1])\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            s = d;\r\n\r\n            for (int k = d + 1; k < n; k++)\r\n            {\r\n                if (a[d] = a[k])\r\n                {\r\n                    b = b + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (b > 0)\r\n        {\r\n            printf(\"NO\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\");\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t > 0)\r\n    {\r\n        int n, i, j, cnt = 0;\r\n        scanf(\"%d\", &n);\r\n        char a[n];\r\n        scanf(\"%s\", a);\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            for (j = i + 1; j < n; j++)\r\n            {\r\n                if (a[i] == a[j] && a[i] != a[j - 1])\r\n                {\r\n                    cnt++;\r\n                }\r\n            }\r\n        }\r\n        if (cnt > 0)\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        t--;\r\n    }\r\n}\r\n"}
{"similarity_score": 0.3111111111111111, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "4278c8bd48cee8bc2444a9028ba0a3c2", "bug_code_uid": "b777cff78c3a40ce4eaa1c0e751a13e9", "src_uid": "8e766dea94dc2033ba2d5759d7e5cd80", "apr_id": "2ee9792e8ed1dcd78eaa8a31ac04aa45", "difficulty": 1200, "tags": ["dp", "sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 300050\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,i,j,ans=0,ch=0,min=N,max=0;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n+2],b[N]={0},t;\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\t//b[i]=0;\n\t\t\tif(a[i]>max)max=a[i];\n\t\t\tif(a[i]<min)min=a[i];\n\t\t}\n\t\tfor(i=1;i<=n;i++){\n\t\t\tt=a[i];\n\t\t\tb[t]++;\n\t\t}\n\t\tfor(i=min;i<=max;i++){\n\t\t\tb[i]+=ch;\n\t\t\tans+=b[i]/i;\n\t\t\tch=b[i]%i;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}", "fixed": "#include <stdio.h>\nint cmp(const void * a, const void * b) {\n   return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tint n,i,ans=0,sum=0;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n+1];\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tif(n>1)\n\t\t\tqsort(a,n,sizeof(int),cmp);\n\t\tfor(i=0;i<n;i++){\n\t\t\tsum++;\n\t\t\tif(sum>=a[i]){\n\t\t\t\tans++;\n\t\t\t\tsum=0;\n\t\t\t}\n//\t\t\tif((n-i+sum)<a[i])\n\t\t//\t\tbreak;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}"}
{"similarity_score": 0.5331529093369418, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "852178cc95b9ead5544daaef07205653", "bug_code_uid": "480390abf26eaca0fd94ffd482fcd561", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "8ff8bc2087d80558983b75b2f20e9849", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, d; scanf(\"%d%d\", &n, &d);\n    int a; scanf(\"%d\", &a);\n    int cnt = 0; n--;\n    while(n--)\n    {\n\tint buf; scanf(\"%d\", &buf);\n\tif(buf <= a) cnt += (a - buf)/d + 1;\n\ta = buf + cnt*d;\n    }\n    printf(\"%d\\n\", cnt);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, d; scanf(\"%d%d\", &n, &d);\n    int a; scanf(\"%d\", &a);\n    int cnt = 0; n--;\n    while(n--)\n    {\n\tint buf; scanf(\"%d\", &buf);\n\t// printf(\"%d %d\\n\", a, buf);\n\tif(buf <= a)\n\t{\n\t    if(a - buf < d)\n\t    {\n\t\tcnt += 1;\n\t\ta = buf + d;\n\t    }\n\t    else\n\t    {\n\t\tint temp = cnt;\n\t\tcnt += (a - buf)/d + 1;\n\t\ta = buf + (cnt - temp)*d;\n\t    }\n\t}\n\telse a = buf;\n\t// printf(\"%d\\n\", cnt);\n    }\n    printf(\"%d\\n\", cnt);\n    return 0;\n}\n"}
{"similarity_score": 0.9990029910269193, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "061f62f77d7231a421179ba0da05b975", "bug_code_uid": "b963912dc63f91ca2c74463bc7f5a636", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "c468dc4a6baf15354068e0b336124491", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint a1[100001];\nchar b[100001];\nint main()\n{\n    int f;\n    int i=0;\n    int j=0;\n    scanf(\"%s\",b);\n    int l=strlen(b);\n    int g=0;\n    j=1;\n   for(g=1;g<l;g++)\n    {\n\n        if(b[g]==b[g-1])\n        {\n            a1[j]=a1[j-1]+1;\n\n        }\n        else\n        {\n        a1[j]=a1[j-1];\n        }\n        j++;\n    }\n    int t;\n    int t1;\n    int t2;\nscanf(\"%d\",&t);\nfor(i=0;i<=t;i++)\n{\n   scanf(\"%d %d\",&t1,&t2);\n    printf(\"%d\\n\",a1[t2-1]-a1[t1-1]);\n}\n}\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint a1[100001];\nchar b[100001];\nint main()\n{\n    int f;\n    int i=0;\n    int j=0;\n    scanf(\"%s\",b);\n    int l=strlen(b);\n    int g=0;\n    j=1;\n   for(g=1;g<l;g++)\n    {\n\n        if(b[g]==b[g-1])\n        {\n            a1[j]=a1[j-1]+1;\n\n        }\n        else\n        {\n        a1[j]=a1[j-1];\n        }\n        j++;\n    }\n    int t;\n    int t1;\n    int t2;\nscanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{\n   scanf(\"%d %d\",&t1,&t2);\n    printf(\"%d\\n\",a1[t2-1]-a1[t1-1]);\n}\n}\n\n\n"}
{"similarity_score": 0.961082910321489, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "415d2ec13b7da7b03f831a1c6aa8278d", "bug_code_uid": "c604cac46fff2d6cc19be34c0a23d1f7", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "476cbd9b65acbbaf736786744dcdb537", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/******************************************************************************\r\n\r\n                            Online C Compiler.\r\n                Code, Compile, Run and Debug C program online.\r\nWrite your code in this editor and press \"Run\" button to compile and execute it.\r\n\r\n*******************************************************************************/\r\n\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int testcases; scanf(\"%d\", &testcases);\r\n    \r\n    while(testcases--) {\r\n        int n; scanf(\"%d\", &n);\r\n        printf(\"%d %d\\n\", -(n-1), n);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "/******************************************************************************\r\n\r\n                            Online C Compiler.\r\n                Code, Compile, Run and Debug C program online.\r\nWrite your code in this editor and press \"Run\" button to compile and execute it.\r\n\r\n*******************************************************************************/\r\n\r\n#include <stdio.h>\r\n\r\n#define ll long long int\r\n\r\nint main()\r\n{\r\n    ll testcases; scanf(\"%lld\", &testcases);\r\n    \r\n    while(testcases--) {\r\n        ll n; scanf(\"%lld\", &n);\r\n        printf(\"%lld %lld\\n\", -(n-1), n);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9818840579710145, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "778c8d02c6261240380e51524611787b", "bug_code_uid": "6d6ec51e12353ded0d3095463994a8a3", "src_uid": "d15a758cfdd7a627822fe8be7db4f60b", "apr_id": "f6d018afc8b184f5175ed7e56e66dc17", "difficulty": 1600, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nsigned main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tlong long *a = malloc(sizeof(long long) * n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lli\", &a[i]);\n\t}\n\tif (n == 1) {\n\t\tprintf(\"1 1\\n0\\n1 1\\n0\\n1 1\\n\");\n\t\tprintf(\"%lli\\n\", -a[i]);\n\t} else {\n\t\tprintf(\"1 1\\n-%lli\\n\", a[0]);\n\t\ta[0] = 0;\n\t\tprintf(\"2 %d\\n\", n);\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tprintf(\"%lli \", a[i] * (n - 1));\n\t\t\ta[i] = a[i] * n;\n\t\t}\n\t\tprintf(\"\\n1 %d\\n\", n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tprintf(\"%lli \", -a[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nsigned main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tlong long *a = malloc(sizeof(long long) * n);\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lli\", &a[i]);\n\t}\n\tif (n == 1) {\n\t\tprintf(\"1 1\\n0\\n1 1\\n0\\n1 1\\n\");\n\t\tprintf(\"%lli\\n\", -a[0]);\n\t} else {\n\t\tprintf(\"1 1\\n%lli\\n\", -a[0]);\n\t\ta[0] = 0;\n\t\tprintf(\"2 %d\\n\", n);\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tprintf(\"%lli \", a[i] * (n - 1));\n\t\t\ta[i] = a[i] * n;\n\t\t}\n\t\tprintf(\"\\n1 %d\\n\", n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tprintf(\"%lli \", -a[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9782345828295043, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "45ff93d7c8c6423677c0c3b5e6d14862", "bug_code_uid": "88ddf6e7ba6c6399c1b44bc29b030f56", "src_uid": "7eff98fbcf4e4a3284e2d2f98351fe4a", "apr_id": "5e79ec065a86e3bddc98533a5fefa454", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\nint main()\n{\n    int a[8], n,i;\n    scanf(\"%d\", &n);\n    char ch[10];\n    for(i=0;i<n+1;i++)\n    {gets(ch);\n        if(ch[0]=='p')\n           a[1]=1;\n        else if(ch[0]=='g')\n            a[2]=1;\n        else if(ch[0]=='b')\n            a[3]=1;\n        else if(ch[0]=='o')\n            a[4]=1;\n        else if(ch[0]=='r')\n            a[5]=1;\n        else\n            a[6]=1;\n    }\n    printf(\"%d\\n\", 6-n);\n    for(i=1;i<7;i++)\n        if(a[i]!=1)\n    {\n        if(i==1)\n            printf(\"Power\\n\");\n        else if(i==2)\n            printf(\"Time\\n\");\n        else if(i==3)\n            printf(\"Space\\n\");\n        else if(i==4)\n            printf(\"Soul\\n\");\n        else if(i==5)\n            printf(\"Reality\\n\");\n        else if(i==6)\n            printf(\"Mind\\n\");\n    }\n}\n", "fixed": "#include <stdio.h>\n#include<string.h>\nint main()\n{\n    int a[]={0,0,0,0,0,0,0,0}, n,i;\n    scanf(\"%d\", &n);\n    char ch[10];\n    for(i=0;i<n+1;i++)\n    {gets(ch);\n        if(ch[0]=='p')\n           a[1]=1;\n        else if(ch[0]=='g')\n            a[2]=1;\n        else if(ch[0]=='b')\n            a[3]=1;\n        else if(ch[0]=='o')\n            a[4]=1;\n        else if(ch[0]=='r')\n            a[5]=1;\n        else if(ch[0]=='y')\n            a[6]=1;\n    }\n    printf(\"%d\\n\", 6-n);\n    for(i=1;i<7;i++)\n        if(a[i]!=1)\n    {\n        if(i==1)\n            printf(\"Power\\n\");\n        else if(i==2)\n            printf(\"Time\\n\");\n        else if(i==3)\n            printf(\"Space\\n\");\n        else if(i==4)\n            printf(\"Soul\\n\");\n        else if(i==5)\n            printf(\"Reality\\n\");\n        else if(i==6)\n            printf(\"Mind\\n\");\n    }\n}\n"}
{"similarity_score": 0.9874055415617129, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "0fedef685dadf238f486caf7bc7fa804", "bug_code_uid": "b7343c8799dd9d8b58d5e75fa312510d", "src_uid": "d4bcc53b470e4beaa078d5ce3785c6cb", "apr_id": "0a1086aff8f24fa4dbf0bb955504262c", "difficulty": 800, "tags": ["brute force", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tint a,i,d,j,tmp,p,n;\r\n\tscanf(\"%d\",&a);\r\n\tint arr[1000];\r\n\tfor(i=0;i<a;i++)\r\n\t{\r\n\tjump2:\tif(i>a)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tn=0;\r\n\t\tp=1;\r\n\t\tscanf(\"%d\",&d);\r\n\t\tfor(j=0;j<d;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&arr[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<d-1;j++)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\ti++;\r\n\t\t\t\tgoto jump1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(j==d-1)\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tgoto jump2;\r\n\t\t}\r\n\t\tjump1:while(1)\r\n\t\t{\r\n\t\tif(p%2==0)\r\n\t\t{\r\n\t\t\tj=1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tj=0;\r\n\t\t}\r\n\t\tfor(;j<d-1;j+=2)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\ttmp=arr[j+1];\r\n\t\t\t\tarr[j+1]=arr[j];\r\n\t\t\t\tarr[j]=tmp;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tp++;\r\n\t\tfor(j=0;j<d-1;j++)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\tn++;\r\n\t\t\t\tgoto jump1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",p-1);\r\n\t\tbreak;\r\n\t}\r\n}\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tint a,i,d,j,tmp,p,n;\r\n\tscanf(\"%d\",&a);\r\n\tint arr[1000];\r\n\tfor(i=0;i<a;i++)\r\n\t{\r\n\tjump2:\tif(i>=a)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tn=0;\r\n\t\tp=1;\r\n\t\tscanf(\"%d\",&d);\r\n\t\tfor(j=0;j<d;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&arr[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<d-1;j++)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\tgoto jump1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(j==d-1)\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\ti++;\r\n\t\t\tgoto jump2;\r\n\t\t}\r\n\t\tjump1:while(1)\r\n\t\t{\r\n\t\tif(p%2==0)\r\n\t\t{\r\n\t\t\tj=1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tj=0;\r\n\t\t}\r\n\t\tfor(;j<d-1;j+=2)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\ttmp=arr[j+1];\r\n\t\t\t\tarr[j+1]=arr[j];\r\n\t\t\t\tarr[j]=tmp;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tp++;\r\n\t\tfor(j=0;j<d-1;j++)\r\n\t\t{\r\n\t\t\tif(arr[j]>arr[j+1])\r\n\t\t\t{\r\n\t\t\t\tn++;\r\n\t\t\t\tgoto jump1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",p-1);\r\n\t\tbreak;\r\n\t}\r\n}\r\n}"}
{"similarity_score": 0.2984126984126984, "equal_cnt": 24, "replace_cnt": 18, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "ee1a773cc339d0e992aa658546c888d0", "bug_code_uid": "c4018fb17e4fc555f1596ecd8e675479", "src_uid": "6e5b4d43e64645cf26d5eac31437b1a9", "apr_id": "46b762e007209788d97e23ad7cb180c7", "difficulty": 1300, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long t;\n\tscanf(\"%I64lld\",&t);\n\tlong long n;\n\tfor(int j=0;j<t;j++)\n\t{\n\tscanf(\"%I64lld\",&n);\n\tlong long a[100006];\n\ta[0]=0;\n\tlong long sum[100005]={0};\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%I64lld\",&a[i]);\n\t\tsum[i]=a[i]+sum[i-1];\n\t}\n\tlong long maxi[100006],max=sum[n];\n\tfor(int i=n;i>=0;i--)\n\t{\n\t\tif(sum[i]>max)max=sum[i];\n\t\tmaxi[i]=max;\n\t}\n\tmax=0;\n\tlong long count=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(maxi[i]-sum[i-1]>max)max=maxi[i]-a[i-1];\n\t}\n\tif(max==sum[n]-sum[0])\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(max==maxi[i]-sum[i-1])count++;\n\t\t}\n\t\tif(sum[n]==max&&count==1)\n\t\t\tprintf(\"YES\\n\");\n\t\telse if(sum[n]>max)printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\t}\n\telse\n\t{\n\tif(sum[n]>max)printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\t}\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long t;\n\tscanf(\"%I64lld\",&t);\n\tlong long n,a[100005],sum[100005],maxi[100005];\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tscanf(\"%I64lld\",&n);\n\t\ta[0]=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%I64lld\",&a[j]);\n\t\t\tsum[j]=0;\n\t\t}\n\t\tsum[0]=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tsum[j]=sum[j-1]+a[j];\n\t\t}\n\t\tlong long max1[100005],max2[100005],max=sum[n];\n\t\tfor(int j=n;j>=0;j--)\n\t\t{\n\t\t\tif(sum[j]>max)max=sum[j];\n\t\t\tmax1[j]=max;\n\t\t}\n\t\tmax=sum[n-1];\n\t\tfor(int j=n-1;j>=0;j--)\n\t\t{\n\t\t\tif(sum[j]>max)max=sum[j];\n\t\t\tmax2[j]=max;\n\t\t}\n\t\tmax=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(j==1)\n\t\t\t{\n\t\t\t\tif(max2[j]-sum[j-1]>max)\n\t\t\t\t\tmax=max2[j]-sum[j-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(max1[j]-sum[j-1]>max)\n\t\t\t\t\tmax=max1[j]-sum[j-1];\n\t\t\t}\n\t\t}\n\t\tif(sum[n]>max)printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n\n\t\t\n\n"}
{"similarity_score": 0.1010332950631458, "equal_cnt": 16, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "281e1b4203af8c13fe70e5fcd2cd0156", "bug_code_uid": "538f7f44abc21dce9fae739313560f7d", "src_uid": "6d5ecac49fe1320eef1391b6d5cf5f0d", "apr_id": "bb8d1af60bf2e84ceb658138aeceef7b", "difficulty": 1000, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nvoid quicksort(int a[], int first, int last)\r\n{\r\n    int i, j, pivot, temp;\r\n\r\n    if (first < last)\r\n    {\r\n        pivot = first;\r\n        i = first;\r\n        j = last;\r\n\r\n        while (i < j)\r\n        {\r\n            while (a[i] <= a[pivot] && i < last)\r\n                i++;\r\n            while (a[j] > a[pivot])\r\n                j--;\r\n            if (i < j)\r\n            {\r\n                temp = a[i];\r\n                a[i] = a[j];\r\n                a[j] = temp;\r\n            }\r\n        }\r\n\r\n        temp = a[pivot];\r\n        a[pivot] = a[j];\r\n        a[j] = temp;\r\n        quicksort(a, first, j - 1);\r\n        quicksort(a, j + 1, last);\r\n    }\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int a[n],i;\r\n        for ( i = 0; i < n;i++){\r\n            scanf(\"%d\", &a[i]);\r\n        }\r\n        quicksort(a, 0, n - 1);\r\n\r\n        for (i = 0; i < n / 2;i++){\r\n            printf(\"%d %d\\n\", a[n - i - 1], a[0]);\r\n        }\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int a[n],i,j=0;\r\n        for ( i = 0; i < n;i++){\r\n            scanf(\"%d\", &a[i]);\r\n        }\r\n        int min = a[0];\r\n        for (i = 0; i < n;i++){\r\n            if(a[i]<min){\r\n                min = a[i];\r\n            }\r\n        }\r\n\r\n        for (i = 0; ;i++)\r\n        {\r\n            if (a[i] != min)\r\n            {\r\n                printf(\"%d %d\\n\", a[i], min);\r\n                j++;\r\n                if(j==n/2){\r\n                    break;\r\n                }\r\n                }\r\n            }\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9986893840104849, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2eb2c3dab5ea406a6e37f791284c108c", "bug_code_uid": "3ddef6740ce81e47b7defcf955362363", "src_uid": "e0a3c678f6d1d89420c8162b0ddfcef7", "apr_id": "36787b5524a66a6c23b4d193da6d62e9", "difficulty": 1500, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\ntypedef long long ll;\r\n\r\nint main()\r\n{\r\n    int t; scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        ll n, a, b;\r\n        scanf(\"%I64d%I64d%I64d\", &n, &a, &b);\r\n\r\n        int bOK = 0;\r\n        if(b == 1)\r\n            bOK = 1;\r\n        else if(a == 1)\r\n        {\r\n            if((n-1) % b == 0)\r\n                bOK = 1;\r\n        }\r\n        else\r\n        {\r\n            ll const rem = n % b;\r\n            ll x = a;\r\n\r\n            while(x <= n)\r\n            {\r\n                if(x % b == rem)\r\n                {\r\n                    bOK = 1;\r\n                    break;\r\n                }\r\n\r\n                x *= a;\r\n            }\r\n        }\r\n\r\n        if(bOK)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\ntypedef long long ll;\r\n\r\nint main()\r\n{\r\n    int t; scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        ll n, a, b;\r\n        scanf(\"%I64d%I64d%I64d\", &n, &a, &b);\r\n\r\n        int bOK = 0;\r\n        if(b == 1)\r\n            bOK = 1;\r\n        else if(a == 1)\r\n        {\r\n            if((n-1) % b == 0)\r\n                bOK = 1;\r\n        }\r\n        else\r\n        {\r\n            ll const rem = n % b;\r\n            ll x = 1;\r\n\r\n            while(x <= n)\r\n            {\r\n                if(x % b == rem)\r\n                {\r\n                    bOK = 1;\r\n                    break;\r\n                }\r\n\r\n                x *= a;\r\n            }\r\n        }\r\n\r\n        if(bOK)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.9860805860805861, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5f0346bb46ee3e6b58739f2848d7aad0", "bug_code_uid": "1469748f37686f190151ac4452de24c5", "src_uid": "c212524cc1ad8e0332693e3cf644854b", "apr_id": "4cb74aeae7a0c690580a77bd20293886", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (int i = 0; i < n; i++)\r\n            scanf(\"%d\", &arr[i]);\r\n        int flag = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (arr[i] == i + 1)\r\n                continue;\r\n            else\r\n                flag = 1;\r\n        }\r\n        if (flag == 0)\r\n            printf(\"%d\\n\", 0);\r\n        else if (arr[0] == 1)\r\n            printf(\"%d\\n\", 1);\r\n        else if (arr[0] == n && arr[n - 1] == 1)\r\n            printf(\"%d\\n\", 3);\r\n        else\r\n            printf(\"%d\\n\", 2);\r\n    }\r\n}", "fixed": "\r\n#include <stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n];\r\n        for (int i = 0; i < n; i++)\r\n            scanf(\"%d\", &arr[i]);\r\n        int flag = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (arr[i] == i + 1)\r\n                continue;\r\n            else\r\n                flag = 1;\r\n        }\r\n        if (flag == 0)\r\n            printf(\"%d\\n\", 0);\r\n        else if (arr[0] == 1 || arr[n - 1] == n)\r\n            printf(\"%d\\n\", 1);\r\n        else if (arr[0] == n && arr[n - 1] == 1)\r\n            printf(\"%d\\n\", 3);\r\n        else\r\n            printf(\"%d\\n\", 2);\r\n    }\r\n}"}
{"similarity_score": 0.9989847715736041, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "026f61578bd1882bc50daa8055320cef", "bug_code_uid": "4c51d5818b727a60ee37211c9375183c", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "ddb004217b76dfab39f7d08c0e74a86b", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n    int n=0,i=0,d;\n    char ch[10000];\n    char c='a';\n    while(1){\n        scanf(\"%c\",&ch[i]);\n        if(ch[i]==' ')ch[i]='0';\n        if(ch[i]=='}'){\n                ch[i] = '\\0';\n                break;\n        }\n        i++;\n    }\n    d=strlen(ch);\n    for(c='a';c<'z';c++){\n        for(i=0;i<d;i++){\n            if(ch[i]==c){\n                n++;\n                break;\n            }\n        }\n    }\n    printf(\"%d\",n);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main ()\n{\n    int n=0,i=0,d;\n    char ch[10000];\n    char c='a';\n    while(1){\n        scanf(\"%c\",&ch[i]);\n        if(ch[i]==' ')ch[i]='0';\n        if(ch[i]=='}'){\n                ch[i] = '\\0';\n                break;\n        }\n        i++;\n    }\n    d=strlen(ch);\n    for(c='a';c<='z';c++){\n        for(i=0;i<d;i++){\n            if(ch[i]==c){\n                n++;\n                break;\n            }\n        }\n    }\n    printf(\"%d\",n);\n    return 0;\n}"}
{"similarity_score": 0.9959623149394348, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5890d3f6f75c5deb07dc049b0c53ff50", "bug_code_uid": "8031d44bc2e232ae865e257cafb969f4", "src_uid": "4553b327d7b9f090641590d6492c2c41", "apr_id": "2959432b4f24b831a73f91b1b3d4c91c", "difficulty": 800, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int i=0;\n  int dp[n], a[n];\nint ans=-1;\n  for(i=0;i<n;i++){\n    dp[i]=1;\n    scanf(\"%d\", &a[i]);\n    if (i==0) {\n      dp[i]=1; continue;\n    }\n\n    if(a[i]>a[i-1])\n      dp[i] += dp[i-1];\n    else\n      dp[i]=1;\n\n    ans = (ans > dp[i])?ans:dp[i];\n  }\nprintf(\"%d\\n\", ans);\n\n\n  return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int i=0;\n  int dp[n], a[n];\nint ans=1;\n  for(i=0;i<n;i++){\n    dp[i]=1;\n    scanf(\"%d\", &a[i]);\n    if (i==0) {\n      dp[i]=1; continue;\n    }\n\n    if(a[i]>a[i-1])\n      dp[i] += dp[i-1];\n    else\n      dp[i]=1;\n\n    ans = (ans > dp[i])?ans:dp[i];\n  }\n  printf(\"%d\\n\", ans);\n\n\n  return 0;\n}\n"}
{"similarity_score": 0.9243027888446215, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "aead89aeb9782a5fc3dde4ae359df81e", "bug_code_uid": "e995492b028008cec0822689e5b9fe17", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "de917c6dee4bea85042693e4315cb9f2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n    int c=0;\n    int s;\n    scanf(\"%d\",&s);\n    for(int i=1;i<=n;i++) {\n        int c,d;\n        scanf(\"%d%d\",&c,&d);\n        if((c-d)>=2) {\n            c++;\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main() {\n    int c=0;\n    int s;\n    scanf(\"%d\",&s);\n    for(int i=0;i<s;i++) {\n        int b,d;\n        scanf(\"%d%d\",&b,&d);\n        int x=(d-b);\n        if(x>=2) {\n            c++;\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}"}
{"similarity_score": 0.8263337116912599, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5fb3de0c93923c067ef431a845259117", "bug_code_uid": "fb43270989f768f42ce152492b7d82a3", "src_uid": "4d5457d9f053556c78c102f5c32f7542", "apr_id": "8e5924170ee3eec48db693a8f4db6d21", "difficulty": 800, "tags": ["binary search", "greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\ntypedef long long int ll;\r\nll cmpfunc (const void * a, const void * b) {\r\n   return ( *(ll*)b - *(ll*)a );\r\n}\r\n\r\nvoid me()\r\n{\r\n    \r\n    ll n,h;\r\n    scanf(\"%lld %lld\",&n,&h);\r\n    ll ak[n],m=0,mi=-1,m1=0,mi2=-1;\r\n    for(ll i=0;i<n;i++)\r\n   {\r\n       scanf(\"%lld\",&ak[i]);\r\n      if(ak[i]>m)\r\n      {\r\n          m=ak[i];\r\n          mi=i;\r\n      }\r\n   }\r\n    for(ll i=0;i<n;i++)\r\n   {\r\n       \r\n      if(ak[i]>m1&&i!=mi)\r\n      {\r\n          m1=ak[i];\r\n         \r\n      }\r\n   }\r\n    \r\n    ll co=0,fl=0;\r\n    \r\n    while(h>0)\r\n    {\r\n        if(fl==0)\r\n        {\r\n            h=h-m;\r\n            fl=1;\r\n        }\r\n        else\r\n        {\r\n            h=h-m1;\r\n            fl=0;\r\n        }\r\n        co++;\r\n    }\r\n    \r\n    printf(\"%lld\\n\",co);\r\n    \r\n}\r\nint main()\r\n{\r\n   ll n;\r\n   scanf(\"%lld\",&n);\r\n   for(ll i=0;i<n;i++)\r\n   me();\r\n\r\n    return 0;\r\n}\r\n", "fixed": "\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\ntypedef long long int ll;\r\nll cmpfunc (const void * a, const void * b) {\r\n   return ( *(ll*)b - *(ll*)a );\r\n}\r\n\r\nvoid me()\r\n{\r\n    \r\n    ll n,h;\r\n    scanf(\"%lld %lld\",&n,&h);\r\n    ll ak[n],m=0,mi=-1,m1=0,mi2=-1;\r\n    for(ll i=0;i<n;i++)\r\n   {\r\n       scanf(\"%lld\",&ak[i]);\r\n      if(ak[i]>m)\r\n      {\r\n          m=ak[i];\r\n          mi=i;\r\n      }\r\n   }\r\n    for(ll i=0;i<n;i++)\r\n   {\r\n       \r\n      if(ak[i]>m1&&i!=mi)\r\n      {\r\n          m1=ak[i];\r\n         \r\n      }\r\n   }\r\n    \r\n    ll co=0,fl=0;\r\n    \r\n    ll c=(h/(m+m1));\r\n    ll ans=2*c;\r\n    ll t=m+m1;\r\n    if(h%t!=0)\r\n    ans++;\r\n    if(h>((c+1)*m+c*m1))\r\n    ans++;\r\n   \r\n    \r\n    printf(\"%lld\\n\",ans);\r\n    \r\n}\r\nint main()\r\n{\r\n   ll n;\r\n   scanf(\"%lld\",&n);\r\n   for(ll i=0;i<n;i++)\r\n   me();\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8017334777898159, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9927e707534a46daa7b870fa2debf484", "bug_code_uid": "ef435b62e29c4ebf354a8d9a3d368586", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "8de9aa9a2003004356511e5112a4b249", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n  int m,n,i,j,c,d,sum;\n  int a[1000],b[1000];\n  while(scanf(\"%d\",&n)!=EOF)\n  {\n      c=0;\n   for(i=0;i<n;i++)\n   {\n      scanf(\"%d\",&a[i]);\n   }\n   for(i=0;i<n;i++)\n   {\n     if(a[i]%2==0)\n      b[i]=2;\n     else\n      b[i]=1;\n   }\n   for(i=0;i<n;i++)\n   {\n     if(b[i]!=b[i+1]&&b[i]!=b[i-1])\n     break;\n   }\n   printf(\"%d\\n\",i+1);\n  }\n\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n  int m,n,i,j,c,d,sum;\n  int a[1000],b[1000];\n  while(scanf(\"%d\",&n)!=EOF)\n  {\n      c=0;\n   for(i=0;i<n;i++)\n   {\n      scanf(\"%d\",&a[i]);\n   }\n   for(i=0;i<n;i++)\n   {\n     if(a[i]%2==0)\n      b[i]=2;\n     else\n      b[i]=1;\n   }\n   for(i=0;i<n;i++)\n   {\n     if(b[i]==2)\n     c++;\n   }\n   if(c==1)\n   {\n     for(i=0;i<n;i++)\n   {\n     if(b[i]==2)\n     break;\n   }\n   }\n   else\n   {\n       for(i=0;i<n;i++)\n   {\n     if(b[i]!=2)\n     break;\n   }\n   }\n   printf(\"%d\\n\",i+1);\n  }\n\n}\n"}
{"similarity_score": 0.9615023474178404, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "1c25673daa0fec4999066a7ec09f6f4a", "bug_code_uid": "b7fed75fec0af085efb39da48f91bcb9", "src_uid": "d79166497eb61d81fdfa4ef80ec1c8e8", "apr_id": "3dbf6f2460686b1de340b7590e5116fd", "difficulty": 1200, "tags": ["sortings", "binary search", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ \n  int i,j,n;\n  long long int l;\n  scanf(\"%d %lld\",&n,&l);\n  long long int arr[n],diff=0;\n  for(i=0;i<n;i++)\n    scanf(\"%lld\",&arr[i]);\n  for(i=0;i<n;i++)\n  {\n    for(j=i+1;j<n;j++)\n    {\n      if(arr[i]>arr[j])\n      {\n        int temp=arr[i];\n        arr[i]=arr[j];\n        arr[j]=temp;\n      }\n    }\n    if(i>0&&arr[i]-arr[i-1]>diff)\n      diff=arr[i]-arr[i-1];\n  }\n  long float d=(long float)diff/2;\n  if(arr[0]>d)\n    d=arr[0];\n  if(l-arr[n-1]>d)\n    d=l-arr[n-1];\n  printf(\"%lf\",d);\n  return 0;    \n}", "fixed": "#include<stdio.h>\nint main()\n{ \n  int i,j,n;\n  long long int l;\n  scanf(\"%d %lld\",&n,&l);\n  long long int arr[n],diff=0;\n  for(i=0;i<n;i++)\n    scanf(\"%lld\",&arr[i]);\n  for(i=0;i<n;i++)\n  {\n    for(j=i+1;j<n;j++)\n    {\n      if(arr[i]>arr[j])\n      {\n        int temp=arr[i];\n        arr[i]=arr[j];\n        arr[j]=temp;\n      }\n    }\n    if(i>0&&arr[i]-arr[i-1]>diff)\n      diff=arr[i]-arr[i-1];\n  }\n  double d=(double)diff/2;\n  if(arr[0]>d)\n    d=arr[0];\n  if(l-arr[n-1]>d)\n    d=l-arr[n-1];\n  printf(\"%f\",d);\n  return 0;    \n}"}
{"similarity_score": 0.5931445603576752, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "ed3805d8eb32f759bd07f15acfdc2e90", "bug_code_uid": "29d87e738b1803723389bea709bbb05d", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "8529857e820b4e6b78a43f2a78531f84", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 1; i <= t; i++) {\r\n        long long n, m, x;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        long long number = x / m + x % m;\r\n\r\n        printf(\"%lld\",number);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int k = 1; k <= t; k++) {\r\n        long long n, m, x;\r\n        scanf(\"%lld %lld %lld\", &n, &m, &x);\r\n\r\n        int r = x % n;\r\n        int i = r == 0 ? n : r;\r\n        int j = r == 0 ? x / n : x / n + 1;\r\n        long long res = m * (i - 1) + j;\r\n\r\n        printf(\"%lld\\n\", res);\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.27802690582959644, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "c218a12f14fb50d9a141dea72d9b1884", "bug_code_uid": "f1690842e5801636c8854658dfc95608", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "da66bf07c235db371db8e0629dfa2e7a", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n;\n        scanf(\"%d\",&n);\n        if(n%2!=0){\n            printf(\"%d\",-1);\n            return 0;\n        }\n      else {\n        for(i=n;i>0;i--)\n           printf(\"%d \",i);\n        }\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,i,j;\n    long long int cnt1=0,cnt2=0;\n    scanf(\"%d\",&n);\n    int a[n],c[n+1];\n    for (i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n        c[a[i]]=i+1;\n\n    }\n            scanf(\"%d\",&m);\n    int b[m];\n    for (i=0;i<m;i++)\n        scanf(\"%d\",&b[i]);\n     for(i=0;i<m;i++){\n        cnt1=cnt1+c[b[i]];\n        cnt2=cnt2+n-c[b[i]]+1;\n     }\n\n    printf(\"%lld %lld\",cnt1,cnt2);\n    return 0;\n}\n"}
{"similarity_score": 0.30754352030947774, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "632587fcc5700bba458d75b5b9c3c840", "bug_code_uid": "a8af8d9c09968a95ea5eb1f863fcfc4c", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "48f2729c01b1b18f6811840d8f14f58e", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n, flag=0;\n\t\tscanf(\"%d\", &n);\n\t\tif (n%2==0) {\n\t\t\tn/=2;\n\t\t\tfor (int i=3;i*i<=n;i++) {\n\t\t\t\tif (n%i==0&&i!=n/i) {\n\t\t\t\t\tprintf(\"YES\\n%d %d %d\\n\", 2, i, n/i);\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!flag) printf(\"NO\\n\");\n\t\t}\n\t\telse if (n%3==0) {\n\t\t\tn/=3;\n\t\t\tfor (int i=4;i*i<=n;i++) {\n\t\t\t\tif (n%i==0&&i!=n/i) {\n\t\t\t\t\tprintf(\"YES\\n%d %d %d\\n\", 3, i, n/i);\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!flag) printf(\"NO\\n\");\n\t\t}\n\t\telse printf(\"NO\\n\");\n\t}\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tint f=0, a, b, c=-1;\n\t\tfor (int i=2;i*i<=n;i++) {\n\t\t\tif (n%i==0) {\n\t\t\t\ta=i;\n\t\t\t\tint temp=n/i;\n\t\t\t\tfor (int j=i+1;j*j<=n;j++) {\n\t\t\t\t\tif (temp%j==0) {\n\t\t\t\t\t\tb=j;\n\t\t\t\t\t\tif (n%(a*b)==0) {\n\t\t\t\t\t\t\tc=n/(a*b);\n\t\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (c!=-1) break;\n\t\t}\n\t\tif (c!=-1) {\n\t\t\tif (a==b||a==c||b==c) printf(\"NO\\n\");\n\t\t\telse printf(\"YES\\n%d %d %d\\n\", a, b, c);\n\t\t}\n\t\telse printf(\"NO\\n\");\n\t}\n}\n"}
{"similarity_score": 0.44808743169398907, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "35062c507272e6e923ccdef754c7c31e", "bug_code_uid": "31cad94475e59a77d7c2c71ce1666c7f", "src_uid": "288f147bb8a3c30b0bb712a01c65109b", "apr_id": "178794f66d8cdf842858dcb47c57a8b5", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\r\n    int n,a[1000],i,j,m;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n       scanf(\"%d\",&m);\r\n       int a[m],count=0;\r\n       for(i=0;i<m;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        if(m==1)\r\n        {\r\n            printf(\"YES\\n\");\r\n            continue;\r\n        }\r\n       int flag=0;\r\n       for(i=0;i<m;i++)\r\n       {\r\n           if(a[i]==a[0])\r\n            count++;\r\n       }\r\n       if(count==m)\r\n        printf(\"NO\\n\");\r\n       else\r\n        printf(\"YES\");\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\r\n    int n,a[1000],i,j,m;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        int a[m],count=0;\r\n        for(i=0; i<m; i++)\r\n            scanf(\"%d\",&a[i]);\r\n        for(i=0; i<m-1; i++)\r\n        {\r\n            for(j=0; j<m-1-i; j++)\r\n            {\r\n                if(a[j]>a[j+1])\r\n                {\r\n                    int temp=a[j];\r\n                    a[j]=a[j+1];\r\n                    a[j+1]=temp;\r\n                }\r\n\r\n            }\r\n        }\r\n        for(i=0; i<m; i++)\r\n        {\r\n           if(a[i]==a[i+1])\r\n           count++;\r\n        }\r\n       if(count>0)\r\n       {\r\n           printf(\"NO\\n\");\r\n       }\r\n       else\r\n        printf(\"YES\\n\");\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.4198617221873036, "equal_cnt": 25, "replace_cnt": 16, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "46cc65491b781d3cd40f9b4f8d8c93e4", "bug_code_uid": "a00c7403df33bbd85f1a432ec455d624", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "612cad2dd3e67ef64b04a941a61a1004", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<ctype.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int n , m ;\n    while(scanf(\"%d%d\",&n,&m)!=EOF)\n        {\n            int a[20] , i ;\n            for(i = 0 ; i<n;i++)\n                scanf(\"%d\",&a[i]);\n            for(i = 0 ; i < n-1 ; i++)\n            {\n                int j , min = 0 , k ;\n                for(j = 0 ; j < n-1-i ; j++)\n                if(a[j]>a[j+1])\n                {\n                    k = a[j] ;\n                    a[j] = a[j+1] ;\n                    a[j+1] = k ;\n                }\n                for(i= 0 ; i< m ;i++)\n                    min += a[i] ;\n                printf(\"%d\\n\",fabs(min)) ;\n\n\n            }\n        }\n        return 0 ;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n,m,p=0,q,i,j,t;\n    float a[100],sum;\n    while(scanf(\"%d%d\",&n,&m)!=EOF)\n    {\n        sum=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%f\",&a[i]);\n        }\n        for(i=0;i<n-1;i++)\n        {\n            for(j=0;j<n-1-i;j++)\n            {\n                if(a[j]>a[j+1])\n                {\n                    t=a[j];\n                    a[j]=a[j+1];\n                    a[j+1]=t;\n                }\n            }\n        }\n       for(i=0;i<n;i++)\n       {\n            a[i]=0-a[i];\n       }\n       for(i=0;i<n;i++)\n       {\n           if(a[i]>0)\n            p++;\n       }\n       if(p>=m)\n       {\n           q=m;\n       }\n       if(p<m)\n       {\n           q=p;\n       }\n       for(i=0;i<q;i++)\n       {\n           sum=sum+a[i];\n       }\n       printf(\"%.0f\\n\",sum);\n    }\n    return 0;\n}"}
{"similarity_score": 0.2684869169510808, "equal_cnt": 18, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "f42547d1f44c61e78c976ce7241d3371", "bug_code_uid": "105f0baa3bd199102d2a4cdf6d9822b0", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "79d558fc1e49c7fd61e2cd0ee05ad391", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n \nint main()\n{\n\tint a[50],n,i,j,temp,t;\n\t\n\tscanf(\"%d\",&n);\n\t\n\t\n\tfor(i=0;i<n;++i)\n\t\tscanf(\"%d\",&a[i]);\n\t\t\n\tfor(i=1;i<n;++i)\n\t\tfor(j=i+1;j<(n-i);++j)\n\t\t\tif(a[j]>a[j+1])\n\t\t\t{\n\t\t\t\ttemp=a[j];\n\t\t\t\ta[j]=a[j+1];\n\t\t\t\ta[j+1]=temp;\n\t\t\t}\n\t\t\t\n t=(n-1)/2;\n printf(\"%d\",a[t]);\n\treturn 0;\n}\n", "fixed": " #include <stdio.h>\n    int main()\n    {\n \n        int i, j, a, n, number[1000],t;\n        \n        scanf(\"%d\", &n);\n \n       \n        for (i = 0; i < n; ++i)\n            scanf(\"%d\", &number[i]);\n \n        for (i = 0; i < n; ++i) \n        {\n \n            for (j = i + 1; j < n; ++j)\n            {\n \n                if (number[i] > number[j]) \n                {\n \n                    a =  number[i];\n                    number[i] = number[j];\n                    number[j] = a;\n \n                }\n \n            }\n \n        }\n \n        \n t=(n-1)/2;\n printf(\"%d\",number[t]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.4720121028744327, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "0a2c07cecf9ef8731143918e4c026e4e", "bug_code_uid": "d9d35644a1c1a3e59b9a58ce6bc6ee9f", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "211d675c07ff30048ec27a2e0f91cda4", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    char a[1005];\n    int b[1005];\n    b[1]=1;\n    b[2]=1;\n    scanf(\"%d\",&n);\n    for(i=3;i<n;i++)\n    {\n        b[i]=b[i-1]+b[i-2];\n    }\n    for(i=1;i<=n;i++)\n        a[b[i]]='O';\n    for(i=1;i<=n;i++)\n        if(a[i]=='O')\n            printf(\"%c\",'O');\n        else\n            printf(\"%c\",'o');\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j=0;\n    scanf(\"%d\",&n);\n    int f[15]={1,2,3,5,8,13,21,34,55,89,144,233,377,610,987};\n    for(i=1;i<=n;i++)\n    {\n         if(f[j]==i)\n        {\n            printf(\"O\");\n            j++;\n        }\n        else\n            printf(\"o\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.16260162601626016, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "2e22cf28aed9cb37db0435d44c6ec00c", "bug_code_uid": "a5ab8114b32a56c9ee935e0764e9ac55", "src_uid": "f48ddaf1e1db5073d74a2aa318b46704", "apr_id": "23d88a1ae24831d3e596a6408906343e", "difficulty": 1200, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint i, j, a[1005], n, nrotate=0, cnt=0, tem;;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tfor (i = 0;i < n; i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif (i==0 && a[i]!=0) nrotate=n-a[i];\n\t}\n\t\n\tfor (i=0;i<n;i++){\n\t\t\n\t\t//clock_wise\n\t\tif (i%2==0){\n\t\t\ttem=a[i]+nrotate;\n\t\t\ta[i]=tem%n;\n\t\t}\n\t\t\n\t\telse{\n\t\t\ttem=a[i]-nrotate;\n\t\t\tif (tem<0){\n\t\t\t\ta[i]=n+tem;\n\t\t\t}\n\t\t\telse a[i]=tem;\n\t\t}\n\t\t\n\t\tif (a[i]==i){\n\t\t\tcnt++;\n\t\t}\n\t}\n\tif (cnt==n) printf(\"Yes\\n\");\n\telse printf(\"No\\n\");\n\t\n/*\tfor (i=0;i<n;i++){\n\t\tprintf(\"%d \",a[i]);\n\t}\n\t*/\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tint i, j, n, cnt=0, ar[101],max=0;\n\tchar a[105][105];\n\t\n\tscanf(\"%d \",&n);\n\t\n\tfor (i = 0; i < n; i++){\n\t\tgets(a[i]);\n\t}\n\tfor ( i = 0; i < n; i++){\n\t\t\n\t\tcnt=0;\n\t\t\n\t\tif (strcmp(a[i],\"a\")){\n\t\t\t\n\t\t\tfor (j=i+1;j<n;j++){\n\t\t\t\t\n\t\t\t\tif (!strcmp(a[i],a[j])){\n\t\t\t\t\tcnt++;\n\t\t\t\t\tstrcpy(a[j],\"a\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (max<cnt) max=cnt;\n\t}\n\t\n\tif (max==0) printf(\"1\\n\");\n\telse printf(\"%d\\n\", max+1);\n\t\n\treturn 0;\n}\n\t\t"}
{"similarity_score": 0.6770670826833073, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "ad14da6f4c1f076f0f6070e16a80fb01", "bug_code_uid": "ac8dab43e5e4eeffb10b9532b1e2474b", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "be184de7cd779449722823dcff18af4b", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/* bai 588 A*/\n\n#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\", &n);\n\tint a[n],b[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d %d\", &a[i], &b[i]);\n\t\t}\n\tint sum=0;\n\tint min=b[0],index;\n\tfor(int i=0;i<n;i++){\n\t\tif(b[i]<min){\n\t\t\tmin=b[i];\n\t\t\tindex=i;\n\t\t}\n\t}\n\tfor(int i=0;i<index;i++){\n\t\tsum+=a[i]*b[i];\n\t}\n\tint kg=0;\n\tfor(int i=index;i<n;i++){\n\t\tkg+=a[i];\n\t}\n\tsum+=kg*b[index];\n\tprintf(\"%d\", sum);\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n],b[n];\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t}\n\tint sum=0,index,min=1e9;\n\tfor(int i=0;i<n;i++){\n\t\tif(b[i]<min){\n\t\t\tmin=b[i];\n\t\t}\n\t\tsum+=min*a[i];\n\t}\n\tprintf(\"%d\", sum);\n}"}
{"similarity_score": 0.9781453041937389, "equal_cnt": 8, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "e9048804e63dfa1a60facb90c7ad3fc2", "bug_code_uid": "6def63bbc54b3e4f59336e3d26312671", "src_uid": "edf394051c6b35f593abd4c34b091eae", "apr_id": "35168667e3460b0d25a0566decf5dd61", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n     int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int v = 0,x,y,a,b,d;\n        scanf(\"%d %d\",&x,&y);\n        scanf(\"%d %d\",&a,&b);\n\n        if((x>0 && y>0) || (x<0 && y<0))\n        {\n            if((a+a)<=b)\n            {\n                v = v + (x+y)*a;\n            }\n            else\n            {\n                if(abs(x)<=abs(y))\n                {\n                    v = v + abs(x)*b;\n                    d = abs(x-y);\n                    v = v + d*a;\n                }\n                else\n                {\n                    v = v + abs(y)*b;\n                    d = abs(x-y);\n                    v = v + d*a;\n                }\n\n            }\n        }\n        else\n        {\n            v = v + abs(x)*a;\n            v = v + abs(y)*a;\n        }\n        printf(\"%d\\n\",v);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n     int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long int v = 0,x,y,a,b,d;\n        scanf(\"%lld %lld\",&x,&y);\n        scanf(\"%lld %lld\",&a,&b);\n\n        if((x>0 && y>0) || (x<0 && y<0))\n        {\n            if((a+a)<=b)\n            {\n                v = v + (x+y)*a;\n            }\n            else\n            {\n                if(abs(x)<=abs(y))\n                {\n                    v = v + abs(x)*b;\n                    d = abs(x-y);\n                    v = v + d*a;\n                }\n                else\n                {\n                    v = v + abs(y)*b;\n                    d = abs(x-y);\n                    v = v + d*a;\n                }\n\n            }\n        }\n        else\n        {\n            v = v + abs(x)*a;\n            v = v + abs(y)*a;\n        }\n        printf(\"%lld\\n\",v);\n    }\n}\n"}
{"similarity_score": 0.974903474903475, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6474ad103676991387a04f8a1fe8f682", "bug_code_uid": "4a930efeef0fcc0c2c039786b02329fd", "src_uid": "159b9c743d6d8792548645b9f7be2753", "apr_id": "2ca0a01196a050db518c281287d2b5a6", "difficulty": 800, "tags": ["brute force", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,max=-1000000001,sum=0;\r\n        double avg=0.0;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n            if(arr[i] > max){\r\n                max = arr[i];\r\n            }\r\n            sum += arr[i];\r\n        }\r\n        sum = sum - max;\r\n        avg = (sum*1.0)/(n-1) + (max*1.0);\r\n        printf(\"%0.9f\\n\",avg);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,max=-1000000001;\r\n        long long int sum=0;\r\n        double avg=0.0;\r\n        scanf(\"%d\",&n);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n            if(arr[i] > max){\r\n                max = arr[i];\r\n            }\r\n            sum += arr[i];\r\n        }\r\n        sum = sum - max;\r\n        avg = (sum*1.0)/(n-1) + (max*1.0);\r\n        printf(\"%0.9f\\n\",avg);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8544423440453687, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "789ce2797a3978277e9cbbd1185a6e87", "bug_code_uid": "d5481223f63b894515099d7c58d5d3dc", "src_uid": "94a38067fc8dd8619fa6e5873ca60220", "apr_id": "591f767f13770e17904f0a7f8ff46141", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<conio.h>\nint main()\n{\n    int i,n,flag=0,k,j;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(k=0;k<n;k++){\n        for(j=0;j<n&&j!=k;j++){\n            for(i=0;i<n&&i!=k&&i!=j;i++){\n                if(a[i]+a[j]==a[k]){flag=1;break;}\n            }\n            if(flag)break;\n        }\n        if(flag)break;\n\n\n    }\n    if(flag)printf(\"%d %d %d\",k+1,i+1,j+1);\n    else printf(\"-1\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stdlib.h>\n#include<conio.h>\nint main()\n{\n    int i,n,flag=0,k,j;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(k=0;k<n;k++){\n        for(j=0;j<n;j++){\n            for(i=0;i<n;i++){\n                if(a[i]+a[j]==a[k]&&i!=j&&i!=k&&j!=k){flag=1;break;}\n            }\n            if(flag)break;\n        }\n        if(flag)break;\n\n\n    }\n    if(flag)printf(\"%d %d %d\",k+1,i+1,j+1);\n    else printf(\"-1\");\n    return 0;\n}\n"}
{"similarity_score": 0.9556451612903226, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "45afc2e0783aa23c279ae3e8ecf07979", "bug_code_uid": "c82f17d5ba5efbdf191c0b872f0065aa", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "f98ae45f0ee9afd9a131b639e6ec93f3", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <stdlib.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int t,i,j,n,flag=0,s1=0,s2=0;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n        scanf(\"%ld\",&n);\n        s1=pow(2,n);\n        i=1;\n        while(i<=(n/2)-1)\n        {\n            s1=s1+pow(2,i);\n            i++;\n        }\n        while(i<=n-1)\n        {\n            s2=s2+pow(2,i);\n            i++;\n        }\n        s1=abs(s1-s2);\n        printf(\"%d\\n\",s1);\n    }\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include <stdlib.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n    int t,i,j,n,flag=0,s1=0,s2=0;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n        s1=0;\n        s2=0;\n        scanf(\"%d\",&n);\n        s1=pow(2,n);\n        i=1;\n        while(i<=(n/2)-1)\n        {\n            s1=s1+pow(2,i);\n            i++;\n        }\n        i=n/2;\n        while(i<=n-1)\n        {\n            s2=s2+pow(2,i);\n            i++;\n        }\n        s1=abs(s1-s2);\n        printf(\"%d\\n\",s1);\n    }\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9994079336885732, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d681f49095ddab42ebd7b8baba832744", "bug_code_uid": "a4ffbcfdf93d4b8a820d8f4fd464b4d3", "src_uid": "49c47ebfd710a3733ce7ecb3a3c134a7", "apr_id": "0c1db6bd94c8bbc0c1cbc6e841886262", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int small, large, wsmall, n ,m;\n    int arr[101] = {0}, brr[101] = {0}, i, j;\n    scanf(\"%d %d\", &n, &m);\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &j);\n        arr[j]++;\n    }\n    for(i=0; i<m; i++){\n        scanf(\"%d\", &j);\n        brr[j]++;\n    }\n    for(i=0; i<101; i++){\n        if(arr[i]){\n            small = i;\n            break;\n        }\n    }\n    for(i=100; i>=0; i--){\n        if(arr[i]){\n            large = i;\n            break;\n        }\n    }\n    for(i=0; i<101; i++){\n        if(brr[i]){\n            wsmall = i;\n            break;\n        }\n    }\n   if(large > wsmall || (2 * small) >= wsmall){\n        printf(\"-1\");\n    }\n    else{\n        if(large > (2 * small)){\n            printf(\"%d\", large);\n        }\n        else{\n            printf(\"%d\", (2 * small));\n        }\n    }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int small, large, wsmall, n ,m;\n    int arr[101] = {0}, brr[101] = {0}, i, j;\n    scanf(\"%d %d\", &n, &m);\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &j);\n        arr[j]++;\n    }\n    for(i=0; i<m; i++){\n        scanf(\"%d\", &j);\n        brr[j]++;\n    }\n    for(i=0; i<101; i++){\n        if(arr[i]){\n            small = i;\n            break;\n        }\n    }\n    for(i=100; i>=0; i--){\n        if(arr[i]){\n            large = i;\n            break;\n        }\n    }\n    for(i=0; i<101; i++){\n        if(brr[i]){\n            wsmall = i;\n            break;\n        }\n    }\n   if(large >= wsmall || (2 * small) >= wsmall){\n        printf(\"-1\");\n    }\n    else{\n        if(large > (2 * small)){\n            printf(\"%d\", large);\n        }\n        else{\n            printf(\"%d\", (2 * small));\n        }\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.6576271186440678, "equal_cnt": 12, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 9, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "018658ad95998fc56cccc3d1bc3b60fd", "bug_code_uid": "e7f148a5b8d84642a5bff388aa1df8ad", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "f0b14261bd1cb45f14d2fb4b5a93323d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i;\r\n    scanf(\"%d\",&n);\r\n    printf(\"%d %d\",n-10,n-5);\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int n,i,m;\r\n    scanf(\"%lld\",&n);\r\n    while(n>0){\r\n        scanf(\"%lld\",&m);\r\n        printf(\"%lld %lld\\n\",-(m-1),m);\r\n        n--;\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9985486211901307, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8bbabe9369c2ecde1313760338880a7c", "bug_code_uid": "da43719433964f234659b7e1dbcefd38", "src_uid": "3c984366bba580993d1694d27982a773", "apr_id": "5669222eb112bdfba3814953bad23096", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "        #include<stdio.h>\n        int main()\n        { int a[1000][4],b[1000],sum=0,i,j,temp,p,n,k;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n            { for (j=0;j<4;j++)\n              { scanf(\"%d\",&a[i][j]);}}\n        for(i=0;i<n;i++)\n        { sum=0;\n        for(j=0;j<4;j++)\n          { sum=sum+a[i][j];}\n          b[i]=sum;}\n        k=b[0];\n        for (i=0;i<n;i++)\n          { for(j=0;j<n-i-1;j++)\n            { if(b[j]>b[j+1])\n                { temp=b[j]; \n                  b[j]=b[j+1];\n                  b[j+1]=temp;}}}\n        for(i=0;i<n;i++)\n        { if(b[i]==k)\n         { p=i;\n           break;}}\n        p=p+1;\n        printf(\"%d\",p);\n        return(0);\n        }", "fixed": "        #include<stdio.h>\n        int main()\n        { int a[1000][4],b[1000],sum=0,i,j,temp,p,n,k;\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n            { for (j=0;j<4;j++)\n              { scanf(\"%d\",&a[i][j]);}}\n        for(i=0;i<n;i++)\n        { sum=0;\n        for(j=0;j<4;j++)\n          { sum=sum+a[i][j];}\n          b[i]=sum;}\n        k=b[0];\n        for (i=0;i<n;i++)\n          { for(j=0;j<n-i-1;j++)\n            { if(b[j]<b[j+1])\n                { temp=b[j]; \n                  b[j]=b[j+1];\n                  b[j+1]=temp;}}}\n        for(i=0;i<n;i++)\n        { if(b[i]==k)\n         { p=i;\n           break;}}\n        p=p+1;\n        printf(\"%d\",p);\n        return(0);\n        }"}
{"similarity_score": 0.9942196531791907, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b1669953cc3e98fb9e342b0363eb5a48", "bug_code_uid": "ccb5317cf2e57f7d00485166a41a70d4", "src_uid": "5e449867d9fcecc84333b81eac9b5d92", "apr_id": "bf962bb6d7279c3abcc09c25c14fcfd5", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tint i = 0;\n\tint k;\n\tint a[3001] = { 0 };\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &k);\n\t\ta[k] = 1;\n\t}\n\tfor (i =1; i < 3001; i++)\n\t\tif (a[i] == 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", i);\n\t\t\tbreak;\n\t\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n;\n\tint i = 0;\n\tint k;\n\tint a[3005] = { 0 };\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &k);\n\t\ta[k] = 1;\n\t}\n\tfor (i =1; i <= 3001; i++)\n\t\tif (a[i] == 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", i);\n\t\t\tbreak;\n\t\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9867986798679867, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0a88232d380c716a1aca159c1cf68084", "bug_code_uid": "66f77b04bea8ef791e20ed35aa3d84bc", "src_uid": "f48ddaf1e1db5073d74a2aa318b46704", "apr_id": "afbb4b757563e6b05f901641ed444634", "difficulty": 1200, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,count,max=0,i,j;\n\tchar c[101][101];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",c[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tcount=0;\n\t\tfor(j=0;j<n;j++)\n\t\t\tif(strcmp(c[i],c[j])==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\tif(max<count)\n\t\t\tmax=count;\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,count,max=0,i,j;\n\tchar c[101][101];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",c[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tcount=0;\n\t\tfor(j=0;j<n;j++)\n\t\t\tif(strcmp(c[i],c[j])==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\tif(max<count)\n\t\t\tmax=count;\n\t}\n\tprintf(\"%d\",max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9374149659863945, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "efba44a78102c7cda64dcc7ac9a5cf7d", "bug_code_uid": "f3fcf94ea1c23a237da4f7d797cf847f", "src_uid": "ec09b2df4ed3abbca4c47f48f12010ca", "apr_id": "0e3280fd4acb9c06d6cede558121add8", "difficulty": 800, "tags": ["sortings", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k,am,bm,a[101],b[101],d,l;\n\n    scanf(\"%d\",&am);\n    for(i=0;i<am;i++){\n        scanf(\"%d\", &a[i]);\n    }\n\n    scanf(\"%d\", &bm);\n    for(i=0;i<bm;i++){\n        scanf(\"%d\", &b[i]);\n    }\n\n    for(k=0;k<am;k++){\n        for(l=0;l<bn;l++){\n        d = a[k] + b[l];\n        int flag1 = 0;\n        for(i=0;i<am;i++){\n            if(d==a[i]){\n                flag1 = 1;\n                break;\n            }\n         }\n         for(j=0;j<bn;j++){\n            if(d==b[j]){\n                flag1 = 1;\n                break;\n            }\n         }\n\n         if(flag1==0){\n            printf(\"%d %d\\n\",a[k],b[l]);\n            break;\n         }\n      }\n      if(flag1==0) break;\n    }\n\n  return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,k,am,bm,flag1,a[101],b[101],d,l;\n\n    scanf(\"%d\",&am);\n    for(i=0;i<am;i++){\n        scanf(\"%d\", &a[i]);\n    }\n\n    scanf(\"%d\", &bm);\n    for(i=0;i<bm;i++){\n        scanf(\"%d\", &b[i]);\n    }\n\n    for(k=0;k<am;k++){\n        for(l=0;l<bm;l++){\n        d = a[k] + b[l];\n        flag1 = 0;\n        for(i=0;i<am;i++){\n            if(d==a[i]){\n                flag1 = 1;\n                break;\n            }\n         }\n         for(j=0;j<bm;j++){\n            if(d==b[j]){\n                flag1 = 1;\n                break;\n            }\n         }\n\n         if(flag1==0){\n            printf(\"%d %d\\n\",a[k],b[l]);\n            break;\n         }\n      }\n      if(flag1==0) break;\n    }\n\n  return 0;\n}\n\n"}
{"similarity_score": 0.9474885844748858, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "89ec5077327a636c083ed86f20ed81b9", "bug_code_uid": "31295acc377291943f4dbe278610c2d4", "src_uid": "67e51db4d96b9f7996aea73cbdba3584", "apr_id": "05b4c13bbb626e230a016145cd814157", "difficulty": 2200, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nmain(){\n\tchar s[] = \"Stannis\";\n\tchar d[] = \"Daenerys\";\n\tchar* w;\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint o=0,e=0,a,i;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a);\n\t\tif(a%2==0){e++;}\n\t\telse{o++;}\n\t}\n\tint td,ts,t=n-k;\n\ttd = t/2, ts=td-t;\n\tif(o>td){\n\t\tif(t%2==0){w=d;}\n\t\telse{w=s;}\n\t}\n\tif(e<=td){\n\t\tif(k%2==0){w=d;}\n\t\telse{w=s;}\n\t\tif(e=ts){\n\t\t\tif(k%2==1){w=s;}\n\t\t}\n\t}\n\tif(o<=td){\n\t\tw=d;\n\t}\n\tprintf(\"%s\",w);\n}\n", "fixed": "#include <stdio.h>\n\nmain(){\n\tchar s[] = \"Stannis\";\n\tchar d[] = \"Daenerys\";\n\tchar* w;\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint o=0,e=0,a,i;\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&a);\n\t\tif(a%2==0){e++;}\n\t\telse{o++;}\n\t}\n\tint td,ts,t=n-k;\n\ttd = t/2, ts=td-t;\n\tif(o>td){\n\t\tif(t%2==0){w=d;}\n\t\telse{w=s;}\n\t}\n\tif(e<=td){\n\t\tif(k%2==0){w=d;}\n\t\telse{w=s;}\n\t\tif(e=ts){\n\t\t\tif(k%2==1){w=s;}\n\t\t}\n\t}\n\tif(o<=td){\n\t\tw=d;\n\t}\n\tif(t==0){\n\t\tif(o%2==0){w=d;}\n\t\telse{w=s;}\n\t}\n\tprintf(\"%s\",w);\n}\n"}
{"similarity_score": 0.8960261295590637, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "2410b2611f6117b9a4d641daf455a0f2", "bug_code_uid": "7e8d268d9b6ded0e2f90dc0f4c79f778", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "16a7640dacc749475196ad6c60a97c83", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdbool.h>\n\nint sieve(long long int n)\n{\n    bool prime[1000001]={0};\n\n    prime[1]=1;\n\n    int i,j;\n    for(i=2;i<1000001;i++)\n    {\n        if(prime[i]==0)\n        {\n            for(j=2;i*j<1000001;j++)\n            {\n                prime[i*j]=1;\n            }\n        }\n    }\n\n    return prime[n];\n}\n\nint main()\n{\n    long long int n,i,j,temp,sr;\n    scanf(\"%I64d\",&n);\n\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&temp);\n\n        sr=sqrt(temp);\n\n        if((sr*sr)!=temp || (temp%2==0 && temp!=4) || temp==1)\n        {\n            printf(\"NO\\n\");\n        }\n        else if(temp==4)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            bool p=sieve(sr);\n\n            if(p==0)\n            {\n                printf(\"YES\\n\");\n            }\n            else\n            {\n                printf(\"NO\\n\");\n            }\n        }\n\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdbool.h>\n\nbool prime[1000001];\n\nvoid sieve()\n{\n    prime[1]=1;\n\n    int i,j;\n    for(i=2;i<1000001;i++)\n    {\n        if(prime[i]==0)\n        {\n            for(j=2;i*j<1000001;j++)\n            {\n                prime[i*j]=1;\n            }\n        }\n    }\n}\n\nint main()\n{\n    long long int n,i,j,temp,sr;\n    scanf(\"%I64d\",&n);\n\n    sieve();\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%I64d\",&temp);\n\n        sr=sqrt(temp);\n\n        if((sr*sr)!=temp || (temp%2==0 && temp!=4) || temp==1)\n        {\n            printf(\"NO\\n\");\n        }\n        else if(temp==4)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            if(prime[sr]==0)\n            {\n                printf(\"YES\\n\");\n            }\n            else if(prime[sr]==1)\n            {\n                printf(\"NO\\n\");\n            }\n        }\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.6432835820895523, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d6a5069d98e166d7706f03afa39c042d", "bug_code_uid": "f991770d3d7795751afd10eb02375a54", "src_uid": "c457b77b16d94c6c4c95b7403a1dd0c7", "apr_id": "3f356ee89d11a01201cd49764391cc39", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long n, suma ,k , m, a,  price, i, j;\n    float b;\n    scanf(\"%d\", &n);\n    for(i = 1; i <= n; i++)\n    {\n        suma = 0;\n        scanf(\"%d\", &m);\n        for(j = 1;j <= m; j++)\n        {\n            scanf(\"%d\",&k);\n        suma = suma + k;\n        }\n        \n    price = suma/ m;\n    a= suma/m;\n    b = (float)suma / m;\n    if(a != b) price = price + 1;\n    \n    \n    printf (\"%d\\n\",price);\n}\n    return 0;\n}\n", "fixed": "/******************************************************************************\n\nWelcome to GDB Online.\nGDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,\nC#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, 76CSS, JS, SQLite, Prolog.\nCode, Compile, Run and Debug online from anywhere in world.\n\n*******************************************************************************/\n#include <stdio.h>\n\nint main()\n{\n    int n, suma ,k , m, a,  price, i, j;\n    double  b;\n    scanf(\"%d\", &n);\n    for(i = 1; i <= n; i++)\n    {\n        suma = 0;\n        scanf(\"%d\", &m);\n        for(j = 1;j <= m; j++)\n        {\n            scanf(\"%d\",&k);\n        suma = suma + k;\n        }\n        \n    price = suma/ m;\n    a= suma/m;\n    b = (suma*1.0) / m;\n    if(a != b) price = price + 1;\n    \n    \n    printf (\"%d\\n\",price);\n}\n    return 0;\n}\n"}
{"similarity_score": 0.9862068965517241, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d1ec49004bca05111c52de580927bea8", "bug_code_uid": "d4cf5bca8ec4ca7800adda30625bfe6d", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "d6bd978c9d992c480d282d4f46a34d9f", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void){\n    int a,b,n,t,i,j,k=97;\n\n    scanf(\"%d\",&t);\n\n    while(t--){\n        scanf(\"%d%d%d\",&n,&a,&b);\n        k=97;\n        for(i=0;i<n;i++){\n            if(i%b==0 && b!=1)k=97;\n            printf(\"%c\",k);\n            k++;\n        }\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main(void){\n    int a,b,n,t,i,j,k=97;\n\n    scanf(\"%d\",&t);\n\n    while(t--){\n        scanf(\"%d%d%d\",&n,&a,&b);\n        k=97;\n        for(i=0;i<n;i++){\n            if(i%b==0)k=97;\n            printf(\"%c\",k);\n            k++;\n        }\n        printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.9850374064837906, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c92be7d8bd3612d0d6b71ec32344cfc2", "bug_code_uid": "60c4b1a2bcd064bd944fa5dbeaaddb34", "src_uid": "7d774a003d2e3e8ae6fe1912b3998c96", "apr_id": "20e28cce527094314897bcebc163f384", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++){\r\n        int k,m;\r\n        scanf(\"%d %d\",&k,&m);\r\n        int o=0;\r\n        for(int y=1;y<m+1;y++){\r\n                 o+=y;\r\n        }\r\n        for(int u=2;u<k+1;u++){\r\n            o+=m*u;\r\n        }\r\n        printf(\"%d\\n\",o);\r\n    }\r\n    \r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i=0;i<n;i++){\r\n        int k,m;\r\n        scanf(\"%d %d\",&k,&m);\r\n        long long int o=0;\r\n        for(int y=1;y<m+1;y++){\r\n                 o+=y;\r\n        }\r\n        for(int u=2;u<k+1;u++){\r\n            o+=m*u;\r\n        }\r\n        printf(\"%lld\\n\",o);\r\n    }\r\n    \r\n}"}
{"similarity_score": 0.6190476190476191, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "79edf51a3c51a88465c6dfffb4e78967", "bug_code_uid": "05eb230ff845ff7e5849ac9adc6d2fc5", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "006409903a824d2aac7a78a6cb264942", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint arr[100005]={0};\nint main()\n{\n    int n,m,i,j,cnt,l,k;\n    scanf(\"%d %d\",&n,&m);\n    int ara[n];\n    l = n;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n        for(j=0;j<i;j++){\n            if(ara[j]==ara[i]){\n                ara[j]=0;\n            }\n        }\n    }\n    for(i=n-1;i>=0;i--){\n            if(ara[i]!=0)\n            arr[l]++;\n            arr[l] += arr[l+1];\n            l--;\n    }\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&k);\n        if(k==n){\n            printf(\"1\\n\");\n        }\n        else{\n                    printf(\"%d\\n\",arr[k]);\n        }\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint arr[100005]={0};\nint main()\n{\n    int n,m,i,j,cnt=0,l,k;\n    int ck[100005]={0};\n    scanf(\"%d %d\",&n,&m);\n    int ara[n];\n    l = n;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n        if(ck[ara[i]]==0){\n                ck[ara[i]]=1;\n            }\n    }\n    for(i=n-1;i>=0;i--){\n            if(ck[ara[i]]==1){\n                ck[ara[i]]=0;\n                cnt++;\n            }\n\n                arr[l--] = cnt;\n            }\n\n    for(i=0;i<m;i++){\n        scanf(\"%d\",&k);\n        if(k==n){\n            printf(\"1\\n\");\n        }\n        else{\n                    printf(\"%d\\n\",arr[k]);\n        }\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.8111181301326595, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "328c42cf96d50d1e217f46900cb53584", "bug_code_uid": "334fedecc6227c3fc3524126b281e0f6", "src_uid": "6dea4611ca210b34ae2da93ebfa9896c", "apr_id": "a8a36ac9f15613d7a71ad27dd80b794d", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MIN(A, B)   (((A) < (B)) ? (A) : (B))\n\nint A[1000];\n\nint compare(int *a, int *b) {\n    return *a - *b;\n}\n\nint main() {\n    int n, i, m, min = 0, max = 0, used;\n    scanf(\"%d%d\", &n, &m);\n    for(i = 0; i < m; i++) {\n        scanf(\"%d\", &A[i]);\n    }\n    qsort(A, m, sizeof(int), compare);\n    // calculate minimum\n    for(i = 0, used = 0; used < n; i++) {\n        int cnt = MIN(n - used, A[i]);\n        min += A[i]*(A[i] + 1)/2 - (A[i] - cnt)*(A[i] - cnt + 1)/2;\n        used += cnt;\n    }\n    // calculate maximum\n    int x = m-1;\n    for(used = 0; used < n; ) {\n        while(A[x] >= A[(x-1+m)%m] && used++ < n) {\n            max += A[x]--;\n        }\n        x = (x-1+m)%m;\n    }\n    printf(\"%d %d\\n\", max, min);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define MIN(A, B)   (((A) < (B)) ? (A) : (B))\n\nint A[1000];\nint C[1000];\n\nint compare(int *a, int *b) {\n    return *a - *b;\n}\n\nint main() {\n    int n, i, m, min = 0, max = 0, used;\n    scanf(\"%d%d\", &n, &m);\n    for(i = 0; i < m; i++) {\n        scanf(\"%d\", &A[i]);\n        C[A[i]-1]++;\n    }\n    for(i = 999; i >= 1; i--) {\n        C[i-1] += C[i];\n    }\n    qsort(A, m, sizeof(int), compare);\n    // calculate minimum\n    for(i = 0, used = 0; used < n; i++) {\n        int cnt = MIN(n - used, A[i]);\n        min += A[i]*(A[i] + 1)/2 - (A[i] - cnt)*(A[i] - cnt + 1)/2;\n        used += cnt;\n    }\n    // calculate maximum\n    for(i = 999, used = 0; used < n; i--) {\n        int cnt = MIN(n - used, C[i]);\n        max += cnt*(i+1);\n        used += cnt;\n    }\n    printf(\"%d %d\\n\", max, min);\n    return 0;\n}\n"}
{"similarity_score": 0.51259987707437, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "4036993b7147862d8e81a7f883ffff03", "bug_code_uid": "e600e59b18659d35adf4cb841e274f98", "src_uid": "8cf479fd47050ba96d21f3d8eb43c8f0", "apr_id": "b55e989c3e439b4e6cc87a19c2a3878a", "difficulty": 1400, "tags": ["constructive algorithms", "interactive", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <string.h>\n#define N 100\n\nint main(int argc, char** argv) {\n  char sieve[N + 1];\n  char outstr[32];\n  memset(sieve, 0x01, sizeof(sieve));\n  \n  int count_divs = 0;\n  \n  for (int i = 2; i <= N; i++) {\n    if (!sieve[i])\n      continue;\n    printf(\"%d\\n\", i);\n    fflush(stdout);\n    scanf(\"%s\", outstr);\n    \n    char answer = 0;\n    if (strcmp(outstr, \"yes\") == 0)\n      answer = 1;\n    else if (strcmp(outstr, \"no\") == 0)\n      answer = 0;\n    else\n      assert(0);\n    \n    if (answer)\n      count_divs++;\n    if (i > 50) {\n      printf(\"prime\\n\");\n      return 0;\n    }\n    for (int j = i * i; j <= N; j += i)\n      sieve[j] = 0;\n  }\n  printf(count_divs == 1 ? \"prime\\n\" : \"composite\\n\");\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <string.h>\n#define N 100\n\nchar ask(int i) {\n  char outstr[32];\n  printf(\"%d\\n\", i);\n  fflush(stdout);\n  scanf(\"%s\", outstr);\n  char answer = 0;\n  if (strcmp(outstr, \"yes\") == 0)\n    answer = 1;\n  else if (strcmp(outstr, \"no\") == 0)\n    answer = 0;\n  else\n    assert(0);\n  return answer;\n}\n\nint main(int argc, char** argv) {\n  char sieve[N + 1];\n  memset(sieve, 0x01, sizeof(sieve));\n  \n  int count_divs = 0;\n  \n  for (int i = 2; i <= N; i++) {\n    if (!sieve[i])\n      continue;\n    \n    if (ask(i))\n      count_divs++;\n    if (i <= 10 && ask(i * i))\n      count_divs++;\n    if (count_divs > 1) {\n      printf(\"composite\\n\");\n      return 0;\n    }\n    if (i > 50) {\n      printf(\"prime\\n\");\n      return 0;\n    }\n    for (int j = i * i; j <= N; j += i)\n      sieve[j] = 0;\n  }\n  printf(\"prime\\n\");\n}"}
{"similarity_score": 0.6131207847946045, "equal_cnt": 31, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 25, "fix_ops_cnt": 30, "lang": "GNU C11", "fix_code_uid": "4b673768c3d63962e5c94b0eea603575", "bug_code_uid": "a642a560ad57a071b7fe4a744fdee645", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "b161ec293eaa87aa9730ee778c104dfb", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    int i,j,l,t;\n    double m;\n    scanf(\"%d\",&t);\n    long long int a[t];\n\n    for(i=0;i<t;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=0;i<t;i++){\n\n        if(a[i]==1){\n            printf(\"NO\\n\");\n            continue;\n        }\n        m=sqrt(a[i]);\n        l=(int)m;\n        if(m!=l){\n            printf(\"NO\\n\");\n            continue;\n        }\n        else{\n            for(j=2;j<=sqrt(l);j++){\n                if(l%j==0){\n                    printf(\"NO\");\n                    goto A;\n                }\n            }\n            printf(\"YES\\n\");\n            A:j=2;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n        int i,j,l,t;\n        double m;\n        scanf(\"%d\",&t);\n        long long int a[t];\n\n        for(i=0;i<t;i++){\n            scanf(\"%lld\",&a[i]);\n        }\n        for(i=0;i<t;i++){\n\n            if(a[i]==1){\n                printf(\"NO\\n\");\n                continue;\n            }\n            m=sqrt(a[i]);\n            l=(int)m;\n            if(m!=l){\n                printf(\"NO\\n\");\n                continue;\n            }\n            else if(l%2==0){\n                if(l==2){\n                    printf(\"YES\\n\");\n                    continue;\n                }\n                printf(\"NO\\n\");\n                continue;\n            }\n            else{\n                for(j=3;j*j<=l;j=j+2){\n                    if(l%j==0){\n                        printf(\"NO\\n\");\n                        goto A;\n                    }\n                }\n                printf(\"YES\\n\");\n                A:j=2;\n            }\n        }\n        return 0;\n    }\n"}
{"similarity_score": 0.8014492753623188, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "034c03d1078ea8368bb82d4111a9f10d", "bug_code_uid": "3ad1b6a5e4f92b6164ea813c7a3faf67", "src_uid": "6f0d3a7971ffc2571838ecd8bf14238d", "apr_id": "d6d7832851bfa4086ea2728156ccfe87", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <assert.h>\r\n#include <ctype.h>\r\n#include <limits.h>\r\n#include <math.h>\r\n#include <stdbool.h>\r\n#include <stddef.h>\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    long long i,n,m,t,j;\r\n    scanf(\"%lli\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lli%lli\",&n,&m);\r\n        \r\n        if(n==1 && m>=3)\r\n        {\r\n        printf(\"-1\\n\");\r\n        }\r\n        else{\r\n        if(m>n)\r\n        {\r\n            j=m;\r\n            m=n;\r\n            n=j;\r\n        }\r\n        if((n+m)%2==0)\r\n        printf(\"%lli\\n\",2*n-2);\r\n        if((n+m)%2!=0)\r\n        printf(\"%lli\\n\",2*n-3);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n        ", "fixed": "#include <assert.h>\r\n#include <ctype.h>\r\n#include <limits.h>\r\n#include <math.h>\r\n#include <stdbool.h>\r\n#include <stddef.h>\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    long long i,n,m,t,j;\r\n    scanf(\"%lli\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lli%lli\",&n,&m);\r\n        \r\n        \r\n        \r\n        if(m>n)\r\n        {\r\n            j=m;\r\n            m=n;\r\n            n=j;\r\n        }\r\n        if(m==1 && n>=3)\r\n        {\r\n        printf(\"-1\\n\");\r\n        }\r\n        else if((n+m)%2==0)\r\n        printf(\"%lli\\n\",2*n-2);\r\n        else if((n+m)%2!=0)\r\n        printf(\"%lli\\n\",2*n-3);\r\n        \r\n    }\r\n    return 0;\r\n}\r\n        "}
{"similarity_score": 0.6666666666666666, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "352aad3cacf63ae7517567feea44eaa3", "bug_code_uid": "e48c0785d2b0e5ff6fcabd9f8b9b822d", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "99e388565fb1c0ee60c19488dab816e0", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n, m, i, a[100], t, s=0, j=0;\n\tscanf(\"%d %d\", &n, &m);\n\t\n\tfor(i=0; i<n; i++)\n\tscanf(\"%d\", &a[i]);\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tif(a[i]<0 && j<m)\n\t\t{\n\t\t\ts=s+a[i];\n\t\t\tj++;\n\t\t}\n\t}\n\tprintf(\"%d\", -1*s);\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n, m, i, a[100], t, s=0, j=0;\n\tscanf(\"%d %d\", &n, &m);\n\t\n\tfor(i=0; i<n; i++)\n\tscanf(\"%d\", &a[i]);\n\t\n\tfor(i=0; i<n; i++)\n\t{\n\t\tfor(j=i+1; j<n; j++)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\tt=a[i];\n\t\t\t\ta[i]=a[j];\n\t\t\t\ta[j]=t;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<m; i++)\n\t{\n\t\tif(a[i]<0)\n\t\ts=s+a[i];\n\t\telse\n\t\tbreak;\n\t}\n\tprintf(\"%d\", -1*s);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9310344827586207, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "2444cdb6760f6e190a14d59e8d5d64cf", "bug_code_uid": "c50e03da7e98a25af2bb9e715f8cd9e6", "src_uid": "df92643983d6866cfe406f2b36bec17f", "apr_id": "7cdf9d95b52d1d0a41a8e1e7abd88924", "difficulty": 1500, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    long long int k,m,n;\n    scanf(\"%lld\",&k);\n    if(k<3){\n        printf(\"-1\\n\");\n    }\n    else if(k%2!=0)\n    {\n        n=(l*l+1)/2;\n        m=(l*l-1)/2;\n        printf(\"%lld %lld\\n\",n,m);\n    }\n    else{\n        \n        m=(l*l)/4-1;\n        n=(l*l)/4+1;\n        printf(\"%lld %lld\\n\",m,n);\n    }\n    return 0;\n}\n\n\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int k,m,n;\n    scanf(\"%lld\",&k);\n    if(k<3){\n        printf(\"-1\\n\");\n    }\n    else if(k%2!=0)\n    {\n        n=(k*k+1)/2;\n        m=(k*k-1)/2;\n        printf(\"%lld %lld\\n\",n,m);\n    }\n    else{\n\n        m=(k*k)/4-1;\n        n=(k*k)/4+1;\n        printf(\"%lld %lld\\n\",m,n);\n    }\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.9991603694374476, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "58869f92f95db19982bf54884b3ad053", "bug_code_uid": "a63ffbaf12a5ce70f1121a9544920c24", "src_uid": "c408b1d198c7c88fc635936d960c962a", "apr_id": "505ac1cbb295903276c8f77f74330cfa", "difficulty": 1400, "tags": ["games", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <string.h>\ntypedef long long int ll;\nll n,m;\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tint i;\n\tll a[100];\n\tll b[100];\n\tll mina,minb,maxa,maxb;\n\tmina=LLONG_MAX;\n\tminb=LLONG_MAX;\n\tmaxa=-LLONG_MAX;\n\tmaxb=-LLONG_MAX;\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tfor(i=0;i<m;++i)\n\t{\n\t\tscanf(\"%lld\",&b[i]);\n\t}\n\tll min=0;\n\tint j;\n\tfor(i=0;i<n;++i)\n\t{\n\t\tmin=i;\n\t\tfor(j=i;j<n;++j)\n\t\t{\n\t\t\tif(a[j]<a[min])\n\t\t\t{\n\t\t\t\tmin=j;\n\t\t\t}\n\t\t}\n\t\tll temp;\n\t\ttemp=a[min];\n\t\ta[min]=a[i];\n\t\ta[i]=temp;\n\t}\n\tfor(i=0;i<m;++i)\n        {\n                min=i;\n                for(j=i;j<n;++j)\n                {\n                        if(b[j]<b[min])\n                        {\n                                min=j;\n                        }\n                }\n                ll temp;\n                temp=b[min];\n                b[min]=b[i];\n                b[i]=temp;\n        }\n\tll ans=LLONG_MAX,t;\n\tint k;\n\tfor(i=0;i<n;++i)\n\t{\n\t\tt=-LLONG_MAX;\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tfor(k=0;k<n;++k)\n\t\t\t{\n\t\t\t\tif(k!=i)\n\t\t\t\t{\n\t\t\t\t\tif(a[k]*b[j]>t)\n\t\t\t\t\t{\n\t\t\t\t\t\tt=a[k]*b[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\n\t\tif(t<ans)\n\t\t{\n\t\t\tans=t;\n\t\t}\n\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <string.h>\ntypedef long long int ll;\nll n,m;\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tint i;\n\tll a[100];\n\tll b[100];\n\tll mina,minb,maxa,maxb;\n\tmina=LLONG_MAX;\n\tminb=LLONG_MAX;\n\tmaxa=-LLONG_MAX;\n\tmaxb=-LLONG_MAX;\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tfor(i=0;i<m;++i)\n\t{\n\t\tscanf(\"%lld\",&b[i]);\n\t}\n\tll min=0;\n\tint j;\n\tfor(i=0;i<n;++i)\n\t{\n\t\tmin=i;\n\t\tfor(j=i;j<n;++j)\n\t\t{\n\t\t\tif(a[j]<a[min])\n\t\t\t{\n\t\t\t\tmin=j;\n\t\t\t}\n\t\t}\n\t\tll temp;\n\t\ttemp=a[min];\n\t\ta[min]=a[i];\n\t\ta[i]=temp;\n\t}\n\tfor(i=0;i<m;++i)\n        {\n                min=i;\n                for(j=i;j<m;++j)\n                {\n                        if(b[j]<b[min])\n                        {\n                                min=j;\n                        }\n                }\n                ll temp;\n                temp=b[min];\n                b[min]=b[i];\n                b[i]=temp;\n        }\n\tll ans=LLONG_MAX,t;\n\tint k;\n\tfor(i=0;i<n;++i)\n\t{\n\t\tt=-LLONG_MAX;\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tfor(k=0;k<n;++k)\n\t\t\t{\n\t\t\t\tif(k!=i)\n\t\t\t\t{\n\t\t\t\t\tif(a[k]*b[j]>t)\n\t\t\t\t\t{\n\t\t\t\t\t\tt=a[k]*b[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\n\t\tif(t<ans)\n\t\t{\n\t\t\tans=t;\n\t\t}\n\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.857727737973388, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d4a4ffd2f9bade17ca0ce9d0da08cbeb", "bug_code_uid": "9486d3444144c8deb491f87570c185fc", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "ad1dc5ea6561fac798f82bf2d4705f47", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nlong long int t[100000];\nint cnt = 1;\n\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%lld\", &t[i]);\n\t}\n\tlong long int min = t[0];\n\tint ans = 0;\n\tfor (int c = 1; c < n; c++)\n\t{\n\t\tif (t[c] < min)\n\t\t{\n\t\t\tmin = t[c];\n\t\t\tans = c + 1;\n\t\t\tcnt = 1;\n\t\t}\n\t\telse if (t[c] == min)\n\t\t\tcnt++;\n\t}\n\tif (cnt > 1)\n\t{\n\t\tprintf(\"%s\\n\", \"Still Rozdil\" );\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\", ans );\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nlong long int t[100000];\nint cnt = 1;\n\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%lld\", &t[i]);\n\t}\n\tlong long int min = t[0];\n\tint ans = 1;\n\tfor (int c = 1; c < n; c++)\n\t{\n\t\tif (t[c] < min)\n\t\t{\n\t\t\tmin = t[c];\n\t\t\tans = c + 1;\n\t\t\tcnt = 1;\n\t\t}\n\t\telse if (t[c] == min)\n\t\t\tcnt++;\n\t}\n\tif (cnt > 1)\n\t{\n\t\tprintf(\"Still Rozdil\\n\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\", ans );\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.996594778660613, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "086357788ce01813e09d3dcdef8220cb", "bug_code_uid": "d481b70bee554d429e7b9ec939f9bad2", "src_uid": "cc4cdcd162a83189c7b31a68412f3fe7", "apr_id": "360f1b39a094488fac4d84aedb812f1a", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,i,j,c=0;\n    char s[51];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%s\",&n,s);\n        for(i=0,j=n-1; i<n/2; i++,j--)\n        {\n            if(abs(s[i]-s[j])!=2&&abs(s[i]-s[j])!=0)\n            {\n                c++;\n                break;\n            }\n        }\n        if(c)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n        c=0;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,i,j,c=0;\n    char s[101];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%s\",&n,s);\n        for(i=0,j=n-1; i<n/2; i++,j--)\n        {\n            if(abs(s[i]-s[j])!=2&&abs(s[i]-s[j])!=0)\n            {\n                c++;\n                break;\n            }\n        }\n        if(c)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n        c=0;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9664429530201343, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "72f8e026e227c87fe1fa780ae1be7c0f", "bug_code_uid": "a576a08e676948395c84c129f99862a6", "src_uid": "6c9cbe714f8f594654ebc59b6059b30a", "apr_id": "74cf2c104dc8869a38cc1b3763e63011", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n,i,count=0,total=0,ans=0;\nscanf(\"%d\",&n);\nint arr[n+3];\nfor(i=0;i<n;i++){\nscanf(\"%d\",&arr[i]);\nif(arr[i]==2){\ncount++;}\nelse if(arr[i]==1){\ntotal++;}}\nif(total>=count){\nans=ans+count;}\ntotal=total-count;\nans=ans+total/3;\nprintf(\"%d\\n\",ans);\nreturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main(){\nint n,i,count=0,total=0,ans=0;\nscanf(\"%d\",&n);\nint arr[n+3];\nfor(i=0;i<n;i++){\nscanf(\"%d\",&arr[i]);\nif(arr[i]==2){\ncount++;}\nelse if(arr[i]==1){\ntotal++;}}\nif(total>=count){\nans=ans+count;\ntotal=total-count;\nans=ans+total/3;}\nelse{\nans=total;}\nprintf(\"%d\\n\",ans);\nreturn 0;\n}\n\n"}
{"similarity_score": 0.18693982074263765, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "5591a6f23b28f35a40ead8b3326b3c83", "bug_code_uid": "3ae27841de8c9d43caa26eef2c7b9bc6", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "01a105b21b4a6165a45dd0aa2001c0c6", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int t, l;\n    scanf(\"%d\", &t);\n    for(l = 1; l <= t; l++){\n        char str1[102], str2[102];\n        scanf(\"%s\", str1);\n        int i, j, len = strlen(str1);\n        for(i = 0, j = 0; i <= len / 2, j <= len - 1; i++, j = j + 2){\n            str2[i] = str1[j];\n        }\n        str2[i] = str1[len - 1];\n        str2[i + 1] = '\\0';\n        printf(\"%s\\n\", str2);\n    }", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,j;scanf(\"%d\",&t);\n    while(t>0)\n    {\n        int i,x,n,len;\n        char str1[100];\n        scanf(\"%s\",&str1);\n        len=strlen(str1);char str2[100];\n        \n        for(i=0; i<=(len-1)/2; i++) {\n            str2[i]=str1[i*2];}\n        str2[(len-1)/2+1]=str1[len-1];\n        str2[(len-1)/2+2]='\\0';\n        printf(\"%s\\n\",str2);\n        t--;\n  }  \n}"}
{"similarity_score": 0.9433962264150944, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "e795e06a009983b344a722b7514eb3e9", "bug_code_uid": "4b69655662063651d5b99222f497f6d1", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "08b2ed8f32651126a4335bd9adfde329", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n%2==1)\n    printf(\"-1\");\n    else\n    for(i=n;i>0;i--)\n    printf(\"%d \",i);\n}\n", "fixed": "    #include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n%2==1)\n    printf(\"-1\");\n    else\n    for(i=n;i>0;i--)\n    printf(\"%d \",i);\n    return 0;\n}\n"}
{"similarity_score": 0.9291845493562232, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "38c3471ff3aadbcf238c0509505df668", "bug_code_uid": "1e183803e3757714d88d3f4d9fdfe187", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "7a4dd6461ec65a99507e532de7a0a372", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp(const void *a, const void *b)\n{\n\treturn *(int *)a - *(int *)b;\n}\n\nint main(void)\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint A[n];\n\tint sum = 0;\n\tint i;\n\tfor (i = 0; i < n; ++i) {\n\t\tscanf(\"%d\", &A[i]);\n\t\tsum += A[i];\n\t}\n\tqsort(A, n, sizeof(int), comp);\n\tint ans = sum;\n\tint left = A[0];\n\tfor (i = 1; i < n; ++i) {\n\t\t\t\tans += sum - left;\n\t\tans += A[i - 1];\n\t\tleft += A[i];\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n\t\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint comp(const void *a, const void *b)\n{\n\treturn *(int *)a - *(int *)b;\n}\n\nint main(void)\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint A[n];\n\tlong long int sum = 0;\n\tint i;\n\tfor (i = 0; i < n; ++i) {\n\t\tscanf(\"%d\", &A[i]);\n\t\tsum += A[i];\n\t}\n\tqsort(A, n, sizeof(int), comp);\n\tlong long int ans = sum;\n\tlong long int left = A[0];\n\tfor (i = 1; i < n; ++i) {\n\t\tans += sum - left;\n\t\tans += A[i - 1];\n\t\tleft += A[i];\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n\n\t\n"}
{"similarity_score": 0.337782340862423, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "afd83425b42c12b8bb35de18b658738b", "bug_code_uid": "683f3c9437c8fee572a519d7d92ce4f6", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "e4207be6c1bc0e396c06929d98c49bcb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint cases;\r\n\tscanf(\"%d\",&cases);\r\n\tfor(int x = 0; x < cases; x++)\r\n\t{\r\n\t\tlong long int a;\r\n\t\tlong long int b;\r\n\t\tlong long int c;\r\n\t\tlong long int d;\r\n\t\tscanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\r\n\t\tlong long int btime = b;\r\n\t\tlong long int ctime = c;\r\n\t\tlong long int dtime = d;\r\n\t\t\r\n\t\tfor(int a1 = 0; a1 > -1; a1++)\r\n\t\t{\r\n\t\t\tif(btime - a < 0)\r\n\t\t\t{\r\n\t\t\t\tbtime = btime + b ;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tbtime = btime - a;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\t\tfor(int b1 = 0; b1 > -1; b1++)\r\n\t\t{\r\n\t\t\tif(ctime - a < 0)\r\n\t\t\t{\r\n\t\t\t\tctime = ctime + c ;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tctime = ctime - a;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\t\tfor(int c1 = 0; c1 > -1; c1++)\r\n\t\t{\r\n\t\t\tif(dtime - a < 0)\r\n\t\t\t{\r\n\t\t\t\tdtime = dtime + d ;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdtime = dtime - a;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlong long int answer;\r\n\t\tif(btime < ctime)\r\n\t\t{\r\n\t\t\tanswer = btime;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tanswer = ctime;\r\n\t\t}\r\n\t\tif(answer > dtime)\r\n\t\t{\r\n\t\t\tanswer = dtime;\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%lld\\n\",answer);\r\n\t}\r\n\treturn 0;\r\n}\r\n\t\t\r\n\t\t\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n\tint cases;\r\n\tscanf(\"%d\",&cases);\r\n\tfor(int x = 0; x < cases; x++)\r\n\t{\r\n\t\tlong long int a;\r\n\t\tlong long int b;\r\n\t\tlong long int c;\r\n\t\tlong long int d;\r\n\t\tscanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\r\n\t\t\r\n\t\tif(a % b != 0)\r\n\t\t{\r\n\t\t\tlong long int div1 = a / b + 1;\r\n\t\t\tb = b * div1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tb = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(a % c != 0)\r\n\t\t{\r\n\t\t\tlong long int div1 = a / c + 1;\r\n\t\t\tc = c * div1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tc = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(a % d != 0)\r\n\t\t{\r\n\t\t\tlong long int div1 = a / d + 1;\r\n\t\t\td = d * div1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\td = 0;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tlong long int answer;\r\n\t\tif(b < c)\r\n\t\t{\r\n\t\t\tanswer = b;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tanswer = c;\r\n\t\t}\r\n\t\tif(answer > d)\r\n\t\t{\r\n\t\t\tanswer = d;\r\n\t\t}\r\n\t\t\r\n\t\tif(answer != 0 && answer > a)\r\n\t\t{\r\n\t\t\tanswer = answer - a;\r\n\t\t}\r\n\t\r\n\t\t\r\n\t\tprintf(\"%lld\\n\",answer);\r\n\t}\r\n\treturn 0;\r\n}\r\n\t\t\r\n\t\t\r\n"}
{"similarity_score": 0.9628942486085343, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "7bd4cc61778aa697166b705122367d6c", "bug_code_uid": "a693c5d0aa04c3f347135c3cd486e0a4", "src_uid": "45e51f3dee9a22cee86e1a98da519e2d", "apr_id": "f1f3b1a031fa35ddf605e566c3868675", "difficulty": 800, "tags": ["sortings", "implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\nlong long n , id[1001], k=0, p=0, i,j;\nscanf(\"%lld\", &n);\nfor(i=0;i < n;i++){\n    scanf(\"%lld\",&id[i]);\n    }\nfor(i=0;i < n-1;i++){\n        p = 0 ;\n    for(j= i+1 ; j < n ;j++){\n        if(id[i] != 0){\n             if(id[i] == id[j] ){\n                p++ ;\n                id[j] = 0 ;\n                }\n            }\n        }\n    if( p > 1){\n        printf(\"-1\");\n        break ;\n    }\n    else if( p == 1){\n        k++ ;\n    }\n    else{\n    printf(\"%lld\", k);\n    }\n}\n\n    return 0 ;\n        }\n", "fixed": "#include <stdio.h>\nint main(){\n\nlong long n , id[1001], k=0, p=0, i,j,m=0;\nscanf(\"%lld\", &n);\nfor(i=0;i < n;i++){\n    scanf(\"%lld\",&id[i]);\n    }\nfor(i=0;i < n-1;i++){\n        p = 0 ;\n    for(j= i+1 ; j < n ;j++){\n        if(id[i] != 0){\n             if(id[i] == id[j] ){\n                p++ ;\n                id[j] = 0 ;\n                }\n            }\n        }\n    if( p > 1){\n        printf(\"-1\");\n        m++ ;\n\n        break ;\n    }\n    else if( p == 1){\n        k++ ;\n    }\n\n}\nif(m==0){\n    printf(\"%lld\", k);\n    }\n\n    return 0 ;\n        }\n"}
{"similarity_score": 0.39923954372623577, "equal_cnt": 22, "replace_cnt": 4, "delete_cnt": 16, "insert_cnt": 2, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "5496913b67578f3fe6c4bc230122bf42", "bug_code_uid": "65cd0577a4a52d4bca8542b1d41e029e", "src_uid": "24fe280b88575516ec679ff78641440e", "apr_id": "326b6cc56dc751028dcdfe534446ccbf", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define abs(x) (((x)>0)?(x):(-(x)))\n#define int long long\n\nmain()\n{\n  int n;\n  scanf(\"%lld\",&n);\n  int i;\n  int a=0,b=0;\n  for(i=0;i<n;++i)\n    {\n      int a1,g1;\n      scanf(\"%I64ld%I64d\",&a1,&g1);\n      if(abs(a+a1-b)<=500)\n    {\n      a+=a1;\n      printf(\"A\");\n    }\n      else\n    {\n      b+=g1;\n      printf(\"G\");\n    }\n    }\n  printf(\"\\n\");\n  return 0\n}", "fixed": "#include <stdio.h>\n\nint main(){\n  int n;scanf(\"%d\",&n);\n  for(int d=0,a,g;n--&&scanf(\"%d%d\",&a,&g);)\n    putchar(d+a<=500?(d+=a,'A'):(d-=g,'G'));\n}"}
{"similarity_score": 0.6463844797178131, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "9e83592afd7623bece0558eaa52693d6", "bug_code_uid": "5a7c671cb8c95cba2c80ab54f22ac36b", "src_uid": "c9744e25f92bae784c3a4833c15d03f4", "apr_id": "cbb1bb31121e1a5174490a3404b6b5ca", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(int argc, char const *argv[])\n{\n\tint len, i;\n\tint primero=0;\n\tint ultimo=0;\n\tint b=0;\n\tint dec=0;\n\tint sol=0;\n\tchar input[1000];\n\tchar * token;\n\tint * array;\n\tscanf(\"%d\", &len);\n\tgetchar();\n\tarray=(int *)malloc(sizeof(int)*len); \n\tscanf(\"%[^\\n]\", input);\n\tlen=0;\n\ttoken = strtok(input, \" \");\n\twhile( token != NULL ) \n\t{\n\t\tarray[len]=atoi(token);\n\t\ttoken = strtok(NULL, \" \");\n\t\tlen++;\n\t}\n\tfor (i = 1; i < len; ++i)\n\t{\n\t\tif(array[i]<array[i-1]){\n\t\t\tif(dec==0){\n\t\t\t\tif(b==0){\n\t\t\t\t\tb=1;\n\t\t\t\t\tdec=1;\n\t\t\t\t\tprimero=i-1;\n\t\t\t\t\twhile(array[primero]==array[primero-1]){\n\t\t\t\t\t\tprimero--;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsol=0;\n\t\t\t\t\tdec=0;\n\t\t\t\t\ti=len;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(array[i]>array[i-1]){\n\t\t\tif(dec==1){\n\t\t\t\tultimo=i-1;\n\t\t\t\tdec=0;\n\t\t\t\tsol=1;\n\t\t\t\tif(array[i]<array[primero] || (primero !=0 && array[ultimo]<array[primero-1])){\n\t\t\t\t\tsol=0;\n\t\t\t\t\ti=len;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dec==1){\n\t\tultimo=len-1;\n\t\tif(primero != 0 && array[ultimo]<array[primero-1]){\n\t\t\tprintf(\"h\\n\");\n\t\t\tsol=0;\n\t\t}else{\n\t\t\tsol=1;\n\t\t}\n\t}\n\tif (ultimo==0)\n\t{\n\t\tsol=1;\n\t}\n\tif(sol==1){\n\t\tprintf(\"yes\\n\");\n\t\tprintf(\"%d %d\\n\", primero+1, ultimo+1);\n\t}else{\n\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main(int argc, char const *argv[])\n{\n\tint len, i;\n\tint primero=0;\n\tint ultimo=0;\n\tint b=0;\n\tint dec=0;\n\tint sol=0;\n\tchar input[1000];\n\tchar * token;\n\tint * array;\n\tscanf(\"%d\", &len);\n\tarray=(int *)malloc(sizeof(int)*len); \n\tscanf(\"%d\",&array[0]);\n\tfor (i = 1; i < len; ++i)\n\t{\n\t\tscanf(\"%d\",&array[i]);\n\t\tif(array[i]<array[i-1]){\n\t\t\tif(dec==0){\n\t\t\t\tif(b==0){\n\t\t\t\t\tb=1;\n\t\t\t\t\tdec=1;\n\t\t\t\t\tprimero=i-1;\n\t\t\t\t\twhile(array[primero]==array[primero-1]){\n\t\t\t\t\t\tprimero--;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsol=0;\n\t\t\t\t\tdec=0;\n\t\t\t\t\ti=len;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(array[i]>array[i-1]){\n\t\t\tif(dec==1){\n\t\t\t\tultimo=i-1;\n\t\t\t\tdec=0;\n\t\t\t\tsol=1;\n\t\t\t\tif(array[i]<array[primero] || (primero !=0 && array[ultimo]<array[primero-1])){\n\t\t\t\t\tsol=0;\n\t\t\t\t\ti=len;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dec==1){\n\t\tultimo=len-1;\n\t\tif(primero != 0 && array[ultimo]<array[primero-1]){\n\t\t\tsol=0;\n\t\t}else{\n\t\t\tsol=1;\n\t\t}\n\t}\n\tif (ultimo==0)\n\t{\n\t\tsol=1;\n\t}\n\tif(sol==1){\n\t\tprintf(\"yes\\n\");\n\t\tprintf(\"%d %d\\n\", primero+1, ultimo+1);\n\t}else{\n\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9972512369433755, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dd13b8e5a88a9f22d6ec03d00e045c62", "bug_code_uid": "6e0c1846d3f5a88e3016dabf6231fa64", "src_uid": "a00d831da539c69d571d9720fd94eee1", "apr_id": "631d9a9ff5749317d27ca2b573a1ef3a", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint cmp (const void * a, const void * b)\n{\n   return -(*(int*) a - *(int*) b);\n}\n\n\nint main()\n{\n    long int q, n, i, num, ans, cur;\n    long int *data = calloc(200001, sizeof(int));\n    scanf(\"%ld\", &q);\n    for (; q > 0; q--)\n    {\n        scanf(\"%ld\", &n);\n        for (i = 1; i <= n; i++)\n        {\n            scanf(\"%ld\", &num);\n            data[num]++;\n        }\n        qsort(data + 1, n, sizeof(long int), cmp);\n        ans = 0;\n        cur = data[1] + 1;\n        for (i = 1; ; i++)\n        {\n            if (cur - 1 < data[i])\n                    data[i] = cur - 1;\n            cur = data[i];\n            if (cur <= 0)\n            {\n                for (; i <= n; i++)\n                    data[i] = 0;        \n                break;\n            }\n            ans += data[i];\n        }   \n        printf(\"%ld\\n\", ans); \n    }\n    free(data);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint cmp (const void * a, const void * b)\n{\n   return -(*(int*) a - *(int*) b);\n}\n\n\nint main()\n{\n    long int q, n, i, num, ans, cur;\n    long int *data = calloc(200001, sizeof(int));\n    scanf(\"%ld\", &q);\n    for (; q > 0; q--)\n    {\n        scanf(\"%ld\", &n);\n        for (i = 1; i <= n; i++)\n        {\n            scanf(\"%ld\", &num);\n            data[num]++;\n        }\n        qsort(data + 1, n, sizeof(long int), cmp);\n        ans = 0;\n        cur = data[1] + 1;\n        for (i = 1; ; i++)\n        {\n            if (cur - 1 < data[i])\n                    data[i] = cur - 1;\n            cur = data[i];\n            if (cur <= 0)\n            {\n                for (i = 1; i <= n; i++)\n                    data[i] = 0;        \n                break;\n            }\n            ans += data[i];\n        }   \n        printf(\"%ld\\n\", ans); \n    }\n    free(data);\n    return 0;\n}"}
{"similarity_score": 0.2881679389312977, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "a9fc4693e2f6403890d1ea74053950f5", "bug_code_uid": "3fb9f537d1e831271bb74d97cddcab14", "src_uid": "96e2ba997eff50ffb805b6be62c56222", "apr_id": "16eb5c53858b599a6fc8b274167313ae", "difficulty": 1400, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"string.h\"\n#define NMAX 100000\n#define min(a,b) a<b?a:b\n\nint main()\n{\n\tchar s[NMAX];\n\tint a[52]={0},b[52]={0},i,m=0,n=0;\n\tscanf(\" %s\",&s);\n\tfor (i=0;i<strlen(s);i++)\n\t{\n\t\tif ((s[i]>='a')&&(s[i]<='z'))\n\t\t\ta[s[i]-'a']++;\n\t\telse\n\t\t\ta[s[i]-'A'+26]++;\n\t}\n\tscanf(\" %s\",&s);\n\tfor (i=0;i<strlen(s);i++)\n\t{\n\t\tif ((s[i]>='a')&&(s[i]<='z'))\n\t\t\tb[s[i]-'a']++;\n\t\telse\n\t\t\tb[s[i]-'A'+26]++;\n\t}\n\tfor (i=0;i<52;i++)\n\t{\n\t\tint k=min(a[i],b[i]);\n\t\tm+=k;\n\t\ta[i]-=k;\n\t\tb[i]-=k;\n\t}\n\tfor (i=0;i<26;i++)\n\t\tn+=min(a[i]+a[i+26],b[i]+b[i+26]);\n\tprintf(\"%d %d\",m,n);\n\treturn 0;\n}", "fixed": "#include \"stdio.h\"\n#include \"string.h\"\n#define min(a,b) a<b?a:b\n\nvoid read(int *x)\n{\n\tchar c=getchar();\n\twhile (c!='\\n')\n\t{\n\t\tif ((c>='a')&&(c<='z'))\n\t\t\t(*(x+c-'a'))++;\n\t\telse\n\t\t\t(*(x+c-'A'+26))++;\n\t\tc=getchar();\n\t}\n}\n\nint main()\n{\n\tchar c;\n\tint a[52]={0},b[52]={0},i,m=0,n=0;\n\tread(a);\n\tread(b);\n\tfor (i=0;i<52;i++)\n\t{\n\t\tint k=min(a[i],b[i]);\n\t\tm+=k;\n\t\ta[i]-=k;\n\t\tb[i]-=k;\n\t}\n\tfor (i=0;i<26;i++)\n\t\tn+=min(a[i]+a[i+26],b[i]+b[i+26]);\n\tprintf(\"%d %d\\n\",m,n);\n\treturn 0;\n}"}
{"similarity_score": 0.9652351738241309, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9137d89055184329ccdacae93bf336b3", "bug_code_uid": "aa0bdf4283ade0c4677462038bf3ab7c", "src_uid": "e519e4495c9acef4c4a614aef73cb322", "apr_id": "94e8c01131df04b8aa773e7a3f6bcb6c", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int i = 0; i < n_sets; ++i) {\r\n        long long rows, columns, index;\r\n        scanf(\"%lld %lld %lld\", &rows, &columns, &index);\r\n\r\n        long long row = index % rows + (index % rows == 0) * rows;\r\n        long long column = index / rows + (index % rows != 0);\r\n\r\n        long long newIndex = row * columns - columns % column;\r\n\r\n        printf(\"%lld\\n\", newIndex);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n    for (int i = 0; i < n_sets; ++i) {\r\n        long long rows, columns, index;\r\n        scanf(\"%lld %lld %lld\", &rows, &columns, &index);\r\n\r\n        long long row = index % rows + (index % rows == 0) * rows;\r\n        long long column = index / rows + (index % rows != 0);\r\n\r\n        long long newIndex = row * columns - (columns - column);\r\n\r\n        printf(\"%lld\\n\", newIndex);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.39299610894941633, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c53d09c36aaf818891ce5eae47d108ea", "bug_code_uid": "9c402782dcaddd3a395efeb77a55fb31", "src_uid": "8b0a9c7e997034d3ecce044b9f64aeba", "apr_id": "6e7cb097799d0143871563ff311ab206", "difficulty": 800, "tags": ["dp", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\nint n,m;\r\nlong long k,p;\r\nscanf(\"%d %d %lld\",&n,&m,&k);\r\nif(n!=1 && m!=1){\r\np=n-1+m*(m-1);\r\n}\r\nelse{\r\nif(n==1)\r\n{\r\np=m-1;\r\n}\r\nif(m==1)\r\n{\r\np=n-1;\r\n}\r\n}\r\n\r\nif(p==k)\r\nprintf(\"yes\\n\");\r\nelse\r\nprintf(\"no\\n\");\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nint n1,n,m,k;\r\nscanf(\"%d\",&n1);\r\nfor(int i=0;i<n1;i++)\r\n{\r\nscanf(\"%d\",&n);\r\nscanf(\"%d\",&m);\r\nscanf(\"%d\",&k);\r\nif(n*m-1 == k)\r\nprintf(\"yes\\n\");\r\nelse\r\nprintf(\"no\\n\");\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.7576374745417516, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "368dd80720e75741658cd340ed4c3503", "bug_code_uid": "bde1d7c09b6b902407b904ce4f0594f7", "src_uid": "821d48c9a67d37ad7acc50d4d0d0d723", "apr_id": "539e5b078ebd9219d8f9a5de2bc348dd", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n,t,a,b,c,d;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        jump:\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n\n        if(b==c)\n        {\n            printf(\"%d %d %d\\n\",b,b,b);\n            goto jump;\n        }\n\n        else printf(\"%d %d %d\\n\",b,c,c);\n\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,n,t,a,b,c,d;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\n\n        printf(\"%d %d %d\\n\",b,c,c);\n\n    }\n}\n"}
{"similarity_score": 0.6666666666666666, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "43b7136d8aa3bc71736245d14782fed7", "bug_code_uid": "a979946e5e17c2b7b655a6b49bce8a5f", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "e0ba02b984265dd1c0183598b960ae5c", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\t\n\tint num1,num2,x,y,i=0,total;\n\t\n\tscanf(\"%d\",&total);\n\t\n\twhile(i<total){\n\t\n\t\tscanf(\"%d%d\",&num1,&num2);\t\n\t\tx=num1;\n\t\ty=1;\n\t\twhile(x<num2){\n\t\t\twhile(y*x<=num2){\n\t\t\t\tif(x*y<=num2 && y*x!=x){\n\t\t\t\t\tprintf(\"%d %d\\n\",x,x*y);\n\t\t\t\t\t;break;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ty++;\n\t\t\t}\n\t\t\tif(x*y<num2 && y!=x){\n\t\t\t\t\t;break;\n\t\t\t\t}\n\t\t\ty=1;\n\t\t\tx++;\n\t\t}\n\t\n\t\t\n\t\n\t\ti++;\n\t}\n\nreturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\t\n\tint num1,num2,x,y,i=0,total,cont;\n\t\n\tscanf(\"%d\",&total);\n\t\n\twhile(i<total){\n\t\n\t\tscanf(\"%d%d\",&num1,&num2);\t\n\t\tx=num1;\n\t\tcont=0;\n\t\ty=1;\n\t\twhile(cont==0){\n\t\t\twhile(cont==0){\n\t\t\t\tif(x*y<=num2 && y*x!=x){\n\t\t\t\t\tprintf(\"%d %d\\n\",x,x*y);\n\t\t\t\t\tcont=1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ty++;\n\t\t\t}\n\t\t\ty=1;\n\t\t\tx++;\n\t\t}\n\t\n\t\t\n\t\n\t\ti++;\n\t}\n\nreturn 0;\n}"}
{"similarity_score": 0.5137931034482759, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "3cb5d1fd69877e21f446e93ea1c63653", "bug_code_uid": "76588de2404b8e01b904f057b3c981db", "src_uid": "9cc18b914678cb18213b2a52259de35d", "apr_id": "124c18a790759c21a583d8b520045e8f", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main(){\r\n\tint t,n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=1;i<=n;++i){\r\n\t\t\tprintf(\"%d\",i);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n\tint t,n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif(n%2==1){\r\n\t\t\tprintf(\"%d %d %d \",1,2,3);\r\n\t\t\tfor(int i=4;i<=n-3;i+=2){\r\n\t\t\t\tprintf(\"%d %d \",i+1,i);\r\n\t\t\t}\r\n\t\t\tprintf(\"%d %d\",n-1,n);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tfor(int i=1;i<=n-3;i+=2){\r\n\t\t\t\tprintf(\"%d %d \",i+1,i);\r\n\t\t\t}\r\n\t\t\tprintf(\"%d %d \",n-1,n);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9422310756972112, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f275657fce65aabb00881fbae6bb1e60", "bug_code_uid": "4721482de24fcf23ef5e8ed414e06dcd", "src_uid": "c2a506d58a80a0fb6a16785605b075ca", "apr_id": "a616821bf0310801b08999413f7af1a5", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long a,b,c,d,t,i;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\r\n\r\n        if((float)a/(float)b == (float)c/(float)d)\r\n            printf(\"0\\n\");\r\n        else if(a==0 || c==0)\r\n            printf(\"1\\n\");\r\n        else if((b*c)%(a*d)==0 || (a*d)%(b*c)==0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"2\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long a,b,c,d,t,i;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0; i<t; i++)\r\n    {\r\n        scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\r\n\r\n        if((double)a/(double)b == (double)c/(double)d)\r\n            printf(\"0\\n\");\r\n        else if(a==0 || c==0)\r\n            printf(\"1\\n\");\r\n        else if((b*c)%(a*d)==0 || (a*d)%(b*c)==0)\r\n        {\r\n            printf(\"1\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"2\\n\");\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9847328244274809, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7149271e68518344aa75a11a142fa6cf", "bug_code_uid": "9385e8e3cabb760fa4c7b95c3fa201d7", "src_uid": "b7aef95015e326307521fd59d4fccb64", "apr_id": "722fcefffa7062567786334352dd18f0", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\n/*index array used here to access each element in O(1) time just like we can access an element*/\n\nint main()\n{\n    int *array, *indexArray, queries, query, size, i, vasya = 0, petya = 0;\n    scanf(\" %d\", &size);\n    array = (int*)malloc(size*sizeof(int));\n    indexArray = (int*)malloc((size + 1)*sizeof(int));\n    for(i = 0; i<size; i++)\n    {\n        scanf(\" %d\", array + i);\n    }\n    for(i = 0; i<size; i++)\n    {\n        indexArray[array[i]] = i;       \n    }\n    scanf(\" %d\", &queries);\n    for(i = 0; i<queries; i++)\n    {\n        //printf(\"%d\\n\", __LINE__);\n        scanf(\" %d\", &query);\n        vasya += indexArray[query] + 1;\n        petya += size - indexArray[query];\n    }\n    printf(\"%d %d\\n\", vasya, petya);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\n/*index array used here to access each element in O(1) time just like we can access an element*/\n\nint main()\n{\n    int *array, *indexArray, queries, query, size, i;\n    long long int vasya = 0, petya = 0;\n    scanf(\" %d\", &size);\n    array = (int*)malloc(size*sizeof(int));\n    indexArray = (int*)malloc((size + 1)*sizeof(int));\n    for(i = 0; i<size; i++)\n    {\n        scanf(\" %d\", array + i);\n    }\n    for(i = 0; i<size; i++)\n    {\n        indexArray[array[i]] = i;       \n    }\n    scanf(\" %d\", &queries);\n    for(i = 0; i<queries; i++)\n    {\n        //printf(\"%d\\n\", __LINE__);\n        scanf(\" %d\", &query);\n        vasya += indexArray[query] + 1;\n        petya += size - indexArray[query];\n    }\n    printf(\"%lld %lld\\n\", vasya, petya);\n    return 0;\n}"}
{"similarity_score": 0.5040650406504065, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "71a89e588a4e007f736dd255555248ae", "bug_code_uid": "c7b5e6d0250b43f24d5ec202798557f2", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "a0f3d3541c54babfcda2c9cc43e90b79", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    double a,b,c,res;\n\n    scanf(\"%lf %lf %lf\",&a,&b,&c);\n    res=(a+b+c)/3;\n    printf(\"%.12lf\",res);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    double a[105],res,sum=0;\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%lf\",&a[i]);\n        for(i=0;i<n;i++)\n        sum=sum+a[i];\n\n    res=sum/n;\n    printf(\"%.12lf\",res);\n}\n"}
{"similarity_score": 0.5717948717948718, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "4416717a28dcd2231171deedc251ccfa", "bug_code_uid": "3db5219eaa8f7012a85c5bc68e0d099d", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "13c3f2547b17c007757692bf1c2dcf02", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,vowel=0,cons=0,x;\n    char str[1000];\n    scanf(\"%d\",&x);\n    for(i=0;i<x;i++)\n    {\n    scanf(\"%c\",&str[i]);\n        }\n     for(i=0;i<x;i++)   \n    {\n        if(str[i]=='A')\n        vowel++;\n        else\n        cons++;\n    }\n    if(vowel>cons)\n    printf(\"Anton\\n\");\n    else if(vowel==cons)\n    printf(\"Friendship\\n\");\n    else\n    printf(\"Danik\\n\");\n    \n    }", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   long long int x,y=0,z=0,i;\n    char str[1000000];\n    scanf(\"%lld\",&x);\n    for(i=0;i<x+1;i++)\n    {\n        scanf(\"%c\",&str[i]);\n        if(str[i]=='A')\n        y++;\n        else if(str[i]=='D')\n        z++;\n    }\n    if(y>z)\n    printf(\"Anton\");\n    else if(z>y)\n    printf(\"Danik\");\n    else\n    printf(\"Friendship\");\n}"}
{"similarity_score": 0.9979338842975206, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a22da04549fe616aa61f352c96881e30", "bug_code_uid": "b91eaa9c3651005ff6d316db7a4902da", "src_uid": "ccb7b8c0c389ea771f666c236c1cba5f", "apr_id": "e83ec456f7e18227d97b66116e75afd0", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n\nint main(){\n    int cases;\n    int a, b, x, y;\n    scanf(\"%d\", &cases);\n    int area, sol1, sol2;\n    int l;\n    for(int i = 0; i < cases; i++) {\n        scanf(\"%d%d%d%d\", &a, &b, &x, &y);\n        area = a * b;\n        if (x  > a / 2) x = a - x - 1;\n        if (y  > b / 2) y = b - y - 1;\n        sol1 = area - ((x+1) * b);\n        sol2 = area - ((y+1) * a);\n        l = sol1 >= sol2?sol1:sol2;\n        printf(\"%d\\n\", l);\n    }\n    return 0;\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n\nint main(){\n    int cases;\n    int a, b, x, y;\n    scanf(\"%d\", &cases);\n    int area, sol1, sol2;\n    int l;\n    for(int i = 0; i < cases; i++) {\n        scanf(\"%d%d%d%d\", &a, &b, &x, &y);\n        area = a * b;\n        if (x  >= a / 2) x = a - x - 1;\n        if (y  >= b / 2) y = b - y - 1;\n        sol1 = area - ((x+1) * b);\n        sol2 = area - ((y+1) * a);\n        l = sol1 >= sol2?sol1:sol2;\n        printf(\"%d\\n\", l);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8005677785663591, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "b89cfcf67d3cd2af00c97fc048464bbe", "bug_code_uid": "99e63cf6666fcfa00c5ad00e4dcb2409", "src_uid": "594e64eef7acd055d59f37710edda201", "apr_id": "8fc959299d8fa3af112b06db78013382", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k,n,count1=0,count2=0,a[250],b[250];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        count1=0;\n        for(j=0;j<n;j++)\n        {\n            if(a[j]>a[i]&&b[j]==b[i])\n            count1++;\n            else if(a[j]<a[i]&&b[j]==b[i])\n            count1++;\n            else if(a[j]==a[i]&&b[j]<b[i])\n            count1++;\n            else if(a[j]==a[i]&&b[j]>b[i])\n            count1++;\n            else continue;\n        }\n       // printf(\"%d\\n\",count1);\n        if(count1>=4)\n        count2++;\n    }\n    printf(\"%d\\n\",count2);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,k,n,count1=0,count2=0,a[250],b[250],p=0,q=0,r=0,s=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        p=0;q=0;r=0;s=0;\n        for(j=0;j<n;j++)\n        {\n            if(a[j]>a[i]&&b[j]==b[i]&&p!=1){\n            p=1;}\n            else if(a[j]<a[i]&&b[j]==b[i]&&q!=1){\n            q=1;}\n            else if(a[j]==a[i]&&b[j]<b[i]&&r!=1)\n            {\n            r=1;}\n            else if(a[j]==a[i]&&b[j]>b[i]&&s!=1){\n            s=1;\n            }\n            else continue;\n        }\n        count1=p+q+r+s;\n       // printf(\"%d\\n\",count1);\n        if(count1>=4)\n        count2++;\n    }\n    printf(\"%d\\n\",count2);\n    return 0;\n}\n"}
{"similarity_score": 0.9769033361847733, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f8a56b2d9dd3ea1fa369f2abd0f8db69", "bug_code_uid": "51acf9e4d37535804087707e565fabbe", "src_uid": "8e36566b5e0c74730ea118e23b030778", "apr_id": "e36c3fed146a4f264c1a6ee9e8eeb8d0", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \nunsigned long long int test,i,j,n,flag=0,o1=0,o2=0,b1,x,m,l,max,x1,y1,sum2,min,k,f,r,o,sum,count=0,y[100000]={0},flag1=0,a[100]={0},b;\n\nmin=99999999;\nr=1;\nf=0;\nscanf(\"%llu%llu\",&n,&k);\nfor(i=0;i<k;i++){\n    scanf(\"%llu\",&x);\n //   printf(\"%lld %lld\\n\",n%x,x);\n    if(n%x<=min){\n        min=n%x;\n        f=n/x;\n        r=i+1;\n        \n    }\n}\nprintf(\"%llu %llu\\n\",r,f);\n\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\nlong long cmpfunc (const void * a, const void * b) {\n   return ( *(long long*)a - *(long long*)b );\n}\n\n\nint main(void){\n   \nunsigned long long int test,i,j,n,flag=0,o1=0,o2=0,b1,x,m,l,max,x1,y1,sum2,min,k,f,r,o,sum,count=0,y[100000]={0},flag1=0,a[100]={0},b;\n\nmin=1000000000000000000;\nr=1;\nf=0;\nscanf(\"%llu%llu\",&n,&k);\nfor(i=0;i<k;i++){\n    scanf(\"%llu\",&x);\n //   printf(\"%lld %lld\\n\",n%x,x);\n    if(n%x<=min){\n        min=n%x;\n        f=n/x;\n        r=i+1;\n        \n    }\n}\nprintf(\"%llu %llu\\n\",r,f);\n\nreturn 0;\n}"}
{"similarity_score": 0.6610169491525424, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "d03d5bfc23c19d4fd389a446372e6865", "bug_code_uid": "ff6dc4e009eeacf593f837f4506850af", "src_uid": "fb58bc3be4a7a78bdc001298d35c6b21", "apr_id": "94450561b62abbf8ff078a95eec8ba37", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,c,b,a;\n    while(scanf(\"%d%d\",&n,&c)!=EOF)\n    {\n        int max = 1,cot = 1;\n        scanf(\"%d\",&a);\n        for(i=1;i<n;i++)\n        {\n            scanf(\"%d\",&b);\n            if(b - a <= c)\n            {\n                cot++;\n            }\n            else\n            {\n                cot = 1;\n            }\n            if(cot > max)\n                max = cot;\n            a = b;\n        }\n        printf(\"%d\\n\",max);\n    }\n    return 0;\n}\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,c,b,a;\n    while(scanf(\"%d%d\",&n,&c)!=EOF)\n    {\n        int max = 1,cot = 1;\n        scanf(\"%d\",&a);\n        for(i=1;i<n;i++)\n        {\n            scanf(\"%d\",&b);\n            if(b - a <= c)\n            {\n                cot++;\n            }\n            else\n            {\n                cot = 1;\n            }\n            if(cot > max)\n                max = cot;\n            a = b;\n        }\n        printf(\"%d\\n\",max);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,c,b,a;\n    while(scanf(\"%d%d\",&n,&c)!=EOF)\n    {\n        int max = 1,cot = 1;\n        scanf(\"%d\",&a);\n        for(i=1;i<n;i++)\n        {\n            scanf(\"%d\",&b);\n            if(b - a <= c)\n            {\n                cot++;\n            }\n            else\n            {\n                cot = 1;\n            }\n            //if(cot > max)\n             //   max = cot;\n            a = b;\n        }\n        printf(\"%d\\n\",cot);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9800629590766002, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b42767115cbe866e82aa070b78713296", "bug_code_uid": "374b58d622557ba7c1a1eca57600657a", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "4e57cbff0841b88994fa22bcbfad4445", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a, i;\n    int vector[1000];\n    int aux[1001];\n    int max=0;\n    int counter=0;\n    scanf(\"%d\", &a);\n\n    for(i=0;i<1000;i++)\n        aux[i]=0;\n\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\", &vector[i]);\n        aux[vector[i]]++;\n    }\n\n    for(i=0;i<1001;i++)\n    {\n        if(aux[i]!=0)\n            counter++;\n        if(aux[i]>max)\n            max = aux[i];\n    }\n\n    printf(\"%d %d\", max, counter);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int a, i;\n    int vector[1000];\n    int aux[1001];\n    int max=0;\n    int counter=0;\n    scanf(\"%d\", &a);\n\n    for(i=0;i<1000;i++)\n        aux[i]=0;\n\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\", &vector[i]);\n        aux[vector[i]]++;\n    }\n\n    for(i=0;i<1001;i++)\n    {\n        if(aux[i]!=0)\n            counter++;\n        if(aux[i]>max)\n            max = aux[i];\n    }\n\n    printf(\"%d %d\", max, counter);\n    \n    return 0;\n}"}
{"similarity_score": 0.6955307262569832, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f539523c15701449c50aeda7a1e2d68b", "bug_code_uid": "892909a6d0cc58a5fe30fed690cc3b03", "src_uid": "e22b10cdc33a165fbd73b45dc5fbedce", "apr_id": "239b5d8afef6fadf8b53b1f82a210f2c", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint max(int a[],int k)\n{\tint i, max=a[0];\n\tfor(i=1;i<k;i++)\n\t{\n\t\tif(max<a[i])\n\t\tmax=a[i];\n\t}\n\treturn max;\n}\nint main()\n{\n\t\n\n\t\n\tint k;\n\tscanf(\"%d\",&k);\n\tint i,j,b[k],a[k],x[k];\n\tfor(i=0;i<k;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\ta[0]=b[0];\n\tx[0]=0;\n\tprintf(\"%d \",a[0]);\n\tfor(i=1;i<k;i++)\n\t{\t\n\t\t\t\n\t\tx[i]=max(a,i);\n\t\ta[i]=b[i]+x[i];\n\tprintf(\"%d \",a[i]);\n\t}\n\n    \n\n\n\n\n\t\n\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\t\n\n\t\n\tint k,max;\n\tscanf(\"%d\",&k);\n\tint i,j,b[k],a[k],x[k];\n\tfor(i=0;i<k;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t}\n\ta[0]=b[0];\n\tx[0]=0;\n\tprintf(\"%d \",a[0]);\n\tmax=a[0];\n\tfor(i=1;i<k;i++)\n\t{\t\n\t\t\t\n\t\t\n\t\tx[i]=max;\n\t\ta[i]=b[i]+x[i];\n\t\n\tif(max<a[i])\n\t\tmax=a[i];\n\tprintf(\"%d \",a[i]);\n\t}\n\n    \n\n\n\n\n\t\n\n\nreturn 0;\n}"}
{"similarity_score": 0.9950617283950617, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3a352b9c79f94f5d4210696dec1551ad", "bug_code_uid": "e637be8112d577a9f7897efe5552ed4f", "src_uid": "f4804780d9c63167746132c35b2bdd02", "apr_id": "9e57f84c55c0166b1a866f9a0b115b54", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   long int t;\n   scanf(\"%ld\",&t);\n   while(t--)\n   {\n      long x,y,z;\n      scanf(\"%ld%ld%ld\",&x,&y,&z);\n      if(x==y && z<=y)\n         printf(\"YES\\n%ld %ld %ld\",x,z,z);\n      else if(y==z && x<=y)\n         printf(\"YES\\n%ld %ld %ld\",y,x,x);\n      else if(z==x && y<=x)\n         printf(\"YES\\n%ld %ld %ld\\n\",z,y,y);\n      else\n        printf(\"NO\\n\");\n   }\n   return(0);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n   long int t;\n   scanf(\"%ld\",&t);\n   while(t--)\n   {\n      long x,y,z;\n      scanf(\"%ld%ld%ld\",&x,&y,&z);\n      if(x==y && z<=y)\n         printf(\"YES\\n%ld %ld %ld\\n\",x,z,z);\n      else if(y==z && x<=y)\n         printf(\"YES\\n%ld %ld %ld\\n\",y,x,x);\n      else if(z==x && y<=x)\n         printf(\"YES\\n%ld %ld %ld\\n\",z,y,y);\n      else\n        printf(\"NO\\n\");\n   }\n   return(0);\n}"}
{"similarity_score": 0.9988674971687429, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6f9b89e64864ca76c183c86599734ab0", "bug_code_uid": "5c45eb7b90ce0632f628bf80d1231f38", "src_uid": "1378b4c9ba8029d310f07a1027a8c7a6", "apr_id": "8843cd369b5a78ca6418a0d75aea9348", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint i,k,n,arr[1000];\n\tFILE *fp1,*fp2;\n\tfp1=fopen(\"input.txt\",\"r\");\n\tfp2=fopen(\"output.txt\",\"w\");\n\twhile(fscanf(fp1,\"%d\",&n)!=EOF)\n\t{\n\t\tfscanf(fp1,\"%d\",&k);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tfscanf(fp1,\"%d\",&arr[i]);\n\t\t}\n\t\twhile(arr[k]!=1)\n\t\t{\n\t\t\tif(k==n)\n\t\t\t\tk=1;\n\t\t\telse\n\t\t\t\tk++;\n\t\t}\n\t\tprintf(\"%d\\n\",k);\n\t\tfprintf(fp2,\"%d\\n\",k);\n\t\t\t\n\t}\n\tfclose(fp1);\n\tfclose(fp2);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint i,k,n,arr[10000];\n\tFILE *fp1,*fp2;\n\tfp1=fopen(\"input.txt\",\"r\");\n\tfp2=fopen(\"output.txt\",\"w\");\n\twhile(fscanf(fp1,\"%d\",&n)!=EOF)\n\t{\n\t\tfscanf(fp1,\"%d\",&k);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tfscanf(fp1,\"%d\",&arr[i]);\n\t\t}\n\t\twhile(arr[k]!=1)\n\t\t{\n\t\t\tif(k==n)\n\t\t\t\tk=1;\n\t\t\telse\n\t\t\t\tk++;\n\t\t}\n\t\tprintf(\"%d\\n\",k);\n\t\tfprintf(fp2,\"%d\\n\",k);\n\t\t\t\n\t}\n\tfclose(fp1);\n\tfclose(fp2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9958246346555324, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3cdc05c6854f147e12668de2483cfc2c", "bug_code_uid": "5ebd2bfde1f5333b049867f822d4b0f4", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "480c8001d1242cdb9cf83c75f3b54a6f", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint array[1001];\n\nsort(int *array, int n){\n\tfor(int i = 0; i < n-1;i++){\n\t\tfor(int j = n-1 ; j > 0;j--){\n\t\t\tif(array[j] < array[j-1]){\n\t\t\t\tint temp = array[j];\n\t\t\t\tarray[j] = array[j-1];\n\t\t\t\tarray[j-1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(){\n\t\n\tint n;\n\t\n\tint mid;\n\t\n\tscanf(\"%d\", &n);getchar();\n\tfor(int i = 0; i < n;i++){\n\t\tscanf(\"%d\",&array[i]);\n\t}\n\t\n\tsort(array,n);\n\t\n\tif( n%2 == 0) printf(\"%d\", array[n/2]);\n\telse printf(\"%d\",array[(n-1)/2]);\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint array[1001];\n\nsort(int *array, int n){\n\tfor(int i = 0; i < n-1;i++){\n\t\tfor(int j = n-1 ; j > 0;j--){\n\t\t\tif(array[j] < array[j-1]){\n\t\t\t\tint temp = array[j];\n\t\t\t\tarray[j] = array[j-1];\n\t\t\t\tarray[j-1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(){\n\t\n\tint n;\n\t\n\tint mid;\n\t\n\tscanf(\"%d\", &n);getchar();\n\tfor(int i = 0; i < n;i++){\n\t\tscanf(\"%d\",&array[i]);\n\t}\n\t\n\tsort(array,n);\n\t\n\tif( n%2 == 0) printf(\"%d\", array[(n/2)-1]);\n\telse printf(\"%d\",array[(n-1)/2]);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9782608695652174, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0fa1c70deac5f5a98b8dab29440cc9c4", "bug_code_uid": "abb7b7654eb42860d7bdc0ccecce7349", "src_uid": "4841cbc3d3ef29929690b78e30fbf22e", "apr_id": "b8cddc7d0e3923af19fd7af81577e45d", "difficulty": 800, "tags": ["greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,m;\r\n        scanf(\"%d\",&n);\r\n        char a[n+1];\r\n        scanf(\"%s\",a);\r\n        m=a[0];\r\n        for(int i=1;i<n;i++){\r\n            m=(a[i-1]<a[i])? a[i]:a[i-1];\r\n        }\r\n        printf(\"%d\\n\",m-96);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n,m;\r\n        scanf(\"%d\",&n);\r\n        char a[n+1];\r\n        scanf(\"%s\",a);\r\n        m=a[0];\r\n        for(int i=1;i<n;i++){\r\n            m=(m<a[i])? a[i]:m;\r\n        }\r\n        printf(\"%d\\n\",m-96);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7100371747211895, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "51f29205d593ac711cfa65c1ab021e57", "bug_code_uid": "d6c9ffba4b328af221503533e64c11bf", "src_uid": "942123e43a83d5a4cea95a6781064e28", "apr_id": "00bdaf56e58b9ef432764bbf9dedb019", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,m=0;\n    scanf(\"%d\",&i);\n    while(i!=0)\n    {\n        int j;\n        scanf(\"%d\",&j);\n        for(int k=0;k<j;k++)\n        {\n            int l;\n            scanf(\"%d\",&l);\n            if(l%2!=k%2)\n            {\n                m++;\n            }\n        }\n         if(m%2!=0)\n               {\n                   printf(\"-1\");\n               }\n            else\n            {\n               printf(\"%d\",m/2);\n            }\n        printf(\"\\n\");\n        i--;\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,g=0,f=0;\n    scanf(\"%d\",&i);\n    while(i!=0)\n    {\n        int j;\n        scanf(\"%d\",&j);\n        for(int k=0;k<j;k++)\n        {\n            int l;\n            scanf(\"%d\",&l);\n            if(l%2!=0&&k%2==0)\n            {\n                g++;\n            }\n               if(k%2==1&&l%2==0)\n                f++;\n        }\n\n               if(g==f)\n               printf(\"%d\",g);\n               if(g!=f)\n                printf(\"-1\");\n                g=0;\n               f=0;\n\n        printf(\"\\n\");\n        i--;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9894475481067659, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ec254e5b6f2d3bc56d6043318b2a5772", "bug_code_uid": "7b40c51d2fffe00be96a8e679e8ac681", "src_uid": "04e2e1ce3f0b4efd2d4dda69748a0a25", "apr_id": "46b568d85e229b1fde2c53e1104ba93a", "difficulty": 1200, "tags": ["bitmasks", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n//int main(void)\n//{\n//\tint t;\n//\tscanf(\"%d\",&t);\n//\twhile(t--)\n//\t{\n//\t\tint n;\n//\t\tscanf(\"%d\",&n);\n//\t\tint a[n];\n//\t\tfor(int i=0;i<n;i++) scanf(\"%d\",&a[i]);\n//\t\tint sum=0;\n//\t\tfor(int i=0;i<n-1;i++)\n//\t\t{\n//\t\t\tfor(int j=i+1;j<n;j++)\n//\t\t\t{\n//\t\t\t\tif((a[i]&a[j])>=(a[i]^a[j])) sum++;\n//\t\t\t}\n//\t\t}\n//\t\tprintf(\"%d\\n\",sum);\n//\t}\n//\treturn 0;\n//}\n#include<string.h>\nint main(void)\n{\n\tint t,sum[50];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],sum[50],ans=0;\n\t\tmemset(sum,0,sizeof(sum));\n\t\tfor(int i=0;i<n;i++) \n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tint j=30;\n\t\t\twhile(j--)\n\t\t\t{\n\t\t\t\tif(a[i] & (1<<j)) break;\n\t\t\t}\n\t\t\tans+=sum[j];\n\t\t\tsum[j]++;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n\n// 0000 0001 0010 0011 0100 0101 0110 0111\n// 0    1    2    3    4    5    6    7\n", "fixed": "#include<stdio.h>\n//int main(void)\n//{\n//\tint t;\n//\tscanf(\"%d\",&t);\n//\twhile(t--)\n//\t{\n//\t\tint n;\n//\t\tscanf(\"%d\",&n);\n//\t\tint a[n];\n//\t\tfor(int i=0;i<n;i++) scanf(\"%d\",&a[i]);\n//\t\tint sum=0;\n//\t\tfor(int i=0;i<n-1;i++)\n//\t\t{\n//\t\t\tfor(int j=i+1;j<n;j++)\n//\t\t\t{\n//\t\t\t\tif((a[i]&a[j])>=(a[i]^a[j])) sum++;\n//\t\t\t}\n//\t\t}\n//\t\tprintf(\"%d\\n\",sum);\n//\t}\n//\treturn 0;\n//}\n#include<string.h>\nint main(void)\n{\n\tint t,sum[50];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],sum[50];\n\t\tlong long ans=0;\n\t\tmemset(sum,0,sizeof(sum));\n\t\tfor(int i=0;i<n;i++) \n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tint j=30;\n\t\t\twhile(j--)\n\t\t\t{\n\t\t\t\tif(a[i] & (1<<j)) break;\n\t\t\t}\n\t\t\tans+=sum[j];\n\t\t\tsum[j]++;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\n\n// 0000 0001 0010 0011 0100 0101 0110 0111\n// 0    1    2    3    4    5    6    7\n"}
{"similarity_score": 0.9975786924939467, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4d92c647f2b66794815cbd1aa3c63315", "bug_code_uid": "d2498a46c3bba43f541a9e708eff98ed", "src_uid": "910c0e650d48af22fa51ab05e8123709", "apr_id": "0bae7817e0aadb1393fab5ed5b465201", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid d_to_a(int digit)\n{\n\tif(digit)\n\t{\n\t\td_to_a((digit-1)/26);\n\t\tputchar(65 + (digit-1)%26);\n\t}\n}\n\n\nint main()\n{\n\tint n, x, y;\n\tchar s[20] , *p;\n\tfor(scanf(\"%d\", &n); n--;)\n\t{\n\t\tgets(s);\n\t\tif(sscanf(s, \"%*c%d%*c%d\", &x, &y) == 2)  //R23C55\n\t\t{\n\t\t\td_to_a(y);\n\t\t\tprintf(\"%d\\n\", x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(x = 0, p = s; *p > 64; ++p)\n\t\t\t\tx = x*26 + *p - 64;\n\t\t\tprintf(\"R%sC%d\\n\", p, x);\n\t\t}\n\t}\n}\n", "fixed": "#include <stdio.h>\n\nvoid d_to_a(int digit)\n{\n\tif(digit)\n\t{\n\t\td_to_a((digit-1)/26);\n\t\tputchar(65 + (digit-1)%26);\n\t}\n}\n\n\nint main()\n{\n\tint n, x, y;\n\tchar s[20] , *p;\n\tfor(scanf(\"%d\\n\", &n); n--;)\n\t{\n\t\tgets(s);\n\t\tif(sscanf(s, \"%*c%d%*c%d\", &x, &y) == 2)  //R23C55\n\t\t{\n\t\t\td_to_a(y);\n\t\t\tprintf(\"%d\\n\", x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(x = 0, p = s; *p > 64; ++p)\n\t\t\t\tx = x*26 + *p - 64;\n\t\t\tprintf(\"R%sC%d\\n\", p, x);\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.6121270452358036, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "0c068b4759cafc2eeb68b1ce3256eefb", "bug_code_uid": "2fadf31a28586684fef797cffe9fd234", "src_uid": "18b3d8f57ecc2b392c7b1708f75a477e", "apr_id": "801f201f93cc624052384213eff3b2da", "difficulty": 1200, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint Visited[100001];\n\nint main()\n{\n    int N, K, i;\n    scanf(\"%d %d\", &N, &K);\n    i = 1;\n    while(1)\n    {\n        while(Visited[i])\n        {\n            ++i;\n            if(i == N+1)\n            {\n                break;\n            }\n        }\n        if(i == N+1)\n        {\n            break;\n        }\n        Visited[i] = 1;\n        printf(\"%d \", i);\n        if(i+K <= N)\n        {\n            Visited[i+K] = 1;\n            printf(\"%d \", i+K);\n        }\n    }\n    puts(\"\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint Visited[100001];\n\nint main()\n{\n    int N, K, i;\n    scanf(\"%d %d\", &N, &K);\n    i = 1;\n    while(1)\n    {\n        Visited[i] = 1;\n        printf(\"%d \", i);\n        if(!Visited[i+K])\n        {\n            Visited[i+K] = 1;\n            printf(\"%d \", i+K);\n        }\n        ++i;\n        K -= 2;\n        if(K <= 0)\n        {\n            break;\n        }\n    }\n    for(i=1; i<=N; ++i)\n    {\n        if(!Visited[i])\n        {\n            printf(\"%d \", i);\n        }\n    }\n    puts(\"\");\n    return 0;\n}\n"}
{"similarity_score": 0.6777609682299546, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "56cf2695a8904bcc7426ca839e59a927", "bug_code_uid": "4a754e7f77f1caf0d7c6c6fefa04bf4f", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "9c01e476197b9cb434516d102aac165d", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long int i,n,z;\r\n        scanf(\"%lld\",&n);\r\n        for(i=1;i<n;i++)\r\n        if(n%i==0)\r\n        z=n/i;\r\n        if(z%2==1)\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long int i,n,z;\r\n        scanf(\"%lld\",&n);\r\n        while(n%2==0)\r\n        {\r\n            n=n/2;\r\n        }\r\n        if(n==1)\r\n        printf(\"NO\\n\");\r\n        else\r\n        printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9211822660098522, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "6e928b7a6b6bf0dc5e8dafe808153867", "bug_code_uid": "78ee185acf8095302d6acf16c32cce47", "src_uid": "df92643983d6866cfe406f2b36bec17f", "apr_id": "c3b16e40a99e5939f59c11b624837eb0", "difficulty": 1500, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{int n,a;\nscanf(\"%d\",&n);\nif(n<=2)\n{printf(\"-1\");}\nelse{a=n*n;\nif(n%2==0)\n{printf(\"%d %d\",a/4-1,a/4+1);}\nelse if(n%2==1)\n{printf(\"%d %d\",a/2,a/2+1);}}\nreturn 0;}\n\n", "fixed": "#include <stdio.h>\nint main()\n{long long int n,a;\nscanf(\"%lld\",&n);\nif(n<=2)\n{printf(\"-1\");}\nelse{a=n*n;\nif(n%2==0)\n{printf(\"%lld %lld\",a/4-1,a/4+1);}\nelse if(n%2==1)\n{printf(\"%lld %lld\",a/2,a/2+1);}}\nreturn 0;}\n\n"}
{"similarity_score": 0.9868613138686131, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "25cf2e162bf1d4d6f9d050e1e62c6074", "bug_code_uid": "4112915745bcaf40b75abbe52a2c16bc", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "11d1a01f36877abcaa12593c38e9cad5", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) \n{\n\tint na,nb;\n\tint m,k;\n\tscanf(\"%d %d\" ,&na , &nb);\n\tscanf(\"%d %d\" , &k ,&m);\n\tint a[na],b[nb];\n\tfor (int i =0; i<na; i++)\n\t{\n\t    scanf(\"%d\" ,&a[i]);\n\t}\n\tfor (int i =0; i<n; i++)\n\t{\n\t    scanf(\"%d\" ,&b[i]);\n\t}\n\t\n\tif(a[k-1]< b[nb - m])\n\t{   \n\t    printf(\"Yes\");\n\t}\n\telse\n\t{\n\t    printf(\"NO\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() \n{\n\tint na,nb;\n\tint m,k;\n\tscanf(\"%d %d\" ,&na , &nb);\n\tscanf(\"%d %d\" , &k ,&m);\n\tint a[na],b[nb];\n\tfor (int i =0; i<na; i++)\n\t{\n\t    scanf(\"%d\" ,&a[i]);\n\t}\n\tfor (int i =0; i<nb; i++)\n\t{\n\t    scanf(\"%d\" ,&b[i]);\n\t}\n\t\n\tif(a[k-1]< b[nb - m])\n\t{   \n\t    printf(\"YES\");\n\t}\n\telse\n\t{\n\t    printf(\"NO\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8109243697478992, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "4558a315e4974e95f475ec3cc5f0b223", "bug_code_uid": "9f1b874da92e2f4f709fd501f1c0ae97", "src_uid": "87d869a0fd4a510c5e7e310886b86a57", "apr_id": "9a9f4253de938d49f128e983f4674637", "difficulty": 1700, "tags": ["dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define maxN 100010\n\nstruct {\n    int to;\n    int nextID;\n} E[maxN];\n\nint LE[maxN], P[maxN];\nint t[maxN], afs[maxN], lfs[maxN];\n\nvoid dfs( int s ) {\n    afs[s] = 1;\n\n    int ID;\n    for( ID = LE[s]; ID != 0; ID = E[ID].nextID )\n\tif( !afs[E[ID].to] ) {\n\t    P[E[ID].to] = s;\n\t    dfs(E[ID].to);\n\t}\n}\n\nvoid ofs( int s ) {\n    \n    while( s != 0 && !lfs[s] ) {\n\tlfs[s] = 1;\n\ts = P[s];\n    }\n}\n\nint main( void ) {\n    int N, M;\n    scanf(\"%i %i\", &N, &M);\n    \n    int i;\n    for( i = 1; i <= N; i++ )\n\tscanf(\"%i\", &t[i]);\n\n    for( i = 1; i <= M; i++ ) {\n\tint u, v;\n\tscanf(\"%i %i\", &u, &v);\n\n\tE[i].to = v;\n\tE[i].nextID = LE[u];\n\tLE[u] = i;\n    }\n    \n    for( i = 1; i <= N; i++ )\n\tif( t[i] == 1 ) dfs(i);\n\n    for( i = 1; i <= N; i++ )\n\tif( t[i] == 2 && afs[i] ) ofs(i);\n\n    for( i = 1; i <= N; i++ )\n\tprintf(\"%i%c\", (afs[i] && lfs[i]) ? 1 : 0, (i == N) ? '\\n' : ' ');\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define maxN 100010\n\nstruct {\n    int to;\n    int nextID;\n} E[maxN], R[maxN];\n\nint LE[maxN], RE[maxN];\nint t[maxN], afs[maxN], lfs[maxN];\n\nvoid dfs( int s ) {\n    afs[s] = 1;\n\n    int ID;\n    for( ID = LE[s]; ID != 0; ID = E[ID].nextID )\n\tif( !afs[E[ID].to] ) dfs(E[ID].to);\n}\n\nvoid ofs( int s ) {\n    lfs[s] = 1;\n\n    if( t[s] == 1 ) return;\n\n    int ID;\n    for( ID = RE[s]; ID != 0; ID = R[ID].nextID )\n\tif( !lfs[R[ID].to] ) ofs(R[ID].to);\n}\n\nint main( void ) {\n    int N, M;\n    scanf(\"%i %i\", &N, &M);\n    \n    int i;\n    for( i = 1; i <= N; i++ )\n\tscanf(\"%i\", &t[i]);\n\n    for( i = 1; i <= M; i++ ) {\n\tint u, v;\n\tscanf(\"%i %i\", &u, &v);\n\n\tE[i].to = v;\n\tE[i].nextID = LE[u];\n\tLE[u] = i;\n\n\tR[i].to = u;\n\tR[i].nextID = RE[v];\n\tRE[v] = i;\n    }\n    \n    for( i = 1; i <= N; i++ )\n\tif( t[i] == 1 ) dfs(i);\n\n    for( i = 1; i <= N; i++ )\n\tif( t[i] == 2 ) ofs(i);\n\n    for( i = 1; i <= N; i++ )\n\tprintf(\"%i%c\", (afs[i] && lfs[i]) ? 1 : 0, (i == N) ? '\\n' : ' ');\n\n    return 0;\n}\n"}
{"similarity_score": 0.42946708463949845, "equal_cnt": 26, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "569879f4735f08831a061ae957517d03", "bug_code_uid": "303c0223ea35332e88ada2b42426b840", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "c28942ff34dd55095d180e23964f54d0", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,t,l;\n    long long a[100001];\n    int i,j,k;\n    long long sum1=0,sum2=0;\n    scanf(\"%d\",&l);\n    while(l--)\n    {\n        scanf(\"%d%d\",&n,&t);\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%lld\",&a[i]);\n            sum1+=a[i];\n            if(a[i]%t==0)\n                sum2+=a[i]/t;\n            else\n                sum2+=a[i]/t+1;\n        }\n        if(sum1%x!=0)\n            sum1+=1;\n        printf(\"%lld %lld\\n\",sum1/t,sum2);\n        sum1=sum2=0;\n    }\n\n    return 0;\n}\n\n\t  \t\t\t\t\t\t\t     \t   \t \t\t \t  \t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\nint main()\n{\n    long long int t,i,n,x,m[100005],ma,mi;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        mi=0;\n        ma=0;\n        scanf(\"%lld%lld\",&n,&x);\n        for(i=1;i<=n;i++)\n        {\n            scanf(\"%lld\",&m[i]);\n            mi=mi+m[i];\n        }\n        if(mi%x==0)\n            mi=mi/x;\n        else\n            mi=mi/x+1;\n        for(i=1;i<=n;i++)\n        {\n            if(m[i]%x==0)\n                m[i]=m[i]/x;\n            else\n                m[i]=m[i]/x+1;\n            ma=ma+m[i];\n        }\n        printf(\"%lld %lld\",mi,ma);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n\n\t\t\t \t \t\t\t\t\t\t\t\t\t \t   \t      \t  \t"}
{"similarity_score": 0.9725036179450073, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "15ce70424c68a92d4dc72f2c5ef8e1ec", "bug_code_uid": "5336488224a27369d89de412c499c3ea", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "42976b6d3d3d5b1eb614ac0089a3d6cb", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\t\t\t\tint n,a,b,k=0,l=0,a1,b1,i;\n\t\t\t\tscanf(\"%d%d%d\",&n,&a1,&b1);\n\t\t\t\tfor(i=1;i<n;i++)\n\t\t\t\t{\n\t\t\t\t\t\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\t\t\t\t\t\tif(a!=b)k=1;\n\t\t\t\t\t\t\t\tif(a>a1)l=1;\n\t\t\t\t\t\t\t\ta1=a;b1=b;\n\t\t\t\t}\n\t\t\t\tif(k)printf(\"rated\");\n\t\t\t\telse{\n\t\t\t\t\t\t\t\tif(l)printf(\"unrated\");\n\t\t\t\t\t\t\t\telse printf(\"maybe\");\n\t\t\t\t}\n\t\t\t\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\t\t\t\tint n,a,b,k=0,l=0,a1,b1,i;\n\t\t\t\tscanf(\"%d%d%d\",&n,&a1,&b1);\n\t\t\t\tif(a1!=b1)k=1;\n\t\t\t\tfor(i=1;i<n;i++)\n\t\t\t\t{\n\t\t\t\t\t\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\t\t\t\t\t\tif(a!=b)k=1;\n\t\t\t\t\t\t\t\tif(a>a1)l=1;\n\t\t\t\t\t\t\t\ta1=a;b1=b;\n\t\t\t\t}\n\t\t\t\tif(k)printf(\"rated\");\n\t\t\t\telse{\n\t\t\t\t\t\t\t\tif(l)printf(\"unrated\");\n\t\t\t\t\t\t\t\telse printf(\"maybe\");\n\t\t\t\t}\n\t\t\t\treturn 0;\n}"}
{"similarity_score": 0.33373639661426846, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "686b014197eac86608042e05fb190bee", "bug_code_uid": "438b86cf82f6dd2ccf68501dcb5de743", "src_uid": "0bd06900e42db9f83cdd43c24da6686e", "apr_id": "a869b5b42806dec6a0bb287b19763cf1", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(int argc, char *argv[])\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tlong long n,i,ans=0,max=-1000000000000000000,item,dif;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long a[n];\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\titem=a[0];\n\t\tfor(i=1;i<n;i++){\n\t\t\tif(a[i]<item){\n\t\t\t\tdif=item-a[i];\n\t\t\t\tif(max<dif)\n\t\t\t\t\tmax=dif;\n\t\t\t}\n\t\t\tif(a[i]>=item||i==(n-1)){\n\t\t\t\titem=a[i];if(max<-1000)max=0;\n\t\t\t\tans+=max;\nmax=-1000000000000000000;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n}", "fixed": "#include <stdio.h>\nlong long max(long long a,long long b){\n\tif(a>b)return a;\n\treturn b;\n}\nint main(int argc, char *argv[])\n{\n\tint tc;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tlong long n,i,ans=0;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long a[n];\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\tfor(i=0;i<n-1;i++)\n\t\t\tans+=max(a[i]-a[i+1],0);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n}"}
{"similarity_score": 0.9295302013422819, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "cd19d4d1531c38ad71428425199e1acd", "bug_code_uid": "2c3f42265c6c8a83bb35e35c2d93c225", "src_uid": "1e156dfc65ef88f19ca1833f75192259", "apr_id": "e551fb522a0b610e5d76f56dee9828ed", "difficulty": 1100, "tags": ["data structures", "dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef unsigned u;\nchar M[100001];\nu m[100001],s[100001];\nint main()\n{\n\tu n,k,i;\n\tscanf(\"%u%u\",&n,&k);\n\tfor(i=0;i<n;scanf(\"%u\",m+i++));\n\tfor(i=n;i--;)\n\t{\n\t\ts[i]=s[i+1];\n\t\tif(!M[m[i]]){M[m[i]]=1;s[i]++;}\n\t}\n\twhile(k--)\n\t{\n\t\tscanf(\"%u\",&n);\n\t\tprintf(\"%u\\n\",s[n]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef unsigned u;\nchar M[100001];\nu m[100001],s[100001];\nint main()\n{\n\tu n,k,i;\n\tscanf(\"%u%u\",&n,&k);\n\tfor(i=0;i<n;scanf(\"%u\",m+i++));\n\tfor(i=n;i--;)\n\t{\n\t\ts[i]=s[i+1];\n\t\tif(!M[m[i]]){M[m[i]]=1;s[i]++;}\n\t}\n\twhile(k--)\n\t{\n\t\tscanf(\"%u\",&n);\n\t\tprintf(\"%u\\n\",s[n-1]);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9540816326530612, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8be752f1970193d1940839e84bfa177d", "bug_code_uid": "39ae04aceb4384b6b4ca7b7e071af430", "src_uid": "7ed9265b56ef6244f95a7a663f7860dd", "apr_id": "a27225d8b7fe8a1bbf64618eeea9f4e2", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,p1,p2,p3,t1,t2,a,b,i,lr=0,power=0;\n    scanf(\"%d %d %d %d %d %d\",&n,&p1,&p2,&p3,&t1,&t2);\n    scanf(\"%d %d\",&a,&b);\n    power+=(b-a)*p1;\n    lr=b;\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        power+=(b-a)*p1;\n        if(lr+t1<=a)\n        {\n            power+=(t1*p1);\n            if(lr+t1+t2<=a)\n                power+=(t2*p2)+(a-lr-t1-t2)*p3;\n        }\n        else\n            power+=(a-lr)*p1;\n        lr=b;\n    }\n    printf(\"%d\",power);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,p1,p2,p3,t1,t2,a,b,i,lr=0,power=0;\n    scanf(\"%d %d %d %d %d %d\",&n,&p1,&p2,&p3,&t1,&t2);\n    scanf(\"%d %d\",&a,&b);\n    power+=(b-a)*p1;\n    lr=b;\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        power+=(b-a)*p1;\n        if(lr+t1<=a)\n        {\n            power+=(t1*p1);\n            if(lr+t1+t2<=a)\n                power+=(t2*p2)+(a-lr-t1-t2)*p3;\n            else\n                power+=(a-lr-t1)*p2;\n        }\n        else\n            power+=(a-lr)*p1;\n        lr=b;\n    }\n    printf(\"%d\",power);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7310149041873669, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "6749c378d4b04386559b48d8838ece80", "bug_code_uid": "937315959be50338edcab8c2bcbe5aa2", "src_uid": "25232f4244004fa4c130892957e5de84", "apr_id": "cadb80b5f75424528cb763138e22a3be", "difficulty": 1900, "tags": ["dp", "combinatorics", "two pointers", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[1000001],d[1001];\nint main()\n{\n    int n,k,i,j,flag=0;\n    scanf(\"%d%d\",&n,&k);\n    for(i=1;i<=n;++i)\n    {\n        scanf(\"%d\",a+i);\n        if(flag)\n            continue;\n        a[i]%=k;\n        if(!a[i])\n        {\n            flag=1;\n            continue;\n        }\n        for(j=1;j<k;++j)\n        {\n            if(d[j])\n            {\n                d[(j+a[i])%k]=1;\n                if((j+a[i])%k==0)\n                {\n                    flag=1;\n                    break;\n                }\n            }\n        }\n        d[a[i]]=1;\n    }\n    if(flag)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint a[1000001],d[1001],e[1001];\nint main()\n{\n    int n,k,i,j,flag=0;\n    scanf(\"%d%d\",&n,&k);\n    for(i=1;i<=n;++i)\n    {\n        scanf(\"%d\",a+i);\n        if(flag)\n            continue;\n        a[i]%=k;\n        if(!a[i])\n        {\n            flag=1;\n            continue;\n        }\n        for(j=1;j<k;++j)\n        {\n            if(d[j])\n            {\n                if((j+a[i])%k==0)\n                {\n                    flag=1;\n                    break;\n                }\n                e[(j+a[i])%k]=1;\n            }\n        }\n        if(flag)\n            continue;\n        for(j=1;j<k;++j)\n            if(e[j])d[j]=e[j];\n        d[a[i]]=1;\n    }\n    if(flag)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n    return 0;\n}\n"}
{"similarity_score": 0.16887417218543047, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "d3310380abc15e37f2fe5e0d6983fd8f", "bug_code_uid": "9a2c3f2ae9ce58e9ba98dc79b0ff085d", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "2abaf1b1db345cb95a7d49bce9ea74d7", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\t// your code goes here\n\tfloat n,m;\n    float a,b;\n\tdouble min=100000;\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++)\n\t{\n\t   cin>>a>>b; \n\t   if((a/b)<min)\n\t   min=a/b;\n\n\t}\n    cout<<setprecision(9)<<m*min;\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint i,j,x,n,a[5000][2]={0};\n\tdouble ans,min=1000.0;\n\tscanf(\"%d %d\",&x,&n);\n\tfor(i=0;i<x;i++)\n\tfor(j=0;j<2;j++)\n\tscanf(\"%d\",&a[i][j]);\n\tfor(i=0;i<x;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tif(j==1)\n\t\t\tans=(double)a[i][j-1]/a[i][j];\n\t\t}\n\t\tmin=min>ans ? ans:min;\n\t}\n\tans=min*n;\n\tprintf(\"%.8lf\",ans);\n\treturn 0;\n} \n"}
{"similarity_score": 0.673469387755102, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c4e61303ab610bfcc66af0b94784a365", "bug_code_uid": "52faedad39cf4965075e0862441e49c6", "src_uid": "a850dd88a67a6295823e70e2c5c857c9", "apr_id": "acdf9e6611267b2894fa34e9a0705b94", "difficulty": 1500, "tags": ["dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tlong long int n,i,j,count=1,p,q;\n\tscanf(\"%lld\",&n);\n\tlong long int trees[n][2];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&trees[i][j]);\n\t\t}\n\t}\n\tfor(p=1;p<(n-1);p++)\n\t{\n\t\t\n\t\t if(trees[p-1][0]<(trees[p][0]-trees[p][1]))\n\t\t\tcount++;\n\n\n\t\t else if((trees[p][0]+trees[p][1])<trees[p+1][0])\n\t\t\t count++;\n\t}\n\tprintf(\"%lld\",count);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long int n,i,j,count=1,p,q;\n\tscanf(\"%lld\",&n);\n\tlong long int trees[n][2];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<2;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&trees[i][j]);\n\t\t}\n\t}\n\tif(n==1|| n==2){\n\t\tprintf(\"%lld\\n\", n);\n\t\treturn 0;\n\t}\n\tcount=2;\n\tfor(p=1;p<n-1;p++)\n\t{\n\t\t\n\t\t if(trees[p-1][0]<(trees[p][0]-trees[p][1])){\n\t\t\tcount++;\n\t\t }\n\n\n\t\t else if((trees[p][0]+trees[p][1])<trees[p+1][0]){\n\t\t\t trees[p][0]+=trees[p][1];\n\t\t\t count++;\n\t\t }\n\t}\n\tprintf(\"%lld\",count);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9336734693877551, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "cd573433eff80b3856f417dbd596398c", "bug_code_uid": "b6588850b42e8b20a03a75779a36f6c8", "src_uid": "14950fe682a063b1ae96332e273dea01", "apr_id": "cf514936eb9293a129a3a4a3a90fbaf9", "difficulty": 2000, "tags": ["ternary search"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define eps (ld)(1e-15)\ntypedef unsigned u;\ntypedef long double ld;\ntypedef double d;\nd N[222222];\nint main()\n{\n\tu n,i=-1;ld lo,hi,md,s,mi,ma,min,man;\n\tfor(scanf(\"%u\",&n);++i<n;scanf(\"%lf\",N+i));\n\tlo=0.0;hi=20002.0;\n\twhile((md=(lo+hi)/2.0)-lo>eps)\n\t{\n\t\ts=md-10001.0;\n\t\tmi=ma=min=man=0.0;\n\t\tfor(i=-1;++i<n;)\n\t\t{\n\t\t\tmin+=N[i]+s;\n\t\t\tman+=N[i]+s;\n\t\t\tif(min>0.0)min=0.0;\n\t\t\tif(man<0.0)man=0.0;\n\t\t\tif(mi>min)mi=min;\n\t\t\tif(ma<man)ma=man;\n\t\t}\n\t\tmi=-mi;\n\t\tif(mi>ma)lo=md;\n\t\telse hi=md;\n\t}\n\tprintf(\"%.15lf\\n\",(d)(ma>mi?ma:mi));\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<time.h>\n#define eps (ld)(1e-14)\ntypedef unsigned u;\ntypedef long double ld;\ntypedef double d;\nd N[222222];\nint main()\n{\n\td st=clock();\n\tu n,i=-1;ld lo,hi,md,s,mi,ma,min,man;\n\tfor(scanf(\"%u\",&n);++i<n;scanf(\"%lf\",N+i));\n\tlo=0.0;hi=20002.0;\n\twhile((md=(lo+hi)/2.0)-lo>eps)\n\t{\n\t\ts=md-10001.0;\n\t\tmi=ma=min=man=0.0;\n\t\tfor(i=-1;++i<n;)\n\t\t{\n\t\t\tmin+=N[i]+s;\n\t\t\tman+=N[i]+s;\n\t\t\tif(min>0.0)min=0.0;\n\t\t\tif(man<0.0)man=0.0;\n\t\t\tif(mi>min)mi=min;\n\t\t\tif(ma<man)ma=man;\n\t\t}\n\t\tmi=-mi;\n\t\tif(mi>ma)lo=md;\n\t\telse hi=md;\n\t\tif((clock()-st)/CLOCKS_PER_SEC>1.8)break;\n\t}\n\tprintf(\"%.15lf\\n\",(d)(ma>mi?ma:mi));\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.330749354005168, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "9198e536da1516c13bc88d45d946d5a3", "bug_code_uid": "2ef7552ed081fe09adb018ccd2d09c88", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "a13837faef5372555f4a1be769e5857a", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int mut(long long int a){return (a<0)?-a:a;}\nint main(){\n\tlong long int i,j,n,x[100005] = {0},min,max;\n\tscanf(\"%lld\",&n);\n\tfor(i = 0 ; i < n ; i++)\n\t\tscanf(\"%lld\",&x[i]);\n\tfor(i = 0 ; i < n ; i++){\n\t\tmin = 10000000000000000;\n\t\tmax = -100;\n\t\tfor(j = i+1 ; j < n ; j++){\n\t\t\tif(mut(x[j]-x[i])<min)\n\t\t\t\tmin  = mut(x[j]-x[i]);\n\t\t\tif(mut(x[j]-x[i])>max)\n\t\t\t\tmax = mut(x[j]-x[i]);\n\t\t}\n\t\tfor(j = 0 ; j < i ; j++){\n\t\t\tif(mut(x[j]-x[i])<min)\n\t\t\t\tmin  = mut(x[j]-x[i]);\n\t\t  \tif(mut(x[j]-x[i])>max)\n\t\t\t\tmax = mut(x[j]-x[i]);\n\t\t}\n\t\tprintf(\"%lld %lld\\n\",min,max);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int mut(long long int a){return (a<0)?-a:a;}\nlong long int min(long long int a,long long int b){return (a>b)?b:a;}\nlong long int max(long long int a,long long int b){return (a<b)?b:a;}\nint main(){\n\tlong long int i,n,x[100005] = {0};\n\tscanf(\"%lld\",&n);\n\tfor(i = 0 ; i < n ; i++)\n\t\tscanf(\"%lld\",&x[i]);\n\tprintf(\"%lld %lld\\n\",x[1]-x[0],x[n-1]-x[0]);\n\tfor(i = 1 ; i < n-1 ; i++)\n\t\tprintf(\"%lld %lld\\n\",min(mut(x[i]-x[i-1]),mut(x[i]-x[i+1])),max(mut(x[i]-x[0]),mut(x[i]-x[n-1])));\n\tprintf(\"%lld %lld\\n\",x[n-1]-x[n-2],x[n-1]-x[0]);\n\treturn 0;\n}\n"}
{"similarity_score": 0.32489451476793246, "equal_cnt": 17, "replace_cnt": 14, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "82a388fbd4096c62423797888f36beea", "bug_code_uid": "d4a305c4385a724c5ca6f8ee590e6109", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "f95a717f8cdb7f8f8bbabbd8645527ae", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n\n\n    int n,s,val,co=0;\n    scanf(\"%d\",&n);\nint i=0;\n\n    while(i<n){\n\n    int count[200001]={0};\n    int h;\n    scanf(\"%d\",&h);\n    int ar[h];\n\n for(int i=0; i<h; i++){\n        scanf(\"%d\",&ar[i]);\n }\n\n\n\n    for(int i=0; i<h; i++){\n         val=ar[i];\n\n        count[val]++;\n\n\n    }\n\nfor(int v=0; v<=n; v++){\n\n         if(count[v]>=3){\n            printf(\"%d\",v);\n           co++;\n           break;\n        }\n\n\n}\n\nif(co==0)\n    {\n            printf(\"-1\");\n        }\n\n\nprintf(\"\\n\");\ni++;\n    }\n\n\n\n\n}\n\n\t\t  \t \t\t \t\t \t \t    \t \t \t\t\t \t  \t", "fixed": "#include<stdio.h>\n\nint main() {\n\n    int t,n,r;\n    scanf(\"%d\",&t);\n    while(t>0) {\n        int a[200001]={0},e=-1;\n        scanf(\"%d\",&n);\n        for(int i=0;i<n;i++) {\n            scanf(\"%d\",&r);\n            a[r]++;\n            if(a[r]>2) {\n                e=r;\n            }\n        }\n        printf(\"%d\\n\",e);\n        t--;\n    }\n}\n\t  \t\t\t\t  \t  \t   \t \t\t    \t  \t"}
{"similarity_score": 0.7687400318979266, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "c9129bf390b4b206c7947898acf5cf22", "bug_code_uid": "2d3867bb248ab1fac5d8fba04b64cd4d", "src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "apr_id": "74e1418930895823fe8755f35ced392f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\nint n,a[1000],j,i,min=1000,c,p,q;\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++)\nscanf(\"%d\",&a[i]);\nfor(i=1;i<=n;i++){\n    for(j=i+1;j<=n;j++){\n        c=abs(a[i]-a[j]);\n        if(c<=min){\n            min=c;\n            p=i;\n            q=j;\n        }\n    }\n}\nprintf(\"%d %d\",p,q);\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\nint n,j,i,min=1000,c,p,q;\nscanf(\"%d\",&n);\nint a[n+1];\nfor(i=1;i<=n;i++)\nscanf(\"%d\",&a[i]);\na[0]=a[n];\nfor(i=0;i<=n;i++){\n        c=abs(a[i]-a[i+1]);\n        if(c<min){\n            min=c;\n            p=i;\n            q=i+1;\n        }\n    }\nif(p==0) p=n;\nprintf(\"%d %d\",p,q);\nreturn 0;\n}\n"}
{"similarity_score": 0.23529411764705882, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "ec23ace2f3cbea189ae465f1e2bb32aa", "bug_code_uid": "96824c2f6303f72fa951214030991981", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "c5f0911569bc161d8a37ae487dabda1b", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nusing namespace std;\nmain()\n{\n\tlong long int n,i,t;\n\tcin>>n;\n\tint a[n];\n\tfor(i=0;i<n;i++)cin>>a[i];\n\tif(n%2==0)\n\t{\n\t\tfor(i=0;i<(n/2)-1;i++)\n\t\t{\n\t\t\tt=a[i];\n\t\t\ta[i]=a[n-i-1];\n\t\t\ta[n-i-1]=t;\n\t\t}\n\t\n\t}else\n\t{\n\t\tfor(i=0;i<n/2;i++)\n\t\t{\n\t\t\tt=a[i];\n\t\t\ta[i]=a[n-i-1];\n\t\t\ta[n-i-1]=t;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\tcout<<a[i]<<\" \";\n\t\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,i,t;\n\tscanf(\"%I64d\",&n);\n\tlong long int s[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%I64d\",&s[i]);\n\tfor(i=0;i<n/2;i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tt=s[i];\n\t\ts[i]=s[n-i-1];\n\t\t\t\ts[n-i-1]=t;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\tprintf(\"%I64d \",s[i]);\n}"}
{"similarity_score": 0.9778534923339012, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "534a9244afb393758ed143708327b11d", "bug_code_uid": "01298d6d58755b2e9a188c0e255fc726", "src_uid": "97697eba87bd21ae5c979a5ea7a81cb7", "apr_id": "cbb4d9aa3dc5c044210cddc1cf189c99", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint a[200100],n,i,f=1;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(!a[i])\n\t\t\tcontinue;\n\t\tif(a[i]<0)\n\t\t{\n\t\t\tf=0;\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i]&1)\n\t\t\ta[i+1]--;\n\t}\n\tif(f)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint a[200100],n,i,f=1;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\ta[n+1]=0;\n\tfor(i=1;i<=n+1;i++)\n\t{\n\t\tif(!a[i])\n\t\t\tcontinue;\n\t\tif(a[i]<0)\n\t\t{\n\t\t\tf=0;\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i]&1)\n\t\t\ta[i+1]--;\n\t}\n\tif(f)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.352, "equal_cnt": 16, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "8fed0a1c64df81283e2be28d4add02e5", "bug_code_uid": "b179c59dd2f29e004a483f6f9ac95ef2", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "8ae63441deff95f2b82453782f4e7392", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int max=0,maxxi=0,a[1000],b[1000],n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",a[i]);\n        scanf(\"%d\",b[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        maxxi=b[i]-a[i+1]+b[i+1];\n        if(maxxi>max)\n        {\n            max=maxxi;\n        }\n    }\n    printf(\"%d\\n,max);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n\nint main () {\n    int n;\n    int maxx;\n    int s;\n    int x;\n    int y;\n    int i;\n    scanf(\"%d\", &n);\n    s = 0;\n    maxx = 0;\n    for (i = 0; i < n; i++) {\n        scanf(\"%d %d\", &x, &y);\n        s -= x;\n        s += y;\n        if (s > maxx) {\n            maxx = s;\n        }\n    }\n    printf(\"%d\", maxx);\n    return 0;\n}"}
{"similarity_score": 0.990228013029316, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "06dad68bdb5da0d2ad8405f0c33e23a9", "bug_code_uid": "e77d0dd047dc75ab122d81b4e8b75548", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "d00932c3d2ab66b059854c700d45f232", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i,n,j;\r\n    int sum;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n+1];\r\n        for(j=1;j<=n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            sum=sum+a[j];\r\n        }\r\n        if(sum==n)\r\n            printf(\"0\\n\");\r\n        else if(sum>0)\r\n            printf(\"%d\\n\",sum-n);\r\n        else if(sum<=0)\r\n            printf(\"1\\n\");\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,i,n,j;\r\n    int sum;\r\n    scanf(\"%d\",&t);\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d\",&n);\r\n        int a[n+1];\r\n        for(j=1;j<=n;j++)\r\n        {\r\n            scanf(\"%d\",&a[j]);\r\n            sum=sum+a[j];\r\n        }\r\n        if(sum==n)\r\n            printf(\"0\\n\");\r\n        else if(sum>0&&sum>n)\r\n            printf(\"%d\\n\",sum-n);\r\n        else if(sum<=n)\r\n            printf(\"1\\n\");\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9684848484848485, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "42a2767d8facd50ef6a34e42dbef43fa", "bug_code_uid": "32c2ea3ab59438c1a6afc4e09dd5ced4", "src_uid": "7899a22cee29bb96d671f6188f246c21", "apr_id": "791829c86f8ccc4f8336870159e3a98c", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n][2];\n    int i,j;\n    int g[n][2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i][0],&a[i][1]);\n    }\n\n    int b[100000],c[100000];\n    for(i=0;i<100000;i++)\n        b[i]=0;\n    for(i=0;i<100000;i++)\n        c[i]=0;\n    for(i=0;i<n;i++)\n    {\n        b[a[i][0]]++;\n    }\n    for(i=0;i<n;i++)\n    {\n        c[a[i][1]]++;\n    }\n\n    int check[n];\n    for(i=0;i<n;i++)\n    {\n        check[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[a[i][1]]>=1)\n        {\n            check[i]=b[a[i][1]];\n        }\n\n    }\n    for(i=0;i<n;i++)\n    {\n        g[i][0]=n-1+check[i];\n\n    }\n    for(i=0;i<n;i++)\n    {\n        g[i][1]=2*(n-1) - g[i][0];\n    }\n\n\n\n\n\n\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d %d\\n\",g[i][0],g[i][1]);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n][2];\n    int i,j;\n    int g[n][2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i][0],&a[i][1]);\n    }\n\n    int b[100001],c[100001];\n    for(i=0;i<100001;i++)\n        b[i]=0;\n    for(i=0;i<100001;i++)\n        c[i]=0;\n    for(i=0;i<n;i++)\n    {\n        b[a[i][0]]++;\n    }\n    for(i=0;i<n;i++)\n    {\n        c[a[i][1]]++;\n    }\n\n    int check[n];\n    for(i=0;i<n;i++)\n    {\n        check[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(b[a[i][1]]>=1)\n        {\n            check[i]=b[a[i][1]];\n        }\n\n    }\n    for(i=0;i<n;i++)\n    {\n        g[i][0]=n-1+check[i];\n\n    }\n    for(i=0;i<n;i++)\n    {\n        g[i][1]=2*(n-1) - g[i][0];\n    }\n\n\n\n\n\n\n    for(i=0;i<n;i++)\n    {\n        printf(\"%d %d\\n\",g[i][0],g[i][1]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9926071956628881, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "2f231a7cd069f51eb53f5539ec0c9124", "bug_code_uid": "2bb1e065b94ad743ab1fa137e2d923e6", "src_uid": "322792a11d3eb1df6b54e8f89c9a0490", "apr_id": "a9469fd9b50904a2a168fb009fe2d28d", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint sumarr(int arr[],int n){\r\n    int sum=0;\r\n    for(int i=0;i<n;i++)\r\n       sum=sum+arr[i];\r\n    return sum;   \r\n}\r\nvoid min(int i,int arr[2],int s,int allow,int help[1024],int j,int sum){\r\n    if(sum==s){\r\n        if(arr[1]<arr[0])\r\n            arr[0]=arr[1];\r\n        return ;    \r\n    }\r\n    if(sum>s)\r\n       return ;\r\n    arr[1]++;\r\n    help[j]=i+1;\r\n    sum=sum+i+1;\r\n    min((i+1),arr,s,1,help,j+1,sum);\r\n    sum=sum-i-1;\r\n    if(allow==1){\r\n        help[j]=i;\r\n        sum=sum+i;\r\n        min((i),arr,s,1,help,j+1,sum);\r\n        sum=sum-i;\r\n        help[j]=i+2;\r\n        sum=sum+i+2;\r\n        min((i+2),arr,s,1,help,j+1,sum);\r\n        sum=sum-i-2;\r\n    }\r\n    arr[1]--;\r\n    return ;\r\n}\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int arr[t];\r\n    int j=0;\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int i=1;\r\n        while(n/(i*i)!=0)  i++;\r\n        arr[j++]=i;\r\n    }\r\n    for(int i=0;i<j;i++)\r\n       printf(\"%d\\n\",arr[i]);\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nint sumarr(int arr[],int n){\r\n    int sum=0;\r\n    for(int i=0;i<n;i++)\r\n       sum=sum+arr[i];\r\n    return sum;   \r\n}\r\nvoid min(int i,int arr[2],int s,int allow,int help[1024],int j,int sum){\r\n    if(sum==s){\r\n        if(arr[1]<arr[0])\r\n            arr[0]=arr[1];\r\n        return ;    \r\n    }\r\n    if(sum>s)\r\n       return ;\r\n    arr[1]++;\r\n    help[j]=i+1;\r\n    sum=sum+i+1;\r\n    min((i+1),arr,s,1,help,j+1,sum);\r\n    sum=sum-i-1;\r\n    if(allow==1){\r\n        help[j]=i;\r\n        sum=sum+i;\r\n        min((i),arr,s,1,help,j+1,sum);\r\n        sum=sum-i;\r\n        help[j]=i+2;\r\n        sum=sum+i+2;\r\n        min((i+2),arr,s,1,help,j+1,sum);\r\n        sum=sum-i-2;\r\n    }\r\n    arr[1]--;\r\n    return ;\r\n}\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int arr[t];\r\n    int j=0;\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int i=1;\r\n        \r\n        while(n-(i*i)>0)  i++;\r\n        arr[j++]=i;\r\n    }\r\n    for(int i=0;i<j;i++)\r\n       printf(\"%d\\n\",arr[i]);\r\n}"}
{"similarity_score": 0.9793205317577548, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "0fcc59187fdd87223927dab0ce3b0cf4", "bug_code_uid": "d8e0b88a197cd76638d87a09dece938f", "src_uid": "daabf732540e0f66d009dc211c2d7b0b", "apr_id": "06758045ffc2d817681fc17b10b45346", "difficulty": 1500, "tags": ["number theory", "brute force", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int vis[100006];\nint main()\n{\n    long long int n,x,a[100006],freq[100006],k,i,ans;\n    scanf(\"%lld%lld\",&n,&x);\n    for(i=1;i<=100005;i++)\n    {freq[i]=0;\n    vis[i]=0;}\n    for(i=1;i<=n;i++)\n    {scanf(\"%lld\",&a[i]);\n    freq[a[i]]++;}\n    ans=0;\n    \n    if(x==0)\n    {\n         for(i=1;i<=100000;i++)\n         {\n              ans+=(freq[i]*(freq[i]-1))/2;\n         }\n    }\n    else\n    {\n        for(i=1;i<=n;i++)\n        {\n               k=x^a[i];          \n               if(vis[a[i]]==0&&vis[k]==0){   \n               ans+=freq[a[i]]*freq[k];\n               vis[k]=1;\n               vis[a[i]]=1;}\n        }\n    }\n    printf(\"%lld\\n\",ans);\n}\n", "fixed": "#include<stdio.h>\nlong long int vis[1000006],freq[1000006];\nint main()\n{\n    long long int n,x,a[100006],k,i,ans;\n    scanf(\"%lld%lld\",&n,&x);\n    for(i=1;i<=100005;i++)\n    {freq[i]=0;\n    vis[i]=0;}\n    for(i=1;i<=n;i++)\n    {scanf(\"%lld\",&a[i]);\n    freq[a[i]]++;}\n    ans=0;\n    \n    if(x==0)\n    {\n         for(i=1;i<=100000;i++)\n         {\n              ans+=(freq[i]*(freq[i]-1))/2;\n         }\n    }\n    else\n    {\n        for(i=1;i<=n;i++)\n        {\n               k=x^a[i];          \n               if(vis[a[i]]==0&&vis[k]==0){   \n               ans+=freq[a[i]]*freq[k];\n               vis[k]=1;\n               vis[a[i]]=1;}\n        }\n    }\n    printf(\"%lld\\n\",ans);\n}\n"}
{"similarity_score": 0.9458128078817734, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "6a48d6f494044a7a37cd1d1c1c4139ab", "bug_code_uid": "9e1a1925a62a829818bb0e53b07d1bd8", "src_uid": "6ee356f2b3a4bb88087ed76b251afec2", "apr_id": "c4ba7e945010e364a87175573b81daf5", "difficulty": 1500, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint check(char s1[],char ans[])\n{\n\tif(strcmp(s1,ans)<0)\n\t\treturn 1;\n\telse \n\t\treturn 0;\n}\n\nvoid add(char s1[],char s[],int n)\n{\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='9')\n\t\t\ts1[i]='0';\n\t\telse\n\t\t\ts1[i]=s[i]+1;\n\t}\n\n}\n\nvoid rotate(char s2[],char s1[],int n)\n{\n\ts2[0]=s1[n-1];\n\tfor(int l=1;l<n;l++)\n\t{\t\n\t\ts2[l]=s1[l-1];\n\t}\n\n}\n\nint main()\n{\n\tint n,r;\n\tscanf(\"%d\",&n);\n\n\tchar s[n],s1[n],s2[n],ans[n];\n\tscanf(\"%s\",s);\n\n\n\tstrcpy(ans,s);\n\n\tfor(int k=0;k<10;k++)\n\t{\n\t\tadd(s1,s,n);\n\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\trotate(s2,s1,n);\n\t\t\t\t\t\n\t\t\tr=check(s2,ans);\n\t\t\tif(r==1)\n\t\t\t\tstrcpy(ans,s2);\n\t\t\tstrcpy(s1,s2);\n\t\t\t\n\t\t}\n\t\tstrcpy(s,s1);\n\n\t}\n\n\tprintf(\"%s\",ans);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint check(char s1[],char ans[])\n{\n\tif(strcmp(s1,ans)<0)\n\t\treturn 1;\n\telse \n\t\treturn 0;\n}\n\nvoid add(char s1[],char s[],int n)\n{\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='9')\n\t\t\ts1[i]='0';\n\t\telse\n\t\t\ts1[i]=s[i]+1;\n\t}\n\ts1[n]='\\0';\n\n}\n\nvoid rotate(char s2[],char s1[],int n)\n{\n\ts2[0]=s1[n-1];\n\tfor(int l=1;l<n;l++)\n\t{\t\n\t\ts2[l]=s1[l-1];\n\t}\n\ts2[n]='\\0';\n}\n\nint main()\n{\n\tint n,r;\n\tscanf(\"%d\",&n);\n\n\tchar s[1001],s1[1001],s2[1001],ans[1001];\n\tscanf(\"%s\",s);\n\n\n\tstrcpy(ans,s);\n\n\tfor(int k=0;k<10;k++)\n\t{\n\t\tadd(s1,s,n);\n\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\trotate(s2,s1,n);\n\t\t\t\t\t\n\t\t\tr=check(s2,ans);\n\t\t\tif(r==1)\n\t\t\t\tstrcpy(ans,s2);\n\t\t\tstrcpy(s1,s2);\n\t\t\t\n\t\t}\n\t\tstrcpy(s,s1);\n\n\t}\n\n\tprintf(\"%s\",ans);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7113985448666128, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "3c31278340a63126079cb690f17d117d", "bug_code_uid": "72f1f06f7be7008fa36922678578b013", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "2441855abf84efab1d36ec24e3d72e04", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int m,i,j,k,l,temp,sum=0;\n     scanf(\"%d\",&m);\n      int arr[m];\n        for(i=0;i<m;i++){\n            scanf(\"%d\",&arr[i]);\n                                    }\n                        for(j=0;j<m;j++){\n                    for(k=0;k<m-j;k++){\n                if(arr[k]>arr[k+1]){\n            temp=arr[k];\n        arr[k]=arr[k+1];\n    arr[k+1]=temp;\n\n                }\n                    }\n\n                        }\n\n\n                        for(l=0;l<m;l=l+2)\n                        {\n                            sum=sum+arr[l+1]-arr[l];\n                        }\n                        printf(\"%d\",sum);\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,l,temp;\n     scanf(\"%d\",&n);\n      int arr[n];\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&arr[i]);\n                                    }\n                        for(j=0;j<n;j++){\n                    for(k=0;k<n-j;k++){\n                if(arr[k]>arr[k+1]){\n            temp=arr[k];\n        arr[k]=arr[k+1];\n    arr[k+1]=temp;\n\n                }\n                    }\n\n                        }\n\n                      if(n%2!=0)\n                      {printf(\"%d\",arr[n/2]);}\n                      else {printf(\"%d\",arr[(n/2)-1]);}\n\n\n\n}"}
{"similarity_score": 0.996996996996997, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9aa12bcd8f549e056704fafe65e9003a", "bug_code_uid": "cecf1c5b5edd545f1059c36d22cd2d9b", "src_uid": "0593f79604377dcfa98d2b69840ec0a6", "apr_id": "7cb14d73bd1e9692bad4fb8f0db31a91", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong int n,a,time=0;\n scanf(\"%ld\",&n);\n  int arr[200001];\n  for(int i=0; i<200000;i++){\n\t  arr[i]=0;\n  }\nfor(int i=0;i<n;i++){\n\tscanf(\"%ld\",&a);\n\tif(a!=0){\n\t\tarr[a+100000]++;\n\t}\n}\nfor(int i =0; i<200001;i++){\n\tif(arr[i]!=0){\n\t\ttime++;\n\t}\n}\n\nprintf(\"%ld\",time);\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong int n,a,time=0;\n scanf(\"%ld\",&n);\n  int arr[200001];\n  for(int i=0; i<200001;i++){\n\t  arr[i]=0;\n  }\nfor(int i=0;i<n;i++){\n\tscanf(\"%ld\",&a);\n\tif(a!=0){\n\t\tarr[a+100000]++;\n\t}\n}\nfor(int i =0; i<200001;i++){\n\tif(arr[i]!=0){\n\t\ttime++;\n\t}\n}\n\nprintf(\"%ld\",time);\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.4293193717277487, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cf27ea00d788676cab41005babb26685", "bug_code_uid": "798ca48a9f35c22205769727f353d16c", "src_uid": "ee105b664099808143a94a374d6d5daa", "apr_id": "1c392403d15e78e740d777fa6f35a9a0", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint b,a[10001],k,t=0,i;\n\tscanf(\"%d%d\",&b,&k);\n\tfor( i=1;i<=k;i++) \n\t\tscanf(\"%d\",&a[i]);\n\ti=1;\n\twhile(k-1)\n\t{\n\t\tif((a[i]%2)==1&&(b%2)==1) \n\t\t\tt++;\n\t\ti++;\n\t\tk--;\n\t}\n\tif((a[k]%2)==1) \n\t\tt++;\n\tif((t%2)==1) \n\t\tprintf(\"odd\\n\");\n\telse \n\t\tprintf(\"even\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint b,a[100001],k,t=0,i;\n\tscanf(\"%d%d\",&b,&k);\n\tfor( i=1;i<=k;i++) \n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<k;i++)\n\t{\n\t\tif((a[i]%2)==1&&(b%2)==1) \n\t\t\tt++;\n\t}\n\tif((a[k]%2)==1) \n\t\tt++;\n\tif((t%2)==1) \n\t\tprintf(\"odd\\n\");\n\telse \n\t\tprintf(\"even\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9548989113530326, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "401569b146f6c3e1195713446af0a144", "bug_code_uid": "590cfde3d760cbc1997190a59abc41ad", "src_uid": "ab1b4487899609ac0f882e1b1713d162", "apr_id": "5d04c8db358ec1b48fd377ce387f1e75", "difficulty": 1500, "tags": ["binary search", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define MAXN    100000\n\nint A[MAXN];\nint B[MAXN];\n\nlong long Need(int N, long long num)\n{\n    long long ret = 0;\n    for(int i = 0; i < N; ++i) {\n        ret += num * A[i] - B[i];\n    }\n    return ret;\n}\n\nint main()\n{\n    int N, K, i;\n    long long sumA = 0, sumB = 0;\n    scanf(\"%d %d\", &N, &K);\n    for(i = 0; i < N; ++i) {\n        scanf(\"%d\", &A[i]);\n        sumA += A[i];\n    }\n    for(i = 0; i < N; ++i) {\n        scanf(\"%d\", &B[i]);\n        sumB += B[i];\n    }\n    long long left = 0;\n    long long right = (K + sumB) / sumA;\n    while(left < right - 1) {\n        long long mid = (left + right) / 2;\n        long long need = Need(N, mid);\n        if(need > K) {\n            right = mid - 1;\n        } else {\n            left = mid;\n        }\n    }\n    for(right = left + 1; right >= 0; --right) {\n        if(K >= Need(N, right)) {\n            printf(\"%I64d\\n\", right);\n            break;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define MAXN    100000\n\nint A[MAXN];\nint B[MAXN];\n\nlong long Need(int N, long long num)\n{\n    long long ret = 0;\n    for(int i = 0; i < N; ++i) {\n        if(num * A[i] > B[i]) {\n            ret += num * A[i] - B[i];\n        }\n    }\n    return ret;\n}\n\nint main()\n{\n    int N, K, i;\n    long long sumA = 0, sumB = 0;\n    scanf(\"%d %d\", &N, &K);\n    for(i = 0; i < N; ++i) {\n        scanf(\"%d\", &A[i]);\n        sumA += A[i];\n    }\n    for(i = 0; i < N; ++i) {\n        scanf(\"%d\", &B[i]);\n        sumB += B[i];\n    }\n    long long left = 0;\n    long long right = (K + sumB) / sumA;\n    while(left < right - 1) {\n        long long mid = (left + right) / 2;\n        long long need = Need(N, mid);\n        if(need > K) {\n            right = mid - 1;\n        } else {\n            left = mid;\n        }\n    }\n    for(++right; right >= 0; --right) {\n        if(K >= Need(N, right)) {\n            printf(\"%I64d\\n\", right);\n            break;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7320574162679426, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "883681a1b3b1b0a5e1c128dae1f97494", "bug_code_uid": "24ea0688921d9818a797c36d47f02339", "src_uid": "c1bf6c8a9a20f377cf2a5dbea2267c88", "apr_id": "e62297102f893ab71f089f40ff882a2f", "difficulty": 1600, "tags": ["brute force", "data structures", "greedy", "implementation", "trees"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\nint len,p,ai,ail;\r\nchar S[4000];\r\nvoid expandS()\r\n{\r\n\tp=strlen(S);\r\n\tif(p!=0) S[p++]='.';\r\n\tS[p]='1';\r\n\tS[p+1]='\\0';\r\n\tail=ai;\r\n\tprintf(\"%s\\n\",S);\r\n}\r\nvoid continueS()\r\n{\r\n\tsprintf(S+p,\"%d\",ai);\r\n\tS[strlen(S)]='\\0';\r\n\tail=ai;\r\n\tprintf(\"%s\\n\",S);\r\n}\r\nvoid shortenS()\r\n{\r\n\tint l=strlen(S),i,num=0,times=1;\r\n\tfor(i=l-1;i!=-1&&S[i]!='.';i--);\r\n\tfor(i--;i!=-1&&S[i]!='.';i--)\r\n\t{\r\n\t\tnum+=(S[i]-'0')*times;\r\n\t\ttimes*=10;\r\n\t}\r\n\tnum++;p=i+1;\r\n\tsprintf(S+i+1,\"%d\",num);\r\n\tail=num;\r\n\tS[strlen(S)]='\\0';\r\n\tprintf(\"%s\\n\",S);\r\n}\r\nint main()\r\n{\r\n\tint t,n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tlen=0,p=0,ail=0,S[0]='\\0';\r\n\t\tscanf(\"%d\",&n);\r\n\t\twhile(n--)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&ai);\r\n\t\t\tif(ai==1) expandS();\r\n\t\t\telse if(ai==ail+1) continueS();\r\n\t\t\telse shortenS();\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\nint len,p,ai,ail;\r\nchar S[4000];\r\nvoid expandS()\r\n{\r\n\tp=strlen(S);\r\n\tif(p!=0) S[p++]='.';\r\n\tS[p]='1';\r\n\tS[p+1]='\\0';\r\n\tail=ai;\r\n\tprintf(\"%s\\n\",S);\r\n}\r\nvoid continueS()\r\n{\r\n\tsprintf(S+p,\"%d\",ai);\r\n\tS[strlen(S)]='\\0';\r\n\tail=ai;\r\n\tprintf(\"%s\\n\",S);\r\n}\r\nvoid shortenS()\r\n{\r\n\tint l=strlen(S),i,num,times;\r\n\tfor(i=l-1;i!=-1&&S[i]!='.';i--);\r\n\tdo{\r\n\t\tnum=0,times=1;\r\n\t\tfor(i--;i!=-1&&S[i]!='.';i--)\r\n\t\t{\r\n\t\t\tnum+=(S[i]-'0')*times;\r\n\t\t\ttimes*=10;\r\n\t\t}\r\n\t\tnum++;\r\n\t}while(num!=ai);\r\n\tp=i+1;\r\n\tsprintf(S+i+1,\"%d\",num);\r\n\tail=num;\r\n\tS[strlen(S)]='\\0';\r\n\tprintf(\"%s\\n\",S);\r\n}\r\nint main()\r\n{\r\n\tint t,n;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tlen=0,p=0,ail=0,S[0]='\\0';\r\n\t\tscanf(\"%d\",&n);\r\n\t\twhile(n--)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&ai);\r\n\t\t\tif(ai==1) expandS();\r\n\t\t\telse if(ai==ail+1) continueS();\r\n\t\t\telse shortenS();\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9949494949494949, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "199a1298a612927cabb8861d1486b9aa", "bug_code_uid": "6f489bb66cb1131837916935c0b5b534", "src_uid": "f0c22161cb5a9bc17320ccd05517f867", "apr_id": "b4f808fa9d663b7e92692ee1dae9c6d3", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int a,b,c,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        printf(\"%d %d %d\",a+b+c,b+c,c);\r\n    }\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int a,b,c,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        printf(\"%d %d %d\\n\",a+b+c,b+c,c);\r\n    }\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.6750948166877371, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "1f5ef8e888b4fc5fbb8b52a657cb1a0c", "bug_code_uid": "870816c5306629590cae8e89778508ff", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "66ea6b5b5b295f6b62c786f1f1a9ccca", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,f[1000],t[1000],joy[1000],d,i;\n    scanf(\"%d  %d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d  %d\",&f[i],&t[i]);\n\n    }\n\n    for(i=0;i<n;i++)\n    {\n       if(t[i]>k)\n       joy[i]=f[i]-(t[i]-k);\n        else\n        joy[i]=f[i];\n\n    }\n    d=joy[0];\n    for(i=1;i<n;i++)\n    {\n        if(joy[i]>d)\n        d=joy[i];\n        else\n        break;\n    }\n    printf(\"%d\",d);\n\nreturn o;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,f[10000],t[10000],joy,c=-999999999,i;\n    scanf(\"%d  %d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d  %d\",&f[i],&t[i]);\n\n    }\n\n    for(i=0;i<n;i++)\n    {\n       if(t[i]>k)\n       joy=f[i]-(t[i]-k);\n        else\n        joy=f[i];\n        if(joy>c)\n        c=joy;\n\n    }\n\n    printf(\"%d\",c);\n\nreturn 0;\n}\n"}
{"similarity_score": 0.3368220742150333, "equal_cnt": 19, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "17c384d4de2f00dd38f812f30d4c645e", "bug_code_uid": "3d5641ce25dbd50ba96cef0722493699", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "1b9ae3779890990be237a90a185dc439", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n long int i,j, n,k=0,count=0;\n scanf(\"%lld\",&n);\n long long int ar[n];\n char result[n];\n for(i=0;i<n;i++)\n {\n     scanf(\"%lld\",&ar[i]);\n      count =2;\n     for(j=2;j<=ar[i]/2;j++)\n     {\n         if(ar[i]%j==0)\n            count++;\n     }\n     if(count==3)\n        printf(\"YES\\n\");\n     else\n        printf(\"NO\\n\");\n }\n\n\n  return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint prime[1000002];\nvoid Sieve(long long n)\n{\n    long long i, j;\n    prime[0]=prime[1]=1;\n\n    for(i = 4 ; i < n ; i += 2)\n    {\n        prime[i] = 1;\n    }\n\n    for(i = 3 ; i <= n ; i += 2)\n    {\n        for(j = i+i ; j <= n && prime[i] == 0; j += i)\n        {\n            prime[j] = 1;\n        }\n    }\n}\nint main()\n{\n    long long int n,x,root,check;\n    Sieve(1000002);\n    scanf(\"%lld\",&n);\n    while(n--)\n    {\n        scanf(\"%lld\",&x);\n        root=sqrt(x);\n        check=ceil(sqrt(x));\n        if(root==check && prime[root]==0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n\n    }\n\n  return 0;\n}\n\n"}
{"similarity_score": 0.6913925822253324, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b8e2fd627f4cfe8b6d27995b484f9bb8", "bug_code_uid": "0d74059c7ad730c46c363eb6e77e2936", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "017e7c8f1e5d0b00121774cddf398169", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int b,g,i,j,cnt=0;\n    scanf(\"%d\",&b);\n    int boys[b];\n    for(i=0 ; i<b ; i++) scanf(\"%d\",&boys[i]);\n    scanf(\"%d\",&g);\n    int girls[g];\n    for(i=0 ; i<g ; i++) scanf(\"%d\",&girls[i]);\n\n    for(i=0 ; i<b ; i++){\n        for(j=0 ; j<g ; j++){\n            if(girls[j]==-10) continue;\n            if(abs(boys[i]-girls[j])<=1){\n                cnt++;\n                girls[j]=-10;\n                break;\n            }\n        }\n    }\n    printf(\"%d\",cnt);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int b,g,i,j,cnt=0,temp;\n    scanf(\"%d\",&b);\n    int boys[b];\n    for(i=0 ; i<b ; i++) scanf(\"%d\",&boys[i]);\n    scanf(\"%d\",&g);\n    int girls[g];\n    for(i=0 ; i<g ; i++) scanf(\"%d\",&girls[i]);\n\n    for(i=0 ; i<b ; i++){\n        for(j=i+1 ; j<b ; j++){\n            if(boys[i]>boys[j]){\n                temp=boys[i];\n                boys[i]=boys[j];\n                boys[j]=temp;\n            }\n        }\n    }\n\n    for(i=0 ; i<g ; i++){\n        for(j=i+1 ; j<g ; j++){\n            if(girls[i]>girls[j]){\n                temp=girls[i];\n                girls[i]=girls[j];\n                girls[j]=temp;\n            }\n        }\n    }\n\n    for(i=0 ; i<b ; i++){\n        for(j=0 ; j<g ; j++){\n            if(girls[j]==-10) continue;\n            if(abs(boys[i]-girls[j])<=1){\n                cnt++;\n                girls[j]=-10;\n                break;\n            }\n        }\n    }\n    printf(\"%d\",cnt);\n\n}\n"}
{"similarity_score": 0.8983364140480592, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "66c7547313592272c6e8c5b902f777c4", "bug_code_uid": "2f208c93866c9e86367e7096e2b5ad21", "src_uid": "642e2d1b427c025578424c81192be756", "apr_id": "e8c556c45bce4a44a523791c62a50d90", "difficulty": 1500, "tags": ["two pointers", "binary search", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n# define size  2*100000\nint partition(long int a[],int l,int u)\n{\n\tint v,i,j;\n\tlong int temp;\n\tv=a[l];\n\ti=l;\n\tj=u+1;\n\t\n\tdo\n\t{\n\t\tdo\n\t\t\ti++;\n\t\t\t\n\t\twhile(a[i]<v&&i<=u);\n\t\t\n\t\tdo\n\t\t\tj--;\n\t\twhile(v<a[j]);\n\t\t\n\t\tif(i<j)\n\t\t{\n\t\t\ttemp=a[i];\n\t\t\ta[i]=a[j];\n\t\t\ta[j]=temp;\n\t\t}\n\t}while(i<j);\n\t\n\ta[l]=a[j];\n\ta[j]=v;\n\t\n\treturn(j);\n} \nvoid quick_sort(long int a[],int l,int u)\n{\n\tint j;\n\tif(l<u)\n\t{\n\t\tj=partition(a,l,u);\n\t\tquick_sort(a,l,j-1);\n\t\tquick_sort(a,j+1,u);\n\t}\n}\nmain()\n{\n\tint n,i,j,flag=0;\n\tlong long int count=0;\n\tscanf(\"%d\",&n);\n\tlong int a[size+1];\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%ld\",&a[i]);\n\t\tif(a[i]<0)\n\t\t  a[i]=-a[i];\n\t}\nquick_sort(a,0,n-1);\nfor(i=0;i<n-1;++i)\n{\n\tfor(j=i+1;j<n;++j)\n\t{\n\t\tif(a[i]<a[j]-a[i])\n\t\t{\n\t        break;\n\t\t}\n\t\tcount++;\n\t}\n}\nprintf(\"%I64d\",count);\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n# define size  2*100000\nint partition(long int a[],int l,int u)\n{\n\tint v,i,j;\n\tlong int temp;\n\tv=a[l];\n\ti=l;\n\tj=u+1;\n\t\n\tdo\n\t{\n\t\tdo\n\t\t\ti++;\n\t\t\t\n\t\twhile(a[i]<v&&i<=u);\n\t\t\n\t\tdo\n\t\t\tj--;\n\t\twhile(v<a[j]);\n\t\t\n\t\tif(i<j)\n\t\t{\n\t\t\ttemp=a[i];\n\t\t\ta[i]=a[j];\n\t\t\ta[j]=temp;\n\t\t}\n\t}while(i<j);\n\t\n\ta[l]=a[j];\n\ta[j]=v;\n\t\n\treturn(j);\n} \nvoid quick_sort(long int a[],int l,int u)\n{\n\tint j;\n\tif(l<u)\n\t{\n\t\tj=partition(a,l,u);\n\t\tquick_sort(a,l,j-1);\n\t\tquick_sort(a,j+1,u);\n\t}\n}\nmain()\n{\n\tint n,i,j,flag=0;\n\tlong long int count=0;\n\tscanf(\"%d\",&n);\n\tlong int a[size+1];\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%ld\",&a[i]);\n\t\tif(a[i]<0)\n\t\t  a[i]=-a[i];\n\t}\nquick_sort(a,0,n-1);\nfor(i=0,j=0;i<n;++i)\n{\n\twhile(j<n && a[i]>=(a[j]-a[i]))\n\t   j++;\n\tcount+=(j-i-1);\n}\nprintf(\"%I64d\",count);\n}"}
{"similarity_score": 0.980367321089297, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "829f7579764d62c80baed813c395548a", "bug_code_uid": "5e491382633f21bd2da669889e490748", "src_uid": "7807c484035e0327870b6cac23c8d60a", "apr_id": "43647bca5886215f693027c19af7b091", "difficulty": 1500, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//\u628a\u6240\u6709\u70b9\u6392\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u5904\u7406\u529e\u6cd5\u662f\uff1a\u770b\u4e00\u4e0b\u8d77\u70b9\u5728\u54ea\u91cc\uff1f\n//\u8d77\u70b9\u5728\u5de6\u8fb9\uff0c\u53f3\u8fb9\uff0c\u4e2d\u95f4\n#include<stdio.h>\n#include<stdlib.h>\n#define N 100000\nint compare(const void *a,const void *b){\n    return *(int *)a-*(int *)b;\n}\nvoid sort(int a[],int n){\n    qsort(a,n,sizeof(int),compare);\n}\nint min(int a,int b){\n    if(a>b)return b;\n    else return a;\n}\nint abs(int a){\n    if(a>=0)return a;\n    else return -a;\n}\n\nint main() {\n    int n,a;\n    scanf(\"%d%d\",&n,&a);\n    int x[N];\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&x[i]);\n    }\n    sort(x,n);\n    int distance=0;\n    //\u4ece\u4e0d\u8bbf\u95eexn-1\u70b9,\u4e0d\u8bbf\u95eex0\u70b9\u4e24\u4e2a\u8ddd\u79bb\u4e2d\u9009\u62e9\u6700\u5c0f\u7684\n    int distance0=(x[n-1]-x[1])+min(abs(a-x[1]),abs(x[n-1]-a));\n    int distance1=(x[n-2]-x[0])+min(abs(a-x[0]),abs(x[n-2]-a));\n    distance=min(distance0,distance1);\n    printf(\"%d\\n\",distance);\n    return 0;\n}\n", "fixed": "//\u628a\u6240\u6709\u70b9\u6392\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u5904\u7406\u529e\u6cd5\u662f\uff1a\u770b\u4e00\u4e0b\u8d77\u70b9\u5728\u54ea\u91cc\uff1f\n//\u8d77\u70b9\u5728\u5de6\u8fb9\uff0c\u53f3\u8fb9\uff0c\u4e2d\u95f4\n#include<stdio.h>\n#include<stdlib.h>\n#define N 100000\nint compare(const void *a,const void *b){\n    return *(int *)a-*(int *)b;\n}\nvoid sort(int a[],int n){\n    qsort(a,n,sizeof(int),compare);\n}\nint min(int a,int b){\n    if(a>b)return b;\n    else return a;\n}\nint abs(int a){\n    if(a>=0)return a;\n    else return -a;\n}\n\nint main() {\n    int n,a;\n    scanf(\"%d%d\",&n,&a);\n    int x[N];\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&x[i]);\n    }\n    sort(x,n);\n    int distance=0;\n    //\u4ece\u4e0d\u8bbf\u95eexn-1\u70b9,\u4e0d\u8bbf\u95eex0\u70b9\u4e24\u4e2a\u8ddd\u79bb\u4e2d\u9009\u62e9\u6700\u5c0f\u7684\n    if(n>1){\n        int distance0=(x[n-1]-x[1])+min(abs(a-x[1]),abs(x[n-1]-a));\n        int distance1=(x[n-2]-x[0])+min(abs(a-x[0]),abs(x[n-2]-a));\n        distance=min(distance0,distance1);\n    }\n    printf(\"%d\\n\",distance);\n    return 0;\n}\n"}
{"similarity_score": 0.9510373443983402, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "3452ad5b881d3d3e24467dd03bbdd9e4", "bug_code_uid": "7c65f4af340f0af4da759363e3983832", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "e0d15dde8cf87285c98f74551318fdd4", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n    long int n,x;\n    long int c[100001];\n    long long int sum;\n\nint cmp (const void * a, const void * b)\n{\n  if ( *(long int *)a <  *(long int *)b ) return -1;\n  if ( *(long int *)a == *(long int *)b ) return 0;\n  if ( *(long int *)a >  *(long int *)b ) return 1;\n}\n\nint main(){\n    long int i,j,k;\n\n    scanf(\"%ld%ld\",&n,&x);c[0]=0;\n    for(i=1;i<=n;i++) scanf(\"%ld\",&c[i]);\n    qsort(c,n+1,sizeof(c[0]),cmp);\n    sum=0;\n\n    for(i=1;i<=n;i++){\n        sum += c[i]*x;\n        x--;\n        if(x<1) x=1;\n    }\n    printf(\"%lld\\n\",sum);\n\n    return 0;\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n    long int n,x;\n    long int c[100010];\n    long long int sum;\n\nint cmp (const void * a, const void * b)\n{\n  if ( *(long int *)a <  *(long int *)b ) return -1;\n  if ( *(long int *)a == *(long int *)b ) return 0;\n  if ( *(long int *)a >  *(long int *)b ) return 1;\n}\n\nint main(){\n    long int i,j,k;\n\n    scanf(\"%ld%ld\",&n,&x);c[0]=0;\n    for(i=1;i<=n;i++) scanf(\"%ld\",&c[i]);\n    qsort(c,n+1,sizeof(c[0]),cmp);\n    sum=0;\n\n    for(i=1;i<=n;i++){\n        sum += (long long)((long long)c[i]*(long long)x);\n        x--;\n        if(x<1) x=1;\n    }\n    printf(\"%lld\\n\",sum);\n\n    return 0;\n\n}\n"}
{"similarity_score": 0.8771929824561403, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "07c18aca91aa3ead539064a2288979dc", "bug_code_uid": "93d2c212aa51f86325ce9a1acc154f58", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "4392eb00e217fa602b68d151b201e34e", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int n,N,d;\n    char s[102];\n    scanf(\"%d\",&N);\n    getchar();\n    while(N--)\n    {\n        gets(s);\n        d=strlen(s);\n        n=d-2;\n        if(d<10)\n            printf(\"%s\\n\",s);\n\n\n\n\n        else\n            printf(\"%c%d%c\\n\",s[0],n,s[d-1]);\n    }\n\n  \t \t\t \t       \t \t\t\t\t \t\t    \t \t", "fixed": "\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\nint main()\n{\n    int n,N,d;\n    char s[102];\n    scanf(\"%d\",&N);\n    getchar();\n    while(N--)\n    {\n        gets(s);\n        d=strlen(s);\n        n=d-2;\n        if(d<=10)\n            printf(\"%s\\n\",s);\n        else\n            printf(\"%c%d%c\\n\",s[0],n,s[d-1]);\n    }\n    return 0;\n}\n\n\n\n \t\t \t \t \t\t\t  \t  \t\t\t\t  \t \t \t   \t"}
{"similarity_score": 0.632996632996633, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "be503c4d686fb4335346efd2eae6071f", "bug_code_uid": "f6bfe939ac738f9432a7e916bd9c90a4", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "60f33a41dd2c5efeeb4d2e2a74875f51", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j,k;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d\",&i);\n        for(j=1;;j++){\n            k=180-(360/j);\n            if(i==k){\n                printf(\"YES\\n\");\n                break;\n            }\n            else if(k>i){\n                printf(\"NO\\n\");\n                break;\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j,k;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d\",&i);\n        k=180-i;\n        if(360%k==0) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6992805755395683, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "db8593b144994151042dc8860c6c57eb", "bug_code_uid": "7d51e4691427fc85abe52a169c8b248b", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "12f2927e304ea4ed3b47572bc6046125", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int x,y,n,k;\n    int t=0;\n    scanf(\"%ld%ld%ld\",&y,&k,&n);\n    for(x=1;x+y<=n;x++)\n        if((x+y)%k==0)\n        {\n            printf(\"%ld \",x);\n            t++;\n            x+=k;\n            break;\n        }\n    if(t==0)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    while(x+y<=n)\n    {\n        printf(\"%ld \",x);\n        x+=k;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long int x=1,y,n,k;\n    int t=0;\n    scanf(\"%ld%ld%ld\",&y,&k,&n);\n    if((x+y)%k!=0)\n        x+=k-(x+y)%k;\n    if(x+y>n)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    while(x+y<=n)\n    {\n        printf(\"%ld \",x);\n        x+=k;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9966159052453468, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "a96acf46947af295df578e537e3c54f2", "bug_code_uid": "ca0d7f9aceacf1d9e27982fc8e0569b4", "src_uid": "ac77e2e6c86b5528b401debe9f68fc8e", "apr_id": "bf1deb29089d0e569bbff46a52976829", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\nint len(char * a) {\n    int t = 0;\n    for(int i = 0; a[i] != '\\0'; i++){\n        t++;\n    }\n    return t;\n}\nint main()\n{\n    int t,x = 1;\n    scanf(\"%i\", &t);\n    char b[100];\n    char a[100][100];\n    for(int i = 0; i < t; i++) {\n        x = 1;\n        scanf(\"%s\", b);\n        a[i][0] = b[0];\n        for(int j = 1; j < len(b); j += 2) {\n            a[i][x] = b[j];\n            x++;\n        }\n    }\n    for(int i = 0; i < t; i++) {\n        printf(\"\\n\");\n        for(int j = 0; a[i][j] != '\\0'; j++) {\n            printf(\"%c\", a[i][j]);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint len(char * a) {\n    int t = 0;\n    for(int i = 0; a[i] != '\\0'; i++){\n        t++;\n    }\n    return t;\n}\nint main()\n{\n    int t,x = 1;\n    scanf(\"%i\", &t);\n    char b[1000];\n    char a[1000][1000];\n    for(int i = 0; i < t; i++) {\n        x = 1;\n        scanf(\"%s\", b);\n        a[i][0] = b[0];\n        for(int j = 1; j < len(b); j += 2) {\n            a[i][x] = b[j];\n            x++;\n        }\n    }\n    for(int i = 0; i < t; i++) {\n        printf(\"\\n\");\n        for(int j = 0; a[i][j] != '\\0'; j++) {\n            printf(\"%c\", a[i][j]);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8670618120237087, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "066bb050d19de1aab4f46aa5c671c5b3", "bug_code_uid": "0f2e190e15c7fce6f875047c9e170acf", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "31819f031cdacaaeb1300991ea2eadd1", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\r\n   \r\n   int a;\r\n   scanf(\"%d\",&a);\r\n    while(a--)\r\n    {\r\n        int a;\r\n        int b;\r\n        int c;\r\n        scanf(\"%d\",&a);\r\n        scanf(\"%d\",&b);\r\n        scanf(\"%d\",&c);\r\n     \r\n        \r\n        if(a < b && a > c)\r\n        {\r\n            printf(\"%d\\n\",a);\r\n             \r\n        }\r\n        else if(b < c && b > a)\r\n        {\r\n            printf(\"%d\\n\",b);\r\n           \r\n        }\r\n        else if(c < a && c  > b)\r\n        {\r\n            printf(\"%d\\n\",c);\r\n             \r\n        }\r\n      \r\n\r\n    }\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\r\n   \r\n   int a;\r\n   scanf(\"%d\",&a);\r\nfor      (int i = 0; i < a ; i++)   {\r\n        int a;\r\n        int b;\r\n        int c;\r\n        scanf(\"%d\",&a);\r\n        scanf(\"%d\",&b);\r\n        scanf(\"%d\",&c);\r\n     \r\n        \r\n        if((a < b && a > c) || (a < c && a > b))\r\n        {\r\n            printf(\"%d\\n\",a);\r\n             \r\n        }\r\n        else if((b < a && b > c) || (b < c && b > a))\r\n        {\r\n            printf(\"%d\\n\",b);\r\n           \r\n        }\r\n        else if((c < a && c > b) || (c < b && c > a))\r\n        {\r\n            printf(\"%d\\n\",c);\r\n             \r\n        }\r\n\r\n    }\r\n\r\n}\r\n"}
{"similarity_score": 0.9653465346534653, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c4dc52a2089d7ebf9ae17c5f5a5ef6c8", "bug_code_uid": "7d30d6ba57791c79b385010e22448acd", "src_uid": "8a1ceac1440f7cb406f12d9fc2ca0e20", "apr_id": "3d2b54c33cb13f901093e871473a32d4", "difficulty": 800, "tags": ["binary search", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\nint t,i,a,b;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d%d\",&a,&b);\r\n        if(a==0 || b==0) printf(\"0\\n\");\r\n        else{\r\n            if((a/b)>=4)\r\n            printf(\"%d\\n\",b);\r\n        else if((b/a)>=4){\r\n            printf(\"%d\\n\",a);\r\n        }\r\n        else{\r\n            printf(\"%d\\n\",(a+b)/4);\r\n        }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\nint t,i,a,b,s;\r\n    scanf(\"%d\",&t);\r\n\r\n    for(i=0;i<t;i++){\r\n        scanf(\"%d%d\",&a,&b);\r\n        s=a+b;\r\n        if(a==0 || b==0) printf(\"0\\n\");\r\n        else{\r\n            if((s/b)>=4)\r\n            printf(\"%d\\n\",b);\r\n        else if((s/a)>=4){\r\n            printf(\"%d\\n\",a);\r\n        }\r\n        else{\r\n            printf(\"%d\\n\",s/4);\r\n        }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"}
{"similarity_score": 0.999530736743313, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "63fef5801a28dbdb3725cf14f198ab76", "bug_code_uid": "a1ab52dcb6403051bc0c64d8032dc173", "src_uid": "91be5db48b44a44adff4c809ffbb8e3e", "apr_id": "61ccb8c8dfd5dbd70a260216da2a6d39", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <time.h>\n\n#define lli long long int\n#define MAX INT_MAX\n#define PI acos(-1)\n#define FOR(ii,aa,bb) for(ii=aa;ii<=bb;ii++)\n#define ROF(ii,aa,bb) for(ii=aa;ii>bb;ii--)\n#define max(a,b) (a<b)? b:a\n#define min(a,b) (a<b)? a:b\n#define ort(a,b) (a+b)/2\n#define carp(a,b) (a)*(b)\n/*int a[10005],temp[1005];\nvoid sort(int bas,int ort,int son){\n\tint yer=bas,x=bas,y=ort+1,t,i;\n\twhile(x <= ort && y <= son){\n\t\tif(a[x] < a[y]) temp[yer++]=a[x++];\n\t\telse temp[yer++]=a[y++];}\n\twhile(x <= ort) temp[yer++]=a[x++];\n\twhile(y <= son) temp[yer++]=a[y++];\n\tfor(i=bas;i<=son;i++) a[i]=temp[i];}\nvoid merge(int bas,int son){\n\tif(son <= bas)return;\n\tint ort=(bas+son)/2;\n\t\tmerge(bas,ort);\n\t\tmerge(ort+1,son);\n\t\tsort(bas,ort,son);\n}\n*/\nint main () {\n\tint a,b,c,q=0,d,t=10000,k=1;\n\tscanf(\"%d %d\",&a,&b);\n\twhile(a--){\n\t\tscanf(\"%d %d\",&c,&d);\n\t\tif(c<b && t>d && d>0)\n\t\t\tt=d;\n\t\telse if(c<=b && d==0 && (t<0||t==100000))\n\t\t\tt=0;}\n\tif(t==100000) \n\t\t\tt=-1; \n\t\telse if(t!=0)\n\t\t\t\tt=100-t;\n\t\t\t\tprintf(\"%d\",t);\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n#include <time.h>\n\n#define lli long long int\n#define MAX INT_MAX\n#define PI acos(-1)\n#define FOR(ii,aa,bb) for(ii=aa;ii<=bb;ii++)\n#define ROF(ii,aa,bb) for(ii=aa;ii>bb;ii--)\n#define max(a,b) (a<b)? b:a\n#define min(a,b) (a<b)? a:b\n#define ort(a,b) (a+b)/2\n#define carp(a,b) (a)*(b)\n/*int a[10005],temp[1005];\nvoid sort(int bas,int ort,int son){\n\tint yer=bas,x=bas,y=ort+1,t,i;\n\twhile(x <= ort && y <= son){\n\t\tif(a[x] < a[y]) temp[yer++]=a[x++];\n\t\telse temp[yer++]=a[y++];}\n\twhile(x <= ort) temp[yer++]=a[x++];\n\twhile(y <= son) temp[yer++]=a[y++];\n\tfor(i=bas;i<=son;i++) a[i]=temp[i];}\nvoid merge(int bas,int son){\n\tif(son <= bas)return;\n\tint ort=(bas+son)/2;\n\t\tmerge(bas,ort);\n\t\tmerge(ort+1,son);\n\t\tsort(bas,ort,son);\n}\n*/\nint main () {\n\tint a,b,c,q=0,d,t=100000,k=1;\n\tscanf(\"%d %d\",&a,&b);\n\twhile(a--){\n\t\tscanf(\"%d %d\",&c,&d);\n\t\tif(c<b && t>d && d>0)\n\t\t\tt=d;\n\t\telse if(c<=b && d==0 && (t<0||t==100000))\n\t\t\tt=0;}\n\tif(t==100000) \n\t\t\tt=-1; \n\t\telse if(t!=0)\n\t\t\t\tt=100-t;\n\t\t\t\tprintf(\"%d\",t);\n}\n"}
{"similarity_score": 0.9355432780847146, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "2d07999b06972d32a4c1623eadeb08cd", "bug_code_uid": "377e72e99ffce2e3e1be35b9531b6c81", "src_uid": "8fcec28fb4d165eb58f829c03e6b31d1", "apr_id": "58abe94c7526be6916949929b1ff7149", "difficulty": 1500, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tlong long l, r, p;\n\tint k;\n\n\tscanf(\"%lld%lld%d\", &l, &r, &k);\n\tfor (p = 1; p < l; p *= (long long) k)\n\t\t;\n\tif (p <= r)\n\t\tfor (; p <= r; p *= (long long) k)\n\t\t\tprintf(\"%lld \", p);\n\telse\n\t\tprintf(\"-1\");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tlong long l, r, k;\n\tdouble p;\n\n\tscanf(\"%lld%lld%lld\", &l, &r, &k);\n\tfor (p = 1; p < l; p *= (long long) k)\n\t\t;\n\tif (p <= r)\n\t\tfor (; p <= r; p *= (long long) k)\n\t\t\tprintf(\"%lld \", (long long) p);\n\telse\n\t\tprintf(\"-1\");\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.8911845730027548, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "670cf8979cf0e7a9d9f3e08619884fa6", "bug_code_uid": "728f681f863cbf2efc8c18ed17eeb5ce", "src_uid": "937acacc6d5d12d45c08047dde36dcf0", "apr_id": "bf9e01e2b84ff6feb52fc44b9e422844", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n    {\n       int hh,mm,H,D,C,N,n,i;\n        double taka1,taka2;\n        scanf(\"%d %d\",&hh,&mm);\n        scanf(\"%d %d %d %d\",&H,&D,&C,&N);\n\n        n = (H+D*(1200-(hh*60+mm)))/N;\n        if((H+D*(1200-(hh*60+mm)))%N!=0)\n        {\n            n++;\n        }\n       if(hh<20)\n        taka1 = n*(C-(C*0.2));\n        else \n           taka1 = 0;\n        i = H/N;\n        if(H%N!=0)\n        {\n            i++;\n        }\n        taka2 = i*C;\n        if(taka1) {\n            if (taka1 < taka2) {\n                printf(\"%lf\", taka1);\n                return 0;\n            }\n        }\n        printf(\"%lf\",taka2);\n\n        return 0;\n    }\n", "fixed": "\n#include <stdio.h>\n#include <string.h>\n\nint main()\n    {\n       int hh,mm,H,D,C,N,n,i;\n        double taka1,taka2;\n        scanf(\"%d %d\",&hh,&mm);\n        scanf(\"%d %d %d %d\",&H,&D,&C,&N);\n\n        n = (H+D*(1200-(hh*60+mm)))/N;\n        if((H+D*(1200-(hh*60+mm)))%N!=0)\n        {\n            n++;\n        }\n       if(hh<20)\n        taka1 = n*(C-(C*0.2));\n        else\n       {\n           n = H/N;\n           if(H%N!=0)\n               n++;\n           taka1 = n*(C-(C*0.2));\n       }\n        i = H/N;\n        if(H%N!=0)\n        {\n            i++;\n        }\n        taka2 = i*C;\n        if(taka1) {\n            if (taka1 < taka2) {\n                printf(\"%lf\", taka1);\n                return 0;\n            }\n        }\n        printf(\"%lf\",taka2);\n\n        return 0;\n    }\n"}
{"similarity_score": 0.4780361757105943, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "983cf6d4fd558d7f6b90027b5f381576", "bug_code_uid": "37183e618c8ee80d3199843bd27893e4", "src_uid": "54f8b8e6711ff5c69e0bc38a6e2f4999", "apr_id": "321c16f7a3b3c526fa2f263ca3dc3a61", "difficulty": 1900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int d=0,n,hant,mant,h,m,band=0;\n    char tant,t;\n    char mess[21];\n    scanf(\"%d\\n\",&n);\n    scanf(\"[%d:%d %c.m.]: %[^\\n]\",&hant,&mant,&tant,mess);\n    getchar();\n    n--;\n\t  while(n--){\n        band=0;\n    \tscanf(\"[%d:%d %c.m.]: %[^\\n]\",&h,&m,&t,mess);\n        getchar();\n        if(t < tant) band = 1;\n        else{\n            if(t==tant){\n                if(hant!=12 && h<hant) band=1;\n                else if(h==hant){\n                    if(m<mant) band = 1;\n                }\n            }\n        }\n        d = d + band;\n        hant=h;\n        mant=m;\n        tant=t;\n    }\n    printf(\"%d\",d+1);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint horatomin(int h,int m,char t);\nint main(){\n    int d=1,n,hant,mant,h,m,band=0,rec;\n    char tant,t;\n    char mess[21];\n    scanf(\"%d\\n\",&n);\n    scanf(\"[%d:%d %c.m.]: %[^\\n]\",&hant,&mant,&tant,mess);\n    mant=horatomin(hant,mant,tant);\n    getchar();\n    n--;\n    rec = 1;\n\t  while(n--){\n        band=0;\n\n    \tscanf(\"[%d:%d %c.m.]: %[^\\n]\",&h,&m,&t,mess);\n        getchar();\n        m=horatomin(h,m,t);\n\n        if(mant==m){\n            rec++;\n            if(rec==11){\n                band=1;\n                rec=1;\n            }\n        }else{\n            rec=1;\n            if(mant>m){\n                band=1;\n            }\n        }\n        mant=m;\n        d+=band;\n    }\n    printf(\"%d\",d);\n    return 0;\n}\n\nint horatomin(int h,int m,char t){\n    m+=60*h;\n    if(t=='a' && h==12){\n        m-=60*h;\n    }else if(t=='p'&&h!=12){\n        m+=12*60;\n    }\n    return m;\n}"}
{"similarity_score": 0.6843853820598007, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "eb979e01ce0be6dbc3276c5fdb183564", "bug_code_uid": "4770024055e0e1df04b579cf7ae5bd6f", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "6ecf5cbf2f10f1050890e015e712a9da", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<time.h>\n#include<math.h>\n#include<ctype.h>\n\n#define MAX( a, b ) ( ( a > b) ? a : b ) \n#define MIN( a, b ) ( ( a < b) ? a : b )\n#define FOR(ii,aa,bb) for(ii=aa;ii<bb;ii++)\n#define and &&\n#define or ||\nint main () {\n\tint x=0,n=0,s=0,i,j,a[100000];\n\tscanf(\"%d\",&n);\n\ta[0]=0;\n\tFOR(i,1,n+1){\n\t\tscanf(\"%d\",&x);\n\t\ta[i]=x+a[i-1];}\n\tscanf(\"%d\",&s);\n\tFOR(i,0,s){\n\t\tscanf(\"%d\",&x);\n\t\tFOR(j,1,n+1)\n\t\tif(x>a[j-1] and x<=a[j])\n\t\t\tprintf(\"%d\\n\",j);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<string.h>\n#include<stdio.h>\n#include<stdlib.h>\n#include<time.h>\n#include<math.h>\n#include<ctype.h>\n\n#define MAX( a, b ) ( ( a > b) ? a : b ) \n#define MIN( a, b ) ( ( a < b) ? a : b )\n#define FOR(ii,aa,bb) for(ii=aa;ii<bb;ii++)\n#define and &&\n#define or ||\nint x=0,n=0,s=0,i,j,a[100000],bas=0,son,ort;\n\nint f(int,int,int);\n\nint main () {\n\tscanf(\"%d\",&n);\n\tson=n+1;\n\ta[0]=0;\n\tFOR(i,1,n+1){\n\t\tscanf(\"%d\",&x);\n\t\ta[i]=x+a[i-1];}\n\tscanf(\"%d\",&s);\n\tFOR(i,0,s){\n\t\tscanf(\"%d\",&x);\n\t\tprintf(\"%d\\n\",f(bas,son-1,x));\n\t\tbas=0;\n\t\tson=n+1;\n\t}\n\treturn 0;\n}\nint f(int bas,int son,int x){\n\tif(bas+1==son)\n\t\treturn son;\n\tort = (bas + son)/2;\n\treturn (a[ort] >= x) ? f(bas,ort,x) : f(ort, son, x);\n}\n"}
{"similarity_score": 0.38461538461538464, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "3c6e547c724ed66d4696036892301e2c", "bug_code_uid": "56840c6546fe2839b30972c70b28ac5d", "src_uid": "277948a70c75840445e1826f2b23a897", "apr_id": "339f3ddffd73c5b64e58a9bc36366979", "difficulty": 1600, "tags": [], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define M 10\n\nint n=0;\n\nint T[M]={0};\n\ninline int  lowbit(int x){\n    return (x&-x);\n}\nvoid add(int x,int val){\n    for (int i=x; i<=n; i+=lowbit(i)) {\n        if (T[i]<val) {\n            T[i]=val;\n        }\n    }\n}\nint get(int x){\n    if (!x) {\n        return 0;\n    }\n    int re=-1;\n    for (int i=x;i; i-=lowbit(i)) {\n        if (re<T[i]) {\n            re=T[i];\n        }\n    }\n    return re;\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    int m=n;\n    int in=0;\n    while (m--) {\n        scanf(\"%d\",&in);\n        int du=0;\n        du=get(in-1);\n        add(in,du+1);\n    }\n    int ans=0;\n    ans=get(n);\n    printf(\"%d\",n-ans);\n    return 0;\n    \n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define M 100010\n\nint n=0;\n\nint T[M]={0};\n\n\nint main(){\n    scanf(\"%d\",&n);\n    int m=n;\n    int in=0;\n    while (m--) {\n        scanf(\"%d\",&in);\n        T[in]=T[in-1]+1;\n    }\n    int ans=0;\n    for (int i=1; i<=n; i++) {\n        if (ans<T[i]) {\n            ans=T[i];\n        }\n    }\n\n    printf(\"%d\",n-ans);\n    return 0;\n    \n}"}
{"similarity_score": 0.30527817403708984, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "89182ca2f4e2041e1c7d720416811ef8", "bug_code_uid": "3ef0fc284254b3df9bff049e41b513eb", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "7442567e7017cc420b49244478049ec9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint i,l=0,n,a[1000],j,s=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++){\n                scanf(\"%d\",&a[i]);\n\t}\n\tfor(i=1;i<=n;i++){\n                for(j=1;j<=n;j++){\n                if(a[i]==a[j]){\n               s++;\n\t}\n\telse{\n                s++;\n                l++;\n\tbreak;\n                }\n                }\n                i=s+1;\n\t}\n\tprintf(\"%d\\n\",l+1);\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n        long long int i,j,a,n=0,l=0;\n        scanf(\"%lld\",&n);\n        int s[n];\n        for(i=0;i<n;i++)\n        {\n        scanf(\"%lld\",&s[i]);\n        if(i>0){\n        if(s[i]!=s[i-1])\n        l++;\n        }\n        }\n        printf(\"%lld\\n\",l+1);\n\n    return 0;\n    }\n\n"}
{"similarity_score": 0.5704387990762124, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "38d9983334a3fae48e57584d9d84a612", "bug_code_uid": "a8287c206ad0214dfda3277c66ca8fb8", "src_uid": "6d4744d7356e709f73891270becd14e3", "apr_id": "fa0aca647aac02f22af67c0abb806697", "difficulty": 800, "tags": ["brute force", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t, n, a[100];\r\n\tint max1,max;\r\n\tscanf(\"%d\", &t);\r\n\tint i, j;\r\n\tfor (i = 0; i < t; i++)\r\n\t{\r\n\t\tmax1 = max =0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (j = 0; j < n; j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a[j]);\r\n\t\t}\r\n\t\tfor (j = 0; j < n; j++)\r\n\t\t{\r\n\t\t\tif (j == 0)max1++;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (a[j - 1] == a[j])max1++;\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (max1 > max)max = max1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", max);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n\tint t, n, a[101];\r\n\tint max1,i,max;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)\r\n\t{\r\n\t\tmax1 = 1; max = 0;\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\t}\r\n\t\tfor (i = 1; i < n; i++)\r\n\t\t{\r\n\t\t\tif (a[i] == a[i - 1])max1++;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (max < max1)max = max1;\r\n\t\t\t\tmax1 = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (max < max1)max = max1;\r\n\t\tprintf(\"%d\\n\", max);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9721656483367278, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5c30e2a5abf808735a53eb6fb2e27157", "bug_code_uid": "f18bae9c044cc1f9845231fced2dafbc", "src_uid": "a61b96d4913b419f5715a53916c1ae93", "apr_id": "ae62b1cb9d059120afe6baa17e453b45", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,count=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n        int max,min;\n        if(a[0]==a[1]){\n            min=a[0];\n            max=a[1];\n        }\n        else if(a[0]<a[1]){\n            count++;\n            min=a[0];\n            max=a[1];\n        }\n        else if(a[0]>a[1]){\n            count++;\n            min=a[1];\n            max=a[0];\n        }\n        for(int j=2;j<n;j++){\n            if(a[j]<min){\n                count++;\n                min=a[j];\n            }\n            if(a[j]>max){\n                count++;\n                max=a[j];\n            }\n        }\n        printf(\"%d\",count);\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,count=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    if(n==1)printf(\"0\");\n    else{\n        int max,min;\n        if(a[0]==a[1]){\n            min=a[0];\n            max=a[1];\n        }\n        else if(a[0]<a[1]){\n            count++;\n            min=a[0];\n            max=a[1];\n        }\n        else if(a[0]>a[1]){\n            count++;\n            min=a[1];\n            max=a[0];\n        }\n        for(int j=2;j<n;j++){\n            if(a[j]<min){\n                count++;\n                min=a[j];\n            }\n            if(a[j]>max){\n                count++;\n                max=a[j];\n            }\n        }\n        printf(\"%d\",count);\n    }\n        return 0;\n}\n"}
{"similarity_score": 0.8361516034985422, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "f8f20a74b6fa48345dfc5a29071d95f8", "bug_code_uid": "8d3896b1ec79d7e30bbb1b4dfb22dcaa", "src_uid": "695418026140545863313f5f3cc1bf00", "apr_id": "4f94fbb2699d729dcc01c9cd886ec465", "difficulty": 1700, "tags": ["number theory", "brute force", "math", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define SIZE 1000001\n\nint make_number(char *str, int b)\n{\n\tint number, i;\n\tfor (i = number = 0; str[i]; ++i)\n\t\tnumber = ((number * 10) % b + ((str[i] - '0') % b)) % b;\n\treturn number;\n}\n\nint main()\n{\n\tchar *str = calloc(SIZE, sizeof(char));\n\tint a, b, i, j, number;\n\tscanf(\"%s %d %d\", str, &a, &b);\n\tfor (i = number = 0; str[i];)\n\t{\n\t\tnumber = ((number * 10) % a + (str[i++] - '0') % a) % a;\n\t\tif (!str[i] || str[i] == '0')\n\t\t\tcontinue;\n\t\tif (!number && !make_number(str + i, b))\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor (j = 0; j < i; ++j)\n\t\t\t\tputchar(str[j]);\n\t\t\tfor (; str[i] == '0'; ++i);\n\t\t\tprintf(\"\\n%s\\n\", str + i);\n\t\t\tfree(str);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\tfree(str);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define SIZE 1000001\n\nint make_number(char *str, int b)\n{\n\tint number, i;\n\tfor (i = number = 0; str[i]; ++i)\n\t\tnumber = ((number * 10) % b + ((str[i] - '0') % b)) % b;\n\treturn number;\n}\n\nint main()\n{\n\tchar *str = calloc(SIZE, sizeof(char));\n\tunsigned long *d = calloc(SIZE, sizeof(unsigned long)), number, x;\n\tint a, b, i, j;\n\tscanf(\"%s %d %d\", str, &a, &b);\n\tfor (i = strlen(str) - 1, x = 1, number = 0; i >= 0; --i, x = ((x % b) * 10) % b)\n\t\td[i] = number = ((number % b) + ((((str[i] - '0') % b) * x) % b) % b) % b;\n\tfor (i = number = 0; str[i];)\n\t{\n\t\tnumber = ((number * 10) % a + (str[i++] - '0') % a) % a;\n\t\tif (!str[i] || str[i] == '0')\n\t\t\tcontinue;\n\t\tif (!number && !d[i])\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tfor (j = 0; j < i; ++j)\n\t\t\t\tputchar(str[j]);\n\t\t\tfor (; str[i] == '0'; ++i);\n\t\t\tprintf(\"\\n%s\\n\", str + i);\n\t\t\tfree(str), free(d);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\tfree(str), free(d);\n\treturn 0;\n}\n"}
{"similarity_score": 0.30723606168446027, "equal_cnt": 26, "replace_cnt": 20, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "fdb4cb7a4f4c59b3deec56d9e0f5f72d", "bug_code_uid": "b9c13f988045f0040fa54667423f0c5e", "src_uid": "9a823b4ac4a79f62cd0c2f88a1c9ef0c", "apr_id": "a03d1b3d43cd28d6e528336e00ea598b", "difficulty": 1200, "tags": ["schedules", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n   int a,b,i,j,out[1000][2],count,count2=-1; char s[1000][1000];\n   scanf(\"%d %d\",&a,&b);\n   for(i=0;i<a;i++)\n   {\n        scanf(\"%s\",s[i]);\n       for(j=0;j<b;j++)\n        {\n            if(s[i][j]=='G')    out[i][0]=j;\n            if(s[i][j]=='S')    out[i][1]=j;\n        }\n        if(out[i][0]>out[i][1])\n        {\n            printf(\"-1\");goto exit;\n        }\n   }\ncorrect:\n   count=0;\n   for(i=0;i<a;i++)\n   {\n       if(out[i][0]==out[i][1]) count++;\n       if(out[i][0]<out[i][1])\n        out[i][0]++;\n   }\n   if(count==a)\n    {printf(\"%d\",count2);goto exit;}\n   else\n   {\n       count2++;\n       goto correct;\n   }\nexit:\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nchar a[1005][1005];\nint main()\n{\n    int n,m,out[1005][3]={0};\n    scanf(\"%d %d\",&n,&m);\n    int i,j;\n    for(i=0;i<n;++i)\n    {\n        scanf(\"%s\",a[i]);\n        for(j=0;j<m;++j)\n        {\n            if(a[i][j]=='G')\n                out[i][0]=j;\n            if(a[i][j]=='S')\n                out[i][1]=j;\n        }\n        out[i][2]=out[i][1]-out[i][0];\n    }\n    int max=0,ch=0;\n    for(i=0;i<n;++i)\n    {\n        if(out[i][2]<0)\n            ch=1;\n    }\n    if(ch==1)\n        max=-1;\n    else\n    {\n        int j;\n        for(i=0;i<n;++i)\n        {\n            int min=35212;\n            for(j=0;j<n;++j)\n            {\n                if(out[j][2]<min && out[j][2]!=0)\n                    min=out[j][2];\n            }\n            if(min!=35212)\n            {\n                max++;\n                for(j=0;j<n;++j)\n                {\n                    if(out[j][2]!=0)\n                        out[j][2]-=min;\n                }\n            }\n        }\n    }\n    printf(\"%d\",max);\n    return 0;\n}"}
{"similarity_score": 0.8956975228161669, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "e6be7033a6c06c0bf1cf8b38bde9d1dd", "bug_code_uid": "149a3701ae2c99b94f09c4ce8059e23a", "src_uid": "7f61b1d0e8294db74d33a6b6696989ad", "apr_id": "71af9599ecbab9b3a2163636df26894b", "difficulty": 1500, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\nint n;\nint str[1111];\nint ifprime(int x)\n{\n    int i,j;\n    j=(int)sqrt(x);\n    for(i=2;i<=j;i++)\n        if(x%i==0)\n            return 0;//\u4e0d\u662f\u8d28\u56e0\u6570\n    return 1;\n}\n\nint main()\n{\n    int count;\n    int i,j;\n    while(~scanf(\"%d\",&n))\n    {\n        count=0;\n        for(i=2;i<=n;i++)\n        {\n            if(ifprime(i))\n            {\n                int temp=i;\n                while(temp<=n)\n                {\n                    str[++count]=temp;\n                    temp*=i;\n                }\n            }\n        }\n        printf(\"%d\\n\",count);\n        for(i=1;i<count;i++)\n            printf(\"%d \",str[i]);\n        if(n%2)\n            printf(\"%d\\n\",n);\n        else\n            printf(\"%d\\n\",n-1);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\nint n;\nint str[1111];\nint ifprime(int x)\n{\n    int i,j;\n    for(i=2;i<x;i++)\n        if(x%i==0)\n            return 0;//\u4e0d\u662f\u8d28\u56e0\u6570\n    return 1;\n}\n\nint main()\n{\n    int count;\n    int i,j;\n    while(~scanf(\"%d\",&n))\n    {\n        count=0;\n        for(i=2;i<=n;i++)\n        {\n            if(ifprime(i))\n            {\n                int temp=i;\n                while(temp<=n)\n                {\n                    str[++count]=temp;\n                    temp*=i;\n                }\n            }\n        }\n        printf(\"%d\\n\",count);\n        if(count)\n        {\n            for(i=1;i<count;i++)\n                printf(\"%d \",str[i]);\n            printf(\"%d\\n\",str[i]);\n        }\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9552395997893628, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "6727468580b5dd8bbfe03bac1a63ab71", "bug_code_uid": "f1f28de313ff5bd0423fdb7ec92482f8", "src_uid": "b65767c1ebfe72e08f58a9f9254eaa7b", "apr_id": "bfaf4220a4473b705c143fb82f526563", "difficulty": 1200, "tags": ["binary search", "brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#define ll long long\n\nint comp(const void *elem1, const void *elem2) {\n    int f = *((int *) elem1);\n    int s = *((int *) elem2);\n    if (f > s) return 1;\n    if (f < s) return -1;\n    return 0;\n}\n\nint main() {\n    int t;\n    scanf(\"%i\", &t);\n    for (int test = 0; test < t; test++) {\n        int n;\n        ll x;\n        scanf(\"%i %lli\", &n, &x);\n\n        int a[100000];\n        for (int i = 0; i < n; i++) {\n            scanf(\"%i\", a + i);\n        }\n\n        //printf(\"test %i: %i\\n\", test, a[1]);\n\n        qsort(a, n, sizeof(int), comp);\n\n        ll res = 0;\n        ll sum = 0;\n        for (int i = 0; i < n; i++) {\n            if (x - sum < a[i]) {\n                break;\n            }\n            sum += a[i];\n            // how often do we buy item i?\n\n            ll t = (x - sum) / (i + 1) + 1;\n            res += t;\n        }\n        printf(\"%i\\n\", res);\n    }\n}", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#define ll long long\n\nint comp(const void *elem1, const void *elem2) {\n    int f = *((int *) elem1);\n    int s = *((int *) elem2);\n    if (f > s) return 1;\n    if (f < s) return -1;\n    return 0;\n}\n\nint main() {\n    int t;\n    scanf(\"%i\", &t);\n    for (int test = 0; test < t; test++) {\n        ll n;\n        ll x;\n        scanf(\"%lli %lli\", &n, &x);\n\n        ll* a = malloc(n * sizeof(ll));\n        for (int i = 0; i < n; i++) {\n            scanf(\"%lli\", a + i);\n        }\n\n        //printf(\"test %i: %i\\n\", test, a[1]);\n\n        qsort(a, n, sizeof(ll), comp);\n\n        ll res = 0;\n        ll sum = 0;\n        for (ll i = 0; i < n; i++) {\n            if (x - sum < a[i]) {\n                break;\n            }\n            sum += a[i];\n            // how often do we buy item i?\n\n            ll p = (x - sum) / (i + 1) + 1;\n            res += p;\n        }\n        free(a);\n        printf(\"%lli\\n\", res);\n    }\n}"}
{"similarity_score": 0.9980952380952381, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "472d2585cf329e90f2f8c9569ce0582d", "bug_code_uid": "eccd896137f57029f3ae5781d17318bd", "src_uid": "ac047ceede246b40892c80dbd696e6b4", "apr_id": "7e5f6d151cf7bee75bb3fadc59fe12b3", "difficulty": 1200, "tags": [], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tint i,j,x,n,m;\n\tchar s[150];\n\tfgets(s,110,stdin);\n\tx=strlen(s);\n\tif(s[x-1]<'A')x--;\n\tfor(i=1;i<=5;i++)\n\t{\n\t\tfor(j=1;j<=20;j++)\n\t\t{\n\t\t\tif(j*i>=x)\n\t\t\t{\n\t\t\t\tn=i; m=j;\n\t\t\t\ti=j=21;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\",n,m );\n\tint k,k1=(n*m)-x,k2;\n\tk2=k1%n;\n\tk1/=n;\n\tk=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m-k1-1;j++)\n\t\t{\n\t\t\tprintf(\"%c\", s[k++]);\n\t\t}\n\t\tif(k2){printf(\"*\"); k2--;}\n\t\telse printf(\"%c\", s[k++]);\n\t\tx=k2;\n\t\twhile(x--)printf(\"*\");\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tint i,j,x,n,m;\n\tchar s[150];\n\tfgets(s,110,stdin);\n\tx=strlen(s);\n\tif(s[x-1]<'A')x--;\n\tfor(i=1;i<=5;i++)\n\t{\n\t\tfor(j=1;j<=20;j++)\n\t\t{\n\t\t\tif(j*i>=x)\n\t\t\t{\n\t\t\t\tn=i; m=j;\n\t\t\t\ti=j=21;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\",n,m );\n\tint k,k1=(n*m)-x,k2;\n\tk2=k1%n;\n\tk1/=n;\n\tk=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m-k1-1;j++)\n\t\t{\n\t\t\tprintf(\"%c\", s[k++]);\n\t\t}\n\t\tif(k2){printf(\"*\"); k2--;}\n\t\telse printf(\"%c\", s[k++]);\n\t\tx=k1;\n\t\twhile(x--)printf(\"*\");\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9874804381846636, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "bdce4d9a2d4e796ecc3c34ca0d59c1a6", "bug_code_uid": "94faf4bbf3b9a30f211094a2b7ba61a1", "src_uid": "6d03cbb251948f75bdf6061495bb0204", "apr_id": "3292fc0169548caf6044423168a12a2c", "difficulty": 1800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n,k,i,j,val,cnt;\n    scanf(\"%d %d\",&n,&k);\n    if((n*(n-1))/2<k)\n    printf(\"Impossible\");\n    else\n    {\n        int a[2*n],cnt=0,val=0;\n        for(i=0;i<2*n;i++)\n        {\n            if(k>=val && cnt<n)\n            {\n                a[i]=1;\n                cnt++;\n                k-=val;\n                val++;\n            }\n            else\n            {\n                a[i]=0;\n                val--;\n            }\n        }\n        for(i=0;i<2*n;i++)\n        {\n            if(a[i]==1)\n            printf(\"(\");\n            else\n            printf(\")\");\n        }\n    }\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tlong long int n,k,i,j,val,cnt;\n    scanf(\"%I64d %I64d\",&n,&k);\n    if((n*(n-1))/2<k)\n    printf(\"Impossible\");\n    else\n    {\n        int a[2*n],cnt=0,val=0;\n        for(i=0;i<2*n;i++)\n        {\n            if(k>=val && cnt<n)\n            {\n                a[i]=1;\n                cnt++;\n                k-=val;\n                val++;\n            }\n            else\n            {\n                a[i]=0;\n                val--;\n            }\n        }\n        for(i=0;i<2*n;i++)\n        {\n            if(a[i]==1)\n            printf(\"(\");\n            else\n            printf(\")\");\n        }\n    }\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.947075208913649, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "e455d5dc3878c9689133d7d04716a918", "bug_code_uid": "ceaa0ff977c24b05c0d28c14e6c7bae1", "src_uid": "cc4cdcd162a83189c7b31a68412f3fe7", "apr_id": "11e637aa508036b58284f03d349146ec", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\tint t,n,f,p;\n\tchar s[56];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\t\n\t\tscanf(\"%s\",s);\n\t\tint i=0;\n\t\twhile(i<=n/2)\n\t\t{\tp=s[i]-s[n-i-1];\n\t\t\tif(p<0)\n\t\t\tp=p*(-1);\n\t\t\t\n\t\t\tif(p==2||p==0)\n\t\t\tf=1;\n\t\t\telse\n\t\t\tf=0;\n\t\t\tif(f==0)\n\t\t\t{printf(\"NO\\n\");\n\t\t\tbreak;\n\t\t\t}\n\t\t\ti=i+2;\n\t\t}\n\t\t\n\t\tif(f==1)\n\t\t{\n\t\tprintf(\"YES\\n\");\n\t\t}\n\t\t\n\t}\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\tint t,n,f,p;\n\t\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\t\n\t\tscanf(\"%d\",&n);\n\t\tchar s[n];\n\t\tscanf(\"%s\",s);\n\t\tint i=0;\n\t\twhile(i<=n/2)\n\t\t{\tp=s[i]-s[n-i-1];\n\t\t\tif(p<0)\n\t\t\tp=p*(-1);\n\t\t\n\t\t\tif(p==2||p==0)\n\t\t\tf=1;\n\t\t\telse\n\t\t\tf=0;\n\t\t\tif(f==0)\n\t\t\t{printf(\"NO\\n\");\n\t\t\tbreak;\n\t\t\t}\n\t\t\ti=i+1;\n\t\t}\n\t\t\n\t\tif(f==1)\n\t\t{\n\t\tprintf(\"YES\\n\");\n\t\t}\n\t\t\n\t}\nreturn 0;\n}"}
{"similarity_score": 0.800252047889099, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "04e1ea7b470ef5c57fac733de3a41800", "bug_code_uid": "6200588b5a1ad64d36fa51bc54775bb5", "src_uid": "8f00837e04627e445dfb8b6cd0216640", "apr_id": "e025a8912712ac7e00041e0046e6bdbc", "difficulty": 900, "tags": ["greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n,i,j,k,b[3000],sum,x,a,rem;\n    scanf(\"%d\",&t);\n    while(t>0)\n    {\n        scanf(\"%d\",&n);\n        scanf(\"%d\",&a);\n        j=0;\n        k=0;\n        rem=0;\n        sum=0;\n        while(n>0)\n        {\n            x=pow(10,n-1);\n            rem=a/x;\n            rem=rem%10;\n            if(rem%2!=0)\n            {\n                b[j++]=rem;\n                //printf(\"%d\",b[j]);\n                sum+=rem;\n                if(sum%2==0)\n                    k=1;\n\n            }\n            if(k==1)\n                break;\n            n--;\n        }\n        if(k==0)\n            printf(\"-1\\n\");\n        else\n        {\n            for(i=0;i<j;i++)\n                printf(\"%d\",b[i]);\n            printf(\"\\n\");\n        }\n        t--;\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t,n,i,j,k,b[2],sum,x;\n    char a[3000];\n    scanf(\"%d\",&t);\n    while(t>0)\n    {\n        scanf(\"%d\",&n);\n        for(i=0;i<=n;i++)\n            scanf(\"%c\",&a[i]);\n        j=0;\n        k=0;\n        sum=0;\n        x=0;\n        for(i=1;i<=n;i++)\n        {\n            x = a[i]-'0';\n            //printf(\"%c\\n\",a[i]);\n            if(x%2!=0)\n            {\n                b[j++]=x;\n                sum+=x;\n                if(sum%2==0)\n                    k=1;\n            }\n            if(k==1)\n                break;\n        }\n        if(k==0)\n            printf(\"-1\\n\");\n        else\n        {\n            for(i=0;i<j;i++)\n                printf(\"%d\",b[i]);\n            printf(\"\\n\");\n        }\n        t--;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9668353007307476, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5d0e9909c3c18d73cac0e343ccf1483a", "bug_code_uid": "523c08a232012359d4e934a774f8d312", "src_uid": "3dc5850220458dec9876560150b612c4", "apr_id": "7d94e66602eb201d195e11d087cabca5", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 105\n\nint main(int argc, char *argv[])\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n\n        int n, k,i;\n        scanf(\"%d%d\", &n, &k);\n\n        static int aa[N]; \n        i = -1;\n        while (++i < n){\n            scanf(\"%d\", &aa[i]);\n        }\n        int jumps;\n        jumps = 0;\n\n        if (n==1) {\n            printf(\"1\\n\" );\n            continue;\n        }\n        i = 0;\n        while (++i < n) {\n            if (aa[i] != aa[i-1]) {\n                jumps++;\n            }\n        }\n        if (k ==1 && jumps >0) {\n            printf(\"-1\\n\");\n        } else if (k == 1 && jumps ==0) {\n            printf(\"1\\n\");\n        } else if (jumps%(k-1) == 0) {\n            printf(\"%d\\n\", jumps / (k - 1));\n        } else {\n            int m = jumps / (k - 1) + 1;\n            printf(\"%d\\n\", m);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define N 105\n\nint main(int argc, char *argv[])\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n\n        int n, k,i;\n        scanf(\"%d%d\", &n, &k);\n\n        static int aa[N]; \n        i = -1;\n        while (++i < n){\n            scanf(\"%d\", &aa[i]);\n        }\n        int jumps;\n        jumps = 0;\n\n        if (n==1) {\n            printf(\"1\\n\" );\n            continue;\n        }\n        i = 0;\n        while (++i < n) {\n            if (aa[i] != aa[i-1]) {\n                jumps++;\n            }\n        }\n        if (k ==1 && jumps >0) {\n            printf(\"-1\\n\");\n        } else if (k == 1 && jumps ==0) {\n            printf(\"1\\n\");\n        } else if (jumps == 0){\n            printf(\"1\\n\");\n        } else if (jumps%(k-1) == 0) {\n            printf(\"%d\\n\", jumps / (k - 1));\n        } else {\n            int m = jumps / (k - 1) + 1;\n            printf(\"%d\\n\", m);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.17723244717109748, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "bb682f776ec1053618c1ec4dc090af84", "bug_code_uid": "2c4bae971aa368786b19067e507bfc6b", "src_uid": "332902284154faeaf06d5d05455b7eb6", "apr_id": "bd5c496da2a693713b3123d3c3c8d582", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,cnt,i,j,q,no,ch;\n    scanf(\"%d\",&n);\n    int a[n+1][n+1];\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    scanf(\"%d\",&q);\n    while(q--)\n    {\n        scanf(\"%d\",&ch);\n        if(ch==1)\n        {\n            scanf(\"%d\",&no);\n            for(i=1;i<=n;i++)\n            a[no][i]=1-a[no][i];\n        }\n        else if(ch==2)\n        {\n            scanf(\"%d\",&no);\n            for(i=1;i<=n;i++)\n            a[i][no]=1-a[i][no];\n        }\n        else\n        {\n            cnt=0;\n            for(i=1;i<=n;i++)\n            {\n                for(j=1;j<=n;j++)\n                {\n                    if(a[i][j]==1&&a[j][i]==1)\n                    cnt++;\n                }\n            }\n            printf(\"%d\",cnt%2);\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nint main()\n{\n\tint n,cnt=0,i,j,q,no,ch;\n\tscanf(\"%d\",&n);\n\tint a[n+1][n+1];\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(a[i][i]==1)\n\t\tcnt++;\n\t}\n\t//printf(\"%d \",cnt);\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tscanf(\"%d\",&ch);\n\t\tif(ch==1)\n\t\t{\n\t\t\tscanf(\"%d\",&no);\n\t\t\tif(a[no][no]==1)\n\t\t\tcnt--;\n\t\t\telse\n\t\t\tcnt++;\n\t\t\ta[no][no]=1-a[no][no];\n\t\t}\n\t\telse if(ch==2)\n\t\t{\n\t\t\tscanf(\"%d\",&no);\n\t\t\tif(a[no][no]==1)\n\t\t\tcnt--;\n\t\t\telse\n\t\t\tcnt++;\n\t\t\ta[no][no]=1-a[no][no];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\",cnt%2);\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9502487562189055, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "115ece7981205e782ed007685b57dbb0", "bug_code_uid": "1669afe21b2debe5fbcd7f12bd5fc09f", "src_uid": "357dcc8fb7783d878cd2c4ed34eb437e", "apr_id": "cb032dd87d0807814449290350e03174", "difficulty": 1000, "tags": ["brute force", "dp", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    for(int j=1;j<=t;j++)\r\n    {\r\n        int flag=0;\r\n        char c=getchar(),prev;\r\n        while(c!='\\n'&&c!=-1)\r\n        {\r\n            prev=c;\r\n            c=getchar();\r\n            if(c=='1'&&c==prev&&!flag)\r\n            {\r\n                flag=1;\r\n            }\r\n            if(flag&&c=='0'&&c==prev)\r\n            {\r\n                printf(\"NO\\n\");\r\n                flag=2;\r\n                break;\r\n            }\r\n        }\r\n        if(flag!=2)\r\n        printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    for(int j=1;j<=t;j++)\r\n    {\r\n        int flag=0,flag2=0;\r\n        char c=getchar(),prev;\r\n        while(c!='\\n'&&c!=-1)\r\n        {\r\n            prev=c;\r\n            c=getchar();\r\n            if(c=='1'&&c==prev&&flag!=1)\r\n            {\r\n                flag=1;\r\n            }\r\n            if(flag&&c=='0'&&c==prev&&flag2==0)\r\n            {\r\n                printf(\"NO\\n\");\r\n                flag2=1;\r\n            }\r\n        }\r\n        if(flag2==0)\r\n        printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.6426642664266426, "equal_cnt": 19, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "270b079d74d8551909df55210bc57e3b", "bug_code_uid": "2585f03dad474b7a8008c35a05f98fb6", "src_uid": "a8201326dda46542b23dc4e528d413eb", "apr_id": "b96185d1c2f56bfccf152937dbaa8715", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    unsigned int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        unsigned long long w,h,n,sheet=0;\r\n        scanf(\"%lld%lld%lld\",&w,&h,&n);\r\n        if(w%2==0)\r\n        {\r\n            if(w%3==0)sheet=sheet+(w/3);\r\n            else sheet=sheet+w;\r\n        }\r\n        if(h%2==0)\r\n        {\r\n            if(h%3==0)sheet=sheet+(h/3);\r\n            else sheet=sheet+h;\r\n        }\r\n        else sheet=1;\r\n        if(n<=sheet)printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long int w,h,n,count=0,ans=1;\r\n        scanf(\"%lld%lld%lld\",&w,&h,&n);\r\n        while(w%2==0)\r\n        {\r\n            w=w/2;\r\n            count++;\r\n        }\r\n        while(h%2==0)\r\n        {\r\n            h=h/2;\r\n            count++;\r\n        }\r\n        while(count--)\r\n        {\r\n            ans=ans*2;\r\n            if(ans>=n)break;\r\n        }\r\n        if(ans>=n)printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.6559532505478451, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "d33cdb69cd2bd7e253c9a322c15f6d60", "bug_code_uid": "4ced250d27217c138dee561301852753", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "47a9a2527da4bbf9e099302be550f3cc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid swap(int a,int b)\n{\n    int temp;\n    temp=a;\n    a=b;\n    b=temp;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int pos[n],i,j,max=0,min=101,nmax,nmin,c=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&pos[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(pos[i]>max)\n        {\n            nmax=i;\n            max=pos[i];\n\n        }\n         if(pos[i]<=min)\n        {\n            nmin=i;\n            min=pos[i];\n        }\n    }\n    for(i=nmax;i>0;i--)\n    {\n       swap(pos[i],pos[i-1]) ;c++;\n    }\n    for(i=nmin;i<n-1;i++)\n    {\n        swap(pos[i],pos[i+1]);c++;\n    }\n    printf(\"%d\",c);\n}\n", "fixed": "#include<stdio.h>\nvoid swap(int a,int b)\n{\n    int temp;\n    temp=a;\n    a=b;\n    b=temp;\n}\nint main()\n{\n    int n,temp;\n    scanf(\"%d\",&n);\n    int pos[n],i,j,max=0,min=101,nmax,nmin,c=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&pos[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(pos[i]>max)\n        {\n            nmax=i;\n            max=pos[i];\n\n        }\n\n    }\n    for(i=nmax;i>0;i--)\n    {\n       temp=pos[i];\n       pos[i]=pos[i-1];\n       pos[i-1]=temp;\n       c++;\n    }\n    for(i=0;i<n;i++)\n    {\n\n       if(pos[i]<=min)\n        {\n            nmin=i;\n            min=pos[i];\n\n        }\n    }\n    for(i=nmin;i<n-1;i++)\n    {\n       temp=pos[i];\n       pos[i]=pos[i+1];\n       pos[i+1]=temp;\n       c++;\n    }\n    printf(\"%d\",c);\n}\n"}
{"similarity_score": 0.21408045977011494, "equal_cnt": 15, "replace_cnt": 10, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "ac3124a2b3c41fca69b9bb3b458bd3f0", "bug_code_uid": "9a6dd0c22f08a6e12e1a825bae2a9986", "src_uid": "f4267120fce9304fc4c45142b60fb867", "apr_id": "d669d0afee781709af424d2d493b99c8", "difficulty": 1000, "tags": ["brute force", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main(){\r\n     int m;\r\n\t scanf(\"%d\",&m);\r\n\t int i,j;\r\n     for(i=0;i<m;i++){\r\n     \tint n;\r\n     \tscanf(\"%d\",&n);\r\n     \tint a[n];\r\n     \tfor(j=0;j<n;j++){\r\n     \t\tscanf(\"%d\",&a[j]);\r\n\t\t }\r\n\t\t int k=0;\r\n\t\t for(j=0;j<n-1;j++){\r\n\t\t \tif(a[j+1]-a[j]>=4){\r\n\t\t \t\tk++;\r\n\t\t\t }\r\n\t\t\t if(j<n-2){\r\n\t\t\t \t if(a[j+2]-a[j+1]==3 && a[j+1]-a[j]==3){\r\n\t\t\t \tk++;\r\n\t\t\t   }\r\n\t\t\t }\r\n\t\t\t\r\n\t\t }\r\n\t\t if(k==0){\r\n\t\t \tprintf(\"YES\\n\");\r\n\t\t }\r\n\t\t else{\r\n\t\t \tprintf(\"NO\\n\");\r\n\t\t }\r\n\t }\t\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\nint main(){\r\n    int t,n,i,j;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(i=0;i<n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        if(a[n-1]-a[0]<=(n+1)){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\nreturn 0;\r\n}\r\n/* \r\nint main(){\r\n     int n;\r\n     scanf(\"%d\",&n);\r\n     int i,j;\r\n     for(i=0;i<n;i++){\r\n     \tint m;\r\n     \tscanf(\"%d\",&m);\r\n        int *a = malloc(m * sizeof(int));\r\n        int *b = calloc(m + 1, sizeof(int));\r\n     \tfor(j=0;j<m;j++){\r\n     \t\tscanf(\"%d\",&a[j]);\r\n     \t\tb[a[j]]++;\r\n\t\t }\r\n\t\t int k=0,s=0;\r\n\t\t for(j=1;j<m;j++){\r\n\t\t \tif(b[j]>=3){\r\n\t\t \t\ts++;\r\n\t\t \t\tk=j;\r\n\t\t \t\tbreak;\r\n\t\t\t }\r\n\t\t }\r\n\t\t \r\n\t\t if(s>0){\r\n\t\t \tprintf(\"%d\\n\",k);\r\n\t\t }\r\n\t\t else{\r\n\t\t \tprintf(\"-1\\n\");\r\n\t\t }\r\n\t\t }\r\n}\r\n*/\r\n"}
{"similarity_score": 0.9961977186311787, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "682498083595ef8418df073d29a7a2c1", "bug_code_uid": "f2af49c2c86a45ee37253ea724ef41bf", "src_uid": "7226a7d2700ee52f52d417f404c42ab7", "apr_id": "916d587e275b475505cda616c63702e1", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n        long long n;\r\n        long long s;\r\n        scanf(\"%d %lld\", &n, &s);\r\n\r\n        long long square = n * n;\r\n\r\n        printf(\"%lld\\n\", s / square);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    while (t--)\r\n    {\r\n        long long n;\r\n        long long s;\r\n        scanf(\"%lld %lld\", &n, &s);\r\n\r\n        long long square = n * n;\r\n\r\n        printf(\"%lld\\n\", s / square);\r\n    }\r\n}"}
{"similarity_score": 0.20141843971631207, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "d92b507a92dbb599f4f69144dc68c77e", "bug_code_uid": "e920a1a259f4d02f57f94cbf07ff92aa", "src_uid": "48bb148e2c4d003cad9d57e7b1ab78fb", "apr_id": "2dc19bc0cae9f69f5208bedf8ebdf95c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n   int cd;\n   int kda=0,sum=0;\n  scanf(\"%d\",&cd);\nint x[cd];\n    for (int i = 0; i < cd; i++){\n     scanf(\"%d\", &x[i]);sum+=x[i];}\n    for(int i =0;i<cd;i++){\n      for(int i =0;i<cd;i++){\n      if(x[i]<=x[i+1]&&i+1!=cd){ kda=x[i];x[i]=x[i+1];x[i+1]=kda;}\n    } \n    }\n    int summm=0;\n    for(int i=0;i<cd;++i){\n      summm=summm+x[i];\n      if(summm>sum-summm){\n        printf(\"%d\",i+1);\n        break;\n      }\n    }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nint x ,a[100],i=0;\nscanf(\"%d\",&x);\nfor(i=0;i<x;i++){\nscanf(\"%d\",&a[i]);}\nfor(int i =1;i!=x+1;++i){\n     for(int y=0;y<x;++y){\n          if (i==a[y]) printf(\"%d \",y+1);\n     }\n}\n\n}"}
{"similarity_score": 0.8910569105691057, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "109f2a7e6b3b73dbd7132297ec343fe9", "bug_code_uid": "9b6e72d17439f781e0e37de675b9a687", "src_uid": "9b9b01e5d2329291eee80356525eaf04", "apr_id": "015afeb2da9dfe479cd7a9b53c927f32", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int q,ans,L;\n    char s[101],t[101];\n    int arrs[255],arrt[255];\n    scanf(\"%d\",&q);\n    while(q--)\n    {\n        ans=0;\n        scanf(\"%s%s\",s,t);\n        L=strlen(s);\n        for(int i=0;i<=L;i++)\n        {\n            arrs[s[i]]++;\n            arrt[t[i]]++;\n        }\n        for(int i=0;i<=L;i++)\n        {\n            if(arrs[i]>0 && arrt[i]>0);\n                ans=1;\n        }\n        if(ans==0)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int q,ans,L;\n    char s[101],t[101];\n    int arrs[255],arrt[255];\n    scanf(\"%d\",&q);\n    while(q--)\n    {\n        ans=0;\n        for(int i=0;i<255;i++)\n        {\n            arrs[i]=0;\n            arrt[i]=0;\n        }\n        scanf(\"%s%s\",s,t);\n        L=strlen(s);\n        for(int i=0;i<L;i++)\n        {\n            arrs[s[i]]++;\n            arrt[t[i]]++;\n        }\n        for(int i=0;i<255;i++)\n        {\n            if(arrs[i]>0 && arrt[i]>0)\n            //printf(\"%d\\n\",i);\n                ans=1;\n        }\n        if(ans==0)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.4728888888888889, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "78c0fe8d79fc3f5c1b44407266e44b67", "bug_code_uid": "09a1d7aa4bccd4df5e66b59bef81198c", "src_uid": "d45f775613e701bbdaa4e457e6e189e2", "apr_id": "e68297c697dd85bc08f6fe5a2ec63c8d", "difficulty": 1000, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char str[300000];\n\n    int a, i, j , k , l , m;\n\n    scanf(\"%d\",&a);\n    scanf(\"%s\",&str);\n\n    for( i = 0 ; i < ( a - 1 ) ; i++ ){\n\n        for( j = i + 1; j < a ; j++ ){\n\n            char org[300000] = { [0 ... 299999] = '\\0' };\n            char rev[300000] = { [0 ... 299999] = '\\0' };\n\n            for( l = 0 , k = i ; k <= j ; l++ , k++ ){\n\n                org[l] = str[k];\n            }\n\n            strcpy(rev , org );\n\n            strrev(org);\n\n            if( (strcmp( rev , org )) > 0 ){\n\n                printf(\"YES\\n%d %d\\n\",i , j);\n\n                return 0;\n\n            }\n\n        }\n\n    }\n\n    printf(\"NO\\n\");\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main()\n{\n    char x[300005];\n\n    int i , a , j;\n    char c = 'a';\n\n    scanf(\"%d\",&a);\n    scanf(\"%s\",x);\n\n    for( i= 0 ; i < a ; i++){\n\n\n\n        if( x[i] > x[i - 1]){\n\n            c  = x[i];\n            j = i;\n\n        }\n        if( x[i] < x[i - 1]){\n\n            printf(\"YES\\n%d %d\\n\", j + 1 , i + 1);\n\n            return 0;\n        }\n\n    }\n\n    printf(\"NO\\n\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.9937733499377335, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4155101666c654080f691656a1521626", "bug_code_uid": "bbc066cb1c22e0a8a6be5d71200b420d", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "87a6a84c2e67b809d1c7dca2ae1ba4c5", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,d,arr[10000];\n\n    while(scanf(\"%d\",&n)==1)\n    {\n        \n        k=1;\n\n        if(n==3)\n        {\n            printf(\"2\\n\");\n            printf(\"1 3\\n\");\n            continue;\n        }\n        if(n==2)\n        {\n            printf(\"1\\n\");\n            printf(\"1\\n\");\n            continue;\n        }\n        printf(\"%d\\n\");\n        for(i=1; i<=n; i++)\n        {\n            if(i%2==0)\n            {\n                arr[k++]=i;\n            }\n\n        }\n        for(j=1; j<=n; j++)\n        {\n            if(j%2!=0)\n            {\n                arr[k++]=j;\n            }\n        }\n\n        for(i=1;i<k;i++)\n        {\n            printf(\"%d\",arr[i]);\n            if(i!=(k-1))\n                printf(\" \");\n        }\n        printf(\"\\n\");\n\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k,d,arr[10000];\n\n    while(scanf(\"%d\",&n)==1)\n    {\n\n        k=1;\n\n        if(n==3)\n        {\n            printf(\"2\\n\");\n            printf(\"1 3\\n\");\n            continue;\n        }\n        if(n==2)\n        {\n            printf(\"1\\n\");\n            printf(\"1\\n\");\n            continue;\n        }\n        printf(\"%d\\n\",n);\n        for(i=1; i<=n; i++)\n        {\n            if(i%2==0)\n            {\n                arr[k++]=i;\n            }\n\n        }\n        for(j=1; j<=n; j++)\n        {\n            if(j%2!=0)\n            {\n                arr[k++]=j;\n            }\n        }\n\n        for(i=1;i<k;i++)\n        {\n            printf(\"%d\",arr[i]);\n            if(i!=(k-1))\n                printf(\" \");\n        }\n        printf(\"\\n\");\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8261437908496732, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e2786501f3a5b81e2499a7da0b9325af", "bug_code_uid": "604c6eda73c004576cf44c946d7d0fd1", "src_uid": "bc532d5c9845940b5f59485394187bf6", "apr_id": "ed5d8cb95544e2a9d83205e68679ca17", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   long long int i,j,n,m,a[100000],b[100000],c=0,d=0;\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]); if(a[i]%2==1)c++; else d++;\n    }\n         for(i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&b[i]); if(b[i]%2==1)c++; else d++;\n    }\n  if(c<=d)\n   printf(\"%lld\",c);\n   else printf(\"%lld\",d);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   long long int i,j,n,m,a[100000],b[100000],c=0,d=0,e=0,f=0,s=0;\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]); if(a[i]%2==1)c++; else d++;\n    }\n         for(i=0;i<m;i++)\n    {\n        scanf(\"%lld\",&b[i]); if(b[i]%2==1)e++; else f++;\n    }\n  if(c<=f)\n   s=s+c;\n   else\n   s=s+f;\n  if(e<=d)s=s+e;\n  else\n    s=s+d;\n  printf(\"%lld\",s);\n}"}
{"similarity_score": 0.9388297872340425, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "73510b642de51f06a1868d020a59c33b", "bug_code_uid": "738484d193e5b7b1e82ea11e3f4da22a", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "0851e813473f1630ccf2a60d536081bf", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,a[100],sum,count;\n    scanf(\"%d\",&n);\n    sum=count=0;\n    while(n--)\n    {\n    for(i=0;i<3;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<3;i++)\n    {\n        if(a[i]==1)\n        {\n            sum++;\n        }\n    }\n        if(sum>=2)\n        {\n            count++;\n        }\n    }\n    printf(\"%d\",count);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a[100],sum=0,count=0;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n    for(i=0;i<3;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    sum=0;\n    for(i=0;i<3;i++)\n    {\n        if(a[i]==1)\n        {\n            sum++;\n        }\n    }\n        if(sum>=2)\n        {\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}"}
{"similarity_score": 0.9968253968253968, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f27bf7f1503ebf65e935e044553879e2", "bug_code_uid": "8d95a9e16a26121fdc022c24259d42a9", "src_uid": "2d1609b434262d30f6bd030d41a71bd5", "apr_id": "d0f1e7e72c6c618614b8a5135ee3900c", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int i, j, swap = 0, l, inv = 0, not7 = 0, not4 = 0;\n    char s1[100000], s2[100000];\n    gets(s1);\n    gets(s2);\n    l = strlen(s1);\n    for(i = 0; i <l; i++){\n        if(s1[i]!=s2[i]){\n            if(s1[i] == '7'){\n                not7++;\n            }\n            else{\n                not4++;\n            }\n        }\n    }\n    if(not7*not4==0){\n        printf(\"%d\", not7+not4);\n    }\n    else if(not7>=not4){\n        printf(\"%d\", not4 + not7 - not4);\n    }\n    else{\n        printf(\"%d\", not7 + not4 - not7);\n    }\n   //n printf(\"\\n%d, %d\\n\",not7, not4);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int i, j, swap = 0, l, inv = 0, not7 = 0, not4 = 0;\n    char s1[200000], s2[200000];\n    gets(s1);\n    gets(s2);\n    l = strlen(s1);\n    for(i = 0; i <l; i++){\n        if(s1[i]!=s2[i]){\n            if(s1[i] == '7'){\n                not7++;\n            }\n            else{\n                not4++;\n            }\n        }\n    }\n    if(not7*not4==0){\n        printf(\"%d\", not7+not4);\n    }\n    else if(not7>=not4){\n        printf(\"%d\", not4 + not7 - not4);\n    }\n    else{\n        printf(\"%d\", not7 + not4 - not7);\n    }\n   //n printf(\"\\n%d, %d\\n\",not7, not4);\n    return 0;\n}\n"}
{"similarity_score": 0.7817982456140351, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "118dfb061f079393afe3f29b5f6435d2", "bug_code_uid": "9e16b737ed0f9891f8f2b87d26ba9efe", "src_uid": "93fb13c40ab03700ef9a827796bd3d9d", "apr_id": "4c8d1909dc6b8dd4087e6f69c187fe28", "difficulty": 1000, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "/**\r\n * @file B_Maximum_Cost_Deletion.c\r\n * @author HDSC\r\n * @brief Solution for https://codeforces.com/contest/1550/problem/B\r\n * @date 2022-09-22\r\n */\r\n\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <alg.h>\r\n\r\nint main ()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 1; i <= t; ++ i)\r\n    {\r\n        int n, a, b;\r\n        scanf(\"%d%d%d\", &n, &a, &b);\r\n\r\n        char S[n];\r\n        scanf(\"%s\", S);\r\n\r\n        int Size = 0;\r\n        char Comparator = S[0];\r\n        for(int i = 1; i < strlen(S); ++ i)\r\n        {\r\n            if(S[i] != Comparator)\r\n            {\r\n                Comparator = S[i];\r\n                ++ Size;\r\n            }\r\n        }\r\n        ++ Size;\r\n\r\n        if(a < 0)\r\n        {\r\n            printf(\"%d\\n\", n * a + n * b);\r\n        }\r\n        else\r\n        {\r\n            if(Size == 1)\r\n            {\r\n                printf(\"%d\\n\", n * a + b);\r\n            }\r\n            else\r\n            {\r\n                printf(\"%d\\n\", n * a + max(b * n, (Size / 2 + 1) * b));\r\n            }\r\n        }\r\n    }\r\n}", "fixed": "/**\r\n * @file B_Maximum_Cost_Deletion.c\r\n * @author HDSC\r\n * @brief Solution for https://codeforces.com/contest/1550/problem/B\r\n * @date 2022-09-22\r\n */\r\n\r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\n#define max(a, b) ((a > b)? (a) : (b))\r\n\r\nint main ()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int i = 1; i <= t; ++ i)\r\n    {\r\n        int n, a, b;\r\n        scanf(\"%d%d%d\", &n, &a, &b);\r\n\r\n        char S[n];\r\n        scanf(\"%s\", S);\r\n\r\n        int Size = 0;\r\n        char Comparator = S[0];\r\n        for(int i = 1; i < strlen(S); ++ i)\r\n        {\r\n            if(S[i] != Comparator)\r\n            {\r\n                Comparator = S[i];\r\n                ++ Size;\r\n            }\r\n        }\r\n        ++ Size;\r\n\r\n        printf(\"%d\\n\", n * a + max(b * n, (Size / 2 + 1) * b));\r\n    }\r\n}"}
{"similarity_score": 0.9329446064139941, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f6e084d19fcf038d8147ce2806bc7881", "bug_code_uid": "0c18e3a0697fc414b3b7f4eef2db9e34", "src_uid": "db4a25159067abd9e3dd22bc4b773385", "apr_id": "b2c0087ee758b75a585bdbfcc9a00993", "difficulty": 900, "tags": ["geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <string.h>\n#include<math.h>\n\nint main()\n{\n    double n, k, x, y, a, b, d=0;\n    scanf(\"%lf%lf%lf%lf\",&n, &k, &a, &b);\n    while(--n)\n    {\n        scanf(\"%lf%lf\", &x,&y);\n        d += sqrt((x-a)*(x-a) + (y-b)*(y-b));\n        a = x;\n        b = y;\n    }\n    d *= k;\n    printf(\"%lf\\n\", d/50);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include <string.h>\n#include<math.h>\n\nint main()\n{\n    double n, k, x, y, a, b, d=0;\n    scanf(\"%lf%lf%lf%lf\",&n, &k, &a, &b);\n    while(--n)\n    {\n        scanf(\"%lf%lf\", &x,&y);\n        d += sqrt((x-a)*(x-a) + (y-b)*(y-b));\n        a = x;\n        b = y;\n    }\n    d *= k;\n    float f = d/50;\n    printf(\"%f\\n\", f);\n    return 0;\n}\n"}
{"similarity_score": 0.2532588454376164, "equal_cnt": 15, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "3a24bba29819f2f04085c7c9791421fa", "bug_code_uid": "88ad586653c5f1ecdfa2dcfdf6a77b77", "src_uid": "2545b6af730f99193041a8810b728cb3", "apr_id": "f35924db5f719fa800fafb7b79436e7b", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,a[101],b[101],c=0,i;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%d\",&a[i],&b[i]);\n    }\n    scanf(\"%d\",&k);\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<k&&b[i]<k)\n            c++;\n    }\n    printf(\"%d\",(n-c));\n    return 0;\n}\n", "fixed": "\n #include<stdio.h>\nmain()\n{\n\tint n, a[101], b[101], k, c = 0, i;\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d%d\", &a[i], &b[i]);\n\tscanf(\"%d\", &k);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (a[i] < k && b[i] < k)\n\t\t\tc++;\n\t}\n\tprintf(\"%d\\n\", (n - c));\n}"}
{"similarity_score": 0.9983633387888707, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cb77aa99cb279d6ecf839c3653684c65", "bug_code_uid": "a55c22c957e5cf326fea3f14388e5cdf", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "c328fb9d72aec0c7c62424cc2926fc80", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint vowel(char ch)\n{\n\t\n\tif (ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u')\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}\nint main()\n{\n\tint count=0,len1,len2;\n\tchar string1[200];\n\tchar string2[200];\n\tscanf(\"%s\",string1);\n\tscanf(\"%s\",string2);\n\tlen1=strlen(string1);\n\tlen2=strlen(string2);\n\tif (len1!=len2)\n\t{\n\t\tprintf(\"no\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor (int i = 0; i <len1 ; i++)\n\t\t{\n\t\t\tif (vowel(string1[i])==vowel(string2[i]))\n\t\t\t{\n\t\t\t\tcount=0;\n\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"no\" );\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\tif (count==0)\n\t{\n\t\tprintf(\"yes\" );\n\t\treturn 0;\n\t}\n\t}\n\t\n}\n\t\n\n\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint vowel(char ch)\n{\n\t\n\tif (ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u')\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}\nint main()\n{\n\tint count=0,len1,len2;\n\tchar string1[2000];\n\tchar string2[2000];\n\tscanf(\"%s\",string1);\n\tscanf(\"%s\",string2);\n\tlen1=strlen(string1);\n\tlen2=strlen(string2);\n\tif (len1!=len2)\n\t{\n\t\tprintf(\"no\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tfor (int i = 0; i <len1 ; i++)\n\t\t{\n\t\t\tif (vowel(string1[i])==vowel(string2[i]))\n\t\t\t{\n\t\t\t\tcount=0;\n\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"no\" );\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\tif (count==0)\n\t{\n\t\tprintf(\"yes\" );\n\t\treturn 0;\n\t}\n\t}\n\t\n}\n\t\n\n\n"}
{"similarity_score": 0.8154020385050963, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "66b3f8ed77e7233513a17544b32f4566", "bug_code_uid": "03d3510494560b498e0267021d8ba449", "src_uid": "1adb4675dc88208f8a05a2db49bb44cb", "apr_id": "65c48d6403dc7dfe2253f11b8b5b1b33", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int a,b,i,j,k,n,m;\n\n    scanf(\"%d %d\",&n,&m);\n\n    int aa[2*n+1];\n\n    for(i=0;i<2*n+1;i++)\n    {\n        scanf(\"%d\",&aa[i]);\n    }\n    for(i=0;i<2*n+1,m!=0;i++)\n    {\n        if(i%2!=0)\n        {\n            if(aa[i]>1 && aa[i]-1>aa[i-1] && aa[i]+1>aa[i+1])\n            {\n                aa[i]=aa[i]-1;\n                m--;\n            }\n        }\n    }\n    for(i=0;i<2*n+1;i++)\n    {\n        printf(\"%d \",aa[i]);\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int a,b,i,j,k,n,m;\n\n    scanf(\"%d %d\",&n,&m);\n\n    int aa[2*n+1];\n\n    for(i=0;i<2*n+1;i++)\n    {\n        scanf(\"%d\",&aa[i]);\n    }\n    for(i=1;i<2*n+1,m!=0;i=i+2)\n    {\n            if(aa[i]>1 && aa[i]-1>aa[i-1] && aa[i]-1>aa[i+1])\n            {\n                aa[i]=aa[i]-1;\n                m--;\n            }\n    }\n    for(i=0;i<2*n+1;i++)\n    {\n        printf(\"%d \",aa[i]);\n    }\n}\n"}
{"similarity_score": 0.980565371024735, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6b7ced8d0b320cf917fcaf8fa44588c2", "bug_code_uid": "ce9fc602db272481b1c20f43386ba14c", "src_uid": "3ccc98190189b0c8e58a96dd5ad1245d", "apr_id": "b9be81d5b058faf583c7754fe50f275c", "difficulty": 1100, "tags": ["implementation", "greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int a,int b)\n{\n\treturn (a<b)?a:b;\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,m;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tint i,j,rc=0,cc=0,a[n][m],f;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tf=0;\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\t\tif(a[i][j]==1&&f==0)\n\t\t\t\t{\n\t\t\t\t\trc++;\n\t\t\t\t\tf=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<m;i++)\n\t\t{\n\t\t\tf=0;\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(a[j][i]==1&&f==0)\n\t\t\t\t{\n\t\t\t\t\tcc++;\n\t\t\t\t\tf=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans=min(rc,cc);\n\t\tif(ans%2==1)\n\t\tprintf(\"Ashish\\n\");\n\t\telse\n\t\tprintf(\"Vivek\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint min(int a,int b)\n{\n\treturn (a<b)?a:b;\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n,m;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tint i,j,rc=0,cc=0,a[n][m],f;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tf=0;\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\t\tif(a[i][j]==1&&f==0)\n\t\t\t\t{\n\t\t\t\t\trc++;\n\t\t\t\t\tf=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<m;i++)\n\t\t{\n\t\t\tf=0;\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(a[j][i]==1&&f==0)\n\t\t\t\t{\n\t\t\t\t\tcc++;\n\t\t\t\t\tf=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trc=n-rc;\n\t\tcc=m-cc;\n\t\tint ans=min(rc,cc);\n\t\tif(ans%2==1)\n\t\tprintf(\"Ashish\\n\");\n\t\telse\n\t\tprintf(\"Vivek\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9926289926289926, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9a8492e93c429e546a97dae895b14c0d", "bug_code_uid": "079519df4921c7052272edfd44316531", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "280caf7199a9f898a437413a126cc130", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "iqdv\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\\n\", &t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\\n\", &n);\r\n        if(n%7==0)\r\n        {\r\n            printf(\"%d\\n\", n);\r\n        }\r\n        else\r\n        {\r\n           n=n/10;\r\n           n=n*10;\r\n           while(n%7!=0)\r\n           {\r\n               n++;\r\n           }\r\n           printf(\"%d\\n\", n);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n;\r\n    scanf(\"%d\\n\", &t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\\n\", &n);\r\n        if(n%7==0)\r\n        {\r\n            printf(\"%d\\n\", n);\r\n        }\r\n        else\r\n        {\r\n           n=n/10;\r\n           n=n*10;\r\n           while(n%7!=0)\r\n           {\r\n               n++;\r\n           }\r\n           printf(\"%d\\n\", n);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9951807228915662, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d1fb6acaa49332bc1fae2864c996d184", "bug_code_uid": "19f11a161a317d2395e5e26bee95874e", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "0f0649bd2601885411396df4435108f4", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,p,q,ara[1000],ara1[1000],ara3[1000]={0},i,flag=1;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&p);\n\tfor(i=0;i<p;i++){\n\t\tscanf(\"%d\",&ara[i]);\n\t\tara3[ara[i]]=1;\n\t}\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++){\n\t\tscanf(\"%d\",&ara1[i]);\n\t\tara3[ara1[i]]=1;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(ara3[i]==0) \n\t\tflag=0;\n\t\tbreak;\n\t}\n\t\n\tif(flag==0) printf(\"Oh, my keyboard!\\n\");\n\telse printf(\"I become the guy.\\n\");\n\t\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,p,q,ara[1000],ara1[1000],ara3[1000]={0},i,flag=1;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&p);\n\tfor(i=0;i<p;i++){\n\t\tscanf(\"%d\",&ara[i]);\n\t\tara3[ara[i]]=1;\n\t}\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++){\n\t\tscanf(\"%d\",&ara1[i]);\n\t\tara3[ara1[i]]=1;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(ara3[i]==0) {\n\t\tflag=0;\n\t\tbreak;\n\t}\n\t}\n\t\n\tif(flag==0) printf(\"Oh, my keyboard!\\n\");\n\telse printf(\"I become the guy.\\n\");\n\t\n}"}
{"similarity_score": 0.9925373134328358, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4ef1a7be2f19b56babf1ba2a12679ef4", "bug_code_uid": "f9057a0c2706140ceba0a49c335cb320", "src_uid": "2589e832f22089fac9ccd3456c0abcec", "apr_id": "6a360870a69666cf27fd313ec5198323", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint x,y,n,result,test;\n\tscanf(\"%d\",&test);\n\twhile(test != 0){\n\tscanf(\"%d %d %d\",&x,&y,&n);\n\tif(n<x){\n\tresult=y;\n\tprintf(\"%d\",result);\n\t}\n\telse{\n\tint r = n % x;\n\tint diff = r - y;\n\tif(diff == 0)\n\t    result = n;\n\telse if(diff>0)\n\tresult = n - diff;\n\t else\n\t {\n\t     int a = n - r;\n\t     result = a - (x-y);\n\t }\n\t    printf(\"%d\",result);\n\t}\n\ttest--;\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n \nint main() {\n\tint x,y,n,result,test;\n\tscanf(\"%d\",&test);\n\twhile(test != 0){\n\tscanf(\"%d %d %d\",&x,&y,&n);\n\tif(n<x){\n\tresult=y;\n\tprintf(\"%d\\n\",result);\n\t}\n\telse{\n\tint r = n % x;\n\tint diff = r - y;\n\tif(diff == 0)\n\t    result = n;\n\telse if(diff>0)\n\tresult = n - diff;\n\t else\n\t {\n\t     int a = n - r;\n\t     result = a - (x-y);\n\t }\n\t    printf(\"%d\\n\",result);\n\t}\n\ttest--;\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9966442953020134, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e51216002530850421945569a7e12879", "bug_code_uid": "e3ee4ab520c3a5c4c96aa7f139cca72f", "src_uid": "d67a97a3b69d599b03d3fce988980646", "apr_id": "ff004ecdc972c38c1c82b7df0948bd04", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int test,a,b,i;\n    long int moves = 0;\n    scanf(\"%d\",&test);\n    while(test--){\n     scanf(\"%d %d\",&a,&b);\n     moves = 0;\n     i = (int)abs(a-b);\n     printf(\"%d \",i);\n     moves = i/10 +((i%10 == 0)?0:1);\n     printf(\"%ld\\n\",moves);\n    }\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int test,a,b,i;\n    long int moves = 0;\n    scanf(\"%d\",&test);\n    while(test--){\n     scanf(\"%d %d\",&a,&b);\n     moves = 0;\n     i = (int)abs(a-b);\n     //printf(\"%d \",i);\n     moves = i/10 +((i%10 == 0)?0:1);\n     printf(\"%ld\\n\",moves);\n    }\n}"}
{"similarity_score": 0.10774410774410774, "equal_cnt": 14, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "4accf4d9541719b83f8b7384f94b687b", "bug_code_uid": "cd8f2baf0208116bbbc08bee93216df6", "src_uid": "99e5c907b623c310d6f1599f485ca21d", "apr_id": "66606d5189e53b01c9c9293f7b656a3e", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "/******************************************************************************\r\n\r\nWelcome to GDB Online.\r\nGDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,\r\nC#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.\r\nCode, Compile, Run and Debug online from anywhere in world.\r\n\r\n*******************************************************************************/\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n   int t,i,n,r=0,j,k;\r\n   scanf(\"%d\",&t);\r\n   for(i=0;i<t;i++){\r\n       r=0;\r\n       scanf(\"%d\",&n);\r\n       int a[n];\r\n       scanf(\"%d\",&a[0]);\r\n       t=a[0];\r\n       for(j=1;j<n;j++){\r\n           scanf(\"%d\",&a[j]);\r\n           if(a[j]<t){\r\n               t=a[j];\r\n           }\r\n       }\r\n       for(k=0;k<n;k++){\r\n           if(a[k]>t){\r\n               r++;\r\n           }\r\n       }\r\n       printf(\"%d\\n\",r);\r\n   }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint comparator (const void * p1, const void * p2)\r\n{\r\n  return (*(int*)p1 - *(int*)p2);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int arr[n],count=0;\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n         qsort(arr, n ,sizeof(int), comparator);\r\n        for(int i=1;i<n;i++){\r\n            if(arr[i]!=arr[0]){\r\n                count++;\r\n            }\r\n        }  \r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.982421875, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7972eac79daed419400f19acdc1e40c2", "bug_code_uid": "978e24099ecbadd3d08693763fcf3b4b", "src_uid": "91541d10c5ae52be8da33412359bd019", "apr_id": "81f86ce3dd47dad44ad935ac627d3e2c", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void*a,const void*b) // \u6392\u5e8f\u89c4\u5219\uff08\u6309\u5347\u5e8f\u6392\uff09\n{\nreturn *(int*)b-*(int*)a;\n}\n\nint main(){\n    int i,n,m,sum=0;\n    int a[100005],b[100005],r[100005];\n\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n        sum+=a[i];\n        r[i]=a[i]-b[i];\n    }\n\n    qsort(r,n,sizeof(int),cmp);\n    \n    i=0;\n    while(sum>m&&i<n){\n        sum-=r[i];\n        i++;\n    }\n\n    if(sum<=m)printf(\"%d\",i);\n    else printf(\"-1\");\n\n    return 0;\n    }", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void*a,const void*b) // \u6392\u5e8f\u89c4\u5219\uff08\u6309\u5347\u5e8f\u6392\uff09\n{\nreturn *(int*)b-*(int*)a;\n}\n\nint main(){\n    int i,n,m;\n    double sum=0;\n    int a[100005],b[100005],r[100005];\n\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n        sum+=a[i];\n        r[i]=a[i]-b[i];\n    }\n\n    qsort(r,n,sizeof(int),cmp);\n\n    i=0;\n    while(sum>m&&i<n){\n        sum-=r[i];\n        i++;\n    }\n\n    if(sum<=m)printf(\"%d\",i);\n    else printf(\"-1\");\n\n    return 0;\n    }"}
{"similarity_score": 0.3586278586278586, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "1ff1b11a6f7d1ea6143c7479319bf9fa", "bug_code_uid": "6bb09389b43aa6d13e70cf048e5f4da2", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "a39afa80b6e5f9c70650656efb5a8f5e", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\nint n,i,highest_price=0,lowest_quality=0,price1,price2,quality1,quality2;\n\nscanf(\"%d\",&n);\n\n\nscanf(\"%d\",&price1);\nscanf(\"%d\",&quality1);\n\n\n\nfor(i=1;i<n;i++)\n{\n\n    scanf(\"%d\",&price2);\n    scanf(\"%d\",&quality2);\n    if(i=1 && price1==quality1)\n    {\n        price1=price2;\n        quality1=quality2;\n        continue;\n    }\n\n\nif(price2==quality2)\n        continue;\n\n\n if(price2>price1 && quality2<quality1 ){\n        printf(\"Happy Alex\");\n        return 0;}\n\n    if(price2<price1 && quality2>quality1 )\n       {printf(\"Happy Alex\");\n       return 0;}\n\n    if(quality2<=quality1)\n             lowest_quality=quality2;\n\n    else lowest_quality = quality1;\n\n\n           if(price2>=price1)\n              highest_price=price2;\n\n           else highest_price=price1;\n\n           price1=highest_price;\n           quality1=lowest_quality;\n\n\n\n\n\n\n\n\n\n\n\n    }\n    printf(\"Poor Alex\");\n    return 0;\n}\n\n", "fixed": "\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\nint n,i,highest_price=0,lowest_quality=0,price1,price2,quality1,quality2;\n\nscanf(\"%d\",&n);\n\n\nscanf(\"%d\",&price1);\nscanf(\"%d\",&quality1);\n\n\n\nfor(i=1;i<n;i++)\n{\n\n    scanf(\"%d\",&price2);\n    scanf(\"%d\",&quality2);\n\n    if(price1==quality1)\n    {\n        price1=price2;\n        quality1=quality2;\n        continue;\n    }\n\n\nif(price2==quality2)\n        continue;\n\n\n if(price2>price1 && quality2<quality1 ){\n        printf(\"Happy Alex\");\n        return 0;}\n\n    if(price2<price1 && quality2>quality1 )\n       {printf(\"Happy Alex\");\n       return 0;}\n\n    if(quality2<=quality1)\n             lowest_quality=quality2;\n\n    else lowest_quality = quality1;\n\n\n           if(price2>=price1)\n              highest_price=price2;\n\n           else highest_price=price1;\n\nif(highest_price!=lowest_quality){\n           price1=highest_price;\n           quality1=lowest_quality;}\n\n\n\n\n\n\n\n\n\n\n\n    }\n    printf(\"Poor Alex\");\n    return 0;\n}\n\n"}
{"similarity_score": 0.8065173116089613, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "76758e9ee478656bc12d31a8a1c2824d", "bug_code_uid": "22c08fd9933ac5482510091d0e836951", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "24406aa82a790469c2278f5ea3967a52", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,a;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&a);\n        if(a>=60&&a<=180)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n    int b,t,a;\n    float c;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&a);\n        c=360.0/(180.0-a);\n        b=(c);\n        if(c-b==0)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9951890034364261, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "4709920eac833f70cd8b2ae1bbc4952a", "bug_code_uid": "c6b802f748044123a207ae20249b7aac", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "d2aaf37f88aeb0171ac64e897ab05d29", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main (void)\n{\n    int n = 0;\n    int sum = 0;\n    scanf(\"%i\", &n);\n    int z[100] = {0};\n    for (int i =0; i< n;i++)\n    {\n        scanf(\"%i\", &z[i]);\n        sum = sum + z[i];\n    }\n    for (int k = 0; k < n; k++)\n    {\n        for (int j = 1; j <n; j++)\n        {\n            if (z[j] < z[j-1])\n            {\n                int y = z[j];\n                z[j] = z[j-1];\n                z[j-1] = y;\n            }\n        }\n    }\n    for (int d = 0; d < n ; d++)\n        printf(\"%i\", z[d]);\n    printf(\"\\n%i\\n\", sum);\n    sum = sum / 2;\n    int c =0, number = 0, b = n-1;\n    while (number <= sum && c < n)\n    {\n        number = number + z[b];\n        b--;\n        c++;\n    }\n    printf(\"%i\", c);\n}\n", "fixed": "#include <stdio.h>\n\nint main (void)\n{\n    int n = 0;\n    int sum = 0;\n    scanf(\"%i\", &n);\n    int z[100] = {0};\n    for (int i =0; i< n;i++)\n    {\n        scanf(\"%i\", &z[i]);\n        sum = sum + z[i];\n    }\n    for (int k = 0; k < n; k++)\n    {\n        for (int j = 1; j <n; j++)\n        {\n            if (z[j] < z[j-1])\n            {\n                int y = z[j];\n                z[j] = z[j-1];\n                z[j-1] = y;\n            }\n        }\n    }\n//    for (int d = 0; d < n ; d++)\n//        printf(\"%i\", z[d]);\n//    printf(\"\\n%i\\n\", sum);\n    sum = sum / 2;\n    int c =0, number = 0, b = n-1;\n    while (number <= sum && c < n)\n    {\n        number = number + z[b];\n        b--;\n        c++;\n    }\n    printf(\"%i\", c);\n}"}
{"similarity_score": 0.8898071625344353, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "3f8fee588bb4df02d69edf6930a852f6", "bug_code_uid": "506f99ce4e622f86cac79e8f8d614bbf", "src_uid": "5f8916876c2889cfe9265cd71905ad99", "apr_id": "23a35e559c988a19ea89fc494a9019a1", "difficulty": 1800, "tags": ["binary search", "greedy", "sortings"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nint n, m;\nint joy[10000][10000];\n\nbool check(int value) {\n\tbool abl[m];\n\tbool pair = false;\n\n\tfor (int k = 0; k < m; k++) {\n\t\tabl[k] = 0;\n\t}\n\n\tfor (int i = 0; i < n; i++) {\n\t\tint count = 0;\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (joy[i][j] >= value) {\n\t\t\t\tabl[j] = true;\n\t\t\t\tcount++;\n\t\t\t}\t\t\n\t\t}\n\n\t\tif (count > 1) {\n\t\t\tpair = true;\n\t\t}\n\t}\n\n\tif (!pair && m > 1) return false;\n\n\tbool found = true;\n\n\tfor (int j = 0; j < m; j++) {\n\t\tfound = found && abl[j];\n\t}\n\n\treturn found;\n}\n\n\nint main() {\n\t// freopen(\"input.txt\", \"r\", stdin);\n\t// freopen(\"output.txt\", \"w\", stdout);\n\n\tint t;\n\n\tscanf(\"%d\", &t);\n\n\tfor (int k = 0; k < t; k++) {\n\t\tscanf(\"%d %d\", &n, &m);\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tscanf(\"%d\", &joy[i][j]);\n\t\t\t}\n\t\t}\n\n    int l = 1, r = 2;\n\n    while (check(r)) { r *= 2; }\n    while (r - l > 1) {\n\t\t\tint mid = (r + l) / 2;\n\t\t\tif (check(mid)) l = mid;\n\t\t\telse r = mid;\n    }\n\n\t\tprintf(\"%d\\n\", l);\n\t}\n\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nint n, m;\nint **joy;\n\nbool check(int value) {\n\tbool abl[m];\n\tbool pair = false;\n\n\tfor (int k = 0; k < m; k++) {\n\t\tabl[k] = 0;\n\t}\n\n\tfor (int i = 0; i < n; i++) {\n\t\tint count = 0;\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (joy[i][j] >= value) {\n\t\t\t\tabl[j] = true;\n\t\t\t\tcount++;\n\t\t\t}\t\t\n\t\t}\n\n\t\tif (count > 1) {\n\t\t\tpair = true;\n\t\t}\n\t}\n\n\tif (!pair && m > 1) return false;\n\n\tbool found = true;\n\n\tfor (int j = 0; j < m; j++) {\n\t\tfound = found && abl[j];\n\t}\n\n\treturn found;\n}\n\n\nint main() {\n#ifdef LOCAL\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\n\tint t;\n\n\tscanf(\"%d\", &t);\n\n\n\tfor (int k = 0; k < t; k++) {\n\t\tscanf(\"%d %d\", &n, &m);\n\n\t\tjoy = (int **)malloc(sizeof(int *) * n);\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tjoy[i] = (int *)malloc(sizeof(int) * m);\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tscanf(\"%d\", &joy[i][j]);\n\t\t\t}\n\t\t}\n\n    int l = 1, r = 2;\n\n    while (check(r)) { r *= 2; }\n    while (r - l > 1) {\n\t\t\tint mid = (r + l) / 2;\n\t\t\tif (check(mid)) l = mid;\n\t\t\telse r = mid;\n    }\n\n\t\tprintf(\"%d\\n\", l);\n\t\tfree(joy);\n\t}\n\n\n  return 0;\n}\n"}
{"similarity_score": 0.5012325390304027, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "119d453053716a4820415be9597ea7e4", "bug_code_uid": "9967c3295e66086e91aa33f56c65a6a5", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "902cb659f339b0e23b88ae2eebf464ce", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t, n, i;\r\n    scanf(\"%d\",&t);\r\n    char name[10];\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",&name);\r\n        if(n==5){\r\n            int sum = 0;\r\n            for(i=0;i<n;i++){\r\n                int value = (int)name[i];\r\n                sum = sum + value;\r\n            }\r\n            if(sum==529)\r\n                printf(\"YES\\n\");\r\n            else\r\n                printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t, n, i, j, length;\r\n    scanf(\"%d\",&t);\r\n    char name[]=\"Timru\";\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        char string[n], temp;\r\n        scanf(\"%s\",&string);\r\n        for (i = 0; i < n-1; i++) {\r\n            for (j = i+1; j < n; j++) {\r\n                if (string[i] > string[j]) {\r\n                    temp = string[i];\r\n                    string[i] = string[j];\r\n                    string[j] = temp;\r\n                }\r\n            }\r\n        }\r\n        if(strcmp(string,name)==0){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.969258589511754, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "293d700aeed76f07e099ade87015eb62", "bug_code_uid": "8880561eb37977b352756235ed1a4beb", "src_uid": "0671972bc2b6452d51d048329e6e0106", "apr_id": "a63beab310a9ea8480385b30008102d0", "difficulty": 900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    int i,j,k;\n    scanf(\"%d\",&t);\n    int n[t],x[t],y[t],p[t];\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%d %d\",&n[i],&x[i]);\n        y[i]=n[i]-x[i];\n        if(y[i]==1) printf(\"NO\\n\");\n        else printf(\"YES\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    int i,j,k;\n    scanf(\"%d\",&t);\n    long long int n[t],x[t],y[t],p[t];\n    for(i=0; i<t; i++)\n    {\n        scanf(\"%I64d %I64d\",&n[i],&x[i]);\n        y[i]=n[i]-x[i];\n        if(y[i]==1) printf(\"NO\\n\");\n        else printf(\"YES\\n\");\n    }\n}"}
{"similarity_score": 0.9851042701092354, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8bc430837c5eb4a430931b794084f605", "bug_code_uid": "cd7b9828a1613f08c39b028452862bd2", "src_uid": "ed26479cdf72ad9686bbf334d90aa0be", "apr_id": "c2a81dcc7efab125a33e7154799dcb18", "difficulty": 1100, "tags": ["constructive algorithms"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   int a,b,x,y,i,j;\n   scanf(\"%d %d %d %d\",&a,&b,&x,&y);\n   int arr[100][100]={0};\n   for(i=x;i>=1;i--)\n   {\n       arr[i][y]=1;\n       printf(\"%d %d\\n\",i,y);\n   }\n   for(i=1;i<=a;i++)\n     for(j=1;j<=b;j++)\n       {\n           if(i%2!=0)\n           {\n               if(arr[i][j]!=1){ arr[i][j]=1; printf(\"%d %d\\n\",i,j);}\n           }\n           else\n           {\n               if(arr[i][b-j+1]!=1){ arr[i][b-j+1]=1; printf(\"%d %d\\n\",i,b-j+1);}\n           }\n       }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n   int a,b,x,y,i,j;\n   scanf(\"%d %d %d %d\",&a,&b,&x,&y);\n   int arr[1000][1000]={0};\n   for(i=x;i>=1;i--)\n   {\n       arr[i][y]=1;\n       printf(\"%d %d\\n\",i,y);\n   }\n \n   for(i=1;i<=a;i++)\n     for(j=1;j<=b;j++)\n       {\n           if(i%2!=0)\n           {\n               if(arr[i][j]!=1) { arr[i][j]=1; printf(\"%d %d\\n\",i,j);}\n           }\n           else\n           {\n               if(arr[i][b-j+1]!=1) { arr[i][b-j+1]=1; printf(\"%d %d\\n\",i,b-j+1);}\n           }\n       }\n\n}"}
{"similarity_score": 0.7655172413793103, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "794b4933bbbcca8e77273547eaa88f8a", "bug_code_uid": "5286435a65070b63dba4e7d01e9e91d9", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "910db3b6d40788bb1ab11973eda7f596", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nusing namespace std;\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint a;\n\t\tcin>>a;\n\t\tcout<<a<<\"\\n\";\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\tprintf(\"%d\\n\",a);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9271028037383178, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ac009e1d77291cf6fd4141843bd4ac81", "bug_code_uid": "fe113be3ac377933a13a4dbbace93819", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "ac348f5ef754af87c425691235241548", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n   int n,house,airport,i;\n   char A[10000];\n   scanf(\"%d%d%d\",&n,&house,&airport);\n   scanf(\"%s\",A);\n   if(A[house-1] == A[airport-1])\n   {\n       printf(\"0\\n\");\n   }\n   else{\n    printf(\"1\\n\");\n   }\n   return 0;\n\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n   int n,house,airport,i;\n   char A[1000000];\n   scanf(\"%d%d%d\",&n,&house,&airport);\n   scanf(\"%s\",A);\n   if(A[house-1] == A[airport-1])\n   {\n       printf(\"0\\n\");\n   }\n   else if(A[house-1] != A[airport-1])\n    {\n    printf(\"1\\n\");\n   }\n   return 0;\n\n}\n"}
{"similarity_score": 0.9526542324246772, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "93c04dbc6a9f035de626fd2acd0a5b80", "bug_code_uid": "75c8f58f38a25f1b1379615cec38a907", "src_uid": "859d66fc2c204a8c002012b1fb206645", "apr_id": "b043fcd4f71386e1077c6070d762b360", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m,i,j,f;\n    scanf(\"%d%d\",&n,&m);\n    int a[n];\n    for(f=1; f<=n; f++)\n        scanf(\"%d\",&a[f-1]);\n    while(m--)\n    {\n        scanf(\"%d%d\",&i,&j);\n        a[i]+=a[i-1]-j;\n        a[i-1]=0;\n        a[i-2]+=j-1;\n    }\n    for(f=1; f<=n; f++)\n        printf(\"%d\\n\",a[f-1]);\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,m,i,j,f;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(f=1; f<=n; f++)\n        scanf(\"%d\",&a[f-1]);\n    scanf(\"%d\",&m);\n    while(m--)\n    {\n        scanf(\"%d%d\",&i,&j);\n        a[i]+=a[i-1]-j;\n        a[i-1]=0;\n        a[i-2]+=j-1;\n    }\n    for(f=1; f<=n; f++)\n        printf(\"%d\\n\",a[f-1]);\n\n}\n"}
{"similarity_score": 0.9820245979186376, "equal_cnt": 10, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "a60ac1823ec368beb6f1f03f7300eef2", "bug_code_uid": "520268e987944f44924373456d4d0e82", "src_uid": "b3c6058893f935d88196113fab581cf8", "apr_id": "253455337ffdf689a6d4c2db07bf3259", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{   int cpt=0;\n    unsigned int n;printf(\"donner la taille du table A tq soit entre 1 et 3000\\t\");\nscanf(\"%ud\",&n);\nwhile ((n>3000)||(n<1))\n{   printf(\"donner la taille du table A tq soit entre 1 et 3000\");\n    scanf(\"%ud\",&n);\n\n} printf(\"n=%u\\n\",n);\nlong int A[n];int long B[n];\nint i;\nfor(i=0;i<n;i++)\n{ printf(\"donner  l'element du tableau n\u00b0%d\",i);scanf(\"%ld\",&A[i]);\nwhile((A[i]<(-1000000000))||(A[i]>(1000000000)))\n{printf(\"donner de nouveau l'element du tableau n\u00b0%d\",i);\n    scanf(\"%ld\",&A[i]);\n}\nB[i]=A[i];\n}\ni=n-1;\nint j,k=0;\nlong int M=A[0];\nwhile (i>=0){\n\n   for(j=0;j<i;j++){\n\n       if(M<A[j]){\n\n\n         M=A[j];\n         k=j;\n       }\n\n\n   }\n  if(M>A[i]){\n   A[k]=A[i];\n   A[i]=M;\n\n\n   cpt++;\n   }\n\n\n\ni=i-1;M=A[0];k=0;\n}\nprintf(\"%d\",cpt);printf(\"\\n\");\ni=n-1;k=0;\nwhile (i>=0){\n\n   for(j=0;j<i;j++){\n\n       if(M<B[j]){\n\n\n         M=B[j];\n         k=j;\n       }\n\n\n   }\n  if(M>B[i]){\n   B[k]=B[i];\n   B[i]=M;\n   printf(\"%d %d\\n\",i,k);\n\n   cpt++;\n   }\n\n\n\ni=i-1;M=B[0];k=0;\n}\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{   int cpt=0;\n    unsigned int n; /*printf(\"donner la taille du table A tq soit entre 1 et 3000\\t\");*/\nscanf(\"%ud\",&n);\nwhile ((n>3000)||(n<1))\n{   /*printf(\"donner la taille du table A tq soit entre 1 et 3000\");*/\n    scanf(\"%ud\",&n);\n\n} \nlong int A[n];int long B[n];\nint i;\nfor(i=0;i<n;i++)\n{  /*printf(\"donner  l'element du tableau n\u00b0%d\",i)*/;scanf(\"%ld\",&A[i]);\nwhile((A[i]<(-1000000000))||(A[i]>(1000000000)))\n{ /*printf(\"donner de nouveau l'element du tableau n\u00b0%d\",i);*/\n    scanf(\"%ld\",&A[i]);\n}\nB[i]=A[i];\n}\ni=n-1;\nint j,k=0;\nlong int M=A[0];\nwhile (i>=0){\n\n   for(j=0;j<i;j++){\n\n       if(M<A[j]){\n\n\n         M=A[j];\n         k=j;\n       }\n\n\n   }\n  if(M>A[i]){\n   A[k]=A[i];\n   A[i]=M;\n\n\n   cpt++;\n   }\n\n\n\ni=i-1;M=A[0];k=0;\n}\nprintf(\"%d\",cpt);printf(\"\\n\");\ni=n-1;k=0;\nwhile (i>=0){\n\n   for(j=0;j<i;j++){\n\n       if(M<B[j]){\n\n\n         M=B[j];\n         k=j;\n       }\n\n\n   }\n  if(M>B[i]){\n   B[k]=B[i];\n   B[i]=M;\n   printf(\"%d %d\\n\",i,k);\n\n   cpt++;\n   }\n\n\n\ni=i-1;M=B[0];k=0;\n}\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.3855109961190168, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "a94eaca66296e61828965639867fc0ee", "bug_code_uid": "59b4de48d2fd807abd7c4082202d9f63", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "c8099ed416be0340cc43f6d34f23c5f1", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,count1=0,count2=0;\n    scanf(\"%d\",&n);\n\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&k);\n        while(count1<k)\n        {\n            count1++;\n            count2++;\n            if(count2%3==0 || count2%10==3)\n            {\n                count1--;\n            }\n        }\n        printf(\"%d\\n\\n\",count2);\n    }\n}\n\n\t\t\t \t \t\t\t\t \t\t \t\t\t   \t\t \t   \t\t \t", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,count=0;\n    scanf(\"%d\",&n);\n    int i=1;\n    while(n--)\n    {\n        int a;\n        scanf(\"%d\",&a);\n        int x=0;\n        while(a!=0)\n        {\n            x++;\n            if (x % 3 != 0 && x % 10 != 3)\n            {\n                a--;\n            }\n        }\n        printf(\"%d\\n\",x);\n    }\n}\n\n\n  \t \t     \t \t \t \t\t \t\t\t\t\t\t  \t\t\t"}
{"similarity_score": 0.588135593220339, "equal_cnt": 33, "replace_cnt": 32, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 32, "lang": "GNU C", "fix_code_uid": "7ddb05842c2af09f40f542d69d1e5163", "bug_code_uid": "adf61f2c6626eac83f09c6aa1eef1627", "src_uid": "2df181f2d1f4063a22fd2fa2d47eef92", "apr_id": "f94406777fd4cfb122808bbf99fc4c09", "difficulty": 1100, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint distance(char s[],char t[])\n{\n\tint i=0,d=0;\n\twhile(s[i]!='\\0')\n\t{\n\t\tif(s[i]!=t[i])\n\t\t\td++;\n\t\ti++;\n\t}\n\treturn d;\n}\nmain()\n{\n\tchar s[100000],t[100000];\n\tscanf(\"%s\",s);\n\tscanf(\"%s\",t);\n\tint i=0,d,flag=0;\n\td=distance(s,t);\n\tif(d%2==0)\n\t{\n\t\twhile(s[i]!='\\0')\n\t\t{\n\t\t\tif(s[i]!=t[i])\n\t\t\t{\n\t\t\t\tif(flag==1)\n\t\t\t\t\tflag=0;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ts[i]=t[i];\t\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tprintf(\"%s\",s);\t\n\t}\n\telse\n\t\tprintf(\"impossible\");\n\treturn 0;\t\n}", "fixed": "#include<stdio.h>\nint distance(char s[],char t[])\n{\n    int i=0,d=0;\n    while(s[i]!='\\0')\n    {\n        if(s[i]!=t[i])\n            d++;\n        i++;\n    }\n    return d;\n}\nmain()\n{\n    char s[100005],t[100005];\n    scanf(\"%s\",s);\n    scanf(\"%s\",t);\n    int i=0,d,flag=0;\n    d=distance(s,t);\n    if(d%2==0)\n    {\n        while(s[i]!='\\0')\n        {\n            if(s[i]!=t[i])\n            {\n                if(flag==1)\n                    flag=0;\n                else\n                {\n                    s[i]=t[i];  \n                    flag=1;\n                }\n                \n            }\n            i++;\n        }\n        printf(\"%s\",s); \n    }\n    else\n        printf(\"impossible\");\n    return 0;   \n}"}
{"similarity_score": 0.9828693790149893, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "2d1e559b14cdbe9b06cb8f47c651e51b", "bug_code_uid": "3b2cf16f3522f398867308c406b2cc07", "src_uid": "91cefa6793e77b3e4f4896616a164ff2", "apr_id": "b44c9dfeb8038af2a6de402c193c9bca", "difficulty": 1400, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main(void){\nchar s[100005];\nlong len;\nlong i,a0=0,a1=0,l2=-1;\n\tscanf(\"%s\",&s);\n\tlen=strlen(s);\n\tfor(i=0;i<len;i++){\n\t\tif(s[i]=='1'){\n\t\t\ta1++;\n\t\t\ts[i]='3';\n\t\t}\n\t\tif(s[i]=='0'&&l2==-1){\n\t\t\ta0++;\n\t\t\ts[i]='3';\n\t\t}\n\t\tif(s[i]=='2'&&l2==-1)\n\t\t\tl2=i;\n\t}\n\tfor(i=0;i<a0;i++)\n\t\tprintf(\"0\");\n\tfor(i=0;i<a1;i++)\n\t\tprintf(\"1\");\n\tfor(i=l2;i<len;i++)\n\t\tif(s[i]!='3')\n\t\t\tprintf(\"%c\",s[i]);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n\nint main(void){\nchar s[200000];\nlong len;\nlong i,a0=0,a1=0,l2=-1;\n\tscanf(\"%s\",&s);\n\tlen=strlen(s);\n\tfor(i=0;i<len;i++){\n\t\tif(s[i]=='1'){\n\t\t\ta1++;\n\t\t\ts[i]='3';\n\t\t}\n\t\tif(s[i]=='0'&&l2==-1){\n\t\t\ta0++;\n\t\t\ts[i]='3';\n\t\t}\n\t\tif(s[i]=='2'&&l2==-1)\n\t\t\tl2=i;\n\t}\n\tfor(i=0;i<a0;i++)\n\t\tprintf(\"0\");\n\tfor(i=0;i<a1;i++)\n\t\tprintf(\"1\");\n\tfor(i=0;i<len;i++)\n\t\tif(s[i]!='3')\n\t\t\tprintf(\"%c\",s[i]);\n\treturn 0;\n}"}
{"similarity_score": 0.9565903709550119, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5cb7ac031ddff0d31d4242aa645675ae", "bug_code_uid": "baf39ae5cc6b6709ccbd6826653ca6f2", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "7c93a30659a53bb85e554c6880c5e8c9", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char s[100];\n   int n,m,k,l,c,i,j;\n   scanf(\"%d\",&n);\n   for(i=1; i<=n; i++)\n   {\n       scanf(\"%d\",&m);\n       scanf(\"%s\",&s);\n       c=0;\n\n       if(m==11 && s[0]=='8')\n       {\n           printf(\"YES\\n\");\n       }\n       else if(m==11 && s[0]!='8')\n       {\n           printf(\"NO\\n\");\n       }\n       else if(m>11)\n       {\n           k = m-11;\n           for(l=0; l<=k; l++)\n           {\n               if(s[l]=='8')\n                c++;\n           }\n           if(c==0)\n            printf(\"NO\\n\");\n           else printf(\"YES\\n\");\n       }\n\n   }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char s[100];\n   int n,m,k,l,c,i,j;\n   scanf(\"%d\",&n);\n   for(i=1; i<=n; i++)\n   {\n       scanf(\"%d\",&m);\n       scanf(\"%s\",&s);\n       c=0;\n\n       if(m==11 && s[0]=='8')\n       {\n           printf(\"YES\\n\");\n       }\n       else if(m==11 && s[0]!='8')\n       {\n           printf(\"NO\\n\");\n       }\n       else if(m<11){\n        printf(\"NO\\n\");\n       }\n       else if(m>11)\n       {\n           k = m-11;\n           for(l=0; l<=k; l++)\n           {\n               if(s[l]=='8')\n                c++;\n           }\n           if(c==0)\n            printf(\"NO\\n\");\n           else printf(\"YES\\n\");\n       }\n\n   }\n}\n"}
{"similarity_score": 0.998330550918197, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f45038b8c9d14bbc2a6eb395e914e40d", "bug_code_uid": "33f250303b9757cd61fcc190df710e14", "src_uid": "930be5ec102fbe062062aa23eac75187", "apr_id": "164ae2b5cbf96097f02a4e97c3178db9", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n,temp,min,cnt=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0 ; i<n ; i++){\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0 ; i<n ; i++){\n        for(j=0 ; j<(n-1) ; j++){\n            if(a[j+1]<a[j]){\n                temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n            }\n        }\n    }\n\n    min=a[0];\n\n    for(i=0 ; i<n-1 ; i++){\n        if(a[i]==a[i+1]) cnt++;\n        else if(a[i]=!a[i+1]){\n            printf(\"%d\\n\",a[i+1]);\n            break;\n        }\n    }\n    //printf(\"%d\",cnt);\n    if(cnt==(n-1)) printf(\"NO\\n\");\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,n,temp,min,cnt=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0 ; i<n ; i++){\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0 ; i<n ; i++){\n        for(j=0 ; j<(n-1) ; j++){\n            if(a[j+1]<a[j]){\n                temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n            }\n        }\n    }\n\n    min=a[0];\n\n    for(i=0 ; i<n-1 ; i++){\n        if(a[i]==a[i+1]) cnt++;\n        else if(a[i]!=a[i+1]){\n            printf(\"%d\\n\",a[i+1]);\n            break;\n        }\n    }\n    //printf(\"%d\",cnt);\n    if(cnt==(n-1)) printf(\"NO\\n\");\n\n\n}\n"}
{"similarity_score": 0.4527687296416938, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "58c7b8be9b055040c45ba474db770d14", "bug_code_uid": "cd71535fe909d68e9770eed2121b1c6c", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "0cdeea1e380631e359c3ef05648d69ed", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint m,n,i,j;\nscanf(\"%d%d\",&m,&n);\nfor (i=1;i<=n;i++)\n{\n\t for(j=1;j<=m;j++)\n\t {\n\tif((i%2!=0)&&(i<=m))\n\t{printf(\"#\");\n\t}\n\t else if(i%4==0)\n\t{ if(j==1)\n\t printf(\"#\");\n\t else\n\t printf(\".\");\n\t}\n\telse if(i%2==0)\n\t{ if(j<m)\n\t printf(\".\");\n\t else\n\tprintf(\"#\");\n\t}\n\t }\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint m,n,i,j;\nscanf(\"%d%d\",&n,&m);\nfor (i=1;i<=n;i++)\n{\n\t for(j=1;j<=m;j++)\n\t {\n\tif(i%2!=0)\n\t{printf(\"#\");\n\t}\n\t else if(i%4==0)\n\t{ if(j==1)\n\t printf(\"#\");\n\t else\n\t printf(\".\");\n\t}\n\telse if(i%2==0)\n\t{ if(j<m)\n\t printf(\".\");\n\t else\n\tprintf(\"#\");\n\t}\n\t }\nprintf(\"\\n\");\n}\nreturn 0;\n}\n"}
{"similarity_score": 0.21720733427362482, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "81c24bd2fc4665df63ee1a47f2ee0e53", "bug_code_uid": "2bce5cd2fb99f22311879a00269573c9", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "a9d7aa3e01bf3f05621c8edbfd5248c5", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,n,zc=0,nc=0;\n    char num[100000];\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&num);\n    for(i=0;i<n;i++)\n    {\n        if(num[i]=='z')\n        zc+=1;\n        else if(num[i]=='n')\n        nc+=1;\n    }\n    while(nc--)\n    printf(\"1 \");\n    while(zc--)\n    printf(\"0 \");\n    \n    return 0;\n}", "fixed": "/* Codeforces 1220A\nAuthor: Arvind KT\nAM.EN.U4CSE19009,CSE-A*/\n#include <stdio.h>\n \nint main () \n{\n    int len, n=0, z=0 ;\n    scanf(\"%d\", &len);\n    char s[len];\n    scanf(\"%s\", s);\n    for (int i=0; i<len; i++)\n        if (s[i] == 'n')\n            n++;\n        else if (s[i] == 'z')\n            z++;\n \n    while(n--) \n    printf(\"1 \");\n    while(z--) \n    printf(\"0 \");\n    return 0;\n}"}
{"similarity_score": 0.7231040564373897, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7254906096bedb5aaa2bd6d7d7b75d6c", "bug_code_uid": "4d2396b9c67d323e013ee656e2350128", "src_uid": "88686e870bd3bfbf45a9b6b19e5ec68a", "apr_id": "4c2d384b164222acc7e2bf70f307311c", "difficulty": 900, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n  int t, a, b;\n  scanf(\"%d\", &t);\n  for(int i = 0; i < t; ++i) {\n    scanf(\"%d%d\", &a, &b);\n    if(a != b) {\n      return 0*puts(\"rated\");\n    }\n  }\n  puts(\"unrated\");\n  return 0;\n}", "fixed": "#include<stdio.h>\n\nint main() {\n  int t, a, b, oa = 4128;\n  scanf(\"%d\", &t);\n  for(int i = 0; i < t; ++i) {\n    scanf(\"%d%d\", &a, &b);\n    if(a != b) {\n      return 0*puts(\"rated\");\n    }\n    if(oa != -1) {\n       if(a <= oa) {\n          oa = a;\n       } else {\n          oa = -1;\n       }\n    }\n  }\n  puts(oa == -1 ? \"unrated\" : \"maybe\");\n  return 0;\n}\n"}
{"similarity_score": 0.9430051813471503, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1d52779cefba4a726b2f782b1d22cbb5", "bug_code_uid": "d76fc0668acd0d8e0f87c58f4d7b8ab2", "src_uid": "5bc07d2efb7453e51f4931cc7ec3aac7", "apr_id": "5dbfc7c699c623260104c8b6ec7311ff", "difficulty": 1000, "tags": ["chinese remainder theorem", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(char** args, int argv) {\n    int n;\n    scanf(\"%d\",&n);\n    for (int i = 0; i < n; i++) {\n        char b[101];\n        memset(b, (int)'0', 101);\n        scanf(\"%100s\",b);\n        _Bool hN = 0;\n        _Bool divBy2 = 0;\n        int qsum = 0;\n        int nn = 0;\n        for (int ii = 0; ii < 100;ii++) {\n            if (b[ii] == 0) break;\n            int v = (int)b[ii] - (int)'0';\n            qsum += v;\n            hN = hN || v == 0;\n            divBy2 = divBy2 || ((v % 2) == 0 && !(nn == 0 && v == 0));\n            if (v == 0) nn++;\n        }\n        printf(\"%d %d %d\", hN, divBy2, qsum);\n        if (qsum == 0 || (hN && divBy2 && (qsum % 3) == 0)) {\n            printf(\"red\\n\");\n        } else {\n            printf(\"cyan\\n\");\n        }\n    }\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(char** args, int argv) {\n    int n;\n    scanf(\"%d\",&n);\n    for (int i = 0; i < n; i++) {\n        char b[101];\n        memset(b, (int)'0', 101);\n        scanf(\"%100s\",b);\n        _Bool hN = 0;\n        _Bool divBy2 = 0;\n        int qsum = 0;\n        int nn = 0;\n        for (int ii = 0; ii < 100;ii++) {\n            if (b[ii] == 0) break;\n            int v = (int)b[ii] - (int)'0';\n            qsum += v;\n            hN = hN || v == 0;\n            divBy2 = divBy2 || ((v % 2) == 0 && !(nn == 0 && v == 0));\n            if (v == 0) nn++;\n        }\n        if (qsum == 0 || (hN && divBy2 && (qsum % 3) == 0)) {\n            printf(\"red\\n\");\n        } else {\n            printf(\"cyan\\n\");\n        }\n    }\n}"}
{"similarity_score": 0.9047619047619048, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "67b25a601b866b1e4e9f95df92645461", "bug_code_uid": "06364bb7f8e1d2e5a6933271bd89b73f", "src_uid": "4d5d20fd586ddbea2adeab104a6c2aec", "apr_id": "89e7d4687aee3074114dfe22f5fdf2e0", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    long int n,k,t;\r\n   // printf(\"enter t\");\r\n    scanf(\"%ld\",&t);\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n       // printf(\"enter n & k\");\r\n        scanf(\"%ld\",&n);\r\n        scanf(\"%ld\",&k);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++)\r\n            scanf(\"%d\",&arr[i]);\r\n        int count=0;\r\n        for(int j=1;j<n-1;j++)\r\n        {\r\n            if(arr[j]>arr[j-1]+arr[j+1])\r\n            count++;\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    long int n,k,t;\r\n   // printf(\"enter t\");\r\n    scanf(\"%ld\",&t);\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n       // printf(\"enter n & k\");\r\n        scanf(\"%ld\",&n);\r\n        scanf(\"%ld\",&k);\r\n        int arr[n];\r\n        for(int i=0;i<n;i++)\r\n            scanf(\"%d\",&arr[i]);\r\n        int count=0;\r\n        for(int j=1;j<n-1;j++)\r\n        {\r\n            if(arr[j]>arr[j-1]+arr[j+1])\r\n            count++;\r\n        }\r\n        if(k==1)\r\n        {\r\n            if(n%2==0) count=(n/2)-1;\r\n            else count=n/2;\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8797127468581688, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e702250615e8a82350bd39c3d9138bed", "bug_code_uid": "517fd74a1cabe81592e6bfad28f07f14", "src_uid": "208e285502bed3015b30ef10a351fd6d", "apr_id": "c923775eb6e7955e32e4972b2b5537b6", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n   scanf(\"%d\",&t);\r\nwhile(t--){\r\n        int n;\r\n    scanf(\"%d\", &n);\r\n    if(n==1)\r\n        printf(\"2\\n\");\r\n        continue;\r\n    if(n%3==0)\r\n        printf(\"%d\\n\",n/3);\r\n        else printf(\"%d\\n\",n/3+1);\r\n}\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n   scanf(\"%d\",&t);\r\nwhile(t--){\r\n        int n;\r\n    scanf(\"%d\", &n);\r\n    if(n==1)\r\n        printf(\"2\\n\");\r\n        else if(n==2)\r\n            printf(\"1\\n\");\r\n    else if(n%3==0)\r\n        printf(\"%d\\n\",n/3);\r\n        else printf(\"%d\\n\",(n/3)+1);\r\n}\r\n}"}
{"similarity_score": 0.4695817490494297, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "dc32452dc50f4d617ccc224f79e0e294", "bug_code_uid": "49dce39b11f70212752c946b0b14b868", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "e9b3e583ac59f4b00236a7edac94b9b8", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint min(int a,int b,int c)\n{\n    int d;\n    if(a<b&&a<c)d=a;\n    else if(b<a&&b<c)d=b;\n    else d=c;\n    return d;\n}\nint main()\n{\n    int c=0,d=0,e=0,n,i,j,m;\n    scanf(\"%d\",&n);\n    int ar[101],br[101],cr[101];\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&m);\n        if(m==1)ar[c++]=i;\n        else if(m==2)br[d++]=i;\n        else if(m==3)cr[e++]=i;\n    }\n    j=min(c,d,e);\n    printf(\"%d\\n\",j);\n    for(i=0;i<j;i++){\n        printf(\"%d %d %d\\n\",ar[i],br[i],cr[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint min(int a,int b,int c)\n{\n    int d;\n    if(a<=b && a<=c)d=a;\n    else if(b<=a && b<=c)d=b;\n    else if(c<=a&&c<=b) d=c;\n    return d;\n}\nint main()\n{\n    int c=0,d=0,e=0,n,i,j,m;\n    scanf(\"%d\",&n);\n    int ar[5001],br[5001],cr[5001];\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&m);\n        if(m==1)ar[c++]=i;\n        else if(m==2)br[d++]=i;\n        else if(m==3)cr[e++]=i;\n    }\n    j=min(c,d,e);\n    printf(\"%d\\n\",j);\n    for(i=0;i<j;i++){\n        printf(\"%d %d %d\\n\",ar[i],br[i],cr[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9754768392370572, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "34059a3956c4f98fb6ab04b4b42696bd", "bug_code_uid": "ad6f3a9f324910c70891010af6920a55", "src_uid": "554115bec46bb436a0a1ddf8c05a2d08", "apr_id": "cd80b824abc5957f21cd89cf946460df", "difficulty": 1100, "tags": ["greedy", "constructive algorithms", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n#include <string.h>\n\nint max_size = 2 * 1e5 + 5;\n\nbool check(char a[], char b[], int size) {\n\tfor (int i = 0; i < size; i++) {\n\t\tif (a[i] != b[size - 1 - i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}\n\n\nint main() {\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tchar s[n][m + 1];\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%s\", s[i]);\n\t}\n\t\n\tbool used[n];\n\tmemset(used, 0, n);\n\t\n\tchar ans[max_size];\n\tmemset(ans, '\\0', max_size);\n\t\n\tint size1 = 0;\n\t\n\tchar a[max_size];\n\tchar b[max_size];\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tif (!used[j] && check(s[i], s[j], m)) {\n\t\t\t\tused[i] = true;\n\t\t\t\tused[j] = true;\n\t\t\t\tmemmove(a + size1, s[i], m);\n\t\t\t\tmemmove(b + size1, s[j], m);\n\t\t\t\tsize1 += m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint size2 = 0;\n\t\n\tmemmove(ans, a, size1);\n\tsize2 += size1;\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\tif (!used[i] && check(s[i], s[i], m)) {\n\t\t\tused[i] = true;\n\t\t\tmemmove(ans + size2, s[i], m);\n\t\t\tsize2 += m;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < size1; i++) {\n\t\tans[size2 + i] = b[size1 - 1 - i];\n\t}\n\tsize2 += size1;\n\t\n\tprintf(\"%d\\n%s\", size2, ans);\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdbool.h>\n#include <string.h>\n\nint max_size = 2 * 1e5 + 5;\n\nbool check(char a[], char b[], int size) {\n\tfor (int i = 0; i < size; i++) {\n\t\tif (a[i] != b[size - 1 - i]) \n\t\t\treturn false;\n\t}\n\treturn true;\n}\n\n\nint main() {\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tchar s[n][m + 1];\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%s\", s[i]);\n\t}\n\t\n\tbool used[n];\n\tmemset(used, 0, n);\n\t\n\tchar ans[max_size];\n\tmemset(ans, '\\0', max_size);\n\t\n\tint size1 = 0;\n\t\n\tchar a[max_size];\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tif (!used[j] && check(s[i], s[j], m)) {\n\t\t\t\tused[i] = true;\n\t\t\t\tused[j] = true;\n\t\t\t\tmemmove(a + size1, s[i], m);\n\t\t\t\tsize1 += m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint size2 = 0;\n\t\n\tmemmove(ans, a, size1);\n\tsize2 += size1;\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\tif (!used[i] && check(s[i], s[i], m)) {\n\t\t\tused[i] = true;\n\t\t\tmemmove(ans + size2, s[i], m);\n\t\t\tsize2 += m;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < size1; i++) {\n\t\tans[size2 + i] = a[size1 - 1 - i];\n\t}\n\tsize2 += size1;\n\t\n\tprintf(\"%d\\n%s\", size2, ans);\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.8459715639810427, "equal_cnt": 12, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "d1e3eaeb7791591b91b5283e97a57a74", "bug_code_uid": "963c8c1046e47c1bac55db07caae79e3", "src_uid": "e57345f5757654749b411727ebb99c80", "apr_id": "3bbe2af9ec44a941bf1f968f3b870c89", "difficulty": 900, "tags": ["sortings", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n    int t;\n    scanf(\"%d\\n\", &t);\n    for(int i = 0; i < t; i++){\n        int n;\n        scanf(\"%d\", &n);\n        int a[n];\n        int sum = 0;\n        for(int j = 0; j < n; j++){\n            scanf(\"%d \", &a[j]);\n            sum += a[j];\n        }\n        if(sum == 0) printf(\"NO\\n\");\n        else{\n            printf(\"YES\\n\");\n            for(int j = 0; j < n; j++){\n                if(a[j] > 0){printf(\"%d \", a[j]);}\n            }\n            for(int j = 0; j < n; j++){\n                if(a[j] < 0){printf(\"%d \", a[j]);}\n            }\n            for(int j = 0; j < n; j++){\n                if(a[j] == 0){printf(\"%d \", a[j]);}\n            }\n            printf(\"\\n\");\n        }\n    }\n\n}\n\n        \n        ", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main(){\n    int t;\n    scanf(\"%d\\n\", &t);\n    for(int i = 0; i < t; i++){\n        int n;\n        scanf(\"%d\", &n);\n        int a[n];\n        int sum = 0;\n        for(int j = 0; j < n; j++){\n            scanf(\"%d \", &a[j]);\n            sum += a[j];\n        }\n        if(sum == 0) printf(\"NO\\n\");\n        else if (sum > 0){\n            printf(\"YES\\n\");\n            for(int j = 0; j < n; j++){\n                if(a[j] > 0)printf(\"%d \", a[j]);\n            }\n            for(int j = 0; j < n; j++){\n                if(a[j] <= 0)printf(\"%d \", a[j]);\n            }\n            printf(\"\\n\");\n\n        }\n        else{\n            printf(\"YES\\n\");\n            for(int j = 0; j < n; j++){\n                if(a[j] < 0)printf(\"%d \", a[j]);\n            }\n            for(int j = 0; j < n; j++){\n                if(a[j] >= 0)printf(\"%d \", a[j]);\n            }\n            printf(\"\\n\");\n        }\n    }\n\n}"}
{"similarity_score": 0.9985611510791367, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ad1ac8c1db90ca9cd88bd74bfa801ab0", "bug_code_uid": "f257b2458e05689b4dc038b66364f451", "src_uid": "50738d19041f2e97e2e448eff3feed84", "apr_id": "f117e526ade0d1d50cd73e1a4962ae2f", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdint.h>\n\nint main(void){\n    int t, s, sum;\n    uint64_t n, moves, copy;\n    scanf(\"%i\", &t);\n\n    for(;t;t--){\n        scanf(\"%lu %i\", &n, &s);\n        moves = 0;\n        sum = 0;\n        copy = n;\n        while(copy){\n            sum += copy%10;\n            copy/=10;\n        }\n        copy = n;\n        if(sum <= s){\n            printf(\"%lu\\n\", moves);\n            continue;\n        }\n        sum++;\n        int i;\n        for(i=0; sum > s; i++)\n        {\n            sum -= copy%10;\n            copy /= 10;\n        }\n        copy++;\n        for(;i;--i){\n            copy *= 10;\n        }\n        \n        moves = copy-n;\n        printf(\"%lu\\n\", moves);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdint.h>\n\nint main(void){\n    int t, s, sum;\n    uint64_t n, moves, copy;\n    scanf(\"%i\", &t);\n\n    for(;t;t--){\n        scanf(\"%llu %i\", &n, &s);\n        moves = 0;\n        sum = 0;\n        copy = n;\n        while(copy){\n            sum += copy%10;\n            copy/=10;\n        }\n        copy = n;\n        if(sum <= s){\n            printf(\"%lu\\n\", moves);\n            continue;\n        }\n        sum++;\n        int i;\n        for(i=0; sum > s; i++)\n        {\n            sum -= copy%10;\n            copy /= 10;\n        }\n        copy++;\n        for(;i;--i){\n            copy *= 10;\n        }\n        \n        moves = copy-n;\n        printf(\"%llu\\n\", moves);\n    }\n}\n"}
{"similarity_score": 0.6001583531274742, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3c47973f8a3663c542df6388fe5926d4", "bug_code_uid": "9d54c1ec95af0be8b072c51a15436974", "src_uid": "f577695d39a11e8507681f307677c883", "apr_id": "daa8c18b1cb19dbd0be03a04c720241d", "difficulty": 800, "tags": ["brute force", "constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main(void)\r\n{\r\n\tint T, amount, min, max, money;\r\n\tint sum, spend;\r\n\tsum = spend = 0;\r\n\tint i;\r\n\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tint a[100] = { a[99] = 0 };\r\n\t\tscanf(\"%d%d%d%d\", &amount, &min, &max, &money);\r\n\t\tfor (i = 0; i < amount; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &a[i]);\r\n\t\t\tif (min <= a[i] && a[i] <= max && spend + a[i] <= money)\r\n\t\t\t{\r\n\t\t\t\tspend += a[i];\r\n\t\t\t\tsum++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", sum);\r\n\t\tsum = spend = 0;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint cmpfunc(const void* a, const void* b)\r\n{\r\n\treturn (*(int*)a - *(int*)b);\r\n}\r\nint main(void)\r\n{\r\n\tint T, amount, min, max, money;\r\n\tint sum, spend;\r\n\tsum = spend = 0;\r\n\tint i;\r\n\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tint temp[100] = { temp[99] = 0 };\r\n\t\tscanf(\"%d%d%d%d\", &amount, &min, &max, &money);\r\n\t\tfor (i = 0; i < amount; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &temp[i]);\r\n\t\t}\r\n\t\tint* a = (int*)malloc(sizeof(int) * amount);\r\n\t\tmemcpy(a, temp, sizeof(int) * amount);\r\n\t\tqsort(a, amount, sizeof(int), cmpfunc);\r\n\t\tfor (i = 0; i < amount; i++)\r\n\t\t{\r\n\t\t\tif (min <= a[i] && a[i] <= max && spend + a[i] <= money)\r\n\t\t\t{\r\n\t\t\t\tspend += a[i];\r\n\t\t\t\tsum++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", sum);\r\n\t\tsum = spend = 0;\r\n\t\tfree(a);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.29547141796585, "equal_cnt": 18, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "89012b85c4f462d3133ab06a55f0a609", "bug_code_uid": "b84aa82acc0c23c2aa7936e98ecfc774", "src_uid": "5598d5954fa3e3cecedb413033259760", "apr_id": "eb1e927ad3147e752f5ea86b3596087b", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint max(int a[] , int n){\n\tint i,max;\n\tmax = 0;\n\tfor(i = 0; i < n; i++){\n\t\tif(a[i] > max){\n\t\t\tmax = a[i];\n\t\t}\n\t}\n\treturn max;\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint i,j;\n\tint ret;\n\tfor(i = 0; i < t; i++){\n\t\tint n,ret2;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(j = 0; j < n; j++){\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t}\n\t\tret2 = 0;\n\t\tfor(j = 0; j < n-1; j++){\n\t\t\tif(a[j] != a[j+1]){\n\t\t\t\tret2 = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(ret2 == 1){\n\t\t\tfor(j = 0; j < n; j++){\n\t\t\t\tif(a[j] == max(a,n)){\n\t\t\t\t\tif(j < n-1 && a[j] > a[j+1]){\n\t\t\t\t\t\tret = j+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(j > 0 && a[j] > a[j-1]){\n\t\t\t\t\t\tret = j+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ret);\n\t\t}\n\t\telse{\n\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint a[300000];\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tint i;\n\tint ret;\n\twhile(t--){\n\t\tint n,cnt,max;\n\t\tcnt = 0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i = 0; i < n; i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(i == 0){\n\t\t\t\tmax = a[0];\n\t\t\t} \n\t\t\tif(i != 0 && a[i] == a[i-1]){\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tif(i != 0 && a[i] >= max){\n\t\t\t\tmax = a[i];\n\t\t\t}\n\t\t}\n\t\tif(cnt == n-1){\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(i = 0; i < n; i++){\n\t\t\tif(a[i] == max){\n\t\t\t\tif(i < n-1 && a[i] > a[i+1]){\n\t\t\t\t\tret = i+1;\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(i > 0 && a[i] > a[i-1]){\n\t\t\t\t\tret = i+1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ret);\n\t\t\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.783625730994152, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "7b49360b0c4c0de6fd682b2d4207b496", "bug_code_uid": "dc9b5b0da1a7cfa2e9b1d04b851613fe", "src_uid": "9fd9bc0a037b2948d60ac2bd5d57740f", "apr_id": "0ed5dc45f32ab13d0f42a514d28d022a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\ufeff#include<stdio.h>\nlong long int add(long long int n)\n{\n\tlong long int i = 2;\n\tint flag = 0;\n\tfor (i = 2;i*i <= n;i++)\n\t{\n\t\tif (n % i == 0) { flag = 1; break; }\n\t}\n\tif (flag == 0) { i = n; }\n\treturn i;\n}\nint main(void)\n{\n\tlong long int t, n, k;\n\tscanf(\"%d\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%d%d\", &n, &k);\n\t\twhile (k--)\n\t\t{\n\t\t\tif (n % 2 == 0)\n\t\t\t{\n\t\t\t\tn += 2 * k;break;\n\t\t\t}\n\t\t\tn = n + add(n);\n\t\t}\n\t\tprintf(\"%d\\n\", n);\n\t}\n}", "fixed": "\ufeff#include<stdio.h>\nlong long int add(long long int n)\n{\n\tlong long int i = 2;\n\tint flag = 0;\n\tfor (i = 2;i*i <= n;i++)\n\t{\n\t\tif (n % i == 0) { flag = 1; break; }\n\t}\n\tif (flag == 0) { i = n; }\n\treturn i;\n}\nint main(void)\n{\n\tlong long int t, n, k;\n\tscanf(\"%lld\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%lld%lld\", &n, &k);\n\t\t\tif (n % 2 == 0)\n\t\t\t{\n\t\t\t\tn += 2 * k;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tn = n + add(n) + 2 * (k - 1);\n\t\t\t}\n\t\tprintf(\"%lld\\n\", n);\n\t}\n}"}
{"similarity_score": 0.15614236509758897, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "e75164ccfd7b5a78f755ca0d0b693f0d", "bug_code_uid": "3b1273a839cf4b6679ec7d2886f16537", "src_uid": "044c2a3bafe4f47036ee81f2e40f639a", "apr_id": "6544f8b68683b88275b52ccdcec8d142", "difficulty": 800, "tags": ["greedy", "implementation", "math", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int t, n, x, i, a;\n    double avg;\n    scanf(\"%d\",&t);\n    while(t--){\n            avg=0.0;\n        scanf(\"%d %d\",&n, &x);\n        for(i=0; i<n; i++){\n            scanf(\"%d\",&a);\n            avg+=a;\n        }\n        if((avg/n)<=x)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n\n    return 0;\n}\n\n\n \t\t\t    \t  \t\t\t\t\t\t\t \t\t\t\t \t\t  \t", "fixed": "#include <stdio.h>\nint main () {\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++){\n\t\tint n,d,a[200],f;\n\t\tscanf(\"%d %d\",&n,&d);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t}\n\t\tfor(int j=0;j<n-1;j++){\n\t\t\tfor(int k=j+1;k<n;k++){\n\t\t\t\tif(a[j]>a[k]){\n\t\t\t\t\tf=a[j];\n\t\t\t\t\ta[j]=a[k];\n\t\t\t\t\ta[k]=f;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(a[n-1]>d){\n\t\t\tif(a[0]+a[1]>d)\n\t\t\tprintf(\"NO\\n\");\n\t\t\telse\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\tprintf(\"YES\\n\");\n\t}\n\treturn 0;\n}\n \t\t    \t\t   \t\t       \t   \t\t   \t"}
