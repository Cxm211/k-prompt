{"problem": "public static void METHOD_1 ( java.util.Map < java.lang.Integer , java.lang.String > VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = 0 ; java.lang.System.out.println ( STRING_1 ) ; while ( VAR_3 != ( - 1 ) ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; try { java.lang.System.out.println ( STRING_2 ) ; VAR_3 = VAR_4 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_3 , VAR_2 ) ; } catch ( TYPE_3 VAR_5 ) { java.lang.System.out.println ( STRING_3 ) ; } VAR_4 . METHOD_5 ( ) ; } }\n", "fixed": "public static void METHOD_1 ( java.util.Map < java.lang.Integer , java.lang.String > VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = 0 ; java.lang.System.out.println ( STRING_1 ) ; while ( VAR_3 != ( - 1 ) ) { TYPE_2 . METHOD_2 ( VAR_1 ) ; try { java.lang.System.out.println ( STRING_2 ) ; VAR_3 = VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_5 ( ) ; TYPE_2 . METHOD_4 ( VAR_3 , VAR_2 ) ; } catch ( TYPE_3 VAR_5 ) { java.lang.System.out.println ( STRING_3 ) ; VAR_4 . METHOD_5 ( ) ; } } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 result ) { VAR_1 = result . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( this , VAR_1 . METHOD_4 ( ) ) ; if ( ! ( METHOD_5 ( VAR_1 , result . METHOD_6 ( ) . METHOD_7 ( ) ) ) ) { return ; } METHOD_8 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 result ) { VAR_1 = result . METHOD_2 ( ) ; if ( ! ( METHOD_5 ( VAR_1 , result . METHOD_6 ( ) . METHOD_7 ( ) ) ) ) { return ; } VAR_2 . METHOD_3 ( this , VAR_1 . METHOD_4 ( ) ) ; METHOD_8 ( ) ; }\n"}
{"problem": "public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; int length = VAR_2 . size ( ) ; int i = 0 ; for ( TYPE_1 VAR_3 : VAR_2 ) { VAR_1 += VAR_3 . METHOD_2 ( ) ; if ( i < ( length - 1 ) ) { VAR_1 += STRING_2 ; } ++ i ; } return java.lang.String.format ( STRING_3 , this . name , VAR_4 . getName ( ) , VAR_1 ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; int length = VAR_2 . size ( ) ; int i = 0 ; for ( TYPE_1 VAR_3 : VAR_2 ) { VAR_1 += VAR_3 . METHOD_2 ( ) ; if ( i < ( length - 1 ) ) { VAR_1 += STRING_2 ; } ++ i ; } return java.lang.String.format ( STRING_3 , VAR_4 . getName ( ) , VAR_1 ) ; }\n"}
{"fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb", "projectName": "Graylog2.graylog2-server", "bugType": "Change Numeric Literal", "problem": "         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");", "fixed": "         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");", "sourceBeforeFix": "assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7)", "sourceAfterFix": "assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5)"}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 a , TYPE_1 b ) { if ( ( ! ( VAR_2 . METHOD_2 ( VAR_1 , a ) ) ) || ( ! ( VAR_2 . METHOD_2 ( VAR_1 , b ) ) ) ) { return null ; } return METHOD_3 ( VAR_1 , a , b ) ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 a , TYPE_1 b ) { if ( ( ! ( VAR_2 . METHOD_2 ( VAR_1 , a ) ) ) || ( ! ( VAR_2 . METHOD_2 ( VAR_1 , b ) ) ) ) { return null ; } return VAR_2 . METHOD_3 ( VAR_1 , a , b ) ; }\n"}
{"problem": "protected void METHOD_1 ( java.lang.CharSequence VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > list = ( ( java.util.List < TYPE_2 > ) ( VAR_2 . values ) ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( list ) ; VAR_3 . METHOD_3 ( ) ; } if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( list ) ; } }\n", "fixed": "protected void METHOD_1 ( java.lang.CharSequence VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > list = ( ( java.util.List < TYPE_2 > ) ( VAR_2 . values ) ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_2 ( list ) ; VAR_3 . METHOD_3 ( ) ; } if ( ( VAR_4 ) != null ) { VAR_4 . METHOD_2 ( list ) ; VAR_4 . METHOD_3 ( ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; VAR_3 = ( ( TYPE_2 ) ( METHOD_3 ( VAR_4 ) ) ) ; METHOD_5 ( ) ; METHOD_4 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; }\n"}
{"fixCommitSHA1": "d8d9e5711a908603f73f92872b127fe4d7ab4a15", "projectName": "apache.camel", "bugType": "Change Numeric Literal", "problem": "  */\n public class ManagedProducerRouteAddRemoveRegisterAlwaysTest extends ManagementTestSupport {\n    private int services = 8;\n     @Override\n     protected CamelContext createCamelContext() throws Exception {", "fixed": "  */\n public class ManagedProducerRouteAddRemoveRegisterAlwaysTest extends ManagementTestSupport {\n    private int services = 9;\n     @Override\n     protected CamelContext createCamelContext() throws Exception {", "sourceBeforeFix": "services=8", "sourceAfterFix": "services=9"}
{"project": "Time", "bugId": 6, "problem": " public static synchronized GJChronology getInstance(\n             cutoverInstant = DEFAULT_CUTOVER;\n         } else {\n             cutoverInstant = gregorianCutover.toInstant();\n         }\n         GJChronology chrono;", "fixed": " public static synchronized GJChronology getInstance(\n             cutoverInstant = DEFAULT_CUTOVER;\n         } else {\n             cutoverInstant = gregorianCutover.toInstant();\n            LocalDate cutoverDate = new LocalDate(cutoverInstant.getMillis(), GregorianChronology.getInstance(zone));\n            if (cutoverDate.getYear() <= 0) {\n                throw new IllegalArgumentException(\"Cutover too early. Must be on or after 0001-01-01.\");\n            }\n         }\n         GJChronology chrono;", "observations": "", "repairActions": ["assignAdd", "condBranIfAdd", "condBranIfElseAdd", "exThrowsAdd", "mcAdd", "objInstAdd", "varAdd"], "repairPatterns": ["condBlockExcAdd", "condBlockOthersAdd", "copyPaste", "missComp"]}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface XsltEndpointBuilder\n            extends\n                EndpointProducerBuilder {\n         default AdvancedXsltEndpointBuilder advanced() {\n             return (AdvancedXsltEndpointBuilder) this;\n         }", "fixed": "     \n    public interface XsltEndpointBuilder extends EndpointProducerBuilder {\n         default AdvancedXsltEndpointBuilder advanced() {\n             return (AdvancedXsltEndpointBuilder) this;\n         }", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "public static boolean METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_1 ) ; for ( java.lang.String VAR_3 : VAR_2 ) { if ( ( VAR_3 . equals ( VAR_1 ) ) && ( VAR_3 . equals ( STRING_1 ) ) ) return true ; } return false ; }\n", "fixed": "public static boolean METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_1 ) ; for ( java.lang.String VAR_3 : VAR_2 ) { if ( ( VAR_3 . equals ( VAR_1 ) ) && ( ! ( VAR_3 . equals ( STRING_1 ) ) ) ) return true ; } return false ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { try { VAR_1 . METHOD_1 ( VAR_2 ) ; } catch ( java.lang.Throwable t ) { TYPE_3 . METHOD_2 ( t , VAR_1 , VAR_2 ) ; synchronized ( this ) { try { METHOD_3 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_3 . METHOD_4 ( VAR_3 ) ; } METHOD_5 ( VAR_2 ) ; } } finally { VAR_4 . METHOD_6 ( ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { try { VAR_1 . METHOD_1 ( VAR_2 ) ; VAR_4 . METHOD_6 ( ) ; } catch ( java.lang.Throwable t ) { VAR_4 . METHOD_6 ( ) ; TYPE_3 . METHOD_2 ( t , VAR_1 , VAR_2 ) ; synchronized ( this ) { try { METHOD_3 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_3 ) { TYPE_3 . METHOD_4 ( VAR_3 ) ; } METHOD_5 ( VAR_2 ) ; } } }\n"}
{"problem": "public java.util.List < TYPE_1 < TYPE_2 , TYPE_3 > > METHOD_1 ( ) { return TYPE_4 . METHOD_2 ( new java.util.Iterator < TYPE_1 < TYPE_2 , TYPE_3 > > ( ) { private int VAR_1 = 0 ; public boolean METHOD_3 ( ) { return ( VAR_1 ) < ( VAR_2 ) ; } public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_4 ( ) { return METHOD_5 ( ( ( ( VAR_1 ) ++ ) + 1 ) ) ; } public void remove ( ) { throw new TYPE_5 ( ) ; } } ) ; }\n", "fixed": "public java.util.List < TYPE_1 < TYPE_2 , TYPE_3 > > METHOD_1 ( ) { return TYPE_4 . METHOD_2 ( new java.util.Iterator < TYPE_1 < TYPE_2 , TYPE_3 > > ( ) { private int VAR_1 = 1 ; public boolean METHOD_3 ( ) { return ( VAR_1 ) <= ( VAR_2 ) ; } public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_4 ( ) { return METHOD_5 ( ( ( VAR_1 ) ++ ) ) ; } public void remove ( ) { throw new TYPE_5 ( ) ; } } ) ; }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { boolean fail = false ; synchronized ( VAR_2 ) { if ( ( state ) == ( VAR_3 ) ) { VAR_4 . put ( VAR_1 , VAR_1 ) ; } else if ( VAR_1 . METHOD_2 ( ) ) { } else { fail = true ; } } if ( fail ) { java.io.IOException VAR_5 = new java.io.IOException ( VAR_6 . getString ( STRING_1 ) ) ; TYPE_2 VAR_7 = new TYPE_2 ( VAR_5 ) ; VAR_1 . METHOD_3 ( VAR_7 ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_4 . put ( VAR_1 , VAR_1 ) ; if ( ( state ) == ( VAR_3 ) ) { return ; } if ( VAR_1 . METHOD_2 ( ) ) { return ; } java.io.IOException VAR_5 = new java.io.IOException ( VAR_6 . getString ( STRING_1 ) ) ; TYPE_2 VAR_7 = new TYPE_2 ( VAR_5 ) ; VAR_1 . METHOD_3 ( VAR_7 ) ; }\n"}
{"problem": "public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.util.Scanner VAR_2 = new java.util.Scanner ( VAR_3 ) ; java.lang.String VAR_4 = VAR_2 . METHOD_1 ( ) ; while ( ! ( VAR_4 . METHOD_2 ( STRING_3 ) ) ) { VAR_1 . METHOD_3 ( VAR_4 ) ; java.lang.System.out.println ( ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_4 = VAR_2 . METHOD_4 ( ) ; } java.lang.System.out.println ( STRING_4 ) ; VAR_2 . METHOD_5 ( ) ; }\n", "fixed": "public static void main ( java.lang.String [ ] args ) { java.lang.System.out.println ( STRING_1 ) ; java.lang.System.out.println ( STRING_2 ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.util.Scanner VAR_2 = new java.util.Scanner ( VAR_3 ) ; java.lang.String VAR_4 = VAR_2 . METHOD_1 ( ) ; while ( ! ( VAR_4 . METHOD_2 ( STRING_3 ) ) ) { VAR_1 . METHOD_3 ( VAR_4 ) ; java.lang.System.out.println ( ) ; java.lang.System.out.println ( STRING_2 ) ; VAR_4 = VAR_2 . METHOD_1 ( ) ; } java.lang.System.out.println ( STRING_4 ) ; VAR_2 . METHOD_5 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; final int VAR_5 = VAR_1 . METHOD_2 ( ) ; if ( VAR_6 . METHOD_5 ( ) ) { new java.lang.Thread ( new TYPE_2 ( ) { public void METHOD_6 ( ) { METHOD_7 ( STRING_1 , java.lang.String . METHOD_8 ( VAR_5 ) ) ; } } ) . start ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_3 . METHOD_3 ( ) ; final int VAR_5 = VAR_1 . METHOD_2 ( ) ; if ( VAR_6 . METHOD_5 ( ) ) { new java.lang.Thread ( new TYPE_2 ( ) { public void METHOD_6 ( ) { METHOD_7 ( STRING_1 , java.lang.String . METHOD_8 ( VAR_5 ) ) ; } } ) . start ( ) ; } }\n"}
{"problem": "public java.io.File METHOD_1 ( java.io.File VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) throws java.io.IOException { java.io.File out = null ; try { TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_1 , VAR_3 ) ; METHOD_4 ( VAR_3 , VAR_4 , VAR_2 ) ; out = METHOD_5 ( VAR_4 , VAR_5 , VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; } catch ( java.io.IOException VAR_6 ) { TYPE_3 . error ( STRING_1 , VAR_6 ) ; } return out ; }\n", "fixed": "public java.io.File METHOD_1 ( java.io.File VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) throws java.io.IOException { java.io.File out = null ; try { TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; out = METHOD_5 ( VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; } catch ( java.io.IOException VAR_6 ) { TYPE_3 . error ( STRING_1 , VAR_6 ) ; } return out ; }\n"}
{"problem": "java.util.List METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 pattern = TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; java.util.regex.Matcher VAR_3 = pattern . METHOD_3 ( VAR_1 ) ; java.util.List VAR_4 = new java.util.ArrayList ( ) ; while ( VAR_3 . METHOD_4 ( ) ) { java.lang.System.out.println ( VAR_3 . METHOD_5 ( 1 ) ) ; VAR_4 . add ( VAR_3 . METHOD_5 ( 1 ) ) ; } return VAR_4 ; }\n", "fixed": "java.util.List METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 pattern = TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 ) ; java.util.regex.Matcher VAR_3 = pattern . METHOD_3 ( VAR_1 ) ; java.util.List VAR_4 = new java.util.ArrayList ( ) ; while ( VAR_3 . METHOD_4 ( ) ) { VAR_4 . add ( VAR_3 . METHOD_5 ( 1 ) ) ; } return VAR_4 ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; ( this . VAR_3 ) ++ ; TYPE_1 VAR_4 = TYPE_1 . METHOD_2 ( ( ( STRING_3 + ( this . VAR_3 ) ) + STRING_4 ) ) ; java.lang.System.out.println ( this . VAR_5 ) ; METHOD_3 ( this . VAR_5 , VAR_4 ) ; }\n", "fixed": "private void METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; VAR_2 . add ( STRING_2 ) ; ( this . VAR_3 ) ++ ; TYPE_1 VAR_4 = TYPE_1 . METHOD_2 ( ( ( STRING_3 + ( this . VAR_3 ) ) + STRING_4 ) ) ; METHOD_3 ( this . VAR_5 , VAR_4 ) ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( null == VAR_1 ) { VAR_2 = null ; VAR_3 = null ; } else { java.lang.Integer VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 , VAR_1 , true ) ; java.lang.Integer VAR_6 = TYPE_2 . METHOD_2 ( VAR_7 , VAR_1 , true ) ; VAR_2 = VAR_4 ; VAR_3 = VAR_6 ; this . VAR_8 = VAR_1 ; } }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( null == VAR_1 ) { VAR_2 = null ; VAR_3 = null ; } else { java.lang.Integer VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 , VAR_1 , true ) ; java.lang.Integer VAR_6 = TYPE_2 . METHOD_2 ( VAR_7 , VAR_1 , true ) ; VAR_2 = VAR_4 ; VAR_3 = VAR_6 ; } this . VAR_8 = VAR_1 ; }\n"}
{"problem": "public void METHOD_1 ( ) { try { java.lang.Long VAR_1 = null ; VAR_2 . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_1 | TYPE_2 VAR_3 ) { java.lang.String VAR_4 = VAR_3 . METHOD_3 ( ) ; java.lang.String VAR_5 = STRING_1 ; TYPE_3 . assertTrue ( STRING_2 , VAR_4 . contains ( VAR_5 ) ) ; } TYPE_3 . fail ( STRING_3 ) ; }\n", "fixed": "public void METHOD_1 ( ) { try { java.lang.Long VAR_1 = null ; VAR_2 . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_1 | TYPE_2 VAR_3 ) { java.lang.String VAR_4 = VAR_3 . METHOD_3 ( ) ; java.lang.String VAR_5 = STRING_1 ; TYPE_3 . assertTrue ( STRING_2 , VAR_4 . contains ( VAR_5 ) ) ; return ; } TYPE_3 . fail ( STRING_3 ) ; }\n"}
{"problem": "private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_1 node : nodes ) { if ( node . equals ( VAR_1 ) ) { node . METHOD_2 ( VAR_2 ) ; } else { node . METHOD_2 ( 0.0 ) ; } VAR_3 . METHOD_3 ( node ) ; } }\n", "fixed": "private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_1 node : nodes ) { if ( node . equals ( VAR_1 ) ) { node . METHOD_2 ( 0.0 ) ; } else { node . METHOD_2 ( VAR_2 ) ; } VAR_3 . METHOD_3 ( node ) ; } }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory convertToDottedProperties =\n       new PassFactory(\"convertToDottedProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory convertToDottedProperties =\n       new PassFactory(\"convertToDottedProperties\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 . METHOD_2 ( VAR_4 , java.lang.Thread . METHOD_3 ( ) . METHOD_4 ( ) [ INT_1 ] . METHOD_5 ( ) ) ; TYPE_5 VAR_5 = new TYPE_5 ( getContext ( ) , VAR_6 , VAR_7 ) ; android.view.View VAR_8 = VAR_1 . METHOD_6 ( VAR_9 , VAR_2 , false ) ; TYPE_6 VAR_10 = ( ( TYPE_6 ) ( VAR_8 . METHOD_7 ( VAR_11 ) ) ) ; VAR_10 . METHOD_8 ( VAR_5 ) ; return VAR_8 ; }\n", "fixed": "public android.view.View METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { TYPE_4 . METHOD_2 ( VAR_4 , java.lang.Thread . METHOD_3 ( ) . METHOD_4 ( ) [ INT_1 ] . METHOD_5 ( ) ) ; VAR_5 = new TYPE_5 ( getContext ( ) , VAR_6 , VAR_7 ) ; android.view.View VAR_8 = VAR_1 . METHOD_6 ( VAR_9 , VAR_2 , false ) ; TYPE_6 VAR_10 = ( ( TYPE_6 ) ( VAR_8 . METHOD_7 ( VAR_11 ) ) ) ; VAR_10 . METHOD_8 ( VAR_5 ) ; return VAR_8 ; }\n"}
{"problem": "public void start ( ) { try { METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( java.lang.String.format ( STRING_1 , METHOD_3 ( ) ) ) ; if ( VAR_3 . METHOD_4 ( ) ) { TYPE_1 VAR_4 = METHOD_3 ( ) ; TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_4 ) ; } java.lang.Thread . METHOD_7 ( ) . METHOD_8 ( ) ; } catch ( java.lang.Throwable VAR_5 ) { VAR_2 . error ( STRING_2 , VAR_5 ) ; VAR_5 . METHOD_9 ( ) ; } }\n", "fixed": "public void start ( ) { try { METHOD_1 ( VAR_1 ) ; VAR_2 . info ( java.lang.String.format ( STRING_1 , METHOD_3 ( ) ) ) ; if ( VAR_3 . METHOD_4 ( ) ) { TYPE_1 VAR_4 = METHOD_3 ( ) ; TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_4 ) ; } java.lang.Thread . METHOD_7 ( ) . METHOD_8 ( ) ; } catch ( java.lang.Throwable VAR_5 ) { VAR_2 . error ( STRING_2 , VAR_5 ) ; VAR_5 . METHOD_9 ( ) ; } }\n"}
{"fixCommitSHA1": "013bd22eb4848763ee8281e51109b6e98e071cdf", "projectName": "dropwizard.dropwizard", "bugType": "Change Modifier", "problem": "return null;\n     }\n    private void throwRoot() throws SocketTimeoutException {\n         throw new SocketTimeoutException(\"Timed-out reading from socket\");\n     }", "fixed": "return null;\n     }\n    private static void throwRoot() throws SocketTimeoutException {\n         throw new SocketTimeoutException(\"Timed-out reading from socket\");\n     }", "sourceBeforeFix": "2", "sourceAfterFix": "10"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "    * Look for function calls that are pure, and annotate them\n    * that way.\n    */\n  private final PassFactory markPureFunctions =\n       new PassFactory(\"markPureFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "    * Look for function calls that are pure, and annotate them\n    * that way.\n    */\n  final PassFactory markPureFunctions =\n       new PassFactory(\"markPureFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"fixCommitSHA1": "930d814a14d2221a9b745802ea946f44e1b32588", "projectName": "apache.camel", "bugType": "Change Modifier", "problem": "     \n    public static interface DirectVmEndpointBuilder\n             extends\n                 DirectVmEndpointConsumerBuilder, DirectVmEndpointProducerBuilder {\n         default AdvancedDirectVmEndpointBuilder advanced() {", "fixed": "     \n    public interface DirectVmEndpointBuilder\n             extends\n                 DirectVmEndpointConsumerBuilder, DirectVmEndpointProducerBuilder {\n         default AdvancedDirectVmEndpointBuilder advanced() {", "sourceBeforeFix": "9", "sourceAfterFix": "1"}
{"problem": "private void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; VAR_1 . put ( STRING_1 , VAR_2 ) ; try { java.lang.String VAR_3 = ( VAR_4 ) + ( VAR_5 ) ; VAR_6 = new TYPE_1 ( new TYPE_2 ( VAR_3 ) , new TYPE_3 ( ) , VAR_1 ) ; } catch ( TYPE_4 VAR_7 ) { VAR_7 . METHOD_2 ( ) ; } VAR_6 . METHOD_1 ( ) ; }\n", "fixed": "private void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; VAR_1 . put ( STRING_1 , VAR_2 ) ; try { java.lang.String VAR_3 = ( VAR_4 ) + ( VAR_5 ) ; VAR_6 = new TYPE_1 ( new TYPE_2 ( VAR_3 ) , new TYPE_2 ( VAR_5 ) , new TYPE_3 ( ) , VAR_1 ) ; } catch ( TYPE_4 VAR_7 ) { VAR_7 . METHOD_2 ( ) ; } VAR_6 . METHOD_1 ( ) ; }\n"}
{"problem": "public void METHOD_1 ( final TYPE_1 VAR_1 , final int VAR_2 ) { final TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 . getText ( ) . toString ( ) , TYPE_3 . name ( ) , true ) ; TYPE_2 . METHOD_2 ( VAR_3 , new TYPE_4 ( VAR_5 , getContext ( ) ) { public void METHOD_3 ( ) { METHOD_4 ( METHOD_5 ( ) , VAR_3 . getName ( ) ) ; VAR_6 . METHOD_6 ( VAR_7 ) ; } } ) ; }\n", "fixed": "public void METHOD_1 ( final TYPE_1 VAR_1 , final int VAR_2 ) { final TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 . getText ( ) . toString ( ) . trim ( ) , TYPE_3 . name ( ) , true ) ; TYPE_2 . METHOD_2 ( VAR_3 , new TYPE_4 ( VAR_5 , getContext ( ) ) { public void METHOD_3 ( ) { METHOD_4 ( METHOD_5 ( ) , VAR_3 . getName ( ) ) ; VAR_6 . METHOD_6 ( VAR_7 ) ; } } ) ; }\n"}
{"fixCommitSHA1": "c1e4888011b5909b94591de25ab859b91093d6a3", "projectName": "jersey.jersey", "bugType": "Same Function More Args", "problem": "             try {\n                 commitStream();\n             } catch (IOException e) {\n                LOGGER.log(Level.SEVERE, LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM());\n             }\n         }\n     }", "fixed": "             try {\n                 commitStream();\n             } catch (IOException e) {\n                LOGGER.log(Level.SEVERE, LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(), e);\n             }\n         }\n     }", "sourceBeforeFix": "LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM())", "sourceAfterFix": "LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)"}
{"fixCommitSHA1": "c131546eaadd07baf950bd6a44d07ee42d109e4c", "projectName": "apache.flink", "bugType": "Change Identifier Used", "problem": " \t\t\tActorRef rpcEndpoint,\n \t\t\tTime timeout,\n \t\t\tlong maximumFramesize,\n\t\t\t@Nullable CompletableFuture<Boolean> terminationFuture) {\n \t\tthis.address = Preconditions.checkNotNull(address);\n \t\tthis.hostname = Preconditions.checkNotNull(hostname);", "fixed": " \t\t\tActorRef rpcEndpoint,\n \t\t\tTime timeout,\n \t\t\tlong maximumFramesize,\n\t\t\t@Nullable CompletableFuture<Void> terminationFuture) {\n \t\tthis.address = Preconditions.checkNotNull(address);\n \t\tthis.hostname = Preconditions.checkNotNull(hostname);", "sourceBeforeFix": "CompletableFuture<Boolean>", "sourceAfterFix": "CompletableFuture<Void>"}
{"problem": "public static void METHOD_1 ( android.content.Context context , java.lang.String message , java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( context . getClass ( ) . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 ) ; if ( ( VAR_2 ) || ( message != null ) ) { TYPE_2 . METHOD_5 ( context , ( message == null ? VAR_1 . METHOD_4 ( ) : message ) , VAR_3 ) . show ( ) ; } }\n", "fixed": "public static void METHOD_1 ( android.content.Context context , java.lang.String message , java.lang.Throwable VAR_1 ) { TYPE_1 . METHOD_2 ( context . getClass ( ) . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 ) ; if ( VAR_2 ) { TYPE_2 . METHOD_5 ( context , message , VAR_3 ) . show ( ) ; } }\n"}
{"problem": "public final void METHOD_1 ( boolean VAR_1 ) { if ( ( METHOD_2 ( ) ) && ( ( ! VAR_1 ) || ( ! ( VAR_2 . METHOD_3 ( ) ) ) ) ) return ; if ( VAR_1 ) METHOD_4 ( ) ; else METHOD_5 ( ) ; if ( METHOD_2 ( ) ) VAR_2 . METHOD_1 ( ) ; }\n", "fixed": "public final void METHOD_1 ( boolean VAR_1 ) { if ( ( METHOD_2 ( ) ) && ( ( ! VAR_1 ) || ( ! ( VAR_2 . METHOD_3 ( ) ) ) ) ) return ; if ( VAR_1 ) METHOD_4 ( ) ; else METHOD_5 ( ) ; if ( ! ( METHOD_2 ( ) ) ) VAR_2 . METHOD_1 ( ) ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   };\n   \n  private final PassFactory instrumentFunctions =\n       new PassFactory(\"instrumentFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "fixed": "   };\n   \n  final PassFactory instrumentFunctions =\n       new PassFactory(\"instrumentFunctions\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.LinkedList < > ( ) ; java.lang.String VAR_3 = ( STRING_1 + VAR_1 ) + STRING_2 ; if ( ( VAR_4 . METHOD_2 ( STRING_3 , ( STRING_1 + VAR_1 ) ) ) && ( ( VAR_5 . size ( VAR_3 ) ) != 0 ) ) { java.lang.System.out.println ( STRING_4 ) ; VAR_2 . METHOD_3 ( VAR_5 . METHOD_4 ( VAR_3 , 0 , ( - 1 ) ) ) ; } return VAR_2 ; }\n", "fixed": "public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.LinkedList < > ( ) ; java.lang.String VAR_3 = ( STRING_1 + VAR_1 ) + STRING_2 ; if ( ( VAR_4 . METHOD_2 ( STRING_3 , ( STRING_1 + VAR_1 ) ) ) && ( ( VAR_5 . size ( VAR_3 ) ) != 0 ) ) { VAR_2 . METHOD_3 ( VAR_5 . METHOD_4 ( VAR_3 , 0 , ( - 1 ) ) ) ; } return VAR_2 ; }\n"}
{"problem": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { METHOD_2 ( VAR_1 ) ; return METHOD_3 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_3 . METHOD_4 ( VAR_3 , ( STRING_1 + ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ) ) , VAR_2 ) ; } return null ; }\n", "fixed": "private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { METHOD_2 ( VAR_1 ) ; return METHOD_3 ( VAR_1 ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_3 . METHOD_4 ( VAR_3 , ( STRING_1 + ( VAR_1 . url ) ) , VAR_2 ) ; } return null ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) . equals ( VAR_2 ) ) && ( ! ( ( content ) instanceof TYPE_2 ) ) ) { TYPE_2 VAR_3 = TYPE_2 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( VAR_3 ) ; VAR_3 . METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) . equals ( VAR_2 ) ) && ( ! ( ( content ) instanceof TYPE_2 ) ) ) { TYPE_2 VAR_3 = TYPE_2 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( VAR_3 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { if ( ( ( METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) != null ) && ( ( METHOD_2 ( ) . METHOD_4 ( ) ) > 0 ) ) { METHOD_2 ( ) . METHOD_5 ( ) ; return ; } TYPE_1 VAR_2 = TYPE_1 . METHOD_6 ( ) ; METHOD_2 ( ) . METHOD_7 ( ) . add ( VAR_3 , VAR_2 , VAR_1 ) . commit ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) != null ) { if ( ( METHOD_2 ( ) . METHOD_4 ( ) ) > 0 ) { METHOD_2 ( ) . METHOD_5 ( ) ; } return ; } TYPE_1 VAR_2 = TYPE_1 . METHOD_6 ( ) ; METHOD_2 ( ) . METHOD_7 ( ) . add ( VAR_3 , VAR_2 , VAR_1 ) . commit ( ) ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; java.lang.String [ ] VAR_4 = VAR_1 . METHOD_2 ( ) ; for ( java.lang.String t : VAR_4 ) { TYPE_1 VAR_5 = METHOD_3 ( t ) ; if ( VAR_2 ) { if ( VAR_5 . METHOD_4 ( ) ) { VAR_3 . add ( VAR_5 ) ; } } else { VAR_3 . add ( VAR_5 ) ; } } }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; java.lang.String [ ] VAR_4 = VAR_1 . METHOD_2 ( ) ; for ( java.lang.String t : VAR_4 ) { TYPE_1 VAR_5 = METHOD_3 ( t ) ; if ( VAR_2 ) { if ( VAR_5 . METHOD_4 ( ) ) { VAR_3 . add ( VAR_5 ) ; } } else { VAR_3 . add ( VAR_5 ) ; } } return VAR_3 ; }\n"}
{"problem": "private java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { java.util.Collection < TYPE_4 > VAR_4 = this . VAR_5 . METHOD_2 ( VAR_3 ) ; for ( TYPE_4 VAR_6 : VAR_4 ) { java.util.Collection < TYPE_5 > VAR_7 = VAR_6 . METHOD_3 ( ) ; for ( TYPE_5 VAR_8 : VAR_7 ) { return ( VAR_8 . METHOD_4 ( VAR_1 ) ) && ( this . VAR_9 . equals ( VAR_8 . METHOD_5 ( ) ) ) ; } } return null ; }\n", "fixed": "private java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { java.util.Collection < TYPE_4 > VAR_4 = this . VAR_5 . METHOD_2 ( VAR_3 ) ; for ( TYPE_4 VAR_6 : VAR_4 ) { java.util.Collection < TYPE_5 > VAR_7 = VAR_6 . METHOD_3 ( ) ; for ( TYPE_5 VAR_8 : VAR_7 ) { if ( ( VAR_8 . METHOD_4 ( VAR_1 ) ) && ( this . VAR_9 . equals ( VAR_8 . METHOD_5 ( ) ) ) ) { return true ; } } } return null ; }\n"}
{"fixCommitSHA1": "1c9a83a316dcb5c1d304c9c600627df5dc77c3f0", "projectName": "hazelcast.hazelcast", "bugType": "Change Numeric Literal", "problem": "     @Test\n     public void testOperationTimeoutForLongRunningRemoteOperation() throws Exception {\n        int callTimeoutMillis = 1000;\n         Config config = new Config().setProperty(OPERATION_CALL_TIMEOUT_MILLIS.getName(), \"\" + callTimeoutMillis);\n         TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);", "fixed": "     @Test\n     public void testOperationTimeoutForLongRunningRemoteOperation() throws Exception {\n        int callTimeoutMillis = 3000;\n         Config config = new Config().setProperty(OPERATION_CALL_TIMEOUT_MILLIS.getName(), \"\" + callTimeoutMillis);\n         TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);", "sourceBeforeFix": "callTimeoutMillis=1000", "sourceAfterFix": "callTimeoutMillis=3000"}
{"fixCommitSHA1": "f80cd0840159840d35b445ea247e3fbf356eae88", "projectName": "dropwizard.dropwizard", "bugType": "Change Identifier Used", "problem": "         connector.setReuseAddress(reuseAddress);\n         if (soLingerTime != null) {\n            connector.setSoLingerTime((int) soLingerTime.toSeconds());\n         }\n         connector.setIdleTimeout(idleTimeout.toMilliseconds());\n         connector.setName(name);", "fixed": "         connector.setReuseAddress(reuseAddress);\n         if (soLingerTime != null) {\n            connector.setSoLingerTime((int) soLingerTime.toMilliseconds());\n         }\n         connector.setIdleTimeout(idleTimeout.toMilliseconds());\n         connector.setName(name);", "sourceBeforeFix": "soLingerTime.toSeconds()", "sourceAfterFix": "soLingerTime.toMilliseconds()"}
{"problem": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( new TYPE_2 ( 0 , 0 , 1 ) , VAR_3 ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_2 ( new TYPE_2 ( 1 , 0 , 0 ) , VAR_1 . x ) ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_2 ( new TYPE_2 ( 0 , 1 , 0 ) , VAR_1 . y ) ) ; return VAR_2 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( new TYPE_2 ( 0 , 1 , 0 ) , VAR_1 . y ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_2 ( new TYPE_2 ( 1 , 0 , 0 ) , VAR_1 . x ) ) ; VAR_2 = TYPE_1 . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_2 ( new TYPE_2 ( 0 , 0 , 1 ) , VAR_3 ) ) ; return VAR_2 ; }\n"}
{"problem": "public void METHOD_1 ( ) { new TYPE_1 ( this ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( VAR_1 , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_2 , int VAR_3 ) { METHOD_6 ( new android.content.Intent ( VAR_4 this , VAR_5 class ) ) ; } } ) . METHOD_7 ( VAR_6 , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_2 , int VAR_3 ) { } } ) . METHOD_8 ( VAR_7 ) . show ( ) ; }\n", "fixed": "public static void METHOD_1 ( final android.content.Context context ) { new TYPE_1 ( context ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( VAR_1 , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_2 , int VAR_3 ) { context . METHOD_6 ( new android.content.Intent ( context , VAR_5 class ) ) ; } } ) . METHOD_7 ( VAR_6 , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_2 , int VAR_3 ) { } } ) . METHOD_8 ( VAR_7 ) . show ( ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 < java.lang.String , TYPE_3 > VAR_2 = VAR_3 . get ( METHOD_2 ( ) ) ; if ( VAR_2 == null ) { return ; } TYPE_3 VAR_4 = VAR_2 . get ( VAR_1 . METHOD_3 ( ) ) ; if ( VAR_4 == null ) { return ; } VAR_5 = false ; if ( ! ( VAR_6 ) ) { VAR_2 . remove ( VAR_1 . METHOD_3 ( ) ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { android.view.View view = METHOD_2 ( ) ; if ( view == null ) return ; TYPE_2 < java.lang.String , TYPE_3 > VAR_2 = VAR_3 . get ( view ) ; if ( VAR_2 == null ) { return ; } TYPE_3 VAR_4 = VAR_2 . get ( VAR_1 . METHOD_3 ( ) ) ; if ( VAR_4 == null ) { return ; } VAR_5 = false ; if ( ! ( VAR_6 ) ) { VAR_2 . remove ( VAR_1 . METHOD_3 ( ) ) ; } }\n"}
{"problem": "public static < TYPE_1 > int METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , java.util.Collection < ? super TYPE_1 > buffer ) { TYPE_3 . METHOD_2 ( buffer ) ; int VAR_2 = VAR_1 . METHOD_3 ( buffer ) ; try { if ( VAR_2 == 0 ) { buffer . add ( VAR_1 . METHOD_4 ( ) ) ; VAR_2 += VAR_1 . METHOD_3 ( buffer ) ; ++ VAR_2 ; } } catch ( TYPE_4 VAR_3 ) { throw TYPE_5 . METHOD_5 ( VAR_3 ) ; } return VAR_2 ; }\n", "fixed": "public static < TYPE_1 > int METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , java.util.Collection < ? super TYPE_1 > buffer ) throws TYPE_4 { TYPE_3 . METHOD_2 ( buffer ) ; int VAR_2 = VAR_1 . METHOD_3 ( buffer ) ; if ( VAR_2 == 0 ) { buffer . add ( VAR_1 . METHOD_4 ( ) ) ; VAR_2 += VAR_1 . METHOD_3 ( buffer ) ; ++ VAR_2 ; } return VAR_2 ; }\n"}
{"problem": "public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { try { if ( ( VAR_3 != null ) && ( VAR_3 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_1 ( ) ; } TYPE_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_5 VAR_4 ) { throw new TYPE_6 ( VAR_4 . METHOD_3 ( ) , VAR_4 ) ; } }\n", "fixed": "public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { try { if ( ( VAR_3 != null ) && ( ! ( VAR_3 . METHOD_2 ( ) ) ) ) { VAR_3 . METHOD_1 ( ) ; } TYPE_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_5 VAR_4 ) { throw new TYPE_6 ( VAR_4 . METHOD_3 ( ) , VAR_4 ) ; } }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = java.lang.Boolean . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_3 , \"true\" ) ) ; VAR_4 = java.lang.Boolean . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_5 , \"false\" ) ) ; VAR_6 = java.lang.Boolean . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_7 , \"true\" ) ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = java.lang.Boolean . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_3 , \"true\" ) ) ; VAR_4 = java.lang.Boolean . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_5 , \"false\" ) ) ; VAR_6 = VAR_1 . METHOD_3 ( VAR_7 , null ) ; }\n"}
{"problem": "private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( TYPE_3 . METHOD_2 ( 1 ) , ( VAR_2 ) - > { for ( TYPE_4 VAR_3 : VAR_4 ) { if ( VAR_3 . METHOD_3 ( ) ) { VAR_3 . METHOD_4 ( this ) ; } } METHOD_5 ( ) ; view . METHOD_6 ( VAR_4 ) ; METHOD_7 ( ) ; view . METHOD_8 ( VAR_5 , this ) ; } ) ) ; VAR_1 . METHOD_9 ( VAR_6 ) ; VAR_1 . METHOD_10 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( TYPE_3 . METHOD_2 ( 1 ) , ( VAR_2 ) - > { for ( TYPE_4 VAR_3 : VAR_4 ) { if ( VAR_3 . METHOD_3 ( ) ) { VAR_3 . METHOD_4 ( this ) ; } } METHOD_5 ( ) ; view . METHOD_6 ( VAR_4 ) ; METHOD_7 ( ) ; view . METHOD_8 ( VAR_5 , this ) ; } ) ) ; VAR_1 . METHOD_9 ( VAR_6 ) ; VAR_1 . METHOD_10 ( ) ; }\n"}
{"problem": "private java.lang.String METHOD_1 ( java.lang.String string ) { int VAR_1 = string . length ( ) ; if ( VAR_1 > 0 ) { if ( ( string . METHOD_2 ( ( VAR_1 - 1 ) ) ) == ( VAR_2 ) ) { string = string . substring ( 0 , ( VAR_1 - 1 ) ) ; } else if ( ( string . METHOD_2 ( 0 ) ) == ( VAR_2 ) ) { string = string . substring ( 1 ) ; } } return string ; }\n", "fixed": "private static java.lang.String METHOD_1 ( java.lang.String value ) { int VAR_1 = value . length ( ) ; if ( VAR_1 > 0 ) { if ( ( value . METHOD_2 ( 0 ) ) == ( VAR_2 ) ) { value = value . substring ( 1 ) ; } else if ( ( value . METHOD_2 ( ( VAR_1 - 1 ) ) ) == ( VAR_2 ) ) { value = value . substring ( 0 , ( VAR_1 - 1 ) ) ; } } return value ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": " import org.jboss.logging.MessageLogger;\n /**\n * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n* controller logger messages. See http:\n  * JBAS message id blocks.\n  * <p/>", "fixed": " import org.jboss.logging.MessageLogger;\n /**\n * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n* controller logger messages. See http:\n  * JBAS message id blocks.\n  * <p/>", "sourceBeforeFix": "id=15807", "sourceAfterFix": "id=10807"}
{"problem": "public static java.lang.Boolean METHOD_1 ( java.lang.String key ) { TYPE_1 . METHOD_2 ( STRING_1 , key ) ; TYPE_2 status ; try { status = TYPE_3 . METHOD_3 ( ) ; if ( status . METHOD_4 ( ) ) { java.lang.System.out.println ( STRING_2 ) ; return true ; } else { java.lang.System.out.println ( STRING_3 ) ; java.lang.System.exit ( 1 ) ; return false ; } } catch ( TYPE_4 VAR_1 ) { java.lang.System.out.println ( STRING_4 ) ; VAR_1 . METHOD_5 ( ) ; java.lang.System.out.println ( STRING_4 ) ; return false ; } }\n", "fixed": "public static java.lang.Boolean METHOD_1 ( java.lang.String key ) { TYPE_1 . METHOD_2 ( STRING_1 , key ) ; TYPE_2 status ; try { status = TYPE_3 . METHOD_3 ( ) ; if ( status . METHOD_4 ( ) ) return true ; else { java.lang.System.out.println ( STRING_3 ) ; java.lang.System.exit ( 1 ) ; return false ; } } catch ( TYPE_4 VAR_1 ) { java.lang.System.out.println ( STRING_4 ) ; VAR_1 . METHOD_5 ( ) ; return false ; } }\n"}
{"problem": "public void remove ( java.lang.String [ ] VAR_1 ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { if ( this . VAR_2 . METHOD_1 ( VAR_1 [ i ] ) ) this . VAR_2 . remove ( VAR_1 ) ; } }\n", "fixed": "public void remove ( java.lang.String [ ] VAR_1 ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { if ( this . VAR_2 . METHOD_1 ( VAR_1 [ i ] ) ) this . VAR_2 . remove ( VAR_1 [ i ] ) ; } }\n"}
{"problem": "public int METHOD_1 ( TYPE_1 state , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_4 VAR_3 = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ; if ( VAR_3 != ( this ) ) { return VAR_3 . METHOD_1 ( state , VAR_1 , VAR_2 ) ; } return this . METHOD_1 ( state , VAR_1 , VAR_2 ) ; }\n", "fixed": "public int METHOD_1 ( TYPE_1 state , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_4 VAR_3 = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ; if ( VAR_3 != ( this ) ) { return VAR_3 . METHOD_1 ( state , VAR_1 , VAR_2 ) ; } return super . METHOD_1 ( state , VAR_1 , VAR_2 ) ; }\n"}
{"problem": "public static void METHOD_1 ( java.lang.Object [ ] VAR_1 , java.io.File output , boolean VAR_2 ) throws TYPE_1 { TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( output ) ; if ( VAR_2 ) { TYPE_2 . METHOD_3 ( ) . METHOD_1 ( VAR_1 , output ) ; } TYPE_2 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , output ) ; }\n", "fixed": "public static void METHOD_1 ( java.lang.Object [ ] VAR_1 , java.io.File output , boolean VAR_2 ) throws TYPE_1 { TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_2 ( output ) ; if ( VAR_2 ) { TYPE_2 . METHOD_3 ( ) . METHOD_1 ( VAR_1 , output ) ; return ; } TYPE_2 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , output ) ; }\n"}
{"problem": "public static TYPE_1 METHOD_1 ( java.lang.String title , java.lang.String VAR_1 , int VAR_2 , int VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; TYPE_2 args = new TYPE_2 ( ) ; args . METHOD_2 ( VAR_5 , title ) ; args . METHOD_2 ( VAR_6 , VAR_1 ) ; args . METHOD_3 ( VAR_7 , VAR_2 ) ; args . METHOD_3 ( VAR_8 , VAR_3 ) ; VAR_4 . METHOD_4 ( args ) ; return VAR_4 ; }\n", "fixed": "public static TYPE_1 METHOD_1 ( java.lang.String title , java.lang.String VAR_1 , int VAR_2 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; TYPE_2 args = new TYPE_2 ( ) ; args . METHOD_2 ( VAR_5 , title ) ; args . METHOD_2 ( VAR_6 , VAR_1 ) ; args . METHOD_3 ( VAR_7 , VAR_2 ) ; VAR_4 . METHOD_4 ( args ) ; return VAR_4 ; }\n"}
{"problem": "private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 ) { java.lang.String VAR_4 = VAR_3 . METHOD_2 ( ) ; if ( METHOD_3 ( VAR_2 , VAR_4 ) ) { METHOD_4 ( VAR_1 , VAR_2 , VAR_4 ) ; } else if ( ( METHOD_5 ( VAR_2 ) ) && ( ( VAR_5 . get ( VAR_2 ) . size ( ) ) > 1 ) ) { throw new TYPE_2 ( VAR_2 , VAR_5 . get ( VAR_2 ) . values ( ) ) ; } }\n", "fixed": "private void METHOD_1 ( java.lang.String VAR_2 , TYPE_1 VAR_3 ) { java.lang.String VAR_4 = VAR_3 . METHOD_2 ( ) ; if ( METHOD_3 ( VAR_2 , VAR_4 ) ) { METHOD_4 ( VAR_2 , VAR_4 ) ; } else if ( ( METHOD_5 ( VAR_2 ) ) && ( ( VAR_5 . get ( VAR_2 ) . size ( ) ) > 1 ) ) { throw new TYPE_2 ( VAR_2 , VAR_5 . get ( VAR_2 ) . values ( ) ) ; } }\n"}
{"fixCommitSHA1": "ec709731b83a26e43c22bc6299ea29c180d260d8", "projectName": "neo4j.neo4j", "bugType": "Same Function Less Args", "problem": "         put( TYPES, new BooleanTypeCaster(), boolean.class, Boolean.class );\n         put( TYPES, new FloatTypeCaster(), float.class, Float.class );\n         put( TYPES, new DoubleTypeCaster(), double.class, Double.class );\n        put( TYPES, new MapTypeCaster(), Map.class, Double.class );\n         put( TYPES, new NodeTypeCaster(), Node.class );\n         put( TYPES, new RelationshipTypeCaster(), Relationship.class );\n         put( TYPES, new RelationshipTypeTypeCaster(), RelationshipType.class );", "fixed": "         put( TYPES, new BooleanTypeCaster(), boolean.class, Boolean.class );\n         put( TYPES, new FloatTypeCaster(), float.class, Float.class );\n         put( TYPES, new DoubleTypeCaster(), double.class, Double.class );\n        put( TYPES, new MapTypeCaster(), Map.class );\n         put( TYPES, new NodeTypeCaster(), Node.class );\n         put( TYPES, new RelationshipTypeCaster(), Relationship.class );\n         put( TYPES, new RelationshipTypeTypeCaster(), RelationshipType.class );", "sourceBeforeFix": "put(TYPES,new MapTypeCaster(),Map.class,Double.class)", "sourceAfterFix": "put(TYPES,new MapTypeCaster(),Map.class)"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_1 . METHOD_5 ( ) ) . METHOD_4 ( STRING_2 ) ; VAR_2 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( VAR_1 , TYPE_1 . METHOD_8 ( 1 ) ) . METHOD_3 ( ) ; TYPE_1 . METHOD_7 ( VAR_1 , TYPE_1 . METHOD_9 ( ) ) . METHOD_5 ( ) ; TYPE_1 . METHOD_7 ( VAR_1 , TYPE_1 . METHOD_8 ( 1 ) ) . METHOD_10 ( ) ; }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_1 . METHOD_5 ( ) ) . METHOD_4 ( STRING_2 ) ; VAR_2 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( VAR_1 , TYPE_1 . METHOD_8 ( 1 ) ) . METHOD_3 ( ) ; TYPE_1 . METHOD_7 ( VAR_1 , TYPE_1 . METHOD_8 ( 1 ) ) . METHOD_5 ( ) ; TYPE_1 . METHOD_7 ( VAR_1 , TYPE_1 . METHOD_8 ( 1 ) ) . METHOD_10 ( ) ; }\n"}
{"problem": "private void open ( java.io.File f ) { if ( f . METHOD_1 ( ) ) { if ( f . getName ( ) . equals ( STRING_1 ) ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } else { METHOD_2 ( f . METHOD_4 ( ) ) ; METHOD_3 ( ) ; } } else { METHOD_5 ( f ) ; } }\n", "fixed": "private void open ( java.io.File f ) { if ( f . METHOD_1 ( ) ) { if ( f . getName ( ) . equals ( STRING_1 ) ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; } else { METHOD_2 ( f . METHOD_4 ( ) ) ; METHOD_3 ( ) ; } } else { METHOD_5 ( f . METHOD_4 ( ) ) ; } }\n"}
{"problem": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { METHOD_2 ( ) ; return true ; } else if ( VAR_1 == ( VAR_3 ) ) { return true ; } else if ( VAR_1 == ( VAR_4 ) ) { return true ; } else if ( VAR_1 == ( VAR_5 ) ) { return true ; } else if ( VAR_1 == ( VAR_6 ) ) { TYPE_2 . METHOD_3 ( this , STRING_1 , VAR_7 ) . show ( ) ; } return false ; }\n", "fixed": "public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == ( VAR_2 ) ) { METHOD_2 ( ) ; return true ; } else if ( VAR_1 == ( VAR_3 ) ) { return true ; } else if ( VAR_1 == ( VAR_4 ) ) { return true ; } else if ( VAR_1 == ( VAR_5 ) ) { return true ; } else if ( VAR_1 == ( VAR_6 ) ) { } return false ; }\n"}
{"fixCommitSHA1": "998cca82220175171f60cd096ee26f600eabd8dc", "projectName": "hazelcast.hazelcast", "bugType": "Wrong Function Name", "problem": "         return getNode(random.nextInt(cluster.size()));\n     }\n    public void terminateRandomNode(){\n         HazelcastInstance node = getRandomNode();\n        node.getLifecycleService().terminate();\n         cluster.remove(node);\n     }", "fixed": "         return getNode(random.nextInt(cluster.size()));\n     }\n    public void shutdownRandomNode(){\n         HazelcastInstance node = getRandomNode();\n        node.getLifecycleService().shutdown();\n         cluster.remove(node);\n     }", "sourceBeforeFix": "node.getLifecycleService().terminate()", "sourceAfterFix": "node.getLifecycleService().shutdown()"}
{"problem": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; } if ( ( VAR_4 ) != null ) { TYPE_1 . METHOD_2 ( VAR_4 ) ; } }\n", "fixed": "private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_3 ( ) ; VAR_3 = null ; } if ( ( VAR_4 ) != null ) { TYPE_1 . METHOD_2 ( VAR_4 ) ; VAR_4 = null ; } }\n"}
{"problem": "public boolean METHOD_1 ( int index , TYPE_1 VAR_1 ) { if ( index >= ( VAR_2 . size ( ) ) ) { return false ; } VAR_3 = VAR_2 . get ( index ) ; VAR_4 = STRING_1 ; VAR_2 . set ( index , VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_5 , VAR_2 ) ; return true ; }\n", "fixed": "public boolean METHOD_1 ( int index , TYPE_1 VAR_1 ) { if ( ( index >= ( VAR_2 . size ( ) ) ) || ( ( VAR_2 . size ( ) ) == 0 ) ) { return false ; } VAR_3 = VAR_2 . get ( index ) ; VAR_4 = STRING_1 ; VAR_2 . set ( index , VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_5 , VAR_2 ) ; return true ; }\n"}
{"fixCommitSHA1": "5862c2c13c1cb67065f934d7356e3e993b9363a9", "projectName": "wildfly.wildfly", "bugType": "Change Modifier", "problem": "     \n    private V value;\n     \n     private transient SerializationGroup<K, V, G> group;", "fixed": "     \n    private transient V value;\n     \n     private transient SerializationGroup<K, V, G> group;", "sourceBeforeFix": "2", "sourceAfterFix": "130"}
{"problem": "public void METHOD_1 ( java.lang.String string ) { byte [ ] buffer = string . METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( buffer ) ; } catch ( java.io.IOException VAR_2 ) { TYPE_1 . METHOD_4 ( VAR_3 , STRING_1 , VAR_2 ) ; METHOD_5 ( ) ; } }\n", "fixed": "public int METHOD_1 ( java.lang.String string ) { byte [ ] buffer = string . METHOD_2 ( ) ; try { VAR_1 . METHOD_3 ( buffer ) ; } catch ( java.io.IOException VAR_2 ) { TYPE_1 . METHOD_4 ( VAR_3 , STRING_1 , VAR_2 ) ; METHOD_5 ( ) ; return - 1 ; } return buffer . length ; }\n"}
{"problem": "public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 buffer = TYPE_1 . METHOD_2 ( data ) ; VAR_1 . METHOD_3 ( buffer , 0 ) ; assertThat ( VAR_1 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 ) ) ; assertThat ( VAR_1 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( VAR_2 ) ) ; }\n", "fixed": "public void METHOD_1 ( ) throws java.io.IOException { TYPE_1 buffer = TYPE_1 . METHOD_2 ( data ) ; VAR_1 . METHOD_3 ( buffer , 0 ) ; assertThat ( VAR_1 . METHOD_4 ( ) , METHOD_5 ( VAR_2 ) ) ; assertThat ( VAR_1 . METHOD_4 ( ) , METHOD_5 ( VAR_2 ) ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( ( VAR_3 . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ) != null ) { java.lang.String path = new java.io.File ( VAR_4 . METHOD_6 ( ) ) . METHOD_7 ( ) ; VAR_2 . METHOD_8 ( ) . METHOD_9 ( VAR_4 , false ) ; METHOD_10 ( path ) ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( ( VAR_3 . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ) != null ) { java.lang.String path = VAR_4 . METHOD_6 ( ) ; VAR_2 . METHOD_8 ( ) . METHOD_9 ( VAR_4 , false ) ; METHOD_10 ( path ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_2 ( null ) ; if ( VAR_4 ) { getActivity ( ) . METHOD_3 ( VAR_5 ) ; } VAR_6 = null ; super . METHOD_1 ( ) ; boolean VAR_7 = METHOD_4 ( ) . getBoolean ( VAR_8 ) ; if ( ! VAR_7 ) { getActivity ( ) . METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( null ) ; VAR_2 . METHOD_2 ( null ) ; VAR_3 . METHOD_2 ( null ) ; if ( VAR_4 ) { getActivity ( ) . METHOD_3 ( VAR_5 ) ; } VAR_6 = null ; super . METHOD_1 ( ) ; }\n"}
{"problem": "protected TYPE_1 METHOD_1 ( java.lang.Void ... params ) { TYPE_1 VAR_1 = null ; try { java.lang.String VAR_2 = STRING_1 ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_1 = VAR_3 . METHOD_2 ( VAR_5 , STRING_2 , VAR_2 ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_3 ( ) ; } return VAR_1 ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( java.lang.Void ... params ) { TYPE_1 VAR_1 = null ; try { TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_1 = VAR_3 . METHOD_2 ( VAR_5 ) ; } catch ( java.lang.Exception VAR_6 ) { VAR_6 . METHOD_3 ( ) ; } return VAR_1 ; }\n"}
{"problem": "public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) { try { java.lang.String str = STRING_1 ; TYPE_2 query = VAR_2 . METHOD_2 ( str ) ; query . METHOD_3 ( 1 , ( VAR_1 - INT_1 ) ) ; query . METHOD_3 ( INT_1 , ( VAR_1 + INT_1 ) ) ; return query . METHOD_4 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_5 ( ) ; VAR_2 . METHOD_6 ( ) ; return null ; } }\n", "fixed": "public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) { try { java.lang.String str = STRING_1 ; TYPE_2 query = VAR_2 . METHOD_2 ( str ) ; query . METHOD_3 ( 1 , ( VAR_1 - INT_1 ) ) ; query . METHOD_3 ( INT_1 , ( VAR_1 + INT_1 ) ) ; return query . METHOD_4 ( ) ; } catch ( java.lang.Exception VAR_3 ) { VAR_3 . METHOD_5 ( ) ; VAR_2 . METHOD_6 ( ) ; return null ; } finally { VAR_2 . METHOD_6 ( ) ; } }\n"}
{"fixCommitSHA1": "a63faf44e1b103a49d25a15c720fc5940ae9fc07", "projectName": "square.retrofit", "bugType": "Change Identifier Used", "problem": "     assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultClass = new TypeToken<Maybe<Result<String>>>() {}.getType();\n    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultClass = new TypeToken<Flowable<Result<String>>>() {}.getType();\n    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type oResultWildcard = new TypeToken<Observable<Result<? extends String>>>() {}.getType();", "fixed": "     assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultClass = new TypeToken<Maybe<Result<String>>>() {}.getType();\n    assertThat(factory.get(mResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultClass = new TypeToken<Flowable<Result<String>>>() {}.getType();\n    assertThat(factory.get(fResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type oResultWildcard = new TypeToken<Observable<Result<? extends String>>>() {}.getType();", "sourceBeforeFix": "factory.get(sResultClass,NO_ANNOTATIONS,retrofit)", "sourceAfterFix": "factory.get(fResultClass,NO_ANNOTATIONS,retrofit)"}
{"fixCommitSHA1": "780e4a27f74b52de0a0fff72c71d0006c60a2165", "projectName": "druid-io.druid", "bugType": "Change Numeric Literal", "problem": "   private void waitForTestVerificationAndCleanup(Future future)\n   {\n     try {\n      queryNotifyLatch.await(25, TimeUnit.MILLISECONDS);\n       queryWaitYieldLatch.countDown();\n       queryWaitLatch.countDown();\n       future.get();", "fixed": "   private void waitForTestVerificationAndCleanup(Future future)\n   {\n     try {\n      queryNotifyLatch.await(1000, TimeUnit.MILLISECONDS);\n       queryWaitYieldLatch.countDown();\n       queryWaitLatch.countDown();\n       future.get();", "sourceBeforeFix": "waitLatch.await(25,TimeUnit.MILLISECONDS)", "sourceAfterFix": "waitLatch.await(1000,TimeUnit.MILLISECONDS)"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { byte [ ] VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_1 ) ; this . VAR_4 = TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( ) . METHOD_6 ( new java.lang.String ( VAR_2 ) , VAR_5 class ) ) ; METHOD_1 ( this . VAR_4 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { byte [ ] VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_1 ) ; METHOD_1 ( TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( ) . METHOD_6 ( new java.lang.String ( VAR_2 ) , VAR_5 class ) ) ) ; }\n"}
{"fixCommitSHA1": "f467d695be2ae4ee7d5c2978191e1415aef37a9e", "projectName": "netty.netty", "bugType": "Change Boolean Literal", "problem": "* @param keyFile a PKCS\n      */\n     public static SslContextBuilder forServer(File keyCertChainFile, File keyFile) {\n        return new SslContextBuilder(false).keyManager(keyCertChainFile, keyFile);\n     }\n     /**", "fixed": "* @param keyFile a PKCS\n      */\n     public static SslContextBuilder forServer(File keyCertChainFile, File keyFile) {\n        return new SslContextBuilder(true).keyManager(keyCertChainFile, keyFile);\n     }\n     /**", "sourceBeforeFix": "new SslContextBuilder(false)", "sourceAfterFix": "new SslContextBuilder(true)"}
{"problem": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result , TYPE_3 VAR_2 ) throws java.io.IOException { METHOD_2 ( VAR_1 , VAR_2 ) ; if ( result . METHOD_3 ( ) ) { return STRING_1 ; } VAR_3 . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_4 = ( ( TYPE_1 ) ( TYPE_4 . getContext ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; return STRING_2 + ( VAR_4 . METHOD_6 ( ) ) ; }\n", "fixed": "public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 result , TYPE_3 VAR_2 ) throws java.io.IOException { if ( result . METHOD_3 ( ) ) { return STRING_1 ; } VAR_3 . METHOD_1 ( VAR_1 ) ; TYPE_1 VAR_4 = ( ( TYPE_1 ) ( TYPE_4 . getContext ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; return STRING_2 + ( VAR_4 . METHOD_6 ( ) ) ; }\n"}
{"problem": "public void METHOD_1 ( TYPE_1 target ) { java.util.List < TYPE_2 > VAR_1 = new TYPE_3 ( VAR_2 , target . x , target . y ) . METHOD_2 ( ) ; int VAR_3 = ( VAR_1 . get ( 0 ) . x ) - ( VAR_2 . x ) ; int VAR_4 = ( VAR_1 . get ( 0 ) . y ) - ( VAR_2 . y ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_4 , 0 ) ; }\n", "fixed": "public void METHOD_1 ( TYPE_1 target ) { java.util.List < TYPE_2 > VAR_1 = new TYPE_3 ( VAR_2 , target . x , target . y ) . METHOD_2 ( ) ; if ( VAR_1 != null ) { int VAR_3 = ( VAR_1 . get ( 0 ) . x ) - ( VAR_2 . x ) ; int VAR_4 = ( VAR_1 . get ( 0 ) . y ) - ( VAR_2 . y ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_4 , 0 ) ; } }\n"}
{"problem": "public void METHOD_1 ( ) { TYPE_1 . i ( VAR_1 , STRING_1 ) ; byte [ ] buffer = new byte [ INT_1 ] ; int VAR_2 ; while ( true ) { try { VAR_2 = VAR_3 . METHOD_2 ( buffer ) ; VAR_4 . METHOD_3 ( VAR_5 , VAR_2 , ( - 1 ) , buffer ) . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_6 ) { TYPE_1 . METHOD_5 ( VAR_1 , STRING_2 , VAR_6 ) ; METHOD_6 ( VAR_7 ) ; this . start ( ) ; break ; } } }\n", "fixed": "public void METHOD_1 ( ) { TYPE_1 . i ( VAR_1 , STRING_1 ) ; byte [ ] buffer = new byte [ INT_1 ] ; int VAR_2 ; while ( true ) { try { VAR_2 = VAR_3 . METHOD_2 ( buffer ) ; VAR_4 . METHOD_3 ( VAR_5 , VAR_2 , ( - 1 ) , buffer ) . METHOD_4 ( ) ; } catch ( java.io.IOException VAR_6 ) { TYPE_1 . METHOD_5 ( VAR_1 , STRING_2 , VAR_6 ) ; METHOD_6 ( VAR_7 ) ; break ; } } }\n"}
{"problem": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_2 . getName ( ) . METHOD_2 ( VAR_1 ) ) { return VAR_2 ; } } TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 ) ; VAR_4 . METHOD_3 ( this ) ; return VAR_4 ; }\n", "fixed": "private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_2 . getName ( ) . METHOD_2 ( VAR_1 ) ) { return VAR_2 ; } } TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 ) ; VAR_3 . add ( VAR_4 ) ; VAR_4 . METHOD_3 ( this ) ; return VAR_4 ; }\n"}
{"fixCommitSHA1": "0592e84a3c07b4451e81d2eecc0c51af384858d2", "projectName": "alibaba.dubbo", "bugType": "Change Identifier Used", "problem": "             new LinkedBlockingQueue<Runnable>(100),\n             new NamedThreadFactory(\"Close-ExecutorService-Timer\", true));\n    public static boolean isShutdown(Executor executor) {\n         if (executor instanceof ExecutorService) {\n            if (((ExecutorService) executor).isShutdown()) {\n                 return true;\n             }\n         }", "fixed": "             new LinkedBlockingQueue<Runnable>(100),\n             new NamedThreadFactory(\"Close-ExecutorService-Timer\", true));\n    public static boolean isTerminated(Executor executor) {\n         if (executor instanceof ExecutorService) {\n            if (((ExecutorService) executor).isTerminated()) {\n                 return true;\n             }\n         }", "sourceBeforeFix": "((ExecutorService)executor).isShutdown()", "sourceAfterFix": "((ExecutorService)executor).isTerminated()"}
{"problem": "private void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( new java.io.FileInputStream ( new java.io.File ( ( ( VAR_2 ) + ( VAR_3 ) ) ) ) ) ; super . VAR_4 = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_5 ) { VAR_5 . METHOD_4 ( ) ; } }\n", "fixed": "private boolean METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( new java.io.FileInputStream ( new java.io.File ( ( ( VAR_2 ) + ( VAR_3 ) ) ) ) ) ; super . VAR_4 = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_1 . METHOD_3 ( ) ; } catch ( java.lang.Exception VAR_5 ) { return false ; } return true ; }\n"}
{"fixCommitSHA1": "fd2bf7d972c703a603f7ec043b96649347f7e184", "projectName": "facebook.presto", "bugType": "Change Numeric Literal", "problem": "         httpClientBinder(binder).bindHttpClient(\"memoryManager\", ForMemoryManager.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n                    config.setIdleTimeout(new Duration(2, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });", "fixed": "         httpClientBinder(binder).bindHttpClient(\"memoryManager\", ForMemoryManager.class)\n                 .withTracing()\n                 .withConfigDefaults(config -> {\n                    config.setIdleTimeout(new Duration(30, SECONDS));\n                     config.setRequestTimeout(new Duration(10, SECONDS));\n                 });", "sourceBeforeFix": "new Duration(2,SECONDS)", "sourceAfterFix": "new Duration(30,SECONDS)"}
{"fixCommitSHA1": "ab0eb48e45f11661ce366001c80eb2dcdabc89ac", "projectName": "apache.camel", "bugType": "Less Specific If", "problem": "     }\n     public synchronized ProcessorType getLastInterceptedNode() {\n        if (routeList == null) {\n             return null;\n         }\n         return routeList.get(routeList.size() - 1);", "fixed": "     }\n     public synchronized ProcessorType getLastInterceptedNode() {\n        if (routeList == null || routeList.isEmpty()) {\n             return null;\n         }\n         return routeList.get(routeList.size() - 1);", "sourceBeforeFix": "routeList == null", "sourceAfterFix": "routeList == null || routeList.isEmpty()"}
{"problem": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . getText ( ) ; boolean VAR_4 = VAR_5 . METHOD_2 ( ) ; if ( ( VAR_2 . contains ( STRING_1 ) ) && ( VAR_2 . contains ( STRING_2 ) ) ) { c . METHOD_3 ( VAR_2 , VAR_6 . METHOD_2 ( ) , VAR_4 , VAR_3 , fail , VAR_7 ) ; } else { fail . setText ( STRING_3 ) ; new TYPE_2 ( fail , VAR_7 ) . start ( ) ; } }\n", "fixed": "public void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_3 . getText ( ) ; boolean VAR_4 = VAR_5 . METHOD_2 ( ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { c . METHOD_3 ( VAR_2 , VAR_6 . METHOD_2 ( ) , VAR_4 , VAR_3 , fail , VAR_7 ) ; } else { fail . setText ( STRING_3 ) ; new TYPE_2 ( fail , VAR_7 ) . start ( ) ; } }\n"}
{"problem": "public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { java.util.List < TYPE_3 < TYPE_1 > > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 , INT_1 ) ; if ( ( VAR_2 . isEmpty ( ) ) || ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) <= 0 ) ) { throw new TYPE_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; } return VAR_2 . get ( 0 ) . METHOD_4 ( ) ; }\n", "fixed": "protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { java.util.List < TYPE_3 < TYPE_1 > > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 , INT_1 ) ; if ( ( VAR_2 . isEmpty ( ) ) || ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) <= 0 ) ) { throw new TYPE_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; } return VAR_2 . get ( 0 ) . METHOD_4 ( ) ; }\n"}
{"problem": "public int METHOD_1 ( ) { try { return ( ( ( ( VAR_1 ) == ( VAR_2 . parameters ) ) && ( ! ( parameters . METHOD_2 ( VAR_3 ) ) ) ) && ( VAR_4 . METHOD_3 ( VAR_3 ) ) ) && ( VAR_4 . METHOD_4 ( VAR_3 ) ) ? ( ( int ) ( VAR_4 . METHOD_5 ( VAR_3 ) ) ) + 1 : 1 ; } catch ( TYPE_1 VAR_5 ) { assert false ; return 1 ; } }\n", "fixed": "public int METHOD_1 ( ) { try { return ( ( ( ( ( VAR_1 ) == ( VAR_2 . parameters ) ) && ( ! ( parameters . METHOD_2 ( VAR_3 ) ) ) ) && ( ( VAR_4 ) != null ) ) && ( VAR_4 . METHOD_3 ( VAR_3 ) ) ) && ( VAR_4 . METHOD_4 ( VAR_3 ) ) ? ( ( int ) ( VAR_4 . METHOD_5 ( VAR_3 ) ) ) + 1 : 1 ; } catch ( TYPE_1 VAR_5 ) { assert false ; return 1 ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getIntent ( ) . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_5 ( VAR_5 ) ) ) ; VAR_4 . METHOD_6 ( new TYPE_3 ( ) { public void METHOD_7 ( android.view.View VAR_6 ) { TYPE_4 . METHOD_8 ( VAR_7 this ) ; } } ) ; METHOD_9 ( ) ; TYPE_5 . METHOD_10 ( this ) ; }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 = getIntent ( ) . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) METHOD_3 ( ) ; METHOD_4 ( VAR_3 ) ; VAR_4 = ( ( TYPE_2 ) ( METHOD_5 ( VAR_5 ) ) ) ; METHOD_9 ( ) ; TYPE_5 . METHOD_10 ( this ) ; }\n"}
{"problem": "public void METHOD_1 ( java.lang.String VAR_1 ) { java.io.File file = METHOD_2 ( ) ; if ( file != null ) { if ( ! ( file . METHOD_3 ( ) ) ) file = file . METHOD_4 ( ) ; METHOD_5 ( new java.io.File ( file , VAR_1 ) ) ; } else { VAR_2 = VAR_1 ; } }\n", "fixed": "public void METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 == null ) { VAR_2 = null ; METHOD_5 ( null ) ; } else { java.io.File file = METHOD_2 ( ) ; if ( file != null ) { if ( ! ( file . METHOD_3 ( ) ) ) file = file . METHOD_4 ( ) ; METHOD_5 ( new java.io.File ( file , VAR_1 ) ) ; } else { VAR_2 = VAR_1 ; } } }\n"}
{"fixCommitSHA1": "43f93d014c6cf42847ba88fe67dc2d7237bbfb4b", "projectName": "square.okhttp", "bugType": "Change Numeric Literal", "problem": "     assertThat(cookie.getCommentURL()).isNull();\n     assertThat(cookie.getDiscard()).isFalse();\n    assertThat((double) cookie.getMaxAge()).isCloseTo(60.0, offset(1.0));\n     assertThat(cookie.getPath()).isEqualTo(\"/path\");\n     assertThat(cookie.getSecure()).isTrue();\n   }", "fixed": "     assertThat(cookie.getCommentURL()).isNull();\n     assertThat(cookie.getDiscard()).isFalse();\n    assertThat((double) cookie.getMaxAge()).isCloseTo(60.0, offset(5.0));\n     assertThat(cookie.getPath()).isEqualTo(\"/path\");\n     assertThat(cookie.getSecure()).isTrue();\n   }", "sourceBeforeFix": "offset(1.0)", "sourceAfterFix": "offset(5.0)"}
{"name": "HANOI.java", "problem": "public static List<Pair<Integer,Integer>> hanoi(int height, int start, int end) { ArrayList<Pair<Integer,Integer>> steps = new ArrayList<Pair<Integer,Integer>>(); if (height > 0) { PriorityQueue<Integer> crap_set = new PriorityQueue<Integer>(); crap_set.add(1); crap_set.add(2); crap_set.add(3); crap_set.remove(start); crap_set.remove(end); int helper = crap_set.poll(); steps.addAll(hanoi(height-1, start, helper)); steps.add(new Pair<Integer,Integer>(start, helper)); steps.addAll(hanoi(height-1, helper, end)); } return steps; } public static class Pair<F, S> { private F first; private S second; public Pair(F first, S second) { this.first = first; this.second = second; } public void setFirst(F first) { this.first = first; } public void setSecond(S second) { this.second = second; } public F getFirst() { return first; } public S getSecond() { return second; } @Override public String toString() { return \"(\" + String.valueOf(first) + \", \" + String.valueOf(second) + \")\"; } } }", "fixed": "public static List<Pair<Integer,Integer>> hanoi(int height, int start, int end) { ArrayList<Pair<Integer,Integer>> steps = new ArrayList<Pair<Integer,Integer>>(); if (height > 0) { PriorityQueue<Integer> crap_set = new PriorityQueue<Integer>(); crap_set.add(1); crap_set.add(2); crap_set.add(3); crap_set.remove(start); crap_set.remove(end); int helper = crap_set.poll(); steps.addAll(hanoi(height-1, start, helper)); steps.add(new Pair<Integer,Integer>(start, end)); steps.addAll(hanoi(height-1, helper, end)); } return steps; } public static class Pair<F, S> { private F first; private S second; public Pair(F first, S second) { this.first = first; this.second = second; } public void setFirst(F first) { this.first = first; } public void setSecond(S second) { this.second = second; } public F getFirst() { return first; } public S getSecond() { return second; } @Override public String toString() { return \"(\" + String.valueOf(first) + \", \" + String.valueOf(second) + \")\"; } } }", "hint": "Towers of Hanoi\nhanoi\nAn algorithm for solving the Towers of Hanoi puzzle.  Three pegs exist, with a stack of differently-sized", "input": [1, 1, 3], "output": [[1, 3]]}
{"problem": "public TYPE_1 METHOD_1 ( TYPE_1 state , TYPE_2 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_2 = state . METHOD_3 ( VAR_2 ) ; state = state . METHOD_4 ( this , VAR_1 , VAR_2 ) ; } return state ; }\n", "fixed": "public TYPE_1 METHOD_1 ( TYPE_1 state , TYPE_2 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( VAR_2 != VAR_1 ) { VAR_2 = state . METHOD_3 ( VAR_2 ) ; state = state . METHOD_4 ( this , VAR_1 , VAR_2 ) ; } return state ; }\n"}
{"fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba", "projectName": "antlr.antlr4", "bugType": "Change Numeric Literal", "problem": " \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");", "fixed": " \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");", "sourceBeforeFix": "new StringBuilder(561)", "sourceAfterFix": "new StringBuilder(560)"}
{"problem": "public double get ( int VAR_1 , int VAR_2 ) { if ( ( VAR_3 . length ) <= ( VAR_1 + 1 ) ) { return 0 ; } int index = TYPE_1 . METHOD_1 ( VAR_4 , VAR_3 [ VAR_1 ] , VAR_3 [ ( VAR_1 + 1 ) ] , VAR_2 ) ; if ( index >= 0 ) return VAR_5 [ index ] ; else return 0 ; }\n", "fixed": "public double get ( int VAR_1 , int VAR_2 ) { int index = TYPE_1 . METHOD_1 ( VAR_4 , VAR_3 [ VAR_1 ] , VAR_3 [ ( VAR_1 + 1 ) ] , VAR_2 ) ; if ( index >= 0 ) return VAR_5 [ index ] ; else return 0 ; }\n"}
{"fixCommitSHA1": "042b972a5853424d39be1cb76f2710d4bc3380e0", "projectName": "google.closure-compiler", "bugType": "Change Modifier", "problem": "   \n  private final PassFactory removeUnusedPrototypeProperties =\n       new PassFactory(\"removeUnusedPrototypeProperties\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "fixed": "   \n  final PassFactory removeUnusedPrototypeProperties =\n       new PassFactory(\"removeUnusedPrototypeProperties\", false) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {", "sourceBeforeFix": "18", "sourceAfterFix": "16"}
{"problem": "public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_3 ( ) ; try { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( false ) ; } } catch ( TYPE_1 VAR_4 ) { METHOD_5 ( ) ; } }\n", "fixed": "public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_2 . METHOD_3 ( ) ; try { if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_4 ( false ) ; } } catch ( TYPE_1 VAR_4 ) { METHOD_5 ( ) ; } }\n"}
{"problem": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String str = STRING_1 ; try { METHOD_2 ( VAR_1 , STRING_2 ) ; do { str = METHOD_3 ( VAR_1 ) ; if ( ! ( str . toLowerCase ( ) . equals ( STRING_3 ) ) ) { VAR_2 . METHOD_4 ( str ) ; } } while ( ! ( str . toLowerCase ( ) . equals ( STRING_3 ) ) ) ; } catch ( java.io.IOException VAR_3 ) { VAR_2 . METHOD_5 ( STRING_4 ) ; VAR_3 . METHOD_6 ( ) ; } }\n", "fixed": "protected void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String str = STRING_1 ; try { do { str = METHOD_3 ( VAR_1 ) ; if ( ! ( str . toLowerCase ( ) . equals ( STRING_3 ) ) ) { VAR_2 . METHOD_4 ( str ) ; } } while ( ! ( str . toLowerCase ( ) . equals ( STRING_3 ) ) ) ; } catch ( java.io.IOException VAR_3 ) { VAR_2 . METHOD_5 ( STRING_4 ) ; VAR_3 . METHOD_6 ( ) ; } }\n"}
{"problem": "public static java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( ) ; VAR_4 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 . toLowerCase ( ) . METHOD_4 ( ) , VAR_2 , ( ( VAR_1 . length ( ) ) - 1 ) ) ; return VAR_3 ; }\n", "fixed": "public static java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { VAR_3 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 . toLowerCase ( ) . METHOD_4 ( ) , VAR_2 , ( ( VAR_1 . length ( ) ) - 1 ) ) ; return VAR_3 ; }\n"}
{"fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa", "projectName": "wildfly.wildfly", "bugType": "Change Numeric Literal", "problem": "      *\n      * @return the message.\n      */\n    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n     /**", "fixed": "      *\n      * @return the message.\n      */\n    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n     /**", "sourceBeforeFix": "id=15847", "sourceAfterFix": "id=10847"}
{"problem": "private static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 ) { final TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 . METHOD_2 ( ) ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; final TYPE_1 VAR_4 = new TYPE_1 ( VAR_1 . METHOD_5 ( ) , VAR_3 ) ; return VAR_4 ; }\n", "fixed": "private static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 ) { final TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 . METHOD_2 ( ) ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; return new TYPE_1 ( VAR_1 . METHOD_5 ( ) , VAR_3 ) ; }\n"}
