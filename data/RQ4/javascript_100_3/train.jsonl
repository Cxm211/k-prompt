{"id": "/data/all/data/aputinski/react-navigation-controller", "bugType": "prefer-spread", "problem": "  pushView() {\n    this.__pushView.apply(this, arguments);\n  }", "fixed": "  pushView() {\n    this.__pushView(...arguments);\n  }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/dnknth/ldap-ui", "bugType": "no-invalid-this", "problem": "                 : this.getOc( this.newEntry.objectClass).must.map( function( c) {\n                     return this.getAttr( c).name;\n                 });\n        },", "fixed": "                 : this.getOc( this.newEntry.objectClass).must.map( function( c) {\n                     return app.getAttr( c).name;\n            });\n        },", "message": "Unexpected 'this'."}
{"id": "/data/all/data/jfroelich/rss-reader", "bugType": "no-invalid-this", "problem": "}(this));", "fixed": "  return STATUS_OK;\n}", "message": "Unexpected 'this'."}
{"id": "/data/all/data/FredHutch/Oncoscape", "bugType": "no-debugger", "problem": "                    ).then(function(response){\n                        debugger;\n                        vm.molecular = response.data", "fixed": "                    ).then(function(response){\n                        vm.molecular = response.data", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/alice-em/wonder-reader", "bugType": "no-console", "problem": "  if ( isThere(bookmark) ) {\n    var obj = jsonfile.readFileSync(bookmark);\n    console.log(obj[baseName]);\n    if (obj[baseName] != undefined) { ", "fixed": "  if ( isThere(bookmark) ) {\n    obj = jsonfile.readFileSync(bookmark);\n    \n    if (obj[baseName] != undefined) { ", "message": "Unexpected console statement."}
{"id": "/data/all/data/anstosa/Minimalist-Everything", "bugType": "no-undef", "problem": "function buildOptions(moduleIndex) {\n    debug('Loading options page for ' + modules[moduleIndex].name + '...');\n    var options = modules[moduleIndex].options,", "fixed": "function buildOptions(moduleIndex) {\n    console.debug('Loading options page for ' + modules[moduleIndex].name + '...');\n    var options = modules[moduleIndex].options,", "message": "Undefined variable."}
{"id": "/data/all/data/girder/girder", "bugType": "no-undef", "problem": "                    apiKey.destroy().on('g:deleted', function () {\n                        girder.events.trigger('g:alert', {\n                            icon: 'ok',", "fixed": "                    apiKey.destroy().on('g:deleted', function () {\n                        events.trigger('g:alert', {\n                            icon: 'ok',", "message": "Undefined variable."}
{"id": "/data/all/data/attester/attester", "bugType": "no-process-exit", "problem": "        logger.logError(\"Unable to parse configuration file %s : %s\", [configFile, e]);\r\n        return process.exit(1);\r\n    }\r", "fixed": "        logger.logError(\"Unable to parse configuration file %s : %s\", [configFile, e]);\r\n        return false;\r\n    }\r", "message": "Don't use process.exit(); throw an error instead."}
{"id": "/data/all/data/Heigvd/Wegas", "bugType": "no-invalid-this", "problem": "                                    this.showMessage(\"error\", \"Error while saving script\");\n                                }, this)\n                            }\n                        });", "fixed": "                                    this.showMessage(\"error\", \"Error while saving script\");\n                                }\n                            }, this)\n                        });", "message": "Unexpected 'this'."}
{"id": "/data/all/data/assetgraph/assetgraph", "bugType": "no-inner-declarations", "problem": "            var stack = [],\n                errors = [];\n            function extractStringNodes(arrayOrStringOrObjectAst, errorMessage) {\n                var stringNodes = [];\n                if (arrayOrStringOrObjectAst[0] === 'string') {", "fixed": "            stack = [],\n            errors = [];\n        function extractStringNodes(arrayOrStringOrObjectAst, errorMessage) {\n            var stringNodes = [];\n            if (arrayOrStringOrObjectAst[0] === 'string') {", "message": "Move function declaration to function body root."}
{"id": "/data/all/data/CodeboxIDE/codebox", "bugType": "no-console", "problem": "    if(!url) {\n        console.error(\"cb.events.webhook requires a webhook url (WEBHOOK_URL) to work\");\n        return register(null, {});", "fixed": "    if(!url) {\n        logger.error(\"requires a webhook url (WEBHOOK_URL) to work\");\n        return register(null, {});", "message": "Unexpected console statement."}
{"id": "/data/all/data/handshake-org/hsd", "bugType": "no-redeclare", "problem": "        var v4 = stack[stack.length - 4];\n        var v3 = stack[stack.length - 3];\n        var v2 = stack[stack.length - 2];\n        var v1 = stack[stack.length - 1];\n        stack[stack.length - 4] = v2;", "fixed": "        v4 = stack[stack.length - 4];\n        v3 = stack[stack.length - 3];\n        v2 = stack[stack.length - 2];\n        v1 = stack[stack.length - 1];\n        stack[stack.length - 4] = v2;", "message": "Redeclaring variable."}
{"id": "/data/all/data/apache/shindig", "bugType": "no-invalid-this", "problem": "    context.rpcRegister('gadgets.selection.register', function(rpcArgs) {\n      listeningGadgets[this.f] = 1;\n    });", "fixed": "    context.rpcRegister('gadgets.selection.register', function(rpcArgs) {\n      listeningGadgets[rpcArgs.f] = 1;\n    });", "message": "Unexpected 'this'."}
{"id": "/data/all/data/requirejs/r.js", "bugType": "no-debugger", "problem": "        load: function (name, req, load, config) {\ndebugger;\n            req([parse(name).choice], function (value) {", "fixed": "        load: function (name, req, load, config) {\n            req([parse(name).choice], function (value) {", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/cjohansen/validatious", "bugType": "no-undef", "problem": "  add: function(obj) {\n    v2.Interface.ensure(obj, [v2.Composite, v2.FormItem]);\n    this.__validators.push(obj);", "fixed": "  add: function(obj) {\n    \n    this.__validators.push(obj);", "message": "Undefined variable."}
{"id": "/data/all/data/EdgeApp/edge-core-js", "bugType": "no-invalid-this", "problem": "addRoute('POST', '/api/v1/account/carepackage/get', function (req) {\n  if (!this.db.userId || this.db.userId !== req.body['l1']) {\n    return makeErrorResponse(errorCodes.noAccount)", "fixed": "addRoute('POST', '/api/v1/account/carepackage/get', function (req) {\n  if (req.body.l1 == null || req.body.l1 !== this.db.userId) {\n    return makeErrorResponse(errorCodes.noAccount)", "message": "Unexpected 'this'."}
{"id": "/data/all/data/brave/ethereum-remote-client", "bugType": "no-dupe-keys", "problem": "      fromCurrency: selectedToken || primaryCurrency,\n      conversionRate: amountConversionRate,\n    },", "fixed": "      fromCurrency: selectedToken || primaryCurrency,\n    },", "message": "Duplicate key 'conversionRate'."}
{"id": "/data/all/data/messageformat/messageformat", "bugType": "no-case-declarations", "problem": "          case '.pro':\n          case '.properties':\n            const raw = fs.readFileSync(fn);\n            const src = raw.toString(uv(raw) ? 'utf8' : 'latin1');", "fixed": "          case '.pro':\n          case '.properties': {\n            const raw = fs.readFileSync(fn);\n            const src = raw.toString(uv(raw) ? 'utf8' : 'latin1');", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/maierfelix/poxi", "bugType": "no-invalid-this", "problem": "  };\n  this.clearLatestTileBatch();\n  if (batch.length) this.finalizeBatchOperation();\n};", "fixed": "  };\n  this.finalizeBatchOperation();\n};", "message": "Unexpected 'this'."}
{"id": "/data/all/data/benpickles/js-model", "bugType": "no-extra-semi", "problem": "        callbacks[i].apply(this, data || []);\n      };\n    };", "fixed": "        callbacks[i].apply(this, data || []);\n      }\n    }", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/jonmiles/react-bootstrap-treeview", "bugType": "no-invalid-this", "problem": "                                visible={true}\n                                options={this.props} />);\n      }, this));\n    }", "fixed": "                                visible={true}\n                                options={_this.props} />);\n      });\n    }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/pouchdb/pouchdb", "bugType": "no-caller", "problem": "window.Pouch = function(name, opts, callback) {\n  if (!(this instanceof arguments.callee)) {\n    return new Pouch(name, opts, callback);", "fixed": "window.Pouch = function Pouch(name, opts, callback) {\n  if (!(this instanceof Pouch)) {\n    return new Pouch(name, opts, callback);", "message": "Avoid arguments.callee."}
{"id": "/data/all/data/christkv/mongodb-schema-simulator", "bugType": "comma-style", "problem": "  this.queue.insertOne({\n      name: this.name\n    , startTime: null\n    , endTime: null\n    , createdOn: new Date()", "fixed": "  \n  this.queue.insertOne({\n      startTime: null\n    , endTime: null\n    , createdOn: new Date()", "message": "',' should be placed last."}
{"id": "/data/all/data/bpowers/sd.js", "bugType": "no-undef", "problem": "define(['./util', './vars', './common'], function(util, vars, common) {\n    const shadowPaper = Snap(1, 1, '#shadow-svg');\n    var AUX_RADIUS = 9;", "fixed": "define(['./util', './vars', './common'], function(util, vars, common) {\n    var AUX_RADIUS = 9;", "message": "Undefined variable."}
{"id": "/data/all/data/YahooArchive/end-to-end", "bugType": "no-invalid-this", "problem": "      case constants.Actions.GET_SELECTED_CONTENT:\n        this.helperProxy_.getSelectedContent(callback, errorCallback);\n        break;", "fixed": "      case constants.Actions.GET_SELECTED_CONTENT:\n        this.helperProxy_.getSelectedContent(nullFunction, nullFunction);\n        break;", "message": "Unexpected 'this'."}
{"id": "/data/all/data/philtoms/mithril-starter-kit", "bugType": "no-debugger", "problem": "describe('model.persistence', function() {\n  debugger\n\tvar model = require('../model');", "fixed": "describe('model.persistence', function() {\n\tvar model = require('../model');", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/primus/eventemitter3", "bugType": "comma-style", "problem": "var EventEmitter2 = require('eventemitter2').EventEmitter2\n  , EventEmitter3 = require('../../').EventEmitter\n  , EventEmitter1 = require('events').EventEmitter;", "fixed": "var EventEmitter3 = require('../../').EventEmitter\n  , EventEmitter1 = require('events').EventEmitter;", "message": "',' should be placed last."}
{"id": "/data/all/data/mozilla/pdf.js", "bugType": "no-redeclare", "problem": "      var columns = this.columns;\n      for (var i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {", "fixed": "      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/burris/dwr", "bugType": "no-new-object", "problem": "var DWRActionUtil = {\n  execute : function(action, values, callbackObjOrName, displayMessage) {\n    var params= new Object();\n    if (this.isElement(values)) {\n      var element = $(values);", "fixed": "var DWRActionUtil = {\n  execute : function(action, values, callbackObjOrName) {\n    var params = {};\n    if (DWRActionUtil.isElement(values)) {\n      var element = $(values);", "message": "The object literal notation {} is preferrable."}
{"id": "/data/all/data/madebywild/konterball", "bugType": "no-case-declarations", "problem": "        this.emitter.emit(EVENT.EXIT_BUTTON_PRESSED);\n        break;\n      case 'google':\n        let googleUrl = 'https:\n        googleUrl += encodeURIComponent('http:", "fixed": "        this.emitter.emit(EVENT.EXIT_BUTTON_PRESSED);\n        break;\n      case 'google': {\n        let googleUrl = 'https:\n        googleUrl += encodeURIComponent('http:", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/jfroelich/rss-reader", "bugType": "no-unused-vars", "problem": "    request.onsuccess = resolve;\n    request.onerror = _ => reject(request.error);\n  });", "fixed": "    request.onsuccess = resolve;\n    request.onerror = () => reject(request.error);\n  });", "message": "Unused variable."}
{"id": "/data/all/data/matryx/MatryxPlatform", "bugType": "no-undef", "problem": "token.approve(MatryxPlatform.address, 100*10**18)\ntoken.mint(MatryxPlatform.address, 100*10*18)", "fixed": "token.approve(MatryxPlatform.address, 100*10**18)\nplatform.createPeer({gasLimit: 4000000})", "message": "Undefined variable."}
{"id": "/data/all/data/wejs/we", "bugType": "no-process-exit", "problem": "    if ( err ) we.log.error('Error:', err);\n    we.exit(function(){ process.exit(); });\n  }", "fixed": "    if ( err ) we.log.error('Error:', err);\n    we.exit(process.exit);\n  }", "message": "Don't use process.exit(); throw an error instead."}
{"id": "/data/all/data/RubyLouvre/avalon", "bugType": "no-unused-vars", "problem": "    var filtersStr = \"\"\n    var filters = input.map(function (str) {", "fixed": "  \n    var filters = input.map(function (str) {", "message": "Unused variable."}
{"id": "/data/all/data/onigoetz/Comics-Reader", "bugType": "no-unsafe-negation", "problem": "    function preloadPane(index, where) {\n        if (!index in images) return; ", "fixed": "    function preloadPane(index, where) {\n        if (!(index in images)) return; ", "message": "Unexpected negating the left operand of 'in' operator."}
{"id": "/data/all/data/yacut/tester", "bugType": "no-undef", "problem": "      return null;\n    }\n    if (extEditor.gutter !== null) {\n      this.removeGutter(textEditor);", "fixed": "      return null;\n    }\n    if (textEditor.gutter !== null) {\n      this.removeGutter(textEditor);", "message": "Undefined variable."}
{"id": "/data/all/data/BabylonJS/Editor", "bugType": "no-debugger", "problem": "                if (!actionManager) {\n                    debugger;\n                    return;", "fixed": "                if (!actionManager) {\n                    return;", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/Kooboo/Kooboo", "bugType": "no-invalid-this", "problem": "        ) {\n          this.children.push(new elemModel(el, self.depth + 1));\n        }", "fixed": "        ) {\n          _this.children.push(new elemModel(el, _this.depth + 1));\n        }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/reelyactive/json-silo", "bugType": "no-unused-vars", "problem": "SiloManager.prototype.reelyActiveRegister = function(token, callback) {\n  ", "fixed": "SiloManager.prototype.reelyActiveRegister = function(callback) {\n  ", "message": "Unused variable."}
{"id": "/data/all/data/agoric-labs/PlaygroundVat", "bugType": "no-undef", "problem": "  }\n  const manager = makeRemoteManager(myVatID, leaderHostID, isLeader,\n                                    managerWriteInput, managerWriteOutput,", "fixed": "  }\n  const manager = makeRemoteManager(myVatID, myHostID,\n                                    managerWriteInput, managerWriteOutput,", "message": "Undefined variable."}
{"id": "/data/all/data/blacktail/real-edit", "bugType": "no-undef", "problem": "\t\t\tconsole.log('operationTransform: ', JSON.stringify(wantChange), ' based ', JSON.stringify(baseChange));\r\n\t\t\tvar changes = [];\r\n\t\t\t\tnewChange = _.clone(wantChange);\r\n\r", "fixed": "\t\t\tconsole.log('operationTransform: ', JSON.stringify(wantChange), ' based ', JSON.stringify(baseChange));\r\n\t\t\tvar changes = [],\r\n\t\t\t\tnewChange = _.clone(wantChange);\r\n\r", "message": "Undefined variable."}
{"id": "/data/all/data/cornerstonejs/cornerstoneWADOImageLoader", "bugType": "no-dupe-keys", "problem": "        studyInstanceUID: dataSet.string('x0020000d'),\n        seriesInstanceUID: dataSet.string('x0020000e'),\n        seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),", "fixed": "        studyInstanceUID: dataSet.string('x0020000d'),\n        seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),", "message": "Duplicate key 'seriesInstanceUID'."}
{"id": "/data/all/data/insin/newforms", "bugType": "prefer-rest-params", "problem": "{\n    RegexValidator.apply(this, arguments);\n}", "fixed": "{\n    RegexValidator.call(this, regex, message, code);\n}", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/NetEaseGame/Sentry", "bugType": "no-unused-vars", "problem": "import React from \"react\";\nimport moment from \"moment\";\nimport DateTimeInput from \"../../components/dateTimeInput\";", "fixed": "import React from \"react\";\nimport DateTimeInput from \"../../components/dateTimeInput\";", "message": "Unused variable."}
{"id": "/data/all/data/nodeGame/nodegame-client", "bugType": "no-debugger", "problem": "       \n        if (node.nodename === 'bot2000' && type === 'stageLevel' && update.stageLevel === 100) debugger\n        if (this.shouldPublishUpdate(type, update)) {", "fixed": "       \n        if (this.shouldPublishUpdate(type, update)) {", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/thisables/curry", "bugType": "prefer-spread", "problem": "  return curryN.apply(undefined, [fn, 2].concat(args));\n};", "fixed": "  return curry(fn, 2, args);\n};", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/Dash-Industry-Forum/dash.js", "bugType": "no-self-assign", "problem": "    function setSessionType(sessionType) {\n        sessionType = sessionType;\n    }", "fixed": "    function setSessionType(value) {\n        sessionType = value;\n    }", "message": "'sessionType' is assigned to itself."}
{"id": "/data/all/data/GrosSacASac/DOM99", "bugType": "no-unused-vars", "problem": "import {d, plugin, options, createElement2} from \"../../source/dom99.js\";", "fixed": "import * as d  from \"../../source/dom99.js\";", "message": "Unused variable."}
{"id": "/data/all/data/lyrgard/ffbeEquip", "bugType": "guard-for-in", "problem": "    var first = true;\n    for (var index in items) {\n        var item = items[index]\n        if (first) {", "fixed": "    var first = true;\n    Object.entries(espers).forEach(entry => {\n        if (first) {", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/wellcometrust/wellcomecollection.org", "bugType": "no-unused-vars", "problem": "import React from 'react';\nimport cssGridClasses from '../../../filters/css-grid-classes';", "fixed": "import cssGridClasses from '../../../filters/css-grid-classes';", "message": "Unused variable."}
{"id": "/data/all/data/streetmix/streetmix", "bugType": "no-global-assign", "problem": "        if (data.status === 410) {\n          mode = MODES.STREET_410_BUT_LINK_TO_USER \n        } else {", "fixed": "        if (data.status === 410) {\n          setMode(MODES.STREET_410_BUT_LINK_TO_USER)\n        } else {", "message": "Read-only global 'mode' should not be modified."}
{"id": "/data/all/data/rackerlabs/blueflood", "bugType": "no-invalid-this", "problem": "                                var e = results.data[i];\n                                if(this.useGraphite){\n                                    list.push({", "fixed": "                                var e = results.data[i];\n                                \n                                    list.push({", "message": "Unexpected 'this'."}
{"id": "/data/all/data/johansatge/vuplicity", "bugType": "no-invalid-this", "problem": "            evt.preventDefault();\n            actionCallback('select-backup-path', id, _getCurrentData.apply(this));\n        };", "fixed": "            evt.preventDefault();\n            actionCallback('select-backup-path', id);\n        };", "message": "Unexpected 'this'."}
{"id": "/data/all/data/misoproject/d3.chart", "bugType": "prefer-rest-params", "problem": "\tthis._events = {};\n\tinitCascade.call(this, this, Array.prototype.slice.call(arguments, 1));\n};", "fixed": "\tthis._events = {};\n\tinitCascade.call(this, this, [chartOptions]);\n};", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/avanes/postcss-color-alpha", "bugType": "no-useless-escape", "problem": "var messageHelpers = require(\"postcss-message-helpers\");\nvar HEX_A_RE = /#(([0-9a-f]{3}|[0-9a-f]{6})\\ (0?\\.\\d+))\\b/i;\nvar BW_RE    = /\\b(black|white)\\((0?\\.\\d+)\\)/i;", "fixed": "var messageHelpers = require(\"postcss-message-helpers\");\nvar HEX_A_RE = /#(([0-9a-f]{3}|[0-9a-f]{6})(\\.\\d+))\\b/i;\nvar BW_RE    = /\\b(black|white)\\((0?\\.\\d+)\\)/i;", "message": "Unnecessary escape character."}
{"id": "/data/all/data/SheetJS/sheetjs", "bugType": "no-throw-literal", "problem": "\tl -= blob.l;\n\tif(cb !== l) throw \"Malformed AddinUdf: padding = \" + l + \" != \" + cb;\n\tblob.l += cb;", "fixed": "\tl -= blob.l;\n\tif(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n\tblob.l += cb;", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/ripple/ripple-lib", "bugType": "no-invalid-this", "problem": "  assert(this.trusted);   \n  this.request({ 'command' : 'ledger_closed' }, onDone, onFailure);\n});", "fixed": "  assert(this.trusted);   \n  this.request({ 'command' : 'ledger_closed' }, onDone, onFailure);\n};", "message": "Unexpected 'this'."}
{"id": "/data/all/data/d3/d3-shape", "bugType": "no-extra-semi", "problem": "  return new Basis(context);\n};", "fixed": "  return new Basis(context);\n}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/redux-saga/redux-saga", "bugType": "no-throw-literal", "problem": "  function* genChild() {\n    throw 'gen error'\n  }", "fixed": "  function* genChild() {\n    throw new Error('gen error')\n  }", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/rossengeorgiev/habitat-mobile-tracker", "bugType": "no-redeclare", "problem": "        if(j > data_ref.data.length / 2) {\n            for(var i = data_ref.data.length - 1; i > j; i--) null_count += (data_ref.data[i][1] == null) ? 1 : 0;\n            null_count = data_ref.nulls - null_count * 2;", "fixed": "        if(j > data_ref.data.length / 2) {\n            for(i = data_ref.data.length - 1; i > j; i--) null_count += (data_ref.data[i][1] === null) ? 1 : 0;\n            null_count = data_ref.nulls - null_count * 2;", "message": "Redeclaring variable."}
{"id": "/data/all/data/svaarala/duktape", "bugType": "no-empty", "problem": "    if (isPlainBuffer(b)) {\n    } else if (Object.prototype.toString.call(b) === '[object ArrayBuffer]') {\n        slice_start = 0;", "fixed": "    if (isPlainBuffer(b)) {\n        slice_start = 0;", "message": "Empty block statement."}
{"id": "/data/all/data/hundredrabbits/Ronin", "bugType": "no-undef", "problem": "    if(!ronin.surface.layers[layer_name]){\n      this.add_layer(new Layer(name));\n    }", "fixed": "    if(!ronin.surface.layers[layer_name]){\n      this.add_layer(new Layer(layer_name));\n    }", "message": "Undefined variable."}
{"id": "/data/all/data/angular-ui/ui-grid", "bugType": "guard-for-in", "problem": "                var width = 0;\n                for (var i in cols) {\n                  var col = cols[i];", "fixed": "                var width = 0;\n                for (var i = 0; i < cols.length; i++) {\n                  var col = cols[i];", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/amhab/StressThing", "bugType": "no-empty", "problem": "  var jsondata = JSON.parse(rawdata);\n  if (type == 0) {} else {}\n  return jsondata;", "fixed": "  var jsondata = JSON.parse(rawdata);\n  return jsondata;", "message": "Empty block statement."}
{"id": "/data/all/data/littleuniversestudios/angular-cli-tools", "bugType": "no-unused-vars", "problem": "var versionCommands = require('../commands/version/version');\nvar helpCommands = require('../commands/help/help');\nvar generateCommands = require('./generate-commands');", "fixed": "var versionCommands = require('../commands/version/version');\nvar generateCommands = require('./generate-commands');", "message": "Unused variable."}
{"id": "/data/all/data/qmlweb/qmlweb", "bugType": "no-extra-bind", "problem": "    this.autoPlayChanged.connect(this, (function(newVal) {\n      domVideo.autoplay = newVal;\n    }).bind(this));", "fixed": "    this.volume = this.impl.volume;\n    this.duration = this.impl.duration;", "message": "The function binding is unnecessary."}
{"id": "/data/all/data/generate/generate", "bugType": "no-invalid-this", "problem": "    it.skip('should re-init a specific question:', function(cb) {\n      this.timeout(20000);\n      app.question('a', 'b');", "fixed": "      app.disable('force')\n      app.question('a', 'b');", "message": "Unexpected 'this'."}
{"id": "/data/all/data/freegroup/draw2d", "bugType": "prefer-spread", "problem": "            \n            this.min = Math.min.apply(Math, data);\n            this.max = Math.max.apply(Math, data);\n        }", "fixed": "            \n            this.min = Math.min(...data);\n            this.max = Math.max(...data);\n        }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/alanshaw/grunt-markdown-pdf", "bugType": "comma-style", "problem": "var markdownpdf = require(\"markdown-pdf\")\n  , fs = require(\"fs\")\n  , path = require(\"path\")", "fixed": "var markdownpdf = require(\"markdown-pdf\")\n  , path = require(\"path\")", "message": "',' should be placed last."}
{"id": "/data/all/data/CircuitVerse/CircuitVerse", "bugType": "no-invalid-this", "problem": "        \n        var tooltipText = window[this.id].prototype.tooltipText || help[this.id];\n        if (!tooltipText) return;", "fixed": "        \n        var tooltipText = window[this.id].prototype.tooltipText;\n        if (!tooltipText) return;", "message": "Unexpected 'this'."}
{"id": "/data/all/data/aantthony/javascript-cas", "bugType": "no-throw-literal", "problem": "\t} else {\n\t\tthrow ('Unknown Type for NumericalReal ^');\n\t}", "fixed": "\t} else {\n\t\tthrow console.error ('Unknown Type for NumericalReal ^', x, x instanceof Expression.NumericalReal);\n\t}", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/iriscouch/static-plus", "bugType": "comma-style", "problem": "  , api = require('../api')\n  , auto = api.defaults({autostart:true, autostop:true, source:couch.DB, 'template':couch.simple_tmpl })\ncouch.setup(test)", "fixed": "  , api = require('../api')\ncouch.setup(test)", "message": "',' should be placed last."}
{"id": "/data/all/data/SitecorePowerShell/Console", "bugType": "no-useless-escape", "problem": "                    return '[[;lightgreen;]' + string + ']';\n                } else if (/([\\[])([a-zA-Z0-9\\-\\.\\+]*)([\\]])/g.test(string)) {\n                    return '[[;gray;]' + string + ']';\n                } else {", "fixed": "                    return '[[;lightgreen;]' + string + ']';\n                } else {", "message": "Unnecessary escape character."}
{"id": "/data/all/data/sequelize/sequelize", "bugType": "comma-style", "problem": "      , sql     = this.QueryGenerator.changeColumnQuery(tableName, options)\n      , self    = this\n    return queryAndEmit.call(this, sql, 'changeColumn')", "fixed": "      , sql     = this.QueryGenerator.changeColumnQuery(tableName, options)\n    return queryAndEmit.call(this, sql, 'changeColumn')", "message": "',' should be placed last."}
{"id": "/data/all/data/bentonam/fakeit", "bugType": "no-unreachable", "problem": "      throw new Error(`The archive option can't be used with ${option}`);\n      return;\n    }", "fixed": "      throw new Error(`The archive option can't be used with ${option}`);\n    }", "message": "Unreachable code."}
{"id": "/data/all/data/doronnahum/react-parse", "bugType": "no-empty", "problem": "        nextState = nextState.setIn(['documents', targetName], Map({data}));\n      }else{\n      }", "fixed": "        nextState = nextState.setIn(['documents', targetName], Map({data}));\n      }else{\n        nextState = nextState.mergeIn(['documents', targetName, 'data'], data);\n      }", "message": "Empty block statement."}
{"id": "/data/all/data/adopted-ember-addons/ember-electron", "bugType": "prefer-spread", "problem": "      try {\n        return requireAMD.apply(null, arguments);\n      } catch (e) {\n        if (e.toString().includes('Error: Could not find module')) {", "fixed": "      try {\n        return requireAMD(...arguments);\n      } catch(e) {\n        if (e.toString().includes('Error: Could not find module')) {", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/brianc/node-postgres", "bugType": "no-undef", "problem": "test('connection emits ECONNRESET errors during normal operation', function () {\n  var con = new Connection({stream: new MemoryStream()})", "fixed": "suite.test('connection emits ECONNRESET errors during normal operation', function (done) {\n  var con = new Connection({stream: new MemoryStream()})", "message": "Undefined variable."}
{"id": "/data/all/data/tes/bosco", "bugType": "no-extra-semi", "problem": "                return;\n            };\n            _.forOwn(staticAssets, function(bvalue, bkey) {", "fixed": "                return;\n            }\n            _.forOwn(staticAssets, function(bvalue, bkey) {", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/hex13/lupa", "bugType": "no-inner-declarations", "problem": "            }\n            function searchConfig(path) {\n                var filename = Path.join(path, 'lupaProject.json');\n                if (fs.existsSync(filename))\n                    return filename;", "fixed": "            }\n            if (!path) throw new Error('Lupa: couldn\\'t find config file for ' + config);", "message": "Move function declaration to function body root."}
{"id": "/data/all/data/preactjs/preact", "bugType": "no-cond-assign", "problem": "\t\thook(obj, ...args);\n\t} while (obj=obj._component);\n}", "fixed": "\t\thook(obj, ...args);\n\t} while ((obj=obj._component));\n}", "message": "Expected a conditional expression and instead saw an assignment."}
{"id": "/data/all/data/bswinnerton/launchbar-github", "bugType": "no-useless-escape", "problem": "    const ISSUE_OR_PR_FORMAT  = /^([^\\/]+)\\/([^\\/#]+)(?:\\/pull\\/|\\/issues\\/|#)(\\d+)$/;\n    const REPOSITORY_FORMAT   = /^([^\\/]+)\\/([^\\/#]+)?$/;\n    const COMMIT_SHA_FORMAT   = /^\\b[0-9a-f]{5,40}\\b$/;", "fixed": "    const ISSUE_OR_PR_FORMAT  = /^([^\\/]+)\\/([^\\/#]+)(?:\\/pull\\/|\\/issues\\/|#)(\\d+)$/;\n    const REPOSITORY_FORMAT   = /^(\\w+)\\/(\\w+)?\\s*(\\w+)?$/;\n    const COMMIT_SHA_FORMAT   = /^\\b[0-9a-f]{5,40}\\b$/;", "message": "Unnecessary escape character."}
{"id": "/data/all/data/RubyLouvre/anu", "bugType": "no-unreachable", "problem": "    it(\"\u5f39\u7a97\u4e2d\u6ca1\u6709\u4e8b\u4ef6\u7684\u6309\u94ae\u70b9\u51fb\u540e\u4e5f\u80fd\u89e6\u53d1\u5916\u9762\u7684\u4e8b\u4ef6\u56de\u8c03\", function(){\n        return\n        var appRoot = document.createElement(\"div\")\n        var modalRoot = document.createElement(\"div\")", "fixed": "    it(\"\u5f39\u7a97\u4e2d\u6ca1\u6709\u4e8b\u4ef6\u7684\u6309\u94ae\u70b9\u51fb\u540e\u4e5f\u80fd\u89e6\u53d1\u5916\u9762\u7684\u4e8b\u4ef6\u56de\u8c03\", function(){\n        var appRoot = document.createElement(\"div\")\n        var modalRoot = document.createElement(\"div\")", "message": "Unreachable code."}
{"id": "/data/all/data/jagenjo/litescene.js", "bugType": "no-undef", "problem": "\t\t{\r\n\t\t\tshader.uniforms({ u_ambient_light: LS.ZEROS});\r\n\t\t\tgl.depthMask( false );\r", "fixed": "\t\t{\r\n\t\t\tgl.depthMask( false );\r", "message": "Undefined variable."}
{"id": "/data/all/data/milesj/aesthetic", "bugType": "no-process-exit", "problem": "    console.log(error);\n    process.exit(0);\n  });", "fixed": "    console.log(error);\n    process.exitCode = 1;\n  });", "message": "Don't use process.exit(); throw an error instead."}
{"id": "/data/all/data/YMFE/ykit", "bugType": "no-process-exit", "problem": "                    error(e);\n                    process.exit(1);\n                }", "fixed": "                    error(e);\n                }", "message": "Don't use process.exit(); throw an error instead."}
{"id": "/data/all/data/PMSI-AlignAlytics/dimple", "bugType": "no-invalid-this", "problem": "                            if (axis.position === \"x\") {\n                                d3.select(this).selectAll(\"text\").attr(\"x\", (chartWidth / axis._max) / 2);\n                            } else if (axis.position === \"y\") {", "fixed": "                            if (axis.position === \"x\") {\n                                t.attr(\"x\", (chartWidth / axis._max) / 2);\n                            } else if (axis.position === \"y\") {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/lytics/pathforajs", "bugType": "no-extra-semi", "problem": "  return valid && !excludeValid;\n};", "fixed": "  return valid && !excludeValid;\n}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/girder/girder", "bugType": "no-invalid-this", "problem": "        createItemDialog.call(this);\n    }, this));", "fixed": "        createItemDialog.call(this);\n    });", "message": "Unexpected 'this'."}
{"id": "/data/all/data/angular/angular", "bugType": "no-this-before-super", "problem": "  constructor(location, interfaces) {\n    this.location = location;\n    this.interfaces = interfaces;", "fixed": "  constructor(location, interfaces) {\n    super(location);\n    this.interfaces = interfaces;", "message": "'this' is not allowed before 'super()'."}
{"id": "/data/all/data/LucianoGanga/simple-headless-chrome", "bugType": "no-fallthrough", "problem": "                this.chromeInstance.kill();\n              case 20:\n                throw _context.t0;", "fixed": "                _context.next = 19;\n                return this.chromeInstance.kill();\n              case 19:\n                throw _context.t0;", "message": "Expected a 'break' statement before 'case'."}
{"id": "/data/all/data/gbif/portal16", "bugType": "no-unreachable", "problem": "                    return $filter('capitalizeFirstLetter')(key.replace(\"_\", \" \").toLowerCase());\n                    break;\n                case 'countByRank':", "fixed": "                    return $filter('capitalizeFirstLetter')(key.replace(\"_\", \" \").toLowerCase());\n                case 'countByRank':", "message": "Unreachable code."}
{"id": "/data/all/data/ArkEcosystem/desktop-wallet", "bugType": "no-extra-semi", "problem": "      return deferred.promise;\n    };\n    function saveExchange(exchange, status){", "fixed": "      return deferred.promise;\n    }\n    function saveExchange(exchange, status){", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/sgoran/micro", "bugType": "no-sparse-arrays", "problem": " });\n['/', '/src', '/img', , '/js', '/vendor'].forEach(function(path){\n  app.use('/', express.static(__dirname + path));", "fixed": " });\n['/', '/src', '/img', '/js', '/vendor'].forEach(function(path){\n  app.use('/', express.static(__dirname + path));", "message": "Unexpected comma in middle of array."}
{"id": "/data/all/data/cpojer/mootools-filemanager", "bugType": "no-undef", "problem": "\t\t\t}, this.options.overlayFx)).set(0),\n\t\t\twin: new Fx.Morph(this.win, $merge({\n\t\t\t\tonStart: Events.prototype.clearChain,", "fixed": "\t\t\t}, this.options.overlayFx)).set(0),\n\t\t\twin: new Fx.Morph(this.win, Object.merge({\n\t\t\t\tonStart: Events.prototype.clearChain,", "message": "Undefined variable."}
{"id": "/data/all/data/Wonder-Technology/Wonder.js", "bugType": "no-redeclare", "problem": "            var state = record[0];\n            var directionLightObj = record[1];", "fixed": "            var state = record[0];\n            var pointLightObj = record[1];", "message": "Redeclaring variable."}
{"id": "/data/all/data/DevC-Casa/geeksblabla.com", "bugType": "no-console", "problem": "  const { user } = React.useContext(Auth0Context)\n  console.log(user)\n  return (", "fixed": "  const { user } = React.useContext(Auth0Context)\n  return (", "message": "Unexpected console statement."}
{"id": "/data/all/data/army8735/homunculus", "bugType": "no-unreachable", "problem": "        return this.iterstmt();\n      break;\n      case 'continue':", "fixed": "        return this.iterstmt();\n      case 'continue':", "message": "Unreachable code."}
{"id": "/data/all/data/hex7c0/mongodb-restore", "bugType": "no-invalid-this", "problem": "  var ROOT = __dirname + '/dump/';\n  this.timeout(5000);\n  describe('tar', function() {", "fixed": "  var ROOT = __dirname + '/dump/';\n  describe('tar', function() {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/RanvierMUD/ranviermud", "bugType": "no-invalid-this", "problem": "        this.emit('experience', LevelUtil.mobExp(target.level));\n        this.setAttribute('health', this.getAttribute('maxHealth'));\n        Broadcast.prompt(this);", "fixed": "        this.emit('experience', LevelUtil.mobExp(target.level));\n        this.setAttributeToMax('health');\n        Broadcast.prompt(this);", "message": "Unexpected 'this'."}
