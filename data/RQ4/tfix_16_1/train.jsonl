{"id": "/data/all/data/thing-it/thing-it-node", "bugType": "comma-style", "problem": "  , stream = require('stream')\n  , qs = require('qs')\n  , querystring = require('querystring')\n  , crypto = require('crypto')", "fixed": "'use strict'", "message": "',' should be placed last."}
{"id": "/data/all/data/dc-js/dc.js", "bugType": "no-undef", "problem": "        var bars = layer.selectAll('rect.bar')\n            .data(d.values, dc.pluck('x'));", "fixed": "        var bars = layer.selectAll('rect.bar')\n            .data(d.values, pluck('x'));", "message": "Undefined variable."}
{"id": "/data/all/data/slm-lang/slm", "bugType": "no-redeclare", "problem": "      if (all) {\n        for (var j = 0, v; v = value[j]; j++) {\n          if (j) {", "fixed": "      if (all) {\n        for (var j = 0, jv; jv = value[j]; j++) {\n          if (j) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/askmike/gekko", "bugType": "no-invalid-this", "problem": "  var args = _.toArray(arguments);\n  const failure = function() {\n    this.retry(this.checkOrder, args, res.error);\n  }", "fixed": "  var args = _.toArray(arguments);\n  const failure = res => {\n    this.retry(this.checkOrder, args, res);\n  }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/alephdata/aleph", "bugType": "no-class-assign", "problem": "ImageViewer = connect(mapStateToProps)(ImageViewer);\nImageViewer = withRouter(ImageViewer);\nexport default ImageViewer", "fixed": "export default ImageViewer", "message": "'ImageViewer' is a class."}
{"id": "/data/all/data/numenta/nupic.tools", "bugType": "comma-style", "problem": "  , request = require('request')\n  , nodeURL = require('url')\n  , jsonUtils = require('./json')", "fixed": "  , request = require('request')\n  \n  , jsonUtils = require('./json')", "message": "',' should be placed last."}
{"id": "/data/all/data/conveyal/transitive.js", "bugType": "no-invalid-this", "problem": "  this.initSvg = function (display) {\n    ", "fixed": "  initSvg (display) {\n    ", "message": "Unexpected 'this'."}
{"id": "/data/all/data/SuperMap/iClient-JavaScript", "bugType": "no-undef", "problem": "    it('constructor, destroy', function () {\n        var shape = new SuperMap.LevelRenderer.Shape.SmicRectangle({\n            style: {x: 0, y: 0, width: 100, height: 100, radius: [5, 5, 5, 5]}", "fixed": "    it('constructor, destroy', function () {\n        var shape = new SmicRectangle({\n            style: {x: 0, y: 0, width: 100, height: 100, radius: [5, 5, 5, 5]}", "message": "Undefined variable."}
{"id": "/data/all/data/postmanlabs/postman-sandbox", "bugType": "no-invalid-this", "problem": "        var bridge = this,\n            cursor = options.cursor,\n            ", "fixed": "        var cursor = options.cursor,\n            ", "message": "Unexpected 'this'."}
{"id": "/data/all/data/Azgaar/Fantasy-Map-Generator", "bugType": "no-unreachable", "problem": "    return;\n    const basins = [...(new Set(pack.rivers.map(r=>r.basin)))];\n    const colors = getColors(basins.length);", "fixed": "    \n    const basins = [...(new Set(pack.rivers.map(r=>r.basin)))];\n    const colors = getColors(basins.length);", "message": "Unreachable code."}
{"id": "/data/all/data/RobinHerbots/Inputmask", "bugType": "no-empty", "problem": "\tvar posNdx;\n\tfor (posNdx in maskset.validPositions) {\n\t}\n\treturn posNdx;", "fixed": "\tvar posNdx;\n\tfor (posNdx in maskset.validPositions) ;\n\treturn posNdx;", "message": "Empty block statement."}
{"id": "/data/all/data/ProjectSidewalk/SidewalkWebpage", "bugType": "no-console", "problem": "            var panoId = mapService.getPanoId();\n            console.log(\"Next Pano:\" + panoId);\n            if (state.properties.panoId == panoId) {", "fixed": "            var panoId = mapService.getPanoId();\n            if (state.properties.panoId == panoId) {", "message": "Unexpected console statement."}
{"id": "/data/all/data/borisding/universsr", "bugType": "no-extra-boolean-cast", "problem": "    \n    return !!NODE\n      ? `${config['PROTOCOL']}:", "fixed": "    \n    return NODE\n      ? `${config['PROTOCOL']}:", "message": "Redundant double negation."}
{"id": "/data/all/data/DockYard/ember-in-viewport", "bugType": "no-invalid-this", "problem": "    Ember.assert('You must pass a valid context to _setInitialViewport', context);\n    return scheduleOnce('afterRender', this, function() {\n      this._setViewportEntered(context);\n    });", "fixed": "    Ember.assert('You must pass a valid context to _setInitialViewport', context);\n    return scheduleOnce('afterRender', this, () => {\n      this._setViewportEntered(context);\n    });", "message": "Unexpected 'this'."}
{"id": "/data/all/data/FogCreek/Glitch-Community", "bugType": "no-unused-vars", "problem": "import axios from 'axios';\nimport { Button, Icon, Loader } from '@fogcreek/shared-components';", "fixed": "import axios from 'axios';\nimport { Actions, Button, Icon, Info, Loader, Popover, Title } from '@fogcreek/shared-components';", "message": "Unused variable."}
{"id": "/data/all/data/ariatemplates/ariatemplates", "bugType": "comma-style", "problem": "        \n        this._loadStatements([\"Library\", \"id\", \"on\", \"createView\", \"section\", \"@\", \"repeater\"\n                , \"bindRefreshTo\"]);\n        ", "fixed": "        \n        this._loadStatements([\"Library\", \"id\", \"on\", \"createView\", \"section\", \"@\", \"repeater\"]);\n        ", "message": "',' should be placed last."}
