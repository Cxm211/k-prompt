{"id": "/data/all/data/Marak/colors.js", "bugType": "no-extend-native", "problem": "  };\n  Object.defineProperty(String.prototype, color, {\n    get: func\n  });\n};", "fixed": "  };\n  String.prototype.__defineGetter__(color, func);\n};", "message": "String prototype is read only, properties should not be added."}
{"id": "/data/all/data/markmarkoh/datamaps", "bugType": "no-unused-vars", "problem": "d3.geo = {};\nvar d3_geo_radians = Math.PI / 180;", "fixed": "d3.geo = {};", "message": "Unused variable."}
{"id": "/data/all/data/nodejitsu/jitsu", "bugType": "prefer-rest-params", "problem": "        callback(err);\n        return jitsu.showError.apply(null, [command[0]].concat(arguments));\n      }", "fixed": "        callback(err);\n        return jitsu.showError(jitsu.argv._.join(' '), err);\n      }", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/ethereumclassic/explorer", "bugType": "guard-for-in", "problem": "    Block.find({}, \"transactions timestamp\").lean(true).exec(function(err, docs) {\n        for (b in docs) {\n            var doc = docs[b];\n            var bulkOps = [];", "fixed": "    Block.find({}, \"transactions timestamp\").lean(true).exec(function(err, docs) {\n        async.forEach(docs, function(doc, cb) {\n            var bulkOps = [];", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/fayfoxteam/faycms", "bugType": "no-redeclare", "problem": "\t\t\t\t}else{\r\n\t\t\t\t\tvar value = obj.val();\r\n\t\t\t\t\treturn value ? value : '';\r", "fixed": "\t\t\t\t}else{\r\n\t\t\t\t\tvalue = obj.val();\r\n\t\t\t\t\treturn value ? value : '';\r", "message": "Redeclaring variable."}
{"id": "/data/all/data/Orckestra/C1-CMS-Foundation", "bugType": "no-undef", "problem": "\tsave: function () {\r\n\t\t\n\t\tif (!Client.isWebKit)\r\n\t\t\tEventBroadcaster.broadcast ( BroadcastMessages.SAVE_CURRENT );\r\n\t},\r", "fixed": "\tsave: function () {\r\n\t\tEventBroadcaster.broadcast ( BroadcastMessages.SAVE_CURRENT );\r\n\t},\r", "message": "Undefined variable."}
{"id": "/data/all/data/Vincit/objection.js", "bugType": "prefer-rest-params", "problem": "  }\n  table() {\n    return this.addOperation(new FromOperation('table'), arguments);\n  }", "fixed": "  }\n  table(...args) {\n    return this.addOperation(new FromOperation('table'), args);\n  }", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/vstconsulting/vstutils", "bugType": "no-debugger", "problem": "    {\n        debugger;\n        var thisObj = this;", "fixed": "    {\n        var thisObj = this;", "message": "Unexpected 'debugger' statement."}
{"id": "/data/all/data/mgcrea/redux-rest-resource", "bugType": "no-case-declarations", "problem": "        };\n      case 'resolved': \n        const idKey = getIdKey(action, {multi: false});\n        const id = action.context[idKey] || action.context;", "fixed": "        };\n      case 'resolved': {\n        const idKey = getIdKey(action, {multi: false});\n        const id = action.context[idKey] || action.context;", "message": "Unexpected lexical declaration in case block."}
{"id": "/data/all/data/jquery/jquery-ui", "bugType": "no-extra-semi", "problem": "\t\t\tel.to = $.effects.setTransition( el, vProps, factor.to.y, el.to );\n\t\t};", "fixed": "\t\t\tel.to = $.effects.setTransition( el, vProps, factor.to.y, el.to );\n\t\t}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/babel/babel", "bugType": "no-invalid-this", "problem": "    this.replaceExpressionWithStatements(nodes);\n  } else if (this.isNodeType(\"Statement\") || !this.type) {\n    this._maybePopFromStatements(nodes);", "fixed": "    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);", "message": "Unexpected 'this'."}
{"id": "/data/all/data/adnan-wahab/pathgl", "bugType": "comma-style", "problem": ", 'void main() {'\n, '    gl_FragColor = vec4(rgb, 1.);'\n, '}'\n].join('\\n')", "fixed": ", 'void main() {'\n, '    gl_FragColor = v_stroke;'\n, '}'\n].join('\\n')", "message": "',' should be placed last."}
{"id": "/data/all/data/HBM/node-jet", "bugType": "no-undef", "problem": "State.prototype.isAdded = function () {\n\treturn that.jsonrpc.hasRequestDispatcher(this._path);\n};", "fixed": "State.prototype.isAdded = function () {\n\treturn this.jsonrpc.hasRequestDispatcher(this._path);\n};", "message": "Undefined variable."}
{"id": "/data/all/data/casefoundation/analytics-dashboard", "bugType": "no-unused-vars", "problem": "    const reports = []\n    const tzOffset = new Date().getTimezoneOffset() * 60 * 1000\n    feed.slice(0, this.config.nPosts).forEach((reportPost, i) => {", "fixed": "    const reports = []\n    feed.slice(0, this.config.nPosts).forEach((reportPost, i) => {", "message": "Unused variable."}
{"id": "/data/all/data/cdapio/cdap", "bugType": "no-redeclare", "problem": "  var c3 = c3,\n      myHelpers = myHelpers,\n      $filter = $filter,", "fixed": "  var c3 = c3,\n      $filter = $filter,", "message": "Redeclaring variable."}
{"id": "/data/all/data/katzer/cordova-plugin-local-notifications", "bugType": "prefer-spread", "problem": "exports.getIds = function () {\n    this.getAllIds.apply(this, arguments);\n};", "fixed": "exports.getIds = function (callback, scope) {\n    this.exec('ids', null, callback, scope);\n};", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/gregoryguillou/terraform-api", "bugType": "no-unused-vars", "problem": "  }\n  const key = `ws:${workspace['project']}:${workspace['workspace']}`\n  if (req.swagger.params.action.value['action'] === 'clean') {", "fixed": "  }\n  if (req.swagger.params.action.value['action'] === 'clean') {", "message": "Unused variable."}
{"id": "/data/all/data/matreshkajs/matreshka", "bugType": "no-empty", "problem": "\t\t\t\t\tdelete object[key];\n\t\t\t\t} catch (e) {}", "fixed": "\t\t\t\t\tdelete object[key];\n\t\t\t\t}", "message": "Empty block statement."}
{"id": "/data/all/data/angus-c/just", "bugType": "comma-style", "problem": "'use strict';\nvar $export = require('./_export')\n  , $map    = require('./_array-methods')(1);", "fixed": "'use strict';\nvar $export = require('./_export');\nvar $map = require('./_array-methods')(1);", "message": "',' should be placed last."}
{"id": "/data/all/data/i18next/ng-i18next", "bugType": "no-extra-semi", "problem": "    };\n    ;\n    I18nDirectiveController.prototype.parse = function (key, noWatch) {", "fixed": "    };\n    \n    I18nDirectiveController.prototype.parse = function (key, noWatch) {", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/jlord/git-it-electron", "bugType": "no-redeclare", "problem": "      nextname = makeTitleName(file)\n      var getridof = next + '_'\n      nexturl = file.replace(getridof, '')", "fixed": "      nextname = makeTitleName(file)\n      getridof = next + '_'\n      nexturl = file.replace(getridof, '')", "message": "Redeclaring variable."}
{"id": "/data/all/data/OHDSI/Atlas", "bugType": "no-extra-semi", "problem": "\treturn commonUtils.build('MultilayerPerceptionModel', MultilayerPerceptionModel, view);;\n});", "fixed": "\treturn commonUtils.build('MultilayerPerceptionModel', MultilayerPerceptionModel, view);\n});", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/piroor/treestyletab", "bugType": "prefer-spread", "problem": "function log(...aArgs) {\n\tutils.log.apply(utils, ['tabbarDNDObserver'].concat(aArgs));\n}", "fixed": "function log(...aArgs) {\n\tutils.log('tabbarDNDObserver', ...aArgs);\n}", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/JoshuaWise/better-sqlite3", "bugType": "no-redeclare", "problem": "\t\texpect(stmt.returnsData).to.be.false;\n\t\texpect(function () {stmt.iterate();}).to.throw(TypeError);\n\t\t\n\t\tvar stmt = db.prepare(\"BEGIN TRANSACTION\");\n\t\texpect(stmt.returnsData).to.be.false;", "fixed": "\t\texpect(stmt.returnsData).to.be.false;\n\t\texpect(() => stmt.iterate()).to.throw(TypeError);\n\t\t\n\t\tstmt = db.prepare(\"BEGIN TRANSACTION\");\n\t\texpect(stmt.returnsData).to.be.false;", "message": "Redeclaring variable."}
{"id": "/data/all/data/probmods/webppl", "bugType": "no-invalid-this", "problem": "          env.coroutine = this.coroutine;\n          return this.cont(grad, elbo);\n        },", "fixed": "          env.coroutine = this.coroutine;\n          return this.cont(grad, elbo);\n        }.bind(this));", "message": "Unexpected 'this'."}
{"id": "/data/all/data/jdxcode/npm-register", "bugType": "generator-star-spacing", "problem": "app.use(r.put('/:name', function *() {\n  newrelic.setTransactionName(':name');\n  let pkg = yield parse(this);\n  try {", "fixed": "app.use(r.put('/:name', function * () {\n  newrelic.setTransactionName(':name')\n  let pkg = yield parse(this)\n  try {", "message": "Missing space after *."}
{"id": "/data/all/data/3dtech/frak", "bugType": "guard-for-in", "problem": "\t\t}\n\t\tfor (var i in parts) {\n\t\t\tnode = node.findChildWithName(parts[i]);", "fixed": "\t\t}\n\t\tfor (var i=0; i<parts.length; i++) {\n\t\t\tnode = node.findChildWithName(parts[i]);", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/kriserickson/topcoat-touch", "bugType": "no-undef", "problem": "        var $menuDiv = $('<div id=\"menuDiv\"></div>');\n        $('body').append($menuDiv);\n        ", "fixed": "        var $menuDiv = $('<div id=\"menuDiv\"></div>');\n        $container.append($menuDiv);\n        ", "message": "Undefined variable."}
{"id": "/data/all/data/fugitivelabs/yote", "bugType": "comma-style", "problem": "          isFetching: false\n          , item: action.product\n          , error: null\n          , lastUpdated: action.receivedAt\n        })", "fixed": "          , lastUpdated: action.receivedAt\n        })", "message": "',' should be placed last."}
{"id": "/data/all/data/treojs/treo", "bugType": "no-redeclare", "problem": "var schema = require('./support/schema')\nvar treo = require('../lib')\nvar websql = require('./support/treo-websql')", "fixed": "var schema = require('./support/schema')\nvar treo = require('./support/treo')", "message": "Redeclaring variable."}
{"id": "/data/all/data/es-shims/es5-shim", "bugType": "no-extend-native", "problem": "    \n    Array.prototype.splice = function splice(start, deleteCount) {\n        if (arguments.length === 0) {", "fixed": "    \n    ArrayPrototype.splice = function splice(start, deleteCount) {\n        if (arguments.length === 0) {", "message": "Array prototype is read only, properties should not be added."}
{"id": "/data/all/data/remotestorage/remotestorage.js", "bugType": "no-console", "problem": "          } else {\n            console.log(response.statusCode);\n            console.log('it is an error');\n            params.error(response.statusCode);", "fixed": "          } else {\n            params.error(response.statusCode);", "message": "Unexpected console statement."}
{"id": "/data/all/data/ElevenGiants/eleven-gsjs", "bugType": "no-useless-escape", "problem": "\tadjusted_scale\t: this.adjusted_scale,\n\tasset_swf_v\t: \"http:\\/\\/c2.glitch.bz\\/items\\/2011-08\\/mental_thought-1312587422.swf\",\n\tadmin_props\t: false,", "fixed": "\tadjusted_scale\t: this.adjusted_scale,\n\tasset_swf_v\t: \"\\/c2.glitch.bz\\/items\\/2011-08\\/mental_thought-1312587422.swf\",\n\tadmin_props\t: false,", "message": "Unnecessary escape character."}
{"id": "/data/all/data/assemble/assemble", "bugType": "no-redeclare", "problem": "Data.prototype.namespace = function(namespace, data, options) {\n  var namespace = {namespace: namespace, patterns: data};\n  data = plasma(namespace, options);", "fixed": "Data.prototype.namespace = function(namespace, data, options) {\n  namespace = {namespace: namespace, patterns: data};\n  data = plasma(namespace, options);", "message": "Redeclaring variable."}
{"id": "/data/all/data/catjsteam/catjs", "bugType": "no-invalid-this", "problem": "        requires: function () {\n            var index = 0,\n                me = this;\n            return function (files, callback) {", "fixed": "        requires: function () {\n            var index = 0;\n            return function (files, callback) {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/juhana/if-recorder", "bugType": "valid-typeof", "problem": "\t\t\t\telse {\n\t\t\t\t\tif( !parchment.options.lock_story && typeof( getUrlVars()[ 'story' ] ) != 'unknown' ){\n\t\t\t\t\t\tself.story = getUrlVars()[ 'story' ];", "fixed": "\t\t\t\telse {\n\t\t\t\t\tif( !parchment.options.lock_story && typeof( getUrlVars()[ 'story' ] ) != 'undefined' && getUrlVars()[ 'story' ] != '' ){\n\t\t\t\t\t\tself.story = getUrlVars()[ 'story' ];", "message": "Invalid typeof comparison value."}
{"id": "/data/all/data/Chokyotager/La-Cosa-Nostra", "bugType": "no-redeclare", "problem": "  if (poisoned) {\n    var from = game.getPlayerByIdentifier(actionable.from);\n    game.addMessage(from, \":exclamation: You cured your target of poison!\");", "fixed": "  if (poisoned) {\n    game.addMessage(from, \":exclamation: You cured your target of poison!\");", "message": "Redeclaring variable."}
{"id": "/data/all/data/wjbryant/taboverride", "bugType": "no-invalid-this", "problem": "                    \n                    this.value = text.slice(0, startLine) + tab + text.slice(startLine, selStart) +\n                        sel.replace(/\\n/g, function () {", "fixed": "                    \n                    target.value = text.slice(0, startLine) + tab + text.slice(startLine, selStart) +\n                        sel.replace(/\\n/g, function () {", "message": "Unexpected 'this'."}
{"id": "/data/all/data/alvassin/nodejs-icecast-monitor", "bugType": "no-extra-semi", "problem": "  });\n};\nutil.inherits(XmlStreamParser, stream.Writable);", "fixed": "  });\n}\nutil.inherits(XmlStreamParser, stream.Writable);", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/Shopify/slate", "bugType": "no-unused-vars", "problem": "  setOptions: function(selector, values) {\n    for (var i = 0, count = values.length; i < values.length; i++) {\n      var opt = document.createElement('option');", "fixed": "  setOptions: function(selector, values) {\n    for (var i = 0; i < values.length; i++) {\n      var opt = document.createElement('option');", "message": "Unused variable."}
{"id": "/data/all/data/collinhover/kaiopua", "bugType": "no-invalid-this", "problem": "\t\t\tthis.rotationAngle = this.rotationAngleLayout;\n\t\t\tconsole.log( ' this.rotationAngle ', this.rotationAngle);\n\t\t\tangle = shared.cardinalAxes.right.x * this.rotationAngle;", "fixed": "\t\t\tthis.rotationAngle = this.rotationAngleLayout;\n\t\t\t\n\t\t\tangle = shared.cardinalAxes.right.x * this.rotationAngle;", "message": "Unexpected 'this'."}
{"id": "/data/all/data/google/santa-tracker-web", "bugType": "no-undef", "problem": "VillageController.prototype.hideVillage_ = function() {\n  window.clearTimeout(this.scheduleTimeout_);\n  this.preloader_.hide();\n};", "fixed": "VillageController.prototype.hideVillage = function() {\n  window.clearTimeout(this.scheduleTimeout_);\n  this.view_.hide();\n};", "message": "Undefined variable."}
{"id": "/data/all/data/obniz/obniz", "bugType": "no-redeclare", "problem": "    }\n    var names = [\"switch\", \"ble\", \"measure\"];\n    for (var i = 0; i < names.length; i++) {\n      if (obj[names[i]]) {", "fixed": "    }\n    let names = [\"switch\", \"ble\", \"measure\"];\n    for (let i = 0; i < names.length; i++) {\n      if (obj[names[i]]) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/floatinghotpot/casino-server", "bugType": "no-unreachable", "problem": "\t\tthrow 'player server is a singleton, should not be created twice';\n\t\treturn;\n\t}", "fixed": "\t\tthrow 'player server is a singleton, should not be created twice';\n\t}", "message": "Unreachable code."}
{"id": "/data/all/data/gmac/sass-thematic", "bugType": "no-dupe-keys", "problem": "  template: function(opts, done) {\n    if (typeof opts !== 'object') {", "fixed": "  toTemplate: function(opts, done) {\n    if (typeof opts !== 'object') {", "message": "Duplicate key 'template'."}
{"id": "/data/all/data/emberjs/ember.js", "bugType": "prefer-spread", "problem": "  afterRender: function() {\n    this._super.apply(this, arguments);\n    this._setupPathObservers();", "fixed": "  afterRender: function() {\n    this._super(...arguments);\n    this._setupPathObservers();", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/wso2/VizGrammar", "bugType": "no-invalid-this", "problem": "igviz.Axis = (function () {\n    var axis = function (axisConfig) {\n        this.axis = {\n            \"type\": axisConfig.type,", "fixed": "igviz.Axis = (function () {\n    return function (axisConfig) {\n        this.axis = {\n            \"type\": axisConfig.type,", "message": "Unexpected 'this'."}
{"id": "/data/all/data/MasterOdin/salr-redux", "bugType": "no-array-constructor", "problem": "    this.gesture_overlay_html = this.buildOverlay();\n    this.disabled_gestures = new Array();\n    this.pageCount = countPages;", "fixed": "    this.gesture_overlay_html = this.buildOverlay();\n    this.disabled_gestures = [];\n    this.pageCount = countPages;", "message": "The array literal notation [] is preferable."}
{"id": "/data/all/data/IgniteUI/ignite-ui", "bugType": "no-array-constructor", "problem": "            _calculateColumnsWidthOrHeightMatrix: function (sizes) {\n                var sizesMatrix = new Array(),\n                    i = 0,", "fixed": "            _calculateColumnsWidthOrHeightMatrix: function (sizes) {\n                var sizesMatrix = [],\n                    i = 0,", "message": "The array literal notation [] is preferable."}
{"id": "/data/all/data/codefoster/codeshow", "bugType": "no-undef", "problem": "            var cscalc = new CalculatorCS.Calculator();\n            q(\"#cs .y\").value = cscalc.add(q(\"#cs .a\").value, q(\"#cs .b\").value);\n        }", "fixed": "            var cscalc = new CalculatorCS.Calculator();\n            cs.querySelector(\".y\").value = cscalc.add(cs.querySelector(\".a\").value, cs.querySelector(\".b\").value);\n        }", "message": "Undefined variable."}
{"id": "/data/all/data/typicode/hotel", "bugType": "no-useless-escape", "problem": "  const app = express.Router()\n  const hotelRegExp = new RegExp(`hotel\\.${conf.tld}$`)", "fixed": "  const app = express.Router()\n  const hotelRegExp = new RegExp(`hotel.${conf.tld}$`)", "message": "Unnecessary escape character."}
{"id": "/data/all/data/JetBrains/ring-ui", "bugType": "prefer-spread", "problem": "      }, function () {\n        defer.reject.apply(defer, arguments);\n      });", "fixed": "      }, function () {\n        defer.reject(arguments[2]);\n      });", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/rzcoder/node-rsa", "bugType": "guard-for-in", "problem": "        }\n        for(var i in buffers) {\n            var buf = buffers[i];", "fixed": "        }\n        for(var i = 0; i < buffers.length; i++) {\n            var buf = buffers[i];", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/fex-team/kity", "bugType": "no-invalid-this", "problem": "            Utils.each( type, function ( currentType ) {\n                record[ currentType ] = listen( this, currentType, handler );\n            } );", "fixed": "            Utils.each( type, function ( currentType ) {\n                record[ currentType ] = listen.call( shape, node, currentType, handler );\n            } );", "message": "Unexpected 'this'."}
{"id": "/data/all/data/ejensen/Kindling", "bugType": "guard-for-in", "problem": "\t\tvar sound;\n\t\tfor (sound in SOUNDS) {\n\t\t\t$tooltipInner.append('<a class=\"sound\" data-value=\"' + SOUNDS[sound] + '\">' + sound + '</a>');\n\t\t}", "fixed": "\t\tvar sound;\n\t\tfor (sound in SOUNDS) {\n\t\t\tif (SOUNDS.hasOwnProperty(sound)) {\n\t\t\t\t$tooltipInner.append('<a class=\"sound\" data-value=\"' + SOUNDS[sound] + '\">' + sound + '</a>');\n\t\t\t}", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/vakata/jstree", "bugType": "no-invalid-this", "problem": "\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\n\t\t\t\t\t\tdiv.style.height = this._data.core.li_height + 'px';\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');", "fixed": "\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');", "message": "Unexpected 'this'."}
{"id": "/data/all/data/jbt/docker", "bugType": "no-redeclare", "problem": "        try{\n          var data = dox.parseComments(multiLine)[0];\n          section.docs += this.doxTemplate(data);\n        }catch(e){", "fixed": "        try{\n          doxData = dox.parseComments(multiLine)[0];\n          section.docs += this.doxTemplate(doxData);\n        }catch(e){", "message": "Redeclaring variable."}
{"id": "/data/all/data/zsxsoft/danmu-client", "bugType": "no-extra-semi", "problem": "\t\t\t\treturn generateY(style, size, index + 1);\n\t\t\t};\n\t\t};", "fixed": "\t\t\t\treturn generateY(style, size, index + 1);\n\t\t\t}\n\t\t};", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/yui/grover", "bugType": "guard-for-in", "problem": "            if (t) {\n                for (i in t) {\n                    name = i.replace('Test', '');\n                    t[name] = t[i];\n                }", "fixed": "            if (t) {\n                for (i in t) {\n                    if (t.hasOwnProperty(i)) {\n                        name = i.replace('Test', '');\n                        t[name] = t[i];", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/Neufund/ico-transparency-monitor", "bugType": "no-unused-vars", "problem": "import {connect} from 'react-redux';\nimport {decisionMatrix, formatNumber, getValueOrNotAvailable} from '../utils';\nimport {default as config} from '../config.js';", "fixed": "import {connect} from 'react-redux';\nimport {decisionMatrix} from '../utils';\nimport {default as config} from '../config.js';", "message": "Unused variable."}
{"id": "/data/all/data/SheetJS/sheetjs", "bugType": "no-throw-literal", "problem": "\t\t\t\tdefault:\n\t\t\t\t\tif(y[0].charCodeAt(1) !== 47) throw 'Unrecognized rich format ' + y[0];\n\t\t\t}", "fixed": "\t\t\t\tdefault:\n\t\t\t\t\tif(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n\t\t\t}", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/academicsystems/Bengine", "bugType": "no-invalid-this", "problem": "extensibles.image = new function image() {\n\tthis.type = \"image\";\n\tthis.name = \"image\";", "fixed": "BengineConfig.extensibles.image = new function Image() {\n\tthis.type = \"image\";\n\tthis.name = \"image\";", "message": "Unexpected 'this'."}
{"id": "/data/all/data/lukeed/taskr", "bugType": "generator-star-spacing", "problem": "\t\t\t},\n\t\t\tb: function * () {\n\t\t\t\tt.pass('start a task from within a task');", "fixed": "\t\t\t},\n\t\t\t* b() {\n\t\t\t\tt.pass('start a task from within a task');", "message": "Unexpected space before *."}
{"id": "/data/all/data/nvd3/nvd3", "bugType": "no-invalid-this", "problem": "      chart.update = function() { container.transition().call(chart); };\n      chart.container = this;\n      ", "fixed": "      chart.update = function() { container.transition().call(chart); };\n      \n      ", "message": "Unexpected 'this'."}
{"id": "/data/all/data/angus-c/es6-tests", "bugType": "no-unused-labels", "problem": "https:\ndescribe('arrow functions', () => {", "fixed": "describe('arrow functions', () => {", "message": "'https:' is defined but never used."}
{"id": "/data/all/data/oracle/netsuite-suitecloud-node-cli", "bugType": "no-dupe-keys", "problem": "\t\t\tpassword: json.password,\n\t\t\taccountId: json.accountId,\n\t\t});", "fixed": "\t\t\tpassword: json.password,\n\t\t\tisDevelopment: json.isDevelopment,\n\t\t});", "message": "Duplicate key 'accountId'."}
{"id": "/data/all/data/maierfelix/Calc", "bugType": "prefer-rest-params", "problem": "      \n      ENGEL.STACK.createVariable(arguments[0]);\n      ", "fixed": "      \n      ENGEL.STACK.createVariable(name);\n      ", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/TimelordUK/node-sqlserver-v8", "bugType": "guard-for-in", "problem": "                var colByName = {};\n                for (var c in cols)\n                    colByName[cols[c].name] = cols[c];", "fixed": "                var colByName = {};\n                for (var c = 0; c < cols.length; ++c) {\n                    colByName[cols[c].name] = cols[c];", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/potree/potree", "bugType": "no-console", "problem": "\tvar offset = 0;\n\tconsole.log('number of bytes per point: ' + pointAttributes.attributes.length);\n\tfor(var i = 0; i < pointAttributes.attributes.length; i++){", "fixed": "\tvar offset = 0;\n\tfor(var i = 0; i < pointAttributes.attributes.length; i++){", "message": "Unexpected console statement."}
{"id": "/data/all/data/d3/d3-scale", "bugType": "no-extra-semi", "problem": "      .range([cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0)]);\n};", "fixed": "      .range([cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0)]);\n}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/appium/appium", "bugType": "no-constant-condition", "problem": "    }\n    if (typeof this.args.chromeOptions) {\n      _.each(typeof this.args.chromeOptions, function (val, option) {\n        if (typeof caps.chromeOptions[option] === \"undefined\") {", "fixed": "    }\n    if (this.args.chromeOptions) {\n      _.each(this.args.chromeOptions, function (val, option) {\n        if (typeof caps.chromeOptions[option] === \"undefined\") {", "message": "Unexpected constant condition."}
{"id": "/data/all/data/projectfluent/fluent.js", "bugType": "no-invalid-this", "problem": "function setReady(supported) {\n  this.supportedLocales = supported;\n  this.isReady = true;", "fixed": "function setReady() {\n  this.isReady = true;", "message": "Unexpected 'this'."}
{"id": "/data/all/data/aldendaniels/codr-io", "bugType": "no-undef", "problem": "ace.define('ace/mode/livescript', ['require', 'exports', 'module' , 'ace/tokenizer', 'ace/mode/matching_brace_outdent', 'ace/range', 'ace/mode/text'], function(require, exports, module) {\n  var identifier, LiveScriptMode, keywordend, stringfill;", "fixed": "define(function(require, exports, module){\n  var identifier, LiveScriptMode, keywordend, stringfill;", "message": "Undefined variable."}
{"id": "/data/all/data/hugollm/true-store", "bugType": "prefer-rest-params", "problem": "            if (self.debug)\n                console.log(name, arguments);\n            var args = (arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments));\n            var newStateObject = self.currentStateMap.toJS();", "fixed": "            if (self.debug)\n                console.log(name, args);\n            var newStateObject = self.currentStateMap.toJS();", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/mattheworiordan/jquery.simulate.drag-sortable.js", "bugType": "no-invalid-this", "problem": "        \n        moveVerticalAmount += (direction === 'down' ? -1 : 1) * Math.min($(this).outerHeight() / 2, 5);\n        ", "fixed": "        \n        moveVerticalAmount += (direction === 'down' ? -1 : 1) * Math.min(extraDrag, 5);\n        ", "message": "Unexpected 'this'."}
{"id": "/data/all/data/jsdoc/jsdoc", "bugType": "prefer-spread", "problem": "            loggerArgs = addPrefix(args, prefix);\n            func.apply(null, loggerArgs);\n        }", "fixed": "            loggerArgs = addPrefix(args, prefix);\n            func(...loggerArgs);\n        }", "message": "Use the spread operator instead of '.apply()'."}
{"id": "/data/all/data/jadonk/bonescript", "bugType": "no-throw-literal", "problem": "            fs.readFile(pfileData, function(err, data) {\n                if(err) throw(\"Unable to read data: \" + err);\n                socket.emit('pressuredata', \"\" + data / pscale);", "fixed": "            fs.readFile(pfileData, function(err, data) {\n                if(err) {console.log(\"Unable to read data: \" + err); return;}\n                socket.emit('pressuredata', \"\" + data / pscale);", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/d3/d3-selection", "bugType": "no-extra-semi", "problem": "  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};", "fixed": "  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/silverwind/droppy", "bugType": "prefer-rest-params", "problem": "function resolve() {\n  let p = path.join.apply(null, arguments);\n  p = path.resolve(/^~/.test(p) ? untildify(p) : p);", "fixed": "function resolve(...args) {\n  let p = path.join.apply(null, args);\n  p = path.resolve(/^~/.test(p) ? untildify(p) : p);", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/ThomasAn73/OpenSource-Javascript-GraphicsFramework", "bugType": "no-cond-assign", "problem": "      \n      if (this.useBackground = true)\r\n      {\r", "fixed": "      \n      if (this.useBackground == true)\r\n      {\r", "message": "Expected a conditional expression and instead saw an assignment."}
{"id": "/data/all/data/graalvm/graaljs", "bugType": "comma-style", "problem": "        var dir32 = path.resolve(devDir, 'ia32')\n          , dir64 = path.resolve(devDir, 'x64')\n          , libPath32 = path.resolve(dir32, release.name + '.lib')\n          , libPath64 = path.resolve(dir64, release.name + '.lib')", "fixed": "'use strict'", "message": "',' should be placed last."}
{"id": "/data/all/data/contextio/ContextIO-node", "bugType": "no-undef", "problem": "                    attachements(attachment_id) {\n                      resource += attachment_id ? 'attachements/' + encodeURIComponent(attachements) + '/' : 'messages/'", "fixed": "                    attachements(attachment_id) {\n                      resource += attachment_id ? 'attachements/' + encodeURIComponent(attachment_id) + '/' : 'messages/'", "message": "Undefined variable."}
{"id": "/data/all/data/FieldDB/FieldDB", "bugType": "no-throw-literal", "problem": "      if (!this.dbname) {\n        throw \"Cannot load corpus's public self, its dbname was undefined\";\n      }", "fixed": "      if (!this.dbname) {\n        throw new Error(\"Cannot load corpus's public self, its dbname was undefined\");\n      }", "message": "Expected an object to be thrown."}
{"id": "/data/all/data/perfectapi/node-perfectapi", "bugType": "prefer-rest-params", "problem": "\t\tvar paramName = cfg.getCommandParameterName(rawConfig, commandName);\n\t\tif (paramName) \n\t\t\tfinalConfig[paramName] = arguments;\t\t\n\t\tfinalConfig.options = cfg.merge(finalConfig.options, config.options);\t", "fixed": "\t\tvar paramName = cfg.getCommandParameterName(rawConfig, commandName);\n\t\tif (paramName) finalConfig[paramName] = config[paramName];\n\t\tfinalConfig.options = cfg.merge(finalConfig.options, config.options);\t", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/dazld/react-on-visible", "bugType": "prefer-rest-params", "problem": "class OnVisible extends Component {\n    constructor() {\n        super(...arguments);\n        this.onScroll = bindRaf(this.onScroll.bind(this));", "fixed": "class OnVisible extends Component {\n    constructor(...args) {\n        super(...args);\n        this.onScroll = bindRaf(this.onScroll.bind(this));", "message": "Use the rest parameters instead of 'arguments'."}
{"id": "/data/all/data/tc39/test262", "bugType": "no-undef", "problem": "for(x in Date.prototype.getUTCMonth) {\n  if(x === \"length\") {", "fixed": "for(var x in Date.prototype.getUTCMonth) {\n  if(x === \"length\") {", "message": "Undefined variable."}
{"id": "/data/all/data/gre/diaporama", "bugType": "no-redeclare", "problem": "      var segmentTo = segments[j][1];\n      var tnext = diaporama.timeline[i].transitionNext;\n      if (j !== 0 || this._loop) {", "fixed": "      var segmentTo = segments[j][1];\n      var next = diaporama.timeline[index].transitionNext;\n      if (j !== 0 || this._loop) {", "message": "Redeclaring variable."}
{"id": "/data/all/data/hshoff/vx", "bugType": "no-unused-vars", "problem": "          .reverse()\n          .map((series, i) => {\n            const lastPoint = series[series.length - 1];", "fixed": "          .reverse()\n          .map(series => {\n            const lastPoint = series[series.length - 1];", "message": "Unused variable."}
{"id": "/data/all/data/hontvari/mireka", "bugType": "no-undef", "problem": "\r\nlists = setup(MailingLists, { lists: [\r\n\t\r\n\t", "fixed": "\r\nlists = [\r\n\r\n\t", "message": "Undefined variable."}
{"id": "/data/all/data/video-dev/hls.js", "bugType": "no-extra-semi", "problem": "    this.trigger('data', result);\n  };\n};", "fixed": "    this.trigger('data', result);\n  }\n}", "message": "Unnecessary semicolon."}
{"id": "/data/all/data/trentm/json", "bugType": "no-process-exit", "problem": "      }\n      process.stdout.flush && process.stdout.flush();\n      process.exit(1);\n    }", "fixed": "      }\n      return drainStdoutAndExit(1);\n    }", "message": "Don't use process.exit(); throw an error instead."}
{"id": "/data/all/data/jbmusso/grex", "bugType": "no-invalid-this", "problem": "      this.gremlin.appendScript(\")\");\n      return this;\n    };", "fixed": "      this.gremlin.appendScript(\")\");\n    };", "message": "Unexpected 'this'."}
{"id": "/data/all/data/ivebe/CyrLatConverter", "bugType": "no-redeclare", "problem": "            {\n                for (var i = 0; i < separators.length; i++) {\n                    ret.push(separators[i]);", "fixed": "            {\n                for (let i = 0; i < separators.length; i++) {\n                    ret.push(separators[i]);", "message": "Redeclaring variable."}
{"id": "/data/all/data/alexzaworski/CodePen-Enhancement-Suite", "bugType": "no-extra-boolean-cast", "problem": "  function checkIfNotesDisabled(callback) {\n    chrome.storage.local.get(disableKey, function(response) {\n      if (!!response[disableKey]) {\n        return;", "fixed": "  function checkIfNotesDisabled (callback) {\n    chrome.storage.local.get(disableKey, function (response) {\n      if (response[disableKey]) {\n        return;", "message": "Redundant double negation."}
{"id": "/data/all/data/silverstripe/silverstripe-cms", "bugType": "no-dupe-keys", "problem": "\t\t'CMSMAIN.ERRORUNFILTER' : 'Konnte Filterung des Seitenbaumes nicht aufheben<br />%s',\n\t\t'CMSMAIN.ERRORUNFILTER' : 'Filterung des Seitenbaumes zur\u00fcckgesetzt',\n\t\t'CMSMAIN.PUBLISHINGPAGES' : 'Publiziere Seiten...',", "fixed": "\t\t'CMSMAIN.ERRORUNFILTER' : 'Konnte Filterung des Seitenbaumes nicht aufheben<br />%s',\n\t\t'CMSMAIN.PUBLISHINGPAGES' : 'Publiziere Seiten...',", "message": "Duplicate key 'CMSMAIN.ERRORUNFILTER'."}
{"id": "/data/all/data/d3/d3-transition", "bugType": "no-invalid-this", "problem": "        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = attrInterpolate(this, name)(value00 = value0, value10 = value1);\n  };", "fixed": "        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };", "message": "Unexpected 'this'."}
{"id": "/data/all/data/dabeng/OrgChart", "bugType": "no-invalid-this", "problem": "          }\n          this.showChildren($node);\n        }", "fixed": "          }\n          that.showChildren($node);\n        }", "message": "Unexpected 'this'."}
{"id": "/data/all/data/kvz/locutus", "bugType": "guard-for-in", "problem": "    for (key in inputArr) {\n        val = inputArr[key];\n        if (false === __array_search(val, tmp_arr2)) {\n            tmp_arr2[key] = val;", "fixed": "    for (key in inputArr) {\n        if (inputArr.hasOwnProperty) {\n            val = inputArr[key];\n            if (false === __array_search(val, tmp_arr2)) {", "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}
{"id": "/data/all/data/agoric-labs/PlaygroundVat", "bugType": "no-unreachable", "problem": "    function makeFarResource(webkey) {\n      throw 'not implemented';\n      return 'farref object';\n    }", "fixed": "    function makeFarResource(webkey) {\n      return { farref: webkey };\n    }", "message": "Unreachable code."}
{"id": "/data/all/data/RubyLouvre/anu", "bugType": "prefer-rest-params", "problem": "            if (isFn(fn)) {\n                fn.apply(instance, arguments);\n            }", "fixed": "            if (isFn(fn)) {\n                fn.call(instance, e);\n            }", "message": "Use the rest parameters instead of 'arguments'."}
