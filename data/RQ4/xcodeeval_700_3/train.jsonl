{"similarity_score": 0.972972972972973, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ea5388118fe89ff910824b2110bea9d8", "bug_code_uid": "c5f410ac87a30691b184fc18336ce4f2", "src_uid": "0671972bc2b6452d51d048329e6e0106", "apr_id": "45c017e1f53635620602756550bd3f42", "difficulty": 900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tunsigned long  x,y; \n\tint i,n;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif(x-y==1)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\t\n\t}\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tunsigned long long x,y; \n\tint i,n;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%llu%llu\",&x,&y);\n\t\t\tif(x-y==1)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\t\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9497293116782676, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0bbb79649ae5b9dbe18d9aedba74739c", "bug_code_uid": "32fdc2bded3ba7d3f161fec0aaa67109", "src_uid": "a4eeaf7252b9115b67b9eca5f2bf621d", "apr_id": "dc0350ba9712c4541d848a4784c4a42c", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int n,m;\r\n    int i,j;\r\n    while(t--){\r\n        scanf(\"%d %d\\n%d %d\",&n,&i,&m,&j);\r\n        while(n >= 10){\r\n            n = n/10;\r\n            i++;\r\n        }\r\n        while(m >= 10){\r\n            m = m/10;\r\n            j++;\r\n        }\r\n        if(i > j){\r\n            printf(\">\\n\");\r\n        }else if(j > i) {\r\n            printf(\"<\\n\");\r\n        }else{\r\n            if(n > m){\r\n           printf(\">\\n\");\r\n           } else if(m > n){\r\n          printf(\"<\\n\");\r\n           } else {\r\n          printf(\"=\\n\");\r\n          }\r\n        }\r\n}\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    double n,m;\r\n    int i,j;\r\n    while(t--){\r\n        scanf(\"%lf %d\\n%lf %d\",&n,&i,&m,&j);\r\n        while(n >= 10){\r\n            n = n/10;\r\n            i++;\r\n        }\r\n        while(m >= 10){\r\n            m = m/10;\r\n            j++;\r\n        }\r\n        if(i > j){\r\n            printf(\">\\n\");\r\n        }else if(j > i) {\r\n            printf(\"<\\n\");\r\n        }else{\r\n            if((n - m) > 0.00000001){\r\n           printf(\">\\n\");\r\n           } else if((m - n) > 0.00000001){\r\n          printf(\"<\\n\");\r\n           } else {\r\n          printf(\"=\\n\");\r\n          }\r\n        }\r\n}\r\n    return 0;\r\n}"}
{"similarity_score": 0.8939641109298532, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "87ead8fedbba58cdb3f7ad82f629cfdc", "bug_code_uid": "1ba81ef01a1bb83577913c2972aebbd9", "src_uid": "080a3458eaea4903da7fa4cf531beba2", "apr_id": "1a2cc0b5f7af58a00b2d4216ae8551f9", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int i,n,x,s=0;\n   int T[10];\n   scanf(\"%d\",&n);\n   scanf(\"%d\",&x);\n   for (i=0;i<n;i++)\n   {\n       scanf(\"%d\",&T[i]);\n       s=s+1+T[i];\n   }\n   if (s-1==x)\n   {\n       printf(\"YES\");\n   }\n   else\n   {\n       printf(\"NO\");\n   }\n   return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   \n   int i,x,s=0;\n   long n;\n   scanf(\"%d\",&n);\n   int T[n];\n  \n   scanf(\"%d\",&x);\n   for (i=0;i<n;i++)\n   {\n       scanf(\"%d\",&T[i]);\n       s=s+1+T[i];\n   }\n   if (s-1==x)\n   {\n       printf(\"YES\");\n   }\n   else\n   {\n       printf(\"NO\");\n   }\n   return 0;\n}"}
{"similarity_score": 0.25, "equal_cnt": 21, "replace_cnt": 12, "delete_cnt": 6, "insert_cnt": 4, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "ff3879cf59c4ce320dc730a36b561853", "bug_code_uid": "9a9e812704ca11b8019145ee2d644334", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "50117b2f5877a6d77d4c85902585b3cf", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tlong long l = 0, i = 0, t = 0, r = 0,n=0;\n\tscanf_s(\"%lld\", &t);\n\tfor (i =1; i <= t; i++)\n\t{\n\t\tscanf(\"%lld\", &n);\n\t\tl = 1 - n;\n\t\tr = n;\n\t\tprintf(\"%lld %lld\", l, r);\n\t}\n\treturn 0;\n}\n\n \t \t \t \t \t\t\t\t \t    \t\t\t \t\t\t\t\t\t\t\t", "fixed": "//\u8fde\u7eed\u6570\u7684\u548c\n//\u5982\u679c\u4e3a\u5947\u6570\u5c31\u9664\u4ee52\n//\u5982\u679c\u4e3a\u5076\u6570\u5c31\u627e\n#include<stdio.h>\n\n\nint main(){\n    long long a[10001];\n    int n;\n    long long l[10001];\n    long long r[10001];\n    scanf(\"%d\",&n);\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=0;i<n;i++){\n        if(a[i]==1){\n            l[i]=0;\n            r[i]=1;\n        }\n        if(a[i]!=1&&a[i]%2){\n            l[i]=a[i]/2;\n            r[i]=l[i]+1;\n        }\n        if(!(a[i]%2)){\n            l[i]=-a[i]+1;\n            r[i]=a[i];\n        }\n    }\n    for(i=0;i<n;i++){\n        printf(\"%lld %lld\\n\",l[i],r[i]);\n    }\n    return 0;\n}\n \t \t\t  \t   \t\t \t\t \t\t \t\t   \t\t \t\t"}
{"similarity_score": 0.8602825745682888, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3e894cff858b4460b42bb72aa7ab2407", "bug_code_uid": "48f912e38716ddfb7da980e612d06f94", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "4e8bee0ced1da7681ff0f5330a433215", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void) {\n    long long int n;\n    long long int S=0, res=0, sum;\n    scanf(\"%lld\", &n);\n    long long int st[n+1],a[n+1];\n    long long int i=0;\n    a[i]=st[i]=0;\n    i++;\n    while(i<=n) \n    {\n        scanf(\"%lld\",&a[i]);\n        S+=a[i];\n        i++;\n    }\n\n    sum = 0;\n    long long int j=1;\n\n    while(j<=n) \n    {\n        sum += a[j];\n        if(sum*3 ==S)\n            st[j] = st[j-1]+1;\n        else\n            st[j]=st[j-1];\n        if(sum*3 == 2*S)\n            res+= st[j-2]; \n        j++;\n    }\n\n    printf(\"%lld\", res);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void) {\n    long long int n;\n    long long int S=0, res=0, sum;\n    scanf(\"%lld\", &n);\n    long long int st[n+1],a[n+1];\n    long long int i=0;\n    while(i<=n) \n    {\n        if(i==0)\n        {   \n            a[i]=st[i]=0;\n            i++;\n            continue;\n        }\n        st[i]=0;\n        scanf(\"%lld\",&a[i]);\n        S+=a[i];\n        i++;\n    }\n\n    sum = 0;\n    long long int j=1;\n\n    while(j<=n) \n    {\n        sum += a[j];\n        if(sum*3 ==S)\n            st[j] = st[j-1]+1;\n        else\n            st[j]=st[j-1];\n        if(j<n)   \n            if(sum*3 == 2*S)\n                res+= st[j-1]; \n        j++;\n    }\n\n    printf(\"%lld\", res);\n    return 0;\n}\n"}
{"similarity_score": 0.9623059866962306, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "08d508211517c7127a6a02d0ae89a38d", "bug_code_uid": "adbe63cc71e80d0622085d43fad4b9cd", "src_uid": "5999a4e2fac29b5f4804639f6e949279", "apr_id": "fe0b2a8e55ed5dc5c3b382a0d0ee5b42", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,a,b,i,t,j;\n    scanf(\"%lld\",&t);\n    for(j=0;j<t;j++)\n    {\n         scanf(\"%lld%lld%lld\",&a,&b,&n);\n    for(i=0;1==1;i++)\n    {\n        if(a>n||b>n)\n        {\n            break;\n        }\n        else\n        {\n            if(a<b)\n            {\n                a=a+b;\n            }\n            else\n            {\n                b=b+a;\n            }\n        }\n    }\n    printf(\"%lld\",i);\n\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,a,b,i,t,j;\n    scanf(\"%lld\",&t);\n    for(j=0;j<t;j++)\n    {\n         scanf(\"%lld%lld%lld\",&a,&b,&n);\n    for(i=0;1==1;i++)\n    {\n        if(a>n||b>n)\n        {\n            break;\n        }\n        else\n        {\n            if(a<b)\n            {\n                a=a+b;\n            }\n            else\n            {\n                b=b+a;\n            }\n        }\n    }\n    printf(\"%lld\\n\",i);\n\n    }\n\n}\n"}
{"similarity_score": 0.9893939393939394, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7e998ba445f19bd8f112617d25d937a1", "bug_code_uid": "a81a279347d626a5d7b823c929a2ebd3", "src_uid": "8f0172f742b058f5905c0a02d79000dc", "apr_id": "4d666e17398b08c9719e7930cc8bc5be", "difficulty": 1200, "tags": ["two pointers", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint v[100000];\n\nint main()\n{\n    int n , a , b , i , ta , tb , j;\n    scanf(\"%d\",&n);\n    for( i = 0; i < n; i++ ){\n        scanf(\"%d\",&v[i]);\n    }\n    i = 0;\n    j = n-1;\n    a = b = 0;\n    ta = tb = 0;\n    if( n > 1 ){\n        while( ia <= ib ){\n                if( ta <= tb ){\n                    a++;\n                    ta += v[i];\n                    i++;\n                }\n                else{\n                    b++;\n                    tb = tb + v[j];\n                    j--;\n                }\n            }\n        }\n    printf(\"%d %d\",a,b);\n    }\n    else{\n        if( n == 1 )\n            printf(\"1 0\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint v[100000];\n\nint main()\n{\n    int n , a , b , i , ta , tb , j;\n    scanf(\"%d\",&n);\n    for( i = 0; i < n; i++ ){\n        scanf(\"%d\",&v[i]);\n    }\n    i = 0;\n    j = n-1;\n    a = b = 0;\n    ta = tb = 0;\n    if( n > 1 ){\n        while( i <= j ){\n                if( ta <= tb ){\n                    a++;\n                    ta += v[i];\n                    i++;\n                }\n                else{\n                    b++;\n                    tb = tb + v[j];\n                    j--;\n                }\n            }\n        printf(\"%d %d\",a,b);\n        }\n    else{\n        if( n == 1 )\n            printf(\"1 0\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9986468200270636, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "352e2b2c565301774c9df906db66b460", "bug_code_uid": "8c0d566b8cbb2340af6e99c6ff48069c", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "7f72adbd703ec6165814def9a036e65c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a;\n    scanf(\"%d\",&a);\n    int i,x,y,c,d[100],greatest,z=0;\n    for(i=0;i<a;i++){\n        scanf(\"%d %d\",&x,&y);\n        c=y-x;\n        d[i]=c+z;\n        z=d[i];\n    }\n    i=0;\n    greatest=d[i];\n    for(i=1;i<a;i++){\n        if(d[i]>greatest){\n            greatest=d[i];\n        }\n    }\n    printf(\"%d\",greatest);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a;\n    scanf(\"%d\",&a);\n    int i,x,y,c,d[1000],greatest,z=0;\n    for(i=0;i<a;i++){\n        scanf(\"%d %d\",&x,&y);\n        c=y-x;\n        d[i]=c+z;\n        z=d[i];\n    }\n    i=0;\n    greatest=d[i];\n    for(i=1;i<a;i++){\n        if(d[i]>greatest){\n            greatest=d[i];\n        }\n    }\n    printf(\"%d\",greatest);\n    return 0;\n}\n"}
{"similarity_score": 0.9984101748807631, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e3c9831e0d3491be1b0ba3f294423db2", "bug_code_uid": "854d6b1015bcfd526ed37d572fececa9", "src_uid": "07597a8d08b59d4f8f82369bb5d74a49", "apr_id": "35542491746d0c83b7f0bb6f7cd02e52", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": " #include <stdio.h>\r\n #include <math.h>\r\nint main(void) {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int x,y,z;\r\n        scanf(\"%d %d %d \", &x,&y,&z);\r\n        if(x>y){\r\n            if((x>=2*y)&&(x-y)*2>=z){\r\n                if(z>(x-y)){\r\n            \r\n                printf(\"%d \\n\", z+y-x);\r\n            }\r\n            else{\r\n                printf(\"%d \\n\", z+x-y);\r\n            }\r\n                \r\n            }\r\n            else{\r\n                printf(\"-1\\n\");\r\n            }\r\n        }\r\n        else if(y>x){\r\n            if((y>=2*x)&&(y-x)*2>=z){\r\n                if(z>(y-x)){\r\n                \r\n                printf(\"%d \\n\", z=x-y);\r\n            }\r\n                else{\r\n                    printf(\"%d \\n\", z+y-x);\r\n                }\r\n            }\r\n            else{\r\n                printf(\"-1\\n\");\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\t// your code goes here\r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n #include <math.h>\r\nint main(void) {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        int x,y,z;\r\n        scanf(\"%d %d %d \", &x,&y,&z);\r\n        if(x>y){\r\n            if((x>=2*y)&&(x-y)*2>=z){\r\n                if(z>(x-y)){\r\n            \r\n                printf(\"%d \\n\", z+y-x);\r\n            }\r\n            else{\r\n                printf(\"%d \\n\", z+x-y);\r\n            }\r\n                \r\n            }\r\n            else{\r\n                printf(\"-1\\n\");\r\n            }\r\n        }\r\n        else if(y>x){\r\n            if((y>=2*x)&&(y-x)*2>=z){\r\n                if(z>(y-x)){\r\n                \r\n                printf(\"%d \\n\", z+x-y);\r\n            }\r\n                else{\r\n                    printf(\"%d \\n\", z+y-x);\r\n                }\r\n            }\r\n            else{\r\n                printf(\"-1\\n\");\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\t// your code goes here\r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.4912478825522304, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "2ddfb1bd3edd0d62be5e33caaefaf31d", "bug_code_uid": "f3995053f0abb244721579ba6a27477f", "src_uid": "8aba8c09ed1b1b25fa92cdad32d6fec3", "apr_id": "7233757249c829c95c8962ef8408fed5", "difficulty": 2000, "tags": ["probabilities", "interactive", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\n#define N\t50000\n\nint main() {\n\tstatic char used[N];\n\tstatic int aa[N], jj[N];\n\tint n, start, x, k, i, imax;\n\n\tscanf(\"%d%d%d\", &n, &start, &x);\n\tsrand(time(NULL));\n\tfor (i = 0; i < n; i++)\n\t\taa[i] = -1;\n\tfor (k = 0; k < 1000 && k < n; k++) {\n\t\twhile (used[i = rand() % n])\n\t\t\t;\n\t\tused[i] = 1;\n\t\tprintf(\"? %d\\n\", i + 1);\n\t\tfflush(stdout);\n\t\tscanf(\"%d%d\", &aa[i], &jj[i]);\n\t}\n\timax = start - 1;\n\tfor (i = 0; i < n; i++)\n\t\tif (aa[i] < x && aa[imax] < aa[i])\n\t\t\timax = i;\n\twhile (imax >= 0) {\n\t\tif (aa[imax] >= x) {\n\t\t\tprintf(\"! %d\\n\", aa[imax]);\n\t\t\treturn 0;\n\t\t}\n\t\tif (jj[imax] == 0) {\n\t\t\tprintf(\"? %d\\n\", imax + 1);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d%d\", &aa[imax], &jj[imax]);\n\t\t}\n\t\timax = jj[imax] - 1;\n\t}\n\tprintf(\"! -1\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\n#define N\t50000\n\nint rand_(int n) {\n\treturn (rand() % n * 0x844D + rand() % n) % n;\n}\n\nint main() {\n\tstatic char used[N];\n\tstatic int aa[N], jj[N];\n\tint n, start, x, k, i, imax;\n\n\tscanf(\"%d%d%d\", &n, &start, &x);\n\tsrand(time(NULL));\n\tfor (i = 0; i < n; i++)\n\t\taa[i] = -1;\n\tfor (k = 0; k < 1000 && k < n; k++)\n\t\tif (!used[i = rand_(n)]) {\n\t\t\tused[i] = 1;\n\t\t\tprintf(\"? %d\\n\", i + 1);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d%d\", &aa[i], &jj[i]);\n\t\t}\n\timax = start - 1;\n\tfor (i = 0; i < n; i++)\n\t\tif (aa[i] < x && aa[imax] < aa[i])\n\t\t\timax = i;\n\tif (aa[imax] >= x) {\n\t\tprintf(\"! %d\\n\", aa[imax]);\n\t\tfflush(stdout);\n\t\treturn 0;\n\t}\n\twhile (imax >= 0) {\n\t\tif (jj[imax] == 0) {\n\t\t\tprintf(\"? %d\\n\", imax + 1);\n\t\t\tfflush(stdout);\n\t\t\tscanf(\"%d%d\", &aa[imax], &jj[imax]);\n\t\t}\n\t\tif (aa[imax] >= x) {\n\t\t\tprintf(\"! %d\\n\", aa[imax]);\n\t\t\tfflush(stdout);\n\t\t\treturn 0;\n\t\t}\n\t\timax = jj[imax] - 1;\n\t}\n\tprintf(\"! -1\\n\");\n\tfflush(stdout);\n\treturn 0;\n}\n"}
{"similarity_score": 0.605543710021322, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f6e62bb8ffff3b8423f7054b5960eb47", "bug_code_uid": "9208e21093d76dbefb9aab151d9a287a", "src_uid": "204ba74195a384c59fb1357bdd71e16c", "apr_id": "c47daaf07fc1389f87f51e1b2e6dcc4a", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n==1)\n    {\n        printf(\"-1\\n\");\n    }\n    else\n    {\n        int A[n];\n        if(n%2==0)\n        {\n            for(i=0;i<n;i++)\n            {\n                A[i]=n-i;\n                printf(\"%d \",A[i]);\n            }\n        }\n        else\n        {\n            for(i=0;i<n/2;i++)\n            {\n                A[i]=n-i;\n                printf(\"%d \",A[i]);\n            }\n            for(i=n/2;i<n;i++)\n            {\n                A[i]=i+1-n/2;\n                printf(\"%d \",A[i]);\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    if(n%2==1)\n    {\n        printf(\"-1\\n\");\n    }\n    else\n    {\n        int A[n];\n            for(i=0;i<n;i++)\n            {\n                A[i]=n-i;\n                printf(\"%d \",A[i]);\n            }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9588014981273408, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "3b4ff55eaa98a92127bd64d8b53877cb", "bug_code_uid": "c88137beb50e6f22d500289b0a50fa60", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "d57f80ae21dcb50b81459371d1170ccc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int N;\r\n    scanf(\"%d\",&N);\r\n    for(int i=0;i<N;i++){\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        if(a+b==c || b+c==a || a+c==b){\r\n            printf(\"YES\\n\");\r\n        }else\r\n            printf(\"YES\\n\");\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int N,a,b,c;\r\n    scanf(\"%d\",&N);\r\n    for(int i=0;i<N;i++){\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        if(a+b==c || b+c==a || a+c==b){\r\n        printf(\"YES\\n\");\r\n        }else\r\n        printf(\"NO\\n\");\r\n    }\r\n return 0;\r\n}\r\n"}
{"similarity_score": 0.8996539792387543, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1d7999339b20cf5135fd036308c37fcd", "bug_code_uid": "b8155ff5f0a486653b0d403aa4aa3576", "src_uid": "091e91352973b18040e2d57c46f2bf8a", "apr_id": "213716dd84f8e951f16bce3ab021d7fa", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint q,l,r,d,i;\n\tint min,j;\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&d);\n      if(d<l)\n      min=d;\n\telse\n\t{\n\tfor(j=r+1;j>=r+1 ;j++)\n\t{\n\t\tif(j%d==0)\n\t\t{\n\t\tmin=j;\n\t\tbreak;\n\t\t}\n\t}\n\t}\n\tprintf(\"%lld\\n\",min);\n\t}\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint q,l,r,d,i;\n\tlong long int min,j;\n\tscanf(\"%d\",&q);\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&d);\n      if(d<l)\n      min=d;\n\telse\n\t{\n/*\tfor(j=r+1;j>=r+1 ;j++)\n\t{\n\t\tif(j%d==0)\n\t\t{\n\t\tmin=j;\n\t\tbreak;\n\t\t}\n\t}*/\n\tif(r%d==0)\n\tmin=r+d;\n\telse\n\tmin=r+d-(r%d);\n\t}\n\tprintf(\"%lld\\n\",min);\n\t}\n}"}
{"similarity_score": 0.9969604863221885, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "3fb10b078bd15af0c889b53d9359ec42", "bug_code_uid": "8e25fa3be1fe463784648a764d32f082", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "c956f292a8ed3a0b3739a57c8d3c70d1", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n    char a[100001];\n    long i, n;\n    scanf(\"%s\", &a);\n    n = = strlen(a);\n    int kt = 0;\n    for (i = 0; i < n - 1; i++)\n        if ((kt == 0) && (a[i] == '0')) kt++;\n        else\n            printf(\"%c\",a[i]);\n    if (kt != 0) printf(\"%c\",a[strlen(a) - 1]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n    char a[100001];\n    long i, n;\n    scanf(\"%s\", &a);\n    n = strlen(a);\n    int kt = 0;\n    for (i = 0; i < n - 1; i++)\n        if ((kt == 0) && (a[i] == '0')) kt++;\n        else\n            printf(\"%c\",a[i]);\n    if (kt != 0) printf(\"%c\",a[strlen(a) - 1]);\n    return 0;\n}\n"}
{"similarity_score": 0.6811594202898551, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "4990aa2dfa32a54b4c961477c37559f1", "bug_code_uid": "788d244ef64f1d5fca2e4311395948bd", "src_uid": "f79a926e18a3f81b24f2fc3ae5c8f928", "apr_id": "aa5fe9940101a3b3e38d622cc8b49f7d", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,x,i,j,k;\n    scanf(\"%d\", &t);\n    for(i =0 ; i< t ; i++)\n    {\n        scanf(\"%d %d\", &n , &x);\n        int a[n];\n\n        for(j = 0,k=1 ; j< n ; j++)\n        {\n            if((j+1) % 2 == 0){\n                a[k]= j+1;\n                k++;\n            }\n\n\n        }\n        printf(\"%d\\n\", a[x]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n,x,i,j,k;\n    scanf(\"%d\", &t);\n    for(i =0 ; i< t ; i++)\n    {\n        scanf(\"%d %d\", &n , &x);\n        printf(\"%d\\n\", 2*x);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3581081081081081, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "dab58f3aed295c4c2c286d36247c45bc", "bug_code_uid": "260983f79fcafe8f96a950aaa23e3553", "src_uid": "f4779e16e0857e6507fdde55e6d4f982", "apr_id": "21bb4d82b043cf5b9017b78ccd2bf63b", "difficulty": null, "tags": ["constructive algorithms", "probabilities"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define SIZE 100000\nint main()\n{\n    int n, i,a[SIZE],j,l;\n    scanf(\"%d\", &n);\n    for(int k=1;k<=n;k++)\n    {\n        scanf(\"%d\\n\", &l);\n        for(i=0, j=l;i<l;i++,j--)\n        {\n            a[i]=j;\n        }\n        for(i=0;i<l;i++)\n        {\n            printf(\"%d \", a[i]);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,l,i,j;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&l);\n        printf(\"%d \",l);\n        for(j=1;j<=l-1;j++)\n        {\n            printf(\"%d \",j);\n        }\n    printf(\"\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.20772303595206393, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "81277861b3c16bbf14026a8f4cc14263", "bug_code_uid": "224054854a951ccf9cd2c401c2c7fda1", "src_uid": "8e0581cce19d6bf5eba30a0aebee9a08", "apr_id": "3389705ebfc3ec43b0f28040331365ef", "difficulty": 900, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,a,b,c,t,d,i;\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%d%d\",&a,&b);\n\tscanf(\"%d\",&c);\n\tt=c;\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&c);\n\t\tif(c>t&&i<=a)\n\t\tt=c;\n\t}\n\tscanf(\"%d\",&c);\n\td=c;\n\tfor(i=2;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&c);\n\t\tif(c<d&&i<=b)\n\t\td=c;\n\t}\n\tif(t>=d)\n\tprintf(\"NO\\n\");\n\telse\n\tprintf(\"YES\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint cmp(const void*a,const void*b)\n{\n\treturn *(int*)a-*(int*)b;\n}\nint num[100010],ans[100010];\nint main()\n{\n\tint n,m,a,b,i;\n\tscanf(\"%d%d%d%d\",&n,&m,&a,&b);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&num[i]);\n\tfor(i=0;i<m;i++)\n\tscanf(\"%d\",&ans[i]);\n\tqsort(num,n,sizeof(int),cmp);\n\tqsort(ans,m,sizeof(int),cmp);\n\tif(num[a-1]<ans[m-b])\n\tprintf(\"YES\\n\");\n\telse\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.995850622406639, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4c01383bec4510ceb5d8414f8a477570", "bug_code_uid": "4236aff757509b12de5b9fd752c8dd48", "src_uid": "e27620d3a43ab42edf930b37ce214c9e", "apr_id": "bfb183618153ef0a0cbedeac71d9d55e", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(void){\r\n\tint i,n,lenth;\r\n\tchar str[10005];\r\n\tint a[10005],b[10005],c[10005];\r\n\tscanf(\"%d\",&n);\r\n\tfor(;n>0;n--){\r\n\t\tscanf(\"%d\",&lenth);\r\n\t\tscanf(\"%s\",str);\r\n\t\tfor(i=0;i<lenth;i++) {\r\n\t\t\tb[i]=(str[i]-'0');\r\n\t\t}\r\n\t\tc[0]=b[0]+1;\r\n\t\ta[0]=1;\r\n\t\tfor(i=1;i<lenth;i++){\r\n\t\t\tc[i]=b[i]+1;\r\n\t\t\tif(c[i]==c[i-1]){\r\n\t\t\t\tc[i]--;\r\n\t\t\t}\r\n\t\t\ta[i]=c[i]-b[i];\r\n\t\t}\r\n\t\tfor(i=0;i<lenth;i++){\r\n\t\t\tprintf(\"%d\",a[i]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(void){\r\n\tint i,n,lenth;\r\n\tchar str[100005];\r\n\tint a[100005],b[100005],c[100005];\r\n\tscanf(\"%d\",&n);\r\n\tfor(;n>0;n--){\r\n\t\tscanf(\"%d\",&lenth);\r\n\t\tscanf(\"%s\",str);\r\n\t\tfor(i=0;i<lenth;i++) {\r\n\t\t\tb[i]=(str[i]-'0');\r\n\t\t}\r\n\t\tc[0]=b[0]+1;\r\n\t\ta[0]=1;\r\n\t\tfor(i=1;i<lenth;i++){\r\n\t\t\tc[i]=b[i]+1;\r\n\t\t\tif(c[i]==c[i-1]){\r\n\t\t\t\tc[i]--;\r\n\t\t\t}\r\n\t\t\ta[i]=c[i]-b[i];\r\n\t\t}\r\n\t\tfor(i=0;i<lenth;i++){\r\n\t\t\tprintf(\"%d\",a[i]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9361702127659575, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "ccb33763daca7b9d9d05ee2117d1d58a", "bug_code_uid": "1cff9900450a2791934f482fc6660bfb", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "7349888f7385d79b3c87487a0de4cc0f", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nstring  stri[10700];\n\nint main()\n{\nlong int i=0,n=0,len=0,lod=0,ld2=0,ans=0;\n\nscanf(\"%s\",stri);\nlen=strlen(stri);\n//printf(\"len=%ld\\n\",len);\nlod=stri[len-1]-'0';\n     \n     if(len>1)\n   ld2=stri[len-2]-'0';\n  \n   n=10*ld2+lod;\n \n   if(n&1)\n   ans=0;\n   else{\n      if(n%4==0)\n      ans=4;\n      else\n      ans=0;\n      }\n  printf(\"%ld\\n\",ans);\n\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nchar stri[100700];\n\nint main()\n{\nlong int i=0,n=0,len=0,lod=0,ld2=0,ans=0;\n\nscanf(\"%s\",stri);\nlen=strlen(stri);\nlod=stri[len-1]-'0';\n     \n     if(len>1)\n   ld2=stri[len-2]-'0';\n  \n   n=10*ld2+lod;\n \n   if(n&1)\n   ans=0;\n   else{\n      if(n%4==0)\n      ans=4;\n      else\n      ans=0;\n      }\n  printf(\"%ld\\n\",ans);\nreturn 0;\n}\n"}
{"similarity_score": 0.9989281886387996, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6fb49de7a8c4684bd112ffd1ab318b26", "bug_code_uid": "7e3e66269b1aa1eda97397b92eaaf38e", "src_uid": "2a4c24341231cabad6021697f15d953a", "apr_id": "5349b8c5ace36ee1bb4b45ab1b8f2c0b", "difficulty": 1600, "tags": ["binary search", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define max(a,b) a>b?a:b;\n#define min(a,b) a<b?a:b;\nint main()\n{\n\tint n,from=-1e9,to=1e9,i,count=0;\n\tint change,div;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&change ,&div);\n\t\tif(div==1)\n\t\t{\n\t\t\tfrom = max(from,1900-count);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tto = min(to,1899-count);\n\t\t}\n\t\tcount+=change;\n\t}\n\tif(from>to)\n\t{\n\t\tprintf(\"Imossible\");\n\t\treturn 0;\n\t}\n\tif(to==1e9)\n\t{\n\t\tprintf(\"Infinity\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",to+count);\n\t}\n\treturn 0;\n\n}", "fixed": "#include<stdio.h>\n#define max(a,b) a>b?a:b;\n#define min(a,b) a<b?a:b;\nint main()\n{\n\tint n,from=-1e9,to=1e9,i,count=0;\n\tint change,div;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d %d\",&change ,&div);\n\t\tif(div==1)\n\t\t{\n\t\t\tfrom = max(from,1900-count);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tto = min(to,1899-count);\n\t\t}\n\t\tcount+=change;\n\t}\n\tif(from>to)\n\t{\n\t\tprintf(\"Impossible\");\n\t\treturn 0;\n\t}\n\tif(to==1e9)\n\t{\n\t\tprintf(\"Infinity\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",to+count);\n\t}\n\treturn 0;\n\n}"}
{"similarity_score": 0.9871611982881597, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "42c467e888b691cca760f02b6829788b", "bug_code_uid": "043543a4be3dffbeafb8b2235a123f3e", "src_uid": "efa201456f8703fcdc29230248d91c54", "apr_id": "050e34a2012b68f015f059c9d942b409", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,m,q,x;\n    char s1[21][11],s2[21][11];\n    scanf(\"%d%d\",&m,&n);\n    for(int i=0;i<m;i++)\n        scanf(\"%s\",s1[i]);\n    for(int i=0;i<n;i++)\n        scanf(\"%s\", names2[i]);\n    scanf(\"%d\",&q);\n    for(int i=0;i<q;i++)\n    {\n        scanf(\"%d\",&x);\n        x--;\n        printf(\"%s%s\\n\",s1[x%m],names2[x%n]);\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,m,q,x;\n    char s1[21][11],s2[21][11];\n    scanf(\"%d%d\",&m,&n);\n    for(int i=0;i<m;i++)\n        scanf(\"%s\",s1[i]);\n    for(int i=0;i<n;i++)\n        scanf(\"%s\",s2[i]);\n    scanf(\"%d\",&q);\n    for(int i=0;i<q;i++)\n    {\n        scanf(\"%d\",&x);\n        x--;\n        printf(\"%s%s\\n\",s1[x%m],s2[x%n]);\n    }\n}"}
{"similarity_score": 0.9973544973544973, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5281022f80c18c88dacdaf4e21cf84ea", "bug_code_uid": "60dbf30f236b5eed05c6c96d940d8da3", "src_uid": "ecd9bbc05b97f3cd43017dd0eddd014d", "apr_id": "1dd07707510c8f05bbcc91bb026b45de", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,max=0,num,i,start=0,end=0;\n\tscanf(\"%I64d\",&n);\n\tlong long int a[n];\n\tlong long int arr[1000001][3];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tarr[a[i]][0]++;\n\t\tif(arr[a[i]][0]==1)\n\t\t{\n\t\t\tarr[a[i]][1]=i;\n\t\t\tarr[a[i]][2]=i;\n\t\t}\n\t\tarr[a[i]][2]=i;\n\t\tif(arr[a[i]][0]>max)\n\t\t{\n\t\t\tmax=arr[a[i]][0];\n\t\t\tstart=arr[a[i]][1];\n\t\t\tend=arr[a[i]][2];\n\t\t}\n\t\tif(arr[a[i]][0]==max)\n\t\t{\n\t\t\tif(arr[a[i]][2]-arr[a[i]][1]<end-start)\n\t\t\t{\n\t\t\t\tstart=arr[a[i]][1];\n\t\t\t\tend=arr[a[i]][2];\n\t\t\t}\n\t\t\tif(arr[a[i]][2]-arr[a[i]][1]==end-start)\n\t\t\t{\n\t\t\t\tif(arr[a[i]][2]+arr[a[i]][1]<end+start)\n\t\t\t\t{\n\t\t\t\t\tstart=arr[a[i]][1];\n\t\t\t\t\tend=arr[a[i]][2];\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstart++;\n\tend++;\n\tprintf(\"%I64d %I64d\",start,end);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,max=0,num,i,start=0,end=0;\n\tscanf(\"%I64d\",&n);\n\tlong long int a[n];\n\tlong long int arr[1000001][3]={0};\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tarr[a[i]][0]++;\n\t\tif(arr[a[i]][0]==1)\n\t\t{\n\t\t\tarr[a[i]][1]=i;\n\t\t\tarr[a[i]][2]=i;\n\t\t}\n\t\tarr[a[i]][2]=i;\n\t\tif(arr[a[i]][0]>max)\n\t\t{\n\t\t\tmax=arr[a[i]][0];\n\t\t\tstart=arr[a[i]][1];\n\t\t\tend=arr[a[i]][2];\n\t\t}\n\t\tif(arr[a[i]][0]==max)\n\t\t{\n\t\t\tif(arr[a[i]][2]-arr[a[i]][1]<end-start)\n\t\t\t{\n\t\t\t\tstart=arr[a[i]][1];\n\t\t\t\tend=arr[a[i]][2];\n\t\t\t}\n\t\t\tif(arr[a[i]][2]-arr[a[i]][1]==end-start)\n\t\t\t{\n\t\t\t\tif(arr[a[i]][2]+arr[a[i]][1]<end+start)\n\t\t\t\t{\n\t\t\t\t\tstart=arr[a[i]][1];\n\t\t\t\t\tend=arr[a[i]][2];\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstart++;\n\tend++;\n\tprintf(\"%I64d %I64d\",start,end);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9122257053291536, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "20173fcbc23eeeaae8767d57345d5dbf", "bug_code_uid": "62b84e0fa1a851a1d99ea9df4dee2f46", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "59bfa7fc68c255281264b75775440195", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    int c = n;\n    for(i=1;i<=n;i++)\n    {\n    if(c%2!=0)\n    {\n         printf(\"I hate \");\n    }\n    else \n    {\n        printf(\"I love \");\n    }\n     if (i==n)\n    {\n        printf(\" it\");\n    }\n    else\n    {\n        printf(\"that \");\n    }\n   c--;\n    }\n    \n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n    if(i%2)\n    {\n         printf(\"I hate \");\n    }\n    else \n    {\n        printf(\"I love \");\n    }\n     if (i==n)\n    {\n        printf(\" it\");\n    }\n    else\n    {\n        printf(\"that \");\n    }\n    }\n    \n    \n}"}
{"similarity_score": 0.7737226277372263, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "926676ea3cb856b6cee081b640e910f1", "bug_code_uid": "de4e48d329149452f84d236fc1444d3e", "src_uid": "447ebe088a0a60a7a44a3fc76056bc65", "apr_id": "ec497c7c8fcca8cf977f8195eb0a2432", "difficulty": 1700, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int n,i,eat=0;\n    long long p,q;\n    scanf(\"%I64d%I64d\",&p,&q);\n   scanf(\"%d\",&n);\n   long long a[n],m;\n   for(i=0;i<n;i++)\n    scanf(\"%I64d\",&a[i]);\n   for(i=0;i<n-1;i++)\n   {\n       if(p<=a[i]*q)\n       {\n           eat=1;\n           break;\n       }\n    else\n    {\n        m=q;\n        q=p-a[i]*q;\n        p=m;\n    }\n   }\n   if(eat==1)\n    printf(\"NO\");\n   else if(q!=0&&p%q==0&&p/q==a[i])\n    printf(\"YES\");\n   else\n    printf(\"NO\");\n   return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nmain()\n{\n    int n,i,eat=0;\n    long long p,q;\n    \n    scanf(\"%I64d%I64d\",&p,&q);\n   scanf(\"%d\",&n);\n   long long a[n],m;\n   for(i=0;i<n;i++)\n    scanf(\"%I64d\",&a[i]);\n   for(i=0;i<n-1;i++)\n   {\n       if((a[i]>1000000000&&q>=1000000000)||(a[i]>=1000000000&&q>1000000000)||(a[i]<1000000000&&q>1000000000&&q-1000000000>((1000000000*(1000000000-a[i]))/a[i]))||(q<1000000000&&a[i]>1000000000&&a[i]-1000000000>((1000000000*(1000000000-q))/q))||(p<=a[i]*q))\n       {\n           eat=1;\n           break;\n       }\n    else\n    {\n        m=q;\n        q=p-a[i]*q;\n        p=m;\n    }\n   }\n   \n   if(eat==1)\n    printf(\"NO\");\n   else if(q!=0&&p%q==0&&p/q==a[i])\n    printf(\"YES\");\n   else\n    printf(\"NO\");\n   return 0;\n}\n"}
{"similarity_score": 0.8944337811900192, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dd92f946661b8334d28d1ebc0edb037d", "bug_code_uid": "95a6ab854e98aa48ed94a03af918fb5e", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "ecd6a429dedc7065245b67754744589c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\nint a,b,c,d,t,i,x;\r\nscanf(\"%d\" , &t);\r\nfor(i=0;i<t;i++)\r\n{\r\n scanf(\"%d %d %d %d\" , &a , &b , &c , &d);\r\nx=0;\r\nif(a<b)\r\n{\r\nx+=1;\r\n}\r\n\r\n\r\n\r\nif(a<c)\r\n{\r\nx+=1;\r\n}\r\n\r\n\r\nif(a<d)\r\n{\r\nx+=1;\r\n}\r\n\r\nprintf(\"%d\" , x );\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\nint a,b,c,d,t,i,x;\r\nscanf(\"%d\" , &t);\r\nfor(i=0;i<t;i++)\r\n{\r\n scanf(\"%d %d %d %d\" , &a , &b , &c , &d);\r\nx=0;\r\nif(a<b)\r\n{\r\nx+=1;\r\n}\r\n\r\n\r\n\r\nif(a<c)\r\n{\r\nx+=1;\r\n}\r\n\r\n\r\nif(a<d)\r\n{\r\nx+=1;\r\n}\r\n\r\nprintf(\"%d \\n\" , x );\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"}
{"similarity_score": 0.9714285714285714, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c8ffdf8c9ae8343d6fc2c21840d1607d", "bug_code_uid": "88310afcecdfbf70cd43f0c9b4dc624e", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "ec1718047c69df44adc38cd6f819cd8a", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n   int n;\n   scanf(\"%d\",&n);\n   for(int i=0;i<n;i++)\n   {\n       int a[3];\n       int c=0;\n       int d=0;\n       for(int j=0;j<3;j++ )\n       {\n           scanf(\"%d\",&a[j]);\n           if(a[j]==1)\n           c++;\n       }\n       if(c>=2)\n       d++;\n   }\n   printf(\"%d\",d);\n    \n}", "fixed": "#include<string.h>\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n   int n;\n   int d=0;\n   scanf(\"%d\",&n);\n   for(int i=0;i<n;i++)\n   {\n       int a[3];\n       int c=0;\n       \n       for(int j=0;j<3;j++ )\n       {\n           scanf(\"%d\",&a[j]);\n           if(a[j]==1)\n           c++;\n       }\n       if(c>=2)\n       d++;\n   }\n   printf(\"%d\",d);\n    \n}"}
{"similarity_score": 0.3362474781439139, "equal_cnt": 21, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "1c4c89e5a15758b6299138a565b41042", "bug_code_uid": "1c4e68488922c30d110aba528f615033", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "15e9b96b2e415c9cce2d0acd19f36f31", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdbool.h>\n\nint main()\n{\n\n    int t;\n    scanf(\"%d\", &t);\n\n\n\n    while (t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n\n\n        int arr[n];\n        for (int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &arr[i]);\n        }\n\n\n\n        int count[200000]={0};\n        for (int i = 0; i < n; i++)\n        {\n             int a = arr[i];\n             count[a]++;\n           // printf(\"arr = %d  \\t\", arr[i]);\n        }\n\n\n\n    int len = sizeof(count)/sizeof(count[0]);\n   // printf(\"%d   \\n\", len );\n\n\n    bool found = false;\n    for (int a = 0; a < len ; a++) {\n      if (count[a] >= 3) {\n        found = true;\n        printf(\"%d \\n\" , a);\n        break;\n      }\n    }\n    if (!found) {\n      printf(\"%d \\n\" , -1);\n    }\n    }\n    return 0;\n}\n\n\n  \t  \t \t \t\t\t \t\t\t     \t \t\t \t \t", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n\n{\n\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n\n        int n;\n        scanf(\"%d\", &n);\n        int freq[n + 1];\n        for (int i = 0; i <= n; i++)\n        {\n            freq[i] = 0;\n            // printf(\"%d\", )\n        }\n\n        for (int i = 0; i < n; i++)\n        {\n            int a;\n            scanf(\"%d\", &a);\n            freq[a]++;\n        }\n\n        int found = -1;\n\n        for (int i = 1; i <= n; i++)\n        {\n            if (freq[i] >= 3)\n            {\n                found = i;\n            }\n        }\n\n        printf(\"%d\\n\", found);\n    }\n//update\n\n    return 0;\n}\n\n\t\t\t \t\t\t\t \t \t     \t   \t\t \t \t  \t\t"}
{"similarity_score": 0.9841456253669995, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6262a1199aeb020528bcb1af32a21af1", "bug_code_uid": "43adebb0ede79de4c1ebedb60a3b8837", "src_uid": "7eff98fbcf4e4a3284e2d2f98351fe4a", "apr_id": "dc54850ab87773ea31750ed5ab9a7674", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n, gems[6] = {1, 1, 1, 1, 1, 1};\n    char g_ch[6][9] = {\"Power\", \"Time\", \"Space\", \"Soul\", \"Reality\", \"Mind\"}, in[7];\n    scanf(\"%d\", &n);\n\n    while (n--)\n    {\n        scanf(\"%s\", in);\n        switch (in[0])\n        {\n            case 'p':\n                gems[0] = 0;\n                break;\n            case 'g':\n                gems[1] = 0;\n                break;\n            case 'b':\n                gems[2] = 0;\n                break;\n            case 'o':\n                gems[3] = 0;\n                break;\n            case 'r':\n                gems[4] = 0;\n                break;\n            case 'y':\n                gems[5] = 0;\n                break;\n        }\n    }\n\n    int i;\n    for (i = 0; i < 6; i++)\n        if (gems[i] == 1)\n            printf(\"%s\\n\", g_ch[i]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n, gems[6] = {1, 1, 1, 1, 1, 1};\n    char g_ch[6][9] = {\"Power\", \"Time\", \"Space\", \"Soul\", \"Reality\", \"Mind\"}, in[7];\n    scanf(\"%d\", &n);\n    printf(\"%d\\n\", 6 - n);\n\n    while (n--)\n    {\n        scanf(\"%s\", in);\n        switch (in[0])\n        {\n            case 'p':\n                gems[0] = 0;\n                break;\n            case 'g':\n                gems[1] = 0;\n                break;\n            case 'b':\n                gems[2] = 0;\n                break;\n            case 'o':\n                gems[3] = 0;\n                break;\n            case 'r':\n                gems[4] = 0;\n                break;\n            case 'y':\n                gems[5] = 0;\n                break;\n        }\n    }\n\n    int i;\n    for (i = 0; i < 6; i++)\n        if (gems[i] == 1)\n            printf(\"%s\\n\", g_ch[i]);\n    return 0;\n}\n"}
{"similarity_score": 0.9974811083123426, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0f955917b99b35b6ae89bf19eeb3995b", "bug_code_uid": "7f8c8d5a93da354d67e07d3ede92804f", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "b31653e4c7cd5bff9b37fce91309640e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;i++)\n    {\n        if(i%2==0)\n        {\n            printf(\"I hate that \\t\");\n        }\n        else\n        {\n            printf(\"I love that \\t\");\n        }\n    }\n        if(n%2==1)\n        {\n            printf(\"I hate it\");\n        }\n        if(n%2==0)\n        {\n            printf(\"I love it\");\n        }\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<n;i++)\n    {\n        if(i%2==1)\n        {\n            printf(\"I hate that \\t\");\n        }\n        else\n        {\n            printf(\"I love that \\t\");\n        }\n    }\n        if(n%2==1)\n        {\n            printf(\"I hate it\");\n        }\n        if(n%2==0)\n        {\n            printf(\"I love it\");\n        }\n    \n}"}
{"similarity_score": 0.8151658767772512, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "bca1dd026c1ec4921c5b9b771e5a1468", "bug_code_uid": "88992e9c5baded9bbe227ca2d7c23c73", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "7d95a3ee24b7e4af329a8e85319ab4e1", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint is_composite(int x){\n  int i;\n  for(i=3;i<x/2;i++){\n    if(x%i==0)\n      return 1;\n  }\n  return 0;\n}\n\nint main(){\n  long int n,x,y;\n  scanf(\"%ld\",&n);\n  if(n%2==0){\n    x=(n/2);\n    y=x;\n  }\n  else{\n    x=(n/2);\n    y=(n/2)+1;\n    while(is_composite(x)==0||is_composite(y)==0){\n      x--;\n      y++;\n    }\n  }\n  printf(\"%ld %ld\",x,y);\n\n\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint is_composite(long int x){\n  long int i;\n  if(x==4||x==2){\n    return 1;\n  }\n  if(x==3||x==1){\n    return 0;\n  }\n  for(i=2;i<x/2;i++){\n    if(x%i==0)\n      return 1;\n  }\n  return 0;\n}\n\nint main(){\n  long int n,x,y;\n  scanf(\"%ld\",&n);\n  if(n%2==0){\n    x=(n/2);\n    y=x;\n  }\n  else{\n    x=(n/2);\n    y=(n/2)+1;\n  }\n\n  while(is_composite(x)==0||is_composite(y)==0){\n\n            x--;\n            y++;\n }\n\n  printf(\"%ld %ld\",x,y);\n\n\n\n  return 0;\n}\n"}
{"similarity_score": 0.7971014492753623, "equal_cnt": 10, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "d2bb978c19db610a58e827b2750629d4", "bug_code_uid": "bf51451213779092ded8411930fb46c5", "src_uid": "bcee233ddb1509a14f2bd9fd5ec58798", "apr_id": "999dec752cc8cb2f1f0e3d762c7d6f94", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint check(long long int arr[],int n){\n    long long int y = arr[0];\n    int i;\n    for(i=0;i<n;i++){\n        if(arr[i]!=y){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nint main()\n{\n    long long int n,k;\n    scanf(\"%lld %lld\",&n,&k);\n    long long int arr[n];\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&arr[i]);\n    }\n    if(check(arr,n)==1){\n        printf(\"0\");\n        return 0;\n    }\n    int j;\n    int y=arr[k-1];\n    int res=0;\n    for(j=k;j<n;j++){\n        if(arr[j]==y){\n            res++;\n        }\n        else if(arr[k]!=y){\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    printf(\"%d\",res);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint check(long long int arr[],long long int n){\n    long long int y = arr[0];\n    int i;\n    for(i=0;i<n;i++){\n        if(arr[i]!=y){\n            return 0;\n        }\n    }\n    return 1;\n}\n\nint main()\n{\n    long long int n,k;\n    scanf(\"%lld %lld\",&n,&k);\n    long long int arr[n];\n    int i;\n    for(i=0;i<n;i++){\n        scanf(\"%lld\",&arr[i]);\n    }\n    if(check(arr,n)==1){\n        printf(\"0\");\n        return 0;\n    }\n    int res=0;\n    int counter=0;\n    int j;\n    for(j=k-1;j<n;j++){\n        if(arr[j]!=arr[k-1]){\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    res=k-1;\n    for(j=k-2;j>=0;j--){\n        if(arr[j]==arr[k-1]){\n            res--;\n        }\n        else{\n            printf(\"%d\",res);\n            return 0;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6866213151927437, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "e994917f1a14fe6d16b81ec8b5fbf6ed", "bug_code_uid": "6374da4021dbb79c02391a1eaf36e239", "src_uid": "962c4354c936030da78261871dd6d55b", "apr_id": "f267d6ac493e4225b5a7f3466df7b56c", "difficulty": 1400, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "two pointers"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nlong hash[200000];long  a[200000],r[200000];\r\nint main() {\r\n\tint t; scanf(\"%d\", &t); getchar();\r\n\tfor (int qwq = 0; qwq < t;qwq++) {\r\n\t\tlong m; scanf(\"%ld\", &m); getchar();\r\n\t\tmemset(hash, 0, m * sizeof(long));\r\n\t\tlong inmax = 0;\r\n\t\tfor (long i = 0; i < m; i++) {\r\n\t\t\tscanf(\"%ld\", &a[i]);\r\n\t\t\tif (a[i] > inmax)inmax = a[i];\r\n\t\t}\r\n\t\tgetchar();\r\n\t\tlong k = 0,begin=0;\r\n\t\twhile (1) {\r\n\t\t\tlong max = -1, maxi = -1; \r\n\t\t\tmemset(hash, 0, (inmax + 1) * sizeof(long));\r\n\t\t\tfor (int i = begin; i < m; i++) {\r\n\t\t\t\thash[a[i]] = 1;\r\n\t\t\t\tif (a[i] == max + 1) { \r\n\t\t\t\t\tlong j = a[i];\r\n\t\t\t\t\twhile (hash[j+1] == 1)j++;\r\n\t\t\t\t\tmax = j; maxi = i; }\r\n\t\t\t}\r\n\t\t\tif (max == -1) {\r\n\t\t\t\tr[k] = 0;\r\n\t\t\t\tk += m - begin;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tr[k++] = max+1;\r\n\t\t\tbegin = maxi + 1;\r\n\t\t}\r\n\t\tprintf(\"%ld\\n\", k);\r\n\t\tint flag = 0;\r\n\t\tfor (long i = 0; i < k; i++) { \r\n\t\t\tif (flag == 0) {\r\n\t\t\t\tprintf(\"%ld \", r[i]);\r\n\t\t\t\tif (r[i] == 0)flag = 1;\r\n\t\t\t}\r\n\t\t\telse printf(\"0 \");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nlong hash[200000],hash2[200000];long  a[200000],r[200000];\r\nint main() {\r\n\tint t; scanf(\"%d\", &t); getchar();\r\n\tfor (int qwq = 0; qwq < t;qwq++) {\r\n\t\tlong m; scanf(\"%ld\", &m); getchar();\r\n\t\tmemset(hash2, 0, m * sizeof(long));\r\n\t\tlong inmax = 0;\r\n\t\tfor (long i = 0; i < m; i++) {\r\n\t\t\tscanf(\"%ld\", &a[i]);\r\n\t\t\tif (a[i] > inmax)inmax = a[i];\r\n\t\t\thash2[a[i]]++;\r\n\t\t}\r\n\t\tgetchar();\r\n\t\tlong k = 0;\r\n\t\tlong max = -1, maxi = -1,count=0;\r\n\t\twhile (hash2[++max]);\r\n\t\tmemset(hash, 0, (inmax + 1) * sizeof(long));\r\n\t\tfor (int i = 0; i < m; i++) {\r\n\t\t\thash2[a[i]]--;\r\n\t\t\tif (hash[a[i]] == 0&&a[i]<max) { count++; hash[a[i]] = 1; }\r\n\t\t\tif (count == max) {\r\n\t\t\t\tif (max == 0) {\r\n\t\t\t\t\tr[k] = 0; k += m - i; break;\r\n\t\t\t\t}\r\n\t\t\t\tr[k++] = max;\r\n\t\t\t\t max = -1, maxi = -1, count = 0;\r\n\t\t\t\twhile (hash2[++max]); \r\n\t\t\t\tmemset(hash, 0, (inmax + 1) * sizeof(long));\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%ld\\n\", k);\r\n\t\tint flag = 0;\r\n\t\tfor (long i = 0; i < k; i++) { \r\n\t\t\tif (flag == 0) {\r\n\t\t\t\tprintf(\"%ld \", r[i]);\r\n\t\t\t\tif (r[i] == 0)flag = 1;\r\n\t\t\t}\r\n\t\t\telse printf(\"0 \");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9985344406448461, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "60e96765fd2a6e48d11f75ac47acd9cc", "bug_code_uid": "2a7ca243d995910cc46d35827c35fc46", "src_uid": "5fcc22cdc38693723d8a9577d685db12", "apr_id": "e911f71dee18a542c954ad4434219e12", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int largo;\n    char direction[100000];\n    int step[100000];\n    int marked[100000];\n    marked[0] = 1;\n    int pos;\n    int i;\n    pos = 0;\n    scanf(\"%i\",&largo);\n    scanf(\"%s\",&direction);\n    for(i=0; i < largo; i++)\n    {\n        scanf(\"%d\",&step[i]);\n        marked[i]=0;\n    }\n    while(1)\n    {\n        if(direction[pos]=='>')\n        {\n            pos = pos + step[pos];\n            if(pos > largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n            marked[pos] = marked[pos] + 1;\n        }\n        else\n        {\n            pos = pos - step[pos];\n            if(pos > largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n            marked[pos] = marked[pos] + 1;\n        }\n        if(pos > largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n        if(marked[pos] == 2)\n        {\n            printf(\"INFINITE\");\n            return 0;\n        }\n    }\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int largo;\n    char direction[100000];\n    int step[100000];\n    int marked[100000];\n    marked[0] = 1;\n    int pos;\n    int i;\n    pos = 0;\n    scanf(\"%i\",&largo);\n    scanf(\"%s\",&direction);\n    for(i=0; i < largo; i++)\n    {\n        scanf(\"%d\",&step[i]);\n        marked[i]=0;\n    }\n    while(1)\n    {\n        if(direction[pos]=='>')\n        {\n            pos = pos + step[pos];\n            if(pos >= largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n            marked[pos] = marked[pos] + 1;\n        }\n        else\n        {\n            pos = pos - step[pos];\n            if(pos >= largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n            marked[pos] = marked[pos] + 1;\n        }\n        if(pos >= largo || pos < 0)\n        {\n            printf(\"FINITE\");\n            return 0;\n        }\n        if(marked[pos] == 2)\n        {\n            printf(\"INFINITE\");\n            return 0;\n        }\n    }\n}\n"}
{"similarity_score": 0.996116504854369, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9e6f8ecfd6a1603043d78c12fd3f2512", "bug_code_uid": "2e4f9af2140f295f6aae5eda5cde842a", "src_uid": "3bff9b69423cf6c8425e347a4beef96b", "apr_id": "eb669107468a54ea0b4013fe8e46828d", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "    #include <stdio.h>\n    int main()\n    {\n        int n, i, flag;\n        scanf(\"%d\", &n);\n        while(n--)\n        {\n            char s[25], s1[15];\n            int a, b;\n            scanf(\" %[^\\n]\", &s);\n            sscanf(s, \" %s %d %d\", &s1, &a, &b);\n            if(a >= 2400 && b > a)\n            {\n                flag = 1;\n            }\n        }\n        if(flag == 1)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n        return 0;\n    }", "fixed": "    #include <stdio.h>\n    int main()\n    {\n        int n, i, flag = 0;\n        scanf(\"%d\", &n);\n        while(n--)\n        {\n            char s[25], s1[15];\n            int a, b;\n            scanf(\" %[^\\n]\", &s);\n            sscanf(s, \" %s %d %d\", &s1, &a, &b);\n            if(a >= 2400 && b > a)\n            {\n                flag = 1;\n            }\n        }\n        if(flag == 1)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n        return 0;\n    }"}
{"similarity_score": 0.9950738916256158, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "213b52edfe4421769938d7749d9ae124", "bug_code_uid": "f461769ecdc4978bcfb532f6d3663e7b", "src_uid": "c21a84c4523f7ef6cfa232cba8b6ee2e", "apr_id": "eb2cc7eea49384b78bec73ad62a19312", "difficulty": 1100, "tags": ["sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int i,a,b,n,q=0,w=0;\n     scanf(\"%d\",&n);\n     for(i=0;i<n;i++)\n     {\n          scanf(\"%d%d\",&a,&b);\n          if(a>b)\n            q++;\n          else\n            w++;\n     }\n     if(q>0&&w>0)\n          printf(\"Happy Alex\");\n     else\n          prinf(\"Poor Alex\");\n}", "fixed": "#include<stdio.h>\nint main()\n{\n     int i,a,b,n,q=0,w=0;\n     scanf(\"%d\",&n);\n     for(i=0;i<n;i++)\n     {\n          scanf(\"%d%d\",&a,&b);\n          if(a>b)\n            q++;\n          else\n            w++;\n     }\n     if(q>0&&w>0)\n          printf(\"Happy Alex\");\n     else\n          printf(\"Poor Alex\");\n\n}\n"}
{"similarity_score": 0.9982788296041308, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "83659e4fb7ca0fa98a34f0ae31dc9add", "bug_code_uid": "b54c920a04038a72ea92c369d247b76a", "src_uid": "82176739a1dd4fe85ec059058a00fbb9", "apr_id": "307dfd3812d1d95799c603dbb80457d5", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,top=1,count,flag;\n    scanf(\"%d\",&n);\n    int st[n],step[n],ans[n];\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&st[i]);\n\n    for(i=1;i<=1;i++)\n        ans[i]=-1;\n\n    for(i=1;i<=n;i++)\n    {\n        flag=0;\n        count=1;\n        scanf(\"%d\",&step[i]);\n        if(ans[step[i]]==-1)\n        {\n            while(st[top]!=step[i])\n            {\n                ans[st[top++]]=0;\n                count++;\n            }\n            ans[st[top++]]=count;\n        }\n    }\n    for(i=1;i<=n;i++)\n        printf(\"%d \",ans[step[i]]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,top=1,count,flag;\n    scanf(\"%d\",&n);\n    int st[n],step[n],ans[n];\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&st[i]);\n\n    for(i=1;i<=n;i++)\n        ans[i]=-1;\n\n    for(i=1;i<=n;i++)\n    {\n        flag=0;\n        count=1;\n        scanf(\"%d\",&step[i]);\n        if(ans[step[i]]==-1)\n        {\n            while(st[top]!=step[i])\n            {\n                ans[st[top++]]=0;\n                count++;\n            }\n            ans[st[top++]]=count;\n        }\n    }\n    for(i=1;i<=n;i++)\n        printf(\"%d \",ans[step[i]]);\n    return 0;\n}\n"}
{"similarity_score": 0.8971596474045054, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "e8bb9f4404a35cc6eb1d76b2430d1e38", "bug_code_uid": "5f22ce59842bca6764fe716148fbaea1", "src_uid": "ce27e56433175ebf9d3bbcb97e71091e", "apr_id": "6e982bc90734f9d7be74856afd008cea", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\nint compare (const void * a, const void * b)\n{\n  return ( *(int*)a - *(int*)b );\n}\nint main(void) \n{\nint n,x,c[100050]={0},i;\n    unsigned int t=0;\n    scanf(\"%d %d\",&n,&x);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&c[i]);\n    }\n        qsort(c,n,sizeof(int),compare);\n    i=0;\n    while(i<n)  \n    {\n        t=t+(c[i]*x);\n        if(x>1)\n        {\n            x--;\n        }\n        i++;\n    }\n    printf(\"%d\",t);\n    \n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<stdlib.h>\n int longlongcompare (const void * a, const void * b)\n{\n  return ( *(long long int*)a - *(long long int*)b );\n}\nint main(void) \n{\nlong long int n,x,c[100050]={0},i;\n    long long  int t=0;\n    scanf(\"%lld %lld\",&n,&x);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&c[i]);\n    }\n        qsort(c,n,sizeof(long long int),longlongcompare);\n    i=0;\n    while(i<n)  \n    {\n        t=t+(c[i]*x);\n        if(x>1)\n        {\n            x--;\n        }\n        i++;\n    }\n    printf(\"%lld\",t);\n \n    return 0;\n}"}
{"similarity_score": 0.949812734082397, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "8e973bf153c08097313152d7a0840af4", "bug_code_uid": "0865a27a424317d05ff9076bd1eab207", "src_uid": "204e75827b7016eb1f1fbe1d6b60b03d", "apr_id": "2ff52ace59451b4dcf77122a28c617fe", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nlong gcd(long a, long b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nlong digitsSum(long n)\r\n{\r\n    long sum=0,m;\r\n    while(n>0)    \r\n{    \r\nm=n%10;    \r\nsum=sum+m;    \r\nn=n/10;    \r\n}   \r\nreturn sum;\r\n}\r\nint main()\r\n{\r\n   long test;\r\n   scanf(\"%ld\",&test);\r\n   while(test--)\r\n   {\r\n       long a,b,res;\r\n       scanf(\"%ld\",&a);\r\n       while(1)\r\n       {\r\n       b = digitsSum(a);\r\n       res = gcd(a,b);\r\n       if(res>1)\r\n       {\r\n           printf(\"%ld\\n\",a);\r\n           break;\r\n       }\r\n       else\r\n       {\r\n           a++;\r\n       }\r\n       \r\n       }\r\n       \r\n   }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\nlong long gcd(long long a, long long b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nlong long digitsSum(long long n)\r\n{\r\n    long long sum=0,m;\r\n    while(n>0)    \r\n{    \r\nm=n%10;    \r\nsum=sum+m;    \r\nn=n/10;    \r\n}   \r\nreturn sum;\r\n}\r\nint main()\r\n{\r\n   long long test;\r\n   scanf(\"%lld\",&test);\r\n   while(test--)\r\n   {\r\n       long long a,b,res;\r\n       scanf(\"%lld\",&a);\r\n       while(1)\r\n       {\r\n       b = digitsSum(a);\r\n       res = gcd(a,b);\r\n       if(res>1)\r\n       {\r\n           printf(\"%lld\\n\",a);\r\n           break;\r\n       }\r\n       else\r\n       {\r\n           a++;\r\n       }\r\n       \r\n       }\r\n       \r\n   }\r\n}"}
{"similarity_score": 0.9890710382513661, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c49723295d7d409999f6f5436c63ba65", "bug_code_uid": "c5bc00c093eabb5d8f521e8bea3d6d8e", "src_uid": "6bd7cab93a779e066af39a671aba3239", "apr_id": "51efb5098859043c6ca68f3b76b3793b", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    printf(\"%d\\n\", (n - 1) / 2 + 1);\n    int x = 1, y = 1;\n    printf(\"%d %d\\n\", x, y);\n    for(int i = 1; i < n; ++i) {\n        if(i & 1) {\n            y += 1;\n            printf(\"%d %d\\n\", x, y);\n        } else {\n            x += 1;\n            printf(\"%d %d\\n\", x, y);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    printf(\"%d\\n\", n / 2 + 1);\n    int x = 1, y = 1;\n    printf(\"%d %d\\n\", x, y);\n    for(int i = 1; i < n; ++i) {\n        if(i & 1) {\n            y += 1;\n            printf(\"%d %d\\n\", x, y);\n        } else {\n            x += 1;\n            printf(\"%d %d\\n\", x, y);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9987730061349693, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7c54da341dad7b5b005736d0cba3d0bd", "bug_code_uid": "563d5967e2514194bdfe014668c0eee7", "src_uid": "33e751f5716cbd666be36ab8f5e3977e", "apr_id": "b90ccaf755c10b200e96fce02dfaf5c9", "difficulty": 800, "tags": ["brute force", "combinatorics", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define N 9\r\nint Func_1(int arr1[], int n, int j);\r\nint Func_2(int n);\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++)\r\n\t{\r\n\t\tint n;\r\n\t\tint arr1[N];\r\n\t\tint arr2[N];\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (int j = 0; j < n; j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &arr1[j]);\r\n\t\t}\r\n\t\tint index = 0;\r\n\t\tfor (int k = 0; k < 10; k++)\r\n\t\t{\r\n\t\t\tif (Func_1(arr1, n, k))\r\n\t\t\t{\r\n\t\t\t\tarr2[index] = k;\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint num1 = Func_2(index) / (Func_2(2) * Func_2(index - 2));\r\n\t\tprintf(\"%d\", num1*6);\r\n\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\treturn 0;\r\n}\r\n \r\nint Func_1(int arr1[], int n,int j)\r\n{\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tif (arr1[i] == j)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nint Func_2(int n)\r\n{   \r\n\tint sum = 1;\r\n\tfor (int i = 1; i <= n; i++)\r\n\t{\r\n\t\tsum = sum * i;\r\n\t}\r\n\treturn sum;\r\n}", "fixed": "#include <stdio.h>\r\n#define N 9\r\nint Func_1(int arr1[], int n, int j);\r\nint Func_2(int n);\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (int i = 0; i < t; i++)\r\n\t{\r\n\t\tint n;\r\n\t\tint arr1[N];\r\n\t\tint arr2[N];\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (int j = 0; j < n; j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &arr1[j]);\r\n\t\t}\r\n\t\tint index = 0;\r\n\t\tfor (int k = 0; k < 10; k++)\r\n\t\t{\r\n\t\t\tif (Func_1(arr1, n, k))\r\n\t\t\t{\r\n\t\t\t\tarr2[index] = k;\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint num1 = Func_2(index) / (Func_2(2) * Func_2(index - 2));\r\n\t\tprintf(\"%d\\n\", num1*6);\r\n\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\treturn 0;\r\n}\r\n \r\nint Func_1(int arr1[], int n,int j)\r\n{\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tif (arr1[i] == j)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nint Func_2(int n)\r\n{   \r\n\tint sum = 1;\r\n\tfor (int i = 1; i <= n; i++)\r\n\t{\r\n\t\tsum = sum * i;\r\n\t}\r\n\treturn sum;\r\n}"}
{"similarity_score": 0.996996996996997, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a493ebd3c16dbf08da5fb0c461bb659d", "bug_code_uid": "9407ec146a2199473403e926af96972d", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "9275b3752b4a885dd02b90be25e9880e", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int loop, length, check=0;\n    scanf(\"%d\",&loop);\n    for(int i=0; i<loop; i++)\n    {\n        scanf(\"%d\",&length);\n        char str[length];\n        scanf(\"%s\", str);\n        if(length<8) {printf(\"NO\\n\"); continue;}\n        for(int i=length-1; i>=0; i--)\n        {\n            if(str[i] == '8' && length-i>=8)\n            {printf(\"YES\\n\");check=1; break;}\n        }\n        if(check!=1) printf(\"NO\\n\");\n        check=0;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int loop, length, check=0;\n    scanf(\"%d\",&loop);\n    for(int i=0; i<loop; i++)\n    {\n        scanf(\"%d\",&length);\n        char str[length];\n        scanf(\"%s\", str);\n        if(length<8) {printf(\"NO\\n\"); continue;}\n        for(int i=length-1; i>=0; i--)\n        {\n            if(str[i] == '8' && length-i>=11)\n            {printf(\"YES\\n\");check=1; break;}\n        }\n        if(check!=1) printf(\"NO\\n\");\n        check=0;\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8466453674121406, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "1428b904b7d8599c2c2b76b511e5960d", "bug_code_uid": "d0f18f5c7246f1e6906f9c3d94b215d5", "src_uid": "e7ed5a733e51b6d5069769c3b1d8d22f", "apr_id": "48b527e6f90c472d0ed820d739e9c75a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n          in n,h;\n          scanf(\"%d%d\",&n,&h);\n          int a[n],c=0;\n          \n          for(int i=0;i<n;i++)\n          {\n                    c++;\n                    if(a[i]>h)\n                              c++;\n          }\n          \n          printf(\"c\");\n          \n}", "fixed": "#include<stdio.h>\nint main(){\n          int n,h;\n          scanf(\"%d%d\",&n,&h);\n          int a[n],c=0;\n          \n          for(int i=0;i<n;i++)\n            {\n                scanf(\"%d\",&a[i]);\n                if(a[i]>h)\n                    c++;\n                c++;\n            }\n          printf(\"%d\",c);\n          \n}"}
{"similarity_score": 0.9010309278350516, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d1e68eb6d1bfd546cd4e1c10ee2754ca", "bug_code_uid": "d892d2cdb5890a37e59dca82be993b96", "src_uid": "02a94c136d3fb198025242e91264823b", "apr_id": "efbf830a05eca78f5004070b897607bc", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nchar z[101], c;\nint i, n, j, k, r, flag, lung;\n\nint main()\n{\n    scanf(\"%d\", &k);\n    for ( r = 1; r <= k; r++)\n    {\n    scanf(\"%s\", &z);\n    n = strlen(z);\n    for(i = 0; i < n-1; i++)\n    for (j = 0; j < n-1; j++)\n    if (z[j] > z[j + 1])\n    {\n        c = z[j]; z[j] = z[j+1]; z[j+1] = c;\n\n    }\n    lung = z[n-1] - z[0];\n    if (lung == n - 1) printf (\"YES\\n\"); else printf (\"NO\\n\");\n    }\n    \n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nchar z[101], c;\nint i, n, j, k, r, flag, lung;\n\nint main()\n{\n    scanf(\"%d\", &k);\n    for ( r = 1; r <= k; r++)\n    {\n    scanf(\"%s\", &z);\n    n = strlen(z);\n    for(i = 0; i < n-1; i++)\n    for (j = 0; j < n-1; j++)\n    if (z[j] > z[j + 1])\n    {\n        c = z[j]; z[j] = z[j+1]; z[j+1] = c;\n\n    }\n    lung = z[n-1] - z[0];\n    flag = 0;\n    for(i = 0; i< n-1; i++) if(z[i] == z[i + 1]) {flag = 1; break;}\n    if (lung == n - 1 && flag == 0) printf (\"YES\\n\"); else printf (\"NO\\n\");\n    }\n    \n    return 0;\n}\n\n\n"}
{"similarity_score": 0.3711747285291214, "equal_cnt": 22, "replace_cnt": 18, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "0a19430997b75b05d3c48752e63f96d9", "bug_code_uid": "4b1c5a44307d1fd942b1f9e807571f8a", "src_uid": "0f7ceecdffe11f45d0c1d618ef3c6469", "apr_id": "2cd6a474d4cef47c337f0eba4be26c24", "difficulty": 1300, "tags": ["number theory", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint t,p;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tp=0;\n\t    int a=(int)pow(x,1.0/3);\n\t    for(int i=2;i<=a;i++){\n\t       for(int j=i+1;j<=x/6;j++)\n\t        {\n\t\t\t  int k=x/(i*j);\n\t\t\t  if(k==i||k==j||k<2)continue;\n\t\t\t  if((i*j*k)==x)\n\t\t\t  {\n\t\t\t  \tprintf(\"YES\\n\");\n\t\t\t  \tprintf(\"%d %d %d\\n\",i,j,k);\n\t\t\t    p=1;\n\t\t\t    break;\n\t\t\t  }\n\t\t\t} \n\t\t\tif(p==1)break;\n\t\t}\n\t   if(p==0)printf(\"NO\\n\");\n\t\t}\n\treturn 0;\n } ", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    long long int x,a,i,b,c;\n\t    scanf(\"%lld\",&x);\n\t    for(i=2;i<=sqrt(x);i++)\n\t    \tif(x%i==0) break;\n\t    if(i>sqrt(x))printf(\"NO\\n\");\n\t    else{\n\t    \ta=i;\n\t    \tb=x/i;\n\t    \tfor(i=a+1;i<=sqrt(b);i++)\n\t    \t   if(b%i==0)break;\n\t    \tif(i>sqrt(b))printf(\"NO\\n\");\n\t    \telse{\n\t    \t     c=b/i;\n\t    \t     b=i;\n\t    \t     if(c<=b)printf(\"NO\\n\");\n\t    \t     else{\n\t    \t     \tprintf(\"YES\\n%lld %lld %lld\\n\",a,b,c);\n\t\t\t\t }\n\t\t\t}\n\t   \n\t\t}\n\t    \t\n\t\n\t}\n } "}
{"similarity_score": 0.8604336043360433, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "5a63a06303c57120dbd5e0df5e9fd372", "bug_code_uid": "2676c4f880bc0361549d1334afc169c9", "src_uid": "dc31adef80f06897ea2f5ef76854bcf1", "apr_id": "34a73e803d6c9847db76d7ba58d0c2d0", "difficulty": 1200, "tags": ["implementation", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main( void )\n{\n    short n, m;\n    short i, j;\n    char chessMan[2], cell;\n    short index;\n\n    scanf( \"%hi %hi\", &n, &m );\n\n    chessMan[0] = 'B';\n    chessMan[1] = 'W';\n    index = 0;\n\n    for( i = 0; i < n; i++ )\n    {\n        getchar();\n        for( j = 0; j < m; j++ )\n        {\n            scanf( \"%c\", &cell );\n\n            if( cell == '-' )\n            {\n                printf( \"-\" );\n            }\n            else\n            {\n                printf( \"%c\", chessMan[index] );\n            }\n\n            index = 1 - index;\n        }\n        printf( \"\\n\" );\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main( void )\n{\n    short n, m;\n    short i, j;\n    char chessMan[2], cell;\n    short index, temp;\n\n    scanf( \"%hi %hi\", &n, &m );\n\n    chessMan[0] = 'B';\n    chessMan[1] = 'W';\n    index = 0;\n\n    for( i = 0; i < n; i++ )\n    {\n        getchar();\n        \n        temp = index;\n        \n        for( j = 0; j < m; j++ )\n        {\n            scanf( \"%c\", &cell );\n\n            if( cell == '-' )\n            {\n                printf( \"-\" );\n            }\n            else\n            {\n                printf( \"%c\", chessMan[index] );\n            }\n\n            index = 1 - index;\n        }\n        \n        index = 1 - temp; /* to make each row start with different color \n                           * from its previous\n                           */\n        printf( \"\\n\" );\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.723092998955068, "equal_cnt": 17, "replace_cnt": 5, "delete_cnt": 8, "insert_cnt": 3, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "b36c28903b5a6c666918cc9bb058363d", "bug_code_uid": "a9387f329e35c587cf46c5f2e64e67e5", "src_uid": "4aaa33f77fe1c89ae477bd5cfa04f0bf", "apr_id": "9baa8136fd8fbff2476f7370de4454e2", "difficulty": 800, "tags": ["data structures", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n, a[200000], i, j, x;\r\n        scanf(\"%d\", &n);\r\n        x = n;\r\n        for(i = n-1; i>=0; i--)\r\n            scanf(\"%d\", &a[i]);\r\n        for(i = 0; i<x; i++)\r\n        {\r\n            for(j = i+1; j<x; j++)\r\n            {\r\n                if(a[i]==a[j])\r\n                {\r\n                    x = j+1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\", n-i);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n, a[200000], i, x[200000];\r\n        scanf(\"%d\", &n);\r\n        for(i=n-1; i>=0; i--)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n            x[a[i]]=0;\r\n        }\r\n        for(i=0; i<n; i++)\r\n        {\r\n            x[a[i]]+=1;\r\n            if(x[a[i]]>1)\r\n                break;\r\n\r\n        }\r\n        printf(\"%d\\n\", n-i);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.5111427216690374, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "d391d9805e1dcb38db682082423a0457", "bug_code_uid": "4ab89792747ff7f512ad858f6f41f18e", "src_uid": "2bb893703cbffe9aeaa0bed02f42a05c", "apr_id": "7df375e5174c10aad0f21c9128d368fc", "difficulty": 1300, "tags": ["implementation", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint gcd(int a, int b);\nint lcm(int a, int b);\nint divisableTo2Or3(int a);\n\nint main(int argc, const char * argv[]) {\n    int n,i;\n    int a[100000];\n    \n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    \n    int max = 1;\n    \n    for (i = 0; i <n; i++)\n    {\n        max = lcm(max, a[i]);\n    }\n    \n    int temp = 0;\n    int ok = 1;\n    for (i = 0; i <n; i++)\n    {\n        temp = max / a[i];\n        if (!divisableTo2Or3(temp))\n            ok = 0;\n    }\n    \n    if (ok)\n        printf(\"Yes\");\n    else\n        printf(\"No\");\n    \n    return 0;\n}\n\nint gcd(int a, int b)\n{\n    for (;;)\n    {\n        if (a == 0) return b;\n        b %= a;\n        if (b == 0) return a;\n        a %= b;\n    }\n}\n\nint lcm(int a, int b)\n{\n    int temp = gcd(a,b);\n    return (a*b/temp);\n}\n\nint divisableTo2Or3(int a)\n{\n    for (;;)\n    {\n        if ((a % 2 != 0) && (a % 3 !=0))\n            break;\n        if (a % 2 == 0) a = a/2;\n        if (a%3 == 0) a = a/3;\n    }\n    \n    if (a == 1)\n        return 1;\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint gcd(int a, int b);\n//int lcm(int a, int b);\nint divisableTo2Or3(int a);\n\nint main(int argc, const char * argv[]) {\n    int n,i, uscln, ok = 1;\n    int a[100000];\n    \n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    \n    uscln = a[0];\n    for (i = 1; i <n; i++)\n    {\n        uscln = gcd(uscln, a[i]);\n        if ((!divisableTo2Or3(a[i]/uscln)) || (!divisableTo2Or3(a[i-1]/uscln)))\n        {\n            ok = 0;\n            break;\n        }\n    }\n    \n    if (ok)\n        printf(\"Yes\");\n    else\n        printf(\"No\");\n    \n    return 0;\n}\n\nint gcd(int a, int b)\n{\n    for (;;)\n    {\n        if (a == 0) return b;\n        b %= a;\n        if (b == 0) return a;\n        a %= b;\n    }\n}\n\n//int lcm(int a, int b)\n//{\n//    int temp = gcd(a,b);\n//    return (a*b/temp);\n//}\n\nint divisableTo2Or3(int a)\n{\n    for (;;)\n    {\n        if ((a % 2 != 0) && (a % 3 !=0))\n            break;\n        if (a % 2 == 0) a = a/2;\n        if (a%3 == 0) a = a/3;\n    }\n    \n    if (a == 1)\n        return 1;\n    return 0;\n}"}
{"similarity_score": 0.9737510584250635, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "cdefec08f5bd9a8de019e2803dd96988", "bug_code_uid": "e061059fb3ed348d3f5a6584e7c7f870", "src_uid": "6d4744d7356e709f73891270becd14e3", "apr_id": "9086c98b97f41df7f546456815c4b0c5", "difficulty": 800, "tags": ["brute force", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint consec(unsigned arr[],unsigned n)\r\n{\r\n    int result=1;\r\n    int j;\r\n    for(int i=0;i<n-1;i++)\r\n    {\r\n        if(arr[i]==arr[i+1])\r\n        {j=1;\r\n            while(arr[i]==arr[i+1]){i++;j++;}\r\n            if(result<j) result=j;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nint main()\r\n{   unsigned t,n;\r\n    scanf(\"%u\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%u\",&n);\r\n        unsigned arr[n];\r\n        for(int i=0;i<n;i++)scanf(\" %u\",arr+i);\r\n        printf(\"%u\\n\",consec(arr,n));\r\n        //if(arr[4]==arr[5])printf(\"true\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nunsigned consec(unsigned arr[],unsigned n)\r\n{\r\n    unsigned result=1;\r\n    int j;\r\n    for(int i=0;i<n-1;i++)\r\n    {\r\n        if(arr[i]==arr[i+1])\r\n        {j=1;\r\n            while(arr[i]==arr[i+1]&&i<n-1){i++;j++;}\r\n            if(result<j) result=j;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nint main()\r\n{   unsigned t,n;\r\n    scanf(\"%u\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%u\",&n);\r\n        unsigned arr[n];\r\n        for(int i=0;i<n;i++)scanf(\" %u\",arr+i);\r\n        printf(\"%u\\n\",consec(arr,n));\r\n        //if(arr[4]==arr[5])printf(\"true\");\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.5280373831775701, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "235413e69b8b5c3c5235ed10cc7e6b20", "bug_code_uid": "a2d075c8072b28e5655f77d50e780f29", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "d5c75a68c75a6a86f668789eeeabf305", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tlong int l,r;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++){\n\tscanf(\"%ld %ld\",&l,&r);\n\tfor(int i=l+1;i<=r;i++){\n\t\tif(i%l==0){\n\t\t\tprintf(\"%d %d \\n\",l,i);\n\t\t\tbreak;\n\t\t}\n\t}\n\t}\n\treturn 0;\n}\n", "fixed": "    #include<stdio.h>\n    int main()\n    {\n    \tint t;\n    \tlong int l,r;\n    \tscanf(\"%d\",&t);\n    \tfor(int i=0;i<t;i++){\n    \tscanf(\"%ld %ld\",&l,&r);\n    \tprintf(\"%d %d \\n\",l,2*l);\n    \t}\n    \treturn 0;\n    }"}
{"similarity_score": 0.9978768577494692, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b906d6bc03e100a966687795fd39af0b", "bug_code_uid": "b0d69f2f8a5d067903fdf979081139e0", "src_uid": "e5e937f080b20eaec5f12f1784ae6427", "apr_id": "9c92908233ae58c06e2266443ca44806", "difficulty": 1400, "tags": ["dp", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int k,n;\n    scanf(\"%d\",&k);\n    for(int i=0;i<=k;i++){\n    scanf(\"%d\",&n);\n    int b=n%11;\n    int a=n-b*111;\n    if(a>=0 && a%11==0)\n        printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n    }\n} \n\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int k,n;\n    scanf(\"%d\",&k);\n    for(int i=0;i<k;i++){\n    scanf(\"%d\",&n);\n    int b=n%11;\n    int a=n-b*111;\n    if(a>=0 && a%11==0)\n        printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n    }\n} \n\n"}
{"similarity_score": 0.5702410640066501, "equal_cnt": 26, "replace_cnt": 16, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "7ec7a6aa67f811c6728425d245c769ff", "bug_code_uid": "960c7be25da76850123fcf804ba66f12", "src_uid": "fd63aeefba89bef7d16212a0d9e756cd", "apr_id": "31abb7e32101ad7b421bd1e8962fbf5b", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char a[100001],b[100001];\n    int i,j,x,y,n=0,m=0;\n    scanf(\"%s%s\",a,b);\n    x=strlen(a);\n    y=strlen(b);\n    for(i=0;i<x;i++)\n    {\n        if(a[i]=='0')\n            n++;\n        else break;\n    }\n    for(j=0;j<y;j++)\n    {\n        if(b[i]=='0')\n            m++;\n        else break;\n    }\n    if(x-n>y-m)\n        printf(\">\\n\");\n    else if(x-n<y-m)\n        printf(\"<\\n\");\n    else\n    {\n            if(strcmp(a+n,b+m)==0)\n                printf(\"=\\n\");\n            else if(strcmp(a+n,b+m)>0)\n                printf(\">\\n\");\n            else\n                printf(\"<\\n\");\n    }\n    return 0;\n    }\n", "fixed": "\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char arr[1000011],brr[1000011];\n    long long int n,i=0,j=0,a,b,ln1,ln2;\n    scanf(\"%s %s\", &arr, &brr);\n    ln1 = strlen(arr);\n    ln2 = strlen(brr);\n\n    while(arr[i]=='0') i++;\n    while(brr[j]=='0') j++;\n\n    if(ln1-i > ln2-j)\n        printf(\">\\n\");\n    else if(ln1-i < ln2-j)\n        printf(\"<\\n\");\n    else{\n        if(strcmp(arr+i, brr+j)==0)\n            printf(\"=\\n\");\n        else if(strcmp(arr+i, brr+j)>0)\n            printf(\">\\n\");\n        else\n            printf(\"<\\n\");\n    }\n\n\n}\n"}
{"similarity_score": 0.7827395885599598, "equal_cnt": 42, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 30, "fix_ops_cnt": 41, "lang": "GNU C11", "fix_code_uid": "10cfdf5e212e746e4d27f3a782004f7c", "bug_code_uid": "3776d19e712f55ea2935512f652013c1", "src_uid": "2c67ee95eba7ffbbed99cb488abb5f3d", "apr_id": "19188d0f92533e5e6fb4d0c04e14b6cb", "difficulty": 1000, "tags": ["geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint cmp(const void *a,const void *b)\r\n{\r\n    return *(int *)a-*(int *)b;\r\n}\r\nint max(int a,int b)\r\n{\r\n    return a>b?a:b;\r\n}\r\nint main()\r\n{\r\n    int max(int a,int b);\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++)\r\n    {\r\n        int a[8];\r\n        int u=0;\r\n        int w,y;\r\n        scanf(\"%d%d\",&w,&y);\r\n        for(int j=0;j<4;j++)\r\n        {\r\n\r\n            int k;\r\n            scanf(\"%d\",&k);\r\n            int A[10000];\r\n            for(int z=0;z<k;z++)\r\n            {\r\n                scanf(\"%d\",&A[z]);\r\n            }\r\n            a[u]=A[0];\r\n            u++;\r\n            a[u]=A[k-1];\r\n            u++;\r\n        }\r\n\r\n       int sum[4]={0},max1=0;\r\n        sum[0]=(a[1]-a[0])*y;sum[1]=(a[3]-a[2])*y;\r\n        sum[2]=(a[5]-a[4])*w;sum[3]=(a[7]-a[6])*w;\r\n        max1=max(max(sum[0],sum[1]),max(sum[2],sum[3]));\r\n        printf(\"%d\\n\",max1);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n    #include <stdlib.h>\r\n    \r\n    long long max(long long a,long long b)\r\n    {\r\n        return a>b?a:b;\r\n    }\r\n    int main()\r\n    {\r\n        long long max(long long a,long long b);\r\n        int t;\r\n        scanf(\"%d\",&t);\r\n        for(int i=0;i<t;i++)\r\n        {\r\n            long long a[8];\r\n            int u=0;\r\n            long long w,y;\r\n            scanf(\"%lld%lld\",&w,&y);\r\n            for(int j=0;j<4;j++)\r\n            {\r\n\r\n                int k;\r\n                scanf(\"%d\",&k);\r\n                long long A[k];\r\n                for(int z=0;z<k;z++)\r\n                {\r\n                    scanf(\"%lld\",&A[z]);\r\n                }\r\n                a[u]=A[0];\r\n                u++;\r\n                a[u]=A[k-1];\r\n                u++;\r\n            }\r\n\r\n           long long sum[4]={0},max1=0;\r\n            sum[0]=(a[1]-a[0])*y;sum[1]=(a[3]-a[2])*y;\r\n            sum[2]=(a[5]-a[4])*w;sum[3]=(a[7]-a[6])*w;\r\n            max1=max(max(sum[0],sum[1]),max(sum[2],sum[3]));\r\n            printf(\"%lld\\n\",max1);\r\n        }\r\n        return 0;\r\n    }"}
{"similarity_score": 0.9352037408149633, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "5f5901140064d3ed24c80c7a5be3ea1e", "bug_code_uid": "f63ea0455b086b37794bb4d85dfc2984", "src_uid": "6ea491419f3ea387cf2aded8a8db914d", "apr_id": "de27226a9283cc9ce687a54a53273188", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//keep code in range\r\n//think over before coding\r\n\r\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint t,i,j,n,a,b;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t{\r\n\t\tscanf(\"%d %d %d\",&n,&a,&b);\r\n\t\tint num[n+1];\r\n\t\tfor(j=1;j<=n;j++)\r\n\t\t\tnum[j]=j;\r\n\t\tif((2*a<=n&&2*b>n)||(2*a>n&&2*b<=n))\r\n\t\t{\r\n\t\t\tint k,num1[n/2],num2[n/2];\r\n\t\t\tnum1[0]=a,num2[0]=b;\r\n\t\t\tfor(j=n,k=1;j>=0&&2*k<n;j--)\r\n\t\t\t\tif(num[j]!=b)\r\n\t\t\t\t{\r\n\t\t\t\t\tnum1[k++]=num[j];\r\n\t\t\t\t\tnum[j]=0;\r\n\t\t\t\t}\r\n\t\t\tfor(j=1,k=1;j<=n&&2*k<n;j++)\r\n\t\t\t\tif(num[j]&&num[j]!=a)\r\n\t\t\t\t\tnum2[k++]=num[j];\r\n\t\t\tfor(k=0;2*k<n;k++)\r\n\t\t\t\tprintf(\"%d \",num1[k]);\r\n\t\t\tfor(k=0;2*k<n;k++)\r\n\t\t\t\tprintf(\"%d \",num2[k]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t\tprintf(\"-1\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "//keep code in range\r\n//think over before coding\r\n\r\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tint t,i,j,n,a,b;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t{\r\n\t\tscanf(\"%d %d %d\",&n,&a,&b);\r\n\t\tint num[n+1];\r\n\t\tfor(j=1;j<=n;j++)\r\n\t\t\tnum[j]=j;\r\n\t\tif((2*a<=n&&2*b>n)||(2*a>n&&2*b<=n))\r\n\t\t{\r\n\t\t\tif(2*a>n)\r\n\t\t\t\tif(!(a==n/2+1&&b==n/2))\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"-1\\n\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\tint k,num1[n/2],num2[n/2];\r\n\t\t\tnum1[0]=a,num2[0]=b;\r\n\t\t\tfor(j=n,k=1;j>=0&&2*k<n;j--)\r\n\t\t\t\tif(num[j]!=b)\r\n\t\t\t\t{\r\n\t\t\t\t\tnum1[k++]=num[j];\r\n\t\t\t\t\tnum[j]=0;\r\n\t\t\t\t}\r\n\t\t\tfor(j=1,k=1;j<=n&&2*k<n;j++)\r\n\t\t\t\tif(num[j]&&num[j]!=a)\r\n\t\t\t\t\tnum2[k++]=num[j];\r\n\t\t\tfor(k=0;2*k<n;k++)\r\n\t\t\t\tprintf(\"%d \",num1[k]);\r\n\t\t\tfor(k=0;2*k<n;k++)\r\n\t\t\t\tprintf(\"%d \",num2[k]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\telse\r\n\t\t\tprintf(\"-1\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9245283018867925, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "eeda2291492aac1a65ce9870ba8294e7", "bug_code_uid": "03f56b17634beddc27f2ea98e6dcbfb4", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "240b4c74c6ab345e80d6b674c6103499", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint i,j,n,flag1,flag2=0;\n\tscanf(\"%d\",&n);\n\tchar a[n][6];\n\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%s\",a[i]);\n\t\tflag1 = 0;\n\t\tfor(j=0;j<5;j++) {\n//            printf(\"i=%d j=%d flg1=%d flg2=%d char=%c\\n\",i,j,flag1,flag2,a[i][j]);\n\t\t\tif(a[i][j]=='O') {\n//\t\t\t    printf(\"YAY\\n\");\n\t\t\t\tif(flag1 == 1) {\n\t\t\t\t\tif(flag2==0) {\n\t\t\t\t\t\ta[i][j] = '+';\n\t\t\t\t\t\ta[i][j-1] = '+';\n\t\t\t\t\t}\n\t\t\t\t\tflag2 = 1;\n\t\t\t\t}\n\t\t\t\tflag1 = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tflag1 = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(flag2) printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%s\\n\",a[i]);\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint i,j,n,flag1,flag2=0;\n\tscanf(\"%d\",&n);\n\tchar a[n][6];\n\n\tfor(i=0;i<n;i++) {\n\t\tscanf(\"%s\",a[i]);\n\t\tflag1 = 0;\n\t\tfor(j=0;j<5;j++) {\n//            printf(\"i=%d j=%d flg1=%d flg2=%d char=%c\\n\",i,j,flag1,flag2,a[i][j]);\n\t\t\tif(a[i][j]=='O') {\n//\t\t\t    printf(\"YAY\\n\");\n\t\t\t\tif(flag1 == 1) {\n\t\t\t\t\tif(flag2==0) {\n\t\t\t\t\t\ta[i][j] = '+';\n\t\t\t\t\t\ta[i][j-1] = '+';\n\t\t\t\t\t}\n\t\t\t\t\tflag2 = 1;\n\t\t\t\t}\n\t\t\t\tflag1 = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tflag1 = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(flag2){ printf(\"YES\\n\");\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%s\\n\",a[i]);\n\t\t}\n\telse printf(\"NO\\n\");\n\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.951048951048951, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "dd1421a74f6d00b91baa89ff6903c124", "bug_code_uid": "5d0f678bd312ae7ebde1251f5441ae9b", "src_uid": "a9cd97046e27d799c894d8514e90a377", "apr_id": "481bb405d11162fdbfd26b72067a9ca7", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long  a,b,c,i,j,k,m;\n    scanf(\"%lld\",&a);\n    for(i=1;i<=a;i++)\n    {\n        scanf(\"%lld %lld\",&b,&c);\n        if(b*3<=c)\n            printf(\"%d %d\",b,b*3);\n        else if(b*3>c)\n            printf(\"%d %d\",b,b*2);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long  a,b,c,i,j,k,m;\n    scanf(\"%lld\",&a);\n    for(i=1;i<=a;i++)\n    {\n        scanf(\"%lld %lld\",&b,&c);\n        if(b*3<=c)\n            printf(\"%lld %lld\\n\",b,b*3);\n        else if(b*3>c)\n            printf(\"%lld %lld\\n\",b,b*2);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8630705394190872, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "839dbc9558f8341949f87e386635c7b5", "bug_code_uid": "57e1d983f13b6ce3df14a1de139684f5", "src_uid": "e6fcbe3f102b694a686c0295edbc35e9", "apr_id": "6be86192b8323079c0b3f93667f98979", "difficulty": 1500, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 1000000000\n#define MIN(a,b) ((a>b)?(b):(a))\nint main(void) {\n    long int n,i;\n    scanf(\"%ld\",&n);\n    int l,r;\n    scanf(\"%d%d\",&l,&r);\n    long int ql,qr;\n    scanf(\"%ld%ld\",&ql,&qr);\n    int w[n];\n    scanf(\"%d\",&w[0]);\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d\",&w[i]);\n        w[i] = w[i]+w[i-1];\n    }\n    long long int res = MAX;\n    for(i=0;i<n;i++)\n    {\n        long long int temp = w[i]*l+(w[n-1]-w[i])*r;\n        if(i+2>n-i)\n        {\n            temp = temp + (2*i-n+1)*ql;\n            \n        }\n        else if(i+2<n-i)\n        {\n            temp = temp + (n-2*i-3)*qr;\n            \n        }\n        res = MIN(res,temp);\n    }\n    printf(\"%I64d\",res);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAX 1000000000\n#define MIN(a,b) ((a>b)?(b):(a))\nint main(void) {\n    long int n,i;\n    scanf(\"%ld\",&n);\n    int l,r;\n    scanf(\"%d%d\",&l,&r);\n    long int ql,qr;\n    scanf(\"%ld%ld\",&ql,&qr);\n    int w[n+1];\n    w[0] =0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&w[i]);\n        w[i] = w[i]+w[i-1];\n    }\n    w[i] = w[i-1];\n    long long int res = MAX;\n    for(i=0;i<n+1;i++)\n    {\n        long long int temp = w[i]*l+(w[n]-w[i])*r;\n        if(i>n-i)\n        {\n            temp = temp + (2*i-n-1)*ql;\n            \n        }\n        else if(i<n-i)\n        {\n            temp = temp + (n-2*i-1)*qr;\n            \n        }\n        res = MIN(res,temp);\n    }\n    printf(\"%I64d\",res);\n    return 0;\n}\n"}
{"similarity_score": 0.9214123006833713, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "fffb64286d19badabe77bcf4b6045cd7", "bug_code_uid": "c287f7bcfde842a500ad4a25c9d278d5", "src_uid": "cf595689b5cbda4f1d629524ad275650", "apr_id": "a3f54f5296876715acff965c6102a5b7", "difficulty": 1200, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n\n    int i, j, p[n], letterNumbers, vowels;\n    char sentence[n][100], flag=1;\n\n    for (i=0; i<n; i++){\n        scanf(\"%d\\n\", &p[i]);\n    }\n\n    for (i=0; i<n; i++){\n        gets(sentence[i]);\n    }\n\n\n    for (i=0; i<n; i++){\n\n        //printf(\"Give our sentence: \");\n        //gets(sentence);\n        letterNumbers= strlen(sentence[i]);\n        //printf(\"\\nThe sentence has %d letter.\\n\", letterNumbers);\n\n        j=0;\n        vowels=0;\n        while(sentence[i][j]!='\\0' && j!=letterNumbers){\n            if (sentence[i][j]=='a' || sentence[i][j]=='e' || sentence[i][j]=='i' || sentence[i][j]=='u' || sentence[i][j]=='o' || sentence[i][j]=='y')\n                vowels++;\n            j++;\n        }\n\n        if (vowels!=p[i])\n            flag=0;\n\n    }\n\n    if (flag)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n\n    int i, j, p[n], letterNumbers, vowels;\n    char sentence[n][101], flag=1;\n\n    for (i=0; i<n; i++){\n        scanf(\"%d\\n\", &p[i]);\n    }\n\n    for (i=0; i<n; i++){\n        gets(sentence[i]);\n    }\n\n\n    for (i=0; i<n; i++){\n        letterNumbers= strlen(sentence[i]);\n\n        j=0;\n        vowels=0;\n        while(sentence[i][j]!='\\0' && j!=letterNumbers){\n            if (sentence[i][j]=='a' || sentence[i][j]=='e' || sentence[i][j]=='i' || sentence[i][j]=='u' || sentence[i][j]=='o' || sentence[i][j]=='y')\n                vowels++;\n            j++;\n        }\n\n        if (vowels!=p[i])\n            flag=0;\n\n    }\n\n    if (flag)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.21927497789566755, "equal_cnt": 24, "replace_cnt": 22, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "da805dc63bb472d6c19f21aeb6ff804f", "bug_code_uid": "e642550c7f9927b15f8ab8bffc5cec8e", "src_uid": "001ac8bce4e44e9266a13eb27760906c", "apr_id": "867d5ed8858dd8f4ececdbd4ee3973c1", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar x[401234];\nint main()\n{\n\tint t,a,b,i,j;\n\tint k;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tscanf(\"%s\",&x);\n\t\tif(a%2&&b%2)\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tint k=0,j=a+b-1,f=0,jo=0;\n\t\tint g0=a,g1=b;\n\t\t if(g0%2+g1%2)\n\t\t    {\n\t\t    \tjo=1;\n\t\t    \tif(g0%2)\n\t\t    \t{\n\t\t    \tx[j/2]='0';\t\n\t\t    \tg0--;\n\t\t\t\t}\n\t\t    \telse\n\t\t    \t{\n\t\t    \tx[j/2]='1';\t\n\t\t    \tg1--;\n\t\t\t\t}\n\t\t\t}\n\t\tfor(i=0;i<=j/2-jo;i++)\n\t\t{\n\t\tif(x[i]=='0')\n\t\t{\n\t\t  if(x[j-i]=='0'||x[j-i]=='?')\n\t\t  {\n\t\t  \tx[j-i]='0';\n\t\t  \tg0=g0-2;\n\t\t\t  }\t\n\t\t\t  else\n\t\t\t  f=1;\n\t\t}\n\t\tif(x[i]=='1')\n\t\t {\n\t\t \tif(x[j-i]=='1'||x[j-i]=='?')\n\t\t \t{\n\t\t \t\tx[j-i]='1';\n\t\t \t\tg1=g1-2;\n\t\t\t }\n\t\t\t else\n\t\t\t f=1;\n\t\t }\n\t\t if(x[i]=='?'&&x[j-i]!='?')\n\t\t {\n\t\t \tx[i]=x[j-i];\n\t\t \tif(x[j-i]=='1')\n\t\t\t g1=g1-2;\n\t\t\t else\n\t\t\t g0=g0-2; \n\t\t }\n\t}\n\t//\tprintf(\"%s>>%d %d>>\\n\",x,g0,g1);\n\t\t\n\t\t//\tprintf(\"%s>>\\n\",x);\n\t\twhile(k<=j)\n\t\t{\n\t\t\tif(x[k]=='?'&&x[j]=='?')\n\t\t\t\tif(g0)\n\t\t\t\t{\n\t\t\t\tg0=g0-2;\n\t\t\t\tx[k]=x[j]='0';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\tg1=g1-2;\n\t\t\t\tx[k]=x[j]='1';\n\t\t\t\t}\n\t\t\t\t\n\t\t\tk++;\n\t\t\tj--;\n\t\t\tif(g0<0||g1<0)\n\t\t\t{\n\t\t\t\tf=1;\n\t\t\t}\n         \tif(f)\n\t\t\tbreak;\n\t\t}\n\t\tif(f)\n\t\tprintf(\"-1\\n\");\n\t   else\n\t\tprintf(\"%s\\n\",x);\n\t } \n\treturn 0;\n}\n\n\n\n\n\n\t\t\t  \t \t\t  \t    \t\t \t    \t \t\t\t", "fixed": "#include<stdio.h>\nchar a[200010];\nint ch[2];\nint main()\n{\n\tint t,l,i;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&ch[0],&ch[1]);\n\t\tscanf(\"%s\",a);l=ch[0]+ch[1];\n\t\tif((ch[0]&1)&&(ch[1]&1))\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\telse if(ch[0]&1)\n\t\t{\n\t\t\tif(a[l/2]=='1')\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(a[l/2]=='?')\n\t\t\t\ta[l/2]='0';\n\t\t}\n\t\telse if(ch[1]&1)\n\t\t{\n\t\t\tif(a[l/2]=='0')\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(a[l/2]=='?')\n\t\t\t\ta[l/2]='1';\n\t\t}\n\t\tfor(i=0;i<l;i++)\n\t\t{\n\t\t\tif(a[i]=='?')continue;\n\t\t\tch[a[i]-'0']--;\n\t\t\tif(a[l-i-1]=='?')\n\t\t\t{\n\t\t\t\ta[l-i-1]=a[i];\n\t\t\t\tif(l-i-1<l/2)ch[a[i]-'0']--;\n\t\t\t}\n\t\t\telse if(a[l-i-1]!=a[i])\n\t\t\t\tbreak;\n\t\t\tif(ch[0]<0||ch[1]<0)\n\t\t\t\tbreak;\n\t\t}\n\t\tif(i!=l)\n\t\t{\n\t\t\tprintf(\"-1\\n\");continue;\n\t\t}\n\t\tfor(i=0;i<l;i++)\n\t\t{\n\t\t\tif(a[i]=='?')\n\t\t\t{\n\t\t\t\tif(ch[0]>0)\n\t\t\t\t{\n\t\t\t\t\ta[i]=a[l-i-1]='0';ch[0]-=2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ta[i]=a[l-i-1]='1';ch[1]-=2;\n\t\t\t\t}\n\t\t\t\tif(ch[0]==0&&ch[1]==0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\\n\",a);\n\t}\n\treturn 0;\n}\n\t \t \t\t \t\t \t  \t\t\t    \t\t\t\t\t \t\t\t \t"}
{"similarity_score": 0.6671223513328777, "equal_cnt": 22, "replace_cnt": 17, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "35c0eb849b38eb552625b7bfacc72329", "bug_code_uid": "f9437ff20be106db9fd0ccc4e3ec2574", "src_uid": "b779946fe86b1a2a4449bc85ff887367", "apr_id": "e4d4eeaf7d0830f75849de5a44f5a8f5", "difficulty": 2100, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define eps 1e-11\ntypedef double d;\ntypedef unsigned u;\nd A,B,C,D,r,x,E,m,t;\nu BI;\nd mut(d n){return n<0?-n:n;}\nd F(d n)\n{\n\td W,X,Y,Z;\n\tW=A+((BI&(1<<0))?1.0:-1.0)*n;\n\tX=B+((BI&(1<<1))?1.0:-1.0)*n;\n\tY=C+((BI&(1<<2))?1.0:-1.0)*n;\n\tZ=D+((BI&(1<<3))?1.0:-1.0)*n;\n\treturn mut(W*Z-X*Y);\n}\nint main()\n{\n\tscanf(\"%lf%lf%lf%lf\",&A,&B,&C,&D);\n\tr=mut(A);\n\tif(r<mut(B))r=mut(B);\n\tif(r<mut(C))r=mut(C);\n\tif(r<mut(D))r=mut(D);\n\tfor(BI=-1;++BI<16;)\n\t{\n\t\tm=F(x=0.0);\n\t\tfor(E=1e11;E>eps;)\n\t\t{\n\t\t\tif((t=F(x+E))+eps<m){m=t;x+=E;continue;}\n\t\t\tif((t=F(x-E))+eps<m){m=t;x-=E;continue;}\n\t\t\tE/=2.0;\n\t\t}\n\t\tif(m<1e-3&&r>mut(x))r=mut(x);\n\t}\n\tprintf(\"%.10lf\\n\",r);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define eps (d)(1e-11)\ntypedef double d;\ntypedef unsigned u;\nd A,B,C,D,r,x;\nu BI;\nd mut(d n){return n<0.0?-n:n;}\nd F(d n)\n{\n\td W,X,Y,Z;\n\tW=A+((BI&(1<<0))?(d)(1.0):(d)(-1.0))*n;\n\tX=B+((BI&(1<<1))?(d)(1.0):(d)(-1.0))*n;\n\tY=C+((BI&(1<<2))?(d)(1.0):(d)(-1.0))*n;\n\tZ=D+((BI&(1<<3))?(d)(1.0):(d)(-1.0))*n;\n\treturn mut(W*Z-X*Y);\n}\nint main()\n{\n\tscanf(\"%lf%lf%lf%lf\",&A,&B,&C,&D);\n\tr=mut(A);u i;\n\tif(r<mut(B))r=mut(B);\n\tif(r<mut(C))r=mut(C);\n\tif(r<mut(D))r=mut(D);\n\td le,ri,nle,nri,di;\n\tfor(BI=-1;++BI<16;)\n\t{\n\t\tle=-1e9;ri=1e9;\n\t\tfor(i=1000;--i;)\n\t\t{\n\t\t\tdi=(ri-le)/(d)(3.0);\n\t\t\tnle=le+di;\n\t\t\tnri=ri-di;\n\t\t\tif(nle-le<eps||ri-nri<eps)break;\n\t\t\tif(F(nle)<F(nri))ri=nri;\n\t\t\telse le=nle;\n\t\t}\n\t\tif((F(nle)<1e-2*nle||F(nle)<1e-6)&&r>mut(nle))r=mut(nle);\n\t}\n\tprintf(\"%.10lf\\n\",r);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9919028340080972, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "fccba629236479eab41b37a3ce6d4ee0", "bug_code_uid": "e7ccbde9c29712e3851b9b79022c6bc7", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "bc6b4e192d671716dcf5c85e3ca42c13", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,ara[100],a,b,i,j,sum=0;\n    scanf(\"%d\",&n);\n    for(i=1; i<n; i++)\n        scanf(\"%d\",&ara[i]);\n    scanf(\"%d %d\",&a,&b);\n    for(j=a; j<b; j++)\n        sum=ara[j];\n    printf(\"%d\",sum);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,ara[100],a,b,i,j,sum=0;\n    scanf(\"%d\",&n);\n    for(i=1; i<n; i++)\n        scanf(\"%d\",&ara[i]);\n    scanf(\"%d %d\",&a,&b);\n    for(j=a; j<b; j++)\n        sum=sum+ara[j];\n    printf(\"%d\",sum);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9260628465804066, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ccf2b9bed3d66b1c61370e5e931d1b64", "bug_code_uid": "0579ac74eca7a44da898353db93fd92f", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "bc05c706afe0b0d9f98c447fac3f5114", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n      int n,i,j;\n      scanf(\"%d\",&n);\n      char s1[n+2],s2[n+2];\n      for(i=0;i<n;i++)\n      {\n          if(i%2==0)\n          {\n                s1[i]='C';\n                s2[i]='.';\n          }\n          else\n          {\n                s1[i]='.';\n                s2[i]='C';\n          }\n      }\n      s1[n]='\\0';\n      s2[n]='\\0';\n      for(i=0;i<n;i++)\n      {\n            if(i%2==0) printf(\"%s\\n\",s1);\n            else printf(\"%s\\n\",s2);\n      }\n\n      return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n      int n,i,j;\n      scanf(\"%d\",&n);\n      char s1[n+2],s2[n+2];\n      for(i=0;i<n;i++)\n      {\n          if(i%2==0)\n          {\n                s1[i]='C';\n                s2[i]='.';\n          }\n          else\n          {\n                s1[i]='.';\n                s2[i]='C';\n          }\n      }\n      s1[n]='\\0';\n      s2[n]='\\0';\n      if(n*n%2==0) printf(\"%d\\n\",(n*n)/2);\n      else printf(\"%d\\n\",(n*n+1)/2);\n      for(i=0;i<n;i++)\n      {\n            if(i%2==0) printf(\"%s\\n\",s1);\n            else printf(\"%s\\n\",s2);\n      }\n\n      return 0;\n}\n"}
{"similarity_score": 0.9889135254988913, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "85519578f2426b9d3afe82621f49a4b6", "bug_code_uid": "861b34bbab09cb20a7d02ab653e956d3", "src_uid": "f46f6fa28d0a7023da3bad0d222ce393", "apr_id": "2e5b9ee799003a20b813284e4ac5d9a9", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define ll long long\n\nint main(){\n\tint n, m1, m2;\n\t\n\tscanf(\"%d\", &n);\n\t\n\tfor(int i = 0; i < n; i++){\n\t\tint a, b, c, d, flag = 0;\n\t\tscanf(\"%d %d\", &m1, &m2);\n\t\tfor(int j = 0; j < m1; j++){\n\t\t\tscanf(\"%d %d %d %d\", &a, &b, &c, &d);\n\t\t\tif(a == d && b == c){\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\t\tif(m2 % 2 != 0){\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(flag == 1){\n\t\t\tprintf(\"YES\\n\");\n\t\t}else{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define ll long long\n\nint main(){\n\tint n, m1, m2;\n\t\n\tscanf(\"%d\", &n);\n\t\n\tfor(int i = 0; i < n; i++){\n\t\tint a, b, c, d, flag = 0;\n\t\tscanf(\"%d %d\", &m1, &m2);\n\t\tfor(int j = 0; j < m1; j++){\n\t\t\tscanf(\"%d %d %d %d\", &a, &b, &c, &d);\n\t\t\tif(b == c){\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\t\tif(m2 % 2 != 0){\n\t\t\tprintf(\"NO\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(flag == 1){\n\t\t\tprintf(\"YES\\n\");\n\t\t}else{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.11398176291793313, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "548ea00e250b1b7b8bc6b9b3a7c352bf", "bug_code_uid": "dfa4a4a94533a8a74b155e84831e96e6", "src_uid": "4af206ae108a483bdb643dc24e4bedba", "apr_id": "8d18f311936f33024db12d0d0a729b38", "difficulty": 800, "tags": ["geometry", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int t,m,a,b,p,q,s,x,y,g,h,v,z,e,u,k,A,B,X,Y;\r\n    scanf(\"%d\",&e);\r\n    while(e--){\r\n    scanf(\"%d\",&t);\r\n\r\n    if(t==1){\r\n        scanf(\"%d %d\",&a,&b);\r\n        printf(\"%d\\n\",(2*(abs(a))+(2*(abs(b)))));\r\n         }\r\n         else{\r\n    m=t-2;\r\n    scanf(\"%d %d\",&a,&b);\r\n    scanf(\"%d %d\",&g,&h);\r\n    v=abs(a-g);\r\n    z=abs(b-h);\r\n    while(m--){\r\n        scanf(\"%d %d\",&p,&q);\r\n        x=abs(a-p);\r\n        y=abs(b-q);\r\n        X=abs(g-p);\r\n        Y=abs(h-q);\r\n        if(x>=X){\r\n            A=x;\r\n        }\r\n        else{\r\n            A=X;\r\n        }\r\n        if(y>=Y){\r\n            B=y;\r\n        }\r\n        else\r\n        {\r\n            B=Y;\r\n        }\r\n        if(A>=v){\r\n            v=A;\r\n        }\r\n        if(B>=z){\r\n            z=B;\r\n        }\r\n    }\r\n    u=2*v;\r\n    k=2*z;\r\n    printf(\"%d\\n\",(u+k));\r\n    }\r\n    }\r\n    return 0;\r\n\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int p,q,r,s,a,b,t,n;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        p=0;q=0;r=0;s=0;\r\n\r\n        while(n--){\r\n        \r\n        scanf(\"%d %d\",&a,&b);\r\n\r\n        if(a==0&&b>q){ q=b;}\r\n        if(a==0&&b<s){s=b;}\r\n        if(b==0&&a>p){p=a;}\r\n        if(b==0&&a<r){r=a;}\r\n        }\r\n         printf(\"%d\\n\",(2*(p+q-r-s)));\r\n    }\r\n   \r\n}"}
{"similarity_score": 0.26558891454965355, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "09861a36471a55f32af243854d6efbe6", "bug_code_uid": "da23a9d1c3171df55ae4b55799907a12", "src_uid": "f89bd4ec97ec7e02a7f67feaeb4d3958", "apr_id": "d924042ceaa1ab76c2f7bb409b04b442", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint a[100];\r\nint main()\r\n{\r\n\tint t,k,i;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d\",&k);\r\n\t\tfor(i=0;i<k;i++)\r\n\t\t   a[i]=i+1;\r\n\t\tfor(i=0;i<k-1;i++)\r\n\t\t   a[i]=a[i+1];\r\n\t\ta[k-1]=1;\r\n\t\tfor(i=0;i<k;i++)\r\n\t\tprintf(\"%d \",a[i]);\r\n\t\tprintf(\"\\n\");\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main(){\r\n\tint T,i=0;\r\n\tscanf(\"%d\",&T);\r\n\tint anser[T][100];\r\n\tint a[T];\r\n\t\r\n\tfor(;i<T;i++){\r\n\t\tint n,j=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\ta[i]=n;\r\n\t\t\r\n\t\tfor(j=0;j<n;j+=2){\r\n\t\t\tif(n%2){\r\n\t\t\t\tif(j<3){\r\n\t\t\t\t\tanser[i][0]=3;\r\n\t\t\t\t\tanser[i][1]=1;\r\n\t\t\t\t\tanser[i][2]=2;\r\n\t\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tanser[i][j-1]=j+1;\r\n\t\t\t\t\tanser[i][j]=j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\telse{\r\n\t\t\tanser[i][j]=j+2;\r\n\t\t\tanser[i][j+1]=j+1;\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor(i=0;i<T;i++){\r\n\t\tint j=0;\r\n\t\tif(i)printf(\"\\n\");\r\n\t\tfor(j=0;j<a[i];j++)\r\n\t\tprintf(\"%d \",anser[i][j]);\r\n\t\t\r\n\t}\r\n\treturn 0; \r\n} "}
{"similarity_score": 0.9673340358271865, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2abe2fcda9c9d940043f5b9890482bd0", "bug_code_uid": "07948b20c886fdbcb2209747b27db525", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "544c59a0386d78e5d398e4f8e460bd76", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint is(int a,int b,int c,int d)\r\n{\r\n\tint x=a;\r\n\tint y=b;\r\n\tint z=c;\r\n\tint w=d;\r\n\tint count=0;\r\n\tif(x<y){\r\n\t\tcount++;\r\n\t\tif(x<z){\r\n\t\t\tcount++;\r\n\t\t\tif(x<w){\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t}else if(x<z){\r\n\t\tcount++;if(x<w){\r\n\t\t\tcount++;\r\n\t\t}\r\n\t}else if(x<w){\r\n\t\tcount++;\r\n\t}\r\n\treturn count;\r\n}\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tint x,y,z,w;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d%d%d%d\",&x,&y,&z,&w);\r\n\t\tprintf(\"%d\\n\",is(x,y,z,w));\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint is(int a,int b,int c,int d)\r\n{\r\n\tint x=a;\r\n\tint y=b;\r\n\tint z=c;\r\n\tint w=d;\r\n\tint count=0;\r\n\tif(x<y){\r\n\t\tcount++;\r\n\t\tif(x<z){\r\n\t\t\tcount++;\r\n\t\t\tif(x<w){\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}else if(x<w){\r\n\t\t\tcount++;\r\n\t\t}\r\n\t}else if(x<z){\r\n\t\tcount++;if(x<w){\r\n\t\t\tcount++;\r\n\t\t}\r\n\t}else if(x<w){\r\n\t\tcount++;\r\n\t}\r\n\treturn count;\r\n}\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tint x,y,z,w;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d%d%d%d\",&x,&y,&z,&w);\r\n\t\tprintf(\"%d\\n\",is(x,y,z,w));\r\n\t}\r\n}"}
{"similarity_score": 0.12, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "3c6a57322de832f00a6fe2f9b9ba5886", "bug_code_uid": "f65e4af09cb412aa0ceaf163a1301d6b", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "0970b62f440f83c103bf495a098d5dd1", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "hi my name is madhur garg\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,a,b,i;\n\tscanf(\"%d%d%d\",&n,&a,&b);\n\tchar s[n];\n\tscanf(\"%s\",s);\n\n\tif(s[a-1]==s[b-1])\n\t\tprintf(\"0\\n\");\n\telse\n\t\tprintf(\"1\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.6747868453105969, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c98a274deecb87a7bff1839b88c4ed47", "bug_code_uid": "5048a89fd92f86e2150acac44431ed96", "src_uid": "f5de1e9b059bddf8f8dd46c18ce12683", "apr_id": "14012309f9e7d8ddb8bde2f690ba8fdb", "difficulty": 900, "tags": ["greedy", "implementation", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,i,n,j,odd,pos;\r\n    long long int sum,p,a[20],max;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;++i)\r\n    {\r\n        p=1;\r\n        odd=0;\r\n        sum=0;\r\n        max=0;\r\n        scanf(\"%d\",&n);\r\n        for(j=0;j<n;++j)\r\n            scanf(\"%lld\",&a[j]);\r\n        for(j=n-1;j>=0;--j)\r\n        {\r\n            if(a[j]%2==1&&odd==0)\r\n            {\r\n                odd++;\r\n                pos=j;\r\n                max=a[j];\r\n            }\r\n            else if(a[j]%2==1&&a[j]>max&&odd!=0)\r\n            {\r\n                odd++;\r\n                pos=j;\r\n                max=a[j];\r\n            }\r\n            else if(odd==0&&a[j]>max)\r\n            {\r\n                max=a[j];\r\n                pos=j;\r\n            }\r\n            for(;a[j]%2==0;a[j]=a[j]/2)\r\n                p=p*2;\r\n        }\r\n        a[pos]=a[pos]*p;\r\n        for(j=0;j<n;++j)\r\n            sum=sum+a[j];\r\n        printf(\"%lld\\n\",sum);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,i,n,j,odd,pos;\r\n    long long int sum,p,a[20],max;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;++i)\r\n    {\r\n        p=1;\r\n        odd=0;\r\n        sum=0;\r\n        max=0;\r\n        scanf(\"%d\",&n);\r\n        for(j=0;j<n;++j)\r\n            scanf(\"%lld\",&a[j]);\r\n        for(j=n-1;j>=0;--j)\r\n        {\r\n            for(;a[j]%2==0;a[j]=a[j]/2)\r\n                p=p*2;\r\n            if(a[j]>max)\r\n            {\r\n                max=a[j];\r\n                pos=j;\r\n            }\r\n        }\r\n        a[pos]=a[pos]*p;\r\n        for(j=0;j<n;++j)\r\n            sum=sum+a[j];\r\n        printf(\"%lld\\n\",sum);\r\n        \r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.32840236686390534, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "89fc2847be35a721b7ca3b977b811a4d", "bug_code_uid": "937a27e0eb1848e1bb9dfbfdbbd72628", "src_uid": "1f6491999bec55cb8d960181e830f4c8", "apr_id": "c2711fe6c8bda4967ef5404516aaf9eb", "difficulty": 1300, "tags": ["combinatorics", "binary search", "two pointers"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "main()\n{\n    int n,d;\n    scanf(\"%d %d\",&n,&d);\n    int a[n],i,j,k,c=0;\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n-2;i++)\n    {\n        for(j=i+1;j<n-1;j++)\n        {\n            for(k=j+1;k<n;k++)\n                if(a[k]-a[i]<=d)\n                    c++;\n        }\n    }\n    printf(\"%d\",c);\n    return 0;\n}\n", "fixed": "long long num[100005];\nmain()\n{\n    long long int resp=0,l=0,val,i,n,d;\n    scanf(\"%I64d %I64d\",&n,&d);\n    for(i=0;i<n;i++)\n        scanf(\"%I64d\",&num[i]);\n    for(i=0;i<n;i++)\n    {\n        val=num[i]+d;\n        for(;num[l]<=val && l<n;l++);\n        if(l-i>1)\n            resp+=(l-i-2)*(l-i-1)/2;\n    }\n    printf(\"%I64d\",resp);\n    return 0;\n}\n"}
{"similarity_score": 0.9991503823279524, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f2a52328a6e4562069f82554c9d4ebcb", "bug_code_uid": "8f6fe385b98a46ca626084fc4618a930", "src_uid": "8a6c3436f73286ca54f51fb90017a299", "apr_id": "9cc1f5cba8fe77e629eb5434f43e5a86", "difficulty": 800, "tags": ["number theory", "greedy", "math", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    { int n,c;\n        //the first three nearly prime is 2*3 2*5 and 2*7 so sum of the three nearly prime numbers is 30 so if n is <=30 it is not possible to represent it as sum of 3 nearly prime numbers...\n        scanf(\"%d\",&n);\n         if(n<=30)\n            printf(\"NO\\n\");\n         else if(n==36||n==40||n==44)\n         {\n             c=n-31\n             printf(\"YES 6 10 15 %d\\n\",c);\n\n         }\n         else\n         {  c=n-30;\n            printf(\"YES 6 10 14 %d\\n\",c);\n         }\n    }\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    { int n,c;\n        //the first three nearly prime is 2*3 2*5 and 2*7 so sum of the three nearly prime numbers is 30 so if n is <=30 it is not possible to represent it as sum of 3 nearly prime numbers...\n        scanf(\"%d\",&n);\n         if(n<=30)\n            printf(\"NO\\n\");\n         else if(n==36||n==40||n==44)\n         {\n             c=n-31;\n             printf(\"YES 6 10 15 %d\\n\",c);\n\n         }\n         else\n         {  c=n-30;\n            printf(\"YES 6 10 14 %d\\n\",c);\n         }\n    }\nreturn 0;\n}\n"}
{"similarity_score": 0.9758771929824561, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2faf4fc286def8529dae16e2a6b94872", "bug_code_uid": "9225dfa949666f533db7c0ed1b2a32d6", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "a459c4855196091d9b5124b3e5f54b40", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,count=0;\n    char a[305][305], cx, cy;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n\n            scanf(\"%s\",&a[i]);\n\n    }\n    cx=a[0][0];\n    cy=a[0][1];\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<(n/2+1);j++)\n        {\n            if(i==j || j==(n-1-i))\n            {\n                if(a[i][j]!=a[i][n-1-j] || a[i][j]!=cx || a[i][n-1-j]!=cx)\n                {\n\n\n                    count=1;\n                    break;\n                }\n            }\n            else\n            {\n                if(a[i][j]!=cy || a[i][n-1-j]!=cy)\n                {\n                    count=1;\n                    break;\n                }\n            }\n        }\n        if(count==1)\n        {\n            break;\n        }\n    }\n    if(count==1)\n    {\n        printf(\"NO\");\n    }\n    else if(count==0)\n    {\n        printf(\"YES\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,count=0;\n    char a[305][305], cx, cy;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n\n            scanf(\"%s\",&a[i]);\n\n    }\n    cx=a[0][0];\n    cy=a[0][1];\n    if(cx==cy)\n    {\n        count=1;\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<(n/2+1);j++)\n        {\n            if(i==j || j==(n-1-i))\n            {\n                if(a[i][j]!=a[i][n-1-j] || a[i][j]!=cx || a[i][n-1-j]!=cx)\n                {\n\n\n                    count=1;\n                    break;\n                }\n            }\n            else\n            {\n                if(a[i][j]!=cy || a[i][n-1-j]!=cy)\n                {\n                    count=1;\n                    break;\n                }\n            }\n        }\n        if(count==1)\n        {\n            break;\n        }\n    }\n    if(count==1)\n    {\n        printf(\"NO\");\n    }\n    else if(count==0)\n    {\n        printf(\"YES\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.3445692883895131, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "5998f92997d631272371a00898b0249b", "bug_code_uid": "b02ce1ec2033a4a5e023e13c814cb15a", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "da0ae6037775ec6554d6201793f53615", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n,i,s=0;int a[500000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\ts+=a[i];\n\t}\n\tif(s%3!=0)\n\tprintf(\"0\");\n\telse{\n\t\ts=s/3;\n\t\tint l=n-1,s1=0,s2=0,k1=0,k2=0,j;\n\t\tint b[500000],c[500000];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\ts1+=a[i];\n\t\t\ts2+=a[l-i];\n\t\t\tif(s1==s)\n\t\t\t{\n\t\t\t\tb[k1]=i;\n\t\t\t\tk1++;\n\t\t\t}\n\t\t\tif(s2==s)\n\t\t\t{\n\t\t\t\tc[k2]=l-i;\n\t\t\t\tk2++;\n\t\t\t}\n\t\t}\n\t\tint count=0;\n\t\tfor(i=0;i<k1;i++)\n\t\t{\n\t\t\tfor(j=0;j<k2;j++)\n\t\t\t{\n\t\t\t\tif((b[i]<c[j])&&((c[j]-b[i])!=1))\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t}}\n\t\t}\n\t\tprintf(\"%d\",count);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include<inttypes.h>\nint main(void) {\n\tint n,i;int a[500010];\n\tlong long int s=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\ts+=a[i];\n\t}\n\tif(s%3!=0)\n\tprintf(\"0\");\n\telse{\n\t\ts=s/3;\n\t\tlong long s1=0,s2=0;\n\t\tint cnt[500010]={0};\n\t\tfor(i=n-1;i>=0;i--)\n\t\t{\n\t\t\ts1+=a[i];\n\t\t\tif(s1==s)\n\t\t\tcnt[i]=1;\n\t\t}\n\t\tlong long count=0;\n\tfor(i=n-2;i>=0;i--)\n\tcnt[i]+=cnt[i+1];\n\tfor(i=0;i<n-2;i++)\n\t{\n\t\ts2+=a[i];\n\t\tif(s2==s)\n\t\tcount+=cnt[i+2];\n\t}\n\t\tprintf(\"%\"PRId64\"\",count);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9961218836565097, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5477756d7247e8ca59d4c1c9017db6c3", "bug_code_uid": "98d00f66a0c1eb6595f48f4bb4e882c5", "src_uid": "56197d2468d8515e520c0d925874bf3b", "apr_id": "5b5ebc91e7c37c065f3d71b3573c1bef", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main() {\r\n\tint n,i=1;\r\n\tscanf(\"%d\",&n);\r\n\r\n\twhile(i<=n)\r\n    {\r\n        int p,q,r,o,k;\r\n        scanf(\"%d\",&k);\r\n\t    int a[k],b[k];\r\n\r\n\t    for(p=0;p<k;p++)\r\n        {\r\n            scanf(\"%d\",&a[p]);\r\n        }\r\n        for(p=0;p<k;p++)\r\n        {\r\n            scanf(\"%d\",&b[p]);\r\n        }\r\n\r\n\r\n        for(p=0;p<k;p++)\r\n        {\r\n            if(a[p]>b[p])\r\n            {\r\n                q=a[p];\r\n                a[p]=b[p];\r\n                b[p]=q;\r\n            }\r\n        }\r\n        r=a[0];\r\n        for(p=1;p<k;p++)\r\n        {\r\n            if(a[p] > r)\r\n            {\r\n                r=a[p];\r\n            }\r\n\r\n        }\r\n        int s = b[0];\r\n        for(p=1;p<k;p++)\r\n        {\r\n            if(b[p] > r)\r\n            {\r\n                s=b[p];\r\n            }\r\n\r\n        }\r\n\r\n\r\n        o = r*s;\r\n\r\n        printf(\"%d\",o);\r\n        i++;\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint main() {\r\n\tint n,i=1;\r\n\tscanf(\"%d\",&n);\r\n\r\n\twhile(i<=n)\r\n    {\r\n        int p,q,r,o,k;\r\n        scanf(\"%d\",&k);\r\n\t    int a[k],b[k];\r\n\r\n\t    for(p=0;p<k;p++)\r\n        {\r\n            scanf(\"%d\",&a[p]);\r\n        }\r\n        for(p=0;p<k;p++)\r\n        {\r\n            scanf(\"%d\",&b[p]);\r\n        }\r\n\r\n\r\n        for(p=0;p<k;p++)\r\n        {\r\n            if(a[p]>b[p])\r\n            {\r\n                q=a[p];\r\n                a[p]=b[p];\r\n                b[p]=q;\r\n            }\r\n        }\r\n        r=a[0];\r\n        for(p=1;p<k;p++)\r\n        {\r\n            if(a[p] > r)\r\n            {\r\n                r=a[p];\r\n            }\r\n\r\n        }\r\n        int s = b[0];\r\n        for(p=1;p<k;p++)\r\n        {\r\n            if( b[p] > s)\r\n            {\r\n                s=b[p];\r\n            }\r\n\r\n        }\r\n\r\n\r\n        o = r*s;\r\n        printf(\"%d\\n\",o);\r\n        i++;\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9978070175438597, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "11d3d99d216b5d40d1cf8dbb83b80ccb", "bug_code_uid": "23dab533157afaa42f02a172997c0610", "src_uid": "ba526a7f29cf7f83afa0b71bcd06e86b", "apr_id": "1449cd9512c331ecd75f0985c37dfc3b", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define INF1\t1000001\n#define INF2\t2000001\n\nint main() {\n\tint n, i, x_, y_, a_, b_;\n\n\tscanf(\"%d\", &n);\n\tx_ = y_ = -INF1;\n\tfor (i = 0; i < n; i++) {\n\t\tint x, y;\n\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tif (x_ < x || (x_ == x && y_ > y))\n\t\t\tx_ = x, y_ = y;\n\t}\n\ta_ = b_ = INF2;\n\tfor (i = 0; i < n; i++) {\n\t\tint a, b;\n\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tif (a_ > a || (a_ == a && b_ > b))\n\t\t\ta_ = a, b_ = b;\n\t}\n\tprintf(\"%d %d\\n\", x_ + a_, y_ + b_);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define INF1\t1000001\n#define INF2\t2000001\n\nint main() {\n\tint n, i, x_, y_, a_, b_;\n\n\tscanf(\"%d\", &n);\n\tx_ = y_ = -INF1;\n\tfor (i = 0; i < n; i++) {\n\t\tint x, y;\n\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tif (x_ < x || (x_ == x && y_ < y))\n\t\t\tx_ = x, y_ = y;\n\t}\n\ta_ = b_ = INF2;\n\tfor (i = 0; i < n; i++) {\n\t\tint a, b;\n\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tif (a_ > a || (a_ == a && b_ > b))\n\t\t\ta_ = a, b_ = b;\n\t}\n\tprintf(\"%d %d\\n\", x_ + a_, y_ + b_);\n\treturn 0;\n}\n"}
{"similarity_score": 0.5586592178770949, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "061ab16af5c886d13b0bf3a2d4d12929", "bug_code_uid": "30a6d1678c6386f32754ee416331b471", "src_uid": "808611f86c70659a1d5b8fc67875de31", "apr_id": "c8398746d541aaa52066d6f0c9866db2", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint\nmain()\n{\n\tint n = 0;\n\tint count_odd = 0;\n\tint num = 0;\n\n\twhile ( scanf(\"%d\", &n) != EOF )\n\t{\n\t\twhile ( n > 0 )\n\t\t{\n\t\t\tn--;\n\n\t\t\tscanf( \"%d\", &num );\n\n\t\t\tif ( num % 2 == 1 )\n\t\t\t{\n\t\t\t\tcount_odd++;\n\t\t\t}\n\t\t}\n\n\t\tif ( count_odd % 2 == 1 )\n\t\t{\n\t\t\tprintf( \"First\\n\" );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf( \"Second\\n\" );\n\t\t}\n\n\t\tcount_odd = 0;\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint\nmain()\n{\n\tint n = 0;\n\tint odd_flag = 0;\n\tint num = 0;\n\n\twhile ( scanf(\"%d\", &n) != EOF )\n\t{\n\t\twhile ( n > 0 )\n\t\t{\n\t\t\tn--;\n\n\t\t\tscanf( \"%d\", &num );\n\n\t\t\tif ( num % 2 == 1 )\n\t\t\t{\n\t\t\t\todd_flag = 1;\n\t\t\t}\n\t\t}\n\n\t\tif ( odd_flag == 1)\n\t\t{\n\t\t\tprintf( \"First\\n\" );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf( \"Second\\n\");\n\t\t}\n\n\t\todd_flag = 0;\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.9903536977491961, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "ff33f020220fac390e2750c3e236fa84", "bug_code_uid": "830cc7fd79207ae56ca7d2b881f64da2", "src_uid": "39f5e934bf293053246bd3faa8061c3b", "apr_id": "dd03cff518815befe9570cedbfd8e9a8", "difficulty": 800, "tags": ["implementation", "*special"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,k,a;\n\tscanf(\"%d %d\",&n,&k);\n\ta=1;\n\tfor(i=1;i<=n;i++)\n\tprintf(\"%c\",a+96);\n\ta++;\n\tif(a>k)\n        a=1;\n\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,k,a;\n\tscanf(\"%d %d\",&n,&k);\n\ta=1;\n\tfor(i=1;i<=n;i++){\n\tprintf(\"%c\",a+96);\n\ta++;\n\tif(a>k)\n        a=1;\n\t}\nreturn 0;\n}\n"}
{"similarity_score": 0.9476135040745053, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "53c411f3476be374ede0c0a936befcc2", "bug_code_uid": "e87cbae7e06490ae444d9da334a7082e", "src_uid": "e70708f72da9a203b21fc4112ede9268", "apr_id": "61999f51203f5adb2d884e38ce428844", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar string[100001];\n\nint main() {\n    scanf(\"%s\", string);\n    int i;\n    for (i = 0; i < 100000; i++)\n        if (string[i] != 'a')\n            break;\n    int j;\n    for (j = i; j < 100000; j++)\n        if (string[j] == 'a' || string[j] == 0)\n            break;\n    for (int k = i; k < j; k++)\n        string[k]--;\n    printf(\"%s\\n\", string);\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar string[100001];\n\nint main() {\n    scanf(\"%s\", string);\n    int i;\n    for (i = 0; i < 100000; i++)\n        if (string[i] != 'a')\n            break;\n    int j;\n    for (j = i; j < 100000; j++)\n        if (string[j] == 'a' || string[j] == 0)\n            break;\n    for (int k = i; k < j; k++)\n        string[k]--;\n    if (i == j)\n        string[i - 1] = 'z';\n    printf(\"%s\\n\", string);\n}\n"}
{"similarity_score": 0.5828460038986355, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "f10fb36501bb418fea45849341381733", "bug_code_uid": "5ef326f0f22611597723e92dedb9afcb", "src_uid": "5139d222fbbfa70d50e990f5d6c92726", "apr_id": "434f6c4e94a5cb6d3777bd664b419154", "difficulty": 1100, "tags": ["brute force", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint t,n,j,k,res,i,arr[5000];\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tres=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)scanf(\"%d\",&arr[i]);\n\t\tfor(i=0;i<n;i++){\n\t\t\tfor(j=i+1;j<n;j++){\n\t\t\t\tif(arr[j]!=arr[i]){\n\t\t\t\tfor(k=j+1;k<n;k++){\n\t\t\t\t    if(arr[k]==arr[i]){\n\t\t\t\t    \tres++;\n\t\t\t\t    \tbreak;\n\t\t\t\t\t  }\t\n\t\t\t     \t}\n\t\t\t\tif(res)break;\t \t\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(res)break;\n\t\t}\n\t\tif(res)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n\tint t,n,j,k,check,res,i,arr[5000];\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tres=0;\n\t    check=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)scanf(\"%d\",&arr[i]);\n\t\t\n\t\tfor(i=0;i<n-1;i++){\n\t\t\tif(arr[i]==arr[i+1] && arr[i+1]==arr[i+2] && i<n-2){\n\t\t\t\tcheck++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(arr[i]==arr[i+1])continue;\n\t\t\telse{\n\t\t\t\tfor(j=i+1;j<n;j++){\n\t\t\t\t\tif(arr[j]==arr[i]){\n\t\t\t\t\t\tres++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(res)break;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif(check){\n\t\tprintf(\"YES\\n\");continue;\n\t    }\n\t\tif(res)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t\t\n\t}\n\t\t\n\treturn 0;\n}"}
{"similarity_score": 0.9832869080779945, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "53f4462493fe6b06d991cdcdb8f04688", "bug_code_uid": "a26273f351c9f69dc063ddecde9ac27d", "src_uid": "5ce39a83d27253f039f0e26045249d99", "apr_id": "f61cb748070479c58450f5e1f205be5d", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\tint array[1024][1024];\n\tint flag1[2010]={0};\nint main()\n{\n\tint n,m,flag=0,c,j,i;\n\tchar ch;\n\tscanf(\"%d%d\",&n,&m);\n\tch=getchar();\n    for(i=0;i<n;i++)\n    {\n    \t\n\tfor(j=0;j<m;j++)\n    {\n\t  while((ch=getchar())=='\\n'||ch==' ');\n\t  if(ch=='0')\n      array[i][j]=0;\n      if(ch=='1')\n      array[i][j]=1;\n    }\n    }\n    \n    \n    \n    for(i=0;i<m;i++)\n    {\n\t j=0; \n     while(j<=n)\n        {\n\t\t   flag1[i]+=array[j][i];\n\t\t   j++;\n        }\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tflag=0;\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tflag1[j]-=array[i][j];\n\t\t}\n\t\tfor(j=0;j<m;j++)\n\t\tif(flag1[j]!=0)\n\t\t   flag++;\n\t\tif(flag==m){printf(\"YES\");break;}\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tflag1[j]+=array[i][j];\n\t\t}\n\t}\n\tif(flag!=m)printf(\"NO\");\n\t\n\t\n}", "fixed": "#include<stdio.h>\n\tint array[2010][2010];\n\tint flag1[2010]={0};\nint main()\n{\n\tint n,m,flag=0,c,j,i;\n\tchar ch;\n\tscanf(\"%d%d\",&n,&m);\n\tch=getchar();\n    for(i=0;i<n;i++)\n    {\n    \t\n\tfor(j=0;j<m;j++)\n    {\n\t  while((ch=getchar())=='\\n'||ch==' ');\n\t  if(ch=='0')\n      array[i][j]=0;\n      if(ch=='1')\n      array[i][j]=1;\n    }\n    }\n    \n    \n    \n    for(i=0;i<m;i++)\n    {\n\t j=0; \n     while(j<=n)\n        {\n\t\t   flag1[i]+=array[j][i];\n\t\t   j++;\n        }\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tflag=0;\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tflag1[j]-=array[i][j];\n\t\t}\n\t\tfor(j=0;j<m;j++)\n\t\t{if(flag1[j]!=0)\n\t\t   flag++;}\n\t\tif(flag==m){printf(\"YES\");break;}\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tflag1[j]+=array[i][j];\n\t\t}\n\t}\n\tif(flag!=m)printf(\"NO\");\n}"}
{"similarity_score": 0.1553398058252427, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "d383e8617346f10dfc3646d4815f8f8f", "bug_code_uid": "b9906ced62b1c6886a5eb8a31f8d28c6", "src_uid": "48b9c68380d3bd64bbc69d921a098641", "apr_id": "aeabd54c433b8e75039494fd11981ac8", "difficulty": 1000, "tags": ["sortings", "geometry"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define TRUE 1\n\nint main()\n{\n    double distanciaMaxima, X1, Y1, X2, Y2, a, b, c;\n \n    while(TRUE)\n\t{\n        scanf(\"%lf %lf\", &X1, &Y1);\n        scanf(\"%lf %lf\", &X2, &Y2);\n        scanf(\"%lf %lf\", &a, &b);\n        if(feof(stdin))\n            break;\n \n        c = sqrt( pow(X1 - X2, 2) + pow(Y1 - Y2, 2) );\n        distanciaMaxima = c * (1 / tan(a * acos(-1.0) / 180) + 1 / tan(b * acos(-1.0) / 180));\n \n        printf(\"%.3f\\n\", distanciaMaxima);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n \n#define PI acos(-1.0)\n \nint compare(const void * a, const void * b){\n \n    if(*(int *)a > *(int *)b) return -1;\n    if(*(int *)a == *(int *)b) return 0;\n    return 1;\n \n}\n \nint main(){\n \n    int numCircles, *radii, i;\n    double redArea;\n \n    scanf(\"%d\", &numCircles);\n \n    radii = (int *) malloc(numCircles * sizeof(int));\n \n    for(i = 0; i < numCircles; i++)\n        scanf(\"%d\", &radii[i]);\n \n    qsort(radii, numCircles, sizeof(int), compare);\n \n    redArea = 0;\n    for(i = 0; i < numCircles; i += 2){\n        if(i != numCircles - 1)\n            redArea += PI * pow(radii[i], 2) - PI * pow(radii[i + 1], 2);\n        else\n            redArea += PI * pow(radii[i], 2);\n    }\n \n    printf(\"%.10f\\n\", redArea);\n \n    free(radii);\n \n    return 0;\n \n}"}
{"similarity_score": 0.9945945945945946, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c75f1b06c7c651cf0b49d102aa58024d", "bug_code_uid": "24e20c4950803cf60ca8e3af46081cfa", "src_uid": "044ade01d2de1486735742369227ae1d", "apr_id": "fb646ac38451aeab233924b3749ccb00", "difficulty": 800, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,a,p,q,j,count=0;\n    scanf(\"%d\",&n);\n    int array[n+1];\n    scanf(\"%d\",&p);\n    for(i=0;i<p;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n    scanf(\"%d\",&q);\n    for(i=p;i<q+p;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n\n    for(j=1;j<=n;j++)\n    {\n        for(i=0;i<p+q;i++)\n        {\n            if(array[i]==j)\n            {\n                count++;\n                break;\n            }\n        }\n    }\n    if(count==n) printf(\"I become the guy.\");\n    else printf(\"Oh, my keyboard!\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,a,p,q,j,count=0;\n    scanf(\"%d\",&n);\n    int array[1001];\n    scanf(\"%d\",&p);\n    for(i=0;i<p;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n    scanf(\"%d\",&q);\n    for(i=p;i<q+p;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n\n    for(j=1;j<=n;j++)\n    {\n        for(i=0;i<p+q;i++)\n        {\n            if(array[i]==j)\n            {\n                count++;\n                break;\n            }\n        }\n    }\n    if(count==n) printf(\"I become the guy.\");\n    else printf(\"Oh, my keyboard!\");\n    return 0;\n}"}
{"similarity_score": 0.9699453551912568, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "32f431512859073b8f363c7a66d305de", "bug_code_uid": "c081f82af47b3e05cf92f69328819a20", "src_uid": "3b158306d335459ff55dcf29e46010e8", "apr_id": "17b3edaeec3bfb0479fa1a9193d1e0a3", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t,n,m,k,i,j,min,max,x[101];\n\n    scanf(\"%d\",&t);\n\nwhile(t--)\n{\n    scanf(\"%d %d\",&n,&m);\n\n    for(i=0;i<n;i++)\n    \tscanf(\"%d\",&x[i]);\n \n    max=x[0]; min=x[0];\n\n    for(i=0;i<n;i++)\n    {if(x[i]<min) min=x[i]; else max=x[i];}\n    \n    if(min+m>=max||max-min<=2*m) printf(\"%d\\n\",min+m);\n  \n    else printf(\"-1\\n\");}\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t,n,m,k,i,j,min,max,x[101];\n\n    scanf(\"%d\",&t);\n\nwhile(t--)\n{\n    scanf(\"%d %d\",&n,&m);\n\n    for(i=0;i<n;i++)\n    \tscanf(\"%d\",&x[i]);\n \n    max=x[0]; min=x[0];\n\n    for(i=0;i<n;i++)\n    {if(x[i]<min) min=x[i]; \n     if(x[i]>max) max=x[i];}\n    \n    if(min+m>=max||max-min<=2*m) printf(\"%d\\n\",min+m);\n  \n    else printf(\"-1\\n\");}\n}\n"}
{"similarity_score": 0.9529190207156308, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "0a03684d37f67fdf9d3e01958115df47", "bug_code_uid": "a23f649ede1c9573ed77a294937c05de", "src_uid": "2b6e670b602a89b467975edf5226219a", "apr_id": "a92c9b91daed6564a7716c63479aff16", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<stdlib.h>\r\n\r\nint main(void){\r\nint T;\r\nscanf(\"%d\",&T);\r\nwhile(T>0){\r\nint a,b;\r\nscanf(\"%d%d\",a,b);\r\nif(a==0){\r\n\r\nprintf(\"%d\",1);\r\n}\r\nelse{\r\n\r\nprintf(\"%d\",a+2*b+1);\r\n}\r\nT=T-1;\r\n\r\n}\r\n\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<stdlib.h>\r\n \r\nint main(void){\r\nint T;\r\nscanf(\"%d\",&T);\r\nwhile(T>0){\r\nint a,b;\r\nscanf(\"%d%d\",&a,&b);\r\nif(a==0){\r\n \r\nprintf(\"%d\\n\",1);\r\n}\r\nelse{\r\n \r\nprintf(\"%d\\n\",a+2*b+1);\r\n}\r\nT=T-1;\r\n \r\n}\r\n \r\nreturn 0;\r\n}"}
{"similarity_score": 0.5750174459176552, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "4c3d9873054def3f850e0139bdaf5057", "bug_code_uid": "98e73226e87b9158dc7506563001d5e2", "src_uid": "5598d5954fa3e3cecedb413033259760", "apr_id": "cc7220d975f209c3553b98a3ac2704e2", "difficulty": 900, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int k,i,t,j,n,a[10000],max;\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++){\n        scanf(\"%d\",&n);max=0;\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n            \n                 if(a[i]>max)\n                   max=a[i]; \n        }\n        int fl=0,l;\n        for(i=0;i<n;i++){\n           if(a[i]==max){\n             if((i==0 && a[i]>a[i+1])||(i==n-1 && a[i]>a[i-1])||((i!=0 && i!=n-1)&&(a[i]>a[i+1] || a[i]>a[i-1])))   \n               {printf(\"%d\\n\",j+1);fl=1;break;}\n           }\n        }\n        \n        if(fl==0)\n          printf(\"-1\\n\");  \n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int k,i,t,j,n,max;\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++){\n        scanf(\"%d\",&n);\n         int a[n];\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n            if(i==0)\n              max=a[0];\n             else{\n                 if(a[i]>max)\n                   max=a[i];\n             } \n        }\n        int fl=0,l;\n        for(i=0;i<n;i++){\n            if(i==0 && a[i]==max && a[i]>a[i+1])\n              {fl=1;l=1;break;}\n            else if(i==n-1 && a[n-1]==max && a[n-1]>a[n-2])\n              {fl=1;l=n;break;}\n             else if(i!=0 && i!=n-1){\n                 if(a[i]==max && (a[i]>a[i+1] || a[i]>a[i-1]))\n                   {fl=1;l=i+1;break;}\n             }   \n        }\n        if(fl==1)\n          printf(\"%d\\n\",l);\n        else if(fl==0)\n          printf(\"-1\\n\");  \n    }\n}"}
{"similarity_score": 0.978515625, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "73de583dd1f08f567dc2bcd7d07f1d84", "bug_code_uid": "a1cf18d4a8ca4611db8899a5c5c1a879", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "a04a9f5626279e7c7c4579fcfe9c6d0a", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\nint main ()\n{\n   int n,x;\n   \n   scanf (\"%d%d\",&n,&x);\n   \n   int a[50][2]={0};\n   \nfor (int j=0;j<n;j++)\n{\n   for (int i=0;i<2;i++)\n   {\n       scanf (\"%d\",&a[j][i]);\n       }\n       }\n       int sum=((a[0][0]-1)%x);\n       \n   \n        for (int i=0;i<n;i++)\n        {\n            \n                sum=sum+(a[i][1]-a[i][0]+1);\n                }\n                \n       for ( int i=0;i<n-1;i++)\n       sum=sum+((a[i+1][1]-(a[i][0]+1))%x);\n       printf(\"%d\",sum);\n\n\nreturn 0;\n}     \n", "fixed": "#include <stdio.h>\n\nint main ()\n{\n   int n,x;\n   \n   scanf (\"%d%d\",&n,&x);\n   \n   int a[50][2]={0};\n   \nfor (int j=0;j<n;j++)\n{\n   for (int i=0;i<2;i++)\n   {\n       scanf (\"%d\",&a[j][i]);\n       }\n       }\n       int sum=((a[0][0]-1)%x);\n       \n   \n        for (int i=0;i<n;i++)\n        {\n            \n                sum=sum+(a[i][1]-a[i][0]+1);\n                }\n                \n       for ( int i=0;i<n-1;i++)\n       sum=sum+((a[i+1][0]-(a[i][1]+1))%x);\n       printf(\"%d\",sum);\n\n\nreturn 0;\n}     \n"}
{"similarity_score": 0.42644628099173554, "equal_cnt": 17, "replace_cnt": 12, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "657ce67679fa0386f56270bb5755f43a", "bug_code_uid": "a86cd98f72abda2e389f23dd0779cb1c", "src_uid": "1aede54b41d6fad3e74f24a6592198eb", "apr_id": "92954ac33d8b73dc7d222d0acb943a26", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nmain(){\n\n    int n,i,j,k=0;\n    scanf(\"%d\",&n);\n    char a[n][n];\n    for(i=0;i<n;i=i+1){\n\n        for(j=0;j<n;j=j+1){\n            if((i+j)%2==0){\n                a[i][j]='C';\n            }\n            else a[i][j]='.';\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            if(a[i][j]=='C') k++;\n        }\n    }\n    printf(\"%d\\n\",k);\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            printf(\"%c\",a[i][j]);\n        }\n        printf(\"\\n\");\n    }\n\n}\n", "fixed": "#include<stdio.h>\n\nmain(){\n\n    int n,i,j,k=0,c;\n    scanf(\"%d\",&n);\n    char a[n];\n    char b[n];\n    for(i=0;i<n;i=i+1){\n            if(i%2==0) a[i]='C' ;\n            else a[i]='.' ;\n    }\n    a[n]='\\0' ;\n        for(i=0;i<n;i=i+1){\n            if(i%2==0) b[i]='.' ;\n            else b[i]='C' ;\n    }\n    b[n]='\\0' ;\n   char d[n][n];\n    for(i=0;i<n;i=i+1){\n\n        for(j=0;j<n;j=j+1){\n            if((i+j)%2==0){\n                d[i][j]='C';\n            }\n            else d[i][j]='.';\n        }\n    }\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            if(d[i][j]=='C') k++;\n        }\n    }\n\n    printf(\"%d\\n\",k);\n    for(i=0;i<n;i++){\n        if(i%2==0){ puts(a);}\n        else {puts(b);}\n    }\n\n}\n"}
{"similarity_score": 0.5445134575569358, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "750aa2c16de6c6a4a74cbcd2632337eb", "bug_code_uid": "708ad36290834726b177be83b36e2abe", "src_uid": "32855bb8ba33973178fde7c3d0beb2ce", "apr_id": "1405cf4bef1ef7220bc9a12062a7b9c6", "difficulty": 1100, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--)\r\n   {\r\n    long long int n,k;\r\n    scanf(\"%lld %lld\",&n,&k);\r\n    long long int h[n];\r\n    for(int i=0;i<n;i++) scanf(\"%lld\",&h[i]);\r\n    int j=0;\r\n    while(j<n-1&&k>0)\r\n     {\r\n       if(h[j]<h[j+1])\r\n         {\r\n           k--;\r\n           h[j]++;\r\n          if(j>0&&h[j-1]<h[j]) j--;\r\n         }\r\n      else j++;\r\n     }\r\n  if(j==n-1) printf(\"-1\\n\");\r\n  else printf(\"%d\\n\",j+1);\r\n   }\r\n  return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n   while(t--)\r\n   {\r\n    long long int n,k;\r\n    scanf(\"%lld %lld\",&n,&k);\r\n    long long int h[n];\r\n    int j=0,flag=0;\r\n    for(int i=0;i<n;i++) scanf(\"%lld\",&h[i]);\r\n    for(int i=1;i<=k;i++)\r\n    {  flag=0;\r\n      for( j=0;j<n-1;j++)\r\n       {\r\n         if(h[j]<h[j+1]){ h[j]++;flag=1;break;}\r\n       }\r\n    if(flag==0) break;\r\n    }\r\n  if(flag==0) printf(\"-1\\n\");\r\n  else printf(\"%d\\n\",j+1);\r\n   }\r\n  return 0;\r\n}"}
{"similarity_score": 0.9965337954939342, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "041240fe3e935499f814da484a48e911", "bug_code_uid": "699aaf5854d865688ec9c6113f783ebd", "src_uid": "9374728643a1ddbe2200a4a125beef26", "apr_id": "99ca6cc87c10b736f78e4fcee9af6cc3", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX 555555\nint a[MAX];\n       \nint main() {          \n  int n, i;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n * n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  int now = 0;\n  int cur = 1;\n  int res = 0;\n  while (now < n) {\n    for (i = 0; i < n; i++) {\n      if (a[i] <= now) {\n       a[i] = MAX;\n       now++;\n      }\n    }\n    if (now == n) break;\n    res++;\n    for (i = n -1; i >= 0; i--) {\n      if (a[i] <= now) {\n       a[i] = MAX;\n       now++;\n      }\n    }\n    if (now == n) break;\n    res++;\n  }\n  printf(\"%d\\n\", res);\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX 555555\nint a[MAX];\n       \nint main() {          \n  int n, i;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  int now = 0;\n  int cur = 1;\n  int res = 0;\n  while (now < n) {\n    for (i = 0; i < n; i++) {\n      if (a[i] <= now) {\n       a[i] = MAX;\n       now++;\n      }\n    }\n    if (now == n) break;\n    res++;\n    for (i = n -1; i >= 0; i--) {\n      if (a[i] <= now) {\n       a[i] = MAX;\n       now++;\n      }\n    }\n    if (now == n) break;\n    res++;\n  }\n  printf(\"%d\\n\", res);\n  return 0;\n}\n"}
{"similarity_score": 0.9725576289791438, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c0d7657fe8c313b4a2947c835d8a075b", "bug_code_uid": "262537e5c43b4c6d72524776d6bb5754", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "88913981ceffa23057069c5a4d745d49", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"string.h\"\nint a[200000]={0},b[200000],i,m,n,k,sum=0;\nchar s[200000],temp;\n int main(){\n     while(scanf(\"%s %d\",s,&m)!=EOF){\n     k = strlen(s);\n     for(i=0;i<m;i++){\n        scanf(\"%d\",&n);\n        a[n-1]++;\n     }\n     for(i=0;i<k/2;i++){\n        sum +=a[i];\n        if(sum%2==1){\n            temp = s[i];\n            s[i] = s[k-i-1];\n            s[k-i-1] = temp;\n        }\n     }\n     printf(\"%s\\n\",s);\n     }\n     return 0;\n }", "fixed": "#include \"stdio.h\"\n#include \"string.h\"\nint a[2000010]={0},i,m,n,k,sum=0;\nchar s[200010],temp;\n int main(){\n     while(scanf(\"%s %d\",s,&m)!=EOF){\n     k = strlen(s);\n     for(i=0;i<m;i++){\n        scanf(\"%d\",&n);\n        a[n-1]++;\n     }\n     for(i=0;i<k/2;i++){\n        sum +=a[i];\n        if(sum%2==1){\n            temp = s[i];\n            s[i] = s[k-i-1];\n            s[k-i-1] = temp;\n        }\n     }\n     printf(\"%s\\n\",s);\n     }\n     return 0;\n }"}
{"similarity_score": 0.9807976366322009, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "224a571f092655a2c616638d1719b17a", "bug_code_uid": "f4603c4914270a9d5cb43f3fe9f27fc1", "src_uid": "960e4c234666d2444b80d5966f1d285d", "apr_id": "7c4255e520232a43a4d08d7cef4995d6", "difficulty": 1300, "tags": ["two pointers", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tchar a[] = \"heavy\";\n\tchar b[] = \"metal\";\n\tchar input[1000000];\n\n\tscanf(\"%s\", input);\n\tint i=0, d=0, e=0;\n\tint len = strlen(input);\n\t\t// printf(\"%d\\n\", len);\n\tfor (i=0;i<=len;i++)\n\t{\n\t\tif(strncmp(input+i, a, 5)==0)\n\t\t\td++;\n\t\tif(strncmp(input+i, b, 5)==0)\n\t\t\te=e+d;\n\t}\n\tprintf(\"%d\\n\", e);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tchar a[] = \"heavy\";\n\tchar b[] = \"metal\";\n\tchar input[1000000];\n\n\tscanf(\"%s\", input);\n\tlong long int i=0, d=0, e=0;\n\tint len = strlen(input);\n\t\t// printf(\"%d\\n\", len);\n\tfor (i=0;i<len;i++)\n\t{\n\t\tif(strncmp(input+i, a, 5)==0)\n\t\t\td++;\n\t\tif(strncmp(input+i, b, 5)==0)\n\t\t\te=e+d;\n\t}\n\tprintf(\"%lld\\n\", e);\n\treturn 0;\n}"}
{"similarity_score": 0.8393700787401575, "equal_cnt": 18, "replace_cnt": 13, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "d63e33569bb59aa16a05b2f67730b519", "bug_code_uid": "61388ee984385b37e2268cb4c0c192ba", "src_uid": "dc10b869293df2b7a557262c805635ba", "apr_id": "df5c6cd217d562e7c6d057cb4844503c", "difficulty": 1100, "tags": ["dp", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, i, box, ans;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        box = 1;\r\n        ans = 0;\r\n        int arr[n];\r\n        for (i = 0; i < n; i++)\r\n            scanf(\"%d\", &arr[i]);\r\n        for (i = n - 1; i > 0; i--)\r\n        {\r\n            if (arr[i] == arr[i - 1])\r\n            {\r\n                box*=2;\r\n            }\r\n            else\r\n            {\r\n                ans++;\r\n                box*=2;\r\n                i-=box-(box/2);\r\n                if(i<0) break;\r\n                arr[i] = arr[n - 1];\r\n                i++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t, n, i, box, ans;\r\n    scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        box = 1;\r\n        ans = 0;\r\n        int arr[n];\r\n        for(i=0;i<n;i++) scanf(\"%d\",&arr[i]);\r\n        while(box<n)\r\n        {\r\n            if(arr[n-box]==arr[n-box-1])\r\n            {\r\n                box++;\r\n            }\r\n            else\r\n            {\r\n                ans++;\r\n                box*=2;\r\n                if(box<=n) arr[n-box]=arr[n-1];\r\n            }\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9451287793952967, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "958a87461b6b7d65683f7879f4850733", "bug_code_uid": "231398bc46ae336ca6814355ebfd6ffb", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "930a42eca87aa4c3fd1566878ebb5231", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100];\n    int a=0,d=0,i,l,n;\n    scanf(\"%d\",&n);\n    //scanf(\"%s\",&s);\n    //l=strlen(s);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&s[i]);\n        if(s[i]=='A')\n            a++;\n       else if(s[i]=='D')\n            d++;\n\n    }\n\n    if(a>d)\n        printf(\"Anton\");\n    if(d>a)\n        printf(\"Danik\");\n        if(a==d)\n            printf(\"Friendship\");\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char s[100001];\n    int a=0,d=0,i,l,n;\n    scanf(\"%d\",&n);\n    //scanf(\"%s\",&s);\n    //l=strlen(s);\n    for(i=0;i<=n;i++)\n    {\n        scanf(\"%c\",&s[i]);\n\n        if(s[i]=='A')\n            a++;\n       else if(s[i]=='D')\n            d++;\n\n    }\n   // printf(\"%d\",a);\n   // printf(\"%d\",d);\n\n    if(a>d)\n        printf(\"Anton\");\n    if(d>a)\n        printf(\"Danik\");\n        if(a==d)\n            printf(\"Friendship\");\n}\n"}
{"similarity_score": 0.5720620842572062, "equal_cnt": 25, "replace_cnt": 10, "delete_cnt": 10, "insert_cnt": 5, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "eec7a6fe2e870d92152fd1ecd5063efd", "bug_code_uid": "e72932d01d957df6766c943b30385b48", "src_uid": "310a0596c0a459f496b8d6b57676d25e", "apr_id": "a233c55875a1abd8439844593dbc8afa", "difficulty": 1400, "tags": ["data structures", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint s[100005];\nint  main()\n{\n    int x,n,i,j,t,min=1,count=0;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n\tscanf(\"%d\",&x);\n\ts[x]=1;\n\tif(x>min)count++;\n\tif(x==min)\n\t{\n\t    while(s[min])min++;\n\t}\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint arr[100005];\nint main()\n{\nint i,n;\nscanf(\"%d\",&n);\nfor(i=0; i<n; i++)\nscanf(\"%d\",&arr[i]);\nfor(i=n-1; i>0; i--)\n{\nif(arr[i]<arr[i-1])\nbreak;\n}\nprintf(\"%d\\n\",i);\nreturn 0;\n}\n"}
{"similarity_score": 0.8016597510373444, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "ae32f764644f10f659361f2c47e1c58d", "bug_code_uid": "28f445562746b8a241c31998d178bebf", "src_uid": "accfbd68b9723abf4cd29846e80835ec", "apr_id": "c21a2628b48ad7d0cf35b868c131fb3b", "difficulty": 800, "tags": ["brute force", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{int n,x,tr[6],t[6],tt[6],w;\r\nscanf(\"%d\",&n);\r\nfor(int i=0;i<n;i++)\r\n{scanf(\"%d\",&x);\r\nint arr[x],trr[x],w=0;\r\nfor(int i=0;i<x;i++)\r\n{scanf(\"%d\",&arr[i]);\r\n}\r\nfor(int i=0;i<x;i++)\r\n{scanf(\"%d\",&trr[i]);\r\n}\r\nfor(int j=0,k=0,h=0;j<x;j++)\r\n{\r\ntr[j]=trr[j]-arr[j];\r\nif(tr[j]>0)\r\n{for(;tr[j]!=0;--tr[j])\r\n{t[k]=j+1;\r\nw++;\r\nk++;}}\r\nif(tr[j]<0)\r\n{for(;tr[j]!=0;++tr[j])\r\n{tt[h]=j+1;\r\nw++;\r\nh++;}}\r\n}\r\nif(w%2!=0)\r\nprintf(\"-1\\n\");\r\nelse\r\n{printf(\"%d\\n\",w/2);\r\nfor(int i=0;i<w/2;i++)\r\n{printf(\"%d %d\\n\",tt[i],t[i]);\r\n}\r\n}\r\n}\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{int n,x,tr[1000],t[1000],tt[1000],w,q;\r\nscanf(\"%d\",&n);\r\nfor(int i=0;i<n;i++)\r\n{scanf(\"%d\",&x);\r\nint arr[x],trr[x],w=0,q=0;\r\nfor(int i=0;i<x;i++)\r\n{scanf(\"%d\",&arr[i]);\r\n}\r\nfor(int i=0;i<x;i++)\r\n{scanf(\"%d\",&trr[i]);\r\n}\r\nfor(int j=0,k=0,h=0;j<x;j++)\r\n{tr[j]=trr[j]-arr[j];\r\nif(tr[j]>0)\r\n{for(;tr[j]!=0;--tr[j])\r\n{t[k]=j+1;\r\nw++;\r\nk++;}}\r\nif(tr[j]<0)\r\n{for(;tr[j]!=0;++tr[j])\r\n{tt[h]=j+1;\r\nq++;\r\nh++;}}\r\n}\r\nif((w+q)%2!=0||w!=q)\r\nprintf(\"-1\\n\");\r\nelse if(x==1)\r\n{if(arr[0]==trr[0])\r\nprintf(\"0\\n\");\r\nelse\r\nprintf(\"-1\\n\");}\r\nelse\r\n{printf(\"%d\\n\",(w+q)/2);\r\nfor(int a=0;a<(w+q)/2;a++)\r\n{printf(\"%d %d\\n\",tt[a],t[a]);\r\n}\r\n}\r\n}\r\n}"}
{"similarity_score": 0.7027427724240178, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "65e85e5227837797c4e0e20b168f0e2a", "bug_code_uid": "7a55e10bbdc6f4d624a0d01d0a1a3301", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "bce46d30681e86701a8a74d0b02b57f3", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main (){\n    int x1,y1,x2,y2,x3,y3,x4,y4;\n    scanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n    \n    if((x1-x2)>0 && (y1-y2)>0 &&(x1-x2)!=(y1-y2)){\n        printf(\"-1\");\n    }\n    else{\n        if(x1==x2 && y1!=y2){\n            xa3=(x3+y1-y2);\n             x3= abs(xa3);\n            y3=y1;\n            x4=x3;\n            y4=y2;\n        }\n        else if(y1==y2 && x1!=x2 ){\n            x3=x1;\n            ya3=(y1+x2-x1);\n            y3= abs(ya3);\n            x4=x3;\n            y4=y3;\n        }\n        else{\n            x3=x1;\n            y3=y2;\n            x4=x2;\n            y4=y1;\n        }\n       printf(\"%d %d %d %d\\n\",x3,y3,x4,y4);\n    }\n   \n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main (){\n    int x1,y1,x2,y2,x3,y3,x4,y4;\n    scanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n\n    if(abs(x1-x2)>0 && abs(y1-y2)>0 &&abs(x1-x2)!=abs(y1-y2)){\n        printf(\"-1\");\n    }\n    else{\n        if(x1==x2 && y1!=y2){\n            x3=x1+abs(y1-y2);\n\n            y3=y1;\n            x4=x3;\n            y4=y2;\n        }\n        else if(y1==y2 && x1!=x2 ){\n            x3=x1;\n            y3=y1+abs(x2-x1);\n\n            x4=x2;\n            y4=y3;\n        }\n        else{\n            x3=x1;\n            y3=y2;\n            x4=x2;\n            y4=y1;\n        }\n       printf(\"%d %d %d %d\\n\",x3,y3,x4,y4);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.17879053461875546, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "59df143070b572631d15123ed5088ebf", "bug_code_uid": "c820d9ae168ad2eaf5c7e3e26db2d58e", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "bd24ab66719a77a9648689ce604e84e6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tvoid sum(int a,int b,int c);\n\tint t;\n\tint a,b,c;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tsum(a,b,c);\n\t}\n} \nvoid sum(int a,int b,int c){\n\tif(a+b==c){\n\t    printf(\"YES\\n\");\n\t    return;\n\t}\n\tif(c+b==a){\n\t    printf(\"YES\");\n\t    return;\n\t}\n\tif(a+c==b){\n\t    printf(\"YES\");\n\t    return;\n\t}\n\tprintf(\"NO\");\n\treturn;\n}\n\t \t   \t\t  \t\t \t\t   \t\t\t\t \t\t \t\t\t\t\t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    int re[t];\n    for(int i=0;i<t;i++){\n        int num[3];\n        scanf(\"%d%d%d\",&num[0],&num[1],&num[2]);\n        int temp;\n        for(int m=0;m<3;m++){\n           for(int n=m+1;n<3;n++){\n              if(num[m]<num[n]){\n                temp=num[m];\n                num[m]=num[n];\n                num[n]=temp;\n              }\n           }\n        }\n        if(num[0]==num[1]+num[2]){\n            re[i]=1;\n        }\n        else{\n            re[i]=2;\n        }\n    }\n    for(int j=0;j<t;j++){\n        if(re[j]==1){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n\n\t\t\t    \t\t\t \t\t\t    \t\t\t     \t  \t"}
{"similarity_score": 0.8681010289990645, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "579f54d2a3a9988fdc6aaaba72ca2f03", "bug_code_uid": "2b70bee57282de93406885cffb837b6b", "src_uid": "53975eea2503bb47bfd0a5119406aea3", "apr_id": "fd1393c8417ddfdc081a6403e141e3dc", "difficulty": 1300, "tags": ["binary search", "brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k;\r\n    double se;\r\n    long long p,begin;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        scanf(\"%lld\",&begin);\r\n        long long sum=begin,add=0;\r\n        for(int i=0;i<n-1;i++)\r\n        {\r\n            scanf(\"%lld\",&p);\r\n            if(sum*k<p*100)\r\n            {\r\n                add+=(p*100-sum*k)/k+((p*100-sum*k)%k!=0);\r\n                sum+=add;\r\n            }\r\n            sum+=p;\r\n        }\r\n        printf(\"%lld\\n\",add);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,k;\r\n    double se;\r\n    long long p,begin;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d\",&n,&k);\r\n        scanf(\"%lld\",&begin);\r\n        long long sum=begin,add=0;\r\n        for(int i=0;i<n-1;i++)\r\n        {\r\n            scanf(\"%lld\",&p);\r\n            if((sum+add)*k<p*100)\r\n            {\r\n                add+=(p*100-(sum+add)*k)/k+((p*100-(sum+add)*k)%k!=0);\r\n            }\r\n            sum+=p;\r\n        }\r\n        printf(\"%lld\\n\",add);\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7147401908801697, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3f6adef11df67f83dd99c0c64e84103f", "bug_code_uid": "9f1f1eb669fe20a7906e4ef30e6e15b5", "src_uid": "acaa8935e6139ad1609d62bb5d35128a", "apr_id": "6826d9267e91c3023b859dd19f785626", "difficulty": 900, "tags": ["constructive algorithms", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int i,j,n,count=0,t;\n    scanf(\"%d\",&n);\n    int ary[n];\n    for(i=0;i<n;i++){\n      scanf(\"%d\",&ary[i]);\n    }\n    int max=ary[0],min=ary[0];\n    for(i=1;i<n;i++){\n        if(max<ary[i]){\n            max=ary[i];\n        }\n        if(min>ary[i]){\n            min=ary[i];\n        }\n\n    }\n\n    for(i=0\n        ;i<n-1;i++){\n        if(ary[i]>min&& ary[i]<max){\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int i,j,n,count=0,t;\n    scanf(\"%d\",&n);\n    int ary[n];\n    for(i=0;i<n;i++){\n      scanf(\"%d\",&ary[i]);\n    }\n    int max=ary[0],min=ary[1];\n    for(i=1;i<n;i++){\n        if(max<ary[i]){\n            max=ary[i];\n        }\n    }\n        for(i=0;i<n;i++){\n        if(min>ary[i]){\n            min=ary[i];\n        }\n\n    }\n\n    for(i=0;i<n;i++){\n        if(ary[i]!=min&& ary[i]!=max){\n            count++;\n        }\n    }\n    printf(\"%d\\n\",count);\n}\n"}
{"similarity_score": 0.970954356846473, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cf22786830c71e4054d9dbac3ceb827d", "bug_code_uid": "5ea7f7989caf9b0a8573b04d811f54f9", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "ee7e04bfb096b70b4a8eab1e7fd5e044", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint i,q,n[100],out[100];\n\tscanf(\"%d\",&q);\n\t\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d\",&n[i]);\n\t\tif(n[i]>3)\n\t\t\tout[i]=(n[i]%2);\n\t\telse\n\t\t\tout[i]=(n[i]%4);\n\t}\n\tfor(i=0;i<q;i++)\n\t\tprintf(\"\\n%d\",out[i]);\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint i,q,n[100],out[100];\n\tscanf(\"%d\",&q);\n\t\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d\",&n[i]);\n\t\tif(n[i]>3)\n\t\t\tout[i]=(n[i]%2);\n\t\telse\n\t\t\tout[i]=4-(n[i]%4);\n\t}\n\tfor(i=0;i<q;i++)\n\t\tprintf(\"\\n%d\",out[i]);\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.7150153217568948, "equal_cnt": 20, "replace_cnt": 6, "delete_cnt": 6, "insert_cnt": 7, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "34baa983bbc651eae41ec86af1e7213f", "bug_code_uid": "7cb24852a6bf99e77a0ff2d5f991bab2", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "f8f3f03c79f3686370f38b7acc9dbfd5", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,i,a1,a2;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n       if(a[i]!=a[n-1])\n           {\n           a1=i;\n           break;\n           }\n\n    for(i=n-1;i>0;i--)\n       if(a[i]!=a[0])\n           {\n           a2=i;\n           break;\n           }\n    if(a1==a2)\n    {\n        if(a1<=n/2+n%2)\n            a2=n-1;\n        else\n            a1=0;\n    }\n    a1=(a2-a1>0)?(a2-a1):(a1-a2);\n    printf(\"%d\",a1);\n\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,k=0,max1,max2,t=0;\n    scanf(\"%d\",&n);\n    int a[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=a[n-1])\n        {\n            max1=n-i-1;\n            break;\n        }\n    }\n    for(i=n-1;i>0;i--)\n    {\n        if(a[i]!=a[0])\n        {\n            max2=i;\n            break;\n        }\n    }\n    max1=max1>max2?max1:max2;\n    printf(\"%d\",max1);\n}\n"}
{"similarity_score": 0.9784507862550961, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "9d42e071c0bb4a33054abe3dbc4a21c8", "bug_code_uid": "18d040161e6c7a803686acac9735c61e", "src_uid": "8135173b23c6b48df11b1d2609b08080", "apr_id": "ec7eb62bf82b13ddcb82c49537e41dd6", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char s[100001];\n    char p[] = {'A','H','I','M','O','T','U','V','W','X','Y'};\n    int len,i,j;\n    int flag,ans = 1;\n    gets(s);\n    len = strlen(s);\n    for (i=0; i<len; i++)\n    {\n        flag = 0;\n        for (j=0; j<12; j++)\n        //if (s[i] != 'A' &&s[i] != 'H' &&s[i] != 'I' &&s[i] != 'M' &&s[i] != 'O' &&s[i] != 'T' &&\n       //     s[i] != 'U' &&s[i] != 'V' &&s[i] != 'W' &&s[i] != 'X' &&s[i] != 'Y')\n            if (p[j] == s[i])\n            {\n                flag = 1;\n                break;\n            }\n        if (flag==0)\n        {\n            ans = 0;\n            break;\n        }\n    }\n    for (i = 0; i <= len / 2; i++)\n        if (s[i]!=s[len - i - 1])\n    {\n        ans = 0;\n        break;\n    }\n\n    if (ans)\n        puts(\"YES\");\n    else\n        puts(\"NO\");\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char s[100001];\n    const char p[] = {'A','H','I','M','O','T','U','V','W','X','Y'};\n    int len,i,j;\n    int flag,ans = 1;\n    gets(s);\n    len = strlen(s);\n    for (i=0; i<len; i++)\n    {\n        flag = 0;\n        for (j=0; j<11; j++)\n//        if (s[i] != 'A' &&s[i] != 'H' &&s[i] != 'I' &&s[i] != 'M' &&s[i] != 'O' &&s[i] != 'T' &&\n//           s[i] != 'U' &&s[i] != 'V' &&s[i] != 'W' &&s[i] != 'X' &&s[i] != 'Y')\n            if (p[j] == s[i])\n            {\n                flag = 1;\n                break;\n            }\n        if (flag==0)\n        {\n            ans = 0;\n            break;\n        }\n    }\n    for (i = 0; i <= len / 2; i++)\n        if (s[i]!=s[len - i - 1])\n    {\n        ans = 0;\n        break;\n    }\n\n    if (ans)\n        puts(\"YES\");\n    else\n        puts(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.6714801444043321, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "89c85dfdd3e94b864c83d62c40f1d8b8", "bug_code_uid": "0d129edad983401fc061f8838ed80d68", "src_uid": "2a770c32d741b3440e7f78cd5670d54d", "apr_id": "1e4108a09351e90e68b50d39b2932af5", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,m,i,j;\n    \n    scanf(\"%d%d\",&n,&m);\n   \n   for(i=1;i<=n;i++)\n   {\n       if(i%2==0)\n       {\n           for(j=0;j<m;j++)\n           {\n               printf(\"%s\",(j<m-1) ? \".\":\"#\");\n           }\n           printf(\"\\n\");\n       }\n       else\n       {\n           for(j=0;j<m;j++)\n           {\n               printf(\"#\");\n           }\n           printf(\"\\n\");\n       }\n   }\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,m,i,j,flag=0;\n    \n    scanf(\"%d%d\",&n,&m);\n   \n   for(i=1;i<=n;i++)\n   {\n       if(i%2==0)\n       {\n           if(flag==0)\n           {\n                for(j=0;j<m;j++)\n               {\n                  printf(\"%s\",(j<m-1) ? \".\":\"#\");\n               }\n               flag=1;\n           }\n           else\n           {\n               for(j=0;j<m;j++)\n               {\n                  printf(\"%s\",(j>0) ? \".\":\"#\");\n               }\n               flag=0;\n           }\n           printf(\"\\n\");\n       }\n       else\n       {\n           for(j=0;j<m;j++)\n           {\n               printf(\"#\");\n           }\n           printf(\"\\n\");\n       }\n   }\n}"}
{"similarity_score": 0.9664739884393063, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "badeccd8cfc82d36e2f5cab5a3f0c4b0", "bug_code_uid": "72604c33b489496e83eb6041bbd44e5e", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "ab3f5526986b3fa00fc6f8320f4eb483", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int n,x,i,count=0,num;\n    char t;\n\n    scanf(\"%d %d\",&n,&x);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&t);\n        getchar();\n        scanf(\"%d\",&num);\n        getchar();\n        //printf(\"%c %d\\n\",t,num);\n        if(t=='-')\n        {\n            if(num>x) count++;\n            else x-=num;\n        }\n        else x+=num;\n    }\n\n    printf(\"%d %d\\n\",x,count);\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int n,i,count=0,num;\n    long long int x;\n    char t;\n\n    scanf(\"%d %I64d\",&n,&x);\n    getchar();\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&t);\n        getchar();\n        scanf(\"%d\",&num);\n        getchar();\n        //printf(\"%c %d\\n\",t,num);\n        if(t=='-')\n        {\n            if(num>x) count++;\n            else x-=num;\n        }\n        else x+=num;\n    }\n\n    printf(\"%I64d %d\\n\",x,count);\n\n}\n"}
{"similarity_score": 0.7909738717339667, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "fff5e5db388f531f3cc472830ade70e6", "bug_code_uid": "345ff50bf20e41a4d715e8945c91c0ab", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "9f66f3cccee1a257326647b8bbfe33e2", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,max,j,maxr=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(j=0;j<n-1;j++)\n        {\n            max=0;\n    for(i=j+1;i<n;i++)\n    {\n        if(a[i]>=a[i-1])\n            max++;\n        else\n        {\n            j=i-1;\n            break;\n        }\n    }\n    if(max>maxr)\n        maxr=max;\n        }\n        printf(\"%d\",maxr+1);\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,max=0,maxr=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=1;i<n;i++)\n    {\n        if(a[i]>=a[i-1])\n            max++;\n        else\n        {\n           if(max>maxr)\n               maxr=max;\n           max=0;\n        }\n    }\n    if(max>maxr)\n               maxr=max;\n        printf(\"%d\",maxr+1);\n        return 0;\n}\n"}
{"similarity_score": 0.6298932384341637, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "58100c79bdfddd47ef1addb9a38c8b75", "bug_code_uid": "4013790530cecfe69fa266daefbf5e4c", "src_uid": "e2434fd5f9d16d59e646b6e69e37684a", "apr_id": "0f3a64dbdbe0dfeaf3fd7ad51cfb4df4", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\n    long int q;\n    scanf(\"%ld\",&q);\n    while(q--){\n        long long a,n,b,S;\n        scanf(\"%lld%lld%lld%lld\",&a,&n,&b,&S);\n        if(S>=1&&S<=a*n+b){\n            if(S%n<=b){\n                printf(\"Yes\\n\");\n            }else printf(\"No\");\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    long long q;\n    scanf(\"%lld\",&q);\n    while(q--){\n        long long a,b,n,S;\n        scanf(\"%lld%lld%lld%lld\",&a,&b,&n,&S);\n        if((S<=a*n+b)&&(S%n<=b)){\n                printf(\"yes\\n\");\n    }else printf(\"no\\n\");\n}return 0;\n}"}
{"similarity_score": 0.928679817905918, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f04428bc8c37f56f86981e2d29fc46f3", "bug_code_uid": "c5c0f2d2390c87a4bdb01a8248a56d60", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "9cfc04d676140b44a58effeef20658eb", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char s[1000];\n   int n,i,t;\n   scanf(\"%d\",&t);\n   while(t--){\n   \tint k=0;\n   \tscanf(\"%d\",&n);\n   \tscanf(\"%s\",&s);\n   \tfor(i=0;i<n;i++){\n   \t\tif(s[i]=='8'){\n   \t\tk=i;\n   \t\tbreak;\n   \t\t}\n   \t}\n   \tif(n-k>10 )\n   \tprintf(\"YES\\n\");\n   \telse\n   \tprintf(\"NO\\n\");\n   \t\n   }\n   \t\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n   char s[1000];\n   int n,i,t;\n   scanf(\"%d\",&t);\n   while(t--){\n   \t\n   \tscanf(\"%d\",&n);\n   \tint k=n;\n   \tscanf(\"%s\",&s);\n   \tfor(i=0;i<n;i++){\n   \t\tif(s[i]=='8'){\n   \t\tk=i;\n   \t\tbreak;\n   \t\t}\n   \t}\n   \tif(n-k>10 )\n   \tprintf(\"YES\\n\");\n   \telse\n   \tprintf(\"NO\\n\");\n   \t\n   }\n   \t\n}"}
{"similarity_score": 0.910377358490566, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "78752b72cf25e185963a071c9e57f3d1", "bug_code_uid": "d3c7c00515d36fa141fa7b73441faeb0", "src_uid": "0c9030689394ad4e126e5b8681f1535c", "apr_id": "c6064c7ff5b75b67dcf9ac98f7502238", "difficulty": 1100, "tags": ["dp", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor (int i=1; i<=t; i++){\n        int n;\n        scanf(\"%d\",&n);\n        int ara[n],cnt=0;;\n        for (int j=0; j<n; j++){\n            scanf(\"%d\",&ara[j]);\n        }\n        for (int k=0; k<n; k++){\n            if (ara[k]==1){\n                cnt++;\n            }\n            else\n                break;\n        }\n        if (cnt ==n && cnt%2==0)\n            printf(\"SECOND\\n\");\n        else if (cnt==n && cnt %2==1)\n            printf(\"FIRST\\n\");\n        else if (cnt<n && cnt%2==0)\n            printf(\"FIRST\\n\");\n        else\n            printf(\"SECOND\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor (int i=1; i<=t; i++){\n        int n;\n        scanf(\"%d\",&n);\n        int ara[n],cnt=0;;\n        for (int j=0; j<n; j++){\n            scanf(\"%d\",&ara[j]);\n        }\n        for (int k=0; k<n; k++){\n            if (ara[k]==1){\n                cnt++;\n            }\n            else\n                break;\n        }\n        if (cnt ==n && cnt%2==0)\n            printf(\"Second\\n\");\n        else if (cnt==n && cnt %2==1)\n            printf(\"First\\n\");\n        else if (cnt<n && cnt%2==0)\n            printf(\"First\\n\");\n        else\n            printf(\"Second\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9213226909920182, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "eaeed8e5a1d9912c5d607052ed9b21fc", "bug_code_uid": "12a9adc296f8076eae15e947067063f1", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "7fd6510d5d13d506b55c78669f965224", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int sum=0,a,b,c,d;\n    char ch;\n    scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n    while(ch!=10){\n        scanf(\"%c\",&ch);\n        if(ch=='1'){\n            sum=sum+a;\n        }\n        if(ch=='2'){\n            sum=sum+b;\n        }\n        if(ch=='3'){\n            sum=sum+c;\n        }\n        if(ch=='4'){\n            sum=sum+d;\n        }\n    }\n    printf(\"%lld\",sum);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long int sum=0,a,b,c,d;\n    char ch='a';\n    scanf(\"%lld %lld %lld %lld \",&a,&b,&c,&d);\n    while(ch!=10){\n        scanf(\"%c\",&ch);\n        if(ch=='1'){\n            sum=sum+a;\n        }\n        if(ch=='2'){\n            sum=sum+b;\n        }\n        if(ch=='3'){\n            sum=sum+c;\n        }\n        if(ch=='4'){\n            sum=sum+d;\n        }\n    }\n    printf(\"%lld\",sum);\n}"}
{"similarity_score": 0.6858006042296072, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "dcd4540e4df854077e3eec49f96b1a45", "bug_code_uid": "2743e20fd64ba8c233d262773e5927d9", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "797a826203bc34b74ed0258996ea6f56", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n, t, i, a[30005], f=0;\n\n\tscanf(\"%d %d\", &n, &t);\n\tfor ( i=1; i<n; i++ ) scanf(\"%d\", &a[i]);\n\n\tfor ( i=1; i<n; i++ ) {\n\t\tif ( i == t ) {\n\t\t\tf=1; \n\t\t\tbreak;\n\t\t}\n\t\telse if ( i > t ) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\ti = i+a[i];\n\t\t\ti--;\n\t\t}\n\t}\n\n\tif (f) printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n, t, i, a[30005], f=0;\n\n\tscanf(\"%d %d\", &n, &t);\n\tfor ( i=1; i<n; i++ ) scanf(\"%d\", &a[i]);\n\n\tfor ( i=1; i<=n; ) {\n\t\tif ( i == t ) {\n\t\t\tf=1; \n\t\t\tbreak;\n\t\t}\n\t\telse if ( i >= n ) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\ti = i+a[i];\n\t\t\t\n\t\t}\n\t}\n\n\tif (f) printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.9977787649933363, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "757a17d95acaba13fdb9ecf2873a7bfa", "bug_code_uid": "1ebc24d90bf27ffe54cd118088c8e2c3", "src_uid": "4577a9b2d96110966ad95a960ef7ec20", "apr_id": "01d1e5951f2e5950c0ec1b3730e85868", "difficulty": 2000, "tags": ["dp", "implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid custsort(int *,int);\nint main(){\n\tint n,i,j,t,prev,now,ar[35000];\n\tfor(i=0;i<35;i++){\n\t\tar[i]=0;\n\t}\n\tprev=0;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++,prev=now){\n\t\tscanf(\"%d\",&now);\n\t\tif(now>prev){\n\t\t\tt=now-prev;\n\t\t\tfor(i=0;t>0;i++){\n\t\t\t\tif(t>=9-ar[i]){\n\t\t\t\t\tt-=9-ar[i];\n\t\t\t\t\tar[i]=9;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tar[i]+=t;\n\t\t\t\t\tt=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(now==prev){\n\t\t\tfor(i=0;ar[i]==0;i++);\n\t\t\tar[i]--;\n\t\t\ti++;\n\t\t\twhile(ar[i]==9){\n\t\t\t\tar[i]=ar[i-1];\n\t\t\t\tar[i-1]=9;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tar[i]++;\n\t\t\tcustsort(ar,i);\n\t\t}\n\t\telse{\n\t\t\tt=prev-now;\n\t\t\tfor(i=0;t>0;i++){\n\t\t\t\tif(t>=ar[i]){\n\t\t\t\t\tt-=ar[i];\n\t\t\t\t\tar[i]=0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tar[i]-=t;\n\t\t\t\t\tt=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=0;ar[i]==0;i++);\n\t\t\tar[i]--;\n\t\t\ti++;\n\t\t\twhile(ar[i]==9){\n\t\t\t\tar[i]=ar[i-1];\n\t\t\t\tar[i-1]=9;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tar[i]++;\n\t\t\tcustsort(ar,i);\n\t\t}\n\t\tfor(i=34;ar[i]==0;i--);\n\t\twhile(i>=0){\n\t\t\tprintf(\"%d\",ar[i]);\n\t\t\ti--;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\nvoid custsort(int *ar,int n){\n\tint i,t,c[10];\n\tfor(i=0;i<10;i++){\n\t\tc[i]=0;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tc[ar[i]]++;\n\t}\n\tt=9;\n\tfor(i=0;i<n;i++){\n\t\twhile(c[t]==0){\n\t\t\tt--;\n\t\t}\n\t\tar[i]=t;\n\t\tc[t]--;\n\t}\n}\n", "fixed": "#include<stdio.h>\nvoid custsort(int *,int);\nint main(){\n\tint n,i,j,t,prev,now,ar[3500];\n\tfor(i=0;i<3500;i++){\n\t\tar[i]=0;\n\t}\n\tprev=0;\n\tscanf(\"%d\",&n);\n\tfor(j=0;j<n;j++,prev=now){\n\t\tscanf(\"%d\",&now);\n\t\tif(now>prev){\n\t\t\tt=now-prev;\n\t\t\tfor(i=0;t>0;i++){\n\t\t\t\tif(t>=9-ar[i]){\n\t\t\t\t\tt-=9-ar[i];\n\t\t\t\t\tar[i]=9;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tar[i]+=t;\n\t\t\t\t\tt=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(now==prev){\n\t\t\tfor(i=0;ar[i]==0;i++);\n\t\t\tar[i]--;\n\t\t\ti++;\n\t\t\twhile(ar[i]==9){\n\t\t\t\tar[i]=ar[i-1];\n\t\t\t\tar[i-1]=9;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tar[i]++;\n\t\t\tcustsort(ar,i);\n\t\t}\n\t\telse{\n\t\t\tt=prev-now;\n\t\t\tfor(i=0;t>0;i++){\n\t\t\t\tif(t>=ar[i]){\n\t\t\t\t\tt-=ar[i];\n\t\t\t\t\tar[i]=0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tar[i]-=t;\n\t\t\t\t\tt=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(i=0;ar[i]==0;i++);\n\t\t\tar[i]--;\n\t\t\ti++;\n\t\t\twhile(ar[i]==9){\n\t\t\t\tar[i]=ar[i-1];\n\t\t\t\tar[i-1]=9;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tar[i]++;\n\t\t\tcustsort(ar,i);\n\t\t}\n\t\tfor(i=3499;ar[i]==0;i--);\n\t\twhile(i>=0){\n\t\t\tprintf(\"%d\",ar[i]);\n\t\t\ti--;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\nvoid custsort(int *ar,int n){\n\tint i,t,c[10];\n\tfor(i=0;i<10;i++){\n\t\tc[i]=0;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tc[ar[i]]++;\n\t}\n\tt=9;\n\tfor(i=0;i<n;i++){\n\t\twhile(c[t]==0){\n\t\t\tt--;\n\t\t}\n\t\tar[i]=t;\n\t\tc[t]--;\n\t}\n}\n"}
{"similarity_score": 0.7748538011695907, "equal_cnt": 16, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "42c476db79f721c157dd26fca3066059", "bug_code_uid": "2d75280b12d9288f97e0b47bb3ca4acd", "src_uid": "62f5798bdcea237c0df9b4cd288b97de", "apr_id": "81be2f807e4169b83f292ac283d7036f", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n#include <string.h>\r\n\r\nint main(void)\r\n{\r\n    int t, i, j, k, a = 0, b, c;\r\n\r\n    char s[200001];\r\n    scanf(\"%d\", &t);\r\n\r\n    for(i = 1; i <= t; i++){\r\n        a = 0;\r\n\r\n        scanf(\"%s\", &s);\r\n\r\n        j = strlen(s);\r\n        for(k = 0; k < j; k++){\r\n            if(s[k] == '0'){\r\n                a++;\r\n            }\r\n        }\r\n        b = j-a;\r\n        if(a == b){\r\n            printf(\"0\\n\");\r\n        }\r\n        else {\r\n            if(a < b){\r\n                printf(\"%d\\n\", a);\r\n            }\r\n            else {\r\n                printf(\"%d\\n\", b);\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n#include <string.h>\r\n\r\n#include <math.h>\r\n\r\nint main(void)\r\n{\r\n    int t, a, b, c, i, j, k;\r\n\r\n    char s[200001];\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    for(i = 1; i <= t; i++){\r\n        a = 0;\r\n        scanf(\"%s\", &s);\r\n\r\n        j = strlen(s);\r\n\r\n        for(k = 0; k < j; k++){\r\n            if(s[k] == '0'){\r\n                a++;\r\n            }\r\n        }\r\n        b = j-a;\r\n        if(a < b){\r\n            printf(\"%d\\n\", a);\r\n        }\r\n        else if(a > b){\r\n            printf(\"%d\\n\", b);\r\n        }\r\n        else {\r\n            if(s[j-1] == '0'){\r\n                printf(\"%d\\n\", a-1);\r\n            }\r\n            else {\r\n                printf(\"%d\\n\", b-1);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.47990105132962274, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "54116bc2f3d07eca5b80be67f44ebdeb", "bug_code_uid": "c74fe32455462c5d934eedab53c4afce", "src_uid": "33f7c85e47bd6c83ab694a834fa728a2", "apr_id": "a4682c91d16b602fac963d5953319163", "difficulty": 1500, "tags": ["dp", "greedy", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h> \n#include<string.h> \nint main()\n{\n      char s[100000];\n      long long int i,c,d=0;\n      scanf(\"%s\",&s);\n      for(i=0;i<strlen(s)-1;i+=2){\n            if(s[i]=='A'&&s[i+1]=='B'){\n                  c=i+2;\n                  for(;c<strlen(s)-1;c++){\n                        if(s[c]=='B'&&s[c+1]=='A'){\n                              d++;break;\n                        }\n                  }\n            }\n            else if(s[i]=='B'&&s[i+1]=='A'){\n                  c=i+2;\n                  for(;c<strlen(s)-1;c++){\n                        if(s[c]=='A'&&s[c+1]=='B'){\n                              d++;break;\n                        }\n                  }\n            }\n            if(d>0) break;\n      }\n      if(d>0) printf(\"YES\");\n      else printf(\"NO\");\n}", "fixed": "#include<stdio.h> \n#include<string.h> \nint main()\n{\n      char s[100000];\n      long long int i,c,d=0;\n      scanf(\"%s\",&s);\n      for(i=0;i<strlen(s)-1;i++){\n            if(s[i]=='A'&&s[i+1]=='B'){\n                  c=i+2;\n                  for(;c<strlen(s)-1;c++){\n                        if(s[c]=='B'&&s[c+1]=='A'){\n                              printf(\"YES\");\n                              return 0;\n                        }\n                  }\n            }\n      }\n      for(i=0;i<strlen(s)-1;i++){\n            if(s[i]=='B'&&s[i+1]=='A'){\n                  c=i+2;\n                  for(;c<strlen(s)-1;c++){\n                        if(s[c]=='A'&&s[c+1]=='B'){\n                              printf(\"YES\");\n                              return 0;\n                        }\n                  }\n            }\n      }\n      printf(\"NO\");\n}"}
{"similarity_score": 0.6862068965517242, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "cfeb3c1939cef66de2ef5a20c328f195", "bug_code_uid": "a6f08598520b897f2d9085818f28ff67", "src_uid": "a7c0484275e62f0bc70d9edaac27d7d6", "apr_id": "99457c7e7acc35906f9a688947bc12eb", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\nint main(){\n    long int a,b,c,i,n;\n    scanf(\"%ld\",&n);\n    a=0;\n    b=1;\n    for(i=1;i<=n;i++){\n        c = a+b;\n        if(i==c)\n        printf(\"O\");\n        else\n        printf(\"o\");\n        a=b;\n        b=c;\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main(){\n    long int a,b,c,n;\n    scanf(\"%ld\",&n);\n    a=0;\n    b=1;\n    for(int i=1;i<=n;i++){\n        c=a+b;\n        if(i==c){\n            printf(\"O\");\n            a=b;\n            b=c;\n        }\n        else\n        printf(\"o\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9774011299435028, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2c4ba8f2e9af86e814071ee99bfd53fa", "bug_code_uid": "c1c33a5e5f18b1b521ed231f2d93402f", "src_uid": "ecda736a0caa924ebd5f8f133586d542", "apr_id": "7d5c1959fb3a48b1f8132a3e4e40bbb5", "difficulty": 1800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h> \nint max(int a, int b){return (a>b)?a:b;}\nint min(int a, int b){return (a<b)?a:b;}\n\n\nint main()\n{\n\tint n, m, count[105]={}, s[105] = {};\n\tscanf(\"%d %d\", &n, &m);\n\t\n\tfor(int i=0; i<m; i++){\n\t\tint a, b, step;\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tstep = (b-a+n)%n;\n\t\t\n\t\tcount[a]++;\n\t\ts[a] = (s[a]!=0)?min(s[a], step):step;\n\t}\n\t\n\tfor(int i=1; i<=n; i++){\n\t\tint output = 0;\n\t\tfor(int j=1; j<=n; j++){\n\t\t\tif(count[j]!=0)\n\t\t\t\toutput = max(output, s[j] + j-i + n*(count[j]-(j>=i)));\n\t\t}\n\t\tprintf(\"%d \", output);\n\t}\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h> \nint max(int a, int b){return (a>b)?a:b;}\nint min(int a, int b){return (a<b)?a:b;}\n\n\nint main()\n{\n\tint n, m, count[5005]={}, s[5005] = {};\n\tscanf(\"%d %d\", &n, &m);\n\t\n\tfor(int i=0; i<m; i++){\n\t\tint a, b, step;\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tstep = (b-a+n)%n;\n\t\t\n\t\tcount[a]++;\n\t\ts[a] = (s[a]!=0)?min(s[a], step):step;\n\t}\n\t\n\tfor(int i=1; i<=n; i++){\n\t\tint output = 0;\n\t\tfor(int j=1; j<=n; j++){\n\t\t\tif(count[j]!=0)\n\t\t\t\toutput = max(output, s[j] + j-i + n*(count[j]-(j>=i)));\n\t\t}\n\t\tprintf(\"%d \", output);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.522432701894317, "equal_cnt": 18, "replace_cnt": 8, "delete_cnt": 9, "insert_cnt": 0, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "141a734fd389f4a541ea8ebcdbcb93a6", "bug_code_uid": "a29e7442f73776df892c3c1028c5ebd0", "src_uid": "41bdb08253cf5706573f5d469ab0a7b3", "apr_id": "507b1585a6c13fa983874d75755edca6", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n int main(void)\n\n  {\n    int i,j,n,m,t=0,b[100]={0};\n    char a[102][102];\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<n;i++)\n       scanf(\"%s\",a[i]);\n            t=0;\n            for(i=0;i<m;i++)\n              {\n                for(j=0;j<n;j++)\n                    {\n                   if(a[j][i]>=t)\n                   t=a[j][i];\n                   }\n                 for(j=0;j<n;j++)\n                  if(a[j][i]==t)\n                  b[j]++;\n                  }\n             for(i=0,j=0;i<n;i++)\n               if(b[i]>0)\n               j++;\n            printf(\"%d\\n\",j);\n           return 0;\n           }\n", "fixed": "#include <stdio.h>\nint main()\n{\nint i,j,n,m,t=0,b[100]={0};\nchar a[102][102];\nscanf(\"%d %d\",&n,&m);\nfor(i=0;i<n;i++)\n     scanf(\"%s\",a[i]);\nfor(i=0;i<m;i++,t=0)\n {\n     for(j=0;j<n;j++)\n   {\n       if(a[j][i]>=t)\n     t=a[j][i];}\n     for(j=0;j<n;j++)\n      if(a[j][i]==t)\n       b[j]++;\n       }\n for(i=0,j=0;i<n;i++)\n    if(b[i]>0)\n     j++;\n  printf(\"%d\\n\",j);\n return 0;\n }\n"}
{"similarity_score": 0.3205298013245033, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "3a24354fe2967a2bc9fc5fd5f8cc609a", "bug_code_uid": "f95d7b653b9e90d1755058db281a14d7", "src_uid": "b18bbefd2a948da9dec1d6f27f219ed1", "apr_id": "0548b60d45490ba62c35ab2f39dd0e41", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint mn(int a[],int n);\nint main()\n{\n\tint n,a[10],i,m=-1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(m==-1)\n\t\t{\n\t\t\tif(i>=a[i])\n\t\t\tm=i+1;\n\t\t}\n\t}\n\tint x=mn(a,n);\n\tif(m==-1)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\ta[i]=a[i]-x;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(i>=a[i])\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",i+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\tprintf(\"%d\\n\",m);\n}\nint mn(int a[],int n)\n{\n\tint min=a[0],i;\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(min>a[i])\n\t\tmin=a[i];\n\t}\n\treturn min;\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,a[100000],k=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;;i++)\n    {\n        if(i==n)\n            i=0;\n        if((a[i]-k)<=0)\n            break;\n        k++;\n    }\n    printf(\"%d\\n\",i+1);\n    return 0;\n}"}
{"similarity_score": 0.958664546899841, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "b3e0c070838bab700fb0d942817c422b", "bug_code_uid": "8e3721c4fbf4834dacd2820daa486b70", "src_uid": "fb0a4c8f737c36596c2d8c1ae0d1e34e", "apr_id": "ef146bf932e73519068465b59fbcd09a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n    int n,s,t,a;\n    int b[100];\n    scanf(\"%d\", &a);\n    for (int i = 0; i <a ; ++i) {\n        scanf(\"%d%d%d\", &n, &s, &t);\n        if(s<t){\n            if(t>=n){\n                b[i] = s+1;\n            }\n            else b[i] = (n-s)+1;\n        }\n        if(t<s){\n            if(s>=n){\n                b[i] = t+1;\n            }\n\n           else b[i] = (n-t) + 1;\n        }\n        if(t==s){\n            if(t>=n){\n                b[i] = 1;\n            }\n            else b[i] = (n-s)+1;\n        }\n\n    }\n    for (int j = 0; j < a; ++j) {\n        printf(\"%d\\n\", b[j]);\n    }\n    return 0;\n}\n\n\n", "fixed": "int main(){\n    int n,s,t,a;\n    int b[100];\n    scanf(\"%d\", &a);\n    for (int i = 0; i <a ; ++i) {\n        scanf(\"%d%d%d\", &n, &s, &t);\n        if(s<t){\n            if(t>=n){\n                b[i] = (t-s)+1;\n            }\n            else b[i] = (n-s)+1;\n        }\n        if(t<s){\n            if(s>=n){\n                b[i] = (s-t)+1;\n            }\n\n           else b[i] = (n-t) + 1;\n        }\n        if(t==s){\n            if(t>=n){\n                b[i] = 1;\n            }\n            else b[i] = (n-s)+1;\n        }\n\n    }\n    for (int j = 0; j < a; ++j) {\n        printf(\"%d\\n\", b[j]);\n    }\n    return 0;\n}\n\n\n"}
{"similarity_score": 0.8184281842818428, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "21aa0bb8fb50038838c631348a0912dd", "bug_code_uid": "7ebfec86a824e17c719447d8e0662952", "src_uid": "5139d222fbbfa70d50e990f5d6c92726", "apr_id": "3a9b2890ea432463380ca6da5e35066c", "difficulty": 1100, "tags": ["brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 5000\n\nint is_palindrome(const int *a, int n){\n\n    for (int i=0; i<n/2; i++){\n        if (a[i]!=a[n-i-1]) return 0;\n    }\n    return 1;\n}\nvoid solve(const int *a, int n){\n\n    for (int i=0; i<n-2; i++){\n\n        for (int j=i+2; j<n; j++){\n\n            if (is_palindrome(a+i, j-i+1)){\n                printf(\"YES\\n\");\n                return;\n            }\n        }\n    }\n    printf(\"NO\\n\");\n}\n\nint main(){\n    int t, a[N], n;\n\n    scanf(\"%d\", &t);\n\n    for (int i=0; i<t; i++){\n        scanf(\"%d\", &n);\n        for (int j=0; j<n; j++) scanf(\"%d\", &a[j]);\n\n        solve(a, n);\n    }\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#define N 5000\n\nvoid solve(const int *a, int n){\n\n    for (int i=0; i<n-2; i++){\n        for (int j=i+2; j<n; j++){\n            if (a[i]==a[j]){\n                printf(\"YES\\n\");\n                return;\n            }\n        }\n    }\n    printf(\"NO\\n\");\n}\n\nint main(){\n    int t, a[N], n;\n\n    scanf(\"%d\", &t);\n\n    for (int i=0; i<t; i++){\n        scanf(\"%d\", &n);\n        for (int j=0; j<n; j++) scanf(\"%d\", &a[j]);\n\n        solve(a, n);\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.11928429423459244, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "ad6a026eed3077251a9a0e81f9937522", "bug_code_uid": "d7875814ad550b6c82a97a3ac99ff3a9", "src_uid": "241157c465fe5dd96acd514010904321", "apr_id": "168adc39d92e92914537536d59d57d66", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n  int i, d, a[200001];\n  float sum = 0, eq = 0;\n  scanf(\"%d\", &d);\n  for (i=0; i<d; i++){\n    scanf(\"%d\", &a[i]);\n    sum += a[i];\n  }\n  for (i=0; i<d; i++){\n    eq += a[i];\n    if (eq >= (sum/2))\n      break;\n  }\n  printf(\"%d\", i + 1);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint d;\n\tscanf(\"%d\",&d);\n\tint a[d], i, sum=0, sum1=0;\n\tfor(i=0;i<d;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\n\t}\n\tfor(i=0;i<d;i++)\n\t{\n\t\tsum1+=a[i];\n\t\tif(sum1>=(0.5*sum))\n\t\t\tbreak;\n\t}\n\tprintf(\"%d\",i+1);\n}"}
{"similarity_score": 0.9693593314763231, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "923af5d5a52b680423c93a49ce856024", "bug_code_uid": "19f902860c04806f20e91028875f5600", "src_uid": "580596d05a2eaa36d630d71ef1055c43", "apr_id": "2f930d64c346f22ca67096439f0faf7a", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\nint main()\n{\n  int n,i;\n  scanf(\"%d\",&n);\n  double a[n],s=0;\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%lf\",&a[i]);\n    s=s+a[i]/100;\n  }\n   \n   printf(\"%lf\",s/n*100);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n  int n,i;\n  scanf(\"%d\",&n);\n  double a[n],s=0;\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%lf\",&a[i]);\n    s=s+a[i]/100;\n  }\n   \n   printf(\"%lf\",s/n*100);\n}"}
{"similarity_score": 0.9725085910652921, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "e9b76c95999c884f9837c42cd1b86765", "bug_code_uid": "a9d0cd60272a6e742403b6becfc99444", "src_uid": "3bbe48918a7bf3faf01c74cb7296f6e0", "apr_id": "ae1a4932e6d5c263d44f5a949547578b", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define MAX 100000\nint main ()\n{\n\tint n, m;\n\tscanf(\"%d %d\",&n,&m);\n\tint tmp1, tmp2;\n\tlong double p = MAX;\n\tfor (int i=0; i<n; i++) \n\t{\n\t\tscanf(\"%d %d\",&tmp1,&tmp2);\n\t\tif ( ((long double)(tmp1*m) / tmp2) < p ) p = (long double)(tmp1*m) / tmp2;\n\t}\n\tprintf(\"%.8Lf\\n\",p);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#define MAX 100000\nint main ()\n{\n\tint n, m;\n\tscanf(\"%d %d\",&n,&m);\n\tint tmp1, tmp2;\n\tdouble p = MAX;\n\tfor (int i=0; i<n; i++) \n\t{\n\t\tscanf(\"%d %d\",&tmp1,&tmp2);\n\t\tif ( ((double)(tmp1*m) / tmp2) < p ) p = (double)(tmp1*m) / tmp2;\n\t}\n\tprintf(\"%.8f\\n\",p);\n\treturn 0;\n}\n"}
{"similarity_score": 0.07266982622432859, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "a7f883cfc3e4535d72e6bd0cb0fafebf", "bug_code_uid": "c9750e44658aae8471ce56bc56f58a3e", "src_uid": "41bdb08253cf5706573f5d469ab0a7b3", "apr_id": "dccebccee4de4bc330b0247593169b5b", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "int main()\n{\n    int a[256]={0},k,n,l=0,ll;\n    char ans[1000]={\"\"};\n    scanf(\"%i\",&n);  getchar();\n    while((k=getchar())!='\\n')a[k]++;\n    for(k='a';k<='z';k++){\n        if(a[k]%n){puts(\"-1\");return 0;}\n        ll=a[k]/n;\n        while(ll--)ans[l++]=k;\n    }\n    while(n--)printf(\"%s\",ans);\n}", "fixed": "#include<stdio.h>\nchar A[101][101],H[101],i,j,mx,s; int m,n;\nint main(){\n\tscanf(\"%d %d\",&m,&n);\n\tfor(i=0;i<m;i++)\n\t\tscanf(\"%s\",A[i]);\n\tfor(j=0;j<n;j++){\n\t\tfor(mx=A[0][j],i=1;i<m;i++)\n\t\t\tif(mx < A[i][j])\n\t\t\t\tmx = A[i][j];\n\t\tfor(i=0;i<m;i++)\n\t\t\tif(!H[i] && A[i][j] == mx)\n\t\t\t{ s++; H[i] = 1; }\t\n\t}\n\tprintf(\"%d\",s > m ? m : s);\n\treturn 0;\n}"}
{"similarity_score": 0.676402767102229, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "14ba7fcd4360627ceb1a7bf978ed934a", "bug_code_uid": "eb597590e702f960efc3ca94e075b7b3", "src_uid": "337b6d2a11a25ef917809e6409f8edef", "apr_id": "c3be25f40b9b4723052bcb0e2b89e669", "difficulty": 1400, "tags": ["dp", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid print(int *a,int n)\n{\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\nint main()\n{\n\tint max,a[505][505],i,j,cnt,n,m,q,x,y;\n\tscanf(\"%d %d %d\",&n,&m,&q);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcnt=0;\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\t\tif(a[i][j]==1)\n\t\t\t\t\tcnt++;\n\t\t}\n\t\ta[i][0]=cnt;\n\t}\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(a[x][y]==0)\n\t\t{\n\t\t\ta[x][0]++;\n\t\t\ta[x][y]=1;\n\t\t}\n\t\telse if(a[x][y]==1)\n\t\t{\n\t\t\ta[x][0]--;\n\t\t\ta[x][y]=0;\n\t\t}\n\t\tmax=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(max<a[j][0])\n\t\t\t\tmax=a[j][0];\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nvoid print(int *a,int n)\n{\n\tint i;\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\nint main()\n{\n\tint max,a[505][505],i,j,cnt,n,m,q,x,y;\n\tscanf(\"%d %d %d\",&n,&m,&q);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcnt=0;\n\t\tmax=0;\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\t\tif(a[i][j]==1)\n\t\t\t\t\tcnt++;\n\t\t\t\telse\n\t\t\t\t\tcnt=0;\n\t\t\t\tif(cnt>max)\n\t\t\t\t\tmax=cnt;\n\t\t}\n\t\ta[i][0]=max;\n\t}\n\tfor(i=0;i<q;i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\ta[x][y]=(a[x][y]^1);\n\t\tcnt=0;\n\t\tmax=0;\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\t\tif(a[x][j]==1)\n\t\t\t\t\tcnt++;\n\t\t\t\telse\n\t\t\t\t\tcnt=0;\n\t\t\t\tif(cnt>max)\n\t\t\t\t\tmax=cnt;\n\t\t}\n\t\ta[x][0]=max;\n\t\tmax=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(max<a[j][0])\n\t\t\t\tmax=a[j][0];\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9889948642699926, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8370e28ba61e44010f9bed4232039c00", "bug_code_uid": "0848e6194220ba579bbdfdbe0f5a06b5", "src_uid": "501b60c4dc465b8a60fd567b208ea1e3", "apr_id": "edb87eb04a30c9e1fc6564617e070c8d", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nchar s[10100];\nint idx[10100];\nint t[310][3];\nint n;\n\nint main(void) {\n    //freopen(\"input.txt\", \"r\", stdin);\n    scanf(\"%s\", s);\n\n    scanf(\"%d\", &n);\n\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d%d%d\", &t[i][0], &t[i][1], &t[i][2]);\n        t[i][0]--; t[i][1]--;\n    }\n\n    for (int i = 0; s[i]; i++) {\n        int c = i;\n        for (int j = 0; j < n; j++) {\n            if (t[j][0] <= c && c <= t[j][1]) {\n                c += t[j][2];\n                if (c > t[j][1]) \n                    c -= (t[j][1] - t[j][0] + 1);\n            }\n        }\n        idx[c] = i;\n    }\n\n    for (int i = 0; s[i]; i++) {\n        printf(\"%c\", s[idx[i]]);\n    }\n}", "fixed": "#include <stdio.h>\n\nchar s[10100];\nint idx[10100];\nint t[310][3];\nint n;\n\nint main(void) {\n    //freopen(\"input.txt\", \"r\", stdin);\n    scanf(\"%s\", s);\n\n    scanf(\"%d\", &n);\n\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d%d%d\", &t[i][0], &t[i][1], &t[i][2]);\n        t[i][0]--; t[i][1]--;\n    }\n\n    for (int i = 0; s[i] > 0; i++) {\n        int c = i;\n        for (int j = 0; j < n; j++) {\n            if (t[j][0] <= c && c <= t[j][1]) {\n                c += t[j][2];\n                while (c > t[j][1]) \n                    c -= (t[j][1] - t[j][0] + 1);\n            }\n        }\n        idx[c] = i;\n    }\n\n    for (int i = 0; s[i] > 0; i++) {\n        printf(\"%c\", s[idx[i]]);\n    }\n}"}
{"similarity_score": 0.9976359338061466, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "13fb2a2a8d6a81420fcceb2cad2f0631", "bug_code_uid": "fab24ea39edac1cb138e662ecf4b62e3", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "500183edbe1f994b45f12b4e212fe62f", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n,i,j=2,k;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t    scanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t    if(a[i]>=2)\n\t    {\n    \t    if(a[i]%2==0)\n    \t    {\n    \t        for(k=0;k<(a[i]/2);k++)\n    \t        {\n    \t            printf(\"1\");\n    \t        }\n    \t        printf(\"\\n\");\n    \t    }\n    \t    else\n    \t    {\n    \t        if(a[i]>3)\n    \t        {\n        \t        a[i]=a[i]-3;\n        \t        printf(\"3\");\n            \t    if(a[i]%2==0)\n            \t    {\n            \t       for(k=0;k<(a[i]/2);k++)\n            \t       {\n            \t           printf(\"1\");\n            \t       }\n            \t    }\n            \t    printf(\"\\n\");\n    \t        }\n    \t        else\n    \t        {\n    \t            printf(\"3\");\n    \t            printf(\"\\n\");\n    \t        }\n    \t    }\n\t    } \n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint n,i,j=2,k;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t    scanf(\"%d\",&a[i]);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t    if(a[i]>=2)\n\t    {\n    \t    if(a[i]%2==0)\n    \t    {\n    \t        for(k=0;k<(a[i]/2);k++)\n    \t        {\n    \t            printf(\"1\");\n    \t        }\n    \t        printf(\"\\n\");\n    \t    }\n    \t    else\n    \t    {\n    \t        if(a[i]>3)\n    \t        {\n        \t        a[i]=a[i]-3;\n        \t        printf(\"7\");\n            \t    if(a[i]%2==0)\n            \t    {\n            \t       for(k=0;k<(a[i]/2);k++)\n            \t       {\n            \t           printf(\"1\");\n            \t       }\n            \t    }\n            \t    printf(\"\\n\");\n    \t        }\n    \t        else\n    \t        {\n    \t            printf(\"7\");\n    \t            printf(\"\\n\");\n    \t        }\n    \t    }\n\t    } \n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9698630136986301, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6d8286a3154f5bd53e96b4bd777bffe0", "bug_code_uid": "a993887f58c855fcc82dbd03971e251b", "src_uid": "621c82478be3dadcf60c383ba078a49e", "apr_id": "ab04ccad8b354ff105206277b3820c8f", "difficulty": 1200, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint x,y,z,sum,fr[4],i,n;\nchar a[100001],b[100001];\n\nint main()\n{\nscanf(\"%d %s %s\",&n,a,b);\n\nfor(i=0;i<n;i++)\n{\n    x=a[i]-'0';\n    y=b[i]-'0';\n\n    if(x==0 && y==1)\n        z=-1;\n    else\n        z=x+y;\n\n    fr[z+1]++;\n\n}\n\nsum=fr[0]*fr[2]+fr[1]*fr[2]+fr[1]*fr[3];\nprintf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint x,y,z;\nlong long sum,fr[4],n,i;\nchar a[100001],b[100001];\n\nint main()\n{\nscanf(\"%d %s %s\",&n,a,b);\n\nfor(i=0;i<n;i++)\n{\n    x=a[i]-'0';\n    y=b[i]-'0';\n\n    if(x==0 && y==1)\n        z=-1;\n    else\n        z=x+y;\n\n    fr[z+1]++;\n\n}\n\nsum=fr[0]*fr[2]+fr[1]*fr[2]+fr[1]*fr[3];\nprintf(\"%I64d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.3822341857335128, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "77401876484d0f23569e58da8c56016d", "bug_code_uid": "e64f9474f8a63c3f3ec3acc965b4f757", "src_uid": "0cbd3eee259b1436f82e259be7d7ee0e", "apr_id": "88070ef26b389e662a7a92b706a82f68", "difficulty": 1200, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tstatic int aa[5000], kk[5005];\n\tint n, i, max;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\tkk[aa[i]]++;\n\t}\n\tmax = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (max < kk[aa[i]])\n\t\t\tmax = kk[aa[i]];\n\tprintf(\"%d\\n\", max);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ia - ib;\n}\n\nint main() {\n\tstatic int aa[5000];\n\tint n, i, j, max;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d\", &aa[i]);\n\tqsort(aa, n, sizeof *aa, compare);\n\tmax = 0;\n\tfor (i = 0; i < n; i = j) {\n\t\tfor (j = i + 1; aa[i] == aa[j]; j++)\n\t\t\t;\n\t\tif (max < j - i)\n\t\t\tmax = j - i;\n\t}\n\tprintf(\"%d\\n\", max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9634443541835905, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c4ad17c7035128124d193d3b8fed86de", "bug_code_uid": "e05aac12c4e5f425c754559ea9f6d542", "src_uid": "0c7e019e1e955cadacca55b4e823a3e5", "apr_id": "18fc14570bb8b61af9fe3ebeab6535c6", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,a[10000],i,s=0;\n\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]%4!=0)\n            a[i]=0;\n        else if(a[i]>630)\n            a[i]=0;\n    }\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<4)\n            printf(\"NO\\n\");\n        else{\n            printf(\"YES\\n\");\n\n            for(size_t j=2;j<=a[i];j+=2)\n                printf(\"%d \",j);\n\n            for(size_t j=1;j<=a[i]/2;j+=2)\n                printf(\"%d \",j);\n\n                for(size_t j=(a[i]/2+3);j<=(a[i]+1);j+=2)\n                printf(\"%d \",j);\n\n                printf(\"\\n\");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,a[10000],i,s=0;\n\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]%4!=0)\n            a[i]=0;\n\n    }\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]<4)\n            printf(\"NO\\n\");\n        else{\n            printf(\"YES\\n\");\n\n            for(size_t j=2;j<=a[i];j+=2)\n                printf(\"%d \",j);\n\n            for(size_t j=1;j<=a[i]/2;j+=2)\n                printf(\"%d \",j);\n\n                for(size_t j=(a[i]/2+3);j<=(a[i]+1);j+=2)\n                printf(\"%d \",j);\n\n                printf(\"\\n\");\n        }\n    }\n}\n"}
{"similarity_score": 0.6886886886886887, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5ebb20abebb068880597d671a6bb2d41", "bug_code_uid": "6d1290c44c33a8676145dcbb0364d948", "src_uid": "28c555fefd5c36697a5082c61d8a82b3", "apr_id": "63fbcf92e78cbea08d1df745531d50a5", "difficulty": 900, "tags": ["implementation", "sortings", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n    int n,i,b,c,j,arr[300000];\n    scanf(\"%d\",&n);\n    long long int sum=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            if(arr[i]>arr[j]){\n                b=arr[i];\n                arr[i]=arr[j];\n                arr[j]=b;\n            }\n        }\n    }\n    for(i=0;i<n;i++){\n        c=arr[i]+arr[n-1-i];\n        sum+=(c*c);\n    if(i+1==n-1-i)\n        break;\n    }\n\n    printf(\"%lld\\n\",sum);\n\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint compare(const void * a, const void * b)\n{\n    return ( *(int*)a - *(int*)b );\n}\nint main()\n{\n    int n,i,b,c,j,arr[300000];\n    scanf(\"%d\",&n);\n    long long int sum=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&arr[i]);\n    }\n   qsort(arr, n, sizeof(int), compare);\n    for(i=0;i<n;i++){\n        c=arr[i]+arr[n-1-i];\n        sum+=(c*c);\n    if(i+1==n-1-i)\n        break;\n    }\n\n    printf(\"%lld\\n\",sum);\n\n    return 0;\n}\n\n"}
{"similarity_score": 0.6274944567627494, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "ff926159001aa7be2dadc91ad02cdebd", "bug_code_uid": "3c5c0fd46efdb23cf81252b93bc8e78e", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "730b60c2bfacbd9497542816ac287f37", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    char s[1000],t[1000];\n    int i,j=0,k,p,count=0;\n    gets(s);\n    for(i=1;s[i]!='\\0';i++){\n        if(s[i]>='a'&&s[i]<='z'){\n           t[j]=s[i];\n           j++;\n        }\n        else\n            continue;\n    }\n    t[j]='\\0';\n    p=strlen(t);\n    for(j=0;t[j]!='\\0';j++){\n        for(k=j+1;t[k]!='\\0';k++){\n            if(t[j]==t[k]){\n                count++;\n            }\n            else\n                continue;\n        }\n    }\n    printf(\"%d\",(p-count));\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    char s[1000],t[1000],ch;\n    int i,j=0,m,p,count;\n    gets(s);\n    for(i=1;s[i]!='\\0';i++){\n        if(s[i]>='a'&&s[i]<='z'){\n           t[j]=s[i];\n           j++;\n        }\n        else\n            continue;\n    }\n    t[j]='\\0';\n    m=0;\n    for(ch='a';ch<='z';ch++){\ncount=0;\nfor(j=0;t[j]!='\\0';j++){\nif(ch==t[j]){\ncount++;\nbreak;\n}\n\n}\n\n\n  m=m+count;\n\n}\nprintf(\"%d\",m);\n}\n"}
{"similarity_score": 0.9941775836972343, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "72eabb6c243e4ff6b5336ccb4720abdc", "bug_code_uid": "3ce13e7cdc0a92ea67c3ff0f28fe2a6b", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "205c8ee8904cccb17126e782d2f61f32", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tint p[n], q[n], r[n], n1, n2, n3;\n\tn1 = n2 = n3 = 0;\n\tfor (int i = 0; i < n; i++) {\n        int t;\n        scanf(\"%d\", &t);\n\n\t\tif (t < 0) p[n1++] = t;\n\t\telse if (t > 0) q[n2++] = t;\n\t\telse r[n3++] = t;\n\t}\n\n\tif (n2 == 0) {\n\t\tq[n2++] = p[--n1];\n\t\tq[n2++] = p[--n1];\n\t}\n\tif (n1 % 2 == 0)\n\t\tr[n3++] = p[n1--];\n\n\tprintf(\"%d \", n1);\n\tfor (int i = 0; i < n1; i++)\n\t\tprintf(\"%d%c\", p[i], (i == n1-1) ? '\\n' : ' ');\n\tprintf(\"%d \", n2);\n\tfor (int i = 0; i < n2; i++)\n\t\tprintf(\"%d%c\", q[i], (i == n2-1) ? '\\n' : ' ');\n\tprintf(\"%d \", n3);\n\tfor (int i = 0; i < n3; i++)\n\t\tprintf(\"%d%c\", r[i], (i == n3-1) ? '\\n' : ' ');\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tint p[n], q[n], r[n], n1, n2, n3;\n\tn1 = n2 = n3 = 0;\n\tfor (int i = 0; i < n; i++) {\n        int t;\n        scanf(\"%d\", &t);\n\n\t\tif (t < 0) p[n1++] = t;\n\t\telse if (t > 0) q[n2++] = t;\n\t\telse r[n3++] = t;\n\t}\n\n\tif (n2 == 0) {\n\t\tq[n2++] = p[--n1];\n\t\tq[n2++] = p[--n1];\n\t}\n\tif (n1 % 2 == 0)\n\t\tr[n3++] = p[--n1];\n\n\tprintf(\"%d \", n1);\n\tfor (int i = 0; i < n1; i++)\n\t\tprintf(\"%d%c\", p[i], (i == n1-1) ? '\\n' : ' ');\n\tprintf(\"%d \", n2);\n\tfor (int i = 0; i < n2; i++)\n\t\tprintf(\"%d%c\", q[i], (i == n2-1) ? '\\n' : ' ');\n\tprintf(\"%d \", n3);\n\tfor (int i = 0; i < n3; i++)\n\t\tprintf(\"%d%c\", r[i], (i == n3-1) ? '\\n' : ' ');\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.7554479418886199, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "da7e61f93c78861701a61c2d011902f4", "bug_code_uid": "50cf882e0972dcf36d908290db569b5c", "src_uid": "7c2a61de728e6767b25e58c74497bbae", "apr_id": "b5d9fdcf6794541be4a9248be23041c9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint t,n,m,a;\n\n\tscanf(\"%d\\n\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\twhile(n--)\n\t\t\tscanf(\"%d\",&a);\n\t\tprintf(\"%d\\n\",m);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint t,n,m,a;\n\n\tscanf(\"%d\\n\",&t);\n\twhile(t--)\n\t{\n\t\tint c=0;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\twhile(n--)\n\t\t{\n\t\t\tscanf(\"%d\",&a);\n\t\t\tc+=a;\n\t\t}\n\t\tif(c>m)\n\t\t\tprintf(\"%d\\n\",m);\n\t\telse\n\t\t\tprintf(\"%d\\n\",c);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.998019801980198, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "8d6fef57b02c09b3d94780c8b6a9a398", "bug_code_uid": "980b00875bc91153c2c02124897d8822", "src_uid": "53a3313f5d6ce19413d72473717054fc", "apr_id": "5fa7e195d0d4cbcdd7e8618f0d96344c", "difficulty": 900, "tags": ["implementation", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n\nint main()\n{\n    int t=0,n;\n    scanf(\"%d\",&t);\n    while(t-->0)\n    {\n        n=0;\n        int f=0;\n        scanf(\"%d\",&n);\n        int a[101];\n        for(int i=0;i<102;i++)\n            a[i]=0;\n        int min=1000;\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]<min)\n                min=a[i];\n        }\n        for(int i=0;i<n;i++)\n        {\n            a[i]-=min;\n            if(a[i]%2==0)\n                continue;\n            else\n                f=1;\n        }\n        if(f==1)\n            printf(\"NO\");\n        else\n            printf(\"YES\");\n            \n        \n        \n    }\n}\n", "fixed": "/******************************************************************************\n\n                            Online C Compiler.\n                Code, Compile, Run and Debug C program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <stdio.h>\n\nint main()\n{\n    int t=0,n;\n    scanf(\"%d\",&t);\n    while(t-->0)\n    {\n        n=0;\n        int f=0;\n        scanf(\"%d\",&n);\n        int a[101];\n        for(int i=0;i<102;i++)\n            a[i]=0;\n        int min=1000;\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]<min)\n                min=a[i];\n        }\n        for(int i=0;i<n;i++)\n        {\n            a[i]-=min;\n            if(a[i]%2==0)\n                continue;\n            else\n                f=1;\n        }\n        if(f==1)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n            \n        \n        \n    }\n}\n"}
{"similarity_score": 0.409366869037294, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1fb1be0c4f0a7b7993764f41d8ab4231", "bug_code_uid": "948b80c0d2a30591ff56f9794d0e8a3d", "src_uid": "6ae754639d96790c890f9d1ab259332a", "apr_id": "4f3fa7a2d266c2dc02a6dde9430cc312", "difficulty": 1000, "tags": ["brute force", "geometry", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\t#include<stdio.h>\r\n\tint main()\r\n\t{\r\n\t    int t;\r\n\t    scanf(\"%d\",&t);\r\n\t    while(t--)\r\n\t    {\r\n\r\n          int n;\r\n          scanf(\"%d\",&n);\r\n          if(n%2){printf(\"No\\n\");}\r\n          else\r\n          {\r\n          \tif(n&&(!(n&(n-1))))\r\n          \t\tprintf(\"Yes\\n\");\r\n          \telse printf(\"No\\n\");\r\n          }\r\n\t\treturn 0;\r\n\t}", "fixed": "\t#include<stdio.h>\r\n    #include<math.h>\r\n\tint main()\r\n\t{\r\n\t    int t;\r\n\t    scanf(\"%d\",&t);\r\n\t    while(t--)\r\n\t    {\r\n\r\n          int n;\r\n          int flag=1;\r\n          scanf(\"%d\",&n);\r\n          if(n%2){flag=1;}\r\n        \r\n          \r\n           if(n%4==0)\r\n          \t{\r\n          \t\tlong long d=n/4;\r\n          \t\t long long sr = sqrt(d);\r\n         \r\n \r\n                 if((sr*sr)==d) flag=0;\r\n                 else if(flag) flag=1;\r\n          \t}\r\n          \t if(n%2==0)\r\n          \t{\r\n          \t\tlong long d=n/2;\r\n          \t\t long long sr = sqrt(d);\r\n         \r\n \r\n                 if((sr*sr)==d) flag=0;\r\n                 else if(flag) flag=1;\r\n                 \r\n          \t}\r\n          \t\r\n          \tif(flag)printf(\"No\\n\");\r\n          \telse printf(\"Yes\\n\");\r\n          \t\r\n\r\n          }\r\n      \r\n\t\treturn 0;\r\n\t}"}
{"similarity_score": 0.9971126082771896, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8b6881a9583d57b623299b1047e62bc6", "bug_code_uid": "ba8e2ccb3a12f85c852c307a0b84b0a2", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "a056be5efcef696730b4bf81102097bd", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,i,j,k,f=0,z=0;\n    scanf(\"%d\",&n);\n    int A[n];\n    scanf(\"%d\",&A[0]);\n    if(A[0]==0){\n            z++;\n        }else{\n            f++;\n        }\n    for(i=1;i<n;i++){\n        scanf(\" %d\",&A[i]);\n        if(A[i]==0){\n            z++;\n        }else{\n            f++;\n        }\n    }\n    if(z>0){\n        if((f%9) != 0){\n            k=(f/9);\n            j=0;\n            for(i=0;i<n,j<(k*9);i++){\n                if(A[i]==5){\n                    printf(\"%d\",A[i]);j++;\n                }\n            }\n            for(i=0;i<n;i++){\n                if(A[i]==0){\n                    printf(\"%d\",A[i]);\n                    if(j==0){break;}\n                }\n            }\n        }else{\n            for(i=0;i<n;i++){\n                if(A[i]==5){\n                    printf(\"%d\",A[i]);\n                }\n            }\n            for(i=0;i<n;i++){\n                if(A[i]==0){\n                    printf(\"%d\",A[i]);\n                }\n            }\n        }\n    }else{\n        printf(\"%d\",-1);\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,i,j,k,f=0,z=0;\n    scanf(\"%d\",&n);\n    int A[n];\n    scanf(\"%d\",&A[0]);\n    if(A[0]==0){\n            z++;\n        }else{\n            f++;\n        }\n    for(i=1;i<n;i++){\n        scanf(\" %d\",&A[i]);\n        if(A[i]==0){\n            z++;\n        }else{\n            f++;\n        }\n    }\n    if(z>0){\n        //if((f%9) != 0){\n            k=(f/9);\n            j=0;\n            for(i=0;i<n,j<(k*9);i++){\n                if(A[i]==5){\n                    printf(\"%d\",A[i]);j++;\n                }\n            }\n            for(i=0;i<n;i++){\n                if(A[i]==0){\n                    printf(\"%d\",A[i]);\n                    if(j==0){break;}\n                }\n            }\n        /*}else{\n            for(i=0;i<n;i++){\n                if(A[i]==5){\n                    printf(\"%d\",A[i]);\n                }\n            }\n            for(i=0;i<n;i++){\n                if(A[i]==0){\n                    printf(\"%d\",A[i]);\n                }\n            }\n        }*/\n    }else{\n        printf(\"%d\",-1);\n    }\n}"}
{"similarity_score": 0.9828456104944501, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "df2983d50d4ae067a7aba68928dd3eb6", "bug_code_uid": "483bd46deca9b18735acbc1afe3f814f", "src_uid": "99e5c907b623c310d6f1599f485ca21d", "apr_id": "a8ac299e48a722898aafb088c9ff7775", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint cmp(int *a,int *b) {\n    return *a-*b;\n}\n\nint main()\n{   int t,i,j,n,k=1;\n    scanf(\"%d\",&t);\n    for(i=0; i<t; i++) {\n        scanf(\"%d\",&n);\n        int a[n];\n        for(j=0; j<n; j++)\n            scanf(\"%d\",a[j]);\n        qsort(a,n, sizeof(int),cmp)\n        // printf(\"Hello world!\");\n        for(j=0; j<n; j++)\n            if(a[0]==a[j])\n                k++;\n            else\n                break;\n        printf(\"%d\\n\",n-k);\n        k=1;\n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\nint cmp(int *a,int *b) {\n    return *a-*b;\n}\n\nint main()\n{   int t,i,j,n,k=1;\n    scanf(\"%d\",&t);\n    for(i=0; i<t; i++) {\n        scanf(\"%d\",&n);\n        int a[n];\n        for(j=0; j<n; j++)\n            scanf(\"%d\",&a[j]);\n        qsort(a,n, sizeof(int),cmp); \n        // printf(\"Hello world!\");\n        for(j=1; j<n; j++)\n        {   if(a[0]==a[j])\n                k++;\n            else\n                break;\n        }\n        printf(\"%d\\n\",n-k);\n        k=1;\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.9656357388316151, "equal_cnt": 1, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "515e93e62c84630a998d2218c200fa9c", "bug_code_uid": "e36bc3bf81c0d2ef2d74d4ed62454d42", "src_uid": "dcca7c58ba7111125608f659a577c3a2", "apr_id": "037e7309995f69809dedaa787e431d8c", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <iostream>\n#include <algorithm>\n#include <stdio.h>\n#include <stdlib.h>\n\n\nint a[105];\n\nint main()\n{\n\tint n, s;\n\tint h, m;\n\tscanf(\"%d %d\", &n, &s);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d %d\", &h, &m);\n\t\ta[i] = h*60+m;\n\t}\n\tint flag = 1;\n\tif (a[0]>=s+1)\n\t{\n\t\tflag = 0;\n\t\tprintf(\"0 0\\n\");\n\t}\n\telse{\n\t\tfor (int i = 1; i < n; i++)\n\t\t{\n\t\t\tif (a[i] - a[i - 1] >= (s + 1) * 2)\n\t\t\t{\n\t\t\t\ta[i - 1] += s + 1;\n\t\t\t\tprintf(\"%d %d\\n\", a[i - 1] / 60, a[i - 1] % 60);\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (flag)\n\t{\n\t\ta[n - 1] += s + 1;\n\t\tprintf(\"%d %d\\n\", a[n - 1] / 60, a[n - 1] % 60);\n\t}\n\t\n\treturn 0;\n}", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n\n\nint a[105];\n\nint main()\n{\n\tint n, s;\n\tint h, m;\n\tscanf(\"%d %d\", &n, &s);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d %d\", &h, &m);\n\t\ta[i] = h*60+m;\n\t}\n\tint flag = 1;\n\tif (a[0]>=s+1)\n\t{\n\t\tflag = 0;\n\t\tprintf(\"0 0\\n\");\n\t}\n\telse{\n\t\tfor (int i = 1; i < n; i++)\n\t\t{\n\t\t\tif (a[i] - a[i - 1] >= (s + 1) * 2)\n\t\t\t{\n\t\t\t\ta[i - 1] += s + 1;\n\t\t\t\tprintf(\"%d %d\\n\", a[i - 1] / 60, a[i - 1] % 60);\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (flag)\n\t{\n\t\ta[n - 1] += s + 1;\n\t\tprintf(\"%d %d\\n\", a[n - 1] / 60, a[n - 1] % 60);\n\t}\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.9515859766277128, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a83a480482d1203a6432f71e6125a6d1", "bug_code_uid": "f77cf0690f957bc53ff4db9b24626ced", "src_uid": "d5e09a8fb7eeeba9a41daa2b565866ba", "apr_id": "d9ea7662f27eed59dc2a20c880b302e2", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n  int T;\n  int n;\n  int i;\n  int a, b, c;\n\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d\", &n);\n    for (i=0; i<n; i+=2) {\n      scanf(\"%d %d\", &a, &b);\n      c = a*b;\n      printf(\"%d %d\", -c / a, c / b);\n    }\n    printf(\"\\n\");\n  }\n\n  return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n  int T;\n  int n;\n  int i;\n  int a, b, c;\n\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d\", &n);\n    for (i=0; i<n; i+=2) {\n      scanf(\"%d %d\", &a, &b);\n      c = a*b;\n      if (i!=0) printf(\" \");\n      printf(\"%d %d\", -c / a, c / b);\n    }\n    printf(\"\\n\");\n  }\n\n  return 0;\n}\n"}
{"similarity_score": 0.9853801169590644, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "05272dcf95d2836b92f395c40f94ffdb", "bug_code_uid": "a06e1d26df74f4a1f8b75247f819f664", "src_uid": "668f85cc331bc7bcdd708d9190bbd6e8", "apr_id": "f513730a9c0023205f1c3070f52f956a", "difficulty": 1500, "tags": ["data structures", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\ntypedef struct IndM{\n            long long int I;\n            struct IndM *Sgte;\n} INDM;\n\nint minimo(INDM *, int * , int );\n\nint main(){\n    int i,cant;\n    INDM *aux;\n    INDM *indices;\n\n    scanf(\"%d\",&cant);\n    int edad[cant],desc[cant];\n\n    for(i=0;i<cant;i++){\n        scanf(\"%d\",&edad[i]);\n    }\n\n    indices=(INDM *)malloc(sizeof(INDM));\n    indices->I=cant-1;\n    indices->Sgte=NULL;\n\n    for(i=cant-1;i>=0;i--){\n        if(edad[i]>edad[indices->I]){\n            desc[i]=minimo(indices,edad,i);\n        }\n        else{\n            if(edad[i]<edad[indices->I]){\n                aux=(INDM *)malloc(sizeof(INDM));\n                aux->I=i;\n                aux->Sgte=indices;\n                indices=aux;\n            }\n                desc[i]=-1;\n        }\n    }\n    while(cant--){\n        printf(\"%d \",desc[i]);\n    }\n    return 0;\n}\nint minimo(INDM *Aux, int E[],int N){\n    int I;\n    for(;Aux!=NULL && E[N]>E[Aux->I]; Aux=Aux->Sgte)\n            I=Aux->I-N-1;\n    return I;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\ntypedef struct IndM{\n            long long int I;\n            struct IndM *Sgte;\n} INDM;\n\nint minimo(INDM *, int * , int );\n\nint main(){\n    int i,cant;\n    INDM *aux;\n    INDM *indices;\n\n    scanf(\"%d\",&cant);\n    int edad[cant],desc[cant];\n\n    for(i=0;i<cant;i++){\n        scanf(\"%d\",&edad[i]);\n    }\n\n    indices=(INDM *)malloc(sizeof(INDM));\n    indices->I=cant-1;\n    indices->Sgte=NULL;\n\n    for(i=cant-1;i>=0;i--){\n        if(edad[i]>edad[indices->I]){\n            desc[i]=minimo(indices,edad,i);\n        }\n        else{\n            if(edad[i]<edad[indices->I]){\n                aux=(INDM *)malloc(sizeof(INDM));\n                aux->I=i;\n                aux->Sgte=indices;\n                indices=aux;\n            }\n                desc[i]=-1;\n        }\n    }\n    for(i=0;i<cant;i++){\n        printf(\"%d \",desc[i]);\n    }\n    return 0;\n}\nint minimo(INDM *Aux, int E[],int N){\n    int I;\n    for(;Aux!=NULL && E[N]>E[Aux->I]; Aux=Aux->Sgte)\n            I=Aux->I-N-1;\n    return I;\n}\n"}
{"similarity_score": 0.7126948775055679, "equal_cnt": 26, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 23, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "101b670f63ce25ce1738bd566bfe6c26", "bug_code_uid": "3412cc75a3c2fafc6b6fcbe49d75c619", "src_uid": "2584fa8c1adb1aa8cd5c28a8610ff72d", "apr_id": "bfb40f0e22a779f0e8862e80d90d8444", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n        int main()\n        {\n        int n, count;\n        char str[1000];\n\n        scanf(\"%d\", &n);\n        count = 0;\n        if(n%4 == 0 )\n        while(n){\n        printf(\"4\");\n        n -= 4;\n        }\n        else{\n        while( n%7&&n>0){\n        str[count++]='4';\n        n-=4;\n        }\n        if(n<0){\n        printf(\"-1\");\n        count = 0;\n        }\n        else\n        while(n>0){\n        str[count++] = '7';\n        n-=7;\n        }\n        str[count]='\\0';\n        }\n        if(count)\n        printf(\"%s\", str);\n        printf(\"\\n\");\n        return 0;\n        }", "fixed": "#include <stdio.h>\n\n        int main()\n\t        {\n\t\t\t        int n, count;\n\t\t\t\t        char str[1000000];\n\n\t\t\t\t\t        scanf(\"%d\", &n);\n\t\t\t\t\t\t        count = 0;\n\t\t\t\t\t\t\t\t\t\t        while( n%7&&n>0){\n\t\t\t\t\t\t\t\t\t\t\t\tstr[count++]='4';\n\t\t\t\t\t\t\t\t\t\t\t\t\t        n-=4;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t\t\t\t        if(n<0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t        printf(\"-1\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        count = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t\t\t\t\t        else\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        while(n>0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        str[count++] = '7';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        n-=7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t\t\t\t\t\t        str[count]='\\0';\n\t\t\t\t\t\t\t\t\t        if(count)\n\t\t\t\t\t\t\t\t\t\t\t        printf(\"%s\", str);\n\t\t\t\t\t\t\t\t\t\t        printf(\"\\n\");\n\t\t\t\t\t\t\t\t\t\t\t        return 0;\n\t\t\t\t\t\t\t\t\t\t\t\t        }\n"}
{"similarity_score": 0.7373637264618434, "equal_cnt": 17, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 17, "lang": "GNU C", "fix_code_uid": "7f570ff07a5f6bd01a609e969b5b5ef7", "bug_code_uid": "ccf8c7c519984c9347b3e667a4580293", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "2a86bb4d57d772afadd90320a656bd18", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n    int n,i,a=0,d=0;\n    scanf(\"%d\",&n);\n    char ch[n+10];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&ch[i]);\n    }\n    for(i=0;ch[i]!='\\0';i++)\n    {\n        if(ch[i]=='A')\n        {\n            a++;\n        }\n       if(ch[i]=='D')\n        {\n            d++;\n        }\n    }\n    if(a>d)\n    {\n        printf(\"Anton\\n\");\n    }\n    else if(d>a)\n    {\n        printf(\"Danik\\n\");\n    }\n    else\n    {\n        printf(\"Friendship\\n\");\n    }\n   return  0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,a,i,d;\n    scanf(\"%d\",&n);\n    char str[100000];\n    scanf(\"%s\",&str);\n    i=0;\n    a=0;\n    d=0;\n    while(str[i]!= '\\0')\n    {\n        if(str[i]=='A')\n        {\n            a++;\n        }\n        else if(str[i]=='D')\n        {\n            d++;\n        }\n        i++;\n    }\n    if(a>d)\n    {\n        printf(\"Anton\\n\");\n    }\n    else if(d>a)\n    {\n        printf(\"Danik\\n\");\n    }\n    else if(d==a)\n    {\n        printf(\"Friendship\\n\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.8032454361054767, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c00350eebbb28b9cd9fea81527e188a0", "bug_code_uid": "375ee525e9b9a10b67d3731fe72c5fff", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "e8afcf2adcd1460dbea3d3fe82052198", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,j=0,i;\n \n    scanf(\"%d\",&n);\n    int k [n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&k[i]);\n    }\n    for(i=0;i<n;i++){\n        if((k[i]!=k[i+1]{\n            j++;\n        }\n    }\n \n    printf(\"%d\",j);\n}\n  \n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,j=1,i;\n\n    scanf(\"%d\",&n);\n    int k [n];\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&k[i]);\n    }\n    for(i=1;i<n;i++){\n        if(k[i]!=k[i-1]){\n            j=j+1;\n        }\n    }\n\n    printf(\"%d\",j);\n}\n"}
{"similarity_score": 0.9929824561403509, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "af1a4bc75c82323fe21d2d8d244c71a6", "bug_code_uid": "38329da4b0f3ec01bae1fac49e6e1a8f", "src_uid": "28610d192329c78580db354f8dfc4094", "apr_id": "2b39b87b55b7ece19b037450948a07af", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n#define ll long long\n\nint main()\n{\n    ll t,x,y,k,a,s;\n\n    scanf(\"%lld\",&t);\n\n    while(t--)\n    {\n        scanf(\"%lld %lld %lld\",&x,&y,&k);\n\n        s=(y*k)+k-x;\n        x--;\n\n        if(s%x==0) s=s/x;\n        else s=s/x+1;\n\n        printf(\"%lld\\n\",s+1+k);\n    }\n}\n", "fixed": "#include<stdio.h>\n\n#define ll long long\n\nint main()\n{\n    ll t,x,y,k,a,s;\n\n    scanf(\"%lld\",&t);\n\n    while(t--)\n    {\n        scanf(\"%lld %lld %lld\",&x,&y,&k);\n\n        s=(y*k)+k-1;\n        x--;\n\n        if(s%x==0) s=s/x;\n        else s=s/x+1;\n\n        printf(\"%lld\\n\",s+k);\n    }\n}\n"}
{"similarity_score": 0.9774236387782205, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "be07afd678f39e9dfddc4bffcbabefa1", "bug_code_uid": "7db82a86a6fb290233e239a26a662d52", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "1bc46a27e926a625b6107ea19b73727c", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n# define max 1000000\n\nint a[max+1],b[10000],k=0;\nvoid seive()\n{\n    int i,j;\n    a[0]=1;\n    a[1]=1;\n    b[k++]=2;\n    for(i=2;i<=max;i+=2) a[i]=1;\n\n    for(i=3;i*i<max;i+=2){\n            if(a[i]==0) {\n            b[k++]=i;\n           for(j=i;j<max;j+=i) {if(a[j]==0)a[j]=1;}\n            }\n    }\n    return;\n}\nint isprime(int p){\n    int i=0;\n    while(b[i]*b[i]<=p){\n        if(b[i]!=p && p%b[i]==0) return 1;\n        i++;\n    }\n    return 2;\n}\nint main()\n{\n    int n,d,c,i,j=2;\n    seive();\n    scanf(\"%d\",&n);\n    for(i=4;i/2<n;i++)\n    {\n        d=n-i;\n        if(i==b[j]) j++;\n        else if(isprime(d)==1){\n            printf(\"%d %d\\n\",i,d);\n            break;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n#define max 10000000\n\nlong int a[max+1],b[10000],k=0;\nvoid seive()\n{\n    long int i,j;\n    a[0]=1;\n    a[1]=1;\n    b[k++]=2;\n    for(i=2;i<=max;i+=2) a[i]=1;\n\n    for(i=3;i*i<max;i+=2){\n            if(a[i]==0) {\n            b[k++]=i;\n           for(j=i;j<max;j+=i) {if(a[j]==0)a[j]=1;}\n            }\n    }\n    return;\n}\nint isprime(long int p){\n    long int i=0;\n    while(b[i]*b[i]<=p){\n        if(b[i]!=p && p%b[i]==0) return 1;\n        i++;\n    }\n    return 2;\n}\nint main()\n{\n    long int n,d,c,i,j=2;\n    seive();\n    scanf(\"%ld\",&n);\n    for(i=4;i/2<n;i++)\n    {\n        d=n-i;\n        if(i==b[j]) j++;\n        else if(isprime(d)==1){\n            printf(\"%ld %ld\\n\",i,d);\n            break;\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9984709480122325, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6f68fe94a4e092c800c9f9026c300161", "bug_code_uid": "ba38cab58c49075a7c55d994c91b7125", "src_uid": "bce9ebad1dc8bd5aae516c4ca9e551c0", "apr_id": "788e1fa859eed0cb53cf9fe3cb2c38d5", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint A[105];\nint main() {\n\tint n, m, i, j, k = 0, max, min, t, res1, res2 = 987654321,grow=0,bk=987654321;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &A[0]);\n\tmax = A[0];\n\tmin = A[0];\n\tfor (i = 1; i < n; i++) {\n\t\tscanf(\"%d\", &A[i]);\n\t\tif (max < A[i])\n\t\t\tmax = A[i];\n\t\tif (min > A[i])\n\t\t\tmin = A[i];\n\t}\n\tfor (i = min; i <= max; i++) {\n\t\tk = 0;\n\t\tfor (j = 0; j < n; j++) {\n                t=A[j]-i;\n\t\t\tif (t < 0)\n\t\t\t\tt *= -1;\n            if(t>=1)\n                t--;\n\t\t\tk += t;\n\t\t}\n\t\tif(k>bk)\n            grow++;\n        bk=k;\n\t\tif (res2 > k) {\n\t\t\tres2 = k;\n\t\t\tres1 = i;\n\t\t}\n        if(grow==3)\n            break;\n\t}\n\tprintf(\"%d %d\", res1, res2);\n}\n", "fixed": "#include<stdio.h>\nint A[10005];\nint main() {\n\tint n, m, i, j, k = 0, max, min, t, res1, res2 = 987654321,grow=0,bk=987654321;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &A[0]);\n\tmax = A[0];\n\tmin = A[0];\n\tfor (i = 1; i < n; i++) {\n\t\tscanf(\"%d\", &A[i]);\n\t\tif (max < A[i])\n\t\t\tmax = A[i];\n\t\tif (min > A[i])\n\t\t\tmin = A[i];\n\t}\n\tfor (i = min; i <= max; i++) {\n\t\tk = 0;\n\t\tfor (j = 0; j < n; j++) {\n                t=A[j]-i;\n\t\t\tif (t < 0)\n\t\t\t\tt *= -1;\n            if(t>=1)\n                t--;\n\t\t\tk += t;\n\t\t}\n\t\tif(k>bk)\n            grow++;\n        bk=k;\n\t\tif (res2 > k) {\n\t\t\tres2 = k;\n\t\t\tres1 = i;\n\t\t}\n        if(grow==3)\n            break;\n\t}\n\tprintf(\"%d %d\", res1, res2);\n}\n"}
{"similarity_score": 0.6295907660020986, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "c0bad0b2a22b81f0322e69cba58a7afc", "bug_code_uid": "0e727e0b0f2fc57be42f31fc947bfdba", "src_uid": "8a6c3436f73286ca54f51fb90017a299", "apr_id": "b86dc752c824c00816d06c0deb3bc280", "difficulty": 800, "tags": ["number theory", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int test,n;\n    scanf(\"%d\",&test);\n    while(test--)\n         {\n           scanf(\"%d\",&n);\n           if(n>30)\n              {\n               printf(\"YES\\n\");\n               printf(\"6 10 14 %d\\n\",n-30);\n              }\n\n            else\n                printf(\"NO\\n\");\n         }\n\n\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int test,n;\n    scanf(\"%d\",&test);\n    while(test--)\n         {\n           scanf(\"%d\",&n);\n             if(n==36||n==40||n==44)\n             {    printf(\"YES\\n\");\n                  if(n==36)\n                     printf(\"5 6 10 15\\n\");\n                  else if(n==44)\n                     printf(\"6 7 10 21\\n\");\n                  else\n                      printf(\"6 15 14 5\\n\");\n\n             }\n\n             else if(n>30)\n              {\n               printf(\"YES\\n\");\n               printf(\"6 10 14 %d\\n\",n-30);\n              }\n\n            else\n                printf(\"NO\\n\");\n         }\n\n\n\n}\n"}
{"similarity_score": 0.6550802139037433, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "77be6749eb21532b913ae86ec7bfde9e", "bug_code_uid": "8766b8e866bee818ca4d23333b1ee268", "src_uid": "03907ca0d34a2c80942ed3968b2c067d", "apr_id": "b46bb965c08d637ae1429fce7b44b181", "difficulty": 1800, "tags": ["graphs", "implementation", "dfs and similar", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/**\n\n2 3 4 5 6\n2 4, -4, 6, -6(2, 3)\n3 6, -6(2)\n4 2, -2(2)\n5 \n6 3, -3, 2, -2(2, 3)\n2>6>3>-6>-2>4>\n 3 2 2  3 2 2  2\n2 3 4\n2 4 -2 -4 2\n\n**/\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int i, j, c, n;\n\tc = 0;\n\tscanf(\"%%I64d\", &n);\n\tfor(i=2; i<=n; i++)\n\t{\n\t\tint k = 2;\n\t\tfor(j=i+i; j<=n; j+=i)\n\t\t{\n\t\t\tc+=(k++)*2;\n\t\t}\n\t}\n\tprintf(\"%%I64d\\n\", c*2);\n\treturn 0;\n}\n", "fixed": "/**\n\n2 3 4 5 6\n2 4, -4, 6, -6(2, 3)\n3 6, -6(2)\n4 2, -2(2)\n5 \n6 3, -3, 2, -2(2, 3)\n2>6>3>-6>-2>4>\n 3 2 2  3 2 2  2\n2 3 4\n2 4 -2 -4 2\n\n**/\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int i, j, c, n;\n\tc = 0;\n\tscanf(\"%I64d\", &n);\n\tfor(i=2; i<=n; i++)\n\t{\n\t\tint k = 2;\n\t\tfor(j=i+i; j<=n; j+=i)\n\t\t{\n\t\t\tc+=(k++)*2;\n\t\t}\n\t}\n\tprintf(\"%I64d\\n\", c*2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6165413533834586, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "4564344fecd78d7de6105f1ae9143220", "bug_code_uid": "6f05e5e2846b8b9b13bbd6f181e07c7c", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "8888b8e86a86b5655f1472839c410a02", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int x, y, k, n, c = -1;\n    scanf(\"%d %d %d\", &y, &k, &n);\n\n    for(x = 1; x+y <= n; x++){\n\n        if((x+y) % k == 0){\n            printf(\"%d%s\", x, x+k <= n ? \" \" : \"\");\n            c = 1;\n        }\n    }\n    if(c == -1)\n        printf(\"-1\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int i, x, y, k, n, c = -1, mp;\n    scanf(\"%d %d %d\", &y, &k, &n);\n    int minI = (int) (y / k);\n    for(i = minI; i <= 100000; i++){\n        mp = i * k;\n        if(mp > n)\n            break;\n        if(mp > y){\n            printf(\"%d \", mp-y);\n            c = 1;\n        }\n\n    }\n    if(c == -1)\n        printf(\"-1\");\n    return 0;\n}\n"}
{"similarity_score": 0.9957356076759062, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "97fde9deee7a970b58cb8a3d963042f2", "bug_code_uid": "06519091b67b3d5ea85c828608c2b1d1", "src_uid": "63c2142461c93ae4c962eac1ecb5b192", "apr_id": "0def4ebbac2565cd49fb11e7080560c6", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint chose(int a,int b,int c);\r\nint main()\r\n{\r\n\tint k;\r\n\tint a[10000],b[10000],c[10000];\r\n\tscanf(\"%d\\n\",&k);\r\n\tfor(int i=0;i<k;i++)\r\n\t{\r\n\t\tscanf(\"%d %d %d\",&a[i],&b[i],&c[i]);\r\n\t\t}\t\r\n    for(int i=0;i<k;i++)\r\n    {\r\n    \tprintf(\"%d\",chose(a[i],b[i],c[i]));\r\n\t}\r\n}\r\nint chose(int a,int b,int c)\r\n{\r\n\tint t;\r\n\tif(a>b)\r\n\t{\r\n\tt=a;\r\n\ta=b;\r\n\tb=t;\r\n    }\r\n\tif(a>c)\r\n\t{\r\n\tt=a;\r\n\ta=c;\r\n\tc=t;\r\n    }\r\n\tif(b>c)\r\n\t{\r\n\tt=b;\r\n\tb=c;\r\n\tc=t;\r\n    } \r\n\treturn (b);\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint chose(int a,int b,int c);\r\nint main()\r\n{\r\n\tint k;\r\n\tint a[10000],b[10000],c[10000];\r\n\tscanf(\"%d\",&k);\r\n\tfor(int i=0;i<k;i++)\r\n\t{\r\n\t\tscanf(\"%d %d %d\",&a[i],&b[i],&c[i]);\r\n\t\t}\t\r\n    for(int i=0;i<k;i++)\r\n    {\r\n    \tprintf(\"%d\\n\",chose(a[i],b[i],c[i]));\r\n\t}\r\n}\r\nint chose(int a,int b,int c)\r\n{\r\n\tint t;\r\n\tif(a>b)\r\n\t{\r\n\tt=a;\r\n\ta=b;\r\n\tb=t;\r\n    }\r\n\tif(a>c)\r\n\t{\r\n\tt=a;\r\n\ta=c;\r\n\tc=t;\r\n    }\r\n\tif(b>c)\r\n\t{\r\n\tt=b;\r\n\tb=c;\r\n\tc=t;\r\n    } \r\n\treturn (b);\r\n}\r\n"}
{"similarity_score": 0.19367588932806323, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9e320dcd7ef00b7b5de335c6a6750c4b", "bug_code_uid": "a91e73a82ef1c2cbd4022891860a4be7", "src_uid": "e8ba3fb95800806465386ecbfbe924e9", "apr_id": "bc8c15143794d3392006d821653cdf1d", "difficulty": 800, "tags": ["constructive algorithms", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong long int lcm(long long int,long long int);\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int l,r,x,y,i,j,p,b1=0;\n        scanf(\"%lld %lld\",&l,&r);\n        for(i=l;i<=r/2;i++)\n         { for(j=i+1;j<=r/2;j++)\n          {\n              p=lcm(i,j);\n              if(p>=l&&p<=r)\n              {\n                  printf(\"%lld %lld\\n\",i,j);\n                  b1=1;\n                  break;\n              }\n           }\n            if (b1==1)\n             break;\n         }\n          if(b1==0) printf(\"-1 -1\\n\");\n    }\n}\nlong long int lcm(long long int x,long long int y)\n{\n    long long int temp;\n    temp=y;\n    while(1)\n    {\n        if(temp%x==0)\n          return temp;\n          temp=temp+y;\n    }\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    long long int t,n,k;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        scanf(\"%lld %lld\",&n,&k);\n        if(2*n<=k) printf(\"%lld %lld\\n\",n,2*n);\n        else printf(\"-1 -1\\n\");\n    }\n    \n}"}
{"similarity_score": 0.8945260347129506, "equal_cnt": 15, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 13, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "3ddd3522a5b9a2df04d3a258c5add25e", "bug_code_uid": "c1cae32deb710bd3933bb1c3d9964c9b", "src_uid": "0e4ff955c1e653fbeb003987fa701729", "apr_id": "23348da1cead680683330774fe314d2e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define SIZE 100000\n\nint main()\n{\n    int n;\n    int i;\n    long long sum=0;\n    long long sum2=0;\n    int a[SIZE]={0};\n    scanf (\"%d\",&n);\n    for (i=1;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for (i=1;i<n;i++){\n        sum+=a[i];\n    }\n    sum2 = (n*(n+1))/2.0;\n    sum2 = sum2 - sum;\n    printf (\"%lld\",sum2);\n}", "fixed": "#include <stdio.h>\n#define SIZE 100000\n\nint main()\n{\n    long long n;\n    int i;\n    long long sum=0;\n    long long sum2=0;\n    int a[SIZE]={0};\n    while ((scanf (\"%lld\",&n)) != EOF){\n        for (i=1;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for (i=1;i<n;i++){\n            sum+=a[i];\n        }\n        sum2 = (n*(n+1))/2.0;\n        sum2 = sum2 - sum;\n        printf (\"%lld\\n\",sum2);\n    }\n}"}
{"similarity_score": 0.45041322314049587, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "557c12738180d74e626b4600e9adaf17", "bug_code_uid": "3f5d1eb5304ec1160ef6fffc46b25111", "src_uid": "2ce2d0c4ac5e630bafad2127a1b589dd", "apr_id": "5f04ef2ef0398f62b66d28308ce54778", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "main()\n{int i,t,j,k=0,p=0,l;\nchar s[1000001];\nscanf(\"%s\",s);l=strlen(s);\nfor(t=1;t<=l/2+1;t++){p=0;\nfor(i=0;i<=l-1-2*k;i++)\n{if (s[i]=='(' && s[i+1]==')'){\nfor(j=i+2;j<=l-1-2*k;j++)\n{s[j]=s[j-2];p++;if (p==1) k++; }\nbreak;\n}\n}\n}\nprintf(\"%d\",2*k);\n}\n", "fixed": "main()\n{int i,a=0,b=0,j,k=0,l;char s[1000001];\nscanf(\"%s\",s);\nl=strlen(s);\nfor(i=0;i<l;i++)\n{if (s[i]=='(')\na++;\nelse if (s[i]==')')\nb++;\nif (a-b>=0 && b>0){a--;b--;\nk=k+2;\n//printf(\"%d\\n\",k);\n}\nelse if (b>a) b--;\n}\nprintf(\"%d\",k);\n}\n\n"}
{"similarity_score": 0.952755905511811, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "572c9c11407ea5c75fbb0452209898b6", "bug_code_uid": "f9add7650d3e6b885682a5ffd9f7287f", "src_uid": "c9da10199ad1a5358195b693325e628b", "apr_id": "da4fb82f062dd95fe1ee976b00918883", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n    int n;scanf(\"%d\",&n);\r\n    \r\n    while(n--){\r\n       int num=0,count=0,sum=0;\r\n       scanf(\"%d\",&num);\r\n       count=num;\r\n       int a[num];\r\n       for(int i=0;i<num;i++)\r\n       scanf(\"%d\",&a[i]);\r\n       scanf(\"%d\",&count);\r\n       int b[count];\r\n       for(int i=0;i<count;i++){\r\n         scanf(\"%d\",&b[i]);\r\n       }\r\n       for(int i=0;i<count;i++){\r\n         sum+=b[i];\r\n       }\r\n       printf(\"%d\\n\",a[sum%num]);\r\n       \r\n       \r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n    int n;scanf(\"%d\",&n);\r\n    \r\n    while(n--){\r\n       long long sum=0,num=0,count=0;\r\n       scanf(\"%d\",&num);\r\n       count=num;\r\n       int a[num];\r\n       for(int i=0;i<num;i++)\r\n       scanf(\"%d\",&a[i]);\r\n       scanf(\"%d\",&count);\r\n       int b[count];\r\n       for(int i=0;i<count;i++){\r\n         scanf(\"%d\",&b[i]);\r\n       }\r\n       for(int i=0;i<count;i++){\r\n         sum+=b[i];\r\n       }\r\n       printf(\"%d\\n\",a[sum%num]);\r\n       \r\n       \r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9976470588235294, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cc6246f6090d5958fb5db2fa56018c8c", "bug_code_uid": "9bb16024236b01e04e56107a949d3985", "src_uid": "74b90fe9458b147568ac9bd09f219aab", "apr_id": "808e60511c77cb8931f051da479d82f2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main( int argc, char **argv )\n{\n\tint i;\n\tint a;\n\tint c;\n\tint d;\n\tint e=0;\n\tint f=0;\n\tscanf(\"%d\", &a);\n\tfor (i=0;i<a;i++)\n\t{\n\t  scanf(\"%d%d\", &c, &d);\n\t  e=e-c+d;\n\t  if(e>f)\n\t  {\n\t  \tf=e;\n\t  }\n\t}\t\n\tprintf(\"%d\", e);\n\treturn 0;\n}\n/* \nint b[a][2];\n\tfor (i=0;i<a;i++)\n\t{\n\t  scanf(\"%d\", &b[i][i-(i-1)]);\n\t}\nfor (i=0;i<a;i++)\n\t{\n\t  c==0-b[i][0]+b[i][1];\n\t  if(c>d)\n\t  {\n\t  \td=c;\n\t  }\n\t}\n*/\t\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main( int argc, char **argv )\n{\n\tint i;\n\tint a;\n\tint c;\n\tint d;\n\tint e=0;\n\tint f=0;\n\tscanf(\"%d\", &a);\n\tfor (i=0;i<a;i++)\n\t{\n\t  scanf(\"%d%d\", &c, &d);\n\t  e=e-c+d;\n\t  if(e>f)\n\t  {\n\t  \tf=e;\n\t  }\n\t}\t\n\tprintf(\"%d\", f);\n\treturn 0;\n}\n/* \nint b[a][2];\n\tfor (i=0;i<a;i++)\n\t{\n\t  scanf(\"%d\", &b[i][i-(i-1)]);\n\t}\nfor (i=0;i<a;i++)\n\t{\n\t  c==0-b[i][0]+b[i][1];\n\t  if(c>d)\n\t  {\n\t  \td=c;\n\t  }\n\t}\n*/\t\n"}
{"similarity_score": 0.96045197740113, "equal_cnt": 16, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 15, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "4da7e8d63c2f6b34cd66bc4a2d7c3e58", "bug_code_uid": "a9b77e5afd3f7822a21f8e7e9db02bbb", "src_uid": "544dd0c7274ac337744b8ba0996add1d", "apr_id": "4d5f9df758973beea513c83a1ed3e673", "difficulty": 2000, "tags": ["dp", "binary search"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAXN 2003\nint num[MAXN];\nint n,k;\n\nint dp[MAXN];\nint canbe(int dis)\n{\n\tint i,j,max,tmp,delta;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tdp[i]=1;\n\t\tfor(j=0;j<i;j++)\n\t\t{\n\t\t\tdelta=num[i]-num[j];\n\t\t\tif(delta<0)delta=-delta;\n\t\t\tif(delta<=(i-j)*dis)\n\t\t\t{\n\t\t\t\ttmp=dp[j]+1;\n\t\t\t\tif(tmp>dp[i])dp[i]=tmp;\n\t\t\t}\n\t\t}\n\t}\n\tmax=0;\n\tfor(i=0;i<n;i++)if(dp[i]>max)max=dp[i];\n\tif(max>=n-k)return 1;\n\telse return 0;;\n}\nint bsearch(int L,int R)\n{\n\tint mid;\n\twhile(L<R)\n\t{\n\t\tmid=(L+R)/2;\n\t\tif(canbe(mid)==1)\n\t\t\tR=mid;\n\t\telse\n\t\t\tL=mid+1;\n\t}\n\treturn R;\n}\nint main()\n{\n\tint i,j,max,t;\n\tscanf(\"%d%d\",&n,&k);\n\n\tmax=0;\n\tfor(i=0;i<n;i++)scanf(\"%d\",&num[i]);\n\tfor(j=0,i=1;i<n;i++,j++)\n\t{\n\t\tt=num[i]-num[j];\n\t\tif(t<0)t=-t;\n\t\tif(t>max)max=t;\n\t}\n\tprintf(\"%d\\n\",bsearch(0,max));\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAXN 2003\ntypedef long long int llint;\nllint num[MAXN];\nllint n,k;\n\nllint dp[MAXN];\nllint canbe(llint dis)\n{\n\tllint i,j,max,tmp,delta;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tdp[i]=1;\n\t\tfor(j=0;j<i;j++)\n\t\t{\n\t\t\tdelta=num[i]-num[j];\n\t\t\tif(delta<0)delta=-delta;\n\t\t\tif(delta<=(i-j)*dis)\n\t\t\t{\n\t\t\t\ttmp=dp[j]+1;\n\t\t\t\tif(tmp>dp[i])dp[i]=tmp;\n\t\t\t}\n\t\t}\n\t}\n\tmax=0;\n\tfor(i=0;i<n;i++)if(dp[i]>max)max=dp[i];\n\tif(max>=n-k)return 1;\n\telse return 0;;\n}\nllint bsearch(llint L,llint R)\n{\n\tllint mid;\n\twhile(L<R)\n\t{\n\t\tmid=(L+R)/2;\n\t\tif(canbe(mid)==1)\n\t\t\tR=mid;\n\t\telse\n\t\t\tL=mid+1;\n\t}\n\treturn R;\n}\nint main()\n{\n\tllint i,j,max,t;\n\tscanf(\"%I64d%I64d\",&n,&k);\n\n\tmax=0;\n\tfor(i=0;i<n;i++)scanf(\"%I64d\",&num[i]);\n\tfor(j=0,i=1;i<n;i++,j++)\n\t{\n\t\tt=num[i]-num[j];\n\t\tif(t<0)t=-t;\n\t\tif(t>max)max=t;\n\t}\n\tprintf(\"%I64d\\n\",bsearch(0,max));\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9958982772764561, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "db370ba68ae975551edbe8048c8c1e93", "bug_code_uid": "f78883e77a2a32c0b175b0dbb72dbf9a", "src_uid": "ad242f98f1c8eb8d30789ec672fc95a0", "apr_id": "5d3de20fd6616db466d6ce02f225cf0e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, i;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        \r\n        int a[n], b[101] = {0}, zero = 0, distinct = 1;\r\n\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n            b[a[i]]++;\r\n\r\n            if(b[i] > 1 && a[i] != 0)    distinct = 0;\r\n            if(b[0] > 0)    zero = 1;\r\n        }\r\n\r\n        if(zero)    printf(\"%d\\n\", n - b[0]);\r\n        else\r\n        {\r\n            if(distinct)    printf(\"%d\\n\", n + 1);\r\n            else    printf(\"%d\\n\", n);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, i;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        \r\n        int a[n], b[101] = {0}, zero = 0, distinct = 1;\r\n\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n            b[a[i]]++;\r\n\r\n            if(b[a[i]] > 1 && a[i] != 0)    distinct = 0;\r\n            if(b[0] > 0)    zero = 1;\r\n        }\r\n\r\n        if(zero)    printf(\"%d\\n\", n - b[0]);\r\n        else\r\n        {\r\n            if(distinct)    printf(\"%d\\n\", n + 1);\r\n            else    printf(\"%d\\n\", n);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.765906362545018, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "554cfea89d4a909713a0e59d53a71352", "bug_code_uid": "711fc82e47096809c5c2f860f120c369", "src_uid": "3992602be20a386f0ec57c51e14b39c5", "apr_id": "abd64605b7d1f9485fd0628997fa70bc", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n,i,count=0,arr[100000];\n\tlong int k;\n\tscanf(\"%d %ld\",&n,&k);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&arr[i]);\n\ti=0;\n\twhile(i<n){\n\t\tif(k<=arr[i]){\n\t\t\tarr[i]=arr[i]-k;\n\t\t\tcount++;\n\t\t}\n\t\telse if(k>arr[i]){\n\t\t\tarr[i]=0;\n\t\t\tcount++;\n\t\t}\n\t\tif(arr[i]==0){\n\t\t\ti++;\n\t\t}\n\t}\n\tif(count%2==0){\n\t\tprintf(\"%d\\n\",count/2);\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",(count+1)/2);\n\t}\n\n\n\n\n\n\treturn 0;\n}", "fixed": "\n#include <stdio.h>\n\nint main() {\n\tint n,i,count=0,array[100000];\n\tlong long int k;\n\tscanf(\"%d %ld\",&n,&k);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&array[i]);\n\ti=0;\n\twhile(i<n){\n\t\tif(k<=array[i]){\n\t\t\tcount=count+array[i]/k;\n\t\t\tarray[i]=array[i]%k;\n\t\t}\n\t\telse if(k>array[i]){\n\t\t\tarray[i]=0;\n\t\t\tcount++;\n\t\t}\n\t\tif(array[i]==0){\n\t\t\ti++;\n\t\t}\n\t}\n\tif(count%2==0){\n\t\tprintf(\"%d\\n\",count/2);\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",(count+1)/2);\n\t}\n\n\n\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.6104078762306611, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "9a94607fcc47ab62a6bdbbd06aa4a780", "bug_code_uid": "16b12ae75a7cc10b8b6f6dd51595af82", "src_uid": "4585419ab2b7200770cfe1e607161e9f", "apr_id": "14b877ea777dddb5e5549a6d9d55d3f4", "difficulty": 1300, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int i,j,n;\n    scanf(\"%d\", &n);\n    long *a = malloc(n*sizeof(long));\n    for (i=0; i<n/2; i++)\n        scanf(\"%ld\", &a[i]);\n    for (i=n/2; i<n; i++)\n        a[i]=0;\n    for (i=0; i<n/2; i++)\n    {\n        if (a[i]<a[i+1])\n        {\n            long temp = a[i+1] - a[i];\n            a[n-i-2] +=temp;\n            a[i+1] -=temp;\n        }\n        if (i==n/2-1)\n        {\n            for (j=n/2; j<n-1; j++)\n            {\n                if (a[j]<a[j+1])\n                {\n                    long temp = a[j+1] - a[j];\n                    a[j]+=temp;\n                    a[n-j-1]-=temp;\n                    i=n-j-2;\n                }\n            }\n        }\n    }\n    for (i=n-1; i>=0; i--)\n        printf(\"%ld \", a[i]);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int i,n;\n    scanf(\"%d\", &n);\n    long long int *a = malloc(n*sizeof(long long int));\n    for (i=0; i<n/2; i++)\n        scanf(\"%lld\", &a[i]);\n    for (i=n/2; i<n; i++)\n        a[i]=0;\n    for (i=0; i<n/2; i++)\n    {\n        if (a[i]<a[i+1] || a[n-i-1]>a[n-i-2])\n        {\n            long long int temp = a[i+1] - a[i];\n            long long int temp2 = a[n-i-1] - a[n-i-2];\n            if (temp<temp2) temp=temp2;\n            a[n-i-2] =temp;\n            a[i+1] -=temp;\n        }\n    }\n    for (i=n-1; i>=0; i--)\n        printf(\"%lld \", a[i]);\n    free(a);\n    return 0;\n}\n"}
{"similarity_score": 0.865992414664981, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "054ff871e90052c0e17a88e8b2830f7a", "bug_code_uid": "e9b9fe6228d3b5067e35032a7c860ec4", "src_uid": "73e8984cceded15027c4ab89c5624a92", "apr_id": "9515caa8a3fc1c594a1f32a41e95d7e7", "difficulty": 1600, "tags": ["dp", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#define N 1000005\nint a[N],b[N];\ntypedef struct{\n     int x;\n     int y;\n}sort;\nsort hotel[N];\nint cmpfunc(const void*a,const void*b)\n{\n     sort * sortA=(sort*)a;\n     sort * sortB=(sort*)b;\n    return (sortA->x- sortB->x);\n}\nint main()\n{\n    int n,i,j,l,r,sum=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n         scanf(\"%d %d\",&hotel[i].x,&hotel[i].y);\n    }\n    qsort(hotel,n,sizeof(sort),cmpfunc);\n   // for(i=0;i<n;i++)\n//printf(\"%d %d\\n\",hotel[i].x,hotel[i].y);\n    for(i=0;i<n;)\n    {\n         for(j=i+1;j<n;j++)\n         {\n              if(hotel[i].y<hotel[j].x)\n              {\n                   sum++;\n                   break;\n              }\n         }\n         i+=j;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#define N 1000005\nint a[N],b[N];\ntypedef struct{\n     int x;\n     int y;\n}sort;\nsort hotel[N];\nint cmpfunc(const void*a,const void*b)\n{\n     sort * sortA=(sort*)a;\n     sort * sortB=(sort*)b;\n    return (sortA->y- sortB->y);\n}\nint main()\n{\n    int n,i,j,l,r,sum=1,max=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n         scanf(\"%d %d\",&hotel[i].x,&hotel[i].y);\n    }\n    qsort(hotel,n,sizeof(sort),cmpfunc);\n   // for(i=0;i<n;i++)\n//printf(\"%d %d\\n\",hotel[i].x,hotel[i].y);\n    max=hotel[0].y;\n    for(i=1;i<n;i++)\n    {\n              if(max<hotel[i].x)\n              {\n                   sum++;\n                   max=hotel[i].y;\n              }\n         \n    }\n    printf(\"%d\",sum);\n    return 0;\n}"}
{"similarity_score": 0.59375, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "9fed58e64f2da1d2a85fa4f09b42be0f", "bug_code_uid": "00899aac7ecc5dbd53ee505f7a91098c", "src_uid": "09faf19627d2ff00c3821d4bc2644b63", "apr_id": "806340051f95d4ede4331d0807166633", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\nint x[150010];\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        int i,j,cnt=0;;\n        for(i=0;i<n;i++)scanf(\"%d\",&x[i]);\n        for(i=0;i<n;i++){\n            for(j=i+1;j<n;j++){\n                if(x[j]<x[i]){\n                    cnt++;\n                    break;\n                }\n            }\n        }\n        printf(\"%d\\n\",cnt);\n    }\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\nint x[150010],min[150010];\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        int i,cnt=0;\n        for(i=0;i<n;i++)scanf(\"%d\",&x[i]);\n        int minn=x[n-1];\n        for(i=n-1;i>=0;i--){\n            if(x[i]<minn)minn=x[i];\n            min[i]=minn;\n        }\n        for(i=0;i<n;i++){\n            if(x[i]>min[i])cnt++;\n        }\n        printf(\"%d\\n\",cnt);\n    }\n\treturn 0;\n}\n"}
{"similarity_score": 0.7473524962178517, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "be8d0c585024723a050f5a828312ba81", "bug_code_uid": "c6ee35672e7f26d7013a3dc2435cb119", "src_uid": "b37bbf1fe9ac5144cfa230633ccbdd79", "apr_id": "36c818e2a2f7de6cbd74d275350d7227", "difficulty": 800, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nchar n[100];\n\nint main()\n{\n    int t,x,i,j,f,p,a,b;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n        scanf(\"%s\",&n);\n\n        p=2*x-1;\n\n        a=0; b=0;\n        for(i=0;i<p;i++)\n        {\n            if(n[i]=='0') a=1;\n            else b=1;\n        }\n\n        if(a==1&&b==1)\n        {\n            for(i=0;i<x;i++)\n            {\n                if(i%2==0) printf(\"0\");\n                else printf(\"1\");\n            }\n        }\n        else if(a==1)\n        {\n            for(i=0;i<x;i++)\n            {\n                printf(\"0\");\n            }\n        }\n        else\n        {\n            for(i=0;i<x;i++)\n            {\n                printf(\"1\");\n            }\n        }\n\n        printf(\"\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\n\nchar n[100];\n\nint main()\n{\n    int t,x,i,j,f,p,a,b;\n\n    scanf(\"%d\",&t);\n\n    while(t--)\n    {\n        scanf(\"%d\",&x);\n        scanf(\"%s\",&n);\n\n        p=2*x-1;\n\n        a=0; b=0;\n        for(i=0;i<p;i++)\n        {\n            if(n[i]=='0') a++;\n            else b++;\n        }\n\n        if(a>=b)\n        {\n            for(i=0;i<x;i++)\n            {\n                printf(\"0\");\n            }\n        }\n\n        else\n        {\n            for(i=0;i<x;i++)\n            {\n                printf(\"1\");\n            }\n        }\n\n        printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.9743589743589743, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2c0d8e3a1c08a921cee761d2061471f4", "bug_code_uid": "728227a4c9d4ae45091d682b7c1387b9", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "ece1451b86002759fcc47037e872907c", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n/*int cmp(const void *a, const void *b)\n{\n     return(*(int *)a-*(int *)b);\n}*/\n//  qsort(a,n,sizeof(a[0]),cmp);\n\n\n\nint main()\n{\n    int n,i,a,sum;\n    scanf(\"%d\",&n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",&a);\n        if(sqrt(a) * sqrt(a) != a)\n        {\n            sum = a;\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#include<string.h>\n/*int cmp(const void *a, const void *b)\n{\n     return(*(int *)a-*(int *)b);\n}*/\n//  qsort(a,n,sizeof(a[0]),cmp);\n\n\n\nint main()\n{\n    int n,i,a,sum = -1000000;\n    scanf(\"%d\",&n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\",&a);\n        if(sqrt(a) * sqrt(a) != a && a > sum)\n        {\n            sum = a;\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9991095280498664, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "68e7f2ba99e8e25a7fbe522df5b5e838", "bug_code_uid": "18de03cd253f24a847b20ef4839c7daf", "src_uid": "255d6fca1379ae40b03e761802f36664", "apr_id": "a5f6fadd4710484419d13a474282275d", "difficulty": 1100, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nstruct ss\r\n{\r\n    int num;\r\n    int pos;\r\n} a[100010];\r\n\r\n\r\nvoid swap(int x,int y)\r\n{\r\n    struct ss t;\r\n    t=a[x];\r\n    a[x]=a[y];\r\n    a[y]=t;\r\n}\r\n\r\nvoid quicksort(int l,int r)\r\n{\r\n    if(l>=r)\r\n    {\r\n        return;\r\n    }\r\n    int k=a[l].num;\r\n    int i=l+1,j=l+1;\r\n    while(j<r)\r\n    {\r\n        if(a[j].num<k)\r\n        {\r\n            swap(j,i);\r\n            i++;\r\n        }\r\n        j++;\r\n    }\r\n    swap(l,i-1);\r\n    quicksort(l,i-2);\r\n    quicksort(i,r);\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,k;\r\n        int ans=0;\r\n        int now=-2;\r\n        int t;\r\n        scanf(\"%d%d\",&n,&k);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&t);\r\n            a[i].num=t;\r\n            a[i].pos=i+1;\r\n        }\r\n        quicksort(0,n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(a[i].pos==now+1)\r\n            {\r\n                ;\r\n            }\r\n            else\r\n            {\r\n                ans++;\r\n            }\r\n            now=a[i].pos;\r\n        }\r\n        printf(ans<=k?\"Yes\\n\":\"No\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nstruct ss\r\n{\r\n    int num;\r\n    int pos;\r\n} a[100010];\r\n\r\n\r\nvoid swap(int x,int y)\r\n{\r\n    struct ss t;\r\n    t=a[x];\r\n    a[x]=a[y];\r\n    a[y]=t;\r\n}\r\n\r\nvoid quicksort(int l,int r)\r\n{\r\n    if(l>=r)\r\n    {\r\n        return;\r\n    }\r\n    int k=a[l].num;\r\n    int i=l+1,j=l+1;\r\n    while(j<r)\r\n    {\r\n        if(a[j].num<k)\r\n        {\r\n            swap(j,i);\r\n            i++;\r\n        }\r\n        j++;\r\n    }\r\n    swap(l,i-1);\r\n    quicksort(l,i-1);\r\n    quicksort(i,r);\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n,k;\r\n        int ans=0;\r\n        int now=-2;\r\n        int t;\r\n        scanf(\"%d%d\",&n,&k);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&t);\r\n            a[i].num=t;\r\n            a[i].pos=i+1;\r\n        }\r\n        quicksort(0,n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(a[i].pos==now+1)\r\n            {\r\n                ;\r\n            }\r\n            else\r\n            {\r\n                ans++;\r\n            }\r\n            now=a[i].pos;\r\n        }\r\n        printf(ans<=k?\"Yes\\n\":\"No\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8825581395348837, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "60014e6e78b9ff241a239c625012b3b3", "bug_code_uid": "cdcc46ba8cb9ca5269b6d1f2c34f7a09", "src_uid": "c9e9b82185481951911db3af72fd04e7", "apr_id": "a7f658f35c677b3dcb684de43574137d", "difficulty": 1500, "tags": ["implementation", "hashing"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct\n{\n    char name[100];\n    int score;\n    int m;\n}game;\n\nint main()\n{\n    int max=-100000,n,i,j,t,k=0;\n    char s1[100];\n    game A[1000];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%s\",A[i].name);\n      scanf(\"%d\",&A[i].score);\n      A[i].m=1;\n      for(j=0;j<i;j++)\n      {\n          if((strcmp(A[j].name,A[i].name)==0)&&(A[j].m==1))\n          {\n              A[i].score=A[i].score+A[j].score;\n              A[j].m=0;\n          }\n      }\n    }\n    for(i=0;i<n;i++)\n    {\n        if((A[i].score>max)&&(A[i].m==1))max=A[i].score;\n    }\n    for(i=0;i<n;i++)\n        if(A[i].score>=max)\n        {\n            strcpy(s1,A[i].name);\n            break;\n        }\n   puts(s1);\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct\n{\n    char name[100];\n    int score;\n    int m;\n}game;\n\nint main()\n{\n    int max=-100000,n,i,j,t,k=0;\n    char s1[100];\n    game A[1000];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%s\",A[i].name);\n      scanf(\"%d\",&A[i].score);\n      A[i].m=1;\n      for(j=0;j<i;j++)\n      {\n          if((strcmp(A[j].name,A[i].name)==0)&&(A[j].m==1))\n          {\n              A[i].score=A[i].score+A[j].score;\n              A[j].m=0;\n          }\n      }\n    }\n    for(i=0;i<n;i++)\n    {\n        if((A[i].score>max)&&(A[i].m==1))max=A[i].score;\n    }\n    for(i=0;i<n;i++)\n        if(A[i].score>=max)\n        {\n            for(j=0;j<n;j++)\n            {\n                if ((strcmp(A[j].name,A[i].name)==0)&&(A[j].score>=max)&&(A[j].m==1))k=1;\n            }\n            if(k==1)\n            {\n                strcpy(s1,A[i].name);\n            break;\n            }\n        }\n    puts(s1);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9624242424242424, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f8cba6f3915e13d001caaa8e71f90ccd", "bug_code_uid": "bee4915603714172fe8a691fc8096b70", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "a7d0b52531682b65cb25085cfa3e61c5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int a,b,c,t,n,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {scanf(\"%d %d %d\",&a,&b,&c);\r\n    if(a==b && b==c)\r\n    {\r\n        a=a+1;\r\n        b=b+1;\r\n        c=c+1;\r\n    }\r\n    else if(a>b && a>c)\r\n    {\r\n        b=(a-b)+1;\r\n        c=(a-c)+1;\r\n        a=0;\r\n    }\r\n\r\n    else if(b>a && b>c)\r\n    {\r\n        a=(b-a)+1;\r\n        c=(b-c)+1;\r\n        b=0;\r\n    }\r\n    else if(c>a && c>b)\r\n    {\r\n        a=(c-a)+1;\r\n        b=(c-b)+1;\r\n        c=0;\r\n    }\r\n    else if(b==c)\r\n    {\r\n        a=(b-a)+1;\r\n        b=1;\r\n        c=1;\r\n    }\r\n    else if(a==b)\r\n    {\r\n        c=(a-c)+1;\r\n        a=1;\r\n        b=1;\r\n    }\r\n    else if(a==c)\r\n    {\r\n        b=(a-b)+1;\r\n        a=1;\r\n        c=1;\r\n    }\r\n    printf(\"%d %d %d\\n\",a,b,c);\r\n\r\n\r\n}\r\n\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int a,b,c,t,n,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {scanf(\"%d %d %d\",&a,&b,&c);\r\n    if(a==b && b==c)\r\n    {\r\n        a=1;\r\n        b=1;\r\n        c=1;\r\n    }\r\n    else if(a>b && a>c)\r\n    {\r\n        b=(a-b)+1;\r\n        c=(a-c)+1;\r\n        a=0;\r\n    }\r\n\r\n    else if(b>a && b>c)\r\n    {\r\n        a=(b-a)+1;\r\n        c=(b-c)+1;\r\n        b=0;\r\n    }\r\n    else if(c>a && c>b)\r\n    {\r\n        a=(c-a)+1;\r\n        b=(c-b)+1;\r\n        c=0;\r\n    }\r\n    else if(b==c)\r\n    {\r\n        a=(b-a)+1;\r\n        b=1;\r\n        c=1;\r\n    }\r\n    else if(a==b)\r\n    {\r\n        c=(a-c)+1;\r\n        a=1;\r\n        b=1;\r\n    }\r\n    else if(a==c)\r\n    {\r\n        b=(a-b)+1;\r\n        a=1;\r\n        c=1;\r\n    }\r\n    printf(\"%d %d %d\\n\",a,b,c);\r\n\r\n\r\n}\r\n\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9447731755424064, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ffa093d738f62d694bf3cd58398a91fd", "bug_code_uid": "94047cfe796d88cc20c10e6398d99f07", "src_uid": "5aae6b27f35852512a250751ef957ab9", "apr_id": "f5ec594b6a3f579f24bd32eb74b891d2", "difficulty": 900, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\ntypedef long long int lli;\r\nlli max(lli a,lli b,lli c)\r\n{\r\n\tif(a>=b&&a>=c)\r\n\t return a;\r\n\telse if(b>=c&&b>=a)\r\n\t return b;\r\n\telse\r\n   return c;\r\n}\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\nlli n,m,x,y,a,b,c,d;\r\nscanf(\"%lld %lld %lld %lld\",&n,&m,&x,&y);\r\na=2*(m+x);\r\nb=2*(n+m);\r\nc=2*(n+y);\r\nd=max(a,b,c);\r\nif(d==a)\r\n printf(\"%lld %lld %lld %lld\\n\",1,1,1,m);\r\nelse if(d==b)\r\n printf(\"%lld %lld %lld %lld\\n\",1,1,n,m);\r\nelse\r\n printf(\"%lld %lld %lld %lld\\n\",1,1,n,1);\r\n\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\ntypedef long long int lli;\r\nlli max(lli a,lli b,lli c)\r\n{\r\n\tif(a>=b&&a>=c)\r\n\t return a;\r\n\telse if(b>=c&&b>=a)\r\n\t return b;\r\n\telse\r\n   return c;\r\n}\r\nint main()\r\n{\r\nint t;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\nlli n,m,x,y,a,b,c,d;\r\nscanf(\"%lld %lld %lld %lld\",&n,&m,&x,&y);\r\na=2*(m+x);\r\nb=2*(n+m);\r\nc=2*(n+y);\r\nd=max(a,b,c);\r\nif(d==a)\r\n printf(\"%d %d %d %lld\\n\",1,1,1,m);\r\nelse if(d==b)\r\n printf(\"%d %d %lld %lld\\n\",1,1,n,m);\r\nelse\r\n printf(\"%d %d %lld %d\\n\",1,1,n,1);\r\n\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9608826479438315, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "333ab97612340f22de09873d6bc93b5e", "bug_code_uid": "b1e28342c74a853e2bea8e2ee63d5e22", "src_uid": "c19afaa6c46cd361e0e5ccee61f6f520", "apr_id": "decb973381d457a8b4c8cbe7993eb19e", "difficulty": 1800, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\ntypedef struct{\n    long x;\n    long y;\n}coordenada;\n\nint main(){\n    int i,n,j;\n    scanf(\"%I64d %I64d\",&n,&j);\n    coordenada M[n*2],A[n];\n    scanf(\"%I64d %I64d\",&M[0].x,&M[0].y);\n\n    for(i=0; i<n; i++){\n        scanf(\"%I64d %I64d\",&A[i].x,&A[i].y);\n    }\n    if(j>2*n){\n        j=j%(2*n);\n    }\n    for(i=1; i<=j; i++){\n        M[i].x=2*(A[(i-1)%n].x)-M[i-1].x;\n        M[i].y=2*(A[(i-1)%n].y)-M[i-1].y;\n    }\n\n    printf(\"%I64d %I64d\",M[j].x,M[j].y);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\ntypedef struct{\n    long long x;\n    long long y;\n}coordenada;\n\nint main(){\n    long long i,n,j;\n    scanf(\"%I64d%I64d\",&n,&j);\n    coordenada M[n*2],A[n];\n    scanf(\"%I64d%I64d\",&M[0].x,&M[0].y);\n\n    for(i=0; i<n; i++){\n        scanf(\"%I64d%I64d\",&A[i].x,&A[i].y);\n    }\n    if(j>2*n){\n        j=j%(2*n);\n    }\n    for(i=1; i<=j; i++){\n        M[i].x=2*(A[(i-1)%n].x)-M[i-1].x;\n        M[i].y=2*(A[(i-1)%n].y)-M[i-1].y;\n    }\n\n    printf(\"%I64d %I64d\",M[j].x,M[j].y);\n    return 0;\n}\n"}
{"similarity_score": 0.9436038514442916, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "aeb42aa7359f6fdf0416ba141b9c8410", "bug_code_uid": "3733c460b2f1797a2b219b063911f626", "src_uid": "d9e9c53b391eb44f469cc92fdcf3ea0a", "apr_id": "db7b15ee79f92a410c95401c4105e6f9", "difficulty": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    int a,count=0;\n    scanf(\"%d\",&a);\n    if(a<=26){\n    char str[a];\n    scanf(\"%s\",&str);\n    for (int i=0;i<a;i++){\n        for (int j=i+1;j<a;j++){\n            if (str[i]==str[j]){\n                count++;\n            }\n        }\n    }\n    printf(\"%d\",count);\n    }\n    else printf(\"-1\");\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint main(){\n    int a,count=0;\n    scanf(\"%d\",&a);\n    if(a<=26){\n    char str[a];\n    scanf(\"%s\",&str);\n    for (int i=0;i<a;i++){\n        for (int j=i+1;j<a;j++){\n            if (str[i]==str[j]&&str[i]!=0){\n                str[j]=0;\n                count++;\n            }\n        }\n    }\n    printf(\"%d\",count);\n    }\n    else printf(\"-1\");\n}"}
{"similarity_score": 0.9889705882352942, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "abbd10fac86ea00a7e08d2f61048d7b9", "bug_code_uid": "0eadc25745baba09088f5ddf0cd8e2ab", "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a", "apr_id": "3e2e12438cf67664c3e4e20c84304eb2", "difficulty": 900, "tags": ["dp", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\t\n\tint gray=0;\n\t\n\tlong int count=0;\n\tint n;\n\tscanf(\"%d\",&n);\n\tlong int a[n];\n\t//int b;\n\tint hot=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(a[i]>0)\n\t\t{\n\t\t\tcount=count+a[i]-1;\n\t\t}\n\t\telse if(a[i]<0)\n\t\t{\n\t\t\tcount=count-1-a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t}\t\t\t\n\t\n\t}\n\t//b=count;\n\tfor(int i=0;i<n;i++)\n\t{\n\tif(a[i]<0)\n\t{\n\t\thot++;\n\t}\n\tif(a[i]==0)\n\t{\n\t\tgray=1;\t\n\t}\n\t}\n\tif(hot%2!=0 && gray==1)\n\t{\n\n\t}\n\telse if(hot%2!=0 && gray ==0)\n\t{\n\t\tcount+=2;\n\t}\n\t\n\t\n\tprintf(\"%ld\",count);\n\t\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\t\n\tint gray=0;\n\t\n\t\n\tlong long int count=0;\n\tint n;\n\tscanf(\"%d\",&n);\n\tlong int a[n];\n\t//int b;\n\tint hot=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(a[i]>0)\n\t\t{\n\t\t\tcount=count+a[i]-1;\n\t\t}\n\t\telse if(a[i]<0)\n\t\t{\n\t\t\tcount=count-1-a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t}\t\t\t\n\t\n\t}\n\t//b=count;\n\tfor(int i=0;i<n;i++)\n\t{\n\tif(a[i]<0)\n\t{\n\t\thot++;\n\t}\n\tif(a[i]==0)\n\t{\n\t\tgray=1;\t\n\t}\n\t}\n\tif(hot%2!=0 && gray==1)\n\t{\n\n\t}\n\telse if(hot%2!=0 && gray ==0)\n\t{\n\t\tcount+=2;\n\t}\n\t\n\t\n\tprintf(\"%I64d\",count);\n\t\n}"}
{"similarity_score": 0.9779735682819384, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "e441747051d54ce7504091f9c5731c3e", "bug_code_uid": "c70bcd14b921d008da63e3ed277764a4", "src_uid": "bb3e3b51a4eda8fef503952a00777910", "apr_id": "da14c0541f88f1a19bccf81ef357fed9", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nstruct N{\n    int a,b;\n}num[100001];\nint cmp(const void *x,const void *y){\n    struct N *a1=(struct N *) x;\n    struct N *b1=(struct N *) y;\n    if(a1->a!=b1->a)\n        return a1->a - b1->a;\n    else\n        return a1->b - b1->b;\n}\nint main(){\n    int x,y,a,b,i,j,cnt=0,t=0,q=0,p=0;\n    scanf(\"%d%d%d%d\",&x,&y,&a,&b);\n    for(i=a;i<=x,b<=y;i++){\n        for(j=i;j<=x;j++)\n            if(j>b){\n                num[t].a=j;\n                num[t++].b=b;\n                cnt++;\n            }\n        b++;\n    }\n    qsort(num,t,sizeof(struct N),cmp);\n    printf(\"%d\\n\",cnt);\n    for(i=0;i<t;i++)\n        printf(\"%d %d\\n\",num[i].a,num[i].b);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nstruct N{\n    int a,b;\n}num[100001];\nint cmp(const void *x,const void *y){\n    struct N *a1=(struct N *) x;\n    struct N *b1=(struct N *) y;\n    if(a1->a!=b1->a)\n        return a1->a - b1->a;\n    else\n        return a1->b - b1->b;\n}\nint main(){\n    int x,y,a,b,i,j,cnt=0,t=0,q=0,p=0;\n    scanf(\"%d%d%d%d\",&x,&y,&a,&b);\n    for(i=a;i<=x;i++){\n        for(j=b;j<=y;j++)\n            if(i>j){\n                num[t].a=i;\n                num[t++].b=j;\n                cnt++;\n            }\n    }\n    qsort(num,t,sizeof(struct N),cmp);\n    printf(\"%d\\n\",cnt);\n    for(i=0;i<t;i++)\n        printf(\"%d %d\\n\",num[i].a,num[i].b);\n    return 0;\n}\n"}
{"similarity_score": 0.9987760097919217, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "dcf3086ee67879b066b46d856e7ba963", "bug_code_uid": "ecc61f01176feb995b448be88db4b98b", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "249b72a062bf845eaab0ad050eb8d41f", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int t;\n   scanf(\"%d\",t);\n   while(t--)\n   {\n       int n,m;\n       scanf(\"%d\",&n);\n       scanf(\"%d\",&m);\n       if(n==1)\n       {\n           printf(\"0\\n\");\n\n       }\n       else if(n==2)\n       {\n           printf(\"%d\\n\",m);\n       }\n\n       else\n       {\n           int sum=0;\n            sum =(2*m);\n           printf(\"%d\\n\",sum);\n       }\n\n\n   }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n   int t;\n   scanf(\"%d\",&t);\n   while(t--)\n   {\n       int n,m;\n       scanf(\"%d\",&n);\n       scanf(\"%d\",&m);\n       if(n==1)\n       {\n           printf(\"0\\n\");\n\n       }\n       else if(n==2)\n       {\n           printf(\"%d\\n\",m);\n       }\n\n       else\n       {\n           int sum=0;\n            sum =(2*m);\n           printf(\"%d\\n\",sum);\n       }\n\n\n   }\n}\n"}
{"similarity_score": 0.9233716475095786, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "dce6d969d27a7890526cd210dbaeab4c", "bug_code_uid": "fb1a41d1de36799f39e57183743c71b5", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "6187394659eddaa1a395c6bcf335aa2e", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\n\tint say=0;\n\tint a;\n\tscanf(\"%d\",&a);\n\tint boy[a];\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tscanf(\"%d\",&boy[i]);\n\t}\n\tint b;\n\tscanf(\"%d\",&b);\n\tint girl[b];\n\tfor(int i=0;i<b;i++)\n\t{\n\t\tscanf(\"%d\",&girl[i]);\n\t}\n\n\tfor(int i=0;i<b;i++)\n\t{\n\t\tfor(int j=i+1;j<a;j++)\n\t\t{\n\t\t\tif(boy[i]>boy[j])\n\t\t\t{\n\t\t\t\tint sabit=boy[i];\n\t\t\t\tboy[i]=boy[j];\n\t\t\t\tboy[j]=sabit;\n\t\t\t}\n\t\t}\t\n\t}\n\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tfor(int j=0;j<b;j++)\n\t\t{\n\t\t\tif(boy[i]-1==girl[j])\n\t\t\t{\n\t\t\t\tsay++;\n\t\t\t\t/*\n\t\t\t\tprintf(\"*%d*\",boy[i]);\n\t\t\t\tprintf(\"*%d*\\n\",girl[j]);\n\t\t\t\t*/\n\t\t\t\tboy[i]=-2;\n\t\t\t\tgirl[j]=-2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(boy[i]==girl[j])\n\t\t\t{\n\t\t\t\tsay++;\n\t\t\t\t/*\n\t\t\t\tprintf(\"*%d*\",boy[i]);\n\t\t\t\tprintf(\"*%d*\\n\",girl[j]);\n\t\t\t\t*/\n\t\t\t\tboy[i]=-2;\n\t\t\t\tgirl[j]=-2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(boy[i]+1==girl[j])\n\t\t\t{\n\t\t\t\tsay++;\t\t\t\t\n\t\t\t\t/*\n\t\t\t\tprintf(\"*%d*\",boy[i]);\n\t\t\t\tprintf(\"*%d*\\n\",girl[j]);\n\t\t\t\t*/\n\t\t\t\tboy[i]=-2;\n\t\t\t\tgirl[j]=-2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",say);\n\n\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\n\tint say=0;\n\tint a;\n\tscanf(\"%d\",&a);\n\tint boy[a];\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tscanf(\"%d\",&boy[i]);\n\t}\n\tint b;\n\tscanf(\"%d\",&b);\n\tint girl[b];\n\tfor(int i=0;i<b;i++)\n\t{\n\t\tscanf(\"%d\",&girl[i]);\n\t}\n\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tfor(int j=i+1;j<a;j++)\n\t\t{\n\t\t\tif(boy[i]>boy[j])\n\t\t\t{\n\t\t\t\tint sabit=boy[i];\n\t\t\t\tboy[i]=boy[j];\n\t\t\t\tboy[j]=sabit;\n\t\t\t}\n\t\t}\t\n\t}\n\tfor(int i=0;i<b;i++)\n\t{\n\t\tfor(int j=i+1;j<b;j++)\n\t\t{\n\t\t\tif(girl[i]>girl[j])\n\t\t\t{\n\t\t\t\tint sabit=girl[i];\n\t\t\t\tgirl[i]=girl[j];\n\t\t\t\tgirl[j]=sabit;\n\t\t\t}\n\t\t}\t\n\t}\n\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tfor(int j=0;j<b;j++)\n\t\t{\n\t\t\tif(boy[i]-1==girl[j])\n\t\t\t{\n\t\t\t\tsay++;\n\t\t\t\t/*\n\t\t\t\tprintf(\"*%d*\",boy[i]);\n\t\t\t\tprintf(\"*%d*\\n\",girl[j]);\n\t\t\t\t*/\n\t\t\t\tboy[i]=-2;\n\t\t\t\tgirl[j]=-2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(boy[i]==girl[j])\n\t\t\t{\n\t\t\t\tsay++;\n\t\t\t\t/*\n\t\t\t\tprintf(\"*%d*\",boy[i]);\n\t\t\t\tprintf(\"*%d*\\n\",girl[j]);\n\t\t\t\t*/\n\t\t\t\tboy[i]=-2;\n\t\t\t\tgirl[j]=-2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(boy[i]+1==girl[j])\n\t\t\t{\n\t\t\t\tsay++;\t\t\t\t\n\t\t\t\t/*\n\t\t\t\tprintf(\"*%d*\",boy[i]);\n\t\t\t\tprintf(\"*%d*\\n\",girl[j]);\n\t\t\t\t*/\n\t\t\t\tboy[i]=-2;\n\t\t\t\tgirl[j]=-2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",say);\n\n\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9794392523364486, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "8ea7992d1cc40b8ca642fe37ed9dd501", "bug_code_uid": "e262c452d42ce3c237596fb323342599", "src_uid": "3c066bad8ee6298b318bf0f4521c7c45", "apr_id": "eaaa8a6e66c8b1704ae223709f26181f", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint m=1,k,i=1,j,n,xo,dest=1,min,max,max_low=-1,min_up=10007,min_a[214],max_a[214];\n\tscanf(\"%d%d\",&n,&xo);\n\tk=n;\n\twhile(k--){\n\t\tscanf(\"%d%d\",&i,&j);\n\t\tmin=(i<j)?i:j;\n\t\tmax=(i>j)?i:j;\n\t\tif(min>max_low)max_low=min;\n\t\tif(max<min_up)min_up=max;\n\t\t*(min_a+m)=min;\n\t\t*(max_a+m)=max;\n\t\t++m;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(max_low>*(max_a+i)){\n\t\t\tdest=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!dest)printf(\"-1\");\n\telse{\n\t\tif(xo<max_low)printf(\"%d\",max_low-xo);\n\t\telse if(xo>min_up)printf(\"%d\",xo-min_up);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint m=1,k,i=1,j,n,xo,dest=1,min,max,max_low=-1,min_up=10007,min_a[214],max_a[214];\n\tscanf(\"%d%d\",&n,&xo);\n\tk=n;\n\twhile(k--){\n\t\tscanf(\"%d%d\",&i,&j);\n\t\tmin=(i<j)?i:j;\n\t\tmax=(i>j)?i:j;\n\t\tif(min>max_low)max_low=min;\n\t\tif(max<min_up)min_up=max;\n\t\t*(min_a+m)=min;\n\t\t*(max_a+m)=max;\n\t\t++m;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(max_low>*(max_a+i)){\n\t\t\tdest=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!dest)printf(\"-1\");\n\telse{\n\t\tif(xo<=max_low)printf(\"%d\",max_low-xo);\n\t\telse if(xo>=min_up)printf(\"%d\",xo-min_up);\n\t\telse printf(\"0\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9961089494163424, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0ad5b00fe06d127894dc6c9c174216c4", "bug_code_uid": "f810a07a23741ccd86124d9289d303bb", "src_uid": "e22b10cdc33a165fbd73b45dc5fbedce", "apr_id": "ffa440687ace2f3d7108ef878246d6e8", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int b[200000];\n    int i,n,p=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        printf(\"%d\",b[i]+p);\n        if((b[i]+p)>p)\n        {\n            p=b[i]+p;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int b[200000];\n    int i,n,p=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        printf(\"%d \",b[i]+p);\n        if((b[i]+p)>p)\n        {\n            p=b[i]+p;\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9533169533169533, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "384b5ef66dbbb07c02f212b77ebf92c9", "bug_code_uid": "9a39427805502e69054b0328c7308337", "src_uid": "0e99f4a49b408cc8874a6d5ec4167acb", "apr_id": "24e2a556b622dcf5b02a0c2dc59871fb", "difficulty": 1500, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include\"stdio.h\"\nint main()\n{\n\n    int a,b,i;\n    scanf(\"%d%d\",&a,&b);\n    int n=a<b? a:b ;\n    n=n+1;\n    printf(\"%d\\n\",n);\n    for(i=0;i<n;i++)\n        printf(\"%d %d\\n\",i,i);\n    return 0;\n}\n", "fixed": "#include\"stdio.h\"\nint main()\n{\n\n    int a,b,i;\n    scanf(\"%d%d\",&a,&b);\n    int n=a<b? a:b ;\n    n=n+1;\n    printf(\"%d\\n\",n);\n    int x=a,y=0;\n    for(i=0;i<n;i++)\n        printf(\"%d %d\\n\",x-i,i);\n    return 0;\n}\n"}
{"similarity_score": 0.8312085670576237, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "7d66c5a8483765db657eeac2e6a96d60", "bug_code_uid": "ae3e7437bc3a1ca9a8308c73c1e4b418", "src_uid": "6dea4611ca210b34ae2da93ebfa9896c", "apr_id": "b9d984b96a8c11cc476e18a08b156902", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n, m, i, j,temp, max = 0, min = 0;\n    scanf(\"%d %d\",&n,&m);\n    int a[m], b[m];\n    for(i = 0; i < m; i++){\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i = 0; i < m; i++){\n        for(j = 0; j < m - i - 1; j++){\n            if(a[j] < a[j+1]){\n                temp = a[j];\n                a[j] = a[j+1];\n                a[j+1] = temp;\n            }\n        }\n    }\n\n    for(i = 0; i < m; i++){\n        b[m - i - 1] = a[i];\n    }\n    temp = 1;\n\n    for(i = 0; temp <= n; ){\n        max = max + a[i];\n        a[i]--;\n        temp++;\n        if(a[i] < a[i+1]){\n            i++;\n            if(i == m){\n                i = 0;\n            }\n        }\n    }\n    printf(\"%d\\t\",max);\n    temp = n;\n    for(i = 0; temp > 0;){\n       min = min + b[i];\n       temp--;\n       b[i]--;\n       if(b[i] == 0){\n        i++;\n       }\n    }\n    printf(\"%d\\n\",min);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n, m, i, j,temp, max = 0, min = 0;\n    scanf(\"%d %d\",&n,&m);\n    int a[m], b[m];\n    for(i = 0; i < m; i++){\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i = 0; i < m; i++){\n        for(j = 0; j < m - i - 1; j++){\n            if(a[j] < a[j+1]){\n                temp = a[j];\n                a[j] = a[j+1];\n                a[j+1] = temp;\n            }\n        }\n    }\n\n    for(i = 0; i < m; i++){\n        b[m - i - 1] = a[i];\n    }\n\n   // maximum\n    temp = 1;\n\n    for(i = 0; temp <= n; ){\n        max = max +  a[i];\n        //printf(\"passenger %d\\t %d\\n\",temp, max);\n        temp++;\n        a[i]--;\n        if(i == (m - 1) && a[i] <= a[0]){\n            i = 0;\n        }\n\n       else if(a[i] < a[i+1]){\n            i++;\n        }\n\n        else if(a[i] == a[0]){\n            i = 0;\n        }\n\n\n\n    }\n    printf(\"%d\\t\",max);\n    // minimum\n    temp = n;\n    for(i = 0; temp > 0;){\n       min = min + b[i];\n       temp--;\n       b[i]--;\n       if(b[i] == 0){\n        i++;\n       }\n    }\n    printf(\"%d\\n\",min);\n\n    return 0;\n}\n"}
{"similarity_score": 0.7932489451476793, "equal_cnt": 13, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 6, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "c1e5a5b592cd4d04c2f11089e891db96", "bug_code_uid": "53a4710e8866a911bd7cd715845412bf", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "eba389e294b4ed20d68b5691f8d1f016", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "t,n,k,h,c;main(){for(;~scanf(\"%d\",t?n?&k:&n:&t);k?k=0,printf(\"%d\",c):0)for(;k&&n;)h=n%k?c+=h,n-=h:(++c,n/=k);", "fixed": "long long t,n,k,c;main(){for(;~scanf(\"%lld\",t?n?&k:&n:&t);k?printf(\"%lld\\n\",c),c=k=0:0)while(k&&n)n%k?c+=n%k,n-=n%k:(++c,n/=k);}"}
{"similarity_score": 0.7288280581693756, "equal_cnt": 20, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 9, "fix_ops_cnt": 20, "lang": "GNU C11", "fix_code_uid": "0844d8babfabef01fd309624f6216527", "bug_code_uid": "69b3235fe0bbb6cef845bcfd317d8219", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "fa47be5d174b8036d4b425279670bc99", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\r\n    int t;\r\n    long long n,k,i,l;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        k=3;\r\n        i=2;\r\n        l=0;\r\n        scanf(\"%lld\",&n);\r\n        while(k<=n)\r\n        {\r\n            \r\n            if(n%k==0)\r\n            {\r\n                printf(\"YES\");\r\n                l=1;\r\n                break;\r\n            }\r\n            k=2*i+1;\r\n            i++;\r\n        }\r\n        if(l==0)\r\n        {\r\n            printf(\"NO\");\r\n        }\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\r\n    int t;\r\n    long long n,l=0;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        l=0;\r\n        scanf(\"%lld\",&n);\r\n        if(n%2==0)\r\n       {\r\n           while(n>1)\r\n           {\r\n               if(n%2==0);\r\n               else{\r\n                   printf(\"YES\\n\");\r\n                   l=1;\r\n                   break;\r\n               }\r\n               n=n/2;\r\n               \r\n           }\r\n           if(l==0)\r\n           {\r\n               printf(\"NO\\n\");\r\n           }\r\n           \r\n       }\r\n       else{\r\n           printf(\"YES\\n\");\r\n       }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.8925170068027211, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "c2589e065c7b526dd6dcf3b692d9aac1", "bug_code_uid": "47fb22465fa4799ef330f167044c1756", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "8ff66523281d42327fd600db10aa1e5a", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint func(int i,int n,int a[]){\n    int sum1=0;\n    for(int j=i;j<n;j++){\n        sum1+=a[i];\n    }\n    return sum1;\n}\nint main(){\n    int n,sum=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(a[i]<a[j]){\n                int temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }//printf(\"%d\",a[i]);\n    }\n    for(int i=0;i<n;i++){\n        sum+=a[i];\n        int x=func(i+1,n,a);\n        //printf(\"%d\",sum);\n        if(sum>x){\n            printf(\"%d\",i+1);\n            break;\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint func(int i,int n,int a[]){\n    //printf(\"%d \",i);\n    int sum1=0;\n    for(int j=i;j<n;j++){\n        sum1+=a[j];\n    }\n    return sum1;\n}\nint main(){\n    int n,sum=0;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(a[i]<a[j]){\n                int temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }//printf(\"%d \",a[i]);\n    }\n    //printf(\"\\n\");\n    for(int i=0;i<n;i++){\n        sum+=a[i];\n        //printf(\"%d \",sum);\n        int y=i+1;\n        int x=func(y,n,a);\n        //printf(\"%d\\n\",x);\n        if(sum>x){\n            printf(\"%d\",i+1);\n            break;\n        }\n    }\n    //printf(\"%d\",x);\n    return 0;\n}"}
{"similarity_score": 0.9977876106194691, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "65f13a14b97f1ba3a31c276c0192f96a", "bug_code_uid": "b6bc58df33d2c9c8efd236e10f659a74", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "ec9f42f63b044432f90060e0cadd1b2a", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,A[103],i,c1=0,c2=0;\n    scanf(\"%d\",&n);\n    for(j=1;j<=n;j++)\n    scanf(\"%d\",&A[j]);\n    \n    for(j=1;j<=n;j++)\n    {\n        if(A[j]%2==0)\n        c1++;\n        \n        if(A[j]%2!=0)\n        c2++;\n    }\n    if(c1>c2)\n    {\n        for(j=1;j<=n;j++)\n        if(A[j]%2!=0)\n        printf(\"%d\",j);\n    }\n    else\n    {\n        for(j=1;j<=n;j++)\n        if(A[j]%2==0)\n        printf(\"%d\",j);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,A[103],j,c1=0,c2=0;\n    scanf(\"%d\",&n);\n    for(j=1;j<=n;j++)\n    scanf(\"%d\",&A[j]);\n    \n    for(j=1;j<=n;j++)\n    {\n        if(A[j]%2==0)\n        c1++;\n        \n        if(A[j]%2!=0)\n        c2++;\n    }\n    if(c1>c2)\n    {\n        for(j=1;j<=n;j++)\n        if(A[j]%2!=0)\n        printf(\"%d\",j);\n    }\n    else\n    {\n        for(j=1;j<=n;j++)\n        if(A[j]%2==0)\n        printf(\"%d\",j);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9012567324955116, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "0675ed46b9cb278b60a08bf9aa35870a", "bug_code_uid": "d0793f220a3a51e1b89d8b57e55128b3", "src_uid": "fbde86a29f416b3d83bcc63fb3776776", "apr_id": "3a466854a346a38fc688e107bb5fe2e2", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint palindrome (char * ch)\n{\nint i;\nfor (i=0;i<strlen(ch)/2;i++)\nif (ch[i]!=ch[strlen(ch)-i-1]) return 0;\nreturn 1;\n}\n\nint verif(char* ch)\n{\nchar  ch1[40];\nfor (int i=0;i<=strlen(ch)-3;i++)\n{\nsscanf(ch+i,\"%3s\",ch1);\nif (palindrome(ch1)) return 1;\t\n}\nreturn 0;\n}\nvoid affiche (int n)\n{\nint i=0;\nif (n==1) \n{\nprintf(\"a\");\nreturn ;\n}\nif (n%2) printf(\"a\");\nn=n/2;\nfor (i=1;i<=n;i++)\nif (i%2) printf(\"bb\");\nelse printf(\"aa\");\t\n}\n\nmain()\n{int n;\nchar ch[40];\n//scanf(\"%d\",&n);\n//affiche(n);\ngets(ch);\nprintf(\"%d\",verif(ch));\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint palindrome (char * ch)\n{\nint i;\nfor (i=0;i<strlen(ch)/2;i++)\nif (ch[i]!=ch[strlen(ch)-i-1]) return 0;\nreturn 1;\n}\n\nint verif(char* ch)\n{\nchar  ch1[40];\nfor (int i=0;i<=strlen(ch)-3;i++)\n{\nsscanf(ch+i,\"%3s\",ch1);\nif (palindrome(ch1)) return 1;\t\n}\nreturn 0;\n}\nvoid affiche (int n)\n{\nint i=0;\nif (n==1) \n{\nprintf(\"a\");\nreturn ;\n}\nif (n%2) printf(\"b\");\nn=n/2;\nfor (i=1;i<=n;i++)\nif (i%2) printf(\"aa\");\nelse printf(\"bb\");\t\n}\n\nmain()\n{int n;\nchar ch[40];\nscanf(\"%d\",&n);\naffiche(n);\n//gets(ch);\n//printf(\"%d\",verif(ch));\n}"}
{"similarity_score": 0.9376854599406528, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "35d4963a564481e26c3dd182a9d84066", "bug_code_uid": "2b661b8c5dfe4ce7110a2a767d06c6af", "src_uid": "8e7c0b703155dd9b90cda706d22525c9", "apr_id": "e07358dcd65ce5f01cfe90ac06d086df", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\nusing namespace std;\r\nint main(){\r\n\tint n,c,d;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d %d\",&c,&d);\r\n\t\tif(c==0&&d==0){\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(c==d){\r\n\t\t\tprintf(\"1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif((c+d)%2==0){\r\n\t\t\tprintf(\"2\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tprintf(\"-1\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\n\tint n,c,d;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d %d\",&c,&d);\r\n\t\tif(c==0&&d==0){\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(c==d){\r\n\t\t\tprintf(\"1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif((c+d)%2==0){\r\n\t\t\tprintf(\"2\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tprintf(\"-1\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9209726443768997, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "b5c8c7394b381a6f5a557e37f9ee0837", "bug_code_uid": "590edcdff6fad16c09b3a0aa176e02b2", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "13c106b690aff6b29b638fe78fc47d83", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    while(1){\n    scanf(\"%d\",&n);\n    for(i=1;i<n;i++)\n    {\n        if(i%2!=0)\n        {\n            printf(\"I hate that\");\n        }\n        else\n            printf(\"I love that\");\n    }\n    if(n%2==0)\n        printf(\"I love it\");\n    else\n        printf(\"I hate it\");\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<n;i++)\n    {\n        if(i%2!=0)\n        {\n            printf(\" I hate that\");\n        }\n        else\n            printf(\" I love that\");\n    }\n    if(n%2==0)\n        printf(\" I love it\");\n    else\n        printf(\" I hate it\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.40353460972017674, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 7, "insert_cnt": 1, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "1c18ed58e96ce7262510089a11357034", "bug_code_uid": "d301116b1b03e7c4f491d1dcfe9d6258", "src_uid": "4c0b0cb8a11cb1fd40fef47616987029", "apr_id": "dba85cdc683b8cdaef94c2230a2b97ad", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\n\r\nint main() {\r\n   int q;\r\n   char s[3];\r\n   scanf(\"%d\",&q);\r\n   while(q--){\r\n       scanf(\"%s\",s);\r\n       int count=0;\r\n      if(s[0]=='Y'||s[0]=='y')\r\n        count++;\r\n      if(s[1]=='e'||s[1]=='E') \r\n        count++;\r\n      if (s[2]=='S'||s[2]=='s')\r\n        count++;\r\n    if(count==3)\r\n        printf(\"YES\\n\");\r\n    else\r\n        printf(\"NO\\n\");\r\n   }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nchar s[4];\r\nint t,i,j;\r\nscanf(\"%d\",&t);\r\nfor(i=1; i<=t; i++)\r\n{\r\nscanf(\"%s\",&s);\r\nif((s[0]=='Y' || s[0]=='y')&&(s[1]=='E' || s[1]=='e')&& (s[2]=='S'||s[2]=='s'))\r\nprintf(\"YES\\n\");\r\nelse\r\nprintf(\"NO\\n\");\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9906716417910447, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5c1d72e10c6a36af675225c3f43be39d", "bug_code_uid": "b81f3f6e44f1c4f65aaa6b0c09224eae", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "289ed2dbe7f6d8baccd6296ec706c4b1", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<bits/stdc++.h>\nint main()\n{\n\n    int t,v[101];\n\n    long long n,m,i,j;\n\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&n);\n        v[i]=n;\n    }\n    for(i=0;i<t;i++)\n    {\n        m=v[i]/2;\n        if(v[i]%2==0)\n        {\n           for(j=1;j<=m;j++)\n            {\n                printf(\"1\");\n            }\n        }\n        else\n        {\n\n            printf(\"7\");\n            for(j=2;j<=m;j++)\n            {\n                printf(\"1\");\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n    int t,v[101];\n\n    long long n,m,i,j;\n\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld\",&n);\n        v[i]=n;\n    }\n    for(i=0;i<t;i++)\n    {\n        m=v[i]/2;\n        if(v[i]%2==0)\n        {\n           for(j=1;j<=m;j++)\n            {\n                printf(\"1\");\n            }\n        }\n        else\n        {\n\n            printf(\"7\");\n            for(j=2;j<=m;j++)\n            {\n                printf(\"1\");\n            }\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.8588098016336057, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4787e90162d6e21f3a32005b58004620", "bug_code_uid": "862347fb412f393c527a07ac932c5978", "src_uid": "016e00b2b960be792d4ec7fcfb7976e2", "apr_id": "3c132ed5651157eebfe678852c7c4558", "difficulty": 1300, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint Max(int a, int b) {\n\treturn a > b ? a : b;\n}\nint main() {\n\tlong a, b, n, aMin = INT_MAX, aMax = INT_MIN, bMin = INT_MAX, bMax = INT_MIN;\n\tscanf(\"%ld\", &n);\n\twhile (n--) {\n\t\tscanf(\"%ld %ld\", &a, &b);\n\t\tif (a > aMax) aMax = a;\n\t\tif (a < aMin) aMin = a;\n\t\tif (b > bMax) bMax = b;\n\t\tif (b < bMin) bMin = b;\n\t}\n\tlong min = Max(aMax - aMin, bMax - bMin);\n\tprintf(\"%I64d\", (long long) min*min);\n\n}", "fixed": "#include <stdio.h>\n#define MIN -1111111111\n#define MAX 1111111111\nint Max(int a, int b) {\n\treturn a > b ? a : b;\n}\nint main() {\n\tlong a, b, n, aMin = MAX, aMax = MIN, bMin = MAX, bMax = MIN;\n\tscanf(\"%ld\", &n);\n\twhile (n--) {\n\t\tscanf(\"%ld %ld\", &a, &b);\n\t\tif (a > aMax) aMax = a;\n\t\tif (a < aMin) aMin = a;\n\t\tif (b > bMax) bMax = b;\n\t\tif (b < bMin) bMin = b;\n\t}\n\tlong min = Max(aMax - aMin, bMax - bMin);\n\tprintf(\"%I64d\", (long long) min*min);\n\n}"}
{"similarity_score": 0.6424242424242425, "equal_cnt": 14, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "7363374f127801543c5bb809ed8f38fc", "bug_code_uid": "086ea7e867a58ca08ceb2f90ba10d38c", "src_uid": "6854ad3597f9f41d475aacb774b823ed", "apr_id": "56bbc9fe84934ed4251fe0f48f035b57", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint n,k,i;\r\n\t\tscanf(\"%d %d\",&n,&k);\r\n\t\t\r\n\t\tint a[n];\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t}\r\n\t\ta[0]=a[0]-1;\r\n\t\ta[n-1]=a[n-1]+1;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\tprintf(\"%d\\t\",a[i]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint n,k,l;\r\n\t\tscanf(\"%d %d\",&n,&k);\r\n\t\t\r\n\t\tint a[n];\r\n\t\tfor(l=0;l<n;l++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[l]);\r\n\t\t}\r\n\t\tint i=0,j=n-1;\r\n\t\twhile(k)\r\n\t\t{\r\n\t\t    if(a[i]-1>=0)\r\n\t\t    {\r\n\t\t        a[i]=a[i]-1;\r\n\t\t        a[j]=a[j]+1;\r\n\t\t        k--;\r\n\t\t    }\r\n\t\t    else\r\n\t\t    {\r\n\t\t        i++;\r\n\t\t    }\r\n\t\t    if(i==j)\r\n\t\t    break;\r\n\t\t}\r\n\t\tfor(l=0;l<n;l++)\r\n\t\t{\r\n\t\t    printf(\"%d\\t\",a[l]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9896907216494846, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "4034703d2f3558e57a55d9380e0f5f3c", "bug_code_uid": "4ede9f12b138fbfc15366a14151076a8", "src_uid": "0b204773f8d06362b7569bd82224b218", "apr_id": "829b2c207807eb57e63a0c4c20427d5e", "difficulty": 1800, "tags": ["data structures", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef unsigned u;\nu S[262144],L[101101],R[101101],K[101101];\nint main()\n{\n\tu n,q,l,r,i,j,k;\n\tscanf(\"%u%u\",&n,&q);\n\tfor(i=0;i<q;++i)\n\t{\n\t\tscanf(\"%u%u%u\",&l,&r,&k);\n\t\tL[i]=l+131071;R[i]=r+131071;\n\t\tS[l]|=k;S[r]|=k;\n\t\tfor(K[i]=k;l+1<r;l>>=1,r>>=1)\n\t\t{\n\t\t\tif(r&1)S[r-1]|=k;\n\t\t\tif(!(l&1))S[l+1]|=k;\n\t\t}\n\t}\n\tfor(i=1;++i<262144;S[i]|=S[i>>1]);\n\tfor(i=131072;--i;)S[i]=S[i<<1]&S[(i<<1)+1];\n\tfor(i=0;i<q;++i)\n\t{\n\t\tfor(l=L[i],r=R[i],k=K[i],j=S[l]&S[r];l+1<r;l>>=1,r>>=1)\n\t\t{\n\t\t\tif(r&1)j&=S[r-1];\n\t\t\tif(!(l&1))j&=S[l+1];\n\t\t}\n\t\tif(j!=k){printf(\"NO\\n\");return 0;}\n\t}\n\tprintf(\"YES\\n%u\",S[131072]);\n\tfor(i=0;++i<n;)printf(\" %u\",S[131072+i]);\n\tputchar('\\n');\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef unsigned u;\nu S[262144],L[101101],R[101101],K[101101];\nint main()\n{\n\tu n,q,l,r,i,j,k;\n\tscanf(\"%u%u\",&n,&q);\n\tfor(i=0;i<q;++i)\n\t{\n\t\tscanf(\"%u%u%u\",&l,&r,&k);\n\t\tL[i]=(l+=131071);R[i]=(r+=131071);\n\t\tS[l]|=k;S[r]|=k;\n\t\tfor(K[i]=k;l+1<r;l>>=1,r>>=1)\n\t\t{\n\t\t\tif(r&1)S[r-1]|=k;\n\t\t\tif(!(l&1))S[l+1]|=k;\n\t\t}\n\t}\n\tfor(i=1;++i<262144;S[i]|=S[i>>1]);\n\tfor(i=131072;--i;)S[i]=S[i<<1]&S[(i<<1)+1];\n\tfor(i=0;i<q;++i)\n\t{\n\t\tfor(l=L[i],r=R[i],k=K[i],j=S[l]&S[r];l+1<r;l>>=1,r>>=1)\n\t\t{\n\t\t\tif(r&1)j&=S[r-1];\n\t\t\tif(!(l&1))j&=S[l+1];\n\t\t}\n\t\tif(j!=k){printf(\"NO\\n\");return 0;}\n\t}\n\tprintf(\"YES\\n%u\",S[131072]);\n\tfor(i=0;++i<n;)printf(\" %u\",S[131072+i]);\n\tputchar('\\n');\n\treturn 0;\n}\n"}
{"similarity_score": 0.5468102734051367, "equal_cnt": 39, "replace_cnt": 25, "delete_cnt": 3, "insert_cnt": 11, "fix_ops_cnt": 39, "lang": "GNU C11", "fix_code_uid": "c0e1a38ae8231e94026f391f5297543d", "bug_code_uid": "c96bd6ec7829baec483e2ee8837a45df", "src_uid": "6c137a74b36dede61037cb3b05167329", "apr_id": "939240c98b3c3fca4133a041f4e30189", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main (){\n\tchar a[15];\n\tint t,n;\n\t\n\t\n\t\n\t\n\tscanf(\"%d\",&t);\n\twhile(t--){\nint sum=0;\n\tint num=0;\n\tint qwe=0;\n\tint qer=0;\n\tint qwt=0;\n\t\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%s\",a);\n\t\tint len=strlen(a);\n\t\tfor(int i=0;i<len;i++){\n\t\t\t\n\t\t\t if(a[i]=='T') num++;\n\t\t\t if(a[i]=='i')\tsum++;\n\t\t\t if(a[i]=='m') qwe++;\n\t\t\t if(a[i]=='u') qer++;\n\t\t\t if(a[i]=='r') qwt++;\n\t\t}if(num==1 && sum==1 && qwe==1 && qer==1 && qwt==1){\n\t\tprintf(\"YES\\n\");\n\t\t\t}\n\telse{\n\t\tprintf(\"NO\\n\");\n\t\t}\n\t\t\n\t\t\n\t}\n\treturn 0;\n}\n\t\t     \t  \t\t\t\t \t  \t  \t  \t  \t\t\t\t", "fixed": "#include<stdio.h>\n#include<string.h>\nchar a[15];\nint main () {\n\tint t, n;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint sum = 0;\n\t\tint num = 0;\n\t\tint qwe = 0;\n\t\tint qer = 0;\n\t\tint qwt = 0;\n\t\t\n\t\tscanf(\"%d\", &n);\n\t\tscanf(\"%s\", a);\n\t\tint len = strlen(a);\n        if(len>5){\n            printf(\"NO\\n\");\n            continue;\n        }\n\t\tfor (int i = 0; i < len; i++) {\n\t\t\tif (a[i] == 'T') num++;\n\t\t\tif (a[i] == 'i')sum++;\n\t\t\tif (a[i] == 'm') qwe++;\n\t\t\tif (a[i] == 'u') qer++;\n\t\t\tif (a[i] == 'r') qwt++;\n\t\t}\n\t\tif (num == 1 && sum == 1 && qwe == 1 && qer == 1 && qwt == 1) {\n\t\t\tprintf(\"YES\\n\");\n\t\t} else {\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n \t \t\t   \t\t  \t\t\t \t\t \t      \t \t \t"}
{"similarity_score": 0.9933333333333333, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "bb9e81ea2f3941a5101eabecc2949b69", "bug_code_uid": "9ab0e80b91bf9455bcdc7986b6f06ed5", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "fa1006299fa3fd3835cada32483384bd", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define i 100000\nint main()\n{\n    char x[i],y[i];\n    int s1=0,s2=0;\n\n    scanf(\"%s %s\",x,y);\n    s1=strlen(x);\n    s2=strlen(y);\n    if(strcmp(x,y)==0)\n        printf(\"-1\\n\");\n    else if(s1>=s2)\n        printf(\"%d\\n\",s1);\n    else\n        printf(\"%d\\n\",s2);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define i 200000\nint main()\n{\n    char x[i],y[i];\n    int s1=0,s2=0;\n\n    scanf(\"%s %s\",x,y);\n    s1=strlen(x);\n    s2=strlen(y);\n\n    if(strcmp(x,y)==0)\n        printf(\"-1\\n\");\n    else if(s1>=s2)\n        printf(\"%d\\n\",s1);\n    else\n        printf(\"%d\\n\",s2);\n\n}\n"}
{"similarity_score": 0.8906882591093117, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "28a70e394e1ddcf3b20ce9e537a2605e", "bug_code_uid": "19cd3e7ce1751420058a2734d7b09508", "src_uid": "92bf30e66f4d5ddebb697d2fa4fa0689", "apr_id": "47afe40b7eaab8ea6a3d3f6a2a9c0148", "difficulty": 800, "tags": ["implementation", "greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t,b,p,f,h,c,tc,b1;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t    tc=0;\n\t    scanf(\"%d %d %d\",&b,&p,&f);\n\t    scanf(\"%d %d\",&h,&c);\n\t    b1=b/2;\n\t    if(b1>0)\n\t    {\n\t    if(f>=b1)\n\t    {\n\t        tc+=b1*c;\n\t        b1=0;\n\t    }\n\t    else\n\t    {\n\t        tc+=f*c;\n\t        b1=b1-f;\n\t    }\n\t}\n\t    if(b1>0)\n\t    {\n\t    if(p>=b1)\n\t    {\n\t        tc+=b1*h;\n\t        b1=0;\n\t    }\n\t    else\n\t    {\n\t        tc+=p*h;\n\t        b1=b1-p;\n\t    }\n\t    }\n\t    printf(\"%d\\n\",tc);\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t,b,p,f,h,c,tc,b1;\n\tscanf(\"%d\",&t);\n\tfor(int i=0;i<t;i++)\n\t{\n\t    tc=0;\n\t    scanf(\"%d %d %d\",&b,&p,&f);\n\t    scanf(\"%d %d\",&h,&c);\n\t    if(c<h)\n\t    {\n\t        int temp1=c;\n\t        c=h;\n\t        h=temp1;\n\t        int temp2=p;\n\t        p=f;\n\t        f=temp2;\n\t    }\n\t    b1=b/2;\n\t    if(b1>0)\n\t    {\n\t    if(f>=b1)\n\t    {\n\t        tc+=b1*c;\n\t        b1=0;\n\t    }\n\t    else\n\t    {\n\t        tc+=f*c;\n\t        b1=b1-f;\n\t    }\n\t}\n\t    if(b1>0)\n\t    {\n\t    if(p>=b1)\n\t    {\n\t        tc+=b1*h;\n\t        b1=0;\n\t    }\n\t    else\n\t    {\n\t        tc+=p*h;\n\t        b1=b1-p;\n\t    }\n\t    }\n\t    printf(\"%d\\n\",tc);\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.09505703422053231, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "39a8bd807c3165d3567434ab020326f6", "bug_code_uid": "62305b083b9b8ad0ba2e0a0490e674f2", "src_uid": "5312a505bd59b55a6c5487f67a33d81a", "apr_id": "5a00a79018930dbdc2c072c7f396e7e1", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n#include<iostream>\n#include<string>\n#include<math.h>\nusing namespace std;\n\nvoid makeround(string);\n\nint main()\n{\n\tint t = 0;\n\tstring m=\"0\";\n\tcin >> t;\n\tfor (int i = 0; i < t; i++)\n\t{\n\t\tcin >> m;\n\t\tmakeround(m);\n\t}\n\treturn 0;\n}\n\nvoid makeround(string m)\n{\n\tint n = m.size();\n\tint num = 0;\n\tfor (int i=n; i > 0; i--)\n\t{\n\t\tnum += pow(10, n-i) * (m[i-1] - '0');\n\t}\n\tnum = num - pow(10, n - 1);\n\tcout << num;\n}\n\n\t\t     \t\t\t\t\t\t         \t\t  \t\t  \t", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int n,i,t,k;\n    scanf(\"%d\",&n);\n    int arr[n];\n    int b[n];\n    int c[n];\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&arr[i]);\n        b[i]=arr[i];\n\n    }\n    for(i=0;i<n;i++)\n    {\n       int c=0,sum=0;\n        while(arr[i]!=0)\n        {\n            t=arr[i]%10;\n            sum=sum+t;\n            arr[i]=arr[i]/10;\n            c++;\n        }\n        k=round(pow(10,c-1));\n\n        if(b[i]>k)\n        printf(\"%d\\n\",b[i]-k);\n        else\n        printf(\"%d\\n\",k-b[i]);\n    }\n    return 0;\n}\n\n \t\t\t \t  \t\t\t  \t\t\t         \t\t\t\t\t"}
{"similarity_score": 0.972972972972973, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "c215b4f8c041d7ccdab9725b2c3bb58b", "bug_code_uid": "692a688089892532d3482e543b3ccdda", "src_uid": "7f98c9258f3e127a782041c421d6317b", "apr_id": "a732199a88d3339a216b09d37eb1e38e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main( )\n{\n\tint n,i,j,k,c=0,max=0,a[100002],x,m=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\ta[i]=0;\n\t}\n\tfor(i=0;i<2*n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(a[x]==0)\n\t\t{\n\t\t\ta[x]++;\n\t\t\tm++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm--;\n\t\t}\n\t\tif(m>=max)\n\t\t{\n\t\t\tmax=m;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main( )\n{\n\tint n,i,j,k,c=0,max=0,a[100002],x,m=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ta[i]=0;\n\t}\n\tfor(i=1;i<=2*n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(a[x]==0)\n\t\t{\n\t\t\ta[x]++;\n\t\t\tm++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm--;\n\t\t}\n\t\tif(m>=max)\n\t\t{\n\t\t\tmax=m;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8293487221764221, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 6, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "eecfd78649cbeb075181416b0bfdb72e", "bug_code_uid": "1c3c651c09d6e79b8e238efd15099d8b", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "b624ea418eccb6053a176b3bedbd15db", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\ntypedef char boolean;\r\n#define True 1\r\n#define False 0\r\n\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (; t; t--) {\r\n\t\tint q, d;\r\n\t\tscanf(\"%d %d\", &q, &d);\r\n\t\tfor (; q; q--) {\r\n\t\t\tint n;\r\n\t\t\tscanf(\"%d\", &n);\r\n\t\t\tboolean r = (n % 10 == d);\r\n\r\n\t\t\tint temp = d;\r\n\t\t\tfor (int i = 1; i <= 10; ++i) {\r\n\t\t\t\tif ((d * i) % 10 == n % 10) {\r\n\t\t\t\t\tint a = n - (d * i);\r\n\t\t\t\t\tif (a >= 0) {\r\n\t\t\t\t\t\tr = True;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\tif (r) {\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\ntypedef char boolean;\r\n#define True 1\r\n#define False 0\r\n\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\tfor (; t; --t) {\r\n\t\tint q, d;\r\n\t\tscanf(\"%d %d\", &q, &d);\r\n\t\tfor (; q; --q) {\r\n\t\t\tint n;\r\n\t\t\tscanf(\"%d\", &n);\r\n\t\t\tboolean r = False;\r\n\t\t\tint a = n;\r\n\t\t\twhile (a) {\r\n\t\t\t\tif (a % 10 == d)\r\n\t\t\t\t\tr = True;\r\n\t\t\t\ta /= 10;\r\n\t\t\t}\r\n\t\t\tif (n >= d * 10)\r\n\t\t\t\tr = True;\r\n\t\t\tfor (int i = 1; i <= 10; ++i) {\r\n\t\t\t\tif (n % 10 == (d*i) % 10) {\r\n\t\t\t\t\ta = n - (d*i);\r\n\t\t\t\t\tif (a >= 0) {\r\n\t\t\t\t\t\tr = True;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (r) {\r\n\t\t\t\tprintf(\"YES\\n\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9939831528279182, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "5c3d9fad5556aa1a55866056eb80408e", "bug_code_uid": "e5322943f5f28b6ed8404fa3a6b3f8db", "src_uid": "a37c3f2828490c70301b5b5deeee0f88", "apr_id": "927cc90a9ba878cf441676bfe567c155", "difficulty": 800, "tags": ["graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\n\nint main(){\n\tint size;\n\tscanf(\"%d\",&size);\n\tint array[size];\n\tint i=0;\n\tint number;\n\tfor (;i<5;i++){\n\t\tscanf(\"%d\",&number);\n\t\tarray[i]=number;\n\t}\n\tint match=0;\n\tfor (i=0;i<size;i++){\n\t\tint index=array[i]-1;   /*wth*/\n\t\tint index_2=array[index]-1;\n\t\tif (array[index_2]-1==i){\n\t\t\tmatch++;\n\t\t\tprintf(\"YES\");\n\t\t\tbreak;\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\t\n\t}\n\tif (match==0){\n\t\tprintf(\"NO\");\n\t}\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n\n\nint main(){\n\tint size;\n\tscanf(\"%d\",&size);\n\tint array[size];\n\tint i=0;\n\tint number;\n\tfor (;i<size;i++){\n\t\tscanf(\"%d\",&number);\n\t\tarray[i]=number;\n\t}\n\tint match=0;\n\tfor (i=0;i<size;i++){\n\t\tint index=array[i]-1;   /*wth*/\n\t\tint index_2=array[index]-1;\n\t\tif (array[index_2]-1==i){\n\t\t\tmatch++;\n\t\t\tprintf(\"YES\");\n\t\t\tbreak;\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\t\n\t}\n\tif (match==0){\n\t\tprintf(\"NO\");\n\t}\n\t\n\t\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.984182776801406, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3001206e8927ce664a53a26aa0690848", "bug_code_uid": "5594e5b6e78d27ced26d3fa718e48641", "src_uid": "adb66b7b22d70bb37cb625d531d8865f", "apr_id": "564b2ed3295163709b89e5dfd20d0f72", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define maxn 1000000000+5\nint main()\n{\n\t__int64 x,i,m,n,sum,a[100001];\n\tscanf(\"%d\",&x);\n\tm=maxn;n=0;\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum+=a[i];\n\t\tif(a[i]%2!=0&&a[i]<m)m=a[i];\n\t\tif(a[i]%2!=0)n++;\n\t}\n\tif(n%2!=0)sum-=m;\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#define maxn 1000000000+5\nint main()\n{\n\t__int64 x,i,m,n,sum,a[100001];\n\tscanf(\"%I64d\",&x);\n\tm=maxn;n=0;\n\tfor(i=0;i<x;i++)\n\t{\n\t\tscanf(\"%I64d\",&a[i]);\n\t\tsum+=a[i];\n\t\tif(a[i]%2!=0&&a[i]<m)m=a[i];\n\t\tif(a[i]%2!=0)n++;\n\t}\n\tif(n%2!=0)sum-=m;\n\tprintf(\"%I64d\\n\",sum);\n\treturn 0;\n}"}
{"similarity_score": 0.9808306709265175, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b1ea61ef551c3f6933d0cce5db12f7c6", "bug_code_uid": "421731cf3fc99c82034082cfa15d5945", "src_uid": "8f02891aa9d2fcd1963df3a4028aa5c0", "apr_id": "13d9f6243c5fe0ac6816f9b0fa7a7399", "difficulty": 800, "tags": ["games", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"\\n\");\r\n\t\tint sum=0,i=0,t,t1,t2;\r\n\t\tchar inp='\\0',temp,start;\r\n\t\twhile(inp!=10)\r\n\t\t{\r\n\t\t\tscanf(\"%c\",&inp);\r\n\t\t\tif(inp==10)\r\n\t\t\tbreak;\r\n\t\t\tt1=(int)(inp);\r\n\t\t\tsum=sum+(t1-96);\r\n\t\t\ttemp=inp;\r\n\t\t\tif(i==0)\r\n\t\t\tstart=inp;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif(i==1)\r\n\t\tprintf(\"Bob %d\\n\",sum);\r\n\t\telse if(i%2==1)\r\n\t\t{\r\n\t\t\tt1=(int)temp;\r\n\t\t\tt2=(int)start;\r\n\t\t\tprintf(\"%d\\n\",sum);\r\n\t\t\tint max=(sum-(t1-96))-(t1-96);\r\n\t\t\tif(max<(sum-(t2-96)-(t2-96)))\r\n\t\t\tmax=sum-(t2-96)-(t2-96);\r\n\t\t\tprintf(\"Alice %d\\n\",max);\r\n\t\t}\r\n\t\telse\r\n\t\tprintf(\"Alice %d\\n\",sum);\r\n\t}\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"\\n\");\r\n\t\tint sum=0,i=0,t,t1,t2;\r\n\t\tchar inp='\\0',temp,start;\r\n\t\twhile(inp!=10)\r\n\t\t{\r\n\t\t\tscanf(\"%c\",&inp);\r\n\t\t\tif(inp==10)\r\n\t\t\tbreak;\r\n\t\t\tt1=(int)(inp);\r\n\t\t\tsum=sum+(t1-96);\r\n\t\t\ttemp=inp;\r\n\t\t\tif(i==0)\r\n\t\t\tstart=inp;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif(i==1)\r\n\t\tprintf(\"Bob %d\\n\",sum);\r\n\t\telse if(i%2==1)\r\n\t\t{\r\n\t\t\tt1=(int)temp;\r\n\t\t\tt2=(int)start;\r\n\t\t\tint max=(sum-(t1-96))-(t1-96);\r\n\t\t\tif(max<(sum-(t2-96)-(t2-96)))\r\n\t\t\tmax=sum-(t2-96)-(t2-96);\r\n\t\t\tprintf(\"Alice %d\\n\",max);\r\n\t\t}\r\n\t\telse\r\n\t\tprintf(\"Alice %d\\n\",sum);\r\n\t}\r\n}"}
{"similarity_score": 0.6835871404399323, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "10171d001fad0db9ccb43812fc0dd258", "bug_code_uid": "31e7d102c9698f9a3a4351d583284217", "src_uid": "6b4242ae9a52d36548dda79d93fe0aef", "apr_id": "0c64116b9e4524670b7fb7739d67aaaa", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,c,sum,s;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        c=0;\n        char array[n];\n        getchar();\n        gets(array);\n        s=strlen(array);\n        for(j=0; j<s; j++)\n        {\n            if(array[j]=='>')\n            {\n                c++;\n            }\n            else\n            {\n                c--;\n            }\n        }\n        if(c-1>1||c+1<n)\n        {\n            printf(\"%d\\n\",abs(c));\n        }\n    }\n    return 0;\n}\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,j,c,d,sum,s;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        c=0,d=0;\n        char array[n];\n        getchar();\n        gets(array);\n        s=strlen(array);\n        for(i=0; i<s; i++)\n        {\n            if(array[i]=='<')\n            {\n                c++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        for(j=s-1; j>=0; j--)\n        {\n            if(array[j]=='>')\n            {\n                d++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        sum=c+d;\n        printf(\"%d\\n\",sum);\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9690860215053764, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "29ce49ff34278d8df52b1240464c27a3", "bug_code_uid": "f2456f3ed77244ba7509e62520d5d4f6", "src_uid": "22bebd448f93c0ff07d2be91e873521c", "apr_id": "740926b6a6943bc75403e651fb20345e", "difficulty": 1600, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include \"stdio.h\"\n#include \"string.h\"\n\nint main(int argc, char* argv[])\n{\n    int x,y,x0,y0;\n    scanf(\"%d%d%d%d\",&x,&y,&x0,&y0);\n    char s[10000];\n    int flag[501][501]={0};\n    scanf(\"%s\",&s);\n    int len=strlen(s);\n    int i,cnt=0;\n    for(i=0;i<len;i++)\n    {\n        if(flag[x0][y0]==0){//\u8bb0\u5f55\u8d70\u8fc7\u7684\u4f4d\u7f6e\uff1b\n            printf(\"1 \");\n            flag[x0][y0]=1;\n            cnt++;\n        }\n        else\n            printf(\"0 \");\n\n        if(s[i]=='U' && x0>1)\n            x0--;\n        if(s[i]=='D' && x0<x)\n            x0++;\n        if(s[i]=='L' && y0>1)\n            y0--;\n        if(s[i]=='R' && y0<y)\n            y0++;\n    }\n    int ans=x*y-cnt;//\u6ca1\u6709\u8d70\u8fc7\u7684\u5730\u65b9\u90fd\u6709\u7206ZHA\u7684\u53ef\u80fd\uff1b\n    printf(\"%d\",ans);\n                \n\n    return 0;\n}", "fixed": "#include \"stdio.h\"\n#include \"string.h\"\n\nint main(int argc, char* argv[])\n{\n    int x,y,x0,y0;\n    scanf(\"%d%d%d%d\",&x,&y,&x0,&y0);\n    char s[100001];\n    int flag[501][501]={0};\n    scanf(\"%s\",&s);\n    int len=strlen(s);\n    int i,cnt=0;\n    for(i=0;i<len;i++)\n    {\n        if(flag[x0][y0]==0){//\u8bb0\u5f55\u8d70\u8fc7\u7684\u4f4d\u7f6e\uff1b\n            printf(\"1 \");\n            flag[x0][y0]=1;\n            cnt++;\n        }\n        else\n            printf(\"0 \");\n\n        if(s[i]=='U' && x0>1)\n        {   x0--;\n        }\n        if(s[i]=='D' && x0<x){\n            x0++;\n        }\n        if(s[i]=='L' && y0>1){\n            y0--;\n        }\n        if(s[i]=='R' && y0<y){\n            y0++;\n        }\n    }\n    int ans=x*y-cnt;//\u6ca1\u6709\u8d70\u8fc7\u7684\u5730\u65b9\u90fd\u6709\u7206ZHA\u7684\u53ef\u80fd\uff1b\n    printf(\"%d\",ans);\n                \n\n    return 0;\n}"}
{"similarity_score": 0.7482517482517482, "equal_cnt": 16, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 6, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "77f65ac5df2672a14d51d24c37aaf04e", "bug_code_uid": "3391e1de5d13e68ad167ae6a3514253f", "src_uid": "9037f487a426ead347baa803955b2c00", "apr_id": "73da5d9f87386f7ab2508a1ce80d9d18", "difficulty": 1100, "tags": ["implementation", "geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n,k;\n    float r;\n     scanf(\"%d\",&n);\n     float a[n];\n   for(int i=0;i<n;i++)\n   {\n       scanf(\"%f\",&a[i]);\n         r=2.0/(1-(a[i]/180.0));\n         k=2/(1-(a[i]/180));\n         if(ceil(r)==k)\n            printf(\"YES\\n\");\n         else printf(\"NO\\n\");\n}}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n\n{     int n;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if((360%(180-a[i]))==0)\n        printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n}\n"}
{"similarity_score": 0.6728395061728395, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "34d2813e50240457e8a6395d76bc92ac", "bug_code_uid": "7946137b870bac03d0b05826caa8fcdc", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "a326da68c2ad49b8606aab9e3397a97d", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(){\n    \n    int n,i,k;\n    int j=0;\n    scanf(\"%d\",&n);\n    int arr[3][n];\n    for(i=0;i<n;i++){\n        if(arr[0][n]+arr[1][n]+arr[2][n]>=2)\n        j++;\n    }\n    printf(\"%d\",j);\n    \n    return 0;\n    \n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(){\n    \n    int n,i;\n    int j=0;\n    int k=0;\n    scanf(\"%d \\n\",&n);\n    int arr[n][3];\n    \n    for(j=0;j<n;j++)\n    scanf(\"%d %d %d \\n\",&arr[j][0],&arr[j][1],&arr[j][2]);\n    \n    for(i=0;i<n;i++){\n        if(arr[i][0]+arr[i][1]+arr[i][2]>=2)\n        k++;\n    }\n    printf(\"%d\",k);\n    \n    return 0;\n    \n}"}
{"similarity_score": 0.9733542319749217, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "18c9a6760ebb1bb994f3e285e9e7a6c9", "bug_code_uid": "bf33a69859ed76a44b9208f453f4dc93", "src_uid": "22a3561ff70b802f080feaabc4a71298", "apr_id": "9fdd7d5a13a333c47adc942b58a6d8ba", "difficulty": 900, "tags": ["combinatorics", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n#include<stdio.h>\n\nint fact(int n)\n{\n    int i,f=1;\n    for(i=1;i<=n;i++)\n    {\n        f=f*i;\n    }\n    return f;\n}\n\n\nint comb(int n){\n    int temp=fact(n)/(fact(2)*fact(n-2));\n    return temp;\n}\n\nint main()\n{\n   \n    int n;\n    scanf(\"%d\",&n);\n    int charcet[26]={0};\nchar name[21];\n   char me;\nint j;\n    for( j=0;j<n;j++){\n        \n     scanf(\" %s\",name);\n     \n     charcet[name[0]-97]++;\n    \n     \n    }\n\n \n    int pairs=0;\n    int i;\n    for(i=0;i<26;i++){\n        if(charcet[i]>1){\n            \n            pairs+=comb(charcet[i]/2)+comb(charcet[i]-(charcet[i]/2));\n        }\n       \n    }\n   \n    printf(\"%d\\n\",pairs);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint fact(int n)\n{\n    int i,f=1;\n    for(i=1;i<=n;i++)\n    {\n        f=f*i;\n    }\n    return f;\n}\n\n\nint comb(int n){\n    int temp=(n*(n-1))/2;\n    return temp;\n}\n\nint main()\n{\n   \n    int n;\n    scanf(\"%d\",&n);\n    int charcet[26]={0};\nchar name[21];\n   char me;\nint j;\n    for( j=0;j<n;j++){\n        \n     scanf(\" %s\",name);\n     \n     charcet[name[0]-97]++;\n    \n     \n    }\n\n \n    int pairs=0;\n    int i;\n    for(i=0;i<26;i++){\n        if(charcet[i]>1){\n            \n            pairs+=comb(charcet[i]/2)+comb(charcet[i]-(charcet[i]/2));\n        }\n       \n    }\n   \n    printf(\"%d\\n\",pairs);\n    return 0;\n}"}
{"similarity_score": 0.9949409780775716, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7290e614ca8de8842c83821d1847c2d1", "bug_code_uid": "8ab74cad264701bac3e6b1c3f1128137", "src_uid": "39480cdf697fc9743dc9665f989077d7", "apr_id": "3e044f80d4d343d00561d1b3a7eb709c", "difficulty": 1200, "tags": ["dp", "two pointers", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t=0,n=0,i,j;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        int a[n]; int l,p; long sum=0;\n        \n        for(j=0;j<n;j++)\n        scanf(\"%d\",&a[j]);\n        l=a[0]; \n        if(l>0) p=1; \n        else p=-1;\n        \n        for(j=1;j<n;j++)\n        {\n            if((a[j]<0&&p==-1)||(a[j]>0&&p==1)) {\n                if(a[j]>l) l=a[j];\n            }\n            else\n            {\n                sum=sum+l; l=a[j]; p=-p;\n            }\n        }\n        sum=sum+l;\n        printf(\"%ld\\n\",sum);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int t=0,n=0,i,j;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        int a[n]; int l,p; long long sum=0;\n        \n        for(j=0;j<n;j++)\n        scanf(\"%d\",&a[j]);\n        l=a[0]; \n        if(l>0) p=1; \n        else p=-1;\n        \n        for(j=1;j<n;j++)\n        {\n            if((a[j]<0&&p==-1)||(a[j]>0&&p==1)) {\n                if(a[j]>l) l=a[j];\n            }\n            else\n            {\n                sum=sum+l; l=a[j]; p=-p;\n            }\n        }\n        sum=sum+l;\n        printf(\"%lld\\n\",sum);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9688109161793372, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "d43551e117939c13c0b8a5e6b820f7b5", "bug_code_uid": "d2a4cc2e8c4f935a977731aba7cc4d24", "src_uid": "6cc6db6f426bb1bce59f23bfcb762b08", "apr_id": "effd2dc0c0f29bd13c599fc6c93b86cd", "difficulty": 1300, "tags": ["dp", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main(){\n\tlong int after_v = 0;\n\tlong int addition = 0;\n\tlong int before_m = 0;\n\tlong int wows = 0;\n\tchar letter;\n\twhile (1){\n\t\tscanf(\"%c\", &letter);\n\n\t\tif (letter == 'v'){\n\t\t\tafter_v++;\n\t\t}\n\n\t\telse if (letter == 'o'){\n\t\t\twows += before_m * (after_v / 2 + (after_v - 1) / 2);\n\t\t\taddition += (after_v / 2 + (after_v - 1) / 2);\n\t\t\tbefore_m += addition;\n\t\t\tafter_v = 0;\n\t\t}\n\n\t\telse {\n\t\t\twows += before_m * (after_v / 2 + (after_v - 1) / 2);\n\t\t\tprintf(\"%ld\\n\", wows);\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n", "fixed": "#include <stdio.h>\n\n\nint main(){\n\tlong long after_v = 0;\n\tlong long addition = 0;\n\tlong long before_m = 0;\n\tlong long wows = 0;\n\tchar letter;\n\twhile (1){\n\t\tscanf(\"%c\", &letter);\n\n\t\tif (letter == 'v'){\n\t\t\tafter_v++;\n\t\t}\n\n\t\telse if (letter == 'o'){\n\t\t\twows += before_m * (after_v / 2 + (after_v - 1) / 2);\n\t\t\taddition += (after_v / 2 + (after_v - 1) / 2);\n\t\t\tbefore_m += addition;\n\t\t\tafter_v = 0;\n\t\t}\n\n\t\telse {\n\t\t\twows += before_m * (after_v / 2 + (after_v - 1) / 2);\n\t\t\tprintf(\"%I64d\\n\", wows);\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.6786389413988658, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "342d18c53bd4af8c05b403f274d46c03", "bug_code_uid": "dbfa8dd2f2d47d8c20be919a46e04d16", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "68f8b8f11727aebc6e7eec8e412905f9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "MEMORY_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j;\r\n    \r\n    scanf(\"%d\",&t);\r\n    while(t>0)\r\n    {\r\n        int arr[2*n];\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<2*n;i++)\r\n        {\r\n            scanf(\"%d\",&arr[i]);\r\n        }\r\n        \r\n        int count=0;\r\n        i=0;\r\n        while(i<2*n)\r\n        {\r\n            j=i+1;\r\n            if((arr[i]+arr[j])%2==1)\r\n                count++;\r\n            i=i+2;\r\n        }\r\n        if(count==n)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n        \r\n        t--;\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int t,n,i,j;\r\n    \r\n    scanf(\"%d\",&t);\r\n    while(t>0)\r\n    {\r\n        int x;\r\n        scanf(\"%d\",&n);\r\n        int even=0;\r\n        int odd=0;\r\n        for(i=0;i<2*n;i++)\r\n        {\r\n            scanf(\"%d\",&x);\r\n            if(x%2==0)\r\n                even++;\r\n            else\r\n                odd++;\r\n        }\r\n        \r\n        \r\n       if(even==odd)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n        \r\n        t--;\r\n    }\r\n}"}
{"similarity_score": 0.945480631276901, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "038d9c72b4d5bdfeec10ce661664ffb5", "bug_code_uid": "d3723983d5b3ee5eb085b5819f95999d", "src_uid": "65efbc0a1ad82436100eea7a2378d4c2", "apr_id": "bf0c63ab621a106ae1041ab67c15aff1", "difficulty": 1300, "tags": ["dsu", "meet-in-the-middle", "number theory", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tstatic int xx[100], yy[100];\n\tstatic char used[100][100], happyx[100], happyy[100];\n\tint n, m, b, g, i, x, y, yes;\n\n\tscanf(\"%d%d%d\", &n, &m, &b);\n\tfor (i = 0; i < b; i++) {\n\t\tscanf(\"%d\", &xx[i]);\n\t\thappyx[xx[i]] = 1;\n\t}\n\tscanf(\"%d\", &g);\n\tfor (i = 0; i < g; i++) {\n\t\tscanf(\"%d\", &yy[i]);\n\t\thappyy[yy[i]] = 1;\n\t}\n\tx = y = 0;\n\twhile (!used[x][y]) {\n\t\tused[x][y] = 1;\n\t\tif (happyx[x])\n\t\t\thappyy[y] = 1;\n\t\telse if (happyy[y])\n\t\t\thappyx[x] = 1;\n\t\tx = (x + 1) % n, y = (y + 1) % m;\n\t}\n\tyes = 1;\n\tfor (x = 0; x < n; x++)\n\t\tif (!happyx[x]) {\n\t\t\tyes = 0;\n\t\t\tbreak;\n\t\t}\n\tfor (y = 0; y < m; y++)\n\t\tif (!happyy[y]) {\n\t\t\tyes = 0;\n\t\t\tbreak;\n\t\t}\n\tprintf(yes ? \"Yes\\n\" : \"No\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tstatic int xx[100], yy[100];\n\tstatic char happyx[100], happyy[100];\n\tint n, m, b, g, i, x, y, yes;\n\n\tscanf(\"%d%d%d\", &n, &m, &b);\n\tfor (i = 0; i < b; i++) {\n\t\tscanf(\"%d\", &xx[i]);\n\t\thappyx[xx[i]] = 1;\n\t}\n\tscanf(\"%d\", &g);\n\tfor (i = 0; i < g; i++) {\n\t\tscanf(\"%d\", &yy[i]);\n\t\thappyy[yy[i]] = 1;\n\t}\n\tx = y = 0;\n\tfor (i = 0; i < 1e7; i++) {\n\t\tif (happyx[x])\n\t\t\thappyy[y] = 1;\n\t\telse if (happyy[y])\n\t\t\thappyx[x] = 1;\n\t\tx = (x + 1) % n, y = (y + 1) % m;\n\t}\n\tyes = 1;\n\tfor (x = 0; x < n; x++)\n\t\tif (!happyx[x]) {\n\t\t\tyes = 0;\n\t\t\tbreak;\n\t\t}\n\tfor (y = 0; y < m; y++)\n\t\tif (!happyy[y]) {\n\t\t\tyes = 0;\n\t\t\tbreak;\n\t\t}\n\tprintf(yes ? \"Yes\\n\" : \"No\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9426399447131997, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "b27d2a42abae3942ea44748c7b2b0f9a", "bug_code_uid": "ec6fe42d5aeadf0457856b6d521dce5a", "src_uid": "6f5d41346419901c830233b3bf5c9e65", "apr_id": "c6b5b4333c8efc13734d32803b57d190", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    float* input = malloc(n*sizeof(float));\n    for(int i = 0; i < n; ++i){\n            scanf(\"%f\", &input[i]);\n    }\n\n    float* ansver1 = malloc(n*sizeof(float));\n    float* ansver2 = malloc(n*sizeof(float));\n    for(int i=0; i<n; ++i){\n            if(input[i]*input[i]-4*input[i] < 0){\n                printf(\"%c\\n\",'N');\n            }\n            else{\n                ansver1[i] = (input[i]+sqrt(input[i]*input[i]-4*input[i]))/2;\n                ansver2[i] = (input[i]-sqrt(input[i]*input[i]-4*input[i]))/2;\n                printf(\"Y %.10f %.10f \\n\", ansver1[i], ansver2[i]);\n            }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    double* input = malloc(n*sizeof(double));\n    for(int i = 0; i < n; ++i){\n            scanf(\"%lf\", &input[i]);\n    }\n\n    double* ansver1 = malloc(n*sizeof(double));\n    double* ansver2 = malloc(n*sizeof(double));\n    for(int i=0; i<n; ++i){\n            if(input[i]*input[i]-4*input[i] < 0){\n                printf(\"%c\\n\",'N');\n            }\n            else{\n                ansver1[i] = (input[i]+sqrt(input[i]*input[i]-4*input[i]))/2;\n                ansver2[i] = (input[i]-sqrt(input[i]*input[i]-4*input[i]))/2;\n                printf(\"Y %.10f %.10f \\n\", ansver1[i], ansver2[i]);\n            }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.42752293577981654, "equal_cnt": 21, "replace_cnt": 14, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "2e3a96a093e956274a96c1d4f9daa04e", "bug_code_uid": "a077776ae3164ef1005095b5658dffa6", "src_uid": "80cf3ea119fd398e8f003d22a76895a7", "apr_id": "41ad73f2cc1cbfe6fe57646c3c64fd92", "difficulty": 1400, "tags": ["dp", "two pointers", "binary search", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,c,d;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tint swap;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\n\tfor (c = 0 ; c < ( n - 1 ); c++)\n\t{\n\t\tfor (d = 0 ; d < n - c - 1; d++)\n\t\t{\n\t\t\tif (a[d] > a[d+1]) /* For decreasing order use < */\n\t\t\t{\n\t\t\t\tswap       = a[d];\n\t\t\t\ta[d]   = a[d+1];\n\t\t\t\ta[d+1] = swap;\n\t\t\t}\n\t\t}\n\t}\n//\tint p[n];\n\tint max=0,j;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint t=2*a[i];\n//\t\tprintf(\"%d \",a[i]);\n\t\tint c=1;\n\t\tfor(j=i+1;j<n;j++)\n\t\t\tif(a[j]<=t)\n\t\t\t\tc++;\n//\t\tprintf(\"%d\\n\",c);\n\t\tif(max<c)\n\t\t\tmax=c;\n\t}\n\tprintf(\"%d\\n\",n-max);\n\treturn 0;\n}\n\t\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,i,u;\n\tfreopen(\"input.txt\",\"r\",stdin);\n\tfreopen(\"output.txt\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tint count[5001]={0};\n\t//int swap;\n\tint last=0;\n\tfor(i=0;i<n;i++)\n\t{scanf(\"%d\",&u);\n\tcount[u]++;\n\tif(last<u)\n\t{\tlast=u;}\n\t}\n\tint max=0,j;\n\tfor(i=0;i<=last;i++)\n\t{\n\t\tif(count[i]>0){\n\t\tint t=2*i;\n\t//\tprintf(\"%d \",count[i]);\n\t\tint c=count[i];\n\t\tfor(j=i+1;j<=last;j++)\n\t\t{\t\tif(j<=t)\n\t\t\t{c+=count[j];\n\t\t\t}\n\t\t}\n\t//\tprintf(\"%d\\n\",c);\n\t\tif(max<c)\n\t\t{\tmax=c;}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",n-max);\n\treturn 0;\n}\n\t\n\n"}
{"similarity_score": 0.982275586049171, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "301e28ccc9163a1e5e671cc7335b2177", "bug_code_uid": "f5814cb3783f827513c32da7a3e99ccf", "src_uid": "7f9853be7ac857bb3c4eb17e554ad3f1", "apr_id": "30256428dba0e91d584d9e3463ffbcd2", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main (void)\r\n{\r\n    int n, total = 0, array[50], count_arr = 0;\r\n    scanf(\"%d\", &n);\r\n    char alfabeto[27], nome[27];\r\n    for (int i = n; i > 0; i--)\r\n    {\r\n        scanf(\"%s\", alfabeto);\r\n        scanf(\"%s\", nome);\r\n        count_arr = 0;\r\n        for (int j = 0; j < strlen(nome); j++)\r\n        {\r\n            for (int g = 0; g < strlen(alfabeto); g++)\r\n            {\r\n                if (nome[j] == alfabeto[g])\r\n                {\r\n                    array[count_arr] = g+1;\r\n                    count_arr++;\r\n                }\r\n            }\r\n        }\r\n        total = 0;\r\n        for (int j = 0; j < count_arr-1; j++)\r\n        {\r\n            int sub;\r\n            sub = array[j+1] - array[j];\r\n            if (sub < 0) sub*=-1;\r\n            total+=sub;\r\n        }\r\n        printf(\"result: %d\\n\", total);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main (void)\r\n{\r\n    int n, total = 0, array[50], count_arr = 0;\r\n    scanf(\"%d\", &n);\r\n    char alfabeto[60], nome[60];\r\n    for (int i = n; i > 0; i--)\r\n    {\r\n        scanf(\"%s\", alfabeto);\r\n        scanf(\"%s\", nome);\r\n        count_arr = 0;\r\n        for (int j = 0; j < strlen(nome); j++)\r\n        {\r\n            for (int g = 0; g < strlen(alfabeto); g++)\r\n            {\r\n                if (nome[j] == alfabeto[g])\r\n                {\r\n                    array[count_arr] = g+1;\r\n                    count_arr++;\r\n                }\r\n            }\r\n        }\r\n        total = 0;\r\n        for (int j = 0; j < count_arr-1; j++)\r\n        {\r\n            int sub;\r\n            sub = array[j+1] - array[j];\r\n            if (sub < 0) sub*=-1;\r\n            total+=sub;\r\n        }\r\n        printf(\"%d\\n\", total);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.7708470124753776, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "f54a92eac9bf177f0d3927e7378fbc79", "bug_code_uid": "486ad3bce55c4965c9d10f1aff23ee39", "src_uid": "84c0f17a45826a6e43d1f4717e62c194", "apr_id": "d4652c0f788f465b7bbe80c76db8654d", "difficulty": 1600, "tags": ["brute force", "graphs", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#define MIN(a,b) (((a)<(b))?(a):(b))\r\n\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    char a[1000];\r\n    char b[1000];\r\n    int n;\r\n    int j;\r\n\r\n    for(j=0;j<t;j++)\r\n    {   scanf(\"%d%s%s\",&n,a,b);\r\n            int k=0,p=0,q=0;\r\n                int res=n+1;\r\n\r\n        for(int i=0;i<n;i++){\r\n            if(a[i]=='1') k++;\r\n\t\t\tif(b[i]=='1') p++;\r\n\t\t\tif(a[i]!=b[i]) q++;\r\n            }\r\n            if(k==p)\r\n                res=q;\r\n            if (p==(n-k+1))\r\n                res=MIN(res,n-q);\r\n            if ((p!=(n-k+1))&&(k!=p))\r\n                printf(\"%d \\n\",-1);\r\n                else\r\n                printf(\"%d\\n\",res);\r\n\r\n    }\r\n}\r\n", "fixed": "\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#define MIN(a,b) (((a)<(b))?(a):(b))\r\n\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n    int n;\r\n    int j;\r\n\r\n    for(j=0;j<t;j++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n\r\n            char a[n+1];\r\n                char b[n+2];\r\n        scanf(\"%s%s\",a,b);\r\n            int k=0,p=0,q=0;\r\n                int res=n+1;\r\n\r\n\r\n        for(int i=0;i<n;i++){\r\n            if(a[i]=='1') k++;\r\n\t\t\tif(b[i]=='1') p++;\r\n\t\t\tif(a[i]!=b[i]) q++;\r\n            }\r\n            if(k==p)\r\n                res=q;\r\n            if (p==(n-k+1))\r\n                res=MIN(res,n-q);\r\n            if ((p!=(n-k+1))&&(k!=p))\r\n                printf(\"%d \\n\",-1);\r\n                else\r\n                printf(\"%d\\n\",res);\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9589905362776026, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "be701774687cb439ac3b0e4c53a0b988", "bug_code_uid": "01bad4ab734d45b14d3f47d85d8833b2", "src_uid": "7b788c660fb8ca703af0030f4c84ce96", "apr_id": "f884f55868623c3f11cdca17050c228e", "difficulty": 1600, "tags": ["data structures", "binary search", "sortings", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define ll long long int\nll type1[100000+5],type2[100000+5];\nll max(ll a, ll b){\n    return  a > b? a : b ;\n}\nint main(){\n\n\t\n\n\tll n,q,max_=-1,i;\n    \n\t\n\n\tscanf(\"%lld\",&n);\n\tll data[n+1];\n\t\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lld\",data+i);\n\t}\n\n    \n\tscanf(\"%lld\",&q);\n\n\n\tll type,pos,x;\n\tfor(i=1;i<=q;i++){\n\t\tscanf(\"%lld\",&type);\n\t\tif(type==1){\n\t\t\tscanf(\"%lld%lld\",&pos,&x);\n\t\t\tdata[pos]=x;\n\t\t\ttype1[pos]=i;\n\t\t\t\n\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%lld\",&x);\n\t\t\ttype2[i]=x;\n\t\t\tif(x>max_)max_=x;\n\t\t}\n\n\t}\n \n\tfor(i=q-1;i>=1;i--){\n\t\ttype2[i]=max(type2[i],type2[i+1]);\n\t}\n   \n\n\tfor(i=1;i<=n;i++){\n\t\t\n\t\t\tdata[i]=max(data[i],type2[ type1[i] ] );\n\t\t\n\t}\n\n\tfor(i=1;i<=n;i++){\n\t\tprintf(\"%lld\",data[i]);\n\t\tif(i==n) break;\n\t\tprintf(\" \");\n\t}\n\tprintf(\"\\n\");\n\n\n}", "fixed": "#include<stdio.h>\n#include<string.h>\n#define ll long long int\nll type1[200000+5],type2[200000+5];\nll max(ll a, ll b){\n    return  a > b? a : b ;\n}\nint main(){\n\n\t\n\n\tll n,q,max_=-1,i;\n    \n\t\n\n\tscanf(\"%lld\",&n);\n\tll data[n+1];\n\t\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%lld\",data+i);\n\t}\n\n    \n\tscanf(\"%lld\",&q);\n\n\n\tll type,pos,x;\n\tfor(i=1;i<=q;i++){\n\t\tscanf(\"%lld\",&type);\n\t\tif(type==1){\n\t\t\tscanf(\"%lld%lld\",&pos,&x);\n\t\t\tdata[pos]=x;\n\t\t\ttype1[pos]=i;\n\t\t\t\n\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%lld\",&x);\n\t\t\ttype2[i]=x;\n\t\t\tif(x>max_)max_=x;\n\t\t}\n\n\t}\n \n\tfor(i=q-1;i>=1;i--){\n\t\ttype2[i]=max(type2[i],type2[i+1]);\n\t}\n   \n\n\tfor(i=1;i<=n;i++){\n\t\tif(type1[i]==0){\n\t\t\tdata[i]=max(data[i],max_);\n\t\t}\n\t\telse{\n\t\t\tdata[i]=max(data[i],type2[ type1[i] ] );\n\t\t}\n\t}\n\n\tfor(i=1;i<=n;i++){\n\t\tprintf( \"%lld\",data[i] );\n\t\tif(i==n) break;\n\t\tprintf(\" \");\n\t}\n\tprintf(\"\\n\");\n\n\n}"}
{"similarity_score": 0.5407586763518967, "equal_cnt": 26, "replace_cnt": 16, "delete_cnt": 3, "insert_cnt": 7, "fix_ops_cnt": 26, "lang": "GNU C", "fix_code_uid": "e204f83bb764c1c2f19dc09a894797fc", "bug_code_uid": "396572bff46991ff66e475d936891cbb", "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa", "apr_id": "425ee56af08d2be495337b4a14528888", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,a[100000],i,p=0,q=0,r=0,max;\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a[i]);\n\n    }\n    for(i=0; i<n; i++)\n    {\n        if(a[i]==1)\n            p++;\n        else if(a[i]==2)\n            q++;\n        else r++;\n\n    }\n    if(p>q)\n    {\n        if(p>r)\n        {\n            max=p;\n        }\n        else\n        {\n            max=r;\n        }\n    }\n    else\n    {\n        if(q>r)\n        {\n            max=q;\n        }\n        else\n        {\n            max=r;\n        }\n    }\nprintf(\"%d\",n-max);}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n,a,i,ara[1000005],max;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&ara[i]);\n    }\n    int count1=0,count2=0,count3=0;\n    for(i=0;i<n;i++){\n        if(ara[i]==1){\n            count1++;\n        }\n        else if(ara[i]==2){\n            count2++;\n        }\n        else{\n            count3++;\n        }\n    }\n    if(count1>count2){\n        if(count1>count3){\n            max=count1;\n        }\n        else{\n            max=count3;\n        }\n    }\n    else{\n        if(count2>count3){\n            max=count2;\n        }\n        else{\n            max=count3;\n        }\n    }\n    printf(\"%d\\n\",n-max);\n\n    return 0;\n}"}
{"similarity_score": 0.9810366624525917, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "237ad5542522e0d253e14bee3cf4ae4f", "bug_code_uid": "2cd8948c22d8883a247a64cbff46e233", "src_uid": "ccf7aba6ca9bbf39a5ec8a20ec018825", "apr_id": "65f1b8cbec4a4a141e56d0c75cbbf289", "difficulty": 800, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,T,z=0;\r\n\tint a[100100];\r\n\tscanf(\"%d %d\",&n,&T);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tif(a[i]==1) z++;\r\n\t}\r\n\twhile(T--){\r\n\t\tint t,x;\r\n\t\tscanf(\"%d %d\",&t,&x);\r\n\t\tif(t==1){\r\n\t\t\tif(a[x]==1){\r\n\t\t\t\tz--;\r\n\t\t\t\ta[x]=0;\r\n\t\t\t}\r\n\t\t\tif(a[x]==0){\r\n\t\t\t\tz++;\r\n\t\t\t\ta[x]=1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(t==2){\r\n\t\t\tif(x<=z) printf(\"1\\n\");\r\n\t\t\telse printf(\"0\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,T,z=0;\r\n\tint a[100100];\r\n\tscanf(\"%d %d\",&n,&T);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tif(a[i]==1) z++;\r\n\t}\r\n\twhile(T--){\r\n\t\tint t,x;\r\n\t\tscanf(\"%d %d\",&t,&x);\r\n\t\tif(t==1){\r\n\t\t\tif(a[x]==1){\r\n\t\t\t\tz--;\r\n\t\t\t\ta[x]=0;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tz++;\r\n\t\t\t\ta[x]=1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(t==2){\r\n\t\t\tif(x<=z) printf(\"1\\n\");\r\n\t\t\telse printf(\"0\\n\");\r\n\t\t}\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.9865470852017937, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "5c25c81f9fbd868684600e08b565f773", "bug_code_uid": "cb38cb643d1b4bb22c90770b8f8bd317", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "b617252e8ecb662a2ba91dadf9aca498", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n;\n    scanf(\"%d\"&n\n    i=1;\n    for(j=1;j<n,j++)\n    {\n        i=i+j;\n        if(i>n)\n        {\n        i=i-n;\n        }\n        printf(\"%d\",i);\n        printf(\" \");\n    }\n    \n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,n;\n    scanf(\"%d\",&n);\n    i=1;\n    for(j=1;j<n;j++)\n    {\n        i=i+j;\n        if(i>n)\n       {\n        i=i-n;\n        }\n        printf(\"%d\",i);\n        printf(\" \");\n    }\n    \n}"}
{"similarity_score": 0.975609756097561, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c74a4504524b5e13f9e6df020a040093", "bug_code_uid": "4184b94280eb9d478a63be06003884fa", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "0588a7b2eff9efe180d442edbc720a21", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nusing namespace std;\n\nint min(int a,int b){\n\tif(a>=b)return b;\n\treturn a;\n}\nint max(int a,int b){\n\tif(a>=b)return a;\n\treturn b;\n}\n\nint main()\n{\n\tint t;\n\t// cin>>t;\n\tscanf(\"%d\", &t);\n\tfor(int i =0;i<t;i++)\n\t{\n\t\tint n;\n\t\t// cin>>n;\n\t\tscanf(\"%d\", &n);\n\t\tint a[n];\n\t\tint mn = 1,minind = -1;\n\t\tint mx = n, maxind=-1;\n\t\tfor(int j = 0;j<n;j++)\n\t\t{\n\t\t\t// cin>>a[j];\n\t\t\tscanf(\"%d\", a+j);\n\t\t\tif(a[j] == mn){minind = j;}\n\t\t\tif(a[j] == mx){maxind = j;}\n\t\t}\n\t\tint case1 = max(minind, maxind) + 1;\n\t\tint case2 = n - min(maxind, minind);\n\t\tint case3 = min(minind, maxind) + 1 + n - max(minind, maxind);\n\t\tprintf(\"%d\\n\",min(min(case1, case2),case3));\n\n\t}\n\n}\n", "fixed": "#include<stdio.h>\n\n\nint min(int a,int b){\n\tif(a>=b)return b;\n\treturn a;\n}\nint max(int a,int b){\n\tif(a>=b)return a;\n\treturn b;\n}\n\nint main()\n{\n\tint t;\n\t// cin>>t;\n\tscanf(\"%d\", &t);\n\tfor(int i =0;i<t;i++)\n\t{\n\t\tint n;\n\t\t// cin>>n;\n\t\tscanf(\"%d\", &n);\n\t\tint a[n];\n\t\tint mn = 1,minind = -1;\n\t\tint mx = n, maxind=-1;\n\t\tfor(int j = 0;j<n;j++)\n\t\t{\n\t\t\t// cin>>a[j];\n\t\t\tscanf(\"%d\", a+j);\n\t\t\tif(a[j] == mn){minind = j;}\n\t\t\tif(a[j] == mx){maxind = j;}\n\t\t}\n\t\tint case1 = max(minind, maxind) + 1;\n\t\tint case2 = n - min(maxind, minind);\n\t\tint case3 = min(minind, maxind) + 1 + n - max(minind, maxind);\n\t\tprintf(\"%d\\n\",min(min(case1, case2),case3));\n\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.2632696390658174, "equal_cnt": 20, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "260371703e21bae546c88c5bf947149b", "bug_code_uid": "d31d9ed14c435c56056ee1ae407fa676", "src_uid": "cf3cfcae029a6997ee62701eda959a60", "apr_id": "ab456c62b2cbd1b0eac73c6ccfd718bb", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,i,b,c,d=0,max=0,cnt=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&b);\n\t\tint a[b];\n\t\tfor(c=0;c<b;c++){\n\t\t\tscanf(\"%d\",&a[c]);\n\t\t\tif(a[c]>max){\n\t\t\t\tmax=a[c];\n\t\t\t}\n\t\t}\n\t\tfor(int p;p<b*b*b;p++){\n\t\t\tfor(c=0;c<b;c++){\n\t\t\t\tif(a[c]<max){\n\t\t\t\t\ta[c]++;\n\t\t\t\t\td++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d>0){\n\t\t\t\tcnt++;\n\t\t\t\td=0;\n\t\t\t}else{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",cnt);\n\t\tcnt=0;\n\t\tmax=0;\n\t}\n\treturn 0;\n}\n\t \t  \t \t\t  \t \t  \t  \t\t\t\t\t\t\t\t\t", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n\nint main()\n{\n\tint t = 0;\n\tscanf(\"%d\", &t);\n\tfor (int i = 0; i < t; i++) {\n\t\tint n = 0;\n\t\tscanf(\"%d\", &n);\n\t\tint arr[50] = { 0 };\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tscanf(\"%d\", &arr[j]);\n\t\t}\n\t\tint maxArr = arr[0], minArr = arr[0];\n\t\tfor (int j = 1; j < n; j++) {\n\t\t\tif (arr[j] > maxArr) maxArr = arr[j];\n\t\t\telse if (arr[j] < minArr) minArr = arr[j];\n\t\t}\n\t\tprintf(\"%d\\n\", maxArr - minArr);\n\t}\n\n\treturn 0;\n}\n  \t\t \t     \t \t\t   \t \t\t\t  \t   \t"}
{"similarity_score": 0.7042431918936035, "equal_cnt": 15, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "068b181598926bbdf52d7072ab5857db", "bug_code_uid": "5c8d2238253a1cd3a076b2a69fcdd94e", "src_uid": "d154c3df1947f52ec370c6ad2771eb47", "apr_id": "e5ef271d3a3025ac56ae68a19cbd922c", "difficulty": 2000, "tags": ["dp", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint choco(int n,int m,int k);\nint min(int a,int b)\n{\n    if(a<b)\n        return a;\n    else\n        return b;\n}\nint main()\n{   int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n    int n,m,k,cost;\n    scanf(\"%d%d%d\",&n,&m,&k);\n    cost=choco(n,m,k);\n    printf(\"%d\\n\",cost);\n    }\n    return 0;\n\n}\nint choco(int n,int m,int k)\n{   int i,j,cost;\n    if(k>n*m)\n         return 1000000009;\n    if(n*m==k||k==0)\n         return 0;\n    else\n    {a\n       cost=1000000009;\n       for(i=1;i<n;i++)\n            for(j=0;j<=k;j++)\n                cost=min( cost,choco(i,m,j)+choco(n-i,m,k-j)+m*m );\n       for(i=1;i<m;i++)\n            for(j=0;j<=k;j++)\n                cost=min( cost,choco(n,i,j)+choco(n,m-i,k-j)+n*n );\n    return cost;\n\n    }\n}\n", "fixed": "#include<stdio.h>\nint dp[100][100][100];\nint choco(int n,int m,int k);\nint min(int a,int b)\n{\n    if(a<b)\n        return a;\n    else\n        return b;\n}\nint main()\n{   int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n    int n,m,k,cost;\n    scanf(\"%d%d%d\",&n,&m,&k);\n    cost=choco(n,m,k);\n    printf(\"%d\\n\",cost);\n    }\n    return 0;\n\n}\nint choco(int n,int m,int k)\n{\n       int i,j,cost;\n       cost=1000000009;\n       if(k>n*m)\n         return 1000000009;\n       if(n*m==k || k==0|| dp[n][m][k]!=0)\n         return dp[n][m][k];\n       for(i=1;i<=n-i;i++)\n            for(j=0;j<=k;j++)\n                cost=min( cost,choco(i,m,j)+choco(n-i,m,k-j)+m*m );\n       for(i=1;i<=m-i;i++)\n            for(j=0;j<=k;j++)\n                cost=min( cost,choco(n,i,j)+choco(n,m-i,k-j)+n*n );\n       dp[n][m][k]=cost;\n\n    return cost;\n\n}\n"}
{"similarity_score": 0.9893778452200304, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "7777feecc0dd9c93318fa4b0fc3724d2", "bug_code_uid": "ad7bfe72f7f4324393653d9a0370bb24", "src_uid": "17cf2d6f59773925b228188b5a47b710", "apr_id": "d4f9d3302fc4f45ce668ad98b1b85fed", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,i=0,j=0,k,v=0,n,g=0,h=0;\n    scanf(\"%d\",&n);\n    while(v<n)\n        {\n    scanf(\"%d %d %d %d %d\",&a,&b,&c,&d,&k);\n    if(a==c)\n        i=1;\n    else if(a<c)\n            i=1;\n    else\n    {\n    while(a>g)\n    {\n        g=g+c;\n        i++;\n    }\n    }\nif(b==d)\n        j=1;\nelse if(b<d)\n    j=1;\n        else\n        {\n    while(b>h)\n    {\n        h=h+d;\n        j++;\n    }\n        }\n    if((i+j)==k)\n        printf(\"%d %d\\n\",i,j);\n    if((i+j)>k)\n        printf(\"%d\\n\",-1);\n    if((i+j)<k)\n    {\n        i=k-j;\n        printf(\"%d %d\\n\",i,j);\n\n    }\n    v++;\n    i=0;\n    j=0;\n        }\n        return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,d,i=0,j=0,k,v=0,n,g=0,h=0;\n    scanf(\"%d\",&n);\n    while(v<n)\n        {\n    scanf(\"%d %d %d %d %d\",&a,&b,&c,&d,&k);\n    if(a==c)\n        i=1;\n    else if(a<c)\n            i=1;\n    else\n    {\n    while(a>g)\n    {\n        g=g+c;\n        i++;\n    }\n    }\nif(b==d)\n        j=1;\nelse if(b<d)\n    j=1;\n        else\n        {\n    while(b>h)\n    {\n        h=h+d;\n        j++;\n    }\n        }\n    if((i+j)==k)\n        printf(\"%d %d\\n\",i,j);\n    if((i+j)>k)\n        printf(\"%d\\n\",-1);\n    if((i+j)<k)\n    {\n        i=k-j;\n        printf(\"%d %d\\n\",i,j);\n\n    }\n    v++;\n    i=0;\n    j=0;\n    g=0;\nh=0;\n        }\n        return 0;\n}\n"}
{"similarity_score": 0.40942562592047127, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "8eaeecf96cf283f4aaee13f66701397d", "bug_code_uid": "d710810535b0c579aa361676f2bd5859", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "36eb030813f032f522b7ccd576c9128d", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int a[1002], n, i, s1 = 0, s2 = 0, j, t;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(i = 0; i <= n - 2; i++)\n    {\n        for(j = 0; j <= n - i - 2; j++)\n        {\n            if(a[j] < a[j+1])\n            {\n                t = a[j];\n                a[j] = a[j+1];\n                a[j+1] = t;\n            }\n        }\n    }\n    for(i = 0; i < n; i++)\n    {\n        if(i%2==0)\n        {\n            s1 = s1 + a[i];\n        }\n        else\n            s2 = s2 + a[i];\n    }\n    printf(\"%d %d\\n\", s1, s2);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int a[1002], n, i, s1 = 0, s2 = 0, j, k = 1;\n    scanf(\"%d\", &n);\n    for(i = 0; i < n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(i = 0,j=n-1; i<=j; )\n    {\n        if(k%2==1)\n        {\n            if(a[i]>a[j])\n            {\n                s1 = s1 + a[i];\n                i++;\n            }\n            else\n            {\n                s1 = s1 + a[j];\n                j--;\n            }\n        }\n        else\n        {\n            if(a[i]>a[j])\n            {\n                s2 = s2 + a[i];\n                i++;\n            }\n            else\n            {\n                s2 = s2 + a[j];\n                j--;\n            }\n        }\n        k++;\n    }\n    printf(\"%d %d\\n\", s1, s2);\n    return 0;\n}\n"}
{"similarity_score": 0.9982300884955753, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a69b6385b36234272f96efba2c352706", "bug_code_uid": "b62fa49044b7e0422b5ebca692007a15", "src_uid": "2deda3a05740e1184735bf437e3850a8", "apr_id": "4f2c7b89d71dadd479e3ba7db35406fd", "difficulty": 1200, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long y,k,n,i,j;\n    scanf(\"%I64d%I64d%I64d\",&y,&k,&n);\n    i=k-(y%k);\n\n    if ((y+i)>=n){\n        printf(\"-1\");\n    }else {\n        for (j=i;(j+y)<=n;j+=k){\n            printf(\"%I64d \",j);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    long long y,k,n,i,j;\n    scanf(\"%I64d%I64d%I64d\",&y,&k,&n);\n    i=k-(y%k);\n\n    if ((y+i)>n){\n        printf(\"-1\");\n    }else {\n        for (j=i;(j+y)<=n;j+=k){\n            printf(\"%I64d \",j);\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9889958734525447, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4d08d1d6e84f3a016bfd37932f894fb5", "bug_code_uid": "cb68cdef8fa023ce070ff470ece2d263", "src_uid": "5b1f33228a58d9e14bc9479767532c25", "apr_id": "2df82b4a51cd51b56e2e8dd42f2eadef", "difficulty": 1100, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--){\n        long long int hc, dc, hm, dm, k, w, a;\n        int flag = 1;\n        scanf(\"%lld%lld%lld%lld%lld%lld%lld\", &hc, &dc, &hm, &dm, &k, &w, &a);\n        for(int i = 0; i <= k; i++){\n            long long int hc1 = hc, dc1 = dc;\n            hc1 += i * a;\n            dc1 += (k - i) * w;\n            // printf(\"%lld\\n\",dc);\n            // printf(\"%f %f\\n\", ceil((double)hc/dm), ceil((double)hm/dc));\n            if (ceil((double)hc/dm) >= ceil((double)hm/dc)){\n                flag = 0;\n                printf(\"YES\\n\");\n                break;\n            }\n        }\n        if (flag)\n            printf(\"NO\\n\");\n    } \n}", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while(t--){\n        long long int hc, dc, hm, dm, k, w, a;\n        int flag = 1;\n        scanf(\"%lld%lld%lld%lld%lld%lld%lld\", &hc, &dc, &hm, &dm, &k, &w, &a);\n        for(int i = 0; i <= k; i++){\n            long long int hc1 = hc, dc1 = dc;\n            hc1 += i * a;\n            dc1 += (k - i) * w;\n            // printf(\"%lld %lld\\n\",hc1,dc1);\n            // printf(\"%f %f\\n\", ceil((double)hc/dm), ceil((double)hm/dc));\n            if (ceil((double)hc1/dm) >= ceil((double)hm/dc1)){\n                flag = 0;\n                printf(\"YES\\n\");\n                break;\n            }\n        }\n        if (flag)\n            printf(\"NO\\n\");\n    } \n}"}
{"similarity_score": 0.995857497928749, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "3ef6355f3ae9a8850de10753545cee1d", "bug_code_uid": "2cf495093cbaa10a066a297b6fab95f1", "src_uid": "7d1e8769a6b1d5c6680ab530d19e7fa4", "apr_id": "eefc894973352e2a4dbe16eb85ab19fa", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,t,c,i,output=0;\n    scanf(\"%d %d %d\",&n,&t,&c);\n    int array[n+2];\n    int prisoner[n];\n    array[0]=-1;\n    int j=1;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&prisoner[i]);\n        if(prisoner[i]> t)\n         {\n            array[j]=i;\n            j++;\n            //flag=-1;\n         }\n             \n     }\n     array[j]=n;\n     \n     for(i=1;i<=j;i++)\n     {\n       if((array[i]-array[i-1]-1)-c+1)\n        {output=output+(array[i]-array[i-1]-1)-c+1};\n     }\n     /*else\n        output=n-c+1;*/\n     printf(\"%d\",output);\n     //getch();\n     return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,t,c,i,output=0;\n    scanf(\"%d %d %d\",&n,&t,&c);\n    int array[n+2];\n    int prisoner[n];\n    array[0]=-1;\n    int j=1;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&prisoner[i]);\n        if(prisoner[i]> t)\n         {\n            array[j]=i;\n            j++;\n            //flag=-1;\n         }\n             \n     }\n     array[j]=n;\n     \n     for(i=1;i<=j;i++)\n     {\n       if((array[i]-array[i-1]-1)-c+1 >0)\n        {output=output+(array[i]-array[i-1]-1)-c+1;}\n     }\n     /*else\n        output=n-c+1;*/\n     printf(\"%d\",output);\n     //getch();\n     return 0;\n}\n"}
{"similarity_score": 0.8943985307621671, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "7cea5c2cdfdf76ffd2ab8c0ba5d2d30b", "bug_code_uid": "c721a18b1777fbab5393acd34243a9db", "src_uid": "3e27f1c06a263760f5b53c3afe4bf7ee", "apr_id": "c27839fab28df10fc29684a7bf18e340", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    long long  n,i,c;\r\n    scanf(\"%lli\",&n);\r\n    long long a[n];\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%lli\",&a[i]);\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {\r\n       if(a[i]<=12 && a[i]>6)\r\n       {\r\n           printf(\"30\\n\");\r\n       }\r\n       else if(a[i]<=6)\r\n       {\r\n           printf(\"15\\n\");\r\n       }\r\n       else if(a[i]>12 && a[i]%2==0)\r\n       {\r\n           printf(\"%lli\\n\",(a[i]*5)/2);\r\n       }\r\n        else if(a[i]>12 && a[i]%2!=0)\r\n        {\r\n            printf(\"%lli\\n\",((a[i]+1)*5)/2);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n        ", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    long long  n,i,c;\r\n    scanf(\"%lli\",&n);\r\n    long long a[n];\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%lli\",&a[i]);\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {\r\n     \r\n       if(a[i]<=6)\r\n       {\r\n           printf(\"15\\n\");\r\n       }\r\n       else if(a[i]%2==0)\r\n       {\r\n           printf(\"%lli\\n\",(a[i]*5)/2);\r\n       }\r\n        else if(a[i]%2!=0)\r\n        {\r\n            printf(\"%lli\\n\",((a[i]+1)*5)/2);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n        "}
{"similarity_score": 0.12404580152671756, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "702b6b66981ac060dfd22641ff194bf8", "bug_code_uid": "02e8162da1af0bde61efe8625e067a36", "src_uid": "5b95da35a4c1251f5376cf3bacc1a549", "apr_id": "d96a952a315307fb5170a12d115a767f", "difficulty": 1100, "tags": ["data structures", "greedy", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef struct M\r\n{\r\n\tint a;\r\n\tint rate;\r\n}p;\r\nint cmp(const void *a,const void *b){\r\n\tp *aa = (p *)a;\r\n\tp *bb = (p *)b;\r\n\tif(aa->a > bb->a) return 1;\r\n\telse if(aa->a == bb->a && aa->rate < bb->rate) return 1;\r\n\telse return 0;\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n,m,cnt = 0;\r\n\t\tint sum[m+10] = {0},b[m+10];\r\n\t\tscanf(\"%d %d\",&n,&m);\r\n\t\tp a[m+10];\r\n\t\tfor(int i = 0;i < m;i++){\r\n\t\t\tscanf(\"%d\",&a[i].a);\r\n\t\t\ta[i].rate = i;\r\n\t\t}\r\n\t\tqsort(a,m,sizeof(a[0]),cmp);\r\n\t\tfor(int j = 0;j < m;j++){\r\n\t\t\tb[a[j].rate] = j;\r\n\t\t}\r\n\t\tfor(int j = 0;j < m;j++){\r\n\t\t\tfor(int k = b[j]+1;k < m;k++) sum[k]++;\r\n\t\t\tif(sum[b[j]]) cnt += sum[b[j]];\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",cnt);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n\tint t;scanf(\"%d\",&t);\r\n\tint a[310];\r\n\twhile(t--){\r\n\t\tint n,m,sum = 0;\r\n\t\tscanf(\"%d %d\",&n,&m);\r\n\t\tfor(int i = 0;i < m;i++) scanf(\"%d\",&a[i]);\r\n\t\tfor(int i = 0;i < m;i++){\r\n\t\t\tfor(int j = i+1;j < m;j++)\r\n\t\t\t if(a[i] < a[j]) sum++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",sum);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.4858490566037736, "equal_cnt": 14, "replace_cnt": 11, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "75b1925f0d2d20767dbcd76ec113f287", "bug_code_uid": "f96aadfe6f41bea615230562c48f639d", "src_uid": "c37604d5d833a567ff284d7ce5eda059", "apr_id": "910a276c89ac5c137813b1e6582d440c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t,k,j=0;\n    int c[1000],s[1000];\n    scanf(\"%d\",&t);\n    for(int i=1;i<=1000;i++)\n    {\n        if(i%3!=0&&i%10!=3)\n        {\n            j++;\n            c[j]=i;\n        }\n    }\n    for(int i=1;i<=t;i++)\n    {\n        scanf(\"%d\",&s[i]);\n        if(s[i]<=s[i-1])\n            s[i]=c[s[i]];\n        else if(s[i]%3!=0&&s[i]%10!=3)\n            printf(\"%d\\n\",s[i]);\n        else\n            printf(\"%d\\n\",c[s[i]]);\n    }\n        return 0;\n}\n\t\t \t\t\t\t  \t \t \t \t\t\t  \t\t \t \t\t\t\t\t\t", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,i,j,x,y=1;\n    scanf(\"%d\",&t);\n    int s[10000]={0,1,2,4};\n        for(i=0;i<10000;i++)\n        {\n            if(i%3!=0&&i%10!=3)\n        {s[y]=i;\n         y++;}\n         }\n \n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&x);\n        printf(\"%d\\n\",s[x]);\n    }\n    \n}\n \t\t   \t    \t\t\t    \t\t \t  \t\t\t\t\t\t\t"}
{"similarity_score": 0.9933333333333333, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "20269310f7df30afee303e1d061eb56f", "bug_code_uid": "9c60d7760a33f0a823c31087f42cbef6", "src_uid": "71be4cccd3b8c494ad7cc2d8a00cf5ed", "apr_id": "478ac1cb44386ef33bea5746ac22afca", "difficulty": 1000, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,p;\n    scanf(\"%d%d\",&n,&p);\n    int i,s,d;\n    int best=1,lol=p;\n    for(i=0;i<n;i++){\n        scanf(\"%d%d\",&s,&d);\n        while(s<p){\n            s=s+d;\n        }\n        if(s==p){\n            printf(\"%d\\n\",i+1);\n            return 0;\n        }\n        //printf(\"%d\\t%d\\n\",lol,s-p);\n        if((s-p)<lol){\n            lol=s-p;\n            best= i+1;\n        }\n    }\n    printf(\"%d\\n\",best);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,p;\n    scanf(\"%d%d\",&n,&p);\n    int i,s,d;\n    int best=1,lol=99999;\n    for(i=0;i<n;i++){\n        scanf(\"%d%d\",&s,&d);\n        while(s<p){\n            s=s+d;\n        }\n        if(s==p){\n            printf(\"%d\\n\",i+1);\n            return 0;\n        }\n        //printf(\"%d\\t%d\\n\",lol,s-p);\n        if((s-p)<lol){\n            lol=s-p;\n            best= i+1;\n        }\n    }\n    printf(\"%d\\n\",best);\n    return 0;\n}"}
{"similarity_score": 0.9977011494252873, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "b35e40168a83c2b69727bd7a1cc559c4", "bug_code_uid": "ea857dbda6502c771586a448b99fad26", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "d0b6872c355c494352859b8181cbb2be", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n  char entr[10];\n  int n,x=0;\n  scanf(\"%d\",&n);\n  while(n--)\n    {\n      scanf(\" %s\",enter);\n      if(enter[1]=='+')\n    x++;\n      else\n    x--;\n    }\n  printf(\"%d\\n\",x);\n  return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n  char enter[10];\n  int n,x=0;\n  scanf(\"%d\",&n);\n  while(n--)\n    {\n      scanf(\" %s\",enter);\n      if(enter[1]=='+')\n    x++;\n      else\n    x--;\n    }\n  printf(\"%d\\n\",x);\n  return 0;\n}"}
{"similarity_score": 0.6548042704626335, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9ec7466b7896b4a2864e5a950e5105cb", "bug_code_uid": "2f033d5b949284d21bc776a5fff57582", "src_uid": "293f9b996eee9f76d4bfdeda85685baa", "apr_id": "d432192e7e70b754f1b691a14d2eb4d3", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n\tlong long int p,a,b,c; \r\n\tint t,k;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tscanf(\"%lld%lld%lld%lld\",&p,&a,&b,&c);\r\n\t\tlong long int lap_time[3]={a,b,c},least=1e18;\r\n\t\tfor(int i=0;i<3;i++) {\r\n\t\t\tfor(k=1;lap_time[i]*k<p;++k) {}\r\n\t\t\tlap_time[i]*=k;\r\n\t\t\tlap_time[i]-=p;\r\n\t\t\tif(lap_time[i]<least)\r\n\t\t\t\tleast=lap_time[i];\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",least);\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main() {\r\n\tlong long int p,a,b,c; \r\n\tint t,k;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--) {\r\n\t\tscanf(\"%lld%lld%lld%lld\",&p,&a,&b,&c);\r\n\t\tlong long int lap[]={a,b,c},least=1e18;\r\n\t\tfor(int i=0;i<3;i++) {\r\n\t\t\tif(lap[i]<p) {\r\n\t\t\t\tif(p%lap[i]==0) {\r\n\t\t\t\t\tleast=0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlap[i]=(lap[i]-(p%lap[i]));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tlap[i]-=p;\r\n\t\t\tif(lap[i]<least)\r\n\t\t\t\tleast=lap[i];\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",least);\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.9806763285024155, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "3d55c41627f567fe3b11aeb0603d31b1", "bug_code_uid": "4454bf584a3412c41fd429093d4ab855", "src_uid": "02a9081aed29ea92aae13950a6d48325", "apr_id": "9e5c74688d11f50cac5b10e2dfcf8497", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\n//void fun(long long int a,char ara[][301],long long int i,long long int j)\n//{\n//\tlong long int k,l,m,n;\n//\ti=0;\n//\tj=0;\n//\tfor(k=1;k<=a;k++)\n//\t{\n//\t\tfor(l=1;l<=a;l++)\n//\t\t{\n//\t\t\tif(ara[k][l]==ara[1][1])\n//\t\t\t{\n//\t\t\t\ti++;\n//\t\t\t}\n//\t\t\telse if(ara[k][l]==ara[1][2])\n//\t\t\t{\n//\t\t\t\tj++;\n//\t\t\t}\n//\t\t}\n//\t}\n//}\n\nint main()\n{\n\tlong long int i,j,k,l,m,n,a=0,b=0,c=0;\n\tscanf(\"%I64d\",&n);\n\n\tchar ara[n+1][n+1];\n\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",ara[i]);\n\t}\n\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(ara[i][j]==ara[1][0])\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if(ara[i][j]==ara[1][1])\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(ara[i][i-1]==ara[i][n-i])\n\t\t{\n\t\t\tc++;\n\t\t}\n\t}\n\n\tif(c==n && a==((n*2)-1) && b==(n*n)-((n*2)-1))\n\t{\n\t\tprintf(\"YES\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\");\n\t}\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\n//void fun(long long int a,char ara[][301],long long int i,long long int j)\n//{\n//\tlong long int k,l,m,n;\n//\ti=0;\n//\tj=0;\n//\tfor(k=1;k<=a;k++)\n//\t{\n//\t\tfor(l=1;l<=a;l++)\n//\t\t{\n//\t\t\tif(ara[k][l]==ara[1][1])\n//\t\t\t{\n//\t\t\t\ti++;\n//\t\t\t}\n//\t\t\telse if(ara[k][l]==ara[1][2])\n//\t\t\t{\n//\t\t\t\tj++;\n//\t\t\t}\n//\t\t}\n//\t}\n//}\n\nint main()\n{\n\tlong long int i,j,k,l,m,n,a=0,b=0,c=0;\n\tscanf(\"%I64d\",&n);\n\t\n\tchar ara[n+1][n+1];\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",ara[i]);\n\t}\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(ara[i][j]==ara[1][0])\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if(ara[i][j]==ara[1][1])\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(ara[i][i-1]==ara[1][0]&& ara[i][n-i]==ara[1][0])\n\t\t{\n\t\t\tc++;\n\t\t}\n\t}\n\t\n\tif(c==n && a==((n*2)-1) && b==(n*n)-((n*2)-1))\n\t{\n\t\tprintf(\"YES\");\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\");\n\t}\n}"}
{"similarity_score": 0.8367346938775511, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9a00bbf23ec138fac23424ca631f3af0", "bug_code_uid": "ff9c477d9e560ec4ededc9ad68866d04", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "57654babe551615332aaaac2b14321ca", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint maxelem(int a,int b) {\r\nif(a>=b) {\r\n    return a;\r\n}\r\nelse {\r\n    return b;\r\n}\r\n\r\n}\r\nint minelem(int a,int b) {\r\nif(a<=b) {\r\n    return a;\r\n}\r\nelse {\r\n    return b;\r\n}\r\n\r\n}\r\n\r\n\r\nvoid solve() {\r\nint n,k;\r\n\r\nscanf(\"%d%d\",&n,&k);\r\n\r\nif(n%k==0) {\r\n    printf(\"1\\n\");\r\n    return 0;\r\n}\r\n\r\n\r\n\r\nint c=ceil((double)maxelem(n,k)/minelem(n,k));\r\n\r\nif(c>=k && n!=1) {\r\n    printf(\"%d\\n\",n-1);\r\n    return 0;\r\n}\r\nelse {\r\n\r\nprintf(\"%d\\n\",c);\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n\r\n   for(int i=0; i<t; i++) {\r\n    solve();\r\n   }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint maxelem(int a,int b) {\r\nif(a>=b) {\r\n    return a;\r\n}\r\nelse {\r\n    return b;\r\n}\r\n\r\n}\r\nint minelem(int a,int b) {\r\nif(a<=b) {\r\n    return a;\r\n}\r\nelse {\r\n    return b;\r\n}\r\n\r\n}\r\n\r\n\r\nvoid solve() {\r\nint n,k;\r\n\r\nscanf(\"%d%d\",&n,&k);\r\n\r\n\r\nint c=ceil((double)maxelem(n,k)/minelem(n,k));\r\n\r\nif(n%k==0) {\r\n    printf(\"1\\n\");\r\n    return 0;\r\n}\r\nif(n%k!=0 && n>k) {\r\n    printf(\"2\\n\");\r\n    return 0;\r\n}\r\nif(c>=k && n!=1) {\r\n    printf(\"%d\\n\",n-1);\r\n    return 0;\r\n}\r\nelse {\r\n\r\nprintf(\"%d\\n\",c);\r\nreturn 0;\r\n}\r\n\r\n}\r\n\r\nint main()\r\n{\r\n   int t;\r\n   scanf(\"%d\",&t);\r\n\r\n   for(int i=0; i<t; i++) {\r\n    solve();\r\n   }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9703476482617587, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "18003d4ca7197d654cc9c54dd097af13", "bug_code_uid": "e801cc65f38b363469e89f87a961adb6", "src_uid": "1fea137016452340beb13dd7518f00c9", "apr_id": "66fec03c1220fc6482624034b2ce3053", "difficulty": 1600, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\ntypedef long long ll;\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,k;\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tif(n%k==0)\r\n\t\t{\r\n\t\t\tfor(int i=0;i<k;i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d \",(n/k));\r\n\t\t\t}\r\n\t\t}else{\r\n\t\tll I;\r\n\t\tfor(ll i=1;i<k;i++)\r\n\t\t{\r\n\t\t\tif((n-i)%(k-i)==0)\r\n\t\t\t{\r\n\t\t\t\tI=i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif((n-I)/(k-I)>(n/2))\r\n\t\t{\r\n\t\tll p=(n-(k-3))/3,q=(n-(k-3)-1)/2;\r\n\t\tif((n-(k-3))%3==0)\r\n\t\t{\r\n\t\t\tprintf(\"%lld %lld %lld\",p,p,p);\r\n\t\t}else\r\n\t\t{\r\n\t\t\tif((n-(k-3))%2==1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %lld %lld\",q,q);\r\n\t\t\t}else{\r\n\t\t\t\tif((n-(k-3))%4==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%lld %lld %lld\",(n-(k-3))/2,(n-(k-3))/4,(n-(k-3))/4);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tprintf(\"2 %lld %lld\",((n-(k-3))-2)/2,((n-(k-3))-2)/2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i=0;i<(k-3);i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\" 1\");\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(int i=0;i<I;i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 \");\r\n\t\t\t}\r\n\t\t\tfor(int i=0;i<(k-I);i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%lld \",(n-I)/(k-I));\r\n\t\t\t}\r\n\t\t}\t\r\n\t}printf(\"\\n\");\r\n}\r\n}\r\n/*19  6\r\n8 4 4 1 1 1*/\r\n", "fixed": "#include<stdio.h>\r\ntypedef long long ll;\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint n,k;\r\n\t\tscanf(\"%d%d\",&n,&k);\r\n\t\tif(n%k==0)\r\n\t\t{\r\n\t\t\tfor(int i=0;i<k;i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d \",(n/k));\r\n\t\t\t}\r\n\t\t}else{\r\n\t\tll I;\r\n\t\tfor(ll i=1;i<k;i++)\r\n\t\t{\r\n\t\t\tif((n-i)%(k-i)==0)\r\n\t\t\t{\r\n\t\t\t\tI=i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif((n-I)/(k-I)>(n/2))\r\n\t\t{\r\n\t\tll p=(n-(k-3))/3,q=(n-(k-3)-1)/2;\r\n\t\tif((n-(k-3))%3==0)\r\n\t\t{\r\n\t\t\tprintf(\"%d %d %d\",p,p,p);\r\n\t\t}else\r\n\t\t{\r\n\t\t\tif((n-(k-3))%2==1)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 %d %d\",q,q);\r\n\t\t\t}else{\r\n\t\t\t\tif((n-(k-3))%4==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d %d %d\",(n-(k-3))/2,(n-(k-3))/4,(n-(k-3))/4);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tprintf(\"2 %d %d\",((n-(k-3))-2)/2,((n-(k-3))-2)/2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i=0;i<(k-3);i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\" 1\");\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(int i=0;i<I;i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"1 \");\r\n\t\t\t}\r\n\t\t\tfor(int i=0;i<(k-I);i++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d \",(n-I)/(k-I));\r\n\t\t\t}\r\n\t\t}\t\r\n\t}printf(\"\\n\");\r\n}\r\n}\r\n/*19  6\r\n8 4 4 1 1 1*/\r\n"}
{"similarity_score": 0.28272251308900526, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "edd651cc76a39530309dfb2898aa1ed2", "bug_code_uid": "21176dfe150359c704ebd421d16e7b39", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "f4d6ebb840badf3857679b24e3cdd0dc", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include <string.h>\nint main()\n{\n    char s[100];\n    int n,m,x;\n\n    scanf(\"%d\",&n);\n\n    for(n=n;n>=n;n--)\n    {\n    gets(s);\n\n    x=strlen(s);\n\n    m=x-2;\n    if(x<10)\n    {\n      printf(\"%s\",s);\n    }\n    else\n    {\n    printf(\"%s%d%s\",s[0],m,s[n-1]);\n    }\n\n    }\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\n#include<ctype.h>\nint main(){\n    int n,i,m;\nchar x[6000];\nscanf(\"%d\",&n);\nfor(i=1;i<=n;i++){\nscanf(\"%s\",&x);\nint l=strlen(x);\n\nif(l>10){\n\n    printf(\"%c\",x[0]);\n    printf(\"%d\",l-2);\n    printf(\"%c\\n\",x[l-1]);\n\n}\nelse printf(\"%s\\n\",x);}\nreturn 0;\n}\n\n"}
{"similarity_score": 0.99836867862969, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "eb1f0c6c896d544ab0f17a2e3499c9f4", "bug_code_uid": "b88e340f3606be96ec3e591e8aad2bde", "src_uid": "189d6b94e2e7d11803d2873d03459c97", "apr_id": "6a20c89f88e25b6500e442713221ea78", "difficulty": 1300, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int T;\n    int a, b, c, d;\n    int iszheng;\n    int j01, j18, j08;\n\n    scanf(\"%d\", &T);\n    while(T--){\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n        j01 = j08 = j18 = 0;\n        if((a+b) % 2 == 0)\n            iszheng = 1;\n        else\n            iszheng = 0;\n        if(a + d > 0 && b + c == 0)\n            j18 = 1;\n        if(a + d > 0 && b + c > 0)\n            j08 = 1;\n        if(a + d == 0 && b + c > 0)\n            j01 = 1;\n        if(iszheng && j18)\n            printf(\"Tidak Tidak Tidak Ya\\n\");\n        if(iszheng && j08)\n            printf(\"Tidak Tidak Ya Ya\\n\");\n        if(iszheng && j08)\n            printf(\"Tidak Tidak Ya Tidak\\n\");\n        if(!iszheng && j18)\n            printf(\"Ya Tidak Tidak Tidak\\n\");\n        if(!iszheng && j08)\n            printf(\"Ya Ya Tidak Tidak\\n\");\n        if(!iszheng && j01)\n            printf(\"Tidak Ya Tidak Tidak\\n\");\n    }\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int T;\n    int a, b, c, d;\n    int iszheng;\n    int j01, j18, j08;\n\n    scanf(\"%d\", &T);\n    while(T--){\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n        j01 = j08 = j18 = 0;\n        if((a+b) % 2 == 0)\n            iszheng = 1;\n        else\n            iszheng = 0;\n        if(a + d > 0 && b + c == 0)\n            j18 = 1;\n        if(a + d > 0 && b + c > 0)\n            j08 = 1;\n        if(a + d == 0 && b + c > 0)\n            j01 = 1;\n        if(iszheng && j18)\n            printf(\"Tidak Tidak Tidak Ya\\n\");\n        if(iszheng && j08)\n            printf(\"Tidak Tidak Ya Ya\\n\");\n        if(iszheng && j01)\n            printf(\"Tidak Tidak Ya Tidak\\n\");\n        if(!iszheng && j18)\n            printf(\"Ya Tidak Tidak Tidak\\n\");\n        if(!iszheng && j08)\n            printf(\"Ya Ya Tidak Tidak\\n\");\n        if(!iszheng && j01)\n            printf(\"Tidak Ya Tidak Tidak\\n\");\n    }\n}\n"}
{"similarity_score": 0.9198250728862973, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "b9cd060031e126220feed0c3a45bd80a", "bug_code_uid": "d1629920090546ee76ed338d4799ae01", "src_uid": "7ac27da2546a50d453f7bb6cacef1068", "apr_id": "90550e6a699671ff066041fb13f192a3", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n,i,n1,dog,cat;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++){\r\n        int a,b,c,x,y;\r\n        scanf(\"%d%d%d%d%d\",&a,&b,&c,&x,&y);\r\n        if(x>a){\r\n            n1=x-a;\r\n            dog=a+n1;\r\n            c=c-n1;\r\n            if(c>0){\r\n                c=c;\r\n            }\r\n            else{\r\n                c=0;\r\n            }\r\n        }\r\n        else{\r\n            dog=a;\r\n        }\r\n        if(y>b){\r\n            cat=b+c;\r\n\r\n        }\r\n        else{\r\n            cat=b;\r\n        }\r\n        if(dog>=x&&cat>=y){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\nint main()\r\n{\r\n    int n,i,n1,dog,cat;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++){\r\n        int a,b,c,x,y;\r\n        scanf(\"%d%d%d%d%d\",&a,&b,&c,&x,&y);\r\n        if(x>a){\r\n            n1=x-a;\r\n            if(n1<=c){\r\n                dog=a+n1;\r\n                c=c-n1;\r\n            }\r\n            else{\r\n                dog=a+c;\r\n                c=c-c;\r\n            }\r\n        }\r\n        else{\r\n            dog=a;\r\n        }\r\n        if(y>b){\r\n            cat=b+c;\r\n\r\n        }\r\n        else{\r\n            cat=b;\r\n        }\r\n        if(dog>=x&&cat>=y){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.8145639288738358, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "3dbab00fde43b78215240b6a47d67e25", "bug_code_uid": "36e288e3f9de8a065dd430b8056f61fd", "src_uid": "620a9baa531f0c614cc103e70cfca6fd", "apr_id": "07a160646173a23de7a6f0a976497f51", "difficulty": 1900, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdint.h>\n\nint main()\n{\n    int n, v1, v2, seats, distance;\n    scanf(\"%d %d %d %d %d\", &n, &distance, &v1, &v2, &seats);\n\n    int times;\n    if (n % seats == 0) {\n        times = n / seats - 1;\n    } else {\n        times = (int)(n / (double)seats);\n    }\n    int64_t bv1, bv2;\n    bv1 = v1;\n    bv2 = v2;\n    int64_t x = 2 * times * bv1 * (bv2 - 1) + (bv2 * bv2 - bv1 * bv1);\n    //int64_t y = 2 * times * bv1 * distance * (bv2 - 1);\n    double fd = 2 * times * bv1 * distance / (double)x * (bv2 - 1);\n    double secs = (distance - fd) / bv2 + fd / bv1;\n    printf(\"%.10f\\n\", secs);\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdint.h>\n\nint main()\n{\n    int n, v1, v2, seats, distance;\n    scanf(\"%d %d %d %d %d\", &n, &distance, &v1, &v2, &seats);\n\n    int times;\n    if (n % seats == 0) {\n        times = n / seats - 1;\n    } else {\n        times = (int)(n / (double)seats);\n    }\n    int64_t bv1, bv2;\n    bv1 = v1;\n    bv2 = v2;\n    double fd = 2 * times * bv1 * distance / (double)(2 * times * bv1 + bv1 + bv2);\n    double secs = (distance - fd) / bv2 + fd / bv1;\n    printf(\"%.10f\\n\", secs);\n\n    return 0;\n}"}
{"similarity_score": 0.9993746091307066, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e3e2459ee0193e710e19dd965e33d643", "bug_code_uid": "1a90cccfb946574105d03294b8ff8f75", "src_uid": "819aebac427c2c0f96e58bca60b81e33", "apr_id": "53f6a445e7d85ba70d22fbf6772a38a2", "difficulty": 1900, "tags": ["dp", "greedy", "graphs", "number theory", "dfs and similar", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nint main()\n{\n\tint t,n,k,a[2005],count[28],flag,j,sum,i,temp,max,l;\n\tchar c;\n\tscanf(\"%d\\n\",&t);\n\twhile(t--)\n\t{\n\t\tfor(i=0;i<=27;i++)\n\t\t{\n\t\t\tcount[i]=0;\n\t\t}\n\t\tscanf(\"%d %d\",&n,&k);\n\t\tscanf(\"%c\",&c);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%c\",&c);\n\t\t\ta[i]=c-'a';\n\t\t\tcount[a[i]]++;\n\t\t}\n\t\tif(n<=k)\n\t\t{\n\t\t\tflag=0;\n\t\t\tmax=0;\n\t\t\tif(n==1)\n\t\t\t{\n\t\t\t\tmax=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tfor(l=1;l<=n;l++)\n\t\t\t\t{\n\t\t\t\t\tif(k%l==0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttemp=l;\n\t\t\t\t\t\ti=1;\n\t\t\t\t\t\twhile(1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\t\tfor(j=0;j<26;j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsum+=(count[j]/i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if(l==5)\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t// \tprintf(\"%d-%d\\n\",sum,i);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tif(sum<temp)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(temp*(i-1)>max)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmax=temp*(i-1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti=1;\n\t\t\tmax=0;\n\t\t\tif(k==1)\n\t\t\t{\n\t\t\t\ttemp=1;\n\t\t\t\ti=1;\n\t\t\t\twhile(1)\n\t\t\t\t{\n\t\t\t\tsum=0;\n\t\t\t\tfor(j=0;j<26;j++)\n\t\t\t\t{\n\t\t\t\t\tsum+=(count[j]/i);\n\t\t\t\t}\n\t\t\t\t// printf(\"%d-%d\\n\",sum,i);\n\t\t\t\tif(sum<temp)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tif(temp*(i-1)>max)\n\t\t\t\t{\n\t\t\t\t\tmax=temp*(i-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(l=2;l<=k;l++)\n\t\t\t\t{\n\t\t\t\t\tif(k%l==0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttemp=l;\n\t\t\t\t\t\ti=1;\n\t\t\t\t\t\twhile(1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\t\tfor(j=0;j<26;j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsum+=(count[j]/i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if(l==5)\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t// \tprintf(\"%d-%d\\n\",sum,i);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tif(sum<temp)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(temp*(i-1)>max)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmax=temp*(i-1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t}\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nint main()\n{\n\tint t,n,k,a[2005],count[28],flag,j,sum,i,temp,max,l;\n\tchar c;\n\tscanf(\"%d\\n\",&t);\n\twhile(t--)\n\t{\n\t\tfor(i=0;i<=27;i++)\n\t\t{\n\t\t\tcount[i]=0;\n\t\t}\n\t\tscanf(\"%d %d\",&n,&k);\n\t\tscanf(\"%c\",&c);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%c\",&c);\n\t\t\ta[i]=c-'a';\n\t\t\tcount[a[i]]++;\n\t\t}\n\t\tif(n<=k)\n\t\t{\n\t\t\tflag=0;\n\t\t\tmax=0;\n\t\t\tif(n==1)\n\t\t\t{\n\t\t\t\tmax=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tfor(l=1;l<=n;l++)\n\t\t\t\t{\n\t\t\t\t\tif(k%l==0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttemp=l;\n\t\t\t\t\t\ti=1;\n\t\t\t\t\t\twhile(1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\t\tfor(j=0;j<26;j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsum+=(count[j]/i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if(l==5)\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t// \tprintf(\"%d-%d\\n\",sum,i);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tif(sum<temp)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(temp*(i-1)>max)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmax=temp*(i-1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti=1;\n\t\t\tmax=0;\n\t\t\tif(k==1)\n\t\t\t{\n\t\t\t\ttemp=1;\n\t\t\t\ti=1;\n\t\t\t\twhile(1)\n\t\t\t\t{\n\t\t\t\tsum=0;\n\t\t\t\tfor(j=0;j<26;j++)\n\t\t\t\t{\n\t\t\t\t\tsum+=(count[j]/i);\n\t\t\t\t}\n\t\t\t\t// printf(\"%d-%d\\n\",sum,i);\n\t\t\t\tif(sum<temp)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tif(temp*(i-1)>max)\n\t\t\t\t{\n\t\t\t\t\tmax=temp*(i-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(l=1;l<=k;l++)\n\t\t\t\t{\n\t\t\t\t\tif(k%l==0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttemp=l;\n\t\t\t\t\t\ti=1;\n\t\t\t\t\t\twhile(1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsum=0;\n\t\t\t\t\t\t\tfor(j=0;j<26;j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsum+=(count[j]/i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if(l==5)\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t// \tprintf(\"%d-%d\\n\",sum,i);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tif(sum<temp)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(temp*(i-1)>max)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmax=temp*(i-1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t}\n}"}
{"similarity_score": 0.9487704918032787, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "27151c28e66e2aa498886de0ba64a95e", "bug_code_uid": "bbbab1601bced847a859723c5f59a224", "src_uid": "139febdb9c01bf0e6598fdf65a1a522c", "apr_id": "c7c9a8e7d5e436ac93f224757793e89f", "difficulty": 1800, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,b,i,j,k,a;\n\tlong int mod;\n\tscanf(\"%d%d%d%ld\",&n,&m,&b,&mod);\n\tlong int dp[m+1][b+1];\n\tfor(i=0;i<=m;i++)\n\t{\n\t\tfor(j=0;j<=b;j++)\n\t\t\tdp[i][j]=0;\n\t}\n\tdp[0][0]=1;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tfor(k=0;k<b;k++)\n\t\t\t{\n\t\t\t\tif(dp[j][k] && j<=m-1 && k+a<=b)\n\t\t\t\t\tdp[j+1][k+a]= (dp[j+1][k+a] + dp[j][k])%mod;\n\t\t\t}\n\t\t}\n\t}\n\tlong int ans=0;\n\tfor(i=0;i<=b;i++)\n\t{\n\t\tans= (ans+dp[m][i])%mod;\n\t}\n\tprintf(\"%ld\\n\",ans);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,b,i,j,k,a;\n\tlong int mod;\n\tscanf(\"%d%d%d%ld\",&n,&m,&b,&mod);\n\tlong int dp[m+1][b+1];\n\tfor(i=0;i<=m;i++)\n\t{\n\t\tfor(j=0;j<=b;j++)\n\t\t\tdp[i][j]=0;\n\t}\n\tdp[0][0]=1;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tfor(j=0;j<=m;j++)\n\t\t{\n\t\t\tfor(k=0;k<=b;k++)\n\t\t\t{\n\t\t\t\tif(dp[j][k] && j<=m-1 && k+a<=b)\n\t\t\t\t\tdp[j+1][k+a]= (dp[j+1][k+a] + dp[j][k])%mod;\n\t\t\t}\n\t\t}\n\t}\n\tlong int ans=0;\n\tfor(i=0;i<=b;i++)\n\t{\n\t\tans= (ans+dp[m][i])%mod;\n\t}\n\tprintf(\"%ld\\n\",ans);\n\treturn 0;\n}"}
{"similarity_score": 0.983520105471325, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2465ad3d18f2f2e61e4c08c95094329d", "bug_code_uid": "a1102369eeb207885b8cb1504eef619c", "src_uid": "4df38c9b42b0f0963a121829080d3571", "apr_id": "ad577017bf4b31be6d6c2808c64c5424", "difficulty": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nlong long min2 ( long long a, long long b) {\r\n    return a < b ? a : b;\r\n}\r\n\r\nlong long max2 ( long long a, long long b) {\r\n    return a > b ? a : b;\r\n}\r\n\r\nint main() {\r\n    int nSets;\r\n    scanf(\"%d\", &nSets);\r\n\r\n\r\n    for (int setNumber = 1; setNumber <= nSets; setNumber++){\r\n        long long nMembers, interval, duration;\r\n        scanf(\"%lld %lld %lld\", &nMembers, &interval, &duration);\r\n\r\n        long long firstMembersDiscomfort = min2(nMembers - 1, duration / interval);\r\n        long long allMembersDiscomfort = firstMembersDiscomfort * (firstMembersDiscomfort - 1) / 2 + firstMembersDiscomfort + firstMembersDiscomfort * (nMembers - firstMembersDiscomfort);\r\n\r\n        printf(\"%lld\\n\", allMembersDiscomfort);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nlong long min2 ( long long a, long long b) {\r\n    return a < b ? a : b;\r\n}\r\n\r\nlong long max2 ( long long a, long long b) {\r\n    return a > b ? a : b;\r\n}\r\n\r\nint main() {\r\n    int nSets;\r\n    scanf(\"%d\", &nSets);\r\n\r\n\r\n    for (int setNumber = 1; setNumber <= nSets; setNumber++){\r\n        long long nMembers, interval, duration;\r\n        scanf(\"%lld %lld %lld\", &nMembers, &interval, &duration);\r\n\r\n        long long firstMembersDiscomfort = min2(nMembers - 1, duration / interval);\r\n        long long allMembersDiscomfort = firstMembersDiscomfort * (firstMembersDiscomfort - 1) / 2 + firstMembersDiscomfort * (nMembers - firstMembersDiscomfort);\r\n\r\n        printf(\"%lld\\n\", allMembersDiscomfort);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.987012987012987, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "654c677e7d7c41b32bc46a760301dee9", "bug_code_uid": "48e0426fac973b5a8a0f8ff8b74fb8a7", "src_uid": "11fabde93815c1805369bbbc5a40e2d8", "apr_id": "356f06cab0b61cea0548f37db0533d6e", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n//#include<conio.h>\nlong min(long a,long b,long c);\nlong min2(long a,long b);\nint main()\n{\n long c[5],n,m,a[1005],i,b[1005],sum1=0,sum2=0,x1,x2,x;\n// printf(\"Enter the cost array:\\n\");\n for(i=1;i<=4;i++)\n {\n  scanf(\"%ld\",&c[i]);\n }\n// printf(\"Enter the values of n and m:\");\n scanf(\"%ld %ld\",&n,&m);\n// printf(\"Enter the a array:\\n\");\n for(i=1;i<=n;i++)\n {\n  scanf(\"%ld\",&a[i]);\n }\n// printf(\"Enter the b array:\\n\");\n for(i=1;i<=m;i++)\n {\n  scanf(\"%ld\",&b[i]);\n }\n for(i=1;i<=n;i++)\n {\n  sum1=sum1+min2(a[i]*c[1],c[2]);\n }\n for(i=1;i<=m;i++)\n {\n  sum2=sum2+min2(b[i]*c[1],c[2]);\n }\n x1=min2(sum1+sum2,c[3]+c[3]);\n x2=min2(sum1+c[3],sum2+c[3]);\n x=min(x1,x2,c[4]);\n printf(\"%ld\",x);\n// getch();\n// clrscr();\nreturn 0;\n}\nlong min(long a,long b,long c)\n{\n if(a<b && a<c)\n return a;\n else if(b<a && b<c)\n return b;\n else\n return c;\n}\nlong min2(long a,long b)\n{\n if(a<b)\n return a;\n else\n return b;\n}", "fixed": "#include<stdio.h>\n//#include<conio.h>\n//long min(long a,long b,long c);\nlong min2(long a,long b);\nint main()\n{\n long c[5],n,m,a[1005],i,y,b[1005],sum1=0,sum2=0,x1,x2,x;\n// printf(\"Enter the cost array:\\n\");\n for(i=1;i<=4;i++)\n {\n  scanf(\"%ld\",&c[i]);\n }\n// printf(\"Enter the values of n and m:\");\n scanf(\"%ld %ld\",&n,&m);\n// printf(\"Enter the a array:\\n\");\n for(i=1;i<=n;i++)\n {\n  scanf(\"%ld\",&a[i]);\n }\n// printf(\"Enter the b array:\\n\");\n for(i=1;i<=m;i++)\n {\n  scanf(\"%ld\",&b[i]);\n }\n for(i=1;i<=n;i++)\n {\n  sum1=sum1+min2(a[i]*c[1],c[2]);\n }\n for(i=1;i<=m;i++)\n {\n  sum2=sum2+min2(b[i]*c[1],c[2]);\n }\n x1=min2(sum1+sum2,c[3]+c[3]);\n x2=min2(sum1+c[3],sum2+c[3]);\n x=min2(x1,x2);\n y=min2(x,c[4]);\n printf(\"%ld\",y);\n// getch();\n// clrscr();\nreturn 0;\n}\n/*long min(long a,long b,long c)\n{\n if(a<b && a<c)\n return a;\n else if(b<a && b<c)\n return b;\n else\n return c;\n} */\nlong min2(long a,long b)\n{\n if(a<b)\n return a;\n else\n return b;\n}"}
{"similarity_score": 0.9598633646456021, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d85d4a5e8f4a604cd5c77b7d7384c1c0", "bug_code_uid": "d306e76ead4d2f411a6fff401b1a4cd4", "src_uid": "b3978805756262e17df738e049830427", "apr_id": "2193ba003bae1978f5a962496b58daa4", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int x,y,k,d=1;\n        scanf(\"%d%d\",&x,&y);\n        if(x>=y)\n            printf(\"YES\\n\");\n        else\n        {\n            while(x<y)\n            {\n                k=x;\n                if(x%2!=0)\n                    x=x-1;\n                x*=3;\n                x/=2;\n                if(k==x)\n                {\n                    d=0;break;\n                }\n\n            }\n            if(d)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n\n\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int x,y,k,d=1;\n        scanf(\"%d%d\",&x,&y);\n        if(x>=y)\n            printf(\"YES\\n\");\n        else\n        {\n            while(x<y)\n            {\n                k=x;\n                if(x%2)\n                    x=x-1;\n                x/=2;\n                x*=3;\n                if(k==x)\n                {\n                    d=0;break;\n                }\n\n            }\n            if(d)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n\n\n        }\n    }\n}\n"}
{"similarity_score": 0.4733984799131379, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "7a94788397d50ed4ed9f070f0710dce6", "bug_code_uid": "53ab10b868ae12b37b007332cf282a18", "src_uid": "6cef2d464febcee854ee5a7f78d7ba4a", "apr_id": "add3a3001ad96a0e48ba656340843713", "difficulty": 2500, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint n, r;\t// 1\u2264n\u226418, 0\u2264r\u2264(2^18=262144)\n    scanf(\"%d%d\", &n, &r);\n\tint n2 = 1 << n;\t// 2^n\n\n\tint C[n2];\t// 0\u2264Ci\u2264(10^9=1000000000)\n\tfloat m = 0.0f;\t// Expected/Mean value\n\tfor (int i = 0; i < n2; ++i) {\n\t\tscanf(\"%d\", &C[i]);\n\t\tm += float(C[i]) / n2;\n\t}\n\tprintf(\"%.6f\\n\", m);\n\n\tint z, g;\t// 0\u2264z\u22642^n\u22121, 0\u2264g\u226410^9\n\tfor (int i = 0; i < r; ++i) {\n        scanf(\"%d%d\", &z, &g);\n\t\tm -= float(C[z] - g) / n2;\n\t\tC[z] = g;\n\t\tprintf(\"%.6f\\n\", m);\n\t}\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint n, r, z, g;\t// 1\u2264n\u226418, 0\u2264r\u2264(2^18=262144), 0\u2264z\u22642^n\u22121, 0\u2264g\u226410^9\n\tscanf(\"%d%d\", &n, &r);\n\tdouble n2 = 1 << n, m = 0.0;\t// 2^n, Expected/Mean value\n\n\tint C[1 << n];\t// 0\u2264Ci\u2264(10^9=1000000000)\n\tint i = 0;\n\twhile (i < 1 << n) {\n\t\tscanf(\"%d\", &C[i]);\n\t\tm += C[i++] / n2;\n\t}\n\n\tprintf(\"%.7f\\n\", m);\n\n\twhile (r-- > 0) {\n\t\tscanf(\"%d%d\", &z, &g);\n\t\tm -= (C[z] - g) / n2;\n\t\tC[z] = g;\n\t\tprintf(\"%.7f\\n\", m);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9668341708542714, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "bacbf41b0a056da6052c079f0cbae515", "bug_code_uid": "73ec824963926516491b172218c90a35", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "4db6f1bda5db9793bd33ec1ce0451a35", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[6000],b,c[5],d,i,j,m[500],n[500],o[500],s=0,t=0,u=0;\n    scanf(\"%d\",&b);\n    for(i=1;i<=b;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==1){m[s]=i;s++;c[0]++;}\n        else if(a[i]==2){n[t]=i;t++;c[1]++;}\n        else if(a[i]==3){o[u]=i;u++;c[2]++;}\n    }\n    j=c[0];\n    for(i=0;i<3;i++)\n    {\n        if(c[i]<j)j=c[i];\n    }\n    printf(\"%d\\n\",j);\n\n\n\n\n    for(i=0;i<j;i++)\n    {\n\n\n            printf(\"%d %d %d\\n\",m[i],n[i],o[i]);\n    }\n\n\n\n    }\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[6000],b,c[5],d,i,j,m[7000],n[7000],o[7000],s=0,t=0,u=0;\n    scanf(\"%d\",&b);\n    for(i=1;i<=b;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==1){m[s]=i;s++;c[0]++;}\n        else if(a[i]==2){n[t]=i;t++;c[1]++;}\n        else if(a[i]==3){o[u]=i;u++;c[2]++;}\n    }\n    j=c[0];\n    for(i=0;i<3;i++)\n    {\n        if(c[i]<j)j=c[i];\n    }\n    printf(\"%d\\n\",j);\n\n\n\n\n    for(i=0;i<j;i++)\n    {\n\n\n            printf(\"%d %d %d\\n\",m[i],n[i],o[i]);\n    }\n\n\n\n    }\n\n"}
{"similarity_score": 0.9733464955577492, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9eed73dee10921e62e8c79d1c039a05e", "bug_code_uid": "892f7803f3e6b0da5e669be497a7a88f", "src_uid": "7ac27da2546a50d453f7bb6cacef1068", "apr_id": "06a87d2ff28aa6316f32db83d9b5a714", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long int a,b,c,d,x,y,da,ca;\r\n        scanf(\"%lld\",&a);\r\n        scanf(\"%lld\",&b);\r\n        scanf(\"%lld\",&c);\r\n        scanf(\"%lld\",&d);\r\n        scanf(\"%lld\",&x);\r\n        scanf(\"%lld\",&y);\r\n        da=x-a;\r\n        ca=y-b;\r\n        if(da>0)\r\n        c=c-da;\r\n        if(ca>0)\r\n        c=c-ca;\r\n        if(c>=0)\r\n        printf(\"YES\");\r\n        else\r\n        printf(\"NO\");\r\n        printf(\"\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    long long int t;\r\n    scanf(\"%lld\",&t);\r\n    while(t--)\r\n    {\r\n        long long int a,b,c,d,x,y,da,ca;\r\n        scanf(\"%lld\",&a);\r\n        scanf(\"%lld\",&b);\r\n        scanf(\"%lld\",&c);\r\n        scanf(\"%lld\",&x);\r\n        scanf(\"%lld\",&y);\r\n        da=x-a;\r\n        ca=y-b;\r\n        if(da>0)\r\n        c=c-da;\r\n        if(ca>0)\r\n        c=c-ca;\r\n        if(c>=0)\r\n        printf(\"YES\");\r\n        else\r\n        printf(\"NO\");\r\n        printf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.13095238095238096, "equal_cnt": 12, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "1be5c304ade240dc5857c062ebdd4fdc", "bug_code_uid": "8ae2378f969a423768e8dc4dc78a4f6c", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "b884588ad7eb7cd1a7976ad860e09ea6", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid main()\n{\n    int i=0,t,sum=0,arr[100];\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        \n        scanf(\"%d\",&arr[i]);\n        sum+=arr[i];\n    }\n    int j,k,h;\n    for(j=0;j<i;j++)\n    {\n        for(k=0;k<i-j-1;k++)\n        {\n            if(arr[k]>arr[k+1])\n            {\n                h=arr[k];\n                arr[k]=arr[k+1];\n                arr[k+1]=h;\n            }\n        }\n        \n    } \n        \n    \n    int s=0,n=0;\n    for(j=i-1;j>=0;j--)\n    {\n        c=c-arr[j];\n        if(c>s)\n        break;\n        else\n        {\n            s+=arr[j];n++;\n        }\n    }\n    printf(\"%d\",n);\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint a[100],n,c=0,count=0,coin=0,i,j,m=0;\n\t    scanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tc+=a[i];\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=i+1;j<n;j++)\n\t\t{\n\t\t\tif(a[i]>a[j])\n\t\t\t{\n\t\t\t\tm=a[i];\n\t\t\t\ta[i]=a[j];\n\t\t\t\ta[j]=m;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=n-1;i>=0;i--)\n\t{\n\t\tcount+=a[i];\n\t\tcoin+=1;\n\t\tc=c-a[i];\n\t\tif(count>c)\n\t\t\tbreak;\n\t}\n\tprintf(\"%d\",coin);\n}"}
{"similarity_score": 0.895040369088812, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "4e533971430b285ea9a9fd588458cc45", "bug_code_uid": "fb8613ae1a091d624d67cc8136df035b", "src_uid": "3cd56870a96baf8860e9b7e89008d895", "apr_id": "516a71cd41b5baf2b3f707ca7c41387a", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\n#include<string.h>\r\nint main() {\r\n    int n;\r\n    char s[51];\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%s\",s);\r\n        if(strstr(\" YesYesYesYesYesYesYesYesYesYesYesYesYesYesYes\",s)==NULL){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\n#include<string.h>\r\nint main() {\r\n    int n;\r\n    char s[51];\r\n    scanf(\"%d\",&n);\r\n    while(n--){\r\n        scanf(\"%s\",s);\r\n        if(strstr(\"YesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYesYes\",s)==NULL){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else{\r\n            printf(\"YES\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9929577464788732, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3a2f75f5b32f9f9bee8aff2f45690a44", "bug_code_uid": "fa54c2e32bd24898092302d4b3fe6837", "src_uid": "2c7add49d423de44a2bc09de56ffacf1", "apr_id": "513656442f313d455e6c0cd3a45100a6", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n\tint n,i,j;\r\n\tchar a[8][8],b,c;\r\n\tscanf(\"%d\",&n);getchar();\r\n\tfor(int k=0;k<n;k++){\r\n\t\tgetchar();\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<8;j++){\r\n\t\t\t\ta[i][j]=getchar();\r\n\t\t\t}\r\n\t\t\tgetchar();\r\n\t\t}\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\tif(a[i][j]!=a[i][j+1]) break;\r\n\t\t\t}\r\n\t\t\tif(j==7&&a[i][j]!='.'){c=a[i][j];break;}\r\n\t\t}\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\tif(a[j][i]!=a[j+1][i]) break;\r\n\t\t\t}\r\n\t\t\tif(j==7&&a[j][i]!='.'){c=a[j][i];break;}\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%c\\n\",c);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n    return 0;\r\n}\r\n\r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n\tint n,i,j;\r\n\tchar a[8][8],b,c;\r\n\tscanf(\"%d\",&n);getchar();\r\n\tfor(int k=0;k<n;k++){\r\n\t\tgetchar();\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<8;j++){\r\n\t\t\t\ta[i][j]=getchar();\r\n\t\t\t}\r\n\t\t\tgetchar();\r\n\t\t}\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\tif(a[i][j]!=a[i][j+1]) break;\r\n\t\t\t}\r\n\t\t\tif(j==7&&a[i][j]=='R'){c=a[i][j];break;}\r\n\t\t}\r\n\t\tfor(i=0;i<8;i++){\r\n\t\t\tfor(j=0;j<7;j++){\r\n\t\t\t\tif(a[j][i]!=a[j+1][i]) break;\r\n\t\t\t}\r\n\t\t\tif(j==7&&a[j][i]=='B'){c=a[j][i];break;}\r\n\t\t}\r\n\t\t\r\n\t\tprintf(\"%c\\n\",c);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n    return 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.14273858921161825, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "90bbdce718ecab51fc066d69cf0d1459", "bug_code_uid": "3fb15b93984b575120efa027de133c17", "src_uid": "9640b7197bd7b8a59f29aecf104291e1", "apr_id": "4bb17b4b2ae6edb2c6cbdabffad9ec6f", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//2-17 Array & String Related Problem solving (June 08) - prob 2\n\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,n;\n    scanf(\"%d\", &t);\n\n    char str[101];\n    for(int  tc =0; tc<t; t++)\n    {\n        scanf(\"%s\", &str);\n\n        int n = strlen(str);\n        if(n%2 != 0) //if the condi is odd\n        {\n            printf(\"NO\\n\");    //print No\n            continue;   //*p\n        }\n        int mid = n/2;\n        int cnt = 0;\n\n        for(int i=0, j=mid; i<mid, j<n; i++, j++) //loop for count\n        {\n            if(str[i] != str[j])\n            {\n               printf(\"NO\\n\");\n               cnt++;\n               break;\n            }\n\n        }\n        if(cnt == 0)\n        {\n            printf(\"YES\\n\");\n        }\n    }\n    return 0;\n}\n\n      \t    \t \t\t\t  \t \t \t\t \t \t\t\t\t", "fixed": "#include<stdio.h>\n#include<string.h>\nchar s[100005];\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\twhile (n--)\n\t{\n\t\tint count = 0;\n\t\tscanf(\"%s\", s);\n\t\tint len = strlen(s);\n\t\tfor (int i = 0; i<(len + 1) / 2; i++)\n\t\t{\n\t\t\tif (s[i] == s[(len + 1) / 2 + i])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count == (len + 1) / 2)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n \t\t\t\t\t\t  \t \t  \t \t\t\t \t\t  \t   \t\t\t"}
{"similarity_score": 0.3355408388520971, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "be582b1da96ea93acc6cd2dfa2b4e69a", "bug_code_uid": "dc9a22507d9c85e7949f17a276c75050", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "2cb8600ee902207feb61983d7490c7d1", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int arr[1000][2],n,s,i,j,l=0,k,x,y,sum_s;\n    scanf(\"%d%d\",&s,&n);\n    sum_s=s;\n    for(i=0;i<n;i++)\n    {scanf(\"%d%d\",&x,&y);\n    sum_s=sum_s+y;\n    if(x<s)\n    {s=s+y;\n    continue;}\n    arr[l][0]=x;\n    arr[l][1]=y;\n    l++;}\n    for(j=0;j<l;j++)\n    for(k=0;k<l;k++)\n    if(s>arr[k][0])\n    s=s+arr[k][1];\n    if(s==sum_s)\n    printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int arr[1000][2],n,s,i,j,l=0,k,x,y,flag=0;\n    scanf(\"%d%d\",&s,&n);\n    for(i=0;i<n;i++)\n    {scanf(\"%d%d\",&x,&y);\n    if(x<s)\n    {s=s+y;\n    continue;}\n    arr[l][0]=x;\n    arr[l][1]=y;\n    l++;}\n    for(j=0;j<l;j++)\n    for(k=0;k<l;k++)\n    if(arr[k][0]!=0&&s>arr[k][0])\n    {s=s+arr[k][1];\n    arr[k][0]=0;}\n    for(i=0;i<l;i++)\n    if(arr[i][0]!=0)\n    {flag=1;\n    break;}\n    if(flag==0)\n    printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}"}
{"similarity_score": 0.9994756161510225, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cbc68ee999a9827dccc07073930dbfff", "bug_code_uid": "6693956f50287a542208e5eefd866d7e", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "259e812bfd540c8608bf23fed8219f5b", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int i,j,k=0,m=0,n,p,q,a;\n    char s[105][6];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s[i]);\n        \n    }\n     for(i=0;i<n;i++)\n    {\n       if(s[i][0]=='O'&&s[i][1]=='O')\n        {\n            k=k+1;\n            \n            s[i][0]='+';\n            s[i][1]='+';\n            break;\n        }\n        \n         if(s[i][3]=='O'&&s[i][4]=='O')\n        {\n            m=m+1;\n            s[i][3]='+';\n            s[i][4]='+';\n            break;\n            \n        }\n        \n    }\n    if(k==1)\n    {\n        printf(\"YES\\n\");\n         for(i=0;i<n;i++)\n         {\n           printf(\"%s\",s[i]);\n           printf(\"\\n\");\n        \n        }\n        \n    }\n    if(m==1)\n    {\n        printf(\"YES\\n\");\n         for(i=0;i<n;i++)\n         {\n           printf(\"%s\",s[i]);\n           printf(\"\\n\");\n        \n        }\n        \n    }\n    \n    else if(k==0&&m==0)\n    printf(\"NO\");\n    \n\n    return 0;\n}\n \n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int i,j,k=0,m=0,n,p,q,a;\n    char s[1005][6];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s[i]);\n        \n    }\n     for(i=0;i<n;i++)\n    {\n       if(s[i][0]=='O'&&s[i][1]=='O')\n        {\n            k=k+1;\n            \n            s[i][0]='+';\n            s[i][1]='+';\n            break;\n        }\n        \n         if(s[i][3]=='O'&&s[i][4]=='O')\n        {\n            m=m+1;\n            s[i][3]='+';\n            s[i][4]='+';\n            break;\n            \n        }\n        \n    }\n    if(k==1)\n    {\n        printf(\"YES\\n\");\n         for(i=0;i<n;i++)\n         {\n           printf(\"%s\",s[i]);\n           printf(\"\\n\");\n        \n        }\n        \n    }\n    if(m==1)\n    {\n        printf(\"YES\\n\");\n         for(i=0;i<n;i++)\n         {\n           printf(\"%s\",s[i]);\n           printf(\"\\n\");\n        \n        }\n        \n    }\n    \n    else if(k==0&&m==0)\n    printf(\"NO\");\n    \n\n    return 0;\n}\n \n"}
{"similarity_score": 0.9595687331536388, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "383d76511ed028149e5f3efa8efd490f", "bug_code_uid": "355dac89c556f929803c25cc1503b67f", "src_uid": "a75b8b9b99b800762645ef7c3bc29905", "apr_id": "4f46d86f4b12fc9d624b79db4930bfcc", "difficulty": 1500, "tags": ["dp", "greedy", "two pointers", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#pragma warning(disable:4996)\n\nint main()\n{\n\tint q, n, i, j;\n\tlong long m, t, l, h, min, max, t1, T;\n\tscanf(\"%d\", &q);\n\tfor (i = 0; i < q; i++) {\n\t\tscanf(\"%d%lld\", &n, &m);\n\t\tmin = m; max = m;\n\t\tt1 = 0;\n\t\tT = 0;\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tscanf(\"%lld%lld%lld\", &t, &l, &h);\n\t\t\tt1 = t - t1;\n\t\t\tmin -= t1; max += t1;\n\t\t\tif (l <= max && h >= min&&T==0) {\n\t\t\t\tif (h <= max)\n\t\t\t\t\tmax = h;\n\t\t\t\tif (l >= min)\n\t\t\t\t\tmin = l;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tT = 1;\n\t\t\t}\n\t\t}\n\t\tif (T == 0)\n\t\t\tprintf(\"YES\\n\");\n\t\tif (T == 1)\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#pragma warning(disable:4996)\n\nint main()\n{\n\tint q, n, i, j;\n\tlong long m, t, l, h, min, max, t1, T;\n\tscanf(\"%d\", &q);\n\tfor (i = 0; i < q; i++) {\n\t\tscanf(\"%d%lld\", &n, &m);\n\t\tmin = m; max = m;\n\t\tt1 = 0;\n\t\tT = 0;\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tscanf(\"%lld%lld%lld\", &t, &l, &h);\n\t\t\t\n\t\t\tmin -= t-t1; max += t-t1;\n\t\t\tt1 = t;\n\t\t\tif (l <= max && h >= min&&T==0) {\n\t\t\t\tif (h <= max)\n\t\t\t\t\tmax = h;\n\t\t\t\tif (l >= min)\n\t\t\t\t\tmin = l;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tT = 1;\n\t\t\t}\n\t\t}\n\t\tif (T == 0)\n\t\t\tprintf(\"YES\\n\");\n\t\tif (T == 1)\n\t\t\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9452449567723343, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "e4431bb3ffa9c1bafb104bad4964698b", "bug_code_uid": "58d05d8a98ca09f6b528c1f9304c76e5", "src_uid": "a00d831da539c69d571d9720fd94eee1", "apr_id": "7107c75c0eac6efa2043e936a90ee28c", "difficulty": 1400, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n#define min(a,b) a < b ? a : b\n\n\nint compare(const void *a, const void *b)\n{\n  return *((unsigned*) a) <= *((unsigned*) b);\n}\n\nint main(int argc, char **argv)\n{\n\n  unsigned q;\n  unsigned n,*a;\n  scanf(\"%d\", &q);\n\n  while(q--)\n  {\n    scanf(\"%d\", &n);\n    a = (unsigned*) calloc(n+2, sizeof(unsigned));\n\n    for(unsigned i = 1, k = 0; i <= n; i++ )\n    {      \n      scanf(\"%d\", &k);\n      a[k]++;\n    }\n\n    qsort(a+1, n, sizeof(unsigned), compare);\n\n    unsigned gift = 0;\n    unsigned i = 1, k = a[1];\n    do { \n\n      gift += min(k, a[i]); \n\n    } while(--k && a[++i]);\n\n    printf(\"%d\\n\", gift);\n\n    free(a);\n  }\n  \n\n  return EXIT_SUCCESS;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n#define min(a,b) a < b ? a : b\n\n\nint compare(const void *a, const void *b)\n{\n  return *((unsigned*) b) - *((unsigned*) a);\n}\n\nint main(int argc, char **argv)\n{\n\n  unsigned q;\n  unsigned n,*a;\n  scanf(\"%d\", &q);\n\n  while(q--)\n  {\n    scanf(\"%d\", &n);\n    a = (unsigned*) calloc(n+1, sizeof(unsigned));\n\n    for(unsigned i = 1, k = 0; i <= n; i++ )\n    {      \n      scanf(\"%d\", &k);\n      a[k]++;\n    }\n\n    qsort(a, n+1, sizeof(unsigned), compare);\n\n    unsigned gift = 0;\n    unsigned i = 0, k = a[0];\n    do { \n\n      k = min(k, a[i]);\n      gift += k; \n\n    } while(--k && a[++i]);\n\n    printf(\"%d\\n\", gift);\n\n    free(a);\n  }\n  \n\n  return EXIT_SUCCESS;\n}\n\n"}
{"similarity_score": 0.9346879535558781, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "1aa2f5bcbd146d6e0bba8f526d6becba", "bug_code_uid": "5ea10b82acd86d4a7f68d2806b50d5f4", "src_uid": "43b8e9fb2bd0ec5e0250a33594417f63", "apr_id": "b03cb29b229f46ce08960dbbb0b8caf9", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int T,n,k,a,b,s,x,y,d;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        scanf(\"%d %d\",&n,&k);\n        if(n%k==0)\n        {\n            x=n/k;\n            y=n/k;\n        }\n        else\n        {\n            x=n/k;\n            y=(n/k)+1;\n        }\n        if(k%2==0)\n        {\n            a=k/2;\n            b=k/2;\n        }\n        else\n        {\n            a=k/2;\n            b=(k/2)+1;\n        }\n        s=(x*b)+(y*a);\n        if(s>n)\n        {\n            d=s-n;\n            y+=d;\n            x-=d;\n            s=(x*b)+(y*a);\n            printf(\"%d\\n\",s);\n\n        }\n        else\n        {\n            printf(\"%d\\n\",s);\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int T,n,k,a,b,s,x,y,d;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        scanf(\"%d %d\",&n,&k);\n        if(n%k==0)\n        {\n            a=n/k;\n            b=n/k;\n        }\n        else\n        {\n            a=n/k;\n            b=(n/k)+1;\n        }\n        if(k%2==0)\n        {\n            x=k/2;\n            y=k/2;\n        }\n        else\n        {\n            x=k/2;\n            y=(k/2)+1;\n        }\n        s=(x*b)+(y*a);\n        if(s>n)\n        {\n            d=s-n;\n            y+=d;\n            x-=d;\n            s=(x*b)+(y*a);\n            printf(\"%d\\n\",s);\n        }\n        else\n        {\n            printf(\"%d\\n\",s);\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9064846416382253, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "efd4bac1f23306e395a8b072bce29826", "bug_code_uid": "fdc8b6091a4af109c52ac4ea41c0ddaf", "src_uid": "d2669f85bdb59715352c6bc3d7ba9652", "apr_id": "b32822901c049f009c18a105f2b4bddb", "difficulty": 800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,n,i,j,temp,min,diff;\n    int a[1001];\n    scanf(\"%d\",&t);\n    while (t--){\n        scanf(\"%d\",&n);\n        for (i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n\n        for (i = 0; i < n;++i)\n        {\n        for (j = i + 1; j < n; ++j)\n            {\n\n                if (a[i]>a[j])\n                {\n                    temp =  a[i];\n                    a[i] = a[j];\n                    a[j] = temp;\n\n                }\n\n            }\n\n        }\n        min=abs(a[0]-a[1]);\n        for (i=0;i<n;i++){\n            diff=abs(a[i]-a[i+1]);\n            if (diff<min){\n                min=diff;\n            }\n        }\n\n        printf(\"%d\\n\",min);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int t,n,i,j,temp,min,diff;\n    int a[1001];\n    scanf(\"%d\",&t);\n    while (t--){\n        scanf(\"%d\",&n);\n        for (i=0;i<n;i++){\n            scanf(\"%d\",&a[i]);\n        }\n\n        for (i = 0; i < n;i++)\n        {\n        for (j = i + 1; j < n; j++)\n            {\n\n                if (a[i]>a[j])\n                {\n                    temp =  a[i];\n                    a[i] = a[j];\n                    a[j] = temp;\n\n                }\n\n            }\n\n        }\n        \n       min=10000;\n        for (i=0;i<n-1;i++){\n            diff=abs(a[i]-a[i+1]);\n            if (diff<min){\n                min=diff;\n            }\n        }\n\n        printf(\"%d\\n\",min);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9837008628954937, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "8543e559bb9852d53d4f1f683d9a3b14", "bug_code_uid": "f2b77cf8229d12774620398de8ab7346", "src_uid": "a6cbf01d72d607ca95fe16df4fb16693", "apr_id": "1d80cb0cf9b8c53ab3d4d79ff6945f86", "difficulty": 800, "tags": ["data structures", "implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int n;\n        scanf(\"%d\",&n);\n        char s[100000];\n        char h[10]={0};\n        scanf(\"%s\",s) ;\n \t\tfor(int i=0;i<n;i++)\n \t\t{\n \t\t\tif(s[i]=='L')\n \t\t\t{\n \t\t\t    int j;\n \t\t\t    for( j=0;h[j]!=0;j++);\n \t\t\t    h[j]=1;\n \t\t\t}    \n \t\t\telse if(s[i]=='R')\n \t\t\t{\n \t\t\t    int j;\n \t\t\t    for( j=0;h[n-j]!=0;j++);\n \t\t\t    h[n-j]=1;\n \t\t\t}\n \t\t\telse\n \t\t\t{\n \t\t\t    int a=int(s[i]);\n \t\t\t    a=a-48;\n \t\t\t    h[a]=0;\n \t\t\t}\n \t\t}\n \t\tfor(int i=0;i<10;i++)\n \t\t{\n \t\tprintf(\"%d\",h[i]) ;\n \t\t}\n \t\t return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n        int n;\n        scanf(\"%d\",&n);\n        char s[100000];\n        char h[10]={0};\n        scanf(\"%s\",s) ;\n \t\tfor(int i=0;i<n;i++)\n \t\t{\n \t\t\tif(s[i]=='L')\n \t\t\t{\n \t\t\t    int j;\n \t\t\t    for( j=0;h[j]!=0;j++);\n \t\t\t    h[j]=1;\n \t\t\t}    \n \t\t\telse if(s[i]=='R')\n \t\t\t{\n \t\t\t    int j;\n \t\t\t    for( j=0;h[9-j]!=0;j++);\n \t\t\t    h[9-j]=1;\n \t\t\t}\n \t\t\telse\n \t\t\t{\n \t\t\t    int a=s[i];\n \t\t\t    a=a-48;\n \t\t\t    h[a]=0;\n \t\t\t}\n \t\t}\n \t\tfor(int i=0;i<10;i++)\n \t\t{\n \t\tprintf(\"%d\",h[i]) ;\n \t\t}\n \t\t return 0;\n}"}
{"similarity_score": 0.9695550351288056, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "d13e895c732a6e11386ffb7e640a384a", "bug_code_uid": "edbc1f9812cb9b80fcb28972b05ebcd3", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "caec11ae639dd48727390b5d414cc26e", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main() {\n    int t, i, a, count;\n    scanf(\"%i\", &t);\n    int answer[t];\n    int s;\n    for (int g = 0; g < t; g++) {\n        scanf(\"%i\", &s);\n        if (s < 10) \n            answer[g] = s;\n        else {\n            int x = (s / 9) * 10;\n            x += s % 9;\n            answer[g] = x;\n        }\n    }\n    for (i = 0; i < t; i++) {\n        printf(\"%i\\n\", answer[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main() {\n    int t, i, a, count;\n    scanf(\"%i\", &t);\n    int answer[t];\n    int s, x;\n    for (int g = 0; g < t; g++) {\n        scanf(\"%i\", &s);\n        if (s < 10) \n            answer[g] = s;\n        else {\n            --s;\n            x = (s / 9) * 10;\n            x += s % 9 + 1;\n            answer[g] = x;\n        }\n    }\n    for (i = 0; i < t; i++) {\n        printf(\"%i\\n\", answer[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7936842105263158, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "7ad4b33f1862a0e9afc1c17e31e27660", "bug_code_uid": "f27112c475654f273d9ebc33ab91a634", "src_uid": "288f147bb8a3c30b0bb712a01c65109b", "apr_id": "3a8ea481840419a060be260e7d5c10a6", "difficulty": 800, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<iostream>\r\n#include<cstdio>\r\n#include<cstdlib>\r\nusing namespace std;\r\n\r\nint data[200];\r\nvoid todo(){\r\n\tint n;\r\n\tint flag=1;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d\",&data[i]);\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int j = 1;j<=n;j++){\r\n\t\t\tif(i!=j && data[i]==data[j]){\r\n\t\t\t\tflag =0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\t\t\t\t\t\r\n\t\t}\r\n\t\tif(flag==0)\r\n\t\t\tbreak;\t\r\n\t}\r\n\tif(flag==0)\r\n\t\tprintf(\"NO\\n\");\r\n\telse\r\n\t\tprintf(\"YES\\n\");\r\n\t\r\n\t\r\n}\r\nint main(){\r\n\tint t ;\r\n\tscanf(\"%d\",&t);\r\n\tfor(int i=1;i<=t;i++){\r\n\t\ttodo();\r\n\t} \r\n\treturn 0;\r\n}", "fixed": "\r\n#include<stdio.h>\r\n\r\nint data[200];\r\nvoid todo(){\r\n\tint n;\r\n\tint flag=1;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%d\",&data[i]);\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int j = 1;j<=n;j++){\r\n\t\t\tif(i!=j && data[i]==data[j]){\r\n\t\t\t\tprintf(\"NO\\n\");\r\n\t\t\t\treturn;\r\n\t\t\t}\t\t\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\t\tprintf(\"YES\\n\");\r\n\t\r\n\r\n\t\r\n\t\r\n}\r\nint main(){\r\n\tint t ;\r\n\tscanf(\"%d\",&t);\r\n\tfor(int i=1;i<=t;i++){\r\n\t\ttodo();\r\n\t} \r\n\treturn 0;\r\n}"}
{"similarity_score": 0.047232472324723246, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "dbdfff2d4e471620dbf9bc7283d8310f", "bug_code_uid": "7211186e1bdb572b03b7065aa52fbd4c", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "321022e6d25b1bcaaa1599824a9d7066", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "    #include <bits/stdc++.h>\n     \n    #define all(x) (x).begin(), (x).end()\n    #define itn int\n    #define make_unique(x) sort((x).begin(), (x).end()); (x).erase(unique((x).begin(), (x).end()), (x).end())\n     \n    using namespace std;\n     \n    inline int nxt() {\n    \tint x;\n    \tcin >> x;\n    \treturn x;\n    }\n     \n    void solve() {\n    \tlong long x1 = nxt(), p1 = nxt();\n    \tlong long x2 = nxt(), p2 = nxt();\n    \tif (to_string(x1).length() + p1 != to_string(x2).length() + p2) {\n    \t\tcout << (to_string(x1).length() + p1 < to_string(x2).length() + p2 ? '<' : '>') << \"\\n\";\n    \t} else {\n    \t\twhile (p1 > p2) {\n    \t\t\tx1 *= 10;\n    \t\t\t--p1;\n    \t\t}\n    \t\twhile (p2 > p1) {\n    \t\t\tx2 *= 10;\n    \t\t\t--p2;\n    \t\t}\n    \t\tif (x1 == x2) {\n    \t\t\tcout << \"=\\n\";\n    \t\t} else {\n    \t\t\tcout << (x1 < x2 ? \"<\" : \">\") << \"\\n\";\n    \t\t}\n    \t}\n    }\n     \n    int main() {\n    \tios_base::sync_with_stdio(false);\n    \tcin.tie(nullptr);\n     \n    \tint t = nxt();\n    \twhile (t--) {\n    \t\tsolve();\n    \t}\n     \n    \treturn 0;\n    }\n\t \t\t\t\t \t\t\t \t  \t  \t   \t\t\t\t\t\t  \t", "fixed": "#include <stdio.h>\n\n\nint main(){\n\tint a;\n\tscanf(\"%d\",&a);\n\tfor(int i = 0;i < a;++i){\n\t\tint b;\n\t\tscanf(\"%d\",&b);\n\t\tint sum = 0;\n\t\tfor (int j = 0;j < b;++j){\n\t\t\tint c;\n\t\t\tscanf(\"%d\",&c);\n\t\t\tsum += c;\n\t\t}\n\t\tif(sum >= b)printf(\"%d\\n\",sum - b);\n\t\telse printf(\"1\\n\");\n\t}\n}\n\t  \t\t\t\t\t  \t\t  \t\t\t \t\t\t \t\t\t\t\t \t \t"}
{"similarity_score": 0.876, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "2f418be323f33ed1816d12f16313b9ca", "bug_code_uid": "c10582e9f5f58ca2b9bc9f702cd25d6d", "src_uid": "5e4defe52832cc0d36e7ea5d9f86f895", "apr_id": "9e1bd2fec715324202ab4fca9c5be2b0", "difficulty": 1000, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int a[3],i,n;\n    char c;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        getchar();\n        memset(a,0,sizeof(a));\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%c\",&c);\n            if(c=='A')\n            a[0]++;\n            if(c=='F')\n            a[1]++;\n            if(c=='I')\n            a[2]++;\n        }\n        if(a[2]==0)\n        printf(\"%d\\n\",a[0]);\n        else\n        printf(\"%d\\n\",a[2]);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int a[3],i,n,k;\n    char c;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        getchar();\n        memset(a,0,sizeof(a));k=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%c\",&c);\n            if(c=='A')\n            a[0]++;\n            if(c=='F')\n            a[1]++;\n            if(c=='I')\n            a[2]++;\n        }\n        if(a[0]>0&&a[2]==0)\n        k+=a[0];\n        else\n        if(a[2]==1)\n        k++;\n        printf(\"%d\\n\",k);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.46972269383135257, "equal_cnt": 15, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "ac857f9e3dccd0cc5bed6599a9bdd9e3", "bug_code_uid": "49c61d3de69029c53124af8f4c9f5612", "src_uid": "6cf43241b14e4d41ad5b36572f3b3663", "apr_id": "e3865ae9e53f4f448329a0da2bff0c4a", "difficulty": 1500, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\n#define N 1000\n\nint dsu[N];\n\nint find(int i) {\n\treturn dsu[i] < 0 ? i : (dsu[i] = find(dsu[i]));\n}\n\nvoid join(int i, int j) {\n\ti = find(i);\n\tj = find(j);\n\tif (i == j)\n\t\treturn;\n\tif (dsu[i] > dsu[j])\n\t\tdsu[i] = j;\n\telse {\n\t\tif (dsu[i] == dsu[j])\n\t\t\tdsu[i]--;\n\t\tdsu[j] = i;\n\t}\n}\n\nint main() {\n\tstatic char gg[N];\n\tstatic int kk[N];\n\tint n, m, k, i, j, x, y;\n\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\twhile (k--) {\n\t\tscanf(\"%d\", &i), i--;\n\t\tgg[i] = 1;\n\t}\n\tmemset(dsu, -1, n * sizeof *dsu);\n\twhile (m--) {\n\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\tjoin(i, j);\n\t}\n\tfor (i = 0; i < n; i++)\n\t\tkk[find(i)]++;\n\tx = y = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (dsu[i] < 0 && x < kk[i])\n\t\t\tx = kk[i];\n\t\tif (kk[i] == 1 && !gg[i])\n\t\t\ty++;\n\t}\n\tprintf(\"%d\\n\", x * y);\n\treturn 0;\n}\n", "fixed": "/* Coached by rainboy */\n#include <stdio.h>\n#include <string.h>\n\n#define N 1000\n\nint dsu[N];\n\nint find(int i) {\n\treturn dsu[i] < 0 ? i : (dsu[i] = find(dsu[i]));\n}\n\nvoid join(int i, int j) {\n\tint tmp;\n\n\ti = find(i);\n\tj = find(j);\n\tif (i == j)\n\t\treturn;\n\tif (dsu[i] > dsu[j])\n\t\ttmp = i, i = j, j = tmp;\n\tdsu[i] += dsu[j];\n\tdsu[j] = i;\n}\n\nint main() {\n\tstatic char gg[N];\n\tstatic int ii[N];\n\tint n, m, m_, k, h, i, i_, j;\n\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tfor (h = 0; h < k; h++)\n\t\tscanf(\"%d\", &ii[h]), ii[h]--;\n\tmemset(dsu, -1, n * sizeof *dsu);\n\tfor (h = 0; h < m; h++) {\n\t\tscanf(\"%d%d\", &i, &j), i--, j--;\n\t\tjoin(i, j);\n\t}\n\tfor (h = 0; h < k; h++)\n\t\tgg[find(ii[h])] = 1;\n\ti_ = -1;\n\tfor (i = 0; i < n; i++)\n\t\tif (gg[i] && (i_ == -1 || dsu[i_] > dsu[i]))\n\t\t\ti_ = i;\n\tfor (i = 0; i < n; i++)\n\t\tif (dsu[i] < 0 && !gg[i])\n\t\t\tjoin(i, i_);\n\tm_ = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (dsu[i] < 0) {\n\t\t\tint cnt = -dsu[i];\n\n\t\t\tm_ += cnt * (cnt - 1) / 2;\n\t\t}\n\tprintf(\"%d\\n\", m_ - m);\n\treturn 0;\n}\n"}
{"similarity_score": 0.4845005740528129, "equal_cnt": 22, "replace_cnt": 11, "delete_cnt": 4, "insert_cnt": 7, "fix_ops_cnt": 22, "lang": "GNU C11", "fix_code_uid": "2350b994c4105e6d4bd1cadd381c2779", "bug_code_uid": "7a91dc4732ce466128824bd93ea63b91", "src_uid": "97fa7e82566e3799e165ce6cbbf1da22", "apr_id": "e1326386016c477ca00309253d1a1ece", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint tc,n;\n\tscanf(\"%d\",&tc);\n\twhile(tc--){\n\t\tscanf(\"%d\",&n);\n\t\tchar s[n],t[n];\n\t\tscanf(\"%s %s\",s,t);\n\t\tint i=0,j=0,p=0,q=0;\n\t\tchar s1[3],t1[3];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(s[i]!=t[i]){ j++; s1[p++]=s[i]; \n\t\t\tt1[q++]=t[i]; }\n\t\t\tif(j>2) break;\n\t\t}\n\t\tif(j==2){\n\t\t\tif(t1[0]==t1[1] && s1[1]==s1[0])\n\t\t\tprintf(\"Yes\\n\");\n\t\t\telse printf(\"No\\n\");\n\t\t\t\n\t\t}\n\t\telse printf(\"No\\n\");\n\t}\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tint tc, n;\n\tscanf(\"%d\", &tc);\n\twhile (tc--)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tchar s[100005], t[100005];\n\t\tscanf(\"%s %s\", s, t);\n\t\tint i = 0, x = -1;\n\t\tchar temp;\n\t\tfor (i = 0; i < n; i++)\n\t\t{\n\t\t\tif (s[i] != t[i])\n\t\t\t{\n\t\t\t\tif (x == -1)\n\t\t\t\t\tx = i;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttemp = s[i];\n\t\t\t\t\ts[i] = t[x];\n\t\t\t\t\tt[x] = temp;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\tif (0 == strcmp(s, t))\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"No\\n\");\n\t}\n}"}
{"similarity_score": 0.7148936170212766, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "27cbc7bb99ab30ae4097b388670fdaab", "bug_code_uid": "358f99d725b1f53291ab8ea22be2b390", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "f95a717f8cdb7f8f8bbabbd8645527ae", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdbool.h>\n\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++){\n\n     int n;\n    scanf(\"%d\",&n);\n     int a[n],freq[n];\n    bool k=false;\n     int spot;\n    memset(freq,0,n*sizeof(int));\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n\n        //long int val=a[i];\n        freq[a[i]]++;\n\n        if(freq[a[i]]>=3){\n            spot=a[i];\n            //printf(\"%ld\\n\",spot);\n            k=true;\n        }\n    }\n\n    if(k){\n        printf(\"%d\\n\",spot);\n    }\n    else{\n        printf(\"-1\\n\");\n    }\n//    for(int i=0;i<n;i++){\n//       printf(\"%d \",freq[i]);\n//    }\n    }\n\n\nreturn 0;\n}\n\t\t\t \t  \t\t\t\t \t  \t   \t\t \t   \t \t \t", "fixed": "#include<stdio.h>\n\n#include<stdbool.h>\n\n\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++){\n\n     int n;\n    scanf(\"%d\",&n);\n     int a[n],freq[200000]={0};\n    bool k=false;\n     int spot;\n    //memset(freq,0,n*sizeof(int));\n    for(int i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n\n\n//        freq[a[i]]++;\n//\n//        if(freq[a[i]]>=3){\n//            spot=a[i];\n//\n//            k=true;\n//        }\n    }\n       for(int i=0;i<n;i++){\n\n\n\n        freq[a[i]]++;\n\n        if(freq[a[i]]==3){\n            spot=a[i];\n\n            k=true;\n            break;\n        }\n    }\n\n    if(k){\n        printf(\"%d\\n\",spot);\n    }\n    else{\n        printf(\"-1\\n\");\n    }\n\n    }\n\n\nreturn 0;\n}\n\t\t  \t\t\t \t \t \t\t\t\t   \t \t\t \t\t\t\t \t"}
{"similarity_score": 0.5205338809034907, "equal_cnt": 25, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 9, "fix_ops_cnt": 25, "lang": "GNU C11", "fix_code_uid": "948357742bcad617fa67424f3edd135c", "bug_code_uid": "a6d60cd02db0f26f9515a9b1f34888b7", "src_uid": "b9771f941967b030aa13d0bfcc4d0a61", "apr_id": "5844de6b0fc840f3a67c07ce46bc33b5", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<conio.h>\r\nint main()\r\n{\r\n    int n,q;\r\n    char selection1[10];\r\n    int selection2[10];\r\n    scanf(\"%d%d\",&n,&q);\r\n    long long arr[n],sum=0;\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        scanf(\"%lld\",&arr[i]);\r\n        sum+=arr[i] ;\r\n    }\r\n\r\n\r\n\r\n    while(q--)\r\n    {\r\n        int typ;\r\n        scanf(\"%d\",&typ);\r\n        if(typ==1)\r\n        {\r\n            int i,x;\r\n            scanf(\"%d%d\",&i,&x);\r\n            i=i-1;\r\n            if(x<arr[i])\r\n                sum=sum-(arr[i]-x) ;\r\n            else if(x>arr[i])\r\n                sum=sum+(x-arr[i]);\r\n            else if (x==arr[i])\r\n                sum=sum ;\r\n            arr[i]=x;\r\n            printf(\"%lld\\n\",sum);\r\n\r\n        }\r\n        else if(typ==2)\r\n        {\r\n            int z;\r\n            scanf(\"%d\",&z);\r\n            sum=z*n;\r\n            for(int i=0; i<n; i++)\r\n            {\r\n                arr[i]=z;\r\n            }\r\n            printf(\"%lld\\n\",sum);\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<conio.h>\r\nint main()\r\n{\r\n    long long n,q,last_val,last_pos=-1;;\r\n\r\n    scanf(\"%lld%lld\",&n,&q);\r\n    long long arr[n],temp[n],sum=0;\r\n    for(long long i=0; i<n; i++)\r\n    {\r\n        scanf(\"%lld\",&arr[i]);\r\n        temp[i]=0;\r\n        sum+=arr[i] ;\r\n    }\r\n\r\n\r\n\r\n   for(long long j=1;j<=q;j++)\r\n    {\r\n        int typ;\r\n        long long i,x;\r\n        scanf(\"%d\",&typ);\r\n        if(typ==1)\r\n        {\r\n\r\n            scanf(\"%lld%lld\",&i,&x);\r\n            i=i-1;\r\n            if(temp[i]>last_pos)\r\n                sum=sum-(arr[i]-x) ;\r\n            else\r\n                sum=sum-last_val+x;\r\n\r\n            arr[i]=x;\r\n            temp[i]=j;\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            scanf(\"%lld\",&x);\r\n            sum=x*n;\r\n            last_val=x;\r\n            last_pos=j;\r\n\r\n        }\r\n        printf(\"%lld\\n\",sum) ;\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9965635738831615, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "5b1c277e084e2efafc0c6fd35bd2ccf5", "bug_code_uid": "9352f6980e76f7a7d874b00ed7d73fc0", "src_uid": "e80088bee9c0df6adf280f8ffbeaa4a9", "apr_id": "550a28c30e86fec43575c0aa47567ff1", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(i==j)\n                printf(\"%d\",k);\n            else\n                printf(\"0\");\n        }\n        printf(\"\\n\");\n    }\n    return(0);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k,i,j;\n    scanf(\"%d %d\",&n,&k);\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(i==j)\n                printf(\"%d \",k);\n            else\n                printf(\"0 \");\n        }\n        printf(\"\\n\");\n    }\n    return(0);\n}\n"}
{"similarity_score": 0.47647409172126265, "equal_cnt": 22, "replace_cnt": 14, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 21, "lang": "GNU C11", "fix_code_uid": "0a234795663e2253932ccd0455e9c507", "bug_code_uid": "63291b0a9710e7b9d64bf4cae1e5a34d", "src_uid": "a7e98ed8ee1b0a4fd03dfcd222b68c6f", "apr_id": "cf240a8306aaa18f60a9395d038724b9", "difficulty": 800, "tags": ["two pointers", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int number;\n    scanf(\"%d\",&number);\n    int a[number];\n    int loop,loop2,temp,loop3;\n    for(loop=0; loop<number; loop++)\n    {\n        scanf(\"%d\",&a[loop]);\n    }\n    for(loop=0; loop<number; loop++)\n    {\n        for(loop2=0; loop2<number; loop2++)\n        {\n            if(a[loop]>a[loop2])\n            {\n                temp=a[loop];\n                a[loop]=a[loop2];\n                a[loop2]=temp;\n            }\n        }\n    }\n    int Sereja=0,Dima=0;\n    for(loop=0; loop<number; loop++)\n    {\n        if(loop%2==0)\n        {\n            Sereja=Sereja+a[loop];\n        }\n        else\n        {\n            Dima=Dima+a[loop];\n        }\n    }\n    printf(\"%d %d\",Sereja,Dima);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int number;\n    scanf(\"%d\",&number);\n    int a[number];\n    int loop;\n    for(loop=0; loop<number; loop++)\n    {\n        scanf(\"%d\",&a[loop]);\n    }\n    int ser=0,dim=0;\n    int count1,count2;\n    for(loop=0,count1=0,count2=number-1; loop<number; loop++)\n    {\n        if(count1>count2)\n        {\n            break;\n        }\n        if(a[count1]>=a[count2])\n        {\n            if(loop%2==0)\n            {\n                ser=ser+a[count1];\n            }\n            else\n            {\n                dim=dim+a[count1];\n            }\n            count1++;\n        }\n        else if(a[count1]<=a[count2])\n        {\n            if(loop%2==0)\n            {\n                ser=ser+a[count2];\n            }\n            else\n            {\n                dim=dim+a[count2];\n            }\n            count2--;\n        }\n    }\n    printf(\"%d %d\",ser,dim);\n    return 0;\n}"}
{"similarity_score": 0.9595375722543352, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "e8056d197dfe686a1fb30db704e49615", "bug_code_uid": "5971f4f450232760358629c781b6d700", "src_uid": "5139d222fbbfa70d50e990f5d6c92726", "apr_id": "d3baf60afcbc5809b9bd82752bc9de00", "difficulty": 1100, "tags": ["brute force", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n\t\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\n\t\tint pos[5000] = {};\n\n\t\tint n; \n\t\tscanf(\"%d\", &n );\n\n\t\tbool ok = 0;\n\t\tfor(int i = 1;i <= n; i++){\n\t\t\tint foo;\n\t\t\tscanf(\"%d\", &foo );\n\n\t\t\tif(pos[foo] && i - pos[foo] >= 2){\n\t\t\t\tok = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tpos[foo] = i;\n\t\t\t}\n\t\t}\n\n\t\tputs(ok ? \"YES\" : \"NO\");\t\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n\t\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\n\t\tint pos[6000] = {};\n\n\t\tint n; \n\t\tscanf(\"%d\", &n );\n\n\t\tint ok = 0;\n\t\tfor(int i = 1;i <= n; i++){\n\t\t\tint foo;\n\t\t\tscanf(\"%d\", &foo );\n\n\t\t\tif(pos[foo]){\n\t\t\t\tif(i - pos[foo] >= 2)\n\t\t\t\t\tok = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tpos[foo] = i;\n\t\t\t}\n\t\t}\n\t\tputs(ok ? \"YES\" : \"NO\");\t\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9747899159663865, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "7fe0ce3bc77f5364be2fb1609fe39110", "bug_code_uid": "387514eb6adddfab94f210d0b4b4a60a", "src_uid": "513234db1bab98c2c2ed6c7030c1ac72", "apr_id": "2e47ebe57c4689ee1901108ecdb80ccd", "difficulty": 1200, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <malloc.h>\n\nvoid check(int *counts)\n{\n    int s1, s2;\n    int i;\n    if(counts[5] > 0 || counts[7] > 0)\n    {\n        printf(\"-1\\n\");\n        return;\n    }\n    s1 = (counts[1] == counts[2] + counts[3]);\n    s2 = (counts[1] == counts[4] + counts[6]);\n    if(s1 && s2)\n    {\n        for(i=0; i<counts[4]; i++)\n            printf(\"1 2 4\\n\");\n        for(i=0; i<counts[3]; i++)\n            printf(\"1 3 6\\n\");\n        for(i=0; i<counts[1]-counts[3]-counts[4]; i++)\n            printf(\"1 2 6\\n\");\n    }\n    else\n    {\n        printf(\"-1\\n\");\n    }\n}\n\nint main()\n{\n    int n, i;\n    int * nums;\n    int counts[8];\n    scanf(\"%d\", &n);\n    nums = (int *)malloc(sizeof(int)*n);\n    for(i=0; i<8; i++)\n        counts[i] = 0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &nums[i]);\n        counts[nums[i]]++;\n    }\n    check(counts);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <malloc.h>\n\nvoid check(int *counts)\n{\n    int s1, s2, s3;\n    int i;\n    if(counts[5] > 0 || counts[7] > 0)\n    {\n        printf(\"-1\\n\");\n        return;\n    }\n    s1 = (counts[1] == counts[2] + counts[3]);\n    s2 = (counts[1] == counts[4] + counts[6]);\n    s3 = (counts[2] >= counts[4]);\n    if(s1 && s2 && s3)\n    {\n        for(i=0; i<counts[4]; i++)\n            printf(\"1 2 4\\n\");\n        for(i=0; i<counts[3]; i++)\n            printf(\"1 3 6\\n\");\n        for(i=0; i<counts[1]-counts[3]-counts[4]; i++)\n            printf(\"1 2 6\\n\");\n    }\n    else\n    {\n        printf(\"-1\\n\");\n    }\n}\n\nint main()\n{\n    int n, i;\n    int * nums;\n    int counts[8];\n    scanf(\"%d\", &n);\n    nums = (int *)malloc(sizeof(int)*n);\n    for(i=0; i<8; i++)\n        counts[i] = 0;\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\", &nums[i]);\n        counts[nums[i]]++;\n    }\n    check(counts);\n    return 0;\n}"}
{"similarity_score": 0.8296529968454258, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "b5b072566afa84fcb3d3c5589333438f", "bug_code_uid": "0f6afcfa902a5de2b5e29b04ebeff0a1", "src_uid": "2545b6af730f99193041a8810b728cb3", "apr_id": "4d9317f469f9728b6363bf8e0b3905a9", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n, bm;\n    scanf(\"%d\",&n);\n    \n    int a[n];\n    for(int i = 0; i < n; i++){\n        scanf(\"%d%d\", &a[i], &a[i]);\n    }\n    scanf(\"%d\",&bm);\n    \n    for(int i = 0; i < n; i++){\n        if(bm <= a[i])\n            break;\n        n--;\n    }\n    printf(\"%d\", n);\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n    int n, bm;\n    scanf(\"%d\",&n);\n    \n    int a[n];\n    for(int i = 0; i < n; i++){\n        scanf(\"%d%d\", &a[i], &a[i]);\n    }\n    scanf(\"%d\",&bm);\n    \n    int i;\n    \n    for( i = 0; i < n; i++){\n        if(bm <= a[i])\n            break;\n    }\n    printf(\"%d\", n - i);\n    return 0;\n}"}
{"similarity_score": 0.8364888123924269, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "0a457defe435aeb6b6da1847ecb99bc7", "bug_code_uid": "4a9e7a77beb8e04aa0e4ff3e05875b07", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "dd37d4015e6d6bf9fba7258125b9e27d", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n    int temp=0;\n   int t,i,j,k;\n   scanf(\"%d\",&t);\n   int a[t];\n   for(i =0; i < t; i++){\n        scanf(\"%d\",&a[i]);\n\n   }\n   for(i = 0; i < t;i++){\n        if(a[i]%2 == 0){\n            for(j = 0; j < (a[i]/2);j++){\n\n                temp = (10*temp)+1;\n            }\n        }\n\n        else{\n           for(j = 0; j < (a[i]/2);j++){\n                if(j==0)\n                    temp=7;\n                else\n                temp = (10*temp)+1;\n            }\n\n        }\n        printf(\"%d\\n\",temp);\n        temp=0;\n   }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include<math.h>\n\nint main()\n{\n\n   int t,i,j,k;\n   scanf(\"%d\",&t);\n   int a[t];\n   for(i =0; i < t; i++){\n        scanf(\"%d\",&a[i]);\n\n   }\n   for(i = 0; i < t;i++){\n        if(a[i]%2 == 0){\n            for(j = 0; j < (a[i]/2);j++){\n\n                printf(\"1\");\n            }\n        }\n\n        else{\n           for(j = 0; j < (a[i]/2);j++){\n                if(j==0)\n                    printf(\"7\");\n                else\n                printf(\"1\");\n            }\n\n        }\n        printf(\"\\n\");\n\n   }\n    return 0;\n}\n"}
{"similarity_score": 0.9943630214205186, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "541184ab5b0be0b62d8a22f9c2326485", "bug_code_uid": "ab28303c394e3f7604804b34152e630f", "src_uid": "ef9ff63d225811868e786e800ce49c92", "apr_id": "c3be5871b9f899d57c9607690cb5c7f2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,largest=0,smallest=10000,li,si,count;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\t//scaning and detecting\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]>largest)\n\t\t{largest=a[i];\n\t\tli=i;}\n\t\telse if(a[i]<=smallest)\n\t\t{smallest=a[i];\n\t\tsi=i;}\n\t\t\t\t\n\t}\n\t\n\t\n\t//printf(\"%d%d%d%d\",largest,li,smallest,si);\n\t//geting largest at first;\n\tif(li>si)\n\t{\n\t\tcount=li+n-si-2;\n\t}\n\telse\n\t\tcount=li+n-si-1;\n\tprintf(\"%d\",count);\n\t\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,largest=0,smallest=10000,li,si,count;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\t//scaning and detecting\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]>largest)\n\t\t{largest=a[i];\n\t\tli=i;}\n\t\t if(a[i]<=smallest)\n\t\t{smallest=a[i];\n\t\tsi=i;}\n\t\t\t\t\n\t}\n\t\n\t\n\t//printf(\"%d%d%d%d\",largest,li,smallest,si);\n\t//geting largest at first;\n\t if(li>si)\n\t{\n\t\tcount=li+n-si-2;\n\t}\n\telse\n\t\tcount=li+n-si-1;\n\tprintf(\"%d\",count);\n\t\n}"}
{"similarity_score": 0.1337099811676083, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "ba6352b0794a2bb84304fba3c50f64d3", "bug_code_uid": "ebb934e2a7abad734dae13f99ad3286d", "src_uid": "44162a97e574594ac0e598368e8e4e14", "apr_id": "e3745ed69b7f7d2f6aa3570e8c0c87b2", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid swap(int s[],int st,int ed)\n{\n    int mid = (st+ed)/2,temp;\n    while(st<=mid)\n    {\n        temp = s[st];\n        s[st] = s[ed];\n        s[ed] = temp;\n        st++;\n        ed--;\n    }\n}\nint main()\n{\n   int n,m,j,st,ed,temp,k = 1;\n   scanf(\"%d%d\",&n,&m);\n   int s[n+1],p[n+1];\n   for(j = 1;j<=n;j++)\n    scanf(\"%d\",&s[j]),p[j] = s[j];\n   while(k<=m)\n   {\n       scanf(\"%d%d%d\",&st,&ed,&temp);\n       swap(s,st,ed);\n       if(s[temp]==p[temp])\n        printf(\"Yes\\n\");\n       else puts(\"No\");\n       k++;\n       swap(s,st,ed);\n   }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main(void)\n{\n   int n,m,j,st,ed,temp,k = 1;\n   scanf(\"%d%d\",&n,&m);\n   int s[n+1];\n   for(j = 1;j<=n;j++)\n    scanf(\"%d\",&s[j]);\n   while(k<=m)\n   {\n       int low = 0,upr = 0;\n       scanf(\"%d%d%d\",&st,&ed,&temp);\n       for(j = st;j<=ed;j++)\n       {\n           if(s[j]<s[temp])\n            low++;\n           else if(s[j]>s[temp])\n            upr++;\n       }\n       if(low==temp-st)\n        printf(\"Yes\\n\");\n       else puts(\"No\");\n       k++;\n   }\n    return 0;\n}\n"}
{"similarity_score": 0.11952744961779013, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "a13408089c0eb914be462a4b5bcce705", "bug_code_uid": "3a435e8e5ca83e8885cdbbab9b61c153", "src_uid": "cf1eb164c4c970fd398ef9e98b4c07b1", "apr_id": "ac0b27aa0a93dc2ac38b164b99ccdee6", "difficulty": 900, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 1000\n\nint compare(const void *a, const void *b) {\n\tchar ca = *(char *) a;\n\tchar cb = *(char *) b;\n\n\treturn ca - cb;\n}\n\nint root(char *s, char *t) {\n\tstatic char used[N], aa[N + 1], bb[N + 1];\n\tint cnt1, cnt2, n, m, i, j, k;\n\n\tn = strlen(s);\n\tcnt1 = 0;\n\tfor (i = 0; i < n; i++)\n\t\tif (!used[s[i] - 'a']) {\n\t\t\taa[cnt1++] = s[i];\n\t\t\tused[s[i] - 'a'] = 1;\n\t\t}\n\tm = strlen(s);\n\tcnt2 = 0;\n\tfor (j = 0; j < n; j++)\n\t\tif (!used[t[j] - 'a']) {\n\t\t\tbb[cnt2++] = t[j];\n\t\t\tused[t[j] - 'a'] = 1;\n\t\t}\n\tif (cnt1 != cnt2)\n\t\treturn 0;\n\tfor (k = 0; k < cnt1; k++)\n\t\tif (s[k] != t[k])\n\t\t\treturn 0;\n\treturn 1;\n}\n\nint main() {\n\tstatic char cc[N][N + 1];\n\tint n, i, j, k, l;\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++) {\n\t\tstatic char s[N + 1];\n\t\tint l;\n\n\t\tscanf(\"%s\", s);\n\t\tl = strlen(s);\n\t\tqsort(s, l, sizeof *s, compare);\n\t\tfor (j = 0; j < l; j++)\n\t\t\tcc[i][j] = s[j];\n\t}\n\tfor (k = 0; k < n; k++)\n\t\tfor (l = 0; l < n && l != k; l++)\n\t\t\tif (strcmp(cc[k], cc[l]) == 0 || root(cc[k], cc[l]))\n\t\t\t\tn--;\n\tprintf(\"%d\\n\", n);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tstatic char used[1 << 26];\n\tint n, cnt;\n\n\tscanf(\"%d\", &n);\n\tcnt = 0;\n\twhile (n--) {\n\t\tstatic char s[1024];\n\t\tint l, i, b;\n\n\t\tscanf(\"%s\", s);\n\t\tl = strlen(s);\n\t\tb = 0;\n\t\tfor (i = 0; i < l; i++)\n\t\t\tb |= 1 << (s[i] - 'a');\n\t\tif (!used[b]) {\n\t\t\tused[b] = 1;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.3963344788087056, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "5a4af7379cf17acba5726cc1025c5336", "bug_code_uid": "5fc175a032945d3671e21a96cb54dd01", "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842", "apr_id": "0b31a9afb84fe42817582f0d35182692", "difficulty": 800, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,a,b;\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a==b) \n\t\t         printf(\"0\\n\");\n\t\telse \n\t\t{\n\t\t\tif(a<b&&(b-a)%2==0) \n\t\t\t         printf(\"1\\n\");\n\t\t\telse if(a>b&&(a-b)%2==0) \n\t\t\t         printf(\"1\\n\");\n\t\t\telse \n\t\t\t         printf(\"2\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main() \n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        if(a==b)\n        {\n            printf(\"0\\n\");\n        }\n        else if(a<b)\n        {\n            if((b-a)&1)\n            {\n                printf(\"1\\n\");\n            }\n            else printf(\"2\\n\");\n        }\n        else\n        {\n            if((a-b)%2==0)\n            {\n                printf(\"1\\n\");\n            }\n            else\n            {\n                printf(\"2\\n\");\n            }\n        }\n    }\n\treturn 0;\n}"}
{"similarity_score": 0.720616570327553, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "d61529de2448b17a820504d8cd469d96", "bug_code_uid": "3f4d6c84f4f9ee1a17dee10d29da0fcc", "src_uid": "ef1448a744f67347183479c697aa87e1", "apr_id": "78e78f8781c9b373bcda8f51736b6a08", "difficulty": 800, "tags": ["brute force", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, i, j, k, n, a[100005], max;\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--){\r\n        scanf(\"%d\", &n);\r\n        max = 0;\r\n        for(i = 1; i <= n; i++){\r\n            scanf(\"%d\", &a[i]);\r\n            if(i != n && a[i] > max){\r\n                max = a[i];\r\n            }\r\n        }\r\n        if(a[n] < max){\r\n            printf(\"YES\\n\");\r\n        } else {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, i, j, k, n, a[100005], max, flag;\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--){\r\n        scanf(\"%d\", &n);\r\n        max = 0;\r\n        flag = 0;\r\n        for(i = 1; i <= n; i++){\r\n            scanf(\"%d\", &a[i]);\r\n            if(i == 1){\r\n                max = a[i];\r\n            } else {\r\n                if(a[i] < a[i-1]){\r\n                    flag = 1;\r\n                }\r\n            }\r\n        }\r\n        if(flag == 1){\r\n            printf(\"YES\\n\");\r\n        } else {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.34088200238379024, "equal_cnt": 23, "replace_cnt": 16, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 22, "lang": "GNU C", "fix_code_uid": "9022124a3c9f1bc34fc4018a7a818046", "bug_code_uid": "9c3a952b1714b29e4acc1c4ebeaec59b", "src_uid": "79d26192a25cd51d27e916adeb97f9d0", "apr_id": "dd439d17b33748a751155e0849d59d11", "difficulty": 1700, "tags": ["dp", "constructive algorithms", "number theory", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define ll int\n#define MAX 5000001\n\n\nll primefactors[5000002],primediv[5000002];\nint isprime[MAX];\n\n\nvoid sieve()\n{\nll i,j,p,m;\n\nfor(i=2;i<=MAX;i++)\nisprime[i]=1;\n\n\nprimediv[2]=2;\nisprime[0]=0;\nisprime[1]=0;\n\nfor(i=4;i<=MAX;i+=2)\n{\n    isprime[i]=0;\n    primediv[i]=2;\n}\n\nfor(i=3;i<=MAX;i+=2)\n{\n    if(isprime[i])\n    {\n        primediv[i]=i;\n        \n        for(j=i*i;j<=MAX;j+=i)\n        {\n            isprime[j]=0;\n            primediv[j]=i;\n        }\n    }\n}\n\n}\n\nint main()\n{\nll i,j,a,b,t,x,y;\n\nsieve();\n\nfor(i=2;i<=MAX;i++)\n{\n    primefactors[i]=primefactors[i/primediv[i]]+1;\n   \n}\n\nfor(i=2;i<=MAX;i++)\nprimefactors[i]+=primefactors[i-1];\n\n\nscanf(\"%lld\",&t);\n\nwhile(t--)\n{\n    scanf(\"%lld %lld\",&a,&b);\nprintf(\"%lld\\n\",primefactors[a]-primefactors[b]);\n}\n\n//for(i=2;i<=MAX;i++)\n//cout<<i<<\" \"<<isprime[i]<<\"\\n\";\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\n#define MAX 5000001\n\n\nint primefactors[5000002],primediv[5000002];\nint isprime[5000002];\n\n\nvoid sieve()\n{\nint i,j;\n\nfor(i=2;i<=MAX;i++)\nisprime[i]=1;\n\n\nprimediv[2]=2;\nisprime[0]=0;\nisprime[1]=0;\n\nfor(i=4;i<=MAX;i+=2)\n{\n    isprime[i]=0;\n    primediv[i]=2;\n}\n\nfor(i=3;i<=MAX;i+=2)\n{\n    if(isprime[i])\n    {\n        primediv[i]=i;\n        \n        for(j=i*2;j<=MAX;j+=i)\n        {\n            isprime[j]=0;\n            primediv[j]=i;\n        }\n    }\n}\n\n}\n\nint main()\n{\nint i,j,a,b,t,x,y;\n\nsieve();\n\nfor(i=2;i<=MAX;i++)\n{\n    primefactors[i]=primefactors[i/primediv[i]]+1;\n   \n}\n\nfor(i=2;i<=MAX;i++)\nprimefactors[i]+=primefactors[i-1];\n\n\nscanf(\"%d\",&t);\n\nwhile(t--)\n{\n    scanf(\"%d %d\",&a,&b);\nprintf(\"%d\\n\",primefactors[a]-primefactors[b]);\n}\n\n//for(i=2;i<=MAX;i++)\n//cout<<i<<\" \"<<isprime[i]<<\"\\n\";\n\nreturn 0;\n}"}
{"similarity_score": 0.9287671232876712, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "7825c89b6ac9a2d776a9e1c0e3e1e0cf", "bug_code_uid": "7a6329012320baadff9f5b9e74a646f7", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "cf511b2b4ef87c078de2010ac7559677", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,a,i,j,m=0,sum=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a==5)\n        {\n            m++;\n            sum++;\n        }\n    }\n    if(sum%9==0 && n!=m && sum!=0)\n    {\n        for(i=1;i<=m;i++)\n        {\n            printf(\"5\");\n        }\n        for(i=1;i<=n-m;i++)\n        {\n            printf(\"0\");\n        }\n    }\n    else if(m>9)\n    {\n        for(i=1;i<=9*(m/9);i++)\n        {\n            printf(\"5\");\n        }\n        for(i=1;i<=n-m;i++)\n        {\n            printf(\"0\");\n        }\n    }\n    else if(n==m)\n    {\n        printf(\"-1\");\n    }\n    else\n    {\n        printf(\"0\");\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n    int n,a,i,j,m=0,sum=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        if(a==5)\n        {\n            m++;\n            sum++;\n        }\n    }\n    if(sum%9==0 && n!=m && sum!=0)\n    {\n        for(i=1;i<=m;i++)\n        {\n            printf(\"5\");\n        }\n        for(i=1;i<=n-m;i++)\n        {\n            printf(\"0\");\n        }\n    }\n    else if(n==m)\n    {\n        printf(\"-1\");\n    }\n    else if(m>9)\n    {\n        for(i=1;i<=9*(m/9);i++)\n        {\n            printf(\"5\");\n        }\n        for(i=1;i<=n-m;i++)\n        {\n            printf(\"0\");\n        }\n    }\n    else\n    {\n        printf(\"0\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.9974683544303797, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "747601f22b523bc103c1c06f940f3a1b", "bug_code_uid": "a45c09b5a64aa562245b7e1772dafe49", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "2157ca5a252179da3264c8ecc7024af0", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;++t)\n    {\n        scanf(\"%d\",&n);\n        if(n%2==0)\n        {\n            for(int j=1;j<=n/2;++j)\n                printf(\"1\");\n        }\n        else\n        {\n            printf(\"7\");\n            for(int l=1;l<=(n-3)/2;++l)\n                printf(\"1\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;++i)\n    {\n        scanf(\"%d\",&n);\n        if(n%2==0)\n        {\n            for(int j=1;j<=n/2;++j)\n                printf(\"1\");\n        }\n        else\n        {\n            printf(\"7\");\n            for(int l=1;l<=(n-3)/2;++l)\n                printf(\"1\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9971949509116409, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ebc0138d78fde220ccb579cf9621111c", "bug_code_uid": "37de7a2f3a2fc5de16bc9f214d9649bb", "src_uid": "90f08c2c8f7575330639fdd158bc8e6b", "apr_id": "d7c034a3227dd8316b26df501f33724a", "difficulty": 2100, "tags": ["greedy", "constructive algorithms", "two pointers", "number theory", "math", "ternary search"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tstatic long long pre[1 << 20];\n\tstatic long long fac[100];\n\tint n, i, j, a, fn;\n\tlong long ans=1e18;\n\tscanf(\"%d\",&n);\n\tfor(i = 1; i <= n; i ++) {\n\t\tscanf(\"%d\", &a);\n\t\tpre[i] = a + pre[i - 1];\n\t}\n\tif(pre[n] == 1) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tlong long x = pre[n];\n\tfor (i = 2; (long long)i * i <= x; i ++) {\n\t\tif (x % i == 0) {\n\t\t\tfac[++ fn] = i;\n\t\t\tdo {\n\t\t\t\tx /= i;\n\t\t\t} while (x % i == 0);\n\t\t}\n\t}\n\tif (x > 1) {\n\t\tfac[++ fn] = x;\n\t}\n\tfor (i = 1; i <= fn; i ++)\n\t{\n\t\tlong long fi = fac[i];\n\t\tlong long tmp = 0;\n\t\tfor(j=1;j<=n;j++) {\n\t\t\tlong long x = pre[j] % fi;\n\t\t\ttmp += x < fi - x ? x : fi - x;\n\t\t}\n\t\tans = ans > tmp ? tmp : ans;\n\t}\n\tprintf(\"%I64d\\n\", ans);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tstatic long long pre[1 << 20];\n\tstatic long long fac[100];\n\tint n, i, j, a, fn = 0;\n\tlong long ans=1e18;\n\tscanf(\"%d\",&n);\n\tfor(i = 1; i <= n; i ++) {\n\t\tscanf(\"%d\", &a);\n\t\tpre[i] = a + pre[i - 1];\n\t}\n\tif(pre[n] == 1) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tlong long x = pre[n];\n\tfor (i = 2; (long long)i * i <= x; i ++) {\n\t\tif (x % i == 0) {\n\t\t\tfac[++ fn] = i;\n\t\t\tdo {\n\t\t\t\tx /= i;\n\t\t\t} while (x % i == 0);\n\t\t}\n\t}\n\tif (x > 1) {\n\t\tfac[++ fn] = x;\n\t}\n\tfor (i = 1; i <= fn; i ++)\n\t{\n\t\tlong long fi = fac[i];\n\t\tlong long tmp = 0;\n\t\tfor(j=1;j<=n;j++) {\n\t\t\tlong long x = pre[j] % fi;\n\t\t\ttmp += x < fi - x ? x : fi - x;\n\t\t}\n\t\tans = ans > tmp ? tmp : ans;\n\t}\n\tprintf(\"%I64d\\n\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.5069222577209798, "equal_cnt": 11, "replace_cnt": 6, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "b49e92e7ab5f6f3ed5a345ccd890753b", "bug_code_uid": "8377e46e806aa3cb33d59983ea7022eb", "src_uid": "44162a97e574594ac0e598368e8e4e14", "apr_id": "240e4ae7cec90f6cb76b00e50b5df4f1", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\n\tint a ,b ,i ,j ,temp;\n\tscanf(\"%d%d\", &a ,&b);\n\tint real[a] ,dummy[a];\n\tfor(i=0;i<a;i++){\n\t\t scanf(\"%d\",&real[i]);\n\t     dummy[i]=real[i];\n\t}\n\tint num[3];\n\twhile(b--){\n\t\tfor(i=0;i<3;i++) scanf(\"%d\", &num[i]);\n\t\tfor(i=num[0]-1;i<num[1]-1;i++){\n\t\t\tfor(j=i+1;j<num[1];j++){\n\t\t\t\tif(dummy[i]>dummy[j]){\n\t\t\t\t\ttemp=dummy[j];\n\t\t\t\t\tdummy[j]=dummy[i];\n\t\t\t\t\tdummy[i]=temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t   \tif(real[num[2]-1]==dummy[num[2]-1]) printf(\"Yes\\n\");\n\t   \telse printf(\"No\\n\");\n\t   \tfor(i=0;i<a;i++) dummy[i]=real[i];\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\n\tint a ,b ,i ,c=0;\n\tscanf(\"%d%d\", &a ,&b);\n\tint real[a];\n\tfor(i=0;i<a;i++){\n\t\t scanf(\"%d\",&real[i]);\n\t}\n\tint num[3];\n\twhile(b--){\n\t\tc=0;\n\t\tfor(i=0;i<3;i++) scanf(\"%d\", &num[i]);\n\t    for(i=num[0]-1;i<num[1];i++) {\n\t    \tif(real[num[2]-1]>real[i]) {\n\t    \tc++;\n\t\t\t}\t\n\t\t}\n\t\tif(c+num[0]==num[2]) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9892933618843683, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "47e0ba88fe7fda9fb19febd86e3fd479", "bug_code_uid": "f2a664eb54b98ef189a84750bb5fe193", "src_uid": "55383f13c8d097408b0ccf5653c4563d", "apr_id": "4cb4f924c9d8c2eb32a3e21059bac8af", "difficulty": 900, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint abs(int a)\n{\n    if (a>=0)\n    {\n        return a;\n    }\n    return -a;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int a[n];\n    int i;\n    for (i=0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for (i=0; i<n; i++)\n    {\n        int min;\n        int max;\n        if (i==0)\n        {\n            min=abs(a[1]-a[0]);\n            max=abs(a[0]-a[n-1]);\n            \n        }\n        if (i==n-1)\n        {\n            min=abs(a[n-1]-a[n-2]);\n            max=abs(a[0]-a[n-1]);\n        }\n        else\n        {\n            if (abs(a[i]-a[i-1])<=abs(a[i]-a[i+1]))\n            {\n                min=abs(a[i]-a[i-1]);\n            }\n            else min=abs(a[i]-a[i+1]);\n            if (abs(a[i]-a[0])<=abs(a[i]-a[n-1]))\n            {\n                max=abs(a[i]-a[n-1]);\n            }\n            else max=abs(a[i]-a[0]);\n        }\n        printf(\"%d %d\\n\", min, max);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint abs(int a)\n{\n    if (a>=0)\n    {\n        return a;\n    }\n    return -a;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int a[100000];\n    int i;\n    for (i=0; i<n; i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for (i=0; i<n; i++)\n    {\n        int min;\n        int max;\n        if (i==0)\n        {\n            min=abs(a[1]-a[0]);\n            max=abs(a[0]-a[n-1]);\n            \n        }\n        else\n        if (i==n-1)\n        {\n            min=abs(a[n-1]-a[n-2]);\n            max=abs(a[0]-a[n-1]);\n        }\n        else\n        {\n            if (abs(a[i]-a[i-1])<=abs(a[i]-a[i+1]))\n            {\n                min=abs(a[i]-a[i-1]);\n            }\n            else min=abs(a[i]-a[i+1]);\n            if (abs(a[i]-a[0])<=abs(a[i]-a[n-1]))\n            {\n                max=abs(a[i]-a[n-1]);\n            }\n            else max=abs(a[i]-a[0]);\n        }\n        printf(\"%d %d\\n\", min, max);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8461538461538461, "equal_cnt": 12, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "35cb8a4291f5cdd00fa3177d6cc71463", "bug_code_uid": "62b17b3a02ae2262949d4c2702f03415", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "c81dcc9441bd7cca376414af04571f9f", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int dollars,n,pylon[100000],i,energy,height;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&pylon[i]);\n        energy=0;\n        height=0;\n        dollars=0;\n        for(i=0;i<n;i++)\n        {\n            if(energy>=(pylon[i]-height))\n            {\n                energy-=(pylon[i]-height);\n                height=pylon[i];\n            }\n            else\n            {\n                if(dollars+=pylon[i]-height)\n                {\n                    height=pylon[i];\n                }\n            }\n        }\n        printf(\"%d\\n\",dollars);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int dollars,n,pylon[100000],i,energy,height,flag;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        for(i=0;i<n;i++)\n            scanf(\"%d\",&pylon[i]);\n        energy=0;\n        height=0;\n        dollars=0;\n        for(i=0;i<n;i++)\n        {\n             flag=0;\n             if(energy>=(pylon[i]-height))\n             {\n                energy-=pylon[i]-height;\n                height=pylon[i];\n                flag=1;\n             }\n             else\n             {\n                 height+=energy;\n                 energy=0;\n             }\n             if(!flag)\n             {\n                dollars+=pylon[i]-height;\n                height=pylon[i];\n             }\n        }\n        printf(\"%d\\n\",dollars);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9427860696517413, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a5ca1bddcb47b1673842f8ca9488d54d", "bug_code_uid": "11b0e870c50b01ea0721c271d028f296", "src_uid": "681ee82880ddd0de907aac2ccad8fc04", "apr_id": "c5b01d9569b8cc6c9962b018752e0487", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n  int t,x,l,r,a,ln,rn,lr,rr;\r\n scanf(\"%d\",&t);\r\nwhile(t>0) {\r\n   \r\n    scanf(\"%d%d%d\",&l,&r,&a);\r\n    ln=(l/a);\r\n    rn=(r/a);\r\n    lr=l%a;\r\n    rr=r%a;\r\n    \r\n    if(rr==a-1){\r\n        x=rn+rr;\r\n    }\r\n    else{\r\n        if(rn!=ln){\r\n        x=rn+a-2;\r\n        }\r\n        else{\r\n        x=rn+rr;\r\n        }\r\n    }\r\n    \r\n    \r\n    t--;\r\n}\r\n\r\nprintf(\"%d\\n\",x);\r\n\r\n\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n  int t,x,l,r,a,ln,rn,lr,rr;\r\n  scanf(\"%d\",&t);\r\n  while(t>0){\r\n   \r\n    scanf(\"%d%d%d\",&l,&r,&a);\r\n    ln=(l/a);\r\n    rn=(r/a);\r\n    lr=l%a;\r\n    rr=r%a;\r\n    \r\n    if(rr==a-1){\r\n        x=rn+rr;\r\n    }\r\n    else{\r\n        if(rn!=ln){\r\n        x=rn+a-2;\r\n        }\r\n        else{\r\n        x=rn+rr;\r\n        }\r\n    }\r\n    printf(\"%d\\n\",x);\r\n    \r\n    t--;\r\n}\r\n\r\n}"}
{"similarity_score": 0.9952380952380953, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "5cd339e52544510440b606e2a3b43af3", "bug_code_uid": "8a42bf051cb5e04c388012f215ba2f2b", "src_uid": "fd47f1eb701077abc5ec67163ad4fcc5", "apr_id": "3af76fab3200402c59e1f6aa9d0b7ee8", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{int t,i,n,j,a[101];\r\nscanf(\"%d\",&t);\r\nfor(i=0;i<t;i++){\r\nchar s[101];int l,k;\r\nscanf(\"%d\",&n);\r\nfor(j=0;j<n;j++)\r\nscanf(\"%d\",&a[j]);\r\nfor( k=0;k<n;k++)\r\n{scanf(\"%d %s\",&l,s);\r\nfor(j=0;j<l;j++)\r\n{ if(s[j]=='U')\r\n{ if(a[k]==0) a[j]=9;\r\n else a[k]--;\r\n}\r\nelse\r\n{\r\n    if(a[k]==9) a[j]=0;\r\n    else a[k]++;\r\n}\r\n}\r\n}\r\nfor(j=0;j<n;j++)\r\nprintf(\"%d \",a[j]);\r\nprintf(\"\\n\");\r\n}\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{int t,i,n,j,a[101];\r\nscanf(\"%d\",&t);\r\nfor(i=0;i<t;i++){\r\nchar s[101];int l,k;\r\nscanf(\"%d\",&n);\r\nfor(j=0;j<n;j++)\r\nscanf(\"%d\",&a[j]);\r\nfor( k=0;k<n;k++)\r\n{scanf(\"%d %s\",&l,s);\r\nfor(j=0;j<l;j++)\r\n{ if(s[j]=='U')\r\n{ if(a[k]==0) a[k]=9;\r\n else a[k]--;\r\n}\r\nelse\r\n{\r\n    if(a[k]==9) a[k]=0;\r\n    else a[k]++;\r\n}\r\n}\r\n}\r\nfor(j=0;j<n;j++)\r\nprintf(\"%d \",a[j]);\r\nprintf(\"\\n\");\r\n}\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9862637362637363, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "920898e467bc6493fca2259918a60b7d", "bug_code_uid": "1dac114505ca863230f53ee27ba05af4", "src_uid": "e6753e3f71ff13cebc1aaf04d3d2106b", "apr_id": "2a396d8beb8586225bc065f044c56fb2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nlong long int min(int a, int b) {return a < b ? a : b;}\r\nlong long int max(int a, int b) {return a > b ? a : b;}\r\n\r\nint main() {\r\n    long long int T, N, i, a, b, ans;\r\n    scanf(\"%lld\", &T);\r\n    \r\n    for(; T > 0; T--) {\r\n        scanf(\"%lld %lld\", &a, &b);\r\n        printf(\"%d %d\\n\", min(a, 2), min(b, 2));\r\n    }\r\n    \r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nlong long int min(int a, int b) {return a < b ? a : b;}\r\nlong long int max(int a, int b) {return a > b ? a : b;}\r\n\r\nint main() {\r\n    long long int T, N, i, a, b, ans;\r\n    scanf(\"%lld\", &T);\r\n    \r\n    for(; T > 0; T--) {\r\n        scanf(\"%lld %lld\", &a, &b);\r\n        printf(\"%lld %lld\\n\", min(a, 2), min(b, 2));\r\n    }\r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9964497041420118, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "55553fc91217cb5444fbc5983341a19a", "bug_code_uid": "012ce5597404deae9f79357ee6a4f1a3", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "67ba3bcc22c9786e6b4b2b376aa5e19b", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\nint main()\n{\n\tint t,i,n,a[100000],sum,count,pos;\n\tScanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tsum=count=pos=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ta[i]=1;\n\t\t\t}\n\t\t\tsum+=a[i];\n\t\t\tif(a[i]>0)\n\t\t\t\tpos++;\n\t\t}\n\t\tif(sum==0&&pos>0)\n\t\t\tcount++;\n\t\telse if(sum==0&&pos==0)\n\t\t\tcount+=2;\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\nint main()\n{\n\tint t,i,n,a[100000],sum,count,pos;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tsum=count=pos=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ta[i]=1;\n\t\t\t}\n\t\t\tsum+=a[i];\n\t\t\tif(a[i]>0)\n\t\t\t\tpos++;\n\t\t}\n\t\tif(sum==0&&pos>0)\n\t\t\tcount++;\n\t\telse if(sum==0&&pos==0)\n\t\t\tcount+=2;\n\t\tprintf(\"%d\\n\",count);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.39332096474953615, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4ee04dc1a037e5e111b9229eff28352c", "bug_code_uid": "f261e338cd25a6b522ab88a311478fd9", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "0d77f302b2450f1a5329f29abc0ef7bb", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int i,n,a[100],p,sum=0,j;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {scanf(\"%d\",&a[i]);\n     j=i-1;\n     if (i!=0&&(a[j]>a[i]))\n        p=a[j];}\n     for(i=0;i<n;i++)\n        sum=sum+(p-a[i]);\n     printf(\"%d\",sum);\n\n\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int i,n,a[100],p,sum=0,j;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n     p=a[0];\n     for(i=1;i<n;i++)\n    {\n       if(p<a[i])\n        p=a[i];\n    }\n     for(i=0;i<n;i++)\n        sum=sum+(p-a[i]);\n\n\n\n printf(\"%d\",sum);\n}\n"}
{"similarity_score": 0.9948834565093804, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1c8f1381ffb5a18e4efd1e249fa90019", "bug_code_uid": "56d8529d0cdd0e9845a0dfb7c588cd27", "src_uid": "a6ee741df426fd2d06fdfda4ca369397", "apr_id": "81c78e7ae27ca9df0abe58bf88e34da2", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <limits.h>\n#include <math.h>\n#define MAX 50002;\n\nint main()\n{\n    int n,d,i,j;scanf(\"%d%d\",&n,&d);\n    int arr[d];\n\n    for(i=0;i<d;i++)\n    {\n        char str[n+1];\n        scanf(\"%s\",str);\n        int sum =0;\n        for(j=0;j<n;j++)\n        {\n            if(str[j]=='1')\n            sum++;\n        }\n        if(sum<n)\n        {\n            arr[i]=1;\n        }\n        else\n        {\n            arr[i]=0;\n        }\n    }\n//    for(i=0;i<d;i++)printf(\"%d \",arr[i]);\n    i =0;\n    int max=0,count =0;\n    while(i<=d-1)\n    {\n        if(arr[i]==1)\n        {\n            count =0;\n            while(i<=d-1 && arr[i]==1)\n            {\n                count++;\n                i++;\n            }\n            i--;\n        }\n        if(count>max)max = count;\n        i++;\n    }\n    printf(\"%d\",count);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <limits.h>\n#include <math.h>\n#define MAX 50002;\n\nint main()\n{\n    int n,d,i,j;scanf(\"%d%d\",&n,&d);\n    int arr[d];\n\n    for(i=0;i<d;i++)\n    {\n        char str[n+1];\n        scanf(\"%s\",str);\n        int sum =0;\n        for(j=0;j<n;j++)\n        {\n            if(str[j]=='1')\n            sum++;\n        }\n        if(sum<n)\n        {\n            arr[i]=1;\n        }\n        else\n        {\n            arr[i]=0;\n        }\n    }\n//    for(i=0;i<d;i++)printf(\"%d \",arr[i]);\n    i =0;\n    int max=0,count =0;\n    while(i<=d-1)\n    {\n        if(arr[i]==1)\n        {\n            count =0;\n            while(i<=d-1 && arr[i]==1)\n            {\n                count++;\n                i++;\n            }\n            i--;\n        }\n        if(count>max)max = count;\n        i++;\n    }\n    printf(\"%d\",max);\n    return 0;\n}"}
{"similarity_score": 0.9411764705882353, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "7c281eb4a6528b6aa04a3d6d2a848819", "bug_code_uid": "4951240a8459433d3f9a38aa3bab4131", "src_uid": "29e84addbc88186bce40d68cf124f5da", "apr_id": "832c484dcc50fe8ad50a93ca06475cae", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#define ll long long\nll a,b,op,T,ans,kk;\nint main()\n{\n    scanf(\"%I64d\",&T);\n    while(T--)\n    {\n        scanf(\"%I64d%I64d\",&a,&b);\n        op=abs(a-b)*2;\n        for(ll i=sqrt(op);i;i++)\n        if(op<=(i*(i+1))){ans=i;break;}\n        op/=2;\n        kk=((ans+1)*ans)/2;\n        if((op%2)!=(kk%2))ans++;\n        kk=((ans+1)*ans)/2;\n        if((op%2)!=(kk%2))ans++;\n        printf(\"%I64d\\n\",ans);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\nint a,b,op,T,ans,kk;\nint main()\n{\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        scanf(\"%d%d\",&a,&b);\n        op=(abs(a-b))*2;\n        for(int i=sqrt(op);;i++)\n        if(op<=(i*(i+1))){ans=i;break;}\n        op/=2;\n        kk=((ans+1)*ans)/2;\n        if((op%2)!=(kk%2))ans++;\n        kk=((ans+1)*ans)/2;\n        if((op%2)!=(kk%2))ans++;\n        printf(\"%d\\n\",ans);\n    }\n}\n"}
{"similarity_score": 0.9987980769230769, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "cd9e1bb70d6261f196b4275a168857b5", "bug_code_uid": "a5314bdaf04d1312ff2e2f9fe269e36c", "src_uid": "1b9a204dd08d61766391a3b4d2429df2", "apr_id": "928aab936e862e9e2ab5f2d87abc77ed", "difficulty": 800, "tags": ["bitmasks", "constructive algorithms", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint n1;\n\t\tint o=0,e=0,count=0;\n\t\tscanf(\"%d\",&n1);\n\t\tint *arr;\n\t\tarr = (int *)malloc(sizeof(int)*n1);\n\t\tfor(int j=0;j<n1;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&arr[j]);\n\t\t}\n\t\tfor(int j=0;j<n1;j++)\n\t\t{\n\t\t\tif(arr[j]%2==0)\n\t\t\t{\n\t\t\t\te++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t}\n\t\tif(o>0)\n\t\t{\t\n\t\t\tcount = e;\n\t\t\tprintf(\"%d\",count);\n\t\t\n\t\t}\t\n\t\telse\n\t\t{\n\t\t\tint counts[n1];\n\t\t\tmemset(counts,0,sizeof(counts));\n\t\t\tfor(int k=0;k<n1;k++)\n\t\t\t{\n\t\t\t\twhile(arr[k]%2==0)\n\t\t\t\t{\n\t\t\t\t\tarr[k]=arr[k]/2;\n\t\t\t\t\tcounts[k]++;\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tint mincount;\n\t\t\tmincount=counts[0];\n\t\t\tfor(int j=1;j<n1;j++)\n\t\t\t{\n\t\t\t\tif(counts[j]<mincount)\n\t\t\t\t{\n\t\t\t\t\tmincount=counts[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tmincount = mincount + e -1;\n\t\t\tprintf(\"%d\\n\",mincount);\n\t\t\t\t\n\t\t}\n\n\t}\n}\n", "fixed": "#include <stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint n1;\n\t\tint o=0,e=0,count=0;\n\t\tscanf(\"%d\",&n1);\n\t\tint *arr;\n\t\tarr = (int *)malloc(sizeof(int)*n1);\n\t\tfor(int j=0;j<n1;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&arr[j]);\n\t\t}\n\t\tfor(int j=0;j<n1;j++)\n\t\t{\n\t\t\tif(arr[j]%2==0)\n\t\t\t{\n\t\t\t\te++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t}\n\t\tif(o>0)\n\t\t{\t\n\t\t\tcount = e;\n\t\t\tprintf(\"%d\\n\",count);\n\t\t\n\t\t}\t\n\t\telse\n\t\t{\n\t\t\tint counts[n1];\n\t\t\tmemset(counts,0,sizeof(counts));\n\t\t\tfor(int k=0;k<n1;k++)\n\t\t\t{\n\t\t\t\twhile(arr[k]%2==0)\n\t\t\t\t{\n\t\t\t\t\tarr[k]=arr[k]/2;\n\t\t\t\t\tcounts[k]++;\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tint mincount;\n\t\t\tmincount=counts[0];\n\t\t\tfor(int j=1;j<n1;j++)\n\t\t\t{\n\t\t\t\tif(counts[j]<mincount)\n\t\t\t\t{\n\t\t\t\t\tmincount=counts[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tmincount = mincount + e -1;\n\t\t\tprintf(\"%d\\n\",mincount);\n\t\t\t\t\n\t\t}\n\n\t}\n}\n"}
{"similarity_score": 0.9141965678627145, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "6c67cb14486a7e9cdd1af8ec5b1d3e4b", "bug_code_uid": "7eb9b2fcdc7212437b39aa0044a1f209", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "5fee587bd83bf9195f8231770ee7665c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(void)\n{\n    int T, i, a, b,x,count;\n    i =0;\n    scanf(\"%d\", &T);\n\n    count = 0;\n\n    for(i = 0; i < T; i++){\n    \tscanf(\"%d%d\", &a,&b);\n    \n    x = a - b;\t\t\n    fabs(x);\n    \t\n    \tif(x >= 2){\n    \t\tcount++;\n    \t}\n    }\n    printf(\"%d\\n\", count);\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(void)\n{\n    int T, i, a, b,x,count;\n    i =0;\n    scanf(\"%d\", &T);\n\n    count = 0;\n\n    for(i = 0; i < T; i++){\n    \tscanf(\"%d%d\", &a,&b);\n    \n    x = a - b;\t\t\n    \n    if(a>b)\n    x = a - b;\n    else\n    x = b - a;\n    \t\n    \tif(x >= 2){\n    \t\tcount++;\n    \t}\n    }\n    printf(\"%d\\n\", count);\n}"}
{"similarity_score": 0.9842738205365402, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "b5a2a6014e6726352f66f1bd03b6867b", "bug_code_uid": "26a67a3ecf5ded6a642624badd804032", "src_uid": "a6ee741df426fd2d06fdfda4ca369397", "apr_id": "b48c3b402594210e2f89b42beb05b681", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,d,k,max;\n    scanf(\"%d %d\",&n,&d);\n    int c1=0;\n    while(d--)\n    {\n        char ch[202]={0};\n        scanf(\"%s\",ch);\n        int i;\n        k=0;\n        max=0;\n        for(i=0;i<n;i++)\n        {\n            if(ch[i]!='1')\n                k=1;\n        }\n        if(k)\n            c1++;\n        else\n        {\n            if(max<c1)\n                max=c1;\n            c1=0;\n        }\n    }\n    if(c1!=0&&k==1)\n    {\n        if(max<c1)\n            max=c1;\n    }\n    printf(\"%d\",max);\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,d,k,max=0;\n    scanf(\"%d %d\",&n,&d);\n    int c1=0;\n    while(d--)\n    {\n        char ch[202]={0};\n        scanf(\"%s\",ch);\n        int i;\n        k=0;\n        for(i=0;i<n;i++)\n        {\n            if(ch[i]!='1')\n                k=1;\n        }\n        if(k)\n            c1++;\n        else\n        {\n            if(max<c1)\n                max=c1;\n            c1=0;\n        }\n    }\n    if(c1!=0&&k==1)\n    {\n        if(max<c1)\n            max=c1;\n    }\n    printf(\"%d\",max);\n}\n"}
{"similarity_score": 0.9991460290350128, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "51201c9347a2ea43419a57e7c2c7a74b", "bug_code_uid": "330f20d71f891df2dd4e1a7cb2c589bd", "src_uid": "1cbbffd1941ed83b5f04e1ee33c77f61", "apr_id": "aa3123e642ae37a29f3718dcdf0cdd9a", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int i,j,k=0,c=0,m=0;\n    char s[100];\n    gets(s);\n    for(i=0;i<strlen(s);i++){\n        if(s[i]>='a'&&s[i]<='z'){\n            k++;\n        }\n    }\n    if(k==0){\n        printf(\"0\");\n    }\n    else{\n\n\n    for(i=1;i<strlen(s)-3;i+=3){\n        for(j=i+3;j<strlen(s)-1;j++){\n            if(s[i]==s[j]){\n                c++;\n                s[i]='#';\n                 m=1;\n\n\n            }\n        }\n    }\n    }\n\n    if(m==0&&k!=0){\n    printf(\"%d\",k);\n    }\n    else if(k!=0&&m==1){\n        printf(\"%d\",k-c);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main()\n{\n    int i,j,k=0,c=0,m=0;\n    char s[1001];\n    gets(s);\n    for(i=0;i<strlen(s);i++){\n        if(s[i]>='a'&&s[i]<='z'){\n            k++;\n        }\n    }\n    if(k==0){\n        printf(\"0\");\n    }\n    else{\n\n\n    for(i=1;i<strlen(s)-3;i+=3){\n        for(j=i+3;j<strlen(s)-1;j++){\n            if(s[i]==s[j]){\n                c++;\n                s[i]='#';\n                 m=1;\n\n\n            }\n        }\n    }\n    }\n\n    if(m==0&&k!=0){\n    printf(\"%d\",k);\n    }\n    else if(k!=0&&m==1){\n        printf(\"%d\",k-c);\n    }\n}\n"}
{"similarity_score": 0.9282758620689655, "equal_cnt": 18, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 15, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "b41649086820b1a40d3cfa1976eeea2b", "bug_code_uid": "9a14b6073a804d75c950400a923b866a", "src_uid": "09d0f11bdb9eca2161dee83a335dd2b7", "apr_id": "24e67dd348c4e7871a7f5bddd04a1925", "difficulty": null, "tags": ["dp", "hashing", "greedy", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,k,ac[26]={0},bc[26]={0},i;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int c=0,ac[26]={0},bc[26]={0};\n        scanf(\"%d %d\",&n,&k);\n        char a[n],b[n];\n        scanf(\"%s\",&a);\n        scanf(\"%s\",&b);\n        for(i=0;i<n;i++){\n            ac[a[i]-'a']++;\n            bc[b[i]-'a']++;\n        }\n        for(i=0;i<26;i++){\n            if(ac[i]<bc[i])\n                c=1;\n            else{\n                int p=ac[i]-bc[i];\n                if(p%k==0)\n                    ac[i+1]+=p;\n                else\n                    c=1;\n            }\n        }\n        if(c)printf(\"NO\\n\");\n        else printf(\"YES\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t,n,k,ac[26]= {0},bc[26]= {0},i;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        int c=0,ac[26]= {0},bc[26]= {0};\n        scanf(\"%lld %lld\",&n,&k);\n        char a[n+1],b[n+1];\n        scanf(\"%s\",&a);\n        scanf(\"%s\",&b);\n        for(i=0; i<n; i++)\n        {\n            ac[a[i]-'a']++;\n            bc[b[i]-'a']++;\n        }\n        for(i=0; i<25; i++)\n        {\n            if(ac[i]<bc[i])\n                c=1;\n            else\n            {\n                int p=ac[i]-bc[i];\n                if(p%k==0)\n                    ac[i+1]+=p;\n                else\n                    c=1;\n            }\n        }\n        if(c)\n            printf(\"NO\\n\");\n        else\n            printf(\"YES\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9051833122629582, "equal_cnt": 16, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "a0417e90a192ec18e41d70251eb30bac", "bug_code_uid": "97ce188f8075548719ab37f5d2490ade", "src_uid": "020c7b64688736ecc5e97d17df2c2605", "apr_id": "1f287448e556c8a41159750a661eca0c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\nint t;\r\nscanf(\"%d\", &t);\r\nwhile(t--){\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    if(n>=1900){\r\n        printf(\"Division 1\\n\");\r\n    }\r\n    else if(n>=1600 && n<1899){\r\n        printf(\"Division 3\\n\");\r\n    }\r\n    else if(n>=1400 && n<=1599){\r\n        printf(\"Division 2\\n\");\r\n    }\r\n        else{\r\n        printf(\"Division 4\\n\");\r\n    }\r\n\r\n\r\n}\r\n\r\nreturn 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main(){\r\nint t;\r\nscanf(\"%d\", &t);\r\nwhile(t--){\r\n    int n;\r\n    scanf(\"%d\",  &n);\r\n    if(n >= 1900){\r\n        printf(\"Division 1\\n\");\r\n    }\r\n    else if (n >= 1600 && n <=1899){\r\n        printf (\"Division 2\\n\");\r\n    }\r\n    else if(n >= 1400 && n <=1599){\r\n        printf (\"Division 3\\n\");\r\n    }\r\n        else{\r\n            printf(\"Division 4\\n\");\r\n        }\r\n\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.992108229988726, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "68e736d5a8ecef7c867bbec85fde3437", "bug_code_uid": "07bfb67c21a245c7d0a2562415d16eef", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "585bb84c0018b3c9b41e99a751187ab6", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<math.h>\n#include<limits.h>\nint main()\n{\n    long long int i,n,j,s=0,min=INT_MAX,c=0;\n    scanf(\"%lld\",&n);\n    long long int a[n];\n    for(i=1;i<=n;i++)\n    {scanf(\"%lld\",&a[i]);\n      if(a[i]<min)\n      min=a[i];\n      j=i;\n    }\n    for(i=1;i<=n;i++)\n    {  if(j!=i){\n        if(a[i]==min)\n       { c=1;\n        break;}\n    }}\n    if(c==0)\n    printf(\"%lld\",j);\n    else\n    printf(\"Still Rozdil\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include<math.h>\n#include<limits.h>\nint main()\n{\n    long long int i,n,j,min=INT_MAX,c=0;\n    scanf(\"%lld\",&n);\n    long long int a[n];\n    for(i=1;i<=n;i++)\n    {scanf(\"%lld\",&a[i]);\n      if(a[i]<min)\n      {min=a[i];\n      j=i;}\n    }\n    for(i=1;i<=n;i++)\n    {  if(j!=i){\n        if(a[i]==min)\n       { c=1;\n        break;}\n    }}\n    if(c==0)\n    printf(\"%lld\",j);\n    else\n    printf(\"Still Rozdil\");\n    return 0;\n}"}
{"similarity_score": 0.568075117370892, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "5e548bbdb3bff6c14214d739cfa07bf7", "bug_code_uid": "ba1c993962ad9a8f58a6eec13754f1b4", "src_uid": "7899a22cee29bb96d671f6188f246c21", "apr_id": "8717776cda061eee69bccd4824777fc0", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint th[n];\n\tint ta[n];\n\tint ansh[n];\n\tint ansa[n];\n\n\tint i=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&th[i],&ta[i]);\n\t\tansh[i]=n-1;\n\t\tansa[i]=-1;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint j=0;\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(th[i]==ta[j])\n\t\t\t{\n\t\t\t\tansh[j]=ansh[j]+1;\n\t\t\t}\n\t\t\telse ansa[j]=ansa[j]+1;\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d %d\\n\",ansh[i],ansa[i]);\n\t}\n\n\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint th[n];\n\tint ta[n];\n\tint ansh[n];\n\tint ansa[n];\n\tint home[100001]={0};\n\n\tint i=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&th[i],&ta[i]);\n\t\thome[th[i]]=home[th[i]]+1;\n\t\tansh[i]=n-1;\n\t\tansa[i]=n-1;\n\t\t\n\t}\n\t\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint hold=home[ta[i]];\n\t\tansh[i]=ansh[i]+hold;\n\t\tansa[i]=ansa[i]-hold;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tprintf(\"%d %d\\n\",ansh[i],ansa[i]);\n\t}\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.9586578789694428, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c833f6719c48430313b0d4411c7941a7", "bug_code_uid": "5ca7bb2cfda04387173a447c17534856", "src_uid": "b11644953bdd1b92eb1b18c339a268a1", "apr_id": "2f8591dc78846c41a98049fb4550291e", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, i, j, tmp, count_big = 0, count_sm = 0;\n    int a[100];\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    for (i = 0; i < n - 1; i++)\n        for (j = i; j < n; j++)\n            if (a[j] > a[i]) {\n                tmp = a[i];\n                a[i] = a[j];\n                a[j] = tmp;\n            }\n    for (i = 0; i < n; i++) {\n        if (a[i] > 0) count_big++;\n        if (a[i] < 0) count_sm++;\n    }\n    if (count_big == 0 && count_sm == 1 && n == 1) printf(\"%d \", a[n - 1]);\n    if (count_big == 0 && count_sm == 1 && n != 1) printf(\"0 \");\n\n    for (i = 0; i < count_big; i++)\n        printf(\"%d \", a[i]);\n    for (i = 1; i <= count_sm - (count_sm % 2); i++)\n        printf(\"%d \", a[n - i]);\n\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, i, j, tmp, count_big = 0, count_sm = 0;\n    int a[100];\n    scanf(\"%d\", &n);\n    for (i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    for (i = 0; i < n - 1; i++)\n        for (j = i; j < n; j++)\n            if (a[j] > a[i]) {\n                tmp = a[i];\n                a[i] = a[j];\n                a[j] = tmp;\n            }\n    for (i = 0; i < n; i++) {\n        if (a[i] > 0) count_big++;\n        if (a[i] < 0) count_sm++;\n    }\n    if (count_big == 0 && count_sm == 1 && n == 1) printf(\"%d \", a[n - 1]);\n    else if ((count_big == 0 && count_sm == 1 && n != 1) || (count_big == 0 && count_sm == 0)) printf(\"0 \");\n    else { for (i = 0; i < count_big; i++)\n        printf(\"%d \", a[i]);\n    for (i = 1; i <= count_sm - (count_sm % 2); i++)\n        printf(\"%d \", a[n - i]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.7036303630363037, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "78991c99328816224f48a0da80f261d2", "bug_code_uid": "3d71cae92b6a3a4e27b4d584093cbe6e", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "74d1ba79fad9b005fef836543edd6735", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j,tc,count=0;\n\n    scanf(\"%d\",&n);\n    int car[n];\n\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&tc);\n            if(i==j)continue;\n\n            if(tc==-1)car[i]=1,car[j]=1;\n            else if(tc==0)car[i]=1,car[j]=1;\n            else if(tc==1)car[i]=0,car[j]=1;\n            else if(tc==2)car[i]=1,car[j]=0;\n            else if(tc==3)car[i]=0,car[j]=0;\n        }\n    }\n\n    for(i=0;i<n;i++)\n        if(car[i]==1)count++;\n\n    printf(\"%d\\n\",count);\n    for(i=0;i<n;i++){\n        if(car[i]==1)printf(\"%d \",i+1);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,j,tc,count=0;\n\n    scanf(\"%d\",&n);\n    int car[n];\n\n    for(i=0;i<n;i++)car[i]=1;\n\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&tc);\n            if(i==j)continue;\n\n            if(tc==-1){\n                if(car[i]==1)car[i]=1;\n                if(car[j]==1)car[j]=1;\n            }\n            else if(tc==0){\n                if(car[i]==1)car[i]=1;\n                if(car[j]==1)car[j]=1;\n            }\n            else if(tc==1){\n                if(car[j]==1)car[j]=1;\n                car[i]=0;\n            }\n            else if(tc==2){\n                if(car[i]==1)car[i]=1;\n                car[j]=0;\n            }\n            else if(tc==3)car[i]=0,car[j]=0;\n        }\n    }\n\n    for(i=0;i<n;i++)\n        if(car[i]==1)count++;\n\n    printf(\"%d\\n\",count);\n    for(i=0;i<n;i++){\n        if(car[i]==1)printf(\"%d \",i+1);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.997275204359673, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "121aa2ad573252ff57566a061b139955", "bug_code_uid": "3385a549c5eb26058c4dc8e031c6dc2b", "src_uid": "1b8293c51d025940eb859b0e625ab588", "apr_id": "fb554b0275b6f1ba45ee0eed5fbc99d8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n  int d;\r\n  scanf(\"%d\",&d);\r\n  for(int i=0;i<d;i++){\r\n  int a,b,c;\r\n    scanf(\"%d%d%d\",&a,&b,&c);\r\n    int sum=0;\r\n    if(a+b==c){\r\n        printf(\"Yes\\n\");\r\n    }\r\n    else   if(a+c==b){\r\n        printf(\"Yes\\n\");\r\n    }\r\n    else   if(c+b==a){\r\n        printf(\"Yes\");\r\n    }\r\n    else{\r\n                printf(\"No\\n\");\r\n    }\r\n  }\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n  int d;\r\n  scanf(\"%d\",&d);\r\n  for(int i=0;i<d;i++){\r\n  int a,b,c;\r\n    scanf(\"%d%d%d\",&a,&b,&c);\r\n    int sum=0;\r\n    if(a+b==c){\r\n        printf(\"Yes\\n\");\r\n    }\r\n    else   if(a+c==b){\r\n        printf(\"Yes\\n\");\r\n    }\r\n    else   if(c+b==a){\r\n        printf(\"Yes\\n\");\r\n    }\r\n    else{\r\n                printf(\"No\\n\");\r\n    }\r\n  }\r\n}"}
{"similarity_score": 0.9776536312849162, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "acc31002070fa1491b3960a2cd501767", "bug_code_uid": "ca95dae88250330ccc96cbdd9a642f7f", "src_uid": "b8d8f0e86ecb600f7559a6aec629946e", "apr_id": "30bded48aa0e32d8f9ae0d5d2a56862f", "difficulty": 1300, "tags": [], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,k,i,x,j,a[100],temp,res;\n\t\n\tscanf(\"%d\",&n);\n\t\n\tscanf(\"%d\",&k);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\tfor(i=0;i<n-1;i++)\n\tfor(j=0;j<n-i-1;j++)\n\t{\n\t\tif(a[j]>a[j+1])\n\t\t{\n\t\t\ttemp=a[j];\n\t\t\ta[j]=a[j+1];\n\t\t\ta[j+1]=temp;\n\t\t}\n\t}\n\t\n\tres=0;\n\tfor(i=n-1;i>=0;i=i-k)\n\tres+=2*(a[i]-1);\n\t\n\tprintf(\"%d\\t\",res);\n\treturn 0;\n}\n\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,k,i,x,j,temp,res;\n\t\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tscanf(\"%d\",&k);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\tfor(i=0;i<n-1;i++)\n\tfor(j=0;j<n-i-1;j++)\n\t{\n\t\tif(a[j]>a[j+1])\n\t\t{\n\t\t\ttemp=a[j];\n\t\t\ta[j]=a[j+1];\n\t\t\ta[j+1]=temp;\n\t\t}\n\t}\n\t\n\tres=0;\n\tfor(i=n-1;i>=0;i=i-k)\n\tres+=2*(a[i]-1);\n\t\n\tprintf(\"%d\\t\",res);\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.5110132158590308, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "7aceeee3d897cfd09a5ed5e3461a3eda", "bug_code_uid": "244b5924582ddd8a5e27cdff70b9a513", "src_uid": "6b4242ae9a52d36548dda79d93fe0aef", "apr_id": "5eb19b1c799313666133ee4793a13a6a", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int c=0,n,i,j,pos;\n    scanf(\"%d\",&n);\n    char A[n];\n    for(i=0;i<n;i++)\n    scanf(\" %c\",&A[i]);\n    for(i=0;i<n;i++)\n    {\n    for(j=i;j<n;j++)\n    {\n        pos=j;\n        if(A[j]=='>')\n        pos++;\n        else\n        pos--;\n        if((pos==0)||(pos==n))\n        {c++;\n        break;}\n\n    }\n}\nprintf(\"%d\",c);\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int f=0,n,i,j,c=0,k;\n    scanf(\"%d\",&n);\n    char A[n];\n    for(k=0;k<n;k++)\n    scanf(\" %c\",&A[k]);\n    i=0,j=n-1;\n    while((i<n) && (A[i]!='>'))\n    i++;\n    while((j>=0)&&(A[j]!='<'))\n    {\n        j--;\n        f++;\n}\n    c=i+f;\n        printf(\"%d\",c);\n        return 0;\n\n}\n"}
{"similarity_score": 0.9946879150066401, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "6159dab7886c77ebafed60603e5dd5e3", "bug_code_uid": "d8c52148aa38a45fd7710e7848d74962", "src_uid": "dcf7988c35bb34973e7b60afa7a0e68c", "apr_id": "049d6db8776263beb3a1f7248530c6e3", "difficulty": 1700, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int n=0,k=0,l=0,r=0,x=0;\n    scanf(\"%d %d\",&n,&k);\n    int*t=(int*)calloc((n+1),sizeof(int));\n    int*last=(int*)calloc((n+1),sizeof(int));\n    int *ptr_t=(t+1);\n    int *ptr_last=(last+n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&*ptr_t);\n        ptr_t++;\n    }\n    *ptr_last=n+1;\n    ptr_last--;\n    ptr_t=(t+n-1);\n    for(int i=n-1;i>=1;i--){\n        if(*ptr_t!=*(ptr_t+1))*ptr_last=i+1;\n        else *ptr_last=*(ptr_last+1);\n        ptr_t--;\n        ptr_last--;\n    }\n    for(int i=0;i<k;i++){\n        scanf(\"%d %d %d\",&l,&r,&x);\n        if(*(t+l)!=x)printf(\"%d\\n\",l);\n        else if(*(last+l)<=r)printf(\"%d\\n\",*(last+l));\n        else printf(\"-1\\n\");\n    }\n    free(t);\n    free(last);\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\n    int n=0,k=0,l=0,r=0,x=0;\n    scanf(\"%d %d\",&n,&k);\n    int*t=(int*)malloc((n+1)*sizeof(int));\n    int*last=(int*)malloc((n+1)*sizeof(int));\n    int *ptr_t=(t+1);\n    int *ptr_last=(last+n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&*ptr_t);\n        ptr_t++;\n    }\n    *ptr_last=n+1;\n    ptr_last--;\n    ptr_t=(t+n-1);\n    for(int i=n-1;i>=1;i--){\n        if(*ptr_t!=*(ptr_t+1))*ptr_last=i+1;\n        else *ptr_last=*(ptr_last+1);\n        ptr_t--;\n        ptr_last--;\n    }\n    for(int i=0;i<k;i++){\n        scanf(\"%d %d %d\",&l,&r,&x);\n        if(*(t+l)!=x)printf(\"%d\\n\",l);\n        else if(*(last+l)<=r)printf(\"%d\\n\",*(last+l));\n        else printf(\"-1\\n\");\n    }\n    free(t);\n    free(last);\n}\n"}
{"similarity_score": 0.9901960784313726, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f58ccb5bffe1cee0c2d47cc217d6c755", "bug_code_uid": "655618a6a7398e55555a26797dcdc481", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "715c8ab5c484176cc5a2ed93f320d81f", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nlong long int test,n,count=0;\r\nscanf(\"%lld\",&test);\r\nwhile(test--)\r\n{\r\nscanf(\"%lld\",&n);\r\nif((n&(n-1))==0)\r\n    printf(\"NO\");\r\nelse\r\n    printf(\"YES\");\r\n}\r\nreturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nlong long int test,n,count=0;\r\nscanf(\"%lld\",&test);\r\nwhile(test--)\r\n{\r\nscanf(\"%lld\",&n);\r\nif((n&(n-1))==0)\r\n    printf(\"NO\\n\");\r\nelse\r\n    printf(\"YES\\n\");\r\n}\r\nreturn 0;\r\n}"}
{"similarity_score": 0.9790104947526237, "equal_cnt": 9, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 8, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e9bc22d66013c01404e6c00feb0bc327", "bug_code_uid": "efc3a9f0c5206fa0fc5d3ef2732675fd", "src_uid": "2558db57229e55ffe0de0d8cf217035b", "apr_id": "e3c47eb200670bab28c9b7cd47510653", "difficulty": 1700, "tags": ["dp", "two pointers", "data structures", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int a[1000000],prefix[1000000];\n\nint main()\n{\n\tlong  int N;\n\tscanf(\"%ld\",&N);\n\n\n\tfor(long int i=0; i < N; i++)\n\t\t{\n\t\t\t\n\t\t\t\n\t\t\tscanf(\"%ld\",&a[i]);\n\t\t\tif(i==0)\n\t\t\t\tprefix[i]=a[i];\n\t\t\telse\n\t\t\t\tprefix[i] = prefix[i-1] + a[i];\n\t\t\t//printf(\"\\n prefix[%d] is %d\",i,prefix[i]);\n\t\t}\n\n\tlong int count_i = 0, count_j=0;\n\n\tif(prefix[N - 1] % 3 ==0)\n\t{\n\t\tfor(long int i=0; i < (N-1); i++)\n\t\t{\n\t\t\tif(prefix[i] == 2*prefix[N - 1]/3)\n\t\t\t\tcount_j = count_j + count_i;\n\t\t\t\n\t\t\tif(prefix[i] == prefix[N - 1]/3)\n\t\t\t\tcount_i++;\t\n\t\t\t//printf(\"\\n%d,%d\",count_i,count_j);\n\t\n\t\t}\n\t}\n\t//if(prefix[N-1] ==0)\n\t//{\n\t\t\n//\t}\n\n\tprintf(\"%ld\",count_j);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long int a[1000000],prefix[1000000];\n\nint main()\n{\n\tlong long  int N;\n\tscanf(\"%lld\",&N);\n\n\n\tfor(long long int i=0; i < N; i++)\n\t\t{\n\t\t\t\n\t\t\t\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\t\tif(i==0)\n\t\t\t\tprefix[i]=a[i];\n\t\t\telse\n\t\t\t\tprefix[i] = prefix[i-1] + a[i];\n\t\t\t//printf(\"\\n prefix[%d] is %d\",i,prefix[i]);\n\t\t}\n\n\tlong long int count_i = 0, count_j=0;\n\n\tif(prefix[N - 1] % 3 ==0)\n\t{\n\t\tfor(long long int i=0; i < (N-1); i++)\n\t\t{\n\t\t\tif(prefix[i] == 2*prefix[N - 1]/3)\n\t\t\t\tcount_j = count_j + count_i;\n\t\t\t\n\t\t\tif(prefix[i] == prefix[N - 1]/3)\n\t\t\t\tcount_i++;\t\n\t\t\t//printf(\"\\n%d,%d\",count_i,count_j);\n\t\n\t\t}\n\t}\n\t//if(prefix[N-1] ==0)\n\t//{\n\t\t\n//\t}\n\n\tprintf(\"%lld\",count_j);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9959016393442623, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "50a346814842d021765cb5d7748580b0", "bug_code_uid": "22472293bc915ab3dbdc54484c6287cf", "src_uid": "b37bbf1fe9ac5144cfa230633ccbdd79", "apr_id": "f0f2965ed1ec553c59314b41cce3c612", "difficulty": 800, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar string[100];\n\tint test;\n\tscanf(\"%d\",&test);\n\twhile(test--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%s\",string);\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tprintf(\"%c\",string[n]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar string[100];\n\tint test;\n\tscanf(\"%d\",&test);\n\twhile(test--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tscanf(\"%s\",string);\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tprintf(\"%c\",string[n-1]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}"}
{"similarity_score": 0.9006696428571429, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "f03fd619ae16e69c17b61a2dcf2bcd0c", "bug_code_uid": "3c036ae34181208dc0ec4780eb69bf6e", "src_uid": "a6b760941ab8be2c32c6dc66c623ea0e", "apr_id": "840fcdd4212f13b33894cfc352977b67", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int cases,count,ans,i=0,single=0;\r\n    char str[51],alfa[26];\r\n    while (i<26)\r\n    {\r\n        alfa[i]=0;\r\n        i++;\r\n    }\r\n    scanf(\"%d\",&cases);\r\n    i=0;\r\n    while (i<cases)\r\n    {\r\n        scanf(\"%s\",str);\r\n        //gets(str);\r\n        count=0;\r\n        while(str[count]!=0){\r\n            if (alfa[str[count]-97]<2)\r\n            {\r\n                alfa[str[count]-97]+=1;\r\n            }\r\n            count++;\r\n        }\r\n        count=0;\r\n        ans=0;\r\n        while (count<26)\r\n        {\r\n            if (alfa[count]==2)\r\n            {\r\n                ans++;\r\n            }\r\n            else if (alfa[count]==1)\r\n            {\r\n                single++;\r\n            }\r\n            \r\n            count++;\r\n        }\r\n        ans+=single/2;\r\n        printf(\"%d\\n\",ans);\r\n        i++;\r\n    }\r\n    \r\n    \r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int cases,count,ans,j,i=0,single;\r\n    char str[51],alfa[26];\r\n    scanf(\"%d\",&cases);\r\n    i=0;\r\n    while (i<cases)\r\n    {\r\n        j=0;\r\n        while(j<26){\r\n            alfa[j]=0;\r\n            j++;\r\n        }\r\n        scanf(\"%s\",str);\r\n        //gets(str);\r\n        count=0;\r\n        while(str[count]!=0){\r\n            if (alfa[str[count]-97]<2)\r\n            {\r\n                alfa[str[count]-97]+=1;\r\n            }\r\n            count++;\r\n        }\r\n        count=0;\r\n        ans=0;\r\n        single=0;\r\n        while (count<26)\r\n        {\r\n            if (alfa[count]==2)\r\n            {\r\n                ans++;\r\n            }\r\n            else if (alfa[count]==1)\r\n            {\r\n                single++;\r\n            }\r\n            \r\n            count++;\r\n        }\r\n        ans+=single/2;\r\n        printf(\"%d\\n\",ans);\r\n        i++;\r\n    }\r\n    \r\n    \r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9919204474829086, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e59215dbe7866546d4f373b3ef5710bd", "bug_code_uid": "d4213ed586da3a26b3a67c3a1c558170", "src_uid": "371100da1b044ad500ac4e1c09fa8dcb", "apr_id": "99655b999bebe50ee9f07c93cb715043", "difficulty": 1100, "tags": ["implementation", "*special", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n#include <string.h>\n\nint reduce(int counts[]) {\n    int total = 0;\n\n    total += counts[3];     // all groups of 4\n    total += counts[2];     // all groups of 3\n    counts[0] -= counts[2]; // all groups of 1 that can go with 3\n    total += counts[1]/2;   // all groups of 2 and 2\n    counts[1] %= 2;\n    counts[0] -= counts[1] * 2;\n    if (counts[0] < 0) counts[0] = 0;\n    total += counts[1];\n    total += counts[0] % 4;\n    total += counts[0] / 4;\n\n    return total;\n}\n\nint main(int argc, char* argv[]) {\n    int size;\n    scanf(\"%d\\n\", &size);\n\n    int counts[4] = {0};\n    for (int i = 0; i < size; i++) {\n        int tmp;\n        scanf(\"%d\", &tmp);\n        counts[tmp-1]++;\n    }\n\n    printf(\"%d\\n\", reduce(counts));\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n#include <string.h>\n\nint reduce(int counts[]) {\n    int total = 0;\n\n    total += counts[3];     // all groups of 4\n    total += counts[2];     // all groups of 3\n    counts[0] -= counts[2]; // all groups of 1 that can go with 3\n    total += counts[1]/2;   // all groups of 2 and 2\n    counts[1] %= 2;\n    counts[0] -= counts[1] * 2;\n    if (counts[0] < 0) counts[0] = 0;\n    total += counts[1];\n    total += counts[0] % 4 == 0 ? 0 : 1;\n    total += counts[0] / 4;\n\n    return total;\n}\n\nint main(int argc, char* argv[]) {\n    int size;\n    scanf(\"%d\\n\", &size);\n\n    int counts[4] = {0};\n    for (int i = 0; i < size; i++) {\n        int tmp;\n        scanf(\"%d\", &tmp);\n        counts[tmp-1]++;\n    }\n\n    printf(\"%d\\n\", reduce(counts));\n    return 0;\n}\n"}
{"similarity_score": 0.9548192771084337, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "e2b0a9c87b926ff81b4392b8b9918e64", "bug_code_uid": "fc75dcd6f3c2cf3717d0b243dc768003", "src_uid": "08f1ba79ced688958695a7cfcfdda035", "apr_id": "b4cc9b5ba62ccd931f3ece6b39842c5f", "difficulty": 1400, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n\nconst int mod = 1e9 + 7;\n\nint cmp(const void* a,const void* b){\n\treturn (*(int*)a-*(int*)b);\n}\n\nint main(void){\n\tint t ;\n\t//scanf(\"%d\",&t);\n\tt=1;\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t    scanf(\"%d\",a+i);\n\t\t}\n\t\tint dp[n];\n\t\tif(a[0]==0){\n\t\t    dp[0]=1;\n\t\t}\n\t\telse{\n\t\t    dp[0]=0;\n\t\t}\n\t\tint prev;\n\t\tprev=a[0];\n\t\tfor(int i=1;i<n;i++){\n\t\t    dp[i]=dp[i-1];\n\t\t    if(a[i]==0){\n\t\t        prev=0;\n\t\t        dp[i]++;\n\t\t    }\n\t\t    else{\n\t\t        if(a[i]==1&&(prev==1)){\n\t\t            dp[i]++;\n\t\t            prev=0;\n\t\t        }\n\t\t        else if(a[i]==2&&(prev==2)){\n\t\t            dp[i]++;\n\t\t            prev=0;\n\t\t        }\n\t\t        else if(a[i]==3){\n\t\t            if(prev==1){\n\t\t                prev=2;\n\t\t            }\n\t\t            else if(prev==2){\n\t\t                prev=1;\n\t\t            }\n\t\t        }\n\t\t      //  else{\n\t\t        //    dp[i]++;\n\t\t        //}\n\t\t    }\n\t\t}\n\t\tprintf(\"%d\\n\",dp[n-1]);\n\t}\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n\nconst int mod = 1e9 + 7;\n\nint cmp(const void* a,const void* b){\n\treturn (*(int*)a-*(int*)b);\n}\n\nint main(void){\n\tint t ;\n\t//scanf(\"%d\",&t);\n\tt=1;\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t    scanf(\"%d\",a+i);\n\t\t}\n\t\tint dp[n];\n\t\tif(a[0]==0){\n\t\t    dp[0]=1;\n\t\t}\n\t\telse{\n\t\t    dp[0]=0;\n\t\t}\n\t\tint prev;\n\t\tprev=a[0];\n\t\tfor(int i=1;i<n;i++){\n\t\t    dp[i]=dp[i-1];\n\t\t    if(a[i]==0){\n\t\t        prev=0;\n\t\t        dp[i]++;\n\t\t    }\n\t\t    else{\n\t\t        if(a[i]==1&&(prev==1)){\n\t\t            dp[i]++;\n\t\t            prev=0;\n\t\t        }\n\t\t        else if(a[i]==2&&(prev==2)){\n\t\t            dp[i]++;\n\t\t            prev=0;\n\t\t        }\n\t\t        else if(a[i]==3){\n\t\t            if(prev==1){\n\t\t                prev=2;\n\t\t            }\n\t\t            else if(prev==2){\n\t\t                prev=1;\n\t\t            }\n\t\t        }\n\t\t        else{\n\t\t            prev=a[i];\n\t\t        }\n\t\t    }\n\t\t}\n\t\tprintf(\"%d\\n\",dp[n-1]);\n\t}\n}"}
{"similarity_score": 0.3475177304964539, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "07d68fb68c45ef6fc734a5bfc3530871", "bug_code_uid": "a10b754b01c230fe7cd2f1e44dcc9834", "src_uid": "3a93a6f78b41cbb43c616f20beee288d", "apr_id": "cfe50ae0dfa96413432c8ee03a176896", "difficulty": 1100, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n    int i,n,k,j=0,l;\n    scanf(\"%d%d\",&n,&k);\n    if(k>n||(k==1&&n>1))\n    printf(\"-1\\n\");\n    else{\nif(n==1)\nprintf(\"a\\n\");\nelse{\n        l=n-(k-2);\n    for(i=0;i<l;i++)\n    {\n    printf(\"%c\",j+97);\n    j=!j;\n}\nj=2;\nfor(i=0;i<k-2;i++,j++)\nprintf(\"%c\",j+97);\nprintf(\"\\n\");}\n}\nreturn 0;\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n    int i,n,k,j=0,l,r;\n    scanf(\"%d%d\",&n,&k);\n   for(i=0;i<n;i++)\n   {\n        scanf(\"%d%d\",&l,&r);\n        j+=r-l+1;\n    }\n    i=0;\n    while(j%k!=0)\n    {\n     j++;\n     i++;   \n    }\n    printf(\"%d\\n\",i);\nreturn 0;\n}\n"}
{"similarity_score": 0.9979445015416238, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "853670934e559dc45657e433c97fa5b3", "bug_code_uid": "9235db74f7bec88ea7a31f37df22c1b5", "src_uid": "c1f247150831e9b52389bae697a1ca3d", "apr_id": "56e27a22193194e5211cc19fc8992993", "difficulty": 1300, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#define max(a,b) a>b?a:b\n#define min(a,b) a<b?a:b\n#define N 2001\n#define M 2001\ntypedef long long ll;\nchar a[N][M];\nint k, sum = 0,n,m;\n\nvoid findWays()\n{\n    for(int i = 1; i <= n; i++)\n    {\n        int tk = 0;\n        for(int j = 1; j <= m; j++)\n        {\n            if(a[i][j]=='.'){\n                tk++;\n                if(tk>=k)\n                sum++;\n            }else\n                tk = 0;\n        }\n    }\n    if(k==1)\n    return;\n    for(int i = 1; i <= m; i++)\n    {\n        int tk = 0;\n        for(int j = 1; j <= n; j++)\n        {\n            if(a[i][j]=='.'){\n                tk++;\n                if(tk>=k)\n                sum++;\n            }else\n                tk = 0;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= m; j++)\n        scanf(\" %c\",&a[i][j]);\n    }\n    findWays();\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#define max(a,b) a>b?a:b\n#define min(a,b) a<b?a:b\n#define N 2001\n#define M 2001\ntypedef long long ll;\nchar a[N][M];\nint k, sum = 0,n,m;\n\nvoid findWays()\n{\n    for(int i = 1; i <= n; i++)\n    {\n        int tk = 0;\n        for(int j = 1; j <= m; j++)\n        {\n            if(a[i][j]=='.'){\n                tk++;\n                if(tk>=k)\n                sum++;\n            }else\n                tk = 0;\n        }\n    }\n    if(k==1)\n    return;\n    for(int i = 1; i <= m; i++)\n    {\n        int tk = 0;\n        for(int j = 1; j <= n; j++)\n        {\n            if(a[j][i]=='.'){\n                tk++;\n                if(tk>=k)\n                sum++;\n            }else\n                tk = 0;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= m; j++)\n        scanf(\" %c\",&a[i][j]);\n    }\n    findWays();\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.9100169779286927, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "79f0126578901a0b1efcb262eb499ab6", "bug_code_uid": "c8cd2ee5a6a7e5942cac868313a41cff", "src_uid": "26f1b8c3cb83603c904e1508df4067f4", "apr_id": "2d5d18945365ae719fe8eb9b8aebcabb", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    char ch,str[200000];\n    int i,j;\n    for(i=0;i<200000;i++){\n        ch=getchar();\n        if (ch==' '||ch=='\\n') break;\n        if (i&&ch==str[i-1]) i-=2;\n        else str[i]=ch;\n    }\n    for(j=0;j<i;j++) printf(\"%c\",str[j]);\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    char ch,str[200000];\n    register int i,j;\n    for(i=0;i<200000;i++){\n        ch=getchar();\n        if (ch=='\\n') break;\n        if (i&&ch==str[i-1]) i-=2;\n        else str[i]=ch;\n    }\n    for(j=0;j<i;j++) putchar(str[j]);\n    putchar('\\n');\n    return 0;\n}\n"}
{"similarity_score": 0.9962141698215251, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8367f235eb0ab80ea8a505e0e2e8048f", "bug_code_uid": "e77755006a767d7db3635bb97dc007a0", "src_uid": "5c33d1f970bcc2ffaea61d5407b877b2", "apr_id": "3d76aa916235dadfdd1020bfafb30454", "difficulty": 1100, "tags": ["sortings", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<string.h>\n#include<stdio.h>\nint flag = 1;\nstruct Str\n{\n\tchar s[111];\n};\nint main()\n{\n\tint n;\n\twhile(~scanf(\"%d\",&n))\n\t{\n\t\tStr str[111];\n\t\tint i,j;\n\t\tflag = 1;\n\t\tfor(i = 0;i < n;i++)\n\t\t{\n\t\t\tgetchar();\n\t\t\tscanf(\"%s\",str[i].s);\n\t\t}\n\t\tfor(i=0;i<n-1;i++)\n\t\t{\n\t\t\tfor(j=i+1;j<n;j++)\n\t\t\t{\n\t\t\t\tif(strlen(str[i].s)>strlen(str[j].s) > 0)\n\t\t\t\t{\n\t\t\t\t\tchar c[111];\n\t\t\t\t\tstrcpy(c,str[i].s);\n\t\t\t\t\tstrcpy(str[i].s,str[j].s);\n\t\t\t\t\tstrcpy(str[j].s,c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=n-2;i>=0;i--)\n\t\t{\n\t\t\tint h1 = strlen(str[i].s),h2 = strlen(str[i+1].s),b=0,j,m=0;\n\t\t\tfor(int h=0;h<=h2-h1;h++)\n\t\t\t{\n\t\t\t\tfor(j=h;j<=h+h1-1;j++)\n\t\t\t\t{\n\t\t\t\t\tif(str[i+1].s[j] != str[i].s[j-h]) \n\t\t\t\t\t{\n\t\t\t\t\t\tm=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse m++;\n\t\t\t\t}\n\t\t\t\tif(m==h1)\n\t\t\t\t{\n\t\t\t\t\tb = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(b==0)\n\t\t\t{\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t} \n\t\t}\n\t\tif(!flag) puts(\"NO\");\n\t\telse\n\t\t{\n\t\t\tputs(\"YES\");\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t\tputs(str[i].s);\n\t\t}\n\t}\n}\n", "fixed": "#include<string.h>\n#include<stdio.h>\nint flag = 1;\nstruct Str\n{\n\tchar s[111];\n};\nint main()\n{\n\tint n;\n\twhile(~scanf(\"%d\",&n))\n\t{\n\t\tstruct Str str[111];\n\t\tint i,j;\n\t\tflag = 1;\n\t\tfor(i = 0;i < n;i++)\n\t\t{\n\t\t\tgetchar();\n\t\t\tscanf(\"%s\",str[i].s);\n\t\t}\n\t\tfor(i=0;i<n-1;i++)\n\t\t{\n\t\t\tfor(j=i+1;j<n;j++)\n\t\t\t{\n\t\t\t\tif(strlen(str[i].s)>strlen(str[j].s) > 0)\n\t\t\t\t{\n\t\t\t\t\tchar c[111];\n\t\t\t\t\tstrcpy(c,str[i].s);\n\t\t\t\t\tstrcpy(str[i].s,str[j].s);\n\t\t\t\t\tstrcpy(str[j].s,c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(i=n-2;i>=0;i--)\n\t\t{\n\t\t\tint h1 = strlen(str[i].s),h2 = strlen(str[i+1].s),b=0,j,m=0;\n\t\t\tfor(int h=0;h<=h2-h1;h++)\n\t\t\t{\n\t\t\t\tfor(j=h;j<=h+h1-1;j++)\n\t\t\t\t{\n\t\t\t\t\tif(str[i+1].s[j] != str[i].s[j-h]) \n\t\t\t\t\t{\n\t\t\t\t\t\tm=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse m++;\n\t\t\t\t}\n\t\t\t\tif(m==h1)\n\t\t\t\t{\n\t\t\t\t\tb = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(b==0)\n\t\t\t{\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t} \n\t\t}\n\t\tif(!flag) puts(\"NO\");\n\t\telse\n\t\t{\n\t\t\tputs(\"YES\");\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t\tputs(str[i].s);\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.7966457023060797, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 6, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "87c726f9506552ebd43a861d3e1d99d6", "bug_code_uid": "9c7654d9da8697d6a06ad9e5b7787575", "src_uid": "d5549c0627c236d82541a67ccbe7977d", "apr_id": "721fc5cebcfeb6e3f7ae2b7a8890b5de", "difficulty": 800, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int n[50],k[50],t,i,j,x;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n    \tscanf(\"%d%d\",&n[i],&k[i]);\r\n    \tif(2*k[i]-1>n[i]){\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tt=0;\r\n\t\t\tfor(j=1;j<=n[i];j++){\r\n\t\t\t\tfor(x=1;x<=n[i];x++){\r\n\t\t\t\t\tif(x==j&&t<k[i]&&j%2==1){\r\n\t\t\t\t\t\tprintf(\"R\");\r\n\t\t\t\t\t\tt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse printf(\".\");\r\n\t\t\t\t}\r\n\t\t\t\tprintf(\"\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int n,k,t,i,j,x,p;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n    \tscanf(\"%d %d\",&n,&k);\r\n    \tif(2*k-1>n){\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tp=0;\r\n\t\t\tfor(j=1;j<=n;j++){\r\n\t\t\t\tfor(x=1;x<=n;x++){\r\n\t\t\t\t\tif(x==j&&p<k&&j%2==1){\r\n\t\t\t\t\t\tprintf(\"R\");\r\n\t\t\t\t\t\tp++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse printf(\".\");\r\n\t\t\t\t}\r\n\t\t\t\tprintf(\"\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n"}
{"similarity_score": 0.16464237516869096, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "49ea869c40c1a7b08a8efb344c67b176", "bug_code_uid": "46e16196997aa2665fb7ef43fe96d09a", "src_uid": "f1d3032f1cb07ad6187a37c84376510d", "apr_id": "cca7286ced031c0a85f0b14bdf0a07d0", "difficulty": 800, "tags": ["brute force", "constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nint i = 0;\r\n\r\nint funct()\r\n{\r\n\tint a,l;\r\n\tint h,q;\r\n\tint d;\r\n\tint k, j, x, y, z;\r\n\tint c, b;\r\n\tscanf(\"%d %d\", &c, &b);\r\n\th = abs(c);\r\n\tk = abs(b);\r\n\t\r\n\tj = h + k ;\r\n\r\n\tif (c<0)\r\n\t{\r\n\t\tq=-j;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tq=j;\r\n\t}\r\n\t\r\n\r\n\t\r\n\tif (j%2!=0)\r\n\t{\r\n\t    printf(\"-1 -1\");\r\n\t\treturn 0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tprintf(\"%d %d\",j,0);\r\n\t\treturn 0;\r\n\t}\r\n\treturn 0;\r\n}\r\nint main()\r\n{\r\n\tint n;\r\n\r\n\tscanf(\"%d\", &n);\r\n\tfor (i = 0; i < n; i++)\r\n\t{\r\n\t\tfunct();\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n \r\nint main() {\r\n  int t, x, y;\r\n  scanf(\"%d\", &t);\r\n  while (t--) {\r\n    scanf(\"%d%d\", &x, &y);\r\n    (x + y) % 2 ? puts(\"-1 -1\") : x > y ? printf(\"%d 0\\n\", (x + y) / 2) : printf(\"0 %d\\n\", (x + y) / 2);\r\n  }\r\n  return 0;\r\n}"}
{"similarity_score": 0.9964747356051704, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "885aa2b52ab76af03f02f59729864161", "bug_code_uid": "d6dcb914463358ab8b8c777a9cba6eb3", "src_uid": "f4958b4833cafa46fa71357ab1ae41af", "apr_id": "368187cccffd850970588a071e36f57c", "difficulty": 900, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "/***************************************************\r\n\t       _               _           _ _       \r\n\t__   _(_) ___ __ _ ___(_)_ __   __| (_) __ _ \r\n\t\\ \\ / / |/ __/ _` / __| | '_ \\ / _` | |/ _` |\r\n\t \\ V /| | (_| (_| \\__ \\ | | | | (_| | | (_| |\r\n\t  \\_/ |_|\\___\\__,_|___/_|_| |_|\\__,_|_|\\__,_|\r\n\t                                             \r\n****************************************************/\r\n\r\n#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main(void)\r\n{\r\n    int test_cases;\r\n    scanf(\"%d\", &test_cases);\r\n\r\n    while(test_cases--)\r\n    {\r\n        long n;\r\n        scanf(\"%ld\", &n);\r\n        \r\n        if(n & 1)\r\n        {\r\n          printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n          if(n && (!(n&(n-1))))\r\n            printf(\"NO\\n\");\r\n          else    \r\n              printf(\"YES\\n\");\r\n        }\r\n    }\r\n    \r\n\treturn 0;\r\n}\r\n\r\n", "fixed": "/***************************************************\r\n\t       _               _           _ _       \r\n\t__   _(_) ___ __ _ ___(_)_ __   __| (_) __ _ \r\n\t\\ \\ / / |/ __/ _` / __| | '_ \\ / _` | |/ _` |\r\n\t \\ V /| | (_| (_| \\__ \\ | | | | (_| | | (_| |\r\n\t  \\_/ |_|\\___\\__,_|___/_|_| |_|\\__,_|_|\\__,_|\r\n\t                                             \r\n****************************************************/\r\n\r\n#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main(void)\r\n{\r\n    int test_cases;\r\n    scanf(\"%d\", &test_cases);\r\n\r\n    while(test_cases--)\r\n    {\r\n        long long n;\r\n        scanf(\"%lld\", &n);\r\n        \r\n        if(n & 1)\r\n        {\r\n          printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n          if(n && (!(n&(n-1))))\r\n            printf(\"NO\\n\");\r\n          else    \r\n              printf(\"YES\\n\");\r\n        }\r\n    }\r\n    \r\n\treturn 0;\r\n}\r\n\r\n"}
{"similarity_score": 0.4227188081936685, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "bf3074a089f1bf61e1f76cf7ef61ed1f", "bug_code_uid": "759cd9261ec972c65ca7350e4d49cc50", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "dc0d4fc0fefab6d6d464176756c1971e", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   long long int i,c=0,m=0,ct=1,b,s=0,j;\n    scanf(\"%lld\",&b);\n   long long int a[b];\n   \n    for(i=0;i<b;i++){\n        scanf(\"%lld\",&a[i]);\n       \n    }\n    \n    for(i=0,j=1;j<b;i++,j++)\n    {\n    \t\n        if(a[j]>=a[i])\n        {\n        \tct++;\n        \tif(ct>m)\n        \t{\n        \t\tm=ct;\n        \t}\n        \t\n        }\n        else\n        {\n        \tct=1;\n        }\n        \n    }\n    if(b==1)\n    {\n    \tprintf(\"1\");\n    }\n    \t\n    \telse\n    \t{\n    \t\tprintf(\"%lld\",m);\n    \t}\n       \n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int i,j=0,count1=1,count2=0,n;\n    scanf(\"%lld\",&n);\n    long long int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=0,j=1;j<n;j++,i++)\n    {\n        if(a[j]>=a[i])\n        {\n            count1++;\n        }\n        else\n        {\n            count1=1;\n        }\n        if(count1>count2)\n        {\n            count2=count1;\n        }\n    }\n    if(count2>0)\n    {\n        printf(\"%lld\",count2);\n    }\n    else\n    {\n        printf(\"1\");\n    }\n    return 0;\n}"}
{"similarity_score": 0.8814968814968815, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "8f326bbe88380179c8dfc95a95dca182", "bug_code_uid": "e4c42ce92755fbe25bb00d980d88e2f3", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "95eaebf553e25471a737cf2bab214d51", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m[1000],a,b,s=0,x,i;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n-1;i++){\n\t\tscanf(\"%d\",&m[i]);\n\t}\n\tscanf(\"%d %d\",&a,&b);\n\tx=b-a;\n\tfor(i=0;i<x;i++)\n\t{\n\t\ts=s+m[i];\n\t}\n\tprintf(\"%d\\n\",s);\n\t\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m[1000],a,b,s=0,x,i,y=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n-1;i++){\n\t\tscanf(\"%d\",&m[i]);\n\t}\n\tscanf(\"%d %d\",&a,&b);\n\tx=b-a;\n\tfor(i=a-1;i<n-1;i++)\n\t{\n\t\tif(y==x)\n\t\tbreak;\n\t\ts=s+m[i];\n\t\ty++;\n\t}\n\tprintf(\"%d\\n\",s);\n\t\n\treturn 0;\n}\n\t"}
{"similarity_score": 0.9596602972399151, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "8fac4e91e28feaff67073f1b2b2c8965", "bug_code_uid": "5aa2661ece97c8a90afbce5a6635c14f", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "eaf53917f8976b0a39eb585c5220f322", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int i,n,k,cnt=0;\n    scanf(\"%d %d\",&n,&k);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n        if(arr[i]==0 || arr[i]==1)\n            cnt++;\n    }\n\n\n\n    printf(\"%d\",cnt/3);\n\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int i,n,k,cnt=0;\n    scanf(\"%d %d\",&n,&k);\n    int arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n        if(arr[i]+k<=5)\n            cnt++;\n    }\n\n\n\n    printf(\"%d\",cnt/3);\n\n}\n"}
{"similarity_score": 0.9922178988326849, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0d90ce88a3fc91f66ecba0670fec065e", "bug_code_uid": "0a6a6eb94d0fac3ef4390e666009df5c", "src_uid": "9438ce92e10e846dd3ab7c61a1a2e3af", "apr_id": "338a30d6338d4171241809d42e939d6f", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint n,m,i,j,k,c=0,t;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[m]={0};\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&k);\n\t\tfor(j=0;j<k;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&t);\n\t\t\ta[t-1]=1;\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(a[i]==1)c++;\n\t}\n\tprintf(c==m?\"YES\":\"NO\");\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tint n,m,i,j,k,c=0,t;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[101]={0};\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&k);\n\t\tfor(j=0;j<k;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&t);\n\t\t\ta[t-1]=1;\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tif(a[i]==1)c++;\n\t}\n\tprintf(c==m?\"YES\":\"NO\");\n}"}
{"similarity_score": 0.5425790754257908, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "69b72aa6e0caf994edf326c970c8aa65", "bug_code_uid": "8047a19e59c3fd911eab86413e6cfc34", "src_uid": "78f25e2bc4ff22dbac94f72af68a745f", "apr_id": "03145476f7569b9f7de9c1e7d1ef8ff5", "difficulty": 900, "tags": ["implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t, v, l, i, j, rem, x;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\", &x, &v, &l);\n        if(x <= 10*l) printf(\"YES\\n\");\n        else{\n        rem = (x/2) + 10;\n        for(i=1; i<v; i++){\n            rem = (rem/2) + 10;\n            if(rem <= 10*l){\n                //printf(\"%d\", rem);\n                printf(\"YES\\n\");\n                break;\n            }\n        }\n        if(i==v) printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t, v, l, i, j, rem, x;\n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d %d %d\", &x, &v, &l);\n        while(x>0 && v && x>(x/2) + 10){\n            v--;\n            x  =  x/2 + 10;\n        }\n        if(x <= 10*l) printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9324191968658179, "equal_cnt": 21, "replace_cnt": 7, "delete_cnt": 2, "insert_cnt": 11, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "83f43aeb99f47605ae6c6777fd204ac2", "bug_code_uid": "54f44571b36b9eadc797795fd052c878", "src_uid": "c9744e25f92bae784c3a4833c15d03f4", "apr_id": "4cc5a084b16cc641259d4374680871b4", "difficulty": 1300, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <math.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint cmpfunc(const void *a, const void *b)\n{\n    return (*(int *)a - *(int *)b);\n}\n\nint main()\n{\n    int n;\n    int *a, *b;\n    int l, r;\n    scanf(\"%d\", &n);\n    a = (int *)malloc(sizeof(int) * n);\n    b = (int *)malloc(sizeof(int) * n);\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%i\", &a[i]);\n        b[i] = a[i];\n    }\n    qsort(b, n, sizeof(int), cmpfunc);\n    l = 0;\n    while(l < n && a[l] == b[l]){\n        l++;\n    }\n    if(l >= n){\n        printf(\"yes\\n\");\n        printf(\"1 1\");\n        return 1;\n    }\n    r = n -1;\n    while(a[r] == b [r]){\n        r--;\n    }\n    int tmp = (r + l)/2; \n    //printf(\"%d %d %d\", l, tmp, r);\n    for (int i = 0; i <= tmp - l; i++){\n        if(a[l + i] != b[r - i]){\n            printf(\"no\");\n            return 0;\n        }\n    }\n    printf(\"yes\\n\");\n    printf(\"%d %d\", l+1, r+1);\n    // for (int i = 0; i < n; i++)\n    // {\n    //     printf(\"%i \", a[i]);\n    // }\n}", "fixed": "#include <math.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint cmpfunc(const void *a, const void *b)\n{\n    return (*(int *)a - *(int *)b);\n}\n\nint main()\n{\n    int n;\n    int *a, *b;\n    int l, r;\n    scanf(\"%d\", &n);\n    a = (int *)malloc(sizeof(int) * n);\n    b = (int *)malloc(sizeof(int) * n);\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%i\", &a[i]);\n        b[i] = a[i];\n    }\n    qsort(b, n, sizeof(int), cmpfunc);\n    l = 0;\n    while (l < n && a[l] == b[l])\n    {\n        l++;\n    }\n    if (l >= n)\n    {\n        printf(\"yes\\n\");\n        printf(\"1 1\");\n        return 0;\n    }\n    r = n - 1;\n    while (a[r] == b[r])\n    {\n        r--;\n    }\n    //int tmp = (r + l)/2;\n    //printf(\"%d %d\\n\", l, r);\n    int i = 0;\n    while (i < r -l + 1)\n    {\n        if (a[l + i] != b[r - i])\n        {\n            printf(\"no\");\n            return 0;\n        }\n        i++;\n    }\n    printf(\"yes\\n\");\n    printf(\"%d %d\", l + 1, r + 1);\n    // for (int i = 0; i < n; i++)\n    // {\n    //     printf(\"%i \", a[i]);\n    // }\n}"}
{"similarity_score": 0.7864214992927864, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "e7afafa4fb03c3c8bf6b96ab5de87a09", "bug_code_uid": "ed1d4f0601fda3b4e3884c5104c0a525", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "e8536f7d0b3ee9116551bd7843eb1173", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tlong long int n,k,i,j,p,sum;\n\tscanf(\"%lld%lld\",&n,&k);\n\tlong long int a[n],b[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t    scanf(\"%lld%lld\",&a[i],&b[i]);\n\t}\n\tsum=a[0]-(b[0]-k);\n\tfor(i=1;i<n;i++)\n\t{\n\t    p=(a[i]-(b[i]-k));\n\t    if(sum>p) sum=p;\n\t}\n\tprintf(\"%lld\\n\",sum);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tlong long int n,k,i,j,p,sum;\n\tscanf(\"%lld%lld\",&n,&k);\n\tlong long int a[n],b[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t    scanf(\"%lld%lld\",&a[i],&b[i]);\n\t}\n\tif(b[0]>k) sum=(a[0]-(b[0]-k));\n\telse sum=a[0];\n\tfor(i=1;i<n;i++)\n\t{\n\t    if(b[i]>k)\n\t    {\n\t        p=(a[i]-(b[i]-k));\n\t        if(sum<p) sum=p;\n\t    }\n\t    else p=a[i];\n\t    if(sum<p) sum=p;\n\t}\n\tprintf(\"%lld\\n\",sum);\n\treturn 0;\n}"}
{"similarity_score": 0.9496951219512195, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "07a60427a79f309e4f53ec30728f36c4", "bug_code_uid": "458a89a00f12c7e046973005a9667f14", "src_uid": "859d66fc2c204a8c002012b1fb206645", "apr_id": "e3cddccf2c08c53781adaf1841da2290", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, m, x, y, i;\n    scanf(\"%d\", &n);\n    int ara[n];\n    for(i = 0; i <n; i++){\n        scanf(\"%d\", &ara[i]);\n    }\n    for(i = 0; i <n; i++){\n        printf(\"%d   \", ara[i]);\n    }\n    scanf(\"%d\", &m);\n    for(i = 1; i <= m; i++){\n        scanf(\"%d%d\", &x, &y);\n        if(x ==1){\n            ara[x] = ara[x] + ara[x-1]-y;\n        }\n        else if(x==n){\n                ara[x-2] = ara[x-2]  + y-1;\n        }\n        else {\n            ara[x-2] = ara[x-2] + y-1;\n            ara[x] = ara[x] + ara[x-1] - y;\n        }\n        ara[x-1] = 0;\n    }\n    for(i = 0; i <n; i++){\n        printf(\"%d\\n\", ara[i]);\n    }\n    return 0;\n}\n", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int n, m, x, y, i;\n    scanf(\"%d\", &n);\n    int ara[n];\n    for(i = 0; i <n; i++){\n        scanf(\"%d\", &ara[i]);\n    }\n    scanf(\"%d\", &m);\n    for(i = 1; i <= m; i++){\n        scanf(\"%d%d\", &x, &y);\n        if(x ==1){\n            ara[x] = ara[x] + ara[x-1]-y;\n        }\n        else if(x==n){\n                ara[x-2] = ara[x-2]  + y-1;\n        }\n        else {\n            ara[x-2] = ara[x-2] + y-1;\n            ara[x] = ara[x] + ara[x-1] - y;\n        }\n        ara[x-1] = 0;\n    }\n    for(i = 0; i <n; i++){\n        printf(\"%d\\n\", ara[i]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9954001839926403, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aa0d9d0648917e290b7227c09665c656", "bug_code_uid": "4214f3c6a33f062db139a0cabf7029e3", "src_uid": "07db573b0db736d798b6c18c06c32f3d", "apr_id": "5984e0a4b5f0db58bafa62ce5fbb29d4", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    \n    int n[t],i,j,r,l;\n    for(i=0;i<=t;i++){\n        scanf(\"%d\",&n[i]);\n    }\n    \n    for(i=0;i<t;i++){\n        \n        if(n[i]%2==0)\n        {   r=n[i]/2;\n            for(j=1;j<=r;j++){\n            printf(\"1\");\n            }\n        }\n         printf(\"\\n\");\n        else if(n[i]%2==1)\n        {\n            printf(\"7\");\n            l=n[i]/2;\n            \n         for(j=1;j<=l-1;j++){\n             printf(\"1\");\n         }\n         printf(\"\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    \n    int n[t],i,j,r,l;\n    for(i=0;i<t;i++){\n        scanf(\"%d\",&n[i]);\n    }\n    \n    for(i=0;i<t;i++){\n        \n        if(n[i]%2==0)\n        {   r=n[i]/2;\n            for(j=1;j<=r;j++){\n            printf(\"1\");\n            }\n        }\n         printf(\"\\n\");\n         if(n[i]%2==1)\n        {\n            printf(\"7\");\n            l=n[i]/2;\n            \n         for(j=1;j<=l-1;j++){\n             printf(\"1\");\n         }\n         printf(\"\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9562890276538805, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a009786a64c309817ab90a9809f9f853", "bug_code_uid": "44c04c2c39725585fb0cf3fac8980399", "src_uid": "ce68f1171d9972a1b40b0450a05aa9cd", "apr_id": "ca843bcc797370573d2c2e11db6dea59", "difficulty": 900, "tags": ["implementation", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n,a[10001],i,min,minplace=0,flag=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i==0)\n        {\n            min=a[i];\n        }\n        else if(a[i]==min)\n        {\n            flag=0;\n        }\n        else if(a[i]<min)\n        {\n            flag=1;\n            min=a[i];\n            minplace=i;\n        }\n    }\n    if(flag==0)\n    {\n        printf(\"Still Rozdil\");\n    }\n    else printf(\"%d\",minplace+1);\n    return 0;\n}\n\n\n                                                        ", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main()\n{\n    int n,a[100001],i,min,minplace=0,flag=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i==0)\n        {\n            min=a[i];\n        }\n        else if(a[i]==min)\n        {\n            flag=0;\n        }\n        else if(a[i]<min)\n        {\n            flag=1;\n            min=a[i];\n            minplace=i;\n        }\n    }\n    if(flag==0)\n    {\n        printf(\"Still Rozdil\");\n    }\n    else printf(\"%d\",minplace+1);\n    return 0;\n}\n\n\n        "}
{"similarity_score": 0.5652173913043478, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "d006fa1f2f57ff49597c56ffc16d3c8d", "bug_code_uid": "c8ff94caeb8434dd98e5b9be0470e90d", "src_uid": "b0ffab0bf169f8278af48fe2d58dcd2d", "apr_id": "75f6ad043f424b080bf0c055a19fd9cd", "difficulty": 1000, "tags": ["number theory", "sortings", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a[100000],i,j,c=0,k,t;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n\n    for(i=0;i<t;i++)\n    {\n        c=0;\n        for(j=0;j<t;j++)\n        {\n            if(a[j]%a[i] !=0)\n            {\n             c=1;\n             break;\n            }\n\n        }\n        if(c==0)\n        {\n            k=i;\n            break;\n        }\n    }\n    if(c==0)printf(\"%d\\n\",a[k]);\n    else printf(\"%d\\n\",-1);\n\n\n\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a[100000],i,j,c=0,k,t;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    int min=a[0];\n\n    for(i=1;i<t;i++)\n    {\n\n      if(min>a[i])\n      {\n          min=a[i];\n      }\n\n    }\n    for(i=0;i<t;i++)\n    {\n        if(a[i]%min!=0)c=1;\n    }\n    if(c==1)printf(\"-1\\n\");\n    else printf(\"%d\\n\",min);\n\n\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.2059659090909091, "equal_cnt": 19, "replace_cnt": 14, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "dbe82397a4d554485497995afcd5df7b", "bug_code_uid": "528d3fb8f7e0f9a6acec9fada91c674c", "src_uid": "fd47f1eb701077abc5ec67163ad4fcc5", "apr_id": "1f33a7ec922f10abe1bd04e3203f9adf", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n\tint t,i,j,k,l,n,m,sum=0;\r\n\tint arr[101];\r\n\tchar str[11]; \r\n\tscanf(\"%d\",&t);\r\n\tint tmp[10001];\r\n\tfor(i=0;i<10001;i++){\r\n\t\ttmp[i]=-1;\r\n\t}\r\n\tfor(i=0,l=0;i<t;i++,l++){\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d\",&arr[j]);\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++){\r\n\t\t\tscanf(\"%d\",&m);\r\n\t\t\tscanf(\"%s\",str);\r\n\t\t\tfor(k=0;k<m;k++){\r\n\t\t\t\tif(str[k]=='D'){\r\n\t\t\t\t\tif(arr[j]==9){\r\n\t\t\t\t\t\tarr[j]=0;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tarr[j]++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(arr[j]==0){\r\n\t\t\t\t\t\tarr[j]=9;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tarr[j]--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(j=0;j<n;j++,l++){\r\n\t\t\ttmp[l]=arr[j];\t\t\r\n\t\t}\r\n\t\ttmp[l]=-2;\r\n\t}\r\n\tfor(i=0;tmp[i]!=-1;i++){\r\n\t\tif(tmp[i]==-2){\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}else{\r\n\t\t\tprintf(\"%d \",tmp[i]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}//submitTime:1667623894827\n", "fixed": "#include<stdio.h>\r\nint a[105][105],n[105];\r\nchar s[105];\r\nint main()\r\n{\r\n\tint t,i,j,k,r,b;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t  {\r\n\t  \tscanf(\"%d\",&n[i]);\r\n\t  \tfor(j=1;j<=n[i];j++)\r\n\t\t\tscanf(\"%d\",&a[i][j]);\r\n\t\t  for(k=1;k<=n[i];k++)\r\n\t  \t  {\r\n\t  \t  \tscanf(\"%d%s\",&b,s);\r\n\t  \t  \tfor(r=b-1;r>=0;r--)\r\n\t  \t  \t  {\r\n\t  \t  \t  \tif(s[r]=='D')\r\n\t  \t  \t  \t a[i][k]=(a[i][k]+1)%10;\r\n\t  \t  \t  \t else if(s[r]=='U')\r\n                  a[i][k]=(a[i][k]+9)%10;\t  \t  \t  \t  \r\n\t\t\t  }\r\n\t\t  }\r\n\t}\r\n\tfor(i=1;i<=t;i++)\r\n\t  {\r\n\t  \tfor(j=1;j<=n[i];j++)\r\n\t  \t  printf(\"%d \",a[i][j]);\r\n\t  \t  printf(\"\\n\");\r\n\t  }\r\n\treturn 0;\r\n}//submitTime:1667627153168\n"}
{"similarity_score": 0.9872611464968153, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0cb53d4bc438e55ceea58adcfd81bbe7", "bug_code_uid": "168e16d427b5e5586c91dc1ac8cd1f61", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "4986ffad07f28f1b0edf0771fd1e90f8", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define MIN(a, b) (a < b) ? (a) : (b)\n\nint n, s, i; char d[1000], c;\n\nint main() {\n    scanf(\"%d\", &n);\n    scanf(\"%s\\n\", d);\n    for (i = 0, s = 0; i < n; i++) {\n        c = d[i] - ( c = getchar() );\n        s += MIN( abs(c), 10 - abs(c) );\n    }\n    printf(\"%d\\n\", s);\n}\n\n\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define MIN(a, b) (a < b) ? (a) : (b)\n \nint n, s, i; char d[1001], c;\n \nint main() {\n    scanf(\"%d\", &n);\n    scanf(\"%s\\n\", d);\n    for (i = 0, s = 0; i < n; i++) {\n        c = d[i] - ( c = getchar() );\n        s += MIN( abs(c), 10 - abs(c) );\n    }\n    printf(\"%d\\n\", s);\n}"}
{"similarity_score": 0.9966178128523112, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "981e4cea51d94bcd2cc28e47dd719da0", "bug_code_uid": "bfa3b982cbe1ce96bbca70e01054d432", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "7cf8bea71bd79346661ba77e3000c80a", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong long int n,max=0,min=3000000,i,c=0,d=0;\n\tscanf(\"%lld\",&n);\n\tlong long int arr[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\tfor(i=0;i<n;i++)\n\t\tif(max<arr[i])\n\t\tmax=arr[i];\n\tfor(i=0;i<n;i++)\n\t\tif(min>arr[i])\n\t\tmin=arr[i];\n\tfor(i=0;i<n;i++)\n\t\tif(arr[i]==max)\n\t\tc++;\n\tfor(i=0;i<n;i++)\n\t\tif(arr[i]==min)\n\t\td++;\n\tif(max==min)\n\t\tprintf(\"%lld %lld\",max-min,n*(n-1)/2);\n\telse\n\tprintf(\"%lld %lld\",max-min,c*d);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong long int n,max=0,min=3000000000,i,c=0,d=0;\n\tscanf(\"%lld\",&n);\n\tlong long int arr[n];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&arr[i]);\n\tfor(i=0;i<n;i++)\n\t\tif(max<arr[i])\n\t\tmax=arr[i];\n\tfor(i=0;i<n;i++)\n\t\tif(min>arr[i])\n\t\tmin=arr[i];\n\tfor(i=0;i<n;i++)\n\t\tif(arr[i]==max)\n\t\tc++;\n\tfor(i=0;i<n;i++)\n\t\tif(arr[i]==min)\n\t\td++;\n\tif(max==min)\n\t\tprintf(\"%lld %lld\",max-min,n*(n-1)/2);\n\telse\n\tprintf(\"%lld %lld\",max-min,c*d);\n}"}
{"similarity_score": 0.2266244057052298, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "d3e3c8cd57db497af2a3ad976420d6e0", "bug_code_uid": "66f2f6dbffac0e86bbadfcb53b4b2bcc", "src_uid": "5e5dbd70c7fcedf0f965aed5bafeb06c", "apr_id": "91a898b612608a8822fdd6e960fcbc40", "difficulty": 800, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define max 100000+5\nint main()\n{\n    int n,i,temp;\n    char str[max];\n    scanf(\"%d %s\",&n,str);\n    if(n%4==0)\n    {\n        temp=n/4;\n        for(i=0;i<temp;i++)\n        {\n            printf(\"0 \");\n        }\n    }\n    else if(n%4==3)\n    {\n        printf(\"1 \");\n        temp=n/4;\n        for(i=0;i<temp;i++)\n        {\n            printf(\"0 \");\n        }\n    }\n    else if(n%4==2)\n    {\n        if(n%3==0)\n        {\n            temp=n/3;\n            for(i=0;i<temp;i++)\n            {\n                printf(\"1 \");\n            }\n        }\n        else\n        {\n            while(n%3!=0)\n            {\n                printf (\"0 \");\n                n-=4;\n            }\n            if(n%3==0)\n        {\n            temp=n/3;\n            for(i=0;i<temp;i++)\n            {\n                printf(\"1 \");\n            }\n        }\n\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define max 100000+5\nint main()\n{\n    int n,i,temp,count=0;\n    char str[max];\n    scanf(\"%d %s\",&n,str);\n    for(i=0;i<n;i++)\n    {\n        if(str[i]=='n')\n            count++;\n    }\n    for(i=0;i<count;i++)\n        printf(\"1 \");\n    temp=n-(3*count);\n    temp/=4;\n    for(i=0;i<temp;i++)\n        printf(\"0 \");\n    return 0;\n}"}
{"similarity_score": 0.8728448275862069, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "3945f66cd316de4c66d10df353da8c58", "bug_code_uid": "e192b295e29961b0a59c792d2384e795", "src_uid": "b01602b51b9103c0f31c3f50b32aa88d", "apr_id": "c856cfdd931f965dd142968ce029e63b", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,s,t,pos[262144],mrbl,i;\n    scanf(\"%d%d%d\",&n,&s,&t);\n    for(i=1; i<=n; i++)\n    scanf(\"%d\",&pos[i]);\n    mrbl=s;\n   // printf(\"%d\\n\",pos[s]);\n   if(s==t) printf(\"0\");\n   else if(s==pos[pos[s]]&&s!=t)\n        printf(\"-1\");\n    else\n    {\n    for(i=1; i<=n ;i++)\n    {\n        mrbl=pos[mrbl];\n        if(mrbl==t)\n        break;\n    }\n    if(i==n+1) printf(\"-1\");\n    else       printf(\"%d\",i);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,s,t,pos[262144],mrbl,i;\n    scanf(\"%d%d%d\",&n,&s,&t);\n    for(i=1; i<=n; i++)\n    scanf(\"%d\",&pos[i]);\n    mrbl=s;\n   // printf(\"%d\\n\",pos[s]);\n   mrbl=pos[mrbl];\n   if(s==t)\n        printf(\"0\");\n   else if(mrbl==s)\n        printf(\"-1\");\n    else\n    {\n    for(i=1; i<=n ;i++)\n    {\n        if(mrbl==t)\n        break;\n        mrbl=pos[mrbl];\n    }\n    if(i==n+1) printf(\"-1\");\n    else       printf(\"%d\",i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9689857502095558, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "027e6710a1f38050695cf6dbe39b0f77", "bug_code_uid": "9eebf5c3c2812c6c0cbc4be69248a19e", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "e6b9658178778634634a964ea44856f9", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong max(long x,long y)\n{\n    if(x>y)\n        return x;\n    return y;\n}\nint main()\n{\n    long n,i;\n    scanf(\"%ld\",&n);\n    long array[n];\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&array[i]);\n    long dp[n],equal[n];\n    dp[n-1]=array[n-1];\n    equal[n-1]=0;\n    for(i=n-2;i>=0;i--)\n    {\n        dp[i]=max(array[i],dp[i+1]);\n        if(array[i]==dp[i+1])\n            equal[i]=1;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(dp[i]!=array[i]||equal[i])\n            printf(\"%ld \",dp[i]-array[i]+1);\n        else\n            printf(\"%d \",0);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nlong max(long x,long y)\n{\n    if(x>y)\n        return x;\n    return y;\n}\nint main()\n{\n    long n,i;\n    scanf(\"%ld\",&n);\n    long array[n];\n    for(i=0;i<n;i++)\n        scanf(\"%ld\",&array[i]);\n    long dp[n],equal[n];\n    dp[n-1]=array[n-1];\n    equal[n-1]=0;\n    for(i=n-2;i>=0;i--)\n    {\n        dp[i]=max(array[i],dp[i+1]);\n        if(array[i]==dp[i+1])\n            equal[i]=1;\n        else\n            equal[i]=0;\n    }\n    for(i=0;i<n;i++)\n    {\n        if(dp[i]!=array[i]||equal[i])\n            printf(\"%ld \",dp[i]-array[i]+1);\n        else\n            printf(\"%d \",0);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.972079772079772, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "5ec73aa967972ec1f082f13edf960eee", "bug_code_uid": "7371cc469ccdc9d07060fe5e95b564ce", "src_uid": "a5363163c1c2dfed91947a582ac28bda", "apr_id": "c0b89d248b7a38378694fed1e738232f", "difficulty": 1900, "tags": ["dsu", "dfs and similar", "trees", "shortest paths"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define MAX 205\nint main()\n{\n\tint n, i, j, flag = 0;\n\tint a[MAX][MAX];\n\t\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[i][j]);\n\t\t\tif (i > j && a[i][j] != a[j][i])\n\t\t\t\tflag = 1;\n\t\t\tif (i == j)\n\t\t\t\tif (a[i][j])\n\t\t\t\t\tflag = 1;\n\n\t\t}\n\t}\n\ti = 0;\n\tint b;\n\n\twhile (i < n && !flag)\n\t{\n\t\tb = 1;\n\t\tfor (int j = 1; j < n; j++)\n\t\t{\n\t\t\tif (i == j)continue;\n\t\t\tif (a[i][j]<a[i][b])\n\t\t\t\tb = j;\t\t\t\t//find shortest path\n\t\t}\n\t\tfor (int j = 0; j < n; ++j) \n\t\t{\n\t\t\tif (a[i][j] == 0 && i != j)\n\t\t\t{\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i == j ||b == j)continue;\n\t\t\tif (abs(a[i][j] - a[j][b]) != a[i][b])\n\t\t\t{\t\t\t\t\t\t\t\t\t\t//cannot be other than shortest path distance!\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\n\tif (flag)\n\t\tprintf(\"NO\");\n\telse\n\t\tprintf(\"YES\");\n\n\t//system(\"pause\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#define MAX 2005\nint main()\n{\n\tint n, i, j, flag = 0;\n\tint a[MAX][MAX];\n\t\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &a[i][j]);\n\t\t\tif (i > j && a[i][j] != a[j][i])\n\t\t\t\tflag = 1;\n\t\t\tif (i == j)\n\t\t\t\tif (a[i][j])\n\t\t\t\t\tflag = 1;\n\n\t\t}\n\t}\n\ti = 0;\n\tint b;\n\n\twhile (i < n && !flag)\n\t{\n\t\tb = !i;\n\t\tfor (int j = 0; j < n; ++j)\n\t\t{\n\t\t\tif (i == j)continue;\n\t\t\tif (a[i][j]<a[i][b])\n\t\t\t\tb = j;\t\t\t\t//find shortest path\n\t\t}\n\t\tfor (int j = 0; j < n; ++j) \n\t\t{\n\t\t\tif (a[i][j] == 0 && i != j)\n\t\t\t{\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i == j || b == j)continue;\n\t\t\tif (abs(a[i][j] - a[j][b]) != a[i][b])\n\t\t\t{\t\t\t\t\t\t\t\t\t\t//cannot be other than shortest path distance!\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\n\tif (flag)\n\t\tprintf(\"NO\");\n\telse\n\t\tprintf(\"YES\");\n\n//\tsystem(\"pause\");\n\treturn 0;\n}"}
{"similarity_score": 0.8179059180576631, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "ca8b604b344fcc595fbc4ee4ba5028df", "bug_code_uid": "9846334a72c61f3a7a6d158d4bc8053f", "src_uid": "9693f60fc65065d00a1899df999405fe", "apr_id": "421d9dd7a78da337d55b7a6edd63a419", "difficulty": 1300, "tags": ["combinatorics", "math", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\nchar c[200000];\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", &c);\n\tchar c1 = c[0];\n\tchar c2 = c[n - 1];\n\tint t1=1, t2=1;\n#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\nchar c[200000];\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", &c);\n\tchar c1 = c[0];\n\tchar c2 = c[n - 1];\n\tlong long t1=1, t2=1;\n\tfor(int i=1;i<n;i++)\n\t\tif (c[0] == c[i])\n\t\t{\n\t\t\tt1++;\n\t\t}\n\t\telse break;\n\tfor (int i = n-2; i>=0; i--)\n\t\t\tif (c[n-1] == c[i])\n\t\t\t{\n\t\t\t\tt2++;\n\t\t\t}\n\t\t\telse break;\n\t\t\tif (t1 == n)\n\t\t\t{\n\t\t\t\tlong long sum = (n*n+n)/2;\n\t\t\t\tprintf(\"%lld\",sum);\n\t\t\t}\n\t\t\telse if (c1 == c2)\n\t\t\t{\n\t\t\t\tprintf(\"%lld\",(t1+1)*(t2+1));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%lld\", t2 + 1 + t1);\n\t\t\t}\n}", "fixed": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\nchar c[200000];\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", &c);\n\tchar c1 = c[0];\n\tchar c2 = c[n - 1];\n\tlong long t1=1, t2=1;\n\tfor(int i=1;i<n;i++)\n\t\tif (c[0] == c[i])\n\t\t{\n\t\t\tt1++;\n\t\t}\n\t\telse break;\n\tfor (int i = n-2; i>=0; i--)\n\t\t\tif (c[n-1] == c[i])\n\t\t\t{\n\t\t\t\tt2++;\n\t\t\t}\n\t\t\telse break;\n\t\t\tif (t1 == n)\n\t\t\t{\n\t\t\t\tlong long sum = ((n*n+n)/2)%998244353;\n\t\t\t\tprintf(\"%lld\",sum);\n\t\t\t}\n\t\t\telse if (c1 == c2)\n\t\t\t{\n\t\t\t\tprintf(\"%lld\",(t1+1)*(t2+1)%998244353);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%lld\", (t2 + 1 + t1)%998244353);\n\t\t\t}\n}"}
{"similarity_score": 0.12966601178781925, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "7a8e4ed408e84afa6fd4d32636a9248f", "bug_code_uid": "53b6ed46640e0c8e62ecdd7887687502", "src_uid": "8c5d9b4fd297706fac3be83fc85028a0", "apr_id": "d849d88eccce00cda95c540d1b412325", "difficulty": 1400, "tags": ["brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include <stdlib.h> \nint comp(const void* p,const void* q)\n{\n\treturn -(*( const int*)q)+(*( const int*)p);\n\t\n}\n#define ll long long\nint main(){\nll n,d,e;\nscanf(\"%lld%lld%lld\",&n,&d,&e);\nll dol[12],bal[12],min[12];\ndol[0]=1;dol[1]=2;dol[2]=5;dol[3]=10;dol[4]=20;dol[5]=50;dol[6]=100;dol[7]=5;dol[8]=10;dol[9]=20;\ndol[10]=50;dol[11]=100;dol[12]=200;\nfor(int i=0;i<7;i++){\n dol[i]*=d;\n //printf(\"%lld \",dol[i]);\n }\nfor(int i=0;i<6;i++) {dol[7+i]*=e;\n//printf(\"%lld \",eu[i]);\n}\nqsort(dol,12,sizeof(ll),comp);\nfor(int i=11;i>=0;i--){ if(n>=dol[i]) bal[i]=n%dol[i];\nelse bal[i]=n;}\nfor(int i=0;i<=11;i++){min[i]=bal[i];\nfor(int j=i-1;j>=0;j--){\nif((bal[i]%dol[j])<min[i]) min[i]=(bal[i]%dol[j]);\n\n}\n}\nqsort(min,12,sizeof(ll),comp);\n\n\nprintf(\"%lld\",min[0]);\n\n\n\n\nreturn 0;}\n", "fixed": "#include<stdio.h>\n#define ll long long\nint main(){\nll n,d,e,min=10000000001,ans;\nscanf(\"%lld%lld%lld\",&n,&d,&e);\nfor(int i=(n/d);i>=0;i--){\nans=(n-(i)*d)%(5*e);\nif(ans<min) min=ans;\n}\nprintf(\"%lld\",min);\n\n\nreturn 0;}\n"}
{"similarity_score": 0.8108108108108109, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1176bb01237bdd41aa7032745f7b4fd1", "bug_code_uid": "3eac2093102b4b3dfda49f97d8d386a1", "src_uid": "17cf2d6f59773925b228188b5a47b710", "apr_id": "949393dd59cc7616a1ccb7a8d9e170a7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\n\twhile (t--) {\n\t\tint a, b, c, d, k;\n\t\tscanf(\"%d %d %d %d %d\", &a, &b, &c, &d, &k);\n\n\t\tif (a/c + b/d > k) {\n\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"%d %d\\n\", a/c, b/d);\n\t\t}\n\t}\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\n\twhile (t--) {\n\t\tint a, b, c, d, k;\n\t\tscanf(\"%d %d %d %d %d\", &a, &b, &c, &d, &k);\n\n\t\tint num1 = (a%c == 0) ? (a/c) : (a/c+1);\n\t\tint num2 = (b%d == 0) ? (b/d) : (b/d+1);\n\t\tif (num1 + num2 > k) {\n\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"%d %d\\n\", num1, num2);\n\t\t}\n\t}\n\n\treturn 0;\n}"}
{"similarity_score": 0.6328671328671329, "equal_cnt": 16, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 8, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "f4c1220abb685e7d697d40d3657b3ba0", "bug_code_uid": "1b3b7919255de43763b0e2c81c11abb7", "src_uid": "c014861f27edf35990cc065399697b10", "apr_id": "24c623dd55b6c737d30b9ad8a3a3bb6f", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\ntypedef struct Student\n{\n    int index, value\n}Student;\nint cmp(void* a, void* b)\n{ \n    Student* aa = (Student*)a;\n    Student* bb = (Student*)b;\n    return (*aa).value - (*bb).value;\n}\nint main() \n{\n    int n, i, j, c = 0;\n    scanf(\"%d\", &n);\n    Student array[n];\n    for(i = 0; i < n; i++) \n    {\n        scanf(\"%d\", &array[i].value);\n        array[i].index = i + 1;\n    }\n    qsort(array, n, sizeof(Student), cmp);\n    for(i = 0, j = n - 1; i <= j; )\n    {\n        \n        if(array[i].value == 1 && array[n/2 + i].value == 2 && array[j].value == 3) \n        {\n            printf(\"%d %d %d\\n\", array[i].index, array[n/2 + i].index, array[j].index);\n            c++;\n            i++;\n            j--;\n        }\n        else break;\n    } \n    printf(\"%d\", c);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\ntypedef struct Student\n{\n    int index, value;\n}Student;\nint cmp(void* a, void* b)\n{ \n    Student* aa = (Student*)a;\n    Student* bb = (Student*)b;\n    return (*aa).value - (*bb).value;\n}\nint min(int a, int b){return (a < b ? a : b);}\nint main() \n{\n    int n, i, j, k, c = 0;\n    scanf(\"%d\", &n);\n    Student array[n];\n    int nums[4] = {0};\n    for(i = 0; i < n; i++) \n    {\n        scanf(\"%d\", &array[i].value);\n        nums[array[i].value]++;\n        array[i].index = i + 1;\n        c = min(nums[1], min(nums[2], nums[3]));\n    }\n    qsort(array, n, sizeof(Student), cmp);\n    printf(\"%d\\n\", c);\n    i = 0, j = nums[1], k = nums[1] + nums[2];\n    while(c--)\n    {\n        printf(\"%d %d %d\\n\", array[i].index, array[j].index, array[k].index);\n        i++; j++; k++;\n    }\n\treturn 0;\n}"}
{"similarity_score": 0.23654390934844194, "equal_cnt": 19, "replace_cnt": 11, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "014dde819e8679a84716101bbd75cb07", "bug_code_uid": "5b5ada1230c75a051b209728fb43d083", "src_uid": "08c4d8db40a49184ad26c7d8098a8992", "apr_id": "2624814c1f46b5f17224d361acfbec28", "difficulty": 1300, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    long long int n, a[100000], b[100000], temp=0, con=0, i, j;\n    scanf(\"%lld\", &n);\n    \n    for(i=0; i<n; i++){\n        scanf(\"%lld\", &a[i]);\n    }\n    \n    for(i=0; i<n; i++){\n        b[i]=a[i];\n    }\n    \n    for(i=0; i<n; i++){\n        for(j=i+1; j<n; j++){\n            if (a[i]>a[j]){\n            temp=a[i];\n            a[i]=a[j];\n            a[j]=temp;\n            }\n        }\n   }\n   \n   for(i=0; i<n; i++){\n       if(a[i]!=b[i]) con++;\n    }\n   \n  printf(\"%lld\", con+1);\n\t\nreturn 0;\n}", "fixed": "void qs(int *a, int aux, int aux1) {\n    int i, j, x, y;\n     \n    i=aux; //0\n    j=aux1; //n-1\n    x=a[(aux+aux1)/2]; \n     \n    while(i<=j) {\n        while(a[i]<x && i<aux1) {\n            i++;\n        }\n        while(a[j]>x && j>aux) {\n            j--;\n        }\n        if(i<=j) {\n            y=a[i];\n            a[i]=a[j];\n            a[j]=y;\n            i++;\n            j--;\n        }\n    }\n     \n    if(j>aux) {\n        qs(a, aux, j);\n    }\n    if(i<aux1) {\n        qs(a, i, aux1);\n    }\n}\n\nint main(){\n    int n, i, j, con=0,  con1=0;\n    \n        scanf(\"%d\", &n);\n        int a[n];\n        for(i=0; i<n; i++){\n            scanf(\"%d\", &a[i]);\n        }\n        \n        qs(a, 0, n-1);\n        \n        for(i=0; i<n; i++){\n        if(a[i]>=con) con1++, con+=a[i];\n    }\n    \n    printf(\"%d\", con1);\n    \n    return 0;\n}"}
{"similarity_score": 0.877431906614786, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "20f352a6197cbf23d668b26adf60e317", "bug_code_uid": "964f9651ca47def384a8243b1544eb7d", "src_uid": "c01fc2cb6efc7eef290be12015f8d920", "apr_id": "f0d395b576b7111eb00e6eec2fa9239f", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long ll;\nint main()\n    {\n        ll n,check=0;\n        scanf(\"%I64d\",&n);\n        char str[n+35];\n        scanf(\"%s\",&str);\n        for(int i=1;i<=n;i++)\n        {\n            if(str[i]<str[i-1]&&check==0)\n            {\n                check++;\n                i++;\n                printf(\"%c\",str[i-1]);\n\n            }\n            else\n            {\n                printf(\"%c\",str[i-1]);\n            }\n\n        }\n    }\n", "fixed": "#include<stdio.h>\ntypedef long long ll;\nint main()\n    {\n        ll n,check=0,count=0;\n        scanf(\"%I64d\",&n);\n        char str[n+100];\n        scanf(\"%s\",&str);\n        for(int i=1;i<=n;i++)\n        {\n            //printf(\"%c\\n\",str[i-1]);\n            if(str[i]<str[i-1]&&check==0&count<n-1)\n            {\n                check++;\n                count++;\n                i++;\n                printf(\"%c\",str[i-1]);\n\n            }\n            else if(count<n-1)\n            {\n                count++;\n                printf(\"%c\",str[i-1]);\n            }\n\n        }\n    }\n"}
{"similarity_score": 0.976271186440678, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "1731f06280e4eeada5be5bfc55ceed54", "bug_code_uid": "fac1106ece86803942dc0704c1ebe79c", "src_uid": "8ad06ac90b258a8233e2a1cf51f68078", "apr_id": "4a547d466982b44c28aaf2fa436c698f", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,c=0;\n\tchar s[2*10^5];\n\tscanf(\"%d %s\",&n,s);\n\tfor(i=0;i<n;i+=2)\n\t{\n\t\tif(s[i]=='a' && s[i+1]=='a')\n\t\t{\n\t\t\ts[i+1]='b';\n\t\t\tc=c+1;\n\t\t}\n\t\telse if(s[i]=='b' && s[i+1]=='b')\n\t\t{\n\t\t\ts[i+1]='a';\n\t\t\tc=c+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n%s\",c,s);\n\treturn 0;\n}\t", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,i,c=0;\n\tchar s[200000];\n\tscanf(\"%d %s\",&n,s);\n\tfor(i=0;i<n;i+=2)\n\t{\n\t\tif(s[i]=='a' && s[i+1]=='a')\n\t\t{\n\t\t\ts[i]='b';\n\t\t\tc=c+1;\n\t\t}\n\t\telse if(s[i]=='b' && s[i+1]=='b')\n\t\t{\n\t\t\ts[i]='a';\n\t\t\tc=c+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n%s\",c,s);\n\treturn 0;\n}\t"}
{"similarity_score": 0.9648173207036536, "equal_cnt": 11, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 10, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "be81492b98bc989e2aaa179aebca8621", "bug_code_uid": "17a4be8afe7a7b222927b3d466485e56", "src_uid": "b63a6369023642a8e7e8f449d7d4b73f", "apr_id": "36176d5eeb7a4885fbf0ede6f672f84e", "difficulty": 900, "tags": ["greedy", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t, aph, hvh, n, hvm, sum, num, max1;\r\n    int *apm;\r\n    scanf(\"%d\", &t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        sum  = max1= 0;\r\n        scanf(\"%d %d %d\", &aph, &hvh, &n);\r\n        apm = (int *)malloc(n*sizeof(int));\r\n        for(int j=0; j<n; j++)\r\n        {\r\n            scanf(\"%d\", apm+j);\r\n            if(apm[j]>max1) max1 = apm[j];\r\n        }\r\n        for(int j=0; j<n; j++)\r\n        {\r\n            scanf(\"%d\", &hvm);\r\n            num = hvm/aph;\r\n            if(hvm%aph!=0) num = num+1;\r\n            sum = sum+num*apm[j];\r\n        }\r\n        if(sum > hvh+max1) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    long long int t, aph, hvh, n, hvm, sum, num, max1;\r\n    long long int *apm;\r\n    scanf(\"%lld\", &t);\r\n    for(int i=0; i<t; i++)\r\n    {\r\n        sum  = max1= 0;\r\n        scanf(\"%lld %lld %lld\", &aph, &hvh, &n);\r\n        apm = (long long int *)malloc(n*sizeof(long long int));\r\n        for(int j=0; j<n; j++)\r\n        {\r\n            scanf(\"%lld\", apm+j);\r\n            if(apm[j]>max1) max1 = apm[j];\r\n        }\r\n        for(int j=0; j<n; j++)\r\n        {\r\n            scanf(\"%lld\", &hvm);\r\n            num = hvm/aph;\r\n            if(hvm%aph!=0) num = num+1;\r\n            sum = sum+num*apm[j];\r\n        }\r\n        if(sum > hvh+max1) printf(\"NO\\n\");\r\n        else printf(\"YES\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9187725631768953, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "91c8e2dbbb2bad0430f405927a881fef", "bug_code_uid": "f74f4e0cf17bee5092d6d3c3a4e0f9aa", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "1ad91461fe3191c9e0fd5feb44c1c9b0", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,m_idx,t,s;\n    scanf(\"%d\",&n);\n    int arra[n][2];\n    t=0;\n    m_idx=0;\n    s=0;\n    for(i=0;i<n;i++){\n            scanf(\"%d %d\",&arra[i][0],&arra[i][1]);\n            }\n\n    for(i=0;i<n;i++){\n        if(arra[m_idx][1]>=arra[i][1]){\n            m_idx=i;\n        }\n        if(i==n-1){\n            for(j=m_idx;j<n;j++){\n                s=s+(arra[j][0]);\n            }\n            t=t+s*arra[m_idx][1];\n            s=0;\n            n=m_idx;\n            i=-1;\n            m_idx=0;\n        }\n\n    }\n    printf(\"%d\",t);\n    return 0;\n    }\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,m_idx,t,s;\n    scanf(\"%d\",&n);\n    int arra[n][2];\n    t=0;\n    m_idx=0;\n    for(i=0;i<n;i++)scanf(\"%d %d\",&arra[i][0],&arra[i][1]);\n\n    for(i=0;i<n;i++){\n        if(arra[m_idx][1]>arra[i][1]){\n            m_idx=i;\n        }\n        if(i==n-1){\n            s=0;\n            for(j=m_idx;j<n;j++){\n                s=s+arra[j][0];\n\n            }\n            t=t+s*arra[m_idx][1];\n\n            n=m_idx;\n            i=-1;\n            m_idx=0;\n        }\n\n    }\n    printf(\"%d\",t);\n\n    }\n"}
{"similarity_score": 0.9528358208955224, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "0af9425c5c1454aab714baf407ac5a5e", "bug_code_uid": "83e7245e08c4d0bbbdb80ae70c60de80", "src_uid": "a52ceb8a894809b570cbb74dc5ef76e1", "apr_id": "13f8fec3f9b7867e4efc2c1a7b521e54", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n\nint main()\n{\n\tint i, n;\n\tscanf(\"%d\", &n);\n\tif (n == 2)\n\t\tprintf(\"0\");\n\telse\n\tif (n > 2 && n < 5)\n\t\tprintf(\"2\\n1 3\");\n\telse\n\t{\n\t\tprintf(\"%d\\n\", n);\n\t\tfor (i = 1; i <= n; i += 2)\n\t\t\tprintf(\"%d \", i);\n\t\tfor (i = 2; i <= n; i += 2)\n\t\t\tprintf(\"%d \", i);\n\t}\n\treturn 0;\n}\n\n/*#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#define SIZE 30\n\nint n;\nint e[SIZE][SIZE], adj[SIZE][SIZE];\n\nvoid read_block(int h)\n{\n\tint i, pn;\n\tscanf(\"%d\", &pn);\n\tfor (i = 0; i < pn; i++)\n\t{\n\t\tint x, y;\n\t\tdo\n\t\t{\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x != 0)\n\t\t\t{\n\t\t\t\tscanf(\"%d\", &y);\n\t\t\t\tadj[x][h - 1] = 1;\n\t\t\t\te[x][h - 1] = y;\n\t\t\t}\n\t\t} while (x != 0);\n\t}\n}\n\t\nint main()\n{\n\tint i;\n\tscanf(\"%d\", &n);\n\n\tfor (i = n; i > 1; i--)\n\t{\n\t\tread_block(i);\n\t\tscanf(\"*\\n\");\n\t}\n\tread_block(1);\n\n\treturn 0;\n}*/\n\n\n\n\n\n\n\n\n", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n\nint main()\n{\n\tint i, n;\n\tscanf(\"%d\", &n);\n\tif (n == 2)\n\t\tprintf(\"1\\n1\");\n\telse if (n == 3)\n\t\tprintf(\"2\\n1 3\");\n\telse if (n == 4)\n\t\tprintf(\"4\\n3 1 4 2\");\n\telse\n\t{\n\t\tprintf(\"%d\\n\", n);\n\t\tfor (i = 1; i <= n; i += 2)\n\t\t\tprintf(\"%d \", i);\n\t\tfor (i = 2; i <= n; i += 2)\n\t\t\tprintf(\"%d \", i);\n\t}\n\n\treturn 0;\n}\n\n/*#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#define SIZE 30\n\nint n;\nint e[SIZE][SIZE], adj[SIZE][SIZE];\n\nvoid read_block(int h)\n{\n\tint i, pn;\n\tscanf(\"%d\", &pn);\n\tfor (i = 0; i < pn; i++)\n\t{\n\t\tint x, y;\n\t\tdo\n\t\t{\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (x != 0)\n\t\t\t{\n\t\t\t\tscanf(\"%d\", &y);\n\t\t\t\tadj[x][h - 1] = 1;\n\t\t\t\te[x][h - 1] = y;\n\t\t\t}\n\t\t} while (x != 0);\n\t}\n}\n\t\nint main()\n{\n\tint i;\n\tscanf(\"%d\", &n);\n\n\tfor (i = n; i > 1; i--)\n\t{\n\t\tread_block(i);\n\t\tscanf(\"*\\n\");\n\t}\n\tread_block(1);\n\n\treturn 0;\n}*/\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.8313725490196079, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ec11e1415ae74d1e7b6d6e7021475d0b", "bug_code_uid": "6dba9e834837d07858ef324480f47960", "src_uid": "ab7ab67941783da5c16f6294eb1910d9", "apr_id": "8fbdce5b63978797f1b27602e5a51d9e", "difficulty": 800, "tags": ["greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,n,i,b;\r\n    int a[100000]={};\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int c=0;\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&b);\r\n            if(a[b]) c++;\r\n            else a[b]=1;\r\n        }\r\n        if(c%2 == 0) printf(\"%d\\n\",n-c);\r\n        else printf(\"%d\\n\",n-c-1);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t,n,i,b;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int c=0;\r\n        int a[100000]={0};\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&b);\r\n            if(a[b]) c++;\r\n            else a[b]=1;\r\n        }\r\n        if(c%2 == 0) printf(\"%d\\n\",n-c);\r\n        else printf(\"%d\\n\",n-c-1);\r\n    }\r\n}"}
{"similarity_score": 0.8931475029036005, "equal_cnt": 11, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "6cf76b62caa97c8aa2332c6ee9e8e4ce", "bug_code_uid": "21b78df904a764ed231ea4fdf86b2edc", "src_uid": "594e64eef7acd055d59f37710edda201", "apr_id": "50683df023ff57664059b45f3bc64f7c", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void){\n    int n, x, y;\n    scanf(\"%d\", &n);\n    int points[402]= {0};\n    int check[201]= {0};\n    for(int i=0; i<n*2; i+=2){\n        scanf(\"%d %d\", &x, &y);\n        points[i] = x;\n        points[i+1] = y;\n    }\n    for(int i=0; i<n*2; i+=2){\n        for(int b=0; b<n*2; b+=2){\n            if(points[b] == points[i] && points[b+1] > points[i+1]) ++check[i/2];\n            else if(points[b] == points[i] && points[b+1] < points[i+1]) ++check[i/2];\n            else if(points[b] > points[i] && points[b+1] == points[i+1]) ++check[i/2];\n            else if(points[b] < points[i] && points[b+1] == points[i+1]) ++check[i/2];\n        }\n    }\n    int sum=0;\n    for(int i=0; i<n; ++i){\n        if(check[i] >= 4) ++sum;\n    }\n    printf(\"%d\", sum);\n}", "fixed": "#include <stdio.h>\n\nint main(void){\n    int n, x, y;\n    scanf(\"%d\", &n);\n    int points[402]= {0};\n    int check[201]= {0};\n    for(int i=0; i<n*2; i+=2){\n        scanf(\"%d %d\", &x, &y);\n        points[i] = x;\n        points[i+1] = y;\n    }\n    int flag1, flag2, flag3, flag4;\n    for(int i=0; i<n*2; i+=2){\n        flag1=0, flag2=0, flag3=0, flag4=0;\n        for(int b=0; b<n*2; b+=2){\n            if(points[b] == points[i] && points[b+1] > points[i+1] && flag1==0){ ++check[i/2]; ++flag1; }\n            else if(points[b] == points[i] && points[b+1] < points[i+1] && flag2==0){ ++check[i/2]; ++flag2; }\n            else if(points[b] > points[i] && points[b+1] == points[i+1] && flag3==0){ ++check[i/2]; ++flag3; }\n            else if(points[b] < points[i] && points[b+1] == points[i+1] && flag4==0){ ++check[i/2]; ++flag4; }\n        }\n    }\n    int sum=0;\n    for(int i=0; i<n; ++i){\n        if(check[i] >= 4) ++sum;\n    }\n    printf(\"%d\", sum);\n}"}
{"similarity_score": 0.9936753338018272, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "399dc13cd2b11d1cdbef28b98f9804e9", "bug_code_uid": "1fa4edfa45cf4089c8483668d542aed3", "src_uid": "594e64eef7acd055d59f37710edda201", "apr_id": "f50c71e72ee07dabfb8143b1aee54400", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{ int n,i=0,j=0,flagr=0,flagl=0,flaglow=0,flagup=0,flag=0;\n   scanf(\"%d\",&n);\n   int x[n],y[n];\n   for(i=0;i<n;i++)\n   {\n       scanf(\"%d %d\",&x[i],&y[i]);\n   }\n  for(i=0;i<n;i++)\n  { flagr=0,flagl=0,flaglow=0,flagup=0;\n      for(j=0;j<n;j++)\n    {  if(i!=j)\n       {if(x[i]>x[j] && y[i]==y[j])\n       {\n           flagr++;\n       }\n      else if(x[i]==x[j] && y[i]<y[j])\n      {\n          flaglow++;\n      } \n      else if(x[i]<x[j] && y[i]==y[j])\n      {\n          flagl++;\n      }\n    else if(x[i]==x[j] && y[i]>y[j])\n    {\n        flagup++;\n    }\n    }\n    }\n    if(flagr>0 && flagup>0 && flaglow>0 && flagl>0)\n    {\n        flag++;\n    }\n\n  }\n  printf(\"%d\",count);\n  return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{ int n,i=0,j=0,flagr=0,flagl=0,flaglow=0,flagup=0,flag=0;\n   scanf(\"%d\",&n);\n   int x[n],y[n];\n   for(i=0;i<n;i++)\n   {\n       scanf(\"%d %d\",&x[i],&y[i]);\n   }\n  for(i=0;i<n;i++)\n  { flagr=0,flagl=0,flaglow=0,flagup=0;\n      for(j=0;j<n;j++)\n    {  if(i!=j)\n       {if(x[i]>x[j] && y[i]==y[j])\n       {\n           flagr++;\n       }\n      else if(x[i]==x[j] && y[i]<y[j])\n      {\n          flaglow++;\n      } \n      else if(x[i]<x[j] && y[i]==y[j])\n      {\n          flagl++;\n      }\n    else if(x[i]==x[j] && y[i]>y[j])\n    {\n        flagup++;\n    }\n    }\n    }\n    if(flagr>0 && flagup>0 && flaglow>0 && flagl>0)\n    {\n        flag++;\n    }\n\n  }\n  printf(\"%d\",flag);\n  return 0;\n}"}
{"similarity_score": 0.1157796451914099, "equal_cnt": 7, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "2835fb26960a8a5f75db6ba6df0b2e8d", "bug_code_uid": "a74930b74c1077a1fca4752935ec6ff9", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "0922c7debad4cd23c312c0ef13a8438c", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define max 100001\n\nint miktar[max];\n\nint main()\n{\n\tint i,j,best=0,rest=1,points=0,N;\n\tscanf(\"%d\",&N);\n\tfor(i=0; i<N; i++)\n\t{\n\t\tscanf(\"%d\",&j);\n\t\tmiktar[j]++;\n\t}\n\n\twhile(rest)\n\t{\n\t\tbest=rest=0;\n\t\tfor(i=1; i<max; i++) \n\t\t\tif((miktar[best]*best < miktar[i]*i)) best=i;\n\t\tif(!(miktar[best]*best > miktar[best-1]*(best-1) + miktar[best+1]*(best+1)))\n\t\t{\n\t\t\tif(miktar[best-1]*(best-1) > miktar[best+1]*(best+1)) best-=1;\n\t\t\t\telse best+=1;\n\t\t}\n\t\tmiktar[best]--;\n\t\tmiktar[best-1]=0;\n\t\tmiktar[best+1]=0;\n\t\tpoints+=best;\n\t\tfor(i=0; i<max; i++) rest+= miktar[i];\n\t}\n\tprintf(\"%d\\n\",points);\n\treturn 0;\n}\n", "fixed": "//Lessons learned: \n//1.Dont forget using long long unsigned\n//2.When printing a long long unsigned use %lld not %d.\n#include <stdio.h>\n#define max(x,y) x>y?x:y\n#define maxN 100000\nlong long unsigned int qu[maxN+10],dp[maxN+10];\nint main()\n{\n\tint i,tmp,N;\n\tscanf(\"%d\" , &N);\n\tfor(i=0; i<N; i++)\n\t{\n\t\tscanf(\"%d\",&tmp);\n\t\tqu[tmp]++;\n\t}\n\tdp[1]=qu[1];\n\tfor(i=2; i<=maxN; i++)\n\t\tdp[i]=max(qu[i]*(i)+dp[i-2],dp[i-1]);\n\tprintf(\"%lld\\n\",dp[maxN]);\n\treturn 0;\n}\n\n\n\n\n\n\n"}
{"similarity_score": 0.7815414825724104, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "0a5c6c5319b7549e91705892ae654da0", "bug_code_uid": "bee39137037e667a4ba2b281a68dabf6", "src_uid": "ee9ba877dee1a2843e885a18823cbff0", "apr_id": "c82cfdbb0d83653010836ce457ca15c5", "difficulty": 1100, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\t\n\tint n,i,l,j;\n\tchar c;\n\t\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&c);\n//\tfflush(stdin);\n\t\n\tfor(i=0;i<n;i++){\n\t\t\n\t\tint count1=0,count2=0;\n\t\tchar s[101],c;\n\t\tchar s1[]={'l','a','l','a','.',NULL},s2[]={'m','i','a','o','.',NULL};\n\t\t\n\t\t//printf(\"s1:%s  s2:%s\",s1,s2);\n\t\tscanf(\"%[^\\n]%*c\",s); \n\t\tprintf(\"s:%s\\n\",s);\n\t\t//fflush(stdin);\n\t\t\n\t\tl=strlen(s);\n\t\t\n\t\tfor(j=0;j<=4;j++){\n\t\t\t\n\t\t\tif(s[j]==s2[j])\n\t\t\t\tcount1++;\n\t\t\t\n\t\t\tif(s[l-j-1]==s1[4-j])\n\t\t\t\tcount2++;\n\t\t\t\t\n\t\t\t//printf(\"s2[%d]:%c,sback[%d]:%c,s[%d]:%c,s1[%d]:%c\\n\",j,s2[j],(l-j-1),s[l-j-1],j,s[j],4-j,s1[4-j]);\n\t\t\t//printf(\"count1:%d,count2:%d\\n\",count1,count2);\t\t\n\t\t}\n\t\t\n\t\tif(i==0 && strcmp(s,\",.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ ,.._ \"==0)){\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\t\ti++;\n\t\t}\n\t\tif(count1==5 && count2==5)\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\telse if(count1<5 && count2<5)\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\telse if(count1==5 && count2<5)\n\t\t\tprintf(\"Rainbow's\\n\");\n\t\telse if(count2==5 && count1<5)\n\t\t\tprintf(\"Freda's\\n\");\n\t\t\n\t\tcount1=0;count2=0;\t\n\t}\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n\t\n\tint n,i,l,j;\n\tchar c;\n\t\n\tscanf(\"%d\",&n);\n\tgetchar();\n//\tfflush(stdin);\n\t\n\tfor(i=0;i<n;i++){\n\t\t\n\t\tint count1=0,count2=0;\n\t\tchar s[101],c;\n\t\tchar s1[]={'l','a','l','a','.',NULL},s2[]={'m','i','a','o','.',NULL};\n\t\t\n\t\t//printf(\"s1:%s  s2:%s\",s1,s2);\n\t\tgets(s);\n\t\t//printf(\"s:%s\\n\",s);\n\t\t//fflush(stdin);\n\t\t\n\t\tl=strlen(s);\n\t\t\n\t\tfor(j=0;j<=4;j++){\n\t\t\t\n\t\t\tif(s[j]==s2[j])\n\t\t\t\tcount1++;\n\t\t\t\n\t\t\tif(s[l-j-1]==s1[4-j])\n\t\t\t\tcount2++;\n\t\t\t\t\n\t\t\t//printf(\"s2[%d]:%c,sback[%d]:%c,s[%d]:%c,s1[%d]:%c\\n\",j,s2[j],(l-j-1),s[l-j-1],j,s[j],4-j,s1[4-j]);\n\t\t\t//printf(\"count1:%d,count2:%d\\n\",count1,count2);\t\t\n\t\t}\n\t\t\n\t\tif(count1==5 && count2==5)\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\telse if(count1<5 && count2<5)\n\t\t\tprintf(\"OMG>.< I don't know!\\n\");\n\t\telse if(count1==5 && count2<5)\n\t\t\tprintf(\"Rainbow's\\n\");\n\t\telse if(count2==5 && count1<5)\n\t\t\tprintf(\"Freda's\\n\");\n\t\t\n\t\tcount1=0;count2=0;\t\n\t}\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.9150214592274678, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d5be5949b24aef1a1c60f5157c9afe23", "bug_code_uid": "1c55bcceb9744194c506fb5bb6d85851", "src_uid": "3d6cd0a82513bc2119c9af3d1243846f", "apr_id": "7204125c08c683648cd422d69c2ad418", "difficulty": 800, "tags": ["greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{ \n    char s[1000];\n    int t,i,n,f[26]={0},j,c=0;\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d\",&n);\n        for(j=0;j<n;j++){\n        scanf(\"%s\",&s);\n        for(i=0;i<strlen(s);i++)\n            f[s[i]-'a']++;\n    }\n    for(i=0;i<26;i++){\n        if(f[i]!=0){\n            if(f[i]%n==0)\n                c=0;\n             else{\n                    c=1;\n                    break;\n                }\n        }\n    }\n        if(c==0)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n        }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{ \n    char s[1000];\n    int t,i,n,j;\n    scanf(\"%d\",&t);\n    while(t--){\n        int c=0,f[26]={0};\n        scanf(\"%d\",&n);\n        for(j=0;j<n;j++){\n        scanf(\"%s\",&s);\n        for(i=0;i<strlen(s);i++)\n            f[s[i]-'a']++;\n    }\n    for(i=0;i<26;i++){\n        if(f[i]!=0){\n            if(f[i]%n==0)\n                c=0;\n             else{\n                    c=1;\n                    break;\n                }\n        }\n    }\n        if(c==0)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n        }\n    return 0;\n}"}
{"similarity_score": 0.9455882352941176, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4f806af7c439f9da5277366f95472559", "bug_code_uid": "81362e01f0c63a318fda226f04d4ad2e", "src_uid": "16c016c0735be1815c7b94c5c50516f1", "apr_id": "9154e546de00e26e936a5289a78db199", "difficulty": 1700, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#define m 1000000007\nint main()\n{\n\tlong long int ans,a,b,i,j,t,k,arr[100001],cum[100001],sol[100001];\n\tscanf(\"%lld %lld\", &t, &k);\n\tarr[0] = 0;\n\tfor(i=1; i<=100000; i++)\n\t{\n\t\tif(i<k)\n\t\t\tarr[i] = 1;\n\t\telse if(i == k)\n\t\t\tarr[i] = 2;\n\t\telse\n\t\t{\n\t\t\tarr[i] = (arr[i-1]%m + arr[i-k]%m)%m;\n\t\t\tif(arr[i]<0)\n\t\t\t\tarr[i] = m+arr[i];\n\t\t}\n\t}\n\tcum[1] = arr[1];\n\tfor(i=2; i<=100000; i++)\n\t{\n\t\tcum[i] = (arr[i]%m + cum[i-1]%m)%m;\n\t\tif(cum[i]<0)\n\t\t\tcum[i] = m+cum[i];\n\t}\n\tfor(i=0; i<t; i++)\n\t{\n\t\tscanf(\"%lld %lld\", &a, &b);\n\t\tans = cum[b] - cum[a-1];\n//\t\tprintf(\"%lld\\n\", ans%m);\n\t\tsol[i] = ans;\n\t}\n\tfor(i=0; i<t; i++)\n\t{\n\t\tprintf(\"%lld\\n\", sol[i]);\n\t}\n}\n\n", "fixed": "#include<stdio.h>\n#define m 1000000007\nint main()\n{\n\tlong long int ans,a,b,i,j,t,k,arr[100001],cum[100001],sol[100001];\n\tscanf(\"%lld %lld\", &t, &k);\n\tarr[0] = 0;\n\tfor(i=1; i<=100000; i++)\n\t{\n\t\tif(i<k)\n\t\t\tarr[i] = 1;\n\t\telse if(i == k)\n\t\t\tarr[i] = 2;\n\t\telse\n\t\t{\n\t\t\tarr[i] = (arr[i-1]%m + arr[i-k]%m)%m;\n\t\t\tif(arr[i]<0)\n\t\t\t\tarr[i] = m+arr[i];\n\t\t}\n\t}\n\tcum[1] = arr[1];\n\tfor(i=2; i<=100000; i++)\n\t{\n\t\tcum[i] = (arr[i]%m + cum[i-1]%m)%m;\n\t\tif(cum[i]<0)\n\t\t\tcum[i] = m+cum[i];\n\t}\n\tfor(i=0; i<t; i++)\n\t{\n\t\tscanf(\"%lld %lld\", &a, &b);\n\t\tans = cum[b] - cum[a-1];\n//\t\tprintf(\"%lld\\n\", ans%m);\n\t\tif(ans<0)\n\t\t{\n\t\t\tsol[i] = m+ans;\n\t\t}\n\t\telse\n\t\tsol[i] = ans;\n\t}\n\tfor(i=0; i<t; i++)\n\t{\n\t\tprintf(\"%lld\\n\", sol[i]);\n\t}\n}\n\n"}
{"similarity_score": 0.9670014347202296, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "4e1868c33dc403842ddb56d66320be42", "bug_code_uid": "529f524cc7b254994eec1628c53ee926", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "f8bfbf0ae8e52266379f7290b45aed92", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong int n,a[1010],b[1100],i;\n\tscanf(\"%ld\",&n);\n\tb[n]=0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%ld\",&a[i]);\n\tfor(i=n-1;i>=0;i--)\n\t\tif(a[i]>b[i+1])\n\t\t\tb[i]=a[i];\n\t\telse\n\t\t\tb[i]=b[i+1];\n\tfor(i=0;i<n-1;i++)\n\t\tif(a[i]>=b[i+1])\n\t\t\tprintf(\"0 \");\n\t\telse\n\t\t\tprintf(\"%ld \",b[i+1]-a[i]+1);\n\tprintf(\"0\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tlong int n,a[100010],b[100010],i;\n\tscanf(\"%ld\",&n);\n\tb[n]=0;\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%ld\",&a[i]);\n\tfor(i=n-1;i>=0;i--)\n\t\tif(a[i]>b[i+1])\n\t\t\tb[i]=a[i];\n\t\telse\n\t\t\tb[i]=b[i+1];\n\tfor(i=0;i<n-1;i++)\n\t\tif(a[i]>b[i+1])\n\t\t\tprintf(\"0 \");\n\t\telse\n\t\t\tprintf(\"%ld \",b[i+1]-a[i]+1);\n\tprintf(\"0\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9047869542346134, "equal_cnt": 10, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "08a72131069b2ac24aef648fdaee95ea", "bug_code_uid": "5102f5b69ecdbac0500729bfde1b2561", "src_uid": "5db9c5673a04256c52f180dbfca2a52f", "apr_id": "413d19f73d2a01226891844de10e469f", "difficulty": 1600, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "    #include <stdio.h>\n    #include <stdlib.h>\n\n    #define Nmax 2001\n    #define max(a,b) a>b?a:b\n    #define min(a,b) a<b?a:b\n    #define oo 300000000000000\n\n    int point[Nmax];\n    long long int a[Nmax],b[Nmax];\n\n    int cmp(const void*x,const void*y)\n    {\n        return -(a[*(int*)x]-a[*(int*)y]);\n    }\n\n    int main()\n    {\n        int n,i,x,y,ax,ay,bx,by;\n        scanf(\"%d%d%d%d%d\",&n,&ax,&ay,&bx,&by);\n        for(i=0;i<n;i++) {\n            scanf(\"%d%d\",&x,&y);\n            point[i]=i;\n            a[i]=(long long)(ax-x)*(ax-x)+(long long)(ay-y)*(ay-y);\n            b[i]=(long long)(bx-x)*(bx-x)+(long long)(by-y)*(by-y);\n        }\n        qsort(point,n,sizeof(int),cmp);\n        long long int r2=0,res=+oo;\n        for(i=0;i<n;i++) {\n            if (i>0) r2=max(r2,b[point[i-1]]);\n            res=min(res,r2+a[point[i]]);\n        }\n        printf(\"%I64d\",res);\n        return 0;\n    }\n", "fixed": "    #include <stdio.h>\n    #include <stdlib.h>\n\n    #define Nmax 2001\n    #define max(a,b) a>b?a:b\n    #define min(a,b) a<b?a:b\n    #define oo 3000000000000000;\n\n    int point[Nmax];\n    long long a[Nmax],b[Nmax];\n\n    int cmp(const void*x,const void*y)\n    {\n        if(a[*(int*)x]>a[*(int*)y]) return -1;\n        if(a[*(int*)x]<a[*(int*)y]) return  1;\n        return 0;\n    }\n\n    int main()\n    {\n        int n,i,x,y,ax,ay,bx,by;\n        scanf(\"%d%d%d%d%d\",&n,&ax,&ay,&bx,&by);\n        for(i=0;i<n;i++) {\n            scanf(\"%d%d\",&x,&y);\n            point[i]=i;\n            a[i]=(long long)(ax-x)*(ax-x)+(long long)(ay-y)*(ay-y);\n            b[i]=(long long)(bx-x)*(bx-x)+(long long)(by-y)*(by-y);\n        }\n        point[n]=n;\n        a[point[n]]=0;\n        qsort(point,n,sizeof(int),cmp);\n        long long r2=0,res=oo;\n        for(i=0;i<=n;i++) {\n            if (i>0) r2=max(r2,b[point[i-1]]);\n            res=min(res,r2+a[point[i]]);\n        }\n        printf(\"%lli\",res);\n        return 0;\n    }\n"}
{"similarity_score": 0.8936170212765957, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e9d1a75f63a3c532d733894c29c0a427", "bug_code_uid": "f85662c8579decfa8bda5d24b65364ee", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "3e67c323da7db298e7dbdecead0bd65a", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int num,sum=0;\n        scanf(\"%lld\",&num);\n        sum=num;\n        while(num>=10)\n        {\n            num=num-9;\n            sum=sum+1;\n        }\n        printf(\"%lld\\n\",sum);\n    }\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int num,sum=0;\n        scanf(\"%lld\",&num);\n        sum=num;\n        while(num>=10)\n        {\n            sum+=num/10;\n            num=num/10+num%10;\n        }\n        printf(\"%lld\\n\",sum);\n    }\n\n}"}
{"similarity_score": 0.48727272727272725, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "673ab97639362710d1cc7fb9ffe1a223", "bug_code_uid": "a9b395eb0ecd210f1a9079225f835031", "src_uid": "49c47ebfd710a3733ce7ecb3a3c134a7", "apr_id": "23c7c3e8414c91dde162d59f49c23da9", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n\tint n,m,a,b,i,max1=0,max2=0,min1=1000,min2=1000,v;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i = 0 ; i < n ; i ++)\n\t{\n\t\tscanf(\"%d\",&a);\n\t\tif(a > max1)\n\t\t\tmax1 = a;\n\t\tif(a < min1)\n\t\t\tmin1 = 1;\n\t}\n\tfor(i = 0 ; i < m ; i ++)\n\t{\n\t\tscanf(\"%d\",&b);\n\t\tif(b > max2)\n\t\t\tmax2 = b;\n\t\tif(b < min2)\n\t\t\tmin2 = b;\n\t}\n\tv = 2 * min1;\n\tif(v < max1)\n\t\tv = max1;\n\tif(v < min2)\n\t\tprintf(\"%d\\n\",v);\n\telse\n\t\tprintf(\"-1\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main(void)\n{\n\tint n,m,i,t,max1=0,min1=101,max2=0,min2=101,v;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t>=max1)\n\t\t\tmax1=t;\n\t\tif(t<=min1)\n\t\t\tmin1=t;\n\t}\n\tfor(i=0;i<m;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t>=max2)\n\t\t\tmax2=t;\n\t\tif(t<=min2)\n\t\t\tmin2=t;\n\t}\n\tv=2*min1;\n\tif(v<max1)\n\t\tv=max1;\n\tif(v<min2)\n\t\tprintf(\"%d\\n\",v);\n\telse\n\t\tprintf(\"-1\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9846641988365944, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "1033c6bb2cf319a5e7e6e7fd20ecba29", "bug_code_uid": "22270fbb7e7cae12472b0e1a3a6edaaf", "src_uid": "f88cf470095f250ffeb57feae7697e36", "apr_id": "7163438e8f459f43fe5b034b9f5b6c5a", "difficulty": 1800, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct\n{\n    long long s,h,t;\n} st;\n\nlong long cmp (const void * a, const void * b)\n{\n    const st *aa = a;\n    const st *bb = b;\n    long long ret=(-1LL*(aa->s*bb->h)+1LL*(bb->s*aa->h));\n    return ret>0?1:0;\n}\nchar s[100100];\nst a[100100];\nint main(void) {\n    int n;\n    scanf(\"%d\",&n);\n    int i=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s);\n        int len=strlen(s);\n        int ss=0,hh=0,tt=0;\n        int j=0;\n        for(j=0;j<len;j++)\n        {\n            if(s[j]=='s')ss++;\n            else hh++,tt+=ss;\n        }\n        a[i].s=ss;\n        a[i].h=hh;\n        a[i].t=tt;\n      //  printf(\"%d %d %d\\n\",ss,hh,tt);\n    }\n    qsort (a, n, sizeof(st), cmp);\n    long long sol=0,tmp=0;\n    for( i=0;i<n;i++)\n    {\n        sol+=a[i].t;\n        sol+=1ll*a[i].h*tmp;\n        tmp+=a[i].s;\n     //   printf(\"%lld %lld\\n\",sol,tmp);\n    }\n    printf(\"%lld\\n\",sol);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct\n{\n    long long s,h,t;\n} st;\n\nlong long cmp (const void * a, const void * b)\n{\n    const st *aa = a;\n    const st *bb = b;\n    long long ret=(-1LL*(aa->s*bb->h)+1LL*(bb->s*aa->h));\n    if(ret==0)return ret;\n    return ret>0?1:-1;\n}\nchar s[100100];\nst a[100100];\nint main(void) {\n    int n;\n    scanf(\"%d\",&n);\n    int i=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s);\n        int len=strlen(s);\n        int ss=0,hh=0,tt=0;\n        int j=0;\n        for(j=0;j<len;j++)\n        {\n            if(s[j]=='s')ss++;\n            else hh++,tt+=ss;\n        }\n        a[i].s=ss;\n        a[i].h=hh;\n        a[i].t=tt;\n      //  printf(\"%d %d %d\\n\",ss,hh,tt);\n    }\n    qsort (a, n, sizeof(st), cmp);\n    long long sol=0,tmp=0;\n    for( i=0;i<n;i++)\n    {\n        sol+=a[i].t;\n        sol+=1ll*a[i].h*tmp;\n        tmp+=a[i].s;\n     //   printf(\"%lld %lld\\n\",sol,tmp);\n    }\n    printf(\"%lld\\n\",sol);\n\treturn 0;\n}\n"}
{"similarity_score": 0.7085346215780999, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "0978098df0304a227abd90a899806b96", "bug_code_uid": "f163ec66a101c0b945e296393f31d45d", "src_uid": "9afcf090806cc9c3b87120b1b61f8f17", "apr_id": "e0ddace1ac6364fb21bd060339b20f18", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint t,x,y,a,b,dist_cov;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d %d %d %d\",&x,&y,&a,&b);\n\t\tint total_dis=abs(y-x);\n\t\tdist_cov=a+b;\n\t\tint i=0;\n\t\twhile(dist_cov <  total_dis)\n\t\t{\n\t\t\tdist_cov+=a+b;\n\t\t\ti++;\t\t\n\t\t}\n\t\tif(dist_cov == total_dis)\n\t\t\tprintf(\"%d\\n\",i+1);\n\t\telse \n\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint t,x,y,a,b,dist_cov;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d %d %d %d\",&x,&y,&a,&b);\n\t\tint total_dis=abs(y-x);\n\t\tdist_cov=a+b;\n\t\tif(total_dis % dist_cov == 0){\n\t\t printf(\"%d\\n\",total_dis/dist_cov);   \n\t\t}\n\t\telse \n\t\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9979852249832102, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a33643c1fab1c883c1e32535fc837aa3", "bug_code_uid": "5ad3f8589054d33ab2452f31cb159a49", "src_uid": "704297bc97528ec27cce5f9388019e29", "apr_id": "b16d6d9200ed7f1bfdc07211ee90716a", "difficulty": 1800, "tags": ["brute force", "hashing", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint arr2[400000][3] = {0};\r\nint main(){\r\n    int n, s;\r\n    scanf(\"%d\", &n);\r\n    \r\n    int arr[n + 1];\r\n\r\n    for(int i = 1; i <= n; i++){\r\n        scanf(\"%d\", &arr[i]);\r\n    }\r\n    for(int i = 1; i <= n; i++){\r\n        for(int j = i + 1; j <= n; j++){\r\n            s = arr[i] + arr[j];\r\n\r\n            if(arr2[s][0] != 0 && arr2[s][1] != i && arr2[s][2] != j && arr2[s][1] != j && arr2[s][2] != i){\r\n                printf(\"YES\\n%d %d %d %d\", arr2[s][1], arr2[s][2], i, j);\r\n                return 0;\r\n            }\r\n\r\n            if(arr2[s][0] == 0){\r\n                arr2[s][0] = s;\r\n                arr2[s][1] = i;\r\n                arr2[s][2] = j; \r\n            }\r\n        }\r\n    }\r\n    printf(\"NO\\n\");\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\nint arr2[5000000][3] = {0};\r\nint main(){\r\n    int n, s;\r\n    scanf(\"%d\", &n);\r\n    \r\n    int arr[n + 1];\r\n\r\n    for(int i = 1; i <= n; i++){\r\n        scanf(\"%d\", &arr[i]);\r\n    }\r\n    for(int i = 1; i <= n; i++){\r\n        for(int j = i + 1; j <= n; j++){\r\n            s = arr[i] + arr[j];\r\n\r\n            if(arr2[s][0] != 0 && arr2[s][1] != i && arr2[s][2] != j && arr2[s][1] != j && arr2[s][2] != i){\r\n                printf(\"YES\\n%d %d %d %d\", arr2[s][1], arr2[s][2], i, j);\r\n                return 0;\r\n            }\r\n\r\n            if(arr2[s][0] == 0){\r\n                arr2[s][0] = s;\r\n                arr2[s][1] = i;\r\n                arr2[s][2] = j; \r\n            }\r\n        }\r\n    }\r\n    printf(\"NO\\n\");\r\n    return 0;\r\n}"}
{"similarity_score": 0.31212484993997597, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "ec1fb06ffaec249ee6defe28c21760bc", "bug_code_uid": "4d8e4d8fc7dae2cf6090353e42b24156", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "19ed56050740c90556421909e76abb83", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main ()\n{\n\tint t, n;\n\tscanf(\"%d\", &t);\n\tfor (int i=0; i<t; i++)\n\t{\n\t\tscanf(\"%d\", &n);\n\t\tint num[n];\n\t\tint sum=0;\n\t\tint ctr=0;\n\t\tfor (int j=0; j<n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &num[i]);\n\t\t\tif (num[i] == 0) \n\t\t\t{\n\t\t\t\tnum[i] = 1;\n\t\t\t\tctr++;\n\t\t\t}\n\t\t\tsum += num[i];\n\t\t}\n\t\tint hasil = 0;\n\t\tif (sum == 0)\n\t\t{\n\t\t\thasil++;\n\t\t}\n\t\thasil += ctr;\n\t\tprintf(\"%d\\n\", hasil);\n\t}\n\t\nreturn 0;}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main ()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (int i=0; i<t; i++)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tint num[n];\n\t\tint sum=0;\n\t\tint ctr=0;\n\t\tfor (int j=0; j<n; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &num[j]);\n\t\t\tif (num[j] == 0) \n\t\t\t{\n\t\t\t\tnum[j] = 1;\n\t\t\t\tctr++;\n\t\t\t}\n\t\t\tsum += num[j];\n\t\t}\n\t\tint hasil = 0;\n\t\tif (sum == 0)\n\t\t{\n\t\t\thasil++;\n\t\t}\n\t\thasil += ctr;\n\t\tprintf(\"%d\\n\", hasil);\n\t}\n\t\nreturn 0;}\n"}
{"similarity_score": 0.9272300469483568, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "9baed895197be716c86a672ebef9f07f", "bug_code_uid": "0cb528c1a8122862abf161559ff0d31e", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "00b18de5810260fa395c1b2ff666cda7", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <stdbool.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    long p = 0;\r\n    int a = 1, b = 1;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        long n = 0;\r\n        scanf(\"%ld\", &n);\r\n        if(n>0)\r\n        printf(\"%ld %ld\\n\", n*(-1) + 1, n);\r\n        else if(n<0)\r\n        printf(\"%ld %ld\\n\", n, abs(n)-1);\r\n        else\r\n        printf(\"-1 1\");\r\n\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <stdbool.h>\r\nint main()\r\n{\r\n    int t = 0;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        long long n = 0;\r\n        scanf(\"%lld\", &n);\r\n        if(n>0)\r\n        printf(\"%lld %lld\\n\", n*(-1) + 1, n);\r\n        else if(n<0)\r\n        printf(\"%lld %lld\\n\", n, abs(n)-1);\r\n        else\r\n        printf(\"-1 1\");\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.6310904872389791, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "b1e0ce62af43650a74d42b5a18b47211", "bug_code_uid": "55dc328c55ec4a301acc66508a936821", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "4c42f400950badff867bf54a13da2a41", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint a[n+1]={0};\n\tint max=n;\n\tfor(int i=0;i<n;i++){\n\t\tint y;\n\t\tscanf(\"%d\",&y);\n\t\ta[y]=1;\n\t\twhile(a[max]==1){\n\t\t\tprintf(\"%d \",max);\n\t\t\tmax--;\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t}\n\t", "fixed": "int main()\n{\n\tint n,k,i,x;\n\tint a[100009]={0};\n\tscanf(\"%d\",&n);\n\tk=n;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\ta[x]=1;\n\t\twhile(a[k]==1)\n\t\t{\n\t\t\tprintf(\"%d \",k);\n\t\t\tk--;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9153515064562411, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "fd08abec0da6cd6c2443bd9d19ae82a9", "bug_code_uid": "cb8989f508c559e4c89415b661a77c57", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "5f3ed7526be6d65e67af066faa84583a", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void) {\n  int x1,y1,x2,y2;\n  scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n  if (x1==x2)\n    printf(\"%d %d %d %d\\n\",x1+y1-y2,y1,x1+y1-y2,y2);\n  else if (y1==y2)\n    printf(\"%d %d %d %d\\n\",y1,y1+x1-x2,y2,y1+x1-x2-y2);\n  else if (x1+y2==x2+y1||x1+x2==y1+y2)\n    printf(\"%d %d %d %d\\n\",x1,y2,x2,y1);\n  else printf(\"-1\\n\");\n  return 0;\n}", "fixed": "#include <stdio.h>\nint main(void) {\n  int x1,y1,x2,y2;\n  scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n  if (x1==x2)\n    printf(\"%d %d %d %d\\n\",x1+y1-y2,y1,x1+y1-y2,y2);\n  else if (y1==y2)\n    printf(\"%d %d %d %d\\n\",x1,y1+x1-x2,x2,y1+x1-x2);\n  else if (x1+y2==x2+y1||x1+y1==x2+y2)\n    printf(\"%d %d %d %d\\n\",x1,y2,x2,y1);\n  else printf(\"-1\\n\");\n  return 0;\n}"}
{"similarity_score": 0.9963768115942029, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "40c759a4d11196ee00ae9fcb9ae4c7bf", "bug_code_uid": "506915a65b3d1588fb20228dae3a5985", "src_uid": "3c63e2e682d3c8051c3cecc3fa9c4e8c", "apr_id": "704d1d56dfb44686a94384339ebd2c65", "difficulty": 1500, "tags": ["binary search", "implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long n,a,b,i,s,k;\n    scanf(\"%lld%lld%lld\",&n,&a,&b);\n    long long arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&k);\n        s=k*a;\n        arr[i]=s%b;\n    }\n    for(i=0;i<n;i++)\n    printf(\"%lld \",arr[i]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long long n,a,b,i,s,k;\n    scanf(\"%lld%lld%lld\",&n,&a,&b);\n    long long arr[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&k);\n        s=k*a;\n        arr[i]=s%b;\n    }\n    for(i=0;i<n;i++)\n    printf(\"%lld \",arr[i]/a);\n    return 0;\n}\n"}
{"similarity_score": 0.946927374301676, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "e1b7e73c112b7631e76617cdf86d1141", "bug_code_uid": "cd1e4442c574144ede037dc58dba706b", "src_uid": "75a00d8a614fd0bcb8504b0268a121e0", "apr_id": "7bcfc3ec983fa297b9298cf8909a9e92", "difficulty": 1700, "tags": [], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nconst int N=100000+10;\nint n,i,a[N];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (i=1;i<=n;i++) scanf(\"%d\",a+i);\n\tint pre=-1,cnt=0;\n\tif (a[1]==0) cnt=0;\n\telse cnt=1;\n\tint flag=1;\n\tfor (i=1;i<=n;){\n\t\tint c=1;\n\t\twhile (i<=n&&a[i]==cnt) i++,c++;\n\t\tcnt^=1;\n\t\tif (pre!=-1&&pre!=c){\n\t\t\tflag=0;\n\t\t\tbreak;\n\t\t}  \n\t\telse pre=c;\n\t}\n\tputs(flag?\"YES\":\"NO\");\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint n,i,a[100010];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tint pre=-1,cnt=0;\n\tif (a[1]==0) cnt=0;\n\telse cnt=1;\n\tint flag=1;\n\tfor (i=1;i<=n;){\n\t\tint c=1;\n\t\twhile (i<=n&&a[i]==cnt) i++,c++;\n\t\tcnt^=1;\n\t\tif (pre!=-1&&pre!=c){\n\t\t\tflag=0;\n\t\t\tbreak;\n\t\t}  \n\t\telse pre=c;\n\t}\n\tputs(flag?\"YES\":\"NO\");\n\treturn 0;\n}"}
{"similarity_score": 0.9950900163666121, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "05d8492811943bd9da696fffc134aef6", "bug_code_uid": "3ec9fb7e20288ab0afe2f5bbb95d4480", "src_uid": "c249103153c5006e9b37bf15a51fe261", "apr_id": "10c5defd3827b83dc5f281b6096895dd", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "\n#include <stdio.h>\n\nint main() {\n    int n,m,i,j,c, min=1000;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &m);\n  \n    int t[1001];\n    for(i=0; i<m; i++){\n        scanf(\"%d\", &c);\n        t[c]++;\n    }\n    \n    for(i=1; i<=n; i++){\n        if(t[i]<min)\n            min=t[i];\n    }\n    \n    printf(\"%d\", min);\n}", "fixed": "\n#include <stdio.h>\n\nint main() {\n    int n,m,i,j,c, min=1000;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &m);\n  \n    int t[1001]={};\n    for(i=0; i<m; i++){\n        scanf(\"%d\", &c);\n        t[c]++;\n    }\n    \n    for(i=1; i<=n; i++){\n        if(t[i]<min)\n            min=t[i];\n    }\n    \n    printf(\"%d\", min);\n}"}
{"similarity_score": 0.8901515151515151, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "2889bf61e311af1293d8adc89d47a631", "bug_code_uid": "95a65fb1f95aca90258e4b69ec8cbd72", "src_uid": "a4628208668e9d838cd019e9dc03e470", "apr_id": "b5d25096e6930a0f61a37c733c96b2ff", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    long long n;\r\n    long long l;\r\n    long long r;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; t++) {\r\n        scanf(\"%lld\", &n);\r\n        l = -(n - 1);\r\n        r = n;\r\n        printf(\"%lld %lld\\n\", l, r);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int t;\r\n    long long n;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++) {\r\n        scanf(\"%lld\", &n);\r\n        long long l = -(n - 1);\r\n        long long r = n;\r\n        printf(\"%lld %lld\\n\", l, r);\r\n    }\r\n}"}
{"similarity_score": 0.9839285714285714, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c77ace07ceab97a0645870d68ba66c00", "bug_code_uid": "6a52d4563a0d0c1c2adb23419b1995cb", "src_uid": "a65e12186430f74c18c50d2eb55a9794", "apr_id": "05a7f7382fb513e44b0934dbee6fd2ba", "difficulty": 1300, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\n\nint mirror(char  c)\n{\n   int r = 0;\n   int i;\n   const int ci = c;\n   \n   for( i = 0; i < 8; ++ i )\n   {\n      r <<= 1 ;\n\t  r += ( ( ci >> i ) & 0x01 ) ;\n   }\n   \n   return r;\n}\n\nvoid generate(const char *s)\n{\n   int i;\n   int r = 0;\n   for(i = 0; s[i] >= 32 && s[i] <= 126; ++i)\n   {\n      int m = mirror(s[i]);\n\t  r  = ( r - m + 1024 ) & 0xFF;\n\t  printf(\"%d\\n\",r);\n   }\n}\n\nint main()\n{\n   char s[128] = {0};\n   \n   fread(s, sizeof(s[0]), 128, stdin);\n   \n   generate(s);\n   \n   return (0);\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n\n\nint mirror(int  c)\n{\n   int r = 0;\n   int i;\n   const int ci = c;\n   \n   for( i = 0; i < 8; ++ i )\n   {\n      r <<= 1 ;\n\t  r += ( ( ci >> i ) & 0x01 ) ;\n   }\n   \n   return r;\n}\n\nvoid generate(const char *s)\n{\n   int i;\n   int r = 0;\n   for(i = 0; s[i] >= 32 && s[i] <= 126; ++i)\n   {\n      int m = mirror(s[i]);\n\n\t  r  = ( r - m + 1024 ) & 0xFF;\n\t  printf(\"%d\\n\",r);\n\t  r = m;\n   }\n}\n\nint main()\n{\n   char s[128] = {0};\n   \n   fread(s, sizeof(s[0]), 128, stdin);\n   \n   generate(s);\n   \n   return (0);\n}"}
{"similarity_score": 0.9295010845986985, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ba4380c01a878f98c39cfa172054d46d", "bug_code_uid": "d9eeab2d56c3fbb684065fb07975e546", "src_uid": "dc225c801f55b8d7b40ebcc71b417edb", "apr_id": "fbf5cad066912f68a1fbde6147b55452", "difficulty": 1800, "tags": ["greedy", "games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <sys/time.h>\n\n#define N\t100000\n\nvoid init_rand() {\n\tstruct timeval tv;\n\n\tgettimeofday(&tv, NULL);\n\tsrand(tv.tv_sec ^ tv.tv_usec);\n}\n\nint rand_(int n) {\n\treturn (rand() * 76543LL + rand()) % n;\n}\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ib - ia;\n}\n\nint main() {\n\tstatic int aa[N];\n\tint n, x, i, j, tmp, cnt;\n\n\tinit_rand();\n\tscanf(\"%d\", &n);\n\tx = n % 4 == 2 || n % 4 == 3;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\tx ^= aa[i] & 1;\n\t}\n\tfor (j = 0; j < n; j++) {\n\t\ti = rand_(j + 1);\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n\t}\n\tqsort(aa, n, sizeof *aa, compare);\n\tcnt = 0;\n\tfor (i = 1; i < n - 1; i++)\n\t\tif (aa[i - 1] == aa[i] && (++cnt > 1 || aa[i] - aa[i + 1] <= 1)) {\n\t\t\tprintf(\"cslnb\\n\");\n\t\t\treturn 0;\n\t\t}\n\tprintf(x ? \"sjfnb\\n\" : \"cslnb\\n\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <sys/time.h>\n\n#define N\t100000\n\nvoid init_rand() {\n\tstruct timeval tv;\n\n\tgettimeofday(&tv, NULL);\n\tsrand(tv.tv_sec ^ tv.tv_usec);\n}\n\nint rand_(int n) {\n\treturn (rand() * 76543LL + rand()) % n;\n}\n\nint compare(const void *a, const void *b) {\n\tint ia = *(int *) a;\n\tint ib = *(int *) b;\n\n\treturn ib - ia;\n}\n\nint main() {\n\tstatic int aa[N];\n\tint n, x, i, j, tmp, cnt;\n\n\tinit_rand();\n\tscanf(\"%d\", &n);\n\tx = n % 4 == 2 || n % 4 == 3;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &aa[i]);\n\t\tx ^= aa[i] & 1;\n\t}\n\tfor (j = 0; j < n; j++) {\n\t\ti = rand_(j + 1);\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n\t}\n\tqsort(aa, n, sizeof *aa, compare);\n\tcnt = 0;\n\tfor (i = 1; i < n - 1; i++)\n\t\tif (aa[i - 1] == aa[i] && (++cnt > 1 || aa[i] - aa[i + 1] <= 1)) {\n\t\t\tprintf(\"cslnb\\n\");\n\t\t\treturn 0;\n\t\t}\n\tif (aa[n - 2] == aa[n - 1] && (++cnt > 1 || aa[n - 1] == 0)) {\n\t\tprintf(\"cslnb\\n\");\n\t\treturn 0;\n\t}\n\tprintf(x ? \"sjfnb\\n\" : \"cslnb\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.7682698313554028, "equal_cnt": 18, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 9, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "74d282dc38a820ea964cfb48a2b08b8f", "bug_code_uid": "8e5f081118599a64167b74f9dc0b3e55", "src_uid": "4af59df1bc56ca8eb5913c2e57905922", "apr_id": "71426c747703d3c562a5cb8f38334bfd", "difficulty": 800, "tags": ["brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\ntypedef long long ll;\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n+1];\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\t}\r\n\t\tfor(int i=0;i<n-1;i++){\r\n\t\t\tfor(int j=0;j<n-1-i;j++){\r\n\t\t\t\tif(arr[j]>arr[j+1]){\r\n\t\t\t\t\tint tmp=arr[j+1];\r\n\t\t\t\t\tarr[j+1]=arr[j];\r\n\t\t\t\t\tarr[j]=tmp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tll sb[n]={},sr[n]={};\r\n\t\tsb[0]=arr[0];\r\n\t\tsr[n-1]=arr[n-1];\r\n\t\tfor(int i=1;i<n;i++){\r\n\t\t\tsb[i]=arr[i]+sb[i-1];\r\n\t\t\tsr[n-1-i]=arr[n-1-i]+sr[n-i];\r\n\t\t}\r\n\t\tint yes=1;\r\n\t\tint C_R=1,C_B=2;\r\n\t\twhile(sr[n-C_R]<sb[C_B]){\r\n\t\t\tC_R++;\r\n\t\t\tC_B++;\r\n\t\t\tif(C_R+C_B>n){\r\n\t\t\t\tyes=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(yes) printf(\"YES\\n\");\r\n\t\telse printf(\"NO\\n\");\r\n\t}\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef long long ll;\r\nint cmp(const void * _a,const void * _b){\r\n\tint* a=(int*)_a;\r\n\tint* b=(int*)_b;\r\n\treturn *a-*b;\r\n}\r\n\r\nint main(){\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint n=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint arr[n];\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tscanf(\"%d\",&arr[i]);\r\n\t\t}\r\n//\t\tfor(int i=0;i<n-1;i++){\r\n//\t\t\tfor(int j=0;j<n-1-i;j++){\r\n//\t\t\t\tif(arr[j]>arr[j+1]){\r\n//\t\t\t\t\tint tmp=arr[j+1];\r\n//\t\t\t\t\tarr[j+1]=arr[j];\r\n//\t\t\t\t\tarr[j]=tmp;\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}\r\n\t\tqsort(arr,n,sizeof(int),cmp);\r\n\t\tll sb[n],sr[n];\r\n\t\tsb[0]=arr[0];\r\n\t\tsr[n-1]=arr[n-1];\r\n\t\tfor(int i=1;i<n/2+5;i++){\r\n\t\t\tsb[i]=arr[i]+sb[i-1];\r\n\t\t\tsr[n-1-i]=arr[n-1-i]+sr[n-i];\r\n\t\t}\r\n\t\tint yes=1;\r\n\t\tint t_b=1,t_r=n-1;\r\n\t\twhile(sr[t_r]<=sb[t_b]){\r\n\t\t\tt_b++;\r\n\t\t\tt_r--;\r\n\t\t\tif(t_b>=t_r){\r\n\t\t\t\tyes=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(yes) printf(\"YES\\n\");\r\n\t\telse printf(\"NO\\n\");\r\n\t}\r\n}\r\n"}
{"similarity_score": 0.7613104524180967, "equal_cnt": 9, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9033f39a8f58b1e8f16dd3b2d9657a09", "bug_code_uid": "1768054d7957c1416bf1a53488adf9aa", "src_uid": "a18edcadb31f76e69968b0a3e1cb7e3e", "apr_id": "86700eab4732e7777766f482b5f55124", "difficulty": 1600, "tags": ["constructive algorithms", "implementation", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint sum,x,tmp,ans,i,j,k,l,n,m,a[1000],b[1000],c[1000],stc[1000];\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<m;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tx=n-1;\n\tfor(i=0;i<1000;i++)\n\t\tc[i]=0;\n\tfor(i=0;i<m;i++){\n\t\tif(c[b[i]]==0){\n\t\t\tc[b[i]]=1;\n\t\t\tstc[x]=b[i];\n\t\t\tx--;\n\t\t}\n\t}\n\tl=n-1;\n\tans=0;\n\tfor(i=0;i<m;i++){\n\t\tsum=0;\n\t\twhile(stc[l]!=b[i]){\n\t\t\tsum = sum+stc[l];\n\t\t\tl--;\n\t\t}\n\t\tans=ans+sum;\n\t\ttmp = stc[l];\n\t\tfor(j=l;j<n-1;j++)\n\t\t\tstc[j]=stc[j+1];\n\t\tstc[n-1]=tmp;\n\t\tfor(j=0;j<n;j++)\n//\t\t\tprintf(\"%d \",stc[j]);\n//\t\tprintf(\" %d\\n\",ans);\n\t\tl=n-1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint sum,x,tmp,ans,i,j,k,l,n,m,a[1000],b[1000],c[1000],stc[1000];\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<=m;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tx=n;\n\tfor(i=1;i<1000;i++)\n\t\tc[i]=0;\n\tfor(i=1;i<=m;i++){\n\t\tif(c[b[i]]==0){\n\t\t\tc[b[i]]=1;\n\t\t\tstc[x]=b[i];\n\t\t\tx--;\n\t\t}\n\t}\n\tl=n;\n\tans=0;\n\tfor(i=1;i<=m;i++){\n\t\tsum=0;\n\t\twhile(stc[l]!=b[i]){\n\t\t\tsum = sum+a[stc[l]];\n//\t\t\tprintf(\"*%d %d \",sum,a[stc[l]]);\n\t\t\tl--;\n\t\t}\n\t\tans=ans+sum;\n\t\ttmp = stc[l];\n\t\tfor(j=l;j<n;j++)\n\t\t\tstc[j]=stc[j+1];\n\t\tstc[n]=tmp;\n//\t\tfor(j=1;j<=n;j++)\n//\t\t\tprintf(\"%d \",stc[j]);\n//\t\tprintf(\" %d\\n\",ans);\n\t\tl=n;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n"}
{"similarity_score": 0.9974554707379135, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "de839a96f2ddb0b1eaabe655e2737440", "bug_code_uid": "0c4add92fa463422796b670cb039ee89", "src_uid": "740c05c036b646d8fb6b391af115d7f0", "apr_id": "89a77f43757170d03d54108d74b3f038", "difficulty": 900, "tags": ["dp", "implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{ int a,b;\n    scanf(\"%d\",&a);\n    \n    for(int i=0;i<a;i++)\n    {\n        scanf(\"%d\",&b);\n        \n        printf(\"%d \\n\",b)\n        \n        \n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{ int a,b;\n    scanf(\"%d\",&a);\n    \n    for(int i=0;i<a;i++)\n    {\n        scanf(\"%d\",&b);\n        \n        printf(\"%d \\n\",b);\n        \n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9777777777777777, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "61e683946729a9aa19e804e1aafdb38d", "bug_code_uid": "f2fc63a931342cbc2cd3a23cb61080ce", "src_uid": "a4c82fffb31bc7e42870fd84e043e815", "apr_id": "72c644b0e979aba3555b9c2cf8dfd2cd", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n   int  n;\n   int  a,b;\n   scanf(\"%d\",&n);\n   for(int  i=0; i < n; i++)\n   {\n        scanf(\"%d%d\",&a,&b);\n       if(a % 2 && b % 2 && a >= b * b)\n            printf(\"YES\\n\");\n        else    if(a % 2 == 0 && b % 2 == 0 && a >= b * b)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n   }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main()\n{\n   int  n;\n   long long int  a,b;\n   scanf(\"%d\",&n);\n   for(int  i=0; i < n; i++)\n   {\n        scanf(\"%lld%lld\",&a,&b);\n       if(a % 2 && b % 2 && a >= b * b)\n            printf(\"YES\\n\");\n        else    if(a % 2 == 0 && b % 2 == 0 && a >= b * b)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n   }\n    return 0;\n}\n"}
{"similarity_score": 0.8509933774834437, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "f2143b657887adab89bebacad84b25d4", "bug_code_uid": "57bfd98b165bb431353782e5428a5285", "src_uid": "45cf60f551bd5cbb1f3df6ac3004b53c", "apr_id": "ad7d2abc772d401b42d3b5c14c20f354", "difficulty": 800, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\nint i,j,k,n,l=0,rem,t;\nscanf(\"%d\",&t);\nwhile(t--){\nk=0;\ni=0;\nj=0;\nscanf(\"%d\",&n);\nif(n%3==0){\ni=n/3;\nj=i+2;\nk=i-2;\nif(k==l){\nj=j-1;\nk++;\n}\nprintf(\"%d %d %d\\n\",i,j,k);\n}\nelse{\nrem=n%3;\ni=n/3;\nj=i+2+rem;\nk=i-2;\nif(k==0){\nj=j-1;\nk++;\n}\nprintf(\"%d %d %d\\n\",i,j,k);\n}\n}\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\nint i,j,k,n,l=0,rem,t;\nscanf(\"%d\",&t);\nwhile(t--){\nk=0;\ni=0;\nj=0;\nscanf(\"%d\",&n);\nif(n%3==0){\ni=n/3;\nj=i+1;\nk=(n-i-j);\nif(k==l){\nj=j-1;\nk++;\n}\nprintf(\"%d %d %d\\n\",i,j,k);\n}\nelse{\nrem=n%3;\ni=(n/3)+1;\nj=i+1;\nk=(n-i-j);\nif(n==7){\ni=i-1;\nk++;\n}\nprintf(\"%d %d %d\\n\",i,j,k);\n}\n}\n}"}
{"similarity_score": 0.9325842696629213, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "671a11da5a593c4c02c2424c7474a197", "bug_code_uid": "a3441fd553c97a514c900b708fa0388e", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "cdae7695a683ea75e6f4206f42dc07c7", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,a,s;\r\n    scanf(\"%d\",&n);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        int c=0,k,d=0,r=0,x=0,m=0,s;\r\n        int min(int d, int x);\r\n\r\n        scanf(\"%d\",&a);\r\n        for(int j=1; j<=a; j++)\r\n        {\r\n            scanf(\"%d\",&s);\r\n            if(s%2==0){\r\n                d++;\r\n            }\r\n            else{\r\n                x++;\r\n            }\r\n        }\r\n        if(d>x){\r\n            printf(\"%d\",x);\r\n        }\r\n        else{\r\n            printf(\"%d\",d);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,a,s;\r\n    scanf(\"%d\",&n);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        int c=0,k,d=0,r=0,x=0,m=0,s;\r\n        int min(int d, int x);\r\n\r\n        scanf(\"%d\",&a);\r\n        for(int j=1; j<=a; j++)\r\n        {\r\n            scanf(\"%d\",&s);\r\n            if(s%2==0){\r\n                d++;\r\n            }\r\n            else{\r\n                x++;\r\n            }\r\n        }\r\n        if(d>x){\r\n            printf(\"%d\\n\",x);\r\n        }\r\n        else{\r\n            printf(\"%d\\n\",d);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n"}
{"similarity_score": 0.5191111111111111, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "c253c4be88543b326e6f5e00b0ad8841", "bug_code_uid": "9124a0e483ab525c27ec0c194de15c1a", "src_uid": "2afb210831529a99f8f04f13e5438d55", "apr_id": "00dd5a1c87752f7fb7fdd629bff597c5", "difficulty": 2000, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t; scanf(\"%d\",&t);\r\n    while(t--) {\r\n    int n,sum;\r\n    scanf(\"%d%d\",&sum,&n);\r\n    int a[100]={};\r\n    for(int i=0; i<n; i++) {\r\n    a[i]=1; sum--;\r\n    }\r\n    int p=0;\r\n    while(sum>0) {\r\n    int x=log10(sum+1);\r\n    sum-=pow(10,x)-1;\r\n    a[p]+=pow(10,x)-1;\r\n    p++;\r\n    if(p==n) break;\r\n    }\r\n    a[0]+=sum;\r\n    for(int i=0; i<n; i++)\r\n    printf(\"%d \",a[i]);\r\n    printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint po(int b, int p) {\r\nint ans=1;\r\nfor(int i=0; i<p; i++)\r\nans*=b;\r\nreturn ans;\r\n}\r\nint main()\r\n{\r\n    int t; scanf(\"%d\",&t);\r\n    while(t--) {\r\n    int n,sum;\r\n    scanf(\"%d%d\",&sum,&n);\r\n    int a[100]={};\r\n    for(int i=0; i<n; i++) {\r\n    a[i]=1; sum--;\r\n    }\r\n    int p=0;\r\n    while(sum>0) {\r\n //   printf(\"%d \",a[p]);\r\n    int x=log10(sum+1);\r\n    \r\n    sum-=po(10,x)-1;\r\n    a[p]+=po(10,x)-1;\r\n   // printf(\"%d\\n\",a[p]);\r\n  //  printf(\"%d\\n\",(int)pow(10,x)-1);\r\n    p++;\r\n    if(p==n) break;\r\n    }\r\n  //  printf(\"%d\\n\",sum);\r\n    a[0]+=sum;\r\n    for(int i=0; i<n; i++)\r\n    printf(\"%d \",a[i]);\r\n    printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9570405727923628, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c93b3c6aebbf33b3e5d7fa737937a957", "bug_code_uid": "64f97478365e5144df5d7a39b92c5874", "src_uid": "bc6b8fda79c257e6c4e280d7929ed8a1", "apr_id": "69b6eaf2cba81d037854f696f94777c9", "difficulty": 1400, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nlong int a[100005];\nint c[100005];\n\nint main()\n{\n\tlong int n,k,i,d,count;\n\tlong long int ans,sum,temp;\n\n\tsum = 0;\n\tans = 0;\n\tcount = 1;\n\tscanf(\"%ld %ld\",&n,&k);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&c[i]);\n\t\tsum = sum + c[i];\n\t}\n\n\tfor(i=1;i<n;i++)\n\t{\n\t\tans = ans + c[i]*c[i+1];\n\t}\n\n\tans = ans + c[n]*c[1];\n//\tprintf(\"ans circular -->%lld\\n\",ans);\n\n\tfor(i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%ld\",&d);\n\t\ta[count] = d;\n\t\tcount++;\n\t}\n\n\ttemp = sum;\n\tfor(i=1;i<count;i++)\n\t{\n\t\ttemp = temp - c[a[i-1]];\n\n\t\tif(a[i]>1 && a[i]<n)\n\t\t{\n\t\tans = ans + c[a[i]]*(temp - c[a[i]] - c[a[i]-1] - c[a[i]+1]);\n\t\t}\n\n\t\telse if(a[i]==1)\n\t\t{\n\t\t\tans = ans + c[1]*(temp - c[1] - c[n] - c[2]);\n\t\t}\n\t\telse if(a[i]==n)\n\t\t{\n\t\t\tans = ans + c[n]*(temp - c[n] - c[n-1] - c[1]);\n\t\t}\n//\t\tprintf(\"ans --> %lld\\n\",ans);\n\t}\n\t\n\tprintf(\"%lld\\n\",ans);\nreturn 0;\n}\t\t\n", "fixed": "#include<stdio.h>\n\nlong int a[100005];\nint c[100005];\n\nint main()\n{\n\tlong int n,k,i,d,count;\n\tlong long int ans,sum,temp;\n\n\tsum = 0;\n\tans = 0;\n\tcount = 1;\n\tscanf(\"%ld %ld\",&n,&k);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&c[i]);\n\t\tsum = sum + c[i];\n\t}\n\n\tfor(i=1;i<n;i++)\n\t{\n\t\tans = ans + c[i]*c[i+1];\n\t}\n\n\tans = ans + c[n]*c[1];\n//\tprintf(\"ans circular -->%lld\\n\",ans);\n\n\tfor(i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%ld\",&d);\n\t\ta[count] = d;\n\t\tcount++;\n\t}\n\n\ttemp = sum;\n\tfor(i=1;i<count;i++)\n\t{\n\n\t\tif(a[i]>1 && a[i]<n)\n\t\t{\t\n\t\tans = ans + c[a[i]]*(temp - c[a[i]] - c[a[i]-1] - c[a[i]+1]);\n\t\t}\n\n\t\telse if(a[i]==1)\n\t\t{\n\t\t\tans = ans + c[1]*(temp - c[1] - c[n] - c[2]);\n\t\t}\n\t\telse if(a[i]==n)\n\t\t{\n\t\t\tans = ans + c[n]*(temp - c[n] - c[n-1] - c[1]);\n\t\t}\n\t\t\n\t\ttemp  = temp - c[a[i]];\n\t\tc[a[i]] = 0;\n//\t\tprintf(\"ans --> %lld\\n\",ans);\n\t}\n\t\n\tprintf(\"%lld\\n\",ans);\nreturn 0;\n}\t\t\n"}
{"similarity_score": 0.9965156794425087, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "e60e3bb2a8ce7354ac2440f7e9e8d69f", "bug_code_uid": "930bebd8c30047c6ce27333d04ef7086", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "e075450d39b57678a1a06ba480098015", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nvoid swap(int *a,int *b){\n    int temp=*a;\n    *a=*b;\n    *b=temp;\n\n    }\nvoid max_heapify(int a[], int n, int i){\n        int largest=i,l=2*i+1,r=2*i+2;\n        if(l<n&&a[l]>a[largest])\n        \tlargest=l;\n        if(r<n&&a[r]>a[largest])\n        \tlargest=r;\n        if(largest!=i){\n        \tswap(&a[i],&a[largest]);\n        \tmax_heapify(a,n,largest);\n\n            }\n    }\nvoid max_sort(int a[],int n){\n\n    int i;\n    for(i=(n-1)/2;i>=0;i--)\n    \tmax_heapify(a,n,i);\n    for(i=n-1;i>=0;i--){       \n        \n        swap(&a[0],&a[i]);\n       \n        max_heapify(a,i,0);\n\n        }\n\n    }\n\nint main(){\n\n\n\tint i,x,a[1001],unique=1;\n\tscanf(\"%d\",&x);\n\tfor (i = 0; i < x; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]!=a[i-1])\n\t\t\tunique=0;\n\t\t\t/* code */\n\t}\n\tif(unique)\n\t\t\tprintf(\"%d\\n\",a[x/2]);\n\tmax_sort(a,x);\n\tprintf(\"%d\\n\",a[x/2]);\n\n\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nvoid swap(int *a,int *b){\n    int temp=*a;\n    *a=*b;\n    *b=temp;\n\n    }\nvoid max_heapify(int a[], int n, int i){\n        int largest=i,l=2*i+1,r=2*i+2;\n        if(l<n&&a[l]>a[largest])\n        \tlargest=l;\n        if(r<n&&a[r]>a[largest])\n        \tlargest=r;\n        if(largest!=i){\n        \tswap(&a[i],&a[largest]);\n        \tmax_heapify(a,n,largest);\n\n            }\n    }\nvoid max_sort(int a[],int n){\n\n    int i;\n    for(i=(n-1)/2;i>=0;i--)\n    \tmax_heapify(a,n,i);\n    for(i=n-1;i>=0;i--){       \n        \n        swap(&a[0],&a[i]);\n       \n        max_heapify(a,i,0);\n\n        }\n\n    }\n\nint main(){\n\n\n\tint i,x,a[1001],unique=1;\n\tscanf(\"%d\",&x);\n\tfor (i = 0; i < x; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]!=a[i-1])\n\t\t\tunique=0;\n\t\t\t/* code */\n\t}\n\tif(unique)\n\t\t\tprintf(\"%d\\n\",a[x/2]);\n\tmax_sort(a,x);\n\tprintf(\"%d\\n\",a[(x-1)/2]);\n\n\n\treturn 0;\n}"}
{"similarity_score": 0.1558011049723757, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "3c9eabd578081704e6ccaa6eb7774fcd", "bug_code_uid": "7f809dd3612e8658665d89af7f2f79d3", "src_uid": "2805d460df1121c4410999a9f36e383a", "apr_id": "dd8c300a7fd75b4890aad174da86d2bd", "difficulty": 800, "tags": ["data structures", "greedy", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,n,c;\r\n    scanf(\"%d\", &t);\r\n\r\n    for(int i=0; i<t; i++){\r\n\r\n        scanf(\"%d\" \"%d\", &n, &c);\r\n\r\n        int a[n], count[n];\r\n\r\n        for(int j=0; j<n; j++){\r\n            scanf(\"%d\", &a[j]);\r\n        }\r\n\r\n        for(int i=0; i<n; i++){\r\n            count[i]=0;\r\n        }\r\n\r\n        for(int i=0; i<n; i++){\r\n            for(int j=0; j<=n; j++){\r\n                if(a[i]==j){\r\n                    count[j-1]++;\r\n                }\r\n            }\r\n        }\r\n\r\n        int total=0;\r\n\r\n        for(int i=0; i<n; i++){\r\n\r\n            if(count[i]==0){\r\n\r\n            }\r\n            else if((count[i]>1 && count[i]>c) || (count[i]>1 && count[i]==c)){\r\n                total+=c;\r\n            }\r\n            else if(count[i]>0 && count[i]<c){\r\n                total+=count[i];\r\n            }\r\n        }\r\n        printf(\"%d\\n\", total);\r\n\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n\r\nvoid solve()\r\n{\r\n        int n,c;\r\n\r\n        scanf(\"%d\" \"%d\", &n, &c);\r\n\r\n        int a[n+1], count[101];\r\n\r\n        for(int j=1; j<=n; j++){\r\n            scanf(\"%d\", &a[j]);\r\n        }\r\n\r\n        for(int i=1; i<=100; i++){\r\n            count[i]=0;\r\n        }\r\n\r\n        for(int i=1; i<=n; i++){\r\n            for(int j=1; j<=100; j++){\r\n                if(a[i]==j){\r\n                    count[j]++;\r\n                }\r\n            }\r\n        }\r\n\r\n        int total=0;\r\n\r\n        for(int i=1; i<=100; i++){\r\n\r\n            if(count[i]==0){\r\n\r\n            }\r\n            else if(count[i]==c || count[i]>c){\r\n                total+=c;\r\n            }\r\n            else if(count[i]<c){\r\n                total+=count[i];\r\n            }\r\n        }\r\n        printf(\"%d\\n\", total);\r\n\r\n    return 0;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--)\r\n        solve();\r\n}\r\n\r\n\r\n"}
{"similarity_score": 0.9651272384542884, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "25ff3528d7b9fe7cbd1fef4720a8a82b", "bug_code_uid": "9e021281fe9930eb2c393bf1699be534", "src_uid": "0a720a0b06314fde783866b47f35af81", "apr_id": "c23266ac4f53fe94c96fd64f7ece5a55", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h> \nint main()\n{\n    int p;\n    scanf(\"%d\",&p);\n    while(p--)\n    {\n        int a,b;\n        scanf(\"%d %d\",&a,&b);\n        if((a+b)%3==0)\n        {\n            if((b-a)>a || (a-b)>b)\n            {\n                printf(\"NO\\n\");\n            }\n            else if(a==(2*b)||b==(2*a))\n            {\n                printf(\"YES\\n\");\n            }\n            if(a==0 &&b==0)\n            {\n                printf(\"YES\\n\");\n            }\n        }\n        else {\n            printf(\"NO\\n\");\n        }\n    }\n\n}\n    ", "fixed": "#include<stdio.h>\n#include<math.h> \nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b;\n        scanf(\"%d %d\",&a,&b);\n        if((a+b)%3==0)\n        {\n            if((b-a)>a || (a-b)>b)\n            {\n                printf(\"NO\\n\");\n            }\n            else if(a==(2*b)||b==(2*a))\n            {\n                printf(\"YES\\n\");\n            }\n            else {\n                printf(\"YES\\n\");\n            }\n        }\n        else {\n            printf(\"NO\\n\");\n        }\n    }\n\n}\n    "}
{"similarity_score": 0.8362235067437379, "equal_cnt": 11, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "6da029213b56886be5ca9008370a0581", "bug_code_uid": "095cc7ebf9ee0b087d3abf89b8ba8afb", "src_uid": "fb0a4c8f737c36596c2d8c1ae0d1e34e", "apr_id": "a10a87a985b92a5cf49e330585ee55dc", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int T, p, s, t;\n\n    scanf(\"%d\", &T);\n    while(T--){\n        scanf(\"%d %d %d\", &p, &s, &t);\n        //if(s+t>=p){\n            if((s==t)&&(s==p))\n                printf(\"%d\\n\", p);\n            else if(s==t)\n                printf(\"%d\\n\", s+1);\n            else if(s<t)\n                printf(\"%d\\n\", s+1);\n            else if(t<s)\n                printf(\"%d\\n\", t+1);\n        //}\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint min(int s, int t)\n{\n    if(s<t)\n        return s;\n    if(t<s)\n        return t;\n    else return s;\n}\n\nint main()\n{\n    int T, p, s, t;\n\n    scanf(\"%d\", &T);\n    while(T--){\n        scanf(\"%d %d %d\", &p, &s, &t);\n        //if(s+t>=p){\n//            if((s==t)&&(s==p))\n//                printf(\"%d\\n\", 1);\n//            else if(s==t)\n//                printf(\"%d\\n\", s+1);\n//            else if(s<t)\n//                printf(\"%d\\n\", s+1);\n//            else if(t<s)\n//                printf(\"%d\\n\", t+1);\n        //}\n\n        printf(\"%d\\n\", p-min(s,t)+1);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9930286599535244, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "49e3e6b3a282d2b3782026fd42c5acc6", "bug_code_uid": "68681afdf76b834c3dab677fa32e99f3", "src_uid": "87c3a8a0d49288d0f6242fe2ac69a641", "apr_id": "f34f41ffc1b3e13ce71671d536526f7d", "difficulty": 1800, "tags": ["dp", "combinatorics", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#define N 109\n#define MOD 998244353\n\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\n\nint main() {\n\tint n, i;\n\tstatic int p10[N+1];\n\tint num;\n\tscanf(\"%d\", &n);\n\tif (n == 1){\n\t\tprintf(\"10\\n\");\n\t\treturn 0;\n\t}\n\tp10[0] = 1;\n\ti = 0;\n\twhile (++i < n)\n\t\tp10[i] = p10[i - 1] * 10LL % MOD;\n\n\ti = 0;\n\twhile (++i <= n - 1){\n\t\tnum  = (10LL * 9 * 2 * p10[n-i-1]) %MOD;\n\t\tif (i < n-1)\n\t\t\tnum += (10LL * 9 * 9 *(n- 1 -i)* p10[n-i-2]) % MOD;\n\t\tnum = num%MOD;\n\t\tprintf(\"%d \", num);\n\t\n\t}\n\t\n\tprintf(\"%d\\n\", 10);\n\n\n\n\n\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#define N 200000\n#define MOD 998244353\n\n// int cmpfunc (const void * a, const void * b) {\n//    return ( *(int*)a - *(int*)b );\n// }\n\n   // qsort(values, 5, sizeof(int), cmpfunc);\n\nint main() {\n\tint n, i;\n\tstatic int p10[N+1];\n\tint num;\n\tscanf(\"%d\", &n);\n\tif (n == 1){\n\t\tprintf(\"10\\n\");\n\t\treturn 0;\n\t}\n\tp10[0] = 1;\n\ti = 0;\n\twhile (++i < n)\n\t\tp10[i] = p10[i - 1] * 10LL % MOD;\n\n\ti = 0;\n\twhile (++i <= n - 1){\n\t\tnum  = (10LL * 9 * 2 * p10[n-i-1]) %MOD;\n\t\tif (i < n-1)\n\t\t\tnum += (10LL * 9 * 9 *(n- 1 -i)* p10[n-i-2]) % MOD;\n\t\tnum = num%MOD;\n\t\tprintf(\"%d \", num);\n\t\n\t}\n\t\n\tprintf(\"%d\\n\", 10);\n\n\n\n\n\n\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9869646182495344, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c83283b2871c327db0da58d45821ca76", "bug_code_uid": "9de08b76b5c84362f9f7547a9bcfdf91", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "39f2adc6aea6d4b7083e5a9f61dd3635", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n;\n    scanf(\"%lld\",&n);\n    long long int i,a[n],sum=0,max=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        sum+=sum;\n        if(max<a[i])\n            max=a[i];\n    }\n    printf(\"%lld\",(max*n)-sum);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n;\n    scanf(\"%lld\",&n);\n    long long int i,a[n],sum=0,max=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        sum+=a[i];\n        if(max<a[i])\n            max=a[i];\n    }\n    printf(\"%lld\",(max*n)-sum);\n}"}
{"similarity_score": 0.8295454545454546, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "9043d8326bb47cd1415251d42c0708cb", "bug_code_uid": "9d00af0dc2c61818f5fb6dbd27b27dc3", "src_uid": "046900001c7326fc8d890a22fa7267c9", "apr_id": "70f99c98d4560e3a7c537e41f5c50262", "difficulty": 900, "tags": ["games"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int t,s,c,d,k;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n    c=0;\n    d=0;\n    scanf(\"%d\",&s);\n    for(int i=s;i>0;i=i/10)\n    {\n    if(i%2==0)\n    c++;\n    else\n    d++;\n    \n    }\n    if(c<d)\n    k=c;\n    else\n    k=d;\n    if(k%2==0)\n    printf(\"NET\\n\");\n    else \n    printf(\"DA\\n\");\n   }\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int t,c,d,k;\n    char s[100];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n    c=0;\n    d=0;\n    scanf(\"%s\",s);\n    for(int i=0;i<strlen(s);i++)\n    {\n    if(s[i]=='1')\n    {\n    c++;\n    \n    }\n    \n    else\n    d++;\n    \n    }\n    if(c<d)\n    k=c;\n    else\n    k=d;\n    if(k%2==0)\n    printf(\"NET\\n\");\n    else \n    printf(\"DA\\n\");\n   \n   }\n}"}
{"similarity_score": 0.9989235737351991, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "1ae019cf5afedbf56fe30041ade033ef", "bug_code_uid": "ccea66863cd395c849a781525151206a", "src_uid": "b5f5fc50e36b2afa3b5f16dacdf5710b", "apr_id": "be344bf877d849db81ae9dcdfe2ebf20", "difficulty": 1800, "tags": ["dp", "hashing", "greedy", "two pointers", "data structures", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint max(int a, int b)\n{\n     if (a > b) {\n\t  return a;\n     } else {\n\t  return b;\n     }\n}\n\nint main()\n{\n     int n, l = 0, p = 0, m = 0, i, j, k;\n     char s[100001], b[10][11];\n     int c[10];\n\n     scanf(\"%s\", s);\n     scanf(\"%d\", &n);\n\n     for (i = 0; i < n; i++) scanf(\"%s\", b[i]);\n\n     for (i = 0; i < n; i++) c[i] = strlen(b[i]);\n\n     for (i = 0; i < strlen(s) - l; i++) {\n\t  for (j = 0; i + j < strlen(s); j++) {\n\t       int f = 0;\n\t       for (k = 0; k < n; k++) {\n\t\t    if (j < c[k] - 1) continue;\n\n\t\t    if (strncmp(&s[i + j + 1 - c[k]], b[k], c[k]) == 0) {\n\t\t\t f = 1; m = c[k]; break;\n\t\t    }\n\t       }\n\n\t       if (f == 1) {\n\t\t    if (j > l) {\n\t\t\t l = j; p = i;\n\t\t    }\n\t\t    i = max(i, i + l - m + 1);\n\t\t    break;\n\t       }\n\t  }\n\n\t  if (i + j == strlen(s)) {\n\t       if (j > l) {\n\t\t    l = j; p = i;\n\t       }\n\t  }\n     }\n\n     printf(\"%d %d\\n\", l, p);\n\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint max(int a, int b)\n{\n     if (a > b) {\n\t  return a;\n     } else {\n\t  return b;\n     }\n}\n\nint main()\n{\n     int n, l = 0, p = 0, m = 0, i, j, k;\n     char s[100001], b[10][11];\n     int c[10];\n\n     scanf(\"%s\", s);\n     scanf(\"%d\", &n);\n\n     for (i = 0; i < n; i++) scanf(\"%s\", b[i]);\n\n     for (i = 0; i < n; i++) c[i] = strlen(b[i]);\n\n     for (i = 0; i < strlen(s) - l; i++) {\n\t  for (j = 0; i + j < strlen(s); j++) {\n\t       int f = 0;\n\t       for (k = 0; k < n; k++) {\n\t\t    if (j < c[k] - 1) continue;\n\n\t\t    if (strncmp(&s[i + j + 1 - c[k]], b[k], c[k]) == 0) {\n\t\t\t f = 1; m = c[k]; break;\n\t\t    }\n\t       }\n\n\t       if (f == 1) {\n\t\t    if (j > l) {\n\t\t\t l = j; p = i;\n\t\t    }\n\t\t    i = max(i, i + j - m + 1);\n\t\t    break;\n\t       }\n\t  }\n\n\t  if (i + j == strlen(s)) {\n\t       if (j > l) {\n\t\t    l = j; p = i;\n\t       }\n\t  }\n     }\n\n     printf(\"%d %d\\n\", l, p);\n\n     return 0;\n}\n"}
{"similarity_score": 0.9984567901234568, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6bd4564ba0d26220464e928cf84da571", "bug_code_uid": "015eec97ab38fc900f4066c1993cd964", "src_uid": "501b60c4dc465b8a60fd567b208ea1e3", "apr_id": "0f4ce5aa86cb85bc76098fa3fa9d11d0", "difficulty": 1300, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n\tchar s[100005],var,ch[100005];\n\tint t,l,r,k,i,count=0,c=0;\n\tscanf(\"%s\",s);\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d %d\",&l,&r,&k);\n\t\tl--;\n\t\tr--;\n\t\tcount=0;\n\t\tint p=0;\n\t\tif(k>(r-l+1))\n\t\t\tk=k%(r-l+1);\n\t\ti=r-k+1;\n\t\twhile(i<=r)\n\t\t{\n\t\t\tch[count++]=s[i++];\n\t\t}\n\t\tch[count]='\\0';\n\t\tc=(r-k);\n\t\tcount--;\n\t\tfor(i=r;i>=l;i--)\n\t\t{\n\t\t\tif(i>=(l+k))\n\t\t\t{\n\t\t\t//\tprintf(\"%c \",s[c]);\n\t\t\t\ts[i]=s[c--];\n\t\t\t}else\n\t\t\t\ts[i]=ch[count--];\n\t\t\t\t//\tprintf(\"ch:%s s:%s\\n\",ch,s);\n\t\t}\n\tprintf(\"ch:%s s:%s\\n\",ch,s);\n\t\t/*while(k--)\n\t\t{\tvar=s[r];\n\t\t\tfor(i=r;i>l;i--)\n\t\t\t\ts[i]=s[i-1];\n\t\t\ts[l]=var;\n\t\t}*/\n\t}\n\tprintf(\"%s\\n\",s);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(void)\n{\n\tchar s[100005],var,ch[100005];\n\tint t,l,r,k,i,count=0,c=0;\n\tscanf(\"%s\",s);\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d %d %d\",&l,&r,&k);\n\t\tl--;\n\t\tr--;\n\t\tcount=0;\n\t\tint p=0;\n\t\tif(k>(r-l+1))\n\t\t\tk=k%(r-l+1);\n\t\ti=r-k+1;\n\t\twhile(i<=r)\n\t\t{\n\t\t\tch[count++]=s[i++];\n\t\t}\n\t\tch[count]='\\0';\n\t\tc=(r-k);\n\t\tcount--;\n\t\tfor(i=r;i>=l;i--)\n\t\t{\n\t\t\tif(i>=(l+k))\n\t\t\t{\n\t\t\t//\tprintf(\"%c \",s[c]);\n\t\t\t\ts[i]=s[c--];\n\t\t\t}else\n\t\t\t\ts[i]=ch[count--];\n\t\t\t\t//\tprintf(\"ch:%s s:%s\\n\",ch,s);\n\t\t}\n\t//printf(\"ch:%s s:%s\\n\",ch,s);\n\t\t/*while(k--)\n\t\t{\tvar=s[r];\n\t\t\tfor(i=r;i>l;i--)\n\t\t\t\ts[i]=s[i-1];\n\t\t\ts[l]=var;\n\t\t}*/\n\t}\n\tprintf(\"%s\\n\",s);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8289054197662061, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "cf6a5d613a5e5aecb5b9ef43fb23c485", "bug_code_uid": "8924ce55103ded5712a4a8fe22cc1bb5", "src_uid": "1fd2619aabf4557093a59da804fd0e7b", "apr_id": "d49c9e5ef1db5a7c5de959d234b538b0", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int i,t,n,x,a,b,ans;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d%d\",&n,&x,&a,&b);\n        if(x==0)\n            ans=abs(a-b);\n        else if(x>n)\n            ans=n-1;\n        else if(x==n)\n            ans=n-1;\n        else\n        {\n            if(abs(a-b)>x)\n                ans=abs(a-b);\n            else\n                ans=x+1;\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int i,t,n,x,a,b,ans;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d%d%d%d\",&n,&x,&a,&b);\n        if(x==0)\n            ans=abs(a-b);\n        else if(x>n)\n            ans=n-1;\n        else if(x==n)\n            ans=n-1;\n        else\n        {\n            if(n<=x+abs(a-b))\n                ans=n-1;\n            else\n                ans=x+abs(a-b);\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9906976744186047, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "372f45021c135a10f25530e967888bd3", "bug_code_uid": "4e5d9c9ada39ac50b17b11df9dcb910b", "src_uid": "1f4c3f5e7205fe556b50320cecf66c89", "apr_id": "e0202ff7b0a747b8bbc0144478e9e1ce", "difficulty": 1800, "tags": ["dp", "greedy", "graphs", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int q;\n\tscanf(\"%lld\", &q);\n\t\n\tdo\n\t{\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\n\t\tlong long int i;\n\t\tlong long int a[n];\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tscanf(\"%lld\", &a[i]);\n\t\t}\n\n\t\tlong long int color[n];\n\t\tlong long int cn = 1;\n\t\tcolor[0] = 1;\n\t\tfor ( i = 1; i < n; ++i )\n\t\t{\n\t\t\tif ( a[i] == a[i-1] )\n\t\t\t{\n\t\t\t\tcolor[i] = color[i-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ( color[i-1] == 1 )\n\t\t\t\t{\n\t\t\t\t\tcolor[i] = 2;\n\t\t\t\t\tcn = 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcolor[i] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( color[n-1] == color[0] )\n\t\t{\n\t\t\tint isOpt = 0;\n\t\t\tfor ( int i = 1; i < n; ++i )\n\t\t\t{\n\t\t\t\tif ( a[i] == a[i-1] )\n\t\t\t\t{\n\t\t\t\t\tisOpt = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ( isOpt == 1 )\n\t\t\t\t{\n\t\t\t\t\tif ( color[i] == 1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor[i] = 2;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor[i] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( isOpt == 0 )\n\t\t\t{\n\t\t\t\tcolor[n-1] = 3;\n\t\t\t\tcn = 3;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%lld\\n\", cn);\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tprintf(\"%lld \", color[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t\n\t\t--q;\n\t} while ( q != 0 );\n\t\n\t//system(\"pause\");\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long int q;\n\tscanf(\"%lld\", &q);\n\t\n\tdo\n\t{\n\t\tlong long int n;\n\t\tscanf(\"%lld\", &n);\n\n\t\tlong long int i;\n\t\tlong long int a[n];\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tscanf(\"%lld\", &a[i]);\n\t\t}\n\n\t\tlong long int color[n];\n\t\tlong long int cn = 1;\n\t\tcolor[0] = 1;\n\t\tfor ( i = 1; i < n; ++i )\n\t\t{\n\t\t\tif ( a[i] == a[i-1] )\n\t\t\t{\n\t\t\t\tcolor[i] = color[i-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ( color[i-1] == 1 )\n\t\t\t\t{\n\t\t\t\t\tcolor[i] = 2;\n\t\t\t\t\tcn = 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcolor[i] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( color[n-1] == color[0] && a[n-1] != a[0] )\n\t\t{\n\t\t\tint isOpt = 0;\n\t\t\tfor ( int i = 1; i < n; ++i )\n\t\t\t{\n\t\t\t\tif ( a[i] == a[i-1] )\n\t\t\t\t{\n\t\t\t\t\tisOpt = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ( isOpt == 1 )\n\t\t\t\t{\n\t\t\t\t\tif ( color[i] == 1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor[i] = 2;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor[i] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( isOpt == 0 )\n\t\t\t{\n\t\t\t\tcolor[n-1] = 3;\n\t\t\t\tcn = 3;\n\t\t\t}\n\t\t}\n\n\t\tprintf(\"%lld\\n\", cn);\n\t\tfor ( i = 0; i < n; ++i )\n\t\t{\n\t\t\tprintf(\"%lld \", color[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t\t\n\t\t--q;\n\t} while ( q != 0 );\n\t\n//\tsystem(\"pause\");\n}"}
{"similarity_score": 0.3715170278637771, "equal_cnt": 8, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "258db9bc61d14923bb1cebd888cd1b05", "bug_code_uid": "e875582bc696469d430f839bd73907cd", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "93b308ca04a7a4580df0caaba39947e7", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    int t;\n    scanf(\"%d\", &t);\n\n    while (t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n\n        int *a = malloc(n);\n        if (a != NULL)\n        {\n            int sum = 0;\n            int zeros = 0;\n            for (int i = 0; i < n; i += 1)\n            {\n                scanf(\"%d\", &a[i]);\n                sum += a[i];\n                zeros += !a[i];\n            }\n\n            printf(\"%d\\n\", zeros + (sum + zeros == 0));\n\n            free(a);\n        }\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    int t;\n    scanf(\"%d\", &t);\n\n    while (t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n\n        int sum = 0;\n        int zeros = 0;\n        for (int i = 0; i < n; i += 1)\n        {\n            int a;\n            scanf(\"%d\", &a);\n            sum += a;\n            zeros += !a;\n        }\n\n        printf(\"%d\\n\", zeros + !(sum + zeros));\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9783950617283951, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "57736743f961363423b96254d350fab1", "bug_code_uid": "7fc29e2b99cac4b50ea9b97bf36429a9", "src_uid": "36492ef32a98bccef4363ff4eba6de70", "apr_id": "7550a1731048814330001a4b23163c76", "difficulty": 2400, "tags": ["greedy", "graphs", "constructive algorithms", "shortest paths", "data structures"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define N 2015\n\nint n, m;\nchar s[N][N];\nint qi[N * N];\nint qj[N * N];\nint h, t;\n\nvoid check(int i, int j) {\n  if (i < 0 || i + 1 >= n) return;\n  if (j < 0 || j + 1 >= m) return;\n  int cnt = 0;\n  int pi = -1;\n  int pj = -1;\n  for (int di = 0; di <= 1; ++di) {\n    for (int dj = 0; dj <= 1; ++dj) {\n      if (s[i + di][j + dj] == '*') {\n        ++cnt;\n        pi = i + di;\n        pj = j + dj;\n      }\n    }\n  }\n  if (cnt == 1) {\n    qi[t] = pi;\n    qj[t] = pj;\n    ++t;\n  }\n}\n\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  int i;\n  for (i = 0; i < n; ++i) {\n    scanf(\"%s\", s[i]);\n  }\n  for (i = 0; i < n; ++i) {\n    int j;\n    for (j = 0; j < m; ++j) {\n      check(i, j);\n    }\n  }\n  while (h < t) {\n    int ni = qi[h];\n    int nj = qj[h];\n    ++h;\n    s[ni][nj] = '.';\n    for (i = -1; i <= 0; ++i) {\n      int j;\n      for (j = -1; j <= 0; ++j) {\n        check(ni + i, nj + j);\n      }\n    }\n  }\n  for (i = 0; i < n; ++i) {\n    puts(s[i]);\n  }\n  return 0;\n}", "fixed": "#include <stdio.h>\n#define N 2015\n\nint n, m;\nchar s[N][N];\nint qi[N * N];\nint qj[N * N];\nint h, t;\n\nvoid check(int i, int j) {\n  if (i < 0 || i + 1 >= n) return;\n  if (j < 0 || j + 1 >= m) return;\n  int cnt = 0;\n  int pi = -1;\n  int pj = -1;\n  for (int di = 0; di <= 1; ++di) {\n    for (int dj = 0; dj <= 1; ++dj) {\n      if (s[i + di][j + dj] == '*') {\n        ++cnt;\n        pi = i + di;\n        pj = j + dj;\n      }\n    }\n  }\n  if (cnt == 1) {\n    qi[t] = pi;\n    qj[t] = pj;\n    ++t;\n    s[pi][pj] = '.';\n  }\n}\n\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  int i;\n  for (i = 0; i < n; ++i) {\n    scanf(\"%s\", s[i]);\n  }\n  for (i = 0; i < n; ++i) {\n    int j;\n    for (j = 0; j < m; ++j) {\n      check(i, j);\n    }\n  }\n  while (h < t) {\n    int ni = qi[h];\n    int nj = qj[h];\n    ++h;\n    for (i = -1; i <= 0; ++i) {\n      int j;\n      for (j = -1; j <= 0; ++j) {\n        check(ni + i, nj + j);\n      }\n    }\n  }\n  for (i = 0; i < n; ++i) {\n    puts(s[i]);\n  }\n  return 0;\n}"}
{"similarity_score": 0.8264604810996563, "equal_cnt": 11, "replace_cnt": 7, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "ede4cfe82d6105aa17a03453be4383aa", "bug_code_uid": "83cdbe46681d377bc1d26a4679721984", "src_uid": "854c561539596722b1dbc8f99cbdca78", "apr_id": "f587351e63f649a5a2e607798324f728", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int N, M, i;\n    scanf(\"%d %d\", &N, &M);\n    if((M>(N+1)*2) || (M<N))\n    {\n        puts(\"-1\");\n    }\n    else\n    {\n        int temp = m-n;\n        if(temp > n)\n        {\n            temp = n;\n        }\n        for(i=0; i<temp; ++i)\n        {\n            printf(\"110\");\n        }\n        m -= temp*2;\n        n -= temp;\n        for(i=0; i<n; ++i)\n        {\n            printf(\"10\");\n        }\n        m -= n;\n        for(i=0; i<m; ++i)\n        {\n            printf(\"1\");\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int N, M, i;\n    scanf(\"%d %d\", &N, &M);\n    if((M>(N+1)*2) || (M<N-1))\n    {\n        puts(\"-1\");\n    }\n    else\n    {\n        if(N > M)\n        {\n            printf(\"0\");\n            --N;\n        }\n        int temp = M-N;\n        if(temp > N)\n        {\n            temp = N;\n        }\n        for(i=0; i<temp; ++i)\n        {\n            printf(\"110\");\n        }\n        M -= temp*2;\n        N -= temp;\n        for(i=0; i<N; ++i)\n        {\n            printf(\"10\");\n        }\n        M -= N;\n        for(i=0; i<M; ++i)\n        {\n            printf(\"1\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5359773371104816, "equal_cnt": 10, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "4b7fc5571fef6b2b92cefdab83f36b00", "bug_code_uid": "e97e66f02002c0a9e65d31ac24663577", "src_uid": "62df8b1821558bea910f422591618e29", "apr_id": "209bb32d78d5fba6980c5c2621821c2a", "difficulty": 1500, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n\nint main() {\n\tint i, j, k, n, m;\n\tstatic int a[2500], c[50]; \n\tstatic struct swap {\n\t\tint x, y, p, q;\n\t} ss[50];\n\tstatic struct index {\n\t\tint x, y;\n\t} ii[2500];\n\n\tscanf(\"%d\", &n);\n\tm = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &c[i]);\n\t\tm += c[i];\n\t}\n\tk = 0;\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < c[i]; j++) {\n\t\t\tscanf(\"%d\", &a[k]);\n\t\t\tii[k].x = i + 1;\n\t\t\tii[k++].y = j + 1;\n\t\t}\n\tk = 0;\n\tfor (i = 0; i < m - 1; i++) {\n\t\tint jmin, min = INT_MAX, tmp;\n\n\t\tjmin = -1;\n\t\tfor (j = i; j < m; j++)\n\t\t\tif (min > a[j]) {\n\t\t\t\tjmin = j;\n\t\t\t\tmin = a[j];\n\t\t\t}\n\t\tif (jmin > i) {\n\t\t\tss[k].x = ii[i].x;\n\t\t\tss[k].y = ii[i].y;\n\t\t\tss[k].p = ii[jmin].x;\n\t\t\tss[k++].q = ii[jmin].y;\n\t\t\ttmp = a[i], a[i] = a[jmin], a[jmin] = tmp;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", k);\n\tfor (i = 0; i < k; i++)\n\t\tprintf(\"%d %d %d %d\\n\", ss[i].x, ss[i].y, ss[i].p, ss[i].q);\n\treturn 0;\n}\n", "fixed": "#include <limits.h>\n#include <stdio.h>\n\nint main() {\n\tint i, j, k, n, m;\n\tstatic int a[2500], c[50];\n\tstatic struct swap {\n\t\tint x, y, p, q;\n\t} ss[2500];\n\tstatic struct index {\n\t\tint x, y;\n\t} ii[2500];\n\n\tscanf(\"%d\", &n);\n\tm = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &c[i]);\n\t\tm += c[i];\n\t}\n\tk = 0;\n\tfor (i = 0; i < n; i++)\n\t\tfor (j = 0; j < c[i]; j++) {\n\t\t\tscanf(\"%d\", &a[k]);\n\t\t\tii[k].x = i + 1;\n\t\t\tii[k++].y = j + 1;\n\t\t}\n\tk = 0;\n\tfor (i = 0; i < m; i++) {\n\t\tint min, jmin, tmp;\n\n\t\tmin = a[i], jmin = i;\n\t\tfor (j = i + 1; j < m; j++)\n\t\t\tif (min > a[j]) {\n\t\t\t\tjmin = j;\n\t\t\t\tmin = a[j];\n\t\t\t}\n\t\tif (jmin != i) {\n\t\t\tss[k].x = ii[i].x;\n\t\t\tss[k].y = ii[i].y;\n\t\t\tss[k].p = ii[jmin].x;\n\t\t\tss[k++].q = ii[jmin].y;\n\t\t\ttmp = a[i], a[i] = a[jmin], a[jmin] = tmp;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", k);\n\tfor (i = 0; i < k; i++)\n\t\tprintf(\"%d %d %d %d\\n\", ss[i].x, ss[i].y, ss[i].p, ss[i].q);\n\treturn 0;\n}\n"}
{"similarity_score": 0.2849083215796897, "equal_cnt": 16, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "b5e51ef340fe78384dd57c32657496d7", "bug_code_uid": "8e76e2f1fed1f0429904a6fc2b6b1e3e", "src_uid": "71335a9489f0985f4e16435b14d6a34a", "apr_id": "d57911ceb57a2928da5668368a48c221", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tint c1,c2;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tfor(c1=0;c1<n;c1++){\n\t\t\tfor(c2=c1-1;c2<c1+2;c2++){\n\t\t\t\tif(c1+2*c2==n){\n\t\t\t\tprintf(\"%d %d\\n\",c1,c2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n\t\t\tif(c1+2*c2==n)\n\t\t\tbreak;\n\t\t}\n    }\n    return 0;\n}\n  \t\t  \t\t\t\t\t \t\t\t  \t\t\t   \t\t   \t", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tlong long n,i[10001],j,k,a[10001],b[10001];\n\t\n\tscanf(\"%lld\",&n);\n\tfor(j=1;j<=n;j++)\n\t{\n\t\tscanf(\"%lld\",&i[j]);\n\t\tswitch(i[j]%3)\n\t\t{\n\t\t\tcase 0:a[j]=i[j]/3;b[j]=i[j]/3;break;\n\t\t\tcase 1:a[j]=i[j]/3+1;b[j]=i[j]/3;break;\n\t\t\tcase 2:a[j]=i[j]/3;b[j]=i[j]/3+1;\n\t\t}\n\t\t\n\t}\n\t\n\tfor(j=1;j<=n;j++)\n\t{\n\t\tprintf(\"%lld %lld\\n\",a[j],b[j]);\n\t}\n\t\n\treturn 0;\n}\n   \t   \t\t\t \t\t\t \t\t\t \t \t\t\t\t \t\t"}
{"similarity_score": 0.9945525291828794, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "573a5ffdbfd60909bb3c1c38e22d7cda", "bug_code_uid": "288df038fd8bdec0f56977bdff7b3092", "src_uid": "db9cec57d8ed5e914818ce9b439eb0f9", "apr_id": "bbdcf486bb8a350027e4403a3082425a", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n\n{\n    char c;\n    int a;\n    scanf(\"%d\", &a);\n    getchar();\n    for (int i = 0; i < a; i++)\n    {\n        int b = 0, m = 0, d = 0;\n        while ((c = getchar()) != '\\n')\n        {\n            if (c == 40)\n            {\n                b++;\n            }\n            else if (c == 41 && b > 0)\n            {\n                b--;\n                m++;\n            }\n            else if (c == 91)\n            {\n                d++;\n            }\n            else if (c == 93 && m != 0)\n            {\n                d--;\n                m++;\n            }\n        }\n        printf(\"%d\\n\", m);\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n\n{\n    char c;\n    int a;\n    scanf(\"%d\", &a);\n    getchar();\n    for (int i = 0; i < a; i++)\n    {\n        int b = 0, m = 0, d = 0;\n        while ((c = getchar()) != '\\n')\n        {\n            if (c == 40)\n            {\n                b++;\n            }\n            else if (c == 41 && b > 0)\n            {\n                b--;\n                m++;\n            }\n            else if (c == 91)\n            {\n                d++;\n            }\n            else if (c == 93 && d>0)\n            {\n                d--;\n                m++;\n            }\n        }\n        printf(\"%d\\n\", m);\n    }\n    return 0;\n}"}
{"similarity_score": 0.7652439024390244, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "eee4ba549e85b42792a8c8d613da0a66", "bug_code_uid": "52fae69454be9a385d004536939bcbac", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "2f2713b8cb9a3ddaab5f3a917f122421", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint i,j,n,k,z=10000000,y=0;\n\tscanf(\"%d%d\",&n,&k);\n\tint a[n],b[n-k+1];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n-k+1;i++)\n\tb[i]=0;\n\tfor(i=0;i<k;i++)\n\tb[0]=b[0]+a[i];\n\tfor(i=1;i<n-k+1;i++)\n\t{\n\t\tb[i]=b[i-1]+a[i+k-1]-a[i];\n\t\tif(z>b[i])\n\t\t{\n\t\t\tz=b[i];\n\t\t\ty=i;\n\t\t}\n\t}\n\tprintf(\"%d\",y+1);\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint i,j,n,k,z,y=0;\n\tscanf(\"%d%d\",&n,&k);\n\tint a[n],b[n-k+1];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=0;i<n-k+1;i++)\n\tb[i]=0;\n\tfor(i=0;i<k;i++)\n\t{\n\tb[0]=b[0]+a[i];\n\tz=b[0];\n\t}\n\tfor(i=1;i<n-k+1;i++)\n\t{\n\t\tb[i]=b[i-1]+a[i+k-1]-a[i-1];\n\t\tif(z>b[i])\n\t\t{\n\t\t\tz=b[i];\n\t\t\ty=i;\n\t\t}\n\t}\n\tprintf(\"%d\",y+1);\n}"}
{"similarity_score": 0.9982768523836876, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2e386b1195f4b03065efb3fc5fbfaf63", "bug_code_uid": "8257d49dcf4e64086002ebac4dbd5128", "src_uid": "753113fa5130a67423f2e205c97f8017", "apr_id": "5ad596f6642975786f393d033c1312e2", "difficulty": 900, "tags": ["implementation", "sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int j,i,n,k;\n    char t[200][10];\n    scanf(\"%d\",&n);\n    for (j=0;j<n*2;j++){\n        scanf(\"%s\",&t[j]);\n      \n    }\n  \n   \n    for (i=1;i<=(n*2);i=i+2){\n        if(t[i][0]=='r'){\n               printf(\"%s\\n\",t[i-1]);\n             \n            \n            \n        }\n    }\n        for (i=1;i<=(n*2);i=i+2){\n             if ((t[i][0]=='w')||((t[i][0]=='c')&&(t[i][1]=='h'))){\n                   printf(\"%s\\n\",t[i-1]);\n                  \n           \n       \n        }\n        }\n        for (i=1;i<=(n*2);i=i+2){\n             if (t[i][0]=='m'){\n               printf(\"%s\\n\",t[i-1]);\n               \n        }\n        }\n        \n        for (i=1;i<=(n*2);i=i+2){\n            if ((t[i][0]=='c')&&(t[i][1]!='h')){\n               printf(\"%s\\n\",t[i-1]);\n           \n            \n        }\n        }\n        \n        \n    \n   \nreturn 0 ;\n\n}\n", "fixed": "#include <stdio.h>\n\nint main(){\n    int j,i,n,k;\n    char t[200][11];\n    scanf(\"%d\",&n);\n    for (j=0;j<n*2;j++){\n        scanf(\"%s\",&t[j]);\n      \n    }\n  \n   \n    for (i=1;i<=(n*2);i=i+2){\n        if(t[i][0]=='r'){\n               printf(\"%s\\n\",t[i-1]);\n             \n            \n            \n        }\n    }\n        for (i=1;i<=(n*2);i=i+2){\n             if ((t[i][0]=='w')||((t[i][0]=='c')&&(t[i][1]=='h'))){\n                   printf(\"%s\\n\",t[i-1]);\n                  \n           \n       \n        }\n        }\n        for (i=1;i<=(n*2);i=i+2){\n             if (t[i][0]=='m'){\n               printf(\"%s\\n\",t[i-1]);\n               \n        }\n        }\n        \n        for (i=1;i<=(n*2);i=i+2){\n            if ((t[i][0]=='c')&&(t[i][1]!='h')){\n               printf(\"%s\\n\",t[i-1]);\n           \n            \n        }\n        }\n        \n        \n    \n   \nreturn 0 ;\n\n}"}
{"similarity_score": 0.8017334777898159, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "9927e707534a46daa7b870fa2debf484", "bug_code_uid": "ef435b62e29c4ebf354a8d9a3d368586", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "8de9aa9a2003004356511e5112a4b249", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n  int m,n,i,j,c,d,sum;\n  int a[1000],b[1000];\n  while(scanf(\"%d\",&n)!=EOF)\n  {\n      c=0;\n   for(i=0;i<n;i++)\n   {\n      scanf(\"%d\",&a[i]);\n   }\n   for(i=0;i<n;i++)\n   {\n     if(a[i]%2==0)\n      b[i]=2;\n     else\n      b[i]=1;\n   }\n   for(i=0;i<n;i++)\n   {\n     if(b[i]!=b[i+1]&&b[i]!=b[i-1])\n     break;\n   }\n   printf(\"%d\\n\",i+1);\n  }\n\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n  int m,n,i,j,c,d,sum;\n  int a[1000],b[1000];\n  while(scanf(\"%d\",&n)!=EOF)\n  {\n      c=0;\n   for(i=0;i<n;i++)\n   {\n      scanf(\"%d\",&a[i]);\n   }\n   for(i=0;i<n;i++)\n   {\n     if(a[i]%2==0)\n      b[i]=2;\n     else\n      b[i]=1;\n   }\n   for(i=0;i<n;i++)\n   {\n     if(b[i]==2)\n     c++;\n   }\n   if(c==1)\n   {\n     for(i=0;i<n;i++)\n   {\n     if(b[i]==2)\n     break;\n   }\n   }\n   else\n   {\n       for(i=0;i<n;i++)\n   {\n     if(b[i]!=2)\n     break;\n   }\n   }\n   printf(\"%d\\n\",i+1);\n  }\n\n}\n"}
{"similarity_score": 0.885145482388974, "equal_cnt": 13, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "86fb525cd1747babeb7a323f3b4643c2", "bug_code_uid": "8006426f78acdd5419afc49034542e28", "src_uid": "27f837609b2777cefccb13aa4596d91c", "apr_id": "edd9c1ee19cf4ec6d429d1e2a4204edf", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid exc(int *a,int *b)\n{\n\tint temp;\n\ttemp=*a;\n\t*a=*b;\n\t*b=temp;\n}\n\nint main()\n{\n\tint n;\n\tint t=0,p=0;\n\tint arr[5]={-1,-1,-1,-1,-1};\n\tint i=0,j=1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t!=arr[1] && t!=arr[2] && t!=arr[3])\n\t\t{\n\t\t\tp++;\n\t\t\tarr[j]=t;\n\t\t\tj++;\n\t\t}\n\t\tif(p>3)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif(arr[1]>arr[2])\n\t\texc(&arr[1],&arr[2]);\n\tif(arr[2]>arr[3])\n\t\texc(&arr[2],&arr[3]);\n\tif(arr[1]>arr[2])\n\t\texc(&arr[1],&arr[2]);\n\tif(2*arr[2]==arr[1]+arr[3])\n\t{\n\t\tprintf(\"YES\\n\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n}\n", "fixed": "#include<stdio.h>\n\nvoid exc(int *a,int *b)\n{\n\tint temp;\n\ttemp=*a;\n\t*a=*b;\n\t*b=temp;\n}\n\nint main()\n{\n\tint n;\n\tint t=0,p=0;\n\tint arr[5]={-1,-1,-1,-1,-1};\n\tint i=0,j=1;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t!=arr[1] && t!=arr[2] && t!=arr[3])\n\t\t{\n\t\t\tp++;\n\t\t\tarr[j]=t;\n\t\t\tj++;\n\t\t}\n\t\tif(p>3)\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif(p==3)\n\t{\n\t\tif(arr[1]>arr[2])\n\t\t    exc(&arr[1],&arr[2]);\n\t    if(arr[2]>arr[3])\n\t\t    exc(&arr[2],&arr[3]);\n\t    if(arr[1]>arr[2])\n\t\t    exc(&arr[1],&arr[2]);\n\t    if(2*arr[2]==arr[1]+arr[3])\n\t    {\n\t\t    printf(\"YES\\n\");\n\t\t    return 0;\n\t    }\n\t    else\n\t    {\n\t\t    printf(\"NO\\n\");\n\t\t    return 0;\n\t    }\n\t}\n\telse\n\t{\n\t\tprintf(\"YES\\n\");\n\t\treturn 0;\n\t}\n}\n"}
{"similarity_score": 0.9249352890422778, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "9b11d14abcd771171c91de6dc4b2fc41", "bug_code_uid": "60584478e1ae8fc7339dc858ff6df291", "src_uid": "7f934f96cbe3990945e5ebcf5c208043", "apr_id": "169743314dc97820d3fef21ece77184c", "difficulty": 800, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n, i, j;\n    char diary[100][100];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&diary[i]);\n    }\n    printf(\"NO\\n\");\n    for(i=1;i<n;i++)\n    {\n        for(j=0;j<i;j++)\n        {\n            //printf(\"%d %d %d %s %s \\n\",i,j,n,diary[i],diary[j]);\n            if(!strcmp(diary[i],diary[j]))\n            {\n                printf(\"YES\\n\");\n                break;\n            }\n            if(i==j+1)\n            {\n             printf(\"NO\\n\");\n             continue;\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n    int n, i, j;\n    char diary[100][10000];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&diary[i]);\n    }\n    printf(\"NO\\n\");\n    for(i=1;i<n;i++)\n    {\n        for(j=0;j<i;j++)\n        {\n            //printf(\"%d %d %d %s %s \\n\",i,j,n,diary[i],diary[j]);\n            if(!strcmp(diary[i],diary[j]))\n            {\n                printf(\"YES\\n\");\n                break;\n            }\n            if(i==j+1)\n            {\n             printf(\"NO\\n\");\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.25210084033613445, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "79d6bb414159e89ce1b03f6f715f0916", "bug_code_uid": "a2b0fd2478945157dcf151642d453d7f", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "74d7a7ef355ace447fe2aff632080ad4", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main (){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint input[n];\n\tint sum=0;\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&input[i]);\n\t\tsum+=input[i];\n\t}\n\tint x;\n\tscanf(\"%d\",&x);\n\tint tes[x];\n\tfor(int i=0;i<x;i++){\n\t\tscanf(\"%d\",&tes[i]);\n\t\n\t}\n\t\n\tint temp=input[0];\n\t\tfor(int i=0,j=0;j<n;j++){\n\t\t\tif(tes[i]<=temp){\n\t\t\t\tprintf(\"%d \",j+1);\n\t\t\t\ti++;\n\t\t\t\tj=-1;\n\t\t\t\ttemp=input[0];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttemp+=input[j+1];\n\t\t\t\n\t\t}\n\t\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main (){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint piles [n];\n\tfor(int i=0;i<n;i++)scanf(\"%d\",&piles[i]);\n\tint apiles[n];\n\tint temp=0;\n\tfor(int i=0;i<n;i++){\n\t\tapiles[i]=temp+piles[i];\n\t\ttemp=apiles[i];\n\t}\n\tint m;\n\tscanf(\"%d\",&m);\n\tint input;\n\tfor(int i=0;i<m;i++){\n\t\tscanf(\"%d\",&input);\n//\t\tif(input<apiles[0]);\n//\t\telse if(input>apiles[n-1])printf(\"%d\",n);\n//\t\telse {\n\t\tint flag=1;\n\t\tint L=0,R=n-1,mid;\n\t\twhile(L<R){\n\t\t\tmid=(L+R)/2;\n\t\t\tif(apiles[mid]==input){\n\t\t\t\tprintf(\"%d\\n\",mid+1);\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(apiles[mid]<=input)L=mid+1;\n\t\t\telse R=mid;\n\t\t}\n\t\tif(flag)\n\t\tprintf(\"%d\\n\",L+1);\n//\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9948051948051948, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "83e8fa866a0371fcc162e6a686a847af", "bug_code_uid": "0d4d9b9459244fb800ec56027077e6bf", "src_uid": "7d2f22fc06d4f0b8ff8be6c6862046e7", "apr_id": "7c3a1bbce4ef2cb25d7dda9f13f3cc50", "difficulty": 900, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid swap(int *x,int *y)\n{\n\tint t=*x;\n\t*x=*y;\n\t*y=t;\n}\n\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)      //taking values of a(i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\tfor(i=0;i<=n/2;i=i+2)    //swaping no.s\n\t{\n\t\tswap(a+i,a+(n-1-i));\n\t}\t\n\n\tfor(i=0;i<n;i++)      //printing values of a(i)\n\t{\n\t\tprintf(\"%d \",a[i]);\n\t}\nreturn 0;\n}\t\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid swap(int *x,int *y)\n{\n\tint t=*x;\n\t*x=*y;\n\t*y=t;\n}\n\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)      //taking values of a(i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\tfor(i=0;i<=(n/2-1);i=i+2)    //swaping no.s\n\t{\n\t\tswap(a+i,a+(n-1-i));\n\t}\t\n\n\tfor(i=0;i<n;i++)      //printing values of a(i)\n\t{\n\t\tprintf(\"%d \",a[i]);\n\t}\nreturn 0;\n}\t\n"}
{"similarity_score": 0.9611451942740287, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c522c5ea54b94bf6ca9e15b456f28284", "bug_code_uid": "c1e97af7d864b779dc2937119855d662", "src_uid": "31014efa929af5e4b7d9987bd9b59918", "apr_id": "e7fc3981989e930a01715918463343af", "difficulty": 1000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long a,b;\n    scanf(\"%l64d%l64d\",&a,&b);\n    if(a>=b)\n    printf(\"1\\n\");\n    else\n    {\n        if(b%a==0)\n        printf(\"%l64d\\n\",b/a);\n        else\n        printf(\"%l64d\\n\",b/a+1);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    long long a,b;\n    scanf(\"%lld%lld\",&a,&b);\n    if(a>=b)\n    printf(\"1\\n\");\n    else\n    {\n        if(b%a==0)\n        printf(\"%lld\\n\",b/a);\n        else\n        printf(\"%lld\\n\",b/a+1);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9961013645224172, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "658b3ded0622b932fe12d99142bc2104", "bug_code_uid": "da4919065d3e8eed34a981442557612f", "src_uid": "53a3313f5d6ce19413d72473717054fc", "apr_id": "b839a2a579e6705421b1ddcad58f90cd", "difficulty": 900, "tags": ["implementation", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while(t-- ){\n        \n     int n, i;\n     scanf(\"%d\", &n);\n     int c[n]; \n     scanf(\"%d\",&c[0]);\n     int max = c[0];\n     for(int i = 1;i<n;i++){\n         scanf (\"%d\", &c[i]);\n         if(c[i] > max) {\n             max = c[i];\n         }\n         \n     }\n  for (i = 0;i < n;i++){\n      int val = max - c[i]:\n\n        if(val % 2!= 0) {\n            printf(\"NO\\n\");\n            break;\n        }\n  }\nif(i == n){\n    printf(\"YES\\n\");\n}\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while(t-- ){\n        \n     int n, i;\n     scanf(\"%d\", &n);\n     int c[n]; \n     scanf(\"%d\",&c[0]);\n     int max = c[0];\n     for(int i = 1;i<n;i++){\n         scanf (\"%d\", &c[i]);\n         if(c[i] > max) {\n             max = c[i];\n         }\n         \n     }\n  for (i = 0;i < n;i++){\n      int val = max - c[i];\n\n        if(val % 2!= 0) {\n            printf(\"NO\\n\");\n            break;\n        }\n  }\nif(i == n){\n    printf(\"YES\\n\");\n}\n}\nreturn 0;\n}"}
{"similarity_score": 0.927810650887574, "equal_cnt": 12, "replace_cnt": 10, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "21287bc27beeb37a930b2e97c7fc4074", "bug_code_uid": "167b05abd26bdbdf2381b93259275c35", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "19c53351e1574b3c59fc251b5ef35f68", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <math.h>\n\nint main(){\n\tint d;\n\tscanf(\"%d\", &d);\n\tint cases[2*d];\n\tfor(int i=0; i<2*d; i++){\n\t\tint temp;\n\t\tscanf(\"%d\", &temp);\n\t\tcases[i]=temp;\n\t}\n\tfor(int i=0; i<2*d; i+=2){\n\t\tint temp=cases[i+1];\n\t\tint need=(-1+sqrt(1+8*temp))/2;\n\t\tint count=need*(need+1)/2;\n\t\tif(count==temp){\n\t\t\tfor(int j=0; j<cases[i]-need-1; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\n\t\t\tprintf(\"bb\");\n\t\t\tfor(int j=0; j<need-1; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\t \n\t\t}else{\n\t\t\tneed++;\n\t\t\tcount=need*(need+1)/2;\n\t\t\tfor(int j=0; j<cases[i]-need-1; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\n\t\t\tprintf(\"b\");\n\t\t\tfor(int j=0; j<count-cases[i+1]; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\n\t\t\tprintf(\"b\");\n\t\t\tfor(int j=0; j<need-1+cases[i+1]-count; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\n\t\t}\n\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <math.h>\n\nint main(){\n\tint d;\n\tscanf(\"%d\", &d);\n\tlong long cases[2*d];\n\tfor(int i=0; i<2*d; i++){\n\t\tlong long temp;\n\t\tscanf(\"%lld\", &temp);\n\t\tcases[i]=temp;\n\t}\n\tfor(int i=0; i<2*d; i+=2){\n\t\tlong long temp=cases[i+1];\n\t\tlong long need=(-1+sqrt(1+8*temp))/2;\n\t\tlong long count=need*(need+1)/2;\n\t\tif(count==temp){\n\t\t\tfor(long long j=0; j<cases[i]-need-1; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\n\t\t\tprintf(\"bb\");\n\t\t\tfor(long long j=0; j<need-1; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\t \n\t\t}else{\n\t\t\tneed++;\n\t\t\tcount=need*(need+1)/2;\n\t\t\tfor(long long j=0; j<cases[i]-need-1; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\n\t\t\tprintf(\"b\");\n\t\t\tfor(long long j=0; j<count-cases[i+1]; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\n\t\t\tprintf(\"b\");\n\t\t\tfor(long long j=0; j<need-1+cases[i+1]-count; j++){\n\t\t\t\tprintf(\"a\");\n\t\t\t}\n\t\t}\n\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.985545335085414, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a32611f9d5f421e2c49841e5ec2ecfb7", "bug_code_uid": "c0bcf57305a2bc19c5d1ed100ceb2a21", "src_uid": "f8335c59cd05988c8053f138c4df06aa", "apr_id": "beb2b25a6bab0e23d2851cfee222fcfa", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nlong highest_square(long k)\r\n{\r\n\tlong temp=k,n=0;\r\n\twhile(temp)\r\n\t{\r\n\t\ttemp/=10;\r\n\t\tn++;\r\n\t\t\r\n\t}\r\n\t\r\n\tfor(int i=pow(10,(n)/4);i<=k;i++)\r\n\t{\r\n\t\tif(i*i>k)\r\n\t\t\treturn i-1;\r\n\t}\r\n\t\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    \r\n    long ar[t];\r\n    int index[t][2];\r\n    \r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%ld\",&ar[i]);\r\n    }\r\n    \r\n    for(int i=0;i<t;i++)\r\n    {\r\n        long h_sq = highest_square(ar[i]);\r\n        \r\n        int r = ar[i]- (h_sq)*(h_sq);\r\n        \r\n        \r\n        if(r==0)\r\n        {\r\n            index[i][0]=h_sq;\r\n            index[i][1]=1;\r\n        }\r\n        else\r\n        {\r\n            if(r>=h_sq+1)\r\n            {\r\n                int x= r-h_sq-1;\r\n                index[i][0] = h_sq+1;\r\n                index[i][1] = h_sq-x+1;\r\n            }\r\n            else \r\n            {\r\n                index[i][0] = r;\r\n                index[i][1] = h_sq+1;\r\n            }\r\n           \r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n    for(int i=0;i<t;i++)\r\n        {\r\n            printf(\"%d %d\\n\",index[i][0],index[i][1]);\r\n        }\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\n\r\nlong highest_square(long k)\r\n{\r\n    if(k==1)\r\n        return 1;\r\n\tlong temp=k,n=0;\r\n\twhile(temp)\r\n\t{\r\n\t\ttemp/=10;\r\n\t\tn++;\r\n\t\t\r\n\t}\r\n\t\r\n\tfor(int i=pow(10,(n)/4);i<=k;i++)\r\n\t{\r\n\t\tif(i*i>k)\r\n\t\t\treturn i-1;\r\n\t}\r\n\t\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    \r\n    long ar[t];\r\n    int index[t][2];\r\n    \r\n    for(int i=0;i<t;i++)\r\n    {\r\n        scanf(\"%ld\",&ar[i]);\r\n    }\r\n    \r\n    for(int i=0;i<t;i++)\r\n    {\r\n        long h_sq = highest_square(ar[i]);\r\n        \r\n        int r = ar[i]- (h_sq)*(h_sq);\r\n        \r\n        \r\n        if(r==0)\r\n        {\r\n            index[i][0]=h_sq;\r\n            index[i][1]=1;\r\n        }\r\n        else\r\n        {\r\n            if(r>=h_sq+1)\r\n            {\r\n                int x= r-h_sq-1;\r\n                index[i][0] = h_sq+1;\r\n                index[i][1] = h_sq-x+1;\r\n            }\r\n            else \r\n            {\r\n                index[i][0] = r;\r\n                index[i][1] = h_sq+1;\r\n            }\r\n           \r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n    for(int i=0;i<t;i++)\r\n        {\r\n            printf(\"%d %d\\n\",index[i][0],index[i][1]);\r\n        }\r\n}"}
{"similarity_score": 0.49015317286652077, "equal_cnt": 9, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "7a27ce20953d9665516d9c2dda499e8f", "bug_code_uid": "e28b84aa474ff89bff3a697d8499429a", "src_uid": "1ffb08fe61cdf90099c82162b8353b1f", "apr_id": "124ac92537885a2335c45d68208dc3a6", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n, zero=0, sum=0;\n\t\tscanf(\"%d\", &n);\n\t\tint arr[n];\n\t\tfor (int i=0;i<n;i++) {\n\t\t\tscanf(\"%d\", &arr[i]);\n\t\t\tif (arr[i]==0) zero++;\n\t\t\tsum+=arr[i];\n\t\t}\n\t\tif (sum!=0&&zero==0) printf(\"0\\n\");\n\t\telse if (sum!=0&&sum+zero!=0) printf(\"%d\\n\", zero);\n\t\telse if (sum==0&&zero==0) printf(\"1\\n\");\n\t\telse if (sum==0&&zero!=0) printf(\"%d\\n\", zero);\n\t\telse {\n\t\t\tif (sum!=0&&zero!=0) {\n\t\t\t\tif (sum+zero==0) printf(\"2\\n\");\n\t\t\t\telse printf(\"1\\n\");\n\t\t\t}\n\t\t} \n\t}\n}\n", "fixed": "#include <stdio.h>\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tint n, a, zero=0, sum=0;\n\t\tscanf(\"%d\", &n);\n\t\twhile (n--) {\n\t\t\tscanf(\"%d\", &a);\n\t\t\tsum+=a;\n\t\t\tif (!a) zero++;\n\t\t}\n\t\tif (zero==0&&sum!=0) printf(\"0\\n\");\n\t\telse {\n\t\t\tif (zero==0) {\n\t\t\t\tif (sum==0) printf(\"1\\n\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (sum+zero==0) printf(\"%d\\n\", zero+1);\n\t\t\t\telse printf(\"%d\\n\", zero);\n\t\t\t}\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.9940828402366864, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "856284d21c308eb8a4bf0c2baef6b06c", "bug_code_uid": "e2bc6bef16513be72576b5e142682208", "src_uid": "f7defb09175c842de490aa13a4f5a0c9", "apr_id": "870cf5adab66f6de932558b76f78a9fa", "difficulty": 800, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#define _CRT_SECURE_NO_WARNINGS\r\n/*\r\nVC2010 sucks\r\nwhy disallow scanf\r\nscanf is love\r\nscanf is life\r\n*/\r\n#define true 1\r\n#define false 0\r\n#define MAX 2147483647\r\n\r\nint main() {\r\n    int t = 0;\r\n    scanf(\"%d\\n\", &t);\r\n    for (int testcase = 0; testcase < t; testcase++) {\r\n        int a = 0;\r\n        int b = 0;\r\n        scanf(\"%d %d\\n\", &a, &b);\r\n        if (b < a) {\r\n            printf(\"%d %d\\n\", 0, 0);\r\n        } else if (b % a) {\r\n            printf(\"%d %d\\n\", 0, 0);\r\n        } else {\r\n            printf(\"%d %d\\n\", 1, a / b);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#define _CRT_SECURE_NO_WARNINGS\r\n/*\r\nVC2010 sucks\r\nwhy disallow scanf\r\nscanf is love\r\nscanf is life\r\n*/\r\n#define true 1\r\n#define false 0\r\n#define MAX 2147483647\r\n \r\nint main() {\r\n    int t = 0;\r\n    scanf(\"%d\\n\", &t);\r\n    for (int testcase = 0; testcase < t; testcase++) {\r\n        int a = 0;\r\n        int b = 0;\r\n        scanf(\"%d %d\\n\", &a, &b);\r\n        if (b < a) {\r\n            printf(\"%d %d\\n\", 0, 0);\r\n        } else if (b % a) {\r\n            printf(\"%d %d\\n\", 0, 0);\r\n        } else {\r\n            printf(\"%d %d\\n\", 1, b / a);\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.914560770156438, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "67b5478503754f188343fa956d5872d8", "bug_code_uid": "ffc2ed4cfeb6b56f4439358f55f85172", "src_uid": "9ee3d548f93390db0fc2f72500d9eeb0", "apr_id": "f84907addf0343607b80f0f77368c363", "difficulty": 1000, "tags": ["implementation", "dfs and similar", "graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint i, n, t, a, s;\nint main()\n{\n    printf(\"Hello world!\\n\");\n    scanf(\"%d %d\", &n, &t);\n    s = 1;\n    for(i=1; i<n+1; i++)\n    {\n        scanf(\"%d\", &a);\n        if(i==s)\n        {\n            s += a;\n            if(s == t) {\n                printf(\"YES\\n\"); return 0;\n            } else if(s >t) {\n                printf(\"NO\\n\"); return 0;\n            }\n        }\n\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint i, n, t, a, s;\nint main()\n{\n    scanf(\"%d %d\", &n, &t);\n    s = 1;\n    for(i=1; i<n+1; i++)\n    {\n        scanf(\"%d\", &a);\n        if(i==s)\n        {\n            s += a;\n            if(s == t) {\n                printf(\"YES\\n\"); return 0;\n            } else if(s >t) {\n                printf(\"NO\\n\"); return 0;\n            }\n        }\n    }\n    printf(\"NO\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.822477650063857, "equal_cnt": 14, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "4d0b52073d0191bbffef3af8eac1dcd8", "bug_code_uid": "94759b4a096c3a3c4c8b56323dee6b23", "src_uid": "4266948a2e793b4b461156af226e98fd", "apr_id": "07dda5db92a221038f6c53873fae31d7", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n__int64 a[300005],b[1000005];\nint main()\n{\n\n    __int64 n,m,i,j,t,score,score_1,max,min;\n    while(scanf(\"%I64d\",&t)!=EOF)\n    {\n        score=0;\n        memset(b,0,sizeof(b));\n        max=-1;min=10000000;\n        for(i=0;i<t;i++)\n        {\n            scanf(\"%I64d\",&a[i]);\n            score+=a[i];\n            b[a[i]]++;\n            if(a[i]>max) max=a[i];\n            if(a[i]<min) min=a[i];\n        }\n        score_1=score;\n        for(i=min;i<max;i++)\n        {\n            if(i==max-1) break;\n            if(b[i]!=0)\n            {\n                score+=score_1;\n                score_1=score_1-i;\n            }\n            if(b[i]>0)\n            {\n                b[i]--;\n                i--;\n            }\n        }\n        printf(\"%I64d\\n\",score);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define N 1000005\n#define N1 300005\n__int64 a[N1],b[N];\nint main()\n{\n    __int64 n,m,i,j,t,score,score_1,k,max;\n    while(scanf(\"%I64d\",&t)!=EOF)\n    {\n        score=0;max=-1;\n        memset(b,0,sizeof(b));\n        for(i=0; i<t; i++)\n        {\n            scanf(\"%I64d\",&a[i]);\n            score+=a[i];\n            b[a[i]]++;\n            if(a[i]>max) max=a[i];\n        }\n        score_1=score;\n        for(i=0; i<N; i++)\n        {\n            if(b[i]!=0)\n            {\n                score+=score_1;\n                score_1=score_1-i;\n            }\n            if(b[i]>0)\n            {\n                b[i]--;\n                i--;\n            }\n        }\n        printf(\"%I64d\\n\",score-max);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.7872763419483101, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "aa833c9e6b5db2613e6216bdac14cc93", "bug_code_uid": "384045a2b6cff7daa092d9b5523ecdee", "src_uid": "d5ae278ad52a4ab55d732b27a91c2620", "apr_id": "e268aba712e56bd5d5d4da74c0f99283", "difficulty": 1300, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint a, b;\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (a = 1; a <= n; a++)\n\t{\n\t\tprintf(\"%d\", a);\n\t\tfor (b = 1; b < n; b++)\n\t\t{\n\t\t\tprintf(\" %d\", a + n * b);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n\tint a, b;\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (a = 1; a <= n; a++)\n\t{\n\t\tprintf(\"%d\", a);\n\t\tfor (b = 1; b < n; b++)\n\t\t{\n\t\t\tif (b & 1)\n\t\t\t{\n\t\t\t\tprintf(\" %d\", n + 1 - a + n * b);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\" %d\", a + n * b);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9701213818860878, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "7ce955994253096879eddb6348bd0bff", "bug_code_uid": "b060001324b980c7e88c4d83d7d70d59", "src_uid": "b58a18119ac8375f9ad21a282292a76c", "apr_id": "9f96685d52782ef8d6b48d6662646689", "difficulty": 1700, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<stdbool.h>\r\n#define N 1000000\r\nint c[1000000],z;\r\nvoid precomp(){\r\n\tbool a[N+1];\r\n\tint i,j;\r\n\tz=0;\r\n\tfor(i=2;i<=N;i++){\r\n\ta[i]=true;c[i]=0;}\r\n\t\r\n\tfor(i=2;i<=N;i++){\r\n\t\tif(a[i] == true){\r\n\t\t\tc[z] = i;\r\n\t\t\tz++;\r\n\t\t\tfor(j=i;j<=N;j+=i){\r\n\t\t\t\ta[j] = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\nint gcd(int a, int b){\r\n\tif(a==0 || b==0)\r\n\treturn a+b;\r\n\t\r\n\tgcd(b%a , a);\r\n}\r\n\r\nint main(void) {\r\n\tprecomp();\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint a,b,k,i,j,count1=0, count2 =0,cog,a1,b1;\r\n\t\tscanf(\"%d %d %d\",&a,&b,&k);\r\n\t\ta1=a,b1=b;\r\n\t\tcog = gcd(a,b);\r\n\t\tfor(i=0;i<z;i++){\r\n\t\t\twhile(a%c[i]==0){\r\n\t\t\t\tcount1++;\r\n\t\t\t\ta/=c[i];\r\n\t\t\t}\r\n\t\t\tif(a==1)\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tfor(i=0;i<z;i++){\r\n\t\t\twhile(b%c[i]==0){\r\n\t\t\t\tcount2++;\r\n\t\t\t\tb/=c[i];\r\n\t\t\t}\r\n\t\t\tif(b==1)\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tint m;\r\n\t\tif(a1==b1)\r\n\t\tm=0;\r\n\t\telse if(cog == a1 || cog ==b1)\r\n\t\tm=1;\r\n\t\telse\r\n\t\tm=2;\r\n\t\t\tint n = count1+count2;\r\n\t\t\tif(k>=m && k<=n && k==1 && m==1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\telse if(k>=m && k<=n && k!=1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include<stdbool.h>\r\n#define N 100000\r\nint c[100000],z;\r\nvoid precomp(){\r\n\tbool a[N+1];\r\n\tint i,j;\r\n\tz=0;\r\n\tfor(i=2;i<=N;i++){\r\n\ta[i]=true;c[i]=0;}\r\n\t\r\n\tfor(i=2;i<=N;i++){\r\n\t\tif(a[i] == true){\r\n\t\t\tc[z] = i;\r\n\t\t\tz++;\r\n\t\t\tfor(j=i;j<=N;j+=i){\r\n\t\t\t\ta[j] = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\nint gcd(int a, int b){\r\n\tif(a==0 || b==0)\r\n\treturn a+b;\r\n\t\r\n\tgcd(b%a , a);\r\n}\r\n\r\nint main(void) {\r\n\tprecomp();\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\tint a,b,k,i,j,count1=0, count2 =0,cog,a1,b1;\r\n\t\tscanf(\"%d %d %d\",&a,&b,&k);\r\n\t\ta1=a,b1=b;\r\n\t\tcog = gcd(a,b);\r\n\t\tfor(i=0;i<z;i++){\r\n\t\t\twhile(a%c[i]==0){\r\n\t\t\t\tcount1++;\r\n\t\t\t\ta/=c[i];\r\n\t\t\t}\r\n\t\t\tif(a==1)\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(a>1)count1++;\r\n\t\tfor(i=0;i<z;i++){\r\n\t\t\twhile(b%c[i]==0){\r\n\t\t\t\tcount2++;\r\n\t\t\t\tb/=c[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(b>1)count2++;\r\n\t\tint m;\r\n\t\tif(a1==b1)\r\n\t\tm=0;\r\n\t\telse if(cog == a1 || cog ==b1)\r\n\t\tm=1;\r\n\t\telse\r\n\t\tm=2;\r\n\t\t\tint n = count1+count2;\r\n\t\t\tif(k>=m && k<=n && k==1 && m==1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\telse if(k>=m && k<=n && k!=1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"}
{"similarity_score": 0.4547996272134203, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "886d727d5401e0e7a5d0669e355818b2", "bug_code_uid": "facabb80ecddec66956f8af88ca4850e", "src_uid": "fc831eda72f2ebe0865a3fb1b783edc5", "apr_id": "8a5c33a5625ec25c69c4f477cf0494eb", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    char s[11];\n    int cnt=0;\n    int i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s);\n        int l=strlen(s);\n        if(l<=k)\n            continue;\n        int flag=1;\n        int j;\n        for(j=0;j<l;j++)\n        {\n            if(s[j]-'0'>k)\n            {\n                flag=0;\n                break;\n            }\n\n        }\n        if(flag==1)\n            cnt++;\n    }\n    printf(\"%d\\n\",cnt);\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint is_found(char x,char s[],int l)\n{\n    int i;\n    for(i=0;i<l;i++)\n        if(x==s[i])\n            return 1;\n    return 0;\n}\n\nint main()\n{\n    char kk[]=\"0123456789\";\n    char s[100];\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    int cnt=0;\n    int i;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",s);\n        int l=strlen(s);\n        int j;\n        for(j=0;j<=k;j++)\n        {\n            if(!is_found(kk[j],s,l))\n            {\n                cnt++;\n                break;\n            }\n        }\n    }\n    printf(\"%d\\n\",n-cnt);\n}"}
{"similarity_score": 0.9794952681388013, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "57eb159b1b4e20a48f9505c211380f1e", "bug_code_uid": "5f21bbc27f4b3d1b6323676488220472", "src_uid": "d46d5f130d8c443f28b52096c384fef3", "apr_id": "c45373b148881ef74c55a0f8595561ae", "difficulty": 900, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int ch[50000],cp[500000];\n    char kh[1000000],arr[1000000];\n    long long int a=0,b=0,c,d,e,i=0,j=0,k=0,l=0,tep,temp,m,n,x,y;\n    double z,yo,go;\n\n    scanf(\"%lld\",&a);\n\n    go=0;\n    for(i=0; i<a; i++)\n    {\n        scanf(\"%lf\",&z);\n        k=0;\n        k=z>0?z:(-z);\n        yo=sqrt(k);\n        j=(int)yo;\n        if(yo-j>0 && z>go)\n        {\n\n            go=z;\n\n        }\n        if(z<0 && go==0)\n        {\n            go=z;\n\n        }\n        if(yo-j>0 && go<z)\n            go=z;\n        if(k==1)\n            go=z;\n    }\n\n    printf(\"%d\\n\",(int)go);\n\n\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int ch[50000],cp[500000];\n    char kh[1000000],arr[1000000];\n    long long int a=0,b=0,c,d,e,i=0,j=0,k=0,l=0,tep,temp,m,n,x,y;\n    double z,yo,go;\n\n    scanf(\"%lld\",&a);\n\n    go=0;\n    for(i=0; i<a; i++)\n    {\n        scanf(\"%lf\",&z);\n        k=0;\n        k=z>0?z:(-z);\n        yo=sqrt(k);\n        j=(int)yo;\n        if(yo-j>0 && z>go)\n        {\n\n            go=z;\n\n        }\n        if(z<0 && go==0)\n        {\n            go=z;\n\n        }\n        if(yo-j>0 && go<z)\n            go=z;\n        \n    }\n\n    printf(\"%d\\n\",(int)go);\n\n\n\n    return 0;\n}"}
{"similarity_score": 0.9722814498933902, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9477a32fe7410e5baa7b0af9f053caca", "bug_code_uid": "007ae42ffb75f9ac106c3ab5be065962", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "7924354c0959ca9671f35b403cf2a783", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t,c=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b;\n        scanf(\"%d %d\",&a,&b);\n        if(a<b && b>a+2){\n            c++;   \n        }\n    }\n    printf(\"%d\",c);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int t,c=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int a,b;\n        scanf(\"%d %d\",&a,&b);\n        if(a<b && b>a+1)\n        {\n            c++;   \n        }\n    }\n    printf(\"%d\",c);\n    return 0;\n}"}
{"similarity_score": 0.9740406320541761, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d9ab9452e7620ab83837175648a121ae", "bug_code_uid": "8c377bde46b08c1993c9807a4c1391ff", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "c01d4b3e2dca10de5a1853673f9d9a27", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int i,n,sum0 = 0,sum5 = 0,sum = 0,t;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&t);\n        if(t == 5) sum5++;\n        if(t == 0) sum0++;\n    }\n\n    if(sum0 && !sum5) printf(\"0\");\n    else{\n        if(sum0 == 0) printf(\"-1\");\n        else{\n            sum = 5*sum5;\n            int f;\n            while(1){\n                sum-=5;\n                if(sum<=0){\n                    f=1;\n                    break;\n                }\n                if(sum % 9 == 0){\n                    int d = sum/5;\n                    for(i=1;i<=d;++i)\n                        printf(\"5\");\n                    for(i=1;i<=sum0;i++)\n                        printf(\"0\");\n                    f=0;\n                    break;\n                }\n\n\n            }\n            if(f){\n                printf(\"0\");\n            }\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int i,n,sum0 = 0,sum5 = 0,sum = 0,t;\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&t);\n        if(t == 5) sum5++;\n        if(t == 0) sum0++;\n    }\n\n    if(sum0 && !sum5) printf(\"0\");\n    else{\n        if(sum0 == 0) printf(\"-1\");\n        else{\n            sum = 5*sum5;\n            int f;\n            while(1){\n\n                if(sum<=0){\n                    f=1;\n                    break;\n                }\n                if(sum % 9 == 0){\n                    int d = sum/5;\n                    for(i=1;i<=d;++i)\n                        printf(\"5\");\n                    for(i=1;i<=sum0;i++)\n                        printf(\"0\");\n                    f=0;\n                    break;\n                }\n\n                sum-=5;\n            }\n            if(f){\n                printf(\"0\");\n            }\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9941027801179444, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "4d1f3ada02917d78f27098fd95191325", "bug_code_uid": "ca45288ddc35897574d93372d7fbafde", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "7bedc30eaeb417d3cb888f7b8b3c0128", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int count=1;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int min=a[0];\r\n        for(int i=1;i<n;i++)\r\n        {\r\n            if(a[i]<mini)\r\n            {\r\n                min=a[i];\r\n                count=1;\r\n            }\r\n            else if(a[i]==mini)\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n        int final=n-count;\r\n        printf(\"%d\",final);\r\n    }", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int count=1;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int min=a[0];\r\n        for(int i=1;i<n;i++)\r\n        {\r\n            if(a[i]<min)\r\n            {\r\n                min=a[i];\r\n                count=1;\r\n            }\r\n            else if(a[i]==min)\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n        int final=n-count;\r\n        printf(\"%d\\n\",final);\r\n    }\r\n}"}
{"similarity_score": 0.9839080459770115, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "3099c1c9dffd8bd170013c6945f623f6", "bug_code_uid": "217ac72ca370047c98726a2579454396", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "baa614b58a1391556f747f7d3bebfb35", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    //\u80cc\u540e\u7684\u6570\u5b66\u5206\u6790\n    //n=a1*k^m+a2*k^(m-1)+...+a(m+1)\n    //answer=a1+a2+...+a(m+1)+m\n    //\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u6211\u7528\u6bcf\u4e00\u6b65\u52a0\u4e00\u6765\u5904\u7406\uff01\n    //\u603b\u548c\u518d\u51cf\u4e00\u5c31\u884c\n    while(t--){\n        long long n,k;\n        scanf(\"%lld%lld\",&n,&k);\n        int answer=0;\n        while(1){\n            if(n==0)break;\n            answer+=n%k+1;\n            n=n/k;\n        }\n        printf(\"%d\\n\",answer-1);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    //\u80cc\u540e\u7684\u6570\u5b66\u5206\u6790\n    //n=a1*k^m+a2*k^(m-1)+...+a(m+1)\n    //answer=a1+a2+...+a(m+1)+m\n    //\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u6211\u7528\u6bcf\u4e00\u6b65\u52a0\u4e00\u6765\u5904\u7406\uff01\n    //\u603b\u548c\u518d\u51cf\u4e00\u5c31\u884c\n    while(t--){\n        long long n,k;\n        scanf(\"%lld%lld\",&n,&k);\n        long long answer=0;\n        while(1){\n            if(n==0)break;\n            answer+=n%k+1;\n            n=n/k;\n        }\n        printf(\"%lld\\n\",answer-1);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.2199618563254927, "equal_cnt": 20, "replace_cnt": 13, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 19, "lang": "GNU C", "fix_code_uid": "44cc9efe999408e52e3a3bab53be1e53", "bug_code_uid": "ca786ddbba86030d241c718132f77567", "src_uid": "a20ca4b053ba71f6b2dc05749287e0a4", "apr_id": "31748b2ff1b24ed457bd3b223d6fd060", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nvoid main(){\n\n    int n;\n    scanf(\"%d\", &n);\n    int v[n];\n    int i;\n    int cont = 0;\n    for(i=0; i<n; i++){\n        scanf(\"%d\", &v[i]);\n    }\n    int k= 0;\n\n    for(i = 0; i<n; i++){\n        while( k<v[i]){\n            cont++;\n            //printf(\"\\nSube%d\", cont);\n            k++;\n            //printf(\"\\nK = %d\", k);\n        }\n        cont++;\n       // printf(\"\\nCome %d\", cont);\n            if(v[i+1]<v[i]){\n                int aux = v[i];\n                do{\n                    aux--;\n                    cont++;\n                    //printf(\"\\nBaja %d\", cont);\n                    k = aux;\n                    //printf(\"\\nK = %d\", k);\n                }while(aux != v[i+1]);\n                cont++;\n               // printf(\"\\nSalta %d\", cont);\n            }else{\n                if(i<n-1){\n                    k = v[i];\n                    cont++;\n                    //printf(\"\\nSalta %d\", cont);\n                    //printf(\"\\nK = %d\", k);\n                }\n            }\n\n    }\n\n    printf(\"%d\", cont);\n\n    }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int narbol,i=0,segundos=0,k;\n    int v[99999]={0,0};\n\n    scanf(\"%d\",&narbol);\n\n    for(k=0; k<narbol; k++){\n            scanf(\"%d\",&v[k]);\n\n    }\n    segundos=narbol+v[i];\n    while(i<narbol-1){\n            if(v[i+1]>v[i]){\n                    segundos=segundos+(v[i+1]-v[i]);\n\n            }\n            else{\n                segundos=segundos+(v[i]-v[i+1]);\n\n            }\n            segundos++;\n            i++;\n\n    }\n\n    printf(\"%d\",segundos);\n\n\n    return 0;\n}\n"}
{"similarity_score": 0.8815028901734104, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "94397e2b15d732541d328d646ff75541", "bug_code_uid": "dfe818de51eef4091860ea33123e7887", "src_uid": "7db0b870177e7d7b01da083e21ba35f5", "apr_id": "5ef38b1bddb2f53c779b72104c9158b5", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main() {\n\tint n,a[1001],i,k0=0,k1=0;\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; ++i) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tif (a[i]==0)\n\t\t\t++k0;\n\t\tif (a[i]==1)\n\t\t\t++k1;\n\t}\n\tif (a[n-1]==1&&n==1)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tif (a[n-1]==0&&n==1)\n\t\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t\tif (k1==1)\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\telse\n\t\t\t\tif (k0==1)\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"NO\\n\");\n}\n", "fixed": "#include <stdio.h>\nint main() {\n\tint n,a[1001],i,k0=0,k1=0;\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; ++i) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tif (a[i]==0)\n\t\t\t++k0;\n\t}\n\tif (a[n-1]==1&&n==1)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tif (a[n-1]==0&&n==1)\n\t\t\tprintf(\"NO\\n\");\n\t\telse\n\t\t\tif (k0==1)\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"NO\\n\");\n}\n"}
{"similarity_score": 0.9518716577540107, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "f33f2f72445b0c35bda133d276f20513", "bug_code_uid": "ea49e49203698fd89cd8ca11ca841b6e", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "0b55bcee5c98d3d041f2015a8e8d57c2", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,x,i,d,sum,c=0;\n    char s;\n    scanf(\"%d%d 17\",&n,&sum);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"\\n%c %d\",&s,&d);\n        if(s=='+')\n            sum+=d;\n        else if(s=='-')\n            {\n                if(sum<d)\n                    c++;\n                else sum-=d;\n            }\n    }\n    printf(\"%d %d\",sum,c);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,x,i,d,c=0;\n    long long int sum;\n    char s;\n    scanf(\"%d%lld\",&n,&sum);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"\\n%c %d\",&s,&d);\n        if(s=='+')\n            sum+=d;\n        else if(s=='-')\n            {\n                if(sum<d)\n                    c++;\n                else sum-=d;\n            }\n    }\n    printf(\"%lld %d\",sum,c);\n}\n"}
{"similarity_score": 0.13896457765667575, "equal_cnt": 10, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "bbed5f2df101d358d4792b561f31a46d", "bug_code_uid": "411533ae5b8ac0c90615e38699d8e4d4", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "73051d15eeed3fb0816fa84cd59404fc", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int x,i,n;\n    x=0;\n    scanf(\"%d\",n);\n    for(i=1;i<=n;i++)\n    {\n        char stat[2];\n        scanf(\"%s\",stat);\n        if(stat[0] == '+' || stat[1] == '+' || stat[2] == '+')\n        {\n            x++;\n            break;\n        }    \n        if(stat[0] == '-' || stat[1] == '-' || stat[2] == '-')\n        {\n            x--;\n            break;\n        }    \n    }\n    printf(\"%d\",x);\n    return 0;\n}", "fixed": "#include<stdio.h>\n #include<string.h>\n\nint main()\n {\n int n,c=0;\n scanf(\"%d\\n\",&n);\n char p[150];\n int i;\n\nfor (i=0; i<n; i++)\n {\n gets(p);\n if ( (p[0]=='-'&&p[1]=='-') || (p[1]=='-'&&p[2]=='-')) c--;\n if ( (p[0]=='+'&&p[1]=='+') || (p[1]=='+'&&p[2]=='+')) c++;\n\n}\n printf(\"%d\\n\",c);\n\nreturn 0;\n }"}
{"similarity_score": 0.8901734104046243, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fa5834aac16fe7d2f90532b9fd01e1d8", "bug_code_uid": "09297660320afd7895764c4a489aee2e", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "f8d4344db9044b647813a455796a5102", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\nint main() {\r\n    int count=0,t,a,b,c,d;\r\n    scanf(\"%d\\n\",&t);\r\n    scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n    while (t--) {\r\n        if (a<b)\r\n            count++;\r\n        if (a<c)\r\n            count++;\r\n        if (a<d)\r\n            count++;\r\n        printf(\"%d\\n\",count);\r\n        count=0;\r\n    }\r\n    return 0;\r\n    \r\n}", "fixed": "#include <stdio.h>\r\nint main() {\r\n    int count=0,t,a,b,c,d;\r\n    scanf(\"%d\\n\",&t);\r\n    \r\n    while (t--) {\r\n        scanf(\"%d %d %d %d\",&a,&b,&c,&d);\r\n        if (a<b)\r\n            count++;\r\n        if (a<c)\r\n            count++;\r\n        if (a<d)\r\n            count++;\r\n        printf(\"%d\\n\",count);\r\n        count=0;\r\n    }\r\n    return 0;\r\n    \r\n}"}
{"similarity_score": 0.9854423292273237, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "650054ee33fa15cad4755526be5d89be", "bug_code_uid": "6802140e07deb8c547bbfcfc75749c07", "src_uid": "be9138aca8e1b8a5d722f99fcd70b685", "apr_id": "c1b0bb4a2fbdb64be42b5a53acccc91b", "difficulty": 1400, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int k;\n    scanf(\"%d\",&k);\n    while(k--)\n    {\n        long long s,g,b,n,m,zhouqishu,yushu;\n        scanf(\"%lld%lld%lld\",&n,&g,&b);\n        if(n%2==0)m=n/2;\n        else m=n/2+1;\n        zhouqishu=m/g;\n        yushu=m%g;\n        if(yushu==0)s=(g+b)*zhouqishu-b;\n        else s=(g+b)*zhouqishu+yushu;\n        int shengyu=n-s;\n        if(shengyu>0)s+=shengyu;\n        printf(\"%lld\\n\",s);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int k;\n    scanf(\"%d\",&k);\n    while(k--)\n    {\n        long long s,g,b,n,m,zhouqishu,yushu;\n        scanf(\"%lld%lld%lld\",&n,&g,&b);\n        if(n%2==0)m=n/2;\n        else m=n/2+1;\n        zhouqishu=m/g;\n        yushu=m%g;\n        if(yushu==0)s=(g+b)*zhouqishu-b;\n        else s=(g+b)*zhouqishu+yushu;\n        long long  shengyu=n-s;\n        if(shengyu>0)s+=shengyu;\n        printf(\"%lld\\n\",s);\n    }\n    return 0;\n}"}
{"similarity_score": 0.8119079837618404, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "9b9f92b100ba014c3ab5d728b25a60a2", "bug_code_uid": "9e45d1d88c2270acc3d2e7891cdfc67a", "src_uid": "bcee233ddb1509a14f2bd9fd5ec58798", "apr_id": "114443a48daa68cf875a0f866bbd9916", "difficulty": 1200, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    int arr[n+1];\n    int i;\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&arr[i]);\n    for(i=k;i<=n;i++)\n    {\n        if(arr[i]!=arr[k])\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    int arr[n+1];\n    int i;\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&arr[i]);\n    for(i=k;i<=n;i++)\n    {\n        if(arr[i]!=arr[k])\n        {\n            printf(\"-1\");\n            return 0;\n        }\n    }\n    int count=0;\n    for(i=k;i>=0;i--)\n        if(arr[i]!=arr[k])\n        {\n            printf(\"%d\",i);\n          break;\n        }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8174474959612278, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "899fd3f54fb9994e7603e83bf126af04", "bug_code_uid": "c4b627ad6ea4388c6e3af013218bdbbf", "src_uid": "0d5f4320fc2c7662d21e09a51baf21db", "apr_id": "b7492546f752990ad6a0088a8f802660", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    for(int i = 0; i < t; i++) {\n        int n;\n        scanf(\"%d\", &n);\n        int j = n;\n        int k = n/2;\n        if(n%2) {\n            for(; j > ((n/2)+1); j--, k--) {\n                printf(\"%d \", k);\n                printf(\"%d \", j);\n            }\n            printf(\"%d\\n\", (n+1)/2);\n        }\n        else {\n            for(; j > ((n/2)+1); j--, k--) {\n                printf(\"%d \", k);\n                printf(\"%d \", j);\n            }\n            printf(\"%d \", 1);\n            printf(\"%d\\n\", ((n/2)+1));\n        }\n    }        \n}\n\n", "fixed": "#include <stdio.h>\n\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    for(int i = 0; i < t; i++) {\n        int n;\n        scanf(\"%d\", &n);\n        int j;\n        int k;\n        if(n%2) {\n            for(j = 1, k = (n-(n/2)+1);j <= n/2; j++, k++) {\n                printf(\"%d \", j);\n                printf(\"%d \", k);\n            }\n            printf(\"%d\\n\", (n+1)/2);\n        }\n        else {\n            for(j = n, k = n/2; j > ((n/2)+1); j--, k--) {\n                printf(\"%d \", k);\n                printf(\"%d \", j);\n            }\n            printf(\"%d \", 1);\n            printf(\"%d\\n\", ((n/2)+1));\n        }\n    }        \n}\n\n"}
{"similarity_score": 0.9534555712270804, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "8a1c404232c5cccd3788b535858f8f59", "bug_code_uid": "b8a29edc3d36950d549d0bf1af7a180f", "src_uid": "03cf2cc26c84aab685ee78a1d6318b30", "apr_id": "d924d5b7562e85b47d1cb8443b95db02", "difficulty": 1100, "tags": ["constructive algorithms", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nvoid print(int a[], int n)\n{\n\tprintf(\"%d \",n);\n\tfor(int i=0; i<n; i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\n\nint main()\n{\n\tint n, a[101], na[100], p[100], pr[100], z[100];\n\tint np=0, cn = 0, cp=0, cz =0;\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=0; i<n; i++)\n\t\tif(a[i]<0)\n\t\t\tif(cn<1)\n\t\t\t\tna[cn++] = a[i];\n\t\t\telse if(!cp||++np%2!=0&&np<3)\n\t\t\t\tp[cp++] = a[i];\n\t\t\telse\n\t\t\t\tz[cz++] = a[i];\n\t\telse if(a[i]>0 && cp<5)\n\t\t\tp[cp++] = a[i];\n\t\telse\n\t\t\tz[cz++] = a[i];\n\tint cpr=0;\n\tnp++;\n\tfor(int i=0; i<cp; i++)\n\t\tif(p[i]<0&&np%2==0)\n\t\t{\n\t\t\tz[cz++] = p[i];\n\t\t\tnp--;\n\t\t}\n\t\telse\n\t\t\tpr[cpr++] = p[i];\n\tprint(na,cn);\n\tprint(pr,cpr);\n\tprint(z,cz);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nvoid print(int a[], int n)\n{\n\tprintf(\"%d \",n);\n\tfor(int i=0; i<n; i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n}\n\nint main()\n{\n\tint n, a[101], na[100], p[100], pr[100], z[100];\n\tint np=0, cn = 0, cp=0, cz =0;\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=0; i<n; i++)\n\t\tif(a[i]<0)\n\t\t\tif(cn<1)\n\t\t\t\tna[cn++] = a[i];\n\t\t\telse if(!cp||(np+1)%2==0&&np<3)\n\t\t\t{\n\t\t\t\tp[cp++] = a[i];\n\t\t\t\tnp++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tz[cz++] = a[i];\n\t\telse if(a[i]>0 && cp<5)\n\t\t\tp[cp++] = a[i];\n\t\telse\n\t\t\tz[cz++] = a[i];\n\tint cpr=0;\n\tnp++;\n\tfor(int i=0; i<cp; i++)\n\t\tif(p[i]<0&&(np%2==0))\n\t\t{\n\t\t\tz[cz++] = p[i];\n\t\t\tnp--;\n\t\t}\n\t\telse\n\t\t\tpr[cpr++] = p[i];\n\tprint(na,cn);\n\tprint(pr,cpr);\n\tprint(z,cz);\n\treturn 0;\n}"}
{"similarity_score": 0.6709886547811994, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "190cb04de706b4c5a111d8d8107a3cbc", "bug_code_uid": "625dd14dda3de9d1b2de349d3f6dc432", "src_uid": "2d4ad39d42b349765435b351897403da", "apr_id": "6dc4f1dfd1f3a490ed606b81ade65280", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nmain()\n{\n    int a,b,c;\n    double x1,x2;\n    scanf(\"%d%d%d\", &a,&b,&c);\n    x1=(double)((-b+sqrt(b*b-4*a*c))/(2*a));\n    printf(\"%0.10lf\\n\", x1);\n    x2=(double)((-b-sqrt(b*b-4*a*c))/(2*a));\n    printf(\"%0.10lf\", x2);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nmain()\n{\n    int a,b,c;\n    double x1,x2;\n    scanf(\"%d%d%d\", &a,&b,&c);\n    x1=(double)((-b+sqrt(b*b-4*a*c))/(2*a));\n    x2=(double)((-b-sqrt(b*b-4*a*c))/(2*a));\n    if(x1<x2){printf(\"%0.10lf\\n\", x2);\n    printf(\"%0.10lf\", x1);}\n    else{printf(\"%0.10lf\\n\", x1);\n    printf(\"%0.10lf\\n\", x2);}\n    return 0;\n}\n"}
{"similarity_score": 0.9481555333998006, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "bcfb0b4a240ee8de815d4e7befa96b2f", "bug_code_uid": "f03618bfaa0ecb448faaa318800ae46b", "src_uid": "27f837609b2777cefccb13aa4596d91c", "apr_id": "90416c26d38cc4b235c10bc6593dd555", "difficulty": 1200, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int n,i,j,a=0,b=0,c=0;\n  scanf(\"%d\",&n);\n   long long arr[n],x,y,z;\n          for(i=0;i<n;i+=1)\n\t  scanf(\"%lld\",&arr[i]);\n\t  \n\t  \n\t           long long array[3];\n\t\t   array[0]=arr[0]-arr[1];\n\t\t \n\t\t   array[1]=(arr[0]-arr[1])/2;\n\t\t  \n\t\t   array[2]=0;\n\t\t   \nint k;\n\t  \n\t\t\t\t   for(k=0,i=array[0];k<3;i=array[k++])\n\t\t\t\t   {\n\t\t\t\t             x=arr[0];\n\t\t\t\t\t     y=arr[0]+i;\n\t\t\t\t\t     z=arr[0]-i;\n\t\t\t\t\t      for(j=1;j<=n;j++)\n\t\t\t\t\t      {\n\t\t\t\t\t      if(arr[j]==x || arr[j]+i==x || arr[j]-i==x)\n\t\t\t\t\t      a++;\n\t\t\t\t\t      if(arr[j]==y || arr[j]+i==y || arr[j]-i==y)\n\t\t\t\t\t      b++;\n\t\t\t\t\t      if(arr[j]==z || arr[j]+i==z || arr[j]-i==z)\n\t\t\t\t\t      c++;\n\t\t\t\t\t      }\n\t\t\t\t\t      if(a==n-1 || b==n-1 || c==n-1)\n\t\t\t\t\t      break;\n\t\t\t\t\t      else\n\t\t\t\t\t      a=b=c=0;\n\t\t\t\t\t      }\n\t\t\t\t\t                        if(a==n-1 || b==n-1 || c==n-1)\n\t\t\t\t\t\t\t\tprintf(\"YES\");\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tprintf(\"NO\");\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t}\n\n\n\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int n,i,j,a=0,b=0,c=0;\n  scanf(\"%d\",&n);\n   long long arr[n],x,y,z;\n          for(i=0;i<n;i+=1)\n\t { scanf(\"%lld\",&arr[i]);\n\t  }\n\n\t  for(i=0;i<n;i+=1)\n\t  {if(arr[0]!=arr[i])\n\t  {arr[1]=(arr[1]+arr[i])- (arr[i]=arr[1]);\n\t  break;}}\n\t  \n\t           long long array[3];\n\t\t   array[0]=arr[0]-arr[1];\n\t\t \n\t\t   array[1]=(arr[0]-arr[1])/2;\n\t\t  \n\t\t   array[2]=0;\n\t\t   \nint k;\n\t  \n\t\t\t\t   for(k=0,i=array[0];k<3;i=array[k++])\n\t\t\t\t   {\n\t\t\t\t             x=arr[0];\n\t\t\t\t\t     y=arr[0]+i;\n\t\t\t\t\t     z=arr[0]-i;\n\t\t\t\t\t      for(j=1;j<=n;j++)\n\t\t\t\t\t      {\n\t\t\t\t\t      if(arr[j]==x || arr[j]+i==x || arr[j]-i==x)\n\t\t\t\t\t      a++;\n\t\t\t\t\t      if(arr[j]==y || arr[j]+i==y || arr[j]-i==y)\n\t\t\t\t\t      b++;\n\t\t\t\t\t      if(arr[j]==z || arr[j]+i==z || arr[j]-i==z)\n\t\t\t\t\t      c++;\n\t\t\t\t\t      }\n\t\t\t\t\t      if(a==n-1 || b==n-1 || c==n-1)\n\t\t\t\t\t      break;\n\t\t\t\t\t      else\n\t\t\t\t\t      a=b=c=0;\n\t\t\t\t\t      }\n\t\t\t\t\t                        if(a==n-1 || b==n-1 || c==n-1)\n\t\t\t\t\t\t\t\tprintf(\"YES\");\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tprintf(\"NO\");\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t}\n\n\n\n\n"}
{"similarity_score": 0.9879081015719468, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "1eb6b3fb26f99e42edb23de74682527c", "bug_code_uid": "5e99ffc2032c7ac303e62337cadb6e24", "src_uid": "5cf25cd4a02ce8020258115639c0ee64", "apr_id": "e98515ff15a52c8476b7664f783209fc", "difficulty": 1900, "tags": ["dp", "dsu", "binary search", "data structures"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{long long int  st[100009],ans[100009];\n\t\tlong long int a[100009],top=-1,l[100009],r[100009],i,j,n;\n\t\tscanf(\"%I64d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%I64d\",&a[i]);\n\t\tst[++top]=0;ans[n]=0;l[0]=-1;r[n-1]=n;\n\t\tfor(i=1;i<n;i++)\n\t\t{ans[i]=0;\n\t\t\twhile(a[st[top]]>=a[i] && top!=-1)\n\t\t\t\ttop--;\n\t\t\tif(top==-1)\n\t\t\t\tl[i]=-1;\n\t\t\telse\n\t\t\t\tl[i]=st[top];\n\t\t\t\tst[++top]=i;\n\t\t}\n\t\ttop=-1;st[++top]=n-1;\n\t\tfor(i=n-2;i>=0;i--)\n\t\t{\n\t\t\twhile(a[st[top]]>=a[i] && top!=-1)\n\t\t\t\ttop--;\n\t\t\tif(top==-1)\n\t\t\t\tr[i]=n;\n\t\t\telse\n\t\t\t\tr[i]=st[top];\n\t\t\t\tst[++top]=i;\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t\tif(ans[r[i]-l[i]-1]<a[i])\n\t\t\t\tans[r[i]-l[i]-1]=a[i];\n\t\tfor(i=n-1;i>=0;i--)\n\t\t\tif(ans[i]<ans[i+1])\n\t\t\t\tans[i]=ans[i+1];\n\t\tfor(i=1;i<=n;i++)\n\t\t\tprintf(\"%I64d \",ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t=1;\n\t//scanf(\"%d\",&t);\n\twhile(t--)\n\t{long long int  st[200009],ans[200009];\n\t\tlong long int a[200009],top=-1,l[200009],r[200009],i,j,n;\n\t\tscanf(\"%I64d\",&n);\n\t\tfor(i=0;i<n;i++)\n\t\t\tscanf(\"%I64d\",&a[i]);\n\t\tst[++top]=0;ans[n]=0;l[0]=-1;r[n-1]=n;\n\t\tfor(i=1;i<n;i++)\n\t\t{ans[i]=0;\n\t\t\twhile(a[st[top]]>=a[i] && top!=-1)\n\t\t\t\ttop--;\n\t\t\tif(top==-1)\n\t\t\t\tl[i]=-1;\n\t\t\telse\n\t\t\t\tl[i]=st[top];\n\t\t\t\tst[++top]=i;\n\t\t}\n\t\ttop=-1;st[++top]=n-1;\n\t\tfor(i=n-2;i>=0;i--)\n\t\t{\n\t\t\twhile(a[st[top]]>=a[i] && top!=-1)\n\t\t\t\ttop--;\n\t\t\tif(top==-1)\n\t\t\t\tr[i]=n;\n\t\t\telse\n\t\t\t\tr[i]=st[top];\n\t\t\t\tst[++top]=i;\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t\tif(ans[r[i]-l[i]-1]<a[i])\n\t\t\t\tans[r[i]-l[i]-1]=a[i];\n\t\tfor(i=n-1;i>=0;i--)\n\t\t\tif(ans[i]<ans[i+1])\n\t\t\t\tans[i]=ans[i+1];\n\t\tfor(i=1;i<=n;i++)\n\t\t\tprintf(\"%I64d \",ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9920806335493161, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "c01c0af8aa68dc06f109371895b3a157", "bug_code_uid": "b68df67cd07c7ee2e56fdd8564184540", "src_uid": "68883ab115882de5cf77d0848b80b422", "apr_id": "17009223f8b4b06b0240295c06e46089", "difficulty": 1600, "tags": ["data structures", "constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint a[300005];\nint main(void) {\n\t\n\tint n,m,i=1,count=0,ans=0;\n\t\n\tscanf(\"%d %d\",&n,&m);\n\tgetchar();\n\twhile(i<=n)\n\t{\n\t\tchar c;\n\t\tscanf(\"%c\",&c);\n\t\tif(c=='.')\n\t\t{\n\t\t\ta[i]=0;\n\t\t\tcount++;\n\t\t}\n\t\telse{\n\t\t\ta[i]=1;\n\t\t\tif(count)\n\t\t\t{\n\t\t\tans+=count-1;\n\t\t\tcount=0;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t\t\n\t}\n\ta[0]=a[n+1]=2;\n\tans+=count-1;\n\t\n\twhile(m--)\n\t{\n\t\tchar c;\n\t\tint d;\n\t\tscanf(\"%d %c\",&d,&c);\n\t\tif(c=='.')\n\t\t{\n\t\t\tif(a[d]==1)\n\t\t\t{\n\t\t\t\ta[d]=0;\n\t\t\t\tif(a[d-1]==0&&a[d+1]==0) ans+=2;\n\t\t\t\telse if(a[d-1]==0||a[d+1]==0) ans+=1;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(a[d]==0)\n\t\t\t{\n\t\t\t\ta[d]=1;\n\t\t\t\tif(a[d-1]==0&&a[d+1]==0) ans-=2;\n\t\t\t\telse if(a[d-1]==0||a[d+1]==0) ans-=1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint a[300005];\nint main(void) {\n\t\n\tint n,m,i=1,count=0,ans=0;\n\t\n\tscanf(\"%d %d\",&n,&m);\n\tgetchar();\n\twhile(i<=n)\n\t{\n\t\tchar c;\n\t\tscanf(\"%c\",&c);\n\t\tif(c=='.')\n\t\t{\n\t\t\ta[i]=0;\n\t\t\tcount++;\n\t\t}\n\t\telse{\n\t\t\ta[i]=1;\n\t\t\tif(count)\n\t\t\t{\n\t\t\tans+=count-1;\n\t\t\tcount=0;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t\t\n\t}\n\ta[0]=a[n+1]=2;\n\tif(count)\n\tans+=count-1;\n\t\n\twhile(m--)\n\t{\n\t\tchar c;\n\t\tint d;\n\t\tscanf(\"%d %c\",&d,&c);\n\t\tif(c=='.')\n\t\t{\n\t\t\tif(a[d]==1)\n\t\t\t{\n\t\t\t\ta[d]=0;\n\t\t\t\tif(a[d-1]==0&&a[d+1]==0) ans+=2;\n\t\t\t\telse if(a[d-1]==0||a[d+1]==0) ans+=1;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(a[d]==0)\n\t\t\t{\n\t\t\t\ta[d]=1;\n\t\t\t\tif(a[d-1]==0&&a[d+1]==0) ans-=2;\n\t\t\t\telse if(a[d-1]==0||a[d+1]==0) ans-=1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9434589800443459, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "5ae46cd0b258fab4d4396d9db46a86d0", "bug_code_uid": "cec87c72122c863b98589672dc5d56fd", "src_uid": "10c9b2d70030f7ed680297455d1f1bb0", "apr_id": "7c94fd470c35b2a6979f617121b626d8", "difficulty": 1300, "tags": ["data structures", "constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int u,n,j,a[3000],c,i,m;\n    char t,s1[1003],s2[1003];\n\n    scanf(\"%d\",&u);\n\n    for( ; u ; u--)\n    {\n        scanf(\"%d%s%s\",&n,s1,s2);\n\n        for(m=n-1,t=s1[0],j=0,i=0,c=0; m>=0 ;m--)\n        {\n            //printf(\"%c\\n\",t);\n            if(m==0&&t!=s2[m])\n                a[j++]=1;\n            else if(m>0)\n            {\n                if(t!=s2[m])\n                    a[j++]=m+1;\n                else\n                    {a[j++]=1;a[j++]=m+1;}\n                c++;\n                if(c%2)\n                {\n                    if(s1[n-i]=='0')\n                        t='1';\n                    else\n                        t='0';\n                    i++;\n                }\n                else\n                    t=s1[i];\n            }\n        }\n        printf(\"%d \",j);\n        for(m=0;m<j;m++)\n            printf(\"%d \",a[m]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int u,n,j,a[3000],c,i,m;\n    char t,s1[1003],s2[1003];\n\n    scanf(\"%d\",&u);\n\n    for( ; u ; u--)\n    {\n        scanf(\"%d%s%s\",&n,s1,s2);\n\n        for(n--,m=n,t=s1[0],j=0,i=0,c=0; m>=0 ;m--)\n        {\n            if(m==0&&t!=s2[m])\n                a[j++]=1;\n            else if(m>0)\n            {\n                if(t!=s2[m])\n                    a[j++]=m+1;\n                else\n                    {a[j++]=1;a[j++]=m+1;}\n                c++;\n                if(c%2)\n                {\n                    if(s1[n-i]=='0')\n                        t='1';\n                    else\n                        t='0';\n                    i++;\n                }\n                else\n                    t=s1[i];\n            }\n        }\n        printf(\"%d \",j);\n        for(m=0;m<j;m++)\n            printf(\"%d \",a[m]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.917221693625119, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2c5afe557d9a05ee45c7a650a1749249", "bug_code_uid": "88a1619254b921d678ff465180b36040", "src_uid": "e32f0615541d97a025bc99c3cbf5380e", "apr_id": "832cc971b3e4e033eb5798f94c66f565", "difficulty": 1300, "tags": ["combinatorics", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t    int n,k,s,f;\n\t    long long b;\n\t    scanf(\"%d%d\", &n,&k);\n\t    b=(n*(n-1))/2;\n\t    s=k;\n\t    for(int i=1;i<b;i++){\n\t       s-=i;\n\t       if(s<=0){\n\t           f=i;\n\t          break;\n\t       }\n\t    }\n\t    char a[100000];\n\t    for(int i=0; i<n; i++){\n\t        a[i]='a';\n\t    }\n\t    a[n]=0;\n\t    a[n-1-f]='b';\n\t    a[n-f-s]='b';\n\t    for(int i=0; i<strlen(a); i++){\n\t        printf(\"%c\", a[i]);\n\t       \n\t    }\n\t     printf(\"\\n\");\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--){\n\t    int s,f;\n\t    long long int n,k,b;\n\t    scanf(\"%ld%ld\", &n,&k);\n\t    b=(n*(n-1))/2;\n\t    s=k;\n\t    for(int i=1;i<b;i++){\n\t       s-=i;\n\t       if(s<=0){\n\t           f=i;\n\t          break;\n\t       }\n\t    }\n\t    char a[1000000];\n\t    for(int i=0; i<n; i++){\n\t        a[i]='a';\n\t    }\n\t    a[n]=0;\n\t    a[n-1-f]='b';\n\t    a[n-f-s]='b';\n\t    for(int i=0; i<n; i++){\n\t        printf(\"%c\", a[i]);\n\t       \n\t    }\n\t     printf(\"\\n\");\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.9792843691148776, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a388fcc788d7f08e787152360985e21e", "bug_code_uid": "7dcba219a41490cfeb37b558624fedee", "src_uid": "c63640fd70e0268f03cb4eec18540f3a", "apr_id": "1bb5444c6512a06388c5e2165ef8b12b", "difficulty": 1100, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <iostream>\n#define r(x) scanf(\"%d\",x)\nint main(){int t,n,x,i;r(&t);while(t--){scanf(\"%d\",&n);\n    int dp[100001]={0},p[100001]={0};\n    for(i=1;i<=n;i++){r(&x);if((i-p[x])%2||p[x]==0)dp[x]++;p[x]=i;}\n    for(i=1;i<=n;i++)printf(\"%d \",dp[i]);putchar('\\n');}}", "fixed": "#include <stdio.h>\n#define r(x) scanf(\"%d\",x)\nint main(){int t,n,x,i;r(&t);while(t--){scanf(\"%d\",&n);\n    int dp[100001]={0},p[100001]={0};\n    for(i=1;i<=n;i++){r(&x);if((i-p[x])%2||p[x]==0)dp[x]++;p[x]=i;}\n    for(i=1;i<=n;i++)printf(\"%d \",dp[i]);putchar('\\n');}}"}
{"similarity_score": 0.9606126914660832, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "b0222bae9f65971df8c53b6521247d9d", "bug_code_uid": "c4b4d95908fafbe9d84b179ddf5a3905", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "5cf954de5ac4de860b16fe7dfae29fe4", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,a,b,j=1,count=0;\n        char i;\n         scanf(\"%d %d %d\",&n,&a,&b);\n\n        while(count<n)\n             {\n                 j=1;\n        while(j<=b)\n                 {\n\n                 printf(\"%c\",j+96);\n                 j++;\n                 count++;\n                 if(count==n)\n                    break;\n             }\n\n    }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,a,b,j=1,count=0;\n        char i;\n         scanf(\"%d %d %d\",&n,&a,&b);\n\n        while(count<n)\n             {\n                 \n                 j=1;\n        while(j<=b)\n                 {\n\n                 printf(\"%c\",j+96);\n                 j++;\n                 count++;\n                 if(count==n)\n                    break;\n             }\n\n    }\n    printf(\"\\n\");\n    }\n}\n"}
{"similarity_score": 0.7111111111111111, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "73b5aa6e745ebe1bb39be77be77d2991", "bug_code_uid": "0c2f848587602a7b2ab3de99893dd419", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "3195904453b0ec28e9b3542a88364ace", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long long int n,i,m,t,p,q;\n    scanf(\"%lld\",&t);\n    for(i=1;i<=t;i=i+1)\n    {\n        scanf(\"%lld %lld\",&n,&m);\n        if(n>4 || n==3)\n        {\n            printf(\"%lld\\n\",(2*m));\n        }\n        else if(n==2)\n        {\n            printf(\"%lld\\n\",m);\n        }\n        else if(n==1)\n        {\n            printf(\"0\\n\");\n        }\n        else\n        {\n            if(m%2==0)\n            {\n                p=m/2;\n                printf(\"%lld\\n\",(3*p));\n            }\n            else\n            {\n                p=m/2;\n                q=(m/2)+1;\n                printf(\"%lld\\n\",(q+q+p));\n            }\n        }\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    long long int n,i,m,t,p,q;\n    scanf(\"%lld\",&t);\n    for(i=1;i<=t;i=i+1)\n    {\n        scanf(\"%lld %lld\",&n,&m);\n        if(n>=3)\n        {\n            printf(\"%lld\\n\",(2*m));\n        }\n        else if(n==2)\n        {\n            printf(\"%lld\\n\",m);\n        }\n        else if(n==1)\n        {\n            printf(\"0\\n\");\n        }\n    }\n}\n\n"}
{"similarity_score": 0.9943560800410467, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2ed7711df7915d009745967aa532f231", "bug_code_uid": "f2122beac42f41ebe6154fcc4a5504a6", "src_uid": "7e15bb1d6040d786983865143d1799cd", "apr_id": "eab2b05b150053a077e1dfc2ae9fc194", "difficulty": 1000, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <ctype.h>\n\n// program by Mircea Rebengiuc\n// written for codeforces round edu113\n// written on 2021.09.09\n\n#define MAXN 50\n\nchar matrix[MAXN][MAXN];\nint ones[MAXN];\n\nint main(){\n  int t, n, i, j, n1;\n\n  for( scanf(\"%d\", &t) ; t-- ; ){\n    scanf(\"%d \", &n);\n\n    // initial matrix\n    for( i = 0 ; i < n ; i++ )\n      for( j = 0 ; j < n ; j++ )\n        matrix[i][j] = '=';\n    for( i = 0 ; i < n ; i++ )\n      matrix[i][i] = 'X';\n\n    // get \"ones\"\n    n1 = 0;\n    for( i = 0 ; i < n ; i++ )\n      if( fgetc(stdin) == '2' )\n        ones[n1++] = i;\n\n    if( n1 == 1 ){\n      printf(\"NO\\n\");\n    }else{\n      printf(\"YES\\n\");\n      for( i = 0 ; i < n1 ; i++ ){\n        matrix[ones[i]][ones[(i + 1) % n1]] = '+';\n        matrix[ones[(i + 1) % n1]][ones[i]] = '-';\n      }\n\n      for( i = 0 ; i < n ; i++ ){\n        for( j = 0 ; j < n ; j++ )\n          fputc(matrix[i][j], stdout);\n        fputc('\\n', stdout);\n      }\n    }\n  }\n  \n  return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <ctype.h>\n\n// program by Mircea Rebengiuc\n// written for codeforces round edu113\n// written on 2021.09.09\n\n#define MAXN 50\n\nchar matrix[MAXN][MAXN];\nint ones[MAXN];\n\nint main(){\n  int t, n, i, j, n1;\n\n  for( scanf(\"%d\", &t) ; t-- ; ){\n    scanf(\"%d \", &n);\n\n    // initial matrix\n    for( i = 0 ; i < n ; i++ )\n      for( j = 0 ; j < n ; j++ )\n        matrix[i][j] = '=';\n    for( i = 0 ; i < n ; i++ )\n      matrix[i][i] = 'X';\n\n    // get \"ones\"\n    n1 = 0;\n    for( i = 0 ; i < n ; i++ )\n      if( fgetc(stdin) == '2' )\n        ones[n1++] = i;\n\n    if( n1 == 1 || n1 == 2 ){\n      printf(\"NO\\n\");\n    }else{\n      printf(\"YES\\n\");\n      for( i = 0 ; i < n1 ; i++ ){\n        matrix[ones[i]][ones[(i + 1) % n1]] = '+';\n        matrix[ones[(i + 1) % n1]][ones[i]] = '-';\n      }\n\n      for( i = 0 ; i < n ; i++ ){\n        for( j = 0 ; j < n ; j++ )\n          fputc(matrix[i][j], stdout);\n        fputc('\\n', stdout);\n      }\n    }\n  }\n  \n  return 0;\n}\n"}
{"similarity_score": 0.9746543778801844, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a6391a2da379d1d665d4b95bb1d8b0bc", "bug_code_uid": "40811e63bff74fd2f33d99a44126f6c8", "src_uid": "8ea24f3339b2ec67a769243dc68a47b2", "apr_id": "ac5dc35c2ca50f0f67d4f4b2848c5e49", "difficulty": 1000, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int x[100],y[100],z[100],i,n,sumx=0,sumy=0,sumz=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x[i]);\n        scanf(\"%d\",&y[i]);\n        scanf(\"%d\",&z[i]);\n        sumx=sumx+x[i];\n        sumy=sumy+y[i];\n        sumz=sumz+z[i];\n    }\n    if(sumx+sumy+sumz==0)\n    {\n        printf(\"YES\");\n    }\n       else\n            printf(\"NO\");\n\n    return 0;\n}", "fixed": "\n#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int x[100],y[100],z[100],i,n,sumx=0,sumy=0,sumz=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&x[i]);\n        scanf(\"%d\",&y[i]);\n        scanf(\"%d\",&z[i]);\n        sumx=sumx+x[i];\n        sumy=sumy+y[i];\n        sumz=sumz+z[i];\n    }\n    if(sumx==0&&sumy==0&&sumz==0)\n    {\n        printf(\"YES\");\n    }\n       else\n            printf(\"NO\");\n\n    return 0;\n}\n"}
{"similarity_score": 0.6766917293233082, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "54cfc9c74f33ee98a320ddc055d9ee65", "bug_code_uid": "9679577a6b3503e3525d07b740e9a153", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "9c3888929e2ac50e59459959d7841095", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    static int a[1000000];\n    a[2]=1;a[3]=1;a[5]=1;a[7]=1;\n    int temp[4]={2,3,5,7};\n    int n;\n    scanf(\"%d\",&n);\n    for (int i=2;i<1000000;i++)\n    {\n        for (int j=0;j<4;j++)\n        {\n            if (i%temp[j]==0)\n            {\n                a[i]=0;\n                break;\n            }\n            else\n            {\n                a[i]=1;\n            }\n        }\n        a[2]=1;a[3]=1;a[5]=1;a[7]=1;\n    }\n    int b[100000],x=0,c[100000],y=0;\n    for (int i=2;i<n;i++)\n    {\n        for (int j=2;j<n;j++)\n        {\n            if (i+j==n && a[i]==0 && a[j]==0)\n                {\n                   b[x]=i;\n                   x++;\n                   c[y]=j;\n                   y++;\n                }\n        }\n    }\n    for (int i=0;i<x;i++)\n    {\n        printf(\"%d \",b[i]);break;\n    }\n    printf(\"\\n\");\n    for (int i=0;i<y;i++)\n    {\n        printf(\"%d \",c[i]);break;\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    static int a[1000000];\n    a[2]=1;a[3]=1;a[5]=1;a[7]=1;\n    int temp[4]={2,3,5,7};\n    int n;\n    scanf(\"%d\",&n);\n    for (int i=2;i<1000000;i++)\n    {\n        for (int j=0;j<4;j++)\n        {\n            if (i%temp[j]==0)\n            {\n                a[i]=0;\n                break;\n            }\n            else\n            {\n                a[i]=1;\n            }\n        }\n        a[2]=1;a[3]=1;a[5]=1;a[7]=1;\n    }\n    int kq=0;\n    for (int i=2;i<n;i++)\n    {\n        if (a[i]==0)\n        {\n            kq=n-i;\n            if (a[kq]==0)\n            {\n                printf(\"%d %d\\n\",i,kq);break;\n            }\n        }\n    }\n}\n"}
{"similarity_score": 0.9790874524714829, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ab1bcd9e7f10f47e74eb41468d042cc1", "bug_code_uid": "98d00684df9b46694843e639abb2ae57", "src_uid": "f3cf7726739290b280230b562cac7a74", "apr_id": "e5a0fb11ca8a851c0ac6aae53462db22", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main(void) {\n    int x = 0, input;\n    char *op = malloc(4 * sizeof(char));\n    \n    scanf(\"%d\", input);\n    \n    for(int i = 0; i < input; i++) {\n        scanf(\"%s\", op);\n        \n        if(strcmp(op, \"X++\") == 0) {\n            x++;\n        } else if(strcmp(op, \"++X\") == 0) {\n            ++x;\n        } else if(strcmp(op, \"X--\") == 0) {\n            x--;\n        } else if(strcmp(op, \"--X\") == 0) {\n            --x;\n        }\n    \n    }\n    \n    printf(\"%d\", x);\n    \n}", "fixed": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n \nint main(void) {\n    int x = 0, input;\n    char *op = malloc(4 * sizeof(char));\n    \n    scanf(\"%d\", &input);\n    \n    for(int i = 0; i < input; i++) {\n        scanf(\"%s\", op);\n        \n        if(strcmp(op, \"X++\") == 0) {\n            x++;\n        } else if(strcmp(op, \"++X\") == 0) {\n            ++x;\n        } else if(strcmp(op, \"X--\") == 0) {\n            x--;\n        } else if(strcmp(op, \"--X\") == 0) {\n            --x;\n        }\n    \n    }\n    \n    printf(\"%d\", x);\n    \n}"}
{"similarity_score": 0.9409448818897638, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "bed8cf6d7b8c8ab0e436d93463b9f76e", "bug_code_uid": "ea620a90f7788cd822103528d23f4a7a", "src_uid": "f10aa45956e930df3df0e23f2592c8f1", "apr_id": "705e926175a18e3c3803503913cc5e6d", "difficulty": 1000, "tags": ["constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main(){\r\n\r\nint t;\r\n\r\nscanf(\"%d\",&t);\r\n\r\nfor (int i=0; i<t; i++) {\r\n\r\nlong a,b;\r\n\r\nscanf(\"%ld%ld\",&a,&b);\r\n\r\nif (b<=1){ printf(\"NO\\n\");\r\n\r\n}\r\n\r\nelse {\r\n\r\nprintf(\"YES\\n%ld %ld %ld\\n\",a,a*b, a* (b+1));\r\n\r\n} }\r\n\r\nreturn 0;\r\n\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main(){\r\n\r\nint t;\r\n\r\nscanf(\"%d\",&t);\r\n\r\nfor (int i=0; i<t; i++) {\r\n\r\nlong long a,b;\r\n\r\nscanf(\"%lld%lld\",&a,&b);\r\n\r\nif (b==1){ printf(\"NO\\n\");\r\n\r\n}\r\n\r\nelse {\r\n\r\nprintf(\"YES\\n%lld %lld %lld\\n\",a,a*b, a* (b+1));\r\n\r\n} }\r\n\r\nreturn 0;\r\n\r\n}"}
{"similarity_score": 0.8778424114225277, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ae6bbade7f48b216bd7f6dd3f042d7a6", "bug_code_uid": "0d76cd92f3d2988c9d2af2fc30da44ab", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "06467b21a91b586a4fa9d6062bba6954", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\nint odd(int arr[], int n){\r\n    int m=0; \r\n    for (int i=0; i<n; i++){\r\n        if (arr[i]%2!=0){\r\n            m+=1;\r\n        }\r\n    }\r\n    return m;\r\n}\r\nint even(int arr[], int n){\r\n    int w=0; \r\n    for (int i=0; i<n; i++){\r\n        if (arr[i]%2==0){\r\n            w+=1;\r\n        }\r\n    }\r\n    return w;\r\n}\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int k[n];\r\n    for (int i=0; i<n; i++){\r\n        int c=0;\r\n        int a;\r\n        scanf(\"%d\",&a);\r\n        int arr[a];\r\n        for (int j=0; j<a; j++){\r\n            scanf(\"%d\",&arr[j]);\r\n        }\r\n        if (odd(arr,a)==1){\r\n            k[i]=1;\r\n        }\r\n        else if(even(arr,a)==1){\r\n            k[i]=1;\r\n        }\r\n        else{\r\n            for (int k=0; k<a-1; k++){\r\n            if ((arr[k]+arr[k+1])%2!=0){\r\n                c+=1;\r\n            }\r\n        }\r\n        k[i]=c;\r\n        }\r\n        \r\n    }\r\n    for(int i=0; i<n; i++){\r\n        printf(\"%d\\n\",k[i]);\r\n    }\r\n    return 0;\r\n}", "fixed": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\nint odd(int arr[], int n){\r\n    int m=0; \r\n    for (int i=0; i<n; i++){\r\n        if (arr[i]%2!=0){\r\n            m+=1;\r\n        }\r\n    }\r\n    return m;\r\n}\r\nint even(int arr[], int n){\r\n    int w=0; \r\n    for (int i=0; i<n; i++){\r\n        if (arr[i]%2==0){\r\n            w+=1;\r\n        }\r\n    }\r\n    return w;\r\n}\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int k[n];\r\n    for (int i=0; i<n; i++){\r\n        int c=0;\r\n        int a;\r\n        scanf(\"%d\",&a);\r\n        int arr[a];\r\n        for (int j=0; j<a; j++){\r\n            scanf(\"%d\",&arr[j]);\r\n        }\r\n        if (odd(arr,a)>even(arr,a)){\r\n            k[i]=even(arr,a);\r\n        }\r\n        else{\r\n            k[i]=odd(arr,a);\r\n        }\r\n        \r\n    }\r\n    for(int i=0; i<n; i++){\r\n        printf(\"%d\\n\",k[i]);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.3961218836565097, "equal_cnt": 16, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "4e422cb9db233913bed512e1ca847307", "bug_code_uid": "a6cbb1fc4ec97c3c7ea7874bfce99a71", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "7cc9730a765912ecc79a3e13197a29ee", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char words[105];\n    int cases, i, length;\n\n    scanf(\"%d\",&cases);\n    while(cases--)\n    {\n        fflush(stdin);\n        gets(words);\n        if(strlen(words) > 10)\n            printf(\"%c%d%c\", words[0], strlen(words)-2, words[strlen(words)-1]);\n        else\n            printf(\"%s\",words);\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint\nmain()\n{\n\n  int cases, casenum, length;\n  char str[101];\n\n  scanf(\"%d\",&cases);\n  casenum = 0;\n\n  while (casenum < cases){\n\tscanf(\"%s\", str);\n\tlength = strlen(str);\n\n\tif(length > 10){\n\t  printf(\"%c%d%c\\n\",str[0],length-2,str[length-1]);\n\t}\n\telse{\n\t  printf(\"%s\\n\", str);\n\t}\n\tcasenum++;\n  }\n  return 0;\n}\n"}
{"similarity_score": 0.9948453608247423, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "25664ab965008f5591add9ade2eb1e9e", "bug_code_uid": "144e4756d034d449c62c15d8b5db7586", "src_uid": "178876bfe161ba9ccfd80c9310f75cbc", "apr_id": "a69796fbf02805f31cda42b66571de92", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\n\tint a,b;\n\tscanf(\"%d\",&a);\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tscanf(\"%d\\n\",&b);\n\t\tif (b==2)\n\t\tprintf(\"2\");\n\t\telse if (b==3)\n\t\tprintf(\"1\\n\");\n\t\telse\n\t\tprintf(\"%d\\n\",b%2);\n\t}\n}", "fixed": "#include<stdio.h>\nmain()\n{\n\tint a,b;\n\tscanf(\"%d\",&a);\n\tfor(int i=0;i<a;i++)\n\t{\n\t\tscanf(\"%d\\n\",&b);\n\t\tif (b==2)\n\t\tprintf(\"2\\n\");\n\t\telse if (b==3)\n\t\tprintf(\"1\\n\");\n\t\telse\n\t\tprintf(\"%d\\n\",b%2);\n\t}\n}"}
{"similarity_score": 0.9226519337016574, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "a2c6b097dfbb5b658eaeb46e03400f9c", "bug_code_uid": "0ee36b46b082a0c8473d08d0eb3ca76a", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "ceff276624730ca087ec6b0e57282b54", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(void)\n{\n    int n,i;\n    char s[100];\n    scanf(\"%d\\n\",&n);\n    for(i=1;i<=n;i++)\n    {\n        printf(\"I hate \");\n        if(i==n){printf(\"it\");\n        break;}\n        else{printf(\"that \");}\n        if(i<=n){printf(\"I love \");}\n        if(i==n){printf(\"it\");\n        break;}\n        else{printf(\"that \");}\n\n    }\n}\n", "fixed": "#include<stdio.h>\nint main(void)\n{\n    int n,i;\n    char s[100];\n    scanf(\"%d\\n\",&n);\n    for(i=1;i<=n;i++)\n    {\n        if(i%2!=0){\n        printf(\"I hate \");\n        if(i==n){printf(\"it\");\n        break;}\n        else{printf(\"that \");}}\n        else{\n        if(i<=n){printf(\"I love \");}\n        if(i==n){printf(\"it\");\n        break;}\n        else{printf(\"that \");}}\n\n    }\n}\n"}
{"similarity_score": 0.9619377162629758, "equal_cnt": 8, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "98f004873405fd1029878af5af08aa4d", "bug_code_uid": "d22b26a008eb5945517827426b4ea9ba", "src_uid": "1d9d34dca11a787d6e2345494680e717", "apr_id": "ca3516761439568edc8676294b251783", "difficulty": 800, "tags": ["dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n, a[1111111], i, t, count1, count2, count12;\n    \n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &n);\n        count1=0;\n        count2=0;\n        count12=0;\n      //  countnumber=0;\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\", &a[i]);\n            if(a[i]==1)\n                count1++;\n            else if(a[i]==2)\n            {\n                count2++;\n                count12+=2;\n            }\n        }\n        \n        if(count1%2!=0)\n            printf(\"NO\\n\");\n      \n        else if(count1%2==0)\n        {\n            if(count2%2==0)\n            {\n                printf(\"YES\\n\");\n            }\n            else if((count12<count1))\n                printf(\"YES\\n\");\n            else if( (count2+1)/2==count1/2 )\n                printf(\"YES\\n\");\n            else if(count1%4==0 && count1!=0)\n                printf(\"YES\\n\");\n            else\n                printf(\"NO\\n\");\n        }\n     \n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n, a[1111111], i, t, count1, count2, count12;\n    \n    scanf(\"%d\", &t);\n    while(t--)\n    {\n        scanf(\"%d\", &n);\n        count1=0;\n        count2=0;\n        count12=0;\n      //  countnumber=0;\n        for(i=0; i<n; i++)\n        {\n            scanf(\"%d\", &a[i]);\n            if(a[i]==1)\n                count1++;\n            else if(a[i]==2)\n            {\n                count2++;\n                count12+=2;\n            }\n        }\n        \n        if(count1%2!=0)\n            printf(\"NO\\n\");\n   \n        else if(count1%2==0)\n        {\n            if(count2%2==0)\n            {\n                printf(\"YES\\n\");\n            }\n          \n            else if((count12<count1))\n                printf(\"YES\\n\");\n           \n            else if( (count12+count1)%4==0 )\n                printf(\"YES\\n\");\n           \n            else if(count1%4==0 && count1!=0)\n                printf(\"YES\\n\");\n           \n            else\n                printf(\"NO\\n\");\n        }\n     \n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9980952380952381, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "60a32b2c6edbb83aff4facd85ef9755b", "bug_code_uid": "632fcc60762cd6b93171d99866b5906d", "src_uid": "b8d8f0e86ecb600f7559a6aec629946e", "apr_id": "2d78c0c6413e99b80ccc211cd06db495", "difficulty": 1300, "tags": [], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,t,array[101],temp,count=0;\n    scanf(\"%d %d\",&n,&t);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n-1;j++)\n        {\n            if(array[j]<array[j+1])\n            {\n                temp=array[j+1];\n                array[j+1]=array[j];\n                array[j]=temp;\n            }\n        }\n    }\n\n    for(i=0;i<n;i=i+t)\n    {\n        count=count+(2*array[i]-2);\n\n    }\n\n    printf(\"%d\\n\",count);\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,t,array[10001],temp,count=0;\n    scanf(\"%d %d\",&n,&t);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&array[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n-1;j++)\n        {\n            if(array[j]<array[j+1])\n            {\n                temp=array[j+1];\n                array[j+1]=array[j];\n                array[j]=temp;\n            }\n        }\n    }\n\n    for(i=0;i<n;i=i+t)\n    {\n        count=count+(2*array[i]-2);\n\n    }\n\n    printf(\"%d\\n\",count);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9725888324873097, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "8169b359de63b3697fe07f760eb0366f", "bug_code_uid": "67ddcca2f69f91938d0c1a207658fbcb", "src_uid": "77b5bed410d621fb56c2eaebccff5108", "apr_id": "d7105beb55c6b167da2bc1eed9ddac2f", "difficulty": 1600, "tags": ["greedy", "math", "implementation", "binary search", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(){\n    \nint n,m,i,aux,aux1,x,y,pos=1,max=0;\nscanf(\"%d %d\",&n,&m);\nscanf(\"%d %d\",&aux,&aux1);\nmax=aux1+aux-1;\nfor(i=1;i<m;i++){\n    scanf(\"%d %d\",&x,&y);\n    if(x-aux<abs(aux1-y)){\n        pos=0;\n        break;\n    }\n    if((x-aux+y+aux1-1)/2>max)\n    max=(x-aux+y+aux1-1)/2;\n    if(y>max)\n    max=y;\n    aux=x;\n    aux1=y;\n}\nif(max<aux1+n-aux)\nmax=aux1+n-aux;\nif(pos==0)\n    printf(\"IMPOSSIBLE\");\nif(pos==1)\nprintf(\"%d\",max);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(){\n    \nint n,m,i,aux,aux1,x,y,pos=1,max=0;\nscanf(\"%d %d\",&n,&m);\nscanf(\"%d %d\",&aux,&aux1);\nmax=aux1+aux-1;\nif(max<aux1)\nmax=aux1;\nfor(i=1;i<m;i++){\n    scanf(\"%d %d\",&x,&y);\n    if(x-aux<abs(aux1-y)){\n        pos=0;\n        break;\n    }\n    if((x-aux+y+aux1)/2>max)\n    max=(x-aux+y+aux1)/2;\n    if(y>max)\n    max=y;\n    aux=x;\n    aux1=y;\n}\nif(max<aux1+n-aux)\nmax=aux1+n-aux;\nif(pos==0)\n    printf(\"IMPOSSIBLE\");\nif(pos==1)\nprintf(\"%d\",max);\nreturn 0;\n}"}
{"similarity_score": 0.9970674486803519, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "9785ce33e58566b10db0c5107f7a0a09", "bug_code_uid": "f0abf60a9cfd75d69d97567c2d4a0ca0", "src_uid": "915b4776a6b1fa15886247eb1ad40b60", "apr_id": "3ba7125a436accd8a0ffbcd65642205f", "difficulty": 1300, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar inp[500002];\n\nvoid no()\n{\n    printf(\"-1\");\n    exit(0);\n}\n\nint main()\n{\n    int i,j,k,a,b,c,len;\n    int count=0;\n\n    scanf(\"%s\", inp);\n\n    len=strlen(inp);\n    for(i=0;inp[i]!=91 && i<len;i++)\n        count++;\n\n    if(i==len)\n        no();\n\n    for(j=strlen(inp)-1; j>i && inp[j]!=93; j--)\n        count++;\n\n    if(j<=i)\n        no();\n\n    for(i++;inp[i]!=58 && i<j;i++)\n        count++;\n\n    if(i==j)\n        no();\n\n    for(j--; j>i && inp[j]!=58; j--)\n        count++;\n\n    if(j<=i)\n        no();\n\n    for(i++;i<j;i++)\n        if(inp[i]!=124)\n            count++;\n\n    printf(\"%d\\n\", count);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar inp[500002];\n\nvoid no()\n{\n    printf(\"-1\");\n    exit(0);\n}\n\nint main()\n{\n    int i,j,k,a,b,c,len;\n    int count=0;\n\n    scanf(\"%s\", inp);\n\n    len=strlen(inp);\n    for(i=0;inp[i]!=91 && i<len;i++)\n        count++;\n\n    if(i==len)\n        no();\n\n    for(j=strlen(inp)-1; j>i && inp[j]!=93; j--)\n        count++;\n\n    if(j<=i)\n        no();\n\n    for(i++;inp[i]!=58 && i<j;i++)\n        count++;\n\n    if(i==j)\n        no();\n\n    for(j--; j>i && inp[j]!=58; j--)\n        count++;\n\n    if(j<=i)\n        no();\n\n    for(i++;i<j;i++)\n        if(inp[i]!=124)\n            count++;\n\n    printf(\"%d\\n\", len-count);\n\n    return 0;\n}\n"}
{"similarity_score": 0.8636859323882224, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "cafc9dc965d6769647cf650b80a7f8cd", "bug_code_uid": "b1dfd48db5256ee8125f29e347a67a04", "src_uid": "c1c9815e2274a1f147eab7bd8ee2d574", "apr_id": "bf530a087ae0383522247d9e968dc8df", "difficulty": 1500, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n, m, s, f, i, t[100001], l[100001], r[100001], neg;\n    scanf(\"%d %d %d %d\", &n, &m, &s, &f);\n    for(i=0; i<m; i++)\n        scanf(\"%d %d %d\", &t[i], &l[i], &r[i]);\n    int k=0;\n    if(s<f)\n        neg=1;\n    else if(s>f)\n        neg=-1;\n    for(i=1; i<=1000000000; i++)\n    {\n        if(t[k]<i)\n            k++;\n        if(t[k]==i)\n        {\n            if(s>=l[k] && s<=r[k])\n                printf(\"X\");\n            else if(s+neg>=l[k] && s+neg<=r[k])\n                printf(\"X\");\n            else\n            {\n                s=s+neg;\n                if(neg==1)\n                    printf(\"R\");\n                else\n                    printf(\"L\");\n                if(s==f)\n                    break;\n            }\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n, m, s, f, i, t[100001], l[100001], r[100001], neg;\n    scanf(\"%d %d %d %d\", &n, &m, &s, &f);\n    for(i=0; i<m; i++)\n        scanf(\"%d %d %d\", &t[i], &l[i], &r[i]);\n    int k=0;\n    if(s<f)\n        neg=1;\n    else if(s>f)\n        neg=-1;\n    for(i=1; i<=1000000000; i++)\n    {\n        if(t[k]<i)\n            k++;\n        if(t[k]==i)\n        {\n            //printf(\"t[k]=%d i=%d\\n\", t[k], i);\n            if(s>=l[k] && s<=r[k])\n                printf(\"X\");\n            else if(s+neg>=l[k] && s+neg<=r[k])\n                printf(\"X\");\n            else\n            {\n                s=s+neg;\n                if(neg==1)\n                    printf(\"R\");\n                else\n                    printf(\"L\");\n                if(s==f)\n                    break;\n            }\n        }\n        else\n        {\n            s=s+neg;\n            if(neg==1)\n            printf(\"R\");\n            else\n                printf(\"L\");\n            if(s==f)\n                break;\n        }\n        \n    }\n    return 0;\n}"}
{"similarity_score": 0.9903660886319846, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fc15dee444ff0fc356dc90dbddc79359", "bug_code_uid": "272256ab92577b6dbe3538cf952895f9", "src_uid": "a82f15c1b0ddcacc1de966be20cfc5a2", "apr_id": "534f834dac2e4fa7062499261c1891cb", "difficulty": 900, "tags": ["constructive algorithms"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint x,a,b,n,i;\n\tscanf(\"%d\",&x);\n\twhile (x--)\n\t{\n\t\tscanf(\"%d %d %d\",&n &a,&b);\n\t\twhile (n)\n\t\t{\n\t\t\tfor(i=0;i<b;i++)\n\t\t\t{\n\t\t\t\tif(n==0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tprintf(\"%c\",97+i);\n\t\t\t\tn--;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint x,a,b,n,i;\n\tscanf(\"%d\",&x);\n\twhile(x--)\n\t{\n\t\tscanf(\"%d %d %d\",&n,&a,&b);\n\t\twhile(n)\n\t\t{\n\t\t\tfor(i=0;i<b;i++)\n\t\t\t{\n\t\t\t\tif(n==0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tprintf(\"%c\",97+i);\n\t\t\t\tn--;\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9965457685664939, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "79ba6d917f57f15256b3c4a0dee849eb", "bug_code_uid": "7a317d0147bf7a319baaeefa011520ad", "src_uid": "204e75827b7016eb1f1fbe1d6b60b03d", "apr_id": "1195b1c25a45bbabbfc2b79590b17d32", "difficulty": 800, "tags": ["brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include \"stdio.h\"\r\n#define long long long\r\ninline long sum(long n) {\r\n    long rez = 0;\r\n    while (n) {\r\n        rez += n % 10;\r\n        n /= 10;\r\n    }\r\n    return rez;\r\n}\r\n\r\ninline long gcd(const long& a, const long& b) { return b ? gcd(b, a % b) : a; }\r\n\r\nvoid solve() {\r\n    long n; scanf(\"%lld\", &n);\r\n    for (long i = n; ; ++i) {\r\n        long t = gcd(i, sum(i));\r\n        if (t > 1) {\r\n            printf(\"%lld\", i);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nmain() {\r\n    int t; scanf(\"%d\", &t);\r\n    while (t--) {\r\n        solve();\r\n        putchar('\\n');\r\n    }\r\n}\r\n", "fixed": "#include \"stdio.h\"\r\n#define long long long\r\ninline long sum(long n) {\r\n    long rez = 0;\r\n    while (n) {\r\n        rez += n % 10;\r\n        n /= 10;\r\n    }\r\n    return rez;\r\n}\r\n\r\ninline long gcd(const long a, const long b) { return b ? gcd(b, a % b) : a; }\r\n\r\nvoid solve() {\r\n    long n; scanf(\"%lld\", &n);\r\n    for (long i = n; ; ++i) {\r\n        long t = gcd(i, sum(i));\r\n        if (t > 1) {\r\n            printf(\"%lld\", i);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nmain() {\r\n    int t; scanf(\"%d\", &t);\r\n    while (t--) {\r\n        solve();\r\n        putchar('\\n');\r\n    }\r\n}"}
{"similarity_score": 0.7838044308632544, "equal_cnt": 10, "replace_cnt": 9, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 9, "lang": "GNU C", "fix_code_uid": "a37b4865a8b1f3c67c5a302200cb5bc3", "bug_code_uid": "0608cab9d3c3433deb5df8cc8c0ffb17", "src_uid": "4849a1f65afe69aad12c010302465ccd", "apr_id": "5e618ee4294e4a1f002c47d6368cfa66", "difficulty": 1100, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(){\n\nint n,a,b,c,d,e,f,j=0,i=0;\n\n\nscanf(\"%d\", &n);\n\nfor (int i=0;i<n;i++){scanf(\"%d %d\",&a,&b);\n                        if(j==0){c=b;j++;}        \n                       if(b<=c)c=b;        \n\n                         }\nscanf(\"%d\", &n);                         \nfor (int i=0;i<n;i++){scanf(\"%d %d\",&e,&f);\n                                \n                       if(e>d)d=e;        \n\n                         } \nif(d<=c)printf(\"0\");                                                 \nelse printf(\"%d\", d-c);\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint max(int a,int b){if(a>b)return a;else return b;}\n\nint main(){\n\nint n,a,b,l1,h2=0,h1=0,l2,e,f,j=0,i=0;\n\n\nscanf(\"%d\", &n);\n\nfor (int i=0;i<n;i++){scanf(\"%d %d\",&a,&b);\n                        if(j==0){l1=b;j++;}        \n                       if(b<=l1)l1=b;  \n                       if(a>h2)h2=a;         \n\n                         }\nscanf(\"%d\", &n);                         \nfor (int i=0;i<n;i++){scanf(\"%d %d\",&e,&f);\n                       if(j==1){l2=f;j++;}        \n                       if(f<=l2)l2=f; \n                       if(e>h1)h1=e;        \n\n                         } \nif(l1>=h1 && l2>=h2)printf(\"0\");                                                 \nelse printf(\"%d\", max(-(l1-h1),-(l2-h2)));\n\n}\n"}
{"similarity_score": 0.17082640044370492, "equal_cnt": 30, "replace_cnt": 21, "delete_cnt": 1, "insert_cnt": 7, "fix_ops_cnt": 29, "lang": "GNU C11", "fix_code_uid": "00d076b2068c94a32c6d533f6de396fe", "bug_code_uid": "f9fa8fb7557996788f62ba7289cc499d", "src_uid": "55ffdab213ed5b00d2ff69f0f91c0c74", "apr_id": "455a4bd9bda554de42b1c65fe21bb267", "difficulty": 1800, "tags": ["constructive algorithms", "divide and conquer"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint x=1;\nvoid unsort(int a[],int low, int high,int k) {\n   int mid;\n   mid = (low + high) / 2;\n   if(low<high)\n   {\n       int temp=a[mid+1];\n       a[mid+1]=a[mid];\n       a[mid]=temp;\n   }\n   if(x<k) {\n       x+=2;\n      unsort(a,low, mid,k);\n      unsort(a,mid+1, high,k);\n   } else { \n      return;\n   }   \n}\nint main()\n{\n    int n,k;\n    scanf(\"%d %d\",&n,&k);\n    int a[n];\n    for(int i=0;i<n;i++)\n    a[i]=i+1;\n    if(k%2==0||k>2*n-1)\n    {\n        printf(\"-1\");\n        return 0;\n    }\n    else\n    {\n        if(k>2)\n        {\n            int mid=(n-1)/2;\n            int temp=a[mid];\n            a[mid]=a[mid+1];\n            a[mid+1]=temp;\n            x+=2;\n            unsort(a,0,mid,k);\n            unsort(a,mid+1,n-1,k);\n        }\n        \n    \n        for(int i=0;i<n;i++)\n        printf(\"%d \",a[i]);\n    }\n}", "fixed": "#include<stdio.h>\n\nint arr[100001] ;\n\nint n , k , total = 1 ;\n\n\n\nvoid reverseMerge( int start , int end ){\n    \n    if( total == k || start + 1 == end ) return ;\n    \n    \n    int mid = ( end + start ) / 2 ;\n    \n    \n    if( mid - 1 < start ) return ;\n    \n    \n    int temp = arr[mid] ;\n    \n    arr[mid] = arr[mid - 1] ;\n    \n    arr[mid - 1] = temp ;\n    \n    \n    total += 2 ;\n    \n    \n    reverseMerge( start , mid ) ;\n    \n    reverseMerge( mid , end ) ;\n}\n\n\n\nvoid solve(){\n    \n    scanf(\"%d %d\",&n,&k) ;\n    \n    \n    if( k % 2 == 0  ){\n        \n        printf(\"-1\\n\") ;\n        \n        return ;\n    }\n    \n    \n    for( int i = 0 ; i < n ; i++ )\n        \n        arr[i] = i + 1 ;\n    \n    \n    reverseMerge( 0 , n ) ;\n    \n    \n    if( total != k ){\n        \n        printf(\"-1\") ;\n        \n        return ;\n    }\n    \n    for( int i = 0 ; i < n ; i++ ) printf(\"%d \",arr[i]) ;\n}\n\n\nint main(){\n    \n    solve() ;\n    \n    return 0 ;\n}"}
{"similarity_score": 0.9980952380952381, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a0948a7cd0fdd07f7249ea2cbfd31c08", "bug_code_uid": "8016e6d91f3070b4920564b202267392", "src_uid": "03772bac6ed5bfe75bc0ad4d2eab56fd", "apr_id": "9c4a52afbbf01acf736b5884030bdc03", "difficulty": 1600, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n\tint m,t,r,w,count,sum=0,i;\n\tint candle[1000] ={0};\n\n\tscanf(\"%d%d%d\",&m,&t,&r);\n\tif( t+1 < r)\n\t\tsum = -1;\n\twhile( m-- ){\n\t\tscanf(\"%d\",&w);\n\t\tif( t+1 > r ){\n\t\t\tcount =0;\n\t\t\tfor( i = w-t; i<w && count < r;i++ ){\n\t\t\t\tif( candle[i+t] == 1 )\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif( count < r ){\n\t\t\t\tcount = r-count;\n\t\t\t\tsum += count;\n\t\t\t\ti=1;\n\t\t\t\twhile( count ){\n\t\t\t\t\tif( candle[ w - i+ t] == 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tcandle[w-i + t] = 1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n\tint m,t,r,w,count,sum=0,i;\n\tint candle[1000] ={0};\n\n\tscanf(\"%d%d%d\",&m,&t,&r);\n\tif( t < r)\n\t\tsum = -1;\n\twhile( m-- ){\n\t\tscanf(\"%d\",&w);\n\t\tif( t+1 > r ){\n\t\t\tcount =0;\n\t\t\tfor( i = w-t; i<w && count < r;i++ ){\n\t\t\t\tif( candle[i+t] == 1 )\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif( count < r ){\n\t\t\t\tcount = r-count;\n\t\t\t\tsum += count;\n\t\t\t\ti=1;\n\t\t\t\twhile( count ){\n\t\t\t\t\tif( candle[ w - i+ t] == 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tcandle[w-i + t] = 1;\n\t\t\t\t\t\tcount--;\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",sum);\n\treturn 0;\n}\n"}
{"similarity_score": 0.6435185185185185, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "84c2368cef6bea6f84fcda7fabe05bee", "bug_code_uid": "7528e403ecec7c2f343aee25fecb5942", "src_uid": "e22b10cdc33a165fbd73b45dc5fbedce", "apr_id": "403d39107106ae4ca4d5a68b84fe581c", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint a[300000],b[300000];\nint main(){\n    int n,i;\n    int max=0;\n    scanf(\"%d \",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n    }\n    a[0]=b[0];\n    for(i=1;i<n-1;i++)\n    {\n        a[i]=b[i]+a[i-1];\n        if(i<n-1)\n        {\n            if(a[i]>a[i-1])\n                max=a[i];\n        }\n    }\n    a[n-1]=max+b[n-1];\n    for(i=0;i<n;i++)\n    {\n        if(i==(n-1))\n            printf(\"%d\\n\",a[i]);\n        else\n            printf(\"%d \",a[i]);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint a[300000],b[300000];\nint main(){\n    int n,i;\n    int x=0;\n    scanf(\"%d \",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        b[i]+=x;\n        if(b[i]>x)\n        \tx=b[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(i==(n-1))\n            printf(\"%d\\n\",b[i]);\n        else\n            printf(\"%d \",b[i]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.9595959595959596, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a4cb36572c21f66d411b777a8b213bba", "bug_code_uid": "c715e28e3d039217b5188076ff824f69", "src_uid": "09236a3faa7fce573a4e5e758287040f", "apr_id": "906b313924a988d8e11690563c4fd796", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint i, t, j, n, k, l, A[2000];\nscanf(\"%d\", &t);\nfor(i = 0; i < t; i++)\n{\nfor(j = 1; j <= 1000; j++)\nA[j] = 0;\nscanf(\"%d\", &n);\nfor(j = 0; j < n; j++)\n{\nscanf(\"%d\", &l);\nA[k]++;\n}\nfor(j = 1000; j >= 1; j--)\nif(A[j] >= j)\n{\nprintf(\"%d\\n\", j);\nbreak;\n}\n}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint i, t, j, n, k, l, A[2000];\nscanf(\"%d\", &t);\nfor(i = 0; i < t; i++)\n{\nfor(j = 1; j <= 1000; j++)\nA[j] = 0;\nscanf(\"%d\", &n);\nfor(j = 0; j < n; j++)\n{\nscanf(\"%d\", &l);\nfor(k = l; k >= 1; k--)\nA[k]++;\n}\nfor(j = 1000; j >= 1; j--)\nif(A[j] >= j)\n{\nprintf(\"%d\\n\", j);\nbreak;\n}\n}\n}\n"}
{"similarity_score": 0.9980314960629921, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "92fc94fcf9ea05867093d054db0c6836", "bug_code_uid": "90f3d9256539bb6c80f7793f5f8f8180", "src_uid": "e6689123fefea251555e0e096f58f6d1", "apr_id": "29ce9ce1d00545fb414434446937d06c", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n , v1 , v2 , s = 0;\n    char str[25];\n    scanf(\"%d\" , &n);\n    for(v1 = 1;v1 <= n;v1++){\n        scanf(\"%s\" , str);\n        if(str[0] == 'T'){\n            s = s + 4;\n        }\n        else if(str[0] == 'C'){\n            s = s + 6;\n        }\n        else if(str[0] == 'o'){\n            s = s + 8;\n        }\n        else if(str[0] == 'D'){\n            s = s + 12;\n        }\n        else{\n            s = s + 20;\n        }\n    }\n    printf(\"%d\\n\" , s);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n    int n , v1 , v2 , s = 0;\n    char str[25];\n    scanf(\"%d\" , &n);\n    for(v1 = 1;v1 <= n;v1++){\n        scanf(\"%s\" , str);\n        if(str[0] == 'T'){\n            s = s + 4;\n        }\n        else if(str[0] == 'C'){\n            s = s + 6;\n        }\n        else if(str[0] == 'O'){\n            s = s + 8;\n        }\n        else if(str[0] == 'D'){\n            s = s + 12;\n        }\n        else{\n            s = s + 20;\n        }\n    }\n    printf(\"%d\\n\" , s);\n    return 0;\n}\n"}
{"similarity_score": 0.9555555555555556, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "97c6b641f704296e6149a1752b3e0d56", "bug_code_uid": "2c94161261ca2b288842cc3baaab7a1a", "src_uid": "c01fc2cb6efc7eef290be12015f8d920", "apr_id": "2792aec2c45dece5a50da2e6fc808b67", "difficulty": 1200, "tags": ["greedy", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,c,c1,j=0;\n\tscanf(\"%d\",&n);\n\tchar ch[n],str[n];\n\tint pos=n+1;\n\tscanf(\"%s\",ch);\n\tfor(int i=5;i<n-1;i++)\n\t{\n\t\tc=ch[i];\n\t\tc1=ch[i+1\n\t\t{\n\t\tpos=i;\n\t\tbreak;}];\n\t\tif(c>c1)\n\t}\n\tfor(int i=0;i<n;i++)\n\tif(i!=pos)\n\t{\n\t\tstr[j]=ch[i];\n\t\tj++;\n\t}\n\tstr[n-1]='\\0';\n\tprintf(\"%s\",str);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,c,c1,j=0;\n\tscanf(\"%d\",&n);\n\tchar ch[n],str[n];\n\tint pos=n+1;\n\tscanf(\"%s\",ch);\n\tfor(int i=0;i<n-1;i++)\n\t{\n\t\tc=ch[i];\n\t\tc1=ch[i+1];\n\t\tif(c>c1)\n\t\t{\n\t\tpos=i;\n\t\tbreak;}\n\t}\n\tfor(int i=0;i<n;i++)\n\tif(i!=pos)\n\t{\n\t\tstr[j]=ch[i];\n\t\tj++;\n\t}\n\tstr[n-1]='\\0';\n\tprintf(\"%s\",str);\n\treturn 0;\n}"}
{"similarity_score": 0.47244094488188976, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "136e337b5e57032de265d92830aa9fbd", "bug_code_uid": "60aa824aebb63d655ec94178f2588f18", "src_uid": "648ec67565c506c3e2ffd007ad44e8c3", "apr_id": "6e8267de8f38326c2efd534c42db33c0", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include<string.h>\r\n\r\n\r\nint main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  for(int i=0;i<t;i++){\r\n     int d;\r\n   scanf(\"%d\",&d);\r\n   int a=(1+d)*(1+2*d);\r\n   printf(\"%d\\n\",a);\r\n\r\n  }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include<string.h>\r\nint isprime(int a){\r\n    int flag=0;\r\n    for(int i=2;i<=a/2;i++){\r\n        if(a%i==0){\r\n            flag=1;\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return flag;\r\n}\r\n\r\nint main()\r\n{\r\n  int t;\r\n  scanf(\"%d\",&t);\r\n  for(int i=0;i<t;i++){\r\n     int d;\r\n   scanf(\"%d\",&d);\r\n   int x1,x2;\r\n   x1=1+d;\r\n   for(int i=0;;i++){\r\n\r\n      int f=isprime(x1);\r\n\r\n      if(f==0){\r\n\r\n    break;}\r\n\r\n        else {\r\n        x1++;}\r\n   }\r\n   x2=x1+d;\r\n      for(int i=0;;i++){\r\n      int f=isprime(x2);\r\n      if(f==0)\r\n        break;\r\n        else  x2++;\r\n   }\r\n   int a=x1*x2;\r\n\r\n   printf(\"%d\\n\",a);\r\n\r\n  }\r\n}\r\n"}
{"similarity_score": 0.9745331069609507, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "46c420d934403976758d4be36f9a2344", "bug_code_uid": "54169983b949512974583bd93a25f361", "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "apr_id": "570a2deab74cc6b3407649f3c4b23d00", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint i,n,m,a[104],ans;\nmain(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",a+i);\n\t\tint j,t;\n\t\tj=i;\n\t\twhile(j){\n\t\t\tif(a[j-1]>a[j]){\n\t\t\t\tt=a[j-1];a[j-1]=a[j];a[j]=t;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse break;}}\n\t\tfor(i=0;i<m;i++)\n\t\t\tif(a[i]<0)\n\t\t\t\tans+=a[i];\n\t\tprintf(\"%d\",ans);\n}\n\n", "fixed": "#include<stdio.h>\nint i,n,m,a[104],ans;\nmain(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",a+i);\n\t\tint j,t;\n\t\tj=i;\n\t\twhile(j){\n\t\t\tif(a[j-1]>a[j]){\n\t\t\t\tt=a[j-1];a[j-1]=a[j];a[j]=t;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse break;}}\n\t\tfor(i=0;i<m;i++)\n\t\t\tif(a[i]<0)\n\t\t\t\tans+=a[i];\n\t\tprintf(\"%d\",ans*-1);\n}\n\n"}
{"similarity_score": 0.8611111111111112, "equal_cnt": 15, "replace_cnt": 13, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "4c62a50bf01774016e78cd88884db894", "bug_code_uid": "0690747a3277edeced79a7c97990fea7", "src_uid": "98c08a3b5e5b5bb78804ff797ba24d87", "apr_id": "60f357a710a107fcfdb95532e47cb707", "difficulty": 1000, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t,i,j,k,a,b,c;\n\tchar w[200006];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%s\",w);\n\t\tk=strlen(w);\n\t\ta=0;\n\t\tfor(i=0;i<k;i++)\n\t\t{\n\t\t\tif(w[i]==w[i+1]&&w[i]!=\"?\")\n\t\t\ta=1;\n\t\t\tbreak;\n\t\t\telse if(w[i]==\"?\")\n\t\t\t{\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tif(w[i-1]!=\"a\"&&w[i+1]!=\"a\")\n\t\t\t\t\tw[i]=\"a\";\n\t\t\t\t\tif(w[i-1]!=\"b\"&&w[i+1]!=\"b\")\n\t\t\t\t\tw[i]=\"b\";\n\t\t\t\t\tif(w[i-1]!=\"c\"&&w[i+1]!=\"c\")\n\t\t\t\t\tw[i]=\"c\";\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tif(a==1)\n\t\tprintf(\"-1\\n\");\n\t\telse\n\t\tprintf(\"%s\\n\",w);\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint t,i,j,k,a,b,c;\n\tchar w[200006];\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%s\",w);\n\t\tk=strlen(w);\n\t\ta=0;\n\t\tfor(i=0;i<k;i++)\n\t\t{\n\t\t\tif(w[i]==w[i+1]&&w[i]!='?')\n\t\t\t{\n\t\t\t\n\t\t\ta=1;\n\t\t\tbreak;}\n\t\t\telse if(w[i]=='?')\n\t\t\t{\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tif(w[i-1]!='a'&&w[i+1]!='a')\n\t\t\t\t\tw[i]='a';\n\t\t\t\t\tif(w[i-1]!='b'&&w[i+1]!='b')\n\t\t\t\t\tw[i]='b';\n\t\t\t\t\tif(w[i-1]!='c'&&w[i+1]!='c')\n\t\t\t\t\tw[i]='c';\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tif(a==1)\n\t\tprintf(\"-1\\n\");\n\t\telse\n\t\tprintf(\"%s\\n\",w);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9973856209150327, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e9a6d2fd8911f9d070e3dd0e36912ebb", "bug_code_uid": "b62e48ba6f12c9c7e19fe7d8030df7b8", "src_uid": "2eb7234904b28b4793b7c482a2370092", "apr_id": "b8ab56b08c27307d96049c31e21f882f", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{int n,i,d,small1,large1,pos,pos1;\nint large,small,c;\n scanf(\"%d\",&n);\n    int a[100000];\n    for(int i=0;i<n;i++)\n     scanf(\"%d\",&a[i]);\n     \n    large1=a[0];\n    for(i=1;i<n;i++)\n     if(a[i]>large1)\n       {large1=a[i];\n       pos=i;\n       }\n       small1=a[0];\n     for(i=1;i<n;i++)\n      if(a[i]<small1)\n        {small1=a[i];\n        pos1=i;\n        }\n    large=0;\n    for(i=1;i<n;i++)\n    { if((a[i]>large)&&(i!=pos))\n       large=a[i];\n    } \n       small=1000000;\n     for(i=1;i<n;i++)\n     { if((a[i]<small)&&(i!=pos1))\n        small=a[i];\n     } \n     if(n>2)\n     {\n      c=large1-small;\n       d=large-small1;\n     }\n     else\n      c=d=0;\n      if(c<d)\n     printf(\"%d\",c);\n      else\n       printf(\"%d\",d);\n return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{int n,i,d,small1,large1,pos,pos1;\nint large,small,c;\n scanf(\"%d\",&n);\n    int a[100000];\n    for(int i=0;i<n;i++)\n     scanf(\"%d\",&a[i]);\n     \n    large1=a[0];\n    for(i=1;i<n;i++)\n     if(a[i]>large1)\n       {large1=a[i];\n       pos=i;\n       }\n       small1=a[0];\n     for(i=1;i<n;i++)\n      if(a[i]<small1)\n        {small1=a[i];\n        pos1=i;\n        }\n    large=0;\n    for(i=0;i<n;i++)\n    { if((a[i]>large)&&(i!=pos))\n       large=a[i];\n    } \n       small=1000000;\n     for(i=0;i<n;i++)\n     { if((a[i]<small)&&(i!=pos1))\n        small=a[i];\n     } \n     if(n>2)\n     {\n      c=large1-small;\n       d=large-small1;\n     }\n     else\n      c=d=0;\n      if(c<d)\n     printf(\"%d\",c);\n      else\n       printf(\"%d\",d);\n return 0;\n}"}
{"similarity_score": 0.8855721393034826, "equal_cnt": 13, "replace_cnt": 7, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "024badc6131e6dbe254f84f67d4d8cd7", "bug_code_uid": "8d813a5b2ebe91a45dfdaaa1c557e4d3", "src_uid": "3ef23f114be223255bd10131b2375b86", "apr_id": "b79b4b945b59a373d7fb6f79cb4cf762", "difficulty": 800, "tags": ["greedy", "games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\n#include<string.h>\nint main()\n{\n    int ch[100000];\n    char arr[1000000];\n    char kh[1000000];\n    int cp[400]= { 0 };\n    int a=0,b,c,d,e=0,g,i=0,tep=0,temp=0,j=0,k=0,l=0,m=0,n=0;\n    scanf(\"%d\",&a);\n\n    for(i=0; i<a; i++)\n    {\n        scanf(\"%d%d%d\",&b,&c,&d);\n        k=0;\n        for(j=1; j<=c; j++)\n        {\n            scanf(\"%d\",&e);\n            k+=e;\n        }\n        l=0;\n        for(j=1; j<=d; j++)\n        {\n            scanf(\"%d\",&g);\n            l+=g;\n        }\n     printf(k>l?\"YES\\n\":\"NO\\n\");\n\n    }\n\n\n   // printf(\"%s\\n\",kh);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n\n\n#include<string.h>\nint main()\n{\n    int ch[100000];\n    char arr[1000000];\n    char kh[1000000];\n    int cp[400];\n    int a=0,b,c,d,e=0,g,i=0,tep=0,temp=0,j=0,k=0,l=0,m=0,n=0;\n    scanf(\"%d\",&a);\n\n    for(i=0; i<a; i++)\n    {\n        scanf(\"%d%d%d\",&b,&c,&d);\n        k=0;l=0;\n     //   m=c>d?c:d;\n        \n        for(j=0; j<c; j++)\n        {\n            scanf(\"%d\",&g);\n          if(g==b)\n           k=1;\n        }\n        for(j=0;j<d;j++)\n        {\n         scanf(\"%d\",&e);\n         if(e==b)\n         l=1;\n        }\n     printf(k>l?\"YES\\n\":\"NO\\n\");\n\n    }\n\n\n   // printf(\"%s\\n\",kh);\n\n    return 0;\n}"}
{"similarity_score": 0.6487341772151899, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "27fd1adbce90839b0fcb49150526a772", "bug_code_uid": "578961d0a3dcf50a57cfe13e896748fa", "src_uid": "b18bbefd2a948da9dec1d6f27f219ed1", "apr_id": "81fcd54599ce2c8b8b328d99a0fd8fda", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(){\n    int N, a[100100];\n    scanf(\"%d\", &N);\n    int i;\n    for (i=0; i<N; i++) scanf(\"%d\", &a[i]);\n    i=0;\n    while (1){\n        if (a[i]==0) break;\n        int j;\n        for (j=0; j<N; j++) if (a[j]!=0) a[j]--;\n        i++;\n        if (i==N) i=0;\n    }\n    i%=N;if (i==N) i=0;\n\tprintf(\"%d\\n\",i+1);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(){\n    int N, a[100100];\n    scanf(\"%d\", &N);\n    int p = 0, i;\n    for (i=0; i<N; i++) scanf(\"%d\", &a[i]);\n    i=0;\n    while (1){\n        if(a[i]-p<=0) break;\n        i++;\n        if(i == N) i = 0;\n        p++;\n    }\n\tprintf(\"%d\\n\",i+1);\n    return 0;\n}"}
{"similarity_score": 0.9598788796366389, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "ffb822451c494b900623688d42485866", "bug_code_uid": "7db0642d39598b559d39b7df53e26e17", "src_uid": "bcdd7862b718d6bcc25c9aba8716d487", "apr_id": "b4011dab23ecabbbf47d677b3cbe38bc", "difficulty": 800, "tags": ["brute force", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,n,a,b,i,j,d[100],c[100],f[100];\n    char s[100];\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        scanf(\"%s\",&s);\n        d[i]=n;\n        f[i]=0;\n        for(j=0;j<n;j++)\n        {\n            if(s[j]=='8')\n            {\n                c[i]=j;\n                break;\n            }\n            else\n            {\n                f[i]++;\n            }\n        }\n    }\n    for(i=0;i<t;i++)\n    {\n        if((d[i]-c[i])>=11&&f[i]!=d[i])\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int t,n,a,b,i,j,d[100],c[100],f[100];\n    char s[101];\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        scanf(\"%s\",s);\n        d[i]=n;\n        f[i]=0;\n        for(j=0;j<n;j++)\n        {\n            if(s[j]=='8')\n            {\n                c[i]=j;\n                break;\n            }\n            else\n            {\n                f[i]++;\n            }\n        }\n    }\n    for(i=0;i<t;i++)\n    {\n        if((d[i]-c[i])>=11&&f[i]!=d[i])\n        {\n            printf(\"YES\\n\");\n        }\n        else if((d[i]-c[i])<11||f[i]==d[i])\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9962546816479401, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "49f1173ff3b65c8e0d76dd24904a85a6", "bug_code_uid": "7dec0171df9ea46243f7a7c3cf9f37d3", "src_uid": "6b37fc623110e49a5e311a2d186aae46", "apr_id": "3880d5c4234b8ad6ee3ceef80fa635d6", "difficulty": 800, "tags": ["number theory", "geometry", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,x,n,m;\n    scanf(\"%d\", &x);\n    for(i=0;i<=x;i++)\n    {\n        scanf(\"%d %d\", &n,&m);\n        if(n%m == 0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,x,n,m;\n    scanf(\"%d\", &x);\n    for(i=1;i<=x;i++)\n    {\n        scanf(\"%d %d\", &n,&m);\n        if(n%m == 0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n}\n"}
{"similarity_score": 0.9968992248062015, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f9ae115288a941fe421da7bc55d8264d", "bug_code_uid": "d1b0e7f33613ab9f2aad5509246bfa37", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "7b2727ece7c1ef94b84887b0fb0d1df9", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n\tint n,m,x=0,i,j,t,s;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tscanf(\"%d\",&m);\n\tint b[m];\n\tfor(i=0;i<m;i++)\n\tscanf(\"%d\",&b[i]);\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<n-1;j++)\n\t\t{\n\t\t    if(a[j]>a[j+1])\n\t\t    {\n\t\t    \tt=a[j];\n\t\t    \ta[j]=a[j+1];\n\t\t    \ta[j+1]=t;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<n-1;j++)\n\t\t{\n\t\t    if(b[j]>b[j+1])\n\t\t    {\n\t\t    \ts=b[j];\n\t\t    \tb[j]=b[j+1];\n\t\t    \tb[j+1]=s;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(abs(a[i]-b[j])<=1&&b[j]!=(-1))\n\t\t    {\n\t\t\t   x++;\n\t\t\t   b[j]=(-1);\n\t\t\t   break;\n\t\t    }\n\t\t}\n\t}\n\tprintf(\"%d\",x);\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nmain()\n{\n\tint n,m,x=0,i,j,t,s;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(i=0;i<n;i++)\n\tscanf(\"%d\",&a[i]);\n\tscanf(\"%d\",&m);\n\tint b[m];\n\tfor(i=0;i<m;i++)\n\tscanf(\"%d\",&b[i]);\n\tfor(i=0;i<n-1;i++)\n\t{\n\t\tfor(j=0;j<n-1;j++)\n\t\t{\n\t\t    if(a[j]>a[j+1])\n\t\t    {\n\t\t    \tt=a[j];\n\t\t    \ta[j]=a[j+1];\n\t\t    \ta[j+1]=t;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<m-1;i++)\n\t{\n\t\tfor(j=0;j<m-1;j++)\n\t\t{\n\t\t    if(b[j]>b[j+1])\n\t\t    {\n\t\t    \ts=b[j];\n\t\t    \tb[j]=b[j+1];\n\t\t    \tb[j+1]=s;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<m;j++)\n\t\t{\n\t\t\tif(abs(a[i]-b[j])<=1&&b[j]!=(-1))\n\t\t    {\n\t\t\t   x++;\n\t\t\t   b[j]=(-1);\n\t\t\t   break;\n\t\t    }\n\t\t}\n\t}\n\tprintf(\"%d\",x);\n}"}
{"similarity_score": 0.24919441460794844, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "cc52af6ee0806a24b7cb338fc81eabe6", "bug_code_uid": "60a100152849487d1fed6bad4f8e2b74", "src_uid": "b18dac401b655c06bee331e71eb3e4de", "apr_id": "a44aa002ad32f4ef13e00f5340b79326", "difficulty": 1200, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n,m,c,x,teams=0;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(int turns=0;turns<n;turns++){\n            scanf(\"%d %d %d\",&m,&c,&x);\n            while(m>0&&c>0&&(m+c+x)>=3)\n            {\n                m--;\n                c--;\n                if(x>0)x--;\n                else if(m>c)m--;\n                else c--;\n                teams ++;\n            }\n            arr[turns]=teams;\n            teams=0;\n    }\n        for(int i=0;i<n;i++)\n        {\n            printf(\"%d\\n\",arr[i]);\n        }\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint min(int a,int b){ return (a<b)?a:b; }\nint main()\n{\n    int n,m,c,x;\n    scanf(\"%d\",&n);\n    int arr[n];\n    for(int turns=0;turns<n;turns++)\n    {\n        scanf(\"%d %d %d\",&c,&m,&x);\n        arr[turns]=min((c+m+x)/3,min(c,m));\n    }\n        for(int i=0;i<n;i++)\n        {\n            printf(\"%d\\n\",arr[i]);\n        }\n}"}
{"similarity_score": 0.45879120879120877, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "8eefef818658c735f9b7b86456b600b1", "bug_code_uid": "2b4974e9368d35a7c1f06787cd690c36", "src_uid": "28e0822ece0ed35bb3e2e7fc7fa6c697", "apr_id": "5ccc490a156293382afe3b45c4d272b2", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint ara[100000];\nint main()\n{\n    int t,i,a,b=0,sum=0,c,ans,min=100,sum1;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d%d\",&a,&ara[i]);\n        b+=a*ara[i];\n        sum+=a;\n        if(min>ara[i]){\n            ans=b;\n            sum1=sum;\n            min=ara[i];\n        }\n    }\n    ans+=min*(sum-sum1);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint ara[100000];\nint main()\n{\n    int t,i,a,b=0,sum=0,j,answer,min,count=0;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d%d\",&a,&ara[i]);\n        if(sum==0){\n            min=ara[0];\n            sum=1;\n        }\n        if(min>ara[i])\n            min=ara[i];\n        b+=a*min;\n    }\n    printf(\"%d\\n\",b);\n    return 0;\n}\n\n"}
{"similarity_score": 0.9919028340080972, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "d0ae662c4c5b553ab30bb9f3ec6a9e2b", "bug_code_uid": "7f3900eda0be7fd2cc15e6e1b283021b", "src_uid": "f93a8bd64a405233342f84542fce314d", "apr_id": "f4dfc43a7403916b00cd8bb2f3ceae43", "difficulty": 800, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\n\tint n,i,j,c;\n\tint a[1001];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n\tfor(i=0;i<n;i++)\n\tfor(j=0;j<n;j++){\n\t\tif(a[i]>a[j]){\n\t\t\tc=a[i]; a[i]=a[j]; a[j]=c;\n\t\t}\n\t}\n\tprintf(\"%d\",(n%2==0)?a[n/2+1]:a[n/2]);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\n\tint n,i,j,c;\n\tint a[1001];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++) scanf(\"%d\",&a[i]);\n\tfor(i=0;i<n;i++)\n\tfor(j=0;j<n;j++){\n\t\tif(a[i]<a[j]){\n\t\t\tc=a[i]; a[i]=a[j]; a[j]=c;\n\t\t}\n\t}\n\tprintf(\"%d\",(n%2==0)?a[n/2-1]:a[n/2]);\n}\n"}
{"similarity_score": 0.45112781954887216, "equal_cnt": 16, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 6, "fix_ops_cnt": 16, "lang": "GNU C", "fix_code_uid": "92982ae8eac95d790d24c1df0f09a2a1", "bug_code_uid": "15dc04d82f2bb5920a7b74b68b5bdaa4", "src_uid": "2c9c96dc5b6f8d1f0ddeea8e07640d3e", "apr_id": "8428d03f6c7ac1f7f7b36b27142f82ee", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main()\n{\n    int n,m,i;\n    scanf(\"%d %d\",&n,&m);\n    int a[m];\n    for(i=0;i<m;i++){scanf(\"%d\",a+i);}\n\n    int curr = 1;\n    int count = 0;\n    int steps = 0;\n    while(count != m)\n    {\n        if(a[count]==curr)\n        {while(a[count] == curr)\n            {count++; printf(\"%d \",curr);}}\n        else\n        {\n            steps++;\n            if(curr == n){curr = 1;}\n            else{curr++;}\n            printf(\"%d \",curr);\n        }\n    }\n    printf(\"\\n%d\",steps);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n    long long int n,m,i;\n    scanf(\"%lld %lld\",&n,&m);\n    long long int a[m];\n    for(i=0;i<m;i++){scanf(\"%lld\",a+i);}\n\n    long long int curr = a[0];\n    long long int count = 1;\n    long long int t = a[0] - 1;\n\n    for(i=1;i<m;i++)\n    {\n        if(a[i]>=curr){t += (a[i]-curr);}\n        else{t += (n - curr + a[i]);}\n        curr = a[i];\n    }\n    printf(\"%lld\",t);\n    return 0;\n}"}
{"similarity_score": 0.9720534629404617, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "a06863ca65438004b55f43f5ccb453cf", "bug_code_uid": "7f08091be2f0c376952e8734675a4851", "src_uid": "5ad16e23e96de111c4974551b859a5ff", "apr_id": "61e5eb8d2b4d220501352b0a8d24524c", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\nint i,j,n,l,m[101],x[101],k=0;\nchar a[101],b[100][101],c[100][101],d[101];\n\ngets(a);\nscanf(\"%d\",&n);\nl=strlen(a);\nstrcpy(d,a);\nfor(i=0;i<n;i++)\n{\nscanf(\"%s\",b[i]);\n}\nfor(i=0;i<n;i++)\n{\nm[i]=strncmp(b[i],a,l);\nx[i]=strcmp(d,b[i]);\n}\nfor(i=0;i<n;i++)\n{\nif(m[i]==0)\n{\nif(k==0)\n{\nstrcpy(d,b[i]);\nk++;\n}\nif(x[i]>0)\nstrcpy(d,b[i]);\n}\n}\nputs(d);\nreturn(0);\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nint main()\n{\n\nint i,j,n,l,m[101],x[101],k=0;\nchar a[101],b[100][101],c[100][101],d[101];\n\ngets(a);\nscanf(\"%d\",&n);\nl=strlen(a);\nstrcpy(d,a);\nfor(i=0;i<n;i++)\n{\nscanf(\"%s\",b[i]);\n}\nfor(i=0;i<n;i++)\n{\nm[i]=strncmp(b[i],a,l);\nx[i]=strcmp(d,b[i]);\n}\nfor(i=0;i<n;i++)\n{\nif(m[i]==0)\n{\nif(k==0)\n{\nstrcpy(d,b[i]);\nk++;\n}\nif(strcmp(d,b[i])>0)\n{\nstrcpy(d,b[i]);\n}\n}\n}\nputs(d);\nreturn(0);\n}"}
{"similarity_score": 0.0, "equal_cnt": 0, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1b926f29473f38d158f475c22340a5ff", "bug_code_uid": "19c531d8873f044fd05f2115ea4dfd7c", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "f98e68d682a7652535a2018e979293b2", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "V", "fixed": "#include<stdio.h>\nint main()\n{\n\nint n,a,b,d,c=0,s=0;\nscanf(\"%d\",&n);\nwhile(n--)\n{\n    scanf(\"%d %d %d\",&a,&b,&d);\n\n     if(a==1) c++;\n     if(b==1) c++;\n     if(d==1) c++;\n\n     if(c>=2) s++;\n     c=0;\n}\n\nprintf(\"%d\\n\",s);\n\n\n\n}\n"}
{"similarity_score": 0.9327731092436975, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "f7611c8ad4e168ce092df6a02d6338c7", "bug_code_uid": "7e4aded06b98541503fa6f5b81b38e3b", "src_uid": "deeb49969ac4bc4f1c7d76b89ac1402f", "apr_id": "57e39f93bcd94c57287b804829162143", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    unsigned int n,m,pos=0;\n    scanf(\"%d %d\",&n,&m);\n\n    int a[n];\n    for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]==1)\n                pos++;\n        }\n\n    int l,r;\n\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%d %d\",&l,&r);\n\n        if((r-l+1)%2==0 && pos>=(r-l+1)/2)\n            printf(\"1\\n\");\n            else\n                printf(\"0\\n\");\n\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    unsigned int n,m,pos=0,neg=0;\n    scanf(\"%d %d\",&n,&m);\n\n    int a[n];\n    for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n            if(a[i]==1)\n                pos++;\n            else\n                neg++;\n        }\n\n    int l,r;\n\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%d %d\",&l,&r);\n\n        if((r-l+1)%2==0 && pos>=(r-l+1)/2 && neg>=(r-l+1)/2)\n            printf(\"1\\n\");\n            else\n                printf(\"0\\n\");\n\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.5530939648586708, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "c343b6a965fd7b4000ae2857f62abe14", "bug_code_uid": "08f0ddb3033f3ee4b5b5dab44430ad57", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "c5d3176e971e74a2a258c97c4be005fd", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdbool.h>\ntypedef long long ll;\nint main(void) {\n    int i,j;\n    int n;\n    scanf(\"%d\",&n);\n    int a[100][100];\n    for(i=0;i<n;i++)for(j=0;j<n;j++)scanf(\"%d\",&a[i][j]);\n    int ans[100],sz=0,f;\n    for(i=0;i<n;i++)\n    {   f=0;\n        for(j=0;j<n;j++)\n        {\n            if(a[i][j]!=-1 && a[i][j]!=1 && a[i][j]!=3)\n            {\n                f=1;\n                //printf(\"bhai %d,%d\\n\",i,j);\n            }\n            if(a[i][j]==1 || a[i][j]==3)break;\n        }\n        //printf(\"bhai2 %d,%d\\n\",i,j);\n        if(f && j==n)\n        {// printf(\"da=%d,%d\\n\",f,i);\n            ans[sz++]=i;\n        }\n    }\n    printf(\"%d\\n\",sz);\n    for(i=0;i<sz;i++)printf(\"%d \",ans[i]+1);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdbool.h>\ntypedef long long ll;\nint main(void) {\n    int i,j;\n    int n;\n    scanf(\"%d\",&n);\n    int a[100][100];\n    for(i=0;i<n;i++)for(j=0;j<n;j++)scanf(\"%d\",&a[i][j]);\n    int ans[100],sz=0,f;\n    for(i=0;i<n;i++)\n    {   f=0;\n        for(j=0;j<n;j++)\n        {\n            if(a[i][j]==0||a[i][j]==2)f++;\n        }\n        if(f==n-1)\n        {\n            ans[sz++]=i;\n        }\n    }\n    printf(\"%d\\n\",sz);\n    for(i=0;i<sz;i++)printf(\"%d \",ans[i]+1);\n    return 0;\n}"}
{"similarity_score": 0.5975773889636609, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1657690187e96d10627db1f036c3829a", "bug_code_uid": "58a7deb60a0c292fc424265708f6105a", "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8", "apr_id": "fc590a3ef583c7ae8d97ccbfec345897", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n   int t,m,n,i,a;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n        {\r\n          scanf(\"%d%d\",&m,&n);\r\n            a=n;\r\n            while(n<m)\r\n            {\r\n                n+=a;\r\n            }\r\n            if(n%m==0)\r\n                printf(\"%d\\n\",n/m);\r\n            else printf(\"%d\\n\",n/m+1);\r\n       }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n   int t,m,n,i;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n        {\r\n          scanf(\"%d%d\",&m,&n);\r\n\r\n            if(n<m&&m%n!=0)\r\n               n=(m/n+1)*n;\r\n\r\n            if(n%m==0)\r\n                printf(\"%d\\n\",n/m);\r\n            else printf(\"%d\\n\",n/m+1);\r\n       }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9745928338762215, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "86271a983e185efe9c240afacdf40b27", "bug_code_uid": "58d4b79b9be2f72c0f041b51d8cad786", "src_uid": "8d5fe8eee1cce522e494231bb210950a", "apr_id": "a3fe1ddfb84e6ffabaef1cbeb90c9150", "difficulty": 1200, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    unsigned int i,j,maxpow=0;\n    unsigned long n,k;\n    scanf(\"%ldu\",&n);\n    scanf(\"%ldu\",&k);\n    unsigned int a[n];\n    for (i=0;i<n;++i){\n        scanf(\"%d\",&a[i]);\n    }\n    for (i=0;i<n;++i){\n        if (a[i]>maxpow) maxpow=a[i];\n    }\n    if (k>=n-1){\n        printf(\"%d\",maxpow);\n        return 0;\n    }\n    i=0;\n    while (i<n){\n        maxpow=a[i];\n        for (j=i+1;j<n && j<=k+i;++j){\n            if (!(maxpow>a[j])) break;\n        }\n        if (i==0){\n            if (j>k+i || j==n){\n                printf(\"%d\",maxpow);\n                return 0;\n            }\n        }\n        else {if (j>=k+i || j==n){\n            printf(\"%d\",maxpow);\n            return 0;\n        }}\n        i=j;\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    unsigned int i,j,maxpow=0;\n    long long n,k;\n    scanf(\"%lld\",&n);\n    scanf(\"%lld\",&k);\n    unsigned int a[n];\n    for (i=0;i<n;++i){\n        scanf(\"%d\",&a[i]);\n    }\n    for (i=0;i<n;++i){\n        if (a[i]>maxpow) maxpow=a[i];\n    }\n    if (k>=n-1){\n        printf(\"%d\",maxpow);\n        return 0;\n    }\n    i=0;\n    while (i<n){\n        maxpow=a[i];\n        for (j=i+1;j<n && j<=k+i;++j){\n            if (!(maxpow>a[j])) break;\n        }\n        if (i==0){\n            if (j>k+i || j==n){\n                printf(\"%d\",maxpow);\n                return 0;\n            }\n        }\n        else {if (j>=k+i || j==n){\n            printf(\"%d\",maxpow);\n            return 0;\n        }}\n        i=j;\n    }\n    return 0;\n}"}
{"similarity_score": 0.8996505242136795, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "cec650639ce6384bece4007d2de8479c", "bug_code_uid": "b3c531afb22b951bc4e349e1839a9a64", "src_uid": "0988b8439c6699107c77345037162fba", "apr_id": "a425f2a870df4584513354f768002211", "difficulty": 1600, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,m;\n\tint i=0,j=0;\n\tscanf(\"%d %d\",&n,&m);\n\tchar s[103][103];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%s\",s[i]);\n\tint flag1=1,flag2=1;\n\tif(n%3==0)\n\t{\n\t\tfor(i=0;i<n/3;i++)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(s[i][j]!=s[0][0])flag1=0;\n\t\t\t}\n\t\t}\n\t\tfor(;i<2*(n/3);i++)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(s[i][j]!=s[n/3][0])flag1=0;\n\t\t\t}\n\t\t}\n\t\tfor(;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(s[i][j]!=s[2*(n/3)][0])flag1=0;\n\t\t\t}\n\t\t}\n\t}\n\telse flag1=0;\n\tif(m%3==0)\n\t{\n\t\tfor(i=0;i<m/3;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j][i]!=s[0][0])flag2=0;\n\t\t\t}\n\t\t}\n\t\tfor(;i<2*(m/3);i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j][i]!=s[0][m/3])flag2=0;\n\t\t\t}\n\t\t}\n\t\tfor(;i<m;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j][i]!=s[0][2*(m/3)])flag2=0;\n\t\t\t}\n\t\t}\n\t}\n\telse flag2=0;\n//\tprintf(\"%d %d\\n\",flag1,flag2);\n\tif(flag1==1||flag2==1)printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tint n,m;\n\tint i=0,j=0;\n\tscanf(\"%d %d\",&n,&m);\n\tchar s[103][103];\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%s\",s[i]);\n\tint flag1=1,flag2=1;\n\tif(n%3==0)\n\t{\n\t\tfor(i=0;i<n/3;i++)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(s[i][j]!=s[0][0])flag1=0;\n\t\t\t}\n\t\t}\n\t\tfor(;i<2*(n/3);i++)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(s[i][j]!=s[n/3][0])flag1=0;\n\t\t\t}\n\t\t}\n\t\tfor(;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tif(s[i][j]!=s[2*(n/3)][0])flag1=0;\n\t\t\t}\n\t\t}\n\t}\n\telse flag1=0;\n\tif(m%3==0)\n\t{\n\t\tfor(i=0;i<m/3;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j][i]!=s[0][0])flag2=0;\n\t\t\t}\n\t\t}\n\t\tfor(;i<2*(m/3);i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j][i]!=s[0][m/3])flag2=0;\n\t\t\t}\n\t\t}\n\t\tfor(;i<m;i++)\n\t\t{\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j][i]!=s[0][2*(m/3)])flag2=0;\n\t\t\t}\n\t\t}\n\t}\n\telse flag2=0;\n//\tprintf(\"%d %d\\n\",flag1,flag2);\n\tif(flag1==1 && (s[0][0]!=s[n/3][0] && s[0][0]!=s[2*(n/3)][0] && s[n/3][0]!=s[2*(n/3)][0]))printf(\"YES\\n\");\n\telse if(flag2==1 && (s[0][0]!=s[0][m/3] && s[0][0]!=s[0][2*(m/3)] && s[0][m/3]!=s[0][2*(m/3)]))printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.982839313572543, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "25bbcb21a5edea5fea3910c0bf23ba49", "bug_code_uid": "b1c1617de3a637b39f9a7dc310c9b4c3", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "9d03783fb4613a3aeb13c6692d11e092", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,rank,year=0;\n    scanf(\"%d\",&n);\n    int d[n-1],ab[2];\n    for(i=0;i<n-1;i++){\n        scanf(\"%d\",&d[i]);\n    }\n    for(i=0;i<2;i++){\n        scanf(\"%d\",&ab[i]);\n    }\n    rank=ab[1]-ab[0];\n    for(i=ab[0];i<rank;i++){\n        year=year+d[i];\n    }\n    printf(\"%d\",year);\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,rank,year=0;\n    scanf(\"%d\",&n);\n    int d[n-1],ab[2];\n    for(i=0;i<n-1;i++){\n        scanf(\"%d\",&d[i]);\n    }\n    for(i=0;i<2;i++){\n        scanf(\"%d\",&ab[i]);\n    }\n    rank=ab[1]-ab[0];\n    for(i=ab[0];i<ab[1];i++){\n        year=year+d[i-1];\n    }\n    printf(\"%d\",year);\n\n}"}
{"similarity_score": 0.7486818980667839, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "679a3d27c204796c77c9c5296cff3ec8", "bug_code_uid": "f778c844644cb4783ccda4dd15ce9025", "src_uid": "7226a7d2700ee52f52d417f404c42ab7", "apr_id": "53e6cee52ed63add5c1e002dce8e773b", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include\"stdio.h\"\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\tint num,s;\r\n\t\tscanf(\"%d%d\",&num,&s);\r\n\t\tif(num > s)\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"%d\\n\",s/(num * num));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n } \r\n", "fixed": "#include\"stdio.h\"\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\tint num;\r\n\t\tlong long s;\r\n\t\tscanf(\"%d%lld\",&num,&s);\r\n\t\tif(num * num > s)\r\n\t\t{\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tlong long  yushu,geshu;\r\n\t\tgeshu = s / num / num;\r\n\t\t\r\n\t\tprintf(\"%lld\\n\",geshu);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n \r\n"}
{"similarity_score": 0.9157273215244229, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "59530e6bbbfd3e6c8d33bb4d8a17c738", "bug_code_uid": "7e21550ea3c33acbca9387db0620ee63", "src_uid": "17fff01f943ad467ceca5dce5b962169", "apr_id": "e614c70deb29f8ecc93767b9a481b4ed", "difficulty": 1500, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint comparefunc (const void * a, const void * b)\r\n{\r\n    return (*(int*)a)-(*(int*)b);\r\n}\r\ntypedef struct\r\n{\r\n    char first[20];\r\n    char last[20];\r\n} nametype;\r\ntypedef struct\r\n{\r\n    int id;\r\n    nametype name;\r\n} studenttype;\r\nint max(int a,int b)\r\n{\r\n    if(a>=b)return a;\r\n    else return b;\r\n}\r\nint main()\r\n{\r\n\r\n    int i,j,m,n,p,c,ans=0;\r\n    scanf(\"%d%d\", &n,&m);\r\n    char s[n],t[m];\r\n    int a[m],b[m];\r\n    scanf(\"%s\", s);\r\n    scanf(\"%s\", t);\r\n    for(i=0,j=0;i<n,j<m;i++){\r\n        if(s[i]==t[j]){\r\n            a[j]=i;\r\n            j++;\r\n        }\r\n    }\r\n    for(i=n-1,j=m-1;i>=0,j>=0;i--){\r\n        if(s[i]==t[j]){\r\n            b[j]=i;\r\n            j--;\r\n        }\r\n    }\r\n    if(n==200000&&m==200000){\r\n       for(i=0;i<m;i++)printf(\"(%d %d),\", a[i],b[i]);\r\n}\r\n    for(i=0;i<m-1;i++){\r\n        ans=max(ans,b[i+1]-a[i]);\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint comparefunc (const void * a, const void * b)\r\n{\r\n    return (*(int*)a)-(*(int*)b);\r\n}\r\ntypedef struct\r\n{\r\n    char first[20];\r\n    char last[20];\r\n} nametype;\r\ntypedef struct\r\n{\r\n    int id;\r\n    nametype name;\r\n} studenttype;\r\nint max(int a,int b)\r\n{\r\n    if(a>=b)return a;\r\n    else return b;\r\n}\r\nint main()\r\n{\r\n\r\n    int i,j,m,n,p,c,ans=0;\r\n    scanf(\"%d%d\", &n,&m);\r\n    char s[200005],t[200005];\r\n    int a[200005],b[200005];\r\n    scanf(\"%s\", s);\r\n    scanf(\"%s\", t);\r\n    for(i=0,j=0;i<n,j<m;i++){\r\n        if(s[i]==t[j]){\r\n            a[j]=i;\r\n            j++;\r\n        }\r\n    }\r\n    for(i=n-1,j=m-1;i>=0,j>=0;i--){\r\n        if(s[i]==t[j]){\r\n            b[j]=i;\r\n            j--;\r\n        }\r\n    }\r\n    for(i=0;i<m-1;i++){\r\n        ans=max(ans,b[i+1]-a[i]);\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n    return 0;\r\n}"}
{"similarity_score": 0.8591065292096219, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "3f93c2b5bfb917748830581fcc889d4a", "bug_code_uid": "1f1044fadf5f8be874ffa99a8c5078b6", "src_uid": "b20e98f2ea0eb48f790dcc5dd39344d3", "apr_id": "b770afaddcede7c89e14734e6218e4c9", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n,m,i,j,w,k=0,d;\n    scanf(\"%d %d\",&n,&m);\n     int t[n];\n     int q[n];\n\n     for(i=0;i<n;i++)\n        q[i]=0;\n    if (m==1)\n    {for(i=0;i<n;i++){scanf(\"%d\",&t[i]);if(k<t[i]){k=t[i];d=i+1;}} printf(\"%d\",d);}\n   else\n   {\n       for(i=0;i<m;i++)\n       {\n           k=0;\n           for(j=0;j<n;j++)\n           {\n            scanf(\"%d\",&t[i]);\n            if(k<t[i])\n                {\n                    w=j;\n                    k=t[i];\n                }\n           }\n         q[w]+=1;\n        }\n        k=0;\n        d=0;\n    for(i=0;i<n;i++)\n    {\n        if(k<q[i])\n        {\n            d=i+1;\n            k=q[i];\n        }\n    }\n     printf(\"%d\",d);\n    }\n   \n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    int n,m,i,j,w=0,k=0,d=1;\n    scanf(\"%d %d\",&n,&m);\n     int a;\n     int q[n];\n\n     for(i=0;i<n;i++)\n        q[i]=0;\n    if (m==1)\n    {for(i=0;i<n;i++){scanf(\"%d\",&a);if(k<a){k=a;d=i+1;}} printf(\"%d\",d);}\n   else\n   {\n       for(i=0;i<m;++i)\n       {\n           k=0;\n           w=0;\n           for(j=0;j<n;++j)\n           {\n            scanf(\"%d\",&a);\n            if(k<a)\n                {\n                    w=j;\n                    k=a;\n                }\n           }\n         q[w]+=1;\n        }\n    \n        k=0;\n        d=0;\n    for(i=0;i<n;++i)\n    {\n        if(k<q[i])\n        {\n            d=i+1;\n            k=q[i];\n        }\n    }\n     printf(\"%d\",d);\n    }\n\n}\n"}
{"similarity_score": 0.988169798190675, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "8b79502316d04e5de9d45803ea2a5dd2", "bug_code_uid": "7ee88ca755e4a034111bda87376b0b8d", "src_uid": "2ce2d0c4ac5e630bafad2127a1b589dd", "apr_id": "9cead5c99427343dde9c604f7fc45293", "difficulty": 1400, "tags": ["greedy"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint n;\nint sta[100005];\nchar str[100005]; \nint stack(int x)\n{\n  sta[n++] = x;\n}\nint pop()\n{\n  int x;\n  x = sta[n];\n  sta[n] = -1;\n  n--;\n  return x;\n}\nint match(int m,int n)\n{\n  if(str[ sta[m] ] =='(' && str[ n ] == ')')\n    return 1;\n  return 0;\n}\n\nint main(void)\n{\n  int count = 0,i,len,cha=0,pos;\n  char ch;\n  while(scanf(\"%s\",str) != EOF)\n  {\n    n = 0;\n    memset(sta,'\\0',sizeof(sta));\n    count = 0;\n    len = strlen(str);\n    stack(0);\n    for(i=1;i<len;i++)  \n    {\n      stack(i);\n      if(n<2)\n        continue;\n      if( match(n-2,i) )\n      {\n        pop();      \n        pop();\n        count+=2;\n      }\n    }\n    printf(\"%d\\n\",count);\n  }\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint n;\nint sta[1000005];\nchar str[1000005]; \nint stack(int x)\n{\n  sta[n++] = x;\n}\nint pop()\n{\n  int x;\n  x = sta[n];\n  n--;\n  return x;\n}\nint match(int m,int n)\n{\n  if(str[ sta[m] ] =='(' && str[ n ] == ')')\n    return 1;\n  return 0;\n}\n\nint main(void)\n{\n  int count = 0,i,len,cha=0,pos;\n  char ch;\n  while(scanf(\"%s\",str) != EOF)\n  {\n    n = 0;\n    memset(sta,'\\0',sizeof(sta));\n    count = 0;\n    len = strlen(str);\n    stack(0);\n    for(i=1;i<len;i++)  \n    {\n      stack(i);\n      if(n<2)\n        continue;\n      if( match(n-2,i) )\n      {\n        pop();      \n        pop();\n        count+=2;\n      }\n    }\n    printf(\"%d\\n\",count);\n  }\nreturn 0;\n}\n"}
{"similarity_score": 0.916083916083916, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "2a79b1067839cc790dd6a04c93b40361", "bug_code_uid": "bd5acfa8eb519ce5b5b0da4000bfd9cd", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "7cab26147ba17a6dc95eadb7a7467ea1", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{ int l1,l2,k,q;\n    char s1[200005],s2[200005];\n\tscanf(\"%s%s\",s1,s2);\n\tl1=strlen(s1);\n\tl2=strlen(s2);\n\tif(l1==1&&l2==1) printf(\"1\"); else {\n\tk=1; q=0;\n\twhile(q!=1) {\n\t\tif(s1[l1-k]==s2[l2-k]) k++; else q=1;\n\t}\n\tprintf(\"%d\",l1-k+l2-k+2);\n}}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{ int l1,l2,k,q;\n    char s1[200005],s2[200005];\n\tscanf(\"%s%s\",s1,s2);\n\tl1=strlen(s1);\n\tl2=strlen(s2);\n\tif(strcmp(s1,s2)==0) printf(\"0\"); else {\n\tk=1; q=0;\n\twhile(q!=1) {\n\t\tif(s1[l1-k]==s2[l2-k]) k++; else q=1;\n\t}\n\tprintf(\"%d\",l1-k+l2-k+2);\n}}\n"}
{"similarity_score": 0.7235668789808917, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "fe0c685dbd29a395ac04554393fe5543", "bug_code_uid": "cd7e448e352b5bc48f5438e34c0ae609", "src_uid": "71dea31e1244797f916adf5f526f776e", "apr_id": "bd8208d8bd4979bdf6f7813e8dfc0c14", "difficulty": 1200, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint cp(int n){\n\tint can=sqrt(n);\n\tif (can*can==n) return 1;\n\treturn 0;\n}\nint kt(int a,int b,int n,int m){\n\tint tmp=(a-n)*(a-n)+(b-m)*(b-m);\n\tif (tmp%2==0 && cp(tmp/2)) return 1;\n\treturn 0;\n}\nint main(){\n\tint n,a,b,m;\n\tscanf(\"%d%d%d%d\",&a,&b,&n,&m);\n\tif (a==n) printf(\"%d %d %d %d\",a+abs(b-m),b,a+abs(b-m),m);\n\telse if (b==m) printf(\"%d %d %d %d\",a,b+abs(a-n),n,b+abs(a-n));\n\telse if (kt(a,b,n,m)) printf(\"%d %d %d %d\",a,m,n,b);\n\telse printf(\"-1\");\n}", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n\tint n,a,b,m;\n\tscanf(\"%d%d%d%d\",&a,&b,&n,&m);\n\tif (a==n) printf(\"%d %d %d %d\",a+abs(b-m),b,a+abs(b-m),m);\n\telse if (b==m) printf(\"%d %d %d %d\",a,b+abs(a-n),n,b+abs(a-n));\n\telse if (abs(b-m)==abs(a-n)) printf(\"%d %d %d %d\",a,m,n,b);\n\telse printf(\"-1\");\n}"}
{"similarity_score": 0.3810198300283286, "equal_cnt": 17, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "0df7bd8189a86407c4ce1d3b176c64f6", "bug_code_uid": "b29978d222c1c25412ad86c2e99128a1", "src_uid": "4d5457d9f053556c78c102f5c32f7542", "apr_id": "8a92f3036ee3910be04d64879d9c570d", "difficulty": 800, "tags": ["binary search", "greedy", "math", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t) {\r\n\t\tint n, h;\r\n\t\tscanf(\"%d %d\", &n, &h);\r\n\t\tint w[n + 1];\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tscanf(\"%d\", &w[i]);\r\n\t\t}\r\n\t\tint max1 = 0;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tif (w[i] > max1) {\r\n\t\t\t\tmax1 = w[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tif (max1 == w[i]) {\r\n\t\t\t\tw[i] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint max2 = 0;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tif (w[i] > max2) {\r\n\t\t\t\tmax2 = w[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tint count = 0;\r\n\t\tfor (int i = 1; i > 0; i++) {\r\n\t\t\tif (h <= 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse if (i % 2 != 0) {\r\n\t\t\t\th = h - max1;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\telse if (i % 2 == 0) {\r\n\t\t\t\th = h - max2;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", count);\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main() {\r\n\tint t;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t) {\r\n\t\tint n, h;\r\n\t\tscanf(\"%d %d\", &n, &h);\r\n\t\tint w[10000];\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tscanf(\"%d\", &w[i]);\r\n\t\t}\r\n\t\tint temp = 0;\r\n\t\tfor (int i = 0; i < n - 1; i++) {\r\n\t\t\tfor (int j = i + 1; j < n; j++) {\r\n\t\t\t\tif (w[i] < w[j]) {\r\n\t\t\t\t\ttemp = w[i];\r\n\t\t\t\t\tw[i] = w[j];\r\n\t\t\t\t\tw[j] = temp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tint m;\r\n\t\tm = h / (w[0] + w[1]);\r\n\t\tif (h % (w[0] + w[1]) == 0) {\r\n\t\t\tprintf(\"%d\\n\", 2 * m);\r\n\t\t}\r\n\t\telse if (h % (w[0] + w[1]) <= w[0]) {\r\n\t\t\tprintf(\"%d\\n\", (2 * m)+1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprintf(\"%d\\n\", (2 * m) + 2);\r\n\r\n\t\t}\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9961538461538462, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "281313eecfc05eb370d2d9061a46f812", "bug_code_uid": "ee1777557eeb46dd2ab6561d4eca60da", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "0fb3afdebce3c39afc99f89b0d2ff21b", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char ara[100];\n    scanf(\"%s\",&ara);\n    int len,i,c1,c2;\n    c1=0;\n    c2=0;\n    len=strlen(ara);\n    for(i=0;i<len;i++)\n    {\n        if(ara[i]=='A')\n        {\n            c1++;\n        }\n        else if(ara[i]=='D')\n        {\n            c2++;\n        }\n    }\n    if(c1>c2)\n    {\n        printf(\"Anton\");\n    }\n    else if(c2>c1)\n    {\n        printf(\"Danik\");\n    }\n    else\n    {\n        printf(\"Friendship\");\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int n;\n    scanf(\"%d\",&n);\n    char ara[1000000];\n    scanf(\"%s\",&ara);\n    int len,i,c1,c2;\n    c1=0;\n    c2=0;\n    len=strlen(ara);\n    for(i=0;i<len;i++)\n    {\n        if(ara[i]=='A')\n        {\n            c1++;\n        }\n        else if(ara[i]=='D')\n        {\n            c2++;\n        }\n    }\n    if(c1>c2)\n    {\n        printf(\"Anton\");\n    }\n    else if(c2>c1)\n    {\n        printf(\"Danik\");\n    }\n    else\n    {\n        printf(\"Friendship\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9971264367816092, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "228dd8fe252094178d9bd73fa70749a0", "bug_code_uid": "f4220324306079fc31c6d86a82a6801b", "src_uid": "3bb093fb17d6b76ae340fab44b08fcb8", "apr_id": "4eb48bc2fbc6589a2b81683ebe487e63", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint a[1000],b[1000],c,d,x,n,i,arainb[1000];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\n\n\n\nscanf(\"%d %d\",&a[i],&b[i]);\n{\nif(a[i]<=b[i])\n{\nc=a[i]+a[i];\nx=b[i];\n}\nelse if(a[i]>b[i])\n{\nc=b[i]+b[i];\nx=a[i];\n}\n\n}\n\nif(c>=x)\n{\narainb[i]=c*c;\n}\nelse if(c<x)\n{arainb[i]=(x*x);\n}\n}\nfor(i=0;i<n;i++)\n{\n    printf(\"%d\\n\",arainb[i]);\n}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint a[1000],b[10000],c,d,x,n,i,arainb[10000];\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\n\n\n\nscanf(\"%d %d\",&a[i],&b[i]);\n{\nif(a[i]<=b[i])\n{\nc=a[i]+a[i];\nx=b[i];\n}\nelse if(a[i]>b[i])\n{\nc=b[i]+b[i];\nx=a[i];\n}\n\n}\n\nif(c>=x)\n{\narainb[i]=c*c;\n}\nelse if(c<x)\n{arainb[i]=(x*x);\n}\n}\nfor(i=0;i<n;i++)\n{\n    printf(\"%d\\n\",arainb[i]);\n}\n}\n"}
{"similarity_score": 0.9122340425531915, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "a0b11a91101f7bf2a090e4a9f80340fa", "bug_code_uid": "049daae9bbb933481bd08de451b2d03f", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "a87ce3a46120ee9d49b986c17c32dacb", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint n,i,r=0,e=0;\nscanf(\"%d\",&n);\nint a[n+1];\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&a[i]);\n}\nr=a[0];\nfor(i=0;i<(n-1);i++)\n{\n    if((a[i]-a[i+1])<0 && e < (a[i+1]-a[i]))\n     r=r+a[i+1]-a[i];\n    if(a[i]-a[i+1]>0)\n        e=e+a[i]-a[i+1];\n      if((a[i]-a[i+1])<0 && e >=(a[i+1]-a[i]))\n        e=e-a[i+1]+a[i];\n\n}\n\nprintf(\"%d\",r);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint n,i,r=0,e=0;\nscanf(\"%d\",&n);\nint a[n+1];\nfor(i=0;i<n;i++)\n{\n    scanf(\"%d\",&a[i]);\n}\nr=a[0];\nfor(i=0;i<(n-1);i++)\n{\n    if((a[i]-a[i+1])<0 && e < (a[i+1]-a[i]))\n     {\n         r=r+a[i+1]-a[i]-e;\n         e=0;\n     }\n    if(a[i]-a[i+1]>0)\n        e=e+a[i]-a[i+1];\n      if((a[i]-a[i+1])<0 && e >=(a[i+1]-a[i]))\n        e=e-a[i+1]+a[i];\n\n}\n\nprintf(\"%d\",r);\n}\n"}
{"similarity_score": 0.5693430656934306, "equal_cnt": 15, "replace_cnt": 5, "delete_cnt": 8, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "2904be43d625b109c2d716e6b54eaaec", "bug_code_uid": "9c067cf71e6fbf11a19fc1d882b06663", "src_uid": "19df5f3b8b31b763162c5331c1499529", "apr_id": "d835098731884f3cbf048477e0128bb2", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,a,b;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&a,&b);\n        int area=a*b;\n        if (area%2==1)\n        area=area/2+1;\n        else \n        area=area/2;\n        printf(\"%d\",&area);\n    }\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\nint t=0;\nint a,b;\nscanf(\"%d\",&t);\nwhile(t>0){\nscanf(\"%d %d\",&a,&b);\nprintf(\"%d\\n\",(a*b+1)/2);\nt--;\n}\nreturn 0;\n}"}
{"similarity_score": 0.9966777408637874, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "33127bc912c7f50001ffbcb8d576e54b", "bug_code_uid": "7109fcfd9ed7940acba1cb29b2b64790", "src_uid": "dd2cd365d7afad9c2b5bdbbd45d87c8a", "apr_id": "29ec08c76a5db1e9a24b045a0c8a88da", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main(void)\n{\n\tint t, i;\n\tscanf(\"%d\",&t);\n\twhile(t!=0)\n\t{\n\t\tint n, team=0, temp;\n\t\tscanf(\"%d\",&n);\n\t\tint ar[n];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&ar[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t\tfor(j=0;j<n-i-1;j++)\n\t\t\t\tif(ar[j]>ar[j+1])\n\t\t\t\t{\n\t\t\t\t\ttemp=ar[j];\n\t\t\t\t\tar[j]=ar[j+1];\n\t\t\t\t\tar[j+1]=temp;\n\t\t\t\t}\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(abs(ar[i]-ar[i-1])<=1)\n\t\t\t{\n\t\t\t\t\tteam=1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",team+1);\n\t\tt--;\n\t}\n}", "fixed": "#include <stdio.h>\n#include <math.h>\nint main(void)\n{\n\tint t, i, j;\n\tscanf(\"%d\",&t);\n\twhile(t!=0)\n\t{\n\t\tint n, team=0, temp;\n\t\tscanf(\"%d\",&n);\n\t\tint ar[n];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&ar[i]);\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t\tfor(j=0;j<n-i-1;j++)\n\t\t\t\tif(ar[j]>ar[j+1])\n\t\t\t\t{\n\t\t\t\t\ttemp=ar[j];\n\t\t\t\t\tar[j]=ar[j+1];\n\t\t\t\t\tar[j+1]=temp;\n\t\t\t\t}\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(abs(ar[i]-ar[i-1])<=1)\n\t\t\t{\n\t\t\t\t\tteam=1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",team+1);\n\t\tt--;\n\t}\n}"}
{"similarity_score": 0.44609665427509293, "equal_cnt": 14, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "4e66fbcc9f3e125fcb0cc1a808117df4", "bug_code_uid": "97f04c3eb10aa0aa5e4872092386ec7a", "src_uid": "1ab174688ba76168ca047ed2b06b0670", "apr_id": "402125bd67ea9e615be82359ee2cd5b7", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t,i;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n    long long int a,b,c,d,k=0;\n        scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n    if(d>c&&b<a)\n        printf(\"-1\\n\");\n    else{    while(1)\n    {\n       if(b+(c-d)*k>=a)\n       {\n           break;\n       }\n        k++;\n    }\n    printf(\"%lld\\n\",b+k*c);\n    }}}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t,j;\n    scanf(\"%d\",&t);\n    for(j=0;j<t;j++)\n    {\n   long long int a,b,c,d;\n    scanf(\"%lld %lld %lld %lld\",&a,&b,&c,&d);\n    long long int k;\n    if(a>b&&d>=c)\n    {\n        printf(\"-1\\n\");\n    }\n    else if(a<=b)\n        printf(\"%lld\\n\",b);\n    else\n    {\n        if((a-b)%(c-d)==0)\n            k=(a-b)/(c-d);\n        else\n            k=(a-b)/(c-d)+1;\n        printf(\"%lld\\n\",b+k*c);\n    }\n    }\n    \n   \n}\n\n"}
{"similarity_score": 0.7979942693409742, "equal_cnt": 14, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "c25e81aae5e621a6226aa921039eb3a2", "bug_code_uid": "5673d1a9586deba1d64cdb55915db5a2", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "5408c64a9813e73661d6a0c3177822e5", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#include <stdlib.h>\n\nint N;\nint vet[3001] = { 0 };\nint count[3001] = { 0 };\nint price = 0;\n\nvoid magic(int pos) {\n\tint i;\n\twhile (count[pos] > 1){\n\t\tfor (i = 1; i <= N; i++) {\n\t\t\tif (!count[i]) {\n\t\t\t\tcount[i]++;\n\t\t\t\tvet[pos]--;\n\t\t\t\tvet[i]++;\n\t\t\t\tcount[pos]--;\n\t\t\t\tprice = price + i - pos;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tint i;\n\n\tscanf(\"%d\",&N);\n\tfor (i = 1; i <= N; i++) {\n\t\tscanf(\"%d\",&vet[i]);\n\t\tcount[vet[i]]++;\n\t}\n\n\tfor (i = 1; i <= N; i++) {\n\t\tif (count[i]>1) {\n\t\t\tmagic(i);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",price);\n\tsystem(\"pause\");\n}\n/* 1517578229723 */\n", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n#include <stdlib.h>\n\nint N;\nint vet[7001] = { 0 };\nint count[7001] = { -1 };\nint price = 0;\n\nvoid magic(int pos) {\n\tint i;\n\n\twhile (count[pos] > 1){\n\t\tfor (i = pos; i <= 7001; i++) {\n\t\t\tif (!count[i]) {\n\t\t\t\tcount[i]++;\n\t\t\t\t//vet[pos]--;\n\t\t\t\t//vet[i]++;\n\t\t\t\tcount[pos]--;\n\t\t\t\tprice = price + i - pos;\n\t\t\t\tif (count[pos] == 1) break;\n\t\t\t\t//else price = price - i + pos;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tint i;\n\n\tscanf(\"%d\",&N);\n\tcount[0] = 0;\n\tfor (i = 1; i <= N; i++) {\n\t\tscanf(\"%d\",&vet[i]);\n\t\tcount[vet[i]]++;\n\t}\n\n\tfor (i = 1; i <= N; i++) {\n\t\tif (count[i]>1) {\n\t\t\tmagic(i);\n\t\t\t/*for (int j = i + 1; j <= N; j++) {\n\t\t\t\tif (vet[i] == vet[j]) {\n\t\t\t\t\taux = magic(j);\n\t\t\t\t}\n\t\t\t}*/\n\t\t}\n\t}\n\tprintf(\"%d\\n\",price);\n\t//system(\"pause\");\n}\n/* 1517582278065 */\n"}
{"similarity_score": 0.9981000633312223, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "17212d339732be102bc6383bf070773f", "bug_code_uid": "a59604e2ee7e89912d36aa08a5b16c85", "src_uid": "468e8a14dbdca471f143f59b945508d0", "apr_id": "0536fb61a68c42475d881d4fda7ffc15", "difficulty": 1500, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    long int i,j,aa,bb,n,m,t=1,ans=0;\n    long int f[100001]={0},b[100001]={0},a[100001]={0};\n    scanf(\"%ld%ld\",&n,&m);\n    for(i=1;i<=n;i++)\n    {\n\n        scanf(\"%ld\",&aa);\n        if(f[aa]==0)\n            f[aa]=i;\n        else if(f[aa]!=0)\n            f[aa]=-1;\n    }\n    for(i=1;i<=m;i++)\n    {\n\n        scanf(\"%ld\",&bb);\n        if((ans==0)||(ans==-1))\n        {\n\n        if(f[bb]==-1)\n            ans=-1;\n        if(f[bb]==0)\n          ans=1;\n        }\n        a[t]=f[bb];\n        t++;\n    }\n    if(ans==-1)\n    {\n\n        printf(\"Ambiguity\");\n        return 0;\n    }\n    if(ans==1)\n    {\n\n        printf(\"impossible\");\n        return 0;\n    }\n    printf(\"Possible\\n\");\n    for(i=1;i<=t-1;i++)\n    {\n\n        printf(\"%ld \",a[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    long int i,j,aa,bb,n,m,t=1,ans=0;\n    long int f[100001]={0},b[100001]={0},a[100001]={0};\n    scanf(\"%ld%ld\",&n,&m);\n    for(i=1;i<=n;i++)\n    {\n\n        scanf(\"%ld\",&aa);\n        if(f[aa]==0)\n            f[aa]=i;\n        else if(f[aa]!=0)\n            f[aa]=-1;\n    }\n    for(i=1;i<=m;i++)\n    {\n\n        scanf(\"%ld\",&bb);\n        if((ans==0)||(ans==-1))\n        {\n\n        if(f[bb]==-1)\n            ans=-1;\n        if(f[bb]==0)\n          ans=1;\n        }\n        a[t]=f[bb];\n        t++;\n    }\n    if(ans==-1)\n    {\n\n        printf(\"Ambiguity\");\n        return 0;\n    }\n    if(ans==1)\n    {\n\n        printf(\"Impossible\");\n        return 0;\n    }\n    printf(\"Possible\\n\");\n    for(i=1;i<=t-1;i++)\n    {\n\n        printf(\"%ld \",a[i]);\n    }\n    return 0;\n}"}
{"similarity_score": 0.2983751846381093, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "66cd89556180ff6b28e31979bc415c54", "bug_code_uid": "9cbbd2ffef7580b5f3f08a8b1827b7c5", "src_uid": "6422d76f71702e77808b1cc041962bb8", "apr_id": "f8122177bb2cac1a41daf185917d5372", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main (){\r\nint x=0,a,b,c,d,e,f,g,i;\r\n\r\nscanf(\"%d\",&a);\r\nfor(i=0;i<a;i++){\r\nscanf(\"%d %d %d %d %d %d\",&b,&c,&d,&e,&f,&g);\r\nif(b==c && d==e){x=b+d;}\r\nif(b==d ){x=c+e;}\r\nif(c==e){x=b+d;}\r\nif(b==f && d==g){x=d-b;}\r\nif(b==d && f==g){x=c-e;}\r\nif(c==e && f==g){x=d-b;}\r\nprintf(\"%d\",x);\r\n}\r\n\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main (){\r\nint a,b,c,d,e,f,g,i,ans=0;\r\nscanf(\"%d\",&g);\r\nfor(i=0;i<g;i++){\r\nscanf(\"%d %d %d %d %d %d\",&a,&b,&c,&d,&e,&f);\r\nans=0;\r\nif (a==c && c==e ){\r\nif((b>f && f>d) || (b<f && f<d) )\r\n    {ans=2;\r\n    }}\r\nelse if(b==d && d==f){\r\n    if((a>e && e>c) || (a<e && e<c))\r\n    {ans=2;}}\r\nelse{}\r\n\r\nprintf(\"%d\\n\",ans + abs(a-c)+abs(b-d));\r\n}}\r\n\r\n\r\n"}
{"similarity_score": 0.9992962702322308, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "2f425e60a6f0e5d7135b6f43dd0e9507", "bug_code_uid": "d47b3800cb938ea6a2fef228a8696737", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "4c28a0ad3c6d4801d07834ce7c0305a5", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n, i, j, temp, p = 1, largest_tower = 1, total_number = 1;\n    scanf(\"%d\", &n);\n    int str[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &str[i]);\n\n    for(i=0; i<n-1; i++){\n        for(j=0; j<n-1; j++){\n            if(str[j] > str[j+1]){\n                temp = str[j];\n                str[j] = str[j+1];\n                str[j+1] = temp;\n            }\n        }\n    }\n\n    for(i=0; i<n-1; i++){\n        if(str[i] == str[i+1]){\n            p++;\n            if(largest_tower < p);\n                largest_tower = p;\n        }\n        else{\n            p = 1;\n            total_number++;\n        }\n    }\n    printf(\"%d %d\", largest_tower, total_number);\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n, i, j, temp, p = 1, largest_tower = 1, total_number = 1;\n    scanf(\"%d\", &n);\n    int str[n];\n    for(i=0; i<n; i++)\n        scanf(\"%d\", &str[i]);\n\n    for(i=0; i<n-1; i++){\n        for(j=0; j<n-1; j++){\n            if(str[j] > str[j+1]){\n                temp = str[j];\n                str[j] = str[j+1];\n                str[j+1] = temp;\n            }\n        }\n    }\n\n    for(i=0; i<n-1; i++){\n        if(str[i] == str[i+1]){\n            p++;\n            if(largest_tower < p)\n                largest_tower = p;\n        }\n        else{\n            p = 1;\n            total_number++;\n        }\n    }\n    printf(\"%d %d\", largest_tower, total_number);\n\n    return 0;\n}\n"}
{"similarity_score": 0.9765124555160143, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "a2e2fcfffba3339ccee26b7132dbb5b4", "bug_code_uid": "f39c1f261fddee13479049df9fb3c38e", "src_uid": "d5913f8208efa1641f53caaee7624622", "apr_id": "51c255499adae2ac0f74adfeec178eb1", "difficulty": 1900, "tags": ["geometry", "combinatorics", "math", "sortings", "data structures", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n    int n;\n\n    int i,j,k,x1,x2,x3,y1,y2,y3;\n    long int c;\n    scanf(\"%d\",&n);\n    if(n<3){\n        printf(\"0\");\n    }\n    else{\n    c = (n)*(n-1)*(n-2)/6;\n    int coord[n][2];\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&coord[i][0],&coord[i][1]);\n\n    }\n    for(i=0;i<n;i++){\n        x1 = coord[i][0];\n        y1 = coord[i][1];\n        for(j=i+1;j<n;j++){\n            x2 = coord[j][0];\n            y2 = coord[j][1];\n            for(k=j+1;k<n;k++){\n                x3 = coord[k][0];\n                y3 = coord[k][1];\n                if(x1*y2 + x2*y3 + x3*y1-x2*y1-x3*y2-x1*y3 == 0) c--;\n            }\n        }\n    }\n    printf(\"%ld\",c);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n    int n;\n\n    int i,j,k,x1,x2,x3,y1,y2,y3;\n    long int c;\n    scanf(\"%d\",&n);\n    if(n<3){\n        printf(\"0\");\n    }\n    else{\n    /*c = (n)*(n-1)*(n-2)/6;*/\n    c = 0;\n    int coord[n][2];\n    for(i=0;i<n;i++){\n        scanf(\"%d %d\",&coord[i][0],&coord[i][1]);\n\n    }\n    for(i=0;i<n;i++){\n        x1 = coord[i][0];\n        y1 = coord[i][1];\n        for(j=i+1;j<n;j++){\n            x2 = coord[j][0];\n            y2 = coord[j][1];\n            for(k=j+1;k<n;k++){\n                x3 = coord[k][0];\n                y3 = coord[k][1];\n                if(x1*y2 + x2*y3 + x3*y1-x2*y1-x3*y2-x1*y3 != 0) c++;\n            }\n        }\n    }\n    printf(\"%ld\",c);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8083941605839416, "equal_cnt": 20, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 13, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "ccf3756137a0fa246d375fa63ab97441", "bug_code_uid": "b6f04d6749196a4879a15c785fa80f0c", "src_uid": "aca2346553f9e7b6e944ca2c74bb0b3d", "apr_id": "6c9add24d58c9020c50708b8628602f9", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    int t,a,b,c;\r\n    int x,y1,y2;\r\n    scanf(\"%d\",&t);\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d %d %d\",&a,&b,&c);\r\n        x = abs(a-1);\r\n        y1 = abs(b-c);\r\n        y2 = abs(c-1);\r\n    }\r\n    for(int i=0;i<t;i++){\r\n        if(x > (y1+y2)){\r\n            printf(\"1\\n\");\r\n        }\r\n        else if(x < (y1+y2)){\r\n            printf(\"2\\n\");\r\n        }\r\n        else{\r\n            printf(\"3\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    int a[t],b[t],c[t],x[t],y1[t],y2[t];\r\n    for(int i=0;i<t;i++){\r\n        scanf(\"%d %d %d\",&a[i],&b[i],&c[i]);\r\n        x[i] = abs(a[i]-1);\r\n        y1[i] = abs(b[i]-c[i]);\r\n        y2[i] = abs(c[i]-1);\r\n        // printf(\"%d %d %d\\n\",x,y1,y2);\r\n    }\r\n    for(int i=0;i<t;i++){\r\n        if(x[i] < (y1[i]+y2[i])){\r\n            printf(\"1\\n\");\r\n        }\r\n        else if(x[i] > (y1[i]+y2[i])){\r\n            printf(\"2\\n\");\r\n        }\r\n        else{\r\n            printf(\"3\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9807787087235091, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "5f01c6acb341e69b0294477716077a7c", "bug_code_uid": "3c091dc8de1c861aed310fc2bc5d0b29", "src_uid": "d5fc2bc618dd9d453a5e7ae30ccb73f3", "apr_id": "f40d1e0b65c9fb8f36ed7b1f99aabc1f", "difficulty": 800, "tags": ["brute force", "dp", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\r\n\r\nint minmoves(int maxid, int minid, int size)\r\n{\r\n\tint ans;\r\n\tint l = 0;\r\n\tint r = size;\r\n\r\n\tfor (int i = 0; i < 2; i++)\r\n\t{\r\n\t\tif ((maxid-l < r - maxid ? maxid-l : r - maxid) > (minid-l < r - minid ? minid-l : r - minid))\r\n\t\t{\r\n\t\t\tif (minid-l < r - minid)\r\n\t\t\t{\r\n\t\t\t\tl = minid+1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tr = minid;\r\n\t\t\t}\r\n\t\t\tminid = maxid;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (maxid-l < r - maxid)\r\n\t\t\t{\r\n\t\t\t\tl = maxid+1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tr = maxid;\r\n\t\t\t}\r\n\t\t\tmaxid = minid;\r\n\t\t}\r\n\t}\r\n\treturn l+(size-r);\r\n}\r\n\r\nint main() \r\n{\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int j = 0; j < n; j++)\r\n\t{\r\n\t\tint max, min, maxid, minid, size, input;\r\n\r\n\t\tscanf(\"%d\", &size);\r\n\r\n\t\tmax = 0;\r\n\t\tmin = 101;\r\n\r\n\r\n\t\tfor (int i = 0; i < size; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &input);\r\n\t\t\tif (max < input)\r\n\t\t\t{\r\n\t\t\t\tmax = input;\r\n\t\t\t\tmaxid = i;\r\n\t\t\t}\r\n\t\t\tif (min > input)\r\n\t\t\t{\r\n\t\t\t\tmin = input;\r\n\t\t\t\tminid = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tint ans = minmoves(maxid, minid, size);\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include \"stdio.h\"\r\n\r\nint minmoves(int maxid, int minid, int size)\r\n{\r\n\tint ans;\r\n\tint l = 0;\r\n\tint r = size;\r\n\r\n\tfor (int i = 0; i < 2; i++)\r\n\t{\r\n\t\tif ((maxid-l + 1 < r - maxid ? maxid - l + 1 : r - maxid) > (minid - l + 1 < r - minid ? minid-l + 1 : r - minid))\r\n\t\t{\r\n\t\t\tif (minid - l +1 < r - minid)\r\n\t\t\t{\r\n\t\t\t\tl = minid+1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tr = minid;\r\n\t\t\t}\r\n\t\t\tminid = maxid;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (maxid-l+1 < r - maxid)\r\n\t\t\t{\r\n\t\t\t\tl = maxid+1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tr = maxid;\r\n\t\t\t}\r\n\t\t\tmaxid = minid;\r\n\t\t}\r\n\t}\r\n\treturn l+(size-r);\r\n}\r\n\r\nint main() \r\n{\r\n\tint n;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int j = 0; j < n; j++)\r\n\t{\r\n\t\tint max, min, maxid, minid, size, input;\r\n\r\n\t\tscanf(\"%d\", &size);\r\n\r\n\t\tmax = 0;\r\n\t\tmin = 101;\r\n\r\n\r\n\t\tfor (int i = 0; i < size; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &input);\r\n\t\t\tif (max < input)\r\n\t\t\t{\r\n\t\t\t\tmax = input;\r\n\t\t\t\tmaxid = i;\r\n\t\t\t}\r\n\t\t\tif (min > input)\r\n\t\t\t{\r\n\t\t\t\tmin = input;\r\n\t\t\t\tminid = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tint ans = minmoves(maxid, minid, size);\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9533678756476683, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "ee2588fd2aa51cada4b9174b04cb81f5", "bug_code_uid": "8abde4e727bc9435cc4384ee565b7f97", "src_uid": "b30e09449309b999473e4be6643d68cd", "apr_id": "0e4d50e92f94abdb4907454ef6533cb2", "difficulty": 1100, "tags": ["dp", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\nint c,m,l,r,i,j,a2[100000];\nchar a[1000000];\ngets(a);\nscanf(\"%d\",&m);\nc=0;\nfor(i=1;i<strlen(a);i++)\n{\nif(a[i-1]==a[i])\n{\n    c=c+1;\na2[i]=c;\n}\nelse\n    a2[i]=c;\n}\na2[i]=c;\n\nfor(i=0;i<m;i++)\n{\nscanf(\"%d%d\",&l,&r);\nc=a2[r-1]-a2[l-1];\nprintf(\"%d\\n\",c);\n}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\nint c,m,l,r,i,j,a2[100000];\nchar a[1000000];\ngets(a);\nscanf(\"%d\",&m);\nc=0;\nint L=strlen(a);\nfor(i=1;i<L;i++)\n{\nif(a[i-1]==a[i])\n{\n    c=c+1;\na2[i]=c;\n}\nelse\n    a2[i]=c;\n}\na2[i]=c;\n\nfor(i=0;i<m;i++)\n{\nscanf(\"%d%d\",&l,&r);\nc=a2[r-1]-a2[l-1];\nprintf(\"%d\\n\",c);\n}\n}\n"}
{"similarity_score": 0.30866141732283464, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "2267f73bfcb4c13a96a12a748085b8b1", "bug_code_uid": "ff4a69fbafba18013441dd140f50e20f", "src_uid": "2c58d94f37a9dd5fb09fd69fc7788f0d", "apr_id": "b4d44e1bf8083c67913959dba7c76402", "difficulty": 1100, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int i,n,m,cnt=0;\n    int arr[1100];\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    for(i=1;i<n;i++){\n        if(arr[i]==arr[i-1])cnt++;\n        else cnt--;\n    }\n    printf(\"%s\\n\",cnt==0?\"YES\":\"NO\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n    int arr[1100];\n    int n,i,m;\n    memset(arr,0,sizeof(arr));\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&m);\\\n        arr[m]++;\n    }\n    int max=-1;\n    for(i=0;i<=1000;i++)\n        if(arr[i]>max)max=arr[i];\n    printf(\"%s\\n\",(n+1)/2<max?\"NO\":\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.9917355371900827, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "56a458fa4eb29a1a4bd03597afc7ba2f", "bug_code_uid": "40380806ce811e10e2e91886054d850a", "src_uid": "3a767b3040f44e3e2148cdafcb14a241", "apr_id": "f2e8f272bd5fa1c2b4b1d7dc53a3eb9c", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nchar mem[100000000];\n\nint comp(int val) {\n\tif (val < 100000000 && mem[val]) {\n\t\treturn mem[val] - 1;\n\t}\n\n\tif (val == 1) {\n\t\treturn 0;\n\t} else if (val == 2) {\n\t\treturn 1;\n\t} else {\n\t\tint mid = val / 2 + 1;\n\t\tint l1 = comp(val - mid);\n\t\tint l2 = comp(mid);\n\t\tint res = 1 + ((l1 + l2) % 2 == 0);\n\n\t\tif (val < 100000000) mem[val] = res;\n\t\treturn res;\n\t}\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tint val;\n\n\tint victories = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &val);\n\n\t\tvictories += comp(val);\n\n\t\tprintf(\"%d\\n\", ((1 + victories) % 2) + 1);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nchar mem[100000000];\n\nint comp(int val) {\n\tif (val < 100000000 && mem[val]) {\n\t\treturn mem[val] - 1;\n\t}\n\n\tif (val == 1) {\n\t\treturn 0;\n\t} else if (val == 2) {\n\t\treturn 1;\n\t} else {\n\t\tint mid = val / 2 + 1;\n\t\tint l1 = comp(val - mid);\n\t\tint l2 = comp(mid);\n\t\tint res = (l1 + l2) % 2 == 0;\n\n\t\tif (val < 100000000) mem[val] = res + 1;\n\t\treturn res;\n\t}\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\n\tint val;\n\n\tint victories = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &val);\n\n\t\tvictories += comp(val);\n\n\t\tprintf(\"%d\\n\", ((1 + victories) % 2) + 1);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.09950859950859951, "equal_cnt": 10, "replace_cnt": 5, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "79f582bbafcb90050d850610ab1c9d82", "bug_code_uid": "8193267ecd103eb7ebe9f453918a4ecd", "src_uid": "c3120f96894c17957bd8acb968bf37cd", "apr_id": "58a7b12a3dabaa31b2178d1badb37844", "difficulty": 1400, "tags": ["data structures", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\ntypedef long long int lli;\n\nint main()\n{\n    int n, m, k, i, j, h;\n    scanf (\"%d %d %d\", &n, &m, &k);\n    lli a[n];\n    int op[m][3];\n    int consulx[k];\n    int consuly[k];\n\n    for (i=1; i<=n; i++)\n    {\n        scanf (\"%d\", &a[i]);\n    }\n\n    for (i=1; i<=m; i++)\n    {\n        scanf (\"%d %d %d\", &op[i][1], &op[i][2], &op[i][3]);\n    }\n\n    for (i=1; i<=k; i++)\n    {\n        scanf (\"%d %d\", &consulx[i], &consuly[i]);\n    }\n\n    for (i=1; i<=k; i++)\n    {\n        for (j=consulx[i]; j<=consuly[i]; j++)\n        {\n            for (h=op[j][1]; h<=op[j][2]; h++)\n            {\n                a[h] += op[j][3];\n            }\n        }\n    }\n\n    for (i=1; i<=n; i++)\n    {\n        printf (\"%d \", a[i]);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\ntypedef long long int lli;\n\nlli a[100100];\nlli b[100100];\nlli c[100100];\nlli d[100100][3];\nlli paint[100100];\n\nint main()\n{\n    lli i,j,n,m,k,x,y;\n    scanf(\"%I64d %I64d %I64d\",&n,&m,&k);\n\n    for(i=1;i<=n;i++){\n        scanf(\"%I64d\",a+i);\n    }\n\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%I64d %I64d %I64d\",d[i],d[i]+1,d[i]+2);\n    }\n\n    for(i=0;i<k;i++)\n    {\n        scanf(\"%I64d %I64d\",&x,&y);\n        b[x]++;\n        c[y]++;\n    }\n\n    for(i=j=0;i<=m;i++)\n    {\n        j+=b[i];\n        paint[i]=j;\n        j-=c[i];\n    }\n\n    memset(b,0,sizeof(b));\n    memset(c,0,sizeof(c));\n\n    for(i=1;i<=m;i++)\n    {\n        d[i][2]*=paint[i];\n        b[d[i][0]]+=d[i][2];\n        c[d[i][1]]+=d[i][2];\n    }\n\n    for(i=1,j=0;i<=n;i++)\n    {\n        j+=b[i];\n        a[i]+=j;\n        j-=c[i];\n        printf(\"%I64d \",a[i]);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9974424552429667, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1cf13ce52d73b42cd61c1460a9549ad6", "bug_code_uid": "b3e6fc5a8ae623d24283823dee75aa36", "src_uid": "e5e937f080b20eaec5f12f1784ae6427", "apr_id": "10a3df0ac8e636f83b7d0f16212466ab", "difficulty": 1400, "tags": ["dp", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(void) {\r\n\tint n,m,o,p;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tscanf_s(\"%d\", &m);\r\n\t\tif ((m % 111 == 0) || (m % 11 == 0)) printf(\"YES\\n\");\r\n\t\telse {\r\n\t\t\to = m / 111;\r\n\t\t\tp = 0;\r\n\t\t\tfor (int i = 1; i <= o; i++) {\r\n\t\t\t\tif ((m - i) % 11 == 0) {\r\n\t\t\t\t\tp = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (p == 1)printf(\"YES\\n\");\r\n\t\t\telse printf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n}", "fixed": "#include<stdio.h>\r\nint main(void) {\r\n\tint n,m,o,p;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tscanf(\"%d\", &m);\r\n\t\tif ((m % 111 == 0) || (m % 11 == 0)) printf(\"YES\\n\");\r\n\t\telse {\r\n\t\t\to = m / 111;\r\n\t\t\tp = 0;\r\n\t\t\tfor (int i = 1; i <= o; i++) {\r\n\t\t\t\tif ((m - i) % 11 == 0) {\r\n\t\t\t\t\tp = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (p == 1)printf(\"YES\\n\");\r\n\t\t\telse printf(\"NO\\n\");\r\n\t\t}\r\n\t}\r\n}"}
{"similarity_score": 0.991304347826087, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "52604afca217542a59abcf4a0e031c86", "bug_code_uid": "c36c287cc88349da9ee7e94670600424", "src_uid": "ac33b73da5aaf2139b348a9c237f93a4", "apr_id": "8ed5939ab247f9a2b08235dcc0ce75e6", "difficulty": 1000, "tags": ["implementation", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "//Codeforces 499 //A. Watching a movie //Codeforces Round #284 (Div. 2)#if 1\n#include <stdio.h>\n\nint main()\n{\n\tint n, x;\n\tint l=0, r=0;\n\tint i;\n\tint temp;\n\tint count=0;\n\n\tscanf(\"%d %d\", &n, &x);\n\tfor(i=0; i<n; i++)\n\t{\n\t\ttemp = r+1;\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tcount += ((l-temp)%x) + (r-l) +1;\n\t}\n\tprintf(\"%d\", count);\n\n\n\treturn 0;\n}\n\n#endif\n", "fixed": "//Codeforces 499 //A. Watching a movie //Codeforces Round #284 (Div. 2)#if 1\n#if 1\n#include <stdio.h>\n\nint main()\n{\n\tint n, x;\n\tint l=0, r=0;\n\tint i;\n\tint temp;\n\tint count=0;\n\n\tscanf(\"%d %d\", &n, &x);\n\tfor(i=0; i<n; i++)\n\t{\n\t\ttemp = r+1;\n\t\tscanf(\"%d %d\", &l, &r);\n\t\tcount += ((l-temp)%x) + (r-l) +1;\n\t}\n\tprintf(\"%d\", count);\n\n\n\treturn 0;\n}\n\n#endif\n"}
{"similarity_score": 0.9970845481049563, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e6211d484b92c22d6dde71aa33793c4c", "bug_code_uid": "bf4d9b7d14ad391f71f604ad7cedf2e6", "src_uid": "ed5ea0e664aa986ab86e4e6746e8a1bf", "apr_id": "fbfdf96d66540aa725650a7694c40be2", "difficulty": 800, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     long long int n;\n     int j,q,i;\n     scanf(\"%d\",&q);\n     for(j=1;j<=q;j=j+1)\n     {\n     scanf(\"%lld\",&n);\n     int count=0,result=0,num=0;\n     for(n=n;n!=1;n=n+0)\n     {\n         if(n%5==0)\n         {\n             n=(4*n)/5;\n             count=count+1;\n         }\n         else if(n%3==0)\n         {\n             n=(2*n)/3;\n             result=result+1;\n         }\n         else if(n%2==0)\n         {\n             n=n/2;\n             num=num+1;\n         }\n         else\n         {\n             break;\n         }\n     }\n     if(n!=1)\n     {\n         printf(\"-1\");\n     }\n     else\n     {\n         printf(\"%d\",count+result+num);\n     }\n     }\n\n\n}", "fixed": "#include<stdio.h>\nint main()\n{\n     long long int n;\n     int j,q,i;\n     scanf(\"%d\",&q);\n     for(j=1;j<=q;j=j+1)\n     {\n     scanf(\"%lld\",&n);\n     int count=0,result=0,num=0;\n     for(n=n;n!=1;n=n+0)\n     {\n         if(n%5==0)\n         {\n             n=(4*n)/5;\n             count=count+1;\n         }\n         else if(n%3==0)\n         {\n             n=(2*n)/3;\n             result=result+1;\n         }\n         else if(n%2==0)\n         {\n             n=n/2;\n             num=num+1;\n         }\n         else\n         {\n             break;\n         }\n     }\n     if(n!=1)\n     {\n         printf(\"-1\\n\");\n     }\n     else\n     {\n         printf(\"%d\\n\",count+result+num);\n     }\n     }\n\n\n}"}
{"similarity_score": 0.9184455391351943, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1f05ca51ec14ab99e46571c1b1030b8b", "bug_code_uid": "b831b9efc595fb3fbc2cdc400ca91892", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "2617bcb8e71edf5ff4957000953d6165", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\ncmpfunc(const void * n, const void * m)\n{\n    return(*(int*)n - *(int*)m);\n}\n\nint main()\n{\n    int n,i,j,k,f=0,found=0, x, y, pos;\n    scanf(\"%d\", &n);\n    int a[n], b[n-1], c[n-2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(j=0;j<n-1;j++)\n    {\n        scanf(\"%d\", &b[j]);\n    }\n    for(k=0;k<n-2;k++)\n    {\n        scanf(\"%d\", &c[k]);\n    }\n    qsort(a,n,sizeof(int),cmpfunc);\n    qsort(b,n-1,sizeof(int),cmpfunc);\n    qsort(c,n-2,sizeof(int),cmpfunc);\n\n    i=0,j=0;\n    while(1)\n    {\n        if(a[i]!=b[j])\n        {\n            pos=i;\n            printf(\"%d \", a[i]);\n            break;\n        }\n        else\n            b[j]=0;\n        i++;\n        j++;\n    }\n     i=0,k=0;\n    while(1)\n    {\n        if(a[i]!=c[k] && i!=pos)\n        {\n            printf(\"%d \", a[i]);\n            break;\n        }\n        else\n            c[k]=0;\n        i++;\n        k++;\n    }\n\n}\n", "fixed": "#include<stdio.h>\n\ncmpfunc(const void * n, const void * m)\n{\n    return(*(int*)n - *(int*)m);\n}\n\nint main()\n{\n    int n,i,j,k,f=0,found=0, x, y, pos;\n    scanf(\"%d\", &n);\n    int a[n], b[n-1], c[n-2];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(j=0;j<n-1;j++)\n    {\n        scanf(\"%d\", &b[j]);\n    }\n    for(k=0;k<n-2;k++)\n    {\n        scanf(\"%d\", &c[k]);\n    }\n    qsort(a,n,sizeof(int),cmpfunc);\n    qsort(b,n-1,sizeof(int),cmpfunc);\n    qsort(c,n-2,sizeof(int),cmpfunc);\n\n    i=0,j=0;\n    while(1)\n    {\n        if(a[i]!=b[j])\n        {\n            pos=i;\n            printf(\"%d \", a[i]);\n            a[i]=0;\n            break;\n        }\n        i++;\n        j++;\n    }\n     i=0,k=0;\n    while(1)\n    {\n        if(a[i]==0)\n            i++;\n        if(a[i]!=c[k] && i!=pos)\n        {\n            printf(\"%d \", a[i]);\n            break;\n        }\n        i++;\n        k++;\n    }\n\n}\n"}
{"similarity_score": 0.9918552036199095, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "dca3ab206e27b484554aed668d6eeabe", "bug_code_uid": "ac048406213be719e776eb53167970c1", "src_uid": "1cc628b4e03c8b8e0c5086dc4e0e3254", "apr_id": "3d1b44ce18bf13997487d9f4b8876bd9", "difficulty": 900, "tags": ["brute force", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\nvoid solve()\r\n{\r\n    long long int a;\r\n    scanf(\"%lld\",&a);\r\n    if(a%2!=0)\r\n    printf(\"-1\\n\");\r\n    else\r\n    {\r\n        a=a/2;\r\n        if(a%3==0)\r\n        printf(\"%lld \",a/3);\r\n        else if(a%3==1)\r\n        printf(\"%lld \",a/3+1);\r\n        else if(a%3==2)\r\n        printf(\"%lld \",a/3 +1);\r\n         if(a%2==0)\r\n        printf(\"%lld\\n\",a/2);\r\n        else\r\n        printf(\"%lld \\n\",a/2);\r\n    }\r\n}\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    solve();\r\n}", "fixed": "// Online C compiler to run C program online\r\n#include <stdio.h>\r\nvoid solve()\r\n{\r\n    long long int a;\r\n    scanf(\"%lld\",&a);\r\n    if(a%2!=0 || a==2)\r\n    printf(\"-1\\n\");\r\n    else\r\n    {\r\n        a=a/2;\r\n        if(a%3==0)\r\n        printf(\"%lld \",a/3);\r\n        else if(a%3==1)\r\n        printf(\"%lld \",a/3+1);\r\n        else if(a%3==2)\r\n        printf(\"%lld \",a/3 +1);\r\n         if(a%2==0)\r\n        printf(\"%lld\\n\",a/2);\r\n        else\r\n        printf(\"%lld\\n\",a/2);\r\n    }\r\n}\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    solve();\r\n}"}
{"similarity_score": 0.8013698630136986, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "1fd205d3e0251fbab7ff7cdb63a4a99b", "bug_code_uid": "a53ed12a19f1b5a2b01d40e5144ee03b", "src_uid": "128372d890f632494e59e81287abd85a", "apr_id": "fa92d9ffa940f041347fe7f233449997", "difficulty": 800, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int it,i,di;\r\n    scanf(\"%d\",&it);\r\n    for(i=0;i<it;i++)\r\n    {\r\n        scanf(\"%d\",&di);\r\n        if(di%7==0)\r\n            printf(\"%d\\n\",di);\r\n        else\r\n            printf(\"%d\\n\",di-(di%7));\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int it,i,di;\r\n    scanf(\"%d\",&it);\r\n    for(i=0;i<it;i++)\r\n    {\r\n        scanf(\"%d\",&di);\r\n        if(di%7==0)\r\n            printf(\"%d\\n\",di);\r\n        else\r\n        {\r\n           di=di/10;\r\n           di=di*10;\r\n           while((di++%7)!=0);\r\n           printf(\"%d\\n\",--di);\r\n        }\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9973753280839895, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "11294614faa12a218f5f5ab3352bf6e7", "bug_code_uid": "198f1bd35552ea498bf91cfb405536be", "src_uid": "afce38aa7065da88d824d1d981b5b338", "apr_id": "8b41308a1e8fe4cea3ae57a521afc2e7", "difficulty": 1200, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint a[1005],n,m,i,f[2];\n\t\tf[0]=f[1]=0;\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tf[a[i]%2]++;\n\t\t}\n\t\tint sum=0;\n\t\tfor(i=1;i<=m && i <=f[1];i+=2)\n\t\t{\n\t\t\tint have = f[0], need = x - i;\n\t\t\tif(need <= f[0])\n\t\t\tsum=1;\n\t\t}\n\t\tif(sum)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint a[1005],n,m,i,f[2];\n\t\tf[0]=f[1]=0;\n\t\tscanf(\"%d %d\",&n,&m);\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tf[a[i]%2]++;\n\t\t}\n\t\tint sum=0;\n\t\tfor(i=1;i<=m && i <=f[1];i+=2)\n\t\t{\n\t\t\tint have = f[0], need = m - i;\n\t\t\tif(need <= f[0])\n\t\t\tsum=1;\n\t\t}\n\t\tif(sum)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n}\n"}
{"similarity_score": 0.4572396274343776, "equal_cnt": 19, "replace_cnt": 12, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "55ca846e1c643bec97de381d0e8c05ce", "bug_code_uid": "53d38bc67a7019d535559710c1256f9c", "src_uid": "cd2519f4a7888b2c292f05c64a9db13a", "apr_id": "eced9ab8a3a7e5c3ac14fa9c8ad460ee", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int n,t,s[100],p[100],k,f,g;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int i=0,j;\n        scanf(\"%d\",&n);\n\n        while(n>0)\n        {\n            s[i]=n%10;\n            n/=10;\n            i++;\n        }\n        for(j=0,f=0;j<i;j++)\n        {\n            g=pow(10,j);\n            k=s[j]*g;\n            if( k>0)\n            {\n                p[f]=s[j]*g;\n                f++;\n            }\n        }\n        printf(\"%d\\n\",f);\n\n        for(j=0;j<f;j++)\n        printf(\"%d \",p[j]);\n\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int t,n,i,j,p;\n    char s[101];\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int cnt=0;\n        scanf(\"%s\",s);\n        n=strlen(s);\n        for(i=0;i<n;i++)\n        {\n            if(s[i]>'0')\n            {\n              cnt++;\n            }\n        }\n\n        printf(\"%d\\n\",cnt);\n\n        for(i=0;i<n;i++)\n        {\n            if(s[i]>'0')\n            {\n                printf(\"%c\",s[i]);\n                for(j=i;j<n-1;j++)\n                    printf(\"0\");\n                    printf(\" \");\n            }\n        }\n        puts(\"\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9875986471251409, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "f50995c0dd4dead4ef9c62206a0ce628", "bug_code_uid": "70b3bfa9fb73260823b89db4d13b197b", "src_uid": "0c2550b2df0849a62969edf5b73e0ac5", "apr_id": "c6f766370fb6e5d28ad980b4dceefc5d", "difficulty": 1300, "tags": ["dp", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint func(int num);\nint main()\n{\n\t\n\tint q;\n\tscanf(\"%d\",&q);\n\tint i;\n\tint num,ans;\n\tfor(i=0;i<q;++i)\n\t{\n\t\tscanf(\"%d\",&num);\n\t\tif(num==2 || num==3 || num==5 || num==7)\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%d\\n\",func(num));\t\n\t}\n\n\treturn 0;\n}\nint func(int num)\n{\n\tint ans=num/4;\n\tint rem=num%4;\n\tif(rem==0)\n\t\treturn ans;\n\tif(rem==1)\n\t\treturn ans-1;\n\tif(rem==2)\n\t{\n\t\treturn ans;\n\t}\n\tif(rem==3)\n\t\treturn ans-1;\n}\n", "fixed": "#include <stdio.h>\nint func(int num);\nint main()\n{\n\t\n\tint q;\n\tscanf(\"%d\",&q);\n\tint i;\n\tint num,ans;\n\tfor(i=0;i<q;++i)\n\t{\n\t\tscanf(\"%d\",&num);\n\t\tif(num==2 || num==3 || num==5 || num==7 || num==11)\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%d\\n\",func(num));\t\n\t}\n\n\treturn 0;\n}\nint func(int num)\n{\n\tint ans=num/4;\n\tint rem=num%4;\n\tif(rem==0)\n\t\treturn ans;\n\tif(rem==1)\n\t\treturn ans-1;\n\tif(rem==2)\n\t{\n\t\treturn ans;\n\t}\n\tif(rem==3)\n\t\treturn ans-1;\n}\n"}
{"similarity_score": 0.8016194331983806, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "20ea785e8e43c4c461d1e0f2372c666e", "bug_code_uid": "f984f195a532d60ad6495fe41ea6c720", "src_uid": "d03ad531630cbecc43f8da53b02d842e", "apr_id": "e14ef5b06a180bf91af07abf1aac1be7", "difficulty": 1100, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int n,i,ans=0;\n    scanf(\"%i\",&n);\n    int a[n+1];\n    a[0]=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%i\",&a[i]);\n        ans=ans+a[i]-a[i-1];\n    }\n    if(ans<0)printf(\"0\");\n    else printf(\"%i\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    int n,i,ans=0;\n    scanf(\"%i\",&n);\n    int a[n+1];\n    a[0]=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%i\",&a[i]);\n        if(ans<a[i])ans=a[i];\n    }\n    printf(\"%i\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.8559322033898306, "equal_cnt": 12, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 5, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "c359e89a66a83b412c88d97b498cfb42", "bug_code_uid": "9e8dcc07aea5f0b37c69e265fcf40940", "src_uid": "782b819eb0bfc86d6f96f15ac09d5085", "apr_id": "2bf9219da0b6cf6c17eb0b7ff619e433", "difficulty": 1300, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\ntypedef long long int lint;\nlint qexp(lint a)\n{\n\tlint ans=1,b=2;\n\twhile(a)\n\t{\n\t\tif(a&1==1)\n\t\t{\n\t\t\tans*=b%mod;\n\t\t}\n\t\tb*=b;\n\t\ta/=2;\n\t}\n\treturn ans;\n}\nlint mod= 1000000007;\nint main()\n{\n\tlint n;\n\tscanf(\"%I64d\",&n);\n\tlint p= qexp(n);\n\tp%=mod;\n\tlint ans = (p*(p+1))%mod;\n\tans/=2;\n\tans%= mod;\n\n\tprintf(\"%I64d\\n\",ans);\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\ntypedef long long int lint;\nlint mod= 1000000007;\nlint qexp(lint a)\n{\n\tlint ans=1,b=2;\n\twhile(a)\n\t{\n\t\tif(a&1==1)\n\t\t{\n\t\t\tans= (ans *(b%mod))%mod;\n\t\t}\n\t\tb=(b*b)%mod;\n\t\ta/=2;\n\t}\n\treturn ans%mod;\n}\nint main()\n{\n\tlint n;\n\tscanf(\"%I64d\",&n);\n\tlint p= qexp(n);\n\tlint ans = (p*(p+1)/2)%mod;\n\tans%= mod;\n\n\tprintf(\"%I64d\\n\",ans);\n\n}\n"}
{"similarity_score": 0.8355140186915888, "equal_cnt": 13, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "eb6b8f650a339c825faeb69406167b24", "bug_code_uid": "1c10854ce818164d79b82172a5bea7ef", "src_uid": "430486b13b2f3be12cf47fac105056ae", "apr_id": "7f9a93a5e10fbaef6ac5c39e949ff77d", "difficulty": 1700, "tags": ["brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\nint main(){\nstatic char skupaj[6010];\nstatic char tab[2000];\nstatic char fill[2000];\nstatic char druga[2010];\nmemset(fill,'!',2000);\nscanf(\"%s\\n\",&tab);\nstrcat(tab,fill);\nstrcat(skupaj,fill);\nstrcat(skupaj,tab);\nscanf(\"%s\\n\",&druga);\nint i,j,k,l;\nint rez = 1000000000;\nfor(i=0; i<6000-strlen(druga); i++){\n\tint tmp = 0;\n\tfor(j=0; j<strlen(druga);j++){\n\t\tif(skupaj[i+j]!= druga[j]){\n\t\t\ttmp++;\n\t\t}\n\t}\n\trez =fmin(rez,tmp);\n}\nprintf(\"%d\\n\",rez);\n\n}", "fixed": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\nint main(){\nstatic char skupaj[9090];\nstatic char tab[3010];\nstatic char fill[3010];\nstatic char druga[3010];\nmemset(fill,'!',3000);\nscanf(\"%s\\n\",&tab);\nstrcat(skupaj,fill);\nstrcat(skupaj,tab);\nstrcat(skupaj,fill);\nscanf(\"%s\\n\",&druga);\nint i,j,k,l;\nint rez = 1000000000;\nfor(i=0; i<strlen(skupaj)-strlen(druga); i++){\n\tint tmp = 0;\n\tfor(j=0; j<strlen(druga);j++){\n\t\tif(skupaj[i+j]!= druga[j]){\n\t\t\ttmp++;\n\t\t}\n\t}\n\tif(rez > tmp)\n\t\trez =tmp;\n}\nprintf(\"%d\\n\",rez);\nreturn 0;\n}"}
{"similarity_score": 0.9836423118865867, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ae93832e277dc965ac1a40ce693780a2", "bug_code_uid": "0c21afaea6e8dc82306fbf39d6483aec", "src_uid": "6c52df7ea24671102e4c0eee19dc6bba", "apr_id": "5651d484f73b2169ddd295c85a8d62f3", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint Magnet_number(int number_magnet){\n    int magnet_type[number],count=0,cout=0;\n    for(int i=0;i<number_magnet;i++){\n       scanf(\"%d\",&magnet_type[i]);\n    }\n    for(int i=0;i<number_magnet;i++){\n    if((magnet_type[i]!= magnet_type[i+1])){\n         count++;\n    }\n    }\n    return count;\n\n}\nint main()\n{\n   int number,result;\n   scanf(\"%d\",&number);\n   result = Magnet_number(number);\n   printf(\"%d\\n\",result);\n\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint Magnet_number(int number_magnet){\n    int magnet_type[100*10000],count=0,cout=0;\n    for(int i=0;i<number_magnet;i++){\n       scanf(\"%d\",&magnet_type[i]);\n    }\n    for(int i=0;i<number_magnet;i++){\n    if((magnet_type[i]!= magnet_type[i+1])){\n         count++;\n    }\n    }\n    return count;\n\n}\nint main()\n{\n   int number,result;\n   scanf(\"%d\",&number);\n   result = Magnet_number(number);\n   printf(\"%d\\n\",result);\n\n}"}
{"similarity_score": 0.41700404858299595, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "e6ab5b50e48c743eef9c06fd1322468d", "bug_code_uid": "3fb2daefb9cd6df5566f4507a37c86cd", "src_uid": "d646834d58c519d5e9c0545df2ca4be2", "apr_id": "2847554542ff3634782966c36d0ad83f", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,m,i,j;\n\tint q=-1,p=0;\n\tscanf(\"%d%d\",&n,&m);\n\twhile (n--)\n\t{\n\t\tscanf(\"%d%d\",&i,&j);\n\t\tif (p>=i)\n\t\tp=j;\n\t}\n\tif (p>=m)\n\tprintf(\"YES\\n\");\n\telse \n\tprintf(\"NO\\n\");\n\treturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n\tint n,m,i,j,o;\n\tint q,p;\n\tscanf(\"%d%d\",&n,&m);\n\to=n;\n\twhile (n--)\n\t{\n\t\tscanf(\"%d%d\",&i,&j);\n\t\tif (n==(o-1))\n\t\t{\n\t\tq=i;\n\t\tp=j;\n\t\t}\n\t\tif (p>=i&&p<=j)\n\t\tp=j;\n\t\tif (q<=j&&q>=i)\n\t\tq=i;\n\t}\n\tif (p>=m&&q<=0)\n\tprintf(\"YES\\n\");\n\telse \n\tprintf(\"NO\\n\");\n\treturn 0;\n}"}
{"similarity_score": 0.9987437185929648, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ae6dc6364c2e2b021c834cd79676a10f", "bug_code_uid": "49f25f68d3e9049b448d7cc0e1a506d9", "src_uid": "4b33db3950303b8993812cb265fa9819", "apr_id": "40bae354249aaf19094cfa48b8a0f283", "difficulty": 800, "tags": ["brute force", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nint cmp(const void* a,const void* b)\r\n{\r\n    return (*(int*)a-*(int*)b);\r\n}\r\nvoid output(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        printf(\"%d \",ar[i]);\r\n    printf(\"\\n\");\r\n}\r\nvoid input(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&ar[i]);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int k=0;k<t;k++)\r\n    {\r\n        int n,oc=0,ec=0;\r\n        scanf(\"%d\",&n);\r\n        int ar[n];\r\n        input(ar,n);\r\n        for(int i=0;i<n-1;i++)\r\n        {\r\n            if(ar[i]%2==0)\r\n                ec++;\r\n            else\r\n                oc++;\r\n        }\r\n        if(oc>ec)\r\n            printf(\"%d\\n\",ec);\r\n        else\r\n            printf(\"%d\\n\",oc);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<ctype.h>\r\n#include<math.h>\r\nint cmp(const void* a,const void* b)\r\n{\r\n    return (*(int*)a-*(int*)b);\r\n}\r\nvoid output(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        printf(\"%d \",ar[i]);\r\n    printf(\"\\n\");\r\n}\r\nvoid input(int ar[],int n)\r\n{\r\n    for(int i=0;i<n;i++)\r\n        scanf(\"%d\",&ar[i]);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    for(int k=0;k<t;k++)\r\n    {\r\n        int n,oc=0,ec=0;\r\n        scanf(\"%d\",&n);\r\n        int ar[n];\r\n        input(ar,n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(ar[i]%2==0)\r\n                ec++;\r\n            else\r\n                oc++;\r\n        }\r\n        if(oc>ec)\r\n            printf(\"%d\\n\",ec);\r\n        else\r\n            printf(\"%d\\n\",oc);\r\n    }\r\n}"}
{"similarity_score": 0.9598163030998852, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "c335ca375fef4802967b4b78fd06af33", "bug_code_uid": "13a6c7ee0aa0c8534cc1a2fbbba89166", "src_uid": "3fe51d644621962fe41c32a2d90c7f94", "apr_id": "a0cfc66b1a6bfc9567d5dbc5d6e78d0e", "difficulty": 800, "tags": ["dp", "implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int r;\n    scanf(\"%d\\n\", &r);\n    while(r>0)\n    {\n       int b,e,f;\n       int a[100];\n        f=0;\n        scanf(\"%d\\n\", &b);\n        for(int i=0;i<b;i++)\n        {\n            scanf(\"%d\", &a[i]);\n        }\n\n\n        if(b!=1)\n        {\n            for(int j=1; j<b+1 &&  f==0; j++)\n          {\n            e=j;\n            if(a[j-1]%2==0)\n            {\n                printf(\"1\\n\");\n                f=(printf(\"%d\\n\", e ));\n\n            }\n          }\n            if(f==0)\n            {\n                printf(\"2\\n\");\n                printf(\"1 2\\n\");\n            }\n        }\n        else\n        {\n            if(a[0]%2==0)\n            {\n                printf(\"1\\n1\\n\");\n            }\n            else\n            {\n                printf(\"-1\");\n            }\n        }\n\n\n\n\n\n\n        r--;\n    }\n\n\n\n\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int r;\n    scanf(\"%d\\n\", &r);\n    while(r>0)\n    {\n       int b,e,f;\n       int a[100];\n        f=0;\n        scanf(\"%d\\n\", &b);\n        for(int i=0;i<b;i++)\n        {\n            scanf(\"%d\", &a[i]);\n        }\n\n\n        if(b!=1)\n        {\n            for(int j=1; j<b+1 &&  f==0; j++)\n          {\n            e=j;\n            if(a[j-1]%2==0)\n            {\n                printf(\"1\\n\");\n                f=(printf(\"%d\\n\", e ));\n\n            }\n          }\n            if(f==0)\n            {\n                printf(\"2\\n\");\n                printf(\"1 2\\n\");\n            }\n        }\n        else\n        {\n            if(a[0]%2==0)\n            {\n                printf(\"1\\n 1\\n\");\n            }\n            else\n            {\n                printf(\"-1\\n\");\n            }\n        }\n        r--;\n    }\n    return 0;\n}"}
{"similarity_score": 0.9865913902611151, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8c0e3279d6c42e7cd34f2cba7724096c", "bug_code_uid": "709585d9d013d179b4aca3948f884868", "src_uid": "c5389b39312ce95936eebdd83f510e40", "apr_id": "5620c8e931c1efc1c316e30985bc93d3", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, e, i, count_1, count_2;\r\n    char q;\r\n\r\n    scanf(\"%d\", &t);\r\n    for(e=0; e<t; e++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n\r\n        count_1=0;\r\n        count_2=0;\r\n\r\n        for(i=0; i<n; i++)\r\n        {\r\n            scanf(\" %c\", &q);\r\n\r\n                if(q=='Q')\r\n                {\r\n                    count_1=count_1+1;\r\n                }\r\n                else if(q=='A')\r\n                {\r\n                    count_2 = count_2 +1;\r\n                }\r\n\r\n\r\n        }\r\n\r\n        if(count_2>=count_1)\r\n        {\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"No\\n\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t, n, e, i, count_1, count_2;\r\n    char q;\r\n\r\n    scanf(\"%d\", &t);\r\n    for(e=0; e<t; e++)\r\n    {\r\n        scanf(\"%d\", &n);\r\n\r\n        count_1=0;\r\n        count_2=0;\r\n\r\n        for(i=0; i<n; i++)\r\n        {\r\n            scanf(\" %c\", &q);\r\n\r\n                if(q=='Q')\r\n                {\r\n                    count_1=count_1+1;\r\n                }\r\n                else if(q=='A' && count_1>count_2)\r\n                {\r\n                    count_2 = count_2 +1;\r\n                }\r\n\r\n\r\n        }\r\n\r\n        if(count_2>=count_1)\r\n        {\r\n            printf(\"Yes\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"No\\n\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.9654591406908172, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "716b67aedb778fddb104433b1898922a", "bug_code_uid": "44f8b0016b9699210669825a1d40e7b2", "src_uid": "adf4239de3b0034cc690dad6160cf1d0", "apr_id": "a8f8c932a07bbc4a740f91e7b1311a6d", "difficulty": 1000, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int t,i,j,even1,even2,odd1,odd2,ans,m,n,p[100000],q[100000];\n    scanf(\"%i\",&t);\n\n    for(i=0;i<t;i++)\n    {\n        even1=even2=odd1=odd2=0;\n        scanf(\"%i\",&n);\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%i\",&p[j]);\n            if(p[j]%2)odd1++;\n            else even1++;\n        }\n        scanf(\"%i\",&m);\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%i\",&q[j]);\n            if(q[j]%2)odd2++;\n            else even2++;\n        }\n        ans=even1*even2+odd1*odd2;\n        printf(\"%i\\n\",ans);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    long long int t,i,j,even1,even2,odd1,odd2,ans,m,n,p[100000],q[100000];\n    scanf(\"%I64d\",&t);\n\n    for(i=0;i<t;i++)\n    {\n        even1=even2=odd1=odd2=0;\n        scanf(\"%I64d\",&n);\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%I64d\",&p[j]);\n            if(p[j]%2)odd1++;\n            else even1++;\n        }\n        scanf(\"%I64d\",&m);\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%I64d\",&q[j]);\n            if(q[j]%2)odd2++;\n            else even2++;\n        }\n        ans=even1*even2+odd1*odd2;\n        printf(\"%I64d\\n\",ans);\n    }\n    return 0;\n\n}\n"}
{"similarity_score": 0.9886148007590133, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "6fcc34f03fdab8575905317c8f8541a2", "bug_code_uid": "2f15764fda22e1966394fd2d0155bacc", "src_uid": "9e9d4f58ebd8293025ab8004aeb8d343", "apr_id": "350d3754b4b62cf0ae67b6a8eb40b80f", "difficulty": 2800, "tags": ["dp", "divide and conquer", "greedy", "data structures"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#include<stdio.h>\nint main() {\n    register int n,k,t,a,b;\n    long long w,z,x[3008],y[3008];\n    for(n=3008; n--; x[n]=y[n]=0);\n    for(scanf(\"%d%d\",&n,&k); n--; z=b=0) {\n        for(scanf(\"%d\",&t); t--;)\n            for(scanf(\"%d\",&a),z+=a,++b,a=k+1;\n                    a-->b; y[a]=y[a]<(w=x[a-b]+z)?w:y[a]);\n        for(a=k+1; a--; x[a]=y[a]);\n    }\n    return !printf(\"%d\\n\",x[k]);\n}", "fixed": "#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#include<stdio.h>\nint main() {\n    int n,k,t,a,b;\n    long long w,z,x[3008],y[3008];\n    for(n=3008; n--; x[n]=y[n]=0);\n    for(scanf(\"%d%d\",&n,&k); n--; z=b=0) {\n        for(scanf(\"%d\",&t); t--;)\n            for(scanf(\"%d\",&a),z+=a,++b,a=k+1;\n                    a-->b; y[a]=y[a]<(w=x[a-b]+z)?w:y[a]);\n        for(a=k+1; a--; x[a]=y[a]);\n    }\n    return !printf(\"%I64d\\n\",x[k]);\n}"}
{"similarity_score": 0.938822184105203, "equal_cnt": 9, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "94988d9be460f8bec31fde1b3a608ec6", "bug_code_uid": "877956825cfafd514740f32fc2c9482f", "src_uid": "50738d19041f2e97e2e448eff3feed84", "apr_id": "7fd8c8c3aacbaab56796462aae3d625b", "difficulty": 1500, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nvoid testcase();\n\nint main()\n{\n    long long int i,t;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        testcase();\n    }\n    return 0;\n}\n\nvoid testcase()\n{\n    long long int i,j=0,a[20],n,sum_s=0,sum_n=0,c=0,digit_left,d=1,e,s,r=0;\n    scanf(\"%lld %lld\",&n,&s);\n    sum_s=s;\n    i=n;\n    while(i!=0)\n    {\n        j++;\n        a[j]=i%10;\n        i=i/10;\n    }\n    for(i=j;i>=1;i--)\n    {\n        sum_n=sum_n+a[i];\n        if(sum_n<=sum_s && i==1)\n            r=1;\n        else if(sum_n>=sum_s)\n            {\n                break;\n            }\n        else\n        {\n            c++;\n        }\n    }\n    if(r==1)\n        printf(\"0\\n\");\n    else\n    {\n    digit_left=j-c;\n    for(i=1;i<=digit_left;i++)\n    {\n        d=d*10;\n    }\n    e=d-(n%d);\n    printf(\"%lld\\n\",e);\n    }\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nvoid testcase();\n\nint main()\n{\n    long long int i,t;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        testcase();\n    }\n    return 0;\n}\n\nvoid testcase()\n{\n    long long int i,j=0,a[30],n,sum_s=0,sum_n=0,c=0,digit_left,d=1,e,s,r=0;\n    scanf(\"%lld %lld\",&n,&s);\n    sum_s=s;\n    i=n;\n    while(i!=0)\n    {\n        j++;\n        a[j]=i%10;\n        i=i/10;\n    }\n    for(i=j;i>=1;i--)\n    {\n        sum_n=sum_n+a[i];\n        if(sum_n<=sum_s && i==1)\n        {\n            r=1;\n            break;\n        }\n        else if(sum_n>sum_s)\n            {\n               break;\n            }\n        else if(sum_n<=sum_s)\n        {\n            if(sum_n<sum_s)\n            c++;\n        }\n    }\n    if(r==1)\n        printf(\"0\\n\");\n    else\n    {\n    digit_left=j-c;\n    for(i=1;i<=digit_left;i++)\n    {\n        d=d*10;\n    }\n    e=d-(n%d);\n    printf(\"%lld\\n\",e);\n    }\n}\n"}
{"similarity_score": 0.9731285988483686, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "d4dfdcb21ae7cf365ec80f27f9597eff", "bug_code_uid": "b96d839fa44765c11a263a5fe975b32b", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "79c1267d88e51c0647f68a5f8b64b435", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nlong long a[100001];\nlong long pom[n + 1];\n\nmain(){\n\n    int n, b;\n    scanf(\"%d\",&n);\n\n    int i;\n\n    for(i = 0; i <= n; i++){\n        a[i] = 0;\n        pom[i] = 0;\n    }\n\n    for(i = 1; i <= n; i++){\n        scanf(\"%d\",&b);\n        a[b]++;\n\n    }\n\n    pom[1] = a[1];\n\n    for(i = 2; i <=n; i++){\n        if(pom[i - 1] > pom[i - 2] + a[i] * i)\n            pom[i] = pom[i - 1];\n        else\n            pom[i] = pom[i - 2] + a[i] * i;\n    }\n    printf(\"%I64d\",pom[n]);\n\n\n\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nlong long a[100001];\nlong long pom[100001];\n\nmain(){\n\n    int b,n;\n    scanf(\"%d\",&n);\n\n    int i;\n\n    for(i = 0; i <= n; i++){\n        a[i] = 0;\n        pom[i] = 0;\n    }\n\n    for(i = 1; i <= n; i++){\n        scanf(\"%d\",&b);\n        a[b]++;\n\n    }\n\n    pom[1] = a[1];\n\n    for(i = 2; i <=100000; i++){\n        if(pom[i - 1] > pom[i - 2] + a[i] * i)\n            pom[i] = pom[i - 1];\n        else\n            pom[i] = pom[i - 2] + a[i] * i;\n    }\n    printf(\"%I64d\",pom[100000]);\n\n\n\n\n}\n"}
{"similarity_score": 0.6030405405405406, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "ee86239ecd01e3600424cfb452c32347", "bug_code_uid": "5f310550b294889bffe6e2b582386d76", "src_uid": "46920a192a8f5fca0f2aad665ba2c22d", "apr_id": "1a6bddeef22deed9758c6ef6d2bb761b", "difficulty": 1700, "tags": ["dp", "graphs", "shortest paths"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<iostream>\nusing namespace std;\nint main(){\n\tlong long int n,i,j,k,check[501]={0}, dynamic[501][501],remove[501],ans[501]={0};\n\tcin>>n;\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++)\n\t\t\tcin>>dynamic[i][j];\n\tfor(i=1;i<=n;i++)\n\t\tcin>>remove[i];\n\tfor(i=n;i>=1;i--){\n\t\tcheck[remove[i]]=1;\n\t\tfor(j=1;j<=n;j++)\n\t\t\tfor(k=1;k<=n;k++){\n\t\t\t\tif(dynamic[j][k]>dynamic[j][remove[i]]+dynamic[remove[i]][k])\n\t\t\t\t\tdynamic[j][k]=dynamic[j][remove[i]]+dynamic[remove[i]][k];\n\t\t\t\tif(check[j]==check[k] && check[j]==1)\n\t\t\t\t\tans[i]=ans[i]+dynamic[j][k];}}\n\tfor(i=1;i<=n;i++)\n\t\tcout<<ans[i]<<\" \";\n\treturn 0;}\n", "fixed": "#include<stdio.h>\nint main(){\n\tlong long int n,i,j,k,check[501]={0}, dynamic[501][501],remove[501],ans[501]={0};\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++)\n\t\t\tscanf(\"%lld\",&dynamic[i][j]);\n\tfor(i=1;i<=n;i++)scanf(\"%lld\",&remove[i]);\n\tfor(i=n;i>=1;i--){\n\t\tcheck[remove[i]]=1;\n\t\tfor(j=1;j<=n;j++)\n\t\t\tfor(k=1;k<=n;k++){\n\t\t\t\tif(dynamic[j][k]>dynamic[j][remove[i]]+dynamic[remove[i]][k])\n\t\t\t\t\tdynamic[j][k]=dynamic[j][remove[i]]+dynamic[remove[i]][k];\n\t\t\t\tif(check[j]==check[k] && check[j]==1)\n\t\t\t\t\tans[i]=ans[i]+dynamic[j][k];}}\n\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%lld \",ans[i]);\n\treturn 0;}\n"}
{"similarity_score": 0.32476319350473615, "equal_cnt": 11, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "301e785a1b6d9bc90423d38ac655264b", "bug_code_uid": "a4297b8eb738924e8077ccd83d1708ad", "src_uid": "77e2a6ba510987ed514fed3bd547b5ab", "apr_id": "13addde9d37fde5eccf846568823b9c8", "difficulty": 1100, "tags": ["implementation", "sortings", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar in[50000], out[50000];\n\tint i, n, m;\n\tgets(in);\n\tn = strlen(in);\n\tm = 49998;\t\t\n\tout[m] = in[n - 1];\n\tfor (i = n - 2; i >= 0; --i)\n\t\tif (in[i] >= out[m])\n\t\t\tout[--m] = in[i];\n\tputs(out + m);\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char c, in[100010], out[100010];\n    int i, j, n, m;\n    scanf(\"%s\", in);\n    n = strlen(in), m = 0, i = 0;\n    for (j = 1; j < n; ++j)\n        if (in[j] > in[i])\n            i = j;\n    for (c = in[i]; i < n && c >= 'a'; --c)\n        for (j = i; j < n; ++j)\n            if (in[j] == c)\n            {\n                out[m++] = c;\n                i = j + 1;\n            }\n    out[m] = '\\0';\n    puts(out);\n    return 0;\n}"}
{"similarity_score": 0.9830028328611898, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c46cb22cfee8b362a631aefadf8dce43", "bug_code_uid": "b12a7f1bd2502e554fca80abaaa20c3a", "src_uid": "7f934f96cbe3990945e5ebcf5c208043", "apr_id": "e4058f353636e3a19a6859881916f942", "difficulty": 800, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int n,c=0;\n    scanf(\"%d\",&n);\n    char a[n][101];\n    for(int i=0;i<n;i++){\n       scanf(\"%s\",a[i]);\n       for(int j=0;j<i;j++){\n           if(!strcmp(a[i],a[j])){\n               c=1;\n               break;\n           }\n       }\n       printf(c==1?\"YES\\n\":\"NO\\n\");\n    }\n    \n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <string.h>\nint main(){\n    int n,c=0;\n    scanf(\"%d\",&n);\n    char a[n][101];\n    for(int i=0;i<n;i++){\n       scanf(\"%s\",a[i]);\n       c=0;\n       for(int j=0;j<i;j++){\n           if(!strcmp(a[i],a[j])){\n               c=1;\n               break;\n           }\n       }\n       printf(c==1?\"YES\\n\":\"NO\\n\");\n    }\n    \n    return 0;\n}"}
{"similarity_score": 0.848068669527897, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "dbe82397a4d554485497995afcd5df7b", "bug_code_uid": "62f4298fd367d12e763a192cd115d296", "src_uid": "fd47f1eb701077abc5ec67163ad4fcc5", "apr_id": "1f33a7ec922f10abe1bd04e3203f9adf", "difficulty": 800, "tags": ["brute force", "implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint a[20];\r\nchar s[20];\r\nint main()\r\n{\r\n\tint t,n,i,j,k,r,b;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t  {\r\n\t  \tscanf(\"%d\",&n);\r\n\t  \tfor(j=1;j<=n;j++)\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t  for(k=1;k<=n;k++)\r\n\t  \t  {\r\n\t  \t  \tscanf(\"%d%s\",&b,s);\r\n\t  \t  \tfor(r=b-1;r>=0;r--)\r\n\t  \t  \t  {\r\n\t  \t  \t  \tif(s[r]=='D')\r\n\t  \t  \t  \t a[k]=(a[k]+1)%10;\r\n\t  \t  \t  \t else if(s[r]=='U')\r\n                  a[k]=(a[k]+9)%10;\t  \t  \t  \t  \r\n\t\t\t  }\r\n\t\t  }\r\n\t\t  for(j=1;j<=n;j++)\r\n\t\t  printf(\"%d \",a[j]);\r\n\t  }\r\n\treturn 0;\r\n}//submitTime:1667623099264\n", "fixed": "#include<stdio.h>\r\nint a[105][105],n[105];\r\nchar s[105];\r\nint main()\r\n{\r\n\tint t,i,j,k,r,b;\r\n\tscanf(\"%d\",&t);\r\n\tfor(i=1;i<=t;i++)\r\n\t  {\r\n\t  \tscanf(\"%d\",&n[i]);\r\n\t  \tfor(j=1;j<=n[i];j++)\r\n\t\t\tscanf(\"%d\",&a[i][j]);\r\n\t\t  for(k=1;k<=n[i];k++)\r\n\t  \t  {\r\n\t  \t  \tscanf(\"%d%s\",&b,s);\r\n\t  \t  \tfor(r=b-1;r>=0;r--)\r\n\t  \t  \t  {\r\n\t  \t  \t  \tif(s[r]=='D')\r\n\t  \t  \t  \t a[i][k]=(a[i][k]+1)%10;\r\n\t  \t  \t  \t else if(s[r]=='U')\r\n                  a[i][k]=(a[i][k]+9)%10;\t  \t  \t  \t  \r\n\t\t\t  }\r\n\t\t  }\r\n\t}\r\n\tfor(i=1;i<=t;i++)\r\n\t  {\r\n\t  \tfor(j=1;j<=n[i];j++)\r\n\t  \t  printf(\"%d \",a[i][j]);\r\n\t  \t  printf(\"\\n\");\r\n\t  }\r\n\treturn 0;\r\n}//submitTime:1667627153168\n"}
{"similarity_score": 0.29246676514032494, "equal_cnt": 29, "replace_cnt": 19, "delete_cnt": 6, "insert_cnt": 5, "fix_ops_cnt": 30, "lang": "GNU C11", "fix_code_uid": "91dc1a44cc877f41d204930355b24eb0", "bug_code_uid": "b43c5ae48223156d7eb77913fb87a248", "src_uid": "9640b7197bd7b8a59f29aecf104291e1", "apr_id": "11b465586844b697c9f90ccaa7be73b0", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n\n    for(int i=0; i<n; i++)\n    {\n        char s[101];\n        scanf(\" %[^\\n]\", &s);\n        //gets(s);\n\n        int len= strlen(s);\n        if(len%2 != 0)\n        {\n            printf(\"NO\\n\");\n            continue;\n        }\n\n        int count=0;\n        for(int i=0, j= len/2; i<len/2, j<n; i++, j++)\n        {\n            if(s[i] != s[j])\n               {\n                   printf(\"NO\\n\");\n                   count++;\n                   break;\n               }\n        }\n        if(count==0)\n        {\n            printf(\"YES\\n\");\n        }\n    }\n\n    return 0;\n}\n      \t\t\t      \t\t  \t    \t \t", "fixed": "//https://codeforces.com/problemset/problem/1619/A\n\n#include <stdio.h>\nint main()\n{\n\nint n;\nscanf(\"%d\",&n);\nint i=0;\nint val;\nint length,half;\nchar ch[100];\nchar rev[100];\nint square;\nint temp;\nint j;\nwhile (i<n)\n{\n\n    scanf(\"%s\",&ch);\n\n    length=strlen(ch);\n    half=length/2;\n     temp=half;\n     if (length>1)\n     {\n         square=1;\n     }\n\n\n   for (j=0;j<half;j++)\n    {\n        if (ch[j]!=ch[temp])\n        {\n            square =0;\n            break;\n\n        }\n        temp++;\n\n    }\n\nif (square==1 && length%2==0)\n    {\n        printf(\"YES\\n\");\n    }\n    else\n    {\n        printf(\"NO\\n\");\n\n    }\n\n\n\n\n    i++;\n}\n\n\n\n    return 0;\n}\n\n  \t   \t  \t\t \t\t   \t \t\t\t   \t \t \t"}
{"similarity_score": 0.9092273068267067, "equal_cnt": 18, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 16, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "af56ca990d9280115eace5b9a0a93664", "bug_code_uid": "03ddf30e7716d8922048765186e58520", "src_uid": "7975af65a23bad6a0997921c7e31d3ca", "apr_id": "93077094856df53fd79f9c7bddb0859d", "difficulty": 1100, "tags": ["brute force", "dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint fun(int n)\r\n{\r\n\tint i,j,k;\r\n\tint a[100000];\r\n\tscanf(\"%d\",&k);\r\n\tint shi,ge;\r\n\tint he=0,biaozhi=0;\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\t\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tbiaozhi=0;\r\n\t\tshi=a[i]/10;\r\n\t\tge=a[i]%10;\r\n\t\tfor(j=0;j<shi;j++)\r\n\t\t{\r\n\t\t\the=ge+j*10;\r\n\t\t\tif(he%k==0&&he>0)\r\n\t\t\t{\r\n\t\t\t\tbiaozhi=1;\r\n\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t}\r\n\t\tif(a[i]%k==0&&a[i]>0)\r\n\t\t\tbiaozhi=1;\r\n\t\tif(biaozhi==1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\nint main()\r\n{\r\n\tint n;\r\n\tint i,j,k;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++)\r\n\t\r\n\t{\r\n\t\tscanf(\"%d\",&k);\r\n\t\tfun(k);\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\nint fun(int n)\r\n{\r\n\tint i,j,k;\r\n\tint a[100000];\r\n\tscanf(\"%d\",&k);\r\n\tint shi,ge;\r\n\tint i0,i1,i2,i3,i4,i5,i6,i7,i8,i9;\r\n\tint he=0,biaozhi=0;\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\t\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tbiaozhi=0;\r\n\t\tif(a[i]>=k*10)\r\n\t\t\tbiaozhi=1;\r\n\t\telse\r\n\t\t{\r\n\t\t\tshi=a[i]/10;\r\n\t\t\tge=a[i]%10;\r\n\t\t\tfor(j=0;j<shi;j++)\r\n\t\t\t{\r\n\t\t\t\the=ge+j*10;\r\n\t\t\t\tif(he%k==0&&he>0)\r\n\t\t\t\t{\r\n\t\t\t\t\tbiaozhi=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\tif(a[i]%k==0&&a[i]>0)\r\n\t\t\t\tbiaozhi=1;\r\n\t\t\t } \r\n\t\tif(biaozhi==1)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\nint main()\r\n{\r\n\tint n;\r\n\tint i,j,k;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tgetchar();\r\n\t\tscanf(\"%d\",&k);\r\n\t\tfun(k);\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9911504424778761, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8db28986f63833626fea0d818819e381", "bug_code_uid": "aa3fc8a1124c2520e2f8a77c5bc340ad", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "eba389e294b4ed20d68b5691f8d1f016", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "long long t,n,k,c;main(){for(;~scanf(\"%lld\",t?n?&k:&n:&t);k?printf(\"%lld\\n\",c),c=k=0:0)for(;k&&n;n/=k)c+=n%k+1;}", "fixed": "long long t,n,k,c;main(){for(;~scanf(\"%lld\",t?n?&k:&n:&t);k?printf(\"%lld\\n\",c-1),c=k=0:0)for(;k&&n;n/=k)c+=n%k+1;}"}
{"similarity_score": 0.5894074462506554, "equal_cnt": 25, "replace_cnt": 17, "delete_cnt": 8, "insert_cnt": 0, "fix_ops_cnt": 25, "lang": "GNU C", "fix_code_uid": "fa9f48de3b77544ea2d96c63037adee9", "bug_code_uid": "8c6902c60219c4d8e47a9b82a0816a2c", "src_uid": "c3120f96894c17957bd8acb968bf37cd", "apr_id": "1f7d5279b185e8c5c99d60603c8a74b4", "difficulty": 1400, "tags": ["data structures", "implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n     long long int v[100050];\n     long long int mat[5000][5000]={0};\n     long long int cont[100050]={0};\n     long long int suma[100050]={0};\n  int main()\n  {\n       long long int a,b,c,N,M,i,j,k;\n       scanf(\"%I64d %I64d %I64d\",&N,&M,&k);\n      for(i=1;i<=N;i++)\n           scanf(\"%I64d\",&v[i]);\n     for(i=1;i<=M;i++){\n           scanf(\"%I64d %I64d %I64d\",&a,&b,&c);///construye la matriz de valores\n           for(j=a;j<=b;j++)\n                mat[i][j]+=c;\n        }\n     for(i=1;i<=k;i++){ /// cantidad de veces a multiplicar\n        scanf(\"%I64d %I64d\",&a,&b);\n         for(j=a;j<=b;j++)\n            cont[j]++;\n      }\n     for(i=1;i<=N;i++)\n        for(j=1;j<=N;j++)\n          mat[i][j]=mat[i][j]*cont[i];\n\n     for(i=1;i<=N;i++)\n        for(j=1;j<=N;j++)\n          suma[i]+=mat[j][i];\n\n      for(i=1;i<=N;i++){\n           printf(\"%I64d \",v[i]+suma[i]);\n       }\n\n      return 0;\n  }\n", "fixed": "#include<stdio.h>\n     long long int v[100010];\n     long long int mat[100010][3]={0};\n     long long int cont[100010]={0};\n     long long int sum[100010]={0};\n  int main()\n  {\n       long long int a,b,N,M,i,k;\n       scanf(\"%I64d %I64d %I64d\",&N,&M,&k);\n      for(i=0;i<N;i++)\n           scanf(\"%I64d\",&v[i]);\n     for(i=0;i<M;i++)\n           scanf(\"%I64d %I64d %I64d\",&mat[i][0],&mat[i][1],&mat[i][2]);///construye la matriz de valores\n     for(i=0;i<k;i++){ /// cantidad de veces a multiplicar\n        scanf(\"%I64d %I64d\",&a,&b);\n            cont[a-1]++;\n            cont[b]--;\n     }\n      for(i=1;i<M;i++)/// cantidad de veces a multiplicar\n            cont[i]=cont[i]+cont[i-1];\n     for(i=0;i<M;i++){\n          mat[i][2]=mat[i][2]*cont[i];}\n     for(i=0;i<M;i++){\n         sum[mat[i][0]-1]+=mat[i][2];\n         sum[mat[i][1]]+=-mat[i][2];\n        }\n      for(i=1;i<N;i++)\n        sum[i]=sum[i]+sum[i-1];\n      for(i=0;i<N;i++)\n           printf(\"%I64d \",v[i]+sum[i]);\n      return 0;\n  }\n"}
{"similarity_score": 0.9788306451612904, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "87e72f6c153abb1b1c5038a5877b6273", "bug_code_uid": "dcd1ef21aafa2d95dbd454173d7a7246", "src_uid": "1a9968052a363f04380d1177c764717b", "apr_id": "b6b3f4d9a9179a52a11875852f851aa7", "difficulty": 1700, "tags": ["graphs"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n\tint a;\n\tint b;\n\tint i;\n} edge;\n\nedge edges[100000] = {0};\nint node1[100000] = {0};\nint node2[100000] = {0};\n\nint fcmp(const void *a, const void *b) {\n\tedge c = *(edge *)a;\n\tedge d = *(edge *)b;\n\tif(c.a == d.a && c.b >= d.b) return -1;\n\tif(c.a < d.a) return -1;\n\treturn 1;\n}\n\nint main() {\n\tint n, m;\n\tint min;\n\tint from, to;\n\tscanf(\"%d%d\", &n, &m);\t\n\tint i;\n\n\tfor(i=0;i<m;i++) {\n\t\tscanf(\"%d%d\", &(edges[i].a), &(edges[i].b));\n\t\tedges[i].i = i;\n\t}\n\n\tqsort(edges, m, sizeof(edge), fcmp);\n\n\tmin = 1;\n\tfrom = 2;\n\tto = 3;\t\n\n\tfor(i=0;i<m;i++) {\n\t\tint mst = edges[i].b;\n\t\tint index = edges[i].i;\n\t\tif(mst) {\n\t\t\tmin++\n\t\t\tnode1[index] = 1;\n\t\t\tnode2[index] = min;\n\t\t} else {\n\t\t\tif(to > min) {\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tnode1[index] = from;\n\t\t\tnode2[index] = to;\n\t\t\tfrom ++;\n\t\t\tif(from == to) {\n\t\t\t\tfrom = 2;\n\t\t\t\tto++;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(i=0;i<m;i++) {\n\t\tprintf(\"%d %d\\n\", node1[i], node2[i]);\n\t}\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n\tint a;\n\tint b;\n\tint i;\n} edge;\n\nedge edges[100000] = {0};\nint node1[100000] = {0};\nint node2[100000] = {0};\n\nint fcmp(const void *a, const void *b) {\n\tedge c = *(edge *)a;\n\tedge d = *(edge *)b;\n\tif(c.a == d.a && c.b == d.b) return 0;\n\tif(c.a == d.a && c.b > d.b) return -1;\n\tif(c.a < d.a) return -1;\n\treturn 1;\n}\n\nint main() {\n\tint n, m;\n\tint min;\n\tint from, to;\n\tscanf(\"%d%d\", &n, &m);\t\n\tint i;\n\n\tfor(i=0;i<m;i++) {\n\t\tscanf(\"%d%d\", &(edges[i].a), &(edges[i].b));\n\t\tedges[i].i = i;\n\t}\n\n\tqsort(edges, m, sizeof(edge), fcmp);\n\n\tmin = 1;\n\tfrom = 2;\n\tto = 3;\t\n\n\tfor(i=0;i<m;i++) {\n\t\tint mst = edges[i].b;\n\t\tint index = edges[i].i;\n\t\tif(mst) {\n\t\t\tmin++;\n\t\t\tnode1[index] = 1;\n\t\t\tnode2[index] = min;\n\t\t} else {\n\t\t\tif(to > min) {\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tnode1[index] = from;\n\t\t\tnode2[index] = to;\n\t\t\tfrom ++;\n\t\t\tif(from == to) {\n\t\t\t\tfrom = 2;\n\t\t\t\tto++;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(i=0;i<m;i++) {\n\t\tprintf(\"%d %d\\n\", node1[i], node2[i]);\n\t}\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9968553459119497, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "70e07710bd551b74bbe3797b46fd360b", "bug_code_uid": "ca09491e91874a7458a77d9d5705578a", "src_uid": "9a92221c760a3b6a1e9318f948fe0473", "apr_id": "4962c43fbdf0fb9fecbe3152076cbefb", "difficulty": 1000, "tags": ["sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n\nint s[1500],max,say;\n\nint main() {\n\n\tint i,j,a=1,b,n,d[1005],w=4567;\n\n\tscanf(\"%d\",&n);\n\n\n\tfor(i=0 ; i<n ; i++)\n\t{\n\t\tscanf(\"%d\",&d[i]);\n\t\ts[d[i]]++;\n\t}\n\n\n\tfor(i=0 ; i<1000 ; i++)\n\t{\n\t\tif(s[i] >= max)\n\t\t\tmax=s[i];\n\t\tif(s[i]>0)\n\t\t\tsay++;\n\t}\t\n\n\tprintf(\"%d %d\",max,say);\n\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n\nint s[1500],max,say;\n\nint main() {\n\n\tint i,j,a=1,b,n,d[1005],w=4567;\n\n\tscanf(\"%d\",&n);\n\n\n\tfor(i=0 ; i<n ; i++)\n\t{\n\t\tscanf(\"%d\",&d[i]);\n\t\ts[d[i]]++;\n\t}\n\n\n\tfor(i=0 ; i<1001 ; i++)\n\t{\n\t\tif(s[i] >= max)\n\t\t\tmax=s[i];\n\t\tif(s[i]>0)\n\t\t\tsay++;\n\t}\t\n\n\tprintf(\"%d %d\",max,say);\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.7805714285714286, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e3155daba215c5fc398bf242c90c6827", "bug_code_uid": "7422d0d7e8eee4e4345447cb1be0d273", "src_uid": "8a1ceac1440f7cb406f12d9fc2ca0e20", "apr_id": "bca39f8891619ed4f2aafe18aa6b707b", "difficulty": 800, "tags": ["binary search", "constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#define pi 3.14159\n//char a[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};\n/*long long int q(long long int,long long int);\nlong long int q(long long int n,long long int r){\n    if(n/r>r) return q()\n}*/\n\n\nint main(){\n    long long int t=0,a=0,b=0,min=0,max=0,a1=0,b1=0,k=0,sum=0,i=0;\n    scanf(\"%lld\",&t);\n    while(t--){\n        scanf(\"%lld%lld\",&a,&b);\n        if(a<b){k=b;b=a;a=k;}\n        min=((a/3)>b)?b:a/3;\n        a-=min*3;\n        b-=min;\n        for(i=0,b--;(b>=0)&&(i<min);b--,i++){\n            a++;\n            if(a==3){\n                sum++;\n                b--;\n            }\n        }\n        printf(\"%lld\\n\",sum+min);\n        sum=0;min=0;\n    \n    \n    }\n    return 0;\n}\n\n/*long long int n=0,r=0;\n    while(~scanf(\"%lld\",&n)){\n        scanf(\"%lld\",&r);\n        printf(\"%c\",a[n%r]);\n        for(long long int i=0;i<n/r;i++){\n            printf(\"%c\",a[r-1]);\n        }putchar('\\n');\n    }*/", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#define pi 3.14159\n//char a[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};\n/*long long int q(long long int,long long int);\nlong long int q(long long int n,long long int r){\n    if(n/r>r) return q()\n}*/\n\n\nint main(){\n    long long int t=0,a=0,b=0,sum=0;\n    scanf(\"%lld\",&t);\n    while(t--){\n        scanf(\"%lld%lld\",&a,&b);\n        sum=(a+b)/4;\n        printf(\"%lld\\n\",(((a>b)?b:a)>sum)?sum:((a>b)?b:a));\n    }\n    return 0;\n}\n\n/*long long int n=0,r=0;\n    while(~scanf(\"%lld\",&n)){\n        scanf(\"%lld\",&r);\n        printf(\"%c\",a[n%r]);\n        for(long long int i=0;i<n/r;i++){\n            printf(\"%c\",a[r-1]);\n        }putchar('\\n');\n    }*/"}
{"similarity_score": 0.8888888888888888, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "a5d5f3a34cff0fde7e6d425d96e58eb7", "bug_code_uid": "4b7db406a99916a1d471873b633b6730", "src_uid": "1f435ba837f59b007167419896c836ae", "apr_id": "0589fd107437d8472e46716565af44a8", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint fu(int a,int b,int k)\n{\n\tif(k%2==0)\n\t\treturn k*a/2 - k*b/2;\n\telse\n\t\treturn (k+1)*a/2 - (k-1)*b/2;\n}\nint main()\n{\n\tlong long ans,n,a,b,k;\n\tscanf(\"%I64d\",&n);\n\twhile(n)\n\t{\n\t\tscanf(\"%I64d%I64d%I64d\",&a,&b,&k);\n\t\tans=fu(a,b,k);\n\t\tprintf(\"%I64d\\n\",ans);\n\t\tn--;\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nlong long fu(long long a,long long b,long long k)\n{\n\tif(k%2==0)\n\t\treturn k*a/2 - k*b/2;\n\telse\n\t\treturn (k+1)*a/2 - (k-1)*b/2;\n}\nint main()\n{\n\tlong long ans,n,a,b,k;\n\tscanf(\"%I64d\",&n);\n\twhile(n)\n\t{\n\t\tscanf(\"%I64d%I64d%I64d\",&a,&b,&k);\n\t\tans=fu(a,b,k);\n\t\tprintf(\"%I64d\\n\",ans);\n\t\tn--;\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.7634252539912917, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "1cb98592b7735a276d97712ad3278386", "bug_code_uid": "60440c93849563f3146eb04b5a6ee40e", "src_uid": "a37c3f2828490c70301b5b5deeee0f88", "apr_id": "d9474e19ea81b179d5f90456a0d123d8", "difficulty": 800, "tags": ["graphs"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,sum;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[a[a[i]]]==i)\n        {\n            sum=1;\n            break;\n        }\n        else\n            sum=0;\n    }\n    if(sum==1)\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,sum;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=1;i<=n;i++)\n    {\n        if(a[a[a[i]]]==i)\n        {\n            printf(\"YES\");\n            exit(0);\n        }\n        else\n            sum=0;\n    }\n        printf(\"NO\");\n}\n"}
{"similarity_score": 0.9309734513274336, "equal_cnt": 9, "replace_cnt": 2, "delete_cnt": 4, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "9ec28371edf930ff8affe10d0f25c63f", "bug_code_uid": "31a827d103f698484f6e742c67c4f31f", "src_uid": "6477fdad8455f57555f93c021995bb4d", "apr_id": "1effdef392fdce81c7d1b9e4beba4455", "difficulty": 900, "tags": ["binary search", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int d[100000],n,t1=0,t2=0,m=0,i,j,k,l;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&d[i]);\n    for(i=0;i<n;)\n    {\n        t1=0;\n        for(i=i;i<n;i++)\n        {\n            if(d[i]==1) t1++;\n            else break;\n        }\n        if(t1>t2) j=t2;\n        else j=t1;\n        m=j;\n        t2=0;\n        for(i=i;i<n;i++)\n        {\n            if(d[i]==2) t2++;\n            else break;\n        }\n        if(t1>t2) j=t2;\n        else j=t1;\n        m=j;\n    }\n    printf(\"%d\",2*m);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int d[100000],n,t1=0,t2=0,m=0,i,j,k,l;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&d[i]);\n    for(i=0;i<n;)\n    {\n        t1=0;\n        for(;i<n;)\n        {\n            if(d[i]==1) {t1++; i++;}\n            else break;\n        }\n        if(t1>t2) j=t2;\n        else j=t1;\n        if(j>m)\n        m=j;\n        t2=0;\n        for(;i<n;)\n        {\n            if(d[i]==2) {t2++; i++;}\n            else break;\n        }\n        if(t1>t2) j=t2;\n        else j=t1;\n        if(j>m)\n        m=j;\n    }\n    printf(\"%d\",2*m);\n    return 0;\n}\n"}
{"similarity_score": 0.5778546712802768, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "7b6e339f9f76af1f989ed3017b5666ae", "bug_code_uid": "2ab8d4a4a5edd6674a26ef11332a58bb", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "e4211ce0d5340559ba10f059a5d5af85", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n, value = -1;\n    char p, q;\n\n    scanf(\"%d\", &n);\n    while (scanf(\"%c%c\", &p, &q) != EOF && n-- > -1)\n    {\n\n        if (q - p >= 2)\n            value++;\n        if (n < -1)\n            break;\n    }\n    printf(\"%d\", value);\n    return 0;\n}\n\n\n      ", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    int n, value = 0;\n    int p, q;\n\n    scanf(\"%d\", &n);\n    while (n--)\n    {\n        scanf(\"%d%d\", &p, &q);\n        if (q - p >= 2)\n            value++;\n    }\n    printf(\"%d\", value);\n    return 0;\n}\n\n\n                                        "}
{"similarity_score": 0.1815068493150685, "equal_cnt": 6, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "78f217d8e3c1e896276d882832e0193a", "bug_code_uid": "aae1748e44d62ef0b6b2ec675bd50b43", "src_uid": "a0a6cdda2ce201767bf5418f445a44eb", "apr_id": "94161e1b487cc823176b11959a53523d", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int a[100]={0};\n    int number = 0,i = 0;\n    scanf(\"%d\",&number);\n    for(i=0;i<numberli++){\n        scanf(\"%d\",&a[i]);\n    }\n    printf(\"%d\",number/2);\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main(int argc, char* argv[])\n{\n    int n;\n    int ji = 0, ou = 0;\n    int a[100] = {0};\n    scanf(\"%d\", &n );\n    for(int i = 0;i < n; i++ )\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    for(int i = 0;i < n; i++ ){\n        if(a[i]%2==0){\n            ou++;\n        }else {\n            ji++;\n        }\n    }\n    printf(\"%d\", ou > ji ? ji : ou);\n    return 0;\n}"}
{"similarity_score": 0.7032019704433498, "equal_cnt": 13, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "143b443e597cb936d90d0c8ff0fdab4b", "bug_code_uid": "8c0a15d0482d43cc595f710a6c5463b6", "src_uid": "d5627b9fe5f6c5a7247e1f9d9e9b0c6a", "apr_id": "a61a70aeef8a956140ae6e3558dafa72", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main() {\r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n\r\n    for (int i=0; i<tc; i++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n+2];\r\n        for (int j=0; j<n; j++) {\r\n            scanf(\"%d\", &arr[j]);\r\n        }\r\n        int sum=0;\r\n        double average;\r\n\r\n        for (int j=0; j<n; j++) {\r\n            sum+=arr[j];\r\n            average = (double)sum/n;\r\n        }\r\n\r\n        int counter = 0;\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j] < average) {\r\n               counter++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", counter); \r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n\r\nint main() {\r\n    int tc;\r\n    scanf(\"%d\", &tc);\r\n\r\n    for (int i=0; i<tc; i++) {\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n        int arr[n+2];\r\n        for (int j=0; j<n; j++) {\r\n            scanf(\"%d\", &arr[j]);\r\n        }\r\n        int min1=100,min2=100,indexMin1,indexMin2;\r\n        double average;\r\n\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j] <= min1) {\r\n                min1 = arr[j];\r\n                indexMin1 = j;\r\n            } else {\r\n                min1 = min1;\r\n                indexMin1 = j;\r\n            }\r\n        }\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j] <= min2 && j != indexMin1) {\r\n                min2 = arr[j];\r\n            } else {\r\n                min2 = min2;\r\n            }\r\n        }\r\n        average = (double)(min1 + min2)/2;\r\n\r\n        int counter=0;\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j] <= average) {\r\n                counter++;\r\n            }\r\n        }\r\n\r\n        printf(\"%d\\n\", n - counter); \r\n    }\r\n}"}
{"similarity_score": 0.7287993282955499, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "0b4835259e77c156692332d9b29d75ea", "bug_code_uid": "ece5652b11b400414d82ca0b0e30842c", "src_uid": "2b346d5a578031de4d19edb4f8f2626c", "apr_id": "2e54b7f969c75973bbee0ac804b61d2a", "difficulty": 1000, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar isvowel(char s1)\n{ \tint i; \n\tif(s1=='a'|| s1=='e'|| s1=='i'|| s1=='o'|| s1=='u')\n\t  return s1;\n\t  \n}\nint main()\n{\tint len1,len2,i,c=0,n;\n\tchar s1[3000],s2[3000];\n\tscanf(\"%s\",s1);\n\tscanf(\"%s\",s2);\n\tlen1=strlen(s1);\n\tlen2=strlen(s2);\n\tif(len1!=len2)\n\t{\n\t printf(\"NO\");\n\t  return 0;\n\t  }\n\tfor(i=0;i<len1;i++)\n\t{\n\tif( isvowel(s1[i])==isvowel(s2[i]) )\n\t           {\n\t           c++;\n\t           }\n\t else if(!isvowel(s1[i])== !isvowel(s2[i]) )\n\t        { c++;\n\t        }\n\t else {\n\t printf(\"no\");\n\t return 0;}\n\t }\n\t printf(\"yes\");\n\t return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nint isvowel(char s1)\n{ \tint i; \n\tif(s1=='a'|| s1=='e'|| s1=='i'|| s1=='o'|| s1=='u')\n\t  return 0;\n\telse\t\n\t return 1;\n}\nint main()\n{\tint len1,len2,i,flag,n;\n\tchar s1[3000],s2[3000];\n\tscanf(\"%s\",s1);\n\tscanf(\"%s\",s2);\n\tlen1=strlen(s1);\n\tlen2=strlen(s2);\n\tif(len1!=len2)\n\t{\n\t printf(\"NO\");\n\t  return 0;\n\t  }\n\tfor(i=0;i<len1;i++)\n\t{\n\tif( isvowel(s1[i])==isvowel(s2[i]) )\n\t           {\n\t           flag=0;\n\t           }\n\t else if(!isvowel(s1[i])== !isvowel(s2[i]) )\n\t        {flag=0;\n\t        }\n\t else {\n\t printf(\"no\");\n\t return 0;}\n\t }\n\t if(flag==0)\n\t printf(\"yes\");\n\t return 0;\n}"}
{"similarity_score": 0.7842543527630583, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "e37158450be48996327a11ee2a4100a5", "bug_code_uid": "ca7c35c40dfa16837f3f0da62d6fa96d", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "507ec9d7a975d42e70e151c383b421c3", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int c=0;\n            char str[50][50];\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",str[i]);\n    }\n    for(int int i=1;i<=n;i++){\n        if(c==0){\n        if(str[i][0] == 'O' && str[i][1] == 'O'){\n            str[i][0] ='+';\n            str[i][1] ='+';\n            c=1;\n        }\n       if(str[i][2] == 'O' && str[i][3] == 'O'){\n            str[i][2] ='+';\n            str[i][3] ='+';\n            c=1;\n        }\n        }\n    }\n    if(c==1){\n        printf(\"YES\\n\");\n    }\n    for(int i=1;i<=n;i++){\n        printf(\"%s\",str);\n       printf(\"\\n\");\n    }\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    int c=0;\n            char str[10000][10000];\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",str[i]);\n    }\n    for(int i=1;i<=n;i++){\n        if(c==0){\n        if(str[i][0] == 'O' && str[i][1] == 'O'){\n            str[i][0] ='+';\n            str[i][1] ='+';\n            c=1;\n        }\n        if(c==0){\n       if(str[i][3] == 'O' && str[i][4] == 'O'){\n            str[i][3] ='+';\n            str[i][4] ='+';\n            c=1;\n        }\n        }\n        }\n    }\n    if(c==1){\n        printf(\"YES\\n\");\n         for(int i=1;i<=n;i++){\n        printf(\"%s\",str[i]);\n       printf(\"\\n\");\n    }\n\n    } else {\n        printf(\"NO\\n\");\n    }\n   }"}
{"similarity_score": 0.8110091743119267, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "d7017ad257c9389dcff81691aa8dee07", "bug_code_uid": "19f3a4e76dfb22777d423b7a5cd1630f", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "f70303a590e741c5615047a05ba9ea9d", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nchar s[100000000];\nint main(void) {\n    scanf(\"%s\",s);\n    int l=strlen(s);\n    int n=(s[l-2]-'0')*10+(s[l-1]*-'0');\n    if(n%4==0)\n    printf(\"4\\n\");\n    else\n    printf(\"0\\n\");\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\nchar s[100000000];\nint main(void) {\n    char s[1000000];\n    scanf(\"%s\",s);\n    int l=0; int i;\n    for(i=0;s[i]!='\\0';i++)\n    {\n        l++;\n    }\n    \n    int n=(s[l-2]-'0')*10+(s[l-1]-'0');\n    if(n%4==0)\n    printf(\"4\\n\");\n    else\n    printf(\"0\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.5301003344481605, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "87ef13a68475fcf71ea656018ff0becb", "bug_code_uid": "c1dc8b59cbc277bb976002286ddaaece", "src_uid": "b40059fe9cbdb0cc3b64c3e463900849", "apr_id": "97bec7df74676c2aea3cf4317919bb69", "difficulty": 1000, "tags": ["greedy", "math", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n \nint main(void) {\n int ch, n, i, j;\n int k=0, cnt=0; char s[ch+1];\n scanf(\"%d\",&ch);\n while(ch!=0)\n {  int flag2=0;\n   scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%d\",&a[i]);\n    }\n    int sum=0;\n    if(n>1)\n    {\n    for(i=0;i<n-1;i++)\n    {\n      if(a[i]==2048)\n      {\n        flag2=1;\n        break;\n      }\n     for(j=i+1;j>=0;j--)\n     {\n        if(a[j]==a[i])\n        {\n         \n          if(sum==2048)\n          {\n              flag2=1;\n              break;\n          }\n           sum+=a[i]+a[j];\n        }\n        else  if(sum==a[j])\n        {\n          sum+=a[j];\n        }\n     }\n    }\n    }\n    else if(n==1)\n    {\n      if(a[0]==2048)\n      {\n        flag2=1;\n      }\n    }\n    if(flag2==1)\n      printf(\"YES\\n\");\n    else\n      printf(\"NO\\n\");\n    ch--;\n }\n  return 0;\n}", "fixed": "#include <stdio.h>\n \nint main(void) {\n int ch, n, i;\n scanf(\"%d\",&ch);\n while(ch!=0)\n {  int flag2=0;\n   scanf(\"%d\",&n);\n    int a[n];\n    int sum=0;\n    for(i=0;i<n;i++)\n    {\n      scanf(\"%d\",&a[i]);\n      if(a[i]<=2048)\n      {\n        sum=sum+a[i];\n      }\n    }\n    if(sum>=2048)\n      printf(\"YES\\n\");\n    else\n      printf(\"NO\\n\");\n    ch--;\n }\n  return 0;\n}"}
{"similarity_score": 0.9150052465897167, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c9dc9c8451c3062d7277c8955f6d3f58", "bug_code_uid": "9f74e034dadb32f667d2b39f8e43c93e", "src_uid": "b5985b619652e606ac96554ecfb9346a", "apr_id": "4c5c60015449a688d5cfb9528ef47560", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "void sol();\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        sol();\r\n    }\r\n}\r\n\r\nvoid sol()\r\n{\r\n    int n;  scanf(\"%d\",&n);\r\n    int arr[n];\r\n    int sum = 0;\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        scanf(\"%d\",&arr[i]);\r\n        sum += arr[i];\r\n    }\r\n    int res;\r\n    if(sum > 0)\r\n    {\r\n        if(sum >= n)\r\n            res = sum - n;\r\n    }\r\n    else\r\n        res = 1;\r\n    printf(\"%d\\n\",res);\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nvoid sol();\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        sol();\r\n    }\r\n}\r\n\r\nvoid sol()\r\n{\r\n    int n;  scanf(\"%d\",&n);\r\n    int arr[n];\r\n    int sum = 0;\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        scanf(\"%d\",&arr[i]);\r\n        sum += arr[i];\r\n    }\r\n    int res;\r\n    if(sum > 0)\r\n    {\r\n        if(sum >= n)\r\n            res = sum - n;\r\n        else\r\n            res = 1;\r\n    }\r\n    else\r\n        res = 1;\r\n    printf(\"%d\\n\",res);\r\n}\r\n"}
{"similarity_score": 0.9183673469387755, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "97a9967d8e8d79b90b7be849e36f867c", "bug_code_uid": "31a60bb3b1b378260b4b426c02cd507c", "src_uid": "b46244f39e30c0cfab592a97105c60f4", "apr_id": "0eceb7e84ef5337ce15fd69b04fac075", "difficulty": 800, "tags": ["implementation", "number theory", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        printf(\"%d\\n\",(n/2));\n    }\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n        printf(\"%d\\n\",(n/2));\n    }\n}"}
{"similarity_score": 0.9325246398786959, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "260f7d50c37bcecedd5528f1cb33ec15", "bug_code_uid": "439bbc78e5de901a2cd92ff1ce935cc1", "src_uid": "bd5912fe2c5c37658f28f6b159b39645", "apr_id": "d98439d56b5b1bead7837de40b8f3847", "difficulty": 1000, "tags": ["implementation", "greedy", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char str[1000];\n  scanf(\"%s\", str);\n  int k;\n  scanf(\"%d\", &k);\n  if(k>strlen(str))\n  {\n    printf(\"impossible\");\n    exit(0);\n  }\n  char chr;\n  int sum = 0;\n  int black[strlen(str)];\n  for(int i = 0; i < strlen(str); i++)\n    black[i] = 1;\n  for(int i = 1; i<strlen(str); i++)\n  {\n    chr = str[i];\n    // printf(\"%c selected\\n\", chr);\n    for(int j = 0; j<i; j++)\n    {\n      if((chr == str[j]) && black[j])\n      {\n        //   printf(\"%d CHANGED\\n\",j);\n          black[j] = 0;\n          sum++;\n      }\n    }\n  }\n  printf(\"%d\",k + sum - strlen(str));\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char str[1000];\n  scanf(\"%s\", str);\n  int k;\n  scanf(\"%d\", &k);\n  if(k>strlen(str))\n  {\n    printf(\"impossible\");\n    exit(0);\n  }\n  char chr;\n  int sum = 0;\n  int black[strlen(str)];\n  for(int i = 0; i < strlen(str); i++)\n    black[i] = 1;\n  for(int i = 1; i<strlen(str); i++)\n  {\n    chr = str[i];\n    // printf(\"%c selected\\n\", chr);\n    for(int j = 0; j<i; j++)\n    {\n      if((chr == str[j]) && black[j])\n      {\n        //   printf(\"%d CHANGED\\n\",j);\n          black[j] = 0;\n          sum++;\n      }\n    }\n  }\n  int soln = k + sum - strlen(str);\n  if(soln > 0)  \n    printf(\"%d\",soln);\n  else\n    printf(\"%d\",0);\n}"}
{"similarity_score": 0.92, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ba2d1fa0ef9297a9d000ecfe6e5b2e98", "bug_code_uid": "a309e5758917758eb5e4498a0ca6a1fe", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "0e8e59ea2bb7da9ad7d9a0bc324906f0", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,count=0,j;\n\tchar mas[1000][5],a;\n\tscanf(\"%i\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<5;j++)\n\t\t{\n\t\t\tscanf(\"%s\",&mas[i][j]);\n\t\t\tif(a=mas[i][j]&&count!=1&&j!=0)\n\t\t\t{\n\t\t\t\tmas[i][j]=(mas[i][j-1]='+');\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t\ta=mas[i][j];\n\t\t}\n\t\t\n\t}\n\tif(count==0)\n\t\tprintf(\"NO\");\n\telse\n\t{\n\t\tprintf(\"YES\\n\");\t\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<5;j++)\n\t\t\t\tprintf(\"%s\",mas[i][j]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint n,i,count=0,j;\n\tchar mas[1000][5],a;\n\tscanf(\"%i\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%s\",&mas[i][0]);\n\t\tfor(j=0;j<5;j++)\n\t\t{\n\t\t\tif(a=='O'&&a==mas[i][j]&&count!=1&&j!=0)\n\t\t\t{\n\t\t\t\tmas[i][j]=(mas[i][j-1]='+');\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t\ta=mas[i][j];\n\t\t}\n\t\t\n\t}\n\tif(count==0)\n\t\tprintf(\"NO\");\n\telse\n\t{\n\t\tprintf(\"YES\\n\");\t\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tfor(j=0;j<5;j++)\n\t\t\t\tprintf(\"%c\",mas[i][j]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.49002217294900224, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "e92e5e30073902ab8575faaaac3e7951", "bug_code_uid": "78219d961760596976411278b82e7bd3", "src_uid": "10f4fc5cc2fcec02ebfb7f34d83debac", "apr_id": "c1f5b53cf29687101dcff331c4957862", "difficulty": 1200, "tags": ["binary search", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAX 100007\n\nint main()\n{\n\tint n, a[MAX], i, j, x, k = 1, q, y;\n\tscanf(\"%d\", &n);\n\tfor(i=0;i<n;++i)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\tj = 1;\n\t\twhile(j <= x)\n\t\t{\n\t\t\ta[k++] = i + 1;\n\t\t\t++j;\n\t\t}\n\t}\n\tscanf(\"%d\", &q);\n\twhile(q--)\n\t{\n\t\tscanf(\"%d\", &y);\n\t\tprintf(\"%d\\n\", a[y]);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define MAX 100007\n\nint main()\n{\n\tint n, a[MAX], i, q, y, l, r, mid;\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &a[0]);\n\tfor(i=1;i<n;++i)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\ta[i] += a[i - 1];\n\t\t//printf(\"%d \", a[i]);\n\t}\n\tscanf(\"%d\", &q);\n\twhile(q--)\n\t{\n\t\tscanf(\"%d\", &y);\n\t\tl = 0;\n\t\tr = n - 1;\n\t\twhile(r >= l)\n\t\t{\n\t\t\tmid = (l + r) / 2;\n\t\t\tif(a[mid] == y)\n\t\t\t{\n\t\t\t\t//printf(\"%d\\n\", mid + 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(y > a[mid])\n\t\t\t{\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t\tif(r < l)\n\t\t{\n\t\t\tprintf(\"%d\\n\", l + 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\\n\", mid + 1);\n\t\t}\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.868766404199475, "equal_cnt": 14, "replace_cnt": 7, "delete_cnt": 3, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C", "fix_code_uid": "0f264265a9751d83d4fa2127e9f1f861", "bug_code_uid": "cb72c445075c5d3c57ae7ac0b0920682", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "e0d9ad66dd9a9c12cf31244809e2149e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n    int m,o,n,i,a[150],b[150],s,s1,sum=0,c[150],k;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&m);\n    scanf(\"%d\",&o);\n    for (i=n;i>=1;i--)\n    {\n        a[i]=m%10;\n        m=m/10;\n    }\n    for (i=n;i>=1;i--)\n    {\n        b[i]=o%10;\n        o=o/10;\n    }\n    for (i=1;i<=n;i++)\n    {\n        if (a[i]>b[i])\n        {\n            s=a[i]-b[i];\n            k=10-a[i];\n            s1=k+b[i];\n            if (s>s1)\n                c[i]=s1;\n            else\n                c[i]=s;\n        }\n        else\n        {\n             s=b[i]-a[i];\n            k=10-b[i];\n            s1=k+a[i];\n            if (s>s1)\n                c[i]=s1;\n            else\n                c[i]=s;\n        }\n    }\n    for (i=1;i<=n;i++)\n    {\n        sum=sum+c[i];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<conio.h>\nint main()\n{\n    int m,o,n,i,s,s1,sum=0,c[1100],k;\n    char a[1100],b[1100];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",&a);\n    scanf(\"%s\",&b);\n    for (i=0;i<n;i++)\n    {\n        if (a[i]>b[i])\n        {\n            s=a[i]-b[i];\n            k=10-a[i];\n            s1=k+b[i];\n            if (s>s1)\n                c[i]=s1;\n            else\n                c[i]=s;\n        }\n        else\n        {\n             s=b[i]-a[i];\n            k=10-b[i];\n            s1=k+a[i];\n            if (s>s1)\n                c[i]=s1;\n            else\n                c[i]=s;\n        }\n\n\n    }\n    for (i=0;i<n;i++)\n    {\n        sum=sum+c[i];\n\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n"}
{"similarity_score": 0.996, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "949eaf39f2bb295153d8b10ac30bda00", "bug_code_uid": "8f74f2009518e12d7909c9f0d6fa01fd", "src_uid": "69850c2af99d60711bcff5870575e15e", "apr_id": "71341e23ec8545fa3f1ff1272dcfa278", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,n,a,b;\n    scanf(\"%d\",&n);\n    int ara[n-1],s=0;\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\",&ara[i]);\n    scanf(\"%d%d\",&a,&b);\n    for(i=a-1;i<b-a;i++)\n        s=s+ara[i];\n    printf(\"%d\",s);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,n,a,b;\n    scanf(\"%d\",&n);\n    int ara[n-1],s=0;\n    for(i=0;i<n-1;i++)\n        scanf(\"%d\",&ara[i]);\n    scanf(\"%d%d\",&a,&b);\n    for(i=a-1;i<b-1;i++)\n        s=s+ara[i];\n    printf(\"%d\",s);\n    return 0;\n}\n"}
{"similarity_score": 0.9971264367816092, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "d3b9792d5e11b44bc936385a2a195893", "bug_code_uid": "75ccbeb4f50e16ade4e6d1c94c9e0cb6", "src_uid": "6639d6c53951f8c1a8324fb24ef68f7a", "apr_id": "958403d30e93d8d3fb445dad218c5efa", "difficulty": 800, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\n\nint main()\n{ char* word;\n  int x,i,y;\n  scanf(\"%d\",&x);\n  \n  for(i=0;i<x;i++)\n  {\n     word=(char*)malloc(sizeof(char)*120);\n     scanf(\"%s\",word);\n     y=strlen(word);\n     if(y<=10)\n      printf(\"%s\\n\",word);\n     else\n      printf(\"%c%d%c\\n\",*word,(y-2),*(word+y-2));\n \n  }\n return 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\n\nint main()\n{ char* word;\n  int x,i,y;\n  scanf(\"%d\",&x);\n  \n  for(i=0;i<x;i++)\n  {\n     word=(char*)malloc(sizeof(char)*120);\n     scanf(\"%s\",word);\n     y=strlen(word);\n     if(y<=10)\n      printf(\"%s\\n\",word);\n     else\n      printf(\"%c%d%c\\n\",*word,(y-2),*(word+y-1));\n \n  }\n return 0;\n}"}
{"similarity_score": 0.9446640316205533, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "8736b545ea2f72b8569faaa7d32baecb", "bug_code_uid": "c744c168d1d182be744be7f405e0b0e4", "src_uid": "c7d8c71a1f7e6c7364cce5bddd488a2f", "apr_id": "1e0c38ba5f67522aebe4e2bf4b18f52e", "difficulty": 1700, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nchar str[333],tmp[333],hash[333];\n\nint main()\n{\n   int i,o=0,s=0;\n   gets(str+1);\n   for (i=1;str[i];i++)\n      if (str[i]!=' ')\n         tmp[++o]=str[i];\n   for (i=1;tmp[i];i++)\n      if (tmp[i]==',')\n         hash[i]=1;\n      else if (tmp[i]=='.')\n      {\n         if (!s)\n            hash[i-1]=1;\n         s=(s+1)%3;\n      }\n   for (i=1;i<=o;i++)\n   {\n      putchar(tmp[i]);\n      if (i<o&&hash[i])\n         putchar(' ');\n   }\n   puts(\"\");\n   return 0;\n}\n", "fixed": "#include <stdio.h>\n\nchar str[333],tmp[333],hash[333];\n\nint main()\n{\n   int i,o=0,s=0;\n   gets(str+1);\n   for (i=1;str[i];i++)\n      if (str[i]!=' '||str[i+1]>='0'&&str[i+1]<='9'&&tmp[o]>='0'&&tmp[o]<='9')\n         tmp[++o]=str[i];\n   for (i=1;tmp[i];i++)\n      if (tmp[i]==',')\n         hash[i]=1;\n      else if (tmp[i]=='.')\n      {\n         if (!s)\n            hash[i-1]=1;\n         s=(s+1)%3;\n      }\n   for (i=1;i<=o;i++)\n   {\n      putchar(tmp[i]);\n      if (i<o&&hash[i])\n         putchar(' ');\n   }\n   puts(\"\");\n   return 0;\n}\n"}
{"similarity_score": 0.8477366255144033, "equal_cnt": 11, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "59f2e332dad6fc8d345d6231bd38ed1d", "bug_code_uid": "63ee6e68b36f6f574e94f0a7d5931c18", "src_uid": "081f30ac27739002855e9d2aebe804c7", "apr_id": "e87642c71bf9b354b1db139ea8020773", "difficulty": 1200, "tags": ["constructive algorithms", "implementation", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main( )\n{\n\tint n,a,b,i,j=0,k,c=0,d=0,l=0;\n\tchar s[100005];\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tscanf(\"%s\",s);\n\tl=strlen(s);\n\tfor(i=a;i<b;i++)\n\t{\n\t\tif(s[i]==s[b])\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc++;\n\t\t}\n\t}\n\tfor(i=b;i>a;i--)\n\t{\n\t\tif(s[i]==s[a])\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td++;\n\t\t}\n\t}\n\tif(c<=d)\n\t{\n\t\tprintf(\"%d\\n\",c);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",d);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main( )\n{\n\tint n,a,b,i,j=0,k,c=0,d=0,l=0,p=0,q=0;\n\tchar s[100005];\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tscanf(\"%s\",s);\n\tl=strlen(s);\n\tif(b>=a)\n\t{\n\t\tp=a;\n\t\tq=b;\n\t}\n\telse\n\t{\n\t\tp=b;\n\t\tq=a;\n\t}\n\tfor(i=p-1;i<q-1;i++)\n\t{\n\t\tif(s[i]==s[q-1])\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc++;\n\t\t}\n\t}\n\tfor(i=q-1;i>p-1;i--)\n\t{\n\t\tif(s[i]==s[p-1])\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td++;\n\t\t}\n\t}\n\tif(c<=d && c<=1)\n\t{\n\t\tprintf(\"%d\\n\",c);\n\t}\n\telse if(d<=c && d<=1)\n\t{\n\t\tprintf(\"%d\\n\",d);\n\t}\n\telse\n\t{\n\t\tprintf(\"1\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.9967497291440953, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "976c5f8e8908df34de549f531ed69fff", "bug_code_uid": "276b467889b742c025fd8bb238219f40", "src_uid": "268f90d0595f7c51fb336ce377409dde", "apr_id": "3a03d900c46e190659bb93988c9c313b", "difficulty": 1700, "tags": ["combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#define MOD 1000000007\ntypedef long long int ll;\nll p[100001];\nchar a[100003];\nvoid powers()\n{\n    int i;\n    p[0]=1;\n    for(i=1;i<=100001;i++)\n        p[i]=(p[i-1]*2)%MOD;\n}\nll powe(ll b,ll n)\n{\n    if(n==0)return 1;\n    ll a=powe(b,n/2);\n    if(n%2==0)\n        return (a*a)%MOD;\n    else\n        return ((a*a)%MOD*b)%MOD;\n}\nint main()\n{\n    powers();\n    int i;\n    ll t=0,l,k;\n    scanf(\"%s\",a);\n    scanf(\"%I64d\",&k);\n    l=strlen(a);\n    for(i=0;i<l;i++)\n    {\n        if(a[i]=='0' || a[i]=='5')\n        t=t+p[i];\n    }\n    ll t2=powe(2,(ll)(l*k))-1;\n    while(t2<0)\n        t2+=MOD;\n   // printf(\"%lld\\n\",t2);\n    ll den=powe(2,l)-1;\n    while(den<0)\n        den+=MOD;\n    //printf(\"%lld\\n\",den);\n    ll invden=powe(den,MOD-2);\n    //printf(\"%lld\\n\",invden);\n    t2=(t2*invden)%MOD;\n    //printf(\"%lld\\n\",t2);\n    ll ans=(t*t2)%MOD;\n    printf(\"%I64d\\n\",ans);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#define MOD 1000000007\ntypedef long long int ll;\nll p[100001];\nchar a[100003];\nvoid powers()\n{\n    int i;\n    p[0]=1;\n    for(i=1;i<=100001;i++)\n        p[i]=(p[i-1]*2)%MOD;\n}\nll powe(ll b,ll n)\n{\n    if(n==0)return 1;\n    ll a=powe(b,n/2);\n    if(n%2==0)\n        return (a*a)%MOD;\n    else\n        return ((a*a)%MOD*b)%MOD;\n}\nint main()\n{\n    powers();\n    int i;\n    ll t=0,l,k;\n    scanf(\"%s\",a);\n    scanf(\"%I64d\",&k);\n    l=strlen(a);\n    for(i=0;i<l;i++)\n    {\n        if(a[i]=='0' || a[i]=='5')\n        t=(t+p[i])%MOD;\n    }\n    ll t2=powe(2,(ll)(l*k))-1;\n    while(t2<0)\n        t2+=MOD;\n   // printf(\"%lld\\n\",t2);\n    ll den=powe(2,l)-1;\n    while(den<0)\n        den+=MOD;\n    //printf(\"%lld\\n\",den);\n    ll invden=powe(den,MOD-2);\n    //printf(\"%lld\\n\",invden);\n    t2=(t2*invden)%MOD;\n    //printf(\"%lld\\n\",t2);\n    ll ans=(t*t2)%MOD;\n    printf(\"%I64d\\n\",ans);\n    return 0;\n}\n"}
{"similarity_score": 0.2874743326488706, "equal_cnt": 16, "replace_cnt": 10, "delete_cnt": 1, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "3976d41464dfd00aa028dba540ea676b", "bug_code_uid": "55af8c7963c7c855f26101df51044f90", "src_uid": "13aa9c49ffd62d2aa59f3cd8b16a277f", "apr_id": "25c161c8bab97c7890c92c2590bb52d6", "difficulty": 1900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define MAXN 1000000\n\nint main()\n{\n    int n;\n    char str[MAXN];\n    scanf(\"%d%s\", &n, str);\n    int a_cnt = 0, x = 0, fault = 0;\n    for ( int i = 0; i < n; i++) {\n        x += str[i] == '(' ? 1 : -1;\n        if ( x > 1 && str[i] == '(' )\n            a_cnt++;\n        else if ( x < 0 ) {\n            x = 0;\n            fault++;\n        }\n    }\n    int ans;\n    if ( x == 0 && fault == 0 )\n        ans = 0;\n    else if ( x == 2 )\n        ans = a_cnt;\n    else if ( x < 0 && fault == 2 )\n        ans = 1;\n    \n    printf(\"%d\\n\", ans);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#define MAXN 1000001\n\nint pref[MAXN], suf[MAXN];\nint okp[MAXN], oks[MAXN];\n\nint main()\n{\n    int n;\n    char str[MAXN], re[MAXN];\n    scanf(\"%d%s\", &n, str);\n    for ( int i = 0; i < n; i++)\n        re[n-i-1] = str[i] == '(' ? ')' : '(';\n    okp[0] = oks[n] = 1;\n    for ( int i = 0; i < n; i++) {\n        pref[i+1] = pref[i] + (str[i] == '(' ? 1 : -1);\n        okp[i+1] = okp[i] && (pref[i+1] >= 0);\n        suf[n-i-1] = suf[n-i] + (re[i] == '(' ? 1 : -1);\n        oks[n-i-1] = oks[n-i] && (suf[n-i-1] >= 0);\n    }\n    int ans = 0;\n    for ( int i = 0; i < n; i++) {\n        if ( !okp[i] || !oks[i+1] )\n            continue;\n        if ( str[i] == '(' ) {\n            if ( pref[i] > 0 && pref[i] - 1 - suf[i+1] == 0 )\n                ans++;\n        } else\n            if ( pref[i] + 1 - suf[i+1] == 0 )\n                ans++;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}"}
{"similarity_score": 0.9886104783599089, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "7d891f4c52726606cc0c21cc04f0b8f0", "bug_code_uid": "c56d9325ca167c5d21df72c3ded01852", "src_uid": "7f2441cfb32d105607e63020bed0e145", "apr_id": "bb69560888fcc6c776669e1c47018248", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\t{\t\n\t\tif(i%2==0)\n\t\t\tprintf(\"I love \");\n\t\telse\n\t\t\tprintf(\"I hate \");\n\t\t}\n\t\t{\n\t\tif(i==n)\n\t\t\tprintf(\"it\");\n\t\telse\n\t\t\tprintf(\"that \");\n\t\t}\n\t}\n}\n", "fixed": "#include<stdio.h>\nmain()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\t{\t\n\t\tif(i%2==0)\n\t\t\tprintf(\"I love \");\n\t\telse\n\t\t\tprintf(\"I hate \");\n\t\t}\n\t\t{\n\t\tif(i==n)\n\t\t\tprintf(\"it\");\n\t\telse\n\t\t\tprintf(\"that \");\n\t\t}\n\t}\n}\n"}
{"similarity_score": 0.616729088639201, "equal_cnt": 7, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "88de141049448efb116616b56879b360", "bug_code_uid": "47f88eb258848533edd219220de18a14", "src_uid": "4f8eac547bbd469a69de2f4aae4a87f0", "apr_id": "dde5d4c8609ee7598194dc69341e7ccb", "difficulty": 900, "tags": ["bitmasks", "constructive algorithms", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t,i;scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        long int n;scanf(\"%ld\",&n);\r\n        long int a[n],b[n],k=0;\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%ld\",&a[j]);\r\n            if(a[j]<min1){min1=a[j];}\r\n        }\r\n        k=a[0]&a[0];\r\n        for(j=0;j<n;j++){\r\n            k=k&a[j];\r\n\r\n        }\r\n       \r\n        printf(\"%ld\\n\",k);\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t,i;scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        long int n;scanf(\"%ld\",&n);\r\n        long int a[n],b[n],k=0;\r\n        for(int j=0;j<n;j++){\r\n            scanf(\"%ld\",&a[j]);\r\n           \r\n        }\r\n        k=a[0]&a[0];\r\n        for(int j=0;j<n;j++){\r\n            k=k&a[j];\r\n \r\n        }\r\n       \r\n        printf(\"%ld\\n\",k);\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.8666666666666667, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "d0e188e21c4590303a48ed587df98dda", "bug_code_uid": "32f4de6abd0254072ba275656c429df0", "src_uid": "22a3561ff70b802f080feaabc4a71298", "apr_id": "f07e372d509d71d600609e5342996f07", "difficulty": 900, "tags": ["combinatorics", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long ll;\nint fact(int n)\n\n{\n         int pro=1;\n\n         int m=1;\n\n         for(;m<=n;++m)\n\n                   pro=pro*m;\n\n         return(pro);\n}\nint cc(int a){\n\treturn fact(a)/2;\n}\nint main(){\n\tint n;\n\tint temp[100][2]={0};\n\tscanf(\"%d\",&n);\n\tchar temp_char[100];\n\tint cot_sum=0;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%s\",&temp_char);\n\t\tint asc=(int)temp_char[0];\n\t\tint count=0;\n\t\tfor(int j=0;temp[j][0];++j){\n\t\t\tif(asc==temp[j][0])\n\t\t\t{\n\t\t\t\ttemp[j][1]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcount++;\n\t\t\n\t\t}\n\t\tif(cot_sum==count)\n\t\t{\n\t\t\ttemp[cot_sum][0]=asc;\n\t\t\ttemp[cot_sum][1]=1;\n\t\t\tcot_sum++;\n\t\t\t\n\t\t}\n\t}\n\tint sum=0;\n\tfor(int j=0;temp[j][0];++j){\n\t\tif(temp[j][1]!=1){\n\t\t\tint lval=temp[j][1]/2;\n\t\t\tint rval=temp[j][1]-lval;\n\t\t\tsum+=cc(lval);\n\t\t\tsum+=cc(rval);\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d\\n\",sum);\n}\n", "fixed": "#include<stdio.h>\ntypedef long long ll;\n\nint cc(int a){\n\treturn a*(a-1)/2;\n}\nint main(){\n\tint n;\n\tint temp[100][2]={0};\n\tscanf(\"%d\",&n);\n\tchar temp_char[100];\n\tint cot_sum=0;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%s\",&temp_char);\n\t\tint asc=(int)temp_char[0];\n\t\tint count=0;\n\t\tfor(int j=0;temp[j][0];++j){\n\t\t\tif(asc==temp[j][0])\n\t\t\t{\n\t\t\t\ttemp[j][1]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcount++;\n\t\t\n\t\t}\n\t\tif(cot_sum==count)\n\t\t{\n\t\t\ttemp[cot_sum][0]=asc;\n\t\t\ttemp[cot_sum][1]=1;\n\t\t\tcot_sum++;\n\t\t\t\n\t\t}\n\t}\n\tint sum=0;\n\tfor(int j=0;temp[j][0];++j){\n\t\tif(temp[j][1]!=1){\n\t\t\tint lval=temp[j][1]/2;\n\t\t\tint rval=temp[j][1]-lval;\n\t\t\tsum+=cc(lval);\n\t\t\tsum+=cc(rval);\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d\\n\",sum);\n}\n"}
{"similarity_score": 0.7902274641954508, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "73dc3637c0735e5a7241c4bda3306269", "bug_code_uid": "cadcdb10a8af0802a17e4a6b704bbbde", "src_uid": "66777b8719b1756bf4b6bf93feb2e439", "apr_id": "f09e5911a91ecbf35303cb2a75ddc569", "difficulty": 800, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    char str[51];\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n, let[91], i, sum=0;\r\n        scanf(\"%d\", &n);\r\n        scanf(\"%s\", str);\r\n        for(i=65; i<91; i++)\r\n            let[i]=2;\r\n        for(i=0; i<n; i++)\r\n        {\r\n            if(let[str[i]]>0)\r\n            {\r\n                sum+=let[str[i]];\r\n                let[str[i]]--;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", sum);\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t;\r\n    char str[51];\r\n    scanf(\"%d\", &t);\r\n    while(t--)\r\n    {\r\n        int n, let[91], i, sum=0;\r\n        scanf(\"%d\", &n);\r\n        scanf(\"%s\", str);\r\n        for(i=65; i<91; i++)\r\n            let[i]=2;\r\n        for(i=0; i<n; i++)\r\n        {\r\n            if(let[str[i]]>0)\r\n            {\r\n                //printf(\"let[str[%d]] = %d\\n\", i, let[str[i]]);\r\n                sum+=let[str[i]];\r\n                //printf(\"sum = %d\\n\", sum);\r\n                let[str[i]]--;\r\n                //printf(\"let[str[%d]] = %d\\n\", i, let[str[i]]);\r\n                if(let[str[i]]<1)\r\n                    let[str[i]]++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", sum);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9501915708812261, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "68086a891861101a2b2eee8f64231531", "bug_code_uid": "eabde3d9dfc2daac1b1ad8a53cfcf561", "src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "apr_id": "7c992b63b1aec564ad8e0cef222a5160", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint n;\n\nint main()\n{\n     int cnt = 0;\n     int cur = 1;\n     int gap = 1;\n     int i = 0;\n     int j = 0;\n     \n     scanf(\"%d\",&n);\n     cur += gap;\n     ++gap;\n     ++cnt;\n     printf(\"%d\",cur);\n\n     while(cnt < n - 1){\n      cur += gap;\n      cur %= n;\n      ++gap;\n      ++cnt;\n      printf(\" %d\",cur);\n     }\n     printf(\"\\n\");\n     return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint n;\n\nint main()\n{\n     int cnt = 0;\n     int cur = 1;\n     int gap = 1;\n     int i = 0;\n     int j = 0;\n     \n     scanf(\"%d\",&n);\n     cur += gap;\n     ++gap;\n     ++cnt;\n     printf(\"%d\",cur);\n\n     while(cnt < n - 1){\n      cur += gap;\n      cur %= n;\n      if(cur == 0)\n           cur = n;\n      ++gap;\n      ++cnt;\n      printf(\" %d\",cur);\n     }\n     printf(\"\\n\");\n     return 0;\n}\n"}
{"similarity_score": 0.9986789960369881, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "24abc38c446a28fa110e09f6ed77b734", "bug_code_uid": "c1e47c3cc999045f7d3f37e998f0e2e5", "src_uid": "7276d7e3a4b594dc64c1ba56fb1a3628", "apr_id": "3a184f36b168a0afdaecb1171639863d", "difficulty": 800, "tags": ["greedy", "implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n       int n ,m;\r\n       scanf(\"%d %d\",&n,&m);\r\n       int arr[n];\r\n        int sum=0;\r\n        for(int j=0 ; j<n ; j++){\r\n            scanf(\"%d\",&arr[j]);\r\n            sum+=arr[j];\r\n        }\r\n        if(sum<=m) printf(\"0\");\r\n        else printf(\"%d \",(sum - m));\r\n        prinf(\"\\n\");\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n       int n ,m;\r\n       scanf(\"%d %d\",&n,&m);\r\n       int arr[n];\r\n        int sum=0;\r\n        for(int j=0 ; j<n ; j++){\r\n            scanf(\"%d\",&arr[j]);\r\n            sum+=arr[j];\r\n        }\r\n        if(sum<=m) printf(\"0\");\r\n        else printf(\"%d \",(sum - m));\r\n        printf(\"\\n\");\r\n    }\r\n}"}
{"similarity_score": 0.6644204851752021, "equal_cnt": 18, "replace_cnt": 7, "delete_cnt": 8, "insert_cnt": 3, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "ad875c3ec24c455b5e378541bb9d2300", "bug_code_uid": "3c05064f490f42ebd1980a838f8032e3", "src_uid": "6ae754639d96790c890f9d1ab259332a", "apr_id": "4d20edfedce93f85c8285738704c900f", "difficulty": 1000, "tags": ["brute force", "geometry", "math", "number theory"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int t,a,n,b,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        if(n%2!=0){\r\n            printf(\"NO\\n\");\r\n            break;\r\n        }\r\n        else if(n%2==0){\r\n        a=n/2;b=n/4;\r\n        for(i=1;i<=5000;i++){\r\n            if(i*i==a){\r\n                printf(\"YES\\n\");\r\n                break;\r\n            }\r\n            else if(n%4==0){\r\n                for(i=1;i<=5000;i++){\r\n                    if(i*i==b){\r\n                        printf(\"YES\\n\");\r\n                        break;\r\n                    }\r\n                    else{\r\n                        printf(\"NO\\n\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n                break;\r\n            }\r\n            }\r\n        }\r\n        }\r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int t,a,n,b,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        if(n%2!=0){\r\n            printf(\"NO\\n\");\r\n            \r\n        }\r\n        else{\r\n            a=n/2;\r\n            b=sqrt(a);\r\n            i=sqrt(n);\r\n            if(b*b==a){\r\n                printf(\"YES\\n\");\r\n                \r\n            }\r\n            else if(i*i==n){\r\n                printf(\"YES\\n\");\r\n                \r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.34408602150537637, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 5, "insert_cnt": 0, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "cc3b803328d86cb39ce1d416ec37e558", "bug_code_uid": "ba51fd46c89d5fb4a95c58b002b62063", "src_uid": "bfc2e7de37db4a0a74cdd55f2124424a", "apr_id": "2fd022e3162667aec2f0a2542ee0cf54", "difficulty": 1500, "tags": ["bitmasks", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int o;\n    scanf(\"%d\",&o);\n    while(o--)\n    {\n        int n, i, j, temp, cnt=0, mini = 1000000008, maxi, keep;\n        scanf(\"%d\",&n);\n        int a[n+5];\n        for(i=0; i<n; i++){\n            scanf(\"%d\",&a[i]);\n        }\n        for(i=0; i<n-1; i++){\n            if(a[i] > a[i+1])break;\n        }\n        if(i == n-1){\n            printf(\"%d\\n\",0);\n            continue;\n        }\n        maxi = a[i];\n        for(j=i+1; j<n; j++){\n            if(a[j] < mini){\n                mini = a[j];\n            }\n        }\n        keep = maxi - mini;\n        int val=0;\n        for(i=0; val <= keep; i++){\n            val = pow(2,i);\n            cnt++;\n        }\n        printf(\"%d\\n\",cnt-1);\n    }\n}\n", "fixed": "#include<stdio.h>\n\nint max(int a, int b){\n    return a > b? a: b;\n}\n\nint main(){\n    int o;\n    scanf(\"%d\",&o);\n    while(o--){\n        int n, a, i;\n        scanf(\"%d\",&n);\n\n        int Max = -1e9-5, x=0, cnt=0, diff=1;\n        for(i=0; i<n; i++){\n            scanf(\"%d\",&a);\n            x = max(x, Max-a);\n            Max = max(Max, a);\n        }\n\n        while(x>0){\n            cnt++;\n            x-=diff;\n            diff*=2;\n        }\n        printf(\"%d\\n\",cnt);\n    }\n}\n"}
{"similarity_score": 0.7947658402203857, "equal_cnt": 6, "replace_cnt": 1, "delete_cnt": 4, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "4ae3ff01d903af6d8dfa0a3e4519ce36", "bug_code_uid": "97b45c0fff86f03a6652f35dcb1030a2", "src_uid": "9d46ae53e6dc8dc54f732ec93a82ded3", "apr_id": "90fe6364abf434f7a26860595a6c7701", "difficulty": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n  char s[200010];\n  int m,a[200010],flag[200010],i,len,temp;\n  while(scanf(\"%s\",s)!=EOF)\n  {\n    len=strlen(s);\n    memset(a,0,sizeof(a));\n    memset(flag,0,sizeof(flag));\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++)\n    {\n      scanf(\"%d\",&temp);\n      a[temp]++;\n    }\n    for(i=0;i<len/2;i++)\n      while(a[i]--)\n        memset(&flag[i-1],1-flag[i-1],sizeof(int)*(len-2*i+2));\n    for(i=0;i<len;i++)\n      if(flag[i])\n        printf(\"%c\",s[len-i-1]);\n      else\n        printf(\"%c\",s[i]);\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\n\n                                                                                                                                                                                                                                                                                                ", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n  char s[200010];\n  int m,a[200010],flag[200010],i,len,temp;\n  while(scanf(\"%s\",s)!=EOF)\n  {\n    len=strlen(s);\n    memset(a,0,sizeof(a));\n    memset(flag,0,sizeof(flag));\n    scanf(\"%d\",&m);\n    for(i=0;i<m;i++)\n    {\n      scanf(\"%d\",&temp);\n      a[temp-1]++;\n    }\n    for(i=0;i<len/2;i++)\n      if(a[i]%2)\n        memset(&flag[i],1-flag[i],sizeof(int)*(len-2*i));\n    for(i=0;i<len;i++)\n      if(flag[i])\n        printf(\"%c\",s[len-i-1]);\n      else\n        printf(\"%c\",s[i]);\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\n\n                   "}
{"similarity_score": 0.5251299826689775, "equal_cnt": 12, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "bf716e4aee4dcb9aad7bcbd13879783f", "bug_code_uid": "aadd84b22de1dc367f05cc1838afa448", "src_uid": "6f819ce1d88d5211cd475a8673edba97", "apr_id": "e86658876af4ffac633ea473b4703b1d", "difficulty": 800, "tags": ["brute force", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include \"libs\\data_structures\\ordered\\ordered.h\"\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (size_t i = 0; i < t; i++) {\r\n        int n, m, nBot, nGarbage, mBot, mGarbage;\r\n        scanf(\"%d %d %d %d %d %d\", &n, &m, &nBot, &nGarbage, &mBot, &mGarbage);\r\n\r\n        if (mBot <= mGarbage)\r\n            printf(\"%d\\n\", mGarbage - mBot);\r\n        else\r\n            printf(\"%d\\n\", 2 * n - mBot - mGarbage);\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\nint min2(const int a, const int b) {\r\n    return a < b ? a : b;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for (size_t i = 0; i < t; i++) {\r\n        int n, m, nBot, mBot, nGarbage, mGarbage;\r\n        scanf(\"%d %d %d %d %d %d\", &n, &m, &nBot, &mBot, &nGarbage, &mGarbage);\r\n\r\n        int diffN, diffM;\r\n        if (mBot <= mGarbage) {\r\n            diffM = mGarbage - mBot;\r\n        } else\r\n            diffM = 2 * m - mBot - mGarbage;\r\n\r\n        \r\n        if (nBot <= nGarbage) {\r\n            diffN = nGarbage - nBot;\r\n        } else\r\n            diffN = 2 * n - nBot - nGarbage;\r\n        printf(\"%d\\n\", min2(diffN, diffM));\r\n    }\r\n\r\n    return 0;\r\n}"}
{"similarity_score": 0.8921484037963762, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "80df1db203732aceadcef7afc8d05d35", "bug_code_uid": "b0b6440f4636efff93eae575feca8119", "src_uid": "ee535e202b7662dbaa91e869c8c6cee1", "apr_id": "293ff30afd5fc4a68cf65ccef0aacc3a", "difficulty": 900, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nint n,i,j,b,sum=0;\nscanf(\"%d\",&n);\nint a[n];\nfor(i=0;i<n;i++){\nscanf(\"%d\",&a[i]);\nsum=sum+a[i];\n}\nint count=0, e=0;\nfor (i = 0; i < n; ++i) \n        {\n \n            for (j = i + 1; j < n; ++j)\n            {\n \n                if (a[i] > a[j]) \n                {\n \n                    b =  a[i];\n                    a[i] = a[j];\n                    a[j] = b;\n \n                }\n \n            }\n \n        }\nfor(i=n-1;i>=0;i++)\n{\nsum=sum-a[i];\ncount=count +a[i];\nif(count>sum)\n{ \ne++;\nbreak;\n}\nprintf(\"%d\",e);\nreturn 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\nint n,i,j,b,sum=0;\nscanf(\"%d\",&n);\nint a[n];\nfor(i=0;i<n;i++){\nscanf(\"%d\",&a[i]);\nsum=sum+a[i];\n}\nint count=0, e=0;\nfor (i = 0; i < n; ++i) \n        {\n \n            for (j = i + 1; j < n; ++j)\n            {\n \n                if (a[i] > a[j]) \n                {\n \n                    b =  a[i];\n                    a[i] = a[j];\n                    a[j] = b;\n \n                }\n \n            }\n \n        }\nfor(i=n-1;i>=0;i--)\n{\nsum=sum-a[i];\ncount=count +a[i];\nif(count<=sum)\n{ \ne++;\n}\nelse\n{\ne++;\nbreak;\n}\n}\nprintf(\"%d\",e);\nreturn 0;\n}"}
{"similarity_score": 0.7218649517684887, "equal_cnt": 12, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "0c90f1744867d2b4547dc955c74765c4", "bug_code_uid": "0b1240aa0e25e9fea6d977696753712d", "src_uid": "dc31adef80f06897ea2f5ef76854bcf1", "apr_id": "61b76ce4b161f45c5f061c960077ee4a", "difficulty": 1200, "tags": ["implementation", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\nint n,m,i,j;\n\nscanf(\"%d %d\", &n,&m);\n\nchar arr[n+1][m],are[n][m];\n\narr[0][0] = 'B';\n\nfor(i=0;i<n;i++){\n\n    for(j=1;j<m;j++){\n\n        if(arr[i][j-1] == 'B')\n            arr[i][j] = 'W';\n\n        else\n            arr[i][j] = 'B';\n\n    }\n\n    if(arr[i][0] == 'B')\n        arr[i+1] [0] = 'W';\n\n    else\n        arr[i+1][j] = 'B';\n\n}\n\n\n\nfor(i=0;i<n;i++){\n\n    for(j=0;j<m;j++){\n\n        scanf(\" %c\",&are[i][j] );\n\n        if(are[i][j] == '.')\n            printf(\"%c\",arr[i][j]);\n\n        else\n            printf(\"%c\",are[i][j]);\n\n    }\n\n    printf(\"\\n\");\n}\n\n\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\nint n,m,i,j;\n\nscanf(\"%d %d\", &n,&m);\n\nchar arr[n][m],are[n][m];\n\narr[0][0] = 'B';\n\nfor(i=0;i<n;i++){\n\n    if(arr[i][0] == 'B')\n        arr[i+1][0] = 'W';\n\n    else\n        arr[i+1][0] = 'B';\n\n    for(j=1;j<m;j++){\n\n        if(arr[i][j-1] == 'B')\n            arr[i][j] = 'W';\n\n        else\n            arr[i][j] = 'B';\n\n    }\n\n}\n\n\n\nfor(i=0;i<n;i++)\n\n    for(j=0;j<m;j++)\n\n        scanf(\" %c\",&are[i][j] );\n\n\nfor(i=0;i<n;i++){\n\n    for(j=0;j<m;j++){\n\n        if(are[i][j] == '.')\n            printf(\"%c\",arr[i][j]);\n\n        if(are[i][j] == '-')\n            printf(\"-\");\n\n    }\n\n    printf(\"\\n\");\n    }\n\nreturn 0;\n}"}
{"similarity_score": 0.9984472049689441, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "517b9db222d58fb2c4dbda64cdab61d2", "bug_code_uid": "84f63c0d773d7ab5d49263240354c39c", "src_uid": "3e27f1c06a263760f5b53c3afe4bf7ee", "apr_id": "8215c62e4f26eb3058dcfb72820e8a28", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\nmain()\r\n{\r\n    long long int i,t;\r\n    long long int n;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        long long int res;\r\n        long long int j;\r\n        j=n%6;\r\n        if(n<=6)\r\n        {\r\n            res=15;\r\n        }\r\n        else if(j==0)\r\n        {\r\n            res=(n/6)*15;\r\n\r\n        }\r\n        else if(j<=2)\r\n        {\r\n            res=(n/6-1)*15 +20;\r\n\r\n        }\r\n        else if(j<=4)\r\n        {\r\n            res=(n/6-1)*15 + 25;\r\n        }\r\n        else\r\n        {\r\n            res=(n/6+1)*15;\r\n        }\r\n        printf(\"%lld\\n\",res);\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n#include <math.h>\r\nmain()\r\n{\r\n    long long int i,t;\r\n    long long int n;\r\n    scanf(\"%lld\",&t);\r\n    for(i=0;i<t;i++)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        long long int res;\r\n        long long int j;\r\n        j=n%6;\r\n        if(n<=6)\r\n        {\r\n            res=15;\r\n        }\r\n        else if(j==0)\r\n        {\r\n            res=(n/6)*15;\r\n\r\n        }\r\n        else if(j<=2)\r\n        {\r\n            res=(n/6-1)*15 +20;\r\n\r\n        }\r\n        else if(j<=4)\r\n        {\r\n            res=(n/6-1)*15 + 25;\r\n        }\r\n        else\r\n        {\r\n            res=(n/6+1)*15;\r\n        }\r\n        printf(\"%lld\\n\",res);\r\n    }\r\n}\r\n"}
{"similarity_score": 0.9959903769045709, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "c71677a7bbf841956e85e3c2649c2c20", "bug_code_uid": "59cd2f866f862d8caf5c73d760ff937b", "src_uid": "ddc9201725e30297a5fc83f4eed75fc9", "apr_id": "e3a0513fb11c616d5073dcbcaed8de94", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int x=2,m,sum1=0,p=0,r=5,count=0,a=0;\n    char s[1000];\n    scanf(\"%s\",s);\n    m=strlen(s);long long sum=0,sum2=0,n=0;\n    if(sum==1)\n    {\n        printf(\"%d\",count);\n        return 0;\n    }\n    for(int i=0;i<m;i++)\n    {\n        sum+=s[i]-'0';\n    }\n    if(sum<=9)\n    {\n        printf(\"%d\",++count);\n        return 0;\n    }\n    while(sum>9)\n    {\n        sum2=sum;\n        while(sum2>0)\n        {\n            n+=sum2%10;\n            sum2/=10;\n        }\n        sum=n;\n        n=0;\n        count++;\n    }\n    count++;\n    printf(\"%d\",count);\n\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n    int x=2,m,sum1=0,p=0,r=5,count=0,a=0;\n    char s[1000000];\n    scanf(\"%s\",s);\n    m=strlen(s);long long sum=0,sum2=0,n=0;\n    if(m==1)\n    {\n        printf(\"%d\",count);\n        return 0;\n    }\n    for(int i=0;i<m;i++)\n    {\n        sum+=s[i]-'0';\n    }\n    if(sum<=9)\n    {\n        printf(\"%d\",++count);\n        return 0;\n    }\n    while(sum>9)\n    {\n        sum2=sum;\n        while(sum2>0)\n        {\n            n+=sum2%10;\n            sum2/=10;\n        }\n        sum=n;\n        n=0;\n        count++;\n    }\n    count++;\n    printf(\"%d\",count);\n\n}\n"}
{"similarity_score": 0.9991031390134529, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "2c8ad4eda40b918741fd13a59f4110fb", "bug_code_uid": "a85e35d39b494d5123405d8a933cf686", "src_uid": "79d26192a25cd51d27e916adeb97f9d0", "apr_id": "2f4072a8950977f820709bb858358645", "difficulty": 1700, "tags": ["dp", "constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n long long arr[5000001][2];\n int main()\n {\n     arr[0][1]=arr[1][1]=0;\n     int i,j;\n     for(i=2;i<5000001;i++)\n        arr[i][0]=i;\n     for(i=2;i<500001;i++)\n     {\n         if(arr[i][1]==0)\n         {\n             for(j=i;j<5000001;j+=i)\n             {\n                 while(arr[j][0]%i==0)\n                    arr[j][1]++,arr[j][0]/=i;\n             }\n         }\n         arr[i][1]+=arr[i-1][1];\n     }\nint task;\nscanf(\"%d\",&task);\nwhile(task--)\n{\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    printf(\"%lld\\n\",arr[a][1]-arr[b][1]);\n}\n\n }\n", "fixed": "#include<stdio.h>\n long long arr[5000001][2];\n int main()\n {\n     arr[0][1]=arr[1][1]=0;\n     int i,j;\n     for(i=2;i<5000001;i++)\n        arr[i][0]=i;\n     for(i=2;i<5000001;i++)\n     {\n         if(arr[i][1]==0)\n         {\n             for(j=i;j<5000001;j+=i)\n             {\n                 while(arr[j][0]%i==0)\n                    arr[j][1]++,arr[j][0]/=i;\n             }\n         }\n         arr[i][1]+=arr[i-1][1];\n     }\nint task;\nscanf(\"%d\",&task);\nwhile(task--)\n{\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    printf(\"%lld\\n\",arr[a][1]-arr[b][1]);\n}\n\n }\n"}
{"similarity_score": 0.987736900780379, "equal_cnt": 7, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1f3c658d529abf43cb79c6c04d925924", "bug_code_uid": "c08254f36544e262d71a3e80b7e8f145", "src_uid": "b36d7f840abe998185a988fe8dd2ec75", "apr_id": "071ce268fe267ce920775fd3745c3796", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for ( int i = 0 ; i < t ; ++i)\r\n    {\r\n        long int n , x;\r\n        scanf(\"%ld %ld\", &n , &x);\r\n        long int a[n];\r\n        for ( long int j = 0 ; j < n ; ++j)\r\n        {\r\n            scanf(\"%ld\", &a[j]);\r\n        }\r\n        long int sum = 0;\r\n        long long int sum2 = 0;\r\n        long int temp;\r\n        for (long int j = 0 ; j < n ; ++j)\r\n        {\r\n            sum2 = sum2 + a[j];\r\n            if (a[j]%x == 0) temp = a[j]/x;\r\n            else \r\n            {\r\n                temp = (a[j]/x)+1;\r\n            }\r\n            sum = sum + temp;\r\n        }\r\n        long int max = sum;\r\n        long int min;\r\n        if (sum2%x == 0)\r\n        {\r\n            min = sum2/x;\r\n        }\r\n        else\r\n        {\r\n            min = (sum2/x)+1;\r\n        }\r\n        printf(\"%ld %ld\\n\", min , max);\r\n    }\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for ( int i = 0 ; i < t ; ++i)\r\n    {\r\n        long int n , x;\r\n        scanf(\"%ld %ld\", &n , &x);\r\n        long int a[n];\r\n        for ( long int j = 0 ; j < n ; ++j)\r\n        {\r\n            scanf(\"%ld\", &a[j]);\r\n        }\r\n        long long int sum = 0;\r\n        long long int sum2 = 0;\r\n        long long int temp;\r\n        for (long int j = 0 ; j < n ; ++j)\r\n        {\r\n            sum2 = sum2 + a[j];\r\n            if (a[j]%x == 0) temp = a[j]/x;\r\n            else \r\n            {\r\n                temp = (a[j]/x)+1;\r\n            }\r\n            sum = sum + temp;\r\n        }\r\n        long long int max = sum;\r\n        long long int min;\r\n        if (sum2%x == 0)\r\n        {\r\n            min = sum2/x;\r\n        }\r\n        else\r\n        {\r\n            min = (sum2/x)+1;\r\n        }\r\n        printf(\"%lld %lld\\n\", min , max);\r\n    }\r\n}"}
{"similarity_score": 0.881578947368421, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "f481db41ff66d011bb7ae2f101ed1536", "bug_code_uid": "b840c7f405712705aa7303670c7db85a", "src_uid": "84372885f2263004b74ae753a2f358ac", "apr_id": "9cbcc4722d6bcebba431749668e514ce", "difficulty": 2000, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\ndouble a,b,c,d,e,f;\nscanf(\"%lf %lf %lf\",&a, &b,&c);\nif(a==0 && c==0 && b!=0 ||b==0 && c==0 && a!=0)\n    printf(\"1\\n0.0000000000\");\nelse if(a==0 && b==0 && c!=0)\n{\n    printf(\"0.0000000000\");\n}\nelse if(a==0 && b==0 && c==0)\nprintf(\"-1\");\nelse if(a==0&& b!=0 && c!=0)\n    printf(\"1\\n%0.12lf \",(-c/b));\nelse\n{\n    d=b*b-4*a*c;\n    if(d<0)\n    {\nprintf(\"0\");\n}\n    else\n    {\n        e=(((-b)/(2*a))-sqrt(d)/(2*a));\n        f=(((-b)/(2*a))+sqrt(d)/(2*a));\n        if(e!=f)\n        {\n        printf(\"2\\n%.12lf\\n\",e);\n        printf(\"%.12lf\",f);\n        }\n        else\n        {\n         printf(\"1\\n%.12lf\",e);\n        }\n\n    }\n}    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\ndouble a,b,c,d,e,f;\nscanf(\"%lf %lf %lf\",&a, &b,&c);\nif(a==0 && c==0 && b!=0 ||b==0 && c==0 && a!=0)\n    printf(\"1\\n0.0000000000\");\nelse if(a==0 && b==0 && c!=0)\n{\n    printf(\"0.0000000000\");\n}\nelse if(a==0 && b==0 && c==0)\nprintf(\"-1\");\nelse if(a==0&& b!=0 && c!=0)\n    printf(\"1\\n%0.12lf \",(-c/b));\nelse\n{\n    d=b*b-4*a*c;\n    if(d<0)\n    {\nprintf(\"0\");\n}\n    else\n    {\n        e=(((-b)/(2*a))-sqrt(d)/(2*a));\n        f=(((-b)/(2*a))+sqrt(d)/(2*a));\n        if(e!=f)\n        {\n         if(e<f)\n         {\n        printf(\"2\\n%.12lf\\n\",e);\n        printf(\"%.12lf\",f);\n         }\n         else\n         {\n        printf(\"2\\n%.12lf\\n\",f);\n        printf(\"%.12lf\",e);\n         }\n        }\n        else\n        {\n         printf(\"1\\n%.12lf\",e);\n        }\n\n    }\n}    return 0;\n}\n"}
{"similarity_score": 0.9985528219971056, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "ec37e27f7a15460fa5994fc56c8fb31b", "bug_code_uid": "28df1bd42ffa465cbd32719e9cc320bb", "src_uid": "b89e9598adae3da19903cdbfd225dd3c", "apr_id": "db267b5e3788265fa0387262a16b4702", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\nint ordena(const void *a, const void *b){\n    return (*(int *)a) - (*(int *)b);\n}\nint main (){\n    int t, n, k, a[1001], count=0;\n    \n    scanf(\"%d\", &t);\n    while(t--){\n        scanf(\"%d%d\", &n,&k);\n        \n        for (int i = 0; i < n; i++)\n            scanf(\"%d\", &a[i]);\n\n        qsort(a,n, sizeof(int), ordena);\n        \n        if  (a[0]==k){\n            printf(\"0\\n\");\n            return 0;\n        }\n        for (int i = 1; i < n; i++)\n        {\n            if( a[i+1]==k)\n                continue;\n            else  \n                count+= ( k-a[i] )/a[0];\n\n        }\n        printf(\"%d\\n\", count);\n        count=0;\n    }\n\n\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\nint ordena(const void *a, const void *b){\n    return (*(int *)a) - (*(int *)b);\n}\nint main (){\n    int t, n, k, a[1001], count=0;\n    \n    scanf(\"%d\", &t);\n    while(t--){\n        scanf(\"%d%d\", &n,&k);\n        \n        for (int i = 0; i < n; i++)\n            scanf(\"%d\", &a[i]);\n\n        qsort(a,n, sizeof(int), ordena);\n        \n        if  (a[0]==k){\n            printf(\"0\\n\");\n            return 0;\n        }\n        for (int i = 1; i < n; i++)\n        {\n            if( a[i]==k)\n                continue;\n            else  \n                count+= ( k-a[i] )/a[0];\n\n        }\n        printf(\"%d\\n\", count);\n        count=0;\n    }\n\n\n    return 0;\n}"}
{"similarity_score": 0.926829268292683, "equal_cnt": 11, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 7, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "4c8aed69ab6339d1242fecbdf9c941f4", "bug_code_uid": "8fae747f1140d8b6e68003ccc33742d0", "src_uid": "f288d7dc8cfcf3c414232a1b1fcdff3e", "apr_id": "87b285dc2112b46ab639a81fdd76c48f", "difficulty": 1000, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n\tint l1,l2,i,flag=0;\n\tchar a[100000];\n\tchar b[100000];\n\tscanf(\"%s\",a);\n\tscanf(\"%s\",b);\n\tl1=strlen(a);\n\tl2=strlen(b);\n\tif(l1==l2)\n\t{\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[i]!=b[i])\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag=0)\n\tprintf(\"-1\");\n\telse if(l1>=l2)\n\tprintf(\"%d\",l1);\n\telse\n\tprintf(\"%d\",l2);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\nint main()\n{\n\tint l1,l2,i,flag=0;\n\tchar a[1000000];\n\tchar b[1000000];\n\tscanf(\"%s\",a);\n\tscanf(\"%s\",b);\n\tl1=strlen(a);\n\tl2=strlen(b);\n\tif(l1==l2)\n\t{\n\t\tfor(i=0;i<l1;i++)\n\t\t{\n\t\t\tif(a[i]!=b[i])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif(flag==0)\n\t\tprintf(\"-1\");\n\t\telse\n\t\tprintf(\"%d\",l1);\n\t}\n\telse if(l1>l2)\n\tprintf(\"%d\",l1);\n\telse\n\tprintf(\"%d\",l2);\n\treturn 0;\n}"}
{"similarity_score": 0.9613601236476044, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ed5d9948c73097c36802b9e24bdd04de", "bug_code_uid": "06ea7ec77e314abbeb85e6e9493bc3a9", "src_uid": "59d926bca19a6dcfe3eb3e3dc03fffd6", "apr_id": "d0b993223db246043a4a4abd8ff34e08", "difficulty": 900, "tags": ["implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include<string.h>\n\nint main()\n{\n  char s[100000],t[100000];\n  int l,i,m,p,tot;\n  scanf(\"%s\",&s);\n  scanf(\"\\n%s\",&t);\n  l=strlen(s);\n  m=strlen(t);\n  if(l<m)p=l;\n  else p=m;\n  tot=l+m;\n  for(i=0;i<p-1;i++)\n  {\n      if(s[l-i-1]==t[m-i-1])tot=tot-2;\n      else break;\n  }\n  printf(\"%d\",tot);\n  return 0;\n}", "fixed": "#include <stdio.h>\n#include<string.h>\n\nint main()\n{\n  char s[200001],t[200001];\n  int l,i,m,p,tot;\n  scanf(\"%s\",&s);\n  scanf(\"\\n%s\",&t);\n  l=strlen(s);\n  m=strlen(t);\n  if(l<m)p=l;\n  else p=m;\n  tot=l+m;\n  for(i=0;i<=p-1;i++)\n  {\n      if(s[l-i-1]==t[m-i-1])tot=tot-2;\n      else break;\n  }\n  printf(\"%d\",tot);\n  return 0;\n}"}
{"similarity_score": 0.7797408716136631, "equal_cnt": 5, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "10bfc2eb2f0d1219d484af88261370fc", "bug_code_uid": "a8b92f642a83977aa351b1e6b5e0249c", "src_uid": "30ad5bdc019fcd8a4e642c90decca58f", "apr_id": "5023a4d6d3e988acb3b860299d91a201", "difficulty": 1200, "tags": ["sortings", "greedy"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint n,k;\n\tint count = 0;\n\tint a[1001];\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= 1000; i++)\n\t\ta[i] = 0;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &k);\n\t\ta[k]++;\n\t}\n\tbool done = false;\n\twhile (!done)\n\t{\n\t\tdone = true;\n\t\tfor (int i = 1; i <= 1000; i++)\n\t\t{\n\t\t\tif (a[i])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ta[i]--;\n\t\t\t\tdone = false;\n\t\t\t}\n\t\t}\n\t\tif(!done)\n\t\t\tcount--;\n\t}\n\tprintf(\"%d\\n\",count);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint n,k;\n\tint count = 0;\n\tint a[1001];\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= 1000; i++)\n\t\ta[i] = 0;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &k);\n\t\ta[k]++;\n\t}\n\tint done = 0;\n\twhile (done == 0)\n\t{\n\t\tdone = 1;\n\t\tfor (int i = 1; i <= 1000; i++)\n\t\t{\n\t\t\tif (a[i] != 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ta[i]--;\n\t\t\t\tdone = 0;\n\t\t\t}\n\t\t}\n\t\tif(!done)\n\t\t\tcount--;\n\t}\n\tprintf(\"%d\\n\",count);\n    return 0;\n}\n"}
{"similarity_score": 0.967391304347826, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7558788c9e524593a610a11510c4ff16", "bug_code_uid": "77d16677207112db119f372023d8dadf", "src_uid": "faf2c92c3a61ba5e33160bc7a18ad928", "apr_id": "9c5b1de665d96469318eda756d73ac52", "difficulty": 1500, "tags": ["dp", "combinatorics", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n\nint main()\n{\n\tlong long mat[1010][1010];\n\tint k, suma = 0;\n\tscanf(\"%d\", &k);\n\tint col[1010];\n\tfor (int i = 1; i <= k; i++)\n\t{\n\t\tscanf(\"%d\", &col[k]);\n\t\tsuma += col[k];\n\t}\n\n\tmat[0][0] = 1;\n\tmat[1][0] = mat[1][1] = 1;\n\tfor (int i = 2; i <= 1000; i++)\n\t{\n\t\tmat[i][0] = mat[i][i] = 1;\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tmat[i][j] = (mat[i - 1][j - 1] + mat[i - 1][j]) % 1000000007;\n\t\t}\n\t}\n\tlong long ans = 1;\n\tfor (int i = k; i >= 1; i--)\n\t{\n\t\tint cc = col[i];\n\t\tif (cc != 0)\n\t\t{\n\t\t\tans = (ans * mat[suma - 1][cc - 1]) % 1000000007;\n\t\t\tsuma = suma - cc;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\n\nint main()\n{\n\tlong long mat[1010][1010];\n\tint k, suma = 0;\n\tscanf(\"%d\", &k);\n\tint col[1010];\n\tfor (int i = 1; i <= k; i++)\n\t{\n\t\tscanf(\"%d\", &col[i]);\n\t\tsuma += col[i];\n\t}\n\n\tmat[0][0] = 1;\n\tmat[1][0] = mat[1][1] = 1;\n\tfor (int i = 2; i <= 1000; i++)\n\t{\n\t\tmat[i][0] = mat[i][i] = 1;\n\t\tfor (int j = 1; j < i; j++)\n\t\t{\n\t\t\tmat[i][j] = (mat[i - 1][j - 1] + mat[i - 1][j]) % 1000000007;\n\t\t}\n\t}\n\tlong long ans = 1;\n\tfor (int i = k; i >= 1; i--)\n\t{\n\t\tint cc = col[i];\n\t\tif (cc != 0)\n\t\t{\n\t\t\tans = (ans * mat[suma - 1][cc - 1]) % 1000000007;\n\t\t\tsuma = suma - cc;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}"}
{"similarity_score": 0.8519579751671442, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 8, "lang": "GNU C", "fix_code_uid": "9cec45ef6d31c21c1750b237a171d3be", "bug_code_uid": "43d052f5546371c96e2d486d6bf6438f", "src_uid": "74cbcbafbffc363137a02697952a8539", "apr_id": "7baac8bc6682ef20345713b3e2a82dda", "difficulty": 1200, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,x,y;\n    \n    char a[100000];\n    scanf(\"%s\",a);\n    n=strlen(a);\n    i=(100 * (a[n-3]-'0'))+(10 * (a[n-2]-'0'))+(a[n-1]-'0');\n    x=i%4;\n    y=i%2;\n    if(x==0) n=2;\n    else if(x==1) n=5;\n    else if(x==2) n=8;\n    else n=5;\n    \n    if(y==0)\n        n+=1;\n    else n+=4;\n    \n    n++;\n    \n    printf(\"%d\",n%5);\n    //4 ke liye last three digit\n    //3 sum of last three\n    return 0;\n}\n", "fixed": "\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,i,x,y;\n    \n    char a[100005];\n    scanf(\"%s\",a);\n    n=strlen(a);\n    if(n>2)\n    i=(100 * (a[n-3]-'0'))+(10 * (a[n-2]-'0'))+(a[n-1]-'0');\n    else if(n>1)\n            i=(10 * (a[n-2]-'0'))+(a[n-1]-'0');\n    else i=(a[n-1]-'0');\n    x=i%4;\n    y=(a[n-1]-'0')%2;\n    if(x==0) n=2;\n    else if(x==1) n=5;\n    else if(x==2) n=8;\n    else n=5;\n    \n    if(y==0)\n        n+=1;\n    else n+=4;\n    \n    n++;\n    if(n<5) printf(\"%d\",n);\n    else printf(\"%d\",n%5);\n    //4 ke liye last three digit\n    //3 sum of last three\n    return 0;\n}\n\n"}
{"similarity_score": 0.7837259100642399, "equal_cnt": 10, "replace_cnt": 4, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "3b17410f4081a53499a625596c2e4f69", "bug_code_uid": "b1da943a62f795f379a545d54c6f8a45", "src_uid": "044c2a3bafe4f47036ee81f2e40f639a", "apr_id": "f2e360b3b91695d3aeb56ceeeb85f8be", "difficulty": 800, "tags": ["greedy", "implementation", "math", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nvoid main()\r\n{\r\n    int t;\r\n    scanf(\"%d\\n\",&t);\r\n    while(t!=0)\r\n    {\r\n        int array[100],n,d,count=0;\r\n        int i,min1,min2;\r\n        scanf(\"%d %d\",&n,&d);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&array[i]);\r\n            if(i==0) min1=min2=array[i];\r\n            if(array[i]<=d) count++;\r\n            if(min1>array[i])\r\n            {\r\n                min2=min1;\r\n                min1=array[i];\r\n            }\r\n            else if(min2>array[i] && min1!=array[i])\r\n            {\r\n                min2=array[i];\r\n            }\r\n        }\r\n        if(count==n || min1+min2<=d) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n        t--;\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<limits.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\\n\",&t);\r\n    while(t!=0)\r\n    {\r\n        int array[100],n,d,count=0;\r\n        int i,min1=INT_MAX,min2=INT_MAX;\r\n        scanf(\"%d %d\",&n,&d);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&array[i]);\r\n            if(array[i]<=d) count++;\r\n            if(min1>array[i])\r\n            {\r\n                min2=min1;\r\n                min1=array[i];\r\n            }\r\n            else if(min2>array[i])\r\n            {\r\n                min2=array[i];\r\n            }\r\n        }\r\n        if(count==n || min1+min2<=d) printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n        t--;\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.9938823529411764, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "f23e1e91b22a01d7604ec7fd753bff8a", "bug_code_uid": "4fdfb71de124e86fb9d7d8febb1f0886", "src_uid": "57f0f36905d7769167b7ba9d3d9be351", "apr_id": "2bda689dd85c844894653e4ea2b29c56", "difficulty": 1100, "tags": ["math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint gcd(int a, int b){\r\n    if (b==0){\r\n        return a;\r\n    }\r\n    return gcd(b,a%b);\r\n}\r\nint cmp(const void *a,const void *b){\r\n    return ( *(int*)a - *(int*)b);\r\n}\r\nint main(){\r\n    int i,t;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        int n,j;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int min=0;\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]<a[min]){\r\n                min = j;\r\n            }\r\n        }\r\n        int a_min=a[min];\r\n        for(j=0;j<n;j++){\r\n            a[j]-=a_min;\r\n        }\r\n        qsort(a,n,sizeof(int),cmp);\r\n        for(j=0;j<n;j++){\r\n            if(a[j]!=0){\r\n                break;\r\n            }\r\n        }\r\n        int g=0;\r\n        if(j==n-1){\r\n            g=a[n-1];\r\n        }\r\n        else{\r\n            g=gcd(a[j+1],a[j]);\r\n            if(j!=n-2){\r\n                for(j=j+2;j<n;j++){\r\n                    g=gcd(a[j],g);\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",g);\r\n    }\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint gcd(int a, int b){\r\n    if (b==0){\r\n        return a;\r\n    }\r\n    return gcd(b,a%b);\r\n}\r\nint cmp(const void *a,const void *b){\r\n    return ( *(int*)a - *(int*)b);\r\n}\r\nint main(){\r\n    int i,t;\r\n    scanf(\"%d\",&t);\r\n    for(i=0;i<t;i++){\r\n        int n,j;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        int min=0;\r\n        for(j=0;j<n;j++){\r\n            scanf(\"%d\",&a[j]);\r\n            if(a[j]<a[min]){\r\n                min = j;\r\n            }\r\n        }\r\n        int a_min=a[min];\r\n        for(j=0;j<n;j++){\r\n            a[j]-=a_min;\r\n        }\r\n        qsort(a,n,sizeof(int),cmp);\r\n        for(j=0;j<n;j++){\r\n            if(a[j]!=0){\r\n                break;\r\n            }\r\n        }\r\n        int g=-1;\r\n        if(j==n-1){\r\n            g=a[n-1];\r\n        }\r\n        else if(j<n-1){\r\n            g=gcd(a[j+1],a[j]);\r\n            if(j!=n-2){\r\n                for(j=j+2;j<n;j++){\r\n                    g=gcd(a[j],g);\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",g);\r\n    }\r\n}"}
{"similarity_score": 0.8791848617176128, "equal_cnt": 15, "replace_cnt": 4, "delete_cnt": 9, "insert_cnt": 1, "fix_ops_cnt": 14, "lang": "GNU C", "fix_code_uid": "6bdebd017c50bd1acaf9507c84a2be81", "bug_code_uid": "08234e21b8e7ae3e0d5d79ec1c4ff78b", "src_uid": "d3684227d1f12cf36dc302e1ffee8370", "apr_id": "5bfe6522455a271802ff1deefac3ce73", "difficulty": 1400, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\n\nint min(int a, int b){\n    if(a < b){\n        return a;\n    }else{\n        return b;\n    }\n}\nint main(){\n    long int i, j, k, l, m, n, o;\n    long long int sum1, sum2;\n    scanf(\"%d\", &n);\n\n    long int a[n], b[n], c[n];\n\n    sum1 = 0;\n    sum2 = 0;\n    k = 0;\n    l = 0;\n    for(i = 0; i < n; i++){\n        scanf(\"%ld\", &a[i]);\n        if(a[i] < 0){\n            c[l++] = a[i];\n            sum2 += a[i];\n        }else{\n            b[k++] = a[i];\n            sum1 += a[i];\n        }\n    }\n\n    if(abs(sum1) > abs(sum2)){\n        printf(\"first\\n\");\n        return 0;\n    }else if(abs(sum2) > abs(sum1)){\n        printf(\"second\\n\");\n        return 0;\n    }\n\n    for(i = 0; i < min(k, l); i++){\n        if(abs(b[i]) > abs(c[i])){\n            printf(\"first\\n\");\n            return 0;\n        }else if(abs(b[i]) < abs(c[i])){\n            printf(\"second\\n\");\n            return 0;\n        }\n    }\n\n    if(a[n - 1]  < 0){\n        printf(\"second\\n\");\n    }else{\n        printf(\"first\\n\");\n    }\n\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint min(int a, int b){\n    if(a < b){\n        return a;\n    }else{\n        return b;\n    }\n}\nint main(){\n    long int i, j, k, l, m, n, o;\n    long long int sum1, sum2;\n    scanf(\"%d\", &n);\n\n    long int a[n], b[n], c[n];\n\n    sum1 = 0;\n    sum2 = 0;\n    k = 0;\n    l = 0;\n    for(i = 0; i < n; i++){\n        scanf(\"%ld\", &a[i]);\n        if(a[i] < 0){\n            c[l++] = a[i] * -1;\n            sum2 += (a[i] * -1);\n        }else{\n            b[k++] = a[i];\n            sum1 += a[i];\n        }\n    }\n  \t\n\t\n    if(sum1 > sum2){\n        printf(\"first\\n\");\n        return 0;\n    }else if(sum2 > sum1){\n        printf(\"second\\n\");\n        return 0;\n    }\n\n    for(i = 0; i < min(k, l); i++){\n        if(b[i] > c[i]){\n            printf(\"first\\n\");\n            return 0;\n        }else if(b[i] < c[i]){\n            printf(\"second\\n\");\n            return 0;\n        }\n    }\n\n    if(a[n - 1]  < 0){\n        printf(\"second\\n\");\n    }else{\n        printf(\"first\\n\");\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.9976525821596244, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f1bb790c8c22122c556893ac38188a44", "bug_code_uid": "9cf137766b556c7d20fd502fc6cf9e33", "src_uid": "6ae754639d96790c890f9d1ab259332a", "apr_id": "466d4a145398b08ce499a72ebfbb0472", "difficulty": 1000, "tags": ["brute force", "geometry", "math", "number theory"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\n\r\n\r\nint main()\r\n{\r\n     int x,y,z,i,j,k,a,b,c,n,m,t;\r\n     long long a;\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n          a = 1;\r\n          scanf(\"%d\",&n);\r\n          while(a*a <= n)\r\n          {\r\n               if(2*a*a == n || 4*a*a == n)\r\n                  break;\r\n               a++;        \r\n          }\r\n          printf(a*a <= n ? \"YES\\n\" : \"NO\\n\");\r\n          \r\n     }\r\n     return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\n\r\nint main()\r\n{\r\n     int x,y,z,i,j,k,b,c,n,m,t;\r\n     long long a;\r\n     scanf(\"%d\",&t);\r\n     while(t--)\r\n     {\r\n          a = 1;\r\n          scanf(\"%d\",&n);\r\n          while(a*a <= n)\r\n          {\r\n               if(2*a*a == n || 4*a*a == n)\r\n                  break;\r\n               a++;        \r\n          }\r\n          printf(a*a <= n ? \"YES\\n\" : \"NO\\n\");\r\n          \r\n     }\r\n     return 0;\r\n}\r\n"}
{"similarity_score": 0.9788029925187033, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ecb05c08fdaec2dc3598aa5c67099ab8", "bug_code_uid": "11e675ce3ae8754187170e7625412b59", "src_uid": "9fcc55a137b5ff021fdc8e1e867ce856", "apr_id": "529a9989ea5bbcbe454bb3ed3138d28e", "difficulty": 1600, "tags": ["bitmasks", "brute force", "dp", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N\t100000\n#define L\t31\t/* L = ceil(log2(10^9)) + 1*/\n#define INF\t0x3f3f3f3f3f3f3f3fLL\n\nlong long max(long long a, long long b) { return a > b ? a : b; }\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int aa[N];\n\t\tstatic long long dp[N + 1];\n\t\tint n, c, i, l;\n\t\tlong long ans;\n\n\t\tscanf(\"%d%d\", &n, &c);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\tfor (i = 0; i <= n; i++)\n\t\t\tdp[i] = -INF;\n\t\tdp[0] = 0;\n\t\tans = 0;\n\t\tfor (l = 0; l < L; l++) {\n\t\t\tfor (i = 0; i < n; i++)\n\t\t\t\tif (dp[i] != -INF)\n\t\t\t\t\tdp[i + 1] = max(dp[i + 1], dp[i] - c + (aa[i] >> l));\n\t\t\tans = max(ans, dp[n]);\n\t\t\tfor (i = n - 1; i >= 0; i--)\n\t\t\t\tdp[i + 1] = dp[i] == -INF ? -INF : dp[i] + (aa[i] >> l + 1);\n\t\t\tdp[0] = -INF;\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\n#define N\t100000\n#define L\t31\t/* L = ceil(log2(10^9)) + 2 */\n#define INF\t0x3f3f3f3f3f3f3f3fLL\n\nlong long max(long long a, long long b) { return a > b ? a : b; }\n\nint main() {\n\tint t;\n\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstatic int aa[N];\n\t\tstatic long long dp[N + 1];\n\t\tint n, c, i, l;\n\t\tlong long ans;\n\n\t\tscanf(\"%d%d\", &n, &c);\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\tfor (i = 0; i <= n; i++)\n\t\t\tdp[i] = -INF;\n\t\tdp[0] = 0;\n\t\tans = 0;\n\t\tfor (l = 0; l < L; l++) {\n\t\t\tfor (i = 0; i < n; i++)\n\t\t\t\tif (dp[i] != -INF)\n\t\t\t\t\tdp[i + 1] = max(dp[i + 1], dp[i] - c + (aa[i] >> l));\n\t\t\tfor (i = 0; i <= n; i++)\n\t\t\t\tans = max(ans, dp[i]);\n\t\t\tfor (i = n - 1; i >= 0; i--)\n\t\t\t\tdp[i + 1] = dp[i] == -INF ? -INF : dp[i] + (aa[i] >> l + 1);\n\t\t\tdp[0] = -INF;\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.2545045045045045, "equal_cnt": 12, "replace_cnt": 7, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "26fcafc9dd73e792229b9491c38c5202", "bug_code_uid": "e3a65130c7ec2487f007fd787e634ce1", "src_uid": "e3dcb1cf2186bf7e67fd8da20c1242a9", "apr_id": "c0c5945fe6c9acfc642775dac563d2e3", "difficulty": 1000, "tags": ["strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char c[10][10],d[10][10]={};\n    int n,i,j,cmp,count=0;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%s\",c[i]);\n\n    }\n    for(i=0;i<n-1;i++){\n        for(j=i+1;j<n;j++){\n            cmp=strcmp(c[i],c[j]);\n            if(cmp==0)\n                    strcpy(d[i],c[i]);\n\n    }}\n    printf(\"%s\",d);\n\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char ax[105],bx[105],cx[105][1000];\n    int i,j,count1=0,count2=0,n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n       scanf(\"%s\",cx[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        j=strcmp(cx[0],cx[i]);\n        if(j==0)\n        {\n            strcpy(ax,cx[i]);\n            count1++;\n        }\n        else\n        {\n            strcpy(bx,cx[i]);\n            count2++;\n        }\n    }\n    if(count1>count2)\n        printf(\"%s\",ax);\n    else\n        printf(\"%s\",bx);\n}\n"}
{"similarity_score": 0.9933949801849405, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "8c37d1961028f88672dc4b4a1603fae2", "bug_code_uid": "9435547552a5db4002908fef597583b1", "src_uid": "681ee82880ddd0de907aac2ccad8fc04", "apr_id": "c6b3185a749f7c19153760c7c8f17e09", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint a,b,c,r,max=0,r1,r2=0;\r\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\r\n\t\tif(c>b)\r\n\t\t\tr1=b%c;\r\n\t\telse\r\n\t\t{\r\n\t\t\tint a1=a/c;\r\n\t\t\tint b2=b/c;\r\n\t\t\tr1=b2+(b%c);\r\n\t\t\tif((b2-1)>=a1)\r\n\t\t\tr2=(b2-1)+(c-1);\r\n\t\t\tmax=(r1>r2)?r1:r2;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t>0)\r\n\t{\r\n\t\tint a,b,c,r,max=0,r1,r2=0;\r\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\r\n\t\tif(c>b)\r\n\t\t\tmax=b%c;\r\n\t\telse\r\n\t\t{\r\n\t\t\tint a1=a/c;\r\n\t\t\tint b2=b/c;\r\n\t\t\tr1=b2+(b%c);\r\n\t\t\tif((b2-1)>=a1)\r\n\t\t\tr2=(b2-1)+(c-1);\r\n\t\t\tmax=(r1>r2)?r1:r2;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t\tt--;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.017868538608806637, "equal_cnt": 11, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "ea1177be46ef32384bb5d9f51f4419d1", "bug_code_uid": "5ffaa9c08110ff81e1f70cc6432600c9", "src_uid": "6f819ce1d88d5211cd475a8673edba97", "apr_id": "f07553a24a3273b09c6880c1a8eb78a0", "difficulty": 800, "tags": ["brute force", "implementation", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\n<CodeBlocks_project_file>\n\t<FileVersion major=\"1\" minor=\"6\" />\n\t<Project>\n\t\t<Option title=\"GRFD\" />\n\t\t<Option pch_mode=\"2\" />\n\t\t<Option compiler=\"gcc\" />\n\t\t<Build>\n\t\t\t<Target title=\"Debug\">\n\t\t\t\t<Option output=\"bin/Debug/GRFD\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Debug/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-g\" />\n\t\t\t\t</Compiler>\n\t\t\t</Target>\n\t\t\t<Target title=\"Release\">\n\t\t\t\t<Option output=\"bin/Release/GRFD\" prefix_auto=\"1\" extension_auto=\"1\" />\n\t\t\t\t<Option object_output=\"obj/Release/\" />\n\t\t\t\t<Option type=\"1\" />\n\t\t\t\t<Option compiler=\"gcc\" />\n\t\t\t\t<Compiler>\n\t\t\t\t\t<Add option=\"-O2\" />\n\t\t\t\t</Compiler>\n\t\t\t\t<Linker>\n\t\t\t\t\t<Add option=\"-s\" />\n\t\t\t\t</Linker>\n\t\t\t</Target>\n\t\t</Build>\n\t\t<Compiler>\n\t\t\t<Add option=\"-Wall\" />\n\t\t</Compiler>\n\t\t<Unit filename=\"main.c\">\n\t\t\t<Option compilerVar=\"CC\" />\n\t\t</Unit>\n\t\t<Extensions>\n\t\t\t<lib_finder disable_auto=\"1\" />\n\t\t</Extensions>\n\t</Project>\n</CodeBlocks_project_file>\n", "fixed": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,m,x,rb,cb,rd,cd,i,s,yr,yc;\r\n    scanf(\"%d\",&x);\r\n    for(i=0;i<x;i++)\r\n    {\r\n        scanf(\"%d%d%d%d%d%d\",&m,&n,&rb,&cb,&rd,&cd);\r\n        s=0;\r\n        yr=1;\r\n        if(rb==m) yr=-1;\r\n        yc=1;\r\n        if(cb==n) yc=-1;\r\n        while(rb!=rd&&cb!=cd)\r\n        {\r\n            rb+=yr;\r\n            if(rb==m||rb==1) yr=yr*-1;\r\n            cb+=yc;\r\n            if(cb==n||cb==1) yc=yc*-1;\r\n            s++;\r\n        }\r\n        printf(\"%d\\n\",s);\r\n\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.879837067209776, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 3, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "c9431a5ffdc9b433f1d257b0f4e5e965", "bug_code_uid": "7fb5adf19f3733815b630469520cd278", "src_uid": "bcf75978c9ef6202293773cf533afadf", "apr_id": "aca8f79f234a46162eefd41e7060d70a", "difficulty": 1000, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n\tint i,j;\n\tchar s[100003];\n\tchar s1[100003];\n\tscanf(\"%s\",s);\n\tprintf(\"%s\",s);\n\tj=strlen(s)-1;\n\tfor(i=0;i<=j;i++)\n\t{\n\t\ts1[i]=s[j-i];\n\t}\n\tprintf(\"%s\\n\",s1);\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nint main()\n{\n\tint i,j;\n\tchar s[100003];\n\tchar s1[100003];\n\tscanf(\"%s\",s);\n\tj=strlen(s)-1;\n\tprintf(\"%s\",s);\n\tfor(i=0;i<=j;i++)\n\t{\n\t\ts1[i]=s[j-i];\n\t\tprintf(\"%c\",s1[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"}
{"similarity_score": 0.9970501474926253, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c95119a9882bae2db2603aa816fe5b22", "bug_code_uid": "5cb643fa674f42f66e7fc9bacf609700", "src_uid": "97697eba87bd21ae5c979a5ea7a81cb7", "apr_id": "c27fde266ffca570453332c7b1d3562a", "difficulty": 1100, "tags": ["constructive algorithms", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include \"stdio.h\"\nint main()\n{\n    int a[10005],m,k,n,f;\n    scanf(\"%d\",&n);\n        f=1;\n        for (int i = 0; i < n; ++i)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        for(int i=0;i<n;i++){\n            if(a[i]&1){\n                a[i]--;\n                a[i+1]--;\n                if(a[i+1]<0||i==n-1){\n                    printf(\"NO\\n\");\n                    f=0;\n                    break;\n                }\n            }\n        }\n        if(f==1)\n        printf(\"YES\\n\");\n    \nreturn 0;\n}", "fixed": "#include \"stdio.h\"\nint main()\n{\n    int a[200005],m,k,n,f;\n    scanf(\"%d\",&n);\n        f=1;\n        for (int i = 0; i < n; ++i)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        for(int i=0;i<n;i++){\n            if(a[i]&1){\n                a[i]--;\n                a[i+1]--;\n                if(a[i+1]<0||i==n-1){\n                    printf(\"NO\\n\");\n                    f=0;\n                    break;\n                }\n            }\n        }\n        if(f==1)\n        printf(\"YES\\n\");\n    \nreturn 0;\n}"}
{"similarity_score": 0.612369871402327, "equal_cnt": 31, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 25, "fix_ops_cnt": 30, "lang": "GNU C11", "fix_code_uid": "4b673768c3d63962e5c94b0eea603575", "bug_code_uid": "867698517bda53f4ba2a98caf7cdec05", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "b161ec293eaa87aa9730ee778c104dfb", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main(){\n    int i,j,l,t;\n    double m;\n    scanf(\"%d\",&t);\n    long long int a[t];\n\n    for(i=0;i<t;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n    for(i=0;i<t;i++){\n\n        if(a[i]==1){\n            printf(\"NO\\n\");\n            continue;\n        }\n        m=sqrt(a[i]);\n        l=(int)m;\n        if(m!=l){\n            printf(\"NO\\n\");\n            continue;\n        }\n        else{\n            for(j=2;j<=sqrt(l);j++){\n                if(l%j==0){\n                    printf(\"NO\\n\");\n                    goto A;\n                }\n            }\n            printf(\"YES\\n\");\n            A:j=2;\n        }\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(){\n        int i,j,l,t;\n        double m;\n        scanf(\"%d\",&t);\n        long long int a[t];\n\n        for(i=0;i<t;i++){\n            scanf(\"%lld\",&a[i]);\n        }\n        for(i=0;i<t;i++){\n\n            if(a[i]==1){\n                printf(\"NO\\n\");\n                continue;\n            }\n            m=sqrt(a[i]);\n            l=(int)m;\n            if(m!=l){\n                printf(\"NO\\n\");\n                continue;\n            }\n            else if(l%2==0){\n                if(l==2){\n                    printf(\"YES\\n\");\n                    continue;\n                }\n                printf(\"NO\\n\");\n                continue;\n            }\n            else{\n                for(j=3;j*j<=l;j=j+2){\n                    if(l%j==0){\n                        printf(\"NO\\n\");\n                        goto A;\n                    }\n                }\n                printf(\"YES\\n\");\n                A:j=2;\n            }\n        }\n        return 0;\n    }\n"}
{"similarity_score": 0.504, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "230c58c96b043556fc73890022a7b060", "bug_code_uid": "2c1c2e8189d493384bf8ed475439d4a2", "src_uid": "787a45f427c2db98b2ddb78925e0e0f1", "apr_id": "acbf552d0f5f03526c3ec0d686f8b071", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    long int t, n, i, j;\n    scanf(\"%ld\", &t);\n    while(t--)\n    {\n        int sum=0, d=0;\n        scanf(\"%ld\", &n);\n        if(n==2)\n            printf(\"2\\n\");\n        else{\n        j=n;i=1;\n        while(i<=(n/2))\n        {\n            sum=(pow(2,i))+(pow(2,j));\n            d=d-sum;\n            if(d<0)\n                d=-d;\n            i++;\n            j--;\n        }\n        printf(\"%ld\\n\", d);\n        }\n\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    long int t, n, i, j;\n    scanf(\"%ld\", &t);\n    while(t--)\n    {\n        long int sum=0, d=0, count=0, c=0, s=0;\n        scanf(\"%ld\", &n);\n        i=1,j=n;\n        sum=pow(2,j);\n        j--;\n        while(i<n/2)\n        {\n            sum+=pow(2,i);\n            i++;\n        }\n        while(i<n)\n        {\n            s+=pow(2,i);\n            i++;\n        }\n        d=sum-s;\n        if(d<0)\n            d=-d;\n        printf(\"%ld\\n\", d);\n\n        }\n    return 0;\n\n}\n"}
{"similarity_score": 0.7299484915378955, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "fd018032626b6ef614bcb5d6b88875c8", "bug_code_uid": "d5db3f43dbf11f695ec3259c2c39363c", "src_uid": "29639971c98dd98f0292d994d4433e3a", "apr_id": "a8c35f11a01771df55d2a1ec425cc9ed", "difficulty": 1600, "tags": ["implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <limits.h>\n#include <stdio.h>\n\nint main() {\n\tint i, j, n, m, cnt;\n\tstatic struct room {\n\t\tint l, w, h;\n\t} rr[500];\n\tstatic struct wallpaper {\n\t\tint l, w, c;\n\t} ww[500];\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d%d%d\", &rr[i].l, &rr[i].w, &rr[i].h);\n\tscanf(\"%d\", &m);\n\tfor (j = 0; j < m; j++)\n\t\tscanf(\"%d%d%d\", &ww[j].l, &ww[j].w, &ww[j].c);\n\tcnt = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tint min = INT_MAX;\n\n\t\tfor (j = 0; j < m; j++) {\n\t\t\tint a = (ww[j].l / rr[i].h) * ww[j].w;\n\t\t\tint p = 2 * (rr[i].l + rr[i].w);\n\t\t\tint cost = ww[j].c * ((p + a - 1) / a);\n\n\t\t\tif (min > cost)\n\t\t\t\tmin = cost;\n\t\t}\n\t\tcnt += min;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n", "fixed": "#include <limits.h>\n#include <stdio.h>\n\nint main() {\n\tint i, j, n, m, cnt;\n\tstatic struct room {\n\t\tint l, w, h;\n\t} rr[500];\n\tstatic struct wallpaper {\n\t\tint l, w, c;\n\t} ww[500];\n\n\tscanf(\"%d\", &n);\n\tfor (i = 0; i < n; i++)\n\t\tscanf(\"%d%d%d\", &rr[i].l, &rr[i].w, &rr[i].h);\n\tscanf(\"%d\", &m);\n\tfor (j = 0; j < m; j++)\n\t\tscanf(\"%d%d%d\", &ww[j].l, &ww[j].w, &ww[j].c);\n\tcnt = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tint min = INT_MAX, a, p, cost;\n\n\t\tfor (j = 0; j < m; j++) {\n\t\t\tp = 2 * (rr[i].l + rr[i].w);\n\t\t\ta = (ww[j].l / rr[i].h) * ww[j].w;\n\t\t\tcost = INT_MAX;\n\t\t\tif (a > 0)\n\t\t\t\tcost = ww[j].c * ((p + a - 1) / a);\n\t\t\tif (min > cost)\n\t\t\t\tmin = cost;\n\t\t}\n\t\tcnt += min;\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8551093035078801, "equal_cnt": 15, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 9, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "18576b2b480c5ef3343272f78ea6bfe4", "bug_code_uid": "66f36291314d7cdaf94630f33748b862", "src_uid": "fbde1e2ee02055592ff72fb04366812b", "apr_id": "b342635f4861cc46c0308315a8ae1ae7", "difficulty": 800, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <malloc.h>\n#include <stdbool.h>\n\nvoid BubbleSort( int [], int );\n\nint main()\n{\n    int Arr[2001];\n    int n, k, i, ans, index;\n    while( ~scanf( \"%d%d\", &n, &k ) )\n    {\n        ans = 0;\n        index = -1;\n        for( i = 0; i < n; i ++ )\n            scanf( \"%d\", &Arr[i] );\n        BubbleSort( Arr, n );\n        for( i = 0; i < n; i ++ )\n            if( Arr[i] == k )\n            {\n                index = i;\n                break;\n            }\n        for( i = index; i + 3 < n; i += 3 )\n        {\n            ans ++;\n        }\n        printf( \"%d\\n\", ans );\n    }\n    return 0;\n}\n\nvoid BubbleSort( int num[], int n )\n{\n    int i, j, tmp;\n    for( i = 0; i < n; i ++ )\n        for( j = i; j < n; j ++ )\n            if( num[i] > num[j] )\n            {\n                tmp = num[i];\n                num[i] = num[j];\n                num[j] = tmp;\n            }\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <malloc.h>\n#include <stdbool.h>\n\n///void BubbleSort( int [], int );\n\nint main()\n{\n    int Arr[2001];\n    int n, k, i, ans;///, index;\n    while( ~scanf( \"%d%d\", &n, &k ) )\n    {\n        ans = 0;\n        ///index = 0;\n        for( i = 0; i < n; i ++ )\n            scanf( \"%d\", &Arr[i] );\n        //BubbleSort( Arr, n );\n        for( i = 0; i < n; i ++ )\n            if( 5 - Arr[i] >= k )\n                ans ++;\n        /*\n        for( i = index; i + 3 < n; i += 3 )\n        {\n            ans ++;\n        }\n        if( index == 0 )\n        {\n            ans = n / 3;\n        }\n        */\n        printf( \"%d\\n\", ans / 3 );\n    }\n    return 0;\n}\n\n/*\nvoid BubbleSort( int num[], int n )\n{\n    int i, j, tmp;\n    for( i = 0; i < n; i ++ )\n        for( j = i; j < n; j ++ )\n            if( num[i] > num[j] )\n            {\n                tmp = num[i];\n                num[i] = num[j];\n                num[j] = tmp;\n            }\n}\n*/\n"}
{"similarity_score": 0.2305194805194805, "equal_cnt": 4, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "aebe5c5ec9f8b8a8aab6a900c815e92c", "bug_code_uid": "0c902d7bec9013b5b405b9fe6bf57a04", "src_uid": "e544ed0904e2def0c1b2d91f94acbc56", "apr_id": "56e0556b60dd36e3000284c0081be536", "difficulty": 1100, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n\t{\n\tlong long int n,a[100000],i,j,max,pos=0;\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t\t{scanf(\"%lld\",&a[i]);}\n\tfor(i=0;i<n;i++)\n\t\t{max=a[i];pos=i;\n\t\tfor(j=i+1;j<n;j++)\n\t\t\t{if(a[j]>max)\n\t\t\t\t{pos=j;max=a[j];}\n\t\t\t}\n\t\tfor(j=i;j<pos;j++)\n\t\t\t{printf(\"%lld \",max-a[j]+1);}\n\t\ti=pos;\n\t\tprintf(\"0 \");\n\t\t}\n\treturn 0;\n\t}\n\t\t\t\n", "fixed": "#include<stdio.h>\nint main()\n\t{\n\tlong long int n,a[100000],i,max=0;\n\tscanf(\"%lld\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\tfor(i=n-1;i>=0;i--)\n\t\t{\n\t\tif(a[i]>max)\n\t\t\t{max=a[i];a[i]=0;}\n\t\telse\n\t\t\ta[i]=max+1-a[i];\n\t\t}\n\tfor(i=0;i<n;i++)\n\t\tprintf(\"%lld \",a[i]);\n\treturn 0;\n\t}\n"}
{"similarity_score": 0.8329621380846325, "equal_cnt": 9, "replace_cnt": 3, "delete_cnt": 5, "insert_cnt": 1, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "c9ac43dbbac69339d1b568fbc920d283", "bug_code_uid": "7814ef9b35abab99396425a9857570cb", "src_uid": "30cfce44a7a0922929fbe54446986748", "apr_id": "e446291217406d01da2ea7b434a3650e", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    long long int t,n,a,b,c,d,i,res1,res2,res3,res4;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld %lld %lld\",&n,&a,&b,&c,&d);\n        res1=n*(a-b);\n        res2=n*(a+b);\n        res3=c-d;\n        res4=c+d;\n        if((res1>=res3&&res1<=res4)||(res2>=res3&&res2<=res4))\n        {\n            printf(\"yes\");\n        }\n        else{\n            printf(\"no\");\n        }\n        printf(\"\\n\");\n    }\n}\n\n", "fixed": "#include <stdio.h>\nint main()\n{\n    long long int t,n,a,b,c,d,i,res1,res2,res3,res4;\n    scanf(\"%lld\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%lld %lld %lld %lld %lld\",&n,&a,&b,&c,&d);\n        res1=n*(a-b);\n        res2=n*(a+b);\n        res3=c-d;\n        res4=c+d;\n        if((res1>res4||res2<res3))\n        {\n            printf(\"no\");\n        }\n        else{\n            printf(\"yes\");\n        }\n        printf(\"\\n\");\n    }\n}\n\n"}
{"similarity_score": 0.9472710453283997, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "eae4f6e05d2e23ea3bf4e4d7a7aad60c", "bug_code_uid": "85a17103b7c05366d04b3cea0ac4c207", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "1e43a1c8f2596138f180150552d0fea9", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "\t#include<stdio.h>\n\t#include<math.h>\n\tint main()\n\t{\n\t    int n,i;\n\t    long long int j;\n\t    long long int x;\n\t    scanf(\"%d\",&n);\n\t    for(i=0;i<n;i++)\n\t    {\n\t\tscanf(\"%I64d\",&x);\n\t\tlong long int x1= sqrt(x);\n\t\tint count=0;\n\t\tif(x1*x1 == x){\n\t\t\t//long long int x2= sqrt(x1);\n\t\t\tfor(j=2;j*j<=x1;j++){\n\t\t\t\n\t\t\t\tif((long long int)x1 % j==0){\n\t\t\t\t\tcount=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count==1)\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"YES\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\tcount=0;\n\t\n\t    }\n\t    return 0;\n\t}", "fixed": "\t#include<stdio.h>\n\t#include<math.h>\n\tint main()\n\t{\n\t    int n,i;\n\t    long long int j;\n\t    long long int x;\n\t    scanf(\"%d\",&n);\n\t    for(i=0;i<n;i++)\n\t    {\n\t\tscanf(\"%I64d\",&x);\n\t\tlong long int x1= sqrt(x);\n\t\tint count=0;\n\t\tif(x1*x1 == x){\n\t\t\t//long long int x2= sqrt(x1);\n\t\t\tfor(j=2;j*j<=x1;j++){\n\t\t\t\n\t\t\t\tif((long long int)x1 % j==0){\n\t\t\t\t\tcount=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count==1)\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\telse{\n\t\t\t\tif(x==1)\n\t\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\telse\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tprintf(\"NO\\n\");\n\t\t}\n\t\tcount=0;\n\t\n\t    }\n\t    return 0;\n\t}"}
{"similarity_score": 0.9987179487179487, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "14e95ce1d79b36f8155a3fe3dcf84b05", "bug_code_uid": "06aa7216616e04a43f4af8fe7d186d59", "src_uid": "53ae714f04fd29721b8bbf77576b7ccf", "apr_id": "6a22f0f6f52605fd56350eb8bbdcf139", "difficulty": 1200, "tags": ["implementation", "sortings", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,j,k,d,n,sum,arr[3005],keep[3005];\n    while(scanf(\"%d\",&n)==1)\n    {\n        sum=0;\n        k=0;\n        for(i=1; i<=n; i++)\n        {\n            scanf(\"%d\",&d);\n            if(arr[d]==0)\n            {\n                arr[d]=d;\n            }\n            else\n            {\n                keep[++k]=d;\n            }\n        }\n        for(i=1; i<=k; i++)\n        {\n            d=keep[i];\n\n            for(j=d+1;; j++)\n            {\n                if(arr[j]==0)\n                {\n                    arr[j]=d;\n                    sum=sum+j-d;\n                    break;\n                }\n\n            }\n        }\n        memset(arr,0,sizeof(arr));\n        memset(keep,0,sizeof(keep));\n\n\n        printf(\"%d\\n\",sum);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,j,k,d,n,sum,arr[30005],keep[30005];\n    while(scanf(\"%d\",&n)==1)\n    {\n        sum=0;\n        k=0;\n        for(i=1; i<=n; i++)\n        {\n            scanf(\"%d\",&d);\n            if(arr[d]==0)\n            {\n                arr[d]=d;\n            }\n            else\n            {\n                keep[++k]=d;\n            }\n        }\n        for(i=1; i<=k; i++)\n        {\n            d=keep[i];\n\n            for(j=d+1;; j++)\n            {\n                if(arr[j]==0)\n                {\n                    arr[j]=d;\n                    sum=sum+j-d;\n                    break;\n                }\n\n            }\n        }\n        memset(arr,0,sizeof(arr));\n        memset(keep,0,sizeof(keep));\n\n\n        printf(\"%d\\n\",sum);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.8300884955752212, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "010cf3feafc46f99fff0da22bb6c53a7", "bug_code_uid": "c73ea1e103720d8e576bde2116890b4c", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "e5d332975cb39bd76c73cdabca752203", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tlong int n;\n\tscanf(\"%ld\",&n);\n\tlong int i,j;\n\tint ans,ans1;\n\n\tfor(i=4;i<=(n-4)/2;i++)\n\t{\n\t\tans=checkprime(i);\n\t\tif(ans==1)\n\t\t{\n\t\t\tfor(j=n-4;j>=(n-4)/2;j--)\n\t\t\t{\n\t\t\t\tans1=checkprime(j);\n\t\t\t\tif(ans1==1)\n\t\t\t\t{\n\t\t\t\t\tif(i+j==n)\n\t\t\t\t\t{\t\n\t\t\t\t\t\tprintf(\"%ld %ld\\n\",i,j);\n\t\t\t\t\t\tgoto end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\nend:\n\treturn 0;\n}\n\n\nint checkprime(long int n)\n{\n\tlong int i,j;\n\tint ans=0;\n\tj=n/2;\n\tfor(i=2;i<=j;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tans=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ans;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tlong int n;\n\tscanf(\"%ld\",&n);\n\tlong int i,j;\n\tint ans,ans1;\n\n\tfor(i=4;i<=(n-4);i++)\n\t{\nrepeat:\t\t\nans=checkprime(i);\n\t\tif(ans==1)\n\t\t{\n\t\t\tfor(j=n-4;j>=4;j--)\n\t\t\t{\n\t\t\t\tans1=checkprime(j);\n\t\t\t\tif(ans1==1)\n\t\t\t\t{\n\t\t\t\t\tif(i+j==n)\n\t\t\t\t\t{\t\n\t\t\t\t\t\tprintf(\"%ld %ld\\n\",i,j);\n\t\t\t\t\t\tgoto end;\n\t\t\t\t\t\t//break;\n\t\t\t\t\t}\n\t\t\t\t\t//\t\t\t\tgoto repeat;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(i+j==n)\n\t\t\t\t\t\n{\ti++;goto repeat;}\n\t\t\t\t}\n\t\t\t\t//\tbreak;\n\t\t\t}\n\t\t\t//\tbreak;\t\n\t\t}\n\t}\nend:\n\treturn 0;\n}\n\n\nint checkprime(long int n)\n{\n\tlong int i,j;\n\tint ans=0;\n\tj=n/2;\n\tfor(i=2;i<=j;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tans=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ans;\n}\n"}
{"similarity_score": 0.9616908850726552, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "20104442aa293ae7c4f3ebb1efec6e7b", "bug_code_uid": "ac9e17c30dc14a47824937aa20bf8a18", "src_uid": "f2fc865a44b39179261a7311adf48390", "apr_id": "2835925541716009a08209139c849fa7", "difficulty": 1200, "tags": ["data structures", "two pointers", "binary search"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\n#define N 200000\n\nint d[N + 1];\n\nint main () {\n\tint n, i, j, s, s1, s2;\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &d[i]);\n\t}\n\n\ts = s1 = s2 = 0;\n\ti = 0, j = n - 1;\n\twhile (i <= j) {\t\n\t\tif (s1 + d[i] <= s2) {\n\t\t\ts1 += d[i];\n\t\t\t++i;\n\t\t}\n\t\telse {\n\t\t\ts2 += d[j];\n\t\t\t--j;\n\t\t}\n\n\t\tif (s1 == s2) {\n\t\t\ts = s1;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", s);\n}", "fixed": "#include <stdio.h>\n\n#define N 200000\n\nlong long d[N + 1];\n\nint main () {\n\tint n, i, j;\n\tlong long s, s1, s2;\n\tscanf(\"%d\", &n);\n\n\tfor (i = 0; i < n; i++) {\n\t\tscanf(\"%lld\", &d[i]);\n\t}\n\n\ts = s1 = s2 = 0;\n\ti = 0, j = n - 1;\n\twhile (i <= j) {\t\n\t\tif (s1 + d[i] <= s2) {\n\t\t\ts1 += d[i];\n\t\t\t++i;\n\t\t}\n\t\telse {\n\t\t\ts2 += d[j];\n\t\t\t--j;\n\t\t}\n\n\t\tif (s1 == s2) {\n\t\t\ts = s1;\n\t\t}\n\t}\n\t\n\tprintf(\"%lld\\n\", s);\n}"}
{"similarity_score": 0.9334741288278775, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "44add6a73b35fcf90571c039fa7bbbfd", "bug_code_uid": "692581f411a70a8e6b97b9e6fba5f84d", "src_uid": "5c33d1f970bcc2ffaea61d5407b877b2", "apr_id": "9c73071467b31351d87e5baeb5607c66", "difficulty": 1100, "tags": ["sortings", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\nstruct ne{\n\tchar num[105];\n\tint number;\n};\nstruct ne bb[102];\nint main()\n{\n\tint a,i,j,n=5;\n\tint t;\n\tint flag; \n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tflag=0;\n\t\tfor(a=0;a<n;a++)\n\t\t{\n\t\t\tscanf(\"%s\",bb[a].num);\n\t\t\tbb[a].number=strlen(bb[a].num);\n\t\t}\n\t\t//\u7ed3\u6784\u4f53\u4e2d,\u524d\u9762\u4e00\u90e8\u5206\u662f\u5b57\u7b26\u4e32,\u7136\u540e\u662f\u5b57\u7b26\u4e32\u957f\u5ea6\n\t\t//\u5148\u5192\u6ce1\u6392\u4e2a\u5e8f\n\t\tfor(i=0;i<n-1;i++)\n\t\t{//\u8ba9\u957f\u5ea6\u5c0f\u7684\u5b57\u7b26\u4e32\u5728\u524d\n\t\t\tfor(j=0;j<n-1;j++)\n\t\t\t{\n\t\t\t\tif(bb[j].number>bb[j+1].number)\n\t\t\t\t{\n\t\t\t\t\tbb[101]=bb[j];\n\t\t\t\t\tbb[j]=bb[j+1];\n\t\t\t\t\tbb[j+1]=bb[101];\n\t\t\t\t}\n\t\t\t}\n\t\t } \n\t\t //\u6bd4\u8f83\u5b57\u7b26\u4e32\u524d\u4e00\u4e2a\u662f\u4e0d\u662f\u540e\u4e00\u4e2a\u7684\u5b50\u96c6\n\t\t//\u795e\u5947\u7684strstr\u51fd\u6570... \n\t\t//\u5f53\u5b57\u7b26\u4e32\u76f8\u540c\u65f6\u8fd4\u56de\u7684\u4e0d\u662fNIULL\\ \n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(strstr(bb[i].num,bb[i-1].num)==NULL)\n\t\t\t{\n\t\t\t\tflag=1;\n//\t\t\t\tprintf(\"%s\\n\",bb[i-1].num); \n//\t\t\t\tprintf(\"%s\\n\",bb[i].num);\n\t\t\t}\n\t\t } \n\t\t if(flag==1)\n\t\t printf(\"NO\\n\");\n\t\t if(flag==0)\n\t\t {\n\t\t \tprintf(\"YES\\n\");\n\t\t \tfor(i=0;i<n;i++)\n\t\t \t{\n\t\t \t\tprintf(\"%s\\n\",bb[i].num);\n\t\t\t }\n\t\t  } \n\t}\n\t\n } ", "fixed": "#include <stdio.h>\n#include <string.h>\nstruct ne{\n\tchar num[105];\n\tint number;\n};\nstruct ne bb[102];\nint main()\n{\n\tint a,i,j,n=5;\n\tint t;\n\tint flag; \n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tflag=0;\n\t\tfor(a=0;a<n;a++)\n\t\t{\n\t\t\tscanf(\"%s\",bb[a].num);\n\t\t\tbb[a].number=strlen(bb[a].num);\n\t\t}\n\t\t//\u7ed3\u6784\u4f53\u4e2d,\u524d\u9762\u4e00\u90e8\u5206\u662f\u5b57\u7b26\u4e32,\u7136\u540e\u662f\u5b57\u7b26\u4e32\u957f\u5ea6\n\t\t//\u5148\u5192\u6ce1\u6392\u4e2a\u5e8f\n\t\tfor(i=0;i<n-1;i++)\n\t\t{//\u8ba9\u957f\u5ea6\u5c0f\u7684\u5b57\u7b26\u4e32\u5728\u524d\n\t\t\tfor(j=0;j<n-1;j++)\n\t\t\t{\n\t\t\t\tif(bb[j].number>bb[j+1].number)\n\t\t\t\t{\n\t\t\t\t\tbb[101]=bb[j];\n\t\t\t\t\tbb[j]=bb[j+1];\n\t\t\t\t\tbb[j+1]=bb[101];\n\t\t\t\t}\n\t\t\t}\n\t\t } \n\t\t //\u6bd4\u8f83\u5b57\u7b26\u4e32\u524d\u4e00\u4e2a\u662f\u4e0d\u662f\u540e\u4e00\u4e2a\u7684\u5b50\u96c6\n\t\t//\u795e\u5947\u7684strstr\u51fd\u6570... \n\t\t//\u5f53\u5b57\u7b26\u4e32\u76f8\u540c\u65f6\u8fd4\u56de\u7684\u4e0d\u662fNIULL\\ \n//\t\ti=1; \n\n\n\n\t\tfor(i = 1;i<n;i++)\n\t\t{\n\t\t\tif(strstr(bb[i].num,bb[i-1].num)==NULL)\n\t\t\t{\n\t\t\t\tflag=1;\n//\t\t\t\tprintf(\"%s\\n\",bb[i-1].num); \n//\t\t\t\tprintf(\"%s\\n\",bb[i].num);\n\t\t\t}\n\t\t\tif(bb[i].number==bb[i-1].number)\n\t\t\t{\n\t\t\t\tif(strcmp(bb[i].num,bb[i-1].num))\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t}\n\t\t } \n\t\t if(flag==1)\n\t\t printf(\"NO\\n\");\n\t\t if(flag==0)\n\t\t {\n\t\t \tprintf(\"YES\\n\");\n\t\t \tfor(i=0;i<n;i++)\n\t\t \t{\n\t\t \t\tprintf(\"%s\\n\",bb[i].num);\n\t\t\t }\n\t\t  } \n\t}\n\t\n } "}
{"similarity_score": 0.9959294436906377, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "0d94820ef82cc60f26e5fd0cbe53dab0", "bug_code_uid": "fa5f961b66388cd6446c76d2f290166c", "src_uid": "648ec67565c506c3e2ffd007ad44e8c3", "apr_id": "c65958c5b321d75c35328f6b97bd1406", "difficulty": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint ss(int x)\r\n{\r\n    int i;\r\n    if(x==2)return 1;\r\n    else\r\n    {\r\n       if(x%2==0)return 0;\r\n       else\r\n       {\r\n           for(i=2;i<=(x-1)/2;i++){\r\n            if(x%i==0)\r\n           {\r\n               return 0;\r\n               break;\r\n           }\r\n           if(i==(x-1)/2)\r\n           {return 1;\r\n             break;\r\n           }\r\n       }\r\n    }\r\n}\r\n}\r\nint main()\r\n{\r\n     int t;\r\n     scanf(\"%d\",&t);\r\n     int i;\r\n     for(i=0;i<t;i++)\r\n     {\r\n         int y,a,b;\r\n         scanf(\"%d\",&y);\r\n         for(a=y+1;;a++)\r\n         {\r\n             if(ss(a)==1)break;\r\n         }\r\n         for(b=y+y+1;;b++)\r\n         {\r\n             if(ss(b)==1)break;\r\n         }\r\n         printf(\"%d\\n\",a*b);\r\n     }\r\n\r\n}\r\n", "fixed": "#include<stdio.h>\r\nint ss(int x)\r\n{\r\n    int i;\r\n    if(x==2)return 1;\r\n    else\r\n    {\r\n       if(x%2==0)return 0;\r\n       else\r\n       {\r\n           for(i=2;i<=(x-1)/2;i++){\r\n            if(x%i==0)\r\n           {\r\n               return 0;\r\n               break;\r\n           }\r\n           if(i==(x-1)/2)\r\n           {return 1;\r\n             break;\r\n           }\r\n       }\r\n    }\r\n}\r\n}\r\nint main()\r\n{\r\n     int t;\r\n     scanf(\"%d\",&t);\r\n     int i;\r\n     for(i=0;i<t;i++)\r\n     {\r\n         int y,a,b;\r\n         scanf(\"%d\",&y);\r\n         for(a=y+1;;a++)\r\n         {\r\n             if(ss(a)==1)break;\r\n         }\r\n         for(b=a+y;;b++)\r\n         {\r\n             if(ss(b)==1)break;\r\n         }\r\n         printf(\"%d\\n\",a*b);\r\n     }\r\n\r\n}\r\n"}
{"similarity_score": 0.4141145139813582, "equal_cnt": 27, "replace_cnt": 23, "delete_cnt": 4, "insert_cnt": 0, "fix_ops_cnt": 27, "lang": "GNU C11", "fix_code_uid": "ae9d55bd39174c09f2b50cbc4cb2e265", "bug_code_uid": "a1683df8ad30897fc527c4843f2cc288", "src_uid": "eb2d1072c5308d9ef686315a122d9d3c", "apr_id": "356399dc660333788347b11b6575486b", "difficulty": 1300, "tags": ["combinatorics", "implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n\tlong long N, *n, min = 999999999, max = -99999999, minx = 0, maxx= 0, ways;\n\tint i;\n\n\tscanf(\"%lld\", &N);\n\tn =(long long int *)malloc(sizeof(long long int) * N);\n\tfor(i = 0; i < N; i++)\n    {\n        scanf(\"%lld\", &n[i]);\n        if(n[i] < min)\n        {\n            min = n[i];\n            minx = 0;\n        }\n        if(n[i] > max)\n        {\n            max = n[i];\n            maxx = 0;\n        }\n    }\n    for(i = 0; i < N; i++)\n    {\n        if(n[i] == min)\n        {\n            minx++;\n        }\n        if(n[i] == max)\n        {\n            maxx++;\n        }\n    }\n\tways = maxx * minx;\n\tif(ways < 1)\n\t\tways = 1;\n    printf(\"%lld %lld\\n\", max - min, ways);\n\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    long long int n,*a,max=0,min,mxpos=0,mnpos=0,t,i;\n    scanf(\"%lld\",&n);\n    a=(long long int *)malloc(sizeof(long long int) * n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        if(i==0)\n        {\n            min=a[i];\n        }\n        if(max<=a[i])\n        {\n            max=a[i];\n        }\n        if(min>=a[i])\n        {\n            min=a[i];\n        }\n    }\n    for(i=0; i<n; i++)\n    {\n        if(max==a[i])\n        {\n            mxpos++;\n        }\n        if(min==a[i])\n        {\n            mnpos++;\n        }\n    }\n    if(max==min)\n    {\n        printf(\"%lld %lld\\n\",max-min,(n*(n-1))/2);\n    }\n    else\n    {\n        printf(\"%lld %lld\\n\",max-min,mxpos*mnpos);\n    }\n    return 0;\n}"}
{"similarity_score": 0.6318607764390897, "equal_cnt": 14, "replace_cnt": 9, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "34baa983bbc651eae41ec86af1e7213f", "bug_code_uid": "8d5f306e712676e040a136554cb11f6a", "src_uid": "101fec8d8e169f941e71281048468121", "apr_id": "f8f3f03c79f3686370f38b7acc9dbfd5", "difficulty": 1100, "tags": ["implementation", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n    int n,i,t,k=0,j;\n    scanf(\"%d\",&n);\n    int a[n];\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=0;i<n;i++)\n        for(j=i+1;j<n;j++)\n    {\n        if(a[i]!=a[j])\n       {\n        t=j-i;\n        k=t>k?t:k;\n       }\n    }\n    k=t>k?t:k;\n    printf(\"%d\",k);\n}\n", "fixed": "#include<stdio.h>\n\nint main()\n{\n    int n,i,k=0,max1,max2,t=0;\n    scanf(\"%d\",&n);\n    int a[n];\n\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&a[i]);\n\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=a[n-1])\n        {\n            max1=n-i-1;\n            break;\n        }\n    }\n    for(i=n-1;i>0;i--)\n    {\n        if(a[i]!=a[0])\n        {\n            max2=i;\n            break;\n        }\n    }\n    max1=max1>max2?max1:max2;\n    printf(\"%d\",max1);\n}\n"}
{"similarity_score": 0.5457340507302075, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "5a44d43575ffd0574365c612ee7ac7cb", "bug_code_uid": "c8a5c6490de3ec77089b5517a43b7afb", "src_uid": "af036416721694d1843368988ca78e8e", "apr_id": "86918bf82f274ca2d7ab849ad6bb4455", "difficulty": 1400, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,q;\n    scanf(\"%d%d\",&n,&q);\n    int i[2][100002]={0};\n    for(int m=0;m<q;m++)\n    {\n        int r,c;\n        scanf(\"%d%d\",&r,&c);\n        if(i[r-1][c]==0)i[r-1][c]=1;\n        else i[r-1][c]=0;\n        int u=0;\n        for(int o=1;o<=n;o++)\n        {\n            if((i[0][o-1]==0&&i[0][o]==0)||(i[1][o-1]==0&&i[1][o]==0))\n            {\n                continue;\n            }\n            else\n            {\n                u=1;break;\n            }\n        }\n        if(u==0)printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,q;\n    scanf(\"%d%d\",&n,&q);\n    int i[2][100002]={0};\n    int u=0;\n    int l=0;\n    int k=0;\n    for(int m=0;m<q;m++)\n    {\n        int r,c;\n        scanf(\"%d%d\",&r,&c);\n        l=0;\n        if((i[0][c-1]==0&&i[0][c]==0)||(i[1][c-1]==0&&i[1][c]==0));\n        else l++;\n        if((i[0][c+1]==0&&i[0][c]==0)||(i[1][c+1]==0&&i[1][c]==0));\n        else l++;\n        if(i[r-1][c]==0)i[r-1][c]=1;\n        else i[r-1][c]=0;\n        k=0;\n        if((i[0][c-1]==0&&i[0][c]==0)||(i[1][c-1]==0&&i[1][c]==0));\n        else k++;\n        if((i[0][c+1]==0&&i[0][c]==0)||(i[1][c+1]==0&&i[1][c]==0));\n        else k++;\n        u+=(k-l);\n        if(u==0)printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n}\n"}
{"similarity_score": 0.8643617021276596, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "9cbba957947290cc498e6f130999ce1a", "bug_code_uid": "289c910bd10eb28b174dde53d7f48f03", "src_uid": "0e0ef011ebe7198b7189fce562b7d6c1", "apr_id": "8b91c1136a458b31fa7995ff6a4dba88", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void)\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor (int i=0;i<t;i++)\n\t{\n\t\tint n,diff,flag=0,flag2=0,flag3=0,count=0;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],b[n];\n\t\tfor (int j=0;j<n;j++)\n\t\t{\n\t\t\t\n\t\tscanf (\"%d\",&a[j]);\t\n\t\t}\n\t\tfor (int j=0;j<n;j++)\n\t\t{\n\t\t\tscanf (\"%d\",&b[j]);\t\n\t\t}\n\t\tdiff=b[0]-a[0];\n\t\tif (diff<0)\n\t\tflag=1;\n\t\tint j=1;\t\n\t\twhile (j<n)\n\t\t{\n\t\t\t\n\t\t\tif (diff>0 && a[j]==b[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\t/*else if (a[j]==b[j] && flag==0)\n\t\t\tcontinue;*/\n\t\t\t\n\t\t\telse if (a[j]!=b[j])\n\t\t\t{\n\t\t\t\tif (diff!=(b[j]-a[j]))\n\t\t\t\t{\n\t\t\t\t\tif (diff!=0 || a[j]>b[j] || count>0)\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdiff=b[j]-a[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tj++;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\tif (flag==0)\n\t\tprintf(\"YES\\n\");\n\t\telse\n\t\tprintf(\"NO\\n\");\n\t\t\n\t}\t\n\t\n\t\n\treturn 0;\n}", "fixed": "#include <stdio.h>\nint main(void)\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor (int i=0;i<t;i++)\n\t{\n\t\tint n,diff,flag=0,flag2=0,flag3=0,count=0;\n\t\tscanf(\"%d\",&n);\n\t\tint a[n],b[n];\n\t\tfor (int j=0;j<n;j++)\n\t\t{\n\t\t\t\n\t\tscanf (\"%d\",&a[j]);\t\n\t\t}\n\t\tfor (int j=0;j<n;j++)\n\t\t{\n\t\t\tscanf (\"%d\",&b[j]);\t\n\t\t}\n\t\tdiff=b[0]-a[0];\n\t\tif (diff<0)\n\t\tflag=1;\n\t\tint j=1;\t\n\t\twhile (j<n)\n\t\t{\n\t\t\t\n\t\t\tif (diff>0 && a[j]==b[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\telse if (a[j]!=b[j])\n\t\t\t{\n\t\t\t\tif (diff!=(b[j]-a[j]))\n\t\t\t\t{\n\t\t\t\t\tif (diff!=0 || a[j]>b[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdiff=b[j]-a[j];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (count>0)\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tj++;\t\n\t\t}\n\t\tif (flag==0)\n\t\tprintf(\"YES\\n\");\n\t\telse\n\t\tprintf(\"NO\\n\");\n\t\t\n\t}\t\n\t\n\t\n\treturn 0;\n}"}
{"similarity_score": 0.14089661482159194, "equal_cnt": 15, "replace_cnt": 14, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 15, "lang": "GNU C11", "fix_code_uid": "324d831349e456f60f73363b7e8f97e9", "bug_code_uid": "46078279a56c34fc65506a9c966ba81a", "src_uid": "6d7364048428c70e0e9b76ab1eb8cc34", "apr_id": "3f6c4a33e5771b9edd31d32cc3bf2bd5", "difficulty": 1200, "tags": ["constructive algorithms"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nlong long int min(int a, int b)\n{\n\tif(a>b)\n\t\treturn b;\n\telse\n\t\treturn a;\n}\nint main()\n{\n\tlong long int n,a,b,c;\n\tscanf(\"%lld%lld%lld%lld\",&n,&a,&b,&c);\n\tlong long int z=4-n%4;\n\tlong long int l;\n\tif(z==3)\n\t{\n\t\tl= min((3*a),c);\n\t\tl= min(l,(a+b));\n\t\t//l=min(l,(2*b+c));\n\t}\n\tif(z==2)\n\t{\n\t\t l=min(2*a,b);\n\t\tl=min(l,2*c);\n\t}\n\tif(z==1)\n\t{\n\t\tl=min((2*b+c),a);\n\t}\n\tif(z==4)\n\t{\n\t\tl=0;\n\t}\n\tprintf(\"%lld\",l);\n\treturn 0;\t\t\n}", "fixed": "#include <stdio.h>\ntypedef struct flower\n{\n\tint value;\n\tint index;\n\tint beauty;\n}f;\nint max(int a, int b)\n{\n\tif (a>b)\n\t\treturn a;\n\telse\n\t\t return b;\n}\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[n],i,j,k;\n\tint beauty[110]={0};\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tint max1=0,max2=0;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint k,b;\n\t\tscanf(\"%d%d\",&k,&b);\n\t\tfor(j=k;j<=b;j++)\n\t\t{\n\t\t\tbeauty[i]+=a[j];\n\t\t}\n\t\t\n\t\tif((max1+beauty[i])>max1)\n\t\t{\n\t\t\tmax1=max1+beauty[i];\n\t\t}\n\t\t//max1=max(beauty[i-1],max(beauty[i],(beauty[i-1]+beauty[i])));\n\t\t//if(max1>=max2)\n\t\t//\tmax2=max1;\n\t\t//printf(\"%d\\n\",beauty[i] );\n\t}\n\t\t\tprintf(\"%d\\n\",max1 );\n\n\t//printf(\"%d\",max2);\n\treturn 0;\n}"}
{"similarity_score": 0.9968454258675079, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "98a1f2d5561022bf312b05b352a2ce06", "bug_code_uid": "c08d178c1099aec54d31f1a5f5334bda", "src_uid": "f98d1d426f68241bad437eb221f617f4", "apr_id": "0b27f721bc1c68eb8de564cd5279e73e", "difficulty": 900, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int t,i,n,k,d,ans;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d %d\",&n,&k);\n        ans=0;\n        d=n-k;\n        if(n>k && d%2){\n            ans=d;\n        }\n        else if(n<k){\n            ans=k-n;\n        }\n            printf(\"%d\\n\",ans);\n    }\n\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    int t,i,n,k,d,ans;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++){\n        scanf(\"%d %d\",&n,&k);\n        ans=0;\n        d=n-k;\n        if(n>k && d%2){\n            ans=1;\n        }\n        else if(n<k){\n            ans=k-n;\n        }\n            printf(\"%d\\n\",ans);\n    }\n\n    return 0;\n}\n"}
{"similarity_score": 0.2953904045155221, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 10, "lang": "GNU C11", "fix_code_uid": "b9dd10df0410d9bcd60381f79fa0fc6f", "bug_code_uid": "b22adb35a834df6edf9428763b0a91b8", "src_uid": "0a720a0b06314fde783866b47f35af81", "apr_id": "25b54fa38e509e2d4f267a65bd3dd1b1", "difficulty": 1300, "tags": ["binary search", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int t,w;\n    long x,i,a,b;\n\n\n    scanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{\n\n\n    scanf(\"%ld %ld\",&a,&b);\n\nif(a==b)\n    printf(\"no\\n\");\nelse{\n\n    w=0;\n    do\n    {\n        if(a>b)\n        {\n            x=a/2;\n            a=a-2*x;\n            b=b-x;\n            if(a==0&&b==0)\n            {\n                    w=1;\n                    break;\n            }\n\n\n        }\n        else if(b>a)\n        {\n            x=b/2;\n            b=b-2*x;\n            a=a-x;\n            if(a==0&&b==0)\n            {\n                    w=1;\n                    break;\n            }\n        }\n\n\n    }while(!(w||(a<0||b<0)));\n\n    if(w==1)printf(\"yes\\n\");\n    else printf(\"no\\n\");\n\n    }\n}\nreturn 0;\n}\n", "fixed": "\n#include <stdio.h>\nint main()\n{\n    int t,w;\n    long aux,i,a,b;\n\n\n    scanf(\"%d\",&t);\nfor(i=0;i<t;i++)\n{\n    scanf(\"%ld %ld\",&a,&b);\n\n\nif(a>b){\n    aux=a;\n    a=b;\n    b=aux;\n  if(((a+b)%3)==0&&a*2>=b)\n        printf(\"yes\\n\");\n  else printf(\"no\\n\");\n}\nelse\n    if(((a+b)%3)==0&&a*2>=b)\n        printf(\"yes\\n\");\n  else printf(\"no\\n\");\n}\n\nreturn 0;\n}\n"}
{"similarity_score": 0.976, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "0a7998bae28e911515ada61b47310bfa", "bug_code_uid": "0deb285e74e599866201c122eb1052ce", "src_uid": "dd84c2c3c429501208649ffaf5d91cee", "apr_id": "5b83987166ad3de49f63f3d23f7b0ec6", "difficulty": 1300, "tags": ["brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main()\n{\n\tint n,count=0,z;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]%2==0)\n\t\t{\n\t\tcount++;\n\t\t}\n\t\t\n\t}\n\tif(count>1)\n\t{\n\t\tfor(int i=0;i<n;i++)\n\t   {\n\t\t\n\t\tif(a[i]%2!=0)\n\t\t{z=i+1;\n\t\tbreak;}\n\t\t\n\t\t\n\t    }\n\t}\n\telse\n\t{\n\t\tfor(int i=0;i<n;i++)\n\t   {\n\t\t\n\t\tif(a[i]%2==0)\n\t\t{z=i+1;\n\t\tbreak;}\n\t    }\n\t}\n\t\tprintf(\"%d\",count);\n\t\n}", "fixed": "#include<stdio.h>\n\nint main()\n{\n\tint n,count=0,z;\n\tscanf(\"%d\",&n);\n\tint a[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]%2==0)\n\t\t{\n\t\tcount++;\n\t\t}\n\t\t\n\t}\n\tif(count>1)\n\t{\n\t\tfor(int i=0;i<n;i++)\n\t   {\n\t\t\n\t\tif(a[i]%2!=0)\n\t\t{z=i+1;\n\t\tbreak;}\n\t\t\n\t\t\n\t    }\n\t}\n\telse\n\t{\n\t\tfor(int i=0;i<n;i++)\n\t   {\n\t\t\n\t\tif(a[i]%2==0)\n\t\t{z=i+1;\n\t\tbreak;}\n\t    }\n\t}\n\t\tprintf(\"%d\",z);\n\t\n}"}
{"similarity_score": 0.9937304075235109, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "18b60933ce1e23e7e8e98cee45f28f83", "bug_code_uid": "561770bcd423f0415e61d1a0b603d28a", "src_uid": "2a6c457012f7ceb589b3dea6b889f7cb", "apr_id": "acc2dcb4809d0cc98e13a9760491e341", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n        int reqd=0,p[100],q[100],n,i,j;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++)\n                scanf(\"%d %d\",&p[i],&q[i]);\n        for(j=1;j<=n;j++)\n        {if ( p[j]<q[j] && p[j]-q[j]>=2)\n                reqd=reqd+1;\n        }\n        printf(\"%d\",reqd);\n        return 0;\n}\n\n", "fixed": "#include<stdio.h>\nint main()\n{\n        int reqd=0,p[100],q[100],n,i,j;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++)\n                scanf(\"%d %d\",&p[i],&q[i]);\n        for(j=1;j<=n;j++)\n        {if ( p[j]<q[j] && q[j]-p[j]>=2)\n                reqd=reqd+1;\n        }\n        printf(\"%d\",reqd);\n        return 0;\n}\n\n"}
{"similarity_score": 0.994341147938561, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "16fe94ddb4241d1b0454275ce38f99e1", "bug_code_uid": "661e1ec14f902ae2a6c0c544bcc9b9ce", "src_uid": "554115bec46bb436a0a1ddf8c05a2d08", "apr_id": "1ca666ea624bd23cf6cfd6c4b4348676", "difficulty": 1100, "tags": ["greedy", "constructive algorithms", "implementation", "brute force", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n\tint m,n,i,j,q=0,op;\n\tscanf(\"%d%d\",&m,&n);\n\tchar ab[120][60],ba[120][60],c[120000],d[120000];\n\tfor(i=0;i<m;i++){\n\t\tscanf(\"%s\",ab[i]);\n\t\tfor(j=0;j<n;j++)\n\t\tba[i][n-j-1]=ab[i][j];\n\t}\n\top=0;\n\tfor(i=0;i<m;i++){\n\t\tif(strcmp(ab[i],ba[i])==0){\n\t\tstrcat(c,ab[i]);\n\t\top=1; \n\t}\n\tfor(j=i+1;j<m;j++){\n\t\tif(strcmp(ab[j],ba[i])==0){\n\t\t\tstrcat(d,ab[i]);\n\t\t\tq++; \n\t\t}\n\t}\n}\n     if(op==0) printf(\"%d\\n\",q*2*n);\n     else printf(\"%d\\n\",(n+2*q*n));\n     strcat(d,c);\n     printf(\"%s\",d);\n     for(i=strlen(d)-op*n-1;i>=0;i--)\n     printf(\"%c\",d[i]);\n\t return 0; \n } \n", "fixed": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint main()\n{\n\tint m,n,i,j,q=0,op;\n\tscanf(\"%d%d\",&m,&n);\n\tchar ab[120][60],ba[120][60],c[120000],d[120000];\n\tfor(i=0;i<m;i++){\n\t\tscanf(\"%s\",ab[i]);\n\t\tfor(j=0;j<n;j++)\n\t\tba[i][n-j-1]=ab[i][j];\n\t}\n\top=0;\n\tfor(i=0;i<m;i++){\n\t\tif(strcmp(ab[i],ba[i])==0&&op==0){\n\t\tstrcat(c,ab[i]);\n\t\top=1; \n\t}\n\tfor(j=i+1;j<m;j++){\n\t\tif(strcmp(ab[j],ba[i])==0){\n\t\t\tstrcat(d,ab[i]);\n\t\t\tq++; \n\t\t}\n\t}\n}\n     if(op==0) printf(\"%d\\n\",q*2*n);\n     else printf(\"%d\\n\",(n+2*q*n));\n     strcat(d,c);\n     printf(\"%s\",d);\n     for(i=strlen(d)-op*n-1;i>=0;i--)\n     printf(\"%c\",d[i]);\n\t return 0; \n } \n"}
{"similarity_score": 0.9939024390243902, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "0e065e410c3f1f41f1602e8fb2a44a42", "bug_code_uid": "644aeb99ef9038e2349a9ebd0fa6e7a0", "src_uid": "0beecbd62aa072a2f3aab542eeb56373", "apr_id": "7d6f8d5961ba250e54df36a82d060572", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        int ans;\n        while (n >= 10)\n        {\n            ans += n - (n % 10);\n            n = (n / 10) + (n % 10);\n        }\n        ans += n;\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int t;\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        int n;\n        scanf(\"%d\", &n);\n        int ans = 0;\n        while (n >= 10)\n        {\n            ans += n - (n % 10);\n            n = (n / 10) + (n % 10);\n        }\n        ans += n;\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.6554734721289456, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 12, "lang": "GNU C", "fix_code_uid": "56a0e28a975cb337366ec7e33471d412", "bug_code_uid": "87be22e2ba64c1c90ebd774972e66028", "src_uid": "4849a1f65afe69aad12c010302465ccd", "apr_id": "04d6966650da6571663ec981a5aca9a0", "difficulty": 1100, "tags": ["sortings", "greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <math.h>\n#include <string.h>\n#include <stdio.h>\n#include <stdlib.h>\n#define s(t) scanf(\"%d\",&t)\n#define s2(t,u) scanf(\"%d%d\",&t,&u)\n#define ss(t) scanf(\"%s\",&t)\n#define rep(t,u) for(int i=t;i<u;i++)\n#define repr(t,u) for(int i=u;i<t;i--)\n#define max(x,y) x>y?x:y\n#define pi(t) printf(\"%d\\n\",t)\n#define ps(t) printf(\"%s\\n\",t)\nint main()\n{\n int l,m;\n s(l);\n int a[l],b[l];\n rep(0,l)\n s2(a[i],b[i]);\n s(m);\n int c[m],d[m];\n int max=0;\n rep(0,m)\n    {\n\ts2(c[i],d[i]);\n    for(int j=0;j<l;j++)\n    {\n\tif(c[i]>b[j])\n\t if(c[i]-b[j]>max)\n     max=c[i]-b[j];\n     if(a[j]>d[i])\n     if(a[j]-d[i]>max)\n     max=a[j]-d[i];\n     //pi(a[j]);\n }\n \n}\npi(max);\n}\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "fixed": "#include <math.h>\n#include <string.h>\n#include <stdio.h>\n#include <stdlib.h>\n#define s(t) scanf(\"%d\",&t)\n#define s2(t,u) scanf(\"%d%d\",&t,&u)\n#define ss(t) scanf(\"%s\",&t)\n#define rep(t,u) for(int i=t;i<u;i++)\n#define repr(t,u) for(int i=u;i<t;i--)\n#define max(x,y) x>y?x:y\n#define pi(t) printf(\"%d\\n\",t)\n#define ps(t) printf(\"%s\\n\",t)\nint main()\n{\n int l,m;\n s(l);\n int t1=0,t2=0,u1=0,u2=0;\n int a[l],b[l];\n rep(0,l)\n {\n \t\n  s2(a[i],b[i]);\n  if(i==0)\n \tt2=b[0];\n  if(a[i]>t1)\n  t1=a[i];\n  if(b[i]<t2)\n  t2=b[i];\n}\n s(m);\n int c[m],d[m];\n int max=0;\n rep(0,m)\n    {\n    \t\n\ts2(c[i],d[i]);\n\tif(i==0)\n    \tu2=d[0];\n\tif(c[i]>u1)\n\tu1=c[i];\n\tif(d[i]<u2)\n\tu2=d[i];\n}\n    int temp=0,temp2=0;\n\tif(u1>t2)\n     temp=u1-t2;\n     if(t1>u2)\n     temp2=t1-u2;\n     max=max(temp,temp2);\n     //pi(a[j]);\npi(max);\n}\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"similarity_score": 0.656282450674974, "equal_cnt": 14, "replace_cnt": 6, "delete_cnt": 4, "insert_cnt": 4, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "e403d6a4687ebcee77b110ba34409306", "bug_code_uid": "a811ed5b565ce66a116a1d7fae810a10", "src_uid": "69f4e340b3f6e1d807e0545ebea1fe2f", "apr_id": "241b2d0997ac52ac1b474e841b3b8be9", "difficulty": 1100, "tags": ["dp", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n int main ()\n {\n     int arr[160000];\n     int sum=0,min=99999999999,b=0;\n     int n,m;\n     scanf(\"%d%d\",&n,&m);\n     int arr1[n];\n     for(int i=1;i<=n;i++)\n     {\n         scanf(\"%d\",&arr[i]);\n         if(i>=m)\n         {\n             for(int j=i;j>i-m;j--)\n                 sum+=arr[j];\n             if(sum<min){\n                min=sum;\n                b=i-m+1;\n             }\n             sum=0;\n         }\n     }\n     printf(\"%d\",b);\n\n }\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\n int main ()\n {\n     int arr[160000]={0};\n     int sum=0,min=99999999999,b=1;\n     int n,m;\n     scanf(\"%d%d\",&n,&m);\n     for(int i=1;i<=n;i++)\n     {\n         scanf(\"%d\",&arr[i]);\n         arr[i]+=arr[i-1];\n     }\n     for(int i=1;i<=n-m+1;i++)\n     {\n\n            sum=arr[i+m-1]-arr[i-1];\n           // printf(\"%d\\n\",sum);\n            if(sum<min)\n            {\n                min=sum;b=i;\n            }\n     }\n     printf(\"%d\",b);\n }\n"}
{"similarity_score": 0.928643216080402, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "da536eafdddce51a5f54793372b6b504", "bug_code_uid": "b8900108675f648012ccb3d0d48cae1e", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "812997e87598bc0ed0b66bc49ce42e70", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n\n#include<string.h>\nint main()\n{\n    long long int ch[1000];\n    char arr[1000];\n    long long  int a,b,c,d,e=0,i=0,tep=0,j=0,k=0,l=0,m=0,n=0;\n    arr[0]=0;\n    ch[0]=0;\n    scanf(\"%lld\",&a);\n    i=0;\n    j=1;\n    k=0;\n    while(i<a)\n    {\n        scanf(\"%d\",&ch[i]);\n      if(i>0)\n       {\n        if(ch[i-1]<=ch[i])\n        {\n            j++;\n            if(k<j)\n                k=j;\n        }\n        else\n            j=1;\n      }\n     i++;\n    }\n    printf(\"%lld\\n\",k);\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n\n\n#include<string.h>\nint main()\n{\n    long long int ch[1000];\n    char arr[1000];\n    long long  int a,b,c,d,e=0,i=0,tep=0,j=0,k=0,l=0,m=0,n=0;\n    arr[0]=0;\n    ch[0]=0;\n    scanf(\"%lld\",&a);\n    i=0;\n    j=0;\n    k=0;\n    while(i<a)\n    {\n        scanf(\"%lld\",&b);\n \n        if(e<=b)\n        {\n            j++;\n            if(k<j)\n                k=j;\n        }\n        else\n            j=1;\n      \n      e=b;\n     i++;\n    }\n    printf(\"%lld\\n\",k);\n\n    return 0;\n}"}
{"similarity_score": 0.4027777777777778, "equal_cnt": 12, "replace_cnt": 6, "delete_cnt": 1, "insert_cnt": 5, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "8db77a9d2c2094d65040b34839db1cb5", "bug_code_uid": "3b9bdf25043206f24173dde644b2d859", "src_uid": "43b8e9fb2bd0ec5e0250a33594417f63", "apr_id": "8ca00f5124e2dcc21ca18e59fdfd6c25", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,k,t ;\n    scanf(\"%d\",&t) ;\n    while(t--)\n    {\n        scanf(\"%d%d\",&n,&k);\n        while((n%k)>(k/2))\n            n--;\n        printf(\"%d\\n\",n);\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint i, t, n, k,z;\n\tscanf(\"%d\", &t);\n\tfor (i = 0; i < t; i++)\n\t{\n\t\tscanf(\"%d%d\", &n, &k);\n\t\tz = n % k - k / 2;\n\t\tif (z>0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", n - z);\n\t\t}\n\t\telse printf(\"%d\\n\", n);\n\t}\n}"}
{"similarity_score": 0.9665924276169265, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "ff4e8aa619ae43a4ca207e6dbdc79f5e", "bug_code_uid": "8afcf4bff5afa042d7cf7e9a8caa11c5", "src_uid": "fad203b52e11706d70e9b2954c295f70", "apr_id": "01db0cba0dd3b75a8a41f6d1e394ce95", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong people[20001]={0},room[11]={0},d[20001][11]={0};\nint main(){\nlong n,m,k,i,j,t1,t2;\nscanf(\"%ld%ld%ld\",&n,&m,&k);\n\nprintf(\"%ld %ld %ld\",n,m,k);\n\nfor(i=1;i<=n;i++)\n    for(j=1;j<=m;j++)\n    scanf(\"%ld\",&d[i][j]);\n\nfor(i=1;i<=k;i++)\n{\n    scanf(\"%ld%ld\",&t1,&t2);\n    people[t1]--;\n    room[t2]++;\n}\n\n\nfor(j=1;j<=m;j++)\nfor(i=1;i<=n;i++)\nif(d[i][j]==1)\n        people[i]+=room[j];\n\nfor(i=1;i<=n;i++)\n    printf(\"%ld \",people[i]);\nreturn 0;\n\n}\n\n\n", "fixed": "#include<stdio.h>\nlong people[20001]={0},room[11]={0},d[20001][11]={0};\nint main(){\nlong n,m,k,i,j,t1,t2;\nscanf(\"%ld%ld%ld\",&n,&m,&k);\n\nfor(i=1;i<=n;i++)\n    for(j=1;j<=m;j++)\n    scanf(\"%ld\",&d[i][j]);\n\nfor(i=1;i<=k;i++)\n{\n    scanf(\"%ld%ld\",&t1,&t2);\n    people[t1]--;\n    room[t2]++;\n}\n\n\nfor(j=1;j<=m;j++)\nfor(i=1;i<=n;i++)\nif(d[i][j]==1)\n        people[i]+=room[j];\n\nfor(i=1;i<=n;i++)\n    printf(\"%ld \",people[i]);\nreturn 0;\n\n}\n\n\n"}
{"similarity_score": 0.9561200923787528, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "b27ff83de175559d2ae2203ce0d3f0f2", "bug_code_uid": "8481845cad7c54862aa94a3c5db9567f", "src_uid": "dc548fe1d8683b4b0ee4e0fa67638185", "apr_id": "a0026e95d8e47c5990b8f90b3cd3b3d0", "difficulty": 1200, "tags": ["constructive algorithms", "number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    long long int n,k,i,c=1,j;\n    scanf(\"%lld %lld\", &n,&k);\n    if(n==1 || k==n){\n        printf(\"-1\");\n        return 0;\n    }\n    if(k==n-1){\n        for(i=1;i<=n;i++)    printf(\"%lld \",i);\n        return 0;\n    }\n    printf(\"%lld \",k+2);\n    for(i=0,j=2;i<k;i++,j++){\n        printf(\"%lld \",j);\n    }\n    for(j=k+2;j<n;j++){\n        printf(\"%lld \",j+1);\n    }\n    printf(\"1\");\n}\n", "fixed": "#include<stdio.h>\nint main(){\n    long long int n,k,i,c=1,j;\n    scanf(\"%lld %lld\", &n,&k);\n    if(n==1 || k==n){\n        if(k==0)    printf(\"1\");\n        else printf(\"-1\");\n        return 0;\n    }\n    if(k==n-1){\n        for(i=1;i<=n;i++)    printf(\"%lld \",i);\n        return 0;\n    }\n    printf(\"%lld \",k+2);\n    for(i=0,j=2;i<k;i++,j++){\n        printf(\"%lld \",j);\n    }\n    for(j=k+2;j<n;j++){\n        printf(\"%lld \",j+1);\n    }\n    printf(\"1\");\n}\n"}
{"similarity_score": 0.6572104018912529, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "a9ca6fcd9dce9351553b958cb500e494", "bug_code_uid": "bc4501052d0582e40b868cd4a2449ff7", "src_uid": "b37bbf1fe9ac5144cfa230633ccbdd79", "apr_id": "e6525a34cf35687fdc8caaaf202cd8e7", "difficulty": 800, "tags": ["constructive algorithms", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint i,n;\n\t\tscanf(\"%d\",&n);\n\t\tchar s[2*n];\n\t\tscanf(\"%s\",s);\n\t\tfor(i=0;i<n;i++)\n\t\tprintf(\"%c\",s[i]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint i=0,n;\n\t\tscanf(\"%d\",&n);\n\t\tchar s[2*n];\n\t\tscanf(\"%s\",s);\n\t\twhile(n--)\n\t\t{\n\t\tprintf(\"%c\",s[i]);\n\t\ti+=2;\n\t    }\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.4554140127388535, "equal_cnt": 19, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 18, "lang": "GNU C11", "fix_code_uid": "e33fdb7e41c4550bde048d575a6599dc", "bug_code_uid": "d7543dbbd5a8c20a9c59ec1095d8d569", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "6edb7d8bf82077719a0b40b49f7a3abc", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid main()\n{int n,i,an=0,da=0;\nchar a[100000];\n\tscanf(\"%d\\n\",&n);\n\tfor(i=0;i<n;i++)\n\tscanf(\"%c\",&a[i]);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i]=='A')\n\t\tan++;\n\t\tif(a[i]=='D')\n\t\tda++;\n\t}\n\tif(an>da)\n\tprintf(\"ANTON\");\n\tif(an<da)\n\tprintf(\"DANIK\");\n\tif(an==da)\n\tprintf(\"FRIENDSHIP\");\n}", "fixed": "#include<stdio.h>\nint main()\n{char s[100000];\nint n,i,a=0,d=0;\n    scanf(\"%d\",&n);\n  for(i=0;i<=n;i++)\n    scanf(\"%c\",&s[i]);\n    for(i=0;i<=n;i++)\n    {if(s[i]=='A')\n      a++;\n    if(s[i]=='D')\n      d++;\n    }\n    if(a==d)\n    printf(\"Friendship\\n\");\n    if(a>d)\n    printf(\"Anton\\n\");\n    if(a<d)\n    printf(\"Danik\\n\");\nreturn 0;    \n}"}
{"similarity_score": 0.63003663003663, "equal_cnt": 9, "replace_cnt": 6, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "c056b42d519664eb3e52e5de982edead", "bug_code_uid": "95e66d7cd8bc5253ecea3d8b73136d4d", "src_uid": "3e27f1c06a263760f5b53c3afe4bf7ee", "apr_id": "92176269c6a2bb8924132aaefac82dd9", "difficulty": 900, "tags": ["brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\n#include <math.h>\n#define MIN(X,Y) (X<Y)?X:Y\nlong long int dp[10000000000000002];\nlong long int solve(long long int n){\n  if(n <= 0){\n    return dp[n] = 0;\n  }\n  if(dp[n]!=-1)\n  return dp[n];\n  return dp[n] = MIN(MIN(15+solve(n-6),20+solve(n-8)),25+solve(n-10));\n}\nint main(int argc, char const *argv[]) {\n  int T;\n  long long int i,n;\n  scanf(\"%d\",&T);\n  while (T--) {\n    scanf(\"%lld\",&n);\n    for(i=0;i<n+1;i++)\n    dp[i] = -1;\n    printf(\"%lld\\n\",solve(n));\n  }\n}\n", "fixed": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\n#include <math.h>\n#define MAX(X,Y) (X>Y)?X:Y\nint main(int argc, char const *argv[]) {\n  int T;\n  long long int i,n;\n  scanf(\"%d\",&T);\n  while (T--) {\n    scanf(\"%lld\",&n);\n    n = MAX(n,6);\n    n = (n+1)/2;\n    printf(\"%lld\\n\",n*5);\n  }\n}\n"}
{"similarity_score": 0.26022304832713755, "equal_cnt": 17, "replace_cnt": 11, "delete_cnt": 0, "insert_cnt": 6, "fix_ops_cnt": 17, "lang": "GNU C11", "fix_code_uid": "efd4f737085e8d7c968e939d453e0553", "bug_code_uid": "412a555edef3964cc9c0bfd6ce489e28", "src_uid": "4322861935ca727b0de8556849bc5982", "apr_id": "0153d3dc1d5ea3774be8e15ecbce082f", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint t,a,b,c;\n\tscanf(\"%d\",&t);\n\twhile(t--) {\n\t\tint sum1=0,sum2=0,flag=0;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tif(c%2!=0&&c) {\n\t\t\tsum1+=3;\n\t\t}\n\t\tif(b%2!=0&&b) {\n\t\t\twhile(b) {\n\t\t\t\tif(sum2<sum1) {\n\t\t\t\t\tsum2+=2;\n\t\t\t\t\tb--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsum1+=2;\n\t\t\t\t\tb--;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\twhile(a) {\n\t\t\tif(sum1<=sum2) {\n\t\t\t\tsum1++;\n\t\t\t\ta--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsum2++;\n\t\t\t\ta--;\n\t\t\t}\n\t\t} \n\t\tprintf(\"%d\\n\",abs(sum1-sum2));\n\t}\n\treturn 0;\n}\n \t\t\t \t\t   \t \t\t   \t\t\t\t \t\t\t \t\t\t\t", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int num,i,j;\n    scanf(\"%d\",&num);\n    long long a,b,c;\n    for(i=0;i<num;i++){\n        scanf(\"%I64d\",&a);\n        scanf(\"%I64d\",&b);\n        scanf(\"%I64d\",&c);\n        printf(\"%I64d\\n\",(a+2*b+3*c)%2);\n    }\n    return 0;\n}\n \t\t\t  \t\t \t    \t\t\t\t\t   \t\t  \t\t\t\t\t"}
{"similarity_score": 0.9953488372093023, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "6095723d6cdcb677533ec592c789893d", "bug_code_uid": "6b86bcab08bfd53fa605ad28752154d7", "src_uid": "a5d3c9ea1c9affb0359d81dae4ecd7c8", "apr_id": "562deea97c4b2b5ee696e0424e90ec4c", "difficulty": 800, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\\n\",&n);\n    int i,m,a=0,sum=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d \",&m);\n        a=m>a?m:a;\n        sum+=a;\n    }\n    printf(\"%d\",a*n-sum);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n;\n    scanf(\"%d\\n\",&n);\n    int i,m,a=0,sum=0;\n    for(i=0;i<n;i++){\n        scanf(\"%d \",&m);\n        a=m>a?m:a;\n        sum+=m;\n    }\n    printf(\"%d\",a*n-sum);\n    return 0;\n}"}
{"similarity_score": 0.8197879858657244, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "6d431c291ade8a01ce62e59c51986ac6", "bug_code_uid": "60d4d099c12a7c83bdf2919d8859d392", "src_uid": "adf024899fb2a684427463733358566a", "apr_id": "e069430b70fc2b4eae4b5e049d132600", "difficulty": 800, "tags": ["constructive algorithms", "games", "math", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint min(int a){\r\n    int r;\r\n    int min=9;\r\n    while(a){\r\n        r=a%10;\r\n        if(r<min){\r\n         min=r;}\r\n        a=a/10;\r\n    }\r\n    return min;\r\n}\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    \r\n    int i;\r\n    int num;\r\n    for(i=1;i<=t;i++){\r\n        scanf(\"%d\",&num);\r\n        printf(\"%d\\n\",min(num));\r\n    }\r\n    \r\n    \r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\n\r\nint min(int a){\r\n    int r;\r\n    int min=9;\r\n    while(a){\r\n        r=a%10;\r\n        if(r<min){\r\n         min=r;}\r\n        a=a/10;\r\n    }\r\n    return min;\r\n}\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    \r\n    int i;\r\n    int num;\r\n    for(i=1;i<=t;i++){\r\n        scanf(\"%d\",&num);\r\n        if(num>99)\r\n        printf(\"%d\\n\",min(num));\r\n        else {\r\n            printf(\"%d\\n\",num%10);\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    return 0;\r\n}"}
{"similarity_score": 0.9743589743589743, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "ca14d0af71514a95b5ec45faddcfe085", "bug_code_uid": "d49ed5551f7fae3fd1d4825ce0c15747", "src_uid": "bc5fb5d6882b86d83e5c86f21d806a52", "apr_id": "619aa39dc7eabca3c3fa66f9bf315ff5", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main ()\n{\nint a,b,c,x,y,n,t,i,A,B,C,s;\n\nscanf(\"%d\", &t);\nfor(i=0;i<t;i++)\n{\nscanf (\"%d %d %d %d\", &a,&b,&c,&n);\n\ns=a+b+c+n;\nx=(int)s/3;\nif (x>a){A=x-a;}\nelse {A=0;}\nif (x>b){B=x-b;}\nelse {B=0;}\nif (x>c){C=x-c;}\nelse {C=0;}\ny=A+B+C;\n\nif(y==n){printf (\"YES\\n\");}\nelse {printf (\"NO\\n\");}\n }\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main ()\n{\nint a,b,c,x,y,n,t,i,A,B,C,s,z;\n\nscanf(\"%d\", &t);\nfor(i=0;i<t;i++)\n{\nscanf (\"%d %d %d %d\", &a,&b,&c,&n);\n\ns=a+b+c+n;\nx=(int)s/3;\nif (x>a){A=x-a;}\nelse {A=0;}\nif (x>b){B=x-b;}\nelse {B=0;}\nif (x>c){C=x-c;}\nelse {C=0;}\ny=A+B+C;\nz=x*3;\n\nif(y==n && z==s){printf (\"YES\\n\");}\nelse {printf (\"NO\\n\");}\n }\nreturn 0;\n}\n"}
{"similarity_score": 0.9817275747508306, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "caded9537ca4aa7e3b5416d57713e2db", "bug_code_uid": "ade1023439e7b9b7cd35d5deb68bc4ad", "src_uid": "52769cd7b3b0d63a7259a5d0754c4803", "apr_id": "58992c91cd2d5b5cb25ae5dfaecf9b14", "difficulty": 800, "tags": ["greedy", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n\r\nint cmpfunc (const void * a, const void * b) {\r\n   return ( *(int*)a - *(int*)b );\r\n}\r\n\r\n\r\nint main(void){\r\n    int t;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--){\r\n        int n, x, flag=0;\r\n\r\n        scanf(\"%d %d\", &n, &x);\r\n\r\n        int h[n+2], i,j;\r\n\r\n        for(i=0;i<2*n;i++)scanf(\"%d\", &h[i]);\r\n\r\n        qsort(h, 2*n, sizeof(int), cmpfunc);\r\n\r\n        for(i=0;i<n;i++){\r\n            if(h[n+i]-h[i]<x){\r\n                printf(\"NO\\n\");\r\n                flag=1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(flag==0)printf(\"YES\\n\");\r\n\r\n    }\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nint cmpfunc (const void * a, const void * b) {\r\n   return ( *(int*)a - *(int*)b );\r\n}\r\n\r\n\r\nint main(void){\r\n    int t;\r\n\r\n    scanf(\"%d\", &t);\r\n\r\n    while(t--){\r\n        int n, x, flag=0;\r\n\r\n        scanf(\"%d %d\", &n, &x);\r\n\r\n        int h[2*n+2], i,j;\r\n\r\n        for(i=0;i<2*n;i++)scanf(\"%d\", &h[i]);\r\n\r\n        qsort(h, 2*n, sizeof(int), cmpfunc);\r\n\r\n        for(i=0;i<n;i++){\r\n            if(h[n+i]-h[i]<x){\r\n                printf(\"NO\\n\");\r\n                flag=1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(flag==0)printf(\"YES\\n\");\r\n\r\n    }\r\n}\r\n"}
{"similarity_score": 0.5271966527196653, "equal_cnt": 8, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 8, "lang": "GNU C11", "fix_code_uid": "bac540c4542ef18f0b5c6e5b30c2a98f", "bug_code_uid": "056beac1f20f65fbde9d048cc847050c", "src_uid": "e59cddb6c941b1d7556ee9c020701007", "apr_id": "3f82f0f061425d806a62341e67cf0602", "difficulty": 1100, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,sum=0;\n        scanf(\"%d\",&n);\n        int ara[n];\n        for(int i=0;i<n;i++)\n        {\n            scanf(\"%d\",&ara[i]);\n            sum+=ara[i];\n        }\n        printf(\"%d\\n\",sum/3);\n    }\n    return 0;\n}\n/*2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2*\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,cnt=0;\n        scanf(\"%d\",&n);\n        int sup[3]={0};\n        for(int i=0;i<n;i++)\n        {\n            int a;\n            scanf(\"%d\",&a);\n            sup[a%3]++;\n        }\n        cnt+=sup[0];\n        if(sup[1]>sup[2])\n        {\n            cnt+=sup[2];\n            sup[1]-=sup[2];\n            cnt+=sup[1]/3;\n        }\n        else\n        {\n            cnt+=sup[1];\n            sup[2]-=sup[1];\n            cnt+=(sup[2]*2)/6; //the gcd of 2 and 3\n        }\n        \n        printf(\"%d\\n\",cnt);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.08878127522195318, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "f482d8b4bfc846fc9c56aceecd2c7d78", "bug_code_uid": "6b52ea3e2d462ebcbfe3fa7ffa8f6b96", "src_uid": "7d4174e3ae76de7b1389f618eb89d334", "apr_id": "def9ee92366adbcefabf4a3aad872d62", "difficulty": 800, "tags": ["implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int NofCases;\r\n    scanf(\"%d\",&NofCases);\r\n    int LOfAryy;\r\n    \r\n    int n;int done;\r\n    \r\n    \r\n    int numbers[200000];\r\n    \r\n    for (int i = 0; i<NofCases; i++)\r\n    {\r\n        scanf(\"%d\",&LOfAryy);\r\n        done = 0;\r\n        for (int i = 0; i<200000; i++) numbers[i] = 0;\r\n        \r\n        for (int i = 0; i<LOfAryy; i++)\r\n        {\r\n           scanf(\"%d\",&n);\r\n           numbers[n]++; \r\n        }\r\n        \r\n        for (int i = 0; i<200000; i++)\r\n        {\r\n            if (numbers[i]>2)\r\n            {\r\n                printf(\"%i\\n\", i);\r\n                done = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (!done) printf(\"-1\\n\");\r\n    }\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n\r\nint f()\r\n{\r\n    int size;int N; int x = -1;\r\n    scanf(\"%i\", &size);\r\n    \r\n    int arry[size+1];\r\n    \r\n   \r\n    for (int i = 0; i < size+1; i++) arry[i] = 0;    \r\n    \r\n    \r\n    for (int i = 0; i< size; i++)\r\n    {\r\n        scanf(\"%i\", &N);\r\n        if (++arry[N] > 2) x = N;\r\n    }\r\n    return x;\r\n}\r\n\r\nint main()\r\n{\r\n    int NOfTestCases;\r\n    scanf(\"%i\", &NOfTestCases);\r\n    \r\n    for (int i = 0; i< NOfTestCases; i++)\r\n    {\r\n       \r\n        printf(\"%i\\n\" ,f());\r\n        \r\n    }\r\n    \r\n}"}
{"similarity_score": 0.3640836408364084, "equal_cnt": 21, "replace_cnt": 9, "delete_cnt": 4, "insert_cnt": 8, "fix_ops_cnt": 21, "lang": "GNU C", "fix_code_uid": "b27b1aaa25a7db81cda6e2a1fbebac2b", "bug_code_uid": "7525c016501434be82427e8734268d52", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "1c87aa05a45a241380a287668db95ba5", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main ()\n{\n    int n,x,z,soma,i,u;\n    double y;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {   soma=0;\n        scanf(\"%d\",&x);\n        for(u=1;u<=x;u++)\n      {\n        y = (log(u))/(log(2));\n        if(y == (int)y)\n        {\n          z = -1 * u ;\n        }else{\n               z = u;\n             }\n        soma += z;\n\n      }\n      printf(\"%d\\n\",soma);\n    }\nreturn 0 ;\n}\n// 1461373038252", "fixed": "#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    long long int t, n;\n    long long int aux1;\n    long long int aux2;\n\n    scanf(\"%lld\", &t);\n\n    while( t > 0 )\n    {\n        scanf(\"%lld\", &n);\n\n        aux1 = n * (n + 1) / 2;\n        aux2 = pow(2, floor(log2(n)) + 1) - 1;\n\n        printf(\"%lld\\n\", aux1 - aux2 - aux2);\n\n        t--;\n    }\n\n    return 0;\n}\n// 1462135920529"}
{"similarity_score": 0.9888888888888889, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4db2bdfe2fbbb05b9f893b167dc498ba", "bug_code_uid": "45acb2699415461a38de396a2ad20835", "src_uid": "a4a69a5fbf35781ff0849332a45566ca", "apr_id": "47257a5a6b86a7b3fbdea14ac77dee05", "difficulty": 800, "tags": ["geometry", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\n    int i,a,b,c,n; \r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if(a==b&&c%2==0)\r\n            printf(\"Yes\");\r\n        else if(b==c&&a%2==0)\r\n            printf(\"Yes\");\r\n        else if(c==a&&b%2==0)\r\n            printf(\"Yes\");\r\n        else if(a==b+c||b==c+a||c==a+b)\r\n            printf(\"Yes\");\r\n        else\r\n            printf(\"No\");\r\n    }\r\n    return 0;\r\n}", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\n    int i,a,b,c,n; \r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d%d%d\",&a,&b,&c);\r\n        if(a==b&&c%2==0)\r\n            printf(\"Yes\\n\");\r\n        else if(b==c&&a%2==0)\r\n            printf(\"Yes\\n\");\r\n        else if(c==a&&b%2==0)\r\n            printf(\"Yes\\n\");\r\n        else if(a==b+c||b==c+a||c==a+b)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n    return 0;\r\n}"}
{"similarity_score": 0.972972972972973, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 0, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "b88e85c03d17a6ec5f6c537f6f2043c0", "bug_code_uid": "87134161e25d78ed1a57d99d897fefb4", "src_uid": "3cd019d1016cb3b872ea956c312889eb", "apr_id": "910292b0990a3333b8a2e3bffdd5deaa", "difficulty": 1500, "tags": ["implementation", "geometry", "brute force", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    double x[1005];\n    double y[1005];\n    double a;\n    int n,r,i,j;\n    scanf(\"%d%d\",&n,&r);\n    for(i=0;i<n;i++)\n        {scanf(\"%lf\",&x[i]);\n        y[i]=r;}\n    for(i=0;i<n;i++)\n    {for(j=0;j<i;j++)\n    if(0<=4.0*r*r-(x[i]-x[j])*(x[i]-x[j]))\n    {a=y[j]+sqrt(4.0*r*r-(x[i]-x[j])*(x[i]-x[j]));\n    if(a>y[i])y[i]=a;}\n    }\n    for(i=0;i<n;i++)\n    {printf(\"%.8lf \",y[i]);}}\n    printf(\"\\n\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main()\n{\n    double x[1001]={0};\n    double y[1001]={0};\n    double a;\n    int n,r,i,j;\n    scanf(\"%d%d\",&n,&r);\n    for(i=0;i<n;i++)\n    {scanf(\"%lf\",&x[i]);\n    y[i]=r;}\n    for(i=0;i<n;i++)\n    {for(j=0;j<i;j++)\n    if(0<=4.0*r*r-(x[i]-x[j])*(x[i]-x[j]))\n    {a=y[j]+sqrt(4.0*r*r-(x[i]-x[j])*(x[i]-x[j]));\n    if(a>y[i])y[i]=a;}\n    }\n    for(i=0;i<n;i++)\n    {printf(\"%.8lf \",y[i]);}\n    printf(\"\\n\");\n    return 0;\n}\n"}
{"similarity_score": 0.7628205128205128, "equal_cnt": 10, "replace_cnt": 1, "delete_cnt": 3, "insert_cnt": 5, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "eab41333a8530fbbb460a3447c15a712", "bug_code_uid": "6d9990eda77ad1826d7f5d9e08275f6d", "src_uid": "27ddccc777ef9040284ab6314cbd70e7", "apr_id": "f3429a2f4ddb04ba2137964b456a9d4e", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    while(1)\n    {\n\n\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    printf(\"%d\",a+b);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,t,a,b;\n    scanf(\"%d\",&t);\n    for(i=1; i<=t; i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        printf(\"%d\\n\",a+b);\n\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.06426735218508997, "equal_cnt": 6, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "1f098e54dc26a1e4a473ef9eac30c247", "bug_code_uid": "8a1e53627b88adf198ee0b6745e188eb", "src_uid": "1312b680d43febdc7898ffb0753a9950", "apr_id": "ad85a3c14239dddaedbb03f44b465527", "difficulty": 900, "tags": ["dp", "implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\nint main(){\n    int l,i,c=0;\n    char s[100];\n    scanf(\"%s\",s);\n    l = strlen(s);\n    for(i=1;i<l;i++){\n        if(isupper(s[i]))\n        c++;\n    }\n    if(c == l-1){\n        for(i=0;i<1;i++){\n            s[i]=isupper(s[i])?tolower(s[i]):toupper(s[i]);\n        }\n    }\n    printf(\"%s\",s);\n    return 0;\n}\n            \n    ", "fixed": "#include<stdio.h>\nint main(){\n    int n,max,c,i;\n    scanf(\"%d\",&n);\n    int a[n];\n    max = 0,c=1;\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(i=0;i<n-1;i++){\n        if(a[i]>a[i+1]){\n            if(c>max){\n                max=c;\n            }\n            c=1;\n        }else{\n            \nc++;\n        }\n    }\n    if(c>max)\n    max=c;\n    printf(\"%d\",max);\n\nreturn 0;\n}\n\n        "}
{"similarity_score": 0.9529276693455798, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "f5f3eb4364f57508155223842f13c3fe", "bug_code_uid": "ec3a18cf000d8e395cd04c4c79000d0a", "src_uid": "32855bb8ba33973178fde7c3d0beb2ce", "apr_id": "6987536d32c048bd950164276becbb94", "difficulty": 1100, "tags": ["brute force", "greedy", "implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t!=0){\n\t    int n,ans;\n\t    long long int k;\n\t    scanf(\"%d %lld\",&n,&k);\n\t    int A[100];\n\t    for(int i=0;i<=n-1;i++){\n\t        scanf(\"%d\",&A[i]);\n\t    }\n\t    A[n]=0;\n\t    //int final=0;\n\t    while(k!=0)\n\t    {\n\t        int final=0;\n\t        int i;\n\t      for( i=0;i<=n-1;i++)\n\t      {\n    \t      if(A[i]<A[i+1])\n    \t      {\n    \t          A[i]=A[i]+1;\n    \t          \n    \t          break;\n    \t      }\n    \t      else if(A[i]>=A[i+1]&& i!=n-1)\n    \t      {\n    \t        final=i+1;\n    \t      }\n    \t      else if(i==n-1)\n    \t      {\n    \t      final=-2;\n    \t      break;\n    \t      }\n\t      }\n\t      \n\t        k--;\n\t        if(k==0){\n\t            ans=final;\n\t        }\n\t    }\n\t    printf(\"%d\\n\",ans+1);\n\t    t--;\n\t}\n\treturn 0;\n}\n\n", "fixed": "#include <stdio.h>\n\nint main(void) {\n\t// your code goes here\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t!=0){\n\t    int n,ans;\n\t    long long int k;\n\t    scanf(\"%d %lld\",&n,&k);\n\t    int A[100];\n\t    for(int i=0;i<=n-1;i++){\n\t        scanf(\"%d\",&A[i]);\n\t    }\n\t    A[n]=0;\n\t    //int final=0;\n\t    while(k!=0)\n\t    {\n\t        int final=0;\n\t        int i;\n\t      for( i=0;i<=n-1;i++)\n\t      {\n    \t      if(A[i]<A[i+1])\n    \t      {\n    \t          A[i]=A[i]+1;\n    \t          \n    \t          break;\n    \t      }\n    \t      else if(A[i]>=A[i+1]&& i!=n-1)\n    \t      {\n    \t        final=i+1;\n    \t      }\n    \t      else if(i==n-1)\n    \t      {\n    \t      final=-2;\n    \t      break;\n    \t      }\n\t      }\n\t        if(final==-2)\n\t        { \n\t            ans=final;\n\t            break;\n\t        }\n\t        k--;\n\t        if(k==0){\n\t            ans=final;\n\t        }\n\t    }\n\t    printf(\"%d\\n\",ans+1);\n\t    t--;\n\t}\n\treturn 0;\n}\n\n"}
{"similarity_score": 0.10599721059972106, "equal_cnt": 20, "replace_cnt": 16, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 20, "lang": "GNU C", "fix_code_uid": "cc9a63bb6f4b7b29736c7a8dc7eb8949", "bug_code_uid": "5e261b5bce67f756807c2602b545a835", "src_uid": "b53c3e55834db8184d8caf4630aaa573", "apr_id": "271c7fb59b4c0708c929fbedd4e8baed", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\n\nint main(){\n    int i,j,n,m,k,org,dest,debt;\n    int aux=0,aux3=0;\n\n    scanf(\"%d %d\",&n,&m);\n\n    int vet[n][n];\n\n    for (i=0;i<n;i++){\n        for (j=0;j<n;j++){\n            vet[i][j]=0;\n        }\n    }\n\n    for (i=0;i<m;i++){\n        scanf(\"%d %d %d\",&org,&dest,&debt);\n        aux=aux+debt;\n        vet[org][dest]=debt;\n    }\n    for (i=0;i<n;i++){\n        for (j=0;j<n;j++){\n            if (vet[i][j]>0){\n                for (k=0;k<n;k++){\n                    if (vet[j][k]>0){\n                        aux3=aux3+vet[j][k];\n                    }\n                }\n            }\n        }\n    }\n    aux=aux-aux3;\n    printf(\"%d\\n\",aux);\n}\n/* 1519047996845 */\n", "fixed": "#define _CRT_SECURE_NO_WARNINGS\n#include <stdio.h>\n\nint main()\n{\n\tint i, n, m;\n\tint vertex[10000][3];\n\tint aresta[100];\n\tint orig, dest, cost;\n\tlong long result = 0;\n\t\n\tscanf(\"%d\", &n);\n\tscanf(\"%d\", &m);\n\n\tfor (i = 0; i < m; i++)\n\t{\n\t\tscanf(\"%d\", &vertex[i][0]);\n\t\tscanf(\"%d\", &vertex[i][1]);\n\t\tscanf(\"%d\", &vertex[i][2]);\n\t}\n\n\t// init with 0\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\taresta[i] = 0;\n\t}\n\t\n\tfor (i = 0; i < m; i++)\n\t{\n\t\torig = vertex[i][0];\n\t\tdest = vertex[i][1];\n\t\tcost = vertex[i][2];\n\t\t\n\t\taresta[orig] = aresta[orig] - cost;\n\t\taresta[dest] = aresta[dest] + cost;\n\t}\n\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tif (aresta[i] > 0)\n\t\t{\n\t\t\tresult = result + aresta[i];\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\", result);\n\n\treturn 0;\n}\n\n/* 1519053103104 */\n"}
{"similarity_score": 0.8142292490118577, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 3, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "2e2ea60aa61d71ed77d5508cea55ac45", "bug_code_uid": "1bea67dada0490af465378eff39d2af0", "src_uid": "2cc35227174e6a4d48e0839cba211724", "apr_id": "96fe5490f2401073f359fe29dfd98e1d", "difficulty": 1100, "tags": ["bitmasks", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <math.h>\r\n\r\n#define MOD 1000000007\r\n#define EPS 0.00001\r\n\r\nint main() {\r\n    int numSets;\r\n    scanf(\"%d\", &numSets);\r\n\r\n    for (int setNum = 0; setNum < numSets; setNum++) {\r\n        long long n, k;\r\n        scanf(\"%lld %lld\", &n, &k);\r\n\r\n        n %= MOD;\r\n\r\n        long long sum = 0;\r\n        long long c = 0;\r\n        while (k) {\r\n            sum += ((long long) ((k % 2) * pow(n, c) + EPS) % MOD);\r\n            sum %= MOD;\r\n            c++;\r\n            k /= 2;\r\n        }\r\n\r\n        printf(\"%lld\\n\", sum);\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "#include <stdio.h>\r\n\r\n#define MOD 1000000007\r\n\r\nlong long pow(long long a, long long b) {\r\n    long long res = 1;\r\n\r\n    for (long long i = 0; i < b; i++) {\r\n        res *= a;\r\n        res %= MOD;\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nint main() {\r\n    int numSets;\r\n    scanf(\"%d\", &numSets);\r\n\r\n    for (int setNum = 0; setNum < numSets; setNum++) {\r\n        long long n, k;\r\n        scanf(\"%lld %lld\", &n, &k);\r\n\r\n        n %= MOD;\r\n\r\n        long long sum = 0;\r\n        long long c = 0;\r\n        while (k) {\r\n            sum += ((k % 2) * (pow(n, c)) % MOD);\r\n            sum %= MOD;\r\n            c++;\r\n            k /= 2;\r\n        }\r\n\r\n        printf(\"%lld\\n\", sum);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.9883364027010436, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "09659af2d00074c3d01f19c3c1496a59", "bug_code_uid": "640f67366aa736f3edfb355290dd1bdb", "src_uid": "93f6404a23bd2ff867d63db9ddf868ff", "apr_id": "f334847aea320f314819a3bfda75b6dc", "difficulty": 1400, "tags": ["constructive algorithms", "implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n \n\n \nint cmp(const void *a,const void *b)\n{\n    return *(unsigned long long *)a-*(unsigned long long *)b;\n}\n \nint main()\n{\n  int n,i,k,c,d,h=-1,x,y,p,j=0;\nunsigned long long arr[2000001],sum=0; \n\n   scanf(\"%d\",&k);n=ceil(log(k)/log(4));  \nfor(i=0;i<k;i++)\n{scanf(\"%llu\",&arr[i]);sum+=arr[i];}/* summation of each element in a matrix*/\n\nif(k==1){printf(\"%llu\",arr[0]);return 0;}\n   \n   \n   \n   qsort(arr,k,sizeof(unsigned long long ),cmp);/*quick sort*/\n\n\n sum+=n*arr[k-1];\n  i=1;p=k-2,y=0;j=p;\n  \n                                                /*adding maximum of each sub matrix possible   */      for(c=p;c>=0;c--){\n      if(j-c==3*ceil(exp(y*log(4)))){j=c;i++;y++;if(y==n-1){ printf(\"%llu\",sum);return 0;}}\n                   sum+=(n-i)*arr[c];}\n  \n\n\n\nreturn 0;}", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n \n\n \nint cmp(const void *a,const void *b)\n{\n    return *(unsigned long long *)a-*(unsigned long long *)b;\n}\n \nint main()\n{\n  int n,i,k,c,d,h=-1,x,y,p,j=0;\nunsigned long long arr[2000001],sum=0; \n\n   scanf(\"%d\",&k);n=ceil(log(k)/log(4));  \nfor(i=0;i<k;i++)\n{scanf(\"%llu\",&arr[i]);sum+=arr[i];}/* summation of each element in a matrix*/\n\nif(k==1){printf(\"%llu\",arr[0]);return 0;}\n   \n   \n   \n   qsort(arr,k,sizeof(unsigned long long ),cmp);/*quick sort*/\n\n\n sum+=n*arr[k-1];\n  i=1;p=k-2,y=0;j=p;\n  \n                                                /*adding maximum of each sub matrix possible   */      for(c=p;c>=0;c--){\n      if(j-c==3*ceil(exp(y*log(4)))){j=c;i++;y++;if(y==n-1){ printf(\"%llu\",sum);return 0;}}\n                   sum+=(n-i)*arr[c];}\n  \n\nprintf(\"%llu\",sum);\n\nreturn 0;}"}
{"similarity_score": 0.9122373300370828, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "6f4867250eafe9a6918e7a78fae9dc54", "bug_code_uid": "1a1ccb68fa5cc75e447108aa7ea0ed23", "src_uid": "3fc0ac711b113fa98f41740536dad44f", "apr_id": "f6e55261ed4702985fccfafd166015f6", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\n    int n=0;\n    int arr[100][100]={0};\n\n    int i=0,j=0;\n\n    int temp=0;\n    int goodCars = 0;\n    int good[100]={0};\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&arr[i][j]);\n        }\n    }\n    \n    for(i=0;i<n;i++){\n        for(j=0;j<n-1;j++){\n            printf(\"%d \",arr[i][j]);\n        }\n        printf(\"%d\\n\",arr[i][j]);\n    }\n\n    for(i=0;i<n;i++){\n        temp=0;\n        for(j=0;j<n;j++){\n            if((arr[i][j] == 1)||(arr[i][j]==3)){\n                temp = 1;\n                break;\n                printf(\"%d\",arr[i][j]);\n            }\n        }\n        if(temp==0){\n            good[goodCars] = i;\n            goodCars++;\n        }\n    }\n\n    printf(\"%d\\n\",goodCars);\n    if(goodCars != 0){\n    for(i=0;i<goodCars;i++){\n        printf(\"%d \",good[i]+1);\n    }\n    }\n\n    return 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\n    int n=0;\n    int arr[100][100]={0};\n\n    int i=0,j=0;\n\n    int temp=0;\n    int goodCars = 0;\n    int good[100]={0};\n\n    scanf(\"%d\",&n);\n\n    for(i=0;i<n;i++){\n        for(j=0;j<n;j++){\n            scanf(\"%d\",&arr[i][j]);\n        }\n    }\n\n    for(i=0;i<n;i++){\n        temp=0;\n        for(j=0;j<n;j++){\n            if((arr[i][j] == 1)||(arr[i][j]==3)){\n                temp = 1;\n                break;\n                printf(\"%d\",arr[i][j]);\n            }\n        }\n        if(temp==0){\n            good[goodCars] = i;\n            goodCars++;\n        }\n    }\n\n    printf(\"%d\\n\",goodCars);\n    if(goodCars != 0){\n    for(i=0;i<goodCars;i++){\n        printf(\"%d \",good[i]+1);\n    }\n    }\n\n    return 0;\n}"}
{"similarity_score": 0.3826879271070615, "equal_cnt": 26, "replace_cnt": 24, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 26, "lang": "GNU C11", "fix_code_uid": "405b16fbf8b4b943ea68b87edb56f0e8", "bug_code_uid": "9d2e158f8c6852a8cab2bb388366db8e", "src_uid": "e77787168e1c87b653ce1f762888ac57", "apr_id": "bc0934e22fc78697e8565627dbc68d89", "difficulty": 800, "tags": ["implementation", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,flag,j;\n    scanf(\"%d\",&n);\n    char str[1000];\n\n    for(int i=0; i<n*5; i++)\n    {\n\n        scanf(\"%c\",&str[i]);\n\n    }\n    for(int i=0; i<n*5; i++)\n    {\n\n        if(str[i]=='O'&&str[i+1]=='O')\n        {\n\n            str[i]='+';\n            str[i+1]='+';\n\n\n            flag=1;\n            break;\n        }\n\n        else\n        {\n            flag =0;\n        }\n\n    }\n    if(flag == 1)\n    {\n        printf(\"YES%s\",str);\n    }\n\n    else if(flag==0)\n    {\n        printf(\"NO\");\n    }\n    return 0;\n\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint flag=0,n,i;\n\tchar str[100000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<6*n;i++)\n\t{\n\t\tscanf(\"%c\",&str[i]);\n\t}\n\tfor(i=1;i<6*n;i++)\n\t{\n\t\tif(str[i]=='O' && str[i-1]=='O')\n\t\t{\n\t\t\tflag=1;\n\t\t\tstr[i-1]='+';\n\t\t\tstr[i]='+';\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==1)\n\t\tprintf(\"YES%s\",str);\n\telse\n\t\tprintf(\"NO\");\n\n}\n"}
{"similarity_score": 0.4966542750929368, "equal_cnt": 12, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 7, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "1647e94318e38fb0a556a69b0c2d3bde", "bug_code_uid": "b8da22d4c3b9da6013e12691bbf0f928", "src_uid": "62766ef9a0751cbe7987020144de7512", "apr_id": "0ab21a6deaf64073e144d2e19839eecd", "difficulty": 1200, "tags": ["dp", "greedy", "two pointers", "graph matchings", "sortings", "dfs and similar"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main(){\nint m,pair=0;\nscanf(\"%d\",&m);\nint boy[m];\nfor(int i=0;i<m;i++)\n    scanf(\"%d\",&boy[i]);\nint n;\nscanf(\"%d\",&n);\nint girl[m];\nfor(int i=0;i<n;i++)\n    scanf(\"%d\",&girl[i]);\nfor(int i=0;i<m;i++)\n    for(int j=0;j<n;i++){\n        if( abs(boy[i] - girl[j]) <= 1)\n            pair++;\n    }\n    printf(\"%d\",pair);\n}", "fixed": "// #include<stdio.h>\n\n// int main(){\n//     int a[10] = {1,2,3,4,5,6,7,8,9,10};\n    \n//     char *c = (char*)a;\n//     c = c+8;\n//     printf(\"%c(%d)\",*c,*c);\n    \n//     return 0;\n// }\n#include<stdio.h>\n#include<stdlib.h>\nvoid bubblesort(int* arr,int n){\n    if (n==0)\n        return;\n    int temp;\n    for(int i=0;i<(n-1);i++){\n        if (arr[i] > arr[i+1]){\n            temp = arr[i];\n            arr[i] = arr[i+1];\n            arr[i+1] = temp;\n        }\n    }\n    bubblesort( arr, n-1);\n}\nint main(){\nint m,pair=0;\nscanf(\"%d\",&m);\nint boy[m];\nfor(int i=0;i<m;i++)\n    scanf(\"%d\",&boy[i]);\nint n;\nscanf(\"%d\",&n);\nint girl[n];\nfor(int i=0;i<n;i++)\n    scanf(\"%d\",&girl[i]);\nbubblesort(boy, m);\nbubblesort(girl, n);\nfor(int i=0;i<m;i++)\n    for(int j=0;j<n;j++){\n        if( abs(boy[i] - girl[j]) <= 1){\n            pair++;\n             //printf(\"%d\\n\",girl[j]);\n            girl[j] = 1000;\n            //printf(\"%d\\n\",girl[j]);\n            break;\n        }\n    }\n    printf(\"%d\",pair);\n}"}
{"similarity_score": 0.9921259842519685, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "55c44ebab147703d8820a5278f40a35a", "bug_code_uid": "d73b79b0876f5264e8a101eb400c4269", "src_uid": "6421a81f85a53a0c8c63fbc32750f77f", "apr_id": "8031ee49d391af2213e92f624da07b7e", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\nint l,p,q;\nscanf(\"%d\",&l);\nscanf(\"%d %d\",&p,&q);\nprintf(\"%.1lf\\n\",(p*l*1.0)/(p+q));\nreturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\nint l,p,q;\nscanf(\"%d\",&l);\nscanf(\"%d %d\",&p,&q);\nprintf(\"%.4lf\\n\",(p*l*1.0)/(p+q));\nreturn 0;\n}"}
{"similarity_score": 0.6785185185185185, "equal_cnt": 8, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "80cb270a1663878eeaac847173a2413b", "bug_code_uid": "053b53ebaa15bdcc1e77c28cbf8e4cc4", "src_uid": "eb39ac8d703516c7f81f95a989791b21", "apr_id": "b3a0c6185283114f3a71bde5b7b54276", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t>0){\n\t\tlong long int n;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long int count = 0;\n\t\tfor(long long int i=n;i>=3;i-=2){\n\t\t\tif(i>4){\n\t\t\t\tcount+=1;\n\t\t\t}\n\t\t\telse if(i==4){\n\t\t\t\tcount+=3;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(i==3){\n\t\t\t\tcount+=2;\n\t\t\t}\n\t\t\t\n\n\t\t}\n\t\tprintf(\"%lld\\n\",count);\n\n\t\tt--;\n\t}\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t>0){\n\t\tlong long int n;\n\t\tscanf(\"%lld\",&n);\n\t\tlong long int count = 0;\n\t\tif(n%2 == 0){\n\t\t\tn-=4;\n\t\t\tcount = n/2;\n\t\t\tcount+=3;\n\t\t}\n\t\telse{\n\t\t\tn-=3;\n\t\t\tcount = n/2;\n\t\t\tcount+=2;\n\t\t}\n\t\tprintf(\"%lld\\n\",count);\n\n\t\tt--;\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.9993201903467029, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c99cb1b3218eccdcad903ffe19a7f57c", "bug_code_uid": "9b23aece4a5c7d5da216c1953a2913fd", "src_uid": "4a58039c5171597ecf78837e9db1d71d", "apr_id": "ae5ed1ec955346a4da67bae7512f229a", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "// PROBLEM RATING: 800\r\n\r\n#include <stdio.h>\r\n\r\nint main(void) {\r\n\tint n, i, c, d, flag, counter, countb;\r\n\tchar arr[101], a, b[101];\r\n\tscanf (\"%d\", &n);\r\n\twhile (n>0)\r\n\t{\r\n\t    scanf(\"%s\", arr);\r\n\t    flag=0;\r\n\t    c=arr[0];\r\n\t    counter=0;\r\n\t\tcountb=0;\r\n\t    for (i=0; arr[i]!= '\\0'; i++)\r\n\t    {\r\n\t        d= arr[i];\r\n\t        if (d<c)\r\n\t        {\r\n\t            c=d;\r\n\t        }\r\n\t    }\r\n\t    a=c;\r\n\t    for (i=0; arr[i]!='\\0'; i++)\r\n\t    {\r\n\t        if (a== arr[i] && flag== 0)\r\n\t        {\r\n\t            flag=1;\r\n\t            counter++;\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            b[i-counter]=arr[i];\r\n\t\t\t\tcountb++;\r\n\t        }\r\n\t    }\r\n\t\tb[countb]= '\\0'\r\n\t    printf(\"%c \", a);\r\n\t\tputs(b);\r\n\t    n--;\r\n\t}\r\n\treturn 0;\r\n}", "fixed": "// PROBLEM RATING: 800\r\n\r\n#include <stdio.h>\r\n\r\nint main(void) {\r\n\tint n, i, c, d, flag, counter, countb;\r\n\tchar arr[101], a, b[101];\r\n\tscanf (\"%d\", &n);\r\n\twhile (n>0)\r\n\t{\r\n\t    scanf(\"%s\", arr);\r\n\t    flag=0;\r\n\t    c=arr[0];\r\n\t    counter=0;\r\n\t\tcountb=0;\r\n\t    for (i=0; arr[i]!= '\\0'; i++)\r\n\t    {\r\n\t        d= arr[i];\r\n\t        if (d<c)\r\n\t        {\r\n\t            c=d;\r\n\t        }\r\n\t    }\r\n\t    a=c;\r\n\t    for (i=0; arr[i]!='\\0'; i++)\r\n\t    {\r\n\t        if (a== arr[i] && flag== 0)\r\n\t        {\r\n\t            flag=1;\r\n\t            counter++;\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            b[i-counter]=arr[i];\r\n\t\t\t\tcountb++;\r\n\t        }\r\n\t    }\r\n\t\tb[countb]= '\\0';\r\n\t    printf(\"%c \", a);\r\n\t\tputs(b);\r\n\t    n--;\r\n\t}\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9967776584317938, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "26b440d78b1ce31197d87e153f12ca38", "bug_code_uid": "044a599e48b44ef9bc99284d90fd0f0d", "src_uid": "94ec011dc830661c226bd860b9d70de5", "apr_id": "2d88d125335af457cdc317448882a6d8", "difficulty": 800, "tags": ["greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\n//#include <limits.h>\r\n\r\n\r\nvoid swap(int* a, int* b, int i){\r\n    int tmp;\r\n    tmp = a[i];\r\n    a[i] = b[i];\r\n    b[i] = tmp;\r\n}\r\n\r\nvoid testCase(int t){\r\n\tint i,j;\r\n\tlong int rslt;\r\n\tint n;\r\n\tint* a;\r\n\tint *b;\r\n\tfor(j=0;j<t;j++){\r\n    \tscanf(\"%d\", &n);\r\n    \ta = malloc(n*sizeof(int));\r\n    \tb = malloc(n*sizeof(int));\r\n    \tfor(i=0;i<n;i++){\r\n    \t    scanf(\"%d\", a+i);\r\n    \t}\r\n    \tfor(i=0;i<n;i++){\r\n    \t    scanf(\"%d\", b+i);\r\n    \t}\r\n    \trslt = 0;\r\n    \tfor(i=0;i<n-1;i++){\r\n    \t    if( (abs(a[i]-a[i+1])+abs(b[i]-b[i+1])) > (abs(a[i]-b[i+1])+abs(b[i]-a[i+1])) ){\r\n    \t        rslt = rslt + abs(a[i]-b[i+1])+abs(b[i]-a[i+1]);\r\n    \t        swap(a,b,i+1);\r\n    \t    }\r\n    \t    else{\r\n    \t        rslt = rslt + abs(a[i]-a[i+1])+abs(b[i]-b[i+1]);\r\n    \t    }\r\n    \t}\r\n    \tprintf(\"%ld\\n\", rslt);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint t;\r\n\r\n\tscanf(\"%d\", &t);\r\n\ttestCase(t);\r\n\treturn 0;\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n//#include <limits.h>\r\n\r\n\r\nvoid swap(int* a, int* b, int i){\r\n    int tmp;\r\n    tmp = a[i];\r\n    a[i] = b[i];\r\n    b[i] = tmp;\r\n}\r\n\r\nvoid testCase(int t){\r\n\tint i,j;\r\n\tlong long int rslt;\r\n\tint n;\r\n\tint* a;\r\n\tint *b;\r\n\tfor(j=0;j<t;j++){\r\n    \tscanf(\"%d\", &n);\r\n    \ta = malloc(n*sizeof(int));\r\n    \tb = malloc(n*sizeof(int));\r\n    \tfor(i=0;i<n;i++){\r\n    \t    scanf(\"%d\", a+i);\r\n    \t}\r\n    \tfor(i=0;i<n;i++){\r\n    \t    scanf(\"%d\", b+i);\r\n    \t}\r\n    \trslt = 0;\r\n    \tfor(i=0;i<n-1;i++){\r\n    \t    if( (abs(a[i]-a[i+1])+abs(b[i]-b[i+1])) > (abs(a[i]-b[i+1])+abs(b[i]-a[i+1])) ){\r\n    \t        rslt = rslt + abs(a[i]-b[i+1])+abs(b[i]-a[i+1]);\r\n    \t        swap(a,b,i+1);\r\n    \t    }\r\n    \t    else{\r\n    \t        rslt = rslt + abs(a[i]-a[i+1])+abs(b[i]-b[i+1]);\r\n    \t    }\r\n    \t}\r\n    \tprintf(\"%lld\\n\", rslt);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint t;\r\n\r\n\tscanf(\"%d\", &t);\r\n\ttestCase(t);\r\n\treturn 0;\r\n}"}
{"similarity_score": 0.9223907225691347, "equal_cnt": 6, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "6f990c034c1f1b00d1063f7c73974f1e", "bug_code_uid": "c97d235f023e8810a3d1d8add5fac439", "src_uid": "7749f37aa9bf88a00013557e14342952", "apr_id": "373f03abdaf2542e9530cbf91024f9d8", "difficulty": 800, "tags": ["combinatorics", "implementation", "constructive algorithms", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n  int i,j,n,count=0;\n  scanf(\"%d\",&n);\n  getchar();\n  char R[n][n];\n  int row[n],col[n];\n\n  for(i=0;i<n;i++)\n  {\n    row[i]=0,col[i]=0;\n  }\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%s\",R[i]);\n    for(j=0;j<n;j++)\n      if(R[i][j]=='C')\n      {\n        row[i]++;\n        col[j]++;\n      }\n  }\n\n  for(i=0;i<n;i++)\n  {\n    int count1=1,count2=1; \n    for(j=row[i];j>row[i]-2;j--)\n      count1*=j;\n    for(j=col[i];j>row[i]-2;j--)\n      count2*=j;\n    count=count+count1/2+count2/2; \n  }\n  printf(\"%d\\n\",count);\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n  int i,j,n,count=0;\n  scanf(\"%d\",&n);\n  getchar();\n  char R[n][n];\n  int row[n],col[n];\n\n  for(i=0;i<n;i++)\n  {\n    row[i]=0,col[i]=0;\n  }\n  for(i=0;i<n;i++)\n  {\n    scanf(\"%s\",R[i]);\n    for(j=0;j<n;j++)\n      if(R[i][j]=='C')\n      {\n        row[i]++;\n        col[j]++;\n      }\n  }\n\n  for(i=0;i<n;i++)\n  {\n    int count1=1,count2=1; \n    if(row[i]>=2){\n     for(j=row[i];j>row[i]-2;j--)\n        count1*=j;\n    }\n    if(col[i]>=2){\n    for(j=col[i];j>col[i]-2;j--)\n      count2*=j;\n    }\n    count=count+count1/2+count2/2; \n  }\n  printf(\"%d\\n\",count);\n}\n"}
{"similarity_score": 0.9541284403669725, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "9cc2278fd7e2af69614fded3334b87fd", "bug_code_uid": "909848947776c4897d6e99794e718c19", "src_uid": "df94080c5b0b046af2397cafc02b5bdc", "apr_id": "a6c2c2c49fd33c3dd637236a0fa3acec", "difficulty": 1000, "tags": ["implementation", "sortings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint n,i,k,s=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&k);\nif(k==1)s=1;\n}\nif(s==1)printf(\"-1\");\nelse printf(\"%d\",1);\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,k,s=0;\nscanf(\"%d\",&n);\nfor(i=0;i<n;i++)\n{\nscanf(\"%d\",&k);\nif(k==1)s=1;\n}\nif(s==1)printf(\"-1\");\nelse printf(\"%d\",1);\nreturn 0;\n}"}
{"similarity_score": 0.9346733668341709, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "da71662a3084880b14124c0f12d239c3", "bug_code_uid": "7d66fb6b499bffeb54844a19c75d1b3b", "src_uid": "3542adc74a41ccfd72008faf983ffab5", "apr_id": "80ac47eb96a5e07de02ee4c2044ebe41", "difficulty": 800, "tags": ["greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(void){\nint num,disc[3],decision,count;\nscanf(\"%d\",&num);\ndecision = 0;\nfor(int i = 0;i < num;i++){\n    scanf(\"%d %d %d\",&disc[0],&disc[1],&disc[2]);\n    count = disc[0] + disc[1] + disc[2];\n    if(count >= 2){\n        decision++;\n        }\n}\nreturn 0;\n}\n", "fixed": "#include <stdio.h>\nint main(void){\nint num,disc[3],decision,count;\nscanf(\"%d\",&num);\ndecision = 0,count = 0;\nfor(int i = 0;i < num;i++){\n    scanf(\"%d %d %d\",&disc[0],&disc[1],&disc[2]);\n    count = disc[0] + disc[1] + disc[2];\n    if(count >= 2){\n        decision++;\n        }\n}\nprintf(\"%d\",decision);\nreturn 0;\n}\n"}
{"similarity_score": 0.9943741209563994, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "47f95ff99625f593581f19e493278d06", "bug_code_uid": "2ab8f3f9ea455aa549b22cba09915d5a", "src_uid": "b53c3e55834db8184d8caf4630aaa573", "apr_id": "c171c5398562d2d4eeee60fd13fa0d0b", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int lines_num,num,i;\n    scanf(\"%i %i\",&num,&lines_num);\n\n    int debts[num][3],debt_summation[num];\n    for(i=0;i<lines_num;i++)\n        scanf(\"%i %i %i\",&debts[i][0],&debts[i][1],&debts[i][2]);\n    for(i=0;i<num;i++)\n        debt_summation[i]=0;\n    for(i=0;i<lines_num;i++)\n    {\n            debt_summation[debts[i][0]-1]=debt_summation[debts[i][0]-1]+debts[i][2];\n            debt_summation[debts[i][1]-1]=debt_summation[debts[i][1]-1]-debts[i][2];\n    }\n     int sum=0;\n\n     for(i=0;i<num;i++)\n        if (debt_summation[i]>0)\n            sum=sum+debt_summation[i];\n\n     printf(\"%i\",sum);\n\n\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int lines_num,num,i;\n    scanf(\"%i %i\",&num,&lines_num);\n\n    int debts[lines_num][3],debt_summation[num];\n    for(i=0;i<lines_num;i++)\n        scanf(\"%i %i %i\",&debts[i][0],&debts[i][1],&debts[i][2]);\n    for(i=0;i<num;i++)\n        debt_summation[i]=0;\n    for(i=0;i<lines_num;i++)\n    {\n            debt_summation[debts[i][0]-1]=debt_summation[debts[i][0]-1]+debts[i][2];\n            debt_summation[debts[i][1]-1]=debt_summation[debts[i][1]-1]-debts[i][2];\n    }\n     int sum=0;\n\n     for(i=0;i<num;i++)\n        if (debt_summation[i]>0)\n            sum=sum+debt_summation[i];\n\n     printf(\"%i\",sum);\n\n\n    return 0;\n}"}
{"similarity_score": 0.9882583170254403, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e8371d70fbf63709e865624c12d1e4fd", "bug_code_uid": "b9457604eec6a61db8aa43abd50b3f02", "src_uid": "4c260e7c6fd9c573ee4f3b1822f3c7c3", "apr_id": "76f96389ec6fcb844ecc4a6b4109b218", "difficulty": 1200, "tags": ["dp", "combinatorics", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n\tint k,i,I,pd=0,h,cnt=0;\n\tlong long int n,sum=0;\n\tscanf(\"%lld %d\",&n,&k);\n\tchar ch[200010];\n\tchar ah[27];\n\tgetchar();\n\tgets(ch);\n\tfor(i=0;i<k;i++)\n\t{\n\t\tah[i]=getchar();\n\t\tgetchar();\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(h=0;h<k;h++)\n\t\t{\n\t\t\tif(ch[i]==ah[h])\n\t\t\t{\n\t\t\t\tpd=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i==n-1&&pd==1)\n\t\t{\n\t\t\tcnt++;\n\t\t\tsum=sum+(cnt+1)*cnt/2;\n\t\t}\n\t\tif(pd==1)\n\t\t{\n\t\t\tcnt++;\n\t\t\tpd=0;\n\t\t}else if(pd==0&&cnt!=0)\n\t\t{\n\t\t\tsum=sum+(cnt+1)*cnt/2;\n\t\t\tcnt=0;\n\t\t}\n\t}\n\tprintf(\"%lld\",sum);\n}\n", "fixed": "#include <stdio.h>\nint main()\n{\n\tint k,i,I,pd=0,h;\n\tlong long int n,sum=0,cnt=0;\n\tscanf(\"%lld %d\",&n,&k);\n\tchar ch[200010];\n\tchar ah[27];\n\tgetchar();\n\tgets(ch);\n\tfor(i=0;i<k;i++)\n\t{\n\t\tah[i]=getchar();\n\t\tgetchar();\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(h=0;h<k;h++)\n\t\t{\n\t\t\tif(ch[i]==ah[h])\n\t\t\t{\n\t\t\t\tpd=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i==n-1&&pd==1)\n\t\t{\n\t\t\tcnt++;\n\t\t\tsum=sum+(cnt+1)*cnt/2;\n\t\t}\n\t\tif(pd==1)\n\t\t{\n\t\t\tcnt++;\n\t\t\tpd=0;\n\t\t}else if(pd==0&&cnt!=0)\n\t\t{\n\t\t\tsum=sum+(cnt+1)*cnt/2;\n\t\t\tcnt=0;\n\t\t}\n\t}\n\tprintf(\"%lld\",sum);\n}\n"}
{"similarity_score": 0.9084507042253521, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "27c89ea3ef99d109699580fa099674f9", "bug_code_uid": "43267820dd2caf697acbe89f9722f743", "src_uid": "994a9cb52cf0fdab72be068eab1b27ef", "apr_id": "c94dbe209e960b34b0cea8e9cc51e728", "difficulty": 900, "tags": ["greedy", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "//jai bhawani\r\n#include<stdio.h>\r\n#include<string.h>\r\n\r\n\r\n\r\nint main()\r\n{\r\n     long long min, i,j,n,t2,t3,d1,c,d,t4,t5,l,x,y,p;\r\n  long long  q,u,v,a,b,m,v1,v2;\r\n  long long  t1;\r\n  int t;\r\n    scanf(\"%d\",&t);\r\nwhile(t--)\r\n    {\r\n    scanf(\"%lld%lld\",&a,&b);\r\n    if(a==b)\r\n    {\r\n        printf(\"0 0\\n\");\r\n    }\r\n    else\r\n    {\r\n        d=abs(a-b);\r\n         min=a%d;\r\n        if(d-min<min)\r\n        {\r\n\r\n\r\n            min=d-min;\r\n        }\r\n        printf(\"%lld %lld\\n\",d,min);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nreturn 0;\r\n}\r\n", "fixed": "//jai bhawani\r\n#include<stdio.h>\r\n#include<string.h>\r\n\r\n\r\n\r\nint main()\r\n{\r\n     long long min, i,j,n,t2,t3,d1,c,d,t4,t5,l,x,y,p;\r\n  long long  q,u,v,a,b,m,v1,v2;\r\n  long long  t1;\r\n  int t;\r\n    scanf(\"%d\",&t);\r\nwhile(t--)\r\n    {\r\n    scanf(\"%lld%lld\",&a,&b);\r\n    if(a==b)\r\n    {\r\n        printf(\"0 0\\n\");\r\n    }\r\n    else\r\n    {\r\n        if(a<b)\r\n        {\r\n            min=a;\r\n            a=b;\r\n            b=min;\r\n        }\r\n        d=(a-b);\r\n         min=a%d;\r\n        if(d-min<min)\r\n        {\r\n\r\n\r\n            min=d-min;\r\n        }\r\n        printf(\"%lld %lld\\n\",d,min);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nreturn 0;\r\n}\r\n"}
{"similarity_score": 0.8967193195625759, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "a07326f1a9739f5b3949bbc9e59198e0", "bug_code_uid": "a98cda747418df9af5ca7569d1889229", "src_uid": "aca2346553f9e7b6e944ca2c74bb0b3d", "apr_id": "a626c188756fde35360a55275ae0c6da", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main(){\n    int a,b,c,d,e,i;\n    int long f;\n    scanf(\"%ld\", &f);\n    for(i = 1; i <= f; i++){\n        scanf(\"%d %d %d\",&a,&b,&c);\n        d=2*c-b-1;\n        e=a-1;\n        if(e<d){\n            printf(\"1\\n\");\n        }\n        if(e>d){\n            printf(\"2\\n\");\n        }\n        if(e==d){\n            printf(\"3\\n\");\n        }\n    }\n    return 0;\n}\n\n", "fixed": "#include <stdio.h>\nint main(){\n    int a,b,c,d,e,i;\n    int long f;\n    scanf(\"%ld\", &f);\n    for(i = 1; i <= f; i++){\n        scanf(\"%d %d %d\",&a,&b,&c);\n        e=a-1;\n        if(b>c || b==c){\n            d=b-1;\n        }else{\n            d=2*c-b-1;\n        }\n        if(e<d){\n            printf(\"1\\n\");\n        }\n        if(e>d){\n            printf(\"2\\n\");\n        }\n        if(e==d){\n            printf(\"3\\n\");\n        }\n    }\n    return 0;\n}\n\n"}
{"similarity_score": 0.9993256911665542, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "47952a26e55c369cf971d961804e2eb2", "bug_code_uid": "e57830fd8bee582216e21eca71bbdf9e", "src_uid": "98f5b6aac08f48f95b2a8ce0738de657", "apr_id": "81b0a4f5bb310d681ad1d7457a8cd912", "difficulty": 1000, "tags": ["sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,k,j,l,a,b,temp,temp1;\n    scanf(\"%d %d\",&k,&n);\n    int ara[n],arra[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&ara[i],&arra[i]);\n    }\n    for(l=0;l<n-1;l++)\n    {\n        for(a=l+1;a<n;a++)\n        {\n            if(ara[l]>ara[a])\n            {\n                temp=ara[l];\n                ara[l]=ara[a];\n                ara[a]=temp;\n                temp1=arra[l];\n                arra[l]=arra[a];\n                arra[a]=temp1;\n            }\n        }\n    }\n    for(j=0;j<n;j++)\n    {\n        if(k>ara[j])\n        {\n            k=k+arra[j];\n        }\n        else if(k<ara[j])\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,k,j,l,a,b,temp,temp1;\n    scanf(\"%d %d\",&k,&n);\n    int ara[n],arra[n];\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&ara[i],&arra[i]);\n    }\n    for(l=0;l<n-1;l++)\n    {\n        for(a=l+1;a<n;a++)\n        {\n            if(ara[l]>ara[a])\n            {\n                temp=ara[l];\n                ara[l]=ara[a];\n                ara[a]=temp;\n                temp1=arra[l];\n                arra[l]=arra[a];\n                arra[a]=temp1;\n            }\n        }\n    }\n    for(j=0;j<n;j++)\n    {\n        if(k>ara[j])\n        {\n            k=k+arra[j];\n        }\n        else if(k<=ara[j])\n        {\n            printf(\"NO\");\n            return 0;\n        }\n    }\n    printf(\"YES\");\n    return 0;\n}\n"}
{"similarity_score": 0.3780290791599354, "equal_cnt": 24, "replace_cnt": 13, "delete_cnt": 1, "insert_cnt": 10, "fix_ops_cnt": 24, "lang": "GNU C11", "fix_code_uid": "58b6af87275e5ca647bb549cffbf7d8d", "bug_code_uid": "b66a45d57d8eaeccf26dbde954154124", "src_uid": "8736df815ea0fdf390cc8d500758bf84", "apr_id": "a750ac244b58fa4d864adaaf5085d732", "difficulty": 1300, "tags": ["binary search", "implementation", "strings"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n\n#define MXNM 50000\n\nint nms[MXNM][26], cnt[MXNM]; \nchar str[20 * 1000];\n\nint main()\n{\n//\tFILE *fp;\n\tint n, m;\n\n//\tstr = malloc(n * sizeof(char));\t\n//\tfp = fopen(\"in.txt\", \"r\");\n//\tif(fp == NULL){\n//\t\tperror(\"Error to open in.txt file\");\n//\t\texit(1);\n//\t}\t\n//\tfscanf(fp, \"%s\", str);\n\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", str);\n\tscanf(\"%d%*c\", &m);\n\n\tint i, j;\n\tchar  c;\t\n\tfor(i = 0; i < m; ++i)\t\n\t{\n\t\twhile((c = getchar()) != '\\n'){\n\t\t\t++nms[i][c - 'a'];\t\t\t\n\t\t\t++cnt[i];\n\t\t}\n\t}\n\n\tfor(i = 0; i < m; ++i)\n\t{\n\t\tfor(j = 0; cnt[i] != 0; ++j)\n\t\t\tif(nms[i][str[j] - 'a'] != 0){\n\t\t\t\t--nms[i][str[j] - 'a'];\n\t\t\t\t--cnt[i];\n\t\t\t}\t\n\t\tprintf(\"%d\\n\", j); \n\t}\t\t\t\t\t\t\t\t\n}\n", "fixed": "#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n\n#define MXNM 50000\n\nint nms[MXNM][26], cnt[MXNM]; \nint STR[200 * 1000][2];\n\nint main()\n{\n\tint n, m, occur, i, k, len;\n\tchar  c, prev;\t\n\n\n\tscanf(\"%d%*c\", &n);\n\t\n\toccur = 1;\n\tlen = 0;\n\tprev = getchar();\n\twhile(prev != '\\n')\n\t{\n\t\tc = getchar();\n\n\t\tif(c == prev)\n\t\t\t++occur;\n\t\telse \n\t\t{\n\t\t\tSTR[len][0] = prev;\n\t\t\tSTR[len][1] = occur;\n\t\t\toccur = 1;\t\n\t\t\t++len;\n\t\t}\n\n\t\tprev = c;\n\t}\n\t\t\n//\tfor( k = 0; k < len; ++k)\n//\t\tprintf(\"%d%c\",STR[k][1], STR[k][0]);\t\n//\tputchar('\\n');\n\t\t\n\tscanf(\"%d%*c\", &m);\n\t\t\n\tfor(i = 0; i < m; ++i)\n\t{\n\t\twhile( (c = getchar()) != '\\n')\n\t\t{\n\t\t\t++nms[i][c - 'a'];\t\t\t\n\t\t\t++cnt[i];\n\t\t}\n\t}\n\n\tint num, res;\t\n\tfor(i = 0; i < m; ++i)\n\t{\n\t\tres = 0;\n\t\tfor(k = 0; cnt[i] != 0; ++k)\n\t\t{\n\t\t\tif((num = nms[i][ STR[k][0] - 'a' ]) != 0)\n\t\t\t{\n\t\t\t\tif(num < STR[k][1]){\n\t\t\t\t\tnum = nms[i][ STR[k][0] - 'a' ];\n\t\t\t\t\tnms[i][ STR[k][0] - 'a'] = 0;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t\tnms[i][ STR[k][0] - 'a']-= (num = STR[k][1]);\n\t\t\t\tcnt[i] -= num;\n\t\t\t}\n\t\t\t\n\t\t\tif(cnt[i] != 0)\t\n\t\t\t\tres += STR[k][1] - 1;\n\t\t\telse \n\t\t\t\tres += num - 1;\n\t\t} \n\t\tprintf(\"%d\\n\",res + k);\n\t}\n\t\n}\n\n"}
{"similarity_score": 0.9734513274336283, "equal_cnt": 6, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "0d6ab6b009c95540204bad1498825f1d", "bug_code_uid": "56e8370af97492148f4b6a77fda0f773", "src_uid": "0de32a7ccb08538a8d88239245cef50b", "apr_id": "727044e570f0515b7d39309ae316594f", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\nint occ(char s[]){\nint i=0,a=0,d=0;\nwhile(i<strlen(s)){\n    if(s[i]=='A')a++;\n    else d++;\n    i++;\n}\n\n\nreturn a-d;\n}\n\n\n\nint main(){\nchar *s;\nint n,i;\nscanf(\"%d\",&n);\ns=malloc(n*sizeof(char));\nscanf(\"%s\",s);\n\n\nif(occ>0)\n    printf(\"Anton\");\nelse if(occ<0)\n    printf(\"Danik\");\nelse\n        printf(\"Friendship\");\n\n\n\n\n\nreturn 0;}\n", "fixed": "#include<stdlib.h>\n#include<stdio.h>\n#include<string.h>\nint occ(char s[]){\nint i=0,a=0,d=0;\nwhile(i<strlen(s)){\n    if(s[i]=='A')a++;\n    else if(s[i]=='D')d++;\n    i++;\n}\n\n\nreturn (a-d);\n}\n\n\n\nint main(){\nchar *s;\nint n,i;\nscanf(\"%d\",&n);\ns=malloc(n*sizeof(char));\nscanf(\"%s\",s);\n\n\nif(occ(s)>0)\n    printf(\"Anton\");\nelse if(occ(s)<0)\n    printf(\"Danik\");\nelse\n        printf(\"Friendship\");\n\n\n\n\n\nreturn 0;}\n"}
{"similarity_score": 0.8819776714513556, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "7257d0804fe50e9ba2578680dc03ec1b", "bug_code_uid": "ad7ff0d5b84f75e7cc8700568ca27828", "src_uid": "0b9be2f076cfa13cdc76c489bf1ea416", "apr_id": "93d943723d8e7c35ad418501838c8673", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,i,l;\r\n    scanf(\"%d\",&t);\r\n   char s[200000];\r\n    while(t--){\r\n            int ck=1,a=0,b=0;\r\n        scanf(\"%s\",s);\r\n        l= strlen(s);\r\n\r\n            for(i=0;s[i]!='\\0';i++){\r\n                if(s[i]=='A'){\r\n                    a++;\r\n                }\r\n                else{\r\n                    b++;\r\n                }\r\n            }\r\n        if( s[0]!='B' && s[l-1]!='A' && a>=b){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int t,i,l;\r\n    scanf(\"%d\",&t);\r\n   char s[200000];\r\n    while(t--){\r\n            int ck=1,a=0,b=0;\r\n        scanf(\"%s\",s);\r\n        l= strlen(s);\r\n\r\n            for(i=0;s[i]!='\\0';i++){\r\n                if(s[i]=='A'){\r\n                    a++;\r\n                }\r\n                else{\r\n                    b++;\r\n                }\r\n                if(a<b){\r\n                    ck=0;\r\n                    break;\r\n                }\r\n            }\r\n            if(ck==1 && s[0]!='B' && s[l-1]!='A'){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7794561933534743, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "336f41ed1e8e7e13c94f24f83084496e", "bug_code_uid": "ce64839158e8b80eaa0508d9e4c4a2e7", "src_uid": "43b8e9fb2bd0ec5e0250a33594417f63", "apr_id": "901ea6f73c2df8ad116be44785b668b2", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main() \n{\n   long long int t, n, k, max;\n   scanf(\"%lli\", &t) ;\n   while(t--) \n   {\n   \tscanf(\"%lli %lli\", &n, &k) ;\n   \tif(n%k==0)\n   \tprintf(\"%lli\\n\",(n/k)*k) ;  \n   \telse\n   \t{\n   \t\tmax=(n/k)+1;\n   \t\tprintf(\"%lli\\n\",((k/2)*max)+((k-(k/2))*(max-1))) ;\n   \t} \n   \t\n  } \n  return 0;\n} ", "fixed": "#include<stdio.h>\nint main() \n{\n   long long int t, n, k, max;\n   scanf(\"%lli\", &t) ;\n   while(t--) \n   {\n   \tscanf(\"%lli %lli\", &n, &k) ;\n   \tif(n%k==0)\n   \tprintf(\"%lli\\n\",(n/k)*k) ;  \n   \telse\n   \t{\n   \t   max=n%k;\n   \t   if(max<=(k/2)) \n   \t   printf(\"%lli\\n\", n) ;\n   \t   else\n   \t   printf(\"%lli\\n\",((n/k)*k)+(k/2)) ;\n   \t} \n   \t\n  } \n  return 0;\n} "}
{"similarity_score": 0.43980738362760835, "equal_cnt": 11, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 11, "lang": "GNU C", "fix_code_uid": "00a06c4af5d0d565637c2948b001ebaa", "bug_code_uid": "63f094c0981bedb8b580b0d5206f5484", "src_uid": "5adb1cf0529c3d6c93c107cf72fa5e0b", "apr_id": "d0ccfdb95f398d8d4b868527f1c8edb6", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void) {\n\tint n,a[1000],b[1000],c,d,e,i;\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&c);\n\tscanf(\"%d\",&d);\n\tfor(i=0;i<n;i++){\n\t\te=c%10;\n\t\ta[i]=e;\n\t\tc=c/10;\n\t\te=d%10;\n\t\tb[i]=e;\n\t\td=d/10;\n\t\tif(a[i]>b[i])\n\t\ta[i]=a[i]-b[i];\n\t\telse\n\t\ta[i]=b[i]-a[i];\n\t\tif(a[i]>5)\n\t\ta[i]=10-a[i];\n\t}\n\tfor(i=1;i<n;i++){\n\t\ta[i]=a[i-1]+a[i];\n\t}\n\tprintf(\"%d\",a[n-1]);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void) {\n\tint n,i;\n\tscanf(\"%d\",&n);\n\t\tchar c[n],d[n];\n\tscanf(\"%s\",&c);\n\tscanf(\"%s\",&d);\n\tint m=0;\n\tfor(i=0;i<n;i++){\n\t\tc[i]=c[i]-d[i];\n\t\tif(c[i]<0)c[i]=-c[i];\n\t\tif(c[i]>5)c[i]=10-c[i];\n\t\tm=m+c[i];\n\t}\n\tprintf(\"%d\",m);\n\treturn 0;\n}"}
{"similarity_score": 0.9670886075949368, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "56948b17c57b19f7310575ff22dd3090", "bug_code_uid": "52452954a5f499d158a5fab01b742b37", "src_uid": "75d500bad37fbd2c5456a942bde09cd3", "apr_id": "4b00328272f5a3d175a69c482d203ff7", "difficulty": 1100, "tags": ["brute force"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include <iostream>\n#include<stdio.h>\nusing namespace std;\n\nint main() {\n\t// your code goes here\n\tint i,j,min,max,n,m,f;\n\tchar a[6000],ch;\n\tint b[6000],c[6000],d[6000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&ch);\n        scanf(\"%c\",&a[i]);\n        scanf(\"%d\",&b[i]);\n        scanf(\"%d\",&c[i]);\n\t}\n\tmax=0;\n\tfor(j=1;j<=366;j++)\n\t{\n\t    m=f=0;\n\t    for(i=0;i<n;i++)\n\t    {\n\t        if((j>=b[i])&&(j<=c[i]))\n\t        {\n\t            if(a[i]=='M')\n\t            m++;\n\t            else\n\t            f++;\n\t        }\n\t    }\n\tmin=m<f?m:f;\n\tif(max<min)\n\tmax=min;\n\t}\n\tprintf(\"%d\\n\",max*2);\n\treturn 0;\n}\n", "fixed": "\n#include<stdio.h>\n\n\nint main() {\n\t// your code goes here\n\tint i,j,min,max,n,m,f;\n\tchar a[6000],ch;\n\tint b[6000],c[6000],d[6000];\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n    {\n        scanf(\"%c\",&ch);\n        scanf(\"%c\",&a[i]);\n        scanf(\"%d\",&b[i]);\n        scanf(\"%d\",&c[i]);\n\t}\n\tmax=0;\n\tfor(j=1;j<=366;j++)\n\t{\n\t    m=f=0;\n\t    for(i=0;i<n;i++)\n\t    {\n\t        if((j>=b[i])&&(j<=c[i]))\n\t        {\n\t            if(a[i]=='M')\n\t            m++;\n\t            else\n\t            f++;\n\t        }\n\t    }\n\tmin=m<f?m:f;\n\tif(max<min)\n\tmax=min;\n\t}\n\tprintf(\"%d\\n\",max*2);\n\treturn 0;\n}\n"}
{"similarity_score": 0.8344017094017094, "equal_cnt": 14, "replace_cnt": 8, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 13, "lang": "GNU C11", "fix_code_uid": "087cebe91f2c830b836abe9f584e55f3", "bug_code_uid": "865959ffbc44782689024aadc604cb77", "src_uid": "f9fbb45e45d3040e3be19a39ea8faa1f", "apr_id": "5af66582b189aa8f6d1d011648f25938", "difficulty": 900, "tags": ["sortings", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,l;\n    scanf(\"%d\",&n);\n    int T[n];\n    for (int i=0;i<n;i++)\n     {\n       scanf(\"%d\",&T[i]);\n     }\n        int aux;\n     for(int m=0;m<n;m++)\n        {\n            for (int h=m+1;h<n;h++)\n              {if(T[m]<T[h])\n                {\n                    aux=T[m];\n                    T[m]=T[h];\n                    T[h]=aux;\n                }}\n\n                } \n\n\n    int maxind=n-1,minind=0,x=0,y=0,test=0;\n\n                while(maxind>=minind){\n                if(test==0)\n                {\n                x+=T[maxind];\n                maxind--;\n                test=1;\n                }\n                else\n                {\n                    y+=T[minind];\n                    minind++;\n                    test=0;\n                }\n                }\n\n\n    printf(\"%d\",(x*x+y*y));\n\n}\n", "fixed": "#include<stdio.h>\nint compare(void const *a,void const *b)\n{\n    return (*(int*)a-*(int*)b);\n}\nint main()\n{\n    int n,l;\n    scanf(\"%d\",&n);\n    int T[n];\n    for (int i=0;i<n;i++)\n     {\n       scanf(\"%d\",&T[i]);\n     }\n     qsort(T,n,sizeof(int),compare);\n        //int aux;\n    /* for(int m=0;m<n;m++)\n        {\n            for (int h=m+1;h<n;h++)\n              {if(T[m]>T[h])\n                {\n                    aux=T[h];\n                    T[h]=T[m];\n                    T[m]=aux;\n                }}\n\n                }*/\n\n  /*  for(int m=0;m<n;m++)\n        printf(\"%d \",T[m]);*/\n    int minind=0,maxind=n-1,test=0;\n    long long x=0,y=0;\n\n                while(maxind>=minind){\n                if(test==0)\n                {\n                x+=T[maxind];\n                maxind--;\n                test=1;\n                }\n                else\n                {\n                    y+=T[minind];\n                    minind++;\n                    test=0;\n                }\n                }\n\n\n    printf(\"%lld\",(x*x+y*y));\n\n}\n"}
{"similarity_score": 0.9891891891891892, "equal_cnt": 3, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "f56ec85ecd7ace6e7e49b5c1f936ade8", "bug_code_uid": "5c78e41542414fd0c4658f93c3c87288", "src_uid": "133eaf241bb1557ba9a3f59c733d34bf", "apr_id": "26538c64af1b4a384c95517f09f8b8dd", "difficulty": 1100, "tags": ["greedy", "strings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int i,j,l,flag;\n    char arr[10010],arr2[10010];\n    gets(arr);\n    l=strlen(arr);\n    for(flag=0,j=0,i=0;i<l-1;i++)\n    {\n        if(arr[i]=='0'&&flag==0)\n        {flag=1;\n        continue;}\n        else\n        arr2[j++]=arr[i];\n    }\n    if(flag==1)\n    arr2[j++]=arr[l-1];\n    printf(\"%s\\n\",arr2);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nmain()\n{\n    int i,j,l,flag;\n    char arr[1000100],arr2[1000100];\n    gets(arr);\n    l=strlen(arr);\n    for(flag=0,j=0,i=0;i<l-1;i++)\n    {\n        if(arr[i]=='0'&&flag==0)\n        {flag=1;\n        continue;}\n        else\n        arr2[j++]=arr[i];\n    }\n    if(flag==1)\n    arr2[j++]=arr[l-1];\n    printf(\"%s\\n\",arr2);\n    return 0;\n}\n"}
{"similarity_score": 0.6190900981266726, "equal_cnt": 9, "replace_cnt": 4, "delete_cnt": 2, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "339da39ff0978f0223cf282f13b6d8b8", "bug_code_uid": "c683fc2309ead50a4c9822aa3bc2c4b7", "src_uid": "f4b790bef9a6cbcd5d1f9235bcff7c8f", "apr_id": "55633e31f08bd0c4cd718375cb3772d9", "difficulty": 1100, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n   int t,m,n,a,b;\r\n   scanf(\"%d\",&t);\r\n   while(t--){\r\n   int cnt=0,i;\r\n   scanf(\"%d\",&n);\r\n   int ara[n];\r\n   for(i=0;i<n;i++){\r\n    scanf(\"%d\",&ara[i]);\r\n   }\r\n\r\n   for(i=0;i<n-2;i++){\r\n    if((ara[i]+ara[i+1])>(ara[i+2])){\r\n        cnt++;\r\n        break;\r\n    }\r\n   }\r\n\r\n   if(cnt>0){\r\n    printf(\"-1\\n\");\r\n   }\r\n   else{\r\n    int p=ara[0];\r\n    printf(\"%d \",ara[0]);\r\n    for(i=1;i<n;i++){\r\n        p=p+ara[i];\r\n        printf(\"%d \",(p));\r\n    }\r\n    printf(\"\\n\");\r\n   }\r\n   }\r\n\r\n   \r\n}\r\n\t\r\n    \r\n     \r\n\t", "fixed": "#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n   int t,m,n,a,b,p,q;\r\n   scanf(\"%d\",&t);\r\n   while(t--){\r\n   int cnt=0,i;\r\n   scanf(\"%d\",&n);\r\n   int ara[110];\r\n   for(i=0;i<n;i++){\r\n    scanf(\"%d\",&ara[i]);\r\n   }\r\n   int bra[110];\r\n   for(i=0;i<n;i++){\r\n    if(i>=1){\r\n    if(ara[i]<=ara[i-1]){\r\n        if(ara[i]!=0){\r\n        cnt++;\r\n        }\r\n    }\r\n        ara[i]=ara[i]+ara[i-1];\r\n    }\r\n   }\r\n\r\n   if(cnt>0){\r\n    printf(\"-1\\n\");\r\n   }\r\n   else{\r\n    for(i=0;i<n;i++){\r\n        printf(\"%d \",ara[i]);\r\n    }\r\n    printf(\"\\n\");\r\n   }\r\n   }\r\n\r\n   \r\n}"}
{"similarity_score": 0.9808306709265175, "equal_cnt": 7, "replace_cnt": 2, "delete_cnt": 2, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "8c3bc40438dd6ea1137cdc6f04877fe9", "bug_code_uid": "d28a3649c119c0f203ca1d7ca7c8b140", "src_uid": "b80fed46a9e2356dad03dd3ec01523d4", "apr_id": "5b6065a3c0205d38e9bdcbb6f6e1d3a4", "difficulty": 900, "tags": ["implementation", "sortings", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b)\n{\n    return *(int *)a - *(int *)b;\n}\n\nint main()\n{\n    int n, a, sum = 0;\n    int Data[2][2000];\n    int cnt[2] = {0};\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; ++i) {\n        scanf(\"%d\", &a);\n        Data[a & 1][cnt[a & 1]++] = a;\n        sum += a;\n    }\n    qsort(Data[0], sizeof(int), cnt[0], cmp);\n    qsort(Data[1], sizeof(int), cnt[1], cmp);\n    if(abs(cnt[0] - cnt[1]) > 1) {\n        if(cnt[0] > cnt[1]) {\n            for(int i = 0; i < cnt[1]; ++i) {\n                sum -= Data[0][i];\n                sum -= Data[1][i];\n            }\n            sum -= Data[0][cnt[1]];\n        } else {\n            for(int i = 0; i < cnt[0]; ++i) {\n                sum -= Data[0][i];\n                sum -= Data[1][i];\n            }\n            sum -= Data[1][cnt[0]];\n        }\n        printf(\"%d\\n\", sum);\n    } else {\n        puts(\"0\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint cmp(const void *a, const void *b)\n{\n    return *(int *)b - *(int *)a;\n}\n\nint main()\n{\n    int n, a, sum = 0;\n    int Data[2][2000];\n    int cnt[2] = {0};\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; ++i) {\n        scanf(\"%d\", &a);\n        Data[a & 1][cnt[a & 1]++] = a;\n        sum += a;\n    }\n    qsort(Data[0], cnt[0], sizeof(int), cmp);\n    qsort(Data[1], cnt[1], sizeof(int), cmp);\n    if(abs(cnt[0] - cnt[1]) > 1) {\n        if(cnt[0] > cnt[1]) {\n            for(int i = 0; i < cnt[1]; ++i) {\n                sum -= Data[0][i];\n                sum -= Data[1][i];\n            }\n            sum -= Data[0][cnt[1]];\n        } else {\n            for(int i = 0; i < cnt[0]; ++i) {\n                sum -= Data[0][i];\n                sum -= Data[1][i];\n            }\n            sum -= Data[1][cnt[0]];\n        }\n        printf(\"%d\\n\", sum);\n    } else {\n        puts(\"0\");\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.5965811965811966, "equal_cnt": 12, "replace_cnt": 4, "delete_cnt": 1, "insert_cnt": 6, "fix_ops_cnt": 11, "lang": "GNU C11", "fix_code_uid": "6f05f5315ae687ebcfce537ff642be57", "bug_code_uid": "ece7fb71b3e1b61f0c265d647f38d8a7", "src_uid": "0c5ae761b046c021a25b706644f0d3cd", "apr_id": "a451c26931d76b56909949d1dc196d6a", "difficulty": 900, "tags": ["constructive algorithms", "implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <malloc.h>\nint main()\n{\n    int n,d,i,count=0;\n    int *arr;\n    scanf(\"%d %d\",&n,&d);\n    arr= (int *)malloc(n * (sizeof(int)) );\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        while(arr[i]<=arr[i-1])\n        {\n            arr[i]+=d;\n            count++;\n        }\n    }\n    printf(\"%d\",count);\n    free(arr);\n    return 0;\n}", "fixed": "#include <stdio.h>\n#include <malloc.h>\n#include <math.h>\nint main()\n{\n    long int n,d,i,count=0,temp;\n    long int *arr;\n    scanf(\"%ld %ld\",&n,&d);\n    arr= (long int *)malloc(n * (sizeof(long int)) );\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&arr[i]);\n    }\n    for(i=1;i<n;i++)\n    {\n        if(arr[i]<arr[i-1])\n        {\n            temp= ceil( (double)(arr[i-1]-arr[i])/d );\n            arr[i]+= (temp*d);\n            count+=temp;\n             if(arr[i]==arr[i-1])\n                {\n                    arr[i]+=d;\n                    count+=1;\n                }\n        }\n        else if(arr[i]==arr[i-1])\n        {\n            arr[i]+=d;\n            count+=1;\n        }\n        else\n        {}\n    }\n    printf(\"%d\",count);\n    free(arr);\n    return 0;\n}"}
{"similarity_score": 0.9655850540806293, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "37b179af1d670e94307dbd2465382b88", "bug_code_uid": "fed42cc63d16ccae15b76ed622014b99", "src_uid": "409b27044d5ec97b5315c92d4112376f", "apr_id": "045292b0a93686617ff62e4747780043", "difficulty": 1000, "tags": ["implementation", "brute force", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],five=0,zero=0;\n    for(int i=0;i<n;++i)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==5) ++five;\n        if(a[i]==0) ++zero;\n    }\n    if(five<9 && zero!=0) printf(\"0\");\n    else if(five<9 && zero==0) printf(\"-1\");\n    else\n    {\n        for(int i=0;i<(five/9)*9;++i)\n        {\n            printf(\"5\");\n        }\n        for(int i=0;i<zero;++i)\n        {\n            printf(\"0\");\n        }\n    }\n    return 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int a[n],five=0,zero=0;\n    for(int i=0;i<n;++i)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==5) ++five;\n        if(a[i]==0) ++zero;\n    }\n    if(zero==0) printf(\"-1\");\n    else if(five<9 && zero!=0) printf(\"0\");\n    else if(five<9 && zero==0) printf(\"-1\");\n    else\n    {\n        for(int i=0;i<(five/9)*9;++i)\n        {\n            printf(\"5\");\n        }\n        for(int i=0;i<zero;++i)\n        {\n            printf(\"0\");\n        }\n    }\n    return 0;\n}"}
{"similarity_score": 0.9289340101522843, "equal_cnt": 7, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "ad6d042b2dd21b607fff7773d9eb2805", "bug_code_uid": "44468ec7298bbb8c415f8fcdf91cec2a", "src_uid": "0a9ee8cbfa9888caef39b024563b7dcd", "apr_id": "3eaefe47dc941f08da1ac58921cf18bd", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main(void)\n{\n    int n, x;\n    int i, d, g = 0;\n    char znak;\n    \n    scanf(\"%d%d\", &n, &x);\n    for(i = 0; i < n; i++) {\n        getchar();\n        znak = getchar();\n        scanf(\"%d\", &d);\n        if(znak == '+')\n            x+=d;\n        else if(x < d)\n            g++;\n        else\n            x-=d;\n    }\n    printf(\"%d %d\", x, g);\n    return 0;\n}", "fixed": "#include <stdio.h>\n\nint main(void)\n{\n    long long int n, x;\n    long long int i, d, g = 0;\n    char znak;\n    \n    scanf(\"%lld%lld\", &n, &x);\n    for(i = 0; i < n; i++) {\n        getchar();\n        znak = getchar();\n        scanf(\"%lld\", &d);\n        if(znak == '+')\n            x+=d;\n        else if(x < d)\n            g++;\n        else\n            x-=d;\n    }\n    printf(\"%lld %lld\", x, g);\n    return 0;\n}"}
{"similarity_score": 0.23406720741599074, "equal_cnt": 10, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 10, "lang": "GNU C", "fix_code_uid": "f7a20211d04588ad307503021d5de146", "bug_code_uid": "fbcb7f3d3f0aa95dcdad53f5d6b2dc06", "src_uid": "1985566215ea5a7f22ef729bac7205ed", "apr_id": "c5a9fe7c4dbe4aa75273d263b7d0088a", "difficulty": 1100, "tags": ["data structures", "implementation", "sortings"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int n,i,j,k=0;\n    scanf(\"%d\",&n);\n    int a[n+n-1+n-2];\n    for(i=0;i<n+n-1+n-2;i++)\n        scanf(\"%d\",&a[i]);\n    for(i=n+n-1;i<n+n-1+n-2;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(a[i]==a[j])\n            {\n                a[i]=0;\n                a[j]=0;\n                break;\n            }\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]!=0)\n        {\n            a[k]=a[i];\n            k++;\n        }\n    }\n    if(a[0]<a[1])\n        printf(\"%d\\n%d\",a[0],a[1]);\n    else\n        printf(\"%d\\n%d\",a[1],a[0]);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int n,i,j,m,a[3];\n    scanf(\"%d\",&n);\n    for(i=0;i<3;i++){\n            a[i]=0;\n        for(j=0;j<n-i;j++)\n        {\n            scanf(\"%d\",&m);\n        a[i]+=m;\n        }\n    }\n    printf(\"%d\\n%d\",a[0]-a[1],a[1]-a[2]);\n    return 0;\n}\n"}
{"similarity_score": 0.9978118161925602, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "488d6ce476dcb503ecef45669ae41681", "bug_code_uid": "ae3849676f60c72ac35a850870005a2c", "src_uid": "1bb5b64657e16fb518d49d3c799d4823", "apr_id": "945fa0f6378f540e3729e2b04e587df9", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n   long a[10000][2];\n   int i,j,n,k,max;\n   scanf(\"%d %d\",&n,&k);\n   fflush(stdin);\n   for (i=0;i<n;i++)\n     for(j=0;j<2;j++)\n        scanf(\"%ld\",&a[i][j]);\n    if(a[0][1]>k)\n        max=a[0][0]-a[0][1]+k;\n        else max=a[0][0];\n   for (i=1;i<n;i++)\n   {\n    if(a[i][1]>k&&a[i][0]-a[i][1]+k>max)\n        max=a[i][0]-a[i][1]+k;\n    if(a[i][1]<=k&&a[i][0]>max)\n        max=a[i][0];\n   }\n   printf(\"%d\",max);\n   return 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n   long a[10000][2];\n   int i,j,n,k,max;\n   scanf(\"%d %d\",&n,&k);\n   //fflush(stdin);\n   for (i=0;i<n;i++)\n     for(j=0;j<2;j++)\n        scanf(\"%ld\",&a[i][j]);\n    if(a[0][1]>k)\n        max=a[0][0]-a[0][1]+k;\n        else max=a[0][0];\n   for (i=1;i<n;i++)\n   {\n    if(a[i][1]>k&&a[i][0]-a[i][1]+k>max)\n        max=a[i][0]-a[i][1]+k;\n    if(a[i][1]<=k&&a[i][0]>max)\n        max=a[i][0];\n   }\n   printf(\"%d\",max);\n   return 0;\n}\n"}
{"similarity_score": 0.9981515711645101, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "d3552d77f037d6632ad2a21a73ae2c78", "bug_code_uid": "342958d8d8d69492cf72ce411cbdb261", "src_uid": "db9065d975878227a749083f0036a169", "apr_id": "5888159b8937462c0378b36fbabe3eaf", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[10],l,i,c=0;\n    char str[10000];\n    for(i=0;i<4;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%s\",str);\n    l=strlen(str);\n    for(i=0;i<l;i++)\n    {\n        if(str[i]=='1')\n        {\n            c+=a[0];\n        }\n        else if(str[i]=='2')\n        {\n            c+=a[1];\n        }\n        else if(str[i]=='3')\n        {\n            c+=a[2];\n        }\n        else if(str[i]=='4')\n        {\n            c+=a[3];\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int a[10],l,i,c=0;\n    char str[1000000];\n    for(i=0;i<4;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%s\",str);\n    l=strlen(str);\n    for(i=0;i<l;i++)\n    {\n        if(str[i]=='1')\n        {\n            c+=a[0];\n        }\n        else if(str[i]=='2')\n        {\n            c+=a[1];\n        }\n        else if(str[i]=='3')\n        {\n            c+=a[2];\n        }\n        else if(str[i]=='4')\n        {\n            c+=a[3];\n        }\n    }\n    printf(\"%d\\n\",c);\n    return 0;\n}\n"}
{"similarity_score": 0.7434944237918215, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "c9b71e7c8b0af1b2b0f2c2a79110d233", "bug_code_uid": "f8397b5b147d8dbaee3bce4f24d87b93", "src_uid": "c249103153c5006e9b37bf15a51fe261", "apr_id": "e2802c93f5ccfbe4fc92156c96cc172d", "difficulty": 900, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{short int n,m,i;\nint min,j;\nscanf(\"%d %d\",&n,&m);\nint b[n];\nfor(i=0;i<n;i++)\n{\n    b[i]=0;\n}\nfor(i=0;i<m;i++)\n{\n    scanf(\"%d\",&j);\n\nb[j-1]++;\n\n    \n}\nmin=b[0];\nfor(i=0;i<n;i++)\n{\n    if(b[i]>min)\n    min=b[i];\n    \n}\nprintf(\"%d\",min);\nreturn 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{short int n,m,i;\nint min,j;\nscanf(\"%d %d\",&n,&m);\nint b[n];\nfor(i=0;i<n;i++)\n{\n    b[i]=0;\n}\nfor(i=0;i<m;i++)\n{\nscanf(\"%d\",&j);\nb[j-1]++;\n}\nmin=b[0];\nfor(i=0;i<n;i++)\n{\n    if(b[i]<min)\n    min=b[i];\n}\nprintf(\"%d\",min);\nreturn 0;\n}"}
{"similarity_score": 0.7936507936507936, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "87ec885e60683e9efeaad4958858d4da", "bug_code_uid": "b325a2d9f35aaab263d9591b745cf818", "src_uid": "a3705f29b9a8be97a9e9e54b6eccba09", "apr_id": "a22b5d7a41689729c17e5e34d2e67bac", "difficulty": 900, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\n\nint main() {\n    int n;\n    scanf(\"%d\",&n);\n    while(n-->0) {\n        long long int m;\n        scanf(\"%lli\",&m);\n        long long result = m*(m+1)/2;\n        int max_pow = log(m)/log(2);\n        result -= pow(2, max_pow+2)-2;\n        printf(\"%lli\\n\",result);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<math.h>\n\nint main() {\n    int n;\n    scanf(\"%d\",&n);\n    while(n-->0) {\n        long long int m;\n        scanf(\"%lld\",&m);\n        long long result = m*(m+1)/2;\n        long long int max_pow = 1;\n        while(max_pow<=m) {\n            max_pow <<= 1;\n        }\n        result -= 2*max_pow-2;\n        printf(\"%lld\\n\",result);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9700598802395209, "equal_cnt": 5, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "662adee2920bb8368d303e36ff7f56f2", "bug_code_uid": "c24e8acb149e0babec421cc4adf44b7e", "src_uid": "0671972bc2b6452d51d048329e6e0106", "apr_id": "cd6194e6a59aff114a218044019972c2", "difficulty": 900, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int n,a,b;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%d %d\",&a,&b);\n        if(a-b<=1){\n            printf(\"NO\\n\");\n        }\n        else printf(\"YES\\n\");\n\n    }\n     return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main()\n{\n  long long  int n,a,b;\n    scanf(\"%lld\",&n);\n    while(n--){\n        scanf(\"%lld %lld\",&a,&b);\n        if(a-b<=1){\n            printf(\"NO\\n\");\n        }\n        else printf(\"YES\\n\");\n\n    }\n     return 0;\n}\n"}
{"similarity_score": 0.8611410118406889, "equal_cnt": 15, "replace_cnt": 1, "delete_cnt": 2, "insert_cnt": 11, "fix_ops_cnt": 14, "lang": "GNU C11", "fix_code_uid": "99da91118bc497757e2457c17d4dfa3b", "bug_code_uid": "7e65fe34b62f6bc732d4466ee21cbeec", "src_uid": "00b1e45e9395d23e850ce1a0751b8378", "apr_id": "e6ec99c590cd43356a8a546da17348ef", "difficulty": 900, "tags": ["implementation", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n     int t;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          long long int n,k;\n          scanf(\"%lld%lld\",&n,&k);\n          int c1=0,c2=0,r;\n          while(n>0)\n          {if(n%k==0)\n               {n=n/k;\n               c1++;\n               }\n            else\n              {r=n%k;\n               n-=r;\n               c2+=r;\n               }\n          }\n     printf(\"%d\\n\",c1+c2);\n        }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n     int t;\n     scanf(\"%d\",&t);\n     while(t--)\n     {\n          long long int n,k,c1=0,c2=0,r;\n          scanf(\"%lld%lld\",&n,&k);\n          while(n>0)\n          {\n               if(n%k==0)\n               {\n                    n/=k;\n                    c1++;\n               }\n               else\n               {\n                    r=n%k;\n                    n-=r;\n                    c2+=r;\n               }\n          }\n          printf(\"%lld\\n\",c1+c2);\n     }\n}\n"}
{"similarity_score": 0.9846378931967813, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "bd78a25f943bd9f7bde9b6c7721aaa0d", "bug_code_uid": "c9a302b393cbbbecef3651523b20de6a", "src_uid": "5e2a5ee02c1a2f35a52e76cde96463a3", "apr_id": "8a73d76f43bd582f0d8fa51cd006b184", "difficulty": 1000, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int a,b,c,i,j,p=0,k=0,y=0;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    int aa[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&aa[i]);\n    }\n    for(i=0;i<a;i++)\n    {\n        if(i<b)p=0;\n        else p=i-b;\n        if(i+c<=a-1) k=i+c;\n        else k=a-1;\n        for(j=p;j<=k;j++)\n        {\n            if(aa[i]==aa[j])\n            {\n                continue;\n            }\n            if(aa[i]<aa[j])\n            {\n                y=0;\n            }\n            else\n            {\n                y=1;\n                break;\n            }\n        }\n        if(y==0)\n        {\n            printf(\"%d\",i+1);\n            return 0;\n        }\n    }\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n    int a,b,c,i,j,p=0,k=0,y=0;\n    scanf(\"%d %d %d\",&a,&b,&c);\n    int aa[a];\n    for(i=0;i<a;i++)\n    {\n        scanf(\"%d\",&aa[i]);\n    }\n    for(i=0;i<a;i++)\n    {\n        if(i<b)p=0;\n        else p=i-b;\n        if(i+c<=a-1) k=i+c;\n        else k=a-1;\n        for(j=p;j<=k;j++)\n        {\n            if(aa[i]==aa[j])\n            {\n                continue;\n            }\n            if(aa[i]<aa[j])\n            {\n                y=0;\n            }\n            else\n            {\n                y=1;\n                break;\n            }\n        }\n        if(y==0)\n        {\n            printf(\"%d\",i+1);\n            return 0;\n        }\n        y=0;\n    }\n}\n"}
{"similarity_score": 0.8579040852575488, "equal_cnt": 6, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C", "fix_code_uid": "242b2f716e9d5ec0777388a3f0b6b667", "bug_code_uid": "08f079b73aab14e57116072112a2571d", "src_uid": "dcca7c58ba7111125608f659a577c3a2", "apr_id": "256fb2c5376dccf5fa35b97f690ec54e", "difficulty": 1100, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint time(int h, int m) {\n\treturn m+h*60;\n}\n\nint main(void) {\n\tint n, s;\n\tscanf(\"%d %d\",&n, &s);\n\tint t[n];\n\tfor (int i=0;i<n;++i) {\n\t\tint h,m;\n\t\tscanf(\"%d %d\",&h,&m);\n\t\tt[i] = time(h,m);\n\t}\n\tint ans = t[n-1]+1+s;\n\tfor (int i=0;i<n;++i) {\n\t\tif (i == 0) {\n\t\t\tif (t[0] >= s+1) {\n\t\t\t\tans = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (i == n-1) {\n\t\t\tans = t[i] + 1 + s;\n\t\t\tbreak;\n\t\t} else {\n\t\t\tif (t[i+1] - t[i] >= 2*(s+1)) {\n\t\t\t\tans = t[i]+1+s;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tint x = ans/60;\n\tint y = ans%60;\n\tprintf(\"%d %d\",x,y);\n\treturn 0;\n}", "fixed": "#include <stdio.h>\n#define _min(a,b) (a>=b?b:a)\n\nint time(int h, int m) {\n\treturn m+h*60;\n}\n\nint main(void) {\n\tint n, s;\n\tscanf(\"%d %d\",&n, &s);\n\tint t[n];\n\tfor (int i=0;i<n;++i) {\n\t\tint h,m;\n\t\tscanf(\"%d %d\",&h,&m);\n\t\tt[i] = time(h,m);\n\t}\n\tint ans = t[n-1]+1+s;\n\tfor (int i=0;i<n;++i) {\n\t\tif (i == 0) {\n\t\t\tif (t[0] >= s+1) {\n\t\t\t\tans = _min(ans, 0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} \n\t\tif (i == n-1) {\n\t\t\tans = _min(ans, t[i]+1+s);\n\t\t} \n\t\tif (i+1 < n) {\n\t\t\tif (t[i+1] - t[i] >= 2*(s+1)) {\n\t\t\t\tans = _min(ans, t[i]+1+s);\n\t\t\t}\n\t\t}\n\t}\n\tint x = ans/60;\n\tint y = ans%60;\n\tprintf(\"%d %d\",x,y);\n\treturn 0;\n}"}
{"similarity_score": 0.6270627062706271, "equal_cnt": 6, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "0c42b11fe42b4b1c1284d31787c4bbb7", "bug_code_uid": "6b3c65f7033d997b706f8820142dd898", "src_uid": "c0ad2a6d14b0c9e09af2221d88a34d52", "apr_id": "ec0e7b293ad93ec5cf90cbaab19e42b6", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#inlcude <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for(int i = 0; i < n; i ++)\r\n    {\r\n        int r, b, d;\r\n        scanf(\"%d%d%d\", &r, &b, &d);\r\n        b = (b + 1) / r;\r\n        if(abs(r - b) <= d)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n } ", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    for(int i = 0; i < n; i ++)\r\n    {\r\n        int r, b, d;\r\n        scanf(\"%d%d%d\", &r, &b, &d);\r\n        if(r > b)\r\n        {\r\n            if(r % b != 0)\r\n            {\r\n                r = r / b + 1;\r\n            }\r\n            else\r\n            {\r\n                r = r / b;\r\n            }\r\n            b = 1;\r\n        }\r\n        else if(r < b)\r\n        {\r\n            if(b % r != 0)\r\n            {\r\n                b = b / r + 1;\r\n            }\r\n            else\r\n            {\r\n                b = b / r; \r\n            }\r\n            r = 1;\r\n        }\r\n        if(abs(r - b) <= d)\r\n        {\r\n            printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n } "}
{"similarity_score": 0.9986486486486487, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "c01955764216bd690106bbc29a27e565", "bug_code_uid": "de19e3e3a0ae7bf188a1b5d60b8222eb", "src_uid": "56197d2468d8515e520c0d925874bf3b", "apr_id": "820f13134a954e7148004c3c26acd2f9", "difficulty": 800, "tags": ["greedy"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\r\n#include <stdlib.h>\r\nvoid loki()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int i,n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        int b[n];\r\n        for(i=0;i,n;i++)\r\n        scanf(\"%d\",&b[i]);\r\n        int temp,maxa=0,maxb=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(a[i]<b[i])\r\n            {\r\n                temp=a[i];\r\n                a[i]=b[i];\r\n                b[i]=temp;\r\n            }\r\n            if(a[i]>maxa)\r\n            maxa=a[i];\r\n            if(b[i]>maxb)\r\n            maxb=b[i];\r\n        }\r\n        long long int result=maxa*maxb;\r\n        printf(\"%lld\\n\",result);\r\n    }\r\n}\r\nint main()\r\n{\r\n    loki();\r\n}", "fixed": "#include <stdio.h>\r\n#include <stdlib.h>\r\nvoid loki()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int i,n;\r\n        scanf(\"%d\",&n);\r\n        int a[n];\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        int b[n];\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%d\",&b[i]);\r\n        int temp,maxa=0,maxb=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(a[i]<b[i])\r\n            {\r\n                temp=a[i];\r\n                a[i]=b[i];\r\n                b[i]=temp;\r\n            }\r\n            if(a[i]>maxa)\r\n            maxa=a[i];\r\n            if(b[i]>maxb)\r\n            maxb=b[i];\r\n        }\r\n        long long int result=maxa*maxb;\r\n        printf(\"%lld\\n\",result);\r\n    }\r\n}\r\nint main()\r\n{\r\n    loki();\r\n}"}
{"similarity_score": 0.8849056603773585, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "23d49e4356d6d36d0ffb6773cf91b12d", "bug_code_uid": "0f946c483922ac089dab067d7f965f5d", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "67c46322d3ab9bbf2ac6424c3b811cba", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "# include <stdio.h>\r\n\r\nint main () {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for(int i = 1;i <= t; i++){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int countOdd = 0;\r\n        for (int j = 1; j <= 2 * n; j++){\r\n            int a;\r\n            scanf(\"%d\", &a);\r\n\r\n            if (a % 2 != 0)\r\n                countOdd += 1;\r\n        }\r\n        if (countOdd >= n && (countOdd - n) % 2 == 0)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n", "fixed": "# include <stdio.h>\r\n\r\nint main () {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n\r\n    for(int i = 1;i <= t; i++){\r\n        int n;\r\n        scanf(\"%d\", &n);\r\n\r\n        int countOdd = 0;\r\n        int countEven = 0;\r\n        for (int j = 1; j <= 2 * n; j++){\r\n            int a;\r\n            scanf(\"%d\", &a);\r\n\r\n            if (a % 2 != 0)\r\n                countOdd += 1;\r\n            else\r\n                countEven += 1;\r\n        }\r\n        if (countOdd == countEven)\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n"}
{"similarity_score": 0.7549019607843137, "equal_cnt": 12, "replace_cnt": 8, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 12, "lang": "GNU C11", "fix_code_uid": "50bb90a71863c3ed0129489bef911058", "bug_code_uid": "46099c62d1c83d0e289bf548bccb530c", "src_uid": "2545b6af730f99193041a8810b728cb3", "apr_id": "569bf4a8ab36f1d542dc5e064010dc36", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n    int i,a[205],n,k;\n    scanf(\"%d\",&n);\n    for(i=0;i<2*n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    scanf(\"%d\",&k);\n    for(i=1;i<2*n;i=i+2)\n    {\n        if(k>a[i])\n            n--;\n    }\n    printf(\"%d\\n\",n);\n    return 0;\n}", "fixed": "#include<stdio.h>\nint main()\n{\n    int i,a[105],b[105],n,m,k;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        scanf(\"%d\",&b[i]);\n    }\n    scanf(\"%d\",&k);\n    for(i=0;i<n;i++)\n    {\n        if(k>=a[i] && k<=b[i])\n        {\n           m=n-i;\n           break;\n        }\n    }\n    printf(\"%d\\n\",m);\n    return 0;\n}\n"}
{"similarity_score": 0.8355464759959143, "equal_cnt": 8, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 3, "fix_ops_cnt": 7, "lang": "GNU C11", "fix_code_uid": "5c350b5168b9de306959715972f01eec", "bug_code_uid": "485c5ca6c6c4ded90d83b35942d1fee1", "src_uid": "3ea971165088fae130d866180c6c868b", "apr_id": "72990e385c99a1d32583c3f0106165de", "difficulty": 800, "tags": ["number theory", "math"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<math.h>\nint main()\n{   int n,n1,n2,h,i,t;\n    scanf(\"%d\",&n);\n    h=0;i=4;\n    while(h==0)\n    {\n        n1=i;\n        n2=(n-n1);\n        t=0;\n        for(i=1;(i<=sqrt(n1))&&t<2;i++)\n        if(n1%i==0)\n        t++;\n        if(t<2)\n        {\n        t=0;\n        for(i=1;(i<=sqrt(n2))&&t<2;i++)\n        if(n2%i==0)\n        t++;\n        if(t<2)\n        {\n            h=1;\n        }\n        }\n        i++;\n        \n       \n        \n    }\n    printf(\"%d %d\",n1,n2);\n}", "fixed": "#include<stdio.h>\n#include<math.h>\nint main()\n{   int n,h,i1,n1,n2,t,i;\n    scanf(\"%d\",&n);\n    h=0;i1=4;\n    while(h==0)\n    {\n        n1=i1;\n        n2=(n-n1);\n        t=0;\n        for(i=1;(i<=sqrt(n1))&&t<2;i++)\n        if(n1%i==0)\n        t++;\n        if(t>1)\n        {\n         t=0;\n        for(i=1;(i<=sqrt(n2))&&t<2;i++)\n        if(n2%i==0)\n        t++;\n        if(t>1)\n        h=1;\n        else\n        i1++;\n        }\n        else\n        i1++;\n    }\n    printf(\"%d %d\",n1,n2);\n}"}
{"similarity_score": 0.34146341463414637, "equal_cnt": 15, "replace_cnt": 12, "delete_cnt": 0, "insert_cnt": 4, "fix_ops_cnt": 16, "lang": "GNU C11", "fix_code_uid": "87b3ae42d69e010a1e3572e071ab7c12", "bug_code_uid": "7ef9110440d5d651f2f63e4ecbd011db", "src_uid": "f80dea1e07dba355bfbefa4ff65ff45a", "apr_id": "0a3021770fa7446d1d15cd38453610ee", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nlong int ss(long int a,long int b,long int c){\n    if(a<b&&a<c){\n        if(b>=c){\n            return b-a+1;\n        }else return c-a+1;\n    }else if(a<b&&a>=c){\n        return b-a+1;\n    }else if(a<c&&a>=b){\n        return c-a+1;\n    }else if(a==b&&a==c&&b==c){\n        return 1;\n    }else return 0;\n    \n}\nint main(){\n    long int n,a,b,c;\n    scanf(\"%d\",&n);\n    while(n--){\n        scanf(\"%ld%ld%ld\",&a,&b,&c);\n        printf(\"%ld %ld %ld\\n\",ss(a,b,c),ss(b,a,c),ss(c,a,b));\n    }\n}\n   \t\t \t\t \t  \t\t\t\t\t\t   \t  \t\t\t \t\t", "fixed": "//Elections\n#include<stdio.h>\nint _max(int x,int y)\n{\n    return x>y? x:y;\n}\nint solu(int x,int y,int z)\n{\n    if(x>y&&x>z) return 0;\n    return _max(y,z)+1-x;\n}\nint main()\n{\n    int max=0;\n    int a,b,c;\n    int n;\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        printf(\"%d %d %d\\n\",solu(a,b,c),solu(b,a,c),solu(c,a,b));\n    }\n    return 0;\n}\n  \t   \t\t\t \t\t \t\t\t \t  \t  \t\t    \t"}
{"similarity_score": 0.7543554006968641, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "e5348411e273e4aa525507dd3997ac26", "bug_code_uid": "85989acab50a4eca741fd631c4067d7b", "src_uid": "d4f4d6341f52cceb862faa89e85a42a3", "apr_id": "dbea4827d700fe75c8fb6c578600fcdf", "difficulty": 900, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#define __USE_MINGW_ANSI_STDIO 0\r\n#include <stdio.h>\r\n\r\nvoid testcase() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    if (n % 2 == 0) {\r\n        printf(\"2 %d 1\\n\", n - 3);\r\n    } else {\r\n        --n;\r\n        // n is even now\r\n        // express as a sum of 2 primes.\r\n        printf(\"%d %d 1\\n\", n / 2 + 1, n / 2 - 1);\r\n    }\r\n    return;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; ++i) testcase();\r\n    return 0;\r\n}", "fixed": "#define __USE_MINGW_ANSI_STDIO 0\r\n#include <stdio.h>\r\n\r\ntypedef long long ll;\r\nll gcd(ll a, ll b) {\r\n    return b ? gcd (b, a % b) : a;\r\n}\r\n\r\nvoid testcase() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    if (n % 2 == 0) {\r\n        printf(\"2 %d 1\\n\", n - 3);\r\n    } else {\r\n        --n;\r\n        // n is even now. last num is 1. get 2 coprime numbers to add to this. 3 and 9, 5 and 7\r\n        int i = 3;\r\n        for (; ; i += 2) {\r\n            if (gcd(i, n - i) == 1) break;\r\n        }\r\n        // express as a sum of 2 primes.\r\n        printf(\"%d %d 1\\n\", i, n - i);\r\n    }\r\n    return;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; ++i) testcase();\r\n    return 0;\r\n}"}
{"similarity_score": 0.5055165496489469, "equal_cnt": 7, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "9b57bf08679de508f74c7fb28eabfddd", "bug_code_uid": "ff59d7a44de4eaca08b1b0354474a71d", "src_uid": "7899a22cee29bb96d671f6188f246c21", "apr_id": "ef7be668ef6e7ec737d72cd0d2134430", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "TIME_LIMIT_EXCEEDED", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(void)\n{\n    int n,i,t[100001][2],j,h,a[100001];\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d %d\",&t[i][1],&t[i][2]);\n            a[i]=0;\n        }\n        h=n-1;\n        for(i=0;i<n;i++)\n            for(j=0;j<n;j++)\n            {\n                if(i!=j)\n                {\n                   if(t[i][2]==t[j][1])\n                      a[i]++;\n                }\n            }\n        for(i=0;i<n;i++)\n            printf(\"%d %d\\n\",h+a[i],h-a[i]);\n    }\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n\nint main(void)\n{\n    int n,i,t[100001][2],h,a[100001][2];\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        for(i=0;i<100001;i++)\n            a[i][0]=a[i][1]=0;\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d %d\",&t[i][0],&t[i][1]);\n            a[ t[i][0] ][0]++;\n            a[ t[i][1] ][1]++;\n        }\n        h=n-1;\n        for(i=0;i<n;i++)\n            printf(\"%d %d\\n\",h+a[t[i][1]][0],h-a[t[i][1]][0]);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9970414201183432, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "9e21fe87b5a837552ba06f02067fd89c", "bug_code_uid": "882d7a9827ba0c759045f8a291d4d6e6", "src_uid": "df92643983d6866cfe406f2b36bec17f", "apr_id": "6cb6203212f8740dca5d84cabf44b436", "difficulty": 1500, "tags": ["number theory", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    if(n < 2) {\n        puts(\"-1\");\n        return 0;\n    }\n    long long m = (long long)n * n;\n    if(m & 1) {\n        printf(\"%I64d %I64d\\n\", (m - 1) / 2, (m + 1) / 2);\n    } else {\n        printf(\"%I64d %I64d\\n\", (m / 2 - 2) / 2, (m / 2 + 2) / 2);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    if(n < 3) {\n        puts(\"-1\");\n        return 0;\n    }\n    long long m = (long long)n * n;\n    if(m & 1) {\n        printf(\"%I64d %I64d\\n\", (m - 1) / 2, (m + 1) / 2);\n    } else {\n        printf(\"%I64d %I64d\\n\", (m / 2 - 2) / 2, (m / 2 + 2) / 2);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9209209209209209, "equal_cnt": 3, "replace_cnt": 3, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "85357255ba9841f98af8b0d601e4a96d", "bug_code_uid": "c331c3eea7537e387d518df4e25d4ddf", "src_uid": "aa31a2a1ad1575aee051ddee8642c53a", "apr_id": "b09b6a117e6e1f50dfadb057eb9b5eb2", "difficulty": 1200, "tags": ["implementation", "greedy", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\n\nint main(){\n\tint e,n,i,t, e1, e2, s1, s2;\n\tscanf(\"%d\", &t);\n\tscanf(\"%d\", &e1);\n\tscanf(\"%d\", &e2);\n\tscanf(\"%d\", &s1);\n\tscanf(\"%d\", &s2);\n\n\tchar v[t];\n\tscanf(\"%s\", v);\n\n\te=s1-e1;\n\tn=s2-e2;\n\n\tfor(i=0;i<t;i++){\n\t\tif(e==0 && n==0){\n\t\t\tprintf(\"%d\", i);\n\t\t\treturn 0;\n\t\t}else if(e>0 && v[i]=='E'){\n\t\t\te--;\n\t\t}else if(e<0 && v[i]=='W'){\n\t\t\te++;\n\t\t}else if(n>0 && v[i]=='N'){\n\t\t\tn--;\n\t\t}else if(n<0 && v[i]=='S'){\n\t\t\tn++;\n\t\t}\n\n\t}\n\tprintf(\"%d\", -1);\n\treturn 0;\n}", "fixed": "#include<stdio.h>\n\nint main(){\n\tint e,n,i,t, e1, e2, s1, s2;\n\tscanf(\"%d\", &t);\n\tscanf(\"%d\", &e1);\n\tscanf(\"%d\", &e2);\n\tscanf(\"%d\", &s1);\n\tscanf(\"%d\", &s2);\n\n\tchar v[t];\n\tscanf(\"%s\", v);\n\n\te=s1-e1;\n\tn=s2-e2;\n\n\tfor(i=0;i<t;i++){\n\t\tif(e==0 && n==0){\n\t\t\tprintf(\"%d\", i);\n\t\t\treturn 0;\n\t\t}else if(e>0 && v[i]=='E'){\n\t\t\te--;\n\t\t}else if(e<0 && v[i]=='W'){\n\t\t\te++;\n\t\t}else if(n>0 && v[i]=='N'){\n\t\t\tn--;\n\t\t}else if(n<0 && v[i]=='S'){\n\t\t\tn++;\n\t\t}\n\t\tif(e==0 && n==0){\n\t\t\tprintf(\"%d\", i+1);\n\t\t\treturn 0;\n\t\t}\n\n\t}\n\tprintf(\"%d\", -1);\n\treturn 0;\n}"}
{"similarity_score": 0.9969650986342944, "equal_cnt": 3, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "37a5a21691f071f31b5467b6ce954e6b", "bug_code_uid": "3b9dca1e096d2f45b8e4c2c88ff41b3f", "src_uid": "49a78893ea2849aa59647846b4eaba7c", "apr_id": "3f30cdf03cbafee53760813ffa14a03b", "difficulty": 2600, "tags": ["graphs"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n\nint n,a[200010],b[200010],c[200010],p[200010];\nvoid dfs(int k,int col);\n\nint main(void)\n{\n    //freopen(\"party.in\",\"r\",stdin);\n    //freopen(\"party.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    int i;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n        p[a[i]]=b[i];  p[b[i]]=a[i];\n    }\n    memset(c,0,sizeof(c));\n    for(i=1;i<=n;i++)\n        if(!c[i]) dfs(i,1);\n    for(i=1;i<=n;i++)\n        printf(\"%d %d\\n\",c[a[i]],c[b[i]]);\n    return 0;\n}\n\nvoid dfs(int k,int col)\n{\n    c[k]=col+1;\n    if(!c[((k-1)^1)+1])\n        dfs(((k-1)^1)+1,col^1);\n    else if(!c[p[k]]) dfs(p[k],col^1);\n    else return;\n}\n", "fixed": "#include <stdio.h>\n#include <string.h>\n\nint n,a[200010],b[200010],c[200010],p[200010];\nvoid dfs(int k,int col);\n\nint main(void)\n{\n    //freopen(\"party.in\",\"r\",stdin);\n    //freopen(\"party.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    int i;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n        p[a[i]]=b[i];  p[b[i]]=a[i];\n    }\n    memset(c,0,sizeof(c));\n    for(i=1;i<=n*2;i++)\n        if(!c[i]) dfs(i,0);\n    for(i=1;i<=n;i++)\n        printf(\"%d %d\\n\",c[a[i]],c[b[i]]);\n    return 0;\n}\n\nvoid dfs(int k,int col)\n{\n    c[k]=col+1;\n    if(!c[((k-1)^1)+1])\n        dfs(((k-1)^1)+1,col^1);\n    else if(!c[p[k]]) dfs(p[k],col^1);\n    else return;\n}\n"}
{"similarity_score": 0.9452449567723343, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "805e32a07832c8fca55ecc492cc2a26f", "bug_code_uid": "5e811c9e9d8a43f7409c212d5fa432c7", "src_uid": "3d648acee2abbf834f865b582aa9b7bc", "apr_id": "30e22c7a880824101e985bb6ccab3c77", "difficulty": 1100, "tags": ["data structures", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\nlong int n,x,i,k;\nscanf(\"%ld\",&n);k=n;\n//t=(long int*)malloc(n*sizeof(long int));\nlong int t[n];\nfor(i=0;i<n;i++){\n\tscanf(\"%ld\",&x);\n\tif(x==k) {printf(\"%d\",k);\n\t\t\t\tk--;\n\t\t\t\twhile(t[k]==1)\n\t\t\t\t {printf(\" %d\",k);k--;\n\t\t\t\t }\n\t}else {printf(\"\\n\");\n\t\t\tt[x]=1;\n\t}\n}\n\t\n\t\n\t\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\nint main(){\nlong int n,x,i,k;\nscanf(\"%ld\",&n);k=n;\n//t=(long int*)malloc(n*sizeof(long int));\nlong int t[n];\nfor(i=0;i<n;i++) t[i]=0;\nfor(i=0;i<n;i++){\n\tscanf(\"%ld\",&x);\n\tif(x==k) {printf(\"%d\",k);\n\t\t\t\tk--;\n\t\t\t\twhile(t[k]==1)\n\t\t\t\t {printf(\" %d\",k);k--;\n\t\t\t\t }printf(\"\\n\");\n\t}else {printf(\"\\n\");\n\t\t\tt[x]=1;\n\t}\n}\n\t\n\t\n\t\n\treturn 0;\n}\n"}
{"similarity_score": 0.3945578231292517, "equal_cnt": 15, "replace_cnt": 9, "delete_cnt": 2, "insert_cnt": 4, "fix_ops_cnt": 15, "lang": "GNU C", "fix_code_uid": "a2cb152078a406680f99e894952b9ff6", "bug_code_uid": "8bd9ae920bc7476b55f97dc42d7cf458", "src_uid": "fa7a44fd24fa0a8910cb7cc0aa4f2155", "apr_id": "a7c4e30a354a8d8d0fd7f349e8339ad8", "difficulty": 900, "tags": ["greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nmain()\n{\nint i,j,c=0,d=0;\nscanf(\"%d\",&j);\nchar a[j];\ngets(a);\nfor(i=0;i<strlen(a);i++)\n {\n   if(a[i]=='1')\n     {\n       c++;\n     }\n    else\n     {\n       d++;\n     }\n }\nprintf(\"%d\",abs(c-d));\nreturn 0;\n}", "fixed": "#include <stdio.h>\nint main()\n{\n    int n,i,a=0,b=0;\n    scanf(\"%d\\n\",&n);\n    char s[n];\n    gets(s);\n    for(i=0;i<n;i++){\n        if(s[i]=='1') a++;\n        else b++;\n    }\n    printf(\"%d\",abs(a-b));\n    return 0;\n}"}
{"similarity_score": 0.8, "equal_cnt": 20, "replace_cnt": 5, "delete_cnt": 2, "insert_cnt": 12, "fix_ops_cnt": 19, "lang": "GNU C11", "fix_code_uid": "a7064289ea9128aeac5f9a125a51ae5c", "bug_code_uid": "70ed081df0d05d334e488cd16c5a8a9b", "src_uid": "6cebf9af5cfbb949f22e8b336bf07044", "apr_id": "ba28fe508dca29dd4b8ae896cbbac43e", "difficulty": 1300, "tags": ["binary search", "number theory", "implementation", "math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <math.h>\nint main()\n{\n    int n, cnt, a[100000008], j;\n    long long int x, y, i;\n    scanf(\"%d\", &n);\n    for(i = 2; i*i <= 10000007; i++)\n        {\n            if(a[i] == 0)\n            {\n                for(j = 2; i*j <= 100000007; i++)\n                    a[i*j] = 1;\n            }\n        }\n    while(n--)\n    {\n        scanf(\"%lld\", &x);\n        y = sqrt(x);\n        if(y*y == x && a[y] == 0)\n            printf(\"YES\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <math.h>\nint a[10000000];\nint main()\n{\n    int n, i, y;\n    long long int x;\n    a[0] = a[1] = 1;\n    for(i = 2; i*i <= 10000000; i++)\n        {\n            if(a[i] == 0)\n            {\n                for(int j = 2; i*j <= 10000000; j++)\n                {\n                    a[i*j] = 1;\n                }\n            }\n        }\n    scanf(\"%d\", &n);\n    while(n--)\n    {\n        scanf(\"%lld\", &x);\n        y = sqrt(x);\n        if(y==sqrt(x) && a[y] == 0)\n        {\n            printf(\"YES\\n\");\n        }\n        else\n        {\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.9528158295281582, "equal_cnt": 4, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "fd5d41a784137c6ef3cc230de9565299", "bug_code_uid": "619186c7a47126fd2c865b66020fe5ff", "src_uid": "d5bd27c969d9cd910f13baa53c247871", "apr_id": "74c538437afd1e7c5eeaf38102d84972", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{\r\nint i,j,n,t,SET[100],even=0,odd=0;\r\nscanf(\"%d\",&t);\r\nfor(j=0;j<t;j++){\r\nscanf(\"%d\",&n);\r\nfor(i=0;i<2*n;i++){\r\nscanf(\"%d\",&SET[i]);\r\nif(SET[i]%2==0)\r\n    {\r\n      even++;\r\n    }\r\nelse\r\n    odd++;\r\n}\r\nif(even==odd)\r\n    {\r\n      printf(\"Yes \\n\") ;\r\n   }\r\n else\r\n   printf(\"No\\n\");\r\n}\r\n}\r\n\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{\r\nint i,j,n,t,SET[200],even,odd;\r\nscanf(\"%d\",&t);\r\nfor(j=0;j<t;j++){\r\neven=0;\r\nodd=0;\r\nscanf(\"%d\",&n);\r\nfor(i=0;i<2*n;i++){\r\nscanf(\"%d\",&SET[i]);\r\nif(SET[i]%2==0)\r\n    {\r\n      even++;\r\n    }\r\nelse\r\n    odd++;\r\n}\r\nif(even==odd)\r\n    {\r\n      printf(\"Yes \\n\") ;\r\n   }\r\n else\r\n   printf(\"No\\n\");\r\n}\r\n}\r\n\r\n"}
{"similarity_score": 0.9985714285714286, "equal_cnt": 2, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C", "fix_code_uid": "dafb7697fcee8aefc153ec9777e3db12", "bug_code_uid": "eef62f86c1a6396a396b24d0f2a67462", "src_uid": "b1f78130d102aa5f425e95f4b5b3a9fb", "apr_id": "e3f5cf0536ce6f8a9947f918449cad32", "difficulty": 1300, "tags": ["implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <string.h>\n//#include <stdlib.h>\n\nint main()\n{\n\t\n\tchar home[22],away[22],team[2],card[2];\n\tint i,t,f1[100]={0},f2[100]={0},temp;\n\tscanf(\"%s%s%d\",home,away,&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%s%d%s\",&i,team,&temp,card);\n\t\tif(team[0]=='a')\n\t\t\t{\n\t\t\t\tif(card[0]=='y')\n\t\t\t\t\tf1[temp]++;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tf1[temp]+=3;\n\t\t\t\t\tif(f1[temp]<5)\n\t\t\t\t\t\tprintf(\"%s %d %d\\n\",away,temp,i);\n\t\t\t\t}\n\t\t\t\tif(f1[temp]==2)\n\t\t\t\t\tprintf(\"%s %d %d\\n\",away,temp,i);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(card[0]=='y')\n\t\t\t\t\tf2[temp]++;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tf2[temp]+=3;\n\t\t\t\t\tif(f1[temp]<5)\n\t\t\t\t\t\tprintf(\"%s %d %d\\n\",home,temp,i);\n\t\t\t\t}\n\t\t\t\tif(f2[temp]==2)\n\t\t\t\t\tprintf(\"%s %d %d\\n\",home,temp,i);\n\t\t\t}\n\n\t}\n\n\treturn 0;\n\n}", "fixed": "#include <stdio.h>\n#include <string.h>\n//#include <stdlib.h>\n\nint main()\n{\n\t\n\tchar home[22],away[22],team[2],card[2];\n\tint i,t,f1[100]={0},f2[100]={0},temp;\n\tscanf(\"%s%s%d\",home,away,&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%s%d%s\",&i,team,&temp,card);\n\t\tif(team[0]=='a')\n\t\t\t{\n\t\t\t\tif(card[0]=='y')\n\t\t\t\t\tf1[temp]++;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tf1[temp]+=3;\n\t\t\t\t\tif(f1[temp]<5)\n\t\t\t\t\t\tprintf(\"%s %d %d\\n\",away,temp,i);\n\t\t\t\t}\n\t\t\t\tif(f1[temp]==2)\n\t\t\t\t\tprintf(\"%s %d %d\\n\",away,temp,i);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(card[0]=='y')\n\t\t\t\t\tf2[temp]++;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tf2[temp]+=3;\n\t\t\t\t\tif(f2[temp]<5)\n\t\t\t\t\t\tprintf(\"%s %d %d\\n\",home,temp,i);\n\t\t\t\t}\n\t\t\t\tif(f2[temp]==2)\n\t\t\t\t\tprintf(\"%s %d %d\\n\",home,temp,i);\n\t\t\t}\n\n\t}\n\n\treturn 0;\n\n}"}
{"similarity_score": 0.9447340980187695, "equal_cnt": 3, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C", "fix_code_uid": "73fbccb22c44f69f819f9676dcb6dc75", "bug_code_uid": "1f5bcd6797e9a4d6cf2bfde92497441c", "src_uid": "bb1e110a7f53e6f7d43ddced7407f3d1", "apr_id": "520a1fddbd7e029f90998e55c0bacb1d", "difficulty": 1500, "tags": ["combinatorics", "greedy"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nchar s[100003];\nint m[100003];\nlong long ans=1;\nint main()\n{\n\tint n=0,k=0,i,j,cnt;\n\tchar c;\n\twhile(c=getchar())\n\t{\n \t\tif(c=='\\n') break;\n\t\ts[n++]=c;\n\t}\n\tfor(i=1;i<n-1;i++)\n\t{\n\t\tif(s[i-1]+s[i]-'0'-'0'==9 && s[i-1]==s[i+1]) \n\t\t{\n\t\t\tcnt=3;\n\t\t\tj=i+1;\n\t\t\twhile(s[j-1]==s[j+1]) j++;\n\t\t\tcnt=cnt+j-i-1;\n\t\t\tm[k++]=cnt;\n\t\t\tcnt=0;\n\t\t\ti=j;\n\t\t} \n\t}\n\tfor(i=0;i<k;i++)\n\t ans*=((m[i]+1)/2);\n \tif(k==1&&(m[0]%2==0)) ans=1;\n    printf(\"%I64d\",ans);\n    return 0;\n}", "fixed": "#include<stdio.h>\n#include<string.h>\nchar s[100003];\nint m[100003];\nlong long ans=1;\nint main()\n{\n\tint n=0,k=0,i,j,cnt;\n\tchar c;\n\twhile(c=getchar())\n\t{\n \t\tif(c=='\\n') break;\n\t\ts[n++]=c;\n\t}\n\tfor(i=1;i<n-1;i++)\n\t{\n\t\tif(s[i-1]+s[i]-'0'-'0'==9 && s[i-1]==s[i+1]) \n\t\t{\n\t\t\tcnt=3;\n\t\t\tj=i+1;\n\t\t\twhile(s[j-1]==s[j+1]) j++;\n\t\t\tcnt=cnt+j-i-1;\n\t\t\tif(cnt%2==0) cnt=1;\n\t\t\tm[k++]=cnt;\n\t\t\tcnt=0;\n\t\t\ti=j;\n\t\t} \n\t}\n\tfor(i=0;i<k;i++)\n\t ans*=((m[i]+1)/2);\n\n    printf(\"%I64d\",ans);\n    return 0;\n}"}
{"similarity_score": 0.996742671009772, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 2, "lang": "GNU C11", "fix_code_uid": "e01dcda7d580aad1a518eb31496e8497", "bug_code_uid": "a8136abbe5b9ef11cbe67ecdf7b43a37", "src_uid": "6451507b21854d5b81aeaf0491ddf584", "apr_id": "0bd3a9b842058fefdafb8eddb564293e", "difficulty": 1100, "tags": ["greedy", "implementation", "data structures", "binary search", "dfs and similar"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint i,s=0,c[2008],j=1;\n\t\tchar s1[200008];\n\t\tchar a;\n\t\tc[0]=0;\n\t\tscanf(\"%s\",s1);\n\t\ti=0;\n\t\twhile(1)\n\t\t{\n\t\t\tif(s1[i]=='\\0')\n\t\t\tbreak;\n\t\t\ts++;\n\t\t\tif(s1[i]=='R')\n\t\t\t{\n\t\t\tc[j]=s;\n\t\t\tj++;\n\t\t    }\n\t\t    i++;\n\t    }\n\t    c[j]=s+1;\n\t    int n;\n\t    n=j+1;\n\t    int max=-1;\n\t    for(i=0;i<n-1;i++)\n\t    {\n\t    \tif((c[i+1]-c[i])>max)\n\t    \tmax=c[i+1]-c[i];\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint i,s=0,c[200008],j=1;\n\t\tchar s1[200008];\n\t\tchar a;\n\t\tc[0]=0;\n\t\tscanf(\"%s\",s1);\n\t\ti=0;\n\t\twhile(1)\n\t\t{\n\t\t\tif(s1[i]=='\\0')\n\t\t\tbreak;\n\t\t\ts++;\n\t\t\tif(s1[i]=='R')\n\t\t\t{\n\t\t\tc[j]=s;\n\t\t\tj++;\n\t\t    }\n\t\t    i++;\n\t    }\n\t    c[j]=s+1;\n\t    int n;\n\t    n=j+1;\n\t    int max=-1;\n\t    for(i=0;i<n-1;i++)\n\t    {\n\t    \tif((c[i+1]-c[i])>max)\n\t    \tmax=c[i+1]-c[i];\n\t\t}\n\t\tprintf(\"%d\\n\",max);\n\t}\n\treturn 0;\n}"}
{"similarity_score": 0.8477987421383648, "equal_cnt": 4, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 2, "fix_ops_cnt": 3, "lang": "GNU C", "fix_code_uid": "ef8096e00b6872bdefd4a407ab95ae11", "bug_code_uid": "56dd41568fe08c9f55d2839176828394", "src_uid": "a74c65acd41ff9bb845062222135c60a", "apr_id": "b79227434789ba7b0380f5c5bc7aa4f0", "difficulty": 900, "tags": ["implementation", "geometry", "brute force"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<stdlib.h>\n#include<float.h>\nint main()\n{\n    int a,b,n,x,y;\n    double v,min_dis=FLT_MAX,dis;\n    scanf(\"%d %d %d\",&a,&b,&n);\n    while(n--)\n    {\n        scanf(\"%d %d %lf\",&x,&y,&v);\n        double vx=abs(a-x),vy=abs(b-y);\n\n        dis=vx/v+vy/v;\n        if(min_dis>dis)\n            min_dis=dis;\n    }\n    printf(\"%.20lf\",min_dis);\n    return 0;\n}\n", "fixed": "#include<stdio.h>\n#include<stdlib.h>\n#include<float.h>\n#include<math.h>\nint main()\n{\n    int a,b,n,x,y;\n    double v,min_dis=FLT_MAX,dis;\n    scanf(\"%d %d %d\",&a,&b,&n);\n    while(n--)\n    {\n        scanf(\"%d %d %lf\",&x,&y,&v);\n        double vx=(a-x)*(a-x),vy=(b-y)*(b-y);\n        dis=sqrt(vx+vy);\n        dis=dis/v;\n        if(min_dis>dis)\n            min_dis=dis;\n    }\n    printf(\"%.20lf\",min_dis);\n    return 0;\n}\n"}
{"similarity_score": 0.24756606397774686, "equal_cnt": 5, "replace_cnt": 4, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 5, "lang": "GNU C11", "fix_code_uid": "4833f213fa9cd7e6448175543616cb9b", "bug_code_uid": "82dd5a77680c084b8b32de0a1d03124c", "src_uid": "5b9aed235094de7de36247a3b2a34e0f", "apr_id": "d70e741a9a1926e233372ecc976b87b4", "difficulty": 800, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nint main(){\n    int n,m,c=0;\n    scanf(\"%d%d\",&n,&m);\n    int a[2*m];\n    int  t = n;\n    while(t--){\n        for(int j=0;j<2*m;j++){\n            scanf(\"%d\",&a[j]);\n        }\n        for(int i =0; i<m*2;i++){\n            if(a[i] == 1){\n                c++;\n                i++;\n            }\n        }\n    }\n    printf(\"%d\",c);\n}", "fixed": "#include<stdio.h>\nint main(){\n    int n,m,c=0,a[100][200];\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++){\n        for(int j=0;j<2*m;j++){\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    for(int i=0;i<n;i++){\n        for(int j=0;j<=(2*m)-1;j+=2){\n            if(a[i][j]==1 || a[i][j+1]==1){\n                c++;\n            }\n        }\n    }\n    printf(\"%d\",c);\n}"}
{"similarity_score": 0.9769585253456221, "equal_cnt": 5, "replace_cnt": 2, "delete_cnt": 1, "insert_cnt": 1, "fix_ops_cnt": 4, "lang": "GNU C", "fix_code_uid": "1ee92f63256649fe5f87c35031f60fe0", "bug_code_uid": "df2cba6df62626adcb54737f8ad080de", "src_uid": "0e99f4a49b408cc8874a6d5ec4167acb", "apr_id": "3bbad3a9007e67ff71c69b21c6018673", "difficulty": 1500, "tags": ["constructive algorithms", "implementation"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,m;\n    scanf(\"%d %d\",&n,&m);\n    if(n>m)n=m;\n    printf(\"%d\\n\",n+1);\n    for(i=0;i<=m;i++)\n    {\n        printf(\"%d %d\\n\",i,n-i);\n    }\n    return 0;\n}\n", "fixed": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int i,n,m;\n    scanf(\"%d %d\",&n,&m);\n    if(n>m)n=m;\n    printf(\"%d\\n\",n+1);\n    for(i=0;n>=0;i++)\n    {\n        printf(\"%d %d\\n\",n--,i);\n    }\n    return 0;\n}\n"}
{"similarity_score": 0.891542288557214, "equal_cnt": 8, "replace_cnt": 2, "delete_cnt": 0, "insert_cnt": 5, "fix_ops_cnt": 7, "lang": "GNU C", "fix_code_uid": "de4c8c4dee50b7ef7c1a947f9a0e6cc2", "bug_code_uid": "edd75e46e808c6aaff5b54b21c9caa18", "src_uid": "41b3e726b8146dc733244ee8415383c0", "apr_id": "f60984c4923d072fb1660fec241d69c0", "difficulty": 1500, "tags": ["dp"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include <stdio.h>\n#define SIZE 100050\n#define max(a,b) (a>b?(a):(b))\nint main(void){\n\tint num[SIZE]={0},n,dp[SIZE][2],temp;\n\tint i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&temp);\n        num[temp]++;}\n\tdp[1][0] = 0;\n\tdp[1][1] = num[1] * 1;\n\tfor(i=2;i<=100000;i++){\n\t\tdp[i][0] = max(dp[i-1][1],dp[i-1][0]);\n\t\tdp[i][1] = dp[i-1][0] + num[i] * i;\n\t}\n\tprintf(\"%d\",dp[100000][0]>dp[100000][1]?dp[100000][0]:dp[100000][1]);\n\t//system(\"pause\");\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n#define SIZE 100050\n#define max(a,b) (a>b?(a):(b))\nint main(void){\n\tlong long int num[SIZE]={0},n,temp;\n\tlong long int dp[SIZE][2];\n\tlong long int i;\n\tmemset(dp,0,sizeof(dp));\n\tscanf(\"%I64d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%I64d\",&temp);\n        num[temp]++;}\n\tdp[1][0] = 0;\n\tdp[1][1] = num[1] * 1;\n\tfor(i=2;i<=100000;i++){\n\t\tdp[i][0] = max(dp[i-1][1],dp[i-1][0]);\n\t\tdp[i][1] = dp[i-1][0] + num[i] * i;\n\t}\n\tprintf(\"%I64d\\n\",dp[100000][0]>dp[100000][1]?dp[100000][0]:dp[100000][1]);\n\t//system(\"pause\");      \n\treturn 0;\n}\n"}
{"similarity_score": 0.9680851063829787, "equal_cnt": 1, "replace_cnt": 1, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "1a59dbb93012846552035213f97cb7e5", "bug_code_uid": "3bb4670dee12f77b6ce46db195af35f3", "src_uid": "905cc16ecbbb3305416f9aa6e4412642", "apr_id": "ed798086b4b2b5f92dde826bcd5c2e9e", "difficulty": 800, "tags": ["constructive algorithms", "greedy", "math"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\nvoid a(int n,int m){\n    if(n==1){\n            printf(\"0\\n\");\n            return;\n    }\n    if(n==2){\n        printf(\"%d\\n\",m);            \n        return;\n    }\n    else{\n        printf(\"%d\\n\",2*m);\n        return;\n    }\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,m,i,j;\n        scanf(\"%d %d\",&n,&m);\n        a(n.m);\n    }\n}", "fixed": "#include<stdio.h>\nvoid a(int n,int m){\n    if(n==1){\n            printf(\"0\\n\");\n            return;\n    }\n    if(n==2){\n        printf(\"%d\\n\",m);            \n        return;\n    }\n    else{\n        printf(\"%d\\n\",2*m);\n        return;\n    }\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n        int n,m,i,j;\n        scanf(\"%d %d\",&n,&m);\n        a(n,m);\n    }\n}"}
{"similarity_score": 0.7945205479452054, "equal_cnt": 7, "replace_cnt": 3, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 6, "lang": "GNU C11", "fix_code_uid": "18f1356b62334715a80f9a5660402d6a", "bug_code_uid": "76d1361ca3c4e317a0f48746f68febc2", "src_uid": "e829ca4438e9cb30ea1c66eea7d5f7a7", "apr_id": "89325bdd7196a19867eedaafb7d3021c", "difficulty": 800, "tags": ["implementation"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include<stdio.h>\r\nint main()\r\n{ \r\n long long i,a,b,c,d,n,count=0,r[n];\r\n scanf(\"%lld\",&n);\r\n for(int i=0;i<n;i++){\r\n scanf(\"%lld %lld %ld %ld\",&a,&b,&c,&d);\r\n if(b>a)count++;\r\n if(c>a)count++;\r\n if(d>a)count++;\r\n r[i]=count;\r\n count=0;\r\n }\r\nfor ( int i = 0; i<n; i++)\r\n{\r\n    printf(\"%lld\\n\",r[i]);\r\n}\r\n\r\n\r\n return 0;\r\n  \r\n}\r\n", "fixed": "#include<stdio.h>\r\nint main()\r\n{ \r\n \r\n long n,i,a,b,c,d,count=0;\r\n \r\n scanf(\"%ld\",&n);\r\n int r[n];\r\n for(int i=0;i<n;i++){\r\n scanf(\"%ld %ld %ld %ld\",&a,&b,&c,&d);\r\n if(b>a)count++;\r\n if(c>a)count++;\r\n if(d>a)count++;\r\n r[i]=count;\r\n count=0;\r\n }\r\nfor ( int i = 0; i<n; i++)\r\n{\r\n    printf(\"%d\\n\",r[i]);\r\n}\r\n\r\n\r\n return 0;\r\n  \r\n}\r\n"}
{"similarity_score": 0.6605504587155964, "equal_cnt": 7, "replace_cnt": 6, "delete_cnt": 0, "insert_cnt": 0, "fix_ops_cnt": 6, "lang": "GNU C", "fix_code_uid": "aa2e40aa6c547f8c18a29ee35c4364a8", "bug_code_uid": "702903cfc407dfca617f6feec4afe2fa", "src_uid": "e702594a8e993e135ea8ca78eb3ecd66", "apr_id": "6a3cb0cbe3c32dd9ab361d6030a096a1", "difficulty": 1100, "tags": ["implementation", "sortings"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\nint n,a,b,mx,mn=2147483647,ind=-1,i;\nint main()\n{\n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a,&b);\n        if(a<=mn && b>=mx)\n        {\n            mn=a;   mx=b;\n            ind=i+1;\n        }\n    }\n    printf(\"%d\\n\",ind);\n    return 0;\n}\n", "fixed": "#include <stdio.h>\nint n,a[100005],b[100005],mx,mn=2147483647,ind=-1,i;\nint main()\n{\n    scanf(\"%d\",&n);\n    \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&a[i],&b[i]);\n        if(a[i]<=mn)mn=a[i];\n        if(b[i]>=mx)mx=b[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a[i]==mn && b[i]==mx)    {ind=i+1;break;}\n    }\n    printf(\"%d\\n\",ind);\n    return 0;\n}\n"}
{"similarity_score": 0.9820627802690582, "equal_cnt": 5, "replace_cnt": 1, "delete_cnt": 1, "insert_cnt": 2, "fix_ops_cnt": 4, "lang": "GNU C11", "fix_code_uid": "fcc55daf644eba2e714ffe518bd30e26", "bug_code_uid": "558c527f7a45b3dc5ff9671e948ddc08", "src_uid": "ec89860dacb5a11b3a2273d2341b07a1", "apr_id": "42debe3eb7ab3f57f02478c901965784", "difficulty": 800, "tags": ["math"], "bug_exec_outcome": "RUNTIME_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\n\n#include<math.h>\n\nint main()\n{\n    int t,i;\n    double a,b;\n    scanf(\"%d\",t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%lf\",&a);\n        b=ceil(a/2);\n        printf(\"%lf\\n\",b);\n    }\n    return 0;\n\n\n}\n", "fixed": "#include<stdio.h>\n\n#include<math.h>\n\nint main()\n{\n    int t,i,b;\n    double a;\n    scanf(\"%d\",&t);\n    for(i=1;i<=t;i++)\n    {\n        scanf(\"%lf\",&a);\n        b=ceil(a/2);\n        printf(\"%d\\n\",b);\n    }\n    return 0;\n\n\n}\n"}
{"similarity_score": 0.9978768577494692, "equal_cnt": 2, "replace_cnt": 0, "delete_cnt": 0, "insert_cnt": 1, "fix_ops_cnt": 1, "lang": "GNU C11", "fix_code_uid": "87ac122cb36496f6347b8105225d621d", "bug_code_uid": "10cf6646f58dffedc59f5226a1a7c768", "src_uid": "3a767b3040f44e3e2148cdafcb14a241", "apr_id": "fd7d3e38e9868cf19bb295546778c67e", "difficulty": 1100, "tags": ["games", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "insert", "lang_cluster": "C", "problem": "#include<stdio.h>\ntypedef long long l;\n\nint main()\n{\n\tint n;\n\tl num,sum = 0;\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i < n;i++){\n\t\tscanf(\"%I64d\",&num);\n\t\tsum += num;\n\t\tif((sum-i) % 2)\n\t\t\tprintf(\"1\\n\");\n\t\telse\n\t\t\tprintf(\"2\\n\");\n\t}\n\treturn 0;\n}\n", "fixed": "#include<stdio.h>\ntypedef long long l;\n\nint main()\n{\n\tint n;\n\tl num,sum = 0;\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i <= n;i++){\n\t\tscanf(\"%I64d\",&num);\n\t\tsum += num;\n\t\tif((sum-i) % 2)\n\t\t\tprintf(\"1\\n\");\n\t\telse\n\t\t\tprintf(\"2\\n\");\n\t}\n\treturn 0;\n}\n"}
{"similarity_score": 0.5653846153846154, "equal_cnt": 9, "replace_cnt": 5, "delete_cnt": 1, "insert_cnt": 3, "fix_ops_cnt": 9, "lang": "GNU C11", "fix_code_uid": "958fa7ed91d050ea1eb2443aa252cb57", "bug_code_uid": "e9afa80dcc9fd3b4873e5e3c9a598500", "src_uid": "6b94dcd088b0328966b54acefb5c6d22", "apr_id": "ac1312b2900bd854adc16e98b47e07e6", "difficulty": 1200, "tags": ["constructive algorithms", "math"], "bug_exec_outcome": "WRONG_ANSWER", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "replace", "lang_cluster": "C", "problem": "#include <stdio.h>\n\nint main()\n{\n\tint T;\n\tlong long n,k,i, l;\n\n\tscanf(\"%d\", &T);\n\twhile(T--)\n\t{\n\n\t\tscanf(\"%lld %lld\", &n,&k);\n\n\t\tif ( n-k+1 > 0 && (n-k+1)%2==1 )\n\t\t{\t\n\t\t\tprintf(\"Yes\\n\");\n\t\t\tprintf(\"%lld \", n-k+1 );\n\t\t\tfor ( i = 0; i < k-1; i++)\n\t\t\t{\n\t\t\t\tprintf(\"1%c\",\" \\n\"[i==k-2]);\n\t\t\t}\n\t\t}\n\t\telse if ( n-(2*(k-1)) > 0 && (n-(2*(k-1)))%2==0 )\n\t\t{\n\t\t\t\n\t\t\tprintf(\"%lld \",n-(2*(k-1)) );\n\t\t\tfor (int i = 0; i < k-1; i++)\n\t\t\t{\n\t\t\t\tprintf(\"2%c\", \" \\n\"[i==k-2]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tprintf(\"No\\n\");\n\t}\n\t\t\n\n\treturn 0;\n}\n", "fixed": "#include <stdio.h>\n\nint main()\n{\n\tint T;\n\tlong long n,k,i, l;\n\n\tscanf(\"%d\", &T);\n\twhile(T--)\n\t{\n\n\t\tscanf(\"%lld %lld\", &n,&k);\n\n\t\tif ( n-k+1 > 0 && (n-k+1)%2==1 )\n\t\t{\t\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%lld \", n-k+1 );\n\t\t\tfor ( i = 0; i < k-1; i++)\n\t\t\t{\n\t\t\t\tprintf(\"1%c\",\" \\n\"[i==k-2]);\n\t\t\t}\n\t\t}\n\t\telse if ( n-(2*(k-1)) > 0 && (n-(2*(k-1)))%2==0 )\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\tprintf(\"%lld \",n-(2*(k-1)) );\n\t\t\tfor (int i = 0; i < k-1; i++)\n\t\t\t{\n\t\t\t\tprintf(\"2%c\", \" \\n\"[i==k-2]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\t\t\n\n\treturn 0;\n}\n"}
{"similarity_score": 0.9331259720062208, "equal_cnt": 4, "replace_cnt": 0, "delete_cnt": 2, "insert_cnt": 1, "fix_ops_cnt": 3, "lang": "GNU C11", "fix_code_uid": "c54ddf3fb0e24f53fd149dc128d06b3d", "bug_code_uid": "6b67d5486863192179077bf5b0e2f103", "src_uid": "08679e44ee5d3c3287230befddf7eced", "apr_id": "027c74ad03068e60aa33a04bfb141d92", "difficulty": 800, "tags": ["implementation", "strings"], "bug_exec_outcome": "COMPILATION_ERROR", "fix_exec_outcome": "PASSED", "potential_dominant_fix_op": "delete", "lang_cluster": "C", "problem": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint t,i;\n\tscanf(\"%d\",&t);\n\tchar str1[3]=\"yes\";\n\tchar str2[3]=\"no\";\n\tfor(i=0;i<t;i++){\n\t\tint i,j=0;\n\t\tchar a[101],b[101],c[101];\n\t\tscanf(\"%s %s %s\",a,b,c);\n\t\tfor(i=0;i<strlen(a);i++){\n\t\t\t\tif(a[i]==c[i] || b[i]==c[i])\n\t\t\t\t\tj++;\n\t\t}\n\t\tprintf(\"%s\",(j==strlen(a)?(\"yes\":\"no\"));\n\t}\n\treturn 0;\n}\n\n\n", "fixed": "#include<stdio.h>\n#include<string.h>\nint main(){\n\tint t,i;\n\tscanf(\"%d\",&t);\n\t\tfor(i=0;i<t;i++){\n\t\tint i,j=0;\n\t\tchar a[101],b[101],c[101];\n\t\tscanf(\"%s %s %s\",a,b,c);\n\t\tfor(i=0;i<strlen(a);i++){\n\t\t\t\tif(a[i]==c[i] || b[i]==c[i])\n\t\t\t\t\tj++;\n\t\t}\n\t\tprintf(\"%s\\n\",(j==strlen(a)?\"yes\":\"no\"));\n\t}\n\treturn 0;\n}\n\n\n"}
